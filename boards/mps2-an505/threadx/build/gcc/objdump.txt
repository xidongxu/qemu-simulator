
.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10003ab1 			; <UNDEFINED> instruction: 0x10003ab1
10000008:	10003b05 	andne	r3, r0, r5, lsl #22
1000000c:	10003b21 	andne	r3, r0, r1, lsr #22
10000010:	10003b05 	andne	r3, r0, r5, lsl #22
10000014:	10003b05 	andne	r3, r0, r5, lsl #22
10000018:	10003b05 	andne	r3, r0, r5, lsl #22
1000001c:	10003b05 	andne	r3, r0, r5, lsl #22
	...
1000002c:	10003a79 	andne	r3, r0, r9, ror sl
10000030:	10003b05 	andne	r3, r0, r5, lsl #22
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10003a31 	andne	r3, r0, r1, lsr sl
1000003c:	100038b9 			; <UNDEFINED> instruction: 0x100038b9
10000040:	10003b05 	andne	r3, r0, r5, lsl #22
10000044:	10003b05 	andne	r3, r0, r5, lsl #22
10000048:	10003b05 	andne	r3, r0, r5, lsl #22
1000004c:	10003b05 	andne	r3, r0, r5, lsl #22
10000050:	10003b05 	andne	r3, r0, r5, lsl #22
10000054:	10003b05 	andne	r3, r0, r5, lsl #22
10000058:	10003b05 	andne	r3, r0, r5, lsl #22
1000005c:	10003b05 	andne	r3, r0, r5, lsl #22
10000060:	10003b05 	andne	r3, r0, r5, lsl #22
10000064:	10003b05 	andne	r3, r0, r5, lsl #22
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000450 	stmdacc	r0, {r4, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10006054 	andne	r6, r0, r4, asr r0

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000454 	stmdacc	r0, {r2, r4, r6, sl}
100007fc:	10006054 	andne	r6, r0, r4, asr r0

10000800 <main_task_init>:
            counter++;
        }
    }
}

static void main_task_init(void) {
10000800:	b500      	push	{lr}
10000802:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
10000804:	4b0b      	ldr	r3, [pc, #44]	; (10000834 <main_task_init+0x34>)
10000806:	9301      	str	r3, [sp, #4]
10000808:	2301      	movs	r3, #1
1000080a:	9300      	str	r3, [sp, #0]
1000080c:	2300      	movs	r3, #0
1000080e:	f44f 6200 	mov.w	r2, #2048	; 0x800
10000812:	4909      	ldr	r1, [pc, #36]	; (10000838 <main_task_init+0x38>)
10000814:	4809      	ldr	r0, [pc, #36]	; (1000083c <main_task_init+0x3c>)
10000816:	f002 f867 	bl	100028e8 <xTaskCreate>
    if (xReturn == pdPASS) {
1000081a:	2801      	cmp	r0, #1
1000081c:	d006      	beq.n	1000082c <main_task_init+0x2c>
1000081e:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
10000820:	4807      	ldr	r0, [pc, #28]	; (10000840 <main_task_init+0x40>)
10000822:	f001 f977 	bl	10001b14 <printf>
    }
}
10000826:	b003      	add	sp, #12
10000828:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
1000082c:	f002 fc98 	bl	10003160 <vTaskStartScheduler>
10000830:	e7f9      	b.n	10000826 <main_task_init+0x26>
10000832:	bf00      	nop
10000834:	3800046c 	stmdacc	r0, {r2, r3, r5, r6, sl}
10000838:	10005a68 	andne	r5, r0, r8, ror #20
1000083c:	10000941 	andne	r0, r0, r1, asr #18
10000840:	10005a74 	andne	r5, r0, r4, ror sl

10000844 <dump_callstack>:
void dump_callstack(void) {
10000844:	b530      	push	{r4, r5, lr}
10000846:	b0c1      	sub	sp, #260	; 0x104
    unsigned int buffer[FD_STACK_DUMP_DEPTH_MAX] = {0};
10000848:	f44f 7280 	mov.w	r2, #256	; 0x100
1000084c:	2100      	movs	r1, #0
1000084e:	4668      	mov	r0, sp
10000850:	f003 fa0c 	bl	10003c6c <memset>
    unsigned int point = fault_dump_bm_stack_point();
10000854:	f001 fb1e 	bl	10001e94 <fault_dump_bm_stack_point>
10000858:	4604      	mov	r4, r0
    unsigned int start = fault_dump_bm_stack_start();
1000085a:	f001 fb1f 	bl	10001e9c <fault_dump_bm_stack_start>
1000085e:	4603      	mov	r3, r0
    int count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, (unsigned int*)point, (unsigned int*)start);
10000860:	4622      	mov	r2, r4
10000862:	2140      	movs	r1, #64	; 0x40
10000864:	4668      	mov	r0, sp
10000866:	f001 f9c9 	bl	10001bfc <fault_dump_callstack>
    if (count < 0) {
1000086a:	1e05      	subs	r5, r0, #0
1000086c:	db04      	blt.n	10000878 <dump_callstack+0x34>
        printf("CallStack:[ ");
1000086e:	480b      	ldr	r0, [pc, #44]	; (1000089c <dump_callstack+0x58>)
10000870:	f001 f950 	bl	10001b14 <printf>
        for (int i = 0; i < count; i++) {
10000874:	2400      	movs	r4, #0
10000876:	e00a      	b.n	1000088e <dump_callstack+0x4a>
        printf("CallStack dump error: %d\r\n", count);
10000878:	4629      	mov	r1, r5
1000087a:	4809      	ldr	r0, [pc, #36]	; (100008a0 <dump_callstack+0x5c>)
1000087c:	f001 f94a 	bl	10001b14 <printf>
10000880:	e00a      	b.n	10000898 <dump_callstack+0x54>
            printf("%08X ", buffer[i]);
10000882:	f85d 1024 	ldr.w	r1, [sp, r4, lsl #2]
10000886:	4807      	ldr	r0, [pc, #28]	; (100008a4 <dump_callstack+0x60>)
10000888:	f001 f944 	bl	10001b14 <printf>
        for (int i = 0; i < count; i++) {
1000088c:	3401      	adds	r4, #1
1000088e:	42ac      	cmp	r4, r5
10000890:	dbf7      	blt.n	10000882 <dump_callstack+0x3e>
        printf("] \r\n");
10000892:	4805      	ldr	r0, [pc, #20]	; (100008a8 <dump_callstack+0x64>)
10000894:	f001 f95e 	bl	10001b54 <puts>
}
10000898:	b041      	add	sp, #260	; 0x104
1000089a:	bd30      	pop	{r4, r5, pc}
1000089c:	10005ab0 			; <UNDEFINED> instruction: 0x10005ab0
100008a0:	10005a94 	mulne	r0, r4, sl
100008a4:	10005ac0 	andne	r5, r0, r0, asr #21
100008a8:	10005ac8 	andne	r5, r0, r8, asr #21

100008ac <test0>:
void test0(void) {
100008ac:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ae:	4904      	ldr	r1, [pc, #16]	; (100008c0 <test0+0x14>)
100008b0:	4804      	ldr	r0, [pc, #16]	; (100008c4 <test0+0x18>)
100008b2:	f001 f92f 	bl	10001b14 <printf>
    dump_callstack();
100008b6:	f7ff ffc5 	bl	10000844 <dump_callstack>
    fault_dump_unalign();
100008ba:	f001 fb83 	bl	10001fc4 <fault_dump_unalign>
}
100008be:	bd08      	pop	{r3, pc}
100008c0:	10005b3c 	andne	r5, r0, ip, lsr fp
100008c4:	10005acc 	andne	r5, r0, ip, asr #21

100008c8 <test1>:
void test1(void) {
100008c8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ca:	4903      	ldr	r1, [pc, #12]	; (100008d8 <test1+0x10>)
100008cc:	4803      	ldr	r0, [pc, #12]	; (100008dc <test1+0x14>)
100008ce:	f001 f921 	bl	10001b14 <printf>
    test0();
100008d2:	f7ff ffeb 	bl	100008ac <test0>
}
100008d6:	bd08      	pop	{r3, pc}
100008d8:	10005b34 	andne	r5, r0, r4, lsr fp
100008dc:	10005acc 	andne	r5, r0, ip, asr #21

100008e0 <test2>:
void test2(void) {
100008e0:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008e2:	4903      	ldr	r1, [pc, #12]	; (100008f0 <test2+0x10>)
100008e4:	4803      	ldr	r0, [pc, #12]	; (100008f4 <test2+0x14>)
100008e6:	f001 f915 	bl	10001b14 <printf>
    test1();
100008ea:	f7ff ffed 	bl	100008c8 <test1>
}
100008ee:	bd08      	pop	{r3, pc}
100008f0:	10005b2c 	andne	r5, r0, ip, lsr #22
100008f4:	10005acc 	andne	r5, r0, ip, asr #21

100008f8 <test3>:
void test3(void) {
100008f8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008fa:	4903      	ldr	r1, [pc, #12]	; (10000908 <test3+0x10>)
100008fc:	4803      	ldr	r0, [pc, #12]	; (1000090c <test3+0x14>)
100008fe:	f001 f909 	bl	10001b14 <printf>
    test2();
10000902:	f7ff ffed 	bl	100008e0 <test2>
}
10000906:	bd08      	pop	{r3, pc}
10000908:	10005b24 	andne	r5, r0, r4, lsr #22
1000090c:	10005acc 	andne	r5, r0, ip, asr #21

10000910 <test4>:
void test4(void) {
10000910:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000912:	4903      	ldr	r1, [pc, #12]	; (10000920 <test4+0x10>)
10000914:	4803      	ldr	r0, [pc, #12]	; (10000924 <test4+0x14>)
10000916:	f001 f8fd 	bl	10001b14 <printf>
    test3();
1000091a:	f7ff ffed 	bl	100008f8 <test3>
}
1000091e:	bd08      	pop	{r3, pc}
10000920:	10005b1c 	andne	r5, r0, ip, lsl fp
10000924:	10005acc 	andne	r5, r0, ip, asr #21

10000928 <test5>:
void test5(void) {
10000928:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000092a:	4903      	ldr	r1, [pc, #12]	; (10000938 <test5+0x10>)
1000092c:	4803      	ldr	r0, [pc, #12]	; (1000093c <test5+0x14>)
1000092e:	f001 f8f1 	bl	10001b14 <printf>
    test4();
10000932:	f7ff ffed 	bl	10000910 <test4>
}
10000936:	bd08      	pop	{r3, pc}
10000938:	10005b14 	andne	r5, r0, r4, lsl fp
1000093c:	10005acc 	andne	r5, r0, ip, asr #21

10000940 <main_task_entry>:
static void main_task_entry(void *parameters) {
10000940:	b510      	push	{r4, lr}
    int counter = 0;
10000942:	2400      	movs	r4, #0
10000944:	e001      	b.n	1000094a <main_task_entry+0xa>
            test5();
10000946:	f7ff ffef 	bl	10000928 <test5>
        vTaskDelay(1000);
1000094a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1000094e:	f002 f9a5 	bl	10002c9c <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
10000952:	4803      	ldr	r0, [pc, #12]	; (10000960 <main_task_entry+0x20>)
10000954:	f001 f8fe 	bl	10001b54 <puts>
        if (counter >= 3) {
10000958:	2c02      	cmp	r4, #2
1000095a:	dcf4      	bgt.n	10000946 <main_task_entry+0x6>
            counter++;
1000095c:	3401      	adds	r4, #1
1000095e:	e7f4      	b.n	1000094a <main_task_entry+0xa>
10000960:	10005adc 	ldrdne	r5, [r0], -ip

10000964 <main>:

int main(void) {
10000964:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
10000966:	f001 f905 	bl	10001b74 <uart_init>

    printf("Start\r\n");
1000096a:	4809      	ldr	r0, [pc, #36]	; (10000990 <main+0x2c>)
1000096c:	f001 f8f2 	bl	10001b54 <puts>
    fault_dump_init();
10000970:	f001 f992 	bl	10001c98 <fault_dump_init>
    extern int freertos_stack_parser(unsigned int *buffer, size_t length, unsigned int *stack_point, unsigned int *stack_start);
    fault_dump_psp_stack_parser(freertos_stack_parser);
10000974:	4807      	ldr	r0, [pc, #28]	; (10000994 <main+0x30>)
10000976:	f001 fa95 	bl	10001ea4 <fault_dump_psp_stack_parser>
    main_task_init();
1000097a:	f7ff ff41 	bl	10000800 <main_task_init>
    int count = 0;
1000097e:	2100      	movs	r1, #0

    while (1) {
        __NOP();
10000980:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
10000982:	1c4c      	adds	r4, r1, #1
10000984:	4804      	ldr	r0, [pc, #16]	; (10000998 <main+0x34>)
10000986:	f001 f8c5 	bl	10001b14 <printf>
1000098a:	4621      	mov	r1, r4
1000098c:	e7f8      	b.n	10000980 <main+0x1c>
1000098e:	bf00      	nop
10000990:	10005af8 	strdne	r5, [r0], -r8
10000994:	10002011 	andne	r2, r0, r1, lsl r0
10000998:	10005b00 	andne	r5, r0, r0, lsl #22

1000099c <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
1000099c:	4b06      	ldr	r3, [pc, #24]	; (100009b8 <SystemInit+0x1c>)
1000099e:	4a07      	ldr	r2, [pc, #28]	; (100009bc <SystemInit+0x20>)
100009a0:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
100009a2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
100009a6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
100009aa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
100009ae:	4b04      	ldr	r3, [pc, #16]	; (100009c0 <SystemInit+0x24>)
100009b0:	4a04      	ldr	r2, [pc, #16]	; (100009c4 <SystemInit+0x28>)
100009b2:	601a      	str	r2, [r3, #0]
}
100009b4:	4770      	bx	lr
100009b6:	bf00      	nop
100009b8:	e000ed00 	and	lr, r0, r0, lsl #26
100009bc:	10000000 	andne	r0, r0, r0
100009c0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100009c4:	017d7840 	cmneq	sp, r0, asr #16

100009c8 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100009c8:	4770      	bx	lr

100009ca <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100009ca:	4601      	mov	r1, r0
  unsigned int i = 0U;
100009cc:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100009ce:	e007      	b.n	100009e0 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100009d0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100009d4:	1c53      	adds	r3, r2, #1
100009d6:	600b      	str	r3, [r1, #0]
100009d8:	7813      	ldrb	r3, [r2, #0]
100009da:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100009de:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100009e0:	680a      	ldr	r2, [r1, #0]
100009e2:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
100009e4:	3b30      	subs	r3, #48	; 0x30
100009e6:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
100009e8:	2b09      	cmp	r3, #9
100009ea:	d9f1      	bls.n	100009d0 <_atoi+0x6>
  }
  return i;
}
100009ec:	4770      	bx	lr

100009ee <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
100009ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100009f2:	b083      	sub	sp, #12
100009f4:	4605      	mov	r5, r0
100009f6:	460e      	mov	r6, r1
100009f8:	4693      	mov	fp, r2
100009fa:	461f      	mov	r7, r3
100009fc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
10000a00:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a02:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
10000a06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a08:	f013 0f03 	tst.w	r3, #3
10000a0c:	d119      	bne.n	10000a42 <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
10000a0e:	46a0      	mov	r8, r4
10000a10:	9201      	str	r2, [sp, #4]
10000a12:	45c8      	cmp	r8, r9
10000a14:	d209      	bcs.n	10000a2a <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000a16:	f102 0b01 	add.w	fp, r2, #1
10000a1a:	463b      	mov	r3, r7
10000a1c:	4631      	mov	r1, r6
10000a1e:	2020      	movs	r0, #32
10000a20:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
10000a22:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000a26:	465a      	mov	r2, fp
10000a28:	e7f3      	b.n	10000a12 <_out_rev+0x24>
10000a2a:	f8dd b004 	ldr.w	fp, [sp, #4]
10000a2e:	e008      	b.n	10000a42 <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
10000a30:	3c01      	subs	r4, #1
10000a32:	f102 0801 	add.w	r8, r2, #1
10000a36:	463b      	mov	r3, r7
10000a38:	4631      	mov	r1, r6
10000a3a:	f81a 0004 	ldrb.w	r0, [sl, r4]
10000a3e:	47a8      	blx	r5
10000a40:	4642      	mov	r2, r8
  while (len) {
10000a42:	2c00      	cmp	r4, #0
10000a44:	d1f4      	bne.n	10000a30 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000a46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a48:	f013 0f02 	tst.w	r3, #2
10000a4c:	d103      	bne.n	10000a56 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
10000a4e:	4610      	mov	r0, r2
10000a50:	b003      	add	sp, #12
10000a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000a56:	eba2 030b 	sub.w	r3, r2, fp
10000a5a:	454b      	cmp	r3, r9
10000a5c:	d2f7      	bcs.n	10000a4e <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
10000a5e:	1c54      	adds	r4, r2, #1
10000a60:	463b      	mov	r3, r7
10000a62:	4631      	mov	r1, r6
10000a64:	2020      	movs	r0, #32
10000a66:	47a8      	blx	r5
10000a68:	4622      	mov	r2, r4
10000a6a:	e7f4      	b.n	10000a56 <_out_rev+0x68>

10000a6c <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10000a70:	b085      	sub	sp, #20
10000a72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000a74:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a76:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000a7a:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000a7e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10000a82:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000a84:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000a86:	f016 0f02 	tst.w	r6, #2
10000a8a:	d121      	bne.n	10000ad0 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000a8c:	b17f      	cbz	r7, 10000aae <_ntoa_format+0x42>
10000a8e:	f016 0f01 	tst.w	r6, #1
10000a92:	d00c      	beq.n	10000aae <_ntoa_format+0x42>
10000a94:	f1b9 0f00 	cmp.w	r9, #0
10000a98:	d102      	bne.n	10000aa0 <_ntoa_format+0x34>
10000a9a:	f016 0f0c 	tst.w	r6, #12
10000a9e:	d006      	beq.n	10000aae <_ntoa_format+0x42>
      width--;
10000aa0:	3f01      	subs	r7, #1
10000aa2:	e004      	b.n	10000aae <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000aa4:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000aa8:	f805 c004 	strb.w	ip, [r5, r4]
10000aac:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aae:	4574      	cmp	r4, lr
10000ab0:	d201      	bcs.n	10000ab6 <_ntoa_format+0x4a>
10000ab2:	2c1f      	cmp	r4, #31
10000ab4:	d9f6      	bls.n	10000aa4 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ab6:	f016 0f01 	tst.w	r6, #1
10000aba:	d009      	beq.n	10000ad0 <_ntoa_format+0x64>
10000abc:	42bc      	cmp	r4, r7
10000abe:	d207      	bcs.n	10000ad0 <_ntoa_format+0x64>
10000ac0:	2c1f      	cmp	r4, #31
10000ac2:	d805      	bhi.n	10000ad0 <_ntoa_format+0x64>
      buf[len++] = '0';
10000ac4:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000ac8:	f805 c004 	strb.w	ip, [r5, r4]
10000acc:	3401      	adds	r4, #1
10000ace:	e7f2      	b.n	10000ab6 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000ad0:	f016 0f10 	tst.w	r6, #16
10000ad4:	d017      	beq.n	10000b06 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
10000ad6:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000ada:	d104      	bne.n	10000ae6 <_ntoa_format+0x7a>
10000adc:	b11c      	cbz	r4, 10000ae6 <_ntoa_format+0x7a>
10000ade:	4574      	cmp	r4, lr
10000ae0:	d024      	beq.n	10000b2c <_ntoa_format+0xc0>
10000ae2:	42bc      	cmp	r4, r7
10000ae4:	d022      	beq.n	10000b2c <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ae6:	f1b8 0f10 	cmp.w	r8, #16
10000aea:	d02b      	beq.n	10000b44 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aec:	f1b8 0f10 	cmp.w	r8, #16
10000af0:	d033      	beq.n	10000b5a <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000af2:	f1b8 0f02 	cmp.w	r8, #2
10000af6:	d03b      	beq.n	10000b70 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000af8:	2c1f      	cmp	r4, #31
10000afa:	d804      	bhi.n	10000b06 <_ntoa_format+0x9a>
      buf[len++] = '0';
10000afc:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000b00:	f805 c004 	strb.w	ip, [r5, r4]
10000b04:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000b06:	2c1f      	cmp	r4, #31
10000b08:	d807      	bhi.n	10000b1a <_ntoa_format+0xae>
    if (negative) {
10000b0a:	f1b9 0f00 	cmp.w	r9, #0
10000b0e:	d037      	beq.n	10000b80 <_ntoa_format+0x114>
      buf[len++] = '-';
10000b10:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000b14:	f805 c004 	strb.w	ip, [r5, r4]
10000b18:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000b1a:	9603      	str	r6, [sp, #12]
10000b1c:	9702      	str	r7, [sp, #8]
10000b1e:	9401      	str	r4, [sp, #4]
10000b20:	9500      	str	r5, [sp, #0]
10000b22:	f7ff ff64 	bl	100009ee <_out_rev>
}
10000b26:	b005      	add	sp, #20
10000b28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000b2c:	f1b4 0c01 	subs.w	ip, r4, #1
10000b30:	d006      	beq.n	10000b40 <_ntoa_format+0xd4>
10000b32:	f1b8 0f10 	cmp.w	r8, #16
10000b36:	d001      	beq.n	10000b3c <_ntoa_format+0xd0>
      len--;
10000b38:	4664      	mov	r4, ip
10000b3a:	e7d4      	b.n	10000ae6 <_ntoa_format+0x7a>
        len--;
10000b3c:	3c02      	subs	r4, #2
10000b3e:	e7d2      	b.n	10000ae6 <_ntoa_format+0x7a>
      len--;
10000b40:	4664      	mov	r4, ip
10000b42:	e7d0      	b.n	10000ae6 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b44:	f016 0f20 	tst.w	r6, #32
10000b48:	d1d0      	bne.n	10000aec <_ntoa_format+0x80>
10000b4a:	2c1f      	cmp	r4, #31
10000b4c:	d8ce      	bhi.n	10000aec <_ntoa_format+0x80>
      buf[len++] = 'x';
10000b4e:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000b52:	f805 c004 	strb.w	ip, [r5, r4]
10000b56:	3401      	adds	r4, #1
10000b58:	e7ce      	b.n	10000af8 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b5a:	f016 0f20 	tst.w	r6, #32
10000b5e:	d0c8      	beq.n	10000af2 <_ntoa_format+0x86>
10000b60:	2c1f      	cmp	r4, #31
10000b62:	d8c6      	bhi.n	10000af2 <_ntoa_format+0x86>
      buf[len++] = 'X';
10000b64:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000b68:	f805 c004 	strb.w	ip, [r5, r4]
10000b6c:	3401      	adds	r4, #1
10000b6e:	e7c3      	b.n	10000af8 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b70:	2c1f      	cmp	r4, #31
10000b72:	d8c1      	bhi.n	10000af8 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000b74:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000b78:	f805 c004 	strb.w	ip, [r5, r4]
10000b7c:	3401      	adds	r4, #1
10000b7e:	e7bb      	b.n	10000af8 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000b80:	f016 0f04 	tst.w	r6, #4
10000b84:	d005      	beq.n	10000b92 <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000b86:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000b8a:	f805 c004 	strb.w	ip, [r5, r4]
10000b8e:	3401      	adds	r4, #1
10000b90:	e7c3      	b.n	10000b1a <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000b92:	f016 0f08 	tst.w	r6, #8
10000b96:	d0c0      	beq.n	10000b1a <_ntoa_format+0xae>
      buf[len++] = ' ';
10000b98:	f04f 0c20 	mov.w	ip, #32
10000b9c:	f805 c004 	strb.w	ip, [r5, r4]
10000ba0:	3401      	adds	r4, #1
10000ba2:	e7ba      	b.n	10000b1a <_ntoa_format+0xae>

10000ba4 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
10000ba6:	b091      	sub	sp, #68	; 0x44
10000ba8:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000baa:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000bac:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000bae:	b90c      	cbnz	r4, 10000bb4 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000bb0:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000bb4:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000bb8:	d016      	beq.n	10000be8 <_ntoa_long+0x44>
10000bba:	b364      	cbz	r4, 10000c16 <_ntoa_long+0x72>
10000bbc:	f04f 0e00 	mov.w	lr, #0
10000bc0:	e012      	b.n	10000be8 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bc2:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000bc6:	fa5f fc8c 	uxtb.w	ip, ip
10000bca:	f10e 0701 	add.w	r7, lr, #1
10000bce:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000bd2:	44ee      	add	lr, sp
10000bd4:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000bd8:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000bdc:	42ac      	cmp	r4, r5
10000bde:	d31b      	bcc.n	10000c18 <_ntoa_long+0x74>
10000be0:	2f1f      	cmp	r7, #31
10000be2:	d819      	bhi.n	10000c18 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000be4:	46be      	mov	lr, r7
      value /= base;
10000be6:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000be8:	fbb4 fcf5 	udiv	ip, r4, r5
10000bec:	fb05 4c1c 	mls	ip, r5, ip, r4
10000bf0:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bf4:	f1bc 0f09 	cmp.w	ip, #9
10000bf8:	d9e3      	bls.n	10000bc2 <_ntoa_long+0x1e>
10000bfa:	f016 0f20 	tst.w	r6, #32
10000bfe:	d008      	beq.n	10000c12 <_ntoa_long+0x6e>
10000c00:	2741      	movs	r7, #65	; 0x41
10000c02:	44bc      	add	ip, r7
10000c04:	fa5f fc8c 	uxtb.w	ip, ip
10000c08:	f1ac 0c0a 	sub.w	ip, ip, #10
10000c0c:	fa5f fc8c 	uxtb.w	ip, ip
10000c10:	e7db      	b.n	10000bca <_ntoa_long+0x26>
10000c12:	2761      	movs	r7, #97	; 0x61
10000c14:	e7f5      	b.n	10000c02 <_ntoa_long+0x5e>
  size_t len = 0U;
10000c16:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000c18:	9606      	str	r6, [sp, #24]
10000c1a:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000c1c:	9405      	str	r4, [sp, #20]
10000c1e:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000c20:	9404      	str	r4, [sp, #16]
10000c22:	9503      	str	r5, [sp, #12]
10000c24:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000c28:	9402      	str	r4, [sp, #8]
10000c2a:	9701      	str	r7, [sp, #4]
10000c2c:	ac08      	add	r4, sp, #32
10000c2e:	9400      	str	r4, [sp, #0]
10000c30:	f7ff ff1c 	bl	10000a6c <_ntoa_format>
}
10000c34:	b011      	add	sp, #68	; 0x44
10000c36:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000c38 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c3c:	b095      	sub	sp, #84	; 0x54
10000c3e:	9009      	str	r0, [sp, #36]	; 0x24
10000c40:	910a      	str	r1, [sp, #40]	; 0x28
10000c42:	920b      	str	r2, [sp, #44]	; 0x2c
10000c44:	469b      	mov	fp, r3
10000c46:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000c48:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000c4a:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000c4c:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000c50:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000c54:	ea55 0306 	orrs.w	r3, r5, r6
10000c58:	d101      	bne.n	10000c5e <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000c5a:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000c5e:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000c62:	d01f      	beq.n	10000ca4 <_ntoa_long_long+0x6c>
10000c64:	ea55 0306 	orrs.w	r3, r5, r6
10000c68:	d030      	beq.n	10000ccc <_ntoa_long_long+0x94>
10000c6a:	2400      	movs	r4, #0
10000c6c:	e01a      	b.n	10000ca4 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c6e:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000c72:	b2d2      	uxtb	r2, r2
10000c74:	f104 0901 	add.w	r9, r4, #1
10000c78:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000c7c:	eb0d 0403 	add.w	r4, sp, r3
10000c80:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000c84:	463a      	mov	r2, r7
10000c86:	4643      	mov	r3, r8
10000c88:	4628      	mov	r0, r5
10000c8a:	4631      	mov	r1, r6
10000c8c:	f003 fd50 	bl	10004730 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000c90:	42bd      	cmp	r5, r7
10000c92:	eb76 0308 	sbcs.w	r3, r6, r8
10000c96:	d31b      	bcc.n	10000cd0 <_ntoa_long_long+0x98>
10000c98:	f1b9 0f1f 	cmp.w	r9, #31
10000c9c:	d818      	bhi.n	10000cd0 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c9e:	464c      	mov	r4, r9
      value /= base;
10000ca0:	4605      	mov	r5, r0
10000ca2:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000ca4:	463a      	mov	r2, r7
10000ca6:	4643      	mov	r3, r8
10000ca8:	4628      	mov	r0, r5
10000caa:	4631      	mov	r1, r6
10000cac:	f003 fd40 	bl	10004730 <__aeabi_uldivmod>
10000cb0:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000cb2:	2b09      	cmp	r3, #9
10000cb4:	d9db      	bls.n	10000c6e <_ntoa_long_long+0x36>
10000cb6:	f01a 0f20 	tst.w	sl, #32
10000cba:	d005      	beq.n	10000cc8 <_ntoa_long_long+0x90>
10000cbc:	2241      	movs	r2, #65	; 0x41
10000cbe:	441a      	add	r2, r3
10000cc0:	b2d2      	uxtb	r2, r2
10000cc2:	3a0a      	subs	r2, #10
10000cc4:	b2d2      	uxtb	r2, r2
10000cc6:	e7d5      	b.n	10000c74 <_ntoa_long_long+0x3c>
10000cc8:	2261      	movs	r2, #97	; 0x61
10000cca:	e7f8      	b.n	10000cbe <_ntoa_long_long+0x86>
  size_t len = 0U;
10000ccc:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000cd0:	f8cd a018 	str.w	sl, [sp, #24]
10000cd4:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000cd6:	9305      	str	r3, [sp, #20]
10000cd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000cda:	9304      	str	r3, [sp, #16]
10000cdc:	9703      	str	r7, [sp, #12]
10000cde:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000ce2:	9302      	str	r3, [sp, #8]
10000ce4:	f8cd 9004 	str.w	r9, [sp, #4]
10000ce8:	ab0c      	add	r3, sp, #48	; 0x30
10000cea:	9300      	str	r3, [sp, #0]
10000cec:	465b      	mov	r3, fp
10000cee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000cf0:	990a      	ldr	r1, [sp, #40]	; 0x28
10000cf2:	9809      	ldr	r0, [sp, #36]	; 0x24
10000cf4:	f7ff feba 	bl	10000a6c <_ntoa_format>
}
10000cf8:	b015      	add	sp, #84	; 0x54
10000cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

10000d00 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000d04:	ed2d 8b02 	vpush	{d8}
10000d08:	b091      	sub	sp, #68	; 0x44
10000d0a:	4682      	mov	sl, r0
10000d0c:	460c      	mov	r4, r1
10000d0e:	4693      	mov	fp, r2
10000d10:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000d12:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000d16:	4610      	mov	r0, r2
10000d18:	4619      	mov	r1, r3
10000d1a:	f003 fc8f 	bl	1000463c <__aeabi_dcmpeq>
10000d1e:	2800      	cmp	r0, #0
10000d20:	f000 8107 	beq.w	10000f32 <_etoa+0x232>
10000d24:	f04f 32ff 	mov.w	r2, #4294967295
10000d28:	4bb1      	ldr	r3, [pc, #708]	; (10000ff0 <_etoa+0x2f0>)
10000d2a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d2e:	f003 fcad 	bl	1000468c <__aeabi_dcmpgt>
10000d32:	2800      	cmp	r0, #0
10000d34:	f040 80fd 	bne.w	10000f32 <_etoa+0x232>
10000d38:	f04f 32ff 	mov.w	r2, #4294967295
10000d3c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000d40:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d44:	f003 fc84 	bl	10004650 <__aeabi_dcmplt>
10000d48:	2800      	cmp	r0, #0
10000d4a:	f040 80f2 	bne.w	10000f32 <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000d4e:	2200      	movs	r2, #0
10000d50:	2300      	movs	r3, #0
10000d52:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d56:	f003 fc7b 	bl	10004650 <__aeabi_dcmplt>
10000d5a:	2800      	cmp	r0, #0
10000d5c:	f040 80fe 	bne.w	10000f5c <_etoa+0x25c>
10000d60:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000d64:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000d68:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000d6a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000d6e:	930f      	str	r3, [sp, #60]	; 0x3c
10000d70:	d101      	bne.n	10000d76 <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000d72:	2306      	movs	r3, #6
10000d74:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000d76:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000d7a:	4602      	mov	r2, r0
10000d7c:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000d80:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000d84:	4690      	mov	r8, r2
10000d86:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000d8a:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000d8e:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000d92:	f003 f981 	bl	10004098 <__aeabi_i2d>
10000d96:	a384      	add	r3, pc, #528	; (adr r3, 10000fa8 <_etoa+0x2a8>)
10000d98:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d9c:	f003 f9e6 	bl	1000416c <__aeabi_dmul>
10000da0:	a383      	add	r3, pc, #524	; (adr r3, 10000fb0 <_etoa+0x2b0>)
10000da2:	e9d3 2300 	ldrd	r2, r3, [r3]
10000da6:	f003 f82b 	bl	10003e00 <__adddf3>
10000daa:	4606      	mov	r6, r0
10000dac:	460f      	mov	r7, r1
10000dae:	2200      	movs	r2, #0
10000db0:	4b90      	ldr	r3, [pc, #576]	; (10000ff4 <_etoa+0x2f4>)
10000db2:	4640      	mov	r0, r8
10000db4:	4649      	mov	r1, r9
10000db6:	f003 f821 	bl	10003dfc <__aeabi_dsub>
10000dba:	a37f      	add	r3, pc, #508	; (adr r3, 10000fb8 <_etoa+0x2b8>)
10000dbc:	e9d3 2300 	ldrd	r2, r3, [r3]
10000dc0:	f003 f9d4 	bl	1000416c <__aeabi_dmul>
10000dc4:	4602      	mov	r2, r0
10000dc6:	460b      	mov	r3, r1
10000dc8:	4630      	mov	r0, r6
10000dca:	4639      	mov	r1, r7
10000dcc:	f003 f818 	bl	10003e00 <__adddf3>
10000dd0:	f003 fc66 	bl	100046a0 <__aeabi_d2iz>
10000dd4:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000dd6:	f003 f95f 	bl	10004098 <__aeabi_i2d>
10000dda:	4680      	mov	r8, r0
10000ddc:	4689      	mov	r9, r1
10000dde:	a378      	add	r3, pc, #480	; (adr r3, 10000fc0 <_etoa+0x2c0>)
10000de0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000de4:	f003 f9c2 	bl	1000416c <__aeabi_dmul>
10000de8:	2200      	movs	r2, #0
10000dea:	4b83      	ldr	r3, [pc, #524]	; (10000ff8 <_etoa+0x2f8>)
10000dec:	f003 f808 	bl	10003e00 <__adddf3>
10000df0:	f003 fc56 	bl	100046a0 <__aeabi_d2iz>
10000df4:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000df6:	a374      	add	r3, pc, #464	; (adr r3, 10000fc8 <_etoa+0x2c8>)
10000df8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000dfc:	4640      	mov	r0, r8
10000dfe:	4649      	mov	r1, r9
10000e00:	f003 f9b4 	bl	1000416c <__aeabi_dmul>
10000e04:	4680      	mov	r8, r0
10000e06:	4689      	mov	r9, r1
10000e08:	4638      	mov	r0, r7
10000e0a:	f003 f945 	bl	10004098 <__aeabi_i2d>
10000e0e:	a370      	add	r3, pc, #448	; (adr r3, 10000fd0 <_etoa+0x2d0>)
10000e10:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e14:	f003 f9aa 	bl	1000416c <__aeabi_dmul>
10000e18:	4602      	mov	r2, r0
10000e1a:	460b      	mov	r3, r1
10000e1c:	4640      	mov	r0, r8
10000e1e:	4649      	mov	r1, r9
10000e20:	f002 ffec 	bl	10003dfc <__aeabi_dsub>
10000e24:	4680      	mov	r8, r0
10000e26:	4689      	mov	r9, r1
  const double z2 = z * z;
10000e28:	4602      	mov	r2, r0
10000e2a:	460b      	mov	r3, r1
10000e2c:	f003 f99e 	bl	1000416c <__aeabi_dmul>
10000e30:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000e34:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000e38:	2100      	movs	r1, #0
10000e3a:	2200      	movs	r2, #0
10000e3c:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000e40:	053b      	lsls	r3, r7, #20
10000e42:	9309      	str	r3, [sp, #36]	; 0x24
10000e44:	2300      	movs	r3, #0
10000e46:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000e48:	4642      	mov	r2, r8
10000e4a:	464b      	mov	r3, r9
10000e4c:	4640      	mov	r0, r8
10000e4e:	4649      	mov	r1, r9
10000e50:	f002 ffd6 	bl	10003e00 <__adddf3>
10000e54:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000e58:	4642      	mov	r2, r8
10000e5a:	464b      	mov	r3, r9
10000e5c:	2000      	movs	r0, #0
10000e5e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000e62:	f002 ffcb 	bl	10003dfc <__aeabi_dsub>
10000e66:	4680      	mov	r8, r0
10000e68:	4689      	mov	r9, r1
10000e6a:	2200      	movs	r2, #0
10000e6c:	4b63      	ldr	r3, [pc, #396]	; (10000ffc <_etoa+0x2fc>)
10000e6e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e72:	f003 faa5 	bl	100043c0 <__aeabi_ddiv>
10000e76:	2200      	movs	r2, #0
10000e78:	4b61      	ldr	r3, [pc, #388]	; (10001000 <_etoa+0x300>)
10000e7a:	f002 ffc1 	bl	10003e00 <__adddf3>
10000e7e:	4602      	mov	r2, r0
10000e80:	460b      	mov	r3, r1
10000e82:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e86:	f003 fa9b 	bl	100043c0 <__aeabi_ddiv>
10000e8a:	2200      	movs	r2, #0
10000e8c:	4b5d      	ldr	r3, [pc, #372]	; (10001004 <_etoa+0x304>)
10000e8e:	f002 ffb7 	bl	10003e00 <__adddf3>
10000e92:	4602      	mov	r2, r0
10000e94:	460b      	mov	r3, r1
10000e96:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e9a:	f003 fa91 	bl	100043c0 <__aeabi_ddiv>
10000e9e:	4602      	mov	r2, r0
10000ea0:	460b      	mov	r3, r1
10000ea2:	4640      	mov	r0, r8
10000ea4:	4649      	mov	r1, r9
10000ea6:	f002 ffab 	bl	10003e00 <__adddf3>
10000eaa:	4602      	mov	r2, r0
10000eac:	460b      	mov	r3, r1
10000eae:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000eb2:	f003 fa85 	bl	100043c0 <__aeabi_ddiv>
10000eb6:	2200      	movs	r2, #0
10000eb8:	4b53      	ldr	r3, [pc, #332]	; (10001008 <_etoa+0x308>)
10000eba:	f002 ffa1 	bl	10003e00 <__adddf3>
10000ebe:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000ec2:	f003 f953 	bl	1000416c <__aeabi_dmul>
10000ec6:	4680      	mov	r8, r0
10000ec8:	4689      	mov	r9, r1
10000eca:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000ece:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000ed2:	f003 fbdb 	bl	1000468c <__aeabi_dcmpgt>
10000ed6:	b140      	cbz	r0, 10000eea <_etoa+0x1ea>
    expval--;
10000ed8:	3e01      	subs	r6, #1
    conv.F /= 10;
10000eda:	2200      	movs	r2, #0
10000edc:	4b48      	ldr	r3, [pc, #288]	; (10001000 <_etoa+0x300>)
10000ede:	4640      	mov	r0, r8
10000ee0:	4649      	mov	r1, r9
10000ee2:	f003 fa6d 	bl	100043c0 <__aeabi_ddiv>
10000ee6:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000eea:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000eee:	2bc6      	cmp	r3, #198	; 0xc6
10000ef0:	d83f      	bhi.n	10000f72 <_etoa+0x272>
10000ef2:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000ef4:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000ef6:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000efa:	d044      	beq.n	10000f86 <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000efc:	a336      	add	r3, pc, #216	; (adr r3, 10000fd8 <_etoa+0x2d8>)
10000efe:	e9d3 2300 	ldrd	r2, r3, [r3]
10000f02:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000f06:	4640      	mov	r0, r8
10000f08:	4649      	mov	r1, r9
10000f0a:	f003 fbb5 	bl	10004678 <__aeabi_dcmpge>
10000f0e:	2800      	cmp	r0, #0
10000f10:	d03f      	beq.n	10000f92 <_etoa+0x292>
10000f12:	a333      	add	r3, pc, #204	; (adr r3, 10000fe0 <_etoa+0x2e0>)
10000f14:	e9d3 2300 	ldrd	r2, r3, [r3]
10000f18:	4640      	mov	r0, r8
10000f1a:	4649      	mov	r1, r9
10000f1c:	f003 fb98 	bl	10004650 <__aeabi_dcmplt>
10000f20:	2800      	cmp	r0, #0
10000f22:	d036      	beq.n	10000f92 <_etoa+0x292>
      if ((int)prec > expval) {
10000f24:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f26:	42b3      	cmp	r3, r6
10000f28:	dd25      	ble.n	10000f76 <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000f2a:	1b9e      	subs	r6, r3, r6
10000f2c:	1e73      	subs	r3, r6, #1
10000f2e:	931e      	str	r3, [sp, #120]	; 0x78
10000f30:	e023      	b.n	10000f7a <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000f32:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f34:	9304      	str	r3, [sp, #16]
10000f36:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f38:	9303      	str	r3, [sp, #12]
10000f3a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f3c:	9302      	str	r3, [sp, #8]
10000f3e:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000f42:	ed8d 7b00 	vstr	d7, [sp]
10000f46:	462b      	mov	r3, r5
10000f48:	465a      	mov	r2, fp
10000f4a:	4621      	mov	r1, r4
10000f4c:	4650      	mov	r0, sl
10000f4e:	f000 f8cf 	bl	100010f0 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000f52:	b011      	add	sp, #68	; 0x44
10000f54:	ecbd 8b02 	vpop	{d8}
10000f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000f5c:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000fe8 <_etoa+0x2e8>
10000f60:	ed8d 7b06 	vstr	d7, [sp, #24]
10000f64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000f66:	9306      	str	r3, [sp, #24]
10000f68:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000f6a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000f6e:	9307      	str	r3, [sp, #28]
10000f70:	e6fa      	b.n	10000d68 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000f72:	2705      	movs	r7, #5
10000f74:	e7be      	b.n	10000ef4 <_etoa+0x1f4>
        prec = 0;
10000f76:	2300      	movs	r3, #0
10000f78:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000f7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f7c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000f80:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000f82:	2700      	movs	r7, #0
      expval   = 0;
10000f84:	463e      	mov	r6, r7
  if (width > minwidth) {
10000f86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f88:	429f      	cmp	r7, r3
10000f8a:	d23f      	bcs.n	1000100c <_etoa+0x30c>
    fwidth -= minwidth;
10000f8c:	eba3 0807 	sub.w	r8, r3, r7
10000f90:	e03e      	b.n	10001010 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000f92:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f94:	2b00      	cmp	r3, #0
10000f96:	d0f6      	beq.n	10000f86 <_etoa+0x286>
10000f98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000f9a:	2b00      	cmp	r3, #0
10000f9c:	d0f3      	beq.n	10000f86 <_etoa+0x286>
        --prec;
10000f9e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000fa0:	3b01      	subs	r3, #1
10000fa2:	931e      	str	r3, [sp, #120]	; 0x78
10000fa4:	e7ef      	b.n	10000f86 <_etoa+0x286>
10000fa6:	bf00      	nop
10000fa8:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000fac:	3fd34413 	svccc	0x00d34413
10000fb0:	8b60c8b3 	blhi	11833284 <__copy_table_end__+0x182d148>
10000fb4:	3fc68a28 	svccc	0x00c68a28
10000fb8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000fbc:	3fd287a7 	svccc	0x00d287a7
10000fc0:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000fc4:	400a934f 	andmi	r9, sl, pc, asr #6
10000fc8:	bbb55516 	bllt	ed56428 <__RAM_SIZE+0xec56428>
10000fcc:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000fd0:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000fd4:	3fe62e42 	svccc	0x00e62e42
10000fd8:	eb1c432d 	bl	10711c94 <__copy_table_end__+0x70bb58>
10000fdc:	3f1a36e2 	svccc	0x001a36e2
10000fe0:	00000000 	andeq	r0, r0, r0
10000fe4:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000ff0:	7fefffff 	svcvc	0x00efffff
10000ff4:	3ff80000 	svccc	0x00f80000
10000ff8:	3fe00000 	svccc	0x00e00000
10000ffc:	402c0000 	eormi	r0, ip, r0
10001000:	40240000 	eormi	r0, r4, r0
10001004:	40180000 	andsmi	r0, r8, r0
10001008:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
1000100c:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10001010:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001012:	f013 0902 	ands.w	r9, r3, #2
10001016:	d002      	beq.n	1000101e <_etoa+0x31e>
10001018:	b10f      	cbz	r7, 1000101e <_etoa+0x31e>
    fwidth = 0U;
1000101a:	f04f 0800 	mov.w	r8, #0
  if (expval) {
1000101e:	b13e      	cbz	r6, 10001030 <_etoa+0x330>
    value /= conv.F;
10001020:	ec53 2b18 	vmov	r2, r3, d8
10001024:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001028:	f003 f9ca 	bl	100043c0 <__aeabi_ddiv>
1000102c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10001030:	2200      	movs	r2, #0
10001032:	2300      	movs	r3, #0
10001034:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10001038:	f003 fb0a 	bl	10004650 <__aeabi_dcmplt>
1000103c:	2800      	cmp	r0, #0
1000103e:	d13d      	bne.n	100010bc <_etoa+0x3bc>
10001040:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001042:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10001046:	9304      	str	r3, [sp, #16]
10001048:	f8cd 800c 	str.w	r8, [sp, #12]
1000104c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
1000104e:	9302      	str	r3, [sp, #8]
10001050:	ed9d 7b06 	vldr	d7, [sp, #24]
10001054:	ed8d 7b00 	vstr	d7, [sp]
10001058:	462b      	mov	r3, r5
1000105a:	465a      	mov	r2, fp
1000105c:	4621      	mov	r1, r4
1000105e:	4650      	mov	r0, sl
10001060:	f000 f846 	bl	100010f0 <_ftoa>
  if (minwidth) {
10001064:	2f00      	cmp	r7, #0
10001066:	f43f af74 	beq.w	10000f52 <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
1000106a:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000106c:	f013 0f20 	tst.w	r3, #32
10001070:	d02c      	beq.n	100010cc <_etoa+0x3cc>
10001072:	f04f 0c45 	mov.w	ip, #69	; 0x45
10001076:	f100 0801 	add.w	r8, r0, #1
1000107a:	462b      	mov	r3, r5
1000107c:	4602      	mov	r2, r0
1000107e:	4621      	mov	r1, r4
10001080:	4660      	mov	r0, ip
10001082:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10001084:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10001088:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
1000108c:	2205      	movs	r2, #5
1000108e:	9205      	str	r2, [sp, #20]
10001090:	3f01      	subs	r7, #1
10001092:	9704      	str	r7, [sp, #16]
10001094:	2200      	movs	r2, #0
10001096:	9203      	str	r2, [sp, #12]
10001098:	220a      	movs	r2, #10
1000109a:	9202      	str	r2, [sp, #8]
1000109c:	0ff0      	lsrs	r0, r6, #31
1000109e:	9001      	str	r0, [sp, #4]
100010a0:	9300      	str	r3, [sp, #0]
100010a2:	462b      	mov	r3, r5
100010a4:	4642      	mov	r2, r8
100010a6:	4621      	mov	r1, r4
100010a8:	4650      	mov	r0, sl
100010aa:	f7ff fd7b 	bl	10000ba4 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
100010ae:	f1b9 0f00 	cmp.w	r9, #0
100010b2:	f43f af4e 	beq.w	10000f52 <_etoa+0x252>
100010b6:	4602      	mov	r2, r0
100010b8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
100010ba:	e010      	b.n	100010de <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
100010bc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100010c0:	4602      	mov	r2, r0
100010c2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
100010c6:	e9cd 2306 	strd	r2, r3, [sp, #24]
100010ca:	e7b9      	b.n	10001040 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
100010cc:	f04f 0c65 	mov.w	ip, #101	; 0x65
100010d0:	e7d1      	b.n	10001076 <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
100010d2:	1c56      	adds	r6, r2, #1
100010d4:	462b      	mov	r3, r5
100010d6:	4621      	mov	r1, r4
100010d8:	2020      	movs	r0, #32
100010da:	47d0      	blx	sl
100010dc:	4632      	mov	r2, r6
100010de:	eba2 030b 	sub.w	r3, r2, fp
100010e2:	42bb      	cmp	r3, r7
100010e4:	d3f5      	bcc.n	100010d2 <_etoa+0x3d2>
100010e6:	4610      	mov	r0, r2
100010e8:	e733      	b.n	10000f52 <_etoa+0x252>
100010ea:	bf00      	nop
100010ec:	0000      	movs	r0, r0
	...

100010f0 <_ftoa>:
{
100010f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100010f4:	ed2d 8b02 	vpush	{d8}
100010f8:	b095      	sub	sp, #84	; 0x54
100010fa:	9007      	str	r0, [sp, #28]
100010fc:	910a      	str	r1, [sp, #40]	; 0x28
100010fe:	4692      	mov	sl, r2
10001100:	469b      	mov	fp, r3
10001102:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10001106:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001108:	4642      	mov	r2, r8
1000110a:	464b      	mov	r3, r9
1000110c:	4640      	mov	r0, r8
1000110e:	4649      	mov	r1, r9
10001110:	f003 fa94 	bl	1000463c <__aeabi_dcmpeq>
10001114:	2800      	cmp	r0, #0
10001116:	d040      	beq.n	1000119a <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001118:	f04f 32ff 	mov.w	r2, #4294967295
1000111c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001120:	4640      	mov	r0, r8
10001122:	4649      	mov	r1, r9
10001124:	f003 fa94 	bl	10004650 <__aeabi_dcmplt>
10001128:	2800      	cmp	r0, #0
1000112a:	d145      	bne.n	100011b8 <_ftoa+0xc8>
  if (value > DBL_MAX)
1000112c:	f04f 32ff 	mov.w	r2, #4294967295
10001130:	4b9f      	ldr	r3, [pc, #636]	; (100013b0 <_ftoa+0x2c0>)
10001132:	4640      	mov	r0, r8
10001134:	4649      	mov	r1, r9
10001136:	f003 faa9 	bl	1000468c <__aeabi_dcmpgt>
1000113a:	2800      	cmp	r0, #0
1000113c:	d14b      	bne.n	100011d6 <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
1000113e:	a398      	add	r3, pc, #608	; (adr r3, 100013a0 <_ftoa+0x2b0>)
10001140:	e9d3 2300 	ldrd	r2, r3, [r3]
10001144:	4640      	mov	r0, r8
10001146:	4649      	mov	r1, r9
10001148:	f003 faa0 	bl	1000468c <__aeabi_dcmpgt>
1000114c:	2800      	cmp	r0, #0
1000114e:	d15a      	bne.n	10001206 <_ftoa+0x116>
10001150:	a395      	add	r3, pc, #596	; (adr r3, 100013a8 <_ftoa+0x2b8>)
10001152:	e9d3 2300 	ldrd	r2, r3, [r3]
10001156:	4640      	mov	r0, r8
10001158:	4649      	mov	r1, r9
1000115a:	f003 fa79 	bl	10004650 <__aeabi_dcmplt>
1000115e:	2800      	cmp	r0, #0
10001160:	d151      	bne.n	10001206 <_ftoa+0x116>
  if (value < 0) {
10001162:	2200      	movs	r2, #0
10001164:	2300      	movs	r3, #0
10001166:	4640      	mov	r0, r8
10001168:	4649      	mov	r1, r9
1000116a:	f003 fa71 	bl	10004650 <__aeabi_dcmplt>
1000116e:	2800      	cmp	r0, #0
10001170:	d157      	bne.n	10001222 <_ftoa+0x132>
  bool negative = false;
10001172:	2300      	movs	r3, #0
10001174:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
10001176:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001178:	f413 6f80 	tst.w	r3, #1024	; 0x400
1000117c:	d05c      	beq.n	10001238 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
1000117e:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001180:	2c1f      	cmp	r4, #31
10001182:	d85b      	bhi.n	1000123c <_ftoa+0x14c>
10001184:	2d09      	cmp	r5, #9
10001186:	d959      	bls.n	1000123c <_ftoa+0x14c>
    buf[len++] = '0';
10001188:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000118c:	446b      	add	r3, sp
1000118e:	2230      	movs	r2, #48	; 0x30
10001190:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
10001194:	3d01      	subs	r5, #1
    buf[len++] = '0';
10001196:	3401      	adds	r4, #1
10001198:	e7f2      	b.n	10001180 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
1000119a:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000119c:	9303      	str	r3, [sp, #12]
1000119e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011a0:	9302      	str	r3, [sp, #8]
100011a2:	2303      	movs	r3, #3
100011a4:	9301      	str	r3, [sp, #4]
100011a6:	4b83      	ldr	r3, [pc, #524]	; (100013b4 <_ftoa+0x2c4>)
100011a8:	9300      	str	r3, [sp, #0]
100011aa:	465b      	mov	r3, fp
100011ac:	4652      	mov	r2, sl
100011ae:	990a      	ldr	r1, [sp, #40]	; 0x28
100011b0:	9807      	ldr	r0, [sp, #28]
100011b2:	f7ff fc1c 	bl	100009ee <_out_rev>
100011b6:	e12c      	b.n	10001412 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100011b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011ba:	9303      	str	r3, [sp, #12]
100011bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011be:	9302      	str	r3, [sp, #8]
100011c0:	2304      	movs	r3, #4
100011c2:	9301      	str	r3, [sp, #4]
100011c4:	4b7c      	ldr	r3, [pc, #496]	; (100013b8 <_ftoa+0x2c8>)
100011c6:	9300      	str	r3, [sp, #0]
100011c8:	465b      	mov	r3, fp
100011ca:	4652      	mov	r2, sl
100011cc:	990a      	ldr	r1, [sp, #40]	; 0x28
100011ce:	9807      	ldr	r0, [sp, #28]
100011d0:	f7ff fc0d 	bl	100009ee <_out_rev>
100011d4:	e11d      	b.n	10001412 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100011d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011d8:	f013 0304 	ands.w	r3, r3, #4
100011dc:	d00f      	beq.n	100011fe <_ftoa+0x10e>
100011de:	4a77      	ldr	r2, [pc, #476]	; (100013bc <_ftoa+0x2cc>)
100011e0:	b17b      	cbz	r3, 10001202 <_ftoa+0x112>
100011e2:	2304      	movs	r3, #4
100011e4:	9924      	ldr	r1, [sp, #144]	; 0x90
100011e6:	9103      	str	r1, [sp, #12]
100011e8:	9923      	ldr	r1, [sp, #140]	; 0x8c
100011ea:	9102      	str	r1, [sp, #8]
100011ec:	9301      	str	r3, [sp, #4]
100011ee:	9200      	str	r2, [sp, #0]
100011f0:	465b      	mov	r3, fp
100011f2:	4652      	mov	r2, sl
100011f4:	990a      	ldr	r1, [sp, #40]	; 0x28
100011f6:	9807      	ldr	r0, [sp, #28]
100011f8:	f7ff fbf9 	bl	100009ee <_out_rev>
100011fc:	e109      	b.n	10001412 <_ftoa+0x322>
100011fe:	4a70      	ldr	r2, [pc, #448]	; (100013c0 <_ftoa+0x2d0>)
10001200:	e7ee      	b.n	100011e0 <_ftoa+0xf0>
10001202:	2303      	movs	r3, #3
10001204:	e7ee      	b.n	100011e4 <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
10001206:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001208:	9304      	str	r3, [sp, #16]
1000120a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000120c:	9303      	str	r3, [sp, #12]
1000120e:	9502      	str	r5, [sp, #8]
10001210:	e9cd 8900 	strd	r8, r9, [sp]
10001214:	465b      	mov	r3, fp
10001216:	4652      	mov	r2, sl
10001218:	990a      	ldr	r1, [sp, #40]	; 0x28
1000121a:	9807      	ldr	r0, [sp, #28]
1000121c:	f7ff fd70 	bl	10000d00 <_etoa>
10001220:	e0f7      	b.n	10001412 <_ftoa+0x322>
    value = 0 - value;
10001222:	4642      	mov	r2, r8
10001224:	464b      	mov	r3, r9
10001226:	2000      	movs	r0, #0
10001228:	2100      	movs	r1, #0
1000122a:	f002 fde7 	bl	10003dfc <__aeabi_dsub>
1000122e:	4680      	mov	r8, r0
10001230:	4689      	mov	r9, r1
    negative = true;
10001232:	2301      	movs	r3, #1
10001234:	930b      	str	r3, [sp, #44]	; 0x2c
10001236:	e79e      	b.n	10001176 <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001238:	2506      	movs	r5, #6
1000123a:	e7a0      	b.n	1000117e <_ftoa+0x8e>
  int whole = (int)value;
1000123c:	4640      	mov	r0, r8
1000123e:	4649      	mov	r1, r9
10001240:	f003 fa2e 	bl	100046a0 <__aeabi_d2iz>
10001244:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
10001246:	f002 ff27 	bl	10004098 <__aeabi_i2d>
1000124a:	4602      	mov	r2, r0
1000124c:	460b      	mov	r3, r1
1000124e:	4640      	mov	r0, r8
10001250:	4649      	mov	r1, r9
10001252:	f002 fdd3 	bl	10003dfc <__aeabi_dsub>
10001256:	4b5b      	ldr	r3, [pc, #364]	; (100013c4 <_ftoa+0x2d4>)
10001258:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
1000125c:	ed93 8b00 	vldr	d8, [r3]
10001260:	ec53 2b18 	vmov	r2, r3, d8
10001264:	f002 ff82 	bl	1000416c <__aeabi_dmul>
10001268:	4602      	mov	r2, r0
1000126a:	460b      	mov	r3, r1
1000126c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001270:	f003 fa3e 	bl	100046f0 <__aeabi_d2uiz>
10001274:	4607      	mov	r7, r0
  diff = tmp - frac;
10001276:	f002 feff 	bl	10004078 <__aeabi_ui2d>
1000127a:	4602      	mov	r2, r0
1000127c:	460b      	mov	r3, r1
1000127e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001282:	f002 fdbb 	bl	10003dfc <__aeabi_dsub>
10001286:	4602      	mov	r2, r0
10001288:	460b      	mov	r3, r1
1000128a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
1000128e:	2200      	movs	r2, #0
10001290:	4b4d      	ldr	r3, [pc, #308]	; (100013c8 <_ftoa+0x2d8>)
10001292:	f003 f9fb 	bl	1000468c <__aeabi_dcmpgt>
10001296:	b350      	cbz	r0, 100012ee <_ftoa+0x1fe>
    ++frac;
10001298:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
1000129a:	4638      	mov	r0, r7
1000129c:	f002 feec 	bl	10004078 <__aeabi_ui2d>
100012a0:	4602      	mov	r2, r0
100012a2:	460b      	mov	r3, r1
100012a4:	ec51 0b18 	vmov	r0, r1, d8
100012a8:	f003 f9dc 	bl	10004664 <__aeabi_dcmple>
100012ac:	b108      	cbz	r0, 100012b2 <_ftoa+0x1c2>
      ++whole;
100012ae:	3601      	adds	r6, #1
      frac = 0;
100012b0:	2700      	movs	r7, #0
  if (prec == 0U) {
100012b2:	bb55      	cbnz	r5, 1000130a <_ftoa+0x21a>
    diff = value - (double)whole;
100012b4:	4630      	mov	r0, r6
100012b6:	f002 feef 	bl	10004098 <__aeabi_i2d>
100012ba:	4602      	mov	r2, r0
100012bc:	460b      	mov	r3, r1
100012be:	4640      	mov	r0, r8
100012c0:	4649      	mov	r1, r9
100012c2:	f002 fd9b 	bl	10003dfc <__aeabi_dsub>
100012c6:	4607      	mov	r7, r0
100012c8:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100012ca:	2200      	movs	r2, #0
100012cc:	4b3e      	ldr	r3, [pc, #248]	; (100013c8 <_ftoa+0x2d8>)
100012ce:	f003 f9bf 	bl	10004650 <__aeabi_dcmplt>
100012d2:	b138      	cbz	r0, 100012e4 <_ftoa+0x1f4>
100012d4:	2200      	movs	r2, #0
100012d6:	4b3c      	ldr	r3, [pc, #240]	; (100013c8 <_ftoa+0x2d8>)
100012d8:	4638      	mov	r0, r7
100012da:	4641      	mov	r1, r8
100012dc:	f003 f9d6 	bl	1000468c <__aeabi_dcmpgt>
100012e0:	2800      	cmp	r0, #0
100012e2:	d042      	beq.n	1000136a <_ftoa+0x27a>
100012e4:	f016 0f01 	tst.w	r6, #1
100012e8:	d03f      	beq.n	1000136a <_ftoa+0x27a>
      ++whole;
100012ea:	3601      	adds	r6, #1
100012ec:	e03d      	b.n	1000136a <_ftoa+0x27a>
  else if (diff < 0.5) {
100012ee:	2200      	movs	r2, #0
100012f0:	4b35      	ldr	r3, [pc, #212]	; (100013c8 <_ftoa+0x2d8>)
100012f2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100012f6:	f003 f9ab 	bl	10004650 <__aeabi_dcmplt>
100012fa:	2800      	cmp	r0, #0
100012fc:	d1d9      	bne.n	100012b2 <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
100012fe:	b117      	cbz	r7, 10001306 <_ftoa+0x216>
10001300:	f017 0f01 	tst.w	r7, #1
10001304:	d0d5      	beq.n	100012b2 <_ftoa+0x1c2>
    ++frac;
10001306:	3701      	adds	r7, #1
10001308:	e7d3      	b.n	100012b2 <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000130a:	2c1f      	cmp	r4, #31
1000130c:	d817      	bhi.n	1000133e <_ftoa+0x24e>
      --count;
1000130e:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001310:	4b2e      	ldr	r3, [pc, #184]	; (100013cc <_ftoa+0x2dc>)
10001312:	fba3 2307 	umull	r2, r3, r3, r7
10001316:	08db      	lsrs	r3, r3, #3
10001318:	4619      	mov	r1, r3
1000131a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1000131e:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
10001322:	1c62      	adds	r2, r4, #1
10001324:	3330      	adds	r3, #48	; 0x30
10001326:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000132a:	eb0d 0400 	add.w	r4, sp, r0
1000132e:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
10001332:	2f09      	cmp	r7, #9
10001334:	d902      	bls.n	1000133c <_ftoa+0x24c>
10001336:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001338:	4614      	mov	r4, r2
1000133a:	e7e6      	b.n	1000130a <_ftoa+0x21a>
1000133c:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000133e:	2c1f      	cmp	r4, #31
10001340:	d80a      	bhi.n	10001358 <_ftoa+0x268>
10001342:	1e6b      	subs	r3, r5, #1
10001344:	b145      	cbz	r5, 10001358 <_ftoa+0x268>
      buf[len++] = '0';
10001346:	f104 0250 	add.w	r2, r4, #80	; 0x50
1000134a:	446a      	add	r2, sp
1000134c:	2130      	movs	r1, #48	; 0x30
1000134e:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001352:	461d      	mov	r5, r3
      buf[len++] = '0';
10001354:	3401      	adds	r4, #1
10001356:	e7f2      	b.n	1000133e <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001358:	2c1f      	cmp	r4, #31
1000135a:	d806      	bhi.n	1000136a <_ftoa+0x27a>
      buf[len++] = '.';
1000135c:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001360:	446b      	add	r3, sp
10001362:	222e      	movs	r2, #46	; 0x2e
10001364:	f803 2c20 	strb.w	r2, [r3, #-32]
10001368:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000136a:	2c1f      	cmp	r4, #31
1000136c:	d833      	bhi.n	100013d6 <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
1000136e:	4a18      	ldr	r2, [pc, #96]	; (100013d0 <_ftoa+0x2e0>)
10001370:	fb82 3206 	smull	r3, r2, r2, r6
10001374:	17f3      	asrs	r3, r6, #31
10001376:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
1000137a:	461a      	mov	r2, r3
1000137c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001380:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
10001384:	1c61      	adds	r1, r4, #1
10001386:	3330      	adds	r3, #48	; 0x30
10001388:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000138c:	eb0d 0400 	add.w	r4, sp, r0
10001390:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
10001394:	4616      	mov	r6, r2
10001396:	b1ea      	cbz	r2, 100013d4 <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001398:	460c      	mov	r4, r1
1000139a:	e7e6      	b.n	1000136a <_ftoa+0x27a>
1000139c:	f3af 8000 	nop.w
100013a0:	00000000 	andeq	r0, r0, r0
100013a4:	41cdcd65 	bicmi	ip, sp, r5, ror #26
100013a8:	00000000 	andeq	r0, r0, r0
100013ac:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100013b0:	7fefffff 	svcvc	0x00efffff
100013b4:	10005b50 	andne	r5, r0, r0, asr fp
100013b8:	10005b54 	andne	r5, r0, r4, asr fp
100013bc:	10005b48 	andne	r5, r0, r8, asr #22
100013c0:	10005b44 	andne	r5, r0, r4, asr #22
100013c4:	10005b60 	andne	r5, r0, r0, ror #22
100013c8:	3fe00000 	svccc	0x00e00000
100013cc:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100013d0:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100013d4:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100013d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013d8:	f003 0303 	and.w	r3, r3, #3
100013dc:	2b01      	cmp	r3, #1
100013de:	d01d      	beq.n	1000141c <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
100013e0:	2c1f      	cmp	r4, #31
100013e2:	d809      	bhi.n	100013f8 <_ftoa+0x308>
    if (negative) {
100013e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100013e6:	2b00      	cmp	r3, #0
100013e8:	d035      	beq.n	10001456 <_ftoa+0x366>
      buf[len++] = '-';
100013ea:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013ee:	446b      	add	r3, sp
100013f0:	222d      	movs	r2, #45	; 0x2d
100013f2:	f803 2c20 	strb.w	r2, [r3, #-32]
100013f6:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100013f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013fa:	9303      	str	r3, [sp, #12]
100013fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013fe:	9302      	str	r3, [sp, #8]
10001400:	9401      	str	r4, [sp, #4]
10001402:	ab0c      	add	r3, sp, #48	; 0x30
10001404:	9300      	str	r3, [sp, #0]
10001406:	465b      	mov	r3, fp
10001408:	4652      	mov	r2, sl
1000140a:	990a      	ldr	r1, [sp, #40]	; 0x28
1000140c:	9807      	ldr	r0, [sp, #28]
1000140e:	f7ff faee 	bl	100009ee <_out_rev>
}
10001412:	b015      	add	sp, #84	; 0x54
10001414:	ecbd 8b02 	vpop	{d8}
10001418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
1000141c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000141e:	b1b3      	cbz	r3, 1000144e <_ftoa+0x35e>
10001420:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001422:	b91b      	cbnz	r3, 1000142c <_ftoa+0x33c>
10001424:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001426:	f013 0f0c 	tst.w	r3, #12
1000142a:	d012      	beq.n	10001452 <_ftoa+0x362>
      width--;
1000142c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000142e:	3b01      	subs	r3, #1
10001430:	9323      	str	r3, [sp, #140]	; 0x8c
10001432:	4619      	mov	r1, r3
10001434:	e006      	b.n	10001444 <_ftoa+0x354>
      buf[len++] = '0';
10001436:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000143a:	446b      	add	r3, sp
1000143c:	2230      	movs	r2, #48	; 0x30
1000143e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001442:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
10001444:	428c      	cmp	r4, r1
10001446:	d2cb      	bcs.n	100013e0 <_ftoa+0x2f0>
10001448:	2c1f      	cmp	r4, #31
1000144a:	d9f4      	bls.n	10001436 <_ftoa+0x346>
1000144c:	e7c8      	b.n	100013e0 <_ftoa+0x2f0>
1000144e:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001450:	e7f8      	b.n	10001444 <_ftoa+0x354>
10001452:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001454:	e7f6      	b.n	10001444 <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
10001456:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001458:	f013 0f04 	tst.w	r3, #4
1000145c:	d007      	beq.n	1000146e <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
1000145e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001462:	446b      	add	r3, sp
10001464:	222b      	movs	r2, #43	; 0x2b
10001466:	f803 2c20 	strb.w	r2, [r3, #-32]
1000146a:	3401      	adds	r4, #1
1000146c:	e7c4      	b.n	100013f8 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
1000146e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001470:	f013 0f08 	tst.w	r3, #8
10001474:	d0c0      	beq.n	100013f8 <_ftoa+0x308>
      buf[len++] = ' ';
10001476:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000147a:	446b      	add	r3, sp
1000147c:	2220      	movs	r2, #32
1000147e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001482:	3401      	adds	r4, #1
10001484:	e7b8      	b.n	100013f8 <_ftoa+0x308>
10001486:	bf00      	nop

10001488 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000148c:	b08f      	sub	sp, #60	; 0x3c
1000148e:	4607      	mov	r7, r0
10001490:	4616      	mov	r6, r2
10001492:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
10001494:	4688      	mov	r8, r1
10001496:	2900      	cmp	r1, #0
10001498:	f000 8324 	beq.w	10001ae4 <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
1000149c:	2400      	movs	r4, #0
  while (*format)
1000149e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014a0:	7818      	ldrb	r0, [r3, #0]
100014a2:	2800      	cmp	r0, #0
100014a4:	f000 8320 	beq.w	10001ae8 <_vsnprintf+0x660>
    if (*format != '%') {
100014a8:	2825      	cmp	r0, #37	; 0x25
100014aa:	d009      	beq.n	100014c0 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
100014ac:	1c65      	adds	r5, r4, #1
100014ae:	4633      	mov	r3, r6
100014b0:	4622      	mov	r2, r4
100014b2:	4641      	mov	r1, r8
100014b4:	47b8      	blx	r7
      format++;
100014b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014b8:	3301      	adds	r3, #1
100014ba:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100014bc:	462c      	mov	r4, r5
      continue;
100014be:	e7ee      	b.n	1000149e <_vsnprintf+0x16>
      format++;
100014c0:	3301      	adds	r3, #1
100014c2:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100014c4:	2500      	movs	r5, #0
      switch (*format) {
100014c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014c8:	7819      	ldrb	r1, [r3, #0]
100014ca:	f1a1 0220 	sub.w	r2, r1, #32
100014ce:	2a10      	cmp	r2, #16
100014d0:	d80a      	bhi.n	100014e8 <_vsnprintf+0x60>
100014d2:	e8df f002 	tbb	[pc, r2]
100014d6:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100014da:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100014de:	33090909 	movwcc	r0, #39177	; 0x9909
100014e2:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
100014e6:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
100014ea:	0330      	lsls	r0, r6, #12
100014ec:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
100014ee:	2b09      	cmp	r3, #9
100014f0:	d933      	bls.n	1000155a <_vsnprintf+0xd2>
    else if (*format == '*') {
100014f2:	292a      	cmp	r1, #42	; 0x2a
100014f4:	d036      	beq.n	10001564 <_vsnprintf+0xdc>
    width = 0U;
100014f6:	2300      	movs	r3, #0
100014f8:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
100014fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014fc:	781a      	ldrb	r2, [r3, #0]
100014fe:	2a2e      	cmp	r2, #46	; 0x2e
10001500:	d040      	beq.n	10001584 <_vsnprintf+0xfc>
    precision = 0U;
10001502:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
10001506:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001508:	7813      	ldrb	r3, [r2, #0]
1000150a:	3b68      	subs	r3, #104	; 0x68
1000150c:	2b12      	cmp	r3, #18
1000150e:	d877      	bhi.n	10001600 <_vsnprintf+0x178>
10001510:	e8df f003 	tbb	[pc, r3]
10001514:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001518:	76767656 			; <UNDEFINED> instruction: 0x76767656
1000151c:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001520:	76767672 			; <UNDEFINED> instruction: 0x76767672
10001524:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001528:	f045 0501 	orr.w	r5, r5, #1
1000152c:	3301      	adds	r3, #1
1000152e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001530:	e7c9      	b.n	100014c6 <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
10001532:	f045 0502 	orr.w	r5, r5, #2
10001536:	3301      	adds	r3, #1
10001538:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000153a:	e7c4      	b.n	100014c6 <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
1000153c:	f045 0504 	orr.w	r5, r5, #4
10001540:	3301      	adds	r3, #1
10001542:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001544:	e7bf      	b.n	100014c6 <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
10001546:	f045 0508 	orr.w	r5, r5, #8
1000154a:	3301      	adds	r3, #1
1000154c:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000154e:	e7ba      	b.n	100014c6 <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001550:	f045 0510 	orr.w	r5, r5, #16
10001554:	3301      	adds	r3, #1
10001556:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001558:	e7b5      	b.n	100014c6 <_vsnprintf+0x3e>
      width = _atoi(&format);
1000155a:	a80d      	add	r0, sp, #52	; 0x34
1000155c:	f7ff fa35 	bl	100009ca <_atoi>
10001560:	900a      	str	r0, [sp, #40]	; 0x28
10001562:	e7ca      	b.n	100014fa <_vsnprintf+0x72>
      const int w = va_arg(va, int);
10001564:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001566:	1d1a      	adds	r2, r3, #4
10001568:	9218      	str	r2, [sp, #96]	; 0x60
1000156a:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
1000156c:	2800      	cmp	r0, #0
1000156e:	db04      	blt.n	1000157a <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001570:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
10001572:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001574:	3301      	adds	r3, #1
10001576:	930d      	str	r3, [sp, #52]	; 0x34
10001578:	e7bf      	b.n	100014fa <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
1000157a:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
1000157e:	4243      	negs	r3, r0
10001580:	930a      	str	r3, [sp, #40]	; 0x28
10001582:	e7f6      	b.n	10001572 <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
10001584:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001588:	1c5a      	adds	r2, r3, #1
1000158a:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
1000158c:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
1000158e:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
10001592:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
10001594:	2b09      	cmp	r3, #9
10001596:	d904      	bls.n	100015a2 <_vsnprintf+0x11a>
      else if (*format == '*') {
10001598:	2a2a      	cmp	r2, #42	; 0x2a
1000159a:	d007      	beq.n	100015ac <_vsnprintf+0x124>
    precision = 0U;
1000159c:	f04f 0b00 	mov.w	fp, #0
100015a0:	e7b1      	b.n	10001506 <_vsnprintf+0x7e>
        precision = _atoi(&format);
100015a2:	a80d      	add	r0, sp, #52	; 0x34
100015a4:	f7ff fa11 	bl	100009ca <_atoi>
100015a8:	4683      	mov	fp, r0
100015aa:	e7ac      	b.n	10001506 <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
100015ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
100015ae:	1d1a      	adds	r2, r3, #4
100015b0:	9218      	str	r2, [sp, #96]	; 0x60
100015b2:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100015b4:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100015b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015ba:	3301      	adds	r3, #1
100015bc:	930d      	str	r3, [sp, #52]	; 0x34
100015be:	e7a2      	b.n	10001506 <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100015c0:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100015c4:	1c53      	adds	r3, r2, #1
100015c6:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100015c8:	7852      	ldrb	r2, [r2, #1]
100015ca:	2a6c      	cmp	r2, #108	; 0x6c
100015cc:	d001      	beq.n	100015d2 <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100015ce:	460d      	mov	r5, r1
100015d0:	e016      	b.n	10001600 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100015d2:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100015d6:	3301      	adds	r3, #1
100015d8:	930d      	str	r3, [sp, #52]	; 0x34
100015da:	e011      	b.n	10001600 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100015dc:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
100015e0:	1c53      	adds	r3, r2, #1
100015e2:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
100015e4:	7852      	ldrb	r2, [r2, #1]
100015e6:	2a68      	cmp	r2, #104	; 0x68
100015e8:	d001      	beq.n	100015ee <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
100015ea:	460d      	mov	r5, r1
100015ec:	e008      	b.n	10001600 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
100015ee:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
100015f2:	3301      	adds	r3, #1
100015f4:	930d      	str	r3, [sp, #52]	; 0x34
100015f6:	e003      	b.n	10001600 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015f8:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015fc:	3201      	adds	r2, #1
100015fe:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
10001600:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001602:	7818      	ldrb	r0, [r3, #0]
10001604:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001608:	2b53      	cmp	r3, #83	; 0x53
1000160a:	f200 8261 	bhi.w	10001ad0 <_vsnprintf+0x648>
1000160e:	e8df f013 	tbh	[pc, r3, lsl #1]
10001612:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
10001616:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001622:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001626:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001632:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001636:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001642:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001646:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000164a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000164e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001652:	01540174 	cmpeq	r4, r4, ror r1
10001656:	025f0174 	subseq	r0, pc, #116, 2
1000165a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001662:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001666:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001672:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001676:	005e025f 	subseq	r0, lr, pc, asr r2
1000167a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001682:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001686:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000168a:	005e025f 	subseq	r0, lr, pc, asr r2
1000168e:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
10001692:	01540174 	cmpeq	r4, r4, ror r1
10001696:	025f0174 	subseq	r0, pc, #116, 2
1000169a:	025f005e 	subseq	r0, pc, #94	; 0x5e
1000169e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016a6:	0239005e 	eorseq	r0, r9, #94	; 0x5e
100016aa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016ae:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100016b2:	025f005e 	subseq	r0, pc, #94	; 0x5e
100016b6:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016ba:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100016be:	3201      	adds	r2, #1
100016c0:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016c2:	e79d      	b.n	10001600 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016c4:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100016c8:	3201      	adds	r2, #1
100016ca:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016cc:	e798      	b.n	10001600 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100016ce:	2878      	cmp	r0, #120	; 0x78
100016d0:	d009      	beq.n	100016e6 <_vsnprintf+0x25e>
100016d2:	2858      	cmp	r0, #88	; 0x58
100016d4:	d03a      	beq.n	1000174c <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100016d6:	286f      	cmp	r0, #111	; 0x6f
100016d8:	d03a      	beq.n	10001750 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100016da:	2862      	cmp	r0, #98	; 0x62
100016dc:	d03a      	beq.n	10001754 <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100016de:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
100016e2:	230a      	movs	r3, #10
100016e4:	e000      	b.n	100016e8 <_vsnprintf+0x260>
          base = 16U;
100016e6:	2310      	movs	r3, #16
        if (*format == 'X') {
100016e8:	2858      	cmp	r0, #88	; 0x58
100016ea:	d035      	beq.n	10001758 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
100016ec:	2869      	cmp	r0, #105	; 0x69
100016ee:	d003      	beq.n	100016f8 <_vsnprintf+0x270>
100016f0:	2864      	cmp	r0, #100	; 0x64
100016f2:	d001      	beq.n	100016f8 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
100016f4:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
100016f8:	f415 6f80 	tst.w	r5, #1024	; 0x400
100016fc:	d001      	beq.n	10001702 <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
100016fe:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
10001702:	2869      	cmp	r0, #105	; 0x69
10001704:	d02b      	beq.n	1000175e <_vsnprintf+0x2d6>
10001706:	2864      	cmp	r0, #100	; 0x64
10001708:	d029      	beq.n	1000175e <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
1000170a:	f415 7f00 	tst.w	r5, #512	; 0x200
1000170e:	f040 8096 	bne.w	1000183e <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
10001712:	f415 7f80 	tst.w	r5, #256	; 0x100
10001716:	f040 80ae 	bne.w	10001876 <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
1000171a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000171e:	f000 80bf 	beq.w	100018a0 <_vsnprintf+0x418>
10001722:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001724:	1d11      	adds	r1, r2, #4
10001726:	9118      	str	r1, [sp, #96]	; 0x60
10001728:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
1000172a:	9505      	str	r5, [sp, #20]
1000172c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000172e:	9104      	str	r1, [sp, #16]
10001730:	f8cd b00c 	str.w	fp, [sp, #12]
10001734:	9302      	str	r3, [sp, #8]
10001736:	2300      	movs	r3, #0
10001738:	9301      	str	r3, [sp, #4]
1000173a:	9200      	str	r2, [sp, #0]
1000173c:	4633      	mov	r3, r6
1000173e:	4622      	mov	r2, r4
10001740:	4641      	mov	r1, r8
10001742:	4638      	mov	r0, r7
10001744:	f7ff fa2e 	bl	10000ba4 <_ntoa_long>
10001748:	4604      	mov	r4, r0
1000174a:	e029      	b.n	100017a0 <_vsnprintf+0x318>
          base = 16U;
1000174c:	2310      	movs	r3, #16
1000174e:	e7cb      	b.n	100016e8 <_vsnprintf+0x260>
          base =  8U;
10001750:	2308      	movs	r3, #8
10001752:	e7c9      	b.n	100016e8 <_vsnprintf+0x260>
          base =  2U;
10001754:	2302      	movs	r3, #2
10001756:	e7c7      	b.n	100016e8 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001758:	f045 0520 	orr.w	r5, r5, #32
1000175c:	e7c6      	b.n	100016ec <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
1000175e:	f415 7f00 	tst.w	r5, #512	; 0x200
10001762:	d121      	bne.n	100017a8 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
10001764:	f415 7f80 	tst.w	r5, #256	; 0x100
10001768:	d142      	bne.n	100017f0 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000176a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000176e:	d058      	beq.n	10001822 <_vsnprintf+0x39a>
10001770:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001772:	1d11      	adds	r1, r2, #4
10001774:	9118      	str	r1, [sp, #96]	; 0x60
10001776:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001778:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000177c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001780:	9505      	str	r5, [sp, #20]
10001782:	980a      	ldr	r0, [sp, #40]	; 0x28
10001784:	9004      	str	r0, [sp, #16]
10001786:	f8cd b00c 	str.w	fp, [sp, #12]
1000178a:	9302      	str	r3, [sp, #8]
1000178c:	0fd2      	lsrs	r2, r2, #31
1000178e:	9201      	str	r2, [sp, #4]
10001790:	9100      	str	r1, [sp, #0]
10001792:	4633      	mov	r3, r6
10001794:	4622      	mov	r2, r4
10001796:	4641      	mov	r1, r8
10001798:	4638      	mov	r0, r7
1000179a:	f7ff fa03 	bl	10000ba4 <_ntoa_long>
1000179e:	4604      	mov	r4, r0
        format++;
100017a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100017a2:	3301      	adds	r3, #1
100017a4:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100017a6:	e67a      	b.n	1000149e <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
100017a8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017aa:	3207      	adds	r2, #7
100017ac:	f022 0207 	bic.w	r2, r2, #7
100017b0:	f102 0108 	add.w	r1, r2, #8
100017b4:	9118      	str	r1, [sp, #96]	; 0x60
100017b6:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017b8:	6812      	ldr	r2, [r2, #0]
100017ba:	4608      	mov	r0, r1
100017bc:	2900      	cmp	r1, #0
100017be:	db13      	blt.n	100017e8 <_vsnprintf+0x360>
100017c0:	9508      	str	r5, [sp, #32]
100017c2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100017c4:	9507      	str	r5, [sp, #28]
100017c6:	f8cd b018 	str.w	fp, [sp, #24]
100017ca:	9304      	str	r3, [sp, #16]
100017cc:	2300      	movs	r3, #0
100017ce:	9305      	str	r3, [sp, #20]
100017d0:	0fc9      	lsrs	r1, r1, #31
100017d2:	9102      	str	r1, [sp, #8]
100017d4:	9200      	str	r2, [sp, #0]
100017d6:	9001      	str	r0, [sp, #4]
100017d8:	4633      	mov	r3, r6
100017da:	4622      	mov	r2, r4
100017dc:	4641      	mov	r1, r8
100017de:	4638      	mov	r0, r7
100017e0:	f7ff fa2a 	bl	10000c38 <_ntoa_long_long>
100017e4:	4604      	mov	r4, r0
100017e6:	e7db      	b.n	100017a0 <_vsnprintf+0x318>
100017e8:	4252      	negs	r2, r2
100017ea:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
100017ee:	e7e7      	b.n	100017c0 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
100017f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017f2:	1d11      	adds	r1, r2, #4
100017f4:	9118      	str	r1, [sp, #96]	; 0x60
100017f6:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017f8:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100017fc:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001800:	9505      	str	r5, [sp, #20]
10001802:	980a      	ldr	r0, [sp, #40]	; 0x28
10001804:	9004      	str	r0, [sp, #16]
10001806:	f8cd b00c 	str.w	fp, [sp, #12]
1000180a:	9302      	str	r3, [sp, #8]
1000180c:	0fd2      	lsrs	r2, r2, #31
1000180e:	9201      	str	r2, [sp, #4]
10001810:	9100      	str	r1, [sp, #0]
10001812:	4633      	mov	r3, r6
10001814:	4622      	mov	r2, r4
10001816:	4641      	mov	r1, r8
10001818:	4638      	mov	r0, r7
1000181a:	f7ff f9c3 	bl	10000ba4 <_ntoa_long>
1000181e:	4604      	mov	r4, r0
10001820:	e7be      	b.n	100017a0 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001822:	f015 0f80 	tst.w	r5, #128	; 0x80
10001826:	d005      	beq.n	10001834 <_vsnprintf+0x3ac>
10001828:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000182a:	1d11      	adds	r1, r2, #4
1000182c:	9118      	str	r1, [sp, #96]	; 0x60
1000182e:	f9b2 2000 	ldrsh.w	r2, [r2]
10001832:	e7a1      	b.n	10001778 <_vsnprintf+0x2f0>
10001834:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001836:	1d11      	adds	r1, r2, #4
10001838:	9118      	str	r1, [sp, #96]	; 0x60
1000183a:	6812      	ldr	r2, [r2, #0]
1000183c:	e79c      	b.n	10001778 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
1000183e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001840:	3207      	adds	r2, #7
10001842:	f022 0207 	bic.w	r2, r2, #7
10001846:	f102 0108 	add.w	r1, r2, #8
1000184a:	9118      	str	r1, [sp, #96]	; 0x60
1000184c:	9508      	str	r5, [sp, #32]
1000184e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001850:	9107      	str	r1, [sp, #28]
10001852:	f8cd b018 	str.w	fp, [sp, #24]
10001856:	2100      	movs	r1, #0
10001858:	9304      	str	r3, [sp, #16]
1000185a:	9105      	str	r1, [sp, #20]
1000185c:	9102      	str	r1, [sp, #8]
1000185e:	e9d2 2300 	ldrd	r2, r3, [r2]
10001862:	e9cd 2300 	strd	r2, r3, [sp]
10001866:	4633      	mov	r3, r6
10001868:	4622      	mov	r2, r4
1000186a:	4641      	mov	r1, r8
1000186c:	4638      	mov	r0, r7
1000186e:	f7ff f9e3 	bl	10000c38 <_ntoa_long_long>
10001872:	4604      	mov	r4, r0
10001874:	e794      	b.n	100017a0 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
10001876:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001878:	1d11      	adds	r1, r2, #4
1000187a:	9118      	str	r1, [sp, #96]	; 0x60
1000187c:	9505      	str	r5, [sp, #20]
1000187e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001880:	9104      	str	r1, [sp, #16]
10001882:	f8cd b00c 	str.w	fp, [sp, #12]
10001886:	9302      	str	r3, [sp, #8]
10001888:	2300      	movs	r3, #0
1000188a:	9301      	str	r3, [sp, #4]
1000188c:	6813      	ldr	r3, [r2, #0]
1000188e:	9300      	str	r3, [sp, #0]
10001890:	4633      	mov	r3, r6
10001892:	4622      	mov	r2, r4
10001894:	4641      	mov	r1, r8
10001896:	4638      	mov	r0, r7
10001898:	f7ff f984 	bl	10000ba4 <_ntoa_long>
1000189c:	4604      	mov	r4, r0
1000189e:	e77f      	b.n	100017a0 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100018a0:	f015 0f80 	tst.w	r5, #128	; 0x80
100018a4:	d004      	beq.n	100018b0 <_vsnprintf+0x428>
100018a6:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018a8:	1d11      	adds	r1, r2, #4
100018aa:	9118      	str	r1, [sp, #96]	; 0x60
100018ac:	8812      	ldrh	r2, [r2, #0]
100018ae:	e73c      	b.n	1000172a <_vsnprintf+0x2a2>
100018b0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018b2:	1d11      	adds	r1, r2, #4
100018b4:	9118      	str	r1, [sp, #96]	; 0x60
100018b6:	6812      	ldr	r2, [r2, #0]
100018b8:	e737      	b.n	1000172a <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018ba:	2846      	cmp	r0, #70	; 0x46
100018bc:	d01a      	beq.n	100018f4 <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100018be:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018c0:	3307      	adds	r3, #7
100018c2:	f023 0307 	bic.w	r3, r3, #7
100018c6:	f103 0208 	add.w	r2, r3, #8
100018ca:	9218      	str	r2, [sp, #96]	; 0x60
100018cc:	9504      	str	r5, [sp, #16]
100018ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100018d0:	9203      	str	r2, [sp, #12]
100018d2:	f8cd b008 	str.w	fp, [sp, #8]
100018d6:	e9d3 2300 	ldrd	r2, r3, [r3]
100018da:	e9cd 2300 	strd	r2, r3, [sp]
100018de:	4633      	mov	r3, r6
100018e0:	4622      	mov	r2, r4
100018e2:	4641      	mov	r1, r8
100018e4:	4638      	mov	r0, r7
100018e6:	f7ff fc03 	bl	100010f0 <_ftoa>
100018ea:	4604      	mov	r4, r0
        format++;
100018ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018ee:	3301      	adds	r3, #1
100018f0:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018f2:	e5d4      	b.n	1000149e <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018f4:	f045 0520 	orr.w	r5, r5, #32
100018f8:	e7e1      	b.n	100018be <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
100018fa:	2867      	cmp	r0, #103	; 0x67
100018fc:	d001      	beq.n	10001902 <_vsnprintf+0x47a>
100018fe:	2847      	cmp	r0, #71	; 0x47
10001900:	d101      	bne.n	10001906 <_vsnprintf+0x47e>
10001902:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
10001906:	2845      	cmp	r0, #69	; 0x45
10001908:	d001      	beq.n	1000190e <_vsnprintf+0x486>
1000190a:	2847      	cmp	r0, #71	; 0x47
1000190c:	d101      	bne.n	10001912 <_vsnprintf+0x48a>
1000190e:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001912:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001914:	3307      	adds	r3, #7
10001916:	f023 0307 	bic.w	r3, r3, #7
1000191a:	f103 0208 	add.w	r2, r3, #8
1000191e:	9218      	str	r2, [sp, #96]	; 0x60
10001920:	9504      	str	r5, [sp, #16]
10001922:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001924:	9203      	str	r2, [sp, #12]
10001926:	f8cd b008 	str.w	fp, [sp, #8]
1000192a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000192e:	e9cd 2300 	strd	r2, r3, [sp]
10001932:	4633      	mov	r3, r6
10001934:	4622      	mov	r2, r4
10001936:	4641      	mov	r1, r8
10001938:	4638      	mov	r0, r7
1000193a:	f7ff f9e1 	bl	10000d00 <_etoa>
1000193e:	4604      	mov	r4, r0
        format++;
10001940:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001942:	3301      	adds	r3, #1
10001944:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001946:	e5aa      	b.n	1000149e <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001948:	f015 0502 	ands.w	r5, r5, #2
1000194c:	d01f      	beq.n	1000198e <_vsnprintf+0x506>
        unsigned int l = 1U;
1000194e:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
10001952:	9818      	ldr	r0, [sp, #96]	; 0x60
10001954:	1d03      	adds	r3, r0, #4
10001956:	9318      	str	r3, [sp, #96]	; 0x60
10001958:	f104 0a01 	add.w	sl, r4, #1
1000195c:	4633      	mov	r3, r6
1000195e:	4622      	mov	r2, r4
10001960:	4641      	mov	r1, r8
10001962:	7800      	ldrb	r0, [r0, #0]
10001964:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
10001966:	b9bd      	cbnz	r5, 10001998 <_vsnprintf+0x510>
        format++;
10001968:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000196a:	3301      	adds	r3, #1
1000196c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000196e:	4654      	mov	r4, sl
10001970:	e595      	b.n	1000149e <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
10001972:	f102 0a01 	add.w	sl, r2, #1
10001976:	4633      	mov	r3, r6
10001978:	4641      	mov	r1, r8
1000197a:	2020      	movs	r0, #32
1000197c:	47b8      	blx	r7
          while (l++ < width) {
1000197e:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001980:	4652      	mov	r2, sl
          while (l++ < width) {
10001982:	f103 0901 	add.w	r9, r3, #1
10001986:	459b      	cmp	fp, r3
10001988:	d8f3      	bhi.n	10001972 <_vsnprintf+0x4ea>
1000198a:	4614      	mov	r4, r2
1000198c:	e7e1      	b.n	10001952 <_vsnprintf+0x4ca>
        unsigned int l = 1U;
1000198e:	2301      	movs	r3, #1
10001990:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
10001994:	4622      	mov	r2, r4
10001996:	e7f4      	b.n	10001982 <_vsnprintf+0x4fa>
10001998:	4652      	mov	r2, sl
1000199a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
1000199e:	e006      	b.n	100019ae <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
100019a0:	1c55      	adds	r5, r2, #1
100019a2:	4633      	mov	r3, r6
100019a4:	4641      	mov	r1, r8
100019a6:	2020      	movs	r0, #32
100019a8:	47b8      	blx	r7
          while (l++ < width) {
100019aa:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100019ac:	462a      	mov	r2, r5
          while (l++ < width) {
100019ae:	f109 0401 	add.w	r4, r9, #1
100019b2:	45ca      	cmp	sl, r9
100019b4:	d8f4      	bhi.n	100019a0 <_vsnprintf+0x518>
100019b6:	4692      	mov	sl, r2
100019b8:	e7d6      	b.n	10001968 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100019ba:	9b18      	ldr	r3, [sp, #96]	; 0x60
100019bc:	1d1a      	adds	r2, r3, #4
100019be:	9218      	str	r2, [sp, #96]	; 0x60
100019c0:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100019c4:	f1bb 0f00 	cmp.w	fp, #0
100019c8:	d11e      	bne.n	10001a08 <_vsnprintf+0x580>
100019ca:	f04f 33ff 	mov.w	r3, #4294967295
100019ce:	46d1      	mov	r9, sl
100019d0:	e002      	b.n	100019d8 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100019d2:	f109 0901 	add.w	r9, r9, #1
100019d6:	4613      	mov	r3, r2
100019d8:	f899 2000 	ldrb.w	r2, [r9]
100019dc:	b112      	cbz	r2, 100019e4 <_vsnprintf+0x55c>
100019de:	1e5a      	subs	r2, r3, #1
100019e0:	2b00      	cmp	r3, #0
100019e2:	d1f6      	bne.n	100019d2 <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
100019e4:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
100019e8:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
100019ec:	930b      	str	r3, [sp, #44]	; 0x2c
100019ee:	d002      	beq.n	100019f6 <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
100019f0:	45d9      	cmp	r9, fp
100019f2:	bf28      	it	cs
100019f4:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
100019f6:	f015 0302 	ands.w	r3, r5, #2
100019fa:	930c      	str	r3, [sp, #48]	; 0x30
100019fc:	d006      	beq.n	10001a0c <_vsnprintf+0x584>
100019fe:	4622      	mov	r2, r4
10001a00:	465c      	mov	r4, fp
10001a02:	46b3      	mov	fp, r6
10001a04:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a06:	e01d      	b.n	10001a44 <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001a08:	465b      	mov	r3, fp
10001a0a:	e7e0      	b.n	100019ce <_vsnprintf+0x546>
10001a0c:	4622      	mov	r2, r4
10001a0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001a10:	464b      	mov	r3, r9
10001a12:	e007      	b.n	10001a24 <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001a14:	f102 0901 	add.w	r9, r2, #1
10001a18:	4633      	mov	r3, r6
10001a1a:	4641      	mov	r1, r8
10001a1c:	2020      	movs	r0, #32
10001a1e:	47b8      	blx	r7
          while (l++ < width) {
10001a20:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001a22:	464a      	mov	r2, r9
          while (l++ < width) {
10001a24:	1c5d      	adds	r5, r3, #1
10001a26:	429c      	cmp	r4, r3
10001a28:	d8f4      	bhi.n	10001a14 <_vsnprintf+0x58c>
10001a2a:	46a9      	mov	r9, r5
10001a2c:	465c      	mov	r4, fp
10001a2e:	46b3      	mov	fp, r6
10001a30:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a32:	e007      	b.n	10001a44 <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a34:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001a36:	f10a 0a01 	add.w	sl, sl, #1
10001a3a:	1c55      	adds	r5, r2, #1
10001a3c:	465b      	mov	r3, fp
10001a3e:	4641      	mov	r1, r8
10001a40:	47b8      	blx	r7
10001a42:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a44:	f89a 0000 	ldrb.w	r0, [sl]
10001a48:	b120      	cbz	r0, 10001a54 <_vsnprintf+0x5cc>
10001a4a:	2e00      	cmp	r6, #0
10001a4c:	d0f3      	beq.n	10001a36 <_vsnprintf+0x5ae>
10001a4e:	1e63      	subs	r3, r4, #1
10001a50:	2c00      	cmp	r4, #0
10001a52:	d1ef      	bne.n	10001a34 <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001a54:	4614      	mov	r4, r2
10001a56:	465e      	mov	r6, fp
10001a58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10001a5a:	b91b      	cbnz	r3, 10001a64 <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
10001a5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a5e:	3301      	adds	r3, #1
10001a60:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001a62:	e51c      	b.n	1000149e <_vsnprintf+0x16>
10001a64:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001a68:	e006      	b.n	10001a78 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
10001a6a:	1c55      	adds	r5, r2, #1
10001a6c:	4633      	mov	r3, r6
10001a6e:	4641      	mov	r1, r8
10001a70:	2020      	movs	r0, #32
10001a72:	47b8      	blx	r7
          while (l++ < width) {
10001a74:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001a76:	462a      	mov	r2, r5
          while (l++ < width) {
10001a78:	f109 0401 	add.w	r4, r9, #1
10001a7c:	45ca      	cmp	sl, r9
10001a7e:	d8f4      	bhi.n	10001a6a <_vsnprintf+0x5e2>
10001a80:	4614      	mov	r4, r2
10001a82:	e7eb      	b.n	10001a5c <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001a84:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001a88:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001a8a:	1d1a      	adds	r2, r3, #4
10001a8c:	9218      	str	r2, [sp, #96]	; 0x60
10001a8e:	681b      	ldr	r3, [r3, #0]
10001a90:	9505      	str	r5, [sp, #20]
10001a92:	2208      	movs	r2, #8
10001a94:	9204      	str	r2, [sp, #16]
10001a96:	f8cd b00c 	str.w	fp, [sp, #12]
10001a9a:	2210      	movs	r2, #16
10001a9c:	9202      	str	r2, [sp, #8]
10001a9e:	2200      	movs	r2, #0
10001aa0:	9201      	str	r2, [sp, #4]
10001aa2:	9300      	str	r3, [sp, #0]
10001aa4:	4633      	mov	r3, r6
10001aa6:	4622      	mov	r2, r4
10001aa8:	4641      	mov	r1, r8
10001aaa:	4638      	mov	r0, r7
10001aac:	f7ff f87a 	bl	10000ba4 <_ntoa_long>
10001ab0:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
10001ab2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ab4:	3301      	adds	r3, #1
10001ab6:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001ab8:	e4f1      	b.n	1000149e <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001aba:	1c65      	adds	r5, r4, #1
10001abc:	4633      	mov	r3, r6
10001abe:	4622      	mov	r2, r4
10001ac0:	4641      	mov	r1, r8
10001ac2:	2025      	movs	r0, #37	; 0x25
10001ac4:	47b8      	blx	r7
        format++;
10001ac6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ac8:	3301      	adds	r3, #1
10001aca:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001acc:	462c      	mov	r4, r5
        break;
10001ace:	e4e6      	b.n	1000149e <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001ad0:	1c65      	adds	r5, r4, #1
10001ad2:	4633      	mov	r3, r6
10001ad4:	4622      	mov	r2, r4
10001ad6:	4641      	mov	r1, r8
10001ad8:	47b8      	blx	r7
        format++;
10001ada:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001adc:	3301      	adds	r3, #1
10001ade:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001ae0:	462c      	mov	r4, r5
        break;
10001ae2:	e4dc      	b.n	1000149e <_vsnprintf+0x16>
    out = _out_null;
10001ae4:	4f07      	ldr	r7, [pc, #28]	; (10001b04 <_vsnprintf+0x67c>)
10001ae6:	e4d9      	b.n	1000149c <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001ae8:	42b4      	cmp	r4, r6
10001aea:	d301      	bcc.n	10001af0 <_vsnprintf+0x668>
10001aec:	1e72      	subs	r2, r6, #1
10001aee:	e000      	b.n	10001af2 <_vsnprintf+0x66a>
10001af0:	4622      	mov	r2, r4
10001af2:	4633      	mov	r3, r6
10001af4:	4641      	mov	r1, r8
10001af6:	2000      	movs	r0, #0
10001af8:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001afa:	4620      	mov	r0, r4
10001afc:	b00f      	add	sp, #60	; 0x3c
10001afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001b02:	bf00      	nop
10001b04:	100009c9 	andne	r0, r0, r9, asr #19

10001b08 <_out_char>:
  if (character) {
10001b08:	b900      	cbnz	r0, 10001b0c <_out_char+0x4>
10001b0a:	4770      	bx	lr
{
10001b0c:	b508      	push	{r3, lr}
    put_char(character);
10001b0e:	f000 f817 	bl	10001b40 <put_char>
}
10001b12:	bd08      	pop	{r3, pc}

10001b14 <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001b14:	b40f      	push	{r0, r1, r2, r3}
10001b16:	b500      	push	{lr}
10001b18:	b085      	sub	sp, #20
10001b1a:	aa06      	add	r2, sp, #24
10001b1c:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001b20:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001b22:	9200      	str	r2, [sp, #0]
10001b24:	f04f 32ff 	mov.w	r2, #4294967295
10001b28:	a902      	add	r1, sp, #8
10001b2a:	4804      	ldr	r0, [pc, #16]	; (10001b3c <printf+0x28>)
10001b2c:	f7ff fcac 	bl	10001488 <_vsnprintf>
  va_end(va);
  return ret;
}
10001b30:	b005      	add	sp, #20
10001b32:	f85d eb04 	ldr.w	lr, [sp], #4
10001b36:	b004      	add	sp, #16
10001b38:	4770      	bx	lr
10001b3a:	bf00      	nop
10001b3c:	10001b09 	andne	r1, r0, r9, lsl #22

10001b40 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001b40:	4b03      	ldr	r3, [pc, #12]	; (10001b50 <put_char+0x10>)
10001b42:	699b      	ldr	r3, [r3, #24]
10001b44:	f013 0f20 	tst.w	r3, #32
10001b48:	d1fa      	bne.n	10001b40 <put_char>
    UART_DATA(UART0) = ch;
10001b4a:	4b01      	ldr	r3, [pc, #4]	; (10001b50 <put_char+0x10>)
10001b4c:	6018      	str	r0, [r3, #0]
    return ch;
}
10001b4e:	4770      	bx	lr
10001b50:	40200000 	eormi	r0, r0, r0

10001b54 <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001b54:	b538      	push	{r3, r4, r5, lr}
10001b56:	4605      	mov	r5, r0
    int index = 0;
10001b58:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001b5a:	e002      	b.n	10001b62 <puts+0xe>
        put_char(string[index]);
10001b5c:	f7ff fff0 	bl	10001b40 <put_char>
        index++;
10001b60:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001b62:	5d28      	ldrb	r0, [r5, r4]
10001b64:	2800      	cmp	r0, #0
10001b66:	d1f9      	bne.n	10001b5c <puts+0x8>
    }
    put_char('\n');
10001b68:	200a      	movs	r0, #10
10001b6a:	f7ff ffe9 	bl	10001b40 <put_char>
    return index;
}
10001b6e:	4620      	mov	r0, r4
10001b70:	bd38      	pop	{r3, r4, r5, pc}
	...

10001b74 <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001b74:	4b07      	ldr	r3, [pc, #28]	; (10001b94 <uart_init+0x20>)
10001b76:	2228      	movs	r2, #40	; 0x28
10001b78:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001b7a:	220b      	movs	r2, #11
10001b7c:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001b7e:	2260      	movs	r2, #96	; 0x60
10001b80:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001b82:	f240 3201 	movw	r2, #769	; 0x301
10001b86:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001b88:	220a      	movs	r2, #10
10001b8a:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001b8c:	2201      	movs	r2, #1
10001b8e:	609a      	str	r2, [r3, #8]
}
10001b90:	4770      	bx	lr
10001b92:	bf00      	nop
10001b94:	40200000 	eormi	r0, r0, r0

10001b98 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001b98:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001b9a:	2300      	movs	r3, #0
10001b9c:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b9e:	e007      	b.n	10001bb0 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001ba0:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001ba4:	aa02      	add	r2, sp, #8
10001ba6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001baa:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001bae:	3301      	adds	r3, #1
10001bb0:	2b01      	cmp	r3, #1
10001bb2:	d9f5      	bls.n	10001ba0 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001bb4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001bb8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001bbc:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001bc0:	b002      	add	sp, #8
10001bc2:	4770      	bx	lr

10001bc4 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001bc4:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001bc8:	0c00      	lsrs	r0, r0, #16
10001bca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001bce:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001bd2:	d00a      	beq.n	10001bea <opcode_is_bl_or_blx+0x26>
10001bd4:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001bd8:	d009      	beq.n	10001bee <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001bda:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001bde:	d008      	beq.n	10001bf2 <opcode_is_bl_or_blx+0x2e>
10001be0:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001be4:	d007      	beq.n	10001bf6 <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001be6:	2000      	movs	r0, #0
10001be8:	4770      	bx	lr
        return true;
10001bea:	2001      	movs	r0, #1
10001bec:	4770      	bx	lr
10001bee:	2001      	movs	r0, #1
10001bf0:	4770      	bx	lr
        return true;
10001bf2:	2001      	movs	r0, #1
10001bf4:	4770      	bx	lr
10001bf6:	2001      	movs	r0, #1
}
10001bf8:	4770      	bx	lr
	...

10001bfc <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001bfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001c00:	b348      	cbz	r0, 10001c56 <fault_dump_callstack+0x5a>
10001c02:	460f      	mov	r7, r1
10001c04:	4614      	mov	r4, r2
10001c06:	461d      	mov	r5, r3
10001c08:	4680      	mov	r8, r0
10001c0a:	b339      	cbz	r1, 10001c5c <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001c0c:	b34a      	cbz	r2, 10001c62 <fault_dump_callstack+0x66>
10001c0e:	429a      	cmp	r2, r3
10001c10:	d82a      	bhi.n	10001c68 <fault_dump_callstack+0x6c>
    int count = 0;
10001c12:	2600      	movs	r6, #0
10001c14:	e000      	b.n	10001c18 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001c16:	3404      	adds	r4, #4
10001c18:	b1d4      	cbz	r4, 10001c50 <fault_dump_callstack+0x54>
10001c1a:	42ac      	cmp	r4, r5
10001c1c:	d818      	bhi.n	10001c50 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001c1e:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001c20:	4813      	ldr	r0, [pc, #76]	; (10001c70 <fault_dump_callstack+0x74>)
10001c22:	4290      	cmp	r0, r2
10001c24:	d8f7      	bhi.n	10001c16 <fault_dump_callstack+0x1a>
10001c26:	4b13      	ldr	r3, [pc, #76]	; (10001c74 <fault_dump_callstack+0x78>)
10001c28:	4293      	cmp	r3, r2
10001c2a:	d3f4      	bcc.n	10001c16 <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001c2c:	f012 0f01 	tst.w	r2, #1
10001c30:	d0f1      	beq.n	10001c16 <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001c32:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001c36:	d0ee      	beq.n	10001c16 <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001c38:	4648      	mov	r0, r9
10001c3a:	f7ff ffad 	bl	10001b98 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001c3e:	f7ff ffc1 	bl	10001bc4 <opcode_is_bl_or_blx>
10001c42:	2800      	cmp	r0, #0
10001c44:	d0e7      	beq.n	10001c16 <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001c46:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001c4a:	3601      	adds	r6, #1
        if (count >= size) {
10001c4c:	42be      	cmp	r6, r7
10001c4e:	d3e2      	bcc.n	10001c16 <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001c50:	4630      	mov	r0, r6
10001c52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001c56:	f06f 0601 	mvn.w	r6, #1
10001c5a:	e7f9      	b.n	10001c50 <fault_dump_callstack+0x54>
10001c5c:	f06f 0601 	mvn.w	r6, #1
10001c60:	e7f6      	b.n	10001c50 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001c62:	f06f 0602 	mvn.w	r6, #2
10001c66:	e7f3      	b.n	10001c50 <fault_dump_callstack+0x54>
10001c68:	f06f 0602 	mvn.w	r6, #2
10001c6c:	e7f0      	b.n	10001c50 <fault_dump_callstack+0x54>
10001c6e:	bf00      	nop
10001c70:	10000000 	andne	r0, r0, r0
10001c74:	10006058 	andne	r6, r0, r8, asr r0

10001c78 <dump_exc_return>:
static void dump_exc_return(unsigned int exc_return) {
10001c78:	b510      	push	{r4, lr}
10001c7a:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001c7c:	4601      	mov	r1, r0
10001c7e:	4803      	ldr	r0, [pc, #12]	; (10001c8c <dump_exc_return+0x14>)
10001c80:	f7ff ff48 	bl	10001b14 <printf>
    fault_dump_exc_return(exc_return);
10001c84:	4620      	mov	r0, r4
10001c86:	f000 f917 	bl	10001eb8 <fault_dump_exc_return>
}
10001c8a:	bd10      	pop	{r4, pc}
10001c8c:	10005bb0 			; <UNDEFINED> instruction: 0x10005bb0

10001c90 <stack_using_msp>:
static bool stack_using_msp(unsigned int exc_return) {
10001c90:	b508      	push	{r3, lr}
    result = fault_dump_using_msp(exc_return);
10001c92:	f000 f98f 	bl	10001fb4 <fault_dump_using_msp>
}
10001c96:	bd08      	pop	{r3, pc}

10001c98 <fault_dump_init>:
void fault_dump_init(void) {
10001c98:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001c9a:	490a      	ldr	r1, [pc, #40]	; (10001cc4 <fault_dump_init+0x2c>)
10001c9c:	4b0a      	ldr	r3, [pc, #40]	; (10001cc8 <fault_dump_init+0x30>)
10001c9e:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001ca0:	4a0a      	ldr	r2, [pc, #40]	; (10001ccc <fault_dump_init+0x34>)
10001ca2:	4b0b      	ldr	r3, [pc, #44]	; (10001cd0 <fault_dump_init+0x38>)
10001ca4:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001ca6:	1a53      	subs	r3, r2, r1
10001ca8:	480a      	ldr	r0, [pc, #40]	; (10001cd4 <fault_dump_init+0x3c>)
10001caa:	f7ff ff33 	bl	10001b14 <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001cae:	490a      	ldr	r1, [pc, #40]	; (10001cd8 <fault_dump_init+0x40>)
10001cb0:	4a0a      	ldr	r2, [pc, #40]	; (10001cdc <fault_dump_init+0x44>)
10001cb2:	1a53      	subs	r3, r2, r1
10001cb4:	480a      	ldr	r0, [pc, #40]	; (10001ce0 <fault_dump_init+0x48>)
10001cb6:	f7ff ff2d 	bl	10001b14 <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001cba:	2101      	movs	r1, #1
10001cbc:	4809      	ldr	r0, [pc, #36]	; (10001ce4 <fault_dump_init+0x4c>)
10001cbe:	f7ff ff29 	bl	10001b14 <printf>
}
10001cc2:	bd08      	pop	{r3, pc}
10001cc4:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001cc8:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
10001ccc:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001cd0:	38008574 	stmdacc	r0, {r2, r4, r5, r6, r8, sl, pc}
10001cd4:	10005bc8 	andne	r5, r0, r8, asr #23
10001cd8:	10000000 	andne	r0, r0, r0
10001cdc:	10006058 	andne	r6, r0, r8, asr r0
10001ce0:	10005bec 	andne	r5, r0, ip, ror #23
10001ce4:	10005c10 	andne	r5, r0, r0, lsl ip

10001ce8 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001ce8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001cea:	4605      	mov	r5, r0
10001cec:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001cee:	6803      	ldr	r3, [r0, #0]
10001cf0:	4c4e      	ldr	r4, [pc, #312]	; (10001e2c <fault_dump_handler+0x144>)
10001cf2:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001cf4:	6843      	ldr	r3, [r0, #4]
10001cf6:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001cf8:	6883      	ldr	r3, [r0, #8]
10001cfa:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001cfc:	68c3      	ldr	r3, [r0, #12]
10001cfe:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001d00:	6903      	ldr	r3, [r0, #16]
10001d02:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001d04:	6943      	ldr	r3, [r0, #20]
10001d06:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001d08:	6983      	ldr	r3, [r0, #24]
10001d0a:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001d0c:	69c3      	ldr	r3, [r0, #28]
10001d0e:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001d10:	6a03      	ldr	r3, [r0, #32]
10001d12:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001d14:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001d16:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001d18:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001d1a:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001d1c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001d1e:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001d20:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001d22:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001d24:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001d26:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001d28:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001d2a:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001d2c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001d2e:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001d30:	4f3f      	ldr	r7, [pc, #252]	; (10001e30 <fault_dump_handler+0x148>)
10001d32:	4638      	mov	r0, r7
10001d34:	f7ff ff0e 	bl	10001b54 <puts>
    printf(" HardFault Information Dump \r\n");
10001d38:	483e      	ldr	r0, [pc, #248]	; (10001e34 <fault_dump_handler+0x14c>)
10001d3a:	f7ff ff0b 	bl	10001b54 <puts>
    printf(" Stack Frame   \r\n");
10001d3e:	483e      	ldr	r0, [pc, #248]	; (10001e38 <fault_dump_handler+0x150>)
10001d40:	f7ff ff08 	bl	10001b54 <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001d44:	6a21      	ldr	r1, [r4, #32]
10001d46:	483d      	ldr	r0, [pc, #244]	; (10001e3c <fault_dump_handler+0x154>)
10001d48:	f7ff fee4 	bl	10001b14 <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001d4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001d4e:	483c      	ldr	r0, [pc, #240]	; (10001e40 <fault_dump_handler+0x158>)
10001d50:	f7ff fee0 	bl	10001b14 <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001d54:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001d56:	483b      	ldr	r0, [pc, #236]	; (10001e44 <fault_dump_handler+0x15c>)
10001d58:	f7ff fedc 	bl	10001b14 <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001d5c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001d5e:	483a      	ldr	r0, [pc, #232]	; (10001e48 <fault_dump_handler+0x160>)
10001d60:	f7ff fed8 	bl	10001b14 <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001d64:	6821      	ldr	r1, [r4, #0]
10001d66:	4839      	ldr	r0, [pc, #228]	; (10001e4c <fault_dump_handler+0x164>)
10001d68:	f7ff fed4 	bl	10001b14 <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001d6c:	6861      	ldr	r1, [r4, #4]
10001d6e:	4838      	ldr	r0, [pc, #224]	; (10001e50 <fault_dump_handler+0x168>)
10001d70:	f7ff fed0 	bl	10001b14 <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001d74:	68a1      	ldr	r1, [r4, #8]
10001d76:	4837      	ldr	r0, [pc, #220]	; (10001e54 <fault_dump_handler+0x16c>)
10001d78:	f7ff fecc 	bl	10001b14 <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001d7c:	68e1      	ldr	r1, [r4, #12]
10001d7e:	4836      	ldr	r0, [pc, #216]	; (10001e58 <fault_dump_handler+0x170>)
10001d80:	f7ff fec8 	bl	10001b14 <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001d84:	6921      	ldr	r1, [r4, #16]
10001d86:	4835      	ldr	r0, [pc, #212]	; (10001e5c <fault_dump_handler+0x174>)
10001d88:	f7ff fec4 	bl	10001b14 <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001d8c:	6961      	ldr	r1, [r4, #20]
10001d8e:	4834      	ldr	r0, [pc, #208]	; (10001e60 <fault_dump_handler+0x178>)
10001d90:	f7ff fec0 	bl	10001b14 <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001d94:	69a1      	ldr	r1, [r4, #24]
10001d96:	4833      	ldr	r0, [pc, #204]	; (10001e64 <fault_dump_handler+0x17c>)
10001d98:	f7ff febc 	bl	10001b14 <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001d9c:	69e1      	ldr	r1, [r4, #28]
10001d9e:	4832      	ldr	r0, [pc, #200]	; (10001e68 <fault_dump_handler+0x180>)
10001da0:	f7ff feb8 	bl	10001b14 <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001da4:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001da6:	4831      	ldr	r0, [pc, #196]	; (10001e6c <fault_dump_handler+0x184>)
10001da8:	f7ff feb4 	bl	10001b14 <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001dac:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001dae:	4830      	ldr	r0, [pc, #192]	; (10001e70 <fault_dump_handler+0x188>)
10001db0:	f7ff feb0 	bl	10001b14 <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001db4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001db6:	482f      	ldr	r0, [pc, #188]	; (10001e74 <fault_dump_handler+0x18c>)
10001db8:	f7ff feac 	bl	10001b14 <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001dbc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001dbe:	482e      	ldr	r0, [pc, #184]	; (10001e78 <fault_dump_handler+0x190>)
10001dc0:	f7ff fea8 	bl	10001b14 <printf>
    printf("\r\n");
10001dc4:	4638      	mov	r0, r7
10001dc6:	f7ff fec5 	bl	10001b54 <puts>
    dump_exc_return(linker);
10001dca:	4630      	mov	r0, r6
10001dcc:	f7ff ff54 	bl	10001c78 <dump_exc_return>
    if (stack_using_msp(linker)) {
10001dd0:	4630      	mov	r0, r6
10001dd2:	f7ff ff5d 	bl	10001c90 <stack_using_msp>
10001dd6:	b190      	cbz	r0, 10001dfe <fault_dump_handler+0x116>
        count = fd_msp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001dd8:	4b28      	ldr	r3, [pc, #160]	; (10001e7c <fault_dump_handler+0x194>)
10001dda:	681c      	ldr	r4, [r3, #0]
10001ddc:	4b28      	ldr	r3, [pc, #160]	; (10001e80 <fault_dump_handler+0x198>)
10001dde:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001de2:	2140      	movs	r1, #64	; 0x40
10001de4:	4827      	ldr	r0, [pc, #156]	; (10001e84 <fault_dump_handler+0x19c>)
10001de6:	47a0      	blx	r4
10001de8:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001dea:	4827      	ldr	r0, [pc, #156]	; (10001e88 <fault_dump_handler+0x1a0>)
10001dec:	f7ff fe92 	bl	10001b14 <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001df0:	4b0e      	ldr	r3, [pc, #56]	; (10001e2c <fault_dump_handler+0x144>)
10001df2:	6b99      	ldr	r1, [r3, #56]	; 0x38
10001df4:	4825      	ldr	r0, [pc, #148]	; (10001e8c <fault_dump_handler+0x1a4>)
10001df6:	f7ff fe8d 	bl	10001b14 <printf>
    for (index = 0; index < count; index++) {
10001dfa:	2400      	movs	r4, #0
10001dfc:	e00f      	b.n	10001e1e <fault_dump_handler+0x136>
        count = fd_psp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, stack, NULL);
10001dfe:	4b24      	ldr	r3, [pc, #144]	; (10001e90 <fault_dump_handler+0x1a8>)
10001e00:	681c      	ldr	r4, [r3, #0]
10001e02:	2300      	movs	r3, #0
10001e04:	462a      	mov	r2, r5
10001e06:	2140      	movs	r1, #64	; 0x40
10001e08:	481e      	ldr	r0, [pc, #120]	; (10001e84 <fault_dump_handler+0x19c>)
10001e0a:	47a0      	blx	r4
10001e0c:	4605      	mov	r5, r0
10001e0e:	e7ec      	b.n	10001dea <fault_dump_handler+0x102>
        printf("%08X ", buffer[index]);
10001e10:	4b1c      	ldr	r3, [pc, #112]	; (10001e84 <fault_dump_handler+0x19c>)
10001e12:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001e16:	481d      	ldr	r0, [pc, #116]	; (10001e8c <fault_dump_handler+0x1a4>)
10001e18:	f7ff fe7c 	bl	10001b14 <printf>
    for (index = 0; index < count; index++) {
10001e1c:	3401      	adds	r4, #1
10001e1e:	42a5      	cmp	r5, r4
10001e20:	dcf6      	bgt.n	10001e10 <fault_dump_handler+0x128>
    printf("\r\n");
10001e22:	4803      	ldr	r0, [pc, #12]	; (10001e30 <fault_dump_handler+0x148>)
10001e24:	f7ff fe96 	bl	10001b54 <puts>
    while (1);
10001e28:	e7fe      	b.n	10001e28 <fault_dump_handler+0x140>
10001e2a:	bf00      	nop
10001e2c:	38008578 	stmdacc	r0, {r3, r4, r5, r6, r8, sl, pc}
10001e30:	10005c4c 	andne	r5, r0, ip, asr #24
10001e34:	10005c30 	andne	r5, r0, r0, lsr ip
10001e38:	10005c50 	andne	r5, r0, r0, asr ip
10001e3c:	10005c64 	andne	r5, r0, r4, ror #24
10001e40:	10005c78 	andne	r5, r0, r8, ror ip
10001e44:	10005c8c 	andne	r5, r0, ip, lsl #25
10001e48:	10005ca0 	andne	r5, r0, r0, lsr #25
10001e4c:	10005cb4 			; <UNDEFINED> instruction: 0x10005cb4
10001e50:	10005cc8 	andne	r5, r0, r8, asr #25
10001e54:	10005cdc 	ldrdne	r5, [r0], -ip
10001e58:	10005cf0 	strdne	r5, [r0], -r0
10001e5c:	10005d04 	andne	r5, r0, r4, lsl #26
10001e60:	10005d18 	andne	r5, r0, r8, lsl sp
10001e64:	10005d2c 	andne	r5, r0, ip, lsr #26
10001e68:	10005d40 	andne	r5, r0, r0, asr #26
10001e6c:	10005d54 	andne	r5, r0, r4, asr sp
10001e70:	10005d68 	andne	r5, r0, r8, ror #26
10001e74:	10005d7c 	andne	r5, r0, ip, ror sp
10001e78:	10005d90 	mulne	r0, r0, sp
10001e7c:	38000004 	stmdacc	r0, {r2}
10001e80:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001e84:	38008470 	stmdacc	r0, {r4, r5, r6, sl, pc}
10001e88:	10005da4 	andne	r5, r0, r4, lsr #27
10001e8c:	10005ac0 	andne	r5, r0, r0, asr #21
10001e90:	38000008 	stmdacc	r0, {r3}

10001e94 <fault_dump_bm_stack_point>:
 */
__STATIC_FORCEINLINE uint32_t __get_MSP(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, msp" : "=r" (result) );
10001e94:	f3ef 8008 	mrs	r0, MSP

unsigned int fault_dump_bm_stack_point(void) {
    return __get_MSP();
}
10001e98:	4770      	bx	lr
	...

10001e9c <fault_dump_bm_stack_start>:

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
10001e9c:	4800      	ldr	r0, [pc, #0]	; (10001ea0 <fault_dump_bm_stack_start+0x4>)
10001e9e:	4770      	bx	lr
10001ea0:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10001ea4 <fault_dump_psp_stack_parser>:
    return FD_CODE_TEXT_ENDS;
}

int fault_dump_psp_stack_parser(stack_parser_t parser) {
    int result = FD_EEMPTY;
    if (parser != NULL) {
10001ea4:	b118      	cbz	r0, 10001eae <fault_dump_psp_stack_parser+0xa>
        fd_psp_stack_parser = parser;
10001ea6:	4a03      	ldr	r2, [pc, #12]	; (10001eb4 <fault_dump_psp_stack_parser+0x10>)
10001ea8:	6010      	str	r0, [r2, #0]
        result = FD_EOK;
10001eaa:	2000      	movs	r0, #0
10001eac:	4770      	bx	lr
    int result = FD_EEMPTY;
10001eae:	2002      	movs	r0, #2
    }
    return result;
}
10001eb0:	4770      	bx	lr
10001eb2:	bf00      	nop
10001eb4:	38000008 	stmdacc	r0, {r3}

10001eb8 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001eb8:	b510      	push	{r4, lr}
10001eba:	4604      	mov	r4, r0
    printf(" \r\n");
10001ebc:	482a      	ldr	r0, [pc, #168]	; (10001f68 <fault_dump_exc_return+0xb0>)
10001ebe:	f7ff fe49 	bl	10001b54 <puts>
    printf(" Bit0 Except Security State:");
10001ec2:	482a      	ldr	r0, [pc, #168]	; (10001f6c <fault_dump_exc_return+0xb4>)
10001ec4:	f7ff fe26 	bl	10001b14 <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001ec8:	f014 0f01 	tst.w	r4, #1
10001ecc:	d033      	beq.n	10001f36 <fault_dump_exc_return+0x7e>
        printf("[Use Security State....].\r\n");
10001ece:	4828      	ldr	r0, [pc, #160]	; (10001f70 <fault_dump_exc_return+0xb8>)
10001ed0:	f7ff fe40 	bl	10001b54 <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select...:");
10001ed4:	4827      	ldr	r0, [pc, #156]	; (10001f74 <fault_dump_exc_return+0xbc>)
10001ed6:	f7ff fe1d 	bl	10001b14 <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001eda:	f014 0f04 	tst.w	r4, #4
10001ede:	d02e      	beq.n	10001f3e <fault_dump_exc_return+0x86>
        printf("[Use PSP...............].\r\n");
10001ee0:	4825      	ldr	r0, [pc, #148]	; (10001f78 <fault_dump_exc_return+0xc0>)
10001ee2:	f7ff fe37 	bl	10001b54 <puts>
    } else {
        printf("[Use MSP...............].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ.:");
10001ee6:	4825      	ldr	r0, [pc, #148]	; (10001f7c <fault_dump_exc_return+0xc4>)
10001ee8:	f7ff fe14 	bl	10001b14 <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001eec:	f014 0f08 	tst.w	r4, #8
10001ef0:	d029      	beq.n	10001f46 <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode.......].\r\n");
10001ef2:	4823      	ldr	r0, [pc, #140]	; (10001f80 <fault_dump_exc_return+0xc8>)
10001ef4:	f7ff fe2e 	bl	10001b54 <puts>
    } else {
        printf("[Use Process Mode......].\r\n");
    }
    printf(" Bit4 Stack Frame Type.....:");
10001ef8:	4822      	ldr	r0, [pc, #136]	; (10001f84 <fault_dump_exc_return+0xcc>)
10001efa:	f7ff fe0b 	bl	10001b14 <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001efe:	f014 0f10 	tst.w	r4, #16
10001f02:	d024      	beq.n	10001f4e <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame....].\r\n");
10001f04:	4820      	ldr	r0, [pc, #128]	; (10001f88 <fault_dump_exc_return+0xd0>)
10001f06:	f7ff fe25 	bl	10001b54 <puts>
    } else {
        printf("[Use Extended Frame....].\r\n");
    }
    printf(" Bit5 Default Call Rule....:");
10001f0a:	4820      	ldr	r0, [pc, #128]	; (10001f8c <fault_dump_exc_return+0xd4>)
10001f0c:	f7ff fe02 	bl	10001b14 <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001f10:	f014 0f20 	tst.w	r4, #32
10001f14:	d01f      	beq.n	10001f56 <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule......].\r\n");
10001f16:	481e      	ldr	r0, [pc, #120]	; (10001f90 <fault_dump_exc_return+0xd8>)
10001f18:	f7ff fe1c 	bl	10001b54 <puts>
    } else {
        printf("[Use Not Default Rule..].\r\n");
    }
    printf(" Bit6 Security Stack.......:");
10001f1c:	481d      	ldr	r0, [pc, #116]	; (10001f94 <fault_dump_exc_return+0xdc>)
10001f1e:	f7ff fdf9 	bl	10001b14 <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001f22:	f014 0f40 	tst.w	r4, #64	; 0x40
10001f26:	d01a      	beq.n	10001f5e <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack....].\r\n");
10001f28:	481b      	ldr	r0, [pc, #108]	; (10001f98 <fault_dump_exc_return+0xe0>)
10001f2a:	f7ff fe13 	bl	10001b54 <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001f2e:	480e      	ldr	r0, [pc, #56]	; (10001f68 <fault_dump_exc_return+0xb0>)
10001f30:	f7ff fe10 	bl	10001b54 <puts>
}
10001f34:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001f36:	4819      	ldr	r0, [pc, #100]	; (10001f9c <fault_dump_exc_return+0xe4>)
10001f38:	f7ff fe0c 	bl	10001b54 <puts>
10001f3c:	e7ca      	b.n	10001ed4 <fault_dump_exc_return+0x1c>
        printf("[Use MSP...............].\r\n");
10001f3e:	4818      	ldr	r0, [pc, #96]	; (10001fa0 <fault_dump_exc_return+0xe8>)
10001f40:	f7ff fe08 	bl	10001b54 <puts>
10001f44:	e7cf      	b.n	10001ee6 <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode......].\r\n");
10001f46:	4817      	ldr	r0, [pc, #92]	; (10001fa4 <fault_dump_exc_return+0xec>)
10001f48:	f7ff fe04 	bl	10001b54 <puts>
10001f4c:	e7d4      	b.n	10001ef8 <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame....].\r\n");
10001f4e:	4816      	ldr	r0, [pc, #88]	; (10001fa8 <fault_dump_exc_return+0xf0>)
10001f50:	f7ff fe00 	bl	10001b54 <puts>
10001f54:	e7d9      	b.n	10001f0a <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule..].\r\n");
10001f56:	4815      	ldr	r0, [pc, #84]	; (10001fac <fault_dump_exc_return+0xf4>)
10001f58:	f7ff fdfc 	bl	10001b54 <puts>
10001f5c:	e7de      	b.n	10001f1c <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001f5e:	4814      	ldr	r0, [pc, #80]	; (10001fb0 <fault_dump_exc_return+0xf8>)
10001f60:	f7ff fdf8 	bl	10001b54 <puts>
10001f64:	e7e3      	b.n	10001f2e <fault_dump_exc_return+0x76>
10001f66:	bf00      	nop
10001f68:	10005db4 			; <UNDEFINED> instruction: 0x10005db4
10001f6c:	10005db8 			; <UNDEFINED> instruction: 0x10005db8
10001f70:	10005dd8 	ldrdne	r5, [r0], -r8
10001f74:	10005e10 	andne	r5, r0, r0, lsl lr
10001f78:	10005e30 	andne	r5, r0, r0, lsr lr
10001f7c:	10005e68 	andne	r5, r0, r8, ror #28
10001f80:	10005e88 	andne	r5, r0, r8, lsl #29
10001f84:	10005ec0 	andne	r5, r0, r0, asr #29
10001f88:	10005ee0 	andne	r5, r0, r0, ror #29
10001f8c:	10005f18 	andne	r5, r0, r8, lsl pc
10001f90:	10005f38 	andne	r5, r0, r8, lsr pc
10001f94:	10005f70 	andne	r5, r0, r0, ror pc
10001f98:	10005f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
10001f9c:	10005df4 	strdne	r5, [r0], -r4
10001fa0:	10005e4c 	andne	r5, r0, ip, asr #28
10001fa4:	10005ea4 	andne	r5, r0, r4, lsr #29
10001fa8:	10005efc 	strdne	r5, [r0], -ip
10001fac:	10005f54 	andne	r5, r0, r4, asr pc
10001fb0:	10005fac 	andne	r5, r0, ip, lsr #31

10001fb4 <fault_dump_using_msp>:

bool fault_dump_using_msp(unsigned int exc_return) {
    if (FD_CHECK_BIT(exc_return, 2)) {
10001fb4:	f010 0f04 	tst.w	r0, #4
10001fb8:	d001      	beq.n	10001fbe <fault_dump_using_msp+0xa>
        return false;
10001fba:	2000      	movs	r0, #0
10001fbc:	4770      	bx	lr
    } else {
        return true;
10001fbe:	2001      	movs	r0, #1
    }
}
10001fc0:	4770      	bx	lr
	...

10001fc4 <fault_dump_unalign>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("zero = %d\r\n", c);
}

void fault_dump_unalign(void) {
10001fc4:	b530      	push	{r4, r5, lr}
10001fc6:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
10001fc8:	2400      	movs	r4, #0
10001fca:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
10001fcc:	4a0e      	ldr	r2, [pc, #56]	; (10002008 <fault_dump_unalign+0x44>)
10001fce:	6953      	ldr	r3, [r2, #20]
10001fd0:	f043 0308 	orr.w	r3, r3, #8
10001fd4:	6153      	str	r3, [r2, #20]
    addr = (int*)0x00;
    value = *addr;
10001fd6:	6823      	ldr	r3, [r4, #0]
10001fd8:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fda:	9a01      	ldr	r2, [sp, #4]
10001fdc:	4d0b      	ldr	r5, [pc, #44]	; (1000200c <fault_dump_unalign+0x48>)
10001fde:	4621      	mov	r1, r4
10001fe0:	4628      	mov	r0, r5
10001fe2:	f7ff fd97 	bl	10001b14 <printf>
    addr = (int*)0x04;
    value = *addr;
10001fe6:	6863      	ldr	r3, [r4, #4]
10001fe8:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fea:	9a01      	ldr	r2, [sp, #4]
10001fec:	2104      	movs	r1, #4
10001fee:	4628      	mov	r0, r5
10001ff0:	f7ff fd90 	bl	10001b14 <printf>
    addr = (int*)0x03;
    value = *addr;
10001ff4:	f8d4 3003 	ldr.w	r3, [r4, #3]
10001ff8:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001ffa:	9a01      	ldr	r2, [sp, #4]
10001ffc:	2103      	movs	r1, #3
10001ffe:	4628      	mov	r0, r5
10002000:	f7ff fd88 	bl	10001b14 <printf>
}
10002004:	b003      	add	sp, #12
10002006:	bd30      	pop	{r4, r5, pc}
10002008:	e000ed00 	and	lr, r0, r0, lsl #26
1000200c:	10005fc8 	andne	r5, r0, r8, asr #31

10002010 <freertos_stack_parser>:
        pc = *sp;
    }
    return pc;
}

int freertos_stack_parser(unsigned int *buffer, size_t length, unsigned int *stack_point, unsigned int *stack_start) {
10002010:	b570      	push	{r4, r5, r6, lr}
10002012:	b08c      	sub	sp, #48	; 0x30
10002014:	4604      	mov	r4, r0
10002016:	460e      	mov	r6, r1
10002018:	4615      	mov	r5, r2
    int count = 0;
    TaskStatus_t xTaskStatus = {0};
1000201a:	222c      	movs	r2, #44	; 0x2c
1000201c:	2100      	movs	r1, #0
1000201e:	a801      	add	r0, sp, #4
10002020:	f001 fe24 	bl	10003c6c <memset>
    TaskHandle_t xTaskPoints = {0};
    if ((buffer == NULL) || (length <= 0) || (stack_point == NULL)) {
10002024:	b304      	cbz	r4, 10002068 <freertos_stack_parser+0x58>
10002026:	b30e      	cbz	r6, 1000206c <freertos_stack_parser+0x5c>
10002028:	b315      	cbz	r5, 10002070 <freertos_stack_parser+0x60>
        return count;
    }
    xTaskPoints = xTaskGetCurrentTaskHandle();
1000202a:	f001 f811 	bl	10003050 <xTaskGetCurrentTaskHandle>
    vTaskGetInfo(xTaskPoints, &xTaskStatus, pdTRUE, eInvalid);
1000202e:	2305      	movs	r3, #5
10002030:	2201      	movs	r2, #1
10002032:	a901      	add	r1, sp, #4
10002034:	f000 ffb2 	bl	10002f9c <vTaskGetInfo>
    printf(" CurrentTask: %s.\r\n", xTaskStatus.pcTaskName);
10002038:	9902      	ldr	r1, [sp, #8]
1000203a:	480e      	ldr	r0, [pc, #56]	; (10002074 <freertos_stack_parser+0x64>)
1000203c:	f7ff fd6a 	bl	10001b14 <printf>
    printf(" Stack Point: 0x%08X.\r\n", stack_point);
10002040:	4629      	mov	r1, r5
10002042:	480d      	ldr	r0, [pc, #52]	; (10002078 <freertos_stack_parser+0x68>)
10002044:	f7ff fd66 	bl	10001b14 <printf>
    printf(" Stack Start: 0x%08X.\r\n", xTaskStatus.pxStackBase);
10002048:	9908      	ldr	r1, [sp, #32]
1000204a:	480c      	ldr	r0, [pc, #48]	; (1000207c <freertos_stack_parser+0x6c>)
1000204c:	f7ff fd62 	bl	10001b14 <printf>
    printf(" Stack Fulls: 0x%08X.\r\n", xTaskStatus.pxEndOfStack);
10002050:	990a      	ldr	r1, [sp, #40]	; 0x28
10002052:	480b      	ldr	r0, [pc, #44]	; (10002080 <freertos_stack_parser+0x70>)
10002054:	f7ff fd5e 	bl	10001b14 <printf>
    count = fault_dump_callstack(buffer, length, stack_point, xTaskStatus.pxEndOfStack);
10002058:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1000205a:	462a      	mov	r2, r5
1000205c:	4631      	mov	r1, r6
1000205e:	4620      	mov	r0, r4
10002060:	f7ff fdcc 	bl	10001bfc <fault_dump_callstack>
    return count;
}
10002064:	b00c      	add	sp, #48	; 0x30
10002066:	bd70      	pop	{r4, r5, r6, pc}
        return count;
10002068:	2000      	movs	r0, #0
1000206a:	e7fb      	b.n	10002064 <freertos_stack_parser+0x54>
1000206c:	2000      	movs	r0, #0
1000206e:	e7f9      	b.n	10002064 <freertos_stack_parser+0x54>
10002070:	2000      	movs	r0, #0
10002072:	e7f7      	b.n	10002064 <freertos_stack_parser+0x54>
10002074:	10005fe4 	andne	r5, r0, r4, ror #31
10002078:	10005ff8 	strdne	r5, [r0], -r8
1000207c:	10006010 	andne	r6, r0, r0, lsl r0
10002080:	10006028 	andne	r6, r0, r8, lsr #32

10002084 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
10002084:	f100 0308 	add.w	r3, r0, #8
10002088:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
1000208a:	f04f 32ff 	mov.w	r2, #4294967295
1000208e:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
10002090:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
10002092:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
10002094:	2300      	movs	r3, #0
10002096:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
10002098:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
1000209a:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
1000209c:	4770      	bx	lr

1000209e <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
1000209e:	2300      	movs	r3, #0
100020a0:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
100020a2:	4770      	bx	lr

100020a4 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
100020a4:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
100020a6:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
100020a8:	f1b5 3fff 	cmp.w	r5, #4294967295
100020ac:	d011      	beq.n	100020d2 <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
100020ae:	f100 0308 	add.w	r3, r0, #8
100020b2:	461c      	mov	r4, r3
100020b4:	685b      	ldr	r3, [r3, #4]
100020b6:	681a      	ldr	r2, [r3, #0]
100020b8:	42aa      	cmp	r2, r5
100020ba:	d9fa      	bls.n	100020b2 <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
100020bc:	6863      	ldr	r3, [r4, #4]
100020be:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
100020c0:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
100020c2:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
100020c4:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
100020c6:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
100020c8:	6803      	ldr	r3, [r0, #0]
100020ca:	3301      	adds	r3, #1
100020cc:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
100020ce:	bc30      	pop	{r4, r5}
100020d0:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
100020d2:	6904      	ldr	r4, [r0, #16]
100020d4:	e7f2      	b.n	100020bc <vListInsert+0x18>

100020d6 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
100020d6:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
100020d8:	6841      	ldr	r1, [r0, #4]
100020da:	6882      	ldr	r2, [r0, #8]
100020dc:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
100020de:	6841      	ldr	r1, [r0, #4]
100020e0:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
100020e2:	685a      	ldr	r2, [r3, #4]
100020e4:	4282      	cmp	r2, r0
100020e6:	d005      	beq.n	100020f4 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
100020e8:	2200      	movs	r2, #0
100020ea:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
100020ec:	6818      	ldr	r0, [r3, #0]
100020ee:	3801      	subs	r0, #1
100020f0:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
100020f2:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
100020f4:	6882      	ldr	r2, [r0, #8]
100020f6:	605a      	str	r2, [r3, #4]
100020f8:	e7f6      	b.n	100020e8 <uxListRemove+0x12>

100020fa <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
100020fa:	b510      	push	{r4, lr}
100020fc:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
100020fe:	f001 fbbf 	bl	10003880 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
10002102:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10002104:	b923      	cbnz	r3, 10002110 <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
10002106:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
10002108:	f001 fbc8 	bl	1000389c <vPortExitCritical>

    return xReturn;
}
1000210c:	4620      	mov	r0, r4
1000210e:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
10002110:	2400      	movs	r4, #0
10002112:	e7f9      	b.n	10002108 <prvIsQueueEmpty+0xe>

10002114 <prvCopyDataToQueue>:
{
10002114:	b570      	push	{r4, r5, r6, lr}
10002116:	4604      	mov	r4, r0
10002118:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1000211a:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1000211c:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000211e:	b95a      	cbnz	r2, 10002138 <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
10002120:	6803      	ldr	r3, [r0, #0]
10002122:	b11b      	cbz	r3, 1000212c <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
10002124:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
10002126:	3601      	adds	r6, #1
10002128:	64a6      	str	r6, [r4, #72]	; 0x48
}
1000212a:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
1000212c:	6880      	ldr	r0, [r0, #8]
1000212e:	f000 ff95 	bl	1000305c <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
10002132:	2300      	movs	r3, #0
10002134:	60a3      	str	r3, [r4, #8]
10002136:	e7f6      	b.n	10002126 <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
10002138:	b96d      	cbnz	r5, 10002156 <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
1000213a:	6840      	ldr	r0, [r0, #4]
1000213c:	f001 fd20 	bl	10003b80 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
10002140:	6d22      	ldr	r2, [r4, #80]	; 0x50
10002142:	6863      	ldr	r3, [r4, #4]
10002144:	4413      	add	r3, r2
10002146:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
10002148:	68a2      	ldr	r2, [r4, #8]
1000214a:	4293      	cmp	r3, r2
1000214c:	d319      	bcc.n	10002182 <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
1000214e:	6823      	ldr	r3, [r4, #0]
10002150:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
10002152:	4628      	mov	r0, r5
10002154:	e7e7      	b.n	10002126 <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10002156:	68c0      	ldr	r0, [r0, #12]
10002158:	f001 fd12 	bl	10003b80 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
1000215c:	6d22      	ldr	r2, [r4, #80]	; 0x50
1000215e:	4251      	negs	r1, r2
10002160:	68e3      	ldr	r3, [r4, #12]
10002162:	1a9b      	subs	r3, r3, r2
10002164:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
10002166:	6822      	ldr	r2, [r4, #0]
10002168:	4293      	cmp	r3, r2
1000216a:	d202      	bcs.n	10002172 <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
1000216c:	68a3      	ldr	r3, [r4, #8]
1000216e:	440b      	add	r3, r1
10002170:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
10002172:	2d02      	cmp	r5, #2
10002174:	d001      	beq.n	1000217a <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
10002176:	2000      	movs	r0, #0
10002178:	e7d5      	b.n	10002126 <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1000217a:	b126      	cbz	r6, 10002186 <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
1000217c:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
1000217e:	2000      	movs	r0, #0
10002180:	e7d1      	b.n	10002126 <prvCopyDataToQueue+0x12>
10002182:	4628      	mov	r0, r5
10002184:	e7cf      	b.n	10002126 <prvCopyDataToQueue+0x12>
10002186:	2000      	movs	r0, #0
10002188:	e7cd      	b.n	10002126 <prvCopyDataToQueue+0x12>

1000218a <prvCopyDataFromQueue>:
{
1000218a:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1000218c:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000218e:	b16a      	cbz	r2, 100021ac <prvCopyDataFromQueue+0x22>
{
10002190:	b510      	push	{r4, lr}
10002192:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
10002194:	68d9      	ldr	r1, [r3, #12]
10002196:	4411      	add	r1, r2
10002198:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
1000219a:	689c      	ldr	r4, [r3, #8]
1000219c:	42a1      	cmp	r1, r4
1000219e:	d301      	bcc.n	100021a4 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
100021a0:	6819      	ldr	r1, [r3, #0]
100021a2:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
100021a4:	68d9      	ldr	r1, [r3, #12]
100021a6:	f001 fceb 	bl	10003b80 <memcpy>
}
100021aa:	bd10      	pop	{r4, pc}
100021ac:	4770      	bx	lr

100021ae <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
100021ae:	b570      	push	{r4, r5, r6, lr}
100021b0:	b082      	sub	sp, #8
100021b2:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
100021b4:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
100021b6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
100021b8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
100021ba:	429a      	cmp	r2, r3
100021bc:	d303      	bcc.n	100021c6 <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
100021be:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
100021c0:	4628      	mov	r0, r5
100021c2:	b002      	add	sp, #8
100021c4:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
100021c6:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
100021ca:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
100021cc:	2200      	movs	r2, #0
100021ce:	a901      	add	r1, sp, #4
100021d0:	4620      	mov	r0, r4
100021d2:	f7ff ff9f 	bl	10002114 <prvCopyDataToQueue>
100021d6:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
100021d8:	f1b6 3fff 	cmp.w	r6, #4294967295
100021dc:	d10a      	bne.n	100021f4 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
100021de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100021e0:	2b00      	cmp	r3, #0
100021e2:	d0ed      	beq.n	100021c0 <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
100021e4:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100021e8:	f000 fdf2 	bl	10002dd0 <xTaskRemoveFromEventList>
100021ec:	2800      	cmp	r0, #0
100021ee:	d0e7      	beq.n	100021c0 <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
100021f0:	2501      	movs	r5, #1
        return xReturn;
100021f2:	e7e5      	b.n	100021c0 <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
100021f4:	f000 fbe6 	bl	100029c4 <uxTaskGetNumberOfTasks>
100021f8:	4286      	cmp	r6, r0
100021fa:	d2e1      	bcs.n	100021c0 <prvNotifyQueueSetContainer+0x12>
100021fc:	3601      	adds	r6, #1
100021fe:	b276      	sxtb	r6, r6
10002200:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
10002204:	e7dc      	b.n	100021c0 <prvNotifyQueueSetContainer+0x12>

10002206 <prvUnlockQueue>:
{
10002206:	b538      	push	{r3, r4, r5, lr}
10002208:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
1000220a:	f001 fb39 	bl	10003880 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
1000220e:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
10002212:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002214:	e008      	b.n	10002228 <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
10002216:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10002218:	b1b3      	cbz	r3, 10002248 <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1000221a:	f105 002c 	add.w	r0, r5, #44	; 0x2c
1000221e:	f000 fdd7 	bl	10002dd0 <xTaskRemoveFromEventList>
10002222:	b970      	cbnz	r0, 10002242 <prvUnlockQueue+0x3c>
            --cTxLock;
10002224:	3c01      	subs	r4, #1
10002226:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002228:	2c00      	cmp	r4, #0
1000222a:	dd0d      	ble.n	10002248 <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
1000222c:	6dab      	ldr	r3, [r5, #88]	; 0x58
1000222e:	2b00      	cmp	r3, #0
10002230:	d0f1      	beq.n	10002216 <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
10002232:	4628      	mov	r0, r5
10002234:	f7ff ffbb 	bl	100021ae <prvNotifyQueueSetContainer>
10002238:	2800      	cmp	r0, #0
1000223a:	d0f3      	beq.n	10002224 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
1000223c:	f000 fe84 	bl	10002f48 <vTaskMissedYield>
10002240:	e7f0      	b.n	10002224 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
10002242:	f000 fe81 	bl	10002f48 <vTaskMissedYield>
10002246:	e7ed      	b.n	10002224 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
10002248:	23ff      	movs	r3, #255	; 0xff
1000224a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
1000224e:	f001 fb25 	bl	1000389c <vPortExitCritical>
    taskENTER_CRITICAL();
10002252:	f001 fb15 	bl	10003880 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
10002256:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
1000225a:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
1000225c:	e001      	b.n	10002262 <prvUnlockQueue+0x5c>
                --cRxLock;
1000225e:	3c01      	subs	r4, #1
10002260:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
10002262:	2c00      	cmp	r4, #0
10002264:	dd0a      	ble.n	1000227c <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002266:	692b      	ldr	r3, [r5, #16]
10002268:	b143      	cbz	r3, 1000227c <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1000226a:	f105 0010 	add.w	r0, r5, #16
1000226e:	f000 fdaf 	bl	10002dd0 <xTaskRemoveFromEventList>
10002272:	2800      	cmp	r0, #0
10002274:	d0f3      	beq.n	1000225e <prvUnlockQueue+0x58>
                    vTaskMissedYield();
10002276:	f000 fe67 	bl	10002f48 <vTaskMissedYield>
1000227a:	e7f0      	b.n	1000225e <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
1000227c:	23ff      	movs	r3, #255	; 0xff
1000227e:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
10002282:	f001 fb0b 	bl	1000389c <vPortExitCritical>
}
10002286:	bd38      	pop	{r3, r4, r5, pc}

10002288 <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
10002288:	2800      	cmp	r0, #0
1000228a:	d03c      	beq.n	10002306 <xQueueGenericReset+0x7e>
{
1000228c:	b538      	push	{r3, r4, r5, lr}
1000228e:	460d      	mov	r5, r1
10002290:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
10002292:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
10002294:	2b00      	cmp	r3, #0
10002296:	d038      	beq.n	1000230a <xQueueGenericReset+0x82>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002298:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000229a:	2100      	movs	r1, #0
1000229c:	fba3 2302 	umull	r2, r3, r3, r2
100022a0:	b913      	cbnz	r3, 100022a8 <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
100022a2:	b119      	cbz	r1, 100022ac <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
100022a4:	2000      	movs	r0, #0
    return xReturn;
100022a6:	e031      	b.n	1000230c <xQueueGenericReset+0x84>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
100022a8:	2101      	movs	r1, #1
100022aa:	e7fa      	b.n	100022a2 <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
100022ac:	f001 fae8 	bl	10003880 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
100022b0:	6823      	ldr	r3, [r4, #0]
100022b2:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
100022b4:	6d21      	ldr	r1, [r4, #80]	; 0x50
100022b6:	fb01 3002 	mla	r0, r1, r2, r3
100022ba:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
100022bc:	2000      	movs	r0, #0
100022be:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
100022c0:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
100022c2:	3a01      	subs	r2, #1
100022c4:	fb02 3301 	mla	r3, r2, r1, r3
100022c8:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
100022ca:	23ff      	movs	r3, #255	; 0xff
100022cc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
100022d0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
100022d4:	b975      	cbnz	r5, 100022f4 <xQueueGenericReset+0x6c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100022d6:	6923      	ldr	r3, [r4, #16]
100022d8:	b91b      	cbnz	r3, 100022e2 <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
100022da:	f001 fadf 	bl	1000389c <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
100022de:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
100022e0:	e014      	b.n	1000230c <xQueueGenericReset+0x84>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
100022e2:	f104 0010 	add.w	r0, r4, #16
100022e6:	f000 fd73 	bl	10002dd0 <xTaskRemoveFromEventList>
100022ea:	2800      	cmp	r0, #0
100022ec:	d0f5      	beq.n	100022da <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
100022ee:	f001 fabb 	bl	10003868 <vPortYield>
100022f2:	e7f2      	b.n	100022da <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
100022f4:	f104 0010 	add.w	r0, r4, #16
100022f8:	f7ff fec4 	bl	10002084 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
100022fc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002300:	f7ff fec0 	bl	10002084 <vListInitialise>
10002304:	e7e9      	b.n	100022da <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
10002306:	2000      	movs	r0, #0
}
10002308:	4770      	bx	lr
        xReturn = pdFAIL;
1000230a:	2000      	movs	r0, #0
}
1000230c:	bd38      	pop	{r3, r4, r5, pc}

1000230e <prvInitialiseNewQueue>:
{
1000230e:	b538      	push	{r3, r4, r5, lr}
10002310:	461d      	mov	r5, r3
10002312:	9c04      	ldr	r4, [sp, #16]
    if( uxItemSize == ( UBaseType_t ) 0 )
10002314:	460b      	mov	r3, r1
10002316:	b959      	cbnz	r1, 10002330 <prvInitialiseNewQueue+0x22>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
10002318:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
1000231a:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
1000231c:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
1000231e:	2101      	movs	r1, #1
10002320:	4620      	mov	r0, r4
10002322:	f7ff ffb1 	bl	10002288 <xQueueGenericReset>
        pxNewQueue->ucQueueType = ucQueueType;
10002326:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
        pxNewQueue->pxQueueSetContainer = NULL;
1000232a:	2300      	movs	r3, #0
1000232c:	65a3      	str	r3, [r4, #88]	; 0x58
}
1000232e:	bd38      	pop	{r3, r4, r5, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
10002330:	6022      	str	r2, [r4, #0]
10002332:	e7f2      	b.n	1000231a <prvInitialiseNewQueue+0xc>

10002334 <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
10002334:	b1b8      	cbz	r0, 10002366 <xQueueGenericCreateStatic+0x32>
    {
10002336:	b510      	push	{r4, lr}
10002338:	b082      	sub	sp, #8
1000233a:	461c      	mov	r4, r3
1000233c:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
1000233e:	b1a3      	cbz	r3, 1000236a <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
10002340:	b102      	cbz	r2, 10002344 <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
10002342:	b1a1      	cbz	r1, 1000236e <xQueueGenericCreateStatic+0x3a>
10002344:	b15a      	cbz	r2, 1000235e <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
10002346:	2301      	movs	r3, #1
10002348:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
1000234c:	9400      	str	r4, [sp, #0]
1000234e:	f89d 3010 	ldrb.w	r3, [sp, #16]
10002352:	4660      	mov	r0, ip
10002354:	f7ff ffdb 	bl	1000230e <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
10002358:	4620      	mov	r0, r4
    }
1000235a:	b002      	add	sp, #8
1000235c:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
1000235e:	2900      	cmp	r1, #0
10002360:	d0f1      	beq.n	10002346 <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
10002362:	4610      	mov	r0, r2
        return pxNewQueue;
10002364:	e7f9      	b.n	1000235a <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
10002366:	2000      	movs	r0, #0
    }
10002368:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
1000236a:	4618      	mov	r0, r3
1000236c:	e7f5      	b.n	1000235a <xQueueGenericCreateStatic+0x26>
1000236e:	2000      	movs	r0, #0
10002370:	e7f3      	b.n	1000235a <xQueueGenericCreateStatic+0x26>

10002372 <xQueueReceive>:
{
10002372:	b5f0      	push	{r4, r5, r6, r7, lr}
10002374:	b085      	sub	sp, #20
10002376:	4604      	mov	r4, r0
10002378:	460f      	mov	r7, r1
1000237a:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
1000237c:	2600      	movs	r6, #0
1000237e:	e036      	b.n	100023ee <xQueueReceive+0x7c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
10002380:	4639      	mov	r1, r7
10002382:	4620      	mov	r0, r4
10002384:	f7ff ff01 	bl	1000218a <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
10002388:	3d01      	subs	r5, #1
1000238a:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1000238c:	6923      	ldr	r3, [r4, #16]
1000238e:	b923      	cbnz	r3, 1000239a <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
10002390:	f001 fa84 	bl	1000389c <vPortExitCritical>
                return pdPASS;
10002394:	2001      	movs	r0, #1
}
10002396:	b005      	add	sp, #20
10002398:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1000239a:	f104 0010 	add.w	r0, r4, #16
1000239e:	f000 fd17 	bl	10002dd0 <xTaskRemoveFromEventList>
100023a2:	2800      	cmp	r0, #0
100023a4:	d0f4      	beq.n	10002390 <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
100023a6:	f001 fa5f 	bl	10003868 <vPortYield>
100023aa:	e7f1      	b.n	10002390 <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
100023ac:	f001 fa76 	bl	1000389c <vPortExitCritical>
                    return errQUEUE_EMPTY;
100023b0:	2000      	movs	r0, #0
100023b2:	e7f0      	b.n	10002396 <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
100023b4:	a802      	add	r0, sp, #8
100023b6:	f000 fd7d 	bl	10002eb4 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
100023ba:	2601      	movs	r6, #1
100023bc:	e021      	b.n	10002402 <xQueueReceive+0x90>
        prvLockQueue( pxQueue );
100023be:	2300      	movs	r3, #0
100023c0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
100023c4:	e029      	b.n	1000241a <xQueueReceive+0xa8>
100023c6:	2300      	movs	r3, #0
100023c8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
100023cc:	e02b      	b.n	10002426 <xQueueReceive+0xb4>
                prvUnlockQueue( pxQueue );
100023ce:	4620      	mov	r0, r4
100023d0:	f7ff ff19 	bl	10002206 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
100023d4:	f000 fbca 	bl	10002b6c <xTaskResumeAll>
100023d8:	e009      	b.n	100023ee <xQueueReceive+0x7c>
            prvUnlockQueue( pxQueue );
100023da:	4620      	mov	r0, r4
100023dc:	f7ff ff13 	bl	10002206 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
100023e0:	f000 fbc4 	bl	10002b6c <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100023e4:	4620      	mov	r0, r4
100023e6:	f7ff fe88 	bl	100020fa <prvIsQueueEmpty>
100023ea:	2800      	cmp	r0, #0
100023ec:	d137      	bne.n	1000245e <xQueueReceive+0xec>
        taskENTER_CRITICAL();
100023ee:	f001 fa47 	bl	10003880 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
100023f2:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
100023f4:	2d00      	cmp	r5, #0
100023f6:	d1c3      	bne.n	10002380 <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
100023f8:	9b01      	ldr	r3, [sp, #4]
100023fa:	2b00      	cmp	r3, #0
100023fc:	d0d6      	beq.n	100023ac <xQueueReceive+0x3a>
                else if( xEntryTimeSet == pdFALSE )
100023fe:	2e00      	cmp	r6, #0
10002400:	d0d8      	beq.n	100023b4 <xQueueReceive+0x42>
        taskEXIT_CRITICAL();
10002402:	f001 fa4b 	bl	1000389c <vPortExitCritical>
        vTaskSuspendAll();
10002406:	f000 facf 	bl	100029a8 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
1000240a:	f001 fa39 	bl	10003880 <vPortEnterCritical>
1000240e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
10002412:	b25b      	sxtb	r3, r3
10002414:	f1b3 3fff 	cmp.w	r3, #4294967295
10002418:	d0d1      	beq.n	100023be <xQueueReceive+0x4c>
1000241a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
1000241e:	b25b      	sxtb	r3, r3
10002420:	f1b3 3fff 	cmp.w	r3, #4294967295
10002424:	d0cf      	beq.n	100023c6 <xQueueReceive+0x54>
10002426:	f001 fa39 	bl	1000389c <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1000242a:	a901      	add	r1, sp, #4
1000242c:	a802      	add	r0, sp, #8
1000242e:	f000 fd4d 	bl	10002ecc <xTaskCheckForTimeOut>
10002432:	2800      	cmp	r0, #0
10002434:	d1d1      	bne.n	100023da <xQueueReceive+0x68>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
10002436:	4620      	mov	r0, r4
10002438:	f7ff fe5f 	bl	100020fa <prvIsQueueEmpty>
1000243c:	2800      	cmp	r0, #0
1000243e:	d0c6      	beq.n	100023ce <xQueueReceive+0x5c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
10002440:	9901      	ldr	r1, [sp, #4]
10002442:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002446:	f000 fc97 	bl	10002d78 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
1000244a:	4620      	mov	r0, r4
1000244c:	f7ff fedb 	bl	10002206 <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
10002450:	f000 fb8c 	bl	10002b6c <xTaskResumeAll>
10002454:	2800      	cmp	r0, #0
10002456:	d1ca      	bne.n	100023ee <xQueueReceive+0x7c>
                    taskYIELD_WITHIN_API();
10002458:	f001 fa06 	bl	10003868 <vPortYield>
1000245c:	e7c7      	b.n	100023ee <xQueueReceive+0x7c>
                return errQUEUE_EMPTY;
1000245e:	2000      	movs	r0, #0
10002460:	e799      	b.n	10002396 <xQueueReceive+0x24>

10002462 <vQueueWaitForMessageRestricted>:
    {
10002462:	b570      	push	{r4, r5, r6, lr}
10002464:	4604      	mov	r4, r0
10002466:	460d      	mov	r5, r1
10002468:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
1000246a:	f001 fa09 	bl	10003880 <vPortEnterCritical>
1000246e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
10002472:	b25b      	sxtb	r3, r3
10002474:	f1b3 3fff 	cmp.w	r3, #4294967295
10002478:	d00d      	beq.n	10002496 <vQueueWaitForMessageRestricted+0x34>
1000247a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
1000247e:	b25b      	sxtb	r3, r3
10002480:	f1b3 3fff 	cmp.w	r3, #4294967295
10002484:	d00b      	beq.n	1000249e <vQueueWaitForMessageRestricted+0x3c>
10002486:	f001 fa09 	bl	1000389c <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
1000248a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
1000248c:	b15b      	cbz	r3, 100024a6 <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
1000248e:	4620      	mov	r0, r4
10002490:	f7ff feb9 	bl	10002206 <prvUnlockQueue>
    }
10002494:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
10002496:	2300      	movs	r3, #0
10002498:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
1000249c:	e7ed      	b.n	1000247a <vQueueWaitForMessageRestricted+0x18>
1000249e:	2300      	movs	r3, #0
100024a0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
100024a4:	e7ef      	b.n	10002486 <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
100024a6:	4632      	mov	r2, r6
100024a8:	4629      	mov	r1, r5
100024aa:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100024ae:	f000 fc71 	bl	10002d94 <vTaskPlaceOnEventListRestricted>
100024b2:	e7ec      	b.n	1000248e <vQueueWaitForMessageRestricted+0x2c>

100024b4 <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
100024b4:	4b0a      	ldr	r3, [pc, #40]	; (100024e0 <prvGetExpectedIdleTime+0x2c>)
100024b6:	681b      	ldr	r3, [r3, #0]
100024b8:	b103      	cbz	r3, 100024bc <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
100024ba:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
100024bc:	4a09      	ldr	r2, [pc, #36]	; (100024e4 <prvGetExpectedIdleTime+0x30>)
100024be:	6812      	ldr	r2, [r2, #0]
100024c0:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
100024c2:	b950      	cbnz	r0, 100024da <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
100024c4:	4a08      	ldr	r2, [pc, #32]	; (100024e8 <prvGetExpectedIdleTime+0x34>)
100024c6:	6812      	ldr	r2, [r2, #0]
100024c8:	2a01      	cmp	r2, #1
100024ca:	d807      	bhi.n	100024dc <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
100024cc:	b933      	cbnz	r3, 100024dc <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
100024ce:	4b07      	ldr	r3, [pc, #28]	; (100024ec <prvGetExpectedIdleTime+0x38>)
100024d0:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
100024d2:	4b07      	ldr	r3, [pc, #28]	; (100024f0 <prvGetExpectedIdleTime+0x3c>)
100024d4:	681b      	ldr	r3, [r3, #0]
100024d6:	1ac0      	subs	r0, r0, r3
100024d8:	4770      	bx	lr
            xReturn = 0;
100024da:	2000      	movs	r0, #0
        }

        return xReturn;
    }
100024dc:	4770      	bx	lr
100024de:	bf00      	nop
100024e0:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
100024e4:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
100024e8:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
100024ec:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
100024f0:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}

100024f4 <prvTaskCheckFreeStackSpace>:

#if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 ) )

    static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
    {
        configSTACK_DEPTH_TYPE uxCount = 0U;
100024f4:	2300      	movs	r3, #0

        while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
100024f6:	e001      	b.n	100024fc <prvTaskCheckFreeStackSpace+0x8>
        {
            pucStackByte -= portSTACK_GROWTH;
100024f8:	3001      	adds	r0, #1
            uxCount++;
100024fa:	3301      	adds	r3, #1
        while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
100024fc:	7802      	ldrb	r2, [r0, #0]
100024fe:	2aa5      	cmp	r2, #165	; 0xa5
10002500:	d0fa      	beq.n	100024f8 <prvTaskCheckFreeStackSpace+0x4>
        }

        uxCount /= ( configSTACK_DEPTH_TYPE ) sizeof( StackType_t );

        return uxCount;
    }
10002502:	0898      	lsrs	r0, r3, #2
10002504:	4770      	bx	lr
	...

10002508 <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
10002508:	4b07      	ldr	r3, [pc, #28]	; (10002528 <prvResetNextTaskUnblockTime+0x20>)
1000250a:	681b      	ldr	r3, [r3, #0]
1000250c:	681b      	ldr	r3, [r3, #0]
1000250e:	b923      	cbnz	r3, 1000251a <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
10002510:	4b06      	ldr	r3, [pc, #24]	; (1000252c <prvResetNextTaskUnblockTime+0x24>)
10002512:	f04f 32ff 	mov.w	r2, #4294967295
10002516:	601a      	str	r2, [r3, #0]
10002518:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
1000251a:	4b03      	ldr	r3, [pc, #12]	; (10002528 <prvResetNextTaskUnblockTime+0x20>)
1000251c:	681b      	ldr	r3, [r3, #0]
1000251e:	68db      	ldr	r3, [r3, #12]
10002520:	681a      	ldr	r2, [r3, #0]
10002522:	4b02      	ldr	r3, [pc, #8]	; (1000252c <prvResetNextTaskUnblockTime+0x24>)
10002524:	601a      	str	r2, [r3, #0]
    }
}
10002526:	4770      	bx	lr
10002528:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
1000252c:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}

10002530 <prvInitialiseNewTask>:
{
10002530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002534:	4680      	mov	r8, r0
10002536:	460d      	mov	r5, r1
10002538:	4617      	mov	r7, r2
1000253a:	4699      	mov	r9, r3
1000253c:	9e08      	ldr	r6, [sp, #32]
1000253e:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
10002542:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
10002544:	0092      	lsls	r2, r2, #2
10002546:	21a5      	movs	r1, #165	; 0xa5
10002548:	6b20      	ldr	r0, [r4, #48]	; 0x30
1000254a:	f001 fb8f 	bl	10003c6c <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
1000254e:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002550:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
10002554:	3a01      	subs	r2, #1
10002556:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
1000255a:	f027 0707 	bic.w	r7, r7, #7
            pxNewTCB->pxEndOfStack = pxTopOfStack;
1000255e:	6567      	str	r7, [r4, #84]	; 0x54
    if( pcName != NULL )
10002560:	b19d      	cbz	r5, 1000258a <prvInitialiseNewTask+0x5a>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
10002562:	f04f 0c00 	mov.w	ip, #0
10002566:	f1bc 0f1f 	cmp.w	ip, #31
1000256a:	d80b      	bhi.n	10002584 <prvInitialiseNewTask+0x54>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
1000256c:	f815 200c 	ldrb.w	r2, [r5, ip]
10002570:	eb04 030c 	add.w	r3, r4, ip
10002574:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
10002578:	f815 300c 	ldrb.w	r3, [r5, ip]
1000257c:	b113      	cbz	r3, 10002584 <prvInitialiseNewTask+0x54>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
1000257e:	f10c 0c01 	add.w	ip, ip, #1
10002582:	e7f0      	b.n	10002566 <prvInitialiseNewTask+0x36>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
10002584:	2300      	movs	r3, #0
10002586:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1000258a:	2e04      	cmp	r6, #4
1000258c:	d900      	bls.n	10002590 <prvInitialiseNewTask+0x60>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1000258e:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
10002590:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
10002592:	6626      	str	r6, [r4, #96]	; 0x60
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
10002594:	1d20      	adds	r0, r4, #4
10002596:	f7ff fd82 	bl	1000209e <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
1000259a:	f104 0018 	add.w	r0, r4, #24
1000259e:	f7ff fd7e 	bl	1000209e <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
100025a2:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
100025a4:	f1c6 0605 	rsb	r6, r6, #5
100025a8:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
100025aa:	6264      	str	r4, [r4, #36]	; 0x24
                pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
100025ac:	464b      	mov	r3, r9
100025ae:	4642      	mov	r2, r8
100025b0:	6b21      	ldr	r1, [r4, #48]	; 0x30
100025b2:	4638      	mov	r0, r7
100025b4:	f001 f99c 	bl	100038f0 <pxPortInitialiseStack>
100025b8:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
100025ba:	f1ba 0f00 	cmp.w	sl, #0
100025be:	d001      	beq.n	100025c4 <prvInitialiseNewTask+0x94>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
100025c0:	f8ca 4000 	str.w	r4, [sl]
}
100025c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

100025c8 <prvCreateStaticTask>:
    {
100025c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100025cc:	b085      	sub	sp, #20
100025ce:	9e0d      	ldr	r6, [sp, #52]	; 0x34
100025d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
100025d2:	b1f4      	cbz	r4, 10002612 <prvCreateStaticTask+0x4a>
100025d4:	4605      	mov	r5, r0
100025d6:	4689      	mov	r9, r1
100025d8:	4690      	mov	r8, r2
100025da:	461f      	mov	r7, r3
100025dc:	b1de      	cbz	r6, 10002616 <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
100025de:	2274      	movs	r2, #116	; 0x74
100025e0:	2100      	movs	r1, #0
100025e2:	4620      	mov	r0, r4
100025e4:	f001 fb42 	bl	10003c6c <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
100025e8:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
100025ea:	2302      	movs	r3, #2
100025ec:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
100025f0:	2300      	movs	r3, #0
100025f2:	9303      	str	r3, [sp, #12]
100025f4:	9402      	str	r4, [sp, #8]
100025f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100025f8:	9301      	str	r3, [sp, #4]
100025fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100025fc:	9300      	str	r3, [sp, #0]
100025fe:	463b      	mov	r3, r7
10002600:	4642      	mov	r2, r8
10002602:	4649      	mov	r1, r9
10002604:	4628      	mov	r0, r5
10002606:	f7ff ff93 	bl	10002530 <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
1000260a:	4620      	mov	r0, r4
    }
1000260c:	b005      	add	sp, #20
1000260e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
10002612:	4620      	mov	r0, r4
10002614:	e7fa      	b.n	1000260c <prvCreateStaticTask+0x44>
10002616:	4630      	mov	r0, r6
        return pxNewTCB;
10002618:	e7f8      	b.n	1000260c <prvCreateStaticTask+0x44>
	...

1000261c <prvInitialiseTaskLists>:
{
1000261c:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
1000261e:	2400      	movs	r4, #0
10002620:	e007      	b.n	10002632 <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
10002622:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
10002626:	0093      	lsls	r3, r2, #2
10002628:	480e      	ldr	r0, [pc, #56]	; (10002664 <prvInitialiseTaskLists+0x48>)
1000262a:	4418      	add	r0, r3
1000262c:	f7ff fd2a 	bl	10002084 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
10002630:	3401      	adds	r4, #1
10002632:	2c04      	cmp	r4, #4
10002634:	d9f5      	bls.n	10002622 <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
10002636:	4d0c      	ldr	r5, [pc, #48]	; (10002668 <prvInitialiseTaskLists+0x4c>)
10002638:	4628      	mov	r0, r5
1000263a:	f7ff fd23 	bl	10002084 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
1000263e:	4c0b      	ldr	r4, [pc, #44]	; (1000266c <prvInitialiseTaskLists+0x50>)
10002640:	4620      	mov	r0, r4
10002642:	f7ff fd1f 	bl	10002084 <vListInitialise>
    vListInitialise( &xPendingReadyList );
10002646:	480a      	ldr	r0, [pc, #40]	; (10002670 <prvInitialiseTaskLists+0x54>)
10002648:	f7ff fd1c 	bl	10002084 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
1000264c:	4809      	ldr	r0, [pc, #36]	; (10002674 <prvInitialiseTaskLists+0x58>)
1000264e:	f7ff fd19 	bl	10002084 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
10002652:	4809      	ldr	r0, [pc, #36]	; (10002678 <prvInitialiseTaskLists+0x5c>)
10002654:	f7ff fd16 	bl	10002084 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
10002658:	4b08      	ldr	r3, [pc, #32]	; (1000267c <prvInitialiseTaskLists+0x60>)
1000265a:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
1000265c:	4b08      	ldr	r3, [pc, #32]	; (10002680 <prvInitialiseTaskLists+0x64>)
1000265e:	601c      	str	r4, [r3, #0]
}
10002660:	bd38      	pop	{r3, r4, r5, pc}
10002662:	bf00      	nop
10002664:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002668:	38008a64 	stmdacc	r0, {r2, r5, r6, r9, fp, pc}
1000266c:	38008a80 	stmdacc	r0, {r7, r9, fp, pc}
10002670:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}
10002674:	38008b5c 	stmdacc	r0, {r2, r3, r4, r6, r8, r9, fp, pc}
10002678:	38008b40 	stmdacc	r0, {r6, r8, r9, fp, pc}
1000267c:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002680:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}

10002684 <prvAddNewTaskToReadyList>:
    {
10002684:	b510      	push	{r4, lr}
10002686:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
10002688:	f001 f8fa 	bl	10003880 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
1000268c:	4a27      	ldr	r2, [pc, #156]	; (1000272c <prvAddNewTaskToReadyList+0xa8>)
1000268e:	6813      	ldr	r3, [r2, #0]
10002690:	3301      	adds	r3, #1
10002692:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
10002694:	4b26      	ldr	r3, [pc, #152]	; (10002730 <prvAddNewTaskToReadyList+0xac>)
10002696:	681b      	ldr	r3, [r3, #0]
10002698:	b15b      	cbz	r3, 100026b2 <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
1000269a:	4b26      	ldr	r3, [pc, #152]	; (10002734 <prvAddNewTaskToReadyList+0xb0>)
1000269c:	681b      	ldr	r3, [r3, #0]
1000269e:	b96b      	cbnz	r3, 100026bc <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
100026a0:	4b23      	ldr	r3, [pc, #140]	; (10002730 <prvAddNewTaskToReadyList+0xac>)
100026a2:	681b      	ldr	r3, [r3, #0]
100026a4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100026a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100026a8:	429a      	cmp	r2, r3
100026aa:	d807      	bhi.n	100026bc <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
100026ac:	4b20      	ldr	r3, [pc, #128]	; (10002730 <prvAddNewTaskToReadyList+0xac>)
100026ae:	601c      	str	r4, [r3, #0]
100026b0:	e004      	b.n	100026bc <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
100026b2:	4b1f      	ldr	r3, [pc, #124]	; (10002730 <prvAddNewTaskToReadyList+0xac>)
100026b4:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
100026b6:	6813      	ldr	r3, [r2, #0]
100026b8:	2b01      	cmp	r3, #1
100026ba:	d030      	beq.n	1000271e <prvAddNewTaskToReadyList+0x9a>
            uxTaskNumber++;
100026bc:	4a1e      	ldr	r2, [pc, #120]	; (10002738 <prvAddNewTaskToReadyList+0xb4>)
100026be:	6813      	ldr	r3, [r2, #0]
100026c0:	3301      	adds	r3, #1
100026c2:	6013      	str	r3, [r2, #0]
                pxNewTCB->uxTCBNumber = uxTaskNumber;
100026c4:	65a3      	str	r3, [r4, #88]	; 0x58
            prvAddTaskToReadyList( pxNewTCB );
100026c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100026c8:	4a1c      	ldr	r2, [pc, #112]	; (1000273c <prvAddNewTaskToReadyList+0xb8>)
100026ca:	6812      	ldr	r2, [r2, #0]
100026cc:	4293      	cmp	r3, r2
100026ce:	d901      	bls.n	100026d4 <prvAddNewTaskToReadyList+0x50>
100026d0:	4a1a      	ldr	r2, [pc, #104]	; (1000273c <prvAddNewTaskToReadyList+0xb8>)
100026d2:	6013      	str	r3, [r2, #0]
100026d4:	4a1a      	ldr	r2, [pc, #104]	; (10002740 <prvAddNewTaskToReadyList+0xbc>)
100026d6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100026da:	eb02 0383 	add.w	r3, r2, r3, lsl #2
100026de:	685b      	ldr	r3, [r3, #4]
100026e0:	60a3      	str	r3, [r4, #8]
100026e2:	6898      	ldr	r0, [r3, #8]
100026e4:	60e0      	str	r0, [r4, #12]
100026e6:	1d21      	adds	r1, r4, #4
100026e8:	6041      	str	r1, [r0, #4]
100026ea:	6099      	str	r1, [r3, #8]
100026ec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100026ee:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
100026f2:	eb02 0081 	add.w	r0, r2, r1, lsl #2
100026f6:	6160      	str	r0, [r4, #20]
100026f8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
100026fc:	3101      	adds	r1, #1
100026fe:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002702:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
10002706:	f001 f8c9 	bl	1000389c <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
1000270a:	4b0a      	ldr	r3, [pc, #40]	; (10002734 <prvAddNewTaskToReadyList+0xb0>)
1000270c:	681b      	ldr	r3, [r3, #0]
1000270e:	b12b      	cbz	r3, 1000271c <prvAddNewTaskToReadyList+0x98>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002710:	4b07      	ldr	r3, [pc, #28]	; (10002730 <prvAddNewTaskToReadyList+0xac>)
10002712:	681b      	ldr	r3, [r3, #0]
10002714:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002716:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002718:	429a      	cmp	r2, r3
1000271a:	d303      	bcc.n	10002724 <prvAddNewTaskToReadyList+0xa0>
    }
1000271c:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
1000271e:	f7ff ff7d 	bl	1000261c <prvInitialiseTaskLists>
10002722:	e7cb      	b.n	100026bc <prvAddNewTaskToReadyList+0x38>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002724:	f001 f8a0 	bl	10003868 <vPortYield>
    }
10002728:	e7f8      	b.n	1000271c <prvAddNewTaskToReadyList+0x98>
1000272a:	bf00      	nop
1000272c:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
10002730:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002734:	38008b3c 	stmdacc	r0, {r2, r3, r4, r5, r8, r9, fp, pc}
10002738:	3800885c 	stmdacc	r0, {r2, r3, r4, r6, fp, pc}
1000273c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002740:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002744 <prvCreateTask>:
    {
10002744:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002748:	b085      	sub	sp, #20
1000274a:	4606      	mov	r6, r0
1000274c:	460f      	mov	r7, r1
1000274e:	4615      	mov	r5, r2
10002750:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
10002752:	0090      	lsls	r0, r2, #2
10002754:	f000 ff42 	bl	100035dc <pvPortMalloc>
            if( pxStack != NULL )
10002758:	4681      	mov	r9, r0
1000275a:	b310      	cbz	r0, 100027a2 <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
1000275c:	2074      	movs	r0, #116	; 0x74
1000275e:	f000 ff3d 	bl	100035dc <pvPortMalloc>
                if( pxNewTCB != NULL )
10002762:	4604      	mov	r4, r0
10002764:	b1c8      	cbz	r0, 1000279a <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002766:	2274      	movs	r2, #116	; 0x74
10002768:	2100      	movs	r1, #0
1000276a:	f001 fa7f 	bl	10003c6c <memset>
                    pxNewTCB->pxStack = pxStack;
1000276e:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
10002772:	b174      	cbz	r4, 10002792 <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
10002774:	2300      	movs	r3, #0
10002776:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
1000277a:	9303      	str	r3, [sp, #12]
1000277c:	9402      	str	r4, [sp, #8]
1000277e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10002780:	9301      	str	r3, [sp, #4]
10002782:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10002784:	9300      	str	r3, [sp, #0]
10002786:	4643      	mov	r3, r8
10002788:	462a      	mov	r2, r5
1000278a:	4639      	mov	r1, r7
1000278c:	4630      	mov	r0, r6
1000278e:	f7ff fecf 	bl	10002530 <prvInitialiseNewTask>
    }
10002792:	4620      	mov	r0, r4
10002794:	b005      	add	sp, #20
10002796:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
1000279a:	4648      	mov	r0, r9
1000279c:	f000 ff88 	bl	100036b0 <vPortFree>
100027a0:	e7e7      	b.n	10002772 <prvCreateTask+0x2e>
                pxNewTCB = NULL;
100027a2:	4604      	mov	r4, r0
        return pxNewTCB;
100027a4:	e7f5      	b.n	10002792 <prvCreateTask+0x4e>

100027a6 <prvDeleteTCB>:
    {
100027a6:	b510      	push	{r4, lr}
100027a8:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
100027aa:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
100027ae:	b113      	cbz	r3, 100027b6 <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
100027b0:	2b01      	cmp	r3, #1
100027b2:	d007      	beq.n	100027c4 <prvDeleteTCB+0x1e>
    }
100027b4:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
100027b6:	6b00      	ldr	r0, [r0, #48]	; 0x30
100027b8:	f000 ff7a 	bl	100036b0 <vPortFree>
                vPortFree( pxTCB );
100027bc:	4620      	mov	r0, r4
100027be:	f000 ff77 	bl	100036b0 <vPortFree>
100027c2:	e7f7      	b.n	100027b4 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
100027c4:	f000 ff74 	bl	100036b0 <vPortFree>
    }
100027c8:	e7f4      	b.n	100027b4 <prvDeleteTCB+0xe>
	...

100027cc <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
100027cc:	4b0f      	ldr	r3, [pc, #60]	; (1000280c <prvCheckTasksWaitingTermination+0x40>)
100027ce:	681b      	ldr	r3, [r3, #0]
100027d0:	b1d3      	cbz	r3, 10002808 <prvCheckTasksWaitingTermination+0x3c>
{
100027d2:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
100027d4:	f001 f854 	bl	10003880 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
100027d8:	4b0d      	ldr	r3, [pc, #52]	; (10002810 <prvCheckTasksWaitingTermination+0x44>)
100027da:	68db      	ldr	r3, [r3, #12]
100027dc:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
100027de:	1d20      	adds	r0, r4, #4
100027e0:	f7ff fc79 	bl	100020d6 <uxListRemove>
                        --uxCurrentNumberOfTasks;
100027e4:	4a0b      	ldr	r2, [pc, #44]	; (10002814 <prvCheckTasksWaitingTermination+0x48>)
100027e6:	6813      	ldr	r3, [r2, #0]
100027e8:	3b01      	subs	r3, #1
100027ea:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
100027ec:	4a07      	ldr	r2, [pc, #28]	; (1000280c <prvCheckTasksWaitingTermination+0x40>)
100027ee:	6813      	ldr	r3, [r2, #0]
100027f0:	3b01      	subs	r3, #1
100027f2:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
100027f4:	f001 f852 	bl	1000389c <vPortExitCritical>
                prvDeleteTCB( pxTCB );
100027f8:	4620      	mov	r0, r4
100027fa:	f7ff ffd4 	bl	100027a6 <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
100027fe:	4b03      	ldr	r3, [pc, #12]	; (1000280c <prvCheckTasksWaitingTermination+0x40>)
10002800:	681b      	ldr	r3, [r3, #0]
10002802:	2b00      	cmp	r3, #0
10002804:	d1e6      	bne.n	100027d4 <prvCheckTasksWaitingTermination+0x8>
}
10002806:	bd10      	pop	{r4, pc}
10002808:	4770      	bx	lr
1000280a:	bf00      	nop
1000280c:	38008654 	stmdacc	r0, {r2, r4, r6, r9, sl, pc}
10002810:	38008b5c 	stmdacc	r0, {r2, r3, r4, r6, r8, r9, fp, pc}
10002814:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002818 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
10002818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000281c:	4604      	mov	r4, r0
1000281e:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
10002820:	4b21      	ldr	r3, [pc, #132]	; (100028a8 <prvAddCurrentTaskToDelayedList+0x90>)
10002822:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
10002824:	4b21      	ldr	r3, [pc, #132]	; (100028ac <prvAddCurrentTaskToDelayedList+0x94>)
10002826:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
10002828:	4b21      	ldr	r3, [pc, #132]	; (100028b0 <prvAddCurrentTaskToDelayedList+0x98>)
1000282a:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
1000282e:	4b21      	ldr	r3, [pc, #132]	; (100028b4 <prvAddCurrentTaskToDelayedList+0x9c>)
10002830:	681a      	ldr	r2, [r3, #0]
10002832:	2100      	movs	r1, #0
10002834:	f882 1072 	strb.w	r1, [r2, #114]	; 0x72
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002838:	6818      	ldr	r0, [r3, #0]
1000283a:	3004      	adds	r0, #4
1000283c:	f7ff fc4b 	bl	100020d6 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
10002840:	f1b4 3fff 	cmp.w	r4, #4294967295
10002844:	d00d      	beq.n	10002862 <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
10002846:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
10002848:	4b1a      	ldr	r3, [pc, #104]	; (100028b4 <prvAddCurrentTaskToDelayedList+0x9c>)
1000284a:	681b      	ldr	r3, [r3, #0]
1000284c:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
1000284e:	42a6      	cmp	r6, r4
10002850:	d91d      	bls.n	1000288e <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
10002852:	4b18      	ldr	r3, [pc, #96]	; (100028b4 <prvAddCurrentTaskToDelayedList+0x9c>)
10002854:	6819      	ldr	r1, [r3, #0]
10002856:	3104      	adds	r1, #4
10002858:	4640      	mov	r0, r8
1000285a:	f7ff fc23 	bl	100020a4 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
1000285e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
10002862:	2d00      	cmp	r5, #0
10002864:	d0ef      	beq.n	10002846 <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
10002866:	4a14      	ldr	r2, [pc, #80]	; (100028b8 <prvAddCurrentTaskToDelayedList+0xa0>)
10002868:	6851      	ldr	r1, [r2, #4]
1000286a:	4b12      	ldr	r3, [pc, #72]	; (100028b4 <prvAddCurrentTaskToDelayedList+0x9c>)
1000286c:	6818      	ldr	r0, [r3, #0]
1000286e:	6081      	str	r1, [r0, #8]
10002870:	6818      	ldr	r0, [r3, #0]
10002872:	688c      	ldr	r4, [r1, #8]
10002874:	60c4      	str	r4, [r0, #12]
10002876:	6818      	ldr	r0, [r3, #0]
10002878:	3004      	adds	r0, #4
1000287a:	6060      	str	r0, [r4, #4]
1000287c:	6818      	ldr	r0, [r3, #0]
1000287e:	3004      	adds	r0, #4
10002880:	6088      	str	r0, [r1, #8]
10002882:	681b      	ldr	r3, [r3, #0]
10002884:	615a      	str	r2, [r3, #20]
10002886:	6813      	ldr	r3, [r2, #0]
10002888:	3301      	adds	r3, #1
1000288a:	6013      	str	r3, [r2, #0]
1000288c:	e7e7      	b.n	1000285e <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
1000288e:	4b09      	ldr	r3, [pc, #36]	; (100028b4 <prvAddCurrentTaskToDelayedList+0x9c>)
10002890:	6819      	ldr	r1, [r3, #0]
10002892:	3104      	adds	r1, #4
10002894:	4638      	mov	r0, r7
10002896:	f7ff fc05 	bl	100020a4 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
1000289a:	4b08      	ldr	r3, [pc, #32]	; (100028bc <prvAddCurrentTaskToDelayedList+0xa4>)
1000289c:	681b      	ldr	r3, [r3, #0]
1000289e:	42a3      	cmp	r3, r4
100028a0:	d9dd      	bls.n	1000285e <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
100028a2:	4b06      	ldr	r3, [pc, #24]	; (100028bc <prvAddCurrentTaskToDelayedList+0xa4>)
100028a4:	601c      	str	r4, [r3, #0]
}
100028a6:	e7da      	b.n	1000285e <prvAddCurrentTaskToDelayedList+0x46>
100028a8:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}
100028ac:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100028b0:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
100028b4:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
100028b8:	38008b40 	stmdacc	r0, {r6, r8, r9, fp, pc}
100028bc:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}

100028c0 <xTaskCreateStatic>:
    {
100028c0:	b510      	push	{r4, lr}
100028c2:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
100028c4:	2400      	movs	r4, #0
100028c6:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
100028c8:	ac05      	add	r4, sp, #20
100028ca:	9403      	str	r4, [sp, #12]
100028cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
100028ce:	9402      	str	r4, [sp, #8]
100028d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
100028d2:	9401      	str	r4, [sp, #4]
100028d4:	9c08      	ldr	r4, [sp, #32]
100028d6:	9400      	str	r4, [sp, #0]
100028d8:	f7ff fe76 	bl	100025c8 <prvCreateStaticTask>
        if( pxNewTCB != NULL )
100028dc:	b108      	cbz	r0, 100028e2 <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
100028de:	f7ff fed1 	bl	10002684 <prvAddNewTaskToReadyList>
    }
100028e2:	9805      	ldr	r0, [sp, #20]
100028e4:	b006      	add	sp, #24
100028e6:	bd10      	pop	{r4, pc}

100028e8 <xTaskCreate>:
    {
100028e8:	b510      	push	{r4, lr}
100028ea:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
100028ec:	9c05      	ldr	r4, [sp, #20]
100028ee:	9401      	str	r4, [sp, #4]
100028f0:	9c04      	ldr	r4, [sp, #16]
100028f2:	9400      	str	r4, [sp, #0]
100028f4:	f7ff ff26 	bl	10002744 <prvCreateTask>
        if( pxNewTCB != NULL )
100028f8:	b120      	cbz	r0, 10002904 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
100028fa:	f7ff fec3 	bl	10002684 <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
100028fe:	2001      	movs	r0, #1
    }
10002900:	b002      	add	sp, #8
10002902:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
10002904:	f04f 30ff 	mov.w	r0, #4294967295
        return xReturn;
10002908:	e7fa      	b.n	10002900 <xTaskCreate+0x18>
	...

1000290c <eTaskGetState>:
            if( pxTCB == pxCurrentTCB )
1000290c:	4b20      	ldr	r3, [pc, #128]	; (10002990 <eTaskGetState+0x84>)
1000290e:	681b      	ldr	r3, [r3, #0]
10002910:	4283      	cmp	r3, r0
10002912:	d030      	beq.n	10002976 <eTaskGetState+0x6a>
    {
10002914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10002918:	4604      	mov	r4, r0
            taskENTER_CRITICAL();
1000291a:	f000 ffb1 	bl	10003880 <vPortEnterCritical>
                pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1000291e:	6965      	ldr	r5, [r4, #20]
                pxEventList = listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) );
10002920:	6aa6      	ldr	r6, [r4, #40]	; 0x28
                pxDelayedList = pxDelayedTaskList;
10002922:	4b1c      	ldr	r3, [pc, #112]	; (10002994 <eTaskGetState+0x88>)
10002924:	681f      	ldr	r7, [r3, #0]
                pxOverflowedDelayedList = pxOverflowDelayedTaskList;
10002926:	4b1c      	ldr	r3, [pc, #112]	; (10002998 <eTaskGetState+0x8c>)
10002928:	f8d3 8000 	ldr.w	r8, [r3]
            taskEXIT_CRITICAL();
1000292c:	f000 ffb6 	bl	1000389c <vPortExitCritical>
            if( pxEventList == &xPendingReadyList )
10002930:	4b1a      	ldr	r3, [pc, #104]	; (1000299c <eTaskGetState+0x90>)
10002932:	429e      	cmp	r6, r3
10002934:	d021      	beq.n	1000297a <eTaskGetState+0x6e>
            else if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
10002936:	42bd      	cmp	r5, r7
10002938:	d022      	beq.n	10002980 <eTaskGetState+0x74>
1000293a:	4545      	cmp	r5, r8
1000293c:	d022      	beq.n	10002984 <eTaskGetState+0x78>
                else if( pxStateList == &xSuspendedTaskList )
1000293e:	4b18      	ldr	r3, [pc, #96]	; (100029a0 <eTaskGetState+0x94>)
10002940:	429d      	cmp	r5, r3
10002942:	d005      	beq.n	10002950 <eTaskGetState+0x44>
                else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
10002944:	4b17      	ldr	r3, [pc, #92]	; (100029a4 <eTaskGetState+0x98>)
10002946:	429d      	cmp	r5, r3
10002948:	d020      	beq.n	1000298c <eTaskGetState+0x80>
1000294a:	b195      	cbz	r5, 10002972 <eTaskGetState+0x66>
                    eReturn = eReady;
1000294c:	2001      	movs	r0, #1
1000294e:	e015      	b.n	1000297c <eTaskGetState+0x70>
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
10002950:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002952:	b14b      	cbz	r3, 10002968 <eTaskGetState+0x5c>
                        eReturn = eBlocked;
10002954:	2002      	movs	r0, #2
10002956:	e011      	b.n	1000297c <eTaskGetState+0x70>
                                if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
10002958:	18e2      	adds	r2, r4, r3
1000295a:	f892 2070 	ldrb.w	r2, [r2, #112]	; 0x70
1000295e:	b2d2      	uxtb	r2, r2
10002960:	2a01      	cmp	r2, #1
10002962:	d011      	beq.n	10002988 <eTaskGetState+0x7c>
                            for( x = ( BaseType_t ) 0; x < ( BaseType_t ) configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
10002964:	3301      	adds	r3, #1
10002966:	e000      	b.n	1000296a <eTaskGetState+0x5e>
10002968:	2300      	movs	r3, #0
1000296a:	2b00      	cmp	r3, #0
1000296c:	ddf4      	ble.n	10002958 <eTaskGetState+0x4c>
                            eReturn = eSuspended;
1000296e:	2003      	movs	r0, #3
10002970:	e004      	b.n	1000297c <eTaskGetState+0x70>
                    eReturn = eDeleted;
10002972:	2004      	movs	r0, #4
10002974:	e002      	b.n	1000297c <eTaskGetState+0x70>
                eReturn = eRunning;
10002976:	2000      	movs	r0, #0
    }
10002978:	4770      	bx	lr
                eReturn = eReady;
1000297a:	2001      	movs	r0, #1
    }
1000297c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                eReturn = eBlocked;
10002980:	2002      	movs	r0, #2
10002982:	e7fb      	b.n	1000297c <eTaskGetState+0x70>
10002984:	2002      	movs	r0, #2
10002986:	e7f9      	b.n	1000297c <eTaskGetState+0x70>
                                    eReturn = eBlocked;
10002988:	2002      	movs	r0, #2
1000298a:	e7f7      	b.n	1000297c <eTaskGetState+0x70>
                    eReturn = eDeleted;
1000298c:	2004      	movs	r0, #4
1000298e:	e7f5      	b.n	1000297c <eTaskGetState+0x70>
10002990:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002994:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002998:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
1000299c:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}
100029a0:	38008b40 	stmdacc	r0, {r6, r8, r9, fp, pc}
100029a4:	38008b5c 	stmdacc	r0, {r2, r3, r4, r6, r8, r9, fp, pc}

100029a8 <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
100029a8:	4a02      	ldr	r2, [pc, #8]	; (100029b4 <vTaskSuspendAll+0xc>)
100029aa:	6813      	ldr	r3, [r2, #0]
100029ac:	3301      	adds	r3, #1
100029ae:	6013      	str	r3, [r2, #0]
}
100029b0:	4770      	bx	lr
100029b2:	bf00      	nop
100029b4:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}

100029b8 <xTaskGetTickCount>:
        xTicks = xTickCount;
100029b8:	4b01      	ldr	r3, [pc, #4]	; (100029c0 <xTaskGetTickCount+0x8>)
100029ba:	6818      	ldr	r0, [r3, #0]
}
100029bc:	4770      	bx	lr
100029be:	bf00      	nop
100029c0:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}

100029c4 <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
100029c4:	4b01      	ldr	r3, [pc, #4]	; (100029cc <uxTaskGetNumberOfTasks+0x8>)
100029c6:	6818      	ldr	r0, [r3, #0]
}
100029c8:	4770      	bx	lr
100029ca:	bf00      	nop
100029cc:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

100029d0 <vTaskStepTick>:
    {
100029d0:	b510      	push	{r4, lr}
100029d2:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
100029d4:	4b0a      	ldr	r3, [pc, #40]	; (10002a00 <vTaskStepTick+0x30>)
100029d6:	681b      	ldr	r3, [r3, #0]
100029d8:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
100029da:	4a0a      	ldr	r2, [pc, #40]	; (10002a04 <vTaskStepTick+0x34>)
100029dc:	6812      	ldr	r2, [r2, #0]
100029de:	429a      	cmp	r2, r3
100029e0:	d004      	beq.n	100029ec <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
100029e2:	4b07      	ldr	r3, [pc, #28]	; (10002a00 <vTaskStepTick+0x30>)
100029e4:	6818      	ldr	r0, [r3, #0]
100029e6:	4404      	add	r4, r0
100029e8:	601c      	str	r4, [r3, #0]
    }
100029ea:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
100029ec:	f000 ff48 	bl	10003880 <vPortEnterCritical>
                xPendedTicks++;
100029f0:	4a05      	ldr	r2, [pc, #20]	; (10002a08 <vTaskStepTick+0x38>)
100029f2:	6813      	ldr	r3, [r2, #0]
100029f4:	3301      	adds	r3, #1
100029f6:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
100029f8:	f000 ff50 	bl	1000389c <vPortExitCritical>
            xTicksToJump--;
100029fc:	3c01      	subs	r4, #1
100029fe:	e7f0      	b.n	100029e2 <vTaskStepTick+0x12>
10002a00:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}
10002a04:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
10002a08:	38008b1c 	stmdacc	r0, {r2, r3, r4, r8, r9, fp, pc}

10002a0c <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002a0c:	4b4c      	ldr	r3, [pc, #304]	; (10002b40 <xTaskIncrementTick+0x134>)
10002a0e:	681b      	ldr	r3, [r3, #0]
10002a10:	2b00      	cmp	r3, #0
10002a12:	f040 808d 	bne.w	10002b30 <xTaskIncrementTick+0x124>
{
10002a16:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
10002a18:	4b4a      	ldr	r3, [pc, #296]	; (10002b44 <xTaskIncrementTick+0x138>)
10002a1a:	681c      	ldr	r4, [r3, #0]
10002a1c:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
10002a1e:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
10002a20:	b1a4      	cbz	r4, 10002a4c <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
10002a22:	4b49      	ldr	r3, [pc, #292]	; (10002b48 <xTaskIncrementTick+0x13c>)
10002a24:	681b      	ldr	r3, [r3, #0]
10002a26:	42a3      	cmp	r3, r4
10002a28:	d91d      	bls.n	10002a66 <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
10002a2a:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
10002a2c:	4b47      	ldr	r3, [pc, #284]	; (10002b4c <xTaskIncrementTick+0x140>)
10002a2e:	681b      	ldr	r3, [r3, #0]
10002a30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002a32:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002a36:	009a      	lsls	r2, r3, #2
10002a38:	4b45      	ldr	r3, [pc, #276]	; (10002b50 <xTaskIncrementTick+0x144>)
10002a3a:	589b      	ldr	r3, [r3, r2]
10002a3c:	2b01      	cmp	r3, #1
10002a3e:	d900      	bls.n	10002a42 <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
10002a40:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
10002a42:	4b44      	ldr	r3, [pc, #272]	; (10002b54 <xTaskIncrementTick+0x148>)
10002a44:	681b      	ldr	r3, [r3, #0]
10002a46:	2b00      	cmp	r3, #0
10002a48:	d178      	bne.n	10002b3c <xTaskIncrementTick+0x130>
}
10002a4a:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
10002a4c:	4a42      	ldr	r2, [pc, #264]	; (10002b58 <xTaskIncrementTick+0x14c>)
10002a4e:	6811      	ldr	r1, [r2, #0]
10002a50:	4b42      	ldr	r3, [pc, #264]	; (10002b5c <xTaskIncrementTick+0x150>)
10002a52:	6818      	ldr	r0, [r3, #0]
10002a54:	6010      	str	r0, [r2, #0]
10002a56:	6019      	str	r1, [r3, #0]
10002a58:	4a41      	ldr	r2, [pc, #260]	; (10002b60 <xTaskIncrementTick+0x154>)
10002a5a:	6813      	ldr	r3, [r2, #0]
10002a5c:	3301      	adds	r3, #1
10002a5e:	6013      	str	r3, [r2, #0]
10002a60:	f7ff fd52 	bl	10002508 <prvResetNextTaskUnblockTime>
10002a64:	e7dd      	b.n	10002a22 <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
10002a66:	2000      	movs	r0, #0
10002a68:	e037      	b.n	10002ada <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
10002a6a:	4b37      	ldr	r3, [pc, #220]	; (10002b48 <xTaskIncrementTick+0x13c>)
10002a6c:	f04f 32ff 	mov.w	r2, #4294967295
10002a70:	601a      	str	r2, [r3, #0]
                    break;
10002a72:	e7db      	b.n	10002a2c <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
10002a74:	4b34      	ldr	r3, [pc, #208]	; (10002b48 <xTaskIncrementTick+0x13c>)
10002a76:	601a      	str	r2, [r3, #0]
                        break;
10002a78:	e7d8      	b.n	10002a2c <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a7a:	68d9      	ldr	r1, [r3, #12]
10002a7c:	6051      	str	r1, [r2, #4]
10002a7e:	e042      	b.n	10002b06 <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002a80:	2100      	movs	r1, #0
10002a82:	6299      	str	r1, [r3, #40]	; 0x28
10002a84:	6811      	ldr	r1, [r2, #0]
10002a86:	3901      	subs	r1, #1
10002a88:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
10002a8a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002a8c:	4935      	ldr	r1, [pc, #212]	; (10002b64 <xTaskIncrementTick+0x158>)
10002a8e:	6809      	ldr	r1, [r1, #0]
10002a90:	428a      	cmp	r2, r1
10002a92:	d901      	bls.n	10002a98 <xTaskIncrementTick+0x8c>
10002a94:	4933      	ldr	r1, [pc, #204]	; (10002b64 <xTaskIncrementTick+0x158>)
10002a96:	600a      	str	r2, [r1, #0]
10002a98:	492d      	ldr	r1, [pc, #180]	; (10002b50 <xTaskIncrementTick+0x144>)
10002a9a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002a9e:	ea4f 0c82 	mov.w	ip, r2, lsl #2
10002aa2:	448c      	add	ip, r1
10002aa4:	f8dc 2004 	ldr.w	r2, [ip, #4]
10002aa8:	609a      	str	r2, [r3, #8]
10002aaa:	6896      	ldr	r6, [r2, #8]
10002aac:	60de      	str	r6, [r3, #12]
10002aae:	6075      	str	r5, [r6, #4]
10002ab0:	6095      	str	r5, [r2, #8]
10002ab2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002ab4:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
10002ab8:	ea4f 058c 	mov.w	r5, ip, lsl #2
10002abc:	194e      	adds	r6, r1, r5
10002abe:	615e      	str	r6, [r3, #20]
10002ac0:	594d      	ldr	r5, [r1, r5]
10002ac2:	3501      	adds	r5, #1
10002ac4:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
10002ac8:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002acc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002ace:	4b1f      	ldr	r3, [pc, #124]	; (10002b4c <xTaskIncrementTick+0x140>)
10002ad0:	681b      	ldr	r3, [r3, #0]
10002ad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002ad4:	429a      	cmp	r2, r3
10002ad6:	d900      	bls.n	10002ada <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
10002ad8:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
10002ada:	4b1f      	ldr	r3, [pc, #124]	; (10002b58 <xTaskIncrementTick+0x14c>)
10002adc:	681b      	ldr	r3, [r3, #0]
10002ade:	681b      	ldr	r3, [r3, #0]
10002ae0:	2b00      	cmp	r3, #0
10002ae2:	d0c2      	beq.n	10002a6a <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
10002ae4:	4b1c      	ldr	r3, [pc, #112]	; (10002b58 <xTaskIncrementTick+0x14c>)
10002ae6:	681b      	ldr	r3, [r3, #0]
10002ae8:	68db      	ldr	r3, [r3, #12]
10002aea:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
10002aec:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
10002aee:	4294      	cmp	r4, r2
10002af0:	d3c0      	bcc.n	10002a74 <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002af2:	695a      	ldr	r2, [r3, #20]
10002af4:	689d      	ldr	r5, [r3, #8]
10002af6:	68d9      	ldr	r1, [r3, #12]
10002af8:	60a9      	str	r1, [r5, #8]
10002afa:	689d      	ldr	r5, [r3, #8]
10002afc:	604d      	str	r5, [r1, #4]
10002afe:	6851      	ldr	r1, [r2, #4]
10002b00:	1d1d      	adds	r5, r3, #4
10002b02:	42a9      	cmp	r1, r5
10002b04:	d0b9      	beq.n	10002a7a <xTaskIncrementTick+0x6e>
10002b06:	2100      	movs	r1, #0
10002b08:	6159      	str	r1, [r3, #20]
10002b0a:	6811      	ldr	r1, [r2, #0]
10002b0c:	3901      	subs	r1, #1
10002b0e:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
10002b10:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002b12:	2a00      	cmp	r2, #0
10002b14:	d0b9      	beq.n	10002a8a <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002b16:	69de      	ldr	r6, [r3, #28]
10002b18:	6a19      	ldr	r1, [r3, #32]
10002b1a:	60b1      	str	r1, [r6, #8]
10002b1c:	69de      	ldr	r6, [r3, #28]
10002b1e:	604e      	str	r6, [r1, #4]
10002b20:	6856      	ldr	r6, [r2, #4]
10002b22:	f103 0118 	add.w	r1, r3, #24
10002b26:	428e      	cmp	r6, r1
10002b28:	d1aa      	bne.n	10002a80 <xTaskIncrementTick+0x74>
10002b2a:	6a19      	ldr	r1, [r3, #32]
10002b2c:	6051      	str	r1, [r2, #4]
10002b2e:	e7a7      	b.n	10002a80 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
10002b30:	4a0d      	ldr	r2, [pc, #52]	; (10002b68 <xTaskIncrementTick+0x15c>)
10002b32:	6813      	ldr	r3, [r2, #0]
10002b34:	3301      	adds	r3, #1
10002b36:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
10002b38:	2000      	movs	r0, #0
}
10002b3a:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
10002b3c:	2001      	movs	r0, #1
    return xSwitchRequired;
10002b3e:	e784      	b.n	10002a4a <xTaskIncrementTick+0x3e>
10002b40:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002b44:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}
10002b48:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
10002b4c:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002b50:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002b54:	38008bf0 	stmdacc	r0, {r4, r5, r6, r7, r8, r9, fp, pc}
10002b58:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002b5c:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
10002b60:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
10002b64:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002b68:	38008b1c 	stmdacc	r0, {r2, r3, r4, r8, r9, fp, pc}

10002b6c <xTaskResumeAll>:
{
10002b6c:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
10002b6e:	f000 fe87 	bl	10003880 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
10002b72:	4b42      	ldr	r3, [pc, #264]	; (10002c7c <xTaskResumeAll+0x110>)
10002b74:	681a      	ldr	r2, [r3, #0]
10002b76:	3a01      	subs	r2, #1
10002b78:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002b7a:	681b      	ldr	r3, [r3, #0]
10002b7c:	2b00      	cmp	r3, #0
10002b7e:	d177      	bne.n	10002c70 <xTaskResumeAll+0x104>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
10002b80:	4b3f      	ldr	r3, [pc, #252]	; (10002c80 <xTaskResumeAll+0x114>)
10002b82:	681b      	ldr	r3, [r3, #0]
10002b84:	b93b      	cbnz	r3, 10002b96 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
10002b86:	2400      	movs	r4, #0
10002b88:	e073      	b.n	10002c72 <xTaskResumeAll+0x106>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002b8a:	6a19      	ldr	r1, [r3, #32]
10002b8c:	6051      	str	r1, [r2, #4]
10002b8e:	e015      	b.n	10002bbc <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002b90:	68d9      	ldr	r1, [r3, #12]
10002b92:	6051      	str	r1, [r2, #4]
10002b94:	e021      	b.n	10002bda <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
10002b96:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
10002b98:	4a3a      	ldr	r2, [pc, #232]	; (10002c84 <xTaskResumeAll+0x118>)
10002b9a:	6812      	ldr	r2, [r2, #0]
10002b9c:	2a00      	cmp	r2, #0
10002b9e:	d04a      	beq.n	10002c36 <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
10002ba0:	4b38      	ldr	r3, [pc, #224]	; (10002c84 <xTaskResumeAll+0x118>)
10002ba2:	68db      	ldr	r3, [r3, #12]
10002ba4:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002ba6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002ba8:	69d8      	ldr	r0, [r3, #28]
10002baa:	6a19      	ldr	r1, [r3, #32]
10002bac:	6081      	str	r1, [r0, #8]
10002bae:	69d8      	ldr	r0, [r3, #28]
10002bb0:	6048      	str	r0, [r1, #4]
10002bb2:	6850      	ldr	r0, [r2, #4]
10002bb4:	f103 0118 	add.w	r1, r3, #24
10002bb8:	4288      	cmp	r0, r1
10002bba:	d0e6      	beq.n	10002b8a <xTaskResumeAll+0x1e>
10002bbc:	2100      	movs	r1, #0
10002bbe:	6299      	str	r1, [r3, #40]	; 0x28
10002bc0:	6811      	ldr	r1, [r2, #0]
10002bc2:	3901      	subs	r1, #1
10002bc4:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002bc6:	695a      	ldr	r2, [r3, #20]
10002bc8:	6898      	ldr	r0, [r3, #8]
10002bca:	68d9      	ldr	r1, [r3, #12]
10002bcc:	6081      	str	r1, [r0, #8]
10002bce:	6898      	ldr	r0, [r3, #8]
10002bd0:	6048      	str	r0, [r1, #4]
10002bd2:	6851      	ldr	r1, [r2, #4]
10002bd4:	1d18      	adds	r0, r3, #4
10002bd6:	4281      	cmp	r1, r0
10002bd8:	d0da      	beq.n	10002b90 <xTaskResumeAll+0x24>
10002bda:	2100      	movs	r1, #0
10002bdc:	6159      	str	r1, [r3, #20]
10002bde:	6811      	ldr	r1, [r2, #0]
10002be0:	3901      	subs	r1, #1
10002be2:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
10002be4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002be6:	4928      	ldr	r1, [pc, #160]	; (10002c88 <xTaskResumeAll+0x11c>)
10002be8:	6809      	ldr	r1, [r1, #0]
10002bea:	428a      	cmp	r2, r1
10002bec:	d901      	bls.n	10002bf2 <xTaskResumeAll+0x86>
10002bee:	4926      	ldr	r1, [pc, #152]	; (10002c88 <xTaskResumeAll+0x11c>)
10002bf0:	600a      	str	r2, [r1, #0]
10002bf2:	4926      	ldr	r1, [pc, #152]	; (10002c8c <xTaskResumeAll+0x120>)
10002bf4:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002bf8:	eb01 0282 	add.w	r2, r1, r2, lsl #2
10002bfc:	6852      	ldr	r2, [r2, #4]
10002bfe:	609a      	str	r2, [r3, #8]
10002c00:	6894      	ldr	r4, [r2, #8]
10002c02:	60dc      	str	r4, [r3, #12]
10002c04:	6060      	str	r0, [r4, #4]
10002c06:	6090      	str	r0, [r2, #8]
10002c08:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002c0a:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
10002c0e:	eb01 0480 	add.w	r4, r1, r0, lsl #2
10002c12:	615c      	str	r4, [r3, #20]
10002c14:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
10002c18:	3001      	adds	r0, #1
10002c1a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002c1e:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002c22:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
10002c24:	4a1a      	ldr	r2, [pc, #104]	; (10002c90 <xTaskResumeAll+0x124>)
10002c26:	6812      	ldr	r2, [r2, #0]
10002c28:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
10002c2a:	4291      	cmp	r1, r2
10002c2c:	d9b4      	bls.n	10002b98 <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
10002c2e:	4a19      	ldr	r2, [pc, #100]	; (10002c94 <xTaskResumeAll+0x128>)
10002c30:	2101      	movs	r1, #1
10002c32:	6011      	str	r1, [r2, #0]
10002c34:	e7b0      	b.n	10002b98 <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
10002c36:	b10b      	cbz	r3, 10002c3c <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
10002c38:	f7ff fc66 	bl	10002508 <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
10002c3c:	4b16      	ldr	r3, [pc, #88]	; (10002c98 <xTaskResumeAll+0x12c>)
10002c3e:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
10002c40:	b954      	cbnz	r4, 10002c58 <xTaskResumeAll+0xec>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
10002c42:	4b14      	ldr	r3, [pc, #80]	; (10002c94 <xTaskResumeAll+0x128>)
10002c44:	681c      	ldr	r4, [r3, #0]
10002c46:	b1a4      	cbz	r4, 10002c72 <xTaskResumeAll+0x106>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
10002c48:	4b11      	ldr	r3, [pc, #68]	; (10002c90 <xTaskResumeAll+0x124>)
10002c4a:	681b      	ldr	r3, [r3, #0]
10002c4c:	f000 fe0c 	bl	10003868 <vPortYield>
                            xAlreadyYielded = pdTRUE;
10002c50:	2401      	movs	r4, #1
10002c52:	e00e      	b.n	10002c72 <xTaskResumeAll+0x106>
                            } while( xPendedCounts > ( TickType_t ) 0U );
10002c54:	3c01      	subs	r4, #1
10002c56:	d007      	beq.n	10002c68 <xTaskResumeAll+0xfc>
                                if( xTaskIncrementTick() != pdFALSE )
10002c58:	f7ff fed8 	bl	10002a0c <xTaskIncrementTick>
10002c5c:	2800      	cmp	r0, #0
10002c5e:	d0f9      	beq.n	10002c54 <xTaskResumeAll+0xe8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
10002c60:	4b0c      	ldr	r3, [pc, #48]	; (10002c94 <xTaskResumeAll+0x128>)
10002c62:	2201      	movs	r2, #1
10002c64:	601a      	str	r2, [r3, #0]
10002c66:	e7f5      	b.n	10002c54 <xTaskResumeAll+0xe8>
                            xPendedTicks = 0;
10002c68:	4b0b      	ldr	r3, [pc, #44]	; (10002c98 <xTaskResumeAll+0x12c>)
10002c6a:	2200      	movs	r2, #0
10002c6c:	601a      	str	r2, [r3, #0]
10002c6e:	e7e8      	b.n	10002c42 <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
10002c70:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
10002c72:	f000 fe13 	bl	1000389c <vPortExitCritical>
}
10002c76:	4620      	mov	r0, r4
10002c78:	bd10      	pop	{r4, pc}
10002c7a:	bf00      	nop
10002c7c:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002c80:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
10002c84:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}
10002c88:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002c8c:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002c90:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002c94:	38008bf0 	stmdacc	r0, {r4, r5, r6, r7, r8, r9, fp, pc}
10002c98:	38008b1c 	stmdacc	r0, {r2, r3, r4, r8, r9, fp, pc}

10002c9c <vTaskDelay>:
    {
10002c9c:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
10002c9e:	b148      	cbz	r0, 10002cb4 <vTaskDelay+0x18>
10002ca0:	4604      	mov	r4, r0
            vTaskSuspendAll();
10002ca2:	f7ff fe81 	bl	100029a8 <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
10002ca6:	2100      	movs	r1, #0
10002ca8:	4620      	mov	r0, r4
10002caa:	f7ff fdb5 	bl	10002818 <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
10002cae:	f7ff ff5d 	bl	10002b6c <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
10002cb2:	b908      	cbnz	r0, 10002cb8 <vTaskDelay+0x1c>
            taskYIELD_WITHIN_API();
10002cb4:	f000 fdd8 	bl	10003868 <vPortYield>
    }
10002cb8:	bd10      	pop	{r4, pc}
	...

10002cbc <prvIdleTask>:
{
10002cbc:	b508      	push	{r3, lr}
10002cbe:	e003      	b.n	10002cc8 <prvIdleTask+0xc>
            xExpectedIdleTime = prvGetExpectedIdleTime();
10002cc0:	f7ff fbf8 	bl	100024b4 <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002cc4:	2801      	cmp	r0, #1
10002cc6:	d808      	bhi.n	10002cda <prvIdleTask+0x1e>
        prvCheckTasksWaitingTermination();
10002cc8:	f7ff fd80 	bl	100027cc <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
10002ccc:	4b08      	ldr	r3, [pc, #32]	; (10002cf0 <prvIdleTask+0x34>)
10002cce:	681b      	ldr	r3, [r3, #0]
10002cd0:	2b01      	cmp	r3, #1
10002cd2:	d9f5      	bls.n	10002cc0 <prvIdleTask+0x4>
                taskYIELD();
10002cd4:	f000 fdc8 	bl	10003868 <vPortYield>
10002cd8:	e7f2      	b.n	10002cc0 <prvIdleTask+0x4>
                vTaskSuspendAll();
10002cda:	f7ff fe65 	bl	100029a8 <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
10002cde:	f7ff fbe9 	bl	100024b4 <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002ce2:	2801      	cmp	r0, #1
10002ce4:	d901      	bls.n	10002cea <prvIdleTask+0x2e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
10002ce6:	f000 fd17 	bl	10003718 <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
10002cea:	f7ff ff3f 	bl	10002b6c <xTaskResumeAll>
10002cee:	e7eb      	b.n	10002cc8 <prvIdleTask+0xc>
10002cf0:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002cf4 <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
10002cf4:	4b1b      	ldr	r3, [pc, #108]	; (10002d64 <vTaskSwitchContext+0x70>)
10002cf6:	681b      	ldr	r3, [r3, #0]
10002cf8:	b11b      	cbz	r3, 10002d02 <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
10002cfa:	4b1b      	ldr	r3, [pc, #108]	; (10002d68 <vTaskSwitchContext+0x74>)
10002cfc:	2201      	movs	r2, #1
10002cfe:	601a      	str	r2, [r3, #0]
10002d00:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
10002d02:	4b19      	ldr	r3, [pc, #100]	; (10002d68 <vTaskSwitchContext+0x74>)
10002d04:	2200      	movs	r2, #0
10002d06:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002d08:	4b18      	ldr	r3, [pc, #96]	; (10002d6c <vTaskSwitchContext+0x78>)
10002d0a:	681b      	ldr	r3, [r3, #0]
10002d0c:	e000      	b.n	10002d10 <vTaskSwitchContext+0x1c>
10002d0e:	3b01      	subs	r3, #1
10002d10:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002d14:	008a      	lsls	r2, r1, #2
10002d16:	4916      	ldr	r1, [pc, #88]	; (10002d70 <vTaskSwitchContext+0x7c>)
10002d18:	588a      	ldr	r2, [r1, r2]
10002d1a:	2a00      	cmp	r2, #0
10002d1c:	d0f7      	beq.n	10002d0e <vTaskSwitchContext+0x1a>
10002d1e:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
10002d22:	0082      	lsls	r2, r0, #2
10002d24:	440a      	add	r2, r1
10002d26:	6850      	ldr	r0, [r2, #4]
10002d28:	6840      	ldr	r0, [r0, #4]
10002d2a:	6050      	str	r0, [r2, #4]
10002d2c:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
10002d30:	ea4f 028c 	mov.w	r2, ip, lsl #2
10002d34:	3208      	adds	r2, #8
10002d36:	4411      	add	r1, r2
10002d38:	4288      	cmp	r0, r1
10002d3a:	d00c      	beq.n	10002d56 <vTaskSwitchContext+0x62>
10002d3c:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
10002d40:	0091      	lsls	r1, r2, #2
10002d42:	4a0b      	ldr	r2, [pc, #44]	; (10002d70 <vTaskSwitchContext+0x7c>)
10002d44:	440a      	add	r2, r1
10002d46:	6852      	ldr	r2, [r2, #4]
10002d48:	68d1      	ldr	r1, [r2, #12]
10002d4a:	4a0a      	ldr	r2, [pc, #40]	; (10002d74 <vTaskSwitchContext+0x80>)
10002d4c:	6011      	str	r1, [r2, #0]
10002d4e:	4907      	ldr	r1, [pc, #28]	; (10002d6c <vTaskSwitchContext+0x78>)
10002d50:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
10002d52:	6813      	ldr	r3, [r2, #0]
    }
10002d54:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002d56:	4662      	mov	r2, ip
10002d58:	0091      	lsls	r1, r2, #2
10002d5a:	4a05      	ldr	r2, [pc, #20]	; (10002d70 <vTaskSwitchContext+0x7c>)
10002d5c:	440a      	add	r2, r1
10002d5e:	68d1      	ldr	r1, [r2, #12]
10002d60:	6051      	str	r1, [r2, #4]
10002d62:	e7eb      	b.n	10002d3c <vTaskSwitchContext+0x48>
10002d64:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002d68:	38008bf0 	stmdacc	r0, {r4, r5, r6, r7, r8, r9, fp, pc}
10002d6c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002d70:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002d74:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002d78 <vTaskPlaceOnEventList>:
{
10002d78:	b510      	push	{r4, lr}
10002d7a:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002d7c:	4b04      	ldr	r3, [pc, #16]	; (10002d90 <vTaskPlaceOnEventList+0x18>)
10002d7e:	6819      	ldr	r1, [r3, #0]
10002d80:	3118      	adds	r1, #24
10002d82:	f7ff f98f 	bl	100020a4 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
10002d86:	2101      	movs	r1, #1
10002d88:	4620      	mov	r0, r4
10002d8a:	f7ff fd45 	bl	10002818 <prvAddCurrentTaskToDelayedList>
}
10002d8e:	bd10      	pop	{r4, pc}
10002d90:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002d94 <vTaskPlaceOnEventListRestricted>:
    {
10002d94:	b570      	push	{r4, r5, r6, lr}
10002d96:	4603      	mov	r3, r0
10002d98:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002d9a:	6859      	ldr	r1, [r3, #4]
10002d9c:	4c0b      	ldr	r4, [pc, #44]	; (10002dcc <vTaskPlaceOnEventListRestricted+0x38>)
10002d9e:	6825      	ldr	r5, [r4, #0]
10002da0:	61e9      	str	r1, [r5, #28]
10002da2:	6825      	ldr	r5, [r4, #0]
10002da4:	688e      	ldr	r6, [r1, #8]
10002da6:	622e      	str	r6, [r5, #32]
10002da8:	6825      	ldr	r5, [r4, #0]
10002daa:	3518      	adds	r5, #24
10002dac:	6075      	str	r5, [r6, #4]
10002dae:	6825      	ldr	r5, [r4, #0]
10002db0:	3518      	adds	r5, #24
10002db2:	608d      	str	r5, [r1, #8]
10002db4:	6821      	ldr	r1, [r4, #0]
10002db6:	628b      	str	r3, [r1, #40]	; 0x28
10002db8:	6819      	ldr	r1, [r3, #0]
10002dba:	3101      	adds	r1, #1
10002dbc:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
10002dbe:	4611      	mov	r1, r2
10002dc0:	b10a      	cbz	r2, 10002dc6 <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
10002dc2:	f04f 30ff 	mov.w	r0, #4294967295
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
10002dc6:	f7ff fd27 	bl	10002818 <prvAddCurrentTaskToDelayedList>
    }
10002dca:	bd70      	pop	{r4, r5, r6, pc}
10002dcc:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002dd0 <xTaskRemoveFromEventList>:
{
10002dd0:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
10002dd2:	68c3      	ldr	r3, [r0, #12]
10002dd4:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002dd6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002dd8:	69e1      	ldr	r1, [r4, #28]
10002dda:	6a22      	ldr	r2, [r4, #32]
10002ddc:	608a      	str	r2, [r1, #8]
10002dde:	69e1      	ldr	r1, [r4, #28]
10002de0:	6051      	str	r1, [r2, #4]
10002de2:	685a      	ldr	r2, [r3, #4]
10002de4:	f104 0118 	add.w	r1, r4, #24
10002de8:	428a      	cmp	r2, r1
10002dea:	d042      	beq.n	10002e72 <xTaskRemoveFromEventList+0xa2>
10002dec:	2200      	movs	r2, #0
10002dee:	62a2      	str	r2, [r4, #40]	; 0x28
10002df0:	681a      	ldr	r2, [r3, #0]
10002df2:	3a01      	subs	r2, #1
10002df4:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002df6:	4b29      	ldr	r3, [pc, #164]	; (10002e9c <xTaskRemoveFromEventList+0xcc>)
10002df8:	681b      	ldr	r3, [r3, #0]
10002dfa:	2b00      	cmp	r3, #0
10002dfc:	d13f      	bne.n	10002e7e <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002dfe:	6963      	ldr	r3, [r4, #20]
10002e00:	68a1      	ldr	r1, [r4, #8]
10002e02:	68e2      	ldr	r2, [r4, #12]
10002e04:	608a      	str	r2, [r1, #8]
10002e06:	68a1      	ldr	r1, [r4, #8]
10002e08:	6051      	str	r1, [r2, #4]
10002e0a:	685a      	ldr	r2, [r3, #4]
10002e0c:	1d21      	adds	r1, r4, #4
10002e0e:	428a      	cmp	r2, r1
10002e10:	d032      	beq.n	10002e78 <xTaskRemoveFromEventList+0xa8>
10002e12:	2200      	movs	r2, #0
10002e14:	6162      	str	r2, [r4, #20]
10002e16:	681a      	ldr	r2, [r3, #0]
10002e18:	3a01      	subs	r2, #1
10002e1a:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
10002e1c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002e1e:	4a20      	ldr	r2, [pc, #128]	; (10002ea0 <xTaskRemoveFromEventList+0xd0>)
10002e20:	6812      	ldr	r2, [r2, #0]
10002e22:	4293      	cmp	r3, r2
10002e24:	d901      	bls.n	10002e2a <xTaskRemoveFromEventList+0x5a>
10002e26:	4a1e      	ldr	r2, [pc, #120]	; (10002ea0 <xTaskRemoveFromEventList+0xd0>)
10002e28:	6013      	str	r3, [r2, #0]
10002e2a:	4a1e      	ldr	r2, [pc, #120]	; (10002ea4 <xTaskRemoveFromEventList+0xd4>)
10002e2c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002e30:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002e34:	685b      	ldr	r3, [r3, #4]
10002e36:	60a3      	str	r3, [r4, #8]
10002e38:	6898      	ldr	r0, [r3, #8]
10002e3a:	60e0      	str	r0, [r4, #12]
10002e3c:	6041      	str	r1, [r0, #4]
10002e3e:	6099      	str	r1, [r3, #8]
10002e40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002e42:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002e46:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002e4a:	6160      	str	r0, [r4, #20]
10002e4c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002e50:	3101      	adds	r1, #1
10002e52:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002e56:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
10002e5a:	f7ff fb55 	bl	10002508 <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
10002e5e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10002e60:	4b11      	ldr	r3, [pc, #68]	; (10002ea8 <xTaskRemoveFromEventList+0xd8>)
10002e62:	681b      	ldr	r3, [r3, #0]
10002e64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002e66:	429a      	cmp	r2, r3
10002e68:	d915      	bls.n	10002e96 <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
10002e6a:	2001      	movs	r0, #1
10002e6c:	4b0f      	ldr	r3, [pc, #60]	; (10002eac <xTaskRemoveFromEventList+0xdc>)
10002e6e:	6018      	str	r0, [r3, #0]
}
10002e70:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002e72:	6a22      	ldr	r2, [r4, #32]
10002e74:	605a      	str	r2, [r3, #4]
10002e76:	e7b9      	b.n	10002dec <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002e78:	68e2      	ldr	r2, [r4, #12]
10002e7a:	605a      	str	r2, [r3, #4]
10002e7c:	e7c9      	b.n	10002e12 <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
10002e7e:	4b0c      	ldr	r3, [pc, #48]	; (10002eb0 <xTaskRemoveFromEventList+0xe0>)
10002e80:	685a      	ldr	r2, [r3, #4]
10002e82:	61e2      	str	r2, [r4, #28]
10002e84:	6890      	ldr	r0, [r2, #8]
10002e86:	6220      	str	r0, [r4, #32]
10002e88:	6041      	str	r1, [r0, #4]
10002e8a:	6091      	str	r1, [r2, #8]
10002e8c:	62a3      	str	r3, [r4, #40]	; 0x28
10002e8e:	681a      	ldr	r2, [r3, #0]
10002e90:	3201      	adds	r2, #1
10002e92:	601a      	str	r2, [r3, #0]
10002e94:	e7e3      	b.n	10002e5e <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
10002e96:	2000      	movs	r0, #0
    return xReturn;
10002e98:	e7ea      	b.n	10002e70 <xTaskRemoveFromEventList+0xa0>
10002e9a:	bf00      	nop
10002e9c:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002ea0:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002ea4:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002ea8:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002eac:	38008bf0 	stmdacc	r0, {r4, r5, r6, r7, r8, r9, fp, pc}
10002eb0:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}

10002eb4 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
10002eb4:	4b03      	ldr	r3, [pc, #12]	; (10002ec4 <vTaskInternalSetTimeOutState+0x10>)
10002eb6:	681b      	ldr	r3, [r3, #0]
10002eb8:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
10002eba:	4b03      	ldr	r3, [pc, #12]	; (10002ec8 <vTaskInternalSetTimeOutState+0x14>)
10002ebc:	681b      	ldr	r3, [r3, #0]
10002ebe:	6043      	str	r3, [r0, #4]
}
10002ec0:	4770      	bx	lr
10002ec2:	bf00      	nop
10002ec4:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
10002ec8:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}

10002ecc <xTaskCheckForTimeOut>:
{
10002ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10002ece:	4604      	mov	r4, r0
10002ed0:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
10002ed2:	f000 fcd5 	bl	10003880 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
10002ed6:	4b19      	ldr	r3, [pc, #100]	; (10002f3c <xTaskCheckForTimeOut+0x70>)
10002ed8:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
10002eda:	6863      	ldr	r3, [r4, #4]
10002edc:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
10002ede:	4918      	ldr	r1, [pc, #96]	; (10002f40 <xTaskCheckForTimeOut+0x74>)
10002ee0:	6809      	ldr	r1, [r1, #0]
10002ee2:	f891 1072 	ldrb.w	r1, [r1, #114]	; 0x72
10002ee6:	b149      	cbz	r1, 10002efc <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
10002ee8:	4b15      	ldr	r3, [pc, #84]	; (10002f40 <xTaskCheckForTimeOut+0x74>)
10002eea:	681b      	ldr	r3, [r3, #0]
10002eec:	2200      	movs	r2, #0
10002eee:	f883 2072 	strb.w	r2, [r3, #114]	; 0x72
                xReturn = pdTRUE;
10002ef2:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
10002ef4:	f000 fcd2 	bl	1000389c <vPortExitCritical>
}
10002ef8:	4620      	mov	r0, r4
10002efa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
10002efc:	6829      	ldr	r1, [r5, #0]
10002efe:	f1b1 3fff 	cmp.w	r1, #4294967295
10002f02:	d018      	beq.n	10002f36 <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
10002f04:	4e0f      	ldr	r6, [pc, #60]	; (10002f44 <xTaskCheckForTimeOut+0x78>)
10002f06:	6836      	ldr	r6, [r6, #0]
10002f08:	6827      	ldr	r7, [r4, #0]
10002f0a:	42b7      	cmp	r7, r6
10002f0c:	d005      	beq.n	10002f1a <xTaskCheckForTimeOut+0x4e>
10002f0e:	4293      	cmp	r3, r2
10002f10:	d803      	bhi.n	10002f1a <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
10002f12:	2300      	movs	r3, #0
10002f14:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002f16:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
10002f18:	e7ec      	b.n	10002ef4 <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
10002f1a:	4281      	cmp	r1, r0
10002f1c:	d803      	bhi.n	10002f26 <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
10002f1e:	2300      	movs	r3, #0
10002f20:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002f22:	2401      	movs	r4, #1
10002f24:	e7e6      	b.n	10002ef4 <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
10002f26:	1a9b      	subs	r3, r3, r2
10002f28:	440b      	add	r3, r1
10002f2a:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
10002f2c:	4620      	mov	r0, r4
10002f2e:	f7ff ffc1 	bl	10002eb4 <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
10002f32:	2400      	movs	r4, #0
10002f34:	e7de      	b.n	10002ef4 <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
10002f36:	2400      	movs	r4, #0
10002f38:	e7dc      	b.n	10002ef4 <xTaskCheckForTimeOut+0x28>
10002f3a:	bf00      	nop
10002f3c:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}
10002f40:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002f44:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}

10002f48 <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
10002f48:	4b01      	ldr	r3, [pc, #4]	; (10002f50 <vTaskMissedYield+0x8>)
10002f4a:	2201      	movs	r2, #1
10002f4c:	601a      	str	r2, [r3, #0]
}
10002f4e:	4770      	bx	lr
10002f50:	38008bf0 	stmdacc	r0, {r4, r5, r6, r7, r8, r9, fp, pc}

10002f54 <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
10002f54:	4b0c      	ldr	r3, [pc, #48]	; (10002f88 <eTaskConfirmSleepModeStatus+0x34>)
10002f56:	681b      	ldr	r3, [r3, #0]
10002f58:	b973      	cbnz	r3, 10002f78 <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
10002f5a:	4b0c      	ldr	r3, [pc, #48]	; (10002f8c <eTaskConfirmSleepModeStatus+0x38>)
10002f5c:	681b      	ldr	r3, [r3, #0]
10002f5e:	b96b      	cbnz	r3, 10002f7c <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
10002f60:	4b0b      	ldr	r3, [pc, #44]	; (10002f90 <eTaskConfirmSleepModeStatus+0x3c>)
10002f62:	681b      	ldr	r3, [r3, #0]
10002f64:	b963      	cbnz	r3, 10002f80 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
10002f66:	4b0b      	ldr	r3, [pc, #44]	; (10002f94 <eTaskConfirmSleepModeStatus+0x40>)
10002f68:	681a      	ldr	r2, [r3, #0]
10002f6a:	4b0b      	ldr	r3, [pc, #44]	; (10002f98 <eTaskConfirmSleepModeStatus+0x44>)
10002f6c:	681b      	ldr	r3, [r3, #0]
10002f6e:	3b01      	subs	r3, #1
10002f70:	429a      	cmp	r2, r3
10002f72:	d007      	beq.n	10002f84 <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
10002f74:	2001      	movs	r0, #1
10002f76:	4770      	bx	lr
            eReturn = eAbortSleep;
10002f78:	2000      	movs	r0, #0
10002f7a:	4770      	bx	lr
            eReturn = eAbortSleep;
10002f7c:	2000      	movs	r0, #0
10002f7e:	4770      	bx	lr
            eReturn = eAbortSleep;
10002f80:	2000      	movs	r0, #0
10002f82:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
10002f84:	2002      	movs	r0, #2
    }
10002f86:	4770      	bx	lr
10002f88:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}
10002f8c:	38008bf0 	stmdacc	r0, {r4, r5, r6, r7, r8, r9, fp, pc}
10002f90:	38008b1c 	stmdacc	r0, {r2, r3, r4, r8, r9, fp, pc}
10002f94:	38008b40 	stmdacc	r0, {r6, r8, r9, fp, pc}
10002f98:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002f9c <vTaskGetInfo>:
    {
10002f9c:	b570      	push	{r4, r5, r6, lr}
10002f9e:	460c      	mov	r4, r1
10002fa0:	4616      	mov	r6, r2
        pxTCB = prvGetTCBFromHandle( xTask );
10002fa2:	4605      	mov	r5, r0
10002fa4:	b330      	cbz	r0, 10002ff4 <vTaskGetInfo+0x58>
        pxTaskStatus->xHandle = pxTCB;
10002fa6:	6025      	str	r5, [r4, #0]
        pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
10002fa8:	f105 0234 	add.w	r2, r5, #52	; 0x34
10002fac:	6062      	str	r2, [r4, #4]
        pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
10002fae:	6aea      	ldr	r2, [r5, #44]	; 0x2c
10002fb0:	6122      	str	r2, [r4, #16]
        pxTaskStatus->pxStackBase = pxTCB->pxStack;
10002fb2:	6b2a      	ldr	r2, [r5, #48]	; 0x30
10002fb4:	61e2      	str	r2, [r4, #28]
            pxTaskStatus->pxTopOfStack = ( StackType_t * ) pxTCB->pxTopOfStack;
10002fb6:	682a      	ldr	r2, [r5, #0]
10002fb8:	6222      	str	r2, [r4, #32]
            pxTaskStatus->pxEndOfStack = pxTCB->pxEndOfStack;
10002fba:	6d6a      	ldr	r2, [r5, #84]	; 0x54
10002fbc:	6262      	str	r2, [r4, #36]	; 0x24
        pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
10002fbe:	6daa      	ldr	r2, [r5, #88]	; 0x58
10002fc0:	60a2      	str	r2, [r4, #8]
            pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
10002fc2:	6e2a      	ldr	r2, [r5, #96]	; 0x60
10002fc4:	6162      	str	r2, [r4, #20]
            pxTaskStatus->ulRunTimeCounter = ( configRUN_TIME_COUNTER_TYPE ) 0;
10002fc6:	2200      	movs	r2, #0
10002fc8:	61a2      	str	r2, [r4, #24]
        if( eState != eInvalid )
10002fca:	2b05      	cmp	r3, #5
10002fcc:	d032      	beq.n	10003034 <vTaskGetInfo+0x98>
            if( taskTASK_IS_RUNNING( pxTCB ) == pdTRUE )
10002fce:	4a1e      	ldr	r2, [pc, #120]	; (10003048 <vTaskGetInfo+0xac>)
10002fd0:	6812      	ldr	r2, [r2, #0]
10002fd2:	42aa      	cmp	r2, r5
10002fd4:	d011      	beq.n	10002ffa <vTaskGetInfo+0x5e>
                pxTaskStatus->eCurrentState = eState;
10002fd6:	7323      	strb	r3, [r4, #12]
                    if( eState == eSuspended )
10002fd8:	2b03      	cmp	r3, #3
10002fda:	d011      	beq.n	10003000 <vTaskGetInfo+0x64>
                taskENTER_CRITICAL();
10002fdc:	f000 fc50 	bl	10003880 <vPortEnterCritical>
                    if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdFALSE )
10002fe0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
10002fe2:	4b1a      	ldr	r3, [pc, #104]	; (1000304c <vTaskGetInfo+0xb0>)
10002fe4:	429a      	cmp	r2, r3
10002fe6:	d022      	beq.n	1000302e <vTaskGetInfo+0x92>
                taskEXIT_CRITICAL();
10002fe8:	f000 fc58 	bl	1000389c <vPortExitCritical>
        if( xGetFreeStackSpace != pdFALSE )
10002fec:	bb3e      	cbnz	r6, 1000303e <vTaskGetInfo+0xa2>
            pxTaskStatus->usStackHighWaterMark = 0;
10002fee:	2300      	movs	r3, #0
10002ff0:	62a3      	str	r3, [r4, #40]	; 0x28
    }
10002ff2:	bd70      	pop	{r4, r5, r6, pc}
        pxTCB = prvGetTCBFromHandle( xTask );
10002ff4:	4a14      	ldr	r2, [pc, #80]	; (10003048 <vTaskGetInfo+0xac>)
10002ff6:	6815      	ldr	r5, [r2, #0]
10002ff8:	e7d5      	b.n	10002fa6 <vTaskGetInfo+0xa>
                pxTaskStatus->eCurrentState = eRunning;
10002ffa:	2300      	movs	r3, #0
10002ffc:	7323      	strb	r3, [r4, #12]
10002ffe:	e7f5      	b.n	10002fec <vTaskGetInfo+0x50>
                        vTaskSuspendAll();
10003000:	f7ff fcd2 	bl	100029a8 <vTaskSuspendAll>
                            if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
10003004:	6aab      	ldr	r3, [r5, #40]	; 0x28
10003006:	b13b      	cbz	r3, 10003018 <vTaskGetInfo+0x7c>
                                pxTaskStatus->eCurrentState = eBlocked;
10003008:	2302      	movs	r3, #2
1000300a:	7323      	strb	r3, [r4, #12]
                        ( void ) xTaskResumeAll();
1000300c:	f7ff fdae 	bl	10002b6c <xTaskResumeAll>
10003010:	e7e4      	b.n	10002fdc <vTaskGetInfo+0x40>
                                            pxTaskStatus->eCurrentState = eBlocked;
10003012:	2302      	movs	r3, #2
10003014:	7323      	strb	r3, [r4, #12]
                                            break;
10003016:	e7f9      	b.n	1000300c <vTaskGetInfo+0x70>
                                    for( x = ( BaseType_t ) 0; x < ( BaseType_t ) configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
10003018:	2300      	movs	r3, #0
1000301a:	2b00      	cmp	r3, #0
1000301c:	dcf6      	bgt.n	1000300c <vTaskGetInfo+0x70>
                                        if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1000301e:	18ea      	adds	r2, r5, r3
10003020:	f892 2070 	ldrb.w	r2, [r2, #112]	; 0x70
10003024:	b2d2      	uxtb	r2, r2
10003026:	2a01      	cmp	r2, #1
10003028:	d0f3      	beq.n	10003012 <vTaskGetInfo+0x76>
                                    for( x = ( BaseType_t ) 0; x < ( BaseType_t ) configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1000302a:	3301      	adds	r3, #1
1000302c:	e7f5      	b.n	1000301a <vTaskGetInfo+0x7e>
                        pxTaskStatus->eCurrentState = eReady;
1000302e:	2301      	movs	r3, #1
10003030:	7323      	strb	r3, [r4, #12]
10003032:	e7d9      	b.n	10002fe8 <vTaskGetInfo+0x4c>
            pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
10003034:	4628      	mov	r0, r5
10003036:	f7ff fc69 	bl	1000290c <eTaskGetState>
1000303a:	7320      	strb	r0, [r4, #12]
1000303c:	e7d6      	b.n	10002fec <vTaskGetInfo+0x50>
                pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
1000303e:	6b28      	ldr	r0, [r5, #48]	; 0x30
10003040:	f7ff fa58 	bl	100024f4 <prvTaskCheckFreeStackSpace>
10003044:	62a0      	str	r0, [r4, #40]	; 0x28
10003046:	e7d4      	b.n	10002ff2 <vTaskGetInfo+0x56>
10003048:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
1000304c:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}

10003050 <xTaskGetCurrentTaskHandle>:
            xReturn = pxCurrentTCB;
10003050:	4b01      	ldr	r3, [pc, #4]	; (10003058 <xTaskGetCurrentTaskHandle+0x8>)
10003052:	6818      	ldr	r0, [r3, #0]
        }
10003054:	4770      	bx	lr
10003056:	bf00      	nop
10003058:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

1000305c <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
1000305c:	2800      	cmp	r0, #0
1000305e:	d034      	beq.n	100030ca <xTaskPriorityDisinherit+0x6e>
    {
10003060:	b538      	push	{r3, r4, r5, lr}
10003062:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
10003064:	6e43      	ldr	r3, [r0, #100]	; 0x64
10003066:	3b01      	subs	r3, #1
10003068:	6643      	str	r3, [r0, #100]	; 0x64
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
1000306a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
1000306c:	6e02      	ldr	r2, [r0, #96]	; 0x60
1000306e:	4291      	cmp	r1, r2
10003070:	d02d      	beq.n	100030ce <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
10003072:	b10b      	cbz	r3, 10003078 <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
10003074:	2000      	movs	r0, #0
    }
10003076:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10003078:	1d05      	adds	r5, r0, #4
1000307a:	4628      	mov	r0, r5
1000307c:	f7ff f82b 	bl	100020d6 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
10003080:	6e23      	ldr	r3, [r4, #96]	; 0x60
10003082:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
10003084:	f1c3 0205 	rsb	r2, r3, #5
10003088:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
1000308a:	4a12      	ldr	r2, [pc, #72]	; (100030d4 <xTaskPriorityDisinherit+0x78>)
1000308c:	6812      	ldr	r2, [r2, #0]
1000308e:	4293      	cmp	r3, r2
10003090:	d901      	bls.n	10003096 <xTaskPriorityDisinherit+0x3a>
10003092:	4a10      	ldr	r2, [pc, #64]	; (100030d4 <xTaskPriorityDisinherit+0x78>)
10003094:	6013      	str	r3, [r2, #0]
10003096:	4a10      	ldr	r2, [pc, #64]	; (100030d8 <xTaskPriorityDisinherit+0x7c>)
10003098:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
1000309c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
100030a0:	685b      	ldr	r3, [r3, #4]
100030a2:	60a3      	str	r3, [r4, #8]
100030a4:	6899      	ldr	r1, [r3, #8]
100030a6:	60e1      	str	r1, [r4, #12]
100030a8:	604d      	str	r5, [r1, #4]
100030aa:	609d      	str	r5, [r3, #8]
100030ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100030ae:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
100030b2:	eb02 0081 	add.w	r0, r2, r1, lsl #2
100030b6:	6160      	str	r0, [r4, #20]
100030b8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
100030bc:	3101      	adds	r1, #1
100030be:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100030c2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
100030c6:	2001      	movs	r0, #1
100030c8:	e7d5      	b.n	10003076 <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
100030ca:	2000      	movs	r0, #0
    }
100030cc:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
100030ce:	2000      	movs	r0, #0
100030d0:	e7d1      	b.n	10003076 <xTaskPriorityDisinherit+0x1a>
100030d2:	bf00      	nop
100030d4:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
100030d8:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

100030dc <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
100030dc:	4b03      	ldr	r3, [pc, #12]	; (100030ec <vApplicationGetIdleTaskMemory+0x10>)
100030de:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
100030e0:	4b03      	ldr	r3, [pc, #12]	; (100030f0 <vApplicationGetIdleTaskMemory+0x14>)
100030e2:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
100030e4:	2380      	movs	r3, #128	; 0x80
100030e6:	6013      	str	r3, [r2, #0]
    }
100030e8:	4770      	bx	lr
100030ea:	bf00      	nop
100030ec:	38008aa0 	stmdacc	r0, {r5, r7, r9, fp, pc}
100030f0:	38008658 	stmdacc	r0, {r3, r4, r6, r9, sl, pc}

100030f4 <prvCreateIdleTasks>:
{
100030f4:	b530      	push	{r4, r5, lr}
100030f6:	b091      	sub	sp, #68	; 0x44
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
100030f8:	2300      	movs	r3, #0
100030fa:	2b1f      	cmp	r3, #31
100030fc:	dc09      	bgt.n	10003112 <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
100030fe:	4a15      	ldr	r2, [pc, #84]	; (10003154 <prvCreateIdleTasks+0x60>)
10003100:	5cd2      	ldrb	r2, [r2, r3]
10003102:	f103 0140 	add.w	r1, r3, #64	; 0x40
10003106:	4469      	add	r1, sp
10003108:	f801 2c20 	strb.w	r2, [r1, #-32]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
1000310c:	b10a      	cbz	r2, 10003112 <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
1000310e:	3301      	adds	r3, #1
10003110:	e7f3      	b.n	100030fa <prvCreateIdleTasks+0x6>
10003112:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10003114:	2c00      	cmp	r4, #0
10003116:	dd02      	ble.n	1000311e <prvCreateIdleTasks+0x2a>
10003118:	2001      	movs	r0, #1
}
1000311a:	b011      	add	sp, #68	; 0x44
1000311c:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1000311e:	2500      	movs	r5, #0
10003120:	9505      	str	r5, [sp, #20]
            StackType_t * pxIdleTaskStackBuffer = NULL;
10003122:	9506      	str	r5, [sp, #24]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
10003124:	aa07      	add	r2, sp, #28
10003126:	a906      	add	r1, sp, #24
10003128:	a805      	add	r0, sp, #20
1000312a:	f7ff ffd7 	bl	100030dc <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
1000312e:	9b05      	ldr	r3, [sp, #20]
10003130:	9302      	str	r3, [sp, #8]
10003132:	9b06      	ldr	r3, [sp, #24]
10003134:	9301      	str	r3, [sp, #4]
10003136:	9500      	str	r5, [sp, #0]
10003138:	462b      	mov	r3, r5
1000313a:	9a07      	ldr	r2, [sp, #28]
1000313c:	a908      	add	r1, sp, #32
1000313e:	4806      	ldr	r0, [pc, #24]	; (10003158 <prvCreateIdleTasks+0x64>)
10003140:	f7ff fbbe 	bl	100028c0 <xTaskCreateStatic>
10003144:	4b05      	ldr	r3, [pc, #20]	; (1000315c <prvCreateIdleTasks+0x68>)
10003146:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
1000314a:	b108      	cbz	r0, 10003150 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
1000314c:	3401      	adds	r4, #1
1000314e:	e7e1      	b.n	10003114 <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
10003150:	2000      	movs	r0, #0
10003152:	e7e2      	b.n	1000311a <prvCreateIdleTasks+0x26>
10003154:	10006040 	andne	r6, r0, r0, asr #32
10003158:	10002cbd 			; <UNDEFINED> instruction: 0x10002cbd
1000315c:	38008a9c 	stmdacc	r0, {r2, r3, r4, r7, r9, fp, pc}

10003160 <vTaskStartScheduler>:
{
10003160:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
10003162:	f7ff ffc7 	bl	100030f4 <prvCreateIdleTasks>
        if( xReturn == pdPASS )
10003166:	2801      	cmp	r0, #1
10003168:	d004      	beq.n	10003174 <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
1000316a:	2801      	cmp	r0, #1
1000316c:	d005      	beq.n	1000317a <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
1000316e:	4b0a      	ldr	r3, [pc, #40]	; (10003198 <vTaskStartScheduler+0x38>)
10003170:	681b      	ldr	r3, [r3, #0]
}
10003172:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
10003174:	f000 f9a6 	bl	100034c4 <xTimerCreateTimerTask>
10003178:	e7f7      	b.n	1000316a <vTaskStartScheduler+0xa>
        portDISABLE_INTERRUPTS();
1000317a:	f000 fc47 	bl	10003a0c <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
1000317e:	4b07      	ldr	r3, [pc, #28]	; (1000319c <vTaskStartScheduler+0x3c>)
10003180:	f04f 32ff 	mov.w	r2, #4294967295
10003184:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
10003186:	4b06      	ldr	r3, [pc, #24]	; (100031a0 <vTaskStartScheduler+0x40>)
10003188:	2201      	movs	r2, #1
1000318a:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
1000318c:	4b05      	ldr	r3, [pc, #20]	; (100031a4 <vTaskStartScheduler+0x44>)
1000318e:	2200      	movs	r2, #0
10003190:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
10003192:	f000 fbf5 	bl	10003980 <xPortStartScheduler>
10003196:	e7ea      	b.n	1000316e <vTaskStartScheduler+0xe>
10003198:	3800000c 	stmdacc	r0, {r2, r3}
1000319c:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
100031a0:	38008b3c 	stmdacc	r0, {r2, r3, r4, r5, r8, r9, fp, pc}
100031a4:	38008b78 	stmdacc	r0, {r3, r4, r5, r6, r8, r9, fp, pc}

100031a8 <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
100031a8:	4b03      	ldr	r3, [pc, #12]	; (100031b8 <vApplicationGetTimerTaskMemory+0x10>)
100031aa:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
100031ac:	4b03      	ldr	r3, [pc, #12]	; (100031bc <vApplicationGetTimerTaskMemory+0x14>)
100031ae:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
100031b0:	2380      	movs	r3, #128	; 0x80
100031b2:	6013      	str	r3, [r2, #0]
    }
100031b4:	4770      	bx	lr
100031b6:	bf00      	nop
100031b8:	38008b7c 	stmdacc	r0, {r2, r3, r4, r5, r6, r8, r9, fp, pc}
100031bc:	38008860 	stmdacc	r0, {r5, r6, fp, pc}

100031c0 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
100031c0:	4b06      	ldr	r3, [pc, #24]	; (100031dc <prvGetNextExpireTime+0x1c>)
100031c2:	681a      	ldr	r2, [r3, #0]
100031c4:	6813      	ldr	r3, [r2, #0]
100031c6:	b92b      	cbnz	r3, 100031d4 <prvGetNextExpireTime+0x14>
100031c8:	2301      	movs	r3, #1
100031ca:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
100031cc:	b923      	cbnz	r3, 100031d8 <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
100031ce:	68d3      	ldr	r3, [r2, #12]
100031d0:	6818      	ldr	r0, [r3, #0]
100031d2:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
100031d4:	2300      	movs	r3, #0
100031d6:	e7f8      	b.n	100031ca <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
100031d8:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
100031da:	4770      	bx	lr
100031dc:	38008bf4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, r9, fp, pc}

100031e0 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
100031e0:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
100031e2:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
100031e4:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
100031e6:	4291      	cmp	r1, r2
100031e8:	d80c      	bhi.n	10003204 <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
100031ea:	1ad2      	subs	r2, r2, r3
100031ec:	6983      	ldr	r3, [r0, #24]
100031ee:	429a      	cmp	r2, r3
100031f0:	d301      	bcc.n	100031f6 <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
100031f2:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
100031f4:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
100031f6:	1d01      	adds	r1, r0, #4
100031f8:	4b09      	ldr	r3, [pc, #36]	; (10003220 <prvInsertTimerInActiveList+0x40>)
100031fa:	6818      	ldr	r0, [r3, #0]
100031fc:	f7fe ff52 	bl	100020a4 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10003200:	2000      	movs	r0, #0
10003202:	e7f7      	b.n	100031f4 <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
10003204:	429a      	cmp	r2, r3
10003206:	d201      	bcs.n	1000320c <prvInsertTimerInActiveList+0x2c>
10003208:	4299      	cmp	r1, r3
1000320a:	d206      	bcs.n	1000321a <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
1000320c:	1d01      	adds	r1, r0, #4
1000320e:	4b05      	ldr	r3, [pc, #20]	; (10003224 <prvInsertTimerInActiveList+0x44>)
10003210:	6818      	ldr	r0, [r3, #0]
10003212:	f7fe ff47 	bl	100020a4 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10003216:	2000      	movs	r0, #0
10003218:	e7ec      	b.n	100031f4 <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
1000321a:	2001      	movs	r0, #1
        return xProcessTimerNow;
1000321c:	e7ea      	b.n	100031f4 <prvInsertTimerInActiveList+0x14>
1000321e:	bf00      	nop
10003220:	38008bf8 	stmdacc	r0, {r3, r4, r5, r6, r7, r8, r9, fp, pc}
10003224:	38008bf4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, r9, fp, pc}

10003228 <prvReloadTimer>:
    {
10003228:	b570      	push	{r4, r5, r6, lr}
1000322a:	4604      	mov	r4, r0
1000322c:	460d      	mov	r5, r1
1000322e:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10003230:	e004      	b.n	1000323c <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
10003232:	69a3      	ldr	r3, [r4, #24]
10003234:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10003236:	6a23      	ldr	r3, [r4, #32]
10003238:	4620      	mov	r0, r4
1000323a:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
1000323c:	69a1      	ldr	r1, [r4, #24]
1000323e:	462b      	mov	r3, r5
10003240:	4632      	mov	r2, r6
10003242:	4429      	add	r1, r5
10003244:	4620      	mov	r0, r4
10003246:	f7ff ffcb 	bl	100031e0 <prvInsertTimerInActiveList>
1000324a:	2800      	cmp	r0, #0
1000324c:	d1f1      	bne.n	10003232 <prvReloadTimer+0xa>
    }
1000324e:	bd70      	pop	{r4, r5, r6, pc}

10003250 <prvProcessExpiredTimer>:
    {
10003250:	b570      	push	{r4, r5, r6, lr}
10003252:	4605      	mov	r5, r0
10003254:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
10003256:	4b0d      	ldr	r3, [pc, #52]	; (1000328c <prvProcessExpiredTimer+0x3c>)
10003258:	681b      	ldr	r3, [r3, #0]
1000325a:	68db      	ldr	r3, [r3, #12]
1000325c:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
1000325e:	1d20      	adds	r0, r4, #4
10003260:	f7fe ff39 	bl	100020d6 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10003264:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
10003268:	f013 0f04 	tst.w	r3, #4
1000326c:	d107      	bne.n	1000327e <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1000326e:	f023 0301 	bic.w	r3, r3, #1
10003272:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10003276:	6a23      	ldr	r3, [r4, #32]
10003278:	4620      	mov	r0, r4
1000327a:	4798      	blx	r3
    }
1000327c:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
1000327e:	4632      	mov	r2, r6
10003280:	4629      	mov	r1, r5
10003282:	4620      	mov	r0, r4
10003284:	f7ff ffd0 	bl	10003228 <prvReloadTimer>
10003288:	e7f5      	b.n	10003276 <prvProcessExpiredTimer+0x26>
1000328a:	bf00      	nop
1000328c:	38008bf4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, r9, fp, pc}

10003290 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
10003290:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003292:	e005      	b.n	100032a0 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10003294:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
10003296:	f04f 31ff 	mov.w	r1, #4294967295
1000329a:	6818      	ldr	r0, [r3, #0]
1000329c:	f7ff ffd8 	bl	10003250 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
100032a0:	4b05      	ldr	r3, [pc, #20]	; (100032b8 <prvSwitchTimerLists+0x28>)
100032a2:	681b      	ldr	r3, [r3, #0]
100032a4:	681a      	ldr	r2, [r3, #0]
100032a6:	2a00      	cmp	r2, #0
100032a8:	d1f4      	bne.n	10003294 <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
100032aa:	4a04      	ldr	r2, [pc, #16]	; (100032bc <prvSwitchTimerLists+0x2c>)
100032ac:	6810      	ldr	r0, [r2, #0]
100032ae:	4902      	ldr	r1, [pc, #8]	; (100032b8 <prvSwitchTimerLists+0x28>)
100032b0:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
100032b2:	6013      	str	r3, [r2, #0]
    }
100032b4:	bd08      	pop	{r3, pc}
100032b6:	bf00      	nop
100032b8:	38008bf4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, r9, fp, pc}
100032bc:	38008bf8 	stmdacc	r0, {r3, r4, r5, r6, r7, r8, r9, fp, pc}

100032c0 <prvSampleTimeNow>:
    {
100032c0:	b538      	push	{r3, r4, r5, lr}
100032c2:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
100032c4:	f7ff fb78 	bl	100029b8 <xTaskGetTickCount>
100032c8:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
100032ca:	4b07      	ldr	r3, [pc, #28]	; (100032e8 <prvSampleTimeNow+0x28>)
100032cc:	681b      	ldr	r3, [r3, #0]
100032ce:	4283      	cmp	r3, r0
100032d0:	d805      	bhi.n	100032de <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
100032d2:	2300      	movs	r3, #0
100032d4:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
100032d6:	4b04      	ldr	r3, [pc, #16]	; (100032e8 <prvSampleTimeNow+0x28>)
100032d8:	601c      	str	r4, [r3, #0]
    }
100032da:	4620      	mov	r0, r4
100032dc:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
100032de:	f7ff ffd7 	bl	10003290 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
100032e2:	2301      	movs	r3, #1
100032e4:	602b      	str	r3, [r5, #0]
100032e6:	e7f6      	b.n	100032d6 <prvSampleTimeNow+0x16>
100032e8:	38008cd4 	stmdacc	r0, {r2, r4, r6, r7, sl, fp, pc}

100032ec <prvProcessTimerOrBlockTask>:
    {
100032ec:	b570      	push	{r4, r5, r6, lr}
100032ee:	b082      	sub	sp, #8
100032f0:	4606      	mov	r6, r0
100032f2:	460c      	mov	r4, r1
        vTaskSuspendAll();
100032f4:	f7ff fb58 	bl	100029a8 <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
100032f8:	a801      	add	r0, sp, #4
100032fa:	f7ff ffe1 	bl	100032c0 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
100032fe:	9b01      	ldr	r3, [sp, #4]
10003300:	bb03      	cbnz	r3, 10003344 <prvProcessTimerOrBlockTask+0x58>
10003302:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
10003304:	b90c      	cbnz	r4, 1000330a <prvProcessTimerOrBlockTask+0x1e>
10003306:	42b0      	cmp	r0, r6
10003308:	d210      	bcs.n	1000332c <prvProcessTimerOrBlockTask+0x40>
                    if( xListWasEmpty != pdFALSE )
1000330a:	b124      	cbz	r4, 10003316 <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
1000330c:	4a0f      	ldr	r2, [pc, #60]	; (1000334c <prvProcessTimerOrBlockTask+0x60>)
1000330e:	6812      	ldr	r2, [r2, #0]
10003310:	6812      	ldr	r2, [r2, #0]
10003312:	b992      	cbnz	r2, 1000333a <prvProcessTimerOrBlockTask+0x4e>
10003314:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
10003316:	4622      	mov	r2, r4
10003318:	1b71      	subs	r1, r6, r5
1000331a:	4b0d      	ldr	r3, [pc, #52]	; (10003350 <prvProcessTimerOrBlockTask+0x64>)
1000331c:	6818      	ldr	r0, [r3, #0]
1000331e:	f7ff f8a0 	bl	10002462 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
10003322:	f7ff fc23 	bl	10002b6c <xTaskResumeAll>
10003326:	b150      	cbz	r0, 1000333e <prvProcessTimerOrBlockTask+0x52>
    }
10003328:	b002      	add	sp, #8
1000332a:	bd70      	pop	{r4, r5, r6, pc}
                    ( void ) xTaskResumeAll();
1000332c:	f7ff fc1e 	bl	10002b6c <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
10003330:	4629      	mov	r1, r5
10003332:	4630      	mov	r0, r6
10003334:	f7ff ff8c 	bl	10003250 <prvProcessExpiredTimer>
10003338:	e7f6      	b.n	10003328 <prvProcessTimerOrBlockTask+0x3c>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
1000333a:	461c      	mov	r4, r3
1000333c:	e7eb      	b.n	10003316 <prvProcessTimerOrBlockTask+0x2a>
                        taskYIELD_WITHIN_API();
1000333e:	f000 fa93 	bl	10003868 <vPortYield>
10003342:	e7f1      	b.n	10003328 <prvProcessTimerOrBlockTask+0x3c>
                ( void ) xTaskResumeAll();
10003344:	f7ff fc12 	bl	10002b6c <xTaskResumeAll>
    }
10003348:	e7ee      	b.n	10003328 <prvProcessTimerOrBlockTask+0x3c>
1000334a:	bf00      	nop
1000334c:	38008bf8 	stmdacc	r0, {r3, r4, r5, r6, r7, r8, r9, fp, pc}
10003350:	38008d3c 	stmdacc	r0, {r2, r3, r4, r5, r8, sl, fp, pc}

10003354 <prvProcessReceivedCommands>:
    {
10003354:	b530      	push	{r4, r5, lr}
10003356:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
10003358:	2300      	movs	r3, #0
1000335a:	9302      	str	r3, [sp, #8]
1000335c:	9303      	str	r3, [sp, #12]
1000335e:	9304      	str	r3, [sp, #16]
10003360:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10003362:	e002      	b.n	1000336a <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
10003364:	9b02      	ldr	r3, [sp, #8]
10003366:	2b00      	cmp	r3, #0
10003368:	da0f      	bge.n	1000338a <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
1000336a:	2200      	movs	r2, #0
1000336c:	a902      	add	r1, sp, #8
1000336e:	4b36      	ldr	r3, [pc, #216]	; (10003448 <prvProcessReceivedCommands+0xf4>)
10003370:	6818      	ldr	r0, [r3, #0]
10003372:	f7fe fffe 	bl	10002372 <xQueueReceive>
10003376:	2800      	cmp	r0, #0
10003378:	d064      	beq.n	10003444 <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
1000337a:	9b02      	ldr	r3, [sp, #8]
1000337c:	2b00      	cmp	r3, #0
1000337e:	daf1      	bge.n	10003364 <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
10003380:	9905      	ldr	r1, [sp, #20]
10003382:	9804      	ldr	r0, [sp, #16]
10003384:	9b03      	ldr	r3, [sp, #12]
10003386:	4798      	blx	r3
10003388:	e7ec      	b.n	10003364 <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
1000338a:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
1000338c:	6963      	ldr	r3, [r4, #20]
1000338e:	b113      	cbz	r3, 10003396 <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10003390:	1d20      	adds	r0, r4, #4
10003392:	f7fe fea0 	bl	100020d6 <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
10003396:	a801      	add	r0, sp, #4
10003398:	f7ff ff92 	bl	100032c0 <prvSampleTimeNow>
1000339c:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
1000339e:	9b02      	ldr	r3, [sp, #8]
100033a0:	3b01      	subs	r3, #1
100033a2:	2b08      	cmp	r3, #8
100033a4:	d8e1      	bhi.n	1000336a <prvProcessReceivedCommands+0x16>
100033a6:	e8df f003 	tbb	[pc, r3]
100033aa:	30290505 	eorcc	r0, r9, r5, lsl #10
100033ae:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
100033b2:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
100033b6:	3028      	adds	r0, #40	; 0x28
100033b8:	f043 0301 	orr.w	r3, r3, #1
100033bc:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
100033c0:	9b03      	ldr	r3, [sp, #12]
100033c2:	69a1      	ldr	r1, [r4, #24]
100033c4:	4602      	mov	r2, r0
100033c6:	4419      	add	r1, r3
100033c8:	4620      	mov	r0, r4
100033ca:	f7ff ff09 	bl	100031e0 <prvInsertTimerInActiveList>
100033ce:	2800      	cmp	r0, #0
100033d0:	d0cb      	beq.n	1000336a <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
100033d2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
100033d6:	f013 0f04 	tst.w	r3, #4
100033da:	d107      	bne.n	100033ec <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100033dc:	f023 0301 	bic.w	r3, r3, #1
100033e0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
100033e4:	6a23      	ldr	r3, [r4, #32]
100033e6:	4620      	mov	r0, r4
100033e8:	4798      	blx	r3
100033ea:	e7be      	b.n	1000336a <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
100033ec:	69a3      	ldr	r3, [r4, #24]
100033ee:	462a      	mov	r2, r5
100033f0:	9903      	ldr	r1, [sp, #12]
100033f2:	4419      	add	r1, r3
100033f4:	4620      	mov	r0, r4
100033f6:	f7ff ff17 	bl	10003228 <prvReloadTimer>
100033fa:	e7f3      	b.n	100033e4 <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100033fc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
10003400:	f023 0301 	bic.w	r3, r3, #1
10003404:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
                        break;
10003408:	e7af      	b.n	1000336a <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
1000340a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
1000340e:	f043 0301 	orr.w	r3, r3, #1
10003412:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
10003416:	9903      	ldr	r1, [sp, #12]
10003418:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
1000341a:	4603      	mov	r3, r0
1000341c:	4602      	mov	r2, r0
1000341e:	4401      	add	r1, r0
10003420:	4620      	mov	r0, r4
10003422:	f7ff fedd 	bl	100031e0 <prvInsertTimerInActiveList>
                        break;
10003426:	e7a0      	b.n	1000336a <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
10003428:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
1000342c:	f013 0f02 	tst.w	r3, #2
10003430:	d004      	beq.n	1000343c <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003432:	f023 0301 	bic.w	r3, r3, #1
10003436:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
1000343a:	e796      	b.n	1000336a <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
1000343c:	4620      	mov	r0, r4
1000343e:	f000 f937 	bl	100036b0 <vPortFree>
10003442:	e792      	b.n	1000336a <prvProcessReceivedCommands+0x16>
    }
10003444:	b007      	add	sp, #28
10003446:	bd30      	pop	{r4, r5, pc}
10003448:	38008d3c 	stmdacc	r0, {r2, r3, r4, r5, r8, sl, fp, pc}

1000344c <prvTimerTask>:
    {
1000344c:	b500      	push	{lr}
1000344e:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
10003450:	a801      	add	r0, sp, #4
10003452:	f7ff feb5 	bl	100031c0 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
10003456:	9901      	ldr	r1, [sp, #4]
10003458:	f7ff ff48 	bl	100032ec <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
1000345c:	f7ff ff7a 	bl	10003354 <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
10003460:	e7f6      	b.n	10003450 <prvTimerTask+0x4>
	...

10003464 <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
10003464:	b530      	push	{r4, r5, lr}
10003466:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
10003468:	f000 fa0a 	bl	10003880 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
1000346c:	4b0e      	ldr	r3, [pc, #56]	; (100034a8 <prvCheckForValidListAndQueue+0x44>)
1000346e:	681b      	ldr	r3, [r3, #0]
10003470:	b11b      	cbz	r3, 1000347a <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
10003472:	f000 fa13 	bl	1000389c <vPortExitCritical>
    }
10003476:	b003      	add	sp, #12
10003478:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
1000347a:	4d0c      	ldr	r5, [pc, #48]	; (100034ac <prvCheckForValidListAndQueue+0x48>)
1000347c:	4628      	mov	r0, r5
1000347e:	f7fe fe01 	bl	10002084 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
10003482:	4c0b      	ldr	r4, [pc, #44]	; (100034b0 <prvCheckForValidListAndQueue+0x4c>)
10003484:	4620      	mov	r0, r4
10003486:	f7fe fdfd 	bl	10002084 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
1000348a:	4b0a      	ldr	r3, [pc, #40]	; (100034b4 <prvCheckForValidListAndQueue+0x50>)
1000348c:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
1000348e:	4b0a      	ldr	r3, [pc, #40]	; (100034b8 <prvCheckForValidListAndQueue+0x54>)
10003490:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
10003492:	2300      	movs	r3, #0
10003494:	9300      	str	r3, [sp, #0]
10003496:	4b09      	ldr	r3, [pc, #36]	; (100034bc <prvCheckForValidListAndQueue+0x58>)
10003498:	4a09      	ldr	r2, [pc, #36]	; (100034c0 <prvCheckForValidListAndQueue+0x5c>)
1000349a:	2110      	movs	r1, #16
1000349c:	200a      	movs	r0, #10
1000349e:	f7fe ff49 	bl	10002334 <xQueueGenericCreateStatic>
100034a2:	4b01      	ldr	r3, [pc, #4]	; (100034a8 <prvCheckForValidListAndQueue+0x44>)
100034a4:	6018      	str	r0, [r3, #0]
100034a6:	e7e4      	b.n	10003472 <prvCheckForValidListAndQueue+0xe>
100034a8:	38008d3c 	stmdacc	r0, {r2, r3, r4, r5, r8, sl, fp, pc}
100034ac:	38008c9c 	stmdacc	r0, {r2, r3, r4, r7, sl, fp, pc}
100034b0:	38008cb8 	stmdacc	r0, {r3, r4, r5, r7, sl, fp, pc}
100034b4:	38008bf4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, r9, fp, pc}
100034b8:	38008bf8 	stmdacc	r0, {r3, r4, r5, r6, r7, r8, r9, fp, pc}
100034bc:	38008cd8 	stmdacc	r0, {r3, r4, r6, r7, sl, fp, pc}
100034c0:	38008bfc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}

100034c4 <xTimerCreateTimerTask>:
    {
100034c4:	b510      	push	{r4, lr}
100034c6:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
100034c8:	f7ff ffcc 	bl	10003464 <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
100034cc:	4b10      	ldr	r3, [pc, #64]	; (10003510 <xTimerCreateTimerTask+0x4c>)
100034ce:	681b      	ldr	r3, [r3, #0]
100034d0:	b1d3      	cbz	r3, 10003508 <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
100034d2:	2400      	movs	r4, #0
100034d4:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
100034d6:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
100034d8:	aa07      	add	r2, sp, #28
100034da:	a906      	add	r1, sp, #24
100034dc:	a805      	add	r0, sp, #20
100034de:	f7ff fe63 	bl	100031a8 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
100034e2:	9b05      	ldr	r3, [sp, #20]
100034e4:	9302      	str	r3, [sp, #8]
100034e6:	9b06      	ldr	r3, [sp, #24]
100034e8:	9301      	str	r3, [sp, #4]
100034ea:	2304      	movs	r3, #4
100034ec:	9300      	str	r3, [sp, #0]
100034ee:	4623      	mov	r3, r4
100034f0:	9a07      	ldr	r2, [sp, #28]
100034f2:	4908      	ldr	r1, [pc, #32]	; (10003514 <xTimerCreateTimerTask+0x50>)
100034f4:	4808      	ldr	r0, [pc, #32]	; (10003518 <xTimerCreateTimerTask+0x54>)
100034f6:	f7ff f9e3 	bl	100028c0 <xTaskCreateStatic>
100034fa:	4b08      	ldr	r3, [pc, #32]	; (1000351c <xTimerCreateTimerTask+0x58>)
100034fc:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
100034fe:	b108      	cbz	r0, 10003504 <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
10003500:	2001      	movs	r0, #1
10003502:	e002      	b.n	1000350a <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
10003504:	4620      	mov	r0, r4
10003506:	e000      	b.n	1000350a <xTimerCreateTimerTask+0x46>
10003508:	2000      	movs	r0, #0
    }
1000350a:	b008      	add	sp, #32
1000350c:	bd10      	pop	{r4, pc}
1000350e:	bf00      	nop
10003510:	38008d3c 	stmdacc	r0, {r2, r3, r4, r5, r8, sl, fp, pc}
10003514:	10006048 	andne	r6, r0, r8, asr #32
10003518:	1000344d 	andne	r3, r0, sp, asr #8
1000351c:	38008d40 	stmdacc	r0, {r6, r8, sl, fp, pc}

10003520 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
10003520:	4a10      	ldr	r2, [pc, #64]	; (10003564 <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
10003522:	f012 0f07 	tst.w	r2, #7
10003526:	d01a      	beq.n	1000355e <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
10003528:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
1000352a:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
1000352e:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
10003532:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003534:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
10003536:	480c      	ldr	r0, [pc, #48]	; (10003568 <prvHeapInit+0x48>)
10003538:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
1000353a:	2100      	movs	r1, #0
1000353c:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
1000353e:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
10003540:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003542:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
10003546:	4809      	ldr	r0, [pc, #36]	; (1000356c <prvHeapInit+0x4c>)
10003548:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
1000354a:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
1000354c:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
1000354e:	1a99      	subs	r1, r3, r2
10003550:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
10003552:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
10003554:	4b06      	ldr	r3, [pc, #24]	; (10003570 <prvHeapInit+0x50>)
10003556:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
10003558:	4b06      	ldr	r3, [pc, #24]	; (10003574 <prvHeapInit+0x54>)
1000355a:	6019      	str	r1, [r3, #0]
}
1000355c:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
1000355e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
10003562:	e7e8      	b.n	10003536 <prvHeapInit+0x16>
10003564:	38000470 	stmdacc	r0, {r4, r5, r6, sl}
10003568:	38008d58 	stmdacc	r0, {r3, r4, r6, r8, sl, fp, pc}
1000356c:	38008d44 	stmdacc	r0, {r2, r6, r8, sl, fp, pc}
10003570:	38008d4c 	stmdacc	r0, {r2, r3, r6, r8, sl, fp, pc}
10003574:	38008d48 	stmdacc	r0, {r3, r6, r8, sl, fp, pc}

10003578 <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
10003578:	4b16      	ldr	r3, [pc, #88]	; (100035d4 <prvInsertBlockIntoFreeList+0x5c>)
1000357a:	461a      	mov	r2, r3
1000357c:	681b      	ldr	r3, [r3, #0]
1000357e:	4283      	cmp	r3, r0
10003580:	d3fb      	bcc.n	1000357a <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
10003582:	6851      	ldr	r1, [r2, #4]
10003584:	eb02 0c01 	add.w	ip, r2, r1
10003588:	4584      	cmp	ip, r0
1000358a:	d009      	beq.n	100035a0 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
1000358c:	6841      	ldr	r1, [r0, #4]
1000358e:	eb00 0c01 	add.w	ip, r0, r1
10003592:	4563      	cmp	r3, ip
10003594:	d009      	beq.n	100035aa <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
10003596:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
10003598:	4290      	cmp	r0, r2
1000359a:	d019      	beq.n	100035d0 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
1000359c:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
1000359e:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
100035a0:	6840      	ldr	r0, [r0, #4]
100035a2:	4401      	add	r1, r0
100035a4:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
100035a6:	4610      	mov	r0, r2
100035a8:	e7f0      	b.n	1000358c <prvInsertBlockIntoFreeList+0x14>
{
100035aa:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
100035ac:	4c0a      	ldr	r4, [pc, #40]	; (100035d8 <prvInsertBlockIntoFreeList+0x60>)
100035ae:	6824      	ldr	r4, [r4, #0]
100035b0:	42a3      	cmp	r3, r4
100035b2:	d00b      	beq.n	100035cc <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
100035b4:	685b      	ldr	r3, [r3, #4]
100035b6:	4419      	add	r1, r3
100035b8:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
100035ba:	6813      	ldr	r3, [r2, #0]
100035bc:	681b      	ldr	r3, [r3, #0]
100035be:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
100035c0:	4290      	cmp	r0, r2
100035c2:	d000      	beq.n	100035c6 <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
100035c4:	6010      	str	r0, [r2, #0]
    }
}
100035c6:	f85d 4b04 	ldr.w	r4, [sp], #4
100035ca:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
100035cc:	6004      	str	r4, [r0, #0]
100035ce:	e7f7      	b.n	100035c0 <prvInsertBlockIntoFreeList+0x48>
100035d0:	4770      	bx	lr
100035d2:	bf00      	nop
100035d4:	38008d58 	stmdacc	r0, {r3, r4, r6, r8, sl, fp, pc}
100035d8:	38008d44 	stmdacc	r0, {r2, r6, r8, sl, fp, pc}

100035dc <pvPortMalloc>:
{
100035dc:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
100035de:	4604      	mov	r4, r0
100035e0:	b170      	cbz	r0, 10003600 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
100035e2:	f110 0f09 	cmn.w	r0, #9
100035e6:	d80a      	bhi.n	100035fe <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
100035e8:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
100035ea:	f014 0307 	ands.w	r3, r4, #7
100035ee:	d007      	beq.n	10003600 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
100035f0:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
100035f4:	43da      	mvns	r2, r3
100035f6:	42a2      	cmp	r2, r4
100035f8:	d312      	bcc.n	10003620 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
100035fa:	441c      	add	r4, r3
100035fc:	e000      	b.n	10003600 <pvPortMalloc+0x24>
            xWantedSize = 0;
100035fe:	2400      	movs	r4, #0
    vTaskSuspendAll();
10003600:	f7ff f9d2 	bl	100029a8 <vTaskSuspendAll>
        if( pxEnd == NULL )
10003604:	4b25      	ldr	r3, [pc, #148]	; (1000369c <pvPortMalloc+0xc0>)
10003606:	681b      	ldr	r3, [r3, #0]
10003608:	b163      	cbz	r3, 10003624 <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
1000360a:	2c00      	cmp	r4, #0
1000360c:	db3e      	blt.n	1000368c <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
1000360e:	2c00      	cmp	r4, #0
10003610:	d03e      	beq.n	10003690 <pvPortMalloc+0xb4>
10003612:	4b23      	ldr	r3, [pc, #140]	; (100036a0 <pvPortMalloc+0xc4>)
10003614:	681e      	ldr	r6, [r3, #0]
10003616:	42a6      	cmp	r6, r4
10003618:	d33c      	bcc.n	10003694 <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
1000361a:	4922      	ldr	r1, [pc, #136]	; (100036a4 <pvPortMalloc+0xc8>)
1000361c:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
1000361e:	e006      	b.n	1000362e <pvPortMalloc+0x52>
                    xWantedSize = 0;
10003620:	2400      	movs	r4, #0
10003622:	e7ed      	b.n	10003600 <pvPortMalloc+0x24>
            prvHeapInit();
10003624:	f7ff ff7c 	bl	10003520 <prvHeapInit>
10003628:	e7ef      	b.n	1000360a <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
1000362a:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
1000362c:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
1000362e:	685a      	ldr	r2, [r3, #4]
10003630:	42a2      	cmp	r2, r4
10003632:	d202      	bcs.n	1000363a <pvPortMalloc+0x5e>
10003634:	681a      	ldr	r2, [r3, #0]
10003636:	2a00      	cmp	r2, #0
10003638:	d1f7      	bne.n	1000362a <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
1000363a:	4a18      	ldr	r2, [pc, #96]	; (1000369c <pvPortMalloc+0xc0>)
1000363c:	6812      	ldr	r2, [r2, #0]
1000363e:	429a      	cmp	r2, r3
10003640:	d02a      	beq.n	10003698 <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
10003642:	680d      	ldr	r5, [r1, #0]
10003644:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
10003646:	681a      	ldr	r2, [r3, #0]
10003648:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
1000364a:	6858      	ldr	r0, [r3, #4]
1000364c:	1b00      	subs	r0, r0, r4
1000364e:	2810      	cmp	r0, #16
10003650:	d905      	bls.n	1000365e <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
10003652:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
10003654:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
10003656:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
10003658:	6808      	ldr	r0, [r1, #0]
1000365a:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
1000365c:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
1000365e:	6859      	ldr	r1, [r3, #4]
10003660:	1a76      	subs	r6, r6, r1
10003662:	480f      	ldr	r0, [pc, #60]	; (100036a0 <pvPortMalloc+0xc4>)
10003664:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
10003666:	4810      	ldr	r0, [pc, #64]	; (100036a8 <pvPortMalloc+0xcc>)
10003668:	6800      	ldr	r0, [r0, #0]
1000366a:	4286      	cmp	r6, r0
1000366c:	d201      	bcs.n	10003672 <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
1000366e:	480e      	ldr	r0, [pc, #56]	; (100036a8 <pvPortMalloc+0xcc>)
10003670:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
10003672:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
10003676:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
10003678:	2200      	movs	r2, #0
1000367a:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
1000367c:	4a0b      	ldr	r2, [pc, #44]	; (100036ac <pvPortMalloc+0xd0>)
1000367e:	6813      	ldr	r3, [r2, #0]
10003680:	3301      	adds	r3, #1
10003682:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
10003684:	f7ff fa72 	bl	10002b6c <xTaskResumeAll>
}
10003688:	4628      	mov	r0, r5
1000368a:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
1000368c:	2500      	movs	r5, #0
1000368e:	e7f9      	b.n	10003684 <pvPortMalloc+0xa8>
10003690:	2500      	movs	r5, #0
10003692:	e7f7      	b.n	10003684 <pvPortMalloc+0xa8>
10003694:	2500      	movs	r5, #0
10003696:	e7f5      	b.n	10003684 <pvPortMalloc+0xa8>
10003698:	2500      	movs	r5, #0
1000369a:	e7f3      	b.n	10003684 <pvPortMalloc+0xa8>
1000369c:	38008d44 	stmdacc	r0, {r2, r6, r8, sl, fp, pc}
100036a0:	38008d48 	stmdacc	r0, {r3, r6, r8, sl, fp, pc}
100036a4:	38008d58 	stmdacc	r0, {r3, r4, r6, r8, sl, fp, pc}
100036a8:	38008d4c 	stmdacc	r0, {r2, r3, r6, r8, sl, fp, pc}
100036ac:	38008d50 	stmdacc	r0, {r4, r6, r8, sl, fp, pc}

100036b0 <vPortFree>:
    if( pv != NULL )
100036b0:	b308      	cbz	r0, 100036f6 <vPortFree+0x46>
{
100036b2:	b538      	push	{r3, r4, r5, lr}
100036b4:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
100036b6:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
100036ba:	f850 3c04 	ldr.w	r3, [r0, #-4]
100036be:	2b00      	cmp	r3, #0
100036c0:	da02      	bge.n	100036c8 <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
100036c2:	f850 2c08 	ldr.w	r2, [r0, #-8]
100036c6:	b102      	cbz	r2, 100036ca <vPortFree+0x1a>
}
100036c8:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
100036ca:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
100036ce:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
100036d2:	f7ff f969 	bl	100029a8 <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
100036d6:	f854 1c04 	ldr.w	r1, [r4, #-4]
100036da:	4a07      	ldr	r2, [pc, #28]	; (100036f8 <vPortFree+0x48>)
100036dc:	6813      	ldr	r3, [r2, #0]
100036de:	440b      	add	r3, r1
100036e0:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
100036e2:	4628      	mov	r0, r5
100036e4:	f7ff ff48 	bl	10003578 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
100036e8:	4a04      	ldr	r2, [pc, #16]	; (100036fc <vPortFree+0x4c>)
100036ea:	6813      	ldr	r3, [r2, #0]
100036ec:	3301      	adds	r3, #1
100036ee:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
100036f0:	f7ff fa3c 	bl	10002b6c <xTaskResumeAll>
}
100036f4:	e7e8      	b.n	100036c8 <vPortFree+0x18>
100036f6:	4770      	bx	lr
100036f8:	38008d48 	stmdacc	r0, {r3, r6, r8, sl, fp, pc}
100036fc:	38008d54 	stmdacc	r0, {r2, r4, r6, r8, sl, fp, pc}

10003700 <prvTaskExitError>:
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
10003700:	b500      	push	{lr}
10003702:	b083      	sub	sp, #12
    volatile uint32_t ulDummy = 0UL;
10003704:	2300      	movs	r3, #0
10003706:	9301      	str	r3, [sp, #4]
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();
10003708:	f000 f980 	bl	10003a0c <ulSetInterruptMask>

    while( ulDummy == 0 )
1000370c:	9b01      	ldr	r3, [sp, #4]
1000370e:	2b00      	cmp	r3, #0
10003710:	d0fc      	beq.n	1000370c <prvTaskExitError+0xc>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
10003712:	b003      	add	sp, #12
10003714:	f85d fb04 	ldr.w	pc, [sp], #4

10003718 <vPortSuppressTicksAndSleep>:
    {
10003718:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
1000371a:	4b41      	ldr	r3, [pc, #260]	; (10003820 <vPortSuppressTicksAndSleep+0x108>)
1000371c:	681c      	ldr	r4, [r3, #0]
1000371e:	4284      	cmp	r4, r0
10003720:	d300      	bcc.n	10003724 <vPortSuppressTicksAndSleep+0xc>
10003722:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
10003724:	b672      	cpsid	i
        __asm volatile ( "dsb" );
10003726:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
1000372a:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
1000372e:	f7ff fc11 	bl	10002f54 <eTaskConfirmSleepModeStatus>
10003732:	b908      	cbnz	r0, 10003738 <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
10003734:	b662      	cpsie	i
    }
10003736:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
10003738:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000373c:	2206      	movs	r2, #6
1000373e:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
10003740:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
10003742:	b90b      	cbnz	r3, 10003748 <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
10003744:	4b37      	ldr	r3, [pc, #220]	; (10003824 <vPortSuppressTicksAndSleep+0x10c>)
10003746:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
10003748:	1e60      	subs	r0, r4, #1
1000374a:	4a36      	ldr	r2, [pc, #216]	; (10003824 <vPortSuppressTicksAndSleep+0x10c>)
1000374c:	6812      	ldr	r2, [r2, #0]
1000374e:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
10003752:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003756:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
1000375a:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
1000375e:	d008      	beq.n	10003772 <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
10003760:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003764:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
10003768:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
1000376c:	4a2d      	ldr	r2, [pc, #180]	; (10003824 <vPortSuppressTicksAndSleep+0x10c>)
1000376e:	6812      	ldr	r2, [r2, #0]
10003770:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
10003772:	4a2d      	ldr	r2, [pc, #180]	; (10003828 <vPortSuppressTicksAndSleep+0x110>)
10003774:	6812      	ldr	r2, [r2, #0]
10003776:	429a      	cmp	r2, r3
10003778:	d200      	bcs.n	1000377c <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
1000377a:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
1000377c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003780:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003782:	2100      	movs	r1, #0
10003784:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
10003786:	6911      	ldr	r1, [r2, #16]
10003788:	f041 0101 	orr.w	r1, r1, #1
1000378c:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
1000378e:	b124      	cbz	r4, 1000379a <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
10003790:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
10003794:	bf30      	wfi
                __asm volatile ( "isb" );
10003796:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
1000379a:	b662      	cpsie	i
            __asm volatile ( "dsb" );
1000379c:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
100037a0:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
100037a4:	b672      	cpsid	i
            __asm volatile ( "dsb" );
100037a6:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
100037aa:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
100037ae:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100037b2:	2106      	movs	r1, #6
100037b4:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
100037b6:	6912      	ldr	r2, [r2, #16]
100037b8:	f412 3f80 	tst.w	r2, #65536	; 0x10000
100037bc:	d01f      	beq.n	100037fe <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
100037be:	4a19      	ldr	r2, [pc, #100]	; (10003824 <vPortSuppressTicksAndSleep+0x10c>)
100037c0:	6811      	ldr	r1, [r2, #0]
100037c2:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100037c6:	6992      	ldr	r2, [r2, #24]
100037c8:	1ad3      	subs	r3, r2, r3
100037ca:	440b      	add	r3, r1
100037cc:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
100037ce:	4a16      	ldr	r2, [pc, #88]	; (10003828 <vPortSuppressTicksAndSleep+0x110>)
100037d0:	6812      	ldr	r2, [r2, #0]
100037d2:	429a      	cmp	r2, r3
100037d4:	d201      	bcs.n	100037da <vPortSuppressTicksAndSleep+0xc2>
100037d6:	4299      	cmp	r1, r3
100037d8:	d200      	bcs.n	100037dc <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
100037da:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
100037dc:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100037e0:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
100037e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100037e6:	2200      	movs	r2, #0
100037e8:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
100037ea:	2207      	movs	r2, #7
100037ec:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
100037ee:	4a0d      	ldr	r2, [pc, #52]	; (10003824 <vPortSuppressTicksAndSleep+0x10c>)
100037f0:	6812      	ldr	r2, [r2, #0]
100037f2:	3a01      	subs	r2, #1
100037f4:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
100037f6:	f7ff f8eb 	bl	100029d0 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
100037fa:	b662      	cpsie	i
    }
100037fc:	e79b      	b.n	10003736 <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
100037fe:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
10003802:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
10003804:	4a07      	ldr	r2, [pc, #28]	; (10003824 <vPortSuppressTicksAndSleep+0x10c>)
10003806:	6812      	ldr	r2, [r2, #0]
10003808:	fb02 f404 	mul.w	r4, r2, r4
1000380c:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
1000380e:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
10003812:	fb00 2202 	mla	r2, r0, r2, r2
10003816:	1b1c      	subs	r4, r3, r4
10003818:	4414      	add	r4, r2
1000381a:	614c      	str	r4, [r1, #20]
1000381c:	e7e1      	b.n	100037e2 <vPortSuppressTicksAndSleep+0xca>
1000381e:	bf00      	nop
10003820:	38008d68 	stmdacc	r0, {r3, r5, r6, r8, sl, fp, pc}
10003824:	38008d64 	stmdacc	r0, {r2, r5, r6, r8, sl, fp, pc}
10003828:	38008d60 	stmdacc	r0, {r5, r6, r8, sl, fp, pc}

1000382c <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
1000382c:	4b0b      	ldr	r3, [pc, #44]	; (1000385c <vPortSetupTimerInterrupt+0x30>)
1000382e:	f644 6220 	movw	r2, #20000	; 0x4e20
10003832:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
10003834:	4b0a      	ldr	r3, [pc, #40]	; (10003860 <vPortSetupTimerInterrupt+0x34>)
10003836:	f240 3246 	movw	r2, #838	; 0x346
1000383a:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
1000383c:	4b09      	ldr	r3, [pc, #36]	; (10003864 <vPortSetupTimerInterrupt+0x38>)
1000383e:	225e      	movs	r2, #94	; 0x5e
10003840:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG;
10003842:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003846:	2204      	movs	r2, #4
10003848:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
1000384a:	2200      	movs	r2, #0
1000384c:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
1000384e:	f644 621f 	movw	r2, #19999	; 0x4e1f
10003852:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
10003854:	2207      	movs	r2, #7
10003856:	611a      	str	r2, [r3, #16]
}
10003858:	4770      	bx	lr
1000385a:	bf00      	nop
1000385c:	38008d64 	stmdacc	r0, {r2, r5, r6, r8, sl, fp, pc}
10003860:	38008d68 	stmdacc	r0, {r3, r5, r6, r8, sl, fp, pc}
10003864:	38008d60 	stmdacc	r0, {r5, r6, r8, sl, fp, pc}

10003868 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
10003868:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000386c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10003870:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
10003874:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
10003878:	f3bf 8f6f 	isb	sy
}
1000387c:	4770      	bx	lr
	...

10003880 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
10003880:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
10003882:	f000 f8c3 	bl	10003a0c <ulSetInterruptMask>
    ulCriticalNesting++;
10003886:	4a04      	ldr	r2, [pc, #16]	; (10003898 <vPortEnterCritical+0x18>)
10003888:	6813      	ldr	r3, [r2, #0]
1000388a:	3301      	adds	r3, #1
1000388c:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
1000388e:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
10003892:	f3bf 8f6f 	isb	sy
}
10003896:	bd08      	pop	{r3, pc}
10003898:	38000010 	stmdacc	r0, {r4}

1000389c <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
1000389c:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
    ulCriticalNesting--;
1000389e:	4b05      	ldr	r3, [pc, #20]	; (100038b4 <vPortExitCritical+0x18>)
100038a0:	681a      	ldr	r2, [r3, #0]
100038a2:	3a01      	subs	r2, #1
100038a4:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
100038a6:	681b      	ldr	r3, [r3, #0]
100038a8:	b103      	cbz	r3, 100038ac <vPortExitCritical+0x10>
    {
        portENABLE_INTERRUPTS();
    }
}
100038aa:	bd08      	pop	{r3, pc}
        portENABLE_INTERRUPTS();
100038ac:	2000      	movs	r0, #0
100038ae:	f000 f8b8 	bl	10003a22 <vClearInterruptMask>
}
100038b2:	e7fa      	b.n	100038aa <vPortExitCritical+0xe>
100038b4:	38000010 	stmdacc	r0, {r4}

100038b8 <SysTick_Handler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
100038b8:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
100038ba:	f000 f8a7 	bl	10003a0c <ulSetInterruptMask>
100038be:	4604      	mov	r4, r0
    traceISR_ENTER();
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
100038c0:	f7ff f8a4 	bl	10002a0c <xTaskIncrementTick>
100038c4:	b128      	cbz	r0, 100038d2 <SysTick_Handler+0x1a>
        {
            traceISR_EXIT_TO_SCHEDULER();
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
100038c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100038ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100038ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
        else
        {
            traceISR_EXIT();
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
100038d2:	4620      	mov	r0, r4
100038d4:	f000 f8a5 	bl	10003a22 <vClearInterruptMask>
}
100038d8:	bd10      	pop	{r4, pc}

100038da <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
100038da:	b508      	push	{r3, lr}
    #endif /* configENABLE_TRUSTZONE */
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ portOFFSET_TO_PC ];
100038dc:	6983      	ldr	r3, [r0, #24]
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
100038de:	f813 3c02 	ldrb.w	r3, [r3, #-2]

    switch( ucSVCNumber )
100038e2:	2b66      	cmp	r3, #102	; 0x66
100038e4:	d000      	beq.n	100038e8 <vPortSVCHandler_C+0xe>

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
100038e6:	bd08      	pop	{r3, pc}
            vRestoreContextOfFirstTask();
100038e8:	f000 f86a 	bl	100039c0 <vRestoreContextOfFirstTask>
}
100038ec:	e7fb      	b.n	100038e6 <vPortSVCHandler_C+0xc>
	...

100038f0 <pxPortInitialiseStack>:

    StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
    {
100038f0:	b410      	push	{r4}
            #endif /* configENABLE_TRUSTZONE */
        }
        #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR. */
100038f2:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
100038f6:	f840 4c04 	str.w	r4, [r0, #-4]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC. */
100038fa:	f840 2c08 	str.w	r2, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR. */
100038fe:	4a1f      	ldr	r2, [pc, #124]	; (1000397c <pxPortInitialiseStack+0x8c>)
10003900:	f840 2c0c 	str.w	r2, [r0, #-12]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12. */
10003904:	f04f 3212 	mov.w	r2, #303174162	; 0x12121212
10003908:	f840 2c10 	str.w	r2, [r0, #-16]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3. */
1000390c:	f04f 3203 	mov.w	r2, #50529027	; 0x3030303
10003910:	f840 2c14 	str.w	r2, [r0, #-20]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2. */
10003914:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
10003918:	f840 2c18 	str.w	r2, [r0, #-24]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1. */
1000391c:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
10003920:	f840 2c1c 	str.w	r2, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0. */
10003924:	f840 3c20 	str.w	r3, [r0, #-32]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11. */
10003928:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
1000392c:	f840 3c24 	str.w	r3, [r0, #-36]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10. */
10003930:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
10003934:	f840 3c28 	str.w	r3, [r0, #-40]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09. */
10003938:	f04f 3309 	mov.w	r3, #151587081	; 0x9090909
1000393c:	f840 3c2c 	str.w	r3, [r0, #-44]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08. */
10003940:	f04f 3308 	mov.w	r3, #134744072	; 0x8080808
10003944:	f840 3c30 	str.w	r3, [r0, #-48]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07. */
10003948:	f04f 3307 	mov.w	r3, #117901063	; 0x7070707
1000394c:	f840 3c34 	str.w	r3, [r0, #-52]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06. */
10003950:	f04f 3306 	mov.w	r3, #101058054	; 0x6060606
10003954:	f840 3c38 	str.w	r3, [r0, #-56]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05. */
10003958:	f04f 3305 	mov.w	r3, #84215045	; 0x5050505
1000395c:	f840 3c3c 	str.w	r3, [r0, #-60]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04. */
10003960:	f04f 3304 	mov.w	r3, #67372036	; 0x4040404
10003964:	f840 3c40 	str.w	r3, [r0, #-64]
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN. */
10003968:	f06f 0302 	mvn.w	r3, #2
1000396c:	f840 3c44 	str.w	r3, [r0, #-68]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack;            /* Slot used to hold this task's PSPLIM value. */
10003970:	f840 1c48 	str.w	r1, [r0, #-72]
            #endif /* configENABLE_TRUSTZONE */
        }
        #endif /* portPRELOAD_REGISTERS */

        return pxTopOfStack;
    }
10003974:	3848      	subs	r0, #72	; 0x48
10003976:	f85d 4b04 	ldr.w	r4, [sp], #4
1000397a:	4770      	bx	lr
1000397c:	10003701 	andne	r3, r0, r1, lsl #14

10003980 <xPortStartScheduler>:

#endif /* configENABLE_MPU */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
10003980:	b510      	push	{r4, lr}
    }
    #endif /* #if ( ( configASSERT_DEFINED == 1 ) && ( portHAS_ARMV8M_MAIN_EXTENSION == 1 ) ) */

    /* Make PendSV and SysTick the lowest priority interrupts, and make SVCall
     * the highest priority. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
10003982:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003986:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
1000398a:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
1000398e:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
10003992:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
10003996:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
1000399a:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
1000399e:	2400      	movs	r4, #0
100039a0:	f8c3 4d1c 	str.w	r4, [r3, #3356]	; 0xd1c
    }
    #endif /* configENABLE_MPU */

    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();
100039a4:	f7ff ff42 	bl	1000382c <vPortSetupTimerInterrupt>

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
100039a8:	4b04      	ldr	r3, [pc, #16]	; (100039bc <xPortStartScheduler+0x3c>)
100039aa:	601c      	str	r4, [r3, #0]
        xSchedulerRunning = pdTRUE;
    }
    #endif /* ( ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) ) */

    /* Start the first task. */
    vStartFirstTask();
100039ac:	f000 f81e 	bl	100039ec <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
100039b0:	f7ff f9a0 	bl	10002cf4 <vTaskSwitchContext>
    prvTaskExitError();
100039b4:	f7ff fea4 	bl	10003700 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
100039b8:	4620      	mov	r0, r4
100039ba:	bd10      	pop	{r4, pc}
100039bc:	38000010 	stmdacc	r0, {r4}

100039c0 <vRestoreContextOfFirstTask>:

#else /* configENABLE_MPU */

    void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
100039c0:	4a09      	ldr	r2, [pc, #36]	; (100039e8 <vRestoreContextOfFirstTask+0x28>)
100039c2:	6811      	ldr	r1, [r2, #0]
100039c4:	6808      	ldr	r0, [r1, #0]
100039c6:	c806      	ldmia	r0!, {r1, r2}
100039c8:	f381 880b 	msr	PSPLIM, r1
100039cc:	2102      	movs	r1, #2
100039ce:	f381 8814 	msr	CONTROL, r1
100039d2:	3020      	adds	r0, #32
100039d4:	f380 8809 	msr	PSP, r0
100039d8:	f3bf 8f6f 	isb	sy
100039dc:	f04f 0000 	mov.w	r0, #0
100039e0:	f380 8811 	msr	BASEPRI, r0
100039e4:	4710      	bx	r2
            "   isb                                             \n"
            "   mov  r0, #0                                     \n"
            "   msr  basepri, r0                                \n" /* Ensure that interrupts are enabled when the first task starts. */
            "   bx   r2                                         \n" /* Finally, branch to EXC_RETURN. */
        );
    }
100039e6:	85b80000 	ldrhi	r0, [r8, #0]!
100039ea:	 	stmdami	r6, {fp, ip, sp}

100039ec <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
100039ec:	4806      	ldr	r0, [pc, #24]	; (10003a08 <vStartFirstTask+0x1c>)
100039ee:	6800      	ldr	r0, [r0, #0]
100039f0:	6800      	ldr	r0, [r0, #0]
100039f2:	f380 8808 	msr	MSP, r0
100039f6:	b662      	cpsie	i
100039f8:	b661      	cpsie	f
100039fa:	f3bf 8f4f 	dsb	sy
100039fe:	f3bf 8f6f 	isb	sy
10003a02:	df66      	svc	102	; 0x66
10003a04:	bf00      	nop
        "   isb                                             \n"
        "   svc %0                                          \n" /* System call to start the first task. */
        "   nop                                             \n"
        ::"i" ( portSVC_START_SCHEDULER ) : "memory"
    );
}
10003a06:	ed080000 	stc	0, cr0, [r8, #-0]
10003a0a:	 	vaddl.u32	q15, d15, d0

10003a0c <ulSetInterruptMask>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003a0c:	f3ef 8011 	mrs	r0, BASEPRI
10003a10:	f04f 01bf 	mov.w	r1, #191	; 0xbf
10003a14:	f381 8811 	msr	BASEPRI, r1
10003a18:	f3bf 8f4f 	dsb	sy
10003a1c:	f3bf 8f6f 	isb	sy
10003a20:	4770      	bx	lr

10003a22 <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003a22:	f380 8811 	msr	BASEPRI, r0
10003a26:	f3bf 8f4f 	dsb	sy
10003a2a:	f3bf 8f6f 	isb	sy
10003a2e:	4770      	bx	lr

10003a30 <PendSV_Handler>:

#else /* configENABLE_MPU */

    void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003a30:	f3ef 8009 	mrs	r0, PSP
10003a34:	f3ef 820b 	mrs	r2, PSPLIM
10003a38:	4673      	mov	r3, lr
10003a3a:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10003a3e:	4a0d      	ldr	r2, [pc, #52]	; (10003a74 <PendSV_Handler+0x44>)
10003a40:	6811      	ldr	r1, [r2, #0]
10003a42:	6008      	str	r0, [r1, #0]
10003a44:	f04f 00bf 	mov.w	r0, #191	; 0xbf
10003a48:	f380 8811 	msr	BASEPRI, r0
10003a4c:	f3bf 8f4f 	dsb	sy
10003a50:	f3bf 8f6f 	isb	sy
10003a54:	f7ff f94e 	bl	10002cf4 <vTaskSwitchContext>
10003a58:	f04f 0000 	mov.w	r0, #0
10003a5c:	f380 8811 	msr	BASEPRI, r0
10003a60:	4a04      	ldr	r2, [pc, #16]	; (10003a74 <PendSV_Handler+0x44>)
10003a62:	6811      	ldr	r1, [r2, #0]
10003a64:	6808      	ldr	r0, [r1, #0]
10003a66:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10003a6a:	f382 880b 	msr	PSPLIM, r2
10003a6e:	f380 8809 	msr	PSP, r0
10003a72:	4718      	bx	r3
            "   msr psplim, r2                                  \n" /* Restore the PSPLIM register value for the task. */
            "   msr psp, r0                                     \n" /* Remember the new top of stack for the task. */
            "   bx r3                                           \n"
            ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
        );
    }
10003a74:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10003a78 <SVC_Handler>:

#else /* ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) */

    void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003a78:	f01e 0f04 	tst.w	lr, #4
10003a7c:	bf0c      	ite	eq
10003a7e:	f3ef 8008 	mrseq	r0, MSP
10003a82:	f3ef 8009 	mrsne	r0, PSP
10003a86:	4901      	ldr	r1, [pc, #4]	; (10003a8c <SVC_Handler+0x14>)
10003a88:	4708      	bx	r1
            "   mrseq r0, msp                                   \n"
            "   mrsne r0, psp                                   \n"
            "   ldr r1, =vPortSVCHandler_C                      \n"
            "   bx r1                                           \n"
        );
    }
10003a8a:	38db0000 	ldmcc	fp, {}^	; <UNPREDICTABLE>
10003a8e:	 	andcs	r1, r1, r0

10003a90 <_getpid>:
10003a90:	2001      	movs	r0, #1
10003a92:	4770      	bx	lr

10003a94 <_kill>:
10003a94:	b508      	push	{r3, lr}
10003a96:	f000 f86d 	bl	10003b74 <__errno>
10003a9a:	2316      	movs	r3, #22
10003a9c:	6003      	str	r3, [r0, #0]
10003a9e:	f04f 30ff 	mov.w	r0, #4294967295
10003aa2:	bd08      	pop	{r3, pc}

10003aa4 <_exit>:
10003aa4:	b508      	push	{r3, lr}
10003aa6:	f04f 31ff 	mov.w	r1, #4294967295
10003aaa:	f7ff fff3 	bl	10003a94 <_kill>
10003aae:	e7fe      	b.n	10003aae <_exit+0xa>

10003ab0 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10003ab0:	4815      	ldr	r0, [pc, #84]	; (10003b08 <BusFault_Handler+0x4>)
                msr      psp, r0
10003ab2:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10003ab6:	4815      	ldr	r0, [pc, #84]	; (10003b0c <BusFault_Handler+0x8>)
                msr      msplim, r0
10003ab8:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10003abc:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10003ac0:	f7fc ff6c 	bl	1000099c <SystemInit>

                ldr      r4, =__copy_table_start__
10003ac4:	4c12      	ldr	r4, [pc, #72]	; (10003b10 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10003ac6:	4d13      	ldr	r5, [pc, #76]	; (10003b14 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10003ac8:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10003aca:	da0a      	bge.n	10003ae2 <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10003acc:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10003ace:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10003ad0:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10003ad2:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10003ad4:	3b04      	subs	r3, #4
                ittt     ge
10003ad6:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10003ad8:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10003ada:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10003adc:	e7fa      	bge.n	10003ad4 <Reset_Handler+0x24>

                adds     r4, #12
10003ade:	340c      	adds	r4, #12
                b        .L_loop0
10003ae0:	e7f2      	b.n	10003ac8 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10003ae2:	4b0d      	ldr	r3, [pc, #52]	; (10003b18 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10003ae4:	4c0d      	ldr	r4, [pc, #52]	; (10003b1c <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10003ae6:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10003ae8:	da09      	bge.n	10003afe <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
10003aea:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10003aec:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10003aee:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10003af0:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10003af2:	3a04      	subs	r2, #4
                itt      ge
10003af4:	bfa4      	itt	ge
                strge    r0, [r1, r2]
10003af6:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10003af8:	e7fb      	bge.n	10003af2 <Reset_Handler+0x42>

                adds     r3, #8
10003afa:	3308      	adds	r3, #8
                b        .L_loop2
10003afc:	e7f3      	b.n	10003ae6 <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10003afe:	f7fc ff31 	bl	10000964 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10003b02:	e7fe      	b.n	10003b02 <Reset_Handler+0x52>

10003b04 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10003b04:	e7fe      	b.n	10003b04 <BusFault_Handler>
10003b06:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
10003b0a:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10003b0e:	6130380f 	teqvs	r0, pc, lsl #16
                ldr      r4, =__copy_table_start__
10003b12:	613c1000 	teqvs	ip, r0
                ldr      r5, =__copy_table_end__
10003b16:	613c1000 	teqvs	ip, r0
                ldr      r3, =__zero_table_start__
10003b1a:	613c1000 	teqvs	ip, r0
                ldr      r4, =__zero_table_end__
10003b1e:	 	ldrbtlt	r1, [r2], -r0

10003b20 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
10003b20:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003b22:	4b11      	ldr	r3, [pc, #68]	; (10003b68 <stack_checked+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
10003b24:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10003b26:	4b11      	ldr	r3, [pc, #68]	; (10003b6c <stack_checked+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
10003b28:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
10003b2a:	f01e 0f04 	tst.w	lr, #4
    bne     stack_use_psp               /* if (sp != msp), jump to stack_use_psp */
10003b2e:	d10a      	bne.n	10003b46 <stack_use_psp>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
10003b30:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
10003b34:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
10003b36:	db0f      	blt.n	10003b58 <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
10003b38:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
10003b3a:	dc0d      	bgt.n	10003b58 <stack_invalid>

    push    {r4 - r11}                  /* stack value is normal, push {r4 - r11} to stack */
10003b3c:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
    mrs     r0, msp                     /* refresh r0 = sp = msp */
10003b40:	f3ef 8008 	mrs	r0, MSP
    b       stack_checked
10003b44:	e009      	b.n	10003b5a <stack_checked>

10003b46 <stack_use_psp>:

stack_use_psp:
    mrs     r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
10003b46:	f3ef 8009 	mrs	r0, PSP
    mrs     r1, psplim                  /* r1 = psplim */
10003b4a:	f3ef 810b 	mrs	r1, PSPLIM
    cmp     r0, r1                      /* compare psp and psplim */
10003b4e:	4288      	cmp	r0, r1
    blt     stack_invalid               /* psp < psplim, psp is invalid */
10003b50:	db02      	blt.n	10003b58 <stack_invalid>

    stmdb   r0!, {r4 - r11}             /* sp using psp, use stmdb push {r4 - r11} to stack */
10003b52:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
    b       stack_checked
10003b56:	e000      	b.n	10003b5a <stack_checked>

10003b58 <stack_invalid>:
    
stack_invalid:
    nop                                 /* stack value is invalid, not to process temporary */
10003b58:	bf00      	nop

10003b5a <stack_checked>:
stack_checked:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
10003b5a:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003b5c:	4a04      	ldr	r2, [pc, #16]	; (10003b70 <stack_checked+0x16>)
    dsb                                 /* wait for memory access to complete */
10003b5e:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
10003b62:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
10003b64:	4710      	bx	r2
10003b66:	85700000 	ldrbhi	r0, [r0, #-0]!
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003b6a:	85743800 	ldrbhi	r3, [r4, #-2048]!	; 0xfffff800
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10003b6e:	1ce93800 	stclne	8, cr3, [r9]
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003b72:	 	blmi	10047b7a <__copy_table_end__+0x41a3e>

10003b74 <__errno>:
10003b74:	4b01      	ldr	r3, [pc, #4]	; (10003b7c <__errno+0x8>)
10003b76:	6818      	ldr	r0, [r3, #0]
10003b78:	4770      	bx	lr
10003b7a:	bf00      	nop
10003b7c:	38000014 	stmdacc	r0, {r2, r4}

10003b80 <memcpy>:
10003b80:	4684      	mov	ip, r0
10003b82:	ea41 0300 	orr.w	r3, r1, r0
10003b86:	f013 0303 	ands.w	r3, r3, #3
10003b8a:	d149      	bne.n	10003c20 <memcpy+0xa0>
10003b8c:	3a40      	subs	r2, #64	; 0x40
10003b8e:	d323      	bcc.n	10003bd8 <memcpy+0x58>
10003b90:	680b      	ldr	r3, [r1, #0]
10003b92:	6003      	str	r3, [r0, #0]
10003b94:	684b      	ldr	r3, [r1, #4]
10003b96:	6043      	str	r3, [r0, #4]
10003b98:	688b      	ldr	r3, [r1, #8]
10003b9a:	6083      	str	r3, [r0, #8]
10003b9c:	68cb      	ldr	r3, [r1, #12]
10003b9e:	60c3      	str	r3, [r0, #12]
10003ba0:	690b      	ldr	r3, [r1, #16]
10003ba2:	6103      	str	r3, [r0, #16]
10003ba4:	694b      	ldr	r3, [r1, #20]
10003ba6:	6143      	str	r3, [r0, #20]
10003ba8:	698b      	ldr	r3, [r1, #24]
10003baa:	6183      	str	r3, [r0, #24]
10003bac:	69cb      	ldr	r3, [r1, #28]
10003bae:	61c3      	str	r3, [r0, #28]
10003bb0:	6a0b      	ldr	r3, [r1, #32]
10003bb2:	6203      	str	r3, [r0, #32]
10003bb4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
10003bb6:	6243      	str	r3, [r0, #36]	; 0x24
10003bb8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
10003bba:	6283      	str	r3, [r0, #40]	; 0x28
10003bbc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
10003bbe:	62c3      	str	r3, [r0, #44]	; 0x2c
10003bc0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
10003bc2:	6303      	str	r3, [r0, #48]	; 0x30
10003bc4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
10003bc6:	6343      	str	r3, [r0, #52]	; 0x34
10003bc8:	6b8b      	ldr	r3, [r1, #56]	; 0x38
10003bca:	6383      	str	r3, [r0, #56]	; 0x38
10003bcc:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003bce:	63c3      	str	r3, [r0, #60]	; 0x3c
10003bd0:	3040      	adds	r0, #64	; 0x40
10003bd2:	3140      	adds	r1, #64	; 0x40
10003bd4:	3a40      	subs	r2, #64	; 0x40
10003bd6:	d2db      	bcs.n	10003b90 <memcpy+0x10>
10003bd8:	3230      	adds	r2, #48	; 0x30
10003bda:	d30b      	bcc.n	10003bf4 <memcpy+0x74>
10003bdc:	680b      	ldr	r3, [r1, #0]
10003bde:	6003      	str	r3, [r0, #0]
10003be0:	684b      	ldr	r3, [r1, #4]
10003be2:	6043      	str	r3, [r0, #4]
10003be4:	688b      	ldr	r3, [r1, #8]
10003be6:	6083      	str	r3, [r0, #8]
10003be8:	68cb      	ldr	r3, [r1, #12]
10003bea:	60c3      	str	r3, [r0, #12]
10003bec:	3010      	adds	r0, #16
10003bee:	3110      	adds	r1, #16
10003bf0:	3a10      	subs	r2, #16
10003bf2:	d2f3      	bcs.n	10003bdc <memcpy+0x5c>
10003bf4:	320c      	adds	r2, #12
10003bf6:	d305      	bcc.n	10003c04 <memcpy+0x84>
10003bf8:	f851 3b04 	ldr.w	r3, [r1], #4
10003bfc:	f840 3b04 	str.w	r3, [r0], #4
10003c00:	3a04      	subs	r2, #4
10003c02:	d2f9      	bcs.n	10003bf8 <memcpy+0x78>
10003c04:	3204      	adds	r2, #4
10003c06:	d008      	beq.n	10003c1a <memcpy+0x9a>
10003c08:	07d2      	lsls	r2, r2, #31
10003c0a:	bf1c      	itt	ne
10003c0c:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003c10:	f800 3b01 	strbne.w	r3, [r0], #1
10003c14:	d301      	bcc.n	10003c1a <memcpy+0x9a>
10003c16:	880b      	ldrh	r3, [r1, #0]
10003c18:	8003      	strh	r3, [r0, #0]
10003c1a:	4660      	mov	r0, ip
10003c1c:	4770      	bx	lr
10003c1e:	bf00      	nop
10003c20:	2a08      	cmp	r2, #8
10003c22:	d313      	bcc.n	10003c4c <memcpy+0xcc>
10003c24:	078b      	lsls	r3, r1, #30
10003c26:	d0b1      	beq.n	10003b8c <memcpy+0xc>
10003c28:	f010 0303 	ands.w	r3, r0, #3
10003c2c:	d0ae      	beq.n	10003b8c <memcpy+0xc>
10003c2e:	f1c3 0304 	rsb	r3, r3, #4
10003c32:	1ad2      	subs	r2, r2, r3
10003c34:	07db      	lsls	r3, r3, #31
10003c36:	bf1c      	itt	ne
10003c38:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003c3c:	f800 3b01 	strbne.w	r3, [r0], #1
10003c40:	d3a4      	bcc.n	10003b8c <memcpy+0xc>
10003c42:	f831 3b02 	ldrh.w	r3, [r1], #2
10003c46:	f820 3b02 	strh.w	r3, [r0], #2
10003c4a:	e79f      	b.n	10003b8c <memcpy+0xc>
10003c4c:	3a04      	subs	r2, #4
10003c4e:	d3d9      	bcc.n	10003c04 <memcpy+0x84>
10003c50:	3a01      	subs	r2, #1
10003c52:	f811 3b01 	ldrb.w	r3, [r1], #1
10003c56:	f800 3b01 	strb.w	r3, [r0], #1
10003c5a:	d2f9      	bcs.n	10003c50 <memcpy+0xd0>
10003c5c:	780b      	ldrb	r3, [r1, #0]
10003c5e:	7003      	strb	r3, [r0, #0]
10003c60:	784b      	ldrb	r3, [r1, #1]
10003c62:	7043      	strb	r3, [r0, #1]
10003c64:	788b      	ldrb	r3, [r1, #2]
10003c66:	7083      	strb	r3, [r0, #2]
10003c68:	4660      	mov	r0, ip
10003c6a:	4770      	bx	lr

10003c6c <memset>:
10003c6c:	b570      	push	{r4, r5, r6, lr}
10003c6e:	0786      	lsls	r6, r0, #30
10003c70:	d048      	beq.n	10003d04 <memset+0x98>
10003c72:	1e54      	subs	r4, r2, #1
10003c74:	2a00      	cmp	r2, #0
10003c76:	d03f      	beq.n	10003cf8 <memset+0x8c>
10003c78:	b2ca      	uxtb	r2, r1
10003c7a:	4603      	mov	r3, r0
10003c7c:	e001      	b.n	10003c82 <memset+0x16>
10003c7e:	3c01      	subs	r4, #1
10003c80:	d33a      	bcc.n	10003cf8 <memset+0x8c>
10003c82:	f803 2b01 	strb.w	r2, [r3], #1
10003c86:	079d      	lsls	r5, r3, #30
10003c88:	d1f9      	bne.n	10003c7e <memset+0x12>
10003c8a:	2c03      	cmp	r4, #3
10003c8c:	d92d      	bls.n	10003cea <memset+0x7e>
10003c8e:	b2cd      	uxtb	r5, r1
10003c90:	2c0f      	cmp	r4, #15
10003c92:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
10003c96:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
10003c9a:	d936      	bls.n	10003d0a <memset+0x9e>
10003c9c:	f1a4 0c10 	sub.w	ip, r4, #16
10003ca0:	f103 0e20 	add.w	lr, r3, #32
10003ca4:	f103 0210 	add.w	r2, r3, #16
10003ca8:	f02c 060f 	bic.w	r6, ip, #15
10003cac:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
10003cb0:	44b6      	add	lr, r6
10003cb2:	e942 5504 	strd	r5, r5, [r2, #-16]
10003cb6:	e942 5502 	strd	r5, r5, [r2, #-8]
10003cba:	3210      	adds	r2, #16
10003cbc:	4572      	cmp	r2, lr
10003cbe:	d1f8      	bne.n	10003cb2 <memset+0x46>
10003cc0:	f10c 0201 	add.w	r2, ip, #1
10003cc4:	f014 0f0c 	tst.w	r4, #12
10003cc8:	f004 0c0f 	and.w	ip, r4, #15
10003ccc:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10003cd0:	d013      	beq.n	10003cfa <memset+0x8e>
10003cd2:	f1ac 0304 	sub.w	r3, ip, #4
10003cd6:	f023 0303 	bic.w	r3, r3, #3
10003cda:	3304      	adds	r3, #4
10003cdc:	4413      	add	r3, r2
10003cde:	f842 5b04 	str.w	r5, [r2], #4
10003ce2:	4293      	cmp	r3, r2
10003ce4:	d1fb      	bne.n	10003cde <memset+0x72>
10003ce6:	f00c 0403 	and.w	r4, ip, #3
10003cea:	b12c      	cbz	r4, 10003cf8 <memset+0x8c>
10003cec:	b2ca      	uxtb	r2, r1
10003cee:	441c      	add	r4, r3
10003cf0:	f803 2b01 	strb.w	r2, [r3], #1
10003cf4:	429c      	cmp	r4, r3
10003cf6:	d1fb      	bne.n	10003cf0 <memset+0x84>
10003cf8:	bd70      	pop	{r4, r5, r6, pc}
10003cfa:	4664      	mov	r4, ip
10003cfc:	4613      	mov	r3, r2
10003cfe:	2c00      	cmp	r4, #0
10003d00:	d1f4      	bne.n	10003cec <memset+0x80>
10003d02:	e7f9      	b.n	10003cf8 <memset+0x8c>
10003d04:	4603      	mov	r3, r0
10003d06:	4614      	mov	r4, r2
10003d08:	e7bf      	b.n	10003c8a <memset+0x1e>
10003d0a:	461a      	mov	r2, r3
10003d0c:	46a4      	mov	ip, r4
10003d0e:	e7e0      	b.n	10003cd2 <memset+0x66>

10003d10 <register_fini>:
10003d10:	4b02      	ldr	r3, [pc, #8]	; (10003d1c <register_fini+0xc>)
10003d12:	b113      	cbz	r3, 10003d1a <register_fini+0xa>
10003d14:	4802      	ldr	r0, [pc, #8]	; (10003d20 <register_fini+0x10>)
10003d16:	f000 b805 	b.w	10003d24 <atexit>
10003d1a:	4770      	bx	lr
10003d1c:	00000000 	andeq	r0, r0, r0
10003d20:	10003d31 	andne	r3, r0, r1, lsr sp

10003d24 <atexit>:
10003d24:	2300      	movs	r3, #0
10003d26:	4601      	mov	r1, r0
10003d28:	461a      	mov	r2, r3
10003d2a:	4618      	mov	r0, r3
10003d2c:	f000 b81a 	b.w	10003d64 <__register_exitproc>

10003d30 <__libc_fini_array>:
10003d30:	b538      	push	{r3, r4, r5, lr}
10003d32:	4b08      	ldr	r3, [pc, #32]	; (10003d54 <__libc_fini_array+0x24>)
10003d34:	4d08      	ldr	r5, [pc, #32]	; (10003d58 <__libc_fini_array+0x28>)
10003d36:	1b5b      	subs	r3, r3, r5
10003d38:	109c      	asrs	r4, r3, #2
10003d3a:	d007      	beq.n	10003d4c <__libc_fini_array+0x1c>
10003d3c:	3b04      	subs	r3, #4
10003d3e:	441d      	add	r5, r3
10003d40:	3c01      	subs	r4, #1
10003d42:	f855 3904 	ldr.w	r3, [r5], #-4
10003d46:	4798      	blx	r3
10003d48:	2c00      	cmp	r4, #0
10003d4a:	d1f9      	bne.n	10003d40 <__libc_fini_array+0x10>
10003d4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003d50:	f001 be84 	b.w	10005a5c <_fini>
10003d54:	38000450 	stmdacc	r0, {r4, r6, sl}
10003d58:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}

10003d5c <__retarget_lock_acquire_recursive>:
10003d5c:	4770      	bx	lr
10003d5e:	bf00      	nop

10003d60 <__retarget_lock_release_recursive>:
10003d60:	4770      	bx	lr
10003d62:	bf00      	nop

10003d64 <__register_exitproc>:
10003d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003d68:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003df0 <__register_exitproc+0x8c>
10003d6c:	4606      	mov	r6, r0
10003d6e:	4698      	mov	r8, r3
10003d70:	460f      	mov	r7, r1
10003d72:	f8da 0000 	ldr.w	r0, [sl]
10003d76:	4691      	mov	r9, r2
10003d78:	f7ff fff0 	bl	10003d5c <__retarget_lock_acquire_recursive>
10003d7c:	4b1b      	ldr	r3, [pc, #108]	; (10003dec <__register_exitproc+0x88>)
10003d7e:	681b      	ldr	r3, [r3, #0]
10003d80:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
10003d84:	b334      	cbz	r4, 10003dd4 <__register_exitproc+0x70>
10003d86:	6865      	ldr	r5, [r4, #4]
10003d88:	2d1f      	cmp	r5, #31
10003d8a:	dc28      	bgt.n	10003dde <__register_exitproc+0x7a>
10003d8c:	b95e      	cbnz	r6, 10003da6 <__register_exitproc+0x42>
10003d8e:	1c6b      	adds	r3, r5, #1
10003d90:	3502      	adds	r5, #2
10003d92:	f8da 0000 	ldr.w	r0, [sl]
10003d96:	6063      	str	r3, [r4, #4]
10003d98:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10003d9c:	f7ff ffe0 	bl	10003d60 <__retarget_lock_release_recursive>
10003da0:	2000      	movs	r0, #0
10003da2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003da6:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10003daa:	2301      	movs	r3, #1
10003dac:	2e02      	cmp	r6, #2
10003dae:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
10003db2:	fa03 f305 	lsl.w	r3, r3, r5
10003db6:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
10003dba:	ea42 0203 	orr.w	r2, r2, r3
10003dbe:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
10003dc2:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003dc6:	d1e2      	bne.n	10003d8e <__register_exitproc+0x2a>
10003dc8:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003dcc:	4313      	orrs	r3, r2
10003dce:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003dd2:	e7dc      	b.n	10003d8e <__register_exitproc+0x2a>
10003dd4:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003dd8:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003ddc:	e7d3      	b.n	10003d86 <__register_exitproc+0x22>
10003dde:	f8da 0000 	ldr.w	r0, [sl]
10003de2:	f7ff ffbd 	bl	10003d60 <__retarget_lock_release_recursive>
10003de6:	f04f 30ff 	mov.w	r0, #4294967295
10003dea:	e7da      	b.n	10003da2 <__register_exitproc+0x3e>
10003dec:	10006050 	andne	r6, r0, r0, asr r0
10003df0:	38000440 	stmdacc	r0, {r6, sl}

10003df4 <__aeabi_drsub>:
10003df4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10003df8:	e002      	b.n	10003e00 <__adddf3>
10003dfa:	bf00      	nop

10003dfc <__aeabi_dsub>:
10003dfc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10003e00 <__adddf3>:
10003e00:	b530      	push	{r4, r5, lr}
10003e02:	ea4f 0441 	mov.w	r4, r1, lsl #1
10003e06:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003e0a:	ea94 0f05 	teq	r4, r5
10003e0e:	bf08      	it	eq
10003e10:	ea90 0f02 	teqeq	r0, r2
10003e14:	bf1f      	itttt	ne
10003e16:	ea54 0c00 	orrsne.w	ip, r4, r0
10003e1a:	ea55 0c02 	orrsne.w	ip, r5, r2
10003e1e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10003e22:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003e26:	f000 80e2 	beq.w	10003fee <__adddf3+0x1ee>
10003e2a:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003e2e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10003e32:	bfb8      	it	lt
10003e34:	426d      	neglt	r5, r5
10003e36:	dd0c      	ble.n	10003e52 <__adddf3+0x52>
10003e38:	442c      	add	r4, r5
10003e3a:	ea80 0202 	eor.w	r2, r0, r2
10003e3e:	ea81 0303 	eor.w	r3, r1, r3
10003e42:	ea82 0000 	eor.w	r0, r2, r0
10003e46:	ea83 0101 	eor.w	r1, r3, r1
10003e4a:	ea80 0202 	eor.w	r2, r0, r2
10003e4e:	ea81 0303 	eor.w	r3, r1, r3
10003e52:	2d36      	cmp	r5, #54	; 0x36
10003e54:	bf88      	it	hi
10003e56:	bd30      	pophi	{r4, r5, pc}
10003e58:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003e5c:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003e60:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10003e64:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003e68:	d002      	beq.n	10003e70 <__adddf3+0x70>
10003e6a:	4240      	negs	r0, r0
10003e6c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003e70:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10003e74:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003e78:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003e7c:	d002      	beq.n	10003e84 <__adddf3+0x84>
10003e7e:	4252      	negs	r2, r2
10003e80:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10003e84:	ea94 0f05 	teq	r4, r5
10003e88:	f000 80a7 	beq.w	10003fda <__adddf3+0x1da>
10003e8c:	f1a4 0401 	sub.w	r4, r4, #1
10003e90:	f1d5 0e20 	rsbs	lr, r5, #32
10003e94:	db0d      	blt.n	10003eb2 <__adddf3+0xb2>
10003e96:	fa02 fc0e 	lsl.w	ip, r2, lr
10003e9a:	fa22 f205 	lsr.w	r2, r2, r5
10003e9e:	1880      	adds	r0, r0, r2
10003ea0:	f141 0100 	adc.w	r1, r1, #0
10003ea4:	fa03 f20e 	lsl.w	r2, r3, lr
10003ea8:	1880      	adds	r0, r0, r2
10003eaa:	fa43 f305 	asr.w	r3, r3, r5
10003eae:	4159      	adcs	r1, r3
10003eb0:	e00e      	b.n	10003ed0 <__adddf3+0xd0>
10003eb2:	f1a5 0520 	sub.w	r5, r5, #32
10003eb6:	f10e 0e20 	add.w	lr, lr, #32
10003eba:	2a01      	cmp	r2, #1
10003ebc:	fa03 fc0e 	lsl.w	ip, r3, lr
10003ec0:	bf28      	it	cs
10003ec2:	f04c 0c02 	orrcs.w	ip, ip, #2
10003ec6:	fa43 f305 	asr.w	r3, r3, r5
10003eca:	18c0      	adds	r0, r0, r3
10003ecc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10003ed0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003ed4:	d507      	bpl.n	10003ee6 <__adddf3+0xe6>
10003ed6:	f04f 0e00 	mov.w	lr, #0
10003eda:	f1dc 0c00 	rsbs	ip, ip, #0
10003ede:	eb7e 0000 	sbcs.w	r0, lr, r0
10003ee2:	eb6e 0101 	sbc.w	r1, lr, r1
10003ee6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10003eea:	d31b      	bcc.n	10003f24 <__adddf3+0x124>
10003eec:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10003ef0:	d30c      	bcc.n	10003f0c <__adddf3+0x10c>
10003ef2:	0849      	lsrs	r1, r1, #1
10003ef4:	ea5f 0030 	movs.w	r0, r0, rrx
10003ef8:	ea4f 0c3c 	mov.w	ip, ip, rrx
10003efc:	f104 0401 	add.w	r4, r4, #1
10003f00:	ea4f 5244 	mov.w	r2, r4, lsl #21
10003f04:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003f08:	f080 809a 	bcs.w	10004040 <__adddf3+0x240>
10003f0c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003f10:	bf08      	it	eq
10003f12:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10003f16:	f150 0000 	adcs.w	r0, r0, #0
10003f1a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003f1e:	ea41 0105 	orr.w	r1, r1, r5
10003f22:	bd30      	pop	{r4, r5, pc}
10003f24:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003f28:	4140      	adcs	r0, r0
10003f2a:	eb41 0101 	adc.w	r1, r1, r1
10003f2e:	3c01      	subs	r4, #1
10003f30:	bf28      	it	cs
10003f32:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10003f36:	d2e9      	bcs.n	10003f0c <__adddf3+0x10c>
10003f38:	f091 0f00 	teq	r1, #0
10003f3c:	bf04      	itt	eq
10003f3e:	4601      	moveq	r1, r0
10003f40:	2000      	moveq	r0, #0
10003f42:	fab1 f381 	clz	r3, r1
10003f46:	bf08      	it	eq
10003f48:	3320      	addeq	r3, #32
10003f4a:	f1a3 030b 	sub.w	r3, r3, #11
10003f4e:	f1b3 0220 	subs.w	r2, r3, #32
10003f52:	da0c      	bge.n	10003f6e <__adddf3+0x16e>
10003f54:	320c      	adds	r2, #12
10003f56:	dd08      	ble.n	10003f6a <__adddf3+0x16a>
10003f58:	f102 0c14 	add.w	ip, r2, #20
10003f5c:	f1c2 020c 	rsb	r2, r2, #12
10003f60:	fa01 f00c 	lsl.w	r0, r1, ip
10003f64:	fa21 f102 	lsr.w	r1, r1, r2
10003f68:	e00c      	b.n	10003f84 <__adddf3+0x184>
10003f6a:	f102 0214 	add.w	r2, r2, #20
10003f6e:	bfd8      	it	le
10003f70:	f1c2 0c20 	rsble	ip, r2, #32
10003f74:	fa01 f102 	lsl.w	r1, r1, r2
10003f78:	fa20 fc0c 	lsr.w	ip, r0, ip
10003f7c:	bfdc      	itt	le
10003f7e:	ea41 010c 	orrle.w	r1, r1, ip
10003f82:	4090      	lslle	r0, r2
10003f84:	1ae4      	subs	r4, r4, r3
10003f86:	bfa2      	ittt	ge
10003f88:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003f8c:	4329      	orrge	r1, r5
10003f8e:	bd30      	popge	{r4, r5, pc}
10003f90:	ea6f 0404 	mvn.w	r4, r4
10003f94:	3c1f      	subs	r4, #31
10003f96:	da1c      	bge.n	10003fd2 <__adddf3+0x1d2>
10003f98:	340c      	adds	r4, #12
10003f9a:	dc0e      	bgt.n	10003fba <__adddf3+0x1ba>
10003f9c:	f104 0414 	add.w	r4, r4, #20
10003fa0:	f1c4 0220 	rsb	r2, r4, #32
10003fa4:	fa20 f004 	lsr.w	r0, r0, r4
10003fa8:	fa01 f302 	lsl.w	r3, r1, r2
10003fac:	ea40 0003 	orr.w	r0, r0, r3
10003fb0:	fa21 f304 	lsr.w	r3, r1, r4
10003fb4:	ea45 0103 	orr.w	r1, r5, r3
10003fb8:	bd30      	pop	{r4, r5, pc}
10003fba:	f1c4 040c 	rsb	r4, r4, #12
10003fbe:	f1c4 0220 	rsb	r2, r4, #32
10003fc2:	fa20 f002 	lsr.w	r0, r0, r2
10003fc6:	fa01 f304 	lsl.w	r3, r1, r4
10003fca:	ea40 0003 	orr.w	r0, r0, r3
10003fce:	4629      	mov	r1, r5
10003fd0:	bd30      	pop	{r4, r5, pc}
10003fd2:	fa21 f004 	lsr.w	r0, r1, r4
10003fd6:	4629      	mov	r1, r5
10003fd8:	bd30      	pop	{r4, r5, pc}
10003fda:	f094 0f00 	teq	r4, #0
10003fde:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10003fe2:	bf06      	itte	eq
10003fe4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10003fe8:	3401      	addeq	r4, #1
10003fea:	3d01      	subne	r5, #1
10003fec:	e74e      	b.n	10003e8c <__adddf3+0x8c>
10003fee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003ff2:	bf18      	it	ne
10003ff4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003ff8:	d029      	beq.n	1000404e <__adddf3+0x24e>
10003ffa:	ea94 0f05 	teq	r4, r5
10003ffe:	bf08      	it	eq
10004000:	ea90 0f02 	teqeq	r0, r2
10004004:	d005      	beq.n	10004012 <__adddf3+0x212>
10004006:	ea54 0c00 	orrs.w	ip, r4, r0
1000400a:	bf04      	itt	eq
1000400c:	4619      	moveq	r1, r3
1000400e:	4610      	moveq	r0, r2
10004010:	bd30      	pop	{r4, r5, pc}
10004012:	ea91 0f03 	teq	r1, r3
10004016:	bf1e      	ittt	ne
10004018:	2100      	movne	r1, #0
1000401a:	2000      	movne	r0, #0
1000401c:	bd30      	popne	{r4, r5, pc}
1000401e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10004022:	d105      	bne.n	10004030 <__adddf3+0x230>
10004024:	0040      	lsls	r0, r0, #1
10004026:	4149      	adcs	r1, r1
10004028:	bf28      	it	cs
1000402a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1000402e:	bd30      	pop	{r4, r5, pc}
10004030:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10004034:	bf3c      	itt	cc
10004036:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1000403a:	bd30      	popcc	{r4, r5, pc}
1000403c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10004040:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10004044:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10004048:	f04f 0000 	mov.w	r0, #0
1000404c:	bd30      	pop	{r4, r5, pc}
1000404e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10004052:	bf1a      	itte	ne
10004054:	4619      	movne	r1, r3
10004056:	4610      	movne	r0, r2
10004058:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1000405c:	bf1c      	itt	ne
1000405e:	460b      	movne	r3, r1
10004060:	4602      	movne	r2, r0
10004062:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10004066:	bf06      	itte	eq
10004068:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1000406c:	ea91 0f03 	teqeq	r1, r3
10004070:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10004074:	bd30      	pop	{r4, r5, pc}
10004076:	bf00      	nop

10004078 <__aeabi_ui2d>:
10004078:	f090 0f00 	teq	r0, #0
1000407c:	bf04      	itt	eq
1000407e:	2100      	moveq	r1, #0
10004080:	4770      	bxeq	lr
10004082:	b530      	push	{r4, r5, lr}
10004084:	f44f 6480 	mov.w	r4, #1024	; 0x400
10004088:	f104 0432 	add.w	r4, r4, #50	; 0x32
1000408c:	f04f 0500 	mov.w	r5, #0
10004090:	f04f 0100 	mov.w	r1, #0
10004094:	e750      	b.n	10003f38 <__adddf3+0x138>
10004096:	bf00      	nop

10004098 <__aeabi_i2d>:
10004098:	f090 0f00 	teq	r0, #0
1000409c:	bf04      	itt	eq
1000409e:	2100      	moveq	r1, #0
100040a0:	4770      	bxeq	lr
100040a2:	b530      	push	{r4, r5, lr}
100040a4:	f44f 6480 	mov.w	r4, #1024	; 0x400
100040a8:	f104 0432 	add.w	r4, r4, #50	; 0x32
100040ac:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
100040b0:	bf48      	it	mi
100040b2:	4240      	negmi	r0, r0
100040b4:	f04f 0100 	mov.w	r1, #0
100040b8:	e73e      	b.n	10003f38 <__adddf3+0x138>
100040ba:	bf00      	nop

100040bc <__aeabi_f2d>:
100040bc:	0042      	lsls	r2, r0, #1
100040be:	ea4f 01e2 	mov.w	r1, r2, asr #3
100040c2:	ea4f 0131 	mov.w	r1, r1, rrx
100040c6:	ea4f 7002 	mov.w	r0, r2, lsl #28
100040ca:	bf1f      	itttt	ne
100040cc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
100040d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
100040d4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
100040d8:	4770      	bxne	lr
100040da:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
100040de:	bf08      	it	eq
100040e0:	4770      	bxeq	lr
100040e2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
100040e6:	bf04      	itt	eq
100040e8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
100040ec:	4770      	bxeq	lr
100040ee:	b530      	push	{r4, r5, lr}
100040f0:	f44f 7460 	mov.w	r4, #896	; 0x380
100040f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100040f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
100040fc:	e71c      	b.n	10003f38 <__adddf3+0x138>
100040fe:	bf00      	nop

10004100 <__aeabi_ul2d>:
10004100:	ea50 0201 	orrs.w	r2, r0, r1
10004104:	bf08      	it	eq
10004106:	4770      	bxeq	lr
10004108:	b530      	push	{r4, r5, lr}
1000410a:	f04f 0500 	mov.w	r5, #0
1000410e:	e00a      	b.n	10004126 <__aeabi_l2d+0x16>

10004110 <__aeabi_l2d>:
10004110:	ea50 0201 	orrs.w	r2, r0, r1
10004114:	bf08      	it	eq
10004116:	4770      	bxeq	lr
10004118:	b530      	push	{r4, r5, lr}
1000411a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1000411e:	d502      	bpl.n	10004126 <__aeabi_l2d+0x16>
10004120:	4240      	negs	r0, r0
10004122:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10004126:	f44f 6480 	mov.w	r4, #1024	; 0x400
1000412a:	f104 0432 	add.w	r4, r4, #50	; 0x32
1000412e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10004132:	f43f aed8 	beq.w	10003ee6 <__adddf3+0xe6>
10004136:	f04f 0203 	mov.w	r2, #3
1000413a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1000413e:	bf18      	it	ne
10004140:	3203      	addne	r2, #3
10004142:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10004146:	bf18      	it	ne
10004148:	3203      	addne	r2, #3
1000414a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1000414e:	f1c2 0320 	rsb	r3, r2, #32
10004152:	fa00 fc03 	lsl.w	ip, r0, r3
10004156:	fa20 f002 	lsr.w	r0, r0, r2
1000415a:	fa01 fe03 	lsl.w	lr, r1, r3
1000415e:	ea40 000e 	orr.w	r0, r0, lr
10004162:	fa21 f102 	lsr.w	r1, r1, r2
10004166:	4414      	add	r4, r2
10004168:	e6bd      	b.n	10003ee6 <__adddf3+0xe6>
1000416a:	bf00      	nop

1000416c <__aeabi_dmul>:
1000416c:	b570      	push	{r4, r5, r6, lr}
1000416e:	f04f 0cff 	mov.w	ip, #255	; 0xff
10004172:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10004176:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1000417a:	bf1d      	ittte	ne
1000417c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10004180:	ea94 0f0c 	teqne	r4, ip
10004184:	ea95 0f0c 	teqne	r5, ip
10004188:	f000 f8de 	bleq	10004348 <__aeabi_dmul+0x1dc>
1000418c:	442c      	add	r4, r5
1000418e:	ea81 0603 	eor.w	r6, r1, r3
10004192:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10004196:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1000419a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1000419e:	bf18      	it	ne
100041a0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100041a4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100041a8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
100041ac:	d038      	beq.n	10004220 <__aeabi_dmul+0xb4>
100041ae:	fba0 ce02 	umull	ip, lr, r0, r2
100041b2:	f04f 0500 	mov.w	r5, #0
100041b6:	fbe1 e502 	umlal	lr, r5, r1, r2
100041ba:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
100041be:	fbe0 e503 	umlal	lr, r5, r0, r3
100041c2:	f04f 0600 	mov.w	r6, #0
100041c6:	fbe1 5603 	umlal	r5, r6, r1, r3
100041ca:	f09c 0f00 	teq	ip, #0
100041ce:	bf18      	it	ne
100041d0:	f04e 0e01 	orrne.w	lr, lr, #1
100041d4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
100041d8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
100041dc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
100041e0:	d204      	bcs.n	100041ec <__aeabi_dmul+0x80>
100041e2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
100041e6:	416d      	adcs	r5, r5
100041e8:	eb46 0606 	adc.w	r6, r6, r6
100041ec:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
100041f0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
100041f4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
100041f8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
100041fc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10004200:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10004204:	bf88      	it	hi
10004206:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1000420a:	d81e      	bhi.n	1000424a <__aeabi_dmul+0xde>
1000420c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10004210:	bf08      	it	eq
10004212:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10004216:	f150 0000 	adcs.w	r0, r0, #0
1000421a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1000421e:	bd70      	pop	{r4, r5, r6, pc}
10004220:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10004224:	ea46 0101 	orr.w	r1, r6, r1
10004228:	ea40 0002 	orr.w	r0, r0, r2
1000422c:	ea81 0103 	eor.w	r1, r1, r3
10004230:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10004234:	bfc2      	ittt	gt
10004236:	ebd4 050c 	rsbsgt	r5, r4, ip
1000423a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1000423e:	bd70      	popgt	{r4, r5, r6, pc}
10004240:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10004244:	f04f 0e00 	mov.w	lr, #0
10004248:	3c01      	subs	r4, #1
1000424a:	f300 80ab 	bgt.w	100043a4 <__aeabi_dmul+0x238>
1000424e:	f114 0f36 	cmn.w	r4, #54	; 0x36
10004252:	bfde      	ittt	le
10004254:	2000      	movle	r0, #0
10004256:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
1000425a:	bd70      	pople	{r4, r5, r6, pc}
1000425c:	f1c4 0400 	rsb	r4, r4, #0
10004260:	3c20      	subs	r4, #32
10004262:	da35      	bge.n	100042d0 <__aeabi_dmul+0x164>
10004264:	340c      	adds	r4, #12
10004266:	dc1b      	bgt.n	100042a0 <__aeabi_dmul+0x134>
10004268:	f104 0414 	add.w	r4, r4, #20
1000426c:	f1c4 0520 	rsb	r5, r4, #32
10004270:	fa00 f305 	lsl.w	r3, r0, r5
10004274:	fa20 f004 	lsr.w	r0, r0, r4
10004278:	fa01 f205 	lsl.w	r2, r1, r5
1000427c:	ea40 0002 	orr.w	r0, r0, r2
10004280:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
10004284:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10004288:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1000428c:	fa21 f604 	lsr.w	r6, r1, r4
10004290:	eb42 0106 	adc.w	r1, r2, r6
10004294:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10004298:	bf08      	it	eq
1000429a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1000429e:	bd70      	pop	{r4, r5, r6, pc}
100042a0:	f1c4 040c 	rsb	r4, r4, #12
100042a4:	f1c4 0520 	rsb	r5, r4, #32
100042a8:	fa00 f304 	lsl.w	r3, r0, r4
100042ac:	fa20 f005 	lsr.w	r0, r0, r5
100042b0:	fa01 f204 	lsl.w	r2, r1, r4
100042b4:	ea40 0002 	orr.w	r0, r0, r2
100042b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100042bc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100042c0:	f141 0100 	adc.w	r1, r1, #0
100042c4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100042c8:	bf08      	it	eq
100042ca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100042ce:	bd70      	pop	{r4, r5, r6, pc}
100042d0:	f1c4 0520 	rsb	r5, r4, #32
100042d4:	fa00 f205 	lsl.w	r2, r0, r5
100042d8:	ea4e 0e02 	orr.w	lr, lr, r2
100042dc:	fa20 f304 	lsr.w	r3, r0, r4
100042e0:	fa01 f205 	lsl.w	r2, r1, r5
100042e4:	ea43 0302 	orr.w	r3, r3, r2
100042e8:	fa21 f004 	lsr.w	r0, r1, r4
100042ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100042f0:	fa21 f204 	lsr.w	r2, r1, r4
100042f4:	ea20 0002 	bic.w	r0, r0, r2
100042f8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
100042fc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10004300:	bf08      	it	eq
10004302:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004306:	bd70      	pop	{r4, r5, r6, pc}
10004308:	f094 0f00 	teq	r4, #0
1000430c:	d10f      	bne.n	1000432e <__aeabi_dmul+0x1c2>
1000430e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
10004312:	0040      	lsls	r0, r0, #1
10004314:	eb41 0101 	adc.w	r1, r1, r1
10004318:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1000431c:	bf08      	it	eq
1000431e:	3c01      	subeq	r4, #1
10004320:	d0f7      	beq.n	10004312 <__aeabi_dmul+0x1a6>
10004322:	ea41 0106 	orr.w	r1, r1, r6
10004326:	f095 0f00 	teq	r5, #0
1000432a:	bf18      	it	ne
1000432c:	4770      	bxne	lr
1000432e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
10004332:	0052      	lsls	r2, r2, #1
10004334:	eb43 0303 	adc.w	r3, r3, r3
10004338:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
1000433c:	bf08      	it	eq
1000433e:	3d01      	subeq	r5, #1
10004340:	d0f7      	beq.n	10004332 <__aeabi_dmul+0x1c6>
10004342:	ea43 0306 	orr.w	r3, r3, r6
10004346:	4770      	bx	lr
10004348:	ea94 0f0c 	teq	r4, ip
1000434c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10004350:	bf18      	it	ne
10004352:	ea95 0f0c 	teqne	r5, ip
10004356:	d00c      	beq.n	10004372 <__aeabi_dmul+0x206>
10004358:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000435c:	bf18      	it	ne
1000435e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004362:	d1d1      	bne.n	10004308 <__aeabi_dmul+0x19c>
10004364:	ea81 0103 	eor.w	r1, r1, r3
10004368:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1000436c:	f04f 0000 	mov.w	r0, #0
10004370:	bd70      	pop	{r4, r5, r6, pc}
10004372:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004376:	bf06      	itte	eq
10004378:	4610      	moveq	r0, r2
1000437a:	4619      	moveq	r1, r3
1000437c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004380:	d019      	beq.n	100043b6 <__aeabi_dmul+0x24a>
10004382:	ea94 0f0c 	teq	r4, ip
10004386:	d102      	bne.n	1000438e <__aeabi_dmul+0x222>
10004388:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1000438c:	d113      	bne.n	100043b6 <__aeabi_dmul+0x24a>
1000438e:	ea95 0f0c 	teq	r5, ip
10004392:	d105      	bne.n	100043a0 <__aeabi_dmul+0x234>
10004394:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10004398:	bf1c      	itt	ne
1000439a:	4610      	movne	r0, r2
1000439c:	4619      	movne	r1, r3
1000439e:	d10a      	bne.n	100043b6 <__aeabi_dmul+0x24a>
100043a0:	ea81 0103 	eor.w	r1, r1, r3
100043a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100043a8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100043ac:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
100043b0:	f04f 0000 	mov.w	r0, #0
100043b4:	bd70      	pop	{r4, r5, r6, pc}
100043b6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100043ba:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
100043be:	bd70      	pop	{r4, r5, r6, pc}

100043c0 <__aeabi_ddiv>:
100043c0:	b570      	push	{r4, r5, r6, lr}
100043c2:	f04f 0cff 	mov.w	ip, #255	; 0xff
100043c6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100043ca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100043ce:	bf1d      	ittte	ne
100043d0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100043d4:	ea94 0f0c 	teqne	r4, ip
100043d8:	ea95 0f0c 	teqne	r5, ip
100043dc:	f000 f8a7 	bleq	1000452e <__aeabi_ddiv+0x16e>
100043e0:	eba4 0405 	sub.w	r4, r4, r5
100043e4:	ea81 0e03 	eor.w	lr, r1, r3
100043e8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100043ec:	ea4f 3101 	mov.w	r1, r1, lsl #12
100043f0:	f000 8088 	beq.w	10004504 <__aeabi_ddiv+0x144>
100043f4:	ea4f 3303 	mov.w	r3, r3, lsl #12
100043f8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
100043fc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10004400:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10004404:	ea4f 2202 	mov.w	r2, r2, lsl #8
10004408:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1000440c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10004410:	ea4f 2600 	mov.w	r6, r0, lsl #8
10004414:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10004418:	429d      	cmp	r5, r3
1000441a:	bf08      	it	eq
1000441c:	4296      	cmpeq	r6, r2
1000441e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
10004422:	f504 7440 	add.w	r4, r4, #768	; 0x300
10004426:	d202      	bcs.n	1000442e <__aeabi_ddiv+0x6e>
10004428:	085b      	lsrs	r3, r3, #1
1000442a:	ea4f 0232 	mov.w	r2, r2, rrx
1000442e:	1ab6      	subs	r6, r6, r2
10004430:	eb65 0503 	sbc.w	r5, r5, r3
10004434:	085b      	lsrs	r3, r3, #1
10004436:	ea4f 0232 	mov.w	r2, r2, rrx
1000443a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1000443e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
10004442:	ebb6 0e02 	subs.w	lr, r6, r2
10004446:	eb75 0e03 	sbcs.w	lr, r5, r3
1000444a:	bf22      	ittt	cs
1000444c:	1ab6      	subcs	r6, r6, r2
1000444e:	4675      	movcs	r5, lr
10004450:	ea40 000c 	orrcs.w	r0, r0, ip
10004454:	085b      	lsrs	r3, r3, #1
10004456:	ea4f 0232 	mov.w	r2, r2, rrx
1000445a:	ebb6 0e02 	subs.w	lr, r6, r2
1000445e:	eb75 0e03 	sbcs.w	lr, r5, r3
10004462:	bf22      	ittt	cs
10004464:	1ab6      	subcs	r6, r6, r2
10004466:	4675      	movcs	r5, lr
10004468:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1000446c:	085b      	lsrs	r3, r3, #1
1000446e:	ea4f 0232 	mov.w	r2, r2, rrx
10004472:	ebb6 0e02 	subs.w	lr, r6, r2
10004476:	eb75 0e03 	sbcs.w	lr, r5, r3
1000447a:	bf22      	ittt	cs
1000447c:	1ab6      	subcs	r6, r6, r2
1000447e:	4675      	movcs	r5, lr
10004480:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10004484:	085b      	lsrs	r3, r3, #1
10004486:	ea4f 0232 	mov.w	r2, r2, rrx
1000448a:	ebb6 0e02 	subs.w	lr, r6, r2
1000448e:	eb75 0e03 	sbcs.w	lr, r5, r3
10004492:	bf22      	ittt	cs
10004494:	1ab6      	subcs	r6, r6, r2
10004496:	4675      	movcs	r5, lr
10004498:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1000449c:	ea55 0e06 	orrs.w	lr, r5, r6
100044a0:	d018      	beq.n	100044d4 <__aeabi_ddiv+0x114>
100044a2:	ea4f 1505 	mov.w	r5, r5, lsl #4
100044a6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
100044aa:	ea4f 1606 	mov.w	r6, r6, lsl #4
100044ae:	ea4f 03c3 	mov.w	r3, r3, lsl #3
100044b2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
100044b6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100044ba:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100044be:	d1c0      	bne.n	10004442 <__aeabi_ddiv+0x82>
100044c0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100044c4:	d10b      	bne.n	100044de <__aeabi_ddiv+0x11e>
100044c6:	ea41 0100 	orr.w	r1, r1, r0
100044ca:	f04f 0000 	mov.w	r0, #0
100044ce:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
100044d2:	e7b6      	b.n	10004442 <__aeabi_ddiv+0x82>
100044d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100044d8:	bf04      	itt	eq
100044da:	4301      	orreq	r1, r0
100044dc:	2000      	moveq	r0, #0
100044de:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100044e2:	bf88      	it	hi
100044e4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
100044e8:	f63f aeaf 	bhi.w	1000424a <__aeabi_dmul+0xde>
100044ec:	ebb5 0c03 	subs.w	ip, r5, r3
100044f0:	bf04      	itt	eq
100044f2:	ebb6 0c02 	subseq.w	ip, r6, r2
100044f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100044fa:	f150 0000 	adcs.w	r0, r0, #0
100044fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004502:	bd70      	pop	{r4, r5, r6, pc}
10004504:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
10004508:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1000450c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10004510:	bfc2      	ittt	gt
10004512:	ebd4 050c 	rsbsgt	r5, r4, ip
10004516:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1000451a:	bd70      	popgt	{r4, r5, r6, pc}
1000451c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10004520:	f04f 0e00 	mov.w	lr, #0
10004524:	3c01      	subs	r4, #1
10004526:	e690      	b.n	1000424a <__aeabi_dmul+0xde>
10004528:	ea45 0e06 	orr.w	lr, r5, r6
1000452c:	e68d      	b.n	1000424a <__aeabi_dmul+0xde>
1000452e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10004532:	ea94 0f0c 	teq	r4, ip
10004536:	bf08      	it	eq
10004538:	ea95 0f0c 	teqeq	r5, ip
1000453c:	f43f af3b 	beq.w	100043b6 <__aeabi_dmul+0x24a>
10004540:	ea94 0f0c 	teq	r4, ip
10004544:	d10a      	bne.n	1000455c <__aeabi_ddiv+0x19c>
10004546:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1000454a:	f47f af34 	bne.w	100043b6 <__aeabi_dmul+0x24a>
1000454e:	ea95 0f0c 	teq	r5, ip
10004552:	f47f af25 	bne.w	100043a0 <__aeabi_dmul+0x234>
10004556:	4610      	mov	r0, r2
10004558:	4619      	mov	r1, r3
1000455a:	e72c      	b.n	100043b6 <__aeabi_dmul+0x24a>
1000455c:	ea95 0f0c 	teq	r5, ip
10004560:	d106      	bne.n	10004570 <__aeabi_ddiv+0x1b0>
10004562:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10004566:	f43f aefd 	beq.w	10004364 <__aeabi_dmul+0x1f8>
1000456a:	4610      	mov	r0, r2
1000456c:	4619      	mov	r1, r3
1000456e:	e722      	b.n	100043b6 <__aeabi_dmul+0x24a>
10004570:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004574:	bf18      	it	ne
10004576:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000457a:	f47f aec5 	bne.w	10004308 <__aeabi_dmul+0x19c>
1000457e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10004582:	f47f af0d 	bne.w	100043a0 <__aeabi_dmul+0x234>
10004586:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1000458a:	f47f aeeb 	bne.w	10004364 <__aeabi_dmul+0x1f8>
1000458e:	e712      	b.n	100043b6 <__aeabi_dmul+0x24a>

10004590 <__gedf2>:
10004590:	f04f 3cff 	mov.w	ip, #4294967295
10004594:	e006      	b.n	100045a4 <__cmpdf2+0x4>
10004596:	bf00      	nop

10004598 <__ledf2>:
10004598:	f04f 0c01 	mov.w	ip, #1
1000459c:	e002      	b.n	100045a4 <__cmpdf2+0x4>
1000459e:	bf00      	nop

100045a0 <__cmpdf2>:
100045a0:	f04f 0c01 	mov.w	ip, #1
100045a4:	f84d cd04 	str.w	ip, [sp, #-4]!
100045a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100045ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100045b0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100045b4:	bf18      	it	ne
100045b6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100045ba:	d01b      	beq.n	100045f4 <__cmpdf2+0x54>
100045bc:	b001      	add	sp, #4
100045be:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100045c2:	bf0c      	ite	eq
100045c4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
100045c8:	ea91 0f03 	teqne	r1, r3
100045cc:	bf02      	ittt	eq
100045ce:	ea90 0f02 	teqeq	r0, r2
100045d2:	2000      	moveq	r0, #0
100045d4:	4770      	bxeq	lr
100045d6:	f110 0f00 	cmn.w	r0, #0
100045da:	ea91 0f03 	teq	r1, r3
100045de:	bf58      	it	pl
100045e0:	4299      	cmppl	r1, r3
100045e2:	bf08      	it	eq
100045e4:	4290      	cmpeq	r0, r2
100045e6:	bf2c      	ite	cs
100045e8:	17d8      	asrcs	r0, r3, #31
100045ea:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
100045ee:	f040 0001 	orr.w	r0, r0, #1
100045f2:	4770      	bx	lr
100045f4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100045f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100045fc:	d102      	bne.n	10004604 <__cmpdf2+0x64>
100045fe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10004602:	d107      	bne.n	10004614 <__cmpdf2+0x74>
10004604:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10004608:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1000460c:	d1d6      	bne.n	100045bc <__cmpdf2+0x1c>
1000460e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10004612:	d0d3      	beq.n	100045bc <__cmpdf2+0x1c>
10004614:	f85d 0b04 	ldr.w	r0, [sp], #4
10004618:	4770      	bx	lr
1000461a:	bf00      	nop

1000461c <__aeabi_cdrcmple>:
1000461c:	4684      	mov	ip, r0
1000461e:	4610      	mov	r0, r2
10004620:	4662      	mov	r2, ip
10004622:	468c      	mov	ip, r1
10004624:	4619      	mov	r1, r3
10004626:	4663      	mov	r3, ip
10004628:	e000      	b.n	1000462c <__aeabi_cdcmpeq>
1000462a:	bf00      	nop

1000462c <__aeabi_cdcmpeq>:
1000462c:	b501      	push	{r0, lr}
1000462e:	f7ff ffb7 	bl	100045a0 <__cmpdf2>
10004632:	2800      	cmp	r0, #0
10004634:	bf48      	it	mi
10004636:	f110 0f00 	cmnmi.w	r0, #0
1000463a:	bd01      	pop	{r0, pc}

1000463c <__aeabi_dcmpeq>:
1000463c:	f84d ed08 	str.w	lr, [sp, #-8]!
10004640:	f7ff fff4 	bl	1000462c <__aeabi_cdcmpeq>
10004644:	bf0c      	ite	eq
10004646:	2001      	moveq	r0, #1
10004648:	2000      	movne	r0, #0
1000464a:	f85d fb08 	ldr.w	pc, [sp], #8
1000464e:	bf00      	nop

10004650 <__aeabi_dcmplt>:
10004650:	f84d ed08 	str.w	lr, [sp, #-8]!
10004654:	f7ff ffea 	bl	1000462c <__aeabi_cdcmpeq>
10004658:	bf34      	ite	cc
1000465a:	2001      	movcc	r0, #1
1000465c:	2000      	movcs	r0, #0
1000465e:	f85d fb08 	ldr.w	pc, [sp], #8
10004662:	bf00      	nop

10004664 <__aeabi_dcmple>:
10004664:	f84d ed08 	str.w	lr, [sp, #-8]!
10004668:	f7ff ffe0 	bl	1000462c <__aeabi_cdcmpeq>
1000466c:	bf94      	ite	ls
1000466e:	2001      	movls	r0, #1
10004670:	2000      	movhi	r0, #0
10004672:	f85d fb08 	ldr.w	pc, [sp], #8
10004676:	bf00      	nop

10004678 <__aeabi_dcmpge>:
10004678:	f84d ed08 	str.w	lr, [sp, #-8]!
1000467c:	f7ff ffce 	bl	1000461c <__aeabi_cdrcmple>
10004680:	bf94      	ite	ls
10004682:	2001      	movls	r0, #1
10004684:	2000      	movhi	r0, #0
10004686:	f85d fb08 	ldr.w	pc, [sp], #8
1000468a:	bf00      	nop

1000468c <__aeabi_dcmpgt>:
1000468c:	f84d ed08 	str.w	lr, [sp, #-8]!
10004690:	f7ff ffc4 	bl	1000461c <__aeabi_cdrcmple>
10004694:	bf34      	ite	cc
10004696:	2001      	movcc	r0, #1
10004698:	2000      	movcs	r0, #0
1000469a:	f85d fb08 	ldr.w	pc, [sp], #8
1000469e:	bf00      	nop

100046a0 <__aeabi_d2iz>:
100046a0:	ea4f 0241 	mov.w	r2, r1, lsl #1
100046a4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100046a8:	d215      	bcs.n	100046d6 <__aeabi_d2iz+0x36>
100046aa:	d511      	bpl.n	100046d0 <__aeabi_d2iz+0x30>
100046ac:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100046b0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100046b4:	d912      	bls.n	100046dc <__aeabi_d2iz+0x3c>
100046b6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100046ba:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100046be:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100046c2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
100046c6:	fa23 f002 	lsr.w	r0, r3, r2
100046ca:	bf18      	it	ne
100046cc:	4240      	negne	r0, r0
100046ce:	4770      	bx	lr
100046d0:	f04f 0000 	mov.w	r0, #0
100046d4:	4770      	bx	lr
100046d6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
100046da:	d105      	bne.n	100046e8 <__aeabi_d2iz+0x48>
100046dc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
100046e0:	bf08      	it	eq
100046e2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
100046e6:	4770      	bx	lr
100046e8:	f04f 0000 	mov.w	r0, #0
100046ec:	4770      	bx	lr
100046ee:	bf00      	nop

100046f0 <__aeabi_d2uiz>:
100046f0:	004a      	lsls	r2, r1, #1
100046f2:	d211      	bcs.n	10004718 <__aeabi_d2uiz+0x28>
100046f4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100046f8:	d211      	bcs.n	1000471e <__aeabi_d2uiz+0x2e>
100046fa:	d50d      	bpl.n	10004718 <__aeabi_d2uiz+0x28>
100046fc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004700:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10004704:	d40e      	bmi.n	10004724 <__aeabi_d2uiz+0x34>
10004706:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1000470a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1000470e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10004712:	fa23 f002 	lsr.w	r0, r3, r2
10004716:	4770      	bx	lr
10004718:	f04f 0000 	mov.w	r0, #0
1000471c:	4770      	bx	lr
1000471e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10004722:	d102      	bne.n	1000472a <__aeabi_d2uiz+0x3a>
10004724:	f04f 30ff 	mov.w	r0, #4294967295
10004728:	4770      	bx	lr
1000472a:	f04f 0000 	mov.w	r0, #0
1000472e:	4770      	bx	lr

10004730 <__aeabi_uldivmod>:
10004730:	b953      	cbnz	r3, 10004748 <__aeabi_uldivmod+0x18>
10004732:	b94a      	cbnz	r2, 10004748 <__aeabi_uldivmod+0x18>
10004734:	2900      	cmp	r1, #0
10004736:	bf08      	it	eq
10004738:	2800      	cmpeq	r0, #0
1000473a:	bf1c      	itt	ne
1000473c:	f04f 31ff 	movne.w	r1, #4294967295
10004740:	f04f 30ff 	movne.w	r0, #4294967295
10004744:	f001 b934 	b.w	100059b0 <__aeabi_idiv0>
10004748:	f1ad 0c08 	sub.w	ip, sp, #8
1000474c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10004750:	f000 f806 	bl	10004760 <__udivmoddi4>
10004754:	f8dd e004 	ldr.w	lr, [sp, #4]
10004758:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1000475c:	b004      	add	sp, #16
1000475e:	4770      	bx	lr

10004760 <__udivmoddi4>:
10004760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004764:	9d09      	ldr	r5, [sp, #36]	; 0x24
10004766:	4604      	mov	r4, r0
10004768:	460f      	mov	r7, r1
1000476a:	2b00      	cmp	r3, #0
1000476c:	d148      	bne.n	10004800 <__udivmoddi4+0xa0>
1000476e:	428a      	cmp	r2, r1
10004770:	4694      	mov	ip, r2
10004772:	d961      	bls.n	10004838 <__udivmoddi4+0xd8>
10004774:	fab2 f382 	clz	r3, r2
10004778:	b143      	cbz	r3, 1000478c <__udivmoddi4+0x2c>
1000477a:	f1c3 0120 	rsb	r1, r3, #32
1000477e:	409f      	lsls	r7, r3
10004780:	fa02 fc03 	lsl.w	ip, r2, r3
10004784:	409c      	lsls	r4, r3
10004786:	fa20 f101 	lsr.w	r1, r0, r1
1000478a:	430f      	orrs	r7, r1
1000478c:	ea4f 411c 	mov.w	r1, ip, lsr #16
10004790:	fa1f fe8c 	uxth.w	lr, ip
10004794:	0c22      	lsrs	r2, r4, #16
10004796:	fbb7 f6f1 	udiv	r6, r7, r1
1000479a:	fb01 7716 	mls	r7, r1, r6, r7
1000479e:	fb06 f00e 	mul.w	r0, r6, lr
100047a2:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
100047a6:	4290      	cmp	r0, r2
100047a8:	d908      	bls.n	100047bc <__udivmoddi4+0x5c>
100047aa:	eb1c 0202 	adds.w	r2, ip, r2
100047ae:	f106 37ff 	add.w	r7, r6, #4294967295
100047b2:	d202      	bcs.n	100047ba <__udivmoddi4+0x5a>
100047b4:	4290      	cmp	r0, r2
100047b6:	f200 8137 	bhi.w	10004a28 <__udivmoddi4+0x2c8>
100047ba:	463e      	mov	r6, r7
100047bc:	1a12      	subs	r2, r2, r0
100047be:	b2a4      	uxth	r4, r4
100047c0:	fbb2 f0f1 	udiv	r0, r2, r1
100047c4:	fb01 2210 	mls	r2, r1, r0, r2
100047c8:	fb00 fe0e 	mul.w	lr, r0, lr
100047cc:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
100047d0:	45a6      	cmp	lr, r4
100047d2:	d908      	bls.n	100047e6 <__udivmoddi4+0x86>
100047d4:	eb1c 0404 	adds.w	r4, ip, r4
100047d8:	f100 32ff 	add.w	r2, r0, #4294967295
100047dc:	d202      	bcs.n	100047e4 <__udivmoddi4+0x84>
100047de:	45a6      	cmp	lr, r4
100047e0:	f200 811c 	bhi.w	10004a1c <__udivmoddi4+0x2bc>
100047e4:	4610      	mov	r0, r2
100047e6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
100047ea:	eba4 040e 	sub.w	r4, r4, lr
100047ee:	2600      	movs	r6, #0
100047f0:	b11d      	cbz	r5, 100047fa <__udivmoddi4+0x9a>
100047f2:	40dc      	lsrs	r4, r3
100047f4:	2300      	movs	r3, #0
100047f6:	e9c5 4300 	strd	r4, r3, [r5]
100047fa:	4631      	mov	r1, r6
100047fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004800:	428b      	cmp	r3, r1
10004802:	d909      	bls.n	10004818 <__udivmoddi4+0xb8>
10004804:	2d00      	cmp	r5, #0
10004806:	f000 80fd 	beq.w	10004a04 <__udivmoddi4+0x2a4>
1000480a:	2600      	movs	r6, #0
1000480c:	e9c5 0100 	strd	r0, r1, [r5]
10004810:	4630      	mov	r0, r6
10004812:	4631      	mov	r1, r6
10004814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004818:	fab3 f683 	clz	r6, r3
1000481c:	2e00      	cmp	r6, #0
1000481e:	d14b      	bne.n	100048b8 <__udivmoddi4+0x158>
10004820:	428b      	cmp	r3, r1
10004822:	f0c0 80f2 	bcc.w	10004a0a <__udivmoddi4+0x2aa>
10004826:	4282      	cmp	r2, r0
10004828:	f240 80ef 	bls.w	10004a0a <__udivmoddi4+0x2aa>
1000482c:	4630      	mov	r0, r6
1000482e:	2d00      	cmp	r5, #0
10004830:	d0e3      	beq.n	100047fa <__udivmoddi4+0x9a>
10004832:	e9c5 4700 	strd	r4, r7, [r5]
10004836:	e7e0      	b.n	100047fa <__udivmoddi4+0x9a>
10004838:	b902      	cbnz	r2, 1000483c <__udivmoddi4+0xdc>
1000483a:	deff      	udf	#255	; 0xff
1000483c:	fab2 f382 	clz	r3, r2
10004840:	2b00      	cmp	r3, #0
10004842:	f040 809d 	bne.w	10004980 <__udivmoddi4+0x220>
10004846:	1a89      	subs	r1, r1, r2
10004848:	ea4f 4e12 	mov.w	lr, r2, lsr #16
1000484c:	b297      	uxth	r7, r2
1000484e:	2601      	movs	r6, #1
10004850:	0c20      	lsrs	r0, r4, #16
10004852:	fbb1 f2fe 	udiv	r2, r1, lr
10004856:	fb0e 1112 	mls	r1, lr, r2, r1
1000485a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1000485e:	fb07 f002 	mul.w	r0, r7, r2
10004862:	4288      	cmp	r0, r1
10004864:	d90f      	bls.n	10004886 <__udivmoddi4+0x126>
10004866:	eb1c 0101 	adds.w	r1, ip, r1
1000486a:	f102 38ff 	add.w	r8, r2, #4294967295
1000486e:	bf2c      	ite	cs
10004870:	f04f 0901 	movcs.w	r9, #1
10004874:	f04f 0900 	movcc.w	r9, #0
10004878:	4288      	cmp	r0, r1
1000487a:	d903      	bls.n	10004884 <__udivmoddi4+0x124>
1000487c:	f1b9 0f00 	cmp.w	r9, #0
10004880:	f000 80cf 	beq.w	10004a22 <__udivmoddi4+0x2c2>
10004884:	4642      	mov	r2, r8
10004886:	1a09      	subs	r1, r1, r0
10004888:	b2a4      	uxth	r4, r4
1000488a:	fbb1 f0fe 	udiv	r0, r1, lr
1000488e:	fb0e 1110 	mls	r1, lr, r0, r1
10004892:	fb00 f707 	mul.w	r7, r0, r7
10004896:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1000489a:	42a7      	cmp	r7, r4
1000489c:	d908      	bls.n	100048b0 <__udivmoddi4+0x150>
1000489e:	eb1c 0404 	adds.w	r4, ip, r4
100048a2:	f100 31ff 	add.w	r1, r0, #4294967295
100048a6:	d202      	bcs.n	100048ae <__udivmoddi4+0x14e>
100048a8:	42a7      	cmp	r7, r4
100048aa:	f200 80b4 	bhi.w	10004a16 <__udivmoddi4+0x2b6>
100048ae:	4608      	mov	r0, r1
100048b0:	1be4      	subs	r4, r4, r7
100048b2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
100048b6:	e79b      	b.n	100047f0 <__udivmoddi4+0x90>
100048b8:	f1c6 0720 	rsb	r7, r6, #32
100048bc:	40b3      	lsls	r3, r6
100048be:	fa01 f406 	lsl.w	r4, r1, r6
100048c2:	fa22 fc07 	lsr.w	ip, r2, r7
100048c6:	40f9      	lsrs	r1, r7
100048c8:	40b2      	lsls	r2, r6
100048ca:	ea4c 0c03 	orr.w	ip, ip, r3
100048ce:	fa20 f307 	lsr.w	r3, r0, r7
100048d2:	ea4f 491c 	mov.w	r9, ip, lsr #16
100048d6:	431c      	orrs	r4, r3
100048d8:	fa1f fe8c 	uxth.w	lr, ip
100048dc:	fa00 f306 	lsl.w	r3, r0, r6
100048e0:	0c20      	lsrs	r0, r4, #16
100048e2:	fbb1 f8f9 	udiv	r8, r1, r9
100048e6:	fb09 1118 	mls	r1, r9, r8, r1
100048ea:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
100048ee:	fb08 f00e 	mul.w	r0, r8, lr
100048f2:	4288      	cmp	r0, r1
100048f4:	d90f      	bls.n	10004916 <__udivmoddi4+0x1b6>
100048f6:	eb1c 0101 	adds.w	r1, ip, r1
100048fa:	f108 3aff 	add.w	sl, r8, #4294967295
100048fe:	bf2c      	ite	cs
10004900:	f04f 0b01 	movcs.w	fp, #1
10004904:	f04f 0b00 	movcc.w	fp, #0
10004908:	4288      	cmp	r0, r1
1000490a:	d903      	bls.n	10004914 <__udivmoddi4+0x1b4>
1000490c:	f1bb 0f00 	cmp.w	fp, #0
10004910:	f000 808d 	beq.w	10004a2e <__udivmoddi4+0x2ce>
10004914:	46d0      	mov	r8, sl
10004916:	1a09      	subs	r1, r1, r0
10004918:	b2a4      	uxth	r4, r4
1000491a:	fbb1 f0f9 	udiv	r0, r1, r9
1000491e:	fb09 1110 	mls	r1, r9, r0, r1
10004922:	fb00 fe0e 	mul.w	lr, r0, lr
10004926:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
1000492a:	458e      	cmp	lr, r1
1000492c:	d907      	bls.n	1000493e <__udivmoddi4+0x1de>
1000492e:	eb1c 0101 	adds.w	r1, ip, r1
10004932:	f100 34ff 	add.w	r4, r0, #4294967295
10004936:	d201      	bcs.n	1000493c <__udivmoddi4+0x1dc>
10004938:	458e      	cmp	lr, r1
1000493a:	d87f      	bhi.n	10004a3c <__udivmoddi4+0x2dc>
1000493c:	4620      	mov	r0, r4
1000493e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10004942:	eba1 010e 	sub.w	r1, r1, lr
10004946:	fba0 9802 	umull	r9, r8, r0, r2
1000494a:	4541      	cmp	r1, r8
1000494c:	464c      	mov	r4, r9
1000494e:	46c6      	mov	lr, r8
10004950:	d302      	bcc.n	10004958 <__udivmoddi4+0x1f8>
10004952:	d106      	bne.n	10004962 <__udivmoddi4+0x202>
10004954:	454b      	cmp	r3, r9
10004956:	d204      	bcs.n	10004962 <__udivmoddi4+0x202>
10004958:	3801      	subs	r0, #1
1000495a:	ebb9 0402 	subs.w	r4, r9, r2
1000495e:	eb68 0e0c 	sbc.w	lr, r8, ip
10004962:	2d00      	cmp	r5, #0
10004964:	d070      	beq.n	10004a48 <__udivmoddi4+0x2e8>
10004966:	1b1a      	subs	r2, r3, r4
10004968:	eb61 010e 	sbc.w	r1, r1, lr
1000496c:	fa22 f306 	lsr.w	r3, r2, r6
10004970:	fa01 f707 	lsl.w	r7, r1, r7
10004974:	40f1      	lsrs	r1, r6
10004976:	2600      	movs	r6, #0
10004978:	431f      	orrs	r7, r3
1000497a:	e9c5 7100 	strd	r7, r1, [r5]
1000497e:	e73c      	b.n	100047fa <__udivmoddi4+0x9a>
10004980:	fa02 fc03 	lsl.w	ip, r2, r3
10004984:	f1c3 0020 	rsb	r0, r3, #32
10004988:	fa01 f203 	lsl.w	r2, r1, r3
1000498c:	fa21 f600 	lsr.w	r6, r1, r0
10004990:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10004994:	fa24 f100 	lsr.w	r1, r4, r0
10004998:	fa1f f78c 	uxth.w	r7, ip
1000499c:	409c      	lsls	r4, r3
1000499e:	4311      	orrs	r1, r2
100049a0:	fbb6 f0fe 	udiv	r0, r6, lr
100049a4:	0c0a      	lsrs	r2, r1, #16
100049a6:	fb0e 6610 	mls	r6, lr, r0, r6
100049aa:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
100049ae:	fb00 f607 	mul.w	r6, r0, r7
100049b2:	4296      	cmp	r6, r2
100049b4:	d90e      	bls.n	100049d4 <__udivmoddi4+0x274>
100049b6:	eb1c 0202 	adds.w	r2, ip, r2
100049ba:	f100 38ff 	add.w	r8, r0, #4294967295
100049be:	bf2c      	ite	cs
100049c0:	f04f 0901 	movcs.w	r9, #1
100049c4:	f04f 0900 	movcc.w	r9, #0
100049c8:	4296      	cmp	r6, r2
100049ca:	d902      	bls.n	100049d2 <__udivmoddi4+0x272>
100049cc:	f1b9 0f00 	cmp.w	r9, #0
100049d0:	d031      	beq.n	10004a36 <__udivmoddi4+0x2d6>
100049d2:	4640      	mov	r0, r8
100049d4:	1b92      	subs	r2, r2, r6
100049d6:	b289      	uxth	r1, r1
100049d8:	fbb2 f6fe 	udiv	r6, r2, lr
100049dc:	fb0e 2216 	mls	r2, lr, r6, r2
100049e0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
100049e4:	fb06 f207 	mul.w	r2, r6, r7
100049e8:	428a      	cmp	r2, r1
100049ea:	d907      	bls.n	100049fc <__udivmoddi4+0x29c>
100049ec:	eb1c 0101 	adds.w	r1, ip, r1
100049f0:	f106 38ff 	add.w	r8, r6, #4294967295
100049f4:	d201      	bcs.n	100049fa <__udivmoddi4+0x29a>
100049f6:	428a      	cmp	r2, r1
100049f8:	d823      	bhi.n	10004a42 <__udivmoddi4+0x2e2>
100049fa:	4646      	mov	r6, r8
100049fc:	1a89      	subs	r1, r1, r2
100049fe:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10004a02:	e725      	b.n	10004850 <__udivmoddi4+0xf0>
10004a04:	462e      	mov	r6, r5
10004a06:	4628      	mov	r0, r5
10004a08:	e6f7      	b.n	100047fa <__udivmoddi4+0x9a>
10004a0a:	1a84      	subs	r4, r0, r2
10004a0c:	eb61 0303 	sbc.w	r3, r1, r3
10004a10:	2001      	movs	r0, #1
10004a12:	461f      	mov	r7, r3
10004a14:	e70b      	b.n	1000482e <__udivmoddi4+0xce>
10004a16:	4464      	add	r4, ip
10004a18:	3802      	subs	r0, #2
10004a1a:	e749      	b.n	100048b0 <__udivmoddi4+0x150>
10004a1c:	4464      	add	r4, ip
10004a1e:	3802      	subs	r0, #2
10004a20:	e6e1      	b.n	100047e6 <__udivmoddi4+0x86>
10004a22:	3a02      	subs	r2, #2
10004a24:	4461      	add	r1, ip
10004a26:	e72e      	b.n	10004886 <__udivmoddi4+0x126>
10004a28:	3e02      	subs	r6, #2
10004a2a:	4462      	add	r2, ip
10004a2c:	e6c6      	b.n	100047bc <__udivmoddi4+0x5c>
10004a2e:	f1a8 0802 	sub.w	r8, r8, #2
10004a32:	4461      	add	r1, ip
10004a34:	e76f      	b.n	10004916 <__udivmoddi4+0x1b6>
10004a36:	3802      	subs	r0, #2
10004a38:	4462      	add	r2, ip
10004a3a:	e7cb      	b.n	100049d4 <__udivmoddi4+0x274>
10004a3c:	3802      	subs	r0, #2
10004a3e:	4461      	add	r1, ip
10004a40:	e77d      	b.n	1000493e <__udivmoddi4+0x1de>
10004a42:	3e02      	subs	r6, #2
10004a44:	4461      	add	r1, ip
10004a46:	e7d9      	b.n	100049fc <__udivmoddi4+0x29c>
10004a48:	462e      	mov	r6, r5
10004a4a:	e6d6      	b.n	100047fa <__udivmoddi4+0x9a>

10004a4c <selfrel_offset31>:
10004a4c:	6803      	ldr	r3, [r0, #0]
10004a4e:	005a      	lsls	r2, r3, #1
10004a50:	bf4c      	ite	mi
10004a52:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10004a56:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10004a5a:	4418      	add	r0, r3
10004a5c:	4770      	bx	lr
10004a5e:	bf00      	nop

10004a60 <search_EIT_table>:
10004a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004a64:	b339      	cbz	r1, 10004ab6 <search_EIT_table+0x56>
10004a66:	f101 38ff 	add.w	r8, r1, #4294967295
10004a6a:	4606      	mov	r6, r0
10004a6c:	4617      	mov	r7, r2
10004a6e:	f04f 0900 	mov.w	r9, #0
10004a72:	4645      	mov	r5, r8
10004a74:	eb19 0105 	adds.w	r1, r9, r5
10004a78:	bf48      	it	mi
10004a7a:	3101      	addmi	r1, #1
10004a7c:	1049      	asrs	r1, r1, #1
10004a7e:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10004a82:	00cc      	lsls	r4, r1, #3
10004a84:	4650      	mov	r0, sl
10004a86:	f7ff ffe1 	bl	10004a4c <selfrel_offset31>
10004a8a:	3408      	adds	r4, #8
10004a8c:	4588      	cmp	r8, r1
10004a8e:	4603      	mov	r3, r0
10004a90:	eb06 0004 	add.w	r0, r6, r4
10004a94:	d009      	beq.n	10004aaa <search_EIT_table+0x4a>
10004a96:	42bb      	cmp	r3, r7
10004a98:	d809      	bhi.n	10004aae <search_EIT_table+0x4e>
10004a9a:	f7ff ffd7 	bl	10004a4c <selfrel_offset31>
10004a9e:	3801      	subs	r0, #1
10004aa0:	f101 0901 	add.w	r9, r1, #1
10004aa4:	42b8      	cmp	r0, r7
10004aa6:	d3e5      	bcc.n	10004a74 <search_EIT_table+0x14>
10004aa8:	e007      	b.n	10004aba <search_EIT_table+0x5a>
10004aaa:	42bb      	cmp	r3, r7
10004aac:	d905      	bls.n	10004aba <search_EIT_table+0x5a>
10004aae:	4589      	cmp	r9, r1
10004ab0:	f101 35ff 	add.w	r5, r1, #4294967295
10004ab4:	d1de      	bne.n	10004a74 <search_EIT_table+0x14>
10004ab6:	f04f 0a00 	mov.w	sl, #0
10004aba:	4650      	mov	r0, sl
10004abc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10004ac0 <__gnu_unwind_get_pr_addr>:
10004ac0:	2801      	cmp	r0, #1
10004ac2:	d007      	beq.n	10004ad4 <__gnu_unwind_get_pr_addr+0x14>
10004ac4:	2802      	cmp	r0, #2
10004ac6:	d007      	beq.n	10004ad8 <__gnu_unwind_get_pr_addr+0x18>
10004ac8:	2800      	cmp	r0, #0
10004aca:	4b04      	ldr	r3, [pc, #16]	; (10004adc <__gnu_unwind_get_pr_addr+0x1c>)
10004acc:	bf14      	ite	ne
10004ace:	2000      	movne	r0, #0
10004ad0:	4618      	moveq	r0, r3
10004ad2:	4770      	bx	lr
10004ad4:	4802      	ldr	r0, [pc, #8]	; (10004ae0 <__gnu_unwind_get_pr_addr+0x20>)
10004ad6:	4770      	bx	lr
10004ad8:	4802      	ldr	r0, [pc, #8]	; (10004ae4 <__gnu_unwind_get_pr_addr+0x24>)
10004ada:	4770      	bx	lr
10004adc:	100051d1 	ldrdne	r5, [r0], -r1
10004ae0:	100051d5 	ldrdne	r5, [r0], -r5	; <UNPREDICTABLE>
10004ae4:	100051d9 	ldrdne	r5, [r0], -r9

10004ae8 <get_eit_entry>:
10004ae8:	4b23      	ldr	r3, [pc, #140]	; (10004b78 <get_eit_entry+0x90>)
10004aea:	b530      	push	{r4, r5, lr}
10004aec:	4604      	mov	r4, r0
10004aee:	b083      	sub	sp, #12
10004af0:	1e8d      	subs	r5, r1, #2
10004af2:	b343      	cbz	r3, 10004b46 <get_eit_entry+0x5e>
10004af4:	a901      	add	r1, sp, #4
10004af6:	4628      	mov	r0, r5
10004af8:	e000      	b.n	10004afc <get_eit_entry+0x14>
10004afa:	bf00      	nop
10004afc:	b1f0      	cbz	r0, 10004b3c <get_eit_entry+0x54>
10004afe:	9901      	ldr	r1, [sp, #4]
10004b00:	462a      	mov	r2, r5
10004b02:	f7ff ffad 	bl	10004a60 <search_EIT_table>
10004b06:	4601      	mov	r1, r0
10004b08:	b1c0      	cbz	r0, 10004b3c <get_eit_entry+0x54>
10004b0a:	f7ff ff9f 	bl	10004a4c <selfrel_offset31>
10004b0e:	684b      	ldr	r3, [r1, #4]
10004b10:	64a0      	str	r0, [r4, #72]	; 0x48
10004b12:	2b01      	cmp	r3, #1
10004b14:	d02c      	beq.n	10004b70 <get_eit_entry+0x88>
10004b16:	2b00      	cmp	r3, #0
10004b18:	f101 0004 	add.w	r0, r1, #4
10004b1c:	db24      	blt.n	10004b68 <get_eit_entry+0x80>
10004b1e:	f7ff ff95 	bl	10004a4c <selfrel_offset31>
10004b22:	2300      	movs	r3, #0
10004b24:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004b28:	6803      	ldr	r3, [r0, #0]
10004b2a:	2b00      	cmp	r3, #0
10004b2c:	db11      	blt.n	10004b52 <get_eit_entry+0x6a>
10004b2e:	f7ff ff8d 	bl	10004a4c <selfrel_offset31>
10004b32:	4603      	mov	r3, r0
10004b34:	2000      	movs	r0, #0
10004b36:	6123      	str	r3, [r4, #16]
10004b38:	b003      	add	sp, #12
10004b3a:	bd30      	pop	{r4, r5, pc}
10004b3c:	2300      	movs	r3, #0
10004b3e:	2009      	movs	r0, #9
10004b40:	6123      	str	r3, [r4, #16]
10004b42:	b003      	add	sp, #12
10004b44:	bd30      	pop	{r4, r5, pc}
10004b46:	480d      	ldr	r0, [pc, #52]	; (10004b7c <get_eit_entry+0x94>)
10004b48:	490d      	ldr	r1, [pc, #52]	; (10004b80 <get_eit_entry+0x98>)
10004b4a:	1a09      	subs	r1, r1, r0
10004b4c:	10c9      	asrs	r1, r1, #3
10004b4e:	9101      	str	r1, [sp, #4]
10004b50:	e7d6      	b.n	10004b00 <get_eit_entry+0x18>
10004b52:	f3c3 6003 	ubfx	r0, r3, #24, #4
10004b56:	f7ff ffb3 	bl	10004ac0 <__gnu_unwind_get_pr_addr>
10004b5a:	2800      	cmp	r0, #0
10004b5c:	6120      	str	r0, [r4, #16]
10004b5e:	bf14      	ite	ne
10004b60:	2000      	movne	r0, #0
10004b62:	2009      	moveq	r0, #9
10004b64:	b003      	add	sp, #12
10004b66:	bd30      	pop	{r4, r5, pc}
10004b68:	2301      	movs	r3, #1
10004b6a:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004b6e:	e7db      	b.n	10004b28 <get_eit_entry+0x40>
10004b70:	2300      	movs	r3, #0
10004b72:	2005      	movs	r0, #5
10004b74:	6123      	str	r3, [r4, #16]
10004b76:	e7df      	b.n	10004b38 <get_eit_entry+0x50>
10004b78:	00000000 	andeq	r0, r0, r0
10004b7c:	10006070 	andne	r6, r0, r0, ror r0
10004b80:	10006130 	andne	r6, r0, r0, lsr r1

10004b84 <restore_non_core_regs>:
10004b84:	6803      	ldr	r3, [r0, #0]
10004b86:	07da      	lsls	r2, r3, #31
10004b88:	b510      	push	{r4, lr}
10004b8a:	4604      	mov	r4, r0
10004b8c:	d406      	bmi.n	10004b9c <restore_non_core_regs+0x18>
10004b8e:	079b      	lsls	r3, r3, #30
10004b90:	f100 0048 	add.w	r0, r0, #72	; 0x48
10004b94:	d509      	bpl.n	10004baa <restore_non_core_regs+0x26>
10004b96:	f000 fc8f 	bl	100054b8 <__gnu_Unwind_Restore_VFP_D>
10004b9a:	6823      	ldr	r3, [r4, #0]
10004b9c:	0759      	lsls	r1, r3, #29
10004b9e:	d509      	bpl.n	10004bb4 <restore_non_core_regs+0x30>
10004ba0:	071a      	lsls	r2, r3, #28
10004ba2:	d50e      	bpl.n	10004bc2 <restore_non_core_regs+0x3e>
10004ba4:	06db      	lsls	r3, r3, #27
10004ba6:	d513      	bpl.n	10004bd0 <restore_non_core_regs+0x4c>
10004ba8:	bd10      	pop	{r4, pc}
10004baa:	f000 fc7d 	bl	100054a8 <__gnu_Unwind_Restore_VFP>
10004bae:	6823      	ldr	r3, [r4, #0]
10004bb0:	0759      	lsls	r1, r3, #29
10004bb2:	d4f5      	bmi.n	10004ba0 <restore_non_core_regs+0x1c>
10004bb4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
10004bb8:	f000 fc86 	bl	100054c8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10004bbc:	6823      	ldr	r3, [r4, #0]
10004bbe:	071a      	lsls	r2, r3, #28
10004bc0:	d4f0      	bmi.n	10004ba4 <restore_non_core_regs+0x20>
10004bc2:	f504 70a8 	add.w	r0, r4, #336	; 0x150
10004bc6:	f000 fc87 	bl	100054d8 <__gnu_Unwind_Restore_WMMXD>
10004bca:	6823      	ldr	r3, [r4, #0]
10004bcc:	06db      	lsls	r3, r3, #27
10004bce:	d4eb      	bmi.n	10004ba8 <restore_non_core_regs+0x24>
10004bd0:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10004bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10004bd8:	f000 bcc2 	b.w	10005560 <__gnu_Unwind_Restore_WMMXC>

10004bdc <__gnu_unwind_24bit.constprop.0>:
10004bdc:	2009      	movs	r0, #9
10004bde:	4770      	bx	lr

10004be0 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10004be0:	4603      	mov	r3, r0
10004be2:	6800      	ldr	r0, [r0, #0]
10004be4:	b100      	cbz	r0, 10004be8 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
10004be6:	4418      	add	r0, r3
10004be8:	4770      	bx	lr
10004bea:	bf00      	nop

10004bec <_Unwind_DebugHook>:
10004bec:	4770      	bx	lr
10004bee:	bf00      	nop

10004bf0 <unwind_phase2>:
10004bf0:	b570      	push	{r4, r5, r6, lr}
10004bf2:	4604      	mov	r4, r0
10004bf4:	460e      	mov	r6, r1
10004bf6:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004bf8:	4620      	mov	r0, r4
10004bfa:	f7ff ff75 	bl	10004ae8 <get_eit_entry>
10004bfe:	4605      	mov	r5, r0
10004c00:	b998      	cbnz	r0, 10004c2a <unwind_phase2+0x3a>
10004c02:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
10004c06:	4632      	mov	r2, r6
10004c08:	6923      	ldr	r3, [r4, #16]
10004c0a:	4621      	mov	r1, r4
10004c0c:	2001      	movs	r0, #1
10004c0e:	f8c4 c014 	str.w	ip, [r4, #20]
10004c12:	4798      	blx	r3
10004c14:	2808      	cmp	r0, #8
10004c16:	d0ee      	beq.n	10004bf6 <unwind_phase2+0x6>
10004c18:	2807      	cmp	r0, #7
10004c1a:	d106      	bne.n	10004c2a <unwind_phase2+0x3a>
10004c1c:	4628      	mov	r0, r5
10004c1e:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004c20:	f7ff ffe4 	bl	10004bec <_Unwind_DebugHook>
10004c24:	1d30      	adds	r0, r6, #4
10004c26:	f000 fc33 	bl	10005490 <__restore_core_regs>
10004c2a:	f000 fec3 	bl	100059b4 <abort>
10004c2e:	bf00      	nop

10004c30 <unwind_phase2_forced>:
10004c30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004c34:	f101 0c04 	add.w	ip, r1, #4
10004c38:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10004c3c:	68c7      	ldr	r7, [r0, #12]
10004c3e:	4606      	mov	r6, r0
10004c40:	f8d0 8018 	ldr.w	r8, [r0, #24]
10004c44:	4614      	mov	r4, r2
10004c46:	f10d 0e14 	add.w	lr, sp, #20
10004c4a:	ad04      	add	r5, sp, #16
10004c4c:	f04f 0900 	mov.w	r9, #0
10004c50:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004c54:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004c58:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004c5c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004c60:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004c64:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004c68:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004c6c:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10004c70:	f8c5 9000 	str.w	r9, [r5]
10004c74:	e023      	b.n	10004cbe <unwind_phase2_forced+0x8e>
10004c76:	6c2b      	ldr	r3, [r5, #64]	; 0x40
10004c78:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004c7c:	4629      	mov	r1, r5
10004c7e:	a87c      	add	r0, sp, #496	; 0x1f0
10004c80:	6173      	str	r3, [r6, #20]
10004c82:	f7fe ff7d 	bl	10003b80 <memcpy>
10004c86:	aa7c      	add	r2, sp, #496	; 0x1f0
10004c88:	4631      	mov	r1, r6
10004c8a:	6933      	ldr	r3, [r6, #16]
10004c8c:	4650      	mov	r0, sl
10004c8e:	4798      	blx	r3
10004c90:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10004c92:	4621      	mov	r1, r4
10004c94:	4681      	mov	r9, r0
10004c96:	9303      	str	r3, [sp, #12]
10004c98:	4632      	mov	r2, r6
10004c9a:	9c03      	ldr	r4, [sp, #12]
10004c9c:	4633      	mov	r3, r6
10004c9e:	2001      	movs	r0, #1
10004ca0:	646c      	str	r4, [r5, #68]	; 0x44
10004ca2:	e9cd 5800 	strd	r5, r8, [sp]
10004ca6:	47b8      	blx	r7
10004ca8:	4604      	mov	r4, r0
10004caa:	b9e8      	cbnz	r0, 10004ce8 <unwind_phase2_forced+0xb8>
10004cac:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004cb0:	a97c      	add	r1, sp, #496	; 0x1f0
10004cb2:	4628      	mov	r0, r5
10004cb4:	f7fe ff64 	bl	10003b80 <memcpy>
10004cb8:	f1b9 0f08 	cmp.w	r9, #8
10004cbc:	d11b      	bne.n	10004cf6 <unwind_phase2_forced+0xc6>
10004cbe:	3409      	adds	r4, #9
10004cc0:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004cc2:	4630      	mov	r0, r6
10004cc4:	f7ff ff10 	bl	10004ae8 <get_eit_entry>
10004cc8:	4681      	mov	r9, r0
10004cca:	fa5f fa84 	uxtb.w	sl, r4
10004cce:	2800      	cmp	r0, #0
10004cd0:	d0d1      	beq.n	10004c76 <unwind_phase2_forced+0x46>
10004cd2:	6bac      	ldr	r4, [r5, #56]	; 0x38
10004cd4:	4633      	mov	r3, r6
10004cd6:	4632      	mov	r2, r6
10004cd8:	f04a 0110 	orr.w	r1, sl, #16
10004cdc:	646c      	str	r4, [r5, #68]	; 0x44
10004cde:	2001      	movs	r0, #1
10004ce0:	e9cd 5800 	strd	r5, r8, [sp]
10004ce4:	47b8      	blx	r7
10004ce6:	b108      	cbz	r0, 10004cec <unwind_phase2_forced+0xbc>
10004ce8:	f04f 0909 	mov.w	r9, #9
10004cec:	4648      	mov	r0, r9
10004cee:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10004cf2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10004cf6:	f1b9 0f07 	cmp.w	r9, #7
10004cfa:	d1f5      	bne.n	10004ce8 <unwind_phase2_forced+0xb8>
10004cfc:	4620      	mov	r0, r4
10004cfe:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004d00:	f7ff ff74 	bl	10004bec <_Unwind_DebugHook>
10004d04:	a805      	add	r0, sp, #20
10004d06:	f000 fbc3 	bl	10005490 <__restore_core_regs>
10004d0a:	bf00      	nop

10004d0c <_Unwind_GetCFA>:
10004d0c:	6c40      	ldr	r0, [r0, #68]	; 0x44
10004d0e:	4770      	bx	lr

10004d10 <__gnu_Unwind_RaiseException>:
10004d10:	b5f0      	push	{r4, r5, r6, r7, lr}
10004d12:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10004d14:	b0f9      	sub	sp, #484	; 0x1e4
10004d16:	f101 0c04 	add.w	ip, r1, #4
10004d1a:	460e      	mov	r6, r1
10004d1c:	640b      	str	r3, [r1, #64]	; 0x40
10004d1e:	ac01      	add	r4, sp, #4
10004d20:	4605      	mov	r5, r0
10004d22:	f04f 37ff 	mov.w	r7, #4294967295
10004d26:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004d2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004d2c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004d30:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004d32:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004d36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004d38:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004d3c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10004d40:	9700      	str	r7, [sp, #0]
10004d42:	e006      	b.n	10004d52 <__gnu_Unwind_RaiseException+0x42>
10004d44:	692b      	ldr	r3, [r5, #16]
10004d46:	466a      	mov	r2, sp
10004d48:	4629      	mov	r1, r5
10004d4a:	4798      	blx	r3
10004d4c:	2808      	cmp	r0, #8
10004d4e:	4604      	mov	r4, r0
10004d50:	d108      	bne.n	10004d64 <__gnu_Unwind_RaiseException+0x54>
10004d52:	9910      	ldr	r1, [sp, #64]	; 0x40
10004d54:	4628      	mov	r0, r5
10004d56:	f7ff fec7 	bl	10004ae8 <get_eit_entry>
10004d5a:	2800      	cmp	r0, #0
10004d5c:	d0f2      	beq.n	10004d44 <__gnu_Unwind_RaiseException+0x34>
10004d5e:	2009      	movs	r0, #9
10004d60:	b079      	add	sp, #484	; 0x1e4
10004d62:	bdf0      	pop	{r4, r5, r6, r7, pc}
10004d64:	4668      	mov	r0, sp
10004d66:	f7ff ff0d 	bl	10004b84 <restore_non_core_regs>
10004d6a:	2c06      	cmp	r4, #6
10004d6c:	d1f7      	bne.n	10004d5e <__gnu_Unwind_RaiseException+0x4e>
10004d6e:	4631      	mov	r1, r6
10004d70:	4628      	mov	r0, r5
10004d72:	f7ff ff3d 	bl	10004bf0 <unwind_phase2>
10004d76:	bf00      	nop

10004d78 <__gnu_Unwind_ForcedUnwind>:
10004d78:	b410      	push	{r4}
10004d7a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10004d7c:	60c1      	str	r1, [r0, #12]
10004d7e:	4619      	mov	r1, r3
10004d80:	6182      	str	r2, [r0, #24]
10004d82:	2200      	movs	r2, #0
10004d84:	641c      	str	r4, [r3, #64]	; 0x40
10004d86:	bc10      	pop	{r4}
10004d88:	e752      	b.n	10004c30 <unwind_phase2_forced>
10004d8a:	bf00      	nop

10004d8c <__gnu_Unwind_Resume>:
10004d8c:	b570      	push	{r4, r5, r6, lr}
10004d8e:	6943      	ldr	r3, [r0, #20]
10004d90:	68c6      	ldr	r6, [r0, #12]
10004d92:	640b      	str	r3, [r1, #64]	; 0x40
10004d94:	b9ae      	cbnz	r6, 10004dc2 <__gnu_Unwind_Resume+0x36>
10004d96:	6903      	ldr	r3, [r0, #16]
10004d98:	460a      	mov	r2, r1
10004d9a:	4604      	mov	r4, r0
10004d9c:	460d      	mov	r5, r1
10004d9e:	4601      	mov	r1, r0
10004da0:	2002      	movs	r0, #2
10004da2:	4798      	blx	r3
10004da4:	2807      	cmp	r0, #7
10004da6:	d005      	beq.n	10004db4 <__gnu_Unwind_Resume+0x28>
10004da8:	2808      	cmp	r0, #8
10004daa:	d10f      	bne.n	10004dcc <__gnu_Unwind_Resume+0x40>
10004dac:	4629      	mov	r1, r5
10004dae:	4620      	mov	r0, r4
10004db0:	f7ff ff1e 	bl	10004bf0 <unwind_phase2>
10004db4:	4630      	mov	r0, r6
10004db6:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004db8:	f7ff ff18 	bl	10004bec <_Unwind_DebugHook>
10004dbc:	1d28      	adds	r0, r5, #4
10004dbe:	f000 fb67 	bl	10005490 <__restore_core_regs>
10004dc2:	2201      	movs	r2, #1
10004dc4:	f7ff ff34 	bl	10004c30 <unwind_phase2_forced>
10004dc8:	f000 fdf4 	bl	100059b4 <abort>
10004dcc:	f000 fdf2 	bl	100059b4 <abort>

10004dd0 <__gnu_Unwind_Resume_or_Rethrow>:
10004dd0:	68c2      	ldr	r2, [r0, #12]
10004dd2:	b12a      	cbz	r2, 10004de0 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10004dd4:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10004dd8:	2200      	movs	r2, #0
10004dda:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10004dde:	e727      	b.n	10004c30 <unwind_phase2_forced>
10004de0:	e796      	b.n	10004d10 <__gnu_Unwind_RaiseException>
10004de2:	bf00      	nop

10004de4 <_Unwind_Complete>:
10004de4:	4770      	bx	lr
10004de6:	bf00      	nop

10004de8 <_Unwind_DeleteException>:
10004de8:	6883      	ldr	r3, [r0, #8]
10004dea:	4601      	mov	r1, r0
10004dec:	b10b      	cbz	r3, 10004df2 <_Unwind_DeleteException+0xa>
10004dee:	2001      	movs	r0, #1
10004df0:	4718      	bx	r3
10004df2:	4770      	bx	lr

10004df4 <_Unwind_VRS_Get>:
10004df4:	2901      	cmp	r1, #1
10004df6:	d015      	beq.n	10004e24 <_Unwind_VRS_Get+0x30>
10004df8:	d80c      	bhi.n	10004e14 <_Unwind_VRS_Get+0x20>
10004dfa:	b98b      	cbnz	r3, 10004e20 <_Unwind_VRS_Get+0x2c>
10004dfc:	2a0f      	cmp	r2, #15
10004dfe:	bf94      	ite	ls
10004e00:	2100      	movls	r1, #0
10004e02:	2101      	movhi	r1, #1
10004e04:	b961      	cbnz	r1, 10004e20 <_Unwind_VRS_Get+0x2c>
10004e06:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004e0a:	4608      	mov	r0, r1
10004e0c:	6853      	ldr	r3, [r2, #4]
10004e0e:	9a00      	ldr	r2, [sp, #0]
10004e10:	6013      	str	r3, [r2, #0]
10004e12:	4770      	bx	lr
10004e14:	3903      	subs	r1, #3
10004e16:	2901      	cmp	r1, #1
10004e18:	bf94      	ite	ls
10004e1a:	2001      	movls	r0, #1
10004e1c:	2002      	movhi	r0, #2
10004e1e:	4770      	bx	lr
10004e20:	2002      	movs	r0, #2
10004e22:	4770      	bx	lr
10004e24:	4608      	mov	r0, r1
10004e26:	4770      	bx	lr

10004e28 <_Unwind_GetGR>:
10004e28:	b510      	push	{r4, lr}
10004e2a:	b084      	sub	sp, #16
10004e2c:	2300      	movs	r3, #0
10004e2e:	460a      	mov	r2, r1
10004e30:	ac03      	add	r4, sp, #12
10004e32:	4619      	mov	r1, r3
10004e34:	9400      	str	r4, [sp, #0]
10004e36:	f7ff ffdd 	bl	10004df4 <_Unwind_VRS_Get>
10004e3a:	9803      	ldr	r0, [sp, #12]
10004e3c:	b004      	add	sp, #16
10004e3e:	bd10      	pop	{r4, pc}

10004e40 <_Unwind_VRS_Set>:
10004e40:	2901      	cmp	r1, #1
10004e42:	d015      	beq.n	10004e70 <_Unwind_VRS_Set+0x30>
10004e44:	d80c      	bhi.n	10004e60 <_Unwind_VRS_Set+0x20>
10004e46:	b98b      	cbnz	r3, 10004e6c <_Unwind_VRS_Set+0x2c>
10004e48:	2a0f      	cmp	r2, #15
10004e4a:	bf94      	ite	ls
10004e4c:	2100      	movls	r1, #0
10004e4e:	2101      	movhi	r1, #1
10004e50:	b961      	cbnz	r1, 10004e6c <_Unwind_VRS_Set+0x2c>
10004e52:	9b00      	ldr	r3, [sp, #0]
10004e54:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004e58:	4608      	mov	r0, r1
10004e5a:	681b      	ldr	r3, [r3, #0]
10004e5c:	6053      	str	r3, [r2, #4]
10004e5e:	4770      	bx	lr
10004e60:	3903      	subs	r1, #3
10004e62:	2901      	cmp	r1, #1
10004e64:	bf94      	ite	ls
10004e66:	2001      	movls	r0, #1
10004e68:	2002      	movhi	r0, #2
10004e6a:	4770      	bx	lr
10004e6c:	2002      	movs	r0, #2
10004e6e:	4770      	bx	lr
10004e70:	4608      	mov	r0, r1
10004e72:	4770      	bx	lr

10004e74 <_Unwind_SetGR>:
10004e74:	b510      	push	{r4, lr}
10004e76:	b084      	sub	sp, #16
10004e78:	2300      	movs	r3, #0
10004e7a:	ac03      	add	r4, sp, #12
10004e7c:	9203      	str	r2, [sp, #12]
10004e7e:	460a      	mov	r2, r1
10004e80:	4619      	mov	r1, r3
10004e82:	9400      	str	r4, [sp, #0]
10004e84:	f7ff ffdc 	bl	10004e40 <_Unwind_VRS_Set>
10004e88:	b004      	add	sp, #16
10004e8a:	bd10      	pop	{r4, pc}

10004e8c <__gnu_Unwind_Backtrace>:
10004e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
10004e8e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004e90:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10004e94:	1d14      	adds	r4, r2, #4
10004e96:	4606      	mov	r6, r0
10004e98:	6413      	str	r3, [r2, #64]	; 0x40
10004e9a:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004e9e:	460d      	mov	r5, r1
10004ea0:	f04f 37ff 	mov.w	r7, #4294967295
10004ea4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004ea6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004eaa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004eac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004eb0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004eb2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004eb6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10004eba:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10004ebe:	9716      	str	r7, [sp, #88]	; 0x58
10004ec0:	e010      	b.n	10004ee4 <__gnu_Unwind_Backtrace+0x58>
10004ec2:	f7ff ffd7 	bl	10004e74 <_Unwind_SetGR>
10004ec6:	4629      	mov	r1, r5
10004ec8:	a816      	add	r0, sp, #88	; 0x58
10004eca:	47b0      	blx	r6
10004ecc:	4603      	mov	r3, r0
10004ece:	aa16      	add	r2, sp, #88	; 0x58
10004ed0:	4669      	mov	r1, sp
10004ed2:	2008      	movs	r0, #8
10004ed4:	b983      	cbnz	r3, 10004ef8 <__gnu_Unwind_Backtrace+0x6c>
10004ed6:	9b04      	ldr	r3, [sp, #16]
10004ed8:	4798      	blx	r3
10004eda:	2805      	cmp	r0, #5
10004edc:	4604      	mov	r4, r0
10004ede:	d00c      	beq.n	10004efa <__gnu_Unwind_Backtrace+0x6e>
10004ee0:	2809      	cmp	r0, #9
10004ee2:	d00a      	beq.n	10004efa <__gnu_Unwind_Backtrace+0x6e>
10004ee4:	9926      	ldr	r1, [sp, #152]	; 0x98
10004ee6:	4668      	mov	r0, sp
10004ee8:	f7ff fdfe 	bl	10004ae8 <get_eit_entry>
10004eec:	4603      	mov	r3, r0
10004eee:	466a      	mov	r2, sp
10004ef0:	210c      	movs	r1, #12
10004ef2:	a816      	add	r0, sp, #88	; 0x58
10004ef4:	2b00      	cmp	r3, #0
10004ef6:	d0e4      	beq.n	10004ec2 <__gnu_Unwind_Backtrace+0x36>
10004ef8:	2409      	movs	r4, #9
10004efa:	a816      	add	r0, sp, #88	; 0x58
10004efc:	f7ff fe42 	bl	10004b84 <restore_non_core_regs>
10004f00:	4620      	mov	r0, r4
10004f02:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10004f06:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004f08 <__gnu_unwind_pr_common>:
10004f08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004f0c:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004f0e:	b089      	sub	sp, #36	; 0x24
10004f10:	461e      	mov	r6, r3
10004f12:	460d      	mov	r5, r1
10004f14:	f854 3b04 	ldr.w	r3, [r4], #4
10004f18:	4617      	mov	r7, r2
10004f1a:	f000 0803 	and.w	r8, r0, #3
10004f1e:	9406      	str	r4, [sp, #24]
10004f20:	2e00      	cmp	r6, #0
10004f22:	d07f      	beq.n	10005024 <__gnu_unwind_pr_common+0x11c>
10004f24:	0c1a      	lsrs	r2, r3, #16
10004f26:	041b      	lsls	r3, r3, #16
10004f28:	f88d 201d 	strb.w	r2, [sp, #29]
10004f2c:	b2d2      	uxtb	r2, r2
10004f2e:	9305      	str	r3, [sp, #20]
10004f30:	2302      	movs	r3, #2
10004f32:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10004f36:	f88d 301c 	strb.w	r3, [sp, #28]
10004f3a:	f1b8 0f02 	cmp.w	r8, #2
10004f3e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004f40:	bf08      	it	eq
10004f42:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10004f44:	f013 0301 	ands.w	r3, r3, #1
10004f48:	d008      	beq.n	10004f5c <__gnu_unwind_pr_common+0x54>
10004f4a:	a905      	add	r1, sp, #20
10004f4c:	4638      	mov	r0, r7
10004f4e:	f000 fba1 	bl	10005694 <__gnu_unwind_execute>
10004f52:	bb90      	cbnz	r0, 10004fba <__gnu_unwind_pr_common+0xb2>
10004f54:	2008      	movs	r0, #8
10004f56:	b009      	add	sp, #36	; 0x24
10004f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004f5c:	f8d4 a000 	ldr.w	sl, [r4]
10004f60:	f1ba 0f00 	cmp.w	sl, #0
10004f64:	d0f1      	beq.n	10004f4a <__gnu_unwind_pr_common+0x42>
10004f66:	9301      	str	r3, [sp, #4]
10004f68:	f000 0308 	and.w	r3, r0, #8
10004f6c:	9302      	str	r3, [sp, #8]
10004f6e:	2e02      	cmp	r6, #2
10004f70:	d054      	beq.n	1000501c <__gnu_unwind_pr_common+0x114>
10004f72:	f8b4 a000 	ldrh.w	sl, [r4]
10004f76:	3404      	adds	r4, #4
10004f78:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004f7c:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004f7e:	f029 0b01 	bic.w	fp, r9, #1
10004f82:	210f      	movs	r1, #15
10004f84:	4638      	mov	r0, r7
10004f86:	449b      	add	fp, r3
10004f88:	f7ff ff4e 	bl	10004e28 <_Unwind_GetGR>
10004f8c:	4583      	cmp	fp, r0
10004f8e:	d818      	bhi.n	10004fc2 <__gnu_unwind_pr_common+0xba>
10004f90:	f02a 0301 	bic.w	r3, sl, #1
10004f94:	449b      	add	fp, r3
10004f96:	4583      	cmp	fp, r0
10004f98:	d913      	bls.n	10004fc2 <__gnu_unwind_pr_common+0xba>
10004f9a:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004f9e:	f00a 0a01 	and.w	sl, sl, #1
10004fa2:	f003 0302 	and.w	r3, r3, #2
10004fa6:	ea43 030a 	orr.w	r3, r3, sl
10004faa:	2b01      	cmp	r3, #1
10004fac:	f000 80bf 	beq.w	1000512e <__gnu_unwind_pr_common+0x226>
10004fb0:	2b02      	cmp	r3, #2
10004fb2:	f000 8089 	beq.w	100050c8 <__gnu_unwind_pr_common+0x1c0>
10004fb6:	2b00      	cmp	r3, #0
10004fb8:	d04d      	beq.n	10005056 <__gnu_unwind_pr_common+0x14e>
10004fba:	2009      	movs	r0, #9
10004fbc:	b009      	add	sp, #36	; 0x24
10004fbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004fc2:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004fc6:	f00a 0a01 	and.w	sl, sl, #1
10004fca:	f003 0302 	and.w	r3, r3, #2
10004fce:	ea43 030a 	orr.w	r3, r3, sl
10004fd2:	2b01      	cmp	r3, #1
10004fd4:	d03a      	beq.n	1000504c <__gnu_unwind_pr_common+0x144>
10004fd6:	2b02      	cmp	r3, #2
10004fd8:	d02a      	beq.n	10005030 <__gnu_unwind_pr_common+0x128>
10004fda:	2b00      	cmp	r3, #0
10004fdc:	d1ed      	bne.n	10004fba <__gnu_unwind_pr_common+0xb2>
10004fde:	3404      	adds	r4, #4
10004fe0:	f8d4 a000 	ldr.w	sl, [r4]
10004fe4:	f1ba 0f00 	cmp.w	sl, #0
10004fe8:	d1c1      	bne.n	10004f6e <__gnu_unwind_pr_common+0x66>
10004fea:	a905      	add	r1, sp, #20
10004fec:	4638      	mov	r0, r7
10004fee:	f000 fb51 	bl	10005694 <__gnu_unwind_execute>
10004ff2:	2800      	cmp	r0, #0
10004ff4:	d1e1      	bne.n	10004fba <__gnu_unwind_pr_common+0xb2>
10004ff6:	9b01      	ldr	r3, [sp, #4]
10004ff8:	2b00      	cmp	r3, #0
10004ffa:	d0ab      	beq.n	10004f54 <__gnu_unwind_pr_common+0x4c>
10004ffc:	210f      	movs	r1, #15
10004ffe:	4638      	mov	r0, r7
10005000:	f7ff ff12 	bl	10004e28 <_Unwind_GetGR>
10005004:	210e      	movs	r1, #14
10005006:	4602      	mov	r2, r0
10005008:	4638      	mov	r0, r7
1000500a:	f7ff ff33 	bl	10004e74 <_Unwind_SetGR>
1000500e:	4638      	mov	r0, r7
10005010:	4a6e      	ldr	r2, [pc, #440]	; (100051cc <__gnu_unwind_pr_common+0x2c4>)
10005012:	210f      	movs	r1, #15
10005014:	f7ff ff2e 	bl	10004e74 <_Unwind_SetGR>
10005018:	2007      	movs	r0, #7
1000501a:	e7cf      	b.n	10004fbc <__gnu_unwind_pr_common+0xb4>
1000501c:	f8d4 9004 	ldr.w	r9, [r4, #4]
10005020:	3408      	adds	r4, #8
10005022:	e7ab      	b.n	10004f7c <__gnu_unwind_pr_common+0x74>
10005024:	021b      	lsls	r3, r3, #8
10005026:	9305      	str	r3, [sp, #20]
10005028:	2303      	movs	r3, #3
1000502a:	f8ad 301c 	strh.w	r3, [sp, #28]
1000502e:	e784      	b.n	10004f3a <__gnu_unwind_pr_common+0x32>
10005030:	6823      	ldr	r3, [r4, #0]
10005032:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10005036:	f1b8 0f00 	cmp.w	r8, #0
1000503a:	d121      	bne.n	10005080 <__gnu_unwind_pr_common+0x178>
1000503c:	2b00      	cmp	r3, #0
1000503e:	da00      	bge.n	10005042 <__gnu_unwind_pr_common+0x13a>
10005040:	3404      	adds	r4, #4
10005042:	f10b 0b01 	add.w	fp, fp, #1
10005046:	eb04 048b 	add.w	r4, r4, fp, lsl #2
1000504a:	e7c9      	b.n	10004fe0 <__gnu_unwind_pr_common+0xd8>
1000504c:	f1b8 0f00 	cmp.w	r8, #0
10005050:	d120      	bne.n	10005094 <__gnu_unwind_pr_common+0x18c>
10005052:	3408      	adds	r4, #8
10005054:	e7c4      	b.n	10004fe0 <__gnu_unwind_pr_common+0xd8>
10005056:	f1b8 0f00 	cmp.w	r8, #0
1000505a:	d0c0      	beq.n	10004fde <__gnu_unwind_pr_common+0xd6>
1000505c:	4620      	mov	r0, r4
1000505e:	3404      	adds	r4, #4
10005060:	f7ff fcf4 	bl	10004a4c <selfrel_offset31>
10005064:	4606      	mov	r6, r0
10005066:	63ac      	str	r4, [r5, #56]	; 0x38
10005068:	4628      	mov	r0, r5
1000506a:	e000      	b.n	1000506e <__gnu_unwind_pr_common+0x166>
1000506c:	bf00      	nop
1000506e:	2800      	cmp	r0, #0
10005070:	d0a3      	beq.n	10004fba <__gnu_unwind_pr_common+0xb2>
10005072:	4638      	mov	r0, r7
10005074:	4632      	mov	r2, r6
10005076:	210f      	movs	r1, #15
10005078:	f7ff fefc 	bl	10004e74 <_Unwind_SetGR>
1000507c:	2007      	movs	r0, #7
1000507e:	e79d      	b.n	10004fbc <__gnu_unwind_pr_common+0xb4>
10005080:	f8d5 9020 	ldr.w	r9, [r5, #32]
10005084:	210d      	movs	r1, #13
10005086:	4638      	mov	r0, r7
10005088:	f7ff fece 	bl	10004e28 <_Unwind_GetGR>
1000508c:	4581      	cmp	r9, r0
1000508e:	d079      	beq.n	10005184 <__gnu_unwind_pr_common+0x27c>
10005090:	6823      	ldr	r3, [r4, #0]
10005092:	e7d3      	b.n	1000503c <__gnu_unwind_pr_common+0x134>
10005094:	f8d5 9020 	ldr.w	r9, [r5, #32]
10005098:	210d      	movs	r1, #13
1000509a:	4638      	mov	r0, r7
1000509c:	f7ff fec4 	bl	10004e28 <_Unwind_GetGR>
100050a0:	4581      	cmp	r9, r0
100050a2:	d1d6      	bne.n	10005052 <__gnu_unwind_pr_common+0x14a>
100050a4:	6aab      	ldr	r3, [r5, #40]	; 0x28
100050a6:	429c      	cmp	r4, r3
100050a8:	d1d3      	bne.n	10005052 <__gnu_unwind_pr_common+0x14a>
100050aa:	4620      	mov	r0, r4
100050ac:	210f      	movs	r1, #15
100050ae:	f7ff fccd 	bl	10004a4c <selfrel_offset31>
100050b2:	4602      	mov	r2, r0
100050b4:	4638      	mov	r0, r7
100050b6:	f7ff fedd 	bl	10004e74 <_Unwind_SetGR>
100050ba:	4638      	mov	r0, r7
100050bc:	462a      	mov	r2, r5
100050be:	2100      	movs	r1, #0
100050c0:	f7ff fed8 	bl	10004e74 <_Unwind_SetGR>
100050c4:	2007      	movs	r0, #7
100050c6:	e779      	b.n	10004fbc <__gnu_unwind_pr_common+0xb4>
100050c8:	6823      	ldr	r3, [r4, #0]
100050ca:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
100050ce:	f1b8 0f00 	cmp.w	r8, #0
100050d2:	d1d5      	bne.n	10005080 <__gnu_unwind_pr_common+0x178>
100050d4:	9a02      	ldr	r2, [sp, #8]
100050d6:	b112      	cbz	r2, 100050de <__gnu_unwind_pr_common+0x1d6>
100050d8:	f1bb 0f00 	cmp.w	fp, #0
100050dc:	d1ae      	bne.n	1000503c <__gnu_unwind_pr_common+0x134>
100050de:	f105 0358 	add.w	r3, r5, #88	; 0x58
100050e2:	f8cd 800c 	str.w	r8, [sp, #12]
100050e6:	f104 0a04 	add.w	sl, r4, #4
100050ea:	46b0      	mov	r8, r6
100050ec:	f04f 0900 	mov.w	r9, #0
100050f0:	461e      	mov	r6, r3
100050f2:	e00d      	b.n	10005110 <__gnu_unwind_pr_common+0x208>
100050f4:	4650      	mov	r0, sl
100050f6:	9604      	str	r6, [sp, #16]
100050f8:	2200      	movs	r2, #0
100050fa:	f7ff fd71 	bl	10004be0 <_Unwind_decode_typeinfo_ptr.constprop.0>
100050fe:	ab04      	add	r3, sp, #16
10005100:	4601      	mov	r1, r0
10005102:	4628      	mov	r0, r5
10005104:	f10a 0a04 	add.w	sl, sl, #4
10005108:	e000      	b.n	1000510c <__gnu_unwind_pr_common+0x204>
1000510a:	bf00      	nop
1000510c:	2800      	cmp	r0, #0
1000510e:	d14a      	bne.n	100051a6 <__gnu_unwind_pr_common+0x29e>
10005110:	45d9      	cmp	r9, fp
10005112:	f109 0901 	add.w	r9, r9, #1
10005116:	d1ed      	bne.n	100050f4 <__gnu_unwind_pr_common+0x1ec>
10005118:	210d      	movs	r1, #13
1000511a:	4638      	mov	r0, r7
1000511c:	f7ff fe84 	bl	10004e28 <_Unwind_GetGR>
10005120:	9b04      	ldr	r3, [sp, #16]
10005122:	4602      	mov	r2, r0
10005124:	2006      	movs	r0, #6
10005126:	622a      	str	r2, [r5, #32]
10005128:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
1000512c:	e746      	b.n	10004fbc <__gnu_unwind_pr_common+0xb4>
1000512e:	f1b8 0f00 	cmp.w	r8, #0
10005132:	d1af      	bne.n	10005094 <__gnu_unwind_pr_common+0x18c>
10005134:	6863      	ldr	r3, [r4, #4]
10005136:	6822      	ldr	r2, [r4, #0]
10005138:	1c99      	adds	r1, r3, #2
1000513a:	ea4f 72d2 	mov.w	r2, r2, lsr #31
1000513e:	f43f af3c 	beq.w	10004fba <__gnu_unwind_pr_common+0xb2>
10005142:	f105 0158 	add.w	r1, r5, #88	; 0x58
10005146:	3301      	adds	r3, #1
10005148:	9104      	str	r1, [sp, #16]
1000514a:	d031      	beq.n	100051b0 <__gnu_unwind_pr_common+0x2a8>
1000514c:	1d20      	adds	r0, r4, #4
1000514e:	f7ff fd47 	bl	10004be0 <_Unwind_decode_typeinfo_ptr.constprop.0>
10005152:	ab04      	add	r3, sp, #16
10005154:	4601      	mov	r1, r0
10005156:	4628      	mov	r0, r5
10005158:	e000      	b.n	1000515c <__gnu_unwind_pr_common+0x254>
1000515a:	bf00      	nop
1000515c:	2800      	cmp	r0, #0
1000515e:	f43f af78 	beq.w	10005052 <__gnu_unwind_pr_common+0x14a>
10005162:	4681      	mov	r9, r0
10005164:	210d      	movs	r1, #13
10005166:	4638      	mov	r0, r7
10005168:	f7ff fe5e 	bl	10004e28 <_Unwind_GetGR>
1000516c:	f1b9 0f02 	cmp.w	r9, #2
10005170:	6228      	str	r0, [r5, #32]
10005172:	d122      	bne.n	100051ba <__gnu_unwind_pr_common+0x2b2>
10005174:	462b      	mov	r3, r5
10005176:	9a04      	ldr	r2, [sp, #16]
10005178:	f843 2f2c 	str.w	r2, [r3, #44]!
1000517c:	626b      	str	r3, [r5, #36]	; 0x24
1000517e:	2006      	movs	r0, #6
10005180:	62ac      	str	r4, [r5, #40]	; 0x28
10005182:	e71b      	b.n	10004fbc <__gnu_unwind_pr_common+0xb4>
10005184:	6aab      	ldr	r3, [r5, #40]	; 0x28
10005186:	429c      	cmp	r4, r3
10005188:	d182      	bne.n	10005090 <__gnu_unwind_pr_common+0x188>
1000518a:	2304      	movs	r3, #4
1000518c:	2200      	movs	r2, #0
1000518e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10005192:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10005196:	18e3      	adds	r3, r4, r3
10005198:	636b      	str	r3, [r5, #52]	; 0x34
1000519a:	6823      	ldr	r3, [r4, #0]
1000519c:	2b00      	cmp	r3, #0
1000519e:	db0f      	blt.n	100051c0 <__gnu_unwind_pr_common+0x2b8>
100051a0:	2301      	movs	r3, #1
100051a2:	9301      	str	r3, [sp, #4]
100051a4:	e74d      	b.n	10005042 <__gnu_unwind_pr_common+0x13a>
100051a6:	4646      	mov	r6, r8
100051a8:	6823      	ldr	r3, [r4, #0]
100051aa:	f8dd 800c 	ldr.w	r8, [sp, #12]
100051ae:	e745      	b.n	1000503c <__gnu_unwind_pr_common+0x134>
100051b0:	210d      	movs	r1, #13
100051b2:	4638      	mov	r0, r7
100051b4:	f7ff fe38 	bl	10004e28 <_Unwind_GetGR>
100051b8:	6228      	str	r0, [r5, #32]
100051ba:	9b04      	ldr	r3, [sp, #16]
100051bc:	626b      	str	r3, [r5, #36]	; 0x24
100051be:	e7de      	b.n	1000517e <__gnu_unwind_pr_common+0x276>
100051c0:	f10b 0001 	add.w	r0, fp, #1
100051c4:	210f      	movs	r1, #15
100051c6:	eb04 0080 	add.w	r0, r4, r0, lsl #2
100051ca:	e770      	b.n	100050ae <__gnu_unwind_pr_common+0x1a6>
100051cc:	00000000 	andeq	r0, r0, r0

100051d0 <__aeabi_unwind_cpp_pr0>:
100051d0:	2300      	movs	r3, #0
100051d2:	e699      	b.n	10004f08 <__gnu_unwind_pr_common>

100051d4 <__aeabi_unwind_cpp_pr1>:
100051d4:	2301      	movs	r3, #1
100051d6:	e697      	b.n	10004f08 <__gnu_unwind_pr_common>

100051d8 <__aeabi_unwind_cpp_pr2>:
100051d8:	2302      	movs	r3, #2
100051da:	e695      	b.n	10004f08 <__gnu_unwind_pr_common>

100051dc <_Unwind_VRS_Pop>:
100051dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100051e0:	4606      	mov	r6, r0
100051e2:	b0c3      	sub	sp, #268	; 0x10c
100051e4:	4615      	mov	r5, r2
100051e6:	461c      	mov	r4, r3
100051e8:	2904      	cmp	r1, #4
100051ea:	f200 80c2 	bhi.w	10005372 <_Unwind_VRS_Pop+0x196>
100051ee:	e8df f001 	tbb	[pc, r1]
100051f2:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
100051f6:	2c000003 	stccs	0, cr0, [r0], {3}
100051fa:	f040 80ba 	bne.w	10005372 <_Unwind_VRS_Pop+0x196>
100051fe:	2a10      	cmp	r2, #16
10005200:	f200 80b7 	bhi.w	10005372 <_Unwind_VRS_Pop+0x196>
10005204:	6803      	ldr	r3, [r0, #0]
10005206:	06df      	lsls	r7, r3, #27
10005208:	f100 80b7 	bmi.w	1000537a <_Unwind_VRS_Pop+0x19e>
1000520c:	af20      	add	r7, sp, #128	; 0x80
1000520e:	4638      	mov	r0, r7
10005210:	f000 f9b0 	bl	10005574 <__gnu_Unwind_Save_WMMXC>
10005214:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10005216:	4639      	mov	r1, r7
10005218:	2300      	movs	r3, #0
1000521a:	f04f 0c01 	mov.w	ip, #1
1000521e:	fa0c f203 	lsl.w	r2, ip, r3
10005222:	4620      	mov	r0, r4
10005224:	3301      	adds	r3, #1
10005226:	422a      	tst	r2, r5
10005228:	d003      	beq.n	10005232 <_Unwind_VRS_Pop+0x56>
1000522a:	f850 2b04 	ldr.w	r2, [r0], #4
1000522e:	4604      	mov	r4, r0
10005230:	600a      	str	r2, [r1, #0]
10005232:	2b04      	cmp	r3, #4
10005234:	f101 0104 	add.w	r1, r1, #4
10005238:	d1f1      	bne.n	1000521e <_Unwind_VRS_Pop+0x42>
1000523a:	4638      	mov	r0, r7
1000523c:	63b4      	str	r4, [r6, #56]	; 0x38
1000523e:	f000 f98f 	bl	10005560 <__gnu_Unwind_Restore_WMMXC>
10005242:	2000      	movs	r0, #0
10005244:	b043      	add	sp, #268	; 0x10c
10005246:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000524a:	2c03      	cmp	r4, #3
1000524c:	f040 8091 	bne.w	10005372 <_Unwind_VRS_Pop+0x196>
10005250:	fa1f f882 	uxth.w	r8, r2
10005254:	0c14      	lsrs	r4, r2, #16
10005256:	eb08 4512 	add.w	r5, r8, r2, lsr #16
1000525a:	2d10      	cmp	r5, #16
1000525c:	f200 8089 	bhi.w	10005372 <_Unwind_VRS_Pop+0x196>
10005260:	6803      	ldr	r3, [r0, #0]
10005262:	071a      	lsls	r2, r3, #28
10005264:	f100 80cd 	bmi.w	10005402 <_Unwind_VRS_Pop+0x226>
10005268:	af20      	add	r7, sp, #128	; 0x80
1000526a:	4638      	mov	r0, r7
1000526c:	f000 f956 	bl	1000551c <__gnu_Unwind_Save_WMMXD>
10005270:	6bb5      	ldr	r5, [r6, #56]	; 0x38
10005272:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
10005276:	f1b8 0f00 	cmp.w	r8, #0
1000527a:	d00b      	beq.n	10005294 <_Unwind_VRS_Pop+0xb8>
1000527c:	460b      	mov	r3, r1
1000527e:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
10005282:	ea4f 08c8 	mov.w	r8, r8, lsl #3
10005286:	1ae8      	subs	r0, r5, r3
10005288:	581a      	ldr	r2, [r3, r0]
1000528a:	f843 2b04 	str.w	r2, [r3], #4
1000528e:	428b      	cmp	r3, r1
10005290:	d1fa      	bne.n	10005288 <_Unwind_VRS_Pop+0xac>
10005292:	4445      	add	r5, r8
10005294:	4638      	mov	r0, r7
10005296:	63b5      	str	r5, [r6, #56]	; 0x38
10005298:	f000 f91e 	bl	100054d8 <__gnu_Unwind_Restore_WMMXD>
1000529c:	2000      	movs	r0, #0
1000529e:	b043      	add	sp, #268	; 0x10c
100052a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100052a4:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
100052a8:	ea4f 4812 	mov.w	r8, r2, lsr #16
100052ac:	b295      	uxth	r5, r2
100052ae:	2b01      	cmp	r3, #1
100052b0:	d15f      	bne.n	10005372 <_Unwind_VRS_Pop+0x196>
100052b2:	2c01      	cmp	r4, #1
100052b4:	eb08 0905 	add.w	r9, r8, r5
100052b8:	d058      	beq.n	1000536c <_Unwind_VRS_Pop+0x190>
100052ba:	f1b9 0f20 	cmp.w	r9, #32
100052be:	d858      	bhi.n	10005372 <_Unwind_VRS_Pop+0x196>
100052c0:	f1b8 0f0f 	cmp.w	r8, #15
100052c4:	d975      	bls.n	100053b2 <_Unwind_VRS_Pop+0x1d6>
100052c6:	2c05      	cmp	r4, #5
100052c8:	46a9      	mov	r9, r5
100052ca:	f000 80a4 	beq.w	10005416 <_Unwind_VRS_Pop+0x23a>
100052ce:	2d00      	cmp	r5, #0
100052d0:	d14f      	bne.n	10005372 <_Unwind_VRS_Pop+0x196>
100052d2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100052d4:	b365      	cbz	r5, 10005330 <_Unwind_VRS_Pop+0x154>
100052d6:	af20      	add	r7, sp, #128	; 0x80
100052d8:	f04f 0900 	mov.w	r9, #0
100052dc:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
100052e0:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
100052e4:	3f04      	subs	r7, #4
100052e6:	f853 1b04 	ldr.w	r1, [r3], #4
100052ea:	429d      	cmp	r5, r3
100052ec:	f847 1f04 	str.w	r1, [r7, #4]!
100052f0:	d1f9      	bne.n	100052e6 <_Unwind_VRS_Pop+0x10a>
100052f2:	f1b9 0f00 	cmp.w	r9, #0
100052f6:	d00f      	beq.n	10005318 <_Unwind_VRS_Pop+0x13c>
100052f8:	466f      	mov	r7, sp
100052fa:	4641      	mov	r1, r8
100052fc:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
10005300:	2910      	cmp	r1, #16
10005302:	bf38      	it	cc
10005304:	2110      	movcc	r1, #16
10005306:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
1000530a:	3984      	subs	r1, #132	; 0x84
1000530c:	f853 0b04 	ldr.w	r0, [r3], #4
10005310:	429d      	cmp	r5, r3
10005312:	f841 0f04 	str.w	r0, [r1, #4]!
10005316:	d1f9      	bne.n	1000530c <_Unwind_VRS_Pop+0x130>
10005318:	2c01      	cmp	r4, #1
1000531a:	d07a      	beq.n	10005412 <_Unwind_VRS_Pop+0x236>
1000531c:	f1b8 0f0f 	cmp.w	r8, #15
10005320:	63b5      	str	r5, [r6, #56]	; 0x38
10005322:	d96a      	bls.n	100053fa <_Unwind_VRS_Pop+0x21e>
10005324:	f1b9 0f00 	cmp.w	r9, #0
10005328:	d002      	beq.n	10005330 <_Unwind_VRS_Pop+0x154>
1000532a:	4668      	mov	r0, sp
1000532c:	f000 f8cc 	bl	100054c8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10005330:	2000      	movs	r0, #0
10005332:	b043      	add	sp, #268	; 0x10c
10005334:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005338:	b9dc      	cbnz	r4, 10005372 <_Unwind_VRS_Pop+0x196>
1000533a:	6b87      	ldr	r7, [r0, #56]	; 0x38
1000533c:	4623      	mov	r3, r4
1000533e:	fa1f fc82 	uxth.w	ip, r2
10005342:	2001      	movs	r0, #1
10005344:	1d34      	adds	r4, r6, #4
10005346:	fa00 f103 	lsl.w	r1, r0, r3
1000534a:	463a      	mov	r2, r7
1000534c:	ea11 0f0c 	tst.w	r1, ip
10005350:	d004      	beq.n	1000535c <_Unwind_VRS_Pop+0x180>
10005352:	f852 1b04 	ldr.w	r1, [r2], #4
10005356:	4617      	mov	r7, r2
10005358:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
1000535c:	3301      	adds	r3, #1
1000535e:	2b10      	cmp	r3, #16
10005360:	d1f1      	bne.n	10005346 <_Unwind_VRS_Pop+0x16a>
10005362:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
10005366:	d1e3      	bne.n	10005330 <_Unwind_VRS_Pop+0x154>
10005368:	63b7      	str	r7, [r6, #56]	; 0x38
1000536a:	e003      	b.n	10005374 <_Unwind_VRS_Pop+0x198>
1000536c:	f1b9 0f10 	cmp.w	r9, #16
10005370:	d90b      	bls.n	1000538a <_Unwind_VRS_Pop+0x1ae>
10005372:	2002      	movs	r0, #2
10005374:	b043      	add	sp, #268	; 0x10c
10005376:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000537a:	f023 0310 	bic.w	r3, r3, #16
1000537e:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
10005382:	6033      	str	r3, [r6, #0]
10005384:	f000 f8f6 	bl	10005574 <__gnu_Unwind_Save_WMMXC>
10005388:	e740      	b.n	1000520c <_Unwind_VRS_Pop+0x30>
1000538a:	f1b8 0f0f 	cmp.w	r8, #15
1000538e:	d8f0      	bhi.n	10005372 <_Unwind_VRS_Pop+0x196>
10005390:	6803      	ldr	r3, [r0, #0]
10005392:	07d8      	lsls	r0, r3, #31
10005394:	d450      	bmi.n	10005438 <_Unwind_VRS_Pop+0x25c>
10005396:	af20      	add	r7, sp, #128	; 0x80
10005398:	4638      	mov	r0, r7
1000539a:	f000 f889 	bl	100054b0 <__gnu_Unwind_Save_VFP>
1000539e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100053a0:	2d00      	cmp	r5, #0
100053a2:	d199      	bne.n	100052d8 <_Unwind_VRS_Pop+0xfc>
100053a4:	461d      	mov	r5, r3
100053a6:	3504      	adds	r5, #4
100053a8:	4638      	mov	r0, r7
100053aa:	63b5      	str	r5, [r6, #56]	; 0x38
100053ac:	f000 f87c 	bl	100054a8 <__gnu_Unwind_Restore_VFP>
100053b0:	e7be      	b.n	10005330 <_Unwind_VRS_Pop+0x154>
100053b2:	f1b9 0f10 	cmp.w	r9, #16
100053b6:	d958      	bls.n	1000546a <_Unwind_VRS_Pop+0x28e>
100053b8:	2c05      	cmp	r4, #5
100053ba:	d1da      	bne.n	10005372 <_Unwind_VRS_Pop+0x196>
100053bc:	6833      	ldr	r3, [r6, #0]
100053be:	f1a9 0910 	sub.w	r9, r9, #16
100053c2:	07dd      	lsls	r5, r3, #31
100053c4:	d509      	bpl.n	100053da <_Unwind_VRS_Pop+0x1fe>
100053c6:	f023 0301 	bic.w	r3, r3, #1
100053ca:	4630      	mov	r0, r6
100053cc:	f043 0302 	orr.w	r3, r3, #2
100053d0:	f840 3b48 	str.w	r3, [r0], #72
100053d4:	f000 f874 	bl	100054c0 <__gnu_Unwind_Save_VFP_D>
100053d8:	6833      	ldr	r3, [r6, #0]
100053da:	0759      	lsls	r1, r3, #29
100053dc:	d421      	bmi.n	10005422 <_Unwind_VRS_Pop+0x246>
100053de:	a820      	add	r0, sp, #128	; 0x80
100053e0:	f000 f86e 	bl	100054c0 <__gnu_Unwind_Save_VFP_D>
100053e4:	466f      	mov	r7, sp
100053e6:	f1c8 0510 	rsb	r5, r8, #16
100053ea:	4638      	mov	r0, r7
100053ec:	f000 f870 	bl	100054d0 <__gnu_Unwind_Save_VFP_D_16_to_31>
100053f0:	2d00      	cmp	r5, #0
100053f2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100053f4:	dd81      	ble.n	100052fa <_Unwind_VRS_Pop+0x11e>
100053f6:	af20      	add	r7, sp, #128	; 0x80
100053f8:	e770      	b.n	100052dc <_Unwind_VRS_Pop+0x100>
100053fa:	a820      	add	r0, sp, #128	; 0x80
100053fc:	f000 f85c 	bl	100054b8 <__gnu_Unwind_Restore_VFP_D>
10005400:	e790      	b.n	10005324 <_Unwind_VRS_Pop+0x148>
10005402:	f023 0308 	bic.w	r3, r3, #8
10005406:	f500 70a8 	add.w	r0, r0, #336	; 0x150
1000540a:	6033      	str	r3, [r6, #0]
1000540c:	f000 f886 	bl	1000551c <__gnu_Unwind_Save_WMMXD>
10005410:	e72a      	b.n	10005268 <_Unwind_VRS_Pop+0x8c>
10005412:	af20      	add	r7, sp, #128	; 0x80
10005414:	e7c7      	b.n	100053a6 <_Unwind_VRS_Pop+0x1ca>
10005416:	2d00      	cmp	r5, #0
10005418:	f43f af5b 	beq.w	100052d2 <_Unwind_VRS_Pop+0xf6>
1000541c:	6833      	ldr	r3, [r6, #0]
1000541e:	075a      	lsls	r2, r3, #29
10005420:	d5e0      	bpl.n	100053e4 <_Unwind_VRS_Pop+0x208>
10005422:	f023 0304 	bic.w	r3, r3, #4
10005426:	4630      	mov	r0, r6
10005428:	f840 3bd0 	str.w	r3, [r0], #208
1000542c:	f000 f850 	bl	100054d0 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005430:	f1b8 0f0f 	cmp.w	r8, #15
10005434:	d8d6      	bhi.n	100053e4 <_Unwind_VRS_Pop+0x208>
10005436:	e7d2      	b.n	100053de <_Unwind_VRS_Pop+0x202>
10005438:	f023 0303 	bic.w	r3, r3, #3
1000543c:	4630      	mov	r0, r6
1000543e:	f840 3b48 	str.w	r3, [r0], #72
10005442:	f000 f835 	bl	100054b0 <__gnu_Unwind_Save_VFP>
10005446:	2c01      	cmp	r4, #1
10005448:	d0a5      	beq.n	10005396 <_Unwind_VRS_Pop+0x1ba>
1000544a:	f1b8 0f0f 	cmp.w	r8, #15
1000544e:	f63f af40 	bhi.w	100052d2 <_Unwind_VRS_Pop+0xf6>
10005452:	af20      	add	r7, sp, #128	; 0x80
10005454:	4638      	mov	r0, r7
10005456:	f000 f833 	bl	100054c0 <__gnu_Unwind_Save_VFP_D>
1000545a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
1000545c:	2d00      	cmp	r5, #0
1000545e:	f47f af3b 	bne.w	100052d8 <_Unwind_VRS_Pop+0xfc>
10005462:	4638      	mov	r0, r7
10005464:	f000 f828 	bl	100054b8 <__gnu_Unwind_Restore_VFP_D>
10005468:	e762      	b.n	10005330 <_Unwind_VRS_Pop+0x154>
1000546a:	6833      	ldr	r3, [r6, #0]
1000546c:	07d9      	lsls	r1, r3, #31
1000546e:	d5ea      	bpl.n	10005446 <_Unwind_VRS_Pop+0x26a>
10005470:	2c05      	cmp	r4, #5
10005472:	d1e1      	bne.n	10005438 <_Unwind_VRS_Pop+0x25c>
10005474:	f023 0301 	bic.w	r3, r3, #1
10005478:	4630      	mov	r0, r6
1000547a:	af20      	add	r7, sp, #128	; 0x80
1000547c:	f043 0302 	orr.w	r3, r3, #2
10005480:	f840 3b48 	str.w	r3, [r0], #72
10005484:	f000 f81c 	bl	100054c0 <__gnu_Unwind_Save_VFP_D>
10005488:	4638      	mov	r0, r7
1000548a:	f000 f819 	bl	100054c0 <__gnu_Unwind_Save_VFP_D>
1000548e:	e7e4      	b.n	1000545a <_Unwind_VRS_Pop+0x27e>

10005490 <__restore_core_regs>:
10005490:	f100 0134 	add.w	r1, r0, #52	; 0x34
10005494:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
10005498:	469c      	mov	ip, r3
1000549a:	46a6      	mov	lr, r4
1000549c:	f84c 5d04 	str.w	r5, [ip, #-4]!
100054a0:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100054a4:	46e5      	mov	sp, ip
100054a6:	bd00      	pop	{pc}

100054a8 <__gnu_Unwind_Restore_VFP>:
100054a8:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
100054ac:	4770      	bx	lr
100054ae:	bf00      	nop

100054b0 <__gnu_Unwind_Save_VFP>:
100054b0:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
100054b4:	4770      	bx	lr
100054b6:	bf00      	nop

100054b8 <__gnu_Unwind_Restore_VFP_D>:
100054b8:	ec90 0b20 	vldmia	r0, {d0-d15}
100054bc:	4770      	bx	lr
100054be:	bf00      	nop

100054c0 <__gnu_Unwind_Save_VFP_D>:
100054c0:	ec80 0b20 	vstmia	r0, {d0-d15}
100054c4:	4770      	bx	lr
100054c6:	bf00      	nop

100054c8 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
100054c8:	ecd0 0b20 	vldmia	r0, {d16-d31}
100054cc:	4770      	bx	lr
100054ce:	bf00      	nop

100054d0 <__gnu_Unwind_Save_VFP_D_16_to_31>:
100054d0:	ecc0 0b20 	vstmia	r0, {d16-d31}
100054d4:	4770      	bx	lr
100054d6:	bf00      	nop

100054d8 <__gnu_Unwind_Restore_WMMXD>:
100054d8:	ecf0 0102 	ldfe	f0, [r0], #8
100054dc:	ecf0 1102 	ldfe	f1, [r0], #8
100054e0:	ecf0 2102 	ldfe	f2, [r0], #8
100054e4:	ecf0 3102 	ldfe	f3, [r0], #8
100054e8:	ecf0 4102 	ldfe	f4, [r0], #8
100054ec:	ecf0 5102 	ldfe	f5, [r0], #8
100054f0:	ecf0 6102 	ldfe	f6, [r0], #8
100054f4:	ecf0 7102 	ldfe	f7, [r0], #8
100054f8:	ecf0 8102 	ldfp	f0, [r0], #8
100054fc:	ecf0 9102 	ldfp	f1, [r0], #8
10005500:	ecf0 a102 	ldfp	f2, [r0], #8
10005504:	ecf0 b102 	ldfp	f3, [r0], #8
10005508:	ecf0 c102 	ldfp	f4, [r0], #8
1000550c:	ecf0 d102 	ldfp	f5, [r0], #8
10005510:	ecf0 e102 	ldfp	f6, [r0], #8
10005514:	ecf0 f102 	ldfp	f7, [r0], #8
10005518:	4770      	bx	lr
1000551a:	bf00      	nop

1000551c <__gnu_Unwind_Save_WMMXD>:
1000551c:	ece0 0102 	stfe	f0, [r0], #8
10005520:	ece0 1102 	stfe	f1, [r0], #8
10005524:	ece0 2102 	stfe	f2, [r0], #8
10005528:	ece0 3102 	stfe	f3, [r0], #8
1000552c:	ece0 4102 	stfe	f4, [r0], #8
10005530:	ece0 5102 	stfe	f5, [r0], #8
10005534:	ece0 6102 	stfe	f6, [r0], #8
10005538:	ece0 7102 	stfe	f7, [r0], #8
1000553c:	ece0 8102 	stfp	f0, [r0], #8
10005540:	ece0 9102 	stfp	f1, [r0], #8
10005544:	ece0 a102 	stfp	f2, [r0], #8
10005548:	ece0 b102 	stfp	f3, [r0], #8
1000554c:	ece0 c102 	stfp	f4, [r0], #8
10005550:	ece0 d102 	stfp	f5, [r0], #8
10005554:	ece0 e102 	stfp	f6, [r0], #8
10005558:	ece0 f102 	stfp	f7, [r0], #8
1000555c:	4770      	bx	lr
1000555e:	bf00      	nop

10005560 <__gnu_Unwind_Restore_WMMXC>:
10005560:	fcb0 8101 	ldc2	1, cr8, [r0], #4
10005564:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10005568:	fcb0 a101 	ldc2	1, cr10, [r0], #4
1000556c:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10005570:	4770      	bx	lr
10005572:	bf00      	nop

10005574 <__gnu_Unwind_Save_WMMXC>:
10005574:	fca0 8101 	stc2	1, cr8, [r0], #4
10005578:	fca0 9101 	stc2	1, cr9, [r0], #4
1000557c:	fca0 a101 	stc2	1, cr10, [r0], #4
10005580:	fca0 b101 	stc2	1, cr11, [r0], #4
10005584:	4770      	bx	lr
10005586:	bf00      	nop

10005588 <_Unwind_RaiseException>:
10005588:	46ec      	mov	ip, sp
1000558a:	b500      	push	{lr}
1000558c:	e92d 5000 	stmdb	sp!, {ip, lr}
10005590:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005594:	f04f 0300 	mov.w	r3, #0
10005598:	e92d 000c 	stmdb	sp!, {r2, r3}
1000559c:	a901      	add	r1, sp, #4
1000559e:	f7ff fbb7 	bl	10004d10 <__gnu_Unwind_RaiseException>
100055a2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100055a6:	b012      	add	sp, #72	; 0x48
100055a8:	4770      	bx	lr
100055aa:	bf00      	nop

100055ac <_Unwind_Resume>:
100055ac:	46ec      	mov	ip, sp
100055ae:	b500      	push	{lr}
100055b0:	e92d 5000 	stmdb	sp!, {ip, lr}
100055b4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100055b8:	f04f 0300 	mov.w	r3, #0
100055bc:	e92d 000c 	stmdb	sp!, {r2, r3}
100055c0:	a901      	add	r1, sp, #4
100055c2:	f7ff fbe3 	bl	10004d8c <__gnu_Unwind_Resume>
100055c6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100055ca:	b012      	add	sp, #72	; 0x48
100055cc:	4770      	bx	lr
100055ce:	bf00      	nop

100055d0 <_Unwind_Resume_or_Rethrow>:
100055d0:	46ec      	mov	ip, sp
100055d2:	b500      	push	{lr}
100055d4:	e92d 5000 	stmdb	sp!, {ip, lr}
100055d8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100055dc:	f04f 0300 	mov.w	r3, #0
100055e0:	e92d 000c 	stmdb	sp!, {r2, r3}
100055e4:	a901      	add	r1, sp, #4
100055e6:	f7ff fbf3 	bl	10004dd0 <__gnu_Unwind_Resume_or_Rethrow>
100055ea:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100055ee:	b012      	add	sp, #72	; 0x48
100055f0:	4770      	bx	lr
100055f2:	bf00      	nop

100055f4 <_Unwind_ForcedUnwind>:
100055f4:	46ec      	mov	ip, sp
100055f6:	b500      	push	{lr}
100055f8:	e92d 5000 	stmdb	sp!, {ip, lr}
100055fc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005600:	f04f 0300 	mov.w	r3, #0
10005604:	e92d 000c 	stmdb	sp!, {r2, r3}
10005608:	ab01      	add	r3, sp, #4
1000560a:	f7ff fbb5 	bl	10004d78 <__gnu_Unwind_ForcedUnwind>
1000560e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005612:	b012      	add	sp, #72	; 0x48
10005614:	4770      	bx	lr
10005616:	bf00      	nop

10005618 <_Unwind_Backtrace>:
10005618:	46ec      	mov	ip, sp
1000561a:	b500      	push	{lr}
1000561c:	e92d 5000 	stmdb	sp!, {ip, lr}
10005620:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005624:	f04f 0300 	mov.w	r3, #0
10005628:	e92d 000c 	stmdb	sp!, {r2, r3}
1000562c:	aa01      	add	r2, sp, #4
1000562e:	f7ff fc2d 	bl	10004e8c <__gnu_Unwind_Backtrace>
10005632:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005636:	b012      	add	sp, #72	; 0x48
10005638:	4770      	bx	lr
1000563a:	bf00      	nop

1000563c <next_unwind_byte>:
1000563c:	7a02      	ldrb	r2, [r0, #8]
1000563e:	4603      	mov	r3, r0
10005640:	b98a      	cbnz	r2, 10005666 <next_unwind_byte+0x2a>
10005642:	7a42      	ldrb	r2, [r0, #9]
10005644:	b1b2      	cbz	r2, 10005674 <next_unwind_byte+0x38>
10005646:	6841      	ldr	r1, [r0, #4]
10005648:	3a01      	subs	r2, #1
1000564a:	f04f 0c03 	mov.w	ip, #3
1000564e:	b410      	push	{r4}
10005650:	7242      	strb	r2, [r0, #9]
10005652:	1d0c      	adds	r4, r1, #4
10005654:	6808      	ldr	r0, [r1, #0]
10005656:	f883 c008 	strb.w	ip, [r3, #8]
1000565a:	0202      	lsls	r2, r0, #8
1000565c:	605c      	str	r4, [r3, #4]
1000565e:	0e00      	lsrs	r0, r0, #24
10005660:	bc10      	pop	{r4}
10005662:	601a      	str	r2, [r3, #0]
10005664:	4770      	bx	lr
10005666:	6800      	ldr	r0, [r0, #0]
10005668:	3a01      	subs	r2, #1
1000566a:	721a      	strb	r2, [r3, #8]
1000566c:	0202      	lsls	r2, r0, #8
1000566e:	0e00      	lsrs	r0, r0, #24
10005670:	601a      	str	r2, [r3, #0]
10005672:	4770      	bx	lr
10005674:	20b0      	movs	r0, #176	; 0xb0
10005676:	4770      	bx	lr

10005678 <_Unwind_GetGR.constprop.0>:
10005678:	b510      	push	{r4, lr}
1000567a:	b084      	sub	sp, #16
1000567c:	2300      	movs	r3, #0
1000567e:	220c      	movs	r2, #12
10005680:	ac03      	add	r4, sp, #12
10005682:	4619      	mov	r1, r3
10005684:	9400      	str	r4, [sp, #0]
10005686:	f7ff fbb5 	bl	10004df4 <_Unwind_VRS_Get>
1000568a:	9803      	ldr	r0, [sp, #12]
1000568c:	b004      	add	sp, #16
1000568e:	bd10      	pop	{r4, pc}

10005690 <unwind_UCB_from_context>:
10005690:	e7f2      	b.n	10005678 <_Unwind_GetGR.constprop.0>
10005692:	bf00      	nop

10005694 <__gnu_unwind_execute>:
10005694:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10005698:	f04f 0800 	mov.w	r8, #0
1000569c:	b085      	sub	sp, #20
1000569e:	4606      	mov	r6, r0
100056a0:	460d      	mov	r5, r1
100056a2:	4628      	mov	r0, r5
100056a4:	f7ff ffca 	bl	1000563c <next_unwind_byte>
100056a8:	28b0      	cmp	r0, #176	; 0xb0
100056aa:	4604      	mov	r4, r0
100056ac:	f000 80bc 	beq.w	10005828 <__gnu_unwind_execute+0x194>
100056b0:	0607      	lsls	r7, r0, #24
100056b2:	d520      	bpl.n	100056f6 <__gnu_unwind_execute+0x62>
100056b4:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
100056b8:	2b80      	cmp	r3, #128	; 0x80
100056ba:	d04e      	beq.n	1000575a <__gnu_unwind_execute+0xc6>
100056bc:	2b90      	cmp	r3, #144	; 0x90
100056be:	d037      	beq.n	10005730 <__gnu_unwind_execute+0x9c>
100056c0:	2ba0      	cmp	r3, #160	; 0xa0
100056c2:	d061      	beq.n	10005788 <__gnu_unwind_execute+0xf4>
100056c4:	2bb0      	cmp	r3, #176	; 0xb0
100056c6:	d076      	beq.n	100057b6 <__gnu_unwind_execute+0x122>
100056c8:	2bc0      	cmp	r3, #192	; 0xc0
100056ca:	f000 808d 	beq.w	100057e8 <__gnu_unwind_execute+0x154>
100056ce:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100056d2:	2bd0      	cmp	r3, #208	; 0xd0
100056d4:	d10b      	bne.n	100056ee <__gnu_unwind_execute+0x5a>
100056d6:	f000 0207 	and.w	r2, r0, #7
100056da:	2305      	movs	r3, #5
100056dc:	2101      	movs	r1, #1
100056de:	4630      	mov	r0, r6
100056e0:	3201      	adds	r2, #1
100056e2:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100056e6:	f7ff fd79 	bl	100051dc <_Unwind_VRS_Pop>
100056ea:	2800      	cmp	r0, #0
100056ec:	d0d9      	beq.n	100056a2 <__gnu_unwind_execute+0xe>
100056ee:	2009      	movs	r0, #9
100056f0:	b005      	add	sp, #20
100056f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100056f6:	0083      	lsls	r3, r0, #2
100056f8:	f10d 090c 	add.w	r9, sp, #12
100056fc:	220d      	movs	r2, #13
100056fe:	4630      	mov	r0, r6
10005700:	b2db      	uxtb	r3, r3
10005702:	f8cd 9000 	str.w	r9, [sp]
10005706:	1d1f      	adds	r7, r3, #4
10005708:	2300      	movs	r3, #0
1000570a:	4619      	mov	r1, r3
1000570c:	f7ff fb72 	bl	10004df4 <_Unwind_VRS_Get>
10005710:	9b03      	ldr	r3, [sp, #12]
10005712:	0660      	lsls	r0, r4, #25
10005714:	f04f 020d 	mov.w	r2, #13
10005718:	4630      	mov	r0, r6
1000571a:	f8cd 9000 	str.w	r9, [sp]
1000571e:	bf4c      	ite	mi
10005720:	1bdf      	submi	r7, r3, r7
10005722:	18ff      	addpl	r7, r7, r3
10005724:	2300      	movs	r3, #0
10005726:	9703      	str	r7, [sp, #12]
10005728:	4619      	mov	r1, r3
1000572a:	f7ff fb89 	bl	10004e40 <_Unwind_VRS_Set>
1000572e:	e7b8      	b.n	100056a2 <__gnu_unwind_execute+0xe>
10005730:	f000 030d 	and.w	r3, r0, #13
10005734:	2b0d      	cmp	r3, #13
10005736:	d0da      	beq.n	100056ee <__gnu_unwind_execute+0x5a>
10005738:	af03      	add	r7, sp, #12
1000573a:	2300      	movs	r3, #0
1000573c:	f000 020f 	and.w	r2, r0, #15
10005740:	4630      	mov	r0, r6
10005742:	4619      	mov	r1, r3
10005744:	9700      	str	r7, [sp, #0]
10005746:	f7ff fb55 	bl	10004df4 <_Unwind_VRS_Get>
1000574a:	2300      	movs	r3, #0
1000574c:	220d      	movs	r2, #13
1000574e:	4630      	mov	r0, r6
10005750:	4619      	mov	r1, r3
10005752:	9700      	str	r7, [sp, #0]
10005754:	f7ff fb74 	bl	10004e40 <_Unwind_VRS_Set>
10005758:	e7a3      	b.n	100056a2 <__gnu_unwind_execute+0xe>
1000575a:	0224      	lsls	r4, r4, #8
1000575c:	4628      	mov	r0, r5
1000575e:	f7ff ff6d 	bl	1000563c <next_unwind_byte>
10005762:	4320      	orrs	r0, r4
10005764:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10005768:	d0c1      	beq.n	100056ee <__gnu_unwind_execute+0x5a>
1000576a:	0104      	lsls	r4, r0, #4
1000576c:	2300      	movs	r3, #0
1000576e:	4630      	mov	r0, r6
10005770:	b2a2      	uxth	r2, r4
10005772:	4619      	mov	r1, r3
10005774:	f7ff fd32 	bl	100051dc <_Unwind_VRS_Pop>
10005778:	2800      	cmp	r0, #0
1000577a:	d1b8      	bne.n	100056ee <__gnu_unwind_execute+0x5a>
1000577c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10005780:	bf18      	it	ne
10005782:	f04f 0801 	movne.w	r8, #1
10005786:	e78c      	b.n	100056a2 <__gnu_unwind_execute+0xe>
10005788:	43c2      	mvns	r2, r0
1000578a:	0701      	lsls	r1, r0, #28
1000578c:	4630      	mov	r0, r6
1000578e:	f002 0307 	and.w	r3, r2, #7
10005792:	f44f 627f 	mov.w	r2, #4080	; 0xff0
10005796:	fa42 f203 	asr.w	r2, r2, r3
1000579a:	f04f 0300 	mov.w	r3, #0
1000579e:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
100057a2:	4619      	mov	r1, r3
100057a4:	bf48      	it	mi
100057a6:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
100057aa:	f7ff fd17 	bl	100051dc <_Unwind_VRS_Pop>
100057ae:	2800      	cmp	r0, #0
100057b0:	f43f af77 	beq.w	100056a2 <__gnu_unwind_execute+0xe>
100057b4:	e79b      	b.n	100056ee <__gnu_unwind_execute+0x5a>
100057b6:	28b1      	cmp	r0, #177	; 0xb1
100057b8:	d03b      	beq.n	10005832 <__gnu_unwind_execute+0x19e>
100057ba:	28b2      	cmp	r0, #178	; 0xb2
100057bc:	f000 80a1 	beq.w	10005902 <__gnu_unwind_execute+0x26e>
100057c0:	28b3      	cmp	r0, #179	; 0xb3
100057c2:	d041      	beq.n	10005848 <__gnu_unwind_execute+0x1b4>
100057c4:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
100057c8:	2bb4      	cmp	r3, #180	; 0xb4
100057ca:	d090      	beq.n	100056ee <__gnu_unwind_execute+0x5a>
100057cc:	f000 0207 	and.w	r2, r0, #7
100057d0:	2301      	movs	r3, #1
100057d2:	441a      	add	r2, r3
100057d4:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100057d8:	4619      	mov	r1, r3
100057da:	4630      	mov	r0, r6
100057dc:	f7ff fcfe 	bl	100051dc <_Unwind_VRS_Pop>
100057e0:	2800      	cmp	r0, #0
100057e2:	f43f af5e 	beq.w	100056a2 <__gnu_unwind_execute+0xe>
100057e6:	e782      	b.n	100056ee <__gnu_unwind_execute+0x5a>
100057e8:	28c6      	cmp	r0, #198	; 0xc6
100057ea:	d051      	beq.n	10005890 <__gnu_unwind_execute+0x1fc>
100057ec:	28c7      	cmp	r0, #199	; 0xc7
100057ee:	d062      	beq.n	100058b6 <__gnu_unwind_execute+0x222>
100057f0:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100057f4:	2bc0      	cmp	r3, #192	; 0xc0
100057f6:	d071      	beq.n	100058dc <__gnu_unwind_execute+0x248>
100057f8:	28c8      	cmp	r0, #200	; 0xc8
100057fa:	d076      	beq.n	100058ea <__gnu_unwind_execute+0x256>
100057fc:	28c9      	cmp	r0, #201	; 0xc9
100057fe:	f47f af76 	bne.w	100056ee <__gnu_unwind_execute+0x5a>
10005802:	4628      	mov	r0, r5
10005804:	f7ff ff1a 	bl	1000563c <next_unwind_byte>
10005808:	0302      	lsls	r2, r0, #12
1000580a:	f000 000f 	and.w	r0, r0, #15
1000580e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005812:	3001      	adds	r0, #1
10005814:	4302      	orrs	r2, r0
10005816:	2101      	movs	r1, #1
10005818:	2305      	movs	r3, #5
1000581a:	4630      	mov	r0, r6
1000581c:	f7ff fcde 	bl	100051dc <_Unwind_VRS_Pop>
10005820:	2800      	cmp	r0, #0
10005822:	f43f af3e 	beq.w	100056a2 <__gnu_unwind_execute+0xe>
10005826:	e762      	b.n	100056ee <__gnu_unwind_execute+0x5a>
10005828:	f1b8 0f00 	cmp.w	r8, #0
1000582c:	d01f      	beq.n	1000586e <__gnu_unwind_execute+0x1da>
1000582e:	2000      	movs	r0, #0
10005830:	e75e      	b.n	100056f0 <__gnu_unwind_execute+0x5c>
10005832:	4628      	mov	r0, r5
10005834:	f7ff ff02 	bl	1000563c <next_unwind_byte>
10005838:	4602      	mov	r2, r0
1000583a:	2800      	cmp	r0, #0
1000583c:	f43f af57 	beq.w	100056ee <__gnu_unwind_execute+0x5a>
10005840:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10005844:	d0c8      	beq.n	100057d8 <__gnu_unwind_execute+0x144>
10005846:	e752      	b.n	100056ee <__gnu_unwind_execute+0x5a>
10005848:	4628      	mov	r0, r5
1000584a:	f7ff fef7 	bl	1000563c <next_unwind_byte>
1000584e:	f000 030f 	and.w	r3, r0, #15
10005852:	0302      	lsls	r2, r0, #12
10005854:	4630      	mov	r0, r6
10005856:	3301      	adds	r3, #1
10005858:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
1000585c:	431a      	orrs	r2, r3
1000585e:	2301      	movs	r3, #1
10005860:	4619      	mov	r1, r3
10005862:	f7ff fcbb 	bl	100051dc <_Unwind_VRS_Pop>
10005866:	2800      	cmp	r0, #0
10005868:	f43f af1b 	beq.w	100056a2 <__gnu_unwind_execute+0xe>
1000586c:	e73f      	b.n	100056ee <__gnu_unwind_execute+0x5a>
1000586e:	ac03      	add	r4, sp, #12
10005870:	4643      	mov	r3, r8
10005872:	220e      	movs	r2, #14
10005874:	4641      	mov	r1, r8
10005876:	4630      	mov	r0, r6
10005878:	9400      	str	r4, [sp, #0]
1000587a:	f7ff fabb 	bl	10004df4 <_Unwind_VRS_Get>
1000587e:	4643      	mov	r3, r8
10005880:	220f      	movs	r2, #15
10005882:	4630      	mov	r0, r6
10005884:	4641      	mov	r1, r8
10005886:	9400      	str	r4, [sp, #0]
10005888:	f7ff fada 	bl	10004e40 <_Unwind_VRS_Set>
1000588c:	4640      	mov	r0, r8
1000588e:	e72f      	b.n	100056f0 <__gnu_unwind_execute+0x5c>
10005890:	4628      	mov	r0, r5
10005892:	f7ff fed3 	bl	1000563c <next_unwind_byte>
10005896:	f000 030f 	and.w	r3, r0, #15
1000589a:	0302      	lsls	r2, r0, #12
1000589c:	4630      	mov	r0, r6
1000589e:	3301      	adds	r3, #1
100058a0:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100058a4:	431a      	orrs	r2, r3
100058a6:	2303      	movs	r3, #3
100058a8:	4619      	mov	r1, r3
100058aa:	f7ff fc97 	bl	100051dc <_Unwind_VRS_Pop>
100058ae:	2800      	cmp	r0, #0
100058b0:	f43f aef7 	beq.w	100056a2 <__gnu_unwind_execute+0xe>
100058b4:	e71b      	b.n	100056ee <__gnu_unwind_execute+0x5a>
100058b6:	4628      	mov	r0, r5
100058b8:	f7ff fec0 	bl	1000563c <next_unwind_byte>
100058bc:	4602      	mov	r2, r0
100058be:	2800      	cmp	r0, #0
100058c0:	f43f af15 	beq.w	100056ee <__gnu_unwind_execute+0x5a>
100058c4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
100058c8:	f47f af11 	bne.w	100056ee <__gnu_unwind_execute+0x5a>
100058cc:	2104      	movs	r1, #4
100058ce:	4630      	mov	r0, r6
100058d0:	f7ff fc84 	bl	100051dc <_Unwind_VRS_Pop>
100058d4:	2800      	cmp	r0, #0
100058d6:	f43f aee4 	beq.w	100056a2 <__gnu_unwind_execute+0xe>
100058da:	e708      	b.n	100056ee <__gnu_unwind_execute+0x5a>
100058dc:	f000 020f 	and.w	r2, r0, #15
100058e0:	2303      	movs	r3, #3
100058e2:	3201      	adds	r2, #1
100058e4:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
100058e8:	e776      	b.n	100057d8 <__gnu_unwind_execute+0x144>
100058ea:	4628      	mov	r0, r5
100058ec:	f7ff fea6 	bl	1000563c <next_unwind_byte>
100058f0:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
100058f4:	f000 030f 	and.w	r3, r0, #15
100058f8:	3210      	adds	r2, #16
100058fa:	3301      	adds	r3, #1
100058fc:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
10005900:	e789      	b.n	10005816 <__gnu_unwind_execute+0x182>
10005902:	2300      	movs	r3, #0
10005904:	f10d 090c 	add.w	r9, sp, #12
10005908:	220d      	movs	r2, #13
1000590a:	4630      	mov	r0, r6
1000590c:	4619      	mov	r1, r3
1000590e:	f8cd 9000 	str.w	r9, [sp]
10005912:	f7ff fa6f 	bl	10004df4 <_Unwind_VRS_Get>
10005916:	4628      	mov	r0, r5
10005918:	f7ff fe90 	bl	1000563c <next_unwind_byte>
1000591c:	0602      	lsls	r2, r0, #24
1000591e:	f04f 0402 	mov.w	r4, #2
10005922:	d50b      	bpl.n	1000593c <__gnu_unwind_execute+0x2a8>
10005924:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10005928:	9b03      	ldr	r3, [sp, #12]
1000592a:	40a0      	lsls	r0, r4
1000592c:	3407      	adds	r4, #7
1000592e:	4418      	add	r0, r3
10005930:	9003      	str	r0, [sp, #12]
10005932:	4628      	mov	r0, r5
10005934:	f7ff fe82 	bl	1000563c <next_unwind_byte>
10005938:	0603      	lsls	r3, r0, #24
1000593a:	d4f3      	bmi.n	10005924 <__gnu_unwind_execute+0x290>
1000593c:	9b03      	ldr	r3, [sp, #12]
1000593e:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10005942:	f8cd 9000 	str.w	r9, [sp]
10005946:	4630      	mov	r0, r6
10005948:	40a2      	lsls	r2, r4
1000594a:	f503 7301 	add.w	r3, r3, #516	; 0x204
1000594e:	441a      	add	r2, r3
10005950:	2300      	movs	r3, #0
10005952:	9203      	str	r2, [sp, #12]
10005954:	4619      	mov	r1, r3
10005956:	220d      	movs	r2, #13
10005958:	f7ff fa72 	bl	10004e40 <_Unwind_VRS_Set>
1000595c:	e6a1      	b.n	100056a2 <__gnu_unwind_execute+0xe>
1000595e:	bf00      	nop

10005960 <__gnu_unwind_frame>:
10005960:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10005962:	460b      	mov	r3, r1
10005964:	f04f 0c03 	mov.w	ip, #3
10005968:	4618      	mov	r0, r3
1000596a:	3208      	adds	r2, #8
1000596c:	f852 3c04 	ldr.w	r3, [r2, #-4]
10005970:	b500      	push	{lr}
10005972:	b085      	sub	sp, #20
10005974:	9202      	str	r2, [sp, #8]
10005976:	a901      	add	r1, sp, #4
10005978:	0e1a      	lsrs	r2, r3, #24
1000597a:	f88d c00c 	strb.w	ip, [sp, #12]
1000597e:	021b      	lsls	r3, r3, #8
10005980:	f88d 200d 	strb.w	r2, [sp, #13]
10005984:	9301      	str	r3, [sp, #4]
10005986:	f7ff fe85 	bl	10005694 <__gnu_unwind_execute>
1000598a:	b005      	add	sp, #20
1000598c:	f85d fb04 	ldr.w	pc, [sp], #4

10005990 <_Unwind_GetRegionStart>:
10005990:	b508      	push	{r3, lr}
10005992:	f7ff fe7d 	bl	10005690 <unwind_UCB_from_context>
10005996:	6c80      	ldr	r0, [r0, #72]	; 0x48
10005998:	bd08      	pop	{r3, pc}
1000599a:	bf00      	nop

1000599c <_Unwind_GetLanguageSpecificData>:
1000599c:	b508      	push	{r3, lr}
1000599e:	f7ff fe77 	bl	10005690 <unwind_UCB_from_context>
100059a2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
100059a4:	79c3      	ldrb	r3, [r0, #7]
100059a6:	3302      	adds	r3, #2
100059a8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
100059ac:	bd08      	pop	{r3, pc}
100059ae:	bf00      	nop

100059b0 <__aeabi_idiv0>:
100059b0:	4770      	bx	lr
100059b2:	bf00      	nop

100059b4 <abort>:
100059b4:	2006      	movs	r0, #6
100059b6:	b508      	push	{r3, lr}
100059b8:	f000 f804 	bl	100059c4 <raise>
100059bc:	2001      	movs	r0, #1
100059be:	f7fe f871 	bl	10003aa4 <_exit>
100059c2:	bf00      	nop

100059c4 <raise>:
100059c4:	b538      	push	{r3, r4, r5, lr}
100059c6:	281f      	cmp	r0, #31
100059c8:	4b14      	ldr	r3, [pc, #80]	; (10005a1c <raise+0x58>)
100059ca:	681d      	ldr	r5, [r3, #0]
100059cc:	d820      	bhi.n	10005a10 <raise+0x4c>
100059ce:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
100059d2:	4604      	mov	r4, r0
100059d4:	b162      	cbz	r2, 100059f0 <raise+0x2c>
100059d6:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
100059da:	b14b      	cbz	r3, 100059f0 <raise+0x2c>
100059dc:	2b01      	cmp	r3, #1
100059de:	d015      	beq.n	10005a0c <raise+0x48>
100059e0:	1c59      	adds	r1, r3, #1
100059e2:	d00f      	beq.n	10005a04 <raise+0x40>
100059e4:	2500      	movs	r5, #0
100059e6:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
100059ea:	4798      	blx	r3
100059ec:	4628      	mov	r0, r5
100059ee:	bd38      	pop	{r3, r4, r5, pc}
100059f0:	4628      	mov	r0, r5
100059f2:	f000 f82b 	bl	10005a4c <_getpid_r>
100059f6:	4622      	mov	r2, r4
100059f8:	4601      	mov	r1, r0
100059fa:	4628      	mov	r0, r5
100059fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10005a00:	f000 b80e 	b.w	10005a20 <_kill_r>
10005a04:	2316      	movs	r3, #22
10005a06:	2001      	movs	r0, #1
10005a08:	602b      	str	r3, [r5, #0]
10005a0a:	bd38      	pop	{r3, r4, r5, pc}
10005a0c:	2000      	movs	r0, #0
10005a0e:	bd38      	pop	{r3, r4, r5, pc}
10005a10:	2316      	movs	r3, #22
10005a12:	f04f 30ff 	mov.w	r0, #4294967295
10005a16:	602b      	str	r3, [r5, #0]
10005a18:	bd38      	pop	{r3, r4, r5, pc}
10005a1a:	bf00      	nop
10005a1c:	38000014 	stmdacc	r0, {r2, r4}

10005a20 <_kill_r>:
10005a20:	b570      	push	{r4, r5, r6, lr}
10005a22:	460c      	mov	r4, r1
10005a24:	4603      	mov	r3, r0
10005a26:	4d08      	ldr	r5, [pc, #32]	; (10005a48 <_kill_r+0x28>)
10005a28:	2600      	movs	r6, #0
10005a2a:	4620      	mov	r0, r4
10005a2c:	4611      	mov	r1, r2
10005a2e:	461c      	mov	r4, r3
10005a30:	602e      	str	r6, [r5, #0]
10005a32:	f7fe f82f 	bl	10003a94 <_kill>
10005a36:	1c43      	adds	r3, r0, #1
10005a38:	d000      	beq.n	10005a3c <_kill_r+0x1c>
10005a3a:	bd70      	pop	{r4, r5, r6, pc}
10005a3c:	682b      	ldr	r3, [r5, #0]
10005a3e:	2b00      	cmp	r3, #0
10005a40:	d0fb      	beq.n	10005a3a <_kill_r+0x1a>
10005a42:	6023      	str	r3, [r4, #0]
10005a44:	bd70      	pop	{r4, r5, r6, pc}
10005a46:	bf00      	nop
10005a48:	38008d70 	stmdacc	r0, {r4, r5, r6, r8, sl, fp, pc}

10005a4c <_getpid_r>:
10005a4c:	f7fe b820 	b.w	10003a90 <_getpid>

10005a50 <_init>:
10005a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005a52:	bf00      	nop
10005a54:	bcf8      	pop	{r3, r4, r5, r6, r7}
10005a56:	bc08      	pop	{r3}
10005a58:	469e      	mov	lr, r3
10005a5a:	4770      	bx	lr

10005a5c <_fini>:
10005a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005a5e:	bf00      	nop
10005a60:	bcf8      	pop	{r3, r4, r5, r6, r7}
10005a62:	bc08      	pop	{r3}
10005a64:	469e      	mov	lr, r3
10005a66:	4770      	bx	lr
10005a68:	6e69616d 	powvsez	f6, f1, #5.0
10005a6c:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
10005a70:	0000006b 	andeq	r0, r0, fp, rrx
10005a74:	6e69616d 	powvsez	f6, f1, #5.0
10005a78:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
10005a7c:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
10005a80:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
10005a84:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
10005a88:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
10005a8c:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
10005a90:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005a94:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10005a98:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10005a9c:	7564206b 	strbvc	r2, [r4, #-107]!	; 0xffffff95
10005aa0:	6520706d 	strvs	r7, [r0, #-109]!	; 0xffffff93
10005aa4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
10005aa8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
10005aac:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005ab0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10005ab4:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10005ab8:	205b3a6b 	subscs	r3, fp, fp, ror #20
10005abc:	00000000 	andeq	r0, r0, r0
10005ac0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005ac4:	00000020 	andeq	r0, r0, r0, lsr #32
10005ac8:	000d205d 	andeq	r2, sp, sp, asr r0
10005acc:	73696874 	cmnvc	r9, #116, 16	; 0x740000
10005ad0:	20736920 	rsbscs	r6, r3, r0, lsr #18
10005ad4:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
10005ad8:	0000000a 	andeq	r0, r0, sl
10005adc:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10005ae0:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
10005ae4:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
10005ae8:	72462073 	subvc	r2, r6, #115	; 0x73
10005aec:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
10005af0:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
10005af4:	00000000 	andeq	r0, r0, r0
10005af8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
10005afc:	00000d74 	andeq	r0, r0, r4, ror sp
10005b00:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10005b04:	6f77206f 	svcvs	0x0077206f
10005b08:	20646c72 	rsbcs	r6, r4, r2, ror ip
10005b0c:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10005b10:	000a0d2e 	andeq	r0, sl, lr, lsr #26

10005b14 <__func__.1>:
10005b14:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005b18:	00000035 	andeq	r0, r0, r5, lsr r0

10005b1c <__func__.2>:
10005b1c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005b20:	00000034 	andeq	r0, r0, r4, lsr r0

10005b24 <__func__.3>:
10005b24:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005b28:	00000033 	andeq	r0, r0, r3, lsr r0

10005b2c <__func__.4>:
10005b2c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005b30:	00000032 	andeq	r0, r0, r2, lsr r0

10005b34 <__func__.5>:
10005b34:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005b38:	00000031 	andeq	r0, r0, r1, lsr r0

10005b3c <__func__.6>:
10005b3c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005b40:	00000030 	andeq	r0, r0, r0, lsr r0
10005b44:	00696e66 	rsbeq	r6, r9, r6, ror #28
10005b48:	2b696e66 	blcs	11a614e8 <__copy_table_end__+0x1a5b3ac>
10005b4c:	00000000 	andeq	r0, r0, r0
10005b50:	006e616e 	rsbeq	r6, lr, lr, ror #2
10005b54:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10005b60 <pow10.0>:
10005b60:	00000000 	andeq	r0, r0, r0
10005b64:	3ff00000 	svccc	0x00f00000	; IMB
10005b68:	00000000 	andeq	r0, r0, r0
10005b6c:	40240000 	eormi	r0, r4, r0
10005b70:	00000000 	andeq	r0, r0, r0
10005b74:	40590000 	subsmi	r0, r9, r0
10005b78:	00000000 	andeq	r0, r0, r0
10005b7c:	408f4000 	addmi	r4, pc, r0
10005b80:	00000000 	andeq	r0, r0, r0
10005b84:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005b88:	00000000 	andeq	r0, r0, r0
10005b8c:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005b90:	00000000 	andeq	r0, r0, r0
10005b94:	412e8480 	smlawbmi	lr, r0, r4, r8
10005b98:	00000000 	andeq	r0, r0, r0
10005b9c:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005ba0:	00000000 	andeq	r0, r0, r0
10005ba4:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005ba8:	00000000 	andeq	r0, r0, r0
10005bac:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005bb0:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
10005bb4:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
10005bb8:	3a4e5255 	bcc	1139a514 <__copy_table_end__+0x13943d8>
10005bbc:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
10005bc0:	20583830 	subscs	r3, r8, r0, lsr r8
10005bc4:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005bc8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10005bcc:	61745320 	cmnvs	r4, r0, lsr #6
10005bd0:	5b3a6b63 	blpl	10ea0964 <__copy_table_end__+0xe9a828>
10005bd4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005bd8:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
10005bdc:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
10005be0:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
10005be4:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
10005be8:	000a0d64 	andeq	r0, sl, r4, ror #26
10005bec:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10005bf0:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
10005bf4:	5b3a2074 	blpl	10e8ddcc <__copy_table_end__+0xe87c90>
10005bf8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005bfc:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
10005c00:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
10005c04:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
10005c08:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
10005c0c:	000a0d64 	andeq	r0, sl, r4, ror #26
10005c10:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10005c14:	61745320 	cmnvs	r4, r0, lsr #6
10005c18:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
10005c1c:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
10005c20:	6f442068 	svcvs	0x00442068
10005c24:	61776e77 	cmnvs	r7, r7, ror lr
10005c28:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
10005c2c:	000a0d64 	andeq	r0, sl, r4, ror #26
10005c30:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
10005c34:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
10005c38:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
10005c3c:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10005c40:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
10005c44:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10005c48:	20706d75 	rsbscs	r6, r0, r5, ror sp
10005c4c:	0000000d 	andeq	r0, r0, sp
10005c50:	61745320 	cmnvs	r4, r0, lsr #6
10005c54:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10005c58:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10005c5c:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10005c60:	00000000 	andeq	r0, r0, r0
10005c64:	20305220 	eorscs	r5, r0, r0, lsr #4
10005c68:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005c6c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005c70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005c74:	0000000a 	andeq	r0, r0, sl
10005c78:	20315220 	eorscs	r5, r1, r0, lsr #4
10005c7c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005c80:	30257830 	eorcc	r7, r5, r0, lsr r8
10005c84:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005c88:	0000000a 	andeq	r0, r0, sl
10005c8c:	20325220 	eorscs	r5, r2, r0, lsr #4
10005c90:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005c94:	30257830 	eorcc	r7, r5, r0, lsr r8
10005c98:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005c9c:	0000000a 	andeq	r0, r0, sl
10005ca0:	20335220 	eorscs	r5, r3, r0, lsr #4
10005ca4:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ca8:	30257830 	eorcc	r7, r5, r0, lsr r8
10005cac:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005cb0:	0000000a 	andeq	r0, r0, sl
10005cb4:	20345220 	eorscs	r5, r4, r0, lsr #4
10005cb8:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005cbc:	30257830 	eorcc	r7, r5, r0, lsr r8
10005cc0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005cc4:	0000000a 	andeq	r0, r0, sl
10005cc8:	20355220 	eorscs	r5, r5, r0, lsr #4
10005ccc:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005cd0:	30257830 	eorcc	r7, r5, r0, lsr r8
10005cd4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005cd8:	0000000a 	andeq	r0, r0, sl
10005cdc:	20365220 	eorscs	r5, r6, r0, lsr #4
10005ce0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ce4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ce8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005cec:	0000000a 	andeq	r0, r0, sl
10005cf0:	20375220 	eorscs	r5, r7, r0, lsr #4
10005cf4:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005cf8:	30257830 	eorcc	r7, r5, r0, lsr r8
10005cfc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d00:	0000000a 	andeq	r0, r0, sl
10005d04:	20385220 	eorscs	r5, r8, r0, lsr #4
10005d08:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d0c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d10:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d14:	0000000a 	andeq	r0, r0, sl
10005d18:	20395220 	eorscs	r5, r9, r0, lsr #4
10005d1c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d20:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d24:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d28:	0000000a 	andeq	r0, r0, sl
10005d2c:	30315220 	eorscc	r5, r1, r0, lsr #4
10005d30:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d34:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d38:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d3c:	0000000a 	andeq	r0, r0, sl
10005d40:	31315220 	teqcc	r1, r0, lsr #4
10005d44:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d48:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d4c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d50:	0000000a 	andeq	r0, r0, sl
10005d54:	32315220 	eorscc	r5, r1, #32, 4
10005d58:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d5c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d60:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d64:	0000000a 	andeq	r0, r0, sl
10005d68:	20524c20 	subscs	r4, r2, r0, lsr #24
10005d6c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d70:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d74:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d78:	0000000a 	andeq	r0, r0, sl
10005d7c:	20435020 	subcs	r5, r3, r0, lsr #32
10005d80:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d84:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d88:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005d8c:	0000000a 	andeq	r0, r0, sl
10005d90:	52535020 	subspl	r5, r3, #32
10005d94:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005d98:	30257830 	eorcc	r7, r5, r0, lsr r8
10005d9c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005da0:	0000000a 	andeq	r0, r0, sl
10005da4:	61745320 	cmnvs	r4, r0, lsr #6
10005da8:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10005dac:	3a6c6c61 	bcc	11b20f38 <__copy_table_end__+0x1b1adfc>
10005db0:	00000020 	andeq	r0, r0, r0, lsr #32
10005db4:	00000d20 	andeq	r0, r0, r0, lsr #26
10005db8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005dbc:	78452030 	stmdavc	r5, {r4, r5, sp}^
10005dc0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
10005dc4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005dc8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005dcc:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005dd0:	3a657461 	bcc	11962f5c <__copy_table_end__+0x195ce20>
10005dd4:	00000000 	andeq	r0, r0, r0
10005dd8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ddc:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005de0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005de4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005de8:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
10005dec:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005df0:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005df4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005df8:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005e00 <pow10.0+0x2a0>
10005dfc:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005e00:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005e04:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005e08:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
10005e0c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005e10:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005e14:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
10005e18:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005e1c:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
10005e20:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
10005e24:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
10005e28:	3a2e2e2e 	bcc	10b916e8 <__copy_table_end__+0xb8b5ac>
10005e2c:	00000000 	andeq	r0, r0, r0
10005e30:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005e34:	50535020 	subspl	r5, r3, r0, lsr #32
10005e38:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e3c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e40:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e44:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005e48:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005e4c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005e50:	50534d20 	subspl	r4, r3, r0, lsr #26
10005e54:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e58:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e5c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e60:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005e64:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005e68:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005e6c:	72502033 	subsvc	r2, r0, #51	; 0x33
10005e70:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
10005e74:	2065646f 	rsbcs	r6, r5, pc, ror #8
10005e78:	6f666542 	svcvs	0x00666542
10005e7c:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10005e80:	3a2e5152 	bcc	10b9a3d0 <__copy_table_end__+0xb94294>
10005e84:	00000000 	andeq	r0, r0, r0
10005e88:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005e8c:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005e90:	20646165 	rsbcs	r6, r4, r5, ror #2
10005e94:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10005e98:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005e9c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ea0:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ea4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ea8:	6f725020 	svcvs	0x00725020
10005eac:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10005eb0:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10005eb8 <pow10.0+0x358>
10005eb4:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10005eb8:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ebc:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ec0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005ec4:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10005ec8:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005ecc:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10005ed0:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
10005ed4:	2e2e6570 	mcrcs	5, 1, r6, cr14, cr0, {3}
10005ed8:	3a2e2e2e 	bcc	10b91798 <__copy_table_end__+0xb8b65c>
10005edc:	00000000 	andeq	r0, r0, r0
10005ee0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ee4:	61745320 	cmnvs	r4, r0, lsr #6
10005ee8:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10005eec:	72462064 	subvc	r2, r6, #100	; 0x64
10005ef0:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
10005ef4:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ef8:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005efc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005f00:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
10005f04:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
10005f08:	72462064 	subvc	r2, r6, #100	; 0x64
10005f0c:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
10005f10:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005f14:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005f18:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005f1c:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
10005f20:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
10005f24:	61432074 	hvcvs	12804	; 0x3204
10005f28:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
10005f2c:	2e656c75 	mcrcs	12, 3, r6, cr5, cr5, {3}
10005f30:	3a2e2e2e 	bcc	10b917f0 <__copy_table_end__+0xb8b6b4>
10005f34:	00000000 	andeq	r0, r0, r0
10005f38:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005f3c:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005f40:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005f44:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005f48:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10005f4c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005f50:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005f54:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005f58:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005f60 <pow10.0+0x400>
10005f5c:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005f60:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005f64:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005f68:	5d2e2e65 	stcpl	14, cr2, [lr, #-404]!	; 0xfffffe6c
10005f6c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005f70:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005f74:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10005f78:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10005f7c:	53207974 			; <UNDEFINED> instruction: 0x53207974
10005f80:	6b636174 	blvs	118de558 <__copy_table_end__+0x18d841c>
10005f84:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005f88:	3a2e2e2e 	bcc	10b91848 <__copy_table_end__+0xb8b70c>
10005f8c:	00000000 	andeq	r0, r0, r0
10005f90:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005f94:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005f98:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005f9c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005fa0:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
10005fa4:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005fa8:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005fac:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005fb0:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005fb8 <pow10.0+0x458>
10005fb4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005fb8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005fbc:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005fc0:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
10005fc4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005fc8:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
10005fcc:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
10005fd0:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
10005fd4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
10005fd8:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
10005fdc:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005fe0:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005fe4:	72754320 	rsbsvc	r4, r5, #32, 6	; 0x80000000
10005fe8:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
10005fec:	6b736154 	blvs	11cde544 <__copy_table_end__+0x1cd8408>
10005ff0:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
10005ff4:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10005ff8:	61745320 	cmnvs	r4, r0, lsr #6
10005ffc:	50206b63 	eorpl	r6, r0, r3, ror #22
10006000:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
10006004:	7830203a 	ldmdavc	r0!, {r1, r3, r4, r5, sp}
10006008:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
1000600c:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10006010:	61745320 	cmnvs	r4, r0, lsr #6
10006014:	53206b63 			; <UNDEFINED> instruction: 0x53206b63
10006018:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
1000601c:	7830203a 	ldmdavc	r0!, {r1, r3, r4, r5, sp}
10006020:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10006024:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10006028:	61745320 	cmnvs	r4, r0, lsr #6
1000602c:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10006030:	736c6c75 	cmnvc	ip, #29952	; 0x7500
10006034:	7830203a 	ldmdavc	r0!, {r1, r3, r4, r5, sp}
10006038:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
1000603c:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10006040:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
10006044:	00000000 	andeq	r0, r0, r0
10006048:	20726d54 	rsbscs	r6, r2, r4, asr sp
1000604c:	00637653 	rsbeq	r7, r3, r3, asr r6

10006050 <_global_impure_ptr>:
10006050:	38000018 	stmdacc	r0, {r3, r4}

10006054 <__EH_FRAME_BEGIN__>:
10006054:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10006058 <__exidx_start-0x18>:
10006058:	8101b108 	tsthi	r1, r8, lsl #2
1000605c:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10006060:	00000000 	andeq	r0, r0, r0
10006064:	8101b108 	tsthi	r1, r8, lsl #2
10006068:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
1000606c:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10006070 <__exidx_end-0xc0>:
10006070:	7fffda40 	svcvc	0x00ffda40
10006074:	80b0b0b0 	ldrhthi	fp, [r0], r0
10006078:	7fffdaa8 	svcvc	0x00ffdaa8
1000607c:	00000001 	andeq	r0, r0, r1
10006080:	7fffea68 	svcvc	0x00ffea68
10006084:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10006088:	7fffeafc 	svcvc	0x00ffeafc
1000608c:	80a8b0b0 	strhthi	fp, [r8], r0
10006090:	7fffeb4c 	svcvc	0x00ffeb4c
10006094:	00000001 	andeq	r0, r0, r1
10006098:	7fffeb58 	svcvc	0x00ffeb58
1000609c:	80aab0b0 	strhthi	fp, [sl], r0
100060a0:	7fffeb90 	svcvc	0x00ffeb90
100060a4:	80b273ae 	adcshi	r7, r2, lr, lsr #7
100060a8:	7fffec64 	svcvc	0x00ffec64
100060ac:	00000001 	andeq	r0, r0, r1
100060b0:	7fffec60 	svcvc	0x00ffec60
100060b4:	80383fab 	eorshi	r3, r8, fp, lsr #31
100060b8:	7fffecc0 	svcvc	0x00ffecc0
100060bc:	00000001 	andeq	r0, r0, r1
100060c0:	7fffeccc 	svcvc	0x00ffeccc
100060c4:	80aab0b0 	strhthi	fp, [sl], r0
100060c8:	7fffed08 	svcvc	0x00ffed08
100060cc:	00000001 	andeq	r0, r0, r1
100060d0:	7fffedbc 	svcvc	0x00ffedbc
100060d4:	80b20eab 	adcshi	r0, r2, fp, lsr #29
100060d8:	7fffee30 	svcvc	0x00ffee30
100060dc:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
100060e0:	7ffff0f0 	svcvc	0x00fff0f0
100060e4:	00000001 	andeq	r0, r0, r1
100060e8:	7ffff0f4 	svcvc	0x00fff0f4
100060ec:	80023fad 	andhi	r3, r2, sp, lsr #31
100060f0:	7ffff3a0 	svcvc	0x00fff3a0
100060f4:	00000001 	andeq	r0, r0, r1
100060f8:	7ffff580 	svcvc	0x00fff580
100060fc:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10006100:	7ffff590 	svcvc	0x00fff590
10006104:	00000001 	andeq	r0, r0, r1
10006108:	7ffff58c 	svcvc	0x00fff58c
1000610c:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10006110:	7ffff850 	svcvc	0x00fff850
10006114:	80048400 	andhi	r8, r4, r0, lsl #8
10006118:	7ffff878 	svcvc	0x00fff878
1000611c:	7fffff3c 	svcvc	0x00ffff3c
10006120:	7ffff87c 	svcvc	0x00fff87c
10006124:	7fffff40 	svcvc	0x00ffff40
10006128:	7ffff888 	svcvc	0x00fff888
1000612c:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10006130 <__copy_table_start__>:
10006130:	1000613c 	andne	r6, r0, ip, lsr r1
10006134:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10006138:	00000114 	andeq	r0, r0, r4, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <fd_msp_stack_parser>:
static volatile stack_parser_t fd_msp_stack_parser = fault_dump_callstack;
38000004:	10001bfd 	strdne	r1, [r0], -sp

38000008 <fd_psp_stack_parser>:
static volatile stack_parser_t fd_psp_stack_parser = fault_dump_callstack;
38000008:	10001bfd 	strdne	r1, [r0], -sp

3800000c <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
3800000c:	00000004 	andeq	r0, r0, r4

38000010 <ulCriticalNesting>:
PRIVILEGED_DATA static volatile uint32_t ulCriticalNesting = 0xaaaaaaaaUL;
38000010:	aaaaaaaa 	bge	36aaaac0 <__copy_table_end__+0x26aa4984>

38000014 <_impure_ptr>:
38000014:	38000018 	stmdacc	r0, {r3, r4}

38000018 <impure_data>:
38000018:	00000000 	andeq	r0, r0, r0
3800001c:	38000304 	stmdacc	r0, {r2, r8, r9}
38000020:	3800036c 	stmdacc	r0, {r2, r3, r5, r6, r8, r9}
38000024:	380003d4 	stmdacc	r0, {r2, r4, r6, r7, r8, r9}
	...
380000c0:	00000001 	andeq	r0, r0, r1
380000c4:	00000000 	andeq	r0, r0, r0
380000c8:	abcd330e 	blge	3734cd08 <__copy_table_end__+0x27346bcc>
380000cc:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000d0:	0005deec 	andeq	sp, r5, ip, ror #29
380000d4:	0000000b 	andeq	r0, r0, fp
	...

38000440 <__atexit_recursive_mutex>:
38000440:	38008d6c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl, fp, pc}

38000444 <__init_array_start>:
38000444:	10003d11 	andne	r3, r0, r1, lsl sp

38000448 <__frame_dummy_init_array_entry>:
38000448:	100007e5 	andne	r0, r0, r5, ror #15

3800044c <__do_global_dtors_aux_fini_array_entry>:
3800044c:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000450 <__bss_start__>:
38000450:	00000000 	andeq	r0, r0, r0

38000454 <object.0>:
	...

3800046c <main_task.0>:
3800046c:	00000000 	andeq	r0, r0, r0

38000470 <ucHeap>:
	...

38008470 <buffer.0>:
	...

38008570 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38008570:	00000000 	andeq	r0, r0, r0

38008574 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
38008574:	00000000 	andeq	r0, r0, r0

38008578 <frame.1>:
	...

380085b8 <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
380085b8:	00000000 	andeq	r0, r0, r0

380085bc <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
380085bc:	00000000 	andeq	r0, r0, r0

380085c0 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
380085c0:	00000000 	andeq	r0, r0, r0

380085c4 <pxReadyTasksLists>:
	...

38008650 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
38008650:	00000000 	andeq	r0, r0, r0

38008654 <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
38008654:	00000000 	andeq	r0, r0, r0

38008658 <uxIdleTaskStack.2>:
	...

38008858 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
38008858:	00000000 	andeq	r0, r0, r0

3800885c <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
3800885c:	00000000 	andeq	r0, r0, r0

38008860 <uxTimerTaskStack.0>:
	...

38008a60 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
38008a60:	00000000 	andeq	r0, r0, r0

38008a64 <xDelayedTaskList1>:
	...

38008a80 <xDelayedTaskList2>:
	...

38008a9c <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
38008a9c:	00000000 	andeq	r0, r0, r0

38008aa0 <xIdleTaskTCB.3>:
	...

38008b14 <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
38008b14:	00000000 	andeq	r0, r0, r0

38008b18 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
38008b18:	00000000 	andeq	r0, r0, r0

38008b1c <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
38008b1c:	00000000 	andeq	r0, r0, r0

38008b20 <xPendingReadyList>:
	...

38008b3c <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
38008b3c:	00000000 	andeq	r0, r0, r0

38008b40 <xSuspendedTaskList>:
	...

38008b5c <xTasksWaitingTermination>:
	...

38008b78 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
38008b78:	00000000 	andeq	r0, r0, r0

38008b7c <xTimerTaskTCB.1>:
	...

38008bf0 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
38008bf0:	00000000 	andeq	r0, r0, r0

38008bf4 <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
38008bf4:	00000000 	andeq	r0, r0, r0

38008bf8 <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
38008bf8:	00000000 	andeq	r0, r0, r0

38008bfc <ucStaticTimerQueueStorage.1>:
	...

38008c9c <xActiveTimerList1>:
	...

38008cb8 <xActiveTimerList2>:
	...

38008cd4 <xLastTime.2>:
38008cd4:	00000000 	andeq	r0, r0, r0

38008cd8 <xStaticTimerQueue.0>:
	...

38008d3c <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
38008d3c:	00000000 	andeq	r0, r0, r0

38008d40 <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
38008d40:	00000000 	andeq	r0, r0, r0

38008d44 <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
38008d44:	00000000 	andeq	r0, r0, r0

38008d48 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
38008d48:	00000000 	andeq	r0, r0, r0

38008d4c <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
38008d4c:	00000000 	andeq	r0, r0, r0

38008d50 <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
38008d50:	00000000 	andeq	r0, r0, r0

38008d54 <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
38008d54:	00000000 	andeq	r0, r0, r0

38008d58 <xStart>:
	...

38008d60 <ulStoppedTimerCompensation>:
    PRIVILEGED_DATA static uint32_t ulStoppedTimerCompensation = 0;
38008d60:	00000000 	andeq	r0, r0, r0

38008d64 <ulTimerCountsForOneTick>:
    PRIVILEGED_DATA static uint32_t ulTimerCountsForOneTick = 0;
38008d64:	00000000 	andeq	r0, r0, r0

38008d68 <xMaximumPossibleSuppressedTicks>:
    PRIVILEGED_DATA static uint32_t xMaximumPossibleSuppressedTicks = 0;
38008d68:	00000000 	andeq	r0, r0, r0

38008d6c <__lock___atexit_recursive_mutex>:
38008d6c:	00000000 	andeq	r0, r0, r0

38008d70 <errno>:
38008d70:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38008d74 <__end__-0x4>:
38008d74:	00000000 	andeq	r0, r0, r0

38008d78 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
}
   0:	00003541 	andeq	r3, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
     * exception or zero for Thread mode.*/
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );

    if( ulCurrentInterrupt == 0 )
    {
        xReturn = pdFALSE;
   8:	01006962 	tsteq	r0, r2, ror #18
    {
        xReturn = pdTRUE;
    }

    return xReturn;
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
        xReturn = pdFALSE;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
}
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
        BaseType_t xReturn = pdFAIL;
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000077a 	andeq	r0, r0, sl, ror r7
       4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	000000dc 	ldrdeq	r0, [r0], -ip
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	0000740c 	andeq	r7, r0, ip, lsl #8
}
      14:	0001c500 	andeq	ip, r1, r0, lsl #10
        if(ch == '\n' || it >= size) {
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	000000ac 	andeq	r0, r0, ip, lsr #1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000003 	andeq	r0, r0, r3
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	aa080102 	bge	20044c <__RAM_SIZE+0x10044c>
      40:	02000000 	andeq	r0, r0, #0
        BaseType_t xReturn = pdFAIL;
      44:	02de0502 	sbcseq	r0, lr, #8388608	; 0x800000
    }
      48:	02020000 	andeq	r0, r2, #0
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
      4c:	0000c907 	andeq	ip, r0, r7, lsl #18
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
        pc = *sp;
      54:	00000293 	muleq	r0, r3, r2
      58:	35070402 	strcc	r0, [r7, #-1026]	; 0xfffffbfe
    return pc;
      5c:	02000002 	andeq	r0, r0, #2
        return 0;
      60:	028e0508 	addeq	r0, lr, #8, 10	; 0x2000000
                    xMaxSize = pxBlock->xBlockSize;
                }

                if( pxBlock->xBlockSize < xMinSize )
                {
                    xMinSize = pxBlock->xBlockSize;
      64:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      68:	00023007 	andeq	r3, r2, r7
      6c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      70:	00746e69 	rsbseq	r6, r4, r9, ror #28
      74:	3a070402 	bcc	1c1084 <__RAM_SIZE+0xc1084>
      78:	03000002 	movweq	r0, #2
      7c:	00000002 	andeq	r0, r0, r2
            prvUnlockQueue( pxQueue );
      80:	30131803 	andscc	r1, r3, r3, lsl #16
            ( void ) xTaskResumeAll();
      84:	03000000 	movweq	r0, #0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	0000000a 	andeq	r0, r0, sl
      8c:	7417d104 	ldrvc	sp, [r7], #-260	; 0xfffffefc
      90:	02000000 	andeq	r0, r0, #0
        taskENTER_CRITICAL();
      94:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	04050000 	streq	r0, [r5], #-0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	b3080102 	movwlt	r0, #33026	; 0x8102
      a0:	06000000 	streq	r0, [r0], -r0
                else if( xEntryTimeSet == pdFALSE )
      a4:	0000009c 	muleq	r0, ip, r0
        taskEXIT_CRITICAL();
      a8:	00740407 	rsbseq	r0, r4, r7, lsl #8
        vTaskSuspendAll();
      ac:	bd030000 	stclt	0, cr0, [r3, #-0]
        prvLockQueue( pxQueue );
      b0:	0500000a 	streq	r0, [r0, #-10]
      b4:	00511a4a 	subseq	r1, r1, sl, asr #20
      b8:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
      bc:	06000002 	streq	r0, [r0], -r2
      c0:	00c62e5c 	sbceq	r2, r6, ip, asr lr
      c4:	04070000 	streq	r0, [r7], #-0
      c8:	000000cc 	andeq	r0, r0, ip, asr #1
      cc:	00020f08 	andeq	r0, r2, r8, lsl #30
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	7b090100 	blvc	2404d8 <__RAM_SIZE+0x1404d8>
      d4:	e3000000 	movw	r0, #0
      d8:	0a000000 	beq	e0 <__STACKSEAL_SIZE+0xe0>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00000074 	andeq	r0, r0, r4, ror r0
      e0:	0b007fff 	bleq	200e4 <__HEAP_SIZE+0x1f0e4>
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00000223 	andeq	r0, r0, r3, lsr #4
      e8:	d2090d01 	andle	r0, r9, #1, 26	; 0x40
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	01000000 	mrseq	r0, (UNDEF: 0)
      f0:	04700305 	ldrbteq	r0, [r0], #-773	; 0xfffffcfb
                prvUnlockQueue( pxQueue );
      f4:	010c3800 	tsteq	ip, r0, lsl #16
      f8:	0000020a 	andeq	r0, r0, sl, lsl #4
                if( xTaskResumeAll() == pdFALSE )
      fc:	01055f01 	tsteq	r5, r1, lsl #30
     100:	0000006d 	andeq	r0, r0, sp, rrx
                    taskYIELD_WITHIN_API();
     104:	10000964 	andne	r0, r0, r4, ror #18
                    if( xInheritanceOccurred != pdFALSE )
     108:	1000099c 	mulne	r0, ip, r9
                return errQUEUE_EMPTY;
     10c:	00000000 	andeq	r0, r0, r0
                        taskENTER_CRITICAL();
     110:	0001a601 	andeq	sl, r1, r1, lsl #12
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00410d00 	subeq	r0, r1, r0, lsl #26
     118:	60010000 	andvs	r0, r1, r0
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00006d09 	andeq	r6, r0, r9, lsl #26
                        taskEXIT_CRITICAL();
     120:	00002600 	andeq	r2, r0, r0, lsl #12
     124:	00002000 	andeq	r2, r0, r0
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     128:	2b010e00 	blcs	43930 <__HEAP_SIZE+0x42930>
     12c:	01000000 	mrseq	r0, (UNDEF: 0)
     130:	6d011065 	stcvs	0, cr1, [r1, #-404]	; 0xfffffe6c
     134:	01000000 	mrseq	r0, (UNDEF: 0)
     138:	00000151 	andeq	r0, r0, r1, asr r1
     13c:	0000a80f 	andeq	sl, r0, pc, lsl #16
     140:	00870f00 	addeq	r0, r7, r0, lsl #30
     144:	a80f0000 	stmdage	pc, {}	; <UNPREDICTABLE>
     148:	0f000000 	svceq	0x00000000
     14c:	000000a8 	andeq	r0, r0, r8, lsr #1
     150:	096a1000 	stmdbeq	sl!, {ip}^
     154:	06c61000 	strbeq	r1, [r6], r0
     158:	70110000 	andsvc	r0, r1, r0
     15c:	d4100009 	ldrle	r0, [r0], #-9
     160:	71000006 	tstvc	r0, r6
     164:	12000001 	andne	r0, r0, #1
     168:	03055001 	movweq	r5, #20481	; 0x5001
     16c:	10005af8 	strdne	r5, [r0], -r8
     170:	09741000 	ldmdbeq	r4!, {ip}^
     174:	06e11000 	strbteq	r1, [r1], r0
     178:	7a100000 	bvc	400180 <__RAM_SIZE+0x300180>
     17c:	ef100009 	svc	0x00100009
     180:	10000006 	andne	r0, r0, r6
     184:	1000097e 	andne	r0, r0, lr, ror r9
     188:	000001a6 	andeq	r0, r0, r6, lsr #3
     18c:	00098a13 	andeq	r8, r9, r3, lsl sl
     190:	0006fd10 	andeq	pc, r6, r0, lsl sp	; <UNPREDICTABLE>
     194:	50011200 	andpl	r1, r1, r0, lsl #4
     198:	5b000305 	blpl	db4 <__Vectors_Size+0x5f4>
     19c:	01121000 	tsteq	r2, r0
     1a0:	7f740251 	svcvc	0x00740251
     1a4:	cf140000 	svcgt	0x00140000
     1a8:	01000002 	tsteq	r0, r2
     1ac:	00010d54 	andeq	r0, r1, r4, asr sp
     1b0:	44100008 	ldrmi	r0, [r0], #-8
     1b4:	50100008 	andspl	r0, r0, r8
     1b8:	01000000 	mrseq	r0, (UNDEF: 0)
     1bc:	00000243 	andeq	r0, r0, r3, asr #4
     1c0:	00024715 	andeq	r4, r2, r5, lsl r7
     1c4:	19550100 	ldmdbne	r5, {r8}^
     1c8:	000000ba 	strheq	r0, [r0], -sl
     1cc:	046c0305 	strbteq	r0, [ip], #-773	; 0xfffffcfb
     1d0:	d10d3800 	tstle	sp, r0, lsl #16
     1d4:	0100001c 	tsteq	r0, ip, lsl r0
     1d8:	00ae1056 	adceq	r1, lr, r6, asr r0
     1dc:	009c0000 	addseq	r0, ip, r0
     1e0:	00940000 	addseq	r0, r4, r0
     1e4:	1a110000 	bne	4401ec <__RAM_SIZE+0x3401ec>
     1e8:	0b100008 	bleq	400210 <__RAM_SIZE+0x300210>
     1ec:	22000007 	andcs	r0, r0, #7
     1f0:	12000002 	andne	r0, r0, #2
     1f4:	03055001 	movweq	r5, #20481	; 0x5001
     1f8:	10000941 	andne	r0, r0, r1, asr #18
     1fc:	05510112 	ldrbeq	r0, [r1, #-274]	; 0xfffffeee
     200:	005a6803 	subseq	r6, sl, r3, lsl #16
     204:	52011210 	andpl	r1, r1, #16, 4
     208:	08000a03 	stmdaeq	r0, {r0, r1, r9, fp}
     20c:	01530112 	cmpeq	r3, r2, lsl r1
     210:	7d021230 	sfmvc	f1, 4, [r2, #-192]	; 0xffffff40
     214:	12310100 	eorsne	r0, r1, #0, 2
     218:	05047d02 	streq	r7, [r4, #-3330]	; 0xfffff2fe
     21c:	00046c03 	andeq	r6, r4, r3, lsl #24
     220:	26110038 			; <UNDEFINED> instruction: 0x26110038
     224:	fd100008 	ldc2	0, cr0, [r0, #-32]	; 0xffffffe0
     228:	39000006 	stmdbcc	r0, {r1, r2}
     22c:	12000002 	andne	r0, r0, #2
     230:	03055001 	movweq	r5, #20481	; 0x5001
     234:	10005a74 	andne	r5, r0, r4, ror sl
     238:	08301000 	ldmdaeq	r0!, {ip}
     23c:	071a1000 	ldreq	r1, [sl, -r0]
     240:	14000000 	strne	r0, [r0], #-0
     244:	00000047 	andeq	r0, r0, r7, asr #32
     248:	010d4701 	tsteq	sp, r1, lsl #14
     24c:	10000940 	andne	r0, r0, r0, asr #18
     250:	10000964 	andne	r0, r0, r4, ror #18
     254:	000000d1 	ldrdeq	r0, [r0], -r1
     258:	0002b701 	andeq	fp, r2, r1, lsl #14
     25c:	00be1600 	adcseq	r1, lr, r0, lsl #12
     260:	47010000 	strmi	r0, [r1, -r0]
     264:	00009a23 	andeq	r9, r0, r3, lsr #20
     268:	0000f500 	andeq	pc, r0, r0, lsl #10
     26c:	0000f100 	andeq	pc, r0, r0, lsl #2
     270:	00930d00 	addseq	r0, r3, r0, lsl #26
     274:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
     278:	00006d09 	andeq	r6, r0, r9, lsl #26
     27c:	00011a00 	andeq	r1, r1, r0, lsl #20
     280:	00011600 	andeq	r1, r1, r0, lsl #12
     284:	094a1000 	stmdbeq	sl, {ip}^
     288:	02b71000 	adcseq	r1, r7, #0
     28c:	52110000 	andspl	r0, r1, #0
     290:	29100009 	ldmdbcs	r0, {r0, r3}
     294:	a3000007 	movwge	r0, #7
     298:	12000002 	andne	r0, r0, #2
     29c:	0a035001 	beq	d42a8 <__HEAP_SIZE+0xd32a8>
     2a0:	130003e8 	movwne	r0, #1000	; 0x3e8
     2a4:	10000958 	andne	r0, r0, r8, asr r9
     2a8:	000006d4 	ldrdeq	r0, [r0], -r4
     2ac:	05500112 	ldrbeq	r0, [r0, #-274]	; 0xfffffeee
     2b0:	005adc03 	subseq	sp, sl, r3, lsl #24
     2b4:	17000010 	smladne	r0, r0, r0, r0
     2b8:	00033801 	andeq	r3, r3, r1, lsl #16
     2bc:	06420100 	strbeq	r0, [r2], -r0, lsl #2
     2c0:	00092801 	andeq	r2, r9, r1, lsl #16
     2c4:	00094010 	andeq	r4, r9, r0, lsl r0
     2c8:	00013910 	andeq	r3, r1, r0, lsl r9
     2cc:	030c0100 	movweq	r0, #49408	; 0xc100
     2d0:	6b180000 	blvs	6002d8 <__RAM_SIZE+0x5002d8>
     2d4:	1c000000 	stcne	0, cr0, [r0], {-0}
     2d8:	01000003 	tsteq	r0, r3
     2dc:	5b140305 	blpl	500ef8 <__RAM_SIZE+0x400ef8>
     2e0:	32111000 	andscc	r1, r1, #0
     2e4:	fd100009 	ldc2	0, cr0, [r0, #-36]	; 0xffffffdc
     2e8:	02000006 	andeq	r0, r0, #6
     2ec:	12000003 	andne	r0, r0, #3
     2f0:	03055001 	movweq	r5, #20481	; 0x5001
     2f4:	10005acc 	andne	r5, r0, ip, asr #21
     2f8:	05510112 	ldrbeq	r0, [r1, #-274]	; 0xfffffeee
     2fc:	005b1403 	subseq	r1, fp, r3, lsl #8
     300:	36100010 			; <UNDEFINED> instruction: 0x36100010
     304:	21100009 	tstcs	r0, r9
     308:	00000003 	andeq	r0, r0, r3
     30c:	0000a309 	andeq	sl, r0, r9, lsl #6
     310:	00031c00 	andeq	r1, r3, r0, lsl #24
     314:	00741900 	rsbseq	r1, r4, r0, lsl #18
     318:	00050000 	andeq	r0, r5, r0
     31c:	00030c06 	andeq	r0, r3, r6, lsl #24
     320:	2a011700 	bcs	45f28 <__HEAP_SIZE+0x44f28>
     324:	01000002 	tsteq	r0, r2
     328:	1001063d 	andne	r0, r1, sp, lsr r6
     32c:	28100009 	ldmdacs	r0, {r0, r3}
     330:	59100009 	ldmdbpl	r0, {r0, r3}
     334:	01000001 	tsteq	r0, r1
     338:	00000376 	andeq	r0, r0, r6, ror r3
     33c:	00006b18 	andeq	r6, r0, r8, lsl fp
     340:	00031c00 	andeq	r1, r3, r0, lsl #24
     344:	03050100 	movweq	r0, #20736	; 0x5100
     348:	10005b1c 	andne	r5, r0, ip, lsl fp
     34c:	00091a11 	andeq	r1, r9, r1, lsl sl
     350:	0006fd10 	andeq	pc, r6, r0, lsl sp	; <UNPREDICTABLE>
     354:	00036c00 	andeq	r6, r3, r0, lsl #24
     358:	50011200 	andpl	r1, r1, r0, lsl #4
     35c:	5acc0305 	bpl	ff300f78 <__StackTop+0xc7200f78>
     360:	01121000 	tsteq	r2, r0
     364:	1c030551 	cfstr32ne	mvfx0, [r3], {81}	; 0x51
     368:	0010005b 	andseq	r0, r0, fp, asr r0
     36c:	00091e10 	andeq	r1, r9, r0, lsl lr
     370:	00037610 	andeq	r7, r3, r0, lsl r6
     374:	01170000 	tsteq	r7, r0
     378:	000000b8 	strheq	r0, [r0], -r8
     37c:	01063801 	tsteq	r6, r1, lsl #16
     380:	100008f8 	strdne	r0, [r0], -r8
     384:	10000910 	andne	r0, r0, r0, lsl r9
     388:	00000179 	andeq	r0, r0, r9, ror r1
     38c:	0003cb01 	andeq	ip, r3, r1, lsl #22
     390:	006b1800 	rsbeq	r1, fp, r0, lsl #16
     394:	031c0000 	tsteq	ip, #0
     398:	05010000 	streq	r0, [r1, #-0]
     39c:	005b2403 	subseq	r2, fp, r3, lsl #8
     3a0:	09021110 	stmdbeq	r2, {r4, r8, ip}
     3a4:	06fd1000 	ldrbteq	r1, [sp], r0
     3a8:	03c10000 	biceq	r0, r1, #0
     3ac:	01120000 	tsteq	r2, r0
     3b0:	cc030550 	cfstr32gt	mvfx0, [r3], {80}	; 0x50
     3b4:	1210005a 	andsne	r0, r0, #90	; 0x5a
     3b8:	03055101 	movweq	r5, #20737	; 0x5101
     3bc:	10005b24 	andne	r5, r0, r4, lsr #22
     3c0:	09061000 	stmdbeq	r6, {ip}
     3c4:	03cb1000 	biceq	r1, fp, #0
     3c8:	17000000 	strne	r0, [r0, -r0]
     3cc:	00032601 	andeq	r2, r3, r1, lsl #12
     3d0:	06330100 	ldrteq	r0, [r3], -r0, lsl #2
     3d4:	0008e001 	andeq	lr, r8, r1
     3d8:	0008f810 	andeq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     3dc:	00019910 	andeq	r9, r1, r0, lsl r9
     3e0:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
     3e4:	6b180000 	blvs	6003ec <__RAM_SIZE+0x5003ec>
     3e8:	1c000000 	stcne	0, cr0, [r0], {-0}
     3ec:	01000003 	tsteq	r0, r3
     3f0:	5b2c0305 	blpl	b0100c <__RAM_SIZE+0xa0100c>
     3f4:	ea111000 	b	4443fc <__RAM_SIZE+0x3443fc>
     3f8:	fd100008 	ldc2	0, cr0, [r0, #-32]	; 0xffffffe0
     3fc:	16000006 	strne	r0, [r0], -r6
     400:	12000004 	andne	r0, r0, #4
     404:	03055001 	movweq	r5, #20481	; 0x5001
     408:	10005acc 	andne	r5, r0, ip, asr #21
     40c:	05510112 	ldrbeq	r0, [r1, #-274]	; 0xfffffeee
     410:	005b2c03 	subseq	r2, fp, r3, lsl #24
     414:	ee100010 	mrc	0, 0, r0, cr0, cr0, {0}
     418:	20100008 	andscs	r0, r0, r8
     41c:	00000004 	andeq	r0, r0, r4
     420:	03200117 			; <UNDEFINED> instruction: 0x03200117
     424:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     428:	08c80106 	stmiaeq	r8, {r1, r2, r8}^
     42c:	08e01000 	stmiaeq	r0!, {ip}^
     430:	01b91000 			; <UNDEFINED> instruction: 0x01b91000
     434:	75010000 	strvc	r0, [r1, #-0]
     438:	18000004 	stmdane	r0, {r2}
     43c:	0000006b 	andeq	r0, r0, fp, rrx
     440:	0000031c 	andeq	r0, r0, ip, lsl r3
     444:	34030501 	strcc	r0, [r3], #-1281	; 0xfffffaff
     448:	1110005b 	tstne	r0, fp, asr r0
     44c:	100008d2 	ldrdne	r0, [r0], -r2
     450:	000006fd 	strdeq	r0, [r0], -sp
     454:	0000046b 	andeq	r0, r0, fp, ror #8
     458:	05500112 	ldrbeq	r0, [r0, #-274]	; 0xfffffeee
     45c:	005acc03 	subseq	ip, sl, r3, lsl #24
     460:	51011210 	tstpl	r1, r0, lsl r2
     464:	5b340305 	blpl	d01080 <__RAM_SIZE+0xc01080>
     468:	10001000 	andne	r1, r0, r0
     46c:	100008d6 	ldrdne	r0, [r0], -r6
     470:	00000475 	andeq	r0, r0, r5, ror r4
     474:	1a011700 	bne	4607c <__HEAP_SIZE+0x4507c>
     478:	01000003 	tsteq	r0, r3
     47c:	ac010627 	stcge	6, cr0, [r1], {39}	; 0x27
     480:	c8100008 	ldmdagt	r0, {r3}
     484:	d9100008 	ldmdble	r0, {r3}
     488:	01000001 	tsteq	r0, r1
     48c:	000004de 	ldrdeq	r0, [r0], -lr
     490:	00006b18 	andeq	r6, r0, r8, lsl fp
     494:	00031c00 	andeq	r1, r3, r0, lsl #24
     498:	03050100 	movweq	r0, #20736	; 0x5100
     49c:	10005b3c 	andne	r5, r0, ip, lsr fp
     4a0:	02ac011a 	adceq	r0, ip, #-2147483642	; 0x80000006
     4a4:	2a010000 	bcs	404ac <__HEAP_SIZE+0x3f4ac>
     4a8:	11010111 	tstne	r1, r1, lsl r1
     4ac:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
     4b0:	000006fd 	strdeq	r0, [r0], -sp
     4b4:	000004cb 	andeq	r0, r0, fp, asr #9
     4b8:	05500112 	ldrbeq	r0, [r0, #-274]	; 0xfffffeee
     4bc:	005acc03 	subseq	ip, sl, r3, lsl #24
     4c0:	51011210 	tstpl	r1, r0, lsl r2
     4c4:	5b3c0305 	blpl	f010e0 <__RAM_SIZE+0xe010e0>
     4c8:	10001000 	andne	r1, r0, r0
     4cc:	100008ba 			; <UNDEFINED> instruction: 0x100008ba
     4d0:	000004de 	ldrdeq	r0, [r0], -lr
     4d4:	0008be10 	andeq	fp, r8, r0, lsl lr
     4d8:	00073810 	andeq	r3, r7, r0, lsl r8
     4dc:	01170000 	tsteq	r7, r0
     4e0:	00000257 	andeq	r0, r0, r7, asr r2
     4e4:	01061701 	tsteq	r6, r1, lsl #14
     4e8:	10000844 	andne	r0, r0, r4, asr #16
     4ec:	100008ac 	andne	r0, r0, ip, lsr #17
     4f0:	000001f9 	strdeq	r0, [r0], -r9
     4f4:	00060e01 	andeq	r0, r6, r1, lsl #28
     4f8:	05111500 	ldreq	r1, [r1, #-1280]	; 0xfffffb00
     4fc:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     500:	00060e12 	andeq	r0, r6, r2, lsl lr
     504:	f0910300 			; <UNDEFINED> instruction: 0xf0910300
     508:	03140d7d 	tsteq	r4, #8000	; 0x1f40
     50c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
     510:	00007412 	andeq	r7, r0, r2, lsl r4
     514:	00023800 	andeq	r3, r2, r0, lsl #16
     518:	00023200 	andeq	r3, r2, r0, lsl #4
     51c:	00250d00 	eoreq	r0, r5, r0, lsl #26
     520:	1a010000 	bne	40528 <__HEAP_SIZE+0x3f528>
     524:	00007412 	andeq	r7, r0, r2, lsl r4
     528:	00026500 	andeq	r6, r2, r0, lsl #10
     52c:	00026100 	andeq	r6, r2, r0, lsl #2
     530:	00410d00 	subeq	r0, r1, r0, lsl #26
     534:	1b010000 	blne	4053c <__HEAP_SIZE+0x3f53c>
     538:	00006d09 	andeq	r6, r0, r9, lsl #26
     53c:	00028b00 	andeq	r8, r2, r0, lsl #22
     540:	00028300 	andeq	r8, r2, r0, lsl #6
     544:	00001b00 	andeq	r1, r0, r0, lsl #22
     548:	05740000 	ldrbeq	r0, [r4, #-0]!
     54c:	691c0000 	ldmdbvs	ip, {}	; <UNPREDICTABLE>
     550:	12200100 	eorne	r0, r0, #0, 2
     554:	0000006d 	andeq	r0, r0, sp, rrx
     558:	000002c3 	andeq	r0, r0, r3, asr #5
     55c:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
     560:	00088c13 	andeq	r8, r8, r3, lsl ip
     564:	0006fd10 	andeq	pc, r6, r0, lsl sp	; <UNPREDICTABLE>
     568:	50011200 	andpl	r1, r1, r0, lsl #4
     56c:	5ac00305 	bpl	ff001188 <__StackTop+0xc6f01188>
     570:	00001000 	andeq	r1, r0, r0
     574:	00085411 	andeq	r5, r8, r1, lsl r4
     578:	00074610 	andeq	r4, r7, r0, lsl r6
     57c:	00059400 	andeq	r9, r5, r0, lsl #8
     580:	50011200 	andpl	r1, r1, r0, lsl #4
     584:	12007d02 	andne	r7, r0, #2, 26	; 0x80
     588:	30015101 	andcc	r5, r1, r1, lsl #2
     58c:	03520112 	cmpeq	r2, #-2147483644	; 0x80000004
     590:	0001000a 	andeq	r0, r1, sl
     594:	00085810 	andeq	r5, r8, r0, lsl r8
     598:	00075310 	andeq	r5, r7, r0, lsl r3
     59c:	085e1000 	ldmdaeq	lr, {ip}^
     5a0:	07611000 	strbeq	r1, [r1, -r0]!
     5a4:	6a110000 	bvs	4405ac <__RAM_SIZE+0x3405ac>
     5a8:	6f100008 	svcvs	0x00100008
     5ac:	c6000007 	strgt	r0, [r0], -r7
     5b0:	12000005 	andne	r0, r0, #5
     5b4:	7d025001 	stcvc	0, cr5, [r2, #-4]
     5b8:	51011200 	mrspl	r1, R9_usr
     5bc:	12400802 	subne	r0, r0, #131072	; 0x20000
     5c0:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
     5c4:	74110000 	ldrvc	r0, [r1], #-0
     5c8:	fd100008 	ldc2	0, cr0, [r0, #-32]	; 0xffffffe0
     5cc:	dd000006 	stcle	0, cr0, [r0, #-24]	; 0xffffffe8
     5d0:	12000005 	andne	r0, r0, #5
     5d4:	03055001 	movweq	r5, #20481	; 0x5001
     5d8:	10005ab0 			; <UNDEFINED> instruction: 0x10005ab0
     5dc:	08801100 	stmeq	r0, {r8, ip}
     5e0:	06fd1000 	ldrbteq	r1, [sp], r0
     5e4:	05fa0000 	ldrbeq	r0, [sl, #0]!
     5e8:	01120000 	tsteq	r2, r0
     5ec:	94030550 	strls	r0, [r3], #-1360	; 0xfffffab0
     5f0:	1210005a 	andsne	r0, r0, #90	; 0x5a
     5f4:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
     5f8:	98130000 	ldmdals	r3, {}	; <UNPREDICTABLE>
     5fc:	d4100008 	ldrle	r0, [r0], #-8
     600:	12000006 	andne	r0, r0, #6
     604:	03055001 	movweq	r5, #20481	; 0x5001
     608:	10005ac8 	andne	r5, r0, r8, asr #21
     60c:	74090000 	strvc	r0, [r9], #-0
     610:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     614:	19000006 	stmdbne	r0, {r1, r2}
     618:	00000074 	andeq	r0, r0, r4, ror r0
     61c:	0117003f 	tsteq	r7, pc, lsr r0
     620:	0000029c 	muleq	r0, ip, r2
     624:	01061301 	tsteq	r6, r1, lsl #6
	...
     630:	000002e2 	andeq	r0, r0, r2, ror #5
     634:	00065d01 	andeq	r5, r6, r1, lsl #26
     638:	006b1800 	rsbeq	r1, fp, r0, lsl #16
     63c:	066d0000 	strbteq	r0, [sp], -r0
     640:	05010000 	streq	r0, [r1, #-0]
     644:	00000003 	andeq	r0, r0, r3
     648:	00001300 	andeq	r1, r0, r0, lsl #6
     64c:	06d40000 	ldrbeq	r0, [r4], r0
     650:	01120000 	tsteq	r2, r0
     654:	00030550 	andeq	r0, r3, r0, asr r5
     658:	00000000 	andeq	r0, r0, r0
     65c:	00a30900 	adceq	r0, r3, r0, lsl #18
     660:	066d0000 	strbteq	r0, [sp], -r0
     664:	74190000 	ldrvc	r0, [r9], #-0
     668:	0f000000 	svceq	0x00000000
     66c:	065d0600 	ldrbeq	r0, [sp], -r0, lsl #12
     670:	01170000 	tsteq	r7, r0
     674:	0000019a 	muleq	r0, sl, r1
     678:	01060f01 	tsteq	r6, r1, lsl #30
	...
     684:	00000302 	andeq	r0, r0, r2, lsl #6
     688:	0006b101 	andeq	fp, r6, r1, lsl #2
     68c:	006b1800 	rsbeq	r1, fp, r0, lsl #16
     690:	06c10000 	strbeq	r0, [r1], r0
     694:	05010000 	streq	r0, [r1, #-0]
     698:	00000003 	andeq	r0, r0, r3
     69c:	00001300 	andeq	r1, r0, r0, lsl #6
     6a0:	06d40000 	ldrbeq	r0, [r4], r0
     6a4:	01120000 	tsteq	r2, r0
     6a8:	00030550 	andeq	r0, r3, r0, asr r5
     6ac:	00000000 	andeq	r0, r0, r0
     6b0:	00a30900 	adceq	r0, r3, r0, lsl #18
     6b4:	06c10000 	strbeq	r0, [r1], r0
     6b8:	74190000 	ldrvc	r0, [r9], #-0
     6bc:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     6c0:	06b10600 	ldrteq	r0, [r1], r0, lsl #12
     6c4:	011d0000 	tsteq	sp, r0
     6c8:	00008901 	andeq	r8, r0, r1, lsl #18
     6cc:	00008900 	andeq	r8, r0, r0, lsl #18
     6d0:	06070700 	streq	r0, [r7], -r0, lsl #14
     6d4:	a501011e 	strge	r0, [r1, #-286]	; 0xfffffee2
     6d8:	9b000000 	blls	6e0 <__STACKSEAL_SIZE+0x6e0>
     6dc:	0a000000 	beq	6e4 <__STACKSEAL_SIZE+0x6e4>
     6e0:	01011d00 	tsteq	r1, r0, lsl #26
     6e4:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
     6e8:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
     6ec:	1d064808 	stcne	8, cr4, [r6, #-32]	; 0xffffffe0
     6f0:	02660101 	rsbeq	r0, r6, #1073741824	; 0x40000000
     6f4:	02660000 	rsbeq	r0, r6, #0
     6f8:	52080000 	andpl	r0, r8, #0
     6fc:	01011d05 	tsteq	r1, r5, lsl #26
     700:	000005ec 	andeq	r0, r0, ip, ror #11
     704:	000005ec 	andeq	r0, r0, ip, ror #11
     708:	1f05c809 	svcne	0x0005c809
     70c:	032c0101 			; <UNDEFINED> instruction: 0x032c0101
     710:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     714:	7e060000 	cdpvc	0, 0, cr0, cr6, cr0, {0}
     718:	011f1001 	tsteq	pc, r1
     71c:	00005701 	andeq	r5, r0, r1, lsl #14
     720:	00005700 	andeq	r5, r0, r0, lsl #14
     724:	05ec0600 	strbeq	r0, [ip, #1536]!	; 0x600
     728:	01011f06 	tsteq	r1, r6, lsl #30
     72c:	000002f5 	strdeq	r0, [r0], -r5
     730:	000002f5 	strdeq	r0, [r0], -r5
     734:	06035806 	streq	r5, [r3], -r6, lsl #16
     738:	ac01011d 	stfges	f0, [r1], {29}
     73c:	ac000002 	stcge	0, cr0, [r0], {2}
     740:	01000002 	tsteq	r0, r2
     744:	011e112a 	tsteq	lr, sl, lsr #2
     748:	0001be01 	andeq	fp, r1, r1, lsl #28
     74c:	0001b400 	andeq	fp, r1, r0, lsl #8
     750:	1d000a00 	vstrne	s0, [r0, #-0]
     754:	03000101 	movweq	r0, #257	; 0x101
     758:	03000000 	movweq	r0, #0
     75c:	4c080000 	stcmi	0, cr0, [r8], {-0}
     760:	01011d0e 	tsteq	r1, lr, lsl #26
     764:	00000011 	andeq	r0, r0, r1, lsl r0
     768:	00000011 	andeq	r0, r0, r1, lsl r0
     76c:	1d0e4d08 	stcne	13, cr4, [lr, #-32]	; 0xffffffe0
     770:	02510101 	subseq	r0, r1, #1073741824	; 0x40000000
     774:	02510000 	subseq	r0, r1, #0
     778:	4a080000 	bmi	200780 <__RAM_SIZE+0x100780>
     77c:	04e50006 	strbteq	r0, [r5], #6
     780:	00020000 	andeq	r0, r2, r0
     784:	000001da 	ldrdeq	r0, [r0], -sl
     788:	00dc0104 	sbcseq	r0, ip, r4, lsl #2
     78c:	3e0c0000 	cdpcc	0, 0, cr0, cr12, cr0, {0}
     790:	c5000003 	strgt	r0, [r0, #-3]
     794:	80000001 	andhi	r0, r0, r1
	...
     7a0:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
     7a4:	02000004 	andeq	r0, r0, #4
     7a8:	00ac0601 	adceq	r0, ip, r1, lsl #12
     7ac:	00030000 	andeq	r0, r3, r0
     7b0:	02000000 	andeq	r0, r0, #0
     7b4:	003c182b 	eorseq	r1, ip, fp, lsr #16
     7b8:	01020000 	mrseq	r0, (UNDEF: 2)
     7bc:	0000aa08 	andeq	sl, r0, r8, lsl #20
     7c0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     7c4:	000002de 	ldrdeq	r0, [r0], -lr
     7c8:	c9070202 	stmdbgt	r7, {r1, r9}
     7cc:	02000000 	andeq	r0, r0, #0
     7d0:	02930504 	addseq	r0, r3, #4, 10	; 0x1000000
     7d4:	b6030000 	strlt	r0, [r3], -r0
     7d8:	02000003 	andeq	r0, r0, #3
     7dc:	0064194f 	rsbeq	r1, r4, pc, asr #18
     7e0:	04020000 	streq	r0, [r2], #-0
     7e4:	00023507 	andeq	r3, r2, r7, lsl #10
     7e8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     7ec:	0000028e 	andeq	r0, r0, lr, lsl #5
     7f0:	30070802 	andcc	r0, r7, r2, lsl #16
     7f4:	04000002 	streq	r0, [r0], #-2
     7f8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     7fc:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
     800:	00023a07 	andeq	r3, r2, r7, lsl #20
     804:	00020300 	andeq	r0, r2, r0, lsl #6
     808:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     80c:	00003013 	andeq	r3, r0, r3, lsl r0
     810:	00870500 	addeq	r0, r7, r0, lsl #10
     814:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
     818:	03000003 	movweq	r0, #3
     81c:	00581430 	subseq	r1, r8, r0, lsr r4
     820:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
     824:	06000000 	streq	r0, [r0], -r0
     828:	000000a4 	andeq	r0, r0, r4, lsr #1
     82c:	04027c07 	streq	r7, [r2], #-3079	; 0xfffff3f9
     830:	b30901f8 	movwlt	r0, #37368	; 0x91f8
     834:	08000003 	stmdaeq	r0, {r0, r1}
     838:	00000370 	andeq	r0, r0, r0, ror r3
     83c:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
     840:	000000a9 	andeq	r0, r0, r9, lsr #1
     844:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
     848:	0000040c 	andeq	r0, r0, ip, lsl #8
     84c:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
     850:	000000a4 	andeq	r0, r0, r4, lsr #1
     854:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
     858:	00000402 	andeq	r0, r0, r2, lsl #8
     85c:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
     860:	000000a4 	andeq	r0, r0, r4, lsr #1
     864:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
     868:	00000411 	andeq	r0, r0, r1, lsl r4
     86c:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
     870:	000000a4 	andeq	r0, r0, r4, lsr #1
     874:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     878:	00524353 	subseq	r4, r2, r3, asr r3
     87c:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
     880:	000000a4 	andeq	r0, r0, r4, lsr #1
     884:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     888:	00524343 	subseq	r4, r2, r3, asr #6
     88c:	1201ff04 	andne	pc, r1, #4, 30
     890:	000000a4 	andeq	r0, r0, r4, lsr #1
     894:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
     898:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
     89c:	12020004 	andne	r0, r2, #4
     8a0:	000003c3 	andeq	r0, r0, r3, asr #7
     8a4:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
     8a8:	00000483 	andeq	r0, r0, r3, lsl #9
     8ac:	12020104 	andne	r0, r2, #4, 2
     8b0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8b4:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
     8b8:	00000429 	andeq	r0, r0, r9, lsr #8
     8bc:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
     8c0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8c4:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     8c8:	000004dc 	ldrdeq	r0, [r0], -ip
     8cc:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
     8d0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8d4:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     8d8:	00000417 	andeq	r0, r0, r7, lsl r4
     8dc:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
     8e0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8e4:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
     8e8:	0000041c 	andeq	r0, r0, ip, lsl r4
     8ec:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
     8f0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8f4:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     8f8:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
     8fc:	12020604 	andne	r0, r2, #4, 12	; 0x400000
     900:	000000a4 	andeq	r0, r0, r4, lsr #1
     904:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
     908:	000004a0 	andeq	r0, r0, r0, lsr #9
     90c:	12020704 	andne	r0, r2, #4, 14	; 0x100000
     910:	000000a4 	andeq	r0, r0, r4, lsr #1
     914:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
     918:	0000037d 	andeq	r0, r0, sp, ror r3
     91c:	12020804 	andne	r0, r2, #4, 16	; 0x40000
     920:	000003dd 	ldrdeq	r0, [r0], -sp
     924:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
     928:	000003ca 	andeq	r0, r0, sl, asr #7
     92c:	12020904 	andne	r0, r2, #4, 18	; 0x10000
     930:	000000a9 	andeq	r0, r0, r9, lsr #1
     934:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
     938:	000004c7 	andeq	r0, r0, r7, asr #9
     93c:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
     940:	000000a9 	andeq	r0, r0, r9, lsr #1
     944:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     948:	000003a1 	andeq	r0, r0, r1, lsr #7
     94c:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
     950:	000003f7 	strdeq	r0, [r0], -r7
     954:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
     958:	000004ce 	andeq	r0, r0, lr, asr #9
     95c:	12020c04 	andne	r0, r2, #4, 24	; 0x400
     960:	00000411 	andeq	r0, r0, r1, lsl r4
     964:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
     968:	0000036a 	andeq	r0, r0, sl, ror #6
     96c:	12020d04 	andne	r0, r2, #4, 26	; 0x100
     970:	000000a9 	andeq	r0, r0, r9, lsr #1
     974:	09782302 	ldmdbeq	r8!, {r1, r8, r9, sp}^
     978:	00525443 	subseq	r5, r2, r3, asr #8
     97c:	12020e04 	andne	r0, r2, #4, 28	; 0x40
     980:	000000a9 	andeq	r0, r0, r9, lsr #1
     984:	087c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}^
     988:	00000422 	andeq	r0, r0, r2, lsr #8
     98c:	12020f04 	andne	r0, r2, #4, 30
     990:	000000a9 	andeq	r0, r0, r9, lsr #1
     994:	01802303 	orreq	r2, r0, r3, lsl #6
     998:	0003d908 	andeq	sp, r3, r8, lsl #18
     99c:	02100400 	andseq	r0, r0, #0, 8
     9a0:	0000a412 	andeq	sl, r0, r2, lsl r4
     9a4:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     9a8:	04d60801 	ldrbeq	r0, [r6], #2049	; 0x801
     9ac:	11040000 	mrsne	r0, (UNDEF: 4)
     9b0:	00a41202 	adceq	r1, r4, r2, lsl #4
     9b4:	23030000 	movwcs	r0, #12288	; 0x3000
     9b8:	2e080188 	adfcs<illegal precision>	f0, f0, #0.0
     9bc:	04000004 	streq	r0, [r0], #-4
     9c0:	a4120212 	ldrge	r0, [r2], #-530	; 0xfffffdee
     9c4:	03000000 	movweq	r0, #0
     9c8:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
     9cc:	0000046e 	andeq	r0, r0, lr, ror #8
     9d0:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
     9d4:	00000416 	andeq	r0, r0, r6, lsl r4
     9d8:	01902303 	orrseq	r2, r0, r3, lsl #6
     9dc:	0004a508 	andeq	sl, r4, r8, lsl #10
     9e0:	02140400 	andseq	r0, r4, #0, 8
     9e4:	0000a412 	andeq	sl, r0, r2, lsl r4
     9e8:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     9ec:	04070801 	streq	r0, [r7], #-2049	; 0xfffff7ff
     9f0:	15040000 	strne	r0, [r4, #-0]
     9f4:	00a41202 	adceq	r1, r4, r2, lsl #4
     9f8:	23030000 	movwcs	r0, #12288	; 0x3000
     9fc:	460801e8 	strmi	r0, [r8], -r8, ror #3
     a00:	04000004 	streq	r0, [r0], #-4
     a04:	26120216 			; <UNDEFINED> instruction: 0x26120216
     a08:	03000004 	movweq	r0, #4
     a0c:	0801ec23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
     a10:	0000035d 	andeq	r0, r0, sp, asr r3
     a14:	12021704 	andne	r1, r2, #4, 14	; 0x100000
     a18:	000000a4 	andeq	r0, r0, r4, lsr #1
     a1c:	04802303 	streq	r2, [r0], #771	; 0x303
     a20:	00045008 	andeq	r5, r4, r8
     a24:	02180400 	andseq	r0, r8, #0, 8
     a28:	00043612 	andeq	r3, r4, r2, lsl r6
     a2c:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     a30:	04340804 	ldrteq	r0, [r4], #-2052	; 0xfffff7fc
     a34:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     a38:	00a91202 	adceq	r1, r9, r2, lsl #4
     a3c:	23030000 	movwcs	r0, #12288	; 0x3000
     a40:	3a0804c0 	bcc	201d48 <__RAM_SIZE+0x101d48>
     a44:	04000004 	streq	r0, [r0], #-4
     a48:	a912021a 	ldmdbge	r2, {r1, r3, r4, r9}
     a4c:	03000000 	movweq	r0, #0
     a50:	0804c423 	stmdaeq	r4, {r0, r1, r5, sl, lr, pc}
     a54:	00000440 	andeq	r0, r0, r0, asr #8
     a58:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
     a5c:	000000a9 	andeq	r0, r0, r9, lsr #1
     a60:	04c82303 	strbeq	r2, [r8], #771	; 0x303
     a64:	00045a08 	andeq	r5, r4, r8, lsl #20
     a68:	021c0400 	andseq	r0, ip, #0, 8
     a6c:	00044612 	andeq	r4, r4, r2, lsl r6
     a70:	cc230300 	stcgt	3, cr0, [r3], #-0
     a74:	03a90804 			; <UNDEFINED> instruction: 0x03a90804
     a78:	1d040000 	stcne	0, cr0, [r4, #-0]
     a7c:	00a41202 	adceq	r1, r4, r2, lsl #4
     a80:	23030000 	movwcs	r0, #12288	; 0x3000
     a84:	640804d0 	strvs	r0, [r8], #-1232	; 0xfffffb30
     a88:	04000004 	streq	r0, [r0], #-4
     a8c:	4612021e 			; <UNDEFINED> instruction: 0x4612021e
     a90:	03000004 	movweq	r0, #4
     a94:	0804d423 	stmdaeq	r4, {r0, r1, r5, sl, ip, lr, pc}
     a98:	00000492 	muleq	r0, r2, r4
     a9c:	12021f04 	andne	r1, r2, #4, 30
     aa0:	000000a4 	andeq	r0, r0, r4, lsr #1
     aa4:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
     aa8:	00036208 	andeq	r6, r3, r8, lsl #4
     aac:	02200400 	eoreq	r0, r0, #0, 8
     ab0:	0000a412 	andeq	sl, r0, r2, lsl r4
     ab4:	dc230300 	stcle	3, cr0, [r3], #-0
     ab8:	049a0804 	ldreq	r0, [sl], #2052	; 0x804
     abc:	21040000 	mrscs	r0, (UNDEF: 4)
     ac0:	00a41202 	adceq	r1, r4, r2, lsl #4
     ac4:	23030000 	movwcs	r0, #12288	; 0x3000
     ac8:	f00804e0 			; <UNDEFINED> instruction: 0xf00804e0
     acc:	04000003 	streq	r0, [r0], #-3
     ad0:	a4120222 	ldrge	r0, [r2], #-546	; 0xfffffdde
     ad4:	03000000 	movweq	r0, #0
     ad8:	0804e423 	stmdaeq	r4, {r0, r1, r5, sl, sp, lr, pc}
     adc:	000003d1 	ldrdeq	r0, [r0], -r1
     ae0:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
     ae4:	000000a4 	andeq	r0, r0, r4, lsr #1
     ae8:	04e82303 	strbteq	r2, [r8], #771	; 0x303
     aec:	0004aa08 	andeq	sl, r4, r8, lsl #20
     af0:	02240400 	eoreq	r0, r4, #0, 8
     af4:	0000a412 	andeq	sl, r0, r2, lsl r4
     af8:	ec230300 	stc	3, cr0, [r3], #-0
     afc:	04890804 	streq	r0, [r9], #2052	; 0x804
     b00:	25040000 	strcs	r0, [r4, #-0]
     b04:	00a41202 	adceq	r1, r4, r2, lsl #4
     b08:	23030000 	movwcs	r0, #12288	; 0x3000
     b0c:	840804f0 	strhi	r0, [r8], #-1264	; 0xfffffb10
     b10:	04000003 	streq	r0, [r0], #-3
     b14:	a4120226 	ldrge	r0, [r2], #-550	; 0xfffffdda
     b18:	03000000 	movweq	r0, #0
     b1c:	0804f423 	stmdaeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
     b20:	00000376 	andeq	r0, r0, r6, ror r3
     b24:	12022704 	andne	r2, r2, #4, 14	; 0x100000
     b28:	000000a4 	andeq	r0, r0, r4, lsr #1
     b2c:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
     b30:	00930a00 	addseq	r0, r3, r0, lsl #20
     b34:	03c30000 	biceq	r0, r3, #0
     b38:	800b0000 	andhi	r0, fp, r0
     b3c:	0b000000 	bleq	b44 <__Vectors_Size+0x384>
     b40:	03b30500 			; <UNDEFINED> instruction: 0x03b30500
     b44:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     b48:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     b4c:	0b000003 	bleq	b60 <__Vectors_Size+0x3a0>
     b50:	00000080 	andeq	r0, r0, r0, lsl #1
     b54:	c8060001 	stmdagt	r6, {r0}
     b58:	05000003 	streq	r0, [r0, #-3]
     b5c:	000003d8 	ldrdeq	r0, [r0], -r8
     b60:	0000a90a 	andeq	sl, r0, sl, lsl #18
     b64:	0003f200 	andeq	pc, r3, r0, lsl #4
     b68:	00800b00 	addeq	r0, r0, r0, lsl #22
     b6c:	00030000 	andeq	r0, r3, r0
     b70:	0003e206 	andeq	lr, r3, r6, lsl #4
     b74:	03f20500 	mvnseq	r0, #0, 10
     b78:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     b7c:	0c000000 	stceq	0, cr0, [r0], {-0}
     b80:	0b000004 	bleq	b98 <__Vectors_Size+0x3d8>
     b84:	00000080 	andeq	r0, r0, r0, lsl #1
     b88:	fc060005 	stc2	0, cr0, [r6], {5}
     b8c:	05000003 	streq	r0, [r0, #-3]
     b90:	0000040c 	andeq	r0, r0, ip, lsl #8
     b94:	0000980a 	andeq	r9, r0, sl, lsl #16
     b98:	00042600 	andeq	r2, r4, r0, lsl #12
     b9c:	00800b00 	addeq	r0, r0, r0, lsl #22
     ba0:	00140000 	andseq	r0, r4, r0
     ba4:	0000980a 	andeq	r9, r0, sl, lsl #16
     ba8:	00043600 	andeq	r3, r4, r0, lsl #12
     bac:	00800b00 	addeq	r0, r0, r0, lsl #22
     bb0:	00440000 	subeq	r0, r4, r0
     bb4:	0000980a 	andeq	r9, r0, sl, lsl #16
     bb8:	00044600 	andeq	r4, r4, r0, lsl #12
     bbc:	00800b00 	addeq	r0, r0, r0, lsl #22
     bc0:	000e0000 	andeq	r0, lr, r0
     bc4:	0000980a 	andeq	r9, r0, sl, lsl #16
     bc8:	00045600 	andeq	r5, r4, r0, lsl #12
     bcc:	00800b00 	addeq	r0, r0, r0, lsl #22
     bd0:	00000000 	andeq	r0, r0, r0
     bd4:	0003c10c 	andeq	ip, r3, ip, lsl #2
     bd8:	02280400 	eoreq	r0, r8, #0, 8
     bdc:	0000ae03 	andeq	sl, r0, r3, lsl #28
     be0:	04b50300 	ldrteq	r0, [r5], #768	; 0x300
     be4:	24050000 	strcs	r0, [r5], #-0
     be8:	0004740f 	andeq	r7, r4, pc, lsl #8
     bec:	04630600 	strbteq	r0, [r3], #-1536	; 0xfffffa00
     bf0:	040d0000 	streq	r0, [sp], #-0
     bf4:	0000047a 	andeq	r0, r0, sl, ror r4
     bf8:	e00f010e 	and	r0, pc, lr, lsl #2
     bfc:	05000003 	streq	r0, [r0, #-3]
     c00:	00981129 	addseq	r1, r8, r9, lsr #2
     c04:	01010000 	mrseq	r0, (UNDEF: 1)
     c08:	00046f0a 	andeq	r6, r4, sl, lsl #30
     c0c:	00049b00 	andeq	r9, r4, r0, lsl #22
     c10:	00801000 	addeq	r1, r0, r0
     c14:	01ef0000 	mvneq	r0, r0
     c18:	048a0600 	streq	r0, [sl], #1536	; 0x600
     c1c:	f80f0000 			; <UNDEFINED> instruction: 0xf80f0000
     c20:	01000003 	tsteq	r0, r3
     c24:	049b2038 	ldreq	r2, [fp], #56	; 0x38
     c28:	01010000 	mrseq	r0, (UNDEF: 1)
     c2c:	00047c11 	andeq	r7, r4, r1, lsl ip
     c30:	0a3e0100 	beq	f81038 <__RAM_SIZE+0xe81038>
     c34:	00000305 	andeq	r0, r0, r5, lsl #6
     c38:	01123800 	tsteq	r2, r0, lsl #16
     c3c:	00000478 	andeq	r0, r0, r8, ror r4
     c40:	01064c01 	tsteq	r6, r1, lsl #24
     c44:	1000099c 	mulne	r0, ip, r9
     c48:	100009c8 	andne	r0, r0, r8, asr #19
     c4c:	01007d02 	tsteq	r0, r2, lsl #26
     c50:	038b0112 	orreq	r0, fp, #-2147483644	; 0x80000004
     c54:	44010000 	strmi	r0, [r1], #-0
     c58:	00000106 	andeq	r0, r0, r6, lsl #2
     c5c:	00000000 	andeq	r0, r0, r0
     c60:	7d020000 	stcvc	0, cr0, [r2, #-0]
     c64:	c1000100 	mrsgt	r0, (UNDEF: 16)
     c68:	0200001b 	andeq	r0, r0, #27
     c6c:	0002ca00 	andeq	ip, r2, r0, lsl #20
     c70:	dc010400 	cfstrsle	mvf0, [r1], {-0}
     c74:	0c000000 	stceq	0, cr0, [r0], {-0}
     c78:	000005c0 	andeq	r0, r0, r0, asr #11
     c7c:	000001c5 	andeq	r0, r0, r5, asr #3
     c80:	00000150 	andeq	r0, r0, r0, asr r1
	...
     c8c:	0000067e 	andeq	r0, r0, lr, ror r6
     c90:	87040802 	strhi	r0, [r4, -r2, lsl #16]
     c94:	02000002 	andeq	r0, r0, #2
     c98:	023a0704 	eorseq	r0, sl, #4, 14	; 0x100000
     c9c:	01020000 	mrseq	r0, (UNDEF: 2)
     ca0:	0000ac06 	andeq	sl, r0, r6, lsl #24
     ca4:	08010200 	stmdaeq	r1, {r9}
     ca8:	000000aa 	andeq	r0, r0, sl, lsr #1
     cac:	de050202 	cdple	2, 0, cr0, cr5, cr2, {0}
     cb0:	02000002 	andeq	r0, r0, #2
     cb4:	00c90702 	sbceq	r0, r9, r2, lsl #14
     cb8:	04020000 	streq	r0, [r2], #-0
     cbc:	00029305 	andeq	r9, r2, r5, lsl #6
     cc0:	00530300 	subseq	r0, r3, r0, lsl #6
     cc4:	04020000 	streq	r0, [r2], #-0
     cc8:	00023507 	andeq	r3, r2, r7, lsl #10
     ccc:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     cd0:	0000028e 	andeq	r0, r0, lr, lsl #5
     cd4:	00006603 	andeq	r6, r0, r3, lsl #12
     cd8:	067e0400 	ldrbteq	r0, [lr], -r0, lsl #8
     cdc:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
     ce0:	00007e19 	andeq	r7, r0, r9, lsl lr
     ce4:	07080200 	streq	r0, [r8, -r0, lsl #4]
     ce8:	00000230 	andeq	r0, r0, r0, lsr r2
     cec:	69050405 	stmdbvs	r5, {r0, r2, sl}
     cf0:	0300746e 	movweq	r7, #1134	; 0x46e
     cf4:	00000085 	andeq	r0, r0, r5, lsl #1
     cf8:	0006a704 	andeq	sl, r6, r4, lsl #14
     cfc:	1ae80200 	bne	ffa01504 <__StackTop+0xc7901504>
     d00:	00000030 	andeq	r0, r0, r0, lsr r0
     d04:	00003003 	andeq	r3, r0, r3
     d08:	06800400 	streq	r0, [r0], r0, lsl #8
     d0c:	3c030000 	stccc	0, cr0, [r3], {-0}
     d10:	00007214 	andeq	r7, r0, r4, lsl r2
     d14:	06a90400 	strteq	r0, [r9], r0, lsl #8
     d18:	52030000 	andpl	r0, r3, #0
     d1c:	00009115 	andeq	r9, r0, r5, lsl r1
     d20:	07110400 	ldreq	r0, [r1, -r0, lsl #8]
     d24:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     d28:	0000c61b 	andeq	ip, r0, fp, lsl r6
     d2c:	05b60600 	ldreq	r0, [r6, #1536]!	; 0x600
     d30:	06040000 	streq	r0, [r4], -r0
     d34:	0000e000 	andeq	lr, r0, r0
     d38:	06660700 	strbteq	r0, [r6], -r0, lsl #14
     d3c:	00e00000 	rsceq	r0, r0, r0
     d40:	23020000 	movwcs	r0, #8192	; 0x2000
     d44:	08000100 	stmdaeq	r0, {r8}
     d48:	05b80404 	ldreq	r0, [r8, #1028]!	; 0x404
     d4c:	63040000 	movwvs	r0, #16384	; 0x4000
     d50:	0000ba18 	andeq	fp, r0, r8, lsl sl
     d54:	000a0400 	andeq	r0, sl, r0, lsl #8
     d58:	d1050000 	mrsle	r0, (UNDEF: 5)
     d5c:	00003017 	andeq	r3, r0, r7, lsl r0
     d60:	00ee0300 	rsceq	r0, lr, r0, lsl #6
     d64:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     d68:	00028204 	andeq	r8, r2, r4, lsl #4
     d6c:	05fd0400 	ldrbeq	r0, [sp, #1024]!	; 0x400
     d70:	7a010000 	bvc	40d78 <__HEAP_SIZE+0x3fd78>
     d74:	00011210 	andeq	r1, r1, r0, lsl r2
     d78:	18040900 	stmdane	r4, {r8, fp}
     d7c:	0a000001 	beq	d88 <__Vectors_Size+0x5c8>
     d80:	00013301 	andeq	r3, r1, r1, lsl #6
     d84:	01330b00 	teqeq	r3, r0, lsl #22
     d88:	e00b0000 	and	r0, fp, r0
     d8c:	0b000000 	bleq	d94 <__Vectors_Size+0x5d4>
     d90:	000000ee 	andeq	r0, r0, lr, ror #1
     d94:	0000ee0b 	andeq	lr, r0, fp, lsl #28
     d98:	01020000 	mrseq	r0, (UNDEF: 2)
     d9c:	0000b308 	andeq	fp, r0, r8, lsl #6
     da0:	01330300 	teqeq	r3, r0, lsl #6
     da4:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
     da8:	67097e01 	strvs	r7, [r9, -r1, lsl #28]
     dac:	0d000001 	stceq	0, cr0, [r0, #-4]
     db0:	00746366 	rsbseq	r6, r4, r6, ror #6
     db4:	780b7f01 	stmdavc	fp, {r0, r8, r9, sl, fp, ip, sp, lr}
     db8:	02000001 	andeq	r0, r0, #1
     dbc:	610d0023 	tstvs	sp, r3, lsr #32
     dc0:	01006772 	tsteq	r0, r2, ror r7
     dc4:	00e00980 	rsceq	r0, r0, r0, lsl #19
     dc8:	23020000 	movwcs	r0, #8192	; 0x2000
     dcc:	010a0004 	tsteq	sl, r4
     dd0:	00000178 	andeq	r0, r0, r8, ror r1
     dd4:	0001330b 	andeq	r3, r1, fp, lsl #6
     dd8:	00e00b00 	rsceq	r0, r0, r0, lsl #22
     ddc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     de0:	00016704 	andeq	r6, r1, r4, lsl #14
     de4:	06f30400 	ldrbteq	r0, [r3], r0, lsl #8
     de8:	81010000 	mrshi	r0, (UNDEF: 1)
     dec:	00013f03 	andeq	r3, r1, r3, lsl #30
     df0:	017e0300 	cmneq	lr, r0, lsl #6
     df4:	010e0000 	mrseq	r0, (UNDEF: 14)
     df8:	00000596 	muleq	r0, r6, r5
     dfc:	05038a01 	streq	r8, [r3, #-2561]	; 0xfffff5ff
     e00:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     e0c:	00032200 	andeq	r2, r3, r0, lsl #4
     e10:	024c0100 	subeq	r0, ip, #0, 2
     e14:	6f0f0000 	svcvs	0x000f0000
     e18:	01007475 	tsteq	r0, r5, ror r4
     e1c:	7816038a 	ldmdavc	r6, {r1, r3, r7, r8, r9}
     e20:	84000001 	strhi	r0, [r0], #-1
     e24:	7e000003 	cdpvc	0, 0, cr0, cr0, cr3, {0}
     e28:	0f000003 	svceq	0x00000003
     e2c:	00677261 	rsbeq	r7, r7, r1, ror #4
     e30:	3d038a01 	vstrcc	s16, [r3, #-4]
     e34:	000000e0 	andeq	r0, r0, r0, ror #1
     e38:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
     e3c:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
     e40:	0005db10 	andeq	sp, r5, r0, lsl fp
     e44:	038a0100 	orreq	r0, sl, #0, 2
     e48:	00024c4e 	andeq	r4, r2, lr, asr #24
     e4c:	78910200 	ldmvc	r1, {r9}
     e50:	61761211 	cmnvs	r6, r1, lsl r2
     e54:	038c0100 	orreq	r0, ip, #0, 2
     e58:	0000e20b 	andeq	lr, r0, fp, lsl #4
     e5c:	6c910200 	lfmvs	f0, 4, [r1], {0}
     e60:	0004f813 	andeq	pc, r4, r3, lsl r8	; <UNPREDICTABLE>
     e64:	038e0100 	orreq	r0, lr, #0, 2
     e68:	00018a1b 	andeq	r8, r1, fp, lsl sl
     e6c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     e70:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
     e74:	038f0100 	orreq	r0, pc, #0, 2
     e78:	00008c0d 	andeq	r8, r0, sp, lsl #24
     e7c:	0003d800 	andeq	sp, r3, r0, lsl #16
     e80:	0003d600 	andeq	sp, r3, r0, lsl #12
     e84:	00001500 	andeq	r1, r0, r0, lsl #10
     e88:	055f0000 	ldrbeq	r0, [pc, #-0]	; e90 <__Vectors_Size+0x6d0>
     e8c:	01160000 	tsteq	r6, r0
     e90:	00030550 	andeq	r0, r3, r0, asr r5
     e94:	16000000 	strne	r0, [r0], -r0
     e98:	91025101 	tstls	r2, r1, lsl #2
     e9c:	52011654 	andpl	r1, r1, #84, 12	; 0x5400000
     ea0:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
     ea4:	91035301 	tstls	r3, r1, lsl #6
     ea8:	02160668 	andseq	r0, r6, #104, 12	; 0x6800000
     eac:	9102007d 	tstls	r2, sp, ror r0
     eb0:	0900006c 	stmdbeq	r0, {r2, r3, r5, r6}
     eb4:	00013a04 	andeq	r3, r1, r4, lsl #20
     eb8:	e9010e00 	stmdb	r1, {r9, sl, fp}
     ebc:	01000005 	tsteq	r0, r5
     ec0:	01050384 	smlabbeq	r5, r4, r3, r0
     ec4:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     ed0:	000003eb 	andeq	r0, r0, fp, ror #7
     ed4:	0002ee01 	andeq	lr, r2, r1, lsl #28
     ed8:	05111700 	ldreq	r1, [r1, #-1792]	; 0xfffff900
     edc:	84010000 	strhi	r0, [r1], #-0
     ee0:	02ee1503 	rsceq	r1, lr, #12582912	; 0xc00000
     ee4:	04290000 	strteq	r0, [r9], #-0
     ee8:	04230000 	strteq	r0, [r3], #-0
     eec:	41170000 	tstmi	r7, r0
     ef0:	01000000 	mrseq	r0, (UNDEF: 0)
     ef4:	ee240384 	cdp	3, 2, cr0, cr4, cr4, {4}
     ef8:	5b000000 	blpl	f00 <__Vectors_Size+0x740>
     efc:	55000004 	strpl	r0, [r0, #-4]
     f00:	17000004 	strne	r0, [r0, -r4]
     f04:	000005db 	ldrdeq	r0, [r0], -fp
     f08:	37038401 	strcc	r8, [r3, -r1, lsl #8]
     f0c:	0000024c 	andeq	r0, r0, ip, asr #4
     f10:	0000048d 	andeq	r0, r0, sp, lsl #9
     f14:	00000487 	andeq	r0, r0, r7, lsl #9
     f18:	0061760f 	rsbeq	r7, r1, pc, lsl #12
     f1c:	47038401 	strmi	r8, [r3, -r1, lsl #8]
     f20:	000000e2 	andeq	r0, r0, r2, ror #1
     f24:	000004bb 			; <UNDEFINED> instruction: 0x000004bb
     f28:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
     f2c:	00000015 	andeq	r0, r0, r5, lsl r0
     f30:	00055f00 	andeq	r5, r5, r0, lsl #30
     f34:	50011600 	andpl	r1, r1, r0, lsl #12
     f38:	00000305 	andeq	r0, r0, r5, lsl #6
     f3c:	01160000 	tsteq	r6, r0
     f40:	01f30351 	mvnseq	r0, r1, asr r3
     f44:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
     f48:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
     f4c:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
     f50:	005201f3 	ldrsheq	r0, [r2], #-19	; 0xffffffed
     f54:	33040900 	movwcc	r0, #18688	; 0x4900
     f58:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     f5c:	00051801 	andeq	r1, r5, r1, lsl #16
     f60:	037d0100 	cmneq	sp, #0, 2
     f64:	00850105 	addeq	r0, r5, r5, lsl #2
	...
     f70:	04ce0000 	strbeq	r0, [lr], #0
     f74:	74010000 	strvc	r0, [r1], #-0
     f78:	17000003 	strne	r0, [r0, -r3]
     f7c:	000005db 	ldrdeq	r0, [r0], -fp
     f80:	19037d01 	stmdbne	r3, {r0, r8, sl, fp, ip, sp, lr}
     f84:	0000024c 	andeq	r0, r0, ip, asr #4
     f88:	0000050c 	andeq	r0, r0, ip, lsl #10
     f8c:	00000506 	andeq	r0, r0, r6, lsl #10
     f90:	0061760f 	rsbeq	r7, r1, pc, lsl #12
     f94:	29037d01 	stmdbcs	r3, {r0, r8, sl, fp, ip, sp, lr}
     f98:	000000e2 	andeq	r0, r0, r2, ror #1
     f9c:	0000053a 	andeq	r0, r0, sl, lsr r5
     fa0:	00000538 	andeq	r0, r0, r8, lsr r5
     fa4:	00051113 	andeq	r1, r5, r3, lsl r1
     fa8:	037f0100 	cmneq	pc, #0, 2
     fac:	00037408 	andeq	r7, r3, r8, lsl #8
     fb0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     fb4:	00000015 	andeq	r0, r0, r5, lsl r0
     fb8:	00055f00 	andeq	r5, r5, r0, lsl #30
     fbc:	50011600 	andpl	r1, r1, r0, lsl #12
     fc0:	1b090305 	blne	241bdc <__RAM_SIZE+0x141bdc>
     fc4:	01161000 	tsteq	r6, r0
     fc8:	74910251 	ldrvc	r0, [r1], #593	; 0x251
     fcc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
     fd0:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
     fd4:	01f30353 	mvnseq	r0, r3, asr r3
     fd8:	18000050 	stmdane	r0, {r4, r6}
     fdc:	00000133 	andeq	r0, r0, r3, lsr r1
     fe0:	00000384 	andeq	r0, r0, r4, lsl #7
     fe4:	00003019 	andeq	r3, r0, r9, lsl r0
     fe8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     fec:	0005ea01 	andeq	lr, r5, r1, lsl #20
     ff0:	03730100 	cmneq	r3, #0, 2
     ff4:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    1000:	054d0000 	strbeq	r0, [sp, #-0]
    1004:	33010000 	movwcc	r0, #4096	; 0x1000
    1008:	17000004 	strne	r0, [r0, -r4]
    100c:	00000511 	andeq	r0, r0, r1, lsl r5
    1010:	14037301 	strne	r7, [r3], #-769	; 0xfffffcff
    1014:	000002ee 	andeq	r0, r0, lr, ror #5
    1018:	000005af 	andeq	r0, r0, pc, lsr #11
    101c:	000005a9 	andeq	r0, r0, r9, lsr #11
    1020:	00004117 	andeq	r4, r0, r7, lsl r1
    1024:	03730100 	cmneq	r3, #0, 2
    1028:	0000ee23 	andeq	lr, r0, r3, lsr #28
    102c:	0005e100 	andeq	lr, r5, r0, lsl #2
    1030:	0005db00 	andeq	sp, r5, r0, lsl #22
    1034:	05db1000 	ldrbeq	r1, [fp]
    1038:	73010000 	movwvc	r0, #4096	; 0x1000
    103c:	024c3603 	subeq	r3, ip, #3145728	; 0x300000
    1040:	91020000 	mrsls	r0, (UNDEF: 2)
    1044:	76121178 			; <UNDEFINED> instruction: 0x76121178
    1048:	75010061 	strvc	r0, [r1, #-97]	; 0xffffff9f
    104c:	00e20b03 	rsceq	r0, r2, r3, lsl #22
    1050:	91020000 	mrsls	r0, (UNDEF: 2)
    1054:	6572146c 	ldrbvs	r1, [r2, #-1132]!	; 0xfffffb94
    1058:	77010074 	smlsdxvc	r1, r4, r0, r0
    105c:	008c0d03 	addeq	r0, ip, r3, lsl #26
    1060:	060f0000 	streq	r0, [pc], -r0
    1064:	060d0000 	streq	r0, [sp], -r0
    1068:	00150000 	andseq	r0, r5, r0
    106c:	5f000000 	svcpl	0x00000000
    1070:	16000005 	strne	r0, [r0], -r5
    1074:	03055001 	movweq	r5, #20481	; 0x5001
    1078:	00000000 	andeq	r0, r0, r0
    107c:	03510116 	cmpeq	r1, #-2147483643	; 0x80000005
    1080:	165001f3 			; <UNDEFINED> instruction: 0x165001f3
    1084:	f3035201 	vhsub.u8	d5, d3, d1
    1088:	01165101 	tsteq	r6, r1, lsl #2
    108c:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
    1090:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1094:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1098:	010e0000 	mrseq	r0, (UNDEF: 14)
    109c:	00000624 	andeq	r0, r0, r4, lsr #12
    10a0:	05036901 	streq	r6, [r3, #-2305]	; 0xfffff6ff
    10a4:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    10b0:	00062200 	andeq	r2, r6, r0, lsl #4
    10b4:	04cc0100 	strbeq	r0, [ip], #256	; 0x100
    10b8:	11170000 	tstne	r7, r0
    10bc:	01000005 	tsteq	r0, r5
    10c0:	ee130369 	cdp	3, 1, cr0, cr3, cr9, {3}
    10c4:	84000002 	strhi	r0, [r0], #-2
    10c8:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
    10cc:	10000006 	andne	r0, r0, r6
    10d0:	000005db 	ldrdeq	r0, [r0], -fp
    10d4:	27036901 	strcs	r6, [r3, -r1, lsl #18]
    10d8:	0000024c 	andeq	r0, r0, ip, asr #4
    10dc:	11749102 	cmnne	r4, r2, lsl #2
    10e0:	00617612 	rsbeq	r7, r1, r2, lsl r6
    10e4:	0b036b01 	bleq	dbcf0 <__HEAP_SIZE+0xdacf0>
    10e8:	000000e2 	andeq	r0, r0, r2, ror #1
    10ec:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
    10f0:	00746572 	rsbseq	r6, r4, r2, ror r5
    10f4:	0d036d01 	stceq	13, cr6, [r3, #-4]
    10f8:	0000008c 	andeq	r0, r0, ip, lsl #1
    10fc:	000006b2 			; <UNDEFINED> instruction: 0x000006b2
    1100:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    1104:	00000015 	andeq	r0, r0, r5, lsl r0
    1108:	00055f00 	andeq	r5, r5, r0, lsl #30
    110c:	50011600 	andpl	r1, r1, r0, lsl #12
    1110:	00000305 	andeq	r0, r0, r5, lsl #6
    1114:	01160000 	tsteq	r6, r0
    1118:	01f30351 	mvnseq	r0, r1, asr r3
    111c:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
    1120:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1124:	91035301 	tstls	r3, r1, lsl #6
    1128:	0216065c 	andseq	r0, r6, #92, 12	; 0x5c00000
    112c:	9102007d 	tstls	r2, sp, ror r0
    1130:	0e000060 	cdpeq	0, 0, cr0, cr0, cr0, {3}
    1134:	0005ec01 	andeq	lr, r5, r1, lsl #24
    1138:	035e0100 	cmpeq	lr, #0, 2
    113c:	00850105 	addeq	r0, r5, r5, lsl #2
    1140:	1b140000 	blne	501148 <__RAM_SIZE+0x401148>
    1144:	1b401000 	blne	100514c <__RAM_SIZE+0xf0514c>
    1148:	06c51000 	strbeq	r1, [r5], r0
    114c:	5f010000 	svcpl	0x00010000
    1150:	10000005 	andne	r0, r0, r5
    1154:	000005db 	ldrdeq	r0, [r0], -fp
    1158:	18035e01 	stmdane	r3, {r0, r9, sl, fp, ip, lr}
    115c:	0000024c 	andeq	r0, r0, ip, asr #4
    1160:	11709102 	cmnne	r0, r2, lsl #2
    1164:	00617612 	rsbeq	r7, r1, r2, lsl r6
    1168:	0b036001 	bleq	d9174 <__HEAP_SIZE+0xd8174>
    116c:	000000e2 	andeq	r0, r0, r2, ror #1
    1170:	13649102 	cmnne	r4, #-2147483648	; 0x80000000
    1174:	00000511 	andeq	r0, r0, r1, lsl r5
    1178:	08036201 	stmdaeq	r3, {r0, r9, sp, lr}
    117c:	00000374 	andeq	r0, r0, r4, ror r3
    1180:	14609102 	strbtne	r9, [r0], #-258	; 0xfffffefe
    1184:	00746572 	rsbseq	r6, r4, r2, ror r5
    1188:	0d036301 	stceq	3, cr6, [r3, #-4]
    118c:	0000008c 	andeq	r0, r0, ip, lsl #1
    1190:	00000723 	andeq	r0, r0, r3, lsr #14
    1194:	00000721 	andeq	r0, r0, r1, lsr #14
    1198:	001b3015 	andseq	r3, fp, r5, lsl r0
    119c:	00055f10 	andeq	r5, r5, r0, lsl pc
    11a0:	50011600 	andpl	r1, r1, r0, lsl #12
    11a4:	1b090305 	blne	241dc0 <__RAM_SIZE+0x141dc0>
    11a8:	01161000 	tsteq	r6, r0
    11ac:	40910251 	addsmi	r0, r1, r1, asr r2
    11b0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    11b4:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    11b8:	50910353 	addspl	r0, r1, r3, asr r3
    11bc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    11c0:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    11c4:	e81a0000 	ldmda	sl, {}	; <UNPREDICTABLE>
    11c8:	01000005 	tsteq	r0, r5
    11cc:	010c0241 	tsteq	ip, r1, asr #4
    11d0:	00000085 	andeq	r0, r0, r5, lsl #1
    11d4:	10001488 	andne	r1, r0, r8, lsl #9
    11d8:	10001b08 	andne	r1, r0, r8, lsl #22
    11dc:	00000736 	andeq	r0, r0, r6, lsr r7
    11e0:	000b7d01 	andeq	r7, fp, r1, lsl #26
    11e4:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 2ec <__STACKSEAL_SIZE+0x2ec>
    11e8:	41010074 	tstmi	r1, r4, ror r0
    11ec:	01062402 	tsteq	r6, r2, lsl #8
    11f0:	07770000 	ldrbeq	r0, [r7, -r0]!
    11f4:	076f0000 	strbeq	r0, [pc, -r0]!
    11f8:	11170000 	tstne	r7, r0
    11fc:	01000005 	tsteq	r0, r5
    1200:	ee2f0241 	cdp	2, 2, cr0, cr15, cr1, {2}
    1204:	b5000002 	strlt	r0, [r0, #-2]
    1208:	ab000007 	blge	122c <__HEAP_SIZE+0x22c>
    120c:	17000007 	strne	r0, [r0, -r7]
    1210:	0000064e 	andeq	r0, r0, lr, asr #12
    1214:	44024101 	strmi	r4, [r2], #-257	; 0xfffffeff
    1218:	000000fa 	strdeq	r0, [r0], -sl
    121c:	00000809 	andeq	r0, r0, r9, lsl #16
    1220:	000007f7 	strdeq	r0, [r0], -r7
    1224:	0005db17 	andeq	sp, r5, r7, lsl fp
    1228:	02410100 	subeq	r0, r1, #0, 2
    122c:	00024c58 	andeq	r4, r2, r8, asr ip
    1230:	00087b00 	andeq	r7, r8, r0, lsl #22
    1234:	00087700 	andeq	r7, r8, r0, lsl #14
    1238:	61761b00 	cmnvs	r6, r0, lsl #22
    123c:	02410100 	subeq	r0, r1, #0, 2
    1240:	0000e268 	andeq	lr, r0, r8, ror #4
    1244:	00910200 	addseq	r0, r1, r0, lsl #4
    1248:	0006391c 	andeq	r3, r6, ip, lsl r9
    124c:	02430100 	subeq	r0, r3, #0, 2
    1250:	00003010 	andeq	r3, r0, r0, lsl r0
    1254:	0008b100 	andeq	fp, r8, r0, lsl #2
    1258:	00089900 	andeq	r9, r8, r0, lsl #18
    125c:	070b1c00 	streq	r1, [fp, -r0, lsl #24]
    1260:	43010000 	movwmi	r0, #4096	; 0x1000
    1264:	00301702 	eorseq	r1, r0, r2, lsl #14
    1268:	09550000 	ldmdbeq	r5, {}^	; <UNPREDICTABLE>
    126c:	093f0000 	ldmdbeq	pc!, {}	; <UNPREDICTABLE>
    1270:	451c0000 	ldrmi	r0, [ip, #-0]
    1274:	01000007 	tsteq	r0, r7
    1278:	301e0243 	andscc	r0, lr, r3, asr #4
    127c:	fd000000 	stc2	0, cr0, [r0, #-0]
    1280:	df000009 	svcle	0x00000009
    1284:	14000009 	strne	r0, [r0], #-9
    1288:	4301006e 	movwmi	r0, #4206	; 0x106e
    128c:	00302902 	eorseq	r2, r0, r2, lsl #18
    1290:	0abb0000 	beq	feec1298 <__StackTop+0xc6dc1298>
    1294:	0aad0000 	beq	feb4129c <__StackTop+0xc6a4129c>
    1298:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    129c:	01007864 	tsteq	r0, r4, ror #16
    12a0:	ee0a0244 	cdp	2, 0, cr0, cr10, cr4, {2}
    12a4:	77000000 	strvc	r0, [r0, -r0]
    12a8:	1700000b 	strne	r0, [r0, -fp]
    12ac:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    12b0:	10001564 	andne	r1, r0, r4, ror #10
    12b4:	10001584 	andne	r1, r0, r4, lsl #11
    12b8:	00000663 	andeq	r0, r0, r3, ror #12
    12bc:	01007712 	tsteq	r0, r2, lsl r7
    12c0:	8c11026c 	lfmhi	f0, 4, [r1], {108}	; 0x6c
    12c4:	01000000 	mrseq	r0, (UNDEF: 0)
    12c8:	ac1d0050 	ldcge	0, cr0, [sp], {80}	; 0x50
    12cc:	c0100015 	andsgt	r0, r0, r5, lsl r0
    12d0:	80100015 	andshi	r0, r0, r5, lsl r0
    12d4:	13000006 	movwne	r0, #6
    12d8:	00000705 	andeq	r0, r0, r5, lsl #14
    12dc:	13028001 	movwne	r8, #8193	; 0x2001
    12e0:	0000008c 	andeq	r0, r0, ip, lsl #1
    12e4:	1d005301 	stcne	3, cr5, [r0, #-4]
    12e8:	100016ce 	andne	r1, r0, lr, asr #13
    12ec:	100018ba 			; <UNDEFINED> instruction: 0x100018ba
    12f0:	00000873 	andeq	r0, r0, r3, ror r8
    12f4:	0009141c 	andeq	r1, r9, ip, lsl r4
    12f8:	02b40100 	adcseq	r0, r4, #0, 2
    12fc:	00003016 	andeq	r3, r0, r6, lsl r0
    1300:	000dad00 	andeq	sl, sp, r0, lsl #26
    1304:	000d9100 	andeq	r9, sp, r0, lsl #2
    1308:	01381e00 	teqeq	r8, r0, lsl #28
    130c:	06e90000 	strbteq	r0, [r9], r0
    1310:	6f1f0000 	svcvs	0x001f0000
    1314:	01000005 	tsteq	r0, r5
    1318:	6d1d02d6 	lfmvs	f0, 4, [sp, #-856]	; 0xfffffca8
    131c:	15000000 	strne	r0, [r0, #-0]
    1320:	100017e4 	andne	r1, r0, r4, ror #15
    1324:	0000137c 	andeq	r1, r0, ip, ror r3
    1328:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    132c:	01160077 	tsteq	r6, r7, ror r0
    1330:	00780251 	rsbseq	r0, r8, r1, asr r2
    1334:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1338:	01160074 	tsteq	r6, r4, ror r0
    133c:	00760253 	rsbseq	r0, r6, r3, asr r2
    1340:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    1344:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1348:	021c7d02 	andseq	r7, ip, #2, 26	; 0x80
    134c:	00000075 	andeq	r0, r0, r5, ror r0
    1350:	0017f01d 	andseq	pc, r7, sp, lsl r0	; <UNPREDICTABLE>
    1354:	00182010 	andseq	r2, r8, r0, lsl r0
    1358:	00073e10 	andeq	r3, r7, r0, lsl lr
    135c:	056f1300 	strbeq	r1, [pc, #-768]!	; 1064 <__HEAP_SIZE+0x64>
    1360:	db010000 	blle	41368 <__HEAP_SIZE+0x40368>
    1364:	005a1802 	subseq	r1, sl, r2, lsl #16
    1368:	52010000 	andpl	r0, r1, #0
    136c:	00181e15 	andseq	r1, r8, r5, lsl lr
    1370:	00150f10 	andseq	r0, r5, r0, lsl pc
    1374:	50011600 	andpl	r1, r1, r0, lsl #12
    1378:	16007702 	strne	r7, [r0], -r2, lsl #14
    137c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1380:	52011600 	andpl	r1, r1, #0, 12
    1384:	16007402 	strne	r7, [r0], -r2, lsl #8
    1388:	76025301 	strvc	r5, [r2], -r1, lsl #6
    138c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1390:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1394:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1398:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    139c:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    13a0:	00007502 	andeq	r7, r0, r2, lsl #10
    13a4:	01201e00 			; <UNDEFINED> instruction: 0x01201e00
    13a8:	07950000 	ldreq	r0, [r5, r0]
    13ac:	6f1c0000 	svcvs	0x001c0000
    13b0:	01000005 	tsteq	r0, r5
    13b4:	8c1702df 	lfmhi	f0, 4, [r7], {223}	; 0xdf
    13b8:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    13bc:	5c00000e 	stcpl	0, cr0, [r0], {14}
    13c0:	1500000e 	strne	r0, [r0, #-14]
    13c4:	1000179e 	mulne	r0, lr, r7
    13c8:	0000150f 	andeq	r1, r0, pc, lsl #10
    13cc:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    13d0:	01160077 	tsteq	r6, r7, ror r0
    13d4:	00780251 	rsbseq	r0, r8, r1, asr r2
    13d8:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    13dc:	01160074 	tsteq	r6, r4, ror r0
    13e0:	00760253 	rsbseq	r0, r6, r3, asr r2
    13e4:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    13e8:	16007b02 	strne	r7, [r0], -r2, lsl #22
    13ec:	03107d02 	tsteq	r0, #2, 26	; 0x80
    13f0:	16064891 			; <UNDEFINED> instruction: 0x16064891
    13f4:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    13f8:	00000075 	andeq	r0, r0, r5, ror r0
    13fc:	0001081e 	andeq	r0, r1, lr, lsl r8
    1400:	0007f200 	andeq	pc, r7, r0, lsl #4
    1404:	056f1c00 	strbeq	r1, [pc, #-3072]!	; 80c <__Vectors_Size+0x4c>
    1408:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    140c:	009d2002 	addseq	r2, sp, r2
    1410:	0e750000 	cdpeq	0, 7, cr0, cr5, cr0, {0}
    1414:	0e710000 	cdpeq	0, 7, cr0, cr1, cr0, {0}
    1418:	48150000 	ldmdami	r5, {}	; <UNPREDICTABLE>
    141c:	0f100017 	svceq	0x00100017
    1420:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1424:	77025001 	strvc	r5, [r2, -r1]
    1428:	51011600 	tstpl	r1, r0, lsl #12
    142c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1430:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1434:	53011600 	movwpl	r1, #5632	; 0x1600
    1438:	16007602 	strne	r7, [r0], -r2, lsl #12
    143c:	01047d02 	tsteq	r4, r2, lsl #26
    1440:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1444:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1448:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    144c:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    1450:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1454:	00007502 	andeq	r7, r0, r2, lsl #10
    1458:	18722000 	ldmdane	r2!, {sp}^
    145c:	137c1000 	cmnne	ip, #0
    1460:	08340000 	ldmdaeq	r4!, {}	; <UNPREDICTABLE>
    1464:	01160000 	tsteq	r6, r0
    1468:	00770250 	rsbseq	r0, r7, r0, asr r2
    146c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1470:	01160078 	tsteq	r6, r8, ror r0
    1474:	00740252 	rsbseq	r0, r4, r2, asr r2
    1478:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    147c:	02160076 	andseq	r0, r6, #118	; 0x76
    1480:	3001087d 	andcc	r0, r1, sp, ror r8
    1484:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    1488:	16007b02 	strne	r7, [r0], -r2, lsl #22
    148c:	031c7d02 	tsteq	ip, #2, 26	; 0x80
    1490:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1494:	02207d02 	eoreq	r7, r0, #2, 26	; 0x80
    1498:	15000075 	strne	r0, [r0, #-117]	; 0xffffff8b
    149c:	1000189c 	mulne	r0, ip, r8
    14a0:	0000150f 	andeq	r1, r0, pc, lsl #10
    14a4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    14a8:	01160077 	tsteq	r6, r7, ror r0
    14ac:	00780251 	rsbseq	r0, r8, r1, asr r2
    14b0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    14b4:	01160074 	tsteq	r6, r4, ror r0
    14b8:	00760253 	rsbseq	r0, r6, r3, asr r2
    14bc:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    14c0:	02163001 	andseq	r3, r6, #1
    14c4:	7b020c7d 	blvc	846c0 <__HEAP_SIZE+0x836c0>
    14c8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    14cc:	48910310 	ldmmi	r1, {r4, r8, r9}
    14d0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    14d4:	00750214 	rsbseq	r0, r5, r4, lsl r2
    14d8:	f01e0000 			; <UNDEFINED> instruction: 0xf01e0000
    14dc:	ec000000 	stc	0, cr0, [r0], {-0}
    14e0:	14000008 	strne	r0, [r0], #-8
    14e4:	0901006c 	stmdbeq	r1, {r2, r3, r5, r6}
    14e8:	00301603 	eorseq	r1, r0, r3, lsl #12
    14ec:	0ea80000 	cdpeq	0, 10, cr0, cr8, cr0, {0}
    14f0:	0e940000 	cdpeq	0, 9, cr0, cr4, cr0, {0}
    14f4:	66210000 	strtvs	r0, [r1], -r0
    14f8:	ab100019 	blge	401564 <__RAM_SIZE+0x301564>
    14fc:	16000008 	strne	r0, [r0], -r8
    1500:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1504:	52011600 	andpl	r1, r1, #0, 12
    1508:	16007402 	strne	r7, [r0], -r2, lsl #8
    150c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1510:	7e210000 	cdpvc	0, 2, cr0, cr1, cr0, {0}
    1514:	cd100019 	ldcgt	0, cr0, [r0, #-100]	; 0xffffff9c
    1518:	16000008 	strne	r0, [r0], -r8
    151c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1520:	51011620 	tstpl	r1, r0, lsr #12
    1524:	16007802 	strne	r7, [r0], -r2, lsl #16
    1528:	7a025201 	bvc	95d34 <__HEAP_SIZE+0x94d34>
    152c:	5301167f 	movwpl	r1, #5759	; 0x167f
    1530:	00007602 	andeq	r7, r0, r2, lsl #12
    1534:	0019aa22 	andseq	sl, r9, r2, lsr #20
    1538:	50011610 	andpl	r1, r1, r0, lsl r6
    153c:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1540:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1544:	52011600 	andpl	r1, r1, #0, 12
    1548:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    154c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1550:	1d000000 	stcne	0, cr0, [r0, #-0]
    1554:	100019ba 			; <UNDEFINED> instruction: 0x100019ba
    1558:	10001a84 	andne	r1, r0, r4, lsl #21
    155c:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
    1560:	01007014 	tsteq	r0, r4, lsl r0
    1564:	4c15031d 	ldcmi	3, cr0, [r5], {29}
    1568:	24000002 	strcs	r0, [r0], #-2
    156c:	2000000f 	andcs	r0, r0, pc
    1570:	1400000f 	strne	r0, [r0], #-15
    1574:	1e01006c 	cdpne	0, 0, cr0, cr1, cr12, {3}
    1578:	00301603 	eorseq	r1, r0, r3, lsl #12
    157c:	0f580000 	svceq	0x00580000
    1580:	0f420000 	svceq	0x00420000
    1584:	64230000 	strtvs	r0, [r3], #-0
    1588:	d2000019 	andle	r0, r0, #25
    158c:	e8100019 	ldmda	r0, {r0, r3, r4}
    1590:	01100019 	tsteq	r0, r9, lsl r0
    1594:	541a031e 	ldrpl	r0, [sl], #-798	; 0xfffffce2
    1598:	24000009 	strcs	r0, [r0], #-9
    159c:	00001982 	andeq	r1, r0, r2, lsl #19
    15a0:	00000fe1 	andeq	r0, r0, r1, ror #31
    15a4:	00000fdb 	ldrdeq	r0, [r0], -fp
    15a8:	00197625 	andseq	r7, r9, r5, lsr #12
    15ac:	198e2600 	stmibne	lr, {r9, sl, sp}
    15b0:	100c0000 	andne	r0, ip, r0
    15b4:	100a0000 	andne	r0, sl, r0
    15b8:	21000000 	mrscs	r0, (UNDEF: 0)
    15bc:	10001a20 	andne	r1, r0, r0, lsr #20
    15c0:	00000976 	andeq	r0, r0, r6, ror r9
    15c4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    15c8:	01162008 	tsteq	r6, r8
    15cc:	00780251 	rsbseq	r0, r8, r1, asr r2
    15d0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    15d4:	01167f79 	tsteq	r6, r9, ror pc
    15d8:	00760253 	rsbseq	r0, r6, r3, asr r2
    15dc:	1a422100 	bne	10899e4 <__RAM_SIZE+0xf899e4>
    15e0:	09921000 	ldmibeq	r2, {ip}
    15e4:	01160000 	tsteq	r6, r0
    15e8:	00780251 	rsbseq	r0, r8, r1, asr r2
    15ec:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    15f0:	01167f75 	tsteq	r6, r5, ror pc
    15f4:	007b0253 	rsbseq	r0, fp, r3, asr r2
    15f8:	1a742200 	bne	1d09e00 <__RAM_SIZE+0x1c09e00>
    15fc:	01161000 	tsteq	r6, r0
    1600:	20080250 	andcs	r0, r8, r0, asr r2
    1604:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1608:	01160078 	tsteq	r6, r8, ror r0
    160c:	7f750252 	svcvc	0x00750252
    1610:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1614:	00000076 	andeq	r0, r0, r6, ror r0
    1618:	001a841d 	andseq	r8, sl, sp, lsl r4
    161c:	001aba10 	andseq	fp, sl, r0, lsl sl
    1620:	000a1610 	andeq	r1, sl, r0, lsl r6
    1624:	073f1c00 	ldreq	r1, [pc, -r0, lsl #24]!
    1628:	3a010000 	bcc	41630 <__HEAP_SIZE+0x40630>
    162c:	0b841403 	bleq	fe106640 <__StackTop+0xc6006640>
    1630:	10210000 	eorne	r0, r1, r0
    1634:	101f0000 	andsne	r0, pc, r0
    1638:	b0150000 	andslt	r0, r5, r0
    163c:	0f10001a 	svceq	0x0010001a
    1640:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1644:	77025001 	strvc	r5, [r2, -r1]
    1648:	51011600 	tstpl	r1, r0, lsl #12
    164c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1650:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1654:	53011600 	movwpl	r1, #5632	; 0x1600
    1658:	16007602 	strne	r7, [r0], -r2, lsl #12
    165c:	01047d02 	tsteq	r4, r2, lsl #26
    1660:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1664:	16400108 	strbne	r0, [r0], -r8, lsl #2
    1668:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    166c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1670:	3801107d 	stmdacc	r1, {r0, r2, r3, r4, r5, r6, ip}
    1674:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1678:	00007502 	andeq	r7, r0, r2, lsl #10
    167c:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    1680:	14e80000 	strbtne	r0, [r8], #0
    1684:	00031000 	andeq	r1, r3, r0
    1688:	100014e8 	andne	r1, r0, r8, ror #9
    168c:	100014ee 	andne	r1, r0, lr, ror #9
    1690:	09026801 	stmdbeq	r2, {r0, fp, sp, lr}
    1694:	00000a3f 	andeq	r0, r0, pc, lsr sl
    1698:	00195824 	andseq	r5, r9, r4, lsr #16
    169c:	00103700 	andseq	r3, r0, r0, lsl #14
    16a0:	00103500 	andseq	r3, r0, r0, lsl #10
    16a4:	46270000 	strtmi	r0, [r7], -r0
    16a8:	8e000019 	mcrhi	0, 0, r0, cr0, cr9, {0}
    16ac:	00100015 	andseq	r0, r0, r5, lsl r0
    16b0:	00158e00 	andseq	r8, r5, r0, lsl #28
    16b4:	00159410 	andseq	r9, r5, r0, lsl r4
    16b8:	027c0110 	rsbseq	r0, ip, #16, 2
    16bc:	000a680b 	andeq	r6, sl, fp, lsl #16
    16c0:	19582400 	ldmdbne	r8, {sl, sp}^
    16c4:	104c0000 	subne	r0, ip, r0
    16c8:	104a0000 	subne	r0, sl, r0
    16cc:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    16d0:	100014b6 			; <UNDEFINED> instruction: 0x100014b6
    16d4:	87007702 	strhi	r7, [r0, -r2, lsl #14]
    16d8:	1600000a 	strne	r0, [r0], -sl
    16dc:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    16e0:	52011600 	andpl	r1, r1, #0, 12
    16e4:	16007402 	strne	r7, [r0], -r2, lsl #8
    16e8:	76025301 	strvc	r5, [r2], -r1, lsl #6
    16ec:	60200000 	eorvs	r0, r0, r0
    16f0:	d8100015 	ldmdale	r0, {r0, r2, r4}
    16f4:	9b000018 	blls	175c <__HEAP_SIZE+0x75c>
    16f8:	1600000a 	strne	r0, [r0], -sl
    16fc:	91025001 	tstls	r2, r1
    1700:	a8200054 	stmdage	r0!, {r2, r4, r6}
    1704:	d8100015 	ldmdale	r0, {r0, r2, r4}
    1708:	af000018 	svcge	0x00000018
    170c:	1600000a 	strne	r0, [r0], -sl
    1710:	91025001 	tstls	r2, r1
    1714:	ea200054 	b	80186c <__RAM_SIZE+0x70186c>
    1718:	a8100018 	ldmdage	r0, {r3, r4}
    171c:	eb00000f 	bl	1760 <__HEAP_SIZE+0x760>
    1720:	1600000a 	strne	r0, [r0], -sl
    1724:	77025001 	strvc	r5, [r2, -r1]
    1728:	51011600 	tstpl	r1, r0, lsl #12
    172c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1730:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1734:	53011600 	movwpl	r1, #5632	; 0x1600
    1738:	16007602 	strne	r7, [r0], -r2, lsl #12
    173c:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1740:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1744:	91030c7d 	tstls	r3, sp, ror ip
    1748:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    174c:	7502107d 	strvc	r1, [r2, #-125]	; 0xffffff83
    1750:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
    1754:	89100019 	ldmdbhi	r0, {r0, r3, r4}
    1758:	2700000b 	strcs	r0, [r0, -fp]
    175c:	1600000b 	strne	r0, [r0], -fp
    1760:	77025001 	strvc	r5, [r2, -r1]
    1764:	51011600 	tstpl	r1, r0, lsl #12
    1768:	16007802 	strne	r7, [r0], -r2, lsl #16
    176c:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1770:	53011600 	movwpl	r1, #5632	; 0x1600
    1774:	16007602 	strne	r7, [r0], -r2, lsl #12
    1778:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    177c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1780:	91030c7d 	tstls	r3, sp, ror ip
    1784:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1788:	7502107d 	strvc	r1, [r2, #-125]	; 0xffffff83
    178c:	c6210000 	strtgt	r0, [r1], -r0
    1790:	4910001a 	ldmdbmi	r0, {r1, r3, r4}
    1794:	1600000b 	strne	r0, [r0], -fp
    1798:	08025001 	stmdaeq	r2, {r0, ip, lr}
    179c:	51011625 	tstpl	r1, r5, lsr #12
    17a0:	16007802 	strne	r7, [r0], -r2, lsl #16
    17a4:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    17a8:	53011600 	movwpl	r1, #5632	; 0x1600
    17ac:	00007602 	andeq	r7, r0, r2, lsl #12
    17b0:	001ada21 	andseq	sp, sl, r1, lsr #20
    17b4:	000b6510 	andeq	r6, fp, r0, lsl r5
    17b8:	51011600 	tstpl	r1, r0, lsl #12
    17bc:	16007802 	strne	r7, [r0], -r2, lsl #16
    17c0:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    17c4:	53011600 	movwpl	r1, #5632	; 0x1600
    17c8:	00007602 	andeq	r7, r0, r2, lsl #12
    17cc:	001afa22 	andseq	pc, sl, r2, lsr #20
    17d0:	50011610 	andpl	r1, r1, r0, lsl r6
    17d4:	01163001 	tsteq	r6, r1
    17d8:	00780251 	rsbseq	r0, r8, r1, asr r2
    17dc:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    17e0:	00000076 	andeq	r0, r0, r6, ror r0
    17e4:	78020102 	stmdavc	r2, {r1, r8}
    17e8:	03000006 	movweq	r0, #6
    17ec:	00000b7d 	andeq	r0, r0, sp, ror fp
    17f0:	0005361a 	andeq	r3, r5, sl, lsl r6
    17f4:	01d30100 	bicseq	r0, r3, r0, lsl #2
    17f8:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    17fc:	0d000000 	stceq	0, cr0, [r0, #-0]
    1800:	10ea1000 	rscne	r1, sl, r0
    1804:	105f1000 	subsne	r1, pc, r0
    1808:	a3010000 	movwge	r0, #4096	; 0x1000
    180c:	0f00000f 	svceq	0x0000000f
    1810:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1814:	2201d301 	andcs	sp, r1, #67108864	; 0x4000000
    1818:	00000106 	andeq	r0, r0, r6, lsl #2
    181c:	000010c1 	andeq	r1, r0, r1, asr #1
    1820:	000010bd 	strheq	r1, [r0], -sp
    1824:	00051117 	andeq	r1, r5, r7, lsl r1
    1828:	01d30100 	bicseq	r0, r3, r0, lsl #2
    182c:	0002ee2d 	andeq	lr, r2, sp, lsr #28
    1830:	0010e300 	andseq	lr, r0, r0, lsl #6
    1834:	0010df00 	andseq	sp, r0, r0, lsl #30
    1838:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    183c:	d3010078 	movwle	r0, #4216	; 0x1078
    1840:	00ee3c01 	rsceq	r3, lr, r1, lsl #24
    1844:	11170000 	tstne	r7, r0
    1848:	11010000 	mrsne	r0, (UNDEF: 1)
    184c:	4e170000 	cdpmi	0, 1, cr0, cr7, cr0, {0}
    1850:	01000006 	tsteq	r0, r6
    1854:	ee4801d3 	mcr	1, 2, r0, cr8, cr3, {6}
    1858:	9c000000 	stcls	0, cr0, [r0], {-0}
    185c:	98000011 	stmdals	r0, {r0, r4}
    1860:	17000011 	smladne	r0, r1, r0, r0
    1864:	0000056f 	andeq	r0, r0, pc, ror #10
    1868:	5701d301 	strpl	sp, [r1, -r1, lsl #6]
    186c:	00000029 	andeq	r0, r0, r9, lsr #32
    1870:	000011c6 	andeq	r1, r0, r6, asr #3
    1874:	000011ba 			; <UNDEFINED> instruction: 0x000011ba
    1878:	00070517 	andeq	r0, r7, r7, lsl r5
    187c:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1880:	0000306b 	andeq	r3, r0, fp, rrx
    1884:	00122500 	andseq	r2, r2, r0, lsl #10
    1888:	00121900 	andseq	r1, r2, r0, lsl #18
    188c:	070b1700 	streq	r1, [fp, -r0, lsl #14]
    1890:	d3010000 	movwle	r0, #4096	; 0x1000
    1894:	00307e01 	eorseq	r7, r0, r1, lsl #28
    1898:	12770000 	rsbsne	r0, r7, #0
    189c:	12730000 	rsbsne	r0, r3, #0
    18a0:	39170000 	ldmdbcc	r7, {}	; <UNPREDICTABLE>
    18a4:	01000006 	tsteq	r0, r6
    18a8:	309201d3 			; <UNDEFINED> instruction: 0x309201d3
    18ac:	9f000000 	svcls	0x00000000
    18b0:	97000012 	smladls	r0, r2, r0, r0
    18b4:	1c000012 	stcne	0, cr0, [r0], {18}
    18b8:	000005a0 	andeq	r0, r0, r0, lsr #11
    18bc:	0e01db01 	vmlaeq.f64	d13, d1, d1
    18c0:	00000b84 	andeq	r0, r0, r4, lsl #23
    18c4:	000012da 	ldrdeq	r1, [r0], -sl
    18c8:	000012d6 	ldrdeq	r1, [r0], -r6
    18cc:	e7010829 	str	r0, [r1, -r9, lsr #16]
    18d0:	0c860301 	stceq	3, cr0, [r6], {1}
    18d4:	552a0000 	strpl	r0, [sl, #-0]!
    18d8:	01e80100 	mvneq	r0, r0, lsl #2
    18dc:	0000a20e 	andeq	sl, r0, lr, lsl #4
    18e0:	00462a00 	subeq	r2, r6, r0, lsl #20
    18e4:	0e01e901 	vmlaeq.f16	s28, s2, s2	; <UNPREDICTABLE>
    18e8:	00000029 	andeq	r0, r0, r9, lsr #32
    18ec:	06931c00 	ldreq	r1, [r3], r0, lsl #24
    18f0:	ea010000 	b	418f8 <__HEAP_SIZE+0x408f8>
    18f4:	0c650501 	cfstr64eq	mvdx0, [r5], #-4
    18f8:	131e0000 	tstne	lr, #0
    18fc:	131a0000 	tstne	sl, #0
    1900:	f31c0000 	vhadd.u16	d0, d12, d0
    1904:	01000004 	tsteq	r0, r4
    1908:	850701ed 	strhi	r0, [r7, #-493]	; 0xfffffe13
    190c:	56000000 	strpl	r0, [r0], -r0
    1910:	4a000013 	bmi	1964 <__HEAP_SIZE+0x964>
    1914:	1c000013 	stcne	0, cr0, [r0], {19}
    1918:	00000505 	andeq	r0, r0, r5, lsl #10
    191c:	0701f001 	streq	pc, [r1, -r1]
    1920:	00000085 	andeq	r0, r0, r5, lsl #1
    1924:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
    1928:	000013a9 	andeq	r1, r0, r9, lsr #7
    192c:	01007a14 	tsteq	r0, r4, lsl sl
    1930:	a31001f3 	tstge	r0, #-1073741764	; 0xc000003c
    1934:	f500000f 			; <UNDEFINED> instruction: 0xf500000f
    1938:	f3000013 	vqadd.u8	d0, d0, d3
    193c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1940:	0100327a 	tsteq	r0, sl, ror r2
    1944:	a31001f4 	tstge	r0, #244, 2	; 0x3d
    1948:	1300000f 	movwne	r0, #15
    194c:	0d000014 	stceq	0, cr0, [r0, #-80]	; 0xffffffb0
    1950:	1c000014 	stcne	0, cr0, [r0], {20}
    1954:	00000520 	andeq	r0, r0, r0, lsr #10
    1958:	1001ff01 	andne	pc, r1, r1, lsl #30
    195c:	00000030 	andeq	r0, r0, r0, lsr r0
    1960:	00001451 	andeq	r1, r0, r1, asr r4
    1964:	00001445 	andeq	r1, r0, r5, asr #8
    1968:	00070a1c 	andeq	r0, r7, ip, lsl sl
    196c:	02190100 	andseq	r0, r9, #0, 2
    1970:	00003010 	andeq	r3, r0, r0, lsl r0
    1974:	0014a800 	andseq	sl, r4, r0, lsl #16
    1978:	00149e00 	andseq	r9, r4, r0, lsl #28
    197c:	058c1c00 	streq	r1, [ip, #3072]	; 0xc00
    1980:	2c010000 	stccs	0, cr0, [r1], {-0}
    1984:	00fa1002 	rscseq	r1, sl, r2
    1988:	14ea0000 	strbtne	r0, [sl], #0
    198c:	14e80000 	strbtne	r0, [r8], #0
    1990:	1e2b0000 	cdpne	0, 2, cr0, cr11, cr0, {0}
    1994:	1c10000d 	ldcne	0, cr0, [r0], {13}
    1998:	2b00001b 	blcs	1a0c <__HEAP_SIZE+0xa0c>
    199c:	10000d32 	andne	r0, r0, r2, lsr sp
    19a0:	00001b27 	andeq	r1, r0, r7, lsr #22
    19a4:	000d482b 	andeq	r4, sp, fp, lsr #16
    19a8:	001b3210 	andseq	r3, fp, r0, lsl r2
    19ac:	0d5a2b00 	vldreq	d18, [sl, #-0]
    19b0:	1b321000 	blne	c859b8 <__RAM_SIZE+0xb859b8>
    19b4:	962b0000 	strtls	r0, [fp], -r0
    19b8:	3d10000d 	ldccc	0, cr0, [r0, #-52]	; 0xffffffcc
    19bc:	2b00001b 	blcs	1a30 <__HEAP_SIZE+0xa30>
    19c0:	10000da0 	andne	r0, r0, r0, lsr #27
    19c4:	00001b48 	andeq	r1, r0, r8, asr #22
    19c8:	000daa2b 	andeq	sl, sp, fp, lsr #20
    19cc:	001b5310 	andseq	r5, fp, r0, lsl r3
    19d0:	0dba2b00 			; <UNDEFINED> instruction: 0x0dba2b00
    19d4:	1b5e1000 	blne	17859dc <__RAM_SIZE+0x16859dc>
    19d8:	c42b0000 	strtgt	r0, [fp], #-0
    19dc:	4810000d 	ldmdami	r0, {r0, r2, r3}
    19e0:	2b00001b 	blcs	1a54 <__HEAP_SIZE+0xa54>
    19e4:	10000dd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    19e8:	00001b53 	andeq	r1, r0, r3, asr fp
    19ec:	000dd42b 	andeq	sp, sp, fp, lsr #8
    19f0:	001b6910 	andseq	r6, fp, r0, lsl r9
    19f4:	0dda2b00 	vldreq	d18, [sl]
    19f8:	1b3d1000 	blne	f45a00 <__RAM_SIZE+0xe45a00>
    19fc:	e82b0000 	stmda	fp!, {}	; <UNPREDICTABLE>
    1a00:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1a04:	2b00001b 	blcs	1a78 <__HEAP_SIZE+0xa78>
    1a08:	10000df0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1a0c:	00001b53 	andeq	r1, r0, r3, asr fp
    1a10:	000df42b 	andeq	pc, sp, fp, lsr #8
    1a14:	001b6910 	andseq	r6, fp, r0, lsl r9
    1a18:	0e042b00 	vmlaeq.f64	d2, d4, d0
    1a1c:	1b481000 	blne	1205a24 <__RAM_SIZE+0x1105a24>
    1a20:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
    1a24:	3d10000e 	ldccc	0, cr0, [r0, #-56]	; 0xffffffc8
    1a28:	2b00001b 	blcs	1a9c <__HEAP_SIZE+0xa9c>
    1a2c:	10000e18 	andne	r0, r0, r8, lsl lr
    1a30:	00001b48 	andeq	r1, r0, r8, asr #22
    1a34:	000e242b 	andeq	r2, lr, fp, lsr #8
    1a38:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1a3c:	0e302b00 	vaddeq.f64	d2, d0, d0
    1a40:	1b481000 	blne	1205a48 <__RAM_SIZE+0x1105a48>
    1a44:	542b0000 	strtpl	r0, [fp], #-0
    1a48:	5310000e 	tstpl	r0, #14
    1a4c:	2b00001b 	blcs	1ac0 <__HEAP_SIZE+0xac0>
    1a50:	10000e66 	andne	r0, r0, r6, ror #28
    1a54:	00001b5e 	andeq	r1, r0, lr, asr fp
    1a58:	000e762b 	andeq	r7, lr, fp, lsr #12
    1a5c:	001b7410 	andseq	r7, fp, r0, lsl r4
    1a60:	0e7e2b00 	vaddeq.f64	d18, d14, d0
    1a64:	1b531000 	blne	14c5a6c <__RAM_SIZE+0x13c5a6c>
    1a68:	8a2b0000 	bhi	ac1a70 <__RAM_SIZE+0x9c1a70>
    1a6c:	7410000e 	ldrvc	r0, [r0], #-14
    1a70:	2b00001b 	blcs	1ae4 <__HEAP_SIZE+0xae4>
    1a74:	10000e92 	mulne	r0, r2, lr
    1a78:	00001b53 	andeq	r1, r0, r3, asr fp
    1a7c:	000e9e2b 	andeq	r9, lr, fp, lsr #28
    1a80:	001b7410 	andseq	r7, fp, r0, lsl r4
    1a84:	0eaa2b00 	vfmaeq.f64	d2, d10, d0
    1a88:	1b531000 	blne	14c5a90 <__RAM_SIZE+0x13c5a90>
    1a8c:	b62b0000 	strtlt	r0, [fp], -r0
    1a90:	7410000e 	ldrvc	r0, [r0], #-14
    1a94:	2b00001b 	blcs	1b08 <__HEAP_SIZE+0xb08>
    1a98:	10000ebe 			; <UNDEFINED> instruction: 0x10000ebe
    1a9c:	00001b53 	andeq	r1, r0, r3, asr fp
    1aa0:	000ec62b 	andeq	ip, lr, fp, lsr #12
    1aa4:	001b4810 	andseq	r4, fp, r0, lsl r8
    1aa8:	0ed62b00 	vfnmseq.f64	d18, d6, d0
    1aac:	1b271000 	blne	9c5ab4 <__RAM_SIZE+0x8c5ab4>
    1ab0:	e62b0000 	strt	r0, [fp], -r0
    1ab4:	7410000e 	ldrvc	r0, [r0], #-14
    1ab8:	2b00001b 	blcs	1b2c <__HEAP_SIZE+0xb2c>
    1abc:	10000f0e 	andne	r0, r0, lr, lsl #30
    1ac0:	00001b7f 	andeq	r1, r0, pc, ror fp
    1ac4:	000f202b 	andeq	r2, pc, fp, lsr #32
    1ac8:	001b3210 	andseq	r3, fp, r0, lsl r2
    1acc:	0f522000 	svceq	0x00522000
    1ad0:	0fa81000 	svceq	0x00a81000
    1ad4:	0eae0000 	cdpeq	0, 10, cr0, cr14, cr0, {0}
    1ad8:	01160000 	tsteq	r6, r0
    1adc:	007a0250 	rsbseq	r0, sl, r0, asr r2
    1ae0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1ae4:	01160074 	tsteq	r6, r4, ror r0
    1ae8:	007b0252 	rsbseq	r0, fp, r2, asr r2
    1aec:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1af0:	02160075 	andseq	r0, r6, #117	; 0x75
    1af4:	9105007d 	tstls	r5, sp, ror r0
    1af8:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    1afc:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1b00:	06089103 	streq	r9, [r8], -r3, lsl #2
    1b04:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1b08:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1b0c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1b10:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1b14:	102c2b00 	eorne	r2, ip, r0, lsl #22
    1b18:	1b741000 	blne	1d05b20 <__RAM_SIZE+0x1c05b20>
    1b1c:	3c2b0000 	stccc	0, cr0, [fp], #-0
    1b20:	32100010 	andscc	r0, r0, #16
    1b24:	2000001b 	andcs	r0, r0, fp, lsl r0
    1b28:	10001064 	andne	r1, r0, r4, rrx
    1b2c:	00000fa8 	andeq	r0, r0, r8, lsr #31
    1b30:	00000f0c 	andeq	r0, r0, ip, lsl #30
    1b34:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b38:	0116007a 	tsteq	r6, sl, ror r0
    1b3c:	00740251 	rsbseq	r0, r4, r1, asr r2
    1b40:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1b44:	0116007b 	tsteq	r6, fp, ror r0
    1b48:	00750253 	rsbseq	r0, r5, r3, asr r2
    1b4c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1b50:	7fa89106 	svcvc	0x00a89106
    1b54:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    1b58:	03087d02 	movweq	r7, #36098	; 0x8d02
    1b5c:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1b60:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1b64:	02160078 	andseq	r0, r6, #120	; 0x78
    1b68:	9107107d 	tstls	r7, sp, ror r0
    1b6c:	ff0b0610 			; <UNDEFINED> instruction: 0xff0b0610
    1b70:	21001af7 	strdcs	r1, [r0, -r7]
    1b74:	10001084 	andne	r1, r0, r4, lsl #1
    1b78:	00000f28 	andeq	r0, r0, r8, lsr #30
    1b7c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1b80:	01160074 	tsteq	r6, r4, ror r0
    1b84:	7f780252 	svcvc	0x00780252
    1b88:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1b8c:	20000075 	andcs	r0, r0, r5, ror r0
    1b90:	100010ae 	andne	r1, r0, lr, lsr #1
    1b94:	0000150f 	andeq	r1, r0, pc, lsl #10
    1b98:	00000f84 	andeq	r0, r0, r4, lsl #31
    1b9c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1ba0:	0116007a 	tsteq	r6, sl, ror r0
    1ba4:	00740251 	rsbseq	r0, r4, r1, asr r2
    1ba8:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1bac:	01160078 	tsteq	r6, r8, ror r0
    1bb0:	00750253 	rsbseq	r0, r5, r3, asr r2
    1bb4:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1bb8:	4f00760c 	svcmi	0x0000760c
    1bbc:	27007626 	strcs	r7, [r0, -r6, lsr #12]
    1bc0:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    1bc4:	7d02161c 	stcvc	6, cr1, [r2, #-112]	; 0xffffff90
    1bc8:	00760404 	rsbseq	r0, r6, r4, lsl #8
    1bcc:	0216254f 	andseq	r2, r6, #331350016	; 0x13c00000
    1bd0:	3a01087d 	bcc	43dcc <__HEAP_SIZE+0x42dcc>
    1bd4:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1bd8:	7fb09104 	svcvc	0x00b09104
    1bdc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1be0:	00770210 	rsbseq	r0, r7, r0, lsl r2
    1be4:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1be8:	22003501 	andcs	r3, r0, #4194304	; 0x400000
    1bec:	100010dc 	ldrdne	r1, [r0], -ip
    1bf0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1bf4:	01162008 	tsteq	r6, r8
    1bf8:	00740251 	rsbseq	r0, r4, r1, asr r2
    1bfc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1c00:	01167f76 	tsteq	r6, r6, ror pc
    1c04:	00750253 	rsbseq	r0, r5, r3, asr r2
    1c08:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    1c0c:	1a000000 	bne	1c14 <__HEAP_SIZE+0xc14>
    1c10:	000005e2 	andeq	r0, r0, r2, ror #11
    1c14:	0f015301 	svceq	0x00015301
    1c18:	0000ee01 	andeq	lr, r0, r1, lsl #28
    1c1c:	0010f000 	andseq	pc, r0, r0
    1c20:	00148610 	andseq	r8, r4, r0, lsl r6
    1c24:	0014fd10 	andseq	pc, r4, r0, lsl sp	; <UNPREDICTABLE>
    1c28:	13570100 	cmpne	r7, #0, 2
    1c2c:	6f0f0000 	svcvs	0x000f0000
    1c30:	01007475 	tsteq	r0, r5, ror r4
    1c34:	06220153 			; <UNDEFINED> instruction: 0x06220153
    1c38:	5f000001 	svcpl	0x00000001
    1c3c:	5b000015 	blpl	1c98 <__HEAP_SIZE+0xc98>
    1c40:	17000015 	smladne	r0, r5, r0, r0
    1c44:	00000511 	andeq	r0, r0, r1, lsl r5
    1c48:	2d015301 	stccs	3, cr5, [r1, #-4]
    1c4c:	000002ee 	andeq	r0, r0, lr, ror #5
    1c50:	00001583 	andeq	r1, r0, r3, lsl #11
    1c54:	0000157f 	andeq	r1, r0, pc, ror r5
    1c58:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    1c5c:	01530100 	cmpeq	r3, r0, lsl #2
    1c60:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    1c64:	0015a700 	andseq	sl, r5, r0, lsl #14
    1c68:	0015a300 	andseq	sl, r5, r0, lsl #6
    1c6c:	064e1700 	strbeq	r1, [lr], -r0, lsl #14
    1c70:	53010000 	movwpl	r0, #4096	; 0x1000
    1c74:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    1c78:	15c90000 	strbne	r0, [r9]
    1c7c:	15c50000 	strbne	r0, [r5]
    1c80:	6f170000 	svcvs	0x00170000
    1c84:	01000005 	tsteq	r0, r5
    1c88:	29570153 	ldmdbcs	r7, {r0, r1, r4, r6, r8}^
    1c8c:	f1000000 	cps	#0
    1c90:	e7000015 	smlad	r0, r5, r0, r0
    1c94:	17000015 	smladne	r0, r5, r0, r0
    1c98:	00000705 	andeq	r0, r0, r5, lsl #14
    1c9c:	6b015301 	blvs	568a8 <__HEAP_SIZE+0x558a8>
    1ca0:	00000030 	andeq	r0, r0, r0, lsr r0
    1ca4:	00001649 	andeq	r1, r0, r9, asr #12
    1ca8:	00001641 	andeq	r1, r0, r1, asr #12
    1cac:	00070b17 	andeq	r0, r7, r7, lsl fp
    1cb0:	01530100 	cmpeq	r3, r0, lsl #2
    1cb4:	0000307e 	andeq	r3, r0, lr, ror r0
    1cb8:	00168900 	andseq	r8, r6, r0, lsl #18
    1cbc:	00167f00 	andseq	r7, r6, r0, lsl #30
    1cc0:	06391700 	ldrteq	r1, [r9], -r0, lsl #14
    1cc4:	53010000 	movwpl	r0, #4096	; 0x1000
    1cc8:	00309201 	eorseq	r9, r0, r1, lsl #4
    1ccc:	16cf0000 	strbne	r0, [pc], r0
    1cd0:	16cb0000 	strbne	r0, [fp], r0
    1cd4:	62120000 	andsvs	r0, r2, #0
    1cd8:	01006675 	tsteq	r0, r5, ror r6
    1cdc:	57080155 	smlsdpl	r8, r5, r1, r0
    1ce0:	03000013 	movweq	r0, #19
    1ce4:	147fb091 	ldrbtne	fp, [pc], #-145	; 1cec <__HEAP_SIZE+0xcec>
    1ce8:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1cec:	0a015601 	beq	574f8 <__HEAP_SIZE+0x564f8>
    1cf0:	000000ee 	andeq	r0, r0, lr, ror #1
    1cf4:	0000171d 	andeq	r1, r0, sp, lsl r7
    1cf8:	000016ef 	andeq	r1, r0, pc, ror #13
    1cfc:	00074f1c 	andeq	r4, r7, ip, lsl pc
    1d00:	01570100 	cmpeq	r7, r0, lsl #2
    1d04:	0000290a 	andeq	r2, r0, sl, lsl #18
    1d08:	00183c00 	andseq	r3, r8, r0, lsl #24
    1d0c:	00183200 	andseq	r3, r8, r0, lsl #4
    1d10:	04ed1300 	strbteq	r1, [sp], #768	; 0x300
    1d14:	5a010000 	bpl	41d1c <__HEAP_SIZE+0x40d1c>
    1d18:	13771701 	cmnne	r7, #262144	; 0x40000
    1d1c:	03050000 	movweq	r0, #20480	; 0x5000
    1d20:	10005b60 	andne	r5, r0, r0, ror #22
    1d24:	0005a01c 	andeq	sl, r5, ip, lsl r0
    1d28:	016f0100 	cmneq	pc, r0, lsl #2
    1d2c:	000b7d08 	andeq	r7, fp, r8, lsl #26
    1d30:	00189e00 	andseq	r9, r8, r0, lsl #28
    1d34:	00189200 	andseq	r9, r8, r0, lsl #4
    1d38:	05571c00 	ldrbeq	r1, [r7, #-3072]	; 0xfffff400
    1d3c:	7f010000 	svcvc	0x00010000
    1d40:	00850701 	addeq	r0, r5, r1, lsl #14
    1d44:	18fb0000 	ldmne	fp!, {}^	; <UNPREDICTABLE>
    1d48:	18f10000 	ldmne	r1!, {}^	; <UNPREDICTABLE>
    1d4c:	74140000 	ldrvc	r0, [r4], #-0
    1d50:	0100706d 	tsteq	r0, sp, rrx
    1d54:	290a0180 	stmdbcs	sl, {r7, r8}
    1d58:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1d5c:	3a000019 	bcc	1dc8 <__HEAP_SIZE+0xdc8>
    1d60:	1c000019 	stcne	0, cr0, [r0], {25}
    1d64:	0000056a 	andeq	r0, r0, sl, ror #10
    1d68:	11018101 	tstne	r1, r1, lsl #2
    1d6c:	0000005f 	andeq	r0, r0, pc, asr r0
    1d70:	0000196f 	andeq	r1, r0, pc, ror #18
    1d74:	00001963 	andeq	r1, r0, r3, ror #18
    1d78:	00130a1d 	andseq	r0, r3, sp, lsl sl
    1d7c:	00136a10 	andseq	r6, r3, r0, lsl sl
    1d80:	00113410 	andseq	r3, r1, r0, lsl r4
    1d84:	00411c00 	subeq	r1, r1, r0, lsl #24
    1d88:	9c010000 	stcls	0, cr0, [r1], {-0}
    1d8c:	00301201 	eorseq	r1, r0, r1, lsl #4
    1d90:	19be0000 	ldmibne	lr!, {}	; <UNPREDICTABLE>
    1d94:	19ba0000 	ldmibne	sl!, {}	; <UNPREDICTABLE>
    1d98:	2b000000 	blcs	1da0 <__HEAP_SIZE+0xda0>
    1d9c:	10001114 	andne	r1, r0, r4, lsl r1
    1da0:	00001b1c 	andeq	r1, r0, ip, lsl fp
    1da4:	0011282b 	andseq	r2, r1, fp, lsr #16
    1da8:	001b3210 	andseq	r3, fp, r0, lsl r2
    1dac:	113a2b00 	teqne	sl, r0, lsl #22
    1db0:	1b271000 	blne	9c5db8 <__RAM_SIZE+0x8c5db8>
    1db4:	4c2b0000 	stcmi	0, cr0, [fp], #-0
    1db8:	27100011 			; <UNDEFINED> instruction: 0x27100011
    1dbc:	2b00001b 	blcs	1e30 <__HEAP_SIZE+0xe30>
    1dc0:	1000115e 	andne	r1, r0, lr, asr r1
    1dc4:	00001b32 	andeq	r1, r0, r2, lsr fp
    1dc8:	00116e2b 	andseq	r6, r1, fp, lsr #28
    1dcc:	001b3210 	andseq	r3, fp, r0, lsl r2
    1dd0:	11b62000 			; <UNDEFINED> instruction: 0x11b62000
    1dd4:	17911000 	ldrne	r1, [r1, r0]
    1dd8:	11b40000 			; <UNDEFINED> instruction: 0x11b40000
    1ddc:	01160000 	tsteq	r6, r0
    1de0:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    1de4:	0116067f 	tsteq	r6, pc, ror r6
    1de8:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    1dec:	0116067f 	tsteq	r6, pc, ror r6
    1df0:	007a0252 	rsbseq	r0, sl, r2, asr r2
    1df4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1df8:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1dfc:	0305007d 	movweq	r0, #20605	; 0x507d
    1e00:	10005b50 	andne	r5, r0, r0, asr fp
    1e04:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1e08:	02163301 	andseq	r3, r6, #67108864	; 0x4000000
    1e0c:	9103087d 	tstls	r3, sp, ror r8
    1e10:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1e14:	91030c7d 	tstls	r3, sp, ror ip
    1e18:	20000610 	andcs	r0, r0, r0, lsl r6
    1e1c:	100011d4 	ldrdne	r1, [r0], -r4
    1e20:	00001791 	muleq	r0, r1, r7
    1e24:	000011fe 	strdeq	r1, [r0], -lr
    1e28:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1e2c:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1e30:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1e34:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1e38:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1e3c:	0116007a 	tsteq	r6, sl, ror r0
    1e40:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1e44:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1e48:	5b540305 	blpl	1502a64 <__RAM_SIZE+0x1402a64>
    1e4c:	02161000 	andseq	r1, r6, #0
    1e50:	3401047d 	strcc	r0, [r1], #-1149	; 0xfffffb83
    1e54:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1e58:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1e5c:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1e60:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1e64:	11fc2000 	mvnsne	r2, r0
    1e68:	17911000 	ldrne	r1, [r1, r0]
    1e6c:	12380000 	eorsne	r0, r8, #0
    1e70:	01160000 	tsteq	r6, r0
    1e74:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    1e78:	0116067f 	tsteq	r6, pc, ror r6
    1e7c:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    1e80:	0116067f 	tsteq	r6, pc, ror r6
    1e84:	007a0252 	rsbseq	r0, sl, r2, asr r2
    1e88:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1e8c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1e90:	9103087d 	tstls	r3, sp, ror r8
    1e94:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1e98:	91030c7d 	tstls	r3, sp, ror ip
    1e9c:	20000610 	andcs	r0, r0, r0, lsl r6
    1ea0:	10001220 	andne	r1, r0, r0, lsr #4
    1ea4:	00000b89 	andeq	r0, r0, r9, lsl #23
    1ea8:	00001281 	andeq	r1, r0, r1, lsl #5
    1eac:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1eb0:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1eb4:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1eb8:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1ebc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1ec0:	0116007a 	tsteq	r6, sl, ror r0
    1ec4:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1ec8:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1ecc:	2908f503 	stmdbcs	r8, {r0, r1, r8, sl, ip, sp, lr, pc}
    1ed0:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1ed4:	16007502 	strne	r7, [r0], -r2, lsl #10
    1ed8:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1edc:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1ee0:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1ee4:	00061091 	muleq	r6, r1, r0
    1ee8:	00122e2b 	andseq	r2, r2, fp, lsr #28
    1eec:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1ef0:	12442b00 	subne	r2, r4, #0, 22
    1ef4:	1b691000 	blne	1a45efc <__RAM_SIZE+0x1945efc>
    1ef8:	4a2b0000 	bmi	ac1f00 <__RAM_SIZE+0x9c1f00>
    1efc:	3d100012 	ldccc	0, cr0, [r0, #-72]	; 0xffffffb8
    1f00:	2b00001b 	blcs	1f74 <__HEAP_SIZE+0xf74>
    1f04:	10001256 	andne	r1, r0, r6, asr r2
    1f08:	00001b5e 	andeq	r1, r0, lr, asr fp
    1f0c:	0012682b 	andseq	r6, r2, fp, lsr #16
    1f10:	001b4810 	andseq	r4, fp, r0, lsl r8
    1f14:	12742b00 	rsbsne	r2, r4, #0, 22
    1f18:	1b8a1000 	blne	fe285f20 <__StackTop+0xc6185f20>
    1f1c:	7a2b0000 	bvc	ac1f24 <__RAM_SIZE+0x9c1f24>
    1f20:	95100012 	ldrls	r0, [r0, #-18]	; 0xffffffee
    1f24:	2b00001b 	blcs	1f98 <__HEAP_SIZE+0xf98>
    1f28:	10001286 	andne	r1, r0, r6, lsl #5
    1f2c:	00001b5e 	andeq	r1, r0, lr, asr fp
    1f30:	0012962b 	andseq	r9, r2, fp, lsr #12
    1f34:	001b2710 	andseq	r2, fp, r0, lsl r7
    1f38:	12a02b00 	adcne	r2, r0, #0, 22
    1f3c:	1b951000 	blne	fe545f44 <__StackTop+0xc6445f44>
    1f40:	ac2b0000 	stcge	0, cr0, [fp], #-0
    1f44:	a0100012 	andsge	r0, r0, r2, lsl r0
    1f48:	2b00001b 	blcs	1fbc <__HEAP_SIZE+0xfbc>
    1f4c:	100012ba 			; <UNDEFINED> instruction: 0x100012ba
    1f50:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1f54:	0012c62b 	andseq	ip, r2, fp, lsr #12
    1f58:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1f5c:	12d22b00 	sbcsne	r2, r2, #0, 22
    1f60:	1b321000 	blne	c85f68 <__RAM_SIZE+0xb85f68>
    1f64:	e02b0000 	eor	r0, fp, r0
    1f68:	27100012 			; <UNDEFINED> instruction: 0x27100012
    1f6c:	2b00001b 	blcs	1fe0 <__HEAP_SIZE+0xfe0>
    1f70:	100012fa 	strdne	r1, [r0], -sl
    1f74:	00001b32 	andeq	r1, r0, r2, lsr fp
    1f78:	00141215 	andseq	r1, r4, r5, lsl r2
    1f7c:	00179110 	andseq	r9, r7, r0, lsl r1
    1f80:	50011600 	andpl	r1, r1, r0, lsl #12
    1f84:	7f9c9104 	svcvc	0x009c9104
    1f88:	51011606 	tstpl	r1, r6, lsl #12
    1f8c:	7fa89104 	svcvc	0x00a89104
    1f90:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1f94:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1f98:	7b025301 	blvc	96ba4 <__HEAP_SIZE+0x95ba4>
    1f9c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1fa0:	b0910300 	addslt	r0, r1, r0, lsl #6
    1fa4:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    1fa8:	00740204 	rsbseq	r0, r4, r4, lsl #4
    1fac:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1fb0:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1fb4:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1fb8:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1fbc:	33180000 	tstcc	r8, #0
    1fc0:	67000001 	strvs	r0, [r0, -r1]
    1fc4:	19000013 	stmdbne	r0, {r0, r1, r4}
    1fc8:	00000030 	andeq	r0, r0, r0, lsr r0
    1fcc:	a318001f 	tstge	r8, #31
    1fd0:	7700000f 	strvc	r0, [r0, -pc]
    1fd4:	19000013 	stmdbne	r0, {r0, r1, r4}
    1fd8:	00000030 	andeq	r0, r0, r0, lsr r0
    1fdc:	67030009 	strvs	r0, [r3, -r9]
    1fe0:	1a000013 	bne	2034 <__HEAP_SIZE+0x1034>
    1fe4:	0000072f 	andeq	r0, r0, pc, lsr #14
    1fe8:	0f013201 	svceq	0x00013201
    1fec:	0000ee01 	andeq	lr, r0, r1, lsl #28
    1ff0:	000c3800 	andeq	r3, ip, r0, lsl #16
    1ff4:	000cfe10 	andeq	pc, ip, r0, lsl lr	; <UNPREDICTABLE>
    1ff8:	0019dc10 	andseq	sp, r9, r0, lsl ip
    1ffc:	150f0100 	strne	r0, [pc, #-256]	; 1f04 <__HEAP_SIZE+0xf04>
    2000:	6f0f0000 	svcvs	0x000f0000
    2004:	01007475 	tsteq	r0, r5, ror r4
    2008:	062c0132 			; <UNDEFINED> instruction: 0x062c0132
    200c:	1d000001 	stcne	0, cr0, [r0, #-4]
    2010:	1500001a 	strne	r0, [r0, #-26]	; 0xffffffe6
    2014:	1700001a 	smladne	r0, sl, r0, r0
    2018:	00000511 	andeq	r0, r0, r1, lsl r5
    201c:	37013201 	strcc	r3, [r1, -r1, lsl #4]
    2020:	000002ee 	andeq	r0, r0, lr, ror #5
    2024:	00001a5d 	andeq	r1, r0, sp, asr sl
    2028:	00001a55 	andeq	r1, r0, r5, asr sl
    202c:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    2030:	01320100 	teqeq	r2, r0, lsl #2
    2034:	0000ee46 	andeq	lr, r0, r6, asr #28
    2038:	001a9d00 	andseq	r9, sl, r0, lsl #26
    203c:	001a9500 	andseq	r9, sl, r0, lsl #10
    2040:	064e1700 	strbeq	r1, [lr], -r0, lsl #14
    2044:	32010000 	andcc	r0, r1, #0
    2048:	00ee5201 	rsceq	r5, lr, r1, lsl #4
    204c:	1ad90000 	bne	ff642054 <__StackTop+0xc7542054>
    2050:	1ad50000 	bne	ff542058 <__StackTop+0xc7442058>
    2054:	6f170000 	svcvs	0x00170000
    2058:	01000005 	tsteq	r0, r5
    205c:	7e6d0132 	mcrvc	1, 3, r0, cr13, cr2, {1}
    2060:	01000000 	mrseq	r0, (UNDEF: 0)
    2064:	f700001b 			; <UNDEFINED> instruction: 0xf700001b
    2068:	1000001a 	andne	r0, r0, sl, lsl r0
    206c:	000005a0 	andeq	r0, r0, r0, lsr #11
    2070:	79013201 	stmdbvc	r1, {r0, r9, ip, sp}
    2074:	00000b7d 	andeq	r0, r0, sp, ror fp
    2078:	10089102 	andne	r9, r8, r2, lsl #2
    207c:	00000914 	andeq	r0, r0, r4, lsl r9
    2080:	96013201 	strls	r3, [r1], -r1, lsl #4
    2084:	0000007e 	andeq	r0, r0, lr, ror r0
    2088:	10109102 	andsne	r9, r0, r2, lsl #2
    208c:	00000705 	andeq	r0, r0, r5, lsl #14
    2090:	a9013201 	stmdbge	r1, {r0, r9, ip, sp}
    2094:	00000030 	andeq	r0, r0, r0, lsr r0
    2098:	10189102 	andsne	r9, r8, r2, lsl #2
    209c:	0000070b 	andeq	r0, r0, fp, lsl #14
    20a0:	bc013201 	sfmlt	f3, 4, [r1], {1}
    20a4:	00000030 	andeq	r0, r0, r0, lsr r0
    20a8:	171c9102 	ldrne	r9, [ip, -r2, lsl #2]
    20ac:	00000639 	andeq	r0, r0, r9, lsr r6
    20b0:	d0013201 	andle	r3, r1, r1, lsl #4
    20b4:	00000030 	andeq	r0, r0, r0, lsr r0
    20b8:	00001b55 	andeq	r1, r0, r5, asr fp
    20bc:	00001b51 	andeq	r1, r0, r1, asr fp
    20c0:	66756212 			; <UNDEFINED> instruction: 0x66756212
    20c4:	01340100 	teqeq	r4, r0, lsl #2
    20c8:	00135708 	andseq	r5, r3, r8, lsl #14
    20cc:	b8910300 	ldmlt	r1, {r8, r9}
    20d0:	656c147f 	strbvs	r1, [ip, #-1151]!	; 0xfffffb81
    20d4:	3501006e 	strcc	r0, [r1, #-110]	; 0xffffff92
    20d8:	00ee0a01 	rsceq	r0, lr, r1, lsl #20
    20dc:	1b800000 	blne	fe0020e4 <__StackTop+0xc5f020e4>
    20e0:	1b740000 	blne	1d020e8 <__RAM_SIZE+0x1c020e8>
    20e4:	d01e0000 	andsle	r0, lr, r0
    20e8:	b0000000 	andlt	r0, r0, r0
    20ec:	1c000014 	stcne	0, cr0, [r0], {20}
    20f0:	0000068d 	andeq	r0, r0, sp, lsl #13
    20f4:	12013f01 	andne	r3, r1, #1, 30
    20f8:	0000013a 	andeq	r0, r0, sl, lsr r1
    20fc:	00001bd0 	ldrdeq	r1, [r0], -r0
    2100:	00001bcc 	andeq	r1, r0, ip, asr #23
    2104:	000c902b 	andeq	r9, ip, fp, lsr #32
    2108:	001bab10 	andseq	sl, fp, r0, lsl fp
    210c:	0cb02b00 	vldmiaeq	r0!, {d2-d1}
    2110:	1bab1000 	blne	feac6118 <__StackTop+0xc69c6118>
    2114:	15000000 	strne	r0, [r0, #-0]
    2118:	10000cf8 	strdne	r0, [r0], -r8
    211c:	00001670 	andeq	r1, r0, r0, ror r6
    2120:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    2124:	067fac91 			; <UNDEFINED> instruction: 0x067fac91
    2128:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    212c:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    2130:	04520116 	ldrbeq	r0, [r2], #-278	; 0xfffffeea
    2134:	067fb491 			; <UNDEFINED> instruction: 0x067fb491
    2138:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    213c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    2140:	9103007d 	tstls	r3, sp, ror r0
    2144:	02167fb8 	andseq	r7, r6, #184, 30	; 0x2e0
    2148:	7902047d 	stmdbvc	r2, {r0, r2, r3, r4, r5, r6, sl}
    214c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2150:	08910408 	ldmeq	r1, {r3, sl}
    2154:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    2158:	77020c7d 	smlsdxvc	r2, sp, ip, r0
    215c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2160:	18910310 	ldmne	r1, {r4, r8, r9}
    2164:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2168:	1c910314 	ldcne	3, cr0, [r1], {20}
    216c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2170:	007a0218 	rsbseq	r0, sl, r8, lsl r2
    2174:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    2178:	01000006 	tsteq	r0, r6
    217c:	010f0119 	tsteq	pc, r9, lsl r1	; <UNPREDICTABLE>
    2180:	000000ee 	andeq	r0, r0, lr, ror #1
    2184:	10000ba4 	andne	r0, r0, r4, lsr #23
    2188:	10000c38 	andne	r0, r0, r8, lsr ip
    218c:	00001bee 	andeq	r1, r0, lr, ror #23
    2190:	00167001 	andseq	r7, r6, r1
    2194:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 129c <__HEAP_SIZE+0x29c>
    2198:	19010074 	stmdbne	r1, {r2, r4, r5, r6}
    219c:	01062701 	tsteq	r6, r1, lsl #14
    21a0:	1c2b0000 	stcne	0, cr0, [fp], #-0
    21a4:	1c270000 	stcne	0, cr0, [r7], #-0
    21a8:	11170000 	tstne	r7, r0
    21ac:	01000005 	tsteq	r0, r5
    21b0:	ee320119 	mrc	1, 1, r0, cr2, cr9, {0}
    21b4:	50000002 	andpl	r0, r0, r2
    21b8:	4c00001c 	stcmi	0, cr0, [r0], {28}
    21bc:	0f00001c 	svceq	0x0000001c
    21c0:	00786469 	rsbseq	r6, r8, r9, ror #8
    21c4:	41011901 	tstmi	r1, r1, lsl #18
    21c8:	000000ee 	andeq	r0, r0, lr, ror #1
    21cc:	00001c75 	andeq	r1, r0, r5, ror ip
    21d0:	00001c71 	andeq	r1, r0, r1, ror ip
    21d4:	00064e17 	andeq	r4, r6, r7, lsl lr
    21d8:	01190100 	tsteq	r9, r0, lsl #2
    21dc:	0000ee4d 	andeq	lr, r0, sp, asr #28
    21e0:	001c9a00 	andseq	r9, ip, r0, lsl #20
    21e4:	001c9600 	andseq	r9, ip, r0, lsl #12
    21e8:	056f1700 	strbeq	r1, [pc, #-1792]!	; 1af0 <__HEAP_SIZE+0xaf0>
    21ec:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21f0:	005f6301 	subseq	r6, pc, r1, lsl #6
    21f4:	1cc50000 	stclne	0, cr0, [r5], {0}
    21f8:	1cbb0000 	ldcne	0, cr0, [fp]
    21fc:	a0100000 	andsge	r0, r0, r0
    2200:	01000005 	tsteq	r0, r5
    2204:	7d6f0119 	stfvce	f0, [pc, #-100]!	; 21a8 <__HEAP_SIZE+0x11a8>
    2208:	0200000b 	andeq	r0, r0, #11
    220c:	14100491 	ldrne	r0, [r0], #-1169	; 0xfffffb6f
    2210:	01000009 	tsteq	r0, r9
    2214:	5f870119 	svcpl	0x00870119
    2218:	02000000 	andeq	r0, r0, #0
    221c:	05100891 	ldreq	r0, [r0, #-2193]	; 0xfffff76f
    2220:	01000007 	tsteq	r0, r7
    2224:	309a0119 	addscc	r0, sl, r9, lsl r1
    2228:	02000000 	andeq	r0, r0, #0
    222c:	0b100c91 	bleq	405478 <__RAM_SIZE+0x305478>
    2230:	01000007 	tsteq	r0, r7
    2234:	30ad0119 	adccc	r0, sp, r9, lsl r1
    2238:	02000000 	andeq	r0, r0, #0
    223c:	39171091 	ldmdbcc	r7, {r0, r4, r7, ip}
    2240:	01000006 	tsteq	r0, r6
    2244:	30c10119 	sbccc	r0, r1, r9, lsl r1
    2248:	0a000000 	beq	2250 <__HEAP_SIZE+0x1250>
    224c:	0600001d 			; <UNDEFINED> instruction: 0x0600001d
    2250:	1200001d 	andne	r0, r0, #29
    2254:	00667562 	rsbeq	r7, r6, r2, ror #10
    2258:	08011b01 	stmdaeq	r1, {r0, r8, r9, fp, ip}
    225c:	00001357 	andeq	r1, r0, r7, asr r3
    2260:	14489102 	strbne	r9, [r8], #-258	; 0xfffffefe
    2264:	006e656c 	rsbeq	r6, lr, ip, ror #10
    2268:	0a011c01 	beq	49274 <__HEAP_SIZE+0x48274>
    226c:	000000ee 	andeq	r0, r0, lr, ror #1
    2270:	00001d35 	andeq	r1, r0, r5, lsr sp
    2274:	00001d29 	andeq	r1, r0, r9, lsr #26
    2278:	0000b01e 	andeq	fp, r0, lr, lsl r0
    227c:	00163000 	andseq	r3, r6, r0
    2280:	068d1c00 	streq	r1, [sp], r0, lsl #24
    2284:	26010000 	strcs	r0, [r1], -r0
    2288:	013a1201 	teqeq	sl, r1, lsl #4
    228c:	1d8d0000 	stcne	0, cr0, [sp]
    2290:	1d810000 	stcne	0, cr0, [r1]
    2294:	15000000 	strne	r0, [r0, #-0]
    2298:	10000c34 	andne	r0, r0, r4, lsr ip
    229c:	00001670 	andeq	r1, r0, r0, ror r6
    22a0:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    22a4:	16007402 	strne	r7, [r0], -r2, lsl #8
    22a8:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    22ac:	02160077 	andseq	r0, r6, #119	; 0x77
    22b0:	9104087d 	tstls	r4, sp, ror r8
    22b4:	16019404 	strne	r9, [r1], -r4, lsl #8
    22b8:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    22bc:	02160075 	andseq	r0, r6, #117	; 0x75
    22c0:	9103107d 	tstls	r3, sp, ror r0
    22c4:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    22c8:	9103147d 	tstls	r3, sp, ror r4
    22cc:	02160610 	andseq	r0, r6, #16, 12	; 0x1000000
    22d0:	7602187d 			; <UNDEFINED> instruction: 0x7602187d
    22d4:	2c000000 	stccs	0, cr0, [r0], {-0}
    22d8:	000005d5 	ldrdeq	r0, [r0], -r5
    22dc:	010fe301 	tsteq	pc, r1, lsl #6
    22e0:	000000ee 	andeq	r0, r0, lr, ror #1
    22e4:	10000a6c 	andne	r0, r0, ip, ror #20
    22e8:	10000ba4 	andne	r0, r0, r4, lsr #23
    22ec:	00001dfb 	strdeq	r1, [r0], -fp
    22f0:	00179101 	andseq	r9, r7, r1, lsl #2
    22f4:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 15fc <__HEAP_SIZE+0x5fc>
    22f8:	e3010074 	movw	r0, #4212	; 0x1074
    22fc:	00010629 	andeq	r0, r1, r9, lsr #12
    2300:	001e4500 	andseq	r4, lr, r0, lsl #10
    2304:	001e3f00 	andseq	r3, lr, r0, lsl #30
    2308:	05112e00 	ldreq	r2, [r1, #-3584]	; 0xfffff200
    230c:	e3010000 	movw	r0, #4096	; 0x1000
    2310:	0002ee34 	andeq	lr, r2, r4, lsr lr
    2314:	001e7700 	andseq	r7, lr, r0, lsl #14
    2318:	001e7100 	andseq	r7, lr, r0, lsl #2
    231c:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2320:	e3010078 	movw	r0, #4216	; 0x1078
    2324:	0000ee43 	andeq	lr, r0, r3, asr #28
    2328:	001ea900 	andseq	sl, lr, r0, lsl #18
    232c:	001ea300 	andseq	sl, lr, r0, lsl #6
    2330:	064e2e00 	strbeq	r2, [lr], -r0, lsl #28
    2334:	e3010000 	movw	r0, #4096	; 0x1000
    2338:	0000ee4f 	andeq	lr, r0, pc, asr #28
    233c:	001edb00 	andseq	sp, lr, r0, lsl #22
    2340:	001ed500 	andseq	sp, lr, r0, lsl #10
    2344:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    2348:	e3010066 	movw	r0, #4198	; 0x1066
    234c:	0002ee5d 	andeq	lr, r2, sp, asr lr
    2350:	001f0b00 	andseq	r0, pc, r0, lsl #22
    2354:	001f0700 	andseq	r0, pc, r0, lsl #14
    2358:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    235c:	e301006e 	movw	r0, #4206	; 0x106e
    2360:	0000ee69 	andeq	lr, r0, r9, ror #28
    2364:	001f5d00 	andseq	r5, pc, r0, lsl #26
    2368:	001f2b00 	andseq	r2, pc, r0, lsl #22
    236c:	05a02e00 	streq	r2, [r0, #3584]!	; 0xe00
    2370:	e3010000 	movw	r0, #4096	; 0x1000
    2374:	000b7d73 	andeq	r7, fp, r3, ror sp
    2378:	00209100 	eoreq	r9, r0, r0, lsl #2
    237c:	00208d00 	eoreq	r8, r0, r0, lsl #26
    2380:	09142e00 	ldmdbeq	r4, {r9, sl, fp, sp}
    2384:	e3010000 	movw	r0, #4096	; 0x1000
    2388:	0000308a 	andeq	r3, r0, sl, lsl #1
    238c:	0020b500 	eoreq	fp, r0, r0, lsl #10
    2390:	0020b100 	eoreq	fp, r0, r0, lsl #2
    2394:	07052e00 	streq	r2, [r5, -r0, lsl #28]
    2398:	e3010000 	movw	r0, #4096	; 0x1000
    239c:	0000309d 	muleq	r0, sp, r0
    23a0:	0020d900 	eoreq	sp, r0, r0, lsl #18
    23a4:	0020d500 	eoreq	sp, r0, r0, lsl #10
    23a8:	070b2e00 	streq	r2, [fp, -r0, lsl #28]
    23ac:	e3010000 	movw	r0, #4096	; 0x1000
    23b0:	000030b0 	strheq	r3, [r0], -r0
    23b4:	0020fd00 	eoreq	pc, r0, r0, lsl #26
    23b8:	0020f900 	eoreq	pc, r0, r0, lsl #18
    23bc:	06392e00 	ldrteq	r2, [r9], -r0, lsl #28
    23c0:	e3010000 	movw	r0, #4096	; 0x1000
    23c4:	000030c4 	andeq	r3, r0, r4, asr #1
    23c8:	00212000 	eoreq	r2, r1, r0
    23cc:	00211c00 	eoreq	r1, r1, r0, lsl #24
    23d0:	0b261500 	bleq	9877d8 <__RAM_SIZE+0x8877d8>
    23d4:	17911000 	ldrne	r1, [r1, r0]
    23d8:	02160000 	andseq	r0, r6, #0
    23dc:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    23e0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    23e4:	00740204 	rsbseq	r0, r4, r4, lsl #4
    23e8:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    23ec:	16007702 	strne	r7, [r0], -r2, lsl #14
    23f0:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    23f4:	00000076 	andeq	r0, r0, r6, ror r0
    23f8:	0006bd2c 	andeq	fp, r6, ip, lsr #26
    23fc:	0fc70100 	svceq	0x00c70100
    2400:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2404:	0009ee00 	andeq	lr, r9, r0, lsl #28
    2408:	000a6c10 	andeq	r6, sl, r0, lsl ip
    240c:	00214010 	eoreq	r4, r1, r0, lsl r0
    2410:	18d80100 	ldmne	r8, {r8}^
    2414:	6f2d0000 	svcvs	0x002d0000
    2418:	01007475 	tsteq	r0, r5, ror r4
    241c:	010625c7 	smlabteq	r6, r7, r5, r2
    2420:	21880000 	orrcs	r0, r8, r0
    2424:	21840000 	orrcs	r0, r4, r0
    2428:	112e0000 			; <UNDEFINED> instruction: 0x112e0000
    242c:	01000005 	tsteq	r0, r5
    2430:	02ee30c7 	rsceq	r3, lr, #199	; 0xc7
    2434:	21aa0000 			; <UNDEFINED> instruction: 0x21aa0000
    2438:	21a60000 			; <UNDEFINED> instruction: 0x21a60000
    243c:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2440:	01007864 	tsteq	r0, r4, ror #16
    2444:	00ee3fc7 	rsceq	r3, lr, r7, asr #31
    2448:	21d40000 	bicscs	r0, r4, r0
    244c:	21c80000 	biccs	r0, r8, r0
    2450:	4e2e0000 	cdpmi	0, 2, cr0, cr14, cr0, {0}
    2454:	01000006 	tsteq	r0, r6
    2458:	00ee4bc7 	rsceq	r4, lr, r7, asr #23
    245c:	22220000 	eorcs	r0, r2, #0
    2460:	221e0000 	andscs	r0, lr, #0
    2464:	622d0000 	eorvs	r0, sp, #0
    2468:	01006675 	tsteq	r0, r5, ror r6
    246c:	024c5fc7 	subeq	r5, ip, #796	; 0x31c
    2470:	22440000 	subcs	r0, r4, #0
    2474:	22400000 	subcs	r0, r0, #0
    2478:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    247c:	01006e65 	tsteq	r0, r5, ror #28
    2480:	00ee6bc7 	rsceq	r6, lr, r7, asr #23
    2484:	22680000 	rsbcs	r0, r8, #0
    2488:	22640000 	rsbcs	r0, r4, #0
    248c:	0b2e0000 	bleq	b82494 <__RAM_SIZE+0xa82494>
    2490:	01000007 	tsteq	r0, r7
    2494:	00307dc7 	eorseq	r7, r0, r7, asr #27
    2498:	228b0000 	addcs	r0, fp, #0
    249c:	22870000 	addcs	r0, r7, #0
    24a0:	392e0000 	stmdbcc	lr!, {}	; <UNPREDICTABLE>
    24a4:	01000006 	tsteq	r0, r6
    24a8:	003091c7 	eorseq	r9, r0, r7, asr #3
    24ac:	22af0000 	adccs	r0, pc, #0
    24b0:	22ab0000 	adccs	r0, fp, #0
    24b4:	8c2f0000 	stchi	0, cr0, [pc], #-0	; 24bc <__HEAP_SIZE+0x14bc>
    24b8:	01000005 	tsteq	r0, r5
    24bc:	00fa10c9 	rscseq	r1, sl, r9, asr #1
    24c0:	22d50000 	sbcscs	r0, r5, #0
    24c4:	22cf0000 	sbccs	r0, pc, #0
    24c8:	981e0000 	ldmdals	lr, {}	; <UNPREDICTABLE>
    24cc:	9d000000 	stcls	0, cr0, [r0, #-0]
    24d0:	30000018 	andcc	r0, r0, r8, lsl r0
    24d4:	cd010069 	stcgt	0, cr0, [r1, #-420]	; 0xfffffe5c
    24d8:	0000ee11 	andeq	lr, r0, r1, lsl lr
    24dc:	00230400 	eoreq	r0, r3, r0, lsl #8
    24e0:	00230200 	eoreq	r0, r3, r0, lsl #4
    24e4:	0a222200 	beq	88acec <__RAM_SIZE+0x78acec>
    24e8:	01161000 	tsteq	r6, r0
    24ec:	20080250 	andcs	r0, r8, r0, asr r2
    24f0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    24f4:	01160076 	tsteq	r6, r6, ror r0
    24f8:	7f7b0252 	svcvc	0x007b0252
    24fc:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2500:	00000077 	andeq	r0, r0, r7, ror r0
    2504:	000a4021 	andeq	r4, sl, r1, lsr #32
    2508:	0018b910 	andseq	fp, r8, r0, lsl r9
    250c:	51011600 	tstpl	r1, r0, lsl #12
    2510:	16007602 	strne	r7, [r0], -r2, lsl #12
    2514:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    2518:	5301167f 	movwpl	r1, #5759	; 0x167f
    251c:	00007702 	andeq	r7, r0, r2, lsl #14
    2520:	000a6822 	andeq	r6, sl, r2, lsr #16
    2524:	50011610 	andpl	r1, r1, r0, lsl r6
    2528:	16200802 	strtne	r0, [r0], -r2, lsl #16
    252c:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2530:	52011600 	andpl	r1, r1, #0, 12
    2534:	167f7402 	ldrbtne	r7, [pc], -r2, lsl #8
    2538:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    253c:	31000000 	mrscc	r0, (UNDEF: 0)
    2540:	00000655 	andeq	r0, r0, r5, asr r6
    2544:	0115bc01 	tsteq	r5, r1, lsl #24
    2548:	00000030 	andeq	r0, r0, r0, lsr r0
    254c:	100009ca 	andne	r0, r0, sl, asr #19
    2550:	100009ee 	andne	r0, r0, lr, ror #19
    2554:	01007d02 	tsteq	r0, r2, lsl #26
    2558:	00001940 	andeq	r1, r0, r0, asr #18
    255c:	7274732d 	rsbsvc	r7, r4, #-1275068416	; 0xb4000000
    2560:	28bc0100 	ldmcs	ip!, {r8}
    2564:	00001940 	andeq	r1, r0, r0, asr #18
    2568:	0000231b 	andeq	r2, r0, fp, lsl r3
    256c:	00002317 	andeq	r2, r0, r7, lsl r3
    2570:	01006930 	tsteq	r0, r0, lsr r9
    2574:	003010be 	ldrhteq	r1, [r0], -lr
    2578:	233f0000 	teqcs	pc, #0
    257c:	23390000 	teqcs	r9, #0
    2580:	46320000 	ldrtmi	r0, [r2], -r0
    2584:	e4000019 	str	r0, [r0], #-25	; 0xffffffe7
    2588:	00100009 	andseq	r0, r0, r9
    258c:	0009e400 	andeq	lr, r9, r0, lsl #8
    2590:	0009e810 	andeq	lr, r9, r0, lsl r8
    2594:	0abf0110 	beq	fefc29dc <__StackTop+0xc6ec29dc>
    2598:	00195824 	andseq	r5, r9, r4, lsr #16
    259c:	00236d00 	eoreq	r6, r3, r0, lsl #26
    25a0:	00236900 	eoreq	r6, r3, r0, lsl #18
    25a4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    25a8:	00024c04 	andeq	r4, r2, r4, lsl #24
    25ac:	06893300 	streq	r3, [r9], r0, lsl #6
    25b0:	b5010000 	strlt	r0, [r1, #-0]
    25b4:	0b7d0114 	bleq	1f42a0c <__RAM_SIZE+0x1e42a0c>
    25b8:	64030000 	strvs	r0, [r3], #-0
    25bc:	34000019 	strcc	r0, [r0], #-25	; 0xffffffe7
    25c0:	01006863 	tsteq	r0, r3, ror #16
    25c4:	013323b5 	teqeq	r3, r5	; <illegal shifter operand>
    25c8:	33000000 	movwcc	r0, #0
    25cc:	0000065b 	andeq	r0, r0, fp, asr r6
    25d0:	011cab01 	tsteq	ip, r1, lsl #22
    25d4:	00000030 	andeq	r0, r0, r0, lsr r0
    25d8:	00199903 	andseq	r9, r9, r3, lsl #18
    25dc:	74733400 	ldrbtvc	r3, [r3], #-1024	; 0xfffffc00
    25e0:	ab010072 	blge	427b0 <__HEAP_SIZE+0x417b0>
    25e4:	00024c33 	andeq	r4, r2, r3, lsr ip
    25e8:	054f3500 	strbeq	r3, [pc, #-1280]	; 20f0 <__HEAP_SIZE+0x10f0>
    25ec:	ab010000 	blge	425f4 <__HEAP_SIZE+0x415f4>
    25f0:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    25f4:	00733600 	rsbseq	r3, r3, r0, lsl #12
    25f8:	4c0fad01 	stcmi	13, cr10, [pc], {1}
    25fc:	00000002 	andeq	r0, r0, r2
    2600:	00057537 	andeq	r7, r5, r7, lsr r5
    2604:	149f0100 	ldrne	r0, [pc], #256	; 260c <__HEAP_SIZE+0x160c>
    2608:	00000001 	andeq	r0, r0, r1
    260c:	00000000 	andeq	r0, r0, r0
    2610:	00238d00 	eoreq	r8, r3, r0, lsl #26
    2614:	1a040100 	bne	102a1c <__RAM_SIZE+0x2a1c>
    2618:	b32e0000 			; <UNDEFINED> instruction: 0xb32e0000
    261c:	01000006 	tsteq	r0, r6
    2620:	0133229f 	teqeq	r3, pc	; <illegal shifter operand>
    2624:	23bf0000 			; <UNDEFINED> instruction: 0x23bf0000
    2628:	23b90000 			; <UNDEFINED> instruction: 0x23b90000
    262c:	112e0000 			; <UNDEFINED> instruction: 0x112e0000
    2630:	01000005 	tsteq	r0, r5
    2634:	00e0339f 	smlaleq	r3, r0, pc, r3	; <UNPREDICTABLE>
    2638:	23f10000 	mvnscs	r0, #0
    263c:	23eb0000 	mvncs	r0, #0
    2640:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2644:	01007864 	tsteq	r0, r4, ror #16
    2648:	00ee429f 	smlaleq	r4, lr, pc, r2	; <UNPREDICTABLE>
    264c:	24230000 	strtcs	r0, [r3], #-0
    2650:	241d0000 	ldrcs	r0, [sp], #-0
    2654:	4e2e0000 	cdpmi	0, 2, cr0, cr14, cr0, {0}
    2658:	01000006 	tsteq	r0, r6
    265c:	00ee4e9f 	smlaleq	r4, lr, pc, lr	; <UNPREDICTABLE>
    2660:	24550000 	ldrbcs	r0, [r5], #-0
    2664:	244f0000 	strbcs	r0, [pc], #-0	; 266c <__HEAP_SIZE+0x166c>
    2668:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    266c:	00000545 	andeq	r0, r0, r5, asr #10
    2670:	01149501 	tsteq	r4, r1, lsl #10
    2674:	10001b08 	andne	r1, r0, r8, lsl #22
    2678:	10001b14 	andne	r1, r0, r4, lsl fp
    267c:	00002481 	andeq	r2, r0, r1, lsl #9
    2680:	001a7801 	andseq	r7, sl, r1, lsl #16
    2684:	06b32e00 	ldrteq	r2, [r3], r0, lsl #28
    2688:	95010000 	strls	r0, [r1, #-0]
    268c:	00013323 	andeq	r3, r1, r3, lsr #6
    2690:	0024a500 	eoreq	sl, r4, r0, lsl #10
    2694:	0024a100 	eoreq	sl, r4, r0, lsl #2
    2698:	05112e00 	ldreq	r2, [r1, #-3584]	; 0xfffff200
    269c:	95010000 	strls	r0, [r1, #-0]
    26a0:	0000e034 	andeq	lr, r0, r4, lsr r0
    26a4:	0024ca00 	eoreq	ip, r4, r0, lsl #20
    26a8:	0024c600 	eoreq	ip, r4, r0, lsl #12
    26ac:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    26b0:	95010078 	strls	r0, [r1, #-120]	; 0xffffff88
    26b4:	0000ee43 	andeq	lr, r0, r3, asr #28
    26b8:	0024ef00 	eoreq	lr, r4, r0, lsl #30
    26bc:	0024eb00 	eoreq	lr, r4, r0, lsl #22
    26c0:	064e2e00 	strbeq	r2, [lr], -r0, lsl #28
    26c4:	95010000 	strls	r0, [r1, #-0]
    26c8:	0000ee4f 	andeq	lr, r0, pc, asr #28
    26cc:	00251400 	eoreq	r1, r5, r0, lsl #8
    26d0:	00251000 	eoreq	r1, r5, r0
    26d4:	1b122b00 	blne	48d2dc <__RAM_SIZE+0x38d2dc>
    26d8:	1bb61000 	blne	fed866e0 <__StackTop+0xc6c866e0>
    26dc:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    26e0:	000005f3 	strdeq	r0, [r0], -r3
    26e4:	01148e01 	tsteq	r4, r1, lsl #28
    26e8:	100009c8 	andne	r0, r0, r8, asr #19
    26ec:	100009ca 	andne	r0, r0, sl, asr #19
    26f0:	01007d02 	tsteq	r0, r2, lsl #26
    26f4:	00001aca 	andeq	r1, r0, sl, asr #21
    26f8:	0006b33a 	andeq	fp, r6, sl, lsr r3
    26fc:	238e0100 	orrcs	r0, lr, #0, 2
    2700:	00000133 	andeq	r0, r0, r3, lsr r1
    2704:	113a5001 	teqne	sl, r1
    2708:	01000005 	tsteq	r0, r5
    270c:	00e0348e 	rsceq	r3, r0, lr, lsl #9
    2710:	51010000 	mrspl	r0, (UNDEF: 1)
    2714:	7864693b 	stmdavc	r4!, {r0, r1, r3, r4, r5, r8, fp, sp, lr}^
    2718:	438e0100 	orrmi	r0, lr, #0, 2
    271c:	000000ee 	andeq	r0, r0, lr, ror #1
    2720:	4e3a5201 	cdpmi	2, 3, cr5, cr10, cr1, {0}
    2724:	01000006 	tsteq	r0, r6
    2728:	00ee4f8e 	rsceq	r4, lr, lr, lsl #31
    272c:	53010000 	movwpl	r0, #4096	; 0x1000
    2730:	050c3900 	streq	r3, [ip, #-2304]	; 0xfffff700
    2734:	85010000 	strhi	r0, [r1, #-0]
    2738:	00000114 	andeq	r0, r0, r4, lsl r1
    273c:	00000000 	andeq	r0, r0, r0
    2740:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2744:	1b1c0100 	blne	702b4c <__RAM_SIZE+0x602b4c>
    2748:	b33a0000 	teqlt	sl, #0
    274c:	01000006 	tsteq	r0, r6
    2750:	01332585 	teqeq	r3, r5, lsl #11
    2754:	50010000 	andpl	r0, r1, r0
    2758:	0005113a 	andeq	r1, r5, sl, lsr r1
    275c:	36850100 	strcc	r0, [r5], r0, lsl #2
    2760:	000000e0 	andeq	r0, r0, r0, ror #1
    2764:	693b5101 	ldmdbvs	fp!, {r0, r8, ip, lr}
    2768:	01007864 	tsteq	r0, r4, ror #16
    276c:	00ee4585 	rsceq	r4, lr, r5, lsl #11
    2770:	52010000 	andpl	r0, r1, #0
    2774:	00064e3a 	andeq	r4, r6, sl, lsr lr
    2778:	51850100 	orrpl	r0, r5, r0, lsl #2
    277c:	000000ee 	andeq	r0, r0, lr, ror #1
    2780:	3c005301 	stccc	3, cr5, [r0], {1}
    2784:	06980101 	ldreq	r0, [r8], r1, lsl #2
    2788:	06980000 	ldreq	r0, [r8], r0
    278c:	013c0000 	teqeq	ip, r0
    2790:	00063f01 	andeq	r3, r6, r1, lsl #30
    2794:	00063f00 	andeq	r3, r6, r0, lsl #30
    2798:	01013c00 	tsteq	r1, r0, lsl #24
    279c:	00000720 	andeq	r0, r0, r0, lsr #14
    27a0:	00000720 	andeq	r0, r0, r0, lsr #14
    27a4:	e101013c 	tst	r1, ip, lsr r1
    27a8:	e1000004 	tst	r0, r4
    27ac:	3c000004 	stccc	0, cr0, [r0], {4}
    27b0:	066b0101 	strbteq	r0, [fp], -r1, lsl #2
    27b4:	066b0000 	strbteq	r0, [fp], -r0
    27b8:	013c0000 	teqeq	ip, r0
    27bc:	0005a901 	andeq	sl, r5, r1, lsl #18
    27c0:	0005a900 	andeq	sl, r5, r0, lsl #18
    27c4:	01013c00 	tsteq	r1, r0, lsl #24
    27c8:	000006c6 	andeq	r0, r0, r6, asr #13
    27cc:	000006c6 	andeq	r0, r0, r6, asr #13
    27d0:	5d01013c 	stfpls	f0, [r1, #-240]	; 0xffffff10
    27d4:	5d000005 	stcpl	0, cr0, [r0, #-20]	; 0xffffffec
    27d8:	3c000005 	stccc	0, cr0, [r0], {5}
    27dc:	05290101 	streq	r0, [r9, #-257]!	; 0xfffffeff
    27e0:	05290000 	streq	r0, [r9, #-0]!
    27e4:	013c0000 	teqeq	ip, r0
    27e8:	00060a01 	andeq	r0, r6, r1, lsl #20
    27ec:	00060a00 	andeq	r0, r6, r0, lsl #20
    27f0:	01013c00 	tsteq	r1, r0, lsl #24
    27f4:	0000057e 	andeq	r0, r0, lr, ror r5
    27f8:	0000057e 	andeq	r0, r0, lr, ror r5
    27fc:	2c01013c 	stfcss	f0, [r1], {60}	; 0x3c
    2800:	2c000006 	stccs	0, cr0, [r0], {6}
    2804:	3c000006 	stccc	0, cr0, [r0], {6}
    2808:	06e40101 	strbteq	r0, [r4], r1, lsl #2
    280c:	06e40000 	strbteq	r0, [r4], r0
    2810:	013c0000 	teqeq	ip, r0
    2814:	0006d301 	andeq	sp, r6, r1, lsl #6
    2818:	0006d300 	andeq	sp, r6, r0, lsl #6
    281c:	01013d00 	tsteq	r1, r0, lsl #26
    2820:	0000053c 	andeq	r0, r0, ip, lsr r5
    2824:	0000053c 	andeq	r0, r0, ip, lsr r5
    2828:	00053107 	andeq	r3, r5, r7, lsl #2
    282c:	0000024f 	andeq	r0, r0, pc, asr #4
    2830:	069b0002 	ldreq	r0, [fp], r2
    2834:	01040000 	mrseq	r0, (UNDEF: 4)
    2838:	000000dc 	ldrdeq	r0, [r0], -ip
    283c:	0007540c 	andeq	r5, r7, ip, lsl #8
    2840:	0001c500 	andeq	ip, r1, r0, lsl #10
    2844:	0001e800 	andeq	lr, r1, r0, lsl #16
	...
    2850:	00188f00 	andseq	r8, r8, r0, lsl #30
    2854:	06010200 	streq	r0, [r1], -r0, lsl #4
    2858:	000000ac 	andeq	r0, r0, ip, lsr #1
    285c:	00000003 	andeq	r0, r0, r3
    2860:	182b0200 	stmdane	fp!, {r9}
    2864:	0000003c 	andeq	r0, r0, ip, lsr r0
    2868:	aa080102 	bge	202c78 <__RAM_SIZE+0x102c78>
    286c:	02000000 	andeq	r0, r0, #0
    2870:	02de0502 	sbcseq	r0, lr, #8388608	; 0x800000
    2874:	02020000 	andeq	r0, r2, #0
    2878:	0000c907 	andeq	ip, r0, r7, lsl #18
    287c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2880:	00000293 	muleq	r0, r3, r2
    2884:	0003b603 	andeq	fp, r3, r3, lsl #12
    2888:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    288c:	00000064 	andeq	r0, r0, r4, rrx
    2890:	35070402 	strcc	r0, [r7, #-1026]	; 0xfffffbfe
    2894:	02000002 	andeq	r0, r0, #2
    2898:	028e0508 	addeq	r0, lr, #8, 10	; 0x2000000
    289c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    28a0:	00023007 	andeq	r3, r2, r7
    28a4:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    28a8:	00746e69 	rsbseq	r6, r4, r9, ror #28
    28ac:	3a070402 	bcc	1c38bc <__RAM_SIZE+0xc38bc>
    28b0:	03000002 	movweq	r0, #2
    28b4:	0000000a 	andeq	r0, r0, sl
    28b8:	8017d103 	andshi	sp, r7, r3, lsl #2
    28bc:	02000000 	andeq	r0, r0, #0
    28c0:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
    28c4:	01020000 	mrseq	r0, (UNDEF: 2)
    28c8:	0000b308 	andeq	fp, r0, r8, lsl #6
    28cc:	009a0500 	addseq	r0, sl, r0, lsl #10
    28d0:	04060000 	streq	r0, [r6], #-0
    28d4:	000000a1 	andeq	r0, r0, r1, lsr #1
    28d8:	00000203 	andeq	r0, r0, r3, lsl #4
    28dc:	13180400 	tstne	r8, #0, 8
    28e0:	00000030 	andeq	r0, r0, r0, lsr r0
    28e4:	0003b803 	andeq	fp, r3, r3, lsl #16
    28e8:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    28ec:	00000058 	andeq	r0, r0, r8, asr r0
    28f0:	076e0107 	strbeq	r0, [lr, -r7, lsl #2]!
    28f4:	3f010000 	svccc	0x00010000
    28f8:	00870108 	addeq	r0, r7, r8, lsl #2
	...
    2904:	25350000 	ldrcs	r0, [r5, #-0]!
    2908:	3b010000 	blcc	42910 <__HEAP_SIZE+0x41910>
    290c:	08000001 	stmdaeq	r0, {r0}
    2910:	00000511 	andeq	r0, r0, r1, lsl r5
    2914:	3b1b3f01 	blcc	6d2520 <__RAM_SIZE+0x5d2520>
    2918:	59000001 	stmdbpl	r0, {r0}
    291c:	55000025 	strpl	r0, [r0, #-37]	; 0xffffffdb
    2920:	08000025 	stmdaeq	r0, {r0, r2, r5}
    2924:	00000552 	andeq	r0, r0, r2, asr r5
    2928:	872a3f01 	strhi	r3, [sl, -r1, lsl #30]!
    292c:	7b000000 	blvc	2934 <__HEAP_SIZE+0x1934>
    2930:	77000025 	strvc	r0, [r0, -r5, lsr #32]
    2934:	09000025 	stmdbeq	r0, {r0, r2, r5}
    2938:	01006863 	tsteq	r0, r3, ror #16
    293c:	00ac0d40 	adceq	r0, ip, r0, asr #26
    2940:	259f0000 	ldrcs	r0, [pc]	; 2948 <__HEAP_SIZE+0x1948>
    2944:	25990000 	ldrcs	r0, [r9]
    2948:	69090000 	stmdbvs	r9, {}	; <UNPREDICTABLE>
    294c:	41010074 	tstmi	r1, r4, ror r0
    2950:	0000870c 	andeq	r8, r0, ip, lsl #14
    2954:	0025cd00 	eoreq	ip, r5, r0, lsl #26
    2958:	0025c900 	eoreq	ip, r5, r0, lsl #18
    295c:	00000a00 	andeq	r0, r0, r0, lsl #20
    2960:	02440000 	subeq	r0, r4, #0
    2964:	06000000 	streq	r0, [r0], -r0
    2968:	0000ac04 	andeq	sl, r0, r4, lsl #24
    296c:	86010b00 	strhi	r0, [r1], -r0, lsl #22
    2970:	01000007 	tsteq	r0, r7
    2974:	0001063b 	andeq	r0, r1, fp, lsr r6
    2978:	00000000 	andeq	r0, r0, r0
    297c:	ec000000 	stc	0, cr0, [r0], {-0}
    2980:	01000025 	tsteq	r0, r5, lsr #32
    2984:	00000182 	andeq	r0, r0, r2, lsl #3
    2988:	00076708 	andeq	r6, r7, r8, lsl #14
    298c:	1c3b0100 	ldfnes	f0, [fp], #-0
    2990:	000000a6 	andeq	r0, r0, r6, lsr #1
    2994:	00002610 	andeq	r2, r0, r0, lsl r6
    2998:	0000260c 	andeq	r2, r0, ip, lsl #12
    299c:	0000000c 	andeq	r0, r0, ip
    29a0:	00019800 	andeq	r9, r1, r0, lsl #16
    29a4:	50010d00 	andpl	r0, r1, r0, lsl #26
    29a8:	5001f303 	andpl	pc, r1, r3, lsl #6
    29ac:	010e0000 	mrseq	r0, (UNDEF: 14)
    29b0:	00000089 	andeq	r0, r0, r9, lsl #1
    29b4:	01063201 	tsteq	r6, r1, lsl #4
    29b8:	10001b74 	andne	r1, r0, r4, ror fp
    29bc:	10001b98 	mulne	r0, r8, fp
    29c0:	01007d02 	tsteq	r0, r2, lsl #26
    29c4:	00a50107 	adceq	r0, r5, r7, lsl #2
    29c8:	dd050000 	stcle	0, cr0, [r5, #-0]
    29cc:	00790105 	rsbseq	r0, r9, r5, lsl #2
    29d0:	1b540000 	blne	15029d8 <__RAM_SIZE+0x14029d8>
    29d4:	1b721000 	blne	1c869dc <__RAM_SIZE+0x1b869dc>
    29d8:	26311000 	ldrtcs	r1, [r1], -r0
    29dc:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    29e0:	08000001 	stmdaeq	r0, {r0}
    29e4:	00000767 	andeq	r0, r0, r7, ror #14
    29e8:	a6162801 	ldrge	r2, [r6], -r1, lsl #16
    29ec:	55000000 	strpl	r0, [r0, #-0]
    29f0:	51000026 	tstpl	r0, r6, lsr #32
    29f4:	0f000026 	svceq	0x00000026
    29f8:	00000780 	andeq	r0, r0, r0, lsl #15
    29fc:	79092901 	stmdbvc	r9, {r0, r8, fp, sp}
    2a00:	77000000 	strvc	r0, [r0, -r0]
    2a04:	73000026 	movwvc	r0, #38	; 0x26
    2a08:	0a000026 	beq	2aa8 <__HEAP_SIZE+0x1aa8>
    2a0c:	10001b60 	andne	r1, r0, r0, ror #22
    2a10:	00000212 	andeq	r0, r0, r2, lsl r2
    2a14:	001b6e0c 	andseq	r6, fp, ip, lsl #28
    2a18:	00021210 	andeq	r1, r2, r0, lsl r2
    2a1c:	50010d00 	andpl	r0, r1, r0, lsl #26
    2a20:	00003a01 	andeq	r3, r0, r1, lsl #20
    2a24:	07900110 			; <UNDEFINED> instruction: 0x07900110
    2a28:	23010000 	movwcs	r0, #4096	; 0x1000
    2a2c:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    2a38:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2a3c:	01110100 	tsteq	r1, r0, lsl #2
    2a40:	0000053c 	andeq	r0, r0, ip, lsr r5
    2a44:	01051d01 	tsteq	r5, r1, lsl #26
    2a48:	00000079 	andeq	r0, r0, r9, ror r0
    2a4c:	10001b40 	andne	r1, r0, r0, asr #22
    2a50:	10001b54 	andne	r1, r0, r4, asr fp
    2a54:	01007d02 	tsteq	r0, r2, lsl #26
    2a58:	00000244 	andeq	r0, r0, r4, asr #4
    2a5c:	00686312 	rsbeq	r6, r8, r2, lsl r3
    2a60:	79121d01 	ldmdbvc	r2, {r0, r8, sl, fp, ip}
    2a64:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2a68:	96000026 	strls	r0, [r0], -r6, lsr #32
    2a6c:	00000026 	andeq	r0, r0, r6, lsr #32
    2a70:	78010113 	stmdavc	r1, {r0, r1, r4, r8}
    2a74:	78000007 	stmdavc	r0, {r0, r1, r2}
    2a78:	05000007 	streq	r0, [r0, #-7]
    2a7c:	3b0005d9 	blcc	41e8 <__HEAP_SIZE+0x31e8>
    2a80:	0200000a 	andeq	r0, r0, #10
    2a84:	0007fa00 	andeq	pc, r7, r0, lsl #20
    2a88:	dc010400 	cfstrsle	mvf0, [r1], {-0}
    2a8c:	0c000000 	stceq	0, cr0, [r0], {-0}
    2a90:	000008c5 	andeq	r0, r0, r5, asr #17
    2a94:	000001c5 	andeq	r0, r0, r5, asr #3
    2a98:	00000220 	andeq	r0, r0, r0, lsr #4
	...
    2aa4:	00001bcb 	andeq	r1, r0, fp, asr #23
    2aa8:	ac060102 	stfges	f0, [r6], {2}
    2aac:	02000000 	andeq	r0, r0, #0
    2ab0:	00aa0801 	adceq	r0, sl, r1, lsl #16
    2ab4:	02020000 	andeq	r0, r2, #0
    2ab8:	0002de05 	andeq	sp, r2, r5, lsl #28
    2abc:	07f40300 	ldrbeq	r0, [r4, r0, lsl #6]!
    2ac0:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    2ac4:	00004a19 	andeq	r4, r0, r9, lsl sl
    2ac8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2acc:	000000c9 	andeq	r0, r0, r9, asr #1
    2ad0:	93050402 	movwls	r0, #21506	; 0x5402
    2ad4:	03000002 	movweq	r0, #2
    2ad8:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    2adc:	64194f03 	ldrvs	r4, [r9], #-3843	; 0xfffff0fd
    2ae0:	02000000 	andeq	r0, r0, #0
    2ae4:	02350704 	eorseq	r0, r5, #4, 14	; 0x100000
    2ae8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2aec:	00028e05 	andeq	r8, r2, r5, lsl #28
    2af0:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2af4:	00000230 	andeq	r0, r0, r0, lsr r2
    2af8:	69050404 	stmdbvs	r5, {r2, sl}
    2afc:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    2b00:	023a0704 	eorseq	r0, sl, #4, 14	; 0x100000
    2b04:	80050000 	andhi	r0, r5, r0
    2b08:	03000000 	movweq	r0, #0
    2b0c:	0000000a 	andeq	r0, r0, sl
    2b10:	8017d104 	andshi	sp, r7, r4, lsl #2
    2b14:	02000000 	andeq	r0, r0, #0
    2b18:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
    2b1c:	01020000 	mrseq	r0, (UNDEF: 2)
    2b20:	0000b308 	andeq	fp, r0, r8, lsl #6
    2b24:	07f60300 	ldrbeq	r0, [r6, r0, lsl #6]!
    2b28:	24050000 	strcs	r0, [r5], #-0
    2b2c:	00003e14 	andeq	r3, r0, r4, lsl lr
    2b30:	03b80300 			; <UNDEFINED> instruction: 0x03b80300
    2b34:	30050000 	andcc	r0, r5, r0
    2b38:	00005814 	andeq	r5, r0, r4, lsl r8
    2b3c:	089c0300 	ldmeq	ip, {r8, r9}
    2b40:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
    2b44:	0000ca23 	andeq	ip, r0, r3, lsr #20
    2b48:	09630600 	stmdbeq	r3!, {r9, sl}^
    2b4c:	06200000 	strteq	r0, [r0], -r0
    2b50:	014a0829 	cmpeq	sl, r9, lsr #16
    2b54:	72070000 	andvc	r0, r7, #0
    2b58:	2a060030 	bcs	182c20 <__RAM_SIZE+0x82c20>
    2b5c:	00008012 	andeq	r8, r0, r2, lsl r0
    2b60:	00230200 	eoreq	r0, r3, r0, lsl #4
    2b64:	00317207 	eorseq	r7, r1, r7, lsl #4
    2b68:	80122b06 	andshi	r2, r2, r6, lsl #22
    2b6c:	02000000 	andeq	r0, r0, #0
    2b70:	72070423 	andvc	r0, r7, #587202560	; 0x23000000
    2b74:	2c060032 	stccs	0, cr0, [r6], {50}	; 0x32
    2b78:	00008012 	andeq	r8, r0, r2, lsl r0
    2b7c:	08230200 	stmdaeq	r3!, {r9}
    2b80:	00337207 	eorseq	r7, r3, r7, lsl #4
    2b84:	80122d06 	andshi	r2, r2, r6, lsl #26
    2b88:	02000000 	andeq	r0, r0, #0
    2b8c:	72070c23 	andvc	r0, r7, #8960	; 0x2300
    2b90:	06003231 			; <UNDEFINED> instruction: 0x06003231
    2b94:	0080122e 	addeq	r1, r0, lr, lsr #4
    2b98:	23020000 	movwcs	r0, #8192	; 0x2000
    2b9c:	726c0710 	rsbvc	r0, ip, #16, 14	; 0x400000
    2ba0:	122f0600 	eorne	r0, pc, #0, 12
    2ba4:	00000080 	andeq	r0, r0, r0, lsl #1
    2ba8:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    2bac:	06006370 			; <UNDEFINED> instruction: 0x06006370
    2bb0:	00801230 	addeq	r1, r0, r0, lsr r2
    2bb4:	23020000 	movwcs	r0, #8192	; 0x2000
    2bb8:	73700718 	cmnvc	r0, #24, 14	; 0x600000
    2bbc:	31060072 	tstcc	r6, r2, ror r0
    2bc0:	00008012 	andeq	r8, r0, r2, lsl r0
    2bc4:	1c230200 	sfmne	f0, 4, [r3], #-0
    2bc8:	08580300 	ldmdaeq	r8, {r8, r9}^
    2bcc:	34060000 	strcc	r0, [r6], #-0
    2bd0:	00015623 	andeq	r5, r1, r3, lsr #12
    2bd4:	087d0600 	ldmdaeq	sp!, {r9, sl}^
    2bd8:	06200000 	strteq	r0, [r0], -r0
    2bdc:	01d60835 	bicseq	r0, r6, r5, lsr r8
    2be0:	72070000 	andvc	r0, r7, #0
    2be4:	36060034 			; <UNDEFINED> instruction: 0x36060034
    2be8:	00008012 	andeq	r8, r0, r2, lsl r0
    2bec:	00230200 	eoreq	r0, r3, r0, lsl #4
    2bf0:	00357207 	eorseq	r7, r5, r7, lsl #4
    2bf4:	80123706 	andshi	r3, r2, r6, lsl #14
    2bf8:	02000000 	andeq	r0, r0, #0
    2bfc:	72070423 	andvc	r0, r7, #587202560	; 0x23000000
    2c00:	38060036 	stmdacc	r6, {r1, r2, r4, r5}
    2c04:	00008012 	andeq	r8, r0, r2, lsl r0
    2c08:	08230200 	stmdaeq	r3!, {r9}
    2c0c:	00377207 	eorseq	r7, r7, r7, lsl #4
    2c10:	80123906 	andshi	r3, r2, r6, lsl #18
    2c14:	02000000 	andeq	r0, r0, #0
    2c18:	72070c23 	andvc	r0, r7, #8960	; 0x2300
    2c1c:	3a060038 	bcc	182d04 <__RAM_SIZE+0x82d04>
    2c20:	00008012 	andeq	r8, r0, r2, lsl r0
    2c24:	10230200 	eorne	r0, r3, r0, lsl #4
    2c28:	00397207 	eorseq	r7, r9, r7, lsl #4
    2c2c:	80123b06 	andshi	r3, r2, r6, lsl #22
    2c30:	02000000 	andeq	r0, r0, #0
    2c34:	72071423 	andvc	r1, r7, #587202560	; 0x23000000
    2c38:	06003031 			; <UNDEFINED> instruction: 0x06003031
    2c3c:	0080123c 	addeq	r1, r0, ip, lsr r2
    2c40:	23020000 	movwcs	r0, #8192	; 0x2000
    2c44:	31720718 	cmncc	r2, r8, lsl r7
    2c48:	3d060031 	stccc	0, cr0, [r6, #-196]	; 0xffffff3c
    2c4c:	00008012 	andeq	r8, r0, r2, lsl r0
    2c50:	1c230200 	sfmne	f0, 4, [r3], #-0
    2c54:	07d30300 	ldrbeq	r0, [r3, r0, lsl #6]
    2c58:	40060000 	andmi	r0, r6, r0
    2c5c:	0001e21c 	andeq	lr, r1, ip, lsl r2
    2c60:	08900600 	ldmeq	r0, {r9, sl}
    2c64:	06400000 	strbeq	r0, [r0], -r0
    2c68:	020e0841 	andeq	r0, lr, #4259840	; 0x410000
    2c6c:	89080000 	stmdbhi	r8, {}	; <UNPREDICTABLE>
    2c70:	06000008 	streq	r0, [r0], -r8
    2c74:	014a1a42 	cmpeq	sl, r2, asr #20
    2c78:	23020000 	movwcs	r0, #8192	; 0x2000
    2c7c:	096f0800 	stmdbeq	pc!, {fp}^	; <UNPREDICTABLE>
    2c80:	43060000 	movwmi	r0, #24576	; 0x6000
    2c84:	0000be1a 	andeq	fp, r0, sl, lsl lr
    2c88:	20230200 	eorcs	r0, r3, r0, lsl #4
    2c8c:	094a0300 	stmdbeq	sl, {r8, r9}^
    2c90:	46060000 	strmi	r0, [r6], -r0
    2c94:	00021f0f 	andeq	r1, r2, pc, lsl #30
    2c98:	020e0500 	andeq	r0, lr, #0, 10
    2c9c:	04090000 	streq	r0, [r9], #-0
    2ca0:	00000225 	andeq	r0, r0, r5, lsr #4
    2ca4:	0079010a 	rsbseq	r0, r9, sl, lsl #2
    2ca8:	02440000 	subeq	r0, r4, #0
    2cac:	440b0000 	strmi	r0, [fp], #-0
    2cb0:	0b000002 	bleq	2cc0 <__HEAP_SIZE+0x1cc0>
    2cb4:	0000008c 	andeq	r0, r0, ip, lsl #1
    2cb8:	0002440b 	andeq	r4, r2, fp, lsl #8
    2cbc:	02440b00 	subeq	r0, r4, #0, 22
    2cc0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2cc4:	00008004 	andeq	r8, r0, r4
    2cc8:	092e0c00 	stmdbeq	lr!, {sl, fp}
    2ccc:	1d010000 	stcne	0, cr0, [r1, #-0]
    2cd0:	00008015 	andeq	r8, r0, r5, lsl r0
    2cd4:	0c010100 	stfeqs	f0, [r1], {-0}
    2cd8:	00000976 	andeq	r0, r0, r6, ror r9
    2cdc:	80151e01 	andshi	r1, r5, r1, lsl #28
    2ce0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ce4:	08140c01 	ldmdaeq	r4, {r0, sl, fp}
    2ce8:	1f010000 	svcne	0x00010000
    2cec:	00008015 	andeq	r8, r0, r5, lsl r0
    2cf0:	0c010100 	stfeqs	f0, [r1], {-0}
    2cf4:	0000082e 	andeq	r0, r0, lr, lsr #16
    2cf8:	80152001 	andshi	r2, r5, r1
    2cfc:	01000000 	mrseq	r0, (UNDEF: 0)
    2d00:	083d0d01 	ldmdaeq	sp!, {r0, r8, sl, fp}
    2d04:	71010000 	mrsvc	r0, (UNDEF: 1)
    2d08:	00021a20 	andeq	r1, r2, r0, lsr #20
    2d0c:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    2d10:	0d380000 	ldceq	0, cr0, [r8, #-0]
    2d14:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    2d18:	1a207201 	bne	81f524 <__RAM_SIZE+0x71f524>
    2d1c:	05000002 	streq	r0, [r0, #-2]
    2d20:	00000803 	andeq	r0, r0, r3, lsl #16
    2d24:	09060e38 	stmdbeq	r6, {r3, r4, r5, r9, sl, fp}
    2d28:	74010000 	strvc	r0, [r1], #-0
    2d2c:	00008717 	andeq	r8, r0, r7, lsl r7
    2d30:	03050100 	movweq	r0, #20736	; 0x5100
    2d34:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
    2d38:	0007e10e 	andeq	lr, r7, lr, lsl #2
    2d3c:	17750100 	ldrbne	r0, [r5, -r0, lsl #2]!
    2d40:	00000087 	andeq	r0, r0, r7, lsl #1
    2d44:	74030501 	strvc	r0, [r3], #-1281	; 0xfffffaff
    2d48:	0f380085 	svceq	0x00380085
    2d4c:	00026601 	andeq	r6, r2, r1, lsl #12
    2d50:	012b0100 			; <UNDEFINED> instruction: 0x012b0100
    2d54:	00790105 	rsbseq	r0, r9, r5, lsl #2
    2d58:	1ea40000 	cdpne	0, 10, cr0, cr4, cr0, {0}
    2d5c:	1eb81000 	cdpne	0, 11, cr1, cr8, cr0, {0}
    2d60:	7d021000 	stcvc	0, cr1, [r2, #-0]
    2d64:	03160100 	tsteq	r6, #0, 2
    2d68:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    2d6c:	0100000a 	tsteq	r0, sl
    2d70:	0e30012b 	rsfeqsp	f0, f0, #3.0
    2d74:	b3000002 	movwlt	r0, #2
    2d78:	ab000026 	blge	2e18 <__HEAP_SIZE+0x1e18>
    2d7c:	11000026 	tstne	r0, r6, lsr #32
    2d80:	00000836 	andeq	r0, r0, r6, lsr r8
    2d84:	09012c01 	stmdbeq	r1, {r0, sl, fp, sp}
    2d88:	00000079 	andeq	r0, r0, r9, ror r0
    2d8c:	000026f4 	strdeq	r2, [r0], -r4
    2d90:	000026ee 	andeq	r2, r0, lr, ror #13
    2d94:	ff011200 			; <UNDEFINED> instruction: 0xff011200
    2d98:	01000007 	tsteq	r0, r7
    2d9c:	010e0127 	tsteq	lr, r7, lsr #2
    2da0:	00000080 	andeq	r0, r0, r0, lsl #1
	...
    2dac:	01007d02 	tsteq	r0, r2, lsl #26
    2db0:	09350112 	ldmdbeq	r5!, {r1, r4, r8}
    2db4:	23010000 	movwcs	r0, #4096	; 0x1000
    2db8:	80010e01 	andhi	r0, r1, r1, lsl #28
	...
    2dc4:	02000000 	andeq	r0, r0, #0
    2dc8:	1201007d 	andne	r0, r1, #125	; 0x7d
    2dcc:	00001101 	andeq	r1, r0, r1, lsl #2
    2dd0:	011f0100 	tsteq	pc, r0, lsl #2
    2dd4:	0080010e 	addeq	r0, r0, lr, lsl #2
    2dd8:	1e9c0000 	cdpne	0, 9, cr0, cr12, cr0, {0}
    2ddc:	1ea41000 	cdpne	0, 10, cr1, cr4, cr0, {0}
    2de0:	7d021000 	stcvc	0, cr1, [r2, #-0]
    2de4:	010f0100 	mrseq	r0, (UNDEF: 31)
    2de8:	00000300 	andeq	r0, r0, r0, lsl #6
    2dec:	0e011b01 	vmlaeq.f64	d1, d1, d1
    2df0:	00008001 	andeq	r8, r0, r1
    2df4:	001e9400 	andseq	r9, lr, r0, lsl #8
    2df8:	001e9a10 	andseq	r9, lr, r0, lsl sl
    2dfc:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2e00:	0003ab01 	andeq	sl, r3, r1, lsl #22
    2e04:	09e61300 	stmibeq	r6!, {r8, r9, ip}^
    2e08:	1e940000 	cdpne	0, 9, cr0, cr4, cr0, {0}
    2e0c:	94021000 	strls	r1, [r2], #-0
    2e10:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    2e14:	0110001e 	tsteq	r0, lr, lsl r0
    2e18:	140c011c 	strne	r0, [ip], #-284	; 0xfffffee4
    2e1c:	000009f9 	strdeq	r0, [r0], -r9
    2e20:	00002722 	andeq	r2, r0, r2, lsr #14
    2e24:	00002720 	andeq	r2, r0, r0, lsr #14
    2e28:	01150000 	tsteq	r5, r0
    2e2c:	00000251 	andeq	r0, r0, r1, asr r2
    2e30:	0105ef01 	tsteq	r5, r1, lsl #30
    2e34:	00000079 	andeq	r0, r0, r9, ror r0
    2e38:	10001bfc 	strdne	r1, [r0], -ip
    2e3c:	10001c78 	andne	r1, r0, r8, ror ip
    2e40:	00002735 	andeq	r2, r0, r5, lsr r7
    2e44:	00048501 	andeq	r8, r4, r1, lsl #10
    2e48:	05111600 	ldreq	r1, [r1, #-1536]	; 0xfffffa00
    2e4c:	ef010000 	svc	0x00010000
    2e50:	00024428 	andeq	r4, r2, r8, lsr #8
    2e54:	00275d00 	eoreq	r5, r7, r0, lsl #26
    2e58:	00275500 	eoreq	r5, r7, r0, lsl #10
    2e5c:	05521600 	ldrbeq	r1, [r2, #-1536]	; 0xfffffa00
    2e60:	ef010000 	svc	0x00010000
    2e64:	00008c37 	andeq	r8, r0, r7, lsr ip
    2e68:	00279c00 	eoreq	r9, r7, r0, lsl #24
    2e6c:	00279400 	eoreq	r9, r7, r0, lsl #8
    2e70:	030e1600 	movweq	r1, #58880	; 0xe600
    2e74:	ef010000 	svc	0x00010000
    2e78:	0002444b 	andeq	r4, r2, fp, asr #8
    2e7c:	0027d900 	eoreq	sp, r7, r0, lsl #18
    2e80:	0027d300 	eoreq	sp, r7, r0, lsl #6
    2e84:	001f1600 	andseq	r1, pc, r0, lsl #12
    2e88:	ef010000 	svc	0x00010000
    2e8c:	00024466 	andeq	r4, r2, r6, ror #8
    2e90:	00280d00 	eoreq	r0, r8, r0, lsl #26
    2e94:	00280500 	eoreq	r0, r8, r0, lsl #10
    2e98:	00411700 	subeq	r1, r1, r0, lsl #14
    2e9c:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    2ea0:	00007909 	andeq	r7, r0, r9, lsl #18
    2ea4:	00284a00 	eoreq	r4, r8, r0, lsl #20
    2ea8:	00284400 	eoreq	r4, r8, r0, lsl #8
    2eac:	63701800 	cmnvs	r0, #0, 16
    2eb0:	12f10100 	rscsne	r0, r1, #0, 2
    2eb4:	00000080 	andeq	r0, r0, r0, lsl #1
    2eb8:	0000287f 	andeq	r2, r0, pc, ror r8
    2ebc:	00002875 	andeq	r2, r0, r5, ror r8
    2ec0:	00706f18 	rsbseq	r6, r0, r8, lsl pc
    2ec4:	801af101 	andshi	pc, sl, r1, lsl #2
    2ec8:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    2ecc:	c2000028 	andgt	r0, r0, #40	; 0x28
    2ed0:	18000028 	stmdane	r0, {r3, r5}
    2ed4:	01007073 	tsteq	r0, r3, ror r0
    2ed8:	024423f1 	subeq	r2, r4, #-1006632957	; 0xc4000003
    2edc:	28f90000 	ldmcs	r9!, {}^	; <UNPREDICTABLE>
    2ee0:	28f30000 	ldmcs	r3!, {}^	; <UNPREDICTABLE>
    2ee4:	3e190000 	cdpcc	0, 1, cr0, cr9, cr0, {0}
    2ee8:	0310001c 	tsteq	r0, #28
    2eec:	7b000009 	blvc	2f18 <__HEAP_SIZE+0x1f18>
    2ef0:	1a000004 	bne	2f08 <__HEAP_SIZE+0x1f08>
    2ef4:	79025001 	stmdbvc	r2, {r0, ip, lr}
    2ef8:	421b0000 	andsmi	r0, fp, #0
    2efc:	a910001c 	ldmdbge	r0, {r2, r3, r4}
    2f00:	00000008 	andeq	r0, r0, r8
    2f04:	08f3011c 	ldmeq	r3!, {r2, r3, r4, r8}^
    2f08:	af010000 	svcge	0x00010000
    2f0c:	1ce80106 	stfnee	f0, [r8], #24
    2f10:	1e941000 	cdpne	0, 9, cr1, cr4, cr0, {0}
    2f14:	29241000 	stmdbcs	r4!, {ip}
    2f18:	b0010000 	andlt	r0, r1, r0
    2f1c:	16000007 	strne	r0, [r0], -r7
    2f20:	00000830 	andeq	r0, r0, r0, lsr r8
    2f24:	4427af01 	strtmi	sl, [r7], #-3841	; 0xfffff0ff
    2f28:	4e000002 	cdpmi	0, 0, cr0, cr0, cr2, {0}
    2f2c:	44000029 	strmi	r0, [r0], #-41	; 0xffffffd7
    2f30:	16000029 	strne	r0, [r0], -r9, lsr #32
    2f34:	00000851 	andeq	r0, r0, r1, asr r8
    2f38:	803baf01 	eorshi	sl, fp, r1, lsl #30
    2f3c:	97000000 	strls	r0, [r0, -r0]
    2f40:	93000029 	movwls	r0, #41	; 0x29
    2f44:	17000029 	strne	r0, [r0, -r9, lsr #32]
    2f48:	00000041 	andeq	r0, r0, r1, asr #32
    2f4c:	7909b001 	stmdbvc	r9, {r0, ip, sp, pc}
    2f50:	c1000000 	mrsgt	r0, (UNDEF: 0)
    2f54:	b5000029 	strlt	r0, [r0, #-41]	; 0xffffffd7
    2f58:	17000029 	strne	r0, [r0, -r9, lsr #32]
    2f5c:	00000780 	andeq	r0, r0, r0, lsl #15
    2f60:	7914b001 	ldmdbvc	r4, {r0, ip, sp, pc}
    2f64:	17000000 	strne	r0, [r0, -r0]
    2f68:	0d00002a 	stceq	0, cr0, [r0, #-168]	; 0xffffff58
    2f6c:	1700002a 	strne	r0, [r0, -sl, lsr #32]
    2f70:	00000314 	andeq	r0, r0, r4, lsl r3
    2f74:	4413b101 	ldrmi	fp, [r3], #-257	; 0xfffffeff
    2f78:	84000002 	strhi	r0, [r0], #-2
    2f7c:	5a00002a 	bpl	302c <__HEAP_SIZE+0x202c>
    2f80:	0d00002a 	stceq	0, cr0, [r0, #-168]	; 0xffffff58
    2f84:	00000896 	muleq	r0, r6, r8
    2f88:	d61ab201 	ldrle	fp, [sl], -r1, lsl #4
    2f8c:	05000001 	streq	r0, [r0, #-1]
    2f90:	00857803 	addeq	r7, r5, r3, lsl #16
    2f94:	05110d38 	ldreq	r0, [r1, #-3384]	; 0xfffff2c8
    2f98:	b3010000 	movwlt	r0, #4096	; 0x1000
    2f9c:	0007b019 	andeq	fp, r7, r9, lsl r0
    2fa0:	70030500 	andvc	r0, r3, r0, lsl #10
    2fa4:	19380084 	ldmdbne	r8!, {r2, r7}
    2fa8:	10001d38 	andne	r1, r0, r8, lsr sp
    2fac:	00000a07 	andeq	r0, r0, r7, lsl #20
    2fb0:	0000053c 	andeq	r0, r0, ip, lsr r5
    2fb4:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    2fb8:	19000077 	stmdbne	r0, {r0, r1, r2, r4, r5, r6}
    2fbc:	10001d3e 	andne	r1, r0, lr, lsr sp
    2fc0:	00000a07 	andeq	r0, r0, r7, lsl #20
    2fc4:	00000553 	andeq	r0, r0, r3, asr r5
    2fc8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2fcc:	005c3003 	subseq	r3, ip, r3
    2fd0:	44190010 	ldrmi	r0, [r9], #-16
    2fd4:	0710001d 			; <UNDEFINED> instruction: 0x0710001d
    2fd8:	6a00000a 	bvs	3008 <__HEAP_SIZE+0x2008>
    2fdc:	1a000005 	bne	2ff8 <__HEAP_SIZE+0x1ff8>
    2fe0:	03055001 	movweq	r5, #20481	; 0x5001
    2fe4:	10005c50 	andne	r5, r0, r0, asr ip
    2fe8:	1d4c1900 	vstrne.16	s3, [ip, #-0]	; <UNPREDICTABLE>
    2fec:	0a141000 	beq	506ff4 <__RAM_SIZE+0x406ff4>
    2ff0:	05810000 	streq	r0, [r1]
    2ff4:	011a0000 	tsteq	sl, r0
    2ff8:	64030550 	strvs	r0, [r3], #-1360	; 0xfffffab0
    2ffc:	0010005c 	andseq	r0, r0, ip, asr r0
    3000:	001d5419 	andseq	r5, sp, r9, lsl r4
    3004:	000a1410 	andeq	r1, sl, r0, lsl r4
    3008:	00059800 	andeq	r9, r5, r0, lsl #16
    300c:	50011a00 	andpl	r1, r1, r0, lsl #20
    3010:	5c780305 	ldclpl	3, cr0, [r8], #-20	; 0xffffffec
    3014:	19001000 	stmdbne	r0, {ip}
    3018:	10001d5c 	andne	r1, r0, ip, asr sp
    301c:	00000a14 	andeq	r0, r0, r4, lsl sl
    3020:	000005af 	andeq	r0, r0, pc, lsr #11
    3024:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3028:	005c8c03 	subseq	r8, ip, r3, lsl #24
    302c:	64190010 	ldrvs	r0, [r9], #-16
    3030:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    3034:	c600000a 	strgt	r0, [r0], -sl
    3038:	1a000005 	bne	3054 <__HEAP_SIZE+0x2054>
    303c:	03055001 	movweq	r5, #20481	; 0x5001
    3040:	10005ca0 	andne	r5, r0, r0, lsr #25
    3044:	1d6c1900 			; <UNDEFINED> instruction: 0x1d6c1900
    3048:	0a141000 	beq	507050 <__RAM_SIZE+0x407050>
    304c:	05dd0000 	ldrbeq	r0, [sp]
    3050:	011a0000 	tsteq	sl, r0
    3054:	b4030550 	strlt	r0, [r3], #-1360	; 0xfffffab0
    3058:	0010005c 	andseq	r0, r0, ip, asr r0
    305c:	001d7419 	andseq	r7, sp, r9, lsl r4
    3060:	000a1410 	andeq	r1, sl, r0, lsl r4
    3064:	0005f400 	andeq	pc, r5, r0, lsl #8
    3068:	50011a00 	andpl	r1, r1, r0, lsl #20
    306c:	5cc80305 	stclpl	3, cr0, [r8], {5}
    3070:	19001000 	stmdbne	r0, {ip}
    3074:	10001d7c 	andne	r1, r0, ip, ror sp
    3078:	00000a14 	andeq	r0, r0, r4, lsl sl
    307c:	0000060b 	andeq	r0, r0, fp, lsl #12
    3080:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3084:	005cdc03 	subseq	sp, ip, r3, lsl #24
    3088:	84190010 	ldrhi	r0, [r9], #-16
    308c:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    3090:	2200000a 	andcs	r0, r0, #10
    3094:	1a000006 	bne	30b4 <__HEAP_SIZE+0x20b4>
    3098:	03055001 	movweq	r5, #20481	; 0x5001
    309c:	10005cf0 	strdne	r5, [r0], -r0
    30a0:	1d8c1900 	vstrne.16	s2, [ip]	; <UNPREDICTABLE>
    30a4:	0a141000 	beq	5070ac <__RAM_SIZE+0x4070ac>
    30a8:	06390000 	ldrteq	r0, [r9], -r0
    30ac:	011a0000 	tsteq	sl, r0
    30b0:	04030550 	streq	r0, [r3], #-1360	; 0xfffffab0
    30b4:	0010005d 	andseq	r0, r0, sp, asr r0
    30b8:	001d9419 	andseq	r9, sp, r9, lsl r4
    30bc:	000a1410 	andeq	r1, sl, r0, lsl r4
    30c0:	00065000 	andeq	r5, r6, r0
    30c4:	50011a00 	andpl	r1, r1, r0, lsl #20
    30c8:	5d180305 	ldcpl	3, cr0, [r8, #-20]	; 0xffffffec
    30cc:	19001000 	stmdbne	r0, {ip}
    30d0:	10001d9c 	mulne	r0, ip, sp
    30d4:	00000a14 	andeq	r0, r0, r4, lsl sl
    30d8:	00000667 	andeq	r0, r0, r7, ror #12
    30dc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    30e0:	005d2c03 	subseq	r2, sp, r3, lsl #24
    30e4:	a4190010 	ldrge	r0, [r9], #-16
    30e8:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    30ec:	7e00000a 	cdpvc	0, 0, cr0, cr0, cr10, {0}
    30f0:	1a000006 	bne	3110 <__HEAP_SIZE+0x2110>
    30f4:	03055001 	movweq	r5, #20481	; 0x5001
    30f8:	10005d40 	andne	r5, r0, r0, asr #26
    30fc:	1dac1900 			; <UNDEFINED> instruction: 0x1dac1900
    3100:	0a141000 	beq	507108 <__RAM_SIZE+0x407108>
    3104:	06950000 	ldreq	r0, [r5], r0
    3108:	011a0000 	tsteq	sl, r0
    310c:	54030550 	strpl	r0, [r3], #-1360	; 0xfffffab0
    3110:	0010005d 	andseq	r0, r0, sp, asr r0
    3114:	001db419 	andseq	fp, sp, r9, lsl r4
    3118:	000a1410 	andeq	r1, sl, r0, lsl r4
    311c:	0006ac00 	andeq	sl, r6, r0, lsl #24
    3120:	50011a00 	andpl	r1, r1, r0, lsl #20
    3124:	5d680305 	stclpl	3, cr0, [r8, #-20]!	; 0xffffffec
    3128:	19001000 	stmdbne	r0, {ip}
    312c:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    3130:	00000a14 	andeq	r0, r0, r4, lsl sl
    3134:	000006c3 	andeq	r0, r0, r3, asr #13
    3138:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    313c:	005d7c03 	subseq	r7, sp, r3, lsl #24
    3140:	c4190010 	ldrgt	r0, [r9], #-16
    3144:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    3148:	da00000a 	ble	3178 <__HEAP_SIZE+0x2178>
    314c:	1a000006 	bne	316c <__HEAP_SIZE+0x216c>
    3150:	03055001 	movweq	r5, #20481	; 0x5001
    3154:	10005d90 	mulne	r0, r0, sp
    3158:	1dca1900 	vstrne.16	s3, [sl]	; <UNPREDICTABLE>
    315c:	0a071000 	beq	1c7164 <__RAM_SIZE+0xc7164>
    3160:	06ee0000 	strbteq	r0, [lr], r0
    3164:	011a0000 	tsteq	sl, r0
    3168:	00770250 	rsbseq	r0, r7, r0, asr r2
    316c:	1dd01900 	vldrne.16	s3, [r0]	; <UNPREDICTABLE>
    3170:	08381000 	ldmdaeq	r8!, {ip}
    3174:	07020000 	streq	r0, [r2, -r0]
    3178:	011a0000 	tsteq	sl, r0
    317c:	00760250 	rsbseq	r0, r6, r0, asr r2
    3180:	1dd61900 	vldrne.16	s3, [r6]	; <UNPREDICTABLE>
    3184:	07c01000 	strbeq	r1, [r0, r0]
    3188:	07160000 	ldreq	r0, [r6, -r0]
    318c:	011a0000 	tsteq	sl, r0
    3190:	00760250 	rsbseq	r0, r6, r0, asr r2
    3194:	1de81d00 	stclne	13, cr1, [r8]
    3198:	07361000 	ldreq	r1, [r6, -r0]!
    319c:	011a0000 	tsteq	sl, r0
    31a0:	70030550 	andvc	r0, r3, r0, asr r5
    31a4:	1a380084 	bne	e033bc <__RAM_SIZE+0xd033bc>
    31a8:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    31ac:	52011a40 	andpl	r1, r1, #64, 20	; 0x40000
    31b0:	00c07503 	sbceq	r7, r0, r3, lsl #10
    31b4:	1df01900 			; <UNDEFINED> instruction: 0x1df01900
    31b8:	0a141000 	beq	5071c0 <__RAM_SIZE+0x4071c0>
    31bc:	074d0000 	strbeq	r0, [sp, -r0]
    31c0:	011a0000 	tsteq	sl, r0
    31c4:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    31c8:	0010005d 	andseq	r0, r0, sp, asr r0
    31cc:	001dfa19 	andseq	pc, sp, r9, lsl sl	; <UNPREDICTABLE>
    31d0:	000a1410 	andeq	r1, sl, r0, lsl r4
    31d4:	00076400 	andeq	r6, r7, r0, lsl #8
    31d8:	50011a00 	andpl	r1, r1, r0, lsl #20
    31dc:	5ac00305 	bpl	ff003df8 <__StackTop+0xc6f03df8>
    31e0:	1d001000 	stcne	0, cr1, [r0, #-0]
    31e4:	10001e0c 	andne	r1, r0, ip, lsl #28
    31e8:	00000788 	andeq	r0, r0, r8, lsl #15
    31ec:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    31f0:	00847003 	addeq	r7, r4, r3
    31f4:	51011a38 	tstpl	r1, r8, lsr sl
    31f8:	1a400802 	bne	1005208 <__RAM_SIZE+0xf05208>
    31fc:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    3200:	53011a00 	movwpl	r1, #6656	; 0x1a00
    3204:	19003001 	stmdbne	r0, {r0, ip, sp}
    3208:	10001e1c 	andne	r1, r0, ip, lsl lr
    320c:	00000a14 	andeq	r0, r0, r4, lsl sl
    3210:	0000079f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    3214:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3218:	005ac003 	subseq	ip, sl, r3
    321c:	281e0010 	ldmdacs	lr, {r4}
    3220:	0710001e 			; <UNDEFINED> instruction: 0x0710001e
    3224:	1a00000a 	bne	3254 <__HEAP_SIZE+0x2254>
    3228:	77025001 	strvc	r5, [r2, -r1]
    322c:	1f000000 	svcne	0x00000000
    3230:	00000080 	andeq	r0, r0, r0, lsl #1
    3234:	000007c0 	andeq	r0, r0, r0, asr #15
    3238:	00008020 	andeq	r8, r0, r0, lsr #32
    323c:	21003f00 	tstcs	r0, r0, lsl #30
    3240:	00000799 	muleq	r0, r9, r7
    3244:	010da401 	tsteq	sp, r1, lsl #8
    3248:	00000831 	andeq	r0, r0, r1, lsr r8
    324c:	10001c90 	mulne	r0, r0, ip
    3250:	10001c98 	mulne	r0, r8, ip
    3254:	00002ba4 	andeq	r2, r0, r4, lsr #23
    3258:	00083101 	andeq	r3, r8, r1, lsl #2
    325c:	07b41600 	ldreq	r1, [r4, r0, lsl #12]!
    3260:	a4010000 	strge	r0, [r1], #-0
    3264:	0000802a 	andeq	r8, r0, sl, lsr #32
    3268:	002bc800 	eoreq	ip, fp, r0, lsl #16
    326c:	002bc400 	eoreq	ip, fp, r0, lsl #8
    3270:	08361700 	ldmdaeq	r6!, {r8, r9, sl, ip}
    3274:	a5010000 	strge	r0, [r1, #-0]
    3278:	0008310a 	andeq	r3, r8, sl, lsl #2
    327c:	002bed00 	eoreq	lr, fp, r0, lsl #26
    3280:	002be900 	eoreq	lr, fp, r0, lsl #18
    3284:	19012200 	stmdbne	r1, {r9, sp}
    3288:	01000009 	tsteq	r0, r9
    328c:	310111a7 	smlatbcc	r1, r7, r1, r1
    3290:	01000008 	tsteq	r0, r8
    3294:	0000081f 	andeq	r0, r0, pc, lsl r8
    3298:	0000800b 	andeq	r8, r0, fp
    329c:	961e0000 	ldrls	r0, [lr], -r0
    32a0:	2210001c 	andscs	r0, r0, #28
    32a4:	1a00000a 	bne	32d4 <__HEAP_SIZE+0x22d4>
    32a8:	f3035001 	vhadd.u8	d5, d3, d1
    32ac:	00005001 	andeq	r5, r0, r1
    32b0:	78020102 	stmdavc	r2, {r1, r8}
    32b4:	23000006 	movwcs	r0, #6
    32b8:	000007af 	andeq	r0, r0, pc, lsr #15
    32bc:	010d9c01 	tsteq	sp, r1, lsl #24
    32c0:	10001c78 	andne	r1, r0, r8, ror ip
    32c4:	10001c90 	mulne	r0, r0, ip
    32c8:	00002c0c 	andeq	r2, r0, ip, lsl #24
    32cc:	0008a901 	andeq	sl, r8, r1, lsl #18
    32d0:	07b41600 	ldreq	r1, [r4, r0, lsl #12]!
    32d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    32d8:	0000802a 	andeq	r8, r0, sl, lsr #32
    32dc:	002c3400 	eoreq	r3, ip, r0, lsl #8
    32e0:	002c2c00 	eoreq	r2, ip, r0, lsl #24
    32e4:	a9012400 	stmdbge	r1, {sl, sp}
    32e8:	01000007 	tsteq	r0, r7
    32ec:	0101119f 			; <UNDEFINED> instruction: 0x0101119f
    32f0:	0000087b 	andeq	r0, r0, fp, ror r8
    32f4:	0000800b 	andeq	r8, r0, fp
    32f8:	84190000 	ldrhi	r0, [r9], #-0
    32fc:	1410001c 	ldrne	r0, [r0], #-28	; 0xffffffe4
    3300:	9800000a 	stmdals	r0, {r1, r3}
    3304:	1a000008 	bne	332c <__HEAP_SIZE+0x232c>
    3308:	03055001 	movweq	r5, #20481	; 0x5001
    330c:	10005bb0 			; <UNDEFINED> instruction: 0x10005bb0
    3310:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    3314:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    3318:	10001c8a 	andne	r1, r0, sl, lsl #25
    331c:	00000a30 	andeq	r0, r0, r0, lsr sl
    3320:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    3324:	00000074 	andeq	r0, r0, r4, ror r0
    3328:	0007bf25 	andeq	fp, r7, r5, lsr #30
    332c:	0d8d0100 	stfeqs	f0, [sp]
    3330:	00083101 	andeq	r3, r8, r1, lsl #2
    3334:	001bc400 	andseq	ip, fp, r0, lsl #8
    3338:	001bfa10 	andseq	pc, fp, r0, lsl sl	; <UNPREDICTABLE>
    333c:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    3340:	00090301 	andeq	r0, r9, r1, lsl #6
    3344:	6e692600 	cdpvs	6, 6, cr2, cr9, cr0, {0}
    3348:	8d010073 	stchi	0, cr0, [r1, #-460]	; 0xfffffe34
    334c:	0000802e 	andeq	r8, r0, lr, lsr #32
    3350:	002c6f00 	eoreq	r6, ip, r0, lsl #30
    3354:	002c6b00 	eoreq	r6, ip, r0, lsl #22
    3358:	086d1700 	stmdaeq	sp!, {r8, r9, sl, ip}^
    335c:	91010000 	mrsls	r0, (UNDEF: 1)
    3360:	0000a60e 	andeq	sl, r0, lr, lsl #12
    3364:	002c9200 	eoreq	r9, ip, r0, lsl #4
    3368:	002c9000 	eoreq	r9, ip, r0
    336c:	08751700 	ldmdaeq	r5!, {r8, r9, sl, ip}^
    3370:	92010000 	andls	r0, r1, #0
    3374:	0000a60e 	andeq	sl, r0, lr, lsl #12
    3378:	002cb900 	eoreq	fp, ip, r0, lsl #18
    337c:	002ca500 	eoreq	sl, ip, r0, lsl #10
    3380:	1c210000 	stcne	0, cr0, [r1], #-0
    3384:	01000008 	tsteq	r0, r8
    3388:	80011582 	andhi	r1, r1, r2, lsl #11
    338c:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    3390:	c410001b 	ldrgt	r0, [r0], #-27	; 0xffffffe5
    3394:	5c10001b 	ldcpl	0, cr0, [r0], {27}
    3398:	0100002d 	tsteq	r0, sp, lsr #32
    339c:	00000974 	andeq	r0, r0, r4, ror r9
    33a0:	00637026 	rsbeq	r7, r3, r6, lsr #32
    33a4:	80348201 	eorshi	r8, r4, r1, lsl #4
    33a8:	8c000000 	stchi	0, cr0, [r0], {-0}
    33ac:	8800002d 	stmdahi	r0, {r0, r2, r3, r5}
    33b0:	0d00002d 	stceq	0, cr0, [r0, #-180]	; 0xffffff4c
    33b4:	0000056f 	andeq	r0, r0, pc, ror #10
    33b8:	740e8301 	strvc	r8, [lr], #-769	; 0xfffffcff
    33bc:	02000009 	andeq	r0, r0, #9
    33c0:	27177c91 			; <UNDEFINED> instruction: 0x27177c91
    33c4:	01000008 	tsteq	r0, r8
    33c8:	00801284 	addeq	r1, r0, r4, lsl #5
    33cc:	2db30000 	ldccs	0, cr0, [r3]
    33d0:	2dad0000 	stccs	0, cr0, [sp]
    33d4:	9e270000 	cdpls	0, 2, cr0, cr7, cr0, {0}
    33d8:	b410001b 	ldrlt	r0, [r0], #-27	; 0xffffffe5
    33dc:	1810001b 	ldmdane	r0, {r0, r1, r3, r4}
    33e0:	85010069 	strhi	r0, [r1, #-105]	; 0xffffff97
    33e4:	0000790e 	andeq	r7, r0, lr, lsl #18
    33e8:	002de800 	eoreq	lr, sp, r0, lsl #16
    33ec:	002de400 	eoreq	lr, sp, r0, lsl #8
    33f0:	1f000000 	svcne	0x00000000
    33f4:	000000a6 	andeq	r0, r0, r6, lsr #1
    33f8:	00000984 	andeq	r0, r0, r4, lsl #19
    33fc:	00008020 	andeq	r8, r0, r0, lsr #32
    3400:	1c000100 	stfnes	f0, [r0], {-0}
    3404:	0002bf01 	andeq	fp, r2, r1, lsl #30
    3408:	06770100 	ldrbteq	r0, [r7], -r0, lsl #2
    340c:	001c9801 	andseq	r9, ip, r1, lsl #16
    3410:	001ce810 	andseq	lr, ip, r0, lsl r8
    3414:	002e0710 	eoreq	r0, lr, r0, lsl r7
    3418:	09e60100 	stmibeq	r6!, {r8}^
    341c:	ae190000 	cdpge	0, 1, cr0, cr9, cr0, {0}
    3420:	1410001c 	ldrne	r0, [r0], #-28	; 0xffffffe4
    3424:	b600000a 	strlt	r0, [r0], -sl
    3428:	1a000009 	bne	3454 <__HEAP_SIZE+0x2454>
    342c:	03055001 	movweq	r5, #20481	; 0x5001
    3430:	10005bc8 	andne	r5, r0, r8, asr #23
    3434:	1cba1900 			; <UNDEFINED> instruction: 0x1cba1900
    3438:	0a141000 	beq	507440 <__RAM_SIZE+0x407440>
    343c:	09cd0000 	stmibeq	sp, {}^	; <UNPREDICTABLE>
    3440:	011a0000 	tsteq	sl, r0
    3444:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    3448:	0010005b 	andseq	r0, r0, fp, asr r0
    344c:	001cc21e 	andseq	ip, ip, lr, lsl r2
    3450:	000a1410 	andeq	r1, sl, r0, lsl r4
    3454:	50011a00 	andpl	r1, r1, r0, lsl #20
    3458:	5c100305 	ldcpl	3, cr0, [r0], {5}
    345c:	011a1000 	tsteq	sl, r0
    3460:	00310151 	eorseq	r0, r1, r1, asr r1
    3464:	09592800 	ldmdbeq	r9, {fp, sp}^
    3468:	63020000 	movwvs	r0, #8192	; 0x2000
    346c:	b2011f04 	andlt	r1, r1, #4, 30
    3470:	03000000 	movweq	r0, #0
    3474:	00000a07 	andeq	r0, r0, r7, lsl #20
    3478:	00083629 	andeq	r3, r8, r9, lsr #12
    347c:	04650200 	strbteq	r0, [r5], #-512	; 0xfffffe00
    3480:	0000b20c 	andeq	fp, r0, ip, lsl #4
    3484:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    3488:	0000a501 	andeq	sl, r0, r1, lsl #10
    348c:	00009b00 	andeq	r9, r0, r0, lsl #22
    3490:	2b000800 	blcs	5498 <__HEAP_SIZE+0x4498>
    3494:	05ec0101 	strbeq	r0, [ip, #257]!	; 0x101
    3498:	05ec0000 	strbeq	r0, [ip, #0]!
    349c:	c8070000 	stmdagt	r7, {}	; <UNPREDICTABLE>
    34a0:	01012b05 	tsteq	r1, r5, lsl #22
    34a4:	00000919 	andeq	r0, r0, r9, lsl r9
    34a8:	00000919 	andeq	r0, r0, r9, lsl r9
    34ac:	2b11a701 	blcs	46d0b8 <__RAM_SIZE+0x36d0b8>
    34b0:	07a90101 	streq	r0, [r9, r1, lsl #2]!
    34b4:	07a90000 	streq	r0, [r9, r0]!
    34b8:	9f010000 	svcls	0x00010000
    34bc:	07a20011 			; <UNDEFINED> instruction: 0x07a20011
    34c0:	00020000 	andeq	r0, r2, r0
    34c4:	00000aec 	andeq	r0, r0, ip, ror #21
    34c8:	00dc0104 	sbcseq	r0, ip, r4, lsl #2
    34cc:	820c0000 	andhi	r0, ip, #0
    34d0:	c5000009 	strgt	r0, [r0, #-9]
    34d4:	88000001 	stmdahi	r0, {r0}
    34d8:	00000002 	andeq	r0, r0, r2
    34dc:	00000000 	andeq	r0, r0, r0
    34e0:	15000000 	strne	r0, [r0, #-0]
    34e4:	02000022 	andeq	r0, r0, #34	; 0x22
    34e8:	00ac0601 	adceq	r0, ip, r1, lsl #12
    34ec:	00030000 	andeq	r0, r3, r0
    34f0:	02000000 	andeq	r0, r0, #0
    34f4:	003c182b 	eorseq	r1, ip, fp, lsr #16
    34f8:	01020000 	mrseq	r0, (UNDEF: 2)
    34fc:	0000aa08 	andeq	sl, r0, r8, lsl #20
    3500:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    3504:	000002de 	ldrdeq	r0, [r0], -lr
    3508:	c9070202 	stmdbgt	r7, {r1, r9}
    350c:	02000000 	andeq	r0, r0, #0
    3510:	02930504 	addseq	r0, r3, #4, 10	; 0x1000000
    3514:	b6030000 	strlt	r0, [r3], -r0
    3518:	02000003 	andeq	r0, r0, #3
    351c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    3520:	04020000 	streq	r0, [r2], #-0
    3524:	00023507 	andeq	r3, r2, r7, lsl #10
    3528:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    352c:	0000028e 	andeq	r0, r0, lr, lsl #5
    3530:	30070802 	andcc	r0, r7, r2, lsl #16
    3534:	04000002 	streq	r0, [r0], #-2
    3538:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    353c:	79050074 	stmdbvc	r5, {r2, r4, r5, r6}
    3540:	02000000 	andeq	r0, r0, #0
    3544:	023a0704 	eorseq	r0, sl, #4, 14	; 0x100000
    3548:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    354c:	00028204 	andeq	r8, r2, r4, lsl #4
    3550:	08010200 	stmdaeq	r1, {r9}
    3554:	000000b3 	strheq	r0, [r0], -r3
    3558:	00000203 	andeq	r0, r0, r3, lsl #4
    355c:	13180300 	tstne	r8, #0, 6
    3560:	00000030 	andeq	r0, r0, r0, lsr r0
    3564:	00009a05 	andeq	r9, r0, r5, lsl #20
    3568:	03b80300 			; <UNDEFINED> instruction: 0x03b80300
    356c:	30030000 	andcc	r0, r3, r0
    3570:	00005814 	andeq	r5, r0, r4, lsl r8
    3574:	00ab0500 	adceq	r0, fp, r0, lsl #10
    3578:	b7060000 	strlt	r0, [r6, -r0]
    357c:	07000000 	streq	r0, [r0, -r0]
    3580:	f804027c 			; <UNDEFINED> instruction: 0xf804027c
    3584:	03c60901 	biceq	r0, r6, #16384	; 0x4000
    3588:	70080000 	andvc	r0, r8, r0
    358c:	04000003 	streq	r0, [r0], #-3
    3590:	bc1201fa 	ldflts	f0, [r2], {250}	; 0xfa
    3594:	02000000 	andeq	r0, r0, #0
    3598:	0c080023 	stceq	0, cr0, [r8], {35}	; 0x23
    359c:	04000004 	streq	r0, [r0], #-4
    35a0:	b71201fb 			; <UNDEFINED> instruction: 0xb71201fb
    35a4:	02000000 	andeq	r0, r0, #0
    35a8:	02080423 	andeq	r0, r8, #587202560	; 0x23000000
    35ac:	04000004 	streq	r0, [r0], #-4
    35b0:	b71201fc 			; <UNDEFINED> instruction: 0xb71201fc
    35b4:	02000000 	andeq	r0, r0, #0
    35b8:	11080823 	tstne	r8, r3, lsr #16
    35bc:	04000004 	streq	r0, [r0], #-4
    35c0:	b71201fd 			; <UNDEFINED> instruction: 0xb71201fd
    35c4:	02000000 	andeq	r0, r0, #0
    35c8:	53090c23 	movwpl	r0, #39971	; 0x9c23
    35cc:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    35d0:	b71201fe 			; <UNDEFINED> instruction: 0xb71201fe
    35d4:	02000000 	andeq	r0, r0, #0
    35d8:	43091023 	movwmi	r1, #36899	; 0x9023
    35dc:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    35e0:	b71201ff 			; <UNDEFINED> instruction: 0xb71201ff
    35e4:	02000000 	andeq	r0, r0, #0
    35e8:	b0081423 	andlt	r1, r8, r3, lsr #8
    35ec:	04000004 	streq	r0, [r0], #-4
    35f0:	d6120200 	ldrle	r0, [r2], -r0, lsl #4
    35f4:	02000003 	andeq	r0, r0, #3
    35f8:	83081823 	movwhi	r1, #34851	; 0x8823
    35fc:	04000004 	streq	r0, [r0], #-4
    3600:	b7120201 	ldrlt	r0, [r2, -r1, lsl #4]
    3604:	02000000 	andeq	r0, r0, #0
    3608:	29082423 	stmdbcs	r8, {r0, r1, r5, sl, sp}
    360c:	04000004 	streq	r0, [r0], #-4
    3610:	b7120202 	ldrlt	r0, [r2, -r2, lsl #4]
    3614:	02000000 	andeq	r0, r0, #0
    3618:	dc082823 	stcle	8, cr2, [r8], {35}	; 0x23
    361c:	04000004 	streq	r0, [r0], #-4
    3620:	b7120203 	ldrlt	r0, [r2, -r3, lsl #4]
    3624:	02000000 	andeq	r0, r0, #0
    3628:	17082c23 	strne	r2, [r8, -r3, lsr #24]
    362c:	04000004 	streq	r0, [r0], #-4
    3630:	b7120204 	ldrlt	r0, [r2, -r4, lsl #4]
    3634:	02000000 	andeq	r0, r0, #0
    3638:	1c083023 	stcne	0, cr3, [r8], {35}	; 0x23
    363c:	04000004 	streq	r0, [r0], #-4
    3640:	b7120205 	ldrlt	r0, [r2, -r5, lsl #4]
    3644:	02000000 	andeq	r0, r0, #0
    3648:	b1083423 	tstlt	r8, r3, lsr #8
    364c:	04000003 	streq	r0, [r0], #-3
    3650:	b7120206 	ldrlt	r0, [r2, -r6, lsl #4]
    3654:	02000000 	andeq	r0, r0, #0
    3658:	a0083823 	andge	r3, r8, r3, lsr #16
    365c:	04000004 	streq	r0, [r0], #-4
    3660:	b7120207 	ldrlt	r0, [r2, -r7, lsl #4]
    3664:	02000000 	andeq	r0, r0, #0
    3668:	7d083c23 	stcvc	12, cr3, [r8, #-140]	; 0xffffff74
    366c:	04000003 	streq	r0, [r0], #-3
    3670:	f0120208 			; <UNDEFINED> instruction: 0xf0120208
    3674:	02000003 	andeq	r0, r0, #3
    3678:	ca084023 	bgt	21370c <__RAM_SIZE+0x11370c>
    367c:	04000003 	streq	r0, [r0], #-3
    3680:	bc120209 	lfmlt	f0, 4, [r2], {9}
    3684:	02000000 	andeq	r0, r0, #0
    3688:	c7084823 	strgt	r4, [r8, -r3, lsr #16]
    368c:	04000004 	streq	r0, [r0], #-4
    3690:	bc12020a 	lfmlt	f0, 4, [r2], {10}
    3694:	02000000 	andeq	r0, r0, #0
    3698:	a1084c23 	tstge	r8, r3, lsr #24
    369c:	04000003 	streq	r0, [r0], #-3
    36a0:	0a12020b 	beq	483ed4 <__RAM_SIZE+0x383ed4>
    36a4:	02000004 	andeq	r0, r0, #4
    36a8:	ce085023 	cdpgt	0, 0, cr5, cr8, cr3, {1}
    36ac:	04000004 	streq	r0, [r0], #-4
    36b0:	2412020c 	ldrcs	r0, [r2], #-524	; 0xfffffdf4
    36b4:	02000004 	andeq	r0, r0, #4
    36b8:	6a086023 	bvs	21b74c <__RAM_SIZE+0x11b74c>
    36bc:	04000003 	streq	r0, [r0], #-3
    36c0:	bc12020d 	lfmlt	f0, 4, [r2], {13}
    36c4:	02000000 	andeq	r0, r0, #0
    36c8:	43097823 	movwmi	r7, #38947	; 0x9823
    36cc:	04005254 	streq	r5, [r0], #-596	; 0xfffffdac
    36d0:	bc12020e 	lfmlt	f0, 4, [r2], {14}
    36d4:	02000000 	andeq	r0, r0, #0
    36d8:	22087c23 	andcs	r7, r8, #8960	; 0x2300
    36dc:	04000004 	streq	r0, [r0], #-4
    36e0:	bc12020f 	lfmlt	f0, 4, [r2], {15}
    36e4:	03000000 	movweq	r0, #0
    36e8:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    36ec:	000003d9 	ldrdeq	r0, [r0], -r9
    36f0:	12021004 	andne	r1, r2, #4
    36f4:	000000b7 	strheq	r0, [r0], -r7
    36f8:	01842303 	orreq	r2, r4, r3, lsl #6
    36fc:	0004d608 	andeq	sp, r4, r8, lsl #12
    3700:	02110400 	andseq	r0, r1, #0, 8
    3704:	0000b712 	andeq	fp, r0, r2, lsl r7
    3708:	88230300 	stmdahi	r3!, {r8, r9}
    370c:	042e0801 	strteq	r0, [lr], #-2049	; 0xfffff7ff
    3710:	12040000 	andne	r0, r4, #0
    3714:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3718:	23030000 	movwcs	r0, #12288	; 0x3000
    371c:	6e08018c 	adfvs<illegal precision>	f0, f0, #4.0
    3720:	04000004 	streq	r0, [r0], #-4
    3724:	29120213 	ldmdbcs	r2, {r0, r1, r4, r9}
    3728:	03000004 	movweq	r0, #4
    372c:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    3730:	000004a5 	andeq	r0, r0, r5, lsr #9
    3734:	12021404 	andne	r1, r2, #4, 8	; 0x4000000
    3738:	000000b7 	strheq	r0, [r0], -r7
    373c:	01e42303 	mvneq	r2, r3, lsl #6
    3740:	00040708 	andeq	r0, r4, r8, lsl #14
    3744:	02150400 	andseq	r0, r5, #0, 8
    3748:	0000b712 	andeq	fp, r0, r2, lsl r7
    374c:	e8230300 	stmda	r3!, {r8, r9}
    3750:	04460801 	strbeq	r0, [r6], #-2049	; 0xfffff7ff
    3754:	16040000 	strne	r0, [r4], -r0
    3758:	04391202 	ldrteq	r1, [r9], #-514	; 0xfffffdfe
    375c:	23030000 	movwcs	r0, #12288	; 0x3000
    3760:	5d0801ec 	stfpls	f0, [r8, #-944]	; 0xfffffc50
    3764:	04000003 	streq	r0, [r0], #-3
    3768:	b7120217 			; <UNDEFINED> instruction: 0xb7120217
    376c:	03000000 	movweq	r0, #0
    3770:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
    3774:	00000450 	andeq	r0, r0, r0, asr r4
    3778:	12021804 	andne	r1, r2, #4, 16	; 0x40000
    377c:	00000449 	andeq	r0, r0, r9, asr #8
    3780:	04842303 	streq	r2, [r4], #771	; 0x303
    3784:	00043408 	andeq	r3, r4, r8, lsl #8
    3788:	02190400 	andseq	r0, r9, #0, 8
    378c:	0000bc12 	andeq	fp, r0, r2, lsl ip
    3790:	c0230300 	eorgt	r0, r3, r0, lsl #6
    3794:	043a0804 	ldrteq	r0, [sl], #-2052	; 0xfffff7fc
    3798:	1a040000 	bne	1037a0 <__RAM_SIZE+0x37a0>
    379c:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    37a0:	23030000 	movwcs	r0, #12288	; 0x3000
    37a4:	400804c4 	andmi	r0, r8, r4, asr #9
    37a8:	04000004 	streq	r0, [r0], #-4
    37ac:	bc12021b 	lfmlt	f0, 4, [r2], {27}
    37b0:	03000000 	movweq	r0, #0
    37b4:	0804c823 	stmdaeq	r4, {r0, r1, r5, fp, lr, pc}
    37b8:	0000045a 	andeq	r0, r0, sl, asr r4
    37bc:	12021c04 	andne	r1, r2, #4, 24	; 0x400
    37c0:	00000459 	andeq	r0, r0, r9, asr r4
    37c4:	04cc2303 	strbeq	r2, [ip], #771	; 0x303
    37c8:	0003a908 	andeq	sl, r3, r8, lsl #18
    37cc:	021d0400 	andseq	r0, sp, #0, 8
    37d0:	0000b712 	andeq	fp, r0, r2, lsl r7
    37d4:	d0230300 	eorle	r0, r3, r0, lsl #6
    37d8:	04640804 	strbteq	r0, [r4], #-2052	; 0xfffff7fc
    37dc:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    37e0:	04591202 	ldrbeq	r1, [r9], #-514	; 0xfffffdfe
    37e4:	23030000 	movwcs	r0, #12288	; 0x3000
    37e8:	920804d4 	andls	r0, r8, #212, 8	; 0xd4000000
    37ec:	04000004 	streq	r0, [r0], #-4
    37f0:	b712021f 			; <UNDEFINED> instruction: 0xb712021f
    37f4:	03000000 	movweq	r0, #0
    37f8:	0804d823 	stmdaeq	r4, {r0, r1, r5, fp, ip, lr, pc}
    37fc:	00000362 	andeq	r0, r0, r2, ror #6
    3800:	12022004 	andne	r2, r2, #4
    3804:	000000b7 	strheq	r0, [r0], -r7
    3808:	04dc2303 	ldrbeq	r2, [ip], #771	; 0x303
    380c:	00049a08 	andeq	r9, r4, r8, lsl #20
    3810:	02210400 	eoreq	r0, r1, #0, 8
    3814:	0000b712 	andeq	fp, r0, r2, lsl r7
    3818:	e0230300 	eor	r0, r3, r0, lsl #6
    381c:	03f00804 	mvnseq	r0, #4, 16	; 0x40000
    3820:	22040000 	andcs	r0, r4, #0
    3824:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3828:	23030000 	movwcs	r0, #12288	; 0x3000
    382c:	d10804e4 	smlattle	r8, r4, r4, r0
    3830:	04000003 	streq	r0, [r0], #-3
    3834:	b7120223 	ldrlt	r0, [r2, -r3, lsr #4]
    3838:	03000000 	movweq	r0, #0
    383c:	0804e823 	stmdaeq	r4, {r0, r1, r5, fp, sp, lr, pc}
    3840:	000004aa 	andeq	r0, r0, sl, lsr #9
    3844:	12022404 	andne	r2, r2, #4, 8	; 0x4000000
    3848:	000000b7 	strheq	r0, [r0], -r7
    384c:	04ec2303 	strbteq	r2, [ip], #771	; 0x303
    3850:	00048908 	andeq	r8, r4, r8, lsl #18
    3854:	02250400 	eoreq	r0, r5, #0, 8
    3858:	0000b712 	andeq	fp, r0, r2, lsl r7
    385c:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
    3860:	03840804 	orreq	r0, r4, #4, 16	; 0x40000
    3864:	26040000 	strcs	r0, [r4], -r0
    3868:	00b71202 	adcseq	r1, r7, r2, lsl #4
    386c:	23030000 	movwcs	r0, #12288	; 0x3000
    3870:	760804f4 			; <UNDEFINED> instruction: 0x760804f4
    3874:	04000003 	streq	r0, [r0], #-3
    3878:	b7120227 	ldrlt	r0, [r2, -r7, lsr #4]
    387c:	03000000 	movweq	r0, #0
    3880:	0004f823 	andeq	pc, r4, r3, lsr #16
    3884:	0000a60a 	andeq	sl, r0, sl, lsl #12
    3888:	0003d600 	andeq	sp, r3, r0, lsl #12
    388c:	00850b00 	addeq	r0, r5, r0, lsl #22
    3890:	000b0000 	andeq	r0, fp, r0
    3894:	0003c605 	andeq	ip, r3, r5, lsl #12
    3898:	00bc0a00 	adcseq	r0, ip, r0, lsl #20
    389c:	03eb0000 	mvneq	r0, #0
    38a0:	850b0000 	strhi	r0, [fp, #-0]
    38a4:	01000000 	mrseq	r0, (UNDEF: 0)
    38a8:	03db0600 	bicseq	r0, fp, #0, 12
    38ac:	eb050000 	bl	1438b4 <__RAM_SIZE+0x438b4>
    38b0:	0a000003 	beq	38c4 <__HEAP_SIZE+0x28c4>
    38b4:	000000bc 	strheq	r0, [r0], -ip
    38b8:	00000405 	andeq	r0, r0, r5, lsl #8
    38bc:	0000850b 	andeq	r8, r0, fp, lsl #10
    38c0:	06000300 	streq	r0, [r0], -r0, lsl #6
    38c4:	000003f5 	strdeq	r0, [r0], -r5
    38c8:	00040505 	andeq	r0, r4, r5, lsl #10
    38cc:	00bc0a00 	adcseq	r0, ip, r0, lsl #20
    38d0:	041f0000 	ldreq	r0, [pc], #-0	; 38d8 <__HEAP_SIZE+0x28d8>
    38d4:	850b0000 	strhi	r0, [fp, #-0]
    38d8:	05000000 	streq	r0, [r0, #-0]
    38dc:	040f0600 	streq	r0, [pc], #-1536	; 38e4 <__HEAP_SIZE+0x28e4>
    38e0:	1f050000 	svcne	0x00050000
    38e4:	0a000004 	beq	38fc <__HEAP_SIZE+0x28fc>
    38e8:	000000ab 	andeq	r0, r0, fp, lsr #1
    38ec:	00000439 	andeq	r0, r0, r9, lsr r4
    38f0:	0000850b 	andeq	r8, r0, fp, lsl #10
    38f4:	0a001400 	beq	88fc <__HEAP_SIZE+0x78fc>
    38f8:	000000ab 	andeq	r0, r0, fp, lsr #1
    38fc:	00000449 	andeq	r0, r0, r9, asr #8
    3900:	0000850b 	andeq	r8, r0, fp, lsl #10
    3904:	0a004400 	beq	1490c <__HEAP_SIZE+0x1390c>
    3908:	000000ab 	andeq	r0, r0, fp, lsr #1
    390c:	00000459 	andeq	r0, r0, r9, asr r4
    3910:	0000850b 	andeq	r8, r0, fp, lsl #10
    3914:	0a000e00 	beq	711c <__HEAP_SIZE+0x611c>
    3918:	000000ab 	andeq	r0, r0, fp, lsr #1
    391c:	00000469 	andeq	r0, r0, r9, ror #8
    3920:	0000850b 	andeq	r8, r0, fp, lsl #10
    3924:	0c000000 	stceq	0, cr0, [r0], {-0}
    3928:	000003c1 	andeq	r0, r0, r1, asr #7
    392c:	03022804 	movweq	r2, #10244	; 0x2804
    3930:	000000c1 	andeq	r0, r0, r1, asr #1
    3934:	02ac010d 	adceq	r0, ip, #1073741827	; 0x40000003
    3938:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    393c:	1fc40106 	svcne	0x00c40106
    3940:	20101000 	andscs	r1, r0, r0
    3944:	2e271000 	cdpcs	0, 2, cr1, cr7, cr0, {0}
    3948:	fd010000 	stc2	0, cr0, [r1, #-0]
    394c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    3950:	0000097d 	andeq	r0, r0, sp, ror r9
    3954:	fd134901 	ldc2	9, cr4, [r3, #-2]	; <UNPREDICTABLE>
    3958:	65000004 	strvs	r0, [r0, #-4]
    395c:	5f00002e 	svcpl	0x0000002e
    3960:	0f00002e 	svceq	0x0000002e
    3964:	0000056f 	andeq	r0, r0, pc, ror #10
    3968:	80124a01 	andshi	r4, r2, r1, lsl #20
    396c:	02000000 	andeq	r0, r0, #0
    3970:	e6106c91 			; <UNDEFINED> instruction: 0xe6106c91
    3974:	8a10001f 	bhi	4039f8 <__RAM_SIZE+0x3039f8>
    3978:	ce000007 	cdpgt	0, 0, cr0, cr0, cr7, {0}
    397c:	11000004 	tstne	r0, r4
    3980:	75025001 	strvc	r5, [r2, #-1]
    3984:	51011100 	mrspl	r1, (UNDEF: 17)
    3988:	00007402 	andeq	r7, r0, r2, lsl #8
    398c:	001ff410 	andseq	pc, pc, r0, lsl r4	; <UNPREDICTABLE>
    3990:	00078a10 	andeq	r8, r7, r0, lsl sl
    3994:	0004e700 	andeq	lr, r4, r0, lsl #14
    3998:	50011100 	andpl	r1, r1, r0, lsl #2
    399c:	11007502 	tstne	r0, r2, lsl #10
    39a0:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
    39a4:	20041200 	andcs	r1, r4, r0, lsl #4
    39a8:	078a1000 	streq	r1, [sl, r0]
    39ac:	01110000 	tsteq	r1, r0
    39b0:	00750250 	rsbseq	r0, r5, r0, asr r2
    39b4:	01510111 	cmpeq	r1, r1, lsl r1
    39b8:	13000033 	movwne	r0, #51	; 0x33
    39bc:	00008004 	andeq	r8, r0, r4
    39c0:	ba010d00 	blt	46dc8 <__HEAP_SIZE+0x45dc8>
    39c4:	01000009 	tsteq	r0, r9
    39c8:	00010640 	andeq	r0, r1, r0, asr #12
    39cc:	00000000 	andeq	r0, r0, r0
    39d0:	91000000 	mrsls	r0, (UNDEF: 0)
    39d4:	0100002e 	tsteq	r0, lr, lsr #32
    39d8:	00000558 	andeq	r0, r0, r8, asr r5
    39dc:	01006114 	tsteq	r0, r4, lsl r1
    39e0:	00790941 	rsbseq	r0, r9, r1, asr #18
    39e4:	14000000 	strne	r0, [r0], #-0
    39e8:	41010062 	tstmi	r1, r2, rrx
    39ec:	00007910 	andeq	r7, r0, r0, lsl r9
    39f0:	63140000 	tstvs	r4, #0
    39f4:	17410100 	strbne	r0, [r1, -r0, lsl #2]
    39f8:	00000079 	andeq	r0, r0, r9, ror r0
    39fc:	00001200 	andeq	r1, r0, r0, lsl #4
    3a00:	078a0000 	streq	r0, [sl, r0]
    3a04:	01110000 	tsteq	r1, r0
    3a08:	00030550 	andeq	r0, r3, r0, asr r5
    3a0c:	11000000 	mrsne	r0, (UNDEF: 0)
    3a10:	30015101 	andcc	r5, r1, r1, lsl #2
    3a14:	01150000 	tsteq	r5, r0
    3a18:	00000919 	andeq	r0, r0, r9, lsl r9
    3a1c:	01063801 	tsteq	r6, r1, lsl #16
    3a20:	0000058b 	andeq	r0, r0, fp, lsl #11
    3a24:	10001fb4 			; <UNDEFINED> instruction: 0x10001fb4
    3a28:	10001fc2 	andne	r1, r0, r2, asr #31
    3a2c:	01007d02 	tsteq	r0, r2, lsl #26
    3a30:	0000058b 	andeq	r0, r0, fp, lsl #11
    3a34:	0007b416 	andeq	fp, r7, r6, lsl r4
    3a38:	28380100 	ldmdacs	r8!, {r8}
    3a3c:	00000085 	andeq	r0, r0, r5, lsl #1
    3a40:	00002eb9 			; <UNDEFINED> instruction: 0x00002eb9
    3a44:	00002eb1 			; <UNDEFINED> instruction: 0x00002eb1
    3a48:	02010200 	andeq	r0, r1, #0, 4
    3a4c:	00000678 	andeq	r0, r0, r8, ror r6
    3a50:	07a9010d 	streq	r0, [r9, sp, lsl #2]!
    3a54:	0f010000 	svceq	0x00010000
    3a58:	1eb80106 	frdnee	f0, f0, f6
    3a5c:	1fb41000 	svcne	0x00b41000
    3a60:	2ef31000 	cdpcs	0, 15, cr1, cr3, cr0, {0}
    3a64:	8a010000 	bhi	43a6c <__HEAP_SIZE+0x42a6c>
    3a68:	16000007 	strne	r0, [r0], -r7
    3a6c:	000007b4 			; <UNDEFINED> instruction: 0x000007b4
    3a70:	85290f01 	strhi	r0, [r9, #-3841]!	; 0xfffff0ff
    3a74:	17000000 	strne	r0, [r0, -r0]
    3a78:	1300002f 	movwne	r0, #47	; 0x2f
    3a7c:	1000002f 	andne	r0, r0, pc, lsr #32
    3a80:	10001ec2 	andne	r1, r0, r2, asr #29
    3a84:	00000798 	muleq	r0, r8, r7
    3a88:	000005d8 	ldrdeq	r0, [r0], -r8
    3a8c:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3a90:	005db403 	subseq	fp, sp, r3, lsl #8
    3a94:	c8100010 	ldmdagt	r0, {r4}
    3a98:	8a10001e 	bhi	403b18 <__RAM_SIZE+0x303b18>
    3a9c:	ef000007 	svc	0x00000007
    3aa0:	11000005 	tstne	r0, r5
    3aa4:	03055001 	movweq	r5, #20481	; 0x5001
    3aa8:	10005db8 			; <UNDEFINED> instruction: 0x10005db8
    3aac:	1ed41000 	cdpne	0, 13, cr1, cr4, cr0, {0}
    3ab0:	07981000 	ldreq	r1, [r8, r0]
    3ab4:	06060000 	streq	r0, [r6], -r0
    3ab8:	01110000 	tsteq	r1, r0
    3abc:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    3ac0:	0010005d 	andseq	r0, r0, sp, asr r0
    3ac4:	001eda10 	andseq	sp, lr, r0, lsl sl
    3ac8:	00078a10 	andeq	r8, r7, r0, lsl sl
    3acc:	00061d00 	andeq	r1, r6, r0, lsl #26
    3ad0:	50011100 	andpl	r1, r1, r0, lsl #2
    3ad4:	5e100305 	cdppl	3, 1, cr0, cr0, cr5, {0}
    3ad8:	10001000 	andne	r1, r0, r0
    3adc:	10001ee6 	andne	r1, r0, r6, ror #29
    3ae0:	00000798 	muleq	r0, r8, r7
    3ae4:	00000634 	andeq	r0, r0, r4, lsr r6
    3ae8:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3aec:	005e3003 	subseq	r3, lr, r3
    3af0:	ec100010 	ldc	0, cr0, [r0], {16}
    3af4:	8a10001e 	bhi	403b74 <__RAM_SIZE+0x303b74>
    3af8:	4b000007 	blmi	3b1c <__HEAP_SIZE+0x2b1c>
    3afc:	11000006 	tstne	r0, r6
    3b00:	03055001 	movweq	r5, #20481	; 0x5001
    3b04:	10005e68 	andne	r5, r0, r8, ror #28
    3b08:	1ef81000 	cdpne	0, 15, cr1, cr8, cr0, {0}
    3b0c:	07981000 	ldreq	r1, [r8, r0]
    3b10:	06620000 	strbteq	r0, [r2], -r0
    3b14:	01110000 	tsteq	r1, r0
    3b18:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
    3b1c:	0010005e 	andseq	r0, r0, lr, asr r0
    3b20:	001efe10 	andseq	pc, lr, r0, lsl lr	; <UNPREDICTABLE>
    3b24:	00078a10 	andeq	r8, r7, r0, lsl sl
    3b28:	00067900 	andeq	r7, r6, r0, lsl #18
    3b2c:	50011100 	andpl	r1, r1, r0, lsl #2
    3b30:	5ec00305 	cdppl	3, 12, cr0, cr0, cr5, {0}
    3b34:	10001000 	andne	r1, r0, r0
    3b38:	10001f0a 	andne	r1, r0, sl, lsl #30
    3b3c:	00000798 	muleq	r0, r8, r7
    3b40:	00000690 	muleq	r0, r0, r6
    3b44:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3b48:	005ee003 	subseq	lr, lr, r3
    3b4c:	10100010 	andsne	r0, r0, r0, lsl r0
    3b50:	8a10001f 	bhi	403bd4 <__RAM_SIZE+0x303bd4>
    3b54:	a7000007 	strge	r0, [r0, -r7]
    3b58:	11000006 	tstne	r0, r6
    3b5c:	03055001 	movweq	r5, #20481	; 0x5001
    3b60:	10005f18 	andne	r5, r0, r8, lsl pc
    3b64:	1f1c1000 	svcne	0x001c1000
    3b68:	07981000 	ldreq	r1, [r8, r0]
    3b6c:	06be0000 	ldrteq	r0, [lr], r0
    3b70:	01110000 	tsteq	r1, r0
    3b74:	38030550 	stmdacc	r3, {r4, r6, r8, sl}
    3b78:	0010005f 	andseq	r0, r0, pc, asr r0
    3b7c:	001f2210 	andseq	r2, pc, r0, lsl r2	; <UNPREDICTABLE>
    3b80:	00078a10 	andeq	r8, r7, r0, lsl sl
    3b84:	0006d500 	andeq	sp, r6, r0, lsl #10
    3b88:	50011100 	andpl	r1, r1, r0, lsl #2
    3b8c:	5f700305 	svcpl	0x00700305
    3b90:	10001000 	andne	r1, r0, r0
    3b94:	10001f2e 	andne	r1, r0, lr, lsr #30
    3b98:	00000798 	muleq	r0, r8, r7
    3b9c:	000006ec 	andeq	r0, r0, ip, ror #13
    3ba0:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3ba4:	005f9003 	subseq	r9, pc, r3
    3ba8:	34100010 	ldrcc	r0, [r0], #-16
    3bac:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3bb0:	03000007 	movweq	r0, #7
    3bb4:	11000007 	tstne	r0, r7
    3bb8:	03055001 	movweq	r5, #20481	; 0x5001
    3bbc:	10005db4 			; <UNDEFINED> instruction: 0x10005db4
    3bc0:	1f3c1000 	svcne	0x003c1000
    3bc4:	07981000 	ldreq	r1, [r8, r0]
    3bc8:	071a0000 	ldreq	r0, [sl, -r0]
    3bcc:	01110000 	tsteq	r1, r0
    3bd0:	f4030550 	vst3.16	{d0,d2,d4}, [r3 :64], r0
    3bd4:	0010005d 	andseq	r0, r0, sp, asr r0
    3bd8:	001f4410 	andseq	r4, pc, r0, lsl r4	; <UNPREDICTABLE>
    3bdc:	00079810 	andeq	r9, r7, r0, lsl r8
    3be0:	00073100 	andeq	r3, r7, r0, lsl #2
    3be4:	50011100 	andpl	r1, r1, r0, lsl #2
    3be8:	5e4c0305 	cdppl	3, 4, cr0, cr12, cr5, {0}
    3bec:	10001000 	andne	r1, r0, r0
    3bf0:	10001f4c 	andne	r1, r0, ip, asr #30
    3bf4:	00000798 	muleq	r0, r8, r7
    3bf8:	00000748 	andeq	r0, r0, r8, asr #14
    3bfc:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3c00:	005ea403 	subseq	sl, lr, r3, lsl #8
    3c04:	54100010 	ldrpl	r0, [r0], #-16
    3c08:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3c0c:	5f000007 	svcpl	0x00000007
    3c10:	11000007 	tstne	r0, r7
    3c14:	03055001 	movweq	r5, #20481	; 0x5001
    3c18:	10005efc 	strdne	r5, [r0], -ip
    3c1c:	1f5c1000 	svcne	0x005c1000
    3c20:	07981000 	ldreq	r1, [r8, r0]
    3c24:	07760000 	ldrbeq	r0, [r6, -r0]!
    3c28:	01110000 	tsteq	r1, r0
    3c2c:	54030550 	strpl	r0, [r3], #-1360	; 0xfffffab0
    3c30:	0010005f 	andseq	r0, r0, pc, asr r0
    3c34:	001f6412 	andseq	r6, pc, r2, lsl r4	; <UNPREDICTABLE>
    3c38:	00079810 	andeq	r9, r7, r0, lsl r8
    3c3c:	50011100 	andpl	r1, r1, r0, lsl #2
    3c40:	5fac0305 	svcpl	0x00ac0305
    3c44:	00001000 	andeq	r1, r0, r0
    3c48:	ec010117 	stfs	f0, [r1], {23}
    3c4c:	ec000005 	stc	0, cr0, [r0], {5}
    3c50:	05000005 	streq	r0, [r0, #-5]
    3c54:	011805c8 	tsteq	r8, r8, asr #11
    3c58:	0000a501 	andeq	sl, r0, r1, lsl #10
    3c5c:	00009b00 	andeq	r9, r0, r0, lsl #22
    3c60:	00000600 	andeq	r0, r0, r0, lsl #12
    3c64:	0000044a 	andeq	r0, r0, sl, asr #8
    3c68:	0c5e0002 	mrrceq	0, 0, r0, lr, cr2
    3c6c:	01040000 	mrseq	r0, (UNDEF: 4)
    3c70:	000000dc 	ldrdeq	r0, [r0], -ip
    3c74:	000afa0c 	andeq	pc, sl, ip, lsl #20
    3c78:	0001c500 	andeq	ip, r1, r0, lsl #10
    3c7c:	0002b000 	andeq	fp, r2, r0
	...
    3c88:	0024e800 	eoreq	lr, r4, r0, lsl #16
    3c8c:	06010200 	streq	r0, [r1], -r0, lsl #4
    3c90:	000000ac 	andeq	r0, r0, ip, lsr #1
    3c94:	aa080102 	bge	2040a4 <__RAM_SIZE+0x1040a4>
    3c98:	02000000 	andeq	r0, r0, #0
    3c9c:	02de0502 	sbcseq	r0, lr, #8388608	; 0x800000
    3ca0:	02020000 	andeq	r0, r2, #0
    3ca4:	0000c907 	andeq	ip, r0, r7, lsl #18
    3ca8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3cac:	00000293 	muleq	r0, r3, r2
    3cb0:	0003b603 	andeq	fp, r3, r3, lsl #12
    3cb4:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    3cb8:	00000058 	andeq	r0, r0, r8, asr r0
    3cbc:	35070402 	strcc	r0, [r7, #-1026]	; 0xfffffbfe
    3cc0:	02000002 	andeq	r0, r0, #2
    3cc4:	028e0508 	addeq	r0, lr, #8, 10	; 0x2000000
    3cc8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3ccc:	00023007 	andeq	r3, r2, r7
    3cd0:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    3cd4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3cd8:	3a070402 	bcc	1c4ce8 <__RAM_SIZE+0xc4ce8>
    3cdc:	03000002 	movweq	r0, #2
    3ce0:	0000000a 	andeq	r0, r0, sl
    3ce4:	7417d103 	ldrvc	sp, [r7], #-259	; 0xfffffefd
    3ce8:	02000000 	andeq	r0, r0, #0
    3cec:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
    3cf0:	01020000 	mrseq	r0, (UNDEF: 2)
    3cf4:	0000b308 	andeq	fp, r0, r8, lsl #6
    3cf8:	008e0500 	addeq	r0, lr, r0, lsl #10
    3cfc:	04060000 	streq	r0, [r6], #-0
    3d00:	00000095 	muleq	r0, r5, r0
    3d04:	0003b803 	andeq	fp, r3, r3, lsl #16
    3d08:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    3d0c:	0000004c 	andeq	r0, r0, ip, asr #32
    3d10:	00740406 	rsbseq	r0, r4, r6, lsl #8
    3d14:	d1030000 	mrsle	r0, (UNDEF: 3)
    3d18:	0500000a 	streq	r0, [r0, #-10]
    3d1c:	00a01a49 	adceq	r1, r0, r9, asr #20
    3d20:	bd030000 	stclt	0, cr0, [r3, #-0]
    3d24:	0500000a 	streq	r0, [r0, #-10]
    3d28:	00451a4a 	subeq	r1, r5, sl, asr #20
    3d2c:	bc030000 	stclt	0, cr0, [r3], {-0}
    3d30:	0500000a 	streq	r0, [r0, #-10]
    3d34:	00581a4b 	subseq	r1, r8, fp, asr #20
    3d38:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    3d3c:	06000002 	streq	r0, [r0], -r2
    3d40:	00e22e5c 	rsceq	r2, r2, ip, asr lr
    3d44:	04060000 	streq	r0, [r6], #-0
    3d48:	000000e8 	andeq	r0, r0, r8, ror #1
    3d4c:	00020f07 	andeq	r0, r2, r7, lsl #30
    3d50:	07080100 	streq	r0, [r8, -r0, lsl #2]
    3d54:	00003001 	andeq	r3, r0, r1
    3d58:	01670600 	cmneq	r7, r0, lsl #12
    3d5c:	00000121 	andeq	r0, r0, r1, lsr #2
    3d60:	000ac809 	andeq	ip, sl, r9, lsl #16
    3d64:	6b090000 	blvs	243d6c <__RAM_SIZE+0x143d6c>
    3d68:	0100000a 	tsteq	r0, sl
    3d6c:	0009df09 	andeq	sp, r9, r9, lsl #30
    3d70:	dd090200 	sfmle	f0, 4, [r9, #-0]
    3d74:	0300000a 	movweq	r0, #10
    3d78:	0009e809 	andeq	lr, r9, r9, lsl #16
    3d7c:	fc090400 	stc2	4, cr0, [r9], {-0}
    3d80:	05000009 	streq	r0, [r0, #-9]
    3d84:	09f10300 	ldmibeq	r1!, {r8, r9}^
    3d88:	6e060000 	cdpvs	0, 0, cr0, cr6, cr0, {0}
    3d8c:	0000ee03 	andeq	lr, r0, r3, lsl #28
    3d90:	b2040600 	andlt	r0, r4, #0, 12
    3d94:	0a000000 	beq	3d9c <__HEAP_SIZE+0x2d9c>
    3d98:	00000a12 	andeq	r0, r0, r2, lsl sl
    3d9c:	10a0062c 	adcne	r0, r0, ip, lsr #12
    3da0:	000001e6 	andeq	r0, r0, r6, ror #3
    3da4:	0018e70b 	andseq	lr, r8, fp, lsl #14
    3da8:	12a20600 	adcne	r0, r2, #0, 12
    3dac:	000000d6 	ldrdeq	r0, [r0], -r6
    3db0:	0b002302 	bleq	c9c0 <__HEAP_SIZE+0xb9c0>
    3db4:	00000b53 	andeq	r0, r0, r3, asr fp
    3db8:	9a12a306 	bls	4ac9d8 <__RAM_SIZE+0x3ac9d8>
    3dbc:	02000000 	andeq	r0, r0, #0
    3dc0:	6f0b0423 	svcvs	0x000b0423
    3dc4:	0600001f 			; <UNDEFINED> instruction: 0x0600001f
    3dc8:	00ca11a4 	sbceq	r1, sl, r4, lsr #3
    3dcc:	23020000 	movwcs	r0, #8192	; 0x2000
    3dd0:	0a5d0b08 	beq	17469f8 <__RAM_SIZE+0x16469f8>
    3dd4:	a5060000 	strge	r0, [r6, #-0]
    3dd8:	00012110 	andeq	r2, r1, r0, lsl r1
    3ddc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3de0:	000ae80b 	andeq	lr, sl, fp, lsl #16
    3de4:	11a60600 			; <UNDEFINED> instruction: 0x11a60600
    3de8:	000000ca 	andeq	r0, r0, sl, asr #1
    3dec:	0b102302 	bleq	40c9fc <__RAM_SIZE+0x30c9fc>
    3df0:	00000a93 	muleq	r0, r3, sl
    3df4:	ca11a706 	bgt	46da14 <__RAM_SIZE+0x36da14>
    3df8:	02000000 	andeq	r0, r0, #0
    3dfc:	ce0b1423 	cdpgt	4, 0, cr1, cr11, cr3, {1}
    3e00:	06000009 	streq	r0, [r0], -r9
    3e04:	00a021a8 	adceq	r2, r0, r8, lsr #3
    3e08:	23020000 	movwcs	r0, #8192	; 0x2000
    3e0c:	0a510b18 	beq	1446a74 <__RAM_SIZE+0x1346a74>
    3e10:	a9060000 	stmdbge	r6, {}	; <UNPREDICTABLE>
    3e14:	00012d13 	andeq	r2, r1, r3, lsl sp
    3e18:	1c230200 	sfmne	f0, 4, [r3], #-0
    3e1c:	000a050b 	andeq	r0, sl, fp, lsl #10
    3e20:	17ab0600 	strne	r0, [fp, r0, lsl #12]!
    3e24:	0000012d 	andeq	r0, r0, sp, lsr #2
    3e28:	0b202302 	bleq	80ca38 <__RAM_SIZE+0x70ca38>
    3e2c:	00000a44 	andeq	r0, r0, r4, asr #20
    3e30:	2d17ac06 	ldccs	12, cr10, [r7, #-24]	; 0xffffffe8
    3e34:	02000001 	andeq	r0, r0, #1
    3e38:	3e0b2423 	cdpcc	4, 0, cr2, cr11, cr3, {1}
    3e3c:	0600000b 	streq	r0, [r0], -fp
    3e40:	007b1cae 	rsbseq	r1, fp, lr, lsr #25
    3e44:	23020000 	movwcs	r0, #8192	; 0x2000
    3e48:	7a030028 	bvc	c3ef0 <__HEAP_SIZE+0xc2ef0>
    3e4c:	0600000a 	streq	r0, [r0], -sl
    3e50:	013303b2 	teqeq	r3, r2	; <illegal shifter operand>
    3e54:	010c0000 	mrseq	r0, (UNDEF: 12)
    3e58:	0000002b 	andeq	r0, r0, fp, lsr #32
    3e5c:	01052d01 	tsteq	r5, r1, lsl #26
    3e60:	0000006d 	andeq	r0, r0, sp, rrx
    3e64:	10002010 	andne	r2, r0, r0, lsl r0
    3e68:	10002084 	andne	r2, r0, r4, lsl #1
    3e6c:	00002f35 	andeq	r2, r0, r5, lsr pc
    3e70:	00035d01 	andeq	r5, r3, r1, lsl #26
    3e74:	05110d00 	ldreq	r0, [r1, #-3328]	; 0xfffff300
    3e78:	2d010000 	stccs	0, cr0, [r1, #-0]
    3e7c:	0000ac29 	andeq	sl, r0, r9, lsr #24
    3e80:	002f7f00 	eoreq	r7, pc, r0, lsl #30
    3e84:	002f7b00 	eoreq	r7, pc, r0, lsl #22
    3e88:	0a3d0d00 	beq	f47290 <__RAM_SIZE+0xe47290>
    3e8c:	2d010000 	stccs	0, cr0, [r1, #-0]
    3e90:	00007b38 	andeq	r7, r0, r8, lsr fp
    3e94:	002fa100 	eoreq	sl, pc, r0, lsl #2
    3e98:	002f9d00 	eoreq	r9, pc, r0, lsl #26
    3e9c:	030e0d00 	movweq	r0, #60672	; 0xed00
    3ea0:	2d010000 	stccs	0, cr0, [r1, #-0]
    3ea4:	0000ac4e 	andeq	sl, r0, lr, asr #24
    3ea8:	002fc300 	eoreq	ip, pc, r0, lsl #6
    3eac:	002fbf00 	eoreq	fp, pc, r0, lsl #30
    3eb0:	001f0d00 	andseq	r0, pc, r0, lsl #26
    3eb4:	2d010000 	stccs	0, cr0, [r1, #-0]
    3eb8:	0000ac69 	andeq	sl, r0, r9, ror #24
    3ebc:	002fe500 	eoreq	lr, pc, r0, lsl #10
    3ec0:	002fe100 	eoreq	lr, pc, r0, lsl #2
    3ec4:	00410e00 	subeq	r0, r1, r0, lsl #28
    3ec8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3ecc:	00006d09 	andeq	r6, r0, r9, lsl #26
    3ed0:	00300c00 	eorseq	r0, r0, r0, lsl #24
    3ed4:	00300600 	eorseq	r0, r0, r0, lsl #12
    3ed8:	1d0a0f00 	stcne	15, cr0, [sl, #-0]
    3edc:	2f010000 	svccs	0x00010000
    3ee0:	0001e612 	andeq	lr, r1, r2, lsl r6
    3ee4:	44910200 	ldrmi	r0, [r1], #512	; 0x200
    3ee8:	000a870e 	andeq	r8, sl, lr, lsl #14
    3eec:	12300100 	eorsne	r0, r0, #0, 2
    3ef0:	000000d6 	ldrdeq	r0, [r0], -r6
    3ef4:	0000303d 	andeq	r3, r0, sp, lsr r0
    3ef8:	00003037 	andeq	r3, r0, r7, lsr r0
    3efc:	00202410 	eoreq	r2, r0, r0, lsl r4
    3f00:	0003ea10 	andeq	lr, r3, r0, lsl sl
    3f04:	0002b700 	andeq	fp, r2, r0, lsl #14
    3f08:	50011100 	andpl	r1, r1, r0, lsl #2
    3f0c:	11449102 	cmpne	r4, r2, lsl #2
    3f10:	30015101 	andcc	r5, r1, r1, lsl #2
    3f14:	02520111 	subseq	r0, r2, #1073741828	; 0x40000004
    3f18:	12002c08 	andne	r2, r0, #8, 24	; 0x800
    3f1c:	1000202e 	andne	r2, r0, lr, lsr #32
    3f20:	000003f7 	strdeq	r0, [r0], -r7
    3f24:	00203810 	eoreq	r3, r0, r0, lsl r8
    3f28:	00040610 	andeq	r0, r4, r0, lsl r6
    3f2c:	0002de00 	andeq	sp, r2, r0, lsl #28
    3f30:	51011100 	mrspl	r1, (UNDEF: 17)
    3f34:	11449102 	cmpne	r4, r2, lsl #2
    3f38:	31015201 	tstcc	r1, r1, lsl #4
    3f3c:	01530111 	cmpeq	r3, r1, lsl r1
    3f40:	40100035 	andsmi	r0, r0, r5, lsr r0
    3f44:	15100020 	ldrne	r0, [r0, #-32]	; 0xffffffe0
    3f48:	f5000004 			; <UNDEFINED> instruction: 0xf5000004
    3f4c:	11000002 	tstne	r0, r2
    3f50:	03055001 	movweq	r5, #20481	; 0x5001
    3f54:	10005fe4 	andne	r5, r0, r4, ror #31
    3f58:	20481000 	subcs	r1, r8, r0
    3f5c:	04151000 	ldreq	r1, [r5], #-0
    3f60:	03120000 	tsteq	r2, #0
    3f64:	01110000 	tsteq	r1, r0
    3f68:	f8030550 			; <UNDEFINED> instruction: 0xf8030550
    3f6c:	1110005f 	tstne	r0, pc, asr r0
    3f70:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    3f74:	50100000 	andspl	r0, r0, r0
    3f78:	15100020 	ldrne	r0, [r0, #-32]	; 0xffffffe0
    3f7c:	29000004 	stmdbcs	r0, {r2}
    3f80:	11000003 	tstne	r0, r3
    3f84:	03055001 	movweq	r5, #20481	; 0x5001
    3f88:	10006010 	andne	r6, r0, r0, lsl r0
    3f8c:	20581000 	subscs	r1, r8, r0
    3f90:	04151000 	ldreq	r1, [r5], #-0
    3f94:	03400000 	movteq	r0, #0
    3f98:	01110000 	tsteq	r1, r0
    3f9c:	28030550 	stmdacs	r3, {r4, r6, r8, sl}
    3fa0:	00100060 	andseq	r0, r0, r0, rrx
    3fa4:	00206413 	eoreq	r6, r0, r3, lsl r4
    3fa8:	00042310 	andeq	r2, r4, r0, lsl r3
    3fac:	50011100 	andpl	r1, r1, r0, lsl #2
    3fb0:	11007402 	tstne	r0, r2, lsl #8
    3fb4:	76025101 	strvc	r5, [r2], -r1, lsl #2
    3fb8:	52011100 	andpl	r1, r1, #0, 2
    3fbc:	00007502 	andeq	r7, r0, r2, lsl #10
    3fc0:	1f010c00 	svcne	0x00010c00
    3fc4:	0100000a 	tsteq	r0, sl
    3fc8:	6d010512 	cfstr32vs	mvfx0, [r1, #-72]	; 0xffffffb8
	...
    3fd4:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    3fd8:	01000030 	tsteq	r0, r0, lsr r0
    3fdc:	000003ea 	andeq	r0, r0, sl, ror #7
    3fe0:	00030e0d 	andeq	r0, r3, sp, lsl #28
    3fe4:	28120100 	ldmdacs	r2, {r8}
    3fe8:	00000074 	andeq	r0, r0, r4, ror r0
    3fec:	00003094 	muleq	r0, r4, r0
    3ff0:	00003088 	andeq	r3, r0, r8, lsl #1
    3ff4:	00637014 	rsbeq	r7, r3, r4, lsl r0
    3ff8:	74121301 	ldrvc	r1, [r2], #-769	; 0xfffffcff
    3ffc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    4000:	de000030 	mcrle	0, 0, r0, cr0, cr0, {1}
    4004:	14000030 	strne	r0, [r0], #-48	; 0xffffffd0
    4008:	01007073 	tsteq	r0, r3, ror r0
    400c:	00ac1b13 	adceq	r1, ip, r3, lsl fp
    4010:	316f0000 	cmncc	pc, r0
    4014:	315f0000 	cmpcc	pc, r0
    4018:	35150000 	ldrcc	r0, [r5, #-0]
    401c:	0100000a 	tsteq	r0, sl
    4020:	00742613 	rsbseq	r2, r4, r3, lsl r6
    4024:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    4028:	00000a72 	andeq	r0, r0, r2, ror sl
    402c:	74341301 	ldrtvc	r1, [r4], #-769	; 0xfffffcff
    4030:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    4034:	ed000031 	stc	0, cr0, [r0, #-196]	; 0xffffff3c
    4038:	12000031 	andne	r0, r0, #49	; 0x31
    403c:	00000000 	andeq	r0, r0, r0
    4040:	00000431 	andeq	r0, r0, r1, lsr r4
    4044:	00000012 	andeq	r0, r0, r2, lsl r0
    4048:	00043f00 	andeq	r3, r4, r0, lsl #30
    404c:	01160000 	tsteq	r6, r0
    4050:	0001be01 	andeq	fp, r1, r1, lsl #28
    4054:	0001b400 	andeq	fp, r1, r0, lsl #8
    4058:	17000900 	strne	r0, [r0, -r0, lsl #18]
    405c:	0aa20101 	beq	fe884468 <__StackTop+0xc6784468>
    4060:	0aa20000 	beq	fe884068 <__StackTop+0xc6784068>
    4064:	03060000 	movweq	r0, #24576	; 0x6000
    4068:	01170e0e 	tsteq	r7, lr, lsl #28
    406c:	000b3101 	andeq	r3, fp, r1, lsl #2
    4070:	000b3100 	andeq	r3, fp, r0, lsl #2
    4074:	04730600 	ldrbteq	r0, [r3], #-1536	; 0xfffffa00
    4078:	0101180a 	tsteq	r1, sl, lsl #16
    407c:	000005ec 	andeq	r0, r0, ip, ror #11
    4080:	000005ec 	andeq	r0, r0, ip, ror #11
    4084:	1805c807 	stmdane	r5, {r0, r1, r2, fp, lr, pc}
    4088:	02510101 	subseq	r0, r1, #1073741824	; 0x40000000
    408c:	02510000 	subseq	r0, r1, #0
    4090:	4a080000 	bmi	204098 <__RAM_SIZE+0x104098>
    4094:	01011806 	tsteq	r1, r6, lsl #16
    4098:	00000935 	andeq	r0, r0, r5, lsr r9
    409c:	00000935 	andeq	r0, r0, r5, lsr r9
    40a0:	180e4f08 	stmdane	lr, {r3, r8, r9, sl, fp, lr}
    40a4:	07ff0101 	ldrbeq	r0, [pc, r1, lsl #2]!
    40a8:	07ff0000 	ldrbeq	r0, [pc, r0]!
    40ac:	50080000 	andpl	r0, r8, r0
    40b0:	02cb000e 	sbceq	r0, fp, #14
    40b4:	00020000 	andeq	r0, r2, r0
    40b8:	00000dd5 	ldrdeq	r0, [r0], -r5
    40bc:	00dc0104 	sbcseq	r0, ip, r4, lsl #2
    40c0:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    40c4:	c500000c 	strgt	r0, [r0, #-12]
    40c8:	c8000001 	stmdagt	r0, {r0}
    40cc:	00000002 	andeq	r0, r0, r2
    40d0:	00000000 	andeq	r0, r0, r0
    40d4:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    40d8:	02000028 	andeq	r0, r0, #40	; 0x28
    40dc:	023a0704 	eorseq	r0, sl, #4, 14	; 0x100000
    40e0:	04030000 	streq	r0, [r3], #-0
    40e4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    40e8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    40ec:	0000028e 	andeq	r0, r0, lr, lsl #5
    40f0:	82040802 	andhi	r0, r4, #131072	; 0x20000
    40f4:	02000002 	andeq	r0, r0, #2
    40f8:	00ac0601 	adceq	r0, ip, r1, lsl #12
    40fc:	01020000 	mrseq	r0, (UNDEF: 2)
    4100:	0000aa08 	andeq	sl, r0, r8, lsl #20
    4104:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    4108:	000002de 	ldrdeq	r0, [r0], -lr
    410c:	c9070202 	stmdbgt	r7, {r1, r9}
    4110:	02000000 	andeq	r0, r0, #0
    4114:	02930504 	addseq	r0, r3, #4, 10	; 0x1000000
    4118:	b6040000 	strlt	r0, [r4], -r0
    411c:	02000003 	andeq	r0, r0, #3
    4120:	0074194f 	rsbseq	r1, r4, pc, asr #18
    4124:	04020000 	streq	r0, [r2], #-0
    4128:	00023507 	andeq	r3, r2, r7, lsl #10
    412c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    4130:	00000230 	andeq	r0, r0, r0, lsr r2
    4134:	01020405 	tsteq	r2, r5, lsl #8
    4138:	0000b308 	andeq	fp, r0, r8, lsl #6
    413c:	03b80400 			; <UNDEFINED> instruction: 0x03b80400
    4140:	30030000 	andcc	r0, r3, r0
    4144:	00006814 	andeq	r6, r0, r4, lsl r8
    4148:	0abc0400 	beq	fef05150 <__StackTop+0xc6e05150>
    414c:	4b040000 	blmi	104154 <__RAM_SIZE+0x4154>
    4150:	0000741a 	andeq	r7, r0, sl, lsl r4
    4154:	0b6a0400 	bleq	1a8515c <__RAM_SIZE+0x198515c>
    4158:	51040000 	mrspl	r0, (UNDEF: 4)
    415c:	00008b1a 	andeq	r8, r0, sl, lsl fp
    4160:	00a30600 	adceq	r0, r3, r0, lsl #12
    4164:	91070000 	mrsls	r0, (UNDEF: 7)
    4168:	1400000b 	strne	r0, [r0], #-11
    416c:	0d089005 	stceq	0, cr9, [r8, #-20]	; 0xffffffec
    4170:	08000001 	stmdaeq	r0, {r0}
    4174:	00000b75 	andeq	r0, r0, r5, ror fp
    4178:	a3249305 			; <UNDEFINED> instruction: 0xa3249305
    417c:	02000000 	andeq	r0, r0, #0
    4180:	de080023 	cdple	0, 0, cr0, cr8, cr3, {1}
    4184:	0500000b 	streq	r0, [r0, #-11]
    4188:	010d2d94 			; <UNDEFINED> instruction: 0x010d2d94
    418c:	23020000 	movwcs	r0, #8192	; 0x2000
    4190:	0c210804 	stceq	8, cr0, [r1], #-16
    4194:	95050000 	strls	r0, [r5, #-0]
    4198:	00010d2d 	andeq	r0, r1, sp, lsr #26
    419c:	08230200 	stmdaeq	r3!, {r9}
    41a0:	000b8908 	andeq	r8, fp, r8, lsl #18
    41a4:	0c960500 	cfldr32eq	mvfx0, [r6], {0}
    41a8:	00000082 	andeq	r0, r0, r2, lsl #1
    41ac:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    41b0:	00000b5e 	andeq	r0, r0, lr, asr fp
    41b4:	4e289705 	cdpmi	7, 2, cr9, cr8, cr5, {0}
    41b8:	02000001 	andeq	r0, r0, #1
    41bc:	09001023 	stmdbeq	r0, {r0, r1, r5, ip}
    41c0:	0000b404 	andeq	fp, r0, r4, lsl #8
    41c4:	0c540700 	mrrceq	7, 0, r0, r4, cr0
    41c8:	051c0000 	ldreq	r0, [ip, #-0]
    41cc:	014e10ac 	smlaltbeq	r1, lr, ip, r0
    41d0:	bf080000 	svclt	0x00080000
    41d4:	0500000b 	streq	r0, [r0, #-11]
    41d8:	009725af 	addseq	r2, r7, pc, lsr #11
    41dc:	23020000 	movwcs	r0, #8192	; 0x2000
    41e0:	0c190800 	ldceq	8, cr0, [r9], {-0}
    41e4:	b0050000 	andlt	r0, r5, r0
    41e8:	00016c26 	andeq	r6, r1, r6, lsr #24
    41ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    41f0:	000b8008 	andeq	r8, fp, r8
    41f4:	14b10500 	ldrtne	r0, [r1], #1280	; 0x500
    41f8:	00000160 	andeq	r0, r0, r0, ror #2
    41fc:	00082302 	andeq	r2, r8, r2, lsl #6
    4200:	01130409 	tsteq	r3, r9, lsl #8
    4204:	f5040000 			; <UNDEFINED> instruction: 0xf5040000
    4208:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    420c:	00b41b9a 	umlalseq	r1, r4, sl, fp
    4210:	ae040000 	cdpge	0, 0, cr0, cr4, cr0, {0}
    4214:	0500000d 	streq	r0, [r0, #-13]
    4218:	00b424a6 	adcseq	r2, r4, r6, lsr #9
    421c:	04090000 	streq	r0, [r9], #-0
    4220:	00000154 	andeq	r0, r0, r4, asr r1
    4224:	00016c06 	andeq	r6, r1, r6, lsl #24
    4228:	165e0400 	ldrbne	r0, [lr], -r0, lsl #8
    422c:	b3050000 	movwlt	r0, #20480	; 0x5000
    4230:	00011303 	andeq	r1, r1, r3, lsl #6
    4234:	5a010a00 	bpl	46a3c <__HEAP_SIZE+0x45a3c>
    4238:	0100000c 	tsteq	r0, ip
    423c:	97010dd7 			; <UNDEFINED> instruction: 0x97010dd7
    4240:	d6000000 	strle	r0, [r0], -r0
    4244:	fa100020 	blx	4042cc <__RAM_SIZE+0x3042cc>
    4248:	02100020 	andseq	r0, r0, #32
    424c:	ca01007d 	bgt	44448 <__HEAP_SIZE+0x43448>
    4250:	0b000001 	bleq	425c <__HEAP_SIZE+0x325c>
    4254:	00000b9c 	muleq	r0, ip, fp
    4258:	722ed701 	eorvc	sp, lr, #262144	; 0x40000
    425c:	50000001 	andpl	r0, r0, r1
    4260:	4a000032 	bmi	4330 <__HEAP_SIZE+0x3330>
    4264:	0c000032 	stceq	0, cr0, [r0], {50}	; 0x32
    4268:	00000c4d 	andeq	r0, r0, sp, asr #24
    426c:	d014db01 	andsle	sp, r4, r1, lsl #22
    4270:	7e000001 	cdpvc	0, 0, cr0, cr0, cr1, {0}
    4274:	7c000032 	stcvc	0, cr0, [r0], {50}	; 0x32
    4278:	00000032 	andeq	r0, r0, r2, lsr r0
    427c:	01770409 	cmneq	r7, r9, lsl #8
    4280:	ca060000 	bgt	184288 <__RAM_SIZE+0x84288>
    4284:	0d000001 	stceq	0, cr0, [r0, #-4]
    4288:	000c7501 	andeq	r7, ip, r1, lsl #10
    428c:	068b0100 	streq	r0, [fp], r0, lsl #2
    4290:	0020a401 	eoreq	sl, r0, r1, lsl #8
    4294:	0020d610 	eoreq	sp, r0, r0, lsl r6
    4298:	00329110 	eorseq	r9, r2, r0, lsl r1
    429c:	02350100 	eorseq	r0, r5, #0, 2
    42a0:	4d0e0000 	stcmi	0, cr0, [lr, #-0]
    42a4:	0100000c 	tsteq	r0, ip
    42a8:	01d0228b 	bicseq	r2, r0, fp, lsl #5
    42ac:	50010000 	andpl	r0, r1, r0
    42b0:	000c670e 	andeq	r6, ip, lr, lsl #14
    42b4:	268c0100 	strcs	r0, [ip], r0, lsl #2
    42b8:	00000172 	andeq	r0, r0, r2, ror r1
    42bc:	0e0c5101 	adfeqe	f5, f4, f1
    42c0:	0100000c 	tsteq	r0, ip
    42c4:	016c128e 	cmneq	ip, lr, lsl #5
    42c8:	32cf0000 	sbccc	r0, pc, #0
    42cc:	32c90000 	sbccc	r0, r9, #0
    42d0:	f50c0000 			; <UNDEFINED> instruction: 0xf50c0000
    42d4:	0100000b 	tsteq	r0, fp
    42d8:	00af168f 	adceq	r1, pc, pc, lsl #13
    42dc:	32fc0000 	rscscc	r0, ip, #0
    42e0:	32f80000 	rscscc	r0, r8, #0
    42e4:	0f000000 	svceq	0x00000000
    42e8:	000bcf01 	andeq	ip, fp, r1, lsl #30
    42ec:	06690100 	strbteq	r0, [r9], -r0, lsl #2
    42f0:	00000001 	andeq	r0, r0, r1
    42f4:	00000000 	andeq	r0, r0, r0
    42f8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    42fc:	00028001 	andeq	r8, r2, r1
    4300:	0c4d0e00 	mcrreq	14, 0, r0, sp, cr0
    4304:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    4308:	0001d025 	andeq	sp, r1, r5, lsr #32
    430c:	0e500100 	rdfeqs	f0, f0, f0
    4310:	00000c67 	andeq	r0, r0, r7, ror #24
    4314:	72296a01 	eorvc	r6, r9, #4096	; 0x1000
    4318:	01000001 	tsteq	r0, r1
    431c:	0c190c51 	ldceq	12, cr0, [r9], {81}	; 0x51
    4320:	6c010000 	stcvs	0, cr0, [r1], {-0}
    4324:	00017218 	andeq	r7, r1, r8, lsl r2
    4328:	00331c00 	eorseq	r1, r3, r0, lsl #24
    432c:	00331a00 	eorseq	r1, r3, r0, lsl #20
    4330:	010f0000 	mrseq	r0, CPSR
    4334:	00000bab 	andeq	r0, r0, fp, lsr #23
    4338:	01065901 	tsteq	r6, r1, lsl #18
    433c:	1000209e 	mulne	r0, lr, r0
    4340:	100020a4 	andne	r2, r0, r4, lsr #1
    4344:	01007d02 	tsteq	r0, r2, lsl #26
    4348:	000002a9 	andeq	r0, r0, r9, lsr #5
    434c:	000c070e 	andeq	r0, ip, lr, lsl #14
    4350:	2e590100 	rdfcse	f0, f1, f0
    4354:	00000172 	andeq	r0, r0, r2, ror r1
    4358:	10005001 	andne	r5, r0, r1
    435c:	000be501 	andeq	lr, fp, r1, lsl #10
    4360:	06310100 	ldrteq	r0, [r1], -r0, lsl #2
    4364:	00208401 	eoreq	r8, r0, r1, lsl #8
    4368:	00209e10 	eoreq	r9, r0, r0, lsl lr
    436c:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    4370:	0c4d0e01 	mcrreq	14, 0, r0, sp, cr1
    4374:	31010000 	mrscc	r0, (UNDEF: 1)
    4378:	0001d026 	andeq	sp, r1, r6, lsr #32
    437c:	00500100 	subseq	r0, r0, r0, lsl #2
    4380:	00259f00 	eoreq	r9, r5, r0, lsl #30
    4384:	f2000200 	vhsub.s8	d0, d0, d0
    4388:	0400000e 	streq	r0, [r0], #-14
    438c:	0000dc01 	andeq	sp, r0, r1, lsl #24
    4390:	10a20c00 	adcne	r0, r2, r0, lsl #24
    4394:	01c50000 	biceq	r0, r5, r0
    4398:	03d00000 	bicseq	r0, r0, #0
	...
    43a4:	2c350000 	ldccs	0, cr0, [r5], #-0
    43a8:	0a020000 	beq	843b0 <__HEAP_SIZE+0x833b0>
    43ac:	02000000 	andeq	r0, r0, #0
    43b0:	003517d1 	ldrsbteq	r1, [r5], -r1
    43b4:	04030000 	streq	r0, [r3], #-0
    43b8:	00023a07 	andeq	r3, r2, r7, lsl #20
    43bc:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    43c0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    43c4:	8e050803 	cdphi	8, 0, cr0, cr5, cr3, {0}
    43c8:	03000002 	movweq	r0, #2
    43cc:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
    43d0:	34020000 	strcc	r0, [r2], #-0
    43d4:	03000013 	movweq	r0, #19
    43d8:	005d1729 	subseq	r1, sp, r9, lsr #14
    43dc:	01030000 	mrseq	r0, (UNDEF: 3)
    43e0:	0000ac06 	andeq	sl, r0, r6, lsl #24
    43e4:	00000200 	andeq	r0, r0, r0, lsl #4
    43e8:	2b030000 	blcs	c43f0 <__HEAP_SIZE+0xc33f0>
    43ec:	00007018 	andeq	r7, r0, r8, lsl r0
    43f0:	08010300 	stmdaeq	r1, {r8, r9}
    43f4:	000000aa 	andeq	r0, r0, sl, lsr #1
    43f8:	de050203 	cdple	2, 0, cr0, cr5, cr3, {0}
    43fc:	03000002 	movweq	r0, #2
    4400:	00c90702 	sbceq	r0, r9, r2, lsl #14
    4404:	04030000 	streq	r0, [r3], #-0
    4408:	00029305 	andeq	r9, r2, r5, lsl #6
    440c:	03b60200 			; <UNDEFINED> instruction: 0x03b60200
    4410:	4f030000 	svcmi	0x00030000
    4414:	00009819 	andeq	r9, r0, r9, lsl r8
    4418:	07040300 	streq	r0, [r4, -r0, lsl #6]
    441c:	00000235 	andeq	r0, r0, r5, lsr r2
    4420:	30070803 	andcc	r0, r7, r3, lsl #16
    4424:	05000002 	streq	r0, [r0, #-2]
    4428:	00a60604 	adceq	r0, r6, r4, lsl #12
    442c:	01030000 	mrseq	r0, (UNDEF: 3)
    4430:	0000b308 	andeq	fp, r0, r8, lsl #6
    4434:	bf040700 	svclt	0x00040700
    4438:	06000000 	streq	r0, [r0], -r0
    443c:	000000b4 	strheq	r0, [r0], -r4
    4440:	13360208 	teqne	r6, #8, 4	; 0x80000000
    4444:	14040000 	strne	r0, [r4], #-0
    4448:	00005112 	andeq	r5, r0, r2, lsl r1
    444c:	00c00900 	sbceq	r0, r0, r0, lsl #18
    4450:	c0060000 	andgt	r0, r6, r0
    4454:	02000000 	andeq	r0, r0, #0
    4458:	00000002 	andeq	r0, r0, r2
    445c:	64131804 	ldrvs	r1, [r3], #-2052	; 0xfffff7fc
    4460:	06000000 	streq	r0, [r0], -r0
    4464:	000000d6 	ldrdeq	r0, [r0], -r6
    4468:	0003b802 	andeq	fp, r3, r2, lsl #16
    446c:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    4470:	0000008c 	andeq	r0, r0, ip, lsl #1
    4474:	000abd02 	andeq	fp, sl, r2, lsl #26
    4478:	1a4a0500 	bne	1285880 <__RAM_SIZE+0x1185880>
    447c:	00000085 	andeq	r0, r0, r5, lsl #1
    4480:	0000f306 	andeq	pc, r0, r6, lsl #6
    4484:	0abc0200 	beq	fef04c8c <__StackTop+0xc6e04c8c>
    4488:	4b050000 	blmi	144490 <__RAM_SIZE+0x44490>
    448c:	0000981a 	andeq	r9, r0, sl, lsl r8
    4490:	01040900 	tsteq	r4, r0, lsl #18
    4494:	04060000 	streq	r0, [r6], #-0
    4498:	02000001 	andeq	r0, r0, #1
    449c:	00000b6a 	andeq	r0, r0, sl, ror #22
    44a0:	e71a5105 	ldr	r5, [sl, -r5, lsl #2]
    44a4:	06000000 	streq	r0, [r0], -r0
    44a8:	0000011a 	andeq	r0, r0, sl, lsl r1
    44ac:	00d60407 	sbcseq	r0, r6, r7, lsl #8
    44b0:	b90a0000 	stmdblt	sl, {}	; <UNPREDICTABLE>
    44b4:	14000014 	strne	r0, [r0], #-20	; 0xffffffec
    44b8:	080c0c06 	stmdaeq	ip, {r1, r2, sl, fp}
    44bc:	00000160 	andeq	r0, r0, r0, ror #2
    44c0:	0010100b 	andseq	r1, r0, fp
    44c4:	0c110600 	ldceq	6, cr0, [r1], {-0}
    44c8:	00011a10 	andeq	r1, r1, r0, lsl sl
    44cc:	00230200 	eoreq	r0, r3, r0, lsl #4
    44d0:	0010060b 	andseq	r0, r0, fp, lsl #12
    44d4:	0c120600 	ldceq	6, cr0, [r2], {-0}
    44d8:	0001600c 	andeq	r6, r1, ip
    44dc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    44e0:	00a60c00 	adceq	r0, r6, r0, lsl #24
    44e4:	01700000 	cmneq	r0, r0
    44e8:	350d0000 	strcc	r0, [sp, #-0]
    44ec:	03000000 	movweq	r0, #0
    44f0:	0da80e00 	stceq	14, cr0, [r8]
    44f4:	25060000 	strcs	r0, [r6, #-0]
    44f8:	01312b0c 	teqeq	r1, ip, lsl #22
    44fc:	0a0a0000 	beq	284504 <__RAM_SIZE+0x184504>
    4500:	1c000012 	stcne	0, cr0, [r0], {18}
    4504:	100c2906 	andne	r2, ip, r6, lsl #18
    4508:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    450c:	00100f0b 	andseq	r0, r0, fp, lsl #30
    4510:	0c2e0600 	stceq	6, cr0, [lr], #-0
    4514:	00010411 	andeq	r0, r1, r1, lsl r4
    4518:	00230200 	eoreq	r0, r3, r0, lsl #4
    451c:	0010060b 	andseq	r0, r0, fp, lsl #12
    4520:	0c2f0600 	stceq	6, cr0, [pc], #-0	; 4528 <__HEAP_SIZE+0x3528>
    4524:	0000a60c 	andeq	sl, r0, ip, lsl #12
    4528:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    452c:	0010220b 	andseq	r2, r0, fp, lsl #4
    4530:	0c300600 	ldceq	6, cr0, [r0], #-0
    4534:	0001701a 	andeq	r7, r1, sl, lsl r0
    4538:	08230200 	stmdaeq	r3!, {r9}
    453c:	16580e00 	ldrbne	r0, [r8], -r0, lsl #28
    4540:	34060000 	strcc	r0, [r6], #-0
    4544:	017d030c 	cmneq	sp, ip, lsl #6
    4548:	040f0000 	streq	r0, [pc], #-0	; 4550 <__HEAP_SIZE+0x3550>
    454c:	050c9106 	streq	r9, [ip, #-262]	; 0xfffffefa
    4550:	000001ee 	andeq	r0, r0, lr, ror #3
    4554:	000ffd10 	andeq	pc, pc, r0, lsl sp	; <UNPREDICTABLE>
    4558:	0c930600 	ldceq	6, cr0, [r3], {0}
    455c:	0000a610 	andeq	sl, r0, r0, lsl r6
    4560:	100f1000 	andne	r1, pc, r0
    4564:	94060000 	strls	r0, [r6], #-0
    4568:	0104150c 	tsteq	r4, ip, lsl #10
    456c:	0a000000 	beq	4574 <__HEAP_SIZE+0x3574>
    4570:	0000161e 	andeq	r1, r0, lr, lsl r6
    4574:	0c8d0664 	stceq	6, cr0, [sp], {100}	; 0x64
    4578:	00028b10 	andeq	r8, r2, r0, lsl fp
    457c:	0ff40b00 	svceq	0x00f40b00
    4580:	8f060000 	svchi	0x00060000
    4584:	028b0c0c 	addeq	r0, fp, #12, 24	; 0xc00
    4588:	23020000 	movwcs	r0, #8192	; 0x2000
    458c:	00751100 	rsbseq	r1, r5, r0, lsl #2
    4590:	070c9506 	streq	r9, [ip, -r6, lsl #10]
    4594:	000001c9 	andeq	r0, r0, r9, asr #3
    4598:	0b0c2302 	bleq	30d1a8 <__RAM_SIZE+0x20d1a8>
    459c:	0000157e 	andeq	r1, r0, lr, ror r5
    45a0:	120c9706 	andne	r9, ip, #1572864	; 0x180000
    45a4:	0000029b 	muleq	r0, fp, r2
    45a8:	0b102302 	bleq	40d1b8 <__RAM_SIZE+0x30d1b8>
    45ac:	00001021 	andeq	r1, r0, r1, lsr #32
    45b0:	110c9806 	tstne	ip, r6, lsl #16
    45b4:	000002ab 	andeq	r0, r0, fp, lsr #5
    45b8:	0b482302 	bleq	120d1c8 <__RAM_SIZE+0x110d1c8>
    45bc:	00001376 	andeq	r1, r0, r6, ror r3
    45c0:	0d0c9906 	vstreq.16	s18, [ip, #-12]	; <UNPREDICTABLE>
    45c4:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    45c8:	0b542302 	bleq	150d1d8 <__RAM_SIZE+0x140d1d8>
    45cc:	0000137f 	andeq	r1, r0, pc, ror r3
    45d0:	110c9c06 	tstne	ip, r6, lsl #24
    45d4:	000000d6 	ldrdeq	r0, [r0], -r6
    45d8:	0b562302 	bleq	158d1e8 <__RAM_SIZE+0x148d1e8>
    45dc:	00001018 	andeq	r1, r0, r8, lsl r0
    45e0:	100ca006 	andne	sl, ip, r6
    45e4:	000000a6 	andeq	r0, r0, r6, lsr #1
    45e8:	0b582302 	bleq	160d1f8 <__RAM_SIZE+0x150d1f8>
    45ec:	0000103d 	andeq	r1, r0, sp, lsr r0
    45f0:	150ca406 	strne	sl, [ip, #-1030]	; 0xfffffbfa
    45f4:	00000104 	andeq	r0, r0, r4, lsl #2
    45f8:	0b5c2302 	bleq	170d208 <__RAM_SIZE+0x160d208>
    45fc:	00001388 	andeq	r1, r0, r8, lsl #7
    4600:	110ca506 	tstne	ip, r6, lsl #10
    4604:	000000d6 	ldrdeq	r0, [r0], -r6
    4608:	00602302 	rsbeq	r2, r0, r2, lsl #6
    460c:	0000a60c 	andeq	sl, r0, ip, lsl #12
    4610:	00029b00 	andeq	r9, r2, r0, lsl #22
    4614:	00350d00 	eorseq	r0, r5, r0, lsl #26
    4618:	00020000 	andeq	r0, r2, r0
    461c:	0001bc0c 	andeq	fp, r1, ip, lsl #24
    4620:	0002ab00 	andeq	sl, r2, r0, lsl #22
    4624:	00350d00 	eorseq	r0, r5, r0, lsl #26
    4628:	00010000 	andeq	r0, r1, r0
    462c:	0001040c 	andeq	r0, r1, ip, lsl #8
    4630:	0002bb00 	andeq	fp, r2, r0, lsl #22
    4634:	00350d00 	eorseq	r0, r5, r0, lsl #26
    4638:	00020000 	andeq	r0, r2, r0
    463c:	0000d60c 	andeq	sp, r0, ip, lsl #12
    4640:	0002cb00 	andeq	ip, r2, r0, lsl #22
    4644:	00350d00 	eorseq	r0, r5, r0, lsl #26
    4648:	00010000 	andeq	r0, r1, r0
    464c:	00124e0e 	andseq	r4, r2, lr, lsl #28
    4650:	0ca70600 	stceq	6, cr0, [r7]
    4654:	0001ee03 	andeq	lr, r1, r3, lsl #28
    4658:	0b911200 	bleq	fe448e60 <__StackTop+0xc6348e60>
    465c:	07140000 	ldreq	r0, [r4, -r0]
    4660:	03310890 	teqeq	r1, #144, 16	; 0x900000
    4664:	75130000 	ldrvc	r0, [r3, #-0]
    4668:	0700000b 	streq	r0, [r0, -fp]
    466c:	011a2493 			; <UNDEFINED> instruction: 0x011a2493
    4670:	23020000 	movwcs	r0, #8192	; 0x2000
    4674:	0bde1300 	bleq	ff78927c <__StackTop+0xc768927c>
    4678:	94070000 	strls	r0, [r7], #-0
    467c:	0003312d 	andeq	r3, r3, sp, lsr #2
    4680:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4684:	000c2113 	andeq	r2, ip, r3, lsl r1
    4688:	2d950700 	ldccs	7, cr0, [r5]
    468c:	00000331 	andeq	r0, r0, r1, lsr r3
    4690:	13082302 	movwne	r2, #33538	; 0x8302
    4694:	00000b89 	andeq	r0, r0, r9, lsl #23
    4698:	a60c9607 	strge	r9, [ip], -r7, lsl #12
    469c:	02000000 	andeq	r0, r0, #0
    46a0:	5e130c23 	cdppl	12, 1, cr0, cr3, cr3, {1}
    46a4:	0700000b 	streq	r0, [r0, -fp]
    46a8:	03722897 	cmneq	r2, #9895936	; 0x970000
    46ac:	23020000 	movwcs	r0, #8192	; 0x2000
    46b0:	04070010 	streq	r0, [r7], #-16
    46b4:	000002d8 	ldrdeq	r0, [r0], -r8
    46b8:	000c5412 	andeq	r5, ip, r2, lsl r4
    46bc:	ac071c00 	stcge	12, cr1, [r7], {-0}
    46c0:	00037210 	andeq	r7, r3, r0, lsl r2
    46c4:	0bbf1300 	bleq	fefc92cc <__StackTop+0xc6ec92cc>
    46c8:	af070000 	svcge	0x00070000
    46cc:	00010425 	andeq	r0, r1, r5, lsr #8
    46d0:	00230200 	eoreq	r0, r3, r0, lsl #4
    46d4:	000c1913 	andeq	r1, ip, r3, lsl r9
    46d8:	26b00700 	ldrtcs	r0, [r0], r0, lsl #14
    46dc:	00000390 	muleq	r0, r0, r3
    46e0:	13042302 	movwne	r2, #17154	; 0x4302
    46e4:	00000b80 	andeq	r0, r0, r0, lsl #23
    46e8:	8414b107 	ldrhi	fp, [r4], #-263	; 0xfffffef9
    46ec:	02000003 	andeq	r0, r0, #3
    46f0:	07000823 	streq	r0, [r0, -r3, lsr #16]
    46f4:	00033704 	andeq	r3, r3, r4, lsl #14
    46f8:	1bf50200 	blne	ffd44f00 <__StackTop+0xc7c44f00>
    46fc:	9a070000 	bls	1c4704 <__RAM_SIZE+0xc4704>
    4700:	0002d81b 	andeq	sp, r2, fp, lsl r8
    4704:	0dae0200 	sfmeq	f0, 4, [lr]
    4708:	a6070000 	strge	r0, [r7], -r0
    470c:	0002d824 	andeq	sp, r2, r4, lsr #16
    4710:	78040700 	stmdavc	r4, {r8, r9, sl}
    4714:	02000003 	andeq	r0, r0, #3
    4718:	0000165e 	andeq	r1, r0, lr, asr r6
    471c:	3703b307 	strcc	fp, [r3, -r7, lsl #6]
    4720:	02000003 	andeq	r0, r0, #3
    4724:	000002e8 	andeq	r0, r0, r8, ror #5
    4728:	ae2e5c08 	cdpge	12, 2, cr5, cr14, cr8, {0}
    472c:	07000003 	streq	r0, [r0, -r3]
    4730:	0003b404 	andeq	fp, r3, r4, lsl #8
    4734:	020f1400 	andeq	r1, pc, #0, 8
    4738:	12010000 	andne	r0, r1, #0
    473c:	00000d51 	andeq	r0, r0, r1, asr sp
    4740:	107d0808 	rsbsne	r0, sp, r8, lsl #16
    4744:	000003e6 	andeq	r0, r0, r6, ror #7
    4748:	000e1713 	andeq	r1, lr, r3, lsl r7
    474c:	107f0800 	rsbsne	r0, pc, r0, lsl #16
    4750:	000000f3 	strdeq	r0, [r0], -r3
    4754:	13002302 	movwne	r2, #770	; 0x302
    4758:	0000122a 	andeq	r1, r0, sl, lsr #4
    475c:	1a108008 	bne	424784 <__RAM_SIZE+0x324784>
    4760:	02000001 	andeq	r0, r0, #1
    4764:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    4768:	0000128b 	andeq	r1, r0, fp, lsl #5
    476c:	ba038108 	blt	e4b94 <__HEAP_SIZE+0xe3b94>
    4770:	02000003 	andeq	r0, r0, #3
    4774:	0000115c 	andeq	r1, r0, ip, asr r1
    4778:	03243309 			; <UNDEFINED> instruction: 0x03243309
    477c:	06000004 	streq	r0, [r0], -r4
    4780:	000003f2 	strdeq	r0, [r0], -r2
    4784:	04090407 	streq	r0, [r9], #-1031	; 0xfffffbf9
    4788:	cc120000 	ldcgt	0, cr0, [r2], {-0}
    478c:	6400000e 	strvs	r0, [r0], #-14
    4790:	e7106701 	ldr	r6, [r0, -r1, lsl #14]
    4794:	13000004 	movwne	r0, #4
    4798:	00001586 	andeq	r1, r0, r6, lsl #11
    479c:	2b0e6901 	blcs	39eba8 <__RAM_SIZE+0x29eba8>
    47a0:	02000005 	andeq	r0, r0, #5
    47a4:	2a130023 	bcs	4c4838 <__RAM_SIZE+0x3c4838>
    47a8:	01000013 	tsteq	r0, r3, lsl r0
    47ac:	052b0e6a 	streq	r0, [fp, #-3690]!	; 0xfffff196
    47b0:	23020000 	movwcs	r0, #8192	; 0x2000
    47b4:	00751504 	rsbseq	r1, r5, r4, lsl #10
    47b8:	75077001 	strvc	r7, [r7, #-1]
    47bc:	02000005 	andeq	r0, r0, #5
    47c0:	e4130823 	ldr	r0, [r3], #-2083	; 0xfffff7dd
    47c4:	0100000d 	tsteq	r0, sp
    47c8:	03960c72 	orrseq	r0, r6, #29184	; 0x7200
    47cc:	23020000 	movwcs	r0, #8192	; 0x2000
    47d0:	0d181310 	ldceq	3, cr1, [r8, #-64]	; 0xffffffc0
    47d4:	73010000 	movwvc	r0, #4096	; 0x1000
    47d8:	0003960c 	andeq	r9, r3, ip, lsl #12
    47dc:	2c230200 	sfmcs	f0, 4, [r3], #-0
    47e0:	000f2e13 	andeq	r2, pc, r3, lsl lr	; <UNPREDICTABLE>
    47e4:	1a750100 	bne	1d44bec <__RAM_SIZE+0x1c44bec>
    47e8:	00000110 	andeq	r0, r0, r0, lsl r1
    47ec:	13482302 	movtne	r2, #33538	; 0x8302
    47f0:	000013a1 	andeq	r1, r0, r1, lsr #7
    47f4:	04117601 	ldreq	r7, [r1], #-1537	; 0xfffff9ff
    47f8:	02000001 	andeq	r0, r0, #1
    47fc:	c4134c23 	ldrgt	r4, [r3], #-3107	; 0xfffff3dd
    4800:	01000010 	tsteq	r0, r0, lsl r0
    4804:	01041177 	tsteq	r4, r7, ror r1
    4808:	23020000 	movwcs	r0, #8192	; 0x2000
    480c:	16161350 			; <UNDEFINED> instruction: 0x16161350
    4810:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    4814:	0000cc15 	andeq	ip, r0, r5, lsl ip
    4818:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    481c:	000e0f13 	andeq	r0, lr, r3, lsl pc
    4820:	157a0100 	ldrbne	r0, [sl, #-256]!	; 0xffffff00
    4824:	000000cc 	andeq	r0, r0, ip, asr #1
    4828:	13552302 	cmpne	r5, #134217728	; 0x8000000
    482c:	00001058 	andeq	r1, r0, r8, asr r0
    4830:	d6117d01 	ldrle	r7, [r1], -r1, lsl #26
    4834:	02000000 	andeq	r0, r0, #0
    4838:	e9135623 	ldmdb	r3, {r0, r1, r5, r9, sl, ip, lr}
    483c:	01000015 	tsteq	r0, r5, lsl r0
    4840:	04032281 	streq	r2, [r3], #-641	; 0xfffffd7f
    4844:	23020000 	movwcs	r0, #8192	; 0x2000
    4848:	13c91358 	bicne	r1, r9, #88, 6	; 0x60000001
    484c:	85010000 	strhi	r0, [r1, #-0]
    4850:	00010415 	andeq	r0, r1, r5, lsl r4
    4854:	5c230200 	sfmpl	f0, 4, [r3], #-0
    4858:	00130d13 	andseq	r0, r3, r3, lsl sp
    485c:	11860100 	orrne	r0, r6, r0, lsl #2
    4860:	000000d6 	ldrdeq	r0, [r0], -r6
    4864:	00602302 	rsbeq	r2, r0, r2, lsl #6
    4868:	000fcf02 	andeq	ip, pc, r2, lsl #30
    486c:	243a0900 	ldrtcs	r0, [sl], #-2304	; 0xfffff700
    4870:	00000403 	andeq	r0, r0, r3, lsl #8
    4874:	000f9802 	andeq	r9, pc, r2, lsl #16
    4878:	24410900 	strbcs	r0, [r1], #-2304	; 0xfffff700
    487c:	00000403 	andeq	r0, r0, r3, lsl #8
    4880:	00113c12 	andseq	r3, r1, r2, lsl ip
    4884:	44010800 	strmi	r0, [r1], #-2048	; 0xfffff800
    4888:	00052b10 	andeq	r2, r5, r0, lsl fp
    488c:	14901300 	ldrne	r1, [r0], #768	; 0x300
    4890:	46010000 	strmi	r0, [r1], -r0
    4894:	00052b0e 	andeq	r2, r5, lr, lsl #22
    4898:	00230200 	eoreq	r0, r3, r0, lsl #4
    489c:	000e6e13 	andeq	r6, lr, r3, lsl lr
    48a0:	0e470100 	dvfeqs	f0, f7, f0
    48a4:	0000052b 	andeq	r0, r0, fp, lsr #10
    48a8:	00042302 	andeq	r2, r4, r2, lsl #6
    48ac:	00c00407 	sbceq	r0, r0, r7, lsl #8
    48b0:	91020000 	mrsls	r0, (UNDEF: 2)
    48b4:	01000013 	tsteq	r0, r3, lsl r0
    48b8:	04ff0348 	ldrbteq	r0, [pc], #840	; 48c0 <__HEAP_SIZE+0x38c0>
    48bc:	ae120000 	cdpge	0, 1, cr0, cr2, cr0, {0}
    48c0:	0800000c 	stmdaeq	r0, {r2, r3}
    48c4:	69104a01 	ldmdbvs	r0, {r0, r9, fp, lr}
    48c8:	13000005 	movwne	r0, #5
    48cc:	000021ce 	andeq	r2, r0, lr, asr #3
    48d0:	a2124c01 	andsge	r4, r2, #256	; 0x100
    48d4:	02000003 	andeq	r0, r0, #3
    48d8:	f1130023 			; <UNDEFINED> instruction: 0xf1130023
    48dc:	01000014 	tsteq	r0, r4, lsl r0
    48e0:	0104114d 	tsteq	r4, sp, asr #2
    48e4:	23020000 	movwcs	r0, #8192	; 0x2000
    48e8:	c7020004 	strgt	r0, [r2, -r4]
    48ec:	0100000c 	tsteq	r0, ip
    48f0:	053d034e 	ldreq	r0, [sp, #-846]!	; 0xfffffcb2
    48f4:	08160000 	ldmdaeq	r6, {}	; <UNPREDICTABLE>
    48f8:	97056c01 	strls	r6, [r5, -r1, lsl #24]
    48fc:	17000005 	strne	r0, [r0, -r5]
    4900:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    4904:	31196e01 	tstcc	r9, r1, lsl #28
    4908:	17000005 	strne	r0, [r0, -r5]
    490c:	00000f40 	andeq	r0, r0, r0, asr #30
    4910:	69196f01 	ldmdbvs	r9, {r0, r8, r9, sl, fp, sp, lr}
    4914:	00000005 	andeq	r0, r0, r5
    4918:	0015e202 	andseq	lr, r5, r2, lsl #4
    491c:	03880100 	orreq	r0, r8, #0, 2
    4920:	00000409 	andeq	r0, r0, r9, lsl #8
    4924:	00125402 	andseq	r5, r2, r2, lsl #8
    4928:	108c0100 	addne	r0, ip, r0, lsl #2
    492c:	00000597 	muleq	r0, r7, r5
    4930:	0005a306 	andeq	sl, r5, r6, lsl #6
    4934:	0c931800 	ldceq	8, cr1, [r3], {0}
    4938:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    493c:	f301170c 	vabd.u8	d1, d1, d12
    4940:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    4944:	06100021 	ldreq	r0, [r0], -r1, lsr #32
    4948:	2f100022 	svccs	0x00100022
    494c:	01000033 	tsteq	r0, r3, lsr r0
    4950:	00000689 	andeq	r0, r0, r9, lsl #13
    4954:	0014b119 	andseq	fp, r4, r9, lsl r1
    4958:	0cee0100 	stfeqe	f0, [lr]
    495c:	00068f49 	andeq	r8, r6, r9, asr #30
    4960:	00337900 	eorseq	r7, r3, r0, lsl #18
    4964:	00337300 	eorseq	r7, r3, r0, lsl #6
    4968:	15e91a00 	strbne	r1, [r9, #2560]!	; 0xa00
    496c:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    4970:	0694130c 	ldreq	r1, [r4], ip, lsl #6
    4974:	33a50000 			; <UNDEFINED> instruction: 0x33a50000
    4978:	33a30000 			; <UNDEFINED> instruction: 0x33a30000
    497c:	d11a0000 	tstle	sl, r0
    4980:	0100001c 	tsteq	r0, ip, lsl r0
    4984:	f3140cf1 	vqrdmlsh.s16	q0, q10, <illegal reg q8.5>
    4988:	c6000000 	strgt	r0, [r0], -r0
    498c:	b8000033 	stmdalt	r0, {r0, r1, r4, r5}
    4990:	1b000033 	blne	4a64 <__HEAP_SIZE+0x3a64>
    4994:	000002f8 	strdeq	r0, [r0], -r8
    4998:	000e0f1a 	andeq	r0, lr, sl, lsl pc
    499c:	0cfd0100 	ldfeqe	f0, [sp]
    49a0:	0000d11a 	andeq	sp, r0, sl, lsl r1
    49a4:	00342200 	eorseq	r2, r4, r0, lsl #4
    49a8:	00341e00 	eorseq	r1, r4, r0, lsl #28
    49ac:	21f41c00 	mvnscs	r1, r0, lsl #24
    49b0:	22061000 	andcs	r1, r6, #0
    49b4:	06581000 	ldrbeq	r1, [r8], -r0
    49b8:	d71a0000 	ldrle	r0, [sl, -r0]
    49bc:	01000013 	tsteq	r0, r3, lsl r0
    49c0:	15110d19 	ldrne	r0, [r1, #-3353]	; 0xfffff2e7
    49c4:	44000001 	strmi	r0, [r0], #-1
    49c8:	42000034 	andmi	r0, r0, #52	; 0x34
    49cc:	1d000034 	stcne	0, cr0, [r0, #-208]	; 0xffffff30
    49d0:	100021f8 	strdne	r2, [r0], -r8
    49d4:	00002452 	andeq	r2, r0, r2, asr r4
    49d8:	21d61e00 	bicscs	r1, r6, r0, lsl #28
    49dc:	0c3c1000 	ldceq	0, cr1, [ip], #-0
    49e0:	06770000 	ldrbteq	r0, [r7], -r0
    49e4:	011f0000 	tsteq	pc, r0
    49e8:	00740250 	rsbseq	r0, r4, r0, asr r2
    49ec:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    49f0:	011f6c91 			; <UNDEFINED> instruction: 0x011f6c91
    49f4:	00300152 	eorseq	r0, r0, r2, asr r1
    49f8:	0021ec20 	eoreq	lr, r1, r0, lsr #24
    49fc:	00246110 	eoreq	r6, r4, r0, lsl r1
    4a00:	50011f00 	andpl	r1, r1, r0, lsl #30
    4a04:	002c7402 	eoreq	r7, ip, r2, lsl #8
    4a08:	04070000 	streq	r0, [r7], #-0
    4a0c:	000005af 	andeq	r0, r0, pc, lsr #11
    4a10:	00068906 	andeq	r8, r6, r6, lsl #18
    4a14:	a3040700 	movwge	r0, #18176	; 0x4700
    4a18:	06000005 	streq	r0, [r0], -r5
    4a1c:	00000694 	muleq	r0, r4, r6
    4a20:	0d740121 	ldfeqe	f0, [r4, #-132]!	; 0xffffff7c
    4a24:	dc010000 	stcle	0, cr0, [r1], {-0}
    4a28:	f3011c0c 			; <UNDEFINED> instruction: 0xf3011c0c
    4a2c:	00000004 	andeq	r0, r0, r4
    4a30:	00000000 	andeq	r0, r0, r0
    4a34:	57000000 	strpl	r0, [r0, -r0]
    4a38:	01000034 	tsteq	r0, r4, lsr r0
    4a3c:	00000701 	andeq	r0, r0, r1, lsl #14
    4a40:	00116a19 	andseq	r6, r1, r9, lsl sl
    4a44:	0cdc0100 	ldfeqe	f0, [ip], {0}
    4a48:	0004e749 	andeq	lr, r4, r9, asr #14
    4a4c:	00349300 	eorseq	r9, r4, r0, lsl #6
    4a50:	00348f00 	eorseq	r8, r4, r0, lsl #30
    4a54:	1cd12200 	lfmne	f2, 2, [r1], {0}
    4a58:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    4a5c:	04f3200c 	ldrbteq	r2, [r3], #12
    4a60:	91020000 	mrsls	r0, (UNDEF: 2)
    4a64:	00002074 	andeq	r2, r0, r4, ror r0
    4a68:	10870000 	addne	r0, r7, r0
    4a6c:	011f0000 	tsteq	pc, r0
    4a70:	01f30350 	mvnseq	r0, r0, asr r3
    4a74:	51011f50 	tstpl	r1, r0, asr pc
    4a78:	1f749102 	svcne	0x00749102
    4a7c:	30015201 	andcc	r5, r1, r1, lsl #4
    4a80:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4a84:	00001506 	andeq	r1, r0, r6, lsl #10
    4a88:	1c0cc901 			; <UNDEFINED> instruction: 0x1c0cc901
    4a8c:	0004f301 	andeq	pc, r4, r1, lsl #6
	...
    4a98:	0034b400 	eorseq	fp, r4, r0, lsl #8
    4a9c:	077a0100 	ldrbeq	r0, [sl, -r0, lsl #2]!
    4aa0:	6a190000 	bvs	644aa8 <__RAM_SIZE+0x544aa8>
    4aa4:	01000011 	tsteq	r0, r1, lsl r0
    4aa8:	e7420cc9 	strb	r0, [r2, -r9, asr #25]
    4aac:	f0000004 			; <UNDEFINED> instruction: 0xf0000004
    4ab0:	ec000034 	stc	0, cr0, [r0], {52}	; 0x34
    4ab4:	19000034 	stmdbne	r0, {r2, r4, r5}
    4ab8:	000023e0 	andeq	r2, r0, r0, ror #7
    4abc:	420cca01 	andmi	ip, ip, #4096	; 0x1000
    4ac0:	00000126 	andeq	r0, r0, r6, lsr #2
    4ac4:	00003517 	andeq	r3, r0, r7, lsl r5
    4ac8:	00003511 	andeq	r3, r0, r1, lsl r5
    4acc:	001cd122 	andseq	sp, ip, r2, lsr #2
    4ad0:	0ccc0100 	stfeqe	f0, [ip], {0}
    4ad4:	0004f320 	andeq	pc, r4, r0, lsr #6
    4ad8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4adc:	00000020 	andeq	r0, r0, r0, lsr #32
    4ae0:	00163900 	andseq	r3, r6, r0, lsl #18
    4ae4:	50011f00 	andpl	r1, r1, r0, lsl #30
    4ae8:	5001f303 	andpl	pc, r1, r3, lsl #6
    4aec:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    4af0:	011f7491 			; <UNDEFINED> instruction: 0x011f7491
    4af4:	01f30352 	mvnseq	r0, r2, asr r3
    4af8:	21000051 	qaddcs	r0, r1, r0
    4afc:	00125c01 	andseq	r5, r2, r1, lsl #24
    4b00:	0ca00100 	stfeqs	f0, [r0]
    4b04:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    4b10:	35430000 	strbcc	r0, [r3, #-0]
    4b14:	01010000 	mrseq	r0, (UNDEF: 1)
    4b18:	19000008 	stmdbne	r0, {r3}
    4b1c:	000013e8 	andeq	r1, r0, r8, ror #7
    4b20:	3c0ca001 	stccc	0, cr10, [ip], {1}
    4b24:	000004f3 	strdeq	r0, [r0], -r3
    4b28:	0000356f 	andeq	r3, r0, pc, ror #10
    4b2c:	00003563 	andeq	r3, r0, r3, ror #10
    4b30:	00116a19 	andseq	r6, r1, r9, lsl sl
    4b34:	0ca10100 	stfeqs	f0, [r1]
    4b38:	0004e736 	andeq	lr, r4, r6, lsr r7
    4b3c:	0035c400 	eorseq	ip, r5, r0, lsl #8
    4b40:	0035bc00 	eorseq	fp, r5, r0, lsl #24
    4b44:	1cd11a00 	vldmiane	r1, {s3-s2}
    4b48:	a3010000 	movwge	r0, #4096	; 0x1000
    4b4c:	00f3140c 	rscseq	r1, r3, ip, lsl #8
    4b50:	36020000 	strcc	r0, [r2], -r0
    4b54:	35fe0000 	ldrbcc	r0, [lr, #0]!
    4b58:	e71a0000 	ldr	r0, [sl, -r0]
    4b5c:	01000013 	tsteq	r0, r3, lsl r0
    4b60:	9a190ca4 	bls	647df8 <__RAM_SIZE+0x547df8>
    4b64:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    4b68:	22000036 	andcs	r0, r0, #54	; 0x36
    4b6c:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    4b70:	00000000 	andeq	r0, r0, r0
    4b74:	00002470 	andeq	r2, r0, r0, ror r4
    4b78:	0000001d 	andeq	r0, r0, sp, lsl r0
    4b7c:	00247e00 	eoreq	r7, r4, r0, lsl #28
    4b80:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4b84:	00001607 	andeq	r1, r0, r7, lsl #12
    4b88:	100c7a01 	andne	r7, ip, r1, lsl #20
    4b8c:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4b98:	00367b00 	eorseq	r7, r6, r0, lsl #22
    4b9c:	08730100 	ldmdaeq	r3!, {r8}^
    4ba0:	e8190000 	ldmda	r9, {}	; <UNPREDICTABLE>
    4ba4:	01000013 	tsteq	r0, r3, lsl r0
    4ba8:	f3370c7a 	vqrdmlsh.s<illegal width 64>	q0, <illegal reg q3.5>, q13
    4bac:	a9000004 	stmdbge	r0, {r2}
    4bb0:	9b000036 	blls	4c90 <__HEAP_SIZE+0x3c90>
    4bb4:	19000036 	stmdbne	r0, {r1, r2, r4, r5}
    4bb8:	0000116a 	andeq	r1, r0, sl, ror #2
    4bbc:	310c7b01 	tstcc	ip, r1, lsl #22
    4bc0:	000004e7 	andeq	r0, r0, r7, ror #9
    4bc4:	0000370b 	andeq	r3, r0, fp, lsl #14
    4bc8:	00003707 	andeq	r3, r0, r7, lsl #14
    4bcc:	001cd11a 	andseq	sp, ip, sl, lsl r1
    4bd0:	0c7d0100 	ldfeqe	f0, [sp], #-0
    4bd4:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    4bd8:	00372d00 	eorseq	r2, r7, r0, lsl #26
    4bdc:	00372900 	eorseq	r2, r7, r0, lsl #18
    4be0:	00001d00 	andeq	r1, r0, r0, lsl #26
    4be4:	24700000 	ldrbtcs	r0, [r0], #-0
    4be8:	001d0000 	andseq	r0, sp, r0
    4bec:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    4bf0:	00000024 	andeq	r0, r0, r4, lsr #32
    4bf4:	127b0121 	rsbsne	r0, fp, #1073741832	; 0x40000008
    4bf8:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    4bfc:	e701160c 	str	r1, [r1, -ip, lsl #12]
    4c00:	00000004 	andeq	r0, r0, r4
    4c04:	00000000 	andeq	r0, r0, r0
    4c08:	4c000000 	stcmi	0, cr0, [r0], {-0}
    4c0c:	01000037 	tsteq	r0, r7, lsr r0
    4c10:	000008d9 	ldrdeq	r0, [r0], -r9
    4c14:	00162c19 	andseq	r2, r6, r9, lsl ip
    4c18:	0c680100 	stfeqe	f0, [r8], #-0
    4c1c:	00011539 	andeq	r1, r1, r9, lsr r5
    4c20:	00377000 	eorseq	r7, r7, r0
    4c24:	00376c00 	eorseq	r6, r7, r0, lsl #24
    4c28:	14b11a00 	ldrtne	r1, [r1], #2560	; 0xa00
    4c2c:	6a010000 	bvs	44c34 <__HEAP_SIZE+0x43c34>
    4c30:	04e71a0c 	strbteq	r1, [r7], #2572	; 0xa0c
    4c34:	37930000 	ldrcc	r0, [r3, r0]
    4c38:	37910000 	ldrcc	r0, [r1, r0]
    4c3c:	00200000 	eoreq	r0, r0, r0
    4c40:	60000000 	andvs	r0, r0, r0
    4c44:	1f000021 	svcne	0x00000021
    4c48:	f3035001 	vhadd.u8	d5, d3, d1
    4c4c:	011f5001 	tsteq	pc, r1
    4c50:	1f340151 	svcne	0x00340151
    4c54:	30015201 	andcc	r5, r1, r1, lsl #4
    4c58:	01230000 			; <UNDEFINED> instruction: 0x01230000
    4c5c:	000013aa 	andeq	r1, r0, sl, lsr #7
    4c60:	0a0c3c01 	beq	313c6c <__RAM_SIZE+0x213c6c>
    4c64:	00246201 	eoreq	r6, r4, r1, lsl #4
    4c68:	0024b410 	eoreq	fp, r4, r0, lsl r4
    4c6c:	0037a610 	eorseq	sl, r7, r0, lsl r6
    4c70:	098c0100 	stmibeq	ip, {r8}
    4c74:	b2190000 	andslt	r0, r9, #0
    4c78:	01000014 	tsteq	r0, r4, lsl r0
    4c7c:	f2380c3c 	vfms.f16	d0, d8, d28
    4c80:	ca000003 	bgt	4c94 <__HEAP_SIZE+0x3c94>
    4c84:	c6000037 			; <UNDEFINED> instruction: 0xc6000037
    4c88:	19000037 	stmdbne	r0, {r0, r1, r2, r4, r5}
    4c8c:	000023e0 	andeq	r2, r0, r0, ror #7
    4c90:	350c3d01 	strcc	r3, [ip, #-3329]	; 0xfffff2ff
    4c94:	0000011a 	andeq	r0, r0, sl, lsl r1
    4c98:	000037ec 	andeq	r3, r0, ip, ror #15
    4c9c:	000037e8 	andeq	r3, r0, r8, ror #15
    4ca0:	000dd219 	andeq	sp, sp, r9, lsl r2
    4ca4:	0c3e0100 	ldfeqs	f0, [lr], #-0
    4ca8:	0000ff3b 	andeq	pc, r0, fp, lsr pc	; <UNPREDICTABLE>
    4cac:	00380e00 	eorseq	r0, r8, r0, lsl #28
    4cb0:	00380a00 	eorseq	r0, r8, r0, lsl #20
    4cb4:	14b11a00 	ldrtne	r1, [r1], #2560	; 0xa00
    4cb8:	40010000 	andmi	r0, r1, r0
    4cbc:	069a190c 	ldreq	r1, [sl], ip, lsl #18
    4cc0:	38300000 	ldmdacc	r0!, {}	; <UNPREDICTABLE>
    4cc4:	382c0000 	stmdacc	ip!, {}	; <UNPREDICTABLE>
    4cc8:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    4ccc:	70100024 	andsvc	r0, r0, r4, lsr #32
    4cd0:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    4cd4:	1000248a 	andne	r2, r0, sl, lsl #9
    4cd8:	0000247e 	andeq	r2, r0, lr, ror r4
    4cdc:	0024941e 	eoreq	r9, r4, lr, lsl r4
    4ce0:	000afb10 	andeq	pc, sl, r0, lsl fp	; <UNPREDICTABLE>
    4ce4:	00096f00 	andeq	r6, r9, r0, lsl #30
    4ce8:	50011f00 	andpl	r1, r1, r0, lsl #30
    4cec:	00007402 	andeq	r7, r0, r2, lsl #8
    4cf0:	0024b220 	eoreq	fp, r4, r0, lsr #4
    4cf4:	00248c10 	eoreq	r8, r4, r0, lsl ip
    4cf8:	50011f00 	andpl	r1, r1, r0, lsl #30
    4cfc:	1f2c7402 	svcne	0x002c7402
    4d00:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    4d04:	52011f00 	andpl	r1, r1, #0, 30
    4d08:	00007602 	andeq	r7, r0, r2, lsl #12
    4d0c:	60012400 	andvs	r2, r1, r0, lsl #8
    4d10:	01000014 	tsteq	r0, r4, lsl r0
    4d14:	010c0a78 	tsteq	ip, r8, ror sl
    4d18:	000000f3 	strdeq	r0, [r0], -r3
	...
    4d24:	01007d02 	tsteq	r0, r2, lsl #26
    4d28:	000009eb 	andeq	r0, r0, fp, ror #19
    4d2c:	0014b219 	andseq	fp, r4, r9, lsl r2
    4d30:	0a780100 	beq	1e05138 <__RAM_SIZE+0x1d05138>
    4d34:	0003fe3a 	andeq	pc, r3, sl, lsr lr	; <UNPREDICTABLE>
    4d38:	00385600 	eorseq	r5, r8, r0, lsl #12
    4d3c:	00384e00 	eorseq	r4, r8, r0, lsl #28
    4d40:	1cd11a00 	vldmiane	r1, {s3-s2}
    4d44:	7a010000 	bvc	44d4c <__HEAP_SIZE+0x43d4c>
    4d48:	00f3100a 	rscseq	r1, r3, sl
    4d4c:	38920000 	ldmcc	r2, {}	; <UNPREDICTABLE>
    4d50:	38900000 	ldmcc	r0, {}	; <UNPREDICTABLE>
    4d54:	b11a0000 	tstlt	sl, r0
    4d58:	01000014 	tsteq	r0, r4, lsl r0
    4d5c:	9a150a7b 	bls	547750 <__RAM_SIZE+0x447750>
    4d60:	ae000006 	cdpge	0, 0, cr0, cr0, cr6, {0}
    4d64:	a6000038 			; <UNDEFINED> instruction: 0xa6000038
    4d68:	00000038 	andeq	r0, r0, r8, lsr r0
    4d6c:	00112d18 	andseq	r2, r1, r8, lsl sp
    4d70:	0a630100 	beq	18c5178 <__RAM_SIZE+0x17c5178>
    4d74:	00f30113 	rscseq	r0, r3, r3, lsl r1
	...
    4d80:	38e80000 	stmiacc	r8!, {}^	; <UNPREDICTABLE>
    4d84:	47010000 	strmi	r0, [r1, -r0]
    4d88:	1900000a 	stmdbne	r0, {r1, r3}
    4d8c:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    4d90:	330a6301 	movwcc	r6, #41729	; 0xa301
    4d94:	00000689 	andeq	r0, r0, r9, lsl #13
    4d98:	00003912 	andeq	r3, r0, r2, lsl r9
    4d9c:	00003908 	andeq	r3, r0, r8, lsl #18
    4da0:	001cd11a 	andseq	sp, ip, sl, lsl r1
    4da4:	0a650100 	beq	19451ac <__RAM_SIZE+0x18451ac>
    4da8:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4dac:	00395900 	eorseq	r5, r9, r0, lsl #18
    4db0:	00395700 	eorseq	r5, r9, r0, lsl #14
    4db4:	00001d00 	andeq	r1, r0, r0, lsl #26
    4db8:	24700000 	ldrbtcs	r0, [r0], #-0
    4dbc:	001d0000 	andseq	r0, sp, r0
    4dc0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    4dc4:	00000024 	andeq	r0, r0, r4, lsr #32
    4dc8:	15c80124 	strbne	r0, [r8, #292]	; 0x124
    4dcc:	4b010000 	blmi	44dd4 <__HEAP_SIZE+0x43dd4>
    4dd0:	f3010c0a 			; <UNDEFINED> instruction: 0xf3010c0a
	...
    4ddc:	02000000 	andeq	r0, r0, #0
    4de0:	9f01007d 	svcls	0x0001007d
    4de4:	1900000a 	stmdbne	r0, {r1, r3}
    4de8:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    4dec:	3b0a4b01 	blcc	2979f8 <__RAM_SIZE+0x1979f8>
    4df0:	000003fe 	strdeq	r0, [r0], -lr
    4df4:	00003974 	andeq	r3, r0, r4, ror r9
    4df8:	0000396c 	andeq	r3, r0, ip, ror #18
    4dfc:	001cd125 	andseq	sp, ip, r5, lsr #2
    4e00:	0a4d0100 	beq	1345208 <__RAM_SIZE+0x1245208>
    4e04:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4e08:	b11a0000 	tstlt	sl, r0
    4e0c:	01000014 	tsteq	r0, r4, lsl r0
    4e10:	9a150a4e 	bls	547750 <__RAM_SIZE+0x447750>
    4e14:	b6000006 	strlt	r0, [r0], -r6
    4e18:	ae000039 	mcrge	0, 0, r0, cr0, cr9, {1}
    4e1c:	00000039 	andeq	r0, r0, r9, lsr r0
    4e20:	000ef018 	andeq	pc, lr, r8, lsl r0	; <UNPREDICTABLE>
    4e24:	0a360100 	beq	d8522c <__RAM_SIZE+0xc8522c>
    4e28:	00f30113 	rscseq	r0, r3, r3, lsl r1
    4e2c:	20fa0000 	rscscs	r0, sl, r0
    4e30:	21141000 	tstcs	r4, r0
    4e34:	39f01000 	ldmibcc	r0!, {ip}^
    4e38:	fb010000 	blx	44e42 <__HEAP_SIZE+0x43e42>
    4e3c:	1900000a 	stmdbne	r0, {r1, r3}
    4e40:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    4e44:	340a3601 	strcc	r3, [sl], #-1537	; 0xfffff9ff
    4e48:	00000689 	andeq	r0, r0, r9, lsl #13
    4e4c:	00003a1a 	andeq	r3, r0, sl, lsl sl
    4e50:	00003a10 	andeq	r3, r0, r0, lsl sl
    4e54:	001cd11a 	andseq	sp, ip, sl, lsl r1
    4e58:	0a380100 	beq	e05260 <__RAM_SIZE+0xd05260>
    4e5c:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4e60:	003a6100 	eorseq	r6, sl, r0, lsl #2
    4e64:	003a5f00 	eorseq	r5, sl, r0, lsl #30
    4e68:	21021d00 	tstcs	r2, r0, lsl #26
    4e6c:	24701000 	ldrbtcs	r1, [r0], #-0
    4e70:	0c1d0000 	ldceq	0, cr0, [sp], {-0}
    4e74:	7e100021 	cdpvc	0, 1, cr0, cr0, cr1, {1}
    4e78:	00000024 	andeq	r0, r0, r4, lsr #32
    4e7c:	0015a626 	andseq	sl, r5, r6, lsr #12
    4e80:	09be0100 	ldmibeq	lr!, {r8}
    4e84:	2206010d 	andcs	r0, r6, #1073741827	; 0x40000003
    4e88:	22881000 	addcs	r1, r8, #0
    4e8c:	3a741000 	bcc	1d08e94 <__RAM_SIZE+0x1c08e94>
    4e90:	ed010000 	stc	0, cr0, [r1, #-0]
    4e94:	1900000b 	stmdbne	r0, {r0, r1, r3}
    4e98:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    4e9c:	2d09be01 	stccs	14, cr11, [r9, #-4]
    4ea0:	0000069a 	muleq	r0, sl, r6
    4ea4:	00003a98 	muleq	r0, r8, sl
    4ea8:	00003a94 	muleq	r0, r4, sl
    4eac:	00220e1c 	eoreq	r0, r2, ip, lsl lr
    4eb0:	00224e10 	eoreq	r4, r2, r0, lsl lr
    4eb4:	000b8810 	andeq	r8, fp, r0, lsl r8
    4eb8:	0e0f1a00 	vmlaeq.f32	s2, s30, s0
    4ebc:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    4ec0:	00c01009 	sbceq	r1, r0, r9
    4ec4:	3aba0000 	bcc	fee84ecc <__StackTop+0xc6d84ecc>
    4ec8:	3ab60000 	bcc	fed84ed0 <__StackTop+0xc6c84ed0>
    4ecc:	221e0000 	andscs	r0, lr, #0
    4ed0:	61100022 	tstvs	r0, r2, lsr #32
    4ed4:	61000024 	tstvs	r0, r4, lsr #32
    4ed8:	1f00000b 	svcne	0x0000000b
    4edc:	75025001 	strvc	r5, [r2, #-1]
    4ee0:	381e002c 	ldmdacc	lr, {r2, r3, r5}
    4ee4:	b4100022 	ldrlt	r0, [r0], #-34	; 0xffffffde
    4ee8:	75000005 	strvc	r0, [r0, #-5]
    4eec:	1f00000b 	svcne	0x0000000b
    4ef0:	75025001 	strvc	r5, [r2, #-1]
    4ef4:	401d0000 	andsmi	r0, sp, r0
    4ef8:	9b100022 	blls	404f88 <__RAM_SIZE+0x304f88>
    4efc:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    4f00:	10002246 	andne	r2, r0, r6, asr #4
    4f04:	0000249b 	muleq	r0, fp, r4
    4f08:	22561c00 	subscs	r1, r6, #0, 24
    4f0c:	22821000 	addcs	r1, r2, #0
    4f10:	0bc81000 	bleq	ff208f18 <__StackTop+0xc7108f18>
    4f14:	161a0000 	ldrne	r0, [sl], -r0
    4f18:	01000016 	tsteq	r0, r6, lsl r0
    4f1c:	c0100a19 	andsgt	r0, r0, r9, lsl sl
    4f20:	dc000000 	stcle	0, cr0, [r0], {-0}
    4f24:	d800003a 	stmdale	r0, {r1, r3, r4, r5}
    4f28:	1e00003a 	mcrne	0, 0, r0, cr0, cr10, {1}
    4f2c:	10002272 	andne	r2, r0, r2, ror r2
    4f30:	00002461 	andeq	r2, r0, r1, ror #8
    4f34:	00000bbe 			; <UNDEFINED> instruction: 0x00000bbe
    4f38:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f3c:	1d001075 	stcne	0, cr1, [r0, #-468]	; 0xfffffe2c
    4f40:	1000227a 	andne	r2, r0, sl, ror r2
    4f44:	0000249b 	muleq	r0, fp, r4
    4f48:	220e1d00 	andcs	r1, lr, #0, 26
    4f4c:	24701000 	ldrbtcs	r1, [r0], #-0
    4f50:	521d0000 	andspl	r0, sp, #0
    4f54:	7e100022 	cdpvc	0, 1, cr0, cr0, cr2, {1}
    4f58:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    4f5c:	10002256 	andne	r2, r0, r6, asr r2
    4f60:	00002470 	andeq	r2, r0, r0, ror r4
    4f64:	0022861d 	eoreq	r8, r2, sp, lsl r6
    4f68:	00247e10 	eoreq	r7, r4, r0, lsl lr
    4f6c:	45260000 	strmi	r0, [r6, #-0]!
    4f70:	01000015 	tsteq	r0, r5, lsl r0
    4f74:	010d09a9 	smlatbeq	sp, r9, r9, r0
    4f78:	1000218a 	andne	r2, r0, sl, lsl #3
    4f7c:	100021ae 	andne	r2, r0, lr, lsr #3
    4f80:	00003afa 	strdeq	r3, [r0], -sl
    4f84:	000c3c01 	andeq	r3, ip, r1, lsl #24
    4f88:	14b11900 	ldrtne	r1, [r1], #2304	; 0x900
    4f8c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    4f90:	069a3309 	ldreq	r3, [sl], r9, lsl #6
    4f94:	3b2e0000 	blcc	b84f9c <__RAM_SIZE+0xa84f9c>
    4f98:	3b260000 	blcc	984fa0 <__RAM_SIZE+0x884fa0>
    4f9c:	00190000 	andseq	r0, r9, r0
    4fa0:	0100000f 	tsteq	r0, pc
    4fa4:	a83009aa 	ldmdage	r0!, {r1, r3, r5, r7, r8, fp}
    4fa8:	6d000000 	stcvs	0, cr0, [r0, #-0]
    4fac:	6500003b 	strvs	r0, [r0, #-59]	; 0xffffffc5
    4fb0:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    4fb4:	100021aa 	andne	r2, r0, sl, lsr #3
    4fb8:	000024aa 	andeq	r2, r0, sl, lsr #9
    4fbc:	102a1800 	eorne	r1, sl, r0, lsl #16
    4fc0:	56010000 	strpl	r0, [r1], -r0
    4fc4:	f3011309 	vcgt.u8	d1, d1, d9
    4fc8:	14000000 	strne	r0, [r0], #-0
    4fcc:	8a100021 	bhi	405058 <__RAM_SIZE+0x305058>
    4fd0:	a4100021 	ldrge	r0, [r0], #-33	; 0xffffffdf
    4fd4:	0100003b 	tsteq	r0, fp, lsr r0
    4fd8:	00000ce0 	andeq	r0, r0, r0, ror #25
    4fdc:	0014b119 	andseq	fp, r4, r9, lsl r1
    4fe0:	09560100 	ldmdbeq	r6, {r8}^
    4fe4:	00069a37 	andeq	r9, r6, r7, lsr sl
    4fe8:	003bd400 	eorseq	sp, fp, r0, lsl #8
    4fec:	003bc400 	eorseq	ip, fp, r0, lsl #8
    4ff0:	14331900 	ldrtne	r1, [r3], #-2304	; 0xfffff700
    4ff4:	57010000 	strpl	r0, [r1, -r0]
    4ff8:	00b43409 	adcseq	r3, r4, r9, lsl #8
    4ffc:	3c440000 	marcc	acc0, r0, r4
    5000:	3c340000 	ldccc	0, cr0, [r4], #-0
    5004:	fd190000 	ldc2	0, cr0, [r9, #-0]
    5008:	01000015 	tsteq	r0, r5, lsl r0
    500c:	ff380958 			; <UNDEFINED> instruction: 0xff380958
    5010:	b4000000 	strlt	r0, [r0], #-0
    5014:	b000003c 	andlt	r0, r0, ip, lsr r0
    5018:	1a00003c 	bne	5110 <__HEAP_SIZE+0x4110>
    501c:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5020:	10095a01 	andne	r5, r9, r1, lsl #20
    5024:	000000f3 	strdeq	r0, [r0], -r3
    5028:	00003cdc 	ldrdeq	r3, [r0], -ip
    502c:	00003cd2 	ldrdeq	r3, [r0], -r2
    5030:	000f2e1a 	andeq	r2, pc, sl, lsl lr	; <UNPREDICTABLE>
    5034:	095b0100 	ldmdbeq	fp, {r8}^
    5038:	00010411 	andeq	r0, r1, r1, lsl r4
    503c:	003d2400 	eorseq	r2, sp, r0, lsl #8
    5040:	003d1e00 	eorseq	r1, sp, r0, lsl #28
    5044:	21321d00 	teqcs	r2, r0, lsl #26
    5048:	24b71000 	ldrtcs	r1, [r7], #0
    504c:	401d0000 	andsmi	r0, sp, r0
    5050:	aa100021 	bge	4050dc <__RAM_SIZE+0x3050dc>
    5054:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5058:	1000215c 	andne	r2, r0, ip, asr r1
    505c:	000024aa 	andeq	r2, r0, sl, lsr #9
    5060:	0f092700 	svceq	0x00092700
    5064:	3d010000 	stccc	0, cr0, [r1, #-0]
    5068:	04011809 	streq	r1, [r1], #-2057	; 0xfffff7f7
    506c:	00000001 	andeq	r0, r0, r1
    5070:	00000000 	andeq	r0, r0, r0
    5074:	02000000 	andeq	r0, r0, #0
    5078:	2901007d 	stmdbcs	r1, {r0, r2, r3, r4, r5, r6}
    507c:	1900000d 	stmdbne	r0, {r0, r2, r3}
    5080:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    5084:	54093d01 	strpl	r3, [r9], #-3329	; 0xfffff2ff
    5088:	0000068f 	andeq	r0, r0, pc, lsl #13
    508c:	00003d55 	andeq	r3, r0, r5, asr sp
    5090:	00003d4f 	andeq	r3, r0, pc, asr #26
    5094:	0012ed1a 	andseq	lr, r2, sl, lsl sp
    5098:	093f0100 	ldmdbeq	pc!, {r8}	; <UNPREDICTABLE>
    509c:	00010415 	andeq	r0, r1, r5, lsl r4
    50a0:	003d8300 	eorseq	r8, sp, r0, lsl #6
    50a4:	003d8100 	eorseq	r8, sp, r0, lsl #2
    50a8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    50ac:	00001194 	muleq	r0, r4, r1
    50b0:	0d093101 	stfeqs	f3, [r9, #-4]
    50b4:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    50c0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    50c4:	000d5e01 	andeq	r5, sp, r1, lsl #28
    50c8:	14b21900 	ldrtne	r1, [r2], #2304	; 0x900
    50cc:	31010000 	mrscc	r0, (UNDEF: 1)
    50d0:	03f23209 	mvnseq	r3, #-1879048192	; 0x90000000
    50d4:	3d9a0000 	ldccc	0, cr0, [sl]
    50d8:	3d960000 	ldccc	0, cr0, [r6]
    50dc:	24000000 	strcs	r0, [r0], #-0
    50e0:	00141b01 	andseq	r1, r4, r1, lsl #22
    50e4:	09270100 	stmdbeq	r7!, {r8}
    50e8:	0104010d 	tsteq	r4, sp, lsl #2
	...
    50f4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    50f8:	0d930100 	ldfeqs	f0, [r3]
    50fc:	b2190000 	andslt	r0, r9, #0
    5100:	01000014 	tsteq	r0, r4, lsl r0
    5104:	f2340927 	vmla.i<illegal width 64>	d0, d4, d23
    5108:	bf000003 	svclt	0x00000003
    510c:	bb00003d 	bllt	5208 <__HEAP_SIZE+0x4208>
    5110:	0000003d 	andeq	r0, r0, sp, lsr r0
    5114:	123a0124 	eorsne	r0, sl, #36, 2
    5118:	1b010000 	blne	45120 <__HEAP_SIZE+0x44120>
    511c:	d6010d09 	strle	r0, [r1], -r9, lsl #26
	...
    5128:	02000000 	andeq	r0, r0, #0
    512c:	c801007d 	stmdagt	r1, {r0, r2, r3, r4, r5, r6}
    5130:	1900000d 	stmdbne	r0, {r0, r2, r3}
    5134:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    5138:	30091b01 	andcc	r1, r9, r1, lsl #22
    513c:	000003f2 	strdeq	r0, [r0], -r2
    5140:	00003de4 	andeq	r3, r0, r4, ror #27
    5144:	00003de0 	andeq	r3, r0, r0, ror #27
    5148:	bd012800 	stclt	8, cr2, [r1, #-0]
    514c:	0100000d 	tsteq	r0, sp
    5150:	010a090c 	tsteq	sl, ip, lsl #18
	...
    515c:	01007d02 	tsteq	r0, r2, lsl #26
    5160:	00000e02 	andeq	r0, r0, r2, lsl #28
    5164:	0014b229 	andseq	fp, r4, r9, lsr #4
    5168:	090c0100 	stmdbeq	ip, {r8}
    516c:	0003f22e 	andeq	pc, r3, lr, lsr #4
    5170:	29500100 	ldmdbcs	r0, {r8}^
    5174:	000013c9 	andeq	r1, r0, r9, asr #7
    5178:	2c090d01 	stccs	13, cr0, [r9], {1}
    517c:	00000104 	andeq	r0, r0, r4, lsl #2
    5180:	24005101 	strcs	r5, [r0], #-257	; 0xfffffeff
    5184:	00133d01 	andseq	r3, r3, r1, lsl #26
    5188:	08fe0100 	ldmeq	lr!, {r8}^
    518c:	01040111 	tsteq	r4, r1, lsl r1
	...
    5198:	7d020000 	stcvc	0, cr0, [r2, #-0]
    519c:	0e370100 	rsfeqs	f0, f7, f0
    51a0:	b2190000 	andslt	r0, r9, #0
    51a4:	01000014 	tsteq	r0, r4, lsl r0
    51a8:	f23608fe 	vtst.<illegal width 64>	q0, q11, q15
    51ac:	09000003 	stmdbeq	r0, {r0, r1}
    51b0:	0500003e 	streq	r0, [r0, #-62]	; 0xffffffc2
    51b4:	0000003e 	andeq	r0, r0, lr, lsr r0
    51b8:	0e610123 	poweqsp	f0, f1, f3
    51bc:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    51c0:	00010608 	andeq	r0, r1, r8, lsl #12
    51c4:	00000000 	andeq	r0, r0, r0
    51c8:	2a000000 	bcs	51d0 <__HEAP_SIZE+0x41d0>
    51cc:	0100003e 	tsteq	r0, lr, lsr r0
    51d0:	00000e87 	andeq	r0, r0, r7, lsl #29
    51d4:	0014b219 	andseq	fp, r4, r9, lsl r2
    51d8:	08ce0100 	stmiaeq	lr, {r8}^
    51dc:	0003f222 	andeq	pc, r3, r2, lsr #4
    51e0:	003e5200 	eorseq	r5, lr, r0, lsl #4
    51e4:	003e4a00 	eorseq	r4, lr, r0, lsl #20
    51e8:	14b11a00 	ldrtne	r1, [r1], #2560	; 0xa00
    51ec:	d0010000 	andle	r0, r1, r0
    51f0:	069a1508 	ldreq	r1, [sl], r8, lsl #10
    51f4:	3e940000 	cdpcc	0, 9, cr0, cr4, cr0, {0}
    51f8:	3e8c0000 	cdpcc	0, 8, cr0, cr12, cr0, {0}
    51fc:	001d0000 	andseq	r0, sp, r0
    5200:	c6000000 	strgt	r0, [r0], -r0
    5204:	00000024 	andeq	r0, r0, r4, lsr #32
    5208:	10cf0124 	sbcne	r0, pc, r4, lsr #2
    520c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    5210:	04010d08 	streq	r0, [r1], #-3336	; 0xfffff2f8
    5214:	00000001 	andeq	r0, r0, r1
    5218:	00000000 	andeq	r0, r0, r0
    521c:	02000000 	andeq	r0, r0, #0
    5220:	e601007d 			; <UNDEFINED> instruction: 0xe601007d
    5224:	1900000e 	stmdbne	r0, {r1, r2, r3}
    5228:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    522c:	4008be01 	andmi	fp, r8, r1, lsl #28
    5230:	000003fe 	strdeq	r0, [r0], -lr
    5234:	00003ed2 	ldrdeq	r3, [r0], -r2
    5238:	00003ece 	andeq	r3, r0, lr, asr #29
    523c:	000e581a 	andeq	r5, lr, sl, lsl r8
    5240:	08c00100 	stmiaeq	r0, {r8}^
    5244:	00010411 	andeq	r0, r1, r1, lsl r4
    5248:	003ef500 	eorseq	pc, lr, r0, lsl #10
    524c:	003ef300 	eorseq	pc, lr, r0, lsl #6
    5250:	14b11a00 	ldrtne	r1, [r1], #2560	; 0xa00
    5254:	c1010000 	mrsgt	r0, (UNDEF: 1)
    5258:	069a1508 	ldreq	r1, [sl], r8, lsl #10
    525c:	3f0c0000 	svccc	0x000c0000
    5260:	3f080000 	svccc	0x00080000
    5264:	21000000 	mrscs	r0, (UNDEF: 0)
    5268:	000df801 	andeq	pc, sp, r1, lsl #16
    526c:	08a90100 	stmiaeq	r9!, {r8}
    5270:	0104010d 	tsteq	r4, sp, lsl #2
	...
    527c:	3f2d0000 	svccc	0x002d0000
    5280:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    5284:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    5288:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    528c:	3908a901 	stmdbcc	r8, {r0, r8, fp, sp, pc}
    5290:	000003fe 	strdeq	r0, [r0], -lr
    5294:	00003f53 	andeq	r3, r0, r3, asr pc
    5298:	00003f4d 	andeq	r3, r0, sp, asr #30
    529c:	000e581a 	andeq	r5, lr, sl, lsl r8
    52a0:	08ab0100 	stmiaeq	fp!, {r8}
    52a4:	00010411 	andeq	r0, r1, r1, lsl r4
    52a8:	003f8100 	eorseq	r8, pc, r0, lsl #2
    52ac:	003f7f00 	eorseq	r7, pc, r0, lsl #30
    52b0:	14b11a00 	ldrtne	r1, [r1], #2560	; 0xa00
    52b4:	ac010000 	stcge	0, cr0, [r1], {-0}
    52b8:	069a1508 	ldreq	r1, [sl], r8, lsl #10
    52bc:	3f9a0000 	svccc	0x009a0000
    52c0:	3f940000 	svccc	0x00940000
    52c4:	001d0000 	andseq	r0, sp, r0
    52c8:	70000000 	andvc	r0, r0, r0
    52cc:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    52d0:	00000000 	andeq	r0, r0, r0
    52d4:	0000247e 	andeq	r2, r0, lr, ror r4
    52d8:	79012100 	stmdbvc	r1, {r8, sp}
    52dc:	01000014 	tsteq	r0, r4, lsl r0
    52e0:	010d0895 			; <UNDEFINED> instruction: 0x010d0895
    52e4:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    52f0:	00003fc6 	andeq	r3, r0, r6, asr #31
    52f4:	000fb501 	andeq	fp, pc, r1, lsl #10
    52f8:	14b21900 	ldrtne	r1, [r2], #2304	; 0x900
    52fc:	95010000 	strls	r0, [r1, #-0]
    5300:	03fe3908 	mvnseq	r3, #8, 18	; 0x20000
    5304:	3fec0000 	svccc	0x00ec0000
    5308:	3fe60000 	svccc	0x00e60000
    530c:	581a0000 	ldmdapl	sl, {}	; <UNPREDICTABLE>
    5310:	0100000e 	tsteq	r0, lr
    5314:	04110897 	ldreq	r0, [r1], #-2199	; 0xfffff769
    5318:	1a000001 	bne	5324 <__HEAP_SIZE+0x4324>
    531c:	18000040 	stmdane	r0, {r6}
    5320:	1d000040 	stcne	0, cr0, [r0, #-256]	; 0xffffff00
    5324:	00000000 	andeq	r0, r0, r0
    5328:	00002470 	andeq	r2, r0, r0, ror r4
    532c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5330:	00247e00 	eoreq	r7, r4, r0, lsl #28
    5334:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5338:	0000151a 	andeq	r1, r0, sl, lsl r5
    533c:	0c085701 	stceq	7, cr5, [r8], {1}
    5340:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    534c:	00402d00 	subeq	r2, r0, r0, lsl #26
    5350:	10870100 	addne	r0, r7, r0, lsl #2
    5354:	b2190000 	andslt	r0, r9, #0
    5358:	01000014 	tsteq	r0, r4, lsl r0
    535c:	f22d0857 	vtst.32	q0, <illegal reg q6.5>, <illegal reg q3.5>
    5360:	57000003 	strpl	r0, [r0, -r3]
    5364:	4d000040 	stcmi	0, cr0, [r0, #-256]	; 0xffffff00
    5368:	19000040 	stmdbne	r0, {r6}
    536c:	00000f00 	andeq	r0, r0, r0, lsl #30
    5370:	2c085801 	stccs	8, cr5, [r8], {1}
    5374:	000000a8 	andeq	r0, r0, r8, lsr #1
    5378:	000040a0 	andeq	r4, r0, r0, lsr #1
    537c:	0000409c 	muleq	r0, ip, r0
    5380:	001cd11a 	andseq	sp, ip, sl, lsl r1
    5384:	085a0100 	ldmdaeq	sl, {r8}^
    5388:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    538c:	0040c200 	subeq	ip, r0, r0, lsl #4
    5390:	0040be00 	subeq	fp, r0, r0, lsl #28
    5394:	0e791a00 	vaddeq.f32	s3, s18, s0
    5398:	5b010000 	blpl	453a0 <__HEAP_SIZE+0x443a0>
    539c:	01041108 	tsteq	r4, r8, lsl #2
    53a0:	40e90000 	rscmi	r0, r9, r0
    53a4:	40e10000 	rscmi	r0, r1, r0
    53a8:	b21a0000 	andslt	r0, sl, #0
    53ac:	01000012 	tsteq	r0, r2, lsl r0
    53b0:	2b0e085c 	blcs	387528 <__RAM_SIZE+0x287528>
    53b4:	1f000005 	svcne	0x00000005
    53b8:	1d000041 	stcne	0, cr0, [r0, #-260]	; 0xfffffefc
    53bc:	1a000041 	bne	54c8 <__HEAP_SIZE+0x44c8>
    53c0:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    53c4:	15085d01 	strne	r5, [r8, #-3329]	; 0xfffff2ff
    53c8:	0000069a 	muleq	r0, sl, r6
    53cc:	0000413c 	andeq	r4, r0, ip, lsr r1
    53d0:	00004132 	andeq	r4, r0, r2, lsr r1
    53d4:	0000001d 	andeq	r0, r0, sp, lsl r0
    53d8:	0024d400 	eoreq	sp, r4, r0, lsl #8
    53dc:	00001e00 	andeq	r1, r0, r0, lsl #28
    53e0:	24e20000 	strbtcs	r0, [r2], #0
    53e4:	10700000 	rsbsne	r0, r0, r0
    53e8:	011f0000 	tsteq	pc, r0
    53ec:	00750250 	rsbseq	r0, r5, r0, asr r2
    53f0:	00002000 	andeq	r2, r0, r0
    53f4:	0bed0000 	bleq	ffb453fc <__StackTop+0xc7a453fc>
    53f8:	011f0000 	tsteq	pc, r0
    53fc:	00740250 	rsbseq	r0, r4, r0, asr r2
    5400:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5404:	00000076 	andeq	r0, r0, r6, ror r0
    5408:	0d030121 	stfeqs	f0, [r3, #-132]	; 0xffffff7c
    540c:	f3010000 	vhadd.u8	d0, d1, d0
    5410:	f3010c07 			; <UNDEFINED> instruction: 0xf3010c07
	...
    541c:	81000000 	mrshi	r0, (UNDEF: 0)
    5420:	01000041 	tsteq	r0, r1, asr #32
    5424:	000011d3 	ldrdeq	r1, [r0], -r3
    5428:	0014b219 	andseq	fp, r4, r9, lsl r2
    542c:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    5430:	0003f230 	andeq	pc, r3, r0, lsr r2	; <UNPREDICTABLE>
    5434:	0041bf00 	subeq	fp, r1, r0, lsl #30
    5438:	0041a100 	subeq	sl, r1, r0, lsl #2
    543c:	0f001900 	svceq	0x00001900
    5440:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    5444:	00a82f07 	adceq	r2, r8, r7, lsl #30
    5448:	42850000 	addmi	r0, r5, #0
    544c:	42810000 	addmi	r0, r1, #0
    5450:	2f190000 	svccs	0x00190000
    5454:	0100000d 	tsteq	r0, sp
    5458:	d93507f5 	ldmdble	r5!, {r0, r2, r4, r5, r6, r7, r8, r9, sl}
    545c:	a7000011 	smladge	r0, r1, r0, r0
    5460:	a3000042 	movwge	r0, #66	; 0x42
    5464:	1a000042 	bne	5574 <__HEAP_SIZE+0x4574>
    5468:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    546c:	1007f701 	andne	pc, r7, r1, lsl #14
    5470:	000000f3 	strdeq	r0, [r0], -r3
    5474:	000042c7 	andeq	r4, r0, r7, asr #5
    5478:	000042c5 	andeq	r4, r0, r5, asr #5
    547c:	000e791a 	andeq	r7, lr, sl, lsl r9
    5480:	07f80100 	ldrbeq	r0, [r8, r0, lsl #2]!
    5484:	00010411 	andeq	r0, r1, r1, lsl r4
    5488:	0042e200 	subeq	lr, r2, r0, lsl #4
    548c:	0042da00 	subeq	sp, r2, r0, lsl #20
    5490:	14b11a00 	ldrtne	r1, [r1], #2560	; 0xa00
    5494:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    5498:	069a1507 	ldreq	r1, [sl], r7, lsl #10
    549c:	43340000 	teqmi	r4, #0
    54a0:	43160000 	tstmi	r6, #0
    54a4:	b82a0000 	stmdalt	sl!, {}	; <UNPREDICTABLE>
    54a8:	b9000003 	stmdblt	r0, {r0, r1}
    54ac:	1a000011 	bne	54f8 <__HEAP_SIZE+0x44f8>
    54b0:	00000f2e 	andeq	r0, r0, lr, lsr #30
    54b4:	1b081501 	blne	20a8c0 <__RAM_SIZE+0x10a8c0>
    54b8:	00000115 	andeq	r0, r0, r5, lsl r1
    54bc:	000043fc 	strdeq	r4, [r0], -ip
    54c0:	000043f6 	strdeq	r4, [r0], -r6
    54c4:	0000002b 	andeq	r0, r0, fp, lsr #32
    54c8:	00000000 	andeq	r0, r0, r0
    54cc:	16161a00 	ldrne	r1, [r6], -r0, lsl #20
    54d0:	1a010000 	bne	454d8 <__HEAP_SIZE+0x444d8>
    54d4:	00d11a08 	sbcseq	r1, r1, r8, lsl #20
    54d8:	442d0000 	strtmi	r0, [sp], #-0
    54dc:	44270000 	strtmi	r0, [r7], #-0
    54e0:	001c0000 	andseq	r0, ip, r0
    54e4:	00000000 	andeq	r0, r0, r0
    54e8:	8d000000 	stchi	0, cr0, [r0, #-0]
    54ec:	1a000011 	bne	5538 <__HEAP_SIZE+0x4538>
    54f0:	000013d7 	ldrdeq	r1, [r0], -r7
    54f4:	11084401 	tstne	r8, r1, lsl #8
    54f8:	00000115 	andeq	r0, r0, r5, lsl r1
    54fc:	0000445c 	andeq	r4, r0, ip, asr r4
    5500:	00004458 	andeq	r4, r0, r8, asr r4
    5504:	0000001d 	andeq	r0, r0, sp, lsl r0
    5508:	00245200 	eoreq	r5, r4, r0, lsl #4
    550c:	001e0000 	andseq	r0, lr, r0
    5510:	ed000000 	stc	0, cr0, [r0, #-0]
    5514:	a700000b 	strge	r0, [r0, -fp]
    5518:	1f000011 	svcne	0x00000011
    551c:	74025001 	strvc	r5, [r2], #-1
    5520:	51011f00 	tstpl	r1, r0, lsl #30
    5524:	00007702 	andeq	r7, r0, r2, lsl #14
    5528:	00000020 	andeq	r0, r0, r0, lsr #32
    552c:	00246100 	eoreq	r6, r4, r0, lsl #2
    5530:	50011f00 	andpl	r1, r1, r0, lsl #30
    5534:	00107402 	andseq	r7, r0, r2, lsl #8
    5538:	001d0000 	andseq	r0, sp, r0
    553c:	d4000000 	strle	r0, [r0], #-0
    5540:	20000024 	andcs	r0, r0, r4, lsr #32
    5544:	00000000 	andeq	r0, r0, r0
    5548:	000024e2 	andeq	r2, r0, r2, ror #9
    554c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5550:	00000075 	andeq	r0, r0, r5, ror r0
    5554:	00f30407 	rscseq	r0, r3, r7, lsl #8
    5558:	d3060000 	movwle	r0, #24576	; 0x6000
    555c:	21000011 	tstcs	r0, r1, lsl r0
    5560:	000f7f01 	andeq	r7, pc, r1, lsl #30
    5564:	07550100 	ldrbeq	r0, [r5, -r0, lsl #2]
    5568:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    5574:	447a0000 	ldrbtmi	r0, [sl], #-0
    5578:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    557c:	19000013 	stmdbne	r0, {r0, r1, r4}
    5580:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    5584:	26075501 	strcs	r5, [r7], -r1, lsl #10
    5588:	000003f2 	strdeq	r0, [r0], -r2
    558c:	000044c2 	andeq	r4, r0, r2, asr #9
    5590:	000044be 			; <UNDEFINED> instruction: 0x000044be
    5594:	000f0019 	andeq	r0, pc, r9, lsl r0	; <UNPREDICTABLE>
    5598:	07560100 	ldrbeq	r0, [r6, -r0, lsl #2]
    559c:	0000a825 	andeq	sl, r0, r5, lsr #16
    55a0:	0044e400 	subeq	lr, r4, r0, lsl #8
    55a4:	0044e000 	subeq	lr, r4, r0
    55a8:	23e01900 	mvncs	r1, #0, 18
    55ac:	57010000 	strpl	r0, [r1, -r0]
    55b0:	011a2307 	tsteq	sl, r7, lsl #6
    55b4:	45040000 	strmi	r0, [r4, #-0]
    55b8:	45020000 	strmi	r0, [r2, #-0]
    55bc:	8a1a0000 	bhi	6855c4 <__RAM_SIZE+0x5855c4>
    55c0:	0100000f 	tsteq	r0, pc
    55c4:	f3100759 	vaba.u16	q0, q0, <illegal reg q4.5>
    55c8:	21000000 	mrscs	r0, (UNDEF: 0)
    55cc:	17000045 	strne	r0, [r0, -r5, asr #32]
    55d0:	22000045 	andcs	r0, r0, #69	; 0x45
    55d4:	00001f23 	andeq	r1, r0, r3, lsr #30
    55d8:	0f075a01 	svceq	0x00075a01
    55dc:	000003e6 	andeq	r0, r0, r6, ror #7
    55e0:	1a689102 	bne	1a299f0 <__RAM_SIZE+0x19299f0>
    55e4:	000012b2 			; <UNDEFINED> instruction: 0x000012b2
    55e8:	0e075b01 	vmlaeq.f64	d5, d7, d1
    55ec:	0000052b 	andeq	r0, r0, fp, lsr #10
    55f0:	00004566 	andeq	r4, r0, r6, ror #10
    55f4:	00004562 	andeq	r4, r0, r2, ror #10
    55f8:	0014b11a 	andseq	fp, r4, sl, lsl r1
    55fc:	075c0100 	ldrbeq	r0, [ip, -r0, lsl #2]
    5600:	00069a15 	andeq	r9, r6, r5, lsl sl
    5604:	00458800 	subeq	r8, r5, r0, lsl #16
    5608:	00458400 	subeq	r8, r5, r0, lsl #8
    560c:	03982a00 	orrseq	r2, r8, #0, 20
    5610:	13040000 	movwne	r0, #16384	; 0x4000
    5614:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    5618:	0100000f 	tsteq	r0, pc
    561c:	151f0772 	ldrne	r0, [pc, #-1906]	; 4eb2 <__HEAP_SIZE+0x3eb2>
    5620:	aa000001 	bge	562c <__HEAP_SIZE+0x462c>
    5624:	a6000045 	strge	r0, [r0], -r5, asr #32
    5628:	1e000045 	cdpne	0, 0, cr0, cr0, cr5, {2}
    562c:	00000000 	andeq	r0, r0, r0
    5630:	00000bed 	andeq	r0, r0, sp, ror #23
    5634:	000012c4 	andeq	r1, r0, r4, asr #5
    5638:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    563c:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    5640:	00760251 	rsbseq	r0, r6, r1, asr r2
    5644:	00001d00 	andeq	r1, r0, r0, lsl #26
    5648:	247e0000 	ldrbtcs	r0, [lr], #-0
    564c:	001e0000 	andseq	r0, lr, r0
    5650:	61000000 	mrsvs	r0, (UNDEF: 0)
    5654:	e1000024 	tst	r0, r4, lsr #32
    5658:	1f000012 	svcne	0x00000012
    565c:	74025001 	strvc	r5, [r2], #-1
    5660:	001d002c 	andseq	r0, sp, ip, lsr #32
    5664:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    5668:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    566c:	00000000 	andeq	r0, r0, r0
    5670:	0000247e 	andeq	r2, r0, lr, ror r4
    5674:	00000020 	andeq	r0, r0, r0, lsr #32
    5678:	0024fe00 	eoreq	pc, r4, r0, lsl #28
    567c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5680:	00689102 	rsbeq	r9, r8, r2, lsl #2
    5684:	00001e00 	andeq	r1, r0, r0, lsl #28
    5688:	0afb0000 	beq	ffec5690 <__StackTop+0xc7dc5690>
    568c:	13180000 	tstne	r8, #0
    5690:	011f0000 	tsteq	pc, r0
    5694:	00740250 	rsbseq	r0, r4, r0, asr r2
    5698:	00001d00 	andeq	r1, r0, r0, lsl #26
    569c:	250d0000 	strcs	r0, [sp, #-0]
    56a0:	001e0000 	andseq	r0, lr, r0
    56a4:	fb000000 	blx	56ae <__HEAP_SIZE+0x46ae>
    56a8:	3500000a 	strcc	r0, [r0, #-10]
    56ac:	1f000013 	svcne	0x00000013
    56b0:	74025001 	strvc	r5, [r2], #-1
    56b4:	001d0000 	andseq	r0, sp, r0
    56b8:	0d000000 	stceq	0, cr0, [r0, #-0]
    56bc:	1e000025 	cdpne	0, 0, cr0, cr0, cr5, {1}
    56c0:	00000000 	andeq	r0, r0, r0
    56c4:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    56c8:	00001352 	andeq	r1, r0, r2, asr r3
    56cc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    56d0:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    56d4:	00000000 	andeq	r0, r0, r0
    56d8:	00002470 	andeq	r2, r0, r0, ror r4
    56dc:	0000001d 	andeq	r0, r0, sp, lsl r0
    56e0:	00247e00 	eoreq	r7, r4, r0, lsl #28
    56e4:	00001d00 	andeq	r1, r0, r0, lsl #26
    56e8:	251c0000 	ldrcs	r0, [ip, #-0]
    56ec:	001d0000 	andseq	r0, sp, r0
    56f0:	70000000 	andvc	r0, r0, r0
    56f4:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    56f8:	00000000 	andeq	r0, r0, r0
    56fc:	0000247e 	andeq	r2, r0, lr, ror r4
    5700:	0000001e 	andeq	r0, r0, lr, lsl r0
    5704:	00252b00 	eoreq	r2, r5, r0, lsl #22
    5708:	00139900 	andseq	r9, r3, r0, lsl #18
    570c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5710:	1f689102 	svcne	0x00689102
    5714:	91025101 	tstls	r2, r1, lsl #2
    5718:	001e0064 	andseq	r0, lr, r4, rrx
    571c:	9f000000 	svcls	0x00000000
    5720:	ad00000a 	stcge	0, cr0, [r0, #-40]	; 0xffffffd8
    5724:	1f000013 	svcne	0x00000013
    5728:	74025001 	strvc	r5, [r2], #-1
    572c:	001e0000 	andseq	r0, lr, r0
    5730:	3a000000 	bcc	5738 <__HEAP_SIZE+0x4738>
    5734:	c1000025 	tstgt	r0, r5, lsr #32
    5738:	1f000013 	svcne	0x00000013
    573c:	74025001 	strvc	r5, [r2], #-1
    5740:	001e002c 	andseq	r0, lr, ip, lsr #32
    5744:	fb000000 	blx	574e <__HEAP_SIZE+0x474e>
    5748:	d500000a 	strle	r0, [r0, #-10]
    574c:	1f000013 	svcne	0x00000013
    5750:	74025001 	strvc	r5, [r2], #-1
    5754:	001d0000 	andseq	r0, sp, r0
    5758:	0d000000 	stceq	0, cr0, [r0, #-0]
    575c:	1d000025 	stcne	0, cr0, [r0, #-148]	; 0xffffff6c
    5760:	00000000 	andeq	r0, r0, r0
    5764:	000024f0 	strdeq	r2, [r0], -r0
    5768:	e0012100 	and	r2, r1, r0, lsl #2
    576c:	0100000f 	tsteq	r0, pc
    5770:	010c0674 	tsteq	ip, r4, ror r6
    5774:	000000f3 	strdeq	r0, [r0], -r3
	...
    5780:	000045c8 	andeq	r4, r0, r8, asr #11
    5784:	00163901 	andseq	r3, r6, r1, lsl #18
    5788:	14b21900 	ldrtne	r1, [r2], #2304	; 0x900
    578c:	74010000 	strvc	r0, [r1], #-0
    5790:	03f22f06 	mvnseq	r2, #6, 30
    5794:	46100000 	ldrmi	r0, [r0], -r0
    5798:	460c0000 	strmi	r0, [ip], -r0
    579c:	e0190000 	ands	r0, r9, r0
    57a0:	01000023 	tsteq	r0, r3, lsr #32
    57a4:	1a2c0675 	bne	b07180 <__RAM_SIZE+0xa07180>
    57a8:	30000001 	andcc	r0, r0, r1
    57ac:	2e000046 	cdpcs	0, 0, cr0, cr0, cr6, {2}
    57b0:	1a000046 	bne	58d0 <__HEAP_SIZE+0x48d0>
    57b4:	00000f8a 	andeq	r0, r0, sl, lsl #31
    57b8:	10067701 	andne	r7, r6, r1, lsl #14
    57bc:	000000f3 	strdeq	r0, [r0], -r3
    57c0:	0000464b 	andeq	r4, r0, fp, asr #12
    57c4:	00004643 	andeq	r4, r0, r3, asr #12
    57c8:	001f2322 	andseq	r2, pc, r2, lsr #6
    57cc:	06780100 	ldrbteq	r0, [r8], -r0, lsl #2
    57d0:	0003e60f 	andeq	lr, r3, pc, lsl #12
    57d4:	68910200 	ldmvs	r1, {r9}
    57d8:	0014b11a 	andseq	fp, r4, sl, lsl r1
    57dc:	06790100 	ldrbteq	r0, [r9], -r0, lsl #2
    57e0:	00069a15 	andeq	r9, r6, r5, lsl sl
    57e4:	00468500 	subeq	r8, r6, r0, lsl #10
    57e8:	00468100 	subeq	r8, r6, r0, lsl #2
    57ec:	13611a00 	cmnne	r1, #0, 20
    57f0:	7c010000 	stcvc	0, cr0, [r1], {-0}
    57f4:	00f31406 	rscseq	r1, r3, r6, lsl #8
    57f8:	46ab0000 	strtmi	r0, [fp], r0
    57fc:	46a30000 	strtmi	r0, [r3], r0
    5800:	782a0000 	stmdavc	sl!, {}	; <UNPREDICTABLE>
    5804:	e8000003 	stmda	r0, {r0, r1}
    5808:	1a000014 	bne	5860 <__HEAP_SIZE+0x4860>
    580c:	00001319 	andeq	r1, r0, r9, lsl r3
    5810:	1f069501 	svcne	0x00069501
    5814:	00000115 	andeq	r0, r0, r5, lsl r1
    5818:	000046ea 	andeq	r4, r0, sl, ror #13
    581c:	000046e0 	andeq	r4, r0, r0, ror #13
    5820:	0000001d 	andeq	r0, r0, sp, lsl r0
    5824:	00247e00 	eoreq	r7, r4, r0, lsl #28
    5828:	00001d00 	andeq	r1, r0, r0, lsl #26
    582c:	25490000 	strbcs	r0, [r9, #-0]
    5830:	001e0000 	andseq	r0, lr, r0
    5834:	61000000 	mrsvs	r0, (UNDEF: 0)
    5838:	c5000024 	strgt	r0, [r0, #-36]	; 0xffffffdc
    583c:	1f000014 	svcne	0x00000014
    5840:	74025001 	strvc	r5, [r2], #-1
    5844:	001d0010 	andseq	r0, sp, r0, lsl r0
    5848:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    584c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5850:	00000000 	andeq	r0, r0, r0
    5854:	0000247e 	andeq	r2, r0, lr, ror r4
    5858:	00000020 	andeq	r0, r0, r0, lsr #32
    585c:	0024fe00 	eoreq	pc, r4, r0, lsl #28
    5860:	50011f00 	andpl	r1, r1, r0, lsl #30
    5864:	00689102 	rsbeq	r9, r8, r2, lsl #2
    5868:	00001c00 	andeq	r1, r0, r0, lsl #24
    586c:	00000000 	andeq	r0, r0, r0
    5870:	15280000 	strne	r0, [r8, #-0]!
    5874:	2c1a0000 	ldccs	0, cr0, [sl], {-0}
    5878:	01000015 	tsteq	r0, r5, lsl r0
    587c:	04290730 	strteq	r0, [r9], #-1840	; 0xfffff8d0
    5880:	3b000001 	blcc	588c <__HEAP_SIZE+0x488c>
    5884:	37000047 	strcc	r0, [r0, -r7, asr #32]
    5888:	1e000047 	cdpne	0, 0, cr0, cr0, cr7, {2}
    588c:	00000000 	andeq	r0, r0, r0
    5890:	00000ce0 	andeq	r0, r0, r0, ror #25
    5894:	0000151e 	andeq	r1, r0, lr, lsl r5
    5898:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    589c:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    58a0:	00000000 	andeq	r0, r0, r0
    58a4:	00002558 	andeq	r2, r0, r8, asr r5
    58a8:	00001d00 	andeq	r1, r0, r0, lsl #26
    58ac:	24700000 	ldrbtcs	r0, [r0], #-0
    58b0:	001d0000 	andseq	r0, sp, r0
    58b4:	67000000 	strvs	r0, [r0, -r0]
    58b8:	1d000025 	stcne	0, cr0, [r0, #-148]	; 0xffffff6c
    58bc:	00000000 	andeq	r0, r0, r0
    58c0:	0000247e 	andeq	r2, r0, lr, ror r4
    58c4:	0000001e 	andeq	r0, r0, lr, lsl r0
    58c8:	000afb00 	andeq	pc, sl, r0, lsl #22
    58cc:	00155700 	andseq	r5, r5, r0, lsl #14
    58d0:	50011f00 	andpl	r1, r1, r0, lsl #30
    58d4:	00007402 	andeq	r7, r0, r2, lsl #8
    58d8:	0000001d 	andeq	r0, r0, sp, lsl r0
    58dc:	00250d00 	eoreq	r0, r5, r0, lsl #26
    58e0:	00001e00 	andeq	r1, r0, r0, lsl #28
    58e4:	0afb0000 	beq	ffec58ec <__StackTop+0xc7dc58ec>
    58e8:	15740000 	ldrbne	r0, [r4, #-0]!
    58ec:	011f0000 	tsteq	pc, r0
    58f0:	00740250 	rsbseq	r0, r4, r0, asr r2
    58f4:	00001d00 	andeq	r1, r0, r0, lsl #26
    58f8:	250d0000 	strcs	r0, [sp, #-0]
    58fc:	001e0000 	andseq	r0, lr, r0
    5900:	9f000000 	svcls	0x00000000
    5904:	9100000a 	tstls	r0, sl
    5908:	1f000015 	svcne	0x00000015
    590c:	74025001 	strvc	r5, [r2], #-1
    5910:	001d0000 	andseq	r0, sp, r0
    5914:	70000000 	andvc	r0, r0, r0
    5918:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    591c:	00000000 	andeq	r0, r0, r0
    5920:	0000247e 	andeq	r2, r0, lr, ror r4
    5924:	0000001d 	andeq	r0, r0, sp, lsl r0
    5928:	00251c00 	eoreq	r1, r5, r0, lsl #24
    592c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5930:	24700000 	ldrbtcs	r0, [r0], #-0
    5934:	001d0000 	andseq	r0, sp, r0
    5938:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    593c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5940:	00000000 	andeq	r0, r0, r0
    5944:	0000252b 	andeq	r2, r0, fp, lsr #10
    5948:	000015d8 	ldrdeq	r1, [r0], -r8
    594c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5950:	011f6891 			; <UNDEFINED> instruction: 0x011f6891
    5954:	64910251 	ldrvs	r0, [r1], #593	; 0x251
    5958:	00001e00 	andeq	r1, r0, r0, lsl #28
    595c:	0a9f0000 	beq	fe7c5964 <__StackTop+0xc66c5964>
    5960:	15ec0000 	strbne	r0, [ip, #0]!
    5964:	011f0000 	tsteq	pc, r0
    5968:	00740250 	rsbseq	r0, r4, r0, asr r2
    596c:	00001e00 	andeq	r1, r0, r0, lsl #28
    5970:	253a0000 	ldrcs	r0, [sl, #-0]!
    5974:	16000000 	strne	r0, [r0], -r0
    5978:	011f0000 	tsteq	pc, r0
    597c:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    5980:	00001e00 	andeq	r1, r0, r0, lsl #28
    5984:	0afb0000 	beq	ffec598c <__StackTop+0xc7dc598c>
    5988:	16140000 	ldrne	r0, [r4], -r0
    598c:	011f0000 	tsteq	pc, r0
    5990:	00740250 	rsbseq	r0, r4, r0, asr r2
    5994:	00001d00 	andeq	r1, r0, r0, lsl #26
    5998:	250d0000 	strcs	r0, [sp, #-0]
    599c:	001d0000 	andseq	r0, sp, r0
    59a0:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    59a4:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    59a8:	00000000 	andeq	r0, r0, r0
    59ac:	00002470 	andeq	r2, r0, r0, ror r4
    59b0:	0000001d 	andeq	r0, r0, sp, lsl r0
    59b4:	00247e00 	eoreq	r7, r4, r0, lsl #28
    59b8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    59bc:	00000cf5 	strdeq	r0, [r0], -r5
    59c0:	0c05de01 	stceq	14, cr13, [r5], {1}
    59c4:	0000f301 	andeq	pc, r0, r1, lsl #6
    59c8:	00237200 	eoreq	r7, r3, r0, lsl #4
    59cc:	00246210 	eoreq	r6, r4, r0, lsl r2
    59d0:	00475910 	subeq	r5, r7, r0, lsl r9
    59d4:	182e0100 	stmdane	lr!, {r8}
    59d8:	b2190000 	andslt	r0, r9, #0
    59dc:	01000014 	tsteq	r0, r4, lsl r0
    59e0:	f22905de 	vqrshl.s32	q0, q7, <illegal reg q12.5>
    59e4:	a1000003 	tstge	r0, r3
    59e8:	9d000047 	stcls	0, cr0, [r0, #-284]	; 0xfffffee4
    59ec:	19000047 	stmdbne	r0, {r0, r1, r2, r6}
    59f0:	00000f00 	andeq	r0, r0, r0, lsl #30
    59f4:	2805df01 	stmdacs	r5, {r0, r8, r9, sl, fp, ip, lr, pc}
    59f8:	000000a8 	andeq	r0, r0, r8, lsr #1
    59fc:	000047c3 	andeq	r4, r0, r3, asr #15
    5a00:	000047bf 			; <UNDEFINED> instruction: 0x000047bf
    5a04:	0023e019 	eoreq	lr, r3, r9, lsl r0
    5a08:	05e00100 	strbeq	r0, [r0, #256]!	; 0x100
    5a0c:	00011a26 	andeq	r1, r1, r6, lsr #20
    5a10:	0047e300 	subeq	lr, r7, r0, lsl #6
    5a14:	0047e100 	subeq	lr, r7, r0, lsl #2
    5a18:	0f8a1a00 	svceq	0x008a1a00
    5a1c:	e2010000 	and	r0, r1, #0
    5a20:	00f31005 	rscseq	r1, r3, r5
    5a24:	47fe0000 	ldrbmi	r0, [lr, r0]!
    5a28:	47f60000 	ldrbmi	r0, [r6, r0]!
    5a2c:	23220000 			; <UNDEFINED> instruction: 0x23220000
    5a30:	0100001f 	tsteq	r0, pc, lsl r0
    5a34:	e60f05e3 	str	r0, [pc], -r3, ror #11
    5a38:	02000003 	andeq	r0, r0, #3
    5a3c:	b11a6091 			; <UNDEFINED> instruction: 0xb11a6091
    5a40:	01000014 	tsteq	r0, r4, lsl r0
    5a44:	9a1505e4 	bls	5471dc <__RAM_SIZE+0x4471dc>
    5a48:	38000006 	stmdacc	r0, {r1, r2}
    5a4c:	34000048 	strcc	r0, [r0], #-72	; 0xffffffb8
    5a50:	2a000048 	bcs	5b78 <__HEAP_SIZE+0x4b78>
    5a54:	00000358 	andeq	r0, r0, r8, asr r3
    5a58:	0000174a 	andeq	r1, r0, sl, asr #14
    5a5c:	000f2e1a 	andeq	r2, pc, sl, lsl lr	; <UNPREDICTABLE>
    5a60:	05fa0100 	ldrbeq	r0, [sl, #256]!	; 0x100
    5a64:	0001151f 	andeq	r1, r1, pc, lsl r5
    5a68:	00486000 	subeq	r6, r8, r0
    5a6c:	00485600 	subeq	r5, r8, r0, lsl #12
    5a70:	23881e00 	orrcs	r1, r8, #0, 28
    5a74:	0bed1000 	bleq	ffb49a7c <__StackTop+0xc7a49a7c>
    5a78:	170a0000 	strne	r0, [sl, -r0]
    5a7c:	011f0000 	tsteq	pc, r0
    5a80:	00740250 	rsbseq	r0, r4, r0, asr r2
    5a84:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5a88:	1d000077 	stcne	0, cr0, [r0, #-476]	; 0xfffffe24
    5a8c:	10002394 	mulne	r0, r4, r3
    5a90:	0000247e 	andeq	r2, r0, lr, ror r4
    5a94:	0023a21e 	eoreq	sl, r3, lr, lsl r2
    5a98:	00246110 	eoreq	r6, r4, r0, lsl r1
    5a9c:	00172700 	andseq	r2, r7, r0, lsl #14
    5aa0:	50011f00 	andpl	r1, r1, r0, lsl #30
    5aa4:	00107402 	andseq	r7, r0, r2, lsl #8
    5aa8:	0023aa1d 	eoreq	sl, r3, sp, lsl sl
    5aac:	0024f010 	eoreq	pc, r4, r0, lsl r0	; <UNPREDICTABLE>
    5ab0:	23b01d00 	movscs	r1, #0, 26
    5ab4:	247e1000 	ldrbtcs	r1, [lr], #-0
    5ab8:	ba200000 	blt	805ac0 <__RAM_SIZE+0x705ac0>
    5abc:	fe100023 	cdp2	0, 1, cr0, cr0, cr3, {1}
    5ac0:	1f000024 	svcne	0x00000024
    5ac4:	91025001 	tstls	r2, r1
    5ac8:	1e000060 	cdpne	0, 0, cr0, cr0, cr0, {3}
    5acc:	100023d4 	ldrdne	r2, [r0], -r4
    5ad0:	00000afb 	strdeq	r0, [r0], -fp
    5ad4:	0000175e 	andeq	r1, r0, lr, asr r7
    5ad8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5adc:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5ae0:	100023d8 	ldrdne	r2, [r0], -r8
    5ae4:	0000250d 	andeq	r2, r0, sp, lsl #10
    5ae8:	0023e01e 	eoreq	lr, r3, lr, lsl r0
    5aec:	000afb10 	andeq	pc, sl, r0, lsl fp	; <UNPREDICTABLE>
    5af0:	00177b00 	andseq	r7, r7, r0, lsl #22
    5af4:	50011f00 	andpl	r1, r1, r0, lsl #30
    5af8:	00007402 	andeq	r7, r0, r2, lsl #8
    5afc:	0023e41d 	eoreq	lr, r3, sp, lsl r4
    5b00:	00250d10 	eoreq	r0, r5, r0, lsl sp
    5b04:	23ea1e00 	mvncs	r1, #0, 28
    5b08:	0a9f1000 	beq	fe7c9b10 <__StackTop+0xc66c9b10>
    5b0c:	17980000 	ldrne	r0, [r8, r0]
    5b10:	011f0000 	tsteq	pc, r0
    5b14:	00740250 	rsbseq	r0, r4, r0, asr r2
    5b18:	23f21d00 	mvnscs	r1, #0, 26
    5b1c:	24701000 	ldrbtcs	r1, [r0], #-0
    5b20:	061d0000 	ldreq	r0, [sp], -r0
    5b24:	7e100024 	cdpvc	0, 1, cr0, cr0, cr4, {1}
    5b28:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5b2c:	1000240a 	andne	r2, r0, sl, lsl #8
    5b30:	0000251c 	andeq	r2, r0, ip, lsl r5
    5b34:	00240e1d 	eoreq	r0, r4, sp, lsl lr
    5b38:	00247010 	eoreq	r7, r4, r0, lsl r0
    5b3c:	242a1d00 	strtcs	r1, [sl], #-3328	; 0xfffff300
    5b40:	247e1000 	ldrbtcs	r1, [lr], #-0
    5b44:	321e0000 	andscc	r0, lr, #0
    5b48:	2b100024 	blcs	405be0 <__RAM_SIZE+0x305be0>
    5b4c:	df000025 	svcle	0x00000025
    5b50:	1f000017 	svcne	0x00000017
    5b54:	91025001 	tstls	r2, r1
    5b58:	51011f60 	tstpl	r1, r0, ror #30
    5b5c:	005c9102 	subseq	r9, ip, r2, lsl #2
    5b60:	00243c1e 	eoreq	r3, r4, lr, lsl ip
    5b64:	000a9f10 	andeq	r9, sl, r0, lsl pc
    5b68:	0017f300 	andseq	pc, r7, r0, lsl #6
    5b6c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5b70:	00007402 	andeq	r7, r0, r2, lsl #8
    5b74:	00244a1e 	eoreq	r4, r4, lr, lsl sl
    5b78:	00253a10 	eoreq	r3, r5, r0, lsl sl
    5b7c:	00180700 	andseq	r0, r8, r0, lsl #14
    5b80:	50011f00 	andpl	r1, r1, r0, lsl #30
    5b84:	002c7402 	eoreq	r7, ip, r2, lsl #8
    5b88:	0024501e 	eoreq	r5, r4, lr, lsl r0
    5b8c:	000afb10 	andeq	pc, sl, r0, lsl fp	; <UNPREDICTABLE>
    5b90:	00181b00 	andseq	r1, r8, r0, lsl #22
    5b94:	50011f00 	andpl	r1, r1, r0, lsl #30
    5b98:	00007402 	andeq	r7, r0, r2, lsl #8
    5b9c:	0024541d 	eoreq	r5, r4, sp, lsl r4
    5ba0:	00250d10 	eoreq	r0, r5, r0, lsl sp
    5ba4:	245c1d00 	ldrbcs	r1, [ip], #-3328	; 0xfffff300
    5ba8:	24f01000 	ldrbtcs	r1, [r0], #0
    5bac:	21000000 	mrscs	r0, (UNDEF: 0)
    5bb0:	00114a01 	andseq	r4, r1, r1, lsl #20
    5bb4:	05310100 	ldreq	r0, [r1, #-256]!	; 0xffffff00
    5bb8:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    5bc4:	48a30000 	stmiami	r3!, {}	; <UNPREDICTABLE>
    5bc8:	5b010000 	blpl	45bd0 <__HEAP_SIZE+0x44bd0>
    5bcc:	19000019 	stmdbne	r0, {r0, r3, r4}
    5bd0:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    5bd4:	2d053101 	stfcss	f3, [r5, #-4]
    5bd8:	000003f2 	strdeq	r0, [r0], -r2
    5bdc:	000048ed 	andeq	r4, r0, sp, ror #17
    5be0:	000048c3 	andeq	r4, r0, r3, asr #17
    5be4:	000d2f19 	andeq	r2, sp, r9, lsl pc
    5be8:	05320100 	ldreq	r0, [r2, #-256]!	; 0xffffff00
    5bec:	0011d932 	andseq	sp, r1, r2, lsr r9
    5bf0:	0049fe00 	subeq	pc, r9, r0, lsl #28
    5bf4:	0049fa00 	subeq	pc, r9, r0, lsl #20
    5bf8:	1cd11a00 	vldmiane	r1, {s3-s2}
    5bfc:	34010000 	strcc	r0, [r1], #-0
    5c00:	00f31005 	rscseq	r1, r3, r5
    5c04:	4a1e0000 	bmi	785c0c <__RAM_SIZE+0x685c0c>
    5c08:	4a1c0000 	bmi	705c10 <__RAM_SIZE+0x605c10>
    5c0c:	791a0000 	ldmdbvc	sl, {}	; <UNPREDICTABLE>
    5c10:	0100000e 	tsteq	r0, lr
    5c14:	04110535 	ldreq	r0, [r1], #-1333	; 0xfffffacb
    5c18:	41000001 	tstmi	r0, r1
    5c1c:	3100004a 	tstcc	r0, sl, asr #32
    5c20:	1a00004a 	bne	5d50 <__HEAP_SIZE+0x4d50>
    5c24:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    5c28:	15053601 	strne	r3, [r5, #-1537]	; 0xfffff9ff
    5c2c:	0000069a 	muleq	r0, sl, r6
    5c30:	00004acb 	andeq	r4, r0, fp, asr #21
    5c34:	00004aa1 	andeq	r4, r0, r1, lsr #21
    5c38:	0003282a 	andeq	r2, r3, sl, lsr #16
    5c3c:	00194100 	andseq	r4, r9, r0, lsl #2
    5c40:	0f2e1a00 	svceq	0x002e1a00
    5c44:	60010000 	andvs	r0, r1, r0
    5c48:	01151b05 	tsteq	r5, r5, lsl #22
    5c4c:	4be80000 	blmi	ffa05c54 <__StackTop+0xc7905c54>
    5c50:	4bd80000 	blmi	ff605c58 <__StackTop+0xc7505c58>
    5c54:	401b0000 	andsmi	r0, fp, r0
    5c58:	1a000003 	bne	5c6c <__HEAP_SIZE+0x4c6c>
    5c5c:	00000e0f 	andeq	r0, r0, pc, lsl #28
    5c60:	1a056701 	bne	15f86c <__RAM_SIZE+0x5f86c>
    5c64:	000000d1 	ldrdeq	r0, [r0], -r1
    5c68:	00004c6c 	andeq	r4, r0, ip, ror #24
    5c6c:	00004c66 	andeq	r4, r0, r6, ror #24
    5c70:	0000001c 	andeq	r0, r0, ip, lsl r0
    5c74:	00000000 	andeq	r0, r0, r0
    5c78:	00191b00 	andseq	r1, r9, r0, lsl #22
    5c7c:	13d71a00 	bicsne	r1, r7, #0, 20
    5c80:	cb010000 	blgt	45c88 <__HEAP_SIZE+0x44c88>
    5c84:	01151105 	tsteq	r5, r5, lsl #2
    5c88:	4c9b0000 	ldcmi	0, cr0, [fp], {0}
    5c8c:	4c970000 	ldcmi	0, cr0, [r7], {0}
    5c90:	001d0000 	andseq	r0, sp, r0
    5c94:	52000000 	andpl	r0, r0, #0
    5c98:	00000024 	andeq	r0, r0, r4, lsr #32
    5c9c:	0000001e 	andeq	r0, r0, lr, lsl r0
    5ca0:	0005b400 	andeq	fp, r5, r0, lsl #8
    5ca4:	00192f00 	andseq	r2, r9, r0, lsl #30
    5ca8:	50011f00 	andpl	r1, r1, r0, lsl #30
    5cac:	00007402 	andeq	r7, r0, r2, lsl #8
    5cb0:	00000020 	andeq	r0, r0, r0, lsr #32
    5cb4:	00246100 	eoreq	r6, r4, r0, lsl #2
    5cb8:	50011f00 	andpl	r1, r1, r0, lsl #30
    5cbc:	002c7402 	eoreq	r7, ip, r2, lsl #8
    5cc0:	001d0000 	andseq	r0, sp, r0
    5cc4:	d4000000 	strle	r0, [r0], #-0
    5cc8:	20000024 	andcs	r0, r0, r4, lsr #32
    5ccc:	00000000 	andeq	r0, r0, r0
    5cd0:	000024e2 	andeq	r2, r0, r2, ror #9
    5cd4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5cd8:	00000075 	andeq	r0, r0, r5, ror r0
    5cdc:	0d8f0121 	stfeqs	f0, [pc, #132]	; 5d68 <__HEAP_SIZE+0x4d68>
    5ce0:	85010000 	strhi	r0, [r1, #-0]
    5ce4:	f3010c04 			; <UNDEFINED> instruction: 0xf3010c04
	...
    5cf0:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    5cf4:	0100004c 	tsteq	r0, ip, asr #32
    5cf8:	00001ad0 	ldrdeq	r1, [r0], -r0
    5cfc:	0014b219 	andseq	fp, r4, r9, lsl r2
    5d00:	04850100 	streq	r0, [r5], #256	; 0x100
    5d04:	0003f234 	andeq	pc, r3, r4, lsr r2	; <UNPREDICTABLE>
    5d08:	004d0700 	subeq	r0, sp, r0, lsl #14
    5d0c:	004cd900 	subeq	sp, ip, r0, lsl #18
    5d10:	14331900 	ldrtne	r1, [r3], #-2304	; 0xfffff700
    5d14:	86010000 	strhi	r0, [r1], -r0
    5d18:	00ba3904 	adcseq	r3, sl, r4, lsl #18
    5d1c:	4e310000 	cdpmi	0, 3, cr0, cr1, cr0, {0}
    5d20:	4e2d0000 	cdpmi	0, 2, cr0, cr13, cr0, {0}
    5d24:	2f190000 	svccs	0x00190000
    5d28:	0100000d 	tsteq	r0, sp
    5d2c:	d9390487 	ldmdble	r9!, {r0, r1, r2, r7, sl}
    5d30:	53000011 	movwpl	r0, #17
    5d34:	4f00004e 	svcmi	0x0000004e
    5d38:	1900004e 	stmdbne	r0, {r1, r2, r3, r6}
    5d3c:	00000e4a 	andeq	r0, r0, sl, asr #28
    5d40:	37048801 	strcc	r8, [r4, -r1, lsl #16]
    5d44:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5d48:	00004e75 	andeq	r4, r0, r5, ror lr
    5d4c:	00004e71 	andeq	r4, r0, r1, ror lr
    5d50:	001cd11a 	andseq	sp, ip, sl, lsl r1
    5d54:	048a0100 	streq	r0, [sl], #256	; 0x100
    5d58:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5d5c:	004e9500 	subeq	r9, lr, r0, lsl #10
    5d60:	004e9300 	subeq	r9, lr, r0, lsl #6
    5d64:	0e791a00 	vaddeq.f32	s3, s18, s0
    5d68:	8b010000 	blhi	45d70 <__HEAP_SIZE+0x44d70>
    5d6c:	01041104 	tsteq	r4, r4, lsl #2
    5d70:	4eb00000 	cdpmi	0, 11, cr0, cr0, cr0, {0}
    5d74:	4ea80000 	cdpmi	0, 10, cr0, cr8, cr0, {0}
    5d78:	b11a0000 	tstlt	sl, r0
    5d7c:	01000014 	tsteq	r0, r4, lsl r0
    5d80:	9a15048c 	bls	546fb8 <__RAM_SIZE+0x446fb8>
    5d84:	12000006 	andne	r0, r0, #6
    5d88:	e400004f 	str	r0, [r0], #-79	; 0xffffffb1
    5d8c:	1c00004e 	stcne	0, cr0, [r0], {78}	; 0x4e
	...
    5d98:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    5d9c:	000e0f1a 	andeq	r0, lr, sl, lsl pc
    5da0:	04b00100 	ldrteq	r0, [r0], #256	; 0x100
    5da4:	0000d11a 	andeq	sp, r0, sl, lsl r1
    5da8:	00503e00 	subseq	r3, r0, r0, lsl #28
    5dac:	00503800 	subseq	r3, r0, r0, lsl #16
    5db0:	10ed1a00 	rscne	r1, sp, r0, lsl #20
    5db4:	b1010000 	mrslt	r0, (UNDEF: 1)
    5db8:	01151f04 	tsteq	r5, r4, lsl #30
    5dbc:	506b0000 	rsbpl	r0, fp, r0
    5dc0:	50690000 	rsbpl	r0, r9, r0
    5dc4:	001c0000 	andseq	r0, ip, r0
    5dc8:	00000000 	andeq	r0, r0, r0
    5dcc:	71000000 	mrsvc	r0, (UNDEF: 0)
    5dd0:	1a00001a 	bne	5e40 <__HEAP_SIZE+0x4e40>
    5dd4:	000013d7 	ldrdeq	r1, [r0], -r7
    5dd8:	11051e01 	tstne	r5, r1, lsl #28
    5ddc:	00000115 	andeq	r0, r0, r5, lsl r1
    5de0:	00005082 	andeq	r5, r0, r2, lsl #1
    5de4:	0000507e 	andeq	r5, r0, lr, ror r0
    5de8:	0000001d 	andeq	r0, r0, sp, lsl r0
    5dec:	00245200 	eoreq	r5, r4, r0, lsl #4
    5df0:	001e0000 	andseq	r0, lr, r0
    5df4:	3c000000 	stccc	0, cr0, [r0], {-0}
    5df8:	9100000c 	tstls	r0, ip
    5dfc:	1f00001a 	svcne	0x0000001a
    5e00:	74025001 	strvc	r5, [r2], #-1
    5e04:	51011f00 	tstpl	r1, r0, lsl #30
    5e08:	1f007702 	svcne	0x00007702
    5e0c:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    5e10:	001e0000 	andseq	r0, lr, r0
    5e14:	b4000000 	strlt	r0, [r0], #-0
    5e18:	a5000005 	strge	r0, [r0, #-5]
    5e1c:	1f00001a 	svcne	0x0000001a
    5e20:	74025001 	strvc	r5, [r2], #-1
    5e24:	00200000 	eoreq	r0, r0, r0
    5e28:	61000000 	mrsvs	r0, (UNDEF: 0)
    5e2c:	1f000024 	svcne	0x00000024
    5e30:	74025001 	strvc	r5, [r2], #-1
    5e34:	1d00002c 	stcne	0, cr0, [r0, #-176]	; 0xffffff50
    5e38:	00000000 	andeq	r0, r0, r0
    5e3c:	000024d4 	ldrdeq	r2, [r0], -r4
    5e40:	00000020 	andeq	r0, r0, r0, lsr #32
    5e44:	0024e200 	eoreq	lr, r4, r0, lsl #4
    5e48:	50011f00 	andpl	r1, r1, r0, lsl #30
    5e4c:	00007602 	andeq	r7, r0, r2, lsl #12
    5e50:	46012100 	strmi	r2, [r1], -r0, lsl #2
    5e54:	01000010 	tsteq	r0, r0, lsl r0
    5e58:	010c03ab 	smlatbeq	ip, fp, r3, r0
    5e5c:	000000f3 	strdeq	r0, [r0], -r3
	...
    5e68:	000050a0 	andeq	r5, r0, r0, lsr #1
    5e6c:	001d0b01 	andseq	r0, sp, r1, lsl #22
    5e70:	14b21900 	ldrtne	r1, [r2], #2304	; 0x900
    5e74:	ab010000 	blge	45e7c <__HEAP_SIZE+0x44e7c>
    5e78:	03f22d03 	mvnseq	r2, #3, 26	; 0xc0
    5e7c:	50e80000 	rscpl	r0, r8, r0
    5e80:	50e40000 	rscpl	r0, r4, r0
    5e84:	33190000 	tstcc	r9, #0
    5e88:	01000014 	tsteq	r0, r4, lsl r0
    5e8c:	ba3203ac 	blt	c86d44 <__RAM_SIZE+0xb86d44>
    5e90:	0a000000 	beq	5e98 <__HEAP_SIZE+0x4e98>
    5e94:	06000051 			; <UNDEFINED> instruction: 0x06000051
    5e98:	19000051 	stmdbne	r0, {r0, r4, r6}
    5e9c:	000023e0 	andeq	r2, r0, r0, ror #7
    5ea0:	2a03ad01 	bcs	f12ac <__HEAP_SIZE+0xf02ac>
    5ea4:	0000011a 	andeq	r0, r0, sl, lsl r1
    5ea8:	0000512a 	andeq	r5, r0, sl, lsr #2
    5eac:	00005128 	andeq	r5, r0, r8, lsr #2
    5eb0:	000e4a19 	andeq	r4, lr, r9, lsl sl
    5eb4:	03ae0100 			; <UNDEFINED> instruction: 0x03ae0100
    5eb8:	0000ff30 	andeq	pc, r0, r0, lsr pc	; <UNPREDICTABLE>
    5ebc:	00514100 	subseq	r4, r1, r0, lsl #2
    5ec0:	00513d00 	subseq	r3, r1, r0, lsl #26
    5ec4:	0f8a1a00 	svceq	0x008a1a00
    5ec8:	b0010000 	andlt	r0, r1, r0
    5ecc:	00f31003 	rscseq	r1, r3, r3
    5ed0:	51690000 	cmnpl	r9, r0
    5ed4:	515f0000 	cmppl	pc, r0
    5ed8:	b21a0000 	andslt	r0, sl, #0
    5edc:	0100000e 	tsteq	r0, lr
    5ee0:	f32903b0 	vcge.u32	d0, d25, d16
    5ee4:	b0000000 	andlt	r0, r0, r0
    5ee8:	aa000051 	bge	6034 <__HEAP_SIZE+0x5034>
    5eec:	22000051 	andcs	r0, r0, #81	; 0x51
    5ef0:	00001f23 	andeq	r1, r0, r3, lsr #30
    5ef4:	0f03b101 	svceq	0x0003b101
    5ef8:	000003e6 	andeq	r0, r0, r6, ror #7
    5efc:	1a609102 	bne	182a30c <__RAM_SIZE+0x172a30c>
    5f00:	000014b1 			; <UNDEFINED> instruction: 0x000014b1
    5f04:	1503b201 	strne	fp, [r3, #-513]	; 0xfffffdff
    5f08:	0000069a 	muleq	r0, sl, r6
    5f0c:	000051dd 	ldrdeq	r5, [r0], -sp
    5f10:	000051d9 	ldrdeq	r5, [r0], -r9
    5f14:	0003102a 	andeq	r1, r3, sl, lsr #32
    5f18:	001c1500 	andseq	r1, ip, r0, lsl #10
    5f1c:	10ed1a00 	rscne	r1, sp, r0, lsl #20
    5f20:	cd010000 	stcgt	0, cr0, [r1, #-0]
    5f24:	01152703 	tsteq	r5, r3, lsl #14
    5f28:	51ff0000 	mvnspl	r0, r0
    5f2c:	51fb0000 	mvnspl	r0, r0
    5f30:	001e0000 	andseq	r0, lr, r0
    5f34:	3c000000 	stccc	0, cr0, [r0], {-0}
    5f38:	d100000c 	tstle	r0, ip
    5f3c:	1f00001b 	svcne	0x0000001b
    5f40:	74025001 	strvc	r5, [r2], #-1
    5f44:	51011f00 	tstpl	r1, r0, lsl #30
    5f48:	1f007702 	svcne	0x00007702
    5f4c:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    5f50:	001e0000 	andseq	r0, lr, r0
    5f54:	b4000000 	strlt	r0, [r0], #-0
    5f58:	e5000005 	str	r0, [r0, #-5]
    5f5c:	1f00001b 	svcne	0x0000001b
    5f60:	74025001 	strvc	r5, [r2], #-1
    5f64:	001d0000 	andseq	r0, sp, r0
    5f68:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    5f6c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5f70:	00000000 	andeq	r0, r0, r0
    5f74:	000024f0 	strdeq	r2, [r0], -r0
    5f78:	0000001e 	andeq	r0, r0, lr, lsl r0
    5f7c:	00246100 	eoreq	r6, r4, r0, lsl #2
    5f80:	001c0b00 	andseq	r0, ip, r0, lsl #22
    5f84:	50011f00 	andpl	r1, r1, r0, lsl #30
    5f88:	002c7402 	eoreq	r7, ip, r2, lsl #8
    5f8c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5f90:	0024f000 	eoreq	pc, r4, r0
    5f94:	001d0000 	andseq	r0, sp, r0
    5f98:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5f9c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5fa0:	00000000 	andeq	r0, r0, r0
    5fa4:	0000247e 	andeq	r2, r0, lr, ror r4
    5fa8:	0000001e 	andeq	r0, r0, lr, lsl r0
    5fac:	0024fe00 	eoreq	pc, r4, r0, lsl #28
    5fb0:	001c3b00 	andseq	r3, ip, r0, lsl #22
    5fb4:	50011f00 	andpl	r1, r1, r0, lsl #30
    5fb8:	00609102 	rsbeq	r9, r0, r2, lsl #2
    5fbc:	0000001e 	andeq	r0, r0, lr, lsl r0
    5fc0:	000afb00 	andeq	pc, sl, r0, lsl #22
    5fc4:	001c4f00 	andseq	r4, ip, r0, lsl #30
    5fc8:	50011f00 	andpl	r1, r1, r0, lsl #30
    5fcc:	00007402 	andeq	r7, r0, r2, lsl #8
    5fd0:	0000001d 	andeq	r0, r0, sp, lsl r0
    5fd4:	00250d00 	eoreq	r0, r5, r0, lsl #26
    5fd8:	00001d00 	andeq	r1, r0, r0, lsl #26
    5fdc:	24700000 	ldrbtcs	r0, [r0], #-0
    5fe0:	001d0000 	andseq	r0, sp, r0
    5fe4:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5fe8:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5fec:	00000000 	andeq	r0, r0, r0
    5ff0:	0000251c 	andeq	r2, r0, ip, lsl r5
    5ff4:	0000001d 	andeq	r0, r0, sp, lsl r0
    5ff8:	00247000 	eoreq	r7, r4, r0
    5ffc:	00001d00 	andeq	r1, r0, r0, lsl #26
    6000:	247e0000 	ldrbtcs	r0, [lr], #-0
    6004:	001e0000 	andseq	r0, lr, r0
    6008:	2b000000 	blcs	6010 <__HEAP_SIZE+0x5010>
    600c:	9f000025 	svcls	0x00000025
    6010:	1f00001c 	svcne	0x0000001c
    6014:	91025001 	tstls	r2, r1
    6018:	51011f60 	tstpl	r1, r0, ror #30
    601c:	005c9102 	subseq	r9, ip, r2, lsl #2
    6020:	0000001e 	andeq	r0, r0, lr, lsl r0
    6024:	0009eb00 	andeq	lr, r9, r0, lsl #22
    6028:	001cb300 	andseq	fp, ip, r0, lsl #6
    602c:	50011f00 	andpl	r1, r1, r0, lsl #30
    6030:	00007402 	andeq	r7, r0, r2, lsl #8
    6034:	0000001e 	andeq	r0, r0, lr, lsl r0
    6038:	00253a00 	eoreq	r3, r5, r0, lsl #20
    603c:	001cc700 	andseq	ip, ip, r0, lsl #14
    6040:	50011f00 	andpl	r1, r1, r0, lsl #30
    6044:	00107402 	andseq	r7, r0, r2, lsl #8
    6048:	0000001e 	andeq	r0, r0, lr, lsl r0
    604c:	000afb00 	andeq	pc, sl, r0, lsl #22
    6050:	001cdb00 	andseq	sp, ip, r0, lsl #22
    6054:	50011f00 	andpl	r1, r1, r0, lsl #30
    6058:	00007402 	andeq	r7, r0, r2, lsl #8
    605c:	0000001d 	andeq	r0, r0, sp, lsl r0
    6060:	00250d00 	eoreq	r0, r5, r0, lsl #26
    6064:	00001d00 	andeq	r1, r0, r0, lsl #26
    6068:	24f00000 	ldrbtcs	r0, [r0], #0
    606c:	001e0000 	andseq	r0, lr, r0
    6070:	fb000000 	blx	607a <__HEAP_SIZE+0x507a>
    6074:	0100000a 	tsteq	r0, sl
    6078:	1f00001d 	svcne	0x0000001d
    607c:	74025001 	strvc	r5, [r2], #-1
    6080:	001d0000 	andseq	r0, sp, r0
    6084:	0d000000 	stceq	0, cr0, [r0, #-0]
    6088:	00000025 	andeq	r0, r0, r5, lsr #32
    608c:	16650121 	strbtne	r0, [r5], -r1, lsr #2
    6090:	86010000 	strhi	r0, [r1], -r0
    6094:	f2011303 	vcgt.s8	d1, d1, d3
    6098:	00000003 	andeq	r0, r0, r3
    609c:	00000000 	andeq	r0, r0, r0
    60a0:	1d000000 	stcne	0, cr0, [r0, #-0]
    60a4:	01000052 	qaddeq	r0, r2, r0
    60a8:	00001d86 	andeq	r1, r0, r6, lsl #27
    60ac:	00127019 	andseq	r7, r2, r9, lsl r0
    60b0:	03860100 	orreq	r0, r6, #0, 2
    60b4:	00011544 	andeq	r1, r1, r4, asr #10
    60b8:	00526100 	subseq	r6, r2, r0, lsl #2
    60bc:	00525500 	subseq	r5, r2, r0, lsl #10
    60c0:	0faf1900 	svceq	0x00af1900
    60c4:	87010000 	strhi	r0, [r1, -r0]
    60c8:	01154403 	tsteq	r5, r3, lsl #8
    60cc:	52bc0000 	adcspl	r0, ip, #0
    60d0:	52b40000 	adcspl	r0, r4, #0
    60d4:	e71a0000 	ldr	r0, [sl, -r0]
    60d8:	01000018 	tsteq	r0, r8, lsl r0
    60dc:	f2170389 	vcgt.s16	d0, d23, d9
    60e0:	f6000003 			; <UNDEFINED> instruction: 0xf6000003
    60e4:	f0000052 			; <UNDEFINED> instruction: 0xf0000052
    60e8:	20000052 	andcs	r0, r0, r2, asr r0
    60ec:	00000000 	andeq	r0, r0, r0
    60f0:	00002160 	andeq	r2, r0, r0, ror #2
    60f4:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    60f8:	1f5001f3 	svcne	0x005001f3
    60fc:	30015101 	andcc	r5, r1, r1, lsl #2
    6100:	0152011f 	cmpeq	r2, pc, lsl r1
    6104:	21000032 	tstcs	r0, r2, lsr r0
    6108:	0012c901 	andseq	ip, r2, r1, lsl #18
    610c:	035e0100 	cmpeq	lr, #0, 2
    6110:	03f20113 	mvnseq	r0, #-1073741820	; 0xc0000004
	...
    611c:	53210000 			; <UNDEFINED> instruction: 0x53210000
    6120:	23010000 	movwcs	r0, #4096	; 0x1000
    6124:	1900001e 	stmdbne	r0, {r1, r2, r3, r4}
    6128:	00001270 	andeq	r1, r0, r0, ror r2
    612c:	4a035e01 	bmi	dd938 <__HEAP_SIZE+0xdc938>
    6130:	00000115 	andeq	r0, r0, r5, lsl r1
    6134:	0000537d 	andeq	r5, r0, sp, ror r3
    6138:	00005371 	andeq	r5, r0, r1, ror r3
    613c:	000faf19 	andeq	sl, pc, r9, lsl pc	; <UNPREDICTABLE>
    6140:	035f0100 	cmpeq	pc, #0, 2
    6144:	0001154a 	andeq	r1, r1, sl, asr #10
    6148:	0053d800 	subseq	sp, r3, r0, lsl #16
    614c:	0053d000 	subseq	sp, r3, r0
    6150:	11ab1900 			; <UNDEFINED> instruction: 0x11ab1900
    6154:	60010000 	andvs	r0, r1, r0
    6158:	1e234803 	cdpne	8, 2, cr4, cr3, cr3, {0}
    615c:	54160000 	ldrpl	r0, [r6], #-0
    6160:	540c0000 	strpl	r0, [ip], #-0
    6164:	e71a0000 	ldr	r0, [sl, -r0]
    6168:	01000018 	tsteq	r0, r8, lsl r0
    616c:	f2170362 	vcgt.s16	q0, <illegal reg q3.5>, q9
    6170:	61000003 	tstvs	r0, r3
    6174:	5b000054 	blpl	62cc <__HEAP_SIZE+0x52cc>
    6178:	20000054 	andcs	r0, r0, r4, asr r0
    617c:	00000000 	andeq	r0, r0, r0
    6180:	000022cb 	andeq	r2, r0, fp, asr #5
    6184:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    6188:	1f5001f3 	svcne	0x005001f3
    618c:	30015101 	andcc	r5, r1, r1, lsl #2
    6190:	0152011f 	cmpeq	r2, pc, lsl r1
    6194:	53011f30 	movwpl	r1, #7984	; 0x1f30
    6198:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    619c:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    61a0:	00003201 	andeq	r3, r0, r1, lsl #4
    61a4:	02cb0407 	sbceq	r0, fp, #117440512	; 0x7000000
    61a8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    61ac:	00000d5b 	andeq	r0, r0, fp, asr sp
    61b0:	10032f01 	andne	r2, r3, r1, lsl #30
    61b4:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    61c0:	00548c00 	subseq	r8, r4, r0, lsl #24
    61c4:	1ebd0100 	frdnee	f0, f5, f0
    61c8:	4a190000 	bmi	6461d0 <__RAM_SIZE+0x5461d0>
    61cc:	0100000d 	tsteq	r0, sp
    61d0:	f238032f 	vcgt.s<illegal width 64>	d0, d8, d31
    61d4:	b0000003 	andlt	r0, r0, r3
    61d8:	ac000054 	stcge	0, cr0, [r0], {84}	; 0x54
    61dc:	19000054 	stmdbne	r0, {r2, r4, r6}
    61e0:	000023e0 	andeq	r2, r0, r0, ror #7
    61e4:	35033001 	strcc	r3, [r3, #-1]
    61e8:	0000011a 	andeq	r0, r0, sl, lsl r1
    61ec:	000054d2 	ldrdeq	r5, [r0], -r2
    61f0:	000054ce 	andeq	r5, r0, lr, asr #9
    61f4:	001cd11a 	andseq	sp, ip, sl, lsl r1
    61f8:	03320100 	teqeq	r2, #0, 2
    61fc:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    6200:	0054f400 	subseq	pc, r4, r0, lsl #8
    6204:	0054f000 	subseq	pc, r4, r0
    6208:	0d491a00 	vstreq	s3, [r9, #-0]
    620c:	33010000 	movwcc	r0, #4096	; 0x1000
    6210:	069a1903 	ldreq	r1, [sl], r3, lsl #18
    6214:	55170000 	ldrpl	r0, [r7, #-0]
    6218:	55130000 	ldrpl	r0, [r3, #-0]
    621c:	001d0000 	andseq	r0, sp, r0
    6220:	76000000 	strvc	r0, [r0], -r0
    6224:	20000025 	andcs	r0, r0, r5, lsr #32
    6228:	00000000 	andeq	r0, r0, r0
    622c:	000013e8 	andeq	r1, r0, r8, ror #7
    6230:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    6234:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    6238:	00750251 	rsbseq	r0, r5, r1, asr r2
    623c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    6240:	0000158d 	andeq	r1, r0, sp, lsl #11
    6244:	1002f401 	andne	pc, r2, r1, lsl #8
    6248:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    6254:	00553500 	subseq	r3, r5, r0, lsl #10
    6258:	1f360100 	svcne	0x00360100
    625c:	4a190000 	bmi	646264 <__RAM_SIZE+0x546264>
    6260:	0100000d 	tsteq	r0, sp
    6264:	f23802f4 	vqsub.s64	q0, q12, q10
    6268:	59000003 	stmdbpl	r0, {r0, r1}
    626c:	55000055 	strpl	r0, [r0, #-85]	; 0xffffffab
    6270:	1a000055 	bne	63cc <__HEAP_SIZE+0x53cc>
    6274:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    6278:	1402f601 	strne	pc, [r2], #-1537	; 0xfffff9ff
    627c:	000000f3 	strdeq	r0, [r0], -r3
    6280:	00005579 	andeq	r5, r0, r9, ror r5
    6284:	00005577 	andeq	r5, r0, r7, ror r5
    6288:	000d491a 	andeq	r4, sp, sl, lsl r9
    628c:	02f70100 	rscseq	r0, r7, #0, 2
    6290:	00069a19 	andeq	r9, r6, r9, lsl sl
    6294:	00559100 	subseq	r9, r5, r0, lsl #2
    6298:	00558d00 	subseq	r8, r5, r0, lsl #26
    629c:	00001d00 	andeq	r1, r0, r0, lsl #26
    62a0:	25760000 	ldrbcs	r0, [r6, #-0]!
    62a4:	00200000 	eoreq	r0, r0, r0
    62a8:	d0000000 	andle	r0, r0, r0
    62ac:	1f00001a 	svcne	0x0000001a
    62b0:	74025001 	strvc	r5, [r2], #-1
    62b4:	21000000 	mrscs	r0, (UNDEF: 0)
    62b8:	0011b901 	andseq	fp, r1, r1, lsl #18
    62bc:	02980100 	addseq	r0, r8, #0, 2
    62c0:	03f20113 	mvnseq	r0, #-1073741820	; 0xc0000004
	...
    62cc:	55af0000 	strpl	r0, [pc, #0]!	; 62d4 <__HEAP_SIZE+0x52d4>
    62d0:	e6010000 	str	r0, [r1], -r0
    62d4:	1900001f 	stmdbne	r0, {r0, r1, r2, r3, r4}
    62d8:	0000130d 	andeq	r1, r0, sp, lsl #6
    62dc:	3a029801 	bcc	ac2e8 <__HEAP_SIZE+0xab2e8>
    62e0:	000000e2 	andeq	r0, r0, r2, ror #1
    62e4:	000055eb 	andeq	r5, r0, fp, ror #11
    62e8:	000055e7 	andeq	r5, r0, r7, ror #11
    62ec:	0011ab19 	andseq	sl, r1, r9, lsl fp
    62f0:	02990100 	addseq	r0, r9, #0, 2
    62f4:	001e233c 	andseq	r2, lr, ip, lsr r3
    62f8:	00561200 	subseq	r1, r6, r0, lsl #4
    62fc:	00560c00 	subseq	r0, r6, r0, lsl #24
    6300:	0ec21a00 	vdiveq.f32	s3, s4, s0
    6304:	9b010000 	blls	4630c <__HEAP_SIZE+0x4530c>
    6308:	03f21702 	mvnseq	r1, #524288	; 0x80000
    630c:	56420000 	strbpl	r0, [r2], -r0
    6310:	563e0000 	ldrtpl	r0, [lr], -r0
    6314:	1f250000 	svcne	0x00250000
    6318:	01000011 	tsteq	r0, r1, lsl r0
    631c:	151b029c 	ldrne	r0, [fp, #-668]	; 0xfffffd64
    6320:	01000001 	tsteq	r0, r1
    6324:	000ea625 	andeq	sl, lr, r5, lsr #12
    6328:	029c0100 	addseq	r0, ip, #0, 2
    632c:	0001153e 	andeq	r1, r1, lr, lsr r5
    6330:	001e0000 	andseq	r0, lr, r0
    6334:	cb000000 	blgt	633c <__HEAP_SIZE+0x533c>
    6338:	d5000022 	strle	r0, [r0, #-34]	; 0xffffffde
    633c:	1f00001f 	svcne	0x0000001f
    6340:	31015001 	tstcc	r1, r1
    6344:	0151011f 	cmpeq	r1, pc, lsl r1
    6348:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    634c:	011f3001 	tsteq	pc, r1
    6350:	01f30353 	mvnseq	r0, r3, asr r3
    6354:	00200051 	eoreq	r0, r0, r1, asr r0
    6358:	75000000 	strvc	r0, [r0, #-0]
    635c:	1f000020 	svcne	0x00000020
    6360:	74025001 	strvc	r5, [r2], #-1
    6364:	21000000 	mrscs	r0, (UNDEF: 0)
    6368:	0011f801 	andseq	pc, r1, r1, lsl #16
    636c:	02840100 	addeq	r0, r4, #0, 2
    6370:	03f20113 	mvnseq	r0, #-1073741820	; 0xc0000004
	...
    637c:	56600000 	strbtpl	r0, [r0], -r0
    6380:	75010000 	strvc	r0, [r1, #-0]
    6384:	19000020 	stmdbne	r0, {r5}
    6388:	0000130d 	andeq	r1, r0, sp, lsl #6
    638c:	34028401 	strcc	r8, [r2], #-1025	; 0xfffffbff
    6390:	000000e2 	andeq	r0, r0, r2, ror #1
    6394:	00005684 	andeq	r5, r0, r4, lsl #13
    6398:	00005680 	andeq	r5, r0, r0, lsl #13
    639c:	000ec21a 	andeq	ip, lr, sl, lsl r2
    63a0:	02860100 	addeq	r0, r6, #0, 2
    63a4:	0003f217 	andeq	pc, r3, r7, lsl r2	; <UNPREDICTABLE>
    63a8:	0056a900 	subseq	sl, r6, r0, lsl #18
    63ac:	0056a500 	subseq	sl, r6, r0, lsl #10
    63b0:	111f2500 	tstne	pc, r0, lsl #10
    63b4:	87010000 	strhi	r0, [r1, -r0]
    63b8:	01151b02 	tsteq	r5, r2, lsl #22
    63bc:	25010000 	strcs	r0, [r1, #-0]
    63c0:	00000ea6 	andeq	r0, r0, r6, lsr #29
    63c4:	3e028701 	cdpcc	7, 0, cr8, cr2, cr1, {0}
    63c8:	00000115 	andeq	r0, r0, r5, lsl r1
    63cc:	00001e00 	andeq	r1, r0, r0, lsl #28
    63d0:	21600000 	cmncs	r0, r0
    63d4:	20640000 	rsbcs	r0, r4, r0
    63d8:	011f0000 	tsteq	pc, r0
    63dc:	1f310150 	svcne	0x00310150
    63e0:	30015101 	andcc	r5, r1, r1, lsl #2
    63e4:	00002000 	andeq	r2, r0, r0
    63e8:	20750000 	rsbscs	r0, r5, r0
    63ec:	011f0000 	tsteq	pc, r0
    63f0:	00740250 	rsbseq	r0, r4, r0, asr r2
    63f4:	17260000 	strne	r0, [r6, -r0]!
    63f8:	01000012 	tsteq	r0, r2, lsl r0
    63fc:	01110266 	tsteq	r1, r6, ror #4
	...
    6408:	000056c7 	andeq	r5, r0, r7, asr #13
    640c:	0020c601 	eoreq	ip, r0, r1, lsl #12
    6410:	0ec11900 	vdiveq.f16	s3, s2, s0	; <UNPREDICTABLE>
    6414:	66010000 	strvs	r0, [r1], -r0
    6418:	06942f02 	ldreq	r2, [r4], r2, lsl #30
    641c:	56f90000 	ldrbtpl	r0, [r9], r0
    6420:	56f30000 	ldrbtpl	r0, [r3], r0
    6424:	00200000 	eoreq	r0, r0, r0
    6428:	d0000000 	andle	r0, r0, r0
    642c:	1f00001a 	svcne	0x0000001a
    6430:	f3035001 	vhadd.u8	d5, d3, d1
    6434:	011f5001 	tsteq	pc, r1
    6438:	1f300151 	svcne	0x00300151
    643c:	30015201 	andcc	r5, r1, r1, lsl #4
    6440:	0153011f 	cmpeq	r3, pc, lsl r1
    6444:	26000030 			; <UNDEFINED> instruction: 0x26000030
    6448:	00000e90 	muleq	r0, r0, lr
    644c:	0d023601 	stceq	6, cr3, [r2, #-4]
    6450:	00230e01 	eoreq	r0, r3, r1, lsl #28
    6454:	00233410 	eoreq	r3, r3, r0, lsl r4
    6458:	00572510 	subseq	r2, r7, r0, lsl r5
    645c:	21600100 	cmncs	r0, r0, lsl #2
    6460:	53190000 	tstpl	r9, #0
    6464:	01000013 	tsteq	r0, r3, lsl r0
    6468:	15360236 	ldrne	r0, [r6, #-566]!	; 0xfffffdca
    646c:	4d000001 	stcmi	0, cr0, [r0, #-4]
    6470:	45000057 	strmi	r0, [r0, #-87]	; 0xffffffa9
    6474:	19000057 	stmdbne	r0, {r0, r1, r2, r4, r6}
    6478:	000010c4 	andeq	r1, r0, r4, asr #1
    647c:	36023701 	strcc	r3, [r2], -r1, lsl #14
    6480:	00000115 	andeq	r0, r0, r5, lsl r1
    6484:	0000578e 	andeq	r5, r0, lr, lsl #15
    6488:	00005786 	andeq	r5, r0, r6, lsl #15
    648c:	000fbf19 	andeq	fp, pc, r9, lsl pc	; <UNPREDICTABLE>
    6490:	02380100 	eorseq	r0, r8, #0, 2
    6494:	00012b2e 	andeq	r2, r1, lr, lsr #22
    6498:	0057cb00 	subseq	ip, r7, r0, lsl #22
    649c:	0057c500 	subseq	ip, r7, r0, lsl #10
    64a0:	130d1900 	movwne	r1, #55552	; 0xd900
    64a4:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    64a8:	00e23202 	rsceq	r3, r2, r2, lsl #4
    64ac:	57fb0000 	ldrbpl	r0, [fp, r0]!
    64b0:	57f70000 	ldrbpl	r0, [r7, r0]!
    64b4:	c1190000 	tstgt	r9, r0
    64b8:	0100000e 	tsteq	r0, lr
    64bc:	942e023a 	strtls	r0, [lr], #-570	; 0xfffffdc6
    64c0:	20000006 	andcs	r0, r0, r6
    64c4:	1c000058 	stcne	0, cr0, [r0], {88}	; 0x58
    64c8:	20000058 	andcs	r0, r0, r8, asr r0
    64cc:	10002326 	andne	r2, r0, r6, lsr #6
    64d0:	0000238a 	andeq	r2, r0, sl, lsl #7
    64d4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    64d8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    64dc:	00310151 	eorseq	r0, r1, r1, asr r1
    64e0:	e4012100 	str	r2, [r1], #-256	; 0xffffff00
    64e4:	01000011 	tsteq	r0, r1, lsl r0
    64e8:	011301f6 			; <UNDEFINED> instruction: 0x011301f6
    64ec:	000003f2 	strdeq	r0, [r0], -r2
	...
    64f8:	00005840 	andeq	r5, r0, r0, asr #16
    64fc:	00224201 	eoreq	r4, r2, r1, lsl #4
    6500:	13531900 	cmpne	r3, #0, 18
    6504:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    6508:	01153a01 	tsteq	r5, r1, lsl #20
    650c:	58900000 	ldmpl	r0, {}	; <UNPREDICTABLE>
    6510:	58840000 	stmpl	r4, {}	; <UNPREDICTABLE>
    6514:	c4190000 	ldrgt	r0, [r9], #-0
    6518:	01000010 	tsteq	r0, r0, lsl r0
    651c:	153a01f7 	ldrne	r0, [sl, #-503]!	; 0xfffffe09
    6520:	e7000001 	str	r0, [r0, -r1]
    6524:	dd000058 	stcle	0, cr0, [r0, #-352]	; 0xfffffea0
    6528:	19000058 	stmdbne	r0, {r3, r4, r6}
    652c:	0000130d 	andeq	r1, r0, sp, lsl #6
    6530:	3601f801 	strcc	pc, [r1], -r1, lsl #16
    6534:	000000e2 	andeq	r0, r0, r2, ror #1
    6538:	00005931 	andeq	r5, r0, r1, lsr r9
    653c:	00005929 	andeq	r5, r0, r9, lsr #18
    6540:	000ec11a 	andeq	ip, lr, sl, lsl r1
    6544:	01fa0100 	mvnseq	r0, r0, lsl #2
    6548:	00069413 	andeq	r9, r6, r3, lsl r4
    654c:	00597500 	subseq	r7, r9, r0, lsl #10
    6550:	00596b00 	subseq	r6, r9, r0, lsl #22
    6554:	13fa1a00 	mvnsne	r1, #0, 20
    6558:	fb010000 	blx	46562 <__HEAP_SIZE+0x45562>
    655c:	00291001 	eoreq	r1, r9, r1
    6560:	59bd0000 	ldmibpl	sp!, {}	; <UNPREDICTABLE>
    6564:	59b70000 	ldmibpl	r7!, {}	; <UNPREDICTABLE>
    6568:	bf1a0000 	svclt	0x001a0000
    656c:	0100000f 	tsteq	r0, pc
    6570:	2b1301fc 	blcs	4c6d68 <__RAM_SIZE+0x3c6d68>
    6574:	f6000001 			; <UNDEFINED> instruction: 0xf6000001
    6578:	ee000059 	mcr	0, 0, r0, cr0, cr9, {2}
    657c:	1e000059 	mcrne	0, 0, r0, cr0, cr9, {2}
    6580:	00000000 	andeq	r0, r0, r0
    6584:	00002585 	andeq	r2, r0, r5, lsl #11
    6588:	00002217 	andeq	r2, r0, r7, lsl r2
    658c:	0750011f 	smmlaeq	r0, pc, r1, r0	; <UNPREDICTABLE>
    6590:	00760074 	rsbseq	r0, r6, r4, ror r0
    6594:	0064231e 	rsbeq	r2, r4, lr, lsl r3
    6598:	00000020 	andeq	r0, r0, r0, lsr #32
    659c:	0020c600 	eoreq	ip, r0, r0, lsl #12
    65a0:	50011f00 	andpl	r1, r1, r0, lsl #30
    65a4:	1f007602 	svcne	0x00007602
    65a8:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    65ac:	52011f00 	andpl	r1, r1, #0, 30
    65b0:	00e47503 	rsceq	r7, r4, r3, lsl #10
    65b4:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    65b8:	021f0077 	andseq	r0, pc, #119	; 0x77
    65bc:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    65c0:	24000000 	strcs	r0, [r0], #-0
    65c4:	000cd701 	andeq	sp, ip, r1, lsl #14
    65c8:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    65cc:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    65d8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    65dc:	22bf0100 	adcscs	r0, pc, #0, 2
    65e0:	b2190000 	andslt	r0, r9, #0
    65e4:	01000014 	tsteq	r0, r4, lsl r0
    65e8:	f23d01be 	vorn	d0, d29, d30
    65ec:	38000003 	stmdacc	r0, {r0, r1}
    65f0:	3000005a 	andcc	r0, r0, sl, asr r0
    65f4:	2900005a 	stmdbcs	r0, {r1, r3, r4, r6}
    65f8:	00000fbe 			; <UNDEFINED> instruction: 0x00000fbe
    65fc:	3a01bf01 	bcc	76208 <__HEAP_SIZE+0x75208>
    6600:	000022bf 			; <UNDEFINED> instruction: 0x000022bf
    6604:	aa295101 	bge	a5aa10 <__RAM_SIZE+0x95aa10>
    6608:	01000011 	tsteq	r0, r1, lsl r0
    660c:	c54001c0 	strbgt	r0, [r0, #-448]	; 0xfffffe40
    6610:	01000022 	tsteq	r0, r2, lsr #32
    6614:	1cd11a52 	vldmiane	r1, {s3-s84}
    6618:	c2010000 	andgt	r0, r1, #0
    661c:	00f31401 	rscseq	r1, r3, r1, lsl #8
    6620:	5a740000 	bpl	1d06628 <__RAM_SIZE+0x1c06628>
    6624:	5a700000 	bpl	1c0662c <__RAM_SIZE+0x1b0662c>
    6628:	b11a0000 	tstlt	sl, r0
    662c:	01000014 	tsteq	r0, r4, lsl r0
    6630:	9a1901c3 	bls	646d44 <__RAM_SIZE+0x546d44>
    6634:	9c000006 	stcls	0, cr0, [r0], {6}
    6638:	9400005a 	strls	r0, [r0], #-90	; 0xffffffa6
    663c:	0000005a 	andeq	r0, r0, sl, asr r0
    6640:	012b0407 			; <UNDEFINED> instruction: 0x012b0407
    6644:	04070000 	streq	r0, [r7], #-0
    6648:	00001e23 	andeq	r1, r0, r3, lsr #28
    664c:	14970121 	ldrne	r0, [r7], #289	; 0x121
    6650:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    6654:	f2011301 	vcgt.s8	d1, d1, d1
    6658:	34000003 	strcc	r0, [r0], #-3
    665c:	72100023 	andsvc	r0, r0, #35	; 0x23
    6660:	d4100023 	ldrle	r0, [r0], #-35	; 0xffffffdd
    6664:	0100005a 	qaddeq	r0, sl, r0
    6668:	0000238a 	andeq	r2, r0, sl, lsl #7
    666c:	00135319 	andseq	r5, r3, r9, lsl r3
    6670:	01780100 	cmneq	r8, r0, lsl #2
    6674:	00011540 	andeq	r1, r1, r0, asr #10
    6678:	005b4600 	subseq	r4, fp, r0, lsl #12
    667c:	005b3000 	subseq	r3, fp, r0
    6680:	10c41900 	sbcne	r1, r4, r0, lsl #18
    6684:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    6688:	01154001 	tsteq	r5, r1
    668c:	5bd30000 	blpl	ff4c6694 <__StackTop+0xc73c6694>
    6690:	5bcd0000 	blpl	ff346698 <__StackTop+0xc7246698>
    6694:	bf190000 	svclt	0x00190000
    6698:	0100000f 	tsteq	r0, pc
    669c:	2b38017a 	blcs	e06c8c <__RAM_SIZE+0xd06c8c>
    66a0:	05000001 	streq	r0, [r0, #-1]
    66a4:	ff00005c 			; <UNDEFINED> instruction: 0xff00005c
    66a8:	1900005b 	stmdbne	r0, {r0, r1, r3, r4, r6}
    66ac:	000011ab 	andeq	r1, r0, fp, lsr #3
    66b0:	3e017b01 	vmlacc.f64	d7, d1, d1
    66b4:	00001e23 	andeq	r1, r0, r3, lsr #28
    66b8:	00005c37 	andeq	r5, r0, r7, lsr ip
    66bc:	00005c31 	andeq	r5, r0, r1, lsr ip
    66c0:	00130d19 	andseq	r0, r3, r9, lsl sp
    66c4:	017c0100 	cmneq	ip, r0, lsl #2
    66c8:	0000e23c 	andeq	lr, r0, ip, lsr r2
    66cc:	005c6400 	subseq	r6, ip, r0, lsl #8
    66d0:	005c6000 	subseq	r6, ip, r0
    66d4:	0ec11a00 	vdiveq.f32	s3, s2, s0
    66d8:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    66dc:	06941301 	ldreq	r1, [r4], r1, lsl #6
    66e0:	5c900000 	ldcpl	0, cr0, [r0], {0}
    66e4:	5c840000 	stcpl	0, cr0, [r4], {0}
    66e8:	58200000 	stmdapl	r0!, {}	; <UNPREDICTABLE>
    66ec:	c6100023 	ldrgt	r0, [r0], -r3, lsr #32
    66f0:	1f000020 	svcne	0x00000020
    66f4:	f3035001 	vhadd.u8	d5, d3, d1
    66f8:	011f5001 	tsteq	pc, r1
    66fc:	00910453 	addseq	r0, r1, r3, asr r4
    6700:	021f0194 	andseq	r0, pc, #148, 2	; 0x25
    6704:	7402007d 	strvc	r0, [r2], #-125	; 0xffffff83
    6708:	21000000 	mrscs	r0, (UNDEF: 0)
    670c:	0015b501 	andseq	fp, r5, r1, lsl #10
    6710:	012f0100 			; <UNDEFINED> instruction: 0x012f0100
    6714:	00f3010c 	rscseq	r0, r3, ip, lsl #2
    6718:	22880000 	addcs	r0, r8, #0
    671c:	230e1000 	movwcs	r1, #57344	; 0xe000
    6720:	5cdd1000 	ldclpl	0, cr1, [sp], {0}
    6724:	52010000 	andpl	r0, r1, #0
    6728:	19000024 	stmdbne	r0, {r2, r5}
    672c:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    6730:	2e012f01 	cdpcs	15, 0, cr2, cr1, cr1, {0}
    6734:	000003f2 	strdeq	r0, [r0], -r2
    6738:	00005d25 	andeq	r5, r0, r5, lsr #26
    673c:	00005d15 	andeq	r5, r0, r5, lsl sp
    6740:	000ec219 	andeq	ip, lr, r9, lsl r2
    6744:	01300100 	teqeq	r0, r0, lsl #2
    6748:	0000f32b 	andeq	pc, r0, fp, lsr #6
    674c:	005d9000 	subseq	r9, sp, r0
    6750:	005d8800 	subseq	r8, sp, r0, lsl #16
    6754:	1cd11a00 	vldmiane	r1, {s3-s2}
    6758:	32010000 	andcc	r0, r1, #0
    675c:	00f31001 	rscseq	r1, r3, r1
    6760:	5dca0000 	stclpl	0, cr0, [sl]
    6764:	5dc40000 	stclpl	0, cr0, [r4]
    6768:	b11a0000 	tstlt	sl, r0
    676c:	01000014 	tsteq	r0, r4, lsl r0
    6770:	9a150133 	bls	546c44 <__RAM_SIZE+0x446c44>
    6774:	06000006 	streq	r0, [r0], -r6
    6778:	f600005e 			; <UNDEFINED> instruction: 0xf600005e
    677c:	1d00005d 	stcne	0, cr0, [r0, #-372]	; 0xfffffe8c
    6780:	100022b0 			; <UNDEFINED> instruction: 0x100022b0
    6784:	00002470 	andeq	r2, r0, r0, ror r4
    6788:	0022de1d 	eoreq	sp, r2, sp, lsl lr
    678c:	00247e10 	eoreq	r7, r4, r0, lsl lr
    6790:	22ea1e00 	rsccs	r1, sl, #0, 28
    6794:	24611000 	strbtcs	r1, [r1], #-0
    6798:	24240000 	strtcs	r0, [r4], #-0
    679c:	011f0000 	tsteq	pc, r0
    67a0:	10740250 	rsbsne	r0, r4, r0, asr r2
    67a4:	22f21d00 	rscscs	r1, r2, #0, 26
    67a8:	24f01000 	ldrbtcs	r1, [r0], #0
    67ac:	fc1e0000 	ldc2	0, cr0, [lr], {-0}
    67b0:	93100022 	tstls	r0, #34	; 0x22
    67b4:	41000025 	tstmi	r0, r5, lsr #32
    67b8:	1f000024 	svcne	0x00000024
    67bc:	74025001 	strvc	r5, [r2], #-1
    67c0:	04200010 	strteq	r0, [r0], #-16
    67c4:	93100023 	tstls	r0, #35	; 0x23
    67c8:	1f000025 	svcne	0x00000025
    67cc:	74025001 	strvc	r5, [r2], #-1
    67d0:	2c00002c 	stccs	0, cr0, [r0], {44}	; 0x2c
    67d4:	0f580101 	svceq	0x00580101
    67d8:	0f580000 	svceq	0x00580000
    67dc:	c6080000 	strgt	r0, [r8], -r0
    67e0:	012c0d06 			; <UNDEFINED> instruction: 0x012c0d06
    67e4:	00163f01 	andseq	r3, r6, r1, lsl #30
    67e8:	00163f00 	andseq	r3, r6, r0, lsl #30
    67ec:	0de80800 	stcleq	8, cr0, [r8]
    67f0:	01012d0c 	tsteq	r1, ip, lsl #26
    67f4:	00000e26 	andeq	r0, r0, r6, lsr #28
    67f8:	00000e26 	andeq	r0, r0, r6, lsr #28
    67fc:	2d0d7105 	stfcss	f7, [sp, #-20]	; 0xffffffec
    6800:	0c810101 	stfeqs	f0, [r1], {1}
    6804:	0c810000 	stceq	0, cr0, [r1], {0}
    6808:	72050000 	andvc	r0, r5, #0
    680c:	01012c0d 	tsteq	r1, sp, lsl #24
    6810:	00001174 	andeq	r1, r0, r4, ror r1
    6814:	00001174 	andeq	r1, r0, r4, ror r1
    6818:	060dcc08 	streq	ip, [sp], -r8, lsl #24
    681c:	cb01012c 	blgt	46cd4 <__HEAP_SIZE+0x45cd4>
    6820:	cb000014 	blgt	6878 <__HEAP_SIZE+0x5878>
    6824:	08000014 	stmdaeq	r0, {r2, r4}
    6828:	2e060e0e 	cdpcs	14, 0, cr0, cr6, cr14, {0}
    682c:	0e430101 	dvfeqs	f0, f3, f1
    6830:	0e390000 	cdpeq	0, 3, cr0, cr9, cr0, {0}
    6834:	000b0000 	andeq	r0, fp, r0
    6838:	0701012c 	streq	r0, [r1, -ip, lsr #2]
    683c:	07000011 	smladeq	r0, r1, r0, r0
    6840:	08000011 	stmdaeq	r0, {r0, r4}
    6844:	2d0c0e20 	stccs	14, cr0, [ip, #-128]	; 0xffffff80
    6848:	14560101 	ldrbne	r0, [r6], #-257	; 0xfffffeff
    684c:	14560000 	ldrbne	r0, [r6], #-0
    6850:	b80a0000 	stmdalt	sl, {}	; <UNPREDICTABLE>
    6854:	01012d06 	tsteq	r1, r6, lsl #26
    6858:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    685c:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    6860:	2d117405 	cfldrscs	mvf7, [r1, #-20]	; 0xffffffec
    6864:	0edc0101 	cdpeq	1, 13, cr0, cr12, cr1, {0}
    6868:	0edc0000 	cdpeq	0, 13, cr0, cr12, cr0, {0}
    686c:	75050000 	strvc	r0, [r5, #-0]
    6870:	01012d0d 	tsteq	r1, sp, lsl #26
    6874:	00000cbc 			; <UNDEFINED> instruction: 0x00000cbc
    6878:	00000cbc 			; <UNDEFINED> instruction: 0x00000cbc
    687c:	2c0d6f05 	stccs	15, cr6, [sp], {5}
    6880:	12950101 	addsne	r0, r5, #1073741824	; 0x40000000
    6884:	12950000 	addsne	r0, r5, #0
    6888:	65080000 	strvs	r0, [r8, #-0]
    688c:	012c060e 			; <UNDEFINED> instruction: 0x012c060e
    6890:	00140c01 	andseq	r0, r4, r1, lsl #24
    6894:	00140c00 	andseq	r0, r4, r0, lsl #24
    6898:	06930800 	ldreq	r0, [r3], r0, lsl #16
    689c:	01012c0c 	tsteq	r1, ip, lsl #24
    68a0:	00000f6f 	andeq	r0, r0, pc, ror #30
    68a4:	00000f6f 	andeq	r0, r0, pc, ror #30
    68a8:	06065b08 	streq	r5, [r6], -r8, lsl #22
    68ac:	4101012c 	tstmi	r1, ip, lsr #2
    68b0:	41000014 	tstmi	r0, r4, lsl r0
    68b4:	08000014 	stmdaeq	r0, {r2, r4}
    68b8:	2c0c0d53 	stccs	13, cr0, [ip], {83}	; 0x53
    68bc:	106e0101 	rsbne	r0, lr, r1, lsl #2
    68c0:	106e0000 	rsbne	r0, lr, r0
    68c4:	bb080000 	bllt	2068cc <__RAM_SIZE+0x1068cc>
    68c8:	012c060d 			; <UNDEFINED> instruction: 0x012c060d
    68cc:	00108401 	andseq	r8, r0, r1, lsl #8
    68d0:	00108400 	andseq	r8, r0, r0, lsl #8
    68d4:	0e5f0800 	cdpeq	8, 5, cr0, cr15, cr0, {0}
    68d8:	01012c0e 	tsteq	r1, lr, lsl #24
    68dc:	0000155a 	andeq	r1, r0, sl, asr r5
    68e0:	0000155a 	andeq	r1, r0, sl, asr r5
    68e4:	060e2a08 	streq	r2, [lr], -r8, lsl #20
    68e8:	dc01012c 	stfles	f0, [r1], {44}	; 0x2c
    68ec:	dc000014 	stcle	0, cr0, [r0], {20}
    68f0:	08000014 	stmdaeq	r0, {r2, r4}
    68f4:	2c0c0e1a 	stccs	14, cr0, [ip], {26}
    68f8:	0aa20101 	beq	fe886d04 <__StackTop+0xc6786d04>
    68fc:	0aa20000 	beq	fe886904 <__StackTop+0xc6786904>
    6900:	03080000 	movweq	r0, #32768	; 0x8000
    6904:	012d0e0e 			; <UNDEFINED> instruction: 0x012d0e0e
    6908:	000f4b01 	andeq	r4, pc, r1, lsl #22
    690c:	000f4b00 	andeq	r4, pc, r0, lsl #22
    6910:	08b50a00 	ldmeq	r5!, {r9, fp}
    6914:	e501012c 	str	r0, [r1, #-300]	; 0xfffffed4
    6918:	e500000b 	str	r0, [r0, #-11]
    691c:	0700000b 	streq	r0, [r0, -fp]
    6920:	000601b9 			; <UNDEFINED> instruction: 0x000601b9
    6924:	00003dd5 	ldrdeq	r3, [r0], -r5
    6928:	11ca0002 	bicne	r0, sl, r2
    692c:	01040000 	mrseq	r0, (UNDEF: 4)
    6930:	000000dc 	ldrdeq	r0, [r0], -ip
    6934:	0023bd0c 	eoreq	fp, r3, ip, lsl #26
    6938:	0001c500 	andeq	ip, r1, r0, lsl #10
    693c:	0007e800 	andeq	lr, r7, r0, lsl #16
	...
    6948:	0043c600 	subeq	ip, r3, r0, lsl #12
    694c:	000a0200 	andeq	r0, sl, r0, lsl #4
    6950:	d1020000 	mrsle	r0, (UNDEF: 2)
    6954:	00003a17 	andeq	r3, r0, r7, lsl sl
    6958:	00290300 	eoreq	r0, r9, r0, lsl #6
    695c:	04040000 	streq	r0, [r4], #-0
    6960:	00023a07 	andeq	r3, r2, r7, lsl #20
    6964:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    6968:	00746e69 	rsbseq	r6, r4, r9, ror #28
    696c:	8e050804 	cdphi	8, 0, cr0, cr5, cr4, {0}
    6970:	04000002 	streq	r0, [r0], #-2
    6974:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
    6978:	01040000 	mrseq	r0, (UNDEF: 4)
    697c:	0000ac06 	andeq	sl, r0, r6, lsl #24
    6980:	00000200 	andeq	r0, r0, r0, lsl #4
    6984:	2b030000 	blcs	c698c <__HEAP_SIZE+0xc598c>
    6988:	00006918 	andeq	r6, r0, r8, lsl r9
    698c:	08010400 	stmdaeq	r1, {sl}
    6990:	000000aa 	andeq	r0, r0, sl, lsr #1
    6994:	de050204 	cdple	2, 0, cr0, cr5, cr4, {0}
    6998:	04000002 	streq	r0, [r0], #-2
    699c:	00c90702 	sbceq	r0, r9, r2, lsl #14
    69a0:	04040000 	streq	r0, [r4], #-0
    69a4:	00029305 	andeq	r9, r2, r5, lsl #6
    69a8:	03b60200 			; <UNDEFINED> instruction: 0x03b60200
    69ac:	4f030000 	svcmi	0x00030000
    69b0:	00009119 	andeq	r9, r0, r9, lsl r1
    69b4:	07040400 	streq	r0, [r4, -r0, lsl #8]
    69b8:	00000235 	andeq	r0, r0, r5, lsr r2
    69bc:	30070804 	andcc	r0, r7, r4, lsl #16
    69c0:	06000002 	streq	r0, [r0], -r2
    69c4:	009f0304 	addseq	r0, pc, r4, lsl #6
    69c8:	04070000 	streq	r0, [r7], #-0
    69cc:	000000ac 	andeq	r0, r0, ip, lsr #1
    69d0:	b3080104 	movwlt	r0, #33028	; 0x8104
    69d4:	03000000 	movweq	r0, #0
    69d8:	000000ac 	andeq	r0, r0, ip, lsr #1
    69dc:	00b30407 	adcseq	r0, r3, r7, lsl #8
    69e0:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    69e4:	02000000 	andeq	r0, r0, #0
    69e8:	00000002 	andeq	r0, r0, r2
    69ec:	5d131804 	ldcpl	8, cr1, [r3, #-16]
    69f0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    69f4:	000000c3 	andeq	r0, r0, r3, asr #1
    69f8:	0000c303 	andeq	ip, r0, r3, lsl #6
    69fc:	03b80200 			; <UNDEFINED> instruction: 0x03b80200
    6a00:	30040000 	andcc	r0, r4, r0
    6a04:	00008514 	andeq	r8, r0, r4, lsl r5
    6a08:	00d90800 	sbcseq	r0, r9, r0, lsl #16
    6a0c:	f6020000 			; <UNDEFINED> instruction: 0xf6020000
    6a10:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    6a14:	00f61124 	rscseq	r1, r6, r4, lsr #2
    6a18:	04070000 	streq	r0, [r7], #-0
    6a1c:	000000fc 	strdeq	r0, [r0], -ip
    6a20:	01080109 	tsteq	r8, r9, lsl #2
    6a24:	9f0a0000 	svcls	0x000a0000
    6a28:	00000000 	andeq	r0, r0, r0
    6a2c:	000ad102 	andeq	sp, sl, r2, lsl #2
    6a30:	1a490600 	bne	1248238 <__RAM_SIZE+0x1148238>
    6a34:	000000d9 	ldrdeq	r0, [r0], -r9
    6a38:	00010808 	andeq	r0, r1, r8, lsl #16
    6a3c:	0abd0200 	beq	fef47244 <__StackTop+0xc6e47244>
    6a40:	4a060000 	bmi	186a48 <__RAM_SIZE+0x86a48>
    6a44:	00007e1a 	andeq	r7, r0, sl, lsl lr
    6a48:	01190800 	tsteq	r9, r0, lsl #16
    6a4c:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
    6a50:	02000001 	andeq	r0, r0, #1
    6a54:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
    6a58:	911a4b06 	tstls	sl, r6, lsl #22
    6a5c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6a60:	0000012f 	andeq	r0, r0, pc, lsr #2
    6a64:	00013b03 	andeq	r3, r1, r3, lsl #22
    6a68:	012f0300 			; <UNDEFINED> instruction: 0x012f0300
    6a6c:	6a020000 	bvs	86a74 <__HEAP_SIZE+0x85a74>
    6a70:	0600000b 	streq	r0, [r0], -fp
    6a74:	00d91a51 	sbcseq	r1, r9, r1, asr sl
    6a78:	4a080000 	bmi	206a80 <__RAM_SIZE+0x106a80>
    6a7c:	03000001 	movweq	r0, #1
    6a80:	0000014a 	andeq	r0, r0, sl, asr #2
    6a84:	00c30407 	sbceq	r0, r3, r7, lsl #8
    6a88:	b90b0000 	stmdblt	fp, {}	; <UNPREDICTABLE>
    6a8c:	14000014 	strne	r0, [r0], #-20	; 0xffffffec
    6a90:	080c0c07 	stmdaeq	ip, {r0, r1, r2, sl, fp}
    6a94:	00000195 	muleq	r0, r5, r1
    6a98:	0010100c 	andseq	r1, r0, ip
    6a9c:	0c110700 	ldceq	7, cr0, [r1], {-0}
    6aa0:	00014a10 	andeq	r4, r1, r0, lsl sl
    6aa4:	00230200 	eoreq	r0, r3, r0, lsl #4
    6aa8:	0010060c 	andseq	r0, r0, ip, lsl #12
    6aac:	0c120700 	ldceq	7, cr0, [r2], {-0}
    6ab0:	0001950c 	andeq	r9, r1, ip, lsl #10
    6ab4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6ab8:	009f0d00 	addseq	r0, pc, r0, lsl #26
    6abc:	01a50000 			; <UNDEFINED> instruction: 0x01a50000
    6ac0:	3a0e0000 	bcc	386ac8 <__RAM_SIZE+0x286ac8>
    6ac4:	03000000 	movweq	r0, #0
    6ac8:	1bef0f00 	blne	ffbca6d0 <__StackTop+0xc7aca6d0>
    6acc:	17070000 	strne	r0, [r7, -r0]
    6ad0:	0166220c 	cmneq	r6, ip, lsl #4
    6ad4:	480b0000 	stmdami	fp, {}	; <UNPREDICTABLE>
    6ad8:	74000022 	strvc	r0, [r0], #-34	; 0xffffffde
    6adc:	100c4307 	andne	r4, ip, r7, lsl #6
    6ae0:	00000291 	muleq	r0, r1, r2
    6ae4:	001e640c 	andseq	r6, lr, ip, lsl #8
    6ae8:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    6aec:	00009f0c 	andeq	r9, r0, ip, lsl #30
    6af0:	00230200 	eoreq	r0, r3, r0, lsl #4
    6af4:	00157e0c 	andseq	r7, r5, ip, lsl #28
    6af8:	0c4c0700 	mcrreq	7, 0, r0, ip, cr0
    6afc:	00029116 	andeq	r9, r2, r6, lsl r1
    6b00:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6b04:	001c730c 	andseq	r7, ip, ip, lsl #6
    6b08:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    6b0c:	00012f11 	andeq	r2, r1, r1, lsl pc
    6b10:	2c230200 	sfmcs	f0, 4, [r3], #-0
    6b14:	001e770c 	andseq	r7, lr, ip, lsl #14
    6b18:	0c4e0700 	mcrreq	7, 0, r0, lr, cr0
    6b1c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    6b20:	30230200 	eorcc	r0, r3, r0, lsl #4
    6b24:	00207c0c 	eoreq	r7, r0, ip, lsl #24
    6b28:	0c530700 	mrrceq	7, 0, r0, r3, cr0
    6b2c:	0002a10d 	andeq	sl, r2, sp, lsl #2
    6b30:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    6b34:	001e800c 	andseq	r8, lr, ip
    6b38:	0c580700 	mrrceq	7, 0, r0, r8, cr0
    6b3c:	00009f10 	andeq	r9, r0, r0, lsl pc
    6b40:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    6b44:	0017400c 	andseq	r4, r7, ip
    6b48:	0c5e0700 	mrrceq	7, 0, r0, lr, cr0
    6b4c:	0002b115 	andeq	fp, r2, r5, lsl r1
    6b50:	58230200 	stmdapl	r3!, {r9}
    6b54:	00174a0c 	andseq	r4, r7, ip, lsl #20
    6b58:	0c610700 	stcleq	7, cr0, [r1], #-0
    6b5c:	0002b115 	andeq	fp, r2, r5, lsl r1
    6b60:	60230200 	eorvs	r0, r3, r0, lsl #4
    6b64:	00202d0c 	eoreq	r2, r0, ip, lsl #26
    6b68:	0c640700 	stcleq	7, cr0, [r4], #-0
    6b6c:	00009f10 	andeq	r9, r0, r0, lsl pc
    6b70:	68230200 	stmdavs	r3!, {r9}
    6b74:	0022770c 	eoreq	r7, r2, ip, lsl #14
    6b78:	0c700700 	ldcleq	7, cr0, [r0], #-0
    6b7c:	0002c112 	andeq	ip, r2, r2, lsl r1
    6b80:	6c230200 	sfmvs	f0, 4, [r3], #-0
    6b84:	001e6d0c 	andseq	r6, lr, ip, lsl #26
    6b88:	0c710700 	ldcleq	7, cr0, [r1], #-0
    6b8c:	0002d111 	andeq	sp, r2, r1, lsl r1
    6b90:	70230200 	eorvc	r0, r3, r0, lsl #4
    6b94:	00186d0c 	andseq	r6, r8, ip, lsl #26
    6b98:	0c740700 	ldcleq	7, cr0, [r4], #-0
    6b9c:	0000c311 	andeq	ip, r0, r1, lsl r3
    6ba0:	71230200 			; <UNDEFINED> instruction: 0x71230200
    6ba4:	001f450c 	andseq	r4, pc, ip, lsl #10
    6ba8:	0c780700 	ldcleq	7, cr0, [r8], #-0
    6bac:	0000c311 	andeq	ip, r0, r1, lsl r3
    6bb0:	72230200 	eorvc	r0, r3, #0, 4
    6bb4:	01a50d00 			; <UNDEFINED> instruction: 0x01a50d00
    6bb8:	02a10000 	adceq	r0, r1, #0
    6bbc:	3a0e0000 	bcc	386bc4 <__RAM_SIZE+0x286bc4>
    6bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bc4:	00c30d00 	sbceq	r0, r3, r0, lsl #26
    6bc8:	02b10000 	adcseq	r0, r1, #0
    6bcc:	3a0e0000 	bcc	386bd4 <__RAM_SIZE+0x286bd4>
    6bd0:	1f000000 	svcne	0x00000000
    6bd4:	012f0d00 			; <UNDEFINED> instruction: 0x012f0d00
    6bd8:	02c10000 	sbceq	r0, r1, #0
    6bdc:	3a0e0000 	bcc	386be4 <__RAM_SIZE+0x286be4>
    6be0:	01000000 	mrseq	r0, (UNDEF: 0)
    6be4:	00d90d00 	sbcseq	r0, r9, r0, lsl #26
    6be8:	02d10000 	sbcseq	r0, r1, #0
    6bec:	3a0e0000 	bcc	386bf4 <__RAM_SIZE+0x286bf4>
    6bf0:	00000000 	andeq	r0, r0, r0
    6bf4:	00c30d00 	sbceq	r0, r3, r0, lsl #26
    6bf8:	02e10000 	rsceq	r0, r1, #0
    6bfc:	3a0e0000 	bcc	386c04 <__RAM_SIZE+0x286c04>
    6c00:	00000000 	andeq	r0, r0, r0
    6c04:	16830f00 	strne	r0, [r3], r0, lsl #30
    6c08:	7d070000 	stcvc	0, cr0, [r7, #-0]
    6c0c:	01b2030c 			; <UNDEFINED> instruction: 0x01b2030c
    6c10:	91100000 	tstls	r0, r0
    6c14:	1400000b 	strne	r0, [r0], #-11
    6c18:	47089008 	strmi	r9, [r8, -r8]
    6c1c:	11000003 	tstne	r0, r3
    6c20:	00000b75 	andeq	r0, r0, r5, ror fp
    6c24:	4a249308 	bmi	92b84c <__RAM_SIZE+0x82b84c>
    6c28:	02000001 	andeq	r0, r0, #1
    6c2c:	de110023 	cdple	0, 1, cr0, cr1, cr3, {1}
    6c30:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    6c34:	03472d94 	movteq	r2, #32148	; 0x7d94
    6c38:	23020000 	movwcs	r0, #8192	; 0x2000
    6c3c:	0c211104 	stfeqs	f1, [r1], #-16
    6c40:	95080000 	strls	r0, [r8, #-0]
    6c44:	0003472d 	andeq	r4, r3, sp, lsr #14
    6c48:	08230200 	stmdaeq	r3!, {r9}
    6c4c:	000b8911 	andeq	r8, fp, r1, lsl r9
    6c50:	0c960800 	ldceq	8, cr0, [r6], {0}
    6c54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c58:	110c2302 	tstne	ip, r2, lsl #6
    6c5c:	00000b5e 	andeq	r0, r0, lr, asr fp
    6c60:	88289708 	stmdahi	r8!, {r3, r8, r9, sl, ip, pc}
    6c64:	02000003 	andeq	r0, r0, #3
    6c68:	07001023 	streq	r1, [r0, -r3, lsr #32]
    6c6c:	0002ee04 	andeq	lr, r2, r4, lsl #28
    6c70:	0c541000 	mraeq	r1, r4, acc0
    6c74:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    6c78:	038810ac 	orreq	r1, r8, #172	; 0xac
    6c7c:	bf110000 	svclt	0x00110000
    6c80:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    6c84:	012f25af 			; <UNDEFINED> instruction: 0x012f25af
    6c88:	23020000 	movwcs	r0, #8192	; 0x2000
    6c8c:	0c191100 	ldfeqs	f1, [r9], {-0}
    6c90:	b0080000 	andlt	r0, r8, r0
    6c94:	0003ab26 	andeq	sl, r3, r6, lsr #22
    6c98:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6c9c:	000b8011 	andeq	r8, fp, r1, lsl r0
    6ca0:	14b10800 	ldrtne	r0, [r1], #2048	; 0x800
    6ca4:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    6ca8:	00082302 	andeq	r2, r8, r2, lsl #6
    6cac:	034d0407 	movteq	r0, #54279	; 0xd407
    6cb0:	f5020000 			; <UNDEFINED> instruction: 0xf5020000
    6cb4:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    6cb8:	02ee1b9a 	rsceq	r1, lr, #157696	; 0x26800
    6cbc:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    6cc0:	02000003 	andeq	r0, r0, #3
    6cc4:	00000dae 	andeq	r0, r0, lr, lsr #27
    6cc8:	ee24a608 	cfmadda32	mvax0, mvax10, mvfx4, mvfx8
    6ccc:	07000002 	streq	r0, [r0, -r2]
    6cd0:	00038e04 	andeq	r8, r3, r4, lsl #28
    6cd4:	03ab0300 			; <UNDEFINED> instruction: 0x03ab0300
    6cd8:	5e020000 	cdppl	0, 0, cr0, cr2, cr0, {0}
    6cdc:	08000016 	stmdaeq	r0, {r1, r2, r4}
    6ce0:	034d03b3 	movteq	r0, #54195	; 0xd3b3
    6ce4:	b6030000 	strlt	r0, [r3], -r0
    6ce8:	02000003 	andeq	r0, r0, #3
    6cec:	000002e8 	andeq	r0, r0, r8, ror #5
    6cf0:	d82e5c09 	stmdale	lr!, {r0, r3, sl, fp, ip, lr}
    6cf4:	03000003 	movweq	r0, #3
    6cf8:	000003c7 	andeq	r0, r0, r7, asr #7
    6cfc:	03de0407 	bicseq	r0, lr, #117440512	; 0x7000000
    6d00:	0f0b0000 	svceq	0x000b0000
    6d04:	74000002 	strvc	r0, [r0], #-2
    6d08:	10016601 	andne	r6, r1, r1, lsl #12
    6d0c:	000004ed 	andeq	r0, r0, sp, ror #9
    6d10:	000a050c 	andeq	r0, sl, ip, lsl #10
    6d14:	01680100 	cmneq	r8, r0, lsl #2
    6d18:	0007021c 	andeq	r0, r7, ip, lsl r2
    6d1c:	00230200 	eoreq	r0, r3, r0, lsl #4
    6d20:	0025800c 	eoreq	r8, r5, ip
    6d24:	01720100 	cmneq	r2, r0, lsl #2
    6d28:	00038e10 	andeq	r8, r3, r0, lsl lr
    6d2c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6d30:	0024420c 	eoreq	r4, r4, ip, lsl #4
    6d34:	01730100 	cmneq	r3, r0, lsl #2
    6d38:	00038e10 	andeq	r8, r3, r0, lsl lr
    6d3c:	18230200 	stmdane	r3!, {r9}
    6d40:	0016ff0c 	andseq	pc, r6, ip, lsl #30
    6d44:	01740100 	cmneq	r4, r0, lsl #2
    6d48:	00012f11 	andeq	r2, r1, r1, lsl pc
    6d4c:	2c230200 	sfmcs	f0, 4, [r3], #-0
    6d50:	0021db0c 	eoreq	sp, r1, ip, lsl #22
    6d54:	01750100 	cmneq	r5, r0, lsl #2
    6d58:	00060b13 	andeq	r0, r6, r3, lsl fp
    6d5c:	30230200 	eorcc	r0, r3, r0, lsl #4
    6d60:	000b530c 	andeq	r5, fp, ip, lsl #6
    6d64:	017a0100 	cmneq	sl, r0, lsl #2
    6d68:	0007080a 	andeq	r0, r7, sl, lsl #16
    6d6c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    6d70:	000a440c 	andeq	r4, sl, ip, lsl #8
    6d74:	01810100 	orreq	r0, r1, r0, lsl #2
    6d78:	00060b17 	andeq	r0, r6, r7, lsl fp
    6d7c:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    6d80:	00192b0c 	andseq	r2, r9, ip, lsl #22
    6d84:	01890100 	orreq	r0, r9, r0, lsl #2
    6d88:	00012f15 	andeq	r2, r1, r5, lsl pc
    6d8c:	58230200 	stmdapl	r3!, {r9}
    6d90:	001f6e0c 	andseq	r6, pc, ip, lsl #28
    6d94:	018a0100 	orreq	r0, sl, r0, lsl #2
    6d98:	00012f15 	andeq	r2, r1, r5, lsl pc
    6d9c:	5c230200 	sfmpl	f0, 4, [r3], #-0
    6da0:	000a930c 	andeq	r9, sl, ip, lsl #6
    6da4:	018e0100 	orreq	r0, lr, r0, lsl #2
    6da8:	00012f15 	andeq	r2, r1, r5, lsl pc
    6dac:	60230200 	eorvs	r0, r3, r0, lsl #4
    6db0:	001cfb0c 	andseq	pc, ip, ip, lsl #22
    6db4:	018f0100 	orreq	r0, pc, r0, lsl #2
    6db8:	00012f15 	andeq	r2, r1, r5, lsl pc
    6dbc:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    6dc0:	0021370c 	eoreq	r3, r1, ip, lsl #14
    6dc4:	01930100 	orrseq	r0, r3, r0, lsl #2
    6dc8:	0004ed1c 	andeq	lr, r4, ip, lsl sp
    6dcc:	68230200 	stmdavs	r3!, {r9}
    6dd0:	001cc00c 	andseq	ip, ip, ip
    6dd4:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    6dd8:	0007281b 	andeq	r2, r7, fp, lsl r8
    6ddc:	6c230200 	sfmvs	f0, 4, [r3], #-0
    6de0:	001a030c 	andseq	r0, sl, ip, lsl #6
    6de4:	01a40100 			; <UNDEFINED> instruction: 0x01a40100
    6de8:	00073d1a 	andeq	r3, r7, sl, lsl sp
    6dec:	70230200 	eorvc	r0, r3, r0, lsl #4
    6df0:	0010580c 	andseq	r5, r0, ip, lsl #16
    6df4:	01aa0100 			; <UNDEFINED> instruction: 0x01aa0100
    6df8:	0000c311 	andeq	ip, r0, r1, lsl r3
    6dfc:	71230200 			; <UNDEFINED> instruction: 0x71230200
    6e00:	001be00c 	andseq	lr, fp, ip
    6e04:	01ae0100 			; <UNDEFINED> instruction: 0x01ae0100
    6e08:	0000c311 	andeq	ip, r0, r1, lsl r3
    6e0c:	72230200 	eorvc	r0, r3, #0, 4
    6e10:	22a60200 	adccs	r0, r6, #0, 4
    6e14:	63090000 	movwvs	r0, #36864	; 0x9000
    6e18:	0004f917 	andeq	pc, r4, r7, lsl r9	; <UNPREDICTABLE>
    6e1c:	ff040700 			; <UNDEFINED> instruction: 0xff040700
    6e20:	12000004 	andne	r0, r0, #4
    6e24:	00011901 	andeq	r1, r1, r1, lsl #18
    6e28:	00050f00 	andeq	r0, r5, r0, lsl #30
    6e2c:	009f0a00 	addseq	r0, pc, r0, lsl #20
    6e30:	13000000 	movwne	r0, #0
    6e34:	00690107 	rsbeq	r0, r9, r7, lsl #2
    6e38:	67090000 	strvs	r0, [r9, -r0]
    6e3c:	00054201 	andeq	r4, r5, r1, lsl #4
    6e40:	0ac81400 	beq	ff20be48 <__StackTop+0xc710be48>
    6e44:	14000000 	strne	r0, [r0], #-0
    6e48:	00000a6b 	andeq	r0, r0, fp, ror #20
    6e4c:	09df1401 	ldmibeq	pc, {r0, sl, ip}^	; <UNPREDICTABLE>
    6e50:	14020000 	strne	r0, [r2], #-0
    6e54:	00000add 	ldrdeq	r0, [r0], -sp
    6e58:	09e81403 	stmibeq	r8!, {r0, r1, sl, ip}^
    6e5c:	14040000 	strne	r0, [r4], #-0
    6e60:	000009fc 	strdeq	r0, [r0], -ip
    6e64:	f1020005 	cps	#5
    6e68:	09000009 	stmdbeq	r0, {r0, r3}
    6e6c:	050f036e 	streq	r0, [pc, #-878]	; 6b06 <__HEAP_SIZE+0x5b06>
    6e70:	07130000 	ldreq	r0, [r3, -r0]
    6e74:	00006901 	andeq	r6, r0, r1, lsl #18
    6e78:	01720900 	cmneq	r2, r0, lsl #18
    6e7c:	0000057b 	andeq	r0, r0, fp, ror r5
    6e80:	0017a214 	andseq	sl, r7, r4, lsl r2
    6e84:	44140000 	ldrmi	r0, [r4], #-0
    6e88:	01000020 	tsteq	r0, r0, lsr #32
    6e8c:	00255214 	eoreq	r5, r5, r4, lsl r2
    6e90:	8b140200 	blhi	507698 <__RAM_SIZE+0x407698>
    6e94:	0300001a 	movweq	r0, #26
    6e98:	001d1614 	andseq	r1, sp, r4, lsl r6
    6e9c:	02000400 	andeq	r0, r0, #0, 8
    6ea0:	00001bb0 			; <UNDEFINED> instruction: 0x00001bb0
    6ea4:	4e037809 	cdpmi	8, 0, cr7, cr3, cr9, {0}
    6ea8:	10000005 	andne	r0, r0, r5
    6eac:	00000d51 	andeq	r0, r0, r1, asr sp
    6eb0:	107d0908 	rsbsne	r0, sp, r8, lsl #18
    6eb4:	000005b3 			; <UNDEFINED> instruction: 0x000005b3
    6eb8:	000e1711 	andeq	r1, lr, r1, lsl r7
    6ebc:	107f0900 	rsbsne	r0, pc, r0, lsl #18
    6ec0:	00000119 	andeq	r0, r0, r9, lsl r1
    6ec4:	11002302 	tstne	r0, r2, lsl #6
    6ec8:	0000122a 	andeq	r1, r0, sl, lsr #4
    6ecc:	4a108009 	bmi	426ef8 <__RAM_SIZE+0x326ef8>
    6ed0:	02000001 	andeq	r0, r0, #1
    6ed4:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    6ed8:	0000128b 	andeq	r1, r0, fp, lsl #5
    6edc:	87038109 	strhi	r8, [r3, -r9, lsl #2]
    6ee0:	10000005 	andne	r0, r0, r5
    6ee4:	0000204d 	andeq	r2, r0, sp, asr #32
    6ee8:	1086090c 	addne	r0, r6, ip, lsl #18
    6eec:	000005fa 	strdeq	r0, [r0], -sl
    6ef0:	00235211 	eoreq	r5, r3, r1, lsl r2
    6ef4:	0c880900 			; <UNDEFINED> instruction: 0x0c880900
    6ef8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6efc:	11002302 	tstne	r0, r2, lsl #6
    6f00:	00001ea7 	andeq	r1, r0, r7, lsr #29
    6f04:	d90e8909 	stmdble	lr, {r0, r3, r8, fp, pc}
    6f08:	02000000 	andeq	r0, r0, #0
    6f0c:	5b110423 	blpl	447fa0 <__RAM_SIZE+0x347fa0>
    6f10:	09000019 	stmdbeq	r0, {r0, r3, r4}
    6f14:	00d90e8a 	sbcseq	r0, r9, sl, lsl #29
    6f18:	23020000 	movwcs	r0, #8192	; 0x2000
    6f1c:	2a020008 	bcs	86f44 <__HEAP_SIZE+0x85f44>
    6f20:	0900001e 	stmdbeq	r0, {r1, r2, r3, r4}
    6f24:	05bf038b 	ldreq	r0, [pc, #907]!	; 72b7 <__HEAP_SIZE+0x62b7>
    6f28:	fa030000 	blx	c6f30 <__HEAP_SIZE+0xc5f30>
    6f2c:	07000005 	streq	r0, [r0, -r5]
    6f30:	00010804 	andeq	r0, r1, r4, lsl #16
    6f34:	060b0300 	streq	r0, [fp], -r0, lsl #6
    6f38:	12100000 	andsne	r0, r0, #0
    6f3c:	2c00000a 	stccs	0, cr0, [r0], {10}
    6f40:	c910a009 	ldmdbgt	r0, {r0, r3, sp, pc}
    6f44:	11000006 	tstne	r0, r6
    6f48:	000018e7 	andeq	r1, r0, r7, ror #17
    6f4c:	c712a209 	ldrgt	sl, [r2, -r9, lsl #4]
    6f50:	02000003 	andeq	r0, r0, #3
    6f54:	53110023 	tstpl	r1, #35	; 0x23
    6f58:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    6f5c:	00b812a3 	adcseq	r1, r8, r3, lsr #5
    6f60:	23020000 	movwcs	r0, #8192	; 0x2000
    6f64:	1f6f1104 	svcne	0x006f1104
    6f68:	a4090000 	strge	r0, [r9], #-0
    6f6c:	00012f11 	andeq	r2, r1, r1, lsl pc
    6f70:	08230200 	stmdaeq	r3!, {r9}
    6f74:	000a5d11 	andeq	r5, sl, r1, lsl sp
    6f78:	10a50900 	adcne	r0, r5, r0, lsl #18
    6f7c:	00000542 	andeq	r0, r0, r2, asr #10
    6f80:	110c2302 	tstne	ip, r2, lsl #6
    6f84:	00000ae8 	andeq	r0, r0, r8, ror #21
    6f88:	2f11a609 	svccs	0x0011a609
    6f8c:	02000001 	andeq	r0, r0, #1
    6f90:	93111023 	tstls	r1, #35	; 0x23
    6f94:	0900000a 	stmdbeq	r0, {r1, r3}
    6f98:	012f11a7 			; <UNDEFINED> instruction: 0x012f11a7
    6f9c:	23020000 	movwcs	r0, #8192	; 0x2000
    6fa0:	09ce1114 	stmibeq	lr, {r2, r4, r8, ip}^
    6fa4:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
    6fa8:	0000d921 	andeq	sp, r0, r1, lsr #18
    6fac:	18230200 	stmdane	r3!, {r9}
    6fb0:	000a5111 	andeq	r5, sl, r1, lsl r1
    6fb4:	13a90900 			; <UNDEFINED> instruction: 0x13a90900
    6fb8:	0000060b 	andeq	r0, r0, fp, lsl #12
    6fbc:	111c2302 	tstne	ip, r2, lsl #6
    6fc0:	00000a05 	andeq	r0, r0, r5, lsl #20
    6fc4:	0b17ab09 	bleq	5f1bf0 <__RAM_SIZE+0x4f1bf0>
    6fc8:	02000006 	andeq	r0, r0, #6
    6fcc:	44112023 	ldrmi	r2, [r1], #-35	; 0xffffffdd
    6fd0:	0900000a 	stmdbeq	r0, {r1, r3}
    6fd4:	060b17ac 	streq	r1, [fp], -ip, lsr #15
    6fd8:	23020000 	movwcs	r0, #8192	; 0x2000
    6fdc:	0b3e1124 	bleq	f8b474 <__RAM_SIZE+0xe8b474>
    6fe0:	ae090000 	cdpge	0, 0, cr0, cr9, cr0, {0}
    6fe4:	0000291c 	andeq	r2, r0, ip, lsl r9
    6fe8:	28230200 	stmdacs	r3!, {r9}
    6fec:	0a7a0200 	beq	1e877f4 <__RAM_SIZE+0x1d877f4>
    6ff0:	b2090000 	andlt	r0, r9, #0
    6ff4:	00061603 	andeq	r1, r6, r3, lsl #12
    6ff8:	01071300 	mrseq	r1, SP_und
    6ffc:	00000069 	andeq	r0, r0, r9, rrx
    7000:	f601b609 			; <UNDEFINED> instruction: 0xf601b609
    7004:	14000006 	strne	r0, [r0], #-6
    7008:	00001a7f 	andeq	r1, r0, pc, ror sl
    700c:	22b91400 	adcscs	r1, r9, #0, 8
    7010:	14010000 	strne	r0, [r1], #-0
    7014:	000022d7 	ldrdeq	r2, [r0], -r7
    7018:	be020002 	cdplt	0, 0, cr0, cr2, cr2, {0}
    701c:	09000019 	stmdbeq	r0, {r0, r3, r4}
    7020:	06d503bd 			; <UNDEFINED> instruction: 0x06d503bd
    7024:	04070000 	streq	r0, [r7], #-0
    7028:	00000114 	andeq	r0, r0, r4, lsl r1
    702c:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    7030:	00071800 	andeq	r1, r7, r0, lsl #16
    7034:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    7038:	001f0000 	andseq	r0, pc, r0
    703c:	0000e50d 	andeq	lr, r0, sp, lsl #10
    7040:	00072800 	andeq	r2, r7, r0, lsl #16
    7044:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    7048:	00000000 	andeq	r0, r0, r0
    704c:	00071808 	andeq	r1, r7, r8, lsl #16
    7050:	00cf0d00 	sbceq	r0, pc, r0, lsl #26
    7054:	073d0000 	ldreq	r0, [sp, -r0]!
    7058:	3a0e0000 	bcc	387060 <__RAM_SIZE+0x287060>
    705c:	00000000 	andeq	r0, r0, r0
    7060:	072d0800 	streq	r0, [sp, -r0, lsl #16]!
    7064:	fc0f0000 	stc2	0, cr0, [pc], {-0}
    7068:	01000019 	tsteq	r0, r9, lsl r0
    706c:	de0301b4 	mcrle	1, 0, r0, cr3, cr4, {5}
    7070:	0f000003 	svceq	0x00000003
    7074:	00002411 	andeq	r2, r0, r1, lsl r4
    7078:	1001b801 	andne	fp, r1, r1, lsl #16
    707c:	00000742 	andeq	r0, r0, r2, asr #14
    7080:	00074f03 	andeq	r4, r7, r3, lsl #30
    7084:	20f61500 	rscscs	r1, r6, r0, lsl #10
    7088:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    708c:	077b3701 	ldrbeq	r3, [fp, -r1, lsl #14]!
    7090:	05010000 	streq	r0, [r1, #-0]
    7094:	0085b803 	addeq	fp, r5, r3, lsl #16
    7098:	4f040738 	svcmi	0x00040738
    709c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    70a0:	00000775 	andeq	r0, r0, r5, ror r7
    70a4:	00077503 	andeq	r7, r7, r3, lsl #10
    70a8:	03b60d00 			; <UNDEFINED> instruction: 0x03b60d00
    70ac:	07950000 	ldreq	r0, [r5, r0]
    70b0:	3a0e0000 	bcc	3870b8 <__RAM_SIZE+0x2870b8>
    70b4:	04000000 	streq	r0, [r0], #-0
    70b8:	18391600 	ldmdane	r9!, {r9, sl, ip}
    70bc:	cb010000 	blgt	470c4 <__HEAP_SIZE+0x460c4>
    70c0:	07851f01 	streq	r1, [r5, r1, lsl #30]
    70c4:	03050000 	movweq	r0, #20480	; 0x5000
    70c8:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    70cc:	0018ef16 	andseq	lr, r8, r6, lsl pc
    70d0:	01cc0100 	biceq	r0, ip, r0, lsl #2
    70d4:	0003b61f 	andeq	fp, r3, pc, lsl r6
    70d8:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    70dc:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    70e0:	00001901 	andeq	r1, r0, r1, lsl #18
    70e4:	1f01cd01 	svcne	0x0001cd01
    70e8:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    70ec:	8a800305 	bhi	fe007d08 <__StackTop+0xc5f07d08>
    70f0:	63163800 	tstvs	r6, #0, 16
    70f4:	01000021 	tsteq	r0, r1, lsr #32
    70f8:	e72a01ce 	str	r0, [sl, -lr, asr #3]!
    70fc:	05000007 	streq	r0, [r0, #-7]
    7100:	0085bc03 	addeq	fp, r5, r3, lsl #24
    7104:	b6040738 			; <UNDEFINED> instruction: 0xb6040738
    7108:	08000003 	stmdaeq	r0, {r0, r1}
    710c:	000007e1 	andeq	r0, r0, r1, ror #15
    7110:	0007e103 	andeq	lr, r7, r3, lsl #2
    7114:	1c591600 	mrrcne	6, 0, r1, r9, cr0
    7118:	cf010000 	svcgt	0x00010000
    711c:	07e72a01 	strbeq	r2, [r7, r1, lsl #20]!
    7120:	03050000 	movweq	r0, #20480	; 0x5000
    7124:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
    7128:	001ae316 	andseq	lr, sl, r6, lsl r3
    712c:	01d00100 	bicseq	r0, r0, r0, lsl #2
    7130:	0003b61f 	andeq	fp, r3, pc, lsl r6
    7134:	20030500 	andcs	r0, r3, r0, lsl #10
    7138:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    713c:	00001b24 	andeq	r1, r0, r4, lsr #22
    7140:	2301d401 	movwcs	sp, #5121	; 0x1401
    7144:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    7148:	8b5c0305 	blhi	1707d64 <__RAM_SIZE+0x1607d64>
    714c:	f9163800 			; <UNDEFINED> instruction: 0xf9163800
    7150:	01000017 	tsteq	r0, r7, lsl r0
    7154:	3b3101d5 	blcc	c478b0 <__RAM_SIZE+0xb478b0>
    7158:	05000001 	streq	r0, [r0, #-1]
    715c:	00865403 	addeq	r5, r6, r3, lsl #8
    7160:	1c3f1638 	ldcne	6, cr1, [pc], #-224	; 7088 <__HEAP_SIZE+0x6088>
    7164:	db010000 	blle	4716c <__HEAP_SIZE+0x4616c>
    7168:	03b62301 			; <UNDEFINED> instruction: 0x03b62301
    716c:	03050000 	movweq	r0, #20480	; 0x5000
    7170:	38008b40 	stmdacc	r0, {r6, r8, r9, fp, pc}
    7174:	00253716 	eoreq	r3, r5, r6, lsl r7
    7178:	01e60100 	mvneq	r0, r0, lsl #2
    717c:	00013b2d 	andeq	r3, r1, sp, lsr #22
    7180:	50030500 	andpl	r0, r3, r0, lsl #10
    7184:	16380086 	ldrtne	r0, [r8], -r6, lsl #1
    7188:	00001c00 	andeq	r1, r0, r0, lsl #24
    718c:	2c01e701 	stccs	7, cr14, [r1], {1}
    7190:	00000156 	andeq	r0, r0, r6, asr r1
    7194:	8b780305 	blhi	1e07db0 <__RAM_SIZE+0x1d07db0>
    7198:	ac163800 	ldcge	8, cr3, [r6], {-0}
    719c:	01000017 	tsteq	r0, r7, lsl r0
    71a0:	3b2d01e8 	blcc	b47948 <__RAM_SIZE+0xa47948>
    71a4:	05000001 	streq	r0, [r0, #-1]
    71a8:	008a6003 	addeq	r6, sl, r3
    71ac:	17d91638 			; <UNDEFINED> instruction: 0x17d91638
    71b0:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    71b4:	01252c01 			; <UNDEFINED> instruction: 0x01252c01
    71b8:	03050000 	movweq	r0, #20480	; 0x5000
    71bc:	38008b3c 	stmdacc	r0, {r2, r3, r4, r5, r8, r9, fp, pc}
    71c0:	00245116 	eoreq	r5, r4, r6, lsl r1
    71c4:	01ea0100 	mvneq	r0, r0, lsl #2
    71c8:	0001562c 	andeq	r5, r1, ip, lsr #12
    71cc:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    71d0:	0d38008b 	ldceq	0, cr0, [r8, #-556]!	; 0xfffffdd4
    71d4:	00000125 	andeq	r0, r0, r5, lsr #2
    71d8:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    71dc:	00003a0e 	andeq	r3, r0, lr, lsl #20
    71e0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    71e4:	000008af 	andeq	r0, r0, pc, lsr #17
    71e8:	0018ca16 	andseq	ip, r8, r6, lsl sl
    71ec:	01eb0100 	mvneq	r0, r0, lsl #2
    71f0:	0008bf2c 	andeq	fp, r8, ip, lsr #30
    71f4:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    71f8:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    71fc:	000020c5 	andeq	r2, r0, r5, asr #1
    7200:	2c01ec01 	stccs	12, cr14, [r1], {1}
    7204:	00000125 	andeq	r0, r0, r5, lsr #2
    7208:	8b180305 	blhi	607e24 <__RAM_SIZE+0x507e24>
    720c:	6e163800 	cdpvs	8, 1, cr3, cr6, cr0, {0}
    7210:	0100001f 	tsteq	r0, pc, lsl r0
    7214:	2f2401ed 	svccs	0x002401ed
    7218:	05000001 	streq	r0, [r0, #-1]
    721c:	00885c03 	addeq	r5, r8, r3, lsl #24
    7220:	1e391638 	mrcne	6, 1, r1, cr9, cr8, {1}
    7224:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    7228:	01562c01 	cmpeq	r6, r1, lsl #24
    722c:	03050000 	movweq	r0, #20480	; 0x5000
    7230:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
    7234:	0003c70d 	andeq	ip, r3, sp, lsl #14
    7238:	00092000 	andeq	r2, r9, r0
    723c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    7240:	00000000 	andeq	r0, r0, r0
    7244:	001c9316 	andseq	r9, ip, r6, lsl r3
    7248:	01ef0100 	mvneq	r0, r0, lsl #2
    724c:	00091025 	andeq	r1, r9, r5, lsr #32
    7250:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    7254:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    7258:	00001b54 	andeq	r1, r0, r4, asr fp
    725c:	2301f401 	movwcs	pc, #5121	; 0x1401	; <UNPREDICTABLE>
    7260:	00000140 	andeq	r0, r0, r0, asr #2
    7264:	000c0305 	andeq	r0, ip, r5, lsl #6
    7268:	ec163800 	ldc	8, cr3, [r6], {-0}
    726c:	01000025 	tsteq	r0, r5, lsr #32
    7270:	3b2d0202 	blcc	b47a80 <__RAM_SIZE+0xa47a80>
    7274:	05000001 	streq	r0, [r0, #-1]
    7278:	00885803 	addeq	r5, r8, r3, lsl #16
    727c:	3d011738 	stccc	7, cr1, [r1, #-224]	; 0xffffff20
    7280:	0100001b 	tsteq	r0, fp, lsl r0
    7284:	010621c5 	smlabteq	r6, r5, r1, r2
	...
    7290:	01007d02 	tsteq	r0, r2, lsl #26
    7294:	0000098a 	andeq	r0, r0, sl, lsl #19
    7298:	00169018 	andseq	r9, r6, r8, lsl r0
    729c:	21c70100 	biccs	r0, r7, r0, lsl #2
    72a0:	00011910 	andeq	r1, r1, r0, lsl r9
    72a4:	005e6d00 	subseq	r6, lr, r0, lsl #26
    72a8:	005e6900 	subseq	r6, lr, r0, lsl #18
    72ac:	01170000 	tsteq	r7, r0
    72b0:	00001a11 	andeq	r1, r0, r1, lsl sl
    72b4:	0a21b101 	beq	8736c0 <__RAM_SIZE+0x7736c0>
    72b8:	0031a801 	eorseq	sl, r1, r1, lsl #16
    72bc:	0031c010 	eorseq	ip, r1, r0, lsl r0
    72c0:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    72c4:	0009f901 	andeq	pc, r9, r1, lsl #18
    72c8:	21e31900 	mvncs	r1, r0, lsl #18
    72cc:	b1010000 	mrslt	r0, (UNDEF: 1)
    72d0:	09f93a21 	ldmibeq	r9!, {r0, r5, r9, fp, ip, sp}^
    72d4:	50010000 	andpl	r0, r1, r0
    72d8:	001e0319 	andseq	r0, lr, r9, lsl r3
    72dc:	21b20100 			; <UNDEFINED> instruction: 0x21b20100
    72e0:	000a0a39 	andeq	r0, sl, r9, lsr sl
    72e4:	19510100 	ldmdbne	r1, {r8}^
    72e8:	000023a7 	andeq	r2, r0, r7, lsr #7
    72ec:	4321b301 			; <UNDEFINED> instruction: 0x4321b301
    72f0:	00000a10 	andeq	r0, r0, r0, lsl sl
    72f4:	77165201 	ldrvc	r5, [r6, -r1, lsl #4]
    72f8:	01000018 	tsteq	r0, r8, lsl r0
    72fc:	e11d21b5 			; <UNDEFINED> instruction: 0xe11d21b5
    7300:	05000002 	streq	r0, [r0, #-2]
    7304:	008b7c03 	addeq	r7, fp, r3, lsl #24
    7308:	25d01638 	ldrbcs	r1, [r0, #1592]	; 0x638
    730c:	b6010000 	strlt	r0, [r1], -r0
    7310:	0a161c21 	beq	58e39c <__RAM_SIZE+0x48e39c>
    7314:	03050000 	movweq	r0, #20480	; 0x5000
    7318:	38008860 	stmdacc	r0, {r5, r6, fp, pc}
    731c:	ff040700 			; <UNDEFINED> instruction: 0xff040700
    7320:	07000009 	streq	r0, [r0, -r9]
    7324:	0002e104 	andeq	lr, r2, r4, lsl #2
    7328:	09ff0300 	ldmibeq	pc!, {r8, r9}^	; <UNPREDICTABLE>
    732c:	04070000 	streq	r0, [r7], #-0
    7330:	0000060b 	andeq	r0, r0, fp, lsl #12
    7334:	00290407 	eoreq	r0, r9, r7, lsl #8
    7338:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    733c:	26000001 	strcs	r0, [r0], -r1
    7340:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    7344:	0000003a 	andeq	r0, r0, sl, lsr r0
    7348:	0117007f 	tsteq	r7, pc, ror r0
    734c:	0000258f 	andeq	r2, r0, pc, lsl #11
    7350:	0a218801 	beq	86935c <__RAM_SIZE+0x76935c>
    7354:	0030dc01 	eorseq	sp, r0, r1, lsl #24
    7358:	0030f410 	eorseq	pc, r0, r0, lsl r4	; <UNPREDICTABLE>
    735c:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7360:	000a9501 	andeq	r9, sl, r1, lsl #10
    7364:	1eb71900 	vmovne.f16	s2, #112	; 0x3f800000  1.0	; <UNPREDICTABLE>
    7368:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    736c:	09f93921 	ldmibeq	r9!, {r0, r5, r8, fp, ip, sp}^
    7370:	50010000 	andpl	r0, r1, r0
    7374:	0016b719 	andseq	fp, r6, r9, lsl r7
    7378:	21890100 	orrcs	r0, r9, r0, lsl #2
    737c:	000a0a38 	andeq	r0, sl, r8, lsr sl
    7380:	19510100 	ldmdbne	r1, {r8}^
    7384:	00002001 	andeq	r2, r0, r1
    7388:	42218a01 	eormi	r8, r1, #4096	; 0x1000
    738c:	00000a10 	andeq	r0, r0, r0, lsl sl
    7390:	43165201 	tstmi	r6, #268435456	; 0x10000000
    7394:	01000026 	tsteq	r0, r6, lsr #32
    7398:	e11d218c 	tst	sp, ip, lsl #3
    739c:	05000002 	streq	r0, [r0, #-2]
    73a0:	008aa003 	addeq	sl, sl, r3
    73a4:	22961638 	addscs	r1, r6, #56, 12	; 0x3800000
    73a8:	8d010000 	stchi	0, cr0, [r1, #-0]
    73ac:	0a161c21 	beq	58e438 <__RAM_SIZE+0x48e438>
    73b0:	03050000 	movweq	r0, #20480	; 0x5000
    73b4:	38008658 	stmdacc	r0, {r3, r4, r6, r9, sl, pc}
    73b8:	24c11a00 	strbcs	r1, [r1], #2560	; 0xa00
    73bc:	df010000 	svcle	0x00010000
    73c0:	18010d20 	stmdane	r1, {r5, r8, sl, fp}
    73c4:	c0100028 	andsgt	r0, r0, r8, lsr #32
    73c8:	8b100028 	blhi	407470 <__RAM_SIZE+0x307470>
    73cc:	0100005e 	qaddeq	r0, lr, r0
    73d0:	00000b7f 	andeq	r0, r0, pc, ror fp
    73d4:	0023e01b 	eoreq	lr, r3, fp, lsl r0
    73d8:	20df0100 	sbcscs	r0, pc, r0, lsl #2
    73dc:	00014a38 	andeq	r4, r1, r8, lsr sl
    73e0:	005eb500 	subseq	fp, lr, r0, lsl #10
    73e4:	005eab00 	subseq	sl, lr, r0, lsl #22
    73e8:	232e1b00 			; <UNDEFINED> instruction: 0x232e1b00
    73ec:	e0010000 	and	r0, r1, r0
    73f0:	012a3e20 			; <UNDEFINED> instruction: 0x012a3e20
    73f4:	5efe0000 	cdppl	0, 15, cr0, cr14, cr0, {0}
    73f8:	5efa0000 	cdppl	0, 15, cr0, cr10, cr0, {0}
    73fc:	74180000 	ldrvc	r0, [r8], #-0
    7400:	01000025 	tsteq	r0, r5, lsr #32
    7404:	4a1020e2 	bmi	40f794 <__RAM_SIZE+0x30f794>
    7408:	20000001 	andcs	r0, r0, r1
    740c:	1c00005f 	stcne	0, cr0, [r0], {95}	; 0x5f
    7410:	1800005f 	stmdane	r0, {r0, r1, r2, r3, r4, r6}
    7414:	00001c2f 	andeq	r1, r0, pc, lsr #24
    7418:	1620e301 	strtne	lr, [r0], -r1, lsl #6
    741c:	0000015b 	andeq	r0, r0, fp, asr r1
    7420:	00005f40 	andeq	r5, r0, r0, asr #30
    7424:	00005f3e 	andeq	r5, r0, lr, lsr pc
    7428:	0017bf18 	andseq	fp, r7, r8, lsl pc
    742c:	20e40100 	rsccs	r0, r4, r0, lsl #2
    7430:	0007ec14 	andeq	lr, r7, r4, lsl ip
    7434:	005f5500 	subseq	r5, pc, r0, lsl #10
    7438:	005f5300 	subseq	r5, pc, r0, lsl #6
    743c:	26b01800 	ldrtcs	r1, [r0], r0, lsl #16
    7440:	e5010000 	str	r0, [r1, #-0]
    7444:	07ec1420 	strbeq	r1, [ip, r0, lsr #8]!
    7448:	5f6a0000 	svcpl	0x006a0000
    744c:	5f680000 	svcpl	0x00680000
    7450:	661c0000 	ldrvs	r0, [ip], -r0
    7454:	8c100028 	ldchi	0, cr0, [r0], {40}	; 0x28
    7458:	51100028 	tstpl	r0, r8, lsr #32
    745c:	1800000b 	stmdane	r0, {r0, r1, r3}
    7460:	00000c19 	andeq	r0, r0, r9, lsl ip
    7464:	0d210401 	cfstrseq	mvf0, [r1, #-4]!
    7468:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    746c:	00005f7f 	andeq	r5, r0, pc, ror pc
    7470:	00005f7d 	andeq	r5, r0, sp, ror pc
    7474:	28401d00 	stmdacs	r0, {r8, sl, fp, ip}^
    7478:	3cb91000 	ldccc	0, cr1, [r9]
    747c:	5e1e0000 	cdppl	0, 1, cr0, cr14, cr0, {0}
    7480:	c8100028 	ldmdagt	r0, {r3, r5}
    7484:	6e00003c 	mcrvs	0, 0, r0, cr0, cr12, {1}
    7488:	1f00000b 	svcne	0x0000000b
    748c:	78025001 	stmdavc	r2, {r0, ip, lr}
    7490:	9a200000 	bls	807498 <__RAM_SIZE+0x707498>
    7494:	c8100028 	ldmdagt	r0, {r3, r5}
    7498:	1f00003c 	svcne	0x0000003c
    749c:	77025001 	strvc	r5, [r2, -r1]
    74a0:	21000000 	mrscs	r0, (UNDEF: 0)
    74a4:	001e8901 	andseq	r8, lr, r1, lsl #18
    74a8:	20500100 	subscs	r0, r0, r0, lsl #2
    74ac:	00d9010e 	sbcseq	r0, r9, lr, lsl #2
	...
    74b8:	5f920000 	svcpl	0x00920000
    74bc:	1b010000 	blne	474c4 <__HEAP_SIZE+0x464c4>
    74c0:	1b00000c 	blne	74f8 <__HEAP_SIZE+0x64f8>
    74c4:	00001f99 	muleq	r0, r9, pc	; <UNPREDICTABLE>
    74c8:	3a205001 	bcc	81b4d4 <__RAM_SIZE+0x71b4d4>
    74cc:	000003c7 	andeq	r0, r0, r7, asr #7
    74d0:	00005fb6 			; <UNDEFINED> instruction: 0x00005fb6
    74d4:	00005fb2 			; <UNDEFINED> instruction: 0x00005fb2
    74d8:	00197e1b 	andseq	r7, r9, fp, lsl lr
    74dc:	20510100 	subscs	r0, r1, r0, lsl #2
    74e0:	00012f39 	andeq	r2, r1, r9, lsr pc
    74e4:	005fda00 	subseq	sp, pc, r0, lsl #20
    74e8:	005fd400 	subseq	sp, pc, r0, lsl #8
    74ec:	17eb1b00 	strbne	r1, [fp, r0, lsl #22]!
    74f0:	52010000 	andpl	r0, r1, #0
    74f4:	00d93620 	sbcseq	r3, r9, r0, lsr #12
    74f8:	60090000 	andvs	r0, r9, r0
    74fc:	60030000 	andvs	r0, r3, r0
    7500:	ad180000 	ldcge	0, cr0, [r8, #-0]
    7504:	01000025 	tsteq	r0, r5, lsr #32
    7508:	75112054 	ldrvc	r2, [r1, #-84]	; 0xffffffac
    750c:	34000007 	strcc	r0, [r0], #-7
    7510:	32000060 	andcc	r0, r0, #96	; 0x60
    7514:	18000060 	stmdane	r0, {r5, r6}
    7518:	000026c6 	andeq	r2, r0, r6, asr #13
    751c:	12205501 	eorne	r5, r0, #4194304	; 0x400000
    7520:	000000d9 	ldrdeq	r0, [r0], -r9
    7524:	00006049 	andeq	r6, r0, r9, asr #32
    7528:	00006047 	andeq	r6, r0, r7, asr #32
    752c:	0000001d 	andeq	r0, r0, sp, lsl r0
    7530:	003cd700 	eorseq	sp, ip, r0, lsl #14
    7534:	00001d00 	andeq	r1, r0, r0, lsl #26
    7538:	3ce50000 	stclcc	0, cr0, [r5]
    753c:	21000000 	mrscs	r0, (UNDEF: 0)
    7540:	0025b301 	eoreq	fp, r5, r1, lsl #6
    7544:	202a0100 	eorcs	r0, sl, r0, lsl #2
    7548:	01190110 	tsteq	r9, r0, lsl r1
	...
    7554:	605c0000 	subsvs	r0, ip, r0
    7558:	a2010000 	andge	r0, r1, #0
    755c:	1b00000c 	blne	7594 <__HEAP_SIZE+0x6594>
    7560:	00001f99 	muleq	r0, r9, pc	; <UNPREDICTABLE>
    7564:	3b202a01 	blcc	811d70 <__RAM_SIZE+0x711d70>
    7568:	000003c7 	andeq	r0, r0, r7, asr #7
    756c:	00006080 	andeq	r6, r0, r0, lsl #1
    7570:	0000607c 	andeq	r6, r0, ip, ror r0
    7574:	00197e1b 	andseq	r7, r9, fp, lsl lr
    7578:	202b0100 	eorcs	r0, fp, r0, lsl #2
    757c:	00012f3a 	andeq	r2, r1, sl, lsr pc
    7580:	0060aa00 	rsbeq	sl, r0, r0, lsl #20
    7584:	00609e00 	rsbeq	r9, r0, r0, lsl #28
    7588:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    758c:	2d010000 	stccs	0, cr0, [r1, #-0]
    7590:	07751120 	ldrbeq	r1, [r5, -r0, lsr #2]!
    7594:	60fe0000 	rscsvs	r0, lr, r0
    7598:	60fa0000 	rscsvs	r0, sl, r0
    759c:	d1180000 	tstle	r8, r0
    75a0:	0100001c 	tsteq	r0, ip, lsl r0
    75a4:	1914202e 	ldmdbne	r4, {r1, r2, r3, r5, sp}
    75a8:	20000001 	andcs	r0, r0, r1
    75ac:	1c000061 	stcne	0, cr0, [r0], {97}	; 0x61
    75b0:	1d000061 	stcne	0, cr0, [r0, #-388]	; 0xfffffe7c
    75b4:	00000000 	andeq	r0, r0, r0
    75b8:	00003cd7 	ldrdeq	r3, [r0], -r7
    75bc:	0000001d 	andeq	r0, r0, sp, lsl r0
    75c0:	003ce500 	eorseq	lr, ip, r0, lsl #10
    75c4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    75c8:	0000236e 	andeq	r2, r0, lr, ror #6
    75cc:	0a1fb601 	beq	7f4dd8 <__RAM_SIZE+0x6f4dd8>
    75d0:	00000001 	andeq	r0, r0, r1
    75d4:	00000000 	andeq	r0, r0, r0
    75d8:	00613f00 	rsbeq	r3, r1, r0, lsl #30
    75dc:	0db40100 	ldfeqs	f0, [r4]
    75e0:	161b0000 	ldrne	r0, [fp], -r0
    75e4:	01000020 	tsteq	r0, r0, lsr #32
    75e8:	c7361fb6 			; <UNDEFINED> instruction: 0xc7361fb6
    75ec:	63000003 	movwvs	r0, #3
    75f0:	5f000061 	svcpl	0x00000061
    75f4:	1b000061 	blne	7780 <__HEAP_SIZE+0x6780>
    75f8:	00002650 	andeq	r2, r0, r0, asr r6
    75fc:	351fb701 	ldrcc	fp, [pc, #-1793]	; 6f03 <__HEAP_SIZE+0x5f03>
    7600:	0000012f 	andeq	r0, r0, pc, lsr #2
    7604:	00006189 	andeq	r6, r0, r9, lsl #3
    7608:	00006181 	andeq	r6, r0, r1, lsl #3
    760c:	000d2f1b 	andeq	r2, sp, fp, lsl pc
    7610:	1fb80100 	svcne	0x00b80100
    7614:	000db436 	andeq	fp, sp, r6, lsr r4
    7618:	0061c600 	rsbeq	ip, r1, r0, lsl #12
    761c:	0061c200 	rsbeq	ip, r1, r0, lsl #4
    7620:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    7624:	ba010000 	blt	4762c <__HEAP_SIZE+0x4662c>
    7628:	0775111f 			; <UNDEFINED> instruction: 0x0775111f
    762c:	61e80000 	mvnvs	r0, r0
    7630:	61e40000 	mvnvs	r0, r0
    7634:	85180000 	ldrhi	r0, [r8, #-0]
    7638:	01000018 	tsteq	r0, r8, lsl r0
    763c:	c3111fbb 	tstgt	r1, #748	; 0x2ec
    7640:	0a000000 	beq	7648 <__HEAP_SIZE+0x6648>
    7644:	06000062 	streq	r0, [r0], -r2, rrx
    7648:	18000062 	stmdane	r0, {r1, r5, r6}
    764c:	00000e79 	andeq	r0, r0, r9, ror lr
    7650:	151fbc01 	ldrne	fp, [pc, #-3073]	; 6a57 <__HEAP_SIZE+0x5a57>
    7654:	0000012f 	andeq	r0, r0, pc, lsr #2
    7658:	0000622c 	andeq	r6, r0, ip, lsr #4
    765c:	00006228 	andeq	r6, r0, r8, lsr #4
    7660:	0007b023 	andeq	fp, r7, r3, lsr #32
    7664:	000d5b00 	andeq	r5, sp, r0, lsl #22
    7668:	0c4d1800 	mcrreq	8, 0, r1, sp, cr0
    766c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    7670:	07ec151f 			; <UNDEFINED> instruction: 0x07ec151f
    7674:	624e0000 	subvs	r0, lr, #0
    7678:	624a0000 	subvs	r0, sl, #0
    767c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    7688:	00000d7e 	andeq	r0, r0, lr, ror sp
    768c:	000c1918 	andeq	r1, ip, r8, lsl r9
    7690:	1fef0100 	svcne	0x00ef0100
    7694:	0003b115 	andeq	fp, r3, r5, lsl r1
    7698:	00626e00 	rsbeq	r6, r2, r0, lsl #28
    769c:	00626c00 	rsbeq	r6, r2, r0, lsl #24
    76a0:	001c0000 	andseq	r0, ip, r0
    76a4:	00000000 	andeq	r0, r0, r0
    76a8:	a1000000 	mrsge	r0, (UNDEF: 0)
    76ac:	1800000d 	stmdane	r0, {r0, r2, r3}
    76b0:	00000c19 	andeq	r0, r0, r9, lsl ip
    76b4:	151ff501 	ldrne	pc, [pc, #-1281]	; 71bb <__HEAP_SIZE+0x61bb>
    76b8:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    76bc:	00006283 	andeq	r6, r0, r3, lsl #5
    76c0:	00006281 	andeq	r6, r0, r1, lsl #5
    76c4:	00001d00 	andeq	r1, r0, r0, lsl #26
    76c8:	3cf30000 	ldclcc	0, cr0, [r3]
    76cc:	001d0000 	andseq	r0, sp, r0
    76d0:	01000000 	mrseq	r0, (UNDEF: 0)
    76d4:	0000003d 	andeq	r0, r0, sp, lsr r0
    76d8:	01190407 	tsteq	r9, r7, lsl #8
    76dc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    76e0:	000018b0 			; <UNDEFINED> instruction: 0x000018b0
    76e4:	101f1001 	andsne	r1, pc, r1
    76e8:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    76f4:	00629600 	rsbeq	r9, r2, r0, lsl #12
    76f8:	0f240100 	svceq	0x00240100
    76fc:	161b0000 	ldrne	r0, [fp], -r0
    7700:	01000020 	tsteq	r0, r0, lsr #32
    7704:	c7381f10 			; <UNDEFINED> instruction: 0xc7381f10
    7708:	ba000003 	blt	771c <__HEAP_SIZE+0x671c>
    770c:	b6000062 	strlt	r0, [r0], -r2, rrx
    7710:	1b000062 	blne	78a0 <__HEAP_SIZE+0x68a0>
    7714:	00002650 	andeq	r2, r0, r0, asr r6
    7718:	371f1101 	ldrcc	r1, [pc, -r1, lsl #2]
    771c:	0000012f 	andeq	r0, r0, pc, lsr #2
    7720:	000062fa 	strdeq	r6, [r0], -sl
    7724:	000062d8 	ldrdeq	r6, [r0], -r8
    7728:	0021f91b 	eoreq	pc, r1, fp, lsl r9	; <UNPREDICTABLE>
    772c:	1f120100 	svcne	0x00120100
    7730:	0000d934 	andeq	sp, r0, r4, lsr r9
    7734:	0063e100 	rsbeq	lr, r3, r0, lsl #2
    7738:	0063d700 	rsbeq	sp, r3, r0, lsl #14
    773c:	1f7b1b00 	svcne	0x007b1b00
    7740:	13010000 	movwne	r0, #4096	; 0x1000
    7744:	057b391f 	ldrbeq	r3, [fp, #-2335]!	; 0xfffff6e1
    7748:	642a0000 	strtvs	r0, [sl], #-0
    774c:	64260000 	strtvs	r0, [r6], #-0
    7750:	051b0000 	ldreq	r0, [fp, #-0]
    7754:	0100001f 	tsteq	r0, pc, lsl r0
    7758:	24361f14 	ldrtcs	r1, [r6], #-3860	; 0xfffff0ec
    775c:	4f00000f 	svcmi	0x0000000f
    7760:	4b000064 	blmi	78f8 <__HEAP_SIZE+0x68f8>
    7764:	1b000064 	blne	78fc <__HEAP_SIZE+0x68fc>
    7768:	00000d2f 	andeq	r0, r0, pc, lsr #26
    776c:	381f1501 	ldmdacc	pc, {r0, r8, sl, ip}	; <UNPREDICTABLE>
    7770:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
    7774:	00006473 	andeq	r6, r0, r3, ror r4
    7778:	0000646f 	andeq	r6, r0, pc, ror #8
    777c:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    7780:	1f170100 	svcne	0x00170100
    7784:	00077511 	andeq	r7, r7, r1, lsl r5
    7788:	00649700 	rsbeq	r9, r4, r0, lsl #14
    778c:	00649300 	rsbeq	r9, r4, r0, lsl #6
    7790:	18851800 	stmne	r5, {fp, ip}
    7794:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    7798:	00c3111f 	sbceq	r1, r3, pc, lsl r1
    779c:	64b90000 	ldrtvs	r0, [r9], #0
    77a0:	64b50000 	ldrtvs	r0, [r5], #0
    77a4:	d1180000 	tstle	r8, r0
    77a8:	0100001c 	tsteq	r0, ip, lsl r0
    77ac:	19141f19 	ldmdbne	r4, {r0, r3, r4, r8, r9, sl, fp, ip}
    77b0:	df000001 	svcle	0x00000001
    77b4:	d7000064 	strle	r0, [r0, -r4, rrx]
    77b8:	18000064 	stmdane	r0, {r2, r5, r6}
    77bc:	00000e79 	andeq	r0, r0, r9, ror lr
    77c0:	151f1a01 	ldrne	r1, [pc, #-2561]	; 6dc7 <__HEAP_SIZE+0x5dc7>
    77c4:	0000012f 	andeq	r0, r0, pc, lsr #2
    77c8:	00006519 	andeq	r6, r0, r9, lsl r5
    77cc:	00006515 	andeq	r6, r0, r5, lsl r5
    77d0:	00079823 	andeq	r9, r7, r3, lsr #16
    77d4:	000ecb00 	andeq	ip, lr, r0, lsl #22
    77d8:	0c4d1800 	mcrreq	8, 0, r1, sp, cr0
    77dc:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    77e0:	07ec151f 			; <UNDEFINED> instruction: 0x07ec151f
    77e4:	653b0000 	ldrvs	r0, [fp, #-0]!
    77e8:	65370000 	ldrvs	r0, [r7, #-0]!
    77ec:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    77f8:	00000eee 	andeq	r0, r0, lr, ror #29
    77fc:	000c1918 	andeq	r1, ip, r8, lsl r9
    7800:	1f790100 	svcne	0x00790100
    7804:	0003b115 	andeq	fp, r3, r5, lsl r1
    7808:	00655b00 	rsbeq	r5, r5, r0, lsl #22
    780c:	00655900 	rsbeq	r5, r5, r0, lsl #18
    7810:	001c0000 	andseq	r0, ip, r0
    7814:	00000000 	andeq	r0, r0, r0
    7818:	11000000 	mrsne	r0, (UNDEF: 0)
    781c:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    7820:	00000c19 	andeq	r0, r0, r9, lsl ip
    7824:	151f7f01 	ldrne	r7, [pc, #-3841]	; 692b <__HEAP_SIZE+0x592b>
    7828:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    782c:	00006570 	andeq	r6, r0, r0, ror r5
    7830:	0000656e 	andeq	r6, r0, lr, ror #10
    7834:	00001d00 	andeq	r1, r0, r0, lsl #26
    7838:	3cf30000 	ldclcc	0, cr0, [r3]
    783c:	001d0000 	andseq	r0, sp, r0
    7840:	01000000 	mrseq	r0, (UNDEF: 0)
    7844:	0000003d 	andeq	r0, r0, sp, lsr r0
    7848:	00d90407 	sbcseq	r0, r9, r7, lsl #8
    784c:	24030000 	strcs	r0, [r3], #-0
    7850:	2100000f 	tstcs	r0, pc
    7854:	001a3001 	andseq	r3, sl, r1
    7858:	1e980100 	fmlnee	f0, f0, f0
    785c:	01190110 	tsteq	r9, r0, lsl r1
	...
    7868:	65830000 	strvs	r0, [r3]
    786c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    7870:	1b000010 	blne	78b8 <__HEAP_SIZE+0x68b8>
    7874:	00002016 	andeq	r2, r0, r6, lsl r0
    7878:	311e9801 	tstcc	lr, r1, lsl #16
    787c:	000003c7 	andeq	r0, r0, r7, asr #7
    7880:	000065a7 	andeq	r6, r0, r7, lsr #11
    7884:	000065a3 	andeq	r6, r0, r3, lsr #11
    7888:	0026501b 	eoreq	r5, r6, fp, lsl r0
    788c:	1e990100 	fmlnee	f0, f1, f0
    7890:	00012f30 	andeq	r2, r1, r0, lsr pc
    7894:	0065e700 	rsbeq	lr, r5, r0, lsl #14
    7898:	0065c500 	rsbeq	ip, r5, r0, lsl #10
    789c:	21f91b00 	mvnscs	r1, r0, lsl #22
    78a0:	9a010000 	bls	478a8 <__HEAP_SIZE+0x468a8>
    78a4:	00d92d1e 	sbcseq	r2, r9, lr, lsl sp
    78a8:	66ce0000 	strbvs	r0, [lr], r0
    78ac:	66c40000 	strbvs	r0, [r4], r0
    78b0:	7b1b0000 	blvc	6c78b8 <__RAM_SIZE+0x5c78b8>
    78b4:	0100001f 	tsteq	r0, pc, lsl r0
    78b8:	7b321e9b 	blvc	c8f32c <__RAM_SIZE+0xb8f32c>
    78bc:	17000005 	strne	r0, [r0, -r5]
    78c0:	13000067 	movwne	r0, #103	; 0x67
    78c4:	1b000067 	blne	7a68 <__HEAP_SIZE+0x6a68>
    78c8:	00001f05 	andeq	r1, r0, r5, lsl #30
    78cc:	2f1e9c01 	svccs	0x001e9c01
    78d0:	00000f24 	andeq	r0, r0, r4, lsr #30
    78d4:	0000673c 	andeq	r6, r0, ip, lsr r7
    78d8:	00006738 	andeq	r6, r0, r8, lsr r7
    78dc:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    78e0:	1e9e0100 	fmlnee	f0, f6, f0
    78e4:	00077511 	andeq	r7, r7, r1, lsl r5
    78e8:	00676000 	rsbeq	r6, r7, r0
    78ec:	00675c00 	rsbeq	r5, r7, r0, lsl #24
    78f0:	1cd11800 	ldclne	8, cr1, [r1], {0}
    78f4:	9f010000 	svcls	0x00010000
    78f8:	0119141e 	tsteq	r9, lr, lsl r4
    78fc:	67860000 	strvs	r0, [r6, r0]
    7900:	677e0000 	ldrbvs	r0, [lr, -r0]!
    7904:	85180000 	ldrhi	r0, [r8, #-0]
    7908:	01000018 	tsteq	r0, r8, lsl r0
    790c:	c3111ea0 	tstgt	r1, #160, 28	; 0xa00
    7910:	c2000000 	andgt	r0, r0, #0
    7914:	bc000067 	stclt	0, cr0, [r0], {103}	; 0x67
    7918:	23000067 	movwcs	r0, #103	; 0x67
    791c:	00000780 	andeq	r0, r0, r0, lsl #15
    7920:	00001016 	andeq	r1, r0, r6, lsl r0
    7924:	000c4d18 	andeq	r4, ip, r8, lsl sp
    7928:	1ee50100 	cdpne	1, 14, cr0, cr5, cr0, {0}
    792c:	0007ec11 	andeq	lr, r7, r1, lsl ip
    7930:	0067ef00 	rsbeq	lr, r7, r0, lsl #30
    7934:	0067eb00 	rsbeq	lr, r7, r0, lsl #22
    7938:	001c0000 	andseq	r0, ip, r0
    793c:	00000000 	andeq	r0, r0, r0
    7940:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    7944:	18000010 	stmdane	r0, {r4}
    7948:	00000c19 	andeq	r0, r0, r9, lsl ip
    794c:	111ee601 	tstne	lr, r1, lsl #12
    7950:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    7954:	0000680f 	andeq	r6, r0, pc, lsl #16
    7958:	0000680d 	andeq	r6, r0, sp, lsl #16
    795c:	00001d00 	andeq	r1, r0, r0, lsl #26
    7960:	3cd70000 	ldclcc	0, cr0, [r7], {0}
    7964:	001d0000 	andseq	r0, sp, r0
    7968:	e5000000 	str	r0, [r0, #-0]
    796c:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    7970:	00000000 	andeq	r0, r0, r0
    7974:	000015a5 	andeq	r1, r0, r5, lsr #11
    7978:	0000001d 	andeq	r0, r0, sp, lsl r0
    797c:	003d0f00 	eorseq	r0, sp, r0, lsl #30
    7980:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7984:	00001d30 	andeq	r1, r0, r0, lsr sp
    7988:	101e2501 	andsne	r2, lr, r1, lsl #10
    798c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    7998:	00682200 	rsbeq	r2, r8, r0, lsl #4
    799c:	11910100 	orrsne	r0, r1, r0, lsl #2
    79a0:	e81b0000 	ldmda	fp, {}	; <UNPREDICTABLE>
    79a4:	01000026 	tsteq	r0, r6, lsr #32
    79a8:	2f341e25 	svccs	0x00341e25
    79ac:	4a000001 	bmi	79b8 <__HEAP_SIZE+0x69b8>
    79b0:	42000068 	andmi	r0, r0, #104	; 0x68
    79b4:	1b000068 	blne	7b5c <__HEAP_SIZE+0x6b5c>
    79b8:	00001abb 			; <UNDEFINED> instruction: 0x00001abb
    79bc:	311e2601 	tstcc	lr, r1, lsl #12
    79c0:	000000d9 	ldrdeq	r0, [r0], -r9
    79c4:	00006885 	andeq	r6, r0, r5, lsl #17
    79c8:	00006881 	andeq	r6, r0, r1, lsl #17
    79cc:	0017771b 	andseq	r7, r7, fp, lsl r7
    79d0:	1e270100 	sufnes	f0, f7, f0
    79d4:	0000d931 	andeq	sp, r0, r1, lsr r9
    79d8:	0068ad00 	rsbeq	sl, r8, r0, lsl #26
    79dc:	0068a300 	rsbeq	sl, r8, r0, lsl #6
    79e0:	22811b00 	addcs	r1, r1, #0, 22
    79e4:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    79e8:	0f24331e 	svceq	0x0024331e
    79ec:	68fc0000 	ldmvs	ip!, {}^	; <UNPREDICTABLE>
    79f0:	68f20000 	ldmvs	r2!, {}^	; <UNPREDICTABLE>
    79f4:	e01b0000 	ands	r0, fp, r0
    79f8:	01000023 	tsteq	r0, r3, lsr #32
    79fc:	4a331e29 	bmi	ccf2a8 <__RAM_SIZE+0xbcf2a8>
    7a00:	45000001 	strmi	r0, [r0, #-1]
    7a04:	41000069 	tstmi	r0, r9, rrx
    7a08:	18000069 	stmdane	r0, {r0, r3, r5, r6}
    7a0c:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    7a10:	141e2b01 	ldrne	r2, [lr], #-2817	; 0xfffff4ff
    7a14:	00000119 	andeq	r0, r0, r9, lsl r1
    7a18:	00006969 	andeq	r6, r0, r9, ror #18
    7a1c:	00006965 	andeq	r6, r0, r5, ror #18
    7a20:	00243118 	eoreq	r3, r4, r8, lsl r1
    7a24:	1e2b0100 	sufnee	f0, f3, f0
    7a28:	0001191d 	andeq	r1, r1, sp, lsl r9
    7a2c:	00698c00 	rsbeq	r8, r9, r0, lsl #24
    7a30:	00698800 	rsbeq	r8, r9, r0, lsl #16
    7a34:	21201800 			; <UNDEFINED> instruction: 0x21201800
    7a38:	2b010000 	blcs	47a40 <__HEAP_SIZE+0x46a40>
    7a3c:	01192e1e 	tsteq	r9, lr, lsl lr
    7a40:	69b00000 	ldmibvs	r0!, {}	; <UNPREDICTABLE>
    7a44:	69aa0000 	stmibvs	sl!, {}	; <UNPREDICTABLE>
    7a48:	001d0000 	andseq	r0, sp, r0
    7a4c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    7a50:	1d00002b 	stcne	0, cr0, [r0, #-172]	; 0xffffff54
    7a54:	00000000 	andeq	r0, r0, r0
    7a58:	00003cd7 	ldrdeq	r3, [r0], -r7
    7a5c:	0000001d 	andeq	r0, r0, sp, lsl r0
    7a60:	003ce500 	eorseq	lr, ip, r0, lsl #10
    7a64:	00001d00 	andeq	r1, r0, r0, lsl #26
    7a68:	29bf0000 	ldmibcs	pc!, {}	; <UNPREDICTABLE>
    7a6c:	001d0000 	andseq	r0, sp, r0
    7a70:	d7000000 	strle	r0, [r0, -r0]
    7a74:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    7a78:	00000000 	andeq	r0, r0, r0
    7a7c:	00003ce5 	andeq	r3, r0, r5, ror #25
    7a80:	0000001d 	andeq	r0, r0, sp, lsl r0
    7a84:	003ce500 	eorseq	lr, ip, r0, lsl #10
    7a88:	00001d00 	andeq	r1, r0, r0, lsl #26
    7a8c:	3ce50000 	stclcc	0, cr0, [r5]
    7a90:	001e0000 	andseq	r0, lr, r0
    7a94:	95000000 	strls	r0, [r0, #-0]
    7a98:	8700000a 	strhi	r0, [r0, -sl]
    7a9c:	1f000011 	svcne	0x00000011
    7aa0:	77025001 	strvc	r5, [r2, -r1]
    7aa4:	51011f00 	tstpl	r1, r0, lsl #30
    7aa8:	1d003101 	stfnes	f3, [r0, #-4]
    7aac:	00000000 	andeq	r0, r0, r0
    7ab0:	00003d0f 	andeq	r3, r0, pc, lsl #26
    7ab4:	81012100 	mrshi	r2, (UNDEF: 17)
    7ab8:	0100001d 	tsteq	r0, sp, lsl r0
    7abc:	010e1dbe 			; <UNDEFINED> instruction: 0x010e1dbe
    7ac0:	000000d9 	ldrdeq	r0, [r0], -r9
	...
    7acc:	000069dc 	ldrdeq	r6, [r0], -ip
    7ad0:	00129a01 	andseq	r9, r2, r1, lsl #20
    7ad4:	26e81b00 	strbtcs	r1, [r8], r0, lsl #22
    7ad8:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    7adc:	012f331d 			; <UNDEFINED> instruction: 0x012f331d
    7ae0:	6a040000 	bvs	107ae8 <__RAM_SIZE+0x7ae8>
    7ae4:	69fc0000 	ldmibvs	ip!, {}^	; <UNPREDICTABLE>
    7ae8:	521b0000 	andspl	r0, fp, #0
    7aec:	0100001a 	tsteq	r0, sl, lsl r0
    7af0:	19321dbf 	ldmdbne	r2!, {r0, r1, r2, r3, r4, r5, r7, r8, sl, fp, ip}
    7af4:	3f000001 	svccc	0x00000001
    7af8:	3b00006a 	blcc	7ca8 <__HEAP_SIZE+0x6ca8>
    7afc:	1b00006a 	blne	7cac <__HEAP_SIZE+0x6cac>
    7b00:	000023e0 	andeq	r2, r0, r0, ror #7
    7b04:	321dc001 	andscc	ip, sp, #1
    7b08:	0000014a 	andeq	r0, r0, sl, asr #2
    7b0c:	00006a6b 	andeq	r6, r0, fp, ror #20
    7b10:	00006a5d 	andeq	r6, r0, sp, asr sl
    7b14:	0026c618 	eoreq	ip, r6, r8, lsl r6
    7b18:	1dc20100 	stfnee	f0, [r2]
    7b1c:	0000d912 	andeq	sp, r0, r2, lsl r9
    7b20:	006acd00 	rsbeq	ip, sl, r0, lsl #26
    7b24:	006ac900 	rsbeq	ip, sl, r0, lsl #18
    7b28:	24311800 	ldrtcs	r1, [r1], #-2048	; 0xfffff800
    7b2c:	c3010000 	movwgt	r0, #4096	; 0x1000
    7b30:	0119141d 	tsteq	r9, sp, lsl r4
    7b34:	6aef0000 	bvs	ffbc7b3c <__StackTop+0xc7ac7b3c>
    7b38:	6aeb0000 	bvs	ffac7b40 <__StackTop+0xc79c7b40>
    7b3c:	20180000 	andscs	r0, r8, r0
    7b40:	01000021 	tsteq	r0, r1, lsr #32
    7b44:	19251dc3 	stmdbne	r5!, {r0, r1, r6, r7, r8, sl, fp, ip}
    7b48:	13000001 	movwne	r0, #1
    7b4c:	0d00006b 	stceq	0, cr0, [r0, #-428]	; 0xfffffe54
    7b50:	1d00006b 	stcne	0, cr0, [r0, #-428]	; 0xfffffe54
    7b54:	00000000 	andeq	r0, r0, r0
    7b58:	00002b18 	andeq	r2, r0, r8, lsl fp
    7b5c:	0000001d 	andeq	r0, r0, sp, lsl r0
    7b60:	003cd700 	eorseq	sp, ip, r0, lsl #14
    7b64:	00001d00 	andeq	r1, r0, r0, lsl #26
    7b68:	3ce50000 	stclcc	0, cr0, [r5]
    7b6c:	001d0000 	andseq	r0, sp, r0
    7b70:	bf000000 	svclt	0x00000000
    7b74:	1d000029 	stcne	0, cr0, [r0, #-164]	; 0xffffff5c
    7b78:	00000000 	andeq	r0, r0, r0
    7b7c:	00003cd7 	ldrdeq	r3, [r0], -r7
    7b80:	0000001d 	andeq	r0, r0, sp, lsl r0
    7b84:	003ce500 	eorseq	lr, ip, r0, lsl #10
    7b88:	00001d00 	andeq	r1, r0, r0, lsl #26
    7b8c:	3ce50000 	stclcc	0, cr0, [r5]
    7b90:	001d0000 	andseq	r0, sp, r0
    7b94:	e5000000 	str	r0, [r0, #-0]
    7b98:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    7b9c:	00000000 	andeq	r0, r0, r0
    7ba0:	00000a95 	muleq	r0, r5, sl
    7ba4:	00001290 	muleq	r0, r0, r2
    7ba8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7bac:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    7bb0:	00310151 	eorseq	r0, r1, r1, asr r1
    7bb4:	0000001d 	andeq	r0, r0, sp, lsl r0
    7bb8:	003d0f00 	eorseq	r0, sp, r0, lsl #30
    7bbc:	01240000 			; <UNDEFINED> instruction: 0x01240000
    7bc0:	00001084 	andeq	r1, r0, r4, lsl #1
    7bc4:	121da501 	andsne	sl, sp, #4194304	; 0x400000
    7bc8:	0003c701 	andeq	ip, r3, r1, lsl #14
	...
    7bd4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7bd8:	0012cf01 	andseq	ip, r2, r1, lsl #30
    7bdc:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    7be0:	a7010000 	strge	r0, [r1, -r0]
    7be4:	0775111d 			; <UNDEFINED> instruction: 0x0775111d
    7be8:	6b410000 	blvs	1047bf0 <__RAM_SIZE+0xf47bf0>
    7bec:	6b3f0000 	blvs	fc7bf4 <__RAM_SIZE+0xec7bf4>
    7bf0:	24000000 	strcs	r0, [r0], #-0
    7bf4:	001f9f01 	andseq	r9, pc, r1, lsl #30
    7bf8:	1d910100 	ldfnes	f0, [r1]
    7bfc:	014a010c 	cmpeq	sl, ip, lsl #2
	...
    7c08:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7c0c:	13040100 	movwne	r0, #16640	; 0x4100
    7c10:	58180000 	ldmdapl	r8, {}	; <UNPREDICTABLE>
    7c14:	0100000e 	tsteq	r0, lr
    7c18:	4a101d93 	bmi	40f26c <__RAM_SIZE+0x30f26c>
    7c1c:	56000001 	strpl	r0, [r0], -r1
    7c20:	5400006b 	strpl	r0, [r0], #-107	; 0xffffff95
    7c24:	0000006b 	andeq	r0, r0, fp, rrx
    7c28:	155a0122 	ldrbne	r0, [sl, #-290]	; 0xfffffede
    7c2c:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    7c30:	00010a1a 	andeq	r0, r1, sl, lsl sl
    7c34:	00000000 	andeq	r0, r0, r0
    7c38:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    7c3c:	0100006b 	tsteq	r0, fp, rrx
    7c40:	000013cb 	andeq	r1, r0, fp, asr #7
    7c44:	0021cd1b 	eoreq	ip, r1, fp, lsl sp
    7c48:	1a790100 	bne	1e48050 <__RAM_SIZE+0x1d48050>
    7c4c:	0003d342 	andeq	sp, r3, r2, asr #6
    7c50:	006b9f00 	rsbeq	r9, fp, r0, lsl #30
    7c54:	006b9500 	rsbeq	r9, fp, r0, lsl #10
    7c58:	21031b00 	tstcs	r3, r0, lsl #22
    7c5c:	7a010000 	bvc	47c64 <__HEAP_SIZE+0x46c64>
    7c60:	012f3b1a 			; <UNDEFINED> instruction: 0x012f3b1a
    7c64:	6be40000 	blvs	ff907c6c <__StackTop+0xc7807c6c>
    7c68:	6bde0000 	blvs	ff787c70 <__StackTop+0xc7687c70>
    7c6c:	ad180000 	ldcge	0, cr0, [r8, #-0]
    7c70:	01000025 	tsteq	r0, r5, lsr #32
    7c74:	80171a7c 	andshi	r1, r7, ip, ror sl
    7c78:	1a000007 	bne	7c9c <__HEAP_SIZE+0x6c9c>
    7c7c:	1000006c 	andne	r0, r0, ip, rrx
    7c80:	1800006c 	stmdane	r0, {r2, r3, r5, r6}
    7c84:	000023fb 	strdeq	r2, [r0], -fp
    7c88:	151a7d01 	ldrne	r7, [sl, #-3329]	; 0xfffff2ff
    7c8c:	0000012f 	andeq	r0, r0, pc, lsr #2
    7c90:	00006c5b 	andeq	r6, r0, fp, asr ip
    7c94:	00006c59 	andeq	r6, r0, r9, asr ip
    7c98:	0020a218 	eoreq	sl, r0, r8, lsl r2
    7c9c:	1a7d0100 	bne	1f480a4 <__RAM_SIZE+0x1e480a4>
    7ca0:	00012f2c 	andeq	r2, r1, ip, lsr #30
    7ca4:	006c7600 	rsbeq	r7, ip, r0, lsl #12
    7ca8:	006c6e00 	rsbeq	r6, ip, r0, lsl #28
    7cac:	17642500 	strbne	r2, [r4, -r0, lsl #10]!
    7cb0:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    7cb4:	01451b1a 	cmpeq	r5, sl, lsl fp
    7cb8:	1c010000 	stcne	0, cr0, [r1], {-0}
	...
    7cc4:	000013ba 			; <UNDEFINED> instruction: 0x000013ba
    7cc8:	000c1918 	andeq	r1, ip, r8, lsl r9
    7ccc:	1ac90100 	bne	ff2480d4 <__StackTop+0xc71480d4>
    7cd0:	0003b119 	andeq	fp, r3, r9, lsl r1
    7cd4:	006cae00 	rsbeq	sl, ip, r0, lsl #28
    7cd8:	006cac00 	rsbeq	sl, ip, r0, lsl #24
    7cdc:	00200000 	eoreq	r0, r0, r0
    7ce0:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    7ce4:	1f00003c 	svcne	0x0000003c
    7ce8:	75025001 	strvc	r5, [r2, #-1]
    7cec:	21000000 	mrscs	r0, (UNDEF: 0)
    7cf0:	00110701 	andseq	r0, r1, r1, lsl #14
    7cf4:	1a1b0100 	bne	6c80fc <__RAM_SIZE+0x5c80fc>
    7cf8:	01190110 	tsteq	r9, r0, lsl r1
    7cfc:	305c0000 	subscc	r0, ip, r0
    7d00:	30dc1000 	sbcscc	r1, ip, r0
    7d04:	6cc11000 	stclvs	0, cr1, [r1], {0}
    7d08:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    7d0c:	1b000014 	blne	7d64 <__HEAP_SIZE+0x6d64>
    7d10:	000021cd 	andeq	r2, r0, sp, asr #3
    7d14:	3c1a1b01 			; <UNDEFINED> instruction: 0x3c1a1b01
    7d18:	000003d3 	ldrdeq	r0, [r0], -r3
    7d1c:	00006d09 	andeq	r6, r0, r9, lsl #26
    7d20:	00006cf9 	strdeq	r6, [r0], -r9
    7d24:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    7d28:	1a1d0100 	bne	748130 <__RAM_SIZE+0x648130>
    7d2c:	00078017 	andeq	r8, r7, r7, lsl r0
    7d30:	006d7c00 	rsbeq	r7, sp, r0, lsl #24
    7d34:	006d6c00 	rsbeq	r6, sp, r0, lsl #24
    7d38:	1cd11800 	ldclne	8, cr1, [r1], {0}
    7d3c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    7d40:	0119141a 	tsteq	r9, sl, lsl r4
    7d44:	6de70000 	stclvs	0, cr0, [r7]
    7d48:	6ddf0000 	ldclvs	0, cr0, [pc]	; 7d50 <__HEAP_SIZE+0x6d50>
    7d4c:	961c0000 	ldrls	r0, [ip], -r0
    7d50:	c6100030 			; <UNDEFINED> instruction: 0xc6100030
    7d54:	4d100030 	ldcmi	0, cr0, [r0, #-192]	; 0xffffff40
    7d58:	18000014 	stmdane	r0, {r2, r4}
    7d5c:	00000c19 	andeq	r0, r0, r9, lsl ip
    7d60:	151a4a01 	ldrne	r4, [sl, #-2561]	; 0xfffff5ff
    7d64:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    7d68:	00006e21 	andeq	r6, r0, r1, lsr #28
    7d6c:	00006e1f 	andeq	r6, r0, pc, lsl lr
    7d70:	30802000 	addcc	r2, r0, r0
    7d74:	3cb91000 	ldccc	0, cr1, [r9]
    7d78:	011f0000 	tsteq	pc, r0
    7d7c:	00750250 	rsbseq	r0, r5, r0, asr r2
    7d80:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7d84:	000014dc 	ldrdeq	r1, [r0], -ip
    7d88:	1019b401 	andsne	fp, r9, r1, lsl #8
    7d8c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    7d98:	006e3400 	rsbeq	r3, lr, r0, lsl #8
    7d9c:	14f10100 	ldrbtne	r0, [r1], #256	; 0x100
    7da0:	cd1b0000 	ldcgt	0, cr0, [fp, #-0]
    7da4:	01000021 	tsteq	r0, r1, lsr #32
    7da8:	d33919b4 	teqle	r9, #180, 18	; 0x2d0000
    7dac:	80000003 	andhi	r0, r0, r3
    7db0:	6c00006e 	stcvs	0, cr0, [r0], {110}	; 0x6e
    7db4:	1800006e 	stmdane	r0, {r1, r2, r3, r5, r6}
    7db8:	000022fc 	strdeq	r2, [r0], -ip
    7dbc:	1719b601 	ldrne	fp, [r9, -r1, lsl #12]
    7dc0:	00000780 	andeq	r0, r0, r0, lsl #15
    7dc4:	00006f0d 	andeq	r6, r0, sp, lsl #30
    7dc8:	00006ef9 	strdeq	r6, [r0], -r9
    7dcc:	001cd118 	andseq	sp, ip, r8, lsl r1
    7dd0:	19b70100 	ldmibne	r7!, {r8}
    7dd4:	00011914 	andeq	r1, r1, r4, lsl r9
    7dd8:	006f8c00 	rsbeq	r8, pc, r0, lsl #24
    7ddc:	006f8600 	rsbeq	r8, pc, r0, lsl #12
    7de0:	00001c00 	andeq	r1, r0, r0, lsl #24
    7de4:	00000000 	andeq	r0, r0, r0
    7de8:	14e00000 	strbtne	r0, [r0], #0
    7dec:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7df0:	0100000c 	tsteq	r0, ip
    7df4:	b11519e2 	tstlt	r5, r2, ror #19
    7df8:	ba000003 	blt	7e0c <__HEAP_SIZE+0x6e0c>
    7dfc:	b800006f 	stmdalt	r0, {r0, r1, r2, r3, r5, r6}
    7e00:	0000006f 	andeq	r0, r0, pc, rrx
    7e04:	00000020 	andeq	r0, r0, r0, lsr #32
    7e08:	003cb900 	eorseq	fp, ip, r0, lsl #18
    7e0c:	50011f00 	andpl	r1, r1, r0, lsl #30
    7e10:	00007502 	andeq	r7, r0, r2, lsl #10
    7e14:	8b012400 	blhi	50e1c <__HEAP_SIZE+0x4fe1c>
    7e18:	01000017 	tsteq	r0, r7, lsl r0
    7e1c:	0110198c 	tsteq	r0, ip, lsl #19
    7e20:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    7e2c:	01007d02 	tsteq	r0, r2, lsl #26
    7e30:	00001526 	andeq	r1, r0, r6, lsr #10
    7e34:	001cd118 	andseq	sp, ip, r8, lsl r1
    7e38:	198e0100 	stmibne	lr, {r8}
    7e3c:	00011914 	andeq	r1, r1, r4, lsl r9
    7e40:	006fcf00 	rsbeq	ip, pc, r0, lsl #30
    7e44:	006fcd00 	rsbeq	ip, pc, r0, lsl #26
    7e48:	01240000 			; <UNDEFINED> instruction: 0x01240000
    7e4c:	00002500 	andeq	r2, r0, r0, lsl #10
    7e50:	12197301 	andsne	r7, r9, #67108864	; 0x4000000
    7e54:	0003c701 	andeq	ip, r3, r1, lsl #14
	...
    7e60:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7e64:	00157001 	andseq	r7, r5, r1
    7e68:	16901b00 	ldrne	r1, [r0], r0, lsl #22
    7e6c:	73010000 	movwvc	r0, #4096	; 0x1000
    7e70:	01193f19 	tsteq	r9, r9, lsl pc
    7e74:	6feb0000 	svcvs	0x00eb0000
    7e78:	6fe30000 	svcvs	0x00e30000
    7e7c:	d1180000 	tstle	r8, r0
    7e80:	0100001c 	tsteq	r0, ip, lsl r0
    7e84:	c7161975 			; <UNDEFINED> instruction: 0xc7161975
    7e88:	2b000003 	blcs	7e9c <__HEAP_SIZE+0x6e9c>
    7e8c:	25000070 	strcs	r0, [r0, #-112]	; 0xffffff90
    7e90:	00000070 	andeq	r0, r0, r0, ror r0
    7e94:	0aa20124 	beq	fe88832c <__StackTop+0xc678832c>
    7e98:	50010000 	andpl	r0, r1, r0
    7e9c:	c7011619 	smladgt	r1, r9, r6, r1
    7ea0:	50000003 	andpl	r0, r0, r3
    7ea4:	5c100030 	ldcpl	0, cr0, [r0], {48}	; 0x30
    7ea8:	02100030 	andseq	r0, r0, #48	; 0x30
    7eac:	a501007d 	strge	r0, [r1, #-125]	; 0xffffff83
    7eb0:	18000015 	stmdane	r0, {r0, r2, r4}
    7eb4:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    7eb8:	1a195201 	bne	65c6c4 <__RAM_SIZE+0x55c6c4>
    7ebc:	000003c7 	andeq	r0, r0, r7, asr #7
    7ec0:	00007058 	andeq	r7, r0, r8, asr r0
    7ec4:	00007056 	andeq	r7, r0, r6, asr r0
    7ec8:	1ecc2600 	cdpne	6, 12, cr2, cr12, cr0, {0}
    7ecc:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    7ed0:	08010d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp}
    7ed4:	30100025 	andscc	r0, r0, r5, lsr #32
    7ed8:	02100025 	andseq	r0, r0, #37	; 0x25
    7edc:	1a01007d 	bne	480d8 <__HEAP_SIZE+0x470d8>
    7ee0:	00002417 	andeq	r2, r0, r7, lsl r4
    7ee4:	11190301 	tstne	r9, r1, lsl #6
    7ee8:	0027a601 	eoreq	sl, r7, r1, lsl #12
    7eec:	0027ca10 	eoreq	ip, r7, r0, lsl sl
    7ef0:	00706b10 	rsbseq	r6, r0, r0, lsl fp
    7ef4:	16120100 	ldrne	r0, [r2], -r0, lsl #2
    7ef8:	ad1b0000 	ldcge	0, cr0, [fp, #-0]
    7efc:	01000025 	tsteq	r0, r5, lsr #32
    7f00:	75271903 	strvc	r1, [r7, #-2307]!	; 0xfffff6fd
    7f04:	97000007 	strls	r0, [r0, -r7]
    7f08:	8b000070 	blhi	80d0 <__HEAP_SIZE+0x70d0>
    7f0c:	1d000070 	stcne	0, cr0, [r0, #-448]	; 0xfffffe40
    7f10:	100027bc 			; <UNDEFINED> instruction: 0x100027bc
    7f14:	00003d1d 	andeq	r3, r0, sp, lsl sp
    7f18:	0027c21e 	eoreq	ip, r7, lr, lsl r2
    7f1c:	003d1d10 	eorseq	r1, sp, r0, lsl sp
    7f20:	00160800 	andseq	r0, r6, r0, lsl #16
    7f24:	50011f00 	andpl	r1, r1, r0, lsl #30
    7f28:	00007402 	andeq	r7, r0, r2, lsl #8
    7f2c:	0027c81d 	eoreq	ip, r7, sp, lsl r8
    7f30:	003d1d10 	eorseq	r1, sp, r0, lsl sp
    7f34:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f38:	00001b66 	andeq	r1, r0, r6, ror #22
    7f3c:	1118e301 	tstne	r8, r1, lsl #6
    7f40:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    7f4c:	0070e100 	rsbseq	lr, r0, r0, lsl #2
    7f50:	16900100 	ldrne	r0, [r0], r0, lsl #2
    7f54:	991b0000 	ldmdbls	fp, {}	; <UNPREDICTABLE>
    7f58:	0100001f 	tsteq	r0, pc, lsl r0
    7f5c:	c73b18e3 	ldrgt	r1, [fp, -r3, ror #17]!
    7f60:	05000003 	streq	r0, [r0, #-3]
    7f64:	01000071 	tsteq	r0, r1, ror r0
    7f68:	18000071 	stmdane	r0, {r0, r4, r5, r6}
    7f6c:	000025ad 	andeq	r2, r0, sp, lsr #11
    7f70:	1118e501 	tstne	r8, r1, lsl #10
    7f74:	00000775 	andeq	r0, r0, r5, ror r7
    7f78:	00007125 	andeq	r7, r0, r5, lsr #2
    7f7c:	00007123 	andeq	r7, r0, r3, lsr #2
    7f80:	0022ee18 	eoreq	lr, r2, r8, lsl lr
    7f84:	18e60100 	stmiane	r6!, {r8}^
    7f88:	00016013 	andeq	r6, r1, r3, lsl r0
    7f8c:	00713a00 	rsbseq	r3, r1, r0, lsl #20
    7f90:	00713800 	rsbseq	r3, r1, r0, lsl #16
    7f94:	0e581800 	cdpeq	8, 5, cr1, cr8, cr0, {0}
    7f98:	e7010000 	str	r0, [r1, -r0]
    7f9c:	012f1518 			; <UNDEFINED> instruction: 0x012f1518
    7fa0:	71500000 	cmpvc	r0, r0
    7fa4:	714e0000 	mrsvc	r0, (UNDEF: 78)
    7fa8:	001d0000 	andseq	r0, sp, r0
    7fac:	90000000 	andls	r0, r0, r0
    7fb0:	00000016 	andeq	r0, r0, r6, lsl r0
    7fb4:	00245e27 	eoreq	r5, r4, r7, lsr #28
    7fb8:	18a30100 	stmiane	r3!, {r8}
    7fbc:	00290123 	eoreq	r0, r9, r3, lsr #2
    7fc0:	24f40000 	ldrbtcs	r0, [r4], #0
    7fc4:	25061000 	strcs	r1, [r6, #-0]
    7fc8:	7d021000 	stcvc	0, cr1, [r2, #-0]
    7fcc:	16d90100 	ldrbne	r0, [r9], r0, lsl #2
    7fd0:	d91b0000 	ldmdble	fp, {}	; <UNPREDICTABLE>
    7fd4:	01000018 	tsteq	r0, r8, lsl r0
    7fd8:	d94f18a3 	stmdble	pc, {r0, r1, r5, r7, fp, ip}^	; <UNPREDICTABLE>
    7fdc:	67000016 	smladvs	r0, r6, r0, r0
    7fe0:	63000071 	movwvs	r0, #113	; 0x71
    7fe4:	18000071 	stmdane	r0, {r0, r4, r5, r6}
    7fe8:	000022cf 	andeq	r2, r0, pc, asr #5
    7fec:	2018a501 	andscs	sl, r8, r1, lsl #10
    7ff0:	00000029 	andeq	r0, r0, r9, lsr #32
    7ff4:	0000718d 	andeq	r7, r0, sp, lsl #3
    7ff8:	00007185 	andeq	r7, r0, r5, lsl #3
    7ffc:	d4040700 	strle	r0, [r4], #-1792	; 0xfffff900
    8000:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    8004:	000016ce 	andeq	r1, r0, lr, asr #13
    8008:	18187c01 	ldmdane	r8, {r0, sl, fp, ip, sp, lr}
    800c:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    8018:	0071c600 	rsbseq	ip, r1, r0, lsl #12
    801c:	17b30100 	ldrne	r0, [r3, r0, lsl #2]!
    8020:	811b0000 	tsthi	fp, r0
    8024:	01000021 	tsteq	r0, r1, lsr #32
    8028:	b345187c 	movtlt	r1, #22652	; 0x587c
    802c:	ec000017 	stc	0, cr0, [r0], {23}
    8030:	e6000071 			; <UNDEFINED> instruction: 0xe6000071
    8034:	1b000071 	blne	8200 <__HEAP_SIZE+0x7200>
    8038:	00000c4d 	andeq	r0, r0, sp, asr #24
    803c:	3f187d01 	svccc	0x00187d01
    8040:	000007e1 	andeq	r0, r0, r1, ror #15
    8044:	0000721c 	andeq	r7, r0, ip, lsl r2
    8048:	00007218 	andeq	r7, r0, r8, lsl r2
    804c:	0022c81b 	eoreq	ip, r2, fp, lsl r8
    8050:	187e0100 	ldmdane	lr!, {r8}^
    8054:	00054241 	andeq	r4, r5, r1, asr #4
    8058:	00724000 	rsbseq	r4, r2, r0
    805c:	00723c00 	rsbseq	r3, r2, r0, lsl #24
    8060:	1f981800 	svcne	0x00981800
    8064:	80010000 	andhi	r0, r1, r0
    8068:	012f1518 			; <UNDEFINED> instruction: 0x012f1518
    806c:	72650000 	rsbvc	r0, r5, #0
    8070:	72610000 	rsbvc	r0, r1, #0
    8074:	f5180000 			; <UNDEFINED> instruction: 0xf5180000
    8078:	0100001f 	tsteq	r0, pc, lsl r0
    807c:	be1c1881 	cdplt	8, 1, cr1, cr12, cr1, {4}
    8080:	88000017 	stmdahi	r0, {r0, r1, r2, r4}
    8084:	84000072 	strhi	r0, [r0], #-114	; 0xffffff8e
    8088:	18000072 	stmdane	r0, {r1, r4, r5, r6}
    808c:	00000c0e 	andeq	r0, r0, lr, lsl #24
    8090:	16188201 	ldrne	r8, [r8], -r1, lsl #4
    8094:	000003ab 	andeq	r0, r0, fp, lsr #7
    8098:	000072aa 	andeq	r7, r0, sl, lsr #5
    809c:	000072a8 	andeq	r7, r0, r8, lsr #5
    80a0:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    80a4:	18830100 	stmne	r3, {r8}
    80a8:	00077511 	andeq	r7, r7, r1, lsl r5
    80ac:	0072c100 	rsbseq	ip, r2, r0, lsl #2
    80b0:	0072bd00 	rsbseq	fp, r2, r0, lsl #26
    80b4:	00002000 	andeq	r2, r0, r0
    80b8:	17c40000 	strbne	r0, [r4, r0]
    80bc:	011f0000 	tsteq	pc, r0
    80c0:	00750851 	rsbseq	r0, r5, r1, asr r8
    80c4:	771e2c08 	ldrvc	r2, [lr, -r8, lsl #24]
    80c8:	011f2200 	tsteq	pc, r0, lsl #4
    80cc:	1f310152 	svcne	0x00310152
    80d0:	78025301 	stmdavc	r2, {r0, r8, r9, ip, lr}
    80d4:	07000000 	streq	r0, [r0, -r0]
    80d8:	0006c904 	andeq	ip, r6, r4, lsl #18
    80dc:	17b30300 	ldrne	r0, [r3, r0, lsl #6]!
    80e0:	04070000 	streq	r0, [r7], #-0
    80e4:	0000039a 	muleq	r0, sl, r3
    80e8:	0b310122 	bleq	c48578 <__RAM_SIZE+0xb48578>
    80ec:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    80f0:	9c010a17 			; <UNDEFINED> instruction: 0x9c010a17
    80f4:	5010002f 	andspl	r0, r0, pc, lsr #32
    80f8:	e1100030 	tst	r0, r0, lsr r0
    80fc:	01000072 	tsteq	r0, r2, ror r0
    8100:	000018ac 	andeq	r1, r0, ip, lsr #17
    8104:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    8108:	17e90100 	strbne	r0, [r9, r0, lsl #2]!
    810c:	0003c725 	andeq	ip, r3, r5, lsr #14
    8110:	00730500 	rsbseq	r0, r3, r0, lsl #10
    8114:	00730100 	rsbseq	r0, r3, r0, lsl #2
    8118:	1d091b00 	vstrne	d1, [r9, #-0]
    811c:	ea010000 	b	48124 <__HEAP_SIZE+0x47124>
    8120:	17b32717 			; <UNDEFINED> instruction: 0x17b32717
    8124:	732f0000 			; <UNDEFINED> instruction: 0x732f0000
    8128:	73230000 			; <UNDEFINED> instruction: 0x73230000
    812c:	cd1b0000 	ldcgt	0, cr0, [fp, #-0]
    8130:	0100001b 	tsteq	r0, fp, lsl r0
    8134:	192317eb 	stmdbne	r3!, {r0, r1, r3, r5, r6, r7, r8, r9, sl, ip}
    8138:	81000001 	tsthi	r0, r1
    813c:	79000073 	stmdbvc	r0, {r0, r1, r4, r5, r6}
    8140:	1b000073 	blne	8314 <__HEAP_SIZE+0x7314>
    8144:	000022c8 	andeq	r2, r0, r8, asr #5
    8148:	2317ec01 	tstcs	r7, #256	; 0x100
    814c:	00000542 	andeq	r0, r0, r2, asr #10
    8150:	000073c5 	andeq	r7, r0, r5, asr #7
    8154:	000073b5 			; <UNDEFINED> instruction: 0x000073b5
    8158:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    815c:	17ee0100 	strbne	r0, [lr, r0, lsl #2]!
    8160:	00077511 	andeq	r7, r7, r1, lsl r5
    8164:	00743500 	rsbseq	r3, r4, r0, lsl #10
    8168:	00743100 	rsbseq	r3, r4, r0, lsl #2
    816c:	30121c00 	andscc	r1, r2, r0, lsl #24
    8170:	302e1000 	eorcc	r1, lr, r0
    8174:	186a1000 	stmdane	sl!, {ip}^
    8178:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
    817c:	18370100 	ldmdane	r7!, {r8}
    8180:	00011930 	andeq	r1, r1, r0, lsr r9
    8184:	00745700 	rsbseq	r5, r4, r0, lsl #14
    8188:	00745300 	rsbseq	r5, r4, r0, lsl #6
    818c:	e01d0000 	ands	r0, sp, r0
    8190:	d710002f 	ldrle	r0, [r0, -pc, lsr #32]
    8194:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    8198:	10002fec 	andne	r2, r0, ip, ror #31
    819c:	00003ce5 	andeq	r3, r0, r5, ror #25
    81a0:	0030041d 	eorseq	r0, r0, sp, lsl r4
    81a4:	002b1810 	eoreq	r1, fp, r0, lsl r8
    81a8:	30101d00 	andscc	r1, r0, r0, lsl #26
    81ac:	29bf1000 	ldmibcs	pc!, {ip}	; <UNPREDICTABLE>
    81b0:	3a1e0000 	bcc	7881b8 <__RAM_SIZE+0x6881b8>
    81b4:	fb100030 	blx	40827e <__RAM_SIZE+0x30827e>
    81b8:	a2000032 	andge	r0, r0, #50	; 0x32
    81bc:	1f000018 	svcne	0x00000018
    81c0:	75025001 	strvc	r5, [r2, #-1]
    81c4:	441d0000 	ldrmi	r0, [sp], #-0
    81c8:	90100030 	andsls	r0, r0, r0, lsr r0
    81cc:	00000016 	andeq	r0, r0, r6, lsl r0
    81d0:	0026901a 	eoreq	r9, r6, sl, lsl r0
    81d4:	179b0100 	ldrne	r0, [fp, r0, lsl #2]
    81d8:	27cc010d 	strbcs	r0, [ip, sp, lsl #2]
    81dc:	28181000 	ldmdacs	r8, {ip}
    81e0:	74751000 	ldrbtvc	r1, [r5], #-0
    81e4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    81e8:	2a000019 	bcs	8254 <__HEAP_SIZE+0x7254>
    81ec:	00000550 	andeq	r0, r0, r0, asr r5
    81f0:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    81f4:	17a10100 	strne	r0, [r1, r0, lsl #2]!
    81f8:	00077511 	andeq	r7, r7, r1, lsl r5
    81fc:	0074a300 	rsbseq	sl, r4, r0, lsl #6
    8200:	0074a100 	rsbseq	sl, r4, r0, lsl #2
    8204:	27d81d00 	ldrbcs	r1, [r8, r0, lsl #26]
    8208:	3cd71000 	ldclcc	0, cr1, [r7], {0}
    820c:	e41e0000 	ldr	r0, [lr], #-0
    8210:	b9100027 	ldmdblt	r0, {r0, r1, r2, r5}
    8214:	fe00003c 	mcr2	0, 0, r0, cr0, cr12, {1}
    8218:	1f000018 	svcne	0x00000018
    821c:	74025001 	strvc	r5, [r2], #-1
    8220:	f81d0004 			; <UNDEFINED> instruction: 0xf81d0004
    8224:	e5100027 	ldr	r0, [r0, #-39]	; 0xffffffd9
    8228:	2000003c 	andcs	r0, r0, ip, lsr r0
    822c:	100027fe 	strdne	r2, [r0], -lr
    8230:	000015bb 			; <UNDEFINED> instruction: 0x000015bb
    8234:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8238:	00000074 	andeq	r0, r0, r4, ror r0
    823c:	262c1a00 	strtcs	r1, [ip], -r0, lsl #20
    8240:	7b010000 	blvc	48248 <__HEAP_SIZE+0x47248>
    8244:	1c010d17 	stcne	13, cr0, [r1], {23}
    8248:	84100026 	ldrhi	r0, [r0], #-38	; 0xffffffda
    824c:	b6100026 	ldrlt	r0, [r0], -r6, lsr #32
    8250:	01000074 	tsteq	r0, r4, ror r0
    8254:	000019d4 	ldrdeq	r1, [r0], -r4
    8258:	0016ff18 	andseq	pc, r6, r8, lsl pc	; <UNPREDICTABLE>
    825c:	177d0100 	ldrbne	r0, [sp, -r0, lsl #2]!
    8260:	00012f11 	andeq	r2, r1, r1, lsl pc
    8264:	0074da00 	rsbseq	sp, r4, r0, lsl #20
    8268:	0074d600 	rsbseq	sp, r4, r0, lsl #12
    826c:	26301e00 	ldrtcs	r1, [r0], -r0, lsl #28
    8270:	3d2b1000 	stccc	0, cr1, [fp, #-0]
    8274:	196a0000 	stmdbne	sl!, {}^	; <UNPREDICTABLE>
    8278:	011f0000 	tsteq	pc, r0
    827c:	00740f50 	rsbseq	r0, r4, r0, asr pc
    8280:	00742433 	rsbseq	r2, r4, r3, lsr r4
    8284:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
    8288:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    828c:	3e1e0022 	cdpcc	0, 1, cr0, cr14, cr2, {1}
    8290:	2b100026 	blcs	408330 <__RAM_SIZE+0x308330>
    8294:	7e00003d 	mcrvc	0, 0, r0, cr0, cr13, {1}
    8298:	1f000019 	svcne	0x00000019
    829c:	75025001 	strvc	r5, [r2, #-1]
    82a0:	461e0000 	ldrmi	r0, [lr], -r0
    82a4:	2b100026 	blcs	408344 <__RAM_SIZE+0x308344>
    82a8:	9200003d 	andls	r0, r0, #61	; 0x3d
    82ac:	1f000019 	svcne	0x00000019
    82b0:	74025001 	strvc	r5, [r2], #-1
    82b4:	4c1e0000 	ldcmi	0, cr0, [lr], {-0}
    82b8:	2b100026 	blcs	408358 <__RAM_SIZE+0x308358>
    82bc:	a900003d 	stmdbge	r0, {r0, r2, r3, r4, r5}
    82c0:	1f000019 	svcne	0x00000019
    82c4:	03055001 	movweq	r5, #20481	; 0x5001
    82c8:	38008b20 	stmdacc	r0, {r5, r8, r9, fp, pc}
    82cc:	26521e00 	ldrbcs	r1, [r2], -r0, lsl #28
    82d0:	3d2b1000 	stccc	0, cr1, [fp, #-0]
    82d4:	19c00000 	stmibne	r0, {}^	; <UNPREDICTABLE>
    82d8:	011f0000 	tsteq	pc, r0
    82dc:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    82e0:	0038008b 	eorseq	r0, r8, fp, lsl #1
    82e4:	00265820 	eoreq	r5, r6, r0, lsr #16
    82e8:	003d2b10 	eorseq	r2, sp, r0, lsl fp
    82ec:	50011f00 	andpl	r1, r1, r0, lsl #30
    82f0:	8b400305 	blhi	1008f0c <__RAM_SIZE+0xf08f0c>
    82f4:	00003800 	andeq	r3, r0, r0, lsl #16
    82f8:	1ca40124 	stfnes	f0, [r4], #144	; 0x90
    82fc:	fc010000 	stc2	0, cr0, [r1], {-0}
    8300:	f6011616 			; <UNDEFINED> instruction: 0xf6011616
    8304:	54000006 	strpl	r0, [r0], #-6
    8308:	9c10002f 	ldcls	0, cr0, [r0], {47}	; 0x2f
    830c:	0210002f 	andseq	r0, r0, #47	; 0x2f
    8310:	1701007d 	smlsdxne	r1, sp, r0, r0
    8314:	2500001a 	strcs	r0, [r0, #-26]	; 0xffffffe6
    8318:	000024e0 	andeq	r2, r0, r0, ror #9
    831c:	1f170001 	svcne	0x00170001
    8320:	00000145 	andeq	r0, r0, r5, asr #2
    8324:	19681801 	stmdbne	r8!, {r0, fp, ip}^
    8328:	03010000 	movweq	r0, #4096	; 0x1000
    832c:	06f61a17 	usateq	r1, #22, r7, lsl #20
    8330:	74fd0000 	ldrbtvc	r0, [sp], #0
    8334:	74f90000 	ldrbtvc	r0, [r9], #0
    8338:	1a000000 	bne	8340 <__HEAP_SIZE+0x7340>
    833c:	00001d54 	andeq	r1, r0, r4, asr sp
    8340:	08167401 	ldmdaeq	r6, {r0, sl, ip, sp, lr}
    8344:	002cbc01 	eoreq	fp, ip, r1, lsl #24
    8348:	002cf410 	eoreq	pc, ip, r0, lsl r4	; <UNPREDICTABLE>
    834c:	00751c10 	rsbseq	r1, r5, r0, lsl ip
    8350:	1aa60100 	bne	fe988758 <__StackTop+0xc6888758>
    8354:	561b0000 	ldrpl	r0, [fp], -r0
    8358:	01000021 	tsteq	r0, r1, lsr #32
    835c:	9f081674 	svcls	0x00081674
    8360:	40000000 	andmi	r0, r0, r0
    8364:	3c000075 	stccc	0, cr0, [r0], {117}	; 0x75
    8368:	23000075 	movwcs	r0, #117	; 0x75
    836c:	00000690 	muleq	r0, r0, r6
    8370:	00001a93 	muleq	r0, r3, sl
    8374:	00185b18 	andseq	r5, r8, r8, lsl fp
    8378:	16bd0100 	ldrtne	r0, [sp], r0, lsl #2
    837c:	00014a18 	andeq	r4, r1, r8, lsl sl
    8380:	00756700 	rsbseq	r6, r5, r0, lsl #14
    8384:	00756100 	rsbseq	r6, r5, r0, lsl #2
    8388:	2cc41d00 	stclcs	13, cr1, [r4], {0}
    838c:	2acf1000 	bcs	ff3cc394 <__StackTop+0xc72cc394>
    8390:	de1d0000 	cdple	0, 1, cr0, cr13, cr0, {0}
    8394:	1810002c 	ldmdane	r0, {r2, r3, r5}
    8398:	1d00002b 	stcne	0, cr0, [r0, #-172]	; 0xffffff54
    839c:	10002ce2 	andne	r2, r0, r2, ror #25
    83a0:	00002acf 	andeq	r2, r0, pc, asr #21
    83a4:	002cea1d 	eoreq	lr, ip, sp, lsl sl
    83a8:	003d3a10 	eorseq	r3, sp, r0, lsl sl
    83ac:	2cee1d00 	stclcs	13, cr1, [lr]
    83b0:	29bf1000 	ldmibcs	pc!, {ip}	; <UNPREDICTABLE>
    83b4:	1d000000 	stcne	0, cr0, [r0, #-0]
    83b8:	10002ccc 	andne	r2, r0, ip, asr #25
    83bc:	000018ac 	andeq	r1, r0, ip, lsr #17
    83c0:	002cd81d 	eoreq	sp, ip, sp, lsl r8
    83c4:	003d0f10 	eorseq	r0, sp, r0, lsl pc
    83c8:	01170000 	tsteq	r7, r0
    83cc:	000021aa 	andeq	r2, r0, sl, lsr #3
    83d0:	0a160b01 	beq	58afdc <__RAM_SIZE+0x48afdc>
    83d4:	00000001 	andeq	r0, r0, r1
    83d8:	00000000 	andeq	r0, r0, r0
    83dc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    83e0:	001af501 	andseq	pc, sl, r1, lsl #10
    83e4:	1f991900 	svcne	0x00991900
    83e8:	0b010000 	bleq	483f0 <__HEAP_SIZE+0x473f0>
    83ec:	03c72b16 	biceq	r2, r7, #22528	; 0x5800
    83f0:	50010000 	andpl	r0, r1, r0
    83f4:	0018e619 	andseq	lr, r8, r9, lsl r6
    83f8:	160c0100 	strne	r0, [ip], -r0, lsl #2
    83fc:	00014530 	andeq	r4, r1, r0, lsr r5
    8400:	18510100 	ldmdane	r1, {r8}^
    8404:	000025ad 	andeq	r2, r0, sp, lsr #11
    8408:	11160e01 	tstne	r6, r1, lsl #28
    840c:	00000775 	andeq	r0, r0, r5, ror r7
    8410:	00007592 	muleq	r0, r2, r5
    8414:	00007590 	muleq	r0, r0, r5
    8418:	79012400 	stmdbvc	r1, {sl, sp}
    841c:	01000024 	tsteq	r0, r4, lsr #32
    8420:	011115f0 			; <UNDEFINED> instruction: 0x011115f0
    8424:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    8430:	01007d02 	tsteq	r0, r2, lsl #26
    8434:	00001b54 	andeq	r1, r0, r4, asr fp
    8438:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    843c:	15f00100 	ldrbne	r0, [r0, #256]!	; 0x100
    8440:	0003c733 	andeq	ip, r3, r3, lsr r7
    8444:	0075ad00 	rsbseq	sl, r5, r0, lsl #26
    8448:	0075a500 	rsbseq	sl, r5, r0, lsl #10
    844c:	0e581800 	cdpeq	8, 5, cr1, cr8, cr0, {0}
    8450:	f2010000 	vhadd.s8	d0, d1, d0
    8454:	012f1515 			; <UNDEFINED> instruction: 0x012f1515
    8458:	75eb0000 	strbvc	r0, [fp, #0]!
    845c:	75e70000 	strbvc	r0, [r7, #0]!
    8460:	ad180000 	ldcge	0, cr0, [r8, #-0]
    8464:	01000025 	tsteq	r0, r5, lsr #32
    8468:	541715f3 	ldrpl	r1, [r7], #-1523	; 0xfffffa0d
    846c:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    8470:	0a000076 	beq	8650 <__HEAP_SIZE+0x7650>
    8474:	00000076 	andeq	r0, r0, r6, ror r0
    8478:	075c0407 	ldrbeq	r0, [ip, -r7, lsl #8]
    847c:	54030000 	strpl	r0, [r3], #-0
    8480:	2b00001b 	blcs	84f4 <__HEAP_SIZE+0x74f4>
    8484:	0014cb01 	andseq	ip, r4, r1, lsl #22
    8488:	15e30100 	strbne	r0, [r3, #256]!	; 0x100
    848c:	2f480106 	svccs	0x00480106
    8490:	2f541000 	svccs	0x00541000
    8494:	7d021000 	stcvc	0, cr1, [r2, #-0]
    8498:	01210100 			; <UNDEFINED> instruction: 0x01210100
    849c:	00001441 	andeq	r1, r0, r1, asr #8
    84a0:	0c159e01 	ldceq	14, cr9, [r5], {1}
    84a4:	00011901 	andeq	r1, r1, r1, lsl #18
    84a8:	002ecc00 	eoreq	ip, lr, r0, lsl #24
    84ac:	002f4810 	eoreq	r4, pc, r0, lsl r8	; <UNPREDICTABLE>
    84b0:	00762f10 	rsbseq	r2, r6, r0, lsl pc
    84b4:	1c2c0100 	stfnes	f0, [ip], #-0
    84b8:	221b0000 	andscs	r0, fp, #0
    84bc:	0100001f 	tsteq	r0, pc, lsl r0
    84c0:	3234159e 	eorscc	r1, r4, #662700032	; 0x27800000
    84c4:	6500001c 	strvs	r0, [r0, #-28]	; 0xffffffe4
    84c8:	4f000076 	svcmi	0x00000076
    84cc:	1b000076 	blne	86ac <__HEAP_SIZE+0x76ac>
    84d0:	000023df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    84d4:	35159f01 	ldrcc	r9, [r5, #-3841]	; 0xfffff0ff
    84d8:	00001c3d 	andeq	r1, r0, sp, lsr ip
    84dc:	000076f9 	strdeq	r7, [r0], -r9
    84e0:	000076f5 	strdeq	r7, [r0], -r5
    84e4:	001cd118 	andseq	sp, ip, r8, lsl r1
    84e8:	15a10100 	strne	r0, [r1, #256]!	; 0x100
    84ec:	00011910 	andeq	r1, r1, r0, lsl r9
    84f0:	00772100 	rsbseq	r2, r7, r0, lsl #2
    84f4:	00771700 	rsbseq	r1, r7, r0, lsl #14
    84f8:	07682300 	strbeq	r2, [r8, -r0, lsl #6]!
    84fc:	1c190000 	ldcne	0, cr0, [r9], {-0}
    8500:	2f180000 	svccs	0x00180000
    8504:	0100001c 	tsteq	r0, ip, lsl r0
    8508:	5b1a15ab 	blpl	68dbbc <__RAM_SIZE+0x58dbbc>
    850c:	6a000001 	bvs	8518 <__HEAP_SIZE+0x7518>
    8510:	64000077 	strvs	r0, [r0], #-119	; 0xffffff89
    8514:	18000077 	stmdane	r0, {r0, r1, r2, r4, r5, r6}
    8518:	00001a72 	andeq	r1, r0, r2, ror sl
    851c:	1a15ac01 	bne	573528 <__RAM_SIZE+0x473528>
    8520:	0000015b 	andeq	r0, r0, fp, asr r1
    8524:	00007799 	muleq	r0, r9, r7
    8528:	00007793 	muleq	r0, r3, r7
    852c:	002f3220 	eoreq	r3, pc, r0, lsr #4
    8530:	001c4210 	andseq	r4, ip, r0, lsl r2
    8534:	50011f00 	andpl	r1, r1, r0, lsl #30
    8538:	00007402 	andeq	r7, r0, r2, lsl #8
    853c:	2ed61d00 	cdpcs	13, 13, cr1, cr6, cr0, {0}
    8540:	3cd71000 	ldclcc	0, cr1, [r7], {0}
    8544:	f81d0000 			; <UNDEFINED> instruction: 0xf81d0000
    8548:	e510002e 	ldr	r0, [r0, #-46]	; 0xffffffd2
    854c:	0000003c 	andeq	r0, r0, ip, lsr r0
    8550:	05b30407 	ldreq	r0, [r3, #1031]!	; 0x407
    8554:	2c030000 	stccs	0, cr0, [r3], {-0}
    8558:	0700001c 	smladeq	r0, ip, r0, r0
    855c:	00014a04 	andeq	r4, r1, r4, lsl #20
    8560:	1c370300 	ldcne	3, cr0, [r7], #-0
    8564:	01170000 	tsteq	r7, r0
    8568:	00001295 	muleq	r0, r5, r2
    856c:	06159201 	ldreq	r9, [r5], -r1, lsl #4
    8570:	002eb401 	eoreq	fp, lr, r1, lsl #8
    8574:	002ecc10 	eoreq	ip, lr, r0, lsl ip
    8578:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    857c:	001c6d01 	andseq	r6, ip, r1, lsl #26
    8580:	1f221900 	svcne	0x00221900
    8584:	92010000 	andls	r0, r1, #0
    8588:	1c323615 	ldcne	6, cr3, [r2], #-84	; 0xffffffac
    858c:	50010000 	andpl	r0, r1, r0
    8590:	9b012200 	blls	50d98 <__HEAP_SIZE+0x4fd98>
    8594:	01000018 	tsteq	r0, r8, lsl r0
    8598:	01061582 	smlabbeq	r6, r2, r5, r1
	...
    85a4:	000077c2 	andeq	r7, r0, r2, asr #15
    85a8:	001cb101 	andseq	fp, ip, r1, lsl #2
    85ac:	1f221b00 	svcne	0x00221b00
    85b0:	82010000 	andhi	r0, r1, #0
    85b4:	1c322e15 	ldcne	14, cr2, [r2], #-84	; 0xffffffac
    85b8:	77e80000 	strbvc	r0, [r8, r0]!
    85bc:	77e20000 	strbvc	r0, [r2, r0]!
    85c0:	001d0000 	andseq	r0, sp, r0
    85c4:	d7000000 	strle	r0, [r0, -r0]
    85c8:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    85cc:	00000000 	andeq	r0, r0, r0
    85d0:	00003ce5 	andeq	r3, r0, r5, ror #25
    85d4:	d9012200 	stmdble	r1, {r9, sp}
    85d8:	0100001c 	tsteq	r0, ip, lsl r0
    85dc:	0106153a 	tsteq	r6, sl, lsr r5
	...
    85e8:	00007814 	andeq	r7, r0, r4, lsl r8
    85ec:	001d7701 	andseq	r7, sp, r1, lsl #14
    85f0:	24411b00 	strbcs	r1, [r1], #-2816	; 0xfffff500
    85f4:	3a010000 	bcc	485fc <__HEAP_SIZE+0x475fc>
    85f8:	03ab3615 			; <UNDEFINED> instruction: 0x03ab3615
    85fc:	783c0000 	ldmdavc	ip!, {}	; <UNPREDICTABLE>
    8600:	78340000 	ldmdavc	r4!, {}	; <UNPREDICTABLE>
    8604:	751b0000 	ldrvc	r0, [fp, #-0]
    8608:	0100000b 	tsteq	r0, fp
    860c:	5b3a153b 	blpl	e8db00 <__RAM_SIZE+0xd8db00>
    8610:	7a000001 	bvc	861c <__HEAP_SIZE+0x761c>
    8614:	76000078 			; <UNDEFINED> instruction: 0x76000078
    8618:	18000078 	stmdane	r0, {r3, r4, r5, r6}
    861c:	00001a43 	andeq	r1, r0, r3, asr #20
    8620:	0d153d01 	ldceq	13, cr3, [r5, #-4]
    8624:	00000775 	andeq	r0, r0, r5, ror r7
    8628:	0000789d 	muleq	r0, sp, r8
    862c:	0000789b 	muleq	r0, fp, r8
    8630:	00073823 	andeq	r3, r7, r3, lsr #16
    8634:	001d2b00 	andseq	r2, sp, r0, lsl #22
    8638:	0c4d1800 	mcrreq	8, 0, r1, sp, cr0
    863c:	4f010000 	svcmi	0x00010000
    8640:	07ec0515 			; <UNDEFINED> instruction: 0x07ec0515
    8644:	78b40000 	ldmvc	r4!, {}	; <UNPREDICTABLE>
    8648:	78b00000 	ldmvc	r0!, {}	; <UNPREDICTABLE>
    864c:	23000000 	movwcs	r0, #0
    8650:	00000750 	andeq	r0, r0, r0, asr r7
    8654:	00001d4a 	andeq	r1, r0, sl, asr #26
    8658:	000c4d18 	andeq	r4, ip, r8, lsl sp
    865c:	15620100 	strbne	r0, [r2, #-256]!	; 0xffffff00
    8660:	0007ec05 	andeq	lr, r7, r5, lsl #24
    8664:	0078d600 	rsbseq	sp, r8, r0, lsl #12
    8668:	0078d200 	rsbseq	sp, r8, r0, lsl #4
    866c:	001c0000 	andseq	r0, ip, r0
    8670:	00000000 	andeq	r0, r0, r0
    8674:	6d000000 	stcvs	0, cr0, [r0, #-0]
    8678:	1800001d 	stmdane	r0, {r0, r2, r3, r4}
    867c:	00000c19 	andeq	r0, r0, r9, lsl ip
    8680:	05156301 	ldreq	r6, [r5, #-769]	; 0xfffffcff
    8684:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    8688:	000078f6 	strdeq	r7, [r0], -r6
    868c:	000078f4 	strdeq	r7, [r0], -r4
    8690:	00001d00 	andeq	r1, r0, r0, lsl #26
    8694:	15a50000 	strne	r0, [r5, #0]!
    8698:	21000000 	mrscs	r0, (UNDEF: 0)
    869c:	00163f01 	andseq	r3, r6, r1, lsl #30
    86a0:	14dd0100 	ldrbne	r0, [sp], #256	; 0x100
    86a4:	0119010c 	tsteq	r9, ip, lsl #2
    86a8:	2dd00000 	ldclcs	0, cr0, [r0]
    86ac:	2eb41000 	cdpcs	0, 11, cr1, cr4, cr0, {0}
    86b0:	79091000 	stmdbvc	r9, {ip}
    86b4:	64010000 	strvs	r0, [r1], #-0
    86b8:	1b00001e 	blne	8738 <__HEAP_SIZE+0x7738>
    86bc:	000017cd 	andeq	r1, r0, sp, asr #15
    86c0:	3b14dd01 	blcc	53facc <__RAM_SIZE+0x43facc>
    86c4:	00001e6a 	andeq	r1, r0, sl, ror #28
    86c8:	00007931 	andeq	r7, r0, r1, lsr r9
    86cc:	00007929 	andeq	r7, r0, r9, lsr #18
    86d0:	001a4318 	andseq	r4, sl, r8, lsl r3
    86d4:	14df0100 	ldrbne	r0, [pc], #256	; 86dc <__HEAP_SIZE+0x76dc>
    86d8:	0007750d 	andeq	r7, r7, sp, lsl #10
    86dc:	00796d00 	rsbseq	r6, r9, r0, lsl #26
    86e0:	00796b00 	rsbseq	r6, r9, r0, lsl #22
    86e4:	1cd11800 	ldclne	8, cr1, [r1], {0}
    86e8:	e0010000 	and	r0, r1, r0
    86ec:	01191014 	tsteq	r9, r4, lsl r0
    86f0:	79840000 	stmibvc	r4, {}	; <UNPREDICTABLE>
    86f4:	79800000 	stmibvc	r0, {}	; <UNPREDICTABLE>
    86f8:	08230000 	stmdaeq	r3!, {}	; <UNPREDICTABLE>
    86fc:	f5000007 			; <UNDEFINED> instruction: 0xf5000007
    8700:	1800001d 	stmdane	r0, {r0, r2, r3, r4}
    8704:	00000c4d 	andeq	r0, r0, sp, asr #24
    8708:	0514f601 	ldreq	pc, [r4, #-1537]	; 0xfffff9ff
    870c:	000007ec 	andeq	r0, r0, ip, ror #15
    8710:	000079a8 	andeq	r7, r0, r8, lsr #19
    8714:	000079a4 	andeq	r7, r0, r4, lsr #19
    8718:	07202300 	streq	r2, [r0, -r0, lsl #6]!
    871c:	1e140000 	cdpne	0, 1, cr0, cr4, cr0, {0}
    8720:	4d180000 	ldcmi	0, cr0, [r8, #-0]
    8724:	0100000c 	tsteq	r0, ip
    8728:	ec0914fa 	cfstrs	mvf1, [r9], {250}	; 0xfa
    872c:	ca000007 	bgt	8750 <__HEAP_SIZE+0x7750>
    8730:	c6000079 			; <UNDEFINED> instruction: 0xc6000079
    8734:	00000079 	andeq	r0, r0, r9, ror r0
    8738:	002e2a1c 	eoreq	r2, lr, ip, lsl sl
    873c:	002e5a10 	eoreq	r5, lr, r0, lsl sl
    8740:	001e3710 	andseq	r3, lr, r0, lsl r7
    8744:	0c191800 	ldceq	8, cr1, [r9], {-0}
    8748:	fb010000 	blx	48752 <__HEAP_SIZE+0x47752>
    874c:	03b10914 			; <UNDEFINED> instruction: 0x03b10914
    8750:	79ea0000 	stmibvc	sl!, {}^	; <UNPREDICTABLE>
    8754:	79e80000 	stmibvc	r8!, {}^	; <UNPREDICTABLE>
    8758:	1c000000 	stcne	0, cr0, [r0], {-0}
    875c:	10002e7e 	andne	r2, r0, lr, ror lr
    8760:	10002e96 	mulne	r0, r6, lr
    8764:	00001e5a 	andeq	r1, r0, sl, asr lr
    8768:	000c1918 	andeq	r1, ip, r8, lsl r9
    876c:	150f0100 	strne	r0, [pc, #-256]	; 8674 <__HEAP_SIZE+0x7674>
    8770:	0003b109 	andeq	fp, r3, r9, lsl #2
    8774:	0079ff00 	rsbseq	pc, r9, r0, lsl #30
    8778:	0079fd00 	rsbseq	pc, r9, r0, lsl #26
    877c:	5e1d0000 	cdppl	0, 1, cr0, cr13, cr0, {0}
    8780:	a510002e 	ldrge	r0, [r0, #-46]	; 0xffffffd2
    8784:	00000015 	andeq	r0, r0, r5, lsl r0
    8788:	03c20407 	biceq	r0, r2, #117440512	; 0x7000000
    878c:	64030000 	strvs	r0, [r3], #-0
    8790:	2200001e 	andcs	r0, r0, #30
    8794:	00117401 	andseq	r7, r1, r1, lsl #8
    8798:	14b80100 	ldrtne	r0, [r8], #256	; 0x100
    879c:	2d94010a 	ldfcss	f0, [r4, #40]	; 0x28
    87a0:	2dd01000 	ldclcs	0, cr1, [r0]
    87a4:	7a121000 	bvc	48c7ac <__RAM_SIZE+0x38c7ac>
    87a8:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    87ac:	1b00001e 	blne	882c <__HEAP_SIZE+0x782c>
    87b0:	000017cd 	andeq	r1, r0, sp, asr #15
    87b4:	3a14b801 	bcc	5367c0 <__RAM_SIZE+0x4367c0>
    87b8:	000007ec 	andeq	r0, r0, ip, ror #15
    87bc:	00007a38 	andeq	r7, r0, r8, lsr sl
    87c0:	00007a32 	andeq	r7, r0, r2, lsr sl
    87c4:	0023e01b 	eoreq	lr, r3, fp, lsl r0
    87c8:	14b90100 	ldrtne	r0, [r9], #256	; 0x100
    87cc:	00014a36 	andeq	r4, r1, r6, lsr sl
    87d0:	007a6800 	rsbseq	r6, sl, r0, lsl #16
    87d4:	007a6400 	rsbseq	r6, sl, r0, lsl #8
    87d8:	0dd21b00 	vldreq	d17, [r2]
    87dc:	ba010000 	blt	487e4 <__HEAP_SIZE+0x477e4>
    87e0:	012a3c14 			; <UNDEFINED> instruction: 0x012a3c14
    87e4:	7a8a0000 	bvc	fe2887ec <__StackTop+0xc61887ec>
    87e8:	7a860000 	bvc	fe1887f0 <__StackTop+0xc60887f0>
    87ec:	9a1c0000 	bls	7087f4 <__RAM_SIZE+0x6087f4>
    87f0:	be10002d 	cdplt	0, 1, cr0, cr0, cr13, {1}
    87f4:	ed10002d 	ldc	0, cr0, [r0, #-180]	; 0xffffff4c
    87f8:	1800001e 	stmdane	r0, {r1, r2, r3, r4}
    87fc:	00000c19 	andeq	r0, r0, r9, lsl ip
    8800:	0914ca01 	ldmdbeq	r4, {r0, r9, fp, lr, pc}
    8804:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    8808:	00007aad 	andeq	r7, r0, sp, lsr #21
    880c:	00007aab 	andeq	r7, r0, fp, lsr #21
    8810:	2dca1d00 	stclcs	13, cr1, [sl]
    8814:	0a951000 	beq	fe54c81c <__StackTop+0xc644c81c>
    8818:	22000000 	andcs	r0, r0, #0
    881c:	00169801 	andseq	r9, r6, r1, lsl #16
    8820:	14980100 	ldrne	r0, [r8], #256	; 0x100
    8824:	00000106 	andeq	r0, r0, r6, lsl #2
    8828:	00000000 	andeq	r0, r0, r0
    882c:	7ac00000 	bvc	ff008834 <__StackTop+0xc6f08834>
    8830:	8c010000 	stchi	0, cr0, [r1], {-0}
    8834:	1b00001f 	blne	88b8 <__HEAP_SIZE+0x78b8>
    8838:	000017cd 	andeq	r1, r0, sp, asr #15
    883c:	2f149801 	svccs	0x00149801
    8840:	000007e1 	andeq	r0, r0, r1, ror #15
    8844:	00007ae6 	andeq	r7, r0, r6, ror #21
    8848:	00007ae0 	andeq	r7, r0, r0, ror #21
    884c:	000b751b 	andeq	r7, fp, fp, lsl r5
    8850:	14990100 	ldrne	r0, [r9], #256	; 0x100
    8854:	00015b37 	andeq	r5, r1, r7, lsr fp
    8858:	007b1600 	rsbseq	r1, fp, r0, lsl #12
    885c:	007b1200 	rsbseq	r1, fp, r0, lsl #4
    8860:	23e01b00 	mvncs	r1, #0, 22
    8864:	9a010000 	bls	4886c <__HEAP_SIZE+0x4786c>
    8868:	015b3714 	cmpeq	fp, r4, lsl r7
    886c:	7b3b0000 	blvc	ec8874 <__RAM_SIZE+0xdc8874>
    8870:	7b370000 	blvc	dc8878 <__RAM_SIZE+0xcc8878>
    8874:	001c0000 	andseq	r0, ip, r0
    8878:	00000000 	andeq	r0, r0, r0
    887c:	75000000 	strvc	r0, [r0, #-0]
    8880:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    8884:	00000c19 	andeq	r0, r0, r9, lsl ip
    8888:	0514ae01 	ldreq	sl, [r4, #-3585]	; 0xfffff1ff
    888c:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    8890:	00007b5e 	andeq	r7, r0, lr, asr fp
    8894:	00007b5c 	andeq	r7, r0, ip, asr fp
    8898:	00002000 	andeq	r2, r0, r0
    889c:	0a950000 	beq	fe5488a4 <__StackTop+0xc64488a4>
    88a0:	011f0000 	tsteq	pc, r0
    88a4:	01f30350 	mvnseq	r0, r0, asr r3
    88a8:	51011f52 	tstpl	r1, r2, asr pc
    88ac:	00003101 	andeq	r3, r0, r1, lsl #2
    88b0:	106e0122 	rsbne	r0, lr, r2, lsr #2
    88b4:	7b010000 	blvc	488bc <__HEAP_SIZE+0x478bc>
    88b8:	78010614 	stmdavc	r1, {r2, r4, r9, sl}
    88bc:	9410002d 	ldrls	r0, [r0], #-45	; 0xffffffd3
    88c0:	7110002d 	tstvc	r0, sp, lsr #32
    88c4:	0100007b 	tsteq	r0, fp, ror r0
    88c8:	00001ffd 	strdeq	r1, [r0], -sp
    88cc:	0017cd1b 	andseq	ip, r7, fp, lsl sp
    88d0:	147b0100 	ldrbtne	r0, [fp], #-256	; 0xffffff00
    88d4:	0007ec2c 	andeq	lr, r7, ip, lsr #24
    88d8:	007b9500 	rsbseq	r9, fp, r0, lsl #10
    88dc:	007b9100 	rsbseq	r9, fp, r0, lsl #2
    88e0:	23e01b00 	mvncs	r1, #0, 22
    88e4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    88e8:	015b2e14 	cmpeq	fp, r4, lsl lr
    88ec:	7bbc0000 	blvc	fef088f4 <__StackTop+0xc6e088f4>
    88f0:	7bb60000 	blvc	fed888f8 <__StackTop+0xc6c888f8>
    88f4:	861e0000 	ldrhi	r0, [lr], -r0
    88f8:	c810002d 	ldmdagt	r0, {r0, r2, r3, r5}
    88fc:	e700003c 	smladx	r0, ip, r0, r0
    8900:	1f00001f 	svcne	0x0000001f
    8904:	f3035001 	vhadd.u8	d5, d3, d1
    8908:	20005001 	andcs	r5, r0, r1
    890c:	10002d8e 	andne	r2, r0, lr, lsl #27
    8910:	00000a95 	muleq	r0, r5, sl
    8914:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8918:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    891c:	00310151 	eorseq	r0, r1, r1, asr r1
    8920:	b2011700 	andlt	r1, r1, #0, 14
    8924:	01000020 	tsteq	r0, r0, lsr #32
    8928:	010a13c0 	smlabteq	sl, r0, r3, r1
    892c:	10002cf4 	strdne	r2, [r0], -r4
    8930:	10002d78 	andne	r2, r0, r8, ror sp
    8934:	01007d02 	tsteq	r0, r2, lsl #26
    8938:	0000204f 	andeq	r2, r0, pc, asr #32
    893c:	0006a82a 	andeq	sl, r6, sl, lsr #16
    8940:	23ed1800 	mvncs	r1, #0, 16
    8944:	fa010000 	blx	4894c <__HEAP_SIZE+0x4794c>
    8948:	012f0d13 			; <UNDEFINED> instruction: 0x012f0d13
    894c:	7bee0000 	blvc	ffb88954 <__StackTop+0xc7a88954>
    8950:	7be80000 	blvc	ffa08958 <__StackTop+0xc7908958>
    8954:	c02a0000 	eorgt	r0, sl, r0
    8958:	18000006 	stmdane	r0, {r1, r2}
    895c:	0000170a 	andeq	r1, r0, sl, lsl #14
    8960:	0d13fa01 	vldreq	s30, [r3, #-4]
    8964:	000007ec 	andeq	r0, r0, ip, ror #15
    8968:	00007c21 	andeq	r7, r0, r1, lsr #24
    896c:	00007c1b 	andeq	r7, r0, fp, lsl ip
    8970:	21000000 	mrscs	r0, (UNDEF: 0)
    8974:	00208501 	eoreq	r8, r0, r1, lsl #10
    8978:	139c0100 	orrsne	r0, ip, #0, 2
    897c:	01190110 	tsteq	r9, r0, lsl r1
	...
    8988:	7c6c0000 	stclvc	0, cr0, [ip], #-0
    898c:	d1010000 	mrsle	r0, (UNDEF: 1)
    8990:	1b000020 	blne	8a18 <__HEAP_SIZE+0x7a18>
    8994:	00001f99 	muleq	r0, r9, pc	; <UNPREDICTABLE>
    8998:	3b139c01 	blcc	4ef9a4 <__RAM_SIZE+0x3ef9a4>
    899c:	000003c7 	andeq	r0, r0, r7, asr #7
    89a0:	00007c90 	muleq	r0, r0, ip
    89a4:	00007c8c 	andeq	r7, r0, ip, lsl #25
    89a8:	0021751b 	eoreq	r7, r1, fp, lsl r5
    89ac:	139d0100 	orrsne	r0, sp, #0, 2
    89b0:	00009f35 	andeq	r9, r0, r5, lsr pc
    89b4:	007cb400 	rsbseq	fp, ip, r0, lsl #8
    89b8:	007cae00 	rsbseq	sl, ip, r0, lsl #28
    89bc:	25ae1800 	strcs	r1, [lr, #2048]!	; 0x800
    89c0:	9f010000 	svcls	0x00010000
    89c4:	07751113 			; <UNDEFINED> instruction: 0x07751113
    89c8:	7ce40000 	stclvc	0, cr0, [r4]
    89cc:	7ce00000 	stclvc	0, cr0, [r0]
    89d0:	d1180000 	tstle	r8, r0
    89d4:	0100001c 	tsteq	r0, ip, lsl r0
    89d8:	191413a0 	ldmdbne	r4, {r5, r7, r8, r9, ip}
    89dc:	04000001 	streq	r0, [r0], #-1
    89e0:	0200007d 	andeq	r0, r0, #125	; 0x7d
    89e4:	2c00007d 	stccs	0, cr0, [r0], {125}	; 0x7d
    89e8:	00000000 	andeq	r0, r0, r0
    89ec:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    89f0:	005101f3 	ldrsheq	r0, [r1], #-19	; 0xffffffed
    89f4:	60012100 	andvs	r2, r1, r0, lsl #2
    89f8:	01000026 	tsteq	r0, r6, lsr #32
    89fc:	0118137c 	tsteq	r8, ip, ror r3
    8a00:	000004ed 	andeq	r0, r0, sp, ror #9
	...
    8a0c:	00007d18 	andeq	r7, r0, r8, lsl sp
    8a10:	00215801 	eoreq	r5, r1, r1, lsl #16
    8a14:	1f991b00 	svcne	0x00991b00
    8a18:	7c010000 	stcvc	0, cr0, [r1], {-0}
    8a1c:	03c74813 	biceq	r4, r7, #1245184	; 0x130000
    8a20:	7d3c0000 	ldcvc	0, cr0, [ip, #-0]
    8a24:	7d380000 	ldcvc	0, cr0, [r8, #-0]
    8a28:	ad180000 	ldcge	0, cr0, [r8, #-0]
    8a2c:	01000025 	tsteq	r0, r5, lsr #32
    8a30:	7511137e 	ldrvc	r1, [r1, #-894]	; 0xfffffc82
    8a34:	5c000007 	stcpl	0, cr0, [r0], {7}
    8a38:	5a00007d 	bpl	8c34 <__HEAP_SIZE+0x7c34>
    8a3c:	1800007d 	stmdane	r0, {r0, r2, r3, r4, r5, r6}
    8a40:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    8a44:	1c137f01 	ldcne	15, cr7, [r3], {1}
    8a48:	000004ed 	andeq	r0, r0, sp, ror #9
    8a4c:	00007d71 	andeq	r7, r0, r1, ror sp
    8a50:	00007d6f 	andeq	r7, r0, pc, ror #26
    8a54:	000e7918 	andeq	r7, lr, r8, lsl r9
    8a58:	13800100 	orrne	r0, r0, #0, 2
    8a5c:	00012f15 	andeq	r2, r1, r5, lsl pc
    8a60:	007d8600 	rsbseq	r8, sp, r0, lsl #12
    8a64:	007d8400 	rsbseq	r8, sp, r0, lsl #8
    8a68:	00001d00 	andeq	r1, r0, r0, lsl #26
    8a6c:	3cf30000 	ldclcc	0, cr0, [r3]
    8a70:	001d0000 	andseq	r0, sp, r0
    8a74:	01000000 	mrseq	r0, (UNDEF: 0)
    8a78:	0000003d 	andeq	r0, r0, sp, lsr r0
    8a7c:	1b090121 	blne	248f08 <__RAM_SIZE+0x148f08>
    8a80:	60010000 	andvs	r0, r1, r0
    8a84:	ed011813 	stc	8, cr1, [r1, #-76]	; 0xffffffb4
    8a88:	00000004 	andeq	r0, r0, r4
    8a8c:	00000000 	andeq	r0, r0, r0
    8a90:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    8a94:	0100007d 	tsteq	r0, sp, ror r0
    8a98:	000021ca 	andeq	r2, r0, sl, asr #3
    8a9c:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    8aa0:	13600100 	cmnne	r0, #0, 2
    8aa4:	0003c741 	andeq	ip, r3, r1, asr #14
    8aa8:	007dbd00 	rsbseq	fp, sp, r0, lsl #26
    8aac:	007db900 	rsbseq	fp, sp, r0, lsl #18
    8ab0:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    8ab4:	62010000 	andvs	r0, r1, #0
    8ab8:	07751113 			; <UNDEFINED> instruction: 0x07751113
    8abc:	7ddd0000 	ldclvc	0, cr0, [sp]
    8ac0:	7ddb0000 	ldclvc	0, cr0, [fp]
    8ac4:	d1180000 	tstle	r8, r0
    8ac8:	0100001c 	tsteq	r0, ip, lsl r0
    8acc:	ed1c1363 	ldc	3, cr1, [ip, #-396]	; 0xfffffe74
    8ad0:	f2000004 	vhadd.s8	d0, d0, d4
    8ad4:	f000007d 			; <UNDEFINED> instruction: 0xf000007d
    8ad8:	1d00007d 	stcne	0, cr0, [r0, #-500]	; 0xfffffe0c
    8adc:	00000000 	andeq	r0, r0, r0
    8ae0:	00003cd7 	ldrdeq	r3, [r0], -r7
    8ae4:	0000001d 	andeq	r0, r0, sp, lsl r0
    8ae8:	003ce500 	eorseq	lr, ip, r0, lsl #10
    8aec:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8af0:	0000198d 	andeq	r1, r0, sp, lsl #19
    8af4:	0a133e01 	beq	4d8300 <__RAM_SIZE+0x3d8300>
    8af8:	00000001 	andeq	r0, r0, r1
    8afc:	00000000 	andeq	r0, r0, r0
    8b00:	007e0500 	rsbseq	r0, lr, r0, lsl #10
    8b04:	22380100 	eorscs	r0, r8, #0, 2
    8b08:	991b0000 	ldmdbls	fp, {}	; <UNPREDICTABLE>
    8b0c:	0100001f 	tsteq	r0, pc, lsl r0
    8b10:	c733133e 			; <UNDEFINED> instruction: 0xc733133e
    8b14:	29000003 	stmdbcs	r0, {r0, r1}
    8b18:	2500007e 	strcs	r0, [r0, #-126]	; 0xffffff82
    8b1c:	1b00007e 	blne	8d1c <__HEAP_SIZE+0x7d1c>
    8b20:	00001db2 			; <UNDEFINED> instruction: 0x00001db2
    8b24:	39133f01 	ldmdbcc	r3, {r0, r8, r9, sl, fp, ip, sp}
    8b28:	000004ed 	andeq	r0, r0, sp, ror #9
    8b2c:	00007e4d 	andeq	r7, r0, sp, asr #28
    8b30:	00007e47 	andeq	r7, r0, r7, asr #28
    8b34:	0025ae18 	eoreq	sl, r5, r8, lsl lr
    8b38:	13410100 	movtne	r0, #4352	; 0x1100
    8b3c:	00077511 	andeq	r7, r7, r1, lsl r5
    8b40:	007e7a00 	rsbseq	r7, lr, r0, lsl #20
    8b44:	007e7600 	rsbseq	r7, lr, r0, lsl #12
    8b48:	00001d00 	andeq	r1, r0, r0, lsl #26
    8b4c:	3cd70000 	ldclcc	0, cr0, [r7], {0}
    8b50:	001d0000 	andseq	r0, sp, r0
    8b54:	e5000000 	str	r0, [r0, #-0]
    8b58:	0000003c 	andeq	r0, r0, ip, lsr r0
    8b5c:	1b820121 	blne	fe088fe8 <__StackTop+0xc5f88fe8>
    8b60:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    8b64:	19010c12 	stmdbne	r1, {r1, r4, sl, fp}
    8b68:	0c000001 	stceq	0, cr0, [r0], {1}
    8b6c:	6c10002a 	ldcvs	0, cr0, [r0], {42}	; 0x2a
    8b70:	9810002b 	ldmdals	r0, {r0, r1, r3, r5}
    8b74:	0100007e 	tsteq	r0, lr, ror r0
    8b78:	0000233c 	andeq	r2, r0, ip, lsr r3
    8b7c:	0025ad18 	eoreq	sl, r5, r8, lsl sp
    8b80:	12400100 	subne	r0, r0, #0, 2
    8b84:	0007750d 	andeq	r7, r7, sp, lsl #10
    8b88:	007ed600 	rsbseq	sp, lr, r0, lsl #12
    8b8c:	007ed000 	rsbseq	sp, lr, r0
    8b90:	0b751800 	bleq	1d4eb98 <__RAM_SIZE+0x1c4eb98>
    8b94:	41010000 	mrsmi	r0, (UNDEF: 1)
    8b98:	014a1012 	cmpeq	sl, r2, lsl r0
    8b9c:	7f050000 	svcvc	0x00050000
    8ba0:	7eff0000 	cdpvc	0, 15, cr0, cr15, cr0, {0}
    8ba4:	bd180000 	ldclt	0, cr0, [r8, #-0]
    8ba8:	01000021 	tsteq	r0, r1, lsr #32
    8bac:	19101242 	ldmdbne	r0, {r1, r6, r9, ip}
    8bb0:	3d000001 	stccc	0, cr0, [r0, #-4]
    8bb4:	2f00007f 	svccs	0x0000007f
    8bb8:	2a00007f 	bcs	8dbc <__HEAP_SIZE+0x7dbc>
    8bbc:	00000598 	muleq	r0, r8, r5
    8bc0:	001c2f18 	andseq	r2, ip, r8, lsl pc
    8bc4:	12570100 	subsne	r0, r7, #0, 2
    8bc8:	00015b1a 	andeq	r5, r1, sl, lsl fp
    8bcc:	007f9a00 	rsbseq	r9, pc, r0, lsl #20
    8bd0:	007f9600 	rsbseq	r9, pc, r0, lsl #12
    8bd4:	2a4c1c00 	bcs	130fbdc <__RAM_SIZE+0x120fbdc>
    8bd8:	2a641000 	bcs	190cbe0 <__RAM_SIZE+0x180cbe0>
    8bdc:	22dd1000 	sbcscs	r1, sp, #0
    8be0:	4d180000 	ldcmi	0, cr0, [r8, #-0]
    8be4:	0100001b 	tsteq	r0, fp, lsl r0
    8be8:	e10d125f 	tst	sp, pc, asr r2
    8bec:	ba000007 	blt	8c10 <__HEAP_SIZE+0x7c10>
    8bf0:	b800007f 	stmdalt	r0, {r0, r1, r2, r3, r4, r5, r6}
    8bf4:	1d00007f 	stcne	0, cr0, [r0, #-508]	; 0xfffffe04
    8bf8:	10002a64 	andne	r2, r0, r4, ror #20
    8bfc:	000015a5 	andeq	r1, r0, r5, lsr #11
    8c00:	05c82300 	strbeq	r2, [r8, #768]	; 0x300
    8c04:	22fc0000 	rscscs	r0, ip, #0
    8c08:	4d180000 	ldcmi	0, cr0, [r8, #-0]
    8c0c:	0100000c 	tsteq	r0, ip
    8c10:	ec151294 	lfm	f1, 4, [r5], {148}	; 0x94
    8c14:	d1000007 	tstle	r0, r7
    8c18:	cd00007f 	stcgt	0, cr0, [r0, #-508]	; 0xfffffe04
    8c1c:	0000007f 	andeq	r0, r0, pc, ror r0
    8c20:	0005e023 	andeq	lr, r5, r3, lsr #32
    8c24:	00231b00 	eoreq	r1, r3, r0, lsl #22
    8c28:	0c4d1800 	mcrreq	8, 0, r1, sp, cr0
    8c2c:	9a010000 	bls	48c34 <__HEAP_SIZE+0x47c34>
    8c30:	07ec1912 			; <UNDEFINED> instruction: 0x07ec1912
    8c34:	7ff30000 	svcvc	0x00f30000
    8c38:	7fef0000 	svcvc	0x00ef0000
    8c3c:	2d000000 	stccs	0, cr0, [r0, #-0]
    8c40:	10002a98 	mulne	r0, r8, sl
    8c44:	10002acc 	andne	r2, r0, ip, asr #21
    8c48:	000c1918 	andeq	r1, ip, r8, lsl r9
    8c4c:	12a30100 	adcne	r0, r3, #0, 2
    8c50:	0003b115 	andeq	fp, r3, r5, lsl r1
    8c54:	00801300 	addeq	r1, r0, r0, lsl #6
    8c58:	00801100 	addeq	r1, r0, r0, lsl #2
    8c5c:	00000000 	andeq	r0, r0, r0
    8c60:	22540121 	subscs	r0, r4, #1073741832	; 0x40000008
    8c64:	e0010000 	and	r0, r1, r0
    8c68:	19011011 	stmdbne	r1, {r0, r4, ip}
    8c6c:	00000001 	andeq	r0, r0, r1
    8c70:	00000000 	andeq	r0, r0, r0
    8c74:	26000000 	strcs	r0, [r0], -r0
    8c78:	01000080 	smlabbeq	r0, r0, r0, r0
    8c7c:	0000241f 	andeq	r2, r0, pc, lsl r4
    8c80:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    8c84:	11e00100 	mvnne	r0, r0, lsl #2
    8c88:	0003c72e 	andeq	ip, r3, lr, lsr #14
    8c8c:	00805400 	addeq	r5, r0, r0, lsl #8
    8c90:	00804600 	addeq	r4, r0, r0, lsl #12
    8c94:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    8c98:	e2010000 	and	r0, r1, #0
    8c9c:	07751111 			; <UNDEFINED> instruction: 0x07751111
    8ca0:	80be0000 	adcshi	r0, lr, r0
    8ca4:	80b00000 	adcshi	r0, r0, r0
    8ca8:	d1180000 	tstle	r8, r0
    8cac:	0100001c 	tsteq	r0, ip, lsl r0
    8cb0:	191411e3 	ldmdbne	r4, {r0, r1, r5, r6, r7, r8, ip}
    8cb4:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
    8cb8:	1a000081 	bne	8ec4 <__HEAP_SIZE+0x7ec4>
    8cbc:	1c000081 	stcne	0, cr0, [r0], {129}	; 0x81
	...
    8cc8:	000023be 			; <UNDEFINED> instruction: 0x000023be
    8ccc:	000c1918 	andeq	r1, ip, r8, lsl r9
    8cd0:	120d0100 	andne	r0, sp, #0, 2
    8cd4:	0003b111 	andeq	fp, r3, r1, lsl r1
    8cd8:	00813f00 	addeq	r3, r1, r0, lsl #30
    8cdc:	00813d00 	addeq	r3, r1, r0, lsl #26
    8ce0:	001d0000 	andseq	r0, sp, r0
    8ce4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    8ce8:	1e00002b 	cdpne	0, 0, cr0, cr0, cr11, {1}
    8cec:	00000000 	andeq	r0, r0, r0
    8cf0:	000032fb 	strdeq	r3, [r0], -fp
    8cf4:	000023db 	ldrdeq	r2, [r0], -fp
    8cf8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8cfc:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    8d00:	00000000 	andeq	r0, r0, r0
    8d04:	000029bf 			; <UNDEFINED> instruction: 0x000029bf
    8d08:	0000001e 	andeq	r0, r0, lr, lsl r0
    8d0c:	003cb900 	eorseq	fp, ip, r0, lsl #18
    8d10:	0023f800 	eoreq	pc, r3, r0, lsl #16
    8d14:	50011f00 	andpl	r1, r1, r0, lsl #30
    8d18:	00007502 	andeq	r7, r0, r2, lsl #10
    8d1c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8d20:	003cd700 	eorseq	sp, ip, r0, lsl #14
    8d24:	00001e00 	andeq	r1, r0, r0, lsl #28
    8d28:	3cb90000 	ldccc	0, cr0, [r9]
    8d2c:	24150000 	ldrcs	r0, [r5], #-0
    8d30:	011f0000 	tsteq	pc, r0
    8d34:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    8d38:	00001d00 	andeq	r1, r0, r0, lsl #26
    8d3c:	3ce50000 	stclcc	0, cr0, [r5]
    8d40:	21000000 	mrscs	r0, (UNDEF: 0)
    8d44:	00194901 	andseq	r4, r9, r1, lsl #18
    8d48:	11c20100 	bicne	r0, r2, r0, lsl #2
    8d4c:	0119010c 	tsteq	r9, ip, lsl #2
	...
    8d58:	81520000 	cmphi	r2, r0
    8d5c:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    8d60:	1b000024 	blne	8df8 <__HEAP_SIZE+0x7df8>
    8d64:	000024a3 	andeq	r2, r0, r3, lsr #9
    8d68:	2a11c201 	bcs	479574 <__RAM_SIZE+0x379574>
    8d6c:	0000014a 	andeq	r0, r0, sl, asr #2
    8d70:	00008178 	andeq	r8, r0, r8, ror r1
    8d74:	00008172 	andeq	r8, r0, r2, ror r1
    8d78:	001e1b18 	andseq	r1, lr, r8, lsl fp
    8d7c:	11c40100 	bicne	r0, r4, r0, lsl #2
    8d80:	00011910 	andeq	r1, r1, r0, lsl r9
    8d84:	0081a600 	addeq	sl, r1, r0, lsl #12
    8d88:	0081a400 	addeq	sl, r1, r0, lsl #8
    8d8c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8d90:	2b180000 	blcs	608d98 <__RAM_SIZE+0x508d98>
    8d94:	001d0000 	andseq	r0, sp, r0
    8d98:	d7000000 	strle	r0, [r0, -r0]
    8d9c:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    8da0:	00000000 	andeq	r0, r0, r0
    8da4:	00003ce5 	andeq	r3, r0, r5, ror #25
    8da8:	0000001d 	andeq	r0, r0, sp, lsl r0
    8dac:	0029bf00 	eoreq	fp, r9, r0, lsl #30
    8db0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8db4:	00001b95 	muleq	r0, r5, fp
    8db8:	0a119801 	beq	46edc4 <__RAM_SIZE+0x36edc4>
    8dbc:	0029d001 	eoreq	sp, r9, r1
    8dc0:	002a0c10 	eoreq	r0, sl, r0, lsl ip
    8dc4:	0081b910 	addeq	fp, r1, r0, lsl r9
    8dc8:	24e70100 	strbtcs	r0, [r7], #256	; 0x100
    8dcc:	611b0000 	tstvs	fp, r0
    8dd0:	0100001f 	tsteq	r0, pc, lsl r0
    8dd4:	4a241198 	bmi	90d43c <__RAM_SIZE+0x80d43c>
    8dd8:	e1000001 	tst	r0, r1
    8ddc:	d9000081 	stmdble	r0, {r0, r7}
    8de0:	18000081 	stmdane	r0, {r0, r7}
    8de4:	00001937 	andeq	r1, r0, r7, lsr r9
    8de8:	14119a01 	ldrne	r9, [r1], #-2561	; 0xfffff5ff
    8dec:	0000014a 	andeq	r0, r0, sl, asr #2
    8df0:	00008219 	andeq	r8, r0, r9, lsl r2
    8df4:	00008215 	andeq	r8, r0, r5, lsl r2
    8df8:	0029f01d 	eoreq	pc, r9, sp, lsl r0	; <UNPREDICTABLE>
    8dfc:	003cd710 	eorseq	sp, ip, r0, lsl r7
    8e00:	29fc1d00 	ldmibcs	ip!, {r8, sl, fp, ip}^
    8e04:	3ce51000 	stclcc	0, cr1, [r5]
    8e08:	24000000 	strcs	r0, [r0], #-0
    8e0c:	00171601 	andseq	r1, r7, r1, lsl #12
    8e10:	117f0100 	cmnne	pc, r0, lsl #2
    8e14:	03c70112 	biceq	r0, r7, #-2147483644	; 0x80000004
	...
    8e20:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8e24:	251c0100 	ldrcs	r0, [ip, #-256]	; 0xffffff00
    8e28:	901b0000 	andsls	r0, fp, r0
    8e2c:	01000016 	tsteq	r0, r6, lsl r0
    8e30:	193c117f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r6, r8, ip}
    8e34:	3b000001 	blcc	8e40 <__HEAP_SIZE+0x7e40>
    8e38:	37000082 	strcc	r0, [r0, -r2, lsl #1]
    8e3c:	00000082 	andeq	r0, r0, r2, lsl #1
    8e40:	255d012e 	ldrbcs	r0, [sp, #-302]	; 0xfffffed2
    8e44:	71010000 	mrsvc	r0, (UNDEF: 1)
    8e48:	c7011611 	smladgt	r1, r1, r6, r1
    8e4c:	00000003 	andeq	r0, r0, r3
    8e50:	00000000 	andeq	r0, r0, r0
    8e54:	02000000 	andeq	r0, r0, #0
    8e58:	2101007d 	tstcs	r1, sp, ror r0
    8e5c:	001f8301 	andseq	r8, pc, r1, lsl #6
    8e60:	11210100 			; <UNDEFINED> instruction: 0x11210100
    8e64:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    8e70:	825c0000 	subshi	r0, ip, #0
    8e74:	93010000 	movwls	r0, #4096	; 0x1000
    8e78:	1b000026 	blne	8f18 <__HEAP_SIZE+0x7f18>
    8e7c:	00002181 	andeq	r2, r0, r1, lsl #3
    8e80:	3c112101 	ldfccs	f2, [r1], {1}
    8e84:	000017b9 			; <UNDEFINED> instruction: 0x000017b9
    8e88:	00008282 	andeq	r8, r0, r2, lsl #5
    8e8c:	0000827c 	andeq	r8, r0, ip, ror r2
    8e90:	0023221b 	eoreq	r2, r3, fp, lsl r2
    8e94:	11220100 			; <UNDEFINED> instruction: 0x11220100
    8e98:	00014539 	andeq	r4, r1, r9, lsr r5
    8e9c:	0082b800 	addeq	fp, r2, r0, lsl #16
    8ea0:	0082ae00 	addeq	sl, r2, r0, lsl #28
    8ea4:	184b1b00 	stmdane	fp, {r8, r9, fp, ip}^
    8ea8:	23010000 	movwcs	r0, #4096	; 0x1000
    8eac:	0f2a4b11 	svceq	0x002a4b11
    8eb0:	83030000 	movwhi	r0, #12288	; 0x3000
    8eb4:	82fd0000 	rscshi	r0, sp, #0
    8eb8:	98180000 	ldmdals	r8, {}	; <UNPREDICTABLE>
    8ebc:	0100001f 	tsteq	r0, pc, lsl r0
    8ec0:	2f151125 	svccs	0x00151125
    8ec4:	3b000001 	blcc	8ed0 <__HEAP_SIZE+0x7ed0>
    8ec8:	2f000083 	svccs	0x00000083
    8ecc:	18000083 	stmdane	r0, {r0, r1, r7}
    8ed0:	00001dfb 	strdeq	r1, [r0], -fp
    8ed4:	21112501 	tstcs	r1, r1, lsl #10
    8ed8:	0000012f 	andeq	r0, r0, pc, lsr #2
    8edc:	0000838d 	andeq	r8, r0, sp, lsl #7
    8ee0:	00008387 	andeq	r8, r0, r7, lsl #7
    8ee4:	0000001d 	andeq	r0, r0, sp, lsl r0
    8ee8:	002b1800 	eoreq	r1, fp, r0, lsl #16
    8eec:	00001e00 	andeq	r1, r0, r0, lsl #28
    8ef0:	16df0000 	ldrbne	r0, [pc], r0
    8ef4:	25fb0000 	ldrbcs	r0, [fp, #0]!
    8ef8:	011f0000 	tsteq	pc, r0
    8efc:	00750850 	rsbseq	r0, r5, r0, asr r8
    8f00:	761e2c08 	ldrvc	r2, [lr], -r8, lsl #24
    8f04:	011f2200 	tsteq	pc, r0, lsl #4
    8f08:	00740f51 	rsbseq	r0, r4, r1, asr pc
    8f0c:	00742433 	rsbseq	r2, r4, r3, lsr r4
    8f10:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
    8f14:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    8f18:	52011f22 	andpl	r1, r1, #34, 30	; 0x88
    8f1c:	1e003101 	adfnes	f3, f0, f1
    8f20:	00000000 	andeq	r0, r0, r0
    8f24:	000016df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    8f28:	0000261a 	andeq	r2, r0, sl, lsl r6
    8f2c:	0850011f 	ldmdaeq	r0, {r0, r1, r2, r3, r4, r8}^
    8f30:	00750078 	rsbseq	r0, r5, r8, ror r0
    8f34:	2200761e 	andcs	r7, r0, #31457280	; 0x1e00000
    8f38:	0152011f 	cmpeq	r2, pc, lsl r1
    8f3c:	001e0032 	andseq	r0, lr, r2, lsr r0
    8f40:	df000000 	svcle	0x00000000
    8f44:	39000016 	stmdbcc	r0, {r1, r2, r4}
    8f48:	1f000026 	svcne	0x00000026
    8f4c:	78085001 	stmdavc	r8, {r0, ip, lr}
    8f50:	1e007400 	cfcpysne	mvf7, mvf0
    8f54:	1f220076 	svcne	0x00220076
    8f58:	32015201 	andcc	r5, r1, #268435456	; 0x10000000
    8f5c:	00001e00 	andeq	r1, r0, r0, lsl #28
    8f60:	16df0000 	ldrbne	r0, [pc], r0
    8f64:	26610000 	strbtcs	r0, [r1], -r0
    8f68:	011f0000 	tsteq	pc, r0
    8f6c:	00780850 	rsbseq	r0, r8, r0, asr r8
    8f70:	761e0074 			; <UNDEFINED> instruction: 0x761e0074
    8f74:	011f2200 	tsteq	pc, r0, lsl #4
    8f78:	5c030551 	cfstr32pl	mvfx0, [r3], {81}	; 0x51
    8f7c:	1f38008b 	svcne	0x0038008b
    8f80:	34015201 	strcc	r5, [r1], #-513	; 0xfffffdff
    8f84:	00001e00 	andeq	r1, r0, r0, lsl #28
    8f88:	16df0000 	ldrbne	r0, [pc], r0
    8f8c:	26890000 	strcs	r0, [r9], r0
    8f90:	011f0000 	tsteq	pc, r0
    8f94:	00780850 	rsbseq	r0, r8, r0, asr r8
    8f98:	761e0074 			; <UNDEFINED> instruction: 0x761e0074
    8f9c:	011f2200 	tsteq	pc, r0, lsl #4
    8fa0:	40030551 	andmi	r0, r3, r1, asr r5
    8fa4:	1f38008b 	svcne	0x0038008b
    8fa8:	33015201 	movwcc	r5, #4609	; 0x1201
    8fac:	00001d00 	andeq	r1, r0, r0, lsl #26
    8fb0:	29bf0000 	ldmibcs	pc!, {}	; <UNPREDICTABLE>
    8fb4:	24000000 	strcs	r0, [r0], #-0
    8fb8:	0020e001 	eoreq	lr, r0, r1
    8fbc:	10eb0100 	rscne	r0, fp, r0, lsl #2
    8fc0:	01190110 	tsteq	r9, r0, lsl r1
	...
    8fcc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8fd0:	27100100 	ldrcs	r0, [r0, -r0, lsl #2]
    8fd4:	991b0000 	ldmdbls	fp, {}	; <UNPREDICTABLE>
    8fd8:	0100001f 	tsteq	r0, pc, lsl r0
    8fdc:	c73410eb 	ldrgt	r1, [r4, -fp, ror #1]!
    8fe0:	bc000003 	stclt	0, cr0, [r0], {3}
    8fe4:	b8000083 	stmdalt	r0, {r0, r1, r7}
    8fe8:	19000083 	stmdbne	r0, {r0, r1, r7}
    8fec:	00001de2 	andeq	r1, r0, r2, ror #27
    8ff0:	3610ec01 	ldrcc	lr, [r0], -r1, lsl #24
    8ff4:	00000a0a 	andeq	r0, r0, sl, lsl #20
    8ff8:	e7195101 	ldr	r5, [r9, -r1, lsl #2]
    8ffc:	0100001f 	tsteq	r0, pc, lsl r0
    9000:	f93710ed 			; <UNDEFINED> instruction: 0xf93710ed
    9004:	01000009 	tsteq	r0, r9
    9008:	1cd11852 	ldclne	8, cr1, [r1], {82}	; 0x52
    900c:	ef010000 	svc	0x00010000
    9010:	01191410 	tsteq	r9, r0, lsl r4
    9014:	83e00000 	mvnhi	r0, #0
    9018:	83da0000 	bicshi	r0, sl, #0
    901c:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9020:	01000025 	tsteq	r0, r5, lsr #32
    9024:	751110f0 	ldrvc	r1, [r1, #-240]	; 0xffffff10
    9028:	10000007 	andne	r0, r0, r7
    902c:	0c000084 	stceq	0, cr0, [r0], {132}	; 0x84
    9030:	00000084 	andeq	r0, r0, r4, lsl #1
    9034:	1bbe0121 	blne	fef894c0 <__StackTop+0xc6e894c0>
    9038:	a7010000 	strge	r0, [r1, -r0]
    903c:	c7011210 	smladgt	r1, r0, r2, r1
    9040:	00000003 	andeq	r0, r0, r3
    9044:	00000000 	andeq	r0, r0, r0
    9048:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    904c:	01000084 	smlabbeq	r0, r4, r0, r0
    9050:	00002807 	andeq	r2, r0, r7, lsl #16
    9054:	0023441b 	eoreq	r4, r3, fp, lsl r4
    9058:	10a70100 	adcne	r0, r7, r0, lsl #2
    905c:	0000b82f 	andeq	fp, r0, pc, lsr #16
    9060:	00845200 	addeq	r5, r4, r0, lsl #4
    9064:	00844e00 	addeq	r4, r4, r0, lsl #28
    9068:	1dfb1800 	ldclne	8, cr1, [fp]
    906c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    9070:	012f1510 			; <UNDEFINED> instruction: 0x012f1510
    9074:	84740000 	ldrbthi	r0, [r4], #-0
    9078:	84700000 	ldrbthi	r0, [r0], #-0
    907c:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9080:	01000025 	tsteq	r0, r5, lsr #32
    9084:	751110aa 	ldrvc	r1, [r1, #-170]	; 0xffffff56
    9088:	a9000007 	stmdbge	r0, {r0, r1, r2}
    908c:	93000084 	movwls	r0, #132	; 0x84
    9090:	1d000084 	stcne	0, cr0, [r0, #-528]	; 0xfffffdf0
    9094:	00000000 	andeq	r0, r0, r0
    9098:	00002b18 	andeq	r2, r0, r8, lsl fp
    909c:	0000001e 	andeq	r0, r0, lr, lsl r0
    90a0:	00280700 	eoreq	r0, r8, r0, lsl #14
    90a4:	00279f00 	eoreq	r9, r7, r0, lsl #30
    90a8:	50011f00 	andpl	r1, r1, r0, lsl #30
    90ac:	3300740f 	movwcc	r7, #1039	; 0x40f
    90b0:	1c007424 	cfstrsne	mvf7, [r0], {36}	; 0x24
    90b4:	c4032432 	strgt	r2, [r3], #-1074	; 0xfffffbce
    90b8:	22380085 	eorscs	r0, r8, #133	; 0x85
    90bc:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    90c0:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    90c4:	00000000 	andeq	r0, r0, r0
    90c8:	000029bf 			; <UNDEFINED> instruction: 0x000029bf
    90cc:	0000001e 	andeq	r0, r0, lr, lsl r0
    90d0:	00280700 	eoreq	r0, r8, r0, lsl #14
    90d4:	0027bc00 	eoreq	fp, r7, r0, lsl #24
    90d8:	51011f00 	tstpl	r1, r0, lsl #30
    90dc:	00007602 	andeq	r7, r0, r2, lsl #12
    90e0:	0000001e 	andeq	r0, r0, lr, lsl r0
    90e4:	00280700 	eoreq	r0, r8, r0, lsl #14
    90e8:	0027d000 	eoreq	sp, r7, r0
    90ec:	51011f00 	tstpl	r1, r0, lsl #30
    90f0:	00007602 	andeq	r7, r0, r2, lsl #12
    90f4:	0000001e 	andeq	r0, r0, lr, lsl r0
    90f8:	00280700 	eoreq	r0, r8, r0, lsl #14
    90fc:	0027ed00 	eoreq	lr, r7, r0, lsl #26
    9100:	50011f00 	andpl	r1, r1, r0, lsl #30
    9104:	8b400305 	blhi	1009d20 <__RAM_SIZE+0xf09d20>
    9108:	011f3800 	tsteq	pc, r0, lsl #16
    910c:	00760251 	rsbseq	r0, r6, r1, asr r2
    9110:	00002000 	andeq	r2, r0, r0
    9114:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    9118:	011f0000 	tsteq	pc, r0
    911c:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    9120:	1f38008b 	svcne	0x0038008b
    9124:	76025101 	strvc	r5, [r2], -r1, lsl #2
    9128:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    912c:	00001d60 	andeq	r1, r0, r0, ror #26
    9130:	14105e01 	ldrne	r5, [r0], #-3585	; 0xfffff1ff
    9134:	00077501 	andeq	r7, r7, r1, lsl #10
	...
    9140:	00852a00 	addeq	r2, r5, r0, lsl #20
    9144:	28e20100 	stmiacs	r2!, {r8}^
    9148:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    914c:	0100000c 	tsteq	r0, ip
    9150:	e13f105e 	teq	pc, lr, asr r0	; <UNPREDICTABLE>
    9154:	52000007 	andpl	r0, r0, #7
    9158:	4a000085 	bmi	9374 <__HEAP_SIZE+0x8374>
    915c:	1b000085 	blne	9378 <__HEAP_SIZE+0x8378>
    9160:	00002344 	andeq	r2, r0, r4, asr #6
    9164:	41105f01 	tstmi	r0, r1, lsl #30
    9168:	000000b8 	strheq	r0, [r0], -r8
    916c:	00008592 	muleq	r0, r2, r5
    9170:	0000858a 	andeq	r8, r0, sl, lsl #11
    9174:	001cd018 	andseq	sp, ip, r8, lsl r0
    9178:	10610100 	rsbne	r0, r1, r0, lsl #2
    917c:	00077511 	andeq	r7, r7, r1, lsl r5
    9180:	0085cf00 	addeq	ip, r5, r0, lsl #30
    9184:	0085c900 	addeq	ip, r5, r0, lsl #18
    9188:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    918c:	62010000 	andvs	r0, r1, #0
    9190:	07751110 			; <UNDEFINED> instruction: 0x07751110
    9194:	86020000 	strhi	r0, [r2], -r0
    9198:	85fa0000 	ldrbhi	r0, [sl, #0]!
    919c:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
    91a0:	10630100 	rsbne	r0, r3, r0, lsl #2
    91a4:	00012f15 	andeq	r2, r1, r5, lsl pc
    91a8:	00863e00 	addeq	r3, r6, r0, lsl #28
    91ac:	00863800 	addeq	r3, r6, r0, lsl #16
    91b0:	212d1800 			; <UNDEFINED> instruction: 0x212d1800
    91b4:	64010000 	strvs	r0, [r1], #-0
    91b8:	00ac0e10 	adceq	r0, ip, r0, lsl lr
    91bc:	866c0000 	strbthi	r0, [ip], -r0
    91c0:	86680000 	strbthi	r0, [r8], -r0
    91c4:	d5180000 	ldrle	r0, [r8, #-0]
    91c8:	01000020 	tsteq	r0, r0, lsr #32
    91cc:	19141065 	ldmdbne	r4, {r0, r2, r5, r6, ip}
    91d0:	8e000001 	cdphi	0, 0, cr0, cr0, cr1, {0}
    91d4:	8a000086 	bhi	93f4 <__HEAP_SIZE+0x83f4>
    91d8:	18000086 	stmdane	r0, {r1, r2, r7}
    91dc:	00001ff5 	strdeq	r1, [r0], -r5
    91e0:	1c106601 	ldcne	6, cr6, [r0], {1}
    91e4:	000017be 			; <UNDEFINED> instruction: 0x000017be
    91e8:	000086b2 			; <UNDEFINED> instruction: 0x000086b2
    91ec:	000086ae 	andeq	r8, r0, lr, lsr #13
    91f0:	000c0e18 	andeq	r0, ip, r8, lsl lr
    91f4:	10670100 	rsbne	r0, r7, r0, lsl #2
    91f8:	0003ab16 	andeq	sl, r3, r6, lsl fp
    91fc:	0086d400 	addeq	sp, r6, r0, lsl #8
    9200:	0086d200 	addeq	sp, r6, r0, lsl #4
    9204:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9208:	0000230d 	andeq	r2, r0, sp, lsl #6
    920c:	08104c01 	ldmdaeq	r0, {r0, sl, fp, lr}
    9210:	0000a601 	andeq	sl, r0, r1, lsl #12
	...
    921c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9220:	00292c01 	eoreq	r2, r9, r1, lsl #24
    9224:	20371b00 	eorscs	r1, r7, r0, lsl #22
    9228:	4c010000 	stcmi	0, cr0, [r1], {-0}
    922c:	03c72410 	biceq	r2, r7, #16, 8	; 0x10000000
    9230:	86eb0000 	strbthi	r0, [fp], r0
    9234:	86e70000 	strbthi	r0, [r7], r0
    9238:	ad180000 	ldcge	0, cr0, [r8, #-0]
    923c:	01000025 	tsteq	r0, r5, lsr #32
    9240:	750d104e 	strvc	r1, [sp, #-78]	; 0xffffffb2
    9244:	0b000007 	bleq	9268 <__HEAP_SIZE+0x8268>
    9248:	09000087 	stmdbeq	r0, {r0, r1, r2, r7}
    924c:	00000087 	andeq	r0, r0, r7, lsl #1
    9250:	0f58012e 	svceq	0x0058012e
    9254:	40010000 	andmi	r0, r1, r0
    9258:	2f010d10 	svccs	0x00010d10
    925c:	c4000001 	strgt	r0, [r0], #-1
    9260:	d0100029 	andsle	r0, r0, r9, lsr #32
    9264:	02100029 	andseq	r0, r0, #41	; 0x29
    9268:	2401007d 	strcs	r0, [r1], #-125	; 0xffffff83
    926c:	001aa201 	andseq	sl, sl, r1, lsl #4
    9270:	101d0100 	andsne	r0, sp, r0, lsl #2
    9274:	014a010c 	cmpeq	sl, ip, lsl #2
	...
    9280:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9284:	298a0100 	stmibcs	sl, {r8}
    9288:	d1180000 	tstle	r8, r0
    928c:	0100001c 	tsteq	r0, ip, lsl r0
    9290:	4a10101f 	bmi	40d314 <__RAM_SIZE+0x30d314>
    9294:	20000001 	andcs	r0, r0, r1
    9298:	1e000087 	cdpne	0, 0, cr0, cr0, cr7, {4}
    929c:	25000087 	strcs	r0, [r0, #-135]	; 0xffffff79
    92a0:	00000e79 	andeq	r0, r0, r9, ror lr
    92a4:	11102001 	tstne	r0, r1
    92a8:	0000012f 	andeq	r0, r0, pc, lsr #2
    92ac:	01240000 			; <UNDEFINED> instruction: 0x01240000
    92b0:	00001f4f 	andeq	r1, r0, pc, asr #30
    92b4:	0c100a01 			; <UNDEFINED> instruction: 0x0c100a01
    92b8:	00014a01 	andeq	r4, r1, r1, lsl #20
    92bc:	0029b800 	eoreq	fp, r9, r0, lsl #16
    92c0:	0029c410 	eoreq	ip, r9, r0, lsl r4
    92c4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    92c8:	0029bf01 	eoreq	fp, r9, r1, lsl #30
    92cc:	231b1800 	tstcs	fp, #0, 16
    92d0:	0c010000 	stceq	0, cr0, [r1], {-0}
    92d4:	014a1010 	cmpeq	sl, r0, lsl r0
    92d8:	87350000 	ldrhi	r0, [r5, -r0]!
    92dc:	87330000 	ldrhi	r0, [r3, -r0]!
    92e0:	21000000 	mrscs	r0, (UNDEF: 0)
    92e4:	00140c01 	andseq	r0, r4, r1, lsl #24
    92e8:	0f740100 	svceq	0x00740100
    92ec:	0119010c 	tsteq	r9, ip, lsl #2
    92f0:	2b6c0000 	blcs	1b092f8 <__RAM_SIZE+0x1a092f8>
    92f4:	2c9c1000 	ldccs	0, cr1, [ip], {0}
    92f8:	87481000 	strbhi	r1, [r8, -r0]
    92fc:	cf010000 	svcgt	0x00010000
    9300:	1800002a 	stmdane	r0, {r1, r3, r5}
    9304:	000025ad 	andeq	r2, r0, sp, lsr #11
    9308:	0d0f7601 	stceq	6, cr7, [pc, #-4]	; 930c <__HEAP_SIZE+0x830c>
    930c:	00000775 	andeq	r0, r0, r5, ror r7
    9310:	00008774 	andeq	r8, r0, r4, ror r7
    9314:	00008768 	andeq	r8, r0, r8, ror #14
    9318:	00243118 	eoreq	r3, r4, r8, lsl r1
    931c:	0f770100 	svceq	0x00770100
    9320:	00011910 	andeq	r1, r1, r0, lsl r9
    9324:	0087cb00 	addeq	ip, r7, r0, lsl #22
    9328:	0087c100 	addeq	ip, r7, r0, lsl #2
    932c:	05f82300 	ldrbeq	r2, [r8, #768]!	; 0x300
    9330:	2abc0000 	bcs	fef09338 <__StackTop+0xc6e09338>
    9334:	90250000 	eorls	r0, r5, r0
    9338:	01000016 	tsteq	r0, r6, lsl r0
    933c:	19180f86 	ldmdbne	r8, {r1, r2, r7, r8, r9, sl, fp}
    9340:	00000001 	andeq	r0, r0, r1
    9344:	00062023 	andeq	r2, r6, r3, lsr #32
    9348:	002a3f00 	eoreq	r3, sl, r0, lsl #30
    934c:	0c4d1800 	mcrreq	8, 0, r1, sp, cr0
    9350:	9c010000 	stcls	0, cr0, [r1], {-0}
    9354:	07ec190f 	strbeq	r1, [ip, pc, lsl #18]!
    9358:	88110000 	ldmdahi	r1, {}	; <UNPREDICTABLE>
    935c:	880d0000 	stmdahi	sp, {}	; <UNPREDICTABLE>
    9360:	23000000 	movwcs	r0, #0
    9364:	00000638 	andeq	r0, r0, r8, lsr r6
    9368:	00002a5e 	andeq	r2, r0, lr, asr sl
    936c:	000c4d18 	andeq	r4, ip, r8, lsl sp
    9370:	0f9e0100 	svceq	0x009e0100
    9374:	0007ec19 	andeq	lr, r7, r9, lsl ip
    9378:	00883300 	addeq	r3, r8, r0, lsl #6
    937c:	00882f00 	addeq	r2, r8, r0, lsl #30
    9380:	f21c0000 	vhadd.s16	d0, d12, d0
    9384:	2210002b 	andscs	r0, r0, #43	; 0x2b
    9388:	8110002c 	tsthi	r0, ip, lsr #32
    938c:	1800002a 	stmdane	r0, {r1, r3, r5}
    9390:	00000c19 	andeq	r0, r0, r9, lsl ip
    9394:	190f9f01 	stmdbne	pc, {r0, r8, r9, sl, fp, ip, pc}	; <UNPREDICTABLE>
    9398:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    939c:	00008853 	andeq	r8, r0, r3, asr r8
    93a0:	00008851 	andeq	r8, r0, r1, asr r8
    93a4:	06502300 	ldrbeq	r2, [r0], -r0, lsl #6
    93a8:	2aa90000 	bcs	fea493b0 <__StackTop+0xc69493b0>
    93ac:	2b180000 	blcs	6093b4 <__RAM_SIZE+0x5093b4>
    93b0:	01000018 	tsteq	r0, r8, lsl r0
    93b4:	4a240fcc 	bmi	90d2ec <__RAM_SIZE+0x80d2ec>
    93b8:	6e000001 	cdpvs	0, 0, cr0, cr0, cr1, {0}
    93bc:	66000088 	strvs	r0, [r0], -r8, lsl #1
    93c0:	1d000088 	stcne	0, cr0, [r0, #-544]	; 0xfffffde0
    93c4:	10002c5c 	andne	r2, r0, ip, asr ip
    93c8:	00002238 	andeq	r2, r0, r8, lsr r2
    93cc:	2c3c1d00 	ldccs	13, cr1, [ip], #-0
    93d0:	15a51000 	strne	r1, [r5, #0]!
    93d4:	501d0000 	andspl	r0, sp, r0
    93d8:	0f10002c 	svceq	0x0010002c
    93dc:	0000003d 	andeq	r0, r0, sp, lsr r0
    93e0:	002b721d 	eoreq	r7, fp, sp, lsl r2
    93e4:	003cd710 	eorseq	sp, ip, r0, lsl r7
    93e8:	2c761d00 	ldclcs	13, cr1, [r6], #-0
    93ec:	3ce51000 	stclcc	0, cr1, [r5]
    93f0:	27000000 	strcs	r0, [r0, -r0]
    93f4:	00001c7c 	andeq	r1, r0, ip, ror ip
    93f8:	170f3601 	strne	r3, [pc, -r1, lsl #12]
    93fc:	00014a01 	andeq	r4, r1, r1, lsl #20
    9400:	0024b400 	eoreq	fp, r4, r0, lsl #8
    9404:	0024f410 	eoreq	pc, r4, r0, lsl r4	; <UNPREDICTABLE>
    9408:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    940c:	002b1801 	eoreq	r1, fp, r1, lsl #16
    9410:	1cd11800 	ldclne	8, cr1, [r1], {0}
    9414:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    9418:	014a140f 	cmpeq	sl, pc, lsl #8
    941c:	88a80000 	stmiahi	r8!, {}	; <UNPREDICTABLE>
    9420:	88a40000 	stmiahi	r4!, {}	; <UNPREDICTABLE>
    9424:	cf180000 	svcgt	0x00180000
    9428:	01000019 	tsteq	r0, r9, lsl r0
    942c:	2f150f39 	svccs	0x00150f39
    9430:	cd000001 	stcgt	0, cr0, [r0, #-4]
    9434:	c7000088 	strgt	r0, [r0, -r8, lsl #1]
    9438:	00000088 	andeq	r0, r0, r8, lsl #1
    943c:	0f6f012b 	svceq	0x006f012b
    9440:	e3010000 	movw	r0, #4096	; 0x1000
    9444:	a801060e 	stmdage	r1, {r1, r2, r3, r9, sl}
    9448:	b8100029 	ldmdalt	r0, {r0, r3, r5}
    944c:	02100029 	andseq	r0, r0, #41	; 0x29
    9450:	2201007d 	andcs	r0, r1, #125	; 0x7d
    9454:	001c0b01 	andseq	r0, ip, r1, lsl #22
    9458:	0eb80100 	frdeqe	f0, f0, f0
    945c:	00000106 	andeq	r0, r0, r6, lsl #2
    9460:	00000000 	andeq	r0, r0, r0
    9464:	88f70000 	ldmhi	r7!, {}^	; <UNPREDICTABLE>
    9468:	a1010000 	mrsge	r0, (UNDEF: 1)
    946c:	2300002b 	movwcs	r0, #43	; 0x2b
    9470:	00000580 	andeq	r0, r0, r0, lsl #11
    9474:	00002b8e 	andeq	r2, r0, lr, lsl #23
    9478:	00169018 	andseq	r9, r6, r8, lsl r0
    947c:	0ebe0100 	frdeqe	f0, f6, f0
    9480:	00011914 	andeq	r1, r1, r4, lsl r9
    9484:	00891b00 	addeq	r1, r9, r0, lsl #22
    9488:	00891700 	addeq	r1, r9, r0, lsl #14
    948c:	00001d00 	andeq	r1, r0, r0, lsl #26
    9490:	3d490000 	stclcc	0, cr0, [r9, #-0]
    9494:	001d0000 	andseq	r0, sp, r0
    9498:	2c000000 	stccs	0, cr0, [r0], {-0}
    949c:	1d000035 	stcne	0, cr0, [r0, #-212]	; 0xffffff2c
    94a0:	00000000 	andeq	r0, r0, r0
    94a4:	000018ac 	andeq	r1, r0, ip, lsr #17
    94a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    94ac:	00352c00 	eorseq	r2, r5, r0, lsl #24
    94b0:	001d0000 	andseq	r0, sp, r0
    94b4:	f3000000 	vhadd.u8	d0, d0, d0
    94b8:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    94bc:	00000000 	andeq	r0, r0, r0
    94c0:	00003d58 	andeq	r3, r0, r8, asr sp
    94c4:	57012200 	strpl	r2, [r1, -r0, lsl #4]
    94c8:	01000000 	mrseq	r0, (UNDEF: 0)
    94cc:	01060e51 	tsteq	r6, r1, asr lr
    94d0:	10003160 	andne	r3, r0, r0, ror #2
    94d4:	100031a8 	andne	r3, r0, r8, lsr #3
    94d8:	0000893a 	andeq	r8, r0, sl, lsr r9
    94dc:	002bf701 	eoreq	pc, fp, r1, lsl #14
    94e0:	1cd11800 	ldclne	8, cr1, [r1], {0}
    94e4:	53010000 	movwpl	r0, #4096	; 0x1000
    94e8:	0119100e 	tsteq	r9, lr
    94ec:	89600000 	stmdbhi	r0!, {}^	; <UNPREDICTABLE>
    94f0:	895a0000 	ldmdbhi	sl, {}^	; <UNPREDICTABLE>
    94f4:	661d0000 	ldrvs	r0, [sp], -r0
    94f8:	f7100031 			; <UNDEFINED> instruction: 0xf7100031
    94fc:	1d00002b 	stcne	0, cr0, [r0, #-172]	; 0xffffff54
    9500:	10003178 	andne	r3, r0, r8, ror r1
    9504:	00003d66 	andeq	r3, r0, r6, ror #26
    9508:	00317e1d 	eorseq	r7, r1, sp, lsl lr
    950c:	003cf310 	eorseq	pc, ip, r0, lsl r3	; <UNPREDICTABLE>
    9510:	31961d00 	orrscc	r1, r6, r0, lsl #26
    9514:	3d751000 	ldclcc	0, cr1, [r5, #-0]
    9518:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    951c:	00001dc1 	andeq	r1, r0, r1, asr #27
    9520:	130db701 	movwne	fp, #55041	; 0xd701
    9524:	00011901 	andeq	r1, r1, r1, lsl #18
    9528:	0030f400 	eorseq	pc, r0, r0, lsl #8
    952c:	00316010 	eorseq	r6, r1, r0, lsl r0
    9530:	00898910 	addeq	r8, r9, r0, lsl r9
    9534:	2cf70100 	ldfcse	f0, [r7]
    9538:	d1180000 	tstle	r8, r0
    953c:	0100001c 	tsteq	r0, ip, lsl r0
    9540:	19100db9 	ldmdbne	r0, {r0, r3, r4, r5, r7, r8, sl, fp}
    9544:	d5000001 	strle	r0, [r0, #-1]
    9548:	cf000089 	svcgt	0x00000089
    954c:	18000089 	stmdane	r0, {r0, r3, r7}
    9550:	00001690 	muleq	r0, r0, r6
    9554:	100dba01 	andne	fp, sp, r1, lsl #20
    9558:	00000119 	andeq	r0, r0, r9, lsl r1
    955c:	00008a03 	andeq	r8, r0, r3, lsl #20
    9560:	00008a01 	andeq	r8, r0, r1, lsl #20
    9564:	0024f616 	eoreq	pc, r4, r6, lsl r6	; <UNPREDICTABLE>
    9568:	0dbb0100 	ldfeqs	f0, [fp]
    956c:	0007080a 	andeq	r0, r7, sl, lsl #16
    9570:	50910200 	addspl	r0, r1, r0, lsl #4
    9574:	00222218 	eoreq	r2, r2, r8, lsl r2
    9578:	0dbc0100 	ldfeqs	f0, [ip]
    957c:	0000ea14 	andeq	lr, r0, r4, lsl sl
    9580:	008a1800 	addeq	r1, sl, r0, lsl #16
    9584:	008a1600 	addeq	r1, sl, r0, lsl #12
    9588:	1ad01800 	bne	ff40f590 <__StackTop+0xc730f590>
    958c:	bd010000 	stclt	0, cr0, [r1, #-0]
    9590:	0119100d 	tsteq	r9, sp
    9594:	8a300000 	bhi	c0959c <__RAM_SIZE+0xb0959c>
    9598:	8a2c0000 	bhi	b095a0 <__RAM_SIZE+0xa095a0>
    959c:	c82a0000 	stmdagt	sl!, {}	; <UNPREDICTABLE>
    95a0:	16000007 	strne	r0, [r0], -r7
    95a4:	00001eb8 			; <UNDEFINED> instruction: 0x00001eb8
    95a8:	1c0e0401 	cfstrsne	mvf0, [lr], {1}
    95ac:	000009ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    95b0:	16449102 	strbne	r9, [r4], -r2, lsl #2
    95b4:	000016b8 			; <UNDEFINED> instruction: 0x000016b8
    95b8:	1b0e0501 	blne	38a9c4 <__RAM_SIZE+0x28a9c4>
    95bc:	0000060b 	andeq	r0, r0, fp, lsl #12
    95c0:	16489102 	strbne	r9, [r8], -r2, lsl #2
    95c4:	00002002 	andeq	r2, r0, r2
    95c8:	240e0601 	strcs	r0, [lr], #-1537	; 0xfffff9ff
    95cc:	00000029 	andeq	r0, r0, r9, lsr #32
    95d0:	1e4c9102 	sqtnee	f1, f2
    95d4:	1000312e 	andne	r3, r0, lr, lsr #2
    95d8:	00000a26 	andeq	r0, r0, r6, lsr #20
    95dc:	00002ccf 	andeq	r2, r0, pc, asr #25
    95e0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    95e4:	011f4491 			; <UNDEFINED> instruction: 0x011f4491
    95e8:	48910251 	ldmmi	r1, {r0, r4, r6, r9}
    95ec:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    95f0:	20004c91 	mulcs	r0, r1, ip
    95f4:	10003144 	andne	r3, r0, r4, asr #2
    95f8:	00003a63 	andeq	r3, r0, r3, ror #20
    95fc:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    9600:	002cbd03 	eoreq	fp, ip, r3, lsl #26
    9604:	51011f10 	tstpl	r1, r0, lsl pc
    9608:	1f509102 	svcne	0x00509102
    960c:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    9610:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    9614:	00750200 	rsbseq	r0, r5, r0, lsl #4
    9618:	21000000 	mrscs	r0, (UNDEF: 0)
    961c:	00226401 	eoreq	r6, r2, r1, lsl #8
    9620:	0d560100 	ldfeqe	f0, [r6, #-0]
    9624:	01190110 	tsteq	r9, r0, lsl r1
	...
    9630:	8a4f0000 	bhi	13c9638 <__RAM_SIZE+0x12c9638>
    9634:	ed010000 	stc	0, cr0, [r1, #-0]
    9638:	1b00002d 	blne	96f4 <__HEAP_SIZE+0x86f4>
    963c:	00001970 	andeq	r1, r0, r0, ror r9
    9640:	310d5601 	tstcc	sp, r1, lsl #12
    9644:	000003c7 	andeq	r0, r0, r7, asr #7
    9648:	00008a73 	andeq	r8, r0, r3, ror sl
    964c:	00008a6f 	andeq	r8, r0, pc, ror #20
    9650:	000eb218 	andeq	fp, lr, r8, lsl r2
    9654:	0d580100 	ldfeqe	f0, [r8, #-0]
    9658:	00011914 	andeq	r1, r1, r4, lsl r9
    965c:	008a9900 	addeq	r9, sl, r0, lsl #18
    9660:	008a9100 	addeq	r9, sl, r0, lsl #2
    9664:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    9668:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    966c:	0780170d 	streq	r1, [r0, sp, lsl #14]
    9670:	8ad40000 	bhi	ff509678 <__StackTop+0xc7409678>
    9674:	8ad00000 	bhi	ff40967c <__StackTop+0xc730967c>
    9678:	79180000 	ldmdbvc	r8, {}	; <UNPREDICTABLE>
    967c:	0100000e 	tsteq	r0, lr
    9680:	2f150d5a 	svccs	0x00150d5a
    9684:	f6000001 			; <UNDEFINED> instruction: 0xf6000001
    9688:	f200008a 	vhadd.s8	d0, d16, d10
    968c:	1c00008a 	stcne	0, cr0, [r0], {138}	; 0x8a
	...
    9698:	00002d8e 	andeq	r2, r0, lr, lsl #27
    969c:	000c1918 	andeq	r1, ip, r8, lsl r9
    96a0:	0d930100 	ldfeqs	f0, [r3]
    96a4:	0003b115 	andeq	fp, r3, r5, lsl r1
    96a8:	008b1600 	addeq	r1, fp, r0, lsl #12
    96ac:	008b1400 	addeq	r1, fp, r0, lsl #8
    96b0:	001d0000 	andseq	r0, sp, r0
    96b4:	f3000000 	vhadd.u8	d0, d0, d0
    96b8:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    96bc:	00000000 	andeq	r0, r0, r0
    96c0:	00002e9a 	muleq	r0, sl, lr
    96c4:	00002dab 	andeq	r2, r0, fp, lsr #27
    96c8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    96cc:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    96d0:	00000000 	andeq	r0, r0, r0
    96d4:	00003cb9 			; <UNDEFINED> instruction: 0x00003cb9
    96d8:	00002dbf 			; <UNDEFINED> instruction: 0x00002dbf
    96dc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    96e0:	1e000077 	mcrne	0, 0, r0, cr0, cr7, {3}
    96e4:	00000000 	andeq	r0, r0, r0
    96e8:	00003d01 	andeq	r3, r0, r1, lsl #26
    96ec:	00002dd3 	ldrdeq	r2, [r0], -r3
    96f0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    96f4:	20000075 	andcs	r0, r0, r5, ror r0
    96f8:	00000000 	andeq	r0, r0, r0
    96fc:	00003d83 	andeq	r3, r0, r3, lsl #27
    9700:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    9704:	008b2003 	addeq	r2, fp, r3
    9708:	51011f38 	tstpl	r1, r8, lsr pc
    970c:	00187402 	andseq	r7, r8, r2, lsl #8
    9710:	01012200 	mrseq	r2, R9_usr
    9714:	01000026 	tsteq	r0, r6, lsr #32
    9718:	010a0d19 	tsteq	sl, r9, lsl sp
	...
    9724:	00008b29 	andeq	r8, r0, r9, lsr #22
    9728:	002e9a01 	eoreq	r9, lr, r1, lsl #20
    972c:	19701b00 	ldmdbne	r0!, {r8, r9, fp, ip}^
    9730:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    9734:	03c7240d 	biceq	r2, r7, #218103808	; 0xd000000
    9738:	8b510000 	blhi	1449740 <__RAM_SIZE+0x1349740>
    973c:	8b490000 	blhi	1249744 <__RAM_SIZE+0x1149744>
    9740:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9744:	01000025 	tsteq	r0, r5, lsr #32
    9748:	80170d1b 	andshi	r0, r7, fp, lsl sp
    974c:	90000007 	andls	r0, r0, r7
    9750:	8800008b 	stmdahi	r0, {r0, r1, r3, r7}
    9754:	1c00008b 	stcne	0, cr0, [r0], {139}	; 0x8b
	...
    9760:	00002e56 	andeq	r2, r0, r6, asr lr
    9764:	000c1918 	andeq	r1, ip, r8, lsl r9
    9768:	0d3a0100 	ldfeqs	f0, [sl, #-0]
    976c:	0003b115 	andeq	fp, r3, r5, lsl r1
    9770:	008bc900 	addeq	ip, fp, r0, lsl #18
    9774:	008bc700 	addeq	ip, fp, r0, lsl #14
    9778:	001d0000 	andseq	r0, sp, r0
    977c:	d7000000 	strle	r0, [r0, -r0]
    9780:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    9784:	00000000 	andeq	r0, r0, r0
    9788:	00002e9a 	muleq	r0, sl, lr
    978c:	00002e73 	andeq	r2, r0, r3, ror lr
    9790:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9794:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    9798:	00000000 	andeq	r0, r0, r0
    979c:	00003ce5 	andeq	r3, r0, r5, ror #25
    97a0:	0000001e 	andeq	r0, r0, lr, lsl r0
    97a4:	003cb900 	eorseq	fp, ip, r0, lsl #18
    97a8:	002e9000 	eoreq	r9, lr, r0
    97ac:	50011f00 	andpl	r1, r1, r0, lsl #30
    97b0:	00007502 	andeq	r7, r0, r2, lsl #10
    97b4:	0000001d 	andeq	r0, r0, sp, lsl r0
    97b8:	003d0f00 	eorseq	r0, sp, r0, lsl #30
    97bc:	93270000 			; <UNDEFINED> instruction: 0x93270000
    97c0:	01000021 	tsteq	r0, r1, lsr #32
    97c4:	01170cd3 			; <UNDEFINED> instruction: 0x01170cd3
    97c8:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    97d4:	01007d02 	tsteq	r0, r2, lsl #26
    97d8:	00002f15 	andeq	r2, r0, r5, lsl pc
    97dc:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    97e0:	0cd30100 	ldfeqe	f0, [r3], {0}
    97e4:	0003d342 	andeq	sp, r3, r2, asr #6
    97e8:	008bf000 	addeq	pc, fp, r0
    97ec:	008bdc00 	addeq	sp, fp, r0, lsl #24
    97f0:	1cd11800 	ldclne	8, cr1, [r1], {0}
    97f4:	d5010000 	strle	r0, [r1, #-0]
    97f8:	0119140c 	tsteq	r9, ip, lsl #8
    97fc:	8c7b0000 	ldclhi	0, cr0, [fp], #-0
    9800:	8c750000 	ldclhi	0, cr0, [r5], #-0
    9804:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9808:	01000025 	tsteq	r0, r5, lsr #32
    980c:	5a1d0cd6 	bpl	74cb6c <__RAM_SIZE+0x64cb6c>
    9810:	bb00001b 	bllt	9884 <__HEAP_SIZE+0x8884>
    9814:	a700008c 	strge	r0, [r0, -ip, lsl #1]
    9818:	2d00008c 	stccs	0, cr0, [r0, #-560]	; 0xfffffdd0
	...
    9824:	01007829 	tsteq	r0, r9, lsr #16
    9828:	19240cea 	stmdbne	r4!, {r1, r3, r5, r6, r7, sl, fp}
    982c:	44000001 	strmi	r0, [r0], #-1
    9830:	4000008d 	andmi	r0, r0, sp, lsl #1
    9834:	0000008d 	andeq	r0, r0, sp, lsl #1
    9838:	24012200 	strcs	r2, [r1], #-512	; 0xfffffe00
    983c:	01000024 	tsteq	r0, r4, lsr #32
    9840:	010a0c31 	tsteq	sl, r1, lsr ip
	...
    984c:	00008d62 	andeq	r8, r0, r2, ror #26
    9850:	00301c01 	eorseq	r1, r0, r1, lsl #24
    9854:	22011b00 	andcs	r1, r1, #0, 22
    9858:	31010000 	mrscc	r0, (UNDEF: 1)
    985c:	03c7250c 	biceq	r2, r7, #12, 10	; 0x3000000
    9860:	8d880000 	stchi	0, cr0, [r8]
    9864:	8d820000 	stchi	0, cr0, [r2]
    9868:	ad180000 	ldcge	0, cr0, [r8, #-0]
    986c:	01000025 	tsteq	r0, r5, lsr #32
    9870:	75110c33 	ldrvc	r0, [r1, #-3123]	; 0xfffff3cd
    9874:	b5000007 	strlt	r0, [r0, #-7]
    9878:	b100008d 	smlabblt	r0, sp, r0, r0
    987c:	2300008d 	movwcs	r0, #141	; 0x8d
    9880:	000006d8 	ldrdeq	r0, [r0], -r8
    9884:	00002f78 	andeq	r2, r0, r8, ror pc
    9888:	01007829 	tsteq	r0, r9, lsr #16
    988c:	191c0c58 	ldmdbne	ip, {r3, r4, r6, sl, fp}
    9890:	d9000001 	stmdble	r0, {r0}
    9894:	d300008d 	movwle	r0, #141	; 0x8d
    9898:	0000008d 	andeq	r0, r0, sp, lsl #1
    989c:	0006f023 	andeq	pc, r6, r3, lsr #32
    98a0:	002fc400 	eoreq	ip, pc, r0, lsl #8
    98a4:	205c1800 	subscs	r1, ip, r0, lsl #16
    98a8:	92010000 	andls	r0, r1, #0
    98ac:	012f190c 			; <UNDEFINED> instruction: 0x012f190c
    98b0:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
    98b4:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    98b8:	001d0000 	andseq	r0, sp, r0
    98bc:	d7000000 	strle	r0, [r0, -r0]
    98c0:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    98c4:	00000000 	andeq	r0, r0, r0
    98c8:	000015a5 	andeq	r1, r0, r5, lsr #11
    98cc:	0000001d 	andeq	r0, r0, sp, lsl r0
    98d0:	003ce500 	eorseq	lr, ip, r0, lsl #10
    98d4:	00001d00 	andeq	r1, r0, r0, lsl #26
    98d8:	3d0f0000 	stccc	0, cr0, [pc, #-0]	; 98e0 <__HEAP_SIZE+0x88e0>
    98dc:	001d0000 	andseq	r0, sp, r0
    98e0:	fd000000 	stc2	0, cr0, [r0, #-0]
    98e4:	0000001f 	andeq	r0, r0, pc, lsl r0
    98e8:	0000001d 	andeq	r0, r0, sp, lsl r0
    98ec:	003cd700 	eorseq	sp, ip, r0, lsl #14
    98f0:	00001e00 	andeq	r1, r0, r0, lsl #28
    98f4:	3cb90000 	ldccc	0, cr0, [r9]
    98f8:	2fe10000 	svccs	0x00e10000
    98fc:	011f0000 	tsteq	pc, r0
    9900:	00750250 	rsbseq	r0, r5, r0, asr r2
    9904:	00001e00 	andeq	r1, r0, r0, lsl #28
    9908:	3cb90000 	ldccc	0, cr0, [r9]
    990c:	2ff50000 	svccs	0x00f50000
    9910:	011f0000 	tsteq	pc, r0
    9914:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    9918:	00001e00 	andeq	r1, r0, r0, lsl #28
    991c:	3d830000 	stccc	0, cr0, [r3]
    9920:	30120000 	andscc	r0, r2, r0
    9924:	011f0000 	tsteq	pc, r0
    9928:	40030550 	andmi	r0, r3, r0, asr r5
    992c:	1f38008b 	svcne	0x0038008b
    9930:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    9934:	001d0000 	andseq	r0, sp, r0
    9938:	e5000000 	str	r0, [r0, #-0]
    993c:	0000003c 	andeq	r0, r0, ip, lsr r0
    9940:	1fb90122 	svcne	0x00b90122
    9944:	cd010000 	stcgt	0, cr0, [r1, #-0]
    9948:	00010a0a 	andeq	r0, r1, sl, lsl #20
    994c:	00000000 	andeq	r0, r0, r0
    9950:	36000000 	strcc	r0, [r0], -r0
    9954:	0100008e 	smlabbeq	r0, lr, r0, r0
    9958:	00003109 	andeq	r3, r0, r9, lsl #2
    995c:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    9960:	0acd0100 	beq	ff349d68 <__StackTop+0xc7249d68>
    9964:	0003c729 	andeq	ip, r3, r9, lsr #14
    9968:	008e5c00 	addeq	r5, lr, r0, lsl #24
    996c:	008e5600 	addeq	r5, lr, r0, lsl #12
    9970:	1ee81b00 	vfmane.f64	d17, d8, d0
    9974:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    9978:	012f280a 			; <UNDEFINED> instruction: 0x012f280a
    997c:	8e8f0000 	cdphi	0, 8, cr0, cr15, cr0, {0}
    9980:	8e850000 	cdphi	0, 8, cr0, cr5, cr0, {0}
    9984:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9988:	01000025 	tsteq	r0, r5, lsr #32
    998c:	75110ad0 	ldrvc	r0, [r1, #-2768]	; 0xfffff530
    9990:	d6000007 	strle	r0, [r0], -r7
    9994:	d200008e 	andle	r0, r0, #142	; 0x8e
    9998:	1800008e 	stmdane	r0, {r1, r2, r3, r7}
    999c:	0000248d 	andeq	r2, r0, sp, lsl #9
    99a0:	150ad101 	strne	sp, [sl, #-257]	; 0xfffffeff
    99a4:	0000012f 	andeq	r0, r0, pc, lsr #2
    99a8:	00008efa 	strdeq	r8, [r0], -sl
    99ac:	00008ef4 	strdeq	r8, [r0], -r4
    99b0:	0023fb18 	eoreq	pc, r3, r8, lsl fp	; <UNPREDICTABLE>
    99b4:	0ad10100 	beq	ff449dbc <__StackTop+0xc7349dbc>
    99b8:	00012f2c 	andeq	r2, r1, ip, lsr #30
    99bc:	008f2500 	addeq	r2, pc, r0, lsl #10
    99c0:	008f2300 	addeq	r2, pc, r0, lsl #6
    99c4:	0eb21800 	cdpeq	8, 11, cr1, cr2, cr0, {0}
    99c8:	d2010000 	andle	r0, r1, #0
    99cc:	0119140a 	tsteq	r9, sl, lsl #8
    99d0:	8f400000 	svchi	0x00400000
    99d4:	8f380000 	svchi	0x00380000
    99d8:	001c0000 	andseq	r0, ip, r0
    99dc:	00000000 	andeq	r0, r0, r0
    99e0:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    99e4:	18000030 	stmdane	r0, {r4, r5}
    99e8:	00000c19 	andeq	r0, r0, r9, lsl ip
    99ec:	150b6c01 	strne	r6, [fp, #-3073]	; 0xfffff3ff
    99f0:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    99f4:	00008f78 	andeq	r8, r0, r8, ror pc
    99f8:	00008f76 	andeq	r8, r0, r6, ror pc
    99fc:	00001d00 	andeq	r1, r0, r0, lsl #26
    9a00:	3cd70000 	ldclcc	0, cr0, [r7], {0}
    9a04:	001d0000 	andseq	r0, sp, r0
    9a08:	e5000000 	str	r0, [r0, #-0]
    9a0c:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    9a10:	00000000 	andeq	r0, r0, r0
    9a14:	00003cb9 			; <UNDEFINED> instruction: 0x00003cb9
    9a18:	000030ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
    9a1c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9a20:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    9a24:	00000000 	andeq	r0, r0, r0
    9a28:	00003d0f 	andeq	r3, r0, pc, lsl #26
    9a2c:	ca012100 	bgt	51e34 <__HEAP_SIZE+0x50e34>
    9a30:	0100001f 	tsteq	r0, pc, lsl r0
    9a34:	01110a9d 			; <UNDEFINED> instruction: 0x01110a9d
    9a38:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    9a44:	00008f8b 	andeq	r8, r0, fp, lsl #31
    9a48:	00319001 	eorseq	r9, r1, r1
    9a4c:	1f991b00 	svcne	0x00991b00
    9a50:	9d010000 	stcls	0, cr0, [r1, #-0]
    9a54:	03d3420a 	bicseq	r4, r3, #-1610612736	; 0xa0000000
    9a58:	8fb10000 	svchi	0x00b10000
    9a5c:	8fab0000 	svchi	0x00ab0000
    9a60:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9a64:	01000025 	tsteq	r0, r5, lsr #32
    9a68:	54170a9f 	ldrpl	r0, [r7], #-2719	; 0xfffff561
    9a6c:	dc00001b 	stcle	0, cr0, [r0], {27}
    9a70:	da00008f 	ble	9cb4 <__HEAP_SIZE+0x8cb4>
    9a74:	1800008f 	stmdane	r0, {r0, r1, r2, r3, r7}
    9a78:	00000e58 	andeq	r0, r0, r8, asr lr
    9a7c:	150aa001 	strne	sl, [sl, #-1]
    9a80:	0000012f 	andeq	r0, r0, pc, lsr #2
    9a84:	00008ff1 	strdeq	r8, [r0], -r1
    9a88:	00008fef 	andeq	r8, r0, pc, ror #31
    9a8c:	000e7918 	andeq	r7, lr, r8, lsl r9
    9a90:	0aa10100 	beq	fe849e98 <__StackTop+0xc6749e98>
    9a94:	00012f15 	andeq	r2, r1, r5, lsl pc
    9a98:	00900800 	addseq	r0, r0, r0, lsl #16
    9a9c:	00900400 	addseq	r0, r0, r0, lsl #8
    9aa0:	00001d00 	andeq	r1, r0, r0, lsl #26
    9aa4:	3cf30000 	ldclcc	0, cr0, [r3]
    9aa8:	001d0000 	andseq	r0, sp, r0
    9aac:	01000000 	mrseq	r0, (UNDEF: 0)
    9ab0:	0000003d 	andeq	r0, r0, sp, lsr r0
    9ab4:	25210121 	strcs	r0, [r1, #-289]!	; 0xfffffedf
    9ab8:	83010000 	movwhi	r0, #4096	; 0x1000
    9abc:	2f01110a 	svccs	0x0001110a
    9ac0:	00000001 	andeq	r0, r0, r1
    9ac4:	00000000 	andeq	r0, r0, r0
    9ac8:	26000000 	strcs	r0, [r0], -r0
    9acc:	01000090 	swpeq	r0, r0, [r0]	; <UNPREDICTABLE>
    9ad0:	00003202 	andeq	r3, r0, r2, lsl #4
    9ad4:	001f991b 	andseq	r9, pc, fp, lsl r9	; <UNPREDICTABLE>
    9ad8:	0a830100 	beq	fe0c9ee0 <__StackTop+0xc5fc9ee0>
    9adc:	0003d33b 	andeq	sp, r3, fp, lsr r3
    9ae0:	00904c00 	addseq	r4, r0, r0, lsl #24
    9ae4:	00904600 	addseq	r4, r0, r0, lsl #12
    9ae8:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    9aec:	85010000 	strhi	r0, [r1, #-0]
    9af0:	1b54170a 	blne	150f720 <__RAM_SIZE+0x140f720>
    9af4:	90770000 	rsbsls	r0, r7, r0
    9af8:	90750000 	rsbsls	r0, r5, r0
    9afc:	58180000 	ldmdapl	r8, {}	; <UNPREDICTABLE>
    9b00:	0100000e 	tsteq	r0, lr
    9b04:	2f150a86 	svccs	0x00150a86
    9b08:	8c000001 	stchi	0, cr0, [r0], {1}
    9b0c:	8a000090 	bhi	9d54 <__HEAP_SIZE+0x8d54>
    9b10:	1d000090 	stcne	0, cr0, [r0, #-576]	; 0xfffffdc0
    9b14:	00000000 	andeq	r0, r0, r0
    9b18:	00003cd7 	ldrdeq	r3, [r0], -r7
    9b1c:	0000001d 	andeq	r0, r0, sp, lsl r0
    9b20:	003ce500 	eorseq	lr, ip, r0, lsl #10
    9b24:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9b28:	00001f2c 	andeq	r1, r0, ip, lsr #30
    9b2c:	110a5301 	tstne	sl, r1, lsl #6
    9b30:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    9b3c:	00909f00 	addseq	r9, r0, r0, lsl #30
    9b40:	32890100 	addcc	r0, r9, #0, 2
    9b44:	991b0000 	ldmdbls	fp, {}	; <UNPREDICTABLE>
    9b48:	0100001f 	tsteq	r0, pc, lsl r0
    9b4c:	d33e0a53 	teqle	lr, #339968	; 0x53000
    9b50:	c5000003 	strgt	r0, [r0, #-3]
    9b54:	bf000090 	svclt	0x00000090
    9b58:	18000090 	stmdane	r0, {r4, r7}
    9b5c:	000025ad 	andeq	r2, r0, sp, lsr #11
    9b60:	170a5501 	strne	r5, [sl, -r1, lsl #10]
    9b64:	00001b54 	andeq	r1, r0, r4, asr fp
    9b68:	000090f0 	strdeq	r9, [r0], -r0
    9b6c:	000090ee 	andeq	r9, r0, lr, ror #1
    9b70:	000e5818 	andeq	r5, lr, r8, lsl r8
    9b74:	0a560100 	beq	1589f7c <__RAM_SIZE+0x1489f7c>
    9b78:	00012f15 	andeq	r2, r1, r5, lsl pc
    9b7c:	00910500 	addseq	r0, r1, r0, lsl #10
    9b80:	00910300 	addseq	r0, r1, r0, lsl #6
    9b84:	0e791800 	cdpeq	8, 7, cr1, cr9, cr0, {0}
    9b88:	57010000 	strpl	r0, [r1, -r0]
    9b8c:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    9b90:	911c0000 	tstls	ip, r0
    9b94:	91180000 	tstls	r8, r0
    9b98:	001d0000 	andseq	r0, sp, r0
    9b9c:	f3000000 	vhadd.u8	d0, d0, d0
    9ba0:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    9ba4:	00000000 	andeq	r0, r0, r0
    9ba8:	00003d01 	andeq	r3, r0, r1, lsl #26
    9bac:	1d012100 	stfnes	f2, [r1, #-0]
    9bb0:	0100001c 	tsteq	r0, ip, lsl r0
    9bb4:	01110a39 	tsteq	r1, r9, lsr sl
    9bb8:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    9bc4:	0000913a 	andeq	r9, r0, sl, lsr r1
    9bc8:	0032fb01 	eorseq	pc, r2, r1, lsl #22
    9bcc:	1f991b00 	svcne	0x00991b00
    9bd0:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    9bd4:	03d3370a 	bicseq	r3, r3, #2621440	; 0x280000
    9bd8:	91600000 	cmnls	r0, r0
    9bdc:	915a0000 	cmpls	sl, r0
    9be0:	ad180000 	ldcge	0, cr0, [r8, #-0]
    9be4:	01000025 	tsteq	r0, r5, lsr #32
    9be8:	54170a3b 	ldrpl	r0, [r7], #-2619	; 0xfffff5c5
    9bec:	8b00001b 	blhi	9c60 <__HEAP_SIZE+0x8c60>
    9bf0:	89000091 	stmdbhi	r0, {r0, r4, r7}
    9bf4:	18000091 	stmdane	r0, {r0, r4, r7}
    9bf8:	00000e58 	andeq	r0, r0, r8, asr lr
    9bfc:	150a3c01 	strne	r3, [sl, #-3073]	; 0xfffff3ff
    9c00:	0000012f 	andeq	r0, r0, pc, lsr #2
    9c04:	000091a0 	andeq	r9, r0, r0, lsr #3
    9c08:	0000919e 	muleq	r0, lr, r1
    9c0c:	0000001d 	andeq	r0, r0, sp, lsl r0
    9c10:	003cd700 	eorseq	sp, ip, r0, lsl #14
    9c14:	00001d00 	andeq	r1, r0, r0, lsl #26
    9c18:	3ce50000 	stclcc	0, cr0, [r5]
    9c1c:	21000000 	mrscs	r0, (UNDEF: 0)
    9c20:	001dd401 	andseq	sp, sp, r1, lsl #8
    9c24:	09b50100 	ldmibeq	r5!, {r8}
    9c28:	05420110 	strbeq	r0, [r2, #-272]	; 0xfffffef0
    9c2c:	290c0000 	stmdbcs	ip, {}	; <UNPREDICTABLE>
    9c30:	29a81000 	stmibcs	r8!, {ip}
    9c34:	91b31000 			; <UNDEFINED> instruction: 0x91b31000
    9c38:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    9c3c:	1b000033 	blne	9d10 <__HEAP_SIZE+0x8d10>
    9c40:	00001f99 	muleq	r0, r9, pc	; <UNPREDICTABLE>
    9c44:	2c09b501 	cfstr32cs	mvfx11, [r9], {1}
    9c48:	000003c7 	andeq	r0, r0, r7, asr #7
    9c4c:	000091f5 	strdeq	r9, [r0], -r5
    9c50:	000091eb 	andeq	r9, r0, fp, ror #3
    9c54:	00196818 	andseq	r6, r9, r8, lsl r8
    9c58:	09b70100 	ldmibeq	r7!, {r8}
    9c5c:	00054214 	andeq	r4, r5, r4, lsl r2
    9c60:	00923b00 	addseq	r3, r2, r0, lsl #22
    9c64:	00923700 	addseq	r3, r2, r0, lsl #14
    9c68:	17341800 	ldrne	r1, [r4, -r0, lsl #16]!
    9c6c:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    9c70:	1e641809 	cdpne	8, 6, cr1, cr4, cr9, {0}
    9c74:	925d0000 	subsls	r0, sp, #0
    9c78:	92590000 	subsls	r0, r9, #0
    9c7c:	cd180000 	ldcgt	0, cr0, [r8, #-0]
    9c80:	01000017 	tsteq	r0, r7, lsl r0
    9c84:	641809b9 	ldrvs	r0, [r8], #-2489	; 0xfffff647
    9c88:	7f00001e 	svcvc	0x0000001e
    9c8c:	7b000092 	blvc	9edc <__HEAP_SIZE+0x8edc>
    9c90:	18000092 	stmdane	r0, {r1, r4, r7}
    9c94:	000017bf 			; <UNDEFINED> instruction: 0x000017bf
    9c98:	1809ba01 	stmdane	r9, {r0, r9, fp, ip, sp, pc}
    9c9c:	00001e64 	andeq	r1, r0, r4, ror #28
    9ca0:	000092a1 	andeq	r9, r0, r1, lsr #5
    9ca4:	0000929d 	muleq	r0, sp, r2
    9ca8:	00191318 	andseq	r1, r9, r8, lsl r3
    9cac:	09bb0100 	ldmibeq	fp!, {r8}
    9cb0:	001e6418 	andseq	r6, lr, r8, lsl r4
    9cb4:	0092c300 	addseq	ip, r2, r0, lsl #6
    9cb8:	0092bf00 	addseq	fp, r2, r0, lsl #30
    9cbc:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    9cc0:	bc010000 	stclt	0, cr0, [r1], {-0}
    9cc4:	1b5a1d09 	blne	16910f0 <__RAM_SIZE+0x15910f0>
    9cc8:	92eb0000 	rscls	r0, fp, #0
    9ccc:	92e10000 	rscls	r0, r1, #0
    9cd0:	68230000 	stmdavs	r3!, {}	; <UNPREDICTABLE>
    9cd4:	cb000005 	blgt	9cf0 <__HEAP_SIZE+0x8cf0>
    9cd8:	29000033 	stmdbcs	r0, {r0, r1, r4, r5}
    9cdc:	ec010078 	stc	0, cr0, [r1], {120}	; 0x78
    9ce0:	01192809 	tsteq	r9, r9, lsl #16
    9ce4:	93330000 	teqls	r3, #0
    9ce8:	932d0000 			; <UNDEFINED> instruction: 0x932d0000
    9cec:	1d000000 	stcne	0, cr0, [r0, #-0]
    9cf0:	1000291e 	andne	r2, r0, lr, lsl r9
    9cf4:	00003cd7 	ldrdeq	r3, [r0], -r7
    9cf8:	0029301d 	eoreq	r3, r9, sp, lsl r0
    9cfc:	003ce510 	eorseq	lr, ip, r0, lsl r5
    9d00:	01220000 			; <UNDEFINED> instruction: 0x01220000
    9d04:	000002f5 	strdeq	r0, [r0], -r5
    9d08:	0a098301 	beq	26a914 <__RAM_SIZE+0x16a914>
    9d0c:	002c9c01 	eoreq	r9, ip, r1, lsl #24
    9d10:	002cba10 	eoreq	fp, ip, r0, lsl sl
    9d14:	00935c10 	addseq	r5, r3, r0, lsl ip
    9d18:	34590100 	ldrbcc	r0, [r9], #-256	; 0xffffff00
    9d1c:	601b0000 	andsvs	r0, fp, r0
    9d20:	01000023 	tsteq	r0, r3, lsr #32
    9d24:	5b270983 	blpl	9cc338 <__RAM_SIZE+0x8cc338>
    9d28:	82000001 	andhi	r0, r0, #1
    9d2c:	7c000093 	stcvc	0, cr0, [r0], {147}	; 0x93
    9d30:	18000093 	stmdane	r0, {r0, r1, r4, r7}
    9d34:	00002431 	andeq	r2, r0, r1, lsr r4
    9d38:	14098501 	strne	r8, [r9], #-1281	; 0xfffffaff
    9d3c:	00000119 	andeq	r0, r0, r9, lsl r1
    9d40:	000093b2 			; <UNDEFINED> instruction: 0x000093b2
    9d44:	000093ae 	andeq	r9, r0, lr, lsr #7
    9d48:	002ca61d 	eoreq	sl, ip, sp, lsl r6
    9d4c:	002b1810 	eoreq	r1, fp, r0, lsl r8
    9d50:	2cae1e00 	stccs	14, cr1, [lr]
    9d54:	0a951000 	beq	fe54dd5c <__StackTop+0xc644dd5c>
    9d58:	34460000 	strbcc	r0, [r6], #-0
    9d5c:	011f0000 	tsteq	pc, r0
    9d60:	00740250 	rsbseq	r0, r4, r0, asr r2
    9d64:	0151011f 	cmpeq	r1, pc, lsl r1
    9d68:	b21d0030 	andslt	r0, sp, #48	; 0x30
    9d6c:	bf10002c 	svclt	0x0010002c
    9d70:	1d000029 	stcne	0, cr0, [r0, #-164]	; 0xffffff5c
    9d74:	10002cb8 			; <UNDEFINED> instruction: 0x10002cb8
    9d78:	00003d0f 	andeq	r3, r0, pc, lsl #26
    9d7c:	54012100 	strpl	r2, [r1], #-256	; 0xffffff00
    9d80:	01000017 	tsteq	r0, r7, lsl r0
    9d84:	01100927 	tsteq	r0, r7, lsr #18
    9d88:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    9d94:	000093d1 	ldrdeq	r9, [r0], -r1
    9d98:	00352c01 	eorseq	r2, r5, r1, lsl #24
    9d9c:	22351b00 	eorscs	r1, r5, #0, 22
    9da0:	27010000 	strcs	r0, [r1, -r0]
    9da4:	1c3d3409 	cfldrsne	mvf3, [sp], #-36	; 0xffffffdc
    9da8:	93f50000 	mvnsls	r0, #0
    9dac:	93f10000 	mvnsls	r0, #0
    9db0:	4e1b0000 	cdpmi	0, 1, cr0, cr11, cr0, {0}
    9db4:	01000025 	tsteq	r0, r5, lsr #32
    9db8:	5b320928 	blpl	c8c260 <__RAM_SIZE+0xb8c260>
    9dbc:	19000001 	stmdbne	r0, {r0}
    9dc0:	13000094 	movwne	r0, #148	; 0x94
    9dc4:	18000094 	stmdane	r0, {r2, r4, r7}
    9dc8:	00002574 	andeq	r2, r0, r4, ror r5
    9dcc:	14092a01 	strne	r2, [r9], #-2561	; 0xfffff5ff
    9dd0:	0000014a 	andeq	r0, r0, sl, asr #2
    9dd4:	00009453 	andeq	r9, r0, r3, asr r4
    9dd8:	00009445 	andeq	r9, r0, r5, asr #8
    9ddc:	00243118 	eoreq	r3, r4, r8, lsl r1
    9de0:	092b0100 	stmdbeq	fp!, {r8}
    9de4:	00011914 	andeq	r1, r1, r4, lsl r9
    9de8:	0094af00 	addseq	sl, r4, r0, lsl #30
    9dec:	0094ab00 	addseq	sl, r4, r0, lsl #22
    9df0:	1d471800 	stclne	8, cr1, [r7, #-0]
    9df4:	2b010000 	blcs	49dfc <__HEAP_SIZE+0x48dfc>
    9df8:	01192509 	tsteq	r9, r9, lsl #10
    9dfc:	94d70000 	ldrbls	r0, [r7], #0
    9e00:	94cd0000 	strbls	r0, [sp], #0
    9e04:	68230000 	stmdavs	r3!, {}	; <UNPREDICTABLE>
    9e08:	10000006 	andne	r0, r0, r6
    9e0c:	18000035 	stmdane	r0, {r0, r2, r4, r5}
    9e10:	00001c2f 	andeq	r1, r0, pc, lsr #24
    9e14:	1e093601 	cfmadd32ne	mvax0, mvfx3, mvfx9, mvfx1
    9e18:	0000015b 	andeq	r0, r0, fp, asr r1
    9e1c:	0000951f 	andeq	r9, r0, pc, lsl r5
    9e20:	0000951b 	andeq	r9, r0, fp, lsl r5
    9e24:	00000020 	andeq	r0, r0, r0, lsr #32
    9e28:	000a9500 	andeq	r9, sl, r0, lsl #10
    9e2c:	51011f00 	tstpl	r1, r0, lsl #30
    9e30:	00003001 	andeq	r3, r0, r1
    9e34:	0000001d 	andeq	r0, r0, sp, lsl r0
    9e38:	002b1800 	eoreq	r1, fp, r0, lsl #16
    9e3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    9e40:	29bf0000 	ldmibcs	pc!, {}	; <UNPREDICTABLE>
    9e44:	001d0000 	andseq	r0, sp, r0
    9e48:	0f000000 	svceq	0x00000000
    9e4c:	0000003d 	andeq	r0, r0, sp, lsr r0
    9e50:	20700122 	rsbscs	r0, r0, r2, lsr #2
    9e54:	8f010000 	svchi	0x00010000
    9e58:	00010a08 	andeq	r0, r1, r8, lsl #20
    9e5c:	00000000 	andeq	r0, r0, r0
    9e60:	3d000000 	stccc	0, cr0, [r0, #-0]
    9e64:	01000095 	swpeq	r0, r5, [r0]	; <UNPREDICTABLE>
    9e68:	00003623 	andeq	r3, r0, r3, lsr #12
    9e6c:	0024b31b 	eoreq	fp, r4, fp, lsl r3
    9e70:	088f0100 	stmeq	pc, {r8}	; <UNPREDICTABLE>
    9e74:	0003c724 	andeq	ip, r3, r4, lsr #14
    9e78:	00956300 	addseq	r6, r5, r0, lsl #6
    9e7c:	00955d00 	addseq	r5, r5, r0, lsl #26
    9e80:	25ad1800 	strcs	r1, [sp, #2048]!	; 0x800
    9e84:	91010000 	mrsls	r0, (UNDEF: 1)
    9e88:	07751108 	ldrbeq	r1, [r5, -r8, lsl #2]!
    9e8c:	95900000 	ldrls	r0, [r0]
    9e90:	958c0000 	strls	r0, [ip]
    9e94:	16180000 	ldrne	r0, [r8], -r0
    9e98:	01000018 	tsteq	r0, r8, lsl r0
    9e9c:	19140892 	ldmdbne	r4, {r1, r4, r7, fp}
    9ea0:	b4000001 	strlt	r0, [r0], #-1
    9ea4:	ae000095 	mcrge	0, 0, r0, cr0, cr5, {4}
    9ea8:	18000095 	stmdane	r0, {r0, r2, r4, r7}
    9eac:	000026cf 	andeq	r2, r0, pc, asr #13
    9eb0:	14089301 	strne	r9, [r8], #-769	; 0xfffffcff
    9eb4:	00000119 	andeq	r0, r0, r9, lsl r1
    9eb8:	000095e4 	andeq	r9, r0, r4, ror #11
    9ebc:	000095e0 	andeq	r9, r0, r0, ror #11
    9ec0:	0000001d 	andeq	r0, r0, sp, lsl r0
    9ec4:	003cd700 	eorseq	sp, ip, r0, lsl #14
    9ec8:	00001e00 	andeq	r1, r0, r0, lsl #28
    9ecc:	3cb90000 	ldccc	0, cr0, [r9]
    9ed0:	35b90000 	ldrcc	r0, [r9, #0]!
    9ed4:	011f0000 	tsteq	pc, r0
    9ed8:	00750250 	rsbseq	r0, r5, r0, asr r2
    9edc:	00001e00 	andeq	r1, r0, r0, lsl #28
    9ee0:	3cb90000 	ldccc	0, cr0, [r9]
    9ee4:	35cd0000 	strbcc	r0, [sp]
    9ee8:	011f0000 	tsteq	pc, r0
    9eec:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    9ef0:	00001d00 	andeq	r1, r0, r0, lsl #26
    9ef4:	15a50000 	strne	r0, [r5, #0]!
    9ef8:	001d0000 	andseq	r0, sp, r0
    9efc:	e5000000 	str	r0, [r0, #-0]
    9f00:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    9f04:	00000000 	andeq	r0, r0, r0
    9f08:	000015bb 			; <UNDEFINED> instruction: 0x000015bb
    9f0c:	000035f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    9f10:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9f14:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    9f18:	00000000 	andeq	r0, r0, r0
    9f1c:	00003d83 	andeq	r3, r0, r3, lsl #27
    9f20:	00003610 	andeq	r3, r0, r0, lsl r6
    9f24:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    9f28:	008b5c03 	addeq	r5, fp, r3, lsl #24
    9f2c:	51011f38 	tstpl	r1, r8, lsr pc
    9f30:	00007502 	andeq	r7, r0, r2, lsl #10
    9f34:	0000001d 	andeq	r0, r0, sp, lsl r0
    9f38:	003ce500 	eorseq	lr, ip, r0, lsl #10
    9f3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    9f40:	3d0f0000 	stccc	0, cr0, [pc, #-0]	; 9f48 <__HEAP_SIZE+0x8f48>
    9f44:	1a000000 	bne	9f4c <__HEAP_SIZE+0x8f4c>
    9f48:	00001d99 	muleq	r0, r9, sp
    9f4c:	1107e301 	tstne	r7, r1, lsl #6
    9f50:	00268401 	eoreq	r8, r6, r1, lsl #8
    9f54:	00274410 	eoreq	r4, r7, r0, lsl r4
    9f58:	00960210 	addseq	r0, r6, r0, lsl r2
    9f5c:	369b0100 	ldrcc	r0, [fp], r0, lsl #2
    9f60:	f21b0000 	vhadd.s16	d0, d11, d0
    9f64:	0100001d 	tsteq	r0, sp, lsl r0
    9f68:	753307e3 	ldrvc	r0, [r3, #-2019]!	; 0xfffff81d
    9f6c:	26000007 	strcs	r0, [r0], -r7
    9f70:	22000096 	andcs	r0, r0, #150	; 0x96
    9f74:	1c000096 	stcne	0, cr0, [r0], {150}	; 0x96
    9f78:	100026d4 	ldrdne	r2, [r0], -r4
    9f7c:	10002706 	andne	r2, r0, r6, lsl #14
    9f80:	00003676 	andeq	r3, r0, r6, ror r6
    9f84:	000c1918 	andeq	r1, ip, r8, lsl r9
    9f88:	081d0100 	ldmdaeq	sp, {r8}
    9f8c:	0003b10d 	andeq	fp, r3, sp, lsl #2
    9f90:	00964600 	addseq	r4, r6, r0, lsl #12
    9f94:	00964400 	addseq	r4, r6, r0, lsl #8
    9f98:	8c1d0000 	ldchi	0, cr0, [sp], {-0}
    9f9c:	d7100026 	ldrle	r0, [r0, -r6, lsr #32]
    9fa0:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    9fa4:	1000270a 	andne	r2, r0, sl, lsl #14
    9fa8:	00003ce5 	andeq	r3, r0, r5, ror #25
    9fac:	0027221d 	eoreq	r2, r7, sp, lsl r2
    9fb0:	00191910 	andseq	r1, r9, r0, lsl r9
    9fb4:	27281d00 	strcs	r1, [r8, -r0, lsl #26]!
    9fb8:	3d0f1000 	stccc	0, cr1, [pc, #-0]	; 9fc0 <__HEAP_SIZE+0x8fc0>
    9fbc:	1a000000 	bne	9fc4 <__HEAP_SIZE+0x8fc4>
    9fc0:	00002141 	andeq	r2, r0, r1, asr #2
    9fc4:	0d070101 	stfeqs	f0, [r7, #-4]
    9fc8:	00253001 	eoreq	r3, r5, r1
    9fcc:	0025c810 	eoreq	ip, r5, r0, lsl r8
    9fd0:	00965910 	addseq	r5, r6, r0, lsl r9
    9fd4:	37d80100 	ldrbcc	r0, [r8, r0, lsl #2]
    9fd8:	e11b0000 	tst	fp, r0
    9fdc:	01000025 	tsteq	r0, r5, lsr #32
    9fe0:	ea320701 	b	c8bbec <__RAM_SIZE+0xb8bbec>
    9fe4:	7d000000 	stcvc	0, cr0, [r0, #-0]
    9fe8:	79000096 	stmdbvc	r0, {r1, r2, r4, r7}
    9fec:	1b000096 	blne	a24c <__HEAP_SIZE+0x924c>
    9ff0:	00001c52 	andeq	r1, r0, r2, asr ip
    9ff4:	36070201 	strcc	r0, [r7], -r1, lsl #4
    9ff8:	000000be 	strheq	r0, [r0], -lr
    9ffc:	0000969f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    a000:	0000969b 	muleq	r0, fp, r6
    a004:	001ba31b 	andseq	sl, fp, fp, lsl r3
    a008:	07030100 	streq	r0, [r3, -r0, lsl #2]
    a00c:	00003540 	andeq	r3, r0, r0, asr #10
    a010:	0096c500 	addseq	ip, r6, r0, lsl #10
    a014:	0096bd00 	addseq	fp, r6, r0, lsl #26
    a018:	21561b00 	cmpcs	r6, r0, lsl #22
    a01c:	04010000 	streq	r0, [r1], #-0
    a020:	00a13007 	adceq	r3, r1, r7
    a024:	97060000 	strls	r0, [r6, -r0]
    a028:	97020000 	strls	r0, [r2, -r0]
    a02c:	ff1b0000 			; <UNDEFINED> instruction: 0xff1b0000
    a030:	01000016 	tsteq	r0, r6, lsl r0
    a034:	2f2f0705 	svccs	0x002f0705
    a038:	28000001 	stmdacs	r0, {r0}
    a03c:	24000097 	strcs	r0, [r0], #-151	; 0xffffff69
    a040:	19000097 	stmdbne	r0, {r0, r1, r2, r4, r7}
    a044:	00002682 	andeq	r2, r0, r2, lsl #13
    a048:	38070601 	stmdacc	r7, {r0, r9, sl}
    a04c:	000037de 	ldrdeq	r3, [r0], -lr
    a050:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
    a054:	00001df2 	strdeq	r1, [r0], -r2
    a058:	2b070701 	blcs	1cbc64 <__RAM_SIZE+0xcbc64>
    a05c:	00000775 	andeq	r0, r0, r5, ror r7
    a060:	19089102 	stmdbne	r8, {r1, r8, ip, pc}
    a064:	00002024 	andeq	r2, r0, r4, lsr #32
    a068:	40070801 	andmi	r0, r7, r1, lsl #16
    a06c:	000037e9 	andeq	r3, r0, r9, ror #15
    a070:	180c9102 	stmdane	ip, {r1, r8, ip, pc}
    a074:	00000a05 	andeq	r0, r0, r5, lsl #20
    a078:	13070a01 	movwne	r0, #31233	; 0x7a01
    a07c:	0000060b 	andeq	r0, r0, fp, lsl #12
    a080:	00009749 	andeq	r9, r0, r9, asr #14
    a084:	00009747 	andeq	r9, r0, r7, asr #14
    a088:	01007829 	tsteq	r0, r9, lsr #16
    a08c:	2f11070b 	svccs	0x0011070b
    a090:	5e000001 	cdppl	0, 0, cr0, cr0, cr1, {0}
    a094:	5c000097 	stcpl	0, cr0, [r0], {151}	; 0x97
    a098:	1e000097 	mcrne	0, 0, r0, cr0, cr7, {4}
    a09c:	1000254e 	andne	r2, r0, lr, asr #10
    a0a0:	00003d92 	muleq	r0, r2, sp
    a0a4:	00003793 	muleq	r0, r3, r7
    a0a8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a0ac:	011fa508 	tsteq	pc, r8, lsl #10
    a0b0:	00770452 	rsbseq	r0, r7, r2, asr r4
    a0b4:	1e002432 	cfmvdhrne	mvd0, r2
    a0b8:	1000259a 	mulne	r0, sl, r5
    a0bc:	00003da0 	andeq	r3, r0, r0, lsr #27
    a0c0:	000037a7 	andeq	r3, r0, r7, lsr #15
    a0c4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a0c8:	1e000474 	mcrne	4, 0, r0, cr0, cr4, {3}
    a0cc:	100025a2 	andne	r2, r0, r2, lsr #11
    a0d0:	00003da0 	andeq	r3, r0, r0, lsr #27
    a0d4:	000037bb 			; <UNDEFINED> instruction: 0x000037bb
    a0d8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a0dc:	20001874 	andcs	r1, r0, r4, ror r8
    a0e0:	100025b8 			; <UNDEFINED> instruction: 0x100025b8
    a0e4:	00003daf 	andeq	r3, r0, pc, lsr #27
    a0e8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a0ec:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    a0f0:	00780252 	rsbseq	r0, r8, r2, asr r2
    a0f4:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    a0f8:	00000079 	andeq	r0, r0, r9, ror r0
    a0fc:	03c70407 	biceq	r0, r7, #117440512	; 0x7000000
    a100:	d8030000 	stmdale	r3, {}	; <UNPREDICTABLE>
    a104:	07000037 	smladxeq	r0, r7, r0, r0
    a108:	00060604 	andeq	r0, r6, r4, lsl #12
    a10c:	37e30300 	strbcc	r0, [r3, r0, lsl #6]!
    a110:	01210000 			; <UNDEFINED> instruction: 0x01210000
    a114:	0000032c 	andeq	r0, r0, ip, lsr #6
    a118:	1006b601 	andne	fp, r6, r1, lsl #12
    a11c:	00011901 	andeq	r1, r1, r1, lsl #18
    a120:	0028e800 	eoreq	lr, r8, r0, lsl #16
    a124:	00290a10 	eoreq	r0, r9, r0, lsl sl
    a128:	00977110 	addseq	r7, r7, r0, lsl r1
    a12c:	38f90100 	ldmcc	r9!, {r8}^
    a130:	e11b0000 	tst	fp, r0
    a134:	01000025 	tsteq	r0, r5, lsr #32
    a138:	ea2c06b6 	b	b0bc18 <__RAM_SIZE+0xa0bc18>
    a13c:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    a140:	b5000097 	strlt	r0, [r0, #-151]	; 0xffffff69
    a144:	1b000097 	blne	a3a8 <__HEAP_SIZE+0x93a8>
    a148:	00001c52 	andeq	r1, r0, r2, asr ip
    a14c:	3006b701 	andcc	fp, r6, r1, lsl #14
    a150:	000000be 	strheq	r0, [r0], -lr
    a154:	000097de 	ldrdeq	r9, [r0], -lr
    a158:	000097da 	ldrdeq	r9, [r0], -sl
    a15c:	001ba31b 	andseq	sl, fp, fp, lsl r3
    a160:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
    a164:	0000353a 	andeq	r3, r0, sl, lsr r5
    a168:	00980300 	addseq	r0, r8, r0, lsl #6
    a16c:	0097ff00 	addseq	pc, r7, r0, lsl #30
    a170:	21561b00 	cmpcs	r6, r0, lsl #22
    a174:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    a178:	00a12a06 	adceq	r2, r1, r6, lsl #20
    a17c:	98280000 	stmdals	r8!, {}	; <UNPREDICTABLE>
    a180:	98240000 	stmdals	r4!, {}	; <UNPREDICTABLE>
    a184:	ff1b0000 			; <UNDEFINED> instruction: 0xff1b0000
    a188:	01000016 	tsteq	r0, r6, lsl r0
    a18c:	2f2906ba 	svccs	0x002906ba
    a190:	4d000001 	stcmi	0, cr0, [r0, #-4]
    a194:	49000098 	stmdbmi	r0, {r3, r4, r7}
    a198:	1b000098 	blne	a400 <__HEAP_SIZE+0x9400>
    a19c:	00002682 	andeq	r2, r0, r2, lsl #13
    a1a0:	3206bb01 	andcc	fp, r6, #1024	; 0x400
    a1a4:	000037de 	ldrdeq	r3, [r0], -lr
    a1a8:	00009871 	andeq	r9, r0, r1, ror r8
    a1ac:	0000986d 	andeq	r9, r0, sp, ror #16
    a1b0:	001df218 	andseq	pc, sp, r8, lsl r2	; <UNPREDICTABLE>
    a1b4:	06bd0100 	ldrteq	r0, [sp], r0, lsl #2
    a1b8:	00077511 	andeq	r7, r7, r1, lsl r5
    a1bc:	00989500 	addseq	r9, r8, r0, lsl #10
    a1c0:	00989100 	addseq	r9, r8, r0, lsl #2
    a1c4:	1cd11800 	ldclne	8, cr1, [r1], {0}
    a1c8:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    a1cc:	01191406 	tsteq	r9, r6, lsl #8
    a1d0:	98b70000 	ldmls	r7!, {}	; <UNPREDICTABLE>
    a1d4:	98b30000 	ldmls	r3!, {}	; <UNPREDICTABLE>
    a1d8:	f81e0000 			; <UNDEFINED> instruction: 0xf81e0000
    a1dc:	f9100028 			; <UNDEFINED> instruction: 0xf9100028
    a1e0:	ef000038 	svc	0x00000038
    a1e4:	1f000038 	svcne	0x00000038
    a1e8:	f3035001 	vhadd.u8	d5, d3, d1
    a1ec:	011f5001 	tsteq	pc, r1
    a1f0:	01f30351 	mvnseq	r0, r1, asr r3
    a1f4:	52011f51 	andpl	r1, r1, #324	; 0x144
    a1f8:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    a1fc:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    a200:	1f5301f3 	svcne	0x005301f3
    a204:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    a208:	021f0074 	andseq	r0, pc, #116	; 0x74
    a20c:	9103047d 	tstls	r3, sp, ror r4
    a210:	1d000604 	stcne	6, cr0, [r0, #-16]
    a214:	100028fe 	strdne	r2, [r0], -lr
    a218:	00003623 	andeq	r3, r0, r3, lsr #12
    a21c:	1a642800 	bne	1914224 <__RAM_SIZE+0x1814224>
    a220:	54010000 	strpl	r0, [r1], #-0
    a224:	75011406 	strvc	r1, [r1, #-1030]	; 0xfffffbfa
    a228:	44000007 	strmi	r0, [r0], #-7
    a22c:	a6100027 	ldrge	r0, [r0], -r7, lsr #32
    a230:	d8100027 	ldmdale	r0, {r0, r1, r2, r5}
    a234:	01000098 	swpeq	r0, r8, [r0]	; <UNPREDICTABLE>
    a238:	00003a63 	andeq	r3, r0, r3, ror #20
    a23c:	0025e11b 	eoreq	lr, r5, fp, lsl r1
    a240:	06540100 	ldrbeq	r0, [r4], -r0, lsl #2
    a244:	0000ea32 	andeq	lr, r0, r2, lsr sl
    a248:	00992000 	addseq	r2, r9, r0
    a24c:	00991c00 	addseq	r1, r9, r0, lsl #24
    a250:	1c521b00 	mrrcne	11, 0, r1, r2, cr0
    a254:	55010000 	strpl	r0, [r1, #-0]
    a258:	00be3606 	adcseq	r3, lr, r6, lsl #12
    a25c:	99420000 	stmdbls	r2, {}^	; <UNPREDICTABLE>
    a260:	993e0000 	ldmdbls	lr!, {}	; <UNPREDICTABLE>
    a264:	a31b0000 	tstge	fp, #0
    a268:	0100001b 	tsteq	r0, fp, lsl r0
    a26c:	35400656 	strbcc	r0, [r0, #-1622]	; 0xfffff9aa
    a270:	64000000 	strvs	r0, [r0], #-0
    a274:	60000099 	mulvs	r0, r9, r0
    a278:	1b000099 	blne	a4e4 <__HEAP_SIZE+0x94e4>
    a27c:	00002156 	andeq	r2, r0, r6, asr r1
    a280:	30065701 	andcc	r5, r6, r1, lsl #14
    a284:	000000a1 	andeq	r0, r0, r1, lsr #1
    a288:	00009986 	andeq	r9, r0, r6, lsl #19
    a28c:	00009982 	andeq	r9, r0, r2, lsl #19
    a290:	0016ff1b 	andseq	pc, r6, fp, lsl pc	; <UNPREDICTABLE>
    a294:	06580100 	ldrbeq	r0, [r8], -r0, lsl #2
    a298:	00012f2f 	andeq	r2, r1, pc, lsr #30
    a29c:	0099a800 	addseq	sl, r9, r0, lsl #16
    a2a0:	0099a400 	addseq	sl, r9, r0, lsl #8
    a2a4:	26821b00 	strcs	r1, [r2], r0, lsl #22
    a2a8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    a2ac:	37de3806 	ldrbcc	r3, [lr, r6, lsl #16]
    a2b0:	99cc0000 	stmibls	ip, {}^	; <UNPREDICTABLE>
    a2b4:	99c80000 	stmibls	r8, {}^	; <UNPREDICTABLE>
    a2b8:	f2180000 	vhadd.s16	d0, d8, d0
    a2bc:	0100001d 	tsteq	r0, sp, lsl r0
    a2c0:	7511065b 	ldrvc	r0, [r1, #-1627]	; 0xfffff9a5
    a2c4:	f4000007 	vst4.8	{d0-d3}, [r0], r7
    a2c8:	ec000099 	stc	0, cr0, [r0], {153}	; 0x99
    a2cc:	23000099 	movwcs	r0, #153	; 0x99
    a2d0:	00000538 	andeq	r0, r0, r8, lsr r5
    a2d4:	00003a23 	andeq	r3, r0, r3, lsr #20
    a2d8:	0021db18 	eoreq	sp, r1, r8, lsl fp
    a2dc:	06800100 	streq	r0, [r0], r0, lsl #2
    a2e0:	00060b1b 	andeq	r0, r6, fp, lsl fp
    a2e4:	009a2e00 	addseq	r2, sl, r0, lsl #28
    a2e8:	009a2800 	addseq	r2, sl, r0, lsl #16
    a2ec:	27581e00 	ldrbcs	r1, [r8, -r0, lsl #28]
    a2f0:	3dbd1000 	ldccc	0, cr1, [sp]
    a2f4:	39df0000 	ldmibcc	pc, {}^	; <UNPREDICTABLE>
    a2f8:	011f0000 	tsteq	pc, r0
    a2fc:	00750450 	rsbseq	r0, r5, r0, asr r4
    a300:	1e002432 	cfmvdhrne	mvd0, r2
    a304:	10002762 	andne	r2, r0, r2, ror #14
    a308:	00003dbd 			; <UNDEFINED> instruction: 0x00003dbd
    a30c:	000039f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    a310:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a314:	1e007408 	cdpne	4, 0, cr7, cr0, cr8, {0}
    a318:	1000276e 	andne	r2, r0, lr, ror #14
    a31c:	00003dcb 	andeq	r3, r0, fp, asr #27
    a320:	00003a12 	andeq	r3, r0, r2, lsl sl
    a324:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a328:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a32c:	1f300151 	svcne	0x00300151
    a330:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    a334:	a0200074 	eorge	r0, r0, r4, ror r0
    a338:	1d100027 	ldcne	0, cr0, [r0, #-156]	; 0xffffff64
    a33c:	1f00003d 	svcne	0x0000003d
    a340:	79025001 	stmdbvc	r2, {r0, ip, lr}
    a344:	20000000 	andcs	r0, r0, r0
    a348:	10002792 	mulne	r0, r2, r7
    a34c:	0000369b 	muleq	r0, fp, r6
    a350:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a354:	011f0076 	tsteq	pc, r6, ror r0	; <UNPREDICTABLE>
    a358:	00770251 	rsbseq	r0, r7, r1, asr r2
    a35c:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a360:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    a364:	00780253 	rsbseq	r0, r8, r3, asr r2
    a368:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    a36c:	06009103 	streq	r9, [r0], -r3, lsl #2
    a370:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    a374:	06049103 	streq	r9, [r4], -r3, lsl #2
    a378:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    a37c:	1f007402 	svcne	0x00007402
    a380:	010c7d02 	tsteq	ip, r2, lsl #26
    a384:	21000030 	tstcs	r0, r0, lsr r0
    a388:	0019ea01 	andseq	lr, r9, r1, lsl #20
    a38c:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    a390:	03c70112 	biceq	r0, r7, #-2147483644	; 0x80000004
    a394:	28c00000 	stmiacs	r0, {}^	; <UNPREDICTABLE>
    a398:	28e81000 	stmiacs	r8!, {ip}^
    a39c:	9a571000 	bls	15ce3a4 <__RAM_SIZE+0x14ce3a4>
    a3a0:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    a3a4:	1b00003b 	blne	a498 <__HEAP_SIZE+0x9498>
    a3a8:	000025e1 	andeq	r2, r0, r1, ror #11
    a3ac:	34051d01 	strcc	r1, [r5], #-3329	; 0xfffff2ff
    a3b0:	000000ea 	andeq	r0, r0, sl, ror #1
    a3b4:	00009a93 	muleq	r0, r3, sl
    a3b8:	00009a8f 	andeq	r9, r0, pc, lsl #21
    a3bc:	001c521b 	andseq	r5, ip, fp, lsl r2
    a3c0:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    a3c4:	0000be38 	andeq	fp, r0, r8, lsr lr
    a3c8:	009ab800 	addseq	fp, sl, r0, lsl #16
    a3cc:	009ab400 	addseq	fp, sl, r0, lsl #8
    a3d0:	1ba31b00 	blne	fe8d0fd8 <__StackTop+0xc67d0fd8>
    a3d4:	1f010000 	svcne	0x00010000
    a3d8:	00354205 	eorseq	r4, r5, r5, lsl #4
    a3dc:	9add0000 	bls	ff74a3e4 <__StackTop+0xc764a3e4>
    a3e0:	9ad90000 	bls	ff64a3e8 <__StackTop+0xc754a3e8>
    a3e4:	561b0000 	ldrpl	r0, [fp], -r0
    a3e8:	01000021 	tsteq	r0, r1, lsr #32
    a3ec:	a1320520 	teqge	r2, r0, lsr #10
    a3f0:	02000000 	andeq	r0, r0, #0
    a3f4:	fe00009b 	mcr2	0, 0, r0, cr0, cr11, {4}
    a3f8:	1900009a 	stmdbne	r0, {r1, r3, r4, r7}
    a3fc:	000016ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    a400:	31052101 	tstcc	r5, r1, lsl #2
    a404:	0000012f 	andeq	r0, r0, pc, lsr #2
    a408:	19009102 	stmdbne	r0, {r1, r8, ip, pc}
    a40c:	00001de3 	andeq	r1, r0, r3, ror #27
    a410:	39052201 	stmdbcc	r5, {r0, r9, sp}
    a414:	00000611 	andeq	r0, r0, r1, lsl r6
    a418:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
    a41c:	00001fe8 	andeq	r1, r0, r8, ror #31
    a420:	3a052301 	bcc	15302c <__RAM_SIZE+0x5302c>
    a424:	00000a05 	andeq	r0, r0, r5, lsl #20
    a428:	16089102 	strne	r9, [r8], -r2, lsl #2
    a42c:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    a430:	16052501 	strne	r2, [r5], -r1, lsl #10
    a434:	000003c7 	andeq	r0, r0, r7, asr #7
    a438:	18749102 	ldmdane	r4!, {r1, r8, ip, pc}^
    a43c:	00001df2 	strdeq	r1, [r0], -r2
    a440:	11052601 	tstne	r5, r1, lsl #12
    a444:	00000775 	andeq	r0, r0, r5, ror r7
    a448:	00009b25 	andeq	r9, r0, r5, lsr #22
    a44c:	00009b23 	andeq	r9, r0, r3, lsr #22
    a450:	0028dc1e 	eoreq	sp, r8, lr, lsl ip
    a454:	003b7e10 	eorseq	r7, fp, r0, lsl lr
    a458:	003b7400 	eorseq	r7, fp, r0, lsl #8
    a45c:	50011f00 	andpl	r1, r1, r0, lsl #30
    a460:	5001f303 	andpl	pc, r1, r3, lsl #6
    a464:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    a468:	1f5101f3 	svcne	0x005101f3
    a46c:	f3035201 	vhsub.u8	d5, d3, d1
    a470:	011f5201 	tsteq	pc, r1, lsl #4
    a474:	01f30353 	mvnseq	r0, r3, asr r3
    a478:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    a47c:	00740200 	rsbseq	r0, r4, r0, lsl #4
    a480:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    a484:	06049103 	streq	r9, [r4], -r3, lsl #2
    a488:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    a48c:	06089103 	streq	r9, [r8], -r3, lsl #2
    a490:	0c7d021f 	lfmeq	f0, 2, [sp], #-124	; 0xffffff84
    a494:	00749102 	rsbseq	r9, r4, r2, lsl #2
    a498:	0028e21d 	eoreq	lr, r8, sp, lsl r2
    a49c:	00362310 	eorseq	r2, r6, r0, lsl r3
    a4a0:	f5280000 			; <UNDEFINED> instruction: 0xf5280000
    a4a4:	0100001a 	tsteq	r0, sl, lsl r0
    a4a8:	011404e6 	tsteq	r4, r6, ror #9
    a4ac:	00000775 	andeq	r0, r0, r5, ror r7
    a4b0:	100025c8 	andne	r2, r0, r8, asr #11
    a4b4:	1000261a 	andne	r2, r0, sl, lsl r6
    a4b8:	00009b38 	andeq	r9, r0, r8, lsr fp
    a4bc:	003cb901 	eorseq	fp, ip, r1, lsl #18
    a4c0:	25e11b00 	strbcs	r1, [r1, #2816]!	; 0xb00
    a4c4:	e6010000 	str	r0, [r1], -r0
    a4c8:	00ea3804 	rsceq	r3, sl, r4, lsl #16
    a4cc:	9b8a0000 	blls	fe28a4d4 <__StackTop+0xc618a4d4>
    a4d0:	9b7c0000 	blls	1f0a4d8 <__RAM_SIZE+0x1e0a4d8>
    a4d4:	521b0000 	andspl	r0, fp, #0
    a4d8:	0100001c 	tsteq	r0, ip, lsl r0
    a4dc:	be3c04e7 	cfsubdlt	mvd0, mvd12, mvd7
    a4e0:	ed000000 	stc	0, cr0, [r0, #-0]
    a4e4:	e500009b 	str	r0, [r0, #-155]	; 0xffffff65
    a4e8:	1b00009b 	blne	a75c <__HEAP_SIZE+0x975c>
    a4ec:	00001ba3 	andeq	r1, r0, r3, lsr #23
    a4f0:	4604e801 	strmi	lr, [r4], -r1, lsl #16
    a4f4:	00000035 	andeq	r0, r0, r5, lsr r0
    a4f8:	00009c2c 	andeq	r9, r0, ip, lsr #24
    a4fc:	00009c24 	andeq	r9, r0, r4, lsr #24
    a500:	0021561b 	eoreq	r5, r1, fp, lsl r6
    a504:	04e90100 	strbteq	r0, [r9], #256	; 0x100
    a508:	0000a136 	andeq	sl, r0, r6, lsr r1
    a50c:	009c6b00 	addseq	r6, ip, r0, lsl #22
    a510:	009c6300 	addseq	r6, ip, r0, lsl #6
    a514:	16ff1b00 	ldrbtne	r1, [pc], r0, lsl #22
    a518:	ea010000 	b	4a520 <__HEAP_SIZE+0x49520>
    a51c:	012f3504 			; <UNDEFINED> instruction: 0x012f3504
    a520:	9ca60000 	stcls	0, cr0, [r6]
    a524:	9ca20000 	stcls	0, cr0, [r2]
    a528:	e31b0000 	tst	fp, #0
    a52c:	0100001d 	tsteq	r0, sp, lsl r0
    a530:	113d04eb 	teqne	sp, fp, ror #9
    a534:	ca000006 	bgt	a554 <__HEAP_SIZE+0x9554>
    a538:	c600009c 			; <UNDEFINED> instruction: 0xc600009c
    a53c:	1b00009c 	blne	a7b4 <__HEAP_SIZE+0x97b4>
    a540:	00001fe8 	andeq	r1, r0, r8, ror #31
    a544:	3e04ec01 	cdpcc	12, 0, cr14, cr4, cr1, {0}
    a548:	00000a05 	andeq	r0, r0, r5, lsl #20
    a54c:	00009cee 	andeq	r9, r0, lr, ror #25
    a550:	00009cea 	andeq	r9, r0, sl, ror #25
    a554:	0026821b 	eoreq	r8, r6, fp, lsl r2
    a558:	04ed0100 	strbteq	r0, [sp], #256	; 0x100
    a55c:	0037de3e 	eorseq	sp, r7, lr, lsr lr
    a560:	009d1200 	addseq	r1, sp, r0, lsl #4
    a564:	009d0e00 	addseq	r0, sp, r0, lsl #28
    a568:	1df21800 	ldclne	8, cr1, [r2]
    a56c:	ef010000 	svc	0x00010000
    a570:	07751104 	ldrbeq	r1, [r5, -r4, lsl #2]!
    a574:	9d360000 	ldcls	0, cr0, [r6, #-0]
    a578:	9d320000 	ldcls	0, cr0, [r2, #-0]
    a57c:	e81e0000 	ldmda	lr, {}	; <UNPREDICTABLE>
    a580:	cb100025 	blgt	40a61c <__RAM_SIZE+0x30a61c>
    a584:	7900003d 	stmdbvc	r0, {r0, r2, r3, r4, r5}
    a588:	1f00003c 	svcne	0x0000003c
    a58c:	74025001 	strvc	r5, [r2], #-1
    a590:	51011f00 	tstpl	r1, r0, lsl #30
    a594:	011f3001 	tsteq	pc, r1
    a598:	74080252 	strvc	r0, [r8], #-594	; 0xfffffdae
    a59c:	260a2000 	strcs	r2, [sl], -r0
    a5a0:	369b1000 	ldrcc	r1, [fp], r0
    a5a4:	011f0000 	tsteq	pc, r0
    a5a8:	00750250 	rsbseq	r0, r5, r0, asr r2
    a5ac:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a5b0:	011f0079 	tsteq	pc, r9, ror r0	; <UNPREDICTABLE>
    a5b4:	00780252 	rsbseq	r0, r8, r2, asr r2
    a5b8:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    a5bc:	021f0077 	andseq	r0, pc, #119	; 0x77
    a5c0:	9103007d 	tstls	r3, sp, ror r0
    a5c4:	021f0600 	andseq	r0, pc, #0, 12
    a5c8:	9103047d 	tstls	r3, sp, ror r4
    a5cc:	021f060c 	andseq	r0, pc, #12, 12	; 0xc00000
    a5d0:	7402087d 	strvc	r0, [r2], #-2173	; 0xfffff783
    a5d4:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    a5d8:	0030010c 	eorseq	r0, r0, ip, lsl #2
    a5dc:	01012f00 	tsteq	r1, r0, lsl #30
    a5e0:	00000c5a 	andeq	r0, r0, sl, asr ip
    a5e4:	00000c5a 	andeq	r0, r0, sl, asr ip
    a5e8:	0d01f708 	stceq	7, cr15, [r1, #-32]	; 0xffffffe0
    a5ec:	7501012f 	strvc	r0, [r1, #-303]	; 0xfffffed1
    a5f0:	7500000c 	strvc	r0, [r0, #-12]
    a5f4:	0800000c 	stmdaeq	r0, {r2, r3}
    a5f8:	300601d1 	ldrdcc	r0, [r6], -r1
    a5fc:	0e260101 	sufeqs	f0, f6, f1
    a600:	0e260000 	cdpeq	0, 2, cr0, cr6, cr0, {0}
    a604:	71060000 	mrsvc	r0, (UNDEF: 6)
    a608:	0101300d 	tsteq	r1, sp
    a60c:	00000c81 	andeq	r0, r0, r1, lsl #25
    a610:	00000c81 	andeq	r0, r0, r1, lsl #25
    a614:	300d7206 	andcc	r7, sp, r6, lsl #4
    a618:	11d10101 	bicsne	r0, r1, r1, lsl #2
    a61c:	11d10000 	bicsne	r0, r1, r0
    a620:	74060000 	strvc	r0, [r6], #-0
    a624:	01013011 	tsteq	r1, r1, lsl r0
    a628:	00000edc 	ldrdeq	r0, [r0], -ip
    a62c:	00000edc 	ldrdeq	r0, [r0], -ip
    a630:	300d7506 	andcc	r7, sp, r6, lsl #10
    a634:	0cbc0101 	ldfeqs	f0, [ip], #4
    a638:	0cbc0000 	ldceq	0, cr0, [ip]
    a63c:	6f060000 	svcvs	0x00060000
    a640:	0101300d 	tsteq	r1, sp
    a644:	00001456 	andeq	r1, r0, r6, asr r4
    a648:	00001456 	andeq	r1, r0, r6, asr r4
    a64c:	2f06b80a 	svccs	0x0006b80a
    a650:	0be50101 	bleq	ff94aa5c <__StackTop+0xc784aa5c>
    a654:	0be50000 	bleq	ff94a65c <__StackTop+0xc784a65c>
    a658:	b9080000 	stmdblt	r8, {}	; <UNPREDICTABLE>
    a65c:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
    a660:	00238c01 	eoreq	r8, r3, r1, lsl #24
    a664:	00238c00 	eoreq	r8, r3, r0, lsl #24
    a668:	01770600 	cmneq	r7, r0, lsl #12
    a66c:	01012f11 	tsteq	r1, r1, lsl pc
    a670:	0000260d 	andeq	r2, r0, sp, lsl #12
    a674:	0000260d 	andeq	r2, r0, sp, lsl #12
    a678:	0e01c70b 	cdpeq	7, 0, cr12, cr1, cr11, {0}
    a67c:	10010130 	andne	r0, r1, r0, lsr r1
    a680:	10000022 	andne	r0, r0, r2, lsr #32
    a684:	0a000022 	beq	a714 <__HEAP_SIZE+0x9714>
    a688:	012f06e3 	smulwteq	pc, r3, r6	; <UNPREDICTABLE>
    a68c:	0019a801 	andseq	sl, r9, r1, lsl #16
    a690:	0019a800 	andseq	sl, r9, r0, lsl #16
    a694:	05480b00 	strbeq	r0, [r8, #-2816]	; 0xfffff500
    a698:	0101300c 	tsteq	r1, ip
    a69c:	000016eb 	andeq	r1, r0, fp, ror #13
    a6a0:	000016eb 	andeq	r1, r0, fp, ror #13
    a6a4:	2f0cdc0a 	svccs	0x000cdc0a
    a6a8:	0bcf0101 	bleq	ff3caab4 <__StackTop+0xc72caab4>
    a6ac:	0bcf0000 	bleq	ff3ca6b4 <__StackTop+0xc72ca6b4>
    a6b0:	e7080000 	str	r0, [r8, -r0]
    a6b4:	01300601 	teqeq	r0, r1, lsl #12
    a6b8:	0001be01 	andeq	fp, r1, r1, lsl #28
    a6bc:	0001be00 	andeq	fp, r1, r0, lsl #28
    a6c0:	09210c00 	stmdbeq	r1!, {sl, fp}
    a6c4:	ab01012f 	blge	4ab88 <__HEAP_SIZE+0x49b88>
    a6c8:	ab00000b 	blge	a6fc <__HEAP_SIZE+0x96fc>
    a6cc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    a6d0:	300601c4 	andcc	r0, r6, r4, asr #3
    a6d4:	1e4e0101 	dvfnee	f0, f6, f1
    a6d8:	1e4e0000 	cdpne	0, 4, cr0, cr14, cr0, {0}
    a6dc:	800a0000 	andhi	r0, sl, r0
    a6e0:	01013017 	tsteq	r1, r7, lsl r0
    a6e4:	00000f4b 	andeq	r0, r0, fp, asr #30
    a6e8:	00000f4b 	andeq	r0, r0, fp, asr #30
    a6ec:	3108b50a 	tstcc	r8, sl, lsl #10
    a6f0:	01be0101 			; <UNDEFINED> instruction: 0x01be0101
    a6f4:	01b40000 			; <UNDEFINED> instruction: 0x01b40000
    a6f8:	000d0000 	andeq	r0, sp, r0
    a6fc:	001a5a00 	andseq	r5, sl, r0, lsl #20
    a700:	eb000200 	bl	af08 <__HEAP_SIZE+0x9f08>
    a704:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    a708:	0000dc01 	andeq	sp, r0, r1, lsl #24
    a70c:	28540c00 	ldmdacs	r4, {sl, fp}^
    a710:	01c50000 	biceq	r0, r5, r0
    a714:	0a900000 	beq	fe40a71c <__StackTop+0xc630a71c>
	...
    a720:	79970000 	ldmibvc	r7, {}	; <UNPREDICTABLE>
    a724:	0a020000 	beq	8a72c <__HEAP_SIZE+0x8972c>
    a728:	02000000 	andeq	r0, r0, #0
    a72c:	003517d1 	ldrsbteq	r1, [r5], -r1
    a730:	04030000 	streq	r0, [r3], #-0
    a734:	00023a07 	andeq	r3, r2, r7, lsl #20
    a738:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    a73c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    a740:	8e050803 	cdphi	8, 0, cr0, cr5, cr3, {0}
    a744:	03000002 	movweq	r0, #2
    a748:	02820408 	addeq	r0, r2, #8, 8	; 0x8000000
    a74c:	01030000 	mrseq	r0, (UNDEF: 3)
    a750:	0000ac06 	andeq	sl, r0, r6, lsl #24
    a754:	00000200 	andeq	r0, r0, r0, lsl #4
    a758:	2b030000 	blcs	ca760 <__HEAP_SIZE+0xc9760>
    a75c:	00006418 	andeq	r6, r0, r8, lsl r4
    a760:	08010300 	stmdaeq	r1, {r8, r9}
    a764:	000000aa 	andeq	r0, r0, sl, lsr #1
    a768:	de050203 	cdple	2, 0, cr0, cr5, cr3, {0}
    a76c:	03000002 	movweq	r0, #2
    a770:	00c90702 	sbceq	r0, r9, r2, lsl #14
    a774:	04030000 	streq	r0, [r3], #-0
    a778:	00029305 	andeq	r9, r2, r5, lsl #6
    a77c:	03b60200 			; <UNDEFINED> instruction: 0x03b60200
    a780:	4f030000 	svcmi	0x00030000
    a784:	00008c19 	andeq	r8, r0, r9, lsl ip
    a788:	07040300 	streq	r0, [r4, -r0, lsl #6]
    a78c:	00000235 	andeq	r0, r0, r5, lsr r2
    a790:	30070803 	andcc	r0, r7, r3, lsl #16
    a794:	05000002 	streq	r0, [r0, #-2]
    a798:	009a0604 	addseq	r0, sl, r4, lsl #12
    a79c:	01030000 	mrseq	r0, (UNDEF: 3)
    a7a0:	0000b308 	andeq	fp, r0, r8, lsl #6
    a7a4:	00a10600 	adceq	r0, r1, r0, lsl #12
    a7a8:	04070000 	streq	r0, [r7], #-0
    a7ac:	000000a8 	andeq	r0, r0, r8, lsr #1
    a7b0:	0000ad06 	andeq	sl, r0, r6, lsl #26
    a7b4:	00020200 	andeq	r0, r2, r0, lsl #4
    a7b8:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    a7bc:	00005813 	andeq	r5, r0, r3, lsl r8
    a7c0:	03b80200 			; <UNDEFINED> instruction: 0x03b80200
    a7c4:	30040000 	andcc	r0, r4, r0
    a7c8:	00008014 	andeq	r8, r0, r4, lsl r0
    a7cc:	1ef60200 	cdpne	2, 15, cr0, cr6, cr0, {0}
    a7d0:	24050000 	strcs	r0, [r5], #-0
    a7d4:	0000dc11 	andeq	sp, r0, r1, lsl ip
    a7d8:	e2040700 	and	r0, r4, #0, 14
    a7dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    a7e0:	0000ee01 	andeq	lr, r0, r1, lsl #28
    a7e4:	009a0900 	addseq	r0, sl, r0, lsl #18
    a7e8:	02000000 	andeq	r0, r0, #0
    a7ec:	00000ad1 	ldrdeq	r0, [r0], -r1
    a7f0:	c41a4906 	ldrgt	r4, [sl], #-2310	; 0xfffff6fa
    a7f4:	02000000 	andeq	r0, r0, #0
    a7f8:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    a7fc:	791a4a06 	ldmdbvc	sl, {r1, r2, r9, fp, lr}
    a800:	06000000 	streq	r0, [r0], -r0
    a804:	000000fa 	strdeq	r0, [r0], -sl
    a808:	000abc02 	andeq	fp, sl, r2, lsl #24
    a80c:	1a4b0600 	bne	12cc014 <__RAM_SIZE+0x11cc014>
    a810:	0000008c 	andeq	r0, r0, ip, lsl #1
    a814:	000b6a02 	andeq	r6, fp, r2, lsl #20
    a818:	1a510600 	bne	144c020 <__RAM_SIZE+0x134c020>
    a81c:	000000c4 	andeq	r0, r0, r4, asr #1
    a820:	00011706 	andeq	r1, r1, r6, lsl #14
    a824:	14b90a00 	ldrtne	r0, [r9], #2560	; 0xa00
    a828:	07140000 	ldreq	r0, [r4, -r0]
    a82c:	57080c0c 	strpl	r0, [r8, -ip, lsl #24]
    a830:	0b000001 	bleq	a83c <__HEAP_SIZE+0x983c>
    a834:	00001010 	andeq	r1, r0, r0, lsl r0
    a838:	100c1107 	andne	r1, ip, r7, lsl #2
    a83c:	00000117 	andeq	r0, r0, r7, lsl r1
    a840:	0b002302 	bleq	13450 <__HEAP_SIZE+0x12450>
    a844:	00001006 	andeq	r1, r0, r6
    a848:	0c0c1207 	sfmeq	f1, 4, [ip], {7}
    a84c:	00000157 	andeq	r0, r0, r7, asr r1
    a850:	00042302 	andeq	r2, r4, r2, lsl #6
    a854:	00009a0c 	andeq	r9, r0, ip, lsl #20
    a858:	00016700 	andeq	r6, r1, r0, lsl #14
    a85c:	00350d00 	eorseq	r0, r5, r0, lsl #26
    a860:	00030000 	andeq	r0, r3, r0
    a864:	001bef0e 	andseq	lr, fp, lr, lsl #30
    a868:	0c170700 	ldceq	7, cr0, [r7], {-0}
    a86c:	00012822 	andeq	r2, r1, r2, lsr #16
    a870:	0da80e00 	stceq	14, cr0, [r8]
    a874:	25070000 	strcs	r0, [r7, #-0]
    a878:	01282b0c 			; <UNDEFINED> instruction: 0x01282b0c
    a87c:	0a0a0000 	beq	28a884 <__RAM_SIZE+0x18a884>
    a880:	1c000012 	stcne	0, cr0, [r0], {18}
    a884:	100c2907 	andne	r2, ip, r7, lsl #18
    a888:	000001c0 	andeq	r0, r0, r0, asr #3
    a88c:	00100f0b 	andseq	r0, r0, fp, lsl #30
    a890:	0c2e0700 	stceq	7, cr0, [lr], #-0
    a894:	00010b11 	andeq	r0, r1, r1, lsl fp
    a898:	00230200 	eoreq	r0, r3, r0, lsl #4
    a89c:	0010060b 	andseq	r0, r0, fp, lsl #12
    a8a0:	0c2f0700 	stceq	7, cr0, [pc], #-0	; a8a8 <__HEAP_SIZE+0x98a8>
    a8a4:	00009a0c 	andeq	r9, r0, ip, lsl #20
    a8a8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a8ac:	0010220b 	andseq	r2, r0, fp, lsl #4
    a8b0:	0c300700 	ldceq	7, cr0, [r0], #-0
    a8b4:	0001741a 	andeq	r7, r1, sl, lsl r4
    a8b8:	08230200 	stmdaeq	r3!, {r9}
    a8bc:	16580e00 	ldrbne	r0, [r8], -r0, lsl #28
    a8c0:	34070000 	strcc	r0, [r7], #-0
    a8c4:	0181030c 	orreq	r0, r1, ip, lsl #6
    a8c8:	480a0000 	stmdami	sl, {}	; <UNPREDICTABLE>
    a8cc:	74000022 	strvc	r0, [r0], #-34	; 0xffffffde
    a8d0:	100c4307 	andne	r4, ip, r7, lsl #6
    a8d4:	000002ac 	andeq	r0, r0, ip, lsr #5
    a8d8:	001e640b 	andseq	r6, lr, fp, lsl #8
    a8dc:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    a8e0:	00009a0c 	andeq	r9, r0, ip, lsl #20
    a8e4:	00230200 	eoreq	r0, r3, r0, lsl #4
    a8e8:	00157e0b 	andseq	r7, r5, fp, lsl #28
    a8ec:	0c4c0700 	mcrreq	7, 0, r0, ip, cr0
    a8f0:	0002ac16 	andeq	sl, r2, r6, lsl ip
    a8f4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a8f8:	001c730b 	andseq	r7, ip, fp, lsl #6
    a8fc:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    a900:	00010b11 	andeq	r0, r1, r1, lsl fp
    a904:	2c230200 	sfmcs	f0, 4, [r3], #-0
    a908:	001e770b 	andseq	r7, lr, fp, lsl #14
    a90c:	0c4e0700 	mcrreq	7, 0, r0, lr, cr0
    a910:	00009a0c 	andeq	r9, r0, ip, lsl #20
    a914:	30230200 	eorcc	r0, r3, r0, lsl #4
    a918:	00207c0b 	eoreq	r7, r0, fp, lsl #24
    a91c:	0c530700 	mrrceq	7, 0, r0, r3, cr0
    a920:	0002bc0d 	andeq	fp, r2, sp, lsl #24
    a924:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    a928:	001e800b 	andseq	r8, lr, fp
    a92c:	0c580700 	mrrceq	7, 0, r0, r8, cr0
    a930:	00009a10 	andeq	r9, r0, r0, lsl sl
    a934:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    a938:	0017400b 	andseq	r4, r7, fp
    a93c:	0c5e0700 	mrrceq	7, 0, r0, lr, cr0
    a940:	0002cc15 	andeq	ip, r2, r5, lsl ip
    a944:	58230200 	stmdapl	r3!, {r9}
    a948:	00174a0b 	andseq	r4, r7, fp, lsl #20
    a94c:	0c610700 	stcleq	7, cr0, [r1], #-0
    a950:	0002cc15 	andeq	ip, r2, r5, lsl ip
    a954:	60230200 	eorvs	r0, r3, r0, lsl #4
    a958:	00202d0b 	eoreq	r2, r0, fp, lsl #26
    a95c:	0c640700 	stcleq	7, cr0, [r4], #-0
    a960:	00009a10 	andeq	r9, r0, r0, lsl sl
    a964:	68230200 	stmdavs	r3!, {r9}
    a968:	0022770b 	eoreq	r7, r2, fp, lsl #14
    a96c:	0c700700 	ldcleq	7, cr0, [r0], #-0
    a970:	0002dc12 	andeq	sp, r2, r2, lsl ip
    a974:	6c230200 	sfmvs	f0, 4, [r3], #-0
    a978:	001e6d0b 	andseq	r6, lr, fp, lsl #26
    a97c:	0c710700 	ldcleq	7, cr0, [r1], #-0
    a980:	0002ec11 	andeq	lr, r2, r1, lsl ip
    a984:	70230200 	eorvc	r0, r3, r0, lsl #4
    a988:	00186d0b 	andseq	r6, r8, fp, lsl #26
    a98c:	0c740700 	ldcleq	7, cr0, [r4], #-0
    a990:	0000b811 	andeq	fp, r0, r1, lsl r8
    a994:	71230200 			; <UNDEFINED> instruction: 0x71230200
    a998:	001f450b 	andseq	r4, pc, fp, lsl #10
    a99c:	0c780700 	ldcleq	7, cr0, [r8], #-0
    a9a0:	0000b811 	andeq	fp, r0, r1, lsl r8
    a9a4:	72230200 	eorvc	r0, r3, #0, 4
    a9a8:	01670c00 	cmneq	r7, r0, lsl #24
    a9ac:	02bc0000 	adcseq	r0, ip, #0
    a9b0:	350d0000 	strcc	r0, [sp, #-0]
    a9b4:	01000000 	mrseq	r0, (UNDEF: 0)
    a9b8:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    a9bc:	02cc0000 	sbceq	r0, ip, #0
    a9c0:	350d0000 	strcc	r0, [sp, #-0]
    a9c4:	1f000000 	svcne	0x00000000
    a9c8:	010b0c00 	tsteq	fp, r0, lsl #24
    a9cc:	02dc0000 	sbcseq	r0, ip, #0
    a9d0:	350d0000 	strcc	r0, [sp, #-0]
    a9d4:	01000000 	mrseq	r0, (UNDEF: 0)
    a9d8:	00c40c00 	sbceq	r0, r4, r0, lsl #24
    a9dc:	02ec0000 	rsceq	r0, ip, #0
    a9e0:	350d0000 	strcc	r0, [sp, #-0]
    a9e4:	00000000 	andeq	r0, r0, r0
    a9e8:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    a9ec:	02fc0000 	rscseq	r0, ip, #0
    a9f0:	350d0000 	strcc	r0, [sp, #-0]
    a9f4:	00000000 	andeq	r0, r0, r0
    a9f8:	16830e00 	strne	r0, [r3], r0, lsl #28
    a9fc:	7d070000 	stcvc	0, cr0, [r7, #-0]
    aa00:	01cd030c 	biceq	r0, sp, ip, lsl #6
    aa04:	040f0000 	streq	r0, [pc], #-0	; aa0c <__HEAP_SIZE+0x9a0c>
    aa08:	050c9107 	streq	r9, [ip, #-263]	; 0xfffffef9
    aa0c:	0000032e 	andeq	r0, r0, lr, lsr #6
    aa10:	000ffd10 	andeq	pc, pc, r0, lsl sp	; <UNPREDICTABLE>
    aa14:	0c930700 	ldceq	7, cr0, [r3], {0}
    aa18:	00009a10 	andeq	r9, r0, r0, lsl sl
    aa1c:	100f1000 	andne	r1, pc, r0
    aa20:	94070000 	strls	r0, [r7], #-0
    aa24:	010b150c 	tsteq	fp, ip, lsl #10
    aa28:	0a000000 	beq	aa30 <__HEAP_SIZE+0x9a30>
    aa2c:	0000161e 	andeq	r1, r0, lr, lsl r6
    aa30:	0c8d0764 	stceq	7, cr0, [sp], {100}	; 0x64
    aa34:	0003cb10 	andeq	ip, r3, r0, lsl fp
    aa38:	0ff40b00 	svceq	0x00f40b00
    aa3c:	8f070000 	svchi	0x00070000
    aa40:	03cb0c0c 	biceq	r0, fp, #12, 24	; 0xc00
    aa44:	23020000 	movwcs	r0, #8192	; 0x2000
    aa48:	00751100 	rsbseq	r1, r5, r0, lsl #2
    aa4c:	070c9507 	streq	r9, [ip, -r7, lsl #10]
    aa50:	00000309 	andeq	r0, r0, r9, lsl #6
    aa54:	0b0c2302 	bleq	313664 <__RAM_SIZE+0x213664>
    aa58:	0000157e 	andeq	r1, r0, lr, ror r5
    aa5c:	120c9707 	andne	r9, ip, #1835008	; 0x1c0000
    aa60:	000003db 	ldrdeq	r0, [r0], -fp
    aa64:	0b102302 	bleq	413674 <__RAM_SIZE+0x313674>
    aa68:	00001021 	andeq	r1, r0, r1, lsr #32
    aa6c:	110c9807 	tstne	ip, r7, lsl #16
    aa70:	000003eb 	andeq	r0, r0, fp, ror #7
    aa74:	0b482302 	bleq	1213684 <__RAM_SIZE+0x1113684>
    aa78:	00001376 	andeq	r1, r0, r6, ror r3
    aa7c:	0d0c9907 	vstreq.16	s18, [ip, #-14]	; <UNPREDICTABLE>
    aa80:	000003fb 	strdeq	r0, [r0], -fp
    aa84:	0b542302 	bleq	1513694 <__RAM_SIZE+0x1413694>
    aa88:	0000137f 	andeq	r1, r0, pc, ror r3
    aa8c:	110c9c07 	tstne	ip, r7, lsl #24
    aa90:	000000b8 	strheq	r0, [r0], -r8
    aa94:	0b562302 	bleq	15936a4 <__RAM_SIZE+0x14936a4>
    aa98:	00001018 	andeq	r1, r0, r8, lsl r0
    aa9c:	100ca007 	andne	sl, ip, r7
    aaa0:	0000009a 	muleq	r0, sl, r0
    aaa4:	0b582302 	bleq	16136b4 <__RAM_SIZE+0x15136b4>
    aaa8:	0000103d 	andeq	r1, r0, sp, lsr r0
    aaac:	150ca407 	strne	sl, [ip, #-1031]	; 0xfffffbf9
    aab0:	0000010b 	andeq	r0, r0, fp, lsl #2
    aab4:	0b5c2302 	bleq	17136c4 <__RAM_SIZE+0x16136c4>
    aab8:	00001388 	andeq	r1, r0, r8, lsl #7
    aabc:	110ca507 	tstne	ip, r7, lsl #10
    aac0:	000000b8 	strheq	r0, [r0], -r8
    aac4:	00602302 	rsbeq	r2, r0, r2, lsl #6
    aac8:	00009a0c 	andeq	r9, r0, ip, lsl #20
    aacc:	0003db00 	andeq	sp, r3, r0, lsl #22
    aad0:	00350d00 	eorseq	r0, r5, r0, lsl #26
    aad4:	00020000 	andeq	r0, r2, r0
    aad8:	0001c00c 	andeq	ip, r1, ip
    aadc:	0003eb00 	andeq	lr, r3, r0, lsl #22
    aae0:	00350d00 	eorseq	r0, r5, r0, lsl #26
    aae4:	00010000 	andeq	r0, r1, r0
    aae8:	00010b0c 	andeq	r0, r1, ip, lsl #22
    aaec:	0003fb00 	andeq	pc, r3, r0, lsl #22
    aaf0:	00350d00 	eorseq	r0, r5, r0, lsl #26
    aaf4:	00020000 	andeq	r0, r2, r0
    aaf8:	0000b80c 	andeq	fp, r0, ip, lsl #16
    aafc:	00040b00 	andeq	r0, r4, r0, lsl #22
    ab00:	00350d00 	eorseq	r0, r5, r0, lsl #26
    ab04:	00010000 	andeq	r0, r1, r0
    ab08:	00124e0e 	andseq	r4, r2, lr, lsl #28
    ab0c:	0ca70700 	stceq	7, cr0, [r7]
    ab10:	00032e03 	andeq	r2, r3, r3, lsl #28
    ab14:	27df0a00 	ldrbcs	r0, [pc, r0, lsl #20]
    ab18:	072c0000 	streq	r0, [ip, -r0]!
    ab1c:	97100cd4 			; <UNDEFINED> instruction: 0x97100cd4
    ab20:	0b000004 	bleq	ab38 <__HEAP_SIZE+0x9b38>
    ab24:	00000ff4 	strdeq	r0, [r0], -r4
    ab28:	0c0cd607 	stceq	6, cr13, [ip], {7}
    ab2c:	0000009a 	muleq	r0, sl, r0
    ab30:	0b002302 	bleq	13740 <__HEAP_SIZE+0x12740>
    ab34:	00001010 	andeq	r1, r0, r0, lsl r0
    ab38:	160cd707 	strne	sp, [ip], -r7, lsl #14
    ab3c:	00000167 	andeq	r0, r0, r7, ror #2
    ab40:	0b042302 	bleq	113750 <__RAM_SIZE+0x13750>
    ab44:	0000157e 	andeq	r1, r0, lr, ror r5
    ab48:	100cd807 	andne	sp, ip, r7, lsl #16
    ab4c:	00000117 	andeq	r0, r0, r7, lsl r1
    ab50:	0b182302 	bleq	613760 <__RAM_SIZE+0x513760>
    ab54:	000029a6 	andeq	r2, r0, r6, lsr #19
    ab58:	0c0cd907 			; <UNDEFINED> instruction: 0x0c0cd907
    ab5c:	0000009a 	muleq	r0, sl, r0
    ab60:	0b1c2302 	bleq	713770 <__RAM_SIZE+0x613770>
    ab64:	000028ef 	andeq	r2, r0, pc, ror #17
    ab68:	140cda07 	strne	sp, [ip], #-2567	; 0xfffff5f9
    ab6c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ab70:	0b202302 	bleq	813780 <__RAM_SIZE+0x713780>
    ab74:	000029af 	andeq	r2, r0, pc, lsr #19
    ab78:	150cdc07 	strne	sp, [ip, #-3079]	; 0xfffff3f9
    ab7c:	0000010b 	andeq	r0, r0, fp, lsl #2
    ab80:	0b242302 	bleq	913790 <__RAM_SIZE+0x813790>
    ab84:	00002acc 	andeq	r2, r0, ip, asr #21
    ab88:	0d0cde07 	stceq	14, cr13, [ip, #-28]	; 0xffffffe4
    ab8c:	000000b8 	strheq	r0, [r0], -r8
    ab90:	00282302 	eoreq	r2, r8, r2, lsl #6
    ab94:	0027d10e 	eoreq	sp, r7, lr, lsl #2
    ab98:	0cdf0700 	ldcleq	7, cr0, [pc], {0}
    ab9c:	00041803 	andeq	r1, r4, r3, lsl #16
    aba0:	0b911200 	bleq	fe44f3a8 <__StackTop+0xc634f3a8>
    aba4:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    aba8:	04fd0890 	ldrbteq	r0, [sp], #2192	; 0x890
    abac:	75130000 	ldrvc	r0, [r3, #-0]
    abb0:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    abb4:	01172493 			; <UNDEFINED> instruction: 0x01172493
    abb8:	23020000 	movwcs	r0, #8192	; 0x2000
    abbc:	0bde1300 	bleq	ff78f7c4 <__StackTop+0xc768f7c4>
    abc0:	94080000 	strls	r0, [r8], #-0
    abc4:	0004fd2d 	andeq	pc, r4, sp, lsr #26
    abc8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    abcc:	000c2113 	andeq	r2, ip, r3, lsl r1
    abd0:	2d950800 	ldccs	8, cr0, [r5]
    abd4:	000004fd 	strdeq	r0, [r0], -sp
    abd8:	13082302 	movwne	r2, #33538	; 0x8302
    abdc:	00000b89 	andeq	r0, r0, r9, lsl #23
    abe0:	9a0c9608 	bls	330408 <__RAM_SIZE+0x230408>
    abe4:	02000000 	andeq	r0, r0, #0
    abe8:	5e130c23 	cdppl	12, 1, cr0, cr3, cr3, {1}
    abec:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    abf0:	053e2897 	ldreq	r2, [lr, #-2199]!	; 0xfffff769
    abf4:	23020000 	movwcs	r0, #8192	; 0x2000
    abf8:	04070010 	streq	r0, [r7], #-16
    abfc:	000004a4 	andeq	r0, r0, r4, lsr #9
    ac00:	000c5412 	andeq	r5, ip, r2, lsl r4
    ac04:	ac081c00 	stcge	12, cr1, [r8], {-0}
    ac08:	00053e10 	andeq	r3, r5, r0, lsl lr
    ac0c:	0bbf1300 	bleq	fefcf814 <__StackTop+0xc6ecf814>
    ac10:	af080000 	svcge	0x00080000
    ac14:	00010b25 	andeq	r0, r1, r5, lsr #22
    ac18:	00230200 	eoreq	r0, r3, r0, lsl #4
    ac1c:	000c1913 	andeq	r1, ip, r3, lsl r9
    ac20:	26b00800 	ldrtcs	r0, [r0], r0, lsl #16
    ac24:	0000055c 	andeq	r0, r0, ip, asr r5
    ac28:	13042302 	movwne	r2, #17154	; 0x4302
    ac2c:	00000b80 	andeq	r0, r0, r0, lsl #23
    ac30:	5014b108 	andspl	fp, r4, r8, lsl #2
    ac34:	02000005 	andeq	r0, r0, #5
    ac38:	07000823 	streq	r0, [r0, -r3, lsr #16]
    ac3c:	00050304 	andeq	r0, r5, r4, lsl #6
    ac40:	1bf50200 	blne	ffd4b448 <__StackTop+0xc7c4b448>
    ac44:	9a080000 	bls	20ac4c <__RAM_SIZE+0x10ac4c>
    ac48:	0004a41b 	andeq	sl, r4, fp, lsl r4
    ac4c:	0dae0200 	sfmeq	f0, 4, [lr]
    ac50:	a6080000 	strge	r0, [r8], -r0
    ac54:	0004a424 	andeq	sl, r4, r4, lsr #8
    ac58:	44040700 	strmi	r0, [r4], #-1792	; 0xfffff900
    ac5c:	02000005 	andeq	r0, r0, #5
    ac60:	0000165e 	andeq	r1, r0, lr, asr r6
    ac64:	0303b308 	movweq	fp, #13064	; 0x3308
    ac68:	02000005 	andeq	r0, r0, #5
    ac6c:	000002e8 	andeq	r0, r0, r8, ror #5
    ac70:	7a2e5c09 	bvc	ba1c9c <__RAM_SIZE+0xaa1c9c>
    ac74:	07000005 	streq	r0, [r0, -r5]
    ac78:	00058004 	andeq	r8, r5, r4
    ac7c:	020f1400 	andeq	r1, pc, #0, 8
    ac80:	07010000 	streq	r0, [r1, -r0]
    ac84:	0000ee04 	andeq	lr, r0, r4, lsl #28
    ac88:	115c0200 	cmpne	ip, r0, lsl #4
    ac8c:	330a0000 	movwcc	r0, #40960	; 0xa000
    ac90:	00059824 	andeq	r9, r5, r4, lsr #16
    ac94:	9e040700 	cdpls	7, 0, cr0, cr4, cr0, {0}
    ac98:	14000005 	strne	r0, [r0], #-5
    ac9c:	00000ecc 	andeq	r0, r0, ip, asr #29
    aca0:	288c0201 	stmcs	ip, {r0, r9}
    aca4:	4e0b0000 	cdpmi	0, 0, cr0, cr11, cr0, {0}
    aca8:	0005b522 	andeq	fp, r5, r2, lsr #10
    acac:	05a40600 	streq	r0, [r4, #1536]!	; 0x600
    acb0:	04070000 	streq	r0, [r7], #-0
    acb4:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    acb8:	002be312 	eoreq	lr, fp, r2, lsl r3
    acbc:	53012c00 	movwpl	r2, #7168	; 0x1c00
    acc0:	00063214 	andeq	r3, r6, r4, lsl r2
    acc4:	27841300 	strcs	r1, [r4, r0, lsl #6]
    acc8:	55010000 	strpl	r0, [r1, #-0]
    accc:	0000ad16 	andeq	sl, r0, r6, lsl sp
    acd0:	00230200 	eoreq	r0, r3, r0, lsl #4
    acd4:	002a6b13 	eoreq	r6, sl, r3, lsl fp
    acd8:	14560100 	ldrbne	r0, [r6], #-256	; 0xffffff00
    acdc:	00000544 	andeq	r0, r0, r4, asr #10
    ace0:	13042302 	movwne	r2, #17154	; 0x4302
    ace4:	00002705 	andeq	r2, r0, r5, lsl #14
    ace8:	17145701 	ldrne	r5, [r4, -r1, lsl #14]
    acec:	02000001 	andeq	r0, r0, #1
    acf0:	5e131823 	cdppl	8, 1, cr1, cr3, cr3, {1}
    acf4:	0100002b 	tsteq	r0, fp, lsr #32
    acf8:	009a1058 	addseq	r1, sl, r8, asr r0
    acfc:	23020000 	movwcs	r0, #8192	; 0x2000
    ad00:	2719131c 			; <UNDEFINED> instruction: 0x2719131c
    ad04:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    ad08:	0006323e 	andeq	r3, r6, lr, lsr r2
    ad0c:	20230200 	eorcs	r0, r3, r0, lsl #4
    ad10:	00273b13 	eoreq	r3, r7, r3, lsl fp
    ad14:	195b0100 	ldmdbne	fp, {r8}^
    ad18:	0000010b 	andeq	r0, r0, fp, lsl #2
    ad1c:	13242302 			; <UNDEFINED> instruction: 0x13242302
    ad20:	00002b03 	andeq	r2, r0, r3, lsl #22
    ad24:	b8115d01 	ldmdalt	r1, {r0, r8, sl, fp, ip, lr}
    ad28:	02000000 	andeq	r0, r0, #0
    ad2c:	02002823 	andeq	r2, r0, #2293760	; 0x230000
    ad30:	00002803 	andeq	r2, r0, r3, lsl #16
    ad34:	3e11530b 	cdpcc	3, 1, cr5, cr1, cr11, {0}
    ad38:	07000006 	streq	r0, [r0, -r6]
    ad3c:	00064404 	andeq	r4, r6, r4, lsl #8
    ad40:	50010800 	andpl	r0, r1, r0, lsl #16
    ad44:	09000006 	stmdbeq	r0, {r1, r2}
    ad48:	000005a4 	andeq	r0, r0, r4, lsr #11
    ad4c:	2b310200 	blcs	c4b554 <__RAM_SIZE+0xb4b554>
    ad50:	590b0000 	stmdbpl	fp, {}	; <UNPREDICTABLE>
    ad54:	00065c11 	andeq	r5, r6, r1, lsl ip
    ad58:	62040700 	andvs	r0, r4, #0, 14
    ad5c:	08000006 	stmdaeq	r0, {r1, r2}
    ad60:	00067301 	andeq	r7, r6, r1, lsl #6
    ad64:	009a0900 	addseq	r0, sl, r0, lsl #18
    ad68:	c4090000 	strgt	r0, [r9], #-0
    ad6c:	00000000 	andeq	r0, r0, r0
    ad70:	0029b802 	eoreq	fp, r9, r2, lsl #16
    ad74:	075e0100 	ldrbeq	r0, [lr, -r0, lsl #2]
    ad78:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    ad7c:	0027d702 	eoreq	sp, r7, r2, lsl #14
    ad80:	14620100 	strbtne	r0, [r2], #-256	; 0xffffff00
    ad84:	00000673 	andeq	r0, r0, r3, ror r6
    ad88:	002c7c12 	eoreq	r7, ip, r2, lsl ip
    ad8c:	69010800 	stmdbvs	r1, {fp}
    ad90:	0006b714 	andeq	fp, r6, r4, lsl r7
    ad94:	2bc51300 	blcs	ff14f99c <__StackTop+0xc704f99c>
    ad98:	6b010000 	blvs	4ada0 <__HEAP_SIZE+0x49da0>
    ad9c:	00011714 	andeq	r1, r1, r4, lsl r7
    ada0:	00230200 	eoreq	r0, r3, r0, lsl #4
    ada4:	002bbd13 	eoreq	fp, fp, r3, lsl sp
    ada8:	136c0100 	cmnne	ip, #0, 2
    adac:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    adb0:	00042302 	andeq	r2, r4, r2, lsl #6
    adb4:	067f0407 	ldrbteq	r0, [pc], -r7, lsl #8
    adb8:	b7060000 	strlt	r0, [r6, -r0]
    adbc:	02000006 	andeq	r0, r0, #6
    adc0:	000027b4 			; <UNDEFINED> instruction: 0x000027b4
    adc4:	8b076d01 	blhi	1e61d0 <__RAM_SIZE+0xe61d0>
    adc8:	12000006 	andne	r0, r0, #6
    adcc:	00002a12 	andeq	r2, r0, r2, lsl sl
    add0:	1470010c 	ldrbtne	r0, [r0], #-268	; 0xfffffef4
    add4:	00000709 	andeq	r0, r0, r9, lsl #14
    add8:	00271913 	eoreq	r1, r7, r3, lsl r9
    addc:	1a730100 	bne	1ccb1e4 <__RAM_SIZE+0x1bcb1e4>
    ade0:	00000650 	andeq	r0, r0, r0, asr r6
    ade4:	13002302 	movwne	r2, #770	; 0x302
    ade8:	00002abf 			; <UNDEFINED> instruction: 0x00002abf
    adec:	9a107401 	bls	427df8 <__RAM_SIZE+0x327df8>
    adf0:	02000000 	andeq	r0, r0, #0
    adf4:	90130423 	andsls	r0, r3, r3, lsr #8
    adf8:	01000027 	tsteq	r0, r7, lsr #32
    adfc:	00c41275 	sbceq	r1, r4, r5, ror r2
    ae00:	23020000 	movwcs	r0, #8192	; 0x2000
    ae04:	c4020008 	strgt	r0, [r2], #-8
    ae08:	01000028 	tsteq	r0, r8, lsr #32
    ae0c:	06ce0776 			; <UNDEFINED> instruction: 0x06ce0776
    ae10:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    ae14:	15000007 	strne	r0, [r0, #-7]
    ae18:	097d010c 	ldmdbeq	sp!, {r2, r3, r8}^
    ae1c:	0000073c 	andeq	r0, r0, ip, lsr r7
    ae20:	00276416 	eoreq	r6, r7, r6, lsl r4
    ae24:	1e7f0100 	rpwnee	f0, f7, f0
    ae28:	000006c2 	andeq	r0, r0, r2, asr #13
    ae2c:	002a4616 	eoreq	r4, sl, r6, lsl r6
    ae30:	26840100 	strcs	r0, [r4], r0, lsl #2
    ae34:	00000709 	andeq	r0, r0, r9, lsl #14
    ae38:	292d1200 	pushcs	{r9, ip}
    ae3c:	01100000 	tsteq	r0, r0
    ae40:	0766147a 			; <UNDEFINED> instruction: 0x0766147a
    ae44:	68130000 	ldmdavs	r3, {}	; <UNPREDICTABLE>
    ae48:	0100002b 	tsteq	r0, fp, lsr #32
    ae4c:	00fa147c 	rscseq	r1, sl, ip, ror r4
    ae50:	23020000 	movwcs	r0, #8192	; 0x2000
    ae54:	00751700 	rsbseq	r1, r5, r0, lsl #14
    ae58:	1a0b8601 	bne	2ec664 <__RAM_SIZE+0x1ec664>
    ae5c:	02000007 	andeq	r0, r0, #7
    ae60:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    ae64:	00002b73 	andeq	r2, r0, r3, ror fp
    ae68:	3c078701 	stccc	7, cr8, [r7], {1}
    ae6c:	18000007 	stmdane	r0, {r0, r1, r2}
    ae70:	000029bf 			; <UNDEFINED> instruction: 0x000029bf
    ae74:	62238f01 	eorvs	r8, r3, #1, 30
    ae78:	05000005 	streq	r0, [r0, #-5]
    ae7c:	008c9c03 	addeq	r9, ip, r3, lsl #24
    ae80:	29d11838 	ldmibcs	r1, {r3, r4, r5, fp, ip}^
    ae84:	90010000 	andls	r0, r1, r0
    ae88:	00056223 	andeq	r6, r5, r3, lsr #4
    ae8c:	b8030500 	stmdalt	r3, {r8, sl}
    ae90:	1838008c 	ldmdane	r8!, {r2, r3, r7}
    ae94:	00002b42 	andeq	r2, r0, r2, asr #22
    ae98:	a8259101 	stmdage	r5!, {r0, r8, ip, pc}
    ae9c:	05000007 	streq	r0, [r0, #-7]
    aea0:	008bf403 	addeq	pc, fp, r3, lsl #8
    aea4:	62040738 	andvs	r0, r4, #56, 14	; 0xe00000
    aea8:	18000005 	stmdane	r0, {r0, r2}
    aeac:	0000297c 	andeq	r2, r0, ip, ror r9
    aeb0:	a8259201 	stmdage	r5!, {r0, r9, ip, pc}
    aeb4:	05000007 	streq	r0, [r0, #-7]
    aeb8:	008bf803 	addeq	pc, fp, r3, lsl #16
    aebc:	27c51838 			; <UNDEFINED> instruction: 0x27c51838
    aec0:	95010000 	strls	r0, [r1, #-0]
    aec4:	00058c2a 	andeq	r8, r5, sl, lsr #24
    aec8:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    aecc:	1838008d 	ldmdane	r8!, {r0, r2, r3, r7}
    aed0:	00002ad5 	ldrdeq	r2, [r0], -r5
    aed4:	6e299601 	cfmadda32vs	mvax0, mvax9, mvfx9, mvfx1
    aed8:	05000005 	streq	r0, [r0, #-5]
    aedc:	008d4003 	addeq	r4, sp, r3
    aee0:	87011938 	smladxhi	r1, r8, r9, r1
    aee4:	0100002b 	tsteq	r0, fp, lsr #32
    aee8:	010a0532 	tsteq	sl, r2, lsr r5
	...
    aef4:	01007d02 	tsteq	r0, r2, lsl #26
    aef8:	2b98011a 	blcs	fe60b368 <__StackTop+0xc650b368>
    aefc:	20010000 	andcs	r0, r1, r0
    af00:	00010e05 	andeq	r0, r1, r5, lsl #28
    af04:	00000000 	andeq	r0, r0, r0
    af08:	02000000 	andeq	r0, r0, #0
    af0c:	3501007d 	strcc	r0, [r1, #-125]	; 0xffffff83
    af10:	1b000008 	blne	af38 <__HEAP_SIZE+0x9f38>
    af14:	00002bbe 			; <UNDEFINED> instruction: 0x00002bbe
    af18:	32052001 	andcc	r2, r5, #1
    af1c:	000005a4 	andeq	r0, r0, r4, lsr #11
    af20:	3b1b5001 	blcc	6def2c <__RAM_SIZE+0x5def2c>
    af24:	01000027 	tsteq	r0, r7, lsr #32
    af28:	0b300521 	bleq	c0c3b4 <__RAM_SIZE+0xb0c3b4>
    af2c:	01000001 	tsteq	r0, r1
    af30:	011c0051 	tsteq	ip, r1, asr r0
    af34:	000028d9 	ldrdeq	r2, [r0], -r9
    af38:	15051201 	strne	r1, [r5, #-513]	; 0xfffffdff
    af3c:	00010b01 	andeq	r0, r1, r1, lsl #22
	...
    af48:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    af4c:	00086a01 	andeq	r6, r8, r1, lsl #20
    af50:	2bbe1d00 	blcs	fef92358 <__StackTop+0xc6e92358>
    af54:	12010000 	andne	r0, r1, #0
    af58:	05a43a05 	streq	r3, [r4, #2565]!	; 0xa05
    af5c:	9d580000 	ldclls	0, cr0, [r8, #-0]
    af60:	9d540000 	ldclls	0, cr0, [r4, #-0]
    af64:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    af68:	00279d01 	eoreq	r9, r7, r1, lsl #26
    af6c:	04ef0100 	strbteq	r0, [pc], #256	; af74 <__HEAP_SIZE+0x9f74>
    af70:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    af7c:	9d790000 	ldclls	0, cr0, [r9, #-0]
    af80:	20010000 	andcs	r0, r1, r0
    af84:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    af88:	00002bd3 	ldrdeq	r2, [r0], -r3
    af8c:	3d04ef01 	stccc	15, cr14, [r4, #-4]
    af90:	00000650 	andeq	r0, r0, r0, asr r6
    af94:	00009db7 			; <UNDEFINED> instruction: 0x00009db7
    af98:	00009db1 			; <UNDEFINED> instruction: 0x00009db1
    af9c:	002abf1d 	eoreq	fp, sl, sp, lsl pc
    afa0:	04f00100 	ldrbteq	r0, [r0], #256	; 0x100
    afa4:	00009a33 	andeq	r9, r0, r3, lsr sl
    afa8:	009dea00 	addseq	lr, sp, r0, lsl #20
    afac:	009de400 	addseq	lr, sp, r0, lsl #8
    afb0:	27901d00 	ldrcs	r1, [r0, r0, lsl #26]
    afb4:	f1010000 	setend	le
    afb8:	00c43504 	sbceq	r3, r4, r4, lsl #10
    afbc:	9e1d0000 	cdpls	0, 1, cr0, cr13, cr0, {0}
    afc0:	9e170000 	cdpls	0, 1, cr0, cr7, cr0, {0}
    afc4:	e01d0000 	ands	r0, sp, r0
    afc8:	01000023 	tsteq	r0, r3, lsr #32
    afcc:	173704f2 			; <UNDEFINED> instruction: 0x173704f2
    afd0:	4f000001 	svcmi	0x00000001
    afd4:	4900009e 	stmdbmi	r0, {r1, r2, r3, r4, r7}
    afd8:	1f00009e 	svcne	0x0000009e
    afdc:	00002b55 	andeq	r2, r0, r5, asr fp
    afe0:	2104f401 	tstcs	r4, r1, lsl #8	; <UNPREDICTABLE>
    afe4:	00000766 	andeq	r0, r0, r6, ror #14
    afe8:	20689102 	rsbcs	r9, r8, r2, lsl #2
    afec:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    aff0:	1804f501 	stmdane	r4, {r0, r8, sl, ip, sp, lr, pc}
    aff4:	000000fa 	strdeq	r0, [r0], -sl
    aff8:	00009e7d 	andeq	r9, r0, sp, ror lr
    affc:	00009e7b 	andeq	r9, r0, fp, ror lr
    b000:	00000021 	andeq	r0, r0, r1, lsr #32
    b004:	00193600 	andseq	r3, r9, r0, lsl #12
    b008:	51012200 	mrspl	r2, R9_usr
    b00c:	22007d02 	andcs	r7, r0, #2, 26	; 0x80
    b010:	f3035201 	vhsub.u8	d5, d3, d1
    b014:	01225301 			; <UNDEFINED> instruction: 0x01225301
    b018:	00300153 	eorseq	r0, r0, r3, asr r1
    b01c:	02011e00 	andeq	r1, r1, #0, 28
    b020:	0100002c 	tsteq	r0, ip, lsr #32
    b024:	011404d1 			; <UNDEFINED> instruction: 0x011404d1
    b028:	000000fa 	strdeq	r0, [r0], -sl
	...
    b034:	00009e90 	muleq	r0, r0, lr
    b038:	0009d601 	andeq	sp, r9, r1, lsl #12
    b03c:	2bd31d00 	blcs	ff4d2444 <__StackTop+0xc73d2444>
    b040:	d1010000 	mrsle	r0, (UNDEF: 1)
    b044:	06504404 	ldrbeq	r4, [r0], -r4, lsl #8
    b048:	9ece0000 	cdpls	0, 12, cr0, cr14, cr0, {0}
    b04c:	9ec80000 	cdpls	0, 12, cr0, cr8, cr0, {0}
    b050:	bf1d0000 	svclt	0x001d0000
    b054:	0100002a 	tsteq	r0, sl, lsr #32
    b058:	9a3a04d2 	bls	e8c3a8 <__RAM_SIZE+0xd8c3a8>
    b05c:	01000000 	mrseq	r0, (UNDEF: 0)
    b060:	fb00009f 	blx	b2e6 <__HEAP_SIZE+0xa2e6>
    b064:	1d00009e 	stcne	0, cr0, [r0, #-632]	; 0xfffffd88
    b068:	00002790 	muleq	r0, r0, r7
    b06c:	3c04d301 	stccc	3, cr13, [r4], {1}
    b070:	000000c4 	andeq	r0, r0, r4, asr #1
    b074:	00009f34 	andeq	r9, r0, r4, lsr pc
    b078:	00009f2e 	andeq	r9, r0, lr, lsr #30
    b07c:	000d2f1d 	andeq	r2, sp, sp, lsl pc
    b080:	04d40100 	ldrbeq	r0, [r4], #256	; 0x100
    b084:	0009d640 	andeq	sp, r9, r0, asr #12
    b088:	009f6600 	addseq	r6, pc, r0, lsl #12
    b08c:	009f6000 	addseq	r6, pc, r0
    b090:	2b551f00 	blcs	1552c98 <__RAM_SIZE+0x1452c98>
    b094:	d6010000 	strle	r0, [r1], -r0
    b098:	07662104 	strbeq	r2, [r6, -r4, lsl #2]!
    b09c:	91020000 	mrsls	r0, (UNDEF: 2)
    b0a0:	1cd12068 	ldclne	0, cr2, [r1], {104}	; 0x68
    b0a4:	d7010000 	strle	r0, [r1, -r0]
    b0a8:	00fa1804 	rscseq	r1, sl, r4, lsl #16
    b0ac:	9f940000 	svcls	0x00940000
    b0b0:	9f920000 	svcls	0x00920000
    b0b4:	00210000 	eoreq	r0, r1, r0
    b0b8:	45000000 	strmi	r0, [r0, #-0]
    b0bc:	22000019 	andcs	r0, r0, #25
    b0c0:	7d025101 	stfvcs	f5, [r2, #-4]
    b0c4:	52012200 	andpl	r2, r1, #0, 4
    b0c8:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
    b0cc:	01530122 	cmpeq	r3, r2, lsr #2
    b0d0:	07000030 	smladxeq	r0, r0, r0, r0
    b0d4:	0000fa04 	andeq	pc, r0, r4, lsl #20
    b0d8:	09d60600 	ldmibeq	r6, {r9, sl}^
    b0dc:	01230000 			; <UNDEFINED> instruction: 0x01230000
    b0e0:	00002a5a 	andeq	r2, r0, sl, asr sl
    b0e4:	0a04bc01 	beq	13a0f0 <__RAM_SIZE+0x3a0f0>
    b0e8:	00000001 	andeq	r0, r0, r1
    b0ec:	00000000 	andeq	r0, r0, r0
    b0f0:	009fa700 	addseq	sl, pc, r0, lsl #14
    b0f4:	0a4f0100 	beq	13cb4fc <__RAM_SIZE+0x12cb4fc>
    b0f8:	be1d0000 	cdplt	0, 1, cr0, cr13, cr0, {0}
    b0fc:	0100002b 	tsteq	r0, fp, lsr #32
    b100:	a42a04bc 	strtge	r0, [sl], #-1212	; 0xfffffb44
    b104:	cb000005 	blgt	b120 <__HEAP_SIZE+0xa120>
    b108:	c700009f 			; <UNDEFINED> instruction: 0xc700009f
    b10c:	1d00009f 	stcne	0, cr0, [r0, #-636]	; 0xfffffd84
    b110:	00002a7a 	andeq	r2, r0, sl, ror sl
    b114:	2304bd01 	movwcs	fp, #19713	; 0x4d01
    b118:	0000009a 	muleq	r0, sl, r0
    b11c:	00009fed 	andeq	r9, r0, sp, ror #31
    b120:	00009fe9 	andeq	r9, r0, r9, ror #31
    b124:	002bbd20 	eoreq	fp, fp, r0, lsr #26
    b128:	04bf0100 	ldrteq	r0, [pc], #256	; b130 <__HEAP_SIZE+0xa130>
    b12c:	0006bd19 	andeq	fp, r6, r9, lsl sp
    b130:	00a00f00 	adceq	r0, r0, r0, lsl #30
    b134:	00a00b00 	adceq	r0, r0, r0, lsl #22
    b138:	00002400 	andeq	r2, r0, r0, lsl #8
    b13c:	19540000 	ldmdbne	r4, {}^	; <UNPREDICTABLE>
    b140:	00240000 	eoreq	r0, r4, r0
    b144:	62000000 	andvs	r0, r0, #0
    b148:	00000019 	andeq	r0, r0, r9, lsl r0
    b14c:	2942011e 	stmdbcs	r2, {r1, r2, r3, r4, r8}^
    b150:	a7010000 	strge	r0, [r1, -r0]
    b154:	9a010c04 	bls	4e16c <__HEAP_SIZE+0x4d16c>
	...
    b160:	2d000000 	stccs	0, cr0, [r0, #-0]
    b164:	010000a0 	smlatbeq	r0, r0, r0, r0
    b168:	00000ac1 	andeq	r0, r0, r1, asr #21
    b16c:	002bbe1d 	eoreq	fp, fp, sp, lsl lr
    b170:	04a70100 	strteq	r0, [r7], #256	; 0x100
    b174:	0005b033 	andeq	fp, r5, r3, lsr r0
    b178:	00a05300 	adceq	r5, r0, r0, lsl #6
    b17c:	00a04d00 	adceq	r4, r0, r0, lsl #26
    b180:	2bbd2000 	blcs	fef53188 <__StackTop+0xc6e53188>
    b184:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    b188:	06bd1904 	ldrteq	r1, [sp], r4, lsl #18
    b18c:	a0850000 	addge	r0, r5, r0
    b190:	a07f0000 	rsbsge	r0, pc, r0
    b194:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    b198:	01000029 	tsteq	r0, r9, lsr #32
    b19c:	9a1004aa 	bls	40c44c <__RAM_SIZE+0x30c44c>
    b1a0:	b3000000 	movwlt	r0, #0
    b1a4:	b10000a0 	smlatblt	r0, r0, r0, r0
    b1a8:	240000a0 	strcs	r0, [r0], #-160	; 0xffffff60
    b1ac:	00000000 	andeq	r0, r0, r0
    b1b0:	00001954 	andeq	r1, r0, r4, asr r9
    b1b4:	00000024 	andeq	r0, r0, r4, lsr #32
    b1b8:	00196200 	andseq	r6, r9, r0, lsl #4
    b1bc:	011e0000 	tsteq	lr, r0
    b1c0:	0000290c 	andeq	r2, r0, ip, lsl #18
    b1c4:	10048a01 	andne	r8, r4, r1, lsl #20
    b1c8:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    b1d4:	00a0c600 	adceq	ip, r0, r0, lsl #12
    b1d8:	0b330100 	bleq	ccb5e0 <__RAM_SIZE+0xbcb5e0>
    b1dc:	be1d0000 	cdplt	0, 1, cr0, cr13, cr0, {0}
    b1e0:	0100002b 	tsteq	r0, fp, lsr #32
    b1e4:	a433048a 	ldrtge	r0, [r3], #-1162	; 0xfffffb76
    b1e8:	f0000005 			; <UNDEFINED> instruction: 0xf0000005
    b1ec:	e60000a0 	str	r0, [r0], -r0, lsr #1
    b1f0:	200000a0 	andcs	r0, r0, r0, lsr #1
    b1f4:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    b1f8:	14048c01 	strne	r8, [r4], #-3073	; 0xfffff3ff
    b1fc:	000000fa 	strdeq	r0, [r0], -sl
    b200:	0000a137 	andeq	sl, r0, r7, lsr r1
    b204:	0000a135 	andeq	sl, r0, r5, lsr r1
    b208:	002bbd20 	eoreq	fp, fp, r0, lsr #26
    b20c:	048d0100 	streq	r0, [sp], #256	; 0x100
    b210:	0006b713 	andeq	fp, r6, r3, lsl r7
    b214:	00a15400 	adceq	r5, r1, r0, lsl #8
    b218:	00a14a00 	adceq	r4, r1, r0, lsl #20
    b21c:	00002400 	andeq	r2, r0, r0, lsl #8
    b220:	19540000 	ldmdbne	r4, {}^	; <UNPREDICTABLE>
    b224:	00240000 	eoreq	r0, r4, r0
    b228:	62000000 	andvs	r0, r0, #0
    b22c:	00000019 	andeq	r0, r0, r9, lsl r0
    b230:	00283725 	eoreq	r3, r8, r5, lsr #14
    b234:	04570100 	ldrbeq	r0, [r7], #-256	; 0xffffff00
    b238:	34640111 	strbtcc	r0, [r4], #-273	; 0xfffffeef
    b23c:	34c41000 	strbcc	r1, [r4], #0
    b240:	a1991000 	orrsge	r1, r9, r0
    b244:	e5010000 	str	r0, [r1, #-0]
    b248:	2600000b 	strcs	r0, [r0], -fp
    b24c:	10003492 	mulne	r0, r2, r4
    b250:	100034a6 	andne	r3, r0, r6, lsr #9
    b254:	00000bae 	andeq	r0, r0, lr, lsr #23
    b258:	0027521f 	eoreq	r5, r7, pc, lsl r2
    b25c:	04690100 	strbteq	r0, [r9], #-256	; 0xffffff00
    b260:	00040b3a 	andeq	r0, r4, sl, lsr fp
    b264:	d8030500 	stmdale	r3, {r8, sl}
    b268:	1f38008c 	svcne	0x0038008c
    b26c:	00002aa5 	andeq	r2, r0, r5, lsr #21
    b270:	34046a01 	strcc	r6, [r4], #-2561	; 0xfffff5ff
    b274:	00000be5 	andeq	r0, r0, r5, ror #23
    b278:	8bfc0305 	blhi	fff0be94 <__StackTop+0xc7e0be94>
    b27c:	a2213800 	eorge	r3, r1, #0, 16
    b280:	70100034 	andsvc	r0, r0, r4, lsr r0
    b284:	22000019 	andcs	r0, r0, #25
    b288:	3a015001 	bcc	5f294 <__HEAP_SIZE+0x5e294>
    b28c:	01510122 	cmpeq	r1, r2, lsr #2
    b290:	52012240 	andpl	r2, r1, #64, 4
    b294:	8bfc0305 	blhi	fff0beb0 <__StackTop+0xc7e0beb0>
    b298:	01223800 			; <UNDEFINED> instruction: 0x01223800
    b29c:	d8030553 	stmdale	r3, {r0, r1, r4, r6, r8, sl}
    b2a0:	2238008c 	eorscs	r0, r8, #140	; 0x8c
    b2a4:	01007d02 	tsteq	r0, r2, lsl #26
    b2a8:	24000030 	strcs	r0, [r0], #-48	; 0xffffffd0
    b2ac:	1000346c 	andne	r3, r0, ip, ror #8
    b2b0:	00001954 	andeq	r1, r0, r4, asr r9
    b2b4:	00347624 	eorseq	r7, r4, r4, lsr #12
    b2b8:	00196210 	andseq	r6, r9, r0, lsl r2
    b2bc:	34822700 	strcc	r2, [r2], #1792	; 0x700
    b2c0:	197f1000 	ldmdbne	pc!, {ip}^	; <UNPREDICTABLE>
    b2c4:	0bd40000 	bleq	ff50b2cc <__StackTop+0xc740b2cc>
    b2c8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b2cc:	00750250 	rsbseq	r0, r5, r0, asr r2
    b2d0:	348a2100 	strcc	r2, [sl], #256	; 0x100
    b2d4:	197f1000 	ldmdbne	pc!, {ip}^	; <UNPREDICTABLE>
    b2d8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b2dc:	00740250 	rsbseq	r0, r4, r0, asr r2
    b2e0:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
    b2e4:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    b2e8:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    b2ec:	00000035 	andeq	r0, r0, r5, lsr r0
    b2f0:	8225009f 	eorhi	r0, r5, #159	; 0x9f
    b2f4:	0100002a 	tsteq	r0, sl, lsr #32
    b2f8:	0111043e 	tsteq	r1, lr, lsr r4
    b2fc:	10003290 	mulne	r0, r0, r2
    b300:	100032c0 	andne	r3, r0, r0, asr #5
    b304:	0000a1dd 	ldrdeq	sl, [r0], -sp
    b308:	000c4b01 	andeq	r4, ip, r1, lsl #22
    b30c:	2af32000 	bcs	ffcd3314 <__StackTop+0xc7bd3314>
    b310:	40010000 	andmi	r0, r1, r0
    b314:	01171404 	tsteq	r7, r4, lsl #8
    b318:	a1ff0000 	mvnsge	r0, r0
    b31c:	a1fd0000 	mvnsge	r0, r0
    b320:	4d200000 	stcmi	0, cr0, [r0, #-0]
    b324:	0100001b 	tsteq	r0, fp, lsl r0
    b328:	a8120441 	ldmdage	r2, {r0, r6, sl}
    b32c:	17000007 	strne	r0, [r0, -r7]
    b330:	130000a2 	movwne	r0, #162	; 0xa2
    b334:	210000a2 	smlatbcs	r0, r2, r0, r0
    b338:	100032a0 	andne	r3, r0, r0, lsr #5
    b33c:	0000105e 	andeq	r1, r0, lr, asr r0
    b340:	02510122 	subseq	r0, r1, #-2147483640	; 0x80000008
    b344:	0000ff09 	andeq	pc, r0, r9, lsl #30
    b348:	002b0c28 	eoreq	r0, fp, r8, lsr #24
    b34c:	03aa0100 			; <UNDEFINED> instruction: 0x03aa0100
    b350:	33540111 	cmpcc	r4, #1073741828	; 0x40000004
    b354:	344c1000 	strbcc	r1, [ip], #-0
    b358:	a2391000 	eorsge	r1, r9, #0
    b35c:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    b360:	1f00000d 	svcne	0x0000000d
    b364:	00002b55 	andeq	r2, r0, r5, asr fp
    b368:	1d03ac01 	stcne	12, cr10, [r3, #-4]
    b36c:	00000766 	andeq	r0, r0, r6, ror #14
    b370:	20609102 	rsbcs	r9, r0, r2, lsl #2
    b374:	00002bbd 			; <UNDEFINED> instruction: 0x00002bbd
    b378:	1303ad01 	movwne	sl, #15617	; 0x3d01
    b37c:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    b380:	0000a273 	andeq	sl, r0, r3, ror r2
    b384:	0000a271 	andeq	sl, r0, r1, ror r2
    b388:	002cbf1f 	eoreq	fp, ip, pc, lsl pc
    b38c:	03ae0100 			; <UNDEFINED> instruction: 0x03ae0100
    b390:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    b394:	5c910200 	lfmpl	f0, 4, [r1], {0}
    b398:	00274920 	eoreq	r4, r7, r0, lsr #18
    b39c:	03af0100 			; <UNDEFINED> instruction: 0x03af0100
    b3a0:	00011714 	andeq	r1, r1, r4, lsl r7
    b3a4:	00a29200 	adceq	r9, r2, r0, lsl #4
    b3a8:	00a28600 	adceq	r8, r2, r0, lsl #12
    b3ac:	33802600 	orrcc	r2, r0, #0, 12
    b3b0:	33881000 	orrcc	r1, r8, #0
    b3b4:	0cd31000 	ldcleq	0, cr1, [r3], {0}
    b3b8:	9e200000 	cdpls	0, 2, cr0, cr0, cr0, {0}
    b3bc:	0100002c 	tsteq	r0, ip, lsr #32
    b3c0:	8f3803b9 	svchi	0x003803b9
    b3c4:	de00000d 	cdple	0, 0, cr0, cr0, cr13, {0}
    b3c8:	dc0000a2 	stcle	0, cr0, [r0], {162}	; 0xa2
    b3cc:	000000a2 	andeq	r0, r0, r2, lsr #1
    b3d0:	00337627 	eorseq	r7, r3, r7, lsr #12
    b3d4:	00198e10 	andseq	r8, r9, r0, lsl lr
    b3d8:	000cec00 	andeq	lr, ip, r0, lsl #24
    b3dc:	51012200 	mrspl	r2, R9_usr
    b3e0:	22609102 	rsbcs	r9, r0, #-2147483648	; 0x80000000
    b3e4:	30015201 	andcc	r5, r1, r1, lsl #4
    b3e8:	33962700 	orrscc	r2, r6, #0, 14
    b3ec:	199d1000 	ldmibne	sp, {ip}
    b3f0:	0d000000 	stceq	0, cr0, [r0, #-0]
    b3f4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b3f8:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    b3fc:	339c2700 	orrscc	r2, ip, #0, 14
    b400:	0e471000 	cdpeq	0, 4, cr1, cr7, cr0, {0}
    b404:	0d140000 	ldceq	0, cr0, [r4, #-0]
    b408:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b40c:	5c910250 	lfmpl	f0, 4, [r1], {80}	; 0x50
    b410:	33ce2700 	biccc	r2, lr, #0, 14
    b414:	0d941000 	ldceq	0, cr1, [r4]
    b418:	0d2e0000 	stceq	0, cr0, [lr, #-0]
    b41c:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b420:	00740250 	rsbseq	r0, r4, r0, asr r2
    b424:	02520122 	subseq	r0, r2, #-2147483640	; 0x80000008
    b428:	29000075 	stmdbcs	r0, {r0, r2, r4, r5, r6}
    b42c:	100033ea 	andne	r3, r0, sl, ror #7
    b430:	00000d3e 	andeq	r0, r0, lr, lsr sp
    b434:	02500122 	subseq	r0, r0, #-2147483640	; 0x80000008
    b438:	27000074 	smlsdxcs	r0, r4, r0, r0
    b43c:	100033fa 	strdne	r3, [r0], -sl
    b440:	000010f9 	strdeq	r1, [r0], -r9
    b444:	00000d58 	andeq	r0, r0, r8, asr sp
    b448:	02500122 	subseq	r0, r0, #-2147483640	; 0x80000008
    b44c:	01220074 			; <UNDEFINED> instruction: 0x01220074
    b450:	00750252 	rsbseq	r0, r5, r2, asr r2
    b454:	34262700 	strtcc	r2, [r6], #-1792	; 0xfffff900
    b458:	0d941000 	ldceq	0, cr1, [r4]
    b45c:	0d780000 	ldcleq	0, cr0, [r8, #-0]
    b460:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b464:	00740250 	rsbseq	r0, r4, r0, asr r2
    b468:	02520122 	subseq	r0, r2, #-2147483640	; 0x80000008
    b46c:	01220075 			; <UNDEFINED> instruction: 0x01220075
    b470:	00750253 	rsbseq	r0, r5, r3, asr r2
    b474:	34422100 	strbcc	r2, [r2], #-256	; 0xffffff00
    b478:	19ac1000 	stmibne	ip!, {ip}
    b47c:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b480:	00740250 	rsbseq	r0, r4, r0, asr r2
    b484:	04070000 	streq	r0, [r7], #-0
    b488:	00000715 	andeq	r0, r0, r5, lsl r7
    b48c:	000d8906 	andeq	r8, sp, r6, lsl #18
    b490:	29e32a00 	stmibcs	r3!, {r9, fp, sp}^
    b494:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    b498:	fa011703 	blx	510ac <__HEAP_SIZE+0x500ac>
    b49c:	e0000000 	and	r0, r0, r0
    b4a0:	28100031 	ldmdacs	r0, {r0, r4, r5}
    b4a4:	f3100032 	vqadd.u16	d0, d0, d18
    b4a8:	010000a2 	smlatbeq	r0, r2, r0, r0
    b4ac:	00000e47 	andeq	r0, r0, r7, asr #28
    b4b0:	002bbd1d 	eoreq	fp, fp, sp, lsl sp
    b4b4:	037e0100 	cmneq	lr, #0, 2
    b4b8:	0006bd43 	andeq	fp, r6, r3, asr #26
    b4bc:	00a32700 	adceq	r2, r3, r0, lsl #14
    b4c0:	00a31300 	adceq	r1, r3, r0, lsl #6
    b4c4:	2c4f1d00 	mcrrcs	13, 0, r1, pc, cr0
    b4c8:	7f010000 	svcvc	0x00010000
    b4cc:	01234403 			; <UNDEFINED> instruction: 0x01234403
    b4d0:	a3c30000 	bicge	r0, r3, #0
    b4d4:	a3ad0000 			; <UNDEFINED> instruction: 0xa3ad0000
    b4d8:	491d0000 	ldmdbmi	sp, {}	; <UNPREDICTABLE>
    b4dc:	01000027 	tsteq	r0, r7, lsr #32
    b4e0:	23440380 	movtcs	r0, #17280	; 0x4380
    b4e4:	5b000001 	blpl	b4f0 <__HEAP_SIZE+0xa4f0>
    b4e8:	510000a4 	smlatbpl	r0, r4, r0, r0
    b4ec:	1d0000a4 	stcne	0, cr0, [r0, #-656]	; 0xfffffd70
    b4f0:	000026f8 	strdeq	r2, [r0], -r8
    b4f4:	44038101 	strmi	r8, [r3], #-257	; 0xfffffeff
    b4f8:	00000123 	andeq	r0, r0, r3, lsr #2
    b4fc:	0000a4aa 	andeq	sl, r0, sl, lsr #9
    b500:	0000a4a0 	andeq	sl, r0, r0, lsr #9
    b504:	00282620 	eoreq	r2, r8, r0, lsr #12
    b508:	03830100 	orreq	r0, r3, #0, 2
    b50c:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    b510:	00a4f500 	adceq	pc, r4, r0, lsl #10
    b514:	00a4ef00 	adceq	lr, r4, r0, lsl #30
    b518:	32002700 	andcc	r2, r0, #0, 14
    b51c:	19ba1000 	ldmibne	sl!, {ip}
    b520:	0e330000 	cdpeq	0, 3, cr0, cr3, cr0, {0}
    b524:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b528:	01f30551 	mvnseq	r0, r1, asr r5
    b52c:	00042350 	andeq	r2, r4, r0, asr r3
    b530:	00321621 	eorseq	r1, r2, r1, lsr #12
    b534:	0019ba10 	andseq	fp, r9, r0, lsl sl
    b538:	51012200 	mrspl	r2, R9_usr
    b53c:	5001f305 	andpl	pc, r1, r5, lsl #6
    b540:	00000423 	andeq	r0, r0, r3, lsr #8
    b544:	002a352a 	eoreq	r3, sl, sl, lsr #10
    b548:	03670100 	cmneq	r7, #0, 2
    b54c:	01170117 	tsteq	r7, r7, lsl r1
    b550:	32c00000 	sbccc	r0, r0, #0
    b554:	32ec1000 	rsccc	r1, ip, #0
    b558:	a5211000 	strge	r1, [r1, #-0]!
    b55c:	b6010000 	strlt	r0, [r1], -r0
    b560:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    b564:	00002cbe 			; <UNDEFINED> instruction: 0x00002cbe
    b568:	3c036701 	stccc	7, cr6, [r3], {1}
    b56c:	000009dc 	ldrdeq	r0, [r0], -ip
    b570:	0000a545 	andeq	sl, r0, r5, asr #10
    b574:	0000a541 	andeq	sl, r0, r1, asr #10
    b578:	00274920 	eoreq	r4, r7, r0, lsr #18
    b57c:	03690100 	cmneq	r9, #0, 2
    b580:	00011714 	andeq	r1, r1, r4, lsl r7
    b584:	00a56b00 	adceq	r6, r5, r0, lsl #22
    b588:	00a56300 	adceq	r6, r5, r0, lsl #6
    b58c:	2b271f00 	blcs	9d3194 <__RAM_SIZE+0x8d3194>
    b590:	6a010000 	bvs	4b598 <__HEAP_SIZE+0x4a598>
    b594:	01172b03 	tsteq	r7, r3, lsl #22
    b598:	03050000 	movweq	r0, #20480	; 0x5000
    b59c:	38008cd4 	stmdacc	r0, {r2, r4, r6, r7, sl, fp, pc}
    b5a0:	0032c824 	eorseq	ip, r2, r4, lsr #16
    b5a4:	0019c910 	andseq	ip, r9, r0, lsl r9
    b5a8:	32e22400 	rsccc	r2, r2, #0, 8
    b5ac:	0bf51000 	bleq	ffd4f5b4 <__StackTop+0xc7c4f5b4>
    b5b0:	2b000000 	blcs	b5b8 <__HEAP_SIZE+0xa5b8>
    b5b4:	00002ca9 	andeq	r2, r0, r9, lsr #25
    b5b8:	17034c01 	strne	r4, [r3, -r1, lsl #24]
    b5bc:	00011701 	andeq	r1, r1, r1, lsl #14
    b5c0:	0031c000 	eorseq	ip, r1, r0
    b5c4:	0031e010 	eorseq	lr, r1, r0, lsl r0
    b5c8:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    b5cc:	000eff01 	andeq	pc, lr, r1, lsl #30
    b5d0:	272c1d00 	strcs	r1, [ip, -r0, lsl #26]!
    b5d4:	4c010000 	stcmi	0, cr0, [r1], {-0}
    b5d8:	09dc4003 	ldmibeq	ip, {r0, r1, lr}^
    b5dc:	a5a70000 	strge	r0, [r7, #0]!
    b5e0:	a59f0000 	ldrge	r0, [pc]	; b5e8 <__HEAP_SIZE+0xa5e8>
    b5e4:	f3200000 	vhadd.u32	d0, d0, d0
    b5e8:	0100002a 	tsteq	r0, sl, lsr #32
    b5ec:	1714034e 	ldrne	r0, [r4, -lr, asr #6]
    b5f0:	e5000001 	str	r0, [r0, #-1]
    b5f4:	e10000a5 	smlatb	r0, r5, r0, r0
    b5f8:	000000a5 	andeq	r0, r0, r5, lsr #1
    b5fc:	002c2025 	eoreq	r2, ip, r5, lsr #32
    b600:	030e0100 	movweq	r0, #57600	; 0xe100
    b604:	32ec0111 	rsccc	r0, ip, #1073741828	; 0x40000004
    b608:	33541000 	cmpcc	r4, #0
    b60c:	a6041000 	strge	r1, [r4], -r0
    b610:	e2010000 	and	r0, r1, #0
    b614:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    b618:	00002af3 	strdeq	r2, [r0], -r3
    b61c:	3e030e01 	cdpcc	14, 0, cr0, cr3, cr1, {0}
    b620:	00000123 	andeq	r0, r0, r3, lsr #2
    b624:	0000a64c 	andeq	sl, r0, ip, asr #12
    b628:	0000a648 	andeq	sl, r0, r8, asr #12
    b62c:	00272d1d 	eoreq	r2, r7, sp, lsl sp
    b630:	030f0100 	movweq	r0, #61696	; 0xf100
    b634:	0000fa38 	andeq	pc, r0, r8, lsr sl	; <UNPREDICTABLE>
    b638:	00a67200 	adceq	r7, r6, r0, lsl #4
    b63c:	00a66a00 	adceq	r6, r6, r0, lsl #20
    b640:	27492000 	strbcs	r2, [r9, -r0]
    b644:	11010000 	mrsne	r0, (UNDEF: 1)
    b648:	01171403 	tsteq	r7, r3, lsl #8
    b64c:	a6b70000 	ldrtge	r0, [r7], r0
    b650:	a6a90000 	strtge	r0, [r9], r0
    b654:	bf1f0000 	svclt	0x001f0000
    b658:	0100002c 	tsteq	r0, ip, lsr #32
    b65c:	fa140312 	blx	50c2ac <__RAM_SIZE+0x40c2ac>
    b660:	02000000 	andeq	r0, r0, #0
    b664:	f8246c91 			; <UNDEFINED> instruction: 0xf8246c91
    b668:	d8100032 	ldmdale	r0, {r1, r4, r5}
    b66c:	27000019 	smladcs	r0, r9, r0, r0
    b670:	100032fe 	strdne	r3, [r0], -lr
    b674:	00000e47 	andeq	r0, r0, r7, asr #28
    b678:	00000f86 	andeq	r0, r0, r6, lsl #31
    b67c:	02500122 	subseq	r0, r0, #-2147483640	; 0x80000008
    b680:	27006c91 			; <UNDEFINED> instruction: 0x27006c91
    b684:	10003322 	andne	r3, r0, r2, lsr #6
    b688:	000019e7 	andeq	r1, r0, r7, ror #19
    b68c:	00000fa3 	andeq	r0, r0, r3, lsr #31
    b690:	05510122 	ldrbeq	r0, [r1, #-290]	; 0xfffffede
    b694:	00750076 	rsbseq	r0, r5, r6, ror r0
    b698:	5201221c 	andpl	r2, r1, #28, 4	; 0xc0000001
    b69c:	00007402 	andeq	r7, r0, r2, lsl #8
    b6a0:	00332624 	eorseq	r2, r3, r4, lsr #12
    b6a4:	0019f610 	andseq	pc, r9, r0, lsl r6	; <UNPREDICTABLE>
    b6a8:	33302400 	teqcc	r0, #0, 8
    b6ac:	19f61000 	ldmibne	r6!, {ip}^
    b6b0:	38270000 	stmdacc	r7!, {}	; <UNPREDICTABLE>
    b6b4:	5e100033 	mrcpl	0, 0, r0, cr0, cr3, {1}
    b6b8:	cf000010 	svcgt	0x00000010
    b6bc:	2200000f 	andcs	r0, r0, #15
    b6c0:	76025001 	strvc	r5, [r2], -r1
    b6c4:	51012200 	mrspl	r2, R9_usr
    b6c8:	00007502 	andeq	r7, r0, r2, lsl #10
    b6cc:	00334224 	eorseq	r4, r3, r4, lsr #4
    b6d0:	001a0510 	andseq	r0, sl, r0, lsl r5
    b6d4:	33482400 	movtcc	r2, #33792	; 0x8400
    b6d8:	19f61000 	ldmibne	r6!, {ip}^
    b6dc:	25000000 	strcs	r0, [r0, #-0]
    b6e0:	00002ae6 	andeq	r2, r0, r6, ror #21
    b6e4:	0c02ec01 	stceq	12, cr14, [r2], {1}
    b6e8:	00344c01 	eorseq	r4, r4, r1, lsl #24
    b6ec:	00346210 	eorseq	r6, r4, r0, lsl r2
    b6f0:	00a70c10 	adceq	r0, r7, r0, lsl ip
    b6f4:	105e0100 	subsne	r0, lr, r0, lsl #2
    b6f8:	561d0000 	ldrpl	r0, [sp], -r0
    b6fc:	01000021 	tsteq	r0, r1, lsr #32
    b700:	9a0c02ec 	bls	30c2b8 <__RAM_SIZE+0x20c2b8>
    b704:	3c000000 	stccc	0, cr0, [r0], {-0}
    b708:	380000a7 	stmdacc	r0, {r0, r1, r2, r5, r7}
    b70c:	200000a7 	andcs	r0, r0, r7, lsr #1
    b710:	00002af3 	strdeq	r2, [r0], -r3
    b714:	1402ee01 	strne	lr, [r2], #-3585	; 0xfffff1ff
    b718:	00000117 	andeq	r0, r0, r7, lsl r1
    b71c:	0000a75f 	andeq	sl, r0, pc, asr r7
    b720:	0000a75d 	andeq	sl, r0, sp, asr r7
    b724:	00272d1f 	eoreq	r2, r7, pc, lsl sp
    b728:	02ef0100 	rsceq	r0, pc, #0, 2
    b72c:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    b730:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b734:	00345627 	eorseq	r5, r4, r7, lsr #12
    b738:	000eb610 	andeq	fp, lr, r0, lsl r6
    b73c:	00104b00 	andseq	r4, r0, r0, lsl #22
    b740:	50012200 	andpl	r2, r1, r0, lsl #4
    b744:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b748:	00345c24 	eorseq	r5, r4, r4, lsr #24
    b74c:	000eff10 	andeq	pc, lr, r0, lsl pc	; <UNPREDICTABLE>
    b750:	34602400 	strbtcc	r2, [r0], #-1024	; 0xfffffc00
    b754:	0c4b1000 	mareq	acc0, r1, fp
    b758:	25000000 	strcs	r0, [r0, #-0]
    b75c:	000028ad 	andeq	r2, r0, sp, lsr #17
    b760:	1102ce01 	tstne	r2, r1, lsl #28
    b764:	00325001 	eorseq	r5, r2, r1
    b768:	00329010 	eorseq	r9, r2, r0, lsl r0
    b76c:	00a77210 	adceq	r7, r7, r0, lsl r2
    b770:	10f90100 	rscsne	r0, r9, r0, lsl #2
    b774:	f31d0000 	vhadd.u16	d0, d13, d0
    b778:	0100002a 	tsteq	r0, sl, lsr #32
    b77c:	233a02ce 	teqcs	sl, #-536870900	; 0xe000000c
    b780:	96000001 	strls	r0, [r0], -r1
    b784:	920000a7 	andls	r0, r0, #167	; 0xa7
    b788:	1d0000a7 	stcne	0, cr0, [r0, #-668]	; 0xfffffd64
    b78c:	00002749 	andeq	r2, r0, r9, asr #14
    b790:	3a02cf01 	bcc	bf39c <__HEAP_SIZE+0xbe39c>
    b794:	00000123 	andeq	r0, r0, r3, lsr #2
    b798:	0000a7b8 			; <UNDEFINED> instruction: 0x0000a7b8
    b79c:	0000a7b4 			; <UNDEFINED> instruction: 0x0000a7b4
    b7a0:	002bbd20 	eoreq	fp, fp, r0, lsr #26
    b7a4:	02d40100 	sbcseq	r0, r4, #0, 2
    b7a8:	0006bd19 	andeq	fp, r6, r9, lsl sp
    b7ac:	00a7d800 	adceq	sp, r7, r0, lsl #16
    b7b0:	00a7d600 	adceq	sp, r7, r0, lsl #12
    b7b4:	32642700 	rsbcc	r2, r4, #0, 14
    b7b8:	199d1000 	ldmibne	sp, {ip}
    b7bc:	10cc0000 	sbcne	r0, ip, r0
    b7c0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b7c4:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    b7c8:	327c2900 	rsbscc	r2, ip, #0, 18
    b7cc:	10dc1000 	sbcsne	r1, ip, r0
    b7d0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b7d4:	00740250 	rsbseq	r0, r4, r0, asr r2
    b7d8:	32882100 	addcc	r2, r8, #0, 2
    b7dc:	10f91000 	rscsne	r1, r9, r0
    b7e0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    b7e4:	00740250 	rsbseq	r0, r4, r0, asr r2
    b7e8:	02510122 	subseq	r0, r1, #-2147483640	; 0x80000008
    b7ec:	01220075 			; <UNDEFINED> instruction: 0x01220075
    b7f0:	00760252 	rsbseq	r0, r6, r2, asr r2
    b7f4:	96250000 	strtls	r0, [r5], -r0
    b7f8:	0100002a 	tsteq	r0, sl, lsr #32
    b7fc:	011102bb 			; <UNDEFINED> instruction: 0x011102bb
    b800:	10003228 	andne	r3, r0, r8, lsr #4
    b804:	10003250 	andne	r3, r0, r0, asr r2
    b808:	0000a7eb 	andeq	sl, r0, fp, ror #15
    b80c:	00118001 	andseq	r8, r1, r1
    b810:	2bbd1d00 	blcs	fef52c18 <__StackTop+0xc6e52c18>
    b814:	bb010000 	bllt	4b81c <__HEAP_SIZE+0x4a81c>
    b818:	06bd3102 	ldrteq	r3, [sp], r2, lsl #2
    b81c:	a80f0000 	stmdage	pc, {}	; <UNPREDICTABLE>
    b820:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    b824:	201d0000 	andscs	r0, sp, r0
    b828:	01000029 	tsteq	r0, r9, lsr #32
    b82c:	172c02bc 			; <UNDEFINED> instruction: 0x172c02bc
    b830:	31000001 	tstcc	r0, r1
    b834:	2d0000a8 	stccs	0, cr0, [r0, #-672]	; 0xfffffd60
    b838:	1d0000a8 	stcne	0, cr0, [r0, #-672]	; 0xfffffd60
    b83c:	00002749 	andeq	r2, r0, r9, asr #14
    b840:	3202bd01 	andcc	fp, r2, #1, 26	; 0x40
    b844:	00000123 	andeq	r0, r0, r3, lsr #2
    b848:	0000a853 	andeq	sl, r0, r3, asr r8
    b84c:	0000a84f 	andeq	sl, r0, pc, asr #16
    b850:	00323c29 	eorseq	r3, r2, r9, lsr #24
    b854:	00116310 	andseq	r6, r1, r0, lsl r3
    b858:	50012200 	andpl	r2, r1, r0, lsl #4
    b85c:	00007402 	andeq	r7, r0, r2, lsl #8
    b860:	00324a21 	eorseq	r4, r2, r1, lsr #20
    b864:	000d9410 	andeq	r9, sp, r0, lsl r4
    b868:	50012200 	andpl	r2, r1, r0, lsl #4
    b86c:	22007402 	andcs	r7, r0, #33554432	; 0x2000000
    b870:	76025201 	strvc	r5, [r2], -r1, lsl #4
    b874:	53012200 	movwpl	r2, #4608	; 0x1200
    b878:	00007502 	andeq	r7, r0, r2, lsl #10
    b87c:	f3011c00 			; <UNDEFINED> instruction: 0xf3011c00
    b880:	0100002b 	tsteq	r0, fp, lsr #32
    b884:	011202ad 	tsteq	r2, sp, lsr #5
    b888:	000000ad 	andeq	r0, r0, sp, lsr #1
	...
    b894:	01007d02 	tsteq	r0, r2, lsl #26
    b898:	000011ca 	andeq	r1, r0, sl, asr #3
    b89c:	002bbe1d 	eoreq	fp, fp, sp, lsl lr
    b8a0:	02ad0100 	adceq	r0, sp, #0, 2
    b8a4:	0005a430 	andeq	sl, r5, r0, lsr r4
    b8a8:	00a87500 	adceq	r7, r8, r0, lsl #10
    b8ac:	00a87100 	adceq	r7, r8, r0, lsl #2
    b8b0:	2bbd2000 	blcs	fef538b8 <__StackTop+0xc6e538b8>
    b8b4:	af010000 	svcge	0x00010000
    b8b8:	06b71302 	ldrteq	r1, [r7], r2, lsl #6
    b8bc:	a89a0000 	ldmge	sl, {}	; <UNPREDICTABLE>
    b8c0:	a8960000 	ldmge	r6, {}	; <UNPREDICTABLE>
    b8c4:	1c000000 	stcne	0, cr0, [r0], {-0}
    b8c8:	0027ed01 	eoreq	lr, r7, r1, lsl #26
    b8cc:	028f0100 	addeq	r0, pc, #0, 2
    b8d0:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    b8dc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b8e0:	12380100 	eorsne	r0, r8, #0, 2
    b8e4:	be1d0000 	cdplt	0, 1, cr0, cr13, cr0, {0}
    b8e8:	0100002b 	tsteq	r0, fp, lsr #32
    b8ec:	a439028f 	ldrtge	r0, [r9], #-655	; 0xfffffd71
    b8f0:	c3000005 	movwgt	r0, #5
    b8f4:	bb0000a8 	bllt	bb9c <__HEAP_SIZE+0xab9c>
    b8f8:	1b0000a8 	blne	bba0 <__HEAP_SIZE+0xaba0>
    b8fc:	00002c8f 	andeq	r2, r0, pc, lsl #25
    b900:	3c029001 	stccc	0, cr9, [r2], {1}
    b904:	00001238 	andeq	r1, r0, r8, lsr r2
    b908:	d1205101 			; <UNDEFINED> instruction: 0xd1205101
    b90c:	0100001c 	tsteq	r0, ip, lsl r0
    b910:	fa180292 	blx	60c360 <__RAM_SIZE+0x50c360>
    b914:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    b918:	fb0000a8 	blx	bbc2 <__HEAP_SIZE+0xabc2>
    b91c:	200000a8 	andcs	r0, r0, r8, lsr #1
    b920:	00002bbd 			; <UNDEFINED> instruction: 0x00002bbd
    b924:	17029301 	strne	r9, [r2, -r1, lsl #6]
    b928:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    b92c:	0000a927 	andeq	sl, r0, r7, lsr #18
    b930:	0000a91f 	andeq	sl, r0, pc, lsl r9
    b934:	3e040700 	cdpcc	7, 0, cr0, cr4, cr0, {0}
    b938:	07000012 	smladeq	r0, r2, r0, r0
    b93c:	00049704 	andeq	r9, r4, r4, lsl #14
    b940:	fe011c00 	cdp2	12, 0, cr1, cr1, cr0, {0}
    b944:	01000029 	tsteq	r0, r9, lsr #32
    b948:	0110027e 	tsteq	r0, lr, ror r2
    b94c:	00000117 	andeq	r0, r0, r7, lsl r1
	...
    b958:	01007d02 	tsteq	r0, r2, lsl #26
    b95c:	000012a3 	andeq	r1, r0, r3, lsr #5
    b960:	002bbe1d 	eoreq	fp, fp, sp, lsl lr
    b964:	027e0100 	rsbseq	r0, lr, #0, 2
    b968:	0005a433 	andeq	sl, r5, r3, lsr r4
    b96c:	00a96300 	adceq	r6, r9, r0, lsl #6
    b970:	00a95f00 	adceq	r5, r9, r0, lsl #30
    b974:	2bbd2000 	blcs	fef5397c <__StackTop+0xc6e5397c>
    b978:	80010000 	andhi	r0, r1, r0
    b97c:	06b71302 	ldrteq	r1, [r7], r2, lsl #6
    b980:	a9880000 	stmibge	r8, {}	; <UNPREDICTABLE>
    b984:	a9840000 	stmibge	r4, {}	; <UNPREDICTABLE>
    b988:	d1200000 			; <UNDEFINED> instruction: 0xd1200000
    b98c:	0100001c 	tsteq	r0, ip, lsl r0
    b990:	17140281 	ldrne	r0, [r4, -r1, lsl #5]
    b994:	ad000001 	stcge	0, cr0, [r0, #-4]
    b998:	a90000a9 	stmdbge	r0, {r0, r3, r5, r7}
    b99c:	000000a9 	andeq	r0, r0, r9, lsr #1
    b9a0:	2877011e 	ldmdacs	r7!, {r1, r2, r3, r4, r8}^
    b9a4:	70010000 	andvc	r0, r1, r0
    b9a8:	0b011102 	bleq	4fdb8 <__HEAP_SIZE+0x4edb8>
    b9ac:	00000001 	andeq	r0, r0, r1
    b9b0:	00000000 	andeq	r0, r0, r0
    b9b4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    b9b8:	010000a9 	smlatbeq	r0, r9, r0, r0
    b9bc:	000012ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    b9c0:	002bbe1d 	eoreq	fp, fp, sp, lsl lr
    b9c4:	02700100 	rsbseq	r0, r0, #0, 2
    b9c8:	0005a435 	andeq	sl, r5, r5, lsr r4
    b9cc:	00a9f000 	adceq	pc, r9, r0
    b9d0:	00a9ec00 	adceq	lr, r9, r0, lsl #24
    b9d4:	0e582000 	cdpeq	0, 5, cr2, cr8, cr0, {0}
    b9d8:	72010000 	andvc	r0, r1, #0
    b9dc:	010b1502 	tsteq	fp, r2, lsl #10
    b9e0:	aa130000 	bge	4cb9e8 <__RAM_SIZE+0x3cb9e8>
    b9e4:	aa110000 	bge	44b9ec <__RAM_SIZE+0x34b9ec>
    b9e8:	00210000 	eoreq	r0, r1, r0
    b9ec:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    b9f0:	22000012 	andcs	r0, r0, #18
    b9f4:	f3035001 	vhadd.u8	d5, d3, d1
    b9f8:	00005001 	andeq	r5, r0, r1
    b9fc:	2878011e 	ldmdacs	r8!, {r1, r2, r3, r4, r8}^
    ba00:	54010000 	strpl	r0, [r1], #-0
    ba04:	fa011002 	blx	4fa14 <__HEAP_SIZE+0x4ea14>
	...
    ba10:	26000000 	strcs	r0, [r0], -r0
    ba14:	010000aa 	smlatbeq	r0, sl, r0, r0
    ba18:	00001371 	andeq	r1, r0, r1, ror r3
    ba1c:	002bbe1d 	eoreq	fp, fp, sp, lsl lr
    ba20:	02540100 	subseq	r0, r4, #0, 2
    ba24:	0005a433 	andeq	sl, r5, r3, lsr r4
    ba28:	00aa5000 	adceq	r5, sl, r0
    ba2c:	00aa4600 	adceq	r4, sl, r0, lsl #12
    ba30:	2bbd2000 	blcs	fef53a38 <__StackTop+0xc6e53a38>
    ba34:	56010000 	strpl	r0, [r1], -r0
    ba38:	06b71302 	ldrteq	r1, [r7], r2, lsl #6
    ba3c:	aa9f0000 	bge	fe7cba44 <__StackTop+0xc66cba44>
    ba40:	aa950000 	bge	fe54ba48 <__StackTop+0xc644ba48>
    ba44:	d1200000 			; <UNDEFINED> instruction: 0xd1200000
    ba48:	0100001c 	tsteq	r0, ip, lsl r0
    ba4c:	fa140257 	blx	50c3b0 <__RAM_SIZE+0x40c3b0>
    ba50:	e6000000 	str	r0, [r0], -r0
    ba54:	e40000aa 	str	r0, [r0], #-170	; 0xffffff56
    ba58:	240000aa 	strcs	r0, [r0], #-170	; 0xffffff56
    ba5c:	00000000 	andeq	r0, r0, r0
    ba60:	00001954 	andeq	r1, r0, r4, asr r9
    ba64:	00000024 	andeq	r0, r0, r4, lsr #32
    ba68:	00196200 	andseq	r6, r9, r0, lsl #4
    ba6c:	01230000 			; <UNDEFINED> instruction: 0x01230000
    ba70:	00002c3b 	andeq	r2, r0, fp, lsr ip
    ba74:	0a023b01 	beq	9a680 <__HEAP_SIZE+0x99680>
    ba78:	00000001 	andeq	r0, r0, r1
    ba7c:	00000000 	andeq	r0, r0, r0
    ba80:	00aaf900 	adceq	pc, sl, r0, lsl #18
    ba84:	13df0100 	bicsne	r0, pc, #0, 2
    ba88:	be1d0000 	cdplt	0, 1, cr0, cr13, cr0, {0}
    ba8c:	0100002b 	tsteq	r0, fp, lsr #32
    ba90:	a42d023b 	strtge	r0, [sp], #-571	; 0xfffffdc5
    ba94:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    ba98:	190000ab 	stmdbne	r0, {r0, r1, r3, r5, r7}
    ba9c:	1d0000ab 	stcne	0, cr0, [r0, #-684]	; 0xfffffd54
    baa0:	00002954 	andeq	r2, r0, r4, asr r9
    baa4:	30023c01 	andcc	r3, r2, r1, lsl #24
    baa8:	00000106 	andeq	r0, r0, r6, lsl #2
    baac:	0000ab3f 	andeq	sl, r0, pc, lsr fp
    bab0:	0000ab3b 	andeq	sl, r0, fp, lsr fp
    bab4:	002bbd20 	eoreq	fp, fp, r0, lsr #26
    bab8:	023e0100 	eorseq	r0, lr, #0, 2
    babc:	0006b713 	andeq	fp, r6, r3, lsl r7
    bac0:	00ab6100 	adceq	r6, fp, r0, lsl #2
    bac4:	00ab5d00 	adceq	r5, fp, r0, lsl #26
    bac8:	00002400 	andeq	r2, r0, r0, lsl #8
    bacc:	19540000 	ldmdbne	r4, {}^	; <UNPREDICTABLE>
    bad0:	00240000 	eoreq	r0, r4, r0
    bad4:	62000000 	andvs	r0, r0, #0
    bad8:	00000019 	andeq	r0, r0, r9, lsl r0
    badc:	2bad011c 	blcs	feb4bf54 <__StackTop+0xc6a4bf54>
    bae0:	2d010000 	stccs	0, cr0, [r1, #-0]
    bae4:	17011002 	strne	r1, [r1, -r2]
    bae8:	00000001 	andeq	r0, r0, r1
    baec:	00000000 	andeq	r0, r0, r0
    baf0:	02000000 	andeq	r0, r0, #0
    baf4:	2901007d 	stmdbcs	r1, {r0, r2, r3, r4, r5, r6}
    baf8:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    bafc:	00002bbe 			; <UNDEFINED> instruction: 0x00002bbe
    bb00:	2f022d01 	svccs	0x00022d01
    bb04:	000005a4 	andeq	r0, r0, r4, lsr #11
    bb08:	0000ab83 	andeq	sl, r0, r3, lsl #23
    bb0c:	0000ab7f 	andeq	sl, r0, pc, ror fp
    bb10:	002bbd20 	eoreq	fp, fp, r0, lsr #26
    bb14:	022f0100 	eoreq	r0, pc, #0, 2
    bb18:	0006b713 	andeq	fp, r6, r3, lsl r7
    bb1c:	00aba800 	adceq	sl, fp, r0, lsl #16
    bb20:	00aba400 	adceq	sl, fp, r0, lsl #8
    bb24:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    bb28:	0000260d 	andeq	r2, r0, sp, lsl #12
    bb2c:	12021f01 	andne	r1, r2, #1, 30
    bb30:	00056e01 	andeq	r6, r5, r1, lsl #28
	...
    bb3c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    bb40:	60011e01 	andvs	r1, r1, r1, lsl #28
    bb44:	01000029 	tsteq	r0, r9, lsr #32
    bb48:	011001f3 			; <UNDEFINED> instruction: 0x011001f3
    bb4c:	000000fa 	strdeq	r0, [r0], -sl
	...
    bb58:	0000abc9 	andeq	sl, r0, r9, asr #23
    bb5c:	00151501 	andseq	r1, r5, r1, lsl #10
    bb60:	2bbe1d00 	blcs	fef92f68 <__StackTop+0xc6e92f68>
    bb64:	f3010000 	vhadd.u8	d0, d1, d0
    bb68:	05a43b01 	streq	r3, [r4, #2817]!	; 0xb01
    bb6c:	ac1d0000 	ldcge	0, cr0, [sp], {-0}
    bb70:	ac0d0000 	stcge	0, cr0, [sp], {-0}
    bb74:	1b1d0000 	blne	74bb7c <__RAM_SIZE+0x64bb7c>
    bb78:	01000028 	tsteq	r0, r8, lsr #32
    bb7c:	063e01f4 			; <UNDEFINED> instruction: 0x063e01f4
    bb80:	94000001 	strls	r0, [r0], #-1
    bb84:	880000ac 	stmdahi	r0, {r2, r3, r5, r7}
    bb88:	1d0000ac 	stcne	0, cr0, [r0, #-688]	; 0xfffffd50
    bb8c:	00002775 	andeq	r2, r0, r5, ror r7
    bb90:	3e01f501 	cfsh32cc	mvfx15, mvfx1, #1
    bb94:	00000123 	andeq	r0, r0, r3, lsr #2
    bb98:	0000acf1 	strdeq	sl, [r0], -r1
    bb9c:	0000ace5 	andeq	sl, r0, r5, ror #25
    bba0:	000d2f1d 	andeq	r2, sp, sp, lsl pc
    bba4:	01f60100 	mvnseq	r0, r0, lsl #2
    bba8:	0009dc40 	andeq	sp, r9, r0, asr #24
    bbac:	00ad4e00 	adceq	r4, sp, r0, lsl #28
    bbb0:	00ad4200 	adceq	r4, sp, r0, lsl #4
    bbb4:	23e01d00 	mvncs	r1, #0, 26
    bbb8:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    bbbc:	01233e01 			; <UNDEFINED> instruction: 0x01233e01
    bbc0:	ada20000 	stcge	0, cr0, [r2]
    bbc4:	ad9e0000 	ldcge	0, cr0, [lr]
    bbc8:	d1200000 			; <UNDEFINED> instruction: 0xd1200000
    bbcc:	0100001c 	tsteq	r0, ip, lsl r0
    bbd0:	fa1401f9 	blx	50c3bc <__RAM_SIZE+0x40c3bc>
    bbd4:	ca000000 	bgt	bbdc <__HEAP_SIZE+0xabdc>
    bbd8:	c20000ad 	andgt	r0, r0, #173	; 0xad
    bbdc:	1f0000ad 	svcne	0x000000ad
    bbe0:	00002b55 	andeq	r2, r0, r5, asr fp
    bbe4:	1d01fa01 	vstrne	s30, [r1, #-4]
    bbe8:	00000766 	andeq	r0, r0, r6, ror #14
    bbec:	21689102 	cmncs	r8, r2, lsl #2
    bbf0:	00000000 	andeq	r0, r0, r0
    bbf4:	00001945 	andeq	r1, r0, r5, asr #18
    bbf8:	02500122 	subseq	r0, r0, #-2147483640	; 0x80000008
    bbfc:	01220074 			; <UNDEFINED> instruction: 0x01220074
    bc00:	007d0251 	rsbseq	r0, sp, r1, asr r2
    bc04:	03520122 	cmpeq	r2, #-2147483640	; 0x80000008
    bc08:	225301f3 	subscs	r0, r3, #-1073741764	; 0xc000003c
    bc0c:	30015301 	andcc	r5, r1, r1, lsl #6
    bc10:	011e0000 	tsteq	lr, r0
    bc14:	00002c5f 	andeq	r2, r0, pc, asr ip
    bc18:	1001c001 	andne	ip, r1, r1
    bc1c:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    bc28:	00ae0100 	adceq	r0, lr, r0, lsl #2
    bc2c:	16070100 	strne	r0, [r7], -r0, lsl #2
    bc30:	be1d0000 	cdplt	0, 1, cr0, cr13, cr0, {0}
    bc34:	0100002b 	tsteq	r0, fp, lsr #32
    bc38:	a43c01c0 	ldrtge	r0, [ip], #-448	; 0xfffffe40
    bc3c:	5f000005 	svcpl	0x00000005
    bc40:	510000ae 	smlatbpl	r0, lr, r0, r0
    bc44:	1d0000ae 	stcne	0, cr0, [r0, #-696]	; 0xfffffd48
    bc48:	0000281b 	andeq	r2, r0, fp, lsl r8
    bc4c:	3f01c101 	svccc	0x0001c101
    bc50:	00000106 	andeq	r0, r0, r6, lsl #2
    bc54:	0000aec8 	andeq	sl, r0, r8, asr #29
    bc58:	0000aebe 			; <UNDEFINED> instruction: 0x0000aebe
    bc5c:	0027751d 	eoreq	r7, r7, sp, lsl r5
    bc60:	01c20100 	biceq	r0, r2, r0, lsl #2
    bc64:	0001233f 	andeq	r2, r1, pc, lsr r3
    bc68:	00af1700 	adceq	r1, pc, r0, lsl #14
    bc6c:	00af0d00 	adceq	r0, pc, r0, lsl #26
    bc70:	0d2f1d00 	stceq	13, cr1, [pc, #-0]	; bc78 <__HEAP_SIZE+0xac78>
    bc74:	c3010000 	movwgt	r0, #4096	; 0x1000
    bc78:	09dc4101 	ldmibeq	ip, {r0, r8, lr}^
    bc7c:	af600000 	svcge	0x00600000
    bc80:	af5c0000 	svcge	0x005c0000
    bc84:	e01d0000 	ands	r0, sp, r0
    bc88:	01000023 	tsteq	r0, r3, lsr #32
    bc8c:	233f01c4 	teqcs	pc, #196, 2	; 0x31
    bc90:	85000001 	strhi	r0, [r0, #-1]
    bc94:	810000af 	smlatbhi	r0, pc, r0, r0	; <UNPREDICTABLE>
    bc98:	200000af 	andcs	r0, r0, pc, lsr #1
    bc9c:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    bca0:	1401c601 	strne	ip, [r1], #-1537	; 0xfffff9ff
    bca4:	000000fa 	strdeq	r0, [r0], -sl
    bca8:	0000afb1 			; <UNDEFINED> instruction: 0x0000afb1
    bcac:	0000afa5 	andeq	sl, r0, r5, lsr #31
    bcb0:	002b551f 	eoreq	r5, fp, pc, lsl r5
    bcb4:	01c70100 	biceq	r0, r7, r0, lsl #2
    bcb8:	0007661d 	andeq	r6, r7, sp, lsl r6
    bcbc:	68910200 	ldmvs	r1, {r9}
    bcc0:	00000024 	andeq	r0, r0, r4, lsr #32
    bcc4:	001a1300 	andseq	r1, sl, r0, lsl #6
    bcc8:	00002700 	andeq	r2, r0, r0, lsl #14
    bccc:	19360000 	ldmdbne	r6!, {}	; <UNPREDICTABLE>
    bcd0:	15ea0000 	strbne	r0, [sl, #0]!
    bcd4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    bcd8:	007d0251 	rsbseq	r0, sp, r1, asr r2
    bcdc:	01520122 	cmpeq	r2, r2, lsr #2
    bce0:	53012230 	movwpl	r2, #4656	; 0x1230
    bce4:	21003001 	tstcs	r0, r1
    bce8:	00000000 	andeq	r0, r0, r0
    bcec:	00001936 	andeq	r1, r0, r6, lsr r9
    bcf0:	02510122 	subseq	r0, r1, #-2147483640	; 0x80000008
    bcf4:	0122007d 			; <UNDEFINED> instruction: 0x0122007d
    bcf8:	00910352 	addseq	r0, r1, r2, asr r3
    bcfc:	53012206 	movwpl	r2, #4614	; 0x1206
    bd00:	00003001 	andeq	r3, r0, r1
    bd04:	00299025 	eoreq	r9, r9, r5, lsr #32
    bd08:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
    bd0c:	00000111 	andeq	r0, r0, r1, lsl r1
    bd10:	00000000 	andeq	r0, r0, r0
    bd14:	afff0000 	svcge	0x00ff0000
    bd18:	b0010000 	andlt	r0, r1, r0
    bd1c:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    bd20:	00002784 	andeq	r2, r0, r4, lsl #15
    bd24:	3b01a101 	blcc	74130 <__HEAP_SIZE+0x73130>
    bd28:	000000b3 	strheq	r0, [r0], -r3
    bd2c:	0000b023 	andeq	fp, r0, r3, lsr #32
    bd30:	0000b01f 	andeq	fp, r0, pc, lsl r0
    bd34:	0027051d 	eoreq	r0, r7, sp, lsl r5
    bd38:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    bd3c:	00012339 	andeq	r2, r1, r9, lsr r3
    bd40:	00b04500 	adcseq	r4, r0, r0, lsl #10
    bd44:	00b04100 	adcseq	r4, r0, r0, lsl #2
    bd48:	29541d00 	ldmdbcs	r4, {r8, sl, fp, ip}^
    bd4c:	a3010000 	movwge	r0, #4096	; 0x1000
    bd50:	01063901 	tsteq	r6, r1, lsl #18
    bd54:	b0670000 	rsblt	r0, r7, r0
    bd58:	b0630000 	rsblt	r0, r3, r0
    bd5c:	5e1d0000 	cdppl	0, 1, cr0, cr13, cr0, {0}
    bd60:	0100002b 	tsteq	r0, fp, lsr #32
    bd64:	9c3501a4 	ldflss	f0, [r5], #-656	; 0xfffffd70
    bd68:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    bd6c:	850000b0 	strhi	r0, [r0, #-176]	; 0xffffff50
    bd70:	1b0000b0 	blne	c038 <__HEAP_SIZE+0xb038>
    bd74:	00002719 	andeq	r2, r0, r9, lsl r7
    bd78:	4001a501 	andmi	sl, r1, r1, lsl #10
    bd7c:	00000632 	andeq	r0, r0, r2, lsr r6
    bd80:	1b009102 	blne	30190 <__HEAP_SIZE+0x2f190>
    bd84:	000028f8 	strdeq	r2, [r0], -r8
    bd88:	3201a601 	andcc	sl, r1, #1048576	; 0x100000
    bd8c:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    bd90:	24049102 	strcs	r9, [r4], #-258	; 0xfffffefe
    bd94:	00000000 	andeq	r0, r0, r0
    bd98:	00000b33 	andeq	r0, r0, r3, lsr fp
    bd9c:	00000021 	andeq	r0, r0, r1, lsr #32
    bda0:	001a2200 	andseq	r2, sl, r0, lsl #4
    bda4:	50012200 	andpl	r2, r1, r0, lsl #4
    bda8:	00047402 	andeq	r7, r4, r2, lsl #8
    bdac:	9a011e00 	bls	535b4 <__HEAP_SIZE+0x525b4>
    bdb0:	01000028 	tsteq	r0, r8, lsr #32
    bdb4:	01170172 	tsteq	r7, r2, ror r1
    bdb8:	000005a4 	andeq	r0, r0, r4, lsr #11
	...
    bdc4:	0000b0a7 	andeq	fp, r0, r7, lsr #1
    bdc8:	00178e01 	andseq	r8, r7, r1, lsl #28
    bdcc:	27841d00 	strcs	r1, [r4, r0, lsl #26]
    bdd0:	72010000 	andvc	r0, r1, #0
    bdd4:	00b33e01 	adcseq	r3, r3, r1, lsl #28
    bdd8:	b0e30000 	rsclt	r0, r3, r0
    bddc:	b0df0000 	sbcslt	r0, pc, r0
    bde0:	051d0000 	ldreq	r0, [sp, #-0]
    bde4:	01000027 	tsteq	r0, r7, lsr #32
    bde8:	233c0173 	teqcs	ip, #-1073741796	; 0xc000001c
    bdec:	08000001 	stmdaeq	r0, {r0}
    bdf0:	040000b1 	streq	r0, [r0], #-177	; 0xffffff4f
    bdf4:	1d0000b1 	stcne	0, cr0, [r0, #-708]	; 0xfffffd3c
    bdf8:	00002954 	andeq	r2, r0, r4, asr r9
    bdfc:	3c017401 	cfstrscc	mvf7, [r1], {1}
    be00:	00000106 	andeq	r0, r0, r6, lsl #2
    be04:	0000b12d 	andeq	fp, r0, sp, lsr #2
    be08:	0000b129 	andeq	fp, r0, r9, lsr #2
    be0c:	002b5e1d 	eoreq	r5, fp, sp, lsl lr
    be10:	01750100 	cmneq	r5, r0, lsl #2
    be14:	00009c38 	andeq	r9, r0, r8, lsr ip
    be18:	00b15200 	adcseq	r5, r1, r0, lsl #4
    be1c:	00b14e00 	adcseq	r4, r1, r0, lsl #28
    be20:	27191b00 	ldrcs	r1, [r9, -r0, lsl #22]
    be24:	76010000 	strvc	r0, [r1], -r0
    be28:	06324301 	ldrteq	r4, [r2], -r1, lsl #6
    be2c:	91020000 	mrsls	r0, (UNDEF: 2)
    be30:	2c901b00 	vldmiacs	r0, {d1-d0}
    be34:	77010000 	strvc	r0, [r1, -r0]
    be38:	123e3b01 	eorsne	r3, lr, #1024	; 0x400
    be3c:	91020000 	mrsls	r0, (UNDEF: 2)
    be40:	28f82004 	ldmcs	r8!, {r2, sp}^
    be44:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    be48:	06b71701 	ldrteq	r1, [r7], r1, lsl #14
    be4c:	b1750000 	cmnlt	r5, r0
    be50:	b1730000 	cmnlt	r3, r0
    be54:	00210000 	eoreq	r0, r1, r0
    be58:	07000000 	streq	r0, [r0, -r0]
    be5c:	22000016 	andcs	r0, r0, #22
    be60:	f3035001 	vhadd.u8	d5, d3, d1
    be64:	01225001 			; <UNDEFINED> instruction: 0x01225001
    be68:	01f30351 	mvnseq	r0, r1, asr r3
    be6c:	52012251 	andpl	r2, r1, #268435461	; 0x10000005
    be70:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    be74:	03530122 	cmpeq	r3, #-2147483640	; 0x80000008
    be78:	225301f3 	subscs	r0, r3, #-1073741764	; 0xc000003c
    be7c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    be80:	02220075 	eoreq	r0, r2, #117	; 0x75
    be84:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    be88:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    be8c:	002a2801 	eoreq	r2, sl, r1, lsl #16
    be90:	01500100 	cmpeq	r0, r0, lsl #2
    be94:	05a40117 	streq	r0, [r4, #279]!	; 0x117
	...
    bea0:	b1880000 	orrlt	r0, r8, r0
    bea4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    bea8:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    beac:	00002784 	andeq	r2, r0, r4, lsl #15
    beb0:	38015001 	stmdacc	r1, {r0, ip, lr}
    beb4:	000000b3 	strheq	r0, [r0], -r3
    beb8:	0000b1c4 	andeq	fp, r0, r4, asr #3
    bebc:	0000b1c0 	andeq	fp, r0, r0, asr #3
    bec0:	0027051d 	eoreq	r0, r7, sp, lsl r5
    bec4:	01510100 	cmpeq	r1, r0, lsl #2
    bec8:	00012336 	andeq	r2, r1, r6, lsr r3
    becc:	00b1e600 	adcseq	lr, r1, r0, lsl #12
    bed0:	00b1e200 	adcseq	lr, r1, r0, lsl #4
    bed4:	29541d00 	ldmdbcs	r4, {r8, sl, fp, ip}^
    bed8:	52010000 	andpl	r0, r1, #0
    bedc:	01063601 	tsteq	r6, r1, lsl #12
    bee0:	b2080000 	andlt	r0, r8, #0
    bee4:	b2040000 	andlt	r0, r4, #0
    bee8:	5e1d0000 	cdppl	0, 1, cr0, cr13, cr0, {0}
    beec:	0100002b 	tsteq	r0, fp, lsr #32
    bef0:	9c320153 	ldflss	f0, [r2], #-332	; 0xfffffeb4
    bef4:	2a000000 	bcs	befc <__HEAP_SIZE+0xaefc>
    bef8:	260000b2 			; <UNDEFINED> instruction: 0x260000b2
    befc:	1b0000b2 	blne	c1cc <__HEAP_SIZE+0xb1cc>
    bf00:	00002719 	andeq	r2, r0, r9, lsl r7
    bf04:	3d015401 	cfstrscc	mvf5, [r1, #-4]
    bf08:	00000632 	andeq	r0, r0, r2, lsr r6
    bf0c:	20009102 	andcs	r9, r0, r2, lsl #2
    bf10:	000028f8 	strdeq	r2, [r0], -r8
    bf14:	17015601 	strne	r5, [r1, -r1, lsl #12]
    bf18:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    bf1c:	0000b24c 	andeq	fp, r0, ip, asr #4
    bf20:	0000b248 	andeq	fp, r0, r8, asr #4
    bf24:	00000027 	andeq	r0, r0, r7, lsr #32
    bf28:	001a3100 	andseq	r3, sl, r0, lsl #2
    bf2c:	00183b00 	andseq	r3, r8, r0, lsl #22
    bf30:	50012200 	andpl	r2, r1, r0, lsl #4
    bf34:	002c0802 	eoreq	r0, ip, r2, lsl #16
    bf38:	00000021 	andeq	r0, r0, r1, lsr #32
    bf3c:	00160700 	andseq	r0, r6, r0, lsl #14
    bf40:	50012200 	andpl	r2, r1, r0, lsl #4
    bf44:	22007402 	andcs	r7, r0, #33554432	; 0x2000000
    bf48:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    bf4c:	52012200 	andpl	r2, r1, #0, 4
    bf50:	22007702 	andcs	r7, r0, #524288	; 0x80000
    bf54:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    bf58:	7d022200 	sfmvc	f2, 4, [r2, #-0]
    bf5c:	00910300 	addseq	r0, r1, r0, lsl #6
    bf60:	7d022206 	sfmvc	f2, 4, [r2, #-24]	; 0xffffffe8
    bf64:	00760204 	rsbseq	r0, r6, r4, lsl #4
    bf68:	012d0000 			; <UNDEFINED> instruction: 0x012d0000
    bf6c:	000019a8 	andeq	r1, r0, r8, lsr #19
    bf70:	0110ed01 	tsteq	r0, r1, lsl #26
    bf74:	000000fa 	strdeq	r0, [r0], -sl
    bf78:	100034c4 	andne	r3, r0, r4, asr #9
    bf7c:	10003520 	andne	r3, r0, r0, lsr #10
    bf80:	0000b26a 	andeq	fp, r0, sl, ror #4
    bf84:	00193001 	andseq	r3, r9, r1
    bf88:	1cd12e00 	ldclne	14, cr2, [r1], {0}
    bf8c:	ef010000 	svc	0x00010000
    bf90:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    bf94:	00b2a800 	adcseq	sl, r2, r0, lsl #16
    bf98:	00b2a200 	adcseq	sl, r2, r0, lsl #4
    bf9c:	34d22600 	ldrbcc	r2, [r2], #1536	; 0x600
    bfa0:	35041000 	strcc	r1, [r4, #-0]
    bfa4:	19261000 	stmdbne	r6!, {ip}
    bfa8:	e41f0000 	ldr	r0, [pc], #-0	; bfb0 <__HEAP_SIZE+0xafb0>
    bfac:	01000021 	tsteq	r0, r1, lsr #32
    bfb0:	30240122 	eorcc	r0, r4, r2, lsr #2
    bfb4:	02000019 	andeq	r0, r0, #25
    bfb8:	041f6c91 	ldreq	r6, [pc], #-3217	; bfc0 <__HEAP_SIZE+0xafc0>
    bfbc:	0100001e 	tsteq	r0, lr, lsl r0
    bfc0:	86230123 	strthi	r0, [r3], -r3, lsr #2
    bfc4:	02000005 	andeq	r0, r0, #5
    bfc8:	a81f7091 	ldmdage	pc, {r0, r4, r7, ip, sp, lr}	; <UNPREDICTABLE>
    bfcc:	01000023 	tsteq	r0, r3, lsr #32
    bfd0:	292c0124 	stmdbcs	ip!, {r2, r5, r8}
    bfd4:	02000000 	andeq	r0, r0, #0
    bfd8:	e2277491 	eor	r7, r7, #-1862270976	; 0x91000000
    bfdc:	3f100034 	svccc	0x00100034
    bfe0:	fd00001a 	stc2	0, cr0, [r0, #-104]	; 0xffffff98
    bfe4:	22000018 	andcs	r0, r0, #24
    bfe8:	91025001 	tstls	r2, r1
    bfec:	5101226c 	tstpl	r1, ip, ror #4
    bff0:	22709102 	rsbscs	r9, r0, #-2147483648	; 0x80000000
    bff4:	91025201 	tstls	r2, r1, lsl #4
    bff8:	fa210074 	blx	84c1d0 <__RAM_SIZE+0x74c1d0>
    bffc:	4e100034 	mrcmi	0, 0, r0, cr0, cr4, {1}
    c000:	2200001a 	andcs	r0, r0, #26
    c004:	03055001 	movweq	r5, #20481	; 0x5001
    c008:	1000344d 	andne	r3, r0, sp, asr #8
    c00c:	05510122 	ldrbeq	r0, [r1, #-290]	; 0xfffffede
    c010:	00604803 	rsbeq	r4, r0, r3, lsl #16
    c014:	53012210 	movwpl	r2, #4624	; 0x1210
    c018:	22007402 	andcs	r7, r0, #33554432	; 0x2000000
    c01c:	01007d02 	tsteq	r0, r2, lsl #26
    c020:	24000034 	strcs	r0, [r0], #-52	; 0xffffffcc
    c024:	100034cc 	andne	r3, r0, ip, asr #9
    c028:	00000b33 	andeq	r0, r0, r3, lsr fp
    c02c:	fc040700 	stc2	7, cr0, [r4], {-0}
    c030:	2f000002 	svccs	0x00000002
    c034:	10460101 	subne	r0, r6, r1, lsl #2
    c038:	10460000 	subne	r0, r6, r0
    c03c:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
    c040:	012f0c02 			; <UNDEFINED> instruction: 0x012f0c02
    c044:	000d8f01 	andeq	r8, sp, r1, lsl #30
    c048:	000d8f00 	andeq	r8, sp, r0, lsl #30
    c04c:	05510a00 	ldrbeq	r0, [r1, #-2560]	; 0xfffff600
    c050:	0101300c 	tsteq	r1, ip
    c054:	00000e26 	andeq	r0, r0, r6, lsr #28
    c058:	00000e26 	andeq	r0, r0, r6, lsr #28
    c05c:	300d7106 	andcc	r7, sp, r6, lsl #2
    c060:	0c810101 	stfeqs	f0, [r1], {1}
    c064:	0c810000 	stceq	0, cr0, [r1], {0}
    c068:	72060000 	andvc	r0, r6, #0
    c06c:	01012f0d 	tsteq	r1, sp, lsl #30
    c070:	00001497 	muleq	r0, r7, r4
    c074:	00001497 	muleq	r0, r7, r4
    c078:	13064f0a 	movwne	r4, #28426	; 0x6f0a
    c07c:	e501012f 	str	r0, [r1, #-303]	; 0xfffffed1
    c080:	e500000b 	str	r0, [r0, #-11]
    c084:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    c088:	2f0601b9 	svccs	0x000601b9
    c08c:	0cf50101 	ldfeqe	f0, [r5], #4
    c090:	0cf50000 	ldcleq	0, cr0, [r5]
    c094:	910a0000 	mrsls	r0, (UNDEF: 10)
    c098:	012f0c03 			; <UNDEFINED> instruction: 0x012f0c03
    c09c:	000c5a01 	andeq	r5, ip, r1, lsl #20
    c0a0:	000c5a00 	andeq	r5, ip, r0, lsl #20
    c0a4:	01f70800 	mvnseq	r0, r0, lsl #16
    c0a8:	0101300d 	tsteq	r1, sp
    c0ac:	00001456 	andeq	r1, r0, r6, asr r4
    c0b0:	00001456 	andeq	r1, r0, r6, asr r4
    c0b4:	2f06b80c 	svccs	0x0006b80c
    c0b8:	0c750101 	ldfeqe	f0, [r5], #-4
    c0bc:	0c750000 	ldcleq	0, cr0, [r5], #-0
    c0c0:	d1080000 	mrsle	r0, (UNDEF: 8)
    c0c4:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
    c0c8:	001f4f01 	andseq	r4, pc, r1, lsl #30
    c0cc:	001f4f00 	andseq	r4, pc, r0, lsl #30
    c0d0:	06a40900 	strteq	r0, [r4], r0, lsl #18
    c0d4:	01012f0c 	tsteq	r1, ip, lsl #30
    c0d8:	00000f6f 	andeq	r0, r0, pc, ror #30
    c0dc:	00000f6f 	andeq	r0, r0, pc, ror #30
    c0e0:	06065b09 	streq	r5, [r6], -r9, lsl #22
    c0e4:	aa01012f 	bge	4c5a8 <__HEAP_SIZE+0x4b5a8>
    c0e8:	aa000013 	bge	c13c <__HEAP_SIZE+0xb13c>
    c0ec:	0a000013 	beq	c140 <__HEAP_SIZE+0xb140>
    c0f0:	2f0606f6 	svccs	0x000606f6
    c0f4:	140c0101 	strne	r0, [ip], #-257	; 0xfffffeff
    c0f8:	140c0000 	strne	r0, [ip], #-0
    c0fc:	93090000 	movwls	r0, #36864	; 0x9000
    c100:	01300c06 	teqeq	r0, r6, lsl #24
    c104:	000cbc01 	andeq	fp, ip, r1, lsl #24
    c108:	000cbc00 	andeq	fp, ip, r0, lsl #24
    c10c:	0d6f0600 	stcleq	6, cr0, [pc, #-0]	; c114 <__HEAP_SIZE+0xb114>
    c110:	8b01012f 	blhi	4c5d4 <__HEAP_SIZE+0x4b5d4>
    c114:	8b000017 	blhi	c178 <__HEAP_SIZE+0xb178>
    c118:	09000017 	stmdbeq	r0, {r0, r1, r2, r4}
    c11c:	2f0c0e14 	svccs	0x000c0e14
    c120:	0bab0101 	bleq	feacc52c <__StackTop+0xc69cc52c>
    c124:	0bab0000 	bleq	feacc12c <__StackTop+0xc69cc12c>
    c128:	c4080000 	strgt	r0, [r8], #-0
    c12c:	01300601 	teqeq	r0, r1, lsl #12
    c130:	000f4b01 	andeq	r4, pc, r1, lsl #22
    c134:	000f4b00 	andeq	r4, pc, r0, lsl #22
    c138:	08b50c00 	ldmeq	r5!, {sl, fp}
    c13c:	1101012f 	tstne	r1, pc, lsr #2
    c140:	1100001a 	tstne	r0, sl, lsl r0
    c144:	0b00001a 	bleq	c1b4 <__HEAP_SIZE+0xb1b4>
    c148:	2f0a0575 	svccs	0x000a0575
    c14c:	19ea0101 	stmibne	sl!, {r0, r8}^
    c150:	19ea0000 	stmibne	sl!, {}^	; <UNPREDICTABLE>
    c154:	fd090000 	stc2	0, cr0, [r9, #-0]
    c158:	15001201 	strne	r1, [r0, #-513]	; 0xfffffdff
    c15c:	02000006 	andeq	r0, r0, #6
    c160:	00182900 	andseq	r2, r8, r0, lsl #18
    c164:	dc010400 	cfstrsle	mvf0, [r1], {-0}
    c168:	0c000000 	stceq	0, cr0, [r0], {-0}
    c16c:	00002db0 			; <UNDEFINED> instruction: 0x00002db0
    c170:	000001c5 	andeq	r0, r0, r5, asr #3
    c174:	00000b98 	muleq	r0, r8, fp
	...
    c180:	000085b3 			; <UNDEFINED> instruction: 0x000085b3
    c184:	00000a02 	andeq	r0, r0, r2, lsl #20
    c188:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    c18c:	0000003a 	andeq	r0, r0, sl, lsr r0
    c190:	00002903 	andeq	r2, r0, r3, lsl #18
    c194:	07040400 	streq	r0, [r4, -r0, lsl #8]
    c198:	0000023a 	andeq	r0, r0, sl, lsr r2
    c19c:	69050405 	stmdbvs	r5, {r0, r2, sl}
    c1a0:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    c1a4:	028e0508 	addeq	r0, lr, #8, 10	; 0x2000000
    c1a8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    c1ac:	00028204 	andeq	r8, r2, r4, lsl #4
    c1b0:	06010400 	streq	r0, [r1], -r0, lsl #8
    c1b4:	000000ac 	andeq	r0, r0, ip, lsr #1
    c1b8:	00000002 	andeq	r0, r0, r2
    c1bc:	182b0300 	stmdane	fp!, {r8, r9}
    c1c0:	00000069 	andeq	r0, r0, r9, rrx
    c1c4:	aa080104 	bge	20c5dc <__RAM_SIZE+0x10c5dc>
    c1c8:	04000000 	streq	r0, [r0], #-0
    c1cc:	02de0502 	sbcseq	r0, lr, #8388608	; 0x800000
    c1d0:	02040000 	andeq	r0, r4, #0
    c1d4:	0000c907 	andeq	ip, r0, r7, lsl #18
    c1d8:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    c1dc:	00000293 	muleq	r0, r3, r2
    c1e0:	0003b602 	andeq	fp, r3, r2, lsl #12
    c1e4:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    c1e8:	00000091 	muleq	r0, r1, r0
    c1ec:	35070404 	strcc	r0, [r7, #-1028]	; 0xfffffbfc
    c1f0:	04000002 	streq	r0, [r0], #-2
    c1f4:	02300708 	eorseq	r0, r0, #8, 14	; 0x200000
    c1f8:	04060000 	streq	r0, [r6], #-0
    c1fc:	b3080104 	movwlt	r0, #33028	; 0x8104
    c200:	02000000 	andeq	r0, r0, #0
    c204:	00000002 	andeq	r0, r0, r2
    c208:	5d131804 	ldcpl	8, cr1, [r3, #-16]
    c20c:	02000000 	andeq	r0, r0, #0
    c210:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
    c214:	85143004 	ldrhi	r3, [r4, #-4]
    c218:	02000000 	andeq	r0, r0, #0
    c21c:	00000b6a 	andeq	r0, r0, sl, ror #22
    c220:	b41a5105 	ldrlt	r5, [sl], #-261	; 0xfffffefb
    c224:	07000000 	streq	r0, [r0, -r0]
    c228:	0000a804 	andeq	sl, r0, r4, lsl #16
    c22c:	2ce80800 	stclcs	8, cr0, [r8]
    c230:	061c0000 	ldreq	r0, [ip], -r0
    c234:	01491094 	swpbeq	r1, r4, [r9]
    c238:	95090000 	strls	r0, [r9, #-0]
    c23c:	0600002e 	streq	r0, [r0], -lr, lsr #32
    c240:	00290c96 	mlaeq	r9, r6, ip, r0
    c244:	23020000 	movwcs	r0, #8192	; 0x2000
    c248:	2ee10900 	vfmacs.f16	s1, s2, s0	; <UNPREDICTABLE>
    c24c:	97060000 	strls	r0, [r6, -r0]
    c250:	0000290c 	andeq	r2, r0, ip, lsl #18
    c254:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    c258:	002d9009 	eoreq	r9, sp, r9
    c25c:	0c980600 	ldceq	6, cr0, [r8], {0}
    c260:	00000029 	andeq	r0, r0, r9, lsr #32
    c264:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    c268:	00002d3f 	andeq	r2, r0, pc, lsr sp
    c26c:	290c9906 	stmdbcs	ip, {r1, r2, r8, fp, ip, pc}
    c270:	02000000 	andeq	r0, r0, #0
    c274:	f3090c23 			; <UNDEFINED> instruction: 0xf3090c23
    c278:	0600002c 	streq	r0, [r0], -ip, lsr #32
    c27c:	00290c9a 	mlaeq	r9, sl, ip, r0
    c280:	23020000 	movwcs	r0, #8192	; 0x2000
    c284:	2e760910 			; <UNDEFINED> instruction: 0x2e760910
    c288:	9b060000 	blls	18c290 <__RAM_SIZE+0x8c290>
    c28c:	0000290c 	andeq	r2, r0, ip, lsl #18
    c290:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    c294:	002f2b09 	eoreq	r2, pc, r9, lsl #22
    c298:	0c9c0600 	ldceq	6, cr0, [ip], {0}
    c29c:	00000029 	andeq	r0, r0, r9, lsr #32
    c2a0:	00182302 	andseq	r2, r8, r2, lsl #6
    c2a4:	002d1202 	eoreq	r1, sp, r2, lsl #4
    c2a8:	039d0600 	orrseq	r0, sp, #0, 12
    c2ac:	000000d2 	ldrdeq	r0, [r0], -r2
    c2b0:	0000a80a 	andeq	sl, r0, sl, lsl #16
    c2b4:	00016600 	andeq	r6, r1, r0, lsl #12
    c2b8:	003a0b00 	eorseq	r0, sl, r0, lsl #22
    c2bc:	7fff0000 	svcvc	0x00ff0000
    c2c0:	02230c00 	eoreq	r0, r3, #0, 24
    c2c4:	5d010000 	stcpl	0, cr0, [r1, #-0]
    c2c8:	00015514 	andeq	r5, r1, r4, lsl r5
    c2cc:	08010100 	stmdaeq	r1, {r8}
    c2d0:	00002d74 	andeq	r2, r0, r4, ror sp
    c2d4:	10640108 	rsbne	r0, r4, r8, lsl #2
    c2d8:	000001a0 	andeq	r0, r0, r0, lsr #3
    c2dc:	002d1e09 	eoreq	r1, sp, r9, lsl #28
    c2e0:	1b660100 	blne	198c6e8 <__RAM_SIZE+0x188c6e8>
    c2e4:	000001a0 	andeq	r0, r0, r0, lsr #3
    c2e8:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
    c2ec:	00002f44 	andeq	r2, r0, r4, asr #30
    c2f0:	290c6701 	stmdbcs	ip, {r0, r8, r9, sl, sp, lr}
    c2f4:	02000000 	andeq	r0, r0, #0
    c2f8:	07000423 	streq	r0, [r0, -r3, lsr #8]
    c2fc:	00017404 	andeq	r7, r1, r4, lsl #8
    c300:	2e6a0200 	cdpcs	2, 6, cr0, cr10, cr0, {0}
    c304:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    c308:	00017403 	andeq	r7, r1, r3, lsl #8
    c30c:	2eb00d00 	cdpcs	13, 11, cr0, cr0, cr0, {0}
    c310:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    c314:	00003515 	andeq	r3, r0, r5, lsl r5
    c318:	4f0e0800 	svcmi	0x000e0800
    c31c:	0100002f 	tsteq	r0, pc, lsr #32
    c320:	01a624a1 			; <UNDEFINED> instruction: 0x01a624a1
    c324:	03050000 	movweq	r0, #20480	; 0x5000
    c328:	38008d58 	stmdacc	r0, {r3, r4, r6, r8, sl, fp, pc}
    c32c:	002d530e 	eoreq	r5, sp, lr, lsl #6
    c330:	26a20100 	strtcs	r0, [r2], r0, lsl #2
    c334:	000001e3 	andeq	r0, r0, r3, ror #3
    c338:	8d440305 	stclhi	3, cr0, [r4, #-20]	; 0xffffffec
    c33c:	04073800 	streq	r3, [r7], #-2048	; 0xfffff800
    c340:	000001a6 	andeq	r0, r0, r6, lsr #3
    c344:	002ecd0e 	eoreq	ip, lr, lr, lsl #26
    c348:	1fa60100 	svcne	0x00a60100
    c34c:	00000029 	andeq	r0, r0, r9, lsr #32
    c350:	8d480305 	stclhi	3, cr0, [r8, #-20]	; 0xffffffec
    c354:	f30e3800 	vsub.i8	d3, d14, d0
    c358:	0100002c 	tsteq	r0, ip, lsr #32
    c35c:	00291fa7 	eoreq	r1, r9, r7, lsr #31
    c360:	03050000 	movweq	r0, #20480	; 0x5000
    c364:	38008d4c 	stmdacc	r0, {r2, r3, r6, r8, sl, fp, pc}
    c368:	002e760e 	eoreq	r7, lr, lr, lsl #12
    c36c:	1fa80100 	svcne	0x00a80100
    c370:	00000029 	andeq	r0, r0, r9, lsr #32
    c374:	8d500305 	ldclhi	3, cr0, [r0, #-20]	; 0xffffffec
    c378:	2b0e3800 	blcs	39a380 <__RAM_SIZE+0x29a380>
    c37c:	0100002f 	tsteq	r0, pc, lsr #32
    c380:	00291fa9 	eoreq	r1, r9, r9, lsr #31
    c384:	03050000 	movweq	r0, #20480	; 0x5000
    c388:	38008d54 	stmdacc	r0, {r2, r4, r6, r8, sl, fp, pc}
    c38c:	2e2d010f 	sufcse	f0, f5, #10.0
    c390:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    c394:	00010602 	andeq	r0, r1, r2, lsl #12
    c398:	00000000 	andeq	r0, r0, r0
    c39c:	02000000 	andeq	r0, r0, #0
    c3a0:	1001007d 	andne	r0, r1, sp, ror r0
    c3a4:	002f9601 	eoreq	r9, pc, r1, lsl #12
    c3a8:	02300100 	eorseq	r0, r0, #0, 2
    c3ac:	00000106 	andeq	r0, r0, r6, lsl #2
    c3b0:	00000000 	andeq	r0, r0, r0
    c3b4:	b2d40000 	sbcslt	r0, r4, #0
    c3b8:	f2010000 	vhadd.s8	d0, d1, d0
    c3bc:	11000002 	tstne	r0, r2
    c3c0:	00002ce7 	andeq	r2, r0, r7, ror #25
    c3c4:	27023001 	strcs	r3, [r2, -r1]
    c3c8:	000002f2 	strdeq	r0, [r0], -r2
    c3cc:	0000b2f8 	strdeq	fp, [r0], -r8
    c3d0:	0000b2f4 	strdeq	fp, [r0], -r4
    c3d4:	002d2e12 	eoreq	r2, sp, r2, lsl lr
    c3d8:	02320100 	eorseq	r0, r2, #0, 2
    c3dc:	0001e313 	andeq	lr, r1, r3, lsl r3
    c3e0:	00b31a00 	adcseq	r1, r3, r0, lsl #20
    c3e4:	00b31600 	adcseq	r1, r3, r0, lsl #12
    c3e8:	2f561200 	svccs	0x00561200
    c3ec:	33010000 	movwcc	r0, #4096	; 0x1000
    c3f0:	00290c02 	eoreq	r0, r9, r2, lsl #24
    c3f4:	b33c0000 	teqlt	ip, #0
    c3f8:	b3380000 	teqlt	r8, #0
    c3fc:	41120000 	tstmi	r2, r0
    c400:	0100002e 	tsteq	r0, lr, lsr #32
    c404:	29190233 	ldmdbcs	r9, {r0, r1, r4, r5, r9}
    c408:	5f000000 	svcpl	0x00000000
    c40c:	5b0000b3 	blpl	c6e0 <__HEAP_SIZE+0xb6e0>
    c410:	120000b3 	andne	r0, r0, #179	; 0xb3
    c414:	00002d36 	andeq	r2, r0, r6, lsr sp
    c418:	27023301 	strcs	r3, [r2, -r1, lsl #6]
    c41c:	00000029 	andeq	r0, r0, r9, lsr #32
    c420:	0000b382 	andeq	fp, r0, r2, lsl #7
    c424:	0000b37e 	andeq	fp, r0, lr, ror r3
    c428:	00000013 	andeq	r0, r0, r3, lsl r0
    c42c:	0005d100 	andeq	sp, r5, r0, lsl #2
    c430:	00001300 	andeq	r1, r0, r0, lsl #6
    c434:	05e00000 	strbeq	r0, [r0, #0]!
    c438:	00130000 	andseq	r0, r3, r0
    c43c:	ef000000 	svc	0x00000000
    c440:	13000005 	movwne	r0, #5
    c444:	00000000 	andeq	r0, r0, r0
    c448:	000005fd 	strdeq	r0, [r0], -sp
    c44c:	49040700 	stmdbmi	r4, {r8, r9, sl}
    c450:	14000001 	strne	r0, [r0], #-1
    c454:	00002d59 	andeq	r2, r0, r9, asr sp
    c458:	0d01ec01 	stceq	12, cr14, [r1, #-4]
    c45c:	00357801 	eorseq	r7, r5, r1, lsl #16
    c460:	0035dc10 	eorseq	sp, r5, r0, lsl ip
    c464:	00b3a210 	adcseq	sl, r3, r0, lsl r2
    c468:	03530100 	cmpeq	r3, #0, 2
    c46c:	0c110000 	ldceq	0, cr0, [r1], {-0}
    c470:	0100002f 	tsteq	r0, pc, lsr #32
    c474:	e33701ec 	teq	r7, #236, 2	; 0x3b
    c478:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
    c47c:	e60000b3 			; <UNDEFINED> instruction: 0xe60000b3
    c480:	120000b3 	andne	r0, r0, #179	; 0xb3
    c484:	00000c0e 	andeq	r0, r0, lr, lsl #24
    c488:	1301ee01 	movwne	lr, #7681	; 0x1e01
    c48c:	000001e3 	andeq	r0, r0, r3, ror #3
    c490:	0000b42b 	andeq	fp, r0, fp, lsr #8
    c494:	0000b425 	andeq	fp, r0, r5, lsr #8
    c498:	63757015 	cmnvs	r5, #21
    c49c:	01ef0100 	mvneq	r0, r0, lsl #2
    c4a0:	0000cc0f 	andeq	ip, r0, pc, lsl #24
    c4a4:	00b46100 	adcseq	r6, r4, r0, lsl #2
    c4a8:	00b45900 	adcseq	r5, r4, r0, lsl #18
    c4ac:	00160000 	andseq	r0, r6, r0
    c4b0:	0100002f 	tsteq	r0, pc, lsr #32
    c4b4:	010d01bc 			; <UNDEFINED> instruction: 0x010d01bc
    c4b8:	10003520 	andne	r3, r0, r0, lsr #10
    c4bc:	10003578 	andne	r3, r0, r8, ror r5
    c4c0:	01007d02 	tsteq	r0, r2, lsl #26
    c4c4:	000003c2 	andeq	r0, r0, r2, asr #7
    c4c8:	002f6312 	eoreq	r6, pc, r2, lsl r3	; <UNPREDICTABLE>
    c4cc:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    c4d0:	0001e313 	andeq	lr, r1, r3, lsl r3
    c4d4:	00b49700 	adcseq	r9, r4, r0, lsl #14
    c4d8:	00b49500 	adcseq	r9, r4, r0, lsl #10
    c4dc:	2d811200 	sfmcs	f1, 4, [r1]
    c4e0:	bf010000 	svclt	0x00010000
    c4e4:	00b41b01 	adcseq	r1, r4, r1, lsl #22
    c4e8:	b4ae0000 	strtlt	r0, [lr], #0
    c4ec:	b4aa0000 	strtlt	r0, [sl], #0
    c4f0:	e4120000 	ldr	r0, [r2], #-0
    c4f4:	0100002d 	tsteq	r0, sp, lsr #32
    c4f8:	b42b01bf 	strtlt	r0, [fp], #-447	; 0xfffffe41
    c4fc:	d0000000 	andle	r0, r0, r0
    c500:	cc0000b4 	stcgt	0, cr0, [r0], {180}	; 0xb4
    c504:	120000b4 	andne	r0, r0, #180	; 0xb4
    c508:	00002f1c 	andeq	r2, r0, ip, lsl pc
    c50c:	0c01c001 	stceq	0, cr12, [r1], {1}
    c510:	00000029 	andeq	r0, r0, r9, lsr #32
    c514:	0000b4f5 	strdeq	fp, [r0], -r5
    c518:	0000b4ef 	andeq	fp, r0, pc, ror #9
    c51c:	c0011700 	andgt	r1, r1, r0, lsl #14
    c520:	0100002e 	tsteq	r0, lr, lsr #32
    c524:	010801a9 	smlatbeq	r8, r9, r1, r0
    c528:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    c534:	0000b524 	andeq	fp, r0, r4, lsr #10
    c538:	00045001 	andeq	r5, r4, r1
    c53c:	2f5e1100 	svccs	0x005e1100
    c540:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    c544:	00291d01 	eoreq	r1, r9, r1, lsl #26
    c548:	b54c0000 	strblt	r0, [ip, #-0]
    c54c:	b5440000 	strblt	r0, [r4, #-0]
    c550:	44110000 	ldrmi	r0, [r1], #-0
    c554:	0100002e 	tsteq	r0, lr, lsr #32
    c558:	291d01aa 	ldmdbcs	sp, {r1, r3, r5, r7, r8}
    c55c:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    c560:	830000b5 	movwhi	r0, #181	; 0xb5
    c564:	150000b5 	strne	r0, [r0, #-181]	; 0xffffff4b
    c568:	01007670 	tsteq	r0, r0, ror r6
    c56c:	9f0c01ac 	svcls	0x000c01ac
    c570:	bd000000 	stclt	0, cr0, [r0, #-0]
    c574:	b50000b5 	strlt	r0, [r0, #-181]	; 0xffffff4b
    c578:	180000b5 	stmdane	r0, {r0, r2, r4, r5, r7}
    c57c:	00000000 	andeq	r0, r0, r0
    c580:	0000051e 	andeq	r0, r0, lr, lsl r5
    c584:	00000434 	andeq	r0, r0, r4, lsr r4
    c588:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    c58c:	1a000074 	bne	c764 <__HEAP_SIZE+0xb764>
    c590:	00000000 	andeq	r0, r0, r0
    c594:	0000060b 	andeq	r0, r0, fp, lsl #12
    c598:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    c59c:	01190075 	tsteq	r9, r5, ror r0
    c5a0:	19300151 	ldmdbne	r0!, {r0, r4, r6, r8}
    c5a4:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    c5a8:	0f000000 	svceq	0x00000000
    c5ac:	002f8001 	eoreq	r8, pc, r1
    c5b0:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    c5b4:	00000106 	andeq	r0, r0, r6, lsl #2
    c5b8:	00000000 	andeq	r0, r0, r0
    c5bc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c5c0:	011b0100 	tsteq	fp, r0, lsl #2
    c5c4:	00002e4a 	andeq	r2, r0, sl, asr #28
    c5c8:	08019d01 	stmdaeq	r1, {r0, r8, sl, fp, ip, pc}
    c5cc:	00002901 	andeq	r2, r0, r1, lsl #18
	...
    c5d8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c5dc:	00011b01 	andeq	r1, r1, r1, lsl #22
    c5e0:	0100002e 	tsteq	r0, lr, lsr #32
    c5e4:	01080197 			; <UNDEFINED> instruction: 0x01080197
    c5e8:	00000029 	andeq	r0, r0, r9, lsr #32
	...
    c5f4:	01007d02 	tsteq	r0, r2, lsl #26
    c5f8:	14560110 	ldrbne	r0, [r6], #-272	; 0xfffffef0
    c5fc:	5c010000 	stcpl	0, cr0, [r1], {-0}
    c600:	b0010601 	andlt	r0, r1, r1, lsl #12
    c604:	00100036 	andseq	r0, r0, r6, lsr r0
    c608:	f3100037 	vqadd.u16	d0, d0, d23
    c60c:	010000b5 	strheq	r0, [r0, -r5]
    c610:	0000051e 	andeq	r0, r0, lr, lsl r5
    c614:	0076701c 	rsbseq	r7, r6, ip, lsl r0
    c618:	18015c01 	stmdane	r1, {r0, sl, fp, ip, lr}
    c61c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c620:	0000b629 	andeq	fp, r0, r9, lsr #12
    c624:	0000b61f 	andeq	fp, r0, pc, lsl r6
    c628:	63757015 	cmnvs	r5, #21
    c62c:	015e0100 	cmpeq	lr, r0, lsl #2
    c630:	0000cc0f 	andeq	ip, r0, pc, lsl #24
    c634:	00b66e00 	adcseq	r6, r6, r0, lsl #28
    c638:	00b66800 	adcseq	r6, r6, r0, lsl #16
    c63c:	2fa81200 	svccs	0x00a81200
    c640:	5f010000 	svcpl	0x00010000
    c644:	01e31301 	mvneq	r1, r1, lsl #6
    c648:	b6990000 	ldrlt	r0, [r9], r0
    c64c:	b6970000 	ldrlt	r0, [r7], r0
    c650:	d6130000 	ldrle	r0, [r3], -r0
    c654:	d1100036 	tstle	r0, r6, lsr r0
    c658:	18000005 	stmdane	r0, {r0, r2}
    c65c:	100036e8 	andne	r3, r0, r8, ror #13
    c660:	000002f8 	strdeq	r0, [r0], -r8
    c664:	00000514 	andeq	r0, r0, r4, lsl r5
    c668:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    c66c:	13000075 	movwne	r0, #117	; 0x75
    c670:	100036f4 	strdne	r3, [r0], -r4
    c674:	000005e0 	andeq	r0, r0, r0, ror #11
    c678:	4b011d00 	blmi	53a80 <__HEAP_SIZE+0x52a80>
    c67c:	0100000f 	tsteq	r0, pc
    c680:	9f0108ad 	svcls	0x000108ad
    c684:	dc000000 	stcle	0, cr0, [r0], {-0}
    c688:	b0100035 	andslt	r0, r0, r5, lsr r0
    c68c:	ac100036 	ldcge	0, cr0, [r0], {54}	; 0x36
    c690:	010000b6 	strheq	r0, [r0, -r6]
    c694:	000005d1 	ldrdeq	r0, [r0], -r1
    c698:	002f741e 	eoreq	r7, pc, lr, lsl r4	; <UNPREDICTABLE>
    c69c:	1dad0100 	stfnes	f0, [sp]
    c6a0:	00000029 	andeq	r0, r0, r9, lsr #32
    c6a4:	0000b6d8 	ldrdeq	fp, [r0], -r8
    c6a8:	0000b6cc 	andeq	fp, r0, ip, asr #13
    c6ac:	002d2e1f 	eoreq	r2, sp, pc, lsl lr
    c6b0:	13af0100 			; <UNDEFINED> instruction: 0x13af0100
    c6b4:	000001e3 	andeq	r0, r0, r3, ror #3
    c6b8:	0000b72a 	andeq	fp, r0, sl, lsr #14
    c6bc:	0000b724 	andeq	fp, r0, r4, lsr #14
    c6c0:	002cd71f 	eoreq	sp, ip, pc, lsl r7
    c6c4:	13b00100 	movsne	r0, #0, 2
    c6c8:	000001e3 	andeq	r0, r0, r3, ror #3
    c6cc:	0000b75b 	andeq	fp, r0, fp, asr r7
    c6d0:	0000b753 	andeq	fp, r0, r3, asr r7
    c6d4:	002df11f 	eoreq	pc, sp, pc, lsl r1	; <UNPREDICTABLE>
    c6d8:	13b10100 			; <UNDEFINED> instruction: 0x13b10100
    c6dc:	000001e3 	andeq	r0, r0, r3, ror #3
    c6e0:	0000b796 	muleq	r0, r6, r7
    c6e4:	0000b794 	muleq	r0, r4, r7
    c6e8:	0029031f 	eoreq	r0, r9, pc, lsl r3
    c6ec:	0cb20100 	ldfeqs	f0, [r2]
    c6f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c6f4:	0000b7af 	andeq	fp, r0, pc, lsr #15
    c6f8:	0000b7a9 	andeq	fp, r0, r9, lsr #15
    c6fc:	002e151f 	eoreq	r1, lr, pc, lsl r5
    c700:	0cb30100 	ldfeqs	f0, [r3]
    c704:	00000029 	andeq	r0, r0, r9, lsr #32
    c708:	0000b7de 	ldrdeq	fp, [r0], -lr
    c70c:	0000b7da 	ldrdeq	fp, [r0], -sl
    c710:	00360413 	eorseq	r0, r6, r3, lsl r4
    c714:	0005d110 	andeq	sp, r5, r0, lsl r1
    c718:	36281300 	strtcc	r1, [r8], -r0, lsl #6
    c71c:	03531000 	cmpeq	r3, #0
    c720:	88130000 	ldmdahi	r3, {}	; <UNPREDICTABLE>
    c724:	e0100036 	ands	r0, r0, r6, lsr r0
    c728:	00000005 	andeq	r0, r0, r5
    c72c:	6f010120 	svcvs	0x00010120
    c730:	6f00000f 	svcvs	0x0000000f
    c734:	0700000f 	streq	r0, [r0, -pc]
    c738:	2006065b 	andcs	r0, r6, fp, asr r6
    c73c:	140c0101 	strne	r0, [ip], #-257	; 0xfffffeff
    c740:	140c0000 	strne	r0, [ip], #-0
    c744:	93070000 	movwls	r0, #28672	; 0x7000
    c748:	01210c06 			; <UNDEFINED> instruction: 0x01210c06
    c74c:	000e2601 	andeq	r2, lr, r1, lsl #12
    c750:	000e2600 	andeq	r2, lr, r0, lsl #12
    c754:	0d710500 	cfldr64eq	mvdx0, [r1, #-0]
    c758:	81010121 	tsthi	r1, r1, lsr #2
    c75c:	8100000c 	tsthi	r0, ip
    c760:	0500000c 	streq	r0, [r0, #-12]
    c764:	01220d72 			; <UNDEFINED> instruction: 0x01220d72
    c768:	0001be01 	andeq	fp, r1, r1, lsl #28
    c76c:	0001b400 	andeq	fp, r1, r0, lsl #8
    c770:	00000800 	andeq	r0, r0, r0, lsl #16
    c774:	00000563 	andeq	r0, r0, r3, ror #10
    c778:	1a870002 	bne	fe1cc788 <__StackTop+0xc60cc788>
    c77c:	01040000 	mrseq	r0, (UNDEF: 4)
    c780:	000000dc 	ldrdeq	r0, [r0], -ip
    c784:	0030200c 	eorseq	r2, r0, ip
    c788:	0001c500 	andeq	ip, r1, r0, lsl #10
    c78c:	000bf000 	andeq	pc, fp, r0
	...
    c798:	008d0400 	addeq	r0, sp, r0, lsl #8
    c79c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    c7a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    c7a4:	3a070403 	bcc	1cd7b8 <__RAM_SIZE+0xcd7b8>
    c7a8:	03000002 	movweq	r0, #2
    c7ac:	028e0508 	addeq	r0, lr, #8, 10	; 0x2000000
    c7b0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    c7b4:	00028204 	andeq	r8, r2, r4, lsl #4
    c7b8:	06010300 	streq	r0, [r1], -r0, lsl #6
    c7bc:	000000ac 	andeq	r0, r0, ip, lsr #1
    c7c0:	00000004 	andeq	r0, r0, r4
    c7c4:	182b0200 	stmdane	fp!, {r9}
    c7c8:	00000058 	andeq	r0, r0, r8, asr r0
    c7cc:	aa080103 	bge	20cbe0 <__RAM_SIZE+0x10cbe0>
    c7d0:	03000000 	movweq	r0, #0
    c7d4:	02de0502 	sbcseq	r0, lr, #8388608	; 0x800000
    c7d8:	02030000 	andeq	r0, r3, #0
    c7dc:	0000c907 	andeq	ip, r0, r7, lsl #18
    c7e0:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    c7e4:	00000293 	muleq	r0, r3, r2
    c7e8:	0003b604 	andeq	fp, r3, r4, lsl #12
    c7ec:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    c7f0:	00000080 	andeq	r0, r0, r0, lsl #1
    c7f4:	35070403 	strcc	r0, [r7, #-1027]	; 0xfffffbfd
    c7f8:	03000002 	movweq	r0, #2
    c7fc:	02300708 	eorseq	r0, r0, #8, 14	; 0x200000
    c800:	02040000 	andeq	r0, r4, #0
    c804:	03000000 	movweq	r0, #0
    c808:	004c1318 	subeq	r1, ip, r8, lsl r3
    c80c:	b8040000 	stmdalt	r4, {}	; <UNPREDICTABLE>
    c810:	03000003 	movweq	r0, #3
    c814:	00741430 	rsbseq	r1, r4, r0, lsr r4
    c818:	9a050000 	bls	14c820 <__RAM_SIZE+0x4c820>
    c81c:	04000000 	streq	r0, [r0], #-0
    c820:	00001ef6 	strdeq	r1, [r0], -r6
    c824:	b7112404 	ldrlt	r2, [r1, -r4, lsl #8]
    c828:	06000000 	streq	r0, [r0], -r0
    c82c:	0000bd04 	andeq	fp, r0, r4, lsl #26
    c830:	c9010700 	stmdbgt	r1, {r8, r9, sl}
    c834:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    c838:	000000c9 	andeq	r0, r0, r9, asr #1
    c83c:	04040900 	streq	r0, [r4], #-2304	; 0xfffff700
    c840:	00000ad1 	ldrdeq	r0, [r0], -r1
    c844:	9a1a4905 	bls	69ec60 <__RAM_SIZE+0x59ec60>
    c848:	04000000 	streq	r0, [r0], #-0
    c84c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    c850:	6d1a4a05 	vldrvs	s8, [sl, #-20]	; 0xffffffec
    c854:	04000000 	streq	r0, [r0], #-0
    c858:	00000b6a 	andeq	r0, r0, sl, ror #22
    c85c:	9a1a5105 	bls	6a0c78 <__RAM_SIZE+0x5a0c78>
    c860:	03000000 	movweq	r0, #0
    c864:	00b30801 	adcseq	r0, r3, r1, lsl #16
    c868:	04060000 	streq	r0, [r6], #-0
    c86c:	000000cb 	andeq	r0, r0, fp, asr #1
    c870:	5801070a 	stmdapl	r1, {r1, r3, r8, r9, sl}
    c874:	07000000 	streq	r0, [r0, -r0]
    c878:	011d01b6 			; <UNDEFINED> instruction: 0x011d01b6
    c87c:	7f0b0000 	svcvc	0x000b0000
    c880:	0000001a 	andeq	r0, r0, sl, lsl r0
    c884:	0022b90b 	eoreq	fp, r2, fp, lsl #18
    c888:	d70b0100 	strle	r0, [fp, -r0, lsl #2]
    c88c:	02000022 	andeq	r0, r0, #34	; 0x22
    c890:	318c0400 	orrcc	r0, ip, r0, lsl #8
    c894:	56010000 	strpl	r0, [r1], -r0
    c898:	00012e12 	andeq	r2, r1, r2, lsl lr
    c89c:	011d0c00 	tsteq	sp, r0, lsl #24
    c8a0:	04060000 	streq	r0, [r6], #-0
    c8a4:	00000134 	andeq	r0, r0, r4, lsr r1
    c8a8:	af0e010d 	svcge	0x000e010d
    c8ac:	0100002f 	tsteq	r0, pc, lsr #32
    c8b0:	a62a0200 	strtge	r0, [sl], -r0, lsl #4
    c8b4:	05000000 	streq	r0, [r0, #-0]
    c8b8:	00001003 	andeq	r1, r0, r3
    c8bc:	31b40e38 			; <UNDEFINED> instruction: 0x31b40e38
    c8c0:	1d010000 	stcne	0, cr0, [r1, #-0]
    c8c4:	009a2502 	addseq	r2, sl, r2, lsl #10
    c8c8:	03050000 	movweq	r0, #20480	; 0x5000
    c8cc:	38008d64 	stmdacc	r0, {r2, r5, r6, r8, sl, fp, pc}
    c8d0:	0030f60e 	eorseq	pc, r0, lr, lsl #12
    c8d4:	02230100 	eoreq	r0, r3, #0, 2
    c8d8:	00009a25 	andeq	r9, r0, r5, lsr #20
    c8dc:	68030500 	stmdavs	r3, {r8, sl}
    c8e0:	0e38008d 	cdpeq	0, 3, cr0, cr8, cr13, {4}
    c8e4:	00003099 	muleq	r0, r9, r0
    c8e8:	25022901 	strcs	r2, [r2, #-2305]	; 0xfffff6ff
    c8ec:	0000009a 	muleq	r0, sl, r0
    c8f0:	8d600305 	stclhi	3, cr0, [r0, #-20]!	; 0xffffffec
    c8f4:	010f3800 	tsteq	pc, r0, lsl #16
    c8f8:	00003147 	andeq	r3, r0, r7, asr #2
    c8fc:	0c07af01 	stceq	15, cr10, [r7], {1}
    c900:	0000d701 	andeq	sp, r0, r1, lsl #14
	...
    c90c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c910:	0001c501 	andeq	ip, r1, r1, lsl #10
    c914:	315e1000 	cmpcc	lr, r0
    c918:	b1010000 	mrslt	r0, (UNDEF: 1)
    c91c:	009a0e07 	addseq	r0, sl, r7, lsl #28
    c920:	b7fe0000 	ldrblt	r0, [lr, r0]!
    c924:	b7fc0000 	ldrblt	r0, [ip, r0]!
    c928:	d1110000 	tstle	r1, r0
    c92c:	0100001c 	tsteq	r0, ip, lsl r0
    c930:	d71007b2 			; <UNDEFINED> instruction: 0xd71007b2
    c934:	01000000 	mrseq	r0, (UNDEF: 0)
    c938:	10011200 	andne	r1, r1, r0, lsl #4
    c93c:	01000022 	tsteq	r0, r2, lsr #32
    c940:	010606ee 	smlatteq	r6, lr, r6, r0
	...
    c94c:	01007d02 	tsteq	r0, r2, lsl #26
    c950:	16eb0113 	usatne	r0, #11, r3, lsl #2
    c954:	55010000 	strpl	r0, [r1, #-0]
    c958:	d7010c06 	strle	r0, [r1, -r6, lsl #24]
    c95c:	80000000 	andhi	r0, r0, r0
    c960:	c0100039 	andsgt	r0, r0, r9, lsr r0
    c964:	11100039 	tstne	r0, r9, lsr r0
    c968:	010000b8 	strheq	r0, [r0, -r8]
    c96c:	00000234 	andeq	r0, r0, r4, lsr r2
    c970:	00020f14 	andeq	r0, r2, r4, lsl pc
    c974:	2fea1500 	svccs	0x00ea1500
    c978:	65010000 	strvs	r0, [r1, #-0]
    c97c:	023a2106 	eorseq	r2, sl, #-2147483647	; 0x80000001
    c980:	16000000 	strne	r0, [r0], -r0
    c984:	100039a8 	andne	r3, r0, r8, lsr #19
    c988:	0000040b 	andeq	r0, r0, fp, lsl #8
    c98c:	0039b016 	eorseq	fp, r9, r6, lsl r0
    c990:	0004f210 	andeq	pc, r4, r0, lsl r2	; <UNPREDICTABLE>
    c994:	39b41600 	ldmibcc	r4!, {r9, sl, ip}
    c998:	05001000 	streq	r1, [r0, #-0]
    c99c:	b8160000 	ldmdalt	r6, {}	; <UNPREDICTABLE>
    c9a0:	d6100039 			; <UNDEFINED> instruction: 0xd6100039
    c9a4:	00000003 	andeq	r0, r0, r3
    c9a8:	01290406 			; <UNDEFINED> instruction: 0x01290406
    c9ac:	340c0000 	strcc	r0, [ip], #-0
    c9b0:	13000002 	movwne	r0, #2
    c9b4:	001e4e01 	andseq	r4, lr, r1, lsl #28
    c9b8:	06020100 	streq	r0, [r2], -r0, lsl #2
    c9bc:	00f60113 	rscseq	r0, r6, r3, lsl r1
    c9c0:	38f00000 	ldmcc	r0!, {}^	; <UNPREDICTABLE>
    c9c4:	39801000 	stmibcc	r0, {ip}
    c9c8:	b8311000 	ldmdalt	r1!, {ip}
    c9cc:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    c9d0:	17000002 	strne	r0, [r0, -r2]
    c9d4:	00000a05 	andeq	r0, r0, r5, lsl #20
    c9d8:	38060201 	stmdacc	r6, {r0, r9}
    c9dc:	000000f6 	strdeq	r0, [r0], -r6
    c9e0:	0000b885 	andeq	fp, r0, r5, lsl #17
    c9e4:	0000b85d 	andeq	fp, r0, sp, asr r8
    c9e8:	000a4418 	andeq	r4, sl, r8, lsl r4
    c9ec:	06030100 	streq	r0, [r3], -r0, lsl #2
    c9f0:	0000f638 	andeq	pc, r0, r8, lsr r6	; <UNPREDICTABLE>
    c9f4:	17510100 	ldrbne	r0, [r1, -r0, lsl #2]
    c9f8:	00003140 	andeq	r3, r0, r0, asr #2
    c9fc:	39060401 	stmdbcc	r6, {r0, sl}
    ca00:	000000ab 	andeq	r0, r0, fp, lsr #1
    ca04:	0000b995 	muleq	r0, r5, r9
    ca08:	0000b98f 	andeq	fp, r0, pc, lsl #19
    ca0c:	00215617 	eoreq	r5, r1, r7, lsl r6
    ca10:	06050100 	streq	r0, [r5], -r0, lsl #2
    ca14:	0000c931 	andeq	ip, r0, r1, lsr r9
    ca18:	00b9c700 	adcseq	ip, r9, r0, lsl #14
    ca1c:	00b9c100 	adcseq	ip, r9, r0, lsl #2
    ca20:	01190000 	tsteq	r9, r0
    ca24:	00002ff8 	strdeq	r2, [r0], -r8
    ca28:	06040901 	streq	r0, [r4], -r1, lsl #18
    ca2c:	0038da01 	eorseq	sp, r8, r1, lsl #20
    ca30:	0038ee10 	eorseq	lr, r8, r0, lsl lr
    ca34:	00b9f210 	adcseq	pc, r9, r0, lsl r2	; <UNPREDICTABLE>
    ca38:	03130100 	tsteq	r3, #0, 2
    ca3c:	83170000 	tsthi	r7, #0
    ca40:	01000030 	tsteq	r0, r0, lsr r0
    ca44:	13240409 			; <UNDEFINED> instruction: 0x13240409
    ca48:	1a000003 	bne	ca5c <__HEAP_SIZE+0xba5c>
    ca4c:	120000ba 	andne	r0, r0, #186	; 0xba
    ca50:	100000ba 	strhne	r0, [r0], -sl
    ca54:	00002fc9 	andeq	r2, r0, r9, asr #31
    ca58:	0e041901 	vmlaeq.f16	s2, s8, s2	; <UNPREDICTABLE>
    ca5c:	0000009a 	muleq	r0, sl, r0
    ca60:	0000ba5a 	andeq	fp, r0, sl, asr sl
    ca64:	0000ba54 	andeq	fp, r0, r4, asr sl
    ca68:	002fce10 	eoreq	ip, pc, r0, lsl lr	; <UNPREDICTABLE>
    ca6c:	04220100 	strteq	r0, [r2], #-256	; 0xffffff00
    ca70:	00008e0d 	andeq	r8, r0, sp, lsl #28
    ca74:	00ba8900 	adcseq	r8, sl, r0, lsl #18
    ca78:	00ba8500 	adcseq	r8, sl, r0, lsl #10
    ca7c:	38ec1600 	stmiacc	ip!, {r9, sl, ip}^
    ca80:	050f1000 	streq	r1, [pc, #-0]	; ca88 <__HEAP_SIZE+0xba88>
    ca84:	06000000 	streq	r0, [r0], -r0
    ca88:	00009a04 	andeq	r9, r0, r4, lsl #20
    ca8c:	96011900 	strls	r1, [r1], -r0, lsl #18
    ca90:	01000031 	tsteq	r0, r1, lsr r0
    ca94:	010603f2 	strdeq	r0, [r6, -r2]
    ca98:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
    ca9c:	100038da 	ldrdne	r3, [r0], -sl
    caa0:	0000baa7 	andeq	fp, r0, r7, lsr #21
    caa4:	00036d01 	andeq	r6, r3, r1, lsl #26
    caa8:	31cc1000 	biccc	r1, ip, r0
    caac:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    cab0:	009a0e03 	addseq	r0, sl, r3, lsl #28
    cab4:	bacb0000 	blt	ff2ccabc <__StackTop+0xc71ccabc>
    cab8:	bac70000 	blt	ff1ccac0 <__StackTop+0xc70ccac0>
    cabc:	be160000 	cdplt	0, 1, cr0, cr6, cr0, {0}
    cac0:	1d100038 	ldcne	0, cr0, [r0, #-224]	; 0xffffff20
    cac4:	16000005 	strne	r0, [r0], -r5
    cac8:	100038c4 	andne	r3, r0, r4, asr #17
    cacc:	0000052b 	andeq	r0, r0, fp, lsr #10
    cad0:	0038d81a 	eorseq	sp, r8, sl, lsl r8
    cad4:	00053a10 	andeq	r3, r5, r0, lsl sl
    cad8:	50011b00 	andpl	r1, r1, r0, lsl #22
    cadc:	00007402 	andeq	r7, r0, r2, lsl #8
    cae0:	81011900 	tsthi	r1, r0, lsl #18
    cae4:	0100000c 	tsteq	r0, ip
    cae8:	010603e6 	smlatteq	r6, r6, r3, r0
    caec:	1000389c 	mulne	r0, ip, r8
    caf0:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
    caf4:	0000bae9 	andeq	fp, r0, r9, ror #21
    caf8:	00039901 	andeq	r9, r3, r1, lsl #18
    cafc:	38b21a00 	ldmcc	r2!, {r9, fp, ip}
    cb00:	053a1000 	ldreq	r1, [sl, #-0]!
    cb04:	011b0000 	tsteq	fp, r0
    cb08:	00300150 	eorseq	r0, r0, r0, asr r1
    cb0c:	26011900 	strcs	r1, [r1], -r0, lsl #18
    cb10:	0100000e 	tsteq	r0, lr
    cb14:	010603da 	ldrdeq	r0, [r6, -sl]
    cb18:	10003880 	andne	r3, r0, r0, lsl #17
    cb1c:	1000389c 	mulne	r0, ip, r8
    cb20:	0000bb09 	andeq	fp, r0, r9, lsl #22
    cb24:	0003bf01 	andeq	fp, r3, r1, lsl #30
    cb28:	38861600 	stmcc	r6, {r9, sl, ip}
    cb2c:	051d1000 	ldreq	r1, [sp, #-0]
    cb30:	12000000 	andne	r0, r0, #0
    cb34:	000cbc01 	andeq	fp, ip, r1, lsl #24
    cb38:	03ce0100 	biceq	r0, lr, #0, 2
    cb3c:	38680106 	stmdacc	r8!, {r1, r2, r8}^
    cb40:	387e1000 	ldmdacc	lr!, {ip}^
    cb44:	7d021000 	stcvc	0, cr1, [r2, #-0]
    cb48:	161c0100 	ldrne	r0, [ip], -r0, lsl #2
    cb4c:	01000031 	tsteq	r0, r1, lsr r0
    cb50:	010d0326 	tsteq	sp, r6, lsr #6
    cb54:	10003700 	andne	r3, r0, r0, lsl #14
    cb58:	10003718 	andne	r3, r0, r8, lsl r7
    cb5c:	0000bb29 	andeq	fp, r0, r9, lsr #22
    cb60:	00040b01 	andeq	r0, r4, r1, lsl #22
    cb64:	2fc10e00 	svccs	0x00c10e00
    cb68:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    cb6c:	00a61703 	adceq	r1, r6, r3, lsl #14
    cb70:	91020000 	mrsls	r0, (UNDEF: 2)
    cb74:	370c1674 	smlsdxcc	ip, r4, r6, r1
    cb78:	051d1000 	ldreq	r1, [sp, #-0]
    cb7c:	12000000 	andne	r0, r0, #0
    cb80:	00312701 	eorseq	r2, r1, r1, lsl #14
    cb84:	030a0100 	movweq	r0, #41216	; 0xa100
    cb88:	382c0120 	stmdacc	ip!, {r5, r8}
    cb8c:	38681000 	stmdacc	r8!, {ip}^
    cb90:	7d021000 	stcvc	0, cr1, [r2, #-0]
    cb94:	01190100 	tsteq	r9, r0, lsl #2
    cb98:	0000238c 	andeq	r2, r0, ip, lsl #7
    cb9c:	24022f01 	strcs	r2, [r2], #-3841	; 0xfffff0ff
    cba0:	00371801 	eorseq	r1, r7, r1, lsl #16
    cba4:	00382c10 	eorseq	r2, r8, r0, lsl ip
    cba8:	00bb6110 	adcseq	r6, fp, r0, lsl r1
    cbac:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
    cbb0:	5b170000 	blpl	5ccbb8 <__RAM_SIZE+0x4ccbb8>
    cbb4:	01000018 	tsteq	r0, r8, lsl r0
    cbb8:	e34b022f 	movt	r0, #45615	; 0xb22f
    cbbc:	8b000000 	blhi	cbc4 <__HEAP_SIZE+0xbbc4>
    cbc0:	810000bb 	strhhi	r0, [r0, -fp]
    cbc4:	100000bb 	strhne	r0, [r0], -fp
    cbc8:	000031a6 	andeq	r3, r0, r6, lsr #3
    cbcc:	12023101 	andne	r3, r2, #1073741824	; 0x40000000
    cbd0:	0000009a 	muleq	r0, sl, r0
    cbd4:	0000bbd0 	ldrdeq	fp, [r0], -r0
    cbd8:	0000bbcc 	andeq	fp, r0, ip, asr #23
    cbdc:	00300a10 	eorseq	r0, r0, r0, lsl sl
    cbe0:	02310100 	eorseq	r0, r1, #0, 2
    cbe4:	00009a21 	andeq	r9, r0, r1, lsr #20
    cbe8:	00bbf200 	adcseq	pc, fp, r0, lsl #4
    cbec:	00bbee00 	adcseq	lr, fp, r0, lsl #28
    cbf0:	30661000 	rsbcc	r1, r6, r0
    cbf4:	31010000 	mrscc	r0, (UNDEF: 1)
    cbf8:	009a3802 	addseq	r3, sl, r2, lsl #16
    cbfc:	bc140000 	ldclt	0, cr0, [r4], {-0}
    cc00:	bc100000 	ldclt	0, cr0, [r0], {-0}
    cc04:	b4100000 	ldrlt	r0, [r0], #-0
    cc08:	01000030 	tsteq	r0, r0, lsr r0
    cc0c:	9a560231 	bls	158d4d8 <__RAM_SIZE+0x148d4d8>
    cc10:	3d000000 	stccc	0, cr0, [r0, #-0]
    cc14:	370000bc 			; <UNDEFINED> instruction: 0x370000bc
    cc18:	100000bc 	strhne	r0, [r0], -ip
    cc1c:	000030e2 	andeq	r3, r0, r2, ror #1
    cc20:	14023201 	strne	r3, [r2], #-513	; 0xfffffdff
    cc24:	000000e3 	andeq	r0, r0, r3, ror #1
    cc28:	0000bc6c 	andeq	fp, r0, ip, ror #24
    cc2c:	0000bc66 	andeq	fp, r0, r6, ror #24
    cc30:	0037be1d 	eorseq	fp, r7, sp, lsl lr
    cc34:	0037e210 	eorseq	lr, r7, r0, lsl r2
    cc38:	0004df10 	andeq	sp, r4, r0, lsl pc
    cc3c:	30cc1000 	sbccc	r1, ip, r0
    cc40:	a5010000 	strge	r0, [r1, #-0]
    cc44:	009a1a02 	addseq	r1, sl, r2, lsl #20
    cc48:	bc990000 	ldclt	0, cr0, [r9], {0}
    cc4c:	bc970000 	ldclt	0, cr0, [r7], {0}
    cc50:	16000000 	strne	r0, [r0], -r0
    cc54:	10003732 	andne	r3, r0, r2, lsr r7
    cc58:	00000548 	andeq	r0, r0, r8, asr #10
    cc5c:	0037fa16 	eorseq	pc, r7, r6, lsl sl	; <UNPREDICTABLE>
    cc60:	00055710 	andeq	r5, r5, r0, lsl r7
    cc64:	011e0000 	tsteq	lr, r0
    cc68:	002fda01 	eoreq	sp, pc, r1, lsl #20
    cc6c:	002fda00 	eoreq	sp, pc, r0, lsl #20
    cc70:	064d0600 	strbeq	r0, [sp], -r0, lsl #12
    cc74:	b201011f 	andlt	r0, r1, #-1073741817	; 0xc0000007
    cc78:	b2000020 	andlt	r0, r0, #32
    cc7c:	07000020 	streq	r0, [r0, -r0, lsr #32]
    cc80:	1e1b0df5 	mrcne	13, 0, r0, cr11, cr5, {7}
    cc84:	31710101 	cmncc	r1, r1, lsl #2
    cc88:	31710000 	cmncc	r1, r0
    cc8c:	2a060000 	bcs	18cc94 <__RAM_SIZE+0x8cc94>
    cc90:	01011e06 	tsteq	r1, r6, lsl #28
    cc94:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    cc98:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    cc9c:	1f0a5206 	svcne	0x000a5206
    cca0:	1b820101 	blne	fe08d0ac <__StackTop+0xc5f8d0ac>
    cca4:	1b820000 	blne	fe08ccac <__StackTop+0xc5f8ccac>
    cca8:	9a070000 	bls	1cccb0 <__RAM_SIZE+0xcccb0>
    ccac:	011e0c0d 	tsteq	lr, sp, lsl #24
    ccb0:	000edc01 	andeq	sp, lr, r1, lsl #24
    ccb4:	000edc00 	andeq	sp, lr, r0, lsl #24
    ccb8:	06570600 	ldrbeq	r0, [r7], -r0, lsl #12
    ccbc:	a401011f 	strge	r0, [r1], #-287	; 0xfffffee1
    ccc0:	a400001c 	strge	r0, [r0], #-28	; 0xffffffe4
    ccc4:	0700001c 	smladeq	r0, ip, r0, r0
    ccc8:	1f160e58 	svcne	0x00160e58
    cccc:	1b950101 	blne	fe54d0d8 <__StackTop+0xc644d0d8>
    ccd0:	1b950000 	blne	fe54ccd8 <__StackTop+0xc644ccd8>
    ccd4:	46070000 	strmi	r0, [r7], -r0
    ccd8:	7a000a0e 	bvc	f518 <__HEAP_SIZE+0xe518>
    ccdc:	02000001 	andeq	r0, r0, #1
    cce0:	001c6500 	andseq	r6, ip, r0, lsl #10
    cce4:	dc010400 	cfstrsle	mvf0, [r1], {-0}
    cce8:	0c000000 	stceq	0, cr0, [r0], {-0}
    ccec:	000031ea 	andeq	r3, r0, sl, ror #3
    ccf0:	000001c5 	andeq	r0, r0, r5, asr #3
    ccf4:	00000c58 	andeq	r0, r0, r8, asr ip
	...
    cd00:	000092fa 	strdeq	r9, [r0], -sl
    cd04:	ac060102 	stfges	f0, [r6], {2}
    cd08:	02000000 	andeq	r0, r0, #0
    cd0c:	00aa0801 	adceq	r0, sl, r1, lsl #16
    cd10:	02020000 	andeq	r0, r2, #0
    cd14:	0002de05 	andeq	sp, r2, r5, lsl #28
    cd18:	07020200 	streq	r0, [r2, -r0, lsl #4]
    cd1c:	000000c9 	andeq	r0, r0, r9, asr #1
    cd20:	93050402 	movwls	r0, #21506	; 0x5402
    cd24:	03000002 	movweq	r0, #2
    cd28:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    cd2c:	58194f02 	ldmdapl	r9, {r1, r8, r9, sl, fp, lr}
    cd30:	02000000 	andeq	r0, r0, #0
    cd34:	02350704 	eorseq	r0, r5, #4, 14	; 0x100000
    cd38:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    cd3c:	00028e05 	andeq	r8, r2, r5, lsl #28
    cd40:	07080200 	streq	r0, [r8, -r0, lsl #4]
    cd44:	00000230 	andeq	r0, r0, r0, lsr r2
    cd48:	69050404 	stmdbvs	r5, {r2, sl}
    cd4c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    cd50:	023a0704 	eorseq	r0, sl, #4, 14	; 0x100000
    cd54:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    cd58:	03000003 	movweq	r0, #3
    cd5c:	004c1430 	subeq	r1, ip, r0, lsr r4
    cd60:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    cd64:	00028204 	andeq	r8, r2, r4, lsl #4
    cd68:	0abd0300 	beq	fef4d970 <__StackTop+0xc6e4d970>
    cd6c:	4a040000 	bmi	10cd74 <__RAM_SIZE+0xcd74>
    cd70:	0000451a 	andeq	r4, r0, sl, lsl r5
    cd74:	41010500 	tstmi	r1, r0, lsl #10
    cd78:	01000032 	tsteq	r0, r2, lsr r0
    cd7c:	010a01c7 	smlabteq	sl, r7, r1, r0
    cd80:	10003a78 	andne	r3, r0, r8, ror sl
    cd84:	10003a8a 	andne	r3, r0, sl, lsl #21
    cd88:	01007d02 	tsteq	r0, r2, lsl #26
    cd8c:	31db0105 	bicscc	r0, fp, r5, lsl #2
    cd90:	6b010000 	blvs	4cd98 <__HEAP_SIZE+0x4bd98>
    cd94:	30010a01 	andcc	r0, r1, r1, lsl #20
    cd98:	7410003a 	ldrvc	r0, [r0], #-58	; 0xffffffc6
    cd9c:	0210003a 	andseq	r0, r0, #58	; 0x3a
    cda0:	0601007d 			; <UNDEFINED> instruction: 0x0601007d
    cda4:	000edc01 	andeq	sp, lr, r1, lsl #24
    cda8:	06e80100 	strbteq	r0, [r8], r0, lsl #2
    cdac:	003a2201 	eorseq	r2, sl, r1, lsl #4
    cdb0:	003a3010 	eorseq	r3, sl, r0, lsl r0
    cdb4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    cdb8:	0000f101 	andeq	pc, r0, r1, lsl #2
    cdbc:	325d0700 	subscc	r0, sp, #0, 14
    cdc0:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    cdc4:	00007b40 	andeq	r7, r0, r0, asr #22
    cdc8:	00500100 	subseq	r0, r0, r0, lsl #2
    cdcc:	11d10108 	bicsne	r0, r1, r8, lsl #2
    cdd0:	d7010000 	strle	r0, [r1, -r0]
    cdd4:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    cdd8:	3a0c0000 	bcc	30cde0 <__RAM_SIZE+0x20cde0>
    cddc:	3a221000 	bcc	890de4 <__RAM_SIZE+0x790de4>
    cde0:	7d021000 	stcvc	0, cr1, [r2, #-0]
    cde4:	01090100 	mrseq	r0, (UNDEF: 25)
    cde8:	00002fda 	ldrdeq	r2, [r0], -sl
    cdec:	0106c201 	tsteq	r6, r1, lsl #4
    cdf0:	100039ec 	andne	r3, r0, ip, ror #19
    cdf4:	10003a06 	andne	r3, r0, r6, lsl #20
    cdf8:	01007d02 	tsteq	r0, r2, lsl #26
    cdfc:	324d0109 	subcc	r0, sp, #1073741826	; 0x40000002
    ce00:	b3010000 	movwlt	r0, #4096	; 0x1000
    ce04:	00000106 	andeq	r0, r0, r6, lsl #2
    ce08:	00000000 	andeq	r0, r0, r0
    ce0c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ce10:	01090100 	mrseq	r0, (UNDEF: 25)
    ce14:	00003264 	andeq	r3, r0, r4, ror #4
    ce18:	0106a401 	tsteq	r6, r1, lsl #8
	...
    ce24:	01007d02 	tsteq	r0, r2, lsl #26
    ce28:	32330108 	eorscc	r0, r3, #8, 2
    ce2c:	93010000 	movwls	r0, #4096	; 0x1000
    ce30:	008e010c 	addeq	r0, lr, ip, lsl #2
	...
    ce3c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ce40:	01090100 	mrseq	r0, (UNDEF: 25)
    ce44:	00003171 	andeq	r3, r0, r1, ror r1
    ce48:	010a7901 	tsteq	sl, r1, lsl #18
    ce4c:	100039c0 	andne	r3, r0, r0, asr #19
    ce50:	100039e6 	andne	r3, r0, r6, ror #19
    ce54:	01007d02 	tsteq	r0, r2, lsl #26
    ce58:	00002200 	andeq	r2, r0, r0, lsl #4
    ce5c:	1d000200 	sfmne	f0, 4, [r0, #-0]
    ce60:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    ce64:	00953901 	addseq	r3, r5, r1, lsl #18
    ce68:	003ab000 	eorseq	fp, sl, r0
    ce6c:	003b2010 	eorseq	r2, fp, r0, lsl r0
    ce70:	00327410 	eorseq	r7, r2, r0, lsl r4
    ce74:	0001c500 	andeq	ip, r1, r0, lsl #10
    ce78:	00329400 	eorseq	r9, r2, r0, lsl #8
    ce7c:	22800100 	addcs	r0, r0, #0, 2
    ce80:	02000000 	andeq	r0, r0, #0
    ce84:	001d3100 	andseq	r3, sp, r0, lsl #2
    ce88:	bf010400 	svclt	0x00010400
    ce8c:	20000095 	mulcs	r0, r5, r0
    ce90:	7410003b 	ldrvc	r0, [r0], #-59	; 0xffffffc5
    ce94:	a210003b 	andsge	r0, r0, #59	; 0x3b
    ce98:	c5000032 	strgt	r0, [r0, #-50]	; 0xffffffce
    ce9c:	94000001 	strls	r0, [r0], #-1
    cea0:	01000032 	tsteq	r0, r2, lsr r0
    cea4:	Address 0x0000cea4 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
        xReturn = pdFALSE;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00061001 	andeq	r1, r6, r1
}
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      38:	0f050000 	svceq	0x00050000
      3c:	000b0b00 	andeq	r0, fp, r0, lsl #22
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
        BaseType_t xReturn = pdFAIL;
      44:	00001349 	andeq	r1, r0, r9, asr #6
    }
      48:	0b000f07 	bleq	3c6c <__HEAP_SIZE+0x2c6c>
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
      4c:	0013490b 	andseq	r4, r3, fp, lsl #18
      50:	00130800 	andseq	r0, r3, r0, lsl #16
        pc = *sp;
      54:	0c3c0e03 	ldceq	14, cr0, [ip], #-12
      58:	01090000 	mrseq	r0, (UNDEF: 9)
    return pc;
      5c:	01134901 	tsteq	r3, r1, lsl #18
        return 0;
      60:	0a000013 	beq	b4 <__STACKSEAL_SIZE+0xb4>
      64:	13490021 	movtne	r0, #36897	; 0x9021
      68:	0000052f 	andeq	r0, r0, pc, lsr #10
      6c:	0300340b 	movweq	r3, #1035	; 0x40b
      70:	3b0b3a0e 	blcc	2ce8b0 <__RAM_SIZE+0x1ce8b0>
      74:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      78:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
      7c:	0c00000a 	stceq	0, cr0, [r0], {10}
            prvUnlockQueue( pxQueue );
      80:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ffffffd0 <__StackTop+0xc7efffd0>
            ( void ) xTaskResumeAll();
      84:	0b3a0e03 	bleq	e83898 <__RAM_SIZE+0xd83898>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	0b390b3b 	bleq	e42d7c <__RAM_SIZE+0xd42d7c>
      8c:	13490c27 	movtne	r0, #39975	; 0x9c27
      90:	01120111 	tsteq	r2, r1, lsl r1
        taskENTER_CRITICAL();
      94:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	0013010c 	andseq	r0, r3, ip, lsl #2
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00340d00 	eorseq	r0, r4, r0, lsl #26
      a0:	0b3a0e03 	bleq	e838b4 <__RAM_SIZE+0xd838b4>
                else if( xEntryTimeSet == pdFALSE )
      a4:	0b390b3b 	bleq	e42d98 <__RAM_SIZE+0xd42d98>
        taskEXIT_CRITICAL();
      a8:	06021349 	streq	r1, [r2], -r9, asr #6
        vTaskSuspendAll();
      ac:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
        prvLockQueue( pxQueue );
      b0:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
      b4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
      b8:	0b3b0b3a 	bleq	ec2da8 <__RAM_SIZE+0xdc2da8>
      bc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
      c0:	0c3c1349 	ldceq	3, cr1, [ip], #-292	; 0xfffffedc
      c4:	00001301 	andeq	r1, r0, r1, lsl #6
      c8:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
      cc:	10000013 	andne	r0, r0, r3, lsl r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00018289 	andeq	r8, r1, r9, lsl #5
      d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
      d8:	89110000 	ldmdbhi	r1, {}	; <UNPREDICTABLE>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	11010182 	smlabbne	r1, r2, r1, r0
      e0:	01133101 	tsteq	r3, r1, lsl #2
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	12000013 	andne	r0, r0, #19
      e8:	0001828a 	andeq	r8, r1, sl, lsl #5
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
      f0:	1300000a 	movwne	r0, #10
                prvUnlockQueue( pxQueue );
      f4:	01018289 	smlabbeq	r1, r9, r2, r8
      f8:	13310111 	teqne	r1, #1073741828	; 0x40000004
                if( xTaskResumeAll() == pdFALSE )
      fc:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     100:	3a0e0301 	bcc	380d0c <__RAM_SIZE+0x280d0c>
                    taskYIELD_WITHIN_API();
     104:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
                    if( xInheritanceOccurred != pdFALSE )
     108:	110c270b 	tstne	ip, fp, lsl #14
                return errQUEUE_EMPTY;
     10c:	40011201 	andmi	r1, r1, r1, lsl #4
                        taskENTER_CRITICAL();
     110:	0c429706 	mcrreq	7, 0, r9, r2, cr6
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00001301 	andeq	r1, r0, r1, lsl #6
     118:	03003415 	movweq	r3, #1045	; 0x415
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	3b0b3a0e 	blcc	2ce95c <__RAM_SIZE+0x1ce95c>
                        taskEXIT_CRITICAL();
     120:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     124:	000a0213 	andeq	r0, sl, r3, lsl r2
     128:	00051600 	andeq	r1, r5, r0, lsl #12
     12c:	0b3a0e03 	bleq	e83940 <__RAM_SIZE+0xd83940>
     130:	0b390b3b 	bleq	e42e24 <__RAM_SIZE+0xd42e24>
     134:	06021349 	streq	r1, [r2], -r9, asr #6
     138:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     13c:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     140:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     144:	0b3b0b3a 	bleq	ec2e34 <__RAM_SIZE+0xdc2e34>
     148:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     14c:	01120111 	tsteq	r2, r1, lsl r1
     150:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     154:	0013010c 	andseq	r0, r3, ip, lsl #2
     158:	00341800 	eorseq	r1, r4, r0, lsl #16
     15c:	13490e03 	movtne	r0, #40451	; 0x9e03
     160:	0a020c34 	beq	83238 <__HEAP_SIZE+0x82238>
     164:	21190000 	tstcs	r9, r0
     168:	2f134900 	svccs	0x00134900
     16c:	1a00000b 	bne	1a0 <__STACKSEAL_SIZE+0x1a0>
     170:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; c0 <__STACKSEAL_SIZE+0xc0>
     174:	0b3a0e03 	bleq	e83988 <__RAM_SIZE+0xd83988>
     178:	0b390b3b 	bleq	e42e6c <__RAM_SIZE+0xd42e6c>
     17c:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	; 0xffffff64
     180:	0b1b0000 	bleq	6c0188 <__RAM_SIZE+0x5c0188>
     184:	01065501 	tsteq	r6, r1, lsl #10
     188:	1c000013 	stcne	0, cr0, [r0], {19}
     18c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     190:	0b3b0b3a 	bleq	ec2e80 <__RAM_SIZE+0xdc2e80>
     194:	13490b39 	movtne	r0, #39737	; 0x9b39
     198:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     19c:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     1a0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; f0 <__STACKSEAL_SIZE+0xf0>
     1a4:	40870c3c 	addmi	r0, r7, ip, lsr ip
     1a8:	3a0e030e 	bcc	380de8 <__RAM_SIZE+0x280de8>
     1ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1b0:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
     1b4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 104 <__STACKSEAL_SIZE+0x104>
     1b8:	40870c3c 	addmi	r0, r7, ip, lsr ip
     1bc:	3a0e030e 	bcc	380dfc <__RAM_SIZE+0x280dfc>
     1c0:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     1c4:	002e1f00 	eoreq	r1, lr, r0, lsl #30
     1c8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     1cc:	030e4087 	movweq	r4, #57479	; 0xe087
     1d0:	3b0b3a0e 	blcc	2cea10 <__RAM_SIZE+0x1cea10>
     1d4:	000b3905 	andeq	r3, fp, r5, lsl #18
     1d8:	11010000 	mrsne	r0, (UNDEF: 1)
     1dc:	130e2501 	movwne	r2, #58625	; 0xe501
     1e0:	1b0e030b 	blne	380e14 <__RAM_SIZE+0x280e14>
     1e4:	1106550e 	tstne	r6, lr, lsl #10
     1e8:	10015201 	andne	r5, r1, r1, lsl #4
     1ec:	02000006 	andeq	r0, r0, #6
     1f0:	0b0b0024 	bleq	2c0288 <__RAM_SIZE+0x1c0288>
     1f4:	0e030b3e 	vmoveq.16	d3[0], r0
     1f8:	16030000 	strne	r0, [r3], -r0
     1fc:	3a0e0300 	bcc	380e04 <__RAM_SIZE+0x280e04>
     200:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     204:	0013490b 	andseq	r4, r3, fp, lsl #18
     208:	00240400 	eoreq	r0, r4, r0, lsl #8
     20c:	0b3e0b0b 	bleq	f82e40 <__RAM_SIZE+0xe82e40>
     210:	00000803 	andeq	r0, r0, r3, lsl #16
     214:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     218:	06000013 			; <UNDEFINED> instruction: 0x06000013
     21c:	13490026 	movtne	r0, #36902	; 0x9026
     220:	13070000 	movwne	r0, #28672	; 0x7000
     224:	3a050b01 	bcc	142e30 <__RAM_SIZE+0x42e30>
     228:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     22c:	0013010b 	andseq	r0, r3, fp, lsl #2
     230:	000d0800 	andeq	r0, sp, r0, lsl #16
     234:	0b3a0e03 	bleq	e83a48 <__RAM_SIZE+0xd83a48>
     238:	0b39053b 	bleq	e4172c <__RAM_SIZE+0xd4172c>
     23c:	0a381349 	beq	e04f68 <__RAM_SIZE+0xd04f68>
     240:	0d090000 	stceq	0, cr0, [r9, #-0]
     244:	3a080300 	bcc	200e4c <__RAM_SIZE+0x100e4c>
     248:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     24c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     250:	0a00000a 	beq	280 <__STACKSEAL_SIZE+0x280>
     254:	13490101 	movtne	r0, #37121	; 0x9101
     258:	00001301 	andeq	r1, r0, r1, lsl #6
     25c:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     260:	000b2f13 	andeq	r2, fp, r3, lsl pc
     264:	00160c00 	andseq	r0, r6, r0, lsl #24
     268:	0b3a0e03 	bleq	e83a7c <__RAM_SIZE+0xd83a7c>
     26c:	0b39053b 	bleq	e41760 <__RAM_SIZE+0xd41760>
     270:	00001349 	andeq	r1, r0, r9, asr #6
     274:	0b000f0d 	bleq	3eb0 <__HEAP_SIZE+0x2eb0>
     278:	0013490b 	andseq	r4, r3, fp, lsl #18
     27c:	00150e00 	andseq	r0, r5, r0, lsl #28
     280:	00000c27 	andeq	r0, r0, r7, lsr #24
     284:	0300340f 	movweq	r3, #1039	; 0x40f
     288:	3b0b3a0e 	blcc	2ceac8 <__RAM_SIZE+0x1ceac8>
     28c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     290:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     294:	1000000c 	andne	r0, r0, ip
     298:	13490021 	movtne	r0, #36897	; 0x9021
     29c:	0000052f 	andeq	r0, r0, pc, lsr #10
     2a0:	47003411 	smladmi	r0, r1, r4, r3
     2a4:	3b0b3a13 	blcc	2ceaf8 <__RAM_SIZE+0x1ceaf8>
     2a8:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     2ac:	1200000a 	andne	r0, r0, #10
     2b0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 200 <__STACKSEAL_SIZE+0x200>
     2b4:	0b3a0e03 	bleq	e83ac8 <__RAM_SIZE+0xd83ac8>
     2b8:	0b390b3b 	bleq	e42fac <__RAM_SIZE+0xd42fac>
     2bc:	01110c27 	tsteq	r1, r7, lsr #24
     2c0:	0a400112 	beq	1000710 <__RAM_SIZE+0xf00710>
     2c4:	000c4297 	muleq	ip, r7, r2
     2c8:	11010000 	mrsne	r0, (UNDEF: 1)
     2cc:	130e2501 	movwne	r2, #58625	; 0xe501
     2d0:	1b0e030b 	blne	380f04 <__RAM_SIZE+0x280f04>
     2d4:	1106550e 	tstne	r6, lr, lsl #10
     2d8:	10015201 	andne	r5, r1, r1, lsl #4
     2dc:	02000006 	andeq	r0, r0, #6
     2e0:	0b0b0024 	bleq	2c0378 <__RAM_SIZE+0x1c0378>
     2e4:	0e030b3e 	vmoveq.16	d3[0], r0
     2e8:	26030000 	strcs	r0, [r3], -r0
     2ec:	00134900 	andseq	r4, r3, r0, lsl #18
     2f0:	00160400 	andseq	r0, r6, r0, lsl #8
     2f4:	0b3a0e03 	bleq	e83b08 <__RAM_SIZE+0xd83b08>
     2f8:	0b390b3b 	bleq	e42fec <__RAM_SIZE+0xd42fec>
     2fc:	00001349 	andeq	r1, r0, r9, asr #6
     300:	0b002405 	bleq	931c <__HEAP_SIZE+0x831c>
     304:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     308:	06000008 	streq	r0, [r0], -r8
     30c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     310:	0b3a0b0b 	bleq	e82f44 <__RAM_SIZE+0xd82f44>
     314:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     318:	0d070000 	stceq	0, cr0, [r7, #-0]
     31c:	490e0300 	stmdbmi	lr, {r8, r9}
     320:	340a3813 	strcc	r3, [sl], #-2067	; 0xfffff7ed
     324:	0800000c 	stmdaeq	r0, {r2, r3}
     328:	0b0b000f 	bleq	2c036c <__RAM_SIZE+0x1c036c>
     32c:	0f090000 	svceq	0x00090000
     330:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     334:	0a000013 	beq	388 <__STACKSEAL_SIZE+0x388>
     338:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     33c:	00001301 	andeq	r1, r0, r1, lsl #6
     340:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
     344:	0c000013 	stceq	0, cr0, [r0], {19}
     348:	0b0b0113 	bleq	2c079c <__RAM_SIZE+0x1c079c>
     34c:	0b3b0b3a 	bleq	ec303c <__RAM_SIZE+0xdc303c>
     350:	13010b39 	movwne	r0, #6969	; 0x1b39
     354:	0d0d0000 	stceq	0, cr0, [sp, #-0]
     358:	3a080300 	bcc	200f60 <__RAM_SIZE+0x100f60>
     35c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     360:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     364:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
     368:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2b8 <__STACKSEAL_SIZE+0x2b8>
     36c:	0b3a0e03 	bleq	e83b80 <__RAM_SIZE+0xd83b80>
     370:	0b39053b 	bleq	e41864 <__RAM_SIZE+0xd41864>
     374:	13490c27 	movtne	r0, #39975	; 0x9c27
     378:	01120111 	tsteq	r2, r1, lsl r1
     37c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     380:	0013010c 	andseq	r0, r3, ip, lsl #2
     384:	00050f00 	andeq	r0, r5, r0, lsl #30
     388:	0b3a0803 	bleq	e8239c <__RAM_SIZE+0xd8239c>
     38c:	0b39053b 	bleq	e41880 <__RAM_SIZE+0xd41880>
     390:	06021349 	streq	r1, [r2], -r9, asr #6
     394:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     398:	00051000 	andeq	r1, r5, r0
     39c:	0b3a0e03 	bleq	e83bb0 <__RAM_SIZE+0xd83bb0>
     3a0:	0b39053b 	bleq	e41894 <__RAM_SIZE+0xd41894>
     3a4:	0a021349 	beq	850d0 <__HEAP_SIZE+0x840d0>
     3a8:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
     3ac:	12000000 	andne	r0, r0, #0
     3b0:	08030034 	stmdaeq	r3, {r2, r4, r5}
     3b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3b8:	13490b39 	movtne	r0, #39737	; 0x9b39
     3bc:	00000a02 	andeq	r0, r0, r2, lsl #20
     3c0:	03003413 	movweq	r3, #1043	; 0x413
     3c4:	3b0b3a0e 	blcc	2cec04 <__RAM_SIZE+0x1cec04>
     3c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3cc:	000a0213 	andeq	r0, sl, r3, lsl r2
     3d0:	00341400 	eorseq	r1, r4, r0, lsl #8
     3d4:	0b3a0803 	bleq	e823e8 <__RAM_SIZE+0xd823e8>
     3d8:	0b39053b 	bleq	e418cc <__RAM_SIZE+0xd418cc>
     3dc:	06021349 	streq	r1, [r2], -r9, asr #6
     3e0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     3e4:	82891500 	addhi	r1, r9, #0, 10
     3e8:	01110101 	tsteq	r1, r1, lsl #2
     3ec:	00001331 	andeq	r1, r0, r1, lsr r3
     3f0:	01828a16 	orreq	r8, r2, r6, lsl sl
     3f4:	910a0200 	mrsls	r0, R10_fiq
     3f8:	00000a42 	andeq	r0, r0, r2, asr #20
     3fc:	03000517 	movweq	r0, #1303	; 0x517
     400:	3b0b3a0e 	blcc	2cec40 <__RAM_SIZE+0x1cec40>
     404:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     408:	b7060213 	smladlt	r6, r3, r2, r0
     40c:	00000642 	andeq	r0, r0, r2, asr #12
     410:	49010118 	stmdbmi	r1, {r3, r4, r8}
     414:	00130113 	andseq	r0, r3, r3, lsl r1
     418:	00211900 	eoreq	r1, r1, r0, lsl #18
     41c:	0b2f1349 	bleq	bc5148 <__RAM_SIZE+0xac5148>
     420:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     424:	3a0e0301 	bcc	381030 <__RAM_SIZE+0x281030>
     428:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     42c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     430:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     434:	97064001 	strls	r4, [r6, -r1]
     438:	13010c42 	movwne	r0, #7234	; 0x1c42
     43c:	051b0000 	ldreq	r0, [fp, #-0]
     440:	3a080300 	bcc	201048 <__RAM_SIZE+0x101048>
     444:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     448:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     44c:	1c00000a 	stcne	0, cr0, [r0], {10}
     450:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     454:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     458:	13490b39 	movtne	r0, #39737	; 0x9b39
     45c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     460:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     464:	0111010b 	tsteq	r1, fp, lsl #2
     468:	13010112 	movwne	r0, #4370	; 0x1112
     46c:	0b1e0000 	bleq	780474 <__RAM_SIZE+0x680474>
     470:	01065501 	tsteq	r6, r1, lsl #10
     474:	1f000013 	svcne	0x00000013
     478:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     47c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     480:	13490b39 	movtne	r0, #39737	; 0x9b39
     484:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
     488:	11010182 	smlabbne	r1, r2, r1, r0
     48c:	01133101 	tsteq	r3, r1, lsl #2
     490:	21000013 	tstcs	r0, r3, lsl r0
     494:	01018289 	smlabbeq	r1, r9, r2, r8
     498:	13010111 	movwne	r0, #4369	; 0x1111
     49c:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
     4a0:	11010182 	smlabbne	r1, r2, r1, r0
     4a4:	23000001 	movwcs	r0, #1
     4a8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     4ac:	01120111 	tsteq	r2, r1, lsl r1
     4b0:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     4b4:	13010b57 	movwne	r0, #6999	; 0x1b57
     4b8:	05240000 	streq	r0, [r4, #-0]!
     4bc:	02133100 	andseq	r3, r3, #0, 2
     4c0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     4c4:	05250000 	streq	r0, [r5, #-0]!
     4c8:	00133100 	andseq	r3, r3, r0, lsl #2
     4cc:	00342600 	eorseq	r2, r4, r0, lsl #12
     4d0:	06021331 			; <UNDEFINED> instruction: 0x06021331
     4d4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     4d8:	011d2700 	tsteq	sp, r0, lsl #14
     4dc:	01521331 	cmpeq	r2, r1, lsr r3
     4e0:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
     4e4:	58011201 	stmdapl	r1, {r0, r9, ip}
     4e8:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     4ec:	0013010b 	andseq	r0, r3, fp, lsl #2
     4f0:	82892800 	addhi	r2, r9, #0, 16
     4f4:	01110101 	tsteq	r1, r1, lsl #2
     4f8:	010a4293 			; <UNDEFINED> instruction: 0x010a4293
     4fc:	29000013 	stmdbcs	r0, {r0, r1, r4}
     500:	0b0b0117 	bleq	2c0964 <__RAM_SIZE+0x1c0964>
     504:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     508:	13010b39 	movwne	r0, #6969	; 0x1b39
     50c:	0d2a0000 	stceq	0, cr0, [sl, #-0]
     510:	3a080300 	bcc	201118 <__RAM_SIZE+0x101118>
     514:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     518:	0013490b 	andseq	r4, r3, fp, lsl #18
     51c:	82892b00 	addhi	r2, r9, #0, 22
     520:	01110001 	tsteq	r1, r1
     524:	00001331 	andeq	r1, r0, r1, lsr r3
     528:	03012e2c 	movweq	r2, #7724	; 0x1e2c
     52c:	3b0b3a0e 	blcc	2ced6c <__RAM_SIZE+0x1ced6c>
     530:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     534:	1113490c 	tstne	r3, ip, lsl #18
     538:	40011201 	andmi	r1, r1, r1, lsl #4
     53c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     540:	00001301 	andeq	r1, r0, r1, lsl #6
     544:	0300052d 	movweq	r0, #1325	; 0x52d
     548:	3b0b3a08 	blcc	2ced70 <__RAM_SIZE+0x1ced70>
     54c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     550:	b7060213 	smladlt	r6, r3, r2, r0
     554:	00000642 	andeq	r0, r0, r2, asr #12
     558:	0300052e 	movweq	r0, #1326	; 0x52e
     55c:	3b0b3a0e 	blcc	2ced9c <__RAM_SIZE+0x1ced9c>
     560:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     564:	b7060213 	smladlt	r6, r3, r2, r0
     568:	00000642 	andeq	r0, r0, r2, asr #12
     56c:	0300342f 	movweq	r3, #1071	; 0x42f
     570:	3b0b3a0e 	blcc	2cedb0 <__RAM_SIZE+0x1cedb0>
     574:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     578:	b7060213 	smladlt	r6, r3, r2, r0
     57c:	00000642 	andeq	r0, r0, r2, asr #12
     580:	03003430 	movweq	r3, #1072	; 0x430
     584:	3b0b3a08 	blcc	2cedac <__RAM_SIZE+0x1cedac>
     588:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     58c:	b7060213 	smladlt	r6, r3, r2, r0
     590:	00000642 	andeq	r0, r0, r2, asr #12
     594:	03012e31 	movweq	r2, #7729	; 0x1e31
     598:	3b0b3a0e 	blcc	2cedd8 <__RAM_SIZE+0x1cedd8>
     59c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     5a0:	1113490c 	tstne	r3, ip, lsl #18
     5a4:	40011201 	andmi	r1, r1, r1, lsl #4
     5a8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     5ac:	00001301 	andeq	r1, r0, r1, lsl #6
     5b0:	31011d32 	tstcc	r1, r2, lsr sp
     5b4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     5b8:	01110542 	tsteq	r1, r2, asr #10
     5bc:	0b580112 	bleq	1600a0c <__RAM_SIZE+0x1500a0c>
     5c0:	0b570b59 	bleq	15c332c <__RAM_SIZE+0x14c332c>
     5c4:	2e330000 	cdpcs	0, 3, cr0, cr3, cr0, {0}
     5c8:	3a0e0301 	bcc	3811d4 <__RAM_SIZE+0x2811d4>
     5cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5d0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     5d4:	010b2013 	tsteq	fp, r3, lsl r0
     5d8:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
     5dc:	08030005 	stmdaeq	r3, {r0, r2}
     5e0:	0b3b0b3a 	bleq	ec32d0 <__RAM_SIZE+0xdc32d0>
     5e4:	13490b39 	movtne	r0, #39737	; 0x9b39
     5e8:	05350000 	ldreq	r0, [r5, #-0]!
     5ec:	3a0e0300 	bcc	3811f4 <__RAM_SIZE+0x2811f4>
     5f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f4:	0013490b 	andseq	r4, r3, fp, lsl #18
     5f8:	00343600 	eorseq	r3, r4, r0, lsl #12
     5fc:	0b3a0803 	bleq	e82610 <__RAM_SIZE+0xd82610>
     600:	0b390b3b 	bleq	e432f4 <__RAM_SIZE+0xd432f4>
     604:	00001349 	andeq	r1, r0, r9, asr #6
     608:	03012e37 	movweq	r2, #7735	; 0x1e37
     60c:	3b0b3a0e 	blcc	2cee4c <__RAM_SIZE+0x1cee4c>
     610:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     614:	1201110c 	andne	r1, r1, #12, 2
     618:	96064001 	strls	r4, [r6], -r1
     61c:	13010c42 	movwne	r0, #7234	; 0x1c42
     620:	2e380000 	cdpcs	0, 3, cr0, cr8, cr0, {0}
     624:	3a0e0301 	bcc	381230 <__RAM_SIZE+0x281230>
     628:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     62c:	110c270b 	tstne	ip, fp, lsl #14
     630:	40011201 	andmi	r1, r1, r1, lsl #4
     634:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     638:	00001301 	andeq	r1, r0, r1, lsl #6
     63c:	03012e39 	movweq	r2, #7737	; 0x1e39
     640:	3b0b3a0e 	blcc	2cee80 <__RAM_SIZE+0x1cee80>
     644:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     648:	1201110c 	andne	r1, r1, #12, 2
     64c:	970a4001 	strls	r4, [sl, -r1]
     650:	13010c42 	movwne	r0, #7234	; 0x1c42
     654:	053a0000 	ldreq	r0, [sl, #-0]!
     658:	3a0e0300 	bcc	381260 <__RAM_SIZE+0x281260>
     65c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     660:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     664:	3b00000a 	blcc	694 <__STACKSEAL_SIZE+0x694>
     668:	08030005 	stmdaeq	r3, {r0, r2}
     66c:	0b3b0b3a 	bleq	ec335c <__RAM_SIZE+0xdc335c>
     670:	13490b39 	movtne	r0, #39737	; 0x9b39
     674:	00000a02 	andeq	r0, r0, r2, lsl #20
     678:	3f002e3c 	svccc	0x00002e3c
     67c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     680:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     684:	2e3d0000 	cdpcs	0, 3, cr0, cr13, cr0, {0}
     688:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     68c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     690:	0b3a0e03 	bleq	e83ea4 <__RAM_SIZE+0xd83ea4>
     694:	0b390b3b 	bleq	e43388 <__RAM_SIZE+0xd43388>
     698:	01000000 	mrseq	r0, (UNDEF: 0)
     69c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     6a0:	0e030b13 	vmoveq.32	d3[0], r0
     6a4:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     6a8:	01520111 	cmpeq	r2, r1, lsl r1
     6ac:	00000610 	andeq	r0, r0, r0, lsl r6
     6b0:	0b002402 	bleq	96c0 <__HEAP_SIZE+0x86c0>
     6b4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     6b8:	0300000e 	movweq	r0, #14
     6bc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     6c0:	0b3b0b3a 	bleq	ec33b0 <__RAM_SIZE+0xdc33b0>
     6c4:	13490b39 	movtne	r0, #39737	; 0x9b39
     6c8:	24040000 	strcs	r0, [r4], #-0
     6cc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     6d0:	0008030b 	andeq	r0, r8, fp, lsl #6
     6d4:	00260500 	eoreq	r0, r6, r0, lsl #10
     6d8:	00001349 	andeq	r1, r0, r9, asr #6
     6dc:	0b000f06 	bleq	42fc <__HEAP_SIZE+0x32fc>
     6e0:	0013490b 	andseq	r4, r3, fp, lsl #18
     6e4:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
     6e8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     6ec:	0b3b0b3a 	bleq	ec33dc <__RAM_SIZE+0xdc33dc>
     6f0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     6f4:	01111349 	tsteq	r1, r9, asr #6
     6f8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     6fc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     700:	08000013 	stmdaeq	r0, {r0, r1, r4}
     704:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     708:	0b3b0b3a 	bleq	ec33f8 <__RAM_SIZE+0xdc33f8>
     70c:	13490b39 	movtne	r0, #39737	; 0x9b39
     710:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     714:	09000006 	stmdbeq	r0, {r1, r2}
     718:	08030034 	stmdaeq	r3, {r2, r4, r5}
     71c:	0b3b0b3a 	bleq	ec340c <__RAM_SIZE+0xdc340c>
     720:	13490b39 	movtne	r0, #39737	; 0x9b39
     724:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     728:	0a000006 	beq	748 <__STACKSEAL_SIZE+0x748>
     72c:	00018289 	andeq	r8, r1, r9, lsl #5
     730:	13310111 	teqne	r1, #1073741828	; 0x40000004
     734:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
     738:	030c3f01 	movweq	r3, #52993	; 0xcf01
     73c:	3b0b3a0e 	blcc	2cef7c <__RAM_SIZE+0x1cef7c>
     740:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     744:	1201110c 	andne	r1, r1, #12, 2
     748:	97064001 	strls	r4, [r6, -r1]
     74c:	13010c42 	movwne	r0, #7234	; 0x1c42
     750:	890c0000 	stmdbhi	ip, {}	; <UNPREDICTABLE>
     754:	11010182 	smlabbne	r1, r2, r1, r0
     758:	00133101 	andseq	r3, r3, r1, lsl #2
     75c:	828a0d00 	addhi	r0, sl, #0, 26
     760:	0a020001 	beq	8076c <__HEAP_SIZE+0x7f76c>
     764:	000a4291 	muleq	sl, r1, r2
     768:	002e0e00 	eoreq	r0, lr, r0, lsl #28
     76c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     770:	0b3b0b3a 	bleq	ec3460 <__RAM_SIZE+0xdc3460>
     774:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     778:	01120111 	tsteq	r2, r1, lsl r1
     77c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     780:	0f00000c 	svceq	0x0000000c
     784:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     788:	0b3b0b3a 	bleq	ec3478 <__RAM_SIZE+0xdc3478>
     78c:	13490b39 	movtne	r0, #39737	; 0x9b39
     790:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     794:	10000006 	andne	r0, r0, r6
     798:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 6e8 <__STACKSEAL_SIZE+0x6e8>
     79c:	0b3a0e03 	bleq	e83fb0 <__RAM_SIZE+0xd83fb0>
     7a0:	0b390b3b 	bleq	e43494 <__RAM_SIZE+0xd43494>
     7a4:	13490c27 	movtne	r0, #39975	; 0x9c27
     7a8:	01120111 	tsteq	r2, r1, lsl r1
     7ac:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     7b0:	1100000c 	tstne	r0, ip
     7b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 704 <__STACKSEAL_SIZE+0x704>
     7b8:	0b3a0e03 	bleq	e83fcc <__RAM_SIZE+0xd83fcc>
     7bc:	0b390b3b 	bleq	e434b0 <__RAM_SIZE+0xd434b0>
     7c0:	13490c27 	movtne	r0, #39975	; 0x9c27
     7c4:	01120111 	tsteq	r2, r1, lsl r1
     7c8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     7cc:	0013010c 	andseq	r0, r3, ip, lsl #2
     7d0:	00051200 	andeq	r1, r5, r0, lsl #4
     7d4:	0b3a0803 	bleq	e827e8 <__RAM_SIZE+0xd827e8>
     7d8:	0b390b3b 	bleq	e434cc <__RAM_SIZE+0xd434cc>
     7dc:	06021349 	streq	r1, [r2], -r9, asr #6
     7e0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     7e4:	002e1300 	eoreq	r1, lr, r0, lsl #6
     7e8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     7ec:	030e4087 	movweq	r4, #57479	; 0xe087
     7f0:	3b0b3a0e 	blcc	2cf030 <__RAM_SIZE+0x1cf030>
     7f4:	000b390b 	andeq	r3, fp, fp, lsl #18
     7f8:	11010000 	mrsne	r0, (UNDEF: 1)
     7fc:	130e2501 	movwne	r2, #58625	; 0xe501
     800:	1b0e030b 	blne	381434 <__RAM_SIZE+0x281434>
     804:	1106550e 	tstne	r6, lr, lsl #10
     808:	10015201 	andne	r5, r1, r1, lsl #4
     80c:	02000006 	andeq	r0, r0, #6
     810:	0b0b0024 	bleq	2c08a8 <__RAM_SIZE+0x1c08a8>
     814:	0e030b3e 	vmoveq.16	d3[0], r0
     818:	16030000 	strne	r0, [r3], -r0
     81c:	3a0e0300 	bcc	381424 <__RAM_SIZE+0x281424>
     820:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     824:	0013490b 	andseq	r4, r3, fp, lsl #18
     828:	00240400 	eoreq	r0, r4, r0, lsl #8
     82c:	0b3e0b0b 	bleq	f83460 <__RAM_SIZE+0xe83460>
     830:	00000803 	andeq	r0, r0, r3, lsl #16
     834:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     838:	06000013 			; <UNDEFINED> instruction: 0x06000013
     83c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     840:	0b3a0b0b 	bleq	e83474 <__RAM_SIZE+0xd83474>
     844:	0b390b3b 	bleq	e43538 <__RAM_SIZE+0xd43538>
     848:	00001301 	andeq	r1, r0, r1, lsl #6
     84c:	03000d07 	movweq	r0, #3335	; 0xd07
     850:	3b0b3a08 	blcc	2cf078 <__RAM_SIZE+0x1cf078>
     854:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     858:	000a3813 	andeq	r3, sl, r3, lsl r8
     85c:	000d0800 	andeq	r0, sp, r0, lsl #16
     860:	0b3a0e03 	bleq	e84074 <__RAM_SIZE+0xd84074>
     864:	0b390b3b 	bleq	e43558 <__RAM_SIZE+0xd43558>
     868:	0a381349 	beq	e05594 <__RAM_SIZE+0xd05594>
     86c:	0f090000 	svceq	0x00090000
     870:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     874:	0a000013 	beq	8c8 <__Vectors_Size+0x108>
     878:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     87c:	13011349 	movwne	r1, #4937	; 0x1349
     880:	050b0000 	streq	r0, [fp, #-0]
     884:	00134900 	andseq	r4, r3, r0, lsl #18
     888:	00340c00 	eorseq	r0, r4, r0, lsl #24
     88c:	0b3a0e03 	bleq	e840a0 <__RAM_SIZE+0xd840a0>
     890:	0b390b3b 	bleq	e43584 <__RAM_SIZE+0xd43584>
     894:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 778 <__STACKSEAL_SIZE+0x778>
     898:	00000c3c 	andeq	r0, r0, ip, lsr ip
     89c:	0300340d 	movweq	r3, #1037	; 0x40d
     8a0:	3b0b3a0e 	blcc	2cf0e0 <__RAM_SIZE+0x1cf0e0>
     8a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8a8:	000a0213 	andeq	r0, sl, r3, lsl r2
     8ac:	00340e00 	eorseq	r0, r4, r0, lsl #28
     8b0:	0b3a0e03 	bleq	e840c4 <__RAM_SIZE+0xd840c4>
     8b4:	0b390b3b 	bleq	e435a8 <__RAM_SIZE+0xd435a8>
     8b8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 79c <__STACKSEAL_SIZE+0x79c>
     8bc:	00000a02 	andeq	r0, r0, r2, lsl #20
     8c0:	3f012e0f 	svccc	0x00012e0f
     8c4:	3a0e030c 	bcc	3814fc <__RAM_SIZE+0x2814fc>
     8c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     8d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     8d4:	970a4001 	strls	r4, [sl, -r1]
     8d8:	13010c42 	movwne	r0, #7234	; 0x1c42
     8dc:	05100000 	ldreq	r0, [r0, #-0]
     8e0:	3a0e0300 	bcc	3814e8 <__RAM_SIZE+0x2814e8>
     8e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     8ec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     8f0:	34110000 	ldrcc	r0, [r1], #-0
     8f4:	3a0e0300 	bcc	3814fc <__RAM_SIZE+0x2814fc>
     8f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     900:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     904:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     908:	030c3f00 	movweq	r3, #52992	; 0xcf00
     90c:	3b0b3a0e 	blcc	2cf14c <__RAM_SIZE+0x1cf14c>
     910:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     914:	1113490c 	tstne	r3, ip, lsl #18
     918:	40011201 	andmi	r1, r1, r1, lsl #4
     91c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     920:	1d130000 	ldcne	0, cr0, [r3, #-0]
     924:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     928:	0b42b801 	bleq	10ae934 <__RAM_SIZE+0xfae934>
     92c:	01120111 	tsteq	r2, r1, lsl r1
     930:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     934:	00000b57 	andeq	r0, r0, r7, asr fp
     938:	31003414 	tstcc	r0, r4, lsl r4
     93c:	b7060213 	smladlt	r6, r3, r2, r0
     940:	00000642 	andeq	r0, r0, r2, asr #12
     944:	3f012e15 	svccc	0x00012e15
     948:	3a0e030c 	bcc	381580 <__RAM_SIZE+0x281580>
     94c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     950:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     954:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     958:	97064001 	strls	r4, [r6, -r1]
     95c:	13010c42 	movwne	r0, #7234	; 0x1c42
     960:	05160000 	ldreq	r0, [r6, #-0]
     964:	3a0e0300 	bcc	38156c <__RAM_SIZE+0x28156c>
     968:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     96c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     970:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     974:	34170000 	ldrcc	r0, [r7], #-0
     978:	3a0e0300 	bcc	381580 <__RAM_SIZE+0x281580>
     97c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     980:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     984:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     988:	34180000 	ldrcc	r0, [r8], #-0
     98c:	3a080300 	bcc	201594 <__RAM_SIZE+0x101594>
     990:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     994:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     998:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     99c:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
     9a0:	11010182 	smlabbne	r1, r2, r1, r0
     9a4:	01133101 	tsteq	r3, r1, lsl #2
     9a8:	1a000013 	bne	9fc <__Vectors_Size+0x23c>
     9ac:	0001828a 	andeq	r8, r1, sl, lsl #5
     9b0:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     9b4:	1b00000a 	blne	9e4 <__Vectors_Size+0x224>
     9b8:	00018289 	andeq	r8, r1, r9, lsl #5
     9bc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9c0:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     9c4:	030c3f01 	movweq	r3, #52993	; 0xcf01
     9c8:	3b0b3a0e 	blcc	2cf208 <__RAM_SIZE+0x1cf208>
     9cc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9d0:	1201110c 	andne	r1, r1, #12, 2
     9d4:	97064001 	strls	r4, [r6, -r1]
     9d8:	13010c42 	movwne	r0, #7234	; 0x1c42
     9dc:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
     9e0:	11010182 	smlabbne	r1, r2, r1, r0
     9e4:	00130101 	andseq	r0, r3, r1, lsl #2
     9e8:	82891e00 	addhi	r1, r9, #0, 28
     9ec:	01110101 	tsteq	r1, r1, lsl #2
     9f0:	00001331 	andeq	r1, r0, r1, lsr r3
     9f4:	4901011f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r8}
     9f8:	00130113 	andseq	r0, r3, r3, lsl r1
     9fc:	00212000 	eoreq	r2, r1, r0
     a00:	0b2f1349 	bleq	bc572c <__RAM_SIZE+0xac572c>
     a04:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     a08:	3a0e0301 	bcc	381614 <__RAM_SIZE+0x281614>
     a0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a10:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a14:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a18:	97064001 	strls	r4, [r6, -r1]
     a1c:	13010c42 	movwne	r0, #7234	; 0x1c42
     a20:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
     a24:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a28:	3b0b3a0e 	blcc	2cf268 <__RAM_SIZE+0x1cf268>
     a2c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     a30:	3c13490c 			; <UNDEFINED> instruction: 0x3c13490c
     a34:	0013010c 	andseq	r0, r3, ip, lsl #2
     a38:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     a3c:	0b3a0e03 	bleq	e84250 <__RAM_SIZE+0xd84250>
     a40:	0b390b3b 	bleq	e43734 <__RAM_SIZE+0xd43734>
     a44:	01110c27 	tsteq	r1, r7, lsr #24
     a48:	06400112 			; <UNDEFINED> instruction: 0x06400112
     a4c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     a50:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     a54:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9a4 <__Vectors_Size+0x1e4>
     a58:	0b3a0e03 	bleq	e8426c <__RAM_SIZE+0xd8426c>
     a5c:	0b390b3b 	bleq	e43750 <__RAM_SIZE+0xd43750>
     a60:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	; 0xffffff64
     a64:	00001301 	andeq	r1, r0, r1, lsl #6
     a68:	03012e25 	movweq	r2, #7717	; 0x1e25
     a6c:	3b0b3a0e 	blcc	2cf2ac <__RAM_SIZE+0x1cf2ac>
     a70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     a74:	1113490c 	tstne	r3, ip, lsl #18
     a78:	40011201 	andmi	r1, r1, r1, lsl #4
     a7c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     a80:	00001301 	andeq	r1, r0, r1, lsl #6
     a84:	03000526 	movweq	r0, #1318	; 0x526
     a88:	3b0b3a08 	blcc	2cf2b0 <__RAM_SIZE+0x1cf2b0>
     a8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a90:	b7060213 	smladlt	r6, r3, r2, r0
     a94:	00000642 	andeq	r0, r0, r2, asr #12
     a98:	11010b27 	tstne	r1, r7, lsr #22
     a9c:	00011201 	andeq	r1, r1, r1, lsl #4
     aa0:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
     aa4:	0b3a0e03 	bleq	e842b8 <__RAM_SIZE+0xd842b8>
     aa8:	0b39053b 	bleq	e41f9c <__RAM_SIZE+0xd41f9c>
     aac:	13490c27 	movtne	r0, #39975	; 0x9c27
     ab0:	13010b20 	movwne	r0, #6944	; 0x1b20
     ab4:	34290000 	strtcc	r0, [r9], #-0
     ab8:	3a0e0300 	bcc	3816c0 <__RAM_SIZE+0x2816c0>
     abc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ac0:	0013490b 	andseq	r4, r3, fp, lsl #18
     ac4:	002e2a00 	eoreq	r2, lr, r0, lsl #20
     ac8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     acc:	030e4087 	movweq	r4, #57479	; 0xe087
     ad0:	3b0b3a0e 	blcc	2cf310 <__RAM_SIZE+0x1cf310>
     ad4:	2b00000b 	blcs	b08 <__Vectors_Size+0x348>
     ad8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a28 <__Vectors_Size+0x268>
     adc:	40870c3c 	addmi	r0, r7, ip, lsr ip
     ae0:	3a0e030e 	bcc	381720 <__RAM_SIZE+0x281720>
     ae4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ae8:	0000000b 	andeq	r0, r0, fp
     aec:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     af0:	030b130e 	movweq	r1, #45838	; 0xb30e
     af4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     af8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     afc:	00061001 	andeq	r1, r6, r1
     b00:	00240200 	eoreq	r0, r4, r0, lsl #4
     b04:	0b3e0b0b 	bleq	f83738 <__RAM_SIZE+0xe83738>
     b08:	00000e03 	andeq	r0, r0, r3, lsl #28
     b0c:	03001603 	movweq	r1, #1539	; 0x603
     b10:	3b0b3a0e 	blcc	2cf350 <__RAM_SIZE+0x1cf350>
     b14:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b18:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     b1c:	0b0b0024 	bleq	2c0bb4 <__RAM_SIZE+0x1c0bb4>
     b20:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     b24:	35050000 	strcc	r0, [r5, #-0]
     b28:	00134900 	andseq	r4, r3, r0, lsl #18
     b2c:	00260600 	eoreq	r0, r6, r0, lsl #12
     b30:	00001349 	andeq	r1, r0, r9, asr #6
     b34:	0b011307 	bleq	45758 <__HEAP_SIZE+0x44758>
     b38:	3b0b3a05 	blcc	2cf354 <__RAM_SIZE+0x1cf354>
     b3c:	010b3905 	tsteq	fp, r5, lsl #18
     b40:	08000013 	stmdaeq	r0, {r0, r1, r4}
     b44:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     b48:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b4c:	13490b39 	movtne	r0, #39737	; 0x9b39
     b50:	00000a38 	andeq	r0, r0, r8, lsr sl
     b54:	03000d09 	movweq	r0, #3337	; 0xd09
     b58:	3b0b3a08 	blcc	2cf380 <__RAM_SIZE+0x1cf380>
     b5c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     b60:	000a3813 	andeq	r3, sl, r3, lsl r8
     b64:	01010a00 	tsteq	r1, r0, lsl #20
     b68:	13011349 	movwne	r1, #4937	; 0x1349
     b6c:	210b0000 	mrscs	r0, (UNDEF: 11)
     b70:	2f134900 	svccs	0x00134900
     b74:	0c00000b 	stceq	0, cr0, [r0], {11}
     b78:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b7c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b80:	13490b39 	movtne	r0, #39737	; 0x9b39
     b84:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
     b88:	030c3f01 	movweq	r3, #52993	; 0xcf01
     b8c:	3b0b3a0e 	blcc	2cf3cc <__RAM_SIZE+0x1cf3cc>
     b90:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     b94:	1201110c 	andne	r1, r1, #12, 2
     b98:	97064001 	strls	r4, [r6, -r1]
     b9c:	13010c42 	movwne	r0, #7234	; 0x1c42
     ba0:	340e0000 	strcc	r0, [lr], #-0
     ba4:	3a0e0300 	bcc	3817ac <__RAM_SIZE+0x2817ac>
     ba8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     bb0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     bb4:	340f0000 	strcc	r0, [pc], #-0	; bbc <__Vectors_Size+0x3fc>
     bb8:	3a0e0300 	bcc	3817c0 <__RAM_SIZE+0x2817c0>
     bbc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bc0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     bc4:	1000000a 	andne	r0, r0, sl
     bc8:	01018289 	smlabbeq	r1, r9, r2, r8
     bcc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     bd0:	00001301 	andeq	r1, r0, r1, lsl #6
     bd4:	01828a11 	orreq	r8, r2, r1, lsl sl
     bd8:	910a0200 	mrsls	r0, R10_fiq
     bdc:	00000a42 	andeq	r0, r0, r2, asr #20
     be0:	01828912 	orreq	r8, r2, r2, lsl r9
     be4:	31011101 	tstcc	r1, r1, lsl #2
     be8:	13000013 	movwne	r0, #19
     bec:	0b0b000f 	bleq	2c0c30 <__RAM_SIZE+0x1c0c30>
     bf0:	00001349 	andeq	r1, r0, r9, asr #6
     bf4:	03003414 	movweq	r3, #1044	; 0x414
     bf8:	3b0b3a08 	blcc	2cf420 <__RAM_SIZE+0x1cf420>
     bfc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c00:	000b1c13 	andeq	r1, fp, r3, lsl ip
     c04:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     c08:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c0c:	0b3b0b3a 	bleq	ec38fc <__RAM_SIZE+0xdc38fc>
     c10:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c14:	01111349 	tsteq	r1, r9, asr #6
     c18:	0a400112 	beq	1001068 <__RAM_SIZE+0xf01068>
     c1c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c20:	16000013 			; <UNDEFINED> instruction: 0x16000013
     c24:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     c28:	0b3b0b3a 	bleq	ec3918 <__RAM_SIZE+0xdc3918>
     c2c:	13490b39 	movtne	r0, #39737	; 0x9b39
     c30:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     c34:	17000006 	strne	r0, [r0, -r6]
     c38:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; b88 <__Vectors_Size+0x3c8>
     c3c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     c40:	3a0e030e 	bcc	381880 <__RAM_SIZE+0x281880>
     c44:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c48:	1800000b 	stmdane	r0, {r0, r1, r3}
     c4c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; b9c <__Vectors_Size+0x3dc>
     c50:	40870c3c 	addmi	r0, r7, ip, lsr ip
     c54:	3a0e030e 	bcc	381894 <__RAM_SIZE+0x281894>
     c58:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     c5c:	11010000 	mrsne	r0, (UNDEF: 1)
     c60:	130e2501 	movwne	r2, #58625	; 0xe501
     c64:	1b0e030b 	blne	381898 <__RAM_SIZE+0x281898>
     c68:	1106550e 	tstne	r6, lr, lsl #10
     c6c:	10015201 	andne	r5, r1, r1, lsl #4
     c70:	02000006 	andeq	r0, r0, #6
     c74:	0b0b0024 	bleq	2c0d0c <__RAM_SIZE+0x1c0d0c>
     c78:	0e030b3e 	vmoveq.16	d3[0], r0
     c7c:	16030000 	strne	r0, [r3], -r0
     c80:	3a0e0300 	bcc	381888 <__RAM_SIZE+0x281888>
     c84:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c88:	0013490b 	andseq	r4, r3, fp, lsl #18
     c8c:	00240400 	eoreq	r0, r4, r0, lsl #8
     c90:	0b3e0b0b 	bleq	f838c4 <__RAM_SIZE+0xe838c4>
     c94:	00000803 	andeq	r0, r0, r3, lsl #16
     c98:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     c9c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     ca0:	0b0b000f 	bleq	2c0ce4 <__RAM_SIZE+0x1c0ce4>
     ca4:	00001349 	andeq	r1, r0, r9, asr #6
     ca8:	03001307 	movweq	r1, #775	; 0x307
     cac:	000c3c0e 	andeq	r3, ip, lr, lsl #24
     cb0:	01040800 	tsteq	r4, r0, lsl #16
     cb4:	0b0b0b3e 	bleq	2c39b4 <__RAM_SIZE+0x1c39b4>
     cb8:	0b3a1349 	bleq	e859e4 <__RAM_SIZE+0xd859e4>
     cbc:	0b390b3b 	bleq	e439b0 <__RAM_SIZE+0xd439b0>
     cc0:	00001301 	andeq	r1, r0, r1, lsl #6
     cc4:	03002809 	movweq	r2, #2057	; 0x809
     cc8:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     ccc:	01130a00 	tsteq	r3, r0, lsl #20
     cd0:	0b0b0e03 	bleq	2c44e4 <__RAM_SIZE+0x1c44e4>
     cd4:	0b3b0b3a 	bleq	ec39c4 <__RAM_SIZE+0xdc39c4>
     cd8:	13010b39 	movwne	r0, #6969	; 0x1b39
     cdc:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     ce0:	3a0e0300 	bcc	3818e8 <__RAM_SIZE+0x2818e8>
     ce4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ce8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     cec:	0c00000a 	stceq	0, cr0, [r0], {10}
     cf0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c40 <__Vectors_Size+0x480>
     cf4:	0b3a0e03 	bleq	e84508 <__RAM_SIZE+0xd84508>
     cf8:	0b390b3b 	bleq	e439ec <__RAM_SIZE+0xd439ec>
     cfc:	13490c27 	movtne	r0, #39975	; 0x9c27
     d00:	01120111 	tsteq	r2, r1, lsl r1
     d04:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     d08:	0013010c 	andseq	r0, r3, ip, lsl #2
     d0c:	00050d00 	andeq	r0, r5, r0, lsl #26
     d10:	0b3a0e03 	bleq	e84524 <__RAM_SIZE+0xd84524>
     d14:	0b390b3b 	bleq	e43a08 <__RAM_SIZE+0xd43a08>
     d18:	06021349 	streq	r1, [r2], -r9, asr #6
     d1c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d20:	00340e00 	eorseq	r0, r4, r0, lsl #28
     d24:	0b3a0e03 	bleq	e84538 <__RAM_SIZE+0xd84538>
     d28:	0b390b3b 	bleq	e43a1c <__RAM_SIZE+0xd43a1c>
     d2c:	06021349 	streq	r1, [r2], -r9, asr #6
     d30:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d34:	00340f00 	eorseq	r0, r4, r0, lsl #30
     d38:	0b3a0e03 	bleq	e8454c <__RAM_SIZE+0xd8454c>
     d3c:	0b390b3b 	bleq	e43a30 <__RAM_SIZE+0xd43a30>
     d40:	0a021349 	beq	85a6c <__HEAP_SIZE+0x84a6c>
     d44:	89100000 	ldmdbhi	r0, {}	; <UNPREDICTABLE>
     d48:	11010182 	smlabbne	r1, r2, r1, r0
     d4c:	01133101 	tsteq	r3, r1, lsl #2
     d50:	11000013 	tstne	r0, r3, lsl r0
     d54:	0001828a 	andeq	r8, r1, sl, lsl #5
     d58:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     d5c:	1200000a 	andne	r0, r0, #10
     d60:	00018289 	andeq	r8, r1, r9, lsl #5
     d64:	13310111 	teqne	r1, #1073741828	; 0x40000004
     d68:	89130000 	ldmdbhi	r3, {}	; <UNPREDICTABLE>
     d6c:	11010182 	smlabbne	r1, r2, r1, r0
     d70:	00133101 	andseq	r3, r3, r1, lsl #2
     d74:	00341400 	eorseq	r1, r4, r0, lsl #8
     d78:	0b3a0803 	bleq	e82d8c <__RAM_SIZE+0xd82d8c>
     d7c:	0b390b3b 	bleq	e43a70 <__RAM_SIZE+0xd43a70>
     d80:	06021349 	streq	r1, [r2], -r9, asr #6
     d84:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d88:	00341500 	eorseq	r1, r4, r0, lsl #10
     d8c:	0b3a0e03 	bleq	e845a0 <__RAM_SIZE+0xd845a0>
     d90:	0b390b3b 	bleq	e43a84 <__RAM_SIZE+0xd43a84>
     d94:	0b1c1349 	bleq	705ac0 <__RAM_SIZE+0x605ac0>
     d98:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
     d9c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     da0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     da4:	0b3a0e03 	bleq	e845b8 <__RAM_SIZE+0xd845b8>
     da8:	00000b3b 	andeq	r0, r0, fp, lsr fp
     dac:	3f002e17 	svccc	0x00002e17
     db0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     db4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     db8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dbc:	00000b39 	andeq	r0, r0, r9, lsr fp
     dc0:	3f002e18 	svccc	0x00002e18
     dc4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     dc8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     dcc:	0b3b0b3a 	bleq	ec3abc <__RAM_SIZE+0xdc3abc>
     dd0:	00000b39 	andeq	r0, r0, r9, lsr fp
     dd4:	01110100 	tsteq	r1, r0, lsl #2
     dd8:	0b130e25 	bleq	4c4674 <__RAM_SIZE+0x3c4674>
     ddc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     de0:	01110655 	tsteq	r1, r5, asr r6
     de4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     de8:	24020000 	strcs	r0, [r2], #-0
     dec:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     df0:	000e030b 	andeq	r0, lr, fp, lsl #6
     df4:	00240300 	eoreq	r0, r4, r0, lsl #6
     df8:	0b3e0b0b 	bleq	f83a2c <__RAM_SIZE+0xe83a2c>
     dfc:	00000803 	andeq	r0, r0, r3, lsl #16
     e00:	03001604 	movweq	r1, #1540	; 0x604
     e04:	3b0b3a0e 	blcc	2cf644 <__RAM_SIZE+0x1cf644>
     e08:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e0c:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     e10:	0b0b000f 	bleq	2c0e54 <__RAM_SIZE+0x1c0e54>
     e14:	26060000 	strcs	r0, [r6], -r0
     e18:	00134900 	andseq	r4, r3, r0, lsl #18
     e1c:	01130700 	tsteq	r3, r0, lsl #14
     e20:	0b0b0e03 	bleq	2c4634 <__RAM_SIZE+0x1c4634>
     e24:	0b3b0b3a 	bleq	ec3b14 <__RAM_SIZE+0xdc3b14>
     e28:	13010b39 	movwne	r0, #6969	; 0x1b39
     e2c:	0d080000 	stceq	0, cr0, [r8, #-0]
     e30:	3a0e0300 	bcc	381a38 <__RAM_SIZE+0x281a38>
     e34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e38:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e3c:	0900000a 	stmdbeq	r0, {r1, r3}
     e40:	0b0b000f 	bleq	2c0e84 <__RAM_SIZE+0x1c0e84>
     e44:	00001349 	andeq	r1, r0, r9, asr #6
     e48:	3f012e0a 	svccc	0x00012e0a
     e4c:	3a0e030c 	bcc	381a84 <__RAM_SIZE+0x281a84>
     e50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e54:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     e58:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e5c:	970a4001 	strls	r4, [sl, -r1]
     e60:	13010c42 	movwne	r0, #7234	; 0x1c42
     e64:	050b0000 	streq	r0, [fp, #-0]
     e68:	3a0e0300 	bcc	381a70 <__RAM_SIZE+0x281a70>
     e6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e74:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     e78:	340c0000 	strcc	r0, [ip], #-0
     e7c:	3a0e0300 	bcc	381a84 <__RAM_SIZE+0x281a84>
     e80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e84:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e88:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     e8c:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
     e90:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e94:	3b0b3a0e 	blcc	2cf6d4 <__RAM_SIZE+0x1cf6d4>
     e98:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     e9c:	1201110c 	andne	r1, r1, #12, 2
     ea0:	97064001 	strls	r4, [r6, -r1]
     ea4:	13010c42 	movwne	r0, #7234	; 0x1c42
     ea8:	050e0000 	streq	r0, [lr, #-0]
     eac:	3a0e0300 	bcc	381ab4 <__RAM_SIZE+0x281ab4>
     eb0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     eb4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     eb8:	0f00000a 	svceq	0x0000000a
     ebc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e0c <__Vectors_Size+0x64c>
     ec0:	0b3a0e03 	bleq	e846d4 <__RAM_SIZE+0xd846d4>
     ec4:	0b390b3b 	bleq	e43bb8 <__RAM_SIZE+0xd43bb8>
     ec8:	01110c27 	tsteq	r1, r7, lsr #24
     ecc:	0a400112 	beq	100131c <__RAM_SIZE+0xf0131c>
     ed0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ed4:	10000013 	andne	r0, r0, r3, lsl r0
     ed8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e28 <__Vectors_Size+0x668>
     edc:	0b3a0e03 	bleq	e846f0 <__RAM_SIZE+0xd846f0>
     ee0:	0b390b3b 	bleq	e43bd4 <__RAM_SIZE+0xd43bd4>
     ee4:	01110c27 	tsteq	r1, r7, lsr #24
     ee8:	0a400112 	beq	1001338 <__RAM_SIZE+0xf01338>
     eec:	000c4297 	muleq	ip, r7, r2
     ef0:	11010000 	mrsne	r0, (UNDEF: 1)
     ef4:	130e2501 	movwne	r2, #58625	; 0xe501
     ef8:	1b0e030b 	blne	381b2c <__RAM_SIZE+0x281b2c>
     efc:	1106550e 	tstne	r6, lr, lsl #10
     f00:	10015201 	andne	r5, r1, r1, lsl #4
     f04:	02000006 	andeq	r0, r0, #6
     f08:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     f0c:	0b3b0b3a 	bleq	ec3bfc <__RAM_SIZE+0xdc3bfc>
     f10:	13490b39 	movtne	r0, #39737	; 0x9b39
     f14:	24030000 	strcs	r0, [r3], #-0
     f18:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     f1c:	000e030b 	andeq	r0, lr, fp, lsl #6
     f20:	00240400 	eoreq	r0, r4, r0, lsl #8
     f24:	0b3e0b0b 	bleq	f83b58 <__RAM_SIZE+0xe83b58>
     f28:	00000803 	andeq	r0, r0, r3, lsl #16
     f2c:	0b000f05 	bleq	4b48 <__HEAP_SIZE+0x3b48>
     f30:	0600000b 	streq	r0, [r0], -fp
     f34:	13490026 	movtne	r0, #36902	; 0x9026
     f38:	0f070000 	svceq	0x00070000
     f3c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     f40:	08000013 	stmdaeq	r0, {r0, r1, r4}
     f44:	00000026 	andeq	r0, r0, r6, lsr #32
     f48:	49003509 	stmdbmi	r0, {r0, r3, r8, sl, ip, sp}
     f4c:	0a000013 	beq	fa0 <__Vectors_Size+0x7e0>
     f50:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     f54:	0b3a0b0b 	bleq	e83b88 <__RAM_SIZE+0xd83b88>
     f58:	0b39053b 	bleq	e4244c <__RAM_SIZE+0xd4244c>
     f5c:	00001301 	andeq	r1, r0, r1, lsl #6
     f60:	03000d0b 	movweq	r0, #3339	; 0xd0b
     f64:	3b0b3a0e 	blcc	2cf7a4 <__RAM_SIZE+0x1cf7a4>
     f68:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f6c:	000a3813 	andeq	r3, sl, r3, lsl r8
     f70:	01010c00 	tsteq	r1, r0, lsl #24
     f74:	13011349 	movwne	r1, #4937	; 0x1349
     f78:	210d0000 	mrscs	r0, (UNDEF: 13)
     f7c:	2f134900 	svccs	0x00134900
     f80:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     f84:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     f88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f8c:	13490b39 	movtne	r0, #39737	; 0x9b39
     f90:	170f0000 	strne	r0, [pc, -r0]
     f94:	3a0b0b01 	bcc	2c3ba0 <__RAM_SIZE+0x1c3ba0>
     f98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f9c:	0013010b 	andseq	r0, r3, fp, lsl #2
     fa0:	000d1000 	andeq	r1, sp, r0
     fa4:	0b3a0e03 	bleq	e847b8 <__RAM_SIZE+0xd847b8>
     fa8:	0b39053b 	bleq	e4249c <__RAM_SIZE+0xd4249c>
     fac:	00001349 	andeq	r1, r0, r9, asr #6
     fb0:	03000d11 	movweq	r0, #3345	; 0xd11
     fb4:	3b0b3a08 	blcc	2cf7dc <__RAM_SIZE+0x1cf7dc>
     fb8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     fbc:	000a3813 	andeq	r3, sl, r3, lsl r8
     fc0:	01131200 	tsteq	r3, r0, lsl #4
     fc4:	0b0b0e03 	bleq	2c47d8 <__RAM_SIZE+0x1c47d8>
     fc8:	0b3b0b3a 	bleq	ec3cb8 <__RAM_SIZE+0xdc3cb8>
     fcc:	13010b39 	movwne	r0, #6969	; 0x1b39
     fd0:	0d130000 	ldceq	0, cr0, [r3, #-0]
     fd4:	3a0e0300 	bcc	381bdc <__RAM_SIZE+0x281bdc>
     fd8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fdc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     fe0:	1400000a 	strne	r0, [r0], #-10
     fe4:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
     fe8:	00000c3c 	andeq	r0, r0, ip, lsr ip
     fec:	03000d15 	movweq	r0, #3349	; 0xd15
     ff0:	3b0b3a08 	blcc	2cf818 <__RAM_SIZE+0x1cf818>
     ff4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ff8:	000a3813 	andeq	r3, sl, r3, lsl r8
     ffc:	01171600 	tsteq	r7, r0, lsl #12
    1000:	0b3a0b0b 	bleq	e83c34 <__RAM_SIZE+0xd83c34>
    1004:	0b390b3b 	bleq	e43cf8 <__RAM_SIZE+0xd43cf8>
    1008:	00001301 	andeq	r1, r0, r1, lsl #6
    100c:	03000d17 	movweq	r0, #3351	; 0xd17
    1010:	3b0b3a0e 	blcc	2cf850 <__RAM_SIZE+0x1cf850>
    1014:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1018:	18000013 	stmdane	r0, {r0, r1, r4}
    101c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1020:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1024:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1028:	01111349 	tsteq	r1, r9, asr #6
    102c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1030:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1034:	19000013 	stmdbne	r0, {r0, r1, r4}
    1038:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    103c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1040:	13490b39 	movtne	r0, #39737	; 0x9b39
    1044:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1048:	1a000006 	bne	1068 <__HEAP_SIZE+0x68>
    104c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1050:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1054:	13490b39 	movtne	r0, #39737	; 0x9b39
    1058:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    105c:	1b000006 	blne	107c <__HEAP_SIZE+0x7c>
    1060:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
    1064:	0b1c0000 	bleq	70106c <__RAM_SIZE+0x60106c>
    1068:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    106c:	00130101 	andseq	r0, r3, r1, lsl #2
    1070:	82891d00 	addhi	r1, r9, #0, 26
    1074:	01110001 	tsteq	r1, r1
    1078:	00001331 	andeq	r1, r0, r1, lsr r3
    107c:	0182891e 	orreq	r8, r2, lr, lsl r9
    1080:	31011101 	tstcc	r1, r1, lsl #2
    1084:	00130113 	andseq	r0, r3, r3, lsl r1
    1088:	828a1f00 	addhi	r1, sl, #0, 30
    108c:	0a020001 	beq	81098 <__HEAP_SIZE+0x80098>
    1090:	000a4291 	muleq	sl, r1, r2
    1094:	82892000 	addhi	r2, r9, #0
    1098:	01110101 	tsteq	r1, r1, lsl #2
    109c:	00001331 	andeq	r1, r0, r1, lsr r3
    10a0:	3f012e21 	svccc	0x00012e21
    10a4:	3a0e030c 	bcc	381cdc <__RAM_SIZE+0x281cdc>
    10a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    10b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    10b4:	97064001 	strls	r4, [r6, -r1]
    10b8:	13010c42 	movwne	r0, #7234	; 0x1c42
    10bc:	34220000 	strtcc	r0, [r2], #-0
    10c0:	3a0e0300 	bcc	381cc8 <__RAM_SIZE+0x281cc8>
    10c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10c8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10cc:	2300000a 	movwcs	r0, #10
    10d0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1020 <__HEAP_SIZE+0x20>
    10d4:	0b3a0e03 	bleq	e848e8 <__RAM_SIZE+0xd848e8>
    10d8:	0b39053b 	bleq	e425cc <__RAM_SIZE+0xd425cc>
    10dc:	01110c27 	tsteq	r1, r7, lsr #24
    10e0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    10e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    10e8:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    10ec:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 103c <__HEAP_SIZE+0x3c>
    10f0:	0b3a0e03 	bleq	e84904 <__RAM_SIZE+0xd84904>
    10f4:	0b39053b 	bleq	e425e8 <__RAM_SIZE+0xd425e8>
    10f8:	13490c27 	movtne	r0, #39975	; 0x9c27
    10fc:	01120111 	tsteq	r2, r1, lsl r1
    1100:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1104:	0013010c 	andseq	r0, r3, ip, lsl #2
    1108:	00342500 	eorseq	r2, r4, r0, lsl #10
    110c:	0b3a0e03 	bleq	e84920 <__RAM_SIZE+0xd84920>
    1110:	0b39053b 	bleq	e42604 <__RAM_SIZE+0xd42604>
    1114:	0b1c1349 	bleq	705e40 <__RAM_SIZE+0x605e40>
    1118:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    111c:	3a0e0301 	bcc	381d28 <__RAM_SIZE+0x281d28>
    1120:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1124:	110c270b 	tstne	ip, fp, lsl #14
    1128:	40011201 	andmi	r1, r1, r1, lsl #4
    112c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1130:	00001301 	andeq	r1, r0, r1, lsl #6
    1134:	03012e27 	movweq	r2, #7719	; 0x1e27
    1138:	3b0b3a0e 	blcc	2cf978 <__RAM_SIZE+0x1cf978>
    113c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1140:	1113490c 	tstne	r3, ip, lsl #18
    1144:	40011201 	andmi	r1, r1, r1, lsl #4
    1148:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    114c:	00001301 	andeq	r1, r0, r1, lsl #6
    1150:	3f012e28 	svccc	0x00012e28
    1154:	3a0e030c 	bcc	381d8c <__RAM_SIZE+0x281d8c>
    1158:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    115c:	110c270b 	tstne	ip, fp, lsl #14
    1160:	40011201 	andmi	r1, r1, r1, lsl #4
    1164:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1168:	00001301 	andeq	r1, r0, r1, lsl #6
    116c:	03000529 	movweq	r0, #1321	; 0x529
    1170:	3b0b3a0e 	blcc	2cf9b0 <__RAM_SIZE+0x1cf9b0>
    1174:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1178:	000a0213 	andeq	r0, sl, r3, lsl r2
    117c:	010b2a00 	tsteq	fp, r0, lsl #20
    1180:	13010655 	movwne	r0, #5717	; 0x1655
    1184:	0b2b0000 	bleq	ac118c <__RAM_SIZE+0x9c118c>
    1188:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    118c:	2c000001 	stccs	0, cr0, [r0], {1}
    1190:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 10e0 <__HEAP_SIZE+0xe0>
    1194:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1198:	3a0e030e 	bcc	381dd8 <__RAM_SIZE+0x281dd8>
    119c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11a0:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
    11a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 10f4 <__HEAP_SIZE+0xf4>
    11a8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    11ac:	3a0e030e 	bcc	381dec <__RAM_SIZE+0x281dec>
    11b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11b4:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    11b8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1108 <__HEAP_SIZE+0x108>
    11bc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    11c0:	3a0e030e 	bcc	381e00 <__RAM_SIZE+0x281e00>
    11c4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    11c8:	11010000 	mrsne	r0, (UNDEF: 1)
    11cc:	130e2501 	movwne	r2, #58625	; 0xe501
    11d0:	1b0e030b 	blne	381e04 <__RAM_SIZE+0x281e04>
    11d4:	1106550e 	tstne	r6, lr, lsl #10
    11d8:	10015201 	andne	r5, r1, r1, lsl #4
    11dc:	02000006 	andeq	r0, r0, #6
    11e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    11e4:	0b3b0b3a 	bleq	ec3ed4 <__RAM_SIZE+0xdc3ed4>
    11e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    11ec:	26030000 	strcs	r0, [r3], -r0
    11f0:	00134900 	andseq	r4, r3, r0, lsl #18
    11f4:	00240400 	eoreq	r0, r4, r0, lsl #8
    11f8:	0b3e0b0b 	bleq	f83e2c <__RAM_SIZE+0xe83e2c>
    11fc:	00000e03 	andeq	r0, r0, r3, lsl #28
    1200:	0b002405 	bleq	a21c <__HEAP_SIZE+0x921c>
    1204:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1208:	06000008 	streq	r0, [r0], -r8
    120c:	0b0b000f 	bleq	2c1250 <__RAM_SIZE+0x1c1250>
    1210:	0f070000 	svceq	0x00070000
    1214:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1218:	08000013 	stmdaeq	r0, {r0, r1, r4}
    121c:	13490035 	movtne	r0, #36917	; 0x9035
    1220:	15090000 	strne	r0, [r9, #-0]
    1224:	010c2701 	tsteq	ip, r1, lsl #14
    1228:	0a000013 	beq	127c <__HEAP_SIZE+0x27c>
    122c:	13490005 	movtne	r0, #36869	; 0x9005
    1230:	130b0000 	movwne	r0, #45056	; 0xb000
    1234:	0b0e0301 	bleq	381e40 <__RAM_SIZE+0x281e40>
    1238:	3b0b3a0b 	blcc	2cfa6c <__RAM_SIZE+0x1cfa6c>
    123c:	010b3905 	tsteq	fp, r5, lsl #18
    1240:	0c000013 	stceq	0, cr0, [r0], {19}
    1244:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1248:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    124c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1250:	00000a38 	andeq	r0, r0, r8, lsr sl
    1254:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
    1258:	00130113 	andseq	r0, r3, r3, lsl r1
    125c:	00210e00 	eoreq	r0, r1, r0, lsl #28
    1260:	0b2f1349 	bleq	bc5f8c <__RAM_SIZE+0xac5f8c>
    1264:	160f0000 	strne	r0, [pc], -r0
    1268:	3a0e0300 	bcc	381e70 <__RAM_SIZE+0x281e70>
    126c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1270:	0013490b 	andseq	r4, r3, fp, lsl #18
    1274:	01131000 	tsteq	r3, r0
    1278:	0b0b0e03 	bleq	2c4a8c <__RAM_SIZE+0x1c4a8c>
    127c:	0b3b0b3a 	bleq	ec3f6c <__RAM_SIZE+0xdc3f6c>
    1280:	13010b39 	movwne	r0, #6969	; 0x1b39
    1284:	0d110000 	ldceq	0, cr0, [r1, #-0]
    1288:	3a0e0300 	bcc	381e90 <__RAM_SIZE+0x281e90>
    128c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1290:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1294:	1200000a 	andne	r0, r0, #10
    1298:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    129c:	13011349 	movwne	r1, #4937	; 0x1349
    12a0:	04130000 	ldreq	r0, [r3], #-0
    12a4:	0b0b3e01 	bleq	2d0ab0 <__RAM_SIZE+0x1d0ab0>
    12a8:	3a13490b 	bcc	4d36dc <__RAM_SIZE+0x3d36dc>
    12ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12b0:	0013010b 	andseq	r0, r3, fp, lsl #2
    12b4:	00281400 	eoreq	r1, r8, r0, lsl #8
    12b8:	0b1c0e03 	bleq	704acc <__RAM_SIZE+0x604acc>
    12bc:	34150000 	ldrcc	r0, [r5], #-0
    12c0:	3a0e0300 	bcc	381ec8 <__RAM_SIZE+0x281ec8>
    12c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    12c8:	3f13490b 	svccc	0x0013490b
    12cc:	000a020c 	andeq	r0, sl, ip, lsl #4
    12d0:	00341600 	eorseq	r1, r4, r0, lsl #12
    12d4:	0b3a0e03 	bleq	e84ae8 <__RAM_SIZE+0xd84ae8>
    12d8:	0b39053b 	bleq	e427cc <__RAM_SIZE+0xd427cc>
    12dc:	0a021349 	beq	86008 <__HEAP_SIZE+0x85008>
    12e0:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    12e4:	030c3f01 	movweq	r3, #52993	; 0xcf01
    12e8:	3b0b3a0e 	blcc	2cfb28 <__RAM_SIZE+0x1cfb28>
    12ec:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    12f0:	1201110c 	andne	r1, r1, #12, 2
    12f4:	970a4001 	strls	r4, [sl, -r1]
    12f8:	13010c42 	movwne	r0, #7234	; 0x1c42
    12fc:	34180000 	ldrcc	r0, [r8], #-0
    1300:	3a0e0300 	bcc	381f08 <__RAM_SIZE+0x281f08>
    1304:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1308:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    130c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1310:	05190000 	ldreq	r0, [r9, #-0]
    1314:	3a0e0300 	bcc	381f1c <__RAM_SIZE+0x281f1c>
    1318:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    131c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1320:	1a00000a 	bne	1350 <__HEAP_SIZE+0x350>
    1324:	0e03012e 	adfeqsp	f0, f3, #0.5
    1328:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    132c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1330:	01120111 	tsteq	r2, r1, lsl r1
    1334:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1338:	0013010c 	andseq	r0, r3, ip, lsl #2
    133c:	00051b00 	andeq	r1, r5, r0, lsl #22
    1340:	0b3a0e03 	bleq	e84b54 <__RAM_SIZE+0xd84b54>
    1344:	0b39053b 	bleq	e42838 <__RAM_SIZE+0xd42838>
    1348:	06021349 	streq	r1, [r2], -r9, asr #6
    134c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1350:	010b1c00 	tsteq	fp, r0, lsl #24
    1354:	01120111 	tsteq	r2, r1, lsl r1
    1358:	00001301 	andeq	r1, r0, r1, lsl #6
    135c:	0182891d 	orreq	r8, r2, sp, lsl r9
    1360:	31011100 	mrscc	r1, (UNDEF: 17)
    1364:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1368:	01018289 	smlabbeq	r1, r9, r2, r8
    136c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1370:	00001301 	andeq	r1, r0, r1, lsl #6
    1374:	01828a1f 	orreq	r8, r2, pc, lsl sl
    1378:	910a0200 	mrsls	r0, R10_fiq
    137c:	00000a42 	andeq	r0, r0, r2, asr #20
    1380:	01828920 	orreq	r8, r2, r0, lsr #18
    1384:	31011101 	tstcc	r1, r1, lsl #2
    1388:	21000013 	tstcs	r0, r3, lsl r0
    138c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 12dc <__HEAP_SIZE+0x2dc>
    1390:	0b3a0e03 	bleq	e84ba4 <__RAM_SIZE+0xd84ba4>
    1394:	0b39053b 	bleq	e42888 <__RAM_SIZE+0xd42888>
    1398:	13490c27 	movtne	r0, #39975	; 0x9c27
    139c:	01120111 	tsteq	r2, r1, lsl r1
    13a0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    13a4:	0013010c 	andseq	r0, r3, ip, lsl #2
    13a8:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    13ac:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    13b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13b4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    13b8:	01120111 	tsteq	r2, r1, lsl r1
    13bc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    13c0:	0013010c 	andseq	r0, r3, ip, lsl #2
    13c4:	010b2300 	mrseq	r2, (UNDEF: 59)
    13c8:	13010655 	movwne	r0, #5717	; 0x1655
    13cc:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    13d0:	030c3f01 	movweq	r3, #52993	; 0xcf01
    13d4:	3b0b3a0e 	blcc	2cfc14 <__RAM_SIZE+0x1cfc14>
    13d8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    13dc:	1113490c 	tstne	r3, ip, lsl #18
    13e0:	40011201 	andmi	r1, r1, r1, lsl #4
    13e4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    13e8:	00001301 	andeq	r1, r0, r1, lsl #6
    13ec:	03003425 	movweq	r3, #1061	; 0x425
    13f0:	3b0b3a0e 	blcc	2cfc30 <__RAM_SIZE+0x1cfc30>
    13f4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13f8:	000b1c13 	andeq	r1, fp, r3, lsl ip
    13fc:	002e2600 	eoreq	r2, lr, r0, lsl #12
    1400:	0b3a0e03 	bleq	e84c14 <__RAM_SIZE+0xd84c14>
    1404:	0b39053b 	bleq	e428f8 <__RAM_SIZE+0xd428f8>
    1408:	01110c27 	tsteq	r1, r7, lsr #24
    140c:	0a400112 	beq	100185c <__RAM_SIZE+0xf0185c>
    1410:	000c4297 	muleq	ip, r7, r2
    1414:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    1418:	0b3a0e03 	bleq	e84c2c <__RAM_SIZE+0xd84c2c>
    141c:	0b39053b 	bleq	e42910 <__RAM_SIZE+0xd42910>
    1420:	13490c27 	movtne	r0, #39975	; 0x9c27
    1424:	01120111 	tsteq	r2, r1, lsl r1
    1428:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    142c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1430:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
    1434:	0b3a0e03 	bleq	e84c48 <__RAM_SIZE+0xd84c48>
    1438:	0b39053b 	bleq	e4292c <__RAM_SIZE+0xd4292c>
    143c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1440:	01120111 	tsteq	r2, r1, lsl r1
    1444:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1448:	0013010c 	andseq	r0, r3, ip, lsl #2
    144c:	00342900 	eorseq	r2, r4, r0, lsl #18
    1450:	0b3a0803 	bleq	e83464 <__RAM_SIZE+0xd83464>
    1454:	0b39053b 	bleq	e42948 <__RAM_SIZE+0xd42948>
    1458:	06021349 	streq	r1, [r2], -r9, asr #6
    145c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1460:	010b2a00 	tsteq	fp, r0, lsl #20
    1464:	00000655 	andeq	r0, r0, r5, asr r6
    1468:	3f002e2b 	svccc	0x00002e2b
    146c:	3a0e030c 	bcc	3820a4 <__RAM_SIZE+0x2820a4>
    1470:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1474:	110c270b 	tstne	ip, fp, lsl #14
    1478:	40011201 	andmi	r1, r1, r1, lsl #4
    147c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1480:	892c0000 	stmdbhi	ip!, {}	; <UNPREDICTABLE>
    1484:	11010182 	smlabbne	r1, r2, r1, r0
    1488:	2d000001 	stccs	0, cr0, [r0, #-4]
    148c:	0111010b 	tsteq	r1, fp, lsl #2
    1490:	00000112 	andeq	r0, r0, r2, lsl r1
    1494:	3f002e2e 	svccc	0x00002e2e
    1498:	3a0e030c 	bcc	3820d0 <__RAM_SIZE+0x2820d0>
    149c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14a0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14a4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14a8:	970a4001 	strls	r4, [sl, -r1]
    14ac:	00000c42 	andeq	r0, r0, r2, asr #24
    14b0:	3f002e2f 	svccc	0x00002e2f
    14b4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    14b8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    14bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    14c0:	00000b39 	andeq	r0, r0, r9, lsr fp
    14c4:	3f002e30 	svccc	0x00002e30
    14c8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    14cc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    14d0:	0b3b0b3a 	bleq	ec41c0 <__RAM_SIZE+0xdc41c0>
    14d4:	00000b39 	andeq	r0, r0, r9, lsr fp
    14d8:	3f002e31 	svccc	0x00002e31
    14dc:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    14e0:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    14e4:	0b3b0b3a 	bleq	ec41d4 <__RAM_SIZE+0xdc41d4>
    14e8:	01000000 	mrseq	r0, (UNDEF: 0)
    14ec:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    14f0:	0e030b13 	vmoveq.32	d3[0], r0
    14f4:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    14f8:	01520111 	cmpeq	r2, r1, lsl r1
    14fc:	00000610 	andeq	r0, r0, r0, lsl r6
    1500:	03001602 	movweq	r1, #1538	; 0x602
    1504:	3b0b3a0e 	blcc	2cfd44 <__RAM_SIZE+0x1cfd44>
    1508:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    150c:	03000013 	movweq	r0, #19
    1510:	0b0b0024 	bleq	2c15a8 <__RAM_SIZE+0x1c15a8>
    1514:	0e030b3e 	vmoveq.16	d3[0], r0
    1518:	24040000 	strcs	r0, [r4], #-0
    151c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1520:	0008030b 	andeq	r0, r8, fp, lsl #6
    1524:	000f0500 	andeq	r0, pc, r0, lsl #10
    1528:	00000b0b 	andeq	r0, r0, fp, lsl #22
    152c:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    1530:	07000013 	smladeq	r0, r3, r0, r0
    1534:	0b0b000f 	bleq	2c1578 <__RAM_SIZE+0x1c1578>
    1538:	00001349 	andeq	r1, r0, r9, asr #6
    153c:	27011508 	strcs	r1, [r1, -r8, lsl #10]
    1540:	0013010c 	andseq	r0, r3, ip, lsl #2
    1544:	00050900 	andeq	r0, r5, r0, lsl #18
    1548:	00001349 	andeq	r1, r0, r9, asr #6
    154c:	0301130a 	movweq	r1, #4874	; 0x130a
    1550:	3a0b0b0e 	bcc	2c4190 <__RAM_SIZE+0x1c4190>
    1554:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1558:	0013010b 	andseq	r0, r3, fp, lsl #2
    155c:	000d0b00 	andeq	r0, sp, r0, lsl #22
    1560:	0b3a0e03 	bleq	e84d74 <__RAM_SIZE+0xd84d74>
    1564:	0b39053b 	bleq	e42a58 <__RAM_SIZE+0xd42a58>
    1568:	0a381349 	beq	e06294 <__RAM_SIZE+0xd06294>
    156c:	010c0000 	mrseq	r0, (UNDEF: 12)
    1570:	01134901 	tsteq	r3, r1, lsl #18
    1574:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1578:	13490021 	movtne	r0, #36897	; 0x9021
    157c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1580:	0300160e 	movweq	r1, #1550	; 0x60e
    1584:	3b0b3a0e 	blcc	2cfdc4 <__RAM_SIZE+0x1cfdc4>
    1588:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    158c:	0f000013 	svceq	0x00000013
    1590:	0b0b0117 	bleq	2c19f4 <__RAM_SIZE+0x1c19f4>
    1594:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1598:	13010b39 	movwne	r0, #6969	; 0x1b39
    159c:	0d100000 	ldceq	0, cr0, [r0, #-0]
    15a0:	3a0e0300 	bcc	3821a8 <__RAM_SIZE+0x2821a8>
    15a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15a8:	0013490b 	andseq	r4, r3, fp, lsl #18
    15ac:	000d1100 	andeq	r1, sp, r0, lsl #2
    15b0:	0b3a0803 	bleq	e835c4 <__RAM_SIZE+0xd835c4>
    15b4:	0b39053b 	bleq	e42aa8 <__RAM_SIZE+0xd42aa8>
    15b8:	0a381349 	beq	e062e4 <__RAM_SIZE+0xd062e4>
    15bc:	13120000 	tstne	r2, #0
    15c0:	0b0e0301 	bleq	3821cc <__RAM_SIZE+0x2821cc>
    15c4:	3b0b3a0b 	blcc	2cfdf8 <__RAM_SIZE+0x1cfdf8>
    15c8:	010b390b 	tsteq	fp, fp, lsl #18
    15cc:	13000013 	movwne	r0, #19
    15d0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    15d4:	0b3b0b3a 	bleq	ec42c4 <__RAM_SIZE+0xdc42c4>
    15d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    15dc:	00000a38 	andeq	r0, r0, r8, lsr sl
    15e0:	03001314 	movweq	r1, #788	; 0x314
    15e4:	000c3c0e 	andeq	r3, ip, lr, lsl #24
    15e8:	01171500 	tsteq	r7, r0, lsl #10
    15ec:	0b3a0b0b 	bleq	e84220 <__RAM_SIZE+0xd84220>
    15f0:	0b390b3b 	bleq	e442e4 <__RAM_SIZE+0xd442e4>
    15f4:	00001301 	andeq	r1, r0, r1, lsl #6
    15f8:	03000d16 	movweq	r0, #3350	; 0xd16
    15fc:	3b0b3a0e 	blcc	2cfe3c <__RAM_SIZE+0x1cfe3c>
    1600:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1604:	17000013 	smladne	r0, r3, r0, r0
    1608:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    160c:	0b3b0b3a 	bleq	ec42fc <__RAM_SIZE+0xdc42fc>
    1610:	13490b39 	movtne	r0, #39737	; 0x9b39
    1614:	00000a38 	andeq	r0, r0, r8, lsr sl
    1618:	03003418 	movweq	r3, #1048	; 0x418
    161c:	3b0b3a0e 	blcc	2cfe5c <__RAM_SIZE+0x1cfe5c>
    1620:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1624:	000a0213 	andeq	r0, sl, r3, lsl r2
    1628:	002e1900 	eoreq	r1, lr, r0, lsl #18
    162c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1630:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1634:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1638:	01120111 	tsteq	r2, r1, lsl r1
    163c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1640:	1a00000c 	bne	1678 <__HEAP_SIZE+0x678>
    1644:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1594 <__HEAP_SIZE+0x594>
    1648:	0b3a0e03 	bleq	e84e5c <__RAM_SIZE+0xd84e5c>
    164c:	0b39053b 	bleq	e42b40 <__RAM_SIZE+0xd42b40>
    1650:	01110c27 	tsteq	r1, r7, lsr #24
    1654:	0a400112 	beq	1001aa4 <__RAM_SIZE+0xf01aa4>
    1658:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    165c:	1b000013 	blne	16b0 <__HEAP_SIZE+0x6b0>
    1660:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1664:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1668:	13490b39 	movtne	r0, #39737	; 0x9b39
    166c:	00000a02 	andeq	r0, r0, r2, lsl #20
    1670:	3f012e1c 	svccc	0x00012e1c
    1674:	3a0e030c 	bcc	3822ac <__RAM_SIZE+0x2822ac>
    1678:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    167c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1680:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1684:	970a4001 	strls	r4, [sl, -r1]
    1688:	13010c42 	movwne	r0, #7234	; 0x1c42
    168c:	051d0000 	ldreq	r0, [sp, #-0]
    1690:	3a0e0300 	bcc	382298 <__RAM_SIZE+0x282298>
    1694:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1698:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    169c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    16a0:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    16a4:	030c3f01 	movweq	r3, #52993	; 0xcf01
    16a8:	3b0b3a0e 	blcc	2cfee8 <__RAM_SIZE+0x1cfee8>
    16ac:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    16b0:	1113490c 	tstne	r3, ip, lsl #18
    16b4:	40011201 	andmi	r1, r1, r1, lsl #4
    16b8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    16bc:	00001301 	andeq	r1, r0, r1, lsl #6
    16c0:	0300341f 	movweq	r3, #1055	; 0x41f
    16c4:	3b0b3a0e 	blcc	2cff04 <__RAM_SIZE+0x1cff04>
    16c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    16cc:	000a0213 	andeq	r0, sl, r3, lsl r2
    16d0:	00342000 	eorseq	r2, r4, r0
    16d4:	0b3a0e03 	bleq	e84ee8 <__RAM_SIZE+0xd84ee8>
    16d8:	0b39053b 	bleq	e42bcc <__RAM_SIZE+0xd42bcc>
    16dc:	06021349 	streq	r1, [r2], -r9, asr #6
    16e0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    16e4:	82892100 	addhi	r2, r9, #0, 2
    16e8:	01110101 	tsteq	r1, r1, lsl #2
    16ec:	00001331 	andeq	r1, r0, r1, lsr r3
    16f0:	01828a22 	orreq	r8, r2, r2, lsr #20
    16f4:	910a0200 	mrsls	r0, R10_fiq
    16f8:	00000a42 	andeq	r0, r0, r2, asr #20
    16fc:	3f012e23 	svccc	0x00012e23
    1700:	3a0e030c 	bcc	382338 <__RAM_SIZE+0x282338>
    1704:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1708:	110c270b 	tstne	ip, fp, lsl #14
    170c:	40011201 	andmi	r1, r1, r1, lsl #4
    1710:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1714:	00001301 	andeq	r1, r0, r1, lsl #6
    1718:	01828924 	orreq	r8, r2, r4, lsr #18
    171c:	31011100 	mrscc	r1, (UNDEF: 17)
    1720:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1724:	0e03012e 	adfeqsp	f0, f3, #0.5
    1728:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    172c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1730:	01120111 	tsteq	r2, r1, lsl r1
    1734:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1738:	0013010c 	andseq	r0, r3, ip, lsl #2
    173c:	010b2600 	tsteq	fp, r0, lsl #12
    1740:	01120111 	tsteq	r2, r1, lsl r1
    1744:	00001301 	andeq	r1, r0, r1, lsl #6
    1748:	01828927 	orreq	r8, r2, r7, lsr #18
    174c:	31011101 	tstcc	r1, r1, lsl #2
    1750:	00130113 	andseq	r0, r3, r3, lsl r1
    1754:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
    1758:	0b3a0e03 	bleq	e84f6c <__RAM_SIZE+0xd84f6c>
    175c:	0b39053b 	bleq	e42c50 <__RAM_SIZE+0xd42c50>
    1760:	01110c27 	tsteq	r1, r7, lsr #24
    1764:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1768:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    176c:	29000013 	stmdbcs	r0, {r0, r1, r4}
    1770:	01018289 	smlabbeq	r1, r9, r2, r8
    1774:	13010111 	movwne	r0, #4369	; 0x1111
    1778:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    177c:	3a0e0301 	bcc	382388 <__RAM_SIZE+0x282388>
    1780:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1784:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1788:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    178c:	97064001 	strls	r4, [r6, -r1]
    1790:	13010c42 	movwne	r0, #7234	; 0x1c42
    1794:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
    1798:	3a0e0301 	bcc	3823a4 <__RAM_SIZE+0x2823a4>
    179c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17a0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    17a4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    17a8:	970a4001 	strls	r4, [sl, -r1]
    17ac:	13010c42 	movwne	r0, #7234	; 0x1c42
    17b0:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
    17b4:	030c3f00 	movweq	r3, #52992	; 0xcf00
    17b8:	3b0b3a0e 	blcc	2cfff8 <__RAM_SIZE+0x1cfff8>
    17bc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    17c0:	1113490c 	tstne	r3, ip, lsl #18
    17c4:	40011201 	andmi	r1, r1, r1, lsl #4
    17c8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    17cc:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
    17d0:	030c3f01 	movweq	r3, #52993	; 0xcf01
    17d4:	3b0b3a0e 	blcc	2d0014 <__RAM_SIZE+0x1d0014>
    17d8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    17dc:	1113490c 	tstne	r3, ip, lsl #18
    17e0:	40011201 	andmi	r1, r1, r1, lsl #4
    17e4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    17e8:	00001301 	andeq	r1, r0, r1, lsl #6
    17ec:	0300342e 	movweq	r3, #1070	; 0x42e
    17f0:	3b0b3a0e 	blcc	2d0030 <__RAM_SIZE+0x1d0030>
    17f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    17f8:	b7060213 	smladlt	r6, r3, r2, r0
    17fc:	00000642 	andeq	r0, r0, r2, asr #12
    1800:	3f002e2f 	svccc	0x00002e2f
    1804:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1808:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    180c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1810:	00000b39 	andeq	r0, r0, r9, lsr fp
    1814:	3f002e30 	svccc	0x00002e30
    1818:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    181c:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1820:	0b3b0b3a 	bleq	ec4510 <__RAM_SIZE+0xdc4510>
    1824:	00000b39 	andeq	r0, r0, r9, lsr fp
    1828:	01110100 	tsteq	r1, r0, lsl #2
    182c:	0b130e25 	bleq	4c50c8 <__RAM_SIZE+0x3c50c8>
    1830:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1834:	01110655 	tsteq	r1, r5, asr r6
    1838:	06100152 			; <UNDEFINED> instruction: 0x06100152
    183c:	16020000 	strne	r0, [r2], -r0
    1840:	3a0e0300 	bcc	382448 <__RAM_SIZE+0x282448>
    1844:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1848:	0013490b 	andseq	r4, r3, fp, lsl #18
    184c:	00260300 	eoreq	r0, r6, r0, lsl #6
    1850:	00001349 	andeq	r1, r0, r9, asr #6
    1854:	0b002404 	bleq	a86c <__HEAP_SIZE+0x986c>
    1858:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    185c:	0500000e 	streq	r0, [r0, #-14]
    1860:	0b0b0024 	bleq	2c18f8 <__RAM_SIZE+0x1c18f8>
    1864:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1868:	0f060000 	svceq	0x00060000
    186c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1870:	000f0700 	andeq	r0, pc, r0, lsl #14
    1874:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1878:	13080000 	movwne	r0, #32768	; 0x8000
    187c:	0b0e0301 	bleq	382488 <__RAM_SIZE+0x282488>
    1880:	3b0b3a0b 	blcc	2d00b4 <__RAM_SIZE+0x1d00b4>
    1884:	010b390b 	tsteq	fp, fp, lsl #18
    1888:	09000013 	stmdbeq	r0, {r0, r1, r4}
    188c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1890:	0b3b0b3a 	bleq	ec4580 <__RAM_SIZE+0xdc4580>
    1894:	13490b39 	movtne	r0, #39737	; 0x9b39
    1898:	00000a38 	andeq	r0, r0, r8, lsr sl
    189c:	4901010a 	stmdbmi	r1, {r1, r3, r8}
    18a0:	00130113 	andseq	r0, r3, r3, lsl r1
    18a4:	00210b00 	eoreq	r0, r1, r0, lsl #22
    18a8:	052f1349 	streq	r1, [pc, #-841]!	; 1567 <__HEAP_SIZE+0x567>
    18ac:	340c0000 	strcc	r0, [ip], #-0
    18b0:	3a0e0300 	bcc	3824b8 <__RAM_SIZE+0x2824b8>
    18b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18b8:	3f13490b 	svccc	0x0013490b
    18bc:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    18c0:	00340d00 	eorseq	r0, r4, r0, lsl #26
    18c4:	0b3a0e03 	bleq	e850d8 <__RAM_SIZE+0xd850d8>
    18c8:	0b390b3b 	bleq	e445bc <__RAM_SIZE+0xd445bc>
    18cc:	0b1c1349 	bleq	7065f8 <__RAM_SIZE+0x6065f8>
    18d0:	340e0000 	strcc	r0, [lr], #-0
    18d4:	3a0e0300 	bcc	3824dc <__RAM_SIZE+0x2824dc>
    18d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    18e0:	0f00000a 	svceq	0x0000000a
    18e4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1834 <__HEAP_SIZE+0x834>
    18e8:	0b3a0e03 	bleq	e850fc <__RAM_SIZE+0xd850fc>
    18ec:	0b39053b 	bleq	e42de0 <__RAM_SIZE+0xd42de0>
    18f0:	01110c27 	tsteq	r1, r7, lsr #24
    18f4:	0a400112 	beq	1001d44 <__RAM_SIZE+0xf01d44>
    18f8:	000c4297 	muleq	ip, r7, r2
    18fc:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
    1900:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1904:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1908:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    190c:	01120111 	tsteq	r2, r1, lsl r1
    1910:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1914:	0013010c 	andseq	r0, r3, ip, lsl #2
    1918:	00051100 	andeq	r1, r5, r0, lsl #2
    191c:	0b3a0e03 	bleq	e85130 <__RAM_SIZE+0xd85130>
    1920:	0b39053b 	bleq	e42e14 <__RAM_SIZE+0xd42e14>
    1924:	06021349 	streq	r1, [r2], -r9, asr #6
    1928:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    192c:	00341200 	eorseq	r1, r4, r0, lsl #4
    1930:	0b3a0e03 	bleq	e85144 <__RAM_SIZE+0xd85144>
    1934:	0b39053b 	bleq	e42e28 <__RAM_SIZE+0xd42e28>
    1938:	06021349 	streq	r1, [r2], -r9, asr #6
    193c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1940:	82891300 	addhi	r1, r9, #0, 6
    1944:	01110001 	tsteq	r1, r1
    1948:	00001331 	andeq	r1, r0, r1, lsr r3
    194c:	03012e14 	movweq	r2, #7700	; 0x1e14
    1950:	3b0b3a0e 	blcc	2d0190 <__RAM_SIZE+0x1d0190>
    1954:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1958:	1201110c 	andne	r1, r1, #12, 2
    195c:	97064001 	strls	r4, [r6, -r1]
    1960:	13010c42 	movwne	r0, #7234	; 0x1c42
    1964:	34150000 	ldrcc	r0, [r5], #-0
    1968:	3a080300 	bcc	202570 <__RAM_SIZE+0x102570>
    196c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1970:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1974:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1978:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    197c:	3a0e0301 	bcc	382588 <__RAM_SIZE+0x282588>
    1980:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1984:	110c270b 	tstne	ip, fp, lsl #14
    1988:	40011201 	andmi	r1, r1, r1, lsl #4
    198c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1990:	00001301 	andeq	r1, r0, r1, lsl #6
    1994:	3f012e17 	svccc	0x00012e17
    1998:	3a0e030c 	bcc	3825d0 <__RAM_SIZE+0x2825d0>
    199c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19a0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    19a4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    19a8:	97064001 	strls	r4, [r6, -r1]
    19ac:	13010c42 	movwne	r0, #7234	; 0x1c42
    19b0:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
    19b4:	11010182 	smlabbne	r1, r2, r1, r0
    19b8:	01133101 	tsteq	r3, r1, lsl #2
    19bc:	19000013 	stmdbne	r0, {r0, r1, r4}
    19c0:	0001828a 	andeq	r8, r1, sl, lsl #5
    19c4:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    19c8:	1a00000a 	bne	19f8 <__HEAP_SIZE+0x9f8>
    19cc:	01018289 	smlabbeq	r1, r9, r2, r8
    19d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    19d4:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    19d8:	030c3f00 	movweq	r3, #52992	; 0xcf00
    19dc:	3b0b3a0e 	blcc	2d021c <__RAM_SIZE+0x1d021c>
    19e0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    19e4:	1113490c 	tstne	r3, ip, lsl #18
    19e8:	40011201 	andmi	r1, r1, r1, lsl #4
    19ec:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    19f0:	051c0000 	ldreq	r0, [ip, #-0]
    19f4:	3a080300 	bcc	2025fc <__RAM_SIZE+0x1025fc>
    19f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1a00:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1a04:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    1a08:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1a0c:	3b0b3a0e 	blcc	2d024c <__RAM_SIZE+0x1d024c>
    1a10:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1a14:	1113490c 	tstne	r3, ip, lsl #18
    1a18:	40011201 	andmi	r1, r1, r1, lsl #4
    1a1c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1a20:	00001301 	andeq	r1, r0, r1, lsl #6
    1a24:	0300051e 	movweq	r0, #1310	; 0x51e
    1a28:	3b0b3a0e 	blcc	2d0268 <__RAM_SIZE+0x1d0268>
    1a2c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a30:	b7060213 	smladlt	r6, r3, r2, r0
    1a34:	00000642 	andeq	r0, r0, r2, asr #12
    1a38:	0300341f 	movweq	r3, #1055	; 0x41f
    1a3c:	3b0b3a0e 	blcc	2d027c <__RAM_SIZE+0x1d027c>
    1a40:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a44:	b7060213 	smladlt	r6, r3, r2, r0
    1a48:	00000642 	andeq	r0, r0, r2, asr #12
    1a4c:	3f002e20 	svccc	0x00002e20
    1a50:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1a54:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1a58:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1a5c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1a60:	3f002e21 	svccc	0x00002e21
    1a64:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1a68:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1a6c:	0b3b0b3a 	bleq	ec475c <__RAM_SIZE+0xdc475c>
    1a70:	00000b39 	andeq	r0, r0, r9, lsr fp
    1a74:	3f002e22 	svccc	0x00002e22
    1a78:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1a7c:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1a80:	0b3b0b3a 	bleq	ec4770 <__RAM_SIZE+0xdc4770>
    1a84:	01000000 	mrseq	r0, (UNDEF: 0)
    1a88:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1a8c:	0e030b13 	vmoveq.32	d3[0], r0
    1a90:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1a94:	01520111 	cmpeq	r2, r1, lsl r1
    1a98:	00000610 	andeq	r0, r0, r0, lsl r6
    1a9c:	0b002402 	bleq	aaac <__HEAP_SIZE+0x9aac>
    1aa0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1aa4:	03000008 	movweq	r0, #8
    1aa8:	0b0b0024 	bleq	2c1b40 <__RAM_SIZE+0x1c1b40>
    1aac:	0e030b3e 	vmoveq.16	d3[0], r0
    1ab0:	16040000 	strne	r0, [r4], -r0
    1ab4:	3a0e0300 	bcc	3826bc <__RAM_SIZE+0x2826bc>
    1ab8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1abc:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ac0:	00350500 	eorseq	r0, r5, r0, lsl #10
    1ac4:	00001349 	andeq	r1, r0, r9, asr #6
    1ac8:	0b000f06 	bleq	56e8 <__HEAP_SIZE+0x46e8>
    1acc:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ad0:	01150700 	tsteq	r5, r0, lsl #14
    1ad4:	13010c27 	movwne	r0, #7207	; 0x1c27
    1ad8:	05080000 	streq	r0, [r8, #-0]
    1adc:	00134900 	andseq	r4, r3, r0, lsl #18
    1ae0:	000f0900 	andeq	r0, pc, r0, lsl #18
    1ae4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1ae8:	3e01040a 	cdpcc	4, 0, cr0, cr1, cr10, {0}
    1aec:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1af0:	3b0b3a13 	blcc	2d0344 <__RAM_SIZE+0x1d0344>
    1af4:	010b390b 	tsteq	fp, fp, lsl #18
    1af8:	0b000013 	bleq	1b4c <__HEAP_SIZE+0xb4c>
    1afc:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1b00:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1b04:	4900260c 	stmdbmi	r0, {r2, r3, r9, sl, sp}
    1b08:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1b0c:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
    1b10:	340e0000 	strcc	r0, [lr], #-0
    1b14:	3a0e0300 	bcc	38271c <__RAM_SIZE+0x28271c>
    1b18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b1c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1b20:	0f00000a 	svceq	0x0000000a
    1b24:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1a74 <__HEAP_SIZE+0xa74>
    1b28:	0b3a0e03 	bleq	e8533c <__RAM_SIZE+0xd8533c>
    1b2c:	0b39053b 	bleq	e43020 <__RAM_SIZE+0xd43020>
    1b30:	13490c27 	movtne	r0, #39975	; 0x9c27
    1b34:	01120111 	tsteq	r2, r1, lsl r1
    1b38:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1b3c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1b40:	00341000 	eorseq	r1, r4, r0
    1b44:	0b3a0e03 	bleq	e85358 <__RAM_SIZE+0xd85358>
    1b48:	0b39053b 	bleq	e4303c <__RAM_SIZE+0xd4303c>
    1b4c:	06021349 	streq	r1, [r2], -r9, asr #6
    1b50:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1b54:	00341100 	eorseq	r1, r4, r0, lsl #2
    1b58:	0b3a0e03 	bleq	e8536c <__RAM_SIZE+0xd8536c>
    1b5c:	0b39053b 	bleq	e43050 <__RAM_SIZE+0xd43050>
    1b60:	0b1c1349 	bleq	70688c <__RAM_SIZE+0x60688c>
    1b64:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    1b68:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1b6c:	3b0b3a0e 	blcc	2d03ac <__RAM_SIZE+0x1d03ac>
    1b70:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1b74:	1201110c 	andne	r1, r1, #12, 2
    1b78:	970a4001 	strls	r4, [sl, -r1]
    1b7c:	00000c42 	andeq	r0, r0, r2, asr #24
    1b80:	3f012e13 	svccc	0x00012e13
    1b84:	3a0e030c 	bcc	3827bc <__RAM_SIZE+0x2827bc>
    1b88:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b8c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1b90:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1b94:	97064001 	strls	r4, [r6, -r1]
    1b98:	13010c42 	movwne	r0, #7234	; 0x1c42
    1b9c:	0b140000 	bleq	501ba4 <__RAM_SIZE+0x401ba4>
    1ba0:	00130101 	andseq	r0, r3, r1, lsl #2
    1ba4:	00341500 	eorseq	r1, r4, r0, lsl #10
    1ba8:	0b3a0e03 	bleq	e853bc <__RAM_SIZE+0xd853bc>
    1bac:	0b39053b 	bleq	e430a0 <__RAM_SIZE+0xd430a0>
    1bb0:	00001349 	andeq	r1, r0, r9, asr #6
    1bb4:	01828916 	orreq	r8, r2, r6, lsl r9
    1bb8:	31011100 	mrscc	r1, (UNDEF: 17)
    1bbc:	17000013 	smladne	r0, r3, r0, r0
    1bc0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1bc4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1bc8:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bcc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1bd0:	18000006 	stmdane	r0, {r1, r2}
    1bd4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1bd8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1bdc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1be0:	00000a02 	andeq	r0, r0, r2, lsl #20
    1be4:	3f012e19 	svccc	0x00012e19
    1be8:	3a0e030c 	bcc	382820 <__RAM_SIZE+0x282820>
    1bec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bf0:	110c270b 	tstne	ip, fp, lsl #14
    1bf4:	40011201 	andmi	r1, r1, r1, lsl #4
    1bf8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1bfc:	00001301 	andeq	r1, r0, r1, lsl #6
    1c00:	0182891a 	orreq	r8, r2, sl, lsl r9
    1c04:	31011101 	tstcc	r1, r1, lsl #2
    1c08:	1b000013 	blne	1c5c <__HEAP_SIZE+0xc5c>
    1c0c:	0001828a 	andeq	r8, r1, sl, lsl #5
    1c10:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1c14:	1c00000a 	stcne	0, cr0, [r0], {10}
    1c18:	0e03012e 	adfeqsp	f0, f3, #0.5
    1c1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1c20:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1c24:	01120111 	tsteq	r2, r1, lsl r1
    1c28:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1c2c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1c30:	010b1d00 	tsteq	fp, r0, lsl #26
    1c34:	01120111 	tsteq	r2, r1, lsl r1
    1c38:	00001301 	andeq	r1, r0, r1, lsl #6
    1c3c:	3f002e1e 	svccc	0x00002e1e
    1c40:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1c44:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1c48:	0b3b0b3a 	bleq	ec4938 <__RAM_SIZE+0xdc4938>
    1c4c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1c50:	3f002e1f 	svccc	0x00002e1f
    1c54:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1c58:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1c5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1c60:	00000b39 	andeq	r0, r0, r9, lsr fp
    1c64:	01110100 	tsteq	r1, r0, lsl #2
    1c68:	0b130e25 	bleq	4c5504 <__RAM_SIZE+0x3c5504>
    1c6c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1c70:	01110655 	tsteq	r1, r5, asr r6
    1c74:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1c78:	24020000 	strcs	r0, [r2], #-0
    1c7c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1c80:	000e030b 	andeq	r0, lr, fp, lsl #6
    1c84:	00160300 	andseq	r0, r6, r0, lsl #6
    1c88:	0b3a0e03 	bleq	e8549c <__RAM_SIZE+0xd8549c>
    1c8c:	0b390b3b 	bleq	e44980 <__RAM_SIZE+0xd44980>
    1c90:	00001349 	andeq	r1, r0, r9, asr #6
    1c94:	0b002404 	bleq	acac <__HEAP_SIZE+0x9cac>
    1c98:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1c9c:	05000008 	streq	r0, [r0, #-8]
    1ca0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1bf0 <__HEAP_SIZE+0xbf0>
    1ca4:	0b3a0e03 	bleq	e854b8 <__RAM_SIZE+0xd854b8>
    1ca8:	0b39053b 	bleq	e4319c <__RAM_SIZE+0xd4319c>
    1cac:	01110c27 	tsteq	r1, r7, lsr #24
    1cb0:	0a400112 	beq	1002100 <__RAM_SIZE+0xf02100>
    1cb4:	000c4297 	muleq	ip, r7, r2
    1cb8:	012e0600 			; <UNDEFINED> instruction: 0x012e0600
    1cbc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1cc0:	0b3b0b3a 	bleq	ec49b0 <__RAM_SIZE+0xdc49b0>
    1cc4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1cc8:	01120111 	tsteq	r2, r1, lsl r1
    1ccc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1cd0:	0013010c 	andseq	r0, r3, ip, lsl #2
    1cd4:	00050700 	andeq	r0, r5, r0, lsl #14
    1cd8:	0b3a0e03 	bleq	e854ec <__RAM_SIZE+0xd854ec>
    1cdc:	0b390b3b 	bleq	e449d0 <__RAM_SIZE+0xd449d0>
    1ce0:	0a021349 	beq	86a0c <__HEAP_SIZE+0x85a0c>
    1ce4:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
    1ce8:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1cec:	3b0b3a0e 	blcc	2d052c <__RAM_SIZE+0x1d052c>
    1cf0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1cf4:	1113490c 	tstne	r3, ip, lsl #18
    1cf8:	40011201 	andmi	r1, r1, r1, lsl #4
    1cfc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1d00:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    1d04:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1d08:	3b0b3a0e 	blcc	2d0548 <__RAM_SIZE+0x1d0548>
    1d0c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1d10:	1201110c 	andne	r1, r1, #12, 2
    1d14:	970a4001 	strls	r4, [sl, -r1]
    1d18:	00000c42 	andeq	r0, r0, r2, asr #24
    1d1c:	00110100 	andseq	r0, r1, r0, lsl #2
    1d20:	01110610 	tsteq	r1, r0, lsl r6
    1d24:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    1d28:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    1d2c:	00000513 	andeq	r0, r0, r3, lsl r5
    1d30:	00110100 	andseq	r0, r1, r0, lsl #2
    1d34:	01110610 	tsteq	r1, r0, lsl r6
    1d38:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    1d3c:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    1d40:	00000513 	andeq	r0, r0, r3, lsl r5
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	10000964 	andne	r0, r0, r4, ror #18
       4:	10000966 	andne	r0, r0, r6, ror #18
        xReturn = pdFALSE;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	10000966 	andne	r0, r0, r6, ror #18
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	1000099c 	mulne	r0, ip, r9
}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	09660000 	stmdbeq	r6!, {}^	; <UNPREDICTABLE>
      28:	09801000 	stmibeq	r0, {ip}
      2c:	00021000 	andeq	r1, r2, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	09809f30 	stmibeq	r0, {r4, r5, r8, r9, sl, fp, ip, pc}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	09841000 	stmibeq	r4, {ip}
      38:	00011000 	andeq	r1, r1, r0
      3c:	00098451 	andeq	r8, r9, r1, asr r4
      40:	00099c10 	andeq	r9, r9, r0, lsl ip
        BaseType_t xReturn = pdFAIL;
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
      50:	10000800 	andne	r0, r0, r0, lsl #16
        pc = *sp;
      54:	10000802 	andne	r0, r0, r2, lsl #16
      58:	007d0002 	rsbseq	r0, sp, r2
    return pc;
      5c:	10000802 	andne	r0, r0, r2, lsl #16
        return 0;
      60:	10000804 	andne	r0, r0, r4, lsl #16
      64:	047d0002 	ldrbteq	r0, [sp], #-2
      68:	10000804 	andne	r0, r0, r4, lsl #16
      6c:	10000828 	andne	r0, r0, r8, lsr #16
      70:	107d0002 	rsbsne	r0, sp, r2
      74:	10000828 	andne	r0, r0, r8, lsr #16
      78:	1000082c 	andne	r0, r0, ip, lsr #16
      7c:	047d0002 	ldrbteq	r0, [sp], #-2
            prvUnlockQueue( pxQueue );
      80:	1000082c 	andne	r0, r0, ip, lsr #16
            ( void ) xTaskResumeAll();
      84:	10000844 	andne	r0, r0, r4, asr #16
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	107d0002 	rsbsne	r0, sp, r2
	...
        taskENTER_CRITICAL();
      94:	00000002 	andeq	r0, r0, r2
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000000 	andeq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	10000804 	andne	r0, r0, r4, lsl #16
      a0:	1000081a 	andne	r0, r0, sl, lsl r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	9f310002 	svcls	0x00310002
        taskEXIT_CRITICAL();
      a8:	1000081a 	andne	r0, r0, sl, lsl r8
        vTaskSuspendAll();
      ac:	10000822 	andne	r0, r0, r2, lsr #16
        prvLockQueue( pxQueue );
      b0:	22500001 	subscs	r0, r0, #1
      b4:	25100008 	ldrcs	r0, [r0, #-8]
      b8:	01100008 	tsteq	r0, r8
      bc:	082c5100 	stmdaeq	ip!, {r8, ip, lr}
      c0:	082f1000 	stmdaeq	pc!, {ip}	; <UNPREDICTABLE>
      c4:	00011000 	andeq	r1, r1, r0
      c8:	00000050 	andeq	r0, r0, r0, asr r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00094000 	andeq	r4, r9, r0
      d4:	00094210 	andeq	r4, r9, r0, lsl r2
      d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00094200 	andeq	r4, r9, r0, lsl #4
      e0:	00096410 	andeq	r6, r9, r0, lsl r4
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      e8:	00000008 	andeq	r0, r0, r8
	...
                prvUnlockQueue( pxQueue );
      f4:	00094000 	andeq	r4, r9, r0
      f8:	00094610 	andeq	r4, r9, r0, lsl r6
                if( xTaskResumeAll() == pdFALSE )
      fc:	50000110 	andpl	r0, r0, r0, lsl r1
     100:	10000946 	andne	r0, r0, r6, asr #18
                    taskYIELD_WITHIN_API();
     104:	10000964 	andne	r0, r0, r4, ror #18
                    if( xInheritanceOccurred != pdFALSE )
     108:	01f30004 	mvnseq	r0, r4
                return errQUEUE_EMPTY;
     10c:	00009f50 	andeq	r9, r0, r0, asr pc
                        taskENTER_CRITICAL();
     110:	00000000 	andeq	r0, r0, r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00010000 	andeq	r0, r1, r0
     118:	09420000 	stmdbeq	r2, {}^	; <UNPREDICTABLE>
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	09461000 	stmdbeq	r6, {ip}^
                        taskEXIT_CRITICAL();
     120:	00021000 	andeq	r1, r2, r0
     124:	09469f30 	stmdbeq	r6, {r4, r5, r8, r9, sl, fp, ip, pc}^
     128:	09641000 	stmdbeq	r4!, {ip}^
     12c:	00011000 	andeq	r1, r1, r0
     130:	00000054 	andeq	r0, r0, r4, asr r0
     134:	00000000 	andeq	r0, r0, r0
     138:	00092800 	andeq	r2, r9, r0, lsl #16
     13c:	00092a10 	andeq	r2, r9, r0, lsl sl
     140:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     144:	00092a00 	andeq	r2, r9, r0, lsl #20
     148:	00094010 	andeq	r4, r9, r0, lsl r0
     14c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     150:	00000008 	andeq	r0, r0, r8
     154:	00000000 	andeq	r0, r0, r0
     158:	00091000 	andeq	r1, r9, r0
     15c:	00091210 	andeq	r1, r9, r0, lsl r2
     160:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     164:	00091200 	andeq	r1, r9, r0, lsl #4
     168:	00092810 	andeq	r2, r9, r0, lsl r8
     16c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     170:	00000008 	andeq	r0, r0, r8
     174:	00000000 	andeq	r0, r0, r0
     178:	0008f800 	andeq	pc, r8, r0, lsl #16
     17c:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
     180:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     184:	0008fa00 	andeq	pc, r8, r0, lsl #20
     188:	00091010 	andeq	r1, r9, r0, lsl r0
     18c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     190:	00000008 	andeq	r0, r0, r8
     194:	00000000 	andeq	r0, r0, r0
     198:	0008e000 	andeq	lr, r8, r0
     19c:	0008e210 	andeq	lr, r8, r0, lsl r2
     1a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1a4:	0008e200 	andeq	lr, r8, r0, lsl #4
     1a8:	0008f810 	andeq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     1ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1b0:	00000008 	andeq	r0, r0, r8
     1b4:	00000000 	andeq	r0, r0, r0
     1b8:	0008c800 	andeq	ip, r8, r0, lsl #16
     1bc:	0008ca10 	andeq	ip, r8, r0, lsl sl
     1c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1c4:	0008ca00 	andeq	ip, r8, r0, lsl #20
     1c8:	0008e010 	andeq	lr, r8, r0, lsl r0
     1cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1d0:	00000008 	andeq	r0, r0, r8
     1d4:	00000000 	andeq	r0, r0, r0
     1d8:	0008ac00 	andeq	sl, r8, r0, lsl #24
     1dc:	0008ae10 	andeq	sl, r8, r0, lsl lr
     1e0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1e4:	0008ae00 	andeq	sl, r8, r0, lsl #28
     1e8:	0008c810 	andeq	ip, r8, r0, lsl r8
     1ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1f0:	00000008 	andeq	r0, r0, r8
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	00084400 	andeq	r4, r8, r0, lsl #8
     1fc:	00084610 	andeq	r4, r8, r0, lsl r6
     200:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     204:	00084600 	andeq	r4, r8, r0, lsl #12
     208:	00084810 	andeq	r4, r8, r0, lsl r8
     20c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     210:	0008480c 	andeq	r4, r8, ip, lsl #16
     214:	00089a10 	andeq	r9, r8, r0, lsl sl
     218:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     21c:	089a0290 	ldmeq	sl, {r4, r7, r9}
     220:	08ac1000 	stmiaeq	ip!, {ip}
     224:	00021000 	andeq	r1, r2, r0
     228:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     238:	1000085a 	andne	r0, r0, sl, asr r8
     23c:	1000085d 	andne	r0, r0, sp, asr r8
     240:	5d500001 	ldclpl	0, cr0, [r0, #-4]
     244:	76100008 	ldrvc	r0, [r0], -r8
     248:	01100008 	tsteq	r0, r8
     24c:	08785400 	ldmdaeq	r8!, {sl, ip, lr}^
     250:	08821000 	stmeq	r2, {ip}
     254:	00011000 	andeq	r1, r1, r0
     258:	00000054 	andeq	r0, r0, r4, asr r0
	...
     264:	00086000 	andeq	r6, r8, r0
     268:	00086610 	andeq	r6, r8, r0, lsl r6
     26c:	50000110 	andpl	r0, r0, r0, lsl r1
     270:	10000866 	andne	r0, r0, r6, ror #16
     274:	10000869 	andne	r0, r0, r9, ror #16
     278:	00530001 	subseq	r0, r3, r1
	...
     288:	6a000000 	bvs	290 <__STACKSEAL_SIZE+0x290>
     28c:	70100008 	andsvc	r0, r0, r8
     290:	01100008 	tsteq	r0, r8
     294:	08705000 	ldmdaeq	r0!, {ip, lr}^
     298:	08781000 	ldmdaeq	r8!, {ip}^
     29c:	00011000 	andeq	r1, r1, r0
     2a0:	00087855 	andeq	r7, r8, r5, asr r8
     2a4:	00087c10 	andeq	r7, r8, r0, lsl ip
     2a8:	50000110 	andpl	r0, r0, r0, lsl r1
     2ac:	1000087c 	andne	r0, r0, ip, ror r8
     2b0:	1000089c 	mulne	r0, ip, r8
     2b4:	00550001 	subseq	r0, r5, r1
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	02000000 	andeq	r0, r0, #0
     2c0:	74000000 	strvc	r0, [r0], #-0
     2c4:	78100008 	ldmdavc	r0, {r3}
     2c8:	02100008 	andseq	r0, r0, #8
     2cc:	829f3000 	addshi	r3, pc, #0
     2d0:	98100008 	ldmdals	r0, {r3}
     2d4:	01100008 	tsteq	r0, r8
     2d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     2e8:	00020000 	andeq	r0, r2, r0
     2ec:	0000007d 	andeq	r0, r0, sp, ror r0
     2f0:	00000000 	andeq	r0, r0, r0
     2f4:	00020000 	andeq	r0, r2, r0
     2f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     308:	00020000 	andeq	r0, r2, r0
     30c:	0000007d 	andeq	r0, r0, sp, ror r0
     310:	00000000 	andeq	r0, r0, r0
     314:	00020000 	andeq	r0, r2, r0
     318:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     328:	00020000 	andeq	r0, r2, r0
     32c:	0000007d 	andeq	r0, r0, sp, ror r0
     330:	00000000 	andeq	r0, r0, r0
     334:	00020000 	andeq	r0, r2, r0
     338:	0000087d 	andeq	r0, r0, sp, ror r8
     33c:	00000000 	andeq	r0, r0, r0
     340:	00020000 	andeq	r0, r2, r0
     344:	00000c7d 	andeq	r0, r0, sp, ror ip
     348:	00000000 	andeq	r0, r0, r0
     34c:	00020000 	andeq	r0, r2, r0
     350:	0000287d 	andeq	r2, r0, sp, ror r8
     354:	00000000 	andeq	r0, r0, r0
     358:	00020000 	andeq	r0, r2, r0
     35c:	00000c7d 	andeq	r0, r0, sp, ror ip
     360:	00000000 	andeq	r0, r0, r0
     364:	00020000 	andeq	r0, r2, r0
     368:	0000087d 	andeq	r0, r0, sp, ror r8
     36c:	00000000 	andeq	r0, r0, r0
     370:	00020000 	andeq	r0, r2, r0
     374:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     38c:	00500001 	subseq	r0, r0, r1
     390:	00000000 	andeq	r0, r0, r0
     394:	02000000 	andeq	r0, r0, #0
     398:	00549100 	subseq	r9, r4, r0, lsl #2
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	04000000 	streq	r0, [r0], #-0
     3a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     3a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     3bc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     3c8:	01f30004 	mvnseq	r0, r4
     3cc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     3e0:	00500001 	subseq	r0, r0, r1
	...
     3f0:	02000000 	andeq	r0, r0, #0
     3f4:	00007d00 	andeq	r7, r0, r0, lsl #26
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	02000000 	andeq	r0, r0, #0
     400:	00047d00 	andeq	r7, r4, r0, lsl #26
     404:	00000000 	andeq	r0, r0, r0
     408:	02000000 	andeq	r0, r0, #0
     40c:	00107d00 	andseq	r7, r0, r0, lsl #26
     410:	00000000 	andeq	r0, r0, r0
     414:	02000000 	andeq	r0, r0, #0
     418:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     430:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     43c:	00510001 	subseq	r0, r1, r1
     440:	00000000 	andeq	r0, r0, r0
     444:	04000000 	streq	r0, [r0], #-0
     448:	5001f300 	andpl	pc, r1, r0, lsl #6
     44c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     460:	01000000 	mrseq	r0, (UNDEF: 0)
     464:	00005100 	andeq	r5, r0, r0, lsl #2
     468:	00000000 	andeq	r0, r0, r0
     46c:	00010000 	andeq	r0, r1, r0
     470:	00000052 	andeq	r0, r0, r2, asr r0
     474:	00000000 	andeq	r0, r0, r0
     478:	f3000400 	vshl.u8	d0, d0, d0
     47c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     494:	52000100 	andpl	r0, r0, #0, 2
	...
     4a0:	00530001 	subseq	r0, r3, r1
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	04000000 	streq	r0, [r0], #-0
     4ac:	5201f300 	andpl	pc, r1, #0, 6
     4b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     4c0:	01000000 	mrseq	r0, (UNDEF: 0)
     4c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     4d4:	00020000 	andeq	r0, r2, r0
     4d8:	0000007d 	andeq	r0, r0, sp, ror r0
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00020000 	andeq	r0, r2, r0
     4e4:	0000047d 	andeq	r0, r0, sp, ror r4
     4e8:	00000000 	andeq	r0, r0, r0
     4ec:	00020000 	andeq	r0, r2, r0
     4f0:	0000187d 	andeq	r1, r0, sp, ror r8
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	00020000 	andeq	r0, r2, r0
     4fc:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     514:	00500001 	subseq	r0, r0, r1
     518:	00000000 	andeq	r0, r0, r0
     51c:	01000000 	mrseq	r0, (UNDEF: 0)
     520:	00005300 	andeq	r5, r0, r0, lsl #6
     524:	00000000 	andeq	r0, r0, r0
     528:	00040000 	andeq	r0, r4, r0
     52c:	9f5001f3 	svcls	0x005001f3
	...
     540:	00010000 	andeq	r0, r1, r0
     544:	00000051 	andeq	r0, r0, r1, asr r0
	...
     554:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     564:	00000008 	andeq	r0, r0, r8
     568:	00000000 	andeq	r0, r0, r0
     56c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     570:	00000010 	andeq	r0, r0, r0, lsl r0
     574:	00000000 	andeq	r0, r0, r0
     578:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     57c:	00000020 	andeq	r0, r0, r0, lsr #32
     580:	00000000 	andeq	r0, r0, r0
     584:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     588:	00000010 	andeq	r0, r0, r0, lsl r0
     58c:	00000000 	andeq	r0, r0, r0
     590:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     594:	00000008 	andeq	r0, r0, r8
     598:	00000000 	andeq	r0, r0, r0
     59c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     5b4:	01000000 	mrseq	r0, (UNDEF: 0)
     5b8:	00005000 	andeq	r5, r0, r0
     5bc:	00000000 	andeq	r0, r0, r0
     5c0:	00010000 	andeq	r0, r1, r0
     5c4:	00000051 	andeq	r0, r0, r1, asr r0
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	f3000400 	vshl.u8	d0, d0, d0
     5d0:	009f5001 	addseq	r5, pc, r1
	...
     5e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     5f4:	00520001 	subseq	r0, r2, r1
     5f8:	00000000 	andeq	r0, r0, r0
     5fc:	04000000 	streq	r0, [r0], #-0
     600:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     604:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     614:	01000000 	mrseq	r0, (UNDEF: 0)
     618:	00005000 	andeq	r5, r0, r0
	...
     628:	00020000 	andeq	r0, r2, r0
     62c:	0000007d 	andeq	r0, r0, sp, ror r0
     630:	00000000 	andeq	r0, r0, r0
     634:	00020000 	andeq	r0, r2, r0
     638:	00000c7d 	andeq	r0, r0, sp, ror ip
     63c:	00000000 	andeq	r0, r0, r0
     640:	00020000 	andeq	r0, r2, r0
     644:	0000107d 	andeq	r1, r0, sp, ror r0
     648:	00000000 	andeq	r0, r0, r0
     64c:	00020000 	andeq	r0, r2, r0
     650:	0000207d 	andeq	r2, r0, sp, ror r0
     654:	00000000 	andeq	r0, r0, r0
     658:	00020000 	andeq	r0, r2, r0
     65c:	0000107d 	andeq	r1, r0, sp, ror r0
     660:	00000000 	andeq	r0, r0, r0
     664:	00020000 	andeq	r0, r2, r0
     668:	00000c7d 	andeq	r0, r0, sp, ror ip
     66c:	00000000 	andeq	r0, r0, r0
     670:	00020000 	andeq	r0, r2, r0
     674:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     68c:	00500001 	subseq	r0, r0, r1
     690:	00000000 	andeq	r0, r0, r0
     694:	01000000 	mrseq	r0, (UNDEF: 0)
     698:	00005100 	andeq	r5, r0, r0, lsl #2
     69c:	00000000 	andeq	r0, r0, r0
     6a0:	00040000 	andeq	r0, r4, r0
     6a4:	9f5001f3 	svcls	0x005001f3
	...
     6b8:	00010000 	andeq	r0, r1, r0
     6bc:	00000050 	andeq	r0, r0, r0, asr r0
     6c0:	00000000 	andeq	r0, r0, r0
     6c4:	001b1400 	andseq	r1, fp, r0, lsl #8
     6c8:	001b1610 	andseq	r1, fp, r0, lsl r6
     6cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6d0:	001b1600 	andseq	r1, fp, r0, lsl #12
     6d4:	001b1810 	andseq	r1, fp, r0, lsl r8
     6d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6dc:	001b1810 	andseq	r1, fp, r0, lsl r8
     6e0:	001b1a10 	andseq	r1, fp, r0, lsl sl
     6e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6e8:	001b1a14 	andseq	r1, fp, r4, lsl sl
     6ec:	001b3210 	andseq	r3, fp, r0, lsl r2
     6f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6f4:	001b3228 	andseq	r3, fp, r8, lsr #4
     6f8:	001b3610 	andseq	r3, fp, r0, lsl r6
     6fc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     700:	001b3614 	andseq	r3, fp, r4, lsl r6
     704:	001b3810 	andseq	r3, fp, r0, lsl r8
     708:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     70c:	001b3810 	andseq	r3, fp, r0, lsl r8
     710:	001b4010 	andseq	r4, fp, r0, lsl r0
     714:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
     720:	30000000 	andcc	r0, r0, r0
     724:	4010001b 	andsmi	r0, r0, fp, lsl r0
     728:	0110001b 	tsteq	r0, fp, lsl r0
     72c:	00005000 	andeq	r5, r0, r0
     730:	00000000 	andeq	r0, r0, r0
     734:	14880000 	strne	r0, [r8], #0
     738:	148c1000 	strne	r1, [ip], #0
     73c:	00021000 	andeq	r1, r2, r0
     740:	148c007d 	strne	r0, [ip], #125	; 0x7d
     744:	148e1000 	strne	r1, [lr], #0
     748:	00021000 	andeq	r1, r2, r0
     74c:	148e247d 	strne	r2, [lr], #1149	; 0x47d
     750:	1afe1000 	bne	fff84758 <__StackTop+0xc7e84758>
     754:	00031000 	andeq	r1, r3, r0
     758:	fe00e07d 	mcr2	0, 0, lr, cr0, cr13, {3}
     75c:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     760:	0210001b 	andseq	r0, r0, #27
     764:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
     774:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     778:	9c100014 	ldcls	0, cr0, [r0], {20}
     77c:	01100014 	tsteq	r0, r4, lsl r0
     780:	149e5000 	ldrne	r5, [lr], #0
     784:	1ae41000 	bne	ff90478c <__StackTop+0xc780478c>
     788:	00011000 	andeq	r1, r1, r0
     78c:	001ae457 	andseq	lr, sl, r7, asr r4
     790:	001ae810 	andseq	lr, sl, r0, lsl r8
     794:	50000110 	andpl	r0, r0, r0, lsl r1
     798:	10001ae8 	andne	r1, r0, r8, ror #21
     79c:	10001b02 	andne	r1, r0, r2, lsl #22
     7a0:	00570001 	subseq	r0, r7, r1
	...
     7b4:	00148800 	andseq	r8, r4, r0, lsl #16
     7b8:	00149e10 	andseq	r9, r4, r0, lsl lr
     7bc:	51000110 	tstpl	r0, r0, lsl r1
     7c0:	1000149e 	mulne	r0, lr, r4
     7c4:	10001ae4 	andne	r1, r0, r4, ror #21
     7c8:	e4580001 	ldrb	r0, [r8], #-1
     7cc:	e810001a 	ldmda	r0, {r1, r3, r4}
     7d0:	0110001a 	tsteq	r0, sl, lsl r0
     7d4:	1ae85100 	bne	ffa14bdc <__StackTop+0xc7914bdc>
     7d8:	1b021000 	blne	847e0 <__HEAP_SIZE+0x837e0>
     7dc:	00011000 	andeq	r1, r1, r0
     7e0:	001b0258 	andseq	r0, fp, r8, asr r2
     7e4:	001b0810 	andseq	r0, fp, r0, lsl r8
     7e8:	f3000410 	vqshl.u8	d0, d0, d0
     7ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     808:	00148800 	andseq	r8, r4, r0, lsl #16
     80c:	00149e10 	andseq	r9, r4, r0, lsl lr
     810:	52000110 	andpl	r0, r0, #16, 2
     814:	1000149e 	mulne	r0, lr, r4
     818:	10001a06 	andne	r1, r0, r6, lsl #20
     81c:	06560001 	ldrbeq	r0, [r6], -r1
     820:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     824:	0110001a 	tsteq	r0, sl, lsl r0
     828:	1a085b00 	bne	217430 <__RAM_SIZE+0x117430>
     82c:	1a321000 	bne	c84834 <__RAM_SIZE+0xb84834>
     830:	00011000 	andeq	r1, r1, r0
     834:	001a3256 	andseq	r3, sl, r6, asr r2
     838:	001a5c10 	andseq	r5, sl, r0, lsl ip
     83c:	5b000110 	blpl	c84 <__Vectors_Size+0x4c4>
     840:	10001a5c 	andne	r1, r0, ip, asr sl
     844:	10001ae4 	andne	r1, r0, r4, ror #21
     848:	e4560001 	ldrb	r0, [r6], #-1
     84c:	e810001a 	ldmda	r0, {r1, r3, r4}
     850:	0110001a 	tsteq	r0, sl, lsl r0
     854:	1ae85200 	bne	ffa1505c <__StackTop+0xc791505c>
     858:	1b021000 	blne	84860 <__HEAP_SIZE+0x83860>
     85c:	00011000 	andeq	r1, r1, r0
     860:	001b0256 	andseq	r0, fp, r6, asr r2
     864:	001b0810 	andseq	r0, fp, r0, lsl r8
     868:	f3000410 	vqshl.u8	d0, d0, d0
     86c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     878:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     87c:	9e100014 	mrcls	0, 0, r0, cr0, cr4, {0}
     880:	01100014 	tsteq	r0, r4, lsl r0
     884:	1ae45300 	bne	ff91548c <__StackTop+0xc781548c>
     888:	1ae81000 	bne	ffa04890 <__StackTop+0xc7904890>
     88c:	00011000 	andeq	r1, r1, r0
     890:	00000053 	andeq	r0, r0, r3, asr r0
     894:	00000000 	andeq	r0, r0, r0
     898:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     8b0:	0014c400 	andseq	ip, r4, r0, lsl #8
     8b4:	0014c610 	andseq	ip, r4, r0, lsl r6
     8b8:	30000210 	andcc	r0, r0, r0, lsl r2
     8bc:	0014c69f 	mulseq	r4, pc, r6	; <UNPREDICTABLE>
     8c0:	0015c410 	andseq	ip, r5, r0, lsl r4
     8c4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8c8:	100015c4 	andne	r1, r0, r4, asr #11
     8cc:	100015d6 	ldrdne	r1, [r0], -r6
     8d0:	d6510001 	ldrble	r0, [r1], -r1
     8d4:	e0100015 	ands	r0, r0, r5, lsl r0
     8d8:	01100015 	tsteq	r0, r5, lsl r0
     8dc:	15e05500 	strbne	r5, [r0, #1280]!	; 0x500
     8e0:	15f21000 	ldrbne	r1, [r2, #0]!
     8e4:	00011000 	andeq	r1, r1, r0
     8e8:	0015f251 	andseq	pc, r5, r1, asr r2	; <UNPREDICTABLE>
     8ec:	0017a010 	andseq	sl, r7, r0, lsl r0
     8f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8f4:	100017a8 	andne	r1, r0, r8, lsr #15
     8f8:	100017c4 	andne	r1, r0, r4, asr #15
     8fc:	c4550001 	ldrbgt	r0, [r5], #-1
     900:	e3100017 	tst	r0, #23
     904:	02100017 	andseq	r0, r0, #23
     908:	e8409100 	stmda	r0, {r8, ip, pc}^
     90c:	4c100017 	ldcmi	0, cr0, [r0], {23}
     910:	01100019 	tsteq	r0, r9, lsl r0
     914:	19ba5500 	ldmibne	sl!, {r8, sl, ip, lr}
     918:	1a141000 	bne	504920 <__RAM_SIZE+0x404920>
     91c:	00011000 	andeq	r1, r1, r0
     920:	001a8455 	andseq	r8, sl, r5, asr r4
     924:	001abc10 	andseq	fp, sl, r0, lsl ip
     928:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     92c:	10001ad0 	ldrdne	r1, [r0], -r0
     930:	10001ad2 	ldrdne	r1, [r0], -r2
     934:	00550001 	subseq	r0, r5, r1
     938:	00000000 	andeq	r0, r0, r0
     93c:	02000000 	andeq	r0, r0, #0
	...
     950:	00000202 	andeq	r0, r0, r2, lsl #4
     954:	0014e800 	andseq	lr, r4, r0, lsl #16
     958:	0014fa10 	andseq	pc, r4, r0, lsl sl	; <UNPREDICTABLE>
     95c:	30000210 	andcc	r0, r0, r0, lsl r2
     960:	0014fa9f 	mulseq	r4, pc, sl	; <UNPREDICTABLE>
     964:	00152710 	andseq	r2, r5, r0, lsl r7
     968:	91000210 	tstls	r0, r0, lsl r2
     96c:	00155a48 	andseq	r5, r5, r8, asr #20
     970:	00156210 	andseq	r6, r5, r0, lsl r2
     974:	30000210 	andcc	r0, r0, r0, lsl r2
     978:	0015629f 	mulseq	r5, pc, r2	; <UNPREDICTABLE>
     97c:	00156410 	andseq	r6, r5, r0, lsl r4
     980:	50000110 	andpl	r0, r0, r0, lsl r1
     984:	10001564 	andne	r1, r0, r4, ror #10
     988:	10001572 	andne	r1, r0, r2, ror r5
     98c:	9f300002 	svcls	0x00300002
     990:	10001572 	andne	r1, r0, r2, ror r5
     994:	1000157a 	andne	r1, r0, sl, ror r5
     998:	48910002 	ldmmi	r1, {r1}
     99c:	1000157a 	andne	r1, r0, sl, ror r5
     9a0:	10001582 	andne	r1, r0, r2, lsl #11
     9a4:	9f300002 	svcls	0x00300002
     9a8:	10001582 	andne	r1, r0, r2, lsl #11
     9ac:	10001584 	andne	r1, r0, r4, lsl #11
     9b0:	84530001 	ldrbhi	r0, [r3], #-1
     9b4:	84100015 	ldrhi	r0, [r0], #-21	; 0xffffffeb
     9b8:	0210001a 	andseq	r0, r0, #26
     9bc:	84489100 	strbhi	r9, [r8], #-256	; 0xffffff00
     9c0:	ba10001a 	blt	400a30 <__RAM_SIZE+0x300a30>
     9c4:	0210001a 	andseq	r0, r0, #26
     9c8:	ba9f3800 	blt	fe7ce9d0 <__StackTop+0xc66ce9d0>
     9cc:	e410001a 	ldr	r0, [r0], #-26	; 0xffffffe6
     9d0:	0210001a 	andseq	r0, r0, #26
     9d4:	00489100 	subeq	r9, r8, r0, lsl #2
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     9fc:	0014fa00 	andseq	pc, r4, r0, lsl #20
     a00:	00150610 	andseq	r0, r5, r0, lsl r6
     a04:	30000210 	andcc	r0, r0, r0, lsl r2
     a08:	0015069f 	mulseq	r5, pc, r6	; <UNPREDICTABLE>
     a0c:	00152710 	andseq	r2, r5, r0, lsl r7
     a10:	5b000110 	blpl	e58 <__Vectors_Size+0x698>
     a14:	10001584 	andne	r1, r0, r4, lsl #11
     a18:	100015aa 	andne	r1, r0, sl, lsr #11
     a1c:	9f300002 	svcls	0x00300002
     a20:	100015aa 	andne	r1, r0, sl, lsr #11
     a24:	100015ac 	andne	r1, r0, ip, lsr #11
     a28:	ac500001 	mrrcge	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     a2c:	b8100015 	ldmdalt	r0, {r0, r2, r4}
     a30:	02100015 	andseq	r0, r0, #21
     a34:	b89f3000 	ldmlt	pc, {ip, sp}	; <UNPREDICTABLE>
     a38:	52100015 	andspl	r0, r0, #21
     a3c:	01100019 	tsteq	r0, r9, lsl r0
     a40:	198e5b00 	stmibne	lr, {r8, r9, fp, ip, lr}
     a44:	19941000 	ldmibne	r4, {ip}
     a48:	00011000 	andeq	r1, r1, r0
     a4c:	0019ba5b 	andseq	fp, r9, fp, asr sl
     a50:	001a0410 	andseq	r0, sl, r0, lsl r4
     a54:	5b000110 	blpl	e9c <__Vectors_Size+0x6dc>
     a58:	10001a04 	andne	r1, r0, r4, lsl #20
     a5c:	10001a08 	andne	r1, r0, r8, lsl #20
     a60:	08540001 	ldmdaeq	r4, {r0}^
     a64:	3010001a 	andscc	r0, r0, sl, lsl r0
     a68:	0110001a 	tsteq	r0, sl, lsl r0
     a6c:	1a305b00 	bne	c17674 <__RAM_SIZE+0xb17674>
     a70:	1a341000 	bne	d04a78 <__RAM_SIZE+0xc04a78>
     a74:	00011000 	andeq	r1, r1, r0
     a78:	001a3454 	andseq	r3, sl, r4, asr r4
     a7c:	001a3610 	andseq	r3, sl, r0, lsl r6
     a80:	53000110 	movwpl	r0, #272	; 0x110
     a84:	10001a36 	andne	r1, r0, r6, lsr sl
     a88:	10001a50 	andne	r1, r0, r0, asr sl
     a8c:	50540001 	subspl	r0, r4, r1
     a90:	5410001a 	ldrpl	r0, [r0], #-26	; 0xffffffe6
     a94:	0110001a 	tsteq	r0, sl, lsl r0
     a98:	1a845300 	bne	fe1156a0 <__StackTop+0xc60156a0>
     a9c:	1ae41000 	bne	ff904aa4 <__StackTop+0xc7804aa4>
     aa0:	00011000 	andeq	r1, r1, r0
     aa4:	0000005b 	andeq	r0, r0, fp, asr r0
     aa8:	00000000 	andeq	r0, r0, r0
     aac:	01000000 	mrseq	r0, (UNDEF: 0)
     ab0:	01000100 	mrseq	r0, (UNDEF: 16)
     ab4:	01000100 	mrseq	r0, (UNDEF: 16)
     ab8:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
     abc:	27100014 			; <UNDEFINED> instruction: 0x27100014
     ac0:	02100015 	andseq	r0, r0, #21
     ac4:	309f3000 	addscc	r3, pc, r0
     ac8:	32100015 	andscc	r0, r0, #21
     acc:	02100015 	andseq	r0, r0, #21
     ad0:	3a9f3100 	bcc	fe7cced8 <__StackTop+0xc66cced8>
     ad4:	3c100015 	ldccc	0, cr0, [r0], {21}
     ad8:	02100015 	andseq	r0, r0, #21
     adc:	449f3100 	ldrmi	r3, [pc], #256	; ae4 <__Vectors_Size+0x324>
     ae0:	46100015 			; <UNDEFINED> instruction: 0x46100015
     ae4:	02100015 	andseq	r0, r0, #21
     ae8:	4e9f3100 	fmlmie	f3, f7, f0
     aec:	50100015 	andspl	r0, r0, r5, lsl r0
     af0:	02100015 	andseq	r0, r0, #21
     af4:	589f3100 	ldmpl	pc, {r8, ip, sp}	; <UNPREDICTABLE>
     af8:	5a100015 	bpl	400b54 <__RAM_SIZE+0x300b54>
     afc:	02100015 	andseq	r0, r0, #21
     b00:	5a9f3100 	bpl	fe7ccf08 <__StackTop+0xc66ccf08>
     b04:	e4100015 	ldr	r0, [r0], #-21	; 0xffffffeb
     b08:	0210001a 	andseq	r0, r0, #26
     b0c:	009f3000 	addseq	r3, pc, r0
     b10:	00000000 	andeq	r0, r0, r0
     b14:	02000000 	andeq	r0, r0, #0
	...
     b74:	94000000 	strls	r0, [r0], #-0
     b78:	9e100014 	mrcls	0, 0, r0, cr0, cr4, {0}
     b7c:	02100014 	andseq	r0, r0, #20
     b80:	9e9f3000 	cdpls	0, 9, cr3, cr15, cr0, {0}
     b84:	ae100014 	mrcge	0, 0, r0, cr0, cr4, {0}
     b88:	01100014 	tsteq	r0, r4, lsl r0
     b8c:	14ae5400 	strtne	r5, [lr], #1024	; 0x400
     b90:	14c01000 	strbne	r1, [r0], #0
     b94:	00011000 	andeq	r1, r1, r0
     b98:	0014c055 	andseq	ip, r4, r5, asr r0
     b9c:	00174a10 	andseq	r4, r7, r0, lsl sl
     ba0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ba4:	1000174a 	andne	r1, r0, sl, asr #14
     ba8:	1000174c 	andne	r1, r0, ip, asr #14
     bac:	4c500001 	mrrcmi	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     bb0:	a0100017 	andsge	r0, r0, r7, lsl r0
     bb4:	01100017 	tsteq	r0, r7, lsl r0
     bb8:	17a05400 	strne	r5, [r0, r0, lsl #8]!
     bbc:	17a81000 	strne	r1, [r8, r0]!
     bc0:	00011000 	andeq	r1, r1, r0
     bc4:	0017a850 	andseq	sl, r7, r0, asr r8
     bc8:	0017e610 	andseq	lr, r7, r0, lsl r6
     bcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bd0:	100017e6 	andne	r1, r0, r6, ror #15
     bd4:	100017e8 	andne	r1, r0, r8, ror #15
     bd8:	e8500001 	ldmda	r0, {r0}^
     bdc:	20100017 	andscs	r0, r0, r7, lsl r0
     be0:	01100018 	tsteq	r0, r8, lsl r0
     be4:	18205400 	stmdane	r0!, {sl, ip, lr}
     be8:	18221000 	stmdane	r2!, {ip}
     bec:	00011000 	andeq	r1, r1, r0
     bf0:	00182250 	andseq	r2, r8, r0, asr r2
     bf4:	00187410 	andseq	r7, r8, r0, lsl r4
     bf8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bfc:	10001874 	andne	r1, r0, r4, ror r8
     c00:	10001876 	andne	r1, r0, r6, ror r8
     c04:	76500001 	ldrbvc	r0, [r0], -r1
     c08:	9e100018 	mrcls	0, 0, r0, cr0, cr8, {0}
     c0c:	01100018 	tsteq	r0, r8, lsl r0
     c10:	189e5400 	ldmne	lr, {sl, ip, lr}
     c14:	18a01000 	stmiane	r0!, {ip}
     c18:	00011000 	andeq	r1, r1, r0
     c1c:	0018a050 	andseq	sl, r8, r0, asr r0
     c20:	0018ec10 	andseq	lr, r8, r0, lsl ip
     c24:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c28:	100018ec 	andne	r1, r0, ip, ror #17
     c2c:	100018f4 	strdne	r1, [r0], -r4
     c30:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
     c34:	40100018 	andsmi	r0, r0, r8, lsl r0
     c38:	01100019 	tsteq	r0, r9, lsl r0
     c3c:	19405400 	stmdbne	r0, {sl, ip, lr}^
     c40:	19481000 	stmdbne	r8, {ip}^
     c44:	00011000 	andeq	r1, r1, r0
     c48:	00194850 	andseq	r4, r9, r0, asr r8
     c4c:	00195c10 	andseq	r5, r9, r0, lsl ip
     c50:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c54:	1000195c 	andne	r1, r0, ip, asr r9
     c58:	10001972 	andne	r1, r0, r2, ror r9
     c5c:	725a0001 	subsvc	r0, sl, #1
     c60:	76100019 			; <UNDEFINED> instruction: 0x76100019
     c64:	01100019 	tsteq	r0, r9, lsl r0
     c68:	19765200 	ldmdbne	r6!, {r9, ip, lr}^
     c6c:	19821000 	stmibne	r2, {ip}
     c70:	00011000 	andeq	r1, r1, r0
     c74:	0019825a 	andseq	r8, r9, sl, asr r2
     c78:	00198e10 	andseq	r8, r9, r0, lsl lr
     c7c:	52000110 	andpl	r0, r0, #16, 2
     c80:	1000198e 	andne	r1, r0, lr, lsl #19
     c84:	10001998 	mulne	r0, r8, r9
     c88:	98540001 	ldmdals	r4, {r0}^
     c8c:	9e100019 	mrcls	0, 0, r0, cr0, cr9, {0}
     c90:	01100019 	tsteq	r0, r9, lsl r0
     c94:	199e5a00 	ldmibne	lr, {r9, fp, ip, lr}
     c98:	19a21000 	stmibne	r2!, {ip}
     c9c:	00011000 	andeq	r1, r1, r0
     ca0:	0019a252 	andseq	sl, r9, r2, asr r2
     ca4:	0019ae10 	andseq	sl, r9, r0, lsl lr
     ca8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     cac:	100019ae 	andne	r1, r0, lr, lsr #19
     cb0:	100019ba 			; <UNDEFINED> instruction: 0x100019ba
     cb4:	ba520001 	blt	1480cc0 <__RAM_SIZE+0x1380cc0>
     cb8:	02100019 	andseq	r0, r0, #25
     cbc:	0110001a 	tsteq	r0, sl, lsl r0
     cc0:	1a025400 	bne	95cc8 <__HEAP_SIZE+0x94cc8>
     cc4:	1a081000 	bne	204ccc <__RAM_SIZE+0x104ccc>
     cc8:	00011000 	andeq	r1, r1, r0
     ccc:	001a0852 	andseq	r0, sl, r2, asr r8
     cd0:	001a1010 	andseq	r1, sl, r0, lsl r0
     cd4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     cd8:	10001a10 	andne	r1, r0, r0, lsl sl
     cdc:	10001a18 	andne	r1, r0, r8, lsl sl
     ce0:	18520001 	ldmdane	r2, {r0}^
     ce4:	2410001a 	ldrcs	r0, [r0], #-26	; 0xffffffe6
     ce8:	0110001a 	tsteq	r0, sl, lsl r0
     cec:	1a245900 	bne	9170f4 <__RAM_SIZE+0x8170f4>
     cf0:	1a3c1000 	bne	f04cf8 <__RAM_SIZE+0xe04cf8>
     cf4:	00011000 	andeq	r1, r1, r0
     cf8:	001a3c52 	andseq	r3, sl, r2, asr ip
     cfc:	001a4410 	andseq	r4, sl, r0, lsl r4
     d00:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     d04:	10001a44 	andne	r1, r0, r4, asr #20
     d08:	10001a6c 	andne	r1, r0, ip, ror #20
     d0c:	6c520001 	mrrcvs	0, 0, r0, r2, cr1
     d10:	7810001a 	ldmdavc	r0, {r1, r3, r4}
     d14:	0110001a 	tsteq	r0, sl, lsl r0
     d18:	1a785500 	bne	1e16120 <__RAM_SIZE+0x1d16120>
     d1c:	1a841000 	bne	fe104d24 <__StackTop+0xc6004d24>
     d20:	00011000 	andeq	r1, r1, r0
     d24:	001a8452 	andseq	r8, sl, r2, asr r4
     d28:	001ab210 	andseq	fp, sl, r0, lsl r2
     d2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d30:	10001ab2 			; <UNDEFINED> instruction: 0x10001ab2
     d34:	10001aba 			; <UNDEFINED> instruction: 0x10001aba
     d38:	ba500001 	blt	1400d44 <__RAM_SIZE+0x1300d44>
     d3c:	bc10001a 	ldclt	0, cr0, [r0], {26}
     d40:	0110001a 	tsteq	r0, sl, lsl r0
     d44:	1abc5400 	bne	fef15d4c <__StackTop+0xc6e15d4c>
     d48:	1ad01000 	bne	ff404d50 <__StackTop+0xc7304d50>
     d4c:	00011000 	andeq	r1, r1, r0
     d50:	001ad055 	andseq	sp, sl, r5, asr r0
     d54:	001ad210 	andseq	sp, sl, r0, lsl r2
     d58:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d5c:	10001ad2 	ldrdne	r1, [r0], -r2
     d60:	10001ae4 	andne	r1, r0, r4, ror #21
     d64:	e4550001 	ldrb	r0, [r5], #-1
     d68:	e810001a 	ldmda	r0, {r1, r3, r4}
     d6c:	0210001a 	andseq	r0, r0, #26
     d70:	e89f3000 	ldm	pc, {ip, sp}	; <UNPREDICTABLE>
     d74:	0210001a 	andseq	r0, r0, #26
     d78:	0110001b 	tsteq	r0, fp, lsl r0
     d7c:	1b025400 	blne	95d84 <__HEAP_SIZE+0x94d84>
     d80:	1b081000 	blne	204d88 <__RAM_SIZE+0x104d88>
     d84:	00011000 	andeq	r1, r1, r0
     d88:	00000050 	andeq	r0, r0, r0, asr r0
     d8c:	00000000 	andeq	r0, r0, r0
     d90:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     dac:	0016de00 	andseq	sp, r6, r0, lsl #28
     db0:	0016e610 	andseq	lr, r6, r0, lsl r6
     db4:	3a000210 	bcc	15fc <__HEAP_SIZE+0x5fc>
     db8:	0016e89f 	mulseq	r6, pc, r8	; <UNPREDICTABLE>
     dbc:	00173810 	andseq	r3, r7, r0, lsl r8
     dc0:	53000110 	movwpl	r0, #272	; 0x110
     dc4:	10001738 	andne	r1, r0, r8, lsr r7
     dc8:	10001747 	andne	r1, r0, r7, asr #14
     dcc:	a8910003 	ldmge	r1, {r0, r1}
     dd0:	0017587f 	andseq	r5, r7, pc, ror r8
     dd4:	00179410 	andseq	r9, r7, r0, lsl r4
     dd8:	53000110 	movwpl	r0, #272	; 0x110
     ddc:	10001794 	mulne	r0, r4, r7
     de0:	1000179d 	mulne	r0, sp, r7
     de4:	a8910003 	ldmge	r1, {r0, r1}
     de8:	0017a87f 	andseq	sl, r7, pc, ror r8
     dec:	0017ce10 	andseq	ip, r7, r0, lsl lr
     df0:	53000110 	movwpl	r0, #272	; 0x110
     df4:	100017ce 	andne	r1, r0, lr, asr #15
     df8:	100017e3 	andne	r1, r0, r3, ror #15
     dfc:	b0910003 	addslt	r0, r1, r3
     e00:	0017e87f 	andseq	lr, r7, pc, ror r8
     e04:	00181410 	andseq	r1, r8, r0, lsl r4
     e08:	53000110 	movwpl	r0, #272	; 0x110
     e0c:	10001814 	andne	r1, r0, r4, lsl r8
     e10:	1000181d 	andne	r1, r0, sp, lsl r8
     e14:	a8910003 	ldmge	r1, {r0, r1}
     e18:	0018227f 	andseq	r2, r8, pc, ror r2
     e1c:	00186810 	andseq	r6, r8, r0, lsl r8
     e20:	53000110 	movwpl	r0, #272	; 0x110
     e24:	10001868 	andne	r1, r0, r8, ror #16
     e28:	10001871 	andne	r1, r0, r1, ror r8
     e2c:	b0910003 	addslt	r0, r1, r3
     e30:	0018767f 	andseq	r7, r8, pc, ror r6
     e34:	00188a10 	andseq	r8, r8, r0, lsl sl
     e38:	53000110 	movwpl	r0, #272	; 0x110
     e3c:	1000188a 	andne	r1, r0, sl, lsl #17
     e40:	1000189b 	mulne	r0, fp, r8
     e44:	a8910003 	ldmge	r1, {r0, r1}
     e48:	0018a07f 	andseq	sl, r8, pc, ror r0
     e4c:	0018ba10 	andseq	fp, r8, r0, lsl sl
     e50:	53000110 	movwpl	r0, #272	; 0x110
	...
     e5c:	17780000 	ldrbne	r0, [r8, -r0]!
     e60:	178e1000 	strne	r1, [lr, r0]
     e64:	00011000 	andeq	r1, r1, r0
     e68:	00000052 	andeq	r0, r0, r2, asr r0
	...
     e74:	00172a00 	andseq	r2, r7, r0, lsl #20
     e78:	00174010 	andseq	r4, r7, r0, lsl r0
     e7c:	52000110 	andpl	r0, r0, #16, 2
     e80:	10001740 	andne	r1, r0, r0, asr #14
     e84:	10001747 	andne	r1, r0, r7, asr #14
     e88:	007d0002 	rsbseq	r0, sp, r2
	...
     e94:	00000001 	andeq	r0, r0, r1
	...
     ea8:	10001948 	andne	r1, r0, r8, asr #18
     eac:	10001952 	andne	r1, r0, r2, asr r9
     eb0:	9f310002 	svcls	0x00310002
     eb4:	10001952 	andne	r1, r0, r2, asr r9
     eb8:	10001968 	andne	r1, r0, r8, ror #18
     ebc:	72590001 	subsvc	r0, r9, #1
     ec0:	82100019 	andshi	r0, r0, #25
     ec4:	01100019 	tsteq	r0, r9, lsl r0
     ec8:	19825900 	stmibne	r2, {r8, fp, ip, lr}
     ecc:	19861000 	stmibne	r6, {ip}
     ed0:	00011000 	andeq	r1, r1, r0
     ed4:	00198653 	andseq	r8, r9, r3, asr r6
     ed8:	00198e10 	andseq	r8, r9, r0, lsl lr
     edc:	59000110 	stmdbpl	r0, {r4, r8}
     ee0:	1000198e 	andne	r1, r0, lr, lsl #19
     ee4:	10001998 	mulne	r0, r8, r9
     ee8:	9f310002 	svcls	0x00310002
     eec:	10001998 	mulne	r0, r8, r9
     ef0:	100019a0 	andne	r1, r0, r0, lsr #19
     ef4:	a0590001 	subsge	r0, r9, r1
     ef8:	ae100019 	mrcge	0, 0, r0, cr0, cr9, {0}
     efc:	01100019 	tsteq	r0, r9, lsl r0
     f00:	19ae5400 	stmibne	lr!, {sl, ip, lr}
     f04:	19b21000 	ldmibne	r2!, {ip}
     f08:	00011000 	andeq	r1, r1, r0
     f0c:	0019b259 	andseq	fp, r9, r9, asr r2
     f10:	0019ba10 	andseq	fp, r9, r0, lsl sl
     f14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     f24:	10001a34 	andne	r1, r0, r4, lsr sl
     f28:	10001a5c 	andne	r1, r0, ip, asr sl
     f2c:	645a0001 	ldrbvs	r0, [sl], #-1
     f30:	6810001a 	ldmdavs	r0, {r1, r3, r4}
     f34:	0110001a 	tsteq	r0, sl, lsl r0
     f38:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     f58:	100019e8 	andne	r1, r0, r8, ror #19
     f5c:	10001a08 	andne	r1, r0, r8, lsl #20
     f60:	0c590001 	mrrceq	0, 0, r0, r9, cr1
     f64:	1410001a 	ldrne	r0, [r0], #-26	; 0xffffffe6
     f68:	0110001a 	tsteq	r0, sl, lsl r0
     f6c:	1a145900 	bne	517374 <__RAM_SIZE+0x417374>
     f70:	1a241000 	bne	904f78 <__RAM_SIZE+0x804f78>
     f74:	00011000 	andeq	r1, r1, r0
     f78:	001a2455 	andseq	r2, sl, r5, asr r4
     f7c:	001a2610 	andseq	r2, sl, r0, lsl r6
     f80:	53000110 	movwpl	r0, #272	; 0x110
     f84:	10001a26 	andne	r1, r0, r6, lsr #20
     f88:	10001a34 	andne	r1, r0, r4, lsr sl
     f8c:	34550001 	ldrbcc	r0, [r5], #-1
     f90:	5c10001a 	ldcpl	0, cr0, [r0], {26}
     f94:	0110001a 	tsteq	r0, sl, lsl r0
     f98:	1a645900 	bne	19173a0 <__RAM_SIZE+0x18173a0>
     f9c:	1a6a1000 	bne	1a84fa4 <__RAM_SIZE+0x1984fa4>
     fa0:	00011000 	andeq	r1, r1, r0
     fa4:	001a6a59 	andseq	r6, sl, r9, asr sl
     fa8:	001a7810 	andseq	r7, sl, r0, lsl r8
     fac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     fb0:	10001a78 	andne	r1, r0, r8, ror sl
     fb4:	10001a7c 	andne	r1, r0, ip, ror sl
     fb8:	7c590001 	mrrcvc	0, 0, r0, r9, cr1
     fbc:	8210001a 	andshi	r0, r0, #26
     fc0:	0110001a 	tsteq	r0, sl, lsl r0
     fc4:	1a825400 	bne	fe095fcc <__StackTop+0xc5f95fcc>
     fc8:	1a841000 	bne	fe104fd0 <__StackTop+0xc6004fd0>
     fcc:	00031000 	andeq	r1, r3, r0
     fd0:	009f0179 	addseq	r0, pc, r9, ror r1	; <UNPREDICTABLE>
	...
     fe0:	0019d200 	andseq	sp, r9, r0, lsl #4
     fe4:	0019d810 	andseq	sp, r9, r0, lsl r8
     fe8:	52000110 	andpl	r0, r0, #16, 2
     fec:	100019d8 	ldrdne	r1, [r0], -r8
     ff0:	100019e0 	andne	r1, r0, r0, ror #19
     ff4:	e0530001 	subs	r0, r3, r1
     ff8:	e4100019 	ldr	r0, [r0], #-25	; 0xffffffe7
     ffc:	01100019 	tsteq	r0, r9, lsl r0
    1000:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    100c:	100019d2 	ldrdne	r1, [r0], -r2
    1010:	100019e8 	andne	r1, r0, r8, ror #19
    1014:	00590001 	subseq	r0, r9, r1
    1018:	00000000 	andeq	r0, r0, r0
    101c:	01000000 	mrseq	r0, (UNDEF: 0)
    1020:	001a8800 	andseq	r8, sl, r0, lsl #16
    1024:	001aba10 	andseq	fp, sl, r0, lsl sl
    1028:	30000210 	andcc	r0, r0, r0, lsl r2
    102c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1030:	00000000 	andeq	r0, r0, r0
    1034:	e8000300 	stmda	r0, {r8, r9}
    1038:	ee100014 	mrc	0, 0, r0, cr0, cr4, {0}
    103c:	01100014 	tsteq	r0, r4, lsl r0
    1040:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    104c:	1000158e 	andne	r1, r0, lr, lsl #11
    1050:	10001594 	mulne	r0, r4, r5
    1054:	00520001 	subseq	r0, r2, r1
	...
    1060:	0410000d 	ldreq	r0, [r0], #-13
    1064:	0210000d 	andseq	r0, r0, #13
    1068:	04007d00 	streq	r7, [r0], #-3328	; 0xfffff300
    106c:	0810000d 	ldmdaeq	r0, {r0, r2, r3}
    1070:	0210000d 	andseq	r0, r0, #13
    1074:	08247d00 	stmdaeq	r4!, {r8, sl, fp, ip, sp, lr}
    1078:	0a10000d 	beq	4010b4 <__RAM_SIZE+0x3010b4>
    107c:	0210000d 	andseq	r0, r0, #13
    1080:	0a2c7d00 	beq	b20488 <__RAM_SIZE+0xa20488>
    1084:	5410000d 	ldrpl	r0, [r0], #-13
    1088:	0310000f 	tsteq	r0, #15
    108c:	00f07d00 	rscseq	r7, r0, r0, lsl #26
    1090:	10000f54 	andne	r0, r0, r4, asr pc
    1094:	10000f58 	andne	r0, r0, r8, asr pc
    1098:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    109c:	10000f58 	andne	r0, r0, r8, asr pc
    10a0:	10000f5c 	andne	r0, r0, ip, asr pc
    10a4:	247d0002 	ldrbtcs	r0, [sp], #-2
    10a8:	10000f5c 	andne	r0, r0, ip, asr pc
    10ac:	100010ea 	andne	r1, r0, sl, ror #1
    10b0:	f07d0003 			; <UNDEFINED> instruction: 0xf07d0003
	...
    10c0:	000d0000 	andeq	r0, sp, r0
    10c4:	000d1810 	andeq	r1, sp, r0, lsl r8
    10c8:	50000110 	andpl	r0, r0, r0, lsl r1
    10cc:	10000d18 	andne	r0, r0, r8, lsl sp
    10d0:	100010ea 	andne	r1, r0, sl, ror #1
    10d4:	005a0001 	subseq	r0, sl, r1
	...
    10e4:	1a10000d 	bne	401120 <__RAM_SIZE+0x301120>
    10e8:	0110000d 	tsteq	r0, sp
    10ec:	0d1a5100 	ldfeqs	f5, [sl, #-0]
    10f0:	10ea1000 	rscne	r1, sl, r0
    10f4:	00011000 	andeq	r1, r1, r0
    10f8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1118:	1610000d 	ldrne	r0, [r0], -sp
    111c:	0110000d 	tsteq	r0, sp
    1120:	0d165200 	lfmeq	f5, 4, [r6, #-0]
    1124:	0f521000 	svceq	0x00521000
    1128:	00011000 	andeq	r1, r1, r0
    112c:	000f5c5b 	andeq	r5, pc, fp, asr ip	; <UNPREDICTABLE>
    1130:	00106410 	andseq	r6, r0, r0, lsl r4
    1134:	5b000110 	blpl	157c <__HEAP_SIZE+0x57c>
    1138:	10001064 	andne	r1, r0, r4, rrx
    113c:	1000107a 	andne	r1, r0, sl, ror r0
    1140:	7a500001 	bvc	140114c <__RAM_SIZE+0x130114c>
    1144:	ae100010 	mrcge	0, 0, r0, cr0, cr0, {0}
    1148:	01100010 	tsteq	r0, r0, lsl r0
    114c:	10ae5800 	adcne	r5, lr, r0, lsl #16
    1150:	10bc1000 	adcsne	r1, ip, r0
    1154:	00011000 	andeq	r1, r1, r0
    1158:	0010bc50 	andseq	fp, r0, r0, asr ip
    115c:	0010cc10 	andseq	ip, r0, r0, lsl ip
    1160:	5b000110 	blpl	15a8 <__HEAP_SIZE+0x5a8>
    1164:	100010cc 	andne	r1, r0, ip, asr #1
    1168:	100010d2 	ldrdne	r1, [r0], -r2
    116c:	d2500001 	subsle	r0, r0, #1
    1170:	d4100010 	ldrle	r0, [r0], #-16
    1174:	01100010 	tsteq	r0, r0, lsl r0
    1178:	10d45200 	sbcsne	r5, r4, r0, lsl #4
    117c:	10de1000 	sbcsne	r1, lr, r0
    1180:	00011000 	andeq	r1, r1, r0
    1184:	0010de56 	andseq	sp, r0, r6, asr lr
    1188:	0010ea10 	andseq	lr, r0, r0, lsl sl
    118c:	52000110 	andpl	r0, r0, #16, 2
	...
    119c:	10000d00 	andne	r0, r0, r0, lsl #26
    11a0:	10000d1d 	andne	r0, r0, sp, lsl sp
    11a4:	1d530001 	ldclne	0, cr0, [r3, #-4]
    11a8:	ea10000d 	b	4011e4 <__RAM_SIZE+0x3011e4>
    11ac:	01100010 	tsteq	r0, r0, lsl r0
    11b0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    11c4:	0d000000 	stceq	0, cr0, [r0, #-0]
    11c8:	0d681000 	stcleq	0, cr1, [r8, #-0]
    11cc:	00021000 	andeq	r1, r2, r0
    11d0:	0d680091 	stcleq	0, cr0, [r8, #-580]!	; 0xfffffdbc
    11d4:	0f321000 	svceq	0x00321000
    11d8:	00031000 	andeq	r1, r3, r0
    11dc:	327fa891 	rsbscc	sl, pc, #9502720	; 0x910000
    11e0:	5210000f 	andspl	r0, r0, #15
    11e4:	0210000f 	andseq	r0, r0, #15
    11e8:	5c009100 	stfpld	f1, [r0], {-0}
    11ec:	7010000f 	andsvc	r0, r0, pc
    11f0:	0210000f 	andseq	r0, r0, #15
    11f4:	70009100 	andvc	r9, r0, r0, lsl #2
    11f8:	4010000f 	andsmi	r0, r0, pc
    11fc:	03100010 	tsteq	r0, #16
    1200:	7fa89100 	svcvc	0x00a89100
    1204:	100010bc 	strhne	r1, [r0], -ip
    1208:	100010ca 	andne	r1, r0, sl, asr #1
    120c:	a8910003 	ldmge	r1, {r0, r1}
    1210:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1224:	000d0000 	andeq	r0, sp, r0
    1228:	000d7610 	andeq	r7, sp, r0, lsl r6
    122c:	91000210 	tstls	r0, r0, lsl r2
    1230:	000d7608 	andeq	r7, sp, r8, lsl #12
    1234:	000f3010 	andeq	r3, pc, r0, lsl r0	; <UNPREDICTABLE>
    1238:	91000210 	tstls	r0, r0, lsl r2
    123c:	000f3008 	andeq	r3, pc, r8
    1240:	000f3210 	andeq	r3, pc, r0, lsl r2	; <UNPREDICTABLE>
    1244:	53000110 	movwpl	r0, #272	; 0x110
    1248:	10000f32 	andne	r0, r0, r2, lsr pc
    124c:	10000fa4 	andne	r0, r0, r4, lsr #31
    1250:	08910002 	ldmeq	r1, {r1}
    1254:	10000fa4 	andne	r0, r0, r4, lsr #31
    1258:	1000100c 	andne	r1, r0, ip
    125c:	0c530001 	mrrceq	0, 0, r0, r3, cr1
    1260:	ea100010 	b	4012a8 <__RAM_SIZE+0x3012a8>
    1264:	02100010 	andseq	r0, r0, #16
    1268:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    1278:	5c10000d 	ldcpl	0, cr0, [r0], {13}
    127c:	0210000f 	andseq	r0, r0, #15
    1280:	5c0c9100 	stfpld	f1, [ip], {-0}
    1284:	ea10000f 	b	4012c8 <__RAM_SIZE+0x3012c8>
    1288:	02100010 	andseq	r0, r0, #16
    128c:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    12a0:	5c10000d 	ldcpl	0, cr0, [r0], {13}
    12a4:	0210000f 	andseq	r0, r0, #15
    12a8:	5c109100 	ldfpld	f1, [r0], {-0}
    12ac:	8210000f 	andshi	r0, r0, #15
    12b0:	0210000f 	andseq	r0, r0, #15
    12b4:	82109100 	andshi	r9, r0, #0, 2
    12b8:	8610000f 	ldrhi	r0, [r0], -pc
    12bc:	0110000f 	tsteq	r0, pc
    12c0:	0f865300 	svceq	0x00865300
    12c4:	10ea1000 	rscne	r1, sl, r0
    12c8:	00021000 	andeq	r1, r2, r0
    12cc:	00001091 	muleq	r0, r1, r0
    12d0:	00000000 	andeq	r0, r0, r0
    12d4:	00010000 	andeq	r0, r1, r0
    12d8:	0d4e0000 	stcleq	0, cr0, [lr, #-0]
    12dc:	0f321000 	svceq	0x00321000
    12e0:	00121000 	andseq	r1, r2, r0
    12e4:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    12e8:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    12f4:	0f5c9f2d 	svceq	0x005c9f2d
    12f8:	10ea1000 	rscne	r1, sl, r0
    12fc:	00121000 	andseq	r1, r2, r0
    1300:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1304:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    1310:	00009f2d 	andeq	r9, r0, sp, lsr #30
	...
    131c:	0f520001 	svceq	0x00520001
    1320:	0f581000 	svceq	0x00581000
    1324:	00081000 	andeq	r1, r8, r0
    1328:	04935090 	ldreq	r5, [r3], #144	; 0x90
    132c:	04935190 	ldreq	r5, [r3], #400	; 0x190
    1330:	10001020 	andne	r1, r0, r0, lsr #32
    1334:	100010ea 	andne	r1, r0, sl, ror #1
    1338:	50900008 	addspl	r0, r0, r8
    133c:	51900493 			; <UNDEFINED> instruction: 0x51900493
    1340:	00000493 	muleq	r0, r3, r4
	...
    1354:	0d800000 	stceq	0, cr0, [r0]
    1358:	0d921000 	ldceq	0, cr1, [r2]
    135c:	00041000 	andeq	r1, r4, r0
    1360:	9f788170 	svcls	0x00788170
    1364:	10000d92 	mulne	r0, r2, sp
    1368:	10000d95 	mulne	r0, r5, sp
    136c:	f6500001 			; <UNDEFINED> instruction: 0xf6500001
    1370:	fe10000d 	cdp2	0, 1, cr0, cr0, cr13, {0}
    1374:	0110000d 	tsteq	r0, sp
    1378:	0dfe5000 	ldcleq	0, cr5, [lr]
    137c:	0e381000 	cdpeq	0, 3, cr1, cr8, cr0, {0}
    1380:	00011000 	andeq	r1, r1, r0
    1384:	000e3857 	andeq	r3, lr, r7, asr r8
    1388:	000ef410 	andeq	pc, lr, r0, lsl r4	; <UNPREDICTABLE>
    138c:	77000410 	smladvc	r0, r0, r4, r0
    1390:	729f7881 	addsvc	r7, pc, #8454144	; 0x810000
    1394:	7410000f 	ldrvc	r0, [r0], #-15
    1398:	0410000f 	ldreq	r0, [r0], #-15
    139c:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    13a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    13ac:	02000000 	andeq	r0, r0, #0
    13b0:	d6000000 	strle	r0, [r0], -r0
    13b4:	d910000d 	ldmdble	r0, {r0, r2, r3}
    13b8:	0110000d 	tsteq	r0, sp
    13bc:	0dd95000 	ldcleq	0, cr5, [r9]
    13c0:	0f2c1000 	svceq	0x002c1000
    13c4:	00011000 	andeq	r1, r1, r0
    13c8:	000f7256 	andeq	r7, pc, r6, asr r2	; <UNPREDICTABLE>
    13cc:	000f7a10 	andeq	r7, pc, r0, lsl sl	; <UNPREDICTABLE>
    13d0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    13d4:	10000f82 	andne	r0, r0, r2, lsl #31
    13d8:	10000f86 	andne	r0, r0, r6, lsl #31
    13dc:	9f300002 	svcls	0x00300002
    13e0:	10000f86 	andne	r0, r0, r6, lsl #31
    13e4:	100010d2 	ldrdne	r1, [r0], -r2
    13e8:	00560001 	subseq	r0, r6, r1
	...
    13f4:	000e2800 	andeq	r2, lr, r0, lsl #16
    13f8:	000e6810 	andeq	r6, lr, r0, lsl r8
    13fc:	58000610 	stmdapl	r0, {r4, r9, sl}
    1400:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1404:	00000004 	andeq	r0, r0, r4
	...
    1410:	34000000 	strcc	r0, [r0], #-0
    1414:	4e10000e 	cdpmi	0, 1, cr0, cr0, cr14, {0}
    1418:	0610000e 	ldreq	r0, [r0], -lr
    141c:	04935000 	ldreq	r5, [r3], #0
    1420:	4e049351 	mcrmi	3, 0, r9, cr4, cr1, {2}
    1424:	3210000e 	andscc	r0, r0, #14
    1428:	0310000f 	tsteq	r0, #15
    142c:	7fb89100 	svcvc	0x00b89100
    1430:	10000f72 	andne	r0, r0, r2, ror pc
    1434:	100010ea 	andne	r1, r0, sl, ror #1
    1438:	b8910003 	ldmlt	r1, {r0, r1}
    143c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1448:	00000101 	andeq	r0, r0, r1, lsl #2
    144c:	00000000 	andeq	r0, r0, r0
    1450:	000ef400 	andeq	pc, lr, r0, lsl #8
    1454:	000f3210 	andeq	r3, pc, r0, lsl r2	; <UNPREDICTABLE>
    1458:	57000110 	smladpl	r0, r0, r1, r0
    145c:	10000f76 	andne	r0, r0, r6, ror pc
    1460:	10000f82 	andne	r0, r0, r2, lsl #31
    1464:	82570001 	subshi	r0, r7, #1
    1468:	8610000f 	ldrhi	r0, [r0], -pc
    146c:	0210000f 	andseq	r0, r0, #15
    1470:	869f3000 	ldrhi	r3, [pc], r0
    1474:	9210000f 	andsls	r0, r0, #15
    1478:	01100010 	tsteq	r0, r0, lsl r0
    147c:	10925700 	addsne	r5, r2, r0, lsl #14
    1480:	10ba1000 	adcsne	r1, sl, r0
    1484:	00031000 	andeq	r1, r3, r0
    1488:	bc9f0177 	ldflts	f0, [pc], {119}	; 0x77
    148c:	d2100010 	andsle	r0, r0, #16
    1490:	01100010 	tsteq	r0, r0, lsl r0
    1494:	00005700 	andeq	r5, r0, r0, lsl #14
    1498:	00000000 	andeq	r0, r0, r0
    149c:	00010000 	andeq	r0, r1, r0
	...
    14a8:	10000f86 	andne	r0, r0, r6, lsl #31
    14ac:	10000f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    14b0:	0c910002 	ldceq	0, cr0, [r1], {2}
    14b4:	10000f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    14b8:	10000f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
    14bc:	0c580001 	mrrceq	0, 0, r0, r8, cr1
    14c0:	10100010 	andsne	r0, r0, r0, lsl r0
    14c4:	01100010 	tsteq	r0, r0, lsl r0
    14c8:	10105300 	andsne	r5, r0, r0, lsl #6
    14cc:	107a1000 	rsbsne	r1, sl, r0
    14d0:	00011000 	andeq	r1, r1, r0
    14d4:	0010bc58 	andseq	fp, r0, r8, asr ip
    14d8:	0010d210 	andseq	sp, r0, r0, lsl r2
    14dc:	58000110 	stmdapl	r0, {r4, r8}
	...
    14e8:	10300001 	eorsne	r0, r0, r1
    14ec:	10ea1000 	rscne	r1, sl, r0
    14f0:	00011000 	andeq	r1, r1, r0
    14f4:	0000005b 	andeq	r0, r0, fp, asr r0
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	0010f000 	andseq	pc, r0, r0
    1500:	0010f410 	andseq	pc, r0, r0, lsl r4	; <UNPREDICTABLE>
    1504:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1508:	0010f400 	andseq	pc, r0, r0, lsl #8
    150c:	0010f810 	andseq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
    1510:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1514:	0010f824 	andseq	pc, r0, r4, lsr #16
    1518:	0010fa10 	andseq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    151c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1520:	0010fa2c 	andseq	pc, r0, ip, lsr #20
    1524:	00141410 	andseq	r1, r4, r0, lsl r4
    1528:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    152c:	14140180 	ldrne	r0, [r4], #-384	; 0xfffffe80
    1530:	14181000 	ldrne	r1, [r8], #-0
    1534:	00021000 	andeq	r1, r2, r0
    1538:	14182c7d 	ldrne	r2, [r8], #-3197	; 0xfffff383
    153c:	141c1000 	ldrne	r1, [ip], #-0
    1540:	00021000 	andeq	r1, r2, r0
    1544:	141c247d 	ldrne	r2, [ip], #-1149	; 0xfffffb83
    1548:	14861000 	strne	r1, [r6], #0
    154c:	00031000 	andeq	r1, r3, r0
    1550:	0001807d 	andeq	r8, r1, sp, ror r0
	...
    155c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    1560:	0e100010 	mrceq	0, 0, r0, cr0, cr0, {0}
    1564:	01100011 	tsteq	r0, r1, lsl r0
    1568:	110e5000 	mrsne	r5, (UNDEF: 14)
    156c:	14861000 	strne	r1, [r6], #0
    1570:	00031000 	andeq	r1, r3, r0
    1574:	007f9c91 			; <UNDEFINED> instruction: 0x007f9c91
	...
    1580:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    1584:	10100010 	andsne	r0, r0, r0, lsl r0
    1588:	01100011 	tsteq	r0, r1, lsl r0
    158c:	11105100 	tstne	r0, r0, lsl #2
    1590:	14861000 	strne	r1, [r6], #0
    1594:	00031000 	andeq	r1, r3, r0
    1598:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    15a4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    15a8:	0a100010 	beq	4015f0 <__RAM_SIZE+0x3015f0>
    15ac:	01100011 	tsteq	r0, r1, lsl r0
    15b0:	110a5200 	mrsne	r5, R10_fiq
    15b4:	14861000 	strne	r1, [r6], #0
    15b8:	00011000 	andeq	r1, r1, r0
    15bc:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    15c8:	0010f000 	andseq	pc, r0, r0
    15cc:	00110c10 	andseq	r0, r1, r0, lsl ip
    15d0:	53000110 	movwpl	r0, #272	; 0x110
    15d4:	1000110c 	andne	r1, r0, ip, lsl #2
    15d8:	10001486 	andne	r1, r0, r6, lsl #9
    15dc:	005b0001 	subseq	r0, fp, r1
	...
    15f0:	0010f000 	andseq	pc, r0, r0
    15f4:	00117610 	andseq	r7, r1, r0, lsl r6
    15f8:	91000210 	tstls	r0, r0, lsl r2
    15fc:	00117600 	andseq	r7, r1, r0, lsl #12
    1600:	00119a10 	andseq	r9, r1, r0, lsl sl
    1604:	58000610 	stmdapl	r0, {r4, r9, sl}
    1608:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    160c:	00119a04 	andseq	r9, r1, r4, lsl #20
    1610:	00123210 	andseq	r3, r2, r0, lsl r2
    1614:	91000210 	tstls	r0, r0, lsl r2
    1618:	00123200 	andseq	r3, r2, r0, lsl #4
    161c:	0012ca10 	andseq	ip, r2, r0, lsl sl
    1620:	58000610 	stmdapl	r0, {r4, r9, sl}
    1624:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1628:	0012ee04 	andseq	lr, r2, r4, lsl #28
    162c:	00136a10 	andseq	r6, r3, r0, lsl sl
    1630:	58000610 	stmdapl	r0, {r4, r9, sl}
    1634:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1638:	00000004 	andeq	r0, r0, r4
	...
    1648:	0010f000 	andseq	pc, r0, r0
    164c:	00117e10 	andseq	r7, r1, r0, lsl lr
    1650:	91000210 	tstls	r0, r0, lsl r2
    1654:	00118008 	andseq	r8, r1, r8
    1658:	00119a10 	andseq	r9, r1, r0, lsl sl
    165c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1660:	1000119a 	mulne	r0, sl, r1
    1664:	1000123c 	andne	r1, r0, ip, lsr r2
    1668:	08910002 	ldmeq	r1, {r1}
    166c:	1000123c 	andne	r1, r0, ip, lsr r2
    1670:	1000130a 	andne	r1, r0, sl, lsl #6
    1674:	00550001 	subseq	r0, r5, r1
	...
    1688:	0010f000 	andseq	pc, r0, r0
    168c:	0013e010 	andseq	lr, r3, r0, lsl r0
    1690:	91000210 	tstls	r0, r0, lsl r2
    1694:	0013e00c 	andseq	lr, r3, ip
    1698:	00143210 	andseq	r3, r4, r0, lsl r2
    169c:	91000210 	tstls	r0, r0, lsl r2
    16a0:	0014320c 	andseq	r3, r4, ip, lsl #4
    16a4:	00143610 	andseq	r3, r4, r0, lsl r6
    16a8:	53000110 	movwpl	r0, #272	; 0x110
    16ac:	10001436 	andne	r1, r0, r6, lsr r4
    16b0:	1000144e 	andne	r1, r0, lr, asr #8
    16b4:	4e510001 	cdpmi	0, 5, cr0, cr1, cr1, {0}
    16b8:	86100014 			; <UNDEFINED> instruction: 0x86100014
    16bc:	02100014 	andseq	r0, r0, #20
    16c0:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    16cc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    16d0:	1c100010 	ldcne	0, cr0, [r0], {16}
    16d4:	02100014 	andseq	r0, r0, #20
    16d8:	1c109100 	ldfned	f1, [r0], {-0}
    16dc:	86100014 			; <UNDEFINED> instruction: 0x86100014
    16e0:	02100014 	andseq	r0, r0, #20
    16e4:	00109100 	andseq	r9, r0, r0, lsl #2
    16e8:	00000000 	andeq	r0, r0, r0
    16ec:	02000000 	andeq	r0, r0, #0
    16f0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    16fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1700:	01010000 	mrseq	r0, (UNDEF: 1)
    1704:	00000000 	andeq	r0, r0, r0
    1708:	01010000 	mrseq	r0, (UNDEF: 1)
    170c:	00000000 	andeq	r0, r0, r0
    1710:	00000101 	andeq	r0, r0, r1, lsl #2
    1714:	00000101 	andeq	r0, r0, r1, lsl #2
    1718:	00000101 	andeq	r0, r0, r1, lsl #2
    171c:	00110800 	andseq	r0, r1, r0, lsl #16
    1720:	00118010 	andseq	r8, r1, r0, lsl r0
    1724:	30000210 	andcc	r0, r0, r0, lsl r2
    1728:	0011809f 	mulseq	r1, pc, r0	; <UNPREDICTABLE>
    172c:	00118810 	andseq	r8, r1, r0, lsl r8
    1730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1734:	10001188 	andne	r1, r0, r8, lsl #3
    1738:	10001198 	mulne	r0, r8, r1
    173c:	01740003 	cmneq	r4, r3
    1740:	0011989f 	mulseq	r1, pc, r8	; <UNPREDICTABLE>
    1744:	00119a10 	andseq	r9, r1, r0, lsl sl
    1748:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    174c:	1000119a 	mulne	r0, sl, r1
    1750:	1000123c 	andne	r1, r0, ip, lsr r2
    1754:	9f300002 	svcls	0x00300002
    1758:	1000123c 	andne	r1, r0, ip, lsr r2
    175c:	10001324 	andne	r1, r0, r4, lsr #6
    1760:	24540001 	ldrbcs	r0, [r4], #-1
    1764:	3e100013 	mrccc	0, 0, r0, cr0, cr3, {0}
    1768:	01100013 	tsteq	r0, r3, lsl r0
    176c:	133e5200 	teqne	lr, #0, 4
    1770:	13461000 	movtne	r1, #24576	; 0x6000
    1774:	00011000 	andeq	r1, r1, r0
    1778:	00134654 	andseq	r4, r3, r4, asr r6
    177c:	00135610 	andseq	r5, r3, r0, lsl r6
    1780:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1784:	13569f01 	cmpne	r6, #1, 30
    1788:	135c1000 	cmpne	ip, #0
    178c:	00011000 	andeq	r1, r1, r0
    1790:	00135c54 	andseq	r5, r3, r4, asr ip
    1794:	00136a10 	andseq	r6, r3, r0, lsl sl
    1798:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    179c:	136a9f01 	cmnne	sl, #1, 30
    17a0:	13861000 	orrne	r1, r6, #0
    17a4:	00011000 	andeq	r1, r1, r0
    17a8:	00138654 	andseq	r8, r3, r4, asr r6
    17ac:	0013d610 	andseq	sp, r3, r0, lsl r6
    17b0:	51000110 	tstpl	r0, r0, lsl r1
    17b4:	100013d6 	ldrdne	r1, [r0], -r6
    17b8:	100013ea 	andne	r1, r0, sl, ror #7
    17bc:	ea540001 	b	15017c8 <__RAM_SIZE+0x14017c8>
    17c0:	f8100013 			; <UNDEFINED> instruction: 0xf8100013
    17c4:	03100013 	tsteq	r0, #19
    17c8:	9f017400 	svcls	0x00017400
    17cc:	100013f8 	strdne	r1, [r0], -r8
    17d0:	10001412 	andne	r1, r0, r2, lsl r4
    17d4:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    17d8:	36100014 			; <UNDEFINED> instruction: 0x36100014
    17dc:	01100014 	tsteq	r0, r4, lsl r0
    17e0:	14365400 	ldrtne	r5, [r6], #-1024	; 0xfffffc00
    17e4:	14441000 	strbne	r1, [r4], #-0
    17e8:	00031000 	andeq	r1, r3, r0
    17ec:	449f0174 	ldrmi	r0, [pc], #372	; 17f4 <__HEAP_SIZE+0x7f4>
    17f0:	5e100014 	mrcpl	0, 0, r0, cr0, cr4, {0}
    17f4:	01100014 	tsteq	r0, r4, lsl r0
    17f8:	145e5400 	ldrbne	r5, [lr], #-1024	; 0xfffffc00
    17fc:	146c1000 	strbtne	r1, [ip], #-0
    1800:	00031000 	andeq	r1, r3, r0
    1804:	6c9f0174 	ldfvss	f0, [pc], {116}	; 0x74
    1808:	76100014 			; <UNDEFINED> instruction: 0x76100014
    180c:	01100014 	tsteq	r0, r4, lsl r0
    1810:	14765400 	ldrbtne	r5, [r6], #-1024	; 0xfffffc00
    1814:	14841000 	strne	r1, [r4], #0
    1818:	00031000 	andeq	r1, r3, r0
    181c:	849f0174 	ldrhi	r0, [pc], #372	; 1824 <__HEAP_SIZE+0x824>
    1820:	86100014 			; <UNDEFINED> instruction: 0x86100014
    1824:	01100014 	tsteq	r0, r4, lsl r0
    1828:	00005400 	andeq	r5, r0, r0, lsl #8
    182c:	00000000 	andeq	r0, r0, r0
    1830:	00030000 	andeq	r0, r3, r0
	...
    183c:	10001108 	andne	r1, r0, r8, lsl #2
    1840:	1000128e 	andne	r1, r0, lr, lsl #5
    1844:	089e000a 	ldmeq	lr, {r1, r3}
	...
    1850:	1000128e 	andne	r1, r0, lr, lsl #5
    1854:	10001290 	mulne	r0, r0, r2
    1858:	93520006 	cmpls	r2, #6
    185c:	04935304 	ldreq	r5, [r3], #772	; 0x304
    1860:	10001290 	mulne	r0, r0, r2
    1864:	100012ca 	andne	r1, r0, sl, asr #5
    1868:	a0910003 	addsge	r0, r1, r3
    186c:	0012ca7f 	andseq	ip, r2, pc, ror sl
    1870:	0012ee10 	andseq	lr, r2, r0, lsl lr
    1874:	57000610 	smladpl	r0, r0, r6, r0
    1878:	93580493 	cmpls	r8, #-1828716544	; 0x93000000
    187c:	0012ee04 	andseq	lr, r2, r4, lsl #28
    1880:	00136a10 	andseq	r6, r3, r0, lsl sl
    1884:	91000310 	tstls	r0, r0, lsl r3
    1888:	00007fa0 	andeq	r7, r0, r0, lsr #31
    188c:	00000000 	andeq	r0, r0, r0
    1890:	00010000 	andeq	r0, r1, r0
    1894:	01000000 	mrseq	r0, (UNDEF: 0)
    1898:	00000001 	andeq	r0, r0, r1
    189c:	11620000 	cmnne	r2, r0
    18a0:	11761000 	cmnne	r6, r0
    18a4:	00021000 	andeq	r1, r2, r0
    18a8:	11769f30 	cmnne	r6, r0, lsr pc
    18ac:	119a1000 	orrsne	r1, sl, r0
    18b0:	00031000 	andeq	r1, r3, r0
    18b4:	227fac91 	rsbscs	sl, pc, #37120	; 0x9100
    18b8:	22100012 	andscs	r0, r0, #18
    18bc:	02100012 	andseq	r0, r0, #18
    18c0:	229f3000 	addscs	r3, pc, #0
    18c4:	38100012 	ldmdacc	r0, {r1, r4}
    18c8:	02100012 	andseq	r0, r0, #18
    18cc:	389f3100 	ldmcc	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    18d0:	12100012 	andsne	r0, r0, #18
    18d4:	03100014 	tsteq	r0, #20
    18d8:	7fac9100 	svcvc	0x00ac9100
    18dc:	1000141c 	andne	r1, r0, ip, lsl r4
    18e0:	10001486 	andne	r1, r0, r6, lsl #9
    18e4:	ac910003 	ldcge	0, cr0, [r1], {3}
    18e8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    18f8:	46000000 	strmi	r0, [r0], -r0
    18fc:	49100012 	ldmdbmi	r0, {r1, r4}
    1900:	01100012 	tsteq	r0, r2, lsl r0
    1904:	12495000 	subne	r5, r9, #0
    1908:	13961000 	orrsne	r1, r6, #0
    190c:	00011000 	andeq	r1, r1, r0
    1910:	00139656 	andseq	r9, r3, r6, asr r6
    1914:	0013d610 	andseq	sp, r3, r0, lsl r6
    1918:	52000110 	andpl	r0, r0, #16, 2
    191c:	100013d6 	ldrdne	r1, [r0], -r6
    1920:	10001412 	andne	r1, r0, r2, lsl r4
    1924:	1c560001 	mrrcne	0, 0, r0, r6, cr1
    1928:	86100014 			; <UNDEFINED> instruction: 0x86100014
    192c:	01100014 	tsteq	r0, r4, lsl r0
    1930:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    193c:	12700000 	rsbsne	r0, r0, #0
    1940:	12731000 	rsbsne	r1, r3, #0
    1944:	00061000 	andeq	r1, r6, r0
    1948:	53049352 	movwpl	r9, #17234	; 0x4352
    194c:	12730493 	rsbsne	r0, r3, #-1828716544	; 0x93000000
    1950:	128e1000 	addne	r1, lr, #0
    1954:	00031000 	andeq	r1, r3, r0
    1958:	007fa091 			; <UNDEFINED> instruction: 0x007fa091
	...
    1964:	01010000 	mrseq	r0, (UNDEF: 1)
    1968:	00000000 	andeq	r0, r0, r0
    196c:	76000101 	strvc	r0, [r0], -r1, lsl #2
    1970:	79100012 	ldmdbvc	r0, {r1, r4}
    1974:	01100012 	tsteq	r0, r2, lsl r0
    1978:	12795000 	rsbsne	r5, r9, #0
    197c:	12ae1000 	adcne	r1, lr, #0
    1980:	00011000 	andeq	r1, r1, r0
    1984:	0012ae57 	andseq	sl, r2, r7, asr lr
    1988:	0012b210 	andseq	fp, r2, r0, lsl r2
    198c:	30000210 	andcc	r0, r0, r0, lsl r2
    1990:	0012b29f 	mulseq	r2, pc, r2	; <UNPREDICTABLE>
    1994:	0012c810 	andseq	ip, r2, r0, lsl r8
    1998:	57000110 	smladpl	r0, r0, r1, r0
    199c:	100012ee 	andne	r1, r0, lr, ror #5
    19a0:	10001332 	andne	r1, r0, r2, lsr r3
    19a4:	32570001 	subscc	r0, r7, #1
    19a8:	3e100013 	mrccc	0, 0, r0, cr0, cr3, {0}
    19ac:	01100013 	tsteq	r0, r3, lsl r0
    19b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    19bc:	130a0000 	movwne	r0, #40960	; 0xa000
    19c0:	13441000 	movtne	r1, #16384	; 0x4000
    19c4:	00011000 	andeq	r1, r1, r0
    19c8:	00134455 	andseq	r4, r3, r5, asr r4
    19cc:	00135810 	andseq	r5, r3, r0, lsl r8
    19d0:	53000110 	movwpl	r0, #272	; 0x110
	...
    19dc:	10000c38 	andne	r0, r0, r8, lsr ip
    19e0:	10000c3c 	andne	r0, r0, ip, lsr ip
    19e4:	007d0002 	rsbseq	r0, sp, r2
    19e8:	10000c3c 	andne	r0, r0, ip, lsr ip
    19ec:	10000c3e 	andne	r0, r0, lr, lsr ip
    19f0:	247d0002 	ldrbtcs	r0, [sp], #-2
    19f4:	10000c3e 	andne	r0, r0, lr, lsr ip
    19f8:	10000cfa 	strdne	r0, [r0], -sl
    19fc:	f87d0003 			; <UNDEFINED> instruction: 0xf87d0003
    1a00:	000cfa00 	andeq	pc, ip, r0, lsl #20
    1a04:	000cfe10 	andeq	pc, ip, r0, lsl lr	; <UNPREDICTABLE>
    1a08:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1a0c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
    1a1c:	000c3800 	andeq	r3, ip, r0, lsl #16
    1a20:	000c6e10 	andeq	r6, ip, r0, lsl lr
    1a24:	50000110 	andpl	r0, r0, r0, lsl r1
    1a28:	10000c6e 	andne	r0, r0, lr, ror #24
    1a2c:	10000ccc 	andne	r0, r0, ip, asr #25
    1a30:	ac910003 	ldcge	0, cr0, [r1], {3}
    1a34:	000ccc7f 	andeq	ip, ip, pc, ror ip
    1a38:	000cd010 	andeq	sp, ip, r0, lsl r0
    1a3c:	50000110 	andpl	r0, r0, r0, lsl r1
    1a40:	10000cd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1a44:	10000cfe 	strdne	r0, [r0], -lr
    1a48:	ac910003 	ldcge	0, cr0, [r1], {3}
    1a4c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1a5c:	000c3800 	andeq	r3, ip, r0, lsl #16
    1a60:	000c6e10 	andeq	r6, ip, r0, lsl lr
    1a64:	51000110 	tstpl	r0, r0, lsl r1
    1a68:	10000c6e 	andne	r0, r0, lr, ror #24
    1a6c:	10000ccc 	andne	r0, r0, ip, asr #25
    1a70:	b0910003 	addslt	r0, r1, r3
    1a74:	000ccc7f 	andeq	ip, ip, pc, ror ip
    1a78:	000cd010 	andeq	sp, ip, r0, lsl r0
    1a7c:	51000110 	tstpl	r0, r0, lsl r1
    1a80:	10000cd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1a84:	10000cfe 	strdne	r0, [r0], -lr
    1a88:	b0910003 	addslt	r0, r1, r3
    1a8c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1a9c:	000c3800 	andeq	r3, ip, r0, lsl #16
    1aa0:	000c6e10 	andeq	r6, ip, r0, lsl lr
    1aa4:	52000110 	andpl	r0, r0, #16, 2
    1aa8:	10000c6e 	andne	r0, r0, lr, ror #24
    1aac:	10000ccc 	andne	r0, r0, ip, asr #25
    1ab0:	b4910003 	ldrlt	r0, [r1], #3
    1ab4:	000ccc7f 	andeq	ip, ip, pc, ror ip
    1ab8:	000cd010 	andeq	sp, ip, r0, lsl r0
    1abc:	52000110 	andpl	r0, r0, #16, 2
    1ac0:	10000cd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1ac4:	10000cfe 	strdne	r0, [r0], -lr
    1ac8:	b4910003 	ldrlt	r0, [r1], #3
    1acc:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1ad8:	000c3800 	andeq	r3, ip, r0, lsl #16
    1adc:	000c5810 	andeq	r5, ip, r0, lsl r8
    1ae0:	53000110 	movwpl	r0, #272	; 0x110
    1ae4:	10000c58 	andne	r0, r0, r8, asr ip
    1ae8:	10000cfe 	strdne	r0, [r0], -lr
    1aec:	005b0001 	subseq	r0, fp, r1
	...
    1b00:	000c3800 	andeq	r3, ip, r0, lsl #16
    1b04:	000c6e10 	andeq	r6, ip, r0, lsl lr
    1b08:	91000210 	tstls	r0, r0, lsl r2
    1b0c:	000c6e00 	andeq	r6, ip, r0, lsl #28
    1b10:	000c9010 	andeq	r9, ip, r0, lsl r0
    1b14:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1b18:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1b1c:	000c9004 	andeq	r9, ip, r4
    1b20:	000ca410 	andeq	sl, ip, r0, lsl r4
    1b24:	50000610 	andpl	r0, r0, r0, lsl r6
    1b28:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    1b2c:	000ca404 	andeq	sl, ip, r4, lsl #8
    1b30:	000ccc10 	andeq	ip, ip, r0, lsl ip
    1b34:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1b38:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1b3c:	000ccc04 	andeq	ip, ip, r4, lsl #24
    1b40:	000cd010 	andeq	sp, ip, r0, lsl r0
    1b44:	91000210 	tstls	r0, r0, lsl r2
	...
    1b54:	000c3800 	andeq	r3, ip, r0, lsl #16
    1b58:	000c5e10 	andeq	r5, ip, r0, lsl lr
    1b5c:	91000210 	tstls	r0, r0, lsl r2
    1b60:	000c5e20 	andeq	r5, ip, r0, lsr #28
    1b64:	000cfe10 	andeq	pc, ip, r0, lsl lr	; <UNPREDICTABLE>
    1b68:	5a000110 	bpl	1fb0 <__HEAP_SIZE+0xfb0>
	...
    1b74:	00000002 	andeq	r0, r0, r2
	...
    1b80:	10000c54 	andne	r0, r0, r4, asr ip
    1b84:	10000c6e 	andne	r0, r0, lr, ror #24
    1b88:	9f300002 	svcls	0x00300002
    1b8c:	10000c6e 	andne	r0, r0, lr, ror #24
    1b90:	10000c78 	andne	r0, r0, r8, ror ip
    1b94:	78540001 	ldmdavc	r4, {r0}^
    1b98:	a410000c 	ldrge	r0, [r0], #-12
    1b9c:	0110000c 	tsteq	r0, ip
    1ba0:	0ca45900 			; <UNDEFINED> instruction: 0x0ca45900
    1ba4:	0ccc1000 	stcleq	0, cr1, [ip], {0}
    1ba8:	00011000 	andeq	r1, r1, r0
    1bac:	000ccc54 	andeq	ip, ip, r4, asr ip
    1bb0:	000cd010 	andeq	sp, ip, r0, lsl r0
    1bb4:	30000210 	andcc	r0, r0, r0, lsl r2
    1bb8:	000cd09f 	muleq	ip, pc, r0	; <UNPREDICTABLE>
    1bbc:	000cfe10 	andeq	pc, ip, r0, lsl lr	; <UNPREDICTABLE>
    1bc0:	59000110 	stmdbpl	r0, {r4, r8}
	...
    1bd0:	10000c6e 	andne	r0, r0, lr, ror #24
    1bd4:	10000c7c 	andne	r0, r0, ip, ror ip
    1bd8:	b2530001 	subslt	r0, r3, #1
    1bdc:	cc10000c 	ldcgt	0, cr0, [r0], {12}
    1be0:	0110000c 	tsteq	r0, ip
    1be4:	00005300 	andeq	r5, r0, r0, lsl #6
    1be8:	00000000 	andeq	r0, r0, r0
    1bec:	0ba40000 	bleq	fe901bf4 <__StackTop+0xc6801bf4>
    1bf0:	0ba61000 	bleq	fe985bf8 <__StackTop+0xc6885bf8>
    1bf4:	00021000 	andeq	r1, r2, r0
    1bf8:	0ba6007d 	bleq	fe981df4 <__StackTop+0xc6881df4>
    1bfc:	0ba81000 	bleq	fea05c04 <__StackTop+0xc6905c04>
    1c00:	00021000 	andeq	r1, r2, r0
    1c04:	0ba8147d 	bleq	fea06e00 <__StackTop+0xc6906e00>
    1c08:	0c361000 	ldceq	0, cr1, [r6], #-0
    1c0c:	00031000 	andeq	r1, r3, r0
    1c10:	3600d87d 			; <UNDEFINED> instruction: 0x3600d87d
    1c14:	3810000c 	ldmdacc	r0, {r2, r3}
    1c18:	0210000c 	andseq	r0, r0, #12
    1c1c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    1c28:	a4000000 	strge	r0, [r0], #-0
    1c2c:	3310000b 	tstcc	r0, #11
    1c30:	0110000c 	tsteq	r0, ip
    1c34:	0c335000 	ldceq	0, cr5, [r3], #-0
    1c38:	0c381000 	ldceq	0, cr1, [r8], #-0
    1c3c:	00041000 	andeq	r1, r4, r0
    1c40:	9f5001f3 	svcls	0x005001f3
	...
    1c50:	10000ba4 	andne	r0, r0, r4, lsr #23
    1c54:	10000c33 	andne	r0, r0, r3, lsr ip
    1c58:	33510001 	cmpcc	r1, #1
    1c5c:	3810000c 	ldmdacc	r0, {r2, r3}
    1c60:	0410000c 	ldreq	r0, [r0], #-12
    1c64:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1c68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1c74:	000ba400 	andeq	sl, fp, r0, lsl #8
    1c78:	000c3310 	andeq	r3, ip, r0, lsl r3
    1c7c:	52000110 	andpl	r0, r0, #16, 2
    1c80:	10000c33 	andne	r0, r0, r3, lsr ip
    1c84:	10000c38 	andne	r0, r0, r8, lsr ip
    1c88:	01f30004 	mvnseq	r0, r4
    1c8c:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    1c98:	0ba40000 	bleq	fe901ca0 <__StackTop+0xc6801ca0>
    1c9c:	0c331000 	ldceq	0, cr1, [r3], #-0
    1ca0:	00011000 	andeq	r1, r1, r0
    1ca4:	000c3353 	andeq	r3, ip, r3, asr r3
    1ca8:	000c3810 	andeq	r3, ip, r0, lsl r8
    1cac:	f3000410 	vqshl.u8	d0, d0, d0
    1cb0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    1cc4:	000ba400 	andeq	sl, fp, r0, lsl #8
    1cc8:	000bc210 	andeq	ip, fp, r0, lsl r2
    1ccc:	91000210 	tstls	r0, r0, lsl r2
    1cd0:	000bc200 	andeq	ip, fp, r0, lsl #4
    1cd4:	000bdc10 	andeq	sp, fp, r0, lsl ip
    1cd8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1cdc:	10000bdc 	ldrdne	r0, [r0], -ip
    1ce0:	10000be8 	andne	r0, r0, r8, ror #23
    1ce4:	e85c0001 	ldmda	ip, {r0}^
    1ce8:	1610000b 	ldrne	r0, [r0], -fp
    1cec:	0110000c 	tsteq	r0, ip
    1cf0:	0c165400 	cfldrseq	mvf5, [r6], {-0}
    1cf4:	0c181000 	ldceq	0, cr1, [r8], {-0}
    1cf8:	00021000 	andeq	r1, r2, r0
    1cfc:	00000091 	muleq	r0, r1, r0
	...
    1d08:	0ba40000 	bleq	fe901d10 <__StackTop+0xc6801d10>
    1d0c:	0bb41000 	bleq	fed05d14 <__StackTop+0xc6c05d14>
    1d10:	00021000 	andeq	r1, r2, r0
    1d14:	0bb41491 	bleq	fed06f60 <__StackTop+0xc6c06f60>
    1d18:	0c381000 	ldceq	0, cr1, [r8], #-0
    1d1c:	00011000 	andeq	r1, r1, r0
    1d20:	00000056 	andeq	r0, r0, r6, asr r0
    1d24:	00000000 	andeq	r0, r0, r0
    1d28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1d34:	000bae00 	andeq	sl, fp, r0, lsl #28
    1d38:	000bc210 	andeq	ip, fp, r0, lsl r2
    1d3c:	30000210 	andcc	r0, r0, r0, lsl r2
    1d40:	000bc29f 	muleq	fp, pc, r2	; <UNPREDICTABLE>
    1d44:	000bce10 	andeq	ip, fp, r0, lsl lr
    1d48:	5e000110 	fltpls	f0, r0
    1d4c:	10000bce 	andne	r0, r0, lr, asr #23
    1d50:	10000be8 	andne	r0, r0, r8, ror #23
    1d54:	e8570001 	ldmda	r7, {r0}^
    1d58:	1610000b 	ldrne	r0, [r0], -fp
    1d5c:	0110000c 	tsteq	r0, ip
    1d60:	0c165e00 	ldceq	14, cr5, [r6], {-0}
    1d64:	0c181000 	ldceq	0, cr1, [r8], {-0}
    1d68:	00021000 	andeq	r1, r2, r0
    1d6c:	0c189f30 	ldceq	15, cr9, [r8], {48}	; 0x30
    1d70:	0c381000 	ldceq	0, cr1, [r8], #-0
    1d74:	00011000 	andeq	r1, r1, r0
    1d78:	00000057 	andeq	r0, r0, r7, asr r0
	...
    1d8c:	000bc200 	andeq	ip, fp, r0, lsl #4
    1d90:	000bc610 	andeq	ip, fp, r0, lsl r6
    1d94:	5c000110 	stfpls	f0, [r0], {16}
    1d98:	10000bc6 	andne	r0, r0, r6, asr #23
    1d9c:	10000bca 	andne	r0, r0, sl, asr #23
    1da0:	507c0003 	rsbspl	r0, ip, r3
    1da4:	000bca9f 	muleq	fp, pc, sl	; <UNPREDICTABLE>
    1da8:	000be810 	andeq	lr, fp, r0, lsl r8
    1dac:	74001210 	strvc	r1, [r0], #-528	; 0xfffffdf0
    1db0:	f7007400 			; <UNDEFINED> instruction: 0xf7007400
    1db4:	f7007530 			; <UNDEFINED> instruction: 0xf7007530
    1db8:	00f71b30 	rscseq	r1, r7, r0, lsr fp
    1dbc:	1c1e0075 	ldcne	0, cr0, [lr], {117}	; 0x75
    1dc0:	000bf49f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1dc4:	000c0410 	andeq	r0, ip, r0, lsl r4
    1dc8:	5c000110 	stfpls	f0, [r0], {16}
    1dcc:	10000c04 	andne	r0, r0, r4, lsl #24
    1dd0:	10000c12 	andne	r0, r0, r2, lsl ip
    1dd4:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1dd8:	30f70074 	rscscc	r0, r7, r4, ror r0
    1ddc:	30f70075 	rscscc	r0, r7, r5, ror r0
    1de0:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1de4:	9f1c1e00 	svcls	0x001c1e00
    1de8:	10000c12 	andne	r0, r0, r2, lsl ip
    1dec:	10000c16 	andne	r0, r0, r6, lsl ip
    1df0:	005c0001 	subseq	r0, ip, r1
    1df4:	00000000 	andeq	r0, r0, r0
    1df8:	6c000000 	stcvs	0, cr0, [r0], {-0}
    1dfc:	7010000a 	andsvc	r0, r0, sl
    1e00:	0210000a 	andseq	r0, r0, #10
    1e04:	70007d00 	andvc	r7, r0, r0, lsl #26
    1e08:	7210000a 	andsvc	r0, r0, #10
    1e0c:	0210000a 	andseq	r0, r0, #10
    1e10:	721c7d00 	andsvc	r7, ip, #0, 26
    1e14:	2810000a 	ldmdacs	r0, {r1, r3}
    1e18:	0210000b 	andseq	r0, r0, #11
    1e1c:	28307d00 	ldmdacs	r0!, {r8, sl, fp, ip, sp, lr}
    1e20:	2c10000b 	ldccs	0, cr0, [r0], {11}
    1e24:	0210000b 	andseq	r0, r0, #11
    1e28:	2c1c7d00 	ldccs	13, cr7, [ip], {-0}
    1e2c:	a410000b 	ldrge	r0, [r0], #-11
    1e30:	0210000b 	andseq	r0, r0, #11
    1e34:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    1e44:	000a6c00 	andeq	r6, sl, r0, lsl #24
    1e48:	000b2510 	andeq	r2, fp, r0, lsl r5
    1e4c:	50000110 	andpl	r0, r0, r0, lsl r1
    1e50:	10000b25 	andne	r0, r0, r5, lsr #22
    1e54:	10000b2c 	andne	r0, r0, ip, lsr #22
    1e58:	01f30004 	mvnseq	r0, r4
    1e5c:	0b2c9f50 	bleq	b29ba4 <__RAM_SIZE+0xa29ba4>
    1e60:	0ba41000 	bleq	fe905e68 <__StackTop+0xc6805e68>
    1e64:	00011000 	andeq	r1, r1, r0
    1e68:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1e74:	6c000000 	stcvs	0, cr0, [r0], {-0}
    1e78:	2510000a 	ldrcs	r0, [r0, #-10]
    1e7c:	0110000b 	tsteq	r0, fp
    1e80:	0b255100 	bleq	956288 <__RAM_SIZE+0x856288>
    1e84:	0b2c1000 	bleq	b05e8c <__RAM_SIZE+0xa05e8c>
    1e88:	00041000 	andeq	r1, r4, r0
    1e8c:	9f5101f3 	svcls	0x005101f3
    1e90:	10000b2c 	andne	r0, r0, ip, lsr #22
    1e94:	10000ba4 	andne	r0, r0, r4, lsr #23
    1e98:	00510001 	subseq	r0, r1, r1
	...
    1ea8:	000a6c00 	andeq	r6, sl, r0, lsl #24
    1eac:	000b2510 	andeq	r2, fp, r0, lsl r5
    1eb0:	52000110 	andpl	r0, r0, #16, 2
    1eb4:	10000b25 	andne	r0, r0, r5, lsr #22
    1eb8:	10000b2c 	andne	r0, r0, ip, lsr #22
    1ebc:	01f30004 	mvnseq	r0, r4
    1ec0:	0b2c9f52 	bleq	b29c10 <__RAM_SIZE+0xa29c10>
    1ec4:	0ba41000 	bleq	fe905ecc <__StackTop+0xc6805ecc>
    1ec8:	00011000 	andeq	r1, r1, r0
    1ecc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    1ed8:	6c000000 	stcvs	0, cr0, [r0], {-0}
    1edc:	2510000a 	ldrcs	r0, [r0, #-10]
    1ee0:	0110000b 	tsteq	r0, fp
    1ee4:	0b255300 	bleq	956aec <__RAM_SIZE+0x856aec>
    1ee8:	0b2c1000 	bleq	b05ef0 <__RAM_SIZE+0xa05ef0>
    1eec:	00041000 	andeq	r1, r4, r0
    1ef0:	9f5301f3 	svcls	0x005301f3
    1ef4:	10000b2c 	andne	r0, r0, ip, lsr #22
    1ef8:	10000ba4 	andne	r0, r0, r4, lsr #23
    1efc:	00530001 	subseq	r0, r3, r1
	...
    1f08:	6c000000 	stcvs	0, cr0, [r0], {-0}
    1f0c:	2c10000a 	ldccs	0, cr0, [r0], {10}
    1f10:	0210000b 	andseq	r0, r0, #11
    1f14:	2c009100 	stfcsd	f1, [r0], {-0}
    1f18:	a410000b 	ldrge	r0, [r0], #-11
    1f1c:	0210000b 	andseq	r0, r0, #11
    1f20:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1f2c:	01010000 	mrseq	r0, (UNDEF: 1)
    1f30:	01010000 	mrseq	r0, (UNDEF: 1)
    1f34:	01010000 	mrseq	r0, (UNDEF: 1)
    1f38:	01010000 	mrseq	r0, (UNDEF: 1)
    1f3c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1f48:	00000101 	andeq	r0, r0, r1, lsl #2
    1f4c:	00000101 	andeq	r0, r0, r1, lsl #2
    1f50:	00000101 	andeq	r0, r0, r1, lsl #2
    1f54:	00000101 	andeq	r0, r0, r1, lsl #2
    1f58:	00000101 	andeq	r0, r0, r1, lsl #2
    1f5c:	000a6c00 	andeq	r6, sl, r0, lsl #24
    1f60:	000aa410 	andeq	sl, sl, r0, lsl r4
    1f64:	91000210 	tstls	r0, r0, lsl r2
    1f68:	000aa404 	andeq	sl, sl, r4, lsl #8
    1f6c:	000aa410 	andeq	sl, sl, r0, lsl r4
    1f70:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f74:	10000aa4 	andne	r0, r0, r4, lsr #21
    1f78:	10000aae 	andne	r0, r0, lr, lsr #21
    1f7c:	01740003 	cmneq	r4, r3
    1f80:	000aae9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
    1f84:	000ac410 	andeq	ip, sl, r0, lsl r4
    1f88:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f8c:	10000ac4 	andne	r0, r0, r4, asr #21
    1f90:	10000ace 	andne	r0, r0, lr, asr #21
    1f94:	01740003 	cmneq	r4, r3
    1f98:	000ace9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
    1f9c:	000afc10 	andeq	pc, sl, r0, lsl ip	; <UNPREDICTABLE>
    1fa0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fa4:	10000afc 	strdne	r0, [r0], -ip
    1fa8:	10000b06 	andne	r0, r0, r6, lsl #22
    1fac:	01740003 	cmneq	r4, r3
    1fb0:	000b069f 	muleq	fp, pc, r6	; <UNPREDICTABLE>
    1fb4:	000b1010 	andeq	r1, fp, r0, lsl r0
    1fb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fbc:	10000b10 	andne	r0, r0, r0, lsl fp
    1fc0:	10000b1a 	andne	r0, r0, sl, lsl fp
    1fc4:	01740003 	cmneq	r4, r3
    1fc8:	000b1a9f 	muleq	fp, pc, sl	; <UNPREDICTABLE>
    1fcc:	000b2c10 	andeq	r2, fp, r0, lsl ip
    1fd0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fd4:	10000b2c 	andne	r0, r0, ip, lsr #22
    1fd8:	10000b30 	andne	r0, r0, r0, lsr fp
    1fdc:	7f740003 	svcvc	0x00740003
    1fe0:	000b309f 	muleq	fp, pc, r0	; <UNPREDICTABLE>
    1fe4:	000b3e10 	andeq	r3, fp, r0, lsl lr
    1fe8:	5c000110 	stfpls	f0, [r0], {16}
    1fec:	10000b3e 	andne	r0, r0, lr, lsr fp
    1ff0:	10000b40 	andne	r0, r0, r0, asr #22
    1ff4:	40540001 	subsmi	r0, r4, r1
    1ff8:	4410000b 	ldrmi	r0, [r0], #-11
    1ffc:	0110000b 	tsteq	r0, fp
    2000:	0b445c00 	bleq	1119008 <__RAM_SIZE+0x1019008>
    2004:	0b4e1000 	bleq	138600c <__RAM_SIZE+0x128600c>
    2008:	00011000 	andeq	r1, r1, r0
    200c:	000b4e54 	andeq	r4, fp, r4, asr lr
    2010:	000b5810 	andeq	r5, fp, r0, lsl r8
    2014:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2018:	0b589f01 	bleq	1629c24 <__RAM_SIZE+0x1529c24>
    201c:	0b641000 	bleq	1906024 <__RAM_SIZE+0x1806024>
    2020:	00011000 	andeq	r1, r1, r0
    2024:	000b6454 	andeq	r6, fp, r4, asr r4
    2028:	000b6e10 	andeq	r6, fp, r0, lsl lr
    202c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2030:	0b6e9f01 	bleq	1ba9c3c <__RAM_SIZE+0x1aa9c3c>
    2034:	0b741000 	bleq	1d0603c <__RAM_SIZE+0x1c0603c>
    2038:	00011000 	andeq	r1, r1, r0
    203c:	000b7454 	andeq	r7, fp, r4, asr r4
    2040:	000b7e10 	andeq	r7, fp, r0, lsl lr
    2044:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2048:	0b7e9f01 	bleq	1fa9c54 <__RAM_SIZE+0x1ea9c54>
    204c:	0b861000 	bleq	fe186054 <__StackTop+0xc6086054>
    2050:	00011000 	andeq	r1, r1, r0
    2054:	000b8654 	andeq	r8, fp, r4, asr r6
    2058:	000b9010 	andeq	r9, fp, r0, lsl r0
    205c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2060:	0b909f01 	bleq	fe429c6c <__StackTop+0xc6329c6c>
    2064:	0b981000 	bleq	fe60606c <__StackTop+0xc650606c>
    2068:	00011000 	andeq	r1, r1, r0
    206c:	000b9854 	andeq	r9, fp, r4, asr r8
    2070:	000ba210 	andeq	sl, fp, r0, lsl r2
    2074:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2078:	0ba29f01 	bleq	fe8a9c84 <__StackTop+0xc67a9c84>
    207c:	0ba41000 	bleq	fe906084 <__StackTop+0xc6806084>
    2080:	00011000 	andeq	r1, r1, r0
    2084:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2090:	000a6c00 	andeq	r6, sl, r0, lsl #24
    2094:	000b2c10 	andeq	r2, fp, r0, lsl ip
    2098:	91000210 	tstls	r0, r0, lsl r2
    209c:	000b2c08 	andeq	r2, fp, r8, lsl #24
    20a0:	000ba410 	andeq	sl, fp, r0, lsl r4
    20a4:	91000210 	tstls	r0, r0, lsl r2
    20a8:	00000008 	andeq	r0, r0, r8
	...
    20b4:	000a6c00 	andeq	r6, sl, r0, lsl #24
    20b8:	000b2c10 	andeq	r2, fp, r0, lsl ip
    20bc:	91000210 	tstls	r0, r0, lsl r2
    20c0:	000b2c0c 	andeq	r2, fp, ip, lsl #24
    20c4:	000ba410 	andeq	sl, fp, r0, lsl r4
    20c8:	91000210 	tstls	r0, r0, lsl r2
    20cc:	0000000c 	andeq	r0, r0, ip
	...
    20d8:	000a6c00 	andeq	r6, sl, r0, lsl #24
    20dc:	000b2c10 	andeq	r2, fp, r0, lsl ip
    20e0:	91000210 	tstls	r0, r0, lsl r2
    20e4:	000b2c10 	andeq	r2, fp, r0, lsl ip
    20e8:	000ba410 	andeq	sl, fp, r0, lsl r4
    20ec:	91000210 	tstls	r0, r0, lsl r2
    20f0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    20fc:	000a6c00 	andeq	r6, sl, r0, lsl #24
    2100:	000aa210 	andeq	sl, sl, r0, lsl r2
    2104:	91000210 	tstls	r0, r0, lsl r2
    2108:	000aa214 	andeq	sl, sl, r4, lsl r2
    210c:	000ba410 	andeq	sl, fp, r0, lsl r4
    2110:	57000110 	smladpl	r0, r0, r1, r0
	...
    2120:	10000a6c 	andne	r0, r0, ip, ror #20
    2124:	10000b2c 	andne	r0, r0, ip, lsr #22
    2128:	18910002 	ldmne	r1, {r1}
    212c:	10000b2c 	andne	r0, r0, ip, lsr #22
    2130:	10000ba4 	andne	r0, r0, r4, lsr #23
    2134:	18910002 	ldmne	r1, {r1}
	...
    2140:	100009ee 	andne	r0, r0, lr, ror #19
    2144:	100009f2 	strdne	r0, [r0], -r2
    2148:	007d0002 	rsbseq	r0, sp, r2
    214c:	100009f2 	strdne	r0, [r0], -r2
    2150:	100009f4 	strdne	r0, [r0], -r4
    2154:	247d0002 	ldrbtcs	r0, [sp], #-2
    2158:	100009f4 	strdne	r0, [r0], -r4
    215c:	10000a52 	andne	r0, r0, r2, asr sl
    2160:	307d0002 	rsbscc	r0, sp, r2
    2164:	10000a52 	andne	r0, r0, r2, asr sl
    2168:	10000a56 	andne	r0, r0, r6, asr sl
    216c:	247d0002 	ldrbtcs	r0, [sp], #-2
    2170:	10000a56 	andne	r0, r0, r6, asr sl
    2174:	10000a6c 	andne	r0, r0, ip, ror #20
    2178:	307d0002 	rsbscc	r0, sp, r2
	...
    2188:	100009ee 	andne	r0, r0, lr, ror #19
    218c:	10000a12 	andne	r0, r0, r2, lsl sl
    2190:	12500001 	subsne	r0, r0, #1
    2194:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    2198:	0110000a 	tsteq	r0, sl
    219c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    21a8:	09ee0000 	stmibeq	lr!, {}^	; <UNPREDICTABLE>
    21ac:	0a121000 	beq	4861b4 <__RAM_SIZE+0x3861b4>
    21b0:	00011000 	andeq	r1, r1, r0
    21b4:	000a1251 	andeq	r1, sl, r1, asr r2
    21b8:	000a6c10 	andeq	r6, sl, r0, lsl ip
    21bc:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    21d4:	100009ee 	andne	r0, r0, lr, ror #19
    21d8:	10000a1a 	andne	r0, r0, sl, lsl sl
    21dc:	1a520001 	bne	14821e8 <__RAM_SIZE+0x13821e8>
    21e0:	2a10000a 	bcs	402210 <__RAM_SIZE+0x302210>
    21e4:	0110000a 	tsteq	r0, sl
    21e8:	0a2a5b00 	beq	a98df0 <__RAM_SIZE+0x998df0>
    21ec:	0a361000 	beq	d861f4 <__RAM_SIZE+0xc861f4>
    21f0:	00011000 	andeq	r1, r1, r0
    21f4:	000a3652 	andeq	r3, sl, r2, asr r6
    21f8:	000a4210 	andeq	r4, sl, r0, lsl r2
    21fc:	58000110 	stmdapl	r0, {r4, r8}
    2200:	10000a42 	andne	r0, r0, r2, asr #20
    2204:	10000a60 	andne	r0, r0, r0, ror #20
    2208:	60520001 	subsvs	r0, r2, r1
    220c:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    2210:	0110000a 	tsteq	r0, sl
    2214:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2220:	09ee0000 	stmibeq	lr!, {}^	; <UNPREDICTABLE>
    2224:	0a081000 	beq	20622c <__RAM_SIZE+0x10622c>
    2228:	00011000 	andeq	r1, r1, r0
    222c:	000a0853 	andeq	r0, sl, r3, asr r8
    2230:	000a6c10 	andeq	r6, sl, r0, lsl ip
    2234:	57000110 	smladpl	r0, r0, r1, r0
	...
    2244:	100009ee 	andne	r0, r0, lr, ror #19
    2248:	10000a56 	andne	r0, r0, r6, asr sl
    224c:	00910002 	addseq	r0, r1, r2
    2250:	10000a56 	andne	r0, r0, r6, asr sl
    2254:	10000a6c 	andne	r0, r0, ip, ror #20
    2258:	00910002 	addseq	r0, r1, r2
	...
    2268:	100009ee 	andne	r0, r0, lr, ror #19
    226c:	10000a30 	andne	r0, r0, r0, lsr sl
    2270:	04910002 	ldreq	r0, [r1], #2
    2274:	10000a30 	andne	r0, r0, r0, lsr sl
    2278:	10000a4e 	andne	r0, r0, lr, asr #20
    227c:	00540001 	subseq	r0, r4, r1
	...
    2288:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    228c:	56100009 	ldrpl	r0, [r0], -r9
    2290:	0210000a 	andseq	r0, r0, #10
    2294:	56089100 	strpl	r9, [r8], -r0, lsl #2
    2298:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    229c:	0210000a 	andseq	r0, r0, #10
    22a0:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    22ac:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    22b0:	56100009 	ldrpl	r0, [r0], -r9
    22b4:	0210000a 	andseq	r0, r0, #10
    22b8:	560c9100 	strpl	r9, [ip], -r0, lsl #2
    22bc:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    22c0:	0210000a 	andseq	r0, r0, #10
    22c4:	000c9100 	andeq	r9, ip, r0, lsl #2
    22c8:	00000000 	andeq	r0, r0, r0
    22cc:	01000000 	mrseq	r0, (UNDEF: 0)
    22d0:	00000000 	andeq	r0, r0, r0
    22d4:	000a0600 	andeq	r0, sl, r0, lsl #12
    22d8:	000a1210 	andeq	r1, sl, r0, lsl r2
    22dc:	52000110 	andpl	r0, r0, #16, 2
    22e0:	10000a12 	andne	r0, r0, r2, lsl sl
    22e4:	10000a30 	andne	r0, r0, r0, lsr sl
    22e8:	54910002 	ldrpl	r0, [r1], #2
    22ec:	10000a30 	andne	r0, r0, r0, lsr sl
    22f0:	10000a6c 	andne	r0, r0, ip, ror #20
    22f4:	01f30004 	mvnseq	r0, r4
    22f8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2304:	10000a12 	andne	r0, r0, r2, lsl sl
    2308:	10000a30 	andne	r0, r0, r0, lsr sl
    230c:	00580001 	subseq	r0, r8, r1
	...
    2318:	ca000000 	bgt	2320 <__HEAP_SIZE+0x1320>
    231c:	ce100009 	cdpgt	0, 1, cr0, cr0, cr9, {0}
    2320:	01100009 	tsteq	r0, r9
    2324:	09ce5000 	stmibeq	lr, {ip, lr}^
    2328:	09ee1000 	stmibeq	lr!, {ip}^
    232c:	00011000 	andeq	r1, r1, r0
    2330:	00000051 	andeq	r0, r0, r1, asr r0
    2334:	00000000 	andeq	r0, r0, r0
    2338:	00000100 	andeq	r0, r0, r0, lsl #2
    233c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2340:	d0100009 	andsle	r0, r0, r9
    2344:	02100009 	andseq	r0, r0, #9
    2348:	d09f3000 	addsle	r3, pc, r0
    234c:	d4100009 	ldrle	r0, [r0], #-9
    2350:	01100009 	tsteq	r0, r9
    2354:	09e05000 	stmibeq	r0!, {ip, lr}^
    2358:	09ee1000 	stmibeq	lr!, {ip}^
    235c:	00011000 	andeq	r1, r1, r0
    2360:	00000050 	andeq	r0, r0, r0, asr r0
	...
    236c:	0009e400 	andeq	lr, r9, r0, lsl #8
    2370:	0009e610 	andeq	lr, r9, r0, lsl r6
    2374:	53000110 	movwpl	r0, #272	; 0x110
    2378:	100009e6 	andne	r0, r0, r6, ror #19
    237c:	100009e8 	andne	r0, r0, r8, ror #19
    2380:	30730003 	rsbscc	r0, r3, r3
    2384:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2394:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    23a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    23a4:	00000008 	andeq	r0, r0, r8
    23a8:	00000000 	andeq	r0, r0, r0
    23ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    23c4:	01000000 	mrseq	r0, (UNDEF: 0)
    23c8:	00005000 	andeq	r5, r0, r0
    23cc:	00000000 	andeq	r0, r0, r0
    23d0:	00040000 	andeq	r0, r4, r0
    23d4:	9f5001f3 	svcls	0x005001f3
	...
    23e0:	00500001 	subseq	r0, r0, r1
	...
    23f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2404:	01f30004 	mvnseq	r0, r4
    2408:	00009f51 	andeq	r9, r0, r1, asr pc
    240c:	00000000 	andeq	r0, r0, r0
    2410:	00010000 	andeq	r0, r1, r0
    2414:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2428:	01000000 	mrseq	r0, (UNDEF: 0)
    242c:	00005200 	andeq	r5, r0, r0, lsl #4
    2430:	00000000 	andeq	r0, r0, r0
    2434:	00040000 	andeq	r0, r4, r0
    2438:	9f5201f3 	svcls	0x005201f3
	...
    2444:	00520001 	subseq	r0, r2, r1
	...
    245c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2468:	01f30004 	mvnseq	r0, r4
    246c:	00009f53 	andeq	r9, r0, r3, asr pc
    2470:	00000000 	andeq	r0, r0, r0
    2474:	00010000 	andeq	r0, r1, r0
    2478:	00000053 	andeq	r0, r0, r3, asr r0
    247c:	00000000 	andeq	r0, r0, r0
    2480:	001b0800 	andseq	r0, fp, r0, lsl #16
    2484:	001b0e10 	andseq	r0, fp, r0, lsl lr
    2488:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    248c:	001b0e00 	andseq	r0, fp, r0, lsl #28
    2490:	001b1410 	andseq	r1, fp, r0, lsl r4
    2494:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2498:	00000008 	andeq	r0, r0, r8
	...
    24a4:	001b0800 	andseq	r0, fp, r0, lsl #16
    24a8:	001b1110 	andseq	r1, fp, r0, lsl r1
    24ac:	50000110 	andpl	r0, r0, r0, lsl r1
    24b0:	10001b11 	andne	r1, r0, r1, lsl fp
    24b4:	10001b14 	andne	r1, r0, r4, lsl fp
    24b8:	01f30004 	mvnseq	r0, r4
    24bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    24c8:	1b080000 	blne	2024d0 <__RAM_SIZE+0x1024d0>
    24cc:	1b111000 	blne	4464d4 <__RAM_SIZE+0x3464d4>
    24d0:	00011000 	andeq	r1, r1, r0
    24d4:	001b1151 	andseq	r1, fp, r1, asr r1
    24d8:	001b1410 	andseq	r1, fp, r0, lsl r4
    24dc:	f3000410 	vqshl.u8	d0, d0, d0
    24e0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    24ec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    24f0:	1110001b 	tstne	r0, fp, lsl r0
    24f4:	0110001b 	tsteq	r0, fp, lsl r0
    24f8:	1b115200 	blne	456d00 <__RAM_SIZE+0x356d00>
    24fc:	1b141000 	blne	506504 <__RAM_SIZE+0x406504>
    2500:	00041000 	andeq	r1, r4, r0
    2504:	9f5201f3 	svcls	0x005201f3
	...
    2514:	10001b08 	andne	r1, r0, r8, lsl #22
    2518:	10001b11 	andne	r1, r0, r1, lsl fp
    251c:	11530001 	cmpne	r3, r1
    2520:	1410001b 	ldrne	r0, [r0], #-27	; 0xffffffe5
    2524:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2528:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    252c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    253c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    254c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    256c:	00560001 	subseq	r0, r6, r1
	...
    2580:	01000000 	mrseq	r0, (UNDEF: 0)
    2584:	00005100 	andeq	r5, r0, r0, lsl #2
    2588:	00000000 	andeq	r0, r0, r0
    258c:	00010000 	andeq	r0, r1, r0
    2590:	00000055 	andeq	r0, r0, r5, asr r0
    2594:	00000000 	andeq	r0, r0, r0
    2598:	00000100 	andeq	r0, r0, r0, lsl #2
    259c:	00000001 	andeq	r0, r0, r1
    25a0:	00000000 	andeq	r0, r0, r0
    25a4:	02000000 	andeq	r0, r0, #0
    25a8:	009f3000 	addseq	r3, pc, r0
    25ac:	00000000 	andeq	r0, r0, r0
    25b0:	01000000 	mrseq	r0, (UNDEF: 0)
    25b4:	00005000 	andeq	r5, r0, r0
    25b8:	00000000 	andeq	r0, r0, r0
    25bc:	00010000 	andeq	r0, r1, r0
    25c0:	00000050 	andeq	r0, r0, r0, asr r0
    25c4:	00000000 	andeq	r0, r0, r0
    25c8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    25d4:	30000200 	andcc	r0, r0, r0, lsl #4
    25d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25dc:	00000000 	andeq	r0, r0, r0
    25e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    25f4:	007d0002 	rsbseq	r0, sp, r2
	...
    2600:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2618:	00500001 	subseq	r0, r0, r1
    261c:	00000000 	andeq	r0, r0, r0
    2620:	04000000 	streq	r0, [r0], #-0
    2624:	5001f300 	andpl	pc, r1, r0, lsl #6
    2628:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    262c:	00000000 	andeq	r0, r0, r0
    2630:	001b5400 	andseq	r5, fp, r0, lsl #8
    2634:	001b5610 	andseq	r5, fp, r0, lsl r6
    2638:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    263c:	001b5600 	andseq	r5, fp, r0, lsl #12
    2640:	001b7210 	andseq	r7, fp, r0, lsl r2
    2644:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2648:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2654:	001b5400 	andseq	r5, fp, r0, lsl #8
    2658:	001b5c10 	andseq	r5, fp, r0, lsl ip
    265c:	50000110 	andpl	r0, r0, r0, lsl r1
    2660:	10001b5c 	andne	r1, r0, ip, asr fp
    2664:	10001b72 	andne	r1, r0, r2, ror fp
    2668:	00550001 	subseq	r0, r5, r1
    266c:	00000000 	andeq	r0, r0, r0
    2670:	01000000 	mrseq	r0, (UNDEF: 0)
    2674:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    2678:	5c10001b 	ldcpl	0, cr0, [r0], {27}
    267c:	0210001b 	andseq	r0, r0, #27
    2680:	5c9f3000 	ldcpl	0, cr3, [pc], {0}
    2684:	7210001b 	andsvc	r0, r0, #27
    2688:	0110001b 	tsteq	r0, fp, lsl r0
    268c:	00005400 	andeq	r5, r0, r0, lsl #8
    2690:	00000000 	andeq	r0, r0, r0
    2694:	00010000 	andeq	r0, r1, r0
    2698:	10001b40 	andne	r1, r0, r0, asr #22
    269c:	10001b54 	andne	r1, r0, r4, asr fp
    26a0:	00500001 	subseq	r0, r0, r1
	...
    26b0:	a4000000 	strge	r0, [r0], #-0
    26b4:	ac10001e 	ldcge	0, cr0, [r0], {30}
    26b8:	0110001e 	tsteq	r0, lr, lsl r0
    26bc:	1eac5000 	cdpne	0, 10, cr5, cr12, cr0, {0}
    26c0:	1eae1000 	cdpne	0, 10, cr1, cr14, cr0, {0}
    26c4:	00051000 	andeq	r1, r5, r0
    26c8:	00000803 	andeq	r0, r0, r3, lsl #16
    26cc:	001eae38 	andseq	sl, lr, r8, lsr lr
    26d0:	001eb010 	andseq	fp, lr, r0, lsl r0
    26d4:	50000110 	andpl	r0, r0, r0, lsl r1
    26d8:	10001eb0 			; <UNDEFINED> instruction: 0x10001eb0
    26dc:	10001eb8 			; <UNDEFINED> instruction: 0x10001eb8
    26e0:	01f30004 	mvnseq	r0, r4
    26e4:	00009f50 	andeq	r9, r0, r0, asr pc
    26e8:	00000000 	andeq	r0, r0, r0
    26ec:	01020000 	mrseq	r0, (UNDEF: 2)
    26f0:	00000001 	andeq	r0, r0, r1
    26f4:	10001ea4 	andne	r1, r0, r4, lsr #29
    26f8:	10001eaa 	andne	r1, r0, sl, lsr #29
    26fc:	9f320002 	svcls	0x00320002
    2700:	10001eaa 	andne	r1, r0, sl, lsr #29
    2704:	10001eae 	andne	r1, r0, lr, lsr #29
    2708:	9f300002 	svcls	0x00300002
    270c:	10001eae 	andne	r1, r0, lr, lsr #29
    2710:	10001eb8 			; <UNDEFINED> instruction: 0x10001eb8
    2714:	9f320002 	svcls	0x00320002
	...
    2720:	1e980100 	fmlnee	f0, f0, f0
    2724:	1e981000 	cdpne	0, 9, cr1, cr8, cr0, {0}
    2728:	00011000 	andeq	r1, r1, r0
    272c:	00000050 	andeq	r0, r0, r0, asr r0
    2730:	00000000 	andeq	r0, r0, r0
    2734:	001bfc00 	andseq	pc, fp, r0, lsl #24
    2738:	001c0010 	andseq	r0, ip, r0, lsl r0
    273c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2740:	001c0000 	andseq	r0, ip, r0
    2744:	001c7810 	andseq	r7, ip, r0, lsl r8
    2748:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    274c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    275c:	001bfc00 	andseq	pc, fp, r0, lsl #24
    2760:	001c1610 	andseq	r1, ip, r0, lsl r6
    2764:	50000110 	andpl	r0, r0, r0, lsl r1
    2768:	10001c16 	andne	r1, r0, r6, lsl ip
    276c:	10001c50 	andne	r1, r0, r0, asr ip
    2770:	50580001 	subspl	r0, r8, r1
    2774:	5610001c 			; <UNDEFINED> instruction: 0x5610001c
    2778:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    277c:	5001f300 	andpl	pc, r1, r0, lsl #6
    2780:	001c569f 	mulseq	ip, pc, r6	; <UNPREDICTABLE>
    2784:	001c7810 	andseq	r7, ip, r0, lsl r8
    2788:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    279c:	10001bfc 	strdne	r1, [r0], -ip
    27a0:	10001c16 	andne	r1, r0, r6, lsl ip
    27a4:	16510001 	ldrbne	r0, [r1], -r1
    27a8:	5010001c 	andspl	r0, r0, ip, lsl r0
    27ac:	0110001c 	tsteq	r0, ip, lsl r0
    27b0:	1c505700 	mrrcne	7, 0, r5, r0, cr0
    27b4:	1c561000 	mrane	r1, r6, acc0
    27b8:	00041000 	andeq	r1, r4, r0
    27bc:	9f5101f3 	svcls	0x005101f3
    27c0:	10001c56 	andne	r1, r0, r6, asr ip
    27c4:	10001c78 	andne	r1, r0, r8, ror ip
    27c8:	00510001 	subseq	r0, r1, r1
	...
    27d8:	001bfc00 	andseq	pc, fp, r0, lsl #24
    27dc:	001c1610 	andseq	r1, ip, r0, lsl r6
    27e0:	52000110 	andpl	r0, r0, #16, 2
    27e4:	10001c16 	andne	r1, r0, r6, lsl ip
    27e8:	10001c56 	andne	r1, r0, r6, asr ip
    27ec:	01f30004 	mvnseq	r0, r4
    27f0:	1c569f52 	mrrcne	15, 5, r9, r6, cr2
    27f4:	1c781000 	ldclne	0, cr1, [r8], #-0
    27f8:	00011000 	andeq	r1, r1, r0
    27fc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    280c:	001bfc00 	andseq	pc, fp, r0, lsl #24
    2810:	001c1610 	andseq	r1, ip, r0, lsl r6
    2814:	53000110 	movwpl	r0, #272	; 0x110
    2818:	10001c16 	andne	r1, r0, r6, lsl ip
    281c:	10001c50 	andne	r1, r0, r0, asr ip
    2820:	50550001 	subspl	r0, r5, r1
    2824:	5610001c 			; <UNDEFINED> instruction: 0x5610001c
    2828:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    282c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2830:	001c569f 	mulseq	ip, pc, r6	; <UNPREDICTABLE>
    2834:	001c7810 	andseq	r7, ip, r0, lsl r8
    2838:	53000110 	movwpl	r0, #272	; 0x110
	...
    2844:	00000001 	andeq	r0, r0, r1
    2848:	1c000000 	stcne	0, cr0, [r0], {-0}
    284c:	1c161000 	ldcne	0, cr1, [r6], {-0}
    2850:	00021000 	andeq	r1, r2, r0
    2854:	1c169f30 	ldcne	15, cr9, [r6], {48}	; 0x30
    2858:	1c501000 	mrane	r1, r0, acc0
    285c:	00011000 	andeq	r1, r1, r0
    2860:	001c5656 	andseq	r5, ip, r6, asr r6
    2864:	001c6c10 	andseq	r6, ip, r0, lsl ip
    2868:	30000210 	andcc	r0, r0, r0, lsl r2
    286c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2870:	00000000 	andeq	r0, r0, r0
    2874:	00000200 	andeq	r0, r0, r0, lsl #4
    2878:	00000101 	andeq	r0, r0, r1, lsl #2
    287c:	00000000 	andeq	r0, r0, r0
    2880:	1610001c 			; <UNDEFINED> instruction: 0x1610001c
    2884:	0210001c 	andseq	r0, r0, #28
    2888:	209f3000 	addscs	r3, pc, r0
    288c:	3210001c 	andscc	r0, r0, #28
    2890:	0110001c 	tsteq	r0, ip, lsl r0
    2894:	1c325200 	lfmne	f5, 4, [r2], #-0
    2898:	1c361000 	ldcne	0, cr1, [r6], #-0
    289c:	00031000 	andeq	r1, r3, r0
    28a0:	369f7f72 			; <UNDEFINED> instruction: 0x369f7f72
    28a4:	5010001c 	andspl	r0, r0, ip, lsl r0
    28a8:	0110001c 	tsteq	r0, ip, lsl r0
    28ac:	1c565900 	mrrcne	9, 0, r5, r6, cr0	; <UNPREDICTABLE>
    28b0:	1c781000 	ldclne	0, cr1, [r8], #-0
    28b4:	00021000 	andeq	r1, r2, r0
    28b8:	00009f30 	andeq	r9, r0, r0, lsr pc
    28bc:	00000000 	andeq	r0, r0, r0
    28c0:	00020000 	andeq	r0, r2, r0
    28c4:	00000000 	andeq	r0, r0, r0
    28c8:	10001c00 	andne	r1, r0, r0, lsl #24
    28cc:	10001c16 	andne	r1, r0, r6, lsl ip
    28d0:	9f300002 	svcls	0x00300002
    28d4:	10001c3e 	andne	r1, r0, lr, lsr ip
    28d8:	10001c41 	andne	r1, r0, r1, asr #24
    28dc:	56500001 	ldrbpl	r0, [r0], -r1
    28e0:	7810001c 	ldmdavc	r0, {r2, r3, r4}
    28e4:	0210001c 	andseq	r0, r0, #28
    28e8:	009f3000 	addseq	r3, pc, r0
    28ec:	00000000 	andeq	r0, r0, r0
    28f0:	02000000 	andeq	r0, r0, #0
    28f4:	00000000 	andeq	r0, r0, r0
    28f8:	001c0000 	andseq	r0, ip, r0
    28fc:	001c1610 	andseq	r1, ip, r0, lsl r6
    2900:	30000210 	andcc	r0, r0, r0, lsl r2
    2904:	001c169f 	mulseq	ip, pc, r6	; <UNPREDICTABLE>
    2908:	001c5010 	andseq	r5, ip, r0, lsl r0
    290c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2910:	10001c56 	andne	r1, r0, r6, asr ip
    2914:	10001c78 	andne	r1, r0, r8, ror ip
    2918:	9f300002 	svcls	0x00300002
	...
    2924:	10001ce8 	andne	r1, r0, r8, ror #25
    2928:	10001cea 	andne	r1, r0, sl, ror #25
    292c:	007d0002 	rsbseq	r0, sp, r2
    2930:	10001cea 	andne	r1, r0, sl, ror #25
    2934:	10001e94 	mulne	r0, r4, lr
    2938:	187d0002 	ldmdane	sp!, {r1}^
	...
    294c:	1ce80000 	stclne	0, cr0, [r8]
    2950:	1d341000 	ldcne	0, cr1, [r4, #-0]
    2954:	00011000 	andeq	r1, r1, r0
    2958:	001d3450 	andseq	r3, sp, r0, asr r4
    295c:	001dea10 	andseq	lr, sp, r0, lsl sl
    2960:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2964:	10001dea 	andne	r1, r0, sl, ror #27
    2968:	10001dfe 	strdne	r1, [r0], -lr
    296c:	01f30004 	mvnseq	r0, r4
    2970:	1dfe9f50 	ldclne	15, cr9, [lr, #320]!	; 0x140
    2974:	1e0e1000 	cdpne	0, 0, cr1, cr14, cr0, {0}
    2978:	00011000 	andeq	r1, r1, r0
    297c:	001e0e55 	andseq	r0, lr, r5, asr lr
    2980:	001e9410 	andseq	r9, lr, r0, lsl r4
    2984:	f3000410 	vqshl.u8	d0, d0, d0
    2988:	009f5001 	addseq	r5, pc, r1
	...
    2994:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    2998:	3710001c 			; <UNDEFINED> instruction: 0x3710001c
    299c:	0110001d 	tsteq	r0, sp, lsl r0
    29a0:	1d375100 	ldfnes	f5, [r7, #-0]
    29a4:	1e941000 	cdpne	0, 9, cr1, cr4, cr0, {0}
    29a8:	00011000 	andeq	r1, r1, r0
    29ac:	00000056 	andeq	r0, r0, r6, asr r0
    29b0:	00000000 	andeq	r0, r0, r0
    29b4:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    29c0:	001cee00 	andseq	lr, ip, r0, lsl #28
    29c4:	001dea10 	andseq	lr, sp, r0, lsl sl
    29c8:	30000210 	andcc	r0, r0, r0, lsl r2
    29cc:	001dea9f 	mulseq	sp, pc, sl	; <UNPREDICTABLE>
    29d0:	001dec10 	andseq	lr, sp, r0, lsl ip
    29d4:	50000110 	andpl	r0, r0, r0, lsl r1
    29d8:	10001dec 	andne	r1, r0, ip, ror #27
    29dc:	10001dfe 	strdne	r1, [r0], -lr
    29e0:	fe550001 	cdp2	0, 5, cr0, cr5, cr1, {0}
    29e4:	0e10001d 	mrceq	0, 0, r0, cr0, cr13, {0}
    29e8:	0210001e 	andseq	r0, r0, #30
    29ec:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
    29f0:	1010001e 	andsne	r0, r0, lr, lsl r0
    29f4:	0110001e 	tsteq	r0, lr, lsl r0
    29f8:	1e105000 	cdpne	0, 1, cr5, cr0, cr0, {0}
    29fc:	1e941000 	cdpne	0, 9, cr1, cr4, cr0, {0}
    2a00:	00011000 	andeq	r1, r1, r0
    2a04:	00000055 	andeq	r0, r0, r5, asr r0
    2a08:	00000000 	andeq	r0, r0, r0
    2a0c:	01010100 	mrseq	r0, (UNDEF: 17)
    2a10:	00000101 	andeq	r0, r0, r1, lsl #2
    2a14:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    2a18:	d010001c 	andsle	r0, r0, ip, lsl r0
    2a1c:	0210001d 	andseq	r0, r0, #29
    2a20:	d09f3000 	addsle	r3, pc, r0
    2a24:	fa10001d 	blx	402aa0 <__RAM_SIZE+0x302aa0>
    2a28:	0210001d 	andseq	r0, r0, #29
    2a2c:	fa9f4000 	blx	fe7d2a34 <__StackTop+0xc66d2a34>
    2a30:	fe10001d 	mrc2	0, 0, r0, cr0, cr13, {0}
    2a34:	0210001d 	andseq	r0, r0, #29
    2a38:	fe9f3000 	cdp2	0, 9, cr3, cr15, cr0, {0}
    2a3c:	1010001d 	andsne	r0, r0, sp, lsl r0
    2a40:	0210001e 	andseq	r0, r0, #30
    2a44:	109f4000 	addsne	r4, pc, r0
    2a48:	9410001e 	ldrls	r0, [r0], #-30	; 0xffffffe2
    2a4c:	0110001e 	tsteq	r0, lr, lsl r0
    2a50:	00005400 	andeq	r5, r0, r0, lsl #8
    2a54:	00000000 	andeq	r0, r0, r0
    2a58:	05020000 	streq	r0, [r2, #-0]
    2a5c:	01010105 	tsteq	r1, r5, lsl #2
    2a60:	01010101 	tsteq	r1, r1, lsl #2
    2a64:	01010101 	tsteq	r1, r1, lsl #2
    2a68:	01010101 	tsteq	r1, r1, lsl #2
    2a6c:	01010101 	tsteq	r1, r1, lsl #2
    2a70:	01010101 	tsteq	r1, r1, lsl #2
    2a74:	01010101 	tsteq	r1, r1, lsl #2
    2a78:	00010101 	andeq	r0, r1, r1, lsl #2
	...
    2a84:	10001cee 	andne	r1, r0, lr, ror #25
    2a88:	10001cee 	andne	r1, r0, lr, ror #25
    2a8c:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    2a90:	f410001c 			; <UNDEFINED> instruction: 0xf410001c
    2a94:	0310001c 	tsteq	r0, #28
    2a98:	9f047000 	svcls	0x00047000
    2a9c:	10001cf4 	strdne	r1, [r0], -r4
    2aa0:	10001cf8 	strdne	r1, [r0], -r8
    2aa4:	08700003 	ldmdaeq	r0!, {r0, r1}^
    2aa8:	001cf89f 	mulseq	ip, pc, r8	; <UNPREDICTABLE>
    2aac:	001cfc10 	andseq	pc, ip, r0, lsl ip	; <UNPREDICTABLE>
    2ab0:	70000310 	andvc	r0, r0, r0, lsl r3
    2ab4:	1cfc9f0c 	ldclne	15, cr9, [ip], #48	; 0x30
    2ab8:	1d001000 	stcne	0, cr1, [r0, #-0]
    2abc:	00031000 	andeq	r1, r3, r0
    2ac0:	009f1070 	addseq	r1, pc, r0, ror r0	; <UNPREDICTABLE>
    2ac4:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    2ac8:	0310001d 	tsteq	r0, #29
    2acc:	9f147000 	svcls	0x00147000
    2ad0:	10001d04 	andne	r1, r0, r4, lsl #26
    2ad4:	10001d08 	andne	r1, r0, r8, lsl #26
    2ad8:	18700003 	ldmdane	r0!, {r0, r1}^
    2adc:	001d089f 	mulseq	sp, pc, r8	; <UNPREDICTABLE>
    2ae0:	001d0c10 	andseq	r0, sp, r0, lsl ip
    2ae4:	70000310 	andvc	r0, r0, r0, lsl r3
    2ae8:	1d0c9f1c 	stcne	15, cr9, [ip, #-112]	; 0xffffff90
    2aec:	1d101000 	ldcne	0, cr1, [r0, #-0]
    2af0:	00031000 	andeq	r1, r3, r0
    2af4:	109f2070 	addsne	r2, pc, r0, ror r0	; <UNPREDICTABLE>
    2af8:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    2afc:	0310001d 	tsteq	r0, #29
    2b00:	9f247000 	svcls	0x00247000
    2b04:	10001d14 	andne	r1, r0, r4, lsl sp
    2b08:	10001d18 	andne	r1, r0, r8, lsl sp
    2b0c:	28700003 	ldmdacs	r0!, {r0, r1}^
    2b10:	001d189f 	mulseq	sp, pc, r8	; <UNPREDICTABLE>
    2b14:	001d1c10 	andseq	r1, sp, r0, lsl ip
    2b18:	70000310 	andvc	r0, r0, r0, lsl r3
    2b1c:	1d1c9f2c 	ldcne	15, cr9, [ip, #-176]	; 0xffffff50
    2b20:	1d201000 	stcne	0, cr1, [r0, #-0]
    2b24:	00031000 	andeq	r1, r3, r0
    2b28:	209f3070 	addscs	r3, pc, r0, ror r0	; <UNPREDICTABLE>
    2b2c:	2410001d 	ldrcs	r0, [r0], #-29	; 0xffffffe3
    2b30:	0310001d 	tsteq	r0, #29
    2b34:	9f347000 	svcls	0x00347000
    2b38:	10001d24 	andne	r1, r0, r4, lsr #26
    2b3c:	10001d28 	andne	r1, r0, r8, lsr #26
    2b40:	38700003 	ldmdacc	r0!, {r0, r1}^
    2b44:	001d289f 	mulseq	sp, pc, r8	; <UNPREDICTABLE>
    2b48:	001d2c10 	andseq	r2, sp, r0, lsl ip
    2b4c:	70000310 	andvc	r0, r0, r0, lsl r3
    2b50:	1d2c9f3c 	stcne	15, cr9, [ip, #-240]!	; 0xffffff10
    2b54:	1d341000 	ldcne	0, cr1, [r4, #-0]
    2b58:	00041000 	andeq	r1, r4, r0
    2b5c:	9f00c070 	svcls	0x0000c070
    2b60:	10001d34 	andne	r1, r0, r4, lsr sp
    2b64:	10001dea 	andne	r1, r0, sl, ror #27
    2b68:	c0750004 	rsbsgt	r0, r5, r4
    2b6c:	1dea9f00 	stclne	15, cr9, [sl]
    2b70:	1dfe1000 	ldclne	0, cr1, [lr]
    2b74:	00061000 	andeq	r1, r6, r0
    2b78:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    2b7c:	1dfe9f40 	ldclne	15, cr9, [lr, #256]!	; 0x100
    2b80:	1e0e1000 	cdpne	0, 0, cr1, cr14, cr0, {0}
    2b84:	00041000 	andeq	r1, r4, r0
    2b88:	9f00c075 	svcls	0x0000c075
    2b8c:	10001e0e 	andne	r1, r0, lr, lsl #28
    2b90:	10001e94 	mulne	r0, r4, lr
    2b94:	01f30006 	mvnseq	r0, r6
    2b98:	9f402350 	svcls	0x00402350
	...
    2ba4:	10001c90 	mulne	r0, r0, ip
    2ba8:	10001c92 	mulne	r0, r2, ip
    2bac:	007d0002 	rsbseq	r0, sp, r2
    2bb0:	10001c92 	mulne	r0, r2, ip
    2bb4:	10001c98 	mulne	r0, r8, ip
    2bb8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2bc8:	10001c90 	mulne	r0, r0, ip
    2bcc:	10001c95 	mulne	r0, r5, ip
    2bd0:	95500001 	ldrbls	r0, [r0, #-1]
    2bd4:	9810001c 	ldmdals	r0, {r2, r3, r4}
    2bd8:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2bdc:	5001f300 	andpl	pc, r1, r0, lsl #6
    2be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2be4:	00000000 	andeq	r0, r0, r0
    2be8:	00000100 	andeq	r0, r0, r0, lsl #2
    2bec:	001c9200 	andseq	r9, ip, r0, lsl #4
    2bf0:	001c9610 	andseq	r9, ip, r0, lsl r6
    2bf4:	31000210 	tstcc	r0, r0, lsl r2
    2bf8:	001c969f 	mulseq	ip, pc, r6	; <UNPREDICTABLE>
    2bfc:	001c9810 	andseq	r9, ip, r0, lsl r8
    2c00:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2c0c:	10001c78 	andne	r1, r0, r8, ror ip
    2c10:	10001c7a 	andne	r1, r0, sl, ror ip
    2c14:	007d0002 	rsbseq	r0, sp, r2
    2c18:	10001c7a 	andne	r1, r0, sl, ror ip
    2c1c:	10001c90 	mulne	r0, r0, ip
    2c20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2c34:	10001c78 	andne	r1, r0, r8, ror ip
    2c38:	10001c80 	andne	r1, r0, r0, lsl #25
    2c3c:	80500001 	subshi	r0, r0, r1
    2c40:	8310001c 	tsthi	r0, #28
    2c44:	0110001c 	tsteq	r0, ip, lsl r0
    2c48:	1c835100 	stfnes	f5, [r3], {0}
    2c4c:	1c8c1000 	stcne	0, cr1, [ip], {0}
    2c50:	00011000 	andeq	r1, r1, r0
    2c54:	001c8c54 	andseq	r8, ip, r4, asr ip
    2c58:	001c9010 	andseq	r9, ip, r0, lsl r0
    2c5c:	f3000410 	vqshl.u8	d0, d0, d0
    2c60:	009f5001 	addseq	r5, pc, r1
	...
    2c6c:	c4000000 	strgt	r0, [r0], #-0
    2c70:	ca10001b 	bgt	402ce4 <__RAM_SIZE+0x302ce4>
    2c74:	0110001b 	tsteq	r0, fp, lsl r0
    2c78:	1bca5000 	blne	ff296c80 <__StackTop+0xc7196c80>
    2c7c:	1bfa1000 	blne	ffe86c84 <__StackTop+0xc7d86c84>
    2c80:	00041000 	andeq	r1, r4, r0
    2c84:	9f5001f3 	svcls	0x005001f3
	...
    2c90:	1bc80000 	blne	ff202c98 <__StackTop+0xc7102c98>
    2c94:	1bfa1000 	blne	ffe86c9c <__StackTop+0xc7d86c9c>
    2c98:	00011000 	andeq	r1, r1, r0
    2c9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2cb8:	001bce00 	andseq	ip, fp, r0, lsl #28
    2cbc:	001be810 	andseq	lr, fp, r0, lsl r8
    2cc0:	50000110 	andpl	r0, r0, r0, lsl r1
    2cc4:	10001be8 	andne	r1, r0, r8, ror #23
    2cc8:	10001bea 	andne	r1, r0, sl, ror #23
    2ccc:	01f3000a 	mvnseq	r0, sl
    2cd0:	0a254050 	beq	952e18 <__RAM_SIZE+0x852e18>
    2cd4:	9f1af800 	svcls	0x001af800
    2cd8:	10001bea 	andne	r1, r0, sl, ror #23
    2cdc:	10001bec 	andne	r1, r0, ip, ror #23
    2ce0:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    2ce4:	ee10001b 	mrc	0, 0, r0, cr0, cr11, {0}
    2ce8:	0a10001b 	beq	402d5c <__RAM_SIZE+0x302d5c>
    2cec:	5001f300 	andpl	pc, r1, r0, lsl #6
    2cf0:	000a2540 	andeq	r2, sl, r0, asr #10
    2cf4:	ee9f1af8 			; <UNDEFINED> instruction: 0xee9f1af8
    2cf8:	f010001b 			; <UNDEFINED> instruction: 0xf010001b
    2cfc:	0110001b 	tsteq	r0, fp, lsl r0
    2d00:	1bf05000 	blne	ffc16d08 <__StackTop+0xc7b16d08>
    2d04:	1bf21000 	blne	ffc86d0c <__StackTop+0xc7b86d0c>
    2d08:	000a1000 	andeq	r1, sl, r0
    2d0c:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2d10:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2d14:	1bf29f1a 	blne	ffcaa984 <__StackTop+0xc7baa984>
    2d18:	1bf41000 	blne	ffd06d20 <__StackTop+0xc7c06d20>
    2d1c:	00011000 	andeq	r1, r1, r0
    2d20:	001bf450 	andseq	pc, fp, r0, asr r4	; <UNPREDICTABLE>
    2d24:	001bf610 	andseq	pc, fp, r0, lsl r6	; <UNPREDICTABLE>
    2d28:	f3000a10 	vpmin.u8	d0, d0, d0
    2d2c:	25405001 	strbcs	r5, [r0, #-1]
    2d30:	1af8000a 	bne	ffe02d60 <__StackTop+0xc7d02d60>
    2d34:	001bf69f 	mulseq	fp, pc, r6	; <UNPREDICTABLE>
    2d38:	001bf810 	andseq	pc, fp, r0, lsl r8	; <UNPREDICTABLE>
    2d3c:	50000110 	andpl	r0, r0, r0, lsl r1
    2d40:	10001bf8 	strdne	r1, [r0], -r8
    2d44:	10001bfa 	strdne	r1, [r0], -sl
    2d48:	01f3000a 	mvnseq	r0, sl
    2d4c:	0a254050 	beq	952e94 <__RAM_SIZE+0x852e94>
    2d50:	9f1af800 	svcls	0x001af800
	...
    2d5c:	10001b98 	mulne	r0, r8, fp
    2d60:	10001b9a 	mulne	r0, sl, fp
    2d64:	007d0002 	rsbseq	r0, sp, r2
    2d68:	10001b9a 	mulne	r0, sl, fp
    2d6c:	10001bc2 	andne	r1, r0, r2, asr #23
    2d70:	087d0002 	ldmdaeq	sp!, {r1}^
    2d74:	10001bc2 	andne	r1, r0, r2, asr #23
    2d78:	10001bc4 	andne	r1, r0, r4, asr #23
    2d7c:	007d0002 	rsbseq	r0, sp, r2
	...
    2d8c:	10001b98 	mulne	r0, r8, fp
    2d90:	10001bb8 			; <UNDEFINED> instruction: 0x10001bb8
    2d94:	b8500001 	ldmdalt	r0, {r0}^
    2d98:	c410001b 	ldrgt	r0, [r0], #-27	; 0xffffffe5
    2d9c:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2da0:	5001f300 	andpl	pc, r1, r0, lsl #6
    2da4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2da8:	00000000 	andeq	r0, r0, r0
    2dac:	00000100 	andeq	r0, r0, r0, lsl #2
    2db0:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    2db4:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2db8:	0210001b 	andseq	r0, r0, #27
    2dbc:	bc9f3000 	ldclt	0, cr3, [pc], {0}
    2dc0:	c010001b 	andsgt	r0, r0, fp, lsl r0
    2dc4:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    2dc8:	40007000 	andmi	r7, r0, r0
    2dcc:	21007324 	tstcs	r0, r4, lsr #6
    2dd0:	001bc09f 	mulseq	fp, pc, r0	; <UNPREDICTABLE>
    2dd4:	001bc410 	andseq	ip, fp, r0, lsl r4
    2dd8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2de4:	00000003 	andeq	r0, r0, r3
    2de8:	10001b9e 	mulne	r0, lr, fp
    2dec:	10001ba0 	andne	r1, r0, r0, lsr #23
    2df0:	9f300002 	svcls	0x00300002
    2df4:	10001ba0 	andne	r1, r0, r0, lsr #23
    2df8:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2dfc:	00530001 	subseq	r0, r3, r1
    2e00:	00000000 	andeq	r0, r0, r0
    2e04:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2e08:	9a10001c 	bls	402e80 <__RAM_SIZE+0x302e80>
    2e0c:	0210001c 	andseq	r0, r0, #28
    2e10:	9a007d00 	bls	22218 <__HEAP_SIZE+0x21218>
    2e14:	e810001c 	ldmda	r0, {r2, r3, r4}
    2e18:	0210001c 	andseq	r0, r0, #28
    2e1c:	00087d00 	andeq	r7, r8, r0, lsl #26
    2e20:	00000000 	andeq	r0, r0, r0
    2e24:	c4000000 	strgt	r0, [r0], #-0
    2e28:	c610001f 			; <UNDEFINED> instruction: 0xc610001f
    2e2c:	0210001f 	andseq	r0, r0, #31
    2e30:	c6007d00 	strgt	r7, [r0], -r0, lsl #26
    2e34:	c810001f 	ldmdagt	r0, {r0, r1, r2, r3, r4}
    2e38:	0210001f 	andseq	r0, r0, #31
    2e3c:	c80c7d00 	stmdagt	ip, {r8, sl, fp, ip, sp, lr}
    2e40:	0610001f 			; <UNDEFINED> instruction: 0x0610001f
    2e44:	02100020 	andseq	r0, r0, #32
    2e48:	06187d00 	ldreq	r7, [r8], -r0, lsl #26
    2e4c:	10100020 	andsne	r0, r0, r0, lsr #32
    2e50:	02100020 	andseq	r0, r0, #32
    2e54:	000c7d00 	andeq	r7, ip, r0, lsl #26
    2e58:	00000000 	andeq	r0, r0, r0
    2e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    2e60:	01010101 	tsteq	r1, r1, lsl #2
    2e64:	001fc800 	andseq	ip, pc, r0, lsl #16
    2e68:	001fe610 	andseq	lr, pc, r0, lsl r6	; <UNPREDICTABLE>
    2e6c:	30000210 	andcc	r0, r0, r0, lsl r2
    2e70:	001fe69f 	mulseq	pc, pc, r6	; <UNPREDICTABLE>
    2e74:	001ff410 	andseq	pc, pc, r0, lsl r4	; <UNPREDICTABLE>
    2e78:	34000210 	strcc	r0, [r0], #-528	; 0xfffffdf0
    2e7c:	001ff49f 	mulseq	pc, pc, r4	; <UNPREDICTABLE>
    2e80:	00201010 	eoreq	r1, r0, r0, lsl r0
    2e84:	33000210 	movwcc	r0, #528	; 0x210
    2e88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2ea4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2ea8:	00000008 	andeq	r0, r0, r8
	...
    2eb8:	001fb400 	andseq	fp, pc, r0, lsl #8
    2ebc:	001fbc10 	andseq	fp, pc, r0, lsl ip	; <UNPREDICTABLE>
    2ec0:	50000110 	andpl	r0, r0, r0, lsl r1
    2ec4:	10001fbc 			; <UNDEFINED> instruction: 0x10001fbc
    2ec8:	10001fbe 			; <UNDEFINED> instruction: 0x10001fbe
    2ecc:	01f30004 	mvnseq	r0, r4
    2ed0:	1fbe9f50 	svcne	0x00be9f50
    2ed4:	1fc01000 	svcne	0x00c01000
    2ed8:	00011000 	andeq	r1, r1, r0
    2edc:	001fc050 	andseq	ip, pc, r0, asr r0	; <UNPREDICTABLE>
    2ee0:	001fc210 	andseq	ip, pc, r0, lsl r2	; <UNPREDICTABLE>
    2ee4:	f3000410 	vqshl.u8	d0, d0, d0
    2ee8:	009f5001 	addseq	r5, pc, r1
    2eec:	00000000 	andeq	r0, r0, r0
    2ef0:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    2ef4:	ba10001e 	blt	402f74 <__RAM_SIZE+0x302f74>
    2ef8:	0210001e 	andseq	r0, r0, #30
    2efc:	ba007d00 	blt	22304 <__HEAP_SIZE+0x21304>
    2f00:	b410001e 	ldrlt	r0, [r0], #-30	; 0xffffffe2
    2f04:	0210001f 	andseq	r0, r0, #31
    2f08:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2f14:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    2f18:	be10001e 	mrclt	0, 0, r0, cr0, cr14, {0}
    2f1c:	0110001e 	tsteq	r0, lr, lsl r0
    2f20:	1ebe5000 	cdpne	0, 11, cr5, cr14, cr0, {0}
    2f24:	1fb41000 	svcne	0x00b41000
    2f28:	00011000 	andeq	r1, r1, r0
    2f2c:	00000054 	andeq	r0, r0, r4, asr r0
    2f30:	00000000 	andeq	r0, r0, r0
    2f34:	00201000 	eoreq	r1, r0, r0
    2f38:	00201210 	eoreq	r1, r0, r0, lsl r2
    2f3c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2f40:	00201200 	eoreq	r1, r0, r0, lsl #4
    2f44:	00201410 	eoreq	r1, r0, r0, lsl r4
    2f48:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2f4c:	00201410 	eoreq	r1, r0, r0, lsl r4
    2f50:	00206610 	eoreq	r6, r0, r0, lsl r6
    2f54:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    2f58:	206600c0 	rsbcs	r0, r6, r0, asr #1
    2f5c:	20681000 	rsbcs	r1, r8, r0
    2f60:	00021000 	andeq	r1, r2, r0
    2f64:	2068107d 	rsbcs	r1, r8, sp, ror r0
    2f68:	20841000 	addcs	r1, r4, r0
    2f6c:	00031000 	andeq	r1, r3, r0
    2f70:	0000c07d 	andeq	ip, r0, sp, ror r0
	...
    2f7c:	10000000 	andne	r0, r0, r0
    2f80:	20100020 	andscs	r0, r0, r0, lsr #32
    2f84:	01100020 	tsteq	r0, r0, lsr #32
    2f88:	20205000 	eorcs	r5, r0, r0
    2f8c:	20841000 	addcs	r1, r4, r0
    2f90:	00011000 	andeq	r1, r1, r0
    2f94:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2fa0:	00201000 	eoreq	r1, r0, r0
    2fa4:	00201e10 	eoreq	r1, r0, r0, lsl lr
    2fa8:	51000110 	tstpl	r0, r0, lsl r1
    2fac:	1000201e 	andne	r2, r0, lr, lsl r0
    2fb0:	10002084 	andne	r2, r0, r4, lsl #1
    2fb4:	00560001 	subseq	r0, r6, r1
	...
    2fc0:	10000000 	andne	r0, r0, r0
    2fc4:	1c100020 	ldcne	0, cr0, [r0], {32}
    2fc8:	01100020 	tsteq	r0, r0, lsr #32
    2fcc:	201c5200 	andscs	r5, ip, r0, lsl #4
    2fd0:	20841000 	addcs	r1, r4, r0
    2fd4:	00011000 	andeq	r1, r1, r0
    2fd8:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2fe4:	00201000 	eoreq	r1, r0, r0
    2fe8:	00202310 	eoreq	r2, r0, r0, lsl r3
    2fec:	53000110 	movwpl	r0, #272	; 0x110
    2ff0:	10002023 	andne	r2, r0, r3, lsr #32
    2ff4:	10002084 	andne	r2, r0, r4, lsl #1
    2ff8:	01f30004 	mvnseq	r0, r4
    2ffc:	00009f53 	andeq	r9, r0, r3, asr pc
    3000:	00000000 	andeq	r0, r0, r0
    3004:	00010000 	andeq	r0, r1, r0
    3008:	00000100 	andeq	r0, r0, r0, lsl #2
    300c:	1000201a 	andne	r2, r0, sl, lsl r0
    3010:	10002064 	andne	r2, r0, r4, rrx
    3014:	9f300002 	svcls	0x00300002
    3018:	10002064 	andne	r2, r0, r4, rrx
    301c:	10002064 	andne	r2, r0, r4, rrx
    3020:	68500001 	ldmdavs	r0, {r0}^
    3024:	84100020 	ldrhi	r0, [r0], #-32	; 0xffffffe0
    3028:	02100020 	andseq	r0, r0, #32
    302c:	009f3000 	addseq	r3, pc, r0
    3030:	00000000 	andeq	r0, r0, r0
    3034:	01000000 	mrseq	r0, (UNDEF: 0)
    3038:	00000000 	andeq	r0, r0, r0
    303c:	00202400 	eoreq	r2, r0, r0, lsl #8
    3040:	00202e10 	eoreq	r2, r0, r0, lsl lr
    3044:	30000210 	andcc	r0, r0, r0, lsl r2
    3048:	00202e9f 	mlaeq	r0, pc, lr, r2	; <UNPREDICTABLE>
    304c:	00203710 	eoreq	r3, r0, r0, lsl r7
    3050:	50000110 	andpl	r0, r0, r0, lsl r1
    3054:	10002068 	andne	r2, r0, r8, rrx
    3058:	10002084 	andne	r2, r0, r4, lsl #1
    305c:	9f300002 	svcls	0x00300002
	...
    3070:	007d0002 	rsbseq	r0, sp, r2
	...
    307c:	107d0002 	rsbsne	r0, sp, r2
	...
    309c:	00500001 	subseq	r0, r0, r1
    30a0:	00000000 	andeq	r0, r0, r0
    30a4:	01000000 	mrseq	r0, (UNDEF: 0)
    30a8:	00005400 	andeq	r5, r0, r0, lsl #8
    30ac:	00000000 	andeq	r0, r0, r0
    30b0:	00010000 	andeq	r0, r1, r0
    30b4:	00000050 	andeq	r0, r0, r0, asr r0
    30b8:	00000000 	andeq	r0, r0, r0
    30bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    30c8:	00500001 	subseq	r0, r0, r1
    30cc:	00000000 	andeq	r0, r0, r0
    30d0:	01000000 	mrseq	r0, (UNDEF: 0)
    30d4:	00005400 	andeq	r5, r0, r0, lsl #8
    30d8:	00000000 	andeq	r0, r0, r0
    30dc:	00010000 	andeq	r0, r1, r0
    30e0:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    30f8:	9f300002 	svcls	0x00300002
	...
    3104:	00530001 	subseq	r0, r3, r1
    3108:	00000000 	andeq	r0, r0, r0
    310c:	02000000 	andeq	r0, r0, #0
    3110:	009f3000 	addseq	r3, pc, r0
    3114:	00000000 	andeq	r0, r0, r0
    3118:	01000000 	mrseq	r0, (UNDEF: 0)
    311c:	00005300 	andeq	r5, r0, r0, lsl #6
    3120:	00000000 	andeq	r0, r0, r0
    3124:	00020000 	andeq	r0, r2, r0
    3128:	00009f30 	andeq	r9, r0, r0, lsr pc
    312c:	00000000 	andeq	r0, r0, r0
    3130:	00010000 	andeq	r0, r1, r0
    3134:	00000050 	andeq	r0, r0, r0, asr r0
    3138:	00000000 	andeq	r0, r0, r0
    313c:	30000200 	andcc	r0, r0, r0, lsl #4
    3140:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3144:	00000000 	andeq	r0, r0, r0
    3148:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3154:	00530001 	subseq	r0, r3, r1
    3158:	00000000 	andeq	r0, r0, r0
    315c:	01000000 	mrseq	r0, (UNDEF: 0)
    3160:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    3174:	02000000 	andeq	r0, r0, #0
    3178:	009f3000 	addseq	r3, pc, r0
    317c:	00000000 	andeq	r0, r0, r0
    3180:	03000000 	movweq	r0, #0
    3184:	9f047000 	svcls	0x00047000
	...
    3190:	00750008 	rsbseq	r0, r5, r8
    3194:	00702432 	rsbseq	r2, r0, r2, lsr r4
    3198:	00009f22 	andeq	r9, r0, r2, lsr #30
    319c:	00000000 	andeq	r0, r0, r0
    31a0:	00080000 	andeq	r0, r8, r0
    31a4:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
    31a8:	9f220074 	svcls	0x00220074
	...
    31b4:	04700003 	ldrbteq	r0, [r0], #-3
    31b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31bc:	00000000 	andeq	r0, r0, r0
    31c0:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
    31c4:	74243200 	strtvc	r3, [r4], #-512	; 0xfffffe00
    31c8:	009f2200 	addseq	r2, pc, r0, lsl #4
    31cc:	00000000 	andeq	r0, r0, r0
    31d0:	03000000 	movweq	r0, #0
    31d4:	9f047000 	svcls	0x00047000
	...
    31e0:	04740003 	ldrbteq	r0, [r4], #-3
    31e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31e8:	00000000 	andeq	r0, r0, r0
    31ec:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    3200:	30000200 	andcc	r0, r0, r0, lsl #4
    3204:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3208:	00000000 	andeq	r0, r0, r0
    320c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3218:	70750003 	rsbsvc	r0, r5, r3
    321c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3220:	00000000 	andeq	r0, r0, r0
    3224:	30000200 	andcc	r0, r0, r0, lsl #4
    3228:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    322c:	00000000 	andeq	r0, r0, r0
    3230:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    3234:	00009f70 	andeq	r9, r0, r0, ror pc
    3238:	00000000 	andeq	r0, r0, r0
    323c:	00020000 	andeq	r0, r2, r0
    3240:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    3250:	100020d6 	ldrdne	r2, [r0], -r6
    3254:	100020ee 	andne	r2, r0, lr, ror #1
    3258:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    325c:	f4100020 			; <UNDEFINED> instruction: 0xf4100020
    3260:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    3264:	5001f300 	andpl	pc, r1, r0, lsl #6
    3268:	0020f49f 	mlaeq	r0, pc, r4, pc	; <UNPREDICTABLE>
    326c:	0020fa10 	eoreq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    3270:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    327c:	20d80000 	sbcscs	r0, r8, r0
    3280:	20fa1000 	rscscs	r1, sl, r0
    3284:	00011000 	andeq	r1, r1, r0
    3288:	00000053 	andeq	r0, r0, r3, asr r0
    328c:	00000000 	andeq	r0, r0, r0
    3290:	0020a400 	eoreq	sl, r0, r0, lsl #8
    3294:	0020a610 	eoreq	sl, r0, r0, lsl r6
    3298:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    329c:	0020a600 	eoreq	sl, r0, r0, lsl #12
    32a0:	0020d010 	eoreq	sp, r0, r0, lsl r0
    32a4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    32a8:	0020d008 	eoreq	sp, r0, r8
    32ac:	0020d210 	eoreq	sp, r0, r0, lsl r2
    32b0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    32b4:	0020d200 	eoreq	sp, r0, r0, lsl #4
    32b8:	0020d610 	eoreq	sp, r0, r0, lsl r6
    32bc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    32c0:	00000008 	andeq	r0, r0, r8
	...
    32cc:	b2000000 	andlt	r0, r0, #0
    32d0:	b6100020 	ldrlt	r0, [r0], -r0, lsr #32
    32d4:	01100020 	tsteq	r0, r0, lsr #32
    32d8:	20b65300 	adcscs	r5, r6, r0, lsl #6
    32dc:	20d01000 	sbcscs	r1, r0, r0
    32e0:	00011000 	andeq	r1, r1, r0
    32e4:	0020d454 	eoreq	sp, r0, r4, asr r4
    32e8:	0020d610 	eoreq	sp, r0, r0, lsl r6
    32ec:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    32fc:	100020a8 	andne	r2, r0, r8, lsr #1
    3300:	100020d0 	ldrdne	r2, [r0], -r0
    3304:	d2550001 	subsle	r0, r5, #1
    3308:	d6100020 	ldrle	r0, [r0], -r0, lsr #32
    330c:	01100020 	tsteq	r0, r0, lsr #32
    3310:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3324:	00530001 	subseq	r0, r3, r1
    3328:	00000000 	andeq	r0, r0, r0
    332c:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    3330:	b0100021 	andslt	r0, r0, r1, lsr #32
    3334:	02100021 	andseq	r0, r0, #33	; 0x21
    3338:	b0007d00 	andlt	r7, r0, r0, lsl #26
    333c:	b2100021 	andslt	r0, r0, #33	; 0x21
    3340:	02100021 	andseq	r0, r0, #33	; 0x21
    3344:	b2107d00 	andslt	r7, r0, #0, 26
    3348:	c4100021 	ldrgt	r0, [r0], #-33	; 0xffffffdf
    334c:	02100021 	andseq	r0, r0, #33	; 0x21
    3350:	c4187d00 	ldrgt	r7, [r8], #-3328	; 0xfffff300
    3354:	c6100021 	ldrgt	r0, [r0], -r1, lsr #32
    3358:	02100021 	andseq	r0, r0, #33	; 0x21
    335c:	c6107d00 	ldrgt	r7, [r0], -r0, lsl #26
    3360:	06100021 	ldreq	r0, [r0], -r1, lsr #32
    3364:	02100022 	andseq	r0, r0, #34	; 0x22
    3368:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    3378:	0021ae00 	eoreq	sl, r1, r0, lsl #28
    337c:	0021c010 	eoreq	ip, r1, r0, lsl r0
    3380:	50000110 	andpl	r0, r0, r0, lsl r1
    3384:	100021c6 	andne	r2, r0, r6, asr #3
    3388:	100021d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    338c:	d2500001 	subsle	r0, r0, #1
    3390:	d5100021 	ldrle	r0, [r0, #-33]	; 0xffffffdf
    3394:	02100021 	andseq	r0, r0, #33	; 0x21
    3398:	00007100 	andeq	r7, r0, r0, lsl #2
	...
    33a4:	0021b600 	eoreq	fp, r1, r0, lsl #12
    33a8:	00220610 	eoreq	r0, r2, r0, lsl r6
    33ac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    33b8:	00000001 	andeq	r0, r0, r1
	...
    33c4:	21b60000 			; <UNDEFINED> instruction: 0x21b60000
    33c8:	21c01000 	biccs	r1, r0, r0
    33cc:	00021000 	andeq	r1, r2, r0
    33d0:	21c69f30 	biccs	r9, r6, r0, lsr pc
    33d4:	21d81000 	bicscs	r1, r8, r0
    33d8:	00021000 	andeq	r1, r2, r0
    33dc:	21d89f30 	bicscs	r9, r8, r0, lsr pc
    33e0:	21e81000 	mvncs	r1, r0
    33e4:	00011000 	andeq	r1, r1, r0
    33e8:	0021e850 	eoreq	lr, r1, r0, asr r8
    33ec:	0021f210 	eoreq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
    33f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    33f4:	100021f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    33f8:	100021f4 	strdne	r2, [r0], -r4
    33fc:	9f310002 	svcls	0x00310002
    3400:	100021f4 	strdne	r2, [r0], -r4
    3404:	100021f7 	strdne	r2, [r0], -r7
    3408:	f7500001 			; <UNDEFINED> instruction: 0xf7500001
    340c:	06100021 	ldreq	r0, [r0], -r1, lsr #32
    3410:	01100022 	tsteq	r0, r2, lsr #32
    3414:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3420:	21cc0000 	biccs	r0, ip, r0
    3424:	21fe1000 	mvnscs	r1, r0
    3428:	00011000 	andeq	r1, r1, r0
    342c:	0021fe56 	eoreq	pc, r1, r6, asr lr	; <UNPREDICTABLE>
    3430:	00220010 	eoreq	r0, r2, r0, lsl r0
    3434:	76000310 			; <UNDEFINED> instruction: 0x76000310
    3438:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
    3444:	100021f8 	strdne	r2, [r0], -r8
    3448:	10002206 	andne	r2, r0, r6, lsl #4
    344c:	00500001 	subseq	r0, r0, r1
	...
    345c:	02000000 	andeq	r0, r0, #0
    3460:	00007d00 	andeq	r7, r0, r0, lsl #26
    3464:	00000000 	andeq	r0, r0, r0
    3468:	02000000 	andeq	r0, r0, #0
    346c:	00047d00 	andeq	r7, r4, r0, lsl #26
    3470:	00000000 	andeq	r0, r0, r0
    3474:	02000000 	andeq	r0, r0, #0
    3478:	00107d00 	andseq	r7, r0, r0, lsl #26
    347c:	00000000 	andeq	r0, r0, r0
    3480:	02000000 	andeq	r0, r0, #0
    3484:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    3498:	01000000 	mrseq	r0, (UNDEF: 0)
    349c:	00005000 	andeq	r5, r0, r0
    34a0:	00000000 	andeq	r0, r0, r0
    34a4:	00040000 	andeq	r0, r4, r0
    34a8:	9f5001f3 	svcls	0x005001f3
	...
    34bc:	007d0002 	rsbseq	r0, sp, r2
	...
    34c8:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    34d4:	107d0002 	rsbsne	r0, sp, r2
	...
    34e0:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    34f8:	00500001 	subseq	r0, r0, r1
    34fc:	00000000 	andeq	r0, r0, r0
    3500:	04000000 	streq	r0, [r0], #-0
    3504:	5001f300 	andpl	pc, r1, r0, lsl #6
    3508:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    351c:	01000000 	mrseq	r0, (UNDEF: 0)
    3520:	00005100 	andeq	r5, r0, r0, lsl #2
    3524:	00000000 	andeq	r0, r0, r0
    3528:	00010000 	andeq	r0, r1, r0
    352c:	00000052 	andeq	r0, r0, r2, asr r0
    3530:	00000000 	andeq	r0, r0, r0
    3534:	f3000400 	vshl.u8	d0, d0, d0
    3538:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3548:	02000000 	andeq	r0, r0, #0
    354c:	00007d00 	andeq	r7, r0, r0, lsl #26
    3550:	00000000 	andeq	r0, r0, r0
    3554:	02000000 	andeq	r0, r0, #0
    3558:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3574:	01000000 	mrseq	r0, (UNDEF: 0)
    3578:	00005000 	andeq	r5, r0, r0
    357c:	00000000 	andeq	r0, r0, r0
    3580:	00040000 	andeq	r0, r4, r0
    3584:	9f5001f3 	svcls	0x005001f3
	...
    3590:	00500001 	subseq	r0, r0, r1
    3594:	00000000 	andeq	r0, r0, r0
    3598:	01000000 	mrseq	r0, (UNDEF: 0)
    359c:	00005400 	andeq	r5, r0, r0, lsl #8
    35a0:	00000000 	andeq	r0, r0, r0
    35a4:	00010000 	andeq	r0, r1, r0
    35a8:	00000050 	andeq	r0, r0, r0, asr r0
    35ac:	00000000 	andeq	r0, r0, r0
    35b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    35bc:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    35cc:	00510001 	subseq	r0, r1, r1
    35d0:	00000000 	andeq	r0, r0, r0
    35d4:	04000000 	streq	r0, [r0], #-0
    35d8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    35dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35e0:	00000000 	andeq	r0, r0, r0
    35e4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    35f0:	01f30004 	mvnseq	r0, r4
    35f4:	00009f51 	andeq	r9, r0, r1, asr pc
    35f8:	00000000 	andeq	r0, r0, r0
    35fc:	02000000 	andeq	r0, r0, #0
    3600:	00000001 	andeq	r0, r0, r1
    3604:	00000000 	andeq	r0, r0, r0
    3608:	00020000 	andeq	r0, r2, r0
    360c:	00009f30 	andeq	r9, r0, r0, lsr pc
    3610:	00000000 	andeq	r0, r0, r0
    3614:	00020000 	andeq	r0, r2, r0
    3618:	00009f31 	andeq	r9, r0, r1, lsr pc
    361c:	00000000 	andeq	r0, r0, r0
    3620:	00030000 	andeq	r0, r3, r0
	...
    3634:	00010000 	andeq	r0, r1, r0
    3638:	00000050 	andeq	r0, r0, r0, asr r0
    363c:	00000000 	andeq	r0, r0, r0
    3640:	f3000400 	vshl.u8	d0, d0, d0
    3644:	009f5001 	addseq	r5, pc, r1
    3648:	00000000 	andeq	r0, r0, r0
    364c:	01000000 	mrseq	r0, (UNDEF: 0)
    3650:	00005000 	andeq	r5, r0, r0
    3654:	00000000 	andeq	r0, r0, r0
    3658:	00010000 	andeq	r0, r1, r0
    365c:	00000054 	andeq	r0, r0, r4, asr r0
    3660:	00000000 	andeq	r0, r0, r0
    3664:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3670:	00540001 	subseq	r0, r4, r1
	...
    3680:	02000000 	andeq	r0, r0, #0
    3684:	00007d00 	andeq	r7, r0, r0, lsl #26
    3688:	00000000 	andeq	r0, r0, r0
    368c:	02000000 	andeq	r0, r0, #0
    3690:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    36b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    36bc:	00540001 	subseq	r0, r4, r1
    36c0:	00000000 	andeq	r0, r0, r0
    36c4:	04000000 	streq	r0, [r0], #-0
    36c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    36cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    36d0:	00000000 	andeq	r0, r0, r0
    36d4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    36e0:	01f30004 	mvnseq	r0, r4
    36e4:	00009f50 	andeq	r9, r0, r0, asr pc
    36e8:	00000000 	andeq	r0, r0, r0
    36ec:	00010000 	andeq	r0, r1, r0
    36f0:	00000054 	andeq	r0, r0, r4, asr r0
    36f4:	00000000 	andeq	r0, r0, r0
    36f8:	f3000400 	vshl.u8	d0, d0, d0
    36fc:	009f5001 	addseq	r5, pc, r1
	...
    3710:	01000000 	mrseq	r0, (UNDEF: 0)
    3714:	00005100 	andeq	r5, r0, r0, lsl #2
    3718:	00000000 	andeq	r0, r0, r0
    371c:	00010000 	andeq	r0, r1, r0
    3720:	00000055 	andeq	r0, r0, r5, asr r0
    3724:	00000000 	andeq	r0, r0, r0
    3728:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3734:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3740:	9f310002 	svcls	0x00310002
	...
    3754:	007d0002 	rsbseq	r0, sp, r2
	...
    3760:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3778:	00500001 	subseq	r0, r0, r1
    377c:	00000000 	andeq	r0, r0, r0
    3780:	04000000 	streq	r0, [r0], #-0
    3784:	5001f300 	andpl	pc, r1, r0, lsl #6
    3788:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3798:	01000000 	mrseq	r0, (UNDEF: 0)
    379c:	00005000 	andeq	r5, r0, r0
    37a0:	00000000 	andeq	r0, r0, r0
    37a4:	24620000 	strbtcs	r0, [r2], #-0
    37a8:	24641000 	strbtcs	r1, [r4], #-0
    37ac:	00021000 	andeq	r1, r2, r0
    37b0:	2464007d 	strbtcs	r0, [r4], #-125	; 0xffffff83
    37b4:	24b41000 	ldrtcs	r1, [r4], #0
    37b8:	00021000 	andeq	r1, r2, r0
    37bc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    37c8:	24620000 	strbtcs	r0, [r2], #-0
    37cc:	246d1000 	strbtcs	r1, [sp], #-0
    37d0:	00011000 	andeq	r1, r1, r0
    37d4:	00246d50 	eoreq	r6, r4, r0, asr sp
    37d8:	0024b410 	eoreq	fp, r4, r0, lsl r4
    37dc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    37ec:	10002462 	andne	r2, r0, r2, ror #8
    37f0:	1000246d 	andne	r2, r0, sp, ror #8
    37f4:	6d510001 	ldclvs	0, cr0, [r1, #-4]
    37f8:	b4100024 	ldrlt	r0, [r0], #-36	; 0xffffffdc
    37fc:	01100024 	tsteq	r0, r4, lsr #32
    3800:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    380c:	24620000 	strbtcs	r0, [r2], #-0
    3810:	246d1000 	strbtcs	r1, [sp], #-0
    3814:	00011000 	andeq	r1, r1, r0
    3818:	00246d52 	eoreq	r6, r4, r2, asr sp
    381c:	0024b410 	eoreq	fp, r4, r0, lsl r4
    3820:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    382c:	00000001 	andeq	r0, r0, r1
    3830:	1000246a 	andne	r2, r0, sl, ror #8
    3834:	1000246d 	andne	r2, r0, sp, ror #8
    3838:	6d500001 	ldclvs	0, cr0, [r0, #-4]
    383c:	b4100024 	ldrlt	r0, [r0], #-36	; 0xffffffdc
    3840:	01100024 	tsteq	r0, r4, lsr #32
    3844:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    385c:	00010000 	andeq	r0, r1, r0
    3860:	00000050 	andeq	r0, r0, r0, asr r0
    3864:	00000000 	andeq	r0, r0, r0
    3868:	f3000400 	vshl.u8	d0, d0, d0
    386c:	009f5001 	addseq	r5, pc, r1
    3870:	00000000 	andeq	r0, r0, r0
    3874:	01000000 	mrseq	r0, (UNDEF: 0)
    3878:	00005000 	andeq	r5, r0, r0
    387c:	00000000 	andeq	r0, r0, r0
    3880:	00040000 	andeq	r0, r4, r0
    3884:	9f5001f3 	svcls	0x005001f3
	...
    3898:	00020000 	andeq	r0, r2, r0
    389c:	00009f30 	andeq	r9, r0, r0, lsr pc
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	00030000 	andeq	r0, r3, r0
	...
    38b4:	00010000 	andeq	r0, r1, r0
    38b8:	00000050 	andeq	r0, r0, r0, asr r0
    38bc:	00000000 	andeq	r0, r0, r0
    38c0:	f3000400 	vshl.u8	d0, d0, d0
    38c4:	009f5001 	addseq	r5, pc, r1
    38c8:	00000000 	andeq	r0, r0, r0
    38cc:	01000000 	mrseq	r0, (UNDEF: 0)
    38d0:	00005000 	andeq	r5, r0, r0
    38d4:	00000000 	andeq	r0, r0, r0
    38d8:	00040000 	andeq	r0, r4, r0
    38dc:	9f5001f3 	svcls	0x005001f3
	...
    38f0:	007d0002 	rsbseq	r0, sp, r2
	...
    38fc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3918:	00010000 	andeq	r0, r1, r0
    391c:	00000050 	andeq	r0, r0, r0, asr r0
    3920:	00000000 	andeq	r0, r0, r0
    3924:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3930:	01f30004 	mvnseq	r0, r4
    3934:	00009f50 	andeq	r9, r0, r0, asr pc
    3938:	00000000 	andeq	r0, r0, r0
    393c:	00010000 	andeq	r0, r1, r0
    3940:	00000054 	andeq	r0, r0, r4, asr r0
    3944:	00000000 	andeq	r0, r0, r0
    3948:	f3000400 	vshl.u8	d0, d0, d0
    394c:	009f5001 	addseq	r5, pc, r1
	...
    3960:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    397c:	00500001 	subseq	r0, r0, r1
    3980:	00000000 	andeq	r0, r0, r0
    3984:	04000000 	streq	r0, [r0], #-0
    3988:	5001f300 	andpl	pc, r1, r0, lsl #6
    398c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3990:	00000000 	andeq	r0, r0, r0
    3994:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    39a0:	01f30004 	mvnseq	r0, r4
    39a4:	00009f50 	andeq	r9, r0, r0, asr pc
    39a8:	00000000 	andeq	r0, r0, r0
    39ac:	00030000 	andeq	r0, r3, r0
	...
    39bc:	00010000 	andeq	r0, r1, r0
    39c0:	00000050 	andeq	r0, r0, r0, asr r0
    39c4:	00000000 	andeq	r0, r0, r0
    39c8:	f3000400 	vshl.u8	d0, d0, d0
    39cc:	009f5001 	addseq	r5, pc, r1
    39d0:	00000000 	andeq	r0, r0, r0
    39d4:	01000000 	mrseq	r0, (UNDEF: 0)
    39d8:	00005000 	andeq	r5, r0, r0
    39dc:	00000000 	andeq	r0, r0, r0
    39e0:	00040000 	andeq	r0, r4, r0
    39e4:	9f5001f3 	svcls	0x005001f3
	...
    39f0:	100020fa 	strdne	r2, [r0], -sl
    39f4:	100020fc 	strdne	r2, [r0], -ip
    39f8:	007d0002 	rsbseq	r0, sp, r2
    39fc:	100020fc 	strdne	r2, [r0], -ip
    3a00:	10002114 	andne	r2, r0, r4, lsl r1
    3a04:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3a18:	20fa0000 	rscscs	r0, sl, r0
    3a1c:	21011000 	mrscs	r1, (UNDEF: 1)
    3a20:	00011000 	andeq	r1, r1, r0
    3a24:	00210150 	eoreq	r0, r1, r0, asr r1
    3a28:	00210810 	eoreq	r0, r1, r0, lsl r8
    3a2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3a30:	10002108 	andne	r2, r0, r8, lsl #2
    3a34:	10002110 	andne	r2, r0, r0, lsl r1
    3a38:	01f30004 	mvnseq	r0, r4
    3a3c:	21109f50 	tstcs	r0, r0, asr pc
    3a40:	21121000 	tstcs	r2, r0
    3a44:	00011000 	andeq	r1, r1, r0
    3a48:	00211254 	eoreq	r1, r1, r4, asr r2
    3a4c:	00211410 	eoreq	r1, r1, r0, lsl r4
    3a50:	f3000410 	vqshl.u8	d0, d0, d0
    3a54:	009f5001 	addseq	r5, pc, r1
	...
    3a60:	00210800 	eoreq	r0, r1, r0, lsl #16
    3a64:	00211010 	eoreq	r1, r1, r0, lsl r0
    3a68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3a74:	10002206 	andne	r2, r0, r6, lsl #4
    3a78:	10002208 	andne	r2, r0, r8, lsl #4
    3a7c:	007d0002 	rsbseq	r0, sp, r2
    3a80:	10002208 	andne	r2, r0, r8, lsl #4
    3a84:	10002288 	andne	r2, r0, r8, lsl #5
    3a88:	107d0002 	rsbsne	r0, sp, r2
	...
    3a98:	10002206 	andne	r2, r0, r6, lsl #4
    3a9c:	1000220d 	andne	r2, r0, sp, lsl #4
    3aa0:	0d500001 	ldcleq	0, cr0, [r0, #-4]
    3aa4:	88100022 	ldmdahi	r0, {r1, r5}
    3aa8:	01100022 	tsteq	r0, r2, lsr #32
    3aac:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3ab8:	22140000 	andscs	r0, r4, #0
    3abc:	22261000 	eorcs	r1, r6, #0
    3ac0:	00011000 	andeq	r1, r1, r0
    3ac4:	00222854 	eoreq	r2, r2, r4, asr r8
    3ac8:	00225a10 	eoreq	r5, r2, r0, lsl sl
    3acc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3adc:	1000225c 	andne	r2, r0, ip, asr r2
    3ae0:	10002260 	andne	r2, r0, r0, ror #4
    3ae4:	62540001 	subsvs	r0, r4, #1
    3ae8:	88100022 	ldmdahi	r0, {r1, r5}
    3aec:	01100022 	tsteq	r0, r2, lsr #32
    3af0:	00005400 	andeq	r5, r0, r0, lsl #8
    3af4:	00000000 	andeq	r0, r0, r0
    3af8:	218a0000 	orrcs	r0, sl, r0
    3afc:	21921000 	orrscs	r1, r2, r0
    3b00:	00021000 	andeq	r1, r2, r0
    3b04:	2192007d 	orrscs	r0, r2, sp, ror r0
    3b08:	21ac1000 			; <UNDEFINED> instruction: 0x21ac1000
    3b0c:	00021000 	andeq	r1, r2, r0
    3b10:	21ac087d 			; <UNDEFINED> instruction: 0x21ac087d
    3b14:	21ae1000 			; <UNDEFINED> instruction: 0x21ae1000
    3b18:	00021000 	andeq	r1, r2, r0
    3b1c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    3b2c:	218a0000 	orrcs	r0, sl, r0
    3b30:	21941000 	orrscs	r1, r4, r0
    3b34:	00011000 	andeq	r1, r1, r0
    3b38:	00219450 	eoreq	r9, r1, r0, asr r4
    3b3c:	0021a910 	eoreq	sl, r1, r0, lsl r9
    3b40:	53000110 	movwpl	r0, #272	; 0x110
    3b44:	100021a9 	andne	r2, r0, r9, lsr #3
    3b48:	100021ac 	andne	r2, r0, ip, lsr #3
    3b4c:	01f30004 	mvnseq	r0, r4
    3b50:	21ac9f50 			; <UNDEFINED> instruction: 0x21ac9f50
    3b54:	21ae1000 			; <UNDEFINED> instruction: 0x21ae1000
    3b58:	00011000 	andeq	r1, r1, r0
    3b5c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    3b6c:	00218a00 	eoreq	r8, r1, r0, lsl #20
    3b70:	00219610 	eoreq	r9, r1, r0, lsl r6
    3b74:	51000110 	tstpl	r0, r0, lsl r1
    3b78:	10002196 	mulne	r0, r6, r1
    3b7c:	100021a9 	andne	r2, r0, r9, lsr #3
    3b80:	a9500001 	ldmdbge	r0, {r0}^
    3b84:	ac100021 	ldcge	0, cr0, [r0], {33}	; 0x21
    3b88:	04100021 	ldreq	r0, [r0], #-33	; 0xffffffdf
    3b8c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3b90:	0021ac9f 	mlaeq	r1, pc, ip, sl	; <UNPREDICTABLE>
    3b94:	0021ae10 	eoreq	sl, r1, r0, lsl lr
    3b98:	51000110 	tstpl	r0, r0, lsl r1
	...
    3ba4:	10002114 	andne	r2, r0, r4, lsl r1
    3ba8:	10002116 	andne	r2, r0, r6, lsl r1
    3bac:	007d0002 	rsbseq	r0, sp, r2
    3bb0:	10002116 	andne	r2, r0, r6, lsl r1
    3bb4:	1000218a 	andne	r2, r0, sl, lsl #3
    3bb8:	107d0002 	rsbsne	r0, sp, r2
	...
    3bd4:	10002114 	andne	r2, r0, r4, lsl r1
    3bd8:	10002126 	andne	r2, r0, r6, lsr #2
    3bdc:	26500001 	ldrbcs	r0, [r0], -r1
    3be0:	2c100021 	ldccs	0, cr0, [r0], {33}	; 0x21
    3be4:	01100021 	tsteq	r0, r1, lsr #32
    3be8:	212c5400 			; <UNDEFINED> instruction: 0x212c5400
    3bec:	212e1000 			; <UNDEFINED> instruction: 0x212e1000
    3bf0:	00011000 	andeq	r1, r1, r0
    3bf4:	00212e50 	eoreq	r2, r1, r0, asr lr
    3bf8:	00213810 	eoreq	r3, r1, r0, lsl r8
    3bfc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3c00:	10002138 	andne	r2, r0, r8, lsr r1
    3c04:	1000213c 	andne	r2, r0, ip, lsr r1
    3c08:	3c500001 	mrrccc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    3c0c:	56100021 	ldrpl	r0, [r0], -r1, lsr #32
    3c10:	01100021 	tsteq	r0, r1, lsr #32
    3c14:	21565400 	cmpcs	r6, r0, lsl #8
    3c18:	21581000 	cmpcs	r8, r0
    3c1c:	00011000 	andeq	r1, r1, r0
    3c20:	00215850 	eoreq	r5, r1, r0, asr r8
    3c24:	00218a10 	eoreq	r8, r1, r0, lsl sl
    3c28:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3c44:	10002114 	andne	r2, r0, r4, lsl r1
    3c48:	10002126 	andne	r2, r0, r6, lsr #2
    3c4c:	26510001 	ldrbcs	r0, [r1], -r1
    3c50:	2c100021 	ldccs	0, cr0, [r0], {33}	; 0x21
    3c54:	04100021 	ldreq	r0, [r0], #-33	; 0xffffffdf
    3c58:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3c5c:	00212c9f 	mlaeq	r1, pc, ip, r2	; <UNPREDICTABLE>
    3c60:	00213110 	eoreq	r3, r1, r0, lsl r1
    3c64:	51000110 	tstpl	r0, r0, lsl r1
    3c68:	10002131 	andne	r2, r0, r1, lsr r1
    3c6c:	10002138 	andne	r2, r0, r8, lsr r1
    3c70:	01f30004 	mvnseq	r0, r4
    3c74:	21389f51 	teqcs	r8, r1, asr pc
    3c78:	213f1000 	teqcs	pc, r0
    3c7c:	00011000 	andeq	r1, r1, r0
    3c80:	00213f51 	eoreq	r3, r1, r1, asr pc
    3c84:	00215610 	eoreq	r5, r1, r0, lsl r6
    3c88:	f3000410 	vqshl.u8	d0, d0, d0
    3c8c:	569f5101 	ldrpl	r5, [pc], r1, lsl #2
    3c90:	5b100021 	blpl	403d1c <__RAM_SIZE+0x303d1c>
    3c94:	01100021 	tsteq	r0, r1, lsr #32
    3c98:	215b5100 	cmpcs	fp, r0, lsl #2
    3c9c:	218a1000 	orrcs	r1, sl, r0
    3ca0:	00041000 	andeq	r1, r4, r0
    3ca4:	9f5101f3 	svcls	0x005101f3
	...
    3cb4:	10002114 	andne	r2, r0, r4, lsl r1
    3cb8:	1000211e 	andne	r2, r0, lr, lsl r1
    3cbc:	1e520001 	cdpne	0, 5, cr0, cr2, cr1, {0}
    3cc0:	8a100021 	bhi	403d4c <__RAM_SIZE+0x303d4c>
    3cc4:	01100021 	tsteq	r0, r1, lsr #32
    3cc8:	00005500 	andeq	r5, r0, r0, lsl #10
    3ccc:	00000000 	andeq	r0, r0, r0
    3cd0:	00010000 	andeq	r0, r1, r0
	...
    3cdc:	1000211a 	andne	r2, r0, sl, lsl r1
    3ce0:	10002126 	andne	r2, r0, r6, lsr #2
    3ce4:	9f300002 	svcls	0x00300002
    3ce8:	10002126 	andne	r2, r0, r6, lsr #2
    3cec:	1000212c 	andne	r2, r0, ip, lsr #2
    3cf0:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    3cf4:	32100021 	andscc	r0, r0, #33	; 0x21
    3cf8:	02100021 	andseq	r0, r0, #33	; 0x21
    3cfc:	329f3000 	addscc	r3, pc, #0
    3d00:	38100021 	ldmdacc	r0, {r0, r5}
    3d04:	01100021 	tsteq	r0, r1, lsr #32
    3d08:	21385000 	teqcs	r8, r0
    3d0c:	218a1000 	orrcs	r1, sl, r0
    3d10:	00021000 	andeq	r1, r2, r0
    3d14:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    3d24:	1000211c 	andne	r2, r0, ip, lsl r1
    3d28:	10002128 	andne	r2, r0, r8, lsr #2
    3d2c:	28560001 	ldmdacs	r6, {r0}^
    3d30:	2c100021 	ldccs	0, cr0, [r0], {33}	; 0x21
    3d34:	03100021 	tsteq	r0, #33	; 0x21
    3d38:	9f7f7600 	svcls	0x007f7600
    3d3c:	1000212c 	andne	r2, r0, ip, lsr #2
    3d40:	1000218a 	andne	r2, r0, sl, lsl #3
    3d44:	00560001 	subseq	r0, r6, r1
	...
    3d5c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3d68:	00530001 	subseq	r0, r3, r1
    3d6c:	00000000 	andeq	r0, r0, r0
    3d70:	04000000 	streq	r0, [r0], #-0
    3d74:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	00010000 	andeq	r0, r1, r0
    3d84:	00000000 	andeq	r0, r0, r0
    3d88:	01000000 	mrseq	r0, (UNDEF: 0)
    3d8c:	00005000 	andeq	r5, r0, r0
	...
    3da0:	00010000 	andeq	r0, r1, r0
    3da4:	00000050 	andeq	r0, r0, r0, asr r0
    3da8:	00000000 	andeq	r0, r0, r0
    3dac:	f3000400 	vshl.u8	d0, d0, d0
    3db0:	009f5001 	addseq	r5, pc, r1
	...
    3dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    3dc8:	00005000 	andeq	r5, r0, r0
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	00040000 	andeq	r0, r4, r0
    3dd4:	9f5001f3 	svcls	0x005001f3
	...
    3dec:	00500001 	subseq	r0, r0, r1
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	04000000 	streq	r0, [r0], #-0
    3df8:	5001f300 	andpl	pc, r1, r0, lsl #6
    3dfc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3e10:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3e1c:	01f30004 	mvnseq	r0, r4
    3e20:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3e30:	00020000 	andeq	r0, r2, r0
    3e34:	0000007d 	andeq	r0, r0, sp, ror r0
    3e38:	00000000 	andeq	r0, r0, r0
    3e3c:	00020000 	andeq	r0, r2, r0
    3e40:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3e58:	00010000 	andeq	r0, r1, r0
    3e5c:	00000050 	andeq	r0, r0, r0, asr r0
    3e60:	00000000 	andeq	r0, r0, r0
    3e64:	f3000400 	vshl.u8	d0, d0, d0
    3e68:	009f5001 	addseq	r5, pc, r1
    3e6c:	00000000 	andeq	r0, r0, r0
    3e70:	01000000 	mrseq	r0, (UNDEF: 0)
    3e74:	00005000 	andeq	r5, r0, r0
    3e78:	00000000 	andeq	r0, r0, r0
    3e7c:	00040000 	andeq	r0, r4, r0
    3e80:	9f5001f3 	svcls	0x005001f3
	...
    3e8c:	00000001 	andeq	r0, r0, r1
	...
    3e9c:	00500001 	subseq	r0, r0, r1
    3ea0:	00000000 	andeq	r0, r0, r0
    3ea4:	04000000 	streq	r0, [r0], #-0
    3ea8:	5001f300 	andpl	pc, r1, r0, lsl #6
    3eac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3eb0:	00000000 	andeq	r0, r0, r0
    3eb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3ec0:	01f30004 	mvnseq	r0, r4
    3ec4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3ed8:	00010000 	andeq	r0, r1, r0
    3edc:	00000050 	andeq	r0, r0, r0, asr r0
    3ee0:	00000000 	andeq	r0, r0, r0
    3ee4:	f3000400 	vshl.u8	d0, d0, d0
    3ee8:	009f5001 	addseq	r5, pc, r1
	...
    3efc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3f08:	00000003 	andeq	r0, r0, r3
	...
    3f14:	00500001 	subseq	r0, r0, r1
    3f18:	00000000 	andeq	r0, r0, r0
    3f1c:	04000000 	streq	r0, [r0], #-0
    3f20:	5001f300 	andpl	pc, r1, r0, lsl #6
    3f24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3f34:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3f40:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3f44:	00000008 	andeq	r0, r0, r8
	...
    3f58:	01000000 	mrseq	r0, (UNDEF: 0)
    3f5c:	00005000 	andeq	r5, r0, r0
    3f60:	00000000 	andeq	r0, r0, r0
    3f64:	00010000 	andeq	r0, r1, r0
    3f68:	00000054 	andeq	r0, r0, r4, asr r0
    3f6c:	00000000 	andeq	r0, r0, r0
    3f70:	f3000400 	vshl.u8	d0, d0, d0
    3f74:	009f5001 	addseq	r5, pc, r1
	...
    3f88:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3f94:	00000002 	andeq	r0, r0, r2
	...
    3fa0:	00010000 	andeq	r0, r1, r0
    3fa4:	00000050 	andeq	r0, r0, r0, asr r0
    3fa8:	00000000 	andeq	r0, r0, r0
    3fac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3fb8:	01f30004 	mvnseq	r0, r4
    3fbc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3fcc:	00020000 	andeq	r0, r2, r0
    3fd0:	0000007d 	andeq	r0, r0, sp, ror r0
    3fd4:	00000000 	andeq	r0, r0, r0
    3fd8:	00020000 	andeq	r0, r2, r0
    3fdc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3ff4:	00500001 	subseq	r0, r0, r1
    3ff8:	00000000 	andeq	r0, r0, r0
    3ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    4000:	00005400 	andeq	r5, r0, r0, lsl #8
    4004:	00000000 	andeq	r0, r0, r0
    4008:	00040000 	andeq	r0, r4, r0
    400c:	9f5001f3 	svcls	0x005001f3
	...
    4020:	00010000 	andeq	r0, r1, r0
    4024:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4034:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4040:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4044:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    405c:	01000000 	mrseq	r0, (UNDEF: 0)
    4060:	00005000 	andeq	r5, r0, r0
    4064:	00000000 	andeq	r0, r0, r0
    4068:	00010000 	andeq	r0, r1, r0
    406c:	00000054 	andeq	r0, r0, r4, asr r0
    4070:	00000000 	andeq	r0, r0, r0
    4074:	f3000400 	vshl.u8	d0, d0, d0
    4078:	009f5001 	addseq	r5, pc, r1
    407c:	00000000 	andeq	r0, r0, r0
    4080:	01000000 	mrseq	r0, (UNDEF: 0)
    4084:	00005400 	andeq	r5, r0, r0, lsl #8
    4088:	00000000 	andeq	r0, r0, r0
    408c:	00040000 	andeq	r0, r4, r0
    4090:	9f5001f3 	svcls	0x005001f3
	...
    40a8:	00510001 	subseq	r0, r1, r1
    40ac:	00000000 	andeq	r0, r0, r0
    40b0:	01000000 	mrseq	r0, (UNDEF: 0)
    40b4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    40c0:	00000001 	andeq	r0, r0, r1
    40c4:	00000000 	andeq	r0, r0, r0
    40c8:	00010000 	andeq	r0, r1, r0
    40cc:	00000054 	andeq	r0, r0, r4, asr r0
    40d0:	00000000 	andeq	r0, r0, r0
    40d4:	31000200 	mrscc	r0, R8_usr
    40d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    40f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    40fc:	00550001 	subseq	r0, r5, r1
    4100:	00000000 	andeq	r0, r0, r0
    4104:	01000000 	mrseq	r0, (UNDEF: 0)
    4108:	00005000 	andeq	r5, r0, r0
    410c:	00000000 	andeq	r0, r0, r0
    4110:	00010000 	andeq	r0, r1, r0
    4114:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4124:	01000000 	mrseq	r0, (UNDEF: 0)
    4128:	00005700 	andeq	r5, r0, r0, lsl #14
    412c:	00000000 	andeq	r0, r0, r0
    4130:	00040000 	andeq	r0, r4, r0
	...
    4144:	00500001 	subseq	r0, r0, r1
    4148:	00000000 	andeq	r0, r0, r0
    414c:	01000000 	mrseq	r0, (UNDEF: 0)
    4150:	00005400 	andeq	r5, r0, r0, lsl #8
    4154:	00000000 	andeq	r0, r0, r0
    4158:	00040000 	andeq	r0, r4, r0
    415c:	9f5001f3 	svcls	0x005001f3
	...
    4168:	00540001 	subseq	r0, r4, r1
    416c:	00000000 	andeq	r0, r0, r0
    4170:	04000000 	streq	r0, [r0], #-0
    4174:	5001f300 	andpl	pc, r1, r0, lsl #6
    4178:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4188:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4194:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4198:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    41c4:	01000000 	mrseq	r0, (UNDEF: 0)
    41c8:	00005000 	andeq	r5, r0, r0
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	00010000 	andeq	r0, r1, r0
    41d4:	00000054 	andeq	r0, r0, r4, asr r0
    41d8:	00000000 	andeq	r0, r0, r0
    41dc:	f3000400 	vshl.u8	d0, d0, d0
    41e0:	009f5001 	addseq	r5, pc, r1
    41e4:	00000000 	andeq	r0, r0, r0
    41e8:	01000000 	mrseq	r0, (UNDEF: 0)
    41ec:	00005400 	andeq	r5, r0, r0, lsl #8
    41f0:	00000000 	andeq	r0, r0, r0
    41f4:	00040000 	andeq	r0, r4, r0
    41f8:	9f5001f3 	svcls	0x005001f3
	...
    4204:	00540001 	subseq	r0, r4, r1
    4208:	00000000 	andeq	r0, r0, r0
    420c:	04000000 	streq	r0, [r0], #-0
    4210:	5001f300 	andpl	pc, r1, r0, lsl #6
    4214:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4218:	00000000 	andeq	r0, r0, r0
    421c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4228:	01f30004 	mvnseq	r0, r4
    422c:	00009f50 	andeq	r9, r0, r0, asr pc
    4230:	00000000 	andeq	r0, r0, r0
    4234:	00010000 	andeq	r0, r1, r0
    4238:	00000054 	andeq	r0, r0, r4, asr r0
    423c:	00000000 	andeq	r0, r0, r0
    4240:	f3000400 	vshl.u8	d0, d0, d0
    4244:	009f5001 	addseq	r5, pc, r1
    4248:	00000000 	andeq	r0, r0, r0
    424c:	01000000 	mrseq	r0, (UNDEF: 0)
    4250:	00005400 	andeq	r5, r0, r0, lsl #8
    4254:	00000000 	andeq	r0, r0, r0
    4258:	00040000 	andeq	r0, r4, r0
    425c:	9f5001f3 	svcls	0x005001f3
	...
    4268:	00540001 	subseq	r0, r4, r1
    426c:	00000000 	andeq	r0, r0, r0
    4270:	04000000 	streq	r0, [r0], #-0
    4274:	5001f300 	andpl	pc, r1, r0, lsl #6
    4278:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    428c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4298:	00570001 	subseq	r0, r7, r1
	...
    42ac:	01000000 	mrseq	r0, (UNDEF: 0)
    42b0:	00005200 	andeq	r5, r0, r0, lsl #4
    42b4:	00000000 	andeq	r0, r0, r0
    42b8:	00010000 	andeq	r0, r1, r0
    42bc:	00000058 	andeq	r0, r0, r8, asr r0
	...
    42cc:	01000000 	mrseq	r0, (UNDEF: 0)
    42d0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    42e8:	00010000 	andeq	r0, r1, r0
    42ec:	00000050 	andeq	r0, r0, r0, asr r0
    42f0:	00000000 	andeq	r0, r0, r0
    42f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4300:	00500001 	subseq	r0, r0, r1
    4304:	00000000 	andeq	r0, r0, r0
    4308:	01000000 	mrseq	r0, (UNDEF: 0)
    430c:	00005500 	andeq	r5, r0, r0, lsl #10
    4310:	00000000 	andeq	r0, r0, r0
    4314:	00030000 	andeq	r0, r3, r0
	...
    433c:	00500001 	subseq	r0, r0, r1
    4340:	00000000 	andeq	r0, r0, r0
    4344:	01000000 	mrseq	r0, (UNDEF: 0)
    4348:	00005400 	andeq	r5, r0, r0, lsl #8
    434c:	00000000 	andeq	r0, r0, r0
    4350:	00040000 	andeq	r0, r4, r0
    4354:	9f5001f3 	svcls	0x005001f3
	...
    4360:	00540001 	subseq	r0, r4, r1
    4364:	00000000 	andeq	r0, r0, r0
    4368:	04000000 	streq	r0, [r0], #-0
    436c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4370:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4374:	00000000 	andeq	r0, r0, r0
    4378:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4384:	01f30004 	mvnseq	r0, r4
    4388:	00009f50 	andeq	r9, r0, r0, asr pc
    438c:	00000000 	andeq	r0, r0, r0
    4390:	00010000 	andeq	r0, r1, r0
    4394:	00000054 	andeq	r0, r0, r4, asr r0
    4398:	00000000 	andeq	r0, r0, r0
    439c:	f3000400 	vshl.u8	d0, d0, d0
    43a0:	009f5001 	addseq	r5, pc, r1
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	01000000 	mrseq	r0, (UNDEF: 0)
    43ac:	00005400 	andeq	r5, r0, r0, lsl #8
    43b0:	00000000 	andeq	r0, r0, r0
    43b4:	00040000 	andeq	r0, r4, r0
    43b8:	9f5001f3 	svcls	0x005001f3
	...
    43c4:	00540001 	subseq	r0, r4, r1
    43c8:	00000000 	andeq	r0, r0, r0
    43cc:	04000000 	streq	r0, [r0], #-0
    43d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    43d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    43d8:	00000000 	andeq	r0, r0, r0
    43dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    43e8:	01f30004 	mvnseq	r0, r4
    43ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4404:	00560001 	subseq	r0, r6, r1
    4408:	00000000 	andeq	r0, r0, r0
    440c:	01000000 	mrseq	r0, (UNDEF: 0)
    4410:	00005600 	andeq	r5, r0, r0, lsl #12
    4414:	00000000 	andeq	r0, r0, r0
    4418:	00030000 	andeq	r0, r3, r0
    441c:	009f0176 	addseq	r0, pc, r6, ror r1	; <UNPREDICTABLE>
	...
    4434:	59000100 	stmdbpl	r0, {r8}
	...
    4440:	7f790003 	svcvc	0x00790003
    4444:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4448:	00000000 	andeq	r0, r0, r0
    444c:	59000100 	stmdbpl	r0, {r8}
	...
    4464:	00500001 	subseq	r0, r0, r1
    4468:	00000000 	andeq	r0, r0, r0
    446c:	01000000 	mrseq	r0, (UNDEF: 0)
    4470:	00005000 	andeq	r5, r0, r0
	...
    4480:	00020000 	andeq	r0, r2, r0
    4484:	0000007d 	andeq	r0, r0, sp, ror r0
    4488:	00000000 	andeq	r0, r0, r0
    448c:	00020000 	andeq	r0, r2, r0
    4490:	0000107d 	andeq	r1, r0, sp, ror r0
    4494:	00000000 	andeq	r0, r0, r0
    4498:	00020000 	andeq	r0, r2, r0
    449c:	0000207d 	andeq	r2, r0, sp, ror r0
    44a0:	00000000 	andeq	r0, r0, r0
    44a4:	00020000 	andeq	r0, r2, r0
    44a8:	0000107d 	andeq	r1, r0, sp, ror r0
    44ac:	00000000 	andeq	r0, r0, r0
    44b0:	00020000 	andeq	r0, r2, r0
    44b4:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    44c8:	00010000 	andeq	r0, r1, r0
    44cc:	00000050 	andeq	r0, r0, r0, asr r0
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    44ec:	00510001 	subseq	r0, r1, r1
    44f0:	00000000 	andeq	r0, r0, r0
    44f4:	01000000 	mrseq	r0, (UNDEF: 0)
    44f8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    450c:	00520001 	subseq	r0, r2, r1
    4510:	00000000 	andeq	r0, r0, r0
    4514:	01000000 	mrseq	r0, (UNDEF: 0)
    4518:	00000000 	andeq	r0, r0, r0
    451c:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    4528:	30000200 	andcc	r0, r0, r0, lsl #4
    452c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4530:	00000000 	andeq	r0, r0, r0
    4534:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4540:	00550001 	subseq	r0, r5, r1
    4544:	00000000 	andeq	r0, r0, r0
    4548:	02000000 	andeq	r0, r0, #0
    454c:	009f3100 	addseq	r3, pc, r0, lsl #2
    4550:	00000000 	andeq	r0, r0, r0
    4554:	01000000 	mrseq	r0, (UNDEF: 0)
    4558:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    456c:	00010000 	andeq	r0, r1, r0
    4570:	00000055 	andeq	r0, r0, r5, asr r0
    4574:	00000000 	andeq	r0, r0, r0
    4578:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4584:	00000004 	andeq	r0, r0, r4
	...
    4590:	00500001 	subseq	r0, r0, r1
    4594:	00000000 	andeq	r0, r0, r0
    4598:	01000000 	mrseq	r0, (UNDEF: 0)
    459c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    45b0:	00010000 	andeq	r0, r1, r0
    45b4:	00000053 	andeq	r0, r0, r3, asr r0
    45b8:	00000000 	andeq	r0, r0, r0
    45bc:	53000100 	movwpl	r0, #256	; 0x100
	...
    45d0:	007d0002 	rsbseq	r0, sp, r2
	...
    45dc:	107d0002 	rsbsne	r0, sp, r2
	...
    45e8:	207d0002 	rsbscs	r0, sp, r2
	...
    45f4:	107d0002 	rsbsne	r0, sp, r2
	...
    4600:	207d0002 	rsbscs	r0, sp, r2
	...
    4618:	00500001 	subseq	r0, r0, r1
    461c:	00000000 	andeq	r0, r0, r0
    4620:	01000000 	mrseq	r0, (UNDEF: 0)
    4624:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4638:	00510001 	subseq	r0, r1, r1
    463c:	00000000 	andeq	r0, r0, r0
    4640:	01000000 	mrseq	r0, (UNDEF: 0)
    4644:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4650:	02000000 	andeq	r0, r0, #0
    4654:	009f3000 	addseq	r3, pc, r0
    4658:	00000000 	andeq	r0, r0, r0
    465c:	01000000 	mrseq	r0, (UNDEF: 0)
    4660:	00005500 	andeq	r5, r0, r0, lsl #10
    4664:	00000000 	andeq	r0, r0, r0
    4668:	00020000 	andeq	r0, r2, r0
    466c:	00009f31 	andeq	r9, r0, r1, lsr pc
    4670:	00000000 	andeq	r0, r0, r0
    4674:	00010000 	andeq	r0, r1, r0
    4678:	00000055 	andeq	r0, r0, r5, asr r0
    467c:	00000000 	andeq	r0, r0, r0
    4680:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    468c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4698:	00540001 	subseq	r0, r4, r1
    469c:	00000000 	andeq	r0, r0, r0
    46a0:	04000000 	streq	r0, [r0], #-0
	...
    46b0:	02000000 	andeq	r0, r0, #0
    46b4:	009f3000 	addseq	r3, pc, r0
    46b8:	00000000 	andeq	r0, r0, r0
    46bc:	01000000 	mrseq	r0, (UNDEF: 0)
    46c0:	00005600 	andeq	r5, r0, r0, lsl #12
    46c4:	00000000 	andeq	r0, r0, r0
    46c8:	00010000 	andeq	r0, r1, r0
    46cc:	00000050 	andeq	r0, r0, r0, asr r0
    46d0:	00000000 	andeq	r0, r0, r0
    46d4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    46f0:	00010000 	andeq	r0, r1, r0
    46f4:	00000053 	andeq	r0, r0, r3, asr r0
    46f8:	00000000 	andeq	r0, r0, r0
    46fc:	73000300 	movwvc	r0, #768	; 0x300
    4700:	00009f01 	andeq	r9, r0, r1, lsl #30
    4704:	00000000 	andeq	r0, r0, r0
    4708:	00070000 	andeq	r0, r7, r0
    470c:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    4710:	009f0123 	addseq	r0, pc, r3, lsr #2
    4714:	00000000 	andeq	r0, r0, r0
    4718:	07000000 	streq	r0, [r0, -r0]
    471c:	00c87400 	sbceq	r7, r8, r0, lsl #8
    4720:	9f012306 	svcls	0x00012306
	...
    472c:	00530001 	subseq	r0, r3, r1
	...
    4740:	01000000 	mrseq	r0, (UNDEF: 0)
    4744:	00005000 	andeq	r5, r0, r0
    4748:	00000000 	andeq	r0, r0, r0
    474c:	00010000 	andeq	r0, r1, r0
    4750:	00000051 	andeq	r0, r0, r1, asr r0
    4754:	00000000 	andeq	r0, r0, r0
    4758:	00237200 	eoreq	r7, r3, r0, lsl #4
    475c:	00237410 	eoreq	r7, r3, r0, lsl r4
    4760:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4764:	00237400 	eoreq	r7, r3, r0, lsl #8
    4768:	00237610 	eoreq	r7, r3, r0, lsl r6
    476c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4770:	00237614 	eoreq	r7, r3, r4, lsl r6
    4774:	00239810 	eoreq	r9, r3, r0, lsl r8
    4778:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    477c:	00239828 	eoreq	r9, r3, r8, lsr #16
    4780:	00239a10 	eoreq	r9, r3, r0, lsl sl
    4784:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4788:	00239a14 	eoreq	r9, r3, r4, lsl sl
    478c:	00246210 	eoreq	r6, r4, r0, lsl r2
    4790:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4794:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    47a0:	00237200 	eoreq	r7, r3, r0, lsl #4
    47a4:	00238010 	eoreq	r8, r3, r0, lsl r0
    47a8:	50000110 	andpl	r0, r0, r0, lsl r1
    47ac:	10002380 	andne	r2, r0, r0, lsl #7
    47b0:	10002462 	andne	r2, r0, r2, ror #8
    47b4:	00540001 	subseq	r0, r4, r1
	...
    47c0:	72000000 	andvc	r0, r0, #0
    47c4:	80100023 	andshi	r0, r0, r3, lsr #32
    47c8:	01100023 	tsteq	r0, r3, lsr #32
    47cc:	23805100 	orrcs	r5, r0, #0, 2
    47d0:	24621000 	strbtcs	r1, [r2], #-0
    47d4:	00011000 	andeq	r1, r1, r0
    47d8:	00000057 	andeq	r0, r0, r7, asr r0
    47dc:	00000000 	andeq	r0, r0, r0
    47e0:	72000000 	andvc	r0, r0, #0
    47e4:	80100023 	andshi	r0, r0, r3, lsr #32
    47e8:	01100023 	tsteq	r0, r3, lsr #32
    47ec:	00005200 	andeq	r5, r0, r0, lsl #4
    47f0:	00000000 	andeq	r0, r0, r0
    47f4:	00010000 	andeq	r0, r1, r0
    47f8:	00010100 	andeq	r0, r1, r0, lsl #2
    47fc:	237c0000 	cmncs	ip, #0
    4800:	23801000 	orrcs	r1, r0, #0
    4804:	00021000 	andeq	r1, r2, r0
    4808:	23809f30 	orrcs	r9, r0, #48, 30	; 0xc0
    480c:	23ba1000 			; <UNDEFINED> instruction: 0x23ba1000
    4810:	00011000 	andeq	r1, r1, r0
    4814:	0023ba56 	eoreq	fp, r3, r6, asr sl
    4818:	0023be10 	eoreq	fp, r3, r0, lsl lr
    481c:	31000210 	tstcc	r0, r0, lsl r2
    4820:	0023be9f 	mlaeq	r3, pc, lr, fp	; <UNPREDICTABLE>
    4824:	00246210 	eoreq	r6, r4, r0, lsl r2
    4828:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    4834:	00000003 	andeq	r0, r0, r3
    4838:	1000237c 	andne	r2, r0, ip, ror r3
    483c:	10002380 	andne	r2, r0, r0, lsl #7
    4840:	80500001 	subshi	r0, r0, r1
    4844:	62100023 	andsvs	r0, r0, #35	; 0x23
    4848:	01100024 	tsteq	r0, r4, lsr #32
    484c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4860:	10002380 	andne	r2, r0, r0, lsl #7
    4864:	1000238a 	andne	r2, r0, sl, lsl #7
    4868:	8a550001 	bhi	1544874 <__RAM_SIZE+0x1444874>
    486c:	96100023 	ldrls	r0, [r0], -r3, lsr #32
    4870:	03100023 	tsteq	r0, #35	; 0x23
    4874:	9f017500 	svcls	0x00017500
    4878:	1000239a 	mulne	r0, sl, r3
    487c:	100023ac 	andne	r2, r0, ip, lsr #7
    4880:	01750003 	cmneq	r5, r3
    4884:	0023ac9f 	mlaeq	r3, pc, ip, sl	; <UNPREDICTABLE>
    4888:	0023ee10 	eoreq	lr, r3, r0, lsl lr
    488c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    4890:	100023f4 	strdne	r2, [r0], -r4
    4894:	10002462 	andne	r2, r0, r2, ror #8
    4898:	00550001 	subseq	r0, r5, r1
	...
    48a8:	02000000 	andeq	r0, r0, #0
    48ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    48b0:	00000000 	andeq	r0, r0, r0
    48b4:	02000000 	andeq	r0, r0, #0
    48b8:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    48f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4900:	00540001 	subseq	r0, r4, r1
    4904:	00000000 	andeq	r0, r0, r0
    4908:	04000000 	streq	r0, [r0], #-0
    490c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4914:	00000000 	andeq	r0, r0, r0
    4918:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4924:	01f30004 	mvnseq	r0, r4
    4928:	00009f50 	andeq	r9, r0, r0, asr pc
    492c:	00000000 	andeq	r0, r0, r0
    4930:	00010000 	andeq	r0, r1, r0
    4934:	00000054 	andeq	r0, r0, r4, asr r0
    4938:	00000000 	andeq	r0, r0, r0
    493c:	f3000400 	vshl.u8	d0, d0, d0
    4940:	009f5001 	addseq	r5, pc, r1
    4944:	00000000 	andeq	r0, r0, r0
    4948:	01000000 	mrseq	r0, (UNDEF: 0)
    494c:	00005400 	andeq	r5, r0, r0, lsl #8
    4950:	00000000 	andeq	r0, r0, r0
    4954:	00040000 	andeq	r0, r4, r0
    4958:	9f5001f3 	svcls	0x005001f3
	...
    4964:	00540001 	subseq	r0, r4, r1
    4968:	00000000 	andeq	r0, r0, r0
    496c:	04000000 	streq	r0, [r0], #-0
    4970:	5001f300 	andpl	pc, r1, r0, lsl #6
    4974:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4978:	00000000 	andeq	r0, r0, r0
    497c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4988:	01f30004 	mvnseq	r0, r4
    498c:	00009f50 	andeq	r9, r0, r0, asr pc
    4990:	00000000 	andeq	r0, r0, r0
    4994:	00010000 	andeq	r0, r1, r0
    4998:	00000054 	andeq	r0, r0, r4, asr r0
    499c:	00000000 	andeq	r0, r0, r0
    49a0:	f3000400 	vshl.u8	d0, d0, d0
    49a4:	009f5001 	addseq	r5, pc, r1
    49a8:	00000000 	andeq	r0, r0, r0
    49ac:	01000000 	mrseq	r0, (UNDEF: 0)
    49b0:	00005400 	andeq	r5, r0, r0, lsl #8
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	00040000 	andeq	r0, r4, r0
    49bc:	9f5001f3 	svcls	0x005001f3
	...
    49c8:	00540001 	subseq	r0, r4, r1
    49cc:	00000000 	andeq	r0, r0, r0
    49d0:	04000000 	streq	r0, [r0], #-0
    49d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    49d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49dc:	00000000 	andeq	r0, r0, r0
    49e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    49ec:	01f30004 	mvnseq	r0, r4
    49f0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4a04:	00010000 	andeq	r0, r1, r0
    4a08:	00000051 	andeq	r0, r0, r1, asr r0
    4a0c:	00000000 	andeq	r0, r0, r0
    4a10:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4a24:	00010000 	andeq	r0, r1, r0
    4a28:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4a48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4a54:	00550001 	subseq	r0, r5, r1
    4a58:	00000000 	andeq	r0, r0, r0
    4a5c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a60:	00005000 	andeq	r5, r0, r0
    4a64:	00000000 	andeq	r0, r0, r0
    4a68:	00010000 	andeq	r0, r1, r0
    4a6c:	00000055 	andeq	r0, r0, r5, asr r0
    4a70:	00000000 	andeq	r0, r0, r0
    4a74:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4a80:	00550001 	subseq	r0, r5, r1
    4a84:	00000000 	andeq	r0, r0, r0
    4a88:	01000000 	mrseq	r0, (UNDEF: 0)
    4a8c:	00005000 	andeq	r5, r0, r0
    4a90:	00000000 	andeq	r0, r0, r0
    4a94:	00010000 	andeq	r0, r1, r0
    4a98:	00000055 	andeq	r0, r0, r5, asr r0
    4a9c:	00000000 	andeq	r0, r0, r0
    4aa0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ad4:	00005000 	andeq	r5, r0, r0
    4ad8:	00000000 	andeq	r0, r0, r0
    4adc:	00010000 	andeq	r0, r1, r0
    4ae0:	00000054 	andeq	r0, r0, r4, asr r0
    4ae4:	00000000 	andeq	r0, r0, r0
    4ae8:	f3000400 	vshl.u8	d0, d0, d0
    4aec:	009f5001 	addseq	r5, pc, r1
    4af0:	00000000 	andeq	r0, r0, r0
    4af4:	01000000 	mrseq	r0, (UNDEF: 0)
    4af8:	00005400 	andeq	r5, r0, r0, lsl #8
    4afc:	00000000 	andeq	r0, r0, r0
    4b00:	00040000 	andeq	r0, r4, r0
    4b04:	9f5001f3 	svcls	0x005001f3
	...
    4b10:	00540001 	subseq	r0, r4, r1
    4b14:	00000000 	andeq	r0, r0, r0
    4b18:	04000000 	streq	r0, [r0], #-0
    4b1c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b24:	00000000 	andeq	r0, r0, r0
    4b28:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4b34:	01f30004 	mvnseq	r0, r4
    4b38:	00009f50 	andeq	r9, r0, r0, asr pc
    4b3c:	00000000 	andeq	r0, r0, r0
    4b40:	00010000 	andeq	r0, r1, r0
    4b44:	00000054 	andeq	r0, r0, r4, asr r0
    4b48:	00000000 	andeq	r0, r0, r0
    4b4c:	f3000400 	vshl.u8	d0, d0, d0
    4b50:	009f5001 	addseq	r5, pc, r1
    4b54:	00000000 	andeq	r0, r0, r0
    4b58:	01000000 	mrseq	r0, (UNDEF: 0)
    4b5c:	00005400 	andeq	r5, r0, r0, lsl #8
    4b60:	00000000 	andeq	r0, r0, r0
    4b64:	00040000 	andeq	r0, r4, r0
    4b68:	9f5001f3 	svcls	0x005001f3
	...
    4b74:	00540001 	subseq	r0, r4, r1
    4b78:	00000000 	andeq	r0, r0, r0
    4b7c:	04000000 	streq	r0, [r0], #-0
    4b80:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b88:	00000000 	andeq	r0, r0, r0
    4b8c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4b98:	01f30004 	mvnseq	r0, r4
    4b9c:	00009f50 	andeq	r9, r0, r0, asr pc
    4ba0:	00000000 	andeq	r0, r0, r0
    4ba4:	00010000 	andeq	r0, r1, r0
    4ba8:	00000054 	andeq	r0, r0, r4, asr r0
    4bac:	00000000 	andeq	r0, r0, r0
    4bb0:	f3000400 	vshl.u8	d0, d0, d0
    4bb4:	009f5001 	addseq	r5, pc, r1
    4bb8:	00000000 	andeq	r0, r0, r0
    4bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    4bc0:	00005400 	andeq	r5, r0, r0, lsl #8
    4bc4:	00000000 	andeq	r0, r0, r0
    4bc8:	00040000 	andeq	r0, r4, r0
    4bcc:	9f5001f3 	svcls	0x005001f3
	...
    4bf0:	00530001 	subseq	r0, r3, r1
    4bf4:	00000000 	andeq	r0, r0, r0
    4bf8:	03000000 	movweq	r0, #0
    4bfc:	9f7f7300 	svcls	0x007f7300
	...
    4c08:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    4c0c:	1c310600 	ldcne	6, cr0, [r1], #-0
    4c10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c14:	00000000 	andeq	r0, r0, r0
    4c18:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    4c1c:	310600c8 	smlabtcc	r6, r8, r0, r0
    4c20:	00009f1c 	andeq	r9, r0, ip, lsl pc
    4c24:	00000000 	andeq	r0, r0, r0
    4c28:	00090000 	andeq	r0, r9, r0
    4c2c:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    4c30:	1c310648 	ldcne	6, cr0, [r1], #-288	; 0xfffffee0
    4c34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c38:	00000000 	andeq	r0, r0, r0
    4c3c:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    4c40:	310600c8 	smlabtcc	r6, r8, r0, r0
    4c44:	00009f1c 	andeq	r9, r0, ip, lsl pc
    4c48:	00000000 	andeq	r0, r0, r0
    4c4c:	00030000 	andeq	r0, r3, r0
    4c50:	009f7f73 	addseq	r7, pc, r3, ror pc	; <UNPREDICTABLE>
    4c54:	00000000 	andeq	r0, r0, r0
    4c58:	01000000 	mrseq	r0, (UNDEF: 0)
    4c5c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4c74:	00570001 	subseq	r0, r7, r1
    4c78:	00000000 	andeq	r0, r0, r0
    4c7c:	03000000 	movweq	r0, #0
    4c80:	9f7f7700 	svcls	0x007f7700
	...
    4c8c:	00570001 	subseq	r0, r7, r1
	...
    4ca0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ca4:	00005000 	andeq	r5, r0, r0
    4ca8:	00000000 	andeq	r0, r0, r0
    4cac:	00010000 	andeq	r0, r1, r0
    4cb0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    4cc0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4ccc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4cd0:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    4d0c:	01000000 	mrseq	r0, (UNDEF: 0)
    4d10:	00005000 	andeq	r5, r0, r0
    4d14:	00000000 	andeq	r0, r0, r0
    4d18:	00010000 	andeq	r0, r1, r0
    4d1c:	00000054 	andeq	r0, r0, r4, asr r0
    4d20:	00000000 	andeq	r0, r0, r0
    4d24:	f3000400 	vshl.u8	d0, d0, d0
    4d28:	009f5001 	addseq	r5, pc, r1
    4d2c:	00000000 	andeq	r0, r0, r0
    4d30:	01000000 	mrseq	r0, (UNDEF: 0)
    4d34:	00005400 	andeq	r5, r0, r0, lsl #8
    4d38:	00000000 	andeq	r0, r0, r0
    4d3c:	00040000 	andeq	r0, r4, r0
    4d40:	9f5001f3 	svcls	0x005001f3
	...
    4d4c:	00540001 	subseq	r0, r4, r1
    4d50:	00000000 	andeq	r0, r0, r0
    4d54:	04000000 	streq	r0, [r0], #-0
    4d58:	5001f300 	andpl	pc, r1, r0, lsl #6
    4d5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4d60:	00000000 	andeq	r0, r0, r0
    4d64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4d70:	01f30004 	mvnseq	r0, r4
    4d74:	00009f50 	andeq	r9, r0, r0, asr pc
    4d78:	00000000 	andeq	r0, r0, r0
    4d7c:	00010000 	andeq	r0, r1, r0
    4d80:	00000054 	andeq	r0, r0, r4, asr r0
    4d84:	00000000 	andeq	r0, r0, r0
    4d88:	f3000400 	vshl.u8	d0, d0, d0
    4d8c:	009f5001 	addseq	r5, pc, r1
    4d90:	00000000 	andeq	r0, r0, r0
    4d94:	01000000 	mrseq	r0, (UNDEF: 0)
    4d98:	00005400 	andeq	r5, r0, r0, lsl #8
    4d9c:	00000000 	andeq	r0, r0, r0
    4da0:	00040000 	andeq	r0, r4, r0
    4da4:	9f5001f3 	svcls	0x005001f3
	...
    4db0:	00540001 	subseq	r0, r4, r1
    4db4:	00000000 	andeq	r0, r0, r0
    4db8:	04000000 	streq	r0, [r0], #-0
    4dbc:	5001f300 	andpl	pc, r1, r0, lsl #6
    4dc0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4dc4:	00000000 	andeq	r0, r0, r0
    4dc8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4dd4:	01f30004 	mvnseq	r0, r4
    4dd8:	00009f50 	andeq	r9, r0, r0, asr pc
    4ddc:	00000000 	andeq	r0, r0, r0
    4de0:	00010000 	andeq	r0, r1, r0
    4de4:	00000054 	andeq	r0, r0, r4, asr r0
    4de8:	00000000 	andeq	r0, r0, r0
    4dec:	f3000400 	vshl.u8	d0, d0, d0
    4df0:	009f5001 	addseq	r5, pc, r1
    4df4:	00000000 	andeq	r0, r0, r0
    4df8:	01000000 	mrseq	r0, (UNDEF: 0)
    4dfc:	00005400 	andeq	r5, r0, r0, lsl #8
    4e00:	00000000 	andeq	r0, r0, r0
    4e04:	00040000 	andeq	r0, r4, r0
    4e08:	9f5001f3 	svcls	0x005001f3
	...
    4e14:	00540001 	subseq	r0, r4, r1
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	04000000 	streq	r0, [r0], #-0
    4e20:	5001f300 	andpl	pc, r1, r0, lsl #6
    4e24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4e38:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4e44:	00570001 	subseq	r0, r7, r1
	...
    4e58:	01000000 	mrseq	r0, (UNDEF: 0)
    4e5c:	00005200 	andeq	r5, r0, r0, lsl #4
    4e60:	00000000 	andeq	r0, r0, r0
    4e64:	00010000 	andeq	r0, r1, r0
    4e68:	00000059 	andeq	r0, r0, r9, asr r0
	...
    4e7c:	53000100 	movwpl	r0, #256	; 0x100
	...
    4e88:	00550001 	subseq	r0, r5, r1
	...
    4e9c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4eb8:	00500001 	subseq	r0, r0, r1
    4ebc:	00000000 	andeq	r0, r0, r0
    4ec0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ec4:	00005600 	andeq	r5, r0, r0, lsl #12
    4ec8:	00000000 	andeq	r0, r0, r0
    4ecc:	00010000 	andeq	r0, r1, r0
    4ed0:	00000050 	andeq	r0, r0, r0, asr r0
    4ed4:	00000000 	andeq	r0, r0, r0
    4ed8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4ee4:	00000003 	andeq	r0, r0, r3
	...
    4f18:	00010000 	andeq	r0, r1, r0
    4f1c:	00000050 	andeq	r0, r0, r0, asr r0
    4f20:	00000000 	andeq	r0, r0, r0
    4f24:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4f30:	01f30004 	mvnseq	r0, r4
    4f34:	00009f50 	andeq	r9, r0, r0, asr pc
    4f38:	00000000 	andeq	r0, r0, r0
    4f3c:	00010000 	andeq	r0, r1, r0
    4f40:	00000054 	andeq	r0, r0, r4, asr r0
    4f44:	00000000 	andeq	r0, r0, r0
    4f48:	f3000400 	vshl.u8	d0, d0, d0
    4f4c:	009f5001 	addseq	r5, pc, r1
    4f50:	00000000 	andeq	r0, r0, r0
    4f54:	01000000 	mrseq	r0, (UNDEF: 0)
    4f58:	00005400 	andeq	r5, r0, r0, lsl #8
    4f5c:	00000000 	andeq	r0, r0, r0
    4f60:	00040000 	andeq	r0, r4, r0
    4f64:	9f5001f3 	svcls	0x005001f3
	...
    4f70:	00540001 	subseq	r0, r4, r1
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	04000000 	streq	r0, [r0], #-0
    4f7c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4f80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4f84:	00000000 	andeq	r0, r0, r0
    4f88:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4f94:	01f30004 	mvnseq	r0, r4
    4f98:	00009f50 	andeq	r9, r0, r0, asr pc
    4f9c:	00000000 	andeq	r0, r0, r0
    4fa0:	00010000 	andeq	r0, r1, r0
    4fa4:	00000054 	andeq	r0, r0, r4, asr r0
    4fa8:	00000000 	andeq	r0, r0, r0
    4fac:	f3000400 	vshl.u8	d0, d0, d0
    4fb0:	009f5001 	addseq	r5, pc, r1
    4fb4:	00000000 	andeq	r0, r0, r0
    4fb8:	01000000 	mrseq	r0, (UNDEF: 0)
    4fbc:	00005400 	andeq	r5, r0, r0, lsl #8
    4fc0:	00000000 	andeq	r0, r0, r0
    4fc4:	00040000 	andeq	r0, r4, r0
    4fc8:	9f5001f3 	svcls	0x005001f3
	...
    4fd4:	00540001 	subseq	r0, r4, r1
    4fd8:	00000000 	andeq	r0, r0, r0
    4fdc:	04000000 	streq	r0, [r0], #-0
    4fe0:	5001f300 	andpl	pc, r1, r0, lsl #6
    4fe4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4fe8:	00000000 	andeq	r0, r0, r0
    4fec:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ff8:	01f30004 	mvnseq	r0, r4
    4ffc:	00009f50 	andeq	r9, r0, r0, asr pc
    5000:	00000000 	andeq	r0, r0, r0
    5004:	00010000 	andeq	r0, r1, r0
    5008:	00000054 	andeq	r0, r0, r4, asr r0
    500c:	00000000 	andeq	r0, r0, r0
    5010:	f3000400 	vshl.u8	d0, d0, d0
    5014:	009f5001 	addseq	r5, pc, r1
    5018:	00000000 	andeq	r0, r0, r0
    501c:	01000000 	mrseq	r0, (UNDEF: 0)
    5020:	00005400 	andeq	r5, r0, r0, lsl #8
    5024:	00000000 	andeq	r0, r0, r0
    5028:	00040000 	andeq	r0, r4, r0
    502c:	9f5001f3 	svcls	0x005001f3
	...
    5044:	00010000 	andeq	r0, r1, r0
    5048:	00000058 	andeq	r0, r0, r8, asr r0
    504c:	00000000 	andeq	r0, r0, r0
    5050:	78000300 	stmdavc	r0, {r8, r9}
    5054:	00009f7f 	andeq	r9, r0, pc, ror pc
    5058:	00000000 	andeq	r0, r0, r0
    505c:	00010000 	andeq	r0, r1, r0
    5060:	00000058 	andeq	r0, r0, r8, asr r0
	...
    5070:	01000000 	mrseq	r0, (UNDEF: 0)
    5074:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    5088:	00010000 	andeq	r0, r1, r0
    508c:	00000050 	andeq	r0, r0, r0, asr r0
    5090:	00000000 	andeq	r0, r0, r0
    5094:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    50a8:	007d0002 	rsbseq	r0, sp, r2
	...
    50b4:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    50c0:	287d0002 	ldmdacs	sp!, {r1}^
	...
    50cc:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    50d8:	287d0002 	ldmdacs	sp!, {r1}^
	...
    50f0:	00500001 	subseq	r0, r0, r1
    50f4:	00000000 	andeq	r0, r0, r0
    50f8:	01000000 	mrseq	r0, (UNDEF: 0)
    50fc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5110:	00010000 	andeq	r0, r1, r0
    5114:	00000051 	andeq	r0, r0, r1, asr r0
    5118:	00000000 	andeq	r0, r0, r0
    511c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    5130:	00010000 	andeq	r0, r1, r0
    5134:	00000052 	andeq	r0, r0, r2, asr r0
	...
    5148:	53000100 	movwpl	r0, #256	; 0x100
	...
    5154:	00550001 	subseq	r0, r5, r1
    5158:	00000000 	andeq	r0, r0, r0
    515c:	01000000 	mrseq	r0, (UNDEF: 0)
    5160:	00000000 	andeq	r0, r0, r0
    5164:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    5170:	30000200 	andcc	r0, r0, r0, lsl #4
    5174:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5178:	00000000 	andeq	r0, r0, r0
    517c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5188:	00560001 	subseq	r0, r6, r1
    518c:	00000000 	andeq	r0, r0, r0
    5190:	02000000 	andeq	r0, r0, #0
    5194:	009f3100 	addseq	r3, pc, r0, lsl #2
    5198:	00000000 	andeq	r0, r0, r0
    519c:	01000000 	mrseq	r0, (UNDEF: 0)
    51a0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    51b8:	00500001 	subseq	r0, r0, r1
    51bc:	00000000 	andeq	r0, r0, r0
    51c0:	01000000 	mrseq	r0, (UNDEF: 0)
    51c4:	00005000 	andeq	r5, r0, r0
    51c8:	00000000 	andeq	r0, r0, r0
    51cc:	00010000 	andeq	r0, r1, r0
    51d0:	00000050 	andeq	r0, r0, r0, asr r0
    51d4:	00000000 	andeq	r0, r0, r0
    51d8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    51e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    51f0:	00540001 	subseq	r0, r4, r1
	...
    5204:	01000000 	mrseq	r0, (UNDEF: 0)
    5208:	00005600 	andeq	r5, r0, r0, lsl #12
    520c:	00000000 	andeq	r0, r0, r0
    5210:	00010000 	andeq	r0, r1, r0
    5214:	00000056 	andeq	r0, r0, r6, asr r0
	...
    5224:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5230:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5234:	00000008 	andeq	r0, r0, r8
    5238:	00000000 	andeq	r0, r0, r0
    523c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5248:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    524c:	00000008 	andeq	r0, r0, r8
	...
    5268:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5274:	01f30004 	mvnseq	r0, r4
    5278:	00009f50 	andeq	r9, r0, r0, asr pc
    527c:	00000000 	andeq	r0, r0, r0
    5280:	00010000 	andeq	r0, r1, r0
    5284:	00000050 	andeq	r0, r0, r0, asr r0
    5288:	00000000 	andeq	r0, r0, r0
    528c:	f3000400 	vshl.u8	d0, d0, d0
    5290:	009f5001 	addseq	r5, pc, r1
    5294:	00000000 	andeq	r0, r0, r0
    5298:	01000000 	mrseq	r0, (UNDEF: 0)
    529c:	00005000 	andeq	r5, r0, r0
    52a0:	00000000 	andeq	r0, r0, r0
    52a4:	00040000 	andeq	r0, r4, r0
    52a8:	9f5001f3 	svcls	0x005001f3
	...
    52b8:	00040400 	andeq	r0, r4, r0, lsl #8
	...
    52c4:	00510001 	subseq	r0, r1, r1
    52c8:	00000000 	andeq	r0, r0, r0
    52cc:	01000000 	mrseq	r0, (UNDEF: 0)
    52d0:	00005400 	andeq	r5, r0, r0, lsl #8
    52d4:	00000000 	andeq	r0, r0, r0
    52d8:	00010000 	andeq	r0, r1, r0
    52dc:	00000051 	andeq	r0, r0, r1, asr r0
    52e0:	00000000 	andeq	r0, r0, r0
    52e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    52f0:	00000002 	andeq	r0, r0, r2
    52f4:	00000400 	andeq	r0, r0, r0, lsl #8
    52f8:	00000000 	andeq	r0, r0, r0
    52fc:	00020000 	andeq	r0, r2, r0
    5300:	00009f30 	andeq	r9, r0, r0, lsr pc
    5304:	00000000 	andeq	r0, r0, r0
    5308:	00010000 	andeq	r0, r1, r0
    530c:	00000050 	andeq	r0, r0, r0, asr r0
    5310:	00000000 	andeq	r0, r0, r0
    5314:	30000200 	andcc	r0, r0, r0, lsl #4
    5318:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5328:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5334:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5338:	00000008 	andeq	r0, r0, r8
    533c:	00000000 	andeq	r0, r0, r0
    5340:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5344:	00000010 	andeq	r0, r0, r0, lsl r0
    5348:	00000000 	andeq	r0, r0, r0
    534c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5358:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    535c:	00000010 	andeq	r0, r0, r0, lsl r0
    5360:	00000000 	andeq	r0, r0, r0
    5364:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5368:	00000008 	andeq	r0, r0, r8
	...
    5384:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5390:	01f30004 	mvnseq	r0, r4
    5394:	00009f50 	andeq	r9, r0, r0, asr pc
    5398:	00000000 	andeq	r0, r0, r0
    539c:	00010000 	andeq	r0, r1, r0
    53a0:	00000050 	andeq	r0, r0, r0, asr r0
    53a4:	00000000 	andeq	r0, r0, r0
    53a8:	f3000400 	vshl.u8	d0, d0, d0
    53ac:	009f5001 	addseq	r5, pc, r1
    53b0:	00000000 	andeq	r0, r0, r0
    53b4:	01000000 	mrseq	r0, (UNDEF: 0)
    53b8:	00005000 	andeq	r5, r0, r0
    53bc:	00000000 	andeq	r0, r0, r0
    53c0:	00040000 	andeq	r0, r4, r0
    53c4:	9f5001f3 	svcls	0x005001f3
	...
    53d4:	00040400 	andeq	r0, r4, r0, lsl #8
	...
    53e0:	00510001 	subseq	r0, r1, r1
    53e4:	00000000 	andeq	r0, r0, r0
    53e8:	01000000 	mrseq	r0, (UNDEF: 0)
    53ec:	00005400 	andeq	r5, r0, r0, lsl #8
    53f0:	00000000 	andeq	r0, r0, r0
    53f4:	00010000 	andeq	r0, r1, r0
    53f8:	00000051 	andeq	r0, r0, r1, asr r0
    53fc:	00000000 	andeq	r0, r0, r0
    5400:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5410:	04000000 	streq	r0, [r0], #-0
    5414:	00000004 	andeq	r0, r0, r4
    5418:	00000000 	andeq	r0, r0, r0
    541c:	00010000 	andeq	r0, r1, r0
    5420:	00000052 	andeq	r0, r0, r2, asr r0
    5424:	00000000 	andeq	r0, r0, r0
    5428:	53000100 	movwpl	r0, #256	; 0x100
	...
    5434:	01f30004 	mvnseq	r0, r4
    5438:	00009f52 	andeq	r9, r0, r2, asr pc
    543c:	00000000 	andeq	r0, r0, r0
    5440:	00010000 	andeq	r0, r1, r0
    5444:	00000052 	andeq	r0, r0, r2, asr r0
    5448:	00000000 	andeq	r0, r0, r0
    544c:	f3000400 	vshl.u8	d0, d0, d0
    5450:	009f5201 	addseq	r5, pc, r1, lsl #4
    5454:	00000000 	andeq	r0, r0, r0
    5458:	02000000 	andeq	r0, r0, #0
    545c:	00000000 	andeq	r0, r0, r0
    5460:	00000004 	andeq	r0, r0, r4
    5464:	00000000 	andeq	r0, r0, r0
    5468:	30000200 	andcc	r0, r0, r0, lsl #4
    546c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5470:	00000000 	andeq	r0, r0, r0
    5474:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5480:	9f300002 	svcls	0x00300002
	...
    5494:	007d0002 	rsbseq	r0, sp, r2
	...
    54a0:	107d0002 	rsbsne	r0, sp, r2
	...
    54b8:	00500001 	subseq	r0, r0, r1
    54bc:	00000000 	andeq	r0, r0, r0
    54c0:	01000000 	mrseq	r0, (UNDEF: 0)
    54c4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    54d8:	00010000 	andeq	r0, r1, r0
    54dc:	00000051 	andeq	r0, r0, r1, asr r0
    54e0:	00000000 	andeq	r0, r0, r0
    54e4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    54f0:	00010000 	andeq	r0, r1, r0
	...
    54fc:	00500001 	subseq	r0, r0, r1
    5500:	00000000 	andeq	r0, r0, r0
    5504:	02000000 	andeq	r0, r0, #0
    5508:	009f3100 	addseq	r3, pc, r0, lsl #2
    550c:	00000000 	andeq	r0, r0, r0
    5510:	02000000 	andeq	r0, r0, #0
	...
    551c:	01000000 	mrseq	r0, (UNDEF: 0)
    5520:	00005000 	andeq	r5, r0, r0
    5524:	00000000 	andeq	r0, r0, r0
    5528:	00010000 	andeq	r0, r1, r0
    552c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    553c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    554c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    556c:	00540001 	subseq	r0, r4, r1
	...
    5580:	31000200 	mrscc	r0, R8_usr
    5584:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5588:	00000000 	andeq	r0, r0, r0
    558c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    5598:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    55a4:	00540001 	subseq	r0, r4, r1
	...
    55b4:	02000000 	andeq	r0, r0, #0
    55b8:	00007d00 	andeq	r7, r0, r0, lsl #26
    55bc:	00000000 	andeq	r0, r0, r0
    55c0:	02000000 	andeq	r0, r0, #0
    55c4:	00087d00 	andeq	r7, r8, r0, lsl #26
    55c8:	00000000 	andeq	r0, r0, r0
    55cc:	02000000 	andeq	r0, r0, #0
    55d0:	00107d00 	andseq	r7, r0, r0, lsl #26
    55d4:	00000000 	andeq	r0, r0, r0
    55d8:	02000000 	andeq	r0, r0, #0
    55dc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    55f0:	01000000 	mrseq	r0, (UNDEF: 0)
    55f4:	00005000 	andeq	r5, r0, r0
    55f8:	00000000 	andeq	r0, r0, r0
    55fc:	00040000 	andeq	r0, r4, r0
    5600:	9f5001f3 	svcls	0x005001f3
	...
    5618:	00010000 	andeq	r0, r1, r0
    561c:	00000051 	andeq	r0, r0, r1, asr r0
    5620:	00000000 	andeq	r0, r0, r0
    5624:	53000100 	movwpl	r0, #256	; 0x100
	...
    5630:	01f30004 	mvnseq	r0, r4
    5634:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5648:	00010000 	andeq	r0, r1, r0
    564c:	00000050 	andeq	r0, r0, r0, asr r0
    5650:	00000000 	andeq	r0, r0, r0
    5654:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5668:	007d0002 	rsbseq	r0, sp, r2
	...
    5674:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    568c:	00500001 	subseq	r0, r0, r1
    5690:	00000000 	andeq	r0, r0, r0
    5694:	04000000 	streq	r0, [r0], #-0
    5698:	5001f300 	andpl	pc, r1, r0, lsl #6
    569c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    56b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    56bc:	00540001 	subseq	r0, r4, r1
	...
    56cc:	02000000 	andeq	r0, r0, #0
    56d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    56d4:	00000000 	andeq	r0, r0, r0
    56d8:	02000000 	andeq	r0, r0, #0
    56dc:	00087d00 	andeq	r7, r8, r0, lsl #26
    56e0:	00000000 	andeq	r0, r0, r0
    56e4:	02000000 	andeq	r0, r0, #0
    56e8:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    5700:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    570c:	01f30004 	mvnseq	r0, r4
    5710:	00009f50 	andeq	r9, r0, r0, asr pc
    5714:	00000000 	andeq	r0, r0, r0
    5718:	00010000 	andeq	r0, r1, r0
    571c:	00000050 	andeq	r0, r0, r0, asr r0
    5720:	00000000 	andeq	r0, r0, r0
    5724:	00230e00 	eoreq	r0, r3, r0, lsl #28
    5728:	00231010 	eoreq	r1, r3, r0, lsl r0
    572c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5730:	00231000 	eoreq	r1, r3, r0
    5734:	00233410 	eoreq	r3, r3, r0, lsl r4
    5738:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    573c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    574c:	00230e00 	eoreq	r0, r3, r0, lsl #28
    5750:	00232210 	eoreq	r2, r3, r0, lsl r2
    5754:	50000110 	andpl	r0, r0, r0, lsl r1
    5758:	10002322 	andne	r2, r0, r2, lsr #6
    575c:	10002325 	andne	r2, r0, r5, lsr #6
    5760:	cc700003 	ldclgt	0, cr0, [r0], #-12
    5764:	00232500 	eoreq	r2, r3, r0, lsl #10
    5768:	00233010 	eoreq	r3, r3, r0, lsl r0
    576c:	f3000410 	vqshl.u8	d0, d0, d0
    5770:	309f5001 	addscc	r5, pc, r1
    5774:	34100023 	ldrcc	r0, [r0], #-35	; 0xffffffdd
    5778:	01100023 	tsteq	r0, r3, lsr #32
    577c:	00005000 	andeq	r5, r0, r0
	...
    578c:	230e0000 	movwcs	r0, #57344	; 0xe000
    5790:	23201000 	nopcs	{0}	; <UNPREDICTABLE>
    5794:	00011000 	andeq	r1, r1, r0
    5798:	00232051 	eoreq	r2, r3, r1, asr r0
    579c:	00232510 	eoreq	r2, r3, r0, lsl r5
    57a0:	53000110 	movwpl	r0, #272	; 0x110
    57a4:	10002325 	andne	r2, r0, r5, lsr #6
    57a8:	10002330 	andne	r2, r0, r0, lsr r3
    57ac:	01f30004 	mvnseq	r0, r4
    57b0:	23309f51 	teqcs	r0, #324	; 0x144
    57b4:	23341000 	teqcs	r4, #0
    57b8:	00011000 	andeq	r1, r1, r0
    57bc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    57c8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    57cc:	25100023 	ldrcs	r0, [r0, #-35]	; 0xffffffdd
    57d0:	01100023 	tsteq	r0, r3, lsr #32
    57d4:	23255200 			; <UNDEFINED> instruction: 0x23255200
    57d8:	23301000 	teqcs	r0, #0
    57dc:	00041000 	andeq	r1, r4, r0
    57e0:	9f5201f3 	svcls	0x005201f3
    57e4:	10002330 	andne	r2, r0, r0, lsr r3
    57e8:	10002334 	andne	r2, r0, r4, lsr r3
    57ec:	00520001 	subseq	r0, r2, r1
	...
    57f8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    57fc:	16100023 	ldrne	r0, [r0], -r3, lsr #32
    5800:	01100023 	tsteq	r0, r3, lsr #32
    5804:	23165300 	tstcs	r6, #0, 6
    5808:	23341000 	teqcs	r4, #0
    580c:	00041000 	andeq	r1, r4, r0
    5810:	9f5301f3 	svcls	0x005301f3
	...
    5820:	1000230e 	andne	r2, r0, lr, lsl #6
    5824:	10002330 	andne	r2, r0, r0, lsr r3
    5828:	00910002 	addseq	r0, r1, r2
    582c:	10002330 	andne	r2, r0, r0, lsr r3
    5830:	10002334 	andne	r2, r0, r4, lsr r3
    5834:	00910002 	addseq	r0, r1, r2
	...
    5848:	007d0002 	rsbseq	r0, sp, r2
	...
    5854:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    5860:	207d0002 	rsbscs	r0, sp, r2
	...
    586c:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    5878:	207d0002 	rsbscs	r0, sp, r2
	...
    5898:	00500001 	subseq	r0, r0, r1
    589c:	00000000 	andeq	r0, r0, r0
    58a0:	01000000 	mrseq	r0, (UNDEF: 0)
    58a4:	00005600 	andeq	r5, r0, r0, lsl #12
    58a8:	00000000 	andeq	r0, r0, r0
    58ac:	00010000 	andeq	r0, r1, r0
    58b0:	00000050 	andeq	r0, r0, r0, asr r0
    58b4:	00000000 	andeq	r0, r0, r0
    58b8:	f3000400 	vshl.u8	d0, d0, d0
    58bc:	009f5001 	addseq	r5, pc, r1
    58c0:	00000000 	andeq	r0, r0, r0
    58c4:	01000000 	mrseq	r0, (UNDEF: 0)
    58c8:	00005000 	andeq	r5, r0, r0
    58cc:	00000000 	andeq	r0, r0, r0
    58d0:	00010000 	andeq	r0, r1, r0
    58d4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    58ec:	01000000 	mrseq	r0, (UNDEF: 0)
    58f0:	00005100 	andeq	r5, r0, r0, lsl #2
    58f4:	00000000 	andeq	r0, r0, r0
    58f8:	00010000 	andeq	r0, r1, r0
    58fc:	00000054 	andeq	r0, r0, r4, asr r0
    5900:	00000000 	andeq	r0, r0, r0
    5904:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5910:	01f30004 	mvnseq	r0, r4
    5914:	00009f51 	andeq	r9, r0, r1, asr pc
    5918:	00000000 	andeq	r0, r0, r0
    591c:	00010000 	andeq	r0, r1, r0
    5920:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5938:	52000100 	andpl	r0, r0, #0, 2
	...
    5944:	01f30004 	mvnseq	r0, r4
    5948:	00009f52 	andeq	r9, r0, r2, asr pc
    594c:	00000000 	andeq	r0, r0, r0
    5950:	00010000 	andeq	r0, r1, r0
    5954:	00000052 	andeq	r0, r0, r2, asr r0
    5958:	00000000 	andeq	r0, r0, r0
    595c:	f3000400 	vshl.u8	d0, d0, d0
    5960:	009f5201 	addseq	r5, pc, r1, lsl #4
    5964:	00000000 	andeq	r0, r0, r0
    5968:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    597c:	30000200 	andcc	r0, r0, r0, lsl #4
    5980:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5984:	00000000 	andeq	r0, r0, r0
    5988:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5994:	00550001 	subseq	r0, r5, r1
    5998:	00000000 	andeq	r0, r0, r0
    599c:	02000000 	andeq	r0, r0, #0
    59a0:	009f3000 	addseq	r3, pc, r0
    59a4:	00000000 	andeq	r0, r0, r0
    59a8:	02000000 	andeq	r0, r0, #0
    59ac:	009f3000 	addseq	r3, pc, r0
    59b0:	00000000 	andeq	r0, r0, r0
    59b4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    59c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    59d0:	9c700004 	ldclls	0, cr0, [r0], #-16
    59d4:	00009f7f 	andeq	r9, r0, pc, ror pc
    59d8:	00000000 	andeq	r0, r0, r0
    59dc:	00060000 	andeq	r0, r6, r0
    59e0:	00760074 	rsbseq	r0, r6, r4, ror r0
    59e4:	00009f1e 	andeq	r9, r0, lr, lsl pc
    59e8:	00000000 	andeq	r0, r0, r0
    59ec:	02010000 	andeq	r0, r1, #0
    59f0:	00000002 	andeq	r0, r0, r2
	...
    59fc:	00010000 	andeq	r0, r1, r0
    5a00:	00000050 	andeq	r0, r0, r0, asr r0
    5a04:	00000000 	andeq	r0, r0, r0
    5a08:	70000400 	andvc	r0, r0, r0, lsl #8
    5a0c:	009f00e4 	addseq	r0, pc, r4, ror #1
    5a10:	00000000 	andeq	r0, r0, r0
    5a14:	01000000 	mrseq	r0, (UNDEF: 0)
    5a18:	00005200 	andeq	r5, r0, r0, lsl #4
    5a1c:	00000000 	andeq	r0, r0, r0
    5a20:	00040000 	andeq	r0, r4, r0
    5a24:	9f00e475 	svcls	0x0000e475
	...
    5a40:	00500001 	subseq	r0, r0, r1
    5a44:	00000000 	andeq	r0, r0, r0
    5a48:	04000000 	streq	r0, [r0], #-0
    5a4c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5a50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5a54:	00000000 	andeq	r0, r0, r0
    5a58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5a64:	00720002 	rsbseq	r0, r2, r2
	...
    5a70:	00010000 	andeq	r0, r1, r0
	...
    5a7c:	9f300002 	svcls	0x00300002
	...
    5a88:	9f310002 	svcls	0x00310002
	...
    5a94:	00000003 	andeq	r0, r0, r3
	...
    5aa4:	00500001 	subseq	r0, r0, r1
    5aa8:	00000000 	andeq	r0, r0, r0
    5aac:	04000000 	streq	r0, [r0], #-0
    5ab0:	5001f300 	andpl	pc, r1, r0, lsl #6
    5ab4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5ab8:	00000000 	andeq	r0, r0, r0
    5abc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5ac8:	00720002 	rsbseq	r0, r2, r2
	...
    5ad4:	10002334 	andne	r2, r0, r4, lsr r3
    5ad8:	10002338 	andne	r2, r0, r8, lsr r3
    5adc:	007d0002 	rsbseq	r0, sp, r2
    5ae0:	10002338 	andne	r2, r0, r8, lsr r3
    5ae4:	1000233a 	andne	r2, r0, sl, lsr r3
    5ae8:	087d0002 	ldmdaeq	sp!, {r1}^
    5aec:	1000233a 	andne	r2, r0, sl, lsr r3
    5af0:	1000235c 	andne	r2, r0, ip, asr r3
    5af4:	107d0002 	rsbsne	r0, sp, r2
    5af8:	1000235c 	andne	r2, r0, ip, asr r3
    5afc:	1000235e 	andne	r2, r0, lr, asr r3
    5b00:	087d0002 	ldmdaeq	sp!, {r1}^
    5b04:	1000235e 	andne	r2, r0, lr, asr r3
    5b08:	10002366 	andne	r2, r0, r6, ror #6
    5b0c:	107d0002 	rsbsne	r0, sp, r2
    5b10:	10002366 	andne	r2, r0, r6, ror #6
    5b14:	1000236a 	andne	r2, r0, sl, ror #6
    5b18:	007d0002 	rsbseq	r0, sp, r2
    5b1c:	1000236a 	andne	r2, r0, sl, ror #6
    5b20:	10002372 	andne	r2, r0, r2, ror r3
    5b24:	107d0002 	rsbsne	r0, sp, r2
	...
    5b44:	23340000 	teqcs	r4, #0
    5b48:	23541000 	cmpcs	r4, #0
    5b4c:	00011000 	andeq	r1, r1, r0
    5b50:	00235450 	eoreq	r5, r3, r0, asr r4
    5b54:	00235710 	eoreq	r5, r3, r0, lsl r7
    5b58:	5c000110 	stfpls	f0, [r0], {16}
    5b5c:	10002357 	andne	r2, r0, r7, asr r3
    5b60:	1000235e 	andne	r2, r0, lr, asr r3
    5b64:	01f30004 	mvnseq	r0, r4
    5b68:	235e9f50 	cmpcs	lr, #80, 30	; 0x140
    5b6c:	23641000 	cmncs	r4, #0
    5b70:	00011000 	andeq	r1, r1, r0
    5b74:	00236450 	eoreq	r6, r3, r0, asr r4
    5b78:	00236610 	eoreq	r6, r3, r0, lsl r6
    5b7c:	5c000110 	stfpls	f0, [r0], {16}
    5b80:	10002366 	andne	r2, r0, r6, ror #6
    5b84:	10002368 	andne	r2, r0, r8, ror #6
    5b88:	68500001 	ldmdavs	r0, {r0}^
    5b8c:	6a100023 	bvs	405c20 <__RAM_SIZE+0x305c20>
    5b90:	04100023 	ldreq	r0, [r0], #-35	; 0xffffffdd
    5b94:	5001f300 	andpl	pc, r1, r0, lsl #6
    5b98:	00236a9f 	mlaeq	r3, pc, sl, r6	; <UNPREDICTABLE>
    5b9c:	00236c10 	eoreq	r6, r3, r0, lsl ip
    5ba0:	50000110 	andpl	r0, r0, r0, lsl r1
    5ba4:	1000236c 	andne	r2, r0, ip, ror #6
    5ba8:	1000236e 	andne	r2, r0, lr, ror #6
    5bac:	6e5c0001 	cdpvs	0, 5, cr0, cr12, cr1, {0}
    5bb0:	70100023 	andsvc	r0, r0, r3, lsr #32
    5bb4:	01100023 	tsteq	r0, r3, lsr #32
    5bb8:	23705000 	cmncs	r0, #0
    5bbc:	23721000 	cmncs	r2, #0
    5bc0:	00011000 	andeq	r1, r1, r0
    5bc4:	0000005c 	andeq	r0, r0, ip, asr r0
	...
    5bd0:	34000000 	strcc	r0, [r0], #-0
    5bd4:	57100023 	ldrpl	r0, [r0, -r3, lsr #32]
    5bd8:	01100023 	tsteq	r0, r3, lsr #32
    5bdc:	23575100 	cmpcs	r7, #0, 2
    5be0:	235e1000 	cmpcs	lr, #0
    5be4:	00041000 	andeq	r1, r4, r0
    5be8:	9f5101f3 	svcls	0x005101f3
    5bec:	1000235e 	andne	r2, r0, lr, asr r3
    5bf0:	10002372 	andne	r2, r0, r2, ror r3
    5bf4:	00510001 	subseq	r0, r1, r1
	...
    5c04:	00233400 	eoreq	r3, r3, r0, lsl #8
    5c08:	00235710 	eoreq	r5, r3, r0, lsl r7
    5c0c:	52000110 	andpl	r0, r0, #16, 2
    5c10:	10002357 	andne	r2, r0, r7, asr r3
    5c14:	1000235e 	andne	r2, r0, lr, asr r3
    5c18:	01f30004 	mvnseq	r0, r4
    5c1c:	235e9f52 	cmpcs	lr, #328	; 0x148
    5c20:	23721000 	cmncs	r2, #0
    5c24:	00011000 	andeq	r1, r1, r0
    5c28:	00000052 	andeq	r0, r0, r2, asr r0
	...
    5c34:	34000000 	strcc	r0, [r0], #-0
    5c38:	48100023 	ldmdami	r0, {r0, r1, r5}
    5c3c:	01100023 	tsteq	r0, r3, lsr #32
    5c40:	23485300 	movtcs	r5, #33536	; 0x8300
    5c44:	235e1000 	cmpcs	lr, #0
    5c48:	00011000 	andeq	r1, r1, r0
    5c4c:	00235e54 	eoreq	r5, r3, r4, asr lr
    5c50:	00237210 	eoreq	r7, r3, r0, lsl r2
    5c54:	53000110 	movwpl	r0, #272	; 0x110
	...
    5c64:	10002334 	andne	r2, r0, r4, lsr r3
    5c68:	1000235e 	andne	r2, r0, lr, asr r3
    5c6c:	00910002 	addseq	r0, r1, r2
    5c70:	1000235e 	andne	r2, r0, lr, asr r3
    5c74:	10002372 	andne	r2, r0, r2, ror r3
    5c78:	00910002 	addseq	r0, r1, r2
	...
    5c84:	00010102 	andeq	r0, r1, r2, lsl #2
	...
    5c90:	10002334 	andne	r2, r0, r4, lsr r3
    5c94:	10002346 	andne	r2, r0, r6, asr #6
    5c98:	9f300002 	svcls	0x00300002
    5c9c:	10002346 	andne	r2, r0, r6, asr #6
    5ca0:	10002348 	andne	r2, r0, r8, asr #6
    5ca4:	48530001 	ldmdami	r3, {r0}^
    5ca8:	5a100023 	bpl	405d3c <__RAM_SIZE+0x305d3c>
    5cac:	01100023 	tsteq	r0, r3, lsr #32
    5cb0:	235e5400 	cmpcs	lr, #0, 8
    5cb4:	23641000 	cmncs	r4, #0
    5cb8:	00021000 	andeq	r1, r2, r0
    5cbc:	23649f30 	cmncs	r4, #48, 30	; 0xc0
    5cc0:	23661000 	cmncs	r6, #0
    5cc4:	00011000 	andeq	r1, r1, r0
    5cc8:	00236650 	eoreq	r6, r3, r0, asr r6
    5ccc:	00237210 	eoreq	r7, r3, r0, lsl r2
    5cd0:	30000210 	andcc	r0, r0, r0, lsl r2
    5cd4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5cd8:	00000000 	andeq	r0, r0, r0
    5cdc:	00228800 	eoreq	r8, r2, r0, lsl #16
    5ce0:	00228e10 	eoreq	r8, r2, r0, lsl lr
    5ce4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5ce8:	00228e00 	eoreq	r8, r2, r0, lsl #28
    5cec:	00230610 	eoreq	r0, r3, r0, lsl r6
    5cf0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5cf4:	00230610 	eoreq	r0, r3, r0, lsl r6
    5cf8:	00230a10 	eoreq	r0, r3, r0, lsl sl
    5cfc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5d00:	00230a00 	eoreq	r0, r3, r0, lsl #20
    5d04:	00230e10 	eoreq	r0, r3, r0, lsl lr
    5d08:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5d0c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5d24:	00228800 	eoreq	r8, r2, r0, lsl #16
    5d28:	0022a610 	eoreq	sl, r2, r0, lsl r6
    5d2c:	50000110 	andpl	r0, r0, r0, lsl r1
    5d30:	100022a6 	andne	r2, r0, r6, lsr #5
    5d34:	100022a8 	andne	r2, r0, r8, lsr #5
    5d38:	a8540001 	ldmdage	r4, {r0}^
    5d3c:	af100022 	svcge	0x00100022
    5d40:	01100022 	tsteq	r0, r2, lsr #32
    5d44:	22af5000 	adccs	r5, pc, #0
    5d48:	23061000 	movwcs	r1, #24576	; 0x6000
    5d4c:	00011000 	andeq	r1, r1, r0
    5d50:	00230654 	eoreq	r0, r3, r4, asr r6
    5d54:	00230810 	eoreq	r0, r3, r0, lsl r8
    5d58:	50000110 	andpl	r0, r0, r0, lsl r1
    5d5c:	10002308 	andne	r2, r0, r8, lsl #6
    5d60:	1000230a 	andne	r2, r0, sl, lsl #6
    5d64:	01f30004 	mvnseq	r0, r4
    5d68:	230a9f50 	movwcs	r9, #44880	; 0xaf50
    5d6c:	230c1000 	movwcs	r1, #49152	; 0xc000
    5d70:	00011000 	andeq	r1, r1, r0
    5d74:	00230c50 	eoreq	r0, r3, r0, asr ip
    5d78:	00230e10 	eoreq	r0, r3, r0, lsl lr
    5d7c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    5d90:	10002288 	andne	r2, r0, r8, lsl #5
    5d94:	1000229c 	mulne	r0, ip, r2
    5d98:	9c510001 	mrrcls	0, 0, r0, r1, cr1
    5d9c:	06100022 	ldreq	r0, [r0], -r2, lsr #32
    5da0:	01100023 	tsteq	r0, r3, lsr #32
    5da4:	23065500 	movwcs	r5, #25856	; 0x6500
    5da8:	230c1000 	movwcs	r1, #49152	; 0xc000
    5dac:	00011000 	andeq	r1, r1, r0
    5db0:	00230c51 	eoreq	r0, r3, r1, asr ip
    5db4:	00230e10 	eoreq	r0, r3, r0, lsl lr
    5db8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    5dc4:	00000002 	andeq	r0, r0, r2
    5dc8:	22880000 	addcs	r0, r8, #0
    5dcc:	22a61000 	adccs	r1, r6, #0
    5dd0:	00021000 	andeq	r1, r2, r0
    5dd4:	22a69f31 	adccs	r9, r6, #49, 30	; 0xc4
    5dd8:	22a81000 	adccs	r1, r8, #0
    5ddc:	00021000 	andeq	r1, r2, r0
    5de0:	22a89f30 	adccs	r9, r8, #48, 30	; 0xc0
    5de4:	230c1000 	movwcs	r1, #49152	; 0xc000
    5de8:	00021000 	andeq	r1, r2, r0
    5dec:	00009f31 	andeq	r9, r0, r1, lsr pc
    5df0:	00000000 	andeq	r0, r0, r0
    5df4:	00030000 	andeq	r0, r3, r0
	...
    5e04:	22880000 	addcs	r0, r8, #0
    5e08:	22a61000 	adccs	r1, r6, #0
    5e0c:	00011000 	andeq	r1, r1, r0
    5e10:	0022a650 	eoreq	sl, r2, r0, asr r6
    5e14:	0022a810 	eoreq	sl, r2, r0, lsl r8
    5e18:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5e1c:	100022a8 	andne	r2, r0, r8, lsr #5
    5e20:	100022af 	andne	r2, r0, pc, lsr #5
    5e24:	af500001 	svcge	0x00500001
    5e28:	06100022 	ldreq	r0, [r0], -r2, lsr #32
    5e2c:	01100023 	tsteq	r0, r3, lsr #32
    5e30:	23065400 	movwcs	r5, #25600	; 0x6400
    5e34:	23081000 	movwcs	r1, #32768	; 0x8000
    5e38:	00011000 	andeq	r1, r1, r0
    5e3c:	00230850 	eoreq	r0, r3, r0, asr r8
    5e40:	00230a10 	eoreq	r0, r3, r0, lsl sl
    5e44:	f3000410 	vqshl.u8	d0, d0, d0
    5e48:	0a9f5001 	beq	fe7d9e54 <__StackTop+0xc66d9e54>
    5e4c:	0c100023 	ldceq	0, cr0, [r0], {35}	; 0x23
    5e50:	01100023 	tsteq	r0, r3, lsr #32
    5e54:	230c5000 	movwcs	r5, #49152	; 0xc000
    5e58:	230e1000 	movwcs	r1, #57344	; 0xe000
    5e5c:	00011000 	andeq	r1, r1, r0
    5e60:	00000054 	andeq	r0, r0, r4, asr r0
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    5e74:	53000100 	movwpl	r0, #256	; 0x100
	...
    5e80:	00530001 	subseq	r0, r3, r1
    5e84:	00000000 	andeq	r0, r0, r0
    5e88:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5e8c:	1c100028 	ldcne	0, cr0, [r0], {40}	; 0x28
    5e90:	02100028 	andseq	r0, r0, #40	; 0x28
    5e94:	1c007d00 	stcne	13, cr7, [r0], {-0}
    5e98:	c0100028 	andsgt	r0, r0, r8, lsr #32
    5e9c:	02100028 	andseq	r0, r0, #40	; 0x28
    5ea0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5eb4:	00281800 	eoreq	r1, r8, r0, lsl #16
    5eb8:	00283a10 	eoreq	r3, r8, r0, lsl sl
    5ebc:	50000110 	andpl	r0, r0, r0, lsl r1
    5ec0:	1000283a 	andne	r2, r0, sl, lsr r8
    5ec4:	10002848 	andne	r2, r0, r8, asr #16
    5ec8:	48540001 	ldmdami	r4, {r0}^
    5ecc:	62100028 	andsvs	r0, r0, #40	; 0x28
    5ed0:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    5ed4:	5001f300 	andpl	pc, r1, r0, lsl #6
    5ed8:	0028629f 	mlaeq	r8, pc, r2, r6	; <UNPREDICTABLE>
    5edc:	00287410 	eoreq	r7, r8, r0, lsl r4
    5ee0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5ee4:	10002874 	andne	r2, r0, r4, ror r8
    5ee8:	100028c0 	andne	r2, r0, r0, asr #17
    5eec:	01f30004 	mvnseq	r0, r4
    5ef0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5efc:	28180000 	ldmdacs	r8, {}	; <UNPREDICTABLE>
    5f00:	28341000 	ldmdacs	r4!, {ip}
    5f04:	00011000 	andeq	r1, r1, r0
    5f08:	00283451 	eoreq	r3, r8, r1, asr r4
    5f0c:	0028c010 	eoreq	ip, r8, r0, lsl r0
    5f10:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    5f20:	10002848 	andne	r2, r0, r8, asr #16
    5f24:	1000285e 	andne	r2, r0, lr, asr r8
    5f28:	8e540001 	cdphi	0, 5, cr0, cr4, cr1, {0}
    5f2c:	c0100028 	andsgt	r0, r0, r8, lsr #32
    5f30:	01100028 	tsteq	r0, r8, lsr #32
    5f34:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5f40:	10002824 	andne	r2, r0, r4, lsr #16
    5f44:	100028c0 	andne	r2, r0, r0, asr #17
    5f48:	00560001 	subseq	r0, r6, r1
	...
    5f54:	00282800 	eoreq	r2, r8, r0, lsl #16
    5f58:	0028c010 	eoreq	ip, r8, r0, lsl r0
    5f5c:	57000110 	smladpl	r0, r0, r1, r0
	...
    5f68:	282e0000 	stmdacs	lr!, {}	; <UNPREDICTABLE>
    5f6c:	28c01000 	stmiacs	r0, {ip}^
    5f70:	00011000 	andeq	r1, r1, r0
    5f74:	00000058 	andeq	r0, r0, r8, asr r0
    5f78:	00000000 	andeq	r0, r0, r0
    5f7c:	6a000000 	bvs	5f84 <__HEAP_SIZE+0x4f84>
    5f80:	8e100028 	cdphi	0, 1, cr0, cr0, cr8, {1}
    5f84:	01100028 	tsteq	r0, r8, lsr #32
    5f88:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    5f98:	00020000 	andeq	r0, r2, r0
    5f9c:	0000007d 	andeq	r0, r0, sp, ror r0
    5fa0:	00000000 	andeq	r0, r0, r0
    5fa4:	00020000 	andeq	r0, r2, r0
    5fa8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5fbc:	00010000 	andeq	r0, r1, r0
    5fc0:	00000050 	andeq	r0, r0, r0, asr r0
    5fc4:	00000000 	andeq	r0, r0, r0
    5fc8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5fe0:	00010000 	andeq	r0, r1, r0
    5fe4:	00000051 	andeq	r0, r0, r1, asr r0
    5fe8:	00000000 	andeq	r0, r0, r0
    5fec:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5ff8:	00510001 	subseq	r0, r1, r1
	...
    6010:	52000100 	andpl	r0, r0, #0, 2
	...
    601c:	00560001 	subseq	r0, r6, r1
    6020:	00000000 	andeq	r0, r0, r0
    6024:	01000000 	mrseq	r0, (UNDEF: 0)
    6028:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    603c:	00540001 	subseq	r0, r4, r1
	...
    6050:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6064:	007d0002 	rsbseq	r0, sp, r2
	...
    6070:	107d0002 	rsbsne	r0, sp, r2
	...
    6088:	00500001 	subseq	r0, r0, r1
    608c:	00000000 	andeq	r0, r0, r0
    6090:	01000000 	mrseq	r0, (UNDEF: 0)
    6094:	00005000 	andeq	r5, r0, r0
	...
    60b0:	00010000 	andeq	r0, r1, r0
    60b4:	00000051 	andeq	r0, r0, r1, asr r0
    60b8:	00000000 	andeq	r0, r0, r0
    60bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    60c8:	01f30004 	mvnseq	r0, r4
    60cc:	00009f51 	andeq	r9, r0, r1, asr pc
    60d0:	00000000 	andeq	r0, r0, r0
    60d4:	00010000 	andeq	r0, r1, r0
    60d8:	00000051 	andeq	r0, r0, r1, asr r0
    60dc:	00000000 	andeq	r0, r0, r0
    60e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    60ec:	01f30004 	mvnseq	r0, r4
    60f0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    6104:	00010000 	andeq	r0, r1, r0
    6108:	00000055 	andeq	r0, r0, r5, asr r0
    610c:	00000000 	andeq	r0, r0, r0
    6110:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    611c:	00010000 	andeq	r0, r1, r0
	...
    6128:	00540001 	subseq	r0, r4, r1
    612c:	00000000 	andeq	r0, r0, r0
    6130:	02000000 	andeq	r0, r0, #0
    6134:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    6144:	02000000 	andeq	r0, r0, #0
    6148:	00007d00 	andeq	r7, r0, r0, lsl #26
    614c:	00000000 	andeq	r0, r0, r0
    6150:	02000000 	andeq	r0, r0, #0
    6154:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    6168:	01000000 	mrseq	r0, (UNDEF: 0)
    616c:	00005000 	andeq	r5, r0, r0
    6170:	00000000 	andeq	r0, r0, r0
    6174:	00010000 	andeq	r0, r1, r0
    6178:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6190:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    619c:	00540001 	subseq	r0, r4, r1
    61a0:	00000000 	andeq	r0, r0, r0
    61a4:	03000000 	movweq	r0, #0
    61a8:	9f667400 	svcls	0x00667400
	...
    61b4:	01f30004 	mvnseq	r0, r4
    61b8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    61cc:	00010000 	andeq	r0, r1, r0
    61d0:	00000052 	andeq	r0, r0, r2, asr r0
    61d4:	00000000 	andeq	r0, r0, r0
    61d8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    61e4:	00000008 	andeq	r0, r0, r8
	...
    61f0:	00500001 	subseq	r0, r0, r1
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	01000000 	mrseq	r0, (UNDEF: 0)
    61fc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    6210:	00010000 	andeq	r0, r1, r0
    6214:	00000053 	andeq	r0, r0, r3, asr r0
    6218:	00000000 	andeq	r0, r0, r0
    621c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6234:	00500001 	subseq	r0, r0, r1
    6238:	00000000 	andeq	r0, r0, r0
    623c:	01000000 	mrseq	r0, (UNDEF: 0)
    6240:	00005000 	andeq	r5, r0, r0
	...
    6254:	00010000 	andeq	r0, r1, r0
    6258:	00000053 	andeq	r0, r0, r3, asr r0
    625c:	00000000 	andeq	r0, r0, r0
    6260:	53000100 	movwpl	r0, #256	; 0x100
	...
    6274:	00010000 	andeq	r0, r1, r0
    6278:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6288:	01000000 	mrseq	r0, (UNDEF: 0)
    628c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    629c:	00020000 	andeq	r0, r2, r0
    62a0:	0000007d 	andeq	r0, r0, sp, ror r0
    62a4:	00000000 	andeq	r0, r0, r0
    62a8:	00020000 	andeq	r0, r2, r0
    62ac:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    62c0:	00010000 	andeq	r0, r1, r0
    62c4:	00000050 	andeq	r0, r0, r0, asr r0
    62c8:	00000000 	andeq	r0, r0, r0
    62cc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    6300:	00010000 	andeq	r0, r1, r0
    6304:	00000051 	andeq	r0, r0, r1, asr r0
    6308:	00000000 	andeq	r0, r0, r0
    630c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6318:	66740003 	ldrbtvs	r0, [r4], -r3
    631c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6320:	00000000 	andeq	r0, r0, r0
    6324:	f3000400 	vshl.u8	d0, d0, d0
    6328:	009f5101 	addseq	r5, pc, r1, lsl #2
    632c:	00000000 	andeq	r0, r0, r0
    6330:	01000000 	mrseq	r0, (UNDEF: 0)
    6334:	00005400 	andeq	r5, r0, r0, lsl #8
    6338:	00000000 	andeq	r0, r0, r0
    633c:	00030000 	andeq	r0, r3, r0
    6340:	009f6674 	addseq	r6, pc, r4, ror r6	; <UNPREDICTABLE>
    6344:	00000000 	andeq	r0, r0, r0
    6348:	04000000 	streq	r0, [r0], #-0
    634c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6350:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6354:	00000000 	andeq	r0, r0, r0
    6358:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6364:	66740003 	ldrbtvs	r0, [r4], -r3
    6368:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    636c:	00000000 	andeq	r0, r0, r0
    6370:	f3000400 	vshl.u8	d0, d0, d0
    6374:	009f5101 	addseq	r5, pc, r1, lsl #2
    6378:	00000000 	andeq	r0, r0, r0
    637c:	01000000 	mrseq	r0, (UNDEF: 0)
    6380:	00005400 	andeq	r5, r0, r0, lsl #8
    6384:	00000000 	andeq	r0, r0, r0
    6388:	00030000 	andeq	r0, r3, r0
    638c:	009f6674 	addseq	r6, pc, r4, ror r6	; <UNPREDICTABLE>
    6390:	00000000 	andeq	r0, r0, r0
    6394:	04000000 	streq	r0, [r0], #-0
    6398:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    639c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    63a0:	00000000 	andeq	r0, r0, r0
    63a4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    63b0:	01f30004 	mvnseq	r0, r4
    63b4:	00009f51 	andeq	r9, r0, r1, asr pc
    63b8:	00000000 	andeq	r0, r0, r0
    63bc:	00010000 	andeq	r0, r1, r0
    63c0:	00000054 	andeq	r0, r0, r4, asr r0
    63c4:	00000000 	andeq	r0, r0, r0
    63c8:	f3000400 	vshl.u8	d0, d0, d0
    63cc:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    63e8:	52000100 	andpl	r0, r0, #0, 2
	...
    63f4:	00570001 	subseq	r0, r7, r1
    63f8:	00000000 	andeq	r0, r0, r0
    63fc:	04000000 	streq	r0, [r0], #-0
    6400:	5201f300 	andpl	pc, r1, #0, 6
    6404:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6408:	00000000 	andeq	r0, r0, r0
    640c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    6418:	01f30004 	mvnseq	r0, r4
    641c:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    6430:	00010000 	andeq	r0, r1, r0
    6434:	00000053 	andeq	r0, r0, r3, asr r0
    6438:	00000000 	andeq	r0, r0, r0
    643c:	f3000400 	vshl.u8	d0, d0, d0
    6440:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    6454:	02000000 	andeq	r0, r0, #0
    6458:	00009100 	andeq	r9, r0, r0, lsl #2
    645c:	00000000 	andeq	r0, r0, r0
    6460:	02000000 	andeq	r0, r0, #0
    6464:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    6478:	02000000 	andeq	r0, r0, #0
    647c:	00049100 	andeq	r9, r4, r0, lsl #2
    6480:	00000000 	andeq	r0, r0, r0
    6484:	02000000 	andeq	r0, r0, #0
    6488:	00049100 	andeq	r9, r4, r0, lsl #2
    648c:	00000000 	andeq	r0, r0, r0
    6490:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
	...
    649c:	01000000 	mrseq	r0, (UNDEF: 0)
    64a0:	00005000 	andeq	r5, r0, r0
    64a4:	00000000 	andeq	r0, r0, r0
    64a8:	00010000 	andeq	r0, r1, r0
    64ac:	00000056 	andeq	r0, r0, r6, asr r0
	...
    64c0:	5c000100 	stfpls	f0, [r0], {-0}
	...
    64cc:	005c0001 	subseq	r0, ip, r1
    64d0:	00000000 	andeq	r0, r0, r0
    64d4:	03000000 	movweq	r0, #0
	...
    64e4:	02000000 	andeq	r0, r0, #0
    64e8:	009f3100 	addseq	r3, pc, r0, lsl #2
    64ec:	00000000 	andeq	r0, r0, r0
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
    64f4:	00005400 	andeq	r5, r0, r0, lsl #8
    64f8:	00000000 	andeq	r0, r0, r0
    64fc:	00020000 	andeq	r0, r2, r0
    6500:	00009f31 	andeq	r9, r0, r1, lsr pc
    6504:	00000000 	andeq	r0, r0, r0
    6508:	00010000 	andeq	r0, r1, r0
    650c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6520:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    652c:	00500001 	subseq	r0, r0, r1
	...
    6540:	01000000 	mrseq	r0, (UNDEF: 0)
    6544:	00005300 	andeq	r5, r0, r0, lsl #6
    6548:	00000000 	andeq	r0, r0, r0
    654c:	00010000 	andeq	r0, r1, r0
    6550:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6560:	01000000 	mrseq	r0, (UNDEF: 0)
    6564:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6578:	00520001 	subseq	r0, r2, r1
	...
    6588:	02000000 	andeq	r0, r0, #0
    658c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6590:	00000000 	andeq	r0, r0, r0
    6594:	02000000 	andeq	r0, r0, #0
    6598:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    65ac:	01000000 	mrseq	r0, (UNDEF: 0)
    65b0:	00005000 	andeq	r5, r0, r0
    65b4:	00000000 	andeq	r0, r0, r0
    65b8:	00010000 	andeq	r0, r1, r0
    65bc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    65ec:	01000000 	mrseq	r0, (UNDEF: 0)
    65f0:	00005100 	andeq	r5, r0, r0, lsl #2
    65f4:	00000000 	andeq	r0, r0, r0
    65f8:	00010000 	andeq	r0, r1, r0
    65fc:	00000055 	andeq	r0, r0, r5, asr r0
    6600:	00000000 	andeq	r0, r0, r0
    6604:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    6608:	00009f66 	andeq	r9, r0, r6, ror #30
    660c:	00000000 	andeq	r0, r0, r0
    6610:	00040000 	andeq	r0, r4, r0
    6614:	9f5101f3 	svcls	0x005101f3
	...
    6620:	00550001 	subseq	r0, r5, r1
    6624:	00000000 	andeq	r0, r0, r0
    6628:	03000000 	movweq	r0, #0
    662c:	9f667500 	svcls	0x00667500
	...
    6638:	01f30004 	mvnseq	r0, r4
    663c:	00009f51 	andeq	r9, r0, r1, asr pc
    6640:	00000000 	andeq	r0, r0, r0
    6644:	00010000 	andeq	r0, r1, r0
    6648:	00000055 	andeq	r0, r0, r5, asr r0
    664c:	00000000 	andeq	r0, r0, r0
    6650:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    6654:	00009f66 	andeq	r9, r0, r6, ror #30
    6658:	00000000 	andeq	r0, r0, r0
    665c:	00040000 	andeq	r0, r4, r0
    6660:	9f5101f3 	svcls	0x005101f3
	...
    666c:	00550001 	subseq	r0, r5, r1
    6670:	00000000 	andeq	r0, r0, r0
    6674:	03000000 	movweq	r0, #0
    6678:	9f667500 	svcls	0x00667500
	...
    6684:	01f30004 	mvnseq	r0, r4
    6688:	00009f51 	andeq	r9, r0, r1, asr pc
    668c:	00000000 	andeq	r0, r0, r0
    6690:	00010000 	andeq	r0, r1, r0
    6694:	00000055 	andeq	r0, r0, r5, asr r0
    6698:	00000000 	andeq	r0, r0, r0
    669c:	f3000400 	vshl.u8	d0, d0, d0
    66a0:	009f5101 	addseq	r5, pc, r1, lsl #2
    66a4:	00000000 	andeq	r0, r0, r0
    66a8:	01000000 	mrseq	r0, (UNDEF: 0)
    66ac:	00005500 	andeq	r5, r0, r0, lsl #10
    66b0:	00000000 	andeq	r0, r0, r0
    66b4:	00040000 	andeq	r0, r4, r0
    66b8:	9f5101f3 	svcls	0x005101f3
	...
    66d4:	00010000 	andeq	r0, r1, r0
    66d8:	00000052 	andeq	r0, r0, r2, asr r0
    66dc:	00000000 	andeq	r0, r0, r0
    66e0:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    66ec:	01f30004 	mvnseq	r0, r4
    66f0:	00009f52 	andeq	r9, r0, r2, asr pc
    66f4:	00000000 	andeq	r0, r0, r0
    66f8:	00010000 	andeq	r0, r1, r0
    66fc:	00000057 	andeq	r0, r0, r7, asr r0
    6700:	00000000 	andeq	r0, r0, r0
    6704:	f3000400 	vshl.u8	d0, d0, d0
    6708:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    671c:	01000000 	mrseq	r0, (UNDEF: 0)
    6720:	00005300 	andeq	r5, r0, r0, lsl #6
    6724:	00000000 	andeq	r0, r0, r0
    6728:	00040000 	andeq	r0, r4, r0
    672c:	9f5301f3 	svcls	0x005301f3
	...
    6744:	00910002 	addseq	r0, r1, r2
	...
    6750:	00910002 	addseq	r0, r1, r2
	...
    675c:	00000007 	andeq	r0, r0, r7
	...
    6768:	00500001 	subseq	r0, r0, r1
    676c:	00000000 	andeq	r0, r0, r0
    6770:	01000000 	mrseq	r0, (UNDEF: 0)
    6774:	00005400 	andeq	r5, r0, r0, lsl #8
    6778:	00000000 	andeq	r0, r0, r0
    677c:	00020000 	andeq	r0, r2, r0
	...
    678c:	00020000 	andeq	r0, r2, r0
    6790:	00009f31 	andeq	r9, r0, r1, lsr pc
    6794:	00000000 	andeq	r0, r0, r0
    6798:	00010000 	andeq	r0, r1, r0
    679c:	00000055 	andeq	r0, r0, r5, asr r0
    67a0:	00000000 	andeq	r0, r0, r0
    67a4:	31000200 	mrscc	r0, R8_usr
    67a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    67ac:	00000000 	andeq	r0, r0, r0
    67b0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    67c8:	00010000 	andeq	r0, r1, r0
    67cc:	00000050 	andeq	r0, r0, r0, asr r0
    67d0:	00000000 	andeq	r0, r0, r0
    67d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    67e0:	00500001 	subseq	r0, r0, r1
	...
    67f4:	01000000 	mrseq	r0, (UNDEF: 0)
    67f8:	00005300 	andeq	r5, r0, r0, lsl #6
    67fc:	00000000 	andeq	r0, r0, r0
    6800:	00010000 	andeq	r0, r1, r0
    6804:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6814:	01000000 	mrseq	r0, (UNDEF: 0)
    6818:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6828:	00020000 	andeq	r0, r2, r0
    682c:	0000007d 	andeq	r0, r0, sp, ror r0
    6830:	00000000 	andeq	r0, r0, r0
    6834:	00020000 	andeq	r0, r2, r0
    6838:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6850:	00010000 	andeq	r0, r1, r0
    6854:	00000050 	andeq	r0, r0, r0, asr r0
    6858:	00000000 	andeq	r0, r0, r0
    685c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6868:	01f30004 	mvnseq	r0, r4
    686c:	00009f50 	andeq	r9, r0, r0, asr pc
    6870:	00000000 	andeq	r0, r0, r0
    6874:	00010000 	andeq	r0, r1, r0
    6878:	00000054 	andeq	r0, r0, r4, asr r0
	...
    688c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6898:	00580001 	subseq	r0, r8, r1
	...
    68b4:	52000100 	andpl	r0, r0, #0, 2
	...
    68c0:	00560001 	subseq	r0, r6, r1
    68c4:	00000000 	andeq	r0, r0, r0
    68c8:	04000000 	streq	r0, [r0], #-0
    68cc:	5201f300 	andpl	pc, r1, #0, 6
    68d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    68d4:	00000000 	andeq	r0, r0, r0
    68d8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    68e4:	01f30004 	mvnseq	r0, r4
    68e8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    6904:	00530001 	subseq	r0, r3, r1
    6908:	00000000 	andeq	r0, r0, r0
    690c:	01000000 	mrseq	r0, (UNDEF: 0)
    6910:	00005500 	andeq	r5, r0, r0, lsl #10
    6914:	00000000 	andeq	r0, r0, r0
    6918:	00040000 	andeq	r0, r4, r0
    691c:	9f5301f3 	svcls	0x005301f3
	...
    6928:	00550001 	subseq	r0, r5, r1
    692c:	00000000 	andeq	r0, r0, r0
    6930:	04000000 	streq	r0, [r0], #-0
    6934:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    6938:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    694c:	91000200 	mrsls	r0, R8_usr
	...
    6958:	91000200 	mrsls	r0, R8_usr
	...
    6964:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6970:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    697c:	9f310002 	svcls	0x00310002
	...
    6994:	00500001 	subseq	r0, r0, r1
    6998:	00000000 	andeq	r0, r0, r0
    699c:	01000000 	mrseq	r0, (UNDEF: 0)
    69a0:	00005000 	andeq	r5, r0, r0
    69a4:	00000000 	andeq	r0, r0, r0
    69a8:	01010000 	mrseq	r0, (UNDEF: 1)
    69ac:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    69b8:	9f300002 	svcls	0x00300002
	...
    69c4:	9f300002 	svcls	0x00300002
	...
    69d0:	9f310002 	svcls	0x00310002
	...
    69e4:	007d0002 	rsbseq	r0, sp, r2
	...
    69f0:	107d0002 	rsbsne	r0, sp, r2
	...
    6a0c:	00500001 	subseq	r0, r0, r1
    6a10:	00000000 	andeq	r0, r0, r0
    6a14:	01000000 	mrseq	r0, (UNDEF: 0)
    6a18:	00005400 	andeq	r5, r0, r0, lsl #8
    6a1c:	00000000 	andeq	r0, r0, r0
    6a20:	00040000 	andeq	r0, r4, r0
    6a24:	9f5001f3 	svcls	0x005001f3
	...
    6a30:	00540001 	subseq	r0, r4, r1
	...
    6a44:	01000000 	mrseq	r0, (UNDEF: 0)
    6a48:	00005100 	andeq	r5, r0, r0, lsl #2
    6a4c:	00000000 	andeq	r0, r0, r0
    6a50:	00010000 	andeq	r0, r1, r0
    6a54:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6a60:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    6a70:	01000000 	mrseq	r0, (UNDEF: 0)
    6a74:	00005200 	andeq	r5, r0, r0, lsl #4
    6a78:	00000000 	andeq	r0, r0, r0
    6a7c:	00010000 	andeq	r0, r1, r0
    6a80:	00000055 	andeq	r0, r0, r5, asr r0
    6a84:	00000000 	andeq	r0, r0, r0
    6a88:	f3000400 	vshl.u8	d0, d0, d0
    6a8c:	009f5201 	addseq	r5, pc, r1, lsl #4
    6a90:	00000000 	andeq	r0, r0, r0
    6a94:	01000000 	mrseq	r0, (UNDEF: 0)
    6a98:	00005500 	andeq	r5, r0, r0, lsl #10
    6a9c:	00000000 	andeq	r0, r0, r0
    6aa0:	00040000 	andeq	r0, r4, r0
    6aa4:	9f5201f3 	svcls	0x005201f3
	...
    6ab0:	00550001 	subseq	r0, r5, r1
    6ab4:	00000000 	andeq	r0, r0, r0
    6ab8:	04000000 	streq	r0, [r0], #-0
    6abc:	5201f300 	andpl	pc, r1, #0, 6
    6ac0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6ad4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6ae0:	00550001 	subseq	r0, r5, r1
	...
    6af4:	01000000 	mrseq	r0, (UNDEF: 0)
    6af8:	00005000 	andeq	r5, r0, r0
    6afc:	00000000 	andeq	r0, r0, r0
    6b00:	00010000 	andeq	r0, r1, r0
    6b04:	00000050 	andeq	r0, r0, r0, asr r0
    6b08:	00000000 	andeq	r0, r0, r0
    6b0c:	00010200 	andeq	r0, r1, r0, lsl #4
    6b10:	00000101 	andeq	r0, r0, r1, lsl #2
    6b14:	00000000 	andeq	r0, r0, r0
    6b18:	02000000 	andeq	r0, r0, #0
    6b1c:	009f3000 	addseq	r3, pc, r0
    6b20:	00000000 	andeq	r0, r0, r0
    6b24:	02000000 	andeq	r0, r0, #0
    6b28:	009f3000 	addseq	r3, pc, r0
    6b2c:	00000000 	andeq	r0, r0, r0
    6b30:	02000000 	andeq	r0, r0, #0
    6b34:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    6b48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b5c:	00010000 	andeq	r0, r1, r0
    6b60:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6b70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b7c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b80:	00000010 	andeq	r0, r0, r0, lsl r0
    6b84:	00000000 	andeq	r0, r0, r0
    6b88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    6ba8:	00005000 	andeq	r5, r0, r0
    6bac:	00000000 	andeq	r0, r0, r0
    6bb0:	00010000 	andeq	r0, r1, r0
    6bb4:	00000054 	andeq	r0, r0, r4, asr r0
    6bb8:	00000000 	andeq	r0, r0, r0
    6bbc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6bc8:	00540001 	subseq	r0, r4, r1
    6bcc:	00000000 	andeq	r0, r0, r0
    6bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bd4:	00005000 	andeq	r5, r0, r0
	...
    6bec:	00510001 	subseq	r0, r1, r1
    6bf0:	00000000 	andeq	r0, r0, r0
    6bf4:	04000000 	streq	r0, [r0], #-0
    6bf8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6bfc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c00:	00000000 	andeq	r0, r0, r0
    6c04:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6c10:	00000002 	andeq	r0, r0, r2
	...
    6c20:	00010000 	andeq	r0, r1, r0
    6c24:	00000050 	andeq	r0, r0, r0, asr r0
    6c28:	00000000 	andeq	r0, r0, r0
    6c2c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6c38:	00500001 	subseq	r0, r0, r1
    6c3c:	00000000 	andeq	r0, r0, r0
    6c40:	01000000 	mrseq	r0, (UNDEF: 0)
    6c44:	00005400 	andeq	r5, r0, r0, lsl #8
    6c48:	00000000 	andeq	r0, r0, r0
    6c4c:	00010000 	andeq	r0, r1, r0
    6c50:	00000050 	andeq	r0, r0, r0, asr r0
    6c54:	00000000 	andeq	r0, r0, r0
    6c58:	00000300 	andeq	r0, r0, r0, lsl #6
    6c5c:	00000000 	andeq	r0, r0, r0
    6c60:	01000000 	mrseq	r0, (UNDEF: 0)
    6c64:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    6c7c:	00010000 	andeq	r0, r1, r0
    6c80:	00000053 	andeq	r0, r0, r3, asr r0
    6c84:	00000000 	andeq	r0, r0, r0
    6c88:	53000100 	movwpl	r0, #256	; 0x100
	...
    6c94:	2c700002 	ldclcs	0, cr0, [r0], #-8
	...
    6ca0:	2c740002 	ldclcs	0, cr0, [r4], #-8
	...
    6cb4:	00010000 	andeq	r0, r1, r0
    6cb8:	00000053 	andeq	r0, r0, r3, asr r0
    6cbc:	00000000 	andeq	r0, r0, r0
    6cc0:	00305c00 	eorseq	r5, r0, r0, lsl #24
    6cc4:	00306210 	eorseq	r6, r0, r0, lsl r2
    6cc8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6ccc:	00306200 	eorseq	r6, r0, r0, lsl #4
    6cd0:	0030ca10 	eorseq	ip, r0, r0, lsl sl
    6cd4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6cd8:	0030ca10 	eorseq	ip, r0, r0, lsl sl
    6cdc:	0030ce10 	eorseq	ip, r0, r0, lsl lr
    6ce0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6ce4:	0030ce00 	eorseq	ip, r0, r0, lsl #28
    6ce8:	0030dc10 	eorseq	sp, r0, r0, lsl ip
    6cec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6cf0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6d08:	00305c00 	eorseq	r5, r0, r0, lsl #24
    6d0c:	00307610 	eorseq	r7, r0, r0, lsl r6
    6d10:	50000110 	andpl	r0, r0, r0, lsl r1
    6d14:	10003076 	andne	r3, r0, r6, ror r0
    6d18:	10003078 	andne	r3, r0, r8, ror r0
    6d1c:	78540001 	ldmdavc	r4, {r0}^
    6d20:	7c100030 	ldcvc	0, cr0, [r0], {48}	; 0x30
    6d24:	01100030 	tsteq	r0, r0, lsr r0
    6d28:	307c5000 	rsbscc	r5, ip, r0
    6d2c:	30ca1000 	sbccc	r1, sl, r0
    6d30:	00011000 	andeq	r1, r1, r0
    6d34:	0030ca54 	eorseq	ip, r0, r4, asr sl
    6d38:	0030cc10 	eorseq	ip, r0, r0, lsl ip
    6d3c:	50000110 	andpl	r0, r0, r0, lsl r1
    6d40:	100030cc 	andne	r3, r0, ip, asr #1
    6d44:	100030ce 	andne	r3, r0, lr, asr #1
    6d48:	01f30004 	mvnseq	r0, r4
    6d4c:	30ce9f50 	sbccc	r9, lr, r0, asr pc
    6d50:	30d01000 	sbcscc	r1, r0, r0
    6d54:	00011000 	andeq	r1, r1, r0
    6d58:	0030d050 	eorseq	sp, r0, r0, asr r0
    6d5c:	0030dc10 	eorseq	sp, r0, r0, lsl ip
    6d60:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6d6c:	00000002 	andeq	r0, r0, r2
	...
    6d7c:	1000305c 	andne	r3, r0, ip, asr r0
    6d80:	10003076 	andne	r3, r0, r6, ror r0
    6d84:	76500001 	ldrbvc	r0, [r0], -r1
    6d88:	78100030 	ldmdavc	r0, {r4, r5}
    6d8c:	01100030 	tsteq	r0, r0, lsr r0
    6d90:	30785400 	rsbscc	r5, r8, r0, lsl #8
    6d94:	307c1000 	rsbscc	r1, ip, r0
    6d98:	00011000 	andeq	r1, r1, r0
    6d9c:	00307c50 	eorseq	r7, r0, r0, asr ip
    6da0:	0030ca10 	eorseq	ip, r0, r0, lsl sl
    6da4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6da8:	100030ca 	andne	r3, r0, sl, asr #1
    6dac:	100030cc 	andne	r3, r0, ip, asr #1
    6db0:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    6db4:	ce100030 	mrcgt	0, 0, r0, cr0, cr0, {1}
    6db8:	04100030 	ldreq	r0, [r0], #-48	; 0xffffffd0
    6dbc:	5001f300 	andpl	pc, r1, r0, lsl #6
    6dc0:	0030ce9f 	mlaseq	r0, pc, lr, ip	; <UNPREDICTABLE>
    6dc4:	0030d010 	eorseq	sp, r0, r0, lsl r0
    6dc8:	50000110 	andpl	r0, r0, r0, lsl r1
    6dcc:	100030d0 	ldrdne	r3, [r0], -r0
    6dd0:	100030dc 	ldrdne	r3, [r0], -ip
    6dd4:	00540001 	subseq	r0, r4, r1
    6dd8:	00000000 	andeq	r0, r0, r0
    6ddc:	03000000 	movweq	r0, #0
    6de0:	04040003 	streq	r0, [r4], #-3
    6de4:	5c000000 	stcpl	0, cr0, [r0], {-0}
    6de8:	76100030 			; <UNDEFINED> instruction: 0x76100030
    6dec:	02100030 	andseq	r0, r0, #48	; 0x30
    6df0:	789f3000 	ldmvc	pc, {ip, sp}	; <UNPREDICTABLE>
    6df4:	c6100030 			; <UNDEFINED> instruction: 0xc6100030
    6df8:	02100030 	andseq	r0, r0, #48	; 0x30
    6dfc:	c69f3000 	ldrgt	r3, [pc], r0
    6e00:	ca100030 	bgt	406ec8 <__RAM_SIZE+0x306ec8>
    6e04:	02100030 	andseq	r0, r0, #48	; 0x30
    6e08:	ca9f3100 	bgt	fe7d3210 <__StackTop+0xc66d3210>
    6e0c:	dc100030 	ldcle	0, cr0, [r0], {48}	; 0x30
    6e10:	02100030 	andseq	r0, r0, #48	; 0x30
    6e14:	009f3000 	addseq	r3, pc, r0
	...
    6e20:	0030a200 	eorseq	sl, r0, r0, lsl #4
    6e24:	0030ae10 	eorseq	sl, r0, r0, lsl lr
    6e28:	53000110 	movwpl	r0, #272	; 0x110
	...
    6e3c:	007d0002 	rsbseq	r0, sp, r2
	...
    6e48:	107d0002 	rsbsne	r0, sp, r2
	...
    6e54:	007d0002 	rsbseq	r0, sp, r2
	...
    6e60:	107d0002 	rsbsne	r0, sp, r2
	...
    6e88:	00500001 	subseq	r0, r0, r1
    6e8c:	00000000 	andeq	r0, r0, r0
    6e90:	01000000 	mrseq	r0, (UNDEF: 0)
    6e94:	00005400 	andeq	r5, r0, r0, lsl #8
    6e98:	00000000 	andeq	r0, r0, r0
    6e9c:	00010000 	andeq	r0, r1, r0
    6ea0:	00000050 	andeq	r0, r0, r0, asr r0
    6ea4:	00000000 	andeq	r0, r0, r0
    6ea8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6eb4:	00500001 	subseq	r0, r0, r1
    6eb8:	00000000 	andeq	r0, r0, r0
    6ebc:	01000000 	mrseq	r0, (UNDEF: 0)
    6ec0:	00005400 	andeq	r5, r0, r0, lsl #8
    6ec4:	00000000 	andeq	r0, r0, r0
    6ec8:	00010000 	andeq	r0, r1, r0
    6ecc:	00000050 	andeq	r0, r0, r0, asr r0
    6ed0:	00000000 	andeq	r0, r0, r0
    6ed4:	f3000400 	vshl.u8	d0, d0, d0
    6ed8:	009f5001 	addseq	r5, pc, r1
    6edc:	00000000 	andeq	r0, r0, r0
    6ee0:	01000000 	mrseq	r0, (UNDEF: 0)
    6ee4:	00005000 	andeq	r5, r0, r0
    6ee8:	00000000 	andeq	r0, r0, r0
    6eec:	00010000 	andeq	r0, r1, r0
    6ef0:	00000054 	andeq	r0, r0, r4, asr r0
    6ef4:	00000000 	andeq	r0, r0, r0
    6ef8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    6f14:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6f20:	00540001 	subseq	r0, r4, r1
    6f24:	00000000 	andeq	r0, r0, r0
    6f28:	01000000 	mrseq	r0, (UNDEF: 0)
    6f2c:	00005000 	andeq	r5, r0, r0
    6f30:	00000000 	andeq	r0, r0, r0
    6f34:	00010000 	andeq	r0, r1, r0
    6f38:	00000054 	andeq	r0, r0, r4, asr r0
    6f3c:	00000000 	andeq	r0, r0, r0
    6f40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6f4c:	00540001 	subseq	r0, r4, r1
    6f50:	00000000 	andeq	r0, r0, r0
    6f54:	01000000 	mrseq	r0, (UNDEF: 0)
    6f58:	00005000 	andeq	r5, r0, r0
    6f5c:	00000000 	andeq	r0, r0, r0
    6f60:	00040000 	andeq	r0, r4, r0
    6f64:	9f5001f3 	svcls	0x005001f3
	...
    6f70:	00500001 	subseq	r0, r0, r1
    6f74:	00000000 	andeq	r0, r0, r0
    6f78:	01000000 	mrseq	r0, (UNDEF: 0)
    6f7c:	00005400 	andeq	r5, r0, r0, lsl #8
    6f80:	00000000 	andeq	r0, r0, r0
    6f84:	00030000 	andeq	r0, r3, r0
	...
    6f94:	9f300002 	svcls	0x00300002
	...
    6fa0:	9f300002 	svcls	0x00300002
	...
    6fac:	9f310002 	svcls	0x00310002
	...
    6fc0:	00010000 	andeq	r0, r1, r0
    6fc4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6fd4:	02000000 	andeq	r0, r0, #0
    6fd8:	009f3000 	addseq	r3, pc, r0
	...
    6ff0:	01000000 	mrseq	r0, (UNDEF: 0)
    6ff4:	00005000 	andeq	r5, r0, r0
    6ff8:	00000000 	andeq	r0, r0, r0
    6ffc:	00040000 	andeq	r0, r4, r0
    7000:	9f5001f3 	svcls	0x005001f3
	...
    700c:	00500001 	subseq	r0, r0, r1
    7010:	00000000 	andeq	r0, r0, r0
    7014:	04000000 	streq	r0, [r0], #-0
    7018:	5001f300 	andpl	pc, r1, r0, lsl #6
    701c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7020:	00000000 	andeq	r0, r0, r0
    7024:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    7030:	02000000 	andeq	r0, r0, #0
    7034:	009f3000 	addseq	r3, pc, r0
    7038:	00000000 	andeq	r0, r0, r0
    703c:	01000000 	mrseq	r0, (UNDEF: 0)
    7040:	00005000 	andeq	r5, r0, r0
    7044:	00000000 	andeq	r0, r0, r0
    7048:	00020000 	andeq	r0, r2, r0
    704c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    7058:	10003054 	andne	r3, r0, r4, asr r0
    705c:	1000305c 	andne	r3, r0, ip, asr r0
    7060:	00500001 	subseq	r0, r0, r1
    7064:	00000000 	andeq	r0, r0, r0
    7068:	a6000000 	strge	r0, [r0], -r0
    706c:	a8100027 	ldmdage	r0, {r0, r1, r2, r5}
    7070:	02100027 	andseq	r0, r0, #39	; 0x27
    7074:	a8007d00 	stmdage	r0, {r8, sl, fp, ip, sp, lr}
    7078:	ca100027 	bgt	40711c <__RAM_SIZE+0x30711c>
    707c:	02100027 	andseq	r0, r0, #39	; 0x27
    7080:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7094:	a6000000 	strge	r0, [r0], -r0
    7098:	b4100027 	ldrlt	r0, [r0], #-39	; 0xffffffd9
    709c:	01100027 	tsteq	r0, r7, lsr #32
    70a0:	27b45000 	ldrcs	r5, [r4, r0]!
    70a4:	27b61000 	ldrcs	r1, [r6, r0]!
    70a8:	00011000 	andeq	r1, r1, r0
    70ac:	0027b654 	eoreq	fp, r7, r4, asr r6
    70b0:	0027b810 	eoreq	fp, r7, r0, lsl r8
    70b4:	50000110 	andpl	r0, r0, r0, lsl r1
    70b8:	100027b8 			; <UNDEFINED> instruction: 0x100027b8
    70bc:	100027c4 	andne	r2, r0, r4, asr #15
    70c0:	c4540001 	ldrbgt	r0, [r4], #-1
    70c4:	c7100027 	ldrgt	r0, [r0, -r7, lsr #32]
    70c8:	01100027 	tsteq	r0, r7, lsr #32
    70cc:	27c75000 	strbcs	r5, [r7, r0]
    70d0:	27ca1000 	strbcs	r1, [sl, r0]
    70d4:	00011000 	andeq	r1, r1, r0
    70d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    70e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    70f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    70f8:	00000008 	andeq	r0, r0, r8
	...
    710c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7118:	00500001 	subseq	r0, r0, r1
	...
    712c:	53000100 	movwpl	r0, #256	; 0x100
	...
    7138:	00000001 	andeq	r0, r0, r1
    713c:	00000000 	andeq	r0, r0, r0
    7140:	00020000 	andeq	r0, r2, r0
    7144:	00003073 	andeq	r3, r0, r3, ror r0
	...
    7158:	00500001 	subseq	r0, r0, r1
	...
    7164:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    7168:	fa100024 	blx	407200 <__RAM_SIZE+0x307200>
    716c:	01100024 	tsteq	r0, r4, lsr #32
    7170:	24fa5000 	ldrbtcs	r5, [sl], #0
    7174:	25041000 	strcs	r1, [r4, #-0]
    7178:	00011000 	andeq	r1, r1, r0
    717c:	00000050 	andeq	r0, r0, r0, asr r0
    7180:	00000000 	andeq	r0, r0, r0
    7184:	00000200 	andeq	r0, r0, r0, lsl #4
    7188:	00000101 	andeq	r0, r0, r1, lsl #2
    718c:	0024f400 	eoreq	pc, r4, r0, lsl #8
    7190:	0024f810 	eoreq	pc, r4, r0, lsl r8	; <UNPREDICTABLE>
    7194:	30000210 	andcc	r0, r0, r0, lsl r2
    7198:	0024f89f 	mlaeq	r4, pc, r8, pc	; <UNPREDICTABLE>
    719c:	00250210 	eoreq	r0, r5, r0, lsl r2
    71a0:	53000110 	movwpl	r0, #272	; 0x110
    71a4:	10002502 	andne	r2, r0, r2, lsl #10
    71a8:	10002504 	andne	r2, r0, r4, lsl #10
    71ac:	00730005 	rsbseq	r0, r3, r5
    71b0:	049f2532 	ldreq	r2, [pc], #1330	; 71b8 <__HEAP_SIZE+0x61b8>
    71b4:	06100025 	ldreq	r0, [r0], -r5, lsr #32
    71b8:	01100025 	tsteq	r0, r5, lsr #32
    71bc:	00005000 	andeq	r5, r0, r0
	...
    71cc:	00020000 	andeq	r0, r2, r0
    71d0:	0000007d 	andeq	r0, r0, sp, ror r0
    71d4:	00000000 	andeq	r0, r0, r0
    71d8:	00020000 	andeq	r0, r2, r0
    71dc:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    71f4:	00500001 	subseq	r0, r0, r1
    71f8:	00000000 	andeq	r0, r0, r0
    71fc:	01000000 	mrseq	r0, (UNDEF: 0)
    7200:	00005700 	andeq	r5, r0, r0, lsl #14
    7204:	00000000 	andeq	r0, r0, r0
    7208:	00040000 	andeq	r0, r4, r0
    720c:	9f5001f3 	svcls	0x005001f3
	...
    7224:	00510001 	subseq	r0, r1, r1
    7228:	00000000 	andeq	r0, r0, r0
    722c:	03000000 	movweq	r0, #0
    7230:	9f787600 	svcls	0x00787600
	...
    7248:	00520001 	subseq	r0, r2, r1
    724c:	00000000 	andeq	r0, r0, r0
    7250:	04000000 	streq	r0, [r0], #-0
    7254:	5201f300 	andpl	pc, r1, #0, 6
    7258:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    725c:	00000000 	andeq	r0, r0, r0
    7260:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    726c:	30000200 	andcc	r0, r0, r0, lsl #4
    7270:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7274:	00000000 	andeq	r0, r0, r0
    7278:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7290:	08710003 	ldmdaeq	r1!, {r0, r1}^
    7294:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7298:	00000000 	andeq	r0, r0, r0
    729c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    72b0:	00010000 	andeq	r0, r1, r0
    72b4:	00000054 	andeq	r0, r0, r4, asr r0
    72b8:	00000000 	andeq	r0, r0, r0
    72bc:	01000200 	mrseq	r0, R8_usr
	...
    72c8:	30000200 	andcc	r0, r0, r0, lsl #4
    72cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    72d0:	00000000 	andeq	r0, r0, r0
    72d4:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    72d8:	0000000c 	andeq	r0, r0, ip
    72dc:	00000000 	andeq	r0, r0, r0
    72e0:	002f9c00 	eoreq	r9, pc, r0, lsl #24
    72e4:	002f9e10 	eoreq	r9, pc, r0, lsl lr	; <UNPREDICTABLE>
    72e8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    72ec:	002f9e00 	eoreq	r9, pc, r0, lsl #28
    72f0:	00305010 	eorseq	r5, r0, r0, lsl r0
    72f4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    72f8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7304:	002f9c00 	eoreq	r9, pc, r0, lsl #24
    7308:	002fa610 	eoreq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    730c:	50000110 	andpl	r0, r0, r0, lsl r1
    7310:	10002ff4 	strdne	r2, [r0], -r4
    7314:	10002ff8 	strdne	r2, [r0], -r8
    7318:	00500001 	subseq	r0, r0, r1
	...
    732c:	9c000000 	stcls	0, cr0, [r0], {-0}
    7330:	dc10002f 	ldcle	0, cr0, [r0], {47}	; 0x2f
    7334:	0110002f 	tsteq	r0, pc, lsr #32
    7338:	2fdc5100 	svccs	0x00dc5100
    733c:	2ff41000 	svccs	0x00f41000
    7340:	00011000 	andeq	r1, r1, r0
    7344:	002ff454 	eoreq	pc, pc, r4, asr r4	; <UNPREDICTABLE>
    7348:	00300310 	eorseq	r0, r0, r0, lsl r3
    734c:	51000110 	tstpl	r0, r0, lsl r1
    7350:	10003003 	andne	r3, r0, r3
    7354:	10003034 	andne	r3, r0, r4, lsr r0
    7358:	34540001 	ldrbcc	r0, [r4], #-1
    735c:	39100030 	ldmdbcc	r0, {r4, r5}
    7360:	01100030 	tsteq	r0, r0, lsr r0
    7364:	30395100 	eorscc	r5, r9, r0, lsl #2
    7368:	30501000 	subscc	r1, r0, r0
    736c:	00011000 	andeq	r1, r1, r0
    7370:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7380:	002f9c00 	eoreq	r9, pc, r0, lsl #24
    7384:	002fa610 	eoreq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    7388:	52000110 	andpl	r0, r0, #16, 2
    738c:	10002fa6 	andne	r2, r0, r6, lsr #31
    7390:	10002ff4 	strdne	r2, [r0], -r4
    7394:	f4560001 			; <UNDEFINED> instruction: 0xf4560001
    7398:	f610002f 			; <UNDEFINED> instruction: 0xf610002f
    739c:	0110002f 	tsteq	r0, pc, lsr #32
    73a0:	2ff65200 	svccs	0x00f65200
    73a4:	30501000 	subscc	r1, r0, r0
    73a8:	00011000 	andeq	r1, r1, r0
    73ac:	00000056 	andeq	r0, r0, r6, asr r0
	...
    73c4:	002f9c00 	eoreq	r9, pc, r0, lsl #24
    73c8:	002fdc10 	eoreq	sp, pc, r0, lsl ip	; <UNPREDICTABLE>
    73cc:	53000110 	movwpl	r0, #272	; 0x110
    73d0:	10002fdc 	ldrdne	r2, [r0], -ip
    73d4:	10002ff4 	strdne	r2, [r0], -r4
    73d8:	01f30004 	mvnseq	r0, r4
    73dc:	2ff49f53 	svccs	0x00f49f53
    73e0:	2ffc1000 	svccs	0x00fc1000
    73e4:	00011000 	andeq	r1, r1, r0
    73e8:	002ffc53 	eoreq	pc, pc, r3, asr ip	; <UNPREDICTABLE>
    73ec:	00300010 	eorseq	r0, r0, r0, lsl r0
    73f0:	f3000410 	vqshl.u8	d0, d0, d0
    73f4:	009f5301 	addseq	r5, pc, r1, lsl #6
    73f8:	03100030 	tsteq	r0, #48	; 0x30
    73fc:	01100030 	tsteq	r0, r0, lsr r0
    7400:	30035300 	andcc	r5, r3, r0, lsl #6
    7404:	30341000 	eorscc	r1, r4, r0
    7408:	00041000 	andeq	r1, r4, r0
    740c:	9f5301f3 	svcls	0x005301f3
    7410:	10003034 	andne	r3, r0, r4, lsr r0
    7414:	10003039 	andne	r3, r0, r9, lsr r0
    7418:	39530001 	ldmdbcc	r3, {r0}^
    741c:	50100030 	andspl	r0, r0, r0, lsr r0
    7420:	04100030 	ldreq	r0, [r0], #-48	; 0xffffffd0
    7424:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    7428:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7434:	002fa600 	eoreq	sl, pc, r0, lsl #12
    7438:	002ff410 	eoreq	pc, pc, r0, lsl r4	; <UNPREDICTABLE>
    743c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    7440:	10002ffa 	strdne	r2, [r0], -sl
    7444:	10003050 	andne	r3, r0, r0, asr r0
    7448:	00550001 	subseq	r0, r5, r1
	...
    7454:	12000000 	andne	r0, r0, #0
    7458:	14100030 	ldrne	r0, [r0], #-48	; 0xffffffd0
    745c:	01100030 	tsteq	r0, r0, lsr r0
    7460:	301a5300 	andscc	r5, sl, r0, lsl #6
    7464:	302e1000 	eorcc	r1, lr, r0
    7468:	00011000 	andeq	r1, r1, r0
    746c:	00000053 	andeq	r0, r0, r3, asr r0
    7470:	00000000 	andeq	r0, r0, r0
    7474:	0027cc00 	eoreq	ip, r7, r0, lsl #24
    7478:	0027d410 	eoreq	sp, r7, r0, lsl r4
    747c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7480:	0027d400 	eoreq	sp, r7, r0, lsl #8
    7484:	00280810 	eoreq	r0, r8, r0, lsl r8
    7488:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    748c:	00280808 	eoreq	r0, r8, r8, lsl #16
    7490:	00281810 	eoreq	r1, r8, r0, lsl r8
    7494:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    74a0:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    74a4:	08100027 	ldmdaeq	r0, {r0, r1, r2, r5}
    74a8:	01100028 	tsteq	r0, r8, lsr #32
    74ac:	00005400 	andeq	r5, r0, r0, lsl #8
    74b0:	00000000 	andeq	r0, r0, r0
    74b4:	261c0000 	ldrcs	r0, [ip], -r0
    74b8:	261e1000 	ldrcs	r1, [lr], -r0
    74bc:	00021000 	andeq	r1, r2, r0
    74c0:	261e007d 			; <UNDEFINED> instruction: 0x261e007d
    74c4:	26841000 	strcs	r1, [r4], r0
    74c8:	00021000 	andeq	r1, r2, r0
    74cc:	0000107d 	andeq	r1, r0, sp, ror r0
    74d0:	00000000 	andeq	r0, r0, r0
    74d4:	00020000 	andeq	r0, r2, r0
    74d8:	261e0000 	ldrcs	r0, [lr], -r0
    74dc:	26221000 	strtcs	r1, [r2], -r0
    74e0:	00021000 	andeq	r1, r2, r0
    74e4:	26229f30 	qasxcs	r9, r2, r0
    74e8:	26401000 	strbcs	r1, [r0], -r0
    74ec:	00011000 	andeq	r1, r1, r0
    74f0:	00000054 	andeq	r0, r0, r4, asr r0
    74f4:	00000000 	andeq	r0, r0, r0
    74f8:	00000300 	andeq	r0, r0, r0, lsl #6
    74fc:	002f5400 	eoreq	r5, pc, r0, lsl #8
    7500:	002f8610 	eoreq	r8, pc, r0, lsl r6	; <UNPREDICTABLE>
    7504:	31000210 	tstcc	r0, r0, lsl r2
    7508:	002f869f 	mlaeq	pc, pc, r6, r8	; <UNPREDICTABLE>
    750c:	002f9c10 	eoreq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    7510:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    751c:	10002cbc 			; <UNDEFINED> instruction: 0x10002cbc
    7520:	10002cbe 			; <UNDEFINED> instruction: 0x10002cbe
    7524:	007d0002 	rsbseq	r0, sp, r2
    7528:	10002cbe 			; <UNDEFINED> instruction: 0x10002cbe
    752c:	10002cf4 	strdne	r2, [r0], -r4
    7530:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    753c:	00000001 	andeq	r0, r0, r1
    7540:	10002cbc 			; <UNDEFINED> instruction: 0x10002cbc
    7544:	10002cc0 	andne	r2, r0, r0, asr #25
    7548:	c0500001 	subsgt	r0, r0, r1
    754c:	f410002c 			; <UNDEFINED> instruction: 0xf410002c
    7550:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    7554:	5001f300 	andpl	pc, r1, r0, lsl #6
    7558:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7564:	c4000000 	strgt	r0, [r0], #-0
    7568:	c810002c 	ldmdagt	r0, {r2, r3, r5}
    756c:	0110002c 	tsteq	r0, ip, lsr #32
    7570:	2cda5000 	ldclcs	0, cr5, [sl], {0}
    7574:	2cdd1000 	ldclcs	0, cr1, [sp], {0}
    7578:	00011000 	andeq	r1, r1, r0
    757c:	002ce250 	eoreq	lr, ip, r0, asr r2
    7580:	002ce910 	eoreq	lr, ip, r0, lsl r9
    7584:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    7590:	00000101 	andeq	r0, r0, r1, lsl #2
    7594:	00000000 	andeq	r0, r0, r0
    7598:	00010000 	andeq	r0, r1, r0
    759c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    75b4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    75c0:	01f30004 	mvnseq	r0, r4
    75c4:	00009f50 	andeq	r9, r0, r0, asr pc
    75c8:	00000000 	andeq	r0, r0, r0
    75cc:	00010000 	andeq	r0, r1, r0
    75d0:	00000050 	andeq	r0, r0, r0, asr r0
    75d4:	00000000 	andeq	r0, r0, r0
    75d8:	f3000400 	vshl.u8	d0, d0, d0
    75dc:	009f5001 	addseq	r5, pc, r1
	...
    75f0:	01000000 	mrseq	r0, (UNDEF: 0)
    75f4:	00005000 	andeq	r5, r0, r0
    75f8:	00000000 	andeq	r0, r0, r0
    75fc:	00020000 	andeq	r0, r2, r0
    7600:	00009f30 	andeq	r9, r0, r0, lsr pc
    7604:	00000000 	andeq	r0, r0, r0
    7608:	00010000 	andeq	r0, r1, r0
	...
    7614:	00010000 	andeq	r0, r1, r0
    7618:	00000050 	andeq	r0, r0, r0, asr r0
    761c:	00000000 	andeq	r0, r0, r0
    7620:	f3000400 	vshl.u8	d0, d0, d0
    7624:	009f5001 	addseq	r5, pc, r1
    7628:	00000000 	andeq	r0, r0, r0
    762c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    7630:	ce10002e 	cdpgt	0, 1, cr0, cr0, cr14, {1}
    7634:	0210002e 	andseq	r0, r0, #46	; 0x2e
    7638:	ce007d00 	cdpgt	13, 0, cr7, cr0, cr0, {0}
    763c:	4810002e 	ldmdami	r0, {r1, r2, r3, r5}
    7640:	0210002f 	andseq	r0, r0, #47	; 0x2f
    7644:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    7664:	002ecc00 	eoreq	ip, lr, r0, lsl #24
    7668:	002ed510 	eoreq	sp, lr, r0, lsl r5
    766c:	50000110 	andpl	r0, r0, r0, lsl r1
    7670:	10002ed5 	ldrdne	r2, [r0], -r5
    7674:	10002ef4 	strdne	r2, [r0], -r4
    7678:	f4540001 			; <UNDEFINED> instruction: 0xf4540001
    767c:	fc10002e 	ldc2	0, cr0, [r0], {46}	; 0x2e
    7680:	0410002e 	ldreq	r0, [r0], #-46	; 0xffffffd2
    7684:	5001f300 	andpl	pc, r1, r0, lsl #6
    7688:	002efc9f 	mlaeq	lr, pc, ip, pc	; <UNPREDICTABLE>
    768c:	002f1810 	eoreq	r1, pc, r0, lsl r8	; <UNPREDICTABLE>
    7690:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7694:	10002f18 	andne	r2, r0, r8, lsl pc
    7698:	10002f1a 	andne	r2, r0, sl, lsl pc
    769c:	01f30004 	mvnseq	r0, r4
    76a0:	2f1a9f50 	svccs	0x001a9f50
    76a4:	2f241000 	svccs	0x00241000
    76a8:	00011000 	andeq	r1, r1, r0
    76ac:	002f2454 	eoreq	r2, pc, r4, asr r4	; <UNPREDICTABLE>
    76b0:	002f2610 	eoreq	r2, pc, r0, lsl r6	; <UNPREDICTABLE>
    76b4:	f3000410 	vqshl.u8	d0, d0, d0
    76b8:	269f5001 	ldrcs	r5, [pc], r1
    76bc:	3410002f 	ldrcc	r0, [r0], #-47	; 0xffffffd1
    76c0:	0110002f 	tsteq	r0, pc, lsr #32
    76c4:	2f345400 	svccs	0x00345400
    76c8:	2f361000 	svccs	0x00361000
    76cc:	00041000 	andeq	r1, r4, r0
    76d0:	9f5001f3 	svcls	0x005001f3
    76d4:	10002f36 	andne	r2, r0, r6, lsr pc
    76d8:	10002f38 	andne	r2, r0, r8, lsr pc
    76dc:	38540001 	ldmdacc	r4, {r0}^
    76e0:	4810002f 	ldmdami	r0, {r0, r1, r2, r3, r5}
    76e4:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    76e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    76ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    76f8:	002ecc00 	eoreq	ip, lr, r0, lsl #24
    76fc:	002ed510 	eoreq	sp, lr, r0, lsl r5
    7700:	51000110 	tstpl	r0, r0, lsl r1
    7704:	10002ed5 	ldrdne	r2, [r0], -r5
    7708:	10002f48 	andne	r2, r0, r8, asr #30
    770c:	00550001 	subseq	r0, r5, r1
    7710:	00000000 	andeq	r0, r0, r0
    7714:	01000000 	mrseq	r0, (UNDEF: 0)
    7718:	01000000 	mrseq	r0, (UNDEF: 0)
    771c:	01000100 	mrseq	r0, (UNDEF: 16)
    7720:	002ef200 	eoreq	pc, lr, r0, lsl #4
    7724:	002ef410 	eoreq	pc, lr, r0, lsl r4	; <UNPREDICTABLE>
    7728:	31000210 	tstcc	r0, r0, lsl r2
    772c:	002ef49f 	mlaeq	lr, pc, r4, pc	; <UNPREDICTABLE>
    7730:	002efc10 	eoreq	pc, lr, r0, lsl ip	; <UNPREDICTABLE>
    7734:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7738:	10002f12 	andne	r2, r0, r2, lsl pc
    773c:	10002f1a 	andne	r2, r0, sl, lsl pc
    7740:	9f310002 	svcls	0x00310002
    7744:	10002f22 	andne	r2, r0, r2, lsr #30
    7748:	10002f26 	andne	r2, r0, r6, lsr #30
    774c:	9f310002 	svcls	0x00310002
    7750:	10002f32 	andne	r2, r0, r2, lsr pc
    7754:	10002f36 	andne	r2, r0, r6, lsr pc
    7758:	9f300002 	svcls	0x00300002
	...
    7768:	2eda0000 	cdpcs	0, 13, cr0, cr10, cr0, {0}
    776c:	2eee1000 	cdpcs	0, 14, cr1, cr14, cr0, {0}
    7770:	00011000 	andeq	r1, r1, r0
    7774:	002efc52 	eoreq	pc, lr, r2, asr ip	; <UNPREDICTABLE>
    7778:	002f3110 	eoreq	r3, pc, r0, lsl r1	; <UNPREDICTABLE>
    777c:	52000110 	andpl	r0, r0, #16, 2
    7780:	10002f36 	andne	r2, r0, r6, lsr pc
    7784:	10002f48 	andne	r2, r0, r8, asr #30
    7788:	00520001 	subseq	r0, r2, r1
	...
    7798:	002ede00 	eoreq	sp, lr, r0, lsl #28
    779c:	002ef410 	eoreq	pc, lr, r0, lsl r4	; <UNPREDICTABLE>
    77a0:	50000110 	andpl	r0, r0, r0, lsl r1
    77a4:	10002efc 	strdne	r2, [r0], -ip
    77a8:	10002f2e 	andne	r2, r0, lr, lsr #30
    77ac:	36500001 	ldrbcc	r0, [r0], -r1
    77b0:	4810002f 	ldmdami	r0, {r0, r1, r2, r3, r5}
    77b4:	0110002f 	tsteq	r0, pc, lsr #32
    77b8:	00005000 	andeq	r5, r0, r0
	...
    77c8:	00020000 	andeq	r0, r2, r0
    77cc:	0000007d 	andeq	r0, r0, sp, ror r0
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	00020000 	andeq	r0, r2, r0
    77d8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    77f0:	00500001 	subseq	r0, r0, r1
    77f4:	00000000 	andeq	r0, r0, r0
    77f8:	01000000 	mrseq	r0, (UNDEF: 0)
    77fc:	00005400 	andeq	r5, r0, r0, lsl #8
    7800:	00000000 	andeq	r0, r0, r0
    7804:	00040000 	andeq	r0, r4, r0
    7808:	9f5001f3 	svcls	0x005001f3
	...
    781c:	007d0002 	rsbseq	r0, sp, r2
	...
    7828:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7844:	00500001 	subseq	r0, r0, r1
    7848:	00000000 	andeq	r0, r0, r0
    784c:	04000000 	streq	r0, [r0], #-0
    7850:	5001f300 	andpl	pc, r1, r0, lsl #6
    7854:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7858:	00000000 	andeq	r0, r0, r0
    785c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7868:	01f30004 	mvnseq	r0, r4
    786c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7880:	00010000 	andeq	r0, r1, r0
    7884:	00000051 	andeq	r0, r0, r1, asr r0
    7888:	00000000 	andeq	r0, r0, r0
    788c:	f3000400 	vshl.u8	d0, d0, d0
    7890:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    78a4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    78bc:	00530001 	subseq	r0, r3, r1
    78c0:	00000000 	andeq	r0, r0, r0
    78c4:	01000000 	mrseq	r0, (UNDEF: 0)
    78c8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    78dc:	00010000 	andeq	r0, r1, r0
    78e0:	00000053 	andeq	r0, r0, r3, asr r0
    78e4:	00000000 	andeq	r0, r0, r0
    78e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    78fc:	00010000 	andeq	r0, r1, r0
    7900:	00000053 	andeq	r0, r0, r3, asr r0
    7904:	00000000 	andeq	r0, r0, r0
    7908:	002dd000 	eoreq	sp, sp, r0
    790c:	002dd210 	eoreq	sp, sp, r0, lsl r2
    7910:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7914:	002dd200 	eoreq	sp, sp, r0, lsl #4
    7918:	002eb410 	eoreq	fp, lr, r0, lsl r4
    791c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7920:	00000008 	andeq	r0, r0, r8
	...
    7930:	002dd000 	eoreq	sp, sp, r0
    7934:	002e3a10 	eoreq	r3, lr, r0, lsl sl
    7938:	50000110 	andpl	r0, r0, r0, lsl r1
    793c:	10002e3a 	andne	r2, r0, sl, lsr lr
    7940:	10002e72 	andne	r2, r0, r2, ror lr
    7944:	01f30004 	mvnseq	r0, r4
    7948:	2e729f50 	mrccs	15, 3, r9, cr2, cr0, {2}
    794c:	2e861000 	cdpcs	0, 8, cr1, cr6, cr0, {0}
    7950:	00011000 	andeq	r1, r1, r0
    7954:	002e8650 	eoreq	r8, lr, r0, asr r6
    7958:	002eb410 	eoreq	fp, lr, r0, lsl r4
    795c:	f3000410 	vqshl.u8	d0, d0, d0
    7960:	009f5001 	addseq	r5, pc, r1
	...
    796c:	002dd600 	eoreq	sp, sp, r0, lsl #12
    7970:	002eb410 	eoreq	fp, lr, r0, lsl r4
    7974:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7980:	00000001 	andeq	r0, r0, r1
    7984:	10002e6a 	andne	r2, r0, sl, ror #28
    7988:	10002e70 	andne	r2, r0, r0, ror lr
    798c:	9f310002 	svcls	0x00310002
    7990:	10002e98 	mulne	r0, r8, lr
    7994:	10002eb4 			; <UNDEFINED> instruction: 0x10002eb4
    7998:	9f300002 	svcls	0x00300002
	...
    79a8:	10002dd8 	ldrdne	r2, [r0], -r8
    79ac:	10002df8 	strdne	r2, [r0], -r8
    79b0:	72530001 	subsvc	r0, r3, #1
    79b4:	7810002e 	ldmdavc	r0, {r1, r2, r3, r5}
    79b8:	0110002e 	tsteq	r0, lr, lsr #32
    79bc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    79c8:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    79cc:	2e1e1000 	cdpcs	0, 1, cr1, cr14, cr0, {0}
    79d0:	00011000 	andeq	r1, r1, r0
    79d4:	002e7853 	eoreq	r7, lr, r3, asr r8
    79d8:	002e7e10 	eoreq	r7, lr, r0, lsl lr
    79dc:	53000110 	movwpl	r0, #272	; 0x110
	...
    79e8:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
    79ec:	2e421000 	cdpcs	0, 4, cr1, cr2, cr0, {0}
    79f0:	00011000 	andeq	r1, r1, r0
    79f4:	00000053 	andeq	r0, r0, r3, asr r0
    79f8:	00000000 	andeq	r0, r0, r0
    79fc:	82000000 	andhi	r0, r0, #0
    7a00:	9010002e 	andsls	r0, r0, lr, lsr #32
    7a04:	0110002e 	tsteq	r0, lr, lsr #32
    7a08:	00005200 	andeq	r5, r0, r0, lsl #4
    7a0c:	00000000 	andeq	r0, r0, r0
    7a10:	2d940000 	ldccs	0, cr0, [r4]
    7a14:	2d961000 	ldccs	0, cr1, [r6]
    7a18:	00021000 	andeq	r1, r2, r0
    7a1c:	2d96007d 	ldccs	0, cr0, [r6, #500]	; 0x1f4
    7a20:	2dd01000 	ldclcs	0, cr1, [r0]
    7a24:	00021000 	andeq	r1, r2, r0
    7a28:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    7a38:	10002d94 	mulne	r0, r4, sp
    7a3c:	10002d9a 	mulne	r0, sl, sp
    7a40:	9a500001 	bls	1407a4c <__RAM_SIZE+0x1307a4c>
    7a44:	c910002d 	ldmdbgt	r0, {r0, r2, r3, r5}
    7a48:	0110002d 	tsteq	r0, sp, lsr #32
    7a4c:	2dc95300 	stclcs	3, cr5, [r9]
    7a50:	2dd01000 	ldclcs	0, cr1, [r0]
    7a54:	00041000 	andeq	r1, r4, r0
    7a58:	9f5001f3 	svcls	0x005001f3
	...
    7a68:	10002d94 	mulne	r0, r4, sp
    7a6c:	10002d9c 	mulne	r0, ip, sp
    7a70:	9c510001 	mrrcls	0, 0, r0, r1, cr1
    7a74:	c910002d 	ldmdbgt	r0, {r0, r2, r3, r5}
    7a78:	0110002d 	tsteq	r0, sp, lsr #32
    7a7c:	00005000 	andeq	r5, r0, r0
	...
    7a88:	2d940000 	ldccs	0, cr0, [r4]
    7a8c:	2dc91000 	stclcs	0, cr1, [r9]
    7a90:	00011000 	andeq	r1, r1, r0
    7a94:	002dc952 	eoreq	ip, sp, r2, asr r9
    7a98:	002dd010 	eoreq	sp, sp, r0, lsl r0
    7a9c:	f3000410 	vqshl.u8	d0, d0, d0
    7aa0:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    7aac:	002d9c00 	eoreq	r9, sp, r0, lsl #24
    7ab0:	002db610 	eoreq	fp, sp, r0, lsl r6
    7ab4:	51000110 	tstpl	r0, r0, lsl r1
	...
    7ac8:	007d0002 	rsbseq	r0, sp, r2
	...
    7ad4:	107d0002 	rsbsne	r0, sp, r2
	...
    7aec:	00010000 	andeq	r0, r1, r0
    7af0:	00000050 	andeq	r0, r0, r0, asr r0
    7af4:	00000000 	andeq	r0, r0, r0
    7af8:	53000100 	movwpl	r0, #256	; 0x100
	...
    7b04:	01f30004 	mvnseq	r0, r4
    7b08:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7b1c:	00010000 	andeq	r0, r1, r0
    7b20:	00000051 	andeq	r0, r0, r1, asr r0
    7b24:	00000000 	andeq	r0, r0, r0
    7b28:	f3000400 	vshl.u8	d0, d0, d0
    7b2c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    7b40:	01000000 	mrseq	r0, (UNDEF: 0)
    7b44:	00005200 	andeq	r5, r0, r0, lsl #4
    7b48:	00000000 	andeq	r0, r0, r0
    7b4c:	00040000 	andeq	r0, r4, r0
    7b50:	9f5201f3 	svcls	0x005201f3
	...
    7b64:	00010000 	andeq	r0, r1, r0
    7b68:	00000051 	andeq	r0, r0, r1, asr r0
    7b6c:	00000000 	andeq	r0, r0, r0
    7b70:	002d7800 	eoreq	r7, sp, r0, lsl #16
    7b74:	002d7a10 	eoreq	r7, sp, r0, lsl sl
    7b78:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7b7c:	002d7a00 	eoreq	r7, sp, r0, lsl #20
    7b80:	002d9410 	eoreq	r9, sp, r0, lsl r4
    7b84:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7b88:	00000008 	andeq	r0, r0, r8
	...
    7b94:	002d7800 	eoreq	r7, sp, r0, lsl #16
    7b98:	002d8510 	eoreq	r8, sp, r0, lsl r5
    7b9c:	50000110 	andpl	r0, r0, r0, lsl r1
    7ba0:	10002d85 	andne	r2, r0, r5, lsl #27
    7ba4:	10002d94 	mulne	r0, r4, sp
    7ba8:	01f30004 	mvnseq	r0, r4
    7bac:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7bbc:	10002d78 	andne	r2, r0, r8, ror sp
    7bc0:	10002d80 	andne	r2, r0, r0, lsl #27
    7bc4:	80510001 	subshi	r0, r1, r1
    7bc8:	9010002d 	andsls	r0, r0, sp, lsr #32
    7bcc:	0110002d 	tsteq	r0, sp, lsr #32
    7bd0:	2d905400 	cfldrscs	mvf5, [r0]
    7bd4:	2d941000 	ldccs	0, cr1, [r4]
    7bd8:	00041000 	andeq	r1, r4, r0
    7bdc:	9f5101f3 	svcls	0x005101f3
	...
    7bec:	2d0c0000 	stccs	0, cr0, [ip, #-0]
    7bf0:	2d541000 	ldclcs	0, cr1, [r4, #-0]
    7bf4:	00011000 	andeq	r1, r1, r0
    7bf8:	002d5453 	eoreq	r5, sp, r3, asr r4
    7bfc:	002d5610 	eoreq	r5, sp, r0, lsl r6
    7c00:	03000510 	movweq	r0, #1296	; 0x510
    7c04:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
    7c08:	10002d56 	andne	r2, r0, r6, asr sp
    7c0c:	10002d78 	andne	r2, r0, r8, ror sp
    7c10:	00530001 	subseq	r0, r3, r1
    7c14:	00000000 	andeq	r0, r0, r0
    7c18:	02000000 	andeq	r0, r0, #0
    7c1c:	00000000 	andeq	r0, r0, r0
    7c20:	002d1e00 	eoreq	r1, sp, r0, lsl #28
    7c24:	002d5410 	eoreq	r5, sp, r0, lsl r4
    7c28:	73000b10 	movwvc	r0, #2832	; 0xb10
    7c2c:	031e4c00 	tsteq	lr, #0, 24
    7c30:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    7c34:	2d549f22 	ldclcs	15, cr9, [r4, #-136]	; 0xffffff78
    7c38:	2d561000 	ldclcs	0, cr1, [r6, #-0]
    7c3c:	000f1000 	andeq	r1, pc, r0
    7c40:	008a6003 	addeq	r6, sl, r3
    7c44:	1e4c0638 	mcrne	6, 2, r0, cr12, cr8, {1}
    7c48:	0085c403 	addeq	ip, r5, r3, lsl #8
    7c4c:	569f2238 			; <UNDEFINED> instruction: 0x569f2238
    7c50:	7810002d 	ldmdavc	r0, {r0, r2, r3, r5}
    7c54:	0b10002d 	bleq	407d10 <__RAM_SIZE+0x307d10>
    7c58:	4c007300 	stcmi	3, cr7, [r0], {-0}
    7c5c:	85c4031e 	strbhi	r0, [r4, #798]	; 0x31e
    7c60:	9f223800 	svcls	0x00223800
	...
    7c74:	007d0002 	rsbseq	r0, sp, r2
	...
    7c80:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7c98:	00500001 	subseq	r0, r0, r1
    7c9c:	00000000 	andeq	r0, r0, r0
    7ca0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ca4:	00005000 	andeq	r5, r0, r0
	...
    7cbc:	00510001 	subseq	r0, r1, r1
    7cc0:	00000000 	andeq	r0, r0, r0
    7cc4:	04000000 	streq	r0, [r0], #-0
    7cc8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7ccc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7cd0:	00000000 	andeq	r0, r0, r0
    7cd4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7cec:	00530001 	subseq	r0, r3, r1
    7cf0:	00000000 	andeq	r0, r0, r0
    7cf4:	01000000 	mrseq	r0, (UNDEF: 0)
    7cf8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7d0c:	9f300002 	svcls	0x00300002
	...
    7d20:	007d0002 	rsbseq	r0, sp, r2
	...
    7d2c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7d44:	00500001 	subseq	r0, r0, r1
    7d48:	00000000 	andeq	r0, r0, r0
    7d4c:	01000000 	mrseq	r0, (UNDEF: 0)
    7d50:	00005000 	andeq	r5, r0, r0
	...
    7d64:	00540001 	subseq	r0, r4, r1
	...
    7d78:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7d8c:	00010000 	andeq	r0, r1, r0
    7d90:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7da0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7dac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7db0:	00000008 	andeq	r0, r0, r8
	...
    7dc4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7dd0:	00500001 	subseq	r0, r0, r1
	...
    7de4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7df8:	00010000 	andeq	r0, r1, r0
    7dfc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7e0c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7e18:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7e1c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7e30:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7e3c:	00500001 	subseq	r0, r0, r1
	...
    7e54:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7e60:	00540001 	subseq	r0, r4, r1
    7e64:	00000000 	andeq	r0, r0, r0
    7e68:	01000000 	mrseq	r0, (UNDEF: 0)
    7e6c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    7e80:	00010000 	andeq	r0, r1, r0
    7e84:	00000055 	andeq	r0, r0, r5, asr r0
    7e88:	00000000 	andeq	r0, r0, r0
    7e8c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7e98:	10002a0c 	andne	r2, r0, ip, lsl #20
    7e9c:	10002a18 	andne	r2, r0, r8, lsl sl
    7ea0:	007d0002 	rsbseq	r0, sp, r2
    7ea4:	10002a18 	andne	r2, r0, r8, lsl sl
    7ea8:	10002b30 	andne	r2, r0, r0, lsr fp
    7eac:	107d0002 	rsbsne	r0, sp, r2
    7eb0:	10002b30 	andne	r2, r0, r0, lsr fp
    7eb4:	10002b3c 	andne	r2, r0, ip, lsr fp
    7eb8:	007d0002 	rsbseq	r0, sp, r2
    7ebc:	10002b3c 	andne	r2, r0, ip, lsr fp
    7ec0:	10002b6c 	andne	r2, r0, ip, ror #22
    7ec4:	107d0002 	rsbsne	r0, sp, r2
	...
    7ed4:	2a740000 	bcs	1d07edc <__RAM_SIZE+0x1c07edc>
    7ed8:	2a761000 	bcs	1d8bee0 <__RAM_SIZE+0x1c8bee0>
    7edc:	00011000 	andeq	r1, r1, r0
    7ee0:	002a7a53 	eoreq	r7, sl, r3, asr sl
    7ee4:	002ad010 	eoreq	sp, sl, r0, lsl r0
    7ee8:	53000110 	movwpl	r0, #272	; 0x110
    7eec:	10002aec 	andne	r2, r0, ip, ror #21
    7ef0:	10002b30 	andne	r2, r0, r0, lsr fp
    7ef4:	00530001 	subseq	r0, r3, r1
	...
    7f04:	002a7400 	eoreq	r7, sl, r0, lsl #8
    7f08:	002a7a10 	eoreq	r7, sl, r0, lsl sl
    7f0c:	52000110 	andpl	r0, r0, #16, 2
    7f10:	10002aee 	andne	r2, r0, lr, ror #21
    7f14:	10002af4 	strdne	r2, [r0], -r4
    7f18:	f4520001 			; <UNDEFINED> instruction: 0xf4520001
    7f1c:	fa10002a 	blx	407fcc <__RAM_SIZE+0x307fcc>
    7f20:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7f24:	00047300 	andeq	r7, r4, r0, lsl #6
    7f28:	00000000 	andeq	r0, r0, r0
    7f2c:	04000000 	streq	r0, [r0], #-0
	...
    7f3c:	002a0c00 	eoreq	r0, sl, r0, lsl #24
    7f40:	002a2c10 	eoreq	r2, sl, r0, lsl ip
    7f44:	30000210 	andcc	r0, r0, r0, lsl r2
    7f48:	002a2c9f 	mlaeq	sl, pc, ip, r2	; <UNPREDICTABLE>
    7f4c:	002a4a10 	eoreq	r4, sl, r0, lsl sl
    7f50:	50000110 	andpl	r0, r0, r0, lsl r1
    7f54:	10002a4c 	andne	r2, r0, ip, asr #20
    7f58:	10002a6a 	andne	r2, r0, sl, ror #20
    7f5c:	9f300002 	svcls	0x00300002
    7f60:	10002a6a 	andne	r2, r0, sl, ror #20
    7f64:	10002b30 	andne	r2, r0, r0, lsr fp
    7f68:	30500001 	subscc	r0, r0, r1
    7f6c:	3c10002b 	ldccc	0, cr0, [r0], {43}	; 0x2b
    7f70:	0210002b 	andseq	r0, r0, #43	; 0x2b
    7f74:	3c9f3000 	ldccc	0, cr3, [pc], {0}
    7f78:	3e10002b 	cdpcc	0, 1, cr0, cr0, cr11, {1}
    7f7c:	0110002b 	tsteq	r0, fp, lsr #32
    7f80:	2b3e5000 	blcs	f9bf88 <__RAM_SIZE+0xe9bf88>
    7f84:	2b6c1000 	blcs	1b0bf8c <__RAM_SIZE+0x1a0bf8c>
    7f88:	00021000 	andeq	r1, r2, r0
    7f8c:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    7f98:	2a1e0000 	bcs	787fa0 <__RAM_SIZE+0x687fa0>
    7f9c:	2b301000 	blcs	c0bfa4 <__RAM_SIZE+0xb0bfa4>
    7fa0:	00011000 	andeq	r1, r1, r0
    7fa4:	002b3c54 	eoreq	r3, fp, r4, asr ip
    7fa8:	002b6c10 	eoreq	r6, fp, r0, lsl ip
    7fac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7fb8:	2a500000 	bcs	1407fc0 <__RAM_SIZE+0x1307fc0>
    7fbc:	2a631000 	bcs	18cbfc4 <__RAM_SIZE+0x17cbfc4>
    7fc0:	00011000 	andeq	r1, r1, r0
    7fc4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    7fd0:	002a7a00 	eoreq	r7, sl, r0, lsl #20
    7fd4:	002a8010 	eoreq	r8, sl, r0, lsl r0
    7fd8:	52000110 	andpl	r0, r0, #16, 2
    7fdc:	10002af4 	strdne	r2, [r0], -r4
    7fe0:	10002b12 	andne	r2, r0, r2, lsl fp
    7fe4:	00520001 	subseq	r0, r2, r1
	...
    7ff0:	80000201 	andhi	r0, r0, r1, lsl #4
    7ff4:	8a10002a 	bhi	4080a4 <__RAM_SIZE+0x3080a4>
    7ff8:	0110002a 	tsteq	r0, sl, lsr #32
    7ffc:	2b165200 	blcs	59c804 <__RAM_SIZE+0x49c804>
    8000:	2b301000 	blcs	c0c008 <__RAM_SIZE+0xb0c008>
    8004:	00011000 	andeq	r1, r1, r0
    8008:	00000052 	andeq	r0, r0, r2, asr r0
    800c:	00000000 	andeq	r0, r0, r0
    8010:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    8014:	b410002a 	ldrlt	r0, [r0], #-42	; 0xffffffd6
    8018:	0110002a 	tsteq	r0, sl, lsr #32
    801c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    802c:	00020000 	andeq	r0, r2, r0
    8030:	0000007d 	andeq	r0, r0, sp, ror r0
    8034:	00000000 	andeq	r0, r0, r0
    8038:	00020000 	andeq	r0, r2, r0
    803c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    805c:	00500001 	subseq	r0, r0, r1
    8060:	00000000 	andeq	r0, r0, r0
    8064:	01000000 	mrseq	r0, (UNDEF: 0)
    8068:	00005400 	andeq	r5, r0, r0, lsl #8
    806c:	00000000 	andeq	r0, r0, r0
    8070:	00040000 	andeq	r0, r4, r0
    8074:	9f5001f3 	svcls	0x005001f3
	...
    8080:	00540001 	subseq	r0, r4, r1
    8084:	00000000 	andeq	r0, r0, r0
    8088:	03000000 	movweq	r0, #0
    808c:	9f7c7500 	svcls	0x007c7500
	...
    8098:	00540001 	subseq	r0, r4, r1
    809c:	00000000 	andeq	r0, r0, r0
    80a0:	03000000 	movweq	r0, #0
    80a4:	9f7c7500 	svcls	0x007c7500
	...
    80b0:	00000001 	andeq	r0, r0, r1
	...
    80c4:	00010000 	andeq	r0, r1, r0
    80c8:	00000050 	andeq	r0, r0, r0, asr r0
    80cc:	00000000 	andeq	r0, r0, r0
    80d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    80dc:	01f30004 	mvnseq	r0, r4
    80e0:	00009f50 	andeq	r9, r0, r0, asr pc
    80e4:	00000000 	andeq	r0, r0, r0
    80e8:	00010000 	andeq	r0, r1, r0
    80ec:	00000054 	andeq	r0, r0, r4, asr r0
    80f0:	00000000 	andeq	r0, r0, r0
    80f4:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    80f8:	00009f7c 	andeq	r9, r0, ip, ror pc
    80fc:	00000000 	andeq	r0, r0, r0
    8100:	00010000 	andeq	r0, r1, r0
    8104:	00000054 	andeq	r0, r0, r4, asr r0
    8108:	00000000 	andeq	r0, r0, r0
    810c:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    8110:	00009f7c 	andeq	r9, r0, ip, ror pc
	...
    811c:	00000001 	andeq	r0, r0, r1
    8120:	00000000 	andeq	r0, r0, r0
    8124:	00010000 	andeq	r0, r1, r0
    8128:	00000054 	andeq	r0, r0, r4, asr r0
    812c:	00000000 	andeq	r0, r0, r0
    8130:	31000200 	mrscc	r0, R8_usr
    8134:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8144:	01000000 	mrseq	r0, (UNDEF: 0)
    8148:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8158:	00020000 	andeq	r0, r2, r0
    815c:	0000007d 	andeq	r0, r0, sp, ror r0
    8160:	00000000 	andeq	r0, r0, r0
    8164:	00020000 	andeq	r0, r2, r0
    8168:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8180:	00500001 	subseq	r0, r0, r1
    8184:	00000000 	andeq	r0, r0, r0
    8188:	01000000 	mrseq	r0, (UNDEF: 0)
    818c:	00005400 	andeq	r5, r0, r0, lsl #8
    8190:	00000000 	andeq	r0, r0, r0
    8194:	00040000 	andeq	r0, r4, r0
    8198:	9f5001f3 	svcls	0x005001f3
	...
    81ac:	00010000 	andeq	r0, r1, r0
    81b0:	00000050 	andeq	r0, r0, r0, asr r0
    81b4:	00000000 	andeq	r0, r0, r0
    81b8:	0029d000 	eoreq	sp, r9, r0
    81bc:	0029d210 	eoreq	sp, r9, r0, lsl r2
    81c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    81c4:	0029d200 	eoreq	sp, r9, r0, lsl #4
    81c8:	002a0c10 	eoreq	r0, sl, r0, lsl ip
    81cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    81d0:	00000008 	andeq	r0, r0, r8
	...
    81e0:	0029d000 	eoreq	sp, r9, r0
    81e4:	0029e210 	eoreq	lr, r9, r0, lsl r2
    81e8:	50000110 	andpl	r0, r0, r0, lsl r1
    81ec:	100029e2 	andne	r2, r0, r2, ror #19
    81f0:	100029e8 	andne	r2, r0, r8, ror #19
    81f4:	ec540001 	mrrc	0, 0, r0, r4, cr1
    81f8:	ef100029 	svc	0x00100029
    81fc:	01100029 	tsteq	r0, r9, lsr #32
    8200:	29ef5000 	stmibcs	pc!, {ip, lr}^	; <UNPREDICTABLE>
    8204:	2a0c1000 	bcs	30c20c <__RAM_SIZE+0x20c20c>
    8208:	00011000 	andeq	r1, r1, r0
    820c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8218:	0029da00 	eoreq	sp, r9, r0, lsl #20
    821c:	0029e210 	eoreq	lr, r9, r0, lsl r2
    8220:	53000110 	movwpl	r0, #272	; 0x110
    8224:	100029ec 	andne	r2, r0, ip, ror #19
    8228:	100029ef 	andne	r2, r0, pc, ror #19
    822c:	00530001 	subseq	r0, r3, r1
	...
    8240:	01000000 	mrseq	r0, (UNDEF: 0)
    8244:	00005000 	andeq	r5, r0, r0
    8248:	00000000 	andeq	r0, r0, r0
    824c:	00040000 	andeq	r0, r4, r0
    8250:	9f5001f3 	svcls	0x005001f3
	...
    8264:	007d0002 	rsbseq	r0, sp, r2
	...
    8270:	187d0002 	ldmdane	sp!, {r1}^
	...
    8288:	00010000 	andeq	r0, r1, r0
    828c:	00000050 	andeq	r0, r0, r0, asr r0
    8290:	00000000 	andeq	r0, r0, r0
    8294:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    82a0:	01f30004 	mvnseq	r0, r4
    82a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    82c0:	00510001 	subseq	r0, r1, r1
    82c4:	00000000 	andeq	r0, r0, r0
    82c8:	01000000 	mrseq	r0, (UNDEF: 0)
    82cc:	00005400 	andeq	r5, r0, r0, lsl #8
    82d0:	00000000 	andeq	r0, r0, r0
    82d4:	00040000 	andeq	r0, r4, r0
    82d8:	9f5101f3 	svcls	0x005101f3
	...
    82e4:	00540001 	subseq	r0, r4, r1
    82e8:	00000000 	andeq	r0, r0, r0
    82ec:	04000000 	streq	r0, [r0], #-0
    82f0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    82f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8308:	01000000 	mrseq	r0, (UNDEF: 0)
    830c:	00005200 	andeq	r5, r0, r0, lsl #4
    8310:	00000000 	andeq	r0, r0, r0
    8314:	00010000 	andeq	r0, r1, r0
    8318:	00000057 	andeq	r0, r0, r7, asr r0
    831c:	00000000 	andeq	r0, r0, r0
    8320:	f3000400 	vshl.u8	d0, d0, d0
    8324:	009f5201 	addseq	r5, pc, r1, lsl #4
    8328:	00000000 	andeq	r0, r0, r0
    832c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    8340:	02000000 	andeq	r0, r0, #0
    8344:	009f3000 	addseq	r3, pc, r0
    8348:	00000000 	andeq	r0, r0, r0
    834c:	01000000 	mrseq	r0, (UNDEF: 0)
    8350:	00005500 	andeq	r5, r0, r0, lsl #10
    8354:	00000000 	andeq	r0, r0, r0
    8358:	00010000 	andeq	r0, r1, r0
    835c:	00000054 	andeq	r0, r0, r4, asr r0
    8360:	00000000 	andeq	r0, r0, r0
    8364:	30000200 	andcc	r0, r0, r0, lsl #4
    8368:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    836c:	00000000 	andeq	r0, r0, r0
    8370:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    837c:	00500001 	subseq	r0, r0, r1
    8380:	00000000 	andeq	r0, r0, r0
    8384:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    8394:	35000200 	strcc	r0, [r0, #-512]	; 0xfffffe00
    8398:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    839c:	00000000 	andeq	r0, r0, r0
    83a0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    83ac:	9f350002 	svcls	0x00350002
	...
    83c4:	00500001 	subseq	r0, r0, r1
    83c8:	00000000 	andeq	r0, r0, r0
    83cc:	01000000 	mrseq	r0, (UNDEF: 0)
    83d0:	00005000 	andeq	r5, r0, r0
	...
    83dc:	00010001 	andeq	r0, r1, r1
	...
    83e8:	9f300002 	svcls	0x00300002
	...
    83f4:	9f310002 	svcls	0x00310002
	...
    8400:	9f310002 	svcls	0x00310002
	...
    8418:	00530001 	subseq	r0, r3, r1
    841c:	00000000 	andeq	r0, r0, r0
    8420:	01000000 	mrseq	r0, (UNDEF: 0)
    8424:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8434:	00020000 	andeq	r0, r2, r0
    8438:	0000007d 	andeq	r0, r0, sp, ror r0
    843c:	00000000 	andeq	r0, r0, r0
    8440:	00020000 	andeq	r0, r2, r0
    8444:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8458:	00010000 	andeq	r0, r1, r0
    845c:	00000050 	andeq	r0, r0, r0, asr r0
    8460:	00000000 	andeq	r0, r0, r0
    8464:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    8470:	00000001 	andeq	r0, r0, r1
	...
    847c:	9f350002 	svcls	0x00350002
	...
    8488:	00540001 	subseq	r0, r4, r1
	...
    84b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    84bc:	00550001 	subseq	r0, r5, r1
    84c0:	00000000 	andeq	r0, r0, r0
    84c4:	01000000 	mrseq	r0, (UNDEF: 0)
    84c8:	00005000 	andeq	r5, r0, r0
    84cc:	00000000 	andeq	r0, r0, r0
    84d0:	00010000 	andeq	r0, r1, r0
    84d4:	00000055 	andeq	r0, r0, r5, asr r0
    84d8:	00000000 	andeq	r0, r0, r0
    84dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    84e8:	00550001 	subseq	r0, r5, r1
    84ec:	00000000 	andeq	r0, r0, r0
    84f0:	01000000 	mrseq	r0, (UNDEF: 0)
    84f4:	00005000 	andeq	r5, r0, r0
    84f8:	00000000 	andeq	r0, r0, r0
    84fc:	00010000 	andeq	r0, r1, r0
    8500:	00000055 	andeq	r0, r0, r5, asr r0
    8504:	00000000 	andeq	r0, r0, r0
    8508:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8514:	00550001 	subseq	r0, r5, r1
    8518:	00000000 	andeq	r0, r0, r0
    851c:	01000000 	mrseq	r0, (UNDEF: 0)
    8520:	00005000 	andeq	r5, r0, r0
	...
    8530:	00020000 	andeq	r0, r2, r0
    8534:	0000007d 	andeq	r0, r0, sp, ror r0
    8538:	00000000 	andeq	r0, r0, r0
    853c:	00020000 	andeq	r0, r2, r0
    8540:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
    8558:	00010000 	andeq	r0, r1, r0
    855c:	00000050 	andeq	r0, r0, r0, asr r0
    8560:	00000000 	andeq	r0, r0, r0
    8564:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    8568:	00009f78 	andeq	r9, r0, r8, ror pc
    856c:	00000000 	andeq	r0, r0, r0
    8570:	00010000 	andeq	r0, r1, r0
    8574:	00000050 	andeq	r0, r0, r0, asr r0
    8578:	00000000 	andeq	r0, r0, r0
    857c:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    8580:	00009f78 	andeq	r9, r0, r8, ror pc
	...
    858c:	02000000 	andeq	r0, r0, #0
    8590:	00000002 	andeq	r0, r0, r2
    8594:	00000000 	andeq	r0, r0, r0
    8598:	00010000 	andeq	r0, r1, r0
    859c:	00000051 	andeq	r0, r0, r1, asr r0
    85a0:	00000000 	andeq	r0, r0, r0
    85a4:	5e000100 	adfpls	f0, f0, f0
	...
    85b0:	00510001 	subseq	r0, r1, r1
    85b4:	00000000 	andeq	r0, r0, r0
    85b8:	04000000 	streq	r0, [r0], #-0
    85bc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    85c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    85c4:	00000000 	andeq	r0, r0, r0
    85c8:	00000100 	andeq	r0, r0, r0, lsl #2
    85cc:	00020000 	andeq	r0, r2, r0
    85d0:	00000000 	andeq	r0, r0, r0
    85d4:	02000000 	andeq	r0, r0, #0
    85d8:	009f3000 	addseq	r3, pc, r0
    85dc:	00000000 	andeq	r0, r0, r0
    85e0:	01000000 	mrseq	r0, (UNDEF: 0)
    85e4:	00005000 	andeq	r5, r0, r0
    85e8:	00000000 	andeq	r0, r0, r0
    85ec:	00020000 	andeq	r0, r2, r0
    85f0:	00009f30 	andeq	r9, r0, r0, lsr pc
    85f4:	00000000 	andeq	r0, r0, r0
    85f8:	00020000 	andeq	r0, r2, r0
    85fc:	00000000 	andeq	r0, r0, r0
    8600:	00000200 	andeq	r0, r0, r0, lsl #4
    8604:	00000000 	andeq	r0, r0, r0
    8608:	00020000 	andeq	r0, r2, r0
    860c:	00009f30 	andeq	r9, r0, r0, lsr pc
    8610:	00000000 	andeq	r0, r0, r0
    8614:	00010000 	andeq	r0, r1, r0
    8618:	00000051 	andeq	r0, r0, r1, asr r0
    861c:	00000000 	andeq	r0, r0, r0
    8620:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    862c:	9f300002 	svcls	0x00300002
	...
    8638:	00020000 	andeq	r0, r2, r0
	...
    8644:	00010000 	andeq	r0, r1, r0
    8648:	00000053 	andeq	r0, r0, r3, asr r0
    864c:	00000000 	andeq	r0, r0, r0
    8650:	30000200 	andcc	r0, r0, r0, lsl #4
    8654:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8658:	00000000 	andeq	r0, r0, r0
    865c:	53000100 	movwpl	r0, #256	; 0x100
	...
    8674:	00520001 	subseq	r0, r2, r1
    8678:	00000000 	andeq	r0, r0, r0
    867c:	01000000 	mrseq	r0, (UNDEF: 0)
    8680:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    868c:	00000001 	andeq	r0, r0, r1
    8690:	00000000 	andeq	r0, r0, r0
    8694:	00020000 	andeq	r0, r2, r0
    8698:	00009f30 	andeq	r9, r0, r0, lsr pc
    869c:	00000000 	andeq	r0, r0, r0
    86a0:	00020000 	andeq	r0, r2, r0
    86a4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    86b8:	00030000 	andeq	r0, r3, r0
    86bc:	009f0870 	addseq	r0, pc, r0, ror r8	; <UNPREDICTABLE>
    86c0:	00000000 	andeq	r0, r0, r0
    86c4:	01000000 	mrseq	r0, (UNDEF: 0)
    86c8:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    86dc:	00540001 	subseq	r0, r4, r1
	...
    86f0:	01000000 	mrseq	r0, (UNDEF: 0)
    86f4:	00005000 	andeq	r5, r0, r0
    86f8:	00000000 	andeq	r0, r0, r0
    86fc:	00010000 	andeq	r0, r1, r0
    8700:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8710:	01000000 	mrseq	r0, (UNDEF: 0)
    8714:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8728:	00500001 	subseq	r0, r0, r1
	...
    8734:	0029bc00 	eoreq	fp, r9, r0, lsl #24
    8738:	0029c410 	eoreq	ip, r9, r0, lsl r4
    873c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8748:	10002b6c 	andne	r2, r0, ip, ror #22
    874c:	10002b6e 	andne	r2, r0, lr, ror #22
    8750:	007d0002 	rsbseq	r0, sp, r2
    8754:	10002b6e 	andne	r2, r0, lr, ror #22
    8758:	10002c9c 	mulne	r0, ip, ip
    875c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    8768:	00000001 	andeq	r0, r0, r1
	...
    8774:	10002b6e 	andne	r2, r0, lr, ror #22
    8778:	10002b8a 	andne	r2, r0, sl, lsl #23
    877c:	9f300002 	svcls	0x00300002
    8780:	10002b8a 	andne	r2, r0, sl, lsl #23
    8784:	10002b96 	mulne	r0, r6, fp
    8788:	96530001 	ldrbls	r0, [r3], -r1
    878c:	9810002b 	ldmdals	r0, {r0, r1, r3, r5}
    8790:	0210002b 	andseq	r0, r0, #43	; 0x2b
    8794:	989f3000 	ldmls	pc, {ip, sp}	; <UNPREDICTABLE>
    8798:	a210002b 	andsge	r0, r0, #43	; 0x2b
    879c:	0110002b 	tsteq	r0, fp, lsr #32
    87a0:	2ba65300 	blcs	fe99d3a8 <__StackTop+0xc689d3a8>
    87a4:	2c3b1000 	ldccs	0, cr1, [fp], #-0
    87a8:	00011000 	andeq	r1, r1, r0
    87ac:	002c7053 	eoreq	r7, ip, r3, asr r0
    87b0:	002c7210 	eoreq	r7, ip, r0, lsl r2
    87b4:	30000210 	andcc	r0, r0, r0, lsl r2
    87b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    87bc:	00000000 	andeq	r0, r0, r0
    87c0:	01010200 	mrseq	r0, R9_usr
    87c4:	00000000 	andeq	r0, r0, r0
    87c8:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    87cc:	4810002b 	ldmdami	r0, {r0, r1, r3, r5}
    87d0:	0210002c 	andseq	r0, r0, #44	; 0x2c
    87d4:	489f3000 	ldmmi	pc, {ip, sp}	; <UNPREDICTABLE>
    87d8:	5410002c 	ldrpl	r0, [r0], #-44	; 0xffffffd4
    87dc:	0210002c 	andseq	r0, r0, #44	; 0x2c
    87e0:	549f3100 	ldrpl	r3, [pc], #256	; 87e8 <__HEAP_SIZE+0x77e8>
    87e4:	7210002c 	andsvc	r0, r0, #44	; 0x2c
    87e8:	0210002c 	andseq	r0, r0, #44	; 0x2c
    87ec:	729f3000 	addsvc	r3, pc, #0
    87f0:	7a10002c 	bvc	4088a8 <__RAM_SIZE+0x3088a8>
    87f4:	0110002c 	tsteq	r0, ip, lsr #32
    87f8:	2c7a5400 	cfldrdcs	mvd5, [sl], #-0
    87fc:	2c9c1000 	ldccs	0, cr1, [ip], {0}
    8800:	00011000 	andeq	r1, r1, r0
    8804:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8810:	002b8a00 	eoreq	r8, fp, r0, lsl #20
    8814:	002b9010 	eoreq	r9, fp, r0, lsl r0
    8818:	52000110 	andpl	r0, r0, #16, 2
    881c:	10002ba8 	andne	r2, r0, r8, lsr #23
    8820:	10002bc8 	andne	r2, r0, r8, asr #23
    8824:	00520001 	subseq	r0, r2, r1
	...
    8830:	90000000 	andls	r0, r0, r0
    8834:	9610002b 	ldrls	r0, [r0], -fp, lsr #32
    8838:	0110002b 	tsteq	r0, fp, lsr #32
    883c:	2bc85200 	blcs	ff21d044 <__StackTop+0xc711d044>
    8840:	2be61000 	blcs	ff98c848 <__StackTop+0xc788c848>
    8844:	00011000 	andeq	r1, r1, r0
    8848:	00000052 	andeq	r0, r0, r2, asr r0
    884c:	00000000 	andeq	r0, r0, r0
    8850:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    8854:	0a10002b 	beq	408908 <__RAM_SIZE+0x308908>
    8858:	0110002c 	tsteq	r0, ip, lsr #32
    885c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    8868:	00020200 	andeq	r0, r2, r0, lsl #4
    886c:	2c400000 	marcs	acc0, r0, r0
    8870:	2c461000 	marcs	acc0, r1, r6
    8874:	00011000 	andeq	r1, r1, r0
    8878:	002c5454 	eoreq	r5, ip, r4, asr r4
    887c:	002c5410 	eoreq	r5, ip, r0, lsl r4
    8880:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    8884:	10002c54 	andne	r2, r0, r4, asr ip
    8888:	10002c56 	andne	r2, r0, r6, asr ip
    888c:	7f740003 	svcvc	0x00740003
    8890:	002c569f 	mlaeq	ip, pc, r6, r5	; <UNPREDICTABLE>
    8894:	002c7010 	eoreq	r7, ip, r0, lsl r0
    8898:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    88a4:	01000000 	mrseq	r0, (UNDEF: 0)
    88a8:	100024d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    88ac:	100024da 	ldrdne	r2, [r0], -sl
    88b0:	dc500001 	mrrcle	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    88b4:	dc100024 	ldcle	0, cr0, [r0], {36}	; 0x24
    88b8:	02100024 	andseq	r0, r0, #36	; 0x24
    88bc:	009f3000 	addseq	r3, pc, r0
    88c0:	00000000 	andeq	r0, r0, r0
    88c4:	03000000 	movweq	r0, #0
    88c8:	00000000 	andeq	r0, r0, r0
    88cc:	0024b400 	eoreq	fp, r4, r0, lsl #8
    88d0:	0024b810 	eoreq	fp, r4, r0, lsl r8
    88d4:	30000210 	andcc	r0, r0, r0, lsl r2
    88d8:	0024bc9f 	mlaeq	r4, pc, ip, fp	; <UNPREDICTABLE>
    88dc:	0024d010 	eoreq	sp, r4, r0, lsl r0
    88e0:	53000110 	movwpl	r0, #272	; 0x110
    88e4:	100024da 	ldrdne	r2, [r0], -sl
    88e8:	100024f4 	strdne	r2, [r0], -r4
    88ec:	00530001 	subseq	r0, r3, r1
	...
    88fc:	02000000 	andeq	r0, r0, #0
    8900:	00007d00 	andeq	r7, r0, r0, lsl #26
    8904:	00000000 	andeq	r0, r0, r0
    8908:	02000000 	andeq	r0, r0, #0
    890c:	00087d00 	andeq	r7, r8, r0, lsl #26
    8910:	00000000 	andeq	r0, r0, r0
    8914:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    8920:	02000000 	andeq	r0, r0, #0
    8924:	009f3000 	addseq	r3, pc, r0
    8928:	00000000 	andeq	r0, r0, r0
    892c:	01000000 	mrseq	r0, (UNDEF: 0)
    8930:	00005400 	andeq	r5, r0, r0, lsl #8
    8934:	00000000 	andeq	r0, r0, r0
    8938:	31600000 	cmncc	r0, r0
    893c:	31621000 	cmncc	r2, r0
    8940:	00021000 	andeq	r1, r2, r0
    8944:	3162007d 	smccc	8205	; 0x200d
    8948:	31a81000 			; <UNDEFINED> instruction: 0x31a81000
    894c:	00021000 	andeq	r1, r2, r0
    8950:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8960:	10003166 	andne	r3, r0, r6, ror #2
    8964:	1000316e 	andne	r3, r0, lr, ror #2
    8968:	74500001 	ldrbvc	r0, [r0], #-1
    896c:	77100031 			; <UNDEFINED> instruction: 0x77100031
    8970:	01100031 	tsteq	r0, r1, lsr r0
    8974:	31785000 	cmncc	r8, r0
    8978:	317d1000 	cmncc	sp, r0
    897c:	00011000 	andeq	r1, r1, r0
    8980:	00000050 	andeq	r0, r0, r0, asr r0
    8984:	00000000 	andeq	r0, r0, r0
    8988:	0030f400 	eorseq	pc, r0, r0, lsl #8
    898c:	0030f610 	eorseq	pc, r0, r0, lsl r6	; <UNPREDICTABLE>
    8990:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8994:	0030f600 	eorseq	pc, r0, r0, lsl #12
    8998:	0030f810 	eorseq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
    899c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    89a0:	0030f80c 	eorseq	pc, r0, ip, lsl #16
    89a4:	00311c10 	eorseq	r1, r1, r0, lsl ip
    89a8:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    89ac:	311c00d0 	ldrsbcc	r0, [ip, -r0]
    89b0:	311e1000 	tstcc	lr, r0
    89b4:	00021000 	andeq	r1, r2, r0
    89b8:	311e0c7d 	tstcc	lr, sp, ror ip
    89bc:	31601000 	cmncc	r0, r0
    89c0:	00031000 	andeq	r1, r3, r0
    89c4:	0000d07d 	andeq	sp, r0, sp, ror r0
    89c8:	00000000 	andeq	r0, r0, r0
    89cc:	01000000 	mrseq	r0, (UNDEF: 0)
    89d0:	01010001 	tsteq	r1, r1
    89d4:	0030f800 	eorseq	pc, r0, r0, lsl #16
    89d8:	00311a10 	eorseq	r1, r1, r0, lsl sl
    89dc:	31000210 	tstcc	r0, r0, lsl r2
    89e0:	00311e9f 	mlaseq	r1, pc, lr, r1	; <UNPREDICTABLE>
    89e4:	00315010 	eorseq	r5, r1, r0, lsl r0
    89e8:	31000210 	tstcc	r0, r0, lsl r2
    89ec:	0031509f 	mlaseq	r1, pc, r0, r5	; <UNPREDICTABLE>
    89f0:	00316010 	eorseq	r6, r1, r0, lsl r0
    89f4:	30000210 	andcc	r0, r0, r0, lsl r2
    89f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    89fc:	00000000 	andeq	r0, r0, r0
    8a00:	14000000 	strne	r0, [r0], #-0
    8a04:	60100031 	andsvs	r0, r0, r1, lsr r0
    8a08:	01100031 	tsteq	r0, r1, lsr r0
    8a0c:	00005400 	andeq	r5, r0, r0, lsl #8
    8a10:	00000000 	andeq	r0, r0, r0
    8a14:	00040000 	andeq	r0, r4, r0
    8a18:	100030f8 	strdne	r3, [r0], -r8
    8a1c:	10003114 	andne	r3, r0, r4, lsl r1
    8a20:	9f300002 	svcls	0x00300002
	...
    8a2c:	00000006 	andeq	r0, r0, r6
    8a30:	100030f8 	strdne	r3, [r0], -r8
    8a34:	100030fa 	strdne	r3, [r0], -sl
    8a38:	9f300002 	svcls	0x00300002
    8a3c:	100030fa 	strdne	r3, [r0], -sl
    8a40:	10003114 	andne	r3, r0, r4, lsl r1
    8a44:	00530001 	subseq	r0, r3, r1
	...
    8a54:	02000000 	andeq	r0, r0, #0
    8a58:	00007d00 	andeq	r7, r0, r0, lsl #26
    8a5c:	00000000 	andeq	r0, r0, r0
    8a60:	02000000 	andeq	r0, r0, #0
    8a64:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    8a78:	01000000 	mrseq	r0, (UNDEF: 0)
    8a7c:	00005000 	andeq	r5, r0, r0
    8a80:	00000000 	andeq	r0, r0, r0
    8a84:	00010000 	andeq	r0, r1, r0
    8a88:	00000054 	andeq	r0, r0, r4, asr r0
    8a8c:	00000000 	andeq	r0, r0, r0
    8a90:	01010100 	mrseq	r0, (UNDEF: 17)
	...
    8aa0:	30000200 	andcc	r0, r0, r0, lsl #4
    8aa4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8aa8:	00000000 	andeq	r0, r0, r0
    8aac:	31000200 	mrscc	r0, R8_usr
    8ab0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8ab4:	00000000 	andeq	r0, r0, r0
    8ab8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    8ac4:	9f300002 	svcls	0x00300002
	...
    8ad0:	00000002 	andeq	r0, r0, r2
	...
    8adc:	00500001 	subseq	r0, r0, r1
    8ae0:	00000000 	andeq	r0, r0, r0
    8ae4:	01000000 	mrseq	r0, (UNDEF: 0)
    8ae8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8afc:	00010000 	andeq	r0, r1, r0
    8b00:	00000050 	andeq	r0, r0, r0, asr r0
    8b04:	00000000 	andeq	r0, r0, r0
    8b08:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    8b1c:	00010000 	andeq	r0, r1, r0
    8b20:	00000053 	andeq	r0, r0, r3, asr r0
	...
    8b30:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8b3c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8b40:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8b4c:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    8b58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8b64:	00540001 	subseq	r0, r4, r1
    8b68:	00000000 	andeq	r0, r0, r0
    8b6c:	04000000 	streq	r0, [r0], #-0
    8b70:	5001f300 	andpl	pc, r1, r0, lsl #6
    8b74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8b78:	00000000 	andeq	r0, r0, r0
    8b7c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8b88:	02000001 	andeq	r0, r0, #1
    8b8c:	00000002 	andeq	r0, r0, r2
	...
    8b98:	00500001 	subseq	r0, r0, r1
    8b9c:	00000000 	andeq	r0, r0, r0
    8ba0:	01000000 	mrseq	r0, (UNDEF: 0)
    8ba4:	00005400 	andeq	r5, r0, r0, lsl #8
    8ba8:	00000000 	andeq	r0, r0, r0
    8bac:	00040000 	andeq	r0, r4, r0
    8bb0:	9f5001f3 	svcls	0x005001f3
	...
    8bbc:	00540001 	subseq	r0, r4, r1
	...
    8bd0:	53000100 	movwpl	r0, #256	; 0x100
	...
    8bf8:	00500001 	subseq	r0, r0, r1
    8bfc:	00000000 	andeq	r0, r0, r0
    8c00:	04000000 	streq	r0, [r0], #-0
    8c04:	5001f300 	andpl	pc, r1, r0, lsl #6
    8c08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8c0c:	00000000 	andeq	r0, r0, r0
    8c10:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8c1c:	01f30004 	mvnseq	r0, r4
    8c20:	00009f50 	andeq	r9, r0, r0, asr pc
    8c24:	00000000 	andeq	r0, r0, r0
    8c28:	00010000 	andeq	r0, r1, r0
    8c2c:	00000050 	andeq	r0, r0, r0, asr r0
    8c30:	00000000 	andeq	r0, r0, r0
    8c34:	f3000400 	vshl.u8	d0, d0, d0
    8c38:	009f5001 	addseq	r5, pc, r1
    8c3c:	00000000 	andeq	r0, r0, r0
    8c40:	01000000 	mrseq	r0, (UNDEF: 0)
    8c44:	00005000 	andeq	r5, r0, r0
    8c48:	00000000 	andeq	r0, r0, r0
    8c4c:	00040000 	andeq	r0, r4, r0
    8c50:	9f5001f3 	svcls	0x005001f3
	...
    8c5c:	00500001 	subseq	r0, r0, r1
    8c60:	00000000 	andeq	r0, r0, r0
    8c64:	04000000 	streq	r0, [r0], #-0
    8c68:	5001f300 	andpl	pc, r1, r0, lsl #6
    8c6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8c70:	00000000 	andeq	r0, r0, r0
    8c74:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    8c80:	02000000 	andeq	r0, r0, #0
    8c84:	009f3000 	addseq	r3, pc, r0
    8c88:	00000000 	andeq	r0, r0, r0
    8c8c:	02000000 	andeq	r0, r0, #0
    8c90:	009f3000 	addseq	r3, pc, r0
    8c94:	00000000 	andeq	r0, r0, r0
    8c98:	02000000 	andeq	r0, r0, #0
    8c9c:	009f3000 	addseq	r3, pc, r0
    8ca0:	00000000 	andeq	r0, r0, r0
    8ca4:	03000000 	movweq	r0, #0
	...
    8cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    8cc4:	00005000 	andeq	r5, r0, r0
    8cc8:	00000000 	andeq	r0, r0, r0
    8ccc:	00040000 	andeq	r0, r4, r0
    8cd0:	9f5001f3 	svcls	0x005001f3
	...
    8cdc:	00500001 	subseq	r0, r0, r1
    8ce0:	00000000 	andeq	r0, r0, r0
    8ce4:	04000000 	streq	r0, [r0], #-0
    8ce8:	5001f300 	andpl	pc, r1, r0, lsl #6
    8cec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8cf0:	00000000 	andeq	r0, r0, r0
    8cf4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8d00:	01f30004 	mvnseq	r0, r4
    8d04:	00009f50 	andeq	r9, r0, r0, asr pc
    8d08:	00000000 	andeq	r0, r0, r0
    8d0c:	00010000 	andeq	r0, r1, r0
    8d10:	00000050 	andeq	r0, r0, r0, asr r0
    8d14:	00000000 	andeq	r0, r0, r0
    8d18:	f3000400 	vshl.u8	d0, d0, d0
    8d1c:	009f5001 	addseq	r5, pc, r1
    8d20:	00000000 	andeq	r0, r0, r0
    8d24:	01000000 	mrseq	r0, (UNDEF: 0)
    8d28:	00005000 	andeq	r5, r0, r0
    8d2c:	00000000 	andeq	r0, r0, r0
    8d30:	00040000 	andeq	r0, r4, r0
    8d34:	9f5001f3 	svcls	0x005001f3
	...
    8d4c:	00530001 	subseq	r0, r3, r1
    8d50:	00000000 	andeq	r0, r0, r0
    8d54:	01000000 	mrseq	r0, (UNDEF: 0)
    8d58:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8d68:	00020000 	andeq	r0, r2, r0
    8d6c:	0000007d 	andeq	r0, r0, sp, ror r0
    8d70:	00000000 	andeq	r0, r0, r0
    8d74:	00020000 	andeq	r0, r2, r0
    8d78:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8d90:	00500001 	subseq	r0, r0, r1
    8d94:	00000000 	andeq	r0, r0, r0
    8d98:	01000000 	mrseq	r0, (UNDEF: 0)
    8d9c:	00005400 	andeq	r5, r0, r0, lsl #8
    8da0:	00000000 	andeq	r0, r0, r0
    8da4:	00010000 	andeq	r0, r1, r0
    8da8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8dbc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8dc8:	00540001 	subseq	r0, r4, r1
    8dcc:	00000000 	andeq	r0, r0, r0
    8dd0:	02000000 	andeq	r0, r0, #0
	...
    8de0:	30000200 	andcc	r0, r0, r0, lsl #4
    8de4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8de8:	00000000 	andeq	r0, r0, r0
    8dec:	53000100 	movwpl	r0, #256	; 0x100
	...
    8df8:	00530001 	subseq	r0, r3, r1
	...
    8e10:	53000100 	movwpl	r0, #256	; 0x100
	...
    8e1c:	40030005 	andmi	r0, r3, r5
    8e20:	0038008b 	eorseq	r0, r8, fp, lsl #1
    8e24:	00000000 	andeq	r0, r0, r0
    8e28:	01000000 	mrseq	r0, (UNDEF: 0)
    8e2c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8e3c:	00020000 	andeq	r0, r2, r0
    8e40:	0000007d 	andeq	r0, r0, sp, ror r0
    8e44:	00000000 	andeq	r0, r0, r0
    8e48:	00020000 	andeq	r0, r2, r0
    8e4c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8e64:	00500001 	subseq	r0, r0, r1
    8e68:	00000000 	andeq	r0, r0, r0
    8e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    8e70:	00005400 	andeq	r5, r0, r0, lsl #8
    8e74:	00000000 	andeq	r0, r0, r0
    8e78:	00010000 	andeq	r0, r1, r0
    8e7c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8e94:	01000000 	mrseq	r0, (UNDEF: 0)
    8e98:	00005100 	andeq	r5, r0, r0, lsl #2
    8e9c:	00000000 	andeq	r0, r0, r0
    8ea0:	00010000 	andeq	r0, r1, r0
    8ea4:	00000055 	andeq	r0, r0, r5, asr r0
    8ea8:	00000000 	andeq	r0, r0, r0
    8eac:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    8eb0:	000000e0 	andeq	r0, r0, r0, ror #1
    8eb4:	00000000 	andeq	r0, r0, r0
    8eb8:	00010000 	andeq	r0, r1, r0
    8ebc:	00000055 	andeq	r0, r0, r5, asr r0
    8ec0:	00000000 	andeq	r0, r0, r0
    8ec4:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    8ec8:	000000e0 	andeq	r0, r0, r0, ror #1
	...
    8edc:	00010000 	andeq	r0, r1, r0
    8ee0:	00000054 	andeq	r0, r0, r4, asr r0
    8ee4:	00000000 	andeq	r0, r0, r0
    8ee8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8f00:	00010000 	andeq	r0, r1, r0
    8f04:	00000052 	andeq	r0, r0, r2, asr r0
    8f08:	00000000 	andeq	r0, r0, r0
    8f0c:	52000100 	andpl	r0, r0, #0, 2
	...
    8f18:	00520001 	subseq	r0, r2, r1
	...
    8f2c:	53000100 	movwpl	r0, #256	; 0x100
	...
    8f38:	00000003 	andeq	r0, r0, r3
	...
    8f48:	9f300002 	svcls	0x00300002
	...
    8f54:	00560001 	subseq	r0, r6, r1
    8f58:	00000000 	andeq	r0, r0, r0
    8f5c:	02000000 	andeq	r0, r0, #0
    8f60:	009f3000 	addseq	r3, pc, r0
    8f64:	00000000 	andeq	r0, r0, r0
    8f68:	01000000 	mrseq	r0, (UNDEF: 0)
    8f6c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8f80:	00530001 	subseq	r0, r3, r1
	...
    8f90:	02000000 	andeq	r0, r0, #0
    8f94:	00007d00 	andeq	r7, r0, r0, lsl #26
    8f98:	00000000 	andeq	r0, r0, r0
    8f9c:	02000000 	andeq	r0, r0, #0
    8fa0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8fb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8fc4:	00540001 	subseq	r0, r4, r1
    8fc8:	00000000 	andeq	r0, r0, r0
    8fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    8fd0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8fe4:	00540001 	subseq	r0, r4, r1
	...
    8ff8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9010:	00500001 	subseq	r0, r0, r1
    9014:	00000000 	andeq	r0, r0, r0
    9018:	01000000 	mrseq	r0, (UNDEF: 0)
    901c:	00005000 	andeq	r5, r0, r0
	...
    902c:	00020000 	andeq	r0, r2, r0
    9030:	0000007d 	andeq	r0, r0, sp, ror r0
    9034:	00000000 	andeq	r0, r0, r0
    9038:	00020000 	andeq	r0, r2, r0
    903c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    9054:	00500001 	subseq	r0, r0, r1
    9058:	00000000 	andeq	r0, r0, r0
    905c:	01000000 	mrseq	r0, (UNDEF: 0)
    9060:	00005400 	andeq	r5, r0, r0, lsl #8
    9064:	00000000 	andeq	r0, r0, r0
    9068:	00010000 	andeq	r0, r1, r0
    906c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    907c:	01000000 	mrseq	r0, (UNDEF: 0)
    9080:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    9094:	00540001 	subseq	r0, r4, r1
	...
    90a4:	02000000 	andeq	r0, r0, #0
    90a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    90ac:	00000000 	andeq	r0, r0, r0
    90b0:	02000000 	andeq	r0, r0, #0
    90b4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    90cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    90d8:	00540001 	subseq	r0, r4, r1
    90dc:	00000000 	andeq	r0, r0, r0
    90e0:	01000000 	mrseq	r0, (UNDEF: 0)
    90e4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    90f8:	00540001 	subseq	r0, r4, r1
	...
    910c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9124:	00500001 	subseq	r0, r0, r1
    9128:	00000000 	andeq	r0, r0, r0
    912c:	01000000 	mrseq	r0, (UNDEF: 0)
    9130:	00005000 	andeq	r5, r0, r0
	...
    9140:	00020000 	andeq	r0, r2, r0
    9144:	0000007d 	andeq	r0, r0, sp, ror r0
    9148:	00000000 	andeq	r0, r0, r0
    914c:	00020000 	andeq	r0, r2, r0
    9150:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    9168:	00500001 	subseq	r0, r0, r1
    916c:	00000000 	andeq	r0, r0, r0
    9170:	01000000 	mrseq	r0, (UNDEF: 0)
    9174:	00005400 	andeq	r5, r0, r0, lsl #8
    9178:	00000000 	andeq	r0, r0, r0
    917c:	00010000 	andeq	r0, r1, r0
    9180:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9190:	01000000 	mrseq	r0, (UNDEF: 0)
    9194:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    91a8:	00540001 	subseq	r0, r4, r1
    91ac:	00000000 	andeq	r0, r0, r0
    91b0:	0c000000 	stceq	0, cr0, [r0], {-0}
    91b4:	18100029 	ldmdane	r0, {r0, r3, r5}
    91b8:	02100029 	andseq	r0, r0, #41	; 0x29
    91bc:	18007d00 	stmdane	r0, {r8, sl, fp, ip, sp, lr}
    91c0:	76100029 	ldrvc	r0, [r0], -r9, lsr #32
    91c4:	02100029 	andseq	r0, r0, #41	; 0x29
    91c8:	76187d00 	ldrvc	r7, [r8], -r0, lsl #26
    91cc:	7a100029 	bvc	409278 <__RAM_SIZE+0x309278>
    91d0:	02100029 	andseq	r0, r0, #41	; 0x29
    91d4:	7a007d00 	bvc	285dc <__HEAP_SIZE+0x275dc>
    91d8:	a8100029 	ldmdage	r0, {r0, r3, r5}
    91dc:	02100029 	andseq	r0, r0, #41	; 0x29
    91e0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    91f4:	00290c00 	eoreq	r0, r9, r0, lsl #24
    91f8:	00291d10 	eoreq	r1, r9, r0, lsl sp
    91fc:	50000110 	andpl	r0, r0, r0, lsl r1
    9200:	1000291d 	andne	r2, r0, sp, lsl r9
    9204:	10002976 	andne	r2, r0, r6, ror r9
    9208:	76540001 	ldrbvc	r0, [r4], -r1
    920c:	78100029 	ldmdavc	r0, {r0, r3, r5}
    9210:	01100029 	tsteq	r0, r9, lsr #32
    9214:	29785000 	ldmdbcs	r8!, {ip, lr}^
    9218:	297a1000 	ldmdbcs	sl!, {ip}^
    921c:	00041000 	andeq	r1, r4, r0
    9220:	9f5001f3 	svcls	0x005001f3
    9224:	1000297a 	andne	r2, r0, sl, ror r9
    9228:	100029a8 	andne	r2, r0, r8, lsr #19
    922c:	00540001 	subseq	r0, r4, r1
	...
    9238:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    923c:	7a100029 	bvc	4092e8 <__RAM_SIZE+0x3092e8>
    9240:	01100029 	tsteq	r0, r9, lsr #32
    9244:	297c5000 	ldmdbcs	ip!, {ip, lr}^
    9248:	29801000 	stmibcs	r0, {ip}
    924c:	00011000 	andeq	r1, r1, r0
    9250:	00000050 	andeq	r0, r0, r0, asr r0
	...
    925c:	00292000 	eoreq	r2, r9, r0
    9260:	00297610 	eoreq	r7, r9, r0, lsl r6
    9264:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9268:	1000297a 	andne	r2, r0, sl, ror r9
    926c:	100029a8 	andne	r2, r0, r8, lsr #19
    9270:	00550001 	subseq	r0, r5, r1
	...
    927c:	22000000 	andcs	r0, r0, #0
    9280:	76100029 	ldrvc	r0, [r0], -r9, lsr #32
    9284:	01100029 	tsteq	r0, r9, lsr #32
    9288:	297a5600 	ldmdbcs	sl!, {r9, sl, ip, lr}^
    928c:	29a81000 	stmibcs	r8!, {ip}
    9290:	00011000 	andeq	r1, r1, r0
    9294:	00000056 	andeq	r0, r0, r6, asr r0
	...
    92a0:	00292600 	eoreq	r2, r9, r0, lsl #12
    92a4:	00297610 	eoreq	r7, r9, r0, lsl r6
    92a8:	57000110 	smladpl	r0, r0, r1, r0
    92ac:	1000297a 	andne	r2, r0, sl, ror r9
    92b0:	100029a8 	andne	r2, r0, r8, lsr #19
    92b4:	00570001 	subseq	r0, r7, r1
	...
    92c0:	2c000000 	stccs	0, cr0, [r0], {-0}
    92c4:	76100029 	ldrvc	r0, [r0], -r9, lsr #32
    92c8:	01100029 	tsteq	r0, r9, lsr #32
    92cc:	297a5800 	ldmdbcs	sl!, {fp, ip, lr}^
    92d0:	29a81000 	stmibcs	r8!, {ip}
    92d4:	00011000 	andeq	r1, r1, r0
    92d8:	00000058 	andeq	r0, r0, r8, asr r0
    92dc:	00000000 	andeq	r0, r0, r0
    92e0:	00000700 	andeq	r0, r0, r0, lsl #14
    92e4:	00000000 	andeq	r0, r0, r0
    92e8:	0c000000 	stceq	0, cr0, [r0], {-0}
    92ec:	1d100029 	ldcne	0, cr0, [r0, #-164]	; 0xffffff5c
    92f0:	01100029 	tsteq	r0, r9, lsr #32
    92f4:	291d5000 	ldmdbcs	sp, {ip, lr}
    92f8:	29761000 	ldmdbcs	r6!, {ip}^
    92fc:	00011000 	andeq	r1, r1, r0
    9300:	00297654 	eoreq	r7, r9, r4, asr r6
    9304:	00297810 	eoreq	r7, r9, r0, lsl r8
    9308:	50000110 	andpl	r0, r0, r0, lsl r1
    930c:	10002978 	andne	r2, r0, r8, ror r9
    9310:	1000297a 	andne	r2, r0, sl, ror r9
    9314:	01f30004 	mvnseq	r0, r4
    9318:	297a9f50 	ldmdbcs	sl!, {r4, r6, r8, r9, sl, fp, ip, pc}^
    931c:	29a81000 	stmibcs	r8!, {ip}
    9320:	00011000 	andeq	r1, r1, r0
    9324:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9330:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    9334:	68100029 	ldmdavs	r0, {r0, r3, r5}
    9338:	01100029 	tsteq	r0, r9, lsr #32
    933c:	296a5300 	stmdbcs	sl!, {r8, r9, ip, lr}^
    9340:	29721000 	ldmdbcs	r2!, {ip}^
    9344:	00011000 	andeq	r1, r1, r0
    9348:	00298853 	eoreq	r8, r9, r3, asr r8
    934c:	00298c10 	eoreq	r8, r9, r0, lsl ip
    9350:	53000110 	movwpl	r0, #272	; 0x110
	...
    935c:	10002c9c 	mulne	r0, ip, ip
    9360:	10002c9e 	mulne	r0, lr, ip
    9364:	007d0002 	rsbseq	r0, sp, r2
    9368:	10002c9e 	mulne	r0, lr, ip
    936c:	10002cba 			; <UNDEFINED> instruction: 0x10002cba
    9370:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9380:	2c9c0000 	ldccs	0, cr0, [ip], {0}
    9384:	2ca51000 	stccs	0, cr1, [r5]
    9388:	00011000 	andeq	r1, r1, r0
    938c:	002ca550 	eoreq	sl, ip, r0, asr r5
    9390:	002cb410 	eoreq	fp, ip, r0, lsl r4
    9394:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    9398:	10002cb4 			; <UNDEFINED> instruction: 0x10002cb4
    939c:	10002cba 			; <UNDEFINED> instruction: 0x10002cba
    93a0:	01f30004 	mvnseq	r0, r4
    93a4:	00009f50 	andeq	r9, r0, r0, asr pc
    93a8:	00000000 	andeq	r0, r0, r0
    93ac:	00010000 	andeq	r0, r1, r0
    93b0:	2c9e0000 	ldccs	0, cr0, [lr], {0}
    93b4:	2cb21000 	ldccs	0, cr1, [r2]
    93b8:	00021000 	andeq	r1, r2, r0
    93bc:	2cb29f30 	ldccs	15, cr9, [r2], #192	; 0xc0
    93c0:	2cb41000 	ldccs	0, cr1, [r4]
    93c4:	00011000 	andeq	r1, r1, r0
    93c8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    93d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    93e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    93e8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    93fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9408:	00550001 	subseq	r0, r5, r1
	...
    9420:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    942c:	00540001 	subseq	r0, r4, r1
    9430:	00000000 	andeq	r0, r0, r0
    9434:	04000000 	streq	r0, [r0], #-0
    9438:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    943c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9458:	01000000 	mrseq	r0, (UNDEF: 0)
    945c:	00005400 	andeq	r5, r0, r0, lsl #8
    9460:	00000000 	andeq	r0, r0, r0
    9464:	00020000 	andeq	r0, r2, r0
    9468:	00000075 	andeq	r0, r0, r5, ror r0
    946c:	00000000 	andeq	r0, r0, r0
    9470:	00010000 	andeq	r0, r1, r0
    9474:	00000054 	andeq	r0, r0, r4, asr r0
    9478:	00000000 	andeq	r0, r0, r0
    947c:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
    9488:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9494:	00540001 	subseq	r0, r4, r1
    9498:	00000000 	andeq	r0, r0, r0
    949c:	02000000 	andeq	r0, r0, #0
    94a0:	00007500 	andeq	r7, r0, r0, lsl #10
	...
    94b4:	01000000 	mrseq	r0, (UNDEF: 0)
    94b8:	00005000 	andeq	r5, r0, r0
    94bc:	00000000 	andeq	r0, r0, r0
    94c0:	00010000 	andeq	r0, r1, r0
    94c4:	00000050 	andeq	r0, r0, r0, asr r0
    94c8:	00000000 	andeq	r0, r0, r0
    94cc:	01010200 	mrseq	r0, R9_usr
    94d0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    94dc:	02000000 	andeq	r0, r0, #0
    94e0:	009f3000 	addseq	r3, pc, r0
    94e4:	00000000 	andeq	r0, r0, r0
    94e8:	02000000 	andeq	r0, r0, #0
    94ec:	009f3100 	addseq	r3, pc, r0, lsl #2
    94f0:	00000000 	andeq	r0, r0, r0
    94f4:	02000000 	andeq	r0, r0, #0
    94f8:	009f3000 	addseq	r3, pc, r0
    94fc:	00000000 	andeq	r0, r0, r0
    9500:	02000000 	andeq	r0, r0, #0
    9504:	009f3100 	addseq	r3, pc, r0, lsl #2
    9508:	00000000 	andeq	r0, r0, r0
    950c:	02000000 	andeq	r0, r0, #0
    9510:	009f3000 	addseq	r3, pc, r0
	...
    9524:	01000000 	mrseq	r0, (UNDEF: 0)
    9528:	00005000 	andeq	r5, r0, r0
    952c:	00000000 	andeq	r0, r0, r0
    9530:	00010000 	andeq	r0, r1, r0
    9534:	00000050 	andeq	r0, r0, r0, asr r0
	...
    9544:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9550:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9554:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    9568:	01000000 	mrseq	r0, (UNDEF: 0)
    956c:	00005000 	andeq	r5, r0, r0
    9570:	00000000 	andeq	r0, r0, r0
    9574:	00010000 	andeq	r0, r1, r0
    9578:	00000054 	andeq	r0, r0, r4, asr r0
    957c:	00000000 	andeq	r0, r0, r0
    9580:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9598:	00540001 	subseq	r0, r4, r1
    959c:	00000000 	andeq	r0, r0, r0
    95a0:	01000000 	mrseq	r0, (UNDEF: 0)
    95a4:	00005400 	andeq	r5, r0, r0, lsl #8
    95a8:	00000000 	andeq	r0, r0, r0
    95ac:	00020000 	andeq	r0, r2, r0
    95b0:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    95bc:	9f300002 	svcls	0x00300002
	...
    95c8:	9f300002 	svcls	0x00300002
	...
    95d4:	9f310002 	svcls	0x00310002
	...
    95ec:	00520001 	subseq	r0, r2, r1
    95f0:	00000000 	andeq	r0, r0, r0
    95f4:	01000000 	mrseq	r0, (UNDEF: 0)
    95f8:	00005200 	andeq	r5, r0, r0, lsl #4
    95fc:	00000000 	andeq	r0, r0, r0
    9600:	26840000 	strcs	r0, [r4], r0
    9604:	26861000 	strcs	r1, [r6], r0
    9608:	00021000 	andeq	r1, r2, r0
    960c:	2686007d 	sxtab16cs	r0, r6, sp
    9610:	27441000 	strbcs	r1, [r4, -r0]
    9614:	00021000 	andeq	r1, r2, r0
    9618:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    9624:	26840000 	strcs	r0, [r4], r0
    9628:	268b1000 	strcs	r1, [fp], r0
    962c:	00011000 	andeq	r1, r1, r0
    9630:	00268b50 	eoreq	r8, r6, r0, asr fp
    9634:	00274410 	eoreq	r4, r7, r0, lsl r4
    9638:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9644:	26e00000 	strbtcs	r0, [r0], r0
    9648:	26ee1000 	strbtcs	r1, [lr], r0
    964c:	00011000 	andeq	r1, r1, r0
    9650:	00000053 	andeq	r0, r0, r3, asr r0
    9654:	00000000 	andeq	r0, r0, r0
    9658:	00253000 	eoreq	r3, r5, r0
    965c:	00253410 	eoreq	r3, r5, r0, lsl r4
    9660:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9664:	00253400 	eoreq	r3, r5, r0, lsl #8
    9668:	0025c810 	eoreq	ip, r5, r0, lsl r8
    966c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9670:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    967c:	00253000 	eoreq	r3, r5, r0
    9680:	00254a10 	eoreq	r4, r5, r0, lsl sl
    9684:	50000110 	andpl	r0, r0, r0, lsl r1
    9688:	1000254a 	andne	r2, r0, sl, asr #10
    968c:	100025c8 	andne	r2, r0, r8, asr #11
    9690:	00580001 	subseq	r0, r8, r1
	...
    969c:	30000000 	andcc	r0, r0, r0
    96a0:	48100025 	ldmdami	r0, {r0, r2, r5}
    96a4:	01100025 	tsteq	r0, r5, lsr #32
    96a8:	25485100 	strbcs	r5, [r8, #-256]	; 0xffffff00
    96ac:	25c81000 	strbcs	r1, [r8]
    96b0:	00011000 	andeq	r1, r1, r0
    96b4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    96c4:	00253000 	eoreq	r3, r5, r0
    96c8:	00254610 	eoreq	r4, r5, r0, lsl r6
    96cc:	52000110 	andpl	r0, r0, #16, 2
    96d0:	10002546 	andne	r2, r0, r6, asr #10
    96d4:	1000255a 	andne	r2, r0, sl, asr r5
    96d8:	5a570001 	bpl	15c96e4 <__RAM_SIZE+0x14c96e4>
    96dc:	66100025 	ldrvs	r0, [r0], -r5, lsr #32
    96e0:	07100025 	ldreq	r0, [r0, -r5, lsr #32]
    96e4:	80817200 	addhi	r7, r1, r0, lsl #4
    96e8:	9f7c8080 	svcls	0x007c8080
    96ec:	10002566 	andne	r2, r0, r6, ror #10
    96f0:	100025c8 	andne	r2, r0, r8, asr #11
    96f4:	01f30004 	mvnseq	r0, r4
    96f8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    9704:	25300000 	ldrcs	r0, [r0, #-0]!
    9708:	254d1000 	strbcs	r1, [sp, #-0]
    970c:	00011000 	andeq	r1, r1, r0
    9710:	00254d53 	eoreq	r4, r5, r3, asr sp
    9714:	0025c810 	eoreq	ip, r5, r0, lsl r8
    9718:	59000110 	stmdbpl	r0, {r4, r8}
	...
    9728:	10002530 	andne	r2, r0, r0, lsr r5
    972c:	10002590 	mulne	r0, r0, r5
    9730:	00910002 	addseq	r0, r1, r2
    9734:	10002590 	mulne	r0, r0, r5
    9738:	100025a8 	andne	r2, r0, r8, lsr #11
    973c:	00560001 	subseq	r0, r6, r1
	...
    9748:	00255a00 	eoreq	r5, r5, r0, lsl #20
    974c:	0025c810 	eoreq	ip, r5, r0, lsl r8
    9750:	57000110 	smladpl	r0, r0, r1, r0
	...
    975c:	25660000 	strbcs	r0, [r6, #-0]!
    9760:	258a1000 	strcs	r1, [sl]
    9764:	00011000 	andeq	r1, r1, r0
    9768:	0000005c 	andeq	r0, r0, ip, asr r0
    976c:	00000000 	andeq	r0, r0, r0
    9770:	0028e800 	eoreq	lr, r8, r0, lsl #16
    9774:	0028ea10 	eoreq	lr, r8, r0, lsl sl
    9778:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    977c:	0028ea00 	eoreq	lr, r8, r0, lsl #20
    9780:	0028ec10 	eoreq	lr, r8, r0, lsl ip
    9784:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9788:	0028ec08 	eoreq	lr, r8, r8, lsl #24
    978c:	00290210 	eoreq	r0, r9, r0, lsl r2
    9790:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9794:	00290210 	eoreq	r0, r9, r0, lsl r2
    9798:	00290410 	eoreq	r0, r9, r0, lsl r4
    979c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    97a0:	00290408 	eoreq	r0, r9, r8, lsl #8
    97a4:	00290a10 	eoreq	r0, r9, r0, lsl sl
    97a8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    97ac:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    97b8:	0028e800 	eoreq	lr, r8, r0, lsl #16
    97bc:	0028f710 	eoreq	pc, r8, r0, lsl r7	; <UNPREDICTABLE>
    97c0:	50000110 	andpl	r0, r0, r0, lsl r1
    97c4:	100028f7 	strdne	r2, [r0], -r7
    97c8:	1000290a 	andne	r2, r0, sl, lsl #18
    97cc:	01f30004 	mvnseq	r0, r4
    97d0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    97dc:	28e80000 	stmiacs	r8!, {}^	; <UNPREDICTABLE>
    97e0:	28f71000 	ldmcs	r7!, {ip}^
    97e4:	00011000 	andeq	r1, r1, r0
    97e8:	0028f751 	eoreq	pc, r8, r1, asr r7	; <UNPREDICTABLE>
    97ec:	00290a10 	eoreq	r0, r9, r0, lsl sl
    97f0:	f3000410 	vqshl.u8	d0, d0, d0
    97f4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    9800:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    9804:	f7100028 			; <UNDEFINED> instruction: 0xf7100028
    9808:	01100028 	tsteq	r0, r8, lsr #32
    980c:	28f75200 	ldmcs	r7!, {r9, ip, lr}^
    9810:	290a1000 	stmdbcs	sl, {ip}
    9814:	00041000 	andeq	r1, r4, r0
    9818:	9f5201f3 	svcls	0x005201f3
	...
    9828:	100028e8 	andne	r2, r0, r8, ror #17
    982c:	100028f7 	strdne	r2, [r0], -r7
    9830:	f7530001 			; <UNDEFINED> instruction: 0xf7530001
    9834:	0a100028 	beq	4098dc <__RAM_SIZE+0x3098dc>
    9838:	04100029 	ldreq	r0, [r0], #-41	; 0xffffffd7
    983c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    9840:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    984c:	0028e800 	eoreq	lr, r8, r0, lsl #16
    9850:	00290410 	eoreq	r0, r9, r0, lsl r4
    9854:	91000210 	tstls	r0, r0, lsl r2
    9858:	00290400 	eoreq	r0, r9, r0, lsl #8
    985c:	00290a10 	eoreq	r0, r9, r0, lsl sl
    9860:	91000210 	tstls	r0, r0, lsl r2
	...
    9870:	0028e800 	eoreq	lr, r8, r0, lsl #16
    9874:	00290410 	eoreq	r0, r9, r0, lsl r4
    9878:	91000210 	tstls	r0, r0, lsl r2
    987c:	00290404 	eoreq	r0, r9, r4, lsl #8
    9880:	00290a10 	eoreq	r0, r9, r0, lsl sl
    9884:	91000210 	tstls	r0, r0, lsl r2
    9888:	00000004 	andeq	r0, r0, r4
	...
    9894:	0028f800 	eoreq	pc, r8, r0, lsl #16
    9898:	0028fd10 	eoreq	pc, r8, r0, lsl sp	; <UNPREDICTABLE>
    989c:	50000110 	andpl	r0, r0, r0, lsl r1
    98a0:	10002904 	andne	r2, r0, r4, lsl #18
    98a4:	10002908 	andne	r2, r0, r8, lsl #18
    98a8:	00500001 	subseq	r0, r0, r1
    98ac:	00000000 	andeq	r0, r0, r0
    98b0:	01000000 	mrseq	r0, (UNDEF: 0)
    98b4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    98b8:	00100028 	andseq	r0, r0, r8, lsr #32
    98bc:	02100029 	andseq	r0, r0, #41	; 0x29
    98c0:	089f3100 	ldmeq	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    98c4:	0a100029 	beq	409970 <__RAM_SIZE+0x309970>
    98c8:	03100029 	tsteq	r0, #41	; 0x29
    98cc:	9fff0900 	svcls	0x00ff0900
	...
    98d8:	10002744 	andne	r2, r0, r4, asr #14
    98dc:	10002748 	andne	r2, r0, r8, asr #14
    98e0:	007d0002 	rsbseq	r0, sp, r2
    98e4:	10002748 	andne	r2, r0, r8, asr #14
    98e8:	1000274a 	andne	r2, r0, sl, asr #14
    98ec:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    98f0:	1000274a 	andne	r2, r0, sl, asr #14
    98f4:	10002796 	mulne	r0, r6, r7
    98f8:	307d0002 	rsbscc	r0, sp, r2
    98fc:	10002796 	mulne	r0, r6, r7
    9900:	1000279a 	mulne	r0, sl, r7
    9904:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    9908:	1000279a 	mulne	r0, sl, r7
    990c:	100027a6 	andne	r2, r0, r6, lsr #15
    9910:	307d0002 	rsbscc	r0, sp, r2
	...
    9920:	10002744 	andne	r2, r0, r4, asr #14
    9924:	10002754 	andne	r2, r0, r4, asr r7
    9928:	54500001 	ldrbpl	r0, [r0], #-1
    992c:	a6100027 	ldrge	r0, [r0], -r7, lsr #32
    9930:	01100027 	tsteq	r0, r7, lsr #32
    9934:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    9940:	27440000 	strbcs	r0, [r4, -r0]
    9944:	27571000 	ldrbcs	r1, [r7, -r0]
    9948:	00011000 	andeq	r1, r1, r0
    994c:	00275751 	eoreq	r5, r7, r1, asr r7
    9950:	0027a610 	eoreq	sl, r7, r0, lsl r6
    9954:	57000110 	smladpl	r0, r0, r1, r0
	...
    9964:	10002744 	andne	r2, r0, r4, asr #14
    9968:	10002757 	andne	r2, r0, r7, asr r7
    996c:	57520001 	ldrbpl	r0, [r2, -r1]
    9970:	a6100027 	ldrge	r0, [r0], -r7, lsr #32
    9974:	01100027 	tsteq	r0, r7, lsr #32
    9978:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9984:	27440000 	strbcs	r0, [r4, -r0]
    9988:	27571000 	ldrbcs	r1, [r7, -r0]
    998c:	00011000 	andeq	r1, r1, r0
    9990:	00275753 	eoreq	r5, r7, r3, asr r7
    9994:	0027a610 	eoreq	sl, r7, r0, lsl r6
    9998:	58000110 	stmdapl	r0, {r4, r8}
	...
    99a8:	10002744 	andne	r2, r0, r4, asr #14
    99ac:	1000279a 	mulne	r0, sl, r7
    99b0:	00910002 	addseq	r0, r1, r2
    99b4:	1000279a 	mulne	r0, sl, r7
    99b8:	100027a6 	andne	r2, r0, r6, lsr #15
    99bc:	00910002 	addseq	r0, r1, r2
	...
    99cc:	10002744 	andne	r2, r0, r4, asr #14
    99d0:	1000279a 	mulne	r0, sl, r7
    99d4:	04910002 	ldreq	r0, [r1], #2
    99d8:	1000279a 	mulne	r0, sl, r7
    99dc:	100027a6 	andne	r2, r0, r6, lsr #15
    99e0:	04910002 	ldreq	r0, [r1], #2
	...
    99f4:	10002762 	andne	r2, r0, r2, ror #14
    99f8:	1000276d 	andne	r2, r0, sp, ror #14
    99fc:	6d500001 	ldclvs	0, cr0, [r0, #-4]
    9a00:	92100027 	andsls	r0, r0, #39	; 0x27
    9a04:	01100027 	tsteq	r0, r7, lsr #32
    9a08:	279a5400 	ldrcs	r5, [sl, r0, lsl #8]
    9a0c:	279c1000 	ldrcs	r1, [ip, r0]
    9a10:	00011000 	andeq	r1, r1, r0
    9a14:	00279c50 	eoreq	r9, r7, r0, asr ip
    9a18:	0027a210 	eoreq	sl, r7, r0, lsl r2
    9a1c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9a2c:	27580000 	ldrbcs	r0, [r8, -r0]
    9a30:	275e1000 	ldrbcs	r1, [lr, -r0]
    9a34:	00011000 	andeq	r1, r1, r0
    9a38:	00275e50 	eoreq	r5, r7, r0, asr lr
    9a3c:	0027a210 	eoreq	sl, r7, r0, lsl r2
    9a40:	59000110 	stmdbpl	r0, {r4, r8}
    9a44:	100027a2 	andne	r2, r0, r2, lsr #15
    9a48:	100027a6 	andne	r2, r0, r6, lsr #15
    9a4c:	00500001 	subseq	r0, r0, r1
    9a50:	00000000 	andeq	r0, r0, r0
    9a54:	c0000000 	andgt	r0, r0, r0
    9a58:	c2100028 	andsgt	r0, r0, #40	; 0x28
    9a5c:	02100028 	andseq	r0, r0, #40	; 0x28
    9a60:	c2007d00 	andgt	r7, r0, #0, 26
    9a64:	c4100028 	ldrgt	r0, [r0], #-40	; 0xffffffd8
    9a68:	02100028 	andseq	r0, r0, #40	; 0x28
    9a6c:	c4087d00 	strgt	r7, [r8], #-3328	; 0xfffff300
    9a70:	e6100028 	ldr	r0, [r0], -r8, lsr #32
    9a74:	02100028 	andseq	r0, r0, #40	; 0x28
    9a78:	e6207d00 	strt	r7, [r0], -r0, lsl #26
    9a7c:	e8100028 	ldmda	r0, {r3, r5}
    9a80:	02100028 	andseq	r0, r0, #40	; 0x28
    9a84:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    9a90:	c0000000 	andgt	r0, r0, r0
    9a94:	db100028 	blle	409b3c <__RAM_SIZE+0x309b3c>
    9a98:	01100028 	tsteq	r0, r8, lsr #32
    9a9c:	28db5000 	ldmcs	fp, {ip, lr}^
    9aa0:	28e81000 	stmiacs	r8!, {ip}^
    9aa4:	00041000 	andeq	r1, r4, r0
    9aa8:	9f5001f3 	svcls	0x005001f3
	...
    9ab8:	100028c0 	andne	r2, r0, r0, asr #17
    9abc:	100028db 	ldrdne	r2, [r0], -fp
    9ac0:	db510001 	blle	1449acc <__RAM_SIZE+0x1349acc>
    9ac4:	e8100028 	ldmda	r0, {r3, r5}
    9ac8:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    9acc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9ad0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9adc:	0028c000 	eoreq	ip, r8, r0
    9ae0:	0028db10 	eoreq	sp, r8, r0, lsl fp
    9ae4:	52000110 	andpl	r0, r0, #16, 2
    9ae8:	100028db 	ldrdne	r2, [r0], -fp
    9aec:	100028e8 	andne	r2, r0, r8, ror #17
    9af0:	01f30004 	mvnseq	r0, r4
    9af4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    9b00:	28c00000 	stmiacs	r0, {}^	; <UNPREDICTABLE>
    9b04:	28db1000 	ldmcs	fp, {ip}^
    9b08:	00011000 	andeq	r1, r1, r0
    9b0c:	0028db53 	eoreq	sp, r8, r3, asr fp
    9b10:	0028e810 	eoreq	lr, r8, r0, lsl r8
    9b14:	f3000410 	vqshl.u8	d0, d0, d0
    9b18:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    9b24:	0028dc00 	eoreq	sp, r8, r0, lsl #24
    9b28:	0028e110 	eoreq	lr, r8, r0, lsl r1
    9b2c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9b38:	100025c8 	andne	r2, r0, r8, asr #11
    9b3c:	100025cc 	andne	r2, r0, ip, asr #11
    9b40:	007d0002 	rsbseq	r0, sp, r2
    9b44:	100025cc 	andne	r2, r0, ip, asr #11
    9b48:	100025ce 	andne	r2, r0, lr, asr #11
    9b4c:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    9b50:	100025ce 	andne	r2, r0, lr, asr #11
    9b54:	1000260e 	andne	r2, r0, lr, lsl #12
    9b58:	307d0002 	rsbscc	r0, sp, r2
    9b5c:	1000260e 	andne	r2, r0, lr, lsl #12
    9b60:	10002612 	andne	r2, r0, r2, lsl r6
    9b64:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    9b68:	10002612 	andne	r2, r0, r2, lsl r6
    9b6c:	1000261a 	andne	r2, r0, sl, lsl r6
    9b70:	307d0002 	rsbscc	r0, sp, r2
	...
    9b88:	25c80000 	strbcs	r0, [r8]
    9b8c:	25e41000 	strbcs	r1, [r4, #0]!
    9b90:	00011000 	andeq	r1, r1, r0
    9b94:	0025e450 	eoreq	lr, r5, r0, asr r4
    9b98:	00260c10 	eoreq	r0, r6, r0, lsl ip
    9b9c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9ba0:	1000260c 	andne	r2, r0, ip, lsl #12
    9ba4:	10002612 	andne	r2, r0, r2, lsl r6
    9ba8:	01f30004 	mvnseq	r0, r4
    9bac:	26129f50 	ssaxcs	r9, r2, r0
    9bb0:	26141000 	ldrcs	r1, [r4], -r0
    9bb4:	00011000 	andeq	r1, r1, r0
    9bb8:	00261450 	eoreq	r1, r6, r0, asr r4
    9bbc:	00261610 	eoreq	r1, r6, r0, lsl r6
    9bc0:	f3000410 	vqshl.u8	d0, d0, d0
    9bc4:	169f5001 	ldrne	r5, [pc], r1
    9bc8:	18100026 	ldmdane	r0, {r1, r2, r5}
    9bcc:	01100026 	tsteq	r0, r6, lsr #32
    9bd0:	26185000 	ldrcs	r5, [r8], -r0
    9bd4:	261a1000 	ldrcs	r1, [sl], -r0
    9bd8:	00011000 	andeq	r1, r1, r0
    9bdc:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9bec:	0025c800 	eoreq	ip, r5, r0, lsl #16
    9bf0:	0025e210 	eoreq	lr, r5, r0, lsl r2
    9bf4:	51000110 	tstpl	r0, r0, lsl r1
    9bf8:	100025e2 	andne	r2, r0, r2, ror #11
    9bfc:	1000260c 	andne	r2, r0, ip, lsl #12
    9c00:	0c590001 	mrrceq	0, 0, r0, r9, cr1
    9c04:	12100026 	andsne	r0, r0, #38	; 0x26
    9c08:	04100026 	ldreq	r0, [r0], #-38	; 0xffffffda
    9c0c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9c10:	0026129f 	mlaeq	r6, pc, r2, r1	; <UNPREDICTABLE>
    9c14:	00261a10 	eoreq	r1, r6, r0, lsl sl
    9c18:	51000110 	tstpl	r0, r0, lsl r1
	...
    9c2c:	100025c8 	andne	r2, r0, r8, asr #11
    9c30:	100025e0 	andne	r2, r0, r0, ror #11
    9c34:	e0520001 	subs	r0, r2, r1
    9c38:	0c100025 	ldceq	0, cr0, [r0], {37}	; 0x25
    9c3c:	01100026 	tsteq	r0, r6, lsr #32
    9c40:	260c5800 	strcs	r5, [ip], -r0, lsl #16
    9c44:	26121000 	ldrcs	r1, [r2], -r0
    9c48:	00041000 	andeq	r1, r4, r0
    9c4c:	9f5201f3 	svcls	0x005201f3
    9c50:	10002612 	andne	r2, r0, r2, lsl r6
    9c54:	1000261a 	andne	r2, r0, sl, lsl r6
    9c58:	00520001 	subseq	r0, r2, r1
	...
    9c68:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    9c6c:	e7100025 	ldr	r0, [r0, -r5, lsr #32]
    9c70:	01100025 	tsteq	r0, r5, lsr #32
    9c74:	25e75300 	strbcs	r5, [r7, #768]!	; 0x300
    9c78:	260c1000 	strcs	r1, [ip], -r0
    9c7c:	00011000 	andeq	r1, r1, r0
    9c80:	00260c57 	eoreq	r0, r6, r7, asr ip
    9c84:	00261210 	eoreq	r1, r6, r0, lsl r2
    9c88:	f3000410 	vqshl.u8	d0, d0, d0
    9c8c:	129f5301 	addsne	r5, pc, #67108864	; 0x4000000
    9c90:	1a100026 	bne	409d30 <__RAM_SIZE+0x309d30>
    9c94:	01100026 	tsteq	r0, r6, lsr #32
    9c98:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    9ca4:	25c80000 	strbcs	r0, [r8]
    9ca8:	26121000 	ldrcs	r1, [r2], -r0
    9cac:	00021000 	andeq	r1, r2, r0
    9cb0:	26120091 			; <UNDEFINED> instruction: 0x26120091
    9cb4:	261a1000 	ldrcs	r1, [sl], -r0
    9cb8:	00021000 	andeq	r1, r2, r0
    9cbc:	00000091 	muleq	r0, r1, r0
	...
    9cc8:	25c80000 	strbcs	r0, [r8]
    9ccc:	26121000 	ldrcs	r1, [r2], -r0
    9cd0:	00021000 	andeq	r1, r2, r0
    9cd4:	26120491 			; <UNDEFINED> instruction: 0x26120491
    9cd8:	261a1000 	ldrcs	r1, [sl], -r0
    9cdc:	00021000 	andeq	r1, r2, r0
    9ce0:	00000491 	muleq	r0, r1, r4
	...
    9cec:	25c80000 	strbcs	r0, [r8]
    9cf0:	26121000 	ldrcs	r1, [r2], -r0
    9cf4:	00021000 	andeq	r1, r2, r0
    9cf8:	26120891 			; <UNDEFINED> instruction: 0x26120891
    9cfc:	261a1000 	ldrcs	r1, [sl], -r0
    9d00:	00021000 	andeq	r1, r2, r0
    9d04:	00000891 	muleq	r0, r1, r8
	...
    9d10:	25c80000 	strbcs	r0, [r8]
    9d14:	26121000 	ldrcs	r1, [r2], -r0
    9d18:	00021000 	andeq	r1, r2, r0
    9d1c:	26120c91 			; <UNDEFINED> instruction: 0x26120c91
    9d20:	261a1000 	ldrcs	r1, [sl], -r0
    9d24:	00021000 	andeq	r1, r2, r0
    9d28:	00000c91 	muleq	r0, r1, ip
    9d2c:	00000000 	andeq	r0, r0, r0
    9d30:	00010000 	andeq	r0, r1, r0
    9d34:	25de0000 	ldrbcs	r0, [lr]
    9d38:	260c1000 	strcs	r1, [ip], -r0
    9d3c:	00011000 	andeq	r1, r1, r0
    9d40:	00261854 	eoreq	r1, r6, r4, asr r8
    9d44:	00261a10 	eoreq	r1, r6, r0, lsl sl
    9d48:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9d60:	00500001 	subseq	r0, r0, r1
    9d64:	00000000 	andeq	r0, r0, r0
    9d68:	04000000 	streq	r0, [r0], #-0
    9d6c:	5001f300 	andpl	pc, r1, r0, lsl #6
    9d70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9d80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9d8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9d90:	00000008 	andeq	r0, r0, r8
    9d94:	00000000 	andeq	r0, r0, r0
    9d98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9d9c:	00000018 	andeq	r0, r0, r8, lsl r0
    9da0:	00000000 	andeq	r0, r0, r0
    9da4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9da8:	00000008 	andeq	r0, r0, r8
	...
    9dbc:	01000000 	mrseq	r0, (UNDEF: 0)
    9dc0:	00005000 	andeq	r5, r0, r0
    9dc4:	00000000 	andeq	r0, r0, r0
    9dc8:	00020000 	andeq	r0, r2, r0
    9dcc:	00006c91 	muleq	r0, r1, ip
    9dd0:	00000000 	andeq	r0, r0, r0
    9dd4:	00040000 	andeq	r0, r4, r0
    9dd8:	9f5001f3 	svcls	0x005001f3
	...
    9df0:	00010000 	andeq	r0, r1, r0
    9df4:	00000051 	andeq	r0, r0, r1, asr r0
    9df8:	00000000 	andeq	r0, r0, r0
    9dfc:	91000200 	mrsls	r0, R8_usr
    9e00:	00000070 	andeq	r0, r0, r0, ror r0
    9e04:	00000000 	andeq	r0, r0, r0
    9e08:	f3000400 	vshl.u8	d0, d0, d0
    9e0c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    9e24:	52000100 	andpl	r0, r0, #0, 2
	...
    9e30:	00540001 	subseq	r0, r4, r1
    9e34:	00000000 	andeq	r0, r0, r0
    9e38:	04000000 	streq	r0, [r0], #-0
    9e3c:	5201f300 	andpl	pc, r1, #0, 6
    9e40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9e54:	01000000 	mrseq	r0, (UNDEF: 0)
    9e58:	00005300 	andeq	r5, r0, r0, lsl #6
    9e5c:	00000000 	andeq	r0, r0, r0
    9e60:	00010000 	andeq	r0, r1, r0
    9e64:	00000052 	andeq	r0, r0, r2, asr r0
    9e68:	00000000 	andeq	r0, r0, r0
    9e6c:	f3000400 	vshl.u8	d0, d0, d0
    9e70:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    9e84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9e98:	007d0002 	rsbseq	r0, sp, r2
	...
    9ea4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9eb0:	187d0002 	ldmdane	sp!, {r1}^
	...
    9ebc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9ed4:	00010000 	andeq	r0, r1, r0
    9ed8:	00000050 	andeq	r0, r0, r0, asr r0
    9edc:	00000000 	andeq	r0, r0, r0
    9ee0:	91000200 	mrsls	r0, R8_usr
    9ee4:	0000006c 	andeq	r0, r0, ip, rrx
    9ee8:	00000000 	andeq	r0, r0, r0
    9eec:	f3000400 	vshl.u8	d0, d0, d0
    9ef0:	009f5001 	addseq	r5, pc, r1
	...
    9f08:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    9f14:	70910002 	addsvc	r0, r1, r2
	...
    9f20:	01f30004 	mvnseq	r0, r4
    9f24:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    9f3c:	00520001 	subseq	r0, r2, r1
    9f40:	00000000 	andeq	r0, r0, r0
    9f44:	01000000 	mrseq	r0, (UNDEF: 0)
    9f48:	00005400 	andeq	r5, r0, r0, lsl #8
    9f4c:	00000000 	andeq	r0, r0, r0
    9f50:	00040000 	andeq	r0, r4, r0
    9f54:	9f5201f3 	svcls	0x005201f3
	...
    9f6c:	00010000 	andeq	r0, r1, r0
    9f70:	00000053 	andeq	r0, r0, r3, asr r0
    9f74:	00000000 	andeq	r0, r0, r0
    9f78:	52000100 	andpl	r0, r0, #0, 2
	...
    9f84:	01f30004 	mvnseq	r0, r4
    9f88:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    9f9c:	00500001 	subseq	r0, r0, r1
	...
    9fac:	02000000 	andeq	r0, r0, #0
    9fb0:	00007d00 	andeq	r7, r0, r0, lsl #26
    9fb4:	00000000 	andeq	r0, r0, r0
    9fb8:	02000000 	andeq	r0, r0, #0
    9fbc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    9fd0:	01000000 	mrseq	r0, (UNDEF: 0)
    9fd4:	00005000 	andeq	r5, r0, r0
    9fd8:	00000000 	andeq	r0, r0, r0
    9fdc:	00010000 	andeq	r0, r1, r0
    9fe0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9ff4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a000:	00550001 	subseq	r0, r5, r1
    a004:	00000000 	andeq	r0, r0, r0
    a008:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a014:	01000000 	mrseq	r0, (UNDEF: 0)
    a018:	00005000 	andeq	r5, r0, r0
    a01c:	00000000 	andeq	r0, r0, r0
    a020:	00010000 	andeq	r0, r1, r0
    a024:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a034:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a040:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a044:	00000008 	andeq	r0, r0, r8
	...
    a058:	01000000 	mrseq	r0, (UNDEF: 0)
    a05c:	00005000 	andeq	r5, r0, r0
    a060:	00000000 	andeq	r0, r0, r0
    a064:	00010000 	andeq	r0, r1, r0
    a068:	00000054 	andeq	r0, r0, r4, asr r0
    a06c:	00000000 	andeq	r0, r0, r0
    a070:	f3000400 	vshl.u8	d0, d0, d0
    a074:	009f5001 	addseq	r5, pc, r1
    a078:	00000000 	andeq	r0, r0, r0
    a07c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a08c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a098:	00540001 	subseq	r0, r4, r1
    a09c:	00000000 	andeq	r0, r0, r0
    a0a0:	04000000 	streq	r0, [r0], #-0
    a0a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    a0a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a0b8:	01000000 	mrseq	r0, (UNDEF: 0)
    a0bc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a0cc:	00020000 	andeq	r0, r2, r0
    a0d0:	0000007d 	andeq	r0, r0, sp, ror r0
    a0d4:	00000000 	andeq	r0, r0, r0
    a0d8:	00020000 	andeq	r0, r2, r0
    a0dc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    a0f8:	00500001 	subseq	r0, r0, r1
    a0fc:	00000000 	andeq	r0, r0, r0
    a100:	01000000 	mrseq	r0, (UNDEF: 0)
    a104:	00005400 	andeq	r5, r0, r0, lsl #8
    a108:	00000000 	andeq	r0, r0, r0
    a10c:	00040000 	andeq	r0, r4, r0
    a110:	9f5001f3 	svcls	0x005001f3
	...
    a11c:	00540001 	subseq	r0, r4, r1
    a120:	00000000 	andeq	r0, r0, r0
    a124:	04000000 	streq	r0, [r0], #-0
    a128:	5001f300 	andpl	pc, r1, r0, lsl #6
    a12c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a13c:	01000000 	mrseq	r0, (UNDEF: 0)
    a140:	00005400 	andeq	r5, r0, r0, lsl #8
    a144:	00000000 	andeq	r0, r0, r0
    a148:	00020000 	andeq	r0, r2, r0
	...
    a15c:	00500001 	subseq	r0, r0, r1
    a160:	00000000 	andeq	r0, r0, r0
    a164:	01000000 	mrseq	r0, (UNDEF: 0)
    a168:	00005400 	andeq	r5, r0, r0, lsl #8
    a16c:	00000000 	andeq	r0, r0, r0
    a170:	00040000 	andeq	r0, r4, r0
    a174:	9f5001f3 	svcls	0x005001f3
	...
    a180:	00540001 	subseq	r0, r4, r1
    a184:	00000000 	andeq	r0, r0, r0
    a188:	04000000 	streq	r0, [r0], #-0
    a18c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a190:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a194:	00000000 	andeq	r0, r0, r0
    a198:	00346400 	eorseq	r6, r4, r0, lsl #8
    a19c:	00346610 	eorseq	r6, r4, r0, lsl r6
    a1a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1a4:	00346600 	eorseq	r6, r4, r0, lsl #12
    a1a8:	00346810 	eorseq	r6, r4, r0, lsl r8
    a1ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1b0:	0034680c 	eorseq	r6, r4, ip, lsl #16
    a1b4:	00347810 	eorseq	r7, r4, r0, lsl r8
    a1b8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1bc:	00347818 	eorseq	r7, r4, r8, lsl r8
    a1c0:	00347a10 	eorseq	r7, r4, r0, lsl sl
    a1c4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1c8:	00347a0c 	eorseq	r7, r4, ip, lsl #20
    a1cc:	0034c410 	eorseq	ip, r4, r0, lsl r4
    a1d0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1d4:	00000018 	andeq	r0, r0, r8, lsl r0
    a1d8:	00000000 	andeq	r0, r0, r0
    a1dc:	00329000 	eorseq	r9, r2, r0
    a1e0:	00329210 	eorseq	r9, r2, r0, lsl r2
    a1e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1e8:	00329200 	eorseq	r9, r2, r0, lsl #4
    a1ec:	0032c010 	eorseq	ip, r2, r0, lsl r0
    a1f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a1f4:	00000008 	andeq	r0, r0, r8
    a1f8:	00000000 	andeq	r0, r0, r0
    a1fc:	96000000 	strls	r0, [r0], -r0
    a200:	9f100032 	svcls	0x00100032
    a204:	02100032 	andseq	r0, r0, #50	; 0x32
    a208:	00007300 	andeq	r7, r0, r0, lsl #6
    a20c:	00000000 	andeq	r0, r0, r0
    a210:	01000000 	mrseq	r0, (UNDEF: 0)
    a214:	aa000000 	bge	a21c <__HEAP_SIZE+0x921c>
    a218:	b6100032 			; <UNDEFINED> instruction: 0xb6100032
    a21c:	01100032 	tsteq	r0, r2, lsr r0
    a220:	32b65300 	adcscc	r5, r6, #0, 6
    a224:	32c01000 	sbccc	r1, r0, #0
    a228:	00051000 	andeq	r1, r5, r0
    a22c:	008bf803 	addeq	pc, fp, r3, lsl #16
    a230:	00000038 	andeq	r0, r0, r8, lsr r0
    a234:	00000000 	andeq	r0, r0, r0
    a238:	00335400 	eorseq	r5, r3, r0, lsl #8
    a23c:	00335610 	eorseq	r5, r3, r0, lsl r6
    a240:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a244:	00335600 	eorseq	r5, r3, r0, lsl #12
    a248:	00335810 	eorseq	r5, r3, r0, lsl r8
    a24c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a250:	0033580c 	eorseq	r5, r3, ip, lsl #16
    a254:	00344610 	eorseq	r4, r4, r0, lsl r6
    a258:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a25c:	00344628 	eorseq	r4, r4, r8, lsr #12
    a260:	00344c10 	eorseq	r4, r4, r0, lsl ip
    a264:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a268:	0000000c 	andeq	r0, r0, ip
    a26c:	00000000 	andeq	r0, r0, r0
    a270:	8c000000 	stchi	0, cr0, [r0], {-0}
    a274:	44100033 	ldrmi	r0, [r0], #-51	; 0xffffffcd
    a278:	01100034 	tsteq	r0, r4, lsr r0
    a27c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a290:	339e0000 	orrscc	r0, lr, #0
    a294:	33ca1000 	biccc	r1, sl, #0
    a298:	00011000 	andeq	r1, r1, r0
    a29c:	0033ca50 	eorseq	ip, r3, r0, asr sl
    a2a0:	0033fc10 	eorseq	pc, r3, r0, lsl ip	; <UNPREDICTABLE>
    a2a4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    a2a8:	100033fc 	strdne	r3, [r0], -ip
    a2ac:	10003422 	andne	r3, r0, r2, lsr #8
    a2b0:	22500001 	subscs	r0, r0, #1
    a2b4:	28100034 	ldmdacs	r0, {r2, r4, r5}
    a2b8:	01100034 	tsteq	r0, r4, lsr r0
    a2bc:	34285500 	strtcc	r5, [r8], #-1280	; 0xfffffb00
    a2c0:	343e1000 	ldrtcc	r1, [lr], #-0
    a2c4:	00011000 	andeq	r1, r1, r0
    a2c8:	00343e50 	eorseq	r3, r4, r0, asr lr
    a2cc:	00344410 	eorseq	r4, r4, r0, lsl r4
    a2d0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    a2dc:	33800001 	orrcc	r0, r0, #1
    a2e0:	338a1000 	orrcc	r1, sl, #0
    a2e4:	00031000 	andeq	r1, r3, r0
    a2e8:	009f6491 	umullseq	r6, pc, r1, r4	; <UNPREDICTABLE>
    a2ec:	00000000 	andeq	r0, r0, r0
    a2f0:	e0000000 	and	r0, r0, r0
    a2f4:	e2100031 	ands	r0, r0, #49	; 0x31
    a2f8:	02100031 	andseq	r0, r0, #49	; 0x31
    a2fc:	e2007d00 	and	r7, r0, #0, 26
    a300:	28100031 	ldmdacs	r0, {r0, r4, r5}
    a304:	02100032 	andseq	r0, r0, #50	; 0x32
    a308:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    a324:	e0000000 	and	r0, r0, r0
    a328:	f4100031 			; <UNDEFINED> instruction: 0xf4100031
    a32c:	01100031 	tsteq	r0, r1, lsr r0
    a330:	31f45000 	mvnscc	r5, r0
    a334:	31f61000 	mvnscc	r1, r0
    a338:	00041000 	andeq	r1, r4, r0
    a33c:	9f5001f3 	svcls	0x005001f3
    a340:	100031f6 	strdne	r3, [r0], -r6
    a344:	100031fc 	strdne	r3, [r0], -ip
    a348:	fc500001 	mrrc2	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    a34c:	ff100031 			; <UNDEFINED> instruction: 0xff100031
    a350:	03100031 	tsteq	r0, #49	; 0x31
    a354:	9f7c7100 	svcls	0x007c7100
    a358:	100031ff 	strdne	r3, [r0], -pc	; <UNPREDICTABLE>
    a35c:	10003204 	andne	r3, r0, r4, lsl #4
    a360:	01f30004 	mvnseq	r0, r4
    a364:	32049f50 	andcc	r9, r4, #80, 30	; 0x140
    a368:	32121000 	andscc	r1, r2, #0
    a36c:	00011000 	andeq	r1, r1, r0
    a370:	00321250 	eorseq	r1, r2, r0, asr r2
    a374:	00321510 	eorseq	r1, r2, r0, lsl r5
    a378:	71000310 	tstvc	r0, r0, lsl r3
    a37c:	32159f7c 	andscc	r9, r5, #124, 30	; 0x1f0
    a380:	321a1000 	andscc	r1, sl, #0
    a384:	00041000 	andeq	r1, r4, r0
    a388:	9f5001f3 	svcls	0x005001f3
    a38c:	1000321a 	andne	r3, r0, sl, lsl r2
    a390:	1000321c 	andne	r3, r0, ip, lsl r2
    a394:	1c500001 	mrrcne	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    a398:	28100032 	ldmdacs	r0, {r1, r4, r5}
    a39c:	04100032 	ldreq	r0, [r0], #-50	; 0xffffffce
    a3a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    a3a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a3c0:	e0000000 	and	r0, r0, r0
    a3c4:	f4100031 			; <UNDEFINED> instruction: 0xf4100031
    a3c8:	01100031 	tsteq	r0, r1, lsr r0
    a3cc:	31f45100 	mvnscc	r5, r0, lsl #2
    a3d0:	31f61000 	mvnscc	r1, r0
    a3d4:	00041000 	andeq	r1, r4, r0
    a3d8:	9f5101f3 	svcls	0x005101f3
    a3dc:	100031f6 	strdne	r3, [r0], -r6
    a3e0:	100031f8 	strdne	r3, [r0], -r8
    a3e4:	f8510001 			; <UNDEFINED> instruction: 0xf8510001
    a3e8:	fc100031 	ldc2	0, cr0, [r0], {49}	; 0x31
    a3ec:	02100031 	andseq	r0, r0, #49	; 0x31
    a3f0:	fc047000 	stc2	0, cr7, [r4], {-0}
    a3f4:	ff100031 			; <UNDEFINED> instruction: 0xff100031
    a3f8:	02100031 	andseq	r0, r0, #49	; 0x31
    a3fc:	ff007100 			; <UNDEFINED> instruction: 0xff007100
    a400:	04100031 	ldreq	r0, [r0], #-49	; 0xffffffcf
    a404:	04100032 	ldreq	r0, [r0], #-50	; 0xffffffce
    a408:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    a40c:	0032049f 	mlaseq	r2, pc, r4, r0	; <UNPREDICTABLE>
    a410:	00320e10 	eorseq	r0, r2, r0, lsl lr
    a414:	51000110 	tstpl	r0, r0, lsl r1
    a418:	1000320e 	andne	r3, r0, lr, lsl #4
    a41c:	10003212 	andne	r3, r0, r2, lsl r2
    a420:	04700002 	ldrbteq	r0, [r0], #-2
    a424:	10003212 	andne	r3, r0, r2, lsl r2
    a428:	10003215 	andne	r3, r0, r5, lsl r2
    a42c:	00710002 	rsbseq	r0, r1, r2
    a430:	10003215 	andne	r3, r0, r5, lsl r2
    a434:	1000321a 	andne	r3, r0, sl, lsl r2
    a438:	01f30004 	mvnseq	r0, r4
    a43c:	321a9f51 	andscc	r9, sl, #324	; 0x144
    a440:	32281000 	eorcc	r1, r8, #0
    a444:	00011000 	andeq	r1, r1, r0
    a448:	00000051 	andeq	r0, r0, r1, asr r0
	...
    a458:	e0000000 	and	r0, r0, r0
    a45c:	ec100031 	ldc	0, cr0, [r0], {49}	; 0x31
    a460:	01100031 	tsteq	r0, r1, lsr r0
    a464:	31ec5200 	mvncc	r5, r0, lsl #4
    a468:	32041000 	andcc	r1, r4, #0
    a46c:	00041000 	andeq	r1, r4, r0
    a470:	9f5201f3 	svcls	0x005201f3
    a474:	10003204 	andne	r3, r0, r4, lsl #4
    a478:	10003215 	andne	r3, r0, r5, lsl r2
    a47c:	15520001 	ldrbne	r0, [r2, #-1]
    a480:	1a100032 	bne	40a550 <__RAM_SIZE+0x30a550>
    a484:	04100032 	ldreq	r0, [r0], #-50	; 0xffffffce
    a488:	5201f300 	andpl	pc, r1, #0, 6
    a48c:	00321a9f 	mlaseq	r2, pc, sl, r1	; <UNPREDICTABLE>
    a490:	00322810 	eorseq	r2, r2, r0, lsl r8
    a494:	52000110 	andpl	r0, r0, #16, 2
	...
    a4a8:	31e00000 	mvncc	r0, r0
    a4ac:	31ee1000 	mvncc	r1, r0
    a4b0:	00011000 	andeq	r1, r1, r0
    a4b4:	0031ee53 	eorseq	lr, r1, r3, asr lr
    a4b8:	00320410 	eorseq	r0, r2, r0, lsl r4
    a4bc:	f3000410 	vqshl.u8	d0, d0, d0
    a4c0:	049f5301 	ldreq	r5, [pc], #769	; a4c8 <__HEAP_SIZE+0x94c8>
    a4c4:	10100032 	andsne	r0, r0, r2, lsr r0
    a4c8:	01100032 	tsteq	r0, r2, lsr r0
    a4cc:	32105300 	andscc	r5, r0, #0, 6
    a4d0:	321a1000 	andscc	r1, sl, #0
    a4d4:	00041000 	andeq	r1, r4, r0
    a4d8:	9f5301f3 	svcls	0x005301f3
    a4dc:	1000321a 	andne	r3, r0, sl, lsl r2
    a4e0:	10003228 	andne	r3, r0, r8, lsr #4
    a4e4:	00530001 	subseq	r0, r3, r1
    a4e8:	00000000 	andeq	r0, r0, r0
    a4ec:	01000000 	mrseq	r0, (UNDEF: 0)
    a4f0:	00000000 	andeq	r0, r0, r0
    a4f4:	0031e200 	eorseq	lr, r1, r0, lsl #4
    a4f8:	0031f410 	eorseq	pc, r1, r0, lsl r4	; <UNPREDICTABLE>
    a4fc:	30000210 	andcc	r0, r0, r0, lsl r2
    a500:	0031f69f 	mlaseq	r1, pc, r6, pc	; <UNPREDICTABLE>
    a504:	00321c10 	eorseq	r1, r2, r0, lsl ip
    a508:	30000210 	andcc	r0, r0, r0, lsl r2
    a50c:	00321c9f 	mlaseq	r2, pc, ip, r1	; <UNPREDICTABLE>
    a510:	00322810 	eorseq	r2, r2, r0, lsl r8
    a514:	31000210 	tstcc	r0, r0, lsl r2
    a518:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a51c:	00000000 	andeq	r0, r0, r0
    a520:	0032c000 	eorseq	ip, r2, r0
    a524:	0032c210 	eorseq	ip, r2, r0, lsl r2
    a528:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a52c:	0032c200 	eorseq	ip, r2, r0, lsl #4
    a530:	0032ec10 	eorseq	lr, r2, r0, lsl ip
    a534:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a538:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    a544:	0032c000 	eorseq	ip, r2, r0
    a548:	0032c710 	eorseq	ip, r2, r0, lsl r7
    a54c:	50000110 	andpl	r0, r0, r0, lsl r1
    a550:	100032c7 	andne	r3, r0, r7, asr #5
    a554:	100032ec 	andne	r3, r0, ip, ror #5
    a558:	00550001 	subseq	r0, r5, r1
	...
    a568:	ca000000 	bgt	a570 <__HEAP_SIZE+0x9570>
    a56c:	d6100032 			; <UNDEFINED> instruction: 0xd6100032
    a570:	01100032 	tsteq	r0, r2, lsr r0
    a574:	32d65000 	sbcscc	r5, r6, #0
    a578:	32de1000 	sbcscc	r1, lr, #0
    a57c:	00011000 	andeq	r1, r1, r0
    a580:	0032de54 	eorseq	sp, r2, r4, asr lr
    a584:	0032e110 	eorseq	lr, r2, r0, lsl r1
    a588:	50000110 	andpl	r0, r0, r0, lsl r1
    a58c:	100032e1 	andne	r3, r0, r1, ror #5
    a590:	100032ec 	andne	r3, r0, ip, ror #5
    a594:	00540001 	subseq	r0, r4, r1
	...
    a5a4:	c0000000 	andgt	r0, r0, r0
    a5a8:	d2100031 	andsle	r0, r0, #49	; 0x31
    a5ac:	01100031 	tsteq	r0, r1, lsr r0
    a5b0:	31d25000 	bicscc	r5, r2, r0
    a5b4:	31d41000 	bicscc	r1, r4, r0
    a5b8:	00041000 	andeq	r1, r4, r0
    a5bc:	9f5001f3 	svcls	0x005001f3
    a5c0:	100031d4 	ldrdne	r3, [r0], -r4
    a5c4:	100031da 	ldrdne	r3, [r0], -sl
    a5c8:	da500001 	ble	140a5d4 <__RAM_SIZE+0x130a5d4>
    a5cc:	e0100031 	ands	r0, r0, r1, lsr r0
    a5d0:	04100031 	ldreq	r0, [r0], #-49	; 0xffffffcf
    a5d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    a5d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a5e4:	0031d200 	eorseq	sp, r1, r0, lsl #4
    a5e8:	0031d410 	eorseq	sp, r1, r0, lsl r4
    a5ec:	50000110 	andpl	r0, r0, r0, lsl r1
    a5f0:	100031da 	ldrdne	r3, [r0], -sl
    a5f4:	100031e0 	andne	r3, r0, r0, ror #3
    a5f8:	9f300002 	svcls	0x00300002
	...
    a604:	100032ec 	andne	r3, r0, ip, ror #5
    a608:	100032ee 	andne	r3, r0, lr, ror #5
    a60c:	007d0002 	rsbseq	r0, sp, r2
    a610:	100032ee 	andne	r3, r0, lr, ror #5
    a614:	100032f0 	strdne	r3, [r0], -r0
    a618:	107d0002 	rsbsne	r0, sp, r2
    a61c:	100032f0 	strdne	r3, [r0], -r0
    a620:	1000332a 	andne	r3, r0, sl, lsr #6
    a624:	187d0002 	ldmdane	sp!, {r1}^
    a628:	1000332a 	andne	r3, r0, sl, lsr #6
    a62c:	1000332c 	andne	r3, r0, ip, lsr #6
    a630:	107d0002 	rsbsne	r0, sp, r2
    a634:	1000332c 	andne	r3, r0, ip, lsr #6
    a638:	10003354 	andne	r3, r0, r4, asr r3
    a63c:	187d0002 	ldmdane	sp!, {r1}^
	...
    a64c:	100032ec 	andne	r3, r0, ip, ror #5
    a650:	100032f7 	strdne	r3, [r0], -r7
    a654:	f7500001 			; <UNDEFINED> instruction: 0xf7500001
    a658:	54100032 	ldrpl	r0, [r0], #-50	; 0xffffffce
    a65c:	01100033 	tsteq	r0, r3, lsr r0
    a660:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    a670:	32ec0000 	rsccc	r0, ip, #0
    a674:	32f71000 	rscscc	r1, r7, #0
    a678:	00011000 	andeq	r1, r1, r0
    a67c:	0032f751 	eorseq	pc, r2, r1, asr r7	; <UNPREDICTABLE>
    a680:	00333c10 	eorseq	r3, r3, r0, lsl ip
    a684:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    a688:	1000333c 	andne	r3, r0, ip, lsr r3
    a68c:	1000333e 	andne	r3, r0, lr, lsr r3
    a690:	01f30004 	mvnseq	r0, r4
    a694:	333e9f51 	teqcc	lr, #324	; 0x144
    a698:	33541000 	cmpcc	r4, #0
    a69c:	00011000 	andeq	r1, r1, r0
    a6a0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a6b4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    a6b8:	1e100032 	mrcne	0, 0, r0, cr0, cr2, {1}
    a6bc:	01100033 	tsteq	r0, r3, lsr r0
    a6c0:	331e5000 	tstcc	lr, #0
    a6c4:	33281000 			; <UNDEFINED> instruction: 0x33281000
    a6c8:	00011000 	andeq	r1, r1, r0
    a6cc:	00332c55 	eorseq	r2, r3, r5, asr ip
    a6d0:	00332f10 	eorseq	r2, r3, r0, lsl pc
    a6d4:	50000110 	andpl	r0, r0, r0, lsl r1
    a6d8:	1000332f 	andne	r3, r0, pc, lsr #6
    a6dc:	1000333a 	andne	r3, r0, sl, lsr r3
    a6e0:	3a550001 	bcc	154a6ec <__RAM_SIZE+0x144a6ec>
    a6e4:	3e100033 	mrccc	0, 0, r0, cr0, cr3, {1}
    a6e8:	01100033 	tsteq	r0, r3, lsr r0
    a6ec:	333e5000 	teqcc	lr, #0
    a6f0:	33441000 	movtcc	r1, #16384	; 0x4000
    a6f4:	00011000 	andeq	r1, r1, r0
    a6f8:	00334455 	eorseq	r4, r3, r5, asr r4
    a6fc:	00334710 	eorseq	r4, r3, r0, lsl r7
    a700:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    a70c:	1000344c 	andne	r3, r0, ip, asr #8
    a710:	1000344e 	andne	r3, r0, lr, asr #8
    a714:	007d0002 	rsbseq	r0, sp, r2
    a718:	1000344e 	andne	r3, r0, lr, asr #8
    a71c:	10003450 	andne	r3, r0, r0, asr r4
    a720:	047d0002 	ldrbteq	r0, [sp], #-2
    a724:	10003450 	andne	r3, r0, r0, asr r4
    a728:	10003462 	andne	r3, r0, r2, ror #8
    a72c:	107d0002 	rsbsne	r0, sp, r2
	...
    a738:	00000001 	andeq	r0, r0, r1
    a73c:	1000344c 	andne	r3, r0, ip, asr #8
    a740:	10003450 	andne	r3, r0, r0, asr r4
    a744:	50500001 	subspl	r0, r0, r1
    a748:	62100034 	andsvs	r0, r0, #52	; 0x34
    a74c:	04100034 	ldreq	r0, [r0], #-52	; 0xffffffcc
    a750:	5001f300 	andpl	pc, r1, r0, lsl #6
    a754:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a758:	00000000 	andeq	r0, r0, r0
    a75c:	56000000 	strpl	r0, [r0], -r0
    a760:	5b100034 	blpl	40a838 <__RAM_SIZE+0x30a838>
    a764:	01100034 	tsteq	r0, r4, lsr r0
    a768:	00005000 	andeq	r5, r0, r0
    a76c:	00000000 	andeq	r0, r0, r0
    a770:	32500000 	subscc	r0, r0, #0
    a774:	32521000 	subscc	r1, r2, #0
    a778:	00021000 	andeq	r1, r2, r0
    a77c:	3252007d 	subscc	r0, r2, #125	; 0x7d
    a780:	32901000 	addscc	r1, r0, #0
    a784:	00021000 	andeq	r1, r2, r0
    a788:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    a794:	32500000 	subscc	r0, r0, #0
    a798:	32601000 	rsbcc	r1, r0, #0
    a79c:	00011000 	andeq	r1, r1, r0
    a7a0:	00326050 	eorseq	r6, r2, r0, asr r0
    a7a4:	00329010 	eorseq	r9, r2, r0, lsl r0
    a7a8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    a7b8:	10003250 	andne	r3, r0, r0, asr r2
    a7bc:	10003263 	andne	r3, r0, r3, ror #4
    a7c0:	63510001 	cmpvs	r1, #1
    a7c4:	90100032 	andsls	r0, r0, r2, lsr r0
    a7c8:	01100032 	tsteq	r0, r2, lsr r0
    a7cc:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    a7d8:	1000325e 	andne	r3, r0, lr, asr r2
    a7dc:	10003290 	mulne	r0, r0, r2
    a7e0:	00540001 	subseq	r0, r4, r1
    a7e4:	00000000 	andeq	r0, r0, r0
    a7e8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    a7ec:	2a100032 	bcs	40a8bc <__RAM_SIZE+0x30a8bc>
    a7f0:	02100032 	andseq	r0, r0, #50	; 0x32
    a7f4:	2a007d00 	bcs	29bfc <__HEAP_SIZE+0x28bfc>
    a7f8:	50100032 	andspl	r0, r0, r2, lsr r0
    a7fc:	02100032 	andseq	r0, r0, #50	; 0x32
    a800:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    a80c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    a810:	32100032 	andscc	r0, r0, #50	; 0x32
    a814:	01100032 	tsteq	r0, r2, lsr r0
    a818:	32325000 	eorscc	r5, r2, #0
    a81c:	32501000 	subscc	r1, r0, #0
    a820:	00011000 	andeq	r1, r1, r0
    a824:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a830:	00322800 	eorseq	r2, r2, r0, lsl #16
    a834:	00323210 	eorseq	r3, r2, r0, lsl r2
    a838:	51000110 	tstpl	r0, r0, lsl r1
    a83c:	10003232 	andne	r3, r0, r2, lsr r2
    a840:	10003250 	andne	r3, r0, r0, asr r2
    a844:	00550001 	subseq	r0, r5, r1
	...
    a850:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    a854:	32100032 	andscc	r0, r0, #50	; 0x32
    a858:	01100032 	tsteq	r0, r2, lsr r0
    a85c:	32325200 	eorscc	r5, r2, #0, 4
    a860:	32501000 	subscc	r1, r0, #0
    a864:	00011000 	andeq	r1, r1, r0
    a868:	00000056 	andeq	r0, r0, r6, asr r0
	...
    a87c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a888:	01f30004 	mvnseq	r0, r4
    a88c:	00009f50 	andeq	r9, r0, r0, asr pc
    a890:	00000000 	andeq	r0, r0, r0
    a894:	00020000 	andeq	r0, r2, r0
	...
    a8a0:	00010000 	andeq	r0, r1, r0
    a8a4:	00000050 	andeq	r0, r0, r0, asr r0
    a8a8:	00000000 	andeq	r0, r0, r0
    a8ac:	f3000400 	vshl.u8	d0, d0, d0
    a8b0:	009f5001 	addseq	r5, pc, r1
	...
    a8c8:	01000000 	mrseq	r0, (UNDEF: 0)
    a8cc:	00005000 	andeq	r5, r0, r0
    a8d0:	00000000 	andeq	r0, r0, r0
    a8d4:	00020000 	andeq	r0, r2, r0
    a8d8:	00000071 	andeq	r0, r0, r1, ror r0
    a8dc:	00000000 	andeq	r0, r0, r0
    a8e0:	00010000 	andeq	r0, r1, r0
    a8e4:	00000050 	andeq	r0, r0, r0, asr r0
    a8e8:	00000000 	andeq	r0, r0, r0
    a8ec:	f3000400 	vshl.u8	d0, d0, d0
    a8f0:	009f5001 	addseq	r5, pc, r1
    a8f4:	00000000 	andeq	r0, r0, r0
    a8f8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a904:	02000000 	andeq	r0, r0, #0
    a908:	009f3100 	addseq	r3, pc, r0, lsl #2
    a90c:	00000000 	andeq	r0, r0, r0
    a910:	02000000 	andeq	r0, r0, #0
    a914:	009f3000 	addseq	r3, pc, r0
    a918:	00000000 	andeq	r0, r0, r0
    a91c:	03000000 	movweq	r0, #0
	...
    a92c:	01000000 	mrseq	r0, (UNDEF: 0)
    a930:	00005000 	andeq	r5, r0, r0
    a934:	00000000 	andeq	r0, r0, r0
    a938:	00020000 	andeq	r0, r2, r0
    a93c:	00000071 	andeq	r0, r0, r1, ror r0
    a940:	00000000 	andeq	r0, r0, r0
    a944:	00010000 	andeq	r0, r1, r0
    a948:	00000050 	andeq	r0, r0, r0, asr r0
    a94c:	00000000 	andeq	r0, r0, r0
    a950:	f3000400 	vshl.u8	d0, d0, d0
    a954:	009f5001 	addseq	r5, pc, r1
	...
    a968:	01000000 	mrseq	r0, (UNDEF: 0)
    a96c:	00005000 	andeq	r5, r0, r0
    a970:	00000000 	andeq	r0, r0, r0
    a974:	00040000 	andeq	r0, r4, r0
    a978:	9f5001f3 	svcls	0x005001f3
	...
    a984:	00000002 	andeq	r0, r0, r2
	...
    a990:	00500001 	subseq	r0, r0, r1
    a994:	00000000 	andeq	r0, r0, r0
    a998:	04000000 	streq	r0, [r0], #-0
    a99c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a9a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a9a4:	00000000 	andeq	r0, r0, r0
    a9a8:	00000600 	andeq	r0, r0, r0, lsl #12
	...
    a9b4:	70000200 	andvc	r0, r0, r0, lsl #4
    a9b8:	00000004 	andeq	r0, r0, r4
    a9bc:	00000000 	andeq	r0, r0, r0
    a9c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a9d4:	007d0002 	rsbseq	r0, sp, r2
	...
    a9e0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a9f8:	00500001 	subseq	r0, r0, r1
    a9fc:	00000000 	andeq	r0, r0, r0
    aa00:	04000000 	streq	r0, [r0], #-0
    aa04:	5001f300 	andpl	pc, r1, r0, lsl #6
    aa08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    aa18:	01000000 	mrseq	r0, (UNDEF: 0)
    aa1c:	00005000 	andeq	r5, r0, r0
	...
    aa2c:	00020000 	andeq	r0, r2, r0
    aa30:	0000007d 	andeq	r0, r0, sp, ror r0
    aa34:	00000000 	andeq	r0, r0, r0
    aa38:	00020000 	andeq	r0, r2, r0
    aa3c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    aa58:	00500001 	subseq	r0, r0, r1
    aa5c:	00000000 	andeq	r0, r0, r0
    aa60:	01000000 	mrseq	r0, (UNDEF: 0)
    aa64:	00005400 	andeq	r5, r0, r0, lsl #8
    aa68:	00000000 	andeq	r0, r0, r0
    aa6c:	00040000 	andeq	r0, r4, r0
    aa70:	9f5001f3 	svcls	0x005001f3
	...
    aa7c:	00540001 	subseq	r0, r4, r1
    aa80:	00000000 	andeq	r0, r0, r0
    aa84:	04000000 	streq	r0, [r0], #-0
    aa88:	5001f300 	andpl	pc, r1, r0, lsl #6
    aa8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    aa90:	00000000 	andeq	r0, r0, r0
    aa94:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    aaa4:	01000000 	mrseq	r0, (UNDEF: 0)
    aaa8:	00005000 	andeq	r5, r0, r0
    aaac:	00000000 	andeq	r0, r0, r0
    aab0:	00010000 	andeq	r0, r1, r0
    aab4:	00000054 	andeq	r0, r0, r4, asr r0
    aab8:	00000000 	andeq	r0, r0, r0
    aabc:	f3000400 	vshl.u8	d0, d0, d0
    aac0:	009f5001 	addseq	r5, pc, r1
    aac4:	00000000 	andeq	r0, r0, r0
    aac8:	01000000 	mrseq	r0, (UNDEF: 0)
    aacc:	00005400 	andeq	r5, r0, r0, lsl #8
    aad0:	00000000 	andeq	r0, r0, r0
    aad4:	00040000 	andeq	r0, r4, r0
    aad8:	9f5001f3 	svcls	0x005001f3
	...
    aaec:	00010000 	andeq	r0, r1, r0
    aaf0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    ab00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    ab0c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    ab10:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    ab24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    ab30:	00540001 	subseq	r0, r4, r1
	...
    ab44:	01000000 	mrseq	r0, (UNDEF: 0)
    ab48:	00005100 	andeq	r5, r0, r0, lsl #2
    ab4c:	00000000 	andeq	r0, r0, r0
    ab50:	00010000 	andeq	r0, r1, r0
    ab54:	00000055 	andeq	r0, r0, r5, asr r0
    ab58:	00000000 	andeq	r0, r0, r0
    ab5c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    ab68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    ab74:	00540001 	subseq	r0, r4, r1
	...
    ab88:	01000000 	mrseq	r0, (UNDEF: 0)
    ab8c:	00005000 	andeq	r5, r0, r0
    ab90:	00000000 	andeq	r0, r0, r0
    ab94:	00040000 	andeq	r0, r4, r0
    ab98:	9f5001f3 	svcls	0x005001f3
	...
    aba4:	00000002 	andeq	r0, r0, r2
	...
    abb0:	00500001 	subseq	r0, r0, r1
    abb4:	00000000 	andeq	r0, r0, r0
    abb8:	04000000 	streq	r0, [r0], #-0
    abbc:	5001f300 	andpl	pc, r1, r0, lsl #6
    abc0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    abd0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    abdc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    abe0:	00000008 	andeq	r0, r0, r8
    abe4:	00000000 	andeq	r0, r0, r0
    abe8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    abec:	00000018 	andeq	r0, r0, r8, lsl r0
    abf0:	00000000 	andeq	r0, r0, r0
    abf4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    abf8:	00000008 	andeq	r0, r0, r8
    abfc:	00000000 	andeq	r0, r0, r0
    ac00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    ac04:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    ac10:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    ac24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    ac30:	70910002 	addsvc	r0, r1, r2
	...
    ac3c:	01f30004 	mvnseq	r0, r4
    ac40:	00009f50 	andeq	r9, r0, r0, asr pc
    ac44:	00000000 	andeq	r0, r0, r0
    ac48:	00010000 	andeq	r0, r1, r0
    ac4c:	00000050 	andeq	r0, r0, r0, asr r0
    ac50:	00000000 	andeq	r0, r0, r0
    ac54:	91000200 	mrsls	r0, R8_usr
    ac58:	00000070 	andeq	r0, r0, r0, ror r0
    ac5c:	00000000 	andeq	r0, r0, r0
    ac60:	f3000400 	vshl.u8	d0, d0, d0
    ac64:	009f5001 	addseq	r5, pc, r1
    ac68:	00000000 	andeq	r0, r0, r0
    ac6c:	01000000 	mrseq	r0, (UNDEF: 0)
    ac70:	00005000 	andeq	r5, r0, r0
    ac74:	00000000 	andeq	r0, r0, r0
    ac78:	00040000 	andeq	r0, r4, r0
    ac7c:	9f5001f3 	svcls	0x005001f3
	...
    ac88:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    ac9c:	00510001 	subseq	r0, r1, r1
    aca0:	00000000 	andeq	r0, r0, r0
    aca4:	04000000 	streq	r0, [r0], #-0
    aca8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    acac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    acb0:	00000000 	andeq	r0, r0, r0
    acb4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    acc0:	00710002 	rsbseq	r0, r1, r2
	...
    accc:	01f30004 	mvnseq	r0, r4
    acd0:	00009f51 	andeq	r9, r0, r1, asr pc
    acd4:	00000000 	andeq	r0, r0, r0
    acd8:	00010000 	andeq	r0, r1, r0
    acdc:	00000051 	andeq	r0, r0, r1, asr r0
    ace0:	00000000 	andeq	r0, r0, r0
    ace4:	03030000 	movweq	r0, #12288	; 0x3000
	...
    acf8:	52000100 	andpl	r0, r0, #0, 2
	...
    ad04:	01f30004 	mvnseq	r0, r4
    ad08:	00009f52 	andeq	r9, r0, r2, asr pc
    ad0c:	00000000 	andeq	r0, r0, r0
    ad10:	00010000 	andeq	r0, r1, r0
    ad14:	00000052 	andeq	r0, r0, r2, asr r0
    ad18:	00000000 	andeq	r0, r0, r0
    ad1c:	91000200 	mrsls	r0, R8_usr
    ad20:	0000006c 	andeq	r0, r0, ip, rrx
    ad24:	00000000 	andeq	r0, r0, r0
    ad28:	f3000400 	vshl.u8	d0, d0, d0
    ad2c:	009f5201 	addseq	r5, pc, r1, lsl #4
    ad30:	00000000 	andeq	r0, r0, r0
    ad34:	01000000 	mrseq	r0, (UNDEF: 0)
    ad38:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    ad44:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    ad54:	00010000 	andeq	r0, r1, r0
    ad58:	00000053 	andeq	r0, r0, r3, asr r0
    ad5c:	00000000 	andeq	r0, r0, r0
    ad60:	5c000100 	stfpls	f0, [r0], {-0}
	...
    ad6c:	01f30004 	mvnseq	r0, r4
    ad70:	00009f53 	andeq	r9, r0, r3, asr pc
    ad74:	00000000 	andeq	r0, r0, r0
    ad78:	00010000 	andeq	r0, r1, r0
    ad7c:	0000005c 	andeq	r0, r0, ip, asr r0
    ad80:	00000000 	andeq	r0, r0, r0
    ad84:	f3000400 	vshl.u8	d0, d0, d0
    ad88:	009f5301 	addseq	r5, pc, r1, lsl #6
    ad8c:	00000000 	andeq	r0, r0, r0
    ad90:	01000000 	mrseq	r0, (UNDEF: 0)
    ad94:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
    ada8:	00020000 	andeq	r0, r2, r0
    adac:	00000091 	muleq	r0, r1, r0
    adb0:	00000000 	andeq	r0, r0, r0
    adb4:	00020000 	andeq	r0, r2, r0
    adb8:	00000091 	muleq	r0, r1, r0
    adbc:	00000000 	andeq	r0, r0, r0
    adc0:	03010000 	movweq	r0, #4096	; 0x1000
	...
    add0:	00020000 	andeq	r0, r2, r0
    add4:	00009f30 	andeq	r9, r0, r0, lsr pc
    add8:	00000000 	andeq	r0, r0, r0
    addc:	00020000 	andeq	r0, r2, r0
    ade0:	00009f30 	andeq	r9, r0, r0, lsr pc
    ade4:	00000000 	andeq	r0, r0, r0
    ade8:	00010000 	andeq	r0, r1, r0
    adec:	00000050 	andeq	r0, r0, r0, asr r0
    adf0:	00000000 	andeq	r0, r0, r0
    adf4:	30000200 	andcc	r0, r0, r0, lsl #4
    adf8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    ae08:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    ae14:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    ae18:	00000004 	andeq	r0, r0, r4
    ae1c:	00000000 	andeq	r0, r0, r0
    ae20:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    ae24:	00000018 	andeq	r0, r0, r8, lsl r0
    ae28:	00000000 	andeq	r0, r0, r0
    ae2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    ae30:	00000004 	andeq	r0, r0, r4
    ae34:	00000000 	andeq	r0, r0, r0
    ae38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    ae3c:	00000018 	andeq	r0, r0, r8, lsl r0
    ae40:	00000000 	andeq	r0, r0, r0
    ae44:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    ae54:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    ae64:	01000000 	mrseq	r0, (UNDEF: 0)
    ae68:	00005000 	andeq	r5, r0, r0
    ae6c:	00000000 	andeq	r0, r0, r0
    ae70:	00020000 	andeq	r0, r2, r0
    ae74:	00007091 	muleq	r0, r1, r0
    ae78:	00000000 	andeq	r0, r0, r0
    ae7c:	00040000 	andeq	r0, r4, r0
    ae80:	9f5001f3 	svcls	0x005001f3
	...
    ae8c:	00500001 	subseq	r0, r0, r1
    ae90:	00000000 	andeq	r0, r0, r0
    ae94:	04000000 	streq	r0, [r0], #-0
    ae98:	5001f300 	andpl	pc, r1, r0, lsl #6
    ae9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    aea0:	00000000 	andeq	r0, r0, r0
    aea4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    aeb0:	01f30004 	mvnseq	r0, r4
    aeb4:	00009f50 	andeq	r9, r0, r0, asr pc
    aeb8:	00000000 	andeq	r0, r0, r0
    aebc:	03000000 	movweq	r0, #0
    aec0:	00000003 	andeq	r0, r0, r3
	...
    aed0:	00510001 	subseq	r0, r1, r1
    aed4:	00000000 	andeq	r0, r0, r0
    aed8:	04000000 	streq	r0, [r0], #-0
    aedc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    aee0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    aee4:	00000000 	andeq	r0, r0, r0
    aee8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    aef4:	01f30004 	mvnseq	r0, r4
    aef8:	00009f51 	andeq	r9, r0, r1, asr pc
    aefc:	00000000 	andeq	r0, r0, r0
    af00:	00010000 	andeq	r0, r1, r0
    af04:	00000051 	andeq	r0, r0, r1, asr r0
    af08:	00000000 	andeq	r0, r0, r0
    af0c:	03030000 	movweq	r0, #12288	; 0x3000
	...
    af1c:	01000000 	mrseq	r0, (UNDEF: 0)
    af20:	00005200 	andeq	r5, r0, r0, lsl #4
    af24:	00000000 	andeq	r0, r0, r0
    af28:	00040000 	andeq	r0, r4, r0
    af2c:	9f5201f3 	svcls	0x005201f3
	...
    af38:	00520001 	subseq	r0, r2, r1
    af3c:	00000000 	andeq	r0, r0, r0
    af40:	04000000 	streq	r0, [r0], #-0
    af44:	5201f300 	andpl	pc, r1, #0, 6
    af48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    af4c:	00000000 	andeq	r0, r0, r0
    af50:	52000100 	andpl	r0, r0, #0, 2
	...
    af68:	00530001 	subseq	r0, r3, r1
    af6c:	00000000 	andeq	r0, r0, r0
    af70:	04000000 	streq	r0, [r0], #-0
    af74:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    af78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    af8c:	91000200 	mrsls	r0, R8_usr
	...
    af98:	91000200 	mrsls	r0, R8_usr
	...
    afa4:	00030200 	andeq	r0, r3, r0, lsl #4
	...
    afb8:	30000200 	andcc	r0, r0, r0, lsl #4
    afbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    afc0:	00000000 	andeq	r0, r0, r0
    afc4:	30000200 	andcc	r0, r0, r0, lsl #4
    afc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    afcc:	00000000 	andeq	r0, r0, r0
    afd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    afdc:	9f300002 	svcls	0x00300002
	...
    afe8:	00500001 	subseq	r0, r0, r1
    afec:	00000000 	andeq	r0, r0, r0
    aff0:	02000000 	andeq	r0, r0, #0
    aff4:	009f3000 	addseq	r3, pc, r0
	...
    b004:	02000000 	andeq	r0, r0, #0
    b008:	00007d00 	andeq	r7, r0, r0, lsl #26
    b00c:	00000000 	andeq	r0, r0, r0
    b010:	02000000 	andeq	r0, r0, #0
    b014:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    b028:	01000000 	mrseq	r0, (UNDEF: 0)
    b02c:	00005000 	andeq	r5, r0, r0
    b030:	00000000 	andeq	r0, r0, r0
    b034:	00010000 	andeq	r0, r1, r0
    b038:	00000058 	andeq	r0, r0, r8, asr r0
	...
    b04c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    b058:	00570001 	subseq	r0, r7, r1
	...
    b06c:	01000000 	mrseq	r0, (UNDEF: 0)
    b070:	00005200 	andeq	r5, r0, r0, lsl #4
    b074:	00000000 	andeq	r0, r0, r0
    b078:	00010000 	andeq	r0, r1, r0
    b07c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    b090:	53000100 	movwpl	r0, #256	; 0x100
	...
    b09c:	00560001 	subseq	r0, r6, r1
	...
    b0ac:	02000000 	andeq	r0, r0, #0
    b0b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    b0b4:	00000000 	andeq	r0, r0, r0
    b0b8:	02000000 	andeq	r0, r0, #0
    b0bc:	000c7d00 	andeq	r7, ip, r0, lsl #26
    b0c0:	00000000 	andeq	r0, r0, r0
    b0c4:	02000000 	andeq	r0, r0, #0
    b0c8:	00187d00 	andseq	r7, r8, r0, lsl #26
    b0cc:	00000000 	andeq	r0, r0, r0
    b0d0:	02000000 	andeq	r0, r0, #0
    b0d4:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
    b0e8:	01000000 	mrseq	r0, (UNDEF: 0)
    b0ec:	00005000 	andeq	r5, r0, r0
    b0f0:	00000000 	andeq	r0, r0, r0
    b0f4:	00040000 	andeq	r0, r4, r0
    b0f8:	9f5001f3 	svcls	0x005001f3
	...
    b110:	00510001 	subseq	r0, r1, r1
    b114:	00000000 	andeq	r0, r0, r0
    b118:	04000000 	streq	r0, [r0], #-0
    b11c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    b120:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b134:	52000100 	andpl	r0, r0, #0, 2
	...
    b140:	01f30004 	mvnseq	r0, r4
    b144:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    b158:	00010000 	andeq	r0, r1, r0
    b15c:	00000053 	andeq	r0, r0, r3, asr r0
    b160:	00000000 	andeq	r0, r0, r0
    b164:	f3000400 	vshl.u8	d0, d0, d0
    b168:	009f5301 	addseq	r5, pc, r1, lsl #6
    b16c:	00000000 	andeq	r0, r0, r0
    b170:	04000000 	streq	r0, [r0], #-0
	...
    b17c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    b190:	007d0002 	rsbseq	r0, sp, r2
	...
    b19c:	187d0002 	ldmdane	sp!, {r1}^
	...
    b1a8:	207d0002 	rsbscs	r0, sp, r2
	...
    b1b4:	187d0002 	ldmdane	sp!, {r1}^
	...
    b1cc:	00500001 	subseq	r0, r0, r1
    b1d0:	00000000 	andeq	r0, r0, r0
    b1d4:	01000000 	mrseq	r0, (UNDEF: 0)
    b1d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    b1ec:	00010000 	andeq	r0, r1, r0
    b1f0:	00000051 	andeq	r0, r0, r1, asr r0
    b1f4:	00000000 	andeq	r0, r0, r0
    b1f8:	58000100 	stmdapl	r0, {r8}
	...
    b210:	00520001 	subseq	r0, r2, r1
    b214:	00000000 	andeq	r0, r0, r0
    b218:	01000000 	mrseq	r0, (UNDEF: 0)
    b21c:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    b230:	00010000 	andeq	r0, r1, r0
    b234:	00000053 	andeq	r0, r0, r3, asr r0
    b238:	00000000 	andeq	r0, r0, r0
    b23c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b254:	00500001 	subseq	r0, r0, r1
    b258:	00000000 	andeq	r0, r0, r0
    b25c:	01000000 	mrseq	r0, (UNDEF: 0)
    b260:	00005600 	andeq	r5, r0, r0, lsl #12
    b264:	00000000 	andeq	r0, r0, r0
    b268:	34c40000 	strbcc	r0, [r4], #0
    b26c:	34c61000 	strbcc	r1, [r6], #0
    b270:	00021000 	andeq	r1, r2, r0
    b274:	34c6007d 	strbcc	r0, [r6], #125	; 0x7d
    b278:	34c81000 	strbcc	r1, [r8], #0
    b27c:	00021000 	andeq	r1, r2, r0
    b280:	34c8087d 	strbcc	r0, [r8], #2173	; 0x87d
    b284:	350c1000 	strcc	r1, [ip, #-0]
    b288:	00021000 	andeq	r1, r2, r0
    b28c:	350c287d 	strcc	r2, [ip, #-2173]	; 0xfffff783
    b290:	35201000 	strcc	r1, [r0, #-0]!
    b294:	00021000 	andeq	r1, r2, r0
    b298:	0000087d 	andeq	r0, r0, sp, ror r8
    b29c:	00000000 	andeq	r0, r0, r0
    b2a0:	00010000 	andeq	r0, r1, r0
    b2a4:	04000000 	streq	r0, [r0], #-0
    b2a8:	100034c8 	andne	r3, r0, r8, asr #9
    b2ac:	10003502 	andne	r3, r0, r2, lsl #10
    b2b0:	9f300002 	svcls	0x00300002
    b2b4:	10003502 	andne	r3, r0, r2, lsl #10
    b2b8:	10003504 	andne	r3, r0, r4, lsl #10
    b2bc:	9f310002 	svcls	0x00310002
    b2c0:	10003504 	andne	r3, r0, r4, lsl #10
    b2c4:	1000350a 	andne	r3, r0, sl, lsl #10
    b2c8:	9f300002 	svcls	0x00300002
	...
    b2dc:	007d0002 	rsbseq	r0, sp, r2
	...
    b2e8:	187d0002 	ldmdane	sp!, {r1}^
	...
    b300:	00500001 	subseq	r0, r0, r1
    b304:	00000000 	andeq	r0, r0, r0
    b308:	01000000 	mrseq	r0, (UNDEF: 0)
    b30c:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    b320:	00010000 	andeq	r0, r1, r0
    b324:	00000053 	andeq	r0, r0, r3, asr r0
    b328:	00000000 	andeq	r0, r0, r0
    b32c:	53000100 	movwpl	r0, #256	; 0x100
	...
    b338:	00000002 	andeq	r0, r0, r2
	...
    b344:	9f300002 	svcls	0x00300002
	...
    b350:	00540001 	subseq	r0, r4, r1
    b354:	00000000 	andeq	r0, r0, r0
    b358:	02000000 	andeq	r0, r0, #0
	...
    b364:	02000000 	andeq	r0, r0, #0
    b368:	009f3000 	addseq	r3, pc, r0
    b36c:	00000000 	andeq	r0, r0, r0
    b370:	01000000 	mrseq	r0, (UNDEF: 0)
    b374:	00005500 	andeq	r5, r0, r0, lsl #10
    b378:	00000000 	andeq	r0, r0, r0
    b37c:	00020000 	andeq	r0, r2, r0
	...
    b388:	00030000 	andeq	r0, r3, r0
    b38c:	009fff09 	addseq	pc, pc, r9, lsl #30
    b390:	00000000 	andeq	r0, r0, r0
    b394:	01000000 	mrseq	r0, (UNDEF: 0)
    b398:	00005600 	andeq	r5, r0, r0, lsl #12
    b39c:	00000000 	andeq	r0, r0, r0
    b3a0:	35780000 	ldrbcc	r0, [r8, #-0]!
    b3a4:	35ac1000 	strcc	r1, [ip, #0]!
    b3a8:	00021000 	andeq	r1, r2, r0
    b3ac:	35ac007d 	strcc	r0, [ip, #125]!	; 0x7d
    b3b0:	35ca1000 	strbcc	r1, [sl]
    b3b4:	00021000 	andeq	r1, r2, r0
    b3b8:	35ca047d 	strbcc	r0, [sl, #1149]	; 0x47d
    b3bc:	35cc1000 	strbcc	r1, [ip]
    b3c0:	00021000 	andeq	r1, r2, r0
    b3c4:	35cc007d 	strbcc	r0, [ip, #125]	; 0x7d
    b3c8:	35d01000 	ldrbcc	r1, [r0]
    b3cc:	00021000 	andeq	r1, r2, r0
    b3d0:	35d0047d 	ldrbcc	r0, [r0, #1149]	; 0x47d
    b3d4:	35dc1000 	ldrbcc	r1, [ip]
    b3d8:	00021000 	andeq	r1, r2, r0
    b3dc:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    b3e8:	00010100 	andeq	r0, r1, r0, lsl #2
    b3ec:	35780000 	ldrbcc	r0, [r8, #-0]!
    b3f0:	35a21000 	strcc	r1, [r2, #0]!
    b3f4:	00011000 	andeq	r1, r1, r0
    b3f8:	0035a250 	eorseq	sl, r5, r0, asr r2
    b3fc:	0035a610 	eorseq	sl, r5, r0, lsl r6
    b400:	f3000410 	vqshl.u8	d0, d0, d0
    b404:	a69f5001 	ldrge	r5, [pc], r1
    b408:	aa100035 	bge	40b4e4 <__RAM_SIZE+0x30b4e4>
    b40c:	01100035 	tsteq	r0, r5, lsr r0
    b410:	35aa5200 	strcc	r5, [sl, #512]!	; 0x200
    b414:	35dc1000 	ldrbcc	r1, [ip]
    b418:	00011000 	andeq	r1, r1, r0
    b41c:	00000050 	andeq	r0, r0, r0, asr r0
    b420:	00000000 	andeq	r0, r0, r0
    b424:	00000400 	andeq	r0, r0, r0, lsl #8
    b428:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    b42c:	7a100035 	bvc	40b508 <__RAM_SIZE+0x30b508>
    b430:	06100035 			; <UNDEFINED> instruction: 0x06100035
    b434:	8d580300 	ldclhi	3, cr0, [r8, #-0]
    b438:	7a9f3800 	bvc	fe7d9440 <__StackTop+0xc66d9440>
    b43c:	7e100035 	mrcvc	0, 0, r0, cr0, cr5, {1}
    b440:	01100035 	tsteq	r0, r5, lsr r0
    b444:	357e5300 	ldrbcc	r5, [lr, #-768]!	; 0xfffffd00
    b448:	35dc1000 	ldrbcc	r1, [ip]
    b44c:	00011000 	andeq	r1, r1, r0
    b450:	00000052 	andeq	r0, r0, r2, asr r0
    b454:	00000000 	andeq	r0, r0, r0
    b458:	02020300 	andeq	r0, r2, #0, 6
    b45c:	00000000 	andeq	r0, r0, r0
    b460:	00358200 	eorseq	r8, r5, r0, lsl #4
    b464:	00358c10 	eorseq	r8, r5, r0, lsl ip
    b468:	52000110 	andpl	r0, r0, #16, 2
    b46c:	1000358c 	andne	r3, r0, ip, lsl #11
    b470:	100035a0 	andne	r3, r0, r0, lsr #11
    b474:	a0500001 	subsge	r0, r0, r1
    b478:	aa100035 	bge	40b554 <__RAM_SIZE+0x30b554>
    b47c:	01100035 	tsteq	r0, r5, lsr r0
    b480:	35aa5200 	strcc	r5, [sl, #512]!	; 0x200
    b484:	35dc1000 	ldrbcc	r1, [ip]
    b488:	00011000 	andeq	r1, r1, r0
    b48c:	00000050 	andeq	r0, r0, r0, asr r0
    b490:	00000000 	andeq	r0, r0, r0
    b494:	4e000100 	adfmis	f0, f0, f0
    b498:	5e100035 	mrcpl	0, 0, r0, cr0, cr5, {1}
    b49c:	01100035 	tsteq	r0, r5, lsr r0
    b4a0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    b4ac:	352a0000 	strcc	r0, [sl, #-0]!
    b4b0:	35361000 	ldrcc	r1, [r6, #-0]!
    b4b4:	00011000 	andeq	r1, r1, r0
    b4b8:	00353651 	eorseq	r3, r5, r1, asr r6
    b4bc:	00355e10 	eorseq	r5, r5, r0, lsl lr
    b4c0:	52000110 	andpl	r0, r0, #16, 2
	...
    b4d0:	10003540 	andne	r3, r0, r0, asr #10
    b4d4:	10003556 	andne	r3, r0, r6, asr r5
    b4d8:	56530001 	ldrbpl	r0, [r3], -r1
    b4dc:	5e100035 	mrcpl	0, 0, r0, cr0, cr5, {1}
    b4e0:	02100035 	andseq	r0, r0, #53	; 0x35
    b4e4:	00007200 	andeq	r7, r0, r0, lsl #4
    b4e8:	00000000 	andeq	r0, r0, r0
    b4ec:	04000000 	streq	r0, [r0], #-0
    b4f0:	00000000 	andeq	r0, r0, r0
    b4f4:	00352000 	eorseq	r2, r5, r0
    b4f8:	00353410 	eorseq	r3, r5, r0, lsl r4
    b4fc:	0a000410 	beq	c544 <__HEAP_SIZE+0xb544>
    b500:	349f8000 	ldrcc	r8, [pc], #0	; b508 <__HEAP_SIZE+0xa508>
    b504:	40100035 	andsmi	r0, r0, r5, lsr r0
    b508:	01100035 	tsteq	r0, r5, lsr r0
    b50c:	355e5300 	ldrbcc	r5, [lr, #-768]	; 0xfffffd00
    b510:	35781000 	ldrbcc	r1, [r8, #-0]!
    b514:	00041000 	andeq	r1, r4, r0
    b518:	9f80000a 	svcls	0x0080000a
	...
    b52c:	007d0002 	rsbseq	r0, sp, r2
	...
    b538:	107d0002 	rsbsne	r0, sp, r2
	...
    b554:	00500001 	subseq	r0, r0, r1
    b558:	00000000 	andeq	r0, r0, r0
    b55c:	01000000 	mrseq	r0, (UNDEF: 0)
    b560:	00005300 	andeq	r5, r0, r0, lsl #6
    b564:	00000000 	andeq	r0, r0, r0
    b568:	00040000 	andeq	r0, r4, r0
    b56c:	9f5001f3 	svcls	0x005001f3
	...
    b578:	00530001 	subseq	r0, r3, r1
	...
    b590:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    b59c:	01f30004 	mvnseq	r0, r4
    b5a0:	00009f51 	andeq	r9, r0, r1, asr pc
    b5a4:	00000000 	andeq	r0, r0, r0
    b5a8:	00010000 	andeq	r0, r1, r0
    b5ac:	00000051 	andeq	r0, r0, r1, asr r0
    b5b0:	00000000 	andeq	r0, r0, r0
    b5b4:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    b5c4:	30000200 	andcc	r0, r0, r0, lsl #4
    b5c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b5cc:	00000000 	andeq	r0, r0, r0
    b5d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b5dc:	00550001 	subseq	r0, r5, r1
    b5e0:	00000000 	andeq	r0, r0, r0
    b5e4:	02000000 	andeq	r0, r0, #0
    b5e8:	009f3000 	addseq	r3, pc, r0
    b5ec:	00000000 	andeq	r0, r0, r0
    b5f0:	b0000000 	andlt	r0, r0, r0
    b5f4:	b4100036 	ldrlt	r0, [r0], #-54	; 0xffffffca
    b5f8:	02100036 	andseq	r0, r0, #54	; 0x36
    b5fc:	b4007d00 	strlt	r7, [r0], #-3328	; 0xfffff300
    b600:	f6100036 			; <UNDEFINED> instruction: 0xf6100036
    b604:	02100036 	andseq	r0, r0, #54	; 0x36
    b608:	f6107d00 			; <UNDEFINED> instruction: 0xf6107d00
    b60c:	00100036 	andseq	r0, r0, r6, lsr r0
    b610:	02100037 	andseq	r0, r0, #55	; 0x37
    b614:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    b628:	0036b000 	eorseq	fp, r6, r0
    b62c:	0036c810 	eorseq	ip, r6, r0, lsl r8
    b630:	50000110 	andpl	r0, r0, r0, lsl r1
    b634:	100036c8 	andne	r3, r0, r8, asr #13
    b638:	100036ca 	andne	r3, r0, sl, asr #13
    b63c:	ca540001 	bgt	150b648 <__RAM_SIZE+0x140b648>
    b640:	d5100036 	ldrle	r0, [r0, #-54]	; 0xffffffca
    b644:	01100036 	tsteq	r0, r6, lsr r0
    b648:	36d55000 	ldrbcc	r5, [r5], r0
    b64c:	36f61000 	ldrbtcc	r1, [r6], r0
    b650:	00011000 	andeq	r1, r1, r0
    b654:	0036f654 	eorseq	pc, r6, r4, asr r6	; <UNPREDICTABLE>
    b658:	00370010 	eorseq	r0, r7, r0, lsl r0
    b65c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    b668:	00000002 	andeq	r0, r0, r2
    b66c:	36b00000 	ldrtcc	r0, [r0], r0
    b670:	36ba1000 	ldrtcc	r1, [sl], r0
    b674:	00011000 	andeq	r1, r1, r0
    b678:	0036ba50 	eorseq	fp, r6, r0, asr sl
    b67c:	0036f610 	eorseq	pc, r6, r0, lsl r6	; <UNPREDICTABLE>
    b680:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    b684:	100036f6 	strdne	r3, [r0], -r6
    b688:	10003700 	andne	r3, r0, r0, lsl #14
    b68c:	00500001 	subseq	r0, r0, r1
    b690:	00000000 	andeq	r0, r0, r0
    b694:	01000000 	mrseq	r0, (UNDEF: 0)
    b698:	0036ba00 	eorseq	fp, r6, r0, lsl #20
    b69c:	0036f610 	eorseq	pc, r6, r0, lsl r6	; <UNPREDICTABLE>
    b6a0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    b6ac:	100035dc 	ldrdne	r3, [r0], -ip
    b6b0:	100035de 	ldrdne	r3, [r0], -lr
    b6b4:	007d0002 	rsbseq	r0, sp, r2
    b6b8:	100035de 	ldrdne	r3, [r0], -lr
    b6bc:	100036b0 			; <UNDEFINED> instruction: 0x100036b0
    b6c0:	107d0002 	rsbsne	r0, sp, r2
	...
    b6d8:	100035dc 	ldrdne	r3, [r0], -ip
    b6dc:	100035ea 	andne	r3, r0, sl, ror #11
    b6e0:	ea500001 	b	140b6ec <__RAM_SIZE+0x130b6ec>
    b6e4:	fe100035 	mrc2	0, 0, r0, cr0, cr5, {1}
    b6e8:	01100035 	tsteq	r0, r5, lsr r0
    b6ec:	35fe5400 	ldrbcc	r5, [lr, #1024]!	; 0x400
    b6f0:	36001000 	strcc	r1, [r0], -r0
    b6f4:	00011000 	andeq	r1, r1, r0
    b6f8:	00360050 	eorseq	r0, r6, r0, asr r0
    b6fc:	00362210 	eorseq	r2, r6, r0, lsl r2
    b700:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    b704:	10003622 	andne	r3, r0, r2, lsr #12
    b708:	10003624 	andne	r3, r0, r4, lsr #12
    b70c:	08700003 	ldmdaeq	r0!, {r0, r1}^
    b710:	0036249f 	mlaseq	r6, pc, r4, r2	; <UNPREDICTABLE>
    b714:	0036b010 	eorseq	fp, r6, r0, lsl r0
    b718:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    b728:	361e0000 	ldrcc	r0, [lr], -r0
    b72c:	36201000 	strtcc	r1, [r0], -r0
    b730:	00011000 	andeq	r1, r1, r0
    b734:	00362a53 	eorseq	r2, r6, r3, asr sl
    b738:	00368010 	eorseq	r8, r6, r0, lsl r0
    b73c:	53000110 	movwpl	r0, #272	; 0x110
    b740:	10003698 	mulne	r0, r8, r6
    b744:	100036b0 			; <UNDEFINED> instruction: 0x100036b0
    b748:	00530001 	subseq	r0, r3, r1
    b74c:	00000000 	andeq	r0, r0, r0
    b750:	01000000 	mrseq	r0, (UNDEF: 0)
    b754:	00000000 	andeq	r0, r0, r0
    b758:	1a000000 	bne	b760 <__HEAP_SIZE+0xa760>
    b75c:	20100036 	andscs	r0, r0, r6, lsr r0
    b760:	06100036 			; <UNDEFINED> instruction: 0x06100036
    b764:	8d580300 	ldclhi	3, cr0, [r8, #-0]
    b768:	2a9f3800 	bcs	fe7d9770 <__StackTop+0xc66d9770>
    b76c:	2c100036 	ldccs	0, cr0, [r0], {54}	; 0x36
    b770:	01100036 	tsteq	r0, r6, lsr r0
    b774:	362e5100 	strtcc	r5, [lr], -r0, lsl #2
    b778:	36601000 	strbtcc	r1, [r0], -r0
    b77c:	00011000 	andeq	r1, r1, r0
    b780:	00369851 	eorseq	r9, r6, r1, asr r8
    b784:	0036b010 	eorseq	fp, r6, r0, lsl r0
    b788:	51000110 	tstpl	r0, r0, lsl r1
	...
    b794:	36540000 	ldrbcc	r0, [r4], -r0
    b798:	365e1000 	ldrbcc	r1, [lr], -r0
    b79c:	00011000 	andeq	r1, r1, r0
    b7a0:	00000052 	andeq	r0, r0, r2, asr r0
    b7a4:	00000000 	andeq	r0, r0, r0
    b7a8:	00000400 	andeq	r0, r0, r0, lsl #8
    b7ac:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    b7b0:	46100035 			; <UNDEFINED> instruction: 0x46100035
    b7b4:	02100036 	andseq	r0, r0, #54	; 0x36
    b7b8:	469f3000 	ldrmi	r3, [pc], r0
    b7bc:	8c100036 	ldchi	0, cr0, [r0], {54}	; 0x36
    b7c0:	01100036 	tsteq	r0, r6, lsr r0
    b7c4:	368c5500 	strcc	r5, [ip], r0, lsl #10
    b7c8:	36b01000 	ldrtcc	r1, [r0], r0
    b7cc:	00021000 	andeq	r1, r2, r0
    b7d0:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    b7dc:	35f40000 	ldrbcc	r0, [r4, #0]!
    b7e0:	35fe1000 	ldrbcc	r1, [lr, #0]!
    b7e4:	00011000 	andeq	r1, r1, r0
    b7e8:	00362053 	eorseq	r2, r6, r3, asr r0
    b7ec:	00362410 	eorseq	r2, r6, r0, lsl r4
    b7f0:	53000110 	movwpl	r0, #272	; 0x110
	...
    b804:	00010000 	andeq	r0, r1, r0
    b808:	00000053 	andeq	r0, r0, r3, asr r0
    b80c:	00000000 	andeq	r0, r0, r0
    b810:	00398000 	eorseq	r8, r9, r0
    b814:	00398210 	eorseq	r8, r9, r0, lsl r2
    b818:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b81c:	00398200 	eorseq	r8, r9, r0, lsl #4
    b820:	0039c010 	eorseq	ip, r9, r0, lsl r0
    b824:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b828:	00000008 	andeq	r0, r0, r8
    b82c:	00000000 	andeq	r0, r0, r0
    b830:	0038f000 	eorseq	pc, r8, r0
    b834:	0038f210 	eorseq	pc, r8, r0, lsl r2	; <UNPREDICTABLE>
    b838:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b83c:	0038f200 	eorseq	pc, r8, r0, lsl #4
    b840:	00397a10 	eorseq	r7, r9, r0, lsl sl
    b844:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b848:	00397a04 	eorseq	r7, r9, r4, lsl #20
    b84c:	00398010 	eorseq	r8, r9, r0, lsl r0
    b850:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    b85c:	01010000 	mrseq	r0, (UNDEF: 1)
    b860:	01010101 	tsteq	r1, r1, lsl #2
    b864:	01010101 	tsteq	r1, r1, lsl #2
    b868:	01010101 	tsteq	r1, r1, lsl #2
    b86c:	01010101 	tsteq	r1, r1, lsl #2
    b870:	01010101 	tsteq	r1, r1, lsl #2
    b874:	01010101 	tsteq	r1, r1, lsl #2
    b878:	01010101 	tsteq	r1, r1, lsl #2
    b87c:	01010101 	tsteq	r1, r1, lsl #2
    b880:	00000101 	andeq	r0, r0, r1, lsl #2
    b884:	0038f000 	eorseq	pc, r8, r0
    b888:	0038f210 	eorseq	pc, r8, r0, lsl r2	; <UNPREDICTABLE>
    b88c:	50000110 	andpl	r0, r0, r0, lsl r1
    b890:	100038f2 	strdne	r3, [r0], -r2
    b894:	100038fa 	strdne	r3, [r0], -sl
    b898:	7c700003 	ldclvc	0, cr0, [r0], #-12
    b89c:	0038fa9f 	mlaseq	r8, pc, sl, pc	; <UNPREDICTABLE>
    b8a0:	0038fe10 	eorseq	pc, r8, r0, lsl lr	; <UNPREDICTABLE>
    b8a4:	70000310 	andvc	r0, r0, r0, lsl r3
    b8a8:	38fe9f78 	ldmcc	lr!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}^
    b8ac:	39041000 	stmdbcc	r4, {ip}
    b8b0:	00031000 	andeq	r1, r3, r0
    b8b4:	049f7470 	ldreq	r7, [pc], #1136	; b8bc <__HEAP_SIZE+0xa8bc>
    b8b8:	0c100039 	ldceq	0, cr0, [r0], {57}	; 0x39
    b8bc:	03100039 	tsteq	r0, #57	; 0x39
    b8c0:	9f707000 	svcls	0x00707000
    b8c4:	1000390c 	andne	r3, r0, ip, lsl #18
    b8c8:	10003914 	andne	r3, r0, r4, lsl r9
    b8cc:	6c700003 	ldclvs	0, cr0, [r0], #-12
    b8d0:	0039149f 	mlaseq	r9, pc, r4, r1	; <UNPREDICTABLE>
    b8d4:	00391c10 	eorseq	r1, r9, r0, lsl ip
    b8d8:	70000310 	andvc	r0, r0, r0, lsl r3
    b8dc:	391c9f68 	ldmdbcc	ip, {r3, r5, r6, r8, r9, sl, fp, ip, pc}
    b8e0:	39241000 	stmdbcc	r4!, {ip}
    b8e4:	00031000 	andeq	r1, r3, r0
    b8e8:	249f6470 	ldrcs	r6, [pc], #1136	; b8f0 <__HEAP_SIZE+0xa8f0>
    b8ec:	28100039 	ldmdacs	r0, {r0, r3, r4, r5}
    b8f0:	03100039 	tsteq	r0, #57	; 0x39
    b8f4:	9f607000 	svcls	0x00607000
    b8f8:	10003928 	andne	r3, r0, r8, lsr #18
    b8fc:	10003930 	andne	r3, r0, r0, lsr r9
    b900:	5c700003 	ldclpl	0, cr0, [r0], #-12
    b904:	0039309f 	mlaseq	r9, pc, r0, r3	; <UNPREDICTABLE>
    b908:	00393810 	eorseq	r3, r9, r0, lsl r8
    b90c:	70000310 	andvc	r0, r0, r0, lsl r3
    b910:	39389f58 	ldmdbcc	r8!, {r3, r4, r6, r8, r9, sl, fp, ip, pc}
    b914:	39401000 	stmdbcc	r0, {ip}^
    b918:	00031000 	andeq	r1, r3, r0
    b91c:	409f5470 	addsmi	r5, pc, r0, ror r4	; <UNPREDICTABLE>
    b920:	48100039 	ldmdami	r0, {r0, r3, r4, r5}
    b924:	03100039 	tsteq	r0, #57	; 0x39
    b928:	9f507000 	svcls	0x00507000
    b92c:	10003948 	andne	r3, r0, r8, asr #18
    b930:	10003950 	andne	r3, r0, r0, asr r9
    b934:	4c700003 	ldclmi	0, cr0, [r0], #-12
    b938:	0039509f 	mlaseq	r9, pc, r0, r5	; <UNPREDICTABLE>
    b93c:	00395810 	eorseq	r5, r9, r0, lsl r8
    b940:	70000310 	andvc	r0, r0, r0, lsl r3
    b944:	39589f48 	ldmdbcc	r8, {r3, r6, r8, r9, sl, fp, ip, pc}^
    b948:	39601000 	stmdbcc	r0!, {ip}^
    b94c:	00031000 	andeq	r1, r3, r0
    b950:	609f4470 	addsvs	r4, pc, r0, ror r4	; <UNPREDICTABLE>
    b954:	68100039 	ldmdavs	r0, {r0, r3, r4, r5}
    b958:	03100039 	tsteq	r0, #57	; 0x39
    b95c:	9f407000 	svcls	0x00407000
    b960:	10003968 	andne	r3, r0, r8, ror #18
    b964:	10003970 	andne	r3, r0, r0, ror r9
    b968:	bc700004 	ldcllt	0, cr0, [r0], #-16
    b96c:	39709f7f 	ldmdbcc	r0!, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}^
    b970:	39761000 	ldmdbcc	r6!, {ip}^
    b974:	00041000 	andeq	r1, r4, r0
    b978:	9f7fb870 	svcls	0x007fb870
    b97c:	10003976 	andne	r3, r0, r6, ror r9
    b980:	10003980 	andne	r3, r0, r0, lsl #19
    b984:	00500001 	subseq	r0, r0, r1
	...
    b994:	0038f000 	eorseq	pc, r8, r0
    b998:	00390010 	eorseq	r0, r9, r0, lsl r0
    b99c:	52000110 	andpl	r0, r0, #16, 2
    b9a0:	10003900 	andne	r3, r0, r0, lsl #18
    b9a4:	10003976 	andne	r3, r0, r6, ror r9
    b9a8:	78700002 	ldmdavc	r0!, {r1}^
    b9ac:	10003976 	andne	r3, r0, r6, ror r9
    b9b0:	10003980 	andne	r3, r0, r0, lsl #19
    b9b4:	c0700003 	rsbsgt	r0, r0, r3
	...
    b9c4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    b9c8:	2c100038 	ldccs	0, cr0, [r0], {56}	; 0x38
    b9cc:	01100039 	tsteq	r0, r9, lsr r0
    b9d0:	392c5300 	stmdbcc	ip!, {r8, r9, ip, lr}
    b9d4:	39761000 	ldmdbcc	r6!, {ip}^
    b9d8:	00021000 	andeq	r1, r2, r0
    b9dc:	39766070 	ldmdbcc	r6!, {r4, r5, r6, sp, lr}^
    b9e0:	39801000 	stmibcc	r0, {ip}
    b9e4:	00021000 	andeq	r1, r2, r0
    b9e8:	00002870 	andeq	r2, r0, r0, ror r8
    b9ec:	00000000 	andeq	r0, r0, r0
    b9f0:	38da0000 	ldmcc	sl, {}^	; <UNPREDICTABLE>
    b9f4:	38dc1000 	ldmcc	ip, {ip}^
    b9f8:	00021000 	andeq	r1, r2, r0
    b9fc:	38dc007d 	ldmcc	ip, {r0, r2, r3, r4, r5, r6}^
    ba00:	38ee1000 	stmiacc	lr!, {ip}^
    ba04:	00021000 	andeq	r1, r2, r0
    ba08:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    ba18:	38da0000 	ldmcc	sl, {}^	; <UNPREDICTABLE>
    ba1c:	38e61000 	stmiacc	r6!, {ip}^
    ba20:	00011000 	andeq	r1, r1, r0
    ba24:	0038e650 	eorseq	lr, r8, r0, asr r6
    ba28:	0038e810 	eorseq	lr, r8, r0, lsl r8
    ba2c:	f3000410 	vqshl.u8	d0, d0, d0
    ba30:	e89f5001 	ldm	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    ba34:	eb100038 	bl	40bb1c <__RAM_SIZE+0x30bb1c>
    ba38:	01100038 	tsteq	r0, r8, lsr r0
    ba3c:	38eb5000 	stmiacc	fp!, {ip, lr}^
    ba40:	38ee1000 	stmiacc	lr!, {ip}^
    ba44:	00041000 	andeq	r1, r4, r0
    ba48:	9f5001f3 	svcls	0x005001f3
	...
    ba58:	38de0000 	ldmcc	lr, {}^	; <UNPREDICTABLE>
    ba5c:	38e21000 	stmiacc	r2!, {ip}^
    ba60:	00011000 	andeq	r1, r1, r0
    ba64:	0038e253 	eorseq	lr, r8, r3, asr r2
    ba68:	0038e610 	eorseq	lr, r8, r0, lsl r6
    ba6c:	70000210 	andvc	r0, r0, r0, lsl r2
    ba70:	0038e818 	eorseq	lr, r8, r8, lsl r8
    ba74:	0038eb10 	eorseq	lr, r8, r0, lsl fp
    ba78:	70000210 	andvc	r0, r0, r0, lsl r2
    ba7c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    ba88:	0038e200 	eorseq	lr, r8, r0, lsl #4
    ba8c:	0038e610 	eorseq	lr, r8, r0, lsl r6
    ba90:	53000110 	movwpl	r0, #272	; 0x110
    ba94:	100038e8 	andne	r3, r0, r8, ror #17
    ba98:	100038eb 	andne	r3, r0, fp, ror #17
    ba9c:	00530001 	subseq	r0, r3, r1
    baa0:	00000000 	andeq	r0, r0, r0
    baa4:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    baa8:	ba100038 	blt	40bb90 <__RAM_SIZE+0x30bb90>
    baac:	02100038 	andseq	r0, r0, #56	; 0x38
    bab0:	ba007d00 	blt	2aeb8 <__HEAP_SIZE+0x29eb8>
    bab4:	da100038 	ble	40bb9c <__RAM_SIZE+0x30bb9c>
    bab8:	02100038 	andseq	r0, r0, #56	; 0x38
    babc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    bac8:	c0000000 	andgt	r0, r0, r0
    bacc:	c3100038 	tstgt	r0, #56	; 0x38
    bad0:	01100038 	tsteq	r0, r8, lsr r0
    bad4:	38c35000 	stmiacc	r3, {ip, lr}^
    bad8:	38da1000 	ldmcc	sl, {ip}^
    badc:	00011000 	andeq	r1, r1, r0
    bae0:	00000054 	andeq	r0, r0, r4, asr r0
    bae4:	00000000 	andeq	r0, r0, r0
    bae8:	00389c00 	eorseq	r9, r8, r0, lsl #24
    baec:	00389e10 	eorseq	r9, r8, r0, lsl lr
    baf0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    baf4:	00389e00 	eorseq	r9, r8, r0, lsl #28
    baf8:	0038b810 	eorseq	fp, r8, r0, lsl r8
    bafc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb00:	00000008 	andeq	r0, r0, r8
    bb04:	00000000 	andeq	r0, r0, r0
    bb08:	00388000 	eorseq	r8, r8, r0
    bb0c:	00388210 	eorseq	r8, r8, r0, lsl r2
    bb10:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb14:	00388200 	eorseq	r8, r8, r0, lsl #4
    bb18:	00389c10 	eorseq	r9, r8, r0, lsl ip
    bb1c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb20:	00000008 	andeq	r0, r0, r8
    bb24:	00000000 	andeq	r0, r0, r0
    bb28:	00370000 	eorseq	r0, r7, r0
    bb2c:	00370210 	eorseq	r0, r7, r0, lsl r2
    bb30:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb34:	00370200 	eorseq	r0, r7, r0, lsl #4
    bb38:	00370410 	eorseq	r0, r7, r0, lsl r4
    bb3c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb40:	00370404 	eorseq	r0, r7, r4, lsl #8
    bb44:	00371410 	eorseq	r1, r7, r0, lsl r4
    bb48:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb4c:	00371410 	eorseq	r1, r7, r0, lsl r4
    bb50:	00371810 	eorseq	r1, r7, r0, lsl r8
    bb54:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb58:	00000004 	andeq	r0, r0, r4
    bb5c:	00000000 	andeq	r0, r0, r0
    bb60:	00371800 	eorseq	r1, r7, r0, lsl #16
    bb64:	00371a10 	eorseq	r1, r7, r0, lsl sl
    bb68:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb6c:	00371a00 	eorseq	r1, r7, r0, lsl #20
    bb70:	00382c10 	eorseq	r2, r8, r0, lsl ip
    bb74:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    bb78:	00000008 	andeq	r0, r0, r8
	...
    bb84:	00010000 	andeq	r0, r1, r0
    bb88:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    bb8c:	24100037 	ldrcs	r0, [r0], #-55	; 0xffffffc9
    bb90:	01100037 	tsteq	r0, r7, lsr r0
    bb94:	37245000 	strcc	r5, [r4, -r0]!
    bb98:	37361000 	ldrcc	r1, [r6, -r0]!
    bb9c:	00011000 	andeq	r1, r1, r0
    bba0:	00373854 	eorseq	r3, r7, r4, asr r8
    bba4:	0037e210 	eorseq	lr, r7, r0, lsl r2
    bba8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    bbac:	100037fe 	strdne	r3, [r0], -lr
    bbb0:	1000380c 	andne	r3, r0, ip, lsl #16
    bbb4:	0c540001 	mrrceq	0, 0, r0, r4, cr1
    bbb8:	0e100038 	mrceq	0, 0, r0, cr0, cr8, {1}
    bbbc:	03100038 	tsteq	r0, #56	; 0x38
    bbc0:	9f017000 	svcls	0x00017000
	...
    bbd0:	10003752 	andne	r3, r0, r2, asr r7
    bbd4:	100037ca 	andne	r3, r0, sl, asr #15
    bbd8:	fe530001 	cdp2	0, 5, cr0, cr3, cr1, {0}
    bbdc:	04100037 	ldreq	r0, [r0], #-55	; 0xffffffc9
    bbe0:	01100038 	tsteq	r0, r8, lsr r0
    bbe4:	00005300 	andeq	r5, r0, r0, lsl #6
    bbe8:	00000000 	andeq	r0, r0, r0
    bbec:	00010000 	andeq	r0, r1, r0
    bbf0:	37e20000 	strbcc	r0, [r2, r0]!
    bbf4:	37f91000 	ldrbcc	r1, [r9, r0]!
    bbf8:	00011000 	andeq	r1, r1, r0
    bbfc:	00381250 	eorseq	r1, r8, r0, asr r2
    bc00:	00382c10 	eorseq	r2, r8, r0, lsl ip
    bc04:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    bc14:	1000380e 	andne	r3, r0, lr, lsl #16
    bc18:	10003812 	andne	r3, r0, r2, lsl r8
    bc1c:	12500001 	subsne	r0, r0, #1
    bc20:	18100038 	ldmdane	r0, {r3, r4, r5}
    bc24:	06100038 			; <UNDEFINED> instruction: 0x06100038
    bc28:	73007400 	movwvc	r7, #1024	; 0x400
    bc2c:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
    bc3c:	00374200 	eorseq	r4, r7, r0, lsl #4
    bc40:	00374610 	eorseq	r4, r7, r0, lsl r6
    bc44:	53000110 	movwpl	r0, #272	; 0x110
    bc48:	10003748 	andne	r3, r0, r8, asr #14
    bc4c:	10003752 	andne	r3, r0, r2, asr r7
    bc50:	04530001 	ldrbeq	r0, [r3], #-1
    bc54:	2c100038 	ldccs	0, cr0, [r0], {56}	; 0x38
    bc58:	01100038 	tsteq	r0, r8, lsr r0
    bc5c:	00005300 	andeq	r5, r0, r0, lsl #6
    bc60:	00000000 	andeq	r0, r0, r0
    bc64:	01010000 	mrseq	r0, (UNDEF: 1)
    bc68:	00000000 	andeq	r0, r0, r0
    bc6c:	1000378e 	andne	r3, r0, lr, lsl #15
    bc70:	100037e2 	andne	r3, r0, r2, ror #15
    bc74:	fe540001 	cdp2	0, 5, cr0, cr4, cr1, {0}
    bc78:	0c100037 	ldceq	0, cr0, [r0], {55}	; 0x37
    bc7c:	01100038 	tsteq	r0, r8, lsr r0
    bc80:	380c5400 	stmdacc	ip, {sl, ip, lr}
    bc84:	380e1000 	stmdacc	lr, {ip}
    bc88:	00031000 	andeq	r1, r3, r0
    bc8c:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
	...
    bc98:	0037ce01 	eorseq	ip, r7, r1, lsl #28
    bc9c:	0037e210 	eorseq	lr, r7, r0, lsl r2
    bca0:	53000110 	movwpl	r0, #272	; 0x110
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000074 	andeq	r0, r0, r4, ror r0
   4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	10000800 	andne	r0, r0, r0, lsl #16
}
  14:	00000044 	andeq	r0, r0, r4, asr #32
        if(ch == '\n' || it >= size) {
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	10000844 	andne	r0, r0, r4, asr #16
  2c:	00000068 	andeq	r0, r0, r8, rrx
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	100008ac 	andne	r0, r0, ip, lsr #17
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	0000001c 	andeq	r0, r0, ip, lsl r0
  38:	100008c8 	andne	r0, r0, r8, asr #17
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	100008e0 	andne	r0, r0, r0, ror #17
        BaseType_t xReturn = pdFAIL;
  44:	00000018 	andeq	r0, r0, r8, lsl r0
    }
  48:	100008f8 	strdne	r0, [r0], -r8
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	10000910 	andne	r0, r0, r0, lsl r9
        pc = *sp;
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	10000928 	andne	r0, r0, r8, lsr #18
    return pc;
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
        return 0;
  60:	10000940 	andne	r0, r0, r0, asr #18
  64:	00000024 	andeq	r0, r0, r4, lsr #32
  68:	10000964 	andne	r0, r0, r4, ror #18
  6c:	00000038 	andeq	r0, r0, r8, lsr r0
	...
  78:	00000024 	andeq	r0, r0, r4, lsr #32
  7c:	077e0002 	ldrbeq	r0, [lr, -r2]!
            prvUnlockQueue( pxQueue );
  80:	00040000 	andeq	r0, r4, r0
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  8c:	00000010 	andeq	r0, r0, r0, lsl r0
  90:	1000099c 	mulne	r0, ip, r9
        taskENTER_CRITICAL();
  94:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
                if( xTicksToWait == ( TickType_t ) 0 )
  a0:	000000a4 	andeq	r0, r0, r4, lsr #1
                else if( xEntryTimeSet == pdFALSE )
  a4:	0c670002 	stcleq	0, cr0, [r7], #-8
        taskEXIT_CRITICAL();
  a8:	00040000 	andeq	r0, r4, r0
	...
        prvLockQueue( pxQueue );
  b4:	00000008 	andeq	r0, r0, r8
  b8:	100009c8 	andne	r0, r0, r8, asr #19
  bc:	00000002 	andeq	r0, r0, r2
  c0:	00000000 	andeq	r0, r0, r0
  c4:	0000000e 	andeq	r0, r0, lr
  c8:	100009ca 	andne	r0, r0, sl, asr #19
  cc:	00000024 	andeq	r0, r0, r4, lsr #32
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	100009ee 	andne	r0, r0, lr, ror #19
  d4:	0000007e 	andeq	r0, r0, lr, ror r0
  d8:	10000a6c 	andne	r0, r0, ip, ror #20
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	00000138 	andeq	r0, r0, r8, lsr r1
  e0:	10000ba4 	andne	r0, r0, r4, lsr #23
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	00000094 	muleq	r0, r4, r0
  e8:	10000c38 	andne	r0, r0, r8, lsr ip
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	000000c6 	andeq	r0, r0, r6, asr #1
  f0:	10000d00 	andne	r0, r0, r0, lsl #26
                prvUnlockQueue( pxQueue );
  f4:	000003ea 	andeq	r0, r0, sl, ror #7
  f8:	100010f0 	strdne	r1, [r0], -r0
                if( xTaskResumeAll() == pdFALSE )
  fc:	00000396 	muleq	r0, r6, r3
 100:	10001488 	andne	r1, r0, r8, lsl #9
                    taskYIELD_WITHIN_API();
 104:	00000680 	andeq	r0, r0, r0, lsl #13
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001b08 	andne	r1, r0, r8, lsl #22
                return errQUEUE_EMPTY;
 10c:	0000000c 	andeq	r0, r0, ip
                        taskENTER_CRITICAL();
 110:	10001b14 	andne	r1, r0, r4, lsl fp
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	00000000 	andeq	r0, r0, r0
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	0000002c 	andeq	r0, r0, ip, lsr #32
                        taskEXIT_CRITICAL();
 120:	00000000 	andeq	r0, r0, r0
 124:	00000028 	andeq	r0, r0, r8, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000020 	andeq	r0, r0, r0, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 148:	00000044 	andeq	r0, r0, r4, asr #32
 14c:	282c0002 	stmdacs	ip!, {r1}
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	10001b40 	andne	r1, r0, r0, asr #22
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000014 	andeq	r0, r0, r4, lsl r0
 168:	10001b54 	andne	r1, r0, r4, asr fp
 16c:	0000001e 	andeq	r0, r0, lr, lsl r0
 170:	10001b74 	andne	r1, r0, r4, ror fp
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000008 	andeq	r0, r0, r8
 180:	00000000 	andeq	r0, r0, r0
 184:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 190:	00000074 	andeq	r0, r0, r4, ror r0
 194:	2a7f0002 	bcs	1fc01a4 <__RAM_SIZE+0x1ec01a4>
 198:	00040000 	andeq	r0, r4, r0
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	10001b98 	mulne	r0, r8, fp
 1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1a8:	10001bc4 	andne	r1, r0, r4, asr #23
 1ac:	00000036 	andeq	r0, r0, r6, lsr r0
 1b0:	10001bfc 	strdne	r1, [r0], -ip
 1b4:	0000007c 	andeq	r0, r0, ip, ror r0
 1b8:	10001c78 	andne	r1, r0, r8, ror ip
 1bc:	00000018 	andeq	r0, r0, r8, lsl r0
 1c0:	10001c90 	mulne	r0, r0, ip
 1c4:	00000008 	andeq	r0, r0, r8
 1c8:	10001c98 	mulne	r0, r8, ip
 1cc:	00000050 	andeq	r0, r0, r0, asr r0
 1d0:	10001ce8 	andne	r1, r0, r8, ror #25
 1d4:	000001ac 	andeq	r0, r0, ip, lsr #3
 1d8:	10001e94 	mulne	r0, r4, lr
 1dc:	00000006 	andeq	r0, r0, r6
 1e0:	10001e9c 	mulne	r0, ip, lr
 1e4:	00000008 	andeq	r0, r0, r8
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000008 	andeq	r0, r0, r8
 1f0:	00000000 	andeq	r0, r0, r0
 1f4:	00000008 	andeq	r0, r0, r8
 1f8:	10001ea4 	andne	r1, r0, r4, lsr #29
 1fc:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 208:	00000034 	andeq	r0, r0, r4, lsr r0
 20c:	34be0002 	ldrtcc	r0, [lr], #2
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	10001eb8 			; <UNDEFINED> instruction: 0x10001eb8
 21c:	000000fc 	strdeq	r0, [r0], -ip
 220:	10001fb4 			; <UNDEFINED> instruction: 0x10001fb4
 224:	0000000e 	andeq	r0, r0, lr
 228:	00000000 	andeq	r0, r0, r0
 22c:	00000020 	andeq	r0, r0, r0, lsr #32
 230:	10001fc4 	andne	r1, r0, r4, asr #31
 234:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 240:	00000024 	andeq	r0, r0, r4, lsr #32
 244:	3c640002 	stclcc	0, cr0, [r4], #-8
 248:	00040000 	andeq	r0, r4, r0
	...
 254:	00000062 	andeq	r0, r0, r2, rrx
 258:	10002010 	andne	r2, r0, r0, lsl r0
 25c:	00000074 	andeq	r0, r0, r4, ror r0
	...
 268:	0000003c 	andeq	r0, r0, ip, lsr r0
 26c:	40b20002 	adcsmi	r0, r2, r2
 270:	00040000 	andeq	r0, r4, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	10002084 	andne	r2, r0, r4, lsl #1
 27c:	0000001a 	andeq	r0, r0, sl, lsl r0
 280:	1000209e 	mulne	r0, lr, r0
 284:	00000006 	andeq	r0, r0, r6
 288:	00000000 	andeq	r0, r0, r0
 28c:	00000016 	andeq	r0, r0, r6, lsl r0
 290:	100020a4 	andne	r2, r0, r4, lsr #1
 294:	00000032 	andeq	r0, r0, r2, lsr r0
 298:	100020d6 	ldrdne	r2, [r0], -r6
 29c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 2a8:	00000174 	andeq	r0, r0, r4, ror r1
 2ac:	43810002 	orrmi	r0, r1, #2
 2b0:	00040000 	andeq	r0, r4, r0
	...
 2bc:	00000010 	andeq	r0, r0, r0, lsl r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	0000001e 	andeq	r0, r0, lr, lsl r0
 2c8:	100020fa 	strdne	r2, [r0], -sl
 2cc:	0000001a 	andeq	r0, r0, sl, lsl r0
 2d0:	10002114 	andne	r2, r0, r4, lsl r1
 2d4:	00000076 	andeq	r0, r0, r6, ror r0
 2d8:	1000218a 	andne	r2, r0, sl, lsl #3
 2dc:	00000024 	andeq	r0, r0, r4, lsr #32
 2e0:	100021ae 	andne	r2, r0, lr, lsr #3
 2e4:	00000058 	andeq	r0, r0, r8, asr r0
 2e8:	10002206 	andne	r2, r0, r6, lsl #4
 2ec:	00000082 	andeq	r0, r0, r2, lsl #1
 2f0:	10002288 	andne	r2, r0, r8, lsl #5
 2f4:	00000086 	andeq	r0, r0, r6, lsl #1
 2f8:	1000230e 	andne	r2, r0, lr, lsl #6
 2fc:	00000026 	andeq	r0, r0, r6, lsr #32
 300:	10002334 	andne	r2, r0, r4, lsr r3
 304:	0000003e 	andeq	r0, r0, lr, lsr r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000018 	andeq	r0, r0, r8, lsl r0
 310:	00000000 	andeq	r0, r0, r0
 314:	00000056 	andeq	r0, r0, r6, asr r0
 318:	00000000 	andeq	r0, r0, r0
 31c:	0000002a 	andeq	r0, r0, sl, lsr #32
 320:	00000000 	andeq	r0, r0, r0
 324:	00000020 	andeq	r0, r0, r0, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	0000010c 	andeq	r0, r0, ip, lsl #2
 330:	00000000 	andeq	r0, r0, r0
 334:	00000018 	andeq	r0, r0, r8, lsl r0
 338:	00000000 	andeq	r0, r0, r0
 33c:	00000016 	andeq	r0, r0, r6, lsl r0
 340:	00000000 	andeq	r0, r0, r0
 344:	0000001e 	andeq	r0, r0, lr, lsl r0
 348:	00000000 	andeq	r0, r0, r0
 34c:	0000002c 	andeq	r0, r0, ip, lsr #32
 350:	00000000 	andeq	r0, r0, r0
 354:	000000bc 	strheq	r0, [r0], -ip
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000086 	andeq	r0, r0, r6, lsl #1
 360:	10002372 	andne	r2, r0, r2, ror r3
 364:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000126 	andeq	r0, r0, r6, lsr #2
 370:	00000000 	andeq	r0, r0, r0
 374:	0000002c 	andeq	r0, r0, ip, lsr #32
 378:	00000000 	andeq	r0, r0, r0
 37c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 380:	00000000 	andeq	r0, r0, r0
 384:	00000080 	andeq	r0, r0, r0, lsl #1
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000002c 	andeq	r0, r0, ip, lsr #32
 390:	00000000 	andeq	r0, r0, r0
 394:	00000012 	andeq	r0, r0, r2, lsl r0
 398:	00000000 	andeq	r0, r0, r0
 39c:	00000016 	andeq	r0, r0, r6, lsl r0
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	00000004 	andeq	r0, r0, r4
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	00000010 	andeq	r0, r0, r0, lsl r0
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	00000004 	andeq	r0, r0, r4
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	00000004 	andeq	r0, r0, r4
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000006 	andeq	r0, r0, r6
 3c8:	00000000 	andeq	r0, r0, r0
 3cc:	00000004 	andeq	r0, r0, r4
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	00000004 	andeq	r0, r0, r4
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	0000000c 	andeq	r0, r0, ip
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	00000010 	andeq	r0, r0, r0, lsl r0
 3e8:	10002462 	andne	r2, r0, r2, ror #8
 3ec:	00000052 	andeq	r0, r0, r2, asr r0
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	0000000c 	andeq	r0, r0, ip
 3f8:	00000000 	andeq	r0, r0, r0
 3fc:	00000026 	andeq	r0, r0, r6, lsr #32
 400:	00000000 	andeq	r0, r0, r0
 404:	00000026 	andeq	r0, r0, r6, lsr #32
 408:	00000000 	andeq	r0, r0, r0
 40c:	00000018 	andeq	r0, r0, r8, lsl r0
 410:	00000000 	andeq	r0, r0, r0
 414:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 420:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
 424:	69240002 	stmdbvs	r4!, {r1}
 428:	00040000 	andeq	r0, r4, r0
	...
 434:	00000044 	andeq	r0, r0, r4, asr #32
 438:	100024b4 			; <UNDEFINED> instruction: 0x100024b4
 43c:	00000040 	andeq	r0, r0, r0, asr #32
 440:	00000000 	andeq	r0, r0, r0
 444:	0000003e 	andeq	r0, r0, lr, lsr r0
 448:	100024f4 	strdne	r2, [r0], -r4
 44c:	00000012 	andeq	r0, r0, r2, lsl r0
 450:	10002508 	andne	r2, r0, r8, lsl #10
 454:	00000028 	andeq	r0, r0, r8, lsr #32
 458:	10002530 	andne	r2, r0, r0, lsr r5
 45c:	00000098 	muleq	r0, r8, r0
 460:	100025c8 	andne	r2, r0, r8, asr #11
 464:	00000052 	andeq	r0, r0, r2, asr r0
 468:	1000261c 	andne	r2, r0, ip, lsl r6
 46c:	00000068 	andeq	r0, r0, r8, rrx
 470:	10002684 	andne	r2, r0, r4, lsl #13
 474:	000000c0 	andeq	r0, r0, r0, asr #1
 478:	10002744 	andne	r2, r0, r4, asr #14
 47c:	00000062 	andeq	r0, r0, r2, rrx
 480:	100027a6 	andne	r2, r0, r6, lsr #15
 484:	00000024 	andeq	r0, r0, r4, lsr #32
 488:	100027cc 	andne	r2, r0, ip, asr #15
 48c:	0000004c 	andeq	r0, r0, ip, asr #32
 490:	10002818 	andne	r2, r0, r8, lsl r8
 494:	000000a8 	andeq	r0, r0, r8, lsr #1
 498:	100028c0 	andne	r2, r0, r0, asr #17
 49c:	00000028 	andeq	r0, r0, r8, lsr #32
 4a0:	100028e8 	andne	r2, r0, r8, ror #17
 4a4:	00000022 	andeq	r0, r0, r2, lsr #32
 4a8:	00000000 	andeq	r0, r0, r0
 4ac:	0000009c 	muleq	r0, ip, r0
 4b0:	1000290c 	andne	r2, r0, ip, lsl #18
 4b4:	0000009c 	muleq	r0, ip, r0
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000020 	andeq	r0, r0, r0, lsr #32
 4c0:	00000000 	andeq	r0, r0, r0
 4c4:	00000020 	andeq	r0, r0, r0, lsr #32
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	00000020 	andeq	r0, r0, r0, lsr #32
 4d0:	00000000 	andeq	r0, r0, r0
 4d4:	00000020 	andeq	r0, r0, r0, lsr #32
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	000000d8 	ldrdeq	r0, [r0], -r8
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	00000084 	andeq	r0, r0, r4, lsl #1
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	000000ac 	andeq	r0, r0, ip, lsr #1
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4f8:	100029a8 	andne	r2, r0, r8, lsr #19
 4fc:	00000010 	andeq	r0, r0, r0, lsl r0
 500:	100029b8 			; <UNDEFINED> instruction: 0x100029b8
 504:	0000000c 	andeq	r0, r0, ip
 508:	00000000 	andeq	r0, r0, r0
 50c:	0000000c 	andeq	r0, r0, ip
 510:	100029c4 	andne	r2, r0, r4, asr #19
 514:	0000000c 	andeq	r0, r0, ip
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000014 	andeq	r0, r0, r4, lsl r0
 520:	00000000 	andeq	r0, r0, r0
 524:	00000034 	andeq	r0, r0, r4, lsr r0
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000000c 	andeq	r0, r0, ip
 530:	00000000 	andeq	r0, r0, r0
 534:	0000000c 	andeq	r0, r0, ip
 538:	100029d0 	ldrdne	r2, [r0], -r0
 53c:	0000003c 	andeq	r0, r0, ip, lsr r0
 540:	10002a0c 	andne	r2, r0, ip, lsl #20
 544:	00000160 	andeq	r0, r0, r0, ror #2
 548:	10002b6c 	andne	r2, r0, ip, ror #22
 54c:	00000130 	andeq	r0, r0, r0, lsr r1
 550:	00000000 	andeq	r0, r0, r0
 554:	0000005c 	andeq	r0, r0, ip, asr r0
 558:	10002c9c 	mulne	r0, ip, ip
 55c:	0000001e 	andeq	r0, r0, lr, lsl r0
 560:	10002cbc 			; <UNDEFINED> instruction: 0x10002cbc
 564:	00000038 	andeq	r0, r0, r8, lsr r0
 568:	00000000 	andeq	r0, r0, r0
 56c:	0000007c 	andeq	r0, r0, ip, ror r0
 570:	00000000 	andeq	r0, r0, r0
 574:	00000024 	andeq	r0, r0, r4, lsr #32
 578:	00000000 	andeq	r0, r0, r0
 57c:	000000a4 	andeq	r0, r0, r4, lsr #1
 580:	00000000 	andeq	r0, r0, r0
 584:	00000020 	andeq	r0, r0, r0, lsr #32
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000020 	andeq	r0, r0, r0, lsr #32
 590:	00000000 	andeq	r0, r0, r0
 594:	00000020 	andeq	r0, r0, r0, lsr #32
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000020 	andeq	r0, r0, r0, lsr #32
 5a0:	10002cf4 	strdne	r2, [r0], -r4
 5a4:	00000084 	andeq	r0, r0, r4, lsl #1
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	000000a4 	andeq	r0, r0, r4, lsr #1
 5b0:	10002d78 	andne	r2, r0, r8, ror sp
 5b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	00000040 	andeq	r0, r0, r0, asr #32
 5c0:	10002d94 	mulne	r0, r4, sp
 5c4:	0000003c 	andeq	r0, r0, ip, lsr r0
 5c8:	10002dd0 	ldrdne	r2, [r0], -r0
 5cc:	000000e4 	andeq	r0, r0, r4, ror #1
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	000000b8 	strheq	r0, [r0], -r8
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	00000024 	andeq	r0, r0, r4, lsr #32
 5e0:	10002eb4 			; <UNDEFINED> instruction: 0x10002eb4
 5e4:	00000018 	andeq	r0, r0, r8, lsl r0
 5e8:	10002ecc 	andne	r2, r0, ip, asr #29
 5ec:	0000007c 	andeq	r0, r0, ip, ror r0
 5f0:	10002f48 	andne	r2, r0, r8, asr #30
 5f4:	0000000c 	andeq	r0, r0, ip
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	0000000a 	andeq	r0, r0, sl
 600:	00000000 	andeq	r0, r0, r0
 604:	00000006 	andeq	r0, r0, r6
 608:	10002f54 	andne	r2, r0, r4, asr pc
 60c:	00000048 	andeq	r0, r0, r8, asr #32
 610:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 614:	000000b4 	strheq	r0, [r0], -r4
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000034 	andeq	r0, r0, r4, lsr r0
 620:	00000000 	andeq	r0, r0, r0
 624:	000000a4 	andeq	r0, r0, r4, lsr #1
 628:	00000000 	andeq	r0, r0, r0
 62c:	00000018 	andeq	r0, r0, r8, lsl r0
 630:	10003050 	andne	r3, r0, r0, asr r0
 634:	0000000c 	andeq	r0, r0, ip
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000010 	andeq	r0, r0, r0, lsl r0
 640:	00000000 	andeq	r0, r0, r0
 644:	00000020 	andeq	r0, r0, r0, lsr #32
 648:	00000000 	andeq	r0, r0, r0
 64c:	000000b8 	strheq	r0, [r0], -r8
 650:	1000305c 	andne	r3, r0, ip, asr r0
 654:	00000080 	andeq	r0, r0, r0, lsl #1
 658:	00000000 	andeq	r0, r0, r0
 65c:	00000090 	muleq	r0, r0, r0
 660:	00000000 	andeq	r0, r0, r0
 664:	00000018 	andeq	r0, r0, r8, lsl r0
 668:	00000000 	andeq	r0, r0, r0
 66c:	00000014 	andeq	r0, r0, r4, lsl r0
 670:	00000000 	andeq	r0, r0, r0
 674:	000000a8 	andeq	r0, r0, r8, lsr #1
 678:	00000000 	andeq	r0, r0, r0
 67c:	000000cc 	andeq	r0, r0, ip, asr #1
 680:	00000000 	andeq	r0, r0, r0
 684:	0000011c 	andeq	r0, r0, ip, lsl r1
 688:	00000000 	andeq	r0, r0, r0
 68c:	00000158 	andeq	r0, r0, r8, asr r1
 690:	00000000 	andeq	r0, r0, r0
 694:	000000ec 	andeq	r0, r0, ip, ror #1
 698:	00000000 	andeq	r0, r0, r0
 69c:	00000038 	andeq	r0, r0, r8, lsr r0
 6a0:	00000000 	andeq	r0, r0, r0
 6a4:	00000034 	andeq	r0, r0, r4, lsr r0
 6a8:	100030dc 	ldrdne	r3, [r0], -ip
 6ac:	00000018 	andeq	r0, r0, r8, lsl r0
 6b0:	100030f4 	strdne	r3, [r0], -r4
 6b4:	0000006c 	andeq	r0, r0, ip, rrx
 6b8:	10003160 	andne	r3, r0, r0, ror #2
 6bc:	00000048 	andeq	r0, r0, r8, asr #32
 6c0:	100031a8 	andne	r3, r0, r8, lsr #3
 6c4:	00000018 	andeq	r0, r0, r8, lsl r0
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	00000074 	andeq	r0, r0, r4, ror r0
	...
 6d8:	00000114 	andeq	r0, r0, r4, lsl r1
 6dc:	a6fd0002 	ldrbtge	r0, [sp], r2
 6e0:	00040000 	andeq	r0, r4, r0
 6e4:	00000000 	andeq	r0, r0, r0
 6e8:	100031c0 	andne	r3, r0, r0, asr #3
 6ec:	00000020 	andeq	r0, r0, r0, lsr #32
 6f0:	100031e0 	andne	r3, r0, r0, ror #3
 6f4:	00000048 	andeq	r0, r0, r8, asr #32
 6f8:	10003228 	andne	r3, r0, r8, lsr #4
 6fc:	00000028 	andeq	r0, r0, r8, lsr #32
 700:	10003250 	andne	r3, r0, r0, asr r2
 704:	00000040 	andeq	r0, r0, r0, asr #32
 708:	10003290 	mulne	r0, r0, r2
 70c:	00000030 	andeq	r0, r0, r0, lsr r0
 710:	100032c0 	andne	r3, r0, r0, asr #5
 714:	0000002c 	andeq	r0, r0, ip, lsr #32
 718:	100032ec 	andne	r3, r0, ip, ror #5
 71c:	00000068 	andeq	r0, r0, r8, rrx
 720:	10003354 	andne	r3, r0, r4, asr r3
 724:	000000f8 	strdeq	r0, [r0], -r8
 728:	1000344c 	andne	r3, r0, ip, asr #8
 72c:	00000016 	andeq	r0, r0, r6, lsl r0
 730:	10003464 	andne	r3, r0, r4, ror #8
 734:	00000060 	andeq	r0, r0, r0, rrx
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000036 	andeq	r0, r0, r6, lsr r0
 740:	100034c4 	andne	r3, r0, r4, asr #9
 744:	0000005c 	andeq	r0, r0, ip, asr r0
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000038 	andeq	r0, r0, r8, lsr r0
 750:	00000000 	andeq	r0, r0, r0
 754:	00000020 	andeq	r0, r0, r0, lsr #32
 758:	00000000 	andeq	r0, r0, r0
 75c:	0000004c 	andeq	r0, r0, ip, asr #32
 760:	00000000 	andeq	r0, r0, r0
 764:	00000034 	andeq	r0, r0, r4, lsr r0
 768:	00000000 	andeq	r0, r0, r0
 76c:	0000000c 	andeq	r0, r0, ip
 770:	00000000 	andeq	r0, r0, r0
 774:	00000004 	andeq	r0, r0, r4
 778:	00000000 	andeq	r0, r0, r0
 77c:	0000002c 	andeq	r0, r0, ip, lsr #32
 780:	00000000 	andeq	r0, r0, r0
 784:	00000020 	andeq	r0, r0, r0, lsr #32
 788:	00000000 	andeq	r0, r0, r0
 78c:	00000008 	andeq	r0, r0, r8
 790:	00000000 	andeq	r0, r0, r0
 794:	00000004 	andeq	r0, r0, r4
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000014 	andeq	r0, r0, r4, lsl r0
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000004 	andeq	r0, r0, r4
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00000020 	andeq	r0, r0, r0, lsr #32
 7b0:	00000000 	andeq	r0, r0, r0
 7b4:	00000012 	andeq	r0, r0, r2, lsl r0
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	00000012 	andeq	r0, r0, r2, lsl r0
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000028 	andeq	r0, r0, r8, lsr #32
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	00000028 	andeq	r0, r0, r8, lsr #32
 7d0:	00000000 	andeq	r0, r0, r0
 7d4:	00000004 	andeq	r0, r0, r4
 7d8:	00000000 	andeq	r0, r0, r0
 7dc:	00000004 	andeq	r0, r0, r4
 7e0:	00000000 	andeq	r0, r0, r0
 7e4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 7f0:	00000064 	andeq	r0, r0, r4, rrx
 7f4:	c15b0002 	cmpgt	fp, r2
 7f8:	00040000 	andeq	r0, r4, r0
 7fc:	00000000 	andeq	r0, r0, r0
 800:	10003520 	andne	r3, r0, r0, lsr #10
 804:	00000058 	andeq	r0, r0, r8, asr r0
 808:	10003578 	andne	r3, r0, r8, ror r5
 80c:	00000064 	andeq	r0, r0, r4, rrx
 810:	100035dc 	ldrdne	r3, [r0], -ip
 814:	000000d4 	ldrdeq	r0, [r0], -r4
 818:	100036b0 			; <UNDEFINED> instruction: 0x100036b0
 81c:	00000050 	andeq	r0, r0, r0, asr r0
 820:	00000000 	andeq	r0, r0, r0
 824:	0000000c 	andeq	r0, r0, ip
 828:	00000000 	andeq	r0, r0, r0
 82c:	0000000c 	andeq	r0, r0, ip
 830:	00000000 	andeq	r0, r0, r0
 834:	00000002 	andeq	r0, r0, r2
 838:	00000000 	andeq	r0, r0, r0
 83c:	00000032 	andeq	r0, r0, r2, lsr r0
 840:	00000000 	andeq	r0, r0, r0
 844:	00000080 	andeq	r0, r0, r0, lsl #1
 848:	00000000 	andeq	r0, r0, r0
 84c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 858:	00000074 	andeq	r0, r0, r4, ror r0
 85c:	c7740002 	ldrbgt	r0, [r4, -r2]!
 860:	00040000 	andeq	r0, r4, r0
 864:	00000000 	andeq	r0, r0, r0
 868:	10003700 	andne	r3, r0, r0, lsl #14
 86c:	00000018 	andeq	r0, r0, r8, lsl r0
 870:	10003718 	andne	r3, r0, r8, lsl r7
 874:	00000114 	andeq	r0, r0, r4, lsl r1
 878:	1000382c 	andne	r3, r0, ip, lsr #16
 87c:	0000003c 	andeq	r0, r0, ip, lsr r0
 880:	10003868 	andne	r3, r0, r8, ror #16
 884:	00000016 	andeq	r0, r0, r6, lsl r0
 888:	10003880 	andne	r3, r0, r0, lsl #17
 88c:	0000001c 	andeq	r0, r0, ip, lsl r0
 890:	1000389c 	mulne	r0, ip, r8
 894:	0000001c 	andeq	r0, r0, ip, lsl r0
 898:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
 89c:	00000022 	andeq	r0, r0, r2, lsr #32
 8a0:	100038da 	ldrdne	r3, [r0], -sl
 8a4:	00000014 	andeq	r0, r0, r4, lsl r0
 8a8:	100038f0 	strdne	r3, [r0], -r0
 8ac:	00000090 	muleq	r0, r0, r0
 8b0:	10003980 	andne	r3, r0, r0, lsl #19
 8b4:	00000040 	andeq	r0, r0, r0, asr #32
 8b8:	00000000 	andeq	r0, r0, r0
 8bc:	00000002 	andeq	r0, r0, r2
 8c0:	00000000 	andeq	r0, r0, r0
 8c4:	0000000e 	andeq	r0, r0, lr
	...
 8d0:	0000005c 	andeq	r0, r0, ip, asr r0
 8d4:	ccdb0002 	ldclgt	0, cr0, [fp], {2}
 8d8:	00040000 	andeq	r0, r4, r0
 8dc:	00000000 	andeq	r0, r0, r0
 8e0:	100039c0 	andne	r3, r0, r0, asr #19
 8e4:	00000026 	andeq	r0, r0, r6, lsr #32
 8e8:	00000000 	andeq	r0, r0, r0
 8ec:	00000010 	andeq	r0, r0, r0, lsl r0
 8f0:	00000000 	andeq	r0, r0, r0
 8f4:	0000000e 	andeq	r0, r0, lr
 8f8:	00000000 	andeq	r0, r0, r0
 8fc:	0000000e 	andeq	r0, r0, lr
 900:	100039ec 	andne	r3, r0, ip, ror #19
 904:	0000001a 	andeq	r0, r0, sl, lsl r0
 908:	10003a0c 	andne	r3, r0, ip, lsl #20
 90c:	00000016 	andeq	r0, r0, r6, lsl r0
 910:	10003a22 	andne	r3, r0, r2, lsr #20
 914:	0000000e 	andeq	r0, r0, lr
 918:	10003a30 	andne	r3, r0, r0, lsr sl
 91c:	00000044 	andeq	r0, r0, r4, asr #32
 920:	10003a78 	andne	r3, r0, r8, ror sl
 924:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 930:	0000001c 	andeq	r0, r0, ip, lsl r0
 934:	ce590002 	cdpgt	0, 5, cr0, cr9, cr2, {0}
 938:	00040000 	andeq	r0, r4, r0
 93c:	00000000 	andeq	r0, r0, r0
 940:	10003ab0 			; <UNDEFINED> instruction: 0x10003ab0
 944:	00000070 	andeq	r0, r0, r0, ror r0
	...
 950:	0000001c 	andeq	r0, r0, ip, lsl r0
 954:	ce7f0002 	cdpgt	0, 7, cr0, cr15, cr2, {0}
 958:	00040000 	andeq	r0, r4, r0
 95c:	00000000 	andeq	r0, r0, r0
 960:	10003b20 	andne	r3, r0, r0, lsr #22
 964:	00000054 	andeq	r0, r0, r4, asr r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	10000874 	andne	r0, r0, r4, ror r8
   4:	10000878 	andne	r0, r0, r8, ror r8
        xReturn = pdFALSE;
   8:	10000882 	andne	r0, r0, r2, lsl #17
}
   c:	10000892 	mulne	r0, r2, r8
	...
        if(ch == '\n' || it >= size) {
  18:	10000800 	andne	r0, r0, r0, lsl #16
}
  1c:	10000844 	andne	r0, r0, r4, asr #16
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	10000844 	andne	r0, r0, r4, asr #16
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	100008ac 	andne	r0, r0, ip, lsr #17
  38:	100008ac 	andne	r0, r0, ip, lsr #17
  3c:	100008c8 	andne	r0, r0, r8, asr #17
  40:	100008c8 	andne	r0, r0, r8, asr #17
        BaseType_t xReturn = pdFAIL;
  44:	100008e0 	andne	r0, r0, r0, ror #17
    }
  48:	100008e0 	andne	r0, r0, r0, ror #17
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
  4c:	100008f8 	strdne	r0, [r0], -r8
  50:	100008f8 	strdne	r0, [r0], -r8
        pc = *sp;
  54:	10000910 	andne	r0, r0, r0, lsl r9
  58:	10000910 	andne	r0, r0, r0, lsl r9
    return pc;
  5c:	10000928 	andne	r0, r0, r8, lsr #18
        return 0;
  60:	10000928 	andne	r0, r0, r8, lsr #18
  64:	10000940 	andne	r0, r0, r0, asr #18
  68:	10000940 	andne	r0, r0, r0, asr #18
  6c:	10000964 	andne	r0, r0, r4, ror #18
  70:	10000964 	andne	r0, r0, r4, ror #18
  74:	1000099c 	mulne	r0, ip, r9
	...
            prvUnlockQueue( pxQueue );
  80:	00000001 	andeq	r0, r0, r1
            ( void ) xTaskResumeAll();
  84:	00000001 	andeq	r0, r0, r1
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  88:	1000099c 	mulne	r0, ip, r9
  8c:	100009c8 	andne	r0, r0, r8, asr #19
	...
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
  98:	10000a0e 	andne	r0, r0, lr, lsl #20
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	10000a10 	andne	r0, r0, r0, lsl sl
  a0:	10000a12 	andne	r0, r0, r2, lsl sl
                else if( xEntryTimeSet == pdFALSE )
  a4:	10000a30 	andne	r0, r0, r0, lsr sl
	...
        prvLockQueue( pxQueue );
  b0:	10000bc2 	andne	r0, r0, r2, asr #23
  b4:	10000bdc 	ldrdne	r0, [r0], -ip
  b8:	10000be4 	andne	r0, r0, r4, ror #23
  bc:	10000be8 	andne	r0, r0, r8, ror #23
  c0:	10000be8 	andne	r0, r0, r8, ror #23
  c4:	10000c16 	andne	r0, r0, r6, lsl ip
	...
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	10000c6e 	andne	r0, r0, lr, ror #24
  d4:	10000c90 	mulne	r0, r0, ip
  d8:	10000c9e 	mulne	r0, lr, ip
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	10000ca4 	andne	r0, r0, r4, lsr #25
  e0:	10000ca4 	andne	r0, r0, r4, lsr #25
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	10000ccc 	andne	r0, r0, ip, asr #25
	...
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  f0:	1000149c 	mulne	r0, ip, r4
                prvUnlockQueue( pxQueue );
  f4:	1000149e 	mulne	r0, lr, r4
  f8:	10001948 	andne	r1, r0, r8, asr #18
                if( xTaskResumeAll() == pdFALSE )
  fc:	100019ba 			; <UNDEFINED> instruction: 0x100019ba
	...
                    if( xInheritanceOccurred != pdFALSE )
 108:	1000171a 	andne	r1, r0, sl, lsl r7
                return errQUEUE_EMPTY;
 10c:	1000174c 	andne	r1, r0, ip, asr #14
                        taskENTER_CRITICAL();
 110:	100018a0 	andne	r1, r0, r0, lsr #17
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	100018ba 			; <UNDEFINED> instruction: 0x100018ba
	...
                        taskEXIT_CRITICAL();
 120:	1000176a 	andne	r1, r0, sl, ror #14
 124:	100017a0 	andne	r1, r0, r0, lsr #15
 128:	10001822 	andne	r1, r0, r2, lsr #16
 12c:	1000183e 	andne	r1, r0, lr, lsr r8
	...
 138:	100017a8 	andne	r1, r0, r8, lsr #15
 13c:	100017e6 	andne	r1, r0, r6, ror #15
 140:	100017e8 	andne	r1, r0, r8, ror #15
 144:	100017f0 	strdne	r1, [r0], -r0
	...
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
 158:	100009c8 	andne	r0, r0, r8, asr #19
 15c:	100009ca 	andne	r0, r0, sl, asr #19
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	100009ca 	andne	r0, r0, sl, asr #19
 16c:	100009ee 	andne	r0, r0, lr, ror #19
 170:	100009ee 	andne	r0, r0, lr, ror #19
 174:	10000a6c 	andne	r0, r0, ip, ror #20
 178:	10000a6c 	andne	r0, r0, ip, ror #20
 17c:	10000ba4 	andne	r0, r0, r4, lsr #23
 180:	10000ba4 	andne	r0, r0, r4, lsr #23
 184:	10000c38 	andne	r0, r0, r8, lsr ip
 188:	10000c38 	andne	r0, r0, r8, lsr ip
 18c:	10000cfe 	strdne	r0, [r0], -lr
 190:	10000d00 	andne	r0, r0, r0, lsl #26
 194:	100010ea 	andne	r1, r0, sl, ror #1
 198:	100010f0 	strdne	r1, [r0], -r0
 19c:	10001486 	andne	r1, r0, r6, lsl #9
 1a0:	10001488 	andne	r1, r0, r8, lsl #9
 1a4:	10001b08 	andne	r1, r0, r8, lsl #22
 1a8:	10001b08 	andne	r1, r0, r8, lsl #22
 1ac:	10001b14 	andne	r1, r0, r4, lsl fp
 1b0:	10001b14 	andne	r1, r0, r4, lsl fp
 1b4:	10001b40 	andne	r1, r0, r0, asr #22
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
	...
 1e8:	10001b40 	andne	r1, r0, r0, asr #22
 1ec:	10001b54 	andne	r1, r0, r4, asr fp
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	10001b54 	andne	r1, r0, r4, asr fp
 1fc:	10001b72 	andne	r1, r0, r2, ror fp
 200:	10001b74 	andne	r1, r0, r4, ror fp
 204:	10001b98 	mulne	r0, r8, fp
 208:	00000001 	andeq	r0, r0, r1
 20c:	00000001 	andeq	r0, r0, r1
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
	...
 220:	10001b98 	mulne	r0, r8, fp
 224:	10001bc4 	andne	r1, r0, r4, asr #23
 228:	10001bc4 	andne	r1, r0, r4, asr #23
 22c:	10001bfa 	strdne	r1, [r0], -sl
 230:	10001bfc 	strdne	r1, [r0], -ip
 234:	10001c78 	andne	r1, r0, r8, ror ip
 238:	10001c78 	andne	r1, r0, r8, ror ip
 23c:	10001c90 	mulne	r0, r0, ip
 240:	10001c90 	mulne	r0, r0, ip
 244:	10001c98 	mulne	r0, r8, ip
 248:	10001c98 	mulne	r0, r8, ip
 24c:	10001ce8 	andne	r1, r0, r8, ror #25
 250:	10001ce8 	andne	r1, r0, r8, ror #25
 254:	10001e94 	mulne	r0, r4, lr
 258:	10001e94 	mulne	r0, r4, lr
 25c:	10001e9a 	mulne	r0, sl, lr
 260:	10001e9c 	mulne	r0, ip, lr
 264:	10001ea4 	andne	r1, r0, r4, lsr #29
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
 274:	00000001 	andeq	r0, r0, r1
 278:	10001ea4 	andne	r1, r0, r4, lsr #29
 27c:	10001eb8 			; <UNDEFINED> instruction: 0x10001eb8
	...
 288:	10001eb8 			; <UNDEFINED> instruction: 0x10001eb8
 28c:	10001fb4 			; <UNDEFINED> instruction: 0x10001fb4
 290:	10001fb4 			; <UNDEFINED> instruction: 0x10001fb4
 294:	10001fc2 	andne	r1, r0, r2, asr #31
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
 2a0:	10001fc4 	andne	r1, r0, r4, asr #31
 2a4:	10002010 	andne	r2, r0, r0, lsl r0
	...
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
 2b8:	10002010 	andne	r2, r0, r0, lsl r0
 2bc:	10002084 	andne	r2, r0, r4, lsl #1
	...
 2c8:	10002084 	andne	r2, r0, r4, lsl #1
 2cc:	1000209e 	mulne	r0, lr, r0
 2d0:	1000209e 	mulne	r0, lr, r0
 2d4:	100020a4 	andne	r2, r0, r4, lsr #1
 2d8:	00000001 	andeq	r0, r0, r1
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	100020a4 	andne	r2, r0, r4, lsr #1
 2e4:	100020d6 	ldrdne	r2, [r0], -r6
 2e8:	100020d6 	ldrdne	r2, [r0], -r6
 2ec:	100020fa 	strdne	r2, [r0], -sl
	...
 2f8:	100021c6 	andne	r2, r0, r6, asr #3
 2fc:	100021f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 300:	100021f4 	strdne	r2, [r0], -r4
 304:	10002206 	andne	r2, r0, r6, lsl #4
	...
 310:	00000001 	andeq	r0, r0, r1
 314:	00000001 	andeq	r0, r0, r1
 318:	00000001 	andeq	r0, r0, r1
 31c:	00000001 	andeq	r0, r0, r1
	...
 328:	00000001 	andeq	r0, r0, r1
 32c:	00000001 	andeq	r0, r0, r1
 330:	00000001 	andeq	r0, r0, r1
 334:	00000001 	andeq	r0, r0, r1
	...
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
	...
 358:	10002380 	andne	r2, r0, r0, lsl #7
 35c:	10002396 	mulne	r0, r6, r3
 360:	1000239a 	mulne	r0, sl, r3
 364:	100023be 			; <UNDEFINED> instruction: 0x100023be
 368:	100023f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 36c:	10002402 	andne	r2, r0, r2, lsl #8
	...
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
	...
 398:	00000001 	andeq	r0, r0, r1
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	00000001 	andeq	r0, r0, r1
 3a4:	00000001 	andeq	r0, r0, r1
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
	...
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
	...
 3d0:	00000001 	andeq	r0, r0, r1
 3d4:	00000001 	andeq	r0, r0, r1
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	100020fa 	strdne	r2, [r0], -sl
 3e4:	10002114 	andne	r2, r0, r4, lsl r1
 3e8:	10002114 	andne	r2, r0, r4, lsl r1
 3ec:	1000218a 	andne	r2, r0, sl, lsl #3
 3f0:	1000218a 	andne	r2, r0, sl, lsl #3
 3f4:	100021ae 	andne	r2, r0, lr, lsr #3
 3f8:	100021ae 	andne	r2, r0, lr, lsr #3
 3fc:	10002206 	andne	r2, r0, r6, lsl #4
 400:	10002206 	andne	r2, r0, r6, lsl #4
 404:	10002288 	andne	r2, r0, r8, lsl #5
 408:	10002288 	andne	r2, r0, r8, lsl #5
 40c:	1000230e 	andne	r2, r0, lr, lsl #6
 410:	1000230e 	andne	r2, r0, lr, lsl #6
 414:	10002334 	andne	r2, r0, r4, lsr r3
 418:	10002334 	andne	r2, r0, r4, lsr r3
 41c:	10002372 	andne	r2, r0, r2, ror r3
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	10002372 	andne	r2, r0, r2, ror r3
 47c:	10002462 	andne	r2, r0, r2, ror #8
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
 4ac:	00000001 	andeq	r0, r0, r1
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
 500:	10002462 	andne	r2, r0, r2, ror #8
 504:	100024b4 			; <UNDEFINED> instruction: 0x100024b4
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
 520:	00000001 	andeq	r0, r0, r1
 524:	00000001 	andeq	r0, r0, r1
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
	...
 538:	10002752 	andne	r2, r0, r2, asr r7
 53c:	10002772 	andne	r2, r0, r2, ror r7
 540:	1000279a 	mulne	r0, sl, r7
 544:	100027a4 	andne	r2, r0, r4, lsr #15
	...
 550:	100027cc 	andne	r2, r0, ip, asr #15
 554:	100027d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 558:	100027d4 	ldrdne	r2, [r0], -r4
 55c:	10002806 	andne	r2, r0, r6, lsl #16
	...
 568:	10002958 	andne	r2, r0, r8, asr r9
 56c:	10002972 	andne	r2, r0, r2, ror r9
 570:	10002988 	andne	r2, r0, r8, lsl #19
 574:	1000298c 	andne	r2, r0, ip, lsl #19
	...
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
 588:	00000001 	andeq	r0, r0, r1
 58c:	00000001 	andeq	r0, r0, r1
	...
 598:	10002a18 	andne	r2, r0, r8, lsl sl
 59c:	10002a2a 	andne	r2, r0, sl, lsr #20
 5a0:	10002a2c 	andne	r2, r0, ip, lsr #20
 5a4:	10002a4a 	andne	r2, r0, sl, asr #20
 5a8:	10002a4c 	andne	r2, r0, ip, asr #20
 5ac:	10002a66 	andne	r2, r0, r6, ror #20
 5b0:	10002a6a 	andne	r2, r0, sl, ror #20
 5b4:	10002b30 	andne	r2, r0, r0, lsr fp
 5b8:	10002b3c 	andne	r2, r0, ip, lsr fp
 5bc:	10002b3e 	andne	r2, r0, lr, lsr fp
	...
 5c8:	10002a7a 	andne	r2, r0, sl, ror sl
 5cc:	10002a80 	andne	r2, r0, r0, lsl #21
 5d0:	10002af2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 5d4:	10002b10 	andne	r2, r0, r0, lsl fp
	...
 5e0:	10002a80 	andne	r2, r0, r0, lsl #21
 5e4:	10002a8a 	andne	r2, r0, sl, lsl #21
 5e8:	10002b16 	andne	r2, r0, r6, lsl fp
 5ec:	10002b30 	andne	r2, r0, r0, lsr fp
	...
 5f8:	10002b72 	andne	r2, r0, r2, ror fp
 5fc:	10002b86 	andne	r2, r0, r6, lsl #23
 600:	10002b8a 	andne	r2, r0, sl, lsl #23
 604:	10002b96 	mulne	r0, r6, fp
 608:	10002b98 	mulne	r0, r8, fp
 60c:	10002c70 	andne	r2, r0, r0, ror ip
 610:	10002c72 	andne	r2, r0, r2, ror ip
 614:	10002c72 	andne	r2, r0, r2, ror ip
	...
 620:	10002b8a 	andne	r2, r0, sl, lsl #23
 624:	10002b90 	mulne	r0, r0, fp
 628:	10002ba6 	andne	r2, r0, r6, lsr #23
 62c:	10002bc6 	andne	r2, r0, r6, asr #23
	...
 638:	10002b90 	mulne	r0, r0, fp
 63c:	10002b96 	mulne	r0, r6, fp
 640:	10002bc6 	andne	r2, r0, r6, asr #23
 644:	10002be4 	andne	r2, r0, r4, ror #23
	...
 650:	10002c3c 	andne	r2, r0, ip, lsr ip
 654:	10002c42 	andne	r2, r0, r2, asr #24
 658:	10002c54 	andne	r2, r0, r4, asr ip
 65c:	10002c70 	andne	r2, r0, r0, ror ip
	...
 668:	00000001 	andeq	r0, r0, r1
 66c:	00000001 	andeq	r0, r0, r1
 670:	00000001 	andeq	r0, r0, r1
 674:	00000001 	andeq	r0, r0, r1
 678:	00000001 	andeq	r0, r0, r1
 67c:	00000001 	andeq	r0, r0, r1
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
	...
 690:	10002cc0 	andne	r2, r0, r0, asr #25
 694:	10002cc8 	andne	r2, r0, r8, asr #25
 698:	10002cda 	ldrdne	r2, [r0], -sl
 69c:	10002cf4 	strdne	r2, [r0], -r4
	...
 6a8:	10002d08 	andne	r2, r0, r8, lsl #26
 6ac:	10002d52 	andne	r2, r0, r2, asr sp
 6b0:	10002d56 	andne	r2, r0, r6, asr sp
 6b4:	10002d78 	andne	r2, r0, r8, ror sp
	...
 6c0:	10002d1e 	andne	r2, r0, lr, lsl sp
 6c4:	10002d4e 	andne	r2, r0, lr, asr #26
 6c8:	10002d56 	andne	r2, r0, r6, asr sp
 6cc:	10002d78 	andne	r2, r0, r8, ror sp
	...
 6d8:	00000001 	andeq	r0, r0, r1
 6dc:	00000001 	andeq	r0, r0, r1
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
	...
 6f0:	00000001 	andeq	r0, r0, r1
 6f4:	00000001 	andeq	r0, r0, r1
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
	...
 708:	10002dd6 	ldrdne	r2, [r0], -r6
 70c:	10002df6 	strdne	r2, [r0], -r6
 710:	10002e72 	andne	r2, r0, r2, ror lr
 714:	10002e78 	andne	r2, r0, r8, ror lr
	...
 720:	10002dfe 	strdne	r2, [r0], -lr
 724:	10002e1c 	andne	r2, r0, ip, lsl lr
 728:	10002e78 	andne	r2, r0, r8, ror lr
 72c:	10002e7e 	andne	r2, r0, lr, ror lr
	...
 738:	00000001 	andeq	r0, r0, r1
 73c:	00000001 	andeq	r0, r0, r1
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
	...
 750:	00000001 	andeq	r0, r0, r1
 754:	00000001 	andeq	r0, r0, r1
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
	...
 768:	10002ed6 	ldrdne	r2, [r0], -r6
 76c:	10002ef4 	strdne	r2, [r0], -r4
 770:	10002efc 	strdne	r2, [r0], -ip
 774:	10002f48 	andne	r2, r0, r8, asr #30
	...
 780:	00000001 	andeq	r0, r0, r1
 784:	00000001 	andeq	r0, r0, r1
 788:	00000001 	andeq	r0, r0, r1
 78c:	00000001 	andeq	r0, r0, r1
	...
 798:	00000001 	andeq	r0, r0, r1
 79c:	00000001 	andeq	r0, r0, r1
 7a0:	00000001 	andeq	r0, r0, r1
 7a4:	00000001 	andeq	r0, r0, r1
	...
 7b0:	00000001 	andeq	r0, r0, r1
 7b4:	00000001 	andeq	r0, r0, r1
 7b8:	00000001 	andeq	r0, r0, r1
 7bc:	00000001 	andeq	r0, r0, r1
	...
 7c8:	1000311e 	andne	r3, r0, lr, lsl r1
 7cc:	1000314c 	andne	r3, r0, ip, asr #2
 7d0:	10003150 	andne	r3, r0, r0, asr r1
 7d4:	10003150 	andne	r3, r0, r0, asr r1
 7d8:	10003150 	andne	r3, r0, r0, asr r1
 7dc:	10003160 	andne	r3, r0, r0, ror #2
	...
 7e8:	00000001 	andeq	r0, r0, r1
 7ec:	00000001 	andeq	r0, r0, r1
 7f0:	100024b4 			; <UNDEFINED> instruction: 0x100024b4
 7f4:	100024f4 	strdne	r2, [r0], -r4
 7f8:	00000001 	andeq	r0, r0, r1
 7fc:	00000001 	andeq	r0, r0, r1
 800:	100024f4 	strdne	r2, [r0], -r4
 804:	10002506 	andne	r2, r0, r6, lsl #10
 808:	10002508 	andne	r2, r0, r8, lsl #10
 80c:	10002530 	andne	r2, r0, r0, lsr r5
 810:	10002530 	andne	r2, r0, r0, lsr r5
 814:	100025c8 	andne	r2, r0, r8, asr #11
 818:	100025c8 	andne	r2, r0, r8, asr #11
 81c:	1000261a 	andne	r2, r0, sl, lsl r6
 820:	1000261c 	andne	r2, r0, ip, lsl r6
 824:	10002684 	andne	r2, r0, r4, lsl #13
 828:	10002684 	andne	r2, r0, r4, lsl #13
 82c:	10002744 	andne	r2, r0, r4, asr #14
 830:	10002744 	andne	r2, r0, r4, asr #14
 834:	100027a6 	andne	r2, r0, r6, lsr #15
 838:	100027a6 	andne	r2, r0, r6, lsr #15
 83c:	100027ca 	andne	r2, r0, sl, asr #15
 840:	100027cc 	andne	r2, r0, ip, asr #15
 844:	10002818 	andne	r2, r0, r8, lsl r8
 848:	10002818 	andne	r2, r0, r8, lsl r8
 84c:	100028c0 	andne	r2, r0, r0, asr #17
 850:	100028c0 	andne	r2, r0, r0, asr #17
 854:	100028e8 	andne	r2, r0, r8, ror #17
 858:	100028e8 	andne	r2, r0, r8, ror #17
 85c:	1000290a 	andne	r2, r0, sl, lsl #18
 860:	00000001 	andeq	r0, r0, r1
 864:	00000001 	andeq	r0, r0, r1
 868:	1000290c 	andne	r2, r0, ip, lsl #18
 86c:	100029a8 	andne	r2, r0, r8, lsr #19
 870:	00000001 	andeq	r0, r0, r1
 874:	00000001 	andeq	r0, r0, r1
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	00000001 	andeq	r0, r0, r1
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	00000001 	andeq	r0, r0, r1
 89c:	00000001 	andeq	r0, r0, r1
 8a0:	00000001 	andeq	r0, r0, r1
 8a4:	00000001 	andeq	r0, r0, r1
 8a8:	00000001 	andeq	r0, r0, r1
 8ac:	00000001 	andeq	r0, r0, r1
 8b0:	100029a8 	andne	r2, r0, r8, lsr #19
 8b4:	100029b8 			; <UNDEFINED> instruction: 0x100029b8
 8b8:	100029b8 			; <UNDEFINED> instruction: 0x100029b8
 8bc:	100029c4 	andne	r2, r0, r4, asr #19
 8c0:	00000001 	andeq	r0, r0, r1
 8c4:	00000001 	andeq	r0, r0, r1
 8c8:	100029c4 	andne	r2, r0, r4, asr #19
 8cc:	100029d0 	ldrdne	r2, [r0], -r0
 8d0:	00000001 	andeq	r0, r0, r1
 8d4:	00000001 	andeq	r0, r0, r1
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	100029d0 	ldrdne	r2, [r0], -r0
 8f4:	10002a0c 	andne	r2, r0, ip, lsl #20
 8f8:	10002a0c 	andne	r2, r0, ip, lsl #20
 8fc:	10002b6c 	andne	r2, r0, ip, ror #22
 900:	10002b6c 	andne	r2, r0, ip, ror #22
 904:	10002c9c 	mulne	r0, ip, ip
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	10002c9c 	mulne	r0, ip, ip
 914:	10002cba 			; <UNDEFINED> instruction: 0x10002cba
 918:	10002cbc 			; <UNDEFINED> instruction: 0x10002cbc
 91c:	10002cf4 	strdne	r2, [r0], -r4
 920:	00000001 	andeq	r0, r0, r1
 924:	00000001 	andeq	r0, r0, r1
 928:	00000001 	andeq	r0, r0, r1
 92c:	00000001 	andeq	r0, r0, r1
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	00000001 	andeq	r0, r0, r1
 944:	00000001 	andeq	r0, r0, r1
 948:	00000001 	andeq	r0, r0, r1
 94c:	00000001 	andeq	r0, r0, r1
 950:	00000001 	andeq	r0, r0, r1
 954:	00000001 	andeq	r0, r0, r1
 958:	10002cf4 	strdne	r2, [r0], -r4
 95c:	10002d78 	andne	r2, r0, r8, ror sp
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	10002d78 	andne	r2, r0, r8, ror sp
 96c:	10002d94 	mulne	r0, r4, sp
 970:	00000001 	andeq	r0, r0, r1
 974:	00000001 	andeq	r0, r0, r1
 978:	10002d94 	mulne	r0, r4, sp
 97c:	10002dd0 	ldrdne	r2, [r0], -r0
 980:	10002dd0 	ldrdne	r2, [r0], -r0
 984:	10002eb4 			; <UNDEFINED> instruction: 0x10002eb4
 988:	00000001 	andeq	r0, r0, r1
 98c:	00000001 	andeq	r0, r0, r1
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	10002eb4 			; <UNDEFINED> instruction: 0x10002eb4
 99c:	10002ecc 	andne	r2, r0, ip, asr #29
 9a0:	10002ecc 	andne	r2, r0, ip, asr #29
 9a4:	10002f48 	andne	r2, r0, r8, asr #30
 9a8:	10002f48 	andne	r2, r0, r8, asr #30
 9ac:	10002f54 	andne	r2, r0, r4, asr pc
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	10002f54 	andne	r2, r0, r4, asr pc
 9c4:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 9c8:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 9cc:	10003050 	andne	r3, r0, r0, asr r0
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	00000001 	andeq	r0, r0, r1
 9e4:	00000001 	andeq	r0, r0, r1
 9e8:	10003050 	andne	r3, r0, r0, asr r0
 9ec:	1000305c 	andne	r3, r0, ip, asr r0
 9f0:	00000001 	andeq	r0, r0, r1
 9f4:	00000001 	andeq	r0, r0, r1
 9f8:	00000001 	andeq	r0, r0, r1
 9fc:	00000001 	andeq	r0, r0, r1
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
 a08:	1000305c 	andne	r3, r0, ip, asr r0
 a0c:	100030dc 	ldrdne	r3, [r0], -ip
 a10:	00000001 	andeq	r0, r0, r1
 a14:	00000001 	andeq	r0, r0, r1
 a18:	00000001 	andeq	r0, r0, r1
 a1c:	00000001 	andeq	r0, r0, r1
 a20:	00000001 	andeq	r0, r0, r1
 a24:	00000001 	andeq	r0, r0, r1
 a28:	00000001 	andeq	r0, r0, r1
 a2c:	00000001 	andeq	r0, r0, r1
 a30:	00000001 	andeq	r0, r0, r1
 a34:	00000001 	andeq	r0, r0, r1
 a38:	00000001 	andeq	r0, r0, r1
 a3c:	00000001 	andeq	r0, r0, r1
 a40:	00000001 	andeq	r0, r0, r1
 a44:	00000001 	andeq	r0, r0, r1
 a48:	00000001 	andeq	r0, r0, r1
 a4c:	00000001 	andeq	r0, r0, r1
 a50:	00000001 	andeq	r0, r0, r1
 a54:	00000001 	andeq	r0, r0, r1
 a58:	00000001 	andeq	r0, r0, r1
 a5c:	00000001 	andeq	r0, r0, r1
 a60:	100030dc 	ldrdne	r3, [r0], -ip
 a64:	100030f4 	strdne	r3, [r0], -r4
 a68:	100030f4 	strdne	r3, [r0], -r4
 a6c:	10003160 	andne	r3, r0, r0, ror #2
 a70:	10003160 	andne	r3, r0, r0, ror #2
 a74:	100031a8 	andne	r3, r0, r8, lsr #3
 a78:	100031a8 	andne	r3, r0, r8, lsr #3
 a7c:	100031c0 	andne	r3, r0, r0, asr #3
 a80:	00000001 	andeq	r0, r0, r1
 a84:	00000001 	andeq	r0, r0, r1
	...
 a90:	100031c0 	andne	r3, r0, r0, asr #3
 a94:	100031e0 	andne	r3, r0, r0, ror #3
 a98:	100031e0 	andne	r3, r0, r0, ror #3
 a9c:	10003228 	andne	r3, r0, r8, lsr #4
 aa0:	10003228 	andne	r3, r0, r8, lsr #4
 aa4:	10003250 	andne	r3, r0, r0, asr r2
 aa8:	10003250 	andne	r3, r0, r0, asr r2
 aac:	10003290 	mulne	r0, r0, r2
 ab0:	10003290 	mulne	r0, r0, r2
 ab4:	100032c0 	andne	r3, r0, r0, asr #5
 ab8:	100032c0 	andne	r3, r0, r0, asr #5
 abc:	100032ec 	andne	r3, r0, ip, ror #5
 ac0:	100032ec 	andne	r3, r0, ip, ror #5
 ac4:	10003354 	andne	r3, r0, r4, asr r3
 ac8:	10003354 	andne	r3, r0, r4, asr r3
 acc:	1000344c 	andne	r3, r0, ip, asr #8
 ad0:	1000344c 	andne	r3, r0, ip, asr #8
 ad4:	10003462 	andne	r3, r0, r2, ror #8
 ad8:	10003464 	andne	r3, r0, r4, ror #8
 adc:	100034c4 	andne	r3, r0, r4, asr #9
 ae0:	00000001 	andeq	r0, r0, r1
 ae4:	00000001 	andeq	r0, r0, r1
 ae8:	100034c4 	andne	r3, r0, r4, asr #9
 aec:	10003520 	andne	r3, r0, r0, lsr #10
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
 b00:	00000001 	andeq	r0, r0, r1
 b04:	00000001 	andeq	r0, r0, r1
 b08:	00000001 	andeq	r0, r0, r1
 b0c:	00000001 	andeq	r0, r0, r1
 b10:	00000001 	andeq	r0, r0, r1
 b14:	00000001 	andeq	r0, r0, r1
 b18:	00000001 	andeq	r0, r0, r1
 b1c:	00000001 	andeq	r0, r0, r1
 b20:	00000001 	andeq	r0, r0, r1
 b24:	00000001 	andeq	r0, r0, r1
 b28:	00000001 	andeq	r0, r0, r1
 b2c:	00000001 	andeq	r0, r0, r1
 b30:	00000001 	andeq	r0, r0, r1
 b34:	00000001 	andeq	r0, r0, r1
 b38:	00000001 	andeq	r0, r0, r1
 b3c:	00000001 	andeq	r0, r0, r1
 b40:	00000001 	andeq	r0, r0, r1
 b44:	00000001 	andeq	r0, r0, r1
 b48:	00000001 	andeq	r0, r0, r1
 b4c:	00000001 	andeq	r0, r0, r1
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
 b58:	00000001 	andeq	r0, r0, r1
 b5c:	00000001 	andeq	r0, r0, r1
 b60:	00000001 	andeq	r0, r0, r1
 b64:	00000001 	andeq	r0, r0, r1
 b68:	00000001 	andeq	r0, r0, r1
 b6c:	00000001 	andeq	r0, r0, r1
 b70:	00000001 	andeq	r0, r0, r1
 b74:	00000001 	andeq	r0, r0, r1
 b78:	00000001 	andeq	r0, r0, r1
 b7c:	00000001 	andeq	r0, r0, r1
 b80:	00000001 	andeq	r0, r0, r1
 b84:	00000001 	andeq	r0, r0, r1
 b88:	00000001 	andeq	r0, r0, r1
 b8c:	00000001 	andeq	r0, r0, r1
	...
 b98:	10003520 	andne	r3, r0, r0, lsr #10
 b9c:	10003578 	andne	r3, r0, r8, ror r5
 ba0:	10003578 	andne	r3, r0, r8, ror r5
 ba4:	100035dc 	ldrdne	r3, [r0], -ip
 ba8:	100035dc 	ldrdne	r3, [r0], -ip
 bac:	100036b0 			; <UNDEFINED> instruction: 0x100036b0
 bb0:	100036b0 			; <UNDEFINED> instruction: 0x100036b0
 bb4:	10003700 	andne	r3, r0, r0, lsl #14
 bb8:	00000001 	andeq	r0, r0, r1
 bbc:	00000001 	andeq	r0, r0, r1
 bc0:	00000001 	andeq	r0, r0, r1
 bc4:	00000001 	andeq	r0, r0, r1
 bc8:	00000001 	andeq	r0, r0, r1
 bcc:	00000001 	andeq	r0, r0, r1
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	00000001 	andeq	r0, r0, r1
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
 be0:	00000001 	andeq	r0, r0, r1
 be4:	00000001 	andeq	r0, r0, r1
	...
 bf0:	10003700 	andne	r3, r0, r0, lsl #14
 bf4:	10003718 	andne	r3, r0, r8, lsl r7
 bf8:	10003718 	andne	r3, r0, r8, lsl r7
 bfc:	1000382c 	andne	r3, r0, ip, lsr #16
 c00:	1000382c 	andne	r3, r0, ip, lsr #16
 c04:	10003868 	andne	r3, r0, r8, ror #16
 c08:	10003868 	andne	r3, r0, r8, ror #16
 c0c:	1000387e 	andne	r3, r0, lr, ror r8
 c10:	10003880 	andne	r3, r0, r0, lsl #17
 c14:	1000389c 	mulne	r0, ip, r8
 c18:	1000389c 	mulne	r0, ip, r8
 c1c:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
 c20:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
 c24:	100038da 	ldrdne	r3, [r0], -sl
 c28:	100038da 	ldrdne	r3, [r0], -sl
 c2c:	100038ee 	andne	r3, r0, lr, ror #17
 c30:	100038f0 	strdne	r3, [r0], -r0
 c34:	10003980 	andne	r3, r0, r0, lsl #19
 c38:	10003980 	andne	r3, r0, r0, lsl #19
 c3c:	100039c0 	andne	r3, r0, r0, asr #19
 c40:	00000001 	andeq	r0, r0, r1
 c44:	00000001 	andeq	r0, r0, r1
 c48:	00000001 	andeq	r0, r0, r1
 c4c:	00000001 	andeq	r0, r0, r1
	...
 c58:	100039c0 	andne	r3, r0, r0, asr #19
 c5c:	100039e6 	andne	r3, r0, r6, ror #19
 c60:	00000001 	andeq	r0, r0, r1
 c64:	00000001 	andeq	r0, r0, r1
 c68:	00000001 	andeq	r0, r0, r1
 c6c:	00000001 	andeq	r0, r0, r1
 c70:	00000001 	andeq	r0, r0, r1
 c74:	00000001 	andeq	r0, r0, r1
 c78:	100039ec 	andne	r3, r0, ip, ror #19
 c7c:	10003a06 	andne	r3, r0, r6, lsl #20
 c80:	10003a0c 	andne	r3, r0, ip, lsl #20
 c84:	10003a22 	andne	r3, r0, r2, lsr #20
 c88:	10003a22 	andne	r3, r0, r2, lsr #20
 c8c:	10003a30 	andne	r3, r0, r0, lsr sl
 c90:	10003a30 	andne	r3, r0, r0, lsr sl
 c94:	10003a74 	andne	r3, r0, r4, ror sl
 c98:	10003a78 	andne	r3, r0, r8, ror sl
 c9c:	10003a8a 	andne	r3, r0, sl, lsl #21
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000004a5 	andeq	r0, r0, r5, lsr #9
       4:	02a30003 	adceq	r0, r3, #3
        xReturn = pdFALSE;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	01010101 	tsteq	r1, r1, lsl #2
}
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
        BaseType_t xReturn = pdFAIL;
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    }
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        pc = *sp;
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
    return pc;
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
        return 0;
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
            prvUnlockQueue( pxQueue );
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
            ( void ) xTaskResumeAll();
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        taskENTER_CRITICAL();
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                else if( xEntryTimeSet == pdFALSE )
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        taskEXIT_CRITICAL();
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        vTaskSuspendAll();
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      e0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      e8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      f0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                prvUnlockQueue( pxQueue );
      f4:	5f6d7261 	svcpl	0x006d7261
      f8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                if( xTaskResumeAll() == pdFALSE )
      fc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     100:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
                    taskYIELD_WITHIN_API();
     104:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
                    if( xInheritanceOccurred != pdFALSE )
     108:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
                return errQUEUE_EMPTY;
     10c:	30312d69 	eorscc	r2, r1, r9, ror #26
                        taskENTER_CRITICAL();
     110:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     118:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
                        taskEXIT_CRITICAL();
     120:	615c6363 	cmpvs	ip, r3, ror #6
     124:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     128:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     12c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     130:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
     134:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
     138:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     13c:	00656475 	rsbeq	r6, r5, r5, ror r4
     140:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     144:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     148:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     14c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
     150:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     154:	4f545265 	svcmi	0x00545265
     158:	6f702f53 	svcvs	0x00702f53
     15c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
     160:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
     164:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
     168:	435f4d52 	cmpmi	pc, #5248	; 0x1480
     16c:	5f33334d 	svcpl	0x0033334d
     170:	2f5a544e 	svccs	0x005a544e
     174:	5f6e6f6e 	svcpl	0x006e6f6e
     178:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
     17c:	2e006572 	cfrshl64cs	mvdx0, mvdx2, r6
     180:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     184:	2f2e2e2f 	svccs	0x002e2e2f
     188:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
     18c:	2f736f74 	svccs	0x00736f74
     190:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     194:	534f5452 	movtpl	r5, #62546	; 0xf452
     198:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     19c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     1a0:	2f2e2e00 	svccs	0x002e2e00
     1a4:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     1a8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     1ac:	2f2e2e00 	svccs	0x002e2e00
     1b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     1b4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
     1b8:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
     1bc:	662f736c 	strtvs	r7, [pc], -ip, ror #6
     1c0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1c4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     1c8:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
     1cc:	3a630063 	bcc	18c0360 <__RAM_SIZE+0x17c0360>
     1d0:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     1d4:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     1d8:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     1dc:	6f72705c 	svcvs	0x0072705c
     1e0:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     1e4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     1e8:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     1ec:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     1f0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     1f4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     1f8:	61652d65 	cmnvs	r5, r5, ror #26
     1fc:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     200:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     204:	31323032 	teqcc	r2, r2, lsr r0
     208:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     20c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     210:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     214:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     218:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     21c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     220:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
     224:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     228:	00010063 	andeq	r0, r1, r3, rrx
     22c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     230:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     234:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     238:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     23c:	00020068 	andeq	r0, r2, r8, rrx
     240:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     244:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     248:	0300682e 	movweq	r6, #2094	; 0x82e
     24c:	74730000 	ldrbtvc	r0, [r3], #-0
     250:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     254:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     258:	6f700000 	svcvs	0x00700000
     25c:	616d7472 	smcvs	55106	; 0xd742
     260:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
     264:	6f6d6d6f 	svcvs	0x006d6d6f
     268:	00682e6e 	rsbeq	r2, r8, lr, ror #28
     26c:	74000005 	strvc	r0, [r0], #-5
     270:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
     274:	00060068 	andeq	r0, r6, r8, rrx
     278:	72617500 	rsbvc	r7, r1, #0, 10
     27c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     280:	66000007 	strvs	r0, [r0], -r7
     284:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     288:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     28c:	00682e70 	rsbeq	r2, r8, r0, ror lr
     290:	73000008 	movwvc	r0, #8
     294:	6f696474 	svcvs	0x00696474
     298:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
     29c:	623c0000 	eorsvs	r0, ip, #0
     2a0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     2a4:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
     2a8:	00000000 	andeq	r0, r0, r0
     2ac:	00220500 	eoreq	r0, r2, r0, lsl #10
     2b0:	08000205 	stmdaeq	r0, {r0, r2, r9}
     2b4:	d3031000 	movwle	r1, #12288	; 0x3000
     2b8:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     2bc:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
     2c0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     2c4:	05ad0605 	streq	r0, [sp, #1541]!	; 0x605
     2c8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     2cc:	063f0609 	ldrteq	r0, [pc], -r9, lsl #12
     2d0:	30010520 	andcc	r0, r1, r0, lsr #10
     2d4:	38060905 	stmdacc	r6, {r0, r2, r8, fp}
     2d8:	0a022e06 	beq	8baf8 <__HEAP_SIZE+0x8aaf8>
     2dc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     2e0:	02050026 	andeq	r0, r5, #38	; 0x26
     2e4:	00000000 	andeq	r0, r0, r0
     2e8:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
     2ec:	01052105 	tsteq	r5, r5, lsl #2
     2f0:	04023d06 	streq	r3, [r2], #-3334	; 0xfffff2fa
     2f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     2f8:	0205001c 	andeq	r0, r5, #28
     2fc:	00000000 	andeq	r0, r0, r0
     300:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
     304:	01052105 	tsteq	r5, r5, lsl #2
     308:	04023d06 	streq	r3, [r2], #-3334	; 0xfffff2fa
     30c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     310:	0205001b 	andeq	r0, r5, #27
     314:	10000844 	andne	r0, r0, r4, asr #16
     318:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
     31c:	12052f05 	andne	r2, r5, #5, 30
     320:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     324:	1a056706 	bne	159f44 <__RAM_SIZE+0x59f44>
     328:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     32c:	1a053d06 	bne	14f74c <__RAM_SIZE+0x4f74c>
     330:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     334:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     338:	3c010611 	stccc	6, cr0, [r1], {17}
     33c:	2f060505 	svccs	0x00060505
     340:	01060805 	tsteq	r6, r5, lsl #16
     344:	31060905 	tstcc	r6, r5, lsl #18
     348:	2f062006 	svccs	0x00062006
     34c:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
     350:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     354:	06202009 	strteq	r2, [r0], -r9
     358:	052e060f 	streq	r0, [lr, #-1551]!	; 0xfffff9f1
     35c:	0402000d 	streq	r0, [r2], #-13
     360:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
     364:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     368:	25055703 	strcs	r5, [r5, #-1795]	; 0xfffff8fd
     36c:	03040200 	movweq	r0, #16896	; 0x4200
     370:	19050106 	stmdbne	r5, {r1, r2, r8}
     374:	01040200 	mrseq	r0, R12_usr
     378:	09052006 	stmdbeq	r5, {r1, r2, sp}
     37c:	01040200 	mrseq	r0, R12_usr
     380:	31060106 	tstcc	r6, r6, lsl #2
     384:	3e060105 	adfccs	f0, f6, f5
     388:	0008022e 	andeq	r0, r8, lr, lsr #4
     38c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     390:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
     394:	03100008 	tsteq	r0, #8
     398:	05050126 	streq	r0, [r5, #-294]	; 0xfffffeda
     39c:	132f4b21 			; <UNDEFINED> instruction: 0x132f4b21
     3a0:	2f060105 	svccs	0x00060105
     3a4:	01000502 	tsteq	r0, r2, lsl #10
     3a8:	00120501 	andseq	r0, r2, r1, lsl #10
     3ac:	08c80205 	stmiaeq	r8, {r0, r2, r9}^
     3b0:	2d031000 	stccs	0, cr1, [r3, #-0]
     3b4:	21050501 	tstcs	r5, r1, lsl #10
     3b8:	0601054b 	streq	r0, [r1], -fp, asr #10
     3bc:	0005022f 	andeq	r0, r5, pc, lsr #4
     3c0:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     3c4:	e0020500 	and	r0, r2, r0, lsl #10
     3c8:	03100008 	tsteq	r0, #8
     3cc:	05050132 	streq	r0, [r5, #-306]	; 0xfffffece
     3d0:	01054b21 	tsteq	r5, r1, lsr #22
     3d4:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     3d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     3dc:	02050012 	andeq	r0, r5, #18
     3e0:	100008f8 	strdne	r0, [r0], -r8
     3e4:	05013703 	streq	r3, [r1, #-1795]	; 0xfffff8fd
     3e8:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3ec:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3f0:	01010005 	tsteq	r1, r5
     3f4:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     3f8:	00091002 	andeq	r1, r9, r2
     3fc:	013c0310 	teqeq	ip, r0, lsl r3
     400:	4b210505 	blmi	84181c <__RAM_SIZE+0x74181c>
     404:	2f060105 	svccs	0x00060105
     408:	01000502 	tsteq	r0, r2, lsl #10
     40c:	00120501 	andseq	r0, r2, r1, lsl #10
     410:	09280205 	stmdbeq	r8!, {r0, r2, r9}
     414:	c1031000 	mrsgt	r1, (UNDEF: 3)
     418:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     41c:	01054b21 	tsteq	r5, r1, lsr #22
     420:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     424:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     428:	0205002f 	andeq	r0, r5, #47	; 0x2f
     42c:	10000940 	andne	r0, r0, r0, asr #18
     430:	0100c603 	tsteq	r0, r3, lsl #12
     434:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     438:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
     43c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     440:	05053306 	streq	r3, [r5, #-774]	; 0xfffffcfa
     444:	1309052a 	movwne	r0, #38186	; 0x952a
     448:	0c053d4b 	stceq	13, cr3, [r5], {75}	; 0x4b
     44c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     450:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
     454:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
     458:	01010003 	tsteq	r1, r3
     45c:	05001005 	streq	r1, [r0, #-5]
     460:	00096402 	andeq	r6, r9, r2, lsl #8
     464:	00de0310 	sbcseq	r0, lr, r0, lsl r3
     468:	21050501 	tstcs	r5, r1, lsl #10
     46c:	2f3d3013 	svccs	0x003d3013
     470:	09053d13 	stmdbeq	r5, {r0, r1, r4, r8, sl, fp, ip, sp}
     474:	2e790306 	cdpcs	3, 7, cr0, cr9, cr6, {0}
     478:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     47c:	03060104 	movweq	r0, #24836	; 0x6104
     480:	09052009 	stmdbeq	r5, {r0, r3, sp}
     484:	01040200 	mrseq	r0, R12_usr
     488:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     48c:	02002101 	andeq	r2, r0, #1073741824	; 0x40000000
     490:	20060104 	andcs	r0, r6, r4, lsl #2
     494:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     498:	3a060104 	bcc	1808b0 <__RAM_SIZE+0x808b0>
     49c:	02000905 	andeq	r0, r0, #81920	; 0x14000
     4a0:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
     4a4:	01000902 	tsteq	r0, r2, lsl #18
     4a8:	0001d101 	andeq	sp, r1, r1, lsl #2
     4ac:	81000300 	mrshi	r0, LR_irq
     4b0:	02000001 	andeq	r0, r0, #1
     4b4:	0d0efb01 	vstreq	d15, [lr, #-4]
     4b8:	01010100 	mrseq	r0, (UNDEF: 17)
     4bc:	00000001 	andeq	r0, r0, r1
     4c0:	01000001 	tsteq	r0, r1
     4c4:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
     4c8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
     4cc:	6f697461 	svcvs	0x00697461
     4d0:	3a63006e 	bcc	18c0690 <__RAM_SIZE+0x17c0690>
     4d4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     4d8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     4dc:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     4e0:	6f72705c 	svcvs	0x0072705c
     4e4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     4e8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     4ec:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     4f0:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     4f4:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     4f8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     4fc:	61652d65 	cmnvs	r5, r5, ror #26
     500:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     504:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     508:	31323032 	teqcc	r2, r2, lsr r0
     50c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     510:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     514:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     518:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     51c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     520:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     524:	616d5c65 	cmnvs	sp, r5, ror #24
     528:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     52c:	3a630065 	bcc	18c06c8 <__RAM_SIZE+0x17c06c8>
     530:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     534:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     538:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     53c:	6f72705c 	svcvs	0x0072705c
     540:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     544:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     548:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     54c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     550:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     554:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     558:	61652d65 	cmnvs	r5, r5, ror #26
     55c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     560:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     564:	31323032 	teqcc	r2, r2, lsr r0
     568:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     56c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     570:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     574:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     578:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     57c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     580:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     584:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     588:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     58c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     590:	534d432f 	movtpl	r4, #54063	; 0xd32f
     594:	355f5349 	ldrbcc	r5, [pc, #-841]	; 253 <__STACKSEAL_SIZE+0x253>
     598:	534d432f 	movtpl	r4, #54063	; 0xd32f
     59c:	432f5349 			; <UNDEFINED> instruction: 0x432f5349
     5a0:	2f65726f 	svccs	0x0065726f
     5a4:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     5a8:	00656475 	rsbeq	r6, r5, r5, ror r4
     5ac:	442f2e2e 	strtmi	r2, [pc], #-3630	; 5b4 <__STACKSEAL_SIZE+0x5b4>
     5b0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5b4:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     5b8:	5349534d 	movtpl	r5, #37709	; 0x934d
     5bc:	442f355f 	strtmi	r3, [pc], #-1375	; 5c4 <__STACKSEAL_SIZE+0x5c4>
     5c0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     5c4:	52412f65 	subpl	r2, r1, #404	; 0x194
     5c8:	52412f4d 	subpl	r2, r1, #308	; 0x134
     5cc:	334d434d 	movtcc	r4, #54093	; 0xd34d
     5d0:	6e492f33 	mcrvs	15, 2, r2, cr9, cr3, {1}
     5d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5d8:	73000065 	movwvc	r0, #101	; 0x65
     5dc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     5e0:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     5e4:	334d434d 	movtcc	r4, #54093	; 0xd34d
     5e8:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     5ec:	5f000001 	svcpl	0x00000001
     5f0:	61666564 	cmnvs	r6, r4, ror #10
     5f4:	5f746c75 	svcpl	0x00746c75
     5f8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     5fc:	00682e73 	rsbeq	r2, r8, r3, ror lr
     600:	5f000002 	svcpl	0x00000002
     604:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     608:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     60c:	00000300 	andeq	r0, r0, r0, lsl #6
     610:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     614:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
     618:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     61c:	73000004 	movwvc	r0, #4
     620:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     624:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     628:	334d434d 	movtcc	r4, #54093	; 0xd34d
     62c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     630:	00000005 	andeq	r0, r0, r5
     634:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     638:	00000002 	andeq	r0, r0, r2
     63c:	00c40300 	sbceq	r0, r4, r0, lsl #6
     640:	13030501 	movwne	r0, #13569	; 0x3501
     644:	01061305 	tsteq	r6, r5, lsl #6
     648:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     64c:	01010005 	tsteq	r1, r5
     650:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     654:	00099c02 	andeq	r9, r9, r2, lsl #24
     658:	00cc0310 	sbceq	r0, ip, r0, lsl r3
     65c:	15030501 	strne	r0, [r3, #-1281]	; 0xfffffaff
     660:	01060d05 	tsteq	r6, r5, lsl #26
     664:	40060305 	andmi	r0, r6, r5, lsl #6
     668:	01060e05 	tsteq	r6, r5, lsl #28
     66c:	03060305 	movweq	r0, #25349	; 0x6305
     670:	1305660c 	movwne	r6, #22028	; 0x560c
     674:	01050106 	tsteq	r5, r6, lsl #2
     678:	000a023d 	andeq	r0, sl, sp, lsr r2
     67c:	120d0101 	andne	r0, sp, #1073741824	; 0x40000000
     680:	00030000 	andeq	r0, r3, r0
     684:	000001a1 	andeq	r0, r0, r1, lsr #3
     688:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     68c:	0101000d 	tsteq	r1, sp
     690:	00000101 	andeq	r0, r0, r1, lsl #2
     694:	00000100 	andeq	r0, r0, r0, lsl #2
     698:	2f2e2e01 	svccs	0x002e2e01
     69c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     6a0:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     6a4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     6a8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     6ac:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     6b0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     6b4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     6b8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     6bc:	5f6d7261 	svcpl	0x006d7261
     6c0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     6c4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     6c8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     6cc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     6d0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     6d4:	30312d69 	eorscc	r2, r1, r9, ror #26
     6d8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     6dc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     6e0:	615c3031 	cmpvs	ip, r1, lsr r0
     6e4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     6e8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     6ec:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6f0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     6f4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     6f8:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     6fc:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     700:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     704:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     708:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     70c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     710:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     714:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     718:	5f6d7261 	svcpl	0x006d7261
     71c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     720:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     724:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     728:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     72c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     730:	30312d69 	eorscc	r2, r1, r9, ror #26
     734:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     738:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     73c:	615c3031 	cmpvs	ip, r1, lsr r0
     740:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     744:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     748:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     74c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     750:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     754:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     758:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     75c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     760:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     764:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     768:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     76c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     770:	5f6d7261 	svcpl	0x006d7261
     774:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     778:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     77c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     780:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     784:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     788:	30312d69 	eorscc	r2, r1, r9, ror #26
     78c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     790:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     794:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
     798:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
     79c:	615c6363 	cmpvs	ip, r3, ror #6
     7a0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     7a4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     7a8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     7ac:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
     7b0:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
     7b4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     7b8:	00656475 	rsbeq	r6, r5, r5, ror r4
     7bc:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     7c0:	2f65726f 	svccs	0x0065726f
     7c4:	00636e49 	rsbeq	r6, r3, r9, asr #28
     7c8:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
     7cc:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     7d0:	00010063 	andeq	r0, r1, r3, rrx
     7d4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     7d8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     7dc:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7e0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     7e4:	00020068 	andeq	r0, r2, r8, rrx
     7e8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     7ec:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     7f0:	0300682e 	movweq	r6, #2094	; 0x82e
     7f4:	74730000 	ldrbtvc	r0, [r3], #-0
     7f8:	67726164 	ldrbvs	r6, [r2, -r4, ror #2]!
     7fc:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     800:	74730000 	ldrbtvc	r0, [r3], #-0
     804:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     808:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     80c:	623c0000 	eorsvs	r0, ip, #0
     810:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     814:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
     818:	00000000 	andeq	r0, r0, r0
     81c:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     820:	682e6674 	stmdavs	lr!, {r2, r4, r5, r6, r9, sl, sp, lr}
     824:	00000500 	andeq	r0, r0, r0, lsl #10
     828:	00010500 	andeq	r0, r1, r0, lsl #10
     82c:	00000205 	andeq	r0, r0, r5, lsl #4
     830:	85030000 	strhi	r0, [r3, #-0]
     834:	03050101 	movweq	r0, #20737	; 0x5101
     838:	06060513 			; <UNDEFINED> instruction: 0x06060513
     83c:	06050501 	streq	r0, [r5], -r1, lsl #10
     840:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
     844:	22010501 	andcs	r0, r1, #4194304	; 0x400000
     848:	01000102 	tsteq	r0, r2, lsl #2
     84c:	00010501 	andeq	r0, r1, r1, lsl #10
     850:	09c80205 	stmibeq	r8, {r0, r2, r9}^
     854:	8e031000 	cdphi	0, 0, cr1, cr3, cr0, {0}
     858:	03050101 	movweq	r0, #20737	; 0x5101
     85c:	01140513 	tsteq	r4, r3, lsl r5
     860:	05012205 	streq	r2, [r1, #-517]	; 0xfffffdfb
     864:	0105012d 	tsteq	r5, sp, lsr #2
     868:	01021306 	tsteq	r2, r6, lsl #6
     86c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     870:	02050001 	andeq	r0, r5, #1
     874:	00000000 	andeq	r0, r0, r0
     878:	01019f03 	tsteq	r1, r3, lsl #30
     87c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     880:	0305010e 	movweq	r0, #20750	; 0x510e
     884:	06060513 			; <UNDEFINED> instruction: 0x06060513
     888:	1e010501 	cfsh32ne	mvfx0, mvfx1, #1
     88c:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
     890:	01062105 	tsteq	r6, r5, lsl #2
     894:	20200605 	eorcs	r0, r0, r5, lsl #12
     898:	20220105 	eorcs	r0, r2, r5, lsl #2
     89c:	01000102 	tsteq	r0, r2, lsl #2
     8a0:	00010501 	andeq	r0, r1, r1, lsl #10
     8a4:	09ca0205 	stmibeq	sl, {r0, r2, r9}^
     8a8:	bc031000 	stclt	0, cr1, [r3], {-0}
     8ac:	01060101 	tsteq	r6, r1, lsl #2
     8b0:	21060305 	tstcs	r6, r5, lsl #6
     8b4:	06100513 			; <UNDEFINED> instruction: 0x06100513
     8b8:	21090511 	tstcs	r9, r1, lsl r5
     8bc:	21060505 	tstcs	r6, r5, lsl #10
     8c0:	01060b05 	tsteq	r6, r5, lsl #22
     8c4:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
     8c8:	11052e22 	tstne	r5, r2, lsr #28
     8cc:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
     8d0:	1f060905 	svcne	0x00060905
     8d4:	01061505 	tsteq	r6, r5, lsl #10
     8d8:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
     8dc:	76030614 			; <UNDEFINED> instruction: 0x76030614
     8e0:	14030520 	strne	r0, [r3], #-1312	; 0xfffffae0
     8e4:	01061605 	tsteq	r6, r5, lsl #12
     8e8:	09052020 	stmdbeq	r5, {r5, sp}
     8ec:	0603051a 			; <UNDEFINED> instruction: 0x0603051a
     8f0:	06010531 			; <UNDEFINED> instruction: 0x06010531
     8f4:	00010213 	andeq	r0, r1, r3, lsl r2
     8f8:	01050101 	tsteq	r5, r1, lsl #2
     8fc:	ee020500 	cfsh32	mvfx0, mvfx2, #0
     900:	03100009 	tsteq	r0, #9
     904:	060101c7 	streq	r0, [r1], -r7, asr #3
     908:	06030501 	streq	r0, [r3], -r1, lsl #10
     90c:	060515bb 			; <UNDEFINED> instruction: 0x060515bb
     910:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     914:	1a053d11 	bne	14fd60 <__RAM_SIZE+0x4fd60>
     918:	01040200 	mrseq	r0, R12_usr
     91c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
     920:	01040200 	mrseq	r0, R12_usr
     924:	07050106 	streq	r0, [r5, -r6, lsl #2]
     928:	03040200 	movweq	r0, #16896	; 0x4200
     92c:	02002f06 	andeq	r2, r0, #6, 30
     930:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
     934:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     938:	49060304 	stmdbmi	r6, {r2, r8, r9}
     93c:	02002605 	andeq	r2, r0, #5242880	; 0x500000
     940:	01060304 	tsteq	r6, r4, lsl #6
     944:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     948:	002f0304 	eoreq	r0, pc, r4, lsl #6
     94c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     950:	03040200 	movweq	r0, #16896	; 0x4200
     954:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     958:	2e200618 	mcrcs	6, 1, r0, cr0, cr8, {0}
     95c:	65060905 	strvs	r0, [r6, #-2309]	; 0xfffff6fb
     960:	05330305 	ldreq	r0, [r3, #-773]!	; 0xfffffcfb
     964:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     968:	0b055101 	bleq	154d74 <__RAM_SIZE+0x54d74>
     96c:	4a7a0306 	bmi	1e8158c <__RAM_SIZE+0x1d8158c>
     970:	01061005 	tsteq	r6, r5
     974:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
     978:	062f0607 	strteq	r0, [pc], -r7, lsl #12
     97c:	00060220 	andeq	r0, r6, r0, lsr #4
     980:	01050101 	tsteq	r5, r1, lsl #2
     984:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
     988:	0310000a 	tsteq	r0, #10
     98c:	060101e3 	streq	r0, [r1], -r3, ror #3
     990:	06030501 	streq	r0, [r3], -r1, lsl #10
     994:	060605ca 	streq	r0, [r6], -sl, asr #11
     998:	06050501 	streq	r0, [r5], -r1, lsl #10
     99c:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
     9a0:	000f0501 	andeq	r0, pc, r1, lsl #10
     9a4:	20010402 	andcs	r0, r1, r2, lsl #8
     9a8:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     9ac:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     9b0:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
     9b4:	07053c03 	streq	r3, [r5, -r3, lsl #24]
     9b8:	0c053d06 	stceq	13, cr3, [r5], {6}
     9bc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     9c0:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
     9c4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     9c8:	0b054a0e 	bleq	153208 <__RAM_SIZE+0x53208>
     9cc:	19051f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, ip}
     9d0:	01040200 	mrseq	r0, R12_usr
     9d4:	0b052e06 	bleq	14c1f4 <__RAM_SIZE+0x4c1f4>
     9d8:	24053106 	strcs	r3, [r5], #-262	; 0xfffffefa
     9dc:	01040200 	mrseq	r0, R12_usr
     9e0:	35053c06 	strcc	r3, [r5, #-3078]	; 0xfffff3fa
     9e4:	02040200 	andeq	r0, r4, #0, 4
     9e8:	0607052e 	streq	r0, [r7], -lr, lsr #10
     9ec:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     9f0:	4a0e0501 	bmi	381dfc <__RAM_SIZE+0x281dfc>
     9f4:	06030520 	streq	r0, [r3], -r0, lsr #10
     9f8:	06060525 	streq	r0, [r6], -r5, lsr #10
     9fc:	06050501 	streq	r0, [r5], -r1, lsl #10
     a00:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
     a04:	00240501 	eoreq	r0, r4, r1, lsl #10
     a08:	3c010402 	cfstrscc	mvf0, [r1], {2}
     a0c:	02002b05 	andeq	r2, r0, #5120	; 0x1400
     a10:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
     a14:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
     a18:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
     a1c:	08053406 	stmdaeq	r5, {r1, r2, sl, ip, sp}
     a20:	0a050106 	beq	140e40 <__RAM_SIZE+0x40e40>
     a24:	0d053f06 	stceq	15, cr3, [r5, #-24]	; 0xffffffe8
     a28:	0a050106 	beq	140e48 <__RAM_SIZE+0x40e48>
     a2c:	0d053f06 	stceq	15, cr3, [r5, #-24]	; 0xffffffe8
     a30:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     a34:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
     a38:	07050106 	streq	r0, [r5, -r6, lsl #2]
     a3c:	12052f06 	andne	r2, r5, #6, 30
     a40:	0e050106 	adfeqs	f0, f5, f6
     a44:	0603054a 	streq	r0, [r3], -sl, asr #10
     a48:	06060524 	streq	r0, [r6], -r4, lsr #10
     a4c:	06050501 	streq	r0, [r5], -r1, lsl #10
     a50:	0608052f 	streq	r0, [r8], -pc, lsr #10
     a54:	06070501 	streq	r0, [r7], -r1, lsl #10
     a58:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
     a5c:	4a0e0501 	bmi	381e68 <__RAM_SIZE+0x281e68>
     a60:	03060305 	movweq	r0, #25349	; 0x6305
     a64:	0a05200a 	beq	148a94 <__RAM_SIZE+0x48a94>
     a68:	01050106 	tsteq	r5, r6, lsl #2
     a6c:	06070567 	streq	r0, [r7], -r7, ror #10
     a70:	133c6003 	teqne	ip, #3
     a74:	01060a05 	tsteq	r6, r5, lsl #20
     a78:	000f052e 	andeq	r0, pc, lr, lsr #10
     a7c:	20010402 	andcs	r0, r1, r2, lsl #8
     a80:	053b0a05 	ldreq	r0, [fp, #-2565]!	; 0xfffff5fb
     a84:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
     a88:	2001060c 	andcs	r0, r1, ip, lsl #12
     a8c:	051e0a05 	ldreq	r0, [lr, #-2565]	; 0xfffff5fb
     a90:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
     a94:	35053301 	strcc	r3, [r5, #-769]	; 0xfffffcff
     a98:	02040200 	andeq	r0, r4, #0, 4
     a9c:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     aa0:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     aa4:	4a0e0501 	bmi	381eb0 <__RAM_SIZE+0x281eb0>
     aa8:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
     aac:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     ab0:	39052201 	stmdbcc	r5, {r0, r9, sp}
     ab4:	02040200 	andeq	r0, r4, #0, 4
     ab8:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     abc:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     ac0:	4a0e0501 	bmi	381ecc <__RAM_SIZE+0x281ecc>
     ac4:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
     ac8:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
     acc:	07052201 	streq	r2, [r5, -r1, lsl #4]
     ad0:	12052f06 	andne	r2, r5, #6, 30
     ad4:	0e050106 	adfeqs	f0, f5, f6
     ad8:	0a05204a 	beq	148c08 <__RAM_SIZE+0x48c08>
     adc:	200b0306 	andcs	r0, fp, r6, lsl #6
     ae0:	01060d05 	tsteq	r6, r5, lsl #26
     ae4:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     ae8:	01061205 	tsteq	r6, r5, lsl #4
     aec:	204a0e05 	subcs	r0, sl, r5, lsl #28
     af0:	22060a05 	andcs	r0, r6, #20480	; 0x5000
     af4:	01060d05 	tsteq	r6, r5, lsl #26
     af8:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     afc:	01061205 	tsteq	r6, r5, lsl #4
     b00:	204a0e05 	subcs	r0, sl, r5, lsl #28
     b04:	01000102 	tsteq	r0, r2, lsl #2
     b08:	00010501 	andeq	r0, r1, r1, lsl #10
     b0c:	0ba40205 	bleq	fe901328 <__StackTop+0xc6801328>
     b10:	99031000 	stmdbls	r3, {ip}
     b14:	01060102 	tsteq	r6, r2, lsl #2
     b18:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     b1c:	06051513 			; <UNDEFINED> instruction: 0x06051513
     b20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     b24:	0b052106 	bleq	148f44 <__RAM_SIZE+0x48f44>
     b28:	03050106 	movweq	r0, #20742	; 0x5106
     b2c:	06053206 	streq	r3, [r5], -r6, lsl #4
     b30:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     b34:	01040200 	mrseq	r0, R12_usr
     b38:	0012053c 	andseq	r0, r2, ip, lsr r5
     b3c:	4d010402 	cfstrsmi	mvf0, [r1, #-8]
     b40:	01040200 	mrseq	r0, R12_usr
     b44:	000e052e 	andeq	r0, lr, lr, lsr #10
     b48:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     b4c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     b50:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     b54:	04020007 	streq	r0, [r2], #-7
     b58:	05590608 	ldrbeq	r0, [r9, #-1544]	; 0xfffff9f8
     b5c:	0402000d 	streq	r0, [r2], #-13
     b60:	00010608 	andeq	r0, r1, r8, lsl #12
     b64:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     b68:	08040200 	stmdaeq	r4, {r9}
     b6c:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     b70:	08040200 	stmdaeq	r4, {r9}
     b74:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     b78:	01040200 	mrseq	r0, R12_usr
     b7c:	2c0e052e 	cfstr32cs	mvfx0, [lr], {46}	; 0x2e
     b80:	20210d05 	eorcs	r0, r1, r5, lsl #26
     b84:	0f060505 	svceq	0x00060505
     b88:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
     b8c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     b90:	07054a12 	smladeq	r5, r2, sl, r4
     b94:	12052f06 	andne	r2, r5, #6, 30
     b98:	55050106 	strpl	r0, [r5, #-262]	; 0xfffffefa
     b9c:	02040200 	andeq	r0, r4, #0, 4
     ba0:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
     ba4:	00200704 	eoreq	r0, r0, r4, lsl #14
     ba8:	20070402 	andcs	r0, r7, r2, lsl #8
     bac:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     bb0:	052e0704 	streq	r0, [lr, #-1796]!	; 0xfffff8fc
     bb4:	052e5855 	streq	r5, [lr, #-2133]!	; 0xfffff7ab
     bb8:	0175030a 	cmneq	r5, sl, lsl #6
     bbc:	03060305 	movweq	r0, #25349	; 0x6305
     bc0:	0a052010 	beq	148c08 <__RAM_SIZE+0x48c08>
     bc4:	01050106 	tsteq	r5, r6, lsl #2
     bc8:	01002ed7 	ldrdeq	r2, [r0, -r7]
     bcc:	00010501 	andeq	r0, r1, r1, lsl #10
     bd0:	0c380205 	lfmeq	f0, 4, [r8], #-20	; 0xffffffec
     bd4:	b2031000 	andlt	r1, r3, #0
     bd8:	01060102 	tsteq	r6, r2, lsl #2
     bdc:	d7060305 	strle	r0, [r6, -r5, lsl #6]
     be0:	06051513 			; <UNDEFINED> instruction: 0x06051513
     be4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     be8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     bec:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     bf0:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
     bf4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     bf8:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     bfc:	12053c01 	andne	r3, r5, #256	; 0x100
     c00:	01040200 	mrseq	r0, R12_usr
     c04:	000e055b 	andeq	r0, lr, fp, asr r5
     c08:	3c080402 	cfstrscc	mvf0, [r8], {2}
     c0c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     c10:	002e0804 	eoreq	r0, lr, r4, lsl #16
     c14:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     c18:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     c1c:	4b060804 	blmi	182c34 <__RAM_SIZE+0x82c34>
     c20:	02000d05 	andeq	r0, r0, #320	; 0x140
     c24:	01060804 	tsteq	r6, r4, lsl #16
     c28:	08040200 	stmdaeq	r4, {r9}
     c2c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     c30:	05130608 	ldreq	r0, [r3, #-1544]	; 0xfffff9f8
     c34:	04020005 	streq	r0, [r2], #-5
     c38:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     c3c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     c40:	0e054a01 	vmlaeq.f32	s8, s10, s2
     c44:	210d053a 	tstcs	sp, sl, lsr r5
     c48:	0605052e 	streq	r0, [r5], -lr, lsr #10
     c4c:	1307050f 	movwne	r0, #29967	; 0x750f
     c50:	01062705 	tsteq	r6, r5, lsl #14
     c54:	05661205 	strbeq	r1, [r6, #-517]!	; 0xfffffdfb
     c58:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     c5c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     c60:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
     c64:	003c2e02 	eorseq	r2, ip, r2, lsl #28
     c68:	20070402 	andcs	r0, r7, r2, lsl #8
     c6c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     c70:	052e0704 	streq	r0, [lr, #-1796]!	; 0xfffff8fc
     c74:	052e3c55 	streq	r3, [lr, #-3157]!	; 0xfffff3ab
     c78:	0175030a 	cmneq	r5, sl, lsl #6
     c7c:	03060305 	movweq	r0, #25349	; 0x6305
     c80:	0a052e10 	beq	14c4c8 <__RAM_SIZE+0x4c4c8>
     c84:	01050106 	tsteq	r5, r6, lsl #2
     c88:	003c3d08 	eorseq	r3, ip, r8, lsl #26
     c8c:	01050101 	tsteq	r5, r1, lsl #2
     c90:	00020500 	andeq	r0, r2, r0, lsl #10
     c94:	0310000d 	tsteq	r0, #13
     c98:	060103d3 			; <UNDEFINED> instruction: 0x060103d3
     c9c:	06030501 	streq	r0, [r3], -r1, lsl #10
     ca0:	06060592 			; <UNDEFINED> instruction: 0x06060592
     ca4:	20202e01 	eorcs	r2, r0, r1, lsl #28
     ca8:	0018052e 	andseq	r0, r8, lr, lsr #10
     cac:	3c010402 	cfstrscc	mvf0, [r1], {2}
     cb0:	02002d05 	andeq	r2, r0, #320	; 0x140
     cb4:	059e0204 	ldreq	r0, [lr, #516]	; 0x204
     cb8:	13b10603 			; <UNDEFINED> instruction: 0x13b10603
     cbc:	01060605 	tsteq	r6, r5, lsl #12
     cc0:	cd060305 	stcgt	3, cr0, [r6, #-20]	; 0xffffffec
     cc4:	01060605 	tsteq	r6, r5, lsl #12
     cc8:	05590a05 	ldrbeq	r0, [r9, #-2565]	; 0xfffff5fb
     ccc:	17330603 	ldrne	r0, [r3, -r3, lsl #12]!
     cd0:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
     cd4:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
     cd8:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
     cdc:	2e2c0501 	cfsh64cs	mvdx0, mvdx12, #1
     ce0:	5a060305 	bpl	1818fc <__RAM_SIZE+0x818fc>
     ce4:	01062d05 	tsteq	r6, r5, lsl #26
     ce8:	26052e2e 	strcs	r2, [r5], -lr, lsr #28
     cec:	744b0558 	strbvc	r0, [fp], #-1368	; 0xfffffaa8
     cf0:	05665205 	strbeq	r5, [r6, #-517]!	; 0xfffffdfb
     cf4:	07057441 	streq	r7, [r5, -r1, asr #8]
     cf8:	0603054a 	streq	r0, [r3], -sl, asr #10
     cfc:	0617053e 			; <UNDEFINED> instruction: 0x0617053e
     d00:	2b052e01 	blcs	14c50c <__RAM_SIZE+0x4c50c>
     d04:	4a080574 	bmi	2022dc <__RAM_SIZE+0x1022dc>
     d08:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     d0c:	01061c05 	tsteq	r6, r5, lsl #24
     d10:	5837054a 	ldmdapl	r7!, {r1, r3, r6, r8, sl}
     d14:	059e1005 	ldreq	r1, [lr, #5]
     d18:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     d1c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d20:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     d24:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
     d28:	03052e24 	movweq	r2, #24100	; 0x5e24
     d2c:	13058406 	movwne	r8, #21510	; 0x5406
     d30:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     d34:	0582581c 	streq	r5, [r2, #2076]	; 0x81c
     d38:	3705203c 	smladxcc	r5, ip, r0, r2
     d3c:	66310566 	ldrtvs	r0, [r1], -r6, ror #10
     d40:	054a2b05 	strbeq	r2, [sl, #-2821]	; 0xfffff4fb
     d44:	20056626 	andcs	r6, r5, r6, lsr #12
     d48:	66170566 	ldrvs	r0, [r7], -r6, ror #10
     d4c:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
     d50:	03054a0a 	movweq	r4, #23050	; 0x5a0a
     d54:	06058406 	streq	r8, [r5], -r6, lsl #8
     d58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d5c:	0b055906 	bleq	15717c <__RAM_SIZE+0x5717c>
     d60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d64:	0c052106 	stfeqs	f2, [r5], {6}
     d68:	03050106 	movweq	r0, #20742	; 0x5106
     d6c:	2b058606 	blcs	16258c <__RAM_SIZE+0x6258c>
     d70:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
     d74:	03052e2e 	movweq	r2, #24110	; 0x5e2e
     d78:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     d7c:	06052306 	streq	r2, [r5], -r6, lsl #6
     d80:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     d84:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d88:	08054c06 	stmdaeq	r5, {r1, r2, sl, fp, lr}
     d8c:	19050106 	stmdbne	r5, {r1, r2, r8}
     d90:	01040200 	mrseq	r0, R12_usr
     d94:	060705ac 	streq	r0, [r7], -ip, lsr #11
     d98:	060a0591 			; <UNDEFINED> instruction: 0x060a0591
     d9c:	06090501 	streq	r0, [r9], -r1, lsl #10
     da0:	0625053d 			; <UNDEFINED> instruction: 0x0625053d
     da4:	202e0501 	eorcs	r0, lr, r1, lsl #10
     da8:	0605052e 	streq	r0, [r5], -lr, lsr #10
     dac:	05205103 	streq	r5, [r0, #-259]!	; 0xfffffefd
     db0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     db4:	00e40301 	rsceq	r0, r4, r1, lsl #6
     db8:	05053cf2 	streq	r3, [r5, #-3314]	; 0xfffff30e
     dbc:	7fa20306 	svcvc	0x00a20306
     dc0:	060b052e 	streq	r0, [fp], -lr, lsr #10
     dc4:	44059e01 	strmi	r9, [r5], #-3585	; 0xfffff1ff
     dc8:	20202203 	eorcs	r2, r0, r3, lsl #4
     dcc:	0a030e05 	beq	c45e8 <__HEAP_SIZE+0xc35e8>
     dd0:	06070520 	streq	r0, [r7], -r0, lsr #10
     dd4:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
     dd8:	06070501 	streq	r0, [r7], -r1, lsl #10
     ddc:	1005134c 	andne	r1, r5, ip, asr #6
     de0:	05211106 	streq	r1, [r1, #-262]!	; 0xfffffefa
     de4:	0b030603 	bleq	c25f8 <__HEAP_SIZE+0xc15f8>
     de8:	06051320 	streq	r1, [r5], -r0, lsr #6
     dec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     df0:	0c053e06 	stceq	14, cr3, [r5], {6}
     df4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     df8:	76030607 	strvc	r0, [r3], -r7, lsl #12
     dfc:	060a0520 	streq	r0, [sl], -r0, lsr #10
     e00:	00160501 	andseq	r0, r6, r1, lsl #10
     e04:	3c010402 	cfstrscc	mvf0, [r1], {2}
     e08:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     e0c:	0c053c06 	stceq	12, cr3, [r5], {6}
     e10:	34020c03 	strcc	r0, [r2], #-3075	; 0xfffff3fd
     e14:	06030501 	streq	r0, [r3], -r1, lsl #10
     e18:	06060530 			; <UNDEFINED> instruction: 0x06060530
     e1c:	001c0501 	andseq	r0, ip, r1, lsl #10
     e20:	4a010402 	bmi	41e30 <__HEAP_SIZE+0x40e30>
     e24:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
     e28:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
     e2c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     e30:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     e34:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     e38:	03052e0b 	movweq	r2, #24075	; 0x5e0b
     e3c:	05136a06 	ldreq	r6, [r3, #-2566]	; 0xfffff5fa
     e40:	00010609 	andeq	r0, r1, r9, lsl #12
     e44:	82040402 	andhi	r0, r4, #33554432	; 0x2000000
     e48:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     e4c:	08060404 	stmdaeq	r6, {r2, sl}
     e50:	00060523 	andeq	r0, r6, r3, lsr #10
     e54:	06040402 	streq	r0, [r4], -r2, lsl #8
     e58:	06050501 	streq	r0, [r5], -r1, lsl #10
     e5c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
     e60:	00660604 	rsbeq	r0, r6, r4, lsl #12
     e64:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
     e68:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e6c:	47055a06 	strmi	r5, [r5, -r6, lsl #20]
     e70:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e74:	0b050106 	bleq	141294 <__RAM_SIZE+0x41294>
     e78:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e7c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     e80:	05053c04 	streq	r3, [r5, #-3076]	; 0xfffff3fc
     e84:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e88:	0805d806 	stmdaeq	r5, {r1, r2, fp, ip, lr, pc}
     e8c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e90:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     e94:	05660404 	strbeq	r0, [r6, #-1028]!	; 0xfffffbfc
     e98:	04020009 	streq	r0, [r2], #-9
     e9c:	20770301 	rsbscs	r0, r7, r1, lsl #6
     ea0:	01040200 	mrseq	r0, R12_usr
     ea4:	25050574 	strcs	r0, [r5, #-1396]	; 0xfffffa8c
     ea8:	02002705 	andeq	r2, r0, #1310720	; 0x140000
     eac:	41060204 	tstmi	r6, r4, lsl #4
     eb0:	02040200 	andeq	r0, r4, #0, 4
     eb4:	0d052006 	stceq	0, cr2, [r5, #-24]	; 0xffffffe8
     eb8:	01040200 	mrseq	r0, R12_usr
     ebc:	12055806 	andne	r5, r5, #393216	; 0x60000
     ec0:	01040200 	mrseq	r0, R12_usr
     ec4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     ec8:	01040200 	mrseq	r0, R12_usr
     ecc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     ed0:	02022e01 	andeq	r2, r2, #1, 28
     ed4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     ed8:	02050001 	andeq	r0, r5, #1
     edc:	100010f0 	strdne	r1, [r0], -r0
     ee0:	0102d303 	tsteq	r2, r3, lsl #6
     ee4:	03050106 	movweq	r0, #20742	; 0x5106
     ee8:	1313bb06 	tstne	r3, #6144	; 0x1800
     eec:	06051515 			; <UNDEFINED> instruction: 0x06051515
     ef0:	20200106 	eorcs	r0, r0, r6, lsl #2
     ef4:	03052020 	movweq	r2, #20512	; 0x5020
     ef8:	06054c06 	streq	r4, [r5], -r6, lsl #24
     efc:	03050106 	movweq	r0, #20742	; 0x5106
     f00:	0605a006 	streq	sl, [r5], -r6
     f04:	03050106 	movweq	r0, #20742	; 0x5106
     f08:	06059506 	streq	r9, [r5], -r6, lsl #10
     f0c:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     f10:	01040200 	mrseq	r0, R12_usr
     f14:	06030590 			; <UNDEFINED> instruction: 0x06030590
     f18:	13900903 	orrsne	r0, r0, #49152	; 0xc000
     f1c:	01060605 	tsteq	r6, r5, lsl #12
     f20:	05810805 	streq	r0, [r1, #2053]	; 0x805
     f24:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
     f28:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     f2c:	09054b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, lr}
     f30:	2a052306 	bcs	149b50 <__RAM_SIZE+0x49b50>
     f34:	01040200 	mrseq	r0, R12_usr
     f38:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
     f3c:	10052f06 	andne	r2, r5, r6, lsl #30
     f40:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f44:	09056706 	stmdbeq	r5, {r1, r2, r8, r9, sl, sp, lr}
     f48:	0c050106 	stfeqs	f0, [r5], {6}
     f4c:	0505201f 	streq	r2, [r5, #-31]	; 0xffffffe1
     f50:	20630306 	rsbcs	r0, r3, r6, lsl #6
     f54:	01060c05 	tsteq	r6, r5, lsl #24
     f58:	e6060505 	str	r0, [r6], -r5, lsl #10
     f5c:	01060c05 	tsteq	r6, r5, lsl #24
     f60:	e6060505 	str	r0, [r6], -r5, lsl #10
     f64:	01060c05 	tsteq	r6, r5, lsl #24
     f68:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     f6c:	02002058 	andeq	r2, r0, #88	; 0x58
     f70:	c8200804 	stmdagt	r0!, {r2, fp}
     f74:	50060505 	andpl	r0, r6, r5, lsl #10
     f78:	01060c05 	tsteq	r6, r5, lsl #24
     f7c:	03060505 	movweq	r0, #25861	; 0x6505
     f80:	0513d609 	ldreq	sp, [r3, #-1545]	; 0xfffff9f7
     f84:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     f88:	0a05810e 	beq	1613c8 <__RAM_SIZE+0x613c8>
     f8c:	06030542 	streq	r0, [r3], -r2, asr #10
     f90:	06070536 			; <UNDEFINED> instruction: 0x06070536
     f94:	06030501 	streq	r0, [r3], -r1, lsl #10
     f98:	06170559 			; <UNDEFINED> instruction: 0x06170559
     f9c:	27052e01 	strcs	r2, [r5, -r1, lsl #28]
     fa0:	580a0566 	stmdapl	sl, {r1, r2, r5, r6, r8, sl}
     fa4:	83060305 	movwhi	r0, #25349	; 0x6305
     fa8:	01061105 	tsteq	r6, r5, lsl #2
     fac:	0603052e 	streq	r0, [r3], -lr, lsr #10
     fb0:	060e0521 	streq	r0, [lr], -r1, lsr #10
     fb4:	08052e01 	stmdaeq	r5, {r0, r9, sl, fp, sp}
     fb8:	0603052e 	streq	r0, [r3], -lr, lsr #10
     fbc:	06060584 	streq	r0, [r6], -r4, lsl #11
     fc0:	05052001 	streq	r2, [r5, #-1]
     fc4:	05224b06 	streq	r4, [r2, #-2822]!	; 0xfffff4fa
     fc8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     fcc:	07055808 	streq	r5, [r5, -r8, lsl #16]
     fd0:	05135906 	ldreq	r5, [r3, #-2310]	; 0xfffff6fa
     fd4:	051f060c 	ldreq	r0, [pc, #-1548]	; 9d0 <__Vectors_Size+0x210>
     fd8:	0b030603 	bleq	c27ec <__HEAP_SIZE+0xc17ec>
     fdc:	06060520 	streq	r0, [r6], -r0, lsr #10
     fe0:	06050501 	streq	r0, [r5], -r1, lsl #10
     fe4:	06140521 	ldreq	r0, [r4], -r1, lsr #10
     fe8:	580a0501 	stmdapl	sl, {r0, r8, sl}
     fec:	06050558 			; <UNDEFINED> instruction: 0x06050558
     ff0:	06080521 	streq	r0, [r8], -r1, lsr #10
     ff4:	00180501 	andseq	r0, r8, r1, lsl #10
     ff8:	58020402 	stmdapl	r2, {r1, sl}
     ffc:	02002905 	andeq	r2, r0, #81920	; 0x14000
    1000:	05820304 	streq	r0, [r2, #772]	; 0x304
    1004:	063f0607 	ldrteq	r0, [pc], -r7, lsl #12
    1008:	06080520 	streq	r0, [r8], -r0, lsr #10
    100c:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    1010:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1014:	05840608 	streq	r0, [r4, #1544]	; 0x608
    1018:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    101c:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1020:	05052001 	streq	r2, [r5, #-1]
    1024:	20063e06 	andcs	r3, r6, r6, lsl #28
    1028:	03060b05 	movweq	r0, #27397	; 0x6b05
    102c:	0705200e 	streq	r2, [r5, -lr]
    1030:	2705212f 	strcs	r2, [r5, -pc, lsr #2]
    1034:	0e050106 	adfeqs	f0, f5, f6
    1038:	20140590 	mulscs	r4, r0, r5
    103c:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    1040:	05670607 	strbeq	r0, [r7, #-1543]!	; 0xfffff9f9
    1044:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1048:	0e052e12 	mcreq	14, 0, r2, cr5, cr2, {0}
    104c:	0b052e1f 	bleq	14c8d0 <__RAM_SIZE+0x4c8d0>
    1050:	35052606 	strcc	r2, [r5, #-1542]	; 0xfffff9fa
    1054:	01040200 	mrseq	r0, R12_usr
    1058:	2c052e06 	stccs	14, cr2, [r5], {6}
    105c:	01040200 	mrseq	r0, R12_usr
    1060:	06070520 	streq	r0, [r7], -r0, lsr #10
    1064:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    1068:	65350501 	ldrvs	r0, [r5, #-1281]!	; 0xfffffaff
    106c:	20210e05 	eorcs	r0, r1, r5, lsl #28
    1070:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1074:	01060805 	tsteq	r6, r5, lsl #16
    1078:	30060705 	andcc	r0, r6, r5, lsl #14
    107c:	01061205 	tsteq	r6, r5, lsl #4
    1080:	20660e05 	rsbcs	r0, r6, r5, lsl #28
    1084:	17060905 	strne	r0, [r6, -r5, lsl #18]
    1088:	052f0505 	streq	r0, [pc, #-1285]!	; b8b <__Vectors_Size+0x3cb>
    108c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    1090:	1205ac0c 	andne	sl, r5, #12, 24	; 0xc00
    1094:	20100520 	andscs	r0, r0, r0, lsr #10
    1098:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    109c:	01061105 	tsteq	r6, r5, lsl #2
    10a0:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    10a4:	c8081f0c 	stmdagt	r8, {r2, r3, r8, r9, sl, fp, ip}
    10a8:	27060305 	strcs	r0, [r6, -r5, lsl #6]
    10ac:	01061d05 	tsteq	r6, r5, lsl #26
    10b0:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    10b4:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
    10b8:	0606052e 	streq	r0, [r6], -lr, lsr #10
    10bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    10c0:	0608052f 	streq	r0, [r8], -pc, lsr #10
    10c4:	06070501 	streq	r0, [r7], -r1, lsl #10
    10c8:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    10cc:	660e0501 	strvs	r0, [lr], -r1, lsl #10
    10d0:	03060305 	movweq	r0, #25349	; 0x6305
    10d4:	0a05200a 	beq	149104 <__RAM_SIZE+0x49104>
    10d8:	01050106 	tsteq	r5, r6, lsl #2
    10dc:	060505c9 	streq	r0, [r5], -r9, asr #11
    10e0:	05586b03 	ldrbeq	r6, [r8, #-2819]	; 0xfffff4fd
    10e4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    10e8:	0402000f 	streq	r0, [r2], #-15
    10ec:	1c052e01 	stcne	14, cr2, [r5], {1}
    10f0:	02040200 	andeq	r0, r4, #0, 4
    10f4:	0607052e 	streq	r0, [r7], -lr, lsr #10
    10f8:	060c054b 	streq	r0, [ip], -fp, asr #10
    10fc:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    1100:	12053106 	andne	r3, r5, #-2147483647	; 0x80000001
    1104:	0e050106 	adfeqs	f0, f5, f6
    1108:	060b0566 	streq	r0, [fp], -r6, ror #10
    110c:	001a051f 	andseq	r0, sl, pc, lsl r5
    1110:	06010402 	streq	r0, [r1], -r2, lsl #8
    1114:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1118:	0a053c01 	beq	150124 <__RAM_SIZE+0x50124>
    111c:	4a090306 	bmi	241d3c <__RAM_SIZE+0x141d3c>
    1120:	01060d05 	tsteq	r6, r5, lsl #26
    1124:	4b060705 	blmi	182d40 <__RAM_SIZE+0x82d40>
    1128:	01061205 	tsteq	r6, r5, lsl #4
    112c:	20660e05 	rsbcs	r0, r6, r5, lsl #28
    1130:	22060a05 	andcs	r0, r6, #20480	; 0x5000
    1134:	01060d05 	tsteq	r6, r5, lsl #26
    1138:	4b060705 	blmi	182d54 <__RAM_SIZE+0x82d54>
    113c:	01061205 	tsteq	r6, r5, lsl #4
    1140:	20660e05 	rsbcs	r0, r6, r5, lsl #28
    1144:	01000102 	tsteq	r0, r2, lsl #2
    1148:	00010501 	andeq	r0, r1, r1, lsl #10
    114c:	14880205 	strne	r0, [r8], #517	; 0x205
    1150:	c1031000 	mrsgt	r1, (UNDEF: 3)
    1154:	01060104 	tsteq	r6, r4, lsl #2
    1158:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    115c:	06051413 			; <UNDEFINED> instruction: 0x06051413
    1160:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1164:	4a01d303 	bmi	75d78 <__HEAP_SIZE+0x74d78>
    1168:	b2030620 	andlt	r0, r3, #32, 12	; 0x2000000
    116c:	0a05017e 	beq	14176c <__RAM_SIZE+0x4176c>
    1170:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1174:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1178:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    117c:	06070501 	streq	r0, [r7], -r1, lsl #10
    1180:	06200630 			; <UNDEFINED> instruction: 0x06200630
    1184:	060d054b 	streq	r0, [sp], -fp, asr #10
    1188:	06070501 	streq	r0, [r7], -r1, lsl #10
    118c:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    1190:	0d052406 	cfstrseq	mvf2, [r5, #-24]	; 0xffffffe8
    1194:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1198:	0b053206 	bleq	14d9b8 <__RAM_SIZE+0x4d9b8>
    119c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    11a0:	07052106 	streq	r2, [r5, -r6, lsl #2]
    11a4:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    11a8:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    11ac:	ec060d05 	stc	13, cr0, [r6], {5}
    11b0:	13150505 	tstne	r5, #20971520	; 0x1400000
    11b4:	cd031405 	cfstrsgt	mvf1, [r3, #-20]	; 0xffffffec
    11b8:	0305017c 	movweq	r0, #20860	; 0x517c
    11bc:	06160514 			; <UNDEFINED> instruction: 0x06160514
    11c0:	08053c01 	stmdaeq	r5, {r0, sl, fp, ip, sp}
    11c4:	0103b103 	tsteq	r3, r3, lsl #2
    11c8:	31060a05 	tstcc	r6, r5, lsl #20
    11cc:	01060d05 	tsteq	r6, r5, lsl #26
    11d0:	052a0b05 	streq	r0, [sl, #-2821]!	; 0xfffff4fb
    11d4:	11030605 	tstne	r3, r5, lsl #12
    11d8:	0905132e 	stmdbeq	r5, {r1, r2, r3, r5, r8, r9, ip}
    11dc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    11e0:	2d0f052e 	cfstr32cs	mvfx0, [pc, #-184]	; 1130 <__HEAP_SIZE+0x130>
    11e4:	03060505 	movweq	r0, #25861	; 0x6505
    11e8:	0d052e0f 	stceq	14, cr2, [r5, #-60]	; 0xffffffc4
    11ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    11f0:	0613052e 	ldreq	r0, [r3], -lr, lsr #10
    11f4:	05e45603 	strbeq	r5, [r4, #1539]!	; 0x603
    11f8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    11fc:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1200:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1204:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    1208:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    120c:	03130519 	tsteq	r3, #104857600	; 0x6400000
    1210:	1905207a 	stmdbne	r5, {r1, r3, r4, r5, r6, sp}
    1214:	2b050106 	blcs	141634 <__RAM_SIZE+0x41634>
    1218:	31052e06 	tstcc	r5, r6, lsl #28
    121c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1220:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1224:	180d0501 	stmdane	sp, {r0, r8, sl}
    1228:	051b1305 	ldreq	r1, [fp, #-773]	; 0xfffffcfb
    122c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1230:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1234:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1238:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    123c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    1240:	1c130517 	cfldr32ne	mvfx0, [r3], {23}
    1244:	01061905 	tsteq	r6, r5, lsl #18
    1248:	2e062b05 	vmlacs.f64	d2, d6, d5
    124c:	01063105 	tsteq	r6, r5, lsl #2
    1250:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1254:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1258:	1305160d 	movwne	r1, #22029	; 0x560d
    125c:	0619051d 			; <UNDEFINED> instruction: 0x0619051d
    1260:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1264:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1268:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    126c:	013d052e 	teqeq	sp, lr, lsr #10
    1270:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    1274:	0f052507 	svceq	0x00052507
    1278:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    127c:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    1280:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1284:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    1288:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    128c:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1290:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1294:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    1298:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    129c:	7a030609 	bvc	c2ac8 <__HEAP_SIZE+0xc1ac8>
    12a0:	060f054a 	streq	r0, [pc], -sl, asr #10
    12a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    12a8:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    12ac:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    12b0:	0b030607 	bleq	c2ad4 <__HEAP_SIZE+0xc1ad4>
    12b4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    12b8:	06070501 	streq	r0, [r7], -r1, lsl #10
    12bc:	060d052f 	streq	r0, [sp], -pc, lsr #10
    12c0:	06070501 	streq	r0, [r7], -r1, lsl #10
    12c4:	060b052f 	streq	r0, [fp], -pc, lsr #10
    12c8:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    12cc:	207cb903 	rsbscs	fp, ip, r3, lsl #18
    12d0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    12d4:	3c010616 	stccc	6, cr0, [r1], {22}
    12d8:	c5030a05 	strgt	r0, [r3, #-2565]	; 0xfffff5fb
    12dc:	0c050103 	stfeqs	f0, [r5], {3}
    12e0:	0f053106 	svceq	0x00053106
    12e4:	79030106 	stmdbvc	r3, {r1, r2, r8}
    12e8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    12ec:	06150541 	ldreq	r0, [r5], -r1, asr #10
    12f0:	09054a01 	stmdbeq	r5, {r0, r9, fp, lr}
    12f4:	13052306 	movwne	r2, #21254	; 0x5306
    12f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12fc:	33054b06 	movwcc	r4, #23302	; 0x5b06
    1300:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1304:	0f052f06 	svceq	0x00052f06
    1308:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    130c:	05190609 	ldreq	r0, [r9, #-1545]	; 0xfffff9f7
    1310:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1314:	052f0609 	streq	r0, [pc, #-1545]!	; d13 <__Vectors_Size+0x553>
    1318:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    131c:	052f0609 	streq	r0, [pc, #-1545]!	; d1b <__Vectors_Size+0x55b>
    1320:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1324:	0f05200c 	svceq	0x0005200c
    1328:	060b052c 	streq	r0, [fp], -ip, lsr #10
    132c:	06110531 			; <UNDEFINED> instruction: 0x06110531
    1330:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1334:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1338:	06090501 	streq	r0, [r9], -r1, lsl #10
    133c:	060f0540 	streq	r0, [pc], -r0, asr #10
    1340:	06090501 	streq	r0, [r9], -r1, lsl #10
    1344:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1348:	06090501 	streq	r0, [r9], -r1, lsl #10
    134c:	060d052f 	streq	r0, [sp], -pc, lsr #10
    1350:	200c0501 	andcs	r0, ip, r1, lsl #10
    1354:	052c0f05 	streq	r0, [ip, #-3845]!	; 0xfffff0fb
    1358:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    135c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1360:	052f060b 	streq	r0, [pc, #-1547]!	; d5d <__Vectors_Size+0x59d>
    1364:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1368:	05410609 	strbeq	r0, [r1, #-1545]	; 0xfffff9f7
    136c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1370:	052f0609 	streq	r0, [pc, #-1545]!	; d6f <__Vectors_Size+0x5af>
    1374:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1378:	052f0609 	streq	r0, [pc, #-1545]!	; d77 <__Vectors_Size+0x5b7>
    137c:	010f0305 	tsteq	pc, r5, lsl #6
    1380:	01060d05 	tsteq	r6, r5, lsl #26
    1384:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1388:	74030609 	strvc	r0, [r3], #-1545	; 0xfffff9f7
    138c:	05015b02 	streq	r5, [r1, #-2818]	; 0xfffff4fe
    1390:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1394:	052f0609 	streq	r0, [pc, #-1545]!	; d93 <__Vectors_Size+0x5d3>
    1398:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    139c:	222f0609 	eorcs	r0, pc, #9437184	; 0x900000
    13a0:	01060f05 	tsteq	r6, r5, lsl #30
    13a4:	2f060905 	svccs	0x00060905
    13a8:	01060f05 	tsteq	r6, r5, lsl #30
    13ac:	2f060905 	svccs	0x00060905
    13b0:	13200f03 			; <UNDEFINED> instruction: 0x13200f03
    13b4:	01060c05 	tsteq	r6, r5, lsl #24
    13b8:	02001c05 	andeq	r1, r0, #1280	; 0x500
    13bc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    13c0:	0531060e 	ldreq	r0, [r1, #-1550]!	; 0xfffff9f2
    13c4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    13c8:	0531060e 	ldreq	r0, [r1, #-1550]!	; 0xfffff9f2
    13cc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    13d0:	1332060b 	teqne	r2, #11534336	; 0xb00000
    13d4:	01061105 	tsteq	r6, r5, lsl #2
    13d8:	032d1005 			; <UNDEFINED> instruction: 0x032d1005
    13dc:	09052e77 	stmdbeq	r5, {r0, r1, r2, r4, r5, r6, r9, sl, fp, sp}
    13e0:	200d0306 	andcs	r0, sp, r6, lsl #6
    13e4:	01060c05 	tsteq	r6, r5, lsl #24
    13e8:	33060905 	movwcc	r0, #26885	; 0x6905
    13ec:	01060c05 	tsteq	r6, r5, lsl #24
    13f0:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    13f4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    13f8:	052f060b 	streq	r0, [pc, #-1547]!	; df5 <__Vectors_Size+0x635>
    13fc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1400:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1404:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1408:	053d060b 	ldreq	r0, [sp, #-1547]!	; 0xfffff9f5
    140c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1410:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1414:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1418:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    141c:	0b052e01 	bleq	14cc28 <__RAM_SIZE+0x4cc28>
    1420:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
    1424:	01060e05 	tsteq	r6, r5, lsl #28
    1428:	4f061005 	svcmi	0x00061005
    142c:	01061305 	tsteq	r6, r5, lsl #6
    1430:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    1434:	01066705 	tsteq	r6, r5, lsl #14
    1438:	054a4e05 	strbeq	r4, [sl, #-3589]	; 0xfffff1fb
    143c:	0402000d 	streq	r0, [r2], #-13
    1440:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
    1444:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1448:	00010608 	andeq	r0, r1, r8, lsl #12
    144c:	74080402 	strvc	r0, [r8], #-1026	; 0xfffffbfe
    1450:	08040200 	stmdaeq	r4, {r9}
    1454:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1458:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    145c:	00200804 	eoreq	r0, r0, r4, lsl #16
    1460:	20080402 	andcs	r0, r8, r2, lsl #8
    1464:	47031005 	strmi	r1, [r3, -r5]
    1468:	05313101 	ldreq	r3, [r1, #-257]!	; 0xfffffeff
    146c:	0536060b 	ldreq	r0, [r6, #-1547]!	; 0xfffff9f5
    1470:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    1474:	03060b05 	movweq	r0, #27397	; 0x6b05
    1478:	0e052010 	mcreq	0, 0, r2, cr5, cr0, {0}
    147c:	10050106 	andne	r0, r5, r6, lsl #2
    1480:	13054206 	movwne	r4, #20998	; 0x5206
    1484:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1488:	4c054106 	stfmis	f4, [r5], {6}
    148c:	3c050106 	stfccs	f0, [r5], {6}
    1490:	000d053c 	andeq	r0, sp, ip, lsr r5
    1494:	06080402 	streq	r0, [r8], -r2, lsl #8
    1498:	0038054b 	eorseq	r0, r8, fp, asr #10
    149c:	06080402 	streq	r0, [r8], -r2, lsl #8
    14a0:	00130501 	andseq	r0, r3, r1, lsl #10
    14a4:	4a080402 	bmi	2024b4 <__RAM_SIZE+0x1024b4>
    14a8:	08040200 	stmdaeq	r4, {r9}
    14ac:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    14b0:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    14b4:	00580804 	subseq	r0, r8, r4, lsl #16
    14b8:	20080402 	andcs	r0, r8, r2, lsl #8
    14bc:	03060905 	movweq	r0, #26885	; 0x6905
    14c0:	0f050112 	svceq	0x00050112
    14c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    14c8:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
    14cc:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    14d0:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    14d4:	0583060d 	streq	r0, [r3, #1549]	; 0x60d
    14d8:	0501063d 	streq	r0, [r1, #-1597]	; 0xfffff9c3
    14dc:	582e4a13 	stmdapl	lr!, {r0, r1, r4, r9, fp, lr}
    14e0:	3d0520ac 	stccc	0, cr2, [r5, #-688]	; 0xfffffd50
    14e4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    14e8:	0618054e 	ldreq	r0, [r8], -lr, asr #10
    14ec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    14f0:	0638054b 	ldrteq	r0, [r8], -fp, asr #10
    14f4:	4a130501 	bmi	4c2900 <__RAM_SIZE+0x3c2900>
    14f8:	0520589e 	streq	r5, [r0, #-2206]!	; 0xfffff762
    14fc:	02000181 	andeq	r0, r0, #1073741856	; 0x40000020
    1500:	05230204 	streq	r0, [r3, #-516]!	; 0xfffffdfc
    1504:	66053c71 			; <UNDEFINED> instruction: 0x66053c71
    1508:	0181053c 	orreq	r0, r1, ip, lsr r5
    150c:	0d05583c 	stceq	8, cr5, [r5, #-240]	; 0xffffff10
    1510:	13051a06 	movwne	r1, #23046	; 0x5a06
    1514:	4a080106 	bmi	201934 <__RAM_SIZE+0x101934>
    1518:	0d052058 	stceq	0, cr2, [r5, #-352]	; 0xfffffea0
    151c:	13052406 	movwne	r2, #21510	; 0x5406
    1520:	909e0106 	addsls	r0, lr, r6, lsl #2
    1524:	01ae0520 			; <UNDEFINED> instruction: 0x01ae0520
    1528:	02040200 	andeq	r0, r4, #0, 4
    152c:	01950523 	orrseq	r0, r5, r3, lsr #10
    1530:	01ae053c 			; <UNDEFINED> instruction: 0x01ae053c
    1534:	09055858 	stmdbeq	r5, {r3, r4, r6, fp, ip, lr}
    1538:	010a0306 	tsteq	sl, r6, lsl #6
    153c:	01060c05 	tsteq	r6, r5, lsl #24
    1540:	2f060905 	svccs	0x00060905
    1544:	01060f05 	tsteq	r6, r5, lsl #30
    1548:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    154c:	060f0567 	streq	r0, [pc], -r7, ror #10
    1550:	06090501 	streq	r0, [r9], -r1, lsl #10
    1554:	001d053d 	andseq	r0, sp, sp, lsr r5
    1558:	1d010402 	cfstrsne	mvf0, [r1, #-8]
    155c:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    1560:	01060104 	tsteq	r6, r4, lsl #2
    1564:	01040200 	mrseq	r0, R12_usr
    1568:	0609052e 	streq	r0, [r9], -lr, lsr #10
    156c:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    1570:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1574:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1578:	31052e02 	tstcc	r5, r2, lsl #28
    157c:	03040200 	movweq	r0, #16896	; 0x4200
    1580:	37052e06 	strcc	r2, [r5, -r6, lsl #28]
    1584:	03040200 	movweq	r0, #16896	; 0x4200
    1588:	09050106 	stmdbeq	r5, {r1, r2, r8}
    158c:	0c052f06 	stceq	15, cr2, [r5], {6}
    1590:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    1594:	02040200 	andeq	r0, r4, #0, 4
    1598:	0031052e 	eorseq	r0, r1, lr, lsr #10
    159c:	06030402 	streq	r0, [r3], -r2, lsl #8
    15a0:	0037052e 	eorseq	r0, r7, lr, lsr #10
    15a4:	06030402 	streq	r0, [r3], -r2, lsl #8
    15a8:	06090501 	streq	r0, [r9], -r1, lsl #10
    15ac:	060f052f 	streq	r0, [pc], -pc, lsr #10
    15b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    15b4:	0f056708 	svceq	0x00056708
    15b8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15bc:	14243d06 	strtne	r3, [r4], #-3334	; 0xfffff2fa
    15c0:	01060c05 	tsteq	r6, r5, lsl #24
    15c4:	1e16052e 	cfmul64ne	mvdx0, mvdx6, mvdx14
    15c8:	36060905 	strcc	r0, [r6], -r5, lsl #18
    15cc:	01061305 	tsteq	r6, r5, lsl #6
    15d0:	2e3c0905 	vaddcs.f16	s0, s24, s10	; <UNPREDICTABLE>
    15d4:	0c055a06 			; <UNDEFINED> instruction: 0x0c055a06
    15d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15dc:	0f052506 	svceq	0x00052506
    15e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15e4:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
    15e8:	062e7403 	strteq	r7, [lr], -r3, lsl #8
    15ec:	4913052e 	ldmdbmi	r3, {r1, r2, r3, r5, r8, sl}
    15f0:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    15f4:	051f0611 	ldreq	r0, [pc, #-1553]	; feb <__Vectors_Size+0x82b>
    15f8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    15fc:	052e2e11 	streq	r2, [lr, #-3601]!	; 0xfffff1ef
    1600:	2e3c2b16 	vmovcs.32	r2, d12[1]
    1604:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    1608:	06200c03 	strteq	r0, [r0], -r3, lsl #24
    160c:	49130520 	ldmdbmi	r3, {r5, r8, sl}
    1610:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1614:	051f0611 	ldreq	r0, [pc, #-1553]	; 100b <__HEAP_SIZE+0xb>
    1618:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    161c:	2e2e2e11 	mcrcs	14, 1, r2, cr14, cr1, {0}
    1620:	03060905 	movweq	r0, #26885	; 0x6905
    1624:	15050109 	strne	r0, [r5, #-265]	; 0xfffffef7
    1628:	09050106 	stmdbeq	r5, {r1, r2, r8}
    162c:	1a055906 	bne	157a4c <__RAM_SIZE+0x57a4c>
    1630:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1634:	7b900306 	blvc	fe402254 <__StackTop+0xc6302254>
    1638:	01220574 			; <UNDEFINED> instruction: 0x01220574
    163c:	2e061e05 	cdpcs	14, 0, cr1, cr6, cr5, {0}
    1640:	20061105 	andcs	r1, r6, r5, lsl #2
    1644:	2e060305 	cdpcs	3, 0, cr0, cr6, cr5, {0}
    1648:	05201e05 	streq	r1, [r0, #-3589]!	; 0xfffff1fb
    164c:	03052014 	movweq	r2, #20500	; 0x5014
    1650:	1b052f06 	blne	14d270 <__RAM_SIZE+0x4d270>
    1654:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1658:	f1030609 			; <UNDEFINED> instruction: 0xf1030609
    165c:	0c050104 	stfeqs	f0, [r5], {4}
    1660:	0b050106 	bleq	141a80 <__RAM_SIZE+0x41a80>
    1664:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    1668:	09050106 	stmdbeq	r5, {r1, r2, r8}
    166c:	0c053e06 	stceq	14, cr3, [r5], {6}
    1670:	2e4a0106 	dvfcse	f0, f2, f6
    1674:	1a052020 	bne	1496fc <__RAM_SIZE+0x496fc>
    1678:	052e2e1b 	streq	r2, [lr, #-3611]!	; 0xfffff1e5
    167c:	0635060d 	ldrteq	r0, [r5], -sp, lsl #12
    1680:	4913052e 	ldmdbmi	r3, {r1, r2, r3, r5, r8, sl}
    1684:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1688:	051f0611 	ldreq	r0, [pc, #-1553]	; 107f <__HEAP_SIZE+0x7f>
    168c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1690:	13052011 	movwne	r2, #20497	; 0x5011
    1694:	05203c2e 	streq	r3, [r0, #-3118]!	; 0xfffff3d2
    1698:	0b052545 	bleq	14abb4 <__RAM_SIZE+0x4abb4>
    169c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    16a0:	0b050106 	bleq	141ac0 <__RAM_SIZE+0x41ac0>
    16a4:	0f05202e 	svceq	0x0005202e
    16a8:	11054906 	tstne	r5, r6, lsl #18
    16ac:	0f050106 	svceq	0x00050106
    16b0:	001a052e 	andseq	r0, sl, lr, lsr #10
    16b4:	20010402 	andcs	r0, r1, r2, lsl #8
    16b8:	02004505 	andeq	r4, r0, #20971520	; 0x1400000
    16bc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    16c0:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    16c4:	0c052002 	stceq	0, cr2, [r5], {2}
    16c8:	06090532 			; <UNDEFINED> instruction: 0x06090532
    16cc:	060c052e 	streq	r0, [ip], -lr, lsr #10
    16d0:	06090501 	streq	r0, [r9], -r1, lsl #10
    16d4:	060f0533 			; <UNDEFINED> instruction: 0x060f0533
    16d8:	06090501 	streq	r0, [r9], -r1, lsl #10
    16dc:	2e20063d 	mcrcs	6, 1, r0, cr0, cr13, {1}
    16e0:	1c060d05 	stcne	13, cr0, [r6], {5}
    16e4:	13052006 	movwne	r2, #20486	; 0x5006
    16e8:	210d0549 	tstcs	sp, r9, asr #10
    16ec:	1f061105 	svcne	0x00061105
    16f0:	01061305 	tsteq	r6, r5, lsl #6
    16f4:	2e2e1105 	sufcse	f1, f6, f5
    16f8:	09052020 	stmdbeq	r5, {r5, sp}
    16fc:	01090306 	tsteq	r9, r6, lsl #6
    1700:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    1704:	06090501 	streq	r0, [r9], -r1, lsl #10
    1708:	0b051330 	bleq	1463d0 <__RAM_SIZE+0x463d0>
    170c:	06510517 			; <UNDEFINED> instruction: 0x06510517
    1710:	4a110501 	bmi	442b1c <__RAM_SIZE+0x342b1c>
    1714:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    1718:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    171c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1720:	0620063d 			; <UNDEFINED> instruction: 0x0620063d
    1724:	06200616 			; <UNDEFINED> instruction: 0x06200616
    1728:	060f0559 			; <UNDEFINED> instruction: 0x060f0559
    172c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1730:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    1734:	20062306 	andcs	r2, r6, r6, lsl #6
    1738:	0f054b06 	svceq	0x00054b06
    173c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1740:	10063d06 	andne	r3, r6, r6, lsl #26
    1744:	7df80322 	ldclvc	3, cr0, [r8, #136]!	; 0x88
    1748:	06030520 	streq	r0, [r3], -r0, lsr #10
    174c:	2e028d03 	cdpcs	13, 0, cr8, cr2, cr3, {0}
    1750:	01040200 	mrseq	r0, R12_usr
    1754:	002e2e06 	eoreq	r2, lr, r6, lsl #28
    1758:	20040402 	andcs	r0, r4, r2, lsl #8
    175c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1760:	01054d06 	tsteq	r5, r6, lsl #26
    1764:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1768:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    176c:	024a0404 	subeq	r0, sl, #4, 8	; 0x4000000
    1770:	01010003 	tsteq	r1, r3
    1774:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1778:	001b0802 	andseq	r0, fp, r2, lsl #16
    177c:	01950310 	orrseq	r0, r5, r0, lsl r3
    1780:	13030501 	movwne	r0, #13569	; 0x3501
    1784:	05011105 	streq	r1, [r1, #-261]	; 0xfffffefb
    1788:	0305011c 	movweq	r0, #20764	; 0x511c
    178c:	06060513 			; <UNDEFINED> instruction: 0x06060513
    1790:	2c010501 	cfstr32cs	mvfx0, [r1], {1}
    1794:	23060505 	movwcs	r0, #25861	; 0x6505
    1798:	30060105 	andcc	r0, r6, r5, lsl #2
    179c:	01000102 	tsteq	r0, r2, lsl #2
    17a0:	00010501 	andeq	r0, r1, r1, lsl #10
    17a4:	1b140205 	blne	501fc0 <__RAM_SIZE+0x401fc0>
    17a8:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
    17ac:	01060106 	tsteq	r6, r6, lsl #2
    17b0:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    17b4:	05132113 	ldreq	r2, [r3, #-275]	; 0xfffffeed
    17b8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    17bc:	13750603 	cmnne	r5, #3145728	; 0x300000
    17c0:	13060105 	movwne	r0, #24837	; 0x6105
    17c4:	01000802 	tsteq	r0, r2, lsl #16
    17c8:	00010501 	andeq	r0, r1, r1, lsl #10
    17cc:	00000205 	andeq	r0, r0, r5, lsl #4
    17d0:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    17d4:	01060106 	tsteq	r6, r6, lsl #2
    17d8:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    17dc:	13052113 	movwne	r2, #20755	; 0x5113
    17e0:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    17e4:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    17e8:	13060105 	movwne	r0, #24837	; 0x6105
    17ec:	01000802 	tsteq	r0, r2, lsl #16
    17f0:	00010501 	andeq	r0, r1, r1, lsl #10
    17f4:	00000205 	andeq	r0, r0, r5, lsl #4
    17f8:	f3030000 	vhadd.u8	d0, d3, d0
    17fc:	01060106 	tsteq	r6, r6, lsl #2
    1800:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    1804:	13052113 	movwne	r2, #20755	; 0x5113
    1808:	202e0106 	eorcs	r0, lr, r6, lsl #2
    180c:	2f060305 	svccs	0x00060305
    1810:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1814:	00070213 	andeq	r0, r7, r3, lsl r2
    1818:	01050101 	tsteq	r5, r1, lsl #2
    181c:	00020500 	andeq	r0, r2, r0, lsl #10
    1820:	03000000 	movweq	r0, #0
    1824:	060106fd 			; <UNDEFINED> instruction: 0x060106fd
    1828:	06030501 	streq	r0, [r3], -r1, lsl #10
    182c:	0a05133d 	beq	146528 <__RAM_SIZE+0x46528>
    1830:	204a0106 	subcs	r0, sl, r6, lsl #2
    1834:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1838:	01010006 	tsteq	r1, r6
    183c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1840:	00000002 	andeq	r0, r0, r2
    1844:	07840300 	streq	r0, [r4, r0, lsl #6]
    1848:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    184c:	052f0603 	streq	r0, [pc, #-1539]!	; 1251 <__HEAP_SIZE+0x251>
    1850:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
    1854:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    1858:	05022f01 	streq	r2, [r2, #-3841]	; 0xfffff0ff
    185c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1860:	02050001 	andeq	r0, r5, #1
    1864:	00000000 	andeq	r0, r0, r0
    1868:	01078a03 	tsteq	r7, r3, lsl #20
    186c:	03050106 	movweq	r0, #20742	; 0x5106
    1870:	21136706 	tstcs	r3, r6, lsl #14
    1874:	01061b05 	tsteq	r6, r5, lsl #22
    1878:	2f060305 	svccs	0x00060305
    187c:	01061305 	tsteq	r6, r5, lsl #6
    1880:	06030558 			; <UNDEFINED> instruction: 0x06030558
    1884:	0105132f 	tsteq	r5, pc, lsr #6
    1888:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    188c:	38010100 	stmdacc	r1, {r8}
    1890:	03000003 	movweq	r0, #3
    1894:	0001cc00 	andeq	ip, r1, r0, lsl #24
    1898:	fb010200 	blx	420a2 <__HEAP_SIZE+0x410a2>
    189c:	01000d0e 	tsteq	r0, lr, lsl #26
    18a0:	00010101 	andeq	r0, r1, r1, lsl #2
    18a4:	00010000 	andeq	r0, r1, r0
    18a8:	2e2e0100 	sufcse	f0, f6, f0
    18ac:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    18b0:	72532f65 	subsvc	r2, r3, #404	; 0x194
    18b4:	3a630063 	bcc	18c1a48 <__RAM_SIZE+0x17c1a48>
    18b8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    18bc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    18c0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    18c4:	6f72705c 	svcvs	0x0072705c
    18c8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    18cc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    18d0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    18d4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    18d8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    18dc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    18e0:	61652d65 	cmnvs	r5, r5, ror #26
    18e4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    18e8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    18ec:	31323032 	teqcc	r2, r2, lsr r0
    18f0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    18f4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    18f8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    18fc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1900:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1904:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1908:	616d5c65 	cmnvs	sp, r5, ror #24
    190c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    1910:	3a630065 	bcc	18c1aac <__RAM_SIZE+0x17c1aac>
    1914:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    1918:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    191c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1920:	6f72705c 	svcvs	0x0072705c
    1924:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1928:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    192c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1930:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1934:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1938:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    193c:	61652d65 	cmnvs	r5, r5, ror #26
    1940:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1944:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    1948:	31323032 	teqcc	r2, r2, lsr r0
    194c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1950:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    1954:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1958:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    195c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1960:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1964:	30315c69 	eorscc	r5, r1, r9, ror #24
    1968:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    196c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1970:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1974:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1978:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    197c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1980:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1984:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1988:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    198c:	5f6d7261 	svcpl	0x006d7261
    1990:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1994:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1998:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    199c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    19a0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    19a4:	30312d69 	eorscc	r2, r1, r9, ror #26
    19a8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    19ac:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    19b0:	615c3031 	cmpvs	ip, r1, lsr r0
    19b4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    19b8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    19bc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    19c0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    19c4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    19c8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    19cc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    19d0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    19d4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    19d8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    19dc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    19e0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    19e4:	5f6d7261 	svcpl	0x006d7261
    19e8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    19ec:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    19f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    19f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    19f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    19fc:	30312d69 	eorscc	r2, r1, r9, ror #26
    1a00:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1a04:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1a08:	615c3031 	cmpvs	ip, r1, lsr r0
    1a0c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1a10:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1a14:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1a18:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1a1c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1a20:	61750000 	cmnvs	r5, r0
    1a24:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    1a28:	00000100 	andeq	r0, r0, r0, lsl #2
    1a2c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1a30:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1a34:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1a38:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1a3c:	00000200 	andeq	r0, r0, r0, lsl #4
    1a40:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1a44:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1a48:	00000300 	andeq	r0, r0, r0, lsl #6
    1a4c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1a50:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1a54:	00040068 	andeq	r0, r4, r8, rrx
    1a58:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1a5c:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1a60:	00000500 	andeq	r0, r0, r0, lsl #10
    1a64:	00160500 	andseq	r0, r6, r0, lsl #10
    1a68:	1b400205 	blne	1002284 <__RAM_SIZE+0xf02284>
    1a6c:	1c031000 	stcne	0, cr1, [r3], {-0}
    1a70:	00240501 	eoreq	r0, r4, r1, lsl #10
    1a74:	13010402 	movwne	r0, #5122	; 0x1402
    1a78:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1a7c:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    1a80:	0402000c 	streq	r0, [r2], #-12
    1a84:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1a88:	0402000b 	streq	r0, [r2], #-11
    1a8c:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1a90:	16053d06 	strne	r3, [r5], -r6, lsl #26
    1a94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1a98:	01052f06 	tsteq	r5, r6, lsl #30
    1a9c:	03021306 	movweq	r1, #8966	; 0x2306
    1aa0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1aa4:	02050014 	andeq	r0, r5, #20
    1aa8:	00000000 	andeq	r0, r0, r0
    1aac:	05012203 	streq	r2, [r1, #-515]	; 0xfffffdfd
    1ab0:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    1ab4:	0b051301 	bleq	1466c0 <__RAM_SIZE+0x466c0>
    1ab8:	01040200 	mrseq	r0, R12_usr
    1abc:	000d0501 	andeq	r0, sp, r1, lsl #10
    1ac0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ac4:	000b0501 	andeq	r0, fp, r1, lsl #10
    1ac8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1acc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1ad0:	01060c05 	tsteq	r6, r5, lsl #24
    1ad4:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1ad8:	01010003 	tsteq	r1, r3
    1adc:	05001e05 	streq	r1, [r0, #-3589]	; 0xfffff1fb
    1ae0:	001b5402 	andseq	r5, fp, r2, lsl #8
    1ae4:	01270310 			; <UNDEFINED> instruction: 0x01270310
    1ae8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1aec:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1af0:	05110609 	ldreq	r0, [r1, #-1545]	; 0xfffff9f7
    1af4:	0905210b 	stmdbeq	r5, {r0, r1, r3, r8, sp}
    1af8:	052f2106 	streq	r2, [pc, #-262]!	; 19fa <__HEAP_SIZE+0x9fa>
    1afc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1b00:	051e060b 	ldreq	r0, [lr, #-1547]	; 0xfffff9f5
    1b04:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1b08:	0505200b 	streq	r2, [r5, #-11]
    1b0c:	053d3206 	ldreq	r3, [sp, #-518]!	; 0xfffffdfa
    1b10:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    1b14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1b18:	02050016 	andeq	r0, r5, #22
    1b1c:	10001b74 	andne	r1, r0, r4, ror fp
    1b20:	05013103 	streq	r3, [r1, #-259]	; 0xfffffefd
    1b24:	16051305 	strne	r1, [r5], -r5, lsl #6
    1b28:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b2c:	16053d06 	strne	r3, [r5], -r6, lsl #26
    1b30:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b34:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1b38:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b3c:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1b40:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b44:	16053d06 	strne	r3, [r5], -r6, lsl #26
    1b48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b4c:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1b50:	01050106 	tsteq	r5, r6, lsl #2
    1b54:	0004022f 	andeq	r0, r4, pc, lsr #4
    1b58:	24050101 	strcs	r0, [r5], #-257	; 0xfffffeff
    1b5c:	00020500 	andeq	r0, r2, r0, lsl #10
    1b60:	03000000 	movweq	r0, #0
    1b64:	0106013a 	tsteq	r6, sl, lsr r1
    1b68:	21060505 	tstcs	r6, r5, lsl #10
    1b6c:	2f060105 	svccs	0x00060105
    1b70:	01000102 	tsteq	r0, r2, lsl #2
    1b74:	00300501 	eorseq	r0, r0, r1, lsl #10
    1b78:	00000205 	andeq	r0, r0, r5, lsl #4
    1b7c:	3e030000 	cdpcc	0, 0, cr0, cr3, cr0, {0}
    1b80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1b84:	133d0605 	teqne	sp, #5242880	; 0x500000
    1b88:	01060c05 	tsteq	r6, r5, lsl #24
    1b8c:	34060905 	strcc	r0, [r6], #-2309	; 0xfffff6fb
    1b90:	01061405 	tsteq	r6, r5, lsl #8
    1b94:	21060905 	tstcs	r6, r5, lsl #18
    1b98:	01060c05 	tsteq	r6, r5, lsl #24
    1b9c:	03060b05 	movweq	r0, #27397	; 0x6b05
    1ba0:	0505207a 	streq	r2, [r5, #-122]	; 0xffffff86
    1ba4:	13090501 	movwne	r0, #38145	; 0x9501
    1ba8:	01060e05 	tsteq	r6, r5, lsl #28
    1bac:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    1bb0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1bb4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1bb8:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    1bbc:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1bc0:	01053406 	tsteq	r5, r6, lsl #8
    1bc4:	20201306 	eorcs	r1, r0, r6, lsl #6
    1bc8:	46010100 	strmi	r0, [r1], -r0, lsl #2
    1bcc:	03000006 	movweq	r0, #6
    1bd0:	00025b00 	andeq	r5, r2, r0, lsl #22
    1bd4:	fb010200 	blx	423de <__HEAP_SIZE+0x413de>
    1bd8:	01000d0e 	tsteq	r0, lr, lsl #26
    1bdc:	00010101 	andeq	r0, r1, r1, lsl #2
    1be0:	00010000 	andeq	r0, r1, r0
    1be4:	2e2e0100 	sufcse	f0, f6, f0
    1be8:	2f2e2e2f 	svccs	0x002e2e2f
    1bec:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1b3c <__HEAP_SIZE+0xb3c>
    1bf0:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    1bf4:	2f736c69 	svccs	0x00736c69
    1bf8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1bfc:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1c00:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    1c04:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    1c08:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1c0c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1c10:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    1c14:	5f534953 	svcpl	0x00534953
    1c18:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
    1c1c:	2f534953 	svccs	0x00534953
    1c20:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1c24:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1c28:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1c2c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1c30:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1c34:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1c38:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1c3c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1c40:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1c44:	5f6d7261 	svcpl	0x006d7261
    1c48:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1c4c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1c50:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1c54:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1c58:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1c5c:	30312d69 	eorscc	r2, r1, r9, ror #26
    1c60:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1c64:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1c68:	615c3031 	cmpvs	ip, r1, lsr r0
    1c6c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1c70:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1c74:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1c78:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1c7c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1c80:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    1c84:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    1c88:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1c8c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1c90:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1c94:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1c98:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1c9c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1ca0:	5f6d7261 	svcpl	0x006d7261
    1ca4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1ca8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1cac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1cb0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1cb4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1cb8:	30312d69 	eorscc	r2, r1, r9, ror #26
    1cbc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1cc0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1cc4:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    1cc8:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    1ccc:	615c6363 	cmpvs	ip, r3, ror #6
    1cd0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1cd4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1cd8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1cdc:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    1ce0:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    1ce4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1ce8:	00656475 	rsbeq	r6, r5, r5, ror r4
    1cec:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1cf0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1cf4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1cf8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1cfc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1d00:	615c6d61 	cmpvs	ip, r1, ror #26
    1d04:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1d08:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1d0c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1d10:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1d14:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1d18:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1d1c:	2e30312d 	rsfcssp	f3, f0, #5.0
    1d20:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1d24:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1d28:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1d2c:	6f6e2d6d 	svcvs	0x006e2d6d
    1d30:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1d34:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1d38:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d3c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1d40:	00737973 	rsbseq	r7, r3, r3, ror r9
    1d44:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1d48:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1d4c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1d50:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    1d54:	61662f73 	smcvs	25331	; 0x62f3
    1d58:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1d5c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1d60:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1d64:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1d68:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1d6c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1d70:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1d74:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1d78:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1d7c:	5f6d7261 	svcpl	0x006d7261
    1d80:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1d84:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1d88:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1d8c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1d90:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1d94:	30312d69 	eorscc	r2, r1, r9, ror #26
    1d98:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1d9c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1da0:	615c3031 	cmpvs	ip, r1, lsr r0
    1da4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1da8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1dac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1db0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1db4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1db8:	61660000 	cmnvs	r6, r0
    1dbc:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1dc0:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1dc4:	0100632e 	tsteq	r0, lr, lsr #6
    1dc8:	6d630000 	stclvs	0, cr0, [r3, #-0]
    1dcc:	5f736973 	svcpl	0x00736973
    1dd0:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    1dd4:	00020068 	andeq	r0, r2, r8, rrx
    1dd8:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    1ddc:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1de0:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1de4:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1de8:	00030068 	andeq	r0, r3, r8, rrx
    1dec:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1df0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1df4:	00040068 	andeq	r0, r4, r8, rrx
    1df8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1dfc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    1e00:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1e04:	61660000 	cmnvs	r6, r0
    1e08:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1e0c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1e10:	0600682e 	streq	r6, [r0], -lr, lsr #16
    1e14:	74730000 	ldrbtvc	r0, [r3], #-0
    1e18:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    1e1c:	00070068 	andeq	r0, r7, r8, rrx
    1e20:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    1e24:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    1e28:	003e6e69 	eorseq	r6, lr, r9, ror #28
    1e2c:	00000000 	andeq	r0, r0, r0
    1e30:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    1e34:	001b9802 	andseq	r9, fp, r2, lsl #16
    1e38:	01810310 	orreq	r0, r1, r0, lsl r3
    1e3c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1e40:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1e44:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1e48:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1e4c:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    1e50:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    1e54:	04020009 	streq	r0, [r2], #-9
    1e58:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1e5c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1e60:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    1e64:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    1e68:	3d052e03 	stccc	14, cr2, [r5, #-12]
    1e6c:	03040200 	movweq	r0, #16896	; 0x4200
    1e70:	3e055706 	cdpcc	7, 0, cr5, cr5, cr6, {0}
    1e74:	03040200 	movweq	r0, #16896	; 0x4200
    1e78:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    1e7c:	01040200 	mrseq	r0, R12_usr
    1e80:	05052006 	streq	r2, [r5, #-6]
    1e84:	01040200 	mrseq	r0, R12_usr
    1e88:	31060106 	tstcc	r6, r6, lsl #2
    1e8c:	01062205 	tsteq	r6, r5, lsl #4
    1e90:	0605052f 	streq	r0, [r5], -pc, lsr #10
    1e94:	0601052f 	streq	r0, [r1], -pc, lsr #10
    1e98:	02022e13 	andeq	r2, r2, #304	; 0x130
    1e9c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ea0:	02050033 	andeq	r0, r5, #51	; 0x33
    1ea4:	10001bc4 	andne	r1, r0, r4, asr #23
    1ea8:	01018c03 	tsteq	r1, r3, lsl #24
    1eac:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    1eb0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1eb4:	052f0605 	streq	r0, [pc, #-1541]!	; 18b7 <__HEAP_SIZE+0x8b7>
    1eb8:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    1ebc:	0505200e 	streq	r2, [r5, #-14]
    1ec0:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    1ec4:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1ec8:	01040200 	mrseq	r0, R12_usr
    1ecc:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    1ed0:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    1ed4:	00260501 	eoreq	r0, r6, r1, lsl #10
    1ed8:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1edc:	203f0c05 	eorscs	r0, pc, r5, lsl #24
    1ee0:	201b1005 	andscs	r1, fp, r5
    1ee4:	20232020 	eorcs	r2, r3, r0, lsr #32
    1ee8:	23010520 	movwcs	r0, #5408	; 0x1520
    1eec:	01000102 	tsteq	r0, r2, lsl #2
    1ef0:	00730501 	rsbseq	r0, r3, r1, lsl #10
    1ef4:	1bfc0205 	blne	fff02710 <__StackTop+0xc7e02710>
    1ef8:	ee031000 	cdp	0, 0, cr1, cr3, cr0, {0}
    1efc:	01060101 	tsteq	r6, r1, lsl #2
    1f00:	2f060505 	svccs	0x00060505
    1f04:	08051313 	stmdaeq	r5, {r0, r1, r4, r8, r9, ip}
    1f08:	1a050106 	bne	142328 <__RAM_SIZE+0x42328>
    1f0c:	01040200 	mrseq	r0, R12_usr
    1f10:	06050558 			; <UNDEFINED> instruction: 0x06050558
    1f14:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    1f18:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    1f1c:	05052909 	streq	r2, [r5, #-2313]	; 0xfffff6f7
    1f20:	02040200 	andeq	r0, r4, #0, 4
    1f24:	02003606 	andeq	r3, r0, #6291456	; 0x600000
    1f28:	00200104 	eoreq	r0, r0, r4, lsl #2
    1f2c:	06030402 	streq	r0, [r3], -r2, lsl #8
    1f30:	06090520 	streq	r0, [r9], -r0, lsr #10
    1f34:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
    1f38:	06090501 	streq	r0, [r9], -r1, lsl #10
    1f3c:	06130522 	ldreq	r0, [r3], -r2, lsr #10
    1f40:	200c0501 	andcs	r0, ip, r1, lsl #10
    1f44:	02002f05 	andeq	r2, r0, #5, 30
    1f48:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1f4c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    1f50:	09052001 	stmdbeq	r5, {r0, sp}
    1f54:	0c053206 	sfmeq	f3, 4, [r5], {6}
    1f58:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1f5c:	05144006 	ldreq	r4, [r4, #-6]
    1f60:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1f64:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    1f68:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1f6c:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    1f70:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1f74:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    1f78:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1f7c:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    1f80:	17053206 	strne	r3, [r5, -r6, lsl #4]
    1f84:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1f88:	0f052f06 	svceq	0x00052f06
    1f8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1f90:	0c052106 	stfeqs	f2, [r5], {6}
    1f94:	01050106 	tsteq	r5, r6, lsl #2
    1f98:	03100533 	tsteq	r0, #213909504	; 0xcc00000
    1f9c:	3f3c3c5a 	svccc	0x003c3c5a
    1fa0:	00060258 	andeq	r0, r6, r8, asr r2
    1fa4:	36050101 	strcc	r0, [r5], -r1, lsl #2
    1fa8:	78020500 	stmdavc	r2, {r8, sl}
    1fac:	0310001c 	tsteq	r0, #28
    1fb0:	0601019b 			; <UNDEFINED> instruction: 0x0601019b
    1fb4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1fb8:	062e062f 	strteq	r0, [lr], -pc, lsr #12
    1fbc:	01051330 	tsteq	r5, r0, lsr r3
    1fc0:	02203e06 	eoreq	r3, r0, #6, 28	; 0x60
    1fc4:	01010002 	tsteq	r1, r2
    1fc8:	05003605 	streq	r3, [r0, #-1541]	; 0xfffff9fb
    1fcc:	001c9002 	andseq	r9, ip, r2
    1fd0:	01a30310 			; <UNDEFINED> instruction: 0x01a30310
    1fd4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1fd8:	14210605 	strtne	r0, [r1], #-1541	; 0xfffff9fb
    1fdc:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    1fe0:	06050501 	streq	r0, [r5], -r1, lsl #10
    1fe4:	06010532 			; <UNDEFINED> instruction: 0x06010532
    1fe8:	00010213 	andeq	r0, r1, r3, lsl r2
    1fec:	1c050101 	stfnes	f0, [r5], {1}
    1ff0:	98020500 	stmdals	r2, {r8, sl}
    1ff4:	0310001c 	tsteq	r0, #28
    1ff8:	050100f6 	streq	r0, [r1, #-246]	; 0xffffff0a
    1ffc:	1a052105 	bne	14a418 <__RAM_SIZE+0x4a418>
    2000:	18050106 	stmdane	r5, {r1, r2, r8}
    2004:	06050520 	streq	r0, [r5], -r0, lsr #10
    2008:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    200c:	20180501 	andscs	r0, r8, r1, lsl #10
    2010:	2f060505 	svccs	0x00060505
    2014:	0105684c 	tsteq	r5, ip, asr #16
    2018:	13024c06 	movwne	r4, #11270	; 0x2c06
    201c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2020:	02050043 	andeq	r0, r5, #67	; 0x43
    2024:	10001ce8 	andne	r1, r0, r8, ror #25
    2028:	0101ae03 	tsteq	r1, r3, lsl #28
    202c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2030:	13133d06 	tstne	r3, #384	; 0x180
    2034:	18051413 	stmdane	r5, {r0, r1, r4, sl, ip}
    2038:	16050106 	strne	r0, [r5], -r6, lsl #2
    203c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2040:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    2044:	20160501 	andscs	r0, r6, r1, lsl #10
    2048:	21060505 	tstcs	r6, r5, lsl #10
    204c:	01061805 	tsteq	r6, r5, lsl #16
    2050:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2054:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2058:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    205c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2060:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2064:	16050106 	strne	r0, [r5], -r6, lsl #2
    2068:	06050520 	streq	r0, [r5], -r0, lsr #10
    206c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2070:	20160501 	andscs	r0, r6, r1, lsl #10
    2074:	21060505 	tstcs	r6, r5, lsl #10
    2078:	01061805 	tsteq	r6, r5, lsl #16
    207c:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2080:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2084:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2088:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    208c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2090:	16050106 	strne	r0, [r5], -r6, lsl #2
    2094:	06050520 	streq	r0, [r5], -r0, lsr #10
    2098:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    209c:	20160501 	andscs	r0, r6, r1, lsl #10
    20a0:	21060505 	tstcs	r6, r5, lsl #10
    20a4:	01061805 	tsteq	r6, r5, lsl #16
    20a8:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20ac:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20b0:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20b4:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20b8:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    20bc:	16050106 	strne	r0, [r5], -r6, lsl #2
    20c0:	06050520 	streq	r0, [r5], -r0, lsr #10
    20c4:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20c8:	20160501 	andscs	r0, r6, r1, lsl #10
    20cc:	21060505 	tstcs	r6, r5, lsl #10
    20d0:	01061805 	tsteq	r6, r5, lsl #16
    20d4:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20d8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20dc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20e0:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20e4:	2e062206 	cdpcs	2, 0, cr2, cr6, cr6, {0}
    20e8:	3d3d2f06 	ldccc	15, cr2, [sp, #-24]!	; 0xffffffe8
    20ec:	4b4b4b4b 	blmi	12d4e20 <__RAM_SIZE+0x11d4e20>
    20f0:	4b4b4b4b 	blmi	12d4e24 <__RAM_SIZE+0x11d4e24>
    20f4:	4b4b4b4b 	blmi	12d4e28 <__RAM_SIZE+0x11d4e28>
    20f8:	4b4b4b4b 	blmi	12d4e2c <__RAM_SIZE+0x11d4e2c>
    20fc:	05143e3d 	ldreq	r3, [r4, #-3645]	; 0xfffff1c3
    2100:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    2104:	09053c08 	stmdbeq	r5, {r3, sl, fp, ip, sp}
    2108:	11052106 	tstne	r5, r6, lsl #2
    210c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2110:	20069706 	andcs	r9, r6, r6, lsl #14
    2114:	05592f06 	ldrbeq	r2, [r9, #-3846]	; 0xfffff0fa
    2118:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    211c:	09052005 	stmdbeq	r5, {r0, r2, sp}
    2120:	11051b06 	tstne	r5, r6, lsl #22
    2124:	05820106 	streq	r0, [r2, #262]	; 0x106
    2128:	04020009 	streq	r0, [r2], #-9
    212c:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    2130:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    2134:	29056503 	stmdbcs	r5, {r0, r1, r8, sl, sp, lr}
    2138:	03040200 	movweq	r0, #16896	; 0x4200
    213c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2140:	01040200 	mrseq	r0, R12_usr
    2144:	05052006 	streq	r2, [r5, #-6]
    2148:	01040200 	mrseq	r0, R12_usr
    214c:	31060106 	tstcc	r6, r6, lsl #2
    2150:	01040200 	mrseq	r0, R12_usr
    2154:	000e053d 	andeq	r0, lr, sp, lsr r5
    2158:	01010402 	tsteq	r1, r2, lsl #8
    215c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    2160:	02010104 	andeq	r0, r1, #4, 2
    2164:	01010036 	tsteq	r1, r6, lsr r0
    2168:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    216c:	001e9402 	andseq	r9, lr, r2, lsl #8
    2170:	029a0310 	addseq	r0, sl, #16, 6	; 0x40000000
    2174:	13050501 	movwne	r0, #21761	; 0x5501
    2178:	1f050204 	svcne	0x00050204
    217c:	0106c703 	tsteq	r6, r3, lsl #14
    2180:	14140305 	ldrne	r0, [r4], #-773	; 0xfffffcfb
    2184:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    2188:	03010501 	movweq	r0, #5377	; 0x1501
    218c:	020179b5 	andeq	r7, r1, #2965504	; 0x2d4000
    2190:	01010001 	tsteq	r1, r1
    2194:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    2198:	001e9c02 	andseq	r9, lr, r2, lsl #24
    219c:	029e0310 	addseq	r0, lr, #16, 6	; 0x40000000
    21a0:	13050501 	movwne	r0, #21761	; 0x5501
    21a4:	13060105 	movwne	r0, #24837	; 0x6105
    21a8:	01000402 	tsteq	r0, r2, lsl #8
    21ac:	00290501 	eoreq	r0, r9, r1, lsl #10
    21b0:	00000205 	andeq	r0, r0, r5, lsl #4
    21b4:	a2030000 	andge	r0, r3, #0
    21b8:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    21bc:	06010513 			; <UNDEFINED> instruction: 0x06010513
    21c0:	00040213 	andeq	r0, r4, r3, lsl r2
    21c4:	29050101 	stmdbcs	r5, {r0, r8}
    21c8:	00020500 	andeq	r0, r2, r0, lsl #10
    21cc:	03000000 	movweq	r0, #0
    21d0:	050102a6 	streq	r0, [r1, #-678]	; 0xfffffd5a
    21d4:	01051305 	tsteq	r5, r5, lsl #6
    21d8:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    21dc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    21e0:	02050038 	andeq	r0, r5, #56	; 0x38
    21e4:	10001ea4 	andne	r1, r0, r4, lsr #29
    21e8:	0102aa03 	tsteq	r2, r3, lsl #20
    21ec:	13130505 	tstne	r3, #20971520	; 0x1400000
    21f0:	01060805 	tsteq	r6, r5, lsl #16
    21f4:	21060905 	tstcs	r6, r5, lsl #18
    21f8:	01061d05 	tsteq	r6, r5, lsl #26
    21fc:	2f060905 	svccs	0x00060905
    2200:	01061005 	tsteq	r6, r5
    2204:	1d090520 	cfstr32ne	mvfx0, [r9, #-128]	; 0xffffff80
    2208:	25060505 	strcs	r0, [r6, #-1285]	; 0xfffffafb
    220c:	13060105 	movwne	r0, #24837	; 0x6105
    2210:	01000402 	tsteq	r0, r2, lsl #8
    2214:	0002cf01 	andeq	ip, r2, r1, lsl #30
    2218:	c5000300 	strgt	r0, [r0, #-768]	; 0xfffffd00
    221c:	02000001 	andeq	r0, r0, #1
    2220:	0d0efb01 	vstreq	d15, [lr, #-4]
    2224:	01010100 	mrseq	r0, (UNDEF: 17)
    2228:	00000001 	andeq	r0, r0, r1
    222c:	01000001 	tsteq	r0, r1
    2230:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2234:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2238:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    223c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    2240:	61662f73 	smcvs	25331	; 0x62f3
    2244:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2248:	706d7564 	rsbvc	r7, sp, r4, ror #10
    224c:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    2250:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2254:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    2258:	0033336d 	eorseq	r3, r3, sp, ror #6
    225c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    2260:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2264:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    2268:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    226c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    2270:	615c6d61 	cmpvs	ip, r1, ror #26
    2274:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    2278:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    227c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    2280:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2284:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2288:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    228c:	2e30312d 	rsfcssp	f3, f0, #5.0
    2290:	30322d33 	eorscc	r2, r2, r3, lsr sp
    2294:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    2298:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    229c:	6f6e2d6d 	svcvs	0x006e2d6d
    22a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    22a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    22a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    22ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    22b0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    22b4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    22b8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    22bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    22c0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    22c4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    22c8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    22cc:	615c6d61 	cmpvs	ip, r1, ror #26
    22d0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    22d4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    22d8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    22dc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    22e0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    22e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    22e8:	2e30312d 	rsfcssp	f3, f0, #5.0
    22ec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    22f0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    22f4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    22f8:	6f6e2d6d 	svcvs	0x006e2d6d
    22fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2300:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2304:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2308:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    230c:	00737973 	rsbseq	r7, r3, r3, ror r9
    2310:	442f2e2e 	strtmi	r2, [pc], #-3630	; 2318 <__HEAP_SIZE+0x1318>
    2314:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2318:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    231c:	5349534d 	movtpl	r5, #37709	; 0x934d
    2320:	432f355f 			; <UNDEFINED> instruction: 0x432f355f
    2324:	5349534d 	movtpl	r5, #37709	; 0x934d
    2328:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    232c:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    2330:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2334:	3a630065 	bcc	18c24d0 <__RAM_SIZE+0x17c24d0>
    2338:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    233c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2340:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    2344:	6f72705c 	svcvs	0x0072705c
    2348:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    234c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2350:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    2354:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    2358:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    235c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2360:	61652d65 	cmnvs	r5, r5, ror #26
    2364:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    2368:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    236c:	31323032 	teqcc	r2, r2, lsr r0
    2370:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    2374:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2378:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    237c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2380:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    2384:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2388:	66000065 	strvs	r0, [r0], -r5, rrx
    238c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2390:	6c61682d 	stclvs	8, cr6, [r1], #-180	; 0xffffff4c
    2394:	0100632e 	tsteq	r0, lr, lsr #6
    2398:	645f0000 	ldrbvs	r0, [pc], #-0	; 23a0 <__HEAP_SIZE+0x13a0>
    239c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    23a0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 23a8 <__HEAP_SIZE+0x13a8>
    23a4:	73657079 	cmnvc	r5, #121	; 0x79
    23a8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    23ac:	735f0000 	cmpvc	pc, #0
    23b0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    23b4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    23b8:	63000003 	movwvs	r0, #3
    23bc:	5f65726f 	svcpl	0x0065726f
    23c0:	33336d63 	teqcc	r3, #6336	; 0x18c0
    23c4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    23c8:	74730000 	ldrbtvc	r0, [r3], #-0
    23cc:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    23d0:	00050068 	andeq	r0, r5, r8, rrx
    23d4:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    23d8:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    23dc:	003e6e69 	eorseq	r6, lr, r9, ror #28
    23e0:	00000000 	andeq	r0, r0, r0
    23e4:	05003505 	streq	r3, [r0, #-1285]	; 0xfffffafb
    23e8:	001eb802 	andseq	fp, lr, r2, lsl #16
    23ec:	010e0310 	tsteq	lr, r0, lsl r3
    23f0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    23f4:	20062f06 	andcs	r2, r6, r6, lsl #30
    23f8:	053d2f06 	ldreq	r2, [sp, #-3846]!	; 0xfffff0fa
    23fc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2400:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2404:	053d4005 	ldreq	r4, [sp, #-5]!
    2408:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    240c:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2410:	053d4005 	ldreq	r4, [sp, #-5]!
    2414:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2418:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    241c:	053d4005 	ldreq	r4, [sp, #-5]!
    2420:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2424:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2428:	053d4005 	ldreq	r4, [sp, #-5]!
    242c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2430:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2434:	053d4005 	ldreq	r4, [sp, #-5]!
    2438:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    243c:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2440:	01054005 	tsteq	r5, r5
    2444:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    2448:	205f0306 	subscs	r0, pc, r6, lsl #6
    244c:	50505050 	subspl	r5, r0, r0, asr r0
    2450:	002b0250 	eoreq	r0, fp, r0, asr r2
    2454:	34050101 	strcc	r0, [r5], #-257	; 0xfffffeff
    2458:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
    245c:	0310001f 	tsteq	r0, #31
    2460:	05050137 	streq	r0, [r5, #-311]	; 0xfffffec9
    2464:	06080513 			; <UNDEFINED> instruction: 0x06080513
    2468:	3d100501 	cfldr32cc	mvfx0, [r0, #-4]
    246c:	01052220 	tsteq	r5, r0, lsr #4
    2470:	00010222 	andeq	r0, r1, r2, lsr #4
    2474:	20050101 	andcs	r0, r5, r1, lsl #2
    2478:	00020500 	andeq	r0, r2, r0, lsl #10
    247c:	03000000 	movweq	r0, #0
    2480:	0505013f 	streq	r0, [r5, #-319]	; 0xfffffec1
    2484:	0e051421 	cdpeq	4, 0, cr1, cr5, cr1, {1}
    2488:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    248c:	05135906 	ldreq	r5, [r3, #-2310]	; 0xfffff6fa
    2490:	024b0601 	subeq	r0, fp, #1048576	; 0x100000
    2494:	01010006 	tsteq	r1, r6
    2498:	05001f05 	streq	r1, [r0, #-3845]	; 0xfffff0fb
    249c:	001fc402 	andseq	ip, pc, r2, lsl #8
    24a0:	00c70310 	sbceq	r0, r7, r0, lsl r3
    24a4:	2f050501 	svccs	0x00050501
    24a8:	06120513 			; <UNDEFINED> instruction: 0x06120513
    24ac:	06050501 	streq	r0, [r5], -r1, lsl #10
    24b0:	060e052f 	streq	r0, [lr], -pc, lsr #10
    24b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    24b8:	0d051359 	stceq	3, cr1, [r5, #-356]	; 0xfffffe9c
    24bc:	0b050106 	bleq	1428dc <__RAM_SIZE+0x428dc>
    24c0:	06050520 	streq	r0, [r5], -r0, lsr #10
    24c4:	05136721 	ldreq	r6, [r3, #-1825]	; 0xfffff8df
    24c8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    24cc:	0505200b 	streq	r2, [r5, #-11]
    24d0:	13592106 	cmpne	r9, #-2147483647	; 0x80000001
    24d4:	01060d05 	tsteq	r6, r5, lsl #26
    24d8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    24dc:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    24e0:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    24e4:	01010006 	tsteq	r1, r6
    24e8:	000003ac 	andeq	r0, r0, ip, lsr #7
    24ec:	02af0003 	adceq	r0, pc, #3
    24f0:	01020000 	mrseq	r0, (UNDEF: 2)
    24f4:	000d0efb 	strdeq	r0, [sp], -fp
    24f8:	01010101 	tsteq	r1, r1, lsl #2
    24fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2500:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    2504:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2508:	2f2e2e2f 	svccs	0x002e2e2f
    250c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2510:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2514:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2518:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    251c:	2f706d75 	svccs	0x00706d75
    2520:	2f737973 	svccs	0x00737973
    2524:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2528:	534f5452 	movtpl	r5, #62546	; 0xf452
    252c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2530:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2534:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2538:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    253c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2540:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2544:	5f6d7261 	svcpl	0x006d7261
    2548:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    254c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2550:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2554:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2558:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    255c:	30312d69 	eorscc	r2, r1, r9, ror #26
    2560:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2564:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2568:	615c3031 	cmpvs	ip, r1, lsr r0
    256c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2570:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2574:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2578:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    257c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2580:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2584:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2588:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    258c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2590:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2594:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2598:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    259c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    25a0:	5f6d7261 	svcpl	0x006d7261
    25a4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    25a8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    25ac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    25b0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    25b4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    25b8:	30312d69 	eorscc	r2, r1, r9, ror #26
    25bc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    25c0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    25c4:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    25c8:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    25cc:	615c6363 	cmpvs	ip, r3, ror #6
    25d0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    25d4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    25d8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    25dc:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    25e0:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    25e4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    25e8:	00656475 	rsbeq	r6, r5, r5, ror r4
    25ec:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    25f0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    25f4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    25f8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    25fc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    2600:	615c6d61 	cmpvs	ip, r1, ror #26
    2604:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    2608:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    260c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    2610:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2614:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2618:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    261c:	2e30312d 	rsfcssp	f3, f0, #5.0
    2620:	30322d33 	eorscc	r2, r2, r3, lsr sp
    2624:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    2628:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    262c:	6f6e2d6d 	svcvs	0x006e2d6d
    2630:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2634:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2638:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    263c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    2640:	00737973 	rsbseq	r7, r3, r3, ror r9
    2644:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2648:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    264c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2650:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2654:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2658:	4f545265 	svcmi	0x00545265
    265c:	6f702f53 	svcvs	0x00702f53
    2660:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2664:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2668:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    266c:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2670:	5f33334d 	svcpl	0x0033334d
    2674:	2f5a544e 	svccs	0x005a544e
    2678:	5f6e6f6e 	svcpl	0x006e6f6e
    267c:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2680:	2e006572 	cfrshl64cs	mvdx0, mvdx2, r6
    2684:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2688:	2f2e2e2f 	svccs	0x002e2e2f
    268c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2690:	2f736f74 	svccs	0x00736f74
    2694:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2698:	534f5452 	movtpl	r5, #62546	; 0xf452
    269c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    26a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    26a4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    26a8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    26ac:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    26b0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    26b4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    26b8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    26bc:	5f6d7261 	svcpl	0x006d7261
    26c0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    26c4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    26c8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    26cc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    26d0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    26d4:	30312d69 	eorscc	r2, r1, r9, ror #26
    26d8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    26dc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    26e0:	615c3031 	cmpvs	ip, r1, lsr r0
    26e4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    26e8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    26ec:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    26f0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    26f4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    26f8:	2f2e2e00 	svccs	0x002e2e00
    26fc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2700:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2704:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    2708:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    270c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2710:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    2714:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
    2718:	73000063 	movwvc	r0, #99	; 0x63
    271c:	6b636174 	blvs	18dacf4 <__RAM_SIZE+0x17dacf4>
    2720:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    2724:	00632e70 	rsbeq	r2, r3, r0, ror lr
    2728:	5f000001 	svcpl	0x00000001
    272c:	61666564 	cmnvs	r6, r4, ror #10
    2730:	5f746c75 	svcpl	0x00746c75
    2734:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2738:	00682e73 	rsbeq	r2, r8, r3, ror lr
    273c:	73000002 	movwvc	r0, #2
    2740:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    2744:	00682e66 	rsbeq	r2, r8, r6, ror #28
    2748:	5f000003 	svcpl	0x00000003
    274c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2750:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    2754:	00000400 	andeq	r0, r0, r0, lsl #8
    2758:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    275c:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    2760:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 25ac <__HEAP_SIZE+0x15ac>
    2764:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    2768:	00050068 	andeq	r0, r5, r8, rrx
    276c:	73617400 	cmnvc	r1, #0, 8
    2770:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    2774:	73000006 	movwvc	r0, #6
    2778:	6f696474 	svcvs	0x00696474
    277c:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    2780:	61660000 	cmnvs	r6, r0
    2784:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2788:	706d7564 	rsbvc	r7, sp, r4, ror #10
    278c:	0800682e 	stmdaeq	r0, {r1, r2, r3, r5, fp, sp, lr}
    2790:	623c0000 	eorsvs	r0, ip, #0
    2794:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    2798:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    279c:	00000000 	andeq	r0, r0, r0
    27a0:	00350500 	eorseq	r0, r5, r0, lsl #10
    27a4:	00000205 	andeq	r0, r0, r5, lsl #4
    27a8:	11030000 	mrsne	r0, (UNDEF: 3)
    27ac:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    27b0:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    27b4:	06080513 			; <UNDEFINED> instruction: 0x06080513
    27b8:	06050501 	streq	r0, [r5], -r1, lsl #10
    27bc:	06080521 	streq	r0, [r8], -r1, lsr #10
    27c0:	001c0501 	andseq	r0, ip, r1, lsl #10
    27c4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    27c8:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    27cc:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    27d0:	32053d1c 	andcc	r3, r5, #28, 26	; 0x700
    27d4:	01040200 	mrseq	r0, R12_usr
    27d8:	3d1c053c 	cfldr32cc	mvfx0, [ip, #-240]	; 0xffffff10
    27dc:	40060505 	andmi	r0, r6, r5, lsl #10
    27e0:	06080516 			; <UNDEFINED> instruction: 0x06080516
    27e4:	03340501 	teqeq	r4, #4194304	; 0x400000
    27e8:	05053c73 	streq	r3, [r5, #-3187]	; 0xfffff38d
    27ec:	20110306 	andscs	r0, r1, r6, lsl #6
    27f0:	01063c05 	tsteq	r6, r5, lsl #24
    27f4:	21060505 	tstcs	r6, r5, lsl #10
    27f8:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    27fc:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    2800:	2c2e0805 	stccs	8, cr0, [lr], #-20	; 0xffffffec
    2804:	05260105 	streq	r0, [r6, #-261]!	; 0xfffffefb
    2808:	20760311 	rsbscs	r0, r6, r1, lsl r3
    280c:	02002d05 	andeq	r2, r0, #320	; 0x140
    2810:	05340104 	ldreq	r0, [r4, #-260]!	; 0xfffffefc
    2814:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    2818:	29052e01 	stmdbcs	r5, {r0, r9, sl, fp, sp}
    281c:	01040200 	mrseq	r0, R12_usr
    2820:	0609052e 	streq	r0, [r9], -lr, lsr #10
    2824:	060c052f 	streq	r0, [ip], -pc, lsr #10
    2828:	08052e01 	stmdaeq	r5, {r0, r9, sl, fp, sp}
    282c:	0605051d 			; <UNDEFINED> instruction: 0x0605051d
    2830:	060c0525 	streq	r0, [ip], -r5, lsr #10
    2834:	03100501 	tsteq	r0, #4194304	; 0x400000
    2838:	0220206f 	eoreq	r2, r0, #111	; 0x6f
    283c:	01010001 	tsteq	r1, r1
    2840:	05007605 	streq	r7, [r0, #-1541]	; 0xfffff9fb
    2844:	00201002 	eoreq	r1, r0, r2
    2848:	012c0310 			; <UNDEFINED> instruction: 0x012c0310
    284c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2850:	05135906 	ldreq	r5, [r3, #-2310]	; 0xfffff6fa
    2854:	20010612 	andcs	r0, r1, r2, lsl r6
    2858:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    285c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    2860:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2864:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    2868:	2b052001 	blcs	14a874 <__RAM_SIZE+0x4a874>
    286c:	02040200 	andeq	r0, r4, #0, 4
    2870:	06050520 	streq	r0, [r5], -r0, lsr #10
    2874:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    2878:	06050501 	streq	r0, [r5], -r1, lsl #10
    287c:	4b4b592f 	blmi	12d8d40 <__RAM_SIZE+0x11d8d40>
    2880:	0d054b4b 	vstreq	d4, [r5, #-300]	; 0xfffffed4
    2884:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2888:	01056706 	tsteq	r5, r6, lsl #14
    288c:	10051306 	andne	r1, r5, r6, lsl #6
    2890:	022e7603 	eoreq	r7, lr, #3145728	; 0x300000
    2894:	0101000e 	tsteq	r1, lr
    2898:	00000399 	muleq	r0, r9, r3
    289c:	018c0003 	orreq	r0, ip, r3
    28a0:	01020000 	mrseq	r0, (UNDEF: 2)
    28a4:	000d0efb 	strdeq	r0, [sp], -fp
    28a8:	01010101 	tsteq	r1, r1, lsl #2
    28ac:	01000000 	mrseq	r0, (UNDEF: 0)
    28b0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    28b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    28b8:	2f2e2e2f 	svccs	0x002e2e2f
    28bc:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    28c0:	2f736f74 	svccs	0x00736f74
    28c4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    28c8:	534f5452 	movtpl	r5, #62546	; 0xf452
    28cc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    28d0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    28d4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    28d8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    28dc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    28e0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    28e4:	5f6d7261 	svcpl	0x006d7261
    28e8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    28ec:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    28f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    28f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    28f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    28fc:	30312d69 	eorscc	r2, r1, r9, ror #26
    2900:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2904:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2908:	615c3031 	cmpvs	ip, r1, lsr r0
    290c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2910:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2914:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2918:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    291c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2920:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2924:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2928:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    292c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2930:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2934:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2938:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    293c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2940:	5f6d7261 	svcpl	0x006d7261
    2944:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2948:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    294c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2950:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2954:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2958:	30312d69 	eorscc	r2, r1, r9, ror #26
    295c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2960:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2964:	615c3031 	cmpvs	ip, r1, lsr r0
    2968:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    296c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2970:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2974:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2978:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    297c:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    2980:	2f2e2e00 	svccs	0x002e2e00
    2984:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2988:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    298c:	6f747262 	svcvs	0x00747262
    2990:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    2994:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2998:	702f534f 	eorvc	r5, pc, pc, asr #6
    299c:	6174726f 	cmnvs	r4, pc, ror #4
    29a0:	2f656c62 	svccs	0x00656c62
    29a4:	2f434347 	svccs	0x00434347
    29a8:	5f4d5241 	svcpl	0x004d5241
    29ac:	33334d43 	teqcc	r3, #4288	; 0x10c0
    29b0:	5a544e5f 	bpl	1516334 <__RAM_SIZE+0x1416334>
    29b4:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    29b8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    29bc:	00657275 	rsbeq	r7, r5, r5, ror r2
    29c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    29c4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    29c8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    29cc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    29d0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    29d4:	4f545265 	svcmi	0x00545265
    29d8:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    29dc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    29e0:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
    29e4:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    29e8:	00010063 	andeq	r0, r1, r3, rrx
    29ec:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    29f0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    29f4:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    29f8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    29fc:	00020068 	andeq	r0, r2, r8, rrx
    2a00:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    2a04:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    2a08:	0300682e 	movweq	r6, #2094	; 0x82e
    2a0c:	6f700000 	svcvs	0x00700000
    2a10:	616d7472 	smcvs	55106	; 0xd742
    2a14:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    2a18:	6f6d6d6f 	svcvs	0x006d6d6f
    2a1c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    2a20:	6c000004 	stcvs	0, cr0, [r0], {4}
    2a24:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    2a28:	00050068 	andeq	r0, r5, r8, rrx
    2a2c:	01050000 	mrseq	r0, (UNDEF: 5)
    2a30:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    2a34:	03100020 	tsteq	r0, #32
    2a38:	29050131 	stmdbcs	r5, {r0, r4, r5, r8}
    2a3c:	17050513 	smladne	r5, r3, r5, r0
    2a40:	01062805 	tsteq	r6, r5, lsl #16
    2a44:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    2a48:	0522064b 	streq	r0, [r2, #-1611]!	; 0xfffff9b5
    2a4c:	21051605 	tstcs	r5, r5, lsl #12
    2a50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2a54:	1d054006 	stcne	0, cr4, [r5, #-24]	; 0xffffffe8
    2a58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2a5c:	21052106 	tstcs	r5, r6, lsl #2
    2a60:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2a64:	22052506 	andcs	r2, r5, #25165824	; 0x1800000
    2a68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2a6c:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    2a70:	50050106 	andpl	r0, r5, r6, lsl #2
    2a74:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    2a78:	061d0516 			; <UNDEFINED> instruction: 0x061d0516
    2a7c:	06330501 	ldrteq	r0, [r3], -r1, lsl #10
    2a80:	22051324 	andcs	r1, r5, #36, 6	; 0x90000000
    2a84:	06010514 			; <UNDEFINED> instruction: 0x06010514
    2a88:	00010213 	andeq	r0, r1, r3, lsl r2
    2a8c:	01050101 	tsteq	r5, r1, lsl #2
    2a90:	9e020500 	cfsh32ls	mvfx0, mvfx2, #0
    2a94:	03100020 	tsteq	r0, #32
    2a98:	050100d9 	streq	r0, [r1, #-217]	; 0xffffff27
    2a9c:	0505132d 	streq	r1, [r5, #-813]	; 0xfffffcd3
    2aa0:	06190515 			; <UNDEFINED> instruction: 0x06190515
    2aa4:	063c0501 	ldrteq	r0, [ip], -r1, lsl #10
    2aa8:	133d0532 	teqne	sp, #209715200	; 0xc800000
    2aac:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    2ab0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2ab4:	01010001 	tsteq	r1, r1
    2ab8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2abc:	00000002 	andeq	r0, r0, r2
    2ac0:	00ea0300 	rsceq	r0, sl, r0, lsl #6
    2ac4:	13050501 	movwne	r0, #21761	; 0x5501
    2ac8:	01061805 	tsteq	r6, r5, lsl #16
    2acc:	22063705 	andcs	r3, r6, #1310720	; 0x140000
    2ad0:	05172605 	ldreq	r2, [r7, #-1541]	; 0xfffff9fb
    2ad4:	05051332 	streq	r1, [r5, #-818]	; 0xfffffcce
    2ad8:	061b0517 			; <UNDEFINED> instruction: 0x061b0517
    2adc:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ae0:	06280521 	strteq	r0, [r8], -r1, lsr #10
    2ae4:	201f0501 	andscs	r0, pc, r1, lsl #10
    2ae8:	23061c05 	movwcs	r1, #27653	; 0x6c05
    2aec:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2af0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2af4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2af8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2afc:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2b00:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2b04:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2b08:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    2b0c:	21052023 	tstcs	r5, r3, lsr #32
    2b10:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    2b14:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2b18:	01010001 	tsteq	r1, r1
    2b1c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2b20:	0020a402 	eoreq	sl, r0, r2, lsl #8
    2b24:	018c0310 	orreq	r0, ip, r0, lsl r3
    2b28:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2b2c:	13210605 			; <UNDEFINED> instruction: 0x13210605
    2b30:	01061605 	tsteq	r6, r5, lsl #12
    2b34:	22063405 	andcs	r3, r6, #83886080	; 0x5000000
    2b38:	05172605 	ldreq	r2, [r7, #-1541]	; 0xfffff9fb
    2b3c:	05051332 	streq	r1, [r5, #-818]	; 0xfffffcce
    2b40:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    2b44:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    2b48:	1f030609 	svcne	0x00030609
    2b4c:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    2b50:	00430501 	subeq	r0, r3, r1, lsl #10
    2b54:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b58:	004d052e 	subeq	r0, sp, lr, lsr #10
    2b5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b60:	00550520 	subseq	r0, r5, r0, lsr #10
    2b64:	20010402 	andcs	r0, r1, r2, lsl #8
    2b68:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2b6c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    2b70:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    2b74:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    2b78:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    2b7c:	27052106 	strcs	r2, [r5, -r6, lsl #2]
    2b80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b84:	1f052106 	svcne	0x00052106
    2b88:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b8c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2b90:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b94:	20052406 	andcs	r2, r5, r6, lsl #8
    2b98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b9c:	3b052206 	blcc	14b3bc <__RAM_SIZE+0x4b3bc>
    2ba0:	23050106 	movwcs	r0, #20742	; 0x5106
    2ba4:	20210520 	eorcs	r0, r1, r0, lsr #10
    2ba8:	22061e05 	andcs	r1, r6, #5, 28	; 0x50
    2bac:	13060105 	movwne	r0, #24837	; 0x6105
    2bb0:	06090520 	streq	r0, [r9], -r0, lsr #10
    2bb4:	05205003 	streq	r5, [r0, #-3]!
    2bb8:	20010614 	andcs	r0, r1, r4, lsl r6
    2bbc:	01000102 	tsteq	r0, r2, lsl #2
    2bc0:	00010501 	andeq	r0, r1, r1, lsl #10
    2bc4:	20d60205 	sbcscs	r0, r6, r5, lsl #4
    2bc8:	d7031000 	strle	r1, [r3, -r0]
    2bcc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2bd0:	06140515 			; <UNDEFINED> instruction: 0x06140515
    2bd4:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    2bd8:	14050522 	strne	r0, [r5], #-1314	; 0xfffffade
    2bdc:	01061305 	tsteq	r6, r5, lsl #6
    2be0:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    2be4:	05052028 	streq	r2, [r5, #-40]	; 0xffffffd8
    2be8:	38052106 	stmdacc	r5, {r1, r2, r8, sp}
    2bec:	28050106 	stmdacs	r5, {r1, r2, r8}
    2bf0:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    2bf4:	15050523 	strne	r0, [r5, #-1315]	; 0xfffffadd
    2bf8:	01060f05 	tsteq	r6, r5, lsl #30
    2bfc:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2c00:	05340621 	ldreq	r0, [r4, #-1569]!	; 0xfffff9df
    2c04:	21051505 	tstcs	r5, r5, lsl #10
    2c08:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2c0c:	3b052f06 	blcc	14e82c <__RAM_SIZE+0x4e82c>
    2c10:	23050106 	movwcs	r0, #20742	; 0x5106
    2c14:	20210520 	eorcs	r0, r1, r0, lsr #10
    2c18:	22063805 	andcs	r3, r6, #327680	; 0x50000
    2c1c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2c20:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2c24:	73030609 	movwvc	r0, #13833	; 0x3609
    2c28:	06290520 	strteq	r0, [r9], -r0, lsr #10
    2c2c:	20190501 	andscs	r0, r9, r1, lsl #10
    2c30:	01000202 	tsteq	r0, r2, lsl #4
    2c34:	00178d01 	andseq	r8, r7, r1, lsl #26
    2c38:	3b000300 	blcc	3840 <__HEAP_SIZE+0x2840>
    2c3c:	02000002 	andeq	r0, r0, #2
    2c40:	0d0efb01 	vstreq	d15, [lr, #-4]
    2c44:	01010100 	mrseq	r0, (UNDEF: 17)
    2c48:	00000001 	andeq	r0, r0, r1
    2c4c:	01000001 	tsteq	r0, r1
    2c50:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c54:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2c58:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2c5c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2c60:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2c64:	4f545265 	svcmi	0x00545265
    2c68:	3a630053 	bcc	18c2dbc <__RAM_SIZE+0x17c2dbc>
    2c6c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    2c70:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2c74:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    2c78:	6f72705c 	svcvs	0x0072705c
    2c7c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    2c80:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2c84:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    2c88:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    2c8c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    2c90:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2c94:	61652d65 	cmnvs	r5, r5, ror #26
    2c98:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    2c9c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    2ca0:	31323032 	teqcc	r2, r2, lsr r0
    2ca4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    2ca8:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    2cac:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2cb0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2cb4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2cb8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2cbc:	30315c69 	eorscc	r5, r1, r9, ror #24
    2cc0:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    2cc4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2cc8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2ccc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2cd0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2cd4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2cd8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2cdc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2ce0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2ce4:	5f6d7261 	svcpl	0x006d7261
    2ce8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2cec:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2cf0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2cf4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2cf8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2cfc:	30312d69 	eorscc	r2, r1, r9, ror #26
    2d00:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2d04:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2d08:	615c3031 	cmpvs	ip, r1, lsr r0
    2d0c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2d10:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2d14:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2d18:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2d1c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2d20:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2d24:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2d28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2d2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2d30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2d34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2d38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2d3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2d40:	5f6d7261 	svcpl	0x006d7261
    2d44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2d48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2d4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2d50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2d54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2d58:	30312d69 	eorscc	r2, r1, r9, ror #26
    2d5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2d60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2d64:	615c3031 	cmpvs	ip, r1, lsr r0
    2d68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2d6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2d70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2d74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2d78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2d7c:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    2d80:	2f2e2e00 	svccs	0x002e2e00
    2d84:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2d88:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2d8c:	6f747262 	svcvs	0x00747262
    2d90:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    2d94:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2d98:	702f534f 	eorvc	r5, pc, pc, asr #6
    2d9c:	6174726f 	cmnvs	r4, pc, ror #4
    2da0:	2f656c62 	svccs	0x00656c62
    2da4:	2f434347 	svccs	0x00434347
    2da8:	5f4d5241 	svcpl	0x004d5241
    2dac:	33334d43 	teqcc	r3, #4288	; 0x10c0
    2db0:	5a544e5f 	bpl	1516734 <__RAM_SIZE+0x1416734>
    2db4:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    2db8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    2dbc:	00657275 	rsbeq	r7, r5, r5, ror r2
    2dc0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2dc4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2dc8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2dcc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2dd0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2dd4:	4f545265 	svcmi	0x00545265
    2dd8:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    2ddc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2de0:	71000065 	tstvc	r0, r5, rrx
    2de4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2de8:	0100632e 	tsteq	r0, lr, lsr #6
    2dec:	74730000 	ldrbtvc	r0, [r3], #-0
    2df0:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    2df4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2df8:	645f0000 	ldrbvs	r0, [pc], #-0	; 2e00 <__HEAP_SIZE+0x1e00>
    2dfc:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    2e00:	745f746c 	ldrbvc	r7, [pc], #-1132	; 2e08 <__HEAP_SIZE+0x1e08>
    2e04:	73657079 	cmnvc	r5, #121	; 0x79
    2e08:	0300682e 	movweq	r6, #2094	; 0x82e
    2e0c:	735f0000 	cmpvc	pc, #0
    2e10:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    2e14:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2e18:	70000004 	andvc	r0, r0, r4
    2e1c:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    2e20:	6f726361 	svcvs	0x00726361
    2e24:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2e28:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    2e2c:	00000500 	andeq	r0, r0, r0, lsl #10
    2e30:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2e34:	534f5452 	movtpl	r5, #62546	; 0xf452
    2e38:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2e3c:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    2e40:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    2e44:	00000600 	andeq	r0, r0, r0, lsl #12
    2e48:	6b736174 	blvs	1cdb420 <__RAM_SIZE+0x1bdb420>
    2e4c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2e50:	75710000 	ldrbvc	r0, [r1, #-0]!
    2e54:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    2e58:	00060068 	andeq	r0, r6, r8, rrx
    2e5c:	726f7000 	rsbvc	r7, pc, #0
    2e60:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    2e64:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2e68:	3c000006 	stccc	0, cr0, [r0], {6}
    2e6c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    2e70:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    2e74:	0000003e 	andeq	r0, r0, lr, lsr r0
    2e78:	05050000 	streq	r0, [r5, #-0]
    2e7c:	00020500 	andeq	r0, r2, r0, lsl #10
    2e80:	03000000 	movweq	r0, #0
    2e84:	060112bd 			; <UNDEFINED> instruction: 0x060112bd
    2e88:	06090501 	streq	r0, [r9], -r1, lsl #10
    2e8c:	0d051a21 	vstreq	s2, [r5, #-132]	; 0xffffff7c
    2e90:	0b050106 	bleq	1432b0 <__RAM_SIZE+0x432b0>
    2e94:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2e98:	06780522 	ldrbteq	r0, [r8], -r2, lsr #10
    2e9c:	2d052001 	stccs	0, cr2, [r5, #-4]
    2ea0:	06090520 	streq	r0, [r9], -r0, lsr #10
    2ea4:	06050535 			; <UNDEFINED> instruction: 0x06050535
    2ea8:	00010213 	andeq	r0, r1, r3, lsl r2
    2eac:	01050101 	tsteq	r5, r1, lsl #2
    2eb0:	00020500 	andeq	r0, r2, r0, lsl #10
    2eb4:	03000000 	movweq	r0, #0
    2eb8:	060114e3 	streq	r1, [r1], -r3, ror #9
    2ebc:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ec0:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    2ec4:	06140530 			; <UNDEFINED> instruction: 0x06140530
    2ec8:	20320501 	eorscs	r0, r2, r1, lsl #10
    2ecc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2ed0:	05053415 	streq	r3, [r5, #-1045]	; 0xfffffbeb
    2ed4:	05302306 	ldreq	r2, [r0, #-774]!	; 0xfffffcfa
    2ed8:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2edc:	2e760315 	mrccs	3, 3, r0, cr6, cr5, {0}
    2ee0:	00010220 	andeq	r0, r1, r0, lsr #4
    2ee4:	01050101 	tsteq	r5, r1, lsl #2
    2ee8:	fa020500 	blx	842f0 <__HEAP_SIZE+0x832f0>
    2eec:	03100020 	tsteq	r0, #32
    2ef0:	060114b6 			; <UNDEFINED> instruction: 0x060114b6
    2ef4:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ef8:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    2efc:	06140530 			; <UNDEFINED> instruction: 0x06140530
    2f00:	200b0501 	andcs	r0, fp, r1, lsl #10
    2f04:	05221505 	streq	r1, [r2, #-1285]!	; 0xfffffafb
    2f08:	30270605 	eorcc	r0, r7, r5, lsl #12
    2f0c:	13060105 	movwne	r0, #24837	; 0x6105
    2f10:	7a031505 	bvc	c832c <__HEAP_SIZE+0xc732c>
    2f14:	0102202e 	tsteq	r2, lr, lsr #32
    2f18:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2f1c:	02050001 	andeq	r0, r5, #1
    2f20:	10002114 	andne	r2, r0, r4, lsl r1
    2f24:	0112d803 	tsteq	r2, r3, lsl #16
    2f28:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2f2c:	16133d06 	ldrne	r3, [r3], -r6, lsl #26
    2f30:	01061705 	tsteq	r6, r5, lsl #14
    2f34:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2f38:	01061005 	tsteq	r6, r5
    2f3c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2f40:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    2f44:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2f48:	1005200f 	andne	r2, r5, pc
    2f4c:	05207503 	streq	r7, [r0, #-1283]!	; 0xfffffafd
    2f50:	c5030625 	strgt	r0, [r3, #-1573]	; 0xfffff9db
    2f54:	05052000 	streq	r2, [r5, #-0]
    2f58:	06220516 			; <UNDEFINED> instruction: 0x06220516
    2f5c:	20200501 	eorcs	r0, r0, r1, lsl #10
    2f60:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2f64:	13060105 	movwne	r0, #24837	; 0x6105
    2f68:	03061105 	movweq	r1, #24837	; 0x6105
    2f6c:	1b052042 	blne	14b07c <__RAM_SIZE+0x4b07c>
    2f70:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2f74:	052f0611 	streq	r0, [pc, #-1553]!	; 296b <__HEAP_SIZE+0x196b>
    2f78:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    2f7c:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
    2f80:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
    2f84:	06090501 	streq	r0, [r9], -r1, lsl #10
    2f88:	06120522 	ldreq	r0, [r2], -r2, lsr #10
    2f8c:	09052001 	stmdbeq	r5, {r0, sp}
    2f90:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    2f94:	1c050106 	stfnes	f0, [r5], {6}
    2f98:	06090520 	streq	r0, [r9], -r0, lsr #10
    2f9c:	0634053e 			; <UNDEFINED> instruction: 0x0634053e
    2fa0:	200b0501 	andcs	r0, fp, r1, lsl #10
    2fa4:	30060d05 	andcc	r0, r6, r5, lsl #26
    2fa8:	01062905 	tsteq	r6, r5, lsl #18
    2fac:	05202005 	streq	r2, [r0, #-5]!
    2fb0:	20610310 	rsbcs	r0, r1, r0, lsl r3
    2fb4:	03060905 	movweq	r0, #26885	; 0x6905
    2fb8:	12052e28 	andne	r2, r5, #40, 28	; 0x280
    2fbc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2fc0:	052f0609 	streq	r0, [pc, #-1545]!	; 29bf <__HEAP_SIZE+0x19bf>
    2fc4:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    2fc8:	09052026 	stmdbeq	r5, {r1, r2, r5, sp}
    2fcc:	33054c06 	movwcc	r4, #23558	; 0x5c06
    2fd0:	0b050106 	bleq	1433f0 <__RAM_SIZE+0x433f0>
    2fd4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2fd8:	063f0530 			; <UNDEFINED> instruction: 0x063f0530
    2fdc:	20470501 	subcs	r0, r7, r1, lsl #10
    2fe0:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    2fe4:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    2fe8:	0b051509 	bleq	148414 <__RAM_SIZE+0x48414>
    2fec:	10050106 	andne	r0, r5, r6, lsl #2
    2ff0:	052e4c03 	streq	r4, [lr, #-3075]!	; 0xfffff3fd
    2ff4:	3603060d 	strcc	r0, [r3], -sp, lsl #12
    2ff8:	060f052e 	streq	r0, [pc], -lr, lsr #10
    2ffc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3000:	06100526 	ldreq	r0, [r0], -r6, lsr #10
    3004:	2e204403 	cdpcs	4, 2, cr4, cr0, cr3, {0}
    3008:	0002022e 	andeq	r0, r2, lr, lsr #4
    300c:	01050101 	tsteq	r5, r1, lsl #2
    3010:	8a020500 	bhi	84418 <__HEAP_SIZE+0x83418>
    3014:	03100021 	tsteq	r0, #33	; 0x21
    3018:	060113aa 	streq	r1, [r1], -sl, lsr #7
    301c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3020:	06100521 	ldreq	r0, [r0], -r1, lsr #10
    3024:	20070501 	andcs	r0, r7, r1, lsl #10
    3028:	051f0105 	ldreq	r0, [pc, #-261]	; 2f2b <__HEAP_SIZE+0x1f2b>
    302c:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    3030:	20010626 	andcs	r0, r1, r6, lsr #12
    3034:	30060905 	andcc	r0, r6, r5, lsl #18
    3038:	01060b05 	tsteq	r6, r5, lsl #22
    303c:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    3040:	01063305 	tsteq	r6, r5, lsl #6
    3044:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    3048:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    304c:	12051509 	andne	r1, r5, #37748736	; 0x2400000
    3050:	01050106 	tsteq	r5, r6, lsl #2
    3054:	0102203e 	tsteq	r2, lr, lsr r0
    3058:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    305c:	02050005 	andeq	r0, r5, #5
    3060:	100021ae 	andne	r2, r0, lr, lsr #3
    3064:	0119ee03 	tsteq	r9, r3, lsl #28
    3068:	09050106 	stmdbeq	r5, {r1, r2, r8}
    306c:	13053d06 	movwne	r3, #23814	; 0x5d06
    3070:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3074:	2c052106 	stfcss	f2, [r5], {6}
    3078:	135f0519 	cmpne	pc, #104857600	; 0x6400000
    307c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3080:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3084:	0b052049 	bleq	14b1b0 <__RAM_SIZE+0x4b1b0>
    3088:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    308c:	05052e76 	streq	r2, [r5, #-3702]	; 0xfffff18a
    3090:	05203103 	streq	r3, [r0, #-259]!	; 0xfffffefd
    3094:	5b03060d 	blpl	c48d0 <__HEAP_SIZE+0xc38d0>
    3098:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    309c:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    30a0:	150d053e 	strne	r0, [sp, #-1342]	; 0xfffffac2
    30a4:	01061705 	tsteq	r6, r5, lsl #14
    30a8:	0d052e3c 	stceq	14, cr2, [r5, #-240]	; 0xffffff10
    30ac:	0f052206 	svceq	0x00052206
    30b0:	11050106 	tstne	r5, r6, lsl #2
    30b4:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    30b8:	13050106 	movwne	r0, #20742	; 0x5106
    30bc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    30c0:	06190530 			; <UNDEFINED> instruction: 0x06190530
    30c4:	17052e01 	strne	r2, [r5, -r1, lsl #28]
    30c8:	3121052e 			; <UNDEFINED> instruction: 0x3121052e
    30cc:	06250520 	strteq	r0, [r5], -r0, lsr #10
    30d0:	05011303 	streq	r1, [r1, #-771]	; 0xfffffcfd
    30d4:	10051509 	andne	r1, r5, r9, lsl #10
    30d8:	11050106 	tstne	r5, r6, lsl #2
    30dc:	02040200 	andeq	r0, r4, #0, 4
    30e0:	20780306 	rsbscs	r0, r8, r6, lsl #6
    30e4:	02040200 	andeq	r0, r4, #0, 4
    30e8:	04020001 	streq	r0, [r2], #-1
    30ec:	02002e02 	andeq	r2, r0, #2, 28
    30f0:	002e0104 	eoreq	r0, lr, r4, lsl #2
    30f4:	01010402 	tsteq	r1, r2, lsl #8
    30f8:	01040200 	mrseq	r0, R12_usr
    30fc:	02002006 	andeq	r2, r0, #6
    3100:	02200104 	eoreq	r0, r0, #4, 2
    3104:	01010003 	tsteq	r1, r3
    3108:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    310c:	00220602 	eoreq	r0, r2, r2, lsl #12
    3110:	13be0310 			; <UNDEFINED> instruction: 0x13be0310
    3114:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3118:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    311c:	10053009 	andne	r3, r5, r9
    3120:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3124:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    3128:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    312c:	20190306 	andscs	r0, r9, r6, lsl #6
    3130:	01061905 	tsteq	r6, r5, lsl #18
    3134:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    3138:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    313c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    3140:	35054a1b 	strcc	r4, [r5, #-2587]	; 0xfffff5e5
    3144:	0d052806 	stceq	8, cr2, [r5, #-24]	; 0xffffffe8
    3148:	06012103 	streq	r2, [r1], -r3, lsl #2
    314c:	060e0520 	streq	r0, [lr], -r0, lsr #10
    3150:	207fbc03 	rsbscs	fp, pc, r3, lsl #24
    3154:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    3158:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    315c:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    3160:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    3164:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3168:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    316c:	031d0533 	tsteq	sp, #213909504	; 0xcc00000
    3170:	09053c12 	stmdbeq	r5, {r1, r4, sl, fp, ip, sp}
    3174:	053c2803 	ldreq	r2, [ip, #-2051]!	; 0xfffff7fd
    3178:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    317c:	313e0605 	teqcc	lr, r5, lsl #12
    3180:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    3184:	2e010610 	mcrcs	6, 0, r0, cr1, cr0, {0}
    3188:	22060905 	andcs	r0, r6, #81920	; 0x14000
    318c:	01060e05 	tsteq	r6, r5, lsl #28
    3190:	03062d05 	movweq	r2, #27909	; 0x6d05
    3194:	1105200a 	tstne	r5, sl
    3198:	05200615 	streq	r0, [r0, #-1557]!	; 0xfffff9eb
    319c:	7303060e 	movwvc	r0, #13838	; 0x360e
    31a0:	300d0520 	andcc	r0, sp, r0, lsr #10
    31a4:	01061105 	tsteq	r6, r5, lsl #2
    31a8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    31ac:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    31b0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    31b4:	15054a13 	strne	r4, [r5, #-2579]	; 0xfffff5ed
    31b8:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    31bc:	053c0f03 	ldreq	r0, [ip, #-3843]!	; 0xfffff0fd
    31c0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    31c4:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    31c8:	202f0601 	eorcs	r0, pc, r1, lsl #12
    31cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    31d0:	02050001 	andeq	r0, r5, #1
    31d4:	10002288 	andne	r2, r0, r8, lsl #5
    31d8:	0102b003 	tsteq	r2, r3
    31dc:	13130505 	tstne	r3, #20971520	; 0x1400000
    31e0:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    31e4:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    31e8:	06070514 			; <UNDEFINED> instruction: 0x06070514
    31ec:	00010501 	andeq	r0, r1, r1, lsl #10
    31f0:	03010402 	movweq	r0, #5122	; 0x1402
    31f4:	12052e78 	andne	r2, r5, #120, 28	; 0x780
    31f8:	01040200 	mrseq	r0, R12_usr
    31fc:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    3200:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    3204:	36051f01 	strcc	r1, [r5], -r1, lsl #30
    3208:	202c0531 	eorcs	r0, ip, r1, lsr r5
    320c:	3a250520 	bcc	944694 <__RAM_SIZE+0x844694>
    3210:	2f031105 	svccs	0x00031105
    3214:	06260520 	strteq	r0, [r6], -r0, lsr #10
    3218:	162e0523 	strtne	r0, [lr], -r3, lsr #10
    321c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3220:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3224:	204a032c 	subcs	r0, sl, ip, lsr #6
    3228:	30060905 	andcc	r0, r6, r5, lsl #18
    322c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3230:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    3234:	57052043 	strpl	r2, [r5, -r3, asr #32]
    3238:	20380520 	eorscs	r0, r8, r0, lsr #10
    323c:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    3240:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    3244:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3248:	052f060d 	streq	r0, [pc, #-1549]!	; 2c43 <__HEAP_SIZE+0x1c43>
    324c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3250:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    3254:	05010654 	streq	r0, [r1, #-1620]	; 0xfffff9ac
    3258:	2a05203c 	bcs	14b350 <__RAM_SIZE+0x4b350>
    325c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    3260:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    3264:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3268:	061e053d 			; <UNDEFINED> instruction: 0x061e053d
    326c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3270:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    3274:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3278:	06150527 	ldreq	r0, [r5], -r7, lsr #10
    327c:	20130501 	andscs	r0, r3, r1, lsl #10
    3280:	03060905 	movweq	r0, #26885	; 0x6905
    3284:	10052017 	andne	r2, r5, r7, lsl r0
    3288:	2e4d0306 	cdpcs	3, 4, cr0, cr13, cr6, {0}
    328c:	33030905 	movwcc	r0, #14597	; 0x3905
    3290:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    3294:	05206b03 	streq	r6, [r0, #-2819]!	; 0xfffff4fd
    3298:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    329c:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    32a0:	11053006 	tstne	r5, r6
    32a4:	4b3c0f03 	blmi	f06eb8 <__RAM_SIZE+0xe06eb8>
    32a8:	01055f06 	tsteq	r5, r6, lsl #30
    32ac:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    32b0:	20760311 	rsbscs	r0, r6, r1, lsl r3
    32b4:	0a030105 	beq	c36d0 <__HEAP_SIZE+0xc26d0>
    32b8:	01002020 	tsteq	r0, r0, lsr #32
    32bc:	00010501 	andeq	r0, r1, r1, lsl #10
    32c0:	230e0205 	movwcs	r0, #57861	; 0xe205
    32c4:	ba031000 	blt	c72cc <__HEAP_SIZE+0xc62cc>
    32c8:	01060104 	tsteq	r6, r4, lsl #2
    32cc:	3f060505 	svccc	0x00060505
    32d0:	06070514 			; <UNDEFINED> instruction: 0x06070514
    32d4:	09052001 	stmdbeq	r5, {r0, sp}
    32d8:	1c052606 	stcne	6, cr2, [r5], {6}
    32dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    32e0:	200a0306 	andcs	r0, sl, r6, lsl #6
    32e4:	01061a05 	tsteq	r6, r5, lsl #20
    32e8:	21060505 	tstcs	r6, r5, lsl #10
    32ec:	01061c05 	tsteq	r6, r5, lsl #24
    32f0:	21060505 	tstcs	r6, r5, lsl #10
    32f4:	01060e05 	tsteq	r6, r5, lsl #28
    32f8:	09052020 	stmdbeq	r5, {r5, sp}
    32fc:	21053206 	tstcs	r5, r6, lsl #4
    3300:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3304:	29053406 	stmdbcs	r5, {r1, r2, sl, ip, sp}
    3308:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    330c:	01053206 	tsteq	r5, r6, lsl #4
    3310:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    3314:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    3318:	01061c05 	tsteq	r6, r5, lsl #24
    331c:	01000202 	tsteq	r0, r2, lsl #4
    3320:	00050501 	andeq	r0, r5, r1, lsl #10
    3324:	23340205 	teqcs	r4, #1342177280	; 0x50000000
    3328:	fc031000 	stc2	0, cr1, [r3], {-0}
    332c:	09050102 	stmdbeq	r5, {r1, r8}
    3330:	14770513 	ldrbtne	r0, [r7], #-1299	; 0xfffffaed
    3334:	05162605 	ldreq	r2, [r6, #-1541]	; 0xfffff9fb
    3338:	0b051409 	bleq	148364 <__RAM_SIZE+0x48364>
    333c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3340:	01040200 	mrseq	r0, R12_usr
    3344:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    3348:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    334c:	4a090301 	bmi	243f58 <__RAM_SIZE+0x143f58>
    3350:	05212705 	streq	r2, [r1, #-1797]!	; 0xfffff8fb
    3354:	4a05240f 	bmi	14c398 <__RAM_SIZE+0x4c398>
    3358:	01040200 	mrseq	r0, R12_usr
    335c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3360:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    3364:	33051911 	movwcc	r1, #22801	; 0x5911
    3368:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    336c:	0632060d 	ldrteq	r0, [r2], -sp, lsl #12
    3370:	0318054a 	tsteq	r8, #310378496	; 0x12800000
    3374:	05052e75 	streq	r2, [r5, #-3701]	; 0xfffff18b
    3378:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    337c:	2e55030f 	cdpcs	3, 5, cr0, cr5, cr15, {0}
    3380:	72031305 	andvc	r1, r3, #335544320	; 0x14000000
    3384:	063c052e 	ldrteq	r0, [ip], -lr, lsr #10
    3388:	05203603 	streq	r3, [r0, #-1539]!	; 0xfffff9fd
    338c:	10051409 	andne	r1, r5, r9, lsl #8
    3390:	13050106 	movwne	r0, #20742	; 0x5106
    3394:	05204803 	streq	r4, [r0, #-2051]!	; 0xfffff7fd
    3398:	20390305 	eorscs	r0, r9, r5, lsl #6
    339c:	47031305 	strmi	r1, [r3, -r5, lsl #6]
    33a0:	20202020 	eorcs	r2, r0, r0, lsr #32
    33a4:	01000102 	tsteq	r0, r2, lsl #2
    33a8:	00050501 	andeq	r0, r5, r1, lsl #10
    33ac:	00000205 	andeq	r0, r0, r5, lsl #4
    33b0:	c0030000 	andgt	r0, r3, r0
    33b4:	09050103 	stmdbeq	r5, {r0, r1, r8}
    33b8:	5d051313 	stcpl	3, cr1, [r5, #-76]	; 0xffffffb4
    33bc:	14200514 	strtne	r0, [r0], #-1300	; 0xfffffaec
    33c0:	05132705 	ldreq	r2, [r3, #-1797]	; 0xfffff8fb
    33c4:	1805170d 	stmdane	r5, {r0, r2, r3, r8, r9, sl, ip}
    33c8:	0f050106 	svceq	0x00050106
    33cc:	0319052e 	tsteq	r9, #192937984	; 0xb800000
    33d0:	3d052e0f 	stccc	14, cr2, [r5, #-60]	; 0xffffffc4
    33d4:	20100306 	andscs	r0, r0, r6, lsl #6
    33d8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    33dc:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    33e0:	60030611 	andvs	r0, r3, r1, lsl r6
    33e4:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    33e8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    33ec:	063e0522 	ldrteq	r0, [lr], -r2, lsr #10
    33f0:	20270501 	eorcs	r0, r7, r1, lsl #10
    33f4:	26061105 	strcs	r1, [r6], -r5, lsl #2
    33f8:	01062105 	tsteq	r6, r5, lsl #2
    33fc:	21061105 	tstcs	r6, r5, lsl #2
    3400:	01061905 	tsteq	r6, r5, lsl #18
    3404:	00010220 	andeq	r0, r1, r0, lsr #4
    3408:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    340c:	00020500 	andeq	r0, r2, r0, lsl #10
    3410:	03000000 	movweq	r0, #0
    3414:	060103f8 			; <UNDEFINED> instruction: 0x060103f8
    3418:	06090501 	streq	r0, [r9], -r1, lsl #10
    341c:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    3420:	09051451 	stmdbeq	r5, {r0, r4, r6, sl, ip}
    3424:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    3428:	002c0501 	eoreq	r0, ip, r1, lsl #10
    342c:	4c010402 	cfstrsmi	mvf0, [r1], {2}
    3430:	01040200 	mrseq	r0, R12_usr
    3434:	0033053c 	eorseq	r0, r3, ip, lsr r5
    3438:	1e010402 	cdpne	4, 0, cr0, cr1, cr2, {0}
    343c:	05245305 	streq	r5, [r4, #-773]!	; 0xfffffcfb
    3440:	0d052c3c 	stceq	12, cr2, [r5, #-240]	; 0xffffff10
    3444:	05174306 	ldreq	r4, [r7, #-774]	; 0xfffffcfa
    3448:	20010628 	andcs	r0, r1, r8, lsr #12
    344c:	30060d05 	andcc	r0, r6, r5, lsl #26
    3450:	01060f05 	tsteq	r6, r5, lsl #30
    3454:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    3458:	19150513 	ldmdbne	r5, {r0, r1, r4, r8, sl}
    345c:	01063705 	tsteq	r6, r5, lsl #14
    3460:	40061105 	andmi	r1, r6, r5, lsl #2
    3464:	2e2e4a06 	vmulcs.f32	s8, s28, s12
    3468:	02002c05 	andeq	r2, r0, #1280	; 0x500
    346c:	62030104 	andvs	r0, r3, #4, 2
    3470:	03130520 	tsteq	r3, #32, 10	; 0x8000000
    3474:	05052e78 	streq	r2, [r5, #-3704]	; 0xfffff188
    3478:	05203703 	streq	r3, [r0, #-1795]!	; 0xfffff8fd
    347c:	3c490313 	mcrrcc	3, 1, r0, r9, cr3
    3480:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    3484:	05203003 	streq	r3, [r0, #-3]!
    3488:	36051325 	strcc	r1, [r5], -r5, lsr #6
    348c:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    3490:	01061005 	tsteq	r6, r5
    3494:	01000102 	tsteq	r0, r2, lsl #2
    3498:	00050501 	andeq	r0, r5, r1, lsl #10
    349c:	00000205 	andeq	r0, r0, r5, lsl #4
    34a0:	e0030000 	and	r0, r3, r0
    34a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    34a8:	14640513 	strbtne	r0, [r4], #-1299	; 0xfffffaed
    34ac:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    34b0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    34b4:	04020005 	streq	r0, [r2], #-5
    34b8:	22051b01 	andcs	r1, r5, #1024	; 0x400
    34bc:	01040200 	mrseq	r0, R12_usr
    34c0:	060d0541 	streq	r0, [sp], -r1, asr #10
    34c4:	06170531 			; <UNDEFINED> instruction: 0x06170531
    34c8:	05204a01 	streq	r4, [r0, #-2561]!	; 0xfffff5ff
    34cc:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    34d0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    34d4:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    34d8:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    34dc:	05220631 	streq	r0, [r2, #-1585]!	; 0xfffff9cf
    34e0:	73030617 	movwvc	r0, #13847	; 0x3617
    34e4:	03050520 	movweq	r0, #21792	; 0x5520
    34e8:	1705201d 	smladne	r5, sp, r0, r2
    34ec:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    34f0:	16030624 	strne	r0, [r3], -r4, lsr #12
    34f4:	13250520 			; <UNDEFINED> instruction: 0x13250520
    34f8:	05154305 	ldreq	r4, [r5, #-773]	; 0xfffffcfb
    34fc:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3500:	002e1306 	eoreq	r1, lr, r6, lsl #6
    3504:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3508:	00020500 	andeq	r0, r2, r0, lsl #10
    350c:	03000000 	movweq	r0, #0
    3510:	05010787 	streq	r0, [r1, #-1927]	; 0xfffff879
    3514:	4f051309 	svcmi	0x00051309
    3518:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    351c:	01060b05 	tsteq	r6, r5, lsl #22
    3520:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3524:	051b0104 	ldreq	r0, [fp, #-260]	; 0xfffffefc
    3528:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    352c:	0d053301 	stceq	3, cr3, [r5, #-4]
    3530:	17053106 	strne	r3, [r5, -r6, lsl #2]
    3534:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3538:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    353c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3540:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    3544:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    3548:	05220631 	streq	r0, [r2, #-1585]!	; 0xfffff9cf
    354c:	73030617 	movwvc	r0, #13847	; 0x3617
    3550:	03050520 	movweq	r0, #21792	; 0x5520
    3554:	1705201d 	smladne	r5, sp, r0, r2
    3558:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    355c:	16030624 	strne	r0, [r3], -r4, lsr #12
    3560:	13250520 			; <UNDEFINED> instruction: 0x13250520
    3564:	05153d05 	ldreq	r3, [r5, #-3333]	; 0xfffff2fb
    3568:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    356c:	00201306 	eoreq	r1, r0, r6, lsl #6
    3570:	01050101 	tsteq	r5, r1, lsl #2
    3574:	00020500 	andeq	r0, r2, r0, lsl #10
    3578:	03000000 	movweq	r0, #0
    357c:	060107ae 	streq	r0, [r1], -lr, lsr #15
    3580:	06050501 	streq	r0, [r5], -r1, lsl #10
    3584:	05131367 	ldreq	r1, [r3, #-871]	; 0xfffffc99
    3588:	05100610 	ldreq	r0, [r0, #-1552]	; 0xfffff9f0
    358c:	1903062b 	stmdbne	r3, {r0, r1, r3, r5, r9, sl}
    3590:	1615052e 	ldrne	r0, [r5], -lr, lsr #10
    3594:	01062705 	tsteq	r6, r5, lsl #14
    3598:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    359c:	01062605 	tsteq	r6, r5, lsl #12
    35a0:	5a061505 	bpl	1889bc <__RAM_SIZE+0x889bc>
    35a4:	01062005 	tsteq	r6, r5
    35a8:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    35ac:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    35b0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    35b4:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    35b8:	1e052e01 	cdpne	14, 0, cr2, cr5, cr1, {0}
    35bc:	22052706 	andcs	r2, r5, #1572864	; 0x180000
    35c0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    35c4:	35052e20 	strcc	r2, [r5, #-3616]	; 0xfffff1e0
    35c8:	20290306 	eorcs	r0, r9, r6, lsl #6
    35cc:	28031105 	stmdacs	r3, {r0, r2, r8, ip}
    35d0:	30380501 	eorscc	r0, r8, r1, lsl #10
    35d4:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    35d8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    35dc:	00d30301 	sbcseq	r0, r3, r1, lsl #6
    35e0:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    35e4:	2e7edd03 	cdpcs	13, 7, cr13, cr14, cr3, {0}
    35e8:	0b031905 	bleq	c9a04 <__HEAP_SIZE+0xc8a04>
    35ec:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    35f0:	201b0501 	andscs	r0, fp, r1, lsl #10
    35f4:	03061e05 	movweq	r1, #28165	; 0x6e05
    35f8:	2005200f 	andcs	r2, r5, pc
    35fc:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    3600:	2e063406 	cdpcs	4, 0, cr3, cr6, cr6, {0}
    3604:	206d0306 	rsbcs	r0, sp, r6, lsl #6
    3608:	01062105 	tsteq	r6, r5, lsl #2
    360c:	2e1f052e 	cfmul64cs	mvdx0, mvdx15, mvdx14
    3610:	34062105 	strcc	r2, [r6], #-261	; 0xfffffefb
    3614:	15053c06 	strne	r3, [r5, #-3078]	; 0xfffff3fa
    3618:	00c50306 	sbceq	r0, r5, r6, lsl #6
    361c:	32360501 	eorscc	r0, r6, #4194304	; 0x400000
    3620:	05134305 	ldreq	r4, [r3, #-773]	; 0xfffffcfb
    3624:	1c051415 	cfstrsne	mvf1, [r5], {21}
    3628:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    362c:	053d3406 	ldreq	r3, [sp, #-1030]!	; 0xfffffbfa
    3630:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    3634:	04020009 	streq	r0, [r2], #-9
    3638:	0f030601 	svceq	0x00030601
    363c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3640:	11054a04 	tstne	r5, r4, lsl #20
    3644:	3d4a1e03 	stclcc	14, cr1, [sl, #-12]
    3648:	01061a05 	tsteq	r6, r5, lsl #20
    364c:	03065705 	movweq	r5, #26373	; 0x6705
    3650:	052e7ec1 	streq	r7, [lr, #-3777]!	; 0xfffff13f
    3654:	6405141c 	strvs	r1, [r5], #-1052	; 0xfffffbe4
    3658:	135b0513 	cmpne	fp, #79691776	; 0x4c00000
    365c:	05156e05 	ldreq	r6, [r5, #-3589]	; 0xfffff1fb
    3660:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    3664:	340d0514 	strcc	r0, [sp], #-1300	; 0xfffffaec
    3668:	01061a05 	tsteq	r6, r5, lsl #20
    366c:	05203705 	streq	r3, [r0, #-1797]!	; 0xfffff8fb
    3670:	4405200f 	strmi	r2, [r5], #-15
    3674:	01040200 	mrseq	r0, R12_usr
    3678:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    367c:	2e00ec03 	cdpcs	12, 0, cr14, cr0, cr3, {0}
    3680:	01062205 	tsteq	r6, r5, lsl #4
    3684:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    3688:	0d030616 	stceq	6, cr0, [r3, #-88]	; 0xffffffa8
    368c:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    3690:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    3694:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    3698:	2f331609 	svccs	0x00331609
    369c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    36a0:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    36a4:	00660604 	rsbeq	r0, r6, r4, lsl #12
    36a8:	31060402 	tstcc	r6, r2, lsl #8
    36ac:	02000d05 	andeq	r0, r0, #320	; 0x140
    36b0:	01060604 	tsteq	r6, r4, lsl #12
    36b4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    36b8:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    36bc:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    36c0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    36c4:	37053c0f 	strcc	r3, [r5, -pc, lsl #24]
    36c8:	11053006 	tstne	r5, r6
    36cc:	05435f13 	strbeq	r5, [r3, #-3859]	; 0xfffff0ed
    36d0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    36d4:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    36d8:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    36dc:	3d3c0d03 	ldccc	13, cr0, [ip, #-12]!
    36e0:	01061605 	tsteq	r6, r5, lsl #12
    36e4:	30062e05 	andcc	r2, r6, r5, lsl #28
    36e8:	05133b05 	ldreq	r3, [r3, #-2821]	; 0xfffff4fb
    36ec:	1405140d 	strne	r1, [r5], #-1037	; 0xfffffbf3
    36f0:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    36f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    36f8:	02050005 	andeq	r0, r5, #5
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	0104e603 	tsteq	r4, r3, lsl #12
    3704:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    3708:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    370c:	0d051f05 	stceq	15, cr1, [r5, #-20]	; 0xffffffec
    3710:	33052706 	movwcc	r2, #22278	; 0x5706
    3714:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3718:	25052f06 	strcs	r2, [r5, #-3846]	; 0xfffff0fa
    371c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3720:	3b052306 	blcc	14c340 <__RAM_SIZE+0x4c340>
    3724:	2c050106 	stfcss	f0, [r5], {6}
    3728:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    372c:	06160515 			; <UNDEFINED> instruction: 0x06160515
    3730:	06270501 	strteq	r0, [r7], -r1, lsl #10
    3734:	0605054e 	streq	r0, [r5], -lr, asr #10
    3738:	01022014 	tsteq	r2, r4, lsl r0
    373c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3740:	02050005 	andeq	r0, r5, #5
    3744:	00000000 	andeq	r0, r0, r0
    3748:	01058403 	tsteq	r5, r3, lsl #8
    374c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3750:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    3754:	09051434 	stmdbeq	r5, {r2, r4, r5, sl, ip}
    3758:	06150514 			; <UNDEFINED> instruction: 0x06150514
    375c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3760:	33053d06 	movwcc	r3, #23814	; 0x5d06
    3764:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    3768:	13060505 	movwne	r0, #25861	; 0x6505
    376c:	0101002e 	tsteq	r1, lr, lsr #32
    3770:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3774:	00000002 	andeq	r0, r0, r2
    3778:	05990300 	ldreq	r0, [r9, #768]	; 0x300
    377c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3780:	133d0609 	teqne	sp, #9437184	; 0x900000
    3784:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    3788:	05141609 	ldreq	r1, [r4, #-1545]	; 0xfffff9f7
    378c:	3c010615 	stccc	6, cr0, [r1], {21}
    3790:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
    3794:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    3798:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    379c:	13060505 	movwne	r0, #25861	; 0x6505
    37a0:	0101003c 	tsteq	r1, ip, lsr r0
    37a4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    37a8:	00000002 	andeq	r0, r0, r2
    37ac:	05f40300 	ldrbeq	r0, [r4, #768]!	; 0x300
    37b0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    37b4:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    37b8:	05143605 	ldreq	r3, [r4, #-1541]	; 0xfffff9fb
    37bc:	09051420 	stmdbeq	r5, {r5, sl, ip}
    37c0:	0622051a 			; <UNDEFINED> instruction: 0x0622051a
    37c4:	20330501 	eorscs	r0, r3, r1, lsl #10
    37c8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    37cc:	2e1d0315 	mrccs	3, 0, r0, cr13, cr5, {0}
    37d0:	05280505 	streq	r0, [r8, #-1285]!	; 0xfffffafb
    37d4:	5d030631 	stcpl	6, cr0, [r3, #-196]	; 0xffffff3c
    37d8:	190d0520 	stmdbne	sp, {r5, r8, sl}
    37dc:	01062405 	tsteq	r6, r5, lsl #8
    37e0:	05203b05 	streq	r3, [r0, #-2821]!	; 0xfffff4fb
    37e4:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    37e8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    37ec:	200b0315 	andcs	r0, fp, r5, lsl r3
    37f0:	28063805 	stmdacs	r6, {r0, r2, fp, ip, sp}
    37f4:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    37f8:	01061005 	tsteq	r6, r5
    37fc:	03061105 	movweq	r1, #24837	; 0x6105
    3800:	1a05206c 	bne	14b9b8 <__RAM_SIZE+0x4b9b8>
    3804:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3808:	0002025f 	andeq	r0, r2, pc, asr r2
    380c:	01050101 	tsteq	r5, r1, lsl #2
    3810:	00020500 	andeq	r0, r2, r0, lsl #10
    3814:	03000000 	movweq	r0, #0
    3818:	06010988 	streq	r0, [r1], -r8, lsl #19
    381c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3820:	05131367 	ldreq	r1, [r3, #-871]	; 0xfffffc99
    3824:	1c05146b 	cfstrsne	mvf1, [r5], {107}	; 0x6b
    3828:	13640514 	cmnne	r4, #20, 10	; 0x5000000
    382c:	05135b05 	ldreq	r5, [r3, #-2821]	; 0xfffff4fb
    3830:	0110032f 	tsteq	r0, pc, lsr #6
    3834:	0a030505 	beq	c4c50 <__HEAP_SIZE+0xc3c50>
    3838:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    383c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3840:	16052206 	strne	r2, [r5], -r6, lsl #4
    3844:	33050106 	movwcc	r0, #20742	; 0x5106
    3848:	200b0520 	andcs	r0, fp, r0, lsr #10
    384c:	02004005 	andeq	r4, r0, #5
    3850:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3854:	00f80315 	rscseq	r0, r8, r5, lsl r3
    3858:	0605052e 	streq	r0, [r5], -lr, lsr #10
    385c:	3e340523 	cdpcc	5, 3, cr0, cr4, cr3, {1}
    3860:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3864:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3868:	8203060d 	andhi	r0, r3, #13631488	; 0xd00000
    386c:	1a053c7f 	bne	152a70 <__RAM_SIZE+0x52a70>
    3870:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3874:	1f054b06 	svcne	0x00054b06
    3878:	30050106 	andcc	r0, r5, r6, lsl #2
    387c:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    3880:	06160519 			; <UNDEFINED> instruction: 0x06160519
    3884:	0d053c01 	stceq	12, cr3, [r5, #-4]
    3888:	0f053206 	svceq	0x00053206
    388c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3890:	20054006 	andcs	r4, r5, r6
    3894:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3898:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    389c:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    38a0:	00410501 	subeq	r0, r1, r1, lsl #10
    38a4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    38a8:	43061e05 	movwmi	r1, #28165	; 0x6e05
    38ac:	01062205 	tsteq	r6, r5, lsl #4
    38b0:	053c2005 	ldreq	r2, [ip, #-5]!
    38b4:	0525061d 	streq	r0, [r5, #-1565]!	; 0xfffff9e3
    38b8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    38bc:	053e0621 	ldreq	r0, [lr, #-1569]!	; 0xfffff9df
    38c0:	2001063c 	andcs	r0, r1, ip, lsr r6
    38c4:	03061905 	movweq	r1, #26885	; 0x6905
    38c8:	1d053c0e 	stcne	12, cr3, [r5, #-56]	; 0xffffffc8
    38cc:	1b050106 	blne	143cec <__RAM_SIZE+0x43cec>
    38d0:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    38d4:	202000c1 	eorcs	r0, r0, r1, asr #1
    38d8:	03061d05 	movweq	r1, #27909	; 0x6d05
    38dc:	21052041 	tstcs	r5, r1, asr #32
    38e0:	1f050106 	svcne	0x00050106
    38e4:	0621054a 	strteq	r0, [r1], -sl, asr #10
    38e8:	06230524 	strteq	r0, [r3], -r4, lsr #10
    38ec:	06250501 	strteq	r0, [r5], -r1, lsl #10
    38f0:	0640053e 			; <UNDEFINED> instruction: 0x0640053e
    38f4:	11052001 	tstne	r5, r1
    38f8:	3c360306 	ldccc	3, cr0, [r6], #-24	; 0xffffffe8
    38fc:	02002e01 	andeq	r2, r0, #1, 28
    3900:	002e0104 	eoreq	r0, lr, r4, lsl #2
    3904:	01010402 	tsteq	r1, r2, lsl #8
    3908:	01040200 	mrseq	r0, R12_usr
    390c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3910:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3914:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    3918:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    391c:	20200104 	eorcs	r0, r0, r4, lsl #2
    3920:	20202020 	eorcs	r2, r0, r0, lsr #32
    3924:	20202020 	eorcs	r2, r0, r0, lsr #32
    3928:	02202020 	eoreq	r2, r0, #32
    392c:	01010001 	tsteq	r1, r1
    3930:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3934:	00000002 	andeq	r0, r0, r2
    3938:	0ab20300 	beq	fec84540 <__StackTop+0xc6b84540>
    393c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3940:	133d0605 	teqne	sp, #5242880	; 0x500000
    3944:	14460513 	strbne	r0, [r6], #-1299	; 0xfffffaed
    3948:	051a1c05 	ldreq	r1, [sl, #-3077]	; 0xfffff3fb
    394c:	7b05162d 	blvc	149208 <__RAM_SIZE+0x49208>
    3950:	032f0517 			; <UNDEFINED> instruction: 0x032f0517
    3954:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    3958:	062e0517 			; <UNDEFINED> instruction: 0x062e0517
    395c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3960:	1b052206 	blne	14c180 <__RAM_SIZE+0x4c180>
    3964:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3968:	28052506 	stmdacs	r5, {r1, r2, r8, sl, sp}
    396c:	0b050106 	bleq	143d8c <__RAM_SIZE+0x43d8c>
    3970:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3974:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    3978:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    397c:	1a0d053e 	bne	344e7c <__RAM_SIZE+0x244e7c>
    3980:	01062a05 	tsteq	r6, r5, lsl #20
    3984:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    3988:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    398c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3990:	05400615 	strbeq	r0, [r0, #-1557]	; 0xfffff9eb
    3994:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3998:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    399c:	1d052206 	sfmne	f2, 4, [r5, #-24]	; 0xffffffe8
    39a0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    39a4:	1d052e1b 	stcne	14, cr2, [r5, #-108]	; 0xffffff94
    39a8:	1f052506 	svcne	0x00052506
    39ac:	21050106 	tstcs	r5, r6, lsl #2
    39b0:	3c052206 	sfmcc	f2, 4, [r5], {6}
    39b4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    39b8:	0e030619 	mcreq	6, 0, r0, cr3, cr9, {0}
    39bc:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    39c0:	201b0501 	andscs	r0, fp, r1, lsl #10
    39c4:	3e031505 	cfsh32cc	mvfx1, mvfx3, #5
    39c8:	1d052020 	stcne	0, cr2, [r5, #-128]	; 0xffffff80
    39cc:	20440306 	subcs	r0, r4, r6, lsl #6
    39d0:	01062105 	tsteq	r6, r5, lsl #2
    39d4:	2e1f052e 	cfmul64cs	mvdx0, mvdx15, mvdx14
    39d8:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    39dc:	01062305 	tsteq	r6, r5, lsl #6
    39e0:	22062505 	andcs	r2, r6, #20971520	; 0x1400000
    39e4:	01064005 	tsteq	r6, r5
    39e8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    39ec:	012e3303 			; <UNDEFINED> instruction: 0x012e3303
    39f0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    39f4:	02002e01 	andeq	r2, r0, #1, 28
    39f8:	00010104 	andeq	r0, r1, r4, lsl #2
    39fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a00:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3a04:	15052001 	strne	r2, [r5, #-1]
    3a08:	01040200 	mrseq	r0, R12_usr
    3a0c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    3a10:	02002001 	andeq	r2, r0, #1
    3a14:	17200104 	strne	r0, [r0, -r4, lsl #2]!
    3a18:	06050520 	streq	r0, [r5], -r0, lsr #10
    3a1c:	3e2d0515 	mcrcc	5, 1, r0, cr13, cr5, {0}
    3a20:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3a24:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3a28:	2e730315 	mrccs	3, 3, r0, cr3, cr5, {0}
    3a2c:	20202020 	eorcs	r2, r0, r0, lsr #32
    3a30:	20202020 	eorcs	r2, r0, r0, lsr #32
    3a34:	00010220 	andeq	r0, r1, r0, lsr #4
    3a38:	01050101 	tsteq	r5, r1, lsl #2
    3a3c:	72020500 	andvc	r0, r2, #0, 10
    3a40:	03100023 	tsteq	r0, #35	; 0x23
    3a44:	06010be0 	streq	r0, [r1], -r0, ror #23
    3a48:	06050501 	streq	r0, [r5], -r1, lsl #10
    3a4c:	05131359 	ldreq	r1, [r3, #-857]	; 0xfffffca7
    3a50:	05100610 	ldreq	r0, [r0, #-1552]	; 0xfffff9f0
    3a54:	1f030611 	svcne	0x00030611
    3a58:	4b2e052e 	blmi	b84f18 <__RAM_SIZE+0xa84f18>
    3a5c:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    3a60:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    3a64:	1105202c 	tstne	r5, ip, lsr #32
    3a68:	15052506 	strne	r2, [r5, #-1286]	; 0xfffffafa
    3a6c:	13050106 	movwne	r0, #20742	; 0x5106
    3a70:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    3a74:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    3a78:	34051511 	strcc	r1, [r5], #-1297	; 0xfffffaef
    3a7c:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    3a80:	01061805 	tsteq	r6, r5, lsl #16
    3a84:	03010520 	movweq	r0, #5408	; 0x1520
    3a88:	050100d5 	streq	r0, [r1, #-213]	; 0xffffff2b
    3a8c:	99030615 	stmdbls	r3, {r0, r2, r4, r9, sl}
    3a90:	19052e7f 	stmdbne	r5, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    3a94:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3a98:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    3a9c:	03150530 	tsteq	r5, #48, 10	; 0xc000000
    3aa0:	39053c18 	stmdbcc	r5, {r3, r4, sl, fp, ip, sp}
    3aa4:	13400530 	movtne	r0, #1328	; 0x530
    3aa8:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    3aac:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3ab0:	3d340615 	ldccc	6, cr0, [r4, #-84]!	; 0xffffffac
    3ab4:	01062305 	tsteq	r6, r5, lsl #6
    3ab8:	0009052e 	andeq	r0, r9, lr, lsr #10
    3abc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ac0:	00010f03 	andeq	r0, r1, r3, lsl #30
    3ac4:	4a040402 	bmi	104ad4 <__RAM_SIZE+0x4ad4>
    3ac8:	1a031105 	bne	c7ee4 <__HEAP_SIZE+0xc6ee4>
    3acc:	1a053d4a 	bne	152ffc <__RAM_SIZE+0x52ffc>
    3ad0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3ad4:	053d4306 	ldreq	r4, [sp, #-774]!	; 0xfffffcfa
    3ad8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3adc:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    3ae0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3ae4:	3f053c0f 	svccc	0x00053c0f
    3ae8:	7f820306 	svcvc	0x00820306
    3aec:	1520052e 	strne	r0, [r0, #-1326]!	; 0xfffffad2
    3af0:	05166705 	ldreq	r6, [r6, #-1797]	; 0xfffff8fb
    3af4:	0505176e 	streq	r1, [r5, #-1902]	; 0xfffff892
    3af8:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    3afc:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3b00:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3b04:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    3b08:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3b0c:	22030611 	andcs	r0, r3, #17825792	; 0x1100000
    3b10:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    3b14:	20130501 	andscs	r0, r3, r1, lsl #10
    3b18:	03061605 	movweq	r1, #26117	; 0x6605
    3b1c:	18052e0b 	stmdane	r5, {r0, r1, r3, r9, sl, fp, sp}
    3b20:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3b24:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    3b28:	33160905 	tstcc	r6, #81920	; 0x14000
    3b2c:	02002e2f 	andeq	r2, r0, #752	; 0x2f0
    3b30:	00660304 	rsbeq	r0, r6, r4, lsl #6
    3b34:	66060402 	strvs	r0, [r6], -r2, lsl #8
    3b38:	06040200 	streq	r0, [r4], -r0, lsl #4
    3b3c:	000d0531 	andeq	r0, sp, r1, lsr r5
    3b40:	06060402 	streq	r0, [r6], -r2, lsl #8
    3b44:	000b0501 	andeq	r0, fp, r1, lsl #10
    3b48:	4a060402 	bmi	184b58 <__RAM_SIZE+0x84b58>
    3b4c:	32060d05 	andcc	r0, r6, #320	; 0x140
    3b50:	01061105 	tsteq	r6, r5, lsl #2
    3b54:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    3b58:	0530063a 	ldreq	r0, [r0, #-1594]!	; 0xfffff9c6
    3b5c:	3e591311 	mrccc	3, 2, r1, cr9, cr1, {0}
    3b60:	01061505 	tsteq	r6, r5, lsl #10
    3b64:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    3b68:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    3b6c:	1b030618 	blne	c53d4 <__HEAP_SIZE+0xc43d4>
    3b70:	0002023c 	andeq	r0, r2, ip, lsr r2
    3b74:	01050101 	tsteq	r5, r1, lsl #2
    3b78:	00020500 	andeq	r0, r2, r0, lsl #10
    3b7c:	03000000 	movweq	r0, #0
    3b80:	06010cf5 			; <UNDEFINED> instruction: 0x06010cf5
    3b84:	06050501 	streq	r0, [r5], -r1, lsl #10
    3b88:	0513134b 	ldreq	r1, [r3, #-843]	; 0xfffffcb5
    3b8c:	14051509 	strne	r1, [r5], #-1289	; 0xfffffaf7
    3b90:	10050106 	andne	r0, r5, r6, lsl #2
    3b94:	062e051b 			; <UNDEFINED> instruction: 0x062e051b
    3b98:	052e2403 	streq	r2, [lr, #-1027]!	; 0xfffffbfd
    3b9c:	2e051611 	mcrcs	6, 0, r1, cr5, cr1, {0}
    3ba0:	2c050106 	stfcss	f0, [r5], {6}
    3ba4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    3ba8:	06200524 	strteq	r0, [r0], -r4, lsr #10
    3bac:	20170501 	andscs	r0, r7, r1, lsl #10
    3bb0:	28063105 	stmdacs	r6, {r0, r2, r8, ip, sp}
    3bb4:	05191105 	ldreq	r1, [r9, #-261]	; 0xfffffefb
    3bb8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3bbc:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    3bc0:	200d0306 	andcs	r0, sp, r6, lsl #6
    3bc4:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    3bc8:	1105303a 	tstne	r5, sl, lsr r0
    3bcc:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3bd0:	01052001 	tsteq	r5, r1
    3bd4:	01018c03 	tsteq	r1, r3, lsl #24
    3bd8:	03061905 	movweq	r1, #26885	; 0x6905
    3bdc:	052e7ed5 	streq	r7, [lr, #-3797]!	; 0xfffff12b
    3be0:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    3be4:	15052e3c 	strne	r2, [r5, #-3644]	; 0xfffff1c4
    3be8:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    3bec:	01061905 	tsteq	r6, r5, lsl #18
    3bf0:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    3bf4:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    3bf8:	3c180315 	ldccc	3, cr0, [r8], {21}
    3bfc:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    3c00:	15051346 	strne	r1, [r5, #-838]	; 0xfffffcba
    3c04:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    3c08:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3c0c:	23053d34 	movwcs	r3, #23860	; 0x5d34
    3c10:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3c14:	04020009 	streq	r0, [r2], #-9
    3c18:	0f030601 	svceq	0x00030601
    3c1c:	04020001 	streq	r0, [r2], #-1
    3c20:	19054a04 	stmdbne	r5, {r2, r9, fp, lr}
    3c24:	054a1103 	strbeq	r1, [sl, #-259]	; 0xfffffefd
    3c28:	3405301d 	strcc	r3, [r5], #-29	; 0xffffffe3
    3c2c:	19050106 	stmdbne	r5, {r1, r2, r8}
    3c30:	2e064c06 	cdpcs	12, 0, cr4, cr6, cr6, {0}
    3c34:	03061105 	movweq	r1, #24837	; 0x6105
    3c38:	053d2019 	ldreq	r2, [sp, #-25]!	; 0xffffffe7
    3c3c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3c40:	3d42060d 	stclcc	6, cr0, [r2, #-52]	; 0xffffffcc
    3c44:	01061605 	tsteq	r6, r5, lsl #12
    3c48:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    3c4c:	01061105 	tsteq	r6, r5, lsl #2
    3c50:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    3c54:	da03063b 	ble	c5548 <__HEAP_SIZE+0xc4548>
    3c58:	20052e7e 	andcs	r2, r5, lr, ror lr
    3c5c:	162d0515 			; <UNDEFINED> instruction: 0x162d0515
    3c60:	05176e05 	ldreq	r6, [r7, #-3589]	; 0xfffff1fb
    3c64:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    3c68:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    3c6c:	01061f05 	tsteq	r6, r5, lsl #30
    3c70:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    3c74:	01060f05 	tsteq	r6, r5, lsl #30
    3c78:	03061105 	movweq	r1, #24837	; 0x6105
    3c7c:	22052e31 	andcs	r2, r5, #784	; 0x310
    3c80:	13050106 	movwne	r0, #20742	; 0x5106
    3c84:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    3c88:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    3c8c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3c90:	0a03062d 	beq	c554c <__HEAP_SIZE+0xc454c>
    3c94:	1609052e 	strne	r0, [r9], -lr, lsr #10
    3c98:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    3c9c:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3ca0:	06040200 	streq	r0, [r4], -r0, lsl #4
    3ca4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3ca8:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    3cac:	06040200 	streq	r0, [r4], -r0, lsl #4
    3cb0:	0b050106 	bleq	1440d0 <__RAM_SIZE+0x440d0>
    3cb4:	06040200 	streq	r0, [r4], -r0, lsl #4
    3cb8:	060d054a 	streq	r0, [sp], -sl, asr #10
    3cbc:	06110534 			; <UNDEFINED> instruction: 0x06110534
    3cc0:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3cc4:	30063a05 	andcc	r3, r6, r5, lsl #20
    3cc8:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    3ccc:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3cd0:	31052017 	tstcc	r5, r7, lsl r0
    3cd4:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    3cd8:	59171105 	ldmdbpl	r7, {r0, r2, r8, ip}
    3cdc:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    3ce0:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    3ce4:	30061505 	andcc	r1, r6, r5, lsl #10
    3ce8:	053c2003 	ldreq	r2, [ip, #-3]!
    3cec:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3cf0:	1b030635 	blne	c55cc <__HEAP_SIZE+0xc45cc>
    3cf4:	13420520 	movtne	r0, #9504	; 0x2520
    3cf8:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    3cfc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3d00:	64030619 	strvs	r0, [r3], #-1561	; 0xfffff9e7
    3d04:	301d052e 	andscc	r0, sp, lr, lsr #10
    3d08:	06380519 			; <UNDEFINED> instruction: 0x06380519
    3d0c:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    3d10:	064a0903 	strbeq	r0, [sl], -r3, lsl #18
    3d14:	19052e20 	stmdbne	r5, {r5, r9, sl, fp, sp}
    3d18:	03021406 	movweq	r1, #9222	; 0x2406
    3d1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d20:	02050005 	andeq	r0, r5, #5
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	0106b003 	tsteq	r6, r3
    3d2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3d30:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    3d34:	20051444 	andcs	r1, r5, r4, asr #8
    3d38:	172d0514 			; <UNDEFINED> instruction: 0x172d0514
    3d3c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3d40:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3d44:	0b052033 	bleq	14be18 <__RAM_SIZE+0x4be18>
    3d48:	060d052e 	streq	r0, [sp], -lr, lsr #10
    3d4c:	06170535 			; <UNDEFINED> instruction: 0x06170535
    3d50:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3d54:	060f054f 	streq	r0, [pc], -pc, asr #10
    3d58:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3d5c:	06280522 	strteq	r0, [r8], -r2, lsr #10
    3d60:	203f0501 	eorscs	r0, pc, r1, lsl #10
    3d64:	32063c05 	andcc	r3, r6, #1280	; 0x500
    3d68:	05163805 	ldreq	r3, [r6, #-2053]	; 0xfffff7fb
    3d6c:	10051409 	andne	r1, r5, r9, lsl #8
    3d70:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3d74:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    3d78:	01062405 	tsteq	r6, r5, lsl #8
    3d7c:	05203b05 	streq	r3, [r0, #-2821]!	; 0xfffff4fb
    3d80:	052f060d 	streq	r0, [pc, #-1549]!	; 377b <__HEAP_SIZE+0x277b>
    3d84:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3d88:	20160305 	andscs	r0, r6, r5, lsl #6
    3d8c:	01010020 	tsteq	r1, r0, lsr #32
    3d90:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3d94:	00000002 	andeq	r0, r0, r2
    3d98:	0ed70300 	cdpeq	3, 13, cr0, cr7, cr0, {0}
    3d9c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3da0:	13590605 	cmpne	r9, #5242880	; 0x500000
    3da4:	10051313 	andne	r1, r5, r3, lsl r3
    3da8:	11050f06 	tstne	r5, r6, lsl #30
    3dac:	2e220306 	cdpcs	3, 2, cr0, cr2, cr6, {0}
    3db0:	01062805 	tsteq	r6, r5, lsl #16
    3db4:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    3db8:	054b2b05 	strbeq	r2, [fp, #-2821]	; 0xfffff4fb
    3dbc:	2e051511 	mcrcs	5, 0, r1, cr5, cr1, {0}
    3dc0:	11050106 	tstne	r5, r6, lsl #2
    3dc4:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    3dc8:	13050106 	movwne	r0, #20742	; 0x5106
    3dcc:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    3dd0:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3dd4:	31051511 	tstcc	r5, r1, lsl r5
    3dd8:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    3ddc:	01061805 	tsteq	r6, r5, lsl #16
    3de0:	03010520 	movweq	r0, #5408	; 0x1520
    3de4:	050100d6 	streq	r0, [r1, #-214]	; 0xffffff2a
    3de8:	97030615 	smladls	r3, r5, r6, r0
    3dec:	19052e7f 	stmdbne	r5, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    3df0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3df4:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    3df8:	03150531 	tsteq	r5, #205520896	; 0xc400000
    3dfc:	36053c18 			; <UNDEFINED> instruction: 0x36053c18
    3e00:	133d0530 	teqne	sp, #48, 10	; 0xc000000
    3e04:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    3e08:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3e0c:	3d350615 	ldccc	6, cr0, [r5, #-84]!	; 0xffffffac
    3e10:	01062305 	tsteq	r6, r5, lsl #6
    3e14:	0009052e 	andeq	r0, r9, lr, lsr #10
    3e18:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e1c:	00010f03 	andeq	r0, r1, r3, lsl #30
    3e20:	4a040402 	bmi	104e30 <__RAM_SIZE+0x4e30>
    3e24:	1a031105 	bne	c8240 <__HEAP_SIZE+0xc7240>
    3e28:	1a053d4a 	bne	153358 <__RAM_SIZE+0x53358>
    3e2c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3e30:	053d4306 	ldreq	r4, [sp, #-774]!	; 0xfffffcfa
    3e34:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3e38:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    3e3c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3e40:	3c053c0f 	stccc	12, cr3, [r5], {15}
    3e44:	7efb0306 	cdpvc	3, 15, cr0, cr11, cr6, {0}
    3e48:	1520052e 	strne	r0, [r0, #-1326]!	; 0xfffffad2
    3e4c:	05166705 	ldreq	r6, [r6, #-1797]	; 0xfffff8fb
    3e50:	0505176e 	streq	r1, [r5, #-1902]	; 0xfffff892
    3e54:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    3e58:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3e5c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3e60:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    3e64:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3e68:	28030611 	stmdacs	r3, {r0, r4, r9, sl}
    3e6c:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    3e70:	20130501 	andscs	r0, r3, r1, lsl #10
    3e74:	03061605 	movweq	r1, #26117	; 0x6605
    3e78:	18052e0b 	stmdane	r5, {r0, r1, r3, r9, sl, fp, sp}
    3e7c:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3e80:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    3e84:	33160905 	tstcc	r6, #81920	; 0x14000
    3e88:	02002e2f 	andeq	r2, r0, #752	; 0x2f0
    3e8c:	00660304 	rsbeq	r0, r6, r4, lsl #6
    3e90:	66060402 	strvs	r0, [r6], -r2, lsl #8
    3e94:	06040200 	streq	r0, [r4], -r0, lsl #4
    3e98:	000d0531 	andeq	r0, sp, r1, lsr r5
    3e9c:	06060402 	streq	r0, [r6], -r2, lsl #8
    3ea0:	000b0501 	andeq	r0, fp, r1, lsl #10
    3ea4:	4a060402 	bmi	184eb4 <__RAM_SIZE+0x84eb4>
    3ea8:	32060d05 	andcc	r0, r6, #320	; 0x140
    3eac:	01061105 	tsteq	r6, r5, lsl #2
    3eb0:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    3eb4:	05300637 	ldreq	r0, [r0, #-1591]!	; 0xfffff9c9
    3eb8:	3e591311 	mrccc	3, 2, r1, cr9, cr1, {0}
    3ebc:	01061505 	tsteq	r6, r5, lsl #10
    3ec0:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    3ec4:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    3ec8:	1b030618 	blne	c5730 <__HEAP_SIZE+0xc4730>
    3ecc:	0002023c 	andeq	r0, r2, ip, lsr r2
    3ed0:	01050101 	tsteq	r5, r1, lsl #2
    3ed4:	00020500 	andeq	r0, r2, r0, lsl #10
    3ed8:	03000000 	movweq	r0, #0
    3edc:	06010ff5 			; <UNDEFINED> instruction: 0x06010ff5
    3ee0:	06050501 	streq	r0, [r5], -r1, lsl #10
    3ee4:	05131359 	ldreq	r1, [r3, #-857]	; 0xfffffca7
    3ee8:	1c051453 	cfstrsne	mvf1, [r5], {83}	; 0x53
    3eec:	135f0514 	cmpne	pc, #20, 10	; 0x5000000
    3ef0:	10032f05 	andne	r2, r3, r5, lsl #30
    3ef4:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3ef8:	01062e05 	tsteq	r6, r5, lsl #28
    3efc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3f00:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    3f04:	06090501 	streq	r0, [r9], -r1, lsl #10
    3f08:	060b0523 	streq	r0, [fp], -r3, lsr #10
    3f0c:	03150501 	tsteq	r5, #4194304	; 0x400000
    3f10:	3a052033 	bcc	14bfe4 <__RAM_SIZE+0x4bfe4>
    3f14:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    3f18:	3e300515 	mrccc	5, 1, r0, cr0, cr5, {0}
    3f1c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3f20:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3f24:	4603060d 	strmi	r0, [r3], -sp, lsl #12
    3f28:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    3f2c:	06330501 	ldrteq	r0, [r3], -r1, lsl #10
    3f30:	140d054c 	strne	r0, [sp], #-1356	; 0xfffffab4
    3f34:	2f062e06 	svccs	0x00062e06
    3f38:	01062a05 	tsteq	r6, r5, lsl #20
    3f3c:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    3f40:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    3f44:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3f48:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    3f4c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3f50:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    3f54:	20202003 	eorcs	r2, r0, r3
    3f58:	20620306 	rsbcs	r0, r2, r6, lsl #6
    3f5c:	01061905 	tsteq	r6, r5, lsl #18
    3f60:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    3f64:	05240619 	streq	r0, [r4, #-1561]!	; 0xfffff9e7
    3f68:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    3f6c:	053e061d 	ldreq	r0, [lr, #-1565]!	; 0xfffff9e3
    3f70:	20010638 	andcs	r0, r1, r8, lsr r6
    3f74:	03061105 	movweq	r1, #24837	; 0x6105
    3f78:	2e013c15 	mcrcs	12, 0, r3, cr1, cr5, {0}
    3f7c:	01040200 	mrseq	r0, R12_usr
    3f80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3f84:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3f88:	2e060104 	adfcss	f0, f6, f4
    3f8c:	01040200 	mrseq	r0, R12_usr
    3f90:	0015052e 	andseq	r0, r5, lr, lsr #10
    3f94:	31010402 	tstcc	r1, r2, lsl #8
    3f98:	01040200 	mrseq	r0, R12_usr
    3f9c:	20202020 	eorcs	r2, r0, r0, lsr #32
    3fa0:	02202020 	eoreq	r2, r0, #32
    3fa4:	01010001 	tsteq	r1, r1
    3fa8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3fac:	00000002 	andeq	r0, r0, r2
    3fb0:	10d80300 	sbcsne	r0, r8, r0, lsl #6
    3fb4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3fb8:	133d0605 	teqne	sp, #5242880	; 0x500000
    3fbc:	35051313 	strcc	r1, [r5, #-787]	; 0xfffffced
    3fc0:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3fc4:	05135f05 	ldreq	r5, [r3, #-3845]	; 0xfffff0fb
    3fc8:	2f05132d 	svccs	0x0005132d
    3fcc:	05011003 	streq	r1, [r1, #-3]
    3fd0:	2e051705 	cdpcs	7, 0, cr1, cr5, cr5, {0}
    3fd4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3fd8:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    3fdc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3fe0:	1505200b 	strne	r2, [r5, #-11]
    3fe4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3fe8:	05210637 	streq	r0, [r1, #-1591]!	; 0xfffff9c9
    3fec:	2d051505 	cfstr32cs	mvfx1, [r5, #-20]	; 0xffffffec
    3ff0:	1405053e 	strne	r0, [r5], #-1342	; 0xfffffac2
    3ff4:	13060105 	movwne	r0, #24837	; 0x6105
    3ff8:	03063005 	movweq	r3, #24581	; 0x6005
    3ffc:	0d052e6b 	stceq	14, cr2, [r5, #-428]	; 0xfffffe54
    4000:	06240516 			; <UNDEFINED> instruction: 0x06240516
    4004:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4008:	062e0621 	strteq	r0, [lr], -r1, lsr #12
    400c:	062a052f 	strteq	r0, [sl], -pc, lsr #10
    4010:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4014:	06150522 	ldreq	r0, [r5], -r2, lsr #10
    4018:	01022001 	tsteq	r2, r1
    401c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4020:	02050001 	andeq	r0, r5, #1
    4024:	00000000 	andeq	r0, r0, r0
    4028:	01119503 	tsteq	r1, r3, lsl #10
    402c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4030:	30052f06 	andcc	r2, r5, r6, lsl #30
    4034:	141b0514 	ldrne	r0, [fp], #-1300	; 0xfffffaec
    4038:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    403c:	12053009 	andne	r3, r5, #9
    4040:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4044:	33052206 	movwcc	r2, #20998	; 0x5206
    4048:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    404c:	13060105 	movwne	r0, #24837	; 0x6105
    4050:	0101002e 	tsteq	r1, lr, lsr #32
    4054:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4058:	00000002 	andeq	r0, r0, r2
    405c:	11a90300 			; <UNDEFINED> instruction: 0x11a90300
    4060:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4064:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    4068:	05143005 	ldreq	r3, [r4, #-5]
    406c:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    4070:	30090514 	andcc	r0, r9, r4, lsl r5
    4074:	01062d05 	tsteq	r6, r5, lsl #26
    4078:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
    407c:	05052012 	streq	r2, [r5, #-18]	; 0xffffffee
    4080:	33052206 	movwcc	r2, #20998	; 0x5206
    4084:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    4088:	13060105 	movwne	r0, #24837	; 0x6105
    408c:	0101002e 	tsteq	r1, lr, lsr #32
    4090:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4094:	00000002 	andeq	r0, r0, r2
    4098:	11be0300 			; <UNDEFINED> instruction: 0x11be0300
    409c:	13050501 	movwne	r0, #21761	; 0x5501
    40a0:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    40a4:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    40a8:	0e051305 	cdpeq	3, 0, cr1, cr5, cr5, {0}
    40ac:	3a050106 	bcc	1444cc <__RAM_SIZE+0x444cc>
    40b0:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    40b4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    40b8:	00010213 	andeq	r0, r1, r3, lsl r2
    40bc:	01050101 	tsteq	r5, r1, lsl #2
    40c0:	00020500 	andeq	r0, r2, r0, lsl #10
    40c4:	03000000 	movweq	r0, #0
    40c8:	060111ce 	streq	r1, [r1], -lr, asr #3
    40cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    40d0:	14260521 	strtne	r0, [r6], #-1313	; 0xfffffadf
    40d4:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    40d8:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    40dc:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    40e0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    40e4:	01052e0b 	tsteq	r5, fp, lsl #28
    40e8:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    40ec:	7003060d 	andvc	r0, r3, sp, lsl #12
    40f0:	32250520 	eorcc	r0, r5, #32, 10	; 0x8000000
    40f4:	0b031f05 	bleq	cbd10 <__HEAP_SIZE+0xcad10>
    40f8:	06010501 	streq	r0, [r1], -r1, lsl #10
    40fc:	00010213 	andeq	r0, r1, r3, lsl r2
    4100:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4104:	00020500 	andeq	r0, r2, r0, lsl #10
    4108:	03000000 	movweq	r0, #0
    410c:	050111fe 	streq	r1, [r1, #-510]	; 0xfffffe02
    4110:	55051333 	strpl	r1, [r5, #-819]	; 0xfffffccd
    4114:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4118:	13060505 	movwne	r0, #25861	; 0x6505
    411c:	00010220 	andeq	r0, r1, r0, lsr #4
    4120:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4124:	00020500 	andeq	r0, r2, r0, lsl #10
    4128:	03000000 	movweq	r0, #0
    412c:	0501128d 	streq	r1, [r1, #-653]	; 0xfffffd73
    4130:	09051341 	stmdbeq	r5, {r0, r6, r8, r9, ip}
    4134:	06310514 			; <UNDEFINED> instruction: 0x06310514
    4138:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    413c:	06050522 	streq	r0, [r5], -r2, lsr #10
    4140:	00010213 	andeq	r0, r1, r3, lsl r2
    4144:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4148:	00020500 	andeq	r0, r2, r0, lsl #10
    414c:	03000000 	movweq	r0, #0
    4150:	0501129b 	streq	r1, [r1, #-667]	; 0xfffffd65
    4154:	51051331 	tstpl	r5, r1, lsr r3
    4158:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    415c:	13060505 	movwne	r0, #25861	; 0x6505
    4160:	0001022e 	andeq	r0, r1, lr, lsr #4
    4164:	01050101 	tsteq	r5, r1, lsl #2
    4168:	00020500 	andeq	r0, r2, r0, lsl #10
    416c:	03000000 	movweq	r0, #0
    4170:	050112a7 	streq	r1, [r1, #-679]	; 0xfffffd59
    4174:	50051331 	andpl	r1, r5, r1, lsr r3
    4178:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    417c:	13060105 	movwne	r0, #24837	; 0x6105
    4180:	00010220 	andeq	r0, r1, r0, lsr #4
    4184:	01050101 	tsteq	r5, r1, lsl #2
    4188:	00020500 	andeq	r0, r2, r0, lsl #10
    418c:	03000000 	movweq	r0, #0
    4190:	050112b1 	streq	r1, [r1, #-689]	; 0xfffffd4f
    4194:	4c05132f 	stcmi	3, cr1, [r5], {47}	; 0x2f
    4198:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    419c:	13060105 	movwne	r0, #24837	; 0x6105
    41a0:	00010220 	andeq	r0, r1, r0, lsr #4
    41a4:	01050101 	tsteq	r5, r1, lsl #2
    41a8:	00020500 	andeq	r0, r2, r0, lsl #10
    41ac:	03000000 	movweq	r0, #0
    41b0:	050114cb 	streq	r1, [r1, #-1227]	; 0xfffffb35
    41b4:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    41b8:	1c051433 	cfstrsne	mvf1, [r5], {51}	; 0x33
    41bc:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    41c0:	01061005 	tsteq	r6, r5
    41c4:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    41c8:	24202211 	strtcs	r2, [r0], #-529	; 0xfffffdef
    41cc:	23063505 	movwcs	r3, #25861	; 0x6505
    41d0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    41d4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    41d8:	01010001 	tsteq	r1, r1
    41dc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    41e0:	00000002 	andeq	r0, r0, r2
    41e4:	14f80300 	ldrbtne	r0, [r8], #768	; 0x300
    41e8:	13050501 	movwne	r0, #21761	; 0x5501
    41ec:	14320513 	ldrtne	r0, [r2], #-1299	; 0xfffffaed
    41f0:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    41f4:	10051405 	andne	r1, r5, r5, lsl #8
    41f8:	2e050106 	adfcss	f0, f5, f6
    41fc:	20070520 	andcs	r0, r7, r0, lsr #10
    4200:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    4204:	05230634 	streq	r0, [r3, #-1588]!	; 0xfffff9cc
    4208:	01051405 	tsteq	r5, r5, lsl #8
    420c:	11051306 	tstne	r5, r6, lsl #6
    4210:	20207603 	eorcs	r7, r0, r3, lsl #12
    4214:	01000102 	tsteq	r0, r2, lsl #2
    4218:	00050501 	andeq	r0, r5, r1, lsl #10
    421c:	24620205 	strbtcs	r0, [r2], #-517	; 0xfffffdfb
    4220:	be031000 	cdplt	0, 0, cr1, cr3, cr0, {0}
    4224:	01060118 	tsteq	r6, r8, lsl r1
    4228:	4b060905 	blmi	186644 <__RAM_SIZE+0x86644>
    422c:	05145d05 	ldreq	r5, [r4, #-3333]	; 0xfffff2fb
    4230:	01100309 	tsteq	r0, r9, lsl #6
    4234:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4238:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    423c:	00660604 	rsbeq	r0, r6, r4, lsl #12
    4240:	30060402 	andcc	r0, r6, r2, lsl #8
    4244:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    4248:	01060604 	tsteq	r6, r4, lsl #12
    424c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4250:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
    4254:	05270625 	streq	r0, [r7, #-1573]!	; 0xfffff9db
    4258:	35051509 	strcc	r1, [r5, #-1289]	; 0xfffffaf7
    425c:	0605053e 			; <UNDEFINED> instruction: 0x0605053e
    4260:	00090513 	andeq	r0, r9, r3, lsl r5
    4264:	06010402 	streq	r0, [r1], -r2, lsl #8
    4268:	00207103 	eoreq	r7, r0, r3, lsl #2
    426c:	4a040402 	bmi	10527c <__RAM_SIZE+0x527c>
    4270:	024f0d05 	subeq	r0, pc, #320	; 0x140
    4274:	01010007 	tsteq	r1, r7
    4278:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    427c:	00000002 	andeq	r0, r0, r2
    4280:	18e80300 	stmiane	r8!, {r8, r9}^
    4284:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4288:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    428c:	09051439 	stmdbeq	r5, {r0, r3, r4, r5, sl, ip}
    4290:	06130514 			; <UNDEFINED> instruction: 0x06130514
    4294:	062f0501 	strteq	r0, [pc], -r1, lsl #10
    4298:	1409054c 	strne	r0, [r9], #-1356	; 0xfffffab4
    429c:	13060505 	movwne	r0, #25861	; 0x6505
    42a0:	01000102 	tsteq	r0, r2, lsl #2
    42a4:	00050501 	andeq	r0, r5, r1, lsl #10
    42a8:	00000205 	andeq	r0, r0, r5, lsl #4
    42ac:	fb030000 	blx	c42b6 <__HEAP_SIZE+0xc32b6>
    42b0:	01060118 	tsteq	r6, r8, lsl r1
    42b4:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    42b8:	05144205 	ldreq	r4, [r4, #-517]	; 0xfffffdfb
    42bc:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    42c0:	06340530 			; <UNDEFINED> instruction: 0x06340530
    42c4:	200f0501 	andcs	r0, pc, r1, lsl #10
    42c8:	05231905 	streq	r1, [r3, #-2309]!	; 0xfffff6fb
    42cc:	0e030609 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx9
    42d0:	302e0520 	eorcc	r0, lr, r0, lsr #10
    42d4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    42d8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    42dc:	6f030612 	svcvs	0x00030612
    42e0:	0639052e 	ldrteq	r0, [r9], -lr, lsr #10
    42e4:	20140501 	andscs	r0, r4, r1, lsl #10
    42e8:	28061105 	stmdacs	r6, {r0, r2, r8, ip}
    42ec:	01064a05 	tsteq	r6, r5, lsl #20
    42f0:	21061105 	tstcs	r6, r5, lsl #2
    42f4:	01061905 	tsteq	r6, r5, lsl #18
    42f8:	02201b20 	eoreq	r1, r0, #32, 22	; 0x8000
    42fc:	01010001 	tsteq	r1, r1
    4300:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4304:	00000002 	andeq	r0, r0, r2
    4308:	19a10300 	stmibne	r1!, {r8, r9}
    430c:	13090501 	movwne	r0, #38145	; 0x9501
    4310:	14470513 	strbne	r0, [r7], #-1299	; 0xfffffaed
    4314:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4318:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    431c:	1505200b 	strne	r2, [r5, #-11]
    4320:	03050531 	movweq	r0, #21809	; 0x5531
    4324:	60032017 	andvs	r2, r3, r7, lsl r0
    4328:	060e0520 	streq	r0, [lr], -r0, lsr #10
    432c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    4330:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    4334:	15052010 	strne	r2, [r5, #-16]
    4338:	06330525 	ldrteq	r0, [r3], -r5, lsr #10
    433c:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    4340:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    4344:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    4348:	20740306 	rsbscs	r0, r4, r6, lsl #6
    434c:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    4350:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    4354:	2f30060d 	svccs	0x0030060d
    4358:	01061505 	tsteq	r6, r5, lsl #10
    435c:	01000202 	tsteq	r0, r2, lsl #4
    4360:	00050501 	andeq	r0, r5, r1, lsl #10
    4364:	00000205 	andeq	r0, r0, r5, lsl #4
    4368:	ca030000 	bgt	c4370 <__HEAP_SIZE+0xc3370>
    436c:	01060119 	tsteq	r6, r9, lsl r1
    4370:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    4374:	01062005 	tsteq	r6, r5
    4378:	30064205 	andcc	r4, r6, r5, lsl #4
    437c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4380:	20010612 	andcs	r0, r1, r2, lsl r6
    4384:	30063305 	andcc	r3, r6, r5, lsl #6
    4388:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    438c:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    4390:	01010004 	tsteq	r1, r4
    4394:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4398:	00000002 	andeq	r0, r0, r2
    439c:	19dc0300 	ldmibne	ip, {r8, r9}^
    43a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    43a4:	052f0609 	streq	r0, [pc, #-1545]!	; 3da3 <__HEAP_SIZE+0x2da3>
    43a8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    43ac:	0530063b 	ldreq	r0, [r0, #-1595]!	; 0xfffff9c5
    43b0:	12051409 	andne	r1, r5, #150994944	; 0x9000000
    43b4:	3a050106 	bcc	1447d4 <__RAM_SIZE+0x447d4>
    43b8:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    43bc:	06050514 			; <UNDEFINED> instruction: 0x06050514
    43c0:	00040213 	andeq	r0, r4, r3, lsl r2
    43c4:	35cd0101 	strbcc	r0, [sp, #257]	; 0x101
    43c8:	00030000 	andeq	r0, r3, r0
    43cc:	000002aa 	andeq	r0, r0, sl, lsr #5
    43d0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    43d4:	0101000d 	tsteq	r1, sp
    43d8:	00000101 	andeq	r0, r0, r1, lsl #2
    43dc:	00000100 	andeq	r0, r0, r0, lsl #2
    43e0:	2f2e2e01 	svccs	0x002e2e01
    43e4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    43e8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    43ec:	6f747262 	svcvs	0x00747262
    43f0:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    43f4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    43f8:	6300534f 	movwvs	r5, #847	; 0x34f
    43fc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    4400:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    4404:	6f646978 	svcvs	0x00646978
    4408:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    440c:	6172676f 	cmnvs	r2, pc, ror #14
    4410:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    4414:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    4418:	63675c63 	cmnvs	r7, #25344	; 0x6300
    441c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    4420:	6f6e2d6d 	svcvs	0x006e2d6d
    4424:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4428:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    442c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    4430:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    4434:	30312e31 	eorscc	r2, r1, r1, lsr lr
    4438:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    443c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    4440:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    4444:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4448:	61652d65 	cmnvs	r5, r5, ror #26
    444c:	315c6962 	cmpcc	ip, r2, ror #18
    4450:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    4454:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    4458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    445c:	3a630065 	bcc	18c45f8 <__RAM_SIZE+0x17c45f8>
    4460:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    4464:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    4468:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    446c:	6f72705c 	svcvs	0x0072705c
    4470:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    4474:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    4478:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    447c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    4480:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    4484:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4488:	61652d65 	cmnvs	r5, r5, ror #26
    448c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    4490:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    4494:	31323032 	teqcc	r2, r2, lsr r0
    4498:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    449c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    44a0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    44a4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    44a8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    44ac:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    44b0:	616d5c65 	cmnvs	sp, r5, ror #24
    44b4:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    44b8:	3a630065 	bcc	18c4654 <__RAM_SIZE+0x17c4654>
    44bc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    44c0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    44c4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    44c8:	6f72705c 	svcvs	0x0072705c
    44cc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    44d0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    44d4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    44d8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    44dc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    44e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    44e4:	61652d65 	cmnvs	r5, r5, ror #26
    44e8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    44ec:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    44f0:	31323032 	teqcc	r2, r2, lsr r0
    44f4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    44f8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    44fc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    4500:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4504:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    4508:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    450c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    4510:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    4514:	2f2e2e2f 	svccs	0x002e2e2f
    4518:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4468 <__HEAP_SIZE+0x3468>
    451c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4520:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    4524:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    4528:	2f534f54 	svccs	0x00534f54
    452c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4530:	00656475 	rsbeq	r6, r5, r5, ror r4
    4534:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4538:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    453c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4540:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4544:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    4548:	4f545265 	svcmi	0x00545265
    454c:	6f702f53 	svcvs	0x00702f53
    4550:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    4554:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    4558:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    455c:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    4560:	5f33334d 	svcpl	0x0033334d
    4564:	2f5a544e 	svccs	0x005a544e
    4568:	5f6e6f6e 	svcpl	0x006e6f6e
    456c:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    4570:	63006572 	movwvs	r6, #1394	; 0x572
    4574:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    4578:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    457c:	6f646978 	svcvs	0x00646978
    4580:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    4584:	6172676f 	cmnvs	r2, pc, ror #14
    4588:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    458c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    4590:	63675c63 	cmnvs	r7, #25344	; 0x6300
    4594:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    4598:	6f6e2d6d 	svcvs	0x006e2d6d
    459c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    45a0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    45a4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    45a8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    45ac:	30312e31 	eorscc	r2, r1, r1, lsr lr
    45b0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    45b4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    45b8:	61652d65 	cmnvs	r5, r5, ror #26
    45bc:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    45c0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    45c4:	00006564 	andeq	r6, r0, r4, ror #10
    45c8:	6b736174 	blvs	1cdcba0 <__RAM_SIZE+0x1bdcba0>
    45cc:	00632e73 	rsbeq	r2, r3, r3, ror lr
    45d0:	73000001 	movwvc	r0, #1
    45d4:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    45d8:	00682e66 	rsbeq	r2, r8, r6, ror #28
    45dc:	5f000002 	svcpl	0x00000002
    45e0:	61666564 	cmnvs	r6, r4, ror #10
    45e4:	5f746c75 	svcpl	0x00746c75
    45e8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    45ec:	00682e73 	rsbeq	r2, r8, r3, ror lr
    45f0:	5f000003 	svcpl	0x00000003
    45f4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    45f8:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    45fc:	00000400 	andeq	r0, r0, r0, lsl #8
    4600:	6a6f7270 	bvs	1be0fc8 <__RAM_SIZE+0x1ae0fc8>
    4604:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    4608:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    460c:	6f700000 	svcvs	0x00700000
    4610:	616d7472 	smcvs	55106	; 0xd742
    4614:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    4618:	6f6d6d6f 	svcvs	0x006d6d6f
    461c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    4620:	46000006 	strmi	r0, [r0], -r6
    4624:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    4628:	2e534f54 	mrccs	15, 2, r4, cr3, cr4, {2}
    462c:	00050068 	andeq	r0, r5, r8, rrx
    4630:	73696c00 	cmnvc	r9, #0, 24
    4634:	00682e74 	rsbeq	r2, r8, r4, ror lr
    4638:	74000005 	strvc	r0, [r0], #-5
    463c:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    4640:	00050068 	andeq	r0, r5, r8, rrx
    4644:	726f7000 	rsbvc	r7, pc, #0
    4648:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    464c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    4650:	74000005 	strvc	r0, [r0], #-5
    4654:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4658:	00682e73 	rsbeq	r2, r8, r3, ror lr
    465c:	73000005 	movwvc	r0, #5
    4660:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    4664:	00682e67 	rsbeq	r2, r8, r7, ror #28
    4668:	3c000007 	stccc	0, cr0, [r0], {7}
    466c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4670:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    4674:	0000003e 	andeq	r0, r0, lr, lsr r0
    4678:	05050000 	streq	r0, [r5, #-0]
    467c:	00020500 	andeq	r0, r2, r0, lsl #10
    4680:	03000000 	movweq	r0, #0
    4684:	050119d3 	streq	r1, [r1, #-2515]	; 0xfffff62d
    4688:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    468c:	0905181e 	stmdbeq	r5, {r1, r2, r3, r4, fp, ip}
    4690:	060d0515 			; <UNDEFINED> instruction: 0x060d0515
    4694:	200b0501 	andcs	r0, fp, r1, lsl #10
    4698:	76031405 	strvc	r1, [r3], -r5, lsl #8
    469c:	0d05203c 	stceq	0, cr2, [r5, #-240]	; 0xffffff10
    46a0:	200d0306 	andcs	r0, sp, r6, lsl #6
    46a4:	01061105 	tsteq	r6, r5, lsl #2
    46a8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    46ac:	3c730314 	ldclcc	3, cr0, [r3], #-80	; 0xffffffb0
    46b0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    46b4:	05201103 	streq	r1, [r0, #-259]!	; 0xfffffefd
    46b8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    46bc:	206f0314 	rsbcs	r0, pc, r4, lsl r3	; <UNPREDICTABLE>
    46c0:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    46c4:	05202003 	streq	r2, [r0, #-3]!
    46c8:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    46cc:	6e054a1f 			; <UNDEFINED> instruction: 0x6e054a1f
    46d0:	02040200 	andeq	r0, r4, #0, 4
    46d4:	6f052c06 	svcvs	0x00052c06
    46d8:	02040200 	andeq	r0, r4, #0, 4
    46dc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    46e0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    46e4:	34052020 	strcc	r2, [r5], #-32	; 0xffffffe0
    46e8:	01040200 	mrseq	r0, R12_usr
    46ec:	19052006 	stmdbne	r5, {r1, r2, sp}
    46f0:	01040200 	mrseq	r0, R12_usr
    46f4:	21050106 	tstcs	r5, r6, lsl #2
    46f8:	2905202c 	stmdbcs	r5, {r2, r3, r5, sp}
    46fc:	25052026 	strcs	r2, [r5, #-38]	; 0xffffffda
    4700:	01170306 	tsteq	r7, r6, lsl #6
    4704:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4708:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    470c:	01010005 	tsteq	r1, r5
    4710:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4714:	0024b402 	eoreq	fp, r4, r2, lsl #8
    4718:	1eb60310 	mrcne	3, 5, r0, cr6, cr0, {0}
    471c:	13090501 	movwne	r0, #38145	; 0x9501
    4720:	1a0d0513 	bne	345b74 <__RAM_SIZE+0x245b74>
    4724:	01062405 	tsteq	r6, r5, lsl #8
    4728:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    472c:	0905222c 	stmdbeq	r5, {r2, r3, r5, r9, sp}
    4730:	20130306 	andscs	r0, r3, r6, lsl #6
    4734:	01061905 	tsteq	r6, r5, lsl #18
    4738:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    473c:	0524060e 	streq	r0, [r4, #-1550]!	; 0xfffff9f2
    4740:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    4744:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    4748:	10053506 	andne	r3, r5, r6, lsl #10
    474c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4750:	20090306 	andcs	r0, r9, r6, lsl #6
    4754:	01061505 	tsteq	r6, r5, lsl #10
    4758:	060d0520 	streq	r0, [sp], -r0, lsr #10
    475c:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    4760:	6d03202e 	stcvs	0, cr2, [r3, #-184]	; 0xffffff48
    4764:	06090520 	streq	r0, [r9], -r0, lsr #10
    4768:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    476c:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    4770:	0101000c 	tsteq	r1, ip
    4774:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4778:	00000002 	andeq	r0, r0, r2
    477c:	20df0300 	sbcscs	r0, pc, r0, lsl #6
    4780:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4784:	13210609 			; <UNDEFINED> instruction: 0x13210609
    4788:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    478c:	01061c05 	tsteq	r6, r5, lsl #24
    4790:	21060905 	tstcs	r6, r5, lsl #18
    4794:	060d0516 			; <UNDEFINED> instruction: 0x060d0516
    4798:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    479c:	30060d05 	andcc	r0, r6, r5, lsl #26
    47a0:	01061d05 	tsteq	r6, r5, lsl #26
    47a4:	74031105 	strvc	r1, [r3], #-261	; 0xfffffefb
    47a8:	030d0520 	movweq	r0, #54560	; 0xd520
    47ac:	2205200c 	andcs	r2, r5, #12
    47b0:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    47b4:	0e030611 	mcreq	6, 0, r0, cr3, cr1, {0}
    47b8:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    47bc:	00580501 	subseq	r0, r8, r1, lsl #10
    47c0:	06020402 	streq	r0, [r2], -r2, lsl #8
    47c4:	05205a03 	streq	r5, [r0, #-2563]!	; 0xfffff5fd
    47c8:	04020063 	streq	r0, [r2], #-99	; 0xffffff9d
    47cc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    47d0:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    47d4:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    47d8:	0402000d 	streq	r0, [r2], #-13
    47dc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    47e0:	05330611 	ldreq	r0, [r3, #-1553]!	; 0xfffff9ef
    47e4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    47e8:	14240611 	strtne	r0, [r4], #-1553	; 0xfffff9ef
    47ec:	01061805 	tsteq	r6, r5, lsl #16
    47f0:	02002d05 	andeq	r2, r0, #320	; 0x140
    47f4:	20060104 	andcs	r0, r6, r4, lsl #2
    47f8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    47fc:	01060104 	tsteq	r6, r4, lsl #2
    4800:	30061505 	andcc	r1, r6, r5, lsl #10
    4804:	01061f05 	tsteq	r6, r5, lsl #30
    4808:	3e061505 	cfsh32cc	mvfx1, mvfx6, #5
    480c:	01063305 	tsteq	r6, r5, lsl #6
    4810:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    4814:	0533061a 	ldreq	r0, [r3, #-1562]!	; 0xfffff9e6
    4818:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    481c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4820:	09030602 	stmdbeq	r3, {r1, r9, sl}
    4824:	0015052e 	andseq	r0, r5, lr, lsr #10
    4828:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    482c:	02005a05 	andeq	r5, r0, #20480	; 0x5000
    4830:	6b030204 	blvs	c5048 <__HEAP_SIZE+0xc4048>
    4834:	005b0501 	subseq	r0, fp, r1, lsl #10
    4838:	06020402 	streq	r0, [r2], -r2, lsl #8
    483c:	04020001 	streq	r0, [r2], #-1
    4840:	11052002 	tstne	r5, r2
    4844:	05206903 	streq	r6, [r0, #-2307]!	; 0xfffff6fd
    4848:	3b030625 	blcc	c60e4 <__HEAP_SIZE+0xc50e4>
    484c:	15090520 	strne	r0, [r9, #-1312]	; 0xfffffae0
    4850:	13060505 	movwne	r0, #25861	; 0x6505
    4854:	01010020 	tsteq	r1, r0, lsr #32
    4858:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    485c:	0024f402 	eoreq	pc, r4, r2, lsl #8
    4860:	31a30310 			; <UNDEFINED> instruction: 0x31a30310
    4864:	13090501 	movwne	r0, #38145	; 0x9501
    4868:	06200514 			; <UNDEFINED> instruction: 0x06200514
    486c:	220e0510 	andcs	r0, lr, #16, 10	; 0x4000000
    4870:	22060d05 	andcs	r0, r6, #320	; 0x140
    4874:	01061a05 	tsteq	r6, r5, lsl #20
    4878:	21060d05 	tstcs	r6, r5, lsl #26
    487c:	01061405 	tsteq	r6, r5, lsl #8
    4880:	1d060e05 	stcne	14, cr0, [r6, #-20]	; 0xffffffec
    4884:	01061005 	tsteq	r6, r5
    4888:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    488c:	14340609 	ldrtne	r0, [r4], #-1545	; 0xfffff9f7
    4890:	13060505 	movwne	r0, #25861	; 0x6505
    4894:	00010220 	andeq	r0, r1, r0, lsr #4
    4898:	01050101 	tsteq	r5, r1, lsl #2
    489c:	08020500 	stmdaeq	r2, {r8, sl}
    48a0:	03100025 	tsteq	r0, #37	; 0x25
    48a4:	050132b8 	streq	r3, [r1, #-696]	; 0xfffffd48
    48a8:	09051305 	stmdbeq	r5, {r0, r2, r8, r9, ip}
    48ac:	07050106 	streq	r0, [r5, -r6, lsl #2]
    48b0:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    48b4:	061e0526 	ldreq	r0, [lr], -r6, lsr #10
    48b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    48bc:	06200560 	strteq	r0, [r0], -r0, ror #10
    48c0:	4a1e0501 	bmi	785ccc <__RAM_SIZE+0x685ccc>
    48c4:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    48c8:	01010005 	tsteq	r1, r5
    48cc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    48d0:	00253002 	eoreq	r3, r5, r2
    48d4:	0e880310 	mcreq	3, 4, r0, cr8, cr0, {0}
    48d8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    48dc:	139f0605 	orrsne	r0, pc, #5242880	; 0x500000
    48e0:	15030905 	strne	r0, [r3, #-2309]	; 0xfffff6fb
    48e4:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    48e8:	20202001 	eorcs	r2, r0, r1
    48ec:	03060905 	movweq	r0, #26885	; 0x6905
    48f0:	23052e0a 	movwcs	r2, #24074	; 0x5e0a
    48f4:	2c050106 	stfcss	f0, [r5], {6}
    48f8:	3c160520 	cfldr32cc	mvfx0, [r6], {32}
    48fc:	2f060905 	svccs	0x00060905
    4900:	01065705 	tsteq	r6, r5, lsl #14
    4904:	06018105 	streq	r8, [r1], -r5, lsl #2
    4908:	180d0531 	stmdane	sp, {r0, r4, r5, r8, sl}
    490c:	01062405 	tsteq	r6, r5, lsl #8
    4910:	03060505 	movweq	r0, #25861	; 0x6505
    4914:	07052013 	smladeq	r5, r3, r0, r2
    4918:	10050106 	andne	r0, r5, r6, lsl #2
    491c:	00250522 	eoreq	r0, r5, r2, lsr #10
    4920:	06010402 	streq	r0, [r1], -r2, lsl #8
    4924:	0009052e 	andeq	r0, r9, lr, lsr #10
    4928:	06010402 	streq	r0, [r1], -r2, lsl #8
    492c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4930:	062f053e 			; <UNDEFINED> instruction: 0x062f053e
    4934:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
    4938:	4f060d05 	svcmi	0x00060d05
    493c:	01061705 	tsteq	r6, r5, lsl #14
    4940:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4944:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    4948:	05260602 	streq	r0, [r6, #-1538]!	; 0xfffff9fe
    494c:	04020052 	streq	r0, [r2], #-82	; 0xffffffae
    4950:	01730302 	cmneq	r3, r2, lsl #6
    4954:	02005305 	andeq	r5, r0, #335544320	; 0x14000000
    4958:	01060204 	tsteq	r6, r4, lsl #4
    495c:	02040200 	andeq	r0, r4, #0, 4
    4960:	0609052e 	streq	r0, [r9], -lr, lsr #10
    4964:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    4968:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    496c:	05400621 	strbeq	r0, [r0, #-1569]	; 0xfffff9df
    4970:	05051636 	streq	r1, [r5, #-1590]	; 0xfffff9ca
    4974:	06070514 			; <UNDEFINED> instruction: 0x06070514
    4978:	30140501 	andscc	r0, r4, r1, lsl #10
    497c:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    4980:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    4984:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    4988:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    498c:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    4990:	3d240605 	stccc	6, cr0, [r4, #-20]!	; 0xffffffec
    4994:	2e06234e 	cdpcs	3, 0, cr2, cr6, cr14, {2}
    4998:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    499c:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    49a0:	012f0311 			; <UNDEFINED> instruction: 0x012f0311
    49a4:	01062a05 	tsteq	r6, r5, lsl #20
    49a8:	05662805 	strbeq	r2, [r6, #-2053]!	; 0xfffff7fb
    49ac:	1d030605 	stcne	6, cr0, [r3, #-20]	; 0xffffffec
    49b0:	06070520 	streq	r0, [r7], -r0, lsr #10
    49b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    49b8:	06180540 	ldreq	r0, [r8], -r0, asr #10
    49bc:	06210501 	strteq	r0, [r1], -r1, lsl #10
    49c0:	06010532 			; <UNDEFINED> instruction: 0x06010532
    49c4:	01002e14 	tsteq	r0, r4, lsl lr
    49c8:	00050501 	andeq	r0, r5, r1, lsl #10
    49cc:	25c80205 	strbcs	r0, [r8, #517]	; 0x205
    49d0:	ed031000 	stc	0, cr1, [r3, #-0]
    49d4:	01060109 	tsteq	r6, r9, lsl #2
    49d8:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    49dc:	05142f05 	ldreq	r2, [r4, #-3845]	; 0xfffff0fb
    49e0:	0905132d 	stmdbeq	r5, {r0, r2, r3, r5, r8, r9, ip}
    49e4:	05010d03 	streq	r0, [r1, #-3331]	; 0xfffff2fd
    49e8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    49ec:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    49f0:	0d055801 	stceq	8, cr5, [r5, #-4]
    49f4:	05132706 	ldreq	r2, [r3, #-1798]	; 0xfffff8fa
    49f8:	20010616 	andcs	r0, r1, r6, lsl r6
    49fc:	0d052020 	stceq	0, cr2, [r5, #-128]	; 0xffffff80
    4a00:	1f052f06 	svcne	0x00052f06
    4a04:	11050106 	tstne	r5, r6, lsl #2
    4a08:	31052606 	tstcc	r5, r6, lsl #12
    4a0c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4a10:	16054006 	strne	r4, [r5], -r6
    4a14:	c8740306 	ldmdagt	r4!, {r1, r2, r8, r9}^
    4a18:	14030505 	strne	r0, [r3], #-1285	; 0xfffffafb
    4a1c:	38160520 	ldmdacc	r6, {r5, r8, sl}
    4a20:	09052020 	stmdbeq	r5, {r5, sp}
    4a24:	10052306 	andne	r2, r5, r6, lsl #6
    4a28:	01020106 	tsteq	r2, r6, lsl #2
    4a2c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4a30:	02050001 	andeq	r0, r5, #1
    4a34:	1000261c 	andne	r2, r0, ip, lsl r6
    4a38:	012efb03 	msreq	ELR_hyp, r3
    4a3c:	14210505 	strtne	r0, [r1], #-1285	; 0xfffffafb
    4a40:	01061505 	tsteq	r6, r5, lsl #10
    4a44:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    4a48:	04020009 	streq	r0, [r2], #-9
    4a4c:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    4a50:	0402005e 	streq	r0, [r2], #-94	; 0xffffffa2
    4a54:	68057203 	stmdavs	r5, {r0, r1, r9, ip, sp, lr}
    4a58:	03040200 	movweq	r0, #16896	; 0x4200
    4a5c:	2b050106 	blcs	144e7c <__RAM_SIZE+0x44e7c>
    4a60:	01040200 	mrseq	r0, R12_usr
    4a64:	05052006 	streq	r2, [r5, #-6]
    4a68:	01040200 	mrseq	r0, R12_usr
    4a6c:	33060106 	movwcc	r0, #24838	; 0x6106
    4a70:	0620064b 	strteq	r0, [r0], -fp, asr #12
    4a74:	4009053d 	andmi	r0, r9, sp, lsr r5
    4a78:	42050542 	andmi	r0, r5, #276824064	; 0x10800000
    4a7c:	01061705 	tsteq	r6, r5, lsl #14
    4a80:	2f060505 	svccs	0x00060505
    4a84:	01061f05 	tsteq	r6, r5, lsl #30
    4a88:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    4a8c:	01010012 	tsteq	r1, r2, lsl r0
    4a90:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4a94:	00268402 	eoreq	r8, r6, r2, lsl #8
    4a98:	0fe30310 	svceq	0x00e30310
    4a9c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4aa0:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    4aa4:	2605300d 	strcs	r3, [r5], -sp
    4aa8:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    4aac:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    4ab0:	061e0522 	ldreq	r0, [lr], -r2, lsr #10
    4ab4:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    4ab8:	03061105 	movweq	r1, #24837	; 0x6105
    4abc:	27052017 	smladcs	r5, r7, r0, r2
    4ac0:	13050106 	movwne	r0, #20742	; 0x5106
    4ac4:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    4ac8:	06250522 	strteq	r0, [r5], -r2, lsr #10
    4acc:	3c3d0501 	cfldr32cc	mvfx0, [sp], #-4
    4ad0:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    4ad4:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    4ad8:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    4adc:	69030611 	stmdbvs	r3, {r0, r4, r9, sl}
    4ae0:	061e053c 			; <UNDEFINED> instruction: 0x061e053c
    4ae4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4ae8:	062c0530 			; <UNDEFINED> instruction: 0x062c0530
    4aec:	20130501 	andscs	r0, r3, r1, lsl #10
    4af0:	03062d05 	movweq	r2, #27909	; 0x6d05
    4af4:	0d052e1e 	stceq	14, cr2, [r5, #-120]	; 0xffffff88
    4af8:	06190516 			; <UNDEFINED> instruction: 0x06190516
    4afc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4b00:	0627054f 	strteq	r0, [r7], -pc, asr #10
    4b04:	06290501 	strteq	r0, [r9], -r1, lsl #10
    4b08:	140d0523 	strne	r0, [sp], #-1315	; 0xfffffadd
    4b0c:	00010101 	andeq	r0, r1, r1, lsl #2
    4b10:	58010402 	stmdapl	r1, {r1, sl}
    4b14:	03040200 	movweq	r0, #16896	; 0x4200
    4b18:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b1c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4b20:	00010304 	andeq	r0, r1, r4, lsl #6
    4b24:	66030402 	strvs	r0, [r3], -r2, lsl #8
    4b28:	03040200 	movweq	r0, #16896	; 0x4200
    4b2c:	04020001 	streq	r0, [r2], #-1
    4b30:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4b34:	00200304 	eoreq	r0, r0, r4, lsl #6
    4b38:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4b3c:	03040200 	movweq	r0, #16896	; 0x4200
    4b40:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b44:	02002003 	andeq	r2, r0, #3
    4b48:	20060304 	andcs	r0, r6, r4, lsl #6
    4b4c:	03040200 	movweq	r0, #16896	; 0x4200
    4b50:	02005806 	andeq	r5, r0, #393216	; 0x60000
    4b54:	00740304 	rsbseq	r0, r4, r4, lsl #6
    4b58:	01030402 	tsteq	r3, r2, lsl #8
    4b5c:	03040200 	movweq	r0, #16896	; 0x4200
    4b60:	04020001 	streq	r0, [r2], #-1
    4b64:	09051403 	stmdbeq	r5, {r0, r1, sl, ip}
    4b68:	03040200 	movweq	r0, #16896	; 0x4200
    4b6c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4b70:	1f053003 	svcne	0x00053003
    4b74:	03040200 	movweq	r0, #16896	; 0x4200
    4b78:	0b050106 	bleq	144f98 <__RAM_SIZE+0x44f98>
    4b7c:	03040200 	movweq	r0, #16896	; 0x4200
    4b80:	060d052e 	streq	r0, [sp], -lr, lsr #10
    4b84:	05050124 	streq	r0, [r5, #-292]	; 0xfffffedc
    4b88:	15056c06 	strne	r6, [r5, #-3078]	; 0xfffff3fa
    4b8c:	20490306 	subcs	r0, r9, r6, lsl #6
    4b90:	02000d05 	andeq	r0, r0, #320	; 0x140
    4b94:	31030104 	tstcc	r3, r4, lsl #2
    4b98:	0025053c 	eoreq	r0, r5, ip, lsr r5
    4b9c:	32010402 	andcc	r0, r1, #33554432	; 0x2000000
    4ba0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4ba4:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
    4ba8:	01000e02 	tsteq	r0, r2, lsl #28
    4bac:	00050501 	andeq	r0, r5, r1, lsl #10
    4bb0:	27440205 	strbcs	r0, [r4, -r5, lsl #4]
    4bb4:	d9031000 	stmdble	r3, {ip}
    4bb8:	0106010c 	tsteq	r6, ip, lsl #2
    4bbc:	75060905 	strvc	r0, [r6, #-2309]	; 0xfffff6fb
    4bc0:	25030d05 	strcs	r0, [r3, #-3333]	; 0xfffff2fb
    4bc4:	17051801 	strne	r1, [r5, -r1, lsl #16]
    4bc8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4bcc:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    4bd0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    4bd4:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    4bd8:	20010628 	andcs	r0, r1, r8, lsr #12
    4bdc:	30061105 	andcc	r1, r6, r5, lsl #2
    4be0:	01061305 	tsteq	r6, r5, lsl #6
    4be4:	30061505 	andcc	r1, r6, r5, lsl #10
    4be8:	01061e05 	tsteq	r6, r5, lsl #28
    4bec:	4d061505 	cfstr32mi	mvfx1, [r6, #-20]	; 0xffffffec
    4bf0:	01062705 	tsteq	r6, r5, lsl #14
    4bf4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    4bf8:	05011003 	streq	r1, [r1, #-3]
    4bfc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    4c00:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    4c04:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    4c08:	0540060d 	strbeq	r0, [r0, #-1549]	; 0xfffff9f3
    4c0c:	05be0605 	ldreq	r0, [lr, #1541]!	; 0x605
    4c10:	68030615 	stmdavs	r3, {r0, r2, r4, r9, sl}
    4c14:	0520064a 	streq	r0, [r0, #-1610]!	; 0xfffff9b6
    4c18:	0905411a 	stmdbeq	r5, {r1, r3, r4, r8, lr}
    4c1c:	20120306 	andscs	r0, r2, r6, lsl #6
    4c20:	01061005 	tsteq	r6, r5
    4c24:	01000102 	tsteq	r0, r2, lsl #2
    4c28:	00050501 	andeq	r0, r5, r1, lsl #10
    4c2c:	27a60205 	strcs	r0, [r6, r5, lsl #4]!
    4c30:	83031000 	movwhi	r1, #12288	; 0x3000
    4c34:	01060132 	tsteq	r6, r2, lsr r1
    4c38:	32060905 	andcc	r0, r6, #81920	; 0x14000
    4c3c:	15030d05 	strne	r0, [r3, #-3333]	; 0xfffff2fb
    4c40:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    4c44:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    4c48:	27061205 	strcs	r1, [r6, -r5, lsl #4]
    4c4c:	01061405 	tsteq	r6, r5, lsl #8
    4c50:	0f030505 	svceq	0x00030505
    4c54:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4c58:	06206e03 	strteq	r6, [r0], -r3, lsl #28
    4c5c:	502f0620 	eorpl	r0, pc, r0, lsr #12
    4c60:	05346605 	ldreq	r6, [r4, #-1541]!	; 0xfffff9fb
    4c64:	05051329 	streq	r1, [r5, #-809]	; 0xfffffcd7
    4c68:	01021606 	tsteq	r2, r6, lsl #12
    4c6c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4c70:	02050001 	andeq	r0, r5, #1
    4c74:	100027cc 	andne	r2, r0, ip, asr #15
    4c78:	012f9b03 			; <UNDEFINED> instruction: 0x012f9b03
    4c7c:	16170905 	ldrne	r0, [r7], -r5, lsl #18
    4c80:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    4c84:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    4c88:	01052e0e 	tsteq	r5, lr, lsl #28
    4c8c:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    4c90:	0d030611 	stceq	6, cr0, [r3, #-68]	; 0xffffffbc
    4c94:	34190520 	ldrcc	r0, [r9], #-1312	; 0xfffffae0
    4c98:	01062105 	tsteq	r6, r5, lsl #2
    4c9c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    4ca0:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    4ca4:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    4ca8:	4b3d0619 	blmi	f46514 <__RAM_SIZE+0xe46514>
    4cac:	304d1105 	subcc	r1, sp, r5, lsl #2
    4cb0:	6e030e05 	cdpvs	14, 0, cr0, cr3, cr5, {0}
    4cb4:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    4cb8:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    4cbc:	3f030105 	svccc	0x00030105
    4cc0:	0802202e 	stmdaeq	r2, {r1, r2, r3, r5, sp}
    4cc4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4cc8:	02050001 	andeq	r0, r5, #1
    4ccc:	10002818 	andne	r2, r0, r8, lsl r8
    4cd0:	00c1e003 	sbceq	lr, r1, r3
    4cd4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4cd8:	134b0605 	movtne	r0, #46597	; 0xb605
    4cdc:	01061605 	tsteq	r6, r5, lsl #12
    4ce0:	2f060505 	svccs	0x00060505
    4ce4:	01061405 	tsteq	r6, r5, lsl #8
    4ce8:	2f060505 	svccs	0x00060505
    4cec:	01061405 	tsteq	r6, r5, lsl #8
    4cf0:	43060905 	movwmi	r0, #26885	; 0x6905
    4cf4:	01061505 	tsteq	r6, r5, lsl #10
    4cf8:	202e2605 	eorcs	r2, lr, r5, lsl #12
    4cfc:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    4d00:	01062605 	tsteq	r6, r5, lsl #12
    4d04:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    4d08:	05440621 	strbeq	r0, [r4, #-1569]	; 0xfffff9df
    4d0c:	0b051709 	bleq	14a938 <__RAM_SIZE+0x4a938>
    4d10:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4d14:	3c0c0306 	stccc	3, cr0, [ip], {6}
    4d18:	01061905 	tsteq	r6, r5, lsl #18
    4d1c:	23060d05 	movwcs	r0, #27909	; 0x6d05
    4d20:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    4d24:	063b0501 	ldrteq	r0, [fp], -r1, lsl #10
    4d28:	13110532 	tstne	r1, #209715200	; 0xc800000
    4d2c:	01064405 	tsteq	r6, r5, lsl #8
    4d30:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
    4d34:	4a3e0301 	bmi	f85940 <__RAM_SIZE+0xe85940>
    4d38:	02002f05 	andeq	r2, r0, #5, 30
    4d3c:	ac030104 	stfges	f0, [r3], {4}
    4d40:	0d052e7f 	stceq	14, cr2, [r5, #-508]	; 0xfffffe04
    4d44:	2e013306 	cdpcs	3, 0, cr3, cr1, cr6, {0}
    4d48:	063c0101 	ldrteq	r0, [ip], -r1, lsl #2
    4d4c:	3c20062e 	stccc	6, cr0, [r0], #-184	; 0xffffff48
    4d50:	053c2e3c 	ldreq	r2, [ip, #-3644]!	; 0xfffff1c4
    4d54:	20170332 	andscs	r0, r7, r2, lsr r3
    4d58:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    4d5c:	0501063c 	streq	r0, [r1, #-1596]	; 0xfffff9c4
    4d60:	4f062e11 	svcmi	0x00062e11
    4d64:	01062105 	tsteq	r6, r5, lsl #2
    4d68:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    4d6c:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    4d70:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    4d74:	0532062d 	ldreq	r0, [r2, #-1581]!	; 0xfffff9d3
    4d78:	2c030601 	stccs	6, cr0, [r3], {1}
    4d7c:	000d0201 	andeq	r0, sp, r1, lsl #4
    4d80:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4d84:	c0020500 	andgt	r0, r2, r0, lsl #10
    4d88:	03100028 	tsteq	r0, #40	; 0x28
    4d8c:	06010aa3 	streq	r0, [r1], -r3, lsr #21
    4d90:	06090501 	streq	r0, [r9], -r1, lsl #10
    4d94:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    4d98:	06090501 	streq	r0, [r9], -r1, lsl #10
    4d9c:	0181052f 	orreq	r0, r1, pc, lsr #10
    4da0:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4da4:	01061405 	tsteq	r6, r5, lsl #8
    4da8:	a0060905 	andge	r0, r6, r5, lsl #18
    4dac:	01060b05 	tsteq	r6, r5, lsl #22
    4db0:	03060d05 	movweq	r0, #27909	; 0x6d05
    4db4:	25052009 	strcs	r2, [r5, #-9]
    4db8:	15310532 	ldrne	r0, [r1, #-1330]!	; 0xffffface
    4dbc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4dc0:	3c130605 	ldccc	6, cr0, [r3], {5}
    4dc4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4dc8:	02050005 	andeq	r0, r5, #5
    4dcc:	100028e8 	andne	r2, r0, r8, ror #17
    4dd0:	010dbb03 	tsteq	sp, r3, lsl #22
    4dd4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4dd8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    4ddc:	0905146c 	stmdbeq	r5, {r2, r3, r5, r6, sl, ip}
    4de0:	06140514 			; <UNDEFINED> instruction: 0x06140514
    4de4:	06090501 	streq	r0, [r9], -r1, lsl #10
    4de8:	060b0568 	streq	r0, [fp], -r8, ror #10
    4dec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4df0:	2f200903 	svccs	0x00200903
    4df4:	01061505 	tsteq	r6, r5, lsl #10
    4df8:	0a030505 	beq	c6214 <__HEAP_SIZE+0xc5214>
    4dfc:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    4e00:	2b052e7a 	blcs	1507f0 <__RAM_SIZE+0x507f0>
    4e04:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    4e08:	06100514 			; <UNDEFINED> instruction: 0x06100514
    4e0c:	00010201 	andeq	r0, r1, r1, lsl #4
    4e10:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4e14:	00020500 	andeq	r0, r2, r0, lsl #10
    4e18:	03000000 	movweq	r0, #0
    4e1c:	0601118f 	streq	r1, [r1], -pc, lsl #3
    4e20:	06090501 	streq	r0, [r9], -r1, lsl #10
    4e24:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    4e28:	09051430 	stmdbeq	r5, {r4, r5, sl, ip}
    4e2c:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    4e30:	01061505 	tsteq	r6, r5, lsl #10
    4e34:	02000d05 	andeq	r0, r0, #320	; 0x140
    4e38:	23060404 	movwcs	r0, #25604	; 0x6404
    4e3c:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4e40:	01060404 	tsteq	r6, r4, lsl #8
    4e44:	02002905 	andeq	r2, r0, #81920	; 0x14000
    4e48:	50060404 	andpl	r0, r6, r4, lsl #8
    4e4c:	02000d05 	andeq	r0, r0, #320	; 0x140
    4e50:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    4e54:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4e58:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4e5c:	0402000f 	streq	r0, [r2], #-15
    4e60:	11052004 	tstne	r5, r4
    4e64:	1a052206 	bne	14d684 <__RAM_SIZE+0x4d684>
    4e68:	29050106 	stmdbcs	r5, {r1, r2, r8}
    4e6c:	0d054e06 	stceq	14, cr4, [r5, #-24]	; 0xffffffe8
    4e70:	06190519 			; <UNDEFINED> instruction: 0x06190519
    4e74:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4e78:	0628054f 	strteq	r0, [r8], -pc, asr #10
    4e7c:	000d0501 	andeq	r0, sp, r1, lsl #10
    4e80:	06040402 	streq	r0, [r4], -r2, lsl #8
    4e84:	0025055d 	eoreq	r0, r5, sp, asr r5
    4e88:	06040402 	streq	r0, [r4], -r2, lsl #8
    4e8c:	000f0501 	andeq	r0, pc, r1, lsl #10
    4e90:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    4e94:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    4e98:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    4e9c:	3b030611 	blcc	c66e8 <__HEAP_SIZE+0xc56e8>
    4ea0:	05200620 	streq	r0, [r0, #-1568]!	; 0xfffff9e0
    4ea4:	053d062a 	ldreq	r0, [sp, #-1578]!	; 0xfffff9d6
    4ea8:	09051611 	stmdbeq	r5, {r0, r4, r9, sl, ip}
    4eac:	0d053331 	stceq	3, cr3, [r5, #-196]	; 0xffffff3c
    4eb0:	23054314 	movwcs	r4, #21268	; 0x5314
    4eb4:	0f050106 	svceq	0x00050106
    4eb8:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4ebc:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    4ec0:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    4ec4:	0e030505 	cfsh32eq	mvfx0, mvfx3, #5
    4ec8:	0015052e 	andseq	r0, r5, lr, lsr #10
    4ecc:	03010402 	movweq	r0, #5122	; 0x1402
    4ed0:	00207efb 	strdeq	r7, [r0], -fp	; <UNPREDICTABLE>
    4ed4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4ed8:	1f032805 	svcne	0x00032805
    4edc:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4ee0:	4f2e0d03 	svcmi	0x002e0d03
    4ee4:	054e2a05 	strbeq	r2, [lr, #-2565]	; 0xfffff5fb
    4ee8:	50051511 	andpl	r1, r5, r1, lsl r5
    4eec:	0309051a 	movweq	r0, #38170	; 0x951a
    4ef0:	05330127 	ldreq	r0, [r3, #-295]!	; 0xfffffed9
    4ef4:	200d033e 	andcs	r0, sp, lr, lsr r3
    4ef8:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    4efc:	2205322d 	andcs	r3, r5, #-805306366	; 0xd0000002
    4f00:	06050518 			; <UNDEFINED> instruction: 0x06050518
    4f04:	000d0213 	andeq	r0, sp, r3, lsl r2
    4f08:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4f0c:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    4f10:	03100029 	tsteq	r0, #41	; 0x29
    4f14:	050113b5 	streq	r1, [r1, #-949]	; 0xfffffc4b
    4f18:	13131309 	tstne	r3, #603979776	; 0x24000000
    4f1c:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    4f20:	1e05142a 	cdpne	4, 0, cr1, cr5, cr10, {1}
    4f24:	150d0514 	strne	r0, [sp, #-1300]	; 0xfffffaec
    4f28:	01061705 	tsteq	r6, r5, lsl #14
    4f2c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4f30:	2e730305 	cdpcs	3, 7, cr0, cr3, cr5, {0}
    4f34:	03060d05 	movweq	r0, #27909	; 0x6d05
    4f38:	11053c15 	tstne	r5, r5, lsl ip
    4f3c:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    4f40:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4f44:	061d0521 	ldreq	r0, [sp], -r1, lsr #10
    4f48:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4f4c:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    4f50:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4f54:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    4f58:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4f5c:	0f05303e 	svceq	0x0005303e
    4f60:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    4f64:	14054306 	strne	r4, [r5], #-774	; 0xfffffcfa
    4f68:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    4f6c:	01040200 	mrseq	r0, R12_usr
    4f70:	0616052e 	ldreq	r0, [r6], -lr, lsr #10
    4f74:	06180536 			; <UNDEFINED> instruction: 0x06180536
    4f78:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    4f7c:	053c2903 	ldreq	r2, [ip, #-2307]!	; 0xfffff6fd
    4f80:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4f84:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    4f88:	1d053c01 	stcne	12, cr3, [r5, #-4]
    4f8c:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    4f90:	4d030615 	stcmi	6, cr0, [r3, #-84]	; 0xffffffac
    4f94:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4f98:	20170501 	andscs	r0, r7, r1, lsl #10
    4f9c:	1e032105 	adfnes	f2, f3, f5
    4fa0:	71030620 	tstvc	r3, r0, lsr #12
    4fa4:	0639052e 	ldrteq	r0, [r9], -lr, lsr #10
    4fa8:	4a230501 	bmi	8c63b4 <__RAM_SIZE+0x7c63b4>
    4fac:	02007205 	andeq	r7, r0, #1342177280	; 0x50000000
    4fb0:	2c060204 	sfmcs	f0, 4, [r6], {4}
    4fb4:	02007305 	andeq	r7, r0, #335544320	; 0x14000000
    4fb8:	01060204 	tsteq	r6, r4, lsl #4
    4fbc:	02040200 	andeq	r0, r4, #0, 4
    4fc0:	20240520 	eorcs	r0, r4, r0, lsr #10
    4fc4:	02003805 	andeq	r3, r0, #327680	; 0x50000
    4fc8:	20060104 	andcs	r0, r6, r4, lsl #2
    4fcc:	02001d05 	andeq	r1, r0, #320	; 0x140
    4fd0:	01060104 	tsteq	r6, r4, lsl #2
    4fd4:	2e2c2505 	cfsh64cs	mvdx2, mvdx12, #5
    4fd8:	1e031d05 	cdpne	13, 0, cr1, cr3, cr5, {0}
    4fdc:	03190501 	tsteq	r9, #4194304	; 0x400000
    4fe0:	052e7fb5 	streq	r7, [lr, #-4021]!	; 0xfffff04b
    4fe4:	e903062d 	stmdb	r3, {r0, r2, r3, r5, r9, sl}
    4fe8:	09052000 	stmdbeq	r5, {sp}
    4fec:	06050514 			; <UNDEFINED> instruction: 0x06050514
    4ff0:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    4ff4:	05207fa7 	streq	r7, [r0, #-4007]!	; 0xfffff059
    4ff8:	d603062d 	strle	r0, [r3], -sp, lsr #12
    4ffc:	09052000 	stmdbeq	r5, {sp}
    5000:	06050514 			; <UNDEFINED> instruction: 0x06050514
    5004:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    5008:	052e7fad 	streq	r7, [lr, #-4013]!	; 0xfffff053
    500c:	4a1a032d 	bmi	685cc8 <__RAM_SIZE+0x585cc8>
    5010:	031d052e 	tsteq	sp, #192937984	; 0xb800000
    5014:	0e020118 	mcreq	1, 0, r0, cr2, cr8, {0}
    5018:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    501c:	02050005 	andeq	r0, r5, #5
    5020:	00000000 	andeq	r0, r0, r0
    5024:	0114b903 	tsteq	r4, r3, lsl #18
    5028:	09050106 	stmdbeq	r5, {r1, r2, r8}
    502c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    5030:	0905142e 	stmdbeq	r5, {r1, r2, r3, r5, sl, ip}
    5034:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    5038:	01061505 	tsteq	r6, r5, lsl #10
    503c:	02000d05 	andeq	r0, r0, #320	; 0x140
    5040:	21060404 	tstcs	r6, r4, lsl #8
    5044:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    5048:	01060404 	tsteq	r6, r4, lsl #8
    504c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5050:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    5054:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    5058:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    505c:	04020009 	streq	r0, [r2], #-9
    5060:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    5064:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5068:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    506c:	01040200 	mrseq	r0, R12_usr
    5070:	002e7803 	eoreq	r7, lr, r3, lsl #16
    5074:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5078:	01000402 	tsteq	r0, r2, lsl #8
    507c:	00050501 	andeq	r0, r5, r1, lsl #10
    5080:	00000205 	andeq	r0, r0, r5, lsl #4
    5084:	d3030000 	movwle	r0, #12288	; 0x3000
    5088:	01060114 	tsteq	r6, r4, lsl r1
    508c:	2f060905 	svccs	0x00060905
    5090:	35051313 	strcc	r1, [r5, #-787]	; 0xfffffced
    5094:	03330514 	teqeq	r3, #20, 10	; 0x5000000
    5098:	09050112 	stmdbeq	r5, {r1, r4, r8}
    509c:	06320517 			; <UNDEFINED> instruction: 0x06320517
    50a0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    50a4:	06150532 			; <UNDEFINED> instruction: 0x06150532
    50a8:	000d0501 	andeq	r0, sp, r1, lsl #10
    50ac:	06040402 	streq	r0, [r4], -r2, lsl #8
    50b0:	00160521 	andseq	r0, r6, r1, lsr #10
    50b4:	06040402 	streq	r0, [r4], -r2, lsl #8
    50b8:	00090501 	andeq	r0, r9, r1, lsl #10
    50bc:	06040402 	streq	r0, [r4], -r2, lsl #8
    50c0:	00390522 	eorseq	r0, r9, r2, lsr #10
    50c4:	30040402 	andcc	r0, r4, r2, lsl #8
    50c8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    50cc:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    50d0:	04020005 	streq	r0, [r2], #-5
    50d4:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    50d8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    50dc:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    50e0:	01040200 	mrseq	r0, R12_usr
    50e4:	0004022e 	andeq	r0, r4, lr, lsr #4
    50e8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    50ec:	00020500 	andeq	r0, r2, r0, lsl #10
    50f0:	03000000 	movweq	r0, #0
    50f4:	06011583 	streq	r1, [r1], -r3, lsl #11
    50f8:	06090501 	streq	r0, [r9], -r1, lsl #10
    50fc:	3205132f 	andcc	r1, r5, #-1140850688	; 0xbc000000
    5100:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    5104:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    5108:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    510c:	0402000d 	streq	r0, [r2], #-13
    5110:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    5114:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    5118:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    511c:	04020009 	streq	r0, [r2], #-9
    5120:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    5124:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    5128:	09053004 	stmdbeq	r5, {r2, ip, sp}
    512c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5130:	00050514 	andeq	r0, r5, r4, lsl r5
    5134:	06040402 	streq	r0, [r4], -r2, lsl #8
    5138:	00150513 	andseq	r0, r5, r3, lsl r5
    513c:	03010402 	movweq	r0, #5122	; 0x1402
    5140:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    5144:	022e0104 	eoreq	r0, lr, #4, 2
    5148:	01010004 	tsteq	r1, r4
    514c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5150:	00000002 	andeq	r0, r0, r2
    5154:	159d0300 	ldrne	r0, [sp, #768]	; 0x300
    5158:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    515c:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    5160:	14390513 	ldrtne	r0, [r9], #-1299	; 0xfffffaed
    5164:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    5168:	17090501 	strne	r0, [r9, -r1, lsl #10]
    516c:	01063205 	tsteq	r6, r5, lsl #4
    5170:	32060d05 	andcc	r0, r6, #320	; 0x140
    5174:	01061505 	tsteq	r6, r5, lsl #10
    5178:	02000d05 	andeq	r0, r0, #320	; 0x140
    517c:	21060404 	tstcs	r6, r4, lsl #8
    5180:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    5184:	01060404 	tsteq	r6, r4, lsl #8
    5188:	02000905 	andeq	r0, r0, #81920	; 0x14000
    518c:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    5190:	02003d05 	andeq	r3, r0, #320	; 0x140
    5194:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    5198:	04020009 	streq	r0, [r2], #-9
    519c:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    51a0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    51a4:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    51a8:	01040200 	mrseq	r0, R12_usr
    51ac:	002e7803 	eoreq	r7, lr, r3, lsl #16
    51b0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    51b4:	01000402 	tsteq	r0, r2, lsl #8
    51b8:	00050501 	andeq	r0, r5, r1, lsl #10
    51bc:	00000205 	andeq	r0, r0, r5, lsl #4
    51c0:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    51c4:	01060115 	tsteq	r6, r5, lsl r1
    51c8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    51cc:	3c051313 	stccc	3, cr1, [r5], {19}
    51d0:	143d0518 	ldrtne	r0, [sp], #-1304	; 0xfffffae8
    51d4:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    51d8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    51dc:	2505301b 	strcs	r3, [r5, #-27]	; 0xffffffe5
    51e0:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    51e4:	320d0515 	andcc	r0, sp, #88080384	; 0x5400000
    51e8:	01061505 	tsteq	r6, r5, lsl #10
    51ec:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    51f0:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    51f4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    51f8:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    51fc:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    5200:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5204:	0402000d 	streq	r0, [r2], #-13
    5208:	05280604 	streq	r0, [r8, #-1540]!	; 0xfffff9fc
    520c:	0402000f 	streq	r0, [r2], #-15
    5210:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5214:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    5218:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    521c:	05240619 	streq	r0, [r4, #-1561]!	; 0xfffff9e7
    5220:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    5224:	1d052e1b 	stcne	14, cr2, [r5, #-108]	; 0xffffff94
    5228:	3d053306 	stccc	3, cr3, [r5, #-24]	; 0xffffffe8
    522c:	1f050106 	svcne	0x00050106
    5230:	0314053c 	tsteq	r4, #60, 10	; 0xf000000
    5234:	15052e4d 	strne	r2, [r5, #-3661]	; 0xfffff1b3
    5238:	01040200 	mrseq	r0, R12_usr
    523c:	002e1803 	eoreq	r1, lr, r3, lsl #16
    5240:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5244:	03061605 	movweq	r1, #26117	; 0x6605
    5248:	37052033 	smladxcc	r5, r3, r0, r2
    524c:	18050106 	stmdane	r5, {r1, r2, r8}
    5250:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    5254:	052e7fb5 	streq	r7, [lr, #-4021]!	; 0xfffff04b
    5258:	dc030611 	stcle	6, cr0, [r3], {17}
    525c:	05172000 	ldreq	r2, [r7, #-0]
    5260:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    5264:	05270615 	streq	r0, [r7, #-1557]!	; 0xfffff9eb
    5268:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    526c:	04020048 	streq	r0, [r2], #-72	; 0xffffffb8
    5270:	19052e01 	stmdbne	r5, {r0, r9, sl, fp, sp}
    5274:	2b053006 	blcs	151294 <__RAM_SIZE+0x51294>
    5278:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    527c:	2b052806 	blcs	14f29c <__RAM_SIZE+0x4f29c>
    5280:	11050106 	tstne	r5, r6, lsl #2
    5284:	200a0306 	andcs	r0, sl, r6, lsl #6
    5288:	01061705 	tsteq	r6, r5, lsl #14
    528c:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    5290:	06300615 			; <UNDEFINED> instruction: 0x06300615
    5294:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    5298:	19110524 	ldmdbne	r1, {r2, r5, r8, sl}
    529c:	01061505 	tsteq	r6, r5, lsl #10
    52a0:	3c13053c 	cfldr32cc	mvfx0, [r3], {60}	; 0x3c
    52a4:	03063105 	movweq	r3, #24837	; 0x6105
    52a8:	11052e17 	tstne	r5, r7, lsl lr
    52ac:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    52b0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    52b4:	12030631 	andne	r0, r3, #51380224	; 0x3100000
    52b8:	18110520 	ldmdane	r1, {r5, r8, sl}
    52bc:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    52c0:	05053027 	streq	r3, [r5, #-39]	; 0xffffffd9
    52c4:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
    52c8:	207eb603 	rsbscs	fp, lr, r3, lsl #12
    52cc:	35033005 	strcc	r3, [r3, #-5]
    52d0:	0328052e 			; <UNDEFINED> instruction: 0x0328052e
    52d4:	15052e1f 	strne	r2, [r5, #-3615]	; 0xfffff1e1
    52d8:	2e3a0306 	cdpcs	3, 3, cr0, cr10, cr6, {0}
    52dc:	01061905 	tsteq	r6, r5, lsl #18
    52e0:	03063105 	movweq	r3, #24837	; 0x6105
    52e4:	15054a09 	strne	r4, [r5, #-2569]	; 0xfffff5f7
    52e8:	01010115 	tsteq	r1, r5, lsl r1
    52ec:	01040200 	mrseq	r0, R12_usr
    52f0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    52f4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    52f8:	00010304 	andeq	r0, r1, r4, lsl #6
    52fc:	01030402 	tsteq	r3, r2, lsl #8
    5300:	03040200 	movweq	r0, #16896	; 0x4200
    5304:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5308:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    530c:	00010304 	andeq	r0, r1, r4, lsl #6
    5310:	20030402 	andcs	r0, r3, r2, lsl #8
    5314:	03040200 	movweq	r0, #16896	; 0x4200
    5318:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    531c:	02002003 	andeq	r2, r0, #3
    5320:	00200304 	eoreq	r0, r0, r4, lsl #6
    5324:	06030402 	streq	r0, [r3], -r2, lsl #8
    5328:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    532c:	00580603 	subseq	r0, r8, r3, lsl #12
    5330:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5334:	03040200 	movweq	r0, #16896	; 0x4200
    5338:	04020001 	streq	r0, [r2], #-1
    533c:	15030103 	strne	r0, [r3, #-259]	; 0xfffffefd
    5340:	2e010120 	adfcssp	f0, f1, f0
    5344:	01000702 	tsteq	r0, r2, lsl #14
    5348:	00050501 	andeq	r0, r5, r1, lsl #10
    534c:	00000205 	andeq	r0, r0, r5, lsl #4
    5350:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    5354:	0106011a 	tsteq	r6, sl, lsl r1
    5358:	21060905 	tstcs	r6, r5, lsl #18
    535c:	05143005 	ldreq	r3, [r4, #-5]
    5360:	0d051526 	cfstr32eq	mvfx1, [r5, #-152]	; 0xffffff68
    5364:	06190518 			; <UNDEFINED> instruction: 0x06190518
    5368:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    536c:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    5370:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5374:	0b03060d 	bleq	c6bb0 <__HEAP_SIZE+0xc5bb0>
    5378:	30110520 	andscc	r0, r1, r0, lsr #10
    537c:	01061505 	tsteq	r6, r5, lsl #10
    5380:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    5384:	1003062d 	andne	r0, r3, sp, lsr #12
    5388:	150d0520 	strne	r0, [sp, #-1312]	; 0xfffffae0
    538c:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    5390:	05051522 	streq	r1, [r5, #-1314]	; 0xfffffade
    5394:	2e051306 	cdpcs	3, 0, cr1, cr5, cr6, {0}
    5398:	20670306 	rsbcs	r0, r7, r6, lsl #6
    539c:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    53a0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    53a4:	014b0615 	cmpeq	fp, r5, lsl r6
    53a8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    53ac:	00580104 	subseq	r0, r8, r4, lsl #2
    53b0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    53b4:	03040200 	movweq	r0, #16896	; 0x4200
    53b8:	04020001 	streq	r0, [r2], #-1
    53bc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    53c0:	00660304 	rsbeq	r0, r6, r4, lsl #6
    53c4:	01030402 	tsteq	r3, r2, lsl #8
    53c8:	03040200 	movweq	r0, #16896	; 0x4200
    53cc:	04020001 	streq	r0, [r2], #-1
    53d0:	02002003 	andeq	r2, r0, #3
    53d4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    53d8:	20030402 	andcs	r0, r3, r2, lsl #8
    53dc:	03040200 	movweq	r0, #16896	; 0x4200
    53e0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    53e4:	00200603 	eoreq	r0, r0, r3, lsl #12
    53e8:	06030402 	streq	r0, [r3], -r2, lsl #8
    53ec:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    53f0:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    53f4:	00010304 	andeq	r0, r1, r4, lsl #6
    53f8:	01030402 	tsteq	r3, r2, lsl #8
    53fc:	03040200 	movweq	r0, #16896	; 0x4200
    5400:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    5404:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5408:	02660104 	rsbeq	r0, r6, #4, 2
    540c:	01010009 	tsteq	r1, r9
    5410:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5414:	00000002 	andeq	r0, r0, r2
    5418:	1ad60300 	bne	ff586020 <__StackTop+0xc7486020>
    541c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5420:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    5424:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    5428:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    542c:	01120333 	tsteq	r2, r3, lsr r3
    5430:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    5434:	2e010622 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx2
    5438:	22060d05 	andcs	r0, r6, #320	; 0x140
    543c:	01061105 	tsteq	r6, r5, lsl #2
    5440:	2e0f0520 	cfsh32cs	mvfx0, mvfx15, #16
    5444:	3e063305 	cdpcc	3, 0, cr3, cr6, cr5, {0}
    5448:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    544c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    5450:	19052e13 	stmdbne	r5, {r0, r1, r4, r9, sl, fp, sp}
    5454:	22053406 	andcs	r3, r5, #100663296	; 0x6000000
    5458:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    545c:	3c1b0520 	cfldr32cc	mvfx0, [fp], {32}
    5460:	30061d05 	andcc	r1, r6, r5, lsl #26
    5464:	06310517 			; <UNDEFINED> instruction: 0x06310517
    5468:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    546c:	17150540 	ldrne	r0, [r5, -r0, asr #10]
    5470:	01061e05 	tsteq	r6, r5, lsl #28
    5474:	4b061505 	blmi	18a890 <__RAM_SIZE+0x8a890>
    5478:	00010101 	andeq	r0, r1, r1, lsl #2
    547c:	58010402 	stmdapl	r1, {r1, sl}
    5480:	03040200 	movweq	r0, #16896	; 0x4200
    5484:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5488:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    548c:	00010304 	andeq	r0, r1, r4, lsl #6
    5490:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5494:	03040200 	movweq	r0, #16896	; 0x4200
    5498:	04020001 	streq	r0, [r2], #-1
    549c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    54a0:	00200304 	eoreq	r0, r0, r4, lsl #6
    54a4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    54a8:	03040200 	movweq	r0, #16896	; 0x4200
    54ac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    54b0:	02002003 	andeq	r2, r0, #3
    54b4:	20060304 	andcs	r0, r6, r4, lsl #6
    54b8:	03040200 	movweq	r0, #16896	; 0x4200
    54bc:	02005806 	andeq	r5, r0, #393216	; 0x60000
    54c0:	00740304 	rsbseq	r0, r4, r4, lsl #6
    54c4:	01030402 	tsteq	r3, r2, lsl #8
    54c8:	03040200 	movweq	r0, #16896	; 0x4200
    54cc:	03290501 			; <UNDEFINED> instruction: 0x03290501
    54d0:	09050117 	stmdbeq	r5, {r0, r1, r2, r4, r8}
    54d4:	3e390515 	mrccc	5, 1, r0, cr9, cr5, {0}
    54d8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    54dc:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    54e0:	7fa60314 	svcvc	0x00a60314
    54e4:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    54e8:	2e00c203 	cdpcs	2, 0, cr12, cr0, cr3, {0}
    54ec:	03061405 	movweq	r1, #25605	; 0x6405
    54f0:	02587fbe 	subseq	r7, r8, #760	; 0x2f8
    54f4:	0101000f 	tsteq	r1, pc
    54f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    54fc:	00000002 	andeq	r0, r0, r2
    5500:	1db80300 	ldcne	3, cr0, [r8]
    5504:	21230501 			; <UNDEFINED> instruction: 0x21230501
    5508:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    550c:	0905170d 	stmdbeq	r5, {r0, r2, r3, r8, r9, sl, ip}
    5510:	0616054f 	ldreq	r0, [r6], -pc, asr #10
    5514:	001b0501 	andseq	r0, fp, r1, lsl #10
    5518:	06010402 	streq	r0, [r1], -r2, lsl #8
    551c:	00090520 	andeq	r0, r9, r0, lsr #10
    5520:	06010402 	streq	r0, [r1], -r2, lsl #8
    5524:	09030601 	stmdbeq	r3, {r0, r9, sl}
    5528:	3505052e 	strcc	r0, [r5, #-1326]	; 0xfffffad2
    552c:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    5530:	06050501 	streq	r0, [r5], -r1, lsl #10
    5534:	30240540 	eorcc	r0, r4, r0, asr #10
    5538:	13060105 	movwne	r0, #24837	; 0x6105
    553c:	02000d05 	andeq	r0, r0, #320	; 0x140
    5540:	03060304 	movweq	r0, #25348	; 0x6304
    5544:	4b05206a 	blmi	14d6f4 <__RAM_SIZE+0x4d6f4>
    5548:	03040200 	movweq	r0, #16896	; 0x4200
    554c:	00520556 	subseq	r0, r2, r6, asr r5
    5550:	06030402 	streq	r0, [r3], -r2, lsl #8
    5554:	04020001 	streq	r0, [r2], #-1
    5558:	06022003 	streq	r2, [r2], -r3
    555c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5560:	02050001 	andeq	r0, r5, #1
    5564:	100029a8 	andne	r2, r0, r8, lsr #19
    5568:	011de303 	tsteq	sp, r3, lsl #6
    556c:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
    5570:	010b031f 	tsteq	fp, pc, lsl r3
    5574:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    5578:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    557c:	09053c1e 	stmdbeq	r5, {r1, r2, r3, r4, sl, fp, ip, sp}
    5580:	22052406 	andcs	r2, r5, #100663296	; 0x6000000
    5584:	05013703 	streq	r3, [r1, #-1795]	; 0xfffff8fd
    5588:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    558c:	01010004 	tsteq	r1, r4
    5590:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5594:	0029b802 	eoreq	fp, r9, r2, lsl #16
    5598:	208a0310 	addcs	r0, sl, r0, lsl r3
    559c:	13050501 	movwne	r0, #21761	; 0x5501
    55a0:	15142305 	ldrne	r2, [r4, #-773]	; 0xfffffcfb
    55a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    55a8:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    55ac:	05300622 	ldreq	r0, [r0, #-1570]!	; 0xfffff9de
    55b0:	0505142c 	streq	r1, [r5, #-1068]	; 0xfffffbd4
    55b4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    55b8:	00040213 	andeq	r0, r4, r3, lsl r2
    55bc:	01050101 	tsteq	r5, r1, lsl #2
    55c0:	00020500 	andeq	r0, r2, r0, lsl #10
    55c4:	03000000 	movweq	r0, #0
    55c8:	0501209d 	streq	r2, [r1, #-157]	; 0xffffff63
    55cc:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    55d0:	2f05142a 	svccs	0x0005142a
    55d4:	05011003 	streq	r1, [r1, #-3]
    55d8:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    55dc:	06110514 			; <UNDEFINED> instruction: 0x06110514
    55e0:	06050501 	streq	r0, [r5], -r1, lsl #10
    55e4:	14340530 	ldrtne	r0, [r4], #-1328	; 0xfffffad0
    55e8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    55ec:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    55f0:	01010004 	tsteq	r1, r4
    55f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    55f8:	0029c402 	eoreq	ip, r9, r2, lsl #8
    55fc:	20c00310 	sbccs	r0, r0, r0, lsl r3
    5600:	13280501 			; <UNDEFINED> instruction: 0x13280501
    5604:	05164105 	ldreq	r4, [r6, #-261]	; 0xfffffefb
    5608:	0c051405 	cfstrseq	mvf1, [r5], {5}
    560c:	01050106 	tsteq	r5, r6, lsl #2
    5610:	0004022f 	andeq	r0, r4, pc, lsr #4
    5614:	01050101 	tsteq	r5, r1, lsl #2
    5618:	00020500 	andeq	r0, r2, r0, lsl #10
    561c:	03000000 	movweq	r0, #0
    5620:	050120cc 	streq	r2, [r1, #-204]	; 0xffffff34
    5624:	2d051305 	stccs	3, cr1, [r5, #-20]	; 0xffffffec
    5628:	16050514 			; <UNDEFINED> instruction: 0x16050514
    562c:	01060d05 	tsteq	r6, r5, lsl #26
    5630:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    5634:	2f060404 	svccs	0x00060404
    5638:	02003d05 	andeq	r3, r0, #320	; 0x140
    563c:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    5640:	04020005 	streq	r0, [r2], #-5
    5644:	01051404 	tsteq	r5, r4, lsl #8
    5648:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    564c:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    5650:	01040200 	mrseq	r0, R12_usr
    5654:	003c7a03 	eorseq	r7, ip, r3, lsl #20
    5658:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    565c:	01000302 	tsteq	r0, r2, lsl #6
    5660:	00050501 	andeq	r0, r5, r1, lsl #10
    5664:	00000205 	andeq	r0, r0, r5, lsl #4
    5668:	ed030000 	stc	0, cr0, [r3, #-0]
    566c:	09050121 	stmdbeq	r5, {r0, r5, r8}
    5670:	52051313 	andpl	r1, r5, #1275068416	; 0x4c000000
    5674:	14300514 	ldrtne	r0, [r0], #-1300	; 0xfffffaec
    5678:	05132e05 	ldreq	r2, [r3, #-3589]	; 0xfffff1fb
    567c:	11051409 	tstne	r5, r9, lsl #8
    5680:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5684:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5688:	16053206 	strne	r3, [r5], -r6, lsl #4
    568c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5690:	0f050106 	svceq	0x00050106
    5694:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5698:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    569c:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    56a0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    56a4:	35053619 	strcc	r3, [r5, #-1561]	; 0xfffff9e7
    56a8:	200b0306 	andcs	r0, fp, r6, lsl #6
    56ac:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    56b0:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    56b4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    56b8:	205d0301 	subscs	r0, sp, r1, lsl #6
    56bc:	01040200 	mrseq	r0, R12_usr
    56c0:	0526062e 	streq	r0, [r6, #-1582]!	; 0xfffff9d2
    56c4:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    56c8:	11052022 	tstne	r5, r2, lsr #32
    56cc:	20052406 	andcs	r2, r5, r6, lsl #8
    56d0:	11050106 	tstne	r5, r6, lsl #2
    56d4:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    56d8:	11050106 	tstne	r5, r6, lsl #2
    56dc:	29053206 	stmdbcs	r5, {r1, r2, r9, ip, sp}
    56e0:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    56e4:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    56e8:	06200521 	strteq	r0, [r0], -r1, lsr #10
    56ec:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    56f0:	0201062f 	andeq	r0, r1, #49283072	; 0x2f00000
    56f4:	01010004 	tsteq	r1, r4
    56f8:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    56fc:	00000002 	andeq	r0, r0, r2
    5700:	22f10300 	rscscs	r0, r1, #0, 6
    5704:	13300501 	teqne	r0, #4194304	; 0x400000
    5708:	05163e05 	ldreq	r3, [r6, #-3589]	; 0xfffff1fb
    570c:	0d051448 	cfstrseq	mvf1, [r5, #-288]	; 0xfffffee0
    5710:	06090514 			; <UNDEFINED> instruction: 0x06090514
    5714:	00060213 	andeq	r0, r6, r3, lsl r2
    5718:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    571c:	00020500 	andeq	r0, r2, r0, lsl #10
    5720:	03000000 	movweq	r0, #0
    5724:	050122ff 	streq	r2, [r1, #-767]	; 0xfffffd01
    5728:	3f05133c 	svccc	0x0005133c
    572c:	16400515 			; <UNDEFINED> instruction: 0x16400515
    5730:	05145105 	ldreq	r5, [r4, #-261]	; 0xfffffefb
    5734:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    5738:	023c1306 	eorseq	r1, ip, #402653184	; 0x18000000
    573c:	01010003 	tsteq	r1, r3
    5740:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5744:	0029d002 	eoreq	sp, r9, r2
    5748:	23980310 	orrscs	r0, r8, #16, 6	; 0x40000000
    574c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5750:	052f0609 	streq	r0, [pc, #-1545]!	; 514f <__HEAP_SIZE+0x414f>
    5754:	09051431 	stmdbeq	r5, {r0, r4, r5, sl, ip}
    5758:	06280517 			; <UNDEFINED> instruction: 0x06280517
    575c:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    5760:	21064205 	tstcs	r6, r5, lsl #4
    5764:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5768:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    576c:	25052e0b 	strcs	r2, [r5, #-3595]	; 0xfffff1f5
    5770:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    5774:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5778:	3c010614 	stccc	6, cr0, [r1], {20}
    577c:	22063105 	andcs	r3, r6, #1073741825	; 0x40000001
    5780:	05132405 	ldreq	r2, [r3, #-1029]	; 0xfffffbfb
    5784:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    5788:	6c030647 	stcvs	6, cr0, [r3], {71}	; 0x47
    578c:	133d0520 	teqne	sp, #32, 10	; 0x8000000
    5790:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    5794:	1d053011 	stcne	0, cr3, [r5, #-68]	; 0xffffffbc
    5798:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    579c:	052f4c06 	streq	r4, [pc, #-3078]!	; 4b9e <__HEAP_SIZE+0x3b9e>
    57a0:	20010619 	andcs	r0, r1, r9, lsl r6
    57a4:	01000702 	tsteq	r0, r2, lsl #14
    57a8:	00010501 	andeq	r0, r1, r1, lsl #10
    57ac:	2a0c0205 	bcs	305fc8 <__RAM_SIZE+0x205fc8>
    57b0:	be031000 	cdplt	0, 0, cr1, cr3, cr0, {0}
    57b4:	05050124 	streq	r0, [r5, #-292]	; 0xfffffedc
    57b8:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    57bc:	2b051824 	blcs	14b854 <__RAM_SIZE+0x4b854>
    57c0:	18050517 	stmdane	r5, {r0, r1, r2, r4, r8, sl}
    57c4:	01061e05 	tsteq	r6, r5, lsl #28
    57c8:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    57cc:	3c6c0301 	stclcc	3, cr0, [ip], #-4
    57d0:	03060905 	movweq	r0, #26885	; 0x6905
    57d4:	37052018 	smladcc	r5, r8, r0, r2
    57d8:	1a050106 	bne	145bf8 <__RAM_SIZE+0x45bf8>
    57dc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    57e0:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    57e4:	06090501 	streq	r0, [r9], -r1, lsl #10
    57e8:	060b0522 	streq	r0, [fp], -r2, lsr #10
    57ec:	06250501 	strteq	r0, [r5], -r1, lsl #10
    57f0:	19090526 	stmdbne	r9, {r1, r2, r5, r8, sl}
    57f4:	01061d05 	tsteq	r6, r5, lsl #26
    57f8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    57fc:	2e580310 	mrccs	3, 2, r0, cr8, cr0, {0}
    5800:	03061105 	movweq	r1, #24837	; 0x6105
    5804:	0520018c 	streq	r0, [r0, #-396]!	; 0xfffffe74
    5808:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    580c:	25058213 	strcs	r8, [r5, #-531]	; 0xfffffded
    5810:	062d0530 			; <UNDEFINED> instruction: 0x062d0530
    5814:	03110524 	tsteq	r1, #36, 10	; 0x9000000
    5818:	2305012b 	movwcs	r0, #20779	; 0x512b
    581c:	13050106 	movwne	r0, #20742	; 0x5106
    5820:	01052e2e 	tsteq	r5, lr, lsr #28
    5824:	05013a03 	streq	r3, [r1, #-2563]	; 0xfffff5fd
    5828:	a603060d 	strge	r0, [r3], -sp, lsl #12
    582c:	0101207e 	tsteq	r1, lr, ror r0
    5830:	203c2e01 	eorscs	r2, ip, r1, lsl #28
    5834:	062e064a 	strteq	r0, [lr], -sl, asr #12
    5838:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    583c:	01630310 	cmneq	r3, r0, lsl r3
    5840:	03061505 	movweq	r1, #25861	; 0x6505
    5844:	2a052e33 	bcs	151118 <__RAM_SIZE+0x51118>
    5848:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    584c:	19054b06 	stmdbne	r5, {r1, r2, r8, r9, fp, lr}
    5850:	05201503 	streq	r1, [r0, #-1283]!	; 0xfffffafd
    5854:	2001062e 	andcs	r0, r1, lr, lsr #12
    5858:	21061905 	tstcs	r6, r5, lsl #18
    585c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    5860:	00280104 	eoreq	r0, r8, r4, lsl #2
    5864:	06010402 	streq	r0, [r1], -r2, lsl #8
    5868:	0019053c 	andseq	r0, r9, ip, lsr r5
    586c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5870:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    5874:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5878:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    587c:	15051631 	strne	r1, [r5, #-1585]	; 0xfffff9cf
    5880:	01010117 	tsteq	r1, r7, lsl r1
    5884:	01040200 	mrseq	r0, R12_usr
    5888:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    588c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5890:	00010304 	andeq	r0, r1, r4, lsl #6
    5894:	01030402 	tsteq	r3, r2, lsl #8
    5898:	03040200 	movweq	r0, #16896	; 0x4200
    589c:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
    58a0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    58a4:	00010304 	andeq	r0, r1, r4, lsl #6
    58a8:	20030402 	andcs	r0, r3, r2, lsl #8
    58ac:	03040200 	movweq	r0, #16896	; 0x4200
    58b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    58b4:	02002003 	andeq	r2, r0, #3
    58b8:	00200304 	eoreq	r0, r0, r4, lsl #6
    58bc:	06030402 	streq	r0, [r3], -r2, lsl #8
    58c0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    58c4:	00660603 	rsbeq	r0, r6, r3, lsl #12
    58c8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    58cc:	03040200 	movweq	r0, #16896	; 0x4200
    58d0:	04020001 	streq	r0, [r2], #-1
    58d4:	1d050103 	stfnes	f0, [r5, #-12]
    58d8:	03040200 	movweq	r0, #16896	; 0x4200
    58dc:	05011003 	streq	r1, [r1, #-3]
    58e0:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    58e4:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    58e8:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    58ec:	02002003 	andeq	r2, r0, #3
    58f0:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    58f4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    58f8:	31052e03 	tstcc	r5, r3, lsl #28
    58fc:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    5900:	207fb703 	rsbscs	fp, pc, r3, lsl #14
    5904:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    5908:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    590c:	15053c13 	strne	r3, [r5, #-3091]	; 0xfffff3ed
    5910:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
    5914:	01061d05 	tsteq	r6, r5, lsl #26
    5918:	053c1b05 	ldreq	r1, [ip, #-2821]!	; 0xfffff4fb
    591c:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    5920:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    5924:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    5928:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    592c:	0c030631 	stceq	6, cr0, [r3], {49}	; 0x31
    5930:	1615052e 	ldrne	r0, [r5], -lr, lsr #10
    5934:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    5938:	03040200 	movweq	r0, #16896	; 0x4200
    593c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5940:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5944:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5948:	16030402 	strne	r0, [r3], -r2, lsl #8
    594c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    5950:	01060304 	tsteq	r6, r4, lsl #6
    5954:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    5958:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    595c:	01300619 	teqeq	r0, r9, lsl r6
    5960:	002e3c01 	eoreq	r3, lr, r1, lsl #24
    5964:	58010402 	stmdapl	r1, {r1, sl}
    5968:	01040200 	mrseq	r0, R12_usr
    596c:	09053c06 	stmdbeq	r5, {r1, r2, sl, fp, ip, sp}
    5970:	01910306 	orrseq	r0, r1, r6, lsl #6
    5974:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    5978:	03100501 	tsteq	r0, #4194304	; 0x400000
    597c:	054a7e97 	strbeq	r7, [sl, #-3735]	; 0xfffff169
    5980:	01f70301 	mvnseq	r0, r1, lsl #6
    5984:	03250520 			; <UNDEFINED> instruction: 0x03250520
    5988:	05202048 	streq	r2, [r0, #-72]!	; 0xffffffb8
    598c:	35030636 	strcc	r0, [r3, #-1590]	; 0xfffff9ca
    5990:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    5994:	01060c05 	tsteq	r6, r5, lsl #24
    5998:	01001702 	tsteq	r0, r2, lsl #14
    599c:	00010501 	andeq	r0, r1, r1, lsl #10
    59a0:	2b6c0205 	blcs	1b061bc <__RAM_SIZE+0x1a061bc>
    59a4:	f4031000 	vst4.8	{d1-d4}, [r3], r0
    59a8:	0505011e 	streq	r0, [r5, #-286]	; 0xfffffee2
    59ac:	20051321 	andcs	r1, r5, r1, lsr #6
    59b0:	03090514 	movweq	r0, #38164	; 0x9514
    59b4:	0d05010b 	stfeqs	f0, [r5, #-44]	; 0xffffffd4
    59b8:	37051330 	smladxcc	r5, r0, r3, r1
    59bc:	140d0516 	strne	r0, [sp], #-1302	; 0xfffffaea
    59c0:	01062405 	tsteq	r6, r5, lsl #8
    59c4:	053c2205 	ldreq	r2, [ip, #-517]!	; 0xfffffdfb
    59c8:	05210624 	streq	r0, [r1, #-1572]!	; 0xfffff9dc
    59cc:	2605140d 	strcs	r1, [r5], -sp, lsl #8
    59d0:	0f050106 	svceq	0x00050106
    59d4:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    59d8:	062c0530 			; <UNDEFINED> instruction: 0x062c0530
    59dc:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    59e0:	65031005 	strvs	r1, [r3, #-5]
    59e4:	00190520 	andseq	r0, r9, r0, lsr #10
    59e8:	06010402 	streq	r0, [r1], -r2, lsl #8
    59ec:	002e2503 	eoreq	r2, lr, r3, lsl #10
    59f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    59f4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    59f8:	00140601 	andseq	r0, r4, r1, lsl #12
    59fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    5a00:	030d053c 	movweq	r0, #54588	; 0xd53c
    5a04:	39050158 	stmdbcc	r5, {r3, r4, r6, r8}
    5a08:	20350306 	eorscs	r0, r5, r6, lsl #6
    5a0c:	6b031a05 	blvs	cc228 <__HEAP_SIZE+0xcb228>
    5a10:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    5a14:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    5a18:	33061905 	movwcc	r1, #26885	; 0x6905
    5a1c:	01062105 	tsteq	r6, r5, lsl #2
    5a20:	201f0520 	andscs	r0, pc, r0, lsr #10
    5a24:	21061905 	tstcs	r6, r5, lsl #18
    5a28:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    5a2c:	03040200 	movweq	r0, #16896	; 0x4200
    5a30:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5a34:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5a38:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5a3c:	13030402 	movwne	r0, #13314	; 0x3402
    5a40:	03040200 	movweq	r0, #16896	; 0x4200
    5a44:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5a48:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5a4c:	00200304 	eoreq	r0, r0, r4, lsl #6
    5a50:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5a54:	03040200 	movweq	r0, #16896	; 0x4200
    5a58:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5a5c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    5a60:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5a64:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5a68:	03040200 	movweq	r0, #16896	; 0x4200
    5a6c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5a70:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5a74:	00010304 	andeq	r0, r1, r4, lsl #6
    5a78:	01030402 	tsteq	r3, r2, lsl #8
    5a7c:	03040200 	movweq	r0, #16896	; 0x4200
    5a80:	02002006 	andeq	r2, r0, #6
    5a84:	4a060104 	bmi	185e9c <__RAM_SIZE+0x85e9c>
    5a88:	03040200 	movweq	r0, #16896	; 0x4200
    5a8c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5a90:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5a94:	00010304 	andeq	r0, r1, r4, lsl #6
    5a98:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5a9c:	03040200 	movweq	r0, #16896	; 0x4200
    5aa0:	04020001 	streq	r0, [r2], #-1
    5aa4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5aa8:	00200304 	eoreq	r0, r0, r4, lsl #6
    5aac:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5ab0:	03040200 	movweq	r0, #16896	; 0x4200
    5ab4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5ab8:	02002003 	andeq	r2, r0, #3
    5abc:	20060304 	andcs	r0, r6, r4, lsl #6
    5ac0:	03040200 	movweq	r0, #16896	; 0x4200
    5ac4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    5ac8:	00740304 	rsbseq	r0, r4, r4, lsl #6
    5acc:	01030402 	tsteq	r3, r2, lsl #8
    5ad0:	03040200 	movweq	r0, #16896	; 0x4200
    5ad4:	001d0501 	andseq	r0, sp, r1, lsl #10
    5ad8:	18030402 	stmdane	r3, {r1, sl}
    5adc:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    5ae0:	01060304 	tsteq	r6, r4, lsl #6
    5ae4:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    5ae8:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    5aec:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5af0:	21053c03 	tstcs	r5, r3, lsl #24
    5af4:	3b053006 	blcc	151b14 <__RAM_SIZE+0x51b14>
    5af8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5afc:	4a100306 	bmi	40671c <__RAM_SIZE+0x30671c>
    5b00:	01061705 	tsteq	r6, r5, lsl #14
    5b04:	28061905 	stmdacs	r6, {r0, r2, r8, fp, ip}
    5b08:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    5b0c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    5b10:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    5b14:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    5b18:	16030635 			; <UNDEFINED> instruction: 0x16030635
    5b1c:	16150520 	ldrne	r0, [r5], -r0, lsr #10
    5b20:	01062705 	tsteq	r6, r5, lsl #14
    5b24:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    5b28:	1824061d 	stmdane	r4!, {r0, r2, r3, r4, r9, sl}
    5b2c:	052e2e01 	streq	r2, [lr, #-3585]!	; 0xfffff1ff
    5b30:	7a03062d 	bvc	c73ec <__HEAP_SIZE+0xc63ec>
    5b34:	063d0501 	ldrteq	r0, [sp], -r1, lsl #10
    5b38:	052e6e03 	streq	r6, [lr, #-3587]!	; 0xfffff1fd
    5b3c:	24051521 	strcs	r1, [r5], #-1313	; 0xfffffadf
    5b40:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    5b44:	03062001 	movweq	r2, #24577	; 0x6001
    5b48:	21052072 	tstcs	r5, r2, ror r0
    5b4c:	06250514 			; <UNDEFINED> instruction: 0x06250514
    5b50:	2e230501 	cfsh64cs	mvdx0, mvdx3, #1
    5b54:	32062505 	andcc	r2, r6, #20971520	; 0x1400000
    5b58:	01063f05 	tsteq	r6, r5, lsl #30
    5b5c:	03061d05 	movweq	r1, #27909	; 0x6d05
    5b60:	2a054a0a 	bcs	158390 <__RAM_SIZE+0x58390>
    5b64:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    5b68:	7f970310 	svcvc	0x00970310
    5b6c:	06290501 	strteq	r0, [r9], -r1, lsl #10
    5b70:	20018703 	andcs	r8, r1, r3, lsl #14
    5b74:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5b78:	05053132 	streq	r3, [r5, #-306]	; 0xfffffece
    5b7c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    5b80:	00082e13 	andeq	r2, r8, r3, lsl lr
    5b84:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5b88:	00020500 	andeq	r0, r2, r0, lsl #10
    5b8c:	03000000 	movweq	r0, #0
    5b90:	060112a8 	streq	r1, [r1], -r8, lsr #5
    5b94:	06090501 	streq	r0, [r9], -r1, lsl #10
    5b98:	4905133d 	stmdbmi	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    5b9c:	142b0514 	strtne	r0, [fp], #-1300	; 0xfffffaec
    5ba0:	05133005 	ldreq	r3, [r3, #-5]
    5ba4:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    5ba8:	061e0532 			; <UNDEFINED> instruction: 0x061e0532
    5bac:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    5bb0:	150d0530 	strne	r0, [sp, #-1328]	; 0xfffffad0
    5bb4:	01061b05 	tsteq	r6, r5, lsl #22
    5bb8:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    5bbc:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    5bc0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5bc4:	05350611 	ldreq	r0, [r5, #-1553]!	; 0xfffff9ef
    5bc8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    5bcc:	1903060d 	stmdbne	r3, {r0, r2, r3, r9, sl}
    5bd0:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    5bd4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5bd8:	06250522 	strteq	r0, [r5], -r2, lsr #10
    5bdc:	20014c03 	andcs	r4, r1, r3, lsl #24
    5be0:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    5be4:	19030104 	stmdbne	r3, {r2, r8}
    5be8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5bec:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    5bf0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5bf4:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    5bf8:	4c030625 	stcmi	6, cr0, [r3], {37}	; 0x25
    5bfc:	15052001 	strne	r2, [r5, #-1]
    5c00:	201b0306 	andscs	r0, fp, r6, lsl #6
    5c04:	17030d05 	strne	r0, [r3, -r5, lsl #26]
    5c08:	06210501 	strteq	r0, [r1], -r1, lsl #10
    5c0c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5c10:	03110522 	tsteq	r1, #142606336	; 0x8800000
    5c14:	13052073 	movwne	r2, #20595	; 0x5073
    5c18:	3b050106 	blcc	146038 <__RAM_SIZE+0x46038>
    5c1c:	01040200 	mrseq	r0, R12_usr
    5c20:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    5c24:	030d0530 	movweq	r0, #54576	; 0xd530
    5c28:	21050109 	tstcs	r5, r9, lsl #2
    5c2c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5c30:	35052206 	strcc	r2, [r5, #-518]	; 0xfffffdfa
    5c34:	16110514 			; <UNDEFINED> instruction: 0x16110514
    5c38:	29052e06 	stmdbcs	r5, {r1, r2, r9, sl, fp, sp}
    5c3c:	09054006 	stmdbeq	r5, {r1, r2, lr}
    5c40:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    5c44:	06090501 	streq	r0, [r9], -r1, lsl #10
    5c48:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    5c4c:	03050501 	movweq	r0, #21761	; 0x5501
    5c50:	0d05200c 	stceq	0, cr2, [r5, #-48]	; 0xffffffd0
    5c54:	2e610306 	cdpcs	3, 6, cr0, cr1, cr6, {0}
    5c58:	01062105 	tsteq	r6, r5, lsl #2
    5c5c:	22060d05 	andcs	r0, r6, #320	; 0x140
    5c60:	03062505 	movweq	r2, #25861	; 0x6505
    5c64:	0520014c 	streq	r0, [r0, #-332]!	; 0xfffffeb4
    5c68:	c703060d 	strgt	r0, [r3, -sp, lsl #12]
    5c6c:	25052000 	strcs	r2, [r5, #-0]
    5c70:	15340532 	ldrne	r0, [r4, #-1330]!	; 0xffffface
    5c74:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5c78:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    5c7c:	01010003 	tsteq	r1, r3
    5c80:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5c84:	002c9c02 	eoreq	r9, ip, r2, lsl #24
    5c88:	13830310 	orrne	r0, r3, #16, 6	; 0x40000000
    5c8c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5c90:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    5c94:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    5c98:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    5c9c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5ca0:	303b0530 	eorscc	r0, fp, r0, lsr r5
    5ca4:	05142205 	ldreq	r2, [r4, #-517]	; 0xfffffdfb
    5ca8:	01090311 	tsteq	r9, r1, lsl r3
    5cac:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    5cb0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    5cb4:	05320625 	ldreq	r0, [r2, #-1573]!	; 0xfffff9db
    5cb8:	0b051709 	bleq	14b8e4 <__RAM_SIZE+0x4b8e4>
    5cbc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5cc0:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    5cc4:	15210532 	strne	r0, [r1, #-1330]!	; 0xffffface
    5cc8:	13060505 	movwne	r0, #25861	; 0x6505
    5ccc:	01000102 	tsteq	r0, r2, lsl #2
    5cd0:	00010501 	andeq	r0, r1, r1, lsl #10
    5cd4:	2cbc0205 	lfmcs	f0, 4, [ip], #20
    5cd8:	f4031000 	vst4.8	{d1-d4}, [r3], r0
    5cdc:	0106012c 	tsteq	r6, ip, lsr #2
    5ce0:	03062905 	movweq	r2, #26885	; 0x6905
    5ce4:	0d052e36 	stceq	14, cr2, [r5, #-216]	; 0xffffff28
    5ce8:	19011203 	stmdbne	r1, {r0, r1, r9, ip}
    5cec:	01062105 	tsteq	r6, r5, lsl #2
    5cf0:	30060d05 	andcc	r0, r6, r5, lsl #26
    5cf4:	01060f05 	tsteq	r6, r5, lsl #30
    5cf8:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5cfc:	017fb103 	cmneq	pc, r3, lsl #2
    5d00:	051a4305 	ldreq	r4, [sl, #-773]	; 0xfffffcfb
    5d04:	010a0305 	tsteq	sl, r5, lsl #6
    5d08:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    5d0c:	2e18030d 	cdpcs	3, 1, cr0, cr8, cr13, {0}
    5d10:	01061105 	tsteq	r6, r5, lsl #2
    5d14:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    5d18:	03300611 	teqeq	r0, #17825792	; 0x1100000
    5d1c:	47053c21 	strmi	r3, [r5, -r1, lsr #24]
    5d20:	13150533 	tstne	r5, #213909504	; 0xcc00000
    5d24:	01062905 	tsteq	r6, r5, lsl #18
    5d28:	33065705 	movwcc	r5, #26373	; 0x6705
    5d2c:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    5d30:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    5d34:	05300634 	ldreq	r0, [r0, #-1588]!	; 0xfffff9cc
    5d38:	32051319 	andcc	r1, r5, #1677721600	; 0x64000000
    5d3c:	1631052f 	ldrtne	r0, [r1], -pc, lsr #10
    5d40:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    5d44:	0201061a 	andeq	r0, r1, #27262976	; 0x1a00000
    5d48:	01010005 	tsteq	r1, r5
    5d4c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5d50:	00000002 	andeq	r0, r0, r2
    5d54:	21a70300 			; <UNDEFINED> instruction: 0x21a70300
    5d58:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5d5c:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    5d60:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    5d64:	0905154a 	stmdbeq	r5, {r1, r3, r6, r8, sl, ip}
    5d68:	06150514 			; <UNDEFINED> instruction: 0x06150514
    5d6c:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    5d70:	0b03060d 	bleq	c75ac <__HEAP_SIZE+0xc65ac>
    5d74:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    5d78:	01061805 	tsteq	r6, r5, lsl #16
    5d7c:	21061105 	tstcs	r6, r5, lsl #2
    5d80:	01061905 	tsteq	r6, r5, lsl #18
    5d84:	84061105 	strhi	r1, [r6], #-261	; 0xfffffefb
    5d88:	01061305 	tsteq	r6, r5, lsl #6
    5d8c:	33061405 	movwcc	r1, #25605	; 0x6405
    5d90:	01060d05 	tsteq	r6, r5, lsl #26
    5d94:	0f053106 	svceq	0x00053106
    5d98:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5d9c:	0f052506 	svceq	0x00052506
    5da0:	11050106 	tstne	r5, r6, lsl #2
    5da4:	13052706 	movwne	r2, #22278	; 0x5706
    5da8:	11050106 	tstne	r5, r6, lsl #2
    5dac:	200a0306 	andcs	r0, sl, r6, lsl #6
    5db0:	01061305 	tsteq	r6, r5, lsl #6
    5db4:	28060905 	stmdacs	r6, {r0, r2, r8, fp}
    5db8:	01061205 	tsteq	r6, r5, lsl #4
    5dbc:	30062c05 	andcc	r2, r6, r5, lsl #24
    5dc0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5dc4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    5dc8:	5f030611 	svcpl	0x00030611
    5dcc:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    5dd0:	054a2e01 	strbeq	r2, [sl, #-3585]	; 0xfffff1ff
    5dd4:	05250611 	streq	r0, [r5, #-1553]!	; 0xfffff9ef
    5dd8:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    5ddc:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    5de0:	061d0528 	ldreq	r0, [sp], -r8, lsr #10
    5de4:	053c2e01 	ldreq	r2, [ip, #-3585]!	; 0xfffff1ff
    5de8:	0a030615 	beq	c7644 <__HEAP_SIZE+0xc6644>
    5dec:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    5df0:	023c2e01 	eorseq	r2, ip, #1, 28
    5df4:	0101000b 	tsteq	r1, fp
    5df8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5dfc:	00000002 	andeq	r0, r0, r2
    5e00:	23c20300 	biccs	r0, r2, #0, 6
    5e04:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5e08:	052f0605 	streq	r0, [pc, #-1541]!	; 580b <__HEAP_SIZE+0x480b>
    5e0c:	3f051434 	svccc	0x00051434
    5e10:	16050516 			; <UNDEFINED> instruction: 0x16050516
    5e14:	30090531 	andcc	r0, r9, r1, lsr r5
    5e18:	01061605 	tsteq	r6, r5, lsl #12
    5e1c:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    5e20:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    5e24:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    5e28:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    5e2c:	13060105 	movwne	r0, #24837	; 0x6105
    5e30:	00030220 	andeq	r0, r3, r0, lsr #4
    5e34:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5e38:	00020500 	andeq	r0, r2, r0, lsl #10
    5e3c:	03000000 	movweq	r0, #0
    5e40:	060123e0 	streq	r2, [r1], -r0, ror #7
    5e44:	06090501 	streq	r0, [r9], -r1, lsl #10
    5e48:	2c05132f 	stccs	3, cr1, [r5], {47}	; 0x2f
    5e4c:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    5e50:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5e54:	1105320d 	tstne	r5, sp, lsl #4
    5e58:	0f050106 	svceq	0x00050106
    5e5c:	0319053c 	tsteq	r9, #60, 10	; 0xf000000
    5e60:	052e00c4 	streq	r0, [lr, #-196]!	; 0xffffff3c
    5e64:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    5e68:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    5e6c:	0530062f 	ldreq	r0, [r0, #-1583]!	; 0xfffff9d1
    5e70:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    5e74:	11051306 	tstne	r5, r6, lsl #6
    5e78:	7fb60306 	svcvc	0x00b60306
    5e7c:	1a05172e 	bne	14bb3c <__RAM_SIZE+0x4bb3c>
    5e80:	11050106 	tstne	r5, r6, lsl #2
    5e84:	15055006 	strne	r5, [r5, #-6]
    5e88:	06190530 			; <UNDEFINED> instruction: 0x06190530
    5e8c:	20170501 	andscs	r0, r7, r1, lsl #10
    5e90:	22061905 	andcs	r1, r6, #81920	; 0x14000
    5e94:	01062205 	tsteq	r6, r5, lsl #4
    5e98:	4f061905 	svcmi	0x00061905
    5e9c:	01062f05 	tsteq	r6, r5, lsl #30
    5ea0:	40063105 	andmi	r3, r6, r5, lsl #2
    5ea4:	31151105 	tstcc	r5, r5, lsl #2
    5ea8:	00010101 	andeq	r0, r1, r1, lsl #2
    5eac:	58010402 	stmdapl	r1, {r1, sl}
    5eb0:	03040200 	movweq	r0, #16896	; 0x4200
    5eb4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5eb8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5ebc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ec0:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5ec4:	03040200 	movweq	r0, #16896	; 0x4200
    5ec8:	04020001 	streq	r0, [r2], #-1
    5ecc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5ed0:	00200304 	eoreq	r0, r0, r4, lsl #6
    5ed4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5ed8:	03040200 	movweq	r0, #16896	; 0x4200
    5edc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5ee0:	02002003 	andeq	r2, r0, #3
    5ee4:	20060304 	andcs	r0, r6, r4, lsl #6
    5ee8:	03040200 	movweq	r0, #16896	; 0x4200
    5eec:	02005806 	andeq	r5, r0, #393216	; 0x60000
    5ef0:	00740304 	rsbseq	r0, r4, r4, lsl #6
    5ef4:	01030402 	tsteq	r3, r2, lsl #8
    5ef8:	03040200 	movweq	r0, #16896	; 0x4200
    5efc:	00190501 	andseq	r0, r9, r1, lsl #10
    5f00:	03030402 	movweq	r0, #13314	; 0x3402
    5f04:	2205010b 	andcs	r0, r5, #-1073741822	; 0xc0000002
    5f08:	03040200 	movweq	r0, #16896	; 0x4200
    5f0c:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    5f10:	03040200 	movweq	r0, #16896	; 0x4200
    5f14:	001b0520 	andseq	r0, fp, r0, lsr #10
    5f18:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5f1c:	32061d05 	andcc	r1, r6, #320	; 0x140
    5f20:	01063105 	tsteq	r6, r5, lsl #2
    5f24:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    5f28:	02203c53 	eoreq	r3, r0, #21248	; 0x5300
    5f2c:	01010009 	tsteq	r1, r9
    5f30:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5f34:	00000002 	andeq	r0, r0, r2
    5f38:	26bf0300 	ldrtcs	r0, [pc], r0, lsl #6
    5f3c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5f40:	052f0609 	streq	r0, [pc, #-1545]!	; 593f <__HEAP_SIZE+0x493f>
    5f44:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    5f48:	060b0516 			; <UNDEFINED> instruction: 0x060b0516
    5f4c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5f50:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    5f54:	1d05300d 	stcne	0, cr3, [r5, #-52]	; 0xffffffcc
    5f58:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5f5c:	31052206 	tstcc	r5, r6, lsl #4
    5f60:	06050530 			; <UNDEFINED> instruction: 0x06050530
    5f64:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    5f68:	05207003 	streq	r7, [r0, #-3]!
    5f6c:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
    5f70:	01000402 	tsteq	r0, r2, lsl #8
    5f74:	00050501 	andeq	r0, r5, r1, lsl #10
    5f78:	00000205 	andeq	r0, r0, r5, lsl #4
    5f7c:	e0030000 	and	r0, r3, r0
    5f80:	01060126 	tsteq	r6, r6, lsr #2
    5f84:	21060905 	tstcs	r6, r5, lsl #18
    5f88:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    5f8c:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5f90:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5f94:	04020009 	streq	r0, [r2], #-9
    5f98:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    5f9c:	0402000d 	streq	r0, [r2], #-13
    5fa0:	15053004 	strne	r3, [r5, #-4]
    5fa4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5fa8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5fac:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5fb0:	3a052206 	bcc	14e7d0 <__RAM_SIZE+0x4e7d0>
    5fb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5fb8:	00090530 	andeq	r0, r9, r0, lsr r5
    5fbc:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    5fc0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5fc4:	13060404 	movwne	r0, #25604	; 0x6404
    5fc8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5fcc:	73030104 	movwvc	r0, #12548	; 0x3104
    5fd0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5fd4:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    5fd8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fdc:	02050005 	andeq	r0, r5, #5
    5fe0:	00000000 	andeq	r0, r0, r0
    5fe4:	0126fc03 	msreq	CPSR_sx, r3, lsl #24
    5fe8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5fec:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    5ff0:	05143e05 	ldreq	r3, [r4, #-3589]	; 0xfffff1fb
    5ff4:	11051509 	tstne	r5, r9, lsl #10
    5ff8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5ffc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6000:	22053506 	andcs	r3, r5, #25165824	; 0x1800000
    6004:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6008:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    600c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6010:	15053006 	strne	r3, [r5, #-6]
    6014:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6018:	09050106 	stmdbeq	r5, {r1, r2, r8}
    601c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6020:	41052206 	tstmi	r5, r6, lsl #4
    6024:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6028:	00090530 	andeq	r0, r9, r0, lsr r5
    602c:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    6030:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6034:	13060404 	movwne	r0, #25604	; 0x6404
    6038:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    603c:	70030104 	andvc	r0, r3, r4, lsl #2
    6040:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6044:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    6048:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    604c:	02050005 	andeq	r0, r5, #5
    6050:	00000000 	andeq	r0, r0, r0
    6054:	01279d03 			; <UNDEFINED> instruction: 0x01279d03
    6058:	09050106 	stmdbeq	r5, {r1, r2, r8}
    605c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    6060:	09051446 	stmdbeq	r5, {r1, r2, r6, sl, ip}
    6064:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    6068:	06090501 	streq	r0, [r9], -r1, lsl #10
    606c:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    6070:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6074:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    6078:	17052206 	strne	r2, [r5, -r6, lsl #4]
    607c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6080:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    6084:	6d03060d 	stcvs	6, cr0, [r3, #-52]	; 0xffffffcc
    6088:	06120520 	ldreq	r0, [r2], -r0, lsr #10
    608c:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    6090:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    6094:	0523063c 	streq	r0, [r3, #-1596]!	; 0xfffff9c4
    6098:	10051409 	andne	r1, r5, r9, lsl #8
    609c:	04020106 	streq	r0, [r2], #-262	; 0xfffffefa
    60a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    60a4:	02050005 	andeq	r0, r5, #5
    60a8:	10002cf4 	strdne	r2, [r0], -r4
    60ac:	0127c003 			; <UNDEFINED> instruction: 0x0127c003
    60b0:	05132805 	ldreq	r2, [r3, #-2053]	; 0xfffff7fb
    60b4:	22051409 	andcs	r1, r5, #150994944	; 0x9000000
    60b8:	0b050106 	bleq	1464d8 <__RAM_SIZE+0x464d8>
    60bc:	060d052e 	streq	r0, [sp], -lr, lsr #10
    60c0:	06210524 	strteq	r0, [r1], -r4, lsr #10
    60c4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    60c8:	0621054e 	strteq	r0, [r1], -lr, asr #10
    60cc:	06250501 	strteq	r0, [r5], -r1, lsl #10
    60d0:	032b053d 			; <UNDEFINED> instruction: 0x032b053d
    60d4:	0d05011f 	stfeqs	f0, [r5, #-124]	; 0xffffff84
    60d8:	01010e03 	tsteq	r1, r3, lsl #28
    60dc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    60e0:	02002003 	andeq	r2, r0, #3
    60e4:	00010304 	andeq	r0, r1, r4, lsl #6
    60e8:	20010402 	andcs	r0, r1, r2, lsl #8
    60ec:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    60f0:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    60f4:	02000104 	andeq	r0, r0, #4, 2
    60f8:	00010404 	andeq	r0, r1, r4, lsl #8
    60fc:	74040402 	strvc	r0, [r4], #-1026	; 0xfffffbfe
    6100:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6104:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
    6108:	02009007 	andeq	r9, r0, #7
    610c:	00010704 	andeq	r0, r1, r4, lsl #14
    6110:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    6114:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    6118:	05130704 	ldreq	r0, [r3, #-1796]	; 0xfffff8fc
    611c:	0402000d 	streq	r0, [r2], #-13
    6120:	29051707 	stmdbcs	r5, {r0, r1, r2, r8, r9, sl, ip}
    6124:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6128:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    612c:	04020005 	streq	r0, [r2], #-5
    6130:	05130607 	ldreq	r0, [r3, #-1543]	; 0xfffff9f9
    6134:	0402000d 	streq	r0, [r2], #-13
    6138:	67030605 	strvs	r0, [r3, -r5, lsl #12]
    613c:	01000820 	tsteq	r0, r0, lsr #16
    6140:	00050501 	andeq	r0, r5, r1, lsl #10
    6144:	00000205 	andeq	r0, r0, r5, lsl #4
    6148:	b1030000 	mrslt	r0, (UNDEF: 3)
    614c:	01060118 	tsteq	r6, r8, lsl r1
    6150:	2f060905 	svccs	0x00060905
    6154:	05143205 	ldreq	r3, [r4, #-517]	; 0xfffffdfb
    6158:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    615c:	06150532 			; <UNDEFINED> instruction: 0x06150532
    6160:	00270501 	eoreq	r0, r7, r1, lsl #10
    6164:	06040402 	streq	r0, [r4], -r2, lsl #8
    6168:	000d0522 	andeq	r0, sp, r2, lsr #10
    616c:	16040402 	strne	r0, [r4], -r2, lsl #8
    6170:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    6174:	01060404 	tsteq	r6, r4, lsl #8
    6178:	02002905 	andeq	r2, r0, #81920	; 0x14000
    617c:	50060404 	andpl	r0, r6, r4, lsl #8
    6180:	02000d05 	andeq	r0, r0, #320	; 0x140
    6184:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    6188:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    618c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6190:	0402000f 	streq	r0, [r2], #-15
    6194:	11052004 	tstne	r5, r4
    6198:	1a052206 	bne	14e9b8 <__RAM_SIZE+0x4e9b8>
    619c:	29050106 	stmdbcs	r5, {r1, r2, r8}
    61a0:	0d054e06 	stceq	14, cr4, [r5, #-24]	; 0xffffffe8
    61a4:	4e110515 	mrcmi	5, 0, r0, cr1, cr5, {0}
    61a8:	06180514 			; <UNDEFINED> instruction: 0x06180514
    61ac:	002c0501 	eoreq	r0, ip, r1, lsl #10
    61b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    61b4:	00110520 	andseq	r0, r1, r0, lsr #10
    61b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    61bc:	06090501 	streq	r0, [r9], -r1, lsl #10
    61c0:	052e3403 	streq	r3, [lr, #-1027]!	; 0xfffffbfd
    61c4:	0514320d 	ldreq	r3, [r4, #-525]	; 0xfffffdf3
    61c8:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    61cc:	29052e0f 	stmdbcs	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    61d0:	200c0306 	andcs	r0, ip, r6, lsl #6
    61d4:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    61d8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    61dc:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    61e0:	052e2903 	streq	r2, [lr, #-2307]!	; 0xfffff6fd
    61e4:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    61e8:	7eef0301 	cdpvc	3, 14, cr0, cr15, cr1, {0}
    61ec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    61f0:	03062e01 	movweq	r2, #28161	; 0x6e01
    61f4:	2d052021 	stccs	0, cr2, [r5, #-132]	; 0xffffff7c
    61f8:	17050106 	strne	r0, [r5, -r6, lsl #2]
    61fc:	0066054a 	rsbeq	r0, r6, sl, asr #10
    6200:	06020402 	streq	r0, [r2], -r2, lsl #8
    6204:	0067052c 	rsbeq	r0, r7, ip, lsr #10
    6208:	06020402 	streq	r0, [r2], -r2, lsl #8
    620c:	04020001 	streq	r0, [r2], #-1
    6210:	19052002 	stmdbne	r5, {r1, sp}
    6214:	33052606 	movwcc	r2, #22022	; 0x5606
    6218:	05580106 	ldrbeq	r0, [r8, #-262]	; 0xfffffefa
    621c:	38030611 	stmdacc	r3, {r0, r4, r9, sl}
    6220:	30150501 	andscc	r0, r5, r1, lsl #10
    6224:	03301105 	teqeq	r0, #1073741825	; 0x40000001
    6228:	27053c09 	strcs	r3, [r5, -r9, lsl #24]
    622c:	13050106 	movwne	r0, #20742	; 0x5106
    6230:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6234:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    6238:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    623c:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    6240:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    6244:	19052e17 	stmdbne	r5, {r0, r1, r2, r4, r9, sl, fp, sp}
    6248:	26053406 	strcs	r3, [r5], -r6, lsl #8
    624c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6250:	6c03063e 	stcvs	6, cr0, [r3], {62}	; 0x3e
    6254:	1315053c 	tstne	r5, #60, 10	; 0xf000000
    6258:	17031905 	strne	r1, [r3, -r5, lsl #18]
    625c:	3429053c 	strtcc	r0, [r9], #-1340	; 0xfffffac4
    6260:	05172305 	ldreq	r2, [r7, #-773]	; 0xfffffcfb
    6264:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    6268:	01010009 	tsteq	r1, r9
    626c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6270:	002d7802 	eoreq	r7, sp, r2, lsl #16
    6274:	28fc0310 	ldmcs	ip!, {r4, r8, r9}^
    6278:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    627c:	052f0642 	streq	r0, [pc, #-1602]!	; 5c42 <__HEAP_SIZE+0x4c42>
    6280:	05051420 	streq	r1, [r5, #-1056]	; 0xfffffbe0
    6284:	05011003 	streq	r1, [r1, #-3]
    6288:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    628c:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    6290:	054c2805 	strbeq	r2, [ip, #-2053]	; 0xfffff7fb
    6294:	20130601 	andscs	r0, r3, r1, lsl #12
    6298:	01000202 	tsteq	r0, r2, lsl #4
    629c:	00010501 	andeq	r0, r1, r1, lsl #10
    62a0:	00000205 	andeq	r0, r0, r5, lsl #4
    62a4:	9a030000 	bls	c62ac <__HEAP_SIZE+0xc52ac>
    62a8:	01060129 	tsteq	r6, r9, lsr #2
    62ac:	2f065705 	svccs	0x00065705
    62b0:	05142005 	ldreq	r2, [r4, #-5]
    62b4:	0505163f 	streq	r1, [r5, #-1599]	; 0xfffff9c1
    62b8:	2e2e0617 	mcrcs	6, 1, r0, cr14, cr7, {0}
    62bc:	20012706 	andcs	r2, r1, r6, lsl #14
    62c0:	3c2e0101 	stfccs	f0, [lr], #-4
    62c4:	20063c3c 	andcs	r3, r6, ip, lsr ip
    62c8:	143c2006 	ldrtne	r2, [ip], #-6
    62cc:	054c3105 	strbeq	r3, [ip, #-261]	; 0xfffffefb
    62d0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    62d4:	01010004 	tsteq	r1, r4
    62d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    62dc:	002d9402 	eoreq	r9, sp, r2, lsl #8
    62e0:	29ba0310 	ldmibcs	sl!, {r4, r8, r9}
    62e4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    62e8:	053d0663 	ldreq	r0, [sp, #-1635]!	; 0xfffff99d
    62ec:	09051424 	stmdbeq	r5, {r2, r5, sl, ip}
    62f0:	01010c03 	tsteq	r1, r3, lsl #24
    62f4:	3c010120 	stfccs	f0, [r1], {32}
    62f8:	063c3c3c 			; <UNDEFINED> instruction: 0x063c3c3c
    62fc:	3c200620 	stccc	6, cr0, [r0], #-128	; 0xffffff80
    6300:	060b0517 			; <UNDEFINED> instruction: 0x060b0517
    6304:	301a0501 	andscc	r0, sl, r1, lsl #10
    6308:	31063f05 	tstcc	r6, r5, lsl #30
    630c:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    6310:	05053036 	streq	r3, [r5, #-54]	; 0xffffffca
    6314:	03021306 	movweq	r1, #8966	; 0x2306
    6318:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    631c:	02050001 	andeq	r0, r5, #1
    6320:	10002dd0 	ldrdne	r2, [r0], -r0
    6324:	0129dd03 			; <UNDEFINED> instruction: 0x0129dd03
    6328:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    632c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    6330:	05051437 	streq	r1, [r5, #-1079]	; 0xfffffbc9
    6334:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    6338:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    633c:	23052014 	movwcs	r2, #20500	; 0x5014
    6340:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    6344:	3c200113 	stfccs	f0, [r0], #-76	; 0xffffffb4
    6348:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    634c:	02005803 	andeq	r5, r0, #196608	; 0x30000
    6350:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6354:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6358:	03040200 	movweq	r0, #16896	; 0x4200
    635c:	001e0514 	andseq	r0, lr, r4, lsl r5
    6360:	06030402 	streq	r0, [r3], -r2, lsl #8
    6364:	04020001 	streq	r0, [r2], #-1
    6368:	07052003 	streq	r2, [r5, -r3]
    636c:	03040200 	movweq	r0, #16896	; 0x4200
    6370:	06090520 	streq	r0, [r9], -r0, lsr #10
    6374:	3c200130 	stfccs	f0, [r0], #-192	; 0xffffff40
    6378:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    637c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6380:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6384:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6388:	03040200 	movweq	r0, #16896	; 0x4200
    638c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6390:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6394:	00010304 	andeq	r0, r1, r4, lsl #6
    6398:	01030402 	tsteq	r3, r2, lsl #8
    639c:	03040200 	movweq	r0, #16896	; 0x4200
    63a0:	02002006 	andeq	r2, r0, #6
    63a4:	4a060104 	bmi	1867bc <__RAM_SIZE+0x867bc>
    63a8:	03040200 	movweq	r0, #16896	; 0x4200
    63ac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    63b0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    63b4:	00010304 	andeq	r0, r1, r4, lsl #6
    63b8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    63bc:	03040200 	movweq	r0, #16896	; 0x4200
    63c0:	04020001 	streq	r0, [r2], #-1
    63c4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    63c8:	00200304 	eoreq	r0, r0, r4, lsl #6
    63cc:	06030402 	streq	r0, [r3], -r2, lsl #8
    63d0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    63d4:	00200603 	eoreq	r0, r0, r3, lsl #12
    63d8:	20030402 	andcs	r0, r3, r2, lsl #8
    63dc:	03040200 	movweq	r0, #16896	; 0x4200
    63e0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    63e4:	00200603 	eoreq	r0, r0, r3, lsl #12
    63e8:	06030402 	streq	r0, [r3], -r2, lsl #8
    63ec:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    63f0:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    63f4:	00010304 	andeq	r0, r1, r4, lsl #6
    63f8:	01030402 	tsteq	r3, r2, lsl #8
    63fc:	02000d05 	andeq	r0, r0, #320	; 0x140
    6400:	0c030304 	stceq	3, cr0, [r3], {4}
    6404:	00090501 	andeq	r0, r9, r1, lsl #10
    6408:	36010402 	strcc	r0, [r1], -r2, lsl #8
    640c:	01040200 	mrseq	r0, R12_usr
    6410:	001b0517 	andseq	r0, fp, r7, lsl r5
    6414:	06010402 	streq	r0, [r1], -r2, lsl #8
    6418:	00360501 	eorseq	r0, r6, r1, lsl #10
    641c:	20010402 	andcs	r0, r1, r2, lsl #8
    6420:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    6424:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    6428:	1633060d 	ldrtne	r0, [r3], -sp, lsl #12
    642c:	01062105 	tsteq	r6, r5, lsl #2
    6430:	1a030105 	bne	c684c <__HEAP_SIZE+0xc584c>
    6434:	0005053c 	andeq	r0, r5, ip, lsr r5
    6438:	06010402 	streq	r0, [r1], -r2, lsl #8
    643c:	207fbf03 	rsbscs	fp, pc, r3, lsl #30
    6440:	01040200 	mrseq	r0, R12_usr
    6444:	09053c06 	stmdbeq	r5, {r1, r2, sl, fp, ip, sp}
    6448:	01040200 	mrseq	r0, R12_usr
    644c:	02001606 	andeq	r1, r0, #6291456	; 0x600000
    6450:	3c060104 	stfccs	f0, [r6], {4}
    6454:	01150306 	tsteq	r5, r6, lsl #6
    6458:	01012e01 	tsteq	r1, r1, lsl #28
    645c:	06200620 	strteq	r0, [r0], -r0, lsr #12
    6460:	20202020 	eorcs	r2, r0, r0, lsr #32
    6464:	053c2006 	ldreq	r2, [ip, #-6]!
    6468:	01120315 	tsteq	r2, r5, lsl r3
    646c:	03063405 	movweq	r3, #25605	; 0x6405
    6470:	05052014 	streq	r2, [r5, #-20]	; 0xffffffec
    6474:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    6478:	000e0201 	andeq	r0, lr, r1, lsl #4
    647c:	01050101 	tsteq	r5, r1, lsl #2
    6480:	00020500 	andeq	r0, r2, r0, lsl #10
    6484:	03000000 	movweq	r0, #0
    6488:	06012abb 			; <UNDEFINED> instruction: 0x06012abb
    648c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6490:	14500521 	ldrbne	r0, [r0], #-1313	; 0xfffffadf
    6494:	05163f05 	ldreq	r3, [r6, #-3845]	; 0xfffff0fb
    6498:	2e061505 	cfsh32cs	mvfx1, mvfx6, #5
    649c:	14052706 	strne	r2, [r5], #-1798	; 0xfffff8fa
    64a0:	23050106 	movwcs	r0, #20742	; 0x5106
    64a4:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    64a8:	3c200113 	stfccs	f0, [r0], #-76	; 0xffffffb4
    64ac:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    64b0:	02003c03 	andeq	r3, r0, #768	; 0x300
    64b4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    64b8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    64bc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    64c0:	0c030304 	stceq	3, cr0, [r3], {4}
    64c4:	00050501 	andeq	r0, r5, r1, lsl #10
    64c8:	35030402 	strcc	r0, [r3, #-1026]	; 0xfffffbfe
    64cc:	03040200 	movweq	r0, #16896	; 0x4200
    64d0:	04020001 	streq	r0, [r2], #-1
    64d4:	02002003 	andeq	r2, r0, #3
    64d8:	003c0304 	eorseq	r0, ip, r4, lsl #6
    64dc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    64e0:	03040200 	movweq	r0, #16896	; 0x4200
    64e4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    64e8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    64ec:	003c0304 	eorseq	r0, ip, r4, lsl #6
    64f0:	13030402 	movwne	r0, #13314	; 0x3402
    64f4:	03040200 	movweq	r0, #16896	; 0x4200
    64f8:	04020001 	streq	r0, [r2], #-1
    64fc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6500:	00010304 	andeq	r0, r1, r4, lsl #6
    6504:	06030402 	streq	r0, [r3], -r2, lsl #8
    6508:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    650c:	004a0601 	subeq	r0, sl, r1, lsl #12
    6510:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6514:	03040200 	movweq	r0, #16896	; 0x4200
    6518:	04020001 	streq	r0, [r2], #-1
    651c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6520:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6524:	01030402 	tsteq	r3, r2, lsl #8
    6528:	03040200 	movweq	r0, #16896	; 0x4200
    652c:	04020001 	streq	r0, [r2], #-1
    6530:	02002003 	andeq	r2, r0, #3
    6534:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6538:	20030402 	andcs	r0, r3, r2, lsl #8
    653c:	03040200 	movweq	r0, #16896	; 0x4200
    6540:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6544:	00200603 	eoreq	r0, r0, r3, lsl #12
    6548:	06030402 	streq	r0, [r3], -r2, lsl #8
    654c:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6550:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6554:	00010304 	andeq	r0, r1, r4, lsl #6
    6558:	01030402 	tsteq	r3, r2, lsl #8
    655c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6560:	05160304 	ldreq	r0, [r6, #-772]	; 0xfffffcfc
    6564:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    6568:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    656c:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    6570:	0b052003 	bleq	14e584 <__RAM_SIZE+0x4e584>
    6574:	03040200 	movweq	r0, #16896	; 0x4200
    6578:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    657c:	06210534 			; <UNDEFINED> instruction: 0x06210534
    6580:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    6584:	053c1103 	ldreq	r1, [ip, #-259]!	; 0xfffffefd
    6588:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    658c:	04020005 	streq	r0, [r2], #-5
    6590:	50030601 	andpl	r0, r3, r1, lsl #12
    6594:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6598:	003c0601 	eorseq	r0, ip, r1, lsl #12
    659c:	06010402 	streq	r0, [r1], -r2, lsl #8
    65a0:	02011303 	andeq	r1, r1, #201326592	; 0xc000000
    65a4:	0101000b 	tsteq	r1, fp
    65a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    65ac:	00000002 	andeq	r0, r0, r2
    65b0:	2b820300 	blcs	fe0871b8 <__StackTop+0xc5f871b8>
    65b4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    65b8:	052f0631 	streq	r0, [pc, #-1585]!	; 5f8f <__HEAP_SIZE+0x4f8f>
    65bc:	0505141e 	streq	r1, [r5, #-1054]	; 0xfffffbe2
    65c0:	30090513 	andcc	r0, r9, r3, lsl r5
    65c4:	01062305 	tsteq	r6, r5, lsl #6
    65c8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    65cc:	01062405 	tsteq	r6, r5, lsl #8
    65d0:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    65d4:	05302705 	ldreq	r2, [r0, #-1797]!	; 0xfffff8fb
    65d8:	20130601 	andscs	r0, r3, r1, lsl #12
    65dc:	01000502 	tsteq	r0, r2, lsl #10
    65e0:	00010501 	andeq	r0, r1, r1, lsl #10
    65e4:	2eb40205 	cdpcs	2, 11, cr0, cr4, cr5, {0}
    65e8:	92031000 	andls	r1, r3, #0
    65ec:	3905012b 	stmdbcc	r5, {r0, r1, r3, r5, r8}
    65f0:	15050513 	strne	r0, [r5, #-1299]	; 0xfffffaed
    65f4:	01061f05 	tsteq	r6, r5, lsl #30
    65f8:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    65fc:	01062005 	tsteq	r6, r5
    6600:	3e062f05 	cdpcc	15, 0, cr2, cr6, cr5, {0}
    6604:	13060105 	movwne	r0, #24837	; 0x6105
    6608:	01000602 	tsteq	r0, r2, lsl #12
    660c:	00010501 	andeq	r0, r1, r1, lsl #10
    6610:	2ecc0205 	cdpcs	2, 12, cr0, cr12, cr5, {0}
    6614:	9f031000 	svcls	0x00031000
    6618:	0106012b 	tsteq	r6, fp, lsr #2
    661c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    6620:	05144005 	ldreq	r4, [r4, #-5]
    6624:	2205141e 	andcs	r1, r5, #503316480	; 0x1e000000
    6628:	14050513 	strne	r0, [r5], #-1299	; 0xfffffaed
    662c:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
    6630:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6634:	052f0609 	streq	r0, [pc, #-1545]!	; 6033 <__HEAP_SIZE+0x5033>
    6638:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    663c:	0d05201a 	stceq	0, cr2, [r5, #-104]	; 0xffffff98
    6640:	1d052306 	stcne	3, cr2, [r5, #-24]	; 0xffffffe8
    6644:	0f050106 	svceq	0x00050106
    6648:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    664c:	061d0524 	ldreq	r0, [sp], -r4, lsr #10
    6650:	2e2e0501 	cfsh64cs	mvdx0, mvdx14, #1
    6654:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6658:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    665c:	05052001 	streq	r2, [r5, #-1]
    6660:	01270306 			; <UNDEFINED> instruction: 0x01270306
    6664:	05303005 	ldreq	r3, [r0, #-5]!
    6668:	01051405 	tsteq	r5, r5, lsl #8
    666c:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    6670:	2e5a0306 	cdpcs	3, 5, cr0, cr10, cr6, {0}
    6674:	01061105 	tsteq	r6, r5, lsl #2
    6678:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    667c:	0a030609 	beq	c7ea8 <__HEAP_SIZE+0xc6ea8>
    6680:	061f053c 			; <UNDEFINED> instruction: 0x061f053c
    6684:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    6688:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    668c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    6690:	1335060d 	teqne	r5, #13631488	; 0xd00000
    6694:	01061c05 	tsteq	r6, r5, lsl #24
    6698:	052d1505 	streq	r1, [sp, #-1285]!	; 0xfffffafb
    669c:	0e05211c 	mcreq	1, 0, r2, cr5, cr12, {0}
    66a0:	10052206 	andne	r2, r5, r6, lsl #4
    66a4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    66a8:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    66ac:	01061c05 	tsteq	r6, r5, lsl #24
    66b0:	2f060d05 	svccs	0x00060d05
    66b4:	01061505 	tsteq	r6, r5, lsl #10
    66b8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    66bc:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    66c0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    66c4:	063d060d 	ldrteq	r0, [sp], -sp, lsl #12
    66c8:	052f0620 	streq	r0, [pc, #-1568]!	; 60b0 <__HEAP_SIZE+0x50b0>
    66cc:	20010615 	andcs	r0, r1, r5, lsl r6
    66d0:	6c031905 			; <UNDEFINED> instruction: 0x6c031905
    66d4:	08022020 	stmdaeq	r2, {r5, sp}
    66d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    66dc:	02050001 	andeq	r0, r5, #1
    66e0:	10002f48 	andne	r2, r0, r8, asr #30
    66e4:	012be303 			; <UNDEFINED> instruction: 0x012be303
    66e8:	05132205 	ldreq	r2, [r3, #-517]	; 0xfffffdfb
    66ec:	29051505 	stmdbcs	r5, {r0, r2, r8, sl, ip}
    66f0:	23050106 	movwcs	r0, #20742	; 0x5106
    66f4:	01053e06 	tsteq	r5, r6, lsl #28
    66f8:	03021306 	movweq	r1, #8966	; 0x2306
    66fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6700:	02050005 	andeq	r0, r5, #5
    6704:	00000000 	andeq	r0, r0, r0
    6708:	012bf003 	msreq	CPSR_fxc, r3
    670c:	13130905 	tstne	r3, #81920	; 0x14000
    6710:	05143005 	ldreq	r3, [r4, #-5]
    6714:	0b051409 	bleq	14b740 <__RAM_SIZE+0x4b740>
    6718:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    671c:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
    6720:	20010616 	andcs	r0, r1, r6, lsl r6
    6724:	06340524 	ldrteq	r0, [r4], -r4, lsr #10
    6728:	14090523 	strne	r0, [r9], #-1315	; 0xfffffadd
    672c:	13060505 	movwne	r0, #25861	; 0x6505
    6730:	01000102 	tsteq	r0, r2, lsl #2
    6734:	00050501 	andeq	r0, r5, r1, lsl #10
    6738:	00000205 	andeq	r0, r0, r5, lsl #4
    673c:	8c030000 	stchi	0, cr0, [r3], {-0}
    6740:	0905012c 	stmdbeq	r5, {r2, r3, r5, r8}
    6744:	14390513 	ldrtne	r0, [r9], #-1299	; 0xfffffaed
    6748:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    674c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6750:	1322060d 			; <UNDEFINED> instruction: 0x1322060d
    6754:	01062105 	tsteq	r6, r5, lsl #2
    6758:	23062905 	movwcs	r2, #26885	; 0x6905
    675c:	13060505 	movwne	r0, #25861	; 0x6505
    6760:	01000102 	tsteq	r0, r2, lsl #2
    6764:	00050501 	andeq	r0, r5, r1, lsl #10
    6768:	2f540205 	svccs	0x00540205
    676c:	fc031000 	stc2	0, cr1, [r3], {-0}
    6770:	0d05012d 	stfeqs	f0, [r5, #-180]	; 0xffffff4c
    6774:	15090515 	strne	r0, [r9, #-1301]	; 0xfffffaeb
    6778:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    677c:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    6780:	0b050106 	bleq	146ba0 <__RAM_SIZE+0x46ba0>
    6784:	060e052e 	streq	r0, [lr], -lr, lsr #10
    6788:	06200525 	strteq	r0, [r0], -r5, lsr #10
    678c:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    6790:	25060e05 	strcs	r0, [r6, #-3589]	; 0xfffff1fb
    6794:	01061f05 	tsteq	r6, r5, lsl #30
    6798:	052e1005 	streq	r1, [lr, #-5]!
    679c:	05280612 	streq	r0, [r8, #-1554]!	; 0xfffff9ee
    67a0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    67a4:	14052e61 	strne	r2, [r5], #-3681	; 0xfffff19f
    67a8:	031a053c 	tsteq	sl, #60, 10	; 0xf000000
    67ac:	15052e68 	strne	r2, [r5, #-3688]	; 0xfffff198
    67b0:	332e0903 			; <UNDEFINED> instruction: 0x332e0903
    67b4:	03190534 	tsteq	r9, #52, 10	; 0xd000000
    67b8:	25052e0a 	strcs	r2, [r5, #-3594]	; 0xfffff1f6
    67bc:	3b052506 	blcc	14fbdc <__RAM_SIZE+0x4fbdc>
    67c0:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    67c4:	13060505 	movwne	r0, #25861	; 0x6505
    67c8:	01000b02 	tsteq	r0, r2, lsl #22
    67cc:	00050501 	andeq	r0, r5, r1, lsl #10
    67d0:	2f9c0205 	svccs	0x009c0205
    67d4:	ec031000 	stc	0, cr1, [r3], {-0}
    67d8:	0106012f 	tsteq	r6, pc, lsr #2
    67dc:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    67e0:	05145305 	ldreq	r5, [r4, #-773]	; 0xfffffcfb
    67e4:	11051509 	tstne	r5, r9, lsl #10
    67e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    67ec:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    67f0:	1f053006 	svcne	0x00053006
    67f4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    67f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    67fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6800:	35052106 	strcc	r2, [r5, #-262]	; 0xfffffefa
    6804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6808:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    680c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6810:	0009052e 	andeq	r0, r9, lr, lsr #10
    6814:	06040402 	streq	r0, [r4], -r2, lsl #8
    6818:	00300521 	eorseq	r0, r0, r1, lsr #10
    681c:	06040402 	streq	r0, [r4], -r2, lsl #8
    6820:	00290501 	eoreq	r0, r9, r1, lsl #10
    6824:	20040402 	andcs	r0, r4, r2, lsl #8
    6828:	02000905 	andeq	r0, r0, #81920	; 0x14000
    682c:	21060404 	tstcs	r6, r4, lsl #8
    6830:	02002a05 	andeq	r2, r0, #20480	; 0x5000
    6834:	01060404 	tsteq	r6, r4, lsl #8
    6838:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    683c:	05200404 	streq	r0, [r0, #-1028]!	; 0xfffffbfc
    6840:	0402000d 	streq	r0, [r2], #-13
    6844:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    6848:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    684c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6850:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    6854:	0d052004 	stceq	0, cr2, [r5, #-16]
    6858:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    685c:	2f052106 	svccs	0x00052106
    6860:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6864:	28050106 	stmdacs	r5, {r1, r2, r8}
    6868:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    686c:	00090520 	andeq	r0, r9, r0, lsr #10
    6870:	06040402 	streq	r0, [r4], -r2, lsl #8
    6874:	002a0522 	eoreq	r0, sl, r2, lsr #10
    6878:	06040402 	streq	r0, [r4], -r2, lsl #8
    687c:	00230501 	eoreq	r0, r3, r1, lsl #10
    6880:	20040402 	andcs	r0, r4, r2, lsl #8
    6884:	02000d05 	andeq	r0, r0, #320	; 0x140
    6888:	03060404 	movweq	r0, #25604	; 0x6404
    688c:	3105200a 	tstcc	r5, sl
    6890:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6894:	2a050106 	bcs	146cb4 <__RAM_SIZE+0x46cb4>
    6898:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    689c:	000d0520 	andeq	r0, sp, r0, lsr #10
    68a0:	06040402 	streq	r0, [r4], -r2, lsl #8
    68a4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    68a8:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    68ac:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    68b0:	04020009 	streq	r0, [r2], #-9
    68b4:	05350604 	ldreq	r0, [r5, #-1540]!	; 0xfffff9fc
    68b8:	0402000b 	streq	r0, [r2], #-11
    68bc:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    68c0:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    68c4:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    68c8:	11052e0f 	tstne	r5, pc, lsl #28
    68cc:	2d053406 	cfstrscs	mvf3, [r5, #-24]	; 0xffffffe8
    68d0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    68d4:	17052706 	strne	r2, [r5, -r6, lsl #14]
    68d8:	11050106 	tstne	r5, r6, lsl #2
    68dc:	2e270306 	cdpcs	3, 2, cr0, cr7, cr6, {0}
    68e0:	05301505 	ldreq	r1, [r0, #-1285]!	; 0xfffffafb
    68e4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    68e8:	11052017 	tstne	r5, r7, lsl r0
    68ec:	09054106 	stmdbeq	r5, {r1, r2, r8, lr}
    68f0:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    68f4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    68f8:	0e03060d 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx13
    68fc:	06300520 	ldrteq	r0, [r0], -r0, lsr #10
    6900:	06230501 	strteq	r0, [r3], -r1, lsl #10
    6904:	06050531 			; <UNDEFINED> instruction: 0x06050531
    6908:	00110513 	andseq	r0, r1, r3, lsl r5
    690c:	03010402 	movweq	r0, #5122	; 0x1402
    6910:	00207efe 	strdeq	r7, [r0], -lr	; <UNPREDICTABLE>
    6914:	20010402 	andcs	r0, r1, r2, lsl #8
    6918:	01040200 	mrseq	r0, R12_usr
    691c:	2d030620 	stccs	6, cr0, [r3, #-128]	; 0xffffff80
    6920:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    6924:	19052001 	stmdbne	r5, {r0, sp}
    6928:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    692c:	05301d05 	ldreq	r1, [r0, #-3333]!	; 0xfffff2fb
    6930:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6934:	2105201f 	tstcs	r5, pc, lsl r0
    6938:	3d052206 	sfmcc	f2, 4, [r5, #-24]	; 0xffffffe8
    693c:	19050106 	stmdbne	r5, {r1, r2, r8}
    6940:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
    6944:	01062205 	tsteq	r6, r5, lsl #4
    6948:	03062d05 	movweq	r2, #27909	; 0x6d05
    694c:	49053c78 	stmdbmi	r5, {r3, r4, r5, r6, sl, fp, ip, sp}
    6950:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6954:	0521062d 	streq	r0, [r1, #-1581]!	; 0xfffff9d3
    6958:	051b062c 	ldreq	r0, [fp, #-1580]	; 0xfffff9d4
    695c:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    6960:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    6964:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    6968:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    696c:	05300629 	ldreq	r0, [r0, #-1577]!	; 0xfffff9d7
    6970:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    6974:	7a054a2b 	bvc	159228 <__RAM_SIZE+0x59228>
    6978:	02040200 	andeq	r0, r4, #0, 4
    697c:	7b052c06 	blvc	15199c <__RAM_SIZE+0x5199c>
    6980:	02040200 	andeq	r0, r4, #0, 4
    6984:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    6988:	00200204 	eoreq	r0, r0, r4, lsl #4
    698c:	20020402 	andcs	r0, r2, r2, lsl #8
    6990:	03061905 	movweq	r1, #26885	; 0x6905
    6994:	35050118 	strcc	r0, [r5, #-280]	; 0xfffffee8
    6998:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    699c:	2b054406 	blcs	1579bc <__RAM_SIZE+0x579bc>
    69a0:	29050106 	stmdbcs	r5, {r1, r2, r8}
    69a4:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    69a8:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    69ac:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    69b0:	06023c34 			; <UNDEFINED> instruction: 0x06023c34
    69b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    69b8:	02050005 	andeq	r0, r5, #5
    69bc:	00000000 	andeq	r0, r0, r0
    69c0:	0130fe03 	teqeq	r0, r3, lsl #28	; <UNPREDICTABLE>
    69c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    69c8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    69cc:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    69d0:	13210609 			; <UNDEFINED> instruction: 0x13210609
    69d4:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    69d8:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    69dc:	42060d05 	andmi	r0, r6, #320	; 0x140
    69e0:	01061d05 	tsteq	r6, r5, lsl #26
    69e4:	75031505 	strvc	r1, [r3, #-1285]	; 0xfffffafb
    69e8:	030d0520 	movweq	r0, #54560	; 0xd520
    69ec:	1105200b 	tstne	r5, fp
    69f0:	03040200 	movweq	r0, #16896	; 0x4200
    69f4:	02002506 	andeq	r2, r0, #25165824	; 0x1800000
    69f8:	00140304 	andseq	r0, r4, r4, lsl #6
    69fc:	83030402 	movwhi	r0, #13314	; 0x3402
    6a00:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    6a04:	01060304 	tsteq	r6, r4, lsl #6
    6a08:	02005805 	andeq	r5, r0, #327680	; 0x50000
    6a0c:	03060304 	movweq	r0, #25348	; 0x6304
    6a10:	63052078 	movwvs	r2, #20600	; 0x5078
    6a14:	03040200 	movweq	r0, #16896	; 0x4200
    6a18:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    6a1c:	01040200 	mrseq	r0, R12_usr
    6a20:	0d052006 	stceq	0, cr2, [r5, #-24]	; 0xffffffe8
    6a24:	01040200 	mrseq	r0, R12_usr
    6a28:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6a2c:	3c2e1103 	stfccs	f1, [lr], #-12
    6a30:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6a34:	02050005 	andeq	r0, r5, #5
    6a38:	00000000 	andeq	r0, r0, r0
    6a3c:	0122a303 			; <UNDEFINED> instruction: 0x0122a303
    6a40:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6a44:	5b055906 	blpl	15ce64 <__RAM_SIZE+0x5ce64>
    6a48:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6a4c:	05310d05 	ldreq	r0, [r1, #-3333]!	; 0xfffff2fb
    6a50:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    6a54:	21052e0f 	tstcs	r5, pc, lsl #28
    6a58:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    6a5c:	11052015 	tstne	r5, r5, lsl r0
    6a60:	01040200 	mrseq	r0, R12_usr
    6a64:	200b0306 	andcs	r0, fp, r6, lsl #6
    6a68:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    6a6c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    6a70:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    6a74:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6a78:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    6a7c:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
    6a80:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    6a84:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6a88:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    6a8c:	1805ac01 	stmdane	r5, {r0, sl, fp, sp, pc}
    6a90:	01040200 	mrseq	r0, R12_usr
    6a94:	11052106 	tstne	r5, r6, lsl #2
    6a98:	01040200 	mrseq	r0, R12_usr
    6a9c:	32060106 	andcc	r0, r6, #-2147483647	; 0x80000001
    6aa0:	01066705 	tsteq	r6, r5, lsl #14
    6aa4:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    6aa8:	11057418 	tstne	r5, r8, lsl r4
    6aac:	35052106 	strcc	r2, [r5, #-262]	; 0xfffffefa
    6ab0:	18050106 	stmdane	r5, {r1, r2, r8}
    6ab4:	06150574 			; <UNDEFINED> instruction: 0x06150574
    6ab8:	06390526 	ldrteq	r0, [r9], -r6, lsr #10
    6abc:	661c0501 	ldrvs	r0, [ip], -r1, lsl #10
    6ac0:	28061505 	stmdacs	r6, {r0, r2, r8, sl, ip}
    6ac4:	01063905 	tsteq	r6, r5, lsl #18
    6ac8:	05661c05 	strbeq	r1, [r6, #-3077]!	; 0xfffff3fb
    6acc:	11030615 	tstne	r3, r5, lsl r6
    6ad0:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    6ad4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6ad8:	062a0522 	strteq	r0, [sl], -r2, lsr #10
    6adc:	03150501 	tsteq	r5, #4194304	; 0x400000
    6ae0:	29053c4b 	stmdbcs	r5, {r0, r1, r3, r6, sl, fp, ip, sp}
    6ae4:	203c0306 	eorscs	r0, ip, r6, lsl #6
    6ae8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    6aec:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6af0:	05300633 	ldreq	r0, [r0, #-1587]!	; 0xfffff9cd
    6af4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    6af8:	023c1306 	eorseq	r1, ip, #402653184	; 0x18000000
    6afc:	0101000c 	tsteq	r1, ip
    6b00:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6b04:	00000002 	andeq	r0, r0, r2
    6b08:	31e30300 	mvncc	r0, r0, lsl #6
    6b0c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6b10:	13210609 			; <UNDEFINED> instruction: 0x13210609
    6b14:	14380513 	ldrtne	r0, [r8], #-1299	; 0xfffffaed
    6b18:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6b1c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6b20:	0402000d 	streq	r0, [r2], #-13
    6b24:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    6b28:	04020009 	streq	r0, [r2], #-9
    6b2c:	24051a04 	strcs	r1, [r5], #-2564	; 0xfffff5fc
    6b30:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6b34:	3c050106 	stfccs	f0, [r5], {6}
    6b38:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6b3c:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    6b40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6b44:	00050514 	andeq	r0, r5, r4, lsl r5
    6b48:	06040402 	streq	r0, [r4], -r2, lsl #8
    6b4c:	00110513 	andseq	r0, r1, r3, lsl r5
    6b50:	03010402 	movweq	r0, #5122	; 0x1402
    6b54:	0200206f 	andeq	r2, r0, #111	; 0x6f
    6b58:	022e0104 	eoreq	r0, lr, #4, 2
    6b5c:	01010003 	tsteq	r1, r3
    6b60:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    6b64:	00305002 	eorseq	r5, r0, r2
    6b68:	32d00310 	sbcscc	r0, r0, #16, 6	; 0x40000000
    6b6c:	130d0501 	movwne	r0, #54529	; 0xd501
    6b70:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    6b74:	1505170d 	strne	r1, [r5, #-1805]	; 0xfffff8f3
    6b78:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    6b7c:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    6b80:	06090514 			; <UNDEFINED> instruction: 0x06090514
    6b84:	00040213 	andeq	r0, r4, r3, lsl r2
    6b88:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6b8c:	00020500 	andeq	r0, r2, r0, lsl #10
    6b90:	03000000 	movweq	r0, #0
    6b94:	050132f3 	streq	r3, [r1, #-755]	; 0xfffffd0d
    6b98:	3f051309 	svccc	0x00051309
    6b9c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6ba0:	01060b05 	tsteq	r6, r5, lsl #22
    6ba4:	23061105 	movwcs	r1, #24837	; 0x6105
    6ba8:	01061905 	tsteq	r6, r5, lsl #18
    6bac:	0316052e 	tsteq	r6, #192937984	; 0xb800000
    6bb0:	40052079 	andmi	r2, r5, r9, ror r0
    6bb4:	200d0306 	andcs	r0, sp, r6, lsl #6
    6bb8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6bbc:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    6bc0:	01010003 	tsteq	r1, r3
    6bc4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6bc8:	00000002 	andeq	r0, r0, r2
    6bcc:	338c0300 	orrcc	r0, ip, #0, 6
    6bd0:	13090501 	movwne	r0, #38145	; 0x9501
    6bd4:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    6bd8:	1f051409 	svcne	0x00051409
    6bdc:	0b050106 	bleq	146ffc <__RAM_SIZE+0x46ffc>
    6be0:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    6be4:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    6be8:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    6bec:	1d052e13 	stcne	14, cr2, [r5, #-76]	; 0xffffffb4
    6bf0:	06360526 	ldrteq	r0, [r6], -r6, lsr #10
    6bf4:	14090528 	strne	r0, [r9], #-1320	; 0xfffffad8
    6bf8:	13060505 	movwne	r0, #25861	; 0x6505
    6bfc:	71031d05 	tstvc	r3, r5, lsl #26
    6c00:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    6c04:	06022e76 			; <UNDEFINED> instruction: 0x06022e76
    6c08:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6c0c:	02050005 	andeq	r0, r5, #5
    6c10:	00000000 	andeq	r0, r0, r0
    6c14:	0133b403 	teqeq	r3, r3, lsl #8
    6c18:	13130905 	tstne	r3, #81920	; 0x14000
    6c1c:	05143905 	ldreq	r3, [r4, #-2309]	; 0xfffff6fb
    6c20:	0b051609 	bleq	14c44c <__RAM_SIZE+0x4c44c>
    6c24:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6c28:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    6c2c:	0d03060d 	stceq	6, cr0, [r3, #-52]	; 0xffffffcc
    6c30:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    6c34:	203c0501 	eorscs	r0, ip, r1, lsl #10
    6c38:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    6c3c:	05330611 	ldreq	r0, [r3, #-1553]!	; 0xfffff9ef
    6c40:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6c44:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    6c48:	2d053006 	stccs	0, cr3, [r5, #-24]	; 0xffffffe8
    6c4c:	1711056a 	ldrne	r0, [r1, -sl, ror #10]
    6c50:	01061505 	tsteq	r6, r5, lsl #10
    6c54:	05661305 	strbeq	r1, [r6, #-773]!	; 0xfffffcfb
    6c58:	1f030615 	svcne	0x00030615
    6c5c:	0640052e 	strbeq	r0, [r0], -lr, lsr #10
    6c60:	3c320501 	cfldr32cc	mvfx0, [r2], #-4
    6c64:	05261905 	streq	r1, [r6, #-2309]!	; 0xfffff6fb
    6c68:	201d0305 	andscs	r0, sp, r5, lsl #6
    6c6c:	03061505 	movweq	r1, #25861	; 0x6505
    6c70:	19052040 	stmdbne	r5, {r6, sp}
    6c74:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    6c78:	09030631 	stmdbeq	r3, {r0, r4, r5, r9, sl}
    6c7c:	1615052e 	ldrne	r0, [r5], -lr, lsr #10
    6c80:	01064005 	tsteq	r6, r5
    6c84:	053c3205 	ldreq	r3, [ip, #-517]!	; 0xfffffdfb
    6c88:	01210615 			; <UNDEFINED> instruction: 0x01210615
    6c8c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    6c90:	004a0104 	subeq	r0, sl, r4, lsl #2
    6c94:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6c98:	03040200 	movweq	r0, #16896	; 0x4200
    6c9c:	04020001 	streq	r0, [r2], #-1
    6ca0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6ca4:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6ca8:	01030402 	tsteq	r3, r2, lsl #8
    6cac:	03040200 	movweq	r0, #16896	; 0x4200
    6cb0:	04020001 	streq	r0, [r2], #-1
    6cb4:	02002003 	andeq	r2, r0, #3
    6cb8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6cbc:	20030402 	andcs	r0, r3, r2, lsl #8
    6cc0:	03040200 	movweq	r0, #16896	; 0x4200
    6cc4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6cc8:	00200603 	eoreq	r0, r0, r3, lsl #12
    6ccc:	06030402 	streq	r0, [r3], -r2, lsl #8
    6cd0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6cd4:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6cd8:	00010304 	andeq	r0, r1, r4, lsl #6
    6cdc:	01030402 	tsteq	r3, r2, lsl #8
    6ce0:	02001905 	andeq	r1, r0, #81920	; 0x14000
    6ce4:	03060304 	movweq	r0, #25348	; 0x6304
    6ce8:	11050115 	tstne	r5, r5, lsl r1
    6cec:	25053206 	strcs	r3, [r5, #-518]	; 0xfffffdfa
    6cf0:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    6cf4:	3c130520 	cfldr32cc	mvfx0, [r3], {32}
    6cf8:	bc031405 	cfstrslt	mvf1, [r3], {5}
    6cfc:	20202e7f 	eorcs	r2, r0, pc, ror lr
    6d00:	dd030505 	cfstr32le	mvfx0, [r3, #-20]	; 0xffffffec
    6d04:	1d052000 	stcne	0, cr2, [r5, #-0]
    6d08:	05207003 	streq	r7, [r0, #-3]!
    6d0c:	0a030625 	beq	c85a8 <__HEAP_SIZE+0xc75a8>
    6d10:	15340520 	ldrne	r0, [r4, #-1312]!	; 0xfffffae0
    6d14:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6d18:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    6d1c:	01010008 	tsteq	r1, r8
    6d20:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6d24:	00305c02 	eorseq	r5, r0, r2, lsl #24
    6d28:	349b0310 	ldrcc	r0, [fp], #784	; 0x310
    6d2c:	13090501 	movwne	r0, #38145	; 0x9501
    6d30:	143c0513 	ldrtne	r0, [ip], #-1299	; 0xfffffaed
    6d34:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6d38:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6d3c:	2e7a0305 	cdpcs	3, 7, cr0, cr10, cr5, {0}
    6d40:	03063205 	movweq	r3, #25093	; 0x6205
    6d44:	31052e0c 	tstcc	r5, ip, lsl #28
    6d48:	130d0513 	movwne	r0, #54547	; 0xd513
    6d4c:	01061405 	tsteq	r6, r5, lsl #8
    6d50:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    6d54:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    6d58:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6d5c:	0f05202b 	svceq	0x0005202b
    6d60:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6d64:	06130531 			; <UNDEFINED> instruction: 0x06130531
    6d68:	03140501 	tsteq	r4, #4194304	; 0x400000
    6d6c:	2505206d 	strcs	r2, [r5, #-109]	; 0xffffff93
    6d70:	00ce0306 	sbceq	r0, lr, r6, lsl #6
    6d74:	15370520 	ldrne	r0, [r7, #-1312]!	; 0xfffffae0
    6d78:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6d7c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6d80:	46030615 			; <UNDEFINED> instruction: 0x46030615
    6d84:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    6d88:	31052e01 	tstcc	r5, r1, lsl #28
    6d8c:	52053406 	andpl	r3, r5, #100663296	; 0x6000000
    6d90:	13150517 	tstne	r5, #96468992	; 0x5c00000
    6d94:	01062e05 	tsteq	r6, r5, lsl #28
    6d98:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    6d9c:	3d250615 	stccc	6, cr0, [r5, #-84]!	; 0xffffffac
    6da0:	00010101 	andeq	r0, r1, r1, lsl #2
    6da4:	4a010402 	bmi	47db4 <__HEAP_SIZE+0x46db4>
    6da8:	03040200 	movweq	r0, #16896	; 0x4200
    6dac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6db0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6db4:	00010304 	andeq	r0, r1, r4, lsl #6
    6db8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6dbc:	03040200 	movweq	r0, #16896	; 0x4200
    6dc0:	04020001 	streq	r0, [r2], #-1
    6dc4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6dc8:	00200304 	eoreq	r0, r0, r4, lsl #6
    6dcc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6dd0:	03040200 	movweq	r0, #16896	; 0x4200
    6dd4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6dd8:	02002003 	andeq	r2, r0, #3
    6ddc:	20060304 	andcs	r0, r6, r4, lsl #6
    6de0:	03040200 	movweq	r0, #16896	; 0x4200
    6de4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6de8:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6dec:	01030402 	tsteq	r3, r2, lsl #8
    6df0:	03040200 	movweq	r0, #16896	; 0x4200
    6df4:	04020001 	streq	r0, [r2], #-1
    6df8:	01140303 	tsteq	r4, r3, lsl #6
    6dfc:	02001d05 	andeq	r1, r0, #320	; 0x140
    6e00:	01060304 	tsteq	r6, r4, lsl #6
    6e04:	40031405 	andmi	r1, r3, r5, lsl #8
    6e08:	0305052e 	movweq	r0, #21806	; 0x552e
    6e0c:	052000d4 	streq	r0, [r0, #-212]!	; 0xffffff2c
    6e10:	7fac0314 	svcvc	0x00ac0314
    6e14:	06022020 	streq	r2, [r2], -r0, lsr #32
    6e18:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6e1c:	02050005 	andeq	r0, r5, #5
    6e20:	00000000 	andeq	r0, r0, r0
    6e24:	0134fa03 	teqeq	r4, r3, lsl #20	; <UNPREDICTABLE>
    6e28:	13130905 	tstne	r3, #81920	; 0x14000
    6e2c:	14660513 	strbtne	r0, [r6], #-1299	; 0xfffffaed
    6e30:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6e34:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6e38:	2e790305 	cdpcs	3, 7, cr0, cr9, cr5, {0}
    6e3c:	03063105 	movweq	r3, #24837	; 0x6105
    6e40:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    6e44:	06160518 			; <UNDEFINED> instruction: 0x06160518
    6e48:	200f0501 	andcs	r0, pc, r1, lsl #10
    6e4c:	05302105 	ldreq	r2, [r0, #-261]!	; 0xfffffefb
    6e50:	0528060d 	streq	r0, [r8, #-1549]!	; 0xfffff9f3
    6e54:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6e58:	1105200f 	tstne	r5, pc
    6e5c:	1a053406 	bne	153e7c <__RAM_SIZE+0x53e7c>
    6e60:	13050106 	movwne	r0, #20742	; 0x5106
    6e64:	03050520 	movweq	r0, #21792	; 0x5520
    6e68:	052e00ce 	streq	r0, [lr, #-206]!	; 0xffffff32
    6e6c:	b703063a 	smladxlt	r3, sl, r6, r0
    6e70:	4c05207f 	stcmi	0, cr2, [r5], {127}	; 0x7f
    6e74:	13150517 	tstne	r5, #96468992	; 0x5c00000
    6e78:	06270513 			; <UNDEFINED> instruction: 0x06270513
    6e7c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    6e80:	061b0524 	ldreq	r0, [fp], -r4, lsr #10
    6e84:	20170501 	andscs	r0, r7, r1, lsl #10
    6e88:	30061905 	andcc	r1, r6, r5, lsl #18
    6e8c:	31052e06 	tstcc	r5, r6, lsl #28
    6e90:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    6e94:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    6e98:	3c010619 	stccc	6, cr0, [r1], {25}
    6e9c:	053c1705 	ldreq	r1, [ip, #-1797]!	; 0xfffff8fb
    6ea0:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    6ea4:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
    6ea8:	03063505 	movweq	r3, #25861	; 0x6505
    6eac:	19052e09 	stmdbne	r5, {r0, r3, r9, sl, fp, sp}
    6eb0:	01010115 	tsteq	r1, r5, lsl r1
    6eb4:	01040200 	mrseq	r0, R12_usr
    6eb8:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6ebc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6ec0:	00010304 	andeq	r0, r1, r4, lsl #6
    6ec4:	01030402 	tsteq	r3, r2, lsl #8
    6ec8:	03040200 	movweq	r0, #16896	; 0x4200
    6ecc:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    6ed0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6ed4:	00010304 	andeq	r0, r1, r4, lsl #6
    6ed8:	20030402 	andcs	r0, r3, r2, lsl #8
    6edc:	03040200 	movweq	r0, #16896	; 0x4200
    6ee0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6ee4:	02002003 	andeq	r2, r0, #3
    6ee8:	00200304 	eoreq	r0, r0, r4, lsl #6
    6eec:	06030402 	streq	r0, [r3], -r2, lsl #8
    6ef0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6ef4:	00580603 	subseq	r0, r8, r3, lsl #12
    6ef8:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6efc:	03040200 	movweq	r0, #16896	; 0x4200
    6f00:	04020001 	streq	r0, [r2], #-1
    6f04:	25050103 	strcs	r0, [r5, #-259]	; 0xfffffefd
    6f08:	03040200 	movweq	r0, #16896	; 0x4200
    6f0c:	05011d03 	streq	r1, [r1, #-3331]	; 0xfffff2fd
    6f10:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    6f14:	05051503 	streq	r1, [r5, #-1283]	; 0xfffffafd
    6f18:	03040200 	movweq	r0, #16896	; 0x4200
    6f1c:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    6f20:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    6f24:	01010006 	tsteq	r1, r6
    6f28:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6f2c:	00000002 	andeq	r0, r0, r2
    6f30:	3b910300 	blcc	fe447b38 <__StackTop+0xc6347b38>
    6f34:	13050501 	movwne	r0, #21761	; 0x5501
    6f38:	05142b05 	ldreq	r2, [r4, #-2821]	; 0xfffff4fb
    6f3c:	10051405 	andne	r1, r5, r5, lsl #8
    6f40:	0e050106 	adfeqs	f0, f5, f6
    6f44:	0605052e 	streq	r0, [r5], -lr, lsr #10
    6f48:	68360524 	ldmdavs	r6!, {r2, r5, r8, sl}
    6f4c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    6f50:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    6f54:	01010003 	tsteq	r1, r3
    6f58:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6f5c:	00000002 	andeq	r0, r0, r2
    6f60:	3ba50300 	blcc	fe947b68 <__StackTop+0xc6847b68>
    6f64:	13090501 	movwne	r0, #38145	; 0x9501
    6f68:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    6f6c:	0f051409 	svceq	0x00051409
    6f70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6f74:	0b053206 	bleq	153794 <__RAM_SIZE+0x53794>
    6f78:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6f7c:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    6f80:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6f84:	063b0520 	ldrteq	r0, [fp], -r0, lsr #10
    6f88:	14090531 	strne	r0, [r9], #-1329	; 0xfffffacf
    6f8c:	13060505 	movwne	r0, #25861	; 0x6505
    6f90:	01000402 	tsteq	r0, r2, lsl #8
    6f94:	00050501 	andeq	r0, r5, r1, lsl #10
    6f98:	00000205 	andeq	r0, r0, r5, lsl #4
    6f9c:	c0030000 	andgt	r0, r3, r0
    6fa0:	0106013b 	tsteq	r6, fp, lsr r1
    6fa4:	4b060905 	blmi	1893c0 <__RAM_SIZE+0x893c0>
    6fa8:	145f0513 	ldrbne	r0, [pc], #-1299	; 6fb0 <__HEAP_SIZE+0x5fb0>
    6fac:	05145005 	ldreq	r5, [r4, #-5]
    6fb0:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    6fb4:	31110534 	tstcc	r1, r4, lsr r5
    6fb8:	01062105 	tsteq	r6, r5, lsl #2
    6fbc:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
    6fc0:	15055813 	strne	r5, [r5, #-2067]	; 0xfffff7ed
    6fc4:	21052306 	tstcs	r5, r6, lsl #6
    6fc8:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    6fcc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6fd0:	0617054c 	ldreq	r0, [r7], -ip, asr #10
    6fd4:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    6fd8:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    6fdc:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    6fe0:	09051929 	stmdbeq	r5, {r0, r3, r5, r8, fp, ip}
    6fe4:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    6fe8:	06090501 	streq	r0, [r9], -r1, lsl #10
    6fec:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    6ff0:	06250501 	strteq	r0, [r5], -r1, lsl #10
    6ff4:	15090526 	strne	r0, [r9, #-1318]	; 0xfffffada
    6ff8:	05303505 	ldreq	r3, [r0, #-1285]!	; 0xfffffafb
    6ffc:	2405130d 	strcs	r1, [r5], #-781	; 0xfffffcf3
    7000:	16050106 	strne	r0, [r5], -r6, lsl #2
    7004:	060d052e 	streq	r0, [sp], -lr, lsr #10
    7008:	060f055a 			; <UNDEFINED> instruction: 0x060f055a
    700c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7010:	06130522 	ldreq	r0, [r3], -r2, lsr #10
    7014:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    7018:	06210522 	strteq	r0, [r1], -r2, lsr #10
    701c:	2e460501 	cdpcs	5, 4, cr0, cr6, cr1, {0}
    7020:	03062905 	movweq	r2, #26885	; 0x6905
    7024:	0d054a09 	vstreq	s8, [r5, #-36]	; 0xffffffdc
    7028:	06190515 			; <UNDEFINED> instruction: 0x06190515
    702c:	2e3c0501 	cdpcs	5, 3, cr0, cr12, cr1, {0}
    7030:	06090520 	streq	r0, [r9], -r0, lsr #10
    7034:	3038053e 	eorscc	r0, r8, lr, lsr r5
    7038:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    703c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7040:	4603062d 	strmi	r0, [r3], -sp, lsr #12
    7044:	150d052e 	strne	r0, [sp, #-1326]	; 0xfffffad2
    7048:	06250533 			; <UNDEFINED> instruction: 0x06250533
    704c:	20015703 	andcs	r5, r1, r3, lsl #14
    7050:	03061905 	movweq	r1, #26885	; 0x6905
    7054:	2d052018 	stccs	0, cr2, [r5, #-96]	; 0xffffffa0
    7058:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    705c:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    7060:	1105143f 	tstne	r5, pc, lsr r4
    7064:	06260513 			; <UNDEFINED> instruction: 0x06260513
    7068:	204a6c03 	subcs	r6, sl, r3, lsl #24
    706c:	02002805 	andeq	r2, r0, #327680	; 0x50000
    7070:	1e030104 	adfnes	f0, f3, f4
    7074:	060d0520 	streq	r0, [sp], -r0, lsr #10
    7078:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    707c:	14030615 	strne	r0, [r3], #-1557	; 0xfffff9eb
    7080:	06210520 	strteq	r0, [r1], -r0, lsr #10
    7084:	2e510501 	cdpcs	5, 5, cr0, cr1, cr1, {0}
    7088:	02204605 	eoreq	r4, r0, #5242880	; 0x500000
    708c:	01010009 	tsteq	r1, r9
    7090:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7094:	00000002 	andeq	r0, r0, r2
    7098:	3ca90300 	stccc	3, cr0, [r9]
    709c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    70a0:	05750609 	ldrbeq	r0, [r5, #-1545]!	; 0xfffff9f7
    70a4:	0514018c 	ldreq	r0, [r4, #-396]	; 0xfffffe74
    70a8:	09051450 	stmdbeq	r5, {r4, r6, sl, ip}
    70ac:	330d0516 	movwcc	r0, #54550	; 0xd516
    70b0:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    70b4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    70b8:	13052e30 	movwne	r2, #24112	; 0x5e30
    70bc:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    70c0:	06460533 			; <UNDEFINED> instruction: 0x06460533
    70c4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    70c8:	062105a1 	strteq	r0, [r1], -r1, lsr #11
    70cc:	20440501 	subcs	r0, r4, r1, lsl #10
    70d0:	4c061505 	cfstr32mi	mvfx1, [r6], {5}
    70d4:	01061705 	tsteq	r6, r5, lsl #14
    70d8:	03062d05 	movweq	r2, #27909	; 0x6d05
    70dc:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    70e0:	29053315 	stmdbcs	r5, {r0, r2, r4, r8, r9, ip, sp}
    70e4:	15090519 	strne	r0, [r9, #-1305]	; 0xfffffae7
    70e8:	01061b05 	tsteq	r6, r5, lsl #22
    70ec:	31060905 	tstcc	r6, r5, lsl #18
    70f0:	01060b05 	tsteq	r6, r5, lsl #22
    70f4:	26062505 	strcs	r2, [r6], -r5, lsl #10
    70f8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    70fc:	0d053035 	stceq	0, cr3, [r5, #-212]	; 0xffffff2c
    7100:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    7104:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7108:	06350524 	ldrteq	r0, [r5], -r4, lsr #10
    710c:	2e460501 	cdpcs	5, 4, cr0, cr6, cr1, {0}
    7110:	05582705 	ldrbeq	r2, [r8, #-1797]	; 0xfffff8fb
    7114:	0527060d 	streq	r0, [r7, #-1549]!	; 0xfffff9f3
    7118:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    711c:	0f052e2c 	svceq	0x00052e2c
    7120:	3119054a 	tstcc	r9, sl, asr #10
    7124:	03060d05 	movweq	r0, #27909	; 0x6d05
    7128:	1905200a 	stmdbne	r5, {r1, r3, sp}
    712c:	3c050106 	stfccs	f0, [r5], {6}
    7130:	0905202e 	stmdbeq	r5, {r1, r2, r3, r5, sp}
    7134:	36053e06 	strcc	r3, [r5], -r6, lsl #28
    7138:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    713c:	13060505 	movwne	r0, #25861	; 0x6505
    7140:	03062d05 	movweq	r2, #27909	; 0x6d05
    7144:	053c7fbf 	ldreq	r7, [ip, #-4031]!	; 0xfffff041
    7148:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    714c:	5303062e 	movwpl	r0, #13870	; 0x362e
    7150:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    7154:	052e1c03 	streq	r1, [lr, #-3075]!	; 0xfffff3fd
    7158:	0109032d 	tsteq	r9, sp, lsr #6
    715c:	33150d05 	tstcc	r5, #320	; 0x140
    7160:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    7164:	26051311 			; <UNDEFINED> instruction: 0x26051311
    7168:	4a6c0306 	bmi	1b07d88 <__RAM_SIZE+0x1a07d88>
    716c:	02002805 	andeq	r2, r0, #327680	; 0x50000
    7170:	1e030104 	adfnes	f0, f3, f4
    7174:	060d052e 	streq	r0, [sp], -lr, lsr #10
    7178:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    717c:	1f030611 	svcne	0x00030611
    7180:	06420520 	strbeq	r0, [r2], -r0, lsr #10
    7184:	11059001 	tstne	r5, r1
    7188:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    718c:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    7190:	01010003 	tsteq	r1, r3
    7194:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7198:	00000002 	andeq	r0, r0, r2
    719c:	3d9c0300 	ldccc	3, cr0, [ip]
    71a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    71a4:	13830609 	orrne	r0, r3, #9437184	; 0x900000
    71a8:	14780513 	ldrbtne	r0, [r8], #-1299	; 0xfffffaed
    71ac:	05145005 	ldreq	r5, [r4, #-5]
    71b0:	09051326 	stmdbeq	r5, {r1, r2, r5, r8, r9, ip}
    71b4:	0d051413 	cfstrseq	mvf1, [r5, #-76]	; 0xffffffb4
    71b8:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    71bc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    71c0:	0647053e 			; <UNDEFINED> instruction: 0x0647053e
    71c4:	582f0501 	stmdapl	pc!, {r0, r8, sl}	; <UNPREDICTABLE>
    71c8:	31060d05 	tstcc	r6, r5, lsl #26
    71cc:	01062305 	tsteq	r6, r5, lsl #6
    71d0:	4c060d05 	stcmi	13, cr0, [r6], {5}
    71d4:	01063505 	tsteq	r6, r5, lsl #10
    71d8:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    71dc:	05771505 	ldrbeq	r1, [r7, #-1285]!	; 0xfffffafb
    71e0:	2001063f 	andcs	r0, r1, pc, lsr r6
    71e4:	15052e2e 	strne	r2, [r5, #-3630]	; 0xfffff1d2
    71e8:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    71ec:	01680306 	cmneq	r8, r6, lsl #6
    71f0:	03063005 	movweq	r3, #24581	; 0x6005
    71f4:	052000c0 	streq	r0, [r0, #-192]!	; 0xffffff40
    71f8:	0f05160d 	svceq	0x0005160d
    71fc:	29050106 	stmdbcs	r5, {r1, r2, r8}
    7200:	2e1e0306 	cdpcs	3, 1, cr0, cr14, cr6, {0}
    7204:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    7208:	09053032 	stmdbeq	r5, {r1, r4, r5, ip, sp}
    720c:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7210:	06150513 			; <UNDEFINED> instruction: 0x06150513
    7214:	3c7fb103 	ldfccp	f3, [pc], #-12	; 7210 <__HEAP_SIZE+0x6210>
    7218:	01062d05 	tsteq	r6, r5, lsl #26
    721c:	42052e20 	andmi	r2, r5, #32, 28	; 0x200
    7220:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7224:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    7228:	05016403 	streq	r6, [r1, #-1027]	; 0xfffffbfd
    722c:	201c0315 	andscs	r0, ip, r5, lsl r3
    7230:	3f052306 	svccc	0x00052306
    7234:	2e200106 	sufcss	f0, f0, f6
    7238:	21061505 	tstcs	r6, r5, lsl #10
    723c:	03061405 	movweq	r1, #25605	; 0x6405
    7240:	15050160 	strne	r0, [r5, #-352]	; 0xfffffea0
    7244:	06202003 	strteq	r2, [r0], -r3
    7248:	06170524 	ldreq	r0, [r7], -r4, lsr #10
    724c:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    7250:	06430530 			; <UNDEFINED> instruction: 0x06430530
    7254:	052e2001 	streq	r2, [lr, #-1]!
    7258:	205a0314 	subscs	r0, sl, r4, lsl r3
    725c:	14030d05 	strne	r0, [r3], #-3333	; 0xfffff2fb
    7260:	2105202e 	tstcs	r5, lr, lsr #32
    7264:	20201703 	eorcs	r1, r0, r3, lsl #14
    7268:	03061105 	movweq	r1, #24837	; 0x6105
    726c:	2001201b 	andcs	r2, r1, fp, lsl r0
    7270:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
    7274:	004a0304 	subeq	r0, sl, r4, lsl #6
    7278:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    727c:	03040200 	movweq	r0, #16896	; 0x4200
    7280:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7284:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    7288:	00010304 	andeq	r0, r1, r4, lsl #6
    728c:	01030402 	tsteq	r3, r2, lsl #8
    7290:	03040200 	movweq	r0, #16896	; 0x4200
    7294:	04020001 	streq	r0, [r2], #-1
    7298:	00200603 	eoreq	r0, r0, r3, lsl #12
    729c:	06010402 	streq	r0, [r1], -r2, lsl #8
    72a0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    72a4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    72a8:	00010304 	andeq	r0, r1, r4, lsl #6
    72ac:	01030402 	tsteq	r3, r2, lsl #8
    72b0:	03040200 	movweq	r0, #16896	; 0x4200
    72b4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    72b8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    72bc:	00010304 	andeq	r0, r1, r4, lsl #6
    72c0:	20030402 	andcs	r0, r3, r2, lsl #8
    72c4:	03040200 	movweq	r0, #16896	; 0x4200
    72c8:	02002006 	andeq	r2, r0, #6
    72cc:	20060304 	andcs	r0, r6, r4, lsl #6
    72d0:	03040200 	movweq	r0, #16896	; 0x4200
    72d4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    72d8:	02002003 	andeq	r2, r0, #3
    72dc:	20060304 	andcs	r0, r6, r4, lsl #6
    72e0:	03040200 	movweq	r0, #16896	; 0x4200
    72e4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    72e8:	00740304 	rsbseq	r0, r4, r4, lsl #6
    72ec:	01030402 	tsteq	r3, r2, lsl #8
    72f0:	03040200 	movweq	r0, #16896	; 0x4200
    72f4:	005e0501 	subseq	r0, lr, r1, lsl #10
    72f8:	15030402 	strne	r0, [r3, #-1026]	; 0xfffffbfe
    72fc:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    7300:	0e030304 	cdpeq	3, 0, cr0, cr3, cr4, {0}
    7304:	00110501 	andseq	r0, r1, r1, lsl #10
    7308:	34030402 	strcc	r0, [r3], #-1026	; 0xfffffbfe
    730c:	03040200 	movweq	r0, #16896	; 0x4200
    7310:	04020001 	streq	r0, [r2], #-1
    7314:	02006601 	andeq	r6, r0, #1048576	; 0x100000
    7318:	68030104 	stmdavs	r3, {r2, r8}
    731c:	000a023c 	andeq	r0, sl, ip, lsr r2
    7320:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7324:	00020500 	andeq	r0, r2, r0, lsl #10
    7328:	03000000 	movweq	r0, #0
    732c:	06013e95 			; <UNDEFINED> instruction: 0x06013e95
    7330:	06090501 	streq	r0, [r9], -r1, lsl #10
    7334:	13131383 	tstne	r3, #201326594	; 0xc000002
    7338:	14019a05 	strne	r9, [r1], #-2565	; 0xfffff5fb
    733c:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    7340:	33051350 	movwcc	r1, #21328	; 0x5350
    7344:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    7348:	05171409 	ldreq	r1, [r7, #-1033]	; 0xfffffbf7
    734c:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    7350:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    7354:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7358:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    735c:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
    7360:	0d05582f 	stceq	8, cr5, [r5, #-188]	; 0xffffff44
    7364:	23053106 	movwcs	r3, #20742	; 0x5106
    7368:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    736c:	35055906 	strcc	r5, [r5, #-2310]	; 0xfffff6fa
    7370:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7374:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    7378:	063f0577 			; <UNDEFINED> instruction: 0x063f0577
    737c:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    7380:	21061505 	tstcs	r6, r5, lsl #10
    7384:	03061405 	movweq	r1, #25605	; 0x6405
    7388:	39050153 	stmdbcc	r5, {r0, r1, r4, r6, r8}
    738c:	00d40306 	sbcseq	r0, r4, r6, lsl #6
    7390:	160d0520 	strne	r0, [sp], -r0, lsr #10
    7394:	01060f05 	tsteq	r6, r5, lsl #30
    7398:	03063105 	movweq	r3, #24837	; 0x6105
    739c:	09053c23 	stmdbeq	r5, {r0, r1, r5, sl, fp, ip, sp}
    73a0:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
    73a4:	09053039 	stmdbeq	r5, {r0, r3, r4, r5, ip, sp}
    73a8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    73ac:	06150513 			; <UNDEFINED> instruction: 0x06150513
    73b0:	3c7f9a03 			; <UNDEFINED> instruction: 0x3c7f9a03
    73b4:	01062d05 	tsteq	r6, r5, lsl #26
    73b8:	42052e20 	andmi	r2, r5, #32, 28	; 0x200
    73bc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    73c0:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    73c4:	05014f03 	streq	r4, [r1, #-3843]	; 0xfffff0fd
    73c8:	20310315 	eorscs	r0, r1, r5, lsl r3
    73cc:	3f052306 	svccc	0x00052306
    73d0:	2e200106 	sufcss	f0, f0, f6
    73d4:	21061505 	tstcs	r6, r5, lsl #10
    73d8:	03061405 	movweq	r1, #25605	; 0x6405
    73dc:	1505014b 	strne	r0, [r5, #-331]	; 0xfffffeb5
    73e0:	06203503 	strteq	r3, [r0], -r3, lsl #10
    73e4:	06170524 	ldreq	r0, [r7], -r4, lsr #10
    73e8:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    73ec:	0643053e 			; <UNDEFINED> instruction: 0x0643053e
    73f0:	052e2001 	streq	r2, [lr, #-1]!
    73f4:	20450314 	subcs	r0, r5, r4, lsl r3
    73f8:	29030d05 	stmdbcs	r3, {r0, r2, r8, sl, fp}
    73fc:	2105202e 	tstcs	r5, lr, lsr #32
    7400:	20201703 	eorcs	r1, r0, r3, lsl #14
    7404:	03065e05 	movweq	r5, #28165	; 0x6e05
    7408:	1105201b 	tstne	r5, fp, lsl r0
    740c:	062a0514 			; <UNDEFINED> instruction: 0x062a0514
    7410:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    7414:	30061505 	andcc	r1, r6, r5, lsl #10
    7418:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    741c:	03040200 	movweq	r0, #16896	; 0x4200
    7420:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    7424:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    7428:	003c0304 	eorseq	r0, ip, r4, lsl #6
    742c:	13030402 	movwne	r0, #13314	; 0x3402
    7430:	03040200 	movweq	r0, #16896	; 0x4200
    7434:	04020001 	streq	r0, [r2], #-1
    7438:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    743c:	00010304 	andeq	r0, r1, r4, lsl #6
    7440:	06030402 	streq	r0, [r3], -r2, lsl #8
    7444:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7448:	004a0601 	subeq	r0, sl, r1, lsl #12
    744c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    7450:	03040200 	movweq	r0, #16896	; 0x4200
    7454:	04020001 	streq	r0, [r2], #-1
    7458:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    745c:	00660304 	rsbeq	r0, r6, r4, lsl #6
    7460:	01030402 	tsteq	r3, r2, lsl #8
    7464:	03040200 	movweq	r0, #16896	; 0x4200
    7468:	04020001 	streq	r0, [r2], #-1
    746c:	02002003 	andeq	r2, r0, #3
    7470:	002e0304 	eoreq	r0, lr, r4, lsl #6
    7474:	20030402 	andcs	r0, r3, r2, lsl #8
    7478:	03040200 	movweq	r0, #16896	; 0x4200
    747c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7480:	00200603 	eoreq	r0, r0, r3, lsl #12
    7484:	06030402 	streq	r0, [r3], -r2, lsl #8
    7488:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    748c:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    7490:	00010304 	andeq	r0, r1, r4, lsl #6
    7494:	01030402 	tsteq	r3, r2, lsl #8
    7498:	01040200 	mrseq	r0, R12_usr
    749c:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    74a0:	1e051701 	cdpne	7, 0, cr1, cr5, cr1, {0}
    74a4:	01040200 	mrseq	r0, R12_usr
    74a8:	39050106 	stmdbcc	r5, {r1, r2, r8}
    74ac:	01040200 	mrseq	r0, R12_usr
    74b0:	00170520 	andseq	r0, r7, r0, lsr #10
    74b4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    74b8:	32061905 	andcc	r1, r6, #81920	; 0x14000
    74bc:	01061b05 	tsteq	r6, r5, lsl #22
    74c0:	30061d05 	andcc	r1, r6, r5, lsl #26
    74c4:	01063805 	tsteq	r6, r5, lsl #16
    74c8:	42061905 	andmi	r1, r6, #81920	; 0x14000
    74cc:	01062d05 	tsteq	r6, r5, lsl #26
    74d0:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    74d4:	03060104 	movweq	r0, #24836	; 0x6104
    74d8:	02004a68 	andeq	r4, r0, #104, 20	; 0x68000
    74dc:	3c060104 	stfccs	f0, [r6], {4}
    74e0:	2e011906 	vmlacs.f16	s2, s2, s12	; <UNPREDICTABLE>
    74e4:	2e200101 	sufcss	f0, f0, f1
    74e8:	0620203c 			; <UNDEFINED> instruction: 0x0620203c
    74ec:	000f0220 	andeq	r0, pc, r0, lsr #4
    74f0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    74f4:	00020500 	andeq	r0, r2, r0, lsl #10
    74f8:	03000000 	movweq	r0, #0
    74fc:	06013fb8 			; <UNDEFINED> instruction: 0x06013fb8
    7500:	06090501 	streq	r0, [r9], -r1, lsl #10
    7504:	0513134b 	ldreq	r1, [r3, #-843]	; 0xfffffcb5
    7508:	2605146e 	strcs	r1, [r5], -lr, ror #8
    750c:	13500514 	cmpne	r0, #20, 10	; 0x5000000
    7510:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    7514:	14090501 	strne	r0, [r9], #-1281	; 0xfffffaff
    7518:	06320517 			; <UNDEFINED> instruction: 0x06320517
    751c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7520:	06230530 			; <UNDEFINED> instruction: 0x06230530
    7524:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7528:	0635054b 	ldrteq	r0, [r5], -fp, asr #10
    752c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7530:	06250540 	strteq	r0, [r5], -r0, asr #10
    7534:	052e2001 	streq	r2, [lr, #-1]!
    7538:	3e05203a 	mcrcc	0, 0, r2, cr5, cr10, {1}
    753c:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    7540:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    7544:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    7548:	052e2303 	streq	r2, [lr, #-771]!	; 0xfffffcfd
    754c:	01160309 	tsteq	r6, r9, lsl #6
    7550:	05303405 	ldreq	r3, [r0, #-1029]!	; 0xfffffbfb
    7554:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7558:	4703065e 	smlsdmi	r3, lr, r6, r0
    755c:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    7560:	01062a05 	tsteq	r6, r5, lsl #20
    7564:	20130520 	andscs	r0, r3, r0, lsr #10
    7568:	30061505 	andcc	r1, r6, r5, lsl #10
    756c:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    7570:	03040200 	movweq	r0, #16896	; 0x4200
    7574:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    7578:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    757c:	003c0304 	eorseq	r0, ip, r4, lsl #6
    7580:	13030402 	movwne	r0, #13314	; 0x3402
    7584:	03040200 	movweq	r0, #16896	; 0x4200
    7588:	04020001 	streq	r0, [r2], #-1
    758c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    7590:	00010304 	andeq	r0, r1, r4, lsl #6
    7594:	06030402 	streq	r0, [r3], -r2, lsl #8
    7598:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    759c:	004a0601 	subeq	r0, sl, r1, lsl #12
    75a0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    75a4:	03040200 	movweq	r0, #16896	; 0x4200
    75a8:	04020001 	streq	r0, [r2], #-1
    75ac:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    75b0:	00660304 	rsbeq	r0, r6, r4, lsl #6
    75b4:	01030402 	tsteq	r3, r2, lsl #8
    75b8:	03040200 	movweq	r0, #16896	; 0x4200
    75bc:	04020001 	streq	r0, [r2], #-1
    75c0:	02002003 	andeq	r2, r0, #3
    75c4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    75c8:	20030402 	andcs	r0, r3, r2, lsl #8
    75cc:	03040200 	movweq	r0, #16896	; 0x4200
    75d0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    75d4:	00200603 	eoreq	r0, r0, r3, lsl #12
    75d8:	06030402 	streq	r0, [r3], -r2, lsl #8
    75dc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    75e0:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    75e4:	00010304 	andeq	r0, r1, r4, lsl #6
    75e8:	01030402 	tsteq	r3, r2, lsl #8
    75ec:	01040200 	mrseq	r0, R12_usr
    75f0:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    75f4:	1e051701 	cdpne	7, 0, cr1, cr5, cr1, {0}
    75f8:	01040200 	mrseq	r0, R12_usr
    75fc:	39050106 	stmdbcc	r5, {r1, r2, r8}
    7600:	01040200 	mrseq	r0, R12_usr
    7604:	00170520 	andseq	r0, r7, r0, lsr #10
    7608:	3c010402 	cfstrscc	mvf0, [r1], {2}
    760c:	32061905 	andcc	r1, r6, #81920	; 0x14000
    7610:	01061b05 	tsteq	r6, r5, lsl #22
    7614:	22061d05 	andcs	r1, r6, #320	; 0x140
    7618:	01063805 	tsteq	r6, r5, lsl #16
    761c:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    7620:	01062d05 	tsteq	r6, r5, lsl #26
    7624:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    7628:	03060104 	movweq	r0, #24836	; 0x6104
    762c:	02004a68 	andeq	r4, r0, #104, 20	; 0x68000
    7630:	3c060104 	stfccs	f0, [r6], {4}
    7634:	2e011906 	vmlacs.f16	s2, s2, s12	; <UNPREDICTABLE>
    7638:	2e200101 	sufcss	f0, f0, f1
    763c:	0620203c 			; <UNDEFINED> instruction: 0x0620203c
    7640:	00100220 	andseq	r0, r0, r0, lsr #4
    7644:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7648:	00020500 	andeq	r0, r2, r0, lsl #10
    764c:	03000000 	movweq	r0, #0
    7650:	0100c0ab 	smlatbeq	r0, fp, r0, ip
    7654:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7658:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    765c:	4f051449 	svcmi	0x00051449
    7660:	16090514 			; <UNDEFINED> instruction: 0x16090514
    7664:	01061105 	tsteq	r6, r5, lsl #2
    7668:	02000905 	andeq	r0, r0, #81920	; 0x14000
    766c:	30060404 	andcc	r0, r6, r4, lsl #8
    7670:	02000d05 	andeq	r0, r0, #320	; 0x140
    7674:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    7678:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    767c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    7680:	0402000f 	streq	r0, [r2], #-15
    7684:	19054a04 	stmdbne	r5, {r2, r9, fp, lr}
    7688:	06090535 			; <UNDEFINED> instruction: 0x06090535
    768c:	303c0523 	eorscc	r0, ip, r3, lsr #10
    7690:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7694:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7698:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    769c:	2e6d0301 	cdpcs	3, 6, cr0, cr13, cr1, {0}
    76a0:	01040200 	mrseq	r0, R12_usr
    76a4:	0526062e 	streq	r0, [r6, #-1582]!	; 0xfffff9d2
    76a8:	20010638 	andcs	r0, r1, r8, lsr r6
    76ac:	3d061105 	stfccs	f1, [r6, #-20]	; 0xffffffec
    76b0:	01061905 	tsteq	r6, r5, lsl #18
    76b4:	01000402 	tsteq	r0, r2, lsl #8
    76b8:	00050501 	andeq	r0, r5, r1, lsl #10
    76bc:	00000205 	andeq	r0, r0, r5, lsl #4
    76c0:	d2030000 	andle	r0, r3, #0
    76c4:	060100c0 	streq	r0, [r1], -r0, asr #1
    76c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    76cc:	5905133d 	stmdbpl	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    76d0:	144f0514 	strbne	r0, [pc], #-1300	; 76d8 <__HEAP_SIZE+0x66d8>
    76d4:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    76d8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    76dc:	04020009 	streq	r0, [r2], #-9
    76e0:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
    76e4:	0402000d 	streq	r0, [r2], #-13
    76e8:	16053204 	strne	r3, [r5], -r4, lsl #4
    76ec:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    76f0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    76f4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    76f8:	36055906 	strcc	r5, [r5], -r6, lsl #18
    76fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7700:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7704:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7708:	3e054c06 	cdpcc	12, 0, cr4, cr5, cr6, {0}
    770c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7710:	00090530 	andeq	r0, r9, r0, lsr r5
    7714:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    7718:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    771c:	13060404 	movwne	r0, #25604	; 0x6404
    7720:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    7724:	72030104 	andvc	r0, r3, #4, 2
    7728:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    772c:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    7730:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7734:	02050005 	andeq	r0, r5, #5
    7738:	100030dc 	ldrdne	r3, [r0], -ip
    773c:	00c38a03 	sbceq	r8, r3, r3, lsl #20
    7740:	13090501 	movwne	r0, #38145	; 0x9501
    7744:	1f051413 	svcne	0x00051413
    7748:	09050106 	stmdbeq	r5, {r1, r2, r8}
    774c:	21052f06 	tstcs	r5, r6, lsl #30
    7750:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7754:	1f052f06 	svcne	0x00052f06
    7758:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    775c:	0006022f 	andeq	r0, r6, pc, lsr #4
    7760:	01050101 	tsteq	r5, r1, lsl #2
    7764:	f4020500 	vst3.8	{d0,d2,d4}, [r2], r0
    7768:	03100030 	tsteq	r0, #48	; 0x30
    776c:	05011bb7 	streq	r1, [r1, #-2999]	; 0xfffff449
    7770:	13132f05 	tstne	r3, #5, 30
    7774:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    7778:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    777c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    7780:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    7784:	04020005 	streq	r0, [r2], #-5
    7788:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    778c:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    7790:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    7794:	09052e29 	stmdbeq	r5, {r0, r3, r5, r9, sl, fp, sp}
    7798:	0b055d06 	bleq	15ebb8 <__RAM_SIZE+0x5ebb8>
    779c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    77a0:	02040200 	andeq	r0, r4, #0, 4
    77a4:	6e052606 	cfmadd32vs	mvax0, mvfx2, mvfx5, mvfx6
    77a8:	02040200 	andeq	r0, r4, #0, 4
    77ac:	05017303 	streq	r7, [r1, #-771]	; 0xfffffcfd
    77b0:	02000180 	andeq	r0, r0, #128, 2
    77b4:	01060204 	tsteq	r6, r4, lsl #4
    77b8:	02040200 	andeq	r0, r4, #0, 4
    77bc:	001d0520 	andseq	r0, sp, r0, lsr #10
    77c0:	20010402 	andcs	r0, r1, r2, lsl #8
    77c4:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    77c8:	03060104 	movweq	r0, #24836	; 0x6104
    77cc:	05052012 	streq	r2, [r5, #-18]	; 0xffffffee
    77d0:	01040200 	mrseq	r0, R12_usr
    77d4:	03060106 	movweq	r0, #24838	; 0x6106
    77d8:	053c00fb 	ldreq	r0, [ip, #-251]!	; 0xffffff05
    77dc:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    77e0:	8803060d 	stmdahi	r3, {r0, r2, r3, r9, sl}
    77e4:	2f032e7f 	svccs	0x00032e7f
    77e8:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    77ec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    77f0:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    77f4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    77f8:	18110521 	ldmdane	r1, {r0, r5, r8, sl}
    77fc:	0e030d05 	cdpeq	13, 0, cr0, cr3, cr5, {0}
    7800:	062b0558 			; <UNDEFINED> instruction: 0x062b0558
    7804:	ac290501 	cfstr32ge	mvfx0, [r9], #-4
    7808:	44060d05 	strmi	r0, [r6], #-3333	; 0xfffff2fb
    780c:	01060f05 	tsteq	r6, r5, lsl #30
    7810:	06090520 	streq	r0, [r9], -r0, lsr #10
    7814:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
    7818:	56051a29 	strpl	r1, [r5], -r9, lsr #20
    781c:	017f9103 	cmneq	pc, r3, lsl #2
    7820:	01065d05 	tsteq	r6, r5, lsl #26
    7824:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    7828:	2000d703 	andcs	sp, r0, r3, lsl #14
    782c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7830:	01100306 	tsteq	r0, r6, lsl #6
    7834:	03061905 	movweq	r1, #26885	; 0x6905
    7838:	08020170 	stmdaeq	r2, {r4, r5, r6, r8}
    783c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7840:	02050001 	andeq	r0, r5, #1
    7844:	10003160 	andne	r3, r0, r0, ror #2
    7848:	011cd103 	tsteq	ip, r3, lsl #2
    784c:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    7850:	05051425 	streq	r1, [r5, #-1061]	; 0xfffffbdb
    7854:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    7858:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    785c:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    7860:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7864:	05340625 	ldreq	r0, [r4, #-1573]!	; 0xfffff9db
    7868:	07051705 	streq	r1, [r5, -r5, lsl #14]
    786c:	49050106 	stmdbmi	r5, {r1, r2, r8}
    7870:	2e3b0306 	cdpcs	3, 3, cr0, cr11, cr6, {0}
    7874:	16170505 	ldrne	r0, [r7], -r5, lsl #10
    7878:	05302605 	ldreq	r2, [r0, #-1541]!	; 0xfffff9fb
    787c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    7880:	b003060d 	andlt	r0, r3, sp, lsl #12
    7884:	1705207f 	smlsdxne	r5, pc, r0, r2	; <UNPREDICTABLE>
    7888:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    788c:	19030609 	stmdbne	r3, {r0, r3, r9, sl}
    7890:	2e0a0320 	cdpcs	3, 0, cr0, cr10, cr0, {1}
    7894:	01061e05 	tsteq	r6, r5, lsl #28
    7898:	4b060905 	blmi	189cb4 <__RAM_SIZE+0x89cb4>
    789c:	01061b05 	tsteq	r6, r5, lsl #22
    78a0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    78a4:	01061405 	tsteq	r6, r5, lsl #8
    78a8:	44063105 	strmi	r3, [r6], #-261	; 0xfffffefb
    78ac:	05142005 	ldreq	r2, [r4, #-5]
    78b0:	12051909 	andne	r1, r5, #147456	; 0x24000
    78b4:	0b020106 	bleq	87cd4 <__HEAP_SIZE+0x86cd4>
    78b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    78bc:	02050005 	andeq	r0, r5, #5
    78c0:	100031a8 	andne	r3, r0, r8, lsr #3
    78c4:	00c3b303 	sbceq	fp, r3, r3, lsl #6
    78c8:	13090501 	movwne	r0, #38145	; 0x9501
    78cc:	20051413 	andcs	r1, r5, r3, lsl r4
    78d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    78d4:	22052f06 	andcs	r2, r5, #6, 30
    78d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    78dc:	20052f06 	andcs	r2, r5, r6, lsl #30
    78e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    78e4:	0006022f 	andeq	r0, r6, pc, lsr #4
    78e8:	01050101 	tsteq	r5, r1, lsl #2
    78ec:	00020500 	andeq	r0, r2, r0, lsl #10
    78f0:	03000000 	movweq	r0, #0
    78f4:	0100c3c5 	smlabteq	r0, r5, r3, ip
    78f8:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    78fc:	16051709 	strne	r1, [r5], -r9, lsl #14
    7900:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7904:	26054206 	strcs	r4, [r5], -r6, lsl #4
    7908:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    790c:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    7910:	01061c05 	tsteq	r6, r5, lsl #24
    7914:	2f060505 	svccs	0x00060505
    7918:	01061005 	tsteq	r6, r5
    791c:	2f060505 	svccs	0x00060505
    7920:	01061805 	tsteq	r6, r5, lsl #16
    7924:	2f060505 	svccs	0x00060505
    7928:	01061705 	tsteq	r6, r5, lsl #14
    792c:	2f060505 	svccs	0x00060505
    7930:	01061205 	tsteq	r6, r5, lsl #4
    7934:	30060505 	andcc	r0, r6, r5, lsl #10
    7938:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    793c:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    7940:	04020005 	streq	r0, [r2], #-5
    7944:	06010601 	streq	r0, [r1], -r1, lsl #12
    7948:	06150533 			; <UNDEFINED> instruction: 0x06150533
    794c:	05052001 	streq	r2, [r5, #-1]
    7950:	12052f06 	andne	r2, r5, #6, 30
    7954:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7958:	1a052f06 	bne	153578 <__RAM_SIZE+0x53578>
    795c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7960:	1a053006 	bne	153980 <__RAM_SIZE+0x53980>
    7964:	01050106 	tsteq	r5, r6, lsl #2
    7968:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    796c:	04020009 	streq	r0, [r2], #-9
    7970:	6e030603 	cfmadd32vs	mvax0, mvfx0, mvfx3, mvfx3
    7974:	00230520 	eoreq	r0, r3, r0, lsr #10
    7978:	06030402 	streq	r0, [r3], -r2, lsl #8
    797c:	00380501 	eorseq	r0, r8, r1, lsl #10
    7980:	06030402 	streq	r0, [r3], -r2, lsl #8
    7984:	003f0548 	eorseq	r0, pc, r8, asr #10
    7988:	06030402 	streq	r0, [r3], -r2, lsl #8
    798c:	04020001 	streq	r0, [r2], #-1
    7990:	1a022003 	bne	8f9a4 <__HEAP_SIZE+0x8e9a4>
    7994:	18010100 	stmdane	r1, {r8}
    7998:	0300000c 	movweq	r0, #12
    799c:	00024800 	andeq	r4, r2, r0, lsl #16
    79a0:	fb010200 	blx	481aa <__HEAP_SIZE+0x471aa>
    79a4:	01000d0e 	tsteq	r0, lr, lsl #26
    79a8:	00010101 	andeq	r0, r1, r1, lsl #2
    79ac:	00010000 	andeq	r0, r1, r0
    79b0:	2e2e0100 	sufcse	f0, f6, f0
    79b4:	2f2e2e2f 	svccs	0x002e2e2f
    79b8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7908 <__HEAP_SIZE+0x6908>
    79bc:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    79c0:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    79c4:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    79c8:	00534f54 	subseq	r4, r3, r4, asr pc
    79cc:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    79d0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    79d4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    79d8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    79dc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    79e0:	615c6d61 	cmpvs	ip, r1, ror #26
    79e4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    79e8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    79ec:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    79f0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    79f4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    79f8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    79fc:	2e30312d 	rsfcssp	f3, f0, #5.0
    7a00:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7a04:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7a08:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    7a0c:	63675c62 	cmnvs	r7, #25088	; 0x6200
    7a10:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    7a14:	6f6e2d6d 	svcvs	0x006e2d6d
    7a18:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7a1c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7a20:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7a24:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    7a28:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7a2c:	63006564 	movwvs	r6, #1380	; 0x564
    7a30:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7a34:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7a38:	6f646978 	svcvs	0x00646978
    7a3c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7a40:	6172676f 	cmnvs	r2, pc, ror #14
    7a44:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7a48:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7a4c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7a50:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7a54:	6f6e2d6d 	svcvs	0x006e2d6d
    7a58:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7a5c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7a60:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7a64:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7a68:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7a6c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7a70:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7a74:	61652d65 	cmnvs	r5, r5, ror #26
    7a78:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    7a7c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7a80:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    7a84:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    7a88:	6300656e 	movwvs	r6, #1390	; 0x56e
    7a8c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7a90:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7a94:	6f646978 	svcvs	0x00646978
    7a98:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7a9c:	6172676f 	cmnvs	r2, pc, ror #14
    7aa0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7aa4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7aa8:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7aac:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7ab0:	6f6e2d6d 	svcvs	0x006e2d6d
    7ab4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7ab8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7abc:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7ac0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7ac4:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7ac8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7acc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7ad0:	61652d65 	cmnvs	r5, r5, ror #26
    7ad4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    7ad8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7adc:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    7ae0:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    7ae4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7ae8:	2f2e2e2f 	svccs	0x002e2e2f
    7aec:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    7af0:	2f736f74 	svccs	0x00736f74
    7af4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    7af8:	534f5452 	movtpl	r5, #62546	; 0xf452
    7afc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    7b00:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7b04:	2f2e2e00 	svccs	0x002e2e00
    7b08:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7b0c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    7b10:	6f747262 	svcvs	0x00747262
    7b14:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    7b18:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    7b1c:	702f534f 	eorvc	r5, pc, pc, asr #6
    7b20:	6174726f 	cmnvs	r4, pc, ror #4
    7b24:	2f656c62 	svccs	0x00656c62
    7b28:	2f434347 	svccs	0x00434347
    7b2c:	5f4d5241 	svcpl	0x004d5241
    7b30:	33334d43 	teqcc	r3, #4288	; 0x10c0
    7b34:	5a544e5f 	bpl	151b4b8 <__RAM_SIZE+0x141b4b8>
    7b38:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    7b3c:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    7b40:	00657275 	rsbeq	r7, r5, r5, ror r2
    7b44:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    7b48:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    7b4c:	00010063 	andeq	r0, r1, r3, rrx
    7b50:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    7b54:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    7b58:	00020068 	andeq	r0, r2, r8, rrx
    7b5c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    7b60:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    7b64:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    7b68:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7b6c:	00030068 	andeq	r0, r3, r8, rrx
    7b70:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    7b74:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    7b78:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    7b7c:	72700000 	rsbsvc	r0, r0, #0
    7b80:	65646a6f 	strbvs	r6, [r4, #-2671]!	; 0xfffff591
    7b84:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    7b88:	00000500 	andeq	r0, r0, r0, lsl #10
    7b8c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7b90:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    7b94:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 79e0 <__HEAP_SIZE+0x69e0>
    7b98:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    7b9c:	00060068 	andeq	r0, r6, r8, rrx
    7ba0:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
    7ba4:	4f545265 	svcmi	0x00545265
    7ba8:	00682e53 	rsbeq	r2, r8, r3, asr lr
    7bac:	6c000005 	stcvs	0, cr0, [r0], {5}
    7bb0:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    7bb4:	00050068 	andeq	r0, r5, r8, rrx
    7bb8:	73617400 	cmnvc	r1, #0, 8
    7bbc:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    7bc0:	71000005 	tstvc	r0, r5
    7bc4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    7bc8:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7bcc:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    7bd0:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    7bd4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7bd8:	6f700000 	svcvs	0x00700000
    7bdc:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    7be0:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    7be4:	00000500 	andeq	r0, r0, r0, lsl #10
    7be8:	00050500 	andeq	r0, r5, r0, lsl #10
    7bec:	31c00205 	biccc	r0, r0, r5, lsl #4
    7bf0:	cc031000 	stcgt	0, cr1, [r3], {-0}
    7bf4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7bf8:	01090313 	tsteq	r9, r3, lsl r3
    7bfc:	01061b05 	tsteq	r6, r5, lsl #22
    7c00:	02001905 	andeq	r1, r0, #81920	; 0x14000
    7c04:	05580404 	ldrbeq	r0, [r8, #-1028]	; 0xfffffbfc
    7c08:	04020009 	streq	r0, [r2], #-9
    7c0c:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    7c10:	0402000b 	streq	r0, [r2], #-11
    7c14:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    7c18:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    7c1c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7c20:	0520201d 	streq	r2, [r0, #-29]!	; 0xffffffe3
    7c24:	1d051c1b 	stcne	12, cr1, [r5, #-108]	; 0xffffff94
    7c28:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    7c2c:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    7c30:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    7c34:	01010003 	tsteq	r1, r3
    7c38:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7c3c:	0031e002 	eorseq	lr, r1, r2
    7c40:	07810310 	usada8eq	r1, r0, r3, r0
    7c44:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7c48:	14210609 	strtne	r0, [r1], #-1545	; 0xfffff9f7
    7c4c:	0b052221 	bleq	1504d8 <__RAM_SIZE+0x504d8>
    7c50:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7c54:	13053206 	movwne	r3, #20998	; 0x5206
    7c58:	4a050106 	bmi	148078 <__RAM_SIZE+0x48078>
    7c5c:	200f0520 	andcs	r0, pc, r0, lsr #10
    7c60:	05322205 	ldreq	r2, [r2, #-517]!	; 0xfffffdfb
    7c64:	20170305 	andscs	r0, r7, r5, lsl #6
    7c68:	03061105 	movweq	r1, #24837	; 0x6105
    7c6c:	2006206d 	andcs	r2, r6, sp, rrx
    7c70:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    7c74:	0d052e6f 	stceq	14, cr2, [r5, #-444]	; 0xfffffe44
    7c78:	2e160306 	cdpcs	3, 1, cr0, cr6, cr6, {0}
    7c7c:	01060f05 	tsteq	r6, r5, lsl #30
    7c80:	02002d05 	andeq	r2, r0, #320	; 0x140
    7c84:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    7c88:	09030611 	stmdbeq	r3, {r0, r4, r9, sl}
    7c8c:	2020062e 	eorcs	r0, r0, lr, lsr #12
    7c90:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    7c94:	22052e61 	andcs	r2, r5, #1552	; 0x610
    7c98:	052e1b03 	streq	r1, [lr, #-2819]!	; 0xfffff4fd
    7c9c:	05280609 	streq	r0, [r8, #-1545]!	; 0xfffff9f7
    7ca0:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    7ca4:	01010006 	tsteq	r1, r6
    7ca8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7cac:	00322802 	eorseq	r2, r2, r2, lsl #16
    7cb0:	05bd0310 	ldreq	r0, [sp, #784]!	; 0x310
    7cb4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7cb8:	054e0609 	strbeq	r0, [lr, #-1545]	; 0xfffff9f7
    7cbc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7cc0:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    7cc4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7cc8:	2a05201a 	bcs	14fd38 <__RAM_SIZE+0x4fd38>
    7ccc:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    7cd0:	06140513 			; <UNDEFINED> instruction: 0x06140513
    7cd4:	200d0501 	andcs	r0, sp, r1, lsl #10
    7cd8:	03060e05 	movweq	r0, #28165	; 0x6e05
    7cdc:	4d052e79 	stcmi	14, cr2, [r5, #-484]	; 0xfffffe1c
    7ce0:	10050106 	andne	r0, r5, r6, lsl #2
    7ce4:	660e0520 	strvs	r0, [lr], -r0, lsr #10
    7ce8:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    7cec:	0100202e 	tsteq	r0, lr, lsr #32
    7cf0:	00050501 	andeq	r0, r5, r1, lsl #10
    7cf4:	32500205 	subscc	r0, r0, #1342177280	; 0x50000000
    7cf8:	cf031000 	svcgt	0x00031000
    7cfc:	01060105 	tsteq	r6, r5, lsl #2
    7d00:	40060905 	andmi	r0, r6, r5, lsl #18
    7d04:	01063105 	tsteq	r6, r5, lsl #2
    7d08:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    7d0c:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    7d10:	20010612 	andcs	r0, r1, r2, lsl r6
    7d14:	32060905 	andcc	r0, r6, #81920	; 0x14000
    7d18:	01061605 	tsteq	r6, r5, lsl #12
    7d1c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    7d20:	0542060d 	strbeq	r0, [r2, #-1549]	; 0xfffff9f3
    7d24:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7d28:	054e0626 	strbeq	r0, [lr, #-1574]	; 0xfffff9da
    7d2c:	10051309 	andne	r1, r5, r9, lsl #6
    7d30:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7d34:	2f050520 	svccs	0x00050520
    7d38:	03060d05 	movweq	r0, #27909	; 0x6d05
    7d3c:	09022076 	stmdbeq	r2, {r1, r2, r4, r5, r6, sp}
    7d40:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7d44:	02050005 	andeq	r0, r5, #5
    7d48:	10003290 	mulne	r0, r0, r2
    7d4c:	0108be03 	tsteq	r8, r3, lsl #28
    7d50:	13210905 			; <UNDEFINED> instruction: 0x13210905
    7d54:	060e0518 			; <UNDEFINED> instruction: 0x060e0518
    7d58:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7d5c:	061f0522 	ldreq	r0, [pc], -r2, lsr #10
    7d60:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7d64:	030e0525 	movweq	r0, #58661	; 0xe525
    7d68:	10055879 	andne	r5, r5, r9, ror r8
    7d6c:	0e050106 	adfeqs	f0, f5, f6
    7d70:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    7d74:	132e0a03 			; <UNDEFINED> instruction: 0x132e0a03
    7d78:	01061c05 	tsteq	r6, r5, lsl #24
    7d7c:	4b060905 	blmi	18a198 <__RAM_SIZE+0x8a198>
    7d80:	01061d05 	tsteq	r6, r5, lsl #26
    7d84:	20210505 	eorcs	r0, r1, r5, lsl #10
    7d88:	01000502 	tsteq	r0, r2, lsl #10
    7d8c:	00050501 	andeq	r0, r5, r1, lsl #10
    7d90:	32c00205 	sbccc	r0, r0, #1342177280	; 0x50000000
    7d94:	e7031000 	str	r1, [r3, -r0]
    7d98:	01060106 	tsteq	r6, r6, lsl #2
    7d9c:	2f060905 	svccs	0x00060905
    7da0:	05131905 	ldreq	r1, [r3, #-2309]	; 0xfffff6fb
    7da4:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    7da8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7dac:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    7db0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7db4:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    7db8:	27053506 	strcs	r3, [r5, -r6, lsl #10]
    7dbc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7dc0:	13053106 	movwne	r3, #20742	; 0x5106
    7dc4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7dc8:	05053006 	streq	r3, [r5, #-6]
    7dcc:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    7dd0:	2e750306 	cdpcs	3, 7, cr0, cr5, cr6, {0}
    7dd4:	0627052f 	strteq	r0, [r7], -pc, lsr #10
    7dd8:	00050201 	andeq	r0, r5, r1, lsl #4
    7ddc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7de0:	ec020500 	cfstr32	mvfx0, [r2], {-0}
    7de4:	03100032 	tsteq	r0, #50	; 0x32
    7de8:	0601068f 	streq	r0, [r1], -pc, lsl #13
    7dec:	06090501 	streq	r0, [r9], -r1, lsl #10
    7df0:	0514134b 	ldreq	r1, [r4, #-843]	; 0xfffffcb5
    7df4:	1805350d 	stmdane	r5, {r0, r2, r3, r8, sl, ip, sp}
    7df8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7dfc:	29053e06 	stmdbcs	r5, {r1, r2, r9, sl, fp, ip, sp}
    7e00:	0f050106 	svceq	0x00050106
    7e04:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    7e08:	06130531 			; <UNDEFINED> instruction: 0x06130531
    7e0c:	00320501 	eorseq	r0, r2, r1, lsl #10
    7e10:	20010402 	andcs	r0, r1, r2, lsl #8
    7e14:	03061505 	movweq	r1, #25861	; 0x6505
    7e18:	17052e0d 	strne	r2, [r5, -sp, lsl #28]
    7e1c:	19050106 	stmdbne	r5, {r1, r2, r8}
    7e20:	29052406 	stmdbcs	r5, {r1, r2, sl, sp}
    7e24:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    7e28:	4a065b06 	bmi	19ea48 <__RAM_SIZE+0x9ea48>
    7e2c:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    7e30:	17050106 	strne	r0, [r5, -r6, lsl #2]
    7e34:	0305052e 	movweq	r0, #21806	; 0x552e
    7e38:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    7e3c:	2e590306 	cdpcs	3, 5, cr0, cr9, cr6, {0}
    7e40:	01061e05 	tsteq	r6, r5, lsl #28
    7e44:	2f061505 	svccs	0x00061505
    7e48:	03062905 	movweq	r2, #26885	; 0x6905
    7e4c:	0520580e 	streq	r5, [r0, #-2062]!	; 0xfffff7f2
    7e50:	0b030619 	bleq	c96bc <__HEAP_SIZE+0xc86bc>
    7e54:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    7e58:	1a053c0a 	bne	156e88 <__RAM_SIZE+0x56e88>
    7e5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e60:	00060231 	andeq	r0, r6, r1, lsr r2
    7e64:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7e68:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    7e6c:	03100033 	tsteq	r0, #51	; 0x33
    7e70:	050107aa 	streq	r0, [r1, #-1962]	; 0xfffff856
    7e74:	1d052f09 	stcne	15, cr2, [r5, #-36]	; 0xffffffdc
    7e78:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7e7c:	13135906 	tstne	r3, #98304	; 0x18000
    7e80:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    7e84:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    7e88:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    7e8c:	1905190d 	stmdbne	r5, {r0, r2, r3, r8, fp, ip}
    7e90:	0f050106 	svceq	0x00050106
    7e94:	060e0520 	streq	r0, [lr], -r0, lsr #10
    7e98:	052e6603 	streq	r6, [lr, #-1539]!	; 0xfffff9fd
    7e9c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7ea0:	1105660e 	tstne	r5, lr, lsl #12
    7ea4:	1d053406 	cfstrsne	mvf3, [r5, #-24]	; 0xffffffe8
    7ea8:	13050106 	movwne	r0, #20742	; 0x5106
    7eac:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7eb0:	162f0530 			; <UNDEFINED> instruction: 0x162f0530
    7eb4:	05151505 	ldreq	r1, [r5, #-1285]	; 0xfffffafb
    7eb8:	580f0311 	stmdapl	pc, {r0, r4, r8, r9}	; <UNPREDICTABLE>
    7ebc:	01061905 	tsteq	r6, r5, lsl #18
    7ec0:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    7ec4:	01061505 	tsteq	r6, r5, lsl #10
    7ec8:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    7ecc:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    7ed0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    7ed4:	0540062d 	strbeq	r0, [r0, #-1581]	; 0xfffff9d3
    7ed8:	11051577 	tstne	r5, r7, ror r5
    7edc:	061c051a 			; <UNDEFINED> instruction: 0x061c051a
    7ee0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7ee4:	0621054c 	strteq	r0, [r1], -ip, asr #10
    7ee8:	20110501 	andscs	r0, r1, r1, lsl #10
    7eec:	a5061905 	strge	r1, [r6, #-2309]	; 0xfffff6fb
    7ef0:	01062b05 	tsteq	r6, r5, lsl #22
    7ef4:	68061905 	stmdavs	r6, {r0, r2, r8, fp, ip}
    7ef8:	01065d05 	tsteq	r6, r5, lsl #26
    7efc:	05207505 	streq	r7, [r0, #-1285]!	; 0xfffffafb
    7f00:	053c201d 	ldreq	r2, [ip, #-29]!	; 0xffffffe3
    7f04:	1d052e1b 	stcne	14, cr2, [r5, #-108]	; 0xffffff94
    7f08:	2a053206 	bcs	154728 <__RAM_SIZE+0x54728>
    7f0c:	1f050106 	svcne	0x00050106
    7f10:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    7f14:	06330542 	ldrteq	r0, [r3], -r2, asr #10
    7f18:	063a0501 	ldrteq	r0, [sl], -r1, lsl #10
    7f1c:	131d054e 	tstne	sp, #327155712	; 0x13800000
    7f20:	01062405 	tsteq	r6, r5, lsl #8
    7f24:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    7f28:	77030621 	strvc	r0, [r3, -r1, lsr #12]
    7f2c:	066d053c 			; <UNDEFINED> instruction: 0x066d053c
    7f30:	20210501 	eorcs	r0, r1, r1, lsl #10
    7f34:	03061905 	movweq	r1, #26885	; 0x6905
    7f38:	2b057415 	blcs	164f94 <__RAM_SIZE+0x64f94>
    7f3c:	19050106 	stmdbne	r5, {r1, r2, r8}
    7f40:	05246706 	streq	r6, [r4, #-1798]!	; 0xfffff8fa
    7f44:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    7f48:	05670619 	strbeq	r0, [r7, #-1561]!	; 0xfffff9e7
    7f4c:	05010653 	streq	r0, [r1, #-1619]	; 0xfffff9ad
    7f50:	4d052036 	stcmi	0, cr2, [r5, #-216]	; 0xffffff28
    7f54:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    7f58:	0622051a 			; <UNDEFINED> instruction: 0x0622051a
    7f5c:	19054a01 	stmdbne	r5, {r0, r9, fp, lr}
    7f60:	1d052f06 	stcne	15, cr2, [r5, #-24]	; 0xffffffe8
    7f64:	062a0528 	strteq	r0, [sl], -r8, lsr #10
    7f68:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    7f6c:	42062105 	andmi	r2, r6, #1073741825	; 0x40000001
    7f70:	01063305 	tsteq	r6, r5, lsl #6
    7f74:	54062105 	strpl	r2, [r6], #-261	; 0xfffffefb
    7f78:	05052006 	streq	r2, [r5, #-6]
    7f7c:	023c1803 	eorseq	r1, ip, #196608	; 0x30000
    7f80:	01010004 	tsteq	r1, r4
    7f84:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7f88:	00344c02 	eorseq	r4, r4, r2, lsl #24
    7f8c:	05ec0310 	strbeq	r0, [ip, #784]!	; 0x310
    7f90:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7f94:	04020009 	streq	r0, [r2], #-9
    7f98:	002f0601 	eoreq	r0, pc, r1, lsl #12
    7f9c:	13010402 	movwne	r0, #5122	; 0x1402
    7fa0:	01040200 	mrseq	r0, R12_usr
    7fa4:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    7fa8:	010c0301 	tsteq	ip, r1, lsl #6
    7fac:	02000d05 	andeq	r0, r0, #320	; 0x140
    7fb0:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
    7fb4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    7fb8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7fbc:	0402000d 	streq	r0, [r2], #-13
    7fc0:	00400601 	subeq	r0, r0, r1, lsl #12
    7fc4:	3f010402 	svccc	0x00010402
    7fc8:	02002d05 	andeq	r2, r0, #320	; 0x140
    7fcc:	75030104 	strvc	r0, [r3, #-260]	; 0xfffffefc
    7fd0:	0001022e 	andeq	r0, r1, lr, lsr #4
    7fd4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7fd8:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
    7fdc:	03100034 	tsteq	r0, #52	; 0x34
    7fe0:	050108d7 	streq	r0, [r1, #-2263]	; 0xfffff729
    7fe4:	0d053209 	sfmeq	f3, 4, [r5, #-36]	; 0xffffffdc
    7fe8:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    7fec:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    7ff0:	03062905 	movweq	r2, #26885	; 0x6905
    7ff4:	09052025 	stmdbeq	r5, {r0, r2, r5, sp}
    7ff8:	06050515 			; <UNDEFINED> instruction: 0x06050515
    7ffc:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    8000:	4b2e5903 	blmi	b9e414 <__RAM_SIZE+0xa9e414>
    8004:	0624054b 	strteq	r0, [r4], -fp, asr #10
    8008:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    800c:	0625052f 	strteq	r0, [r5], -pc, lsr #10
    8010:	13340601 	teqne	r4, #1048576	; 0x100000
    8014:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    8018:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    801c:	00088221 	andeq	r8, r8, r1, lsr #4
    8020:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8024:	00020500 	andeq	r0, r2, r0, lsl #10
    8028:	03000000 	movweq	r0, #0
    802c:	060103a6 	streq	r0, [r1], -r6, lsr #7
    8030:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    8034:	16090576 			; <UNDEFINED> instruction: 0x16090576
    8038:	06210532 			; <UNDEFINED> instruction: 0x06210532
    803c:	06090501 	streq	r0, [r9], -r1, lsl #10
    8040:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    8044:	06090501 	streq	r0, [r9], -r1, lsl #10
    8048:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    804c:	06090501 	streq	r0, [r9], -r1, lsl #10
    8050:	06280521 	strteq	r0, [r8], -r1, lsr #10
    8054:	06090501 	streq	r0, [r9], -r1, lsl #10
    8058:	0b053e2f 	bleq	15791c <__RAM_SIZE+0x5791c>
    805c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8060:	22052206 	andcs	r2, r5, #1610612736	; 0x60000000
    8064:	28050106 	stmdacs	r5, {r1, r2, r8}
    8068:	05056906 	streq	r6, [r5, #-2310]	; 0xfffff6fa
    806c:	002e1306 	eoreq	r1, lr, r6, lsl #6
    8070:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8074:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    8078:	03100034 	tsteq	r0, #52	; 0x34
    807c:	050101ed 	streq	r0, [r1, #-493]	; 0xfffffe13
    8080:	2b052f09 	blcs	153cac <__RAM_SIZE+0x53cac>
    8084:	18090514 	stmdane	r9, {r2, r4, r8, sl}
    8088:	06190530 			; <UNDEFINED> instruction: 0x06190530
    808c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8090:	03061505 	movweq	r1, #25861	; 0x6505
    8094:	24052029 	strcs	r2, [r5], #-41	; 0xffffffd7
    8098:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    809c:	23052f06 	movwcs	r2, #24326	; 0x5f06
    80a0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    80a4:	59142106 	ldmdbpl	r4, {r1, r2, r8, sp}
    80a8:	01062805 	tsteq	r6, r5, lsl #16
    80ac:	05ba2605 	ldreq	r2, [sl, #1541]!	; 0x605
    80b0:	05360615 	ldreq	r0, [r6, #-1557]!	; 0xfffff9eb
    80b4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    80b8:	20202221 	eorcs	r2, r0, r1, lsr #4
    80bc:	be031405 	cdplt	4, 0, cr1, cr3, cr5, {0}
    80c0:	2505017f 	strcs	r0, [r5, #-383]	; 0xfffffe81
    80c4:	00d40306 	sbcseq	r0, r4, r6, lsl #6
    80c8:	1520053c 	strne	r0, [r0, #-1340]!	; 0xfffffac4
    80cc:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    80d0:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    80d4:	0b021306 	bleq	8ccf4 <__HEAP_SIZE+0x8bcf4>
    80d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    80dc:	02050009 	andeq	r0, r5, #9
    80e0:	00000000 	andeq	r0, r0, r0
    80e4:	0102d403 	tsteq	r2, r3, lsl #8
    80e8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    80ec:	74057506 	strvc	r7, [r5], #-1286	; 0xfffffafa
    80f0:	170d0514 	smladne	sp, r4, r5, r0
    80f4:	01062805 	tsteq	r6, r5, lsl #16
    80f8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    80fc:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    8100:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8104:	06260533 			; <UNDEFINED> instruction: 0x06260533
    8108:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    810c:	0574063d 	ldrbeq	r0, [r4, #-1597]!	; 0xfffff9c3
    8110:	05310633 	ldreq	r0, [r1, #-1587]!	; 0xfffff9cd
    8114:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    8118:	004a1306 	subeq	r1, sl, r6, lsl #6
    811c:	09050101 	stmdbeq	r5, {r0, r8}
    8120:	00020500 	andeq	r0, r2, r0, lsl #10
    8124:	03000000 	movweq	r0, #0
    8128:	060102f7 			; <UNDEFINED> instruction: 0x060102f7
    812c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8130:	0189053d 	orreq	r0, r9, sp, lsr r5
    8134:	032a0514 			; <UNDEFINED> instruction: 0x032a0514
    8138:	0d05010e 	stfeqs	f0, [r5, #-56]	; 0xffffffc8
    813c:	0f051416 	svceq	0x00051416
    8140:	11050106 	tstne	r5, r6, lsl #2
    8144:	26052506 	strcs	r2, [r5], -r6, lsl #10
    8148:	11050106 	tstne	r5, r6, lsl #2
    814c:	39054c06 	stmdbcc	r5, {r1, r2, sl, fp, lr}
    8150:	140d055b 	strne	r0, [sp], #-1371	; 0xfffffaa5
    8154:	13060905 	movwne	r0, #26885	; 0x6905
    8158:	0101003c 	tsteq	r1, ip, lsr r0
    815c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8160:	00000002 	andeq	r0, r0, r2
    8164:	03c40300 	biceq	r0, r4, #0, 6
    8168:	13090501 	movwne	r0, #38145	; 0x9501
    816c:	7f051413 	svcvc	0x00051413
    8170:	141f0514 	ldrne	r0, [pc], #-1300	; 8178 <__HEAP_SIZE+0x7178>
    8174:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    8178:	20010619 	andcs	r0, r1, r9, lsl r6
    817c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    8180:	20740305 	rsbscs	r0, r4, r5, lsl #6
    8184:	03060d05 	movweq	r0, #27909	; 0x6d05
    8188:	21052e0f 	tstcs	r5, pc, lsl #28
    818c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8190:	37052106 	strcc	r2, [r5, -r6, lsl #2]
    8194:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8198:	31052106 	tstcc	r5, r6, lsl #2
    819c:	43050106 	movwmi	r0, #20742	; 0x5106
    81a0:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    81a4:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    81a8:	03140501 	tsteq	r4, #4194304	; 0x400000
    81ac:	25052e6c 	strcs	r2, [r5, #-3692]	; 0xfffff194
    81b0:	20240306 	eorcs	r0, r4, r6, lsl #6
    81b4:	05153c05 	ldreq	r3, [r5, #-3077]	; 0xfffff3fb
    81b8:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    81bc:	11051306 	tstne	r5, r6, lsl #6
    81c0:	3c6c0306 	stclcc	3, cr0, [ip], #-24	; 0xffffffe8
    81c4:	01061505 	tsteq	r6, r5, lsl #10
    81c8:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    81cc:	05340615 	ldreq	r0, [r4, #-1557]!	; 0xfffff9eb
    81d0:	7401061f 	strvc	r0, [r1], #-1567	; 0xfffff9e1
    81d4:	1c061505 	cfstr32ne	mvfx1, [r6], {5}
    81d8:	01061f05 	tsteq	r6, r5, lsl #30
    81dc:	03140574 	tsteq	r4, #116, 10	; 0x1d000000
    81e0:	05052068 	streq	r2, [r5, #-104]	; 0xffffff98
    81e4:	02202a03 	eoreq	r2, r0, #12288	; 0x3000
    81e8:	01010003 	tsteq	r1, r3
    81ec:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    81f0:	00000002 	andeq	r0, r0, r2
    81f4:	03f70300 	mvnseq	r0, #0, 6
    81f8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    81fc:	133d0609 	teqne	sp, #9437184	; 0x900000
    8200:	147e0514 	ldrbtne	r0, [lr], #-1300	; 0xfffffaec
    8204:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    8208:	19051609 	stmdbne	r5, {r0, r3, r9, sl, ip}
    820c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    8210:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    8214:	21052306 	tstcs	r5, r6, lsl #6
    8218:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    821c:	37052106 	strcc	r2, [r5, -r6, lsl #2]
    8220:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8224:	31052106 	tstcc	r5, r6, lsl #2
    8228:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    822c:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    8230:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    8234:	03140501 	tsteq	r4, #4194304	; 0x400000
    8238:	25052e6c 	strcs	r2, [r5, #-3692]	; 0xfffff194
    823c:	201d0306 	andscs	r0, sp, r6, lsl #6
    8240:	05153b05 	ldreq	r3, [r5, #-2821]	; 0xfffff4fb
    8244:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    8248:	11051306 	tstne	r5, r6, lsl #6
    824c:	2e730306 	cdpcs	3, 7, cr0, cr3, cr6, {0}
    8250:	01061b05 	tsteq	r6, r5, lsl #22
    8254:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
    8258:	6a031405 	bvs	cd274 <__HEAP_SIZE+0xcc274>
    825c:	04022020 	streq	r2, [r2], #-32	; 0xffffffe0
    8260:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8264:	02050005 	andeq	r0, r5, #5
    8268:	00000000 	andeq	r0, r0, r0
    826c:	01049f03 	tsteq	r4, r3, lsl #30
    8270:	05133405 	ldreq	r3, [r3, #-1029]	; 0xfffffbfb
    8274:	47051635 	smladxmi	r5, r5, r6, r1
    8278:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    827c:	13060505 	movwne	r0, #25861	; 0x6505
    8280:	01000602 	tsteq	r0, r2, lsl #12
    8284:	00050501 	andeq	r0, r5, r1, lsl #10
    8288:	00000205 	andeq	r0, r0, r5, lsl #4
    828c:	ad030000 	stcge	0, cr0, [r3, #-0]
    8290:	09050104 	stmdbeq	r5, {r2, r8}
    8294:	142d0513 	strtne	r0, [sp], #-1299	; 0xfffffaed
    8298:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    829c:	09051444 	stmdbeq	r5, {r2, r6, sl, ip}
    82a0:	06050514 			; <UNDEFINED> instruction: 0x06050514
    82a4:	01022013 	tsteq	r2, r3, lsl r0
    82a8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    82ac:	02050005 	andeq	r0, r5, #5
    82b0:	00000000 	andeq	r0, r0, r0
    82b4:	0104bc03 	tsteq	r4, r3, lsl #24
    82b8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    82bc:	3e053d06 	cdpcc	13, 0, cr3, cr5, cr6, {0}
    82c0:	141f0514 	ldrne	r0, [pc], #-1300	; 82c8 <__HEAP_SIZE+0x72c8>
    82c4:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    82c8:	0f05300d 	svceq	0x0005300d
    82cc:	11050106 	tstne	r5, r6, lsl #2
    82d0:	23052206 	movwcs	r2, #20998	; 0x5206
    82d4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    82d8:	2a056d06 	bcs	1636f8 <__RAM_SIZE+0x636f8>
    82dc:	06050530 			; <UNDEFINED> instruction: 0x06050530
    82e0:	06110513 			; <UNDEFINED> instruction: 0x06110513
    82e4:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    82e8:	02010623 	andeq	r0, r1, #36700160	; 0x2300000
    82ec:	01010007 	tsteq	r1, r7
    82f0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    82f4:	00000002 	andeq	r0, r0, r2
    82f8:	04d40300 	ldrbeq	r0, [r4], #768	; 0x300
    82fc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8300:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    8304:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    8308:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    830c:	300d0513 	andcc	r0, sp, r3, lsl r5
    8310:	01061a05 	tsteq	r6, r5, lsl #20
    8314:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    8318:	09053f19 	stmdbeq	r5, {r0, r3, r4, r8, r9, sl, fp, ip, sp}
    831c:	33052806 	movwcc	r2, #22534	; 0x5806
    8320:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    8324:	13060505 	movwne	r0, #25861	; 0x6505
    8328:	78031905 	stmdavc	r3, {r0, r2, r8, fp, ip}
    832c:	0102202e 	tsteq	r2, lr, lsr #32
    8330:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8334:	02050005 	andeq	r0, r5, #5
    8338:	00000000 	andeq	r0, r0, r0
    833c:	0104f003 	tsteq	r4, r3	; <UNPREDICTABLE>
    8340:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8344:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    8348:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    834c:	01062405 	tsteq	r6, r5, lsl #8
    8350:	30063505 	andcc	r3, r6, r5, lsl #10
    8354:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    8358:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    835c:	01010001 	tsteq	r1, r1
    8360:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8364:	00000002 	andeq	r0, r0, r2
    8368:	04fe0300 	ldrbteq	r0, [lr], #768	; 0x300
    836c:	13090501 	movwne	r0, #38145	; 0x9501
    8370:	14310513 	ldrtne	r0, [r1], #-1299	; 0xfffffaed
    8374:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    8378:	33051309 	movwcc	r1, #21257	; 0x5309
    837c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    8380:	13060505 	movwne	r0, #25861	; 0x6505
    8384:	00010220 	andeq	r0, r1, r0, lsr #4
    8388:	09050101 	stmdbeq	r5, {r0, r8}
    838c:	00020500 	andeq	r0, r2, r0, lsl #10
    8390:	03000000 	movweq	r0, #0
    8394:	05010590 	streq	r0, [r1, #-1424]	; 0xfffffa70
    8398:	0513130d 	ldreq	r1, [r3, #-781]	; 0xfffffcf3
    839c:	33051447 	movwcc	r1, #21575	; 0x5447
    83a0:	140d0514 	strne	r0, [sp], #-1300	; 0xfffffaec
    83a4:	01061a05 	tsteq	r6, r5, lsl #20
    83a8:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    83ac:	05410611 	strbeq	r0, [r1, #-1553]	; 0xfffff9ef
    83b0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    83b4:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    83b8:	20010619 	andcs	r0, r1, r9, lsl r6
    83bc:	06390524 	ldrteq	r0, [r9], -r4, lsr #10
    83c0:	140d0523 	strne	r0, [sp], #-1315	; 0xfffffadd
    83c4:	13060905 	movwne	r0, #26885	; 0x6905
    83c8:	01000102 	tsteq	r0, r2, lsl #2
    83cc:	00050501 	andeq	r0, r5, r1, lsl #10
    83d0:	00000205 	andeq	r0, r0, r5, lsl #4
    83d4:	ad030000 	stcge	0, cr0, [r3, #-0]
    83d8:	09050105 	stmdbeq	r5, {r0, r2, r8}
    83dc:	142c0513 	strtne	r0, [ip], #-1299	; 0xfffffaed
    83e0:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    83e4:	0905143b 	stmdbeq	r5, {r0, r1, r3, r4, r5, sl, ip}
    83e8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    83ec:	01022013 	tsteq	r2, r3, lsl r0
    83f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    83f4:	02050005 	andeq	r0, r5, #5
    83f8:	00000000 	andeq	r0, r0, r0
    83fc:	01098a03 	tsteq	r9, r3, lsl #20
    8400:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8404:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    8408:	1f051431 	svcne	0x00051431
    840c:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    8410:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    8414:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    8418:	19052e0f 	stmdbne	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    841c:	0609053e 			; <UNDEFINED> instruction: 0x0609053e
    8420:	30330527 	eorscc	r0, r3, r7, lsr #10
    8424:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    8428:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    842c:	2e780319 	mrccs	3, 3, r0, cr8, cr9, {0}
    8430:	00010220 	andeq	r0, r1, r0, lsr #4
    8434:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8438:	00020500 	andeq	r0, r2, r0, lsl #10
    843c:	03000000 	movweq	r0, #0
    8440:	060109a7 	streq	r0, [r1], -r7, lsr #19
    8444:	06090501 	streq	r0, [r9], -r1, lsl #10
    8448:	2f05132f 	svccs	0x0005132f
    844c:	141f0514 	ldrne	r0, [pc], #-1300	; 8454 <__HEAP_SIZE+0x7454>
    8450:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    8454:	1605300d 	strne	r3, [r5], -sp
    8458:	09050106 	stmdbeq	r5, {r1, r2, r8}
    845c:	32052206 	andcc	r2, r5, #1610612736	; 0x60000000
    8460:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    8464:	13060505 	movwne	r0, #25861	; 0x6505
    8468:	0101002e 	tsteq	r1, lr, lsr #32
    846c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8470:	00000002 	andeq	r0, r0, r2
    8474:	09bd0300 	ldmibeq	sp!, {r8, r9}
    8478:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    847c:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8480:	1f051437 	svcne	0x00051437
    8484:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    8488:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    848c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    8490:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    8494:	05053027 	streq	r3, [r5, #-39]	; 0xffffffd9
    8498:	00201306 	eoreq	r1, r0, r6, lsl #6
    849c:	09050101 	stmdbeq	r5, {r0, r8}
    84a0:	00020500 	andeq	r0, r2, r0, lsl #10
    84a4:	03000000 	movweq	r0, #0
    84a8:	060109d4 			; <UNDEFINED> instruction: 0x060109d4
    84ac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    84b0:	7f05134b 	svcvc	0x0005134b
    84b4:	160d0514 			; <UNDEFINED> instruction: 0x160d0514
    84b8:	01062105 	tsteq	r6, r5, lsl #2
    84bc:	060d052e 	streq	r0, [sp], -lr, lsr #10
    84c0:	063f0521 	ldrteq	r0, [pc], -r1, lsr #10
    84c4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    84c8:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    84cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    84d0:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    84d4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    84d8:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    84dc:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    84e0:	053e0661 	ldreq	r0, [lr, #-1633]!	; 0xfffff99f
    84e4:	0d051341 	stceq	3, cr1, [r5, #-260]	; 0xfffffefc
    84e8:	06090514 			; <UNDEFINED> instruction: 0x06090514
    84ec:	02022e13 	andeq	r2, r2, #304	; 0x130
    84f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    84f4:	02050009 	andeq	r0, r5, #9
    84f8:	00000000 	andeq	r0, r0, r0
    84fc:	0109f203 	tsteq	r9, r3, lsl #4	; <UNPREDICTABLE>
    8500:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8504:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8508:	2805146b 	stmdacs	r5, {r0, r1, r3, r5, r6, sl, ip}
    850c:	160d0517 			; <UNDEFINED> instruction: 0x160d0517
    8510:	01062105 	tsteq	r6, r5, lsl #2
    8514:	060d052e 	streq	r0, [sp], -lr, lsr #10
    8518:	063f0521 	ldrteq	r0, [pc], -r1, lsr #10
    851c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8520:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    8524:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8528:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    852c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8530:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    8534:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    8538:	053e0658 	ldreq	r0, [lr, #-1624]!	; 0xfffff9a8
    853c:	0d05133a 	stceq	3, cr1, [r5, #-232]	; 0xffffff18
    8540:	06090514 			; <UNDEFINED> instruction: 0x06090514
    8544:	02022e13 	andeq	r2, r2, #304	; 0x130
    8548:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    854c:	02050009 	andeq	r0, r5, #9
    8550:	00000000 	andeq	r0, r0, r0
    8554:	010a9203 	tsteq	sl, r3, lsl #4
    8558:	05133705 	ldreq	r3, [r3, #-1797]	; 0xfffff8fb
    855c:	0d051459 	cfstrseq	mvf1, [r5, #-356]	; 0xfffffe9c
    8560:	06090514 			; <UNDEFINED> instruction: 0x06090514
    8564:	01022013 	tsteq	r2, r3, lsl r0
    8568:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    856c:	02050009 	andeq	r0, r5, #9
    8570:	00000000 	andeq	r0, r0, r0
    8574:	010aa103 	tsteq	sl, r3, lsl #2
    8578:	05134505 	ldreq	r4, [r3, #-1285]	; 0xfffffafb
    857c:	3505140d 	strcc	r1, [r5, #-1037]	; 0xfffffbf3
    8580:	2f050106 	svccs	0x00050106
    8584:	09052206 	stmdbeq	r5, {r1, r2, r9, sp}
    8588:	01021306 	tsteq	r2, r6, lsl #6
    858c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8590:	02050005 	andeq	r0, r5, #5
    8594:	00000000 	andeq	r0, r0, r0
    8598:	010ab203 	tsteq	sl, r3, lsl #4
    859c:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    85a0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    85a4:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    85a8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    85ac:	05022f05 	streq	r2, [r2, #-3845]	; 0xfffff0fb
    85b0:	4d010100 	stfmis	f0, [r1, #-0]
    85b4:	03000007 	movweq	r0, #7
    85b8:	00022a00 	andeq	r2, r2, r0, lsl #20
    85bc:	fb010200 	blx	48dc6 <__HEAP_SIZE+0x47dc6>
    85c0:	01000d0e 	tsteq	r0, lr, lsl #26
    85c4:	00010101 	andeq	r0, r1, r1, lsl #2
    85c8:	00010000 	andeq	r0, r1, r0
    85cc:	2e2e0100 	sufcse	f0, f6, f0
    85d0:	2f2e2e2f 	svccs	0x002e2e2f
    85d4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8524 <__HEAP_SIZE+0x7524>
    85d8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    85dc:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    85e0:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    85e4:	2f534f54 	svccs	0x00534f54
    85e8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    85ec:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    85f0:	6d654d2f 	stclvs	13, cr4, [r5, #-188]!	; 0xffffff44
    85f4:	676e614d 	strbvs	r6, [lr, -sp, asr #2]!
    85f8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    85fc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8600:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8604:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8608:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    860c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8610:	5f6d7261 	svcpl	0x006d7261
    8614:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8618:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    861c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8620:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8624:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8628:	30312d69 	eorscc	r2, r1, r9, ror #26
    862c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8630:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8634:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    8638:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    863c:	615c6363 	cmpvs	ip, r3, ror #6
    8640:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8644:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8648:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    864c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    8650:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    8654:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8658:	00656475 	rsbeq	r6, r5, r5, ror r4
    865c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8660:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8664:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8668:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    866c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8670:	615c6d61 	cmpvs	ip, r1, ror #26
    8674:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8678:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    867c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8680:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8684:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8688:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    868c:	2e30312d 	rsfcssp	f3, f0, #5.0
    8690:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8694:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8698:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    869c:	6f6e2d6d 	svcvs	0x006e2d6d
    86a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    86a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    86a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    86ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    86b0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    86b4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    86b8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    86bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    86c0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    86c4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    86c8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    86cc:	615c6d61 	cmpvs	ip, r1, ror #26
    86d0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    86d4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    86d8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    86dc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    86e0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    86e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    86e8:	2e30312d 	rsfcssp	f3, f0, #5.0
    86ec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    86f0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    86f4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    86f8:	6f6e2d6d 	svcvs	0x006e2d6d
    86fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8700:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8704:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8708:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    870c:	00737973 	rsbseq	r7, r3, r3, ror r9
    8710:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8714:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8718:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    871c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    8720:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    8724:	4f545265 	svcmi	0x00545265
    8728:	6f702f53 	svcvs	0x00702f53
    872c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    8730:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    8734:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    8738:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    873c:	5f33334d 	svcpl	0x0033334d
    8740:	2f5a544e 	svccs	0x005a544e
    8744:	5f6e6f6e 	svcpl	0x006e6f6e
    8748:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    874c:	2e006572 	cfrshl64cs	mvdx0, mvdx2, r6
    8750:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8754:	2f2e2e2f 	svccs	0x002e2e2f
    8758:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    875c:	2f736f74 	svccs	0x00736f74
    8760:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    8764:	534f5452 	movtpl	r5, #62546	; 0xf452
    8768:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    876c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8770:	65680000 	strbvs	r0, [r8, #-0]!
    8774:	345f7061 	ldrbcc	r7, [pc], #-97	; 877c <__HEAP_SIZE+0x777c>
    8778:	0100632e 	tsteq	r0, lr, lsr #6
    877c:	74730000 	ldrbtvc	r0, [r3], #-0
    8780:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    8784:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8788:	645f0000 	ldrbvs	r0, [pc], #-0	; 8790 <__HEAP_SIZE+0x7790>
    878c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8790:	745f746c 	ldrbvc	r7, [pc], #-1132	; 8798 <__HEAP_SIZE+0x7798>
    8794:	73657079 	cmnvc	r5, #121	; 0x79
    8798:	0300682e 	movweq	r6, #2094	; 0x82e
    879c:	735f0000 	cmpvc	pc, #0
    87a0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    87a4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    87a8:	70000004 	andvc	r0, r0, r4
    87ac:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    87b0:	6f726361 	svcvs	0x00726361
    87b4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    87b8:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    87bc:	00000500 	andeq	r0, r0, r0, lsl #10
    87c0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    87c4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    87c8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    87cc:	61740000 	cmnvs	r4, r0
    87d0:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    87d4:	00000600 	andeq	r0, r0, r0, lsl #12
    87d8:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    87dc:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    87e0:	00003e6e 	andeq	r3, r0, lr, ror #28
    87e4:	05000000 	streq	r0, [r0, #-0]
    87e8:	02050001 	andeq	r0, r5, #1
    87ec:	10003520 	andne	r3, r0, r0, lsr #10
    87f0:	0103bc03 	tsteq	r3, r3, lsl #24
    87f4:	13130505 	tstne	r3, #20971520	; 0x1400000
    87f8:	14051513 	strne	r1, [r5], #-1299	; 0xfffffaed
    87fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8800:	07052206 	streq	r2, [r5, -r6, lsl #4]
    8804:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8808:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    880c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8810:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8814:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8818:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    881c:	053b0106 	ldreq	r0, [fp, #-262]!	; 0xfffffefa
    8820:	0c030605 	stceq	6, cr0, [r3], {5}
    8824:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    8828:	06050501 	streq	r0, [r5], -r1, lsl #10
    882c:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    8830:	06050501 	streq	r0, [r5], -r1, lsl #10
    8834:	06120532 			; <UNDEFINED> instruction: 0x06120532
    8838:	06050501 	streq	r0, [r5], -r1, lsl #10
    883c:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    8840:	06050501 	streq	r0, [r5], -r1, lsl #10
    8844:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    8848:	06050501 	streq	r0, [r5], -r1, lsl #10
    884c:	060b052f 	streq	r0, [fp], -pc, lsr #10
    8850:	06050501 	streq	r0, [r5], -r1, lsl #10
    8854:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    8858:	06050501 	streq	r0, [r5], -r1, lsl #10
    885c:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    8860:	06050501 	streq	r0, [r5], -r1, lsl #10
    8864:	3e051324 	cdpcc	3, 0, cr1, cr5, cr4, {1}
    8868:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    886c:	06050520 	streq	r0, [r5], -r0, lsr #10
    8870:	06270521 	strteq	r0, [r7], -r1, lsr #10
    8874:	06050501 	streq	r0, [r5], -r1, lsl #10
    8878:	06240523 	strteq	r0, [r4], -r3, lsr #10
    887c:	05052001 	streq	r2, [r5, #-1]
    8880:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    8884:	01050106 	tsteq	r5, r6, lsl #2
    8888:	030c052f 	movweq	r0, #50479	; 0xc52f
    888c:	0d022057 	stceq	0, cr2, [r2, #-348]	; 0xfffffea4
    8890:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8894:	02050001 	andeq	r0, r5, #1
    8898:	10003578 	andne	r3, r0, r8, ror r5
    889c:	0103ec03 	tsteq	r3, r3, lsl #24
    88a0:	13130505 	tstne	r3, #20971520	; 0x1400000
    88a4:	06150516 			; <UNDEFINED> instruction: 0x06150516
    88a8:	00200501 	eoreq	r0, r0, r1, lsl #10
    88ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    88b0:	00050520 	andeq	r0, r5, r0, lsr #10
    88b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    88b8:	0533062e 	ldreq	r0, [r3, #-1582]!	; 0xfffff9d2
    88bc:	05051431 	streq	r1, [r5, #-1073]	; 0xfffffbcf
    88c0:	1b051417 	blne	14d924 <__RAM_SIZE+0x4d924>
    88c4:	0f050106 	svceq	0x00050106
    88c8:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    88cc:	35062105 	strcc	r2, [r6, #-261]	; 0xfffffefb
    88d0:	14170505 	ldrne	r0, [r7], #-1285	; 0xfffffafb
    88d4:	01062005 	tsteq	r6, r5
    88d8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    88dc:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
    88e0:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    88e4:	01062a05 	tsteq	r6, r5, lsl #20
    88e8:	27060505 	strcs	r0, [r6, -r5, lsl #10]
    88ec:	01060705 	tsteq	r6, r5, lsl #14
    88f0:	30060905 	andcc	r0, r6, r5, lsl #18
    88f4:	01062505 	tsteq	r6, r5, lsl #10
    88f8:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    88fc:	58030905 	stmdapl	r3, {r0, r2, r8, fp}
    8900:	06320520 	ldrteq	r0, [r2], -r0, lsr #10
    8904:	20200501 	eorcs	r0, r0, r1, lsl #10
    8908:	2f060905 	svccs	0x00060905
    890c:	01061905 	tsteq	r6, r5, lsl #18
    8910:	69030105 	stmdbvs	r3, {r0, r2, r8}
    8914:	0609052e 	streq	r0, [r9], -lr, lsr #10
    8918:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    891c:	05010646 	streq	r0, [r1, #-1606]	; 0xfffff9ba
    8920:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    8924:	64053106 	strvs	r3, [r5], #-262	; 0xfffffefa
    8928:	29050106 	stmdbcs	r5, {r1, r2, r8}
    892c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    8930:	0630052f 	ldrteq	r0, [r0], -pc, lsr #10
    8934:	20680501 	rsbcs	r0, r8, r1, lsl #10
    8938:	05202e05 	streq	r2, [r0, #-3589]!	; 0xfffff1fb
    893c:	10030605 	andne	r0, r3, r5, lsl #12
    8940:	06070520 	streq	r0, [r7], -r0, lsr #10
    8944:	06090501 	streq	r0, [r9], -r1, lsl #10
    8948:	06250530 			; <UNDEFINED> instruction: 0x06250530
    894c:	06210501 	strteq	r0, [r1], -r1, lsl #10
    8950:	06010524 	streq	r0, [r1], -r4, lsr #10
    8954:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    8958:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    895c:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    8960:	01000602 	tsteq	r0, r2, lsl #12
    8964:	00010501 	andeq	r0, r1, r1, lsl #10
    8968:	35dc0205 	ldrbcc	r0, [ip, #517]	; 0x205
    896c:	ad031000 	stcge	0, cr1, [r3, #-0]
    8970:	01060101 	tsteq	r6, r1, lsl #2
    8974:	21060505 	tstcs	r6, r5, lsl #10
    8978:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    897c:	06070514 			; <UNDEFINED> instruction: 0x06070514
    8980:	06090501 	streq	r0, [r9], -r1, lsl #10
    8984:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    8988:	060d0501 	streq	r0, [sp], -r1, lsl #10
    898c:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    8990:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8994:	060f0524 	streq	r0, [pc], -r4, lsr #10
    8998:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    899c:	0629053f 			; <UNDEFINED> instruction: 0x0629053f
    89a0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    89a4:	06150530 			; <UNDEFINED> instruction: 0x06150530
    89a8:	20130501 	andscs	r0, r3, r1, lsl #10
    89ac:	30061505 	andcc	r1, r6, r5, lsl #10
    89b0:	01062105 	tsteq	r6, r5, lsl #2
    89b4:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    89b8:	2105200e 	tstcs	r5, lr
    89bc:	05052506 	streq	r2, [r5, #-1286]	; 0xfffffafa
    89c0:	32090515 	andcc	r0, r9, #88080384	; 0x5400000
    89c4:	01061305 	tsteq	r6, r5, lsl #6
    89c8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    89cc:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    89d0:	0b051909 	bleq	14edfc <__RAM_SIZE+0x4edfc>
    89d4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    89d8:	0f053006 	svceq	0x00053006
    89dc:	36050106 	strcc	r0, [r5], -r6, lsl #2
    89e0:	01040200 	mrseq	r0, R12_usr
    89e4:	0025052e 	eoreq	r0, r5, lr, lsr #10
    89e8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    89ec:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    89f0:	06190513 			; <UNDEFINED> instruction: 0x06190513
    89f4:	06360501 	ldrteq	r0, [r6], -r1, lsl #10
    89f8:	1411052f 	ldrne	r0, [r1], #-1327	; 0xfffffad1
    89fc:	01061605 	tsteq	r6, r5, lsl #12
    8a00:	53032105 	movwpl	r2, #12549	; 0x3105
    8a04:	0d052020 	stceq	0, cr2, [r5, #-128]	; 0xffffff80
    8a08:	20180306 	andscs	r0, r8, r6, lsl #6
    8a0c:	03062505 	movweq	r2, #25861	; 0x6505
    8a10:	1d053c17 	stcne	12, cr3, [r5, #-92]	; 0xffffffa4
    8a14:	063a0521 	ldrteq	r0, [sl], -r1, lsr #10
    8a18:	0e160521 	cfmul64eq	mvdx0, mvdx6, mvdx1
    8a1c:	01062105 	tsteq	r6, r5, lsl #2
    8a20:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8a24:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    8a28:	3e052e01 	cdpcc	14, 0, cr2, cr5, cr1, {0}
    8a2c:	01040200 	mrseq	r0, R12_usr
    8a30:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    8a34:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    8a38:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    8a3c:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    8a40:	3d053206 	sfmcc	f3, 4, [r5, #-24]	; 0xffffffe8
    8a44:	1e050106 	adfnes	f0, f5, f6
    8a48:	063b0520 	ldrteq	r0, [fp], -r0, lsr #10
    8a4c:	16150521 	ldrne	r0, [r5], -r1, lsr #10
    8a50:	01063f05 	tsteq	r6, r5, lsl #30
    8a54:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    8a58:	05240669 	streq	r0, [r4, #-1641]!	; 0xfffff997
    8a5c:	22051415 	andcs	r1, r5, #352321536	; 0x15000000
    8a60:	2f050106 	svccs	0x00050106
    8a64:	20170520 	andscs	r0, r7, r0, lsr #10
    8a68:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    8a6c:	01062805 	tsteq	r6, r5, lsl #16
    8a70:	21066905 	tstcs	r6, r5, lsl #18
    8a74:	05161905 	ldreq	r1, [r6, #-2309]	; 0xfffff6fb
    8a78:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    8a7c:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    8a80:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    8a84:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    8a88:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    8a8c:	19052039 	stmdbne	r5, {r0, r3, r4, r5, sp}
    8a90:	3a052106 	bcc	150eb0 <__RAM_SIZE+0x50eb0>
    8a94:	31050106 	tstcc	r5, r6, lsl #2
    8a98:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    8a9c:	06330515 			; <UNDEFINED> instruction: 0x06330515
    8aa0:	20290501 	eorcs	r0, r9, r1, lsl #10
    8aa4:	3e061505 	cfsh32cc	mvfx1, mvfx6, #5
    8aa8:	01062d05 	tsteq	r6, r5, lsl #26
    8aac:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    8ab0:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    8ab4:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    8ab8:	05320631 	ldreq	r0, [r2, #-1585]!	; 0xfffff9cf
    8abc:	053d1715 	ldreq	r1, [sp, #-1813]!	; 0xfffff8eb
    8ac0:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    8ac4:	052f0615 	streq	r0, [pc, #-1557]!	; 84b7 <__HEAP_SIZE+0x74b7>
    8ac8:	2e010633 	mcrcs	6, 0, r0, cr1, cr3, {1}
    8acc:	03062505 	movweq	r2, #25861	; 0x6505
    8ad0:	2d052e0e 	stccs	14, cr2, [r5, #-56]	; 0xffffffc8
    8ad4:	14050515 	strne	r0, [r5], #-1301	; 0xfffffaeb
    8ad8:	01060e05 	tsteq	r6, r5, lsl #28
    8adc:	03065a05 	movweq	r5, #27141	; 0x6a05
    8ae0:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    8ae4:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ae8:	030c0513 	movweq	r0, #50451	; 0xc513
    8aec:	662e7ed9 			; <UNDEFINED> instruction: 0x662e7ed9
    8af0:	01000c02 	tsteq	r0, r2, lsl #24
    8af4:	00010501 	andeq	r0, r1, r1, lsl #10
    8af8:	36b00205 	ldrtcc	r0, [r0], r5, lsl #4
    8afc:	dc031000 	stcle	0, cr1, [r3], {-0}
    8b00:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    8b04:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    8b08:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    8b0c:	09051c01 	stmdbeq	r5, {r0, sl, fp, ip}
    8b10:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
    8b14:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8b18:	2d053106 	stfcss	f3, [r5, #-24]	; 0xffffffe8
    8b1c:	133e0514 	teqne	lr, #20, 10	; 0x5000000
    8b20:	05133805 	ldreq	r3, [r3, #-2053]	; 0xfffff7fb
    8b24:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    8b28:	0b050106 	bleq	148f48 <__RAM_SIZE+0x48f48>
    8b2c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    8b30:	06170530 			; <UNDEFINED> instruction: 0x06170530
    8b34:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    8b38:	24030105 	strcs	r0, [r3], #-261	; 0xfffffefb
    8b3c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    8b40:	03206003 			; <UNDEFINED> instruction: 0x03206003
    8b44:	15054a0c 	strne	r4, [r5, #-2572]	; 0xfffff5f4
    8b48:	06320531 			; <UNDEFINED> instruction: 0x06320531
    8b4c:	2e290501 	cfsh64cs	mvdx0, mvdx9, #1
    8b50:	4b063805 	blmi	196b6c <__RAM_SIZE+0x96b6c>
    8b54:	3d131505 	cfldr32cc	mvfx1, [r3, #-20]	; 0xffffffec
    8b58:	01062d05 	tsteq	r6, r5, lsl #26
    8b5c:	4c061105 	stfmis	f1, [r6], {5}
    8b60:	01061a05 	tsteq	r6, r5, lsl #20
    8b64:	03062505 	movweq	r2, #25861	; 0x6505
    8b68:	01052e09 	tsteq	r5, r9, lsl #28
    8b6c:	02201506 	eoreq	r1, r0, #25165824	; 0x1800000
    8b70:	01010005 	tsteq	r1, r5
    8b74:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8b78:	00000002 	andeq	r0, r0, r2
    8b7c:	03970300 	orrseq	r0, r7, #0, 6
    8b80:	13050501 	movwne	r0, #21761	; 0x5501
    8b84:	13060105 	movwne	r0, #24837	; 0x6105
    8b88:	01000602 	tsteq	r0, r2, lsl #12
    8b8c:	00010501 	andeq	r0, r1, r1, lsl #10
    8b90:	00000205 	andeq	r0, r0, r5, lsl #4
    8b94:	9d030000 	stcls	0, cr0, [r3, #-0]
    8b98:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    8b9c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ba0:	00060213 	andeq	r0, r6, r3, lsl r2
    8ba4:	01050101 	tsteq	r5, r1, lsl #2
    8ba8:	00020500 	andeq	r0, r2, r0, lsl #10
    8bac:	03000000 	movweq	r0, #0
    8bb0:	140103a3 	strne	r0, [r1], #-931	; 0xfffffc5d
    8bb4:	01000102 	tsteq	r0, r2, lsl #2
    8bb8:	00010501 	andeq	r0, r1, r1, lsl #10
    8bbc:	00000205 	andeq	r0, r0, r5, lsl #4
    8bc0:	aa030000 	bge	c8bc8 <__HEAP_SIZE+0xc7bc8>
    8bc4:	01060103 	tsteq	r6, r3, lsl #2
    8bc8:	21060505 	tstcs	r6, r5, lsl #10
    8bcc:	06090514 			; <UNDEFINED> instruction: 0x06090514
    8bd0:	02005801 	andeq	r5, r0, #65536	; 0x10000
    8bd4:	06200104 	strteq	r0, [r0], -r4, lsl #2
    8bd8:	060e0522 	streq	r0, [lr], -r2, lsr #10
    8bdc:	06090501 	streq	r0, [r9], -r1, lsl #10
    8be0:	060b055a 			; <UNDEFINED> instruction: 0x060b055a
    8be4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8be8:	06160530 			; <UNDEFINED> instruction: 0x06160530
    8bec:	4f010501 	svcmi	0x00010501
    8bf0:	030c052e 	movweq	r0, #50478	; 0xc52e
    8bf4:	05052e73 	streq	r2, [r5, #-3699]	; 0xfffff18d
    8bf8:	200c0306 	andcs	r0, ip, r6, lsl #6
    8bfc:	01060c05 	tsteq	r6, r5, lsl #24
    8c00:	01000102 	tsteq	r0, r2, lsl #2
    8c04:	00010501 	andeq	r0, r1, r1, lsl #10
    8c08:	00000205 	andeq	r0, r0, r5, lsl #4
    8c0c:	b0030000 	andlt	r0, r3, r0
    8c10:	01060104 	tsteq	r6, r4, lsl #2
    8c14:	2f060505 	svccs	0x00060505
    8c18:	09051413 	stmdbeq	r5, {r0, r1, r4, sl, ip}
    8c1c:	06110530 			; <UNDEFINED> instruction: 0x06110530
    8c20:	06090501 	streq	r0, [r9], -r1, lsl #10
    8c24:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    8c28:	03270501 			; <UNDEFINED> instruction: 0x03270501
    8c2c:	19052078 	stmdbne	r5, {r3, r4, r5, r6, sp}
    8c30:	200c052e 	andcs	r0, ip, lr, lsr #10
    8c34:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    8c38:	0c052e19 	stceq	14, cr2, [r5], {25}
    8c3c:	06050520 	streq	r0, [r5], -r0, lsr #10
    8c40:	05202003 	streq	r2, [r0, #-3]!
    8c44:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    8c48:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    8c4c:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    8c50:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8c54:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    8c58:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8c5c:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    8c60:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    8c64:	31053009 	tstcc	r5, r9
    8c68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8c6c:	35053d06 	strcc	r3, [r5, #-3334]	; 0xfffff2fa
    8c70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8c74:	2f053d06 	svccs	0x00053d06
    8c78:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8c7c:	35053d06 	strcc	r3, [r5, #-3334]	; 0xfffff2fa
    8c80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8c84:	01053e06 	tsteq	r5, r6, lsl #28
    8c88:	11052f06 	tstne	r5, r6, lsl #30
    8c8c:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    8c90:	01061905 	tsteq	r6, r5, lsl #18
    8c94:	03061205 	movweq	r1, #25093	; 0x6205
    8c98:	1c05206e 	stcne	0, cr2, [r5], {110}	; 0x6e
    8c9c:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    8ca0:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    8ca4:	06180532 			; <UNDEFINED> instruction: 0x06180532
    8ca8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8cac:	061c0522 	ldreq	r0, [ip], -r2, lsr #10
    8cb0:	20130501 	andscs	r0, r3, r1, lsl #10
    8cb4:	05301e05 	ldreq	r1, [r0, #-3589]!	; 0xfffff1fb
    8cb8:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    8cbc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    8cc0:	0220301e 	eoreq	r3, r0, #30
    8cc4:	0101000d 	tsteq	r1, sp
    8cc8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8ccc:	00000002 	andeq	r0, r0, r2
    8cd0:	04e90300 	strbteq	r0, [r9], #768	; 0x300
    8cd4:	13050501 	movwne	r0, #21761	; 0x5501
    8cd8:	01060b05 	tsteq	r6, r5, lsl #22
    8cdc:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    8ce0:	01061905 	tsteq	r6, r5, lsl #18
    8ce4:	2f060505 	svccs	0x00060505
    8ce8:	01062405 	tsteq	r6, r5, lsl #8
    8cec:	2f060505 	svccs	0x00060505
    8cf0:	01062405 	tsteq	r6, r5, lsl #8
    8cf4:	2f060505 	svccs	0x00060505
    8cf8:	01061e05 	tsteq	r6, r5, lsl #28
    8cfc:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    8d00:	0101000b 	tsteq	r1, fp
    8d04:	000005f2 	strdeq	r0, [r0], -r2
    8d08:	018d0003 	orreq	r0, sp, r3
    8d0c:	01020000 	mrseq	r0, (UNDEF: 2)
    8d10:	000d0efb 	strdeq	r0, [sp], -fp
    8d14:	01010101 	tsteq	r1, r1, lsl #2
    8d18:	01000000 	mrseq	r0, (UNDEF: 0)
    8d1c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8d20:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8d24:	2f2e2e2f 	svccs	0x002e2e2f
    8d28:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    8d2c:	2f736f74 	svccs	0x00736f74
    8d30:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    8d34:	534f5452 	movtpl	r5, #62546	; 0xf452
    8d38:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    8d3c:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    8d40:	43472f65 	movtmi	r2, #32613	; 0x7f65
    8d44:	52412f43 	subpl	r2, r1, #268	; 0x10c
    8d48:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    8d4c:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    8d50:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    8d54:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    8d58:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    8d5c:	3a630065 	bcc	18c8ef8 <__RAM_SIZE+0x17c8ef8>
    8d60:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8d64:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8d68:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8d6c:	6f72705c 	svcvs	0x0072705c
    8d70:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8d74:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8d78:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8d7c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8d80:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8d84:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8d88:	61652d65 	cmnvs	r5, r5, ror #26
    8d8c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8d90:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8d94:	31323032 	teqcc	r2, r2, lsr r0
    8d98:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8d9c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8da0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8da4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8da8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8dac:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8db0:	616d5c65 	cmnvs	sp, r5, ror #24
    8db4:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    8db8:	3a630065 	bcc	18c8f54 <__RAM_SIZE+0x17c8f54>
    8dbc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8dc0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8dc4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8dc8:	6f72705c 	svcvs	0x0072705c
    8dcc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8dd0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8dd4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8dd8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8ddc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8de0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8de4:	61652d65 	cmnvs	r5, r5, ror #26
    8de8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8dec:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8df0:	31323032 	teqcc	r2, r2, lsr r0
    8df4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8df8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8dfc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8e00:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8e04:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8e08:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8e0c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    8e10:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    8e14:	2f2e2e2f 	svccs	0x002e2e2f
    8e18:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8d68 <__HEAP_SIZE+0x7d68>
    8e1c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    8e20:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    8e24:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    8e28:	2f534f54 	svccs	0x00534f54
    8e2c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8e30:	00656475 	rsbeq	r6, r5, r5, ror r4
    8e34:	726f7000 	rsbvc	r7, pc, #0
    8e38:	00632e74 	rsbeq	r2, r3, r4, ror lr
    8e3c:	5f000001 	svcpl	0x00000001
    8e40:	61666564 	cmnvs	r6, r4, ror #10
    8e44:	5f746c75 	svcpl	0x00746c75
    8e48:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    8e4c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8e50:	5f000002 	svcpl	0x00000002
    8e54:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    8e58:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    8e5c:	00000300 	andeq	r0, r0, r0, lsl #6
    8e60:	6a6f7270 	bvs	1be5828 <__RAM_SIZE+0x1ae5828>
    8e64:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    8e68:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    8e6c:	6f700000 	svcvs	0x00700000
    8e70:	616d7472 	smcvs	55106	; 0xd742
    8e74:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    8e78:	6f6d6d6f 	svcvs	0x006d6d6f
    8e7c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    8e80:	70000001 	andvc	r0, r0, r1
    8e84:	6174726f 	cmnvs	r4, pc, ror #4
    8e88:	682e6d73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr}
    8e8c:	00000100 	andeq	r0, r0, r0, lsl #2
    8e90:	6b736174 	blvs	1ce1468 <__RAM_SIZE+0x1be1468>
    8e94:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    8e98:	05000000 	streq	r0, [r0, #-0]
    8e9c:	02050001 	andeq	r0, r5, #1
    8ea0:	10003700 	andne	r3, r0, r0, lsl #14
    8ea4:	0106a603 	tsteq	r6, r3, lsl #12
    8ea8:	052f0505 	streq	r0, [pc, #-1285]!	; 89ab <__HEAP_SIZE+0x79ab>
    8eac:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    8eb0:	0535062e 	ldreq	r0, [r5, #-1582]!	; 0xfffff9d2
    8eb4:	00301305 	eorseq	r1, r0, r5, lsl #6
    8eb8:	03010402 	movweq	r0, #5122	; 0x1402
    8ebc:	0a050109 	beq	1492e8 <__RAM_SIZE+0x492e8>
    8ec0:	01040200 	mrseq	r0, R12_usr
    8ec4:	05017703 	streq	r7, [r1, #-1795]	; 0xfffff8fd
    8ec8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    8ecc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8ed0:	0402000a 	streq	r0, [r2], #-10
    8ed4:	01052001 	tsteq	r5, r1
    8ed8:	022e0a03 	eoreq	r0, lr, #12288	; 0x3000
    8edc:	01010003 	tsteq	r1, r3
    8ee0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8ee4:	00371802 	eorseq	r1, r7, r2, lsl #16
    8ee8:	04af0310 	strteq	r0, [pc], #784	; 8ef0 <__HEAP_SIZE+0x7ef0>
    8eec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8ef0:	13210609 			; <UNDEFINED> instruction: 0x13210609
    8ef4:	061f0515 			; <UNDEFINED> instruction: 0x061f0515
    8ef8:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8efc:	43060905 	movwmi	r0, #26885	; 0x6905
    8f00:	05322f21 	ldreq	r2, [r2, #-3873]!	; 0xfffff0df
    8f04:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    8f08:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    8f0c:	05052406 	streq	r2, [r5, #-1030]	; 0xfffffbfa
    8f10:	01bf0306 			; <UNDEFINED> instruction: 0x01bf0306
    8f14:	060d0520 	streq	r0, [sp], -r0, lsr #10
    8f18:	207ec903 	rsbscs	ip, lr, r3, lsl #18
    8f1c:	01062705 	tsteq	r6, r5, lsl #14
    8f20:	51060d05 	tstpl	r6, r5, lsl #26
    8f24:	01062505 	tsteq	r6, r5, lsl #10
    8f28:	22060d05 	andcs	r0, r6, #320	; 0x140
    8f2c:	01060f05 	tsteq	r6, r5, lsl #30
    8f30:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    8f34:	01062905 	tsteq	r6, r5, lsl #18
    8f38:	060d0520 	streq	r0, [sp], -r0, lsr #10
    8f3c:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    8f40:	05010667 	streq	r0, [r1, #-1639]	; 0xfffff999
    8f44:	1b052051 	blne	151090 <__RAM_SIZE+0x51090>
    8f48:	060d052e 	streq	r0, [sp], -lr, lsr #10
    8f4c:	06130530 			; <UNDEFINED> instruction: 0x06130530
    8f50:	4a0f0501 	bmi	3ca35c <__RAM_SIZE+0x2ca35c>
    8f54:	3e061105 	adfccs	f1, f6, f5
    8f58:	01062705 	tsteq	r6, r5, lsl #14
    8f5c:	67061105 	strvs	r1, [r6, -r5, lsl #2]
    8f60:	01061f05 	tsteq	r6, r5, lsl #30
    8f64:	3f060d05 	svccc	0x00060d05
    8f68:	01061f05 	tsteq	r6, r5, lsl #30
    8f6c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    8f70:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    8f74:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    8f78:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    8f7c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    8f80:	0540060d 	strbeq	r0, [r0, #-1549]	; 0xfffff9f3
    8f84:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    8f88:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    8f8c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    8f90:	0551060d 	ldrbeq	r0, [r1, #-1549]	; 0xfffff9f3
    8f94:	0d05133e 	stceq	3, cr1, [r5, #-248]	; 0xffffff08
    8f98:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    8f9c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8fa0:	05212f22 	streq	r2, [r1, #-3874]!	; 0xfffff0de
    8fa4:	0d05313d 	stfeqs	f3, [r5, #-244]	; 0xffffff0c
    8fa8:	342f2117 	strtcc	r2, [pc], #-279	; 8fb0 <__HEAP_SIZE+0x7fb0>
    8fac:	09032f21 	stmdbeq	r3, {r0, r5, r8, r9, sl, fp, sp}
    8fb0:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    8fb4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8fb8:	0613054d 	ldreq	r0, [r3], -sp, asr #10
    8fbc:	200f0501 	andcs	r0, pc, r1, lsl #10
    8fc0:	3e061105 	adfccs	f1, f6, f5
    8fc4:	064b0517 			; <UNDEFINED> instruction: 0x064b0517
    8fc8:	2e5f0501 	cdpcs	5, 5, cr0, cr15, cr1, {0}
    8fcc:	053c5d05 	ldreq	r5, [ip, #-3333]!	; 0xfffff2fb
    8fd0:	2705204b 	strcs	r2, [r5, -fp, asr #32]
    8fd4:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    8fd8:	062d0526 	strteq	r0, [sp], -r6, lsr #10
    8fdc:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    8fe0:	02004d05 	andeq	r4, r0, #320	; 0x140
    8fe4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    8fe8:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    8fec:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    8ff0:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    8ff4:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    8ff8:	06410611 			; <UNDEFINED> instruction: 0x06410611
    8ffc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    9000:	05012d03 	streq	r2, [r1, #-3331]	; 0xfffff2fd
    9004:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    9008:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    900c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    9010:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    9014:	05010645 	streq	r0, [r1, #-1605]	; 0xfffff9bb
    9018:	0d053c2b 	stceq	12, cr3, [r5, #-172]	; 0xffffff54
    901c:	20150306 	andscs	r0, r5, r6, lsl #6
    9020:	06050531 			; <UNDEFINED> instruction: 0x06050531
    9024:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    9028:	207fbe03 	rsbscs	fp, pc, r3, lsl #28
    902c:	01062905 	tsteq	r6, r5, lsl #18
    9030:	03061105 	movweq	r1, #24837	; 0x6105
    9034:	44053c12 	strmi	r3, [r5], #-3090	; 0xfffff3ee
    9038:	2e050106 	adfcss	f0, f5, f6
    903c:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    9040:	06270524 	strteq	r0, [r7], -r4, lsr #10
    9044:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    9048:	064f0532 			; <UNDEFINED> instruction: 0x064f0532
    904c:	2e6b0501 	cdpcs	5, 6, cr0, cr11, cr1, {0}
    9050:	202b0520 	eorcs	r0, fp, r0, lsr #10
    9054:	00080220 	andeq	r0, r8, r0, lsr #4
    9058:	01050101 	tsteq	r5, r1, lsl #2
    905c:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    9060:	03100038 	tsteq	r0, #56	; 0x38
    9064:	0501068a 	streq	r0, [r1, #-1674]	; 0xfffff976
    9068:	21051609 	tstcs	r5, r9, lsl #12
    906c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9070:	29054b06 	stmdbcs	r5, {r1, r2, r8, r9, fp, lr}
    9074:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9078:	24054b06 	strcs	r4, [r5], #-2822	; 0xfffff4fa
    907c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9080:	3c0c0306 	stccc	3, cr0, [ip], {6}
    9084:	01061f05 	tsteq	r6, r5, lsl #30
    9088:	4b060505 	blmi	18a4a4 <__RAM_SIZE+0x8a4a4>
    908c:	01062805 	tsteq	r6, r5, lsl #16
    9090:	31060505 	tstcc	r6, r5, lsl #10
    9094:	01061f05 	tsteq	r6, r5, lsl #30
    9098:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    909c:	01061f05 	tsteq	r6, r5, lsl #30
    90a0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    90a4:	01010008 	tsteq	r1, r8
    90a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    90ac:	00386802 	eorseq	r6, r8, r2, lsl #16
    90b0:	07ce0310 	bfieq	r0, r0, #6, #9
    90b4:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    90b8:	01061b05 	tsteq	r6, r5, lsl #22
    90bc:	6a060505 	bvs	18a4d8 <__RAM_SIZE+0x8a4d8>
    90c0:	0601052f 	streq	r0, [r1], -pc, lsr #10
    90c4:	0001022f 	andeq	r0, r1, pc, lsr #4
    90c8:	01050101 	tsteq	r5, r1, lsl #2
    90cc:	80020500 	andhi	r0, r2, r0, lsl #10
    90d0:	03100038 	tsteq	r0, #56	; 0x38
    90d4:	050107da 	streq	r0, [r1, #-2010]	; 0xfffff826
    90d8:	052f2105 	streq	r2, [pc, #-261]!	; 8fdb <__HEAP_SIZE+0x7fdb>
    90dc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    90e0:	2f4e0605 	svccs	0x004e0605
    90e4:	2f060105 	svccs	0x00060105
    90e8:	01000302 	tsteq	r0, r2, lsl #6
    90ec:	00010501 	andeq	r0, r1, r1, lsl #10
    90f0:	389c0205 	ldmcc	ip, {r0, r2, r9}
    90f4:	e6031000 	str	r1, [r3], -r0
    90f8:	26050107 	strcs	r0, [r5], -r7, lsl #2
    90fc:	13050521 	movwne	r0, #21793	; 0x5521
    9100:	01061605 	tsteq	r6, r5, lsl #12
    9104:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    9108:	01061b05 	tsteq	r6, r5, lsl #22
    910c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    9110:	09052401 	stmdbeq	r5, {r0, sl, sp}
    9114:	01051e06 	tsteq	r5, r6, lsl #28
    9118:	03023e06 	movweq	r3, #11782	; 0x2e06
    911c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9120:	02050001 	andeq	r0, r5, #1
    9124:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
    9128:	0107f203 	tsteq	r7, r3, lsl #4	; <UNPREDICTABLE>
    912c:	14210505 	strtne	r0, [r1], #-1285	; 0xfffffafb
    9130:	01061605 	tsteq	r6, r5, lsl #12
    9134:	3d061505 	cfstr32cc	mvfx1, [r6, #-20]	; 0xffffffec
    9138:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    913c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    9140:	29052e0b 	stmdbcs	r5, {r0, r1, r3, r9, sl, fp, sp}
    9144:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    9148:	06230514 			; <UNDEFINED> instruction: 0x06230514
    914c:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    9150:	1505056a 	strne	r0, [r5, #-1386]	; 0xfffffa96
    9154:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
    9158:	01010020 	tsteq	r1, r0, lsr #32
    915c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9160:	0038da02 	eorseq	sp, r8, r2, lsl #20
    9164:	08890310 	stmeq	r9, {r4, r8, r9}
    9168:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    916c:	0f030605 	svceq	0x00030605
    9170:	01090320 	tsteq	r9, r0, lsr #6
    9174:	060a0516 			; <UNDEFINED> instruction: 0x060a0516
    9178:	06050501 	streq	r0, [r5], -r1, lsl #10
    917c:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    9180:	06050501 	streq	r0, [r5], -r1, lsl #10
    9184:	06010530 			; <UNDEFINED> instruction: 0x06010530
    9188:	2e00db03 	vmlacs.f64	d13, d0, d3
    918c:	03060d05 	movweq	r0, #27909	; 0x6d05
    9190:	052f2066 	streq	r2, [pc, #-102]!	; 9132 <__HEAP_SIZE+0x8132>
    9194:	01170324 	tsteq	r7, r4, lsr #6
    9198:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    919c:	01000102 	tsteq	r0, r2, lsl #2
    91a0:	00050501 	andeq	r0, r5, r1, lsl #10
    91a4:	38f00205 	ldmcc	r0!, {r0, r2, r9}^
    91a8:	85031000 	strhi	r1, [r3, #-0]
    91ac:	0106010c 	tsteq	r6, ip, lsl #2
    91b0:	03060d05 	movweq	r0, #27909	; 0x6d05
    91b4:	0513201b 	ldreq	r2, [r3, #-27]	; 0xffffffe5
    91b8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    91bc:	134b060d 	movtne	r0, #46605	; 0xb60d
    91c0:	01061b05 	tsteq	r6, r5, lsl #22
    91c4:	2f060d05 	svccs	0x00060d05
    91c8:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    91cc:	201b0501 	andscs	r0, fp, r1, lsl #10
    91d0:	2f060d05 	svccs	0x00060d05
    91d4:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    91d8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    91dc:	1b05134b 	blne	14df10 <__RAM_SIZE+0x4df10>
    91e0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    91e4:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    91e8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    91ec:	134b060d 	movtne	r0, #46605	; 0xb60d
    91f0:	01061b05 	tsteq	r6, r5, lsl #22
    91f4:	4b060d05 	blmi	18c610 <__RAM_SIZE+0x8c610>
    91f8:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    91fc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    9200:	1b05132f 	blne	14dec4 <__RAM_SIZE+0x4dec4>
    9204:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    9208:	132f060d 			; <UNDEFINED> instruction: 0x132f060d
    920c:	01061b05 	tsteq	r6, r5, lsl #22
    9210:	4b060d05 	blmi	18c62c <__RAM_SIZE+0x8c62c>
    9214:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    9218:	060d0501 	streq	r0, [sp], -r1, lsl #10
    921c:	1b05134b 	blne	14df50 <__RAM_SIZE+0x4df50>
    9220:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    9224:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    9228:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    922c:	134b060d 	movtne	r0, #46605	; 0xb60d
    9230:	01061b05 	tsteq	r6, r5, lsl #22
    9234:	4b060d05 	blmi	18c650 <__RAM_SIZE+0x8c650>
    9238:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    923c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    9240:	1b05134b 	blne	14df74 <__RAM_SIZE+0x4df74>
    9244:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    9248:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    924c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    9250:	134b060d 	movtne	r0, #46605	; 0xb60d
    9254:	01061b05 	tsteq	r6, r5, lsl #22
    9258:	03060905 	movweq	r0, #26885	; 0x6905
    925c:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    9260:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    9264:	01010005 	tsteq	r1, r5
    9268:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    926c:	00398002 	eorseq	r8, r9, r2
    9270:	0cd50310 	ldcleq	3, cr0, [r5], {16}
    9274:	03090501 	movweq	r0, #38145	; 0x9501
    9278:	4d05200f 	stcmi	0, cr2, [r5, #-60]	; 0xffffffc4
    927c:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    9280:	05051353 	streq	r1, [r5, #-851]	; 0xfffffcad
    9284:	0100d003 	tsteq	r0, r3
    9288:	01061805 	tsteq	r6, r5, lsl #16
    928c:	83060505 	movwhi	r0, #25861	; 0x6505
    9290:	01061805 	tsteq	r6, r5, lsl #16
    9294:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    9298:	01061805 	tsteq	r6, r5, lsl #16
    929c:	03060505 	movweq	r0, #25861	; 0x6505
    92a0:	05313c0b 	ldreq	r3, [r1, #-3083]!	; 0xfffff3f5
    92a4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    92a8:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
    92ac:	312f362e 			; <UNDEFINED> instruction: 0x312f362e
    92b0:	13060105 	movwne	r0, #24837	; 0x6105
    92b4:	01000402 	tsteq	r0, r2, lsl #8
    92b8:	00010501 	andeq	r0, r1, r1, lsl #10
    92bc:	00000205 	andeq	r0, r0, r5, lsl #4
    92c0:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    92c4:	3005010d 	andcc	r0, r5, sp, lsl #2
    92c8:	06010515 			; <UNDEFINED> instruction: 0x06010515
    92cc:	00010213 	andeq	r0, r1, r3, lsl r2
    92d0:	01050101 	tsteq	r5, r1, lsl #2
    92d4:	00020500 	andeq	r0, r2, r0, lsl #10
    92d8:	03000000 	movweq	r0, #0
    92dc:	05010faf 	streq	r0, [r1, #-4015]	; 0xfffff051
    92e0:	17131305 	ldrne	r1, [r3, -r5, lsl #6]
    92e4:	06070530 			; <UNDEFINED> instruction: 0x06070530
    92e8:	22110501 	andscs	r0, r1, #4194304	; 0x400000
    92ec:	06050532 			; <UNDEFINED> instruction: 0x06050532
    92f0:	06010523 	streq	r0, [r1], -r3, lsr #10
    92f4:	00010213 	andeq	r0, r1, r3, lsl r2
    92f8:	023b0101 	eorseq	r0, fp, #1073741824	; 0x40000000
    92fc:	00030000 	andeq	r0, r3, r0
    9300:	00000149 	andeq	r0, r0, r9, asr #2
    9304:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    9308:	0101000d 	tsteq	r1, sp
    930c:	00000101 	andeq	r0, r0, r1, lsl #2
    9310:	00000100 	andeq	r0, r0, r0, lsl #2
    9314:	2f2e2e01 	svccs	0x002e2e01
    9318:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    931c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    9320:	6f747262 	svcvs	0x00747262
    9324:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    9328:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    932c:	702f534f 	eorvc	r5, pc, pc, asr #6
    9330:	6174726f 	cmnvs	r4, pc, ror #4
    9334:	2f656c62 	svccs	0x00656c62
    9338:	2f434347 	svccs	0x00434347
    933c:	5f4d5241 	svcpl	0x004d5241
    9340:	33334d43 	teqcc	r3, #4288	; 0x10c0
    9344:	5a544e5f 	bpl	151ccc8 <__RAM_SIZE+0x141ccc8>
    9348:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    934c:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    9350:	00657275 	rsbeq	r7, r5, r5, ror r2
    9354:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    9358:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    935c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    9360:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    9364:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    9368:	615c6d61 	cmpvs	ip, r1, ror #26
    936c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    9370:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    9374:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    9378:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    937c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9380:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9384:	2e30312d 	rsfcssp	f3, f0, #5.0
    9388:	30322d33 	eorscc	r2, r2, r3, lsr sp
    938c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    9390:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    9394:	6f6e2d6d 	svcvs	0x006e2d6d
    9398:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    939c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    93a0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    93a4:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    93a8:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    93ac:	00656e69 	rsbeq	r6, r5, r9, ror #28
    93b0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    93b4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    93b8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    93bc:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    93c0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    93c4:	615c6d61 	cmpvs	ip, r1, ror #26
    93c8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    93cc:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    93d0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    93d4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    93d8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    93dc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    93e0:	2e30312d 	rsfcssp	f3, f0, #5.0
    93e4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    93e8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    93ec:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    93f0:	6f6e2d6d 	svcvs	0x006e2d6d
    93f4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    93f8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    93fc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    9400:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    9404:	00737973 	rsbseq	r7, r3, r3, ror r9
    9408:	726f7000 	rsbvc	r7, pc, #0
    940c:	6d736174 	ldfvse	f6, [r3, #-464]!	; 0xfffffe30
    9410:	0100632e 	tsteq	r0, lr, lsr #6
    9414:	645f0000 	ldrbvs	r0, [pc], #-0	; 941c <__HEAP_SIZE+0x841c>
    9418:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    941c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 9424 <__HEAP_SIZE+0x8424>
    9420:	73657079 	cmnvc	r5, #121	; 0x79
    9424:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    9428:	735f0000 	cmpvc	pc, #0
    942c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    9430:	00682e74 	rsbeq	r2, r8, r4, ror lr
    9434:	70000003 	andvc	r0, r0, r3
    9438:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    943c:	6f726361 	svcvs	0x00726361
    9440:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    9444:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    9448:	00000100 	andeq	r0, r0, r0, lsl #2
    944c:	00050500 	andeq	r0, r5, r0, lsl #10
    9450:	39c00205 	stmibcc	r0, {r0, r2, r9}^
    9454:	f9031000 			; <UNDEFINED> instruction: 0xf9031000
    9458:	09050100 	stmdbeq	r5, {r8}
    945c:	06050513 			; <UNDEFINED> instruction: 0x06050513
    9460:	2e081303 	cdpcs	3, 0, cr1, cr8, cr3, {0}
    9464:	01000302 	tsteq	r0, r2, lsl #6
    9468:	00010501 	andeq	r0, r1, r1, lsl #10
    946c:	00000205 	andeq	r0, r0, r5, lsl #4
    9470:	93030000 	movwls	r0, #12288	; 0x3000
    9474:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    9478:	06010513 			; <UNDEFINED> instruction: 0x06010513
    947c:	00820c03 	addeq	r0, r2, r3, lsl #24
    9480:	01050101 	tsteq	r5, r1, lsl #2
    9484:	00020500 	andeq	r0, r2, r0, lsl #10
    9488:	03000000 	movweq	r0, #0
    948c:	050101a4 	streq	r0, [r1, #-420]	; 0xfffffe5c
    9490:	01051305 	tsteq	r5, r5, lsl #6
    9494:	740a0306 	strvc	r0, [sl], #-774	; 0xfffffcfa
    9498:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    949c:	02050001 	andeq	r0, r5, #1
    94a0:	00000000 	andeq	r0, r0, r0
    94a4:	0101b303 	tsteq	r1, r3, lsl #6
    94a8:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    94ac:	0a030601 	beq	cacb8 <__HEAP_SIZE+0xc9cb8>
    94b0:	01010074 	tsteq	r1, r4, ror r0
    94b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    94b8:	0039ec02 	eorseq	lr, r9, r2, lsl #24
    94bc:	01c20310 	biceq	r0, r2, r0, lsl r3
    94c0:	13050501 	movwne	r0, #21761	; 0x5501
    94c4:	03060105 	movweq	r0, #24837	; 0x6105
    94c8:	0302c810 	movweq	ip, #10256	; 0x2810
    94cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    94d0:	02050001 	andeq	r0, r5, #1
    94d4:	10003a0c 	andne	r3, r0, ip, lsl #20
    94d8:	0101d703 	tsteq	r1, r3, lsl #14
    94dc:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    94e0:	0c030601 	stceq	6, cr0, [r3], {1}
    94e4:	010100ac 	smlatbeq	r1, ip, r0, r0
    94e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    94ec:	003a2202 	eorseq	r2, sl, r2, lsl #4
    94f0:	01e80310 	mvneq	r0, r0, lsl r3
    94f4:	13050501 	movwne	r0, #21761	; 0x5501
    94f8:	03060105 	movweq	r0, #24837	; 0x6105
    94fc:	0100740a 	tsteq	r0, sl, lsl #8
    9500:	00050501 	andeq	r0, r5, r1, lsl #10
    9504:	3a300205 	bcc	c09d20 <__RAM_SIZE+0xb09d20>
    9508:	eb031000 	bl	cd510 <__HEAP_SIZE+0xcc510>
    950c:	09050102 	stmdbeq	r5, {r1, r8}
    9510:	06050513 			; <UNDEFINED> instruction: 0x06050513
    9514:	22022d03 	andcs	r2, r2, #3, 26	; 0xc0
    9518:	00020201 	andeq	r0, r2, r1, lsl #4
    951c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    9520:	78020500 	stmdavc	r2, {r8, sl}
    9524:	0310003a 	tsteq	r0, #58	; 0x3a
    9528:	050103c7 	streq	r0, [r1, #-967]	; 0xfffffc39
    952c:	05051309 	streq	r1, [r5, #-777]	; 0xfffffcf7
    9530:	900b0306 	andls	r0, fp, r6, lsl #6
    9534:	01000302 	tsteq	r0, r2, lsl #6
    9538:	00008201 	andeq	r8, r0, r1, lsl #4
    953c:	36000300 	strcc	r0, [r0], -r0, lsl #6
    9540:	02000000 	andeq	r0, r0, #0
    9544:	0d0efb01 	vstreq	d15, [lr, #-4]
    9548:	01010100 	mrseq	r0, (UNDEF: 17)
    954c:	00000001 	andeq	r0, r0, r1
    9550:	01000001 	tsteq	r0, r1
    9554:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    9558:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    955c:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    9560:	73000063 	movwvc	r0, #99	; 0x63
    9564:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    9568:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
    956c:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
    9570:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
    9574:	00000100 	andeq	r0, r0, r0, lsl #2
    9578:	02050000 	andeq	r0, r5, #0
    957c:	10003ab0 			; <UNDEFINED> instruction: 0x10003ab0
    9580:	0100d303 	tsteq	r0, r3, lsl #6
    9584:	2f213021 	svccs	0x00213021
    9588:	23213036 			; <UNDEFINED> instruction: 0x23213036
    958c:	21212121 			; <UNDEFINED> instruction: 0x21212121
    9590:	21212321 			; <UNDEFINED> instruction: 0x21212321
    9594:	21222121 			; <UNDEFINED> instruction: 0x21222121
    9598:	21232123 			; <UNDEFINED> instruction: 0x21232123
    959c:	21212121 			; <UNDEFINED> instruction: 0x21212121
    95a0:	21212123 			; <UNDEFINED> instruction: 0x21212123
    95a4:	03232122 			; <UNDEFINED> instruction: 0x03232122
    95a8:	09032e0e 	stmdbeq	r3, {r1, r2, r3, r9, sl, fp, sp}
    95ac:	7faf0320 	svcvc	0x00af0320
    95b0:	0c03312e 	stfeqs	f3, [r3], {46}	; 0x2e
    95b4:	15032f2e 	strne	r2, [r3, #-3886]	; 0xfffff0d2
    95b8:	02022f2e 	andeq	r2, r2, #46, 30	; 0xb8
    95bc:	84010100 	strhi	r0, [r1], #-256	; 0xffffff00
    95c0:	03000000 	movweq	r0, #0
    95c4:	00004e00 	andeq	r4, r0, r0, lsl #28
    95c8:	fb010200 	blx	49dd2 <__HEAP_SIZE+0x48dd2>
    95cc:	01000d0e 	tsteq	r0, lr, lsl #26
    95d0:	00010101 	andeq	r0, r1, r1, lsl #2
    95d4:	00010000 	andeq	r0, r1, r0
    95d8:	2e2e0100 	sufcse	f0, f6, f0
    95dc:	2f2e2e2f 	svccs	0x002e2e2f
    95e0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 9530 <__HEAP_SIZE+0x8530>
    95e4:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    95e8:	2f736c69 	svccs	0x00736c69
    95ec:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    95f0:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    95f4:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    95f8:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    95fc:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    9600:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
    9604:	66000033 			; <UNDEFINED> instruction: 0x66000033
    9608:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    960c:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    9610:	0100732e 	tsteq	r0, lr, lsr #6
    9614:	00000000 	andeq	r0, r0, r0
    9618:	3b200205 	blcc	809e34 <__RAM_SIZE+0x709e34>
    961c:	19031000 	stmdbne	r3, {ip}
    9620:	21212101 			; <UNDEFINED> instruction: 0x21212101
    9624:	222f2221 	eorcs	r2, pc, #268435458	; 0x10000002
    9628:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    962c:	232f2f22 			; <UNDEFINED> instruction: 0x232f2f22
    9630:	22212f2f 	eorcs	r2, r1, #47, 30	; 0xbc
    9634:	2122232f 			; <UNDEFINED> instruction: 0x2122232f
    9638:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    963c:	03302e5e 	teqeq	r0, #1504	; 0x5e0
    9640:	02022e1d 	andeq	r2, r2, #464	; 0x1d0
    9644:	Address 0x00009644 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
       4:	5f38746e 	svcpl	0x0038746e
        xReturn = pdFALSE;
       8:	69730074 	ldmdbvs	r3!, {r2, r4, r5, r6}^
}
       c:	745f657a 	ldrbvc	r6, [pc], #-1402	; 14 <__STACKSEAL_SIZE+0x14>
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
}
      14:	645f746c 	ldrbvs	r7, [pc], #-1132	; 1c <__STACKSEAL_SIZE+0x1c>
        if(ch == '\n' || it >= size) {
      18:	5f706d75 	svcpl	0x00706d75
}
      1c:	735f6d62 	cmpvc	pc, #6272	; 0x1880
      20:	6b636174 	blvs	18d85f8 <__RAM_SIZE+0x17d85f8>
      24:	6174735f 	cmnvs	r4, pc, asr r3
      28:	66007472 			; <UNDEFINED> instruction: 0x66007472
      2c:	72656572 	rsbvc	r6, r5, #478150656	; 0x1c800000
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	5f736f74 	svcpl	0x00736f74
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
      38:	61705f6b 	cmnvs	r0, fp, ror #30
      3c:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
      40:	756f6300 	strbvc	r6, [pc, #-768]!	; fffffd48 <__StackTop+0xc7effd48>
        BaseType_t xReturn = pdFAIL;
      44:	6d00746e 	cfstrsvs	mvf7, [r0, #-440]	; 0xfffffe48
    }
      48:	5f6e6961 	svcpl	0x006e6961
    if ((*sp >= fault_dump_text_base()) && (*sp <= fault_dump_text_ends())) {
      4c:	6b736174 	blvs	1cd8624 <__RAM_SIZE+0x1bd8624>
      50:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
        pc = *sp;
      54:	76007972 			; <UNDEFINED> instruction: 0x76007972
      58:	6b736154 	blvs	1cd85b0 <__RAM_SIZE+0x1bd85b0>
    return pc;
      5c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
        return 0;
      60:	68635374 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, ip, lr}^
      64:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
      68:	5f007265 	svcpl	0x00007265
      6c:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
      70:	005f5f63 	subseq	r5, pc, r3, ror #30
      74:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
      78:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
      7c:	6f697461 	svcvs	0x00697461
            prvUnlockQueue( pxQueue );
      80:	616d2f6e 	cmnvs	sp, lr, ror #30
            ( void ) xTaskResumeAll();
      84:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72617500 	rsbvc	r7, r1, #0, 10
      8c:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
      90:	63007469 	movwvs	r7, #1129	; 0x469
        taskENTER_CRITICAL();
      94:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5f007265 	svcpl	0x00007265
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
      a0:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
                else if( xEntryTimeSet == pdFALSE )
      a4:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
        taskEXIT_CRITICAL();
      a8:	6e750073 	mrcvs	0, 3, r0, cr5, cr3, {3}
        vTaskSuspendAll();
      ac:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
        prvLockQueue( pxQueue );
      b0:	63206465 			; <UNDEFINED> instruction: 0x63206465
      b4:	00726168 	rsbseq	r6, r2, r8, ror #2
      b8:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
      bc:	61700033 	cmnvs	r0, r3, lsr r0
      c0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
      c4:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
      c8:	6f687300 	svcvs	0x00687300
      cc:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      d4:	2064656e 	rsbcs	r6, r4, lr, ror #10
      d8:	00746e69 	rsbseq	r6, r4, r9, ror #28
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	20554e47 	subscs	r4, r5, r7, asr #28
      e0:	20373143 	eorscs	r3, r7, r3, asr #2
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
      e8:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	30313230 	eorscc	r3, r1, r0, lsr r2
      f0:	20343238 	eorscs	r3, r4, r8, lsr r2
                prvUnlockQueue( pxQueue );
      f4:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
      f8:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
                if( xTaskResumeAll() == pdFALSE )
      fc:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
     100:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
                    taskYIELD_WITHIN_API();
     104:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
                    if( xInheritanceOccurred != pdFALSE )
     108:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
                return errQUEUE_EMPTY;
     10c:	2d203333 	stccs	3, cr3, [r0, #-204]!	; 0xffffff34
                        taskENTER_CRITICAL();
     110:	7570666d 	ldrbvc	r6, [r0, #-1645]!	; 0xfffff993
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	7670663d 			; <UNDEFINED> instruction: 0x7670663d
     118:	70732d35 	rsbsvc	r2, r3, r5, lsr sp
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	3631642d 	ldrtcc	r6, [r1], -sp, lsr #8
                        taskEXIT_CRITICAL();
     120:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     124:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     128:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     12c:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
     130:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
     134:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     138:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
     13c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     140:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     144:	6d2d3876 	stcvs	8, cr3, [sp, #-472]!	; 0xfffffe28
     148:	69616d2e 	stmdbvs	r1!, {r1, r2, r3, r5, r8, sl, fp, sp, lr}^
     14c:	73642b6e 	cmnvc	r4, #112640	; 0x1b800
     150:	70662b70 	rsbvc	r2, r6, r0, ror fp
     154:	20672d20 	rsbcs	r2, r7, r0, lsr #26
     158:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
     15c:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
     160:	4f2d2032 	svcmi	0x002d2032
     164:	662d2067 	strtvs	r2, [sp], -r7, rrx
     168:	61746164 	cmnvs	r4, r4, ror #2
     16c:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     170:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     174:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     178:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     17c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     180:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     184:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     188:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     18c:	652d6f6e 	strvs	r6, [sp, #-3950]!	; 0xfffff092
     190:	70656378 	rsbvc	r6, r5, r8, ror r3
     194:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     198:	61480073 	hvcvs	32771	; 0x8003
     19c:	61466472 	hvcvs	26178	; 0x6642
     1a0:	5f746c75 	svcpl	0x00746c75
     1a4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     1a8:	5f72656c 	svcpl	0x0072656c
     1ac:	6567654c 	strbvs	r6, [r7, #-1356]!	; 0xfffffab4
     1b0:	0079636e 	rsbseq	r6, r9, lr, ror #6
     1b4:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
     1b8:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
     1bc:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
     1c0:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
     1c4:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     1c8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     1cc:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     1d0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     1d4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     1d8:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     1dc:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     1e0:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     1e4:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     1e8:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     1ec:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     1f0:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     1f4:	706d5c73 	rsbvc	r5, sp, r3, ror ip
     1f8:	612d3273 			; <UNDEFINED> instruction: 0x612d3273
     1fc:	3530356e 	ldrcc	r3, [r0, #-1390]!	; 0xfffffa92
     200:	6572465c 	ldrbvs	r4, [r2, #-1628]!	; 0xfffff9a4
     204:	4f545265 	svcmi	0x00545265
     208:	616d0053 	qdsubvs	r0, r3, sp
     20c:	74006e69 	strvc	r6, [r0], #-3689	; 0xfffff197
     210:	61546b73 	cmpvs	r4, r3, ror fp
     214:	6f436b73 	svcvs	0x00436b73
     218:	6f72746e 	svcvs	0x0072746e
     21c:	6f6c426c 	svcvs	0x006c426c
     220:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
     224:	61654863 	cmnvs	r5, r3, ror #16
     228:	65740070 	ldrbvs	r0, [r4, #-112]!	; 0xffffff90
     22c:	00347473 	eorseq	r7, r4, r3, ror r4
     230:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     234:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     238:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
     23c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     240:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     244:	6d00746e 	cfstrsvs	mvf7, [r0, #-440]	; 0xfffffe48
     248:	5f6e6961 	svcpl	0x006e6961
     24c:	6b736174 	blvs	1cd8824 <__RAM_SIZE+0x1bd8824>
     250:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     254:	645f746c 	ldrbvs	r7, [pc], #-1132	; 25c <__STACKSEAL_SIZE+0x25c>
     258:	5f706d75 	svcpl	0x00706d75
     25c:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
     260:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     264:	6166006b 	cmnvs	r6, fp, rrx
     268:	5f746c75 	svcpl	0x00746c75
     26c:	706d7564 	rsbvc	r7, sp, r4, ror #10
     270:	7073705f 	rsbsvc	r7, r3, pc, asr r0
     274:	6174735f 	cmnvs	r4, pc, asr r3
     278:	705f6b63 	subsvc	r6, pc, r3, ror #22
     27c:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
     280:	6f6c0072 	svcvs	0x006c0072
     284:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
     288:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
     28c:	6f6c0065 	svcvs	0x006c0065
     290:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
     294:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     298:	00746e69 	rsbseq	r6, r4, r9, ror #28
     29c:	61666544 	cmnvs	r6, r4, asr #10
     2a0:	5f746c75 	svcpl	0x00746c75
     2a4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     2a8:	0072656c 	rsbseq	r6, r2, ip, ror #10
     2ac:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     2b0:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     2b4:	755f706d 	ldrbvc	r7, [pc, #-109]	; 24f <__STACKSEAL_SIZE+0x24f>
     2b8:	696c616e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
     2bc:	66006e67 	strvs	r6, [r0], -r7, ror #28
     2c0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     2c4:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     2c8:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     2cc:	6d007469 	cfstrsvs	mvf7, [r0, #-420]	; 0xfffffe5c
     2d0:	5f6e6961 	svcpl	0x006e6961
     2d4:	6b736174 	blvs	1cd88ac <__RAM_SIZE+0x1bd88ac>
     2d8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     2dc:	68730074 	ldmdavs	r3!, {r2, r4, r5, r6}^
     2e0:	2074726f 	rsbscs	r7, r4, pc, ror #4
     2e4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     2e8:	6b736154 	blvs	1cd8840 <__RAM_SIZE+0x1bd8840>
     2ec:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     2f0:	745f656c 	ldrbvc	r6, [pc], #-1388	; 2f8 <__STACKSEAL_SIZE+0x2f8>
     2f4:	61547600 	cmpvs	r4, r0, lsl #12
     2f8:	65446b73 	strbvs	r6, [r4, #-2931]	; 0xfffff48d
     2fc:	0079616c 	rsbseq	r6, r9, ip, ror #2
     300:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     304:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     308:	625f706d 	subsvs	r7, pc, #109	; 0x6d
     30c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
     310:	5f6b6361 	svcpl	0x006b6361
     314:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     318:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     31c:	00307473 	eorseq	r7, r0, r3, ror r4
     320:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     324:	65740031 	ldrbvs	r0, [r4, #-49]!	; 0xffffffcf
     328:	00327473 	eorseq	r7, r2, r3, ror r4
     32c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     330:	6572436b 	ldrbvs	r4, [r2, #-875]!	; 0xfffffc95
     334:	00657461 	rsbeq	r7, r5, r1, ror #8
     338:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     33c:	2f2e0035 	svccs	0x002e0035
     340:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     344:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     348:	2f6e6f69 	svccs	0x006e6f69
     34c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     350:	415f6d65 	cmpmi	pc, r5, ror #26
     354:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     358:	632e3333 			; <UNDEFINED> instruction: 0x632e3333
     35c:	49545300 	ldmdbmi	r4, {r8, r9, ip, lr}^
     360:	43440052 	movtmi	r0, #16466	; 0x4052
     364:	41564d49 	cmpmi	r6, r9, asr #26
     368:	4c430043 	mcrrmi	0, 4, r0, r3, cr3
     36c:	00524449 	subseq	r4, r2, r9, asr #8
     370:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
     374:	50420044 	subpl	r0, r2, r4, asr #32
     378:	4c4c4149 	stfmie	f4, [ip], {73}	; 0x49
     37c:	5f444900 	svcpl	0x00444900
     380:	00524650 	subseq	r4, r2, r0, asr r6
     384:	49434344 	stmdbmi	r3, {r2, r6, r8, r9, lr}^
     388:	53005753 	movwpl	r5, #1875	; 0x753
     38c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     390:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     394:	6f6c4365 	svcvs	0x006c4365
     398:	70556b63 	subsvc	r6, r5, r3, ror #22
     39c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     3a0:	5f444900 	svcpl	0x00444900
     3a4:	52464d4d 	subpl	r4, r6, #4928	; 0x1340
     3a8:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     3ac:	554c4c41 	strbpl	r4, [ip, #-3137]	; 0xfffff3bf
     3b0:	41464200 	mrsmi	r4, (UNDEF: 102)
     3b4:	5f5f0052 	svcpl	0x005f0052
     3b8:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     3bc:	745f3233 	ldrbvc	r3, [pc], #-563	; 3c4 <__STACKSEAL_SIZE+0x3c4>
     3c0:	42435300 	submi	r5, r3, #0, 6
     3c4:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     3c8:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
     3cc:	5246445f 	subpl	r4, r6, #1593835520	; 0x5f000000
     3d0:	43434400 	movtmi	r4, #13312	; 0x3400
     3d4:	4341564d 	movtmi	r5, #5709	; 0x164d
     3d8:	53534300 	cmppl	r3, #0, 6
     3dc:	00524c45 	subseq	r4, r2, r5, asr #24
     3e0:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     3e4:	6f436d65 	svcvs	0x00436d65
     3e8:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
     3ec:	006b636f 	rsbeq	r6, fp, pc, ror #6
     3f0:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     3f4:	00554156 	subseq	r4, r5, r6, asr r1
     3f8:	65565f5f 	ldrbvs	r5, [r6, #-3935]	; 0xfffff0a1
     3fc:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
     400:	54560073 	ldrbpl	r0, [r6], #-115	; 0xffffff8d
     404:	5300524f 	movwpl	r5, #591	; 0x24f
     408:	00524146 	subseq	r4, r2, r6, asr #2
     40c:	52534349 	subspl	r4, r3, #603979777	; 0x24000001
     410:	52494100 	subpl	r4, r9, #0, 2
     414:	44005243 	strmi	r5, [r0], #-579	; 0xfffffdbd
     418:	00525346 	subseq	r5, r2, r6, asr #6
     41c:	41464d4d 	cmpmi	r6, sp, asr #26
     420:	43430052 	movtmi	r0, #12370	; 0x3052
     424:	52444953 	subpl	r4, r4, #1359872	; 0x14c000
     428:	53464300 	movtpl	r4, #25344	; 0x6300
     42c:	534e0052 	movtpl	r0, #57426	; 0xe052
     430:	00524341 	subseq	r4, r2, r1, asr #6
     434:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
     438:	564d0030 			; <UNDEFINED> instruction: 0x564d0030
     43c:	00315246 	eorseq	r5, r1, r6, asr #4
     440:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
     444:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     448:	56524553 			; <UNDEFINED> instruction: 0x56524553
     44c:	00334445 	eorseq	r4, r3, r5, asr #8
     450:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     454:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     458:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
     45c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     460:	00354445 	eorseq	r4, r5, r5, asr #8
     464:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     468:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     46c:	45520036 	ldrbmi	r0, [r2, #-54]	; 0xffffffca
     470:	56524553 			; <UNDEFINED> instruction: 0x56524553
     474:	00374445 	eorseq	r4, r7, r5, asr #8
     478:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     47c:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     480:	53007469 	movwpl	r7, #1129	; 0x469
     484:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     488:	43434400 	movtmi	r4, #13312	; 0x3400
     48c:	41564d49 	cmpmi	r6, r9, asr #26
     490:	43490043 	movtmi	r0, #36931	; 0x9043
     494:	41564d49 	cmpmi	r6, r9, asr #26
     498:	43440055 	movtmi	r0, #16469	; 0x4055
     49c:	00575349 	subseq	r5, r7, r9, asr #6
     4a0:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
     4a4:	53465300 	movtpl	r5, #25344	; 0x6300
     4a8:	43440052 	movtmi	r0, #16466	; 0x4052
     4ac:	00575343 	subseq	r5, r7, r3, asr #6
     4b0:	52504853 	subspl	r4, r0, #5439488	; 0x530000
     4b4:	43455600 	movtmi	r5, #22016	; 0x5600
     4b8:	5f524f54 	svcpl	0x00524f54
     4bc:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
     4c0:	79545f45 	ldmdbvc	r4, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
     4c4:	49006570 	stmdbmi	r0, {r4, r5, r6, r8, sl, sp, lr}
     4c8:	46415f44 	strbmi	r5, [r1], -r4, asr #30
     4cc:	44490052 	strbmi	r0, [r9], #-82	; 0xffffffae
     4d0:	4153495f 	cmpmi	r3, pc, asr r9
     4d4:	50430052 	subpl	r0, r3, r2, asr r0
     4d8:	00524341 	subseq	r4, r2, r1, asr #6
     4dc:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     4e0:	615f5f00 	cmpvs	pc, r0, lsl #30
     4e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4e8:	6432695f 	ldrtvs	r6, [r2], #-2399	; 0xfffff6a1
     4ec:	776f7000 	strbvc	r7, [pc, -r0]!
     4f0:	65003031 	strvs	r3, [r0, #-49]	; 0xffffffcf
     4f4:	00327078 	eorseq	r7, r2, r8, ror r0
     4f8:	5f74756f 	svcpl	0x0074756f
     4fc:	5f746366 	svcpl	0x00746366
     500:	70617277 	rsbvc	r7, r1, r7, ror r2
     504:	70786500 	rsbsvc	r6, r8, r0, lsl #10
     508:	006c6176 	rsbeq	r6, ip, r6, ror r1
     50c:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     510:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     514:	00726566 	rsbseq	r6, r2, r6, ror #10
     518:	69727076 	ldmdbvs	r2!, {r1, r2, r4, r5, r6, ip, sp, lr}^
     51c:	0066746e 	rsbeq	r7, r6, lr, ror #8
     520:	776e696d 	strbvc	r6, [lr, -sp, ror #18]!
     524:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     528:	615f5f00 	cmpvs	pc, r0, lsl #30
     52c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     530:	6964645f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
     534:	655f0076 	ldrbvs	r0, [pc, #-118]	; 4c6 <__STACKSEAL_SIZE+0x4c6>
     538:	00616f74 	rsbeq	r6, r1, r4, ror pc
     53c:	5f747570 	svcpl	0x00747570
     540:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     544:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff64c <__StackTop+0xc7eff64c>
     548:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     54c:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
     550:	69737861 	ldmdbvs	r3!, {r0, r5, r6, fp, ip, sp, lr}^
     554:	7700657a 	smlsdxvc	r0, sl, r5, r6
     558:	656c6f68 	strbvs	r6, [ip, #-3944]!	; 0xfffff098
     55c:	615f5f00 	cmpvs	pc, r0, lsl #30
     560:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     564:	6932645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}
     568:	7266007a 	rsbvc	r0, r6, #122	; 0x7a
     56c:	76006361 	strvc	r6, [r0], -r1, ror #6
     570:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     574:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff67c <__StackTop+0xc7eff67c>
     578:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     57c:	5f5f0074 	svcpl	0x005f0074
     580:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     584:	32645f69 	rsbcc	r5, r4, #420	; 0x1a4
     588:	007a6975 	rsbseq	r6, sl, r5, ror r9
     58c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     590:	64695f74 	strbtvs	r5, [r9], #-3956	; 0xfffff08c
     594:	63660078 	cmnvs	r6, #120	; 0x78
     598:	69727074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, sp, lr}^
     59c:	0066746e 	rsbeq	r7, r6, lr, ror #8
     5a0:	6167656e 	cmnvs	r7, lr, ror #10
     5a4:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
     5a8:	615f5f00 	cmpvs	pc, r0, lsl #30
     5ac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     5b0:	6461645f 	strbtvs	r6, [r1], #-1119	; 0xfffffba1
     5b4:	5f5f0064 	svcpl	0x005f0064
     5b8:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
     5bc:	00747369 	rsbseq	r7, r4, r9, ror #6
     5c0:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     5c4:	2f65726f 	svccs	0x0065726f
     5c8:	2f637253 	svccs	0x00637253
     5cc:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     5d0:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     5d4:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     5d8:	665f616f 	ldrbvs	r6, [pc], -pc, ror #2
     5dc:	616d726f 	cmnvs	sp, pc, ror #4
     5e0:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     5e4:	00616f74 	rsbeq	r6, r1, r4, ror pc
     5e8:	6e73765f 	mrcvs	6, 3, r7, cr3, cr15, {2}
     5ec:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     5f0:	5f006674 	svcpl	0x00006674
     5f4:	5f74756f 	svcpl	0x0074756f
     5f8:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
     5fc:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
     600:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
     604:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     608:	5f5f0065 	svcpl	0x005f0065
     60c:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     610:	63645f69 	cmnvs	r4, #420	; 0x1a4
     614:	6567706d 	strbvs	r7, [r7, #-109]!	; 0xffffff93
     618:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     61c:	6c5f616f 	ldfvse	f6, [pc], {111}	; 0x6f
     620:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     624:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     628:	0066746e 	rsbeq	r7, r6, lr, ror #8
     62c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     630:	5f696261 	svcpl	0x00696261
     634:	64326975 	ldrtvs	r6, [r2], #-2421	; 0xfffff68b
     638:	616c6600 	cmnvs	ip, r0, lsl #12
     63c:	5f007367 	svcpl	0x00007367
     640:	6165615f 	cmnvs	r5, pc, asr r1
     644:	645f6962 	ldrbvs	r6, [pc], #-2402	; 64c <__STACKSEAL_SIZE+0x64c>
     648:	67706d63 	ldrbvs	r6, [r0, -r3, ror #26]!
     64c:	616d0074 	smcvs	53252	; 0xd004
     650:	6e656c78 	mcrvs	12, 3, r6, cr5, cr8, {3}
     654:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
     658:	5f00696f 	svcpl	0x0000696f
     65c:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
     660:	5f6e656c 	svcpl	0x006e656c
     664:	5f5f0073 	svcpl	0x005f0073
     668:	5f007061 	svcpl	0x00007061
     66c:	6165615f 	cmnvs	r5, pc, asr r1
     670:	645f6962 	ldrbvs	r6, [pc], #-2402	; 678 <__STACKSEAL_SIZE+0x678>
     674:	006c756d 	rsbeq	r7, ip, sp, ror #10
     678:	6f6f425f 	svcvs	0x006f425f
     67c:	5f5f006c 	svcpl	0x005f006c
     680:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     684:	745f3436 	ldrbvc	r3, [pc], #-1078	; 68c <__STACKSEAL_SIZE+0x68c>
     688:	73695f00 	cmnvc	r9, #0, 30
     68c:	6769645f 			; <UNDEFINED> instruction: 0x6769645f
     690:	63007469 	movwvs	r7, #1129	; 0x469
     694:	00766e6f 	rsbseq	r6, r6, pc, ror #28
     698:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     69c:	5f696261 	svcpl	0x00696261
     6a0:	706d6364 	rsbvc	r6, sp, r4, ror #6
     6a4:	5f007165 	svcpl	0x00007165
     6a8:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     6ac:	72747074 	rsbsvc	r7, r4, #116	; 0x74
     6b0:	6300745f 	movwvs	r7, #1119	; 0x45f
     6b4:	61726168 	cmnvs	r2, r8, ror #2
     6b8:	72657463 	rsbvc	r7, r5, #1660944384	; 0x63000000
     6bc:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff7c4 <__StackTop+0xc7eff7c4>
     6c0:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
     6c4:	5f5f0076 	svcpl	0x005f0076
     6c8:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     6cc:	73645f69 	cmnvc	r4, #420	; 0x1a4
     6d0:	5f006275 	svcpl	0x00006275
     6d4:	6165615f 	cmnvs	r5, pc, asr r1
     6d8:	755f6962 	ldrbvc	r6, [pc, #-2402]	; fffffd7e <__StackTop+0xc7effd7e>
     6dc:	7669646c 	strbtvc	r6, [r9], -ip, ror #8
     6e0:	00646f6d 	rsbeq	r6, r4, sp, ror #30
     6e4:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     6e8:	5f696261 	svcpl	0x00696261
     6ec:	706d6364 	rsbvc	r6, sp, r4, ror #6
     6f0:	6f00656c 	svcvs	0x0000656c
     6f4:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     6f8:	775f7463 	ldrbvc	r7, [pc, -r3, ror #8]
     6fc:	5f706172 	svcpl	0x00706172
     700:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     704:	65727000 	ldrbvs	r7, [r2, #-0]!
     708:	77660063 	strbvc	r0, [r6, -r3, rrx]!
     70c:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     710:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     714:	5f63756e 	svcpl	0x0063756e
     718:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
     71c:	00747369 	rsbseq	r7, r4, r9, ror #6
     720:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     724:	5f696261 	svcpl	0x00696261
     728:	706d6364 	rsbvc	r6, sp, r4, ror #6
     72c:	5f00746c 	svcpl	0x0000746c
     730:	616f746e 	cmnvs	pc, lr, ror #8
     734:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
     738:	6f6c5f67 	svcvs	0x006c5f67
     73c:	6900676e 	stmdbvs	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     740:	6c6c5f73 	stclvs	15, cr5, [ip], #-460	; 0xfffffe34
     744:	65727000 	ldrbvs	r7, [r2, #-0]!
     748:	69736963 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, fp, sp, lr}^
     74c:	64006e6f 	strvs	r6, [r0], #-3695	; 0xfffff191
     750:	00666669 	rsbeq	r6, r6, r9, ror #12
     754:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     758:	2f65726f 	svccs	0x0065726f
     75c:	2f637253 	svccs	0x00637253
     760:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     764:	7300632e 	movwvc	r6, #814	; 0x32e
     768:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     76c:	61750067 	cmnvs	r5, r7, rrx
     770:	725f7472 	subsvc	r7, pc, #1912602624	; 0x72000000
     774:	00766365 	rsbseq	r6, r6, r5, ror #6
     778:	63746567 	cmnvs	r4, #432013312	; 0x19c00000
     77c:	00726168 	rsbseq	r6, r2, r8, ror #2
     780:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
     784:	61750078 	cmnvs	r5, r8, ror r0
     788:	735f7472 	cmpvc	pc, #1912602624	; 0x72000000
     78c:	00646e65 	rsbeq	r6, r4, r5, ror #28
     790:	5f746567 	svcpl	0x00746567
     794:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     798:	61747300 	cmnvs	r4, r0, lsl #6
     79c:	755f6b63 	ldrbvc	r6, [pc, #-2915]	; fffffc41 <__StackTop+0xc7effc41>
     7a0:	676e6973 			; <UNDEFINED> instruction: 0x676e6973
     7a4:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
     7a8:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     7ac:	645f746c 	ldrbvs	r7, [pc], #-1132	; 7b4 <__STACKSEAL_SIZE+0x7b4>
     7b0:	5f706d75 	svcpl	0x00706d75
     7b4:	5f637865 	svcpl	0x00637865
     7b8:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
     7bc:	6f006e72 	svcvs	0x00006e72
     7c0:	646f6370 	strbtvs	r6, [pc], #-880	; 7c8 <__Vectors_Size+0x8>
     7c4:	73695f65 	cmnvc	r9, #404	; 0x194
     7c8:	5f6c625f 	svcpl	0x006c625f
     7cc:	625f726f 	subsvs	r7, pc, #-268435450	; 0xf0000006
     7d0:	7300786c 	movwvc	r7, #2156	; 0x86c
     7d4:	6b636174 	blvs	18d8dac <__RAM_SIZE+0x17d8dac>
     7d8:	6172665f 	cmnvs	r2, pc, asr r6
     7dc:	745f656d 	ldrbvc	r6, [pc], #-1389	; 7e4 <__Vectors_Size+0x24>
     7e0:	5f646600 	svcpl	0x00646600
     7e4:	6e69616d 	powvsez	f6, f1, #5.0
     7e8:	6174735f 	cmnvs	r4, pc, asr r3
     7ec:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     7f0:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     7f4:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     7f8:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
     7fc:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     800:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     804:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     808:	65745f70 	ldrbvs	r5, [r4, #-3952]!	; 0xfffff090
     80c:	655f7478 	ldrbvs	r7, [pc, #-1144]	; 39c <__STACKSEAL_SIZE+0x39c>
     810:	0073646e 	rsbseq	r6, r3, lr, ror #8
     814:	7473735f 	ldrbtvc	r7, [r3], #-863	; 0xfffffca1
     818:	006b6361 	rsbeq	r6, fp, r1, ror #6
     81c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     820:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     824:	6f5f706d 	svcvs	0x005f706d
     828:	646f6370 	strbtvs	r6, [pc], #-880	; 830 <__Vectors_Size+0x70>
     82c:	655f0065 	ldrbvs	r0, [pc, #-101]	; 7cf <__Vectors_Size+0xf>
     830:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     834:	6572006b 	ldrbvs	r0, [r2, #-107]!	; 0xffffff95
     838:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
     83c:	5f646600 	svcpl	0x00646600
     840:	5f70736d 	svcpl	0x0070736d
     844:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     848:	61705f6b 	cmnvs	r0, fp, ror #30
     84c:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
     850:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
     854:	0072656b 	rsbseq	r6, r2, fp, ror #10
     858:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     85c:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
     860:	5f656d61 	svcpl	0x00656d61
     864:	756e616d 	strbvc	r6, [lr, #-365]!	; 0xfffffe93
     868:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 870 <__Vectors_Size+0xb0>
     86c:	63706f00 	cmnvs	r0, #0, 30
     870:	3165646f 	cmncc	r5, pc, ror #8
     874:	63706f00 	cmnvs	r0, #0, 30
     878:	3265646f 	rsbcc	r6, r5, #1862270976	; 0x6f000000
     87c:	61747300 	cmnvs	r4, r0, lsl #6
     880:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     884:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     888:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
     88c:	006c6175 	rsbeq	r6, ip, r5, ror r1
     890:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     894:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
     898:	00656d61 	rsbeq	r6, r5, r1, ror #26
     89c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     8a0:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
     8a4:	5f656d61 	svcpl	0x00656d61
     8a8:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
     8ac:	745f7470 	ldrbvc	r7, [pc], #-1136	; 8b4 <__Vectors_Size+0xf4>
     8b0:	5f646600 	svcpl	0x00646600
     8b4:	5f707370 	svcpl	0x00707370
     8b8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     8bc:	61705f6b 	cmnvs	r0, fp, ror #30
     8c0:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
     8c4:	2f2e2e00 	svccs	0x002e2e00
     8c8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     8cc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
     8d0:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
     8d4:	662f736c 	strtvs	r7, [pc], -ip, ror #6
     8d8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8dc:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     8e0:	72732f70 	rsbsvc	r2, r3, #112, 30	; 0x1c0
     8e4:	61662f63 	cmnvs	r6, r3, ror #30
     8e8:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     8ec:	706d7564 	rsbvc	r7, sp, r4, ror #10
     8f0:	6600632e 	strvs	r6, [r0], -lr, lsr #6
     8f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8f8:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     8fc:	61685f70 	smcvs	34288	; 0x85f0
     900:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     904:	64660072 	strbtvs	r0, [r6], #-114	; 0xffffff8e
     908:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     90c:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
     910:	5f6b6361 	svcpl	0x006b6361
     914:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     918:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     91c:	645f746c 	ldrbvs	r7, [pc], #-1132	; 924 <__Vectors_Size+0x164>
     920:	5f706d75 	svcpl	0x00706d75
     924:	6e697375 	mcrvs	3, 3, r7, cr9, cr5, {3}
     928:	736d5f67 	cmnvc	sp, #412	; 0x19c
     92c:	735f0070 	cmpvc	pc, #112	; 0x70
     930:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     934:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     938:	645f746c 	ldrbvs	r7, [pc], #-1132	; 940 <__Vectors_Size+0x180>
     93c:	5f706d75 	svcpl	0x00706d75
     940:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     944:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     948:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     94c:	5f6b6361 	svcpl	0x006b6361
     950:	73726170 	cmnvc	r2, #112, 2
     954:	745f7265 	ldrbvc	r7, [pc], #-613	; 95c <__Vectors_Size+0x19c>
     958:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     95c:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 7d0 <__Vectors_Size+0x10>
     960:	73005053 	movwvc	r5, #83	; 0x53
     964:	6b636174 	blvs	18d8f3c <__RAM_SIZE+0x17d8f3c>
     968:	6172665f 	cmnvs	r2, pc, asr r6
     96c:	655f656d 	ldrbvs	r6, [pc, #-1389]	; 407 <__STACKSEAL_SIZE+0x407>
     970:	70656378 	rsbvc	r6, r5, r8, ror r3
     974:	655f0074 	ldrbvs	r0, [pc, #-116]	; 908 <__Vectors_Size+0x148>
     978:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     97c:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
     980:	2e2e0072 	mcrcs	0, 1, r0, cr14, cr2, {3}
     984:	2f2e2e2f 	svccs	0x002e2e2f
     988:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8d8 <__Vectors_Size+0x118>
     98c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     990:	2f736c69 	svccs	0x00736c69
     994:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     998:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     99c:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
     9a0:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
     9a4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     9a8:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     9ac:	61662f33 	cmnvs	r6, r3, lsr pc
     9b0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     9b4:	2e6c6168 	powcsez	f6, f4, #0.0
     9b8:	61660063 	cmnvs	r6, r3, rrx
     9bc:	5f746c75 	svcpl	0x00746c75
     9c0:	706d7564 	rsbvc	r7, sp, r4, ror #10
     9c4:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
     9c8:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
     9cc:	6c75006f 	ldclvs	0, cr0, [r5], #-444	; 0xfffffe44
     9d0:	546e7552 	strbtpl	r7, [lr], #-1362	; 0xfffffaae
     9d4:	43656d69 	cmnmi	r5, #6720	; 0x1a40
     9d8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     9dc:	65007265 	strvs	r7, [r0, #-613]	; 0xfffffd9b
     9e0:	636f6c42 	cmnvs	pc, #16896	; 0x4200
     9e4:	0064656b 	rsbeq	r6, r4, fp, ror #10
     9e8:	6c654465 	cfstrdvs	mvd4, [r5], #-404	; 0xfffffe6c
     9ec:	64657465 	strbtvs	r7, [r5], #-1125	; 0xfffffb9b
     9f0:	61546500 	cmpvs	r4, r0, lsl #10
     9f4:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
     9f8:	00657461 	rsbeq	r7, r5, r1, ror #8
     9fc:	766e4965 	strbtvc	r4, [lr], -r5, ror #18
     a00:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
     a04:	54787000 	ldrbtpl	r7, [r8], #-0
     a08:	664f706f 	strbvs	r7, [pc], -pc, rrx
     a0c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
     a10:	5478006b 	ldrbtpl	r0, [r8], #-107	; 0xffffff95
     a14:	5f4b5341 	svcpl	0x004b5341
     a18:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     a1c:	66005355 			; <UNDEFINED> instruction: 0x66005355
     a20:	73656572 	cmnvc	r5, #478150656	; 0x1c800000
     a24:	5f736f74 	svcpl	0x00736f74
     a28:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     a2c:	61705f65 	cmnvs	r0, r5, ror #30
     a30:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
     a34:	67657200 	strbvs	r7, [r5, -r0, lsl #4]!
     a38:	746e635f 	strbtvc	r6, [lr], #-863	; 0xfffffca1
     a3c:	6e656c00 	cdpvs	12, 6, cr6, cr5, cr0, {0}
     a40:	00687467 	rsbeq	r7, r8, r7, ror #8
     a44:	6e457870 	mcrvs	8, 2, r7, cr5, cr0, {3}
     a48:	53664f64 	cmnpl	r6, #100, 30	; 0x190
     a4c:	6b636174 	blvs	18d9024 <__RAM_SIZE+0x17d9024>
     a50:	53787000 	cmnpl	r8, #0
     a54:	6b636174 	blvs	18d902c <__RAM_SIZE+0x17d902c>
     a58:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     a5c:	75436500 	strbvc	r6, [r3, #-1280]	; 0xfffffb00
     a60:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     a64:	61745374 	cmnvs	r4, r4, ror r3
     a68:	65006574 	strvs	r6, [r0, #-1396]	; 0xfffffa8c
     a6c:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     a70:	70660079 	rsbvc	r0, r6, r9, ror r0
     a74:	6e635f75 	mcrvs	15, 3, r5, cr3, cr5, {3}
     a78:	61540074 	cmpvs	r4, r4, ror r0
     a7c:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
     a80:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     a84:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     a88:	6b736154 	blvs	1cd8fe0 <__RAM_SIZE+0x1bd8fe0>
     a8c:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
     a90:	75007374 	strvc	r7, [r0, #-884]	; 0xfffffc8c
     a94:	73614278 	cmnvc	r1, #120, 4	; 0x80000007
     a98:	69725065 	ldmdbvs	r2!, {r0, r2, r5, r6, ip, lr}^
     a9c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     aa0:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
     aa4:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
     aa8:	75437465 	strbvc	r7, [r3, #-1125]	; 0xfffffb9b
     aac:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     ab0:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
     ab4:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
     ab8:	00656c64 	rsbeq	r6, r5, r4, ror #24
     abc:	73614255 	cmnvc	r1, #1342177285	; 0x50000005
     ac0:	70795465 	rsbsvc	r5, r9, r5, ror #8
     ac4:	00745f65 	rsbseq	r5, r4, r5, ror #30
     ac8:	6e755265 	cdpvs	2, 7, cr5, cr5, cr5, {3}
     acc:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
     ad0:	61745300 	cmnvs	r4, r0, lsl #6
     ad4:	79546b63 	ldmdbvc	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     ad8:	745f6570 	ldrbvc	r6, [pc], #-1392	; ae0 <__Vectors_Size+0x320>
     adc:	75536500 	ldrbvc	r6, [r3, #-1280]	; 0xfffffb00
     ae0:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     ae4:	00646564 	rsbeq	r6, r4, r4, ror #10
     ae8:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
     aec:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     af0:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     af4:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     af8:	2e2e0079 	mcrcs	0, 1, r0, cr14, cr9, {3}
     afc:	2f2e2e2f 	svccs	0x002e2e2f
     b00:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; a50 <__Vectors_Size+0x290>
     b04:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     b08:	2f736c69 	svccs	0x00736c69
     b0c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     b10:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     b14:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
     b18:	462f7379 			; <UNDEFINED> instruction: 0x462f7379
     b1c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     b20:	2f534f54 	svccs	0x00534f54
     b24:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     b28:	75642d6b 	strbvc	r2, [r4, #-3435]!	; 0xfffff295
     b2c:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
     b30:	61547600 	cmpvs	r4, r0, lsl #12
     b34:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
     b38:	666e4974 			; <UNDEFINED> instruction: 0x666e4974
     b3c:	7375006f 	cmnvc	r5, #111	; 0x6f
     b40:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
     b44:	6769486b 	strbvs	r4, [r9, -fp, ror #16]!
     b48:	74615768 	strbtvc	r5, [r1], #-1896	; 0xfffff898
     b4c:	614d7265 	cmpvs	sp, r5, ror #4
     b50:	70006b72 	andvc	r6, r0, r2, ror fp
     b54:	73615463 	cmnvc	r1, #1660944384	; 0x63000000
     b58:	6d614e6b 	stclvs	14, cr4, [r1, #-428]!	; 0xfffffe54
     b5c:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
     b60:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     b64:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
     b68:	69540072 	ldmdbvs	r4, {r1, r4, r5, r6}^
     b6c:	79546b63 	ldmdbvc	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     b70:	745f6570 	ldrbvc	r6, [pc], #-1392	; b78 <__Vectors_Size+0x3b8>
     b74:	74497800 	strbvc	r7, [r9], #-2048	; 0xfffff800
     b78:	61566d65 	cmpvs	r6, r5, ror #26
     b7c:	0065756c 	rsbeq	r7, r5, ip, ror #10
     b80:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     b84:	646e4574 	strbtvs	r4, [lr], #-1396	; 0xfffffa8c
     b88:	4f767000 	svcmi	0x00767000
     b8c:	72656e77 	rsbvc	r6, r5, #1904	; 0x770
     b90:	494c7800 	stmdbmi	ip, {fp, ip, sp, lr}^
     b94:	495f5453 	ldmdbmi	pc, {r0, r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     b98:	004d4554 	subeq	r4, sp, r4, asr r5
     b9c:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     ba0:	6f546d65 	svcvs	0x00546d65
     ba4:	6f6d6552 	svcvs	0x006d6552
     ba8:	76006576 			; <UNDEFINED> instruction: 0x76006576
     bac:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     bb0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     bb4:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     bb8:	74496573 	strbvc	r6, [r9], #-1395	; 0xfffffa8d
     bbc:	75006d65 	strvc	r6, [r0, #-3429]	; 0xfffff29b
     bc0:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
     bc4:	4f726562 	svcmi	0x00726562
     bc8:	65744966 	ldrbvs	r4, [r4, #-2406]!	; 0xfffff69a
     bcc:	7600736d 	strvc	r7, [r0], -sp, ror #6
     bd0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     bd4:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     bd8:	6e457472 	mcrvs	4, 2, r7, cr5, cr2, {3}
     bdc:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     be0:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
     be4:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     be8:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     bec:	61697469 	cmnvs	r9, r9, ror #8
     bf0:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     bf4:	61567800 	cmpvs	r6, r0, lsl #16
     bf8:	4f65756c 	svcmi	0x0065756c
     bfc:	736e4966 	cmnvc	lr, #1671168	; 0x198000
     c00:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
     c04:	70006e6f 	andvc	r6, r0, pc, ror #28
     c08:	65744978 	ldrbvs	r4, [r4, #-2424]!	; 0xfffff688
     c0c:	7870006d 	ldmdavc	r0!, {r0, r2, r3, r5, r6}^
     c10:	72657449 	rsbvc	r7, r5, #1224736768	; 0x49000000
     c14:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
     c18:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     c1c:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
     c20:	50787000 	rsbspl	r7, r8, r0
     c24:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     c28:	0073756f 	rsbseq	r7, r3, pc, ror #10
     c2c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     c30:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     c34:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     c38:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
     c3c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     c40:	4f545265 	svcmi	0x00545265
     c44:	696c2f53 	stmdbvs	ip!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
     c48:	632e7473 			; <UNDEFINED> instruction: 0x632e7473
     c4c:	4c787000 	ldclmi	0, cr7, [r8], #-0
     c50:	00747369 	rsbseq	r7, r4, r9, ror #6
     c54:	53494c78 	movtpl	r4, #40056	; 0x9c78
     c58:	78750054 	ldmdavc	r5!, {r2, r4, r6}^
     c5c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     c60:	6f6d6552 	svcvs	0x006d6552
     c64:	70006576 	andvc	r6, r0, r6, ror r5
     c68:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
     c6c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     c70:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     c74:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     c78:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     c7c:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     c80:	6f507600 	svcvs	0x00507600
     c84:	78457472 	stmdavc	r5, {r1, r4, r5, r6, sl, ip, sp, lr}^
     c88:	72437469 	subvc	r7, r3, #1761607680	; 0x69000000
     c8c:	63697469 	cmnvs	r9, #1761607680	; 0x69000000
     c90:	70006c61 	andvc	r6, r0, r1, ror #24
     c94:	6f4e7672 	svcvs	0x004e7672
     c98:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
     c9c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ca0:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     ca4:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     ca8:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
     cac:	65530072 	ldrbvs	r0, [r3, #-114]	; 0xffffff8e
     cb0:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     cb4:	4465726f 	strbtmi	r7, [r5], #-623	; 0xfffffd91
     cb8:	00617461 	rsbeq	r7, r1, r1, ror #8
     cbc:	726f5076 	rsbvc	r5, pc, #118	; 0x76
     cc0:	65695974 	strbvs	r5, [r9, #-2420]!	; 0xfffff68c
     cc4:	5300646c 	movwpl	r6, #1132	; 0x46c
     cc8:	70616d65 	rsbvc	r6, r1, r5, ror #26
     ccc:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     cd0:	61746144 	cmnvs	r4, r4, asr #2
     cd4:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     cd8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     cdc:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
     ce0:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
     ce4:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
     ce8:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
     cec:	66754263 	ldrbtvs	r4, [r5], -r3, ror #4
     cf0:	73726566 	cmnvc	r2, #427819008	; 0x19800000
     cf4:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     cf8:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
     cfc:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     d00:	78006576 	stmdavc	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
     d04:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d08:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
     d0c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     d10:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; c00 <__Vectors_Size+0x440>
     d14:	00525349 	subseq	r5, r2, r9, asr #6
     d18:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     d1c:	6157736b 	cmpvs	r7, fp, ror #6
     d20:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     d24:	526f5467 	rsbpl	r5, pc, #1728053248	; 0x67000000
     d28:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     d2c:	70006576 	andvc	r6, r0, r6, ror r5
     d30:	67694878 			; <UNDEFINED> instruction: 0x67694878
     d34:	50726568 	rsbspl	r6, r2, r8, ror #10
     d38:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     d3c:	54797469 	ldrbtpl	r7, [r9], #-1129	; 0xfffffb97
     d40:	576b7361 	strbpl	r7, [fp, -r1, ror #6]!
     d44:	6e656b6f 	vnmulvs.f64	d22, d5, d31
     d48:	4d787000 	ldclmi	0, cr7, [r8, #-0]
     d4c:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     d50:	49547800 	ldmdbmi	r4, {fp, ip, sp, lr}^
     d54:	4f5f454d 	svcmi	0x005f454d
     d58:	78005455 	stmdavc	r0, {r0, r2, r4, r6, sl, ip, lr}
     d5c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d60:	6b615465 	blvs	1855efc <__RAM_SIZE+0x1755efc>
     d64:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
     d68:	65527865 	ldrbvs	r7, [r2, #-2149]	; 0xfffff79b
     d6c:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
     d70:	00657669 	rsbeq	r7, r5, r9, ror #12
     d74:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     d78:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     d7c:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
     d80:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; c70 <__Vectors_Size+0x4b0>
     d84:	46746553 			; <UNDEFINED> instruction: 0x46746553
     d88:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     d8c:	78005253 	stmdavc	r0, {r0, r1, r4, r6, r9, ip, lr}
     d90:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d94:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
     d98:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
     d9c:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     da0:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; c90 <__Vectors_Size+0x4d0>
     da4:	00525349 	subseq	r5, r2, r9, asr #6
     da8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     dac:	694d6369 	stmdbvs	sp, {r0, r3, r5, r6, r8, r9, sp, lr}^
     db0:	694c696e 	stmdbvs	ip, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     db4:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     db8:	745f6d65 	ldrbvc	r6, [pc], #-3429	; dc0 <__Vectors_Size+0x600>
     dbc:	75517600 	ldrbvc	r7, [r1, #-1536]	; 0xfffffa00
     dc0:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     dc4:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
     dc8:	4e657565 	cdpmi	5, 6, cr7, cr5, cr5, {3}
     dcc:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     dd0:	57780072 			; <UNDEFINED> instruction: 0x57780072
     dd4:	49746961 	ldmdbmi	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     dd8:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
     ddc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     de0:	00796c65 	rsbseq	r6, r9, r5, ror #24
     de4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     de8:	6157736b 	cmpvs	r7, fp, ror #6
     dec:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     df0:	536f5467 	cmnpl	pc, #1728053248	; 0x67000000
     df4:	00646e65 	rsbeq	r6, r4, r5, ror #28
     df8:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     dfc:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     e00:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
     e04:	61764173 	cmnvs	r6, r3, ror r1
     e08:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
     e0c:	6300656c 	movwvs	r6, #1388	; 0x56c
     e10:	6f4c7854 	svcvs	0x004c7854
     e14:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     e18:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
     e1c:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
     e20:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     e24:	50760074 	rsbspl	r0, r6, r4, ror r0
     e28:	4574726f 	ldrbmi	r7, [r4, #-623]!	; 0xfffffd91
     e2c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     e30:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
     e34:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     e38:	625f5f00 	subsvs	r5, pc, #0, 30
     e3c:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     e40:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ca4 <__Vectors_Size+0x4e4>
     e44:	70636d65 	rsbvc	r6, r3, r5, ror #26
     e48:	43780079 	cmnmi	r8, #121	; 0x79
     e4c:	5079706f 	rsbspl	r7, r9, pc, rrx
     e50:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
     e54:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     e58:	65527875 	ldrbvs	r7, [r2, #-2165]	; 0xfffff78b
     e5c:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     e60:	75517600 	ldrbvc	r7, [r1, #-1536]	; 0xfffffa00
     e64:	44657565 	strbtmi	r7, [r5], #-1381	; 0xfffffa9b
     e68:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
     e6c:	63700065 	cmnvs	r0, #101	; 0x65
     e70:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     e74:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; d64 <__Vectors_Size+0x5a4>
     e78:	53787500 	cmnpl	r8, #0, 10
     e7c:	64657661 	strbtvs	r7, [r5], #-1633	; 0xfffff99f
     e80:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     e84:	70757272 	rsbsvc	r7, r5, r2, ror r2
     e88:	61745374 	cmnvs	r4, r4, ror r3
     e8c:	00737574 	rsbseq	r7, r3, r4, ror r5
     e90:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
     e94:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     e98:	73696c61 	cmnvc	r9, #24832	; 0x6100
     e9c:	77654e65 	strbvc	r4, [r5, -r5, ror #28]!
     ea0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ea4:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
     ea8:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     eac:	7a695378 	bvc	1a55c94 <__RAM_SIZE+0x1955c94>
     eb0:	59780065 	ldmdbpl	r8!, {r0, r2, r5, r6}^
     eb4:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
     eb8:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
     ebc:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
     ec0:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     ec4:	75517765 	ldrbvc	r7, [r1, #-1893]	; 0xfffff89b
     ec8:	00657565 	rsbeq	r7, r5, r5, ror #10
     ecc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ed0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     ed4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     ed8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     edc:	656c4376 	strbvs	r4, [ip, #-886]!	; 0xfffffc8a
     ee0:	6e497261 	cdpvs	2, 4, cr7, cr9, cr1, {3}
     ee4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     ee8:	4d747075 	ldclmi	0, cr7, [r4, #-468]!	; 0xfffffe2c
     eec:	006b7361 	rsbeq	r7, fp, r1, ror #6
     ef0:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
     ef4:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
     ef8:	6d456575 	cfstr64vs	mvdx6, [r5, #-468]	; 0xfffffe2c
     efc:	00797470 	rsbseq	r7, r9, r0, ror r4
     f00:	75427670 	strbvc	r7, [r2, #-1648]	; 0xfffff990
     f04:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     f08:	76727000 	ldrbtvc	r7, [r2], -r0
     f0c:	44746547 	ldrbtmi	r6, [r4], #-1351	; 0xfffffab9
     f10:	6e697369 	cdpvs	3, 6, cr7, cr9, cr9, {3}
     f14:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
     f18:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     f1c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     f20:	74664179 	strbtvc	r4, [r6], #-377	; 0xfffffe87
     f24:	69547265 	ldmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
     f28:	756f656d 	strbvc	r6, [pc, #-1389]!	; 9c3 <__Vectors_Size+0x203>
     f2c:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
     f30:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
     f34:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     f38:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     f3c:	00676e69 	rsbeq	r6, r7, r9, ror #28
     f40:	6d655378 	stclvs	3, cr5, [r5, #-480]!	; 0xfffffe20
     f44:	6f687061 	svcvs	0x00687061
     f48:	70006572 	andvc	r6, r0, r2, ror r5
     f4c:	726f5076 	rsbvc	r5, pc, #118	; 0x76
     f50:	6c614d74 	stclvs	13, cr4, [r1], #-464	; 0xfffffe30
     f54:	00636f6c 	rsbeq	r6, r3, ip, ror #30
     f58:	61547875 	cmpvs	r4, r5, ror r8
     f5c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
     f60:	6d754e74 	ldclvs	14, cr4, [r5, #-464]!	; 0xfffffe30
     f64:	4f726562 	svcmi	0x00726562
     f68:	73615466 	cmnvc	r1, #1711276032	; 0x66000000
     f6c:	7600736b 	strvc	r7, [r0], -fp, ror #6
     f70:	6b736154 	blvs	1cd94c8 <__RAM_SIZE+0x1bd94c8>
     f74:	70737553 	rsbsvc	r7, r3, r3, asr r5
     f78:	41646e65 	cmnmi	r4, r5, ror #28
     f7c:	78006c6c 	stmdavc	r0, {r2, r3, r5, r6, sl, fp, sp, lr}
     f80:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f84:	65655065 	strbvs	r5, [r5, #-101]!	; 0xffffff9b
     f88:	4578006b 	ldrbmi	r0, [r8, #-107]!	; 0xffffff95
     f8c:	7972746e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     f90:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     f94:	00746553 	rsbseq	r6, r4, r3, asr r5
     f98:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f9c:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     fa0:	626d654d 	rsbvs	r6, sp, #322961408	; 0x13400000
     fa4:	61487265 	cmpvs	r8, r5, ror #4
     fa8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     fac:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
     fb0:	696e4978 	stmdbvs	lr!, {r3, r4, r5, r6, r8, fp, lr}^
     fb4:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
     fb8:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     fbc:	70700074 	rsbsvc	r0, r0, r4, ror r0
     fc0:	75516375 	ldrbvc	r6, [r1, #-885]	; 0xfffffc8b
     fc4:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     fc8:	61726f74 	cmnvs	r2, r4, ror pc
     fcc:	51006567 	tstpl	r0, r7, ror #10
     fd0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     fd4:	48746553 	ldmdami	r4!, {r0, r1, r4, r6, r8, sl, sp, lr}^
     fd8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     fdc:	00745f65 	rsbseq	r5, r4, r5, ror #30
     fe0:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     fe4:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     fe8:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     fec:	5465726f 	strbtpl	r7, [r5], #-623	; 0xfffffd91
     ff0:	00656b61 	rsbeq	r6, r5, r1, ror #22
     ff4:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
     ff8:	31796d6d 	cmncc	r9, sp, ror #26
     ffc:	44767000 	ldrbtmi	r7, [r6], #-0
    1000:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1004:	76700032 			; <UNDEFINED> instruction: 0x76700032
    1008:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    100c:	75003379 	strvc	r3, [r0, #-889]	; 0xfffffc87
    1010:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1014:	0032796d 	eorseq	r7, r2, sp, ror #18
    1018:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
    101c:	37796d6d 	ldrbcc	r6, [r9, -sp, ror #26]!
    1020:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1024:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1028:	72700034 	rsbsvc	r0, r0, #52	; 0x34
    102c:	706f4376 	rsbvc	r4, pc, r6, ror r3	; <UNPREDICTABLE>
    1030:	74614479 	strbtvc	r4, [r1], #-1145	; 0xfffffb87
    1034:	516f5461 	cmnpl	pc, r1, ror #8
    1038:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    103c:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1040:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1044:	51780038 	cmnpl	r8, r8, lsr r0
    1048:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    104c:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1050:	53636972 	cmnpl	r3, #1867776	; 0x1c8000
    1054:	00646e65 	rsbeq	r6, r4, r5, ror #28
    1058:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    105c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1060:	796c6c61 	stmdbvc	ip!, {r0, r5, r6, sl, fp, sp, lr}^
    1064:	6f6c6c41 	svcvs	0x006c6c41
    1068:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
    106c:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
    1070:	506b7361 	rsbpl	r7, fp, r1, ror #6
    1074:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
    1078:	76456e4f 	strbvc	r6, [r5], -pc, asr #28
    107c:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    1080:	00747369 	rsbseq	r7, r4, r9, ror #6
    1084:	61547670 	cmpvs	r4, r0, ror r6
    1088:	6e496b73 	vmovvs.8	d9[3], r6
    108c:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    1090:	4d746e65 	ldclmi	14, cr6, [r4, #-404]!	; 0xfffffe6c
    1094:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1098:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    109c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    10a0:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    10a4:	2f2e2e2f 	svccs	0x002e2e2f
    10a8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; ff8 <__Vectors_Size+0x838>
    10ac:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    10b0:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    10b4:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    10b8:	2f534f54 	svccs	0x00534f54
    10bc:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    10c0:	00632e65 	rsbeq	r2, r3, r5, ror #28
    10c4:	74497875 	strbvc	r7, [r9], #-2165	; 0xfffff78b
    10c8:	69536d65 	ldmdbvs	r3, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    10cc:	7500657a 	strvc	r6, [r0, #-1402]	; 0xfffffa86
    10d0:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    10d4:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
    10d8:	67617373 			; <UNDEFINED> instruction: 0x67617373
    10dc:	61577365 	cmpvs	r7, r5, ror #6
    10e0:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    10e4:	6f724667 	svcvs	0x00724667
    10e8:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    10ec:	50787500 	rsbspl	r7, r8, r0, lsl #10
    10f0:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    10f4:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
    10f8:	61737365 	cmnvs	r3, r5, ror #6
    10fc:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
    1100:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1104:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    1108:	6b736154 	blvs	1cd9660 <__RAM_SIZE+0x1bd9660>
    110c:	6f697250 	svcvs	0x00697250
    1110:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1114:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
    1118:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
    111c:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
    1120:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    1124:	654c7865 	strbvs	r7, [ip, #-2149]	; 0xfffff79b
    1128:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    112c:	76727000 	ldrbtvc	r7, [r2], -r0
    1130:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
    1134:	46657565 	strbtmi	r7, [r5], -r5, ror #10
    1138:	006c6c75 	rsbeq	r6, ip, r5, ror ip
    113c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1140:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
    1144:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1148:	51780073 	cmnpl	r8, r3, ror r0
    114c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1150:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
    1154:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1044 <__HEAP_SIZE+0x44>
    1158:	00525349 	subseq	r5, r2, r9, asr #6
    115c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1160:	6e614865 	cdpvs	8, 6, cr4, cr1, cr5, {3}
    1164:	5f656c64 	svcpl	0x00656c64
    1168:	51780074 	cmnpl	r8, r4, ror r0
    116c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1170:	00746553 	rsbseq	r6, r4, r3, asr r5
    1174:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1178:	616c506b 	cmnvs	ip, fp, rrx
    117c:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    1180:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1184:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    1188:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
    118c:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
    1190:	00646574 	rsbeq	r6, r4, r4, ror r5
    1194:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    1198:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    119c:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
    11a0:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
    11a4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    11a8:	70700068 	rsbsvc	r0, r0, r8, rrx
    11ac:	61745378 	cmnvs	r4, r8, ror r3
    11b0:	51636974 	smcpl	13972	; 0x3694
    11b4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    11b8:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    11bc:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    11c0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    11c4:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    11c8:	74537865 	ldrbvc	r7, [r3], #-2149	; 0xfffff79b
    11cc:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    11d0:	536c7500 	cmnpl	ip, #0, 10
    11d4:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
    11d8:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    11dc:	4d747075 	ldclmi	0, cr7, [r4, #-468]!	; 0xfffffe2c
    11e0:	006b7361 	rsbeq	r7, fp, r1, ror #6
    11e4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    11e8:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    11ec:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    11f0:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
    11f4:	00657461 	rsbeq	r7, r5, r1, ror #8
    11f8:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    11fc:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    1200:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1204:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1208:	53780078 	cmnpl	r8, #120	; 0x78
    120c:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
    1210:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1214:	70005453 	andvc	r5, r0, r3, asr r4
    1218:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    121c:	61697469 	cmnvs	r9, r9, ror #8
    1220:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1224:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1228:	54780078 	ldrbtpl	r0, [r8], #-120	; 0xffffff88
    122c:	4f656d69 	svcmi	0x00656d69
    1230:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    1234:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
    1238:	63750067 	cmnvs	r5, #103	; 0x67
    123c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1240:	74654765 	strbtvc	r4, [r5], #-1893	; 0xfffff89b
    1244:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1248:	70795465 	rsbsvc	r5, r9, r5, ror #8
    124c:	74530065 	ldrbvc	r0, [r3], #-101	; 0xffffff9b
    1250:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1254:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1258:	00745f65 	rsbseq	r5, r4, r5, ror #30
    125c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1260:	65526575 	ldrbvs	r6, [r2, #-1397]	; 0xfffffa8b
    1264:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1268:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1158 <__HEAP_SIZE+0x158>
    126c:	00746553 	rsbseq	r6, r4, r3, asr r5
    1270:	614d7875 	hvcvs	55173	; 0xd785
    1274:	756f4378 	strbvc	r4, [pc, #-888]!	; f04 <__Vectors_Size+0x744>
    1278:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    127c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1280:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
    1284:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    1288:	54007465 	strpl	r7, [r0], #-1125	; 0xfffffb9b
    128c:	4f656d69 	svcmi	0x00656d69
    1290:	745f7475 	ldrbvc	r7, [pc], #-1141	; 1298 <__HEAP_SIZE+0x298>
    1294:	61547600 	cmpvs	r4, r0, lsl #12
    1298:	6e496b73 	vmovvs.8	d9[3], r6
    129c:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    12a0:	65536c61 	ldrbvs	r6, [r3, #-3169]	; 0xfffff39f
    12a4:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    12a8:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    12ac:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    12b0:	63700065 	cmnvs	r0, #101	; 0x65
    12b4:	6769724f 	strbvs	r7, [r9, -pc, asr #4]!
    12b8:	6c616e69 	stclvs	14, cr6, [r1], #-420	; 0xfffffe5c
    12bc:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    12c0:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
    12c4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    12c8:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    12cc:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    12d0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    12d4:	756f4365 	strbvc	r4, [pc, #-869]!	; f77 <__Vectors_Size+0x7b7>
    12d8:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    12dc:	6d655367 	stclvs	3, cr5, [r5, #-412]!	; 0xfffffe64
    12e0:	6f687061 	svcvs	0x00687061
    12e4:	74536572 	ldrbvc	r6, [r3], #-1394	; 0xfffffa8e
    12e8:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    12ec:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    12f0:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    12f4:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    12f8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    12fc:	664f7974 			; <UNDEFINED> instruction: 0x664f7974
    1300:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    1304:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    1308:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    130c:	51637500 	cmnpl	r3, r0, lsl #10
    1310:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1314:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1318:	53787500 	cmnpl	r8, #0, 10
    131c:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1320:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1324:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1328:	63700074 	cmnvs	r0, #116	; 0x74
    132c:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    1330:	006f5465 	rsbeq	r5, pc, r5, ror #8
    1334:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    1338:	745f3874 	ldrbvc	r3, [pc], #-2164	; 1340 <__HEAP_SIZE+0x340>
    133c:	51787500 	cmnpl	r8, r0, lsl #10
    1340:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1344:	51746547 	cmnpl	r4, r7, asr #10
    1348:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    134c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1350:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    1354:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1358:	654c6575 	strbvs	r6, [ip, #-1397]	; 0xfffffa8b
    135c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1360:	6e497800 	cdpvs	8, 4, cr7, cr9, cr0, {0}
    1364:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
    1368:	636e6174 	cmnvs	lr, #116, 2
    136c:	63634f65 	cmnvs	r3, #404	; 0x194
    1370:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    1374:	63750064 	cmnvs	r5, #100	; 0x64
    1378:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    137c:	75003579 	strvc	r3, [r0, #-1401]	; 0xfffffa87
    1380:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1384:	0036796d 	eorseq	r7, r6, sp, ror #18
    1388:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    138c:	39796d6d 	ldmdbcc	r9!, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
    1390:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
    1394:	6f506575 	svcvs	0x00506575
    1398:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    139c:	745f7372 	ldrbvc	r7, [pc], #-882	; 13a4 <__HEAP_SIZE+0x3a4>
    13a0:	4c787500 	cfldr64mi	mvdx7, [r8], #-0
    13a4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    13a8:	51760068 	cmnpl	r6, r8, rrx
    13ac:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13b0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    13b4:	4d726f46 	ldclmi	15, cr6, [r2, #-280]!	; 0xfffffee8
    13b8:	61737365 	cmnvs	r3, r5, ror #6
    13bc:	65526567 	ldrbvs	r6, [r2, #-1383]	; 0xfffffa99
    13c0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    13c4:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    13c8:	51787500 	cmnpl	r8, r0, lsl #10
    13cc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13d0:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    13d4:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    13d8:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
    13dc:	4f726562 	svcmi	0x00726562
    13e0:	73615466 	cmnvc	r1, #1711276032	; 0x66000000
    13e4:	7000736b 	andvc	r7, r0, fp, ror #6
    13e8:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    13ec:	724f6575 	subvc	r6, pc, #490733568	; 0x1d400000
    13f0:	616d6553 	cmnvs	sp, r3, asr r5
    13f4:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    13f8:	51780065 	cmnpl	r8, r5, rrx
    13fc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1400:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    1404:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    1408:	00736574 	rsbseq	r6, r3, r4, ror r5
    140c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1410:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    1414:	41656d75 	smcmi	22229	; 0x56d5
    1418:	75006c6c 	strvc	r6, [r0, #-3180]	; 0xfffff394
    141c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1420:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    1424:	65755174 	ldrbvs	r5, [r5, #-372]!	; 0xfffffe8c
    1428:	74496575 	strbvc	r6, [r9], #-1397	; 0xfffffa8b
    142c:	69536d65 	ldmdbvs	r3, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1430:	7000657a 	andvc	r6, r0, sl, ror r5
    1434:	65744976 	ldrbvs	r4, [r4, #-2422]!	; 0xfffff68a
    1438:	516f546d 	cmnpl	pc, sp, ror #8
    143c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1440:	61547800 	cmpvs	r4, r0, lsl #16
    1444:	68436b73 	stmdavs	r3, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1448:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    144c:	6954726f 	ldmdbvs	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    1450:	754f656d 	strbvc	r6, [pc, #-1389]	; eeb <__Vectors_Size+0x72b>
    1454:	50760074 	rsbspl	r0, r6, r4, ror r0
    1458:	4674726f 	ldrbtmi	r7, [r4], -pc, ror #4
    145c:	00656572 	rsbeq	r6, r5, r2, ror r5
    1460:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1464:	73496575 	movtvc	r6, #38261	; 0x9575
    1468:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    146c:	6c754665 	ldclvs	6, cr4, [r5], #-404	; 0xfffffe6c
    1470:	6f72466c 	svcvs	0x0072466c
    1474:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1478:	51787500 	cmnpl	r8, r0, lsl #10
    147c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1480:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    1484:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    1488:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    148c:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1490:	61546370 	cmpvs	r4, r0, ror r3
    1494:	78006c69 	stmdavc	r0, {r0, r3, r5, r6, sl, fp, sp, lr}
    1498:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    149c:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
    14a0:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    14a4:	61657243 	cmnvs	r5, r3, asr #4
    14a8:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    14ac:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    14b0:	51787000 	cmnpl	r8, r0
    14b4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    14b8:	54537800 	ldrbpl	r7, [r3], #-2048	; 0xfffff800
    14bc:	43495441 	movtmi	r5, #37953	; 0x9441
    14c0:	53494c5f 	movtpl	r4, #40031	; 0x9c5f
    14c4:	54495f54 	strbpl	r5, [r9], #-3924	; 0xfffff0ac
    14c8:	76004d45 	strvc	r4, [r0], -r5, asr #26
    14cc:	6b736154 	blvs	1cd9a24 <__RAM_SIZE+0x1bd9a24>
    14d0:	7373694d 	cmnvc	r3, #1261568	; 0x134000
    14d4:	69596465 	ldmdbvs	r9, {r0, r2, r5, r6, sl, sp, lr}^
    14d8:	00646c65 	rsbeq	r6, r4, r5, ror #24
    14dc:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    14e0:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    14e4:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    14e8:	686e4979 	stmdavs	lr!, {r0, r3, r4, r5, r6, r8, fp, lr}^
    14ec:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
    14f0:	52787500 	rsbspl	r7, r8, #0, 10
    14f4:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    14f8:	65766973 	ldrbvs	r6, [r6, #-2419]!	; 0xfffff68d
    14fc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1500:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1504:	51780074 	cmnpl	r8, r4, ror r0
    1508:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    150c:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
    1510:	72467463 	subvc	r7, r6, #1660944384	; 0x63000000
    1514:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
    1518:	51780074 	cmnpl	r8, r4, ror r0
    151c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1520:	6b656550 	blvs	195aa68 <__RAM_SIZE+0x185aa68>
    1524:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1414 <__HEAP_SIZE+0x414>
    1528:	00525349 	subseq	r5, r2, r9, asr #6
    152c:	69487875 	stmdbvs	r8, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
    1530:	73656867 	cmnvc	r5, #6750208	; 0x670000
    1534:	69615774 	stmdbvs	r1!, {r2, r4, r5, r6, r8, r9, sl, ip, lr}^
    1538:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    153c:	6f697250 	svcvs	0x00697250
    1540:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1544:	76727000 	ldrbtvc	r7, [r2], -r0
    1548:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
    154c:	61746144 	cmnvs	r4, r4, asr #2
    1550:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1440 <__HEAP_SIZE+0x440>
    1554:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1558:	54760065 	ldrbtpl	r0, [r6], #-101	; 0xffffff9b
    155c:	506b7361 	rsbpl	r7, fp, r1, ror #6
    1560:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1564:	44797469 	ldrbtmi	r7, [r9], #-1129	; 0xfffffb97
    1568:	6e697369 	cdpvs	3, 6, cr7, cr9, cr9, {3}
    156c:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
    1570:	74664174 	strbtvc	r4, [r6], #-372	; 0xfffffe8c
    1574:	69547265 	ldmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1578:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1013 <__HEAP_SIZE+0x13>
    157c:	44780074 	ldrbtmi	r0, [r8], #-116	; 0xffffff8c
    1580:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1584:	63700033 	cmnvs	r0, #51	; 0x33
    1588:	64616548 	strbtvs	r6, [r1], #-1352	; 0xfffffab8
    158c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1590:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    1594:	4d657669 	stclmi	6, cr7, [r5, #-420]!	; 0xfffffe5c
    1598:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    159c:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
    15a0:	76697372 			; <UNDEFINED> instruction: 0x76697372
    15a4:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    15a8:	6c6e5576 	cfstr64vs	mvdx5, [lr], #-472	; 0xfffffe28
    15ac:	516b636f 	cmnpl	fp, pc, ror #6
    15b0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    15b4:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    15b8:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    15bc:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    15c0:	65526369 	ldrbvs	r6, [r2, #-873]	; 0xfffffc97
    15c4:	00746573 	rsbseq	r6, r4, r3, ror r5
    15c8:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    15cc:	73496575 	movtvc	r6, #38261	; 0x9575
    15d0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    15d4:	706d4565 	rsbvc	r4, sp, r5, ror #10
    15d8:	72467974 	subvc	r7, r6, #116, 18	; 0x1d0000
    15dc:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    15e0:	51780052 	cmnpl	r8, r2, asr r0
    15e4:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    15e8:	51787000 	cmnpl	r8, r0
    15ec:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    15f0:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    15f4:	61746e6f 	cmnvs	r4, pc, ror #28
    15f8:	72656e69 	rsbvc	r6, r5, #1680	; 0x690
    15fc:	6f507800 	svcvs	0x00507800
    1600:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    1604:	78006e6f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    1608:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    160c:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
    1610:	65536f54 	ldrbvs	r6, [r3, #-3924]	; 0xfffff0ac
    1614:	52630074 	rsbpl	r0, r3, #116	; 0x74
    1618:	636f4c78 	cmnvs	pc, #120, 24	; 0x7800
    161c:	5378006b 	cmnpl	r8, #107	; 0x6b
    1620:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
    1624:	55515f43 	ldrbpl	r5, [r1, #-3907]	; 0xfffff0bd
    1628:	00455545 	subeq	r5, r5, r5, asr #10
    162c:	76457875 			; <UNDEFINED> instruction: 0x76457875
    1630:	51746e65 	cmnpl	r4, r5, ror #28
    1634:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1638:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    163c:	78006874 	stmdavc	r0, {r2, r4, r5, r6, fp, sp, lr}
    1640:	6b736154 	blvs	1cd9b98 <__RAM_SIZE+0x1bd9b98>
    1644:	6f6d6552 	svcvs	0x006d6552
    1648:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
    164c:	76456d6f 	strbvc	r6, [r5], -pc, ror #26
    1650:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    1654:	00747369 	rsbseq	r7, r4, r9, ror #6
    1658:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    165c:	694c6369 	stmdbvs	ip, {r0, r3, r5, r6, r8, r9, sp, lr}^
    1660:	745f7473 	ldrbvc	r7, [pc], #-1139	; 1668 <__HEAP_SIZE+0x668>
    1664:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1668:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    166c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1670:	756f4365 	strbvc	r4, [pc, #-869]!	; 1313 <__HEAP_SIZE+0x313>
    1674:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    1678:	6d655367 	stclvs	3, cr5, [r5, #-412]!	; 0xfffffe64
    167c:	6f687061 	svcvs	0x00687061
    1680:	53006572 	movwpl	r6, #1394	; 0x572
    1684:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    1688:	73615463 	cmnvc	r1, #1660944384	; 0x63000000
    168c:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    1690:	726f4378 	rsbvc	r4, pc, #120, 6	; 0xe0000001
    1694:	00444965 	subeq	r4, r4, r5, ror #18
    1698:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    169c:	616c506b 	cmnvs	ip, fp, rrx
    16a0:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    16a4:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    16a8:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    16ac:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    16b0:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    16b4:	70007473 	andvc	r7, r0, r3, ror r4
    16b8:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    16bc:	6154656c 	cmpvs	r4, ip, ror #10
    16c0:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    16c4:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    16c8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    16cc:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    16d0:	73694c76 	cmnvc	r9, #30208	; 0x7600
    16d4:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    16d8:	6957736b 	ldmdbvs	r7, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}^
    16dc:	6e696874 	mcrvs	8, 3, r6, cr9, cr4, {3}
    16e0:	676e6953 			; <UNDEFINED> instruction: 0x676e6953
    16e4:	694c656c 	stmdbvs	ip, {r2, r3, r5, r6, r8, sl, sp, lr}^
    16e8:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    16ec:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    16f0:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    16f4:	68635374 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, ip, lr}^
    16f8:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    16fc:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    1700:	69725078 	ldmdbvs	r2!, {r3, r4, r5, r6, ip, lr}^
    1704:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1708:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    170c:	736e6f43 	cmnvc	lr, #268	; 0x10c
    1710:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    1714:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    1718:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    171c:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    1720:	6154656c 	cmpvs	r4, ip, ror #10
    1724:	61486b73 	hvcvs	34483	; 0x86b3
    1728:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    172c:	43726f46 	cmnmi	r2, #280	; 0x118
    1730:	0065726f 	rsbeq	r7, r5, pc, ror #4
    1734:	74537870 	ldrbvc	r7, [r3], #-2160	; 0xfffff790
    1738:	4c657461 	cfstrdmi	mvd7, [r5], #-388	; 0xfffffe7c
    173c:	00747369 	rsbseq	r7, r4, r9, ror #6
    1740:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
    1744:	31796d6d 	cmncc	r9, sp, ror #26
    1748:	78750030 	ldmdavc	r5!, {r4, r5}^
    174c:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1750:	00323179 	eorseq	r3, r2, r9, ror r1
    1754:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1758:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    175c:	6e557961 	vnmlavs.f16	s15, s10, s3	; <UNPREDICTABLE>
    1760:	006c6974 	rsbeq	r6, ip, r4, ror r9
    1764:	6e4f7875 	mcrvs	8, 2, r7, cr15, cr5, {3}
    1768:	6e4f796c 	vmlsvs.f16	s15, s30, s25	; <UNPREDICTABLE>
    176c:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    1770:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
    1774:	7500646c 	strvc	r6, [r0, #-1132]	; 0xfffffb94
    1778:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    177c:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    1780:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1784:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1788:	78007469 	stmdavc	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    178c:	6b736154 	blvs	1cd9ce4 <__RAM_SIZE+0x1bd9ce4>
    1790:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1794:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1798:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    179c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    17a0:	4e650065 	cdpmi	0, 6, cr0, cr5, cr5, {3}
    17a4:	7463416f 	strbtvc	r4, [r3], #-367	; 0xfffffe91
    17a8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    17ac:	6f547875 	svcvs	0x00547875
    17b0:	61655270 	smcvs	21792	; 0x5520
    17b4:	72507964 	subsvc	r7, r0, #100, 18	; 0x190000
    17b8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    17bc:	70007974 	andvc	r7, r0, r4, ror r9
    17c0:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    17c4:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    17c8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    17cc:	45787000 	ldrbmi	r7, [r8, #-0]!
    17d0:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    17d4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    17d8:	63537800 	cmpvs	r3, #0, 16
    17dc:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    17e0:	5272656c 	rsbspl	r6, r2, #108, 10	; 0x1b000000
    17e4:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    17e8:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
    17ec:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    17f0:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    17f4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    17f8:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    17fc:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1800:	61546465 	cmpvs	r4, r5, ror #8
    1804:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1808:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    180c:	6c43676e 	mcrrvs	7, 6, r6, r3, cr14
    1810:	556e6165 	strbpl	r6, [lr, #-357]!	; 0xfffffe9b
    1814:	44780070 	ldrbtmi	r0, [r8], #-112	; 0xffffff90
    1818:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    181c:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    1820:	64496e49 	strbvs	r6, [r9], #-3657	; 0xfffff1b7
    1824:	6154656c 	cmpvs	r4, ip, ror #10
    1828:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    182c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1830:	6f436465 	svcvs	0x00436465
    1834:	73746e75 	cmnvc	r4, #1872	; 0x750
    1838:	52787000 	rsbspl	r7, r8, #0
    183c:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1840:	6b736154 	blvs	1cd9d98 <__RAM_SIZE+0x1bd9d98>
    1844:	73694c73 	cmnvc	r9, #29440	; 0x7300
    1848:	70007374 	andvc	r7, r0, r4, ror r3
    184c:	6f546c75 	svcvs	0x00546c75
    1850:	526c6174 	rsbpl	r6, ip, #116, 2
    1854:	69546e75 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1858:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    185c:	65707845 	ldrbvs	r7, [r0, #-2117]!	; 0xfffff7bb
    1860:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    1864:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1868:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    186c:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1870:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1874:	78003032 	stmdavc	r0, {r1, r4, r5, ip, sp}
    1878:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    187c:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1880:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    1884:	4f637500 	svcmi	0x00637500
    1888:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    188c:	4e6c616e 	powmiez	f6, f4, #0.5
    1890:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1894:	61745379 	cmnvs	r4, r9, ror r3
    1898:	76006574 			; <UNDEFINED> instruction: 0x76006574
    189c:	6b736154 	blvs	1cd9df4 <__RAM_SIZE+0x1bd9df4>
    18a0:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    18a4:	4f656d69 	svcmi	0x00656d69
    18a8:	74537475 	ldrbvc	r7, [r3], #-1141	; 0xfffffb8b
    18ac:	00657461 	rsbeq	r7, r5, r1, ror #8
    18b0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    18b4:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    18b8:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    18bc:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    18c0:	72467966 	subvc	r7, r6, #1671168	; 0x198000
    18c4:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    18c8:	59780052 	ldmdbpl	r8!, {r1, r4, r6}^
    18cc:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    18d0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    18d4:	73676e69 	cmnvc	r7, #1680	; 0x690
    18d8:	63757000 	cmnvs	r5, #0
    18dc:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    18e0:	7479426b 	ldrbtvc	r4, [r9], #-619	; 0xfffffd95
    18e4:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    18e8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    18ec:	7800656c 	stmdavc	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    18f0:	616c6544 	cmnvs	ip, r4, asr #10
    18f4:	54646579 	strbtpl	r6, [r4], #-1401	; 0xfffffa87
    18f8:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    18fc:	31747369 	cmncc	r4, r9, ror #6
    1900:	65447800 	strbvs	r7, [r4, #-2048]	; 0xfffff800
    1904:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    1908:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    190c:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    1910:	70003274 	andvc	r3, r0, r4, ror r2
    1914:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
    1918:	6f6c6672 	svcvs	0x006c6672
    191c:	44646577 	strbtmi	r6, [r4], #-1399	; 0xfffffa89
    1920:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1924:	694c6465 	stmdbvs	ip, {r0, r2, r5, r6, sl, sp, lr}^
    1928:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    192c:	42435478 	submi	r5, r3, #120, 8	; 0x78000000
    1930:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1934:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1938:	61647055 	qdsubvs	r7, r5, r4
    193c:	54646574 	strbtpl	r6, [r4], #-1396	; 0xfffffa8c
    1940:	436b6369 	cmnmi	fp, #-1543503871	; 0xa4000001
    1944:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1948:	61547800 	cmpvs	r4, r0, lsl #16
    194c:	61436b73 	hvcvs	14003	; 0x36b3
    1950:	55686374 	strbpl	r6, [r8, #-884]!	; 0xfffffc8c
    1954:	63695470 	cmnvs	r9, #112, 8	; 0x70000000
    1958:	7500736b 	strvc	r7, [r0, #-875]	; 0xfffffc95
    195c:	7261506c 	rsbvc	r5, r1, #108	; 0x6c
    1960:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    1964:	00737265 	rsbseq	r7, r3, r5, ror #4
    1968:	74655265 	strbtvc	r5, [r5], #-613	; 0xfffffd9b
    196c:	006e7275 	rsbeq	r7, lr, r5, ror r2
    1970:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1974:	526f546b 	rsbpl	r5, pc, #1795162112	; 0x6b000000
    1978:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    197c:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    1980:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    1984:	436f5478 	cmnmi	pc, #120, 8	; 0x78000000
    1988:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    198c:	61547600 	cmpvs	r4, r0, lsl #12
    1990:	65536b73 	ldrbvs	r6, [r3, #-2931]	; 0xfffff48d
    1994:	70704174 	rsbsvc	r4, r0, r4, ror r1
    1998:	6163696c 	cmnvs	r3, ip, ror #18
    199c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    19a0:	6b736154 	blvs	1cd9ef8 <__RAM_SIZE+0x1bd9ef8>
    19a4:	00676154 	rsbeq	r6, r7, r4, asr r1
    19a8:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    19ac:	72437265 	subvc	r7, r3, #1342177286	; 0x50000006
    19b0:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    19b4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    19b8:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    19bc:	5365006b 	cmnpl	r5, #107	; 0x6b
    19c0:	7065656c 	rsbvc	r6, r5, ip, ror #10
    19c4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    19c8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    19cc:	75007375 	strvc	r7, [r0, #-885]	; 0xfffffc8b
    19d0:	67694878 			; <UNDEFINED> instruction: 0x67694878
    19d4:	50726568 	rsbspl	r6, r2, r8, ror #10
    19d8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    19dc:	52797469 	rsbspl	r7, r9, #1761607680	; 0x69000000
    19e0:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    19e4:	6b736154 	blvs	1cd9f3c <__RAM_SIZE+0x1bd9f3c>
    19e8:	54780073 	ldrbtpl	r0, [r8], #-115	; 0xffffff8d
    19ec:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    19f0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    19f4:	61745365 	cmnvs	r4, r5, ror #6
    19f8:	00636974 	rsbeq	r6, r3, r4, ror r9
    19fc:	546b7374 	strbtpl	r7, [fp], #-884	; 0xfffffc8c
    1a00:	75004243 	strvc	r4, [r0, #-579]	; 0xfffffdbd
    1a04:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1a0c <__HEAP_SIZE+0xa0c>
    1a08:	53796669 	cmnpl	r9, #110100480	; 0x6900000
    1a0c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1a10:	70417600 	subvc	r7, r1, r0, lsl #12
    1a14:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    1a18:	6f697461 	svcvs	0x00697461
    1a1c:	7465476e 	strbtvc	r4, [r5], #-1902	; 0xfffff892
    1a20:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1a24:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1a28:	6d654d6b 	stclvs	13, cr4, [r5, #-428]!	; 0xfffffe54
    1a2c:	0079726f 	rsbseq	r7, r9, pc, ror #4
    1a30:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1a34:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1a38:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1a3c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1a40:	70007966 	andvc	r7, r0, r6, ror #18
    1a44:	626e5578 	rsbvs	r5, lr, #120, 10	; 0x1e000000
    1a48:	6b636f6c 	blvs	18dd800 <__RAM_SIZE+0x17dd800>
    1a4c:	43546465 	cmpmi	r4, #1694498816	; 0x65000000
    1a50:	43780042 	cmnmi	r8, #66	; 0x42
    1a54:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1a58:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1a5c:	456e4f74 	strbmi	r4, [lr, #-3956]!	; 0xfffff08c
    1a60:	00746978 	rsbseq	r6, r4, r8, ror r9
    1a64:	43767270 	cmnmi	r6, #112, 4
    1a68:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1a6c:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1a70:	4578006b 	ldrbmi	r0, [r8, #-107]!	; 0xffffff95
    1a74:	7370616c 	cmnvc	r0, #108, 2
    1a78:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    1a7c:	6500656d 	strvs	r6, [r0, #-1389]	; 0xfffffa93
    1a80:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1a84:	656c5374 	strbvs	r5, [ip, #-884]!	; 0xfffffc8c
    1a88:	65007065 	strvs	r7, [r0, #-101]	; 0xffffff9b
    1a8c:	56746553 			; <UNDEFINED> instruction: 0x56746553
    1a90:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1a94:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
    1a98:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    1a9c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1aa0:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    1aa4:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1aa8:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1aac:	6f436b63 	svcvs	0x00436b63
    1ab0:	46746e75 			; <UNDEFINED> instruction: 0x46746e75
    1ab4:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1ab8:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1abc:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    1ac0:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    1ac4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1ac8:	6e456e4f 	cdpvs	14, 4, cr6, cr5, cr15, {2}
    1acc:	00797274 	rsbseq	r7, r9, r4, ror r2
    1ad0:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    1ad4:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1ad8:	6d614e6b 	stclvs	14, cr4, [r1, #-428]!	; 0xfffffe54
    1adc:	646e4965 	strbtvs	r4, [lr], #-2405	; 0xfffff69b
    1ae0:	78007865 	stmdavc	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
    1ae4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1ae8:	52676e69 	rsbpl	r6, r7, #1680	; 0x690
    1aec:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1af0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1af4:	76727000 	ldrbtvc	r7, [r2], -r0
    1af8:	61657243 	cmnvs	r5, r3, asr #4
    1afc:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    1b00:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1b04:	6b736154 	blvs	1cda05c <__RAM_SIZE+0x1bda05c>
    1b08:	61547800 	cmpvs	r4, r0, lsl #16
    1b0c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1b10:	70704174 	rsbsvc	r4, r0, r4, ror r1
    1b14:	6163696c 	cmnvs	r3, ip, ror #18
    1b18:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1b1c:	6b736154 	blvs	1cda074 <__RAM_SIZE+0x1bda074>
    1b20:	00676154 	rsbeq	r6, r7, r4, asr r1
    1b24:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1b28:	6157736b 	cmpvs	r7, fp, ror #6
    1b2c:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1b30:	72655467 	rsbvc	r5, r5, #1728053248	; 0x67000000
    1b34:	616e696d 	cmnvs	lr, sp, ror #18
    1b38:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1b3c:	61547600 	cmpvs	r4, r0, lsl #12
    1b40:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1b44:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    1b48:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1b4c:	54787000 	ldrbtpl	r7, [r8], #-0
    1b50:	00706d65 	rsbseq	r6, r0, r5, ror #26
    1b54:	6f547875 	svcvs	0x00547875
    1b58:	65735570 	ldrbvs	r5, [r3, #-1392]!	; 0xfffffa90
    1b5c:	69725064 	ldmdbvs	r2!, {r2, r5, r6, ip, lr}^
    1b60:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1b64:	78750079 	ldmdavc	r5!, {r0, r3, r4, r5, r6}^
    1b68:	6b736154 	blvs	1cda0c0 <__RAM_SIZE+0x1bda0c0>
    1b6c:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1b70:	6b636174 	blvs	18da148 <__RAM_SIZE+0x17da148>
    1b74:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1b78:	65746157 	ldrbvs	r6, [r4, #-343]!	; 0xfffffea9
    1b7c:	72614d72 	rsbvc	r4, r1, #7296	; 0x1c80
    1b80:	5478006b 	ldrbtpl	r0, [r8], #-107	; 0xffffff95
    1b84:	496b7361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1b88:	6572636e 	ldrbvs	r6, [r2, #-878]!	; 0xfffffc92
    1b8c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1b90:	6b636954 	blvs	18dc0e8 <__RAM_SIZE+0x17dc0e8>
    1b94:	61547600 	cmpvs	r4, r0, lsl #12
    1b98:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1b9c:	69547065 	ldmdbvs	r4, {r0, r2, r5, r6, ip, sp, lr}^
    1ba0:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
    1ba4:	61745378 	cmnvs	r4, r8, ror r3
    1ba8:	65446b63 	strbvs	r6, [r4, #-2915]	; 0xfffff49d
    1bac:	00687470 	rsbeq	r7, r8, r0, ror r4
    1bb0:	746f4e65 	strbtvc	r4, [pc], #-3685	; 1bb8 <__HEAP_SIZE+0xbb8>
    1bb4:	41796669 	cmnmi	r9, r9, ror #12
    1bb8:	6f697463 	svcvs	0x00697463
    1bbc:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
    1bc0:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1bc4:	61487465 	cmpvs	r8, r5, ror #8
    1bc8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1bcc:	65477800 	strbvs	r7, [r7, #-2048]	; 0xfffff800
    1bd0:	65724674 	ldrbvs	r4, [r2, #-1652]!	; 0xfffff98c
    1bd4:	61745365 	cmnvs	r4, r5, ror #6
    1bd8:	70536b63 	subsvc	r6, r3, r3, ror #22
    1bdc:	00656361 	rsbeq	r6, r5, r1, ror #6
    1be0:	65446375 	strbvs	r6, [r4, #-885]	; 0xfffffc8b
    1be4:	4179616c 	cmnmi	r9, ip, ror #2
    1be8:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1bec:	53006465 	movwpl	r6, #1125	; 0x465
    1bf0:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    1bf4:	73694c63 	cmnvc	r9, #25344	; 0x6300
    1bf8:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1bfc:	00745f6d 	rsbseq	r5, r4, sp, ror #30
    1c00:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    1c04:	756f436b 	strbvc	r4, [pc, #-875]!	; 18a1 <__HEAP_SIZE+0x8a1>
    1c08:	7600746e 	strvc	r7, [r0], -lr, ror #8
    1c0c:	6b736154 	blvs	1cda164 <__RAM_SIZE+0x1bda164>
    1c10:	53646e45 	cmnpl	r4, #1104	; 0x450
    1c14:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1c18:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1c1c:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1c20:	506b7361 	rsbpl	r7, fp, r1, ror #6
    1c24:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1c28:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1c2c:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    1c30:	736e6f43 	cmnvc	lr, #268	; 0x10c
    1c34:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1c38:	756f436b 	strbvc	r4, [pc, #-875]!	; 18d5 <__HEAP_SIZE+0x8d5>
    1c3c:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1c40:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1c44:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1c48:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    1c4c:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    1c50:	63700074 	cmnvs	r0, #116	; 0x74
    1c54:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1c58:	4f787000 	svcmi	0x00787000
    1c5c:	66726576 			; <UNDEFINED> instruction: 0x66726576
    1c60:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
    1c64:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1c68:	61546465 	cmpvs	r4, r5, ror #8
    1c6c:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1c70:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1c74:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1c78:	0035796d 	eorseq	r7, r5, sp, ror #18
    1c7c:	47767270 			; <UNDEFINED> instruction: 0x47767270
    1c80:	78457465 	stmdavc	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1c84:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    1c88:	64496465 	strbvs	r6, [r9], #-1125	; 0xfffffb9b
    1c8c:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1c90:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1c94:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1c98:	6b736154 	blvs	1cda1f0 <__RAM_SIZE+0x1bda1f0>
    1c9c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1ca0:	0073656c 	rsbseq	r6, r3, ip, ror #10
    1ca4:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1ca8:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    1cac:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
    1cb0:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    1cb4:	646f4d70 	strbtvs	r4, [pc], #-3440	; 1cbc <__HEAP_SIZE+0xcbc>
    1cb8:	61745365 	cmnvs	r4, r5, ror #6
    1cbc:	00737574 	rsbseq	r7, r3, r4, ror r5
    1cc0:	6f4e6c75 	svcvs	0x004e6c75
    1cc4:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1cc8:	61566465 	cmpvs	r6, r5, ror #8
    1ccc:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1cd0:	65527870 	ldrbvs	r7, [r2, #-2160]	; 0xfffff790
    1cd4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1cd8:	61547600 	cmpvs	r4, r0, lsl #12
    1cdc:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1ce0:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1ce4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1bd4 <__HEAP_SIZE+0xbd4>
    1ce8:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1cec:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    1cf0:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1cf4:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1cf8:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1cfc:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    1d00:	73657865 	cmnvc	r5, #6619136	; 0x650000
    1d04:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    1d08:	54787000 	ldrbtpl	r7, [r8], #-0
    1d0c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1d10:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1d14:	53650073 	cmnpl	r5, #115	; 0x73
    1d18:	61567465 	cmpvs	r6, r5, ror #8
    1d1c:	5765756c 	strbpl	r7, [r5, -ip, ror #10]!
    1d20:	6f687469 	svcvs	0x00687469
    1d24:	764f7475 			; <UNDEFINED> instruction: 0x764f7475
    1d28:	72777265 	rsbsvc	r7, r7, #1342177286	; 0x50000006
    1d2c:	00657469 	rsbeq	r7, r5, r9, ror #8
    1d30:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1d34:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1d38:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1d3c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1d40:	61577966 	cmpvs	r7, r6, ror #18
    1d44:	78007469 	stmdavc	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1d48:	756f6853 	strbvc	r6, [pc, #-2131]!	; 14fd <__HEAP_SIZE+0x4fd>
    1d4c:	6544646c 	strbvs	r6, [r4, #-1132]	; 0xfffffb94
    1d50:	0079616c 	rsbseq	r6, r9, ip, ror #2
    1d54:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    1d58:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1d5c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1d60:	53767270 	cmnpl	r6, #112, 4
    1d64:	63726165 	cmnvs	r2, #1073741849	; 0x40000019
    1d68:	726f4668 	rsbvc	r4, pc, #104, 12	; 0x6800000
    1d6c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1d70:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
    1d74:	69536e69 	ldmdbvs	r3, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1d78:	656c676e 	strbvs	r6, [ip, #-1902]!	; 0xfffff892
    1d7c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1d80:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    1d84:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1d88:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    1d8c:	6f4e6369 	svcvs	0x004e6369
    1d90:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1d94:	656b6154 	strbvs	r6, [fp, #-340]!	; 0xfffffeac
    1d98:	76727000 	ldrbtvc	r7, [r2], -r0
    1d9c:	4e646441 	cdpmi	4, 6, cr6, cr4, cr1, {2}
    1da0:	61547765 	cmpvs	r4, r5, ror #14
    1da4:	6f546b73 	svcvs	0x00546b73
    1da8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1dac:	73694c79 	cmnvc	r9, #30976	; 0x7900
    1db0:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    1db4:	6b6f6f48 	blvs	1bddadc <__RAM_SIZE+0x1addadc>
    1db8:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    1dbc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1dc0:	76727000 	ldrbtvc	r7, [r2], -r0
    1dc4:	61657243 	cmnvs	r5, r3, asr #4
    1dc8:	64496574 	strbvs	r6, [r9], #-1396	; 0xfffffa8c
    1dcc:	6154656c 	cmpvs	r4, ip, ror #10
    1dd0:	00736b73 	rsbseq	r6, r3, r3, ror fp
    1dd4:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1dd8:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1ddc:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1de0:	70700065 	rsbsvc	r0, r0, r5, rrx
    1de4:	74537875 	ldrbvc	r7, [r3], #-2165	; 0xfffff78b
    1de8:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1dec:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1df0:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1df4:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1df8:	75004243 	strvc	r4, [r0, #-579]	; 0xfffffdbd
    1dfc:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1e00:	70006575 	andvc	r6, r0, r5, ror r5
    1e04:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1e08:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    1e0c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1e10:	6b636174 	blvs	18da3e8 <__RAM_SIZE+0x17da3e8>
    1e14:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1e18:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1e1c:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
    1e20:	63634f64 	cmnvs	r3, #100, 30	; 0x190
    1e24:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    1e28:	654d0064 	strbvs	r0, [sp, #-100]	; 0xffffff9c
    1e2c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1e30:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1e34:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 1e3c <__HEAP_SIZE+0xe3c>
    1e38:	654e7800 	strbvs	r7, [lr, #-2048]	; 0xfffff800
    1e3c:	61547478 	cmpvs	r4, r8, ror r4
    1e40:	6e556b73 	vmovvs.s8	r6, d5[3]
    1e44:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1e48:	6d69546b 	cfstrdvs	mvd5, [r9, #-428]!	; 0xfffffe54
    1e4c:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1e50:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1e54:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1e58:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1e5c:	74536573 	ldrbvc	r6, [r3], #-1395	; 0xfffffa8d
    1e60:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1e64:	75447870 	strbvc	r7, [r4, #-2160]	; 0xfffff790
    1e68:	31796d6d 	cmncc	r9, sp, ror #26
    1e6c:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    1e70:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1e74:	70003931 	andvc	r3, r0, r1, lsr r9
    1e78:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1e7c:	0036796d 	eorseq	r7, r6, sp, ror #18
    1e80:	75447870 	strbvc	r7, [r4, #-2160]	; 0xfffff790
    1e84:	38796d6d 	ldmdacc	r9!, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
    1e88:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    1e8c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1e90:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    1e94:	6f4e6369 	svcvs	0x004e6369
    1e98:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1e9c:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1ea0:	656c4365 	strbvs	r4, [ip, #-869]!	; 0xfffffc9b
    1ea4:	75007261 	strvc	r7, [r0, #-609]	; 0xfffffd9f
    1ea8:	6e654c6c 	cdpvs	12, 6, cr4, cr5, cr12, {3}
    1eac:	49687467 	stmdbmi	r8!, {r0, r1, r2, r5, r6, sl, ip, sp, lr}^
    1eb0:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    1eb4:	70007365 	andvc	r7, r0, r5, ror #6
    1eb8:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    1ebc:	6154656c 	cmpvs	r4, ip, ror #10
    1ec0:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    1ec4:	66754242 	ldrbtvs	r4, [r5], -r2, asr #4
    1ec8:	00726566 	rsbseq	r6, r2, r6, ror #10
    1ecc:	52767270 	rsbspl	r7, r6, #112, 4
    1ed0:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1ed4:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1ed8:	6b736154 	blvs	1cda430 <__RAM_SIZE+0x1bda430>
    1edc:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1ee0:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1ee4:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1ee8:	654e7875 	strbvs	r7, [lr, #-2165]	; 0xfffff78b
    1eec:	69725077 	ldmdbvs	r2!, {r0, r1, r2, r4, r5, r6, ip, lr}^
    1ef0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1ef4:	61540079 	cmpvs	r4, r9, ror r0
    1ef8:	75466b73 	strbvc	r6, [r6, #-2931]	; 0xfffff48d
    1efc:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    1f00:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 1f08 <__HEAP_SIZE+0xf08>
    1f04:	6c757000 	ldclvs	0, cr7, [r5], #-0
    1f08:	76657250 			; <UNDEFINED> instruction: 0x76657250
    1f0c:	73756f69 	cmnvc	r5, #420	; 0x1a4
    1f10:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1f14:	61636966 	cmnvs	r3, r6, ror #18
    1f18:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1f1c:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1f20:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1f24:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1f28:	0074754f 	rsbseq	r7, r4, pc, asr #10
    1f2c:	61547875 	cmpvs	r4, r5, ror r8
    1f30:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    1f34:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f38:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    1f3c:	6f724674 	svcvs	0x00724674
    1f40:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1f44:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    1f48:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1f4c:	78003132 	stmdavc	r0, {r1, r4, r5, r8, ip, sp}
    1f50:	6b736154 	blvs	1cda4a8 <__RAM_SIZE+0x1bda4a8>
    1f54:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1f58:	436b6369 	cmnmi	fp, #-1543503871	; 0xa4000001
    1f5c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1f60:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    1f64:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    1f68:	6d754a6f 	vldmdbvs	r5!, {s9-s119}
    1f6c:	78750070 	ldmdavc	r5!, {r4, r5, r6}^
    1f70:	6b736154 	blvs	1cda4c8 <__RAM_SIZE+0x1bda4c8>
    1f74:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1f78:	65007265 	strvs	r7, [r0, #-613]	; 0xfffffd9b
    1f7c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    1f80:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
    1f84:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1f88:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1f8c:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    1f90:	74536d65 	ldrbvc	r6, [r3], #-3429	; 0xfffff29b
    1f94:	00657461 	rsbeq	r7, r5, r1, ror #8
    1f98:	61547875 	cmpvs	r4, r5, ror r8
    1f9c:	75006b73 	strvc	r6, [r0, #-2931]	; 0xfffff48d
    1fa0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1fa4:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    1fa8:	76457465 	strbvc	r7, [r5], -r5, ror #8
    1fac:	49746e65 	ldmdbmi	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1fb0:	566d6574 			; <UNDEFINED> instruction: 0x566d6574
    1fb4:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1fb8:	61547600 	cmpvs	r4, r0, lsl #12
    1fbc:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    1fc0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1fc4:	65537974 	ldrbvs	r7, [r3, #-2420]	; 0xfffff68c
    1fc8:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1fcc:	6b736154 	blvs	1cda524 <__RAM_SIZE+0x1bda524>
    1fd0:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    1fd4:	6f697250 	svcvs	0x00697250
    1fd8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1fdc:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1fe0:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1fe4:	70005253 	andvc	r5, r0, r3, asr r2
    1fe8:	61547870 	cmpvs	r4, r0, ror r8
    1fec:	75426b73 	strbvc	r6, [r2, #-2931]	; 0xfffff48d
    1ff0:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1ff4:	45787000 	ldrbmi	r7, [r8, #-0]!
    1ff8:	614d646e 	cmpvs	sp, lr, ror #8
    1ffc:	72656b72 	rsbvc	r6, r5, #116736	; 0x1c800
    2000:	78757000 	ldmdavc	r5!, {ip, sp, lr}^
    2004:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    2008:	6b736154 	blvs	1cda560 <__RAM_SIZE+0x1bda560>
    200c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2010:	7a69536b 	bvc	1a56dc4 <__RAM_SIZE+0x1956dc4>
    2014:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    2018:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    201c:	746f4e6f 	strbtvc	r4, [pc], #-3695	; 2024 <__HEAP_SIZE+0x1024>
    2020:	00796669 	rsbseq	r6, r9, r9, ror #12
    2024:	67655278 			; <UNDEFINED> instruction: 0x67655278
    2028:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    202c:	44787000 	ldrbtmi	r7, [r8], #-0
    2030:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2034:	78003431 	stmdavc	r0, {r0, r4, r5, sl, ip, sp}
    2038:	6b736154 	blvs	1cda590 <__RAM_SIZE+0x1bda590>
    203c:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    2040:	00797265 	rsbseq	r7, r9, r5, ror #4
    2044:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    2048:	73746942 	cmnvc	r4, #1081344	; 0x108000
    204c:	454d7800 	strbmi	r7, [sp, #-2048]	; 0xfffff800
    2050:	59524f4d 	ldmdbpl	r2, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
    2054:	4745525f 	smlsldmi	r5, r5, pc, r2	; <UNPREDICTABLE>
    2058:	004e4f49 	subeq	r4, lr, r9, asr #30
    205c:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
    2060:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    2064:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    2068:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
    206c:	00687467 	rsbeq	r7, r8, r7, ror #8
    2070:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    2074:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    2078:	00657465 	rsbeq	r7, r5, r5, ror #8
    207c:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    2080:	37796d6d 	ldrbcc	r6, [r9, -sp, ror #26]!
    2084:	61547800 	cmpvs	r4, r0, lsl #16
    2088:	61436b73 	hvcvs	14003	; 0x36b3
    208c:	70416c6c 	subvc	r6, r1, ip, ror #24
    2090:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2094:	6f697461 	svcvs	0x00697461
    2098:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    209c:	6f6f486b 	svcvs	0x006f486b
    20a0:	7875006b 	ldmdavc	r5!, {r0, r1, r3, r5, r6}^
    20a4:	6f697250 	svcvs	0x00697250
    20a8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    20ac:	73556f54 	cmpvc	r5, #84, 30	; 0x150
    20b0:	54760065 	ldrbtpl	r0, [r6], #-101	; 0xffffff9b
    20b4:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    20b8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    20bc:	6e6f4368 	cdpvs	3, 6, cr4, cr15, cr8, {3}
    20c0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    20c4:	754e7800 	strbvc	r7, [lr, #-2048]	; 0xfffff800
    20c8:	4f664f6d 	svcmi	0x00664f6d
    20cc:	66726576 			; <UNDEFINED> instruction: 0x66726576
    20d0:	73776f6c 	cmnvc	r7, #108, 30	; 0x1b0
    20d4:	72427800 	subvc	r7, r2, #0, 16
    20d8:	4c6b6165 	stfmie	f6, [fp], #-404	; 0xfffffe6c
    20dc:	00706f6f 	rsbseq	r6, r0, pc, ror #30
    20e0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    20e4:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    20e8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    20ec:	75426369 	strbvc	r6, [r2, #-873]	; 0xfffffc97
    20f0:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    20f4:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
    20f8:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    20fc:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    2100:	75004243 	strvc	r4, [r0, #-579]	; 0xfffffdbd
    2104:	67694878 			; <UNDEFINED> instruction: 0x67694878
    2108:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    210c:	6f697250 	svcvs	0x00697250
    2110:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2114:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    2118:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    211c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2120:	6f685378 	svcvs	0x00685378
    2124:	42646c75 	rsbmi	r6, r4, #29952	; 0x7500
    2128:	6b636f6c 	blvs	18ddee0 <__RAM_SIZE+0x17ddee0>
    212c:	654e6300 	strbvs	r6, [lr, #-768]	; 0xfffffd00
    2130:	68437478 	stmdavs	r3, {r3, r4, r5, r6, sl, ip, sp, lr}^
    2134:	70007261 	andvc	r7, r0, r1, ror #4
    2138:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    213c:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    2140:	76727000 	ldrbtvc	r7, [r2], -r0
    2144:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2148:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    214c:	654e6573 	strbvs	r6, [lr, #-1395]	; 0xfffffa8d
    2150:	73615477 	cmnvc	r1, #1996488704	; 0x77000000
    2154:	7670006b 	ldrbtvc	r0, [r0], -fp, rrx
    2158:	61726150 	cmnvs	r2, r0, asr r1
    215c:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2160:	70007372 	andvc	r7, r0, r2, ror r3
    2164:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    2168:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    216c:	6b736154 	blvs	1cda6c4 <__RAM_SIZE+0x1bda6c4>
    2170:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2174:	50767000 	rsbspl	r7, r6, r0
    2178:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    217c:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    2180:	54787000 	ldrbtpl	r7, [r8], #-0
    2184:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    2188:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    218c:	72724173 	rsbsvc	r4, r2, #-1073741796	; 0xc000001c
    2190:	70007961 	andvc	r7, r0, r1, ror #18
    2194:	61547672 	cmpvs	r4, r2, ror r6
    2198:	73496b73 	movtvc	r6, #39795	; 0x9b73
    219c:	6b736154 	blvs	1cda6f4 <__RAM_SIZE+0x1bda6f4>
    21a0:	70737553 	rsbsvc	r7, r3, r3, asr r5
    21a4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    21a8:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
    21ac:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    21b0:	61547465 	cmpvs	r4, r5, ror #8
    21b4:	754e6b73 	strbvc	r6, [lr, #-2931]	; 0xfffff48d
    21b8:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    21bc:	77537800 	ldrbvc	r7, [r3, -r0, lsl #16]
    21c0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    21c4:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    21c8:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    21cc:	4d787000 	ldclmi	0, cr7, [r8, #-0]
    21d0:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    21d4:	646c6f48 	strbtvs	r6, [ip], #-3912	; 0xfffff0b8
    21d8:	70007265 	andvc	r7, r0, r5, ror #4
    21dc:	61745378 	cmnvs	r4, r8, ror r3
    21e0:	70006b63 	andvc	r6, r0, r3, ror #22
    21e4:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    21e8:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    21ec:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    21f0:	75424243 	strbvc	r4, [r2, #-579]	; 0xfffffdbd
    21f4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    21f8:	566c7500 	strbtpl	r7, [ip], -r0, lsl #10
    21fc:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2200:	61547800 	cmpvs	r4, r0, lsl #16
    2204:	6f546b73 	svcvs	0x00546b73
    2208:	70737553 	rsbsvc	r7, r3, r3, asr r5
    220c:	00646e65 	rsbeq	r6, r4, r5, ror #28
    2210:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2214:	646e4574 	strbtvs	r4, [lr], #-1396	; 0xfffffa8c
    2218:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    221c:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    2220:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    2224:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    2228:	6b736154 	blvs	1cda780 <__RAM_SIZE+0x1bda780>
    222c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2230:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2234:	50787000 	rsbspl	r7, r8, r0
    2238:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    223c:	5773756f 	ldrbpl	r7, [r3, -pc, ror #10]!
    2240:	54656b61 	strbtpl	r6, [r5], #-2913	; 0xfffff49f
    2244:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2248:	41545378 	cmpmi	r4, r8, ror r3
    224c:	5f434954 	svcpl	0x00434954
    2250:	00424354 	subeq	r4, r2, r4, asr r3
    2254:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    2258:	6f62416b 	svcvs	0x0062416b
    225c:	65447472 	strbvs	r7, [r4, #-1138]	; 0xfffffb8e
    2260:	0079616c 	rsbseq	r6, r9, ip, ror #2
    2264:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    2268:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    226c:	46656d75 			; <UNDEFINED> instruction: 0x46656d75
    2270:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2274:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    2278:	6d75446c 	cfldrdvs	mvd4, [r5, #-432]!	; 0xfffffe50
    227c:	3831796d 	ldmdacc	r1!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
    2280:	6c757000 	ldclvs	0, cr7, [r5], #-0
    2284:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    2288:	61636966 	cmnvs	r3, r6, ror #18
    228c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2290:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    2294:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    2298:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    229c:	6b736154 	blvs	1cda7f4 <__RAM_SIZE+0x1bda7f4>
    22a0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    22a4:	6154006b 	cmpvs	r4, fp, rrx
    22a8:	6f486b73 	svcvs	0x00486b73
    22ac:	75466b6f 	strbvc	r6, [r6, #-2927]	; 0xfffff491
    22b0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    22b4:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 22bc <__HEAP_SIZE+0x12bc>
    22b8:	74536500 	ldrbvc	r6, [r3], #-1280	; 0xfffffb00
    22bc:	61646e61 	cmnvs	r4, r1, ror #28
    22c0:	6c536472 	cfldrdvs	mvd6, [r3], {114}	; 0x72
    22c4:	00706565 	rsbseq	r6, r0, r5, ror #10
    22c8:	61745365 	cmnvs	r4, r5, ror #6
    22cc:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
    22d0:	756f4378 	strbvc	r4, [pc, #-888]!	; 1f60 <__HEAP_SIZE+0xf60>
    22d4:	6500746e 	strvs	r7, [r0, #-1134]	; 0xfffffb92
    22d8:	61546f4e 	cmpvs	r4, lr, asr #30
    22dc:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    22e0:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    22e4:	6954676e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    22e8:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1d83 <__HEAP_SIZE+0xd83>
    22ec:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0xffffff8c
    22f0:	646e4563 	strbtvs	r4, [lr], #-1379	; 0xfffffa9d
    22f4:	7453664f 	ldrbvc	r6, [r3], #-1615	; 0xfffff9b1
    22f8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    22fc:	754d7870 	strbvc	r7, [sp, #-2160]	; 0xfffff790
    2300:	48786574 	ldmdami	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2304:	65646c6f 	strbvs	r6, [r4, #-3183]!	; 0xfffff391
    2308:	42435472 	submi	r5, r3, #1912602624	; 0x72000000
    230c:	54637000 	strbtpl	r7, [r3], #-0
    2310:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2314:	614e7465 	cmpvs	lr, r5, ror #8
    2318:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    231c:	6b636954 	blvs	18dc874 <__RAM_SIZE+0x17dc874>
    2320:	78750073 	ldmdavc	r5!, {r0, r1, r4, r5, r6}^
    2324:	61727241 	cmnvs	r2, r1, asr #4
    2328:	7a695379 	bvc	1a57114 <__RAM_SIZE+0x1957114>
    232c:	43780065 	cmnmi	r8, #101	; 0x65
    2330:	6c426e61 	mcrrvs	14, 6, r6, r2, cr1
    2334:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2338:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
    233c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2340:	00796c65 	rsbseq	r6, r9, r5, ror #24
    2344:	614e6370 	hvcvs	58928	; 0xe630
    2348:	6f54656d 	svcvs	0x0054656d
    234c:	72657551 	rsbvc	r7, r5, #339738624	; 0x14400000
    2350:	76700079 			; <UNDEFINED> instruction: 0x76700079
    2354:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    2358:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    235c:	00737365 	rsbseq	r7, r3, r5, ror #6
    2360:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    2364:	6f54736b 	svcvs	0x0054736b
    2368:	616c6544 	cmnvs	ip, r4, asr #10
    236c:	54760079 	ldrbtpl	r0, [r6], #-121	; 0xffffff87
    2370:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2374:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    2378:	6f4e6369 	svcvs	0x004e6369
    237c:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    2380:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
    2384:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 2274 <__HEAP_SIZE+0x1274>
    2388:	00525349 	subseq	r5, r2, r9, asr #6
    238c:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2390:	70755374 	rsbsvc	r5, r5, r4, ror r3
    2394:	73657270 	cmnvc	r5, #112, 4
    2398:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    239c:	6e41736b 	cdpvs	3, 4, cr7, cr1, cr11, {3}
    23a0:	656c5364 	strbvs	r5, [ip, #-868]!	; 0xfffffc9c
    23a4:	70007065 	andvc	r7, r0, r5, rrx
    23a8:	69547875 	ldmdbvs	r4, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
    23ac:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    23b0:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    23b4:	6b636174 	blvs	18da98c <__RAM_SIZE+0x17da98c>
    23b8:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    23bc:	2f2e2e00 	svccs	0x002e2e00
    23c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    23c4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    23c8:	6f747262 	svcvs	0x00747262
    23cc:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    23d0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    23d4:	742f534f 	strtvc	r5, [pc], #-847	; 23dc <__HEAP_SIZE+0x13dc>
    23d8:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    23dc:	7000632e 	andvc	r6, r0, lr, lsr #6
    23e0:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    23e4:	6f54736b 	svcvs	0x0054736b
    23e8:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    23ec:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    23f0:	7250706f 	subsvc	r7, r0, #111	; 0x6f
    23f4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    23f8:	75007974 	strvc	r7, [r0, #-2420]	; 0xfffff68c
    23fc:	69725078 	ldmdbvs	r2!, {r3, r4, r5, r6, ip, lr}^
    2400:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2404:	65735579 	ldrbvs	r5, [r3, #-1401]!	; 0xfffffa87
    2408:	456e4f64 	strbmi	r4, [lr, #-3940]!	; 0xfffff09c
    240c:	7972746e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2410:	42435400 	submi	r5, r3, #0, 8
    2414:	7000745f 	andvc	r7, r0, pc, asr r4
    2418:	65447672 	strbvs	r7, [r4, #-1650]	; 0xfffff98e
    241c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2420:	00424354 	subeq	r4, r2, r4, asr r3
    2424:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    2428:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
    242c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    2430:	6c417800 	mcrrvs	8, 0, r7, r1, cr0
    2434:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2438:	65695979 	strbvs	r5, [r9, #-2425]!	; 0xfffff687
    243c:	6465646c 	strbtvs	r6, [r5], #-1132	; 0xfffffb94
    2440:	45787000 	ldrbmi	r7, [r8, #-0]!
    2444:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    2448:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    244c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    2450:	65507800 	ldrbvs	r7, [r0, #-2048]	; 0xfffff800
    2454:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    2458:	6b636954 	blvs	18dc9b0 <__RAM_SIZE+0x17dc9b0>
    245c:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    2460:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    2464:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    2468:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    246c:	74536565 	ldrbvc	r6, [r3], #-1381	; 0xfffffa9b
    2470:	536b6361 	cmnpl	fp, #-2080374783	; 0x84000001
    2474:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2478:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    247c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2480:	61547465 	cmpvs	r4, r5, ror #8
    2484:	754e6b73 	strbvc	r6, [lr, #-2931]	; 0xfffff48d
    2488:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    248c:	43787500 	cmnmi	r8, #0, 10
    2490:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2494:	6142746e 	cmpvs	r2, lr, ror #8
    2498:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    249c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    24a0:	78007974 	stmdavc	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    24a4:	6b636954 	blvs	18dc9fc <__RAM_SIZE+0x17dc9fc>
    24a8:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    24ac:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    24b0:	78007055 	stmdavc	r0, {r0, r2, r4, r6, ip, sp, lr}
    24b4:	6b736154 	blvs	1cdaa0c <__RAM_SIZE+0x1bdaa0c>
    24b8:	65446f54 	strbvs	r6, [r4, #-3924]	; 0xfffff0ac
    24bc:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    24c0:	76727000 	ldrbtvc	r7, [r2], -r0
    24c4:	43646441 	cmnmi	r4, #1090519040	; 0x41000000
    24c8:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    24cc:	6154746e 	cmpvs	r4, lr, ror #8
    24d0:	6f546b73 	svcvs	0x00546b73
    24d4:	616c6544 	cmnvs	ip, r4, asr #10
    24d8:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    24dc:	00747369 	rsbseq	r7, r4, r9, ror #6
    24e0:	6f4e7875 	svcvs	0x004e7875
    24e4:	7070416e 	rsbsvc	r4, r0, lr, ror #2
    24e8:	6163696c 	cmnvs	r3, ip, ror #18
    24ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    24f0:	6b736154 	blvs	1cdaa48 <__RAM_SIZE+0x1bdaa48>
    24f4:	49630073 	stmdbmi	r3!, {r0, r1, r4, r5, r6}^
    24f8:	4e656c64 	cdpmi	12, 6, cr6, cr5, cr4, {3}
    24fc:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2500:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    2504:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    2508:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    250c:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    2510:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2514:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2518:	726f4665 	rsbvc	r4, pc, #105906176	; 0x6500000
    251c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    2520:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    2524:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    2528:	50657361 	rsbpl	r7, r5, r1, ror #6
    252c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2530:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    2534:	75007465 	strvc	r7, [r0, #-1125]	; 0xfffffb9b
    2538:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    253c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2540:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2544:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2548:	6b736154 	blvs	1cdaaa0 <__RAM_SIZE+0x1bdaaa0>
    254c:	54780073 	ldrbtpl	r0, [r8], #-115	; 0xffffff8d
    2550:	49656d69 	stmdbmi	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
    2554:	6572636e 	ldrbvs	r6, [r2, #-878]!	; 0xfffffc92
    2558:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    255c:	61547800 	cmpvs	r4, r0, lsl #16
    2560:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    2564:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    2568:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    256c:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    2570:	00656c64 	rsbeq	r6, r5, r4, ror #24
    2574:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2578:	576f5465 	strbpl	r5, [pc, -r5, ror #8]!
    257c:	00656b61 	rsbeq	r6, r5, r1, ror #22
    2580:	61745378 	cmnvs	r4, r8, ror r3
    2584:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2588:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    258c:	76006d65 	strvc	r6, [r0], -r5, ror #26
    2590:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    2594:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    2598:	476e6f69 	strbmi	r6, [lr, -r9, ror #30]!
    259c:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    25a0:	6154656c 	cmpvs	r4, ip, ror #10
    25a4:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    25a8:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    25ac:	54787000 	ldrbtpl	r7, [r8], #-0
    25b0:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    25b4:	6b736154 	blvs	1cdab0c <__RAM_SIZE+0x1bdab0c>
    25b8:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    25bc:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    25c0:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    25c4:	61745379 	cmnvs	r4, r9, ror r3
    25c8:	6c436574 	cfstr64vs	mvdx6, [r3], {116}	; 0x74
    25cc:	00726165 	rsbseq	r6, r2, r5, ror #2
    25d0:	69547875 	ldmdbvs	r4, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
    25d4:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    25d8:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    25dc:	6b636174 	blvs	18dabb4 <__RAM_SIZE+0x17dabb4>
    25e0:	54787000 	ldrbtpl	r7, [r8], #-0
    25e4:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    25e8:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25ec:	63537875 	cmpvs	r3, #7667712	; 0x750000
    25f0:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    25f4:	5372656c 	cmnpl	r2, #108, 10	; 0x1b000000
    25f8:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    25fc:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    2600:	61547600 	cmpvs	r4, r0, lsl #12
    2604:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    2608:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    260c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2610:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2614:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2618:	4472656d 	ldrbtmi	r6, [r2], #-1389	; 0xfffffa93
    261c:	6f6d6561 	svcvs	0x006d6561
    2620:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2624:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    2628:	00656c64 	rsbeq	r6, r5, r4, ror #24
    262c:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2630:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2634:	73696c61 	cmnvc	r9, #24832	; 0x6100
    2638:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    263c:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    2640:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    2644:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    2648:	6b736154 	blvs	1cdaba0 <__RAM_SIZE+0x1bdaba0>
    264c:	00424354 	subeq	r4, r2, r4, asr r3
    2650:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
    2654:	54786564 	ldrbtpl	r6, [r8], #-1380	; 0xfffffa9c
    2658:	746f4e6f 	strbtvc	r4, [pc], #-3695	; 2660 <__HEAP_SIZE+0x1660>
    265c:	00796669 	rsbseq	r6, r9, r9, ror #12
    2660:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    2664:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    2668:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    266c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    2670:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    2674:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    2678:	72466761 	subvc	r6, r6, #25427968	; 0x1840000
    267c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2680:	78700052 	ldmdavc	r0!, {r1, r4, r6}^
    2684:	61657243 	cmnvs	r5, r3, asr #4
    2688:	54646574 	strbtpl	r6, [r4], #-1396	; 0xfffffa8c
    268c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2690:	43767270 	cmnmi	r6, #112, 4
    2694:	6b636568 	blvs	18dbc3c <__RAM_SIZE+0x17dbc3c>
    2698:	6b736154 	blvs	1cdabf0 <__RAM_SIZE+0x1bdabf0>
    269c:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    26a0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    26a4:	6d726554 	cfldr64vs	mvdx6, [r2, #-336]!	; 0xfffffeb0
    26a8:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
    26ac:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    26b0:	764f7870 			; <UNDEFINED> instruction: 0x764f7870
    26b4:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    26b8:	6544776f 	strbvs	r7, [r4, #-1903]	; 0xfffff891
    26bc:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    26c0:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    26c4:	6c750074 	ldclvs	0, cr0, [r5], #-464	; 0xfffffe30
    26c8:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    26cc:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    26d0:	6b736154 	blvs	1cdac28 <__RAM_SIZE+0x1bdac28>
    26d4:	75527349 	ldrbvc	r7, [r2, #-841]	; 0xfffffcb7
    26d8:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
    26dc:	59724f67 	ldmdbpl	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, lr}^
    26e0:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    26e4:	00676e69 	rsbeq	r6, r7, r9, ror #28
    26e8:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
    26ec:	54786564 	ldrbtpl	r6, [r8], #-1380	; 0xfffffa9c
    26f0:	6961576f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    26f4:	006e4f74 	rsbeq	r4, lr, r4, ror pc
    26f8:	6d6f4378 	stclvs	3, cr4, [pc, #-480]!	; 2520 <__HEAP_SIZE+0x1520>
    26fc:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    2700:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2704:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2708:	5072656d 	rsbspl	r6, r2, sp, ror #10
    270c:	6f697265 	svcvs	0x00697265
    2710:	546e4964 	strbtpl	r4, [lr], #-2404	; 0xfffff69c
    2714:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    2718:	43787000 	cmnmi	r8, #0
    271c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2720:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
    2724:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    2728:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    272c:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    2730:	61577473 	cmpvs	r7, r3, ror r4
    2734:	706d4573 	rsbvc	r4, sp, r3, ror r5
    2738:	75007974 	strvc	r7, [r0, #-2420]	; 0xfffff68c
    273c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2740:	754e7265 	strbvc	r7, [lr, #-613]	; 0xfffffd9b
    2744:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    2748:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    274c:	6f4e656d 	svcvs	0x004e656d
    2750:	53780077 	cmnpl	r8, #119	; 0x77
    2754:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    2758:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    275c:	75517265 	ldrbvc	r7, [r1, #-613]	; 0xfffffd9b
    2760:	00657565 	rsbeq	r7, r5, r5, ror #10
    2764:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2768:	61507265 	cmpvs	r0, r5, ror #4
    276c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2770:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    2774:	704f7800 	subvc	r7, pc, r0, lsl #16
    2778:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    277c:	61566c61 	cmpvs	r6, r1, ror #24
    2780:	0065756c 	rsbeq	r7, r5, ip, ror #10
    2784:	69546370 	ldmdbvs	r4, {r4, r5, r6, r8, r9, sp, lr}^
    2788:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    278c:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2790:	61506c75 	cmpvs	r0, r5, ror ip
    2794:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2798:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
    279c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    27a0:	5072656d 	rsbspl	r6, r2, sp, ror #10
    27a4:	46646e65 	strbtmi	r6, [r4], -r5, ror #28
    27a8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    27ac:	436e6f69 	cmnmi	lr, #420	; 0x1a4
    27b0:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    27b4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    27b8:	72615072 	rsbvc	r5, r1, #114	; 0x72
    27bc:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    27c0:	745f7265 	ldrbvc	r7, [pc], #-613	; 27c8 <__HEAP_SIZE+0x17c8>
    27c4:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    27c8:	5172656d 	cmnpl	r2, sp, ror #10
    27cc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    27d0:	61745300 	cmnvs	r4, r0, lsl #6
    27d4:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    27d8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    27dc:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    27e0:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    27e4:	545f4349 	ldrbpl	r4, [pc], #-841	; 27ec <__HEAP_SIZE+0x17ec>
    27e8:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    27ec:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    27f0:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    27f4:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    27f8:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    27fc:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    2800:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    2804:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2808:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    280c:	6b636162 	blvs	18dad9c <__RAM_SIZE+0x17dad9c>
    2810:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2814:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2818:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    281c:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2820:	49646e61 	stmdbmi	r4!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    2824:	50780044 	rsbspl	r0, r8, r4, asr #32
    2828:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    282c:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2830:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    2834:	7000776f 	andvc	r7, r0, pc, ror #14
    2838:	68437672 	stmdavs	r3, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    283c:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    2840:	6156726f 	cmpvs	r6, pc, ror #4
    2844:	4c64696c 			; <UNDEFINED> instruction: 0x4c64696c
    2848:	41747369 	cmnmi	r4, r9, ror #6
    284c:	7551646e 	ldrbvc	r6, [r1, #-1134]	; 0xfffffb92
    2850:	00657565 	rsbeq	r7, r5, r5, ror #10
    2854:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2858:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    285c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2860:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2864:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2868:	4f545265 	svcmi	0x00545265
    286c:	69742f53 	ldmdbvs	r4!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
    2870:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    2874:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    2878:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    287c:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2880:	6c655274 	sfmvs	f5, 2, [r5], #-464	; 0xfffffe30
    2884:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    2888:	0065646f 	rsbeq	r6, r5, pc, ror #8
    288c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2890:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
    2894:	5f656c64 	svcpl	0x00656c64
    2898:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    289c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28a0:	61657243 	cmnvs	r5, r3, asr #4
    28a4:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    28a8:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    28ac:	76727000 	ldrbtvc	r7, [r2], -r0
    28b0:	636f7250 	cmnvs	pc, #80, 4
    28b4:	45737365 	ldrbmi	r7, [r3, #-869]!	; 0xfffffc9b
    28b8:	72697078 	rsbvc	r7, r9, #120	; 0x78
    28bc:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    28c0:	0072656d 	rsbseq	r6, r2, sp, ror #10
    28c4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    28c8:	6b636162 	blvs	18dae58 <__RAM_SIZE+0x17dae58>
    28cc:	61726150 	cmnvs	r2, r0, asr r1
    28d0:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    28d4:	745f7372 	ldrbvc	r7, [pc], #-882	; 28dc <__HEAP_SIZE+0x18dc>
    28d8:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    28dc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28e0:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    28e4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28e8:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    28ec:	70007265 	andvc	r7, r0, r5, ror #4
    28f0:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
    28f4:	0036796d 	eorseq	r7, r6, sp, ror #18
    28f8:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    28fc:	6d695477 	cfstrdvs	mvd5, [r9, #-476]!	; 0xfffffe24
    2900:	70007265 	andvc	r7, r0, r5, ror #4
    2904:	74655276 	strbtvc	r5, [r5], #-630	; 0xfffffd8a
    2908:	006e7275 	rsbeq	r7, lr, r5, ror r2
    290c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2910:	73497265 	movtvc	r7, #37477	; 0x9265
    2914:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2918:	74634172 	strbtvc	r4, [r3], #-370	; 0xfffffe8e
    291c:	00657669 	rsbeq	r7, r5, r9, ror #12
    2920:	70784578 	rsbsvc	r4, r8, r8, ror r5
    2924:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2928:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    292c:	726d7400 	rsbvc	r7, sp, #0, 8
    2930:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2934:	65755172 	ldrbvs	r5, [r5, #-370]!	; 0xfffffe8e
    2938:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
    293c:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2940:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    2944:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2948:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    294c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2950:	00444972 	subeq	r4, r4, r2, ror r9
    2954:	74754178 	ldrbtvc	r4, [r5], #-376	; 0xfffffe88
    2958:	6c65526f 	sfmvs	f5, 2, [r5], #-444	; 0xfffffe44
    295c:	0064616f 	rsbeq	r6, r4, pc, ror #2
    2960:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2964:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2968:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    296c:	6d6f4363 	stclvs	3, cr4, [pc, #-396]!	; 27e8 <__HEAP_SIZE+0x17e8>
    2970:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    2974:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 2864 <__HEAP_SIZE+0x1864>
    2978:	00525349 	subseq	r5, r2, r9, asr #6
    297c:	764f7870 			; <UNDEFINED> instruction: 0x764f7870
    2980:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    2984:	6954776f 	ldmdbvs	r4, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}^
    2988:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    298c:	00747369 	rsbseq	r7, r4, r9, ror #6
    2990:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2994:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2998:	73696c61 	cmnvc	r9, #24832	; 0x6100
    299c:	77654e65 	strbvc	r4, [r5, -r5, ror #28]!
    29a0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29a4:	76700072 			; <UNDEFINED> instruction: 0x76700072
    29a8:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    29ac:	75003579 	strvc	r3, [r0, #-1401]	; 0xfffffa87
    29b0:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    29b4:	0037796d 	eorseq	r7, r7, sp, ror #18
    29b8:	4d495478 	cfstrdmi	mvd5, [r9, #-480]	; 0xfffffe20
    29bc:	78005245 	stmdavc	r0, {r0, r2, r6, r9, ip, lr}
    29c0:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    29c4:	69546576 	ldmdbvs	r4, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    29c8:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    29cc:	31747369 	cmncc	r4, r9, ror #6
    29d0:	63417800 	movtvs	r7, #6144	; 0x1800
    29d4:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    29d8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29dc:	73694c72 	cmnvc	r9, #29184	; 0x7200
    29e0:	70003274 	andvc	r3, r0, r4, ror r2
    29e4:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    29e8:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
    29ec:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29f0:	416e4972 	smcmi	58514	; 0xe492
    29f4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    29f8:	73694c65 	cmnvc	r9, #25856	; 0x6500
    29fc:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    2a00:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2a04:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0xfffffab9
    2a08:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2a0c:	6d695479 	cfstrdvs	mvd5, [r9, #-484]!	; 0xfffffe1c
    2a10:	6d740065 	ldclvs	0, cr0, [r4, #-404]!	; 0xfffffe6c
    2a14:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    2a18:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2a1c:	7261506b 	rsbvc	r5, r1, #107	; 0x6b
    2a20:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    2a24:	00737265 	rsbseq	r7, r3, r5, ror #4
    2a28:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2a2c:	72437265 	subvc	r7, r3, #1342177286	; 0x50000006
    2a30:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2a34:	76727000 	ldrbtvc	r7, [r2], -r0
    2a38:	706d6153 	rsbvc	r6, sp, r3, asr r1
    2a3c:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2a40:	6f4e656d 	svcvs	0x004e656d
    2a44:	43780077 	cmnmi	r8, #119	; 0x77
    2a48:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2a4c:	506b6361 	rsbpl	r6, fp, r1, ror #6
    2a50:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    2a54:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    2a58:	54760073 	ldrbtpl	r0, [r6], #-115	; 0xffffff8d
    2a5c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2a60:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    2a64:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2a68:	78004449 	stmdavc	r0, {r0, r3, r6, sl, lr}
    2a6c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2a70:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2a74:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    2a78:	7670006d 	ldrbtvc	r0, [r0], -sp, rrx
    2a7c:	4977654e 	ldmdbmi	r7!, {r1, r2, r3, r6, r8, sl, sp, lr}^
    2a80:	72700044 	rsbsvc	r0, r0, #68	; 0x44
    2a84:	69775376 	ldmdbvs	r7!, {r1, r2, r4, r5, r6, r8, r9, ip, lr}^
    2a88:	54686374 	strbtpl	r6, [r8], #-884	; 0xfffffc8c
    2a8c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2a90:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2a94:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    2a98:	6c655276 	sfmvs	f5, 2, [r5], #-472	; 0xfffffe28
    2a9c:	5464616f 	strbtpl	r6, [r4], #-367	; 0xfffffe91
    2aa0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2aa4:	53637500 	cmnpl	r3, #0, 10
    2aa8:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    2aac:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2ab0:	75517265 	ldrbvc	r7, [r1, #-613]	; 0xfffffd9b
    2ab4:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    2ab8:	61726f74 	cmnvs	r2, r4, ror pc
    2abc:	70006567 	andvc	r6, r0, r7, ror #10
    2ac0:	72615076 	rsbvc	r5, r1, #118	; 0x76
    2ac4:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    2ac8:	00317265 	eorseq	r7, r1, r5, ror #4
    2acc:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    2ad0:	38796d6d 	ldmdacc	r9!, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
    2ad4:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2ad8:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    2adc:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2ae0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2ae4:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    2ae8:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2aec:	61547265 	cmpvs	r4, r5, ror #4
    2af0:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    2af4:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2af8:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2afc:	69546572 	ldmdbvs	r4, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2b00:	7500656d 	strvc	r6, [r0, #-1389]	; 0xfffffa93
    2b04:	61745363 	cmnvs	r4, r3, ror #6
    2b08:	00737574 	rsbseq	r7, r3, r4, ror r5
    2b0c:	50767270 	rsbspl	r7, r6, r0, ror r2
    2b10:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2b14:	65527373 	ldrbvs	r7, [r2, #-883]	; 0xfffffc8d
    2b18:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    2b1c:	6f436465 	svcvs	0x00436465
    2b20:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
    2b24:	78007364 	stmdavc	r0, {r2, r5, r6, r8, r9, ip, sp, lr}
    2b28:	7473614c 	ldrbtvc	r6, [r3], #-332	; 0xfffffeb4
    2b2c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2b30:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
    2b34:	46646564 	strbtmi	r6, [r4], -r4, ror #10
    2b38:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    2b3c:	5f6e6f69 	svcpl	0x006e6f69
    2b40:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2b44:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    2b48:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    2b4c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2b50:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2b54:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    2b58:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2b5c:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    2b60:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2b64:	00444972 	subeq	r4, r4, r2, ror r9
    2b68:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
    2b6c:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    2b70:	44004449 	strmi	r4, [r0], #-1097	; 0xfffffbb7
    2b74:	6f6d6561 	svcvs	0x006d6561
    2b78:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2b7c:	73654d6b 	cmnvc	r5, #6848	; 0x1ac0
    2b80:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    2b84:	7600745f 			; <UNDEFINED> instruction: 0x7600745f
    2b88:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2b8c:	73655272 	cmnvc	r5, #536870919	; 0x20000007
    2b90:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    2b94:	00657461 	rsbeq	r7, r5, r1, ror #8
    2b98:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2b9c:	65537265 	ldrbvs	r7, [r3, #-613]	; 0xfffffd9b
    2ba0:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    2ba4:	754e7265 	strbvc	r7, [lr, #-613]	; 0xfffffd9b
    2ba8:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    2bac:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2bb0:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2bb4:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2bb8:	646f6972 	strbtvs	r6, [pc], #-2418	; 2bc0 <__HEAP_SIZE+0x1bc0>
    2bbc:	54787000 	ldrbtpl	r7, [r8], #-0
    2bc0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2bc4:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    2bc8:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2bcc:	6c615665 	stclvs	6, cr5, [r1], #-404	; 0xfffffe6c
    2bd0:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    2bd4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2bd8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2bdc:	65506f54 	ldrbvs	r6, [r0, #-3924]	; 0xfffff0ac
    2be0:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    2be4:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    2be8:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2bec:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    2bf0:	70006c6f 	andvc	r6, r0, pc, ror #24
    2bf4:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2bf8:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2bfc:	6d614e74 	stclvs	14, cr4, [r1, #-464]!	; 0xfffffe30
    2c00:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    2c04:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2c08:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2c0c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2c10:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2c14:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2c18:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 2b08 <__HEAP_SIZE+0x1b08>
    2c1c:	00525349 	subseq	r5, r2, r9, asr #6
    2c20:	50767270 	rsbspl	r7, r6, r0, ror r2
    2c24:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2c28:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2c2c:	4f72656d 	svcmi	0x0072656d
    2c30:	6f6c4272 	svcvs	0x006c4272
    2c34:	61546b63 	cmpvs	r4, r3, ror #22
    2c38:	76006b73 			; <UNDEFINED> instruction: 0x76006b73
    2c3c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2c40:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    2c44:	6f6c6552 	svcvs	0x006c6552
    2c48:	6f4d6461 	svcvs	0x004d6461
    2c4c:	78006564 	stmdavc	r0, {r2, r5, r6, r8, sl, sp, lr}
    2c50:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2c54:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2c58:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    2c5c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2c60:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2c64:	6e654772 	mcrvs	7, 3, r4, cr5, cr2, {3}
    2c68:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    2c6c:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2c70:	46646e61 	strbtmi	r6, [r4], -r1, ror #28
    2c74:	546d6f72 	strbtpl	r6, [sp], #-3954	; 0xfffff08e
    2c78:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2c7c:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    2c80:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2c84:	61726150 	cmnvs	r2, r0, asr r1
    2c88:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2c8c:	70007372 	andvc	r7, r0, r2, ror r3
    2c90:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    2c94:	4272656d 	rsbsmi	r6, r2, #457179136	; 0x1b400000
    2c98:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    2c9c:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    2ca0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2ca4:	6b636162 	blvs	18db234 <__RAM_SIZE+0x17db234>
    2ca8:	76727000 	ldrbtvc	r7, [r2], -r0
    2cac:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2cb0:	45747865 	ldrbmi	r7, [r4, #-2149]!	; 0xfffff79b
    2cb4:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2cb8:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2cbc:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    2cc0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2cc4:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2cc8:	65577374 	ldrbvs	r7, [r7, #-884]	; 0xfffffc8c
    2ccc:	77536572 			; <UNDEFINED> instruction: 0x77536572
    2cd0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2cd4:	70006465 	andvc	r6, r0, r5, ror #8
    2cd8:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    2cdc:	756f6976 	strbvc	r6, [pc, #-2422]!	; 236e <__HEAP_SIZE+0x136e>
    2ce0:	6f6c4273 	svcvs	0x006c4273
    2ce4:	70006b63 	andvc	r6, r0, r3, ror #22
    2ce8:	61654878 	smcvs	21640	; 0x5488
    2cec:	61745370 	cmnvs	r4, r0, ror r3
    2cf0:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    2cf4:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    2cf8:	456d756d 	strbmi	r7, [sp, #-1389]!	; 0xfffffa93
    2cfc:	46726576 			; <UNDEFINED> instruction: 0x46726576
    2d00:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2d04:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    2d08:	616d6552 	cmnvs	sp, r2, asr r5
    2d0c:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    2d10:	65480067 	strbvs	r0, [r8, #-103]	; 0xffffff99
    2d14:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2d18:	5f737461 	svcpl	0x00737461
    2d1c:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2d20:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2d24:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2d28:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2d2c:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2d30:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2d34:	4d78006b 	ldclmi	0, cr0, [r8, #-428]!	; 0xfffffe54
    2d38:	69536e69 	ldmdbvs	r3, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2d3c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2d40:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2d44:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2d48:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2d4c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2d50:	7000736b 	andvc	r7, r0, fp, ror #6
    2d54:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
    2d58:	76727000 	ldrbtvc	r7, [r2], -r0
    2d5c:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    2d60:	6c427472 	cfstrdvs	mvd7, [r2], {114}	; 0x72
    2d64:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2d68:	466f746e 	strbtmi	r7, [pc], -lr, ror #8
    2d6c:	4c656572 	cfstr64mi	mvdx6, [r5], #-456	; 0xfffffe38
    2d70:	00747369 	rsbseq	r7, r4, r9, ror #6
    2d74:	4c425f41 	mcrrmi	15, 4, r5, r2, cr1
    2d78:	5f4b434f 	svcpl	0x004b434f
    2d7c:	4b4e494c 	blmi	13952b4 <__RAM_SIZE+0x12952b4>
    2d80:	53787500 	cmnpl	r8, #0, 10
    2d84:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2d88:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    2d8c:	00737365 	rsbseq	r7, r3, r5, ror #6
    2d90:	7a695378 	bvc	1a57b78 <__RAM_SIZE+0x1957b78>
    2d94:	53664f65 	cmnpl	r6, #404	; 0x194
    2d98:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    2d9c:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2da0:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2da4:	6b636f6c 	blvs	18deb5c <__RAM_SIZE+0x17deb5c>
    2da8:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2dac:	00736574 	rsbseq	r6, r3, r4, ror r5
    2db0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2db4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2db8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2dbc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2dc0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2dc4:	4f545265 	svcmi	0x00545265
    2dc8:	6f702f53 	svcvs	0x00702f53
    2dcc:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2dd0:	4d2f656c 	cfstr32mi	mvfx6, [pc, #-432]!	; 2c28 <__HEAP_SIZE+0x1c28>
    2dd4:	614d6d65 	cmpvs	sp, r5, ror #26
    2dd8:	682f676e 	stmdavs	pc!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}	; <UNPREDICTABLE>
    2ddc:	5f706165 	svcpl	0x00706165
    2de0:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    2de4:	6e457875 	mcrvs	8, 2, r7, cr5, cr5, {3}
    2de8:	64644164 	strbtvs	r4, [r4], #-356	; 0xfffffe9c
    2dec:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2df0:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
    2df4:	6c427765 	mcrrvs	7, 6, r7, r2, cr5
    2df8:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2dfc:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2e00:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2e04:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2e08:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2e0c:	70616548 	rsbvc	r6, r1, r8, asr #10
    2e10:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2e14:	64417800 	strbvs	r7, [r1], #-2048	; 0xfffff800
    2e18:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
    2e1c:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
    2e20:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    2e24:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2e28:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2e2c:	6f507600 	svcvs	0x00507600
    2e30:	65487472 	strbvs	r7, [r8, #-1138]	; 0xfffffb8e
    2e34:	65527061 	ldrbvs	r7, [r2, #-97]	; 0xffffff9f
    2e38:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2e3c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2e40:	614d7800 	cmpvs	sp, r0, lsl #16
    2e44:	7a695378 	bvc	1a57c2c <__RAM_SIZE+0x1957c2c>
    2e48:	50780065 	rsbspl	r0, r8, r5, rrx
    2e4c:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2e50:	694d7465 	stmdbvs	sp, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2e54:	756d696e 	strbvc	r6, [sp, #-2414]!	; 0xfffff692
    2e58:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    2e5c:	65724672 	ldrbvs	r4, [r2, #-1650]!	; 0xfffff98e
    2e60:	61654865 	cmnvs	r5, r5, ror #16
    2e64:	7a695370 	bvc	1a57c2c <__RAM_SIZE+0x1957c2c>
    2e68:	6c420065 	mcrrvs	0, 6, r0, r2, cr5
    2e6c:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2e70:	5f6b6e69 	svcpl	0x006b6e69
    2e74:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    2e78:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2e7c:	53664f72 	cmnpl	r6, #456	; 0x1c8
    2e80:	65636375 	strbvs	r6, [r3, #-885]!	; 0xfffffc8b
    2e84:	75667373 	strbvc	r7, [r6, #-883]!	; 0xfffffc8d
    2e88:	6c6c416c 	stfvse	f4, [ip], #-432	; 0xfffffe50
    2e8c:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2e90:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    2e94:	76417800 	strbvc	r7, [r1], -r0, lsl #16
    2e98:	616c6961 	cmnvs	ip, r1, ror #18
    2e9c:	48656c62 	stmdami	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2ea0:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2ea4:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2ea8:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2eac:	00736574 	rsbseq	r6, r3, r4, ror r5
    2eb0:	61654878 	smcvs	21640	; 0x5488
    2eb4:	72745370 	rsbsvc	r5, r4, #112, 6	; 0xc0000001
    2eb8:	53746375 	cmnpl	r4, #-738197503	; 0xd4000001
    2ebc:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2ec0:	6f507670 	svcvs	0x00507670
    2ec4:	61437472 	hvcvs	14146	; 0x3742
    2ec8:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    2ecc:	72467800 	subvc	r7, r6, #0, 16
    2ed0:	79426565 	stmdbvc	r2, {r0, r2, r5, r6, r8, sl, sp, lr}^
    2ed4:	52736574 	rsbspl	r6, r3, #116, 10	; 0x1d000000
    2ed8:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    2edc:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2ee0:	69537800 	ldmdbvs	r3, {fp, ip, sp, lr}^
    2ee4:	664f657a 			; <UNDEFINED> instruction: 0x664f657a
    2ee8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
    2eec:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2ef0:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2ef4:	6b636f6c 	blvs	18decac <__RAM_SIZE+0x17decac>
    2ef8:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2efc:	00736574 	rsbseq	r6, r3, r4, ror r5
    2f00:	48767270 	ldmdami	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2f04:	49706165 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sp, lr}^
    2f08:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2f0c:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    2f10:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    2f14:	736e496f 	cmnvc	lr, #1818624	; 0x1bc000
    2f18:	00747265 	rsbseq	r7, r4, r5, ror #4
    2f1c:	746f5478 	strbtvc	r5, [pc], #-1144	; 2f24 <__HEAP_SIZE+0x1f24>
    2f20:	65486c61 	strbvs	r6, [r8, #-3169]	; 0xfffff39f
    2f24:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    2f28:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2f2c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2f30:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2f34:	63637553 	cmnvs	r3, #348127232	; 0x14c00000
    2f38:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
    2f3c:	72466c75 	subvc	r6, r6, #29952	; 0x7500
    2f40:	00736565 	rsbseq	r6, r3, r5, ror #10
    2f44:	6f6c4278 	svcvs	0x006c4278
    2f48:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    2f4c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2f50:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    2f54:	42780074 	rsbsmi	r0, r8, #116	; 0x74
    2f58:	6b636f6c 	blvs	18ded10 <__RAM_SIZE+0x17ded10>
    2f5c:	4e780073 	mrcmi	0, 3, r0, cr8, cr3, {3}
    2f60:	70006d75 	andvc	r6, r0, r5, ror sp
    2f64:	72694678 	rsbvc	r4, r9, #120, 12	; 0x7800000
    2f68:	72467473 	subvc	r7, r6, #1929379840	; 0x73000000
    2f6c:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2f70:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2f74:	6e615778 	mcrvs	7, 3, r5, cr1, cr8, {3}
    2f78:	53646574 	cmnpl	r4, #116, 10	; 0x1d000000
    2f7c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2f80:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2f84:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    2f88:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2f8c:	42657369 	rsbmi	r7, r5, #-1543503871	; 0xa4000001
    2f90:	6b636f6c 	blvs	18ded48 <__RAM_SIZE+0x17ded48>
    2f94:	50760073 	rsbspl	r0, r6, r3, ror r0
    2f98:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2f9c:	65487465 	strbvs	r7, [r8, #-1125]	; 0xfffffb9b
    2fa0:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2fa4:	00737461 	rsbseq	r7, r3, r1, ror #8
    2fa8:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    2fac:	75006b6e 	strvc	r6, [r0, #-2926]	; 0xfffff492
    2fb0:	6972436c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, r9, lr}^
    2fb4:	61636974 	smcvs	13972	; 0x3694
    2fb8:	73654e6c 	cmnvc	r5, #108, 28	; 0x6c0
    2fbc:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2fc0:	446c7500 	strbtmi	r7, [ip], #-1280	; 0xfffffb00
    2fc4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2fc8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2fcc:	63750043 	cmnvs	r5, #67	; 0x43
    2fd0:	4e435653 	mcrmi	6, 2, r5, cr3, cr3, {2}
    2fd4:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2fd8:	53760072 	cmnpl	r6, #114	; 0x72
    2fdc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2fe0:	73726946 	cmnvc	r2, #1146880	; 0x118000
    2fe4:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    2fe8:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2fec:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    2ff0:	6154726f 	cmpvs	r4, pc, ror #4
    2ff4:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2ff8:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2ffc:	43565374 	cmpmi	r6, #116, 6	; 0xd0000001
    3000:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    3004:	5f72656c 	svcpl	0x0072656c
    3008:	6c750043 	ldclvs	0, cr0, [r5], #-268	; 0xfffffef4
    300c:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    3010:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    3014:	6b636954 	blvs	18dd56c <__RAM_SIZE+0x17dd56c>
    3018:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    301c:	0073646f 	rsbseq	r6, r3, pc, ror #8
    3020:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3024:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3028:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    302c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3030:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    3034:	4f545265 	svcmi	0x00545265
    3038:	6f702f53 	svcvs	0x00702f53
    303c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    3040:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    3044:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    3048:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    304c:	5f33334d 	svcpl	0x0033334d
    3050:	2f5a544e 	svccs	0x005a544e
    3054:	5f6e6f6e 	svcpl	0x006e6f6e
    3058:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    305c:	702f6572 	eorvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    3060:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    3064:	6c750063 	ldclvs	0, cr0, [r5], #-396	; 0xfffffe74
    3068:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    306c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    3070:	73795364 	cmnvc	r9, #100, 6	; 0x90000001
    3074:	6b636954 	blvs	18dd5cc <__RAM_SIZE+0x17dd5cc>
    3078:	72636544 	rsbvc	r6, r3, #68, 10	; 0x11000000
    307c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    3080:	70007374 	andvc	r7, r0, r4, ror r3
    3084:	61436c75 	hvcvs	14021	; 0x36c5
    3088:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    308c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    3090:	6464416b 	strbtvs	r4, [r4], #-363	; 0xfffffe95
    3094:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    3098:	536c7500 	cmnpl	ip, #0, 10
    309c:	70706f74 	rsbsvc	r6, r0, r4, ror pc
    30a0:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    30a4:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    30a8:	65706d6f 	ldrbvs	r6, [r0, #-3439]!	; 0xfffff291
    30ac:	7461736e 	strbtvc	r7, [r1], #-878	; 0xfffffc92
    30b0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    30b4:	79536c75 	ldmdbvc	r3, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    30b8:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    30bc:	6365446b 	cmnvs	r5, #1795162112	; 0x6b000000
    30c0:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    30c4:	4c73746e 	cfldrdmi	mvd7, [r3], #-440	; 0xfffffe48
    30c8:	00746665 	rsbseq	r6, r4, r5, ror #12
    30cc:	61436c75 	hvcvs	14021	; 0x36c5
    30d0:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
    30d4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    30d8:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    30dc:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    30e0:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    30e4:	6669646f 	strbtvs	r6, [r9], -pc, ror #8
    30e8:	6c626169 	stfvse	f6, [r2], #-420	; 0xfffffe5c
    30ec:	6c644965 			; <UNDEFINED> instruction: 0x6c644965
    30f0:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    30f4:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    30f8:	6d697861 	stclvs	8, cr7, [r9, #-388]!	; 0xfffffe7c
    30fc:	6f506d75 	svcvs	0x00506d75
    3100:	62697373 	rsbvs	r7, r9, #-872415231	; 0xcc000001
    3104:	7553656c 	ldrbvc	r6, [r3, #-1388]	; 0xfffffa94
    3108:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
    310c:	64657373 	strbtvs	r7, [r5], #-883	; 0xfffffc8d
    3110:	6b636954 	blvs	18dd668 <__RAM_SIZE+0x17dd668>
    3114:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    3118:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    311c:	6978456b 	ldmdbvs	r8!, {r0, r1, r3, r5, r6, r8, sl, lr}^
    3120:	72724574 	rsbsvc	r4, r2, #116, 10	; 0x1d000000
    3124:	7600726f 	strvc	r7, [r0], -pc, ror #4
    3128:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    312c:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0xfffffaad
    3130:	6d695470 	cfstrdvs	mvd5, [r9, #-448]!	; 0xfffffe40
    3134:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    3138:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    313c:	00747075 	rsbseq	r7, r4, r5, ror r0
    3140:	6f437870 	svcvs	0x00437870
    3144:	78006564 	stmdavc	r0, {r2, r5, r6, r8, sl, sp, lr}
    3148:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    314c:	6e497349 	cdpvs	3, 4, cr7, cr9, cr9, {2}
    3150:	65646973 	strbvs	r6, [r4, #-2419]!	; 0xfffff68d
    3154:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3158:	70757272 	rsbsvc	r7, r5, r2, ror r2
    315c:	6c750074 	ldclvs	0, cr0, [r5], #-464	; 0xfffffe30
    3160:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    3164:	49746e65 	ldmdbmi	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    3168:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    316c:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3170:	65527600 	ldrbvs	r7, [r2, #-1536]	; 0xfffffa00
    3174:	726f7473 	rsbvc	r7, pc, #1929379840	; 0x73000000
    3178:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
    317c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    3180:	6946664f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r9, sl, sp, lr}^
    3184:	54747372 	ldrbtpl	r7, [r4], #-882	; 0xfffffc8e
    3188:	006b7361 	rsbeq	r7, fp, r1, ror #6
    318c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3190:	5f525349 	svcpl	0x00525349
    3194:	79530074 	ldmdbvc	r3, {r2, r4, r5, r6}^
    3198:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    319c:	61485f6b 	cmpvs	r8, fp, ror #30
    31a0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    31a4:	6c750072 	ldclvs	0, cr0, [r5], #-456	; 0xfffffe38
    31a8:	6f6c6552 	svcvs	0x006c6552
    31ac:	61566461 	cmpvs	r6, r1, ror #8
    31b0:	0065756c 	rsbeq	r7, r5, ip, ror #10
    31b4:	69546c75 	ldmdbvs	r4, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    31b8:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    31bc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    31c0:	726f4673 	rsbvc	r4, pc, #120586240	; 0x7300000
    31c4:	54656e4f 	strbtpl	r6, [r5], #-3663	; 0xfffff1b1
    31c8:	006b6369 	rsbeq	r6, fp, r9, ror #6
    31cc:	72506c75 	subsvc	r6, r0, #29952	; 0x7500
    31d0:	6f697665 	svcvs	0x00697665
    31d4:	614d7375 	hvcvs	55093	; 0xd735
    31d8:	50006b73 	andpl	r6, r0, r3, ror fp
    31dc:	53646e65 	cmnpl	r4, #1616	; 0x650
    31e0:	61485f56 	cmpvs	r8, r6, asr pc
    31e4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    31e8:	2e2e0072 	mcrcs	0, 1, r0, cr14, cr2, {3}
    31ec:	2f2e2e2f 	svccs	0x002e2e2f
    31f0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3140 <__HEAP_SIZE+0x2140>
    31f4:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    31f8:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    31fc:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    3200:	2f534f54 	svccs	0x00534f54
    3204:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3208:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    320c:	4343472f 	movtmi	r4, #14127	; 0x372f
    3210:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    3214:	334d435f 	movtcc	r4, #54111	; 0xd35f
    3218:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    321c:	6f6e2f5a 	svcvs	0x006e2f5a
    3220:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    3224:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    3228:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    322c:	6d736174 	ldfvse	f6, [r3, #-464]!	; 0xfffffe30
    3230:	7800632e 	stmdavc	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    3234:	72507349 	subsvc	r7, r0, #603979777	; 0x24000001
    3238:	6c697669 	stclvs	6, cr7, [r9], #-420	; 0xfffffe5c
    323c:	64656765 	strbtvs	r6, [r5], #-1893	; 0xfffff89b
    3240:	43565300 	cmpmi	r6, #0, 6
    3244:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    3248:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    324c:	65527600 	ldrbvs	r7, [r2, #-1536]	; 0xfffffa00
    3250:	50746573 	rsbspl	r6, r4, r3, ror r5
    3254:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3258:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    325c:	4d6c7500 	cfstr64mi	mvdx7, [ip, #-0]
    3260:	006b7361 	rsbeq	r7, fp, r1, ror #6
    3264:	69615276 	stmdbvs	r1!, {r1, r2, r4, r5, r6, r9, ip, lr}^
    3268:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    326c:	6c697669 	stclvs	6, cr7, [r9], #-420	; 0xfffffe5c
    3270:	00656765 	rsbeq	r6, r5, r5, ror #14
    3274:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    3278:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    327c:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    3280:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    3284:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    3288:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    328c:	334d434d 	movtcc	r4, #54093	; 0xd34d
    3290:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    3294:	20554e47 	subscs	r4, r5, r7, asr #28
    3298:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    329c:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    32a0:	2e2e0031 	mcrcs	0, 1, r0, cr14, cr1, {1}
    32a4:	2f2e2e2f 	svccs	0x002e2e2f
    32a8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 31f8 <__HEAP_SIZE+0x21f8>
    32ac:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    32b0:	2f736c69 	svccs	0x00736c69
    32b4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    32b8:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    32bc:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    32c0:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    32c4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    32c8:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
    32cc:	61662f33 	cmnvs	r6, r3, lsr pc
    32d0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    32d4:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    32d8:	Address 0x000032d8 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
        xReturn = pdFALSE;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
}
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	00000044 	andeq	r0, r0, r4, asr #32
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      3c:	00000010 	andeq	r0, r0, r0, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
        BaseType_t xReturn = pdFAIL;
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
    }
      48:	00000014 	andeq	r0, r0, r4, lsl r0
	...
        pc = *sp;
      54:	00000010 	andeq	r0, r0, r0, lsl r0
      58:	83080e41 	movwhi	r0, #36417	; 0x8e41
    return pc;
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
        return 0;
      60:	0000001c 	andeq	r0, r0, ip, lsl r0
      64:	00000000 	andeq	r0, r0, r0
      68:	10000844 	andne	r0, r0, r4, asr #16
      6c:	00000068 	andeq	r0, r0, r8, rrx
      70:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      74:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      78:	900e4101 	andls	r4, lr, r1, lsl #2
      7c:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
            prvUnlockQueue( pxQueue );
      80:	00000014 	andeq	r0, r0, r4, lsl r0
            ( void ) xTaskResumeAll();
      84:	00000000 	andeq	r0, r0, r0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	100008ac 	andne	r0, r0, ip, lsr #17
      8c:	0000001c 	andeq	r0, r0, ip, lsl r0
      90:	83080e41 	movwhi	r0, #36417	; 0x8e41
        taskENTER_CRITICAL();
      94:	00018e02 	andeq	r8, r1, r2, lsl #28
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000014 	andeq	r0, r0, r4, lsl r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00000000 	andeq	r0, r0, r0
      a0:	100008c8 	andne	r0, r0, r8, asr #17
                else if( xEntryTimeSet == pdFALSE )
      a4:	00000018 	andeq	r0, r0, r8, lsl r0
        taskEXIT_CRITICAL();
      a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
        vTaskSuspendAll();
      ac:	00018e02 	andeq	r8, r1, r2, lsl #28
        prvLockQueue( pxQueue );
      b0:	00000014 	andeq	r0, r0, r4, lsl r0
      b4:	00000000 	andeq	r0, r0, r0
      b8:	100008e0 	andne	r0, r0, r0, ror #17
      bc:	00000018 	andeq	r0, r0, r8, lsl r0
      c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      c4:	00018e02 	andeq	r8, r1, r2, lsl #28
      c8:	00000014 	andeq	r0, r0, r4, lsl r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	100008f8 	strdne	r0, [r0], -r8
      d4:	00000018 	andeq	r0, r0, r8, lsl r0
      d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00018e02 	andeq	r8, r1, r2, lsl #28
      e0:	00000014 	andeq	r0, r0, r4, lsl r0
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00000000 	andeq	r0, r0, r0
      e8:	10000910 	andne	r0, r0, r0, lsl r9
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00000018 	andeq	r0, r0, r8, lsl r0
      f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
                prvUnlockQueue( pxQueue );
      f4:	00018e02 	andeq	r8, r1, r2, lsl #28
      f8:	00000014 	andeq	r0, r0, r4, lsl r0
                if( xTaskResumeAll() == pdFALSE )
      fc:	00000000 	andeq	r0, r0, r0
     100:	10000928 	andne	r0, r0, r8, lsr #18
                    taskYIELD_WITHIN_API();
     104:	00000018 	andeq	r0, r0, r8, lsl r0
                    if( xInheritanceOccurred != pdFALSE )
     108:	83080e41 	movwhi	r0, #36417	; 0x8e41
                return errQUEUE_EMPTY;
     10c:	00018e02 	andeq	r8, r1, r2, lsl #28
                        taskENTER_CRITICAL();
     110:	00000014 	andeq	r0, r0, r4, lsl r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00000000 	andeq	r0, r0, r0
     118:	10000940 	andne	r0, r0, r0, asr #18
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00000024 	andeq	r0, r0, r4, lsr #32
                        taskEXIT_CRITICAL();
     120:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     124:	00018e02 	andeq	r8, r1, r2, lsl #28
     128:	00000014 	andeq	r0, r0, r4, lsl r0
     12c:	00000000 	andeq	r0, r0, r0
     130:	10000964 	andne	r0, r0, r4, ror #18
     134:	00000038 	andeq	r0, r0, r8, lsr r0
     138:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     13c:	00018e02 	andeq	r8, r1, r2, lsl #28
     140:	0000000c 	andeq	r0, r0, ip
     144:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     148:	7c020001 	stcvc	0, cr0, [r2], {1}
     14c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     150:	0000000c 	andeq	r0, r0, ip
     154:	00000140 	andeq	r0, r0, r0, asr #2
     158:	00000000 	andeq	r0, r0, r0
     15c:	00000010 	andeq	r0, r0, r0, lsl r0
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000140 	andeq	r0, r0, r0, asr #2
     168:	1000099c 	mulne	r0, ip, r9
     16c:	0000002c 	andeq	r0, r0, ip, lsr #32
     170:	0000000c 	andeq	r0, r0, ip
     174:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     178:	7c020001 	stcvc	0, cr0, [r2], {1}
     17c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     180:	0000000c 	andeq	r0, r0, ip
     184:	00000170 	andeq	r0, r0, r0, ror r1
     188:	00000000 	andeq	r0, r0, r0
     18c:	00000008 	andeq	r0, r0, r8
     190:	0000000c 	andeq	r0, r0, ip
     194:	00000170 	andeq	r0, r0, r0, ror r1
     198:	100009c8 	andne	r0, r0, r8, asr #19
     19c:	00000002 	andeq	r0, r0, r2
     1a0:	00000018 	andeq	r0, r0, r8, lsl r0
     1a4:	00000170 	andeq	r0, r0, r0, ror r1
     1a8:	00000000 	andeq	r0, r0, r0
     1ac:	0000000e 	andeq	r0, r0, lr
     1b0:	83080e42 	movwhi	r0, #36418	; 0x8e42
     1b4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     1b8:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     1bc:	0000000c 	andeq	r0, r0, ip
     1c0:	00000170 	andeq	r0, r0, r0, ror r1
     1c4:	100009ca 	andne	r0, r0, sl, asr #19
     1c8:	00000024 	andeq	r0, r0, r4, lsr #32
     1cc:	0000002c 	andeq	r0, r0, ip, lsr #32
     1d0:	00000170 	andeq	r0, r0, r0, ror r1
     1d4:	100009ee 	andne	r0, r0, lr, ror #19
     1d8:	0000007e 	andeq	r0, r0, lr, ror r0
     1dc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     1e0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1e4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1e8:	8a048905 	bhi	122604 <__RAM_SIZE+0x22604>
     1ec:	8e028b03 	vmlahi.f64	d8, d2, d3
     1f0:	300e4101 	andcc	r4, lr, r1, lsl #2
     1f4:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     1f8:	00000b42 	andeq	r0, r0, r2, asr #22
     1fc:	00000028 	andeq	r0, r0, r8, lsr #32
     200:	00000170 	andeq	r0, r0, r0, ror r1
     204:	10000a6c 	andne	r0, r0, ip, ror #20
     208:	00000138 	andeq	r0, r0, r8, lsr r1
     20c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     210:	86068507 	strhi	r8, [r6], -r7, lsl #10
     214:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     218:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     21c:	300e4101 	andcc	r4, lr, r1, lsl #2
     220:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     224:	000b421c 	andeq	r4, fp, ip, lsl r2
     228:	00000020 	andeq	r0, r0, r0, lsr #32
     22c:	00000170 	andeq	r0, r0, r0, ror r1
     230:	10000ba4 	andne	r0, r0, r4, lsr #23
     234:	00000094 	muleq	r0, r4, r0
     238:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     23c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     240:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     244:	580e4101 	stmdapl	lr, {r0, r8, lr}
     248:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     24c:	00000028 	andeq	r0, r0, r8, lsr #32
     250:	00000170 	andeq	r0, r0, r0, ror r1
     254:	10000c38 	andne	r0, r0, r8, lsr ip
     258:	000000c6 	andeq	r0, r0, r6, asr #1
     25c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     260:	86088509 	strhi	r8, [r8], -r9, lsl #10
     264:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     268:	8a048905 	bhi	122684 <__RAM_SIZE+0x22684>
     26c:	8e028b03 	vmlahi.f64	d8, d2, d3
     270:	780e4101 	stmdavc	lr, {r0, r8, lr}
     274:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     278:	0000003c 	andeq	r0, r0, ip, lsr r0
     27c:	00000170 	andeq	r0, r0, r0, ror r1
     280:	10000d00 	andne	r0, r0, r0, lsl #26
     284:	000003ea 	andeq	r0, r0, sl, ror #7
     288:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     28c:	86088509 	strhi	r8, [r8], -r9, lsl #10
     290:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     294:	8a048905 	bhi	1226b0 <__RAM_SIZE+0x226b0>
     298:	8e028b03 	vmlahi.f64	d8, d2, d3
     29c:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2a0:	050b5005 	streq	r5, [fp, #-5]
     2a4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2a8:	01250370 			; <UNDEFINED> instruction: 0x01250370
     2ac:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     2b0:	51065006 	tstpl	r6, r6
     2b4:	0b42240e 	bleq	10892f4 <__RAM_SIZE+0xf892f4>
     2b8:	00000040 	andeq	r0, r0, r0, asr #32
     2bc:	00000170 	andeq	r0, r0, r0, ror r1
     2c0:	100010f0 	strdne	r1, [r0], -r0
     2c4:	00000396 	muleq	r0, r6, r3
     2c8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2cc:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2d0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2d4:	8a048905 	bhi	1226f0 <__RAM_SIZE+0x226f0>
     2d8:	8e028b03 	vmlahi.f64	d8, d2, d3
     2dc:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2e0:	050b5005 	streq	r5, [fp, #-5]
     2e4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2e8:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     2ec:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     2f0:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     2f4:	42240e51 	eormi	r0, r4, #1296	; 0x510
     2f8:	0000000b 	andeq	r0, r0, fp
     2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     300:	00000170 	andeq	r0, r0, r0, ror r1
     304:	10001488 	andne	r1, r0, r8, lsl #9
     308:	00000680 	andeq	r0, r0, r0, lsl #13
     30c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     310:	86088509 	strhi	r8, [r8], -r9, lsl #10
     314:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     318:	8a048905 	bhi	122734 <__RAM_SIZE+0x22734>
     31c:	8e028b03 	vmlahi.f64	d8, d2, d3
     320:	600e4101 	andvs	r4, lr, r1, lsl #2
     324:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     328:	00000024 	andeq	r0, r0, r4, lsr #32
     32c:	00000014 	andeq	r0, r0, r4, lsl r0
     330:	00000170 	andeq	r0, r0, r0, ror r1
     334:	10001b08 	andne	r1, r0, r8, lsl #22
     338:	0000000c 	andeq	r0, r0, ip
     33c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     340:	00018e02 	andeq	r8, r1, r2, lsl #28
     344:	00000030 	andeq	r0, r0, r0, lsr r0
     348:	00000170 	andeq	r0, r0, r0, ror r1
     34c:	10001b14 	andne	r1, r0, r4, lsl fp
     350:	0000002c 	andeq	r0, r0, ip, lsr #32
     354:	80100e41 	andshi	r0, r0, r1, asr #28
     358:	82038104 	andhi	r8, r3, #4, 2
     35c:	41018302 	tstmi	r1, r2, lsl #6
     360:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     364:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     368:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     36c:	c341100e 	movtgt	r1, #4110	; 0x100e
     370:	0ec0c1c2 	acseqdm	f4, f2
     374:	00000000 	andeq	r0, r0, r0
     378:	0000002c 	andeq	r0, r0, ip, lsr #32
     37c:	00000170 	andeq	r0, r0, r0, ror r1
     380:	00000000 	andeq	r0, r0, r0
     384:	0000002c 	andeq	r0, r0, ip, lsr #32
     388:	810c0e41 	tsthi	ip, r1, asr #28
     38c:	83028203 	movwhi	r8, #8707	; 0x2203
     390:	100e4101 	andne	r4, lr, r1, lsl #2
     394:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     398:	100e4c20 	andne	r4, lr, r0, lsr #24
     39c:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     3a0:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     3a4:	0000000e 	andeq	r0, r0, lr
     3a8:	0000002c 	andeq	r0, r0, ip, lsr #32
     3ac:	00000170 	andeq	r0, r0, r0, ror r1
     3b0:	00000000 	andeq	r0, r0, r0
     3b4:	00000028 	andeq	r0, r0, r8, lsr #32
     3b8:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3bc:	41018302 	tstmi	r1, r2, lsl #6
     3c0:	0484100e 	streq	r1, [r4], #14
     3c4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     3c8:	100e4b20 	andne	r4, lr, r0, lsr #22
     3cc:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     3d0:	c2c34108 	sbcgt	r4, r3, #8, 2
     3d4:	0000000e 	andeq	r0, r0, lr
     3d8:	00000018 	andeq	r0, r0, r8, lsl r0
     3dc:	00000170 	andeq	r0, r0, r0, ror r1
     3e0:	00000000 	andeq	r0, r0, r0
     3e4:	00000020 	andeq	r0, r0, r0, lsr #32
     3e8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3ec:	180e4101 	stmdane	lr, {r0, r8, lr}
     3f0:	00040e49 	andeq	r0, r4, r9, asr #28
     3f4:	00000018 	andeq	r0, r0, r8, lsl r0
     3f8:	00000170 	andeq	r0, r0, r0, ror r1
     3fc:	00000000 	andeq	r0, r0, r0
     400:	0000001c 	andeq	r0, r0, ip, lsl r0
     404:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     408:	100e4101 	andne	r4, lr, r1, lsl #2
     40c:	00040e48 	andeq	r0, r4, r8, asr #28
     410:	00000028 	andeq	r0, r0, r8, lsr #32
     414:	00000170 	andeq	r0, r0, r0, ror r1
     418:	00000000 	andeq	r0, r0, r0
     41c:	00000030 	andeq	r0, r0, r0, lsr r0
     420:	82080e41 	andhi	r0, r8, #1040	; 0x410
     424:	41018302 	tstmi	r1, r2, lsl #6
     428:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     42c:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     430:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     434:	c341080e 	movtgt	r0, #6158	; 0x180e
     438:	00000ec2 	andeq	r0, r0, r2, asr #29
     43c:	0000000c 	andeq	r0, r0, ip
     440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     444:	7c020001 	stcvc	0, cr0, [r2], {1}
     448:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     44c:	0000000c 	andeq	r0, r0, ip
     450:	0000043c 	andeq	r0, r0, ip, lsr r4
     454:	10001b40 	andne	r1, r0, r0, asr #22
     458:	00000014 	andeq	r0, r0, r4, lsl r0
     45c:	0000000c 	andeq	r0, r0, ip
     460:	0000043c 	andeq	r0, r0, ip, lsr r4
     464:	00000000 	andeq	r0, r0, r0
     468:	00000014 	andeq	r0, r0, r4, lsl r0
     46c:	00000018 	andeq	r0, r0, r8, lsl r0
     470:	0000043c 	andeq	r0, r0, ip, lsr r4
     474:	10001b54 	andne	r1, r0, r4, asr fp
     478:	0000001e 	andeq	r0, r0, lr, lsl r0
     47c:	83100e41 	tsthi	r0, #1040	; 0x410
     480:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     484:	00018e02 	andeq	r8, r1, r2, lsl #28
     488:	0000000c 	andeq	r0, r0, ip
     48c:	0000043c 	andeq	r0, r0, ip, lsr r4
     490:	10001b74 	andne	r1, r0, r4, ror fp
     494:	00000024 	andeq	r0, r0, r4, lsr #32
     498:	00000014 	andeq	r0, r0, r4, lsl r0
     49c:	0000043c 	andeq	r0, r0, ip, lsr r4
     4a0:	00000000 	andeq	r0, r0, r0
     4a4:	00000008 	andeq	r0, r0, r8
     4a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     4b0:	00000018 	andeq	r0, r0, r8, lsl r0
     4b4:	0000043c 	andeq	r0, r0, ip, lsr r4
     4b8:	00000000 	andeq	r0, r0, r0
     4bc:	00000020 	andeq	r0, r0, r0, lsr #32
     4c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     4c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4cc:	0000000c 	andeq	r0, r0, ip
     4d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4d4:	7c020001 	stcvc	0, cr0, [r2], {1}
     4d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4dc:	00000014 	andeq	r0, r0, r4, lsl r0
     4e0:	000004cc 	andeq	r0, r0, ip, asr #9
     4e4:	10001b98 	mulne	r0, r8, fp
     4e8:	0000002c 	andeq	r0, r0, ip, lsr #32
     4ec:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     4f0:	0000000e 	andeq	r0, r0, lr
     4f4:	0000000c 	andeq	r0, r0, ip
     4f8:	000004cc 	andeq	r0, r0, ip, asr #9
     4fc:	10001bc4 	andne	r1, r0, r4, asr #23
     500:	00000036 	andeq	r0, r0, r6, lsr r0
     504:	00000020 	andeq	r0, r0, r0, lsr #32
     508:	000004cc 	andeq	r0, r0, ip, asr #9
     50c:	10001bfc 	strdne	r1, [r0], -ip
     510:	0000007c 	andeq	r0, r0, ip, ror r0
     514:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     518:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     51c:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     520:	89038804 	stmdbhi	r3, {r2, fp, pc}
     524:	00018e02 	andeq	r8, r1, r2, lsl #28
     528:	00000014 	andeq	r0, r0, r4, lsl r0
     52c:	000004cc 	andeq	r0, r0, ip, asr #9
     530:	10001c78 	andne	r1, r0, r8, ror ip
     534:	00000018 	andeq	r0, r0, r8, lsl r0
     538:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     53c:	00018e02 	andeq	r8, r1, r2, lsl #28
     540:	00000014 	andeq	r0, r0, r4, lsl r0
     544:	000004cc 	andeq	r0, r0, ip, asr #9
     548:	10001c90 	mulne	r0, r0, ip
     54c:	00000008 	andeq	r0, r0, r8
     550:	83080e41 	movwhi	r0, #36417	; 0x8e41
     554:	00018e02 	andeq	r8, r1, r2, lsl #28
     558:	00000014 	andeq	r0, r0, r4, lsl r0
     55c:	000004cc 	andeq	r0, r0, ip, asr #9
     560:	10001c98 	mulne	r0, r8, ip
     564:	00000050 	andeq	r0, r0, r0, asr r0
     568:	83080e41 	movwhi	r0, #36417	; 0x8e41
     56c:	00018e02 	andeq	r8, r1, r2, lsl #28
     570:	0000001c 	andeq	r0, r0, ip, lsl r0
     574:	000004cc 	andeq	r0, r0, ip, asr #9
     578:	10001ce8 	andne	r1, r0, r8, ror #25
     57c:	000001ac 	andeq	r0, r0, ip, lsr #3
     580:	83180e41 	tsthi	r8, #1040	; 0x410
     584:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     588:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000000c 	andeq	r0, r0, ip
     594:	000004cc 	andeq	r0, r0, ip, asr #9
     598:	10001e94 	mulne	r0, r4, lr
     59c:	00000006 	andeq	r0, r0, r6
     5a0:	0000000c 	andeq	r0, r0, ip
     5a4:	000004cc 	andeq	r0, r0, ip, asr #9
     5a8:	10001e9c 	mulne	r0, ip, lr
     5ac:	00000008 	andeq	r0, r0, r8
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	000004cc 	andeq	r0, r0, ip, asr #9
     5b8:	00000000 	andeq	r0, r0, r0
     5bc:	00000008 	andeq	r0, r0, r8
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	000004cc 	andeq	r0, r0, ip, asr #9
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	00000008 	andeq	r0, r0, r8
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	000004cc 	andeq	r0, r0, ip, asr #9
     5d8:	10001ea4 	andne	r1, r0, r4, lsr #29
     5dc:	00000014 	andeq	r0, r0, r4, lsl r0
     5e0:	0000000c 	andeq	r0, r0, ip
     5e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5f0:	00000014 	andeq	r0, r0, r4, lsl r0
     5f4:	000005e0 	andeq	r0, r0, r0, ror #11
     5f8:	10001eb8 			; <UNDEFINED> instruction: 0x10001eb8
     5fc:	000000fc 	strdeq	r0, [r0], -ip
     600:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     604:	00018e02 	andeq	r8, r1, r2, lsl #28
     608:	0000000c 	andeq	r0, r0, ip
     60c:	000005e0 	andeq	r0, r0, r0, ror #11
     610:	10001fb4 			; <UNDEFINED> instruction: 0x10001fb4
     614:	0000000e 	andeq	r0, r0, lr
     618:	00000014 	andeq	r0, r0, r4, lsl r0
     61c:	000005e0 	andeq	r0, r0, r0, ror #11
     620:	00000000 	andeq	r0, r0, r0
     624:	00000020 	andeq	r0, r0, r0, lsr #32
     628:	83080e41 	movwhi	r0, #36417	; 0x8e41
     62c:	00018e02 	andeq	r8, r1, r2, lsl #28
     630:	0000001c 	andeq	r0, r0, ip, lsl r0
     634:	000005e0 	andeq	r0, r0, r0, ror #11
     638:	10001fc4 	andne	r1, r0, r4, asr #31
     63c:	0000004c 	andeq	r0, r0, ip, asr #32
     640:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     644:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     648:	180e4101 	stmdane	lr, {r0, r8, lr}
     64c:	000c0e5f 	andeq	r0, ip, pc, asr lr
     650:	0000000c 	andeq	r0, r0, ip
     654:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     658:	7c020001 	stcvc	0, cr0, [r2], {1}
     65c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     660:	00000018 	andeq	r0, r0, r8, lsl r0
     664:	00000650 	andeq	r0, r0, r0, asr r6
     668:	00000000 	andeq	r0, r0, r0
     66c:	00000062 	andeq	r0, r0, r2, rrx
     670:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     674:	86038504 	strhi	r8, [r3], -r4, lsl #10
     678:	00018e02 	andeq	r8, r1, r2, lsl #28
     67c:	00000020 	andeq	r0, r0, r0, lsr #32
     680:	00000650 	andeq	r0, r0, r0, asr r6
     684:	10002010 	andne	r2, r0, r0, lsl r0
     688:	00000074 	andeq	r0, r0, r4, ror r0
     68c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     690:	86038504 	strhi	r8, [r3], -r4, lsl #10
     694:	41018e02 	tstmi	r1, r2, lsl #28
     698:	0a69400e 	beq	1a506d8 <__RAM_SIZE+0x19506d8>
     69c:	0b41100e 	bleq	10446dc <__RAM_SIZE+0xf446dc>
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6a8:	7c020001 	stcvc	0, cr0, [r2], {1}
     6ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6b0:	0000000c 	andeq	r0, r0, ip
     6b4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6b8:	10002084 	andne	r2, r0, r4, lsl #1
     6bc:	0000001a 	andeq	r0, r0, sl, lsl r0
     6c0:	0000000c 	andeq	r0, r0, ip
     6c4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6c8:	1000209e 	mulne	r0, lr, r0
     6cc:	00000006 	andeq	r0, r0, r6
     6d0:	0000000c 	andeq	r0, r0, ip
     6d4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6d8:	00000000 	andeq	r0, r0, r0
     6dc:	00000016 	andeq	r0, r0, r6, lsl r0
     6e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     6e4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6e8:	100020a4 	andne	r2, r0, r4, lsr #1
     6ec:	00000032 	andeq	r0, r0, r2, lsr r0
     6f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6f4:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
     6f8:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     6fc:	000b4100 	andeq	r4, fp, r0, lsl #2
     700:	0000000c 	andeq	r0, r0, ip
     704:	000006a0 	andeq	r0, r0, r0, lsr #13
     708:	100020d6 	ldrdne	r2, [r0], -r6
     70c:	00000024 	andeq	r0, r0, r4, lsr #32
     710:	0000000c 	andeq	r0, r0, ip
     714:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     718:	7c020001 	stcvc	0, cr0, [r2], {1}
     71c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     720:	0000000c 	andeq	r0, r0, ip
     724:	00000710 	andeq	r0, r0, r0, lsl r7
     728:	00000000 	andeq	r0, r0, r0
     72c:	00000010 	andeq	r0, r0, r0, lsl r0
     730:	00000014 	andeq	r0, r0, r4, lsl r0
     734:	00000710 	andeq	r0, r0, r0, lsl r7
     738:	00000000 	andeq	r0, r0, r0
     73c:	0000001e 	andeq	r0, r0, lr, lsl r0
     740:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     744:	00018e02 	andeq	r8, r1, r2, lsl #28
     748:	00000014 	andeq	r0, r0, r4, lsl r0
     74c:	00000710 	andeq	r0, r0, r0, lsl r7
     750:	100020fa 	strdne	r2, [r0], -sl
     754:	0000001a 	andeq	r0, r0, sl, lsl r0
     758:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     75c:	00018e02 	andeq	r8, r1, r2, lsl #28
     760:	00000018 	andeq	r0, r0, r8, lsl r0
     764:	00000710 	andeq	r0, r0, r0, lsl r7
     768:	10002114 	andne	r2, r0, r4, lsl r1
     76c:	00000076 	andeq	r0, r0, r6, ror r0
     770:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     774:	86038504 	strhi	r8, [r3], -r4, lsl #10
     778:	00018e02 	andeq	r8, r1, r2, lsl #28
     77c:	00000018 	andeq	r0, r0, r8, lsl r0
     780:	00000710 	andeq	r0, r0, r0, lsl r7
     784:	1000218a 	andne	r2, r0, sl, lsl #3
     788:	00000024 	andeq	r0, r0, r4, lsr #32
     78c:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     790:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     794:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     798:	00000020 	andeq	r0, r0, r0, lsr #32
     79c:	00000710 	andeq	r0, r0, r0, lsl r7
     7a0:	100021ae 	andne	r2, r0, lr, lsr #3
     7a4:	00000058 	andeq	r0, r0, r8, asr r0
     7a8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     7ac:	86038504 	strhi	r8, [r3], -r4, lsl #10
     7b0:	41018e02 	tstmi	r1, r2, lsl #28
     7b4:	0a49180e 	beq	12467f4 <__RAM_SIZE+0x11467f4>
     7b8:	0b41100e 	bleq	10447f8 <__RAM_SIZE+0xf447f8>
     7bc:	00000018 	andeq	r0, r0, r8, lsl r0
     7c0:	00000710 	andeq	r0, r0, r0, lsl r7
     7c4:	10002206 	andne	r2, r0, r6, lsl #4
     7c8:	00000082 	andeq	r0, r0, r2, lsl #1
     7cc:	83100e41 	tsthi	r0, #1040	; 0x410
     7d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     7d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d8:	0000002c 	andeq	r0, r0, ip, lsr #32
     7dc:	00000710 	andeq	r0, r0, r0, lsl r7
     7e0:	10002288 	andne	r2, r0, r8, lsl #5
     7e4:	00000086 	andeq	r0, r0, r6, lsl #1
     7e8:	83100e43 	tsthi	r0, #1072	; 0x430
     7ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     7f0:	7c018e02 	stcvc	14, cr8, [r1], {2}
     7f4:	c4c3000e 	strbgt	r0, [r3], #14
     7f8:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
     7fc:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
     800:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     804:	00000001 	andeq	r0, r0, r1
     808:	00000018 	andeq	r0, r0, r8, lsl r0
     80c:	00000710 	andeq	r0, r0, r0, lsl r7
     810:	1000230e 	andne	r2, r0, lr, lsl #6
     814:	00000026 	andeq	r0, r0, r6, lsr #32
     818:	83100e41 	tsthi	r0, #1040	; 0x410
     81c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     820:	00018e02 	andeq	r8, r1, r2, lsl #28
     824:	00000028 	andeq	r0, r0, r8, lsr #32
     828:	00000710 	andeq	r0, r0, r0, lsl r7
     82c:	10002334 	andne	r2, r0, r4, lsr r3
     830:	0000003e 	andeq	r0, r0, lr, lsr r0
     834:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     838:	41018e02 	tstmi	r1, r2, lsl #28
     83c:	0a51100e 	beq	144487c <__RAM_SIZE+0x134487c>
     840:	0b41080e 	bleq	1042880 <__RAM_SIZE+0xf42880>
     844:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
     848:	100e42ce 	andne	r4, lr, lr, asr #5
     84c:	018e0284 	orreq	r0, lr, r4, lsl #5
     850:	0000000c 	andeq	r0, r0, ip
     854:	00000710 	andeq	r0, r0, r0, lsl r7
     858:	00000000 	andeq	r0, r0, r0
     85c:	00000018 	andeq	r0, r0, r8, lsl r0
     860:	00000024 	andeq	r0, r0, r4, lsr #32
     864:	00000710 	andeq	r0, r0, r0, lsl r7
     868:	00000000 	andeq	r0, r0, r0
     86c:	00000056 	andeq	r0, r0, r6, asr r0
     870:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     874:	86048505 	strhi	r8, [r4], -r5, lsl #10
     878:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     87c:	200e4101 	andcs	r4, lr, r1, lsl #2
     880:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
     884:	00000b41 	andeq	r0, r0, r1, asr #22
     888:	00000028 	andeq	r0, r0, r8, lsr #32
     88c:	00000710 	andeq	r0, r0, r0, lsl r7
     890:	00000000 	andeq	r0, r0, r0
     894:	0000002a 	andeq	r0, r0, sl, lsr #32
     898:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     89c:	41018e02 	tstmi	r1, r2, lsl #28
     8a0:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
     8a4:	42cec400 	sbcmi	ip, lr, #0, 8
     8a8:	0284100e 	addeq	r1, r4, #14
     8ac:	0e42018e 	dvfeqd	f0, f2, #0.5
     8b0:	00000008 	andeq	r0, r0, r8
     8b4:	00000020 	andeq	r0, r0, r0, lsr #32
     8b8:	00000710 	andeq	r0, r0, r0, lsl r7
     8bc:	00000000 	andeq	r0, r0, r0
     8c0:	00000020 	andeq	r0, r0, r0, lsr #32
     8c4:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     8c8:	4a018e02 	bmi	640d8 <__HEAP_SIZE+0x630d8>
     8cc:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     8d0:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     8d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8d8:	00000024 	andeq	r0, r0, r4, lsr #32
     8dc:	00000710 	andeq	r0, r0, r0, lsl r7
     8e0:	00000000 	andeq	r0, r0, r0
     8e4:	0000010c 	andeq	r0, r0, ip, lsl #2
     8e8:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     8ec:	86048505 	strhi	r8, [r4], -r5, lsl #10
     8f0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     8f4:	280e4101 	stmdacs	lr, {r0, r8, lr}
     8f8:	140e0a59 	strne	r0, [lr], #-2649	; 0xfffff5a7
     8fc:	00000b41 	andeq	r0, r0, r1, asr #22
     900:	00000018 	andeq	r0, r0, r8, lsl r0
     904:	00000710 	andeq	r0, r0, r0, lsl r7
     908:	00000000 	andeq	r0, r0, r0
     90c:	00000018 	andeq	r0, r0, r8, lsl r0
     910:	83080e42 	movwhi	r0, #36418	; 0x8e42
     914:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
     918:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     91c:	00000014 	andeq	r0, r0, r4, lsl r0
     920:	00000710 	andeq	r0, r0, r0, lsl r7
     924:	00000000 	andeq	r0, r0, r0
     928:	00000016 	andeq	r0, r0, r6, lsl r0
     92c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     930:	00018e02 	andeq	r8, r1, r2, lsl #28
     934:	0000001c 	andeq	r0, r0, ip, lsl r0
     938:	00000710 	andeq	r0, r0, r0, lsl r7
     93c:	00000000 	andeq	r0, r0, r0
     940:	0000001e 	andeq	r0, r0, lr, lsl r0
     944:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     948:	41018e02 	tstmi	r1, r2, lsl #28
     94c:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
     950:	00000008 	andeq	r0, r0, r8
     954:	00000018 	andeq	r0, r0, r8, lsl r0
     958:	00000710 	andeq	r0, r0, r0, lsl r7
     95c:	00000000 	andeq	r0, r0, r0
     960:	0000002c 	andeq	r0, r0, ip, lsr #32
     964:	83100e41 	tsthi	r0, #1040	; 0x410
     968:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     96c:	00018e02 	andeq	r8, r1, r2, lsl #28
     970:	00000020 	andeq	r0, r0, r0, lsr #32
     974:	00000710 	andeq	r0, r0, r0, lsl r7
     978:	00000000 	andeq	r0, r0, r0
     97c:	000000bc 	strheq	r0, [r0], -ip
     980:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     984:	86078508 	strhi	r8, [r7], -r8, lsl #10
     988:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     98c:	8a038904 	bhi	e2da4 <__HEAP_SIZE+0xe1da4>
     990:	00018e02 	andeq	r8, r1, r2, lsl #28
     994:	0000001c 	andeq	r0, r0, ip, lsl r0
     998:	00000710 	andeq	r0, r0, r0, lsl r7
     99c:	00000000 	andeq	r0, r0, r0
     9a0:	00000086 	andeq	r0, r0, r6, lsl #1
     9a4:	83180e41 	tsthi	r8, #1040	; 0x410
     9a8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     9ac:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     9b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b4:	00000024 	andeq	r0, r0, r4, lsr #32
     9b8:	00000710 	andeq	r0, r0, r0, lsl r7
     9bc:	10002372 	andne	r2, r0, r2, ror r3
     9c0:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9c4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     9c8:	86048505 	strhi	r8, [r4], -r5, lsl #10
     9cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     9d0:	280e4101 	stmdacs	lr, {r0, r8, lr}
     9d4:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
     9d8:	00000b41 	andeq	r0, r0, r1, asr #22
     9dc:	00000020 	andeq	r0, r0, r0, lsr #32
     9e0:	00000710 	andeq	r0, r0, r0, lsl r7
     9e4:	00000000 	andeq	r0, r0, r0
     9e8:	00000126 	andeq	r0, r0, r6, lsr #2
     9ec:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     9f0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9f4:	41018e02 	tstmi	r1, r2, lsl #28
     9f8:	0a4f200e 	beq	13c8a38 <__RAM_SIZE+0x12c8a38>
     9fc:	0b41100e 	bleq	1044a3c <__RAM_SIZE+0xf44a3c>
     a00:	00000018 	andeq	r0, r0, r8, lsl r0
     a04:	00000710 	andeq	r0, r0, r0, lsl r7
     a08:	00000000 	andeq	r0, r0, r0
     a0c:	0000002c 	andeq	r0, r0, ip, lsr #32
     a10:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a14:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a18:	00018e02 	andeq	r8, r1, r2, lsl #28
     a1c:	00000020 	andeq	r0, r0, r0, lsr #32
     a20:	00000710 	andeq	r0, r0, r0, lsl r7
     a24:	00000000 	andeq	r0, r0, r0
     a28:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a2c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a30:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a34:	41018e02 	tstmi	r1, r2, lsl #28
     a38:	0a51200e 	beq	1448a78 <__RAM_SIZE+0x1348a78>
     a3c:	0b41100e 	bleq	1044a7c <__RAM_SIZE+0xf44a7c>
     a40:	00000020 	andeq	r0, r0, r0, lsr #32
     a44:	00000710 	andeq	r0, r0, r0, lsl r7
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00000080 	andeq	r0, r0, r0, lsl #1
     a50:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     a54:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     a58:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     a5c:	89038804 	stmdbhi	r3, {r2, fp, pc}
     a60:	00018e02 	andeq	r8, r1, r2, lsl #28
     a64:	0000001c 	andeq	r0, r0, ip, lsl r0
     a68:	00000710 	andeq	r0, r0, r0, lsl r7
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	0000002c 	andeq	r0, r0, ip, lsr #32
     a74:	83180e41 	tsthi	r8, #1040	; 0x410
     a78:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     a7c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     a80:	00018e02 	andeq	r8, r1, r2, lsl #28
     a84:	00000014 	andeq	r0, r0, r4, lsl r0
     a88:	00000710 	andeq	r0, r0, r0, lsl r7
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	00000012 	andeq	r0, r0, r2, lsl r0
     a94:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a98:	00018e02 	andeq	r8, r1, r2, lsl #28
     a9c:	00000014 	andeq	r0, r0, r4, lsl r0
     aa0:	00000710 	andeq	r0, r0, r0, lsl r7
     aa4:	00000000 	andeq	r0, r0, r0
     aa8:	00000016 	andeq	r0, r0, r6, lsl r0
     aac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ab0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ab4:	0000000c 	andeq	r0, r0, ip
     ab8:	00000710 	andeq	r0, r0, r0, lsl r7
     abc:	00000000 	andeq	r0, r0, r0
     ac0:	00000004 	andeq	r0, r0, r4
     ac4:	00000014 	andeq	r0, r0, r4, lsl r0
     ac8:	00000710 	andeq	r0, r0, r0, lsl r7
     acc:	00000000 	andeq	r0, r0, r0
     ad0:	00000010 	andeq	r0, r0, r0, lsl r0
     ad4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ad8:	00018e02 	andeq	r8, r1, r2, lsl #28
     adc:	0000000c 	andeq	r0, r0, ip
     ae0:	00000710 	andeq	r0, r0, r0, lsl r7
     ae4:	00000000 	andeq	r0, r0, r0
     ae8:	00000004 	andeq	r0, r0, r4
     aec:	0000000c 	andeq	r0, r0, ip
     af0:	00000710 	andeq	r0, r0, r0, lsl r7
     af4:	00000000 	andeq	r0, r0, r0
     af8:	00000004 	andeq	r0, r0, r4
     afc:	0000000c 	andeq	r0, r0, ip
     b00:	00000710 	andeq	r0, r0, r0, lsl r7
     b04:	00000000 	andeq	r0, r0, r0
     b08:	00000006 	andeq	r0, r0, r6
     b0c:	0000000c 	andeq	r0, r0, ip
     b10:	00000710 	andeq	r0, r0, r0, lsl r7
     b14:	00000000 	andeq	r0, r0, r0
     b18:	00000004 	andeq	r0, r0, r4
     b1c:	0000000c 	andeq	r0, r0, ip
     b20:	00000710 	andeq	r0, r0, r0, lsl r7
     b24:	00000000 	andeq	r0, r0, r0
     b28:	00000004 	andeq	r0, r0, r4
     b2c:	0000000c 	andeq	r0, r0, ip
     b30:	00000710 	andeq	r0, r0, r0, lsl r7
     b34:	00000000 	andeq	r0, r0, r0
     b38:	0000000c 	andeq	r0, r0, ip
     b3c:	0000000c 	andeq	r0, r0, ip
     b40:	00000710 	andeq	r0, r0, r0, lsl r7
     b44:	00000000 	andeq	r0, r0, r0
     b48:	00000010 	andeq	r0, r0, r0, lsl r0
     b4c:	00000018 	andeq	r0, r0, r8, lsl r0
     b50:	00000710 	andeq	r0, r0, r0, lsl r7
     b54:	10002462 	andne	r2, r0, r2, ror #8
     b58:	00000052 	andeq	r0, r0, r2, asr r0
     b5c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     b60:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b64:	00018e02 	andeq	r8, r1, r2, lsl #28
     b68:	00000014 	andeq	r0, r0, r4, lsl r0
     b6c:	00000710 	andeq	r0, r0, r0, lsl r7
     b70:	00000000 	andeq	r0, r0, r0
     b74:	0000000c 	andeq	r0, r0, ip
     b78:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b80:	00000018 	andeq	r0, r0, r8, lsl r0
     b84:	00000710 	andeq	r0, r0, r0, lsl r7
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	00000026 	andeq	r0, r0, r6, lsr #32
     b90:	83100e41 	tsthi	r0, #1040	; 0x410
     b94:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b98:	00018e02 	andeq	r8, r1, r2, lsl #28
     b9c:	00000014 	andeq	r0, r0, r4, lsl r0
     ba0:	00000710 	andeq	r0, r0, r0, lsl r7
     ba4:	00000000 	andeq	r0, r0, r0
     ba8:	00000026 	andeq	r0, r0, r6, lsr #32
     bac:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     bb0:	00018e02 	andeq	r8, r1, r2, lsl #28
     bb4:	00000018 	andeq	r0, r0, r8, lsl r0
     bb8:	00000710 	andeq	r0, r0, r0, lsl r7
     bbc:	00000000 	andeq	r0, r0, r0
     bc0:	00000018 	andeq	r0, r0, r8, lsl r0
     bc4:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     bc8:	100e4101 	andne	r4, lr, r1, lsl #2
     bcc:	00040e48 	andeq	r0, r4, r8, asr #28
     bd0:	00000018 	andeq	r0, r0, r8, lsl r0
     bd4:	00000710 	andeq	r0, r0, r0, lsl r7
     bd8:	00000000 	andeq	r0, r0, r0
     bdc:	00000016 	andeq	r0, r0, r6, lsl r0
     be0:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     be4:	100e4101 	andne	r4, lr, r1, lsl #2
     be8:	00040e47 	andeq	r0, r4, r7, asr #28
     bec:	0000000c 	andeq	r0, r0, ip
     bf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     bf4:	7c020001 	stcvc	0, cr0, [r2], {1}
     bf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     bfc:	0000000c 	andeq	r0, r0, ip
     c00:	00000bec 	andeq	r0, r0, ip, ror #23
     c04:	00000000 	andeq	r0, r0, r0
     c08:	00000044 	andeq	r0, r0, r4, asr #32
     c0c:	0000000c 	andeq	r0, r0, ip
     c10:	00000bec 	andeq	r0, r0, ip, ror #23
     c14:	100024b4 			; <UNDEFINED> instruction: 0x100024b4
     c18:	00000040 	andeq	r0, r0, r0, asr #32
     c1c:	00000018 	andeq	r0, r0, r8, lsl r0
     c20:	00000bec 	andeq	r0, r0, ip, ror #23
     c24:	00000000 	andeq	r0, r0, r0
     c28:	0000003e 	andeq	r0, r0, lr, lsr r0
     c2c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     c30:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     c34:	00000001 	andeq	r0, r0, r1
     c38:	0000000c 	andeq	r0, r0, ip
     c3c:	00000bec 	andeq	r0, r0, ip, ror #23
     c40:	100024f4 	strdne	r2, [r0], -r4
     c44:	00000012 	andeq	r0, r0, r2, lsl r0
     c48:	0000000c 	andeq	r0, r0, ip
     c4c:	00000bec 	andeq	r0, r0, ip, ror #23
     c50:	10002508 	andne	r2, r0, r8, lsl #10
     c54:	00000028 	andeq	r0, r0, r8, lsr #32
     c58:	00000020 	andeq	r0, r0, r0, lsr #32
     c5c:	00000bec 	andeq	r0, r0, ip, ror #23
     c60:	10002530 	andne	r2, r0, r0, lsr r5
     c64:	00000098 	muleq	r0, r8, r0
     c68:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     c6c:	86078508 	strhi	r8, [r7], -r8, lsl #10
     c70:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     c74:	8a038904 	bhi	e308c <__HEAP_SIZE+0xe208c>
     c78:	00018e02 	andeq	r8, r1, r2, lsl #28
     c7c:	00000028 	andeq	r0, r0, r8, lsr #32
     c80:	00000bec 	andeq	r0, r0, ip, ror #23
     c84:	100025c8 	andne	r2, r0, r8, asr #11
     c88:	00000052 	andeq	r0, r0, r2, asr r0
     c8c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c90:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c94:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c98:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c9c:	300e4101 	andcc	r4, lr, r1, lsl #2
     ca0:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
     ca4:	00000b42 	andeq	r0, r0, r2, asr #22
     ca8:	00000018 	andeq	r0, r0, r8, lsl r0
     cac:	00000bec 	andeq	r0, r0, ip, ror #23
     cb0:	1000261c 	andne	r2, r0, ip, lsl r6
     cb4:	00000068 	andeq	r0, r0, r8, rrx
     cb8:	83100e41 	tsthi	r0, #1040	; 0x410
     cbc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     cc0:	00018e02 	andeq	r8, r1, r2, lsl #28
     cc4:	00000014 	andeq	r0, r0, r4, lsl r0
     cc8:	00000bec 	andeq	r0, r0, ip, ror #23
     ccc:	10002684 	andne	r2, r0, r4, lsl #13
     cd0:	000000c0 	andeq	r0, r0, r0, asr #1
     cd4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cd8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cdc:	00000028 	andeq	r0, r0, r8, lsr #32
     ce0:	00000bec 	andeq	r0, r0, ip, ror #23
     ce4:	10002744 	andne	r2, r0, r4, asr #14
     ce8:	00000062 	andeq	r0, r0, r2, rrx
     cec:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     cf0:	86068507 	strhi	r8, [r6], -r7, lsl #10
     cf4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     cf8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     cfc:	300e4101 	andcc	r4, lr, r1, lsl #2
     d00:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
     d04:	00000b42 	andeq	r0, r0, r2, asr #22
     d08:	00000014 	andeq	r0, r0, r4, lsl r0
     d0c:	00000bec 	andeq	r0, r0, ip, ror #23
     d10:	100027a6 	andne	r2, r0, r6, lsr #15
     d14:	00000024 	andeq	r0, r0, r4, lsr #32
     d18:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d20:	00000018 	andeq	r0, r0, r8, lsl r0
     d24:	00000bec 	andeq	r0, r0, ip, ror #23
     d28:	100027cc 	andne	r2, r0, ip, asr #15
     d2c:	0000004c 	andeq	r0, r0, ip, asr #32
     d30:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     d34:	5a018e02 	bpl	64544 <__HEAP_SIZE+0x63544>
     d38:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     d3c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d40:	00000bec 	andeq	r0, r0, ip, ror #23
     d44:	10002818 	andne	r2, r0, r8, lsl r8
     d48:	000000a8 	andeq	r0, r0, r8, lsr #1
     d4c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     d50:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d54:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d58:	00018e02 	andeq	r8, r1, r2, lsl #28
     d5c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d60:	00000bec 	andeq	r0, r0, ip, ror #23
     d64:	100028c0 	andne	r2, r0, r0, asr #17
     d68:	00000028 	andeq	r0, r0, r8, lsr #32
     d6c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d70:	41018e02 	tstmi	r1, r2, lsl #28
     d74:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
     d78:	00000008 	andeq	r0, r0, r8
     d7c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d80:	00000bec 	andeq	r0, r0, ip, ror #23
     d84:	100028e8 	andne	r2, r0, r8, ror #17
     d88:	00000022 	andeq	r0, r0, r2, lsr #32
     d8c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d90:	41018e02 	tstmi	r1, r2, lsl #28
     d94:	0a4b100e 	beq	12c4dd4 <__RAM_SIZE+0x11c4dd4>
     d98:	0b41080e 	bleq	1042dd8 <__RAM_SIZE+0xf42dd8>
     d9c:	00000018 	andeq	r0, r0, r8, lsl r0
     da0:	00000bec 	andeq	r0, r0, ip, ror #23
     da4:	00000000 	andeq	r0, r0, r0
     da8:	0000009c 	muleq	r0, ip, r0
     dac:	83100e41 	tsthi	r0, #1040	; 0x410
     db0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     db4:	00018e02 	andeq	r8, r1, r2, lsl #28
     db8:	00000034 	andeq	r0, r0, r4, lsr r0
     dbc:	00000bec 	andeq	r0, r0, ip, ror #23
     dc0:	1000290c 	andne	r2, r0, ip, lsl #18
     dc4:	0000009c 	muleq	r0, ip, r0
     dc8:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
     dcc:	86058506 	strhi	r8, [r5], -r6, lsl #10
     dd0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dd4:	6f018e02 	svcvs	0x00018e02
     dd8:	c5c4000e 	strbgt	r0, [r4, #14]
     ddc:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
     de0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     de4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     de8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dec:	00018e02 	andeq	r8, r1, r2, lsl #28
     df0:	00000014 	andeq	r0, r0, r4, lsl r0
     df4:	00000bec 	andeq	r0, r0, ip, ror #23
     df8:	00000000 	andeq	r0, r0, r0
     dfc:	00000020 	andeq	r0, r0, r0, lsr #32
     e00:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e04:	00018e02 	andeq	r8, r1, r2, lsl #28
     e08:	00000014 	andeq	r0, r0, r4, lsl r0
     e0c:	00000bec 	andeq	r0, r0, ip, ror #23
     e10:	00000000 	andeq	r0, r0, r0
     e14:	00000020 	andeq	r0, r0, r0, lsr #32
     e18:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e20:	00000014 	andeq	r0, r0, r4, lsl r0
     e24:	00000bec 	andeq	r0, r0, ip, ror #23
     e28:	00000000 	andeq	r0, r0, r0
     e2c:	00000020 	andeq	r0, r0, r0, lsr #32
     e30:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e34:	00018e02 	andeq	r8, r1, r2, lsl #28
     e38:	00000014 	andeq	r0, r0, r4, lsl r0
     e3c:	00000bec 	andeq	r0, r0, ip, ror #23
     e40:	00000000 	andeq	r0, r0, r0
     e44:	00000020 	andeq	r0, r0, r0, lsr #32
     e48:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e4c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e50:	00000018 	andeq	r0, r0, r8, lsl r0
     e54:	00000bec 	andeq	r0, r0, ip, ror #23
     e58:	00000000 	andeq	r0, r0, r0
     e5c:	000000d8 	ldrdeq	r0, [r0], -r8
     e60:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     e64:	86038504 	strhi	r8, [r3], -r4, lsl #10
     e68:	00018e02 	andeq	r8, r1, r2, lsl #28
     e6c:	00000018 	andeq	r0, r0, r8, lsl r0
     e70:	00000bec 	andeq	r0, r0, ip, ror #23
     e74:	00000000 	andeq	r0, r0, r0
     e78:	00000084 	andeq	r0, r0, r4, lsl #1
     e7c:	83100e41 	tsthi	r0, #1040	; 0x410
     e80:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     e84:	00018e02 	andeq	r8, r1, r2, lsl #28
     e88:	0000001c 	andeq	r0, r0, ip, lsl r0
     e8c:	00000bec 	andeq	r0, r0, ip, ror #23
     e90:	00000000 	andeq	r0, r0, r0
     e94:	000000ac 	andeq	r0, r0, ip, lsr #1
     e98:	83180e41 	tsthi	r8, #1040	; 0x410
     e9c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     ea0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     ea4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ea8:	00000014 	andeq	r0, r0, r4, lsl r0
     eac:	00000bec 	andeq	r0, r0, ip, ror #23
     eb0:	00000000 	andeq	r0, r0, r0
     eb4:	0000003c 	andeq	r0, r0, ip, lsr r0
     eb8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ebc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ec0:	0000000c 	andeq	r0, r0, ip
     ec4:	00000bec 	andeq	r0, r0, ip, ror #23
     ec8:	100029a8 	andne	r2, r0, r8, lsr #19
     ecc:	00000010 	andeq	r0, r0, r0, lsl r0
     ed0:	0000000c 	andeq	r0, r0, ip
     ed4:	00000bec 	andeq	r0, r0, ip, ror #23
     ed8:	100029b8 			; <UNDEFINED> instruction: 0x100029b8
     edc:	0000000c 	andeq	r0, r0, ip
     ee0:	0000000c 	andeq	r0, r0, ip
     ee4:	00000bec 	andeq	r0, r0, ip, ror #23
     ee8:	00000000 	andeq	r0, r0, r0
     eec:	0000000c 	andeq	r0, r0, ip
     ef0:	0000000c 	andeq	r0, r0, ip
     ef4:	00000bec 	andeq	r0, r0, ip, ror #23
     ef8:	100029c4 	andne	r2, r0, r4, asr #19
     efc:	0000000c 	andeq	r0, r0, ip
     f00:	0000000c 	andeq	r0, r0, ip
     f04:	00000bec 	andeq	r0, r0, ip, ror #23
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	00000014 	andeq	r0, r0, r4, lsl r0
     f10:	0000000c 	andeq	r0, r0, ip
     f14:	00000bec 	andeq	r0, r0, ip, ror #23
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	00000034 	andeq	r0, r0, r4, lsr r0
     f20:	0000000c 	andeq	r0, r0, ip
     f24:	00000bec 	andeq	r0, r0, ip, ror #23
     f28:	00000000 	andeq	r0, r0, r0
     f2c:	0000000c 	andeq	r0, r0, ip
     f30:	0000000c 	andeq	r0, r0, ip
     f34:	00000bec 	andeq	r0, r0, ip, ror #23
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	0000000c 	andeq	r0, r0, ip
     f40:	00000014 	andeq	r0, r0, r4, lsl r0
     f44:	00000bec 	andeq	r0, r0, ip, ror #23
     f48:	100029d0 	ldrdne	r2, [r0], -r0
     f4c:	0000003c 	andeq	r0, r0, ip, lsr r0
     f50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f54:	00018e02 	andeq	r8, r1, r2, lsl #28
     f58:	0000002c 	andeq	r0, r0, ip, lsr #32
     f5c:	00000bec 	andeq	r0, r0, ip, ror #23
     f60:	10002a0c 	andne	r2, r0, ip, lsl #20
     f64:	00000160 	andeq	r0, r0, r0, ror #2
     f68:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     f6c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f70:	02018e02 	andeq	r8, r1, #2, 28
     f74:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
     f78:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
     f7c:	0484100e 	streq	r1, [r4], #14
     f80:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     f84:	0000018e 	andeq	r0, r0, lr, lsl #3
     f88:	00000014 	andeq	r0, r0, r4, lsl r0
     f8c:	00000bec 	andeq	r0, r0, ip, ror #23
     f90:	10002b6c 	andne	r2, r0, ip, ror #22
     f94:	00000130 	andeq	r0, r0, r0, lsr r1
     f98:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     fa0:	00000018 	andeq	r0, r0, r8, lsl r0
     fa4:	00000bec 	andeq	r0, r0, ip, ror #23
     fa8:	00000000 	andeq	r0, r0, r0
     fac:	0000005c 	andeq	r0, r0, ip, asr r0
     fb0:	83100e41 	tsthi	r0, #1040	; 0x410
     fb4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fb8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fbc:	00000014 	andeq	r0, r0, r4, lsl r0
     fc0:	00000bec 	andeq	r0, r0, ip, ror #23
     fc4:	10002c9c 	mulne	r0, ip, ip
     fc8:	0000001e 	andeq	r0, r0, lr, lsl r0
     fcc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fd0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fd4:	00000014 	andeq	r0, r0, r4, lsl r0
     fd8:	00000bec 	andeq	r0, r0, ip, ror #23
     fdc:	10002cbc 			; <UNDEFINED> instruction: 0x10002cbc
     fe0:	00000038 	andeq	r0, r0, r8, lsr r0
     fe4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     fe8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fec:	00000018 	andeq	r0, r0, r8, lsl r0
     ff0:	00000bec 	andeq	r0, r0, ip, ror #23
     ff4:	00000000 	andeq	r0, r0, r0
     ff8:	0000007c 	andeq	r0, r0, ip, ror r0
     ffc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1000:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1004:	00018e02 	andeq	r8, r1, r2, lsl #28
    1008:	00000014 	andeq	r0, r0, r4, lsl r0
    100c:	00000bec 	andeq	r0, r0, ip, ror #23
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000024 	andeq	r0, r0, r4, lsr #32
    1018:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    101c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1020:	00000018 	andeq	r0, r0, r8, lsl r0
    1024:	00000bec 	andeq	r0, r0, ip, ror #23
    1028:	00000000 	andeq	r0, r0, r0
    102c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1030:	83100e41 	tsthi	r0, #1040	; 0x410
    1034:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1038:	00018e02 	andeq	r8, r1, r2, lsl #28
    103c:	00000018 	andeq	r0, r0, r8, lsl r0
    1040:	00000bec 	andeq	r0, r0, ip, ror #23
    1044:	00000000 	andeq	r0, r0, r0
    1048:	00000020 	andeq	r0, r0, r0, lsr #32
    104c:	83100e41 	tsthi	r0, #1040	; 0x410
    1050:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1054:	00018e02 	andeq	r8, r1, r2, lsl #28
    1058:	00000014 	andeq	r0, r0, r4, lsl r0
    105c:	00000bec 	andeq	r0, r0, ip, ror #23
    1060:	00000000 	andeq	r0, r0, r0
    1064:	00000020 	andeq	r0, r0, r0, lsr #32
    1068:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    106c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1070:	00000014 	andeq	r0, r0, r4, lsl r0
    1074:	00000bec 	andeq	r0, r0, ip, ror #23
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000020 	andeq	r0, r0, r0, lsr #32
    1080:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1084:	00018e02 	andeq	r8, r1, r2, lsl #28
    1088:	00000014 	andeq	r0, r0, r4, lsl r0
    108c:	00000bec 	andeq	r0, r0, ip, ror #23
    1090:	00000000 	andeq	r0, r0, r0
    1094:	00000020 	andeq	r0, r0, r0, lsr #32
    1098:	83080e41 	movwhi	r0, #36417	; 0x8e41
    109c:	00018e02 	andeq	r8, r1, r2, lsl #28
    10a0:	0000000c 	andeq	r0, r0, ip
    10a4:	00000bec 	andeq	r0, r0, ip, ror #23
    10a8:	10002cf4 	strdne	r2, [r0], -r4
    10ac:	00000084 	andeq	r0, r0, r4, lsl #1
    10b0:	00000018 	andeq	r0, r0, r8, lsl r0
    10b4:	00000bec 	andeq	r0, r0, ip, ror #23
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	000000a4 	andeq	r0, r0, r4, lsr #1
    10c0:	83100e41 	tsthi	r0, #1040	; 0x410
    10c4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    10c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    10cc:	00000014 	andeq	r0, r0, r4, lsl r0
    10d0:	00000bec 	andeq	r0, r0, ip, ror #23
    10d4:	10002d78 	andne	r2, r0, r8, ror sp
    10d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    10dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    10e4:	00000018 	andeq	r0, r0, r8, lsl r0
    10e8:	00000bec 	andeq	r0, r0, ip, ror #23
    10ec:	00000000 	andeq	r0, r0, r0
    10f0:	00000040 	andeq	r0, r0, r0, asr #32
    10f4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    10f8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    10fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1100:	00000018 	andeq	r0, r0, r8, lsl r0
    1104:	00000bec 	andeq	r0, r0, ip, ror #23
    1108:	10002d94 	mulne	r0, r4, sp
    110c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1110:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1114:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1118:	00018e02 	andeq	r8, r1, r2, lsl #28
    111c:	00000014 	andeq	r0, r0, r4, lsl r0
    1120:	00000bec 	andeq	r0, r0, ip, ror #23
    1124:	10002dd0 	ldrdne	r2, [r0], -r0
    1128:	000000e4 	andeq	r0, r0, r4, ror #1
    112c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1130:	00018e02 	andeq	r8, r1, r2, lsl #28
    1134:	00000014 	andeq	r0, r0, r4, lsl r0
    1138:	00000bec 	andeq	r0, r0, ip, ror #23
    113c:	00000000 	andeq	r0, r0, r0
    1140:	000000b8 	strheq	r0, [r0], -r8
    1144:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1148:	00018e02 	andeq	r8, r1, r2, lsl #28
    114c:	00000014 	andeq	r0, r0, r4, lsl r0
    1150:	00000bec 	andeq	r0, r0, ip, ror #23
    1154:	00000000 	andeq	r0, r0, r0
    1158:	00000024 	andeq	r0, r0, r4, lsr #32
    115c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1160:	00018e02 	andeq	r8, r1, r2, lsl #28
    1164:	0000000c 	andeq	r0, r0, ip
    1168:	00000bec 	andeq	r0, r0, ip, ror #23
    116c:	10002eb4 			; <UNDEFINED> instruction: 0x10002eb4
    1170:	00000018 	andeq	r0, r0, r8, lsl r0
    1174:	0000001c 	andeq	r0, r0, ip, lsl r0
    1178:	00000bec 	andeq	r0, r0, ip, ror #23
    117c:	10002ecc 	andne	r2, r0, ip, asr #29
    1180:	0000007c 	andeq	r0, r0, ip, ror r0
    1184:	83180e41 	tsthi	r8, #1040	; 0x410
    1188:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    118c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1190:	00018e02 	andeq	r8, r1, r2, lsl #28
    1194:	0000000c 	andeq	r0, r0, ip
    1198:	00000bec 	andeq	r0, r0, ip, ror #23
    119c:	10002f48 	andne	r2, r0, r8, asr #30
    11a0:	0000000c 	andeq	r0, r0, ip
    11a4:	0000000c 	andeq	r0, r0, ip
    11a8:	00000bec 	andeq	r0, r0, ip, ror #23
    11ac:	00000000 	andeq	r0, r0, r0
    11b0:	0000000a 	andeq	r0, r0, sl
    11b4:	0000000c 	andeq	r0, r0, ip
    11b8:	00000bec 	andeq	r0, r0, ip, ror #23
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00000006 	andeq	r0, r0, r6
    11c4:	0000000c 	andeq	r0, r0, ip
    11c8:	00000bec 	andeq	r0, r0, ip, ror #23
    11cc:	10002f54 	andne	r2, r0, r4, asr pc
    11d0:	00000048 	andeq	r0, r0, r8, asr #32
    11d4:	00000018 	andeq	r0, r0, r8, lsl r0
    11d8:	00000bec 	andeq	r0, r0, ip, ror #23
    11dc:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    11e0:	000000b4 	strheq	r0, [r0], -r4
    11e4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    11e8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    11ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    11f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    11f4:	00000bec 	andeq	r0, r0, ip, ror #23
    11f8:	00000000 	andeq	r0, r0, r0
    11fc:	00000034 	andeq	r0, r0, r4, lsr r0
    1200:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1204:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1208:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    120c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1210:	0000001c 	andeq	r0, r0, ip, lsl r0
    1214:	00000bec 	andeq	r0, r0, ip, ror #23
    1218:	00000000 	andeq	r0, r0, r0
    121c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1220:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1224:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1228:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    122c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1230:	00000014 	andeq	r0, r0, r4, lsl r0
    1234:	00000bec 	andeq	r0, r0, ip, ror #23
    1238:	00000000 	andeq	r0, r0, r0
    123c:	00000018 	andeq	r0, r0, r8, lsl r0
    1240:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1244:	00018e02 	andeq	r8, r1, r2, lsl #28
    1248:	0000000c 	andeq	r0, r0, ip
    124c:	00000bec 	andeq	r0, r0, ip, ror #23
    1250:	10003050 	andne	r3, r0, r0, asr r0
    1254:	0000000c 	andeq	r0, r0, ip
    1258:	0000000c 	andeq	r0, r0, ip
    125c:	00000bec 	andeq	r0, r0, ip, ror #23
    1260:	00000000 	andeq	r0, r0, r0
    1264:	00000010 	andeq	r0, r0, r0, lsl r0
    1268:	0000000c 	andeq	r0, r0, ip
    126c:	00000bec 	andeq	r0, r0, ip, ror #23
    1270:	00000000 	andeq	r0, r0, r0
    1274:	00000020 	andeq	r0, r0, r0, lsr #32
    1278:	0000002c 	andeq	r0, r0, ip, lsr #32
    127c:	00000bec 	andeq	r0, r0, ip, ror #23
    1280:	00000000 	andeq	r0, r0, r0
    1284:	000000b8 	strheq	r0, [r0], -r8
    1288:	83100e43 	tsthi	r0, #1072	; 0x430
    128c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1290:	02018e02 	andeq	r8, r1, #2, 28
    1294:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1298:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    129c:	0483100e 	streq	r1, [r3], #14
    12a0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    12a4:	0000018e 	andeq	r0, r0, lr, lsl #3
    12a8:	0000002c 	andeq	r0, r0, ip, lsr #32
    12ac:	00000bec 	andeq	r0, r0, ip, ror #23
    12b0:	1000305c 	andne	r3, r0, ip, asr r0
    12b4:	00000080 	andeq	r0, r0, r0, lsl #1
    12b8:	83100e43 	tsthi	r0, #1072	; 0x430
    12bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    12c0:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    12c4:	c4c3000e 	strbgt	r0, [r3], #14
    12c8:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    12cc:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    12d0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    12d4:	00000001 	andeq	r0, r0, r1
    12d8:	00000020 	andeq	r0, r0, r0, lsr #32
    12dc:	00000bec 	andeq	r0, r0, ip, ror #23
    12e0:	00000000 	andeq	r0, r0, r0
    12e4:	00000090 	muleq	r0, r0, r0
    12e8:	83100e43 	tsthi	r0, #1072	; 0x430
    12ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    12f0:	7f018e02 	svcvc	0x00018e02
    12f4:	c4c3000e 	strbgt	r0, [r3], #14
    12f8:	0000cec5 	andeq	ip, r0, r5, asr #29
    12fc:	0000000c 	andeq	r0, r0, ip
    1300:	00000bec 	andeq	r0, r0, ip, ror #23
    1304:	00000000 	andeq	r0, r0, r0
    1308:	00000018 	andeq	r0, r0, r8, lsl r0
    130c:	0000000c 	andeq	r0, r0, ip
    1310:	00000bec 	andeq	r0, r0, ip, ror #23
    1314:	00000000 	andeq	r0, r0, r0
    1318:	00000014 	andeq	r0, r0, r4, lsl r0
    131c:	00000018 	andeq	r0, r0, r8, lsl r0
    1320:	00000bec 	andeq	r0, r0, ip, ror #23
    1324:	00000000 	andeq	r0, r0, r0
    1328:	000000a8 	andeq	r0, r0, r8, lsr #1
    132c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1330:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1334:	00018e02 	andeq	r8, r1, r2, lsl #28
    1338:	0000001c 	andeq	r0, r0, ip, lsl r0
    133c:	00000bec 	andeq	r0, r0, ip, ror #23
    1340:	00000000 	andeq	r0, r0, r0
    1344:	000000cc 	andeq	r0, r0, ip, asr #1
    1348:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    134c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1350:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1354:	00018e02 	andeq	r8, r1, r2, lsl #28
    1358:	0000001c 	andeq	r0, r0, ip, lsl r0
    135c:	00000bec 	andeq	r0, r0, ip, ror #23
    1360:	00000000 	andeq	r0, r0, r0
    1364:	0000011c 	andeq	r0, r0, ip, lsl r1
    1368:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    136c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1370:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1374:	00018e02 	andeq	r8, r1, r2, lsl #28
    1378:	0000001c 	andeq	r0, r0, ip, lsl r0
    137c:	00000bec 	andeq	r0, r0, ip, ror #23
    1380:	00000000 	andeq	r0, r0, r0
    1384:	00000158 	andeq	r0, r0, r8, asr r1
    1388:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    138c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1390:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1394:	00018e02 	andeq	r8, r1, r2, lsl #28
    1398:	00000018 	andeq	r0, r0, r8, lsl r0
    139c:	00000bec 	andeq	r0, r0, ip, ror #23
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	000000ec 	andeq	r0, r0, ip, ror #1
    13a8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13ac:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    13b4:	00000018 	andeq	r0, r0, r8, lsl r0
    13b8:	00000bec 	andeq	r0, r0, ip, ror #23
    13bc:	00000000 	andeq	r0, r0, r0
    13c0:	00000038 	andeq	r0, r0, r8, lsr r0
    13c4:	83100e41 	tsthi	r0, #1040	; 0x410
    13c8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    13d0:	00000018 	andeq	r0, r0, r8, lsl r0
    13d4:	00000bec 	andeq	r0, r0, ip, ror #23
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	00000034 	andeq	r0, r0, r4, lsr r0
    13e0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    13ec:	0000000c 	andeq	r0, r0, ip
    13f0:	00000bec 	andeq	r0, r0, ip, ror #23
    13f4:	100030dc 	ldrdne	r3, [r0], -ip
    13f8:	00000018 	andeq	r0, r0, r8, lsl r0
    13fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1400:	00000bec 	andeq	r0, r0, ip, ror #23
    1404:	100030f4 	strdne	r3, [r0], -r4
    1408:	0000006c 	andeq	r0, r0, ip, rrx
    140c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1410:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1414:	500e4101 	andpl	r4, lr, r1, lsl #2
    1418:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    141c:	00000b41 	andeq	r0, r0, r1, asr #22
    1420:	00000014 	andeq	r0, r0, r4, lsl r0
    1424:	00000bec 	andeq	r0, r0, ip, ror #23
    1428:	10003160 	andne	r3, r0, r0, ror #2
    142c:	00000048 	andeq	r0, r0, r8, asr #32
    1430:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1434:	00018e02 	andeq	r8, r1, r2, lsl #28
    1438:	0000000c 	andeq	r0, r0, ip
    143c:	00000bec 	andeq	r0, r0, ip, ror #23
    1440:	100031a8 	andne	r3, r0, r8, lsr #3
    1444:	00000018 	andeq	r0, r0, r8, lsl r0
    1448:	0000000c 	andeq	r0, r0, ip
    144c:	00000bec 	andeq	r0, r0, ip, ror #23
    1450:	00000000 	andeq	r0, r0, r0
    1454:	00000074 	andeq	r0, r0, r4, ror r0
    1458:	0000000c 	andeq	r0, r0, ip
    145c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1460:	7c020001 	stcvc	0, cr0, [r2], {1}
    1464:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1468:	0000000c 	andeq	r0, r0, ip
    146c:	00001458 	andeq	r1, r0, r8, asr r4
    1470:	100031c0 	andne	r3, r0, r0, asr #3
    1474:	00000020 	andeq	r0, r0, r0, lsr #32
    1478:	00000014 	andeq	r0, r0, r4, lsl r0
    147c:	00001458 	andeq	r1, r0, r8, asr r4
    1480:	100031e0 	andne	r3, r0, r0, ror #3
    1484:	00000048 	andeq	r0, r0, r8, asr #32
    1488:	83080e41 	movwhi	r0, #36417	; 0x8e41
    148c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1490:	00000018 	andeq	r0, r0, r8, lsl r0
    1494:	00001458 	andeq	r1, r0, r8, asr r4
    1498:	10003228 	andne	r3, r0, r8, lsr #4
    149c:	00000028 	andeq	r0, r0, r8, lsr #32
    14a0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    14a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14ac:	00000018 	andeq	r0, r0, r8, lsl r0
    14b0:	00001458 	andeq	r1, r0, r8, asr r4
    14b4:	10003250 	andne	r3, r0, r0, asr r2
    14b8:	00000040 	andeq	r0, r0, r0, asr #32
    14bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    14c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    14c8:	00000014 	andeq	r0, r0, r4, lsl r0
    14cc:	00001458 	andeq	r1, r0, r8, asr r4
    14d0:	10003290 	mulne	r0, r0, r2
    14d4:	00000030 	andeq	r0, r0, r0, lsr r0
    14d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    14dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    14e0:	00000018 	andeq	r0, r0, r8, lsl r0
    14e4:	00001458 	andeq	r1, r0, r8, asr r4
    14e8:	100032c0 	andne	r3, r0, r0, asr #5
    14ec:	0000002c 	andeq	r0, r0, ip, lsr #32
    14f0:	83100e41 	tsthi	r0, #1040	; 0x410
    14f4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    14f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1500:	00001458 	andeq	r1, r0, r8, asr r4
    1504:	100032ec 	andne	r3, r0, ip, ror #5
    1508:	00000068 	andeq	r0, r0, r8, rrx
    150c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1510:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1514:	41018e02 	tstmi	r1, r2, lsl #28
    1518:	0a5d180e 	beq	1747558 <__RAM_SIZE+0x1647558>
    151c:	0b41100e 	bleq	104555c <__RAM_SIZE+0xf4555c>
    1520:	0000001c 	andeq	r0, r0, ip, lsl r0
    1524:	00001458 	andeq	r1, r0, r8, asr r4
    1528:	10003354 	andne	r3, r0, r4, asr r3
    152c:	000000f8 	strdeq	r0, [r0], -r8
    1530:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1534:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1538:	280e4101 	stmdacs	lr, {r0, r8, lr}
    153c:	0c0e7702 	stceq	7, cr7, [lr], {2}
    1540:	00000014 	andeq	r0, r0, r4, lsl r0
    1544:	00001458 	andeq	r1, r0, r8, asr r4
    1548:	1000344c 	andne	r3, r0, ip, asr #8
    154c:	00000016 	andeq	r0, r0, r6, lsl r0
    1550:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1554:	100e4101 	andne	r4, lr, r1, lsl #2
    1558:	00000020 	andeq	r0, r0, r0, lsr #32
    155c:	00001458 	andeq	r1, r0, r8, asr r4
    1560:	10003464 	andne	r3, r0, r4, ror #8
    1564:	00000060 	andeq	r0, r0, r0, rrx
    1568:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    156c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1570:	180e4101 	stmdane	lr, {r0, r8, lr}
    1574:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1578:	00000b41 	andeq	r0, r0, r1, asr #22
    157c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1580:	00001458 	andeq	r1, r0, r8, asr r4
    1584:	00000000 	andeq	r0, r0, r0
    1588:	00000036 	andeq	r0, r0, r6, lsr r0
    158c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1590:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1594:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1598:	00018e02 	andeq	r8, r1, r2, lsl #28
    159c:	0000001c 	andeq	r0, r0, ip, lsl r0
    15a0:	00001458 	andeq	r1, r0, r8, asr r4
    15a4:	100034c4 	andne	r3, r0, r4, asr #9
    15a8:	0000005c 	andeq	r0, r0, ip, asr r0
    15ac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15b0:	41018e02 	tstmi	r1, r2, lsl #28
    15b4:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    15b8:	00000008 	andeq	r0, r0, r8
    15bc:	00000024 	andeq	r0, r0, r4, lsr #32
    15c0:	00001458 	andeq	r1, r0, r8, asr r4
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00000038 	andeq	r0, r0, r8, lsr r0
    15cc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    15d0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    15d4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    15d8:	41018e02 	tstmi	r1, r2, lsl #28
    15dc:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    15e0:	00000018 	andeq	r0, r0, r8, lsl r0
    15e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    15e8:	00001458 	andeq	r1, r0, r8, asr r4
    15ec:	00000000 	andeq	r0, r0, r0
    15f0:	00000020 	andeq	r0, r0, r0, lsr #32
    15f4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    15f8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    15fc:	180e4101 	stmdane	lr, {r0, r8, lr}
    1600:	000c0e4d 	andeq	r0, ip, sp, asr #28
    1604:	00000020 	andeq	r0, r0, r0, lsr #32
    1608:	00001458 	andeq	r1, r0, r8, asr r4
    160c:	00000000 	andeq	r0, r0, r0
    1610:	0000004c 	andeq	r0, r0, ip, asr #32
    1614:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    1618:	180e4101 	stmdane	lr, {r0, r8, lr}
    161c:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    1620:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    1624:	0000ce00 	andeq	ip, r0, r0, lsl #28
    1628:	0000001c 	andeq	r0, r0, ip, lsl r0
    162c:	00001458 	andeq	r1, r0, r8, asr r4
    1630:	00000000 	andeq	r0, r0, r0
    1634:	00000034 	andeq	r0, r0, r4, lsr r0
    1638:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    163c:	41018e02 	tstmi	r1, r2, lsl #28
    1640:	0a4b180e 	beq	12c7680 <__RAM_SIZE+0x11c7680>
    1644:	0b41080e 	bleq	1043684 <__RAM_SIZE+0xf43684>
    1648:	0000000c 	andeq	r0, r0, ip
    164c:	00001458 	andeq	r1, r0, r8, asr r4
    1650:	00000000 	andeq	r0, r0, r0
    1654:	0000000c 	andeq	r0, r0, ip
    1658:	0000000c 	andeq	r0, r0, ip
    165c:	00001458 	andeq	r1, r0, r8, asr r4
    1660:	00000000 	andeq	r0, r0, r0
    1664:	00000004 	andeq	r0, r0, r4
    1668:	00000018 	andeq	r0, r0, r8, lsl r0
    166c:	00001458 	andeq	r1, r0, r8, asr r4
    1670:	00000000 	andeq	r0, r0, r0
    1674:	0000002c 	andeq	r0, r0, ip, lsr #32
    1678:	83100e41 	tsthi	r0, #1040	; 0x410
    167c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1680:	00018e02 	andeq	r8, r1, r2, lsl #28
    1684:	00000014 	andeq	r0, r0, r4, lsl r0
    1688:	00001458 	andeq	r1, r0, r8, asr r4
    168c:	00000000 	andeq	r0, r0, r0
    1690:	00000020 	andeq	r0, r0, r0, lsr #32
    1694:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1698:	00018e02 	andeq	r8, r1, r2, lsl #28
    169c:	00000014 	andeq	r0, r0, r4, lsl r0
    16a0:	00001458 	andeq	r1, r0, r8, asr r4
    16a4:	00000000 	andeq	r0, r0, r0
    16a8:	00000008 	andeq	r0, r0, r8
    16ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
    16b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16b4:	0000000c 	andeq	r0, r0, ip
    16b8:	00001458 	andeq	r1, r0, r8, asr r4
    16bc:	00000000 	andeq	r0, r0, r0
    16c0:	00000004 	andeq	r0, r0, r4
    16c4:	0000000c 	andeq	r0, r0, ip
    16c8:	00001458 	andeq	r1, r0, r8, asr r4
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	00000014 	andeq	r0, r0, r4, lsl r0
    16d4:	0000000c 	andeq	r0, r0, ip
    16d8:	00001458 	andeq	r1, r0, r8, asr r4
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	00000004 	andeq	r0, r0, r4
    16e4:	00000014 	andeq	r0, r0, r4, lsl r0
    16e8:	00001458 	andeq	r1, r0, r8, asr r4
    16ec:	00000000 	andeq	r0, r0, r0
    16f0:	00000020 	andeq	r0, r0, r0, lsr #32
    16f4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    16f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    16fc:	00000014 	andeq	r0, r0, r4, lsl r0
    1700:	00001458 	andeq	r1, r0, r8, asr r4
    1704:	00000000 	andeq	r0, r0, r0
    1708:	00000012 	andeq	r0, r0, r2, lsl r0
    170c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1710:	00018e02 	andeq	r8, r1, r2, lsl #28
    1714:	00000018 	andeq	r0, r0, r8, lsl r0
    1718:	00001458 	andeq	r1, r0, r8, asr r4
    171c:	00000000 	andeq	r0, r0, r0
    1720:	00000012 	andeq	r0, r0, r2, lsl r0
    1724:	83100e41 	tsthi	r0, #1040	; 0x410
    1728:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    172c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1730:	0000001c 	andeq	r0, r0, ip, lsl r0
    1734:	00001458 	andeq	r1, r0, r8, asr r4
    1738:	00000000 	andeq	r0, r0, r0
    173c:	00000028 	andeq	r0, r0, r8, lsr #32
    1740:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1744:	41018e02 	tstmi	r1, r2, lsl #28
    1748:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    174c:	00000008 	andeq	r0, r0, r8
    1750:	0000001c 	andeq	r0, r0, ip, lsl r0
    1754:	00001458 	andeq	r1, r0, r8, asr r4
    1758:	00000000 	andeq	r0, r0, r0
    175c:	00000028 	andeq	r0, r0, r8, lsr #32
    1760:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1764:	41018e02 	tstmi	r1, r2, lsl #28
    1768:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    176c:	00000008 	andeq	r0, r0, r8
    1770:	0000000c 	andeq	r0, r0, ip
    1774:	00001458 	andeq	r1, r0, r8, asr r4
    1778:	00000000 	andeq	r0, r0, r0
    177c:	00000004 	andeq	r0, r0, r4
    1780:	0000000c 	andeq	r0, r0, ip
    1784:	00001458 	andeq	r1, r0, r8, asr r4
    1788:	00000000 	andeq	r0, r0, r0
    178c:	00000004 	andeq	r0, r0, r4
    1790:	0000000c 	andeq	r0, r0, ip
    1794:	00001458 	andeq	r1, r0, r8, asr r4
    1798:	00000000 	andeq	r0, r0, r0
    179c:	00000014 	andeq	r0, r0, r4, lsl r0
    17a0:	0000000c 	andeq	r0, r0, ip
    17a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17a8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17b0:	0000000c 	andeq	r0, r0, ip
    17b4:	000017a0 	andeq	r1, r0, r0, lsr #15
    17b8:	10003520 	andne	r3, r0, r0, lsr #10
    17bc:	00000058 	andeq	r0, r0, r8, asr r0
    17c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    17c4:	000017a0 	andeq	r1, r0, r0, lsr #15
    17c8:	10003578 	andne	r3, r0, r8, ror r5
    17cc:	00000064 	andeq	r0, r0, r4, rrx
    17d0:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    17d4:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    17d8:	0b41000e 	bleq	1041818 <__RAM_SIZE+0xf41818>
    17dc:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    17e0:	00000018 	andeq	r0, r0, r8, lsl r0
    17e4:	000017a0 	andeq	r1, r0, r0, lsr #15
    17e8:	100035dc 	ldrdne	r3, [r0], -ip
    17ec:	000000d4 	ldrdeq	r0, [r0], -r4
    17f0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    17f4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    17fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1800:	000017a0 	andeq	r1, r0, r0, lsr #15
    1804:	100036b0 			; <UNDEFINED> instruction: 0x100036b0
    1808:	00000050 	andeq	r0, r0, r0, asr r0
    180c:	83100e42 	tsthi	r0, #1056	; 0x420
    1810:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1814:	61018e02 	tstvs	r1, r2, lsl #28
    1818:	c4c3000e 	strbgt	r0, [r3], #14
    181c:	0000cec5 	andeq	ip, r0, r5, asr #29
    1820:	0000000c 	andeq	r0, r0, ip
    1824:	000017a0 	andeq	r1, r0, r0, lsr #15
    1828:	00000000 	andeq	r0, r0, r0
    182c:	0000000c 	andeq	r0, r0, ip
    1830:	0000000c 	andeq	r0, r0, ip
    1834:	000017a0 	andeq	r1, r0, r0, lsr #15
    1838:	00000000 	andeq	r0, r0, r0
    183c:	0000000c 	andeq	r0, r0, ip
    1840:	0000000c 	andeq	r0, r0, ip
    1844:	000017a0 	andeq	r1, r0, r0, lsr #15
    1848:	00000000 	andeq	r0, r0, r0
    184c:	00000002 	andeq	r0, r0, r2
    1850:	00000018 	andeq	r0, r0, r8, lsl r0
    1854:	000017a0 	andeq	r1, r0, r0, lsr #15
    1858:	00000000 	andeq	r0, r0, r0
    185c:	00000032 	andeq	r0, r0, r2, lsr r0
    1860:	83100e41 	tsthi	r0, #1040	; 0x410
    1864:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1868:	00018e02 	andeq	r8, r1, r2, lsl #28
    186c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1870:	000017a0 	andeq	r1, r0, r0, lsr #15
    1874:	00000000 	andeq	r0, r0, r0
    1878:	00000080 	andeq	r0, r0, r0, lsl #1
    187c:	83180e41 	tsthi	r8, #1040	; 0x410
    1880:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1884:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1888:	00018e02 	andeq	r8, r1, r2, lsl #28
    188c:	0000000c 	andeq	r0, r0, ip
    1890:	000017a0 	andeq	r1, r0, r0, lsr #15
    1894:	00000000 	andeq	r0, r0, r0
    1898:	0000002c 	andeq	r0, r0, ip, lsr #32
    189c:	0000000c 	andeq	r0, r0, ip
    18a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18a4:	7c020001 	stcvc	0, cr0, [r2], {1}
    18a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18ac:	00000018 	andeq	r0, r0, r8, lsl r0
    18b0:	0000189c 	muleq	r0, ip, r8
    18b4:	10003700 	andne	r3, r0, r0, lsl #14
    18b8:	00000018 	andeq	r0, r0, r8, lsl r0
    18bc:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    18c0:	100e4101 	andne	r4, lr, r1, lsl #2
    18c4:	00040e48 	andeq	r0, r4, r8, asr #28
    18c8:	00000014 	andeq	r0, r0, r4, lsl r0
    18cc:	0000189c 	muleq	r0, ip, r8
    18d0:	10003718 	andne	r3, r0, r8, lsl r7
    18d4:	00000114 	andeq	r0, r0, r4, lsl r1
    18d8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    18dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    18e0:	0000000c 	andeq	r0, r0, ip
    18e4:	0000189c 	muleq	r0, ip, r8
    18e8:	1000382c 	andne	r3, r0, ip, lsr #16
    18ec:	0000003c 	andeq	r0, r0, ip, lsr r0
    18f0:	0000000c 	andeq	r0, r0, ip
    18f4:	0000189c 	muleq	r0, ip, r8
    18f8:	10003868 	andne	r3, r0, r8, ror #16
    18fc:	00000016 	andeq	r0, r0, r6, lsl r0
    1900:	00000014 	andeq	r0, r0, r4, lsl r0
    1904:	0000189c 	muleq	r0, ip, r8
    1908:	10003880 	andne	r3, r0, r0, lsl #17
    190c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1910:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1914:	00018e02 	andeq	r8, r1, r2, lsl #28
    1918:	00000014 	andeq	r0, r0, r4, lsl r0
    191c:	0000189c 	muleq	r0, ip, r8
    1920:	1000389c 	mulne	r0, ip, r8
    1924:	0000001c 	andeq	r0, r0, ip, lsl r0
    1928:	83080e41 	movwhi	r0, #36417	; 0x8e41
    192c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1930:	00000014 	andeq	r0, r0, r4, lsl r0
    1934:	0000189c 	muleq	r0, ip, r8
    1938:	100038b8 			; <UNDEFINED> instruction: 0x100038b8
    193c:	00000022 	andeq	r0, r0, r2, lsr #32
    1940:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1944:	00018e02 	andeq	r8, r1, r2, lsl #28
    1948:	00000014 	andeq	r0, r0, r4, lsl r0
    194c:	0000189c 	muleq	r0, ip, r8
    1950:	100038da 	ldrdne	r3, [r0], -sl
    1954:	00000014 	andeq	r0, r0, r4, lsl r0
    1958:	83080e41 	movwhi	r0, #36417	; 0x8e41
    195c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1960:	00000018 	andeq	r0, r0, r8, lsl r0
    1964:	0000189c 	muleq	r0, ip, r8
    1968:	100038f0 	strdne	r3, [r0], -r0
    196c:	00000090 	muleq	r0, r0, r0
    1970:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1974:	c4440201 	strbgt	r0, [r4], #-513	; 0xfffffdff
    1978:	0000000e 	andeq	r0, r0, lr
    197c:	00000014 	andeq	r0, r0, r4, lsl r0
    1980:	0000189c 	muleq	r0, ip, r8
    1984:	10003980 	andne	r3, r0, r0, lsl #19
    1988:	00000040 	andeq	r0, r0, r0, asr #32
    198c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1990:	00018e02 	andeq	r8, r1, r2, lsl #28
    1994:	0000000c 	andeq	r0, r0, ip
    1998:	0000189c 	muleq	r0, ip, r8
    199c:	00000000 	andeq	r0, r0, r0
    19a0:	00000002 	andeq	r0, r0, r2
    19a4:	0000000c 	andeq	r0, r0, ip
    19a8:	0000189c 	muleq	r0, ip, r8
    19ac:	00000000 	andeq	r0, r0, r0
    19b0:	0000000e 	andeq	r0, r0, lr
    19b4:	0000000c 	andeq	r0, r0, ip
    19b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19bc:	7c020001 	stcvc	0, cr0, [r2], {1}
    19c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19c4:	0000000c 	andeq	r0, r0, ip
    19c8:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    19cc:	100039c0 	andne	r3, r0, r0, asr #19
    19d0:	00000026 	andeq	r0, r0, r6, lsr #32
    19d4:	0000000c 	andeq	r0, r0, ip
    19d8:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    19dc:	00000000 	andeq	r0, r0, r0
    19e0:	00000010 	andeq	r0, r0, r0, lsl r0
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	0000000e 	andeq	r0, r0, lr
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    19fc:	00000000 	andeq	r0, r0, r0
    1a00:	0000000e 	andeq	r0, r0, lr
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    1a0c:	100039ec 	andne	r3, r0, ip, ror #19
    1a10:	0000001a 	andeq	r0, r0, sl, lsl r0
    1a14:	0000000c 	andeq	r0, r0, ip
    1a18:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    1a1c:	10003a0c 	andne	r3, r0, ip, lsl #20
    1a20:	00000016 	andeq	r0, r0, r6, lsl r0
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    1a2c:	10003a22 	andne	r3, r0, r2, lsr #20
    1a30:	0000000e 	andeq	r0, r0, lr
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    1a3c:	10003a30 	andne	r3, r0, r0, lsr sl
    1a40:	00000044 	andeq	r0, r0, r4, asr #32
    1a44:	0000000c 	andeq	r0, r0, ip
    1a48:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    1a4c:	10003a78 	andne	r3, r0, r8, ror sl
    1a50:	00000012 	andeq	r0, r0, r2, lsl r0
    1a54:	0000000c 	andeq	r0, r0, ip
    1a58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a5c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a60:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a64:	0000000c 	andeq	r0, r0, ip
    1a68:	00001a54 	andeq	r1, r0, r4, asr sl
    1a6c:	10003b74 	andne	r3, r0, r4, ror fp
    1a70:	0000000c 	andeq	r0, r0, ip
    1a74:	0000000c 	andeq	r0, r0, ip
    1a78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a7c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a80:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a84:	00000018 	andeq	r0, r0, r8, lsl r0
    1a88:	00001a74 	andeq	r1, r0, r4, ror sl
    1a8c:	10003c6c 	andne	r3, r0, ip, ror #24
    1a90:	000000a4 	andeq	r0, r0, r4, lsr #1
    1a94:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1a98:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1a9c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1aa0:	0000000c 	andeq	r0, r0, ip
    1aa4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aa8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1aac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ab0:	0000000c 	andeq	r0, r0, ip
    1ab4:	00001aa0 	andeq	r1, r0, r0, lsr #21
    1ab8:	10003d10 	andne	r3, r0, r0, lsl sp
    1abc:	00000014 	andeq	r0, r0, r4, lsl r0
    1ac0:	00000044 	andeq	r0, r0, r4, asr #32
    1ac4:	00001aa0 	andeq	r1, r0, r0, lsr #21
    1ac8:	00000000 	andeq	r0, r0, r0
    1acc:	000000c8 	andeq	r0, r0, r8, asr #1
    1ad0:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
    1ad4:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
    1ad8:	87078608 	strhi	r8, [r7, -r8, lsl #12]
    1adc:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
    1ae0:	8b038a04 	blhi	e42f8 <__HEAP_SIZE+0xe32f8>
    1ae4:	46018e02 	strmi	r8, [r1], -r2, lsl #28
    1ae8:	5005300e 	andpl	r3, r5, lr
    1aec:	0b51050c 	bleq	1442f24 <__RAM_SIZE+0x1342f24>
    1af0:	50060a60 	andpl	r0, r6, r0, ror #20
    1af4:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
    1af8:	cacbce43 	bgt	ff2f540c <__StackTop+0xc71f540c>
    1afc:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
    1b00:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    1b04:	000b4200 	andeq	r4, fp, r0, lsl #4
    1b08:	0000000c 	andeq	r0, r0, ip
    1b0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b10:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b14:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b18:	0000000c 	andeq	r0, r0, ip
    1b1c:	00001b08 	andeq	r1, r0, r8, lsl #22
    1b20:	10003d24 	andne	r3, r0, r4, lsr #26
    1b24:	0000000c 	andeq	r0, r0, ip
    1b28:	0000000c 	andeq	r0, r0, ip
    1b2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b30:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b38:	00000020 	andeq	r0, r0, r0, lsr #32
    1b3c:	00001b28 	andeq	r1, r0, r8, lsr #22
    1b40:	10003d30 	andne	r3, r0, r0, lsr sp
    1b44:	0000002c 	andeq	r0, r0, ip, lsr #32
    1b48:	83100e41 	tsthi	r0, #1040	; 0x410
    1b4c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b50:	4f018e02 	svcmi	0x00018e02
    1b54:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1b58:	0000000e 	andeq	r0, r0, lr
    1b5c:	0000000c 	andeq	r0, r0, ip
    1b60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b64:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b6c:	0000000c 	andeq	r0, r0, ip
    1b70:	00001b5c 	andeq	r1, r0, ip, asr fp
    1b74:	00000000 	andeq	r0, r0, r0
    1b78:	00000002 	andeq	r0, r0, r2
    1b7c:	0000000c 	andeq	r0, r0, ip
    1b80:	00001b5c 	andeq	r1, r0, ip, asr fp
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	00000002 	andeq	r0, r0, r2
    1b8c:	0000000c 	andeq	r0, r0, ip
    1b90:	00001b5c 	andeq	r1, r0, ip, asr fp
    1b94:	00000000 	andeq	r0, r0, r0
    1b98:	00000002 	andeq	r0, r0, r2
    1b9c:	0000000c 	andeq	r0, r0, ip
    1ba0:	00001b5c 	andeq	r1, r0, ip, asr fp
    1ba4:	00000000 	andeq	r0, r0, r0
    1ba8:	00000002 	andeq	r0, r0, r2
    1bac:	0000000c 	andeq	r0, r0, ip
    1bb0:	00001b5c 	andeq	r1, r0, ip, asr fp
    1bb4:	00000000 	andeq	r0, r0, r0
    1bb8:	00000002 	andeq	r0, r0, r2
    1bbc:	0000000c 	andeq	r0, r0, ip
    1bc0:	00001b5c 	andeq	r1, r0, ip, asr fp
    1bc4:	10003d5c 	andne	r3, r0, ip, asr sp
    1bc8:	00000002 	andeq	r0, r0, r2
    1bcc:	0000000c 	andeq	r0, r0, ip
    1bd0:	00001b5c 	andeq	r1, r0, ip, asr fp
    1bd4:	00000000 	andeq	r0, r0, r0
    1bd8:	00000004 	andeq	r0, r0, r4
    1bdc:	0000000c 	andeq	r0, r0, ip
    1be0:	00001b5c 	andeq	r1, r0, ip, asr fp
    1be4:	00000000 	andeq	r0, r0, r0
    1be8:	00000004 	andeq	r0, r0, r4
    1bec:	0000000c 	andeq	r0, r0, ip
    1bf0:	00001b5c 	andeq	r1, r0, ip, asr fp
    1bf4:	00000000 	andeq	r0, r0, r0
    1bf8:	00000002 	andeq	r0, r0, r2
    1bfc:	0000000c 	andeq	r0, r0, ip
    1c00:	00001b5c 	andeq	r1, r0, ip, asr fp
    1c04:	10003d60 	andne	r3, r0, r0, ror #26
    1c08:	00000002 	andeq	r0, r0, r2
    1c0c:	0000000c 	andeq	r0, r0, ip
    1c10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c14:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c18:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c1c:	00000020 	andeq	r0, r0, r0, lsr #32
    1c20:	00001c0c 	andeq	r1, r0, ip, lsl #24
    1c24:	10003d64 	andne	r3, r0, r4, ror #26
    1c28:	00000090 	muleq	r0, r0, r0
    1c2c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1c30:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1c34:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1c38:	8a038904 	bhi	e4050 <__HEAP_SIZE+0xe3050>
    1c3c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c40:	0000000c 	andeq	r0, r0, ip
    1c44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c48:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c50:	00000024 	andeq	r0, r0, r4, lsr #32
    1c54:	00001c40 	andeq	r1, r0, r0, asr #24
    1c58:	00000000 	andeq	r0, r0, r0
    1c5c:	00000048 	andeq	r0, r0, r8, asr #32
    1c60:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1c64:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1c68:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1c6c:	60018e02 	andvs	r8, r1, r2, lsl #28
    1c70:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1c74:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1c78:	00000028 	andeq	r0, r0, r8, lsr #32
    1c7c:	00001c40 	andeq	r1, r0, r0, asr #24
    1c80:	00000000 	andeq	r0, r0, r0
    1c84:	00000090 	muleq	r0, r0, r0
    1c88:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1c8c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1c90:	7c018e02 	stcvc	14, cr8, [r1], {2}
    1c94:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1c98:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1c9c:	000e410b 	andeq	r4, lr, fp, lsl #2
    1ca0:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    1ca4:	0000000c 	andeq	r0, r0, ip
    1ca8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1cac:	7c020001 	stcvc	0, cr0, [r2], {1}
    1cb0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1cb4:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cb8:	00001ca4 	andeq	r1, r0, r4, lsr #25
    1cbc:	10003df4 	strdne	r3, [r0], -r4
    1cc0:	00000282 	andeq	r0, r0, r2, lsl #5
    1cc4:	0c0e470a 	stceq	7, cr4, [lr], {10}
    1cc8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1ccc:	3a03018e 	bcc	c230c <__HEAP_SIZE+0xc130c>
    1cd0:	00000b01 	andeq	r0, r0, r1, lsl #22
    1cd4:	00000018 	andeq	r0, r0, r8, lsl r0
    1cd8:	00001ca4 	andeq	r1, r0, r4, lsr #25
    1cdc:	10004078 	andne	r4, r0, r8, ror r0
    1ce0:	0000001e 	andeq	r0, r0, lr, lsl r0
    1ce4:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1ce8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1cec:	0b49018e 	bleq	124232c <__RAM_SIZE+0x114232c>
    1cf0:	00000018 	andeq	r0, r0, r8, lsl r0
    1cf4:	00001ca4 	andeq	r1, r0, r4, lsr #25
    1cf8:	10004098 	mulne	r0, r8, r0
    1cfc:	00000022 	andeq	r0, r0, r2, lsr #32
    1d00:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1d04:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1d08:	0b4b018e 	bleq	12c2348 <__RAM_SIZE+0x11c2348>
    1d0c:	00000018 	andeq	r0, r0, r8, lsl r0
    1d10:	00001ca4 	andeq	r1, r0, r4, lsr #25
    1d14:	100040bc 	strhne	r4, [r0], -ip
    1d18:	00000042 	andeq	r0, r0, r2, asr #32
    1d1c:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    1d20:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1d24:	0b47018e 	bleq	11c2364 <__RAM_SIZE+0x10c2364>
    1d28:	00000024 	andeq	r0, r0, r4, lsr #32
    1d2c:	00001ca4 	andeq	r1, r0, r4, lsr #25
    1d30:	10004100 	andne	r4, r0, r0, lsl #2
    1d34:	0000006a 	andeq	r0, r0, sl, rrx
    1d38:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1d3c:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1d40:	43018e02 	movwmi	r8, #7682	; 0x1e02
    1d44:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1d48:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1d4c:	0b68018e 	bleq	1a0238c <__RAM_SIZE+0x190238c>
    1d50:	0000000c 	andeq	r0, r0, ip
    1d54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d58:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d60:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d64:	00001d50 	andeq	r1, r0, r0, asr sp
    1d68:	1000416c 	andne	r4, r0, ip, ror #2
    1d6c:	00000254 	andeq	r0, r0, r4, asr r2
    1d70:	100e410a 	andne	r4, lr, sl, lsl #2
    1d74:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1d78:	018e0286 	orreq	r0, lr, r6, lsl #5
    1d7c:	0b012903 	bleq	4c190 <__HEAP_SIZE+0x4b190>
    1d80:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d84:	00001d50 	andeq	r1, r0, r0, asr sp
    1d88:	100043c0 	andne	r4, r0, r0, asr #7
    1d8c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1d90:	100e410a 	andne	r4, lr, sl, lsl #2
    1d94:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1d98:	018e0286 	orreq	r0, lr, r6, lsl #5
    1d9c:	000be702 	andeq	lr, fp, r2, lsl #14
    1da0:	0000000c 	andeq	r0, r0, ip
    1da4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1da8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1dac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1db0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1db4:	00001da0 	andeq	r1, r0, r0, lsr #27
    1db8:	10004590 	mulne	r0, r0, r5
    1dbc:	0000008a 	andeq	r0, r0, sl, lsl #1
    1dc0:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    1dc4:	0e410a4a 	vmlseq.f32	s1, s2, s20
    1dc8:	520b5b00 	andpl	r5, fp, #0, 22
    1dcc:	0b41000e 	bleq	1041e0c <__RAM_SIZE+0xf41e0c>
    1dd0:	00000018 	andeq	r0, r0, r8, lsl r0
    1dd4:	00001da0 	andeq	r1, r0, r0, lsr #27
    1dd8:	1000461c 	andne	r4, r0, ip, lsl r6
    1ddc:	00000020 	andeq	r0, r0, r0, lsr #32
    1de0:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    1de4:	018e0280 	orreq	r0, lr, r0, lsl #5
    1de8:	00000b47 	andeq	r0, r0, r7, asr #22
    1dec:	00000014 	andeq	r0, r0, r4, lsl r0
    1df0:	00001da0 	andeq	r1, r0, r0, lsr #27
    1df4:	1000463c 	andne	r4, r0, ip, lsr r6
    1df8:	00000012 	andeq	r0, r0, r2, lsl r0
    1dfc:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1e00:	0b47028e 	bleq	11c2840 <__RAM_SIZE+0x10c2840>
    1e04:	00000014 	andeq	r0, r0, r4, lsl r0
    1e08:	00001da0 	andeq	r1, r0, r0, lsr #27
    1e0c:	10004650 	andne	r4, r0, r0, asr r6
    1e10:	00000012 	andeq	r0, r0, r2, lsl r0
    1e14:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1e18:	0b47028e 	bleq	11c2858 <__RAM_SIZE+0x10c2858>
    1e1c:	00000014 	andeq	r0, r0, r4, lsl r0
    1e20:	00001da0 	andeq	r1, r0, r0, lsr #27
    1e24:	10004664 	andne	r4, r0, r4, ror #12
    1e28:	00000012 	andeq	r0, r0, r2, lsl r0
    1e2c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1e30:	0b47028e 	bleq	11c2870 <__RAM_SIZE+0x10c2870>
    1e34:	00000014 	andeq	r0, r0, r4, lsl r0
    1e38:	00001da0 	andeq	r1, r0, r0, lsr #27
    1e3c:	10004678 	andne	r4, r0, r8, ror r6
    1e40:	00000012 	andeq	r0, r0, r2, lsl r0
    1e44:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1e48:	0b47028e 	bleq	11c2888 <__RAM_SIZE+0x10c2888>
    1e4c:	00000014 	andeq	r0, r0, r4, lsl r0
    1e50:	00001da0 	andeq	r1, r0, r0, lsr #27
    1e54:	1000468c 	andne	r4, r0, ip, lsl #13
    1e58:	00000012 	andeq	r0, r0, r2, lsl r0
    1e5c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1e60:	0b47028e 	bleq	11c28a0 <__RAM_SIZE+0x10c28a0>
    1e64:	0000000c 	andeq	r0, r0, ip
    1e68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1e6c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1e70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e74:	00000010 	andeq	r0, r0, r0, lsl r0
    1e78:	00001e64 	andeq	r1, r0, r4, ror #28
    1e7c:	100046a0 	andne	r4, r0, r0, lsr #13
    1e80:	0000004e 	andeq	r0, r0, lr, asr #32
    1e84:	000b670a 	andeq	r6, fp, sl, lsl #14
    1e88:	0000000c 	andeq	r0, r0, ip
    1e8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1e90:	7c020001 	stcvc	0, cr0, [r2], {1}
    1e94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e98:	00000010 	andeq	r0, r0, r0, lsl r0
    1e9c:	00001e88 	andeq	r1, r0, r8, lsl #29
    1ea0:	100046f0 	strdne	r4, [r0], -r0
    1ea4:	00000040 	andeq	r0, r0, r0, asr #32
    1ea8:	000b600a 	andeq	r6, fp, sl
    1eac:	0000000c 	andeq	r0, r0, ip
    1eb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1eb4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1eb8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ebc:	00000018 	andeq	r0, r0, r8, lsl r0
    1ec0:	00001eac 	andeq	r1, r0, ip, lsr #29
    1ec4:	10004730 	andne	r4, r0, r0, lsr r7
    1ec8:	00000030 	andeq	r0, r0, r0, lsr r0
    1ecc:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1ed0:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1ed4:	00000010 	andeq	r0, r0, r0, lsl r0
    1ed8:	0000000c 	andeq	r0, r0, ip
    1edc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ee0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ee4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ee8:	00000024 	andeq	r0, r0, r4, lsr #32
    1eec:	00001ed8 	ldrdeq	r1, [r0], -r8
    1ef0:	10004760 	andne	r4, r0, r0, ror #14
    1ef4:	000002ec 	andeq	r0, r0, ip, ror #5
    1ef8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1efc:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1f00:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1f04:	8a048905 	bhi	124320 <__RAM_SIZE+0x24320>
    1f08:	8e028b03 	vmlahi.f64	d8, d2, d3
    1f0c:	00000001 	andeq	r0, r0, r1
    1f10:	0000000c 	andeq	r0, r0, ip
    1f14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1f18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1f1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1f20:	0000000c 	andeq	r0, r0, ip
    1f24:	00001f10 	andeq	r1, r0, r0, lsl pc
    1f28:	10004a4c 	andne	r4, r0, ip, asr #20
    1f2c:	00000012 	andeq	r0, r0, r2, lsl r0
    1f30:	00000020 	andeq	r0, r0, r0, lsr #32
    1f34:	00001f10 	andeq	r1, r0, r0, lsl pc
    1f38:	10004a60 	andne	r4, r0, r0, ror #20
    1f3c:	00000060 	andeq	r0, r0, r0, rrx
    1f40:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1f44:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1f48:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1f4c:	8a038904 	bhi	e4364 <__HEAP_SIZE+0xe3364>
    1f50:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f54:	0000000c 	andeq	r0, r0, ip
    1f58:	00001f10 	andeq	r1, r0, r0, lsl pc
    1f5c:	10004ac0 	andne	r4, r0, r0, asr #21
    1f60:	00000028 	andeq	r0, r0, r8, lsr #32
    1f64:	0000002c 	andeq	r0, r0, ip, lsr #32
    1f68:	00001f10 	andeq	r1, r0, r0, lsl pc
    1f6c:	10004ae8 	andne	r4, r0, r8, ror #21
    1f70:	0000009c 	muleq	r0, ip, r0
    1f74:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1f78:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1f7c:	180e4201 	stmdane	lr, {r0, r9, lr}
    1f80:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    1f84:	0a440b41 	beq	1104c90 <__RAM_SIZE+0x1004c90>
    1f88:	0b410c0e 	bleq	1044fc8 <__RAM_SIZE+0xf44fc8>
    1f8c:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1f90:	00000b41 	andeq	r0, r0, r1, asr #22
    1f94:	00000018 	andeq	r0, r0, r8, lsl r0
    1f98:	00001f10 	andeq	r1, r0, r0, lsl pc
    1f9c:	10004b84 	andne	r4, r0, r4, lsl #23
    1fa0:	00000058 	andeq	r0, r0, r8, asr r0
    1fa4:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1fa8:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1fac:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1fb0:	0000000c 	andeq	r0, r0, ip
    1fb4:	00001f10 	andeq	r1, r0, r0, lsl pc
    1fb8:	10004bdc 	ldrdne	r4, [r0], -ip
    1fbc:	00000004 	andeq	r0, r0, r4
    1fc0:	0000000c 	andeq	r0, r0, ip
    1fc4:	00001f10 	andeq	r1, r0, r0, lsl pc
    1fc8:	10004be0 	andne	r4, r0, r0, ror #23
    1fcc:	0000000a 	andeq	r0, r0, sl
    1fd0:	0000000c 	andeq	r0, r0, ip
    1fd4:	00001f10 	andeq	r1, r0, r0, lsl pc
    1fd8:	10004bec 	andne	r4, r0, ip, ror #23
    1fdc:	00000002 	andeq	r0, r0, r2
    1fe0:	00000018 	andeq	r0, r0, r8, lsl r0
    1fe4:	00001f10 	andeq	r1, r0, r0, lsl pc
    1fe8:	10004bf0 	strdne	r4, [r0], -r0
    1fec:	0000003e 	andeq	r0, r0, lr, lsr r0
    1ff0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1ff4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1ff8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ffc:	0000002c 	andeq	r0, r0, ip, lsr #32
    2000:	00001f10 	andeq	r1, r0, r0, lsl pc
    2004:	10004c30 	andne	r4, r0, r0, lsr ip
    2008:	000000da 	ldrdeq	r0, [r0], -sl
    200c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    2010:	86078508 	strhi	r8, [r7], -r8, lsl #10
    2014:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    2018:	8a038904 	bhi	e4430 <__HEAP_SIZE+0xe3430>
    201c:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    2020:	0207f00e 	andeq	pc, r7, #14
    2024:	200e0a5b 	andcs	r0, lr, fp, asr sl
    2028:	00000b42 	andeq	r0, r0, r2, asr #22
    202c:	0000000c 	andeq	r0, r0, ip
    2030:	00001f10 	andeq	r1, r0, r0, lsl pc
    2034:	10004d0c 	andne	r4, r0, ip, lsl #26
    2038:	00000004 	andeq	r0, r0, r4
    203c:	00000024 	andeq	r0, r0, r4, lsr #32
    2040:	00001f10 	andeq	r1, r0, r0, lsl pc
    2044:	10004d10 	andne	r4, r0, r0, lsl sp
    2048:	00000066 	andeq	r0, r0, r6, rrx
    204c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    2050:	86048505 	strhi	r8, [r4], -r5, lsl #10
    2054:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    2058:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    205c:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    2060:	000b4114 	andeq	r4, fp, r4, lsl r1
    2064:	00000018 	andeq	r0, r0, r8, lsl r0
    2068:	00001f10 	andeq	r1, r0, r0, lsl pc
    206c:	10004d78 	andne	r4, r0, r8, ror sp
    2070:	00000012 	andeq	r0, r0, r2, lsl r0
    2074:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    2078:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    207c:	00000000 	andeq	r0, r0, r0
    2080:	00000018 	andeq	r0, r0, r8, lsl r0
    2084:	00001f10 	andeq	r1, r0, r0, lsl pc
    2088:	10004d8c 	andne	r4, r0, ip, lsl #27
    208c:	00000044 	andeq	r0, r0, r4, asr #32
    2090:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2094:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2098:	00018e02 	andeq	r8, r1, r2, lsl #28
    209c:	0000000c 	andeq	r0, r0, ip
    20a0:	00001f10 	andeq	r1, r0, r0, lsl pc
    20a4:	10004dd0 	ldrdne	r4, [r0], -r0
    20a8:	00000012 	andeq	r0, r0, r2, lsl r0
    20ac:	0000000c 	andeq	r0, r0, ip
    20b0:	00001f10 	andeq	r1, r0, r0, lsl pc
    20b4:	10004de4 	andne	r4, r0, r4, ror #27
    20b8:	00000002 	andeq	r0, r0, r2
    20bc:	0000000c 	andeq	r0, r0, ip
    20c0:	00001f10 	andeq	r1, r0, r0, lsl pc
    20c4:	10004de8 	andne	r4, r0, r8, ror #27
    20c8:	0000000c 	andeq	r0, r0, ip
    20cc:	0000000c 	andeq	r0, r0, ip
    20d0:	00001f10 	andeq	r1, r0, r0, lsl pc
    20d4:	10004df4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
    20d8:	00000034 	andeq	r0, r0, r4, lsr r0
    20dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    20e0:	00001f10 	andeq	r1, r0, r0, lsl pc
    20e4:	10004e28 	andne	r4, r0, r8, lsr #28
    20e8:	00000018 	andeq	r0, r0, r8, lsl r0
    20ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    20f0:	41018e02 	tstmi	r1, r2, lsl #28
    20f4:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    20f8:	00000008 	andeq	r0, r0, r8
    20fc:	0000000c 	andeq	r0, r0, ip
    2100:	00001f10 	andeq	r1, r0, r0, lsl pc
    2104:	10004e40 	andne	r4, r0, r0, asr #28
    2108:	00000034 	andeq	r0, r0, r4, lsr r0
    210c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2110:	00001f10 	andeq	r1, r0, r0, lsl pc
    2114:	10004e74 	andne	r4, r0, r4, ror lr
    2118:	00000018 	andeq	r0, r0, r8, lsl r0
    211c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2120:	41018e02 	tstmi	r1, r2, lsl #28
    2124:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    2128:	00000008 	andeq	r0, r0, r8
    212c:	00000020 	andeq	r0, r0, r0, lsr #32
    2130:	00001f10 	andeq	r1, r0, r0, lsl pc
    2134:	10004e8c 	andne	r4, r0, ip, lsl #29
    2138:	0000007c 	andeq	r0, r0, ip, ror r0
    213c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    2140:	86048505 	strhi	r8, [r4], -r5, lsl #10
    2144:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    2148:	d00e4301 	andle	r4, lr, r1, lsl #6
    214c:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    2150:	00000030 	andeq	r0, r0, r0, lsr r0
    2154:	00001f10 	andeq	r1, r0, r0, lsl pc
    2158:	10004f08 	andne	r4, r0, r8, lsl #30
    215c:	000002c8 	andeq	r0, r0, r8, asr #5
    2160:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    2164:	86088509 	strhi	r8, [r8], -r9, lsl #10
    2168:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    216c:	8a048905 	bhi	124588 <__RAM_SIZE+0x24588>
    2170:	8e028b03 	vmlahi.f64	d8, d2, d3
    2174:	480e4201 	stmdami	lr, {r0, r9, lr}
    2178:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    217c:	0a710b42 	beq	1c44e8c <__RAM_SIZE+0x1b44e8c>
    2180:	0b42240e 	bleq	108b1c0 <__RAM_SIZE+0xf8b1c0>
    2184:	0000000c 	andeq	r0, r0, ip
    2188:	00001f10 	andeq	r1, r0, r0, lsl pc
    218c:	100051d0 	ldrdne	r5, [r0], -r0
    2190:	00000004 	andeq	r0, r0, r4
    2194:	0000000c 	andeq	r0, r0, ip
    2198:	00001f10 	andeq	r1, r0, r0, lsl pc
    219c:	100051d4 	ldrdne	r5, [r0], -r4
    21a0:	00000004 	andeq	r0, r0, r4
    21a4:	0000000c 	andeq	r0, r0, ip
    21a8:	00001f10 	andeq	r1, r0, r0, lsl pc
    21ac:	100051d8 	ldrdne	r5, [r0], -r8
    21b0:	00000004 	andeq	r0, r0, r4
    21b4:	0000003c 	andeq	r0, r0, ip, lsr r0
    21b8:	00001f10 	andeq	r1, r0, r0, lsl pc
    21bc:	100051dc 	ldrdne	r5, [r0], -ip
    21c0:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    21c4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    21c8:	86068507 	strhi	r8, [r6], -r7, lsl #10
    21cc:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    21d0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    21d4:	a80e4201 	stmdage	lr, {r0, r9, lr}
    21d8:	0e0a7102 	adfeqe	f7, f2, f2
    21dc:	6b0b421c 	blvs	2d2a54 <__RAM_SIZE+0x1d2a54>
    21e0:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    21e4:	0a48020b 	beq	1202a18 <__RAM_SIZE+0x1102a18>
    21e8:	0b421c0e 	bleq	1089228 <__RAM_SIZE+0xf89228>
    21ec:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    21f0:	00000b42 	andeq	r0, r0, r2, asr #22
    21f4:	0000000c 	andeq	r0, r0, ip
    21f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    2200:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2204:	00000018 	andeq	r0, r0, r8, lsl r0
    2208:	000021f4 	strdeq	r2, [r0], -r4
    220c:	1000563c 	andne	r5, r0, ip, lsr r6
    2210:	0000003c 	andeq	r0, r0, ip, lsr r0
    2214:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    2218:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    221c:	00000000 	andeq	r0, r0, r0
    2220:	0000001c 	andeq	r0, r0, ip, lsl r0
    2224:	000021f4 	strdeq	r2, [r0], -r4
    2228:	10005678 	andne	r5, r0, r8, ror r6
    222c:	00000018 	andeq	r0, r0, r8, lsl r0
    2230:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2234:	41018e02 	tstmi	r1, r2, lsl #28
    2238:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    223c:	00000008 	andeq	r0, r0, r8
    2240:	0000000c 	andeq	r0, r0, ip
    2244:	000021f4 	strdeq	r2, [r0], -r4
    2248:	10005690 	mulne	r0, r0, r6
    224c:	00000002 	andeq	r0, r0, r2
    2250:	00000028 	andeq	r0, r0, r8, lsr #32
    2254:	000021f4 	strdeq	r2, [r0], -r4
    2258:	10005694 	mulne	r0, r4, r6
    225c:	000002ca 	andeq	r0, r0, sl, asr #5
    2260:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2264:	86068507 	strhi	r8, [r6], -r7, lsl #10
    2268:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    226c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    2270:	300e4301 	andcc	r4, lr, r1, lsl #6
    2274:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    2278:	00000b42 	andeq	r0, r0, r2, asr #22
    227c:	00000018 	andeq	r0, r0, r8, lsl r0
    2280:	000021f4 	strdeq	r2, [r0], -r4
    2284:	10005960 	andne	r5, r0, r0, ror #18
    2288:	00000030 	andeq	r0, r0, r0, lsr r0
    228c:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    2290:	180e4101 	stmdane	lr, {r0, r8, lr}
    2294:	00040e4c 	andeq	r0, r4, ip, asr #28
    2298:	00000014 	andeq	r0, r0, r4, lsl r0
    229c:	000021f4 	strdeq	r2, [r0], -r4
    22a0:	10005990 	mulne	r0, r0, r9
    22a4:	0000000a 	andeq	r0, r0, sl
    22a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    22ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    22b0:	00000014 	andeq	r0, r0, r4, lsl r0
    22b4:	000021f4 	strdeq	r2, [r0], -r4
    22b8:	1000599c 	mulne	r0, ip, r9
    22bc:	00000012 	andeq	r0, r0, r2, lsl r0
    22c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    22c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22c8:	00000014 	andeq	r0, r0, r4, lsl r0
    22cc:	000021f4 	strdeq	r2, [r0], -r4
    22d0:	00000000 	andeq	r0, r0, r0
    22d4:	00000006 	andeq	r0, r0, r6
    22d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    22dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    22e0:	00000014 	andeq	r0, r0, r4, lsl r0
    22e4:	000021f4 	strdeq	r2, [r0], -r4
    22e8:	00000000 	andeq	r0, r0, r0
    22ec:	00000006 	andeq	r0, r0, r6
    22f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    22f4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22f8:	0000000c 	andeq	r0, r0, ip
    22fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2300:	7c020001 	stcvc	0, cr0, [r2], {1}
    2304:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2308:	00000014 	andeq	r0, r0, r4, lsl r0
    230c:	000022f8 	strdeq	r2, [r0], -r8
    2310:	100059b4 			; <UNDEFINED> instruction: 0x100059b4
    2314:	0000000e 	andeq	r0, r0, lr
    2318:	83080e42 	movwhi	r0, #36418	; 0x8e42
    231c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2320:	0000000c 	andeq	r0, r0, ip
    2324:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2328:	7c020001 	stcvc	0, cr0, [r2], {1}
    232c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2330:	00000018 	andeq	r0, r0, r8, lsl r0
    2334:	00002320 	andeq	r2, r0, r0, lsr #6
    2338:	00000000 	andeq	r0, r0, r0
    233c:	00000030 	andeq	r0, r0, r0, lsr r0
    2340:	83100e41 	tsthi	r0, #1040	; 0x410
    2344:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2348:	00018e02 	andeq	r8, r1, r2, lsl #28
    234c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2350:	00002320 	andeq	r2, r0, r0, lsr #6
    2354:	00000000 	andeq	r0, r0, r0
    2358:	0000004c 	andeq	r0, r0, ip, asr #32
    235c:	83180e42 	tsthi	r8, #1056	; 0x420
    2360:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    2364:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    2368:	00018e02 	andeq	r8, r1, r2, lsl #28
    236c:	00000024 	andeq	r0, r0, r4, lsr #32
    2370:	00002320 	andeq	r2, r0, r0, lsr #6
    2374:	00000000 	andeq	r0, r0, r0
    2378:	00000056 	andeq	r0, r0, r6, asr r0
    237c:	83100e42 	tsthi	r0, #1056	; 0x420
    2380:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2384:	5c018e02 	stcpl	14, cr8, [r1], {2}
    2388:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    238c:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2390:	0000000b 	andeq	r0, r0, fp
    2394:	00000020 	andeq	r0, r0, r0, lsr #32
    2398:	00002320 	andeq	r2, r0, r0, lsr #6
    239c:	00000000 	andeq	r0, r0, r0
    23a0:	00000064 	andeq	r0, r0, r4, rrx
    23a4:	83100e45 	tsthi	r0, #1104	; 0x450
    23a8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    23ac:	6a018e02 	bvs	65bbc <__HEAP_SIZE+0x64bbc>
    23b0:	c4c3000e 	strbgt	r0, [r3], #14
    23b4:	0000cec5 	andeq	ip, r0, r5, asr #29
    23b8:	00000024 	andeq	r0, r0, r4, lsr #32
    23bc:	00002320 	andeq	r2, r0, r0, lsr #6
    23c0:	100059c4 	andne	r5, r0, r4, asr #19
    23c4:	0000005c 	andeq	r0, r0, ip, asr r0
    23c8:	83100e41 	tsthi	r0, #1040	; 0x410
    23cc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    23d0:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    23d4:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    23d8:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    23dc:	0000000b 	andeq	r0, r0, fp
    23e0:	00000018 	andeq	r0, r0, r8, lsl r0
    23e4:	00002320 	andeq	r2, r0, r0, lsr #6
    23e8:	00000000 	andeq	r0, r0, r0
    23ec:	00000054 	andeq	r0, r0, r4, asr r0
    23f0:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    23f4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    23f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    23fc:	00000018 	andeq	r0, r0, r8, lsl r0
    2400:	00002320 	andeq	r2, r0, r0, lsr #6
    2404:	00000000 	andeq	r0, r0, r0
    2408:	00000038 	andeq	r0, r0, r8, lsr r0
    240c:	83100e41 	tsthi	r0, #1040	; 0x410
    2410:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2414:	00018e02 	andeq	r8, r1, r2, lsl #28
    2418:	00000018 	andeq	r0, r0, r8, lsl r0
    241c:	00002320 	andeq	r2, r0, r0, lsr #6
    2420:	00000000 	andeq	r0, r0, r0
    2424:	00000068 	andeq	r0, r0, r8, rrx
    2428:	83100e41 	tsthi	r0, #1040	; 0x410
    242c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2430:	00018e02 	andeq	r8, r1, r2, lsl #28
    2434:	0000000c 	andeq	r0, r0, ip
    2438:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    243c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2440:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2444:	00000018 	andeq	r0, r0, r8, lsl r0
    2448:	00002434 	andeq	r2, r0, r4, lsr r4
    244c:	10005a20 	andne	r5, r0, r0, lsr #20
    2450:	0000002c 	andeq	r0, r0, ip, lsr #32
    2454:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2458:	86038504 	strhi	r8, [r3], -r4, lsl #10
    245c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2460:	0000000c 	andeq	r0, r0, ip
    2464:	00002434 	andeq	r2, r0, r4, lsr r4
    2468:	10005a4c 	andne	r5, r0, ip, asr #20
    246c:	00000004 	andeq	r0, r0, r4


.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10002eb9 			; <UNDEFINED> instruction: 0x10002eb9
10000008:	10002f0d 	andne	r2, r0, sp, lsl #30
1000000c:	10002f91 	mulne	r0, r1, pc	; <UNPREDICTABLE>
10000010:	10002f0d 	andne	r2, r0, sp, lsl #30
10000014:	10002f0d 	andne	r2, r0, sp, lsl #30
10000018:	10002f95 	mulne	r0, r5, pc	; <UNPREDICTABLE>
1000001c:	10002f0d 	andne	r2, r0, sp, lsl #30
	...
1000002c:	10002f0d 	andne	r2, r0, sp, lsl #30
10000030:	10002f0d 	andne	r2, r0, sp, lsl #30
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10003035 	andne	r3, r0, r5, lsr r0
1000003c:	10002f85 	andne	r2, r0, r5, lsl #31
10000040:	10002f0d 	andne	r2, r0, sp, lsl #30
10000044:	10002f0d 	andne	r2, r0, sp, lsl #30
10000048:	10002f0d 	andne	r2, r0, sp, lsl #30
1000004c:	10002f0d 	andne	r2, r0, sp, lsl #30
10000050:	10002f0d 	andne	r2, r0, sp, lsl #30
10000054:	10002f0d 	andne	r2, r0, sp, lsl #30
10000058:	10002f0d 	andne	r2, r0, sp, lsl #30
1000005c:	10002f0d 	andne	r2, r0, sp, lsl #30
10000060:	10002f0d 	andne	r2, r0, sp, lsl #30
10000064:	10002f0d 	andne	r2, r0, sp, lsl #30
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000074 	stmdacc	r0, {r2, r4, r5, r6}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10004f94 	mulne	r0, r4, pc	; <UNPREDICTABLE>

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000078 	stmdacc	r0, {r3, r4, r5, r6}
100007fc:	10004f94 	mulne	r0, r4, pc	; <UNPREDICTABLE>

10000800 <tx_task_entry>:
void test5(void) {
    printf("this is %s.\r\n", __func__);
    test4();
}

static void tx_task_entry(ULONG thread_input) {
10000800:	b510      	push	{r4, lr}
    int counter = 0;
10000802:	2100      	movs	r1, #0
    while(1) {
        printf("hello threadx %d\r\n", counter++);
10000804:	1c4c      	adds	r4, r1, #1
10000806:	4804      	ldr	r0, [pc, #16]	; (10000818 <tx_task_entry+0x18>)
10000808:	f001 f914 	bl	10001a34 <printf>
        tx_thread_sleep(1000);
1000080c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
10000810:	f001 fb9c 	bl	10001f4c <_tx_thread_sleep>
        printf("hello threadx %d\r\n", counter++);
10000814:	4621      	mov	r1, r4
10000816:	e7f5      	b.n	10000804 <tx_task_entry+0x4>
10000818:	10004e74 	andne	r4, r0, r4, ror lr

1000081c <tx_application_define>:
    }
}

void tx_application_define(void *first_unused_memory) {
1000081c:	b530      	push	{r4, r5, lr}
1000081e:	b08b      	sub	sp, #44	; 0x2c
    CHAR *tx_stack = TX_NULL;
10000820:	2400      	movs	r4, #0
10000822:	9409      	str	r4, [sp, #36]	; 0x24
    static TX_THREAD tx_task;
    static TX_BYTE_POOL tx_pool;
    static UCHAR tx_memory[4096];

    tx_byte_pool_create(&tx_pool, "tx_pool", tx_memory, sizeof(tx_memory));
10000824:	4d14      	ldr	r5, [pc, #80]	; (10000878 <tx_application_define+0x5c>)
10000826:	2334      	movs	r3, #52	; 0x34
10000828:	9300      	str	r3, [sp, #0]
1000082a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
1000082e:	4a13      	ldr	r2, [pc, #76]	; (1000087c <tx_application_define+0x60>)
10000830:	4913      	ldr	r1, [pc, #76]	; (10000880 <tx_application_define+0x64>)
10000832:	4628      	mov	r0, r5
10000834:	f002 fa22 	bl	10002c7c <_txe_byte_pool_create>
    tx_byte_allocate(&tx_pool, (VOID **) &tx_stack, 1024, TX_NO_WAIT);
10000838:	4623      	mov	r3, r4
1000083a:	f44f 6280 	mov.w	r2, #1024	; 0x400
1000083e:	a909      	add	r1, sp, #36	; 0x24
10000840:	4628      	mov	r0, r5
10000842:	f002 f9d1 	bl	10002be8 <_txe_byte_allocate>
    tx_thread_create(&tx_task, "tx_task", tx_task_entry, 0, tx_stack, 1024, 1, 1, 10, TX_AUTO_START);
10000846:	23d4      	movs	r3, #212	; 0xd4
10000848:	9306      	str	r3, [sp, #24]
1000084a:	2301      	movs	r3, #1
1000084c:	9305      	str	r3, [sp, #20]
1000084e:	220a      	movs	r2, #10
10000850:	9204      	str	r2, [sp, #16]
10000852:	9303      	str	r3, [sp, #12]
10000854:	9302      	str	r3, [sp, #8]
10000856:	f44f 6380 	mov.w	r3, #1024	; 0x400
1000085a:	9301      	str	r3, [sp, #4]
1000085c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000085e:	9300      	str	r3, [sp, #0]
10000860:	4623      	mov	r3, r4
10000862:	4a08      	ldr	r2, [pc, #32]	; (10000884 <tx_application_define+0x68>)
10000864:	4908      	ldr	r1, [pc, #32]	; (10000888 <tx_application_define+0x6c>)
10000866:	4809      	ldr	r0, [pc, #36]	; (1000088c <tx_application_define+0x70>)
10000868:	f002 fa72 	bl	10002d50 <_txe_thread_create>
    tx_block_release(tx_stack);
1000086c:	9809      	ldr	r0, [sp, #36]	; 0x24
1000086e:	f002 f9a7 	bl	10002bc0 <_txe_block_release>
}
10000872:	b00b      	add	sp, #44	; 0x2c
10000874:	bd30      	pop	{r4, r5, pc}
10000876:	bf00      	nop
10000878:	38001090 	stmdacc	r0, {r4, r7, ip}
1000087c:	38000090 	stmdacc	r0, {r4, r7}
10000880:	10004e88 	andne	r4, r0, r8, lsl #29
10000884:	10000801 	andne	r0, r0, r1, lsl #16
10000888:	10004e90 	mulne	r0, r0, lr
1000088c:	380010c4 	stmdacc	r0, {r2, r6, r7, ip}

10000890 <main>:

int main(void) {
10000890:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
10000892:	f001 f8ff 	bl	10001a94 <uart_init>

    printf("Start\r\n");
10000896:	4806      	ldr	r0, [pc, #24]	; (100008b0 <main+0x20>)
10000898:	f001 f8ec 	bl	10001a74 <puts>
    tx_kernel_enter();
1000089c:	f001 fa68 	bl	10001d70 <_tx_initialize_kernel_enter>
    int count = 0;
100008a0:	2100      	movs	r1, #0

    while (1) {
        __NOP();
100008a2:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
100008a4:	1c4c      	adds	r4, r1, #1
100008a6:	4803      	ldr	r0, [pc, #12]	; (100008b4 <main+0x24>)
100008a8:	f001 f8c4 	bl	10001a34 <printf>
100008ac:	4621      	mov	r1, r4
100008ae:	e7f8      	b.n	100008a2 <main+0x12>
100008b0:	10004e98 	mulne	r0, r8, lr
100008b4:	10004ea0 	andne	r4, r0, r0, lsr #29

100008b8 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
100008b8:	4b06      	ldr	r3, [pc, #24]	; (100008d4 <SystemInit+0x1c>)
100008ba:	4a07      	ldr	r2, [pc, #28]	; (100008d8 <SystemInit+0x20>)
100008bc:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
100008be:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
100008c2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
100008c6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
100008ca:	4b04      	ldr	r3, [pc, #16]	; (100008dc <SystemInit+0x24>)
100008cc:	4a04      	ldr	r2, [pc, #16]	; (100008e0 <SystemInit+0x28>)
100008ce:	601a      	str	r2, [r3, #0]
}
100008d0:	4770      	bx	lr
100008d2:	bf00      	nop
100008d4:	e000ed00 	and	lr, r0, r0, lsl #26
100008d8:	10000000 	andne	r0, r0, r0
100008dc:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100008e0:	017d7840 	cmneq	sp, r0, asr #16

100008e4 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100008e4:	4770      	bx	lr

100008e6 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100008e6:	4601      	mov	r1, r0
  unsigned int i = 0U;
100008e8:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100008ea:	e007      	b.n	100008fc <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100008ec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100008f0:	1c53      	adds	r3, r2, #1
100008f2:	600b      	str	r3, [r1, #0]
100008f4:	7813      	ldrb	r3, [r2, #0]
100008f6:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100008fa:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100008fc:	680a      	ldr	r2, [r1, #0]
100008fe:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
10000900:	3b30      	subs	r3, #48	; 0x30
10000902:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
10000904:	2b09      	cmp	r3, #9
10000906:	d9f1      	bls.n	100008ec <_atoi+0x6>
  }
  return i;
}
10000908:	4770      	bx	lr

1000090a <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
1000090a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000090e:	b083      	sub	sp, #12
10000910:	4605      	mov	r5, r0
10000912:	460e      	mov	r6, r1
10000914:	4693      	mov	fp, r2
10000916:	461f      	mov	r7, r3
10000918:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
1000091c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000091e:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
10000922:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000924:	f013 0f03 	tst.w	r3, #3
10000928:	d119      	bne.n	1000095e <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
1000092a:	46a0      	mov	r8, r4
1000092c:	9201      	str	r2, [sp, #4]
1000092e:	45c8      	cmp	r8, r9
10000930:	d209      	bcs.n	10000946 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000932:	f102 0b01 	add.w	fp, r2, #1
10000936:	463b      	mov	r3, r7
10000938:	4631      	mov	r1, r6
1000093a:	2020      	movs	r0, #32
1000093c:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
1000093e:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000942:	465a      	mov	r2, fp
10000944:	e7f3      	b.n	1000092e <_out_rev+0x24>
10000946:	f8dd b004 	ldr.w	fp, [sp, #4]
1000094a:	e008      	b.n	1000095e <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
1000094c:	3c01      	subs	r4, #1
1000094e:	f102 0801 	add.w	r8, r2, #1
10000952:	463b      	mov	r3, r7
10000954:	4631      	mov	r1, r6
10000956:	f81a 0004 	ldrb.w	r0, [sl, r4]
1000095a:	47a8      	blx	r5
1000095c:	4642      	mov	r2, r8
  while (len) {
1000095e:	2c00      	cmp	r4, #0
10000960:	d1f4      	bne.n	1000094c <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000962:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000964:	f013 0f02 	tst.w	r3, #2
10000968:	d103      	bne.n	10000972 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
1000096a:	4610      	mov	r0, r2
1000096c:	b003      	add	sp, #12
1000096e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000972:	eba2 030b 	sub.w	r3, r2, fp
10000976:	454b      	cmp	r3, r9
10000978:	d2f7      	bcs.n	1000096a <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
1000097a:	1c54      	adds	r4, r2, #1
1000097c:	463b      	mov	r3, r7
1000097e:	4631      	mov	r1, r6
10000980:	2020      	movs	r0, #32
10000982:	47a8      	blx	r5
10000984:	4622      	mov	r2, r4
10000986:	e7f4      	b.n	10000972 <_out_rev+0x68>

10000988 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000988:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1000098c:	b085      	sub	sp, #20
1000098e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000990:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000992:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000996:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
1000099a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000099e:	9f11      	ldr	r7, [sp, #68]	; 0x44
100009a0:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
100009a2:	f016 0f02 	tst.w	r6, #2
100009a6:	d121      	bne.n	100009ec <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
100009a8:	b17f      	cbz	r7, 100009ca <_ntoa_format+0x42>
100009aa:	f016 0f01 	tst.w	r6, #1
100009ae:	d00c      	beq.n	100009ca <_ntoa_format+0x42>
100009b0:	f1b9 0f00 	cmp.w	r9, #0
100009b4:	d102      	bne.n	100009bc <_ntoa_format+0x34>
100009b6:	f016 0f0c 	tst.w	r6, #12
100009ba:	d006      	beq.n	100009ca <_ntoa_format+0x42>
      width--;
100009bc:	3f01      	subs	r7, #1
100009be:	e004      	b.n	100009ca <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
100009c0:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009c4:	f805 c004 	strb.w	ip, [r5, r4]
100009c8:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009ca:	4574      	cmp	r4, lr
100009cc:	d201      	bcs.n	100009d2 <_ntoa_format+0x4a>
100009ce:	2c1f      	cmp	r4, #31
100009d0:	d9f6      	bls.n	100009c0 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009d2:	f016 0f01 	tst.w	r6, #1
100009d6:	d009      	beq.n	100009ec <_ntoa_format+0x64>
100009d8:	42bc      	cmp	r4, r7
100009da:	d207      	bcs.n	100009ec <_ntoa_format+0x64>
100009dc:	2c1f      	cmp	r4, #31
100009de:	d805      	bhi.n	100009ec <_ntoa_format+0x64>
      buf[len++] = '0';
100009e0:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009e4:	f805 c004 	strb.w	ip, [r5, r4]
100009e8:	3401      	adds	r4, #1
100009ea:	e7f2      	b.n	100009d2 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
100009ec:	f016 0f10 	tst.w	r6, #16
100009f0:	d017      	beq.n	10000a22 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
100009f2:	f416 6f80 	tst.w	r6, #1024	; 0x400
100009f6:	d104      	bne.n	10000a02 <_ntoa_format+0x7a>
100009f8:	b11c      	cbz	r4, 10000a02 <_ntoa_format+0x7a>
100009fa:	4574      	cmp	r4, lr
100009fc:	d024      	beq.n	10000a48 <_ntoa_format+0xc0>
100009fe:	42bc      	cmp	r4, r7
10000a00:	d022      	beq.n	10000a48 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a02:	f1b8 0f10 	cmp.w	r8, #16
10000a06:	d02b      	beq.n	10000a60 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a08:	f1b8 0f10 	cmp.w	r8, #16
10000a0c:	d033      	beq.n	10000a76 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a0e:	f1b8 0f02 	cmp.w	r8, #2
10000a12:	d03b      	beq.n	10000a8c <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000a14:	2c1f      	cmp	r4, #31
10000a16:	d804      	bhi.n	10000a22 <_ntoa_format+0x9a>
      buf[len++] = '0';
10000a18:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a1c:	f805 c004 	strb.w	ip, [r5, r4]
10000a20:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000a22:	2c1f      	cmp	r4, #31
10000a24:	d807      	bhi.n	10000a36 <_ntoa_format+0xae>
    if (negative) {
10000a26:	f1b9 0f00 	cmp.w	r9, #0
10000a2a:	d037      	beq.n	10000a9c <_ntoa_format+0x114>
      buf[len++] = '-';
10000a2c:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000a30:	f805 c004 	strb.w	ip, [r5, r4]
10000a34:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000a36:	9603      	str	r6, [sp, #12]
10000a38:	9702      	str	r7, [sp, #8]
10000a3a:	9401      	str	r4, [sp, #4]
10000a3c:	9500      	str	r5, [sp, #0]
10000a3e:	f7ff ff64 	bl	1000090a <_out_rev>
}
10000a42:	b005      	add	sp, #20
10000a44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000a48:	f1b4 0c01 	subs.w	ip, r4, #1
10000a4c:	d006      	beq.n	10000a5c <_ntoa_format+0xd4>
10000a4e:	f1b8 0f10 	cmp.w	r8, #16
10000a52:	d001      	beq.n	10000a58 <_ntoa_format+0xd0>
      len--;
10000a54:	4664      	mov	r4, ip
10000a56:	e7d4      	b.n	10000a02 <_ntoa_format+0x7a>
        len--;
10000a58:	3c02      	subs	r4, #2
10000a5a:	e7d2      	b.n	10000a02 <_ntoa_format+0x7a>
      len--;
10000a5c:	4664      	mov	r4, ip
10000a5e:	e7d0      	b.n	10000a02 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a60:	f016 0f20 	tst.w	r6, #32
10000a64:	d1d0      	bne.n	10000a08 <_ntoa_format+0x80>
10000a66:	2c1f      	cmp	r4, #31
10000a68:	d8ce      	bhi.n	10000a08 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000a6a:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000a6e:	f805 c004 	strb.w	ip, [r5, r4]
10000a72:	3401      	adds	r4, #1
10000a74:	e7ce      	b.n	10000a14 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a76:	f016 0f20 	tst.w	r6, #32
10000a7a:	d0c8      	beq.n	10000a0e <_ntoa_format+0x86>
10000a7c:	2c1f      	cmp	r4, #31
10000a7e:	d8c6      	bhi.n	10000a0e <_ntoa_format+0x86>
      buf[len++] = 'X';
10000a80:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000a84:	f805 c004 	strb.w	ip, [r5, r4]
10000a88:	3401      	adds	r4, #1
10000a8a:	e7c3      	b.n	10000a14 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a8c:	2c1f      	cmp	r4, #31
10000a8e:	d8c1      	bhi.n	10000a14 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000a90:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000a94:	f805 c004 	strb.w	ip, [r5, r4]
10000a98:	3401      	adds	r4, #1
10000a9a:	e7bb      	b.n	10000a14 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000a9c:	f016 0f04 	tst.w	r6, #4
10000aa0:	d005      	beq.n	10000aae <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000aa2:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000aa6:	f805 c004 	strb.w	ip, [r5, r4]
10000aaa:	3401      	adds	r4, #1
10000aac:	e7c3      	b.n	10000a36 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000aae:	f016 0f08 	tst.w	r6, #8
10000ab2:	d0c0      	beq.n	10000a36 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000ab4:	f04f 0c20 	mov.w	ip, #32
10000ab8:	f805 c004 	strb.w	ip, [r5, r4]
10000abc:	3401      	adds	r4, #1
10000abe:	e7ba      	b.n	10000a36 <_ntoa_format+0xae>

10000ac0 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
10000ac2:	b091      	sub	sp, #68	; 0x44
10000ac4:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000ac6:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000ac8:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000aca:	b90c      	cbnz	r4, 10000ad0 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000acc:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000ad0:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000ad4:	d016      	beq.n	10000b04 <_ntoa_long+0x44>
10000ad6:	b364      	cbz	r4, 10000b32 <_ntoa_long+0x72>
10000ad8:	f04f 0e00 	mov.w	lr, #0
10000adc:	e012      	b.n	10000b04 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000ade:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000ae2:	fa5f fc8c 	uxtb.w	ip, ip
10000ae6:	f10e 0701 	add.w	r7, lr, #1
10000aea:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000aee:	44ee      	add	lr, sp
10000af0:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000af4:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000af8:	42ac      	cmp	r4, r5
10000afa:	d31b      	bcc.n	10000b34 <_ntoa_long+0x74>
10000afc:	2f1f      	cmp	r7, #31
10000afe:	d819      	bhi.n	10000b34 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b00:	46be      	mov	lr, r7
      value /= base;
10000b02:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000b04:	fbb4 fcf5 	udiv	ip, r4, r5
10000b08:	fb05 4c1c 	mls	ip, r5, ip, r4
10000b0c:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b10:	f1bc 0f09 	cmp.w	ip, #9
10000b14:	d9e3      	bls.n	10000ade <_ntoa_long+0x1e>
10000b16:	f016 0f20 	tst.w	r6, #32
10000b1a:	d008      	beq.n	10000b2e <_ntoa_long+0x6e>
10000b1c:	2741      	movs	r7, #65	; 0x41
10000b1e:	44bc      	add	ip, r7
10000b20:	fa5f fc8c 	uxtb.w	ip, ip
10000b24:	f1ac 0c0a 	sub.w	ip, ip, #10
10000b28:	fa5f fc8c 	uxtb.w	ip, ip
10000b2c:	e7db      	b.n	10000ae6 <_ntoa_long+0x26>
10000b2e:	2761      	movs	r7, #97	; 0x61
10000b30:	e7f5      	b.n	10000b1e <_ntoa_long+0x5e>
  size_t len = 0U;
10000b32:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000b34:	9606      	str	r6, [sp, #24]
10000b36:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000b38:	9405      	str	r4, [sp, #20]
10000b3a:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000b3c:	9404      	str	r4, [sp, #16]
10000b3e:	9503      	str	r5, [sp, #12]
10000b40:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000b44:	9402      	str	r4, [sp, #8]
10000b46:	9701      	str	r7, [sp, #4]
10000b48:	ac08      	add	r4, sp, #32
10000b4a:	9400      	str	r4, [sp, #0]
10000b4c:	f7ff ff1c 	bl	10000988 <_ntoa_format>
}
10000b50:	b011      	add	sp, #68	; 0x44
10000b52:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000b54 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000b58:	b095      	sub	sp, #84	; 0x54
10000b5a:	9009      	str	r0, [sp, #36]	; 0x24
10000b5c:	910a      	str	r1, [sp, #40]	; 0x28
10000b5e:	920b      	str	r2, [sp, #44]	; 0x2c
10000b60:	469b      	mov	fp, r3
10000b62:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000b64:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000b66:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000b68:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000b6c:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000b70:	ea55 0306 	orrs.w	r3, r5, r6
10000b74:	d101      	bne.n	10000b7a <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000b76:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000b7a:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000b7e:	d01f      	beq.n	10000bc0 <_ntoa_long_long+0x6c>
10000b80:	ea55 0306 	orrs.w	r3, r5, r6
10000b84:	d030      	beq.n	10000be8 <_ntoa_long_long+0x94>
10000b86:	2400      	movs	r4, #0
10000b88:	e01a      	b.n	10000bc0 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b8a:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000b8e:	b2d2      	uxtb	r2, r2
10000b90:	f104 0901 	add.w	r9, r4, #1
10000b94:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000b98:	eb0d 0403 	add.w	r4, sp, r3
10000b9c:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000ba0:	463a      	mov	r2, r7
10000ba2:	4643      	mov	r3, r8
10000ba4:	4628      	mov	r0, r5
10000ba6:	4631      	mov	r1, r6
10000ba8:	f002 ffbe 	bl	10003b28 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000bac:	42bd      	cmp	r5, r7
10000bae:	eb76 0308 	sbcs.w	r3, r6, r8
10000bb2:	d31b      	bcc.n	10000bec <_ntoa_long_long+0x98>
10000bb4:	f1b9 0f1f 	cmp.w	r9, #31
10000bb8:	d818      	bhi.n	10000bec <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bba:	464c      	mov	r4, r9
      value /= base;
10000bbc:	4605      	mov	r5, r0
10000bbe:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000bc0:	463a      	mov	r2, r7
10000bc2:	4643      	mov	r3, r8
10000bc4:	4628      	mov	r0, r5
10000bc6:	4631      	mov	r1, r6
10000bc8:	f002 ffae 	bl	10003b28 <__aeabi_uldivmod>
10000bcc:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bce:	2b09      	cmp	r3, #9
10000bd0:	d9db      	bls.n	10000b8a <_ntoa_long_long+0x36>
10000bd2:	f01a 0f20 	tst.w	sl, #32
10000bd6:	d005      	beq.n	10000be4 <_ntoa_long_long+0x90>
10000bd8:	2241      	movs	r2, #65	; 0x41
10000bda:	441a      	add	r2, r3
10000bdc:	b2d2      	uxtb	r2, r2
10000bde:	3a0a      	subs	r2, #10
10000be0:	b2d2      	uxtb	r2, r2
10000be2:	e7d5      	b.n	10000b90 <_ntoa_long_long+0x3c>
10000be4:	2261      	movs	r2, #97	; 0x61
10000be6:	e7f8      	b.n	10000bda <_ntoa_long_long+0x86>
  size_t len = 0U;
10000be8:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000bec:	f8cd a018 	str.w	sl, [sp, #24]
10000bf0:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000bf2:	9305      	str	r3, [sp, #20]
10000bf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000bf6:	9304      	str	r3, [sp, #16]
10000bf8:	9703      	str	r7, [sp, #12]
10000bfa:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000bfe:	9302      	str	r3, [sp, #8]
10000c00:	f8cd 9004 	str.w	r9, [sp, #4]
10000c04:	ab0c      	add	r3, sp, #48	; 0x30
10000c06:	9300      	str	r3, [sp, #0]
10000c08:	465b      	mov	r3, fp
10000c0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000c0c:	990a      	ldr	r1, [sp, #40]	; 0x28
10000c0e:	9809      	ldr	r0, [sp, #36]	; 0x24
10000c10:	f7ff feba 	bl	10000988 <_ntoa_format>
}
10000c14:	b015      	add	sp, #84	; 0x54
10000c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10000c1a:	0000      	movs	r0, r0
10000c1c:	0000      	movs	r0, r0
	...

10000c20 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c24:	ed2d 8b02 	vpush	{d8}
10000c28:	b091      	sub	sp, #68	; 0x44
10000c2a:	4682      	mov	sl, r0
10000c2c:	460c      	mov	r4, r1
10000c2e:	4693      	mov	fp, r2
10000c30:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000c32:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000c36:	4610      	mov	r0, r2
10000c38:	4619      	mov	r1, r3
10000c3a:	f002 fefb 	bl	10003a34 <__aeabi_dcmpeq>
10000c3e:	2800      	cmp	r0, #0
10000c40:	f000 8107 	beq.w	10000e52 <_etoa+0x232>
10000c44:	f04f 32ff 	mov.w	r2, #4294967295
10000c48:	4bb1      	ldr	r3, [pc, #708]	; (10000f10 <_etoa+0x2f0>)
10000c4a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c4e:	f002 ff19 	bl	10003a84 <__aeabi_dcmpgt>
10000c52:	2800      	cmp	r0, #0
10000c54:	f040 80fd 	bne.w	10000e52 <_etoa+0x232>
10000c58:	f04f 32ff 	mov.w	r2, #4294967295
10000c5c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000c60:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c64:	f002 fef0 	bl	10003a48 <__aeabi_dcmplt>
10000c68:	2800      	cmp	r0, #0
10000c6a:	f040 80f2 	bne.w	10000e52 <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000c6e:	2200      	movs	r2, #0
10000c70:	2300      	movs	r3, #0
10000c72:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c76:	f002 fee7 	bl	10003a48 <__aeabi_dcmplt>
10000c7a:	2800      	cmp	r0, #0
10000c7c:	f040 80fe 	bne.w	10000e7c <_etoa+0x25c>
10000c80:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000c84:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000c88:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000c8a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000c8e:	930f      	str	r3, [sp, #60]	; 0x3c
10000c90:	d101      	bne.n	10000c96 <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000c92:	2306      	movs	r3, #6
10000c94:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000c96:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000c9a:	4602      	mov	r2, r0
10000c9c:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000ca0:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000ca4:	4690      	mov	r8, r2
10000ca6:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000caa:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000cae:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000cb2:	f002 fbed 	bl	10003490 <__aeabi_i2d>
10000cb6:	a384      	add	r3, pc, #528	; (adr r3, 10000ec8 <_etoa+0x2a8>)
10000cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cbc:	f002 fc52 	bl	10003564 <__aeabi_dmul>
10000cc0:	a383      	add	r3, pc, #524	; (adr r3, 10000ed0 <_etoa+0x2b0>)
10000cc2:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cc6:	f002 fa97 	bl	100031f8 <__adddf3>
10000cca:	4606      	mov	r6, r0
10000ccc:	460f      	mov	r7, r1
10000cce:	2200      	movs	r2, #0
10000cd0:	4b90      	ldr	r3, [pc, #576]	; (10000f14 <_etoa+0x2f4>)
10000cd2:	4640      	mov	r0, r8
10000cd4:	4649      	mov	r1, r9
10000cd6:	f002 fa8d 	bl	100031f4 <__aeabi_dsub>
10000cda:	a37f      	add	r3, pc, #508	; (adr r3, 10000ed8 <_etoa+0x2b8>)
10000cdc:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ce0:	f002 fc40 	bl	10003564 <__aeabi_dmul>
10000ce4:	4602      	mov	r2, r0
10000ce6:	460b      	mov	r3, r1
10000ce8:	4630      	mov	r0, r6
10000cea:	4639      	mov	r1, r7
10000cec:	f002 fa84 	bl	100031f8 <__adddf3>
10000cf0:	f002 fed2 	bl	10003a98 <__aeabi_d2iz>
10000cf4:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000cf6:	f002 fbcb 	bl	10003490 <__aeabi_i2d>
10000cfa:	4680      	mov	r8, r0
10000cfc:	4689      	mov	r9, r1
10000cfe:	a378      	add	r3, pc, #480	; (adr r3, 10000ee0 <_etoa+0x2c0>)
10000d00:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d04:	f002 fc2e 	bl	10003564 <__aeabi_dmul>
10000d08:	2200      	movs	r2, #0
10000d0a:	4b83      	ldr	r3, [pc, #524]	; (10000f18 <_etoa+0x2f8>)
10000d0c:	f002 fa74 	bl	100031f8 <__adddf3>
10000d10:	f002 fec2 	bl	10003a98 <__aeabi_d2iz>
10000d14:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000d16:	a374      	add	r3, pc, #464	; (adr r3, 10000ee8 <_etoa+0x2c8>)
10000d18:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d1c:	4640      	mov	r0, r8
10000d1e:	4649      	mov	r1, r9
10000d20:	f002 fc20 	bl	10003564 <__aeabi_dmul>
10000d24:	4680      	mov	r8, r0
10000d26:	4689      	mov	r9, r1
10000d28:	4638      	mov	r0, r7
10000d2a:	f002 fbb1 	bl	10003490 <__aeabi_i2d>
10000d2e:	a370      	add	r3, pc, #448	; (adr r3, 10000ef0 <_etoa+0x2d0>)
10000d30:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d34:	f002 fc16 	bl	10003564 <__aeabi_dmul>
10000d38:	4602      	mov	r2, r0
10000d3a:	460b      	mov	r3, r1
10000d3c:	4640      	mov	r0, r8
10000d3e:	4649      	mov	r1, r9
10000d40:	f002 fa58 	bl	100031f4 <__aeabi_dsub>
10000d44:	4680      	mov	r8, r0
10000d46:	4689      	mov	r9, r1
  const double z2 = z * z;
10000d48:	4602      	mov	r2, r0
10000d4a:	460b      	mov	r3, r1
10000d4c:	f002 fc0a 	bl	10003564 <__aeabi_dmul>
10000d50:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000d54:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000d58:	2100      	movs	r1, #0
10000d5a:	2200      	movs	r2, #0
10000d5c:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000d60:	053b      	lsls	r3, r7, #20
10000d62:	9309      	str	r3, [sp, #36]	; 0x24
10000d64:	2300      	movs	r3, #0
10000d66:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000d68:	4642      	mov	r2, r8
10000d6a:	464b      	mov	r3, r9
10000d6c:	4640      	mov	r0, r8
10000d6e:	4649      	mov	r1, r9
10000d70:	f002 fa42 	bl	100031f8 <__adddf3>
10000d74:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000d78:	4642      	mov	r2, r8
10000d7a:	464b      	mov	r3, r9
10000d7c:	2000      	movs	r0, #0
10000d7e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000d82:	f002 fa37 	bl	100031f4 <__aeabi_dsub>
10000d86:	4680      	mov	r8, r0
10000d88:	4689      	mov	r9, r1
10000d8a:	2200      	movs	r2, #0
10000d8c:	4b63      	ldr	r3, [pc, #396]	; (10000f1c <_etoa+0x2fc>)
10000d8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d92:	f002 fd11 	bl	100037b8 <__aeabi_ddiv>
10000d96:	2200      	movs	r2, #0
10000d98:	4b61      	ldr	r3, [pc, #388]	; (10000f20 <_etoa+0x300>)
10000d9a:	f002 fa2d 	bl	100031f8 <__adddf3>
10000d9e:	4602      	mov	r2, r0
10000da0:	460b      	mov	r3, r1
10000da2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000da6:	f002 fd07 	bl	100037b8 <__aeabi_ddiv>
10000daa:	2200      	movs	r2, #0
10000dac:	4b5d      	ldr	r3, [pc, #372]	; (10000f24 <_etoa+0x304>)
10000dae:	f002 fa23 	bl	100031f8 <__adddf3>
10000db2:	4602      	mov	r2, r0
10000db4:	460b      	mov	r3, r1
10000db6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000dba:	f002 fcfd 	bl	100037b8 <__aeabi_ddiv>
10000dbe:	4602      	mov	r2, r0
10000dc0:	460b      	mov	r3, r1
10000dc2:	4640      	mov	r0, r8
10000dc4:	4649      	mov	r1, r9
10000dc6:	f002 fa17 	bl	100031f8 <__adddf3>
10000dca:	4602      	mov	r2, r0
10000dcc:	460b      	mov	r3, r1
10000dce:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000dd2:	f002 fcf1 	bl	100037b8 <__aeabi_ddiv>
10000dd6:	2200      	movs	r2, #0
10000dd8:	4b53      	ldr	r3, [pc, #332]	; (10000f28 <_etoa+0x308>)
10000dda:	f002 fa0d 	bl	100031f8 <__adddf3>
10000dde:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000de2:	f002 fbbf 	bl	10003564 <__aeabi_dmul>
10000de6:	4680      	mov	r8, r0
10000de8:	4689      	mov	r9, r1
10000dea:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000dee:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000df2:	f002 fe47 	bl	10003a84 <__aeabi_dcmpgt>
10000df6:	b140      	cbz	r0, 10000e0a <_etoa+0x1ea>
    expval--;
10000df8:	3e01      	subs	r6, #1
    conv.F /= 10;
10000dfa:	2200      	movs	r2, #0
10000dfc:	4b48      	ldr	r3, [pc, #288]	; (10000f20 <_etoa+0x300>)
10000dfe:	4640      	mov	r0, r8
10000e00:	4649      	mov	r1, r9
10000e02:	f002 fcd9 	bl	100037b8 <__aeabi_ddiv>
10000e06:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e0a:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000e0e:	2bc6      	cmp	r3, #198	; 0xc6
10000e10:	d83f      	bhi.n	10000e92 <_etoa+0x272>
10000e12:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000e14:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e16:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000e1a:	d044      	beq.n	10000ea6 <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000e1c:	a336      	add	r3, pc, #216	; (adr r3, 10000ef8 <_etoa+0x2d8>)
10000e1e:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e22:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000e26:	4640      	mov	r0, r8
10000e28:	4649      	mov	r1, r9
10000e2a:	f002 fe21 	bl	10003a70 <__aeabi_dcmpge>
10000e2e:	2800      	cmp	r0, #0
10000e30:	d03f      	beq.n	10000eb2 <_etoa+0x292>
10000e32:	a333      	add	r3, pc, #204	; (adr r3, 10000f00 <_etoa+0x2e0>)
10000e34:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e38:	4640      	mov	r0, r8
10000e3a:	4649      	mov	r1, r9
10000e3c:	f002 fe04 	bl	10003a48 <__aeabi_dcmplt>
10000e40:	2800      	cmp	r0, #0
10000e42:	d036      	beq.n	10000eb2 <_etoa+0x292>
      if ((int)prec > expval) {
10000e44:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e46:	42b3      	cmp	r3, r6
10000e48:	dd25      	ble.n	10000e96 <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000e4a:	1b9e      	subs	r6, r3, r6
10000e4c:	1e73      	subs	r3, r6, #1
10000e4e:	931e      	str	r3, [sp, #120]	; 0x78
10000e50:	e023      	b.n	10000e9a <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000e52:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e54:	9304      	str	r3, [sp, #16]
10000e56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e58:	9303      	str	r3, [sp, #12]
10000e5a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e5c:	9302      	str	r3, [sp, #8]
10000e5e:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000e62:	ed8d 7b00 	vstr	d7, [sp]
10000e66:	462b      	mov	r3, r5
10000e68:	465a      	mov	r2, fp
10000e6a:	4621      	mov	r1, r4
10000e6c:	4650      	mov	r0, sl
10000e6e:	f000 f8cf 	bl	10001010 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000e72:	b011      	add	sp, #68	; 0x44
10000e74:	ecbd 8b02 	vpop	{d8}
10000e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000e7c:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000f08 <_etoa+0x2e8>
10000e80:	ed8d 7b06 	vstr	d7, [sp, #24]
10000e84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000e86:	9306      	str	r3, [sp, #24]
10000e88:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000e8a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000e8e:	9307      	str	r3, [sp, #28]
10000e90:	e6fa      	b.n	10000c88 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e92:	2705      	movs	r7, #5
10000e94:	e7be      	b.n	10000e14 <_etoa+0x1f4>
        prec = 0;
10000e96:	2300      	movs	r3, #0
10000e98:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000e9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e9c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000ea0:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000ea2:	2700      	movs	r7, #0
      expval   = 0;
10000ea4:	463e      	mov	r6, r7
  if (width > minwidth) {
10000ea6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000ea8:	429f      	cmp	r7, r3
10000eaa:	d23f      	bcs.n	10000f2c <_etoa+0x30c>
    fwidth -= minwidth;
10000eac:	eba3 0807 	sub.w	r8, r3, r7
10000eb0:	e03e      	b.n	10000f30 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000eb2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000eb4:	2b00      	cmp	r3, #0
10000eb6:	d0f6      	beq.n	10000ea6 <_etoa+0x286>
10000eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000eba:	2b00      	cmp	r3, #0
10000ebc:	d0f3      	beq.n	10000ea6 <_etoa+0x286>
        --prec;
10000ebe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000ec0:	3b01      	subs	r3, #1
10000ec2:	931e      	str	r3, [sp, #120]	; 0x78
10000ec4:	e7ef      	b.n	10000ea6 <_etoa+0x286>
10000ec6:	bf00      	nop
10000ec8:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000ecc:	3fd34413 	svccc	0x00d34413
10000ed0:	8b60c8b3 	blhi	118331a4 <__copy_table_end__+0x182e128>
10000ed4:	3fc68a28 	svccc	0x00c68a28
10000ed8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000edc:	3fd287a7 	svccc	0x00d287a7
10000ee0:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000ee4:	400a934f 	andmi	r9, sl, pc, asr #6
10000ee8:	bbb55516 	bllt	ed56348 <SYSTEM_CLOCK+0x4d1e948>
10000eec:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000ef0:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000ef4:	3fe62e42 	svccc	0x00e62e42
10000ef8:	eb1c432d 	bl	10711bb4 <__copy_table_end__+0x70cb38>
10000efc:	3f1a36e2 	svccc	0x001a36e2
10000f00:	00000000 	andeq	r0, r0, r0
10000f04:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000f10:	7fefffff 	svcvc	0x00efffff
10000f14:	3ff80000 	svccc	0x00f80000
10000f18:	3fe00000 	svccc	0x00e00000
10000f1c:	402c0000 	eormi	r0, ip, r0
10000f20:	40240000 	eormi	r0, r4, r0
10000f24:	40180000 	andsmi	r0, r8, r0
10000f28:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000f2c:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000f30:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f32:	f013 0902 	ands.w	r9, r3, #2
10000f36:	d002      	beq.n	10000f3e <_etoa+0x31e>
10000f38:	b10f      	cbz	r7, 10000f3e <_etoa+0x31e>
    fwidth = 0U;
10000f3a:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000f3e:	b13e      	cbz	r6, 10000f50 <_etoa+0x330>
    value /= conv.F;
10000f40:	ec53 2b18 	vmov	r2, r3, d8
10000f44:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000f48:	f002 fc36 	bl	100037b8 <__aeabi_ddiv>
10000f4c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000f50:	2200      	movs	r2, #0
10000f52:	2300      	movs	r3, #0
10000f54:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000f58:	f002 fd76 	bl	10003a48 <__aeabi_dcmplt>
10000f5c:	2800      	cmp	r0, #0
10000f5e:	d13d      	bne.n	10000fdc <_etoa+0x3bc>
10000f60:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f62:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10000f66:	9304      	str	r3, [sp, #16]
10000f68:	f8cd 800c 	str.w	r8, [sp, #12]
10000f6c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f6e:	9302      	str	r3, [sp, #8]
10000f70:	ed9d 7b06 	vldr	d7, [sp, #24]
10000f74:	ed8d 7b00 	vstr	d7, [sp]
10000f78:	462b      	mov	r3, r5
10000f7a:	465a      	mov	r2, fp
10000f7c:	4621      	mov	r1, r4
10000f7e:	4650      	mov	r0, sl
10000f80:	f000 f846 	bl	10001010 <_ftoa>
  if (minwidth) {
10000f84:	2f00      	cmp	r7, #0
10000f86:	f43f af74 	beq.w	10000e72 <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000f8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f8c:	f013 0f20 	tst.w	r3, #32
10000f90:	d02c      	beq.n	10000fec <_etoa+0x3cc>
10000f92:	f04f 0c45 	mov.w	ip, #69	; 0x45
10000f96:	f100 0801 	add.w	r8, r0, #1
10000f9a:	462b      	mov	r3, r5
10000f9c:	4602      	mov	r2, r0
10000f9e:	4621      	mov	r1, r4
10000fa0:	4660      	mov	r0, ip
10000fa2:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10000fa4:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10000fa8:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10000fac:	2205      	movs	r2, #5
10000fae:	9205      	str	r2, [sp, #20]
10000fb0:	3f01      	subs	r7, #1
10000fb2:	9704      	str	r7, [sp, #16]
10000fb4:	2200      	movs	r2, #0
10000fb6:	9203      	str	r2, [sp, #12]
10000fb8:	220a      	movs	r2, #10
10000fba:	9202      	str	r2, [sp, #8]
10000fbc:	0ff0      	lsrs	r0, r6, #31
10000fbe:	9001      	str	r0, [sp, #4]
10000fc0:	9300      	str	r3, [sp, #0]
10000fc2:	462b      	mov	r3, r5
10000fc4:	4642      	mov	r2, r8
10000fc6:	4621      	mov	r1, r4
10000fc8:	4650      	mov	r0, sl
10000fca:	f7ff fd79 	bl	10000ac0 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
10000fce:	f1b9 0f00 	cmp.w	r9, #0
10000fd2:	f43f af4e 	beq.w	10000e72 <_etoa+0x252>
10000fd6:	4602      	mov	r2, r0
10000fd8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
10000fda:	e010      	b.n	10000ffe <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000fdc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000fe0:	4602      	mov	r2, r0
10000fe2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10000fe6:	e9cd 2306 	strd	r2, r3, [sp, #24]
10000fea:	e7b9      	b.n	10000f60 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000fec:	f04f 0c65 	mov.w	ip, #101	; 0x65
10000ff0:	e7d1      	b.n	10000f96 <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10000ff2:	1c56      	adds	r6, r2, #1
10000ff4:	462b      	mov	r3, r5
10000ff6:	4621      	mov	r1, r4
10000ff8:	2020      	movs	r0, #32
10000ffa:	47d0      	blx	sl
10000ffc:	4632      	mov	r2, r6
10000ffe:	eba2 030b 	sub.w	r3, r2, fp
10001002:	42bb      	cmp	r3, r7
10001004:	d3f5      	bcc.n	10000ff2 <_etoa+0x3d2>
10001006:	4610      	mov	r0, r2
10001008:	e733      	b.n	10000e72 <_etoa+0x252>
1000100a:	bf00      	nop
1000100c:	0000      	movs	r0, r0
	...

10001010 <_ftoa>:
{
10001010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001014:	ed2d 8b02 	vpush	{d8}
10001018:	b095      	sub	sp, #84	; 0x54
1000101a:	9007      	str	r0, [sp, #28]
1000101c:	910a      	str	r1, [sp, #40]	; 0x28
1000101e:	4692      	mov	sl, r2
10001020:	469b      	mov	fp, r3
10001022:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10001026:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001028:	4642      	mov	r2, r8
1000102a:	464b      	mov	r3, r9
1000102c:	4640      	mov	r0, r8
1000102e:	4649      	mov	r1, r9
10001030:	f002 fd00 	bl	10003a34 <__aeabi_dcmpeq>
10001034:	2800      	cmp	r0, #0
10001036:	d040      	beq.n	100010ba <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001038:	f04f 32ff 	mov.w	r2, #4294967295
1000103c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001040:	4640      	mov	r0, r8
10001042:	4649      	mov	r1, r9
10001044:	f002 fd00 	bl	10003a48 <__aeabi_dcmplt>
10001048:	2800      	cmp	r0, #0
1000104a:	d145      	bne.n	100010d8 <_ftoa+0xc8>
  if (value > DBL_MAX)
1000104c:	f04f 32ff 	mov.w	r2, #4294967295
10001050:	4b9f      	ldr	r3, [pc, #636]	; (100012d0 <_ftoa+0x2c0>)
10001052:	4640      	mov	r0, r8
10001054:	4649      	mov	r1, r9
10001056:	f002 fd15 	bl	10003a84 <__aeabi_dcmpgt>
1000105a:	2800      	cmp	r0, #0
1000105c:	d14b      	bne.n	100010f6 <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
1000105e:	a398      	add	r3, pc, #608	; (adr r3, 100012c0 <_ftoa+0x2b0>)
10001060:	e9d3 2300 	ldrd	r2, r3, [r3]
10001064:	4640      	mov	r0, r8
10001066:	4649      	mov	r1, r9
10001068:	f002 fd0c 	bl	10003a84 <__aeabi_dcmpgt>
1000106c:	2800      	cmp	r0, #0
1000106e:	d15a      	bne.n	10001126 <_ftoa+0x116>
10001070:	a395      	add	r3, pc, #596	; (adr r3, 100012c8 <_ftoa+0x2b8>)
10001072:	e9d3 2300 	ldrd	r2, r3, [r3]
10001076:	4640      	mov	r0, r8
10001078:	4649      	mov	r1, r9
1000107a:	f002 fce5 	bl	10003a48 <__aeabi_dcmplt>
1000107e:	2800      	cmp	r0, #0
10001080:	d151      	bne.n	10001126 <_ftoa+0x116>
  if (value < 0) {
10001082:	2200      	movs	r2, #0
10001084:	2300      	movs	r3, #0
10001086:	4640      	mov	r0, r8
10001088:	4649      	mov	r1, r9
1000108a:	f002 fcdd 	bl	10003a48 <__aeabi_dcmplt>
1000108e:	2800      	cmp	r0, #0
10001090:	d157      	bne.n	10001142 <_ftoa+0x132>
  bool negative = false;
10001092:	2300      	movs	r3, #0
10001094:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
10001096:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001098:	f413 6f80 	tst.w	r3, #1024	; 0x400
1000109c:	d05c      	beq.n	10001158 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
1000109e:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
100010a0:	2c1f      	cmp	r4, #31
100010a2:	d85b      	bhi.n	1000115c <_ftoa+0x14c>
100010a4:	2d09      	cmp	r5, #9
100010a6:	d959      	bls.n	1000115c <_ftoa+0x14c>
    buf[len++] = '0';
100010a8:	f104 0350 	add.w	r3, r4, #80	; 0x50
100010ac:	446b      	add	r3, sp
100010ae:	2230      	movs	r2, #48	; 0x30
100010b0:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
100010b4:	3d01      	subs	r5, #1
    buf[len++] = '0';
100010b6:	3401      	adds	r4, #1
100010b8:	e7f2      	b.n	100010a0 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
100010ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010bc:	9303      	str	r3, [sp, #12]
100010be:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010c0:	9302      	str	r3, [sp, #8]
100010c2:	2303      	movs	r3, #3
100010c4:	9301      	str	r3, [sp, #4]
100010c6:	4b83      	ldr	r3, [pc, #524]	; (100012d4 <_ftoa+0x2c4>)
100010c8:	9300      	str	r3, [sp, #0]
100010ca:	465b      	mov	r3, fp
100010cc:	4652      	mov	r2, sl
100010ce:	990a      	ldr	r1, [sp, #40]	; 0x28
100010d0:	9807      	ldr	r0, [sp, #28]
100010d2:	f7ff fc1a 	bl	1000090a <_out_rev>
100010d6:	e12c      	b.n	10001332 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100010d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010da:	9303      	str	r3, [sp, #12]
100010dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010de:	9302      	str	r3, [sp, #8]
100010e0:	2304      	movs	r3, #4
100010e2:	9301      	str	r3, [sp, #4]
100010e4:	4b7c      	ldr	r3, [pc, #496]	; (100012d8 <_ftoa+0x2c8>)
100010e6:	9300      	str	r3, [sp, #0]
100010e8:	465b      	mov	r3, fp
100010ea:	4652      	mov	r2, sl
100010ec:	990a      	ldr	r1, [sp, #40]	; 0x28
100010ee:	9807      	ldr	r0, [sp, #28]
100010f0:	f7ff fc0b 	bl	1000090a <_out_rev>
100010f4:	e11d      	b.n	10001332 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100010f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010f8:	f013 0304 	ands.w	r3, r3, #4
100010fc:	d00f      	beq.n	1000111e <_ftoa+0x10e>
100010fe:	4a77      	ldr	r2, [pc, #476]	; (100012dc <_ftoa+0x2cc>)
10001100:	b17b      	cbz	r3, 10001122 <_ftoa+0x112>
10001102:	2304      	movs	r3, #4
10001104:	9924      	ldr	r1, [sp, #144]	; 0x90
10001106:	9103      	str	r1, [sp, #12]
10001108:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000110a:	9102      	str	r1, [sp, #8]
1000110c:	9301      	str	r3, [sp, #4]
1000110e:	9200      	str	r2, [sp, #0]
10001110:	465b      	mov	r3, fp
10001112:	4652      	mov	r2, sl
10001114:	990a      	ldr	r1, [sp, #40]	; 0x28
10001116:	9807      	ldr	r0, [sp, #28]
10001118:	f7ff fbf7 	bl	1000090a <_out_rev>
1000111c:	e109      	b.n	10001332 <_ftoa+0x322>
1000111e:	4a70      	ldr	r2, [pc, #448]	; (100012e0 <_ftoa+0x2d0>)
10001120:	e7ee      	b.n	10001100 <_ftoa+0xf0>
10001122:	2303      	movs	r3, #3
10001124:	e7ee      	b.n	10001104 <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
10001126:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001128:	9304      	str	r3, [sp, #16]
1000112a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000112c:	9303      	str	r3, [sp, #12]
1000112e:	9502      	str	r5, [sp, #8]
10001130:	e9cd 8900 	strd	r8, r9, [sp]
10001134:	465b      	mov	r3, fp
10001136:	4652      	mov	r2, sl
10001138:	990a      	ldr	r1, [sp, #40]	; 0x28
1000113a:	9807      	ldr	r0, [sp, #28]
1000113c:	f7ff fd70 	bl	10000c20 <_etoa>
10001140:	e0f7      	b.n	10001332 <_ftoa+0x322>
    value = 0 - value;
10001142:	4642      	mov	r2, r8
10001144:	464b      	mov	r3, r9
10001146:	2000      	movs	r0, #0
10001148:	2100      	movs	r1, #0
1000114a:	f002 f853 	bl	100031f4 <__aeabi_dsub>
1000114e:	4680      	mov	r8, r0
10001150:	4689      	mov	r9, r1
    negative = true;
10001152:	2301      	movs	r3, #1
10001154:	930b      	str	r3, [sp, #44]	; 0x2c
10001156:	e79e      	b.n	10001096 <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001158:	2506      	movs	r5, #6
1000115a:	e7a0      	b.n	1000109e <_ftoa+0x8e>
  int whole = (int)value;
1000115c:	4640      	mov	r0, r8
1000115e:	4649      	mov	r1, r9
10001160:	f002 fc9a 	bl	10003a98 <__aeabi_d2iz>
10001164:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
10001166:	f002 f993 	bl	10003490 <__aeabi_i2d>
1000116a:	4602      	mov	r2, r0
1000116c:	460b      	mov	r3, r1
1000116e:	4640      	mov	r0, r8
10001170:	4649      	mov	r1, r9
10001172:	f002 f83f 	bl	100031f4 <__aeabi_dsub>
10001176:	4b5b      	ldr	r3, [pc, #364]	; (100012e4 <_ftoa+0x2d4>)
10001178:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
1000117c:	ed93 8b00 	vldr	d8, [r3]
10001180:	ec53 2b18 	vmov	r2, r3, d8
10001184:	f002 f9ee 	bl	10003564 <__aeabi_dmul>
10001188:	4602      	mov	r2, r0
1000118a:	460b      	mov	r3, r1
1000118c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001190:	f002 fcaa 	bl	10003ae8 <__aeabi_d2uiz>
10001194:	4607      	mov	r7, r0
  diff = tmp - frac;
10001196:	f002 f96b 	bl	10003470 <__aeabi_ui2d>
1000119a:	4602      	mov	r2, r0
1000119c:	460b      	mov	r3, r1
1000119e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100011a2:	f002 f827 	bl	100031f4 <__aeabi_dsub>
100011a6:	4602      	mov	r2, r0
100011a8:	460b      	mov	r3, r1
100011aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
100011ae:	2200      	movs	r2, #0
100011b0:	4b4d      	ldr	r3, [pc, #308]	; (100012e8 <_ftoa+0x2d8>)
100011b2:	f002 fc67 	bl	10003a84 <__aeabi_dcmpgt>
100011b6:	b350      	cbz	r0, 1000120e <_ftoa+0x1fe>
    ++frac;
100011b8:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
100011ba:	4638      	mov	r0, r7
100011bc:	f002 f958 	bl	10003470 <__aeabi_ui2d>
100011c0:	4602      	mov	r2, r0
100011c2:	460b      	mov	r3, r1
100011c4:	ec51 0b18 	vmov	r0, r1, d8
100011c8:	f002 fc48 	bl	10003a5c <__aeabi_dcmple>
100011cc:	b108      	cbz	r0, 100011d2 <_ftoa+0x1c2>
      ++whole;
100011ce:	3601      	adds	r6, #1
      frac = 0;
100011d0:	2700      	movs	r7, #0
  if (prec == 0U) {
100011d2:	bb55      	cbnz	r5, 1000122a <_ftoa+0x21a>
    diff = value - (double)whole;
100011d4:	4630      	mov	r0, r6
100011d6:	f002 f95b 	bl	10003490 <__aeabi_i2d>
100011da:	4602      	mov	r2, r0
100011dc:	460b      	mov	r3, r1
100011de:	4640      	mov	r0, r8
100011e0:	4649      	mov	r1, r9
100011e2:	f002 f807 	bl	100031f4 <__aeabi_dsub>
100011e6:	4607      	mov	r7, r0
100011e8:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100011ea:	2200      	movs	r2, #0
100011ec:	4b3e      	ldr	r3, [pc, #248]	; (100012e8 <_ftoa+0x2d8>)
100011ee:	f002 fc2b 	bl	10003a48 <__aeabi_dcmplt>
100011f2:	b138      	cbz	r0, 10001204 <_ftoa+0x1f4>
100011f4:	2200      	movs	r2, #0
100011f6:	4b3c      	ldr	r3, [pc, #240]	; (100012e8 <_ftoa+0x2d8>)
100011f8:	4638      	mov	r0, r7
100011fa:	4641      	mov	r1, r8
100011fc:	f002 fc42 	bl	10003a84 <__aeabi_dcmpgt>
10001200:	2800      	cmp	r0, #0
10001202:	d042      	beq.n	1000128a <_ftoa+0x27a>
10001204:	f016 0f01 	tst.w	r6, #1
10001208:	d03f      	beq.n	1000128a <_ftoa+0x27a>
      ++whole;
1000120a:	3601      	adds	r6, #1
1000120c:	e03d      	b.n	1000128a <_ftoa+0x27a>
  else if (diff < 0.5) {
1000120e:	2200      	movs	r2, #0
10001210:	4b35      	ldr	r3, [pc, #212]	; (100012e8 <_ftoa+0x2d8>)
10001212:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001216:	f002 fc17 	bl	10003a48 <__aeabi_dcmplt>
1000121a:	2800      	cmp	r0, #0
1000121c:	d1d9      	bne.n	100011d2 <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
1000121e:	b117      	cbz	r7, 10001226 <_ftoa+0x216>
10001220:	f017 0f01 	tst.w	r7, #1
10001224:	d0d5      	beq.n	100011d2 <_ftoa+0x1c2>
    ++frac;
10001226:	3701      	adds	r7, #1
10001228:	e7d3      	b.n	100011d2 <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000122a:	2c1f      	cmp	r4, #31
1000122c:	d817      	bhi.n	1000125e <_ftoa+0x24e>
      --count;
1000122e:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001230:	4b2e      	ldr	r3, [pc, #184]	; (100012ec <_ftoa+0x2dc>)
10001232:	fba3 2307 	umull	r2, r3, r3, r7
10001236:	08db      	lsrs	r3, r3, #3
10001238:	4619      	mov	r1, r3
1000123a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1000123e:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
10001242:	1c62      	adds	r2, r4, #1
10001244:	3330      	adds	r3, #48	; 0x30
10001246:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000124a:	eb0d 0400 	add.w	r4, sp, r0
1000124e:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
10001252:	2f09      	cmp	r7, #9
10001254:	d902      	bls.n	1000125c <_ftoa+0x24c>
10001256:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001258:	4614      	mov	r4, r2
1000125a:	e7e6      	b.n	1000122a <_ftoa+0x21a>
1000125c:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000125e:	2c1f      	cmp	r4, #31
10001260:	d80a      	bhi.n	10001278 <_ftoa+0x268>
10001262:	1e6b      	subs	r3, r5, #1
10001264:	b145      	cbz	r5, 10001278 <_ftoa+0x268>
      buf[len++] = '0';
10001266:	f104 0250 	add.w	r2, r4, #80	; 0x50
1000126a:	446a      	add	r2, sp
1000126c:	2130      	movs	r1, #48	; 0x30
1000126e:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001272:	461d      	mov	r5, r3
      buf[len++] = '0';
10001274:	3401      	adds	r4, #1
10001276:	e7f2      	b.n	1000125e <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001278:	2c1f      	cmp	r4, #31
1000127a:	d806      	bhi.n	1000128a <_ftoa+0x27a>
      buf[len++] = '.';
1000127c:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001280:	446b      	add	r3, sp
10001282:	222e      	movs	r2, #46	; 0x2e
10001284:	f803 2c20 	strb.w	r2, [r3, #-32]
10001288:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000128a:	2c1f      	cmp	r4, #31
1000128c:	d833      	bhi.n	100012f6 <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
1000128e:	4a18      	ldr	r2, [pc, #96]	; (100012f0 <_ftoa+0x2e0>)
10001290:	fb82 3206 	smull	r3, r2, r2, r6
10001294:	17f3      	asrs	r3, r6, #31
10001296:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
1000129a:	461a      	mov	r2, r3
1000129c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
100012a0:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
100012a4:	1c61      	adds	r1, r4, #1
100012a6:	3330      	adds	r3, #48	; 0x30
100012a8:	f104 0050 	add.w	r0, r4, #80	; 0x50
100012ac:	eb0d 0400 	add.w	r4, sp, r0
100012b0:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
100012b4:	4616      	mov	r6, r2
100012b6:	b1ea      	cbz	r2, 100012f4 <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
100012b8:	460c      	mov	r4, r1
100012ba:	e7e6      	b.n	1000128a <_ftoa+0x27a>
100012bc:	f3af 8000 	nop.w
100012c0:	00000000 	andeq	r0, r0, r0
100012c4:	41cdcd65 	bicmi	ip, sp, r5, ror #26
100012c8:	00000000 	andeq	r0, r0, r0
100012cc:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100012d0:	7fefffff 	svcvc	0x00efffff
100012d4:	10004ec0 	andne	r4, r0, r0, asr #29
100012d8:	10004ec4 	andne	r4, r0, r4, asr #29
100012dc:	10004eb8 			; <UNDEFINED> instruction: 0x10004eb8
100012e0:	10004eb4 			; <UNDEFINED> instruction: 0x10004eb4
100012e4:	10004ed0 	ldrdne	r4, [r0], -r0
100012e8:	3fe00000 	svccc	0x00e00000
100012ec:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100012f0:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100012f4:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100012f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012f8:	f003 0303 	and.w	r3, r3, #3
100012fc:	2b01      	cmp	r3, #1
100012fe:	d01d      	beq.n	1000133c <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001300:	2c1f      	cmp	r4, #31
10001302:	d809      	bhi.n	10001318 <_ftoa+0x308>
    if (negative) {
10001304:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001306:	2b00      	cmp	r3, #0
10001308:	d035      	beq.n	10001376 <_ftoa+0x366>
      buf[len++] = '-';
1000130a:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000130e:	446b      	add	r3, sp
10001310:	222d      	movs	r2, #45	; 0x2d
10001312:	f803 2c20 	strb.w	r2, [r3, #-32]
10001316:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10001318:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000131a:	9303      	str	r3, [sp, #12]
1000131c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000131e:	9302      	str	r3, [sp, #8]
10001320:	9401      	str	r4, [sp, #4]
10001322:	ab0c      	add	r3, sp, #48	; 0x30
10001324:	9300      	str	r3, [sp, #0]
10001326:	465b      	mov	r3, fp
10001328:	4652      	mov	r2, sl
1000132a:	990a      	ldr	r1, [sp, #40]	; 0x28
1000132c:	9807      	ldr	r0, [sp, #28]
1000132e:	f7ff faec 	bl	1000090a <_out_rev>
}
10001332:	b015      	add	sp, #84	; 0x54
10001334:	ecbd 8b02 	vpop	{d8}
10001338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
1000133c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000133e:	b1b3      	cbz	r3, 1000136e <_ftoa+0x35e>
10001340:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001342:	b91b      	cbnz	r3, 1000134c <_ftoa+0x33c>
10001344:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001346:	f013 0f0c 	tst.w	r3, #12
1000134a:	d012      	beq.n	10001372 <_ftoa+0x362>
      width--;
1000134c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000134e:	3b01      	subs	r3, #1
10001350:	9323      	str	r3, [sp, #140]	; 0x8c
10001352:	4619      	mov	r1, r3
10001354:	e006      	b.n	10001364 <_ftoa+0x354>
      buf[len++] = '0';
10001356:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000135a:	446b      	add	r3, sp
1000135c:	2230      	movs	r2, #48	; 0x30
1000135e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001362:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
10001364:	428c      	cmp	r4, r1
10001366:	d2cb      	bcs.n	10001300 <_ftoa+0x2f0>
10001368:	2c1f      	cmp	r4, #31
1000136a:	d9f4      	bls.n	10001356 <_ftoa+0x346>
1000136c:	e7c8      	b.n	10001300 <_ftoa+0x2f0>
1000136e:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001370:	e7f8      	b.n	10001364 <_ftoa+0x354>
10001372:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001374:	e7f6      	b.n	10001364 <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
10001376:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001378:	f013 0f04 	tst.w	r3, #4
1000137c:	d007      	beq.n	1000138e <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
1000137e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001382:	446b      	add	r3, sp
10001384:	222b      	movs	r2, #43	; 0x2b
10001386:	f803 2c20 	strb.w	r2, [r3, #-32]
1000138a:	3401      	adds	r4, #1
1000138c:	e7c4      	b.n	10001318 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
1000138e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001390:	f013 0f08 	tst.w	r3, #8
10001394:	d0c0      	beq.n	10001318 <_ftoa+0x308>
      buf[len++] = ' ';
10001396:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000139a:	446b      	add	r3, sp
1000139c:	2220      	movs	r2, #32
1000139e:	f803 2c20 	strb.w	r2, [r3, #-32]
100013a2:	3401      	adds	r4, #1
100013a4:	e7b8      	b.n	10001318 <_ftoa+0x308>
100013a6:	bf00      	nop

100013a8 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
100013a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100013ac:	b08f      	sub	sp, #60	; 0x3c
100013ae:	4607      	mov	r7, r0
100013b0:	4616      	mov	r6, r2
100013b2:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
100013b4:	4688      	mov	r8, r1
100013b6:	2900      	cmp	r1, #0
100013b8:	f000 8324 	beq.w	10001a04 <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
100013bc:	2400      	movs	r4, #0
  while (*format)
100013be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013c0:	7818      	ldrb	r0, [r3, #0]
100013c2:	2800      	cmp	r0, #0
100013c4:	f000 8320 	beq.w	10001a08 <_vsnprintf+0x660>
    if (*format != '%') {
100013c8:	2825      	cmp	r0, #37	; 0x25
100013ca:	d009      	beq.n	100013e0 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
100013cc:	1c65      	adds	r5, r4, #1
100013ce:	4633      	mov	r3, r6
100013d0:	4622      	mov	r2, r4
100013d2:	4641      	mov	r1, r8
100013d4:	47b8      	blx	r7
      format++;
100013d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013d8:	3301      	adds	r3, #1
100013da:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100013dc:	462c      	mov	r4, r5
      continue;
100013de:	e7ee      	b.n	100013be <_vsnprintf+0x16>
      format++;
100013e0:	3301      	adds	r3, #1
100013e2:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100013e4:	2500      	movs	r5, #0
      switch (*format) {
100013e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013e8:	7819      	ldrb	r1, [r3, #0]
100013ea:	f1a1 0220 	sub.w	r2, r1, #32
100013ee:	2a10      	cmp	r2, #16
100013f0:	d80a      	bhi.n	10001408 <_vsnprintf+0x60>
100013f2:	e8df f002 	tbb	[pc, r2]
100013f6:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100013fa:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100013fe:	33090909 	movwcc	r0, #39177	; 0x9909
10001402:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
10001406:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
1000140a:	0330      	lsls	r0, r6, #12
1000140c:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
1000140e:	2b09      	cmp	r3, #9
10001410:	d933      	bls.n	1000147a <_vsnprintf+0xd2>
    else if (*format == '*') {
10001412:	292a      	cmp	r1, #42	; 0x2a
10001414:	d036      	beq.n	10001484 <_vsnprintf+0xdc>
    width = 0U;
10001416:	2300      	movs	r3, #0
10001418:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
1000141a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000141c:	781a      	ldrb	r2, [r3, #0]
1000141e:	2a2e      	cmp	r2, #46	; 0x2e
10001420:	d040      	beq.n	100014a4 <_vsnprintf+0xfc>
    precision = 0U;
10001422:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
10001426:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001428:	7813      	ldrb	r3, [r2, #0]
1000142a:	3b68      	subs	r3, #104	; 0x68
1000142c:	2b12      	cmp	r3, #18
1000142e:	d877      	bhi.n	10001520 <_vsnprintf+0x178>
10001430:	e8df f003 	tbb	[pc, r3]
10001434:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001438:	76767656 			; <UNDEFINED> instruction: 0x76767656
1000143c:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001440:	76767672 			; <UNDEFINED> instruction: 0x76767672
10001444:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001448:	f045 0501 	orr.w	r5, r5, #1
1000144c:	3301      	adds	r3, #1
1000144e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001450:	e7c9      	b.n	100013e6 <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
10001452:	f045 0502 	orr.w	r5, r5, #2
10001456:	3301      	adds	r3, #1
10001458:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000145a:	e7c4      	b.n	100013e6 <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
1000145c:	f045 0504 	orr.w	r5, r5, #4
10001460:	3301      	adds	r3, #1
10001462:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001464:	e7bf      	b.n	100013e6 <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
10001466:	f045 0508 	orr.w	r5, r5, #8
1000146a:	3301      	adds	r3, #1
1000146c:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000146e:	e7ba      	b.n	100013e6 <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001470:	f045 0510 	orr.w	r5, r5, #16
10001474:	3301      	adds	r3, #1
10001476:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001478:	e7b5      	b.n	100013e6 <_vsnprintf+0x3e>
      width = _atoi(&format);
1000147a:	a80d      	add	r0, sp, #52	; 0x34
1000147c:	f7ff fa33 	bl	100008e6 <_atoi>
10001480:	900a      	str	r0, [sp, #40]	; 0x28
10001482:	e7ca      	b.n	1000141a <_vsnprintf+0x72>
      const int w = va_arg(va, int);
10001484:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001486:	1d1a      	adds	r2, r3, #4
10001488:	9218      	str	r2, [sp, #96]	; 0x60
1000148a:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
1000148c:	2800      	cmp	r0, #0
1000148e:	db04      	blt.n	1000149a <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001490:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
10001492:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001494:	3301      	adds	r3, #1
10001496:	930d      	str	r3, [sp, #52]	; 0x34
10001498:	e7bf      	b.n	1000141a <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
1000149a:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
1000149e:	4243      	negs	r3, r0
100014a0:	930a      	str	r3, [sp, #40]	; 0x28
100014a2:	e7f6      	b.n	10001492 <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
100014a4:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
100014a8:	1c5a      	adds	r2, r3, #1
100014aa:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
100014ac:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
100014ae:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
100014b2:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
100014b4:	2b09      	cmp	r3, #9
100014b6:	d904      	bls.n	100014c2 <_vsnprintf+0x11a>
      else if (*format == '*') {
100014b8:	2a2a      	cmp	r2, #42	; 0x2a
100014ba:	d007      	beq.n	100014cc <_vsnprintf+0x124>
    precision = 0U;
100014bc:	f04f 0b00 	mov.w	fp, #0
100014c0:	e7b1      	b.n	10001426 <_vsnprintf+0x7e>
        precision = _atoi(&format);
100014c2:	a80d      	add	r0, sp, #52	; 0x34
100014c4:	f7ff fa0f 	bl	100008e6 <_atoi>
100014c8:	4683      	mov	fp, r0
100014ca:	e7ac      	b.n	10001426 <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
100014cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
100014ce:	1d1a      	adds	r2, r3, #4
100014d0:	9218      	str	r2, [sp, #96]	; 0x60
100014d2:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100014d4:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100014d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014da:	3301      	adds	r3, #1
100014dc:	930d      	str	r3, [sp, #52]	; 0x34
100014de:	e7a2      	b.n	10001426 <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100014e0:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100014e4:	1c53      	adds	r3, r2, #1
100014e6:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100014e8:	7852      	ldrb	r2, [r2, #1]
100014ea:	2a6c      	cmp	r2, #108	; 0x6c
100014ec:	d001      	beq.n	100014f2 <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100014ee:	460d      	mov	r5, r1
100014f0:	e016      	b.n	10001520 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100014f2:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100014f6:	3301      	adds	r3, #1
100014f8:	930d      	str	r3, [sp, #52]	; 0x34
100014fa:	e011      	b.n	10001520 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100014fc:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
10001500:	1c53      	adds	r3, r2, #1
10001502:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
10001504:	7852      	ldrb	r2, [r2, #1]
10001506:	2a68      	cmp	r2, #104	; 0x68
10001508:	d001      	beq.n	1000150e <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
1000150a:	460d      	mov	r5, r1
1000150c:	e008      	b.n	10001520 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
1000150e:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
10001512:	3301      	adds	r3, #1
10001514:	930d      	str	r3, [sp, #52]	; 0x34
10001516:	e003      	b.n	10001520 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001518:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
1000151c:	3201      	adds	r2, #1
1000151e:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
10001520:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001522:	7818      	ldrb	r0, [r3, #0]
10001524:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001528:	2b53      	cmp	r3, #83	; 0x53
1000152a:	f200 8261 	bhi.w	100019f0 <_vsnprintf+0x648>
1000152e:	e8df f013 	tbh	[pc, r3, lsl #1]
10001532:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
10001536:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001542:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001546:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001552:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001556:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001562:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001566:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001572:	01540174 	cmpeq	r4, r4, ror r1
10001576:	025f0174 	subseq	r0, pc, #116, 2
1000157a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000157e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001582:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001586:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000158a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000158e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001592:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001596:	005e025f 	subseq	r0, lr, pc, asr r2
1000159a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000159e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015a6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015aa:	005e025f 	subseq	r0, lr, pc, asr r2
100015ae:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
100015b2:	01540174 	cmpeq	r4, r4, ror r1
100015b6:	025f0174 	subseq	r0, pc, #116, 2
100015ba:	025f005e 	subseq	r0, pc, #94	; 0x5e
100015be:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015c2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015c6:	0239005e 	eorseq	r0, r9, #94	; 0x5e
100015ca:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ce:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100015d2:	025f005e 	subseq	r0, pc, #94	; 0x5e
100015d6:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015da:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100015de:	3201      	adds	r2, #1
100015e0:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015e2:	e79d      	b.n	10001520 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015e4:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015e8:	3201      	adds	r2, #1
100015ea:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015ec:	e798      	b.n	10001520 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100015ee:	2878      	cmp	r0, #120	; 0x78
100015f0:	d009      	beq.n	10001606 <_vsnprintf+0x25e>
100015f2:	2858      	cmp	r0, #88	; 0x58
100015f4:	d03a      	beq.n	1000166c <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100015f6:	286f      	cmp	r0, #111	; 0x6f
100015f8:	d03a      	beq.n	10001670 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100015fa:	2862      	cmp	r0, #98	; 0x62
100015fc:	d03a      	beq.n	10001674 <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100015fe:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
10001602:	230a      	movs	r3, #10
10001604:	e000      	b.n	10001608 <_vsnprintf+0x260>
          base = 16U;
10001606:	2310      	movs	r3, #16
        if (*format == 'X') {
10001608:	2858      	cmp	r0, #88	; 0x58
1000160a:	d035      	beq.n	10001678 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
1000160c:	2869      	cmp	r0, #105	; 0x69
1000160e:	d003      	beq.n	10001618 <_vsnprintf+0x270>
10001610:	2864      	cmp	r0, #100	; 0x64
10001612:	d001      	beq.n	10001618 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
10001614:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
10001618:	f415 6f80 	tst.w	r5, #1024	; 0x400
1000161c:	d001      	beq.n	10001622 <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
1000161e:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
10001622:	2869      	cmp	r0, #105	; 0x69
10001624:	d02b      	beq.n	1000167e <_vsnprintf+0x2d6>
10001626:	2864      	cmp	r0, #100	; 0x64
10001628:	d029      	beq.n	1000167e <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
1000162a:	f415 7f00 	tst.w	r5, #512	; 0x200
1000162e:	f040 8096 	bne.w	1000175e <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
10001632:	f415 7f80 	tst.w	r5, #256	; 0x100
10001636:	f040 80ae 	bne.w	10001796 <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
1000163a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000163e:	f000 80bf 	beq.w	100017c0 <_vsnprintf+0x418>
10001642:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001644:	1d11      	adds	r1, r2, #4
10001646:	9118      	str	r1, [sp, #96]	; 0x60
10001648:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
1000164a:	9505      	str	r5, [sp, #20]
1000164c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000164e:	9104      	str	r1, [sp, #16]
10001650:	f8cd b00c 	str.w	fp, [sp, #12]
10001654:	9302      	str	r3, [sp, #8]
10001656:	2300      	movs	r3, #0
10001658:	9301      	str	r3, [sp, #4]
1000165a:	9200      	str	r2, [sp, #0]
1000165c:	4633      	mov	r3, r6
1000165e:	4622      	mov	r2, r4
10001660:	4641      	mov	r1, r8
10001662:	4638      	mov	r0, r7
10001664:	f7ff fa2c 	bl	10000ac0 <_ntoa_long>
10001668:	4604      	mov	r4, r0
1000166a:	e029      	b.n	100016c0 <_vsnprintf+0x318>
          base = 16U;
1000166c:	2310      	movs	r3, #16
1000166e:	e7cb      	b.n	10001608 <_vsnprintf+0x260>
          base =  8U;
10001670:	2308      	movs	r3, #8
10001672:	e7c9      	b.n	10001608 <_vsnprintf+0x260>
          base =  2U;
10001674:	2302      	movs	r3, #2
10001676:	e7c7      	b.n	10001608 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001678:	f045 0520 	orr.w	r5, r5, #32
1000167c:	e7c6      	b.n	1000160c <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
1000167e:	f415 7f00 	tst.w	r5, #512	; 0x200
10001682:	d121      	bne.n	100016c8 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
10001684:	f415 7f80 	tst.w	r5, #256	; 0x100
10001688:	d142      	bne.n	10001710 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000168a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000168e:	d058      	beq.n	10001742 <_vsnprintf+0x39a>
10001690:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001692:	1d11      	adds	r1, r2, #4
10001694:	9118      	str	r1, [sp, #96]	; 0x60
10001696:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001698:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000169c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100016a0:	9505      	str	r5, [sp, #20]
100016a2:	980a      	ldr	r0, [sp, #40]	; 0x28
100016a4:	9004      	str	r0, [sp, #16]
100016a6:	f8cd b00c 	str.w	fp, [sp, #12]
100016aa:	9302      	str	r3, [sp, #8]
100016ac:	0fd2      	lsrs	r2, r2, #31
100016ae:	9201      	str	r2, [sp, #4]
100016b0:	9100      	str	r1, [sp, #0]
100016b2:	4633      	mov	r3, r6
100016b4:	4622      	mov	r2, r4
100016b6:	4641      	mov	r1, r8
100016b8:	4638      	mov	r0, r7
100016ba:	f7ff fa01 	bl	10000ac0 <_ntoa_long>
100016be:	4604      	mov	r4, r0
        format++;
100016c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100016c2:	3301      	adds	r3, #1
100016c4:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100016c6:	e67a      	b.n	100013be <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
100016c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016ca:	3207      	adds	r2, #7
100016cc:	f022 0207 	bic.w	r2, r2, #7
100016d0:	f102 0108 	add.w	r1, r2, #8
100016d4:	9118      	str	r1, [sp, #96]	; 0x60
100016d6:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100016d8:	6812      	ldr	r2, [r2, #0]
100016da:	4608      	mov	r0, r1
100016dc:	2900      	cmp	r1, #0
100016de:	db13      	blt.n	10001708 <_vsnprintf+0x360>
100016e0:	9508      	str	r5, [sp, #32]
100016e2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100016e4:	9507      	str	r5, [sp, #28]
100016e6:	f8cd b018 	str.w	fp, [sp, #24]
100016ea:	9304      	str	r3, [sp, #16]
100016ec:	2300      	movs	r3, #0
100016ee:	9305      	str	r3, [sp, #20]
100016f0:	0fc9      	lsrs	r1, r1, #31
100016f2:	9102      	str	r1, [sp, #8]
100016f4:	9200      	str	r2, [sp, #0]
100016f6:	9001      	str	r0, [sp, #4]
100016f8:	4633      	mov	r3, r6
100016fa:	4622      	mov	r2, r4
100016fc:	4641      	mov	r1, r8
100016fe:	4638      	mov	r0, r7
10001700:	f7ff fa28 	bl	10000b54 <_ntoa_long_long>
10001704:	4604      	mov	r4, r0
10001706:	e7db      	b.n	100016c0 <_vsnprintf+0x318>
10001708:	4252      	negs	r2, r2
1000170a:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
1000170e:	e7e7      	b.n	100016e0 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
10001710:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001712:	1d11      	adds	r1, r2, #4
10001714:	9118      	str	r1, [sp, #96]	; 0x60
10001716:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001718:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000171c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001720:	9505      	str	r5, [sp, #20]
10001722:	980a      	ldr	r0, [sp, #40]	; 0x28
10001724:	9004      	str	r0, [sp, #16]
10001726:	f8cd b00c 	str.w	fp, [sp, #12]
1000172a:	9302      	str	r3, [sp, #8]
1000172c:	0fd2      	lsrs	r2, r2, #31
1000172e:	9201      	str	r2, [sp, #4]
10001730:	9100      	str	r1, [sp, #0]
10001732:	4633      	mov	r3, r6
10001734:	4622      	mov	r2, r4
10001736:	4641      	mov	r1, r8
10001738:	4638      	mov	r0, r7
1000173a:	f7ff f9c1 	bl	10000ac0 <_ntoa_long>
1000173e:	4604      	mov	r4, r0
10001740:	e7be      	b.n	100016c0 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001742:	f015 0f80 	tst.w	r5, #128	; 0x80
10001746:	d005      	beq.n	10001754 <_vsnprintf+0x3ac>
10001748:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000174a:	1d11      	adds	r1, r2, #4
1000174c:	9118      	str	r1, [sp, #96]	; 0x60
1000174e:	f9b2 2000 	ldrsh.w	r2, [r2]
10001752:	e7a1      	b.n	10001698 <_vsnprintf+0x2f0>
10001754:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001756:	1d11      	adds	r1, r2, #4
10001758:	9118      	str	r1, [sp, #96]	; 0x60
1000175a:	6812      	ldr	r2, [r2, #0]
1000175c:	e79c      	b.n	10001698 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
1000175e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001760:	3207      	adds	r2, #7
10001762:	f022 0207 	bic.w	r2, r2, #7
10001766:	f102 0108 	add.w	r1, r2, #8
1000176a:	9118      	str	r1, [sp, #96]	; 0x60
1000176c:	9508      	str	r5, [sp, #32]
1000176e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001770:	9107      	str	r1, [sp, #28]
10001772:	f8cd b018 	str.w	fp, [sp, #24]
10001776:	2100      	movs	r1, #0
10001778:	9304      	str	r3, [sp, #16]
1000177a:	9105      	str	r1, [sp, #20]
1000177c:	9102      	str	r1, [sp, #8]
1000177e:	e9d2 2300 	ldrd	r2, r3, [r2]
10001782:	e9cd 2300 	strd	r2, r3, [sp]
10001786:	4633      	mov	r3, r6
10001788:	4622      	mov	r2, r4
1000178a:	4641      	mov	r1, r8
1000178c:	4638      	mov	r0, r7
1000178e:	f7ff f9e1 	bl	10000b54 <_ntoa_long_long>
10001792:	4604      	mov	r4, r0
10001794:	e794      	b.n	100016c0 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
10001796:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001798:	1d11      	adds	r1, r2, #4
1000179a:	9118      	str	r1, [sp, #96]	; 0x60
1000179c:	9505      	str	r5, [sp, #20]
1000179e:	990a      	ldr	r1, [sp, #40]	; 0x28
100017a0:	9104      	str	r1, [sp, #16]
100017a2:	f8cd b00c 	str.w	fp, [sp, #12]
100017a6:	9302      	str	r3, [sp, #8]
100017a8:	2300      	movs	r3, #0
100017aa:	9301      	str	r3, [sp, #4]
100017ac:	6813      	ldr	r3, [r2, #0]
100017ae:	9300      	str	r3, [sp, #0]
100017b0:	4633      	mov	r3, r6
100017b2:	4622      	mov	r2, r4
100017b4:	4641      	mov	r1, r8
100017b6:	4638      	mov	r0, r7
100017b8:	f7ff f982 	bl	10000ac0 <_ntoa_long>
100017bc:	4604      	mov	r4, r0
100017be:	e77f      	b.n	100016c0 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100017c0:	f015 0f80 	tst.w	r5, #128	; 0x80
100017c4:	d004      	beq.n	100017d0 <_vsnprintf+0x428>
100017c6:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017c8:	1d11      	adds	r1, r2, #4
100017ca:	9118      	str	r1, [sp, #96]	; 0x60
100017cc:	8812      	ldrh	r2, [r2, #0]
100017ce:	e73c      	b.n	1000164a <_vsnprintf+0x2a2>
100017d0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017d2:	1d11      	adds	r1, r2, #4
100017d4:	9118      	str	r1, [sp, #96]	; 0x60
100017d6:	6812      	ldr	r2, [r2, #0]
100017d8:	e737      	b.n	1000164a <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100017da:	2846      	cmp	r0, #70	; 0x46
100017dc:	d01a      	beq.n	10001814 <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100017de:	9b18      	ldr	r3, [sp, #96]	; 0x60
100017e0:	3307      	adds	r3, #7
100017e2:	f023 0307 	bic.w	r3, r3, #7
100017e6:	f103 0208 	add.w	r2, r3, #8
100017ea:	9218      	str	r2, [sp, #96]	; 0x60
100017ec:	9504      	str	r5, [sp, #16]
100017ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100017f0:	9203      	str	r2, [sp, #12]
100017f2:	f8cd b008 	str.w	fp, [sp, #8]
100017f6:	e9d3 2300 	ldrd	r2, r3, [r3]
100017fa:	e9cd 2300 	strd	r2, r3, [sp]
100017fe:	4633      	mov	r3, r6
10001800:	4622      	mov	r2, r4
10001802:	4641      	mov	r1, r8
10001804:	4638      	mov	r0, r7
10001806:	f7ff fc03 	bl	10001010 <_ftoa>
1000180a:	4604      	mov	r4, r0
        format++;
1000180c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000180e:	3301      	adds	r3, #1
10001810:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001812:	e5d4      	b.n	100013be <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
10001814:	f045 0520 	orr.w	r5, r5, #32
10001818:	e7e1      	b.n	100017de <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
1000181a:	2867      	cmp	r0, #103	; 0x67
1000181c:	d001      	beq.n	10001822 <_vsnprintf+0x47a>
1000181e:	2847      	cmp	r0, #71	; 0x47
10001820:	d101      	bne.n	10001826 <_vsnprintf+0x47e>
10001822:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
10001826:	2845      	cmp	r0, #69	; 0x45
10001828:	d001      	beq.n	1000182e <_vsnprintf+0x486>
1000182a:	2847      	cmp	r0, #71	; 0x47
1000182c:	d101      	bne.n	10001832 <_vsnprintf+0x48a>
1000182e:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001832:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001834:	3307      	adds	r3, #7
10001836:	f023 0307 	bic.w	r3, r3, #7
1000183a:	f103 0208 	add.w	r2, r3, #8
1000183e:	9218      	str	r2, [sp, #96]	; 0x60
10001840:	9504      	str	r5, [sp, #16]
10001842:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001844:	9203      	str	r2, [sp, #12]
10001846:	f8cd b008 	str.w	fp, [sp, #8]
1000184a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000184e:	e9cd 2300 	strd	r2, r3, [sp]
10001852:	4633      	mov	r3, r6
10001854:	4622      	mov	r2, r4
10001856:	4641      	mov	r1, r8
10001858:	4638      	mov	r0, r7
1000185a:	f7ff f9e1 	bl	10000c20 <_etoa>
1000185e:	4604      	mov	r4, r0
        format++;
10001860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001862:	3301      	adds	r3, #1
10001864:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001866:	e5aa      	b.n	100013be <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001868:	f015 0502 	ands.w	r5, r5, #2
1000186c:	d01f      	beq.n	100018ae <_vsnprintf+0x506>
        unsigned int l = 1U;
1000186e:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
10001872:	9818      	ldr	r0, [sp, #96]	; 0x60
10001874:	1d03      	adds	r3, r0, #4
10001876:	9318      	str	r3, [sp, #96]	; 0x60
10001878:	f104 0a01 	add.w	sl, r4, #1
1000187c:	4633      	mov	r3, r6
1000187e:	4622      	mov	r2, r4
10001880:	4641      	mov	r1, r8
10001882:	7800      	ldrb	r0, [r0, #0]
10001884:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
10001886:	b9bd      	cbnz	r5, 100018b8 <_vsnprintf+0x510>
        format++;
10001888:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000188a:	3301      	adds	r3, #1
1000188c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000188e:	4654      	mov	r4, sl
10001890:	e595      	b.n	100013be <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
10001892:	f102 0a01 	add.w	sl, r2, #1
10001896:	4633      	mov	r3, r6
10001898:	4641      	mov	r1, r8
1000189a:	2020      	movs	r0, #32
1000189c:	47b8      	blx	r7
          while (l++ < width) {
1000189e:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
100018a0:	4652      	mov	r2, sl
          while (l++ < width) {
100018a2:	f103 0901 	add.w	r9, r3, #1
100018a6:	459b      	cmp	fp, r3
100018a8:	d8f3      	bhi.n	10001892 <_vsnprintf+0x4ea>
100018aa:	4614      	mov	r4, r2
100018ac:	e7e1      	b.n	10001872 <_vsnprintf+0x4ca>
        unsigned int l = 1U;
100018ae:	2301      	movs	r3, #1
100018b0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
100018b4:	4622      	mov	r2, r4
100018b6:	e7f4      	b.n	100018a2 <_vsnprintf+0x4fa>
100018b8:	4652      	mov	r2, sl
100018ba:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
100018be:	e006      	b.n	100018ce <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
100018c0:	1c55      	adds	r5, r2, #1
100018c2:	4633      	mov	r3, r6
100018c4:	4641      	mov	r1, r8
100018c6:	2020      	movs	r0, #32
100018c8:	47b8      	blx	r7
          while (l++ < width) {
100018ca:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100018cc:	462a      	mov	r2, r5
          while (l++ < width) {
100018ce:	f109 0401 	add.w	r4, r9, #1
100018d2:	45ca      	cmp	sl, r9
100018d4:	d8f4      	bhi.n	100018c0 <_vsnprintf+0x518>
100018d6:	4692      	mov	sl, r2
100018d8:	e7d6      	b.n	10001888 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100018da:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018dc:	1d1a      	adds	r2, r3, #4
100018de:	9218      	str	r2, [sp, #96]	; 0x60
100018e0:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100018e4:	f1bb 0f00 	cmp.w	fp, #0
100018e8:	d11e      	bne.n	10001928 <_vsnprintf+0x580>
100018ea:	f04f 33ff 	mov.w	r3, #4294967295
100018ee:	46d1      	mov	r9, sl
100018f0:	e002      	b.n	100018f8 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100018f2:	f109 0901 	add.w	r9, r9, #1
100018f6:	4613      	mov	r3, r2
100018f8:	f899 2000 	ldrb.w	r2, [r9]
100018fc:	b112      	cbz	r2, 10001904 <_vsnprintf+0x55c>
100018fe:	1e5a      	subs	r2, r3, #1
10001900:	2b00      	cmp	r3, #0
10001902:	d1f6      	bne.n	100018f2 <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
10001904:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
10001908:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
1000190c:	930b      	str	r3, [sp, #44]	; 0x2c
1000190e:	d002      	beq.n	10001916 <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
10001910:	45d9      	cmp	r9, fp
10001912:	bf28      	it	cs
10001914:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
10001916:	f015 0302 	ands.w	r3, r5, #2
1000191a:	930c      	str	r3, [sp, #48]	; 0x30
1000191c:	d006      	beq.n	1000192c <_vsnprintf+0x584>
1000191e:	4622      	mov	r2, r4
10001920:	465c      	mov	r4, fp
10001922:	46b3      	mov	fp, r6
10001924:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001926:	e01d      	b.n	10001964 <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001928:	465b      	mov	r3, fp
1000192a:	e7e0      	b.n	100018ee <_vsnprintf+0x546>
1000192c:	4622      	mov	r2, r4
1000192e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001930:	464b      	mov	r3, r9
10001932:	e007      	b.n	10001944 <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001934:	f102 0901 	add.w	r9, r2, #1
10001938:	4633      	mov	r3, r6
1000193a:	4641      	mov	r1, r8
1000193c:	2020      	movs	r0, #32
1000193e:	47b8      	blx	r7
          while (l++ < width) {
10001940:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001942:	464a      	mov	r2, r9
          while (l++ < width) {
10001944:	1c5d      	adds	r5, r3, #1
10001946:	429c      	cmp	r4, r3
10001948:	d8f4      	bhi.n	10001934 <_vsnprintf+0x58c>
1000194a:	46a9      	mov	r9, r5
1000194c:	465c      	mov	r4, fp
1000194e:	46b3      	mov	fp, r6
10001950:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001952:	e007      	b.n	10001964 <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001954:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001956:	f10a 0a01 	add.w	sl, sl, #1
1000195a:	1c55      	adds	r5, r2, #1
1000195c:	465b      	mov	r3, fp
1000195e:	4641      	mov	r1, r8
10001960:	47b8      	blx	r7
10001962:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001964:	f89a 0000 	ldrb.w	r0, [sl]
10001968:	b120      	cbz	r0, 10001974 <_vsnprintf+0x5cc>
1000196a:	2e00      	cmp	r6, #0
1000196c:	d0f3      	beq.n	10001956 <_vsnprintf+0x5ae>
1000196e:	1e63      	subs	r3, r4, #1
10001970:	2c00      	cmp	r4, #0
10001972:	d1ef      	bne.n	10001954 <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001974:	4614      	mov	r4, r2
10001976:	465e      	mov	r6, fp
10001978:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000197a:	b91b      	cbnz	r3, 10001984 <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
1000197c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000197e:	3301      	adds	r3, #1
10001980:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001982:	e51c      	b.n	100013be <_vsnprintf+0x16>
10001984:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001988:	e006      	b.n	10001998 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
1000198a:	1c55      	adds	r5, r2, #1
1000198c:	4633      	mov	r3, r6
1000198e:	4641      	mov	r1, r8
10001990:	2020      	movs	r0, #32
10001992:	47b8      	blx	r7
          while (l++ < width) {
10001994:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001996:	462a      	mov	r2, r5
          while (l++ < width) {
10001998:	f109 0401 	add.w	r4, r9, #1
1000199c:	45ca      	cmp	sl, r9
1000199e:	d8f4      	bhi.n	1000198a <_vsnprintf+0x5e2>
100019a0:	4614      	mov	r4, r2
100019a2:	e7eb      	b.n	1000197c <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
100019a4:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
100019a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
100019aa:	1d1a      	adds	r2, r3, #4
100019ac:	9218      	str	r2, [sp, #96]	; 0x60
100019ae:	681b      	ldr	r3, [r3, #0]
100019b0:	9505      	str	r5, [sp, #20]
100019b2:	2208      	movs	r2, #8
100019b4:	9204      	str	r2, [sp, #16]
100019b6:	f8cd b00c 	str.w	fp, [sp, #12]
100019ba:	2210      	movs	r2, #16
100019bc:	9202      	str	r2, [sp, #8]
100019be:	2200      	movs	r2, #0
100019c0:	9201      	str	r2, [sp, #4]
100019c2:	9300      	str	r3, [sp, #0]
100019c4:	4633      	mov	r3, r6
100019c6:	4622      	mov	r2, r4
100019c8:	4641      	mov	r1, r8
100019ca:	4638      	mov	r0, r7
100019cc:	f7ff f878 	bl	10000ac0 <_ntoa_long>
100019d0:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
100019d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019d4:	3301      	adds	r3, #1
100019d6:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100019d8:	e4f1      	b.n	100013be <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
100019da:	1c65      	adds	r5, r4, #1
100019dc:	4633      	mov	r3, r6
100019de:	4622      	mov	r2, r4
100019e0:	4641      	mov	r1, r8
100019e2:	2025      	movs	r0, #37	; 0x25
100019e4:	47b8      	blx	r7
        format++;
100019e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019e8:	3301      	adds	r3, #1
100019ea:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
100019ec:	462c      	mov	r4, r5
        break;
100019ee:	e4e6      	b.n	100013be <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
100019f0:	1c65      	adds	r5, r4, #1
100019f2:	4633      	mov	r3, r6
100019f4:	4622      	mov	r2, r4
100019f6:	4641      	mov	r1, r8
100019f8:	47b8      	blx	r7
        format++;
100019fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019fc:	3301      	adds	r3, #1
100019fe:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001a00:	462c      	mov	r4, r5
        break;
10001a02:	e4dc      	b.n	100013be <_vsnprintf+0x16>
    out = _out_null;
10001a04:	4f07      	ldr	r7, [pc, #28]	; (10001a24 <_vsnprintf+0x67c>)
10001a06:	e4d9      	b.n	100013bc <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001a08:	42b4      	cmp	r4, r6
10001a0a:	d301      	bcc.n	10001a10 <_vsnprintf+0x668>
10001a0c:	1e72      	subs	r2, r6, #1
10001a0e:	e000      	b.n	10001a12 <_vsnprintf+0x66a>
10001a10:	4622      	mov	r2, r4
10001a12:	4633      	mov	r3, r6
10001a14:	4641      	mov	r1, r8
10001a16:	2000      	movs	r0, #0
10001a18:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001a1a:	4620      	mov	r0, r4
10001a1c:	b00f      	add	sp, #60	; 0x3c
10001a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001a22:	bf00      	nop
10001a24:	100008e5 	andne	r0, r0, r5, ror #17

10001a28 <_out_char>:
  if (character) {
10001a28:	b900      	cbnz	r0, 10001a2c <_out_char+0x4>
10001a2a:	4770      	bx	lr
{
10001a2c:	b508      	push	{r3, lr}
    put_char(character);
10001a2e:	f000 f817 	bl	10001a60 <put_char>
}
10001a32:	bd08      	pop	{r3, pc}

10001a34 <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001a34:	b40f      	push	{r0, r1, r2, r3}
10001a36:	b500      	push	{lr}
10001a38:	b085      	sub	sp, #20
10001a3a:	aa06      	add	r2, sp, #24
10001a3c:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001a40:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001a42:	9200      	str	r2, [sp, #0]
10001a44:	f04f 32ff 	mov.w	r2, #4294967295
10001a48:	a902      	add	r1, sp, #8
10001a4a:	4804      	ldr	r0, [pc, #16]	; (10001a5c <printf+0x28>)
10001a4c:	f7ff fcac 	bl	100013a8 <_vsnprintf>
  va_end(va);
  return ret;
}
10001a50:	b005      	add	sp, #20
10001a52:	f85d eb04 	ldr.w	lr, [sp], #4
10001a56:	b004      	add	sp, #16
10001a58:	4770      	bx	lr
10001a5a:	bf00      	nop
10001a5c:	10001a29 	andne	r1, r0, r9, lsr #20

10001a60 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001a60:	4b03      	ldr	r3, [pc, #12]	; (10001a70 <put_char+0x10>)
10001a62:	699b      	ldr	r3, [r3, #24]
10001a64:	f013 0f20 	tst.w	r3, #32
10001a68:	d1fa      	bne.n	10001a60 <put_char>
    UART_DATA(UART0) = ch;
10001a6a:	4b01      	ldr	r3, [pc, #4]	; (10001a70 <put_char+0x10>)
10001a6c:	6018      	str	r0, [r3, #0]
    return ch;
}
10001a6e:	4770      	bx	lr
10001a70:	40200000 	eormi	r0, r0, r0

10001a74 <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001a74:	b538      	push	{r3, r4, r5, lr}
10001a76:	4605      	mov	r5, r0
    int index = 0;
10001a78:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001a7a:	e002      	b.n	10001a82 <puts+0xe>
        put_char(string[index]);
10001a7c:	f7ff fff0 	bl	10001a60 <put_char>
        index++;
10001a80:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001a82:	5d28      	ldrb	r0, [r5, r4]
10001a84:	2800      	cmp	r0, #0
10001a86:	d1f9      	bne.n	10001a7c <puts+0x8>
    }
    put_char('\n');
10001a88:	200a      	movs	r0, #10
10001a8a:	f7ff ffe9 	bl	10001a60 <put_char>
    return index;
}
10001a8e:	4620      	mov	r0, r4
10001a90:	bd38      	pop	{r3, r4, r5, pc}
	...

10001a94 <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001a94:	4b07      	ldr	r3, [pc, #28]	; (10001ab4 <uart_init+0x20>)
10001a96:	2228      	movs	r2, #40	; 0x28
10001a98:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001a9a:	220b      	movs	r2, #11
10001a9c:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001a9e:	2260      	movs	r2, #96	; 0x60
10001aa0:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001aa2:	f240 3201 	movw	r2, #769	; 0x301
10001aa6:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001aa8:	220a      	movs	r2, #10
10001aaa:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001aac:	2201      	movs	r2, #1
10001aae:	609a      	str	r2, [r3, #8]
}
10001ab0:	4770      	bx	lr
10001ab2:	bf00      	nop
10001ab4:	40200000 	eormi	r0, r0, r0

10001ab8 <_tx_block_release>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_block_release(VOID *block_ptr)
{
10001ab8:	b510      	push	{r4, lr}
10001aba:	4603      	mov	r3, r0
{
UINT posture;
#ifdef TX_PORT_USE_BASEPRI
    __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
#else
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001abc:	f3ef 8410 	mrs	r4, PRIMASK
    int_posture = __get_interrupt_posture();

#ifdef TX_PORT_USE_BASEPRI
    __set_basepri_value(TX_PORT_BASEPRI);
#else
    __asm__ volatile ("CPSID i" : : : "memory");
10001ac0:	b672      	cpsid	i
    TX_DISABLE

    /* Pickup the pool pointer which is just previous to the starting
       address of the block that the caller sees.  */
    work_ptr =        TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
    work_ptr =        TX_UCHAR_POINTER_SUB(work_ptr, (sizeof(UCHAR *)));
10001ac2:	1f01      	subs	r1, r0, #4
    next_block_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
    pool_ptr =        TX_UCHAR_TO_BLOCK_POOL_POINTER_CONVERT((*next_block_ptr));
10001ac4:	f850 2c04 	ldr.w	r2, [r0, #-4]

    /* Log this kernel call.  */
    TX_EL_BLOCK_RELEASE_INSERT

    /* Determine if there are any threads suspended on the block pool.  */
    thread_ptr =  pool_ptr -> tx_block_pool_suspension_list;
10001ac8:	6a10      	ldr	r0, [r2, #32]
    if (thread_ptr != TX_NULL)
10001aca:	b1b0      	cbz	r0, 10001afa <_tx_block_release+0x42>
    {

        /* Remove the suspended thread from the list.  */

        /* Decrement the number of threads suspended.  */
        (pool_ptr -> tx_block_pool_suspended_count)--;
10001acc:	6a51      	ldr	r1, [r2, #36]	; 0x24
10001ace:	3901      	subs	r1, #1
10001ad0:	6251      	str	r1, [r2, #36]	; 0x24

        /* Pickup the suspended count.  */
        suspended_count =  (pool_ptr -> tx_block_pool_suspended_count);

        /* See if this is the only suspended thread on the list.  */
        if (suspended_count == TX_NO_SUSPENSIONS)
10001ad2:	b961      	cbnz	r1, 10001aee <_tx_block_release+0x36>
        {

            /* Yes, the only suspended thread.  */

            /* Update the head pointer.  */
            pool_ptr -> tx_block_pool_suspension_list =  TX_NULL;
10001ad4:	6211      	str	r1, [r2, #32]
        }

        /* Prepare for resumption of the first thread.  */

        /* Clear cleanup routine to avoid timeout.  */
        thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
10001ad6:	2200      	movs	r2, #0
10001ad8:	6682      	str	r2, [r0, #104]	; 0x68

        /* Return this block pointer to the suspended thread waiting for
           a block.  */
        return_block_ptr =  TX_VOID_TO_INDIRECT_UCHAR_POINTER_CONVERT(thread_ptr -> tx_thread_additional_suspend_info);
10001ada:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
        work_ptr =          TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
        *return_block_ptr =  work_ptr;
10001adc:	600b      	str	r3, [r1, #0]

        /* Put return status into the thread control block.  */
        thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
10001ade:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84

#ifdef TX_NOT_INTERRUPTABLE

        /* Resume the thread!  */
        _tx_thread_system_ni_resume(thread_ptr);
10001ae2:	f000 fb2d 	bl	10002140 <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ae6:	f384 8810 	msr	PRIMASK, r4
        TX_RESTORE
    }

    /* Return successful completion status.  */
    return(TX_SUCCESS);
}
10001aea:	2000      	movs	r0, #0
10001aec:	bd10      	pop	{r4, pc}
            next_thread =                                thread_ptr -> tx_thread_suspended_next;
10001aee:	6f01      	ldr	r1, [r0, #112]	; 0x70
            pool_ptr -> tx_block_pool_suspension_list =  next_thread;
10001af0:	6211      	str	r1, [r2, #32]
            previous_thread =                              thread_ptr -> tx_thread_suspended_previous;
10001af2:	6f42      	ldr	r2, [r0, #116]	; 0x74
            next_thread -> tx_thread_suspended_previous =  previous_thread;
10001af4:	674a      	str	r2, [r1, #116]	; 0x74
            previous_thread -> tx_thread_suspended_next =  next_thread;
10001af6:	6711      	str	r1, [r2, #112]	; 0x70
10001af8:	e7ed      	b.n	10001ad6 <_tx_block_release+0x1e>
        *next_block_ptr =  pool_ptr -> tx_block_pool_available_list;
10001afa:	6910      	ldr	r0, [r2, #16]
10001afc:	f843 0c04 	str.w	r0, [r3, #-4]
        pool_ptr -> tx_block_pool_available_list =  work_ptr;
10001b00:	6111      	str	r1, [r2, #16]
        pool_ptr -> tx_block_pool_available++;
10001b02:	6893      	ldr	r3, [r2, #8]
10001b04:	3301      	adds	r3, #1
10001b06:	6093      	str	r3, [r2, #8]
10001b08:	f384 8810 	msr	PRIMASK, r4
}
10001b0c:	e7ed      	b.n	10001aea <_tx_block_release+0x32>
	...

10001b10 <_tx_byte_allocate>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_byte_allocate(TX_BYTE_POOL *pool_ptr, VOID **memory_ptr, ULONG memory_size,  ULONG wait_option)
{
10001b10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10001b14:	4604      	mov	r4, r0
10001b16:	4688      	mov	r8, r1
10001b18:	4699      	mov	r9, r3
#endif


    /* Round the memory size up to the next size that is evenly divisible by
       an ALIGN_TYPE (this is typically a 32-bit ULONG).  This guarantees proper alignment.  */
    memory_size = (((memory_size + (sizeof(ALIGN_TYPE)))-((ALIGN_TYPE) 1))/(sizeof(ALIGN_TYPE))) * (sizeof(ALIGN_TYPE));
10001b1a:	3203      	adds	r2, #3
10001b1c:	f022 0703 	bic.w	r7, r2, #3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001b20:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001b24:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001b26:	4b22      	ldr	r3, [pc, #136]	; (10001bb0 <_tx_byte_allocate+0xa0>)
10001b28:	681e      	ldr	r6, [r3, #0]
    /* Loop to handle cases where the owner of the pool changed.  */
    do
    {

        /* Indicate that this thread is the current owner.  */
        pool_ptr -> tx_byte_pool_owner =  thread_ptr;
10001b2a:	6226      	str	r6, [r4, #32]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001b2c:	f385 8810 	msr	PRIMASK, r5
        /* Restore interrupts.  */
        TX_RESTORE

        /* At this point, the executing thread owns the pool and can perform a search
           for free memory.  */
        work_ptr =  _tx_byte_pool_search(pool_ptr, memory_size);
10001b30:	4639      	mov	r1, r7
10001b32:	4620      	mov	r0, r4
10001b34:	f000 f8a2 	bl	10001c7c <_tx_byte_pool_search>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001b38:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001b3c:	b672      	cpsid	i

        /* Lockout interrupts.  */
        TX_DISABLE

        /* Determine if we are finished.  */
        if (work_ptr != TX_NULL)
10001b3e:	b910      	cbnz	r0, 10001b46 <_tx_byte_allocate+0x36>
        }
        else
        {

            /* No block was found, does this thread still own the pool?  */
            if (pool_ptr -> tx_byte_pool_owner == thread_ptr)
10001b40:	6a23      	ldr	r3, [r4, #32]
10001b42:	42b3      	cmp	r3, r6
10001b44:	d1f1      	bne.n	10001b2a <_tx_byte_allocate+0x1a>
        }

    } while (finished == TX_FALSE);

    /* Copy the pointer into the return destination.  */
    *memory_ptr =  (VOID *) work_ptr;
10001b46:	f8c8 0000 	str.w	r0, [r8]

    /* Determine if memory was found.  */
    if (work_ptr != TX_NULL)
10001b4a:	b120      	cbz	r0, 10001b56 <_tx_byte_allocate+0x46>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001b4c:	f385 8810 	msr	PRIMASK, r5

        /* Restore interrupts.  */
        TX_RESTORE

        /* Set the status to success.  */
        status =  TX_SUCCESS;
10001b50:	2000      	movs	r0, #0
        }
    }

    /* Return completion status.  */
    return(status);
}
10001b52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        if (wait_option != TX_NO_WAIT)
10001b56:	f1b9 0f00 	cmp.w	r9, #0
10001b5a:	d025      	beq.n	10001ba8 <_tx_byte_allocate+0x98>
            if (_tx_thread_preempt_disable != ((UINT) 0))
10001b5c:	4b15      	ldr	r3, [pc, #84]	; (10001bb4 <_tx_byte_allocate+0xa4>)
10001b5e:	681b      	ldr	r3, [r3, #0]
10001b60:	b9bb      	cbnz	r3, 10001b92 <_tx_byte_allocate+0x82>
                thread_ptr -> tx_thread_suspend_cleanup =  &(_tx_byte_pool_cleanup);
10001b62:	4b15      	ldr	r3, [pc, #84]	; (10001bb8 <_tx_byte_allocate+0xa8>)
10001b64:	66b3      	str	r3, [r6, #104]	; 0x68
                thread_ptr -> tx_thread_suspend_control_block =  (VOID *) pool_ptr;
10001b66:	66f4      	str	r4, [r6, #108]	; 0x6c
                thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) memory_ptr;
10001b68:	f8c6 807c 	str.w	r8, [r6, #124]	; 0x7c
                thread_ptr -> tx_thread_suspend_info =  memory_size;
10001b6c:	67b7      	str	r7, [r6, #120]	; 0x78
                suspended_count =  pool_ptr -> tx_byte_pool_suspended_count;
10001b6e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
                (pool_ptr -> tx_byte_pool_suspended_count)++;
10001b70:	1c5a      	adds	r2, r3, #1
10001b72:	62a2      	str	r2, [r4, #40]	; 0x28
                if (suspended_count == TX_NO_SUSPENSIONS)
10001b74:	b98b      	cbnz	r3, 10001b9a <_tx_byte_allocate+0x8a>
                    pool_ptr -> tx_byte_pool_suspension_list =      thread_ptr;
10001b76:	6266      	str	r6, [r4, #36]	; 0x24
                    thread_ptr -> tx_thread_suspended_next =        thread_ptr;
10001b78:	6736      	str	r6, [r6, #112]	; 0x70
                    thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
10001b7a:	6776      	str	r6, [r6, #116]	; 0x74
                thread_ptr -> tx_thread_state =       TX_BYTE_MEMORY;
10001b7c:	2309      	movs	r3, #9
10001b7e:	6333      	str	r3, [r6, #48]	; 0x30
                _tx_thread_system_ni_suspend(thread_ptr, wait_option);
10001b80:	4649      	mov	r1, r9
10001b82:	4630      	mov	r0, r6
10001b84:	f000 fc6e 	bl	10002464 <_tx_thread_system_ni_suspend>
10001b88:	f385 8810 	msr	PRIMASK, r5
                status =  thread_ptr -> tx_thread_suspend_status;
10001b8c:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
10001b90:	e7df      	b.n	10001b52 <_tx_byte_allocate+0x42>
10001b92:	f385 8810 	msr	PRIMASK, r5
                status =  TX_NO_MEMORY;
10001b96:	2010      	movs	r0, #16
}
10001b98:	e7db      	b.n	10001b52 <_tx_byte_allocate+0x42>
                    next_thread =                                   pool_ptr -> tx_byte_pool_suspension_list;
10001b9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
                    thread_ptr -> tx_thread_suspended_next =        next_thread;
10001b9c:	6733      	str	r3, [r6, #112]	; 0x70
                    previous_thread =                               next_thread -> tx_thread_suspended_previous;
10001b9e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
                    thread_ptr -> tx_thread_suspended_previous =    previous_thread;
10001ba0:	6772      	str	r2, [r6, #116]	; 0x74
                    previous_thread -> tx_thread_suspended_next =   thread_ptr;
10001ba2:	6716      	str	r6, [r2, #112]	; 0x70
                    next_thread -> tx_thread_suspended_previous =   thread_ptr;
10001ba4:	675e      	str	r6, [r3, #116]	; 0x74
10001ba6:	e7e9      	b.n	10001b7c <_tx_byte_allocate+0x6c>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ba8:	f385 8810 	msr	PRIMASK, r5
            status =  TX_NO_MEMORY;
10001bac:	2010      	movs	r0, #16
    return(status);
10001bae:	e7d0      	b.n	10001b52 <_tx_byte_allocate+0x42>
10001bb0:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10001bb4:	38001208 	stmdacc	r0, {r3, r9, ip}
10001bb8:	10001bbd 			; <UNDEFINED> instruction: 0x10001bbd

10001bbc <_tx_byte_pool_cleanup>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_byte_pool_cleanup(TX_THREAD *thread_ptr, ULONG suspension_sequence)
{
10001bbc:	b508      	push	{r3, lr}
                    if (pool_ptr -> tx_byte_pool_suspended_count != TX_NO_SUSPENSIONS)
                    {
#else

                        /* Setup pointer to byte pool control block.  */
                        pool_ptr =  TX_VOID_TO_BYTE_POOL_POINTER_CONVERT(thread_ptr -> tx_thread_suspend_control_block);
10001bbe:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
#endif

                        /* Thread suspended for memory... Clear the suspension cleanup flag.  */
                        thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
10001bc0:	2300      	movs	r3, #0
10001bc2:	6683      	str	r3, [r0, #104]	; 0x68

                        /* Decrement the suspension count.  */
                        pool_ptr -> tx_byte_pool_suspended_count--;
10001bc4:	6a93      	ldr	r3, [r2, #40]	; 0x28
10001bc6:	3b01      	subs	r3, #1
10001bc8:	6293      	str	r3, [r2, #40]	; 0x28
                        suspended_count =  pool_ptr -> tx_byte_pool_suspended_count;

                        /* Remove the suspended thread from the list.  */

                        /* See if this is the only suspended thread on the list.  */
                        if (suspended_count == TX_NO_SUSPENSIONS)
10001bca:	b923      	cbnz	r3, 10001bd6 <_tx_byte_pool_cleanup+0x1a>
                        {

                            /* Yes, the only suspended thread.  */

                            /* Update the head pointer.  */
                            pool_ptr -> tx_byte_pool_suspension_list =  TX_NULL;
10001bcc:	6253      	str	r3, [r2, #36]	; 0x24
                            }
                        }

                        /* Now we need to determine if this cleanup is from a terminate, timeout,
                           or from a wait abort.  */
                        if (thread_ptr -> tx_thread_state == TX_BYTE_MEMORY)
10001bce:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001bd0:	2b09      	cmp	r3, #9
10001bd2:	d009      	beq.n	10001be8 <_tx_byte_pool_cleanup+0x2c>
    }

    /* Restore interrupts.  */
    TX_RESTORE
#endif
}
10001bd4:	bd08      	pop	{r3, pc}
                            next_thread =                                   thread_ptr -> tx_thread_suspended_next;
10001bd6:	6f03      	ldr	r3, [r0, #112]	; 0x70
                            previous_thread =                               thread_ptr -> tx_thread_suspended_previous;
10001bd8:	6f41      	ldr	r1, [r0, #116]	; 0x74
                            next_thread -> tx_thread_suspended_previous =   previous_thread;
10001bda:	6759      	str	r1, [r3, #116]	; 0x74
                            previous_thread -> tx_thread_suspended_next =   next_thread;
10001bdc:	670b      	str	r3, [r1, #112]	; 0x70
                            if (pool_ptr -> tx_byte_pool_suspension_list == thread_ptr)
10001bde:	6a51      	ldr	r1, [r2, #36]	; 0x24
10001be0:	4281      	cmp	r1, r0
10001be2:	d1f4      	bne.n	10001bce <_tx_byte_pool_cleanup+0x12>
                                pool_ptr -> tx_byte_pool_suspension_list =      next_thread;
10001be4:	6253      	str	r3, [r2, #36]	; 0x24
10001be6:	e7f2      	b.n	10001bce <_tx_byte_pool_cleanup+0x12>
                            thread_ptr -> tx_thread_suspend_status =  TX_NO_MEMORY;
10001be8:	2310      	movs	r3, #16
10001bea:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
                            _tx_thread_system_ni_resume(thread_ptr);
10001bee:	f000 faa7 	bl	10002140 <_tx_thread_system_ni_resume>
}
10001bf2:	e7ef      	b.n	10001bd4 <_tx_byte_pool_cleanup+0x18>

10001bf4 <_tx_byte_pool_create>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_byte_pool_create(TX_BYTE_POOL *pool_ptr, CHAR *name_ptr, VOID *pool_start, ULONG pool_size)
{
10001bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001bf6:	4604      	mov	r4, r0
10001bf8:	460f      	mov	r7, r1
10001bfa:	4616      	mov	r6, r2
10001bfc:	461d      	mov	r5, r3
TX_BYTE_POOL        *previous_pool;
ALIGN_TYPE          *free_ptr;


    /* Initialize the byte pool control block to all zeros.  */
    TX_MEMSET(pool_ptr, 0, (sizeof(TX_BYTE_POOL)));
10001bfe:	2234      	movs	r2, #52	; 0x34
10001c00:	2100      	movs	r1, #0
10001c02:	f001 faeb 	bl	100031dc <memset>

    /* Round the pool size down to something that is evenly divisible by
       an ULONG.  */
    pool_size =   (pool_size/(sizeof(ALIGN_TYPE))) * (sizeof(ALIGN_TYPE));
10001c06:	f025 0303 	bic.w	r3, r5, #3

    /* Setup the basic byte pool fields.  */
    pool_ptr -> tx_byte_pool_name =              name_ptr;
10001c0a:	6067      	str	r7, [r4, #4]

    /* Save the start and size of the pool.  */
    pool_ptr -> tx_byte_pool_start =   TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c0c:	61a6      	str	r6, [r4, #24]
    pool_ptr -> tx_byte_pool_size =    pool_size;
10001c0e:	61e3      	str	r3, [r4, #28]

    /* Setup memory list to the beginning as well as the search pointer.  */
    pool_ptr -> tx_byte_pool_list =    TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c10:	6126      	str	r6, [r4, #16]
    pool_ptr -> tx_byte_pool_search =  TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c12:	6166      	str	r6, [r4, #20]

    /* Initially, the pool will have two blocks.  One large block at the
       beginning that is available and a small allocated block at the end
       of the pool that is there just for the algorithm.  Be sure to count
       the available block's header in the available bytes count.  */
    pool_ptr -> tx_byte_pool_available =   pool_size - ((sizeof(VOID *)) + (sizeof(ALIGN_TYPE)));
10001c14:	f1a3 0208 	sub.w	r2, r3, #8
10001c18:	60a2      	str	r2, [r4, #8]
    pool_ptr -> tx_byte_pool_fragments =   ((UINT) 2);
10001c1a:	2202      	movs	r2, #2
10001c1c:	60e2      	str	r2, [r4, #12]
       field that contains either the constant TX_BYTE_BLOCK_FREE (if the block is free) or a pointer to the
       owning pool (if the block is allocated).  */

    /* Calculate the end of the pool's memory area.  */
    block_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
    block_ptr =  TX_UCHAR_POINTER_ADD(block_ptr, pool_size);
10001c1e:	4433      	add	r3, r6
    block_ptr =  TX_UCHAR_POINTER_SUB(block_ptr, (sizeof(ALIGN_TYPE)));

    /* Cast the pool pointer into a ULONG.  */
    temp_ptr =             TX_BYTE_POOL_TO_UCHAR_POINTER_CONVERT(pool_ptr);
    block_indirect_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(block_ptr);
    *block_indirect_ptr =  temp_ptr;
10001c20:	f843 4c04 	str.w	r4, [r3, #-4]

    block_ptr =            TX_UCHAR_POINTER_SUB(block_ptr, (sizeof(UCHAR *)));
10001c24:	f1a3 0208 	sub.w	r2, r3, #8
    block_indirect_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(block_ptr);
    *block_indirect_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c28:	f843 6c08 	str.w	r6, [r3, #-8]

    /* Now setup the large available block in the pool.  */
    temp_ptr =             TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
    block_indirect_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(temp_ptr);
    *block_indirect_ptr =  block_ptr;
10001c2c:	6032      	str	r2, [r6, #0]
    block_ptr =            TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
    block_ptr =            TX_UCHAR_POINTER_ADD(block_ptr, (sizeof(UCHAR *)));
    free_ptr =             TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(block_ptr);
    *free_ptr =            TX_BYTE_BLOCK_FREE;
10001c2e:	4b0f      	ldr	r3, [pc, #60]	; (10001c6c <_tx_byte_pool_create+0x78>)
10001c30:	6073      	str	r3, [r6, #4]

    /* Clear the owner id.  */
    pool_ptr -> tx_byte_pool_owner =  TX_NULL;
10001c32:	2300      	movs	r3, #0
10001c34:	6223      	str	r3, [r4, #32]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001c36:	f3ef 8210 	mrs	r2, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001c3a:	b672      	cpsid	i

    /* Disable interrupts to place the byte pool on the created list.  */
    TX_DISABLE

    /* Setup the byte pool ID to make it valid.  */
    pool_ptr -> tx_byte_pool_id =  TX_BYTE_POOL_ID;
10001c3c:	4b0c      	ldr	r3, [pc, #48]	; (10001c70 <_tx_byte_pool_create+0x7c>)
10001c3e:	6023      	str	r3, [r4, #0]

    /* Place the byte pool on the list of created byte pools.  First,
       check for an empty list.  */
    if (_tx_byte_pool_created_count == TX_EMPTY)
10001c40:	4b0c      	ldr	r3, [pc, #48]	; (10001c74 <_tx_byte_pool_create+0x80>)
10001c42:	681b      	ldr	r3, [r3, #0]
10001c44:	b953      	cbnz	r3, 10001c5c <_tx_byte_pool_create+0x68>
    {

        /* The created byte pool list is empty.  Add byte pool to empty list.  */
        _tx_byte_pool_created_ptr =                  pool_ptr;
10001c46:	490c      	ldr	r1, [pc, #48]	; (10001c78 <_tx_byte_pool_create+0x84>)
10001c48:	600c      	str	r4, [r1, #0]
        pool_ptr -> tx_byte_pool_created_next =      pool_ptr;
10001c4a:	62e4      	str	r4, [r4, #44]	; 0x2c
        pool_ptr -> tx_byte_pool_created_previous =  pool_ptr;
10001c4c:	6324      	str	r4, [r4, #48]	; 0x30
        pool_ptr -> tx_byte_pool_created_previous =  previous_pool;
        pool_ptr -> tx_byte_pool_created_next =      next_pool;
    }

    /* Increment the number of created byte pools.  */
    _tx_byte_pool_created_count++;
10001c4e:	3301      	adds	r3, #1
10001c50:	4908      	ldr	r1, [pc, #32]	; (10001c74 <_tx_byte_pool_create+0x80>)
10001c52:	600b      	str	r3, [r1, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001c54:	f382 8810 	msr	PRIMASK, r2
    /* Restore interrupts.  */
    TX_RESTORE

    /* Return TX_SUCCESS.  */
    return(TX_SUCCESS);
}
10001c58:	2000      	movs	r0, #0
10001c5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        next_pool =      _tx_byte_pool_created_ptr;
10001c5c:	4906      	ldr	r1, [pc, #24]	; (10001c78 <_tx_byte_pool_create+0x84>)
10001c5e:	6809      	ldr	r1, [r1, #0]
        previous_pool =  next_pool -> tx_byte_pool_created_previous;
10001c60:	6b08      	ldr	r0, [r1, #48]	; 0x30
        next_pool -> tx_byte_pool_created_previous =  pool_ptr;
10001c62:	630c      	str	r4, [r1, #48]	; 0x30
        previous_pool -> tx_byte_pool_created_next =  pool_ptr;
10001c64:	62c4      	str	r4, [r0, #44]	; 0x2c
        pool_ptr -> tx_byte_pool_created_previous =  previous_pool;
10001c66:	6320      	str	r0, [r4, #48]	; 0x30
        pool_ptr -> tx_byte_pool_created_next =      next_pool;
10001c68:	62e1      	str	r1, [r4, #44]	; 0x2c
10001c6a:	e7f0      	b.n	10001c4e <_tx_byte_pool_create+0x5a>
10001c6c:	ffffeeee 			; <UNDEFINED> instruction: 0xffffeeee
10001c70:	42595445 	subsmi	r5, r9, #1157627904	; 0x45000000
10001c74:	38001198 	stmdacc	r0, {r3, r4, r7, r8, ip}
10001c78:	3800119c 	stmdacc	r0, {r2, r3, r4, r7, r8, ip}

10001c7c <_tx_byte_pool_search>:
/*                                            calculation,                */
/*                                            resulting in version 6.1.7  */
/*                                                                        */
/**************************************************************************/
UCHAR  *_tx_byte_pool_search(TX_BYTE_POOL *pool_ptr, ULONG memory_size)
{
10001c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001c7e:	f3ef 8c10 	mrs	ip, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001c82:	b672      	cpsid	i
    /* Disable interrupts.  */
    TX_DISABLE

    /* First, determine if there are enough bytes in the pool.  */
    /* Theoretical bytes available = free bytes + ((fragments-2) * overhead of each block) */
    total_theoretical_available = pool_ptr -> tx_byte_pool_available + ((pool_ptr -> tx_byte_pool_fragments - 2) * ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE))));
10001c84:	6882      	ldr	r2, [r0, #8]
10001c86:	68c3      	ldr	r3, [r0, #12]
10001c88:	1e9c      	subs	r4, r3, #2
10001c8a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
    if (memory_size >= total_theoretical_available)
10001c8e:	428a      	cmp	r2, r1
10001c90:	d907      	bls.n	10001ca2 <_tx_byte_pool_search+0x26>
    }
    else
    {

        /* Pickup thread pointer.  */
        TX_THREAD_GET_CURRENT(thread_ptr)
10001c92:	4a32      	ldr	r2, [pc, #200]	; (10001d5c <_tx_byte_pool_search+0xe0>)
10001c94:	6815      	ldr	r5, [r2, #0]

        /* Setup ownership of the byte pool.  */
        pool_ptr -> tx_byte_pool_owner =  thread_ptr;
10001c96:	6205      	str	r5, [r0, #32]

        /* Walk through the memory pool in search for a large enough block.  */
        current_ptr =      pool_ptr -> tx_byte_pool_search;
10001c98:	6942      	ldr	r2, [r0, #20]
        examine_blocks =   pool_ptr -> tx_byte_pool_fragments + ((UINT) 1);
10001c9a:	3301      	adds	r3, #1
UINT            first_free_block_found =  TX_FALSE;
10001c9c:	f04f 0e00 	mov.w	lr, #0
10001ca0:	e02d      	b.n	10001cfe <_tx_byte_pool_search+0x82>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ca2:	f38c 8810 	msr	PRIMASK, ip
        current_ptr =  TX_NULL;
10001ca6:	2000      	movs	r0, #0
10001ca8:	e04f      	b.n	10001d4a <_tx_byte_pool_search+0xce>
            free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(work_ptr);
            if ((*free_ptr) == TX_BYTE_BLOCK_FREE)
            {

                /* Determine if this is the first free block.  */
                if (first_free_block_found == TX_FALSE)
10001caa:	f1be 0f00 	cmp.w	lr, #0
10001cae:	d102      	bne.n	10001cb6 <_tx_byte_pool_search+0x3a>
                {
                    /* This is the first free block.  */
                    pool_ptr->tx_byte_pool_search =  current_ptr;
10001cb0:	6142      	str	r2, [r0, #20]

                    /* Set the flag to indicate we have found the first free
                       block.  */
                    first_free_block_found =  TX_TRUE;
10001cb2:	f04f 0e01 	mov.w	lr, #1

                /* Block is free, see if it is large enough.  */

                /* Pickup the next block's pointer.  */
                this_block_link_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(current_ptr);
                next_ptr =             *this_block_link_ptr;
10001cb6:	6817      	ldr	r7, [r2, #0]

                /* Calculate the number of bytes available in this block.  */
                available_bytes =   TX_UCHAR_POINTER_DIF(next_ptr, current_ptr);
10001cb8:	1abc      	subs	r4, r7, r2
                available_bytes =   available_bytes - ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)));
10001cba:	3c08      	subs	r4, #8

                /* If this is large enough, we are done because our first-fit algorithm
                   has been satisfied!  */
                if (available_bytes >= memory_size)
10001cbc:	42a1      	cmp	r1, r4
10001cbe:	d927      	bls.n	10001d10 <_tx_byte_pool_search+0x94>

                    /* Not enough memory, check to see if the neighbor is
                       free and can be merged.  */
                    work_ptr =  TX_UCHAR_POINTER_ADD(next_ptr, (sizeof(UCHAR *)));
                    free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(work_ptr);
                    if ((*free_ptr) == TX_BYTE_BLOCK_FREE)
10001cc0:	4c27      	ldr	r4, [pc, #156]	; (10001d60 <_tx_byte_pool_search+0xe4>)
10001cc2:	687e      	ldr	r6, [r7, #4]
10001cc4:	42a6      	cmp	r6, r4
10001cc6:	d003      	beq.n	10001cd0 <_tx_byte_pool_search+0x54>
                    }
                    else
                    {
                        /* Neighbor is not free so we can skip over it!  */
                        next_block_link_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(next_ptr);
                        current_ptr =  *next_block_link_ptr;
10001cc8:	683a      	ldr	r2, [r7, #0]

                        /* Decrement the examined block count to account for this one.  */
                        if (examine_blocks != ((UINT) 0))
10001cca:	b1eb      	cbz	r3, 10001d08 <_tx_byte_pool_search+0x8c>
                        {
                            examine_blocks--;
10001ccc:	3b01      	subs	r3, #1
10001cce:	e01b      	b.n	10001d08 <_tx_byte_pool_search+0x8c>
                        *this_block_link_ptr =  *next_block_link_ptr;
10001cd0:	683c      	ldr	r4, [r7, #0]
10001cd2:	6014      	str	r4, [r2, #0]
                        pool_ptr -> tx_byte_pool_fragments--;
10001cd4:	68c4      	ldr	r4, [r0, #12]
10001cd6:	3c01      	subs	r4, #1
10001cd8:	60c4      	str	r4, [r0, #12]
                        if (pool_ptr -> tx_byte_pool_search ==  next_ptr)
10001cda:	6944      	ldr	r4, [r0, #20]
10001cdc:	42bc      	cmp	r4, r7
10001cde:	d113      	bne.n	10001d08 <_tx_byte_pool_search+0x8c>
                            pool_ptr -> tx_byte_pool_search =  current_ptr;
10001ce0:	6142      	str	r2, [r0, #20]
10001ce2:	e011      	b.n	10001d08 <_tx_byte_pool_search+0x8c>
10001ce4:	f38c 8810 	msr	PRIMASK, ip
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001ce8:	f3ef 8c10 	mrs	ip, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001cec:	b672      	cpsid	i

            /* Disable interrupts.  */
            TX_DISABLE

            /* Determine if anything has changed in terms of pool ownership.  */
            if (pool_ptr -> tx_byte_pool_owner != thread_ptr)
10001cee:	6a04      	ldr	r4, [r0, #32]
10001cf0:	42ac      	cmp	r4, r5
10001cf2:	d003      	beq.n	10001cfc <_tx_byte_pool_search+0x80>
            {

                /* Pool changed ownership in the brief period interrupts were
                   enabled.  Reset the search.  */
                current_ptr =      pool_ptr -> tx_byte_pool_search;
10001cf4:	6942      	ldr	r2, [r0, #20]
                examine_blocks =   pool_ptr -> tx_byte_pool_fragments + ((UINT) 1);
10001cf6:	68c3      	ldr	r3, [r0, #12]
10001cf8:	3301      	adds	r3, #1

                /* Setup our ownership again.  */
                pool_ptr -> tx_byte_pool_owner =  thread_ptr;
10001cfa:	6205      	str	r5, [r0, #32]
            }
        } while(examine_blocks != ((UINT) 0));
10001cfc:	b14b      	cbz	r3, 10001d12 <_tx_byte_pool_search+0x96>
            if ((*free_ptr) == TX_BYTE_BLOCK_FREE)
10001cfe:	4c18      	ldr	r4, [pc, #96]	; (10001d60 <_tx_byte_pool_search+0xe4>)
10001d00:	6857      	ldr	r7, [r2, #4]
10001d02:	42a7      	cmp	r7, r4
10001d04:	d0d1      	beq.n	10001caa <_tx_byte_pool_search+0x2e>
                current_ptr =  *this_block_link_ptr;
10001d06:	6812      	ldr	r2, [r2, #0]
            if (examine_blocks != ((UINT) 0))
10001d08:	2b00      	cmp	r3, #0
10001d0a:	d0eb      	beq.n	10001ce4 <_tx_byte_pool_search+0x68>
                examine_blocks--;
10001d0c:	3b01      	subs	r3, #1
10001d0e:	e7e9      	b.n	10001ce4 <_tx_byte_pool_search+0x68>
                available_bytes =   available_bytes - ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)));
10001d10:	4623      	mov	r3, r4

        /* Determine if a block was found.  If so, determine if it needs to be
           split.  */
        if (available_bytes != ((ULONG) 0))
10001d12:	b1f3      	cbz	r3, 10001d52 <_tx_byte_pool_search+0xd6>
        {

            /* Determine if we need to split this block.  */
            if ((available_bytes - memory_size) >= ((ULONG) TX_BYTE_BLOCK_MIN))
10001d14:	1a5c      	subs	r4, r3, r1
10001d16:	2c13      	cmp	r4, #19
10001d18:	d90b      	bls.n	10001d32 <_tx_byte_pool_search+0xb6>
            {

                /* Split the block.  */
                next_ptr =  TX_UCHAR_POINTER_ADD(current_ptr, (memory_size + ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)))));
10001d1a:	f101 0308 	add.w	r3, r1, #8
10001d1e:	18d4      	adds	r4, r2, r3

                /* Setup the new free block.  */
                next_block_link_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(next_ptr);
                this_block_link_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(current_ptr);
                *next_block_link_ptr =  *this_block_link_ptr;
10001d20:	6815      	ldr	r5, [r2, #0]
10001d22:	50d5      	str	r5, [r2, r3]
                work_ptr =              TX_UCHAR_POINTER_ADD(next_ptr, (sizeof(UCHAR *)));
                free_ptr =              TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(work_ptr);
                *free_ptr =             TX_BYTE_BLOCK_FREE;
10001d24:	4b0e      	ldr	r3, [pc, #56]	; (10001d60 <_tx_byte_pool_search+0xe4>)
10001d26:	6063      	str	r3, [r4, #4]

                /* Increase the total fragment counter.  */
                pool_ptr -> tx_byte_pool_fragments++;
10001d28:	68c3      	ldr	r3, [r0, #12]
10001d2a:	3301      	adds	r3, #1
10001d2c:	60c3      	str	r3, [r0, #12]

                /* Update the current pointer to point at the newly created block.  */
                *this_block_link_ptr =  next_ptr;
10001d2e:	6014      	str	r4, [r2, #0]

                /* Set available equal to memory size for subsequent calculation.  */
                available_bytes =  memory_size;
10001d30:	460b      	mov	r3, r1
            }

            /* In any case, mark the current block as allocated.  */
            work_ptr =              TX_UCHAR_POINTER_ADD(current_ptr, (sizeof(UCHAR *)));
            this_block_link_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
            *this_block_link_ptr =  TX_BYTE_POOL_TO_UCHAR_POINTER_CONVERT(pool_ptr);
10001d32:	6050      	str	r0, [r2, #4]

            /* Reduce the number of available bytes in the pool.  */
            pool_ptr -> tx_byte_pool_available =  (pool_ptr -> tx_byte_pool_available - available_bytes) - ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)));
10001d34:	6881      	ldr	r1, [r0, #8]
10001d36:	1acb      	subs	r3, r1, r3
10001d38:	3b08      	subs	r3, #8
10001d3a:	6083      	str	r3, [r0, #8]

            /* Determine if the search pointer needs to be updated. This is only done
               if the search pointer matches the block to be returned.  */
            if (current_ptr == pool_ptr -> tx_byte_pool_search)
10001d3c:	6943      	ldr	r3, [r0, #20]
10001d3e:	4293      	cmp	r3, r2
10001d40:	d004      	beq.n	10001d4c <_tx_byte_pool_search+0xd0>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001d42:	f38c 8810 	msr	PRIMASK, ip

            /* Restore interrupts.  */
            TX_RESTORE

            /* Adjust the pointer for the application.  */
            current_ptr =  TX_UCHAR_POINTER_ADD(current_ptr, (((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)))));
10001d46:	f102 0008 	add.w	r0, r2, #8
        }
    }

    /* Return the search pointer.  */
    return(current_ptr);
}
10001d4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
                pool_ptr -> tx_byte_pool_search =  *this_block_link_ptr;
10001d4c:	6813      	ldr	r3, [r2, #0]
10001d4e:	6143      	str	r3, [r0, #20]
10001d50:	e7f7      	b.n	10001d42 <_tx_byte_pool_search+0xc6>
10001d52:	f38c 8810 	msr	PRIMASK, ip
            current_ptr =  TX_NULL;
10001d56:	2000      	movs	r0, #0
    return(current_ptr);
10001d58:	e7f7      	b.n	10001d4a <_tx_byte_pool_search+0xce>
10001d5a:	bf00      	nop
10001d5c:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10001d60:	ffffeeee 			; <UNDEFINED> instruction: 0xffffeeee

10001d64 <_tx_initialize_high_level>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID    _tx_initialize_high_level(VOID)
{
10001d64:	b508      	push	{r3, lr}

    /* Initialize the event log, if enabled.  */
    TX_EL_INITIALIZE

    /* Call the thread control initialization function.  */
    _tx_thread_initialize();
10001d66:	f000 f8bf 	bl	10001ee8 <_tx_thread_initialize>

#ifndef TX_NO_TIMER

    /* Call the timer control initialization function.  */
    _tx_timer_initialize();
10001d6a:	f000 fdbf 	bl	100028ec <_tx_timer_initialize>
    _tx_byte_pool_initialize();

    /* Call the mutex initialization function.  */
    _tx_mutex_initialize();
#endif
}
10001d6e:	bd08      	pop	{r3, pc}

10001d70 <_tx_initialize_kernel_enter>:
/*                                            initialization,             */
/*                                            resulting in version 6.3.0  */
/*                                                                        */
/**************************************************************************/
VOID  _tx_initialize_kernel_enter(VOID)
{
10001d70:	b510      	push	{r4, lr}

    /* Determine if the compiler has pre-initialized ThreadX.  */
    if (_tx_thread_system_state != TX_INITIALIZE_ALMOST_DONE)
10001d72:	4b0f      	ldr	r3, [pc, #60]	; (10001db0 <_tx_initialize_kernel_enter+0x40>)
10001d74:	681b      	ldr	r3, [r3, #0]
10001d76:	f113 3f0f 	cmn.w	r3, #252645135	; 0xf0f0f0f
10001d7a:	d10c      	bne.n	10001d96 <_tx_initialize_kernel_enter+0x26>
    TX_INITIALIZE_KERNEL_ENTER_EXTENSION

    /* Ensure that the system state variable is set to indicate
       initialization is in progress.  Note that this variable is
       later used to represent interrupt nesting.  */
    _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
10001d7c:	4c0c      	ldr	r4, [pc, #48]	; (10001db0 <_tx_initialize_kernel_enter+0x40>)
10001d7e:	f04f 33f0 	mov.w	r3, #4042322160	; 0xf0f0f0f0
10001d82:	6023      	str	r3, [r4, #0]
    /* Optional random number generator initialization.  */
    TX_INITIALIZE_RANDOM_GENERATOR_INITIALIZATION

    /* Call the application provided initialization function.  Pass the
       first available memory address to it.  */
    tx_application_define(_tx_initialize_unused_memory);
10001d84:	4b0b      	ldr	r3, [pc, #44]	; (10001db4 <_tx_initialize_kernel_enter+0x44>)
10001d86:	6818      	ldr	r0, [r3, #0]
10001d88:	f7fe fd48 	bl	1000081c <tx_application_define>

    /* Set the system state in preparation for entering the thread
       scheduler.  */
    _tx_thread_system_state =  TX_INITIALIZE_IS_FINISHED;
10001d8c:	2300      	movs	r3, #0
10001d8e:	6023      	str	r3, [r4, #0]
    /* Initialize Execution Profile Kit.  */
    _tx_execution_initialize();
#endif

    /* Enter the scheduling loop to start executing threads!  */
    _tx_thread_schedule();
10001d90:	f001 f93a 	bl	10003008 <_tx_thread_schedule>
#ifdef TX_SAFETY_CRITICAL

    /* If we ever get here, raise safety critical exception.  */
    TX_SAFETY_CRITICAL_EXCEPTION(__FILE__, __LINE__, 0);
#endif
}
10001d94:	bd10      	pop	{r4, pc}
        _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
10001d96:	4b06      	ldr	r3, [pc, #24]	; (10001db0 <_tx_initialize_kernel_enter+0x40>)
10001d98:	f04f 32f0 	mov.w	r2, #4042322160	; 0xf0f0f0f0
10001d9c:	601a      	str	r2, [r3, #0]
        _tx_initialize_low_level();
10001d9e:	f001 f8c3 	bl	10002f28 <_tx_initialize_low_level>
        _tx_initialize_high_level();
10001da2:	f7ff ffdf 	bl	10001d64 <_tx_initialize_high_level>
        TX_PORT_SPECIFIC_POST_INITIALIZATION
10001da6:	4a04      	ldr	r2, [pc, #16]	; (10001db8 <_tx_initialize_kernel_enter+0x48>)
10001da8:	6813      	ldr	r3, [r2, #0]
10001daa:	3301      	adds	r3, #1
10001dac:	6013      	str	r3, [r2, #0]
10001dae:	e7e5      	b.n	10001d7c <_tx_initialize_kernel_enter+0xc>
10001db0:	38000004 	stmdacc	r0, {r2}
10001db4:	380011a0 	stmdacc	r0, {r5, r7, r8, ip}
10001db8:	38001208 	stmdacc	r0, {r3, r9, ip}

10001dbc <_tx_thread_create>:
/*                                                                        */
/**************************************************************************/
UINT  _tx_thread_create(TX_THREAD *thread_ptr, CHAR *name_ptr, VOID (*entry_function)(ULONG id), ULONG entry_input,
                            VOID *stack_start, ULONG stack_size, UINT priority, UINT preempt_threshold,
                            ULONG time_slice, UINT auto_start)
{
10001dbc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001dc0:	4604      	mov	r4, r0
10001dc2:	468a      	mov	sl, r1
10001dc4:	4691      	mov	r9, r2
10001dc6:	4698      	mov	r8, r3
10001dc8:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
10001dcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
10001dce:	9f0c      	ldr	r7, [sp, #48]	; 0x30
#endif

    /* Set the thread stack to a pattern prior to creating the initial
       stack frame.  This pattern is used by the stack checking routines
       to see how much has been used.  */
    TX_MEMSET(stack_start, ((UCHAR) TX_STACK_FILL), stack_size);
10001dd0:	462a      	mov	r2, r5
10001dd2:	21ef      	movs	r1, #239	; 0xef
10001dd4:	4658      	mov	r0, fp
10001dd6:	f001 fa01 	bl	100031dc <memset>
#ifdef TX_ENABLE_STACK_CHECKING

    /* Ensure that there are two ULONG of 0xEF patterns at the top and
       bottom of the thread's stack. This will be used to check for stack
       overflow conditions during run-time.  */
    stack_size =  ((stack_size/(sizeof(ULONG))) * (sizeof(ULONG))) - (sizeof(ULONG));
10001dda:	f025 0303 	bic.w	r3, r5, #3
10001dde:	1f1e      	subs	r6, r3, #4
#ifdef TX_MISRA_ENABLE
    new_stack_start = TX_POINTER_TO_ULONG_CONVERT(stack_start);
#else
    new_stack_start =  TX_POINTER_TO_ALIGN_TYPE_CONVERT(stack_start);
#endif /* TX_MISRA_ENABLE */
    updated_stack_start =  (((new_stack_start) + ((sizeof(ULONG)) - ((ULONG) 1)) ) & (~((sizeof(ULONG)) - ((ULONG) 1))));
10001de0:	f10b 0503 	add.w	r5, fp, #3
10001de4:	f025 0503 	bic.w	r5, r5, #3

    /* Determine if the starting stack address is different.  */
    if (new_stack_start != updated_stack_start)
10001de8:	45ab      	cmp	fp, r5
10001dea:	d001      	beq.n	10001df0 <_tx_thread_create+0x34>
    {

        /* Yes, subtract another ULONG from the size to avoid going past the stack area.  */
        stack_size =  stack_size - (sizeof(ULONG));
10001dec:	f1a3 0608 	sub.w	r6, r3, #8

    /* Prepare the thread control block prior to placing it on the created
       list.  */

    /* Initialize thread control block to all zeros.  */
    TX_MEMSET(thread_ptr, 0, (sizeof(TX_THREAD)));
10001df0:	22d4      	movs	r2, #212	; 0xd4
10001df2:	2100      	movs	r1, #0
10001df4:	4620      	mov	r0, r4
10001df6:	f001 f9f1 	bl	100031dc <memset>

    /* Place the supplied parameters into the thread's control block.  */
    thread_ptr -> tx_thread_name =              name_ptr;
10001dfa:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
    thread_ptr -> tx_thread_entry =             entry_function;
10001dfe:	f8c4 9044 	str.w	r9, [r4, #68]	; 0x44
    thread_ptr -> tx_thread_entry_parameter =   entry_input;
10001e02:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
    thread_ptr -> tx_thread_stack_start =       stack_start;
10001e06:	60e5      	str	r5, [r4, #12]
    thread_ptr -> tx_thread_stack_size =        stack_size;
10001e08:	6166      	str	r6, [r4, #20]
    thread_ptr -> tx_thread_priority =          priority;
10001e0a:	62e7      	str	r7, [r4, #44]	; 0x2c
    thread_ptr -> tx_thread_user_priority =     priority;
10001e0c:	f8c4 7090 	str.w	r7, [r4, #144]	; 0x90
    thread_ptr -> tx_thread_time_slice =        time_slice;
10001e10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10001e12:	61a3      	str	r3, [r4, #24]
    thread_ptr -> tx_thread_new_time_slice =    time_slice;
10001e14:	61e3      	str	r3, [r4, #28]
    thread_ptr -> tx_thread_inherit_priority =  ((UINT) TX_MAX_PRIORITIES);
10001e16:	2320      	movs	r3, #32
10001e18:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98

    /* Calculate the end of the thread's stack area.  */
    temp_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(stack_start);
    temp_ptr =  (TX_UCHAR_POINTER_ADD(temp_ptr, (stack_size - ((ULONG) 1))));
10001e1c:	3e01      	subs	r6, #1
10001e1e:	4435      	add	r5, r6
    thread_ptr -> tx_thread_stack_end =         TX_UCHAR_TO_VOID_POINTER_CONVERT(temp_ptr);
10001e20:	6125      	str	r5, [r4, #16]
    thread_ptr -> tx_thread_preempt_threshold =       preempt_threshold;
    thread_ptr -> tx_thread_user_preempt_threshold =  preempt_threshold;
#else

    /* Preemption-threshold is disabled, determine if preemption-threshold was required.  */
    if (priority != preempt_threshold)
10001e22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001e24:	429f      	cmp	r7, r3
10001e26:	d024      	beq.n	10001e72 <_tx_thread_create+0xb6>
        thread_ptr -> tx_thread_user_preempt_threshold =  priority;
    }
#endif

    /* Now fill in the values that are required for thread initialization.  */
    thread_ptr -> tx_thread_state =  TX_SUSPENDED;
10001e28:	2303      	movs	r3, #3
10001e2a:	6323      	str	r3, [r4, #48]	; 0x30

    /* Setup the necessary fields in the thread timer block.  */
    TX_THREAD_CREATE_TIMEOUT_SETUP(thread_ptr)
10001e2c:	4b27      	ldr	r3, [pc, #156]	; (10001ecc <_tx_thread_create+0x110>)
10001e2e:	6563      	str	r3, [r4, #84]	; 0x54
10001e30:	65a4      	str	r4, [r4, #88]	; 0x58
    TX_THREAD_CREATE_INTERNAL_EXTENSION(thread_ptr)

    /* Call the target specific stack frame building routine to build the
       thread's initial stack and to setup the actual stack pointer in the
       control block.  */
    _tx_thread_stack_build(thread_ptr, _tx_thread_shell_entry);
10001e32:	4927      	ldr	r1, [pc, #156]	; (10001ed0 <_tx_thread_create+0x114>)
10001e34:	4620      	mov	r0, r4
10001e36:	f001 f94f 	bl	100030d8 <_tx_thread_stack_build>

#ifdef TX_ENABLE_STACK_CHECKING

    /* Setup the highest usage stack pointer.  */
    thread_ptr -> tx_thread_stack_highest_ptr =  thread_ptr -> tx_thread_stack_ptr;
10001e3a:	68a3      	ldr	r3, [r4, #8]
10001e3c:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001e40:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001e44:	b672      	cpsid	i

    /* Prepare to make this thread a member of the created thread list.  */
    TX_DISABLE

    /* Load the thread ID field in the thread control block.  */
    thread_ptr -> tx_thread_id =  TX_THREAD_ID;
10001e46:	4b23      	ldr	r3, [pc, #140]	; (10001ed4 <_tx_thread_create+0x118>)
10001e48:	6023      	str	r3, [r4, #0]

    /* Place the thread on the list of created threads.  First,
       check for an empty list.  */
    if (_tx_thread_created_count == TX_EMPTY)
10001e4a:	4b23      	ldr	r3, [pc, #140]	; (10001ed8 <_tx_thread_create+0x11c>)
10001e4c:	681b      	ldr	r3, [r3, #0]
10001e4e:	b9a3      	cbnz	r3, 10001e7a <_tx_thread_create+0xbe>
    {

        /* The created thread list is empty.  Add thread to empty list.  */
        _tx_thread_created_ptr =                    thread_ptr;
10001e50:	4a22      	ldr	r2, [pc, #136]	; (10001edc <_tx_thread_create+0x120>)
10001e52:	6014      	str	r4, [r2, #0]
        thread_ptr -> tx_thread_created_next =      thread_ptr;
10001e54:	f8c4 4088 	str.w	r4, [r4, #136]	; 0x88
        thread_ptr -> tx_thread_created_previous =  thread_ptr;
10001e58:	f8c4 408c 	str.w	r4, [r4, #140]	; 0x8c
        thread_ptr -> tx_thread_created_previous =  previous_thread;
        thread_ptr -> tx_thread_created_next =      next_thread;
    }

    /* Increment the thread created count.  */
    _tx_thread_created_count++;
10001e5c:	3301      	adds	r3, #1
10001e5e:	4a1e      	ldr	r2, [pc, #120]	; (10001ed8 <_tx_thread_create+0x11c>)
10001e60:	6013      	str	r3, [r2, #0]
    _tx_thread_preempt_disable++;
#endif

    /* Determine if an automatic start was requested.  If so, call the resume
       thread function and then check for a preemption condition.  */
    if (auto_start == TX_AUTO_START)
10001e62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10001e64:	2b01      	cmp	r3, #1
10001e66:	d015      	beq.n	10001e94 <_tx_thread_create+0xd8>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001e68:	f385 8810 	msr	PRIMASK, r5
#endif
    }

    /* Always return a success.  */
    return(TX_SUCCESS);
}
10001e6c:	2000      	movs	r0, #0
10001e6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        thread_ptr -> tx_thread_preempt_threshold =       priority;
10001e72:	63e7      	str	r7, [r4, #60]	; 0x3c
        thread_ptr -> tx_thread_user_preempt_threshold =  priority;
10001e74:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
10001e78:	e7d6      	b.n	10001e28 <_tx_thread_create+0x6c>
        next_thread =  _tx_thread_created_ptr;
10001e7a:	4a18      	ldr	r2, [pc, #96]	; (10001edc <_tx_thread_create+0x120>)
10001e7c:	6812      	ldr	r2, [r2, #0]
        previous_thread =  next_thread -> tx_thread_created_previous;
10001e7e:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
        next_thread -> tx_thread_created_previous =  thread_ptr;
10001e82:	f8c2 408c 	str.w	r4, [r2, #140]	; 0x8c
        previous_thread -> tx_thread_created_next =  thread_ptr;
10001e86:	f8c1 4088 	str.w	r4, [r1, #136]	; 0x88
        thread_ptr -> tx_thread_created_previous =  previous_thread;
10001e8a:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
        thread_ptr -> tx_thread_created_next =      next_thread;
10001e8e:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
10001e92:	e7e3      	b.n	10001e5c <_tx_thread_create+0xa0>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001e94:	f3ef 8205 	mrs	r2, IPSR
        if (TX_THREAD_GET_SYSTEM_STATE() >= TX_INITIALIZE_IN_PROGRESS)
10001e98:	4b11      	ldr	r3, [pc, #68]	; (10001ee0 <_tx_thread_create+0x124>)
10001e9a:	681b      	ldr	r3, [r3, #0]
10001e9c:	4313      	orrs	r3, r2
10001e9e:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
10001ea2:	d306      	bcc.n	10001eb2 <_tx_thread_create+0xf6>
            saved_thread_ptr =  _tx_thread_execute_ptr;
10001ea4:	4b0f      	ldr	r3, [pc, #60]	; (10001ee4 <_tx_thread_create+0x128>)
10001ea6:	681e      	ldr	r6, [r3, #0]
            if (saved_thread_ptr != TX_NULL)
10001ea8:	b176      	cbz	r6, 10001ec8 <_tx_thread_create+0x10c>
                saved_threshold =  saved_thread_ptr -> tx_thread_preempt_threshold;
10001eaa:	6bf7      	ldr	r7, [r6, #60]	; 0x3c
                saved_thread_ptr -> tx_thread_preempt_threshold =  saved_thread_ptr -> tx_thread_priority;
10001eac:	6af3      	ldr	r3, [r6, #44]	; 0x2c
10001eae:	63f3      	str	r3, [r6, #60]	; 0x3c
10001eb0:	e001      	b.n	10001eb6 <_tx_thread_create+0xfa>
UINT                    saved_threshold =  ((UINT) 0);
10001eb2:	2700      	movs	r7, #0
            saved_thread_ptr =  TX_NULL;
10001eb4:	463e      	mov	r6, r7
        _tx_thread_system_ni_resume(thread_ptr);
10001eb6:	4620      	mov	r0, r4
10001eb8:	f000 f942 	bl	10002140 <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ebc:	f385 8810 	msr	PRIMASK, r5
        if (saved_thread_ptr != TX_NULL)
10001ec0:	2e00      	cmp	r6, #0
10001ec2:	d0d3      	beq.n	10001e6c <_tx_thread_create+0xb0>
            saved_thread_ptr -> tx_thread_preempt_threshold =  saved_threshold;
10001ec4:	63f7      	str	r7, [r6, #60]	; 0x3c
10001ec6:	e7d1      	b.n	10001e6c <_tx_thread_create+0xb0>
UINT                    saved_threshold =  ((UINT) 0);
10001ec8:	2700      	movs	r7, #0
10001eca:	e7f4      	b.n	10001eb6 <_tx_thread_create+0xfa>
10001ecc:	10002899 	mulne	r0, r9, r8
10001ed0:	10001f09 	andne	r1, r0, r9, lsl #30
10001ed4:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10001ed8:	380011ac 	stmdacc	r0, {r2, r3, r5, r7, r8, ip}
10001edc:	380011b0 	stmdacc	r0, {r4, r5, r7, r8, ip}
10001ee0:	38000004 	stmdacc	r0, {r2}
10001ee4:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}

10001ee8 <_tx_thread_initialize>:
#endif
#endif

    /* Setup the highest priority variable to the max, indicating no thread is currently
       ready.  */
    _tx_thread_highest_priority =  ((UINT) TX_MAX_PRIORITIES);
10001ee8:	4b04      	ldr	r3, [pc, #16]	; (10001efc <_tx_thread_initialize+0x14>)
10001eea:	2220      	movs	r2, #32
10001eec:	601a      	str	r2, [r3, #0]
#endif
#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
                            | (((ULONG) 1) << 10)
#endif
#ifdef TX_TIMER_ENABLE_PERFORMANCE_INFO
                            | (((ULONG) 1) << 9)
10001eee:	4a04      	ldr	r2, [pc, #16]	; (10001f00 <_tx_thread_initialize+0x18>)
10001ef0:	6811      	ldr	r1, [r2, #0]
10001ef2:	4b04      	ldr	r3, [pc, #16]	; (10001f04 <_tx_thread_initialize+0x1c>)
10001ef4:	430b      	orrs	r3, r1
    _tx_build_options =  _tx_build_options 
10001ef6:	6013      	str	r3, [r2, #0]
#endif
#if TX_PORT_SPECIFIC_BUILD_OPTIONS != 0
                            | TX_PORT_SPECIFIC_BUILD_OPTIONS
#endif
                            ;
}
10001ef8:	4770      	bx	lr
10001efa:	bf00      	nop
10001efc:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
10001f00:	380011a4 	stmdacc	r0, {r2, r5, r7, r8, ip}
10001f04:	c15e0e00 	cmpgt	lr, r0, lsl #28

10001f08 <_tx_thread_shell_entry>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_shell_entry(VOID)
{
10001f08:	b538      	push	{r3, r4, r5, lr}
VOID            (*entry_exit_notify)(TX_THREAD *notify_thread_ptr, UINT type);
#endif


    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001f0a:	4b0e      	ldr	r3, [pc, #56]	; (10001f44 <_tx_thread_shell_entry+0x3c>)
10001f0c:	681c      	ldr	r4, [r3, #0]
        (entry_exit_notify)(thread_ptr, TX_THREAD_ENTRY);
    }
#endif

    /* Call current thread's entry function.  */
    (thread_ptr -> tx_thread_entry) (thread_ptr -> tx_thread_entry_parameter);
10001f0e:	6c63      	ldr	r3, [r4, #68]	; 0x44
10001f10:	6ca0      	ldr	r0, [r4, #72]	; 0x48
10001f12:	4798      	blx	r3

    /* Suspend thread with a "completed" state.  */

    /* Determine if the application is using mutexes.  */
    if (_tx_thread_mutex_release != TX_NULL)
10001f14:	4b0c      	ldr	r3, [pc, #48]	; (10001f48 <_tx_thread_shell_entry+0x40>)
10001f16:	681b      	ldr	r3, [r3, #0]
10001f18:	b10b      	cbz	r3, 10001f1e <_tx_thread_shell_entry+0x16>
    {

        /* Yes, call the mutex release function via a function pointer that
           is setup during mutex initialization.  */
        (_tx_thread_mutex_release)(thread_ptr);
10001f1a:	4620      	mov	r0, r4
10001f1c:	4798      	blx	r3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f1e:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f22:	b672      	cpsid	i
    entry_exit_notify =  thread_ptr -> tx_thread_entry_exit_notify;
#endif

    /* Set the status to suspending, in order to indicate the suspension
       is in progress.  */
    thread_ptr -> tx_thread_state =  TX_COMPLETED;
10001f24:	2301      	movs	r3, #1
10001f26:	6323      	str	r3, [r4, #48]	; 0x30
    __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
10001f28:	f3ef 8314 	mrs	r3, CONTROL
        (entry_exit_notify)(thread_ptr, TX_THREAD_EXIT);
    }
#endif

    /* Perform any additional activities for tool or user purpose.  */
    TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
10001f2c:	f023 0304 	bic.w	r3, r3, #4
    __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
10001f30:	f383 8814 	msr	CONTROL, r3

    /* Call actual non-interruptable thread suspension routine.  */
    _tx_thread_system_ni_suspend(thread_ptr, ((ULONG) 0));
10001f34:	2100      	movs	r1, #0
10001f36:	4620      	mov	r0, r4
10001f38:	f000 fa94 	bl	10002464 <_tx_thread_system_ni_suspend>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001f3c:	f385 8810 	msr	PRIMASK, r5
#ifdef TX_SAFETY_CRITICAL

    /* If we ever get here, raise safety critical exception.  */
    TX_SAFETY_CRITICAL_EXCEPTION(__FILE__, __LINE__, 0);
#endif
}
10001f40:	bd38      	pop	{r3, r4, r5, pc}
10001f42:	bf00      	nop
10001f44:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10001f48:	380011c0 	stmdacc	r0, {r6, r7, r8, ip}

10001f4c <_tx_thread_sleep>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_thread_sleep(ULONG timer_ticks)
{
10001f4c:	b538      	push	{r3, r4, r5, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f4e:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f52:	b672      	cpsid	i

    /* Lockout interrupts while the thread is being resumed.  */
    TX_DISABLE

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001f54:	4b16      	ldr	r3, [pc, #88]	; (10001fb0 <_tx_thread_sleep+0x64>)
10001f56:	681c      	ldr	r4, [r3, #0]

    /* Determine if this is a legal request.  */

    /* Is there a current thread?  */
    if (thread_ptr == TX_NULL)
10001f58:	b164      	cbz	r4, 10001f74 <_tx_thread_sleep+0x28>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001f5a:	f3ef 8305 	mrs	r3, IPSR
        /* Illegal caller of this service.  */
        status =  TX_CALLER_ERROR;
    }

    /* Is the caller an ISR or Initialization?  */
    else if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10001f5e:	4a15      	ldr	r2, [pc, #84]	; (10001fb4 <_tx_thread_sleep+0x68>)
10001f60:	6812      	ldr	r2, [r2, #0]
10001f62:	4313      	orrs	r3, r2
10001f64:	d10a      	bne.n	10001f7c <_tx_thread_sleep+0x30>
    }

#ifndef TX_TIMER_PROCESS_IN_ISR

    /* Is the caller the system timer thread?  */
    else if (thread_ptr == &_tx_timer_thread)
10001f66:	4b14      	ldr	r3, [pc, #80]	; (10001fb8 <_tx_thread_sleep+0x6c>)
10001f68:	429c      	cmp	r4, r3
10001f6a:	d00b      	beq.n	10001f84 <_tx_thread_sleep+0x38>
        status =  TX_CALLER_ERROR;
    }
#endif

    /* Determine if the requested number of ticks is zero.  */
    else if (timer_ticks == ((ULONG) 0))
10001f6c:	b970      	cbnz	r0, 10001f8c <_tx_thread_sleep+0x40>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001f6e:	f385 8810 	msr	PRIMASK, r5

        /* Restore interrupts.  */
        TX_RESTORE

        /* Just return with a successful status.  */
        status =  TX_SUCCESS;
10001f72:	e006      	b.n	10001f82 <_tx_thread_sleep+0x36>
10001f74:	f385 8810 	msr	PRIMASK, r5
        status =  TX_CALLER_ERROR;
10001f78:	2013      	movs	r0, #19
10001f7a:	e002      	b.n	10001f82 <_tx_thread_sleep+0x36>
10001f7c:	f385 8810 	msr	PRIMASK, r5
        status =  TX_CALLER_ERROR;
10001f80:	2013      	movs	r0, #19
        }
    }

    /* Return completion status.  */
    return(status);
}
10001f82:	bd38      	pop	{r3, r4, r5, pc}
10001f84:	f385 8810 	msr	PRIMASK, r5
        status =  TX_CALLER_ERROR;
10001f88:	2013      	movs	r0, #19
10001f8a:	e7fa      	b.n	10001f82 <_tx_thread_sleep+0x36>
        if (_tx_thread_preempt_disable != ((UINT) 0))
10001f8c:	4b0b      	ldr	r3, [pc, #44]	; (10001fbc <_tx_thread_sleep+0x70>)
10001f8e:	681b      	ldr	r3, [r3, #0]
10001f90:	b11b      	cbz	r3, 10001f9a <_tx_thread_sleep+0x4e>
10001f92:	f385 8810 	msr	PRIMASK, r5
            status =  TX_CALLER_ERROR;
10001f96:	2013      	movs	r0, #19
10001f98:	e7f3      	b.n	10001f82 <_tx_thread_sleep+0x36>
            thread_ptr -> tx_thread_state =    TX_SLEEP;
10001f9a:	2304      	movs	r3, #4
10001f9c:	6323      	str	r3, [r4, #48]	; 0x30
            _tx_thread_system_ni_suspend(thread_ptr, timer_ticks);
10001f9e:	4601      	mov	r1, r0
10001fa0:	4620      	mov	r0, r4
10001fa2:	f000 fa5f 	bl	10002464 <_tx_thread_system_ni_suspend>
10001fa6:	f385 8810 	msr	PRIMASK, r5
            status =  thread_ptr -> tx_thread_suspend_status;
10001faa:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
    return(status);
10001fae:	e7e8      	b.n	10001f82 <_tx_thread_sleep+0x36>
10001fb0:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10001fb4:	38000004 	stmdacc	r0, {r2}
10001fb8:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}
10001fbc:	38001208 	stmdacc	r0, {r3, r9, ip}

10001fc0 <_tx_thread_stack_analyze>:
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001fc0:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001fc4:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine if the thread pointer is NULL.  */
    if (thread_ptr != TX_NULL)
10001fc6:	b118      	cbz	r0, 10001fd0 <_tx_thread_stack_analyze+0x10>
    {

        /* Determine if the thread ID is invalid.  */
        if (thread_ptr -> tx_thread_id == TX_THREAD_ID)
10001fc8:	6801      	ldr	r1, [r0, #0]
10001fca:	4a1f      	ldr	r2, [pc, #124]	; (10002048 <_tx_thread_stack_analyze+0x88>)
10001fcc:	4291      	cmp	r1, r2
10001fce:	d002      	beq.n	10001fd6 <_tx_thread_stack_analyze+0x16>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001fd0:	f383 8810 	msr	PRIMASK, r3
10001fd4:	4770      	bx	lr
        {

            /* Pickup the current stack variables.  */
            stack_lowest =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_start);
10001fd6:	68c1      	ldr	r1, [r0, #12]

            /* Determine if the pointer is null.  */
            if (stack_lowest != TX_NULL)
10001fd8:	2900      	cmp	r1, #0
10001fda:	d0f9      	beq.n	10001fd0 <_tx_thread_stack_analyze+0x10>
{
10001fdc:	b430      	push	{r4, r5}
            {

                /* Pickup the highest stack pointer.  */
                stack_highest =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_highest_ptr);
10001fde:	f8d0 50cc 	ldr.w	r5, [r0, #204]	; 0xcc

                /* Determine if the pointer is null.  */
                if (stack_highest != TX_NULL)
10001fe2:	b1f5      	cbz	r5, 10002022 <_tx_thread_stack_analyze+0x62>
10001fe4:	f383 8810 	msr	PRIMASK, r3
}
10001fe8:	e002      	b.n	10001ff0 <_tx_thread_stack_analyze+0x30>
                        }
                        else
                        {

                            /* Update the stack lowest, since we need to look in the lower half now.  */
                            stack_lowest =  stack_ptr;
10001fea:	4611      	mov	r1, r2
                        }

                    } while(size > ((ULONG) 1));
10001fec:	2b03      	cmp	r3, #3
10001fee:	d90d      	bls.n	1000200c <_tx_thread_stack_analyze+0x4c>
                        size =  (ULONG) (TX_ULONG_POINTER_DIF(stack_highest, stack_lowest))/((ULONG) 2);
10001ff0:	1a6b      	subs	r3, r5, r1
10001ff2:	109b      	asrs	r3, r3, #2
10001ff4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
                        stack_ptr =  TX_ULONG_POINTER_ADD(stack_lowest, size);
10001ff8:	eb01 028c 	add.w	r2, r1, ip, lsl #2
                        if (*stack_ptr != TX_STACK_FILL)
10001ffc:	f851 402c 	ldr.w	r4, [r1, ip, lsl #2]
10002000:	f1b4 3fef 	cmp.w	r4, #4025479151	; 0xefefefef
10002004:	d0f1      	beq.n	10001fea <_tx_thread_stack_analyze+0x2a>
                            stack_highest =  stack_ptr;
10002006:	4615      	mov	r5, r2
10002008:	e7f0      	b.n	10001fec <_tx_thread_stack_analyze+0x2c>
                    /* Position to first used word - at this point we are within a few words.  */
                    while (*stack_ptr == TX_STACK_FILL)
                    {

                        /* Position to next word in stack.  */
                        stack_ptr =  TX_ULONG_POINTER_ADD(stack_ptr, 1);
1000200a:	3204      	adds	r2, #4
                    while (*stack_ptr == TX_STACK_FILL)
1000200c:	6813      	ldr	r3, [r2, #0]
1000200e:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
10002012:	d0fa      	beq.n	1000200a <_tx_thread_stack_analyze+0x4a>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002014:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002018:	b672      	cpsid	i

                    /* Disable interrupts.  */
                    TX_DISABLE

                    /* Check to see if the thread is still created.  */
                    if (thread_ptr -> tx_thread_id == TX_THREAD_ID)
1000201a:	6804      	ldr	r4, [r0, #0]
1000201c:	490a      	ldr	r1, [pc, #40]	; (10002048 <_tx_thread_stack_analyze+0x88>)
1000201e:	428c      	cmp	r4, r1
10002020:	d003      	beq.n	1000202a <_tx_thread_stack_analyze+0x6a>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002022:	f383 8810 	msr	PRIMASK, r3
        }
    }

    /* Restore interrupts.  */
    TX_RESTORE
}
10002026:	bc30      	pop	{r4, r5}
10002028:	4770      	bx	lr
                        if (stack_ptr > (TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_start)))
1000202a:	68c1      	ldr	r1, [r0, #12]
1000202c:	4291      	cmp	r1, r2
1000202e:	d2f8      	bcs.n	10002022 <_tx_thread_stack_analyze+0x62>
                            if (stack_ptr < (TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_highest_ptr)))
10002030:	f8d0 10cc 	ldr.w	r1, [r0, #204]	; 0xcc
10002034:	4291      	cmp	r1, r2
10002036:	d9f4      	bls.n	10002022 <_tx_thread_stack_analyze+0x62>
                                if (*stack_ptr != TX_STACK_FILL)
10002038:	6811      	ldr	r1, [r2, #0]
1000203a:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
1000203e:	d0f0      	beq.n	10002022 <_tx_thread_stack_analyze+0x62>
                                    thread_ptr -> tx_thread_stack_highest_ptr =  stack_ptr;
10002040:	f8c0 20cc 	str.w	r2, [r0, #204]	; 0xcc
10002044:	e7ed      	b.n	10002022 <_tx_thread_stack_analyze+0x62>
10002046:	bf00      	nop
10002048:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc

1000204c <_tx_thread_stack_error_handler>:
/*                                            stack check error handling, */
/*                                            resulting in version 6.1.9  */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_stack_error_handler(TX_THREAD *thread_ptr)
{
1000204c:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000204e:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002052:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine if the application has registered an error handler.  */
    if (_tx_thread_application_stack_error_handler != TX_NULL)
10002054:	4b03      	ldr	r3, [pc, #12]	; (10002064 <_tx_thread_stack_error_handler+0x18>)
10002056:	681b      	ldr	r3, [r3, #0]
10002058:	b103      	cbz	r3, 1000205c <_tx_thread_stack_error_handler+0x10>
    {

        /* Yes, an error handler is present, simply call the application error handler.  */
        (_tx_thread_application_stack_error_handler)(thread_ptr);
1000205a:	4798      	blx	r3
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000205c:	f384 8810 	msr	PRIMASK, r4

        /* Restore interrupts.  */
        TX_RESTORE
    }
#endif
}
10002060:	bd10      	pop	{r4, pc}
10002062:	bf00      	nop
10002064:	380011a8 	stmdacc	r0, {r3, r5, r7, r8, ip}

10002068 <_tx_thread_system_preempt_check>:
TX_THREAD       *current_thread;
TX_THREAD       *thread_ptr;


    /* Combine the system state and preempt disable flags into one for comparison.  */
    TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
10002068:	4b2f      	ldr	r3, [pc, #188]	; (10002128 <_tx_thread_system_preempt_check+0xc0>)
1000206a:	681b      	ldr	r3, [r3, #0]

    /* Determine if we are in a system state (ISR or Initialization) or internal preemption is disabled.  */
    if (combined_flags == ((ULONG) 0))
1000206c:	2b00      	cmp	r3, #0
1000206e:	d159      	bne.n	10002124 <_tx_thread_system_preempt_check+0xbc>
{
10002070:	b510      	push	{r4, lr}
    {

        /* No, at thread execution level so continue checking for preemption.  */

        /* Pickup thread pointer.  */
        TX_THREAD_GET_CURRENT(current_thread)
10002072:	4b2e      	ldr	r3, [pc, #184]	; (1000212c <_tx_thread_system_preempt_check+0xc4>)
10002074:	681b      	ldr	r3, [r3, #0]

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;
10002076:	4a2e      	ldr	r2, [pc, #184]	; (10002130 <_tx_thread_system_preempt_check+0xc8>)
10002078:	6814      	ldr	r4, [r2, #0]

        /* Determine if preemption should take place.  */
        if (current_thread != thread_ptr)
1000207a:	42a3      	cmp	r3, r4
1000207c:	d01d      	beq.n	100020ba <_tx_thread_system_preempt_check+0x52>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000207e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002082:	b672      	cpsid	i
        {

#ifdef TX_ENABLE_STACK_CHECKING

            /* Check this thread's stack.  */
            TX_THREAD_STACK_CHECK(thread_ptr)
10002084:	b11c      	cbz	r4, 1000208e <_tx_thread_system_preempt_check+0x26>
10002086:	6821      	ldr	r1, [r4, #0]
10002088:	4a2a      	ldr	r2, [pc, #168]	; (10002134 <_tx_thread_system_preempt_check+0xcc>)
1000208a:	4291      	cmp	r1, r2
1000208c:	d016      	beq.n	100020bc <_tx_thread_system_preempt_check+0x54>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000208e:	f383 8810 	msr	PRIMASK, r3


#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Determine if an idle system return is present.  */
            if (thread_ptr == TX_NULL)
10002092:	2c00      	cmp	r4, #0
10002094:	d041      	beq.n	1000211a <_tx_thread_system_preempt_check+0xb2>
            }
            else
            {

                /* No, there is another thread ready to run and will be scheduled upon return.  */
                _tx_thread_performance_non_idle_return_count++;
10002096:	4a28      	ldr	r2, [pc, #160]	; (10002138 <_tx_thread_system_preempt_check+0xd0>)
10002098:	6813      	ldr	r3, [r2, #0]
1000209a:	3301      	adds	r3, #1
1000209c:	6013      	str	r3, [r2, #0]
__attribute__( ( always_inline ) ) static inline void _tx_thread_system_return_inline(void)
{
UINT interrupt_save;

    /* Set PendSV to invoke ThreadX scheduler.  */
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
1000209e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100020a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100020a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100020aa:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
100020ae:	b923      	cbnz	r3, 100020ba <_tx_thread_system_preempt_check+0x52>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100020b0:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
100020b4:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100020b6:	f383 8810 	msr	PRIMASK, r3

            /* Return to the system so the higher priority thread can be scheduled.  */
            _tx_thread_system_return();
        }
    }
}
100020ba:	bd10      	pop	{r4, pc}
            TX_THREAD_STACK_CHECK(thread_ptr)
100020bc:	68a2      	ldr	r2, [r4, #8]
100020be:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100020c2:	428a      	cmp	r2, r1
100020c4:	d201      	bcs.n	100020ca <_tx_thread_system_preempt_check+0x62>
100020c6:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
100020ca:	68e2      	ldr	r2, [r4, #12]
100020cc:	6811      	ldr	r1, [r2, #0]
100020ce:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
100020d2:	d105      	bne.n	100020e0 <_tx_thread_system_preempt_check+0x78>
100020d4:	6921      	ldr	r1, [r4, #16]
100020d6:	f8d1 1001 	ldr.w	r1, [r1, #1]
100020da:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
100020de:	d017      	beq.n	10002110 <_tx_thread_system_preempt_check+0xa8>
100020e0:	f383 8810 	msr	PRIMASK, r3
100020e4:	4620      	mov	r0, r4
100020e6:	f7ff ffb1 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100020ea:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100020ee:	b672      	cpsid	i
100020f0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100020f4:	f852 2c04 	ldr.w	r2, [r2, #-4]
100020f8:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
100020fc:	d0c7      	beq.n	1000208e <_tx_thread_system_preempt_check+0x26>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100020fe:	f383 8810 	msr	PRIMASK, r3
10002102:	4620      	mov	r0, r4
10002104:	f7ff ff5c 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002108:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000210c:	b672      	cpsid	i
    return(int_posture);
1000210e:	e7be      	b.n	1000208e <_tx_thread_system_preempt_check+0x26>
10002110:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10002114:	428a      	cmp	r2, r1
10002116:	d9eb      	bls.n	100020f0 <_tx_thread_system_preempt_check+0x88>
10002118:	e7e2      	b.n	100020e0 <_tx_thread_system_preempt_check+0x78>
                _tx_thread_performance_idle_return_count++;
1000211a:	4a08      	ldr	r2, [pc, #32]	; (1000213c <_tx_thread_system_preempt_check+0xd4>)
1000211c:	6813      	ldr	r3, [r2, #0]
1000211e:	3301      	adds	r3, #1
10002120:	6013      	str	r3, [r2, #0]
10002122:	e7bc      	b.n	1000209e <_tx_thread_system_preempt_check+0x36>
10002124:	4770      	bx	lr
10002126:	bf00      	nop
10002128:	38001208 	stmdacc	r0, {r3, r9, ip}
1000212c:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10002130:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002134:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10002138:	380011f0 	stmdacc	r0, {r4, r5, r6, r7, r8, ip}
1000213c:	380011e8 	stmdacc	r0, {r3, r5, r6, r7, r8, ip}

10002140 <_tx_thread_system_ni_resume>:

/* Define the non-interruptable version of thread resume. It is assumed at this point that
   all interrupts are disabled and will remain so during this function.  */

VOID  _tx_thread_system_ni_resume(TX_THREAD *thread_ptr)
{
10002140:	b510      	push	{r4, lr}
10002142:	4604      	mov	r4, r0


#ifndef TX_NO_TIMER

    /* Deactivate the timeout timer if necessary.  */
    if (thread_ptr -> tx_thread_timer.tx_timer_internal_list_head != TX_NULL)
10002144:	6e43      	ldr	r3, [r0, #100]	; 0x64
10002146:	b113      	cbz	r3, 1000214e <_tx_thread_system_ni_resume+0xe>
    {

        /* Deactivate the thread's timeout timer.  */
        _tx_timer_system_deactivate(&(thread_ptr -> tx_thread_timer));
10002148:	304c      	adds	r0, #76	; 0x4c
1000214a:	f000 fc43 	bl	100029d4 <_tx_timer_system_deactivate>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000214e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002152:	b672      	cpsid	i
#endif

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10002154:	b11c      	cbz	r4, 1000215e <_tx_thread_system_ni_resume+0x1e>
10002156:	6821      	ldr	r1, [r4, #0]
10002158:	4a9c      	ldr	r2, [pc, #624]	; (100023cc <_tx_thread_system_ni_resume+0x28c>)
1000215a:	4291      	cmp	r1, r2
1000215c:	d01e      	beq.n	1000219c <_tx_thread_system_ni_resume+0x5c>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000215e:	f383 8810 	msr	PRIMASK, r3
#endif

    /* Thread is not in the process of suspending. Now check to make sure the thread
       has not already been resumed.  */
    if (thread_ptr -> tx_thread_state != TX_READY)
10002162:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002164:	2b00      	cmp	r3, #0
10002166:	f000 80f6 	beq.w	10002356 <_tx_thread_system_ni_resume+0x216>
    {

        /* No, now check to see if the delayed suspension flag is set.  */
        if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
1000216a:	6b63      	ldr	r3, [r4, #52]	; 0x34
1000216c:	2b00      	cmp	r3, #0
1000216e:	f040 80ee 	bne.w	1000234e <_tx_thread_system_ni_resume+0x20e>
            /* Resume the thread!  */

            /* Make this thread ready.  */

            /* Change the state to ready.  */
            thread_ptr -> tx_thread_state =  TX_READY;
10002172:	6323      	str	r3, [r4, #48]	; 0x30

            /* Log the thread status change.  */
            TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)

            /* Pickup priority of thread.  */
            priority =  thread_ptr -> tx_thread_priority;
10002174:	6ae2      	ldr	r2, [r4, #44]	; 0x2c

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Increment the total number of thread resumptions.  */
            _tx_thread_performance_resume_count++;
10002176:	4996      	ldr	r1, [pc, #600]	; (100023d0 <_tx_thread_system_ni_resume+0x290>)
10002178:	680b      	ldr	r3, [r1, #0]
1000217a:	3301      	adds	r3, #1
1000217c:	600b      	str	r3, [r1, #0]

            /* Increment this thread's resume count.  */
            thread_ptr -> tx_thread_performance_resume_count++;
1000217e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
10002182:	3301      	adds	r3, #1
10002184:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
#endif

            /* Determine if there are other threads at this priority that are
               ready.  */
            head_ptr =  _tx_thread_priority_list[priority];
10002188:	4b92      	ldr	r3, [pc, #584]	; (100023d4 <_tx_thread_system_ni_resume+0x294>)
1000218a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
            if (head_ptr == TX_NULL)
1000218e:	b3a3      	cbz	r3, 100021fa <_tx_thread_system_ni_resume+0xba>
            {

                /* No, there are other threads at this priority already ready.  */

                /* Just add this thread to the priority list.  */
                tail_ptr =                                 head_ptr -> tx_thread_ready_previous;
10002190:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                tail_ptr -> tx_thread_ready_next =         thread_ptr;
10002192:	6214      	str	r4, [r2, #32]
                head_ptr -> tx_thread_ready_previous =     thread_ptr;
10002194:	625c      	str	r4, [r3, #36]	; 0x24
                thread_ptr -> tx_thread_ready_previous =   tail_ptr;
10002196:	6262      	str	r2, [r4, #36]	; 0x24
                thread_ptr -> tx_thread_ready_next =       head_ptr;
10002198:	6223      	str	r3, [r4, #32]
1000219a:	e0dc      	b.n	10002356 <_tx_thread_system_ni_resume+0x216>
    TX_THREAD_STACK_CHECK(thread_ptr)
1000219c:	68a2      	ldr	r2, [r4, #8]
1000219e:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100021a2:	428a      	cmp	r2, r1
100021a4:	d201      	bcs.n	100021aa <_tx_thread_system_ni_resume+0x6a>
100021a6:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
100021aa:	68e2      	ldr	r2, [r4, #12]
100021ac:	6811      	ldr	r1, [r2, #0]
100021ae:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
100021b2:	d105      	bne.n	100021c0 <_tx_thread_system_ni_resume+0x80>
100021b4:	6921      	ldr	r1, [r4, #16]
100021b6:	f8d1 1001 	ldr.w	r1, [r1, #1]
100021ba:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
100021be:	d017      	beq.n	100021f0 <_tx_thread_system_ni_resume+0xb0>
100021c0:	f383 8810 	msr	PRIMASK, r3
100021c4:	4620      	mov	r0, r4
100021c6:	f7ff ff41 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100021ca:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100021ce:	b672      	cpsid	i
100021d0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100021d4:	f852 2c04 	ldr.w	r2, [r2, #-4]
100021d8:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
100021dc:	d0bf      	beq.n	1000215e <_tx_thread_system_ni_resume+0x1e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100021de:	f383 8810 	msr	PRIMASK, r3
100021e2:	4620      	mov	r0, r4
100021e4:	f7ff feec 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100021e8:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100021ec:	b672      	cpsid	i
    return(int_posture);
100021ee:	e7b6      	b.n	1000215e <_tx_thread_system_ni_resume+0x1e>
100021f0:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100021f4:	428a      	cmp	r2, r1
100021f6:	d9eb      	bls.n	100021d0 <_tx_thread_system_ni_resume+0x90>
100021f8:	e7e2      	b.n	100021c0 <_tx_thread_system_ni_resume+0x80>
                _tx_thread_priority_list[priority] =       thread_ptr;
100021fa:	4b76      	ldr	r3, [pc, #472]	; (100023d4 <_tx_thread_system_ni_resume+0x294>)
100021fc:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
                thread_ptr -> tx_thread_ready_next =       thread_ptr;
10002200:	6224      	str	r4, [r4, #32]
                thread_ptr -> tx_thread_ready_previous =   thread_ptr;
10002202:	6264      	str	r4, [r4, #36]	; 0x24
                TX_MOD32_BIT_SET(priority, priority_bit)
10002204:	2301      	movs	r3, #1
10002206:	fa03 f102 	lsl.w	r1, r3, r2
                _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | priority_bit;
1000220a:	4873      	ldr	r0, [pc, #460]	; (100023d8 <_tx_thread_system_ni_resume+0x298>)
1000220c:	6803      	ldr	r3, [r0, #0]
1000220e:	430b      	orrs	r3, r1
10002210:	6003      	str	r3, [r0, #0]
                if (priority < _tx_thread_highest_priority)
10002212:	4b72      	ldr	r3, [pc, #456]	; (100023dc <_tx_thread_system_ni_resume+0x29c>)
10002214:	681b      	ldr	r3, [r3, #0]
10002216:	4293      	cmp	r3, r2
10002218:	f240 809d 	bls.w	10002356 <_tx_thread_system_ni_resume+0x216>
                    _tx_thread_highest_priority =  priority;
1000221c:	4b6f      	ldr	r3, [pc, #444]	; (100023dc <_tx_thread_system_ni_resume+0x29c>)
1000221e:	601a      	str	r2, [r3, #0]
                    execute_ptr =  _tx_thread_execute_ptr;
10002220:	4b6f      	ldr	r3, [pc, #444]	; (100023e0 <_tx_thread_system_ni_resume+0x2a0>)
10002222:	681b      	ldr	r3, [r3, #0]
                    if (execute_ptr == TX_NULL)
10002224:	2b00      	cmp	r3, #0
10002226:	d04e      	beq.n	100022c6 <_tx_thread_system_ni_resume+0x186>
                        if (priority < execute_ptr -> tx_thread_preempt_threshold)
10002228:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
1000222a:	4291      	cmp	r1, r2
1000222c:	f240 8093 	bls.w	10002356 <_tx_thread_system_ni_resume+0x216>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002230:	f3ef 8205 	mrs	r2, IPSR
                            if (TX_THREAD_GET_SYSTEM_STATE() == ((ULONG) 0))
10002234:	496b      	ldr	r1, [pc, #428]	; (100023e4 <_tx_thread_system_ni_resume+0x2a4>)
10002236:	6809      	ldr	r1, [r1, #0]
10002238:	430a      	orrs	r2, r1
1000223a:	d147      	bne.n	100022cc <_tx_thread_system_ni_resume+0x18c>
                                _tx_thread_performance_solicited_preemption_count++;
1000223c:	496a      	ldr	r1, [pc, #424]	; (100023e8 <_tx_thread_system_ni_resume+0x2a8>)
1000223e:	680a      	ldr	r2, [r1, #0]
10002240:	3201      	adds	r2, #1
10002242:	600a      	str	r2, [r1, #0]
                                execute_ptr -> tx_thread_performance_solicited_preemption_count++;
10002244:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
10002248:	3201      	adds	r2, #1
1000224a:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
                            execute_ptr -> tx_thread_performance_last_preempting_thread =  thread_ptr;
1000224e:	f8c3 40b8 	str.w	r4, [r3, #184]	; 0xb8
                            _tx_thread_execute_ptr =  thread_ptr;
10002252:	4b63      	ldr	r3, [pc, #396]	; (100023e0 <_tx_thread_system_ni_resume+0x2a0>)
10002254:	601c      	str	r4, [r3, #0]
                            if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10002256:	4b65      	ldr	r3, [pc, #404]	; (100023ec <_tx_thread_system_ni_resume+0x2ac>)
10002258:	681b      	ldr	r3, [r3, #0]
1000225a:	4a65      	ldr	r2, [pc, #404]	; (100023f0 <_tx_thread_system_ni_resume+0x2b0>)
1000225c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10002260:	42a2      	cmp	r2, r4
10002262:	d00c      	beq.n	1000227e <_tx_thread_system_ni_resume+0x13e>
                                _tx_thread_performance__execute_log_index++;
10002264:	3301      	adds	r3, #1
10002266:	4a61      	ldr	r2, [pc, #388]	; (100023ec <_tx_thread_system_ni_resume+0x2ac>)
10002268:	6013      	str	r3, [r2, #0]
                                if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
1000226a:	2b07      	cmp	r3, #7
1000226c:	d902      	bls.n	10002274 <_tx_thread_system_ni_resume+0x134>
                                    _tx_thread_performance__execute_log_index =  ((UINT) 0);
1000226e:	4613      	mov	r3, r2
10002270:	2200      	movs	r2, #0
10002272:	601a      	str	r2, [r3, #0]
                                _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10002274:	4b5d      	ldr	r3, [pc, #372]	; (100023ec <_tx_thread_system_ni_resume+0x2ac>)
10002276:	681a      	ldr	r2, [r3, #0]
10002278:	4b5d      	ldr	r3, [pc, #372]	; (100023f0 <_tx_thread_system_ni_resume+0x2b0>)
1000227a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000227e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002282:	b672      	cpsid	i
                            TX_THREAD_STACK_CHECK(thread_ptr)
10002284:	b11c      	cbz	r4, 1000228e <_tx_thread_system_ni_resume+0x14e>
10002286:	6821      	ldr	r1, [r4, #0]
10002288:	4a50      	ldr	r2, [pc, #320]	; (100023cc <_tx_thread_system_ni_resume+0x28c>)
1000228a:	4291      	cmp	r1, r2
1000228c:	d030      	beq.n	100022f0 <_tx_thread_system_ni_resume+0x1b0>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000228e:	f383 8810 	msr	PRIMASK, r3
                            TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
10002292:	4b58      	ldr	r3, [pc, #352]	; (100023f4 <_tx_thread_system_ni_resume+0x2b4>)
10002294:	681b      	ldr	r3, [r3, #0]
                            if (combined_flags == ((ULONG) 0))
10002296:	2b00      	cmp	r3, #0
10002298:	f040 8096 	bne.w	100023c8 <_tx_thread_system_ni_resume+0x288>
                                _tx_thread_performance_non_idle_return_count++;
1000229c:	4a56      	ldr	r2, [pc, #344]	; (100023f8 <_tx_thread_system_ni_resume+0x2b8>)
1000229e:	6813      	ldr	r3, [r2, #0]
100022a0:	3301      	adds	r3, #1
100022a2:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
100022a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100022a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100022ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100022b0:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
100022b4:	2b00      	cmp	r3, #0
100022b6:	f040 8087 	bne.w	100023c8 <_tx_thread_system_ni_resume+0x288>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100022ba:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
100022be:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100022c0:	f383 8810 	msr	PRIMASK, r3
                            return;
100022c4:	e080      	b.n	100023c8 <_tx_thread_system_ni_resume+0x288>
                        _tx_thread_execute_ptr =  thread_ptr;
100022c6:	4b46      	ldr	r3, [pc, #280]	; (100023e0 <_tx_thread_system_ni_resume+0x2a0>)
100022c8:	601c      	str	r4, [r3, #0]
100022ca:	e044      	b.n	10002356 <_tx_thread_system_ni_resume+0x216>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100022cc:	f3ef 8105 	mrs	r1, IPSR
                                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
100022d0:	4a44      	ldr	r2, [pc, #272]	; (100023e4 <_tx_thread_system_ni_resume+0x2a4>)
100022d2:	6812      	ldr	r2, [r2, #0]
100022d4:	430a      	orrs	r2, r1
100022d6:	f1b2 3ff0 	cmp.w	r2, #4042322160	; 0xf0f0f0f0
100022da:	d2b8      	bcs.n	1000224e <_tx_thread_system_ni_resume+0x10e>
                                    _tx_thread_performance_interrupt_preemption_count++;
100022dc:	4947      	ldr	r1, [pc, #284]	; (100023fc <_tx_thread_system_ni_resume+0x2bc>)
100022de:	680a      	ldr	r2, [r1, #0]
100022e0:	3201      	adds	r2, #1
100022e2:	600a      	str	r2, [r1, #0]
                                    execute_ptr -> tx_thread_performance_interrupt_preemption_count++;
100022e4:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
100022e8:	3201      	adds	r2, #1
100022ea:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
100022ee:	e7ae      	b.n	1000224e <_tx_thread_system_ni_resume+0x10e>
                            TX_THREAD_STACK_CHECK(thread_ptr)
100022f0:	68a2      	ldr	r2, [r4, #8]
100022f2:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100022f6:	428a      	cmp	r2, r1
100022f8:	d201      	bcs.n	100022fe <_tx_thread_system_ni_resume+0x1be>
100022fa:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
100022fe:	68e2      	ldr	r2, [r4, #12]
10002300:	6811      	ldr	r1, [r2, #0]
10002302:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002306:	d105      	bne.n	10002314 <_tx_thread_system_ni_resume+0x1d4>
10002308:	6921      	ldr	r1, [r4, #16]
1000230a:	f8d1 1001 	ldr.w	r1, [r1, #1]
1000230e:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002312:	d017      	beq.n	10002344 <_tx_thread_system_ni_resume+0x204>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002314:	f383 8810 	msr	PRIMASK, r3
10002318:	4620      	mov	r0, r4
1000231a:	f7ff fe97 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000231e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002322:	b672      	cpsid	i
10002324:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10002328:	f852 2c04 	ldr.w	r2, [r2, #-4]
1000232c:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
10002330:	d0ad      	beq.n	1000228e <_tx_thread_system_ni_resume+0x14e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002332:	f383 8810 	msr	PRIMASK, r3
10002336:	4620      	mov	r0, r4
10002338:	f7ff fe42 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000233c:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002340:	b672      	cpsid	i
    return(int_posture);
10002342:	e7a4      	b.n	1000228e <_tx_thread_system_ni_resume+0x14e>
10002344:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10002348:	428a      	cmp	r2, r1
1000234a:	d9eb      	bls.n	10002324 <_tx_thread_system_ni_resume+0x1e4>
1000234c:	e7e2      	b.n	10002314 <_tx_thread_system_ni_resume+0x1d4>
        /* Else, delayed suspend flag was set.  */
        else
        {

            /* Clear the delayed suspend flag and change the state.  */
            thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
1000234e:	2300      	movs	r3, #0
10002350:	6363      	str	r3, [r4, #52]	; 0x34
            thread_ptr -> tx_thread_state =            TX_SUSPENDED;
10002352:	2303      	movs	r3, #3
10002354:	6323      	str	r3, [r4, #48]	; 0x30
    }

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Is the execute pointer different?  */
    if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10002356:	4b25      	ldr	r3, [pc, #148]	; (100023ec <_tx_thread_system_ni_resume+0x2ac>)
10002358:	681b      	ldr	r3, [r3, #0]
1000235a:	4a25      	ldr	r2, [pc, #148]	; (100023f0 <_tx_thread_system_ni_resume+0x2b0>)
1000235c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10002360:	491f      	ldr	r1, [pc, #124]	; (100023e0 <_tx_thread_system_ni_resume+0x2a0>)
10002362:	680c      	ldr	r4, [r1, #0]
10002364:	42a2      	cmp	r2, r4
10002366:	d00c      	beq.n	10002382 <_tx_thread_system_ni_resume+0x242>
    {

        /* Move to next entry.  */
        _tx_thread_performance__execute_log_index++;
10002368:	3301      	adds	r3, #1
1000236a:	4a20      	ldr	r2, [pc, #128]	; (100023ec <_tx_thread_system_ni_resume+0x2ac>)
1000236c:	6013      	str	r3, [r2, #0]

        /* Check for wrap condition.  */
        if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
1000236e:	2b07      	cmp	r3, #7
10002370:	d902      	bls.n	10002378 <_tx_thread_system_ni_resume+0x238>
        {

            /* Set the index to the beginning.  */
            _tx_thread_performance__execute_log_index =  ((UINT) 0);
10002372:	4613      	mov	r3, r2
10002374:	2200      	movs	r2, #0
10002376:	601a      	str	r2, [r3, #0]
        }

        /* Log the new execute pointer.  */
        _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10002378:	4b1c      	ldr	r3, [pc, #112]	; (100023ec <_tx_thread_system_ni_resume+0x2ac>)
1000237a:	681a      	ldr	r2, [r3, #0]
1000237c:	4b1c      	ldr	r3, [pc, #112]	; (100023f0 <_tx_thread_system_ni_resume+0x2b0>)
1000237e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
        }
    }
#endif

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(current_thread)
10002382:	4b1f      	ldr	r3, [pc, #124]	; (10002400 <_tx_thread_system_ni_resume+0x2c0>)
10002384:	681b      	ldr	r3, [r3, #0]

    /* Determine if a preemption condition is present.  */
    if (current_thread != _tx_thread_execute_ptr)
10002386:	429c      	cmp	r4, r3
10002388:	d01e      	beq.n	100023c8 <_tx_thread_system_ni_resume+0x288>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000238a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000238e:	b672      	cpsid	i

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;

        /* Check this thread's stack.  */
        TX_THREAD_STACK_CHECK(thread_ptr)
10002390:	b11c      	cbz	r4, 1000239a <_tx_thread_system_ni_resume+0x25a>
10002392:	6821      	ldr	r1, [r4, #0]
10002394:	4a0d      	ldr	r2, [pc, #52]	; (100023cc <_tx_thread_system_ni_resume+0x28c>)
10002396:	4291      	cmp	r1, r2
10002398:	d034      	beq.n	10002404 <_tx_thread_system_ni_resume+0x2c4>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000239a:	f383 8810 	msr	PRIMASK, r3
#endif

        /* Now determine if preemption should take place. This is only possible if the current thread pointer is
           not the same as the execute thread pointer AND the system state and preempt disable flags are clear.  */
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
1000239e:	4b15      	ldr	r3, [pc, #84]	; (100023f4 <_tx_thread_system_ni_resume+0x2b4>)
100023a0:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
100023a2:	b98b      	cbnz	r3, 100023c8 <_tx_thread_system_ni_resume+0x288>
        {

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* There is another thread ready to run and will be scheduled upon return.  */
            _tx_thread_performance_non_idle_return_count++;
100023a4:	4a14      	ldr	r2, [pc, #80]	; (100023f8 <_tx_thread_system_ni_resume+0x2b8>)
100023a6:	6813      	ldr	r3, [r2, #0]
100023a8:	3301      	adds	r3, #1
100023aa:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
100023ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100023b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100023b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100023b8:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
100023bc:	b923      	cbnz	r3, 100023c8 <_tx_thread_system_ni_resume+0x288>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100023be:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
100023c2:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100023c4:	f383 8810 	msr	PRIMASK, r3

            /* Preemption is needed - return to the system!  */
            _tx_thread_system_return();
        }
    }
}
100023c8:	bd10      	pop	{r4, pc}
100023ca:	bf00      	nop
100023cc:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
100023d0:	380011f4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, ip}
100023d4:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
100023d8:	3800128c 	stmdacc	r0, {r2, r3, r7, r9, ip}
100023dc:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
100023e0:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
100023e4:	38000004 	stmdacc	r0, {r2}
100023e8:	380011f8 	stmdacc	r0, {r3, r4, r5, r6, r7, r8, ip}
100023ec:	380011c4 	stmdacc	r0, {r2, r6, r7, r8, ip}
100023f0:	380011c8 	stmdacc	r0, {r3, r6, r7, r8, ip}
100023f4:	38001208 	stmdacc	r0, {r3, r9, ip}
100023f8:	380011f0 	stmdacc	r0, {r4, r5, r6, r7, r8, ip}
100023fc:	380011ec 	stmdacc	r0, {r2, r3, r5, r6, r7, r8, ip}
10002400:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
        TX_THREAD_STACK_CHECK(thread_ptr)
10002404:	68a2      	ldr	r2, [r4, #8]
10002406:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
1000240a:	428a      	cmp	r2, r1
1000240c:	d201      	bcs.n	10002412 <_tx_thread_system_ni_resume+0x2d2>
1000240e:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10002412:	68e2      	ldr	r2, [r4, #12]
10002414:	6811      	ldr	r1, [r2, #0]
10002416:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
1000241a:	d105      	bne.n	10002428 <_tx_thread_system_ni_resume+0x2e8>
1000241c:	6921      	ldr	r1, [r4, #16]
1000241e:	f8d1 1001 	ldr.w	r1, [r1, #1]
10002422:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002426:	d017      	beq.n	10002458 <_tx_thread_system_ni_resume+0x318>
10002428:	f383 8810 	msr	PRIMASK, r3
1000242c:	4620      	mov	r0, r4
1000242e:	f7ff fe0d 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002432:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002436:	b672      	cpsid	i
10002438:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
1000243c:	f852 2c04 	ldr.w	r2, [r2, #-4]
10002440:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
10002444:	d0a9      	beq.n	1000239a <_tx_thread_system_ni_resume+0x25a>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002446:	f383 8810 	msr	PRIMASK, r3
1000244a:	4620      	mov	r0, r4
1000244c:	f7ff fdb8 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002450:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002454:	b672      	cpsid	i
    return(int_posture);
10002456:	e7a0      	b.n	1000239a <_tx_thread_system_ni_resume+0x25a>
10002458:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
1000245c:	428a      	cmp	r2, r1
1000245e:	d9eb      	bls.n	10002438 <_tx_thread_system_ni_resume+0x2f8>
10002460:	e7e2      	b.n	10002428 <_tx_thread_system_ni_resume+0x2e8>
10002462:	bf00      	nop

10002464 <_tx_thread_system_ni_suspend>:

/* Define the system suspend function that is not interruptable, i.e., it is assumed that
   interrupts are disabled upon calling this function.  */

VOID  _tx_thread_system_ni_suspend(TX_THREAD *thread_ptr, ULONG wait_option)
{
10002464:	b570      	push	{r4, r5, r6, lr}
10002466:	4604      	mov	r4, r0
ULONG                       time_stamp =  ((ULONG) 0);
#endif


    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(current_thread)
10002468:	4ba0      	ldr	r3, [pc, #640]	; (100026ec <_tx_thread_system_ni_suspend+0x288>)
1000246a:	681e      	ldr	r6, [r3, #0]

#ifndef TX_NO_TIMER


    /* Determine if a timeout needs to be activated.  */
    if (thread_ptr == current_thread)
1000246c:	4286      	cmp	r6, r0
1000246e:	d060      	beq.n	10002532 <_tx_thread_system_ni_suspend+0xce>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002470:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002474:	b672      	cpsid	i
#endif

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10002476:	b11c      	cbz	r4, 10002480 <_tx_thread_system_ni_suspend+0x1c>
10002478:	6821      	ldr	r1, [r4, #0]
1000247a:	4a9d      	ldr	r2, [pc, #628]	; (100026f0 <_tx_thread_system_ni_suspend+0x28c>)
1000247c:	4291      	cmp	r1, r2
1000247e:	d065      	beq.n	1000254c <_tx_thread_system_ni_suspend+0xe8>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002480:	f383 8810 	msr	PRIMASK, r3
#endif

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Increment the thread's suspend count.  */
    thread_ptr -> tx_thread_performance_suspend_count++;
10002484:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
10002488:	3301      	adds	r3, #1
1000248a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8

    /* Increment the total number of thread suspensions.  */
    _tx_thread_performance_suspend_count++;
1000248e:	4a99      	ldr	r2, [pc, #612]	; (100026f4 <_tx_thread_system_ni_suspend+0x290>)
10002490:	6813      	ldr	r3, [r2, #0]
10002492:	3301      	adds	r3, #1
10002494:	6013      	str	r3, [r2, #0]
        time_stamp =  entry_ptr -> tx_trace_buffer_entry_time_stamp;
    }
#endif

    /* Pickup priority of thread.  */
    priority =  thread_ptr -> tx_thread_priority;
10002496:	6ae2      	ldr	r2, [r4, #44]	; 0x2c

    /* Pickup the next ready thread pointer.  */
    ready_next =      thread_ptr -> tx_thread_ready_next;
10002498:	6a23      	ldr	r3, [r4, #32]

    /* Determine if there are other threads at this priority that are
       ready.  */
    if (ready_next != thread_ptr)
1000249a:	429c      	cmp	r4, r3
1000249c:	f000 808a 	beq.w	100025b4 <_tx_thread_system_ni_suspend+0x150>
    {

        /* Yes, there are other threads at this priority ready.  */

        /* Pickup the previous ready thread pointer.  */
        ready_previous =  thread_ptr -> tx_thread_ready_previous;
100024a0:	6a61      	ldr	r1, [r4, #36]	; 0x24

        /* Just remove this thread from the priority list.  */
        ready_next -> tx_thread_ready_previous =    ready_previous;
100024a2:	6259      	str	r1, [r3, #36]	; 0x24
        ready_previous -> tx_thread_ready_next =    ready_next;
100024a4:	620b      	str	r3, [r1, #32]

        /* Determine if this is the head of the priority list.  */
        if (_tx_thread_priority_list[priority] == thread_ptr)
100024a6:	4994      	ldr	r1, [pc, #592]	; (100026f8 <_tx_thread_system_ni_suspend+0x294>)
100024a8:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
100024ac:	42a1      	cmp	r1, r4
100024ae:	d07d      	beq.n	100025ac <_tx_thread_system_ni_suspend+0x148>
            _tx_thread_highest_priority =  base_priority + ((UINT) priority_bit);
        }
    }

    /* Determine if the suspending thread is the thread designated to execute.  */
    if (thread_ptr == _tx_thread_execute_ptr)
100024b0:	4b92      	ldr	r3, [pc, #584]	; (100026fc <_tx_thread_system_ni_suspend+0x298>)
100024b2:	681d      	ldr	r5, [r3, #0]
100024b4:	42a5      	cmp	r5, r4
100024b6:	f000 80ae 	beq.w	10002616 <_tx_thread_system_ni_suspend+0x1b2>
    }

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Is the execute pointer different?  */
    if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
100024ba:	4b91      	ldr	r3, [pc, #580]	; (10002700 <_tx_thread_system_ni_suspend+0x29c>)
100024bc:	681b      	ldr	r3, [r3, #0]
100024be:	4a91      	ldr	r2, [pc, #580]	; (10002704 <_tx_thread_system_ni_suspend+0x2a0>)
100024c0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
100024c4:	4295      	cmp	r5, r2
100024c6:	d00c      	beq.n	100024e2 <_tx_thread_system_ni_suspend+0x7e>
    {

        /* Move to next entry.  */
        _tx_thread_performance__execute_log_index++;
100024c8:	3301      	adds	r3, #1
100024ca:	4a8d      	ldr	r2, [pc, #564]	; (10002700 <_tx_thread_system_ni_suspend+0x29c>)
100024cc:	6013      	str	r3, [r2, #0]

        /* Check for wrap condition.  */
        if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
100024ce:	2b07      	cmp	r3, #7
100024d0:	d902      	bls.n	100024d8 <_tx_thread_system_ni_suspend+0x74>
        {

            /* Set the index to the beginning.  */
            _tx_thread_performance__execute_log_index =  ((UINT) 0);
100024d2:	4613      	mov	r3, r2
100024d4:	2200      	movs	r2, #0
100024d6:	601a      	str	r2, [r3, #0]
        }

        /* Log the new execute pointer.  */
        _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
100024d8:	4b89      	ldr	r3, [pc, #548]	; (10002700 <_tx_thread_system_ni_suspend+0x29c>)
100024da:	681a      	ldr	r2, [r3, #0]
100024dc:	4b89      	ldr	r3, [pc, #548]	; (10002704 <_tx_thread_system_ni_suspend+0x2a0>)
100024de:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
        }
    }
#endif

    /* Determine if a preemption condition is present.  */
    if (current_thread != _tx_thread_execute_ptr)
100024e2:	42b5      	cmp	r5, r6
100024e4:	d024      	beq.n	10002530 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100024e6:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100024ea:	b672      	cpsid	i

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;

        /* Check this thread's stack.  */
        TX_THREAD_STACK_CHECK(thread_ptr)
100024ec:	b125      	cbz	r5, 100024f8 <_tx_thread_system_ni_suspend+0x94>
100024ee:	6829      	ldr	r1, [r5, #0]
100024f0:	4a7f      	ldr	r2, [pc, #508]	; (100026f0 <_tx_thread_system_ni_suspend+0x28c>)
100024f2:	4291      	cmp	r1, r2
100024f4:	f000 80c4 	beq.w	10002680 <_tx_thread_system_ni_suspend+0x21c>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100024f8:	f383 8810 	msr	PRIMASK, r3
#endif

        /* Determine if preemption should take place. This is only possible if the current thread pointer is
           not the same as the execute thread pointer AND the system state and preempt disable flags are clear.  */
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
100024fc:	4b82      	ldr	r3, [pc, #520]	; (10002708 <_tx_thread_system_ni_suspend+0x2a4>)
100024fe:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
10002500:	b9b3      	cbnz	r3, 10002530 <_tx_thread_system_ni_suspend+0xcc>
        {

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Determine if an idle system return is present.  */
            if (_tx_thread_execute_ptr == TX_NULL)
10002502:	4b7e      	ldr	r3, [pc, #504]	; (100026fc <_tx_thread_system_ni_suspend+0x298>)
10002504:	681b      	ldr	r3, [r3, #0]
10002506:	2b00      	cmp	r3, #0
10002508:	f000 80ea 	beq.w	100026e0 <_tx_thread_system_ni_suspend+0x27c>
            }
            else
            {

                /* No, there is another thread ready to run and will be scheduled upon return.  */
                _tx_thread_performance_non_idle_return_count++;
1000250c:	4a7f      	ldr	r2, [pc, #508]	; (1000270c <_tx_thread_system_ni_suspend+0x2a8>)
1000250e:	6813      	ldr	r3, [r2, #0]
10002510:	3301      	adds	r3, #1
10002512:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
10002514:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10002518:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1000251c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002520:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10002524:	b923      	cbnz	r3, 10002530 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002526:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
1000252a:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000252c:	f383 8810 	msr	PRIMASK, r3
        }
    }

    /* Return to caller.  */
    return;
}
10002530:	bd70      	pop	{r4, r5, r6, pc}
        if (wait_option != TX_NO_WAIT)
10002532:	b111      	cbz	r1, 1000253a <_tx_thread_system_ni_suspend+0xd6>
            if (wait_option != TX_WAIT_FOREVER)
10002534:	f1b1 3fff 	cmp.w	r1, #4294967295
10002538:	d103      	bne.n	10002542 <_tx_thread_system_ni_suspend+0xde>
        _tx_timer_time_slice =  thread_ptr -> tx_thread_new_time_slice;
1000253a:	69e2      	ldr	r2, [r4, #28]
1000253c:	4b74      	ldr	r3, [pc, #464]	; (10002710 <_tx_thread_system_ni_suspend+0x2ac>)
1000253e:	601a      	str	r2, [r3, #0]
10002540:	e796      	b.n	10002470 <_tx_thread_system_ni_suspend+0xc>
                thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  wait_option;
10002542:	f840 1f4c 	str.w	r1, [r0, #76]!
                _tx_timer_system_activate(&(thread_ptr -> tx_thread_timer));
10002546:	f000 fa19 	bl	1000297c <_tx_timer_system_activate>
1000254a:	e7f6      	b.n	1000253a <_tx_thread_system_ni_suspend+0xd6>
    TX_THREAD_STACK_CHECK(thread_ptr)
1000254c:	68a2      	ldr	r2, [r4, #8]
1000254e:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10002552:	428a      	cmp	r2, r1
10002554:	d201      	bcs.n	1000255a <_tx_thread_system_ni_suspend+0xf6>
10002556:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
1000255a:	68e2      	ldr	r2, [r4, #12]
1000255c:	6811      	ldr	r1, [r2, #0]
1000255e:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002562:	d105      	bne.n	10002570 <_tx_thread_system_ni_suspend+0x10c>
10002564:	6921      	ldr	r1, [r4, #16]
10002566:	f8d1 1001 	ldr.w	r1, [r1, #1]
1000256a:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
1000256e:	d018      	beq.n	100025a2 <_tx_thread_system_ni_suspend+0x13e>
10002570:	f383 8810 	msr	PRIMASK, r3
10002574:	4620      	mov	r0, r4
10002576:	f7ff fd69 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000257a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000257e:	b672      	cpsid	i
10002580:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10002584:	f852 2c04 	ldr.w	r2, [r2, #-4]
10002588:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
1000258c:	f43f af78 	beq.w	10002480 <_tx_thread_system_ni_suspend+0x1c>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002590:	f383 8810 	msr	PRIMASK, r3
10002594:	4620      	mov	r0, r4
10002596:	f7ff fd13 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000259a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000259e:	b672      	cpsid	i
    return(int_posture);
100025a0:	e76e      	b.n	10002480 <_tx_thread_system_ni_suspend+0x1c>
100025a2:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100025a6:	428a      	cmp	r2, r1
100025a8:	d9ea      	bls.n	10002580 <_tx_thread_system_ni_suspend+0x11c>
100025aa:	e7e1      	b.n	10002570 <_tx_thread_system_ni_suspend+0x10c>
            _tx_thread_priority_list[priority] =  ready_next;
100025ac:	4952      	ldr	r1, [pc, #328]	; (100026f8 <_tx_thread_system_ni_suspend+0x294>)
100025ae:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
100025b2:	e77d      	b.n	100024b0 <_tx_thread_system_ni_suspend+0x4c>
        _tx_thread_priority_list[priority] =    TX_NULL;
100025b4:	4b50      	ldr	r3, [pc, #320]	; (100026f8 <_tx_thread_system_ni_suspend+0x294>)
100025b6:	2100      	movs	r1, #0
100025b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        TX_MOD32_BIT_SET(priority, priority_bit)
100025bc:	2301      	movs	r3, #1
100025be:	4093      	lsls	r3, r2
        _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] & (~(priority_bit));
100025c0:	4954      	ldr	r1, [pc, #336]	; (10002714 <_tx_thread_system_ni_suspend+0x2b0>)
100025c2:	680a      	ldr	r2, [r1, #0]
100025c4:	ea22 0203 	bic.w	r2, r2, r3
100025c8:	600a      	str	r2, [r1, #0]
        if (priority_map == ((ULONG) 0))
100025ca:	b132      	cbz	r2, 100025da <_tx_thread_system_ni_suspend+0x176>
            TX_LOWEST_SET_BIT_CALCULATE(priority_map, priority_bit)
100025cc:	fa92 f2a2 	rbit	r2, r2
100025d0:	fab2 f282 	clz	r2, r2
            _tx_thread_highest_priority =  base_priority + ((UINT) priority_bit);
100025d4:	4b50      	ldr	r3, [pc, #320]	; (10002718 <_tx_thread_system_ni_suspend+0x2b4>)
100025d6:	601a      	str	r2, [r3, #0]
100025d8:	e76a      	b.n	100024b0 <_tx_thread_system_ni_suspend+0x4c>
            _tx_thread_highest_priority =  ((UINT) TX_MAX_PRIORITIES);
100025da:	4b4f      	ldr	r3, [pc, #316]	; (10002718 <_tx_thread_system_ni_suspend+0x2b4>)
100025dc:	2220      	movs	r2, #32
100025de:	601a      	str	r2, [r3, #0]
            _tx_thread_execute_ptr =       TX_NULL;
100025e0:	4b46      	ldr	r3, [pc, #280]	; (100026fc <_tx_thread_system_ni_suspend+0x298>)
100025e2:	2200      	movs	r2, #0
100025e4:	601a      	str	r2, [r3, #0]
            TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
100025e6:	4b48      	ldr	r3, [pc, #288]	; (10002708 <_tx_thread_system_ni_suspend+0x2a4>)
100025e8:	681b      	ldr	r3, [r3, #0]
            if (combined_flags == ((ULONG) 0))
100025ea:	2b00      	cmp	r3, #0
100025ec:	d1a0      	bne.n	10002530 <_tx_thread_system_ni_suspend+0xcc>
                _tx_thread_performance_idle_return_count++;
100025ee:	4a4b      	ldr	r2, [pc, #300]	; (1000271c <_tx_thread_system_ni_suspend+0x2b8>)
100025f0:	6813      	ldr	r3, [r2, #0]
100025f2:	3301      	adds	r3, #1
100025f4:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
100025f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100025fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100025fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002602:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10002606:	2b00      	cmp	r3, #0
10002608:	d192      	bne.n	10002530 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000260a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
1000260e:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002610:	f383 8810 	msr	PRIMASK, r3
            return;
10002614:	e78c      	b.n	10002530 <_tx_thread_system_ni_suspend+0xcc>
        _tx_thread_execute_ptr =  _tx_thread_priority_list[_tx_thread_highest_priority];
10002616:	4b40      	ldr	r3, [pc, #256]	; (10002718 <_tx_thread_system_ni_suspend+0x2b4>)
10002618:	681a      	ldr	r2, [r3, #0]
1000261a:	4b37      	ldr	r3, [pc, #220]	; (100026f8 <_tx_thread_system_ni_suspend+0x294>)
1000261c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10002620:	4b36      	ldr	r3, [pc, #216]	; (100026fc <_tx_thread_system_ni_suspend+0x298>)
10002622:	601a      	str	r2, [r3, #0]
        if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10002624:	4b36      	ldr	r3, [pc, #216]	; (10002700 <_tx_thread_system_ni_suspend+0x29c>)
10002626:	681b      	ldr	r3, [r3, #0]
10002628:	4936      	ldr	r1, [pc, #216]	; (10002704 <_tx_thread_system_ni_suspend+0x2a0>)
1000262a:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
1000262e:	428a      	cmp	r2, r1
10002630:	d00c      	beq.n	1000264c <_tx_thread_system_ni_suspend+0x1e8>
            _tx_thread_performance__execute_log_index++;
10002632:	3301      	adds	r3, #1
10002634:	4932      	ldr	r1, [pc, #200]	; (10002700 <_tx_thread_system_ni_suspend+0x29c>)
10002636:	600b      	str	r3, [r1, #0]
            if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
10002638:	2b07      	cmp	r3, #7
1000263a:	d902      	bls.n	10002642 <_tx_thread_system_ni_suspend+0x1de>
                _tx_thread_performance__execute_log_index =  ((UINT) 0);
1000263c:	460b      	mov	r3, r1
1000263e:	2100      	movs	r1, #0
10002640:	6019      	str	r1, [r3, #0]
            _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10002642:	4b2f      	ldr	r3, [pc, #188]	; (10002700 <_tx_thread_system_ni_suspend+0x29c>)
10002644:	6819      	ldr	r1, [r3, #0]
10002646:	4b2f      	ldr	r3, [pc, #188]	; (10002704 <_tx_thread_system_ni_suspend+0x2a0>)
10002648:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
1000264c:	4b2e      	ldr	r3, [pc, #184]	; (10002708 <_tx_thread_system_ni_suspend+0x2a4>)
1000264e:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
10002650:	2b00      	cmp	r3, #0
10002652:	f47f af6d 	bne.w	10002530 <_tx_thread_system_ni_suspend+0xcc>
            _tx_thread_performance_non_idle_return_count++;
10002656:	4a2d      	ldr	r2, [pc, #180]	; (1000270c <_tx_thread_system_ni_suspend+0x2a8>)
10002658:	6813      	ldr	r3, [r2, #0]
1000265a:	3301      	adds	r3, #1
1000265c:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
1000265e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10002662:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10002666:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
1000266a:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
1000266e:	2b00      	cmp	r3, #0
10002670:	f47f af5e 	bne.w	10002530 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002674:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
10002678:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000267a:	f383 8810 	msr	PRIMASK, r3
        return;
1000267e:	e757      	b.n	10002530 <_tx_thread_system_ni_suspend+0xcc>
        TX_THREAD_STACK_CHECK(thread_ptr)
10002680:	68aa      	ldr	r2, [r5, #8]
10002682:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
10002686:	428a      	cmp	r2, r1
10002688:	d201      	bcs.n	1000268e <_tx_thread_system_ni_suspend+0x22a>
1000268a:	f8c5 20cc 	str.w	r2, [r5, #204]	; 0xcc
1000268e:	68ea      	ldr	r2, [r5, #12]
10002690:	6811      	ldr	r1, [r2, #0]
10002692:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002696:	d105      	bne.n	100026a4 <_tx_thread_system_ni_suspend+0x240>
10002698:	6929      	ldr	r1, [r5, #16]
1000269a:	f8d1 1001 	ldr.w	r1, [r1, #1]
1000269e:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
100026a2:	d018      	beq.n	100026d6 <_tx_thread_system_ni_suspend+0x272>
100026a4:	f383 8810 	msr	PRIMASK, r3
100026a8:	4628      	mov	r0, r5
100026aa:	f7ff fccf 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100026ae:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100026b2:	b672      	cpsid	i
100026b4:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
100026b8:	f852 2c04 	ldr.w	r2, [r2, #-4]
100026bc:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
100026c0:	f43f af1a 	beq.w	100024f8 <_tx_thread_system_ni_suspend+0x94>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100026c4:	f383 8810 	msr	PRIMASK, r3
100026c8:	4628      	mov	r0, r5
100026ca:	f7ff fc79 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100026ce:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100026d2:	b672      	cpsid	i
    return(int_posture);
100026d4:	e710      	b.n	100024f8 <_tx_thread_system_ni_suspend+0x94>
100026d6:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
100026da:	428a      	cmp	r2, r1
100026dc:	d9ea      	bls.n	100026b4 <_tx_thread_system_ni_suspend+0x250>
100026de:	e7e1      	b.n	100026a4 <_tx_thread_system_ni_suspend+0x240>
                _tx_thread_performance_idle_return_count++;
100026e0:	4a0e      	ldr	r2, [pc, #56]	; (1000271c <_tx_thread_system_ni_suspend+0x2b8>)
100026e2:	6813      	ldr	r3, [r2, #0]
100026e4:	3301      	adds	r3, #1
100026e6:	6013      	str	r3, [r2, #0]
100026e8:	e714      	b.n	10002514 <_tx_thread_system_ni_suspend+0xb0>
100026ea:	bf00      	nop
100026ec:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
100026f0:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
100026f4:	380011fc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r8, ip}
100026f8:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
100026fc:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002700:	380011c4 	stmdacc	r0, {r2, r6, r7, r8, ip}
10002704:	380011c8 	stmdacc	r0, {r3, r6, r7, r8, ip}
10002708:	38001208 	stmdacc	r0, {r3, r9, ip}
1000270c:	380011f0 	stmdacc	r0, {r4, r5, r6, r7, r8, ip}
10002710:	3800241c 	stmdacc	r0, {r2, r3, r4, sl, sp}
10002714:	3800128c 	stmdacc	r0, {r2, r3, r7, r9, ip}
10002718:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
1000271c:	380011e8 	stmdacc	r0, {r3, r5, r6, r7, r8, ip}

10002720 <_tx_thread_time_slice>:
/*                                            TX_NO_TIMER is defined,     */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_time_slice(VOID)
{
10002720:	b538      	push	{r3, r4, r5, lr}
ULONG           system_state;
UINT            preempt_disable;
#endif

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10002722:	4b55      	ldr	r3, [pc, #340]	; (10002878 <_tx_thread_time_slice+0x158>)
10002724:	681c      	ldr	r4, [r3, #0]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002726:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000272a:	b672      	cpsid	i

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
1000272c:	b11c      	cbz	r4, 10002736 <_tx_thread_time_slice+0x16>
1000272e:	6821      	ldr	r1, [r4, #0]
10002730:	4a52      	ldr	r2, [pc, #328]	; (1000287c <_tx_thread_time_slice+0x15c>)
10002732:	4291      	cmp	r1, r2
10002734:	d00d      	beq.n	10002752 <_tx_thread_time_slice+0x32>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002736:	f383 8810 	msr	PRIMASK, r3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000273a:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000273e:	b672      	cpsid	i

    /* Lockout interrupts while the time-slice is evaluated.  */
    TX_DISABLE

    /* Clear the expired time-slice flag.  */
    _tx_timer_expired_time_slice =  TX_FALSE;
10002740:	4b4f      	ldr	r3, [pc, #316]	; (10002880 <_tx_thread_time_slice+0x160>)
10002742:	2200      	movs	r2, #0
10002744:	601a      	str	r2, [r3, #0]

    /* Make sure the thread pointer is valid.  */
    if (thread_ptr != TX_NULL)
10002746:	b39c      	cbz	r4, 100027b0 <_tx_thread_time_slice+0x90>
    {

        /* Make sure the thread is still active, i.e. not suspended.  */
        if (thread_ptr -> tx_thread_state == TX_READY)
10002748:	6b23      	ldr	r3, [r4, #48]	; 0x30
1000274a:	b3a3      	cbz	r3, 100027b6 <_tx_thread_time_slice+0x96>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000274c:	f381 8810 	msr	PRIMASK, r1

        /* Yes, check this thread's stack.  */
        TX_THREAD_STACK_CHECK(next_thread_ptr)
    }
#endif
}
10002750:	bd38      	pop	{r3, r4, r5, pc}
    TX_THREAD_STACK_CHECK(thread_ptr)
10002752:	68a2      	ldr	r2, [r4, #8]
10002754:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10002758:	428a      	cmp	r2, r1
1000275a:	d201      	bcs.n	10002760 <_tx_thread_time_slice+0x40>
1000275c:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10002760:	68e2      	ldr	r2, [r4, #12]
10002762:	6811      	ldr	r1, [r2, #0]
10002764:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002768:	d105      	bne.n	10002776 <_tx_thread_time_slice+0x56>
1000276a:	6921      	ldr	r1, [r4, #16]
1000276c:	f8d1 1001 	ldr.w	r1, [r1, #1]
10002770:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
10002774:	d017      	beq.n	100027a6 <_tx_thread_time_slice+0x86>
10002776:	f383 8810 	msr	PRIMASK, r3
1000277a:	4620      	mov	r0, r4
1000277c:	f7ff fc66 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002780:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002784:	b672      	cpsid	i
10002786:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
1000278a:	f852 2c04 	ldr.w	r2, [r2, #-4]
1000278e:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
10002792:	d0d0      	beq.n	10002736 <_tx_thread_time_slice+0x16>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002794:	f383 8810 	msr	PRIMASK, r3
10002798:	4620      	mov	r0, r4
1000279a:	f7ff fc11 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000279e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100027a2:	b672      	cpsid	i
    return(int_posture);
100027a4:	e7c7      	b.n	10002736 <_tx_thread_time_slice+0x16>
100027a6:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100027aa:	428a      	cmp	r2, r1
100027ac:	d9eb      	bls.n	10002786 <_tx_thread_time_slice+0x66>
100027ae:	e7e2      	b.n	10002776 <_tx_thread_time_slice+0x56>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100027b0:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
100027b4:	e7cc      	b.n	10002750 <_tx_thread_time_slice+0x30>
            thread_ptr -> tx_thread_time_slice =  thread_ptr -> tx_thread_new_time_slice;
100027b6:	69e3      	ldr	r3, [r4, #28]
100027b8:	61a3      	str	r3, [r4, #24]
            _tx_timer_time_slice =  thread_ptr -> tx_thread_time_slice;
100027ba:	4a32      	ldr	r2, [pc, #200]	; (10002884 <_tx_thread_time_slice+0x164>)
100027bc:	6013      	str	r3, [r2, #0]
            if (thread_ptr -> tx_thread_ready_next != thread_ptr)
100027be:	6a23      	ldr	r3, [r4, #32]
100027c0:	42a3      	cmp	r3, r4
100027c2:	d006      	beq.n	100027d2 <_tx_thread_time_slice+0xb2>
                if (thread_ptr -> tx_thread_priority == thread_ptr -> tx_thread_preempt_threshold)
100027c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
100027c6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
100027c8:	4282      	cmp	r2, r0
100027ca:	d005      	beq.n	100027d8 <_tx_thread_time_slice+0xb8>
100027cc:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
100027d0:	e7be      	b.n	10002750 <_tx_thread_time_slice+0x30>
100027d2:	f381 8810 	msr	PRIMASK, r1
100027d6:	e7bb      	b.n	10002750 <_tx_thread_time_slice+0x30>
                    _tx_thread_priority_list[thread_ptr -> tx_thread_priority] =  thread_ptr -> tx_thread_ready_next;
100027d8:	482b      	ldr	r0, [pc, #172]	; (10002888 <_tx_thread_time_slice+0x168>)
100027da:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
                    _tx_thread_execute_ptr =  _tx_thread_priority_list[_tx_thread_highest_priority];
100027de:	4b2b      	ldr	r3, [pc, #172]	; (1000288c <_tx_thread_time_slice+0x16c>)
100027e0:	681b      	ldr	r3, [r3, #0]
100027e2:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
100027e6:	4b2a      	ldr	r3, [pc, #168]	; (10002890 <_tx_thread_time_slice+0x170>)
100027e8:	601d      	str	r5, [r3, #0]
                    thread_ptr -> tx_thread_performance_time_slice_count++;
100027ea:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
100027ee:	3301      	adds	r3, #1
100027f0:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
                    _tx_thread_performance_time_slice_count++;
100027f4:	4a27      	ldr	r2, [pc, #156]	; (10002894 <_tx_thread_time_slice+0x174>)
100027f6:	6813      	ldr	r3, [r2, #0]
100027f8:	3301      	adds	r3, #1
100027fa:	6013      	str	r3, [r2, #0]
100027fc:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
10002800:	2d00      	cmp	r5, #0
10002802:	d0a5      	beq.n	10002750 <_tx_thread_time_slice+0x30>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002804:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002808:	b672      	cpsid	i
        TX_THREAD_STACK_CHECK(next_thread_ptr)
1000280a:	6829      	ldr	r1, [r5, #0]
1000280c:	4a1b      	ldr	r2, [pc, #108]	; (1000287c <_tx_thread_time_slice+0x15c>)
1000280e:	4291      	cmp	r1, r2
10002810:	d002      	beq.n	10002818 <_tx_thread_time_slice+0xf8>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002812:	f383 8810 	msr	PRIMASK, r3
}
10002816:	e79b      	b.n	10002750 <_tx_thread_time_slice+0x30>
        TX_THREAD_STACK_CHECK(next_thread_ptr)
10002818:	68aa      	ldr	r2, [r5, #8]
1000281a:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
1000281e:	428a      	cmp	r2, r1
10002820:	d201      	bcs.n	10002826 <_tx_thread_time_slice+0x106>
10002822:	f8c5 20cc 	str.w	r2, [r5, #204]	; 0xcc
10002826:	68ea      	ldr	r2, [r5, #12]
10002828:	6811      	ldr	r1, [r2, #0]
1000282a:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
1000282e:	d105      	bne.n	1000283c <_tx_thread_time_slice+0x11c>
10002830:	6929      	ldr	r1, [r5, #16]
10002832:	f8d1 1001 	ldr.w	r1, [r1, #1]
10002836:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
1000283a:	d017      	beq.n	1000286c <_tx_thread_time_slice+0x14c>
1000283c:	f383 8810 	msr	PRIMASK, r3
10002840:	4628      	mov	r0, r5
10002842:	f7ff fc03 	bl	1000204c <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002846:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000284a:	b672      	cpsid	i
1000284c:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
10002850:	f852 2c04 	ldr.w	r2, [r2, #-4]
10002854:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
10002858:	d0db      	beq.n	10002812 <_tx_thread_time_slice+0xf2>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000285a:	f383 8810 	msr	PRIMASK, r3
1000285e:	4628      	mov	r0, r5
10002860:	f7ff fbae 	bl	10001fc0 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002864:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002868:	b672      	cpsid	i
    return(int_posture);
1000286a:	e7d2      	b.n	10002812 <_tx_thread_time_slice+0xf2>
1000286c:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
10002870:	428a      	cmp	r2, r1
10002872:	d9eb      	bls.n	1000284c <_tx_thread_time_slice+0x12c>
10002874:	e7e2      	b.n	1000283c <_tx_thread_time_slice+0x11c>
10002876:	bf00      	nop
10002878:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
1000287c:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10002880:	3800129c 	stmdacc	r0, {r2, r3, r4, r7, r9, ip}
10002884:	3800241c 	stmdacc	r0, {r2, r3, r4, sl, sp}
10002888:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
1000288c:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
10002890:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002894:	38001200 	stmdacc	r0, {r9, ip}

10002898 <_tx_thread_timeout>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_timeout(ULONG timeout_input)
{
10002898:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000289a:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000289e:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine how the thread is currently suspended.  */
    if (thread_ptr -> tx_thread_state == TX_SLEEP)
100028a0:	6b03      	ldr	r3, [r0, #48]	; 0x30
100028a2:	2b04      	cmp	r3, #4
100028a4:	d00f      	beq.n	100028c6 <_tx_thread_timeout+0x2e>
        /* Process all other suspension timeouts.  */

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

        /* Increment the total number of thread timeouts.  */
        _tx_thread_performance_timeout_count++;
100028a6:	4a0a      	ldr	r2, [pc, #40]	; (100028d0 <_tx_thread_timeout+0x38>)
100028a8:	6813      	ldr	r3, [r2, #0]
100028aa:	3301      	adds	r3, #1
100028ac:	6013      	str	r3, [r2, #0]

        /* Increment the number of timeouts for this thread.  */
        thread_ptr -> tx_thread_performance_timeout_count++;
100028ae:	f8d0 30c4 	ldr.w	r3, [r0, #196]	; 0xc4
100028b2:	3301      	adds	r3, #1
100028b4:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
#endif

        /* Pickup the cleanup routine address.  */
        suspend_cleanup =  thread_ptr -> tx_thread_suspend_cleanup;
100028b8:	6e83      	ldr	r3, [r0, #104]	; 0x68
        /* Restore interrupts.  */
        TX_RESTORE
#endif

        /* Call any cleanup routines.  */
        if (suspend_cleanup != TX_NULL)
100028ba:	b10b      	cbz	r3, 100028c0 <_tx_thread_timeout+0x28>
        {

            /* Yes, there is a function to call.  */
            (suspend_cleanup)(thread_ptr, suspension_sequence);
100028bc:	2100      	movs	r1, #0
100028be:	4798      	blx	r3
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100028c0:	f384 8810 	msr	PRIMASK, r4

        /* Restore interrupts.  */
        TX_RESTORE
#endif
    }
}
100028c4:	bd10      	pop	{r4, pc}
        _tx_thread_system_ni_resume(thread_ptr);
100028c6:	f7ff fc3b 	bl	10002140 <_tx_thread_system_ni_resume>
100028ca:	f384 8810 	msr	PRIMASK, r4
}
100028ce:	e7f9      	b.n	100028c4 <_tx_thread_timeout+0x2c>
100028d0:	38001204 	stmdacc	r0, {r2, r9, ip}

100028d4 <_tx_timer_expiration_process>:
/*                                            TX_NO_TIMER is defined,     */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_timer_expiration_process(VOID)
{
100028d4:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100028d6:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100028da:	b672      	cpsid	i
    TX_DISABLE

#ifdef TX_NOT_INTERRUPTABLE

    /* Resume the thread!  */
    _tx_thread_system_ni_resume(&_tx_timer_thread);
100028dc:	4802      	ldr	r0, [pc, #8]	; (100028e8 <_tx_timer_expiration_process+0x14>)
100028de:	f7ff fc2f 	bl	10002140 <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100028e2:	f384 8810 	msr	PRIMASK, r4
    }

    /* Restore interrupts.  */
    TX_RESTORE
#endif
}
100028e6:	bd10      	pop	{r4, pc}
100028e8:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}

100028ec <_tx_timer_initialize>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_timer_initialize(VOID)
{
100028ec:	b500      	push	{lr}
100028ee:	b087      	sub	sp, #28
    /* First, initialize the timer list.  */
    TX_MEMSET(&_tx_timer_list[0], 0, (sizeof(_tx_timer_list)));
#endif

    /* Initialize all of the list pointers.  */
    _tx_timer_list_start =   &_tx_timer_list[0];
100028f0:	4b16      	ldr	r3, [pc, #88]	; (1000294c <_tx_timer_initialize+0x60>)
100028f2:	4a17      	ldr	r2, [pc, #92]	; (10002950 <_tx_timer_initialize+0x64>)
100028f4:	6013      	str	r3, [r2, #0]
    _tx_timer_current_ptr =  &_tx_timer_list[0];
100028f6:	4a17      	ldr	r2, [pc, #92]	; (10002954 <_tx_timer_initialize+0x68>)
100028f8:	6013      	str	r3, [r2, #0]

    /* Set the timer list end pointer to one past the actual timer list.  This is done
       to make the timer interrupt handling in assembly language a little easier.  */
    _tx_timer_list_end =     &_tx_timer_list[TX_TIMER_ENTRIES-((ULONG) 1)];
100028fa:	4a17      	ldr	r2, [pc, #92]	; (10002958 <_tx_timer_initialize+0x6c>)
100028fc:	f103 017c 	add.w	r1, r3, #124	; 0x7c
10002900:	6011      	str	r1, [r2, #0]
    _tx_timer_list_end =     TX_TIMER_POINTER_ADD(_tx_timer_list_end, ((ULONG) 1));
10002902:	3380      	adds	r3, #128	; 0x80
10002904:	6013      	str	r3, [r2, #0]

#ifndef TX_TIMER_PROCESS_IN_ISR

    /* Setup the variables associated with the system timer thread's stack and
       priority.  */
    _tx_timer_stack_start =  (VOID *) &_tx_timer_thread_stack_area[0];
10002906:	4b15      	ldr	r3, [pc, #84]	; (1000295c <_tx_timer_initialize+0x70>)
10002908:	4a15      	ldr	r2, [pc, #84]	; (10002960 <_tx_timer_initialize+0x74>)
1000290a:	601a      	str	r2, [r3, #0]
    _tx_timer_stack_size =   ((ULONG) TX_TIMER_THREAD_STACK_SIZE);
1000290c:	4b15      	ldr	r3, [pc, #84]	; (10002964 <_tx_timer_initialize+0x78>)
1000290e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
10002912:	601a      	str	r2, [r3, #0]
    _tx_timer_priority =     ((UINT) TX_TIMER_THREAD_PRIORITY);
10002914:	4b14      	ldr	r3, [pc, #80]	; (10002968 <_tx_timer_initialize+0x7c>)
10002916:	2205      	movs	r2, #5
10002918:	601a      	str	r2, [r3, #0]
       low-level initialization component.  */
    do
    {

        /* Create the system timer thread.  */
        status =  _tx_thread_create(&_tx_timer_thread,
1000291a:	4b13      	ldr	r3, [pc, #76]	; (10002968 <_tx_timer_initialize+0x7c>)
1000291c:	681b      	ldr	r3, [r3, #0]
1000291e:	2200      	movs	r2, #0
10002920:	9205      	str	r2, [sp, #20]
10002922:	9204      	str	r2, [sp, #16]
10002924:	9303      	str	r3, [sp, #12]
10002926:	9302      	str	r3, [sp, #8]
10002928:	4b0e      	ldr	r3, [pc, #56]	; (10002964 <_tx_timer_initialize+0x78>)
1000292a:	681b      	ldr	r3, [r3, #0]
1000292c:	9301      	str	r3, [sp, #4]
1000292e:	4b0b      	ldr	r3, [pc, #44]	; (1000295c <_tx_timer_initialize+0x70>)
10002930:	681b      	ldr	r3, [r3, #0]
10002932:	9300      	str	r3, [sp, #0]
10002934:	4b0d      	ldr	r3, [pc, #52]	; (1000296c <_tx_timer_initialize+0x80>)
10002936:	4a0e      	ldr	r2, [pc, #56]	; (10002970 <_tx_timer_initialize+0x84>)
10002938:	490e      	ldr	r1, [pc, #56]	; (10002974 <_tx_timer_initialize+0x88>)
1000293a:	480f      	ldr	r0, [pc, #60]	; (10002978 <_tx_timer_initialize+0x8c>)
1000293c:	f7ff fa3e 	bl	10001dbc <_tx_thread_create>
#endif

        /* Define timer initialize extension.  */
        TX_TIMER_INITIALIZE_EXTENSION(status)

    } while (status != TX_SUCCESS);
10002940:	2800      	cmp	r0, #0
10002942:	d1ea      	bne.n	1000291a <_tx_timer_initialize+0x2e>
    _tx_timer_performance_expiration_count =         ((ULONG) 0);
    _tx_timer_performance__expiration_adjust_count =  ((ULONG) 0);
#endif
#endif
#endif
}
10002944:	b007      	add	sp, #28
10002946:	f85d fb04 	ldr.w	pc, [sp], #4
1000294a:	bf00      	nop
1000294c:	380012a4 	stmdacc	r0, {r2, r5, r7, r9, ip}
10002950:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}
10002954:	38001294 	stmdacc	r0, {r2, r4, r7, r9, ip}
10002958:	38001324 	stmdacc	r0, {r2, r5, r8, r9, ip}
1000295c:	38001340 	stmdacc	r0, {r6, r8, r9, ip}
10002960:	3800141c 	stmdacc	r0, {r2, r3, r4, sl, ip}
10002964:	3800133c 	stmdacc	r0, {r2, r3, r4, r5, r8, r9, ip}
10002968:	38001338 	stmdacc	r0, {r3, r4, r5, r8, r9, ip}
1000296c:	4154494d 	cmpmi	r4, sp, asr #18
10002970:	10002a05 	andne	r2, r0, r5, lsl #20
10002974:	10004f20 	andne	r4, r0, r0, lsr #30
10002978:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}

1000297c <_tx_timer_system_activate>:
ULONG                       remaining_ticks;
ULONG                       expiration_time;


    /* Pickup the remaining ticks.  */
    remaining_ticks =  timer_ptr -> tx_timer_internal_remaining_ticks;
1000297c:	6803      	ldr	r3, [r0, #0]

    /* Determine if there is a timer to activate.  */
    if (remaining_ticks != ((ULONG) 0))
1000297e:	b123      	cbz	r3, 1000298a <_tx_timer_system_activate+0xe>
    {

        /* Determine if the timer is set to wait forever.  */
        if (remaining_ticks != TX_WAIT_FOREVER)
10002980:	f1b3 3fff 	cmp.w	r3, #4294967295
10002984:	d001      	beq.n	1000298a <_tx_timer_system_activate+0xe>
        {

            /* Valid timer activate request.  */

            /* Determine if the timer still needs activation.  */
            if (timer_ptr -> tx_timer_internal_list_head == TX_NULL)
10002986:	6982      	ldr	r2, [r0, #24]
10002988:	b102      	cbz	r2, 1000298c <_tx_timer_system_activate+0x10>
                /* Setup list head pointer.  */
                timer_ptr -> tx_timer_internal_list_head =  timer_list;
            }
        }
    }
}
1000298a:	4770      	bx	lr
                if (remaining_ticks > TX_TIMER_ENTRIES)
1000298c:	2b20      	cmp	r3, #32
1000298e:	d815      	bhi.n	100029bc <_tx_timer_system_activate+0x40>
                    expiration_time =  (remaining_ticks - ((ULONG) 1));
10002990:	3b01      	subs	r3, #1
                timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, expiration_time);
10002992:	4a0d      	ldr	r2, [pc, #52]	; (100029c8 <_tx_timer_system_activate+0x4c>)
10002994:	6812      	ldr	r2, [r2, #0]
10002996:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                if (TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(timer_list) >= TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(_tx_timer_list_end))
1000299a:	4a0c      	ldr	r2, [pc, #48]	; (100029cc <_tx_timer_system_activate+0x50>)
1000299c:	6812      	ldr	r2, [r2, #0]
1000299e:	429a      	cmp	r2, r3
100029a0:	d803      	bhi.n	100029aa <_tx_timer_system_activate+0x2e>
                    delta =  TX_TIMER_POINTER_DIF(timer_list, _tx_timer_list_end);
100029a2:	1a9b      	subs	r3, r3, r2
                    timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_list_start, delta);
100029a4:	4a0a      	ldr	r2, [pc, #40]	; (100029d0 <_tx_timer_system_activate+0x54>)
100029a6:	6812      	ldr	r2, [r2, #0]
100029a8:	4413      	add	r3, r2
                if ((*timer_list) == TX_NULL)
100029aa:	681a      	ldr	r2, [r3, #0]
100029ac:	b142      	cbz	r2, 100029c0 <_tx_timer_system_activate+0x44>
                    previous_timer =                                    next_timer -> tx_timer_internal_active_previous;
100029ae:	6951      	ldr	r1, [r2, #20]
                    previous_timer -> tx_timer_internal_active_next =   timer_ptr;
100029b0:	6108      	str	r0, [r1, #16]
                    next_timer -> tx_timer_internal_active_previous =   timer_ptr;
100029b2:	6150      	str	r0, [r2, #20]
                    timer_ptr -> tx_timer_internal_active_next =        next_timer;
100029b4:	6102      	str	r2, [r0, #16]
                    timer_ptr -> tx_timer_internal_active_previous =    previous_timer;
100029b6:	6141      	str	r1, [r0, #20]
                timer_ptr -> tx_timer_internal_list_head =  timer_list;
100029b8:	6183      	str	r3, [r0, #24]
}
100029ba:	e7e6      	b.n	1000298a <_tx_timer_system_activate+0xe>
                    expiration_time =  TX_TIMER_ENTRIES - ((ULONG) 1);
100029bc:	231f      	movs	r3, #31
100029be:	e7e8      	b.n	10002992 <_tx_timer_system_activate+0x16>
                    timer_ptr -> tx_timer_internal_active_next =      timer_ptr;
100029c0:	6100      	str	r0, [r0, #16]
                    timer_ptr -> tx_timer_internal_active_previous =  timer_ptr;
100029c2:	6140      	str	r0, [r0, #20]
                    *timer_list =  timer_ptr;
100029c4:	6018      	str	r0, [r3, #0]
100029c6:	e7f7      	b.n	100029b8 <_tx_timer_system_activate+0x3c>
100029c8:	38001294 	stmdacc	r0, {r2, r4, r7, r9, ip}
100029cc:	38001324 	stmdacc	r0, {r2, r5, r8, r9, ip}
100029d0:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}

100029d4 <_tx_timer_system_deactivate>:
TX_TIMER_INTERNAL   *next_timer;
TX_TIMER_INTERNAL   *previous_timer;


    /* Pickup the list head pointer.  */
    list_head =  timer_ptr -> tx_timer_internal_list_head;
100029d4:	6983      	ldr	r3, [r0, #24]

    /* Determine if the timer still needs deactivation.  */
    if (list_head != TX_NULL)
100029d6:	b153      	cbz	r3, 100029ee <_tx_timer_system_deactivate+0x1a>
    {

        /* Deactivate the timer.  */

        /* Pickup the next active timer.  */
        next_timer =  timer_ptr -> tx_timer_internal_active_next;
100029d8:	6902      	ldr	r2, [r0, #16]

        /* See if this is the only timer in the list.  */
        if (timer_ptr == next_timer)
100029da:	4290      	cmp	r0, r2
100029dc:	d008      	beq.n	100029f0 <_tx_timer_system_deactivate+0x1c>
        {

            /* At least one more timer is on the same expiration list.  */

            /* Update the links of the adjacent timers.  */
            previous_timer =                                   timer_ptr -> tx_timer_internal_active_previous;
100029de:	6941      	ldr	r1, [r0, #20]
            next_timer -> tx_timer_internal_active_previous =  previous_timer;
100029e0:	6151      	str	r1, [r2, #20]
            previous_timer -> tx_timer_internal_active_next =  next_timer;
100029e2:	610a      	str	r2, [r1, #16]

            /* Determine if the head pointer needs to be updated.  */
            if (*(list_head) == timer_ptr)
100029e4:	6819      	ldr	r1, [r3, #0]
100029e6:	4281      	cmp	r1, r0
100029e8:	d008      	beq.n	100029fc <_tx_timer_system_deactivate+0x28>
                *(list_head) =  next_timer;
            }
        }

        /* Clear the timer's list head pointer.  */
        timer_ptr -> tx_timer_internal_list_head =  TX_NULL;
100029ea:	2300      	movs	r3, #0
100029ec:	6183      	str	r3, [r0, #24]
    }
}
100029ee:	4770      	bx	lr
            if (*(list_head) == timer_ptr)
100029f0:	681a      	ldr	r2, [r3, #0]
100029f2:	4282      	cmp	r2, r0
100029f4:	d1f9      	bne.n	100029ea <_tx_timer_system_deactivate+0x16>
                *(list_head) =  TX_NULL;
100029f6:	2200      	movs	r2, #0
100029f8:	601a      	str	r2, [r3, #0]
100029fa:	e7f6      	b.n	100029ea <_tx_timer_system_deactivate+0x16>
                next_timer -> tx_timer_internal_list_head =  list_head;
100029fc:	6193      	str	r3, [r2, #24]
                *(list_head) =  next_timer;
100029fe:	601a      	str	r2, [r3, #0]
10002a00:	e7f3      	b.n	100029ea <_tx_timer_system_deactivate+0x16>
	...

10002a04 <_tx_timer_thread_entry>:
#endif


    /* Make sure the timer input is correct.  This also gets rid of the
       silly compiler warnings.  */
    if (timer_thread_input == TX_TIMER_ID)
10002a04:	4b63      	ldr	r3, [pc, #396]	; (10002b94 <_tx_timer_thread_entry+0x190>)
10002a06:	4298      	cmp	r0, r3
10002a08:	d000      	beq.n	10002a0c <_tx_timer_thread_entry+0x8>
10002a0a:	4770      	bx	lr
{
10002a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
10002a0e:	b083      	sub	sp, #12
ULONG                       timeout_param =  ((ULONG) 0);
10002a10:	2700      	movs	r7, #0
10002a12:	e09e      	b.n	10002b52 <_tx_timer_thread_entry+0x14e>
               the end of the list.  */
            _tx_timer_current_ptr =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, 1);
            if (_tx_timer_current_ptr == _tx_timer_list_end)
            {

                _tx_timer_current_ptr =  _tx_timer_list_start;
10002a14:	4b60      	ldr	r3, [pc, #384]	; (10002b98 <_tx_timer_thread_entry+0x194>)
10002a16:	681a      	ldr	r2, [r3, #0]
10002a18:	4b60      	ldr	r3, [pc, #384]	; (10002b9c <_tx_timer_thread_entry+0x198>)
10002a1a:	601a      	str	r2, [r3, #0]
10002a1c:	e0ae      	b.n	10002b7c <_tx_timer_thread_entry+0x178>
                {

                    /* Yes, this is the only timer in the list.  */

                    /* Set the head pointer to NULL.  */
                    expired_timers =  TX_NULL;
10002a1e:	9201      	str	r2, [sp, #4]
10002a20:	e02a      	b.n	10002a78 <_tx_timer_thread_entry+0x74>
                    }
#endif

                    /* Decrement the remaining ticks of the timer.  */
                    current_timer -> tx_timer_internal_remaining_ticks =
                            current_timer -> tx_timer_internal_remaining_ticks - TX_TIMER_ENTRIES;
10002a22:	6823      	ldr	r3, [r4, #0]
10002a24:	3b20      	subs	r3, #32
                    current_timer -> tx_timer_internal_remaining_ticks =
10002a26:	6023      	str	r3, [r4, #0]
                    timeout_function =  TX_NULL;

                    /* Make the timer appear that it is still active while interrupts
                       are enabled.  This will permit proper processing of a timer
                       deactivate from an ISR.  */
                    current_timer -> tx_timer_internal_list_head =    &reactivate_timer;
10002a28:	f8c4 d018 	str.w	sp, [r4, #24]
                    current_timer -> tx_timer_internal_active_next =  current_timer;
10002a2c:	6124      	str	r4, [r4, #16]

                    /* Setup the temporary timer list head pointer.  */
                    reactivate_timer =  current_timer;
10002a2e:	9400      	str	r4, [sp, #0]
                    timeout_function =  TX_NULL;
10002a30:	2500      	movs	r5, #0
                        current_timer -> tx_timer_internal_list_head =  TX_NULL;
                    }
                }

                /* Set pointer to indicate the expired timer that is currently being processed.  */
                _tx_timer_expired_timer_ptr =  current_timer;
10002a32:	4b5b      	ldr	r3, [pc, #364]	; (10002ba0 <_tx_timer_thread_entry+0x19c>)
10002a34:	601c      	str	r4, [r3, #0]
10002a36:	f386 8810 	msr	PRIMASK, r6

                /* Restore interrupts for timer expiration call.  */
                TX_RESTORE

                /* Call the timer-expiration function, if non-NULL.  */
                if (timeout_function != TX_NULL)
10002a3a:	b10d      	cbz	r5, 10002a40 <_tx_timer_thread_entry+0x3c>
                {

                    (timeout_function) (timeout_param);
10002a3c:	4638      	mov	r0, r7
10002a3e:	47a8      	blx	r5
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002a40:	f3ef 8210 	mrs	r2, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002a44:	b672      	cpsid	i

                /* Lockout interrupts again.  */
                TX_DISABLE

                /* Clear expired timer pointer.  */
                _tx_timer_expired_timer_ptr =  TX_NULL;
10002a46:	4b56      	ldr	r3, [pc, #344]	; (10002ba0 <_tx_timer_thread_entry+0x19c>)
10002a48:	2100      	movs	r1, #0
10002a4a:	6019      	str	r1, [r3, #0]

                /* Determine if the timer needs to be reactivated.  */
                if (reactivate_timer == current_timer)
10002a4c:	9b00      	ldr	r3, [sp, #0]
10002a4e:	42a3      	cmp	r3, r4
10002a50:	d043      	beq.n	10002ada <_tx_timer_thread_entry+0xd6>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002a52:	f382 8810 	msr	PRIMASK, r2
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002a56:	f3ef 8610 	mrs	r6, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002a5a:	b672      	cpsid	i
            while (expired_timers != TX_NULL)
10002a5c:	9c01      	ldr	r4, [sp, #4]
10002a5e:	2c00      	cmp	r4, #0
10002a60:	d06c      	beq.n	10002b3c <_tx_timer_thread_entry+0x138>
                next_timer =  expired_timers -> tx_timer_internal_active_next;
10002a62:	6923      	ldr	r3, [r4, #16]
                reactivate_timer =  TX_NULL;
10002a64:	2200      	movs	r2, #0
10002a66:	9200      	str	r2, [sp, #0]
                if (current_timer == next_timer)
10002a68:	429c      	cmp	r4, r3
10002a6a:	d0d8      	beq.n	10002a1e <_tx_timer_thread_entry+0x1a>
                    previous_timer =                                   current_timer -> tx_timer_internal_active_previous;
10002a6c:	6962      	ldr	r2, [r4, #20]
                    next_timer -> tx_timer_internal_active_previous =  previous_timer;
10002a6e:	615a      	str	r2, [r3, #20]
                    previous_timer -> tx_timer_internal_active_next =  next_timer;
10002a70:	6113      	str	r3, [r2, #16]
                    next_timer -> tx_timer_internal_list_head =  &expired_timers;
10002a72:	aa01      	add	r2, sp, #4
10002a74:	619a      	str	r2, [r3, #24]
                    expired_timers =  next_timer;
10002a76:	9301      	str	r3, [sp, #4]
                if (current_timer -> tx_timer_internal_remaining_ticks > TX_TIMER_ENTRIES)
10002a78:	6823      	ldr	r3, [r4, #0]
10002a7a:	2b20      	cmp	r3, #32
10002a7c:	d910      	bls.n	10002aa0 <_tx_timer_thread_entry+0x9c>
                    _tx_timer_performance__expiration_adjust_count++;
10002a7e:	4a49      	ldr	r2, [pc, #292]	; (10002ba4 <_tx_timer_thread_entry+0x1a0>)
10002a80:	6813      	ldr	r3, [r2, #0]
10002a82:	3301      	adds	r3, #1
10002a84:	6013      	str	r3, [r2, #0]
                    if (current_timer -> tx_timer_internal_timeout_function != &_tx_thread_timeout)
10002a86:	68a2      	ldr	r2, [r4, #8]
10002a88:	4b47      	ldr	r3, [pc, #284]	; (10002ba8 <_tx_timer_thread_entry+0x1a4>)
10002a8a:	429a      	cmp	r2, r3
10002a8c:	d0c9      	beq.n	10002a22 <_tx_timer_thread_entry+0x1e>
                        if (timer_ptr -> tx_timer_id == TX_TIMER_ID)
10002a8e:	f854 2c08 	ldr.w	r2, [r4, #-8]
10002a92:	4b40      	ldr	r3, [pc, #256]	; (10002b94 <_tx_timer_thread_entry+0x190>)
10002a94:	429a      	cmp	r2, r3
10002a96:	d1c4      	bne.n	10002a22 <_tx_timer_thread_entry+0x1e>
                            timer_ptr -> tx_timer_performance__expiration_adjust_count++;
10002a98:	6b63      	ldr	r3, [r4, #52]	; 0x34
10002a9a:	3301      	adds	r3, #1
10002a9c:	6363      	str	r3, [r4, #52]	; 0x34
10002a9e:	e7c0      	b.n	10002a22 <_tx_timer_thread_entry+0x1e>
                    _tx_timer_performance_expiration_count++;
10002aa0:	4a42      	ldr	r2, [pc, #264]	; (10002bac <_tx_timer_thread_entry+0x1a8>)
10002aa2:	6813      	ldr	r3, [r2, #0]
10002aa4:	3301      	adds	r3, #1
10002aa6:	6013      	str	r3, [r2, #0]
                    if (current_timer -> tx_timer_internal_timeout_function != &_tx_thread_timeout)
10002aa8:	68a5      	ldr	r5, [r4, #8]
10002aaa:	4b3f      	ldr	r3, [pc, #252]	; (10002ba8 <_tx_timer_thread_entry+0x1a4>)
10002aac:	429d      	cmp	r5, r3
10002aae:	d004      	beq.n	10002aba <_tx_timer_thread_entry+0xb6>
                        if (timer_ptr -> tx_timer_id == TX_TIMER_ID)
10002ab0:	f854 2c08 	ldr.w	r2, [r4, #-8]
10002ab4:	4b37      	ldr	r3, [pc, #220]	; (10002b94 <_tx_timer_thread_entry+0x190>)
10002ab6:	429a      	cmp	r2, r3
10002ab8:	d008      	beq.n	10002acc <_tx_timer_thread_entry+0xc8>
                    timeout_param =     current_timer -> tx_timer_internal_timeout_param;
10002aba:	68e7      	ldr	r7, [r4, #12]
                    current_timer -> tx_timer_internal_remaining_ticks =  current_timer -> tx_timer_internal_re_initialize_ticks;
10002abc:	6863      	ldr	r3, [r4, #4]
10002abe:	6023      	str	r3, [r4, #0]
                    if (current_timer -> tx_timer_internal_remaining_ticks != ((ULONG) 0))
10002ac0:	b143      	cbz	r3, 10002ad4 <_tx_timer_thread_entry+0xd0>
                        current_timer -> tx_timer_internal_list_head =    &reactivate_timer;
10002ac2:	f8c4 d018 	str.w	sp, [r4, #24]
                        current_timer -> tx_timer_internal_active_next =  current_timer;
10002ac6:	6124      	str	r4, [r4, #16]
                        reactivate_timer =  current_timer;
10002ac8:	9400      	str	r4, [sp, #0]
10002aca:	e7b2      	b.n	10002a32 <_tx_timer_thread_entry+0x2e>
                            timer_ptr -> tx_timer_performance_expiration_count++;
10002acc:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002ace:	3301      	adds	r3, #1
10002ad0:	6323      	str	r3, [r4, #48]	; 0x30
10002ad2:	e7f2      	b.n	10002aba <_tx_timer_thread_entry+0xb6>
                        current_timer -> tx_timer_internal_list_head =  TX_NULL;
10002ad4:	2300      	movs	r3, #0
10002ad6:	61a3      	str	r3, [r4, #24]
10002ad8:	e7ab      	b.n	10002a32 <_tx_timer_thread_entry+0x2e>
                    /* Reactivate the timer.  */

#ifdef TX_TIMER_ENABLE_PERFORMANCE_INFO

                    /* Determine if this timer expired.  */
                    if (timeout_function != TX_NULL)
10002ada:	b165      	cbz	r5, 10002af6 <_tx_timer_thread_entry+0xf2>
                    {

                        /* Increment the total reactivations counter.  */
                        _tx_timer_performance_reactivate_count++;
10002adc:	4934      	ldr	r1, [pc, #208]	; (10002bb0 <_tx_timer_thread_entry+0x1ac>)
10002ade:	680b      	ldr	r3, [r1, #0]
10002ae0:	3301      	adds	r3, #1
10002ae2:	600b      	str	r3, [r1, #0]

                        /* Determine if this is an application timer.  */
                        if (current_timer -> tx_timer_internal_timeout_function != &_tx_thread_timeout)
10002ae4:	68a1      	ldr	r1, [r4, #8]
10002ae6:	4b30      	ldr	r3, [pc, #192]	; (10002ba8 <_tx_timer_thread_entry+0x1a4>)
10002ae8:	4299      	cmp	r1, r3
10002aea:	d004      	beq.n	10002af6 <_tx_timer_thread_entry+0xf2>

                            /* Pickup the application timer pointer.  */
                            TX_USER_TIMER_POINTER_GET(current_timer, timer_ptr)

                            /* Increment the number of expirations on this timer.  */
                            if (timer_ptr -> tx_timer_id == TX_TIMER_ID)
10002aec:	f854 1c08 	ldr.w	r1, [r4, #-8]
10002af0:	4b28      	ldr	r3, [pc, #160]	; (10002b94 <_tx_timer_thread_entry+0x190>)
10002af2:	4299      	cmp	r1, r3
10002af4:	d018      	beq.n	10002b28 <_tx_timer_thread_entry+0x124>
#endif

#ifdef TX_REACTIVATE_INLINE

                    /* Calculate the amount of time remaining for the timer.  */
                    if (current_timer -> tx_timer_internal_remaining_ticks > TX_TIMER_ENTRIES)
10002af6:	6821      	ldr	r1, [r4, #0]
10002af8:	2920      	cmp	r1, #32
10002afa:	d819      	bhi.n	10002b30 <_tx_timer_thread_entry+0x12c>
                    {

                        /* Timer value fits in the timer entries.  */

                        /* Set the expiration time.  */
                        expiration_time =  ((UINT) current_timer -> tx_timer_internal_remaining_ticks) - ((UINT) 1);
10002afc:	3901      	subs	r1, #1

                    /* At this point, we are ready to put the timer back on one of
                       the timer lists.  */

                    /* Calculate the proper place for the timer.  */
                    timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, expiration_time);
10002afe:	4b27      	ldr	r3, [pc, #156]	; (10002b9c <_tx_timer_thread_entry+0x198>)
10002b00:	681b      	ldr	r3, [r3, #0]
10002b02:	eb03 0381 	add.w	r3, r3, r1, lsl #2
                    if (TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(timer_list) >= TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(_tx_timer_list_end))
10002b06:	492b      	ldr	r1, [pc, #172]	; (10002bb4 <_tx_timer_thread_entry+0x1b0>)
10002b08:	6809      	ldr	r1, [r1, #0]
10002b0a:	4299      	cmp	r1, r3
10002b0c:	d803      	bhi.n	10002b16 <_tx_timer_thread_entry+0x112>
                    {

                        /* Wrap from the beginning of the list.  */
                        delta =  TX_TIMER_POINTER_DIF(timer_list, _tx_timer_list_end);
10002b0e:	1a5b      	subs	r3, r3, r1
                        timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_list_start, delta);
10002b10:	4921      	ldr	r1, [pc, #132]	; (10002b98 <_tx_timer_thread_entry+0x194>)
10002b12:	6809      	ldr	r1, [r1, #0]
10002b14:	440b      	add	r3, r1
                    }

                    /* Now put the timer on this list.  */
                    if ((*timer_list) == TX_NULL)
10002b16:	6819      	ldr	r1, [r3, #0]
10002b18:	b161      	cbz	r1, 10002b34 <_tx_timer_thread_entry+0x130>
                    else
                    {

                        /* This list is not NULL, add current timer to the end. */
                        next_timer =                                          *timer_list;
                        previous_timer =                                      next_timer -> tx_timer_internal_active_previous;
10002b1a:	6948      	ldr	r0, [r1, #20]
                        previous_timer -> tx_timer_internal_active_next =     current_timer;
10002b1c:	6104      	str	r4, [r0, #16]
                        next_timer -> tx_timer_internal_active_previous =     current_timer;
10002b1e:	614c      	str	r4, [r1, #20]
                        current_timer -> tx_timer_internal_active_next =      next_timer;
10002b20:	6121      	str	r1, [r4, #16]
                        current_timer -> tx_timer_internal_active_previous =  previous_timer;
10002b22:	6160      	str	r0, [r4, #20]
                    }

                    /* Setup list head pointer.  */
                    current_timer -> tx_timer_internal_list_head =  timer_list;
10002b24:	61a3      	str	r3, [r4, #24]
10002b26:	e794      	b.n	10002a52 <_tx_timer_thread_entry+0x4e>
                                timer_ptr -> tx_timer_performance_reactivate_count++;
10002b28:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002b2a:	3301      	adds	r3, #1
10002b2c:	62a3      	str	r3, [r4, #40]	; 0x28
10002b2e:	e7e2      	b.n	10002af6 <_tx_timer_thread_entry+0xf2>
                        expiration_time =  TX_TIMER_ENTRIES - ((UINT) 1);
10002b30:	211f      	movs	r1, #31
10002b32:	e7e4      	b.n	10002afe <_tx_timer_thread_entry+0xfa>
                        current_timer -> tx_timer_internal_active_next =      current_timer;
10002b34:	6124      	str	r4, [r4, #16]
                        current_timer -> tx_timer_internal_active_previous =  current_timer;
10002b36:	6164      	str	r4, [r4, #20]
                        *timer_list =  current_timer;
10002b38:	601c      	str	r4, [r3, #0]
10002b3a:	e7f3      	b.n	10002b24 <_tx_timer_thread_entry+0x120>

            /* Finally, suspend this thread and wait for the next expiration.  */

            /* Determine if another expiration took place while we were in this
               thread.  If so, process another expiration.  */
            if (_tx_timer_expired == TX_FALSE)
10002b3c:	4b1e      	ldr	r3, [pc, #120]	; (10002bb8 <_tx_timer_thread_entry+0x1b4>)
10002b3e:	681b      	ldr	r3, [r3, #0]
10002b40:	bb2b      	cbnz	r3, 10002b8e <_tx_timer_thread_entry+0x18a>
                /* Build pointer to the timer thread.  */
                thread_ptr =  &_tx_timer_thread;

                /* Set the status to suspending, in order to indicate the
                   suspension is in progress.  */
                thread_ptr -> tx_thread_state =  TX_SUSPENDED;
10002b42:	481e      	ldr	r0, [pc, #120]	; (10002bbc <_tx_timer_thread_entry+0x1b8>)
10002b44:	2303      	movs	r3, #3
10002b46:	6303      	str	r3, [r0, #48]	; 0x30

#ifdef TX_NOT_INTERRUPTABLE

                /* Call actual non-interruptable thread suspension routine.  */
                _tx_thread_system_ni_suspend(thread_ptr, ((ULONG) 0));
10002b48:	2100      	movs	r1, #0
10002b4a:	f7ff fc8b 	bl	10002464 <_tx_thread_system_ni_suspend>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002b4e:	f386 8810 	msr	PRIMASK, r6
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002b52:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002b56:	b672      	cpsid	i
            expired_timers =  *_tx_timer_current_ptr;
10002b58:	4b10      	ldr	r3, [pc, #64]	; (10002b9c <_tx_timer_thread_entry+0x198>)
10002b5a:	681a      	ldr	r2, [r3, #0]
10002b5c:	6813      	ldr	r3, [r2, #0]
10002b5e:	9301      	str	r3, [sp, #4]
            if (expired_timers != TX_NULL)
10002b60:	b10b      	cbz	r3, 10002b66 <_tx_timer_thread_entry+0x162>
                expired_timers -> tx_timer_internal_list_head =  &expired_timers;
10002b62:	a801      	add	r0, sp, #4
10002b64:	6198      	str	r0, [r3, #24]
            *_tx_timer_current_ptr =  TX_NULL;
10002b66:	2300      	movs	r3, #0
10002b68:	6013      	str	r3, [r2, #0]
            _tx_timer_current_ptr =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, 1);
10002b6a:	4a0c      	ldr	r2, [pc, #48]	; (10002b9c <_tx_timer_thread_entry+0x198>)
10002b6c:	6813      	ldr	r3, [r2, #0]
10002b6e:	3304      	adds	r3, #4
10002b70:	6013      	str	r3, [r2, #0]
            if (_tx_timer_current_ptr == _tx_timer_list_end)
10002b72:	4a10      	ldr	r2, [pc, #64]	; (10002bb4 <_tx_timer_thread_entry+0x1b0>)
10002b74:	6812      	ldr	r2, [r2, #0]
10002b76:	4293      	cmp	r3, r2
10002b78:	f43f af4c 	beq.w	10002a14 <_tx_timer_thread_entry+0x10>
            _tx_timer_expired =  TX_FALSE;
10002b7c:	4b0e      	ldr	r3, [pc, #56]	; (10002bb8 <_tx_timer_thread_entry+0x1b4>)
10002b7e:	2200      	movs	r2, #0
10002b80:	601a      	str	r2, [r3, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002b82:	f381 8810 	msr	PRIMASK, r1
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002b86:	f3ef 8610 	mrs	r6, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002b8a:	b672      	cpsid	i
            while (expired_timers != TX_NULL)
10002b8c:	e766      	b.n	10002a5c <_tx_timer_thread_entry+0x58>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002b8e:	f386 8810 	msr	PRIMASK, r6
}
10002b92:	e7de      	b.n	10002b52 <_tx_timer_thread_entry+0x14e>
10002b94:	4154494d 	cmpmi	r4, sp, asr #18
10002b98:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}
10002b9c:	38001294 	stmdacc	r0, {r2, r4, r7, r9, ip}
10002ba0:	380012a0 	stmdacc	r0, {r5, r7, r9, ip}
10002ba4:	3800132c 	stmdacc	r0, {r2, r3, r5, r8, r9, ip}
10002ba8:	10002899 	mulne	r0, r9, r8
10002bac:	38001330 	stmdacc	r0, {r4, r5, r8, r9, ip}
10002bb0:	38001334 	stmdacc	r0, {r2, r4, r5, r8, r9, ip}
10002bb4:	38001324 	stmdacc	r0, {r2, r5, r8, r9, ip}
10002bb8:	38001298 	stmdacc	r0, {r3, r4, r7, r9, ip}
10002bbc:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}

10002bc0 <_txe_block_release>:
UCHAR               **indirect_ptr;
UCHAR               *work_ptr;


    /* First check the supplied pointer.  */
    if (block_ptr == TX_NULL)
10002bc0:	b160      	cbz	r0, 10002bdc <_txe_block_release+0x1c>
{
10002bc2:	b508      	push	{r3, lr}
        /* Pickup the pool pointer which is just previous to the starting
           address of block that the caller sees.  */
        work_ptr =      TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
        work_ptr =      TX_UCHAR_POINTER_SUB(work_ptr, (sizeof(UCHAR *)));
        indirect_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
        work_ptr =      *indirect_ptr;
10002bc4:	f850 3c04 	ldr.w	r3, [r0, #-4]
        pool_ptr =      TX_UCHAR_TO_BLOCK_POOL_POINTER_CONVERT(work_ptr);

        /* Check for an invalid pool pointer.  */
        if (pool_ptr == TX_NULL)
10002bc8:	b153      	cbz	r3, 10002be0 <_txe_block_release+0x20>
            /* Pool pointer is invalid, return appropriate error code.  */
            status =  TX_PTR_ERROR;
        }

        /* Now check for invalid pool ID.  */
        else if  (pool_ptr -> tx_block_pool_id != TX_BLOCK_POOL_ID)
10002bca:	6819      	ldr	r1, [r3, #0]
10002bcc:	4b05      	ldr	r3, [pc, #20]	; (10002be4 <_txe_block_release+0x24>)
10002bce:	4299      	cmp	r1, r3
10002bd0:	d001      	beq.n	10002bd6 <_txe_block_release+0x16>
        {

            /* Pool pointer is invalid, return appropriate error code.  */
            status =  TX_PTR_ERROR;
10002bd2:	2003      	movs	r0, #3
        }
    }

    /* Return completion status.  */
    return(status);
}
10002bd4:	bd08      	pop	{r3, pc}
            status =  _tx_block_release(block_ptr);
10002bd6:	f7fe ff6f 	bl	10001ab8 <_tx_block_release>
10002bda:	e7fb      	b.n	10002bd4 <_txe_block_release+0x14>
        status =  TX_PTR_ERROR;
10002bdc:	2003      	movs	r0, #3
}
10002bde:	4770      	bx	lr
            status =  TX_PTR_ERROR;
10002be0:	2003      	movs	r0, #3
10002be2:	e7f7      	b.n	10002bd4 <_txe_block_release+0x14>
10002be4:	424c4f43 	submi	r4, ip, #268	; 0x10c

10002be8 <_txe_byte_allocate>:
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _txe_byte_allocate(TX_BYTE_POOL *pool_ptr, VOID **memory_ptr,
                                    ULONG memory_size,  ULONG wait_option)
{
10002be8:	b510      	push	{r4, lr}

    /* Default status to success.  */
    status =  TX_SUCCESS;

    /* Check for an invalid byte pool pointer.  */
    if (pool_ptr == TX_NULL)
10002bea:	4684      	mov	ip, r0
10002bec:	b360      	cbz	r0, 10002c48 <_txe_byte_allocate+0x60>
        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
    }

    /* Now check for invalid pool ID.  */
    else if  (pool_ptr -> tx_byte_pool_id != TX_BYTE_POOL_ID)
10002bee:	481f      	ldr	r0, [pc, #124]	; (10002c6c <_txe_byte_allocate+0x84>)
10002bf0:	f8dc 4000 	ldr.w	r4, [ip]
10002bf4:	4284      	cmp	r4, r0
10002bf6:	d013      	beq.n	10002c20 <_txe_byte_allocate+0x38>
    {

        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
10002bf8:	2002      	movs	r0, #2
        }
    }
#endif

    /* Is everything still okay?  */
    if (status == TX_SUCCESS)
10002bfa:	b978      	cbnz	r0, 10002c1c <_txe_byte_allocate+0x34>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002bfc:	f3ef 8e05 	mrs	lr, IPSR
    {

        /* Check for interrupt call.  */
        if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002c00:	4c1b      	ldr	r4, [pc, #108]	; (10002c70 <_txe_byte_allocate+0x88>)
10002c02:	6824      	ldr	r4, [r4, #0]
10002c04:	ea54 040e 	orrs.w	r4, r4, lr
10002c08:	d008      	beq.n	10002c1c <_txe_byte_allocate+0x34>
10002c0a:	f3ef 8e05 	mrs	lr, IPSR
        {

            /* Now, make sure the call is from an interrupt and not initialization.  */
            if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10002c0e:	4c18      	ldr	r4, [pc, #96]	; (10002c70 <_txe_byte_allocate+0x88>)
10002c10:	6824      	ldr	r4, [r4, #0]
10002c12:	ea44 040e 	orr.w	r4, r4, lr
10002c16:	f1b4 3ff0 	cmp.w	r4, #4042322160	; 0xf0f0f0f0
10002c1a:	d325      	bcc.n	10002c68 <_txe_byte_allocate+0x80>
            }
        }
    }

    /* Determine if everything is okay.  */
    if (status == TX_SUCCESS)
10002c1c:	b300      	cbz	r0, 10002c60 <_txe_byte_allocate+0x78>
        status =  _tx_byte_allocate(pool_ptr, memory_ptr, memory_size,  wait_option);
    }

    /* Return completion status.  */
    return(status);
}
10002c1e:	bd10      	pop	{r4, pc}
    else if (memory_ptr == TX_NULL)
10002c20:	b1a1      	cbz	r1, 10002c4c <_txe_byte_allocate+0x64>
    else if (memory_size == ((ULONG) 0))
10002c22:	b1aa      	cbz	r2, 10002c50 <_txe_byte_allocate+0x68>
    else if (memory_size > pool_ptr -> tx_byte_pool_size)
10002c24:	f8dc 001c 	ldr.w	r0, [ip, #28]
10002c28:	4290      	cmp	r0, r2
10002c2a:	d313      	bcc.n	10002c54 <_txe_byte_allocate+0x6c>
        if (wait_option != TX_NO_WAIT)
10002c2c:	b12b      	cbz	r3, 10002c3a <_txe_byte_allocate+0x52>
10002c2e:	f3ef 8005 	mrs	r0, IPSR
            if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002c32:	4c0f      	ldr	r4, [pc, #60]	; (10002c70 <_txe_byte_allocate+0x88>)
10002c34:	6824      	ldr	r4, [r4, #0]
10002c36:	4320      	orrs	r0, r4
10002c38:	d10e      	bne.n	10002c58 <_txe_byte_allocate+0x70>
        TX_THREAD_GET_CURRENT(thread_ptr)
10002c3a:	480e      	ldr	r0, [pc, #56]	; (10002c74 <_txe_byte_allocate+0x8c>)
10002c3c:	6804      	ldr	r4, [r0, #0]
        if (thread_ptr == &_tx_timer_thread)
10002c3e:	480e      	ldr	r0, [pc, #56]	; (10002c78 <_txe_byte_allocate+0x90>)
10002c40:	4284      	cmp	r4, r0
10002c42:	d00b      	beq.n	10002c5c <_txe_byte_allocate+0x74>
10002c44:	2000      	movs	r0, #0
10002c46:	e7d8      	b.n	10002bfa <_txe_byte_allocate+0x12>
        status =  TX_POOL_ERROR;
10002c48:	2002      	movs	r0, #2
10002c4a:	e7d6      	b.n	10002bfa <_txe_byte_allocate+0x12>
        status =  TX_PTR_ERROR;
10002c4c:	2003      	movs	r0, #3
10002c4e:	e7d4      	b.n	10002bfa <_txe_byte_allocate+0x12>
        status =  TX_SIZE_ERROR;
10002c50:	2005      	movs	r0, #5
10002c52:	e7d2      	b.n	10002bfa <_txe_byte_allocate+0x12>
        status =  TX_SIZE_ERROR;
10002c54:	2005      	movs	r0, #5
10002c56:	e7d0      	b.n	10002bfa <_txe_byte_allocate+0x12>
                status =  TX_WAIT_ERROR;
10002c58:	2004      	movs	r0, #4
10002c5a:	e7ce      	b.n	10002bfa <_txe_byte_allocate+0x12>
            status =  TX_CALLER_ERROR;
10002c5c:	2013      	movs	r0, #19
10002c5e:	e7dd      	b.n	10002c1c <_txe_byte_allocate+0x34>
        status =  _tx_byte_allocate(pool_ptr, memory_ptr, memory_size,  wait_option);
10002c60:	4660      	mov	r0, ip
10002c62:	f7fe ff55 	bl	10001b10 <_tx_byte_allocate>
10002c66:	e7da      	b.n	10002c1e <_txe_byte_allocate+0x36>
                status =  TX_CALLER_ERROR;
10002c68:	2013      	movs	r0, #19
    return(status);
10002c6a:	e7d8      	b.n	10002c1e <_txe_byte_allocate+0x36>
10002c6c:	42595445 	subsmi	r5, r9, #1157627904	; 0x45000000
10002c70:	38000004 	stmdacc	r0, {r2}
10002c74:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10002c78:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}

10002c7c <_txe_byte_pool_create>:

    /* Default status to success.  */
    status =  TX_SUCCESS;

    /* Check for an invalid byte pool pointer.  */
    if (pool_ptr == TX_NULL)
10002c7c:	2800      	cmp	r0, #0
10002c7e:	d050      	beq.n	10002d22 <_txe_byte_pool_create+0xa6>
{
10002c80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10002c84:	4689      	mov	r9, r1
10002c86:	4617      	mov	r7, r2
10002c88:	4698      	mov	r8, r3
10002c8a:	4606      	mov	r6, r0
        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
    }

    /* Now see if the pool control block size is valid.  */
    else if (pool_control_block_size != (sizeof(TX_BYTE_POOL)))
10002c8c:	9b08      	ldr	r3, [sp, #32]
10002c8e:	2b34      	cmp	r3, #52	; 0x34
10002c90:	d002      	beq.n	10002c98 <_txe_byte_pool_create+0x1c>
    {

        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
10002c92:	2002      	movs	r0, #2
        status =  _tx_byte_pool_create(pool_ptr, name_ptr, pool_start, pool_size);
    }

    /* Return completion status.  */
    return(status);
}
10002c94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002c98:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002c9c:	b672      	cpsid	i
        _tx_thread_preempt_disable++;
10002c9e:	4a26      	ldr	r2, [pc, #152]	; (10002d38 <_txe_byte_pool_create+0xbc>)
10002ca0:	6813      	ldr	r3, [r2, #0]
10002ca2:	3301      	adds	r3, #1
10002ca4:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002ca6:	f381 8810 	msr	PRIMASK, r1
        next_pool =   _tx_byte_pool_created_ptr;
10002caa:	4b24      	ldr	r3, [pc, #144]	; (10002d3c <_txe_byte_pool_create+0xc0>)
10002cac:	681c      	ldr	r4, [r3, #0]
        for (i = ((ULONG) 0); i < _tx_byte_pool_created_count; i++)
10002cae:	2000      	movs	r0, #0
10002cb0:	4d23      	ldr	r5, [pc, #140]	; (10002d40 <_txe_byte_pool_create+0xc4>)
10002cb2:	682d      	ldr	r5, [r5, #0]
10002cb4:	4285      	cmp	r5, r0
10002cb6:	d904      	bls.n	10002cc2 <_txe_byte_pool_create+0x46>
            if (pool_ptr == next_pool)
10002cb8:	42b4      	cmp	r4, r6
10002cba:	d002      	beq.n	10002cc2 <_txe_byte_pool_create+0x46>
                next_pool =  next_pool -> tx_byte_pool_created_next;
10002cbc:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
        for (i = ((ULONG) 0); i < _tx_byte_pool_created_count; i++)
10002cbe:	3001      	adds	r0, #1
10002cc0:	e7f6      	b.n	10002cb0 <_txe_byte_pool_create+0x34>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002cc2:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002cc6:	b672      	cpsid	i
        _tx_thread_preempt_disable--;
10002cc8:	4a1b      	ldr	r2, [pc, #108]	; (10002d38 <_txe_byte_pool_create+0xbc>)
10002cca:	6813      	ldr	r3, [r2, #0]
10002ccc:	3b01      	subs	r3, #1
10002cce:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002cd0:	f381 8810 	msr	PRIMASK, r1
        _tx_thread_system_preempt_check();
10002cd4:	f7ff f9c8 	bl	10002068 <_tx_thread_system_preempt_check>
        if (pool_ptr == next_pool)
10002cd8:	42b4      	cmp	r4, r6
10002cda:	d024      	beq.n	10002d26 <_txe_byte_pool_create+0xaa>
        else if (pool_start == TX_NULL)
10002cdc:	b32f      	cbz	r7, 10002d2a <_txe_byte_pool_create+0xae>
        else if (pool_size < TX_BYTE_POOL_MIN)
10002cde:	f1b8 0f63 	cmp.w	r8, #99	; 0x63
10002ce2:	d924      	bls.n	10002d2e <_txe_byte_pool_create+0xb2>
            TX_THREAD_GET_CURRENT(thread_ptr)
10002ce4:	4b17      	ldr	r3, [pc, #92]	; (10002d44 <_txe_byte_pool_create+0xc8>)
10002ce6:	681a      	ldr	r2, [r3, #0]
            if (thread_ptr == &_tx_timer_thread)
10002ce8:	4b17      	ldr	r3, [pc, #92]	; (10002d48 <_txe_byte_pool_create+0xcc>)
10002cea:	429a      	cmp	r2, r3
10002cec:	d017      	beq.n	10002d1e <_txe_byte_pool_create+0xa2>
    status =  TX_SUCCESS;
10002cee:	2000      	movs	r0, #0
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002cf0:	f3ef 8305 	mrs	r3, IPSR
            if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002cf4:	4a15      	ldr	r2, [pc, #84]	; (10002d4c <_txe_byte_pool_create+0xd0>)
10002cf6:	6812      	ldr	r2, [r2, #0]
10002cf8:	4313      	orrs	r3, r2
10002cfa:	d007      	beq.n	10002d0c <_txe_byte_pool_create+0x90>
10002cfc:	f3ef 8205 	mrs	r2, IPSR
                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10002d00:	4b12      	ldr	r3, [pc, #72]	; (10002d4c <_txe_byte_pool_create+0xd0>)
10002d02:	681b      	ldr	r3, [r3, #0]
10002d04:	4313      	orrs	r3, r2
10002d06:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
10002d0a:	d312      	bcc.n	10002d32 <_txe_byte_pool_create+0xb6>
    if (status == TX_SUCCESS)
10002d0c:	2800      	cmp	r0, #0
10002d0e:	d1c1      	bne.n	10002c94 <_txe_byte_pool_create+0x18>
        status =  _tx_byte_pool_create(pool_ptr, name_ptr, pool_start, pool_size);
10002d10:	4643      	mov	r3, r8
10002d12:	463a      	mov	r2, r7
10002d14:	4649      	mov	r1, r9
10002d16:	4630      	mov	r0, r6
10002d18:	f7fe ff6c 	bl	10001bf4 <_tx_byte_pool_create>
10002d1c:	e7ba      	b.n	10002c94 <_txe_byte_pool_create+0x18>
                status =  TX_CALLER_ERROR;
10002d1e:	2013      	movs	r0, #19
10002d20:	e7e6      	b.n	10002cf0 <_txe_byte_pool_create+0x74>
        status =  TX_POOL_ERROR;
10002d22:	2002      	movs	r0, #2
}
10002d24:	4770      	bx	lr
            status =  TX_POOL_ERROR;
10002d26:	2002      	movs	r0, #2
10002d28:	e7b4      	b.n	10002c94 <_txe_byte_pool_create+0x18>
            status =  TX_PTR_ERROR;
10002d2a:	2003      	movs	r0, #3
10002d2c:	e7b2      	b.n	10002c94 <_txe_byte_pool_create+0x18>
            status =  TX_SIZE_ERROR;
10002d2e:	2005      	movs	r0, #5
10002d30:	e7b0      	b.n	10002c94 <_txe_byte_pool_create+0x18>
                    status =  TX_CALLER_ERROR;
10002d32:	2013      	movs	r0, #19
    return(status);
10002d34:	e7ae      	b.n	10002c94 <_txe_byte_pool_create+0x18>
10002d36:	bf00      	nop
10002d38:	38001208 	stmdacc	r0, {r3, r9, ip}
10002d3c:	3800119c 	stmdacc	r0, {r2, r3, r4, r7, r8, ip}
10002d40:	38001198 	stmdacc	r0, {r3, r4, r7, r8, ip}
10002d44:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10002d48:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}
10002d4c:	38000004 	stmdacc	r0, {r2}

10002d50 <_txe_thread_create>:
UINT    _txe_thread_create(TX_THREAD *thread_ptr, CHAR *name_ptr,
                VOID (*entry_function)(ULONG id), ULONG entry_input,
                VOID *stack_start, ULONG stack_size,
                UINT priority, UINT preempt_threshold,
                ULONG time_slice, UINT auto_start, UINT thread_control_block_size)
{
10002d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002d54:	b086      	sub	sp, #24
10002d56:	9e0e      	ldr	r6, [sp, #56]	; 0x38

    /* Default status to success.  */
    status =  TX_SUCCESS;

    /* Check for an invalid thread pointer.  */
    if (thread_ptr == TX_NULL)
10002d58:	2800      	cmp	r0, #0
10002d5a:	d07e      	beq.n	10002e5a <_txe_thread_create+0x10a>
10002d5c:	4689      	mov	r9, r1
10002d5e:	4690      	mov	r8, r2
10002d60:	469a      	mov	sl, r3
10002d62:	4607      	mov	r7, r0
        /* Thread pointer is invalid, return appropriate error code.  */
        status =  TX_THREAD_ERROR;
    }

    /* Now check for invalid thread control block size.  */
    else if (thread_control_block_size != (sizeof(TX_THREAD)))
10002d64:	9b14      	ldr	r3, [sp, #80]	; 0x50
10002d66:	2bd4      	cmp	r3, #212	; 0xd4
10002d68:	d003      	beq.n	10002d72 <_txe_thread_create+0x22>
    {

        /* Thread pointer is invalid, return appropriate error code.  */
        status =  TX_THREAD_ERROR;
10002d6a:	200e      	movs	r0, #14
                        time_slice, auto_start);
    }

    /* Return completion status.  */
    return(status);
}
10002d6c:	b006      	add	sp, #24
10002d6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002d72:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002d76:	b672      	cpsid	i
        _tx_thread_preempt_disable++;
10002d78:	4a41      	ldr	r2, [pc, #260]	; (10002e80 <_txe_thread_create+0x130>)
10002d7a:	6813      	ldr	r3, [r2, #0]
10002d7c:	3301      	adds	r3, #1
10002d7e:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002d80:	f381 8810 	msr	PRIMASK, r1
        next_thread =  _tx_thread_created_ptr;
10002d84:	4b3f      	ldr	r3, [pc, #252]	; (10002e84 <_txe_thread_create+0x134>)
10002d86:	681c      	ldr	r4, [r3, #0]
        work_ptr =     TX_UCHAR_POINTER_ADD(work_ptr, (stack_size - ((ULONG) 1)));
10002d88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10002d8a:	1e5a      	subs	r2, r3, #1
10002d8c:	4432      	add	r2, r6
        for (i = ((ULONG) 0); i < _tx_thread_created_count; i++)
10002d8e:	2000      	movs	r0, #0
        break_flag =   TX_FALSE;
10002d90:	4601      	mov	r1, r0
        for (i = ((ULONG) 0); i < _tx_thread_created_count; i++)
10002d92:	e002      	b.n	10002d9a <_txe_thread_create+0x4a>
            next_thread =  next_thread -> tx_thread_created_next;
10002d94:	f8d4 4088 	ldr.w	r4, [r4, #136]	; 0x88
        for (i = ((ULONG) 0); i < _tx_thread_created_count; i++)
10002d98:	3001      	adds	r0, #1
10002d9a:	4b3b      	ldr	r3, [pc, #236]	; (10002e88 <_txe_thread_create+0x138>)
10002d9c:	681b      	ldr	r3, [r3, #0]
10002d9e:	4283      	cmp	r3, r0
10002da0:	d912      	bls.n	10002dc8 <_txe_thread_create+0x78>
            if (thread_ptr == next_thread)
10002da2:	42bc      	cmp	r4, r7
10002da4:	d010      	beq.n	10002dc8 <_txe_thread_create+0x78>
            if (break_flag == TX_TRUE)
10002da6:	b979      	cbnz	r1, 10002dc8 <_txe_thread_create+0x78>
            if (stack_start >= next_thread -> tx_thread_stack_start)
10002da8:	68e5      	ldr	r5, [r4, #12]
10002daa:	42b5      	cmp	r5, r6
10002dac:	d804      	bhi.n	10002db8 <_txe_thread_create+0x68>
                if (stack_start < next_thread -> tx_thread_stack_end)
10002dae:	6923      	ldr	r3, [r4, #16]
10002db0:	42b3      	cmp	r3, r6
10002db2:	d901      	bls.n	10002db8 <_txe_thread_create+0x68>
                    break_flag =  TX_TRUE;
10002db4:	2101      	movs	r1, #1
                    stack_start =  TX_NULL;
10002db6:	2600      	movs	r6, #0
            if (stack_end >= next_thread -> tx_thread_stack_start)
10002db8:	4295      	cmp	r5, r2
10002dba:	d8eb      	bhi.n	10002d94 <_txe_thread_create+0x44>
                if (stack_end < next_thread -> tx_thread_stack_end)
10002dbc:	6923      	ldr	r3, [r4, #16]
10002dbe:	4293      	cmp	r3, r2
10002dc0:	d9e8      	bls.n	10002d94 <_txe_thread_create+0x44>
                    break_flag =  TX_TRUE;
10002dc2:	2101      	movs	r1, #1
                    stack_start =  TX_NULL;
10002dc4:	2600      	movs	r6, #0
10002dc6:	e7e5      	b.n	10002d94 <_txe_thread_create+0x44>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002dc8:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002dcc:	b672      	cpsid	i
        _tx_thread_preempt_disable--;
10002dce:	4a2c      	ldr	r2, [pc, #176]	; (10002e80 <_txe_thread_create+0x130>)
10002dd0:	6813      	ldr	r3, [r2, #0]
10002dd2:	3b01      	subs	r3, #1
10002dd4:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002dd6:	f381 8810 	msr	PRIMASK, r1
        _tx_thread_system_preempt_check();
10002dda:	f7ff f945 	bl	10002068 <_tx_thread_system_preempt_check>
        if (thread_ptr == next_thread)
10002dde:	42bc      	cmp	r4, r7
10002de0:	d03d      	beq.n	10002e5e <_txe_thread_create+0x10e>
        else if (stack_start == TX_NULL)
10002de2:	2e00      	cmp	r6, #0
10002de4:	d03d      	beq.n	10002e62 <_txe_thread_create+0x112>
        else if (entry_function == TX_NULL)
10002de6:	f1b8 0f00 	cmp.w	r8, #0
10002dea:	d03c      	beq.n	10002e66 <_txe_thread_create+0x116>
        else if (stack_size < ((ULONG) TX_MINIMUM_STACK))
10002dec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10002dee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
10002df2:	d33a      	bcc.n	10002e6a <_txe_thread_create+0x11a>
        else if (priority >= ((UINT) TX_MAX_PRIORITIES))
10002df4:	9b10      	ldr	r3, [sp, #64]	; 0x40
10002df6:	2b1f      	cmp	r3, #31
10002df8:	d839      	bhi.n	10002e6e <_txe_thread_create+0x11e>
        else if (preempt_threshold > priority)
10002dfa:	9a11      	ldr	r2, [sp, #68]	; 0x44
10002dfc:	4293      	cmp	r3, r2
10002dfe:	d338      	bcc.n	10002e72 <_txe_thread_create+0x122>
        else if (auto_start > TX_AUTO_START)
10002e00:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10002e02:	2b01      	cmp	r3, #1
10002e04:	d837      	bhi.n	10002e76 <_txe_thread_create+0x126>
            TX_THREAD_GET_CURRENT(current_thread)
10002e06:	4b21      	ldr	r3, [pc, #132]	; (10002e8c <_txe_thread_create+0x13c>)
10002e08:	681a      	ldr	r2, [r3, #0]
            if (current_thread == &_tx_timer_thread)
10002e0a:	4b21      	ldr	r3, [pc, #132]	; (10002e90 <_txe_thread_create+0x140>)
10002e0c:	429a      	cmp	r2, r3
10002e0e:	d022      	beq.n	10002e56 <_txe_thread_create+0x106>
    status =  TX_SUCCESS;
10002e10:	2000      	movs	r0, #0
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002e12:	f3ef 8305 	mrs	r3, IPSR
            if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002e16:	4a1f      	ldr	r2, [pc, #124]	; (10002e94 <_txe_thread_create+0x144>)
10002e18:	6812      	ldr	r2, [r2, #0]
10002e1a:	4313      	orrs	r3, r2
10002e1c:	d007      	beq.n	10002e2e <_txe_thread_create+0xde>
10002e1e:	f3ef 8205 	mrs	r2, IPSR
                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10002e22:	4b1c      	ldr	r3, [pc, #112]	; (10002e94 <_txe_thread_create+0x144>)
10002e24:	681b      	ldr	r3, [r3, #0]
10002e26:	4313      	orrs	r3, r2
10002e28:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
10002e2c:	d325      	bcc.n	10002e7a <_txe_thread_create+0x12a>
    if (status == TX_SUCCESS)
10002e2e:	2800      	cmp	r0, #0
10002e30:	d19c      	bne.n	10002d6c <_txe_thread_create+0x1c>
        status =  _tx_thread_create(thread_ptr, name_ptr, entry_function, entry_input,
10002e32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10002e34:	9305      	str	r3, [sp, #20]
10002e36:	9b12      	ldr	r3, [sp, #72]	; 0x48
10002e38:	9304      	str	r3, [sp, #16]
10002e3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
10002e3c:	9303      	str	r3, [sp, #12]
10002e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
10002e40:	9302      	str	r3, [sp, #8]
10002e42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10002e44:	9301      	str	r3, [sp, #4]
10002e46:	9600      	str	r6, [sp, #0]
10002e48:	4653      	mov	r3, sl
10002e4a:	4642      	mov	r2, r8
10002e4c:	4649      	mov	r1, r9
10002e4e:	4638      	mov	r0, r7
10002e50:	f7fe ffb4 	bl	10001dbc <_tx_thread_create>
10002e54:	e78a      	b.n	10002d6c <_txe_thread_create+0x1c>
                status =  TX_CALLER_ERROR;
10002e56:	2013      	movs	r0, #19
10002e58:	e7db      	b.n	10002e12 <_txe_thread_create+0xc2>
        status =  TX_THREAD_ERROR;
10002e5a:	200e      	movs	r0, #14
10002e5c:	e786      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_THREAD_ERROR;
10002e5e:	200e      	movs	r0, #14
10002e60:	e784      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_PTR_ERROR;
10002e62:	2003      	movs	r0, #3
10002e64:	e782      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_PTR_ERROR;
10002e66:	2003      	movs	r0, #3
10002e68:	e780      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_SIZE_ERROR;
10002e6a:	2005      	movs	r0, #5
10002e6c:	e77e      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_PRIORITY_ERROR;
10002e6e:	200f      	movs	r0, #15
10002e70:	e77c      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_THRESH_ERROR;
10002e72:	2018      	movs	r0, #24
10002e74:	e77a      	b.n	10002d6c <_txe_thread_create+0x1c>
            status =  TX_START_ERROR;
10002e76:	2010      	movs	r0, #16
10002e78:	e778      	b.n	10002d6c <_txe_thread_create+0x1c>
                    status =  TX_CALLER_ERROR;
10002e7a:	2013      	movs	r0, #19
    return(status);
10002e7c:	e776      	b.n	10002d6c <_txe_thread_create+0x1c>
10002e7e:	bf00      	nop
10002e80:	38001208 	stmdacc	r0, {r3, r9, ip}
10002e84:	380011b0 	stmdacc	r0, {r4, r5, r7, r8, ip}
10002e88:	380011ac 	stmdacc	r0, {r2, r3, r5, r7, r8, ip}
10002e8c:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10002e90:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}
10002e94:	38000004 	stmdacc	r0, {r2}

10002e98 <_getpid>:
10002e98:	2001      	movs	r0, #1
10002e9a:	4770      	bx	lr

10002e9c <_kill>:
10002e9c:	b508      	push	{r3, lr}
10002e9e:	f000 f997 	bl	100031d0 <__errno>
10002ea2:	2316      	movs	r3, #22
10002ea4:	6003      	str	r3, [r0, #0]
10002ea6:	f04f 30ff 	mov.w	r0, #4294967295
10002eaa:	bd08      	pop	{r3, pc}

10002eac <_exit>:
10002eac:	b508      	push	{r3, lr}
10002eae:	f04f 31ff 	mov.w	r1, #4294967295
10002eb2:	f7ff fff3 	bl	10002e9c <_kill>
10002eb6:	e7fe      	b.n	10002eb6 <_exit+0xa>

10002eb8 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10002eb8:	4815      	ldr	r0, [pc, #84]	; (10002f10 <BusFault_Handler+0x4>)
                msr      psp, r0
10002eba:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10002ebe:	4815      	ldr	r0, [pc, #84]	; (10002f14 <BusFault_Handler+0x8>)
                msr      msplim, r0
10002ec0:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10002ec4:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10002ec8:	f7fd fcf6 	bl	100008b8 <SystemInit>

                ldr      r4, =__copy_table_start__
10002ecc:	4c12      	ldr	r4, [pc, #72]	; (10002f18 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10002ece:	4d13      	ldr	r5, [pc, #76]	; (10002f1c <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10002ed0:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10002ed2:	da0a      	bge.n	10002eea <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10002ed4:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10002ed6:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10002ed8:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10002eda:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10002edc:	3b04      	subs	r3, #4
                ittt     ge
10002ede:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10002ee0:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10002ee2:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10002ee4:	e7fa      	bge.n	10002edc <Reset_Handler+0x24>

                adds     r4, #12
10002ee6:	340c      	adds	r4, #12
                b        .L_loop0
10002ee8:	e7f2      	b.n	10002ed0 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10002eea:	4b0d      	ldr	r3, [pc, #52]	; (10002f20 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10002eec:	4c0d      	ldr	r4, [pc, #52]	; (10002f24 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10002eee:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10002ef0:	da09      	bge.n	10002f06 <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
10002ef2:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10002ef4:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10002ef6:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10002ef8:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10002efa:	3a04      	subs	r2, #4
                itt      ge
10002efc:	bfa4      	itt	ge
                strge    r0, [r1, r2]
10002efe:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10002f00:	e7fb      	bge.n	10002efa <Reset_Handler+0x42>

                adds     r3, #8
10002f02:	3308      	adds	r3, #8
                b        .L_loop2
10002f04:	e7f3      	b.n	10002eee <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10002f06:	f7fd fcc3 	bl	10000890 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10002f0a:	e7fe      	b.n	10002f0a <Reset_Handler+0x52>

10002f0c <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10002f0c:	e7fe      	b.n	10002f0c <BusFault_Handler>
10002f0e:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
10002f12:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10002f16:	5070380f 	rsbspl	r3, r0, pc, lsl #16
                ldr      r4, =__copy_table_start__
10002f1a:	507c1000 	rsbspl	r1, ip, r0
                ldr      r5, =__copy_table_end__
10002f1e:	507c1000 	rsbspl	r1, ip, r0
                ldr      r3, =__zero_table_start__
10002f22:	507c1000 	rsbspl	r1, ip, r0
                ldr      r4, =__zero_table_end__
10002f26:	 	ldrbtlt	r1, [r2], -r0

10002f28 <_tx_initialize_low_level>:
    .thumb_func
.type _tx_initialize_low_level, function
_tx_initialize_low_level:

    /* Disable interrupts during ThreadX initialization.  */
    CPSID   i
10002f28:	b672      	cpsid	i

    /* Set base of available memory to end of non-initialised RAM area.  */
    LDR     r0, =_tx_initialize_unused_memory       // Build address of unused memory pointer
10002f2a:	482c      	ldr	r0, [pc, #176]	; (10002fdc <__tx_DBGHandler+0x4>)
    LDR     r1, =__RAM_segment_used_end__           // Build first free address
10002f2c:	492c      	ldr	r1, [pc, #176]	; (10002fe0 <__tx_DBGHandler+0x8>)
    ADD     r1, r1, #4                              //
10002f2e:	f101 0104 	add.w	r1, r1, #4
    STR     r1, [r0]                                // Setup first unused memory pointer
10002f32:	6001      	str	r1, [r0, #0]

    /* Setup Vector Table Offset Register.  */
    MOV     r0, #0xE000E000                         // Build address of NVIC registers
10002f34:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002f38:	492a      	ldr	r1, [pc, #168]	; (10002fe4 <__tx_DBGHandler+0xc>)
    STR     r1, [r0, #0xD08]                        // Set vector table address
10002f3a:	f8c0 1d08 	str.w	r1, [r0, #3336]	; 0xd08

    /* Enable the cycle count register.  */
    LDR     r0, =0xE0001000                         // Build address of DWT register
10002f3e:	482a      	ldr	r0, [pc, #168]	; (10002fe8 <__tx_DBGHandler+0x10>)
    LDR     r1, [r0]                                // Pickup the current value
10002f40:	6801      	ldr	r1, [r0, #0]
    ORR     r1, r1, #1                              // Set the CYCCNTENA bit
10002f42:	f041 0101 	orr.w	r1, r1, #1
    STR     r1, [r0]                                // Enable the cycle count register
10002f46:	6001      	str	r1, [r0, #0]

    /* Set system stack pointer from vector value.  */
    LDR     r0, =_tx_thread_system_stack_ptr        // Build address of system stack pointer
10002f48:	4828      	ldr	r0, [pc, #160]	; (10002fec <__tx_DBGHandler+0x14>)
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002f4a:	4926      	ldr	r1, [pc, #152]	; (10002fe4 <__tx_DBGHandler+0xc>)
    LDR     r1, [r1]                                // Pickup reset stack pointer
10002f4c:	6809      	ldr	r1, [r1, #0]
    STR     r1, [r0]                                // Save system stack pointer
10002f4e:	6001      	str	r1, [r0, #0]

    /* Configure SysTick.  */
    MOV     r0, #0xE000E000                         // Build address of NVIC registers
10002f50:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    LDR     r1, =SYSTICK_CYCLES
10002f54:	4926      	ldr	r1, [pc, #152]	; (10002ff0 <__tx_DBGHandler+0x18>)
    STR     r1, [r0, #0x14]                         // Setup SysTick Reload Value
10002f56:	6141      	str	r1, [r0, #20]
    MOV     r1, #0x7                                // Build SysTick Control Enable Value
10002f58:	f04f 0107 	mov.w	r1, #7
    STR     r1, [r0, #0x10]                         // Setup SysTick Control
10002f5c:	6101      	str	r1, [r0, #16]

    /* Configure handler priorities.  */
    LDR     r1, =0x00000000                         // Rsrv, UsgF, BusF, MemM
10002f5e:	f04f 0100 	mov.w	r1, #0
    STR     r1, [r0, #0xD18]                        // Setup System Handlers 4-7 Priority Registers
10002f62:	f8c0 1d18 	str.w	r1, [r0, #3352]	; 0xd18
    LDR     r1, =0xFF000000                         // SVCl, Rsrv, Rsrv, Rsrv
10002f66:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    STR     r1, [r0, #0xD1C]                        // Setup System Handlers 8-11 Priority Registers
10002f6a:	f8c0 1d1c 	str.w	r1, [r0, #3356]	; 0xd1c
                                                    // Note: SVC must be lowest priority, which is 0xFF
    LDR     r1, =0x40FF0000                         // SysT, PnSV, Rsrv, DbgM
10002f6e:	4921      	ldr	r1, [pc, #132]	; (10002ff4 <__tx_DBGHandler+0x1c>)
    STR     r1, [r0, #0xD20]                        // Setup System Handlers 12-15 Priority Registers
10002f70:	f8c0 1d20 	str.w	r1, [r0, #3360]	; 0xd20
                                                    // Note: PnSV must be lowest priority, which is 0xFF

    /* Return to caller.  */
    BX      lr
10002f74:	4770      	bx	lr
10002f76:	bf00      	nop

10002f78 <__tx_BadHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_BadHandler
    .thumb_func
.type __tx_BadHandler, function
__tx_BadHandler:
    B       __tx_BadHandler
10002f78:	f7ff bffe 	b.w	10002f78 <__tx_BadHandler>

10002f7c <__tx_IntHandler>:
    .thumb_func
.type __tx_IntHandler, function
__tx_IntHandler:
// VOID InterruptHandler (VOID)
// {
    PUSH    {r0,lr}     // Save LR (and dummy r0 to maintain stack alignment)
10002f7c:	b501      	push	{r0, lr}
    /* Do interrupt handler work here */
    /* .... */
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_exit              // Call the ISR exit function
#endif
    POP     {r0,lr}
10002f7e:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    BX      lr
10002f82:	4770      	bx	lr

10002f84 <SysTick_Handler>:
    .thumb_func
.type SysTick_Handler, function
SysTick_Handler:
// VOID TimerInterruptHandler (VOID)
// {
    PUSH    {r0,lr}     // Save LR (and dummy r0 to maintain stack alignment)
10002f84:	b501      	push	{r0, lr}
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_enter             // Call the ISR enter function
#endif
    BL      _tx_timer_interrupt
10002f86:	f000 f8c7 	bl	10003118 <_tx_timer_interrupt>
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_exit              // Call the ISR exit function
#endif
    POP     {r0,lr}
10002f8a:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    BX      lr
10002f8e:	4770      	bx	lr

10002f90 <HardFault_Handler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  HardFault_Handler
    .thumb_func
.type HardFault_Handler, function
HardFault_Handler:
    B       HardFault_Handler
10002f90:	f7ff bffe 	b.w	10002f90 <HardFault_Handler>

10002f94 <UsageFault_Handler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  UsageFault_Handler
    .thumb_func
.type UsageFault_Handler, function
UsageFault_Handler:
    CPSID   i                                       // Disable interrupts
10002f94:	b672      	cpsid	i
    // Check for stack limit fault
    LDR     r0, =0xE000ED28                         // CFSR address
10002f96:	4818      	ldr	r0, [pc, #96]	; (10002ff8 <__tx_DBGHandler+0x20>)
    LDR     r1,[r0]                                 // Pick up CFSR
10002f98:	6801      	ldr	r1, [r0, #0]
    TST     r1, #0x00100000                         // Check for Stack Overflow
10002f9a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000

10002f9e <_unhandled_usage_loop>:
_unhandled_usage_loop:
    BEQ     _unhandled_usage_loop                   // If not stack overflow then loop
10002f9e:	d0fe      	beq.n	10002f9e <_unhandled_usage_loop>

    // Handle stack overflow
    STR     r1, [r0]                                // Clear CFSR flag(s)
10002fa0:	6001      	str	r1, [r0, #0]

#ifdef __ARM_FP
    LDR     r0, =0xE000EF34                         // Cleanup FPU context: Load FPCCR address
10002fa2:	4816      	ldr	r0, [pc, #88]	; (10002ffc <__tx_DBGHandler+0x24>)
    LDR     r1, [r0]                                // Load FPCCR
10002fa4:	6801      	ldr	r1, [r0, #0]
    BIC     r1, r1, #1                              // Clear the lazy preservation active bit
10002fa6:	f021 0101 	bic.w	r1, r1, #1
    STR     r1, [r0]                                // Store the value
10002faa:	6001      	str	r1, [r0, #0]
#endif

    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10002fac:	4814      	ldr	r0, [pc, #80]	; (10003000 <__tx_DBGHandler+0x28>)
    LDR     r0,[r0]                                 // Pick up current thread pointer
10002fae:	6800      	ldr	r0, [r0, #0]
    PUSH    {r0,lr}                                 // Save LR (and r0 to maintain stack alignment)
10002fb0:	b501      	push	{r0, lr}
    BL      _tx_thread_stack_error_handler          // Call ThreadX/user handler
10002fb2:	f7ff f84b 	bl	1000204c <_tx_thread_stack_error_handler>
    POP     {r0,lr}                                 // Restore LR and dummy reg
10002fb6:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    PUSH    {r0, lr}                                // Save LR (and r0 just for alignment)
    BL      _tx_execution_thread_exit               // Call the thread exit function
    POP     {r0, lr}                                // Recover LR
#endif

    MOV     r1, #0                                  // Build NULL value
10002fba:	f04f 0100 	mov.w	r1, #0
    LDR     r0, =_tx_thread_current_ptr             // Pickup address of current thread pointer
10002fbe:	4810      	ldr	r0, [pc, #64]	; (10003000 <__tx_DBGHandler+0x28>)
    STR     r1, [r0]                                // Clear current thread pointer
10002fc0:	6001      	str	r1, [r0, #0]

    // Return from UsageFault_Handler exception
    LDR     r0, =0xE000ED04                         // Load ICSR
10002fc2:	4810      	ldr	r0, [pc, #64]	; (10003004 <__tx_DBGHandler+0x2c>)
    LDR     r1, =0x10000000                         // Set PENDSVSET bit
10002fc4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
    STR     r1, [r0]                                // Store ICSR
10002fc8:	6001      	str	r1, [r0, #0]
    DSB                                             // Wait for memory access to complete
10002fca:	f3bf 8f4f 	dsb	sy
    CPSIE   i                                       // Enable interrupts
10002fce:	b662      	cpsie	i
    BX      lr                                      // Return from exception
10002fd0:	4770      	bx	lr
10002fd2:	bf00      	nop

10002fd4 <__tx_NMIHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_NMIHandler
    .thumb_func
.type __tx_NMIHandler, function
__tx_NMIHandler:
    B       __tx_NMIHandler
10002fd4:	f7ff bffe 	b.w	10002fd4 <__tx_NMIHandler>

10002fd8 <__tx_DBGHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_DBGHandler
    .thumb_func
.type __tx_DBGHandler, function
__tx_DBGHandler:
    B       __tx_DBGHandler
10002fd8:	f7ff bffe 	b.w	10002fd8 <__tx_DBGHandler>
    LDR     r0, =_tx_initialize_unused_memory       // Build address of unused memory pointer
10002fdc:	380011a0 	stmdacc	r0, {r5, r7, r8, ip}
    LDR     r1, =__RAM_segment_used_end__           // Build first free address
10002fe0:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002fe4:	10000000 	andne	r0, r0, r0
    LDR     r0, =0xE0001000                         // Build address of DWT register
10002fe8:	e0001000 	and	r1, r0, r0
    LDR     r0, =_tx_thread_system_stack_ptr        // Build address of system stack pointer
10002fec:	38001290 	stmdacc	r0, {r4, r7, r9, ip}
    LDR     r1, =SYSTICK_CYCLES
10002ff0:	0002903f 	andeq	r9, r2, pc, lsr r0
    LDR     r1, =0x40FF0000                         // SysT, PnSV, Rsrv, DbgM
10002ff4:	40ff0000 	rscsmi	r0, pc, r0
    LDR     r0, =0xE000ED28                         // CFSR address
10002ff8:	e000ed28 	and	lr, r0, r8, lsr #26
    LDR     r0, =0xE000EF34                         // Cleanup FPU context: Load FPCCR address
10002ffc:	e000ef34 	and	lr, r0, r4, lsr pc
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10003000:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
    LDR     r0, =0xE000ED04                         // Load ICSR
10003004:	e000ed04 	and	lr, r0, r4, lsl #26

10003008 <_tx_thread_schedule>:
    /* This function should only ever be called on Cortex-M
       from the first schedule request. Subsequent scheduling occurs
       from the PendSV handling routine below. */

    /* Clear the preempt-disable flag to enable rescheduling after initialization on Cortex-M targets.  */
    MOV     r0, #0                                  // Build value for TX_FALSE
10003008:	f04f 0000 	mov.w	r0, #0
    LDR     r2, =_tx_thread_preempt_disable         // Build address of preempt disable flag
1000300c:	4a2e      	ldr	r2, [pc, #184]	; (100030c8 <_tx_vfp_access+0x8>)
    STR     r0, [r2, #0]                            // Clear preempt disable flag
1000300e:	6010      	str	r0, [r2, #0]

#ifdef __ARM_FP
    /* Clear CONTROL.FPCA bit so VFP registers aren't unnecessarily stacked.  */
    MRS     r0, CONTROL                             // Pickup current CONTROL register
10003010:	f3ef 8014 	mrs	r0, CONTROL
    BIC     r0, r0, #4                              // Clear the FPCA bit
10003014:	f020 0004 	bic.w	r0, r0, #4
    MSR     CONTROL, r0                             // Setup new CONTROL register
10003018:	f380 8814 	msr	CONTROL, r0
#endif

    /* Enable interrupts */
    CPSIE   i
1000301c:	b662      	cpsie	i

    /* Enter the scheduler for the first time.  */
    MOV     r0, #0x10000000                         // Load PENDSVSET bit
1000301e:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
    MOV     r1, #0xE000E000                         // Load NVIC base
10003022:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
    STR     r0, [r1, #0xD04]                        // Set PENDSVBIT in ICSR
10003026:	f8c1 0d04 	str.w	r0, [r1, #3332]	; 0xd04
    DSB                                             // Complete all memory accesses
1000302a:	f3bf 8f4f 	dsb	sy
    ISB                                             // Flush pipeline
1000302e:	f3bf 8f6f 	isb	sy

10003032 <__tx_wait_here>:

    /* Wait here for the PendSV to take place.  */

__tx_wait_here:
    B       __tx_wait_here                          // Wait for the PendSV to happen
10003032:	e7fe      	b.n	10003032 <__tx_wait_here>

10003034 <PendSV_Handler>:
#else
    CPSIE   i                                       // Enable interrupts
#endif  /* TX_PORT_USE_BASEPRI */
#endif  /* EXECUTION PROFILE */

    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10003034:	4825      	ldr	r0, [pc, #148]	; (100030cc <_tx_vfp_access+0xc>)
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
10003036:	4a26      	ldr	r2, [pc, #152]	; (100030d0 <_tx_vfp_access+0x10>)
    MOV     r3, #0                                  // Build NULL value
10003038:	f04f 0300 	mov.w	r3, #0
    LDR     r1, [r0]                                // Pickup current thread pointer
1000303c:	6801      	ldr	r1, [r0, #0]

    /* Determine if there is a current thread to finish preserving.  */

    CBZ     r1, __tx_ts_new                         // If NULL, skip preservation
1000303e:	b191      	cbz	r1, 10003066 <__tx_ts_new>

    /* Recover PSP and preserve current thread context.  */

    STR     r3, [r0]                                // Set _tx_thread_current_ptr to NULL
10003040:	6003      	str	r3, [r0, #0]
    MRS     r12, PSP                                // Pickup PSP pointer (thread's stack pointer)
10003042:	f3ef 8c09 	mrs	ip, PSP
    STMDB   r12!, {r4-r11}                          // Save its remaining registers
10003046:	e92c 0ff0 	stmdb	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
#ifdef __ARM_FP
    TST     LR, #0x10                               // Determine if the VFP extended frame is present
1000304a:	f01e 0f10 	tst.w	lr, #16
    BNE     _skip_vfp_save
1000304e:	d101      	bne.n	10003054 <_skip_vfp_save>
    VSTMDB  r12!,{s16-s31}                          // Yes, save additional VFP registers
10003050:	ed2c 8a10 	vstmdb	ip!, {s16-s31}

10003054 <_skip_vfp_save>:
_skip_vfp_save:
#endif
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
10003054:	4c1f      	ldr	r4, [pc, #124]	; (100030d4 <_tx_vfp_access+0x14>)
    STMDB   r12!, {LR}                              // Save LR on the stack
10003056:	f84c ed04 	str.w	lr, [ip, #-4]!
    STR     r12, [r1, #8]                           // Save the thread stack pointer
1000305a:	f8c1 c008 	str.w	ip, [r1, #8]
_skip_secure_save:
#endif

    /* Determine if time-slice is active. If it isn't, skip time handling processing.  */

    LDR     r5, [r4]                                // Pickup current time-slice
1000305e:	6825      	ldr	r5, [r4, #0]
    CBZ     r5, __tx_ts_new                         // If not active, skip processing
10003060:	b10d      	cbz	r5, 10003066 <__tx_ts_new>

    /* Time-slice is active, save the current thread's time-slice and clear the global time-slice variable.  */

    STR     r5, [r1, #24]                           // Save current time-slice
10003062:	618d      	str	r5, [r1, #24]

    /* Clear the global time-slice.  */

    STR     r3, [r4]                                // Clear time-slice
10003064:	6023      	str	r3, [r4, #0]

10003066 <__tx_ts_new>:

#ifdef TX_PORT_USE_BASEPRI
    LDR     r1, =TX_PORT_BASEPRI                    // Mask interrupt priorities =< TX_PORT_BASEPRI
    MSR     BASEPRI, r1
#else
    CPSID   i                                       // Disable interrupts
10003066:	b672      	cpsid	i
#endif
    LDR     r1, [r2]                                // Is there another thread ready to execute?
10003068:	6811      	ldr	r1, [r2, #0]
    CBZ     r1, __tx_ts_wait                        // No, skip to the wait processing
1000306a:	b1d1      	cbz	r1, 100030a2 <__tx_ts_wait>

    /* Yes, another thread is ready for else, make the current thread the new thread.  */

    STR     r1, [r0]                                // Setup the current thread pointer to the new thread
1000306c:	6001      	str	r1, [r0, #0]
#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
1000306e:	b662      	cpsie	i

10003070 <__tx_ts_restore>:
#endif

    /* Increment the thread run count.  */

__tx_ts_restore:
    LDR     r7, [r1, #4]                            // Pickup the current thread run count
10003070:	684f      	ldr	r7, [r1, #4]
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
10003072:	4c18      	ldr	r4, [pc, #96]	; (100030d4 <_tx_vfp_access+0x14>)
    LDR     r5, [r1, #24]                           // Pickup thread's current time-slice
10003074:	698d      	ldr	r5, [r1, #24]
    ADD     r7, r7, #1                              // Increment the thread run count
10003076:	f107 0701 	add.w	r7, r7, #1
    STR     r7, [r1, #4]                            // Store the new run count
1000307a:	604f      	str	r7, [r1, #4]

    /* Setup global time-slice with thread's current time-slice.  */

    STR     r5, [r4]                                // Setup global time-slice
1000307c:	6025      	str	r5, [r4, #0]
    POP     {r0,r1}                                 // Restore r1 (and dummy r0)
_skip_secure_restore:
#endif

    /* Restore the thread context and PSP.  */
    LDR     r12, [r1, #12]                          // Get stack start
1000307e:	f8d1 c00c 	ldr.w	ip, [r1, #12]
    MSR     PSPLIM, r12                             // Set stack limit
10003082:	f38c 880b 	msr	PSPLIM, ip
    LDR     r12, [r1, #8]                           // Pickup thread's stack pointer
10003086:	f8d1 c008 	ldr.w	ip, [r1, #8]
    LDMIA   r12!, {LR}                              // Pickup LR
1000308a:	f85c eb04 	ldr.w	lr, [ip], #4
#ifdef __ARM_FP
    TST     LR, #0x10                               // Determine if the VFP extended frame is present
1000308e:	f01e 0f10 	tst.w	lr, #16
    BNE     _skip_vfp_restore                       // If not, skip VFP restore
10003092:	d101      	bne.n	10003098 <_skip_vfp_restore>
    VLDMIA  r12!, {s16-s31}                         // Yes, restore additional VFP registers
10003094:	ecbc 8a10 	vldmia	ip!, {s16-s31}

10003098 <_skip_vfp_restore>:
_skip_vfp_restore:
#endif
    LDMIA   r12!, {r4-r11}                          // Recover thread's registers
10003098:	e8bc 0ff0 	ldmia.w	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
    MSR     PSP, r12                                // Setup the thread's stack pointer
1000309c:	f38c 8809 	msr	PSP, ip

    BX      lr                                      // Return to thread!
100030a0:	4770      	bx	lr

100030a2 <__tx_ts_wait>:
__tx_ts_wait:
#ifdef TX_PORT_USE_BASEPRI
    LDR     r1, =TX_PORT_BASEPRI                    // Mask interrupt priorities =< TX_PORT_BASEPRI
    MSR     BASEPRI, r1
#else
    CPSID   i                                       // Disable interrupts
100030a2:	b672      	cpsid	i
#endif
    LDR     r1, [r2]                                // Pickup the next thread to execute pointer
100030a4:	6811      	ldr	r1, [r2, #0]
    STR     r1, [r0]                                // Store it in the current pointer
100030a6:	6001      	str	r1, [r0, #0]
    CBNZ    r1, __tx_ts_ready                       // If non-NULL, a new thread is ready!
100030a8:	b909      	cbnz	r1, 100030ae <__tx_ts_ready>

#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
100030aa:	b662      	cpsie	i
#endif
    B       __tx_ts_wait                            // Loop to continue waiting
100030ac:	e7f9      	b.n	100030a2 <__tx_ts_wait>

100030ae <__tx_ts_ready>:

    /* At this point, we have a new thread ready to go. Clear any newly pended PendSV - since we are
       already in the handler!  */
__tx_ts_ready:
    MOV     r7, #0x08000000                         // Build clear PendSV value
100030ae:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    MOV     r8, #0xE000E000                         // Build base NVIC address
100030b2:	f04f 28e0 	mov.w	r8, #3758153728	; 0xe000e000
    STR     r7, [r8, #0xD04]                        // Clear any PendSV
100030b6:	f8c8 7d04 	str.w	r7, [r8, #3332]	; 0xd04
    /* Re-enable interrupts and restore new thread.  */
#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
100030ba:	b662      	cpsie	i
#endif
    B       __tx_ts_restore                         // Restore the thread
100030bc:	e7d8      	b.n	10003070 <__tx_ts_restore>
100030be:	bf00      	nop

100030c0 <_tx_vfp_access>:
    .global  _tx_vfp_access
    .thumb_func
.type _tx_vfp_access, function
_tx_vfp_access:
#if TX_ENABLE_FPU_SUPPORT
    VMOV.F32 s0, s0                                 // Simply access the VFP
100030c0:	eeb0 0a40 	vmov.f32	s0, s0
#endif
    BX       lr                                     // Return to caller
100030c4:	4770      	bx	lr
100030c6:	12080000 	andne	r0, r8, #0
    LDR     r2, =_tx_thread_preempt_disable         // Build address of preempt disable flag
100030ca:	11b43800 			; <UNDEFINED> instruction: 0x11b43800
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
100030ce:	11b83800 			; <UNDEFINED> instruction: 0x11b83800
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
100030d2:	241c3800 	ldrcs	r3, [ip], #-2048	; 0xfffff800
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
100030d6:	 	stmdbvs	r2, {fp, ip, sp}

100030d8 <_tx_thread_stack_build>:
                       pc          Initial value for pc
                       xPSR        Initial value for xPSR

    Stack Bottom: (higher memory address)  */

    LDR     r2, [r0, #16]                           // Pickup end of stack area
100030d8:	6902      	ldr	r2, [r0, #16]
    BIC     r2, r2, #0x7                            // Align frame for 8-byte alignment
100030da:	f022 0207 	bic.w	r2, r2, #7
    SUB     r2, r2, #68                             // Subtract frame size
100030de:	f1a2 0244 	sub.w	r2, r2, #68	; 0x44
#ifdef TX_SINGLE_MODE_SECURE
    LDR     r3, =0xFFFFFFFD                         // Build initial LR value for secure mode
100030e2:	f06f 0302 	mvn.w	r3, #2
#else
    LDR     r3, =0xFFFFFFBC                         // Build initial LR value to return to non-secure PSP
#endif
    STR     r3, [r2, #0]                            // Save on the stack
100030e6:	6013      	str	r3, [r2, #0]

    /* Actually build the stack frame.  */

    MOV     r3, #0                                  // Build initial register value
100030e8:	f04f 0300 	mov.w	r3, #0
    STR     r3, [r2, #4]                            // Store initial r4
100030ec:	6053      	str	r3, [r2, #4]
    STR     r3, [r2, #8]                            // Store initial r5
100030ee:	6093      	str	r3, [r2, #8]
    STR     r3, [r2, #12]                           // Store initial r6
100030f0:	60d3      	str	r3, [r2, #12]
    STR     r3, [r2, #16]                           // Store initial r7
100030f2:	6113      	str	r3, [r2, #16]
    STR     r3, [r2, #20]                           // Store initial r8
100030f4:	6153      	str	r3, [r2, #20]
    STR     r3, [r2, #24]                           // Store initial r9
100030f6:	6193      	str	r3, [r2, #24]
    STR     r3, [r2, #28]                           // Store initial r10
100030f8:	61d3      	str	r3, [r2, #28]
    STR     r3, [r2, #32]                           // Store initial r11
100030fa:	6213      	str	r3, [r2, #32]

    /* Hardware stack follows.  */

    STR     r3, [r2, #36]                           // Store initial r0
100030fc:	6253      	str	r3, [r2, #36]	; 0x24
    STR     r3, [r2, #40]                           // Store initial r1
100030fe:	6293      	str	r3, [r2, #40]	; 0x28
    STR     r3, [r2, #44]                           // Store initial r2
10003100:	62d3      	str	r3, [r2, #44]	; 0x2c
    STR     r3, [r2, #48]                           // Store initial r3
10003102:	6313      	str	r3, [r2, #48]	; 0x30
    STR     r3, [r2, #52]                           // Store initial r12
10003104:	6353      	str	r3, [r2, #52]	; 0x34
    MOV     r3, #0xFFFFFFFF                         // Poison EXC_RETURN value
10003106:	f04f 33ff 	mov.w	r3, #4294967295
    STR     r3, [r2, #56]                           // Store initial lr
1000310a:	6393      	str	r3, [r2, #56]	; 0x38
    STR     r1, [r2, #60]                           // Store initial pc
1000310c:	63d1      	str	r1, [r2, #60]	; 0x3c
    MOV     r3, #0x01000000                         // Only T-bit need be set
1000310e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    STR     r3, [r2, #64]                           // Store initial xPSR
10003112:	6413      	str	r3, [r2, #64]	; 0x40

    /* Setup stack pointer.  */
    // thread_ptr -> tx_thread_stack_ptr =  r2;

    STR     r2, [r0, #8]                            // Save stack pointer in thread's
10003114:	6082      	str	r2, [r0, #8]
                                                    //   control block
    BX      lr                                      // Return to caller
10003116:	4770      	bx	lr

10003118 <_tx_timer_interrupt>:
       for use.  */

    /* Increment the system clock.  */
    // _tx_timer_system_clock++;

    LDR     r1, =_tx_timer_system_clock             // Pickup address of system clock
10003118:	4922      	ldr	r1, [pc, #136]	; (100031a4 <__tx_timer_nothing_expired+0x8>)
    LDR     r0, [r1, #0]                            // Pickup system clock
1000311a:	6808      	ldr	r0, [r1, #0]
    ADD     r0, r0, #1                              // Increment system clock
1000311c:	f100 0001 	add.w	r0, r0, #1
    STR     r0, [r1, #0]                            // Store new system clock
10003120:	6008      	str	r0, [r1, #0]

    /* Test for time-slice expiration.  */
    // if (_tx_timer_time_slice)
    // {

    LDR     r3, =_tx_timer_time_slice               // Pickup address of time-slice
10003122:	4b21      	ldr	r3, [pc, #132]	; (100031a8 <__tx_timer_nothing_expired+0xc>)
    LDR     r2, [r3, #0]                            // Pickup time-slice
10003124:	681a      	ldr	r2, [r3, #0]
    CBZ     r2, __tx_timer_no_time_slice            // Is it non-active?
10003126:	b13a      	cbz	r2, 10003138 <__tx_timer_no_time_slice>
                                                    // Yes, skip time-slice processing

       /* Decrement the time_slice.  */
       // _tx_timer_time_slice--;

    SUB     r2, r2, #1                              // Decrement the time-slice
10003128:	f1a2 0201 	sub.w	r2, r2, #1
    STR     r2, [r3, #0]                            // Store new time-slice value
1000312c:	601a      	str	r2, [r3, #0]

       /* Check for expiration.  */
       // if (__tx_timer_time_slice == 0)

    CBNZ    r2, __tx_timer_no_time_slice            // Has it expired?
1000312e:	b91a      	cbnz	r2, 10003138 <__tx_timer_no_time_slice>
                                                    // No, skip expiration processing

       /* Set the time-slice expired flag.  */
       // _tx_timer_expired_time_slice =  TX_TRUE;

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup address of expired flag
10003130:	4b1e      	ldr	r3, [pc, #120]	; (100031ac <__tx_timer_nothing_expired+0x10>)
    MOV     r0, #1                                  // Build expired value
10003132:	f04f 0001 	mov.w	r0, #1
    STR     r0, [r3, #0]                            // Set time-slice expiration flag
10003136:	6018      	str	r0, [r3, #0]

10003138 <__tx_timer_no_time_slice>:

    /* Test for timer expiration.  */
    // if (*_tx_timer_current_ptr)
    // {

    LDR     r1, =_tx_timer_current_ptr              // Pickup current timer pointer address
10003138:	491d      	ldr	r1, [pc, #116]	; (100031b0 <__tx_timer_nothing_expired+0x14>)
    LDR     r0, [r1, #0]                            // Pickup current timer
1000313a:	6808      	ldr	r0, [r1, #0]
    LDR     r2, [r0, #0]                            // Pickup timer list entry
1000313c:	6802      	ldr	r2, [r0, #0]
    CBZ     r2, __tx_timer_no_timer                 // Is there anything in the list?
1000313e:	b122      	cbz	r2, 1000314a <__tx_timer_no_timer>
                                                    // No, just increment the timer

        /* Set expiration flag.  */
        // _tx_timer_expired =  TX_TRUE;

    LDR     r3, =_tx_timer_expired                  // Pickup expiration flag address
10003140:	4b1c      	ldr	r3, [pc, #112]	; (100031b4 <__tx_timer_nothing_expired+0x18>)
    MOV     r2, #1                                  // Build expired value
10003142:	f04f 0201 	mov.w	r2, #1
    STR     r2, [r3, #0]                            // Set expired flag
10003146:	601a      	str	r2, [r3, #0]
    B       __tx_timer_done                         // Finished timer processing
10003148:	e008      	b.n	1000315c <__tx_timer_done>

1000314a <__tx_timer_no_timer>:
__tx_timer_no_timer:

        /* No timer expired, increment the timer pointer.  */
        // _tx_timer_current_ptr++;

    ADD     r0, r0, #4                              // Move to next timer
1000314a:	f100 0004 	add.w	r0, r0, #4

        /* Check for wrap-around.  */
        // if (_tx_timer_current_ptr == _tx_timer_list_end)

    LDR     r3, =_tx_timer_list_end                 // Pickup addr of timer list end
1000314e:	4b1a      	ldr	r3, [pc, #104]	; (100031b8 <__tx_timer_nothing_expired+0x1c>)
    LDR     r2, [r3, #0]                            // Pickup list end
10003150:	681a      	ldr	r2, [r3, #0]
    CMP     r0, r2                                  // Are we at list end?
10003152:	4290      	cmp	r0, r2
    BNE     __tx_timer_skip_wrap                    // No, skip wrap-around logic
10003154:	d101      	bne.n	1000315a <__tx_timer_skip_wrap>

            /* Wrap to beginning of list.  */
            // _tx_timer_current_ptr =  _tx_timer_list_start;

    LDR     r3, =_tx_timer_list_start               // Pickup addr of timer list start
10003156:	4b19      	ldr	r3, [pc, #100]	; (100031bc <__tx_timer_nothing_expired+0x20>)
    LDR     r0, [r3, #0]                            // Set current pointer to list start
10003158:	6818      	ldr	r0, [r3, #0]

1000315a <__tx_timer_skip_wrap>:

__tx_timer_skip_wrap:

    STR     r0, [r1, #0]                            // Store new current timer pointer
1000315a:	6008      	str	r0, [r1, #0]

1000315c <__tx_timer_done>:

    /* See if anything has expired.  */
    // if ((_tx_timer_expired_time_slice) || (_tx_timer_expired))
    // {

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup addr of expired flag
1000315c:	4b13      	ldr	r3, [pc, #76]	; (100031ac <__tx_timer_nothing_expired+0x10>)
    LDR     r2, [r3, #0]                            // Pickup time-slice expired flag
1000315e:	681a      	ldr	r2, [r3, #0]
    CBNZ    r2, __tx_something_expired              // Did a time-slice expire?
10003160:	b912      	cbnz	r2, 10003168 <__tx_something_expired>
                                                    // If non-zero, time-slice expired
    LDR     r1, =_tx_timer_expired                  // Pickup addr of other expired flag
10003162:	4914      	ldr	r1, [pc, #80]	; (100031b4 <__tx_timer_nothing_expired+0x18>)
    LDR     r0, [r1, #0]                            // Pickup timer expired flag
10003164:	6808      	ldr	r0, [r1, #0]
    CBZ     r0, __tx_timer_nothing_expired          // Did a timer expire?
10003166:	b1c8      	cbz	r0, 1000319c <__tx_timer_nothing_expired>

10003168 <__tx_something_expired>:
                                                    // No, nothing expired

__tx_something_expired:

    PUSH    {r0, lr}                                // Save the lr register on the stack
10003168:	b501      	push	{r0, lr}

    /* Did a timer expire?  */
    // if (_tx_timer_expired)
    // {

    LDR     r1, =_tx_timer_expired                  // Pickup addr of expired flag
1000316a:	4912      	ldr	r1, [pc, #72]	; (100031b4 <__tx_timer_nothing_expired+0x18>)
    LDR     r0, [r1, #0]                            // Pickup timer expired flag
1000316c:	6808      	ldr	r0, [r1, #0]
    CBZ     r0, __tx_timer_dont_activate            // Check for timer expiration
1000316e:	b108      	cbz	r0, 10003174 <__tx_timer_dont_activate>
                                                    // If not set, skip timer activation

        /* Process timer expiration.  */
        // _tx_timer_expiration_process();

    BL      _tx_timer_expiration_process            // Call the timer expiration handling routine
10003170:	f7ff fbb0 	bl	100028d4 <_tx_timer_expiration_process>

10003174 <__tx_timer_dont_activate>:

    /* Did time slice expire?  */
    // if (_tx_timer_expired_time_slice)
    // {

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup addr of time-slice expired
10003174:	4b0d      	ldr	r3, [pc, #52]	; (100031ac <__tx_timer_nothing_expired+0x10>)
    LDR     r2, [r3, #0]                            // Pickup the actual flag
10003176:	681a      	ldr	r2, [r3, #0]
    CBZ     r2, __tx_timer_not_ts_expiration        // See if the flag is set
10003178:	b172      	cbz	r2, 10003198 <__tx_timer_not_ts_expiration>
                                                    // No, skip time-slice processing

        /* Time slice interrupted thread.  */
        // _tx_thread_time_slice();

    BL      _tx_thread_time_slice                   // Call time-slice processing
1000317a:	f7ff fad1 	bl	10002720 <_tx_thread_time_slice>
    LDR     r0, =_tx_thread_preempt_disable         // Build address of preempt disable flag
1000317e:	4810      	ldr	r0, [pc, #64]	; (100031c0 <__tx_timer_nothing_expired+0x24>)
    LDR     r1, [r0]                                // Is the preempt disable flag set?
10003180:	6801      	ldr	r1, [r0, #0]
    CBNZ    r1, __tx_timer_skip_time_slice          // Yes, skip the PendSV logic
10003182:	b949      	cbnz	r1, 10003198 <__tx_timer_not_ts_expiration>
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10003184:	480f      	ldr	r0, [pc, #60]	; (100031c4 <__tx_timer_nothing_expired+0x28>)
    LDR     r1, [r0]                                // Pickup the current thread pointer
10003186:	6801      	ldr	r1, [r0, #0]
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
10003188:	4a0f      	ldr	r2, [pc, #60]	; (100031c8 <__tx_timer_nothing_expired+0x2c>)
    LDR     r3, [r2]                                // Pickup the execute thread pointer
1000318a:	6813      	ldr	r3, [r2, #0]
    LDR     r0, =0xE000ED04                         // Build address of control register
1000318c:	480f      	ldr	r0, [pc, #60]	; (100031cc <__tx_timer_nothing_expired+0x30>)
    LDR     r2, =0x10000000                         // Build value for PendSV bit
1000318e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    CMP     r1, r3                                  // Are they the same?
10003192:	4299      	cmp	r1, r3
    BEQ     __tx_timer_skip_time_slice              // If the same, there was no time-slice performed
10003194:	d000      	beq.n	10003198 <__tx_timer_not_ts_expiration>
    STR     r2, [r0]                                // Not the same, issue the PendSV for preemption
10003196:	6002      	str	r2, [r0, #0]

10003198 <__tx_timer_not_ts_expiration>:
__tx_timer_skip_time_slice:
    // }

__tx_timer_not_ts_expiration:

    POP     {r0, lr}                                // Recover lr register (r0 is just there for
10003198:	e8bd 4001 	ldmia.w	sp!, {r0, lr}

1000319c <__tx_timer_nothing_expired>:

    // }

__tx_timer_nothing_expired:

    DSB                                             // Complete all memory access
1000319c:	f3bf 8f4f 	dsb	sy
    BX      lr                                      // Return to caller
100031a0:	4770      	bx	lr
100031a2:	13440000 	movtne	r0, #16384	; 0x4000
    LDR     r1, =_tx_timer_system_clock             // Pickup address of system clock
100031a6:	241c3800 	ldrcs	r3, [ip], #-2048	; 0xfffff800
    LDR     r3, =_tx_timer_time_slice               // Pickup address of time-slice
100031aa:	129c3800 	addsne	r3, ip, #0, 16
    LDR     r3, =_tx_timer_expired_time_slice       // Pickup address of expired flag
100031ae:	12943800 	addsne	r3, r4, #0, 16
    LDR     r1, =_tx_timer_current_ptr              // Pickup current timer pointer address
100031b2:	12983800 	addsne	r3, r8, #0, 16
    LDR     r3, =_tx_timer_expired                  // Pickup expiration flag address
100031b6:	13243800 			; <UNDEFINED> instruction: 0x13243800
    LDR     r3, =_tx_timer_list_end                 // Pickup addr of timer list end
100031ba:	13283800 			; <UNDEFINED> instruction: 0x13283800
    LDR     r3, =_tx_timer_list_start               // Pickup addr of timer list start
100031be:	12083800 	andne	r3, r8, #0, 16
    LDR     r0, =_tx_thread_preempt_disable         // Build address of preempt disable flag
100031c2:	11b43800 			; <UNDEFINED> instruction: 0x11b43800
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
100031c6:	11b83800 			; <UNDEFINED> instruction: 0x11b83800
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
100031ca:	ed043800 	stc	8, cr3, [r4, #-0]
    LDR     r0, =0xE000ED04                         // Build address of control register
100031ce:	 	blmi	1007b1d6 <__copy_table_end__+0x7615a>

100031d0 <__errno>:
100031d0:	4b01      	ldr	r3, [pc, #4]	; (100031d8 <__errno+0x8>)
100031d2:	6818      	ldr	r0, [r3, #0]
100031d4:	4770      	bx	lr
100031d6:	bf00      	nop
100031d8:	38000008 	stmdacc	r0, {r3}

100031dc <memset>:
100031dc:	4402      	add	r2, r0
100031de:	4603      	mov	r3, r0
100031e0:	4293      	cmp	r3, r2
100031e2:	d100      	bne.n	100031e6 <memset+0xa>
100031e4:	4770      	bx	lr
100031e6:	f803 1b01 	strb.w	r1, [r3], #1
100031ea:	e7f9      	b.n	100031e0 <memset+0x4>

100031ec <__aeabi_drsub>:
100031ec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
100031f0:	e002      	b.n	100031f8 <__adddf3>
100031f2:	bf00      	nop

100031f4 <__aeabi_dsub>:
100031f4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

100031f8 <__adddf3>:
100031f8:	b530      	push	{r4, r5, lr}
100031fa:	ea4f 0441 	mov.w	r4, r1, lsl #1
100031fe:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003202:	ea94 0f05 	teq	r4, r5
10003206:	bf08      	it	eq
10003208:	ea90 0f02 	teqeq	r0, r2
1000320c:	bf1f      	itttt	ne
1000320e:	ea54 0c00 	orrsne.w	ip, r4, r0
10003212:	ea55 0c02 	orrsne.w	ip, r5, r2
10003216:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1000321a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1000321e:	f000 80e2 	beq.w	100033e6 <__adddf3+0x1ee>
10003222:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003226:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1000322a:	bfb8      	it	lt
1000322c:	426d      	neglt	r5, r5
1000322e:	dd0c      	ble.n	1000324a <__adddf3+0x52>
10003230:	442c      	add	r4, r5
10003232:	ea80 0202 	eor.w	r2, r0, r2
10003236:	ea81 0303 	eor.w	r3, r1, r3
1000323a:	ea82 0000 	eor.w	r0, r2, r0
1000323e:	ea83 0101 	eor.w	r1, r3, r1
10003242:	ea80 0202 	eor.w	r2, r0, r2
10003246:	ea81 0303 	eor.w	r3, r1, r3
1000324a:	2d36      	cmp	r5, #54	; 0x36
1000324c:	bf88      	it	hi
1000324e:	bd30      	pophi	{r4, r5, pc}
10003250:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003254:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003258:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
1000325c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003260:	d002      	beq.n	10003268 <__adddf3+0x70>
10003262:	4240      	negs	r0, r0
10003264:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003268:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
1000326c:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003270:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003274:	d002      	beq.n	1000327c <__adddf3+0x84>
10003276:	4252      	negs	r2, r2
10003278:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1000327c:	ea94 0f05 	teq	r4, r5
10003280:	f000 80a7 	beq.w	100033d2 <__adddf3+0x1da>
10003284:	f1a4 0401 	sub.w	r4, r4, #1
10003288:	f1d5 0e20 	rsbs	lr, r5, #32
1000328c:	db0d      	blt.n	100032aa <__adddf3+0xb2>
1000328e:	fa02 fc0e 	lsl.w	ip, r2, lr
10003292:	fa22 f205 	lsr.w	r2, r2, r5
10003296:	1880      	adds	r0, r0, r2
10003298:	f141 0100 	adc.w	r1, r1, #0
1000329c:	fa03 f20e 	lsl.w	r2, r3, lr
100032a0:	1880      	adds	r0, r0, r2
100032a2:	fa43 f305 	asr.w	r3, r3, r5
100032a6:	4159      	adcs	r1, r3
100032a8:	e00e      	b.n	100032c8 <__adddf3+0xd0>
100032aa:	f1a5 0520 	sub.w	r5, r5, #32
100032ae:	f10e 0e20 	add.w	lr, lr, #32
100032b2:	2a01      	cmp	r2, #1
100032b4:	fa03 fc0e 	lsl.w	ip, r3, lr
100032b8:	bf28      	it	cs
100032ba:	f04c 0c02 	orrcs.w	ip, ip, #2
100032be:	fa43 f305 	asr.w	r3, r3, r5
100032c2:	18c0      	adds	r0, r0, r3
100032c4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
100032c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100032cc:	d507      	bpl.n	100032de <__adddf3+0xe6>
100032ce:	f04f 0e00 	mov.w	lr, #0
100032d2:	f1dc 0c00 	rsbs	ip, ip, #0
100032d6:	eb7e 0000 	sbcs.w	r0, lr, r0
100032da:	eb6e 0101 	sbc.w	r1, lr, r1
100032de:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
100032e2:	d31b      	bcc.n	1000331c <__adddf3+0x124>
100032e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
100032e8:	d30c      	bcc.n	10003304 <__adddf3+0x10c>
100032ea:	0849      	lsrs	r1, r1, #1
100032ec:	ea5f 0030 	movs.w	r0, r0, rrx
100032f0:	ea4f 0c3c 	mov.w	ip, ip, rrx
100032f4:	f104 0401 	add.w	r4, r4, #1
100032f8:	ea4f 5244 	mov.w	r2, r4, lsl #21
100032fc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003300:	f080 809a 	bcs.w	10003438 <__adddf3+0x240>
10003304:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003308:	bf08      	it	eq
1000330a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1000330e:	f150 0000 	adcs.w	r0, r0, #0
10003312:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003316:	ea41 0105 	orr.w	r1, r1, r5
1000331a:	bd30      	pop	{r4, r5, pc}
1000331c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003320:	4140      	adcs	r0, r0
10003322:	eb41 0101 	adc.w	r1, r1, r1
10003326:	3c01      	subs	r4, #1
10003328:	bf28      	it	cs
1000332a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
1000332e:	d2e9      	bcs.n	10003304 <__adddf3+0x10c>
10003330:	f091 0f00 	teq	r1, #0
10003334:	bf04      	itt	eq
10003336:	4601      	moveq	r1, r0
10003338:	2000      	moveq	r0, #0
1000333a:	fab1 f381 	clz	r3, r1
1000333e:	bf08      	it	eq
10003340:	3320      	addeq	r3, #32
10003342:	f1a3 030b 	sub.w	r3, r3, #11
10003346:	f1b3 0220 	subs.w	r2, r3, #32
1000334a:	da0c      	bge.n	10003366 <__adddf3+0x16e>
1000334c:	320c      	adds	r2, #12
1000334e:	dd08      	ble.n	10003362 <__adddf3+0x16a>
10003350:	f102 0c14 	add.w	ip, r2, #20
10003354:	f1c2 020c 	rsb	r2, r2, #12
10003358:	fa01 f00c 	lsl.w	r0, r1, ip
1000335c:	fa21 f102 	lsr.w	r1, r1, r2
10003360:	e00c      	b.n	1000337c <__adddf3+0x184>
10003362:	f102 0214 	add.w	r2, r2, #20
10003366:	bfd8      	it	le
10003368:	f1c2 0c20 	rsble	ip, r2, #32
1000336c:	fa01 f102 	lsl.w	r1, r1, r2
10003370:	fa20 fc0c 	lsr.w	ip, r0, ip
10003374:	bfdc      	itt	le
10003376:	ea41 010c 	orrle.w	r1, r1, ip
1000337a:	4090      	lslle	r0, r2
1000337c:	1ae4      	subs	r4, r4, r3
1000337e:	bfa2      	ittt	ge
10003380:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003384:	4329      	orrge	r1, r5
10003386:	bd30      	popge	{r4, r5, pc}
10003388:	ea6f 0404 	mvn.w	r4, r4
1000338c:	3c1f      	subs	r4, #31
1000338e:	da1c      	bge.n	100033ca <__adddf3+0x1d2>
10003390:	340c      	adds	r4, #12
10003392:	dc0e      	bgt.n	100033b2 <__adddf3+0x1ba>
10003394:	f104 0414 	add.w	r4, r4, #20
10003398:	f1c4 0220 	rsb	r2, r4, #32
1000339c:	fa20 f004 	lsr.w	r0, r0, r4
100033a0:	fa01 f302 	lsl.w	r3, r1, r2
100033a4:	ea40 0003 	orr.w	r0, r0, r3
100033a8:	fa21 f304 	lsr.w	r3, r1, r4
100033ac:	ea45 0103 	orr.w	r1, r5, r3
100033b0:	bd30      	pop	{r4, r5, pc}
100033b2:	f1c4 040c 	rsb	r4, r4, #12
100033b6:	f1c4 0220 	rsb	r2, r4, #32
100033ba:	fa20 f002 	lsr.w	r0, r0, r2
100033be:	fa01 f304 	lsl.w	r3, r1, r4
100033c2:	ea40 0003 	orr.w	r0, r0, r3
100033c6:	4629      	mov	r1, r5
100033c8:	bd30      	pop	{r4, r5, pc}
100033ca:	fa21 f004 	lsr.w	r0, r1, r4
100033ce:	4629      	mov	r1, r5
100033d0:	bd30      	pop	{r4, r5, pc}
100033d2:	f094 0f00 	teq	r4, #0
100033d6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
100033da:	bf06      	itte	eq
100033dc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
100033e0:	3401      	addeq	r4, #1
100033e2:	3d01      	subne	r5, #1
100033e4:	e74e      	b.n	10003284 <__adddf3+0x8c>
100033e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100033ea:	bf18      	it	ne
100033ec:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
100033f0:	d029      	beq.n	10003446 <__adddf3+0x24e>
100033f2:	ea94 0f05 	teq	r4, r5
100033f6:	bf08      	it	eq
100033f8:	ea90 0f02 	teqeq	r0, r2
100033fc:	d005      	beq.n	1000340a <__adddf3+0x212>
100033fe:	ea54 0c00 	orrs.w	ip, r4, r0
10003402:	bf04      	itt	eq
10003404:	4619      	moveq	r1, r3
10003406:	4610      	moveq	r0, r2
10003408:	bd30      	pop	{r4, r5, pc}
1000340a:	ea91 0f03 	teq	r1, r3
1000340e:	bf1e      	ittt	ne
10003410:	2100      	movne	r1, #0
10003412:	2000      	movne	r0, #0
10003414:	bd30      	popne	{r4, r5, pc}
10003416:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1000341a:	d105      	bne.n	10003428 <__adddf3+0x230>
1000341c:	0040      	lsls	r0, r0, #1
1000341e:	4149      	adcs	r1, r1
10003420:	bf28      	it	cs
10003422:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10003426:	bd30      	pop	{r4, r5, pc}
10003428:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
1000342c:	bf3c      	itt	cc
1000342e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10003432:	bd30      	popcc	{r4, r5, pc}
10003434:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003438:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
1000343c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003440:	f04f 0000 	mov.w	r0, #0
10003444:	bd30      	pop	{r4, r5, pc}
10003446:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1000344a:	bf1a      	itte	ne
1000344c:	4619      	movne	r1, r3
1000344e:	4610      	movne	r0, r2
10003450:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10003454:	bf1c      	itt	ne
10003456:	460b      	movne	r3, r1
10003458:	4602      	movne	r2, r0
1000345a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1000345e:	bf06      	itte	eq
10003460:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10003464:	ea91 0f03 	teqeq	r1, r3
10003468:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
1000346c:	bd30      	pop	{r4, r5, pc}
1000346e:	bf00      	nop

10003470 <__aeabi_ui2d>:
10003470:	f090 0f00 	teq	r0, #0
10003474:	bf04      	itt	eq
10003476:	2100      	moveq	r1, #0
10003478:	4770      	bxeq	lr
1000347a:	b530      	push	{r4, r5, lr}
1000347c:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003480:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003484:	f04f 0500 	mov.w	r5, #0
10003488:	f04f 0100 	mov.w	r1, #0
1000348c:	e750      	b.n	10003330 <__adddf3+0x138>
1000348e:	bf00      	nop

10003490 <__aeabi_i2d>:
10003490:	f090 0f00 	teq	r0, #0
10003494:	bf04      	itt	eq
10003496:	2100      	moveq	r1, #0
10003498:	4770      	bxeq	lr
1000349a:	b530      	push	{r4, r5, lr}
1000349c:	f44f 6480 	mov.w	r4, #1024	; 0x400
100034a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
100034a4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
100034a8:	bf48      	it	mi
100034aa:	4240      	negmi	r0, r0
100034ac:	f04f 0100 	mov.w	r1, #0
100034b0:	e73e      	b.n	10003330 <__adddf3+0x138>
100034b2:	bf00      	nop

100034b4 <__aeabi_f2d>:
100034b4:	0042      	lsls	r2, r0, #1
100034b6:	ea4f 01e2 	mov.w	r1, r2, asr #3
100034ba:	ea4f 0131 	mov.w	r1, r1, rrx
100034be:	ea4f 7002 	mov.w	r0, r2, lsl #28
100034c2:	bf1f      	itttt	ne
100034c4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
100034c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
100034cc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
100034d0:	4770      	bxne	lr
100034d2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
100034d6:	bf08      	it	eq
100034d8:	4770      	bxeq	lr
100034da:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
100034de:	bf04      	itt	eq
100034e0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
100034e4:	4770      	bxeq	lr
100034e6:	b530      	push	{r4, r5, lr}
100034e8:	f44f 7460 	mov.w	r4, #896	; 0x380
100034ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100034f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
100034f4:	e71c      	b.n	10003330 <__adddf3+0x138>
100034f6:	bf00      	nop

100034f8 <__aeabi_ul2d>:
100034f8:	ea50 0201 	orrs.w	r2, r0, r1
100034fc:	bf08      	it	eq
100034fe:	4770      	bxeq	lr
10003500:	b530      	push	{r4, r5, lr}
10003502:	f04f 0500 	mov.w	r5, #0
10003506:	e00a      	b.n	1000351e <__aeabi_l2d+0x16>

10003508 <__aeabi_l2d>:
10003508:	ea50 0201 	orrs.w	r2, r0, r1
1000350c:	bf08      	it	eq
1000350e:	4770      	bxeq	lr
10003510:	b530      	push	{r4, r5, lr}
10003512:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10003516:	d502      	bpl.n	1000351e <__aeabi_l2d+0x16>
10003518:	4240      	negs	r0, r0
1000351a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1000351e:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003522:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003526:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1000352a:	f43f aed8 	beq.w	100032de <__adddf3+0xe6>
1000352e:	f04f 0203 	mov.w	r2, #3
10003532:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003536:	bf18      	it	ne
10003538:	3203      	addne	r2, #3
1000353a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1000353e:	bf18      	it	ne
10003540:	3203      	addne	r2, #3
10003542:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10003546:	f1c2 0320 	rsb	r3, r2, #32
1000354a:	fa00 fc03 	lsl.w	ip, r0, r3
1000354e:	fa20 f002 	lsr.w	r0, r0, r2
10003552:	fa01 fe03 	lsl.w	lr, r1, r3
10003556:	ea40 000e 	orr.w	r0, r0, lr
1000355a:	fa21 f102 	lsr.w	r1, r1, r2
1000355e:	4414      	add	r4, r2
10003560:	e6bd      	b.n	100032de <__adddf3+0xe6>
10003562:	bf00      	nop

10003564 <__aeabi_dmul>:
10003564:	b570      	push	{r4, r5, r6, lr}
10003566:	f04f 0cff 	mov.w	ip, #255	; 0xff
1000356a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1000356e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10003572:	bf1d      	ittte	ne
10003574:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10003578:	ea94 0f0c 	teqne	r4, ip
1000357c:	ea95 0f0c 	teqne	r5, ip
10003580:	f000 f8de 	bleq	10003740 <__aeabi_dmul+0x1dc>
10003584:	442c      	add	r4, r5
10003586:	ea81 0603 	eor.w	r6, r1, r3
1000358a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1000358e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10003592:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10003596:	bf18      	it	ne
10003598:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1000359c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100035a0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
100035a4:	d038      	beq.n	10003618 <__aeabi_dmul+0xb4>
100035a6:	fba0 ce02 	umull	ip, lr, r0, r2
100035aa:	f04f 0500 	mov.w	r5, #0
100035ae:	fbe1 e502 	umlal	lr, r5, r1, r2
100035b2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
100035b6:	fbe0 e503 	umlal	lr, r5, r0, r3
100035ba:	f04f 0600 	mov.w	r6, #0
100035be:	fbe1 5603 	umlal	r5, r6, r1, r3
100035c2:	f09c 0f00 	teq	ip, #0
100035c6:	bf18      	it	ne
100035c8:	f04e 0e01 	orrne.w	lr, lr, #1
100035cc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
100035d0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
100035d4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
100035d8:	d204      	bcs.n	100035e4 <__aeabi_dmul+0x80>
100035da:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
100035de:	416d      	adcs	r5, r5
100035e0:	eb46 0606 	adc.w	r6, r6, r6
100035e4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
100035e8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
100035ec:	ea4f 20c5 	mov.w	r0, r5, lsl #11
100035f0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
100035f4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
100035f8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100035fc:	bf88      	it	hi
100035fe:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10003602:	d81e      	bhi.n	10003642 <__aeabi_dmul+0xde>
10003604:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10003608:	bf08      	it	eq
1000360a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1000360e:	f150 0000 	adcs.w	r0, r0, #0
10003612:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003616:	bd70      	pop	{r4, r5, r6, pc}
10003618:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1000361c:	ea46 0101 	orr.w	r1, r6, r1
10003620:	ea40 0002 	orr.w	r0, r0, r2
10003624:	ea81 0103 	eor.w	r1, r1, r3
10003628:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1000362c:	bfc2      	ittt	gt
1000362e:	ebd4 050c 	rsbsgt	r5, r4, ip
10003632:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10003636:	bd70      	popgt	{r4, r5, r6, pc}
10003638:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1000363c:	f04f 0e00 	mov.w	lr, #0
10003640:	3c01      	subs	r4, #1
10003642:	f300 80ab 	bgt.w	1000379c <__aeabi_dmul+0x238>
10003646:	f114 0f36 	cmn.w	r4, #54	; 0x36
1000364a:	bfde      	ittt	le
1000364c:	2000      	movle	r0, #0
1000364e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10003652:	bd70      	pople	{r4, r5, r6, pc}
10003654:	f1c4 0400 	rsb	r4, r4, #0
10003658:	3c20      	subs	r4, #32
1000365a:	da35      	bge.n	100036c8 <__aeabi_dmul+0x164>
1000365c:	340c      	adds	r4, #12
1000365e:	dc1b      	bgt.n	10003698 <__aeabi_dmul+0x134>
10003660:	f104 0414 	add.w	r4, r4, #20
10003664:	f1c4 0520 	rsb	r5, r4, #32
10003668:	fa00 f305 	lsl.w	r3, r0, r5
1000366c:	fa20 f004 	lsr.w	r0, r0, r4
10003670:	fa01 f205 	lsl.w	r2, r1, r5
10003674:	ea40 0002 	orr.w	r0, r0, r2
10003678:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1000367c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003680:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10003684:	fa21 f604 	lsr.w	r6, r1, r4
10003688:	eb42 0106 	adc.w	r1, r2, r6
1000368c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003690:	bf08      	it	eq
10003692:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003696:	bd70      	pop	{r4, r5, r6, pc}
10003698:	f1c4 040c 	rsb	r4, r4, #12
1000369c:	f1c4 0520 	rsb	r5, r4, #32
100036a0:	fa00 f304 	lsl.w	r3, r0, r4
100036a4:	fa20 f005 	lsr.w	r0, r0, r5
100036a8:	fa01 f204 	lsl.w	r2, r1, r4
100036ac:	ea40 0002 	orr.w	r0, r0, r2
100036b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100036b4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100036b8:	f141 0100 	adc.w	r1, r1, #0
100036bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100036c0:	bf08      	it	eq
100036c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100036c6:	bd70      	pop	{r4, r5, r6, pc}
100036c8:	f1c4 0520 	rsb	r5, r4, #32
100036cc:	fa00 f205 	lsl.w	r2, r0, r5
100036d0:	ea4e 0e02 	orr.w	lr, lr, r2
100036d4:	fa20 f304 	lsr.w	r3, r0, r4
100036d8:	fa01 f205 	lsl.w	r2, r1, r5
100036dc:	ea43 0302 	orr.w	r3, r3, r2
100036e0:	fa21 f004 	lsr.w	r0, r1, r4
100036e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100036e8:	fa21 f204 	lsr.w	r2, r1, r4
100036ec:	ea20 0002 	bic.w	r0, r0, r2
100036f0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
100036f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100036f8:	bf08      	it	eq
100036fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100036fe:	bd70      	pop	{r4, r5, r6, pc}
10003700:	f094 0f00 	teq	r4, #0
10003704:	d10f      	bne.n	10003726 <__aeabi_dmul+0x1c2>
10003706:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
1000370a:	0040      	lsls	r0, r0, #1
1000370c:	eb41 0101 	adc.w	r1, r1, r1
10003710:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10003714:	bf08      	it	eq
10003716:	3c01      	subeq	r4, #1
10003718:	d0f7      	beq.n	1000370a <__aeabi_dmul+0x1a6>
1000371a:	ea41 0106 	orr.w	r1, r1, r6
1000371e:	f095 0f00 	teq	r5, #0
10003722:	bf18      	it	ne
10003724:	4770      	bxne	lr
10003726:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1000372a:	0052      	lsls	r2, r2, #1
1000372c:	eb43 0303 	adc.w	r3, r3, r3
10003730:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10003734:	bf08      	it	eq
10003736:	3d01      	subeq	r5, #1
10003738:	d0f7      	beq.n	1000372a <__aeabi_dmul+0x1c6>
1000373a:	ea43 0306 	orr.w	r3, r3, r6
1000373e:	4770      	bx	lr
10003740:	ea94 0f0c 	teq	r4, ip
10003744:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10003748:	bf18      	it	ne
1000374a:	ea95 0f0c 	teqne	r5, ip
1000374e:	d00c      	beq.n	1000376a <__aeabi_dmul+0x206>
10003750:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10003754:	bf18      	it	ne
10003756:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000375a:	d1d1      	bne.n	10003700 <__aeabi_dmul+0x19c>
1000375c:	ea81 0103 	eor.w	r1, r1, r3
10003760:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003764:	f04f 0000 	mov.w	r0, #0
10003768:	bd70      	pop	{r4, r5, r6, pc}
1000376a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000376e:	bf06      	itte	eq
10003770:	4610      	moveq	r0, r2
10003772:	4619      	moveq	r1, r3
10003774:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10003778:	d019      	beq.n	100037ae <__aeabi_dmul+0x24a>
1000377a:	ea94 0f0c 	teq	r4, ip
1000377e:	d102      	bne.n	10003786 <__aeabi_dmul+0x222>
10003780:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10003784:	d113      	bne.n	100037ae <__aeabi_dmul+0x24a>
10003786:	ea95 0f0c 	teq	r5, ip
1000378a:	d105      	bne.n	10003798 <__aeabi_dmul+0x234>
1000378c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10003790:	bf1c      	itt	ne
10003792:	4610      	movne	r0, r2
10003794:	4619      	movne	r1, r3
10003796:	d10a      	bne.n	100037ae <__aeabi_dmul+0x24a>
10003798:	ea81 0103 	eor.w	r1, r1, r3
1000379c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100037a0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100037a4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
100037a8:	f04f 0000 	mov.w	r0, #0
100037ac:	bd70      	pop	{r4, r5, r6, pc}
100037ae:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100037b2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
100037b6:	bd70      	pop	{r4, r5, r6, pc}

100037b8 <__aeabi_ddiv>:
100037b8:	b570      	push	{r4, r5, r6, lr}
100037ba:	f04f 0cff 	mov.w	ip, #255	; 0xff
100037be:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100037c2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100037c6:	bf1d      	ittte	ne
100037c8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100037cc:	ea94 0f0c 	teqne	r4, ip
100037d0:	ea95 0f0c 	teqne	r5, ip
100037d4:	f000 f8a7 	bleq	10003926 <__aeabi_ddiv+0x16e>
100037d8:	eba4 0405 	sub.w	r4, r4, r5
100037dc:	ea81 0e03 	eor.w	lr, r1, r3
100037e0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100037e4:	ea4f 3101 	mov.w	r1, r1, lsl #12
100037e8:	f000 8088 	beq.w	100038fc <__aeabi_ddiv+0x144>
100037ec:	ea4f 3303 	mov.w	r3, r3, lsl #12
100037f0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
100037f4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
100037f8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
100037fc:	ea4f 2202 	mov.w	r2, r2, lsl #8
10003800:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10003804:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10003808:	ea4f 2600 	mov.w	r6, r0, lsl #8
1000380c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10003810:	429d      	cmp	r5, r3
10003812:	bf08      	it	eq
10003814:	4296      	cmpeq	r6, r2
10003816:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1000381a:	f504 7440 	add.w	r4, r4, #768	; 0x300
1000381e:	d202      	bcs.n	10003826 <__aeabi_ddiv+0x6e>
10003820:	085b      	lsrs	r3, r3, #1
10003822:	ea4f 0232 	mov.w	r2, r2, rrx
10003826:	1ab6      	subs	r6, r6, r2
10003828:	eb65 0503 	sbc.w	r5, r5, r3
1000382c:	085b      	lsrs	r3, r3, #1
1000382e:	ea4f 0232 	mov.w	r2, r2, rrx
10003832:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
10003836:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1000383a:	ebb6 0e02 	subs.w	lr, r6, r2
1000383e:	eb75 0e03 	sbcs.w	lr, r5, r3
10003842:	bf22      	ittt	cs
10003844:	1ab6      	subcs	r6, r6, r2
10003846:	4675      	movcs	r5, lr
10003848:	ea40 000c 	orrcs.w	r0, r0, ip
1000384c:	085b      	lsrs	r3, r3, #1
1000384e:	ea4f 0232 	mov.w	r2, r2, rrx
10003852:	ebb6 0e02 	subs.w	lr, r6, r2
10003856:	eb75 0e03 	sbcs.w	lr, r5, r3
1000385a:	bf22      	ittt	cs
1000385c:	1ab6      	subcs	r6, r6, r2
1000385e:	4675      	movcs	r5, lr
10003860:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10003864:	085b      	lsrs	r3, r3, #1
10003866:	ea4f 0232 	mov.w	r2, r2, rrx
1000386a:	ebb6 0e02 	subs.w	lr, r6, r2
1000386e:	eb75 0e03 	sbcs.w	lr, r5, r3
10003872:	bf22      	ittt	cs
10003874:	1ab6      	subcs	r6, r6, r2
10003876:	4675      	movcs	r5, lr
10003878:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1000387c:	085b      	lsrs	r3, r3, #1
1000387e:	ea4f 0232 	mov.w	r2, r2, rrx
10003882:	ebb6 0e02 	subs.w	lr, r6, r2
10003886:	eb75 0e03 	sbcs.w	lr, r5, r3
1000388a:	bf22      	ittt	cs
1000388c:	1ab6      	subcs	r6, r6, r2
1000388e:	4675      	movcs	r5, lr
10003890:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10003894:	ea55 0e06 	orrs.w	lr, r5, r6
10003898:	d018      	beq.n	100038cc <__aeabi_ddiv+0x114>
1000389a:	ea4f 1505 	mov.w	r5, r5, lsl #4
1000389e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
100038a2:	ea4f 1606 	mov.w	r6, r6, lsl #4
100038a6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
100038aa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
100038ae:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100038b2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100038b6:	d1c0      	bne.n	1000383a <__aeabi_ddiv+0x82>
100038b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100038bc:	d10b      	bne.n	100038d6 <__aeabi_ddiv+0x11e>
100038be:	ea41 0100 	orr.w	r1, r1, r0
100038c2:	f04f 0000 	mov.w	r0, #0
100038c6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
100038ca:	e7b6      	b.n	1000383a <__aeabi_ddiv+0x82>
100038cc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100038d0:	bf04      	itt	eq
100038d2:	4301      	orreq	r1, r0
100038d4:	2000      	moveq	r0, #0
100038d6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100038da:	bf88      	it	hi
100038dc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
100038e0:	f63f aeaf 	bhi.w	10003642 <__aeabi_dmul+0xde>
100038e4:	ebb5 0c03 	subs.w	ip, r5, r3
100038e8:	bf04      	itt	eq
100038ea:	ebb6 0c02 	subseq.w	ip, r6, r2
100038ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100038f2:	f150 0000 	adcs.w	r0, r0, #0
100038f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100038fa:	bd70      	pop	{r4, r5, r6, pc}
100038fc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
10003900:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10003904:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10003908:	bfc2      	ittt	gt
1000390a:	ebd4 050c 	rsbsgt	r5, r4, ip
1000390e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10003912:	bd70      	popgt	{r4, r5, r6, pc}
10003914:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003918:	f04f 0e00 	mov.w	lr, #0
1000391c:	3c01      	subs	r4, #1
1000391e:	e690      	b.n	10003642 <__aeabi_dmul+0xde>
10003920:	ea45 0e06 	orr.w	lr, r5, r6
10003924:	e68d      	b.n	10003642 <__aeabi_dmul+0xde>
10003926:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1000392a:	ea94 0f0c 	teq	r4, ip
1000392e:	bf08      	it	eq
10003930:	ea95 0f0c 	teqeq	r5, ip
10003934:	f43f af3b 	beq.w	100037ae <__aeabi_dmul+0x24a>
10003938:	ea94 0f0c 	teq	r4, ip
1000393c:	d10a      	bne.n	10003954 <__aeabi_ddiv+0x19c>
1000393e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10003942:	f47f af34 	bne.w	100037ae <__aeabi_dmul+0x24a>
10003946:	ea95 0f0c 	teq	r5, ip
1000394a:	f47f af25 	bne.w	10003798 <__aeabi_dmul+0x234>
1000394e:	4610      	mov	r0, r2
10003950:	4619      	mov	r1, r3
10003952:	e72c      	b.n	100037ae <__aeabi_dmul+0x24a>
10003954:	ea95 0f0c 	teq	r5, ip
10003958:	d106      	bne.n	10003968 <__aeabi_ddiv+0x1b0>
1000395a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1000395e:	f43f aefd 	beq.w	1000375c <__aeabi_dmul+0x1f8>
10003962:	4610      	mov	r0, r2
10003964:	4619      	mov	r1, r3
10003966:	e722      	b.n	100037ae <__aeabi_dmul+0x24a>
10003968:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000396c:	bf18      	it	ne
1000396e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10003972:	f47f aec5 	bne.w	10003700 <__aeabi_dmul+0x19c>
10003976:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1000397a:	f47f af0d 	bne.w	10003798 <__aeabi_dmul+0x234>
1000397e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10003982:	f47f aeeb 	bne.w	1000375c <__aeabi_dmul+0x1f8>
10003986:	e712      	b.n	100037ae <__aeabi_dmul+0x24a>

10003988 <__gedf2>:
10003988:	f04f 3cff 	mov.w	ip, #4294967295
1000398c:	e006      	b.n	1000399c <__cmpdf2+0x4>
1000398e:	bf00      	nop

10003990 <__ledf2>:
10003990:	f04f 0c01 	mov.w	ip, #1
10003994:	e002      	b.n	1000399c <__cmpdf2+0x4>
10003996:	bf00      	nop

10003998 <__cmpdf2>:
10003998:	f04f 0c01 	mov.w	ip, #1
1000399c:	f84d cd04 	str.w	ip, [sp, #-4]!
100039a0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100039a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100039a8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100039ac:	bf18      	it	ne
100039ae:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100039b2:	d01b      	beq.n	100039ec <__cmpdf2+0x54>
100039b4:	b001      	add	sp, #4
100039b6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100039ba:	bf0c      	ite	eq
100039bc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
100039c0:	ea91 0f03 	teqne	r1, r3
100039c4:	bf02      	ittt	eq
100039c6:	ea90 0f02 	teqeq	r0, r2
100039ca:	2000      	moveq	r0, #0
100039cc:	4770      	bxeq	lr
100039ce:	f110 0f00 	cmn.w	r0, #0
100039d2:	ea91 0f03 	teq	r1, r3
100039d6:	bf58      	it	pl
100039d8:	4299      	cmppl	r1, r3
100039da:	bf08      	it	eq
100039dc:	4290      	cmpeq	r0, r2
100039de:	bf2c      	ite	cs
100039e0:	17d8      	asrcs	r0, r3, #31
100039e2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
100039e6:	f040 0001 	orr.w	r0, r0, #1
100039ea:	4770      	bx	lr
100039ec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100039f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100039f4:	d102      	bne.n	100039fc <__cmpdf2+0x64>
100039f6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
100039fa:	d107      	bne.n	10003a0c <__cmpdf2+0x74>
100039fc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10003a00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10003a04:	d1d6      	bne.n	100039b4 <__cmpdf2+0x1c>
10003a06:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10003a0a:	d0d3      	beq.n	100039b4 <__cmpdf2+0x1c>
10003a0c:	f85d 0b04 	ldr.w	r0, [sp], #4
10003a10:	4770      	bx	lr
10003a12:	bf00      	nop

10003a14 <__aeabi_cdrcmple>:
10003a14:	4684      	mov	ip, r0
10003a16:	4610      	mov	r0, r2
10003a18:	4662      	mov	r2, ip
10003a1a:	468c      	mov	ip, r1
10003a1c:	4619      	mov	r1, r3
10003a1e:	4663      	mov	r3, ip
10003a20:	e000      	b.n	10003a24 <__aeabi_cdcmpeq>
10003a22:	bf00      	nop

10003a24 <__aeabi_cdcmpeq>:
10003a24:	b501      	push	{r0, lr}
10003a26:	f7ff ffb7 	bl	10003998 <__cmpdf2>
10003a2a:	2800      	cmp	r0, #0
10003a2c:	bf48      	it	mi
10003a2e:	f110 0f00 	cmnmi.w	r0, #0
10003a32:	bd01      	pop	{r0, pc}

10003a34 <__aeabi_dcmpeq>:
10003a34:	f84d ed08 	str.w	lr, [sp, #-8]!
10003a38:	f7ff fff4 	bl	10003a24 <__aeabi_cdcmpeq>
10003a3c:	bf0c      	ite	eq
10003a3e:	2001      	moveq	r0, #1
10003a40:	2000      	movne	r0, #0
10003a42:	f85d fb08 	ldr.w	pc, [sp], #8
10003a46:	bf00      	nop

10003a48 <__aeabi_dcmplt>:
10003a48:	f84d ed08 	str.w	lr, [sp, #-8]!
10003a4c:	f7ff ffea 	bl	10003a24 <__aeabi_cdcmpeq>
10003a50:	bf34      	ite	cc
10003a52:	2001      	movcc	r0, #1
10003a54:	2000      	movcs	r0, #0
10003a56:	f85d fb08 	ldr.w	pc, [sp], #8
10003a5a:	bf00      	nop

10003a5c <__aeabi_dcmple>:
10003a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
10003a60:	f7ff ffe0 	bl	10003a24 <__aeabi_cdcmpeq>
10003a64:	bf94      	ite	ls
10003a66:	2001      	movls	r0, #1
10003a68:	2000      	movhi	r0, #0
10003a6a:	f85d fb08 	ldr.w	pc, [sp], #8
10003a6e:	bf00      	nop

10003a70 <__aeabi_dcmpge>:
10003a70:	f84d ed08 	str.w	lr, [sp, #-8]!
10003a74:	f7ff ffce 	bl	10003a14 <__aeabi_cdrcmple>
10003a78:	bf94      	ite	ls
10003a7a:	2001      	movls	r0, #1
10003a7c:	2000      	movhi	r0, #0
10003a7e:	f85d fb08 	ldr.w	pc, [sp], #8
10003a82:	bf00      	nop

10003a84 <__aeabi_dcmpgt>:
10003a84:	f84d ed08 	str.w	lr, [sp, #-8]!
10003a88:	f7ff ffc4 	bl	10003a14 <__aeabi_cdrcmple>
10003a8c:	bf34      	ite	cc
10003a8e:	2001      	movcc	r0, #1
10003a90:	2000      	movcs	r0, #0
10003a92:	f85d fb08 	ldr.w	pc, [sp], #8
10003a96:	bf00      	nop

10003a98 <__aeabi_d2iz>:
10003a98:	ea4f 0241 	mov.w	r2, r1, lsl #1
10003a9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10003aa0:	d215      	bcs.n	10003ace <__aeabi_d2iz+0x36>
10003aa2:	d511      	bpl.n	10003ac8 <__aeabi_d2iz+0x30>
10003aa4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10003aa8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10003aac:	d912      	bls.n	10003ad4 <__aeabi_d2iz+0x3c>
10003aae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10003ab2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10003ab6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10003aba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003abe:	fa23 f002 	lsr.w	r0, r3, r2
10003ac2:	bf18      	it	ne
10003ac4:	4240      	negne	r0, r0
10003ac6:	4770      	bx	lr
10003ac8:	f04f 0000 	mov.w	r0, #0
10003acc:	4770      	bx	lr
10003ace:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10003ad2:	d105      	bne.n	10003ae0 <__aeabi_d2iz+0x48>
10003ad4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
10003ad8:	bf08      	it	eq
10003ada:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
10003ade:	4770      	bx	lr
10003ae0:	f04f 0000 	mov.w	r0, #0
10003ae4:	4770      	bx	lr
10003ae6:	bf00      	nop

10003ae8 <__aeabi_d2uiz>:
10003ae8:	004a      	lsls	r2, r1, #1
10003aea:	d211      	bcs.n	10003b10 <__aeabi_d2uiz+0x28>
10003aec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10003af0:	d211      	bcs.n	10003b16 <__aeabi_d2uiz+0x2e>
10003af2:	d50d      	bpl.n	10003b10 <__aeabi_d2uiz+0x28>
10003af4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10003af8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10003afc:	d40e      	bmi.n	10003b1c <__aeabi_d2uiz+0x34>
10003afe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10003b02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10003b06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10003b0a:	fa23 f002 	lsr.w	r0, r3, r2
10003b0e:	4770      	bx	lr
10003b10:	f04f 0000 	mov.w	r0, #0
10003b14:	4770      	bx	lr
10003b16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10003b1a:	d102      	bne.n	10003b22 <__aeabi_d2uiz+0x3a>
10003b1c:	f04f 30ff 	mov.w	r0, #4294967295
10003b20:	4770      	bx	lr
10003b22:	f04f 0000 	mov.w	r0, #0
10003b26:	4770      	bx	lr

10003b28 <__aeabi_uldivmod>:
10003b28:	b953      	cbnz	r3, 10003b40 <__aeabi_uldivmod+0x18>
10003b2a:	b94a      	cbnz	r2, 10003b40 <__aeabi_uldivmod+0x18>
10003b2c:	2900      	cmp	r1, #0
10003b2e:	bf08      	it	eq
10003b30:	2800      	cmpeq	r0, #0
10003b32:	bf1c      	itt	ne
10003b34:	f04f 31ff 	movne.w	r1, #4294967295
10003b38:	f04f 30ff 	movne.w	r0, #4294967295
10003b3c:	f001 b934 	b.w	10004da8 <__aeabi_idiv0>
10003b40:	f1ad 0c08 	sub.w	ip, sp, #8
10003b44:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10003b48:	f000 f806 	bl	10003b58 <__udivmoddi4>
10003b4c:	f8dd e004 	ldr.w	lr, [sp, #4]
10003b50:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10003b54:	b004      	add	sp, #16
10003b56:	4770      	bx	lr

10003b58 <__udivmoddi4>:
10003b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10003b5c:	9d09      	ldr	r5, [sp, #36]	; 0x24
10003b5e:	4604      	mov	r4, r0
10003b60:	460f      	mov	r7, r1
10003b62:	2b00      	cmp	r3, #0
10003b64:	d148      	bne.n	10003bf8 <__udivmoddi4+0xa0>
10003b66:	428a      	cmp	r2, r1
10003b68:	4694      	mov	ip, r2
10003b6a:	d961      	bls.n	10003c30 <__udivmoddi4+0xd8>
10003b6c:	fab2 f382 	clz	r3, r2
10003b70:	b143      	cbz	r3, 10003b84 <__udivmoddi4+0x2c>
10003b72:	f1c3 0120 	rsb	r1, r3, #32
10003b76:	409f      	lsls	r7, r3
10003b78:	fa02 fc03 	lsl.w	ip, r2, r3
10003b7c:	409c      	lsls	r4, r3
10003b7e:	fa20 f101 	lsr.w	r1, r0, r1
10003b82:	430f      	orrs	r7, r1
10003b84:	ea4f 411c 	mov.w	r1, ip, lsr #16
10003b88:	fa1f fe8c 	uxth.w	lr, ip
10003b8c:	0c22      	lsrs	r2, r4, #16
10003b8e:	fbb7 f6f1 	udiv	r6, r7, r1
10003b92:	fb01 7716 	mls	r7, r1, r6, r7
10003b96:	fb06 f00e 	mul.w	r0, r6, lr
10003b9a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
10003b9e:	4290      	cmp	r0, r2
10003ba0:	d908      	bls.n	10003bb4 <__udivmoddi4+0x5c>
10003ba2:	eb1c 0202 	adds.w	r2, ip, r2
10003ba6:	f106 37ff 	add.w	r7, r6, #4294967295
10003baa:	d202      	bcs.n	10003bb2 <__udivmoddi4+0x5a>
10003bac:	4290      	cmp	r0, r2
10003bae:	f200 8137 	bhi.w	10003e20 <__udivmoddi4+0x2c8>
10003bb2:	463e      	mov	r6, r7
10003bb4:	1a12      	subs	r2, r2, r0
10003bb6:	b2a4      	uxth	r4, r4
10003bb8:	fbb2 f0f1 	udiv	r0, r2, r1
10003bbc:	fb01 2210 	mls	r2, r1, r0, r2
10003bc0:	fb00 fe0e 	mul.w	lr, r0, lr
10003bc4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
10003bc8:	45a6      	cmp	lr, r4
10003bca:	d908      	bls.n	10003bde <__udivmoddi4+0x86>
10003bcc:	eb1c 0404 	adds.w	r4, ip, r4
10003bd0:	f100 32ff 	add.w	r2, r0, #4294967295
10003bd4:	d202      	bcs.n	10003bdc <__udivmoddi4+0x84>
10003bd6:	45a6      	cmp	lr, r4
10003bd8:	f200 811c 	bhi.w	10003e14 <__udivmoddi4+0x2bc>
10003bdc:	4610      	mov	r0, r2
10003bde:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10003be2:	eba4 040e 	sub.w	r4, r4, lr
10003be6:	2600      	movs	r6, #0
10003be8:	b11d      	cbz	r5, 10003bf2 <__udivmoddi4+0x9a>
10003bea:	40dc      	lsrs	r4, r3
10003bec:	2300      	movs	r3, #0
10003bee:	e9c5 4300 	strd	r4, r3, [r5]
10003bf2:	4631      	mov	r1, r6
10003bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10003bf8:	428b      	cmp	r3, r1
10003bfa:	d909      	bls.n	10003c10 <__udivmoddi4+0xb8>
10003bfc:	2d00      	cmp	r5, #0
10003bfe:	f000 80fd 	beq.w	10003dfc <__udivmoddi4+0x2a4>
10003c02:	2600      	movs	r6, #0
10003c04:	e9c5 0100 	strd	r0, r1, [r5]
10003c08:	4630      	mov	r0, r6
10003c0a:	4631      	mov	r1, r6
10003c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10003c10:	fab3 f683 	clz	r6, r3
10003c14:	2e00      	cmp	r6, #0
10003c16:	d14b      	bne.n	10003cb0 <__udivmoddi4+0x158>
10003c18:	428b      	cmp	r3, r1
10003c1a:	f0c0 80f2 	bcc.w	10003e02 <__udivmoddi4+0x2aa>
10003c1e:	4282      	cmp	r2, r0
10003c20:	f240 80ef 	bls.w	10003e02 <__udivmoddi4+0x2aa>
10003c24:	4630      	mov	r0, r6
10003c26:	2d00      	cmp	r5, #0
10003c28:	d0e3      	beq.n	10003bf2 <__udivmoddi4+0x9a>
10003c2a:	e9c5 4700 	strd	r4, r7, [r5]
10003c2e:	e7e0      	b.n	10003bf2 <__udivmoddi4+0x9a>
10003c30:	b902      	cbnz	r2, 10003c34 <__udivmoddi4+0xdc>
10003c32:	deff      	udf	#255	; 0xff
10003c34:	fab2 f382 	clz	r3, r2
10003c38:	2b00      	cmp	r3, #0
10003c3a:	f040 809d 	bne.w	10003d78 <__udivmoddi4+0x220>
10003c3e:	1a89      	subs	r1, r1, r2
10003c40:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10003c44:	b297      	uxth	r7, r2
10003c46:	2601      	movs	r6, #1
10003c48:	0c20      	lsrs	r0, r4, #16
10003c4a:	fbb1 f2fe 	udiv	r2, r1, lr
10003c4e:	fb0e 1112 	mls	r1, lr, r2, r1
10003c52:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10003c56:	fb07 f002 	mul.w	r0, r7, r2
10003c5a:	4288      	cmp	r0, r1
10003c5c:	d90f      	bls.n	10003c7e <__udivmoddi4+0x126>
10003c5e:	eb1c 0101 	adds.w	r1, ip, r1
10003c62:	f102 38ff 	add.w	r8, r2, #4294967295
10003c66:	bf2c      	ite	cs
10003c68:	f04f 0901 	movcs.w	r9, #1
10003c6c:	f04f 0900 	movcc.w	r9, #0
10003c70:	4288      	cmp	r0, r1
10003c72:	d903      	bls.n	10003c7c <__udivmoddi4+0x124>
10003c74:	f1b9 0f00 	cmp.w	r9, #0
10003c78:	f000 80cf 	beq.w	10003e1a <__udivmoddi4+0x2c2>
10003c7c:	4642      	mov	r2, r8
10003c7e:	1a09      	subs	r1, r1, r0
10003c80:	b2a4      	uxth	r4, r4
10003c82:	fbb1 f0fe 	udiv	r0, r1, lr
10003c86:	fb0e 1110 	mls	r1, lr, r0, r1
10003c8a:	fb00 f707 	mul.w	r7, r0, r7
10003c8e:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10003c92:	42a7      	cmp	r7, r4
10003c94:	d908      	bls.n	10003ca8 <__udivmoddi4+0x150>
10003c96:	eb1c 0404 	adds.w	r4, ip, r4
10003c9a:	f100 31ff 	add.w	r1, r0, #4294967295
10003c9e:	d202      	bcs.n	10003ca6 <__udivmoddi4+0x14e>
10003ca0:	42a7      	cmp	r7, r4
10003ca2:	f200 80b4 	bhi.w	10003e0e <__udivmoddi4+0x2b6>
10003ca6:	4608      	mov	r0, r1
10003ca8:	1be4      	subs	r4, r4, r7
10003caa:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
10003cae:	e79b      	b.n	10003be8 <__udivmoddi4+0x90>
10003cb0:	f1c6 0720 	rsb	r7, r6, #32
10003cb4:	40b3      	lsls	r3, r6
10003cb6:	fa01 f406 	lsl.w	r4, r1, r6
10003cba:	fa22 fc07 	lsr.w	ip, r2, r7
10003cbe:	40f9      	lsrs	r1, r7
10003cc0:	40b2      	lsls	r2, r6
10003cc2:	ea4c 0c03 	orr.w	ip, ip, r3
10003cc6:	fa20 f307 	lsr.w	r3, r0, r7
10003cca:	ea4f 491c 	mov.w	r9, ip, lsr #16
10003cce:	431c      	orrs	r4, r3
10003cd0:	fa1f fe8c 	uxth.w	lr, ip
10003cd4:	fa00 f306 	lsl.w	r3, r0, r6
10003cd8:	0c20      	lsrs	r0, r4, #16
10003cda:	fbb1 f8f9 	udiv	r8, r1, r9
10003cde:	fb09 1118 	mls	r1, r9, r8, r1
10003ce2:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10003ce6:	fb08 f00e 	mul.w	r0, r8, lr
10003cea:	4288      	cmp	r0, r1
10003cec:	d90f      	bls.n	10003d0e <__udivmoddi4+0x1b6>
10003cee:	eb1c 0101 	adds.w	r1, ip, r1
10003cf2:	f108 3aff 	add.w	sl, r8, #4294967295
10003cf6:	bf2c      	ite	cs
10003cf8:	f04f 0b01 	movcs.w	fp, #1
10003cfc:	f04f 0b00 	movcc.w	fp, #0
10003d00:	4288      	cmp	r0, r1
10003d02:	d903      	bls.n	10003d0c <__udivmoddi4+0x1b4>
10003d04:	f1bb 0f00 	cmp.w	fp, #0
10003d08:	f000 808d 	beq.w	10003e26 <__udivmoddi4+0x2ce>
10003d0c:	46d0      	mov	r8, sl
10003d0e:	1a09      	subs	r1, r1, r0
10003d10:	b2a4      	uxth	r4, r4
10003d12:	fbb1 f0f9 	udiv	r0, r1, r9
10003d16:	fb09 1110 	mls	r1, r9, r0, r1
10003d1a:	fb00 fe0e 	mul.w	lr, r0, lr
10003d1e:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10003d22:	458e      	cmp	lr, r1
10003d24:	d907      	bls.n	10003d36 <__udivmoddi4+0x1de>
10003d26:	eb1c 0101 	adds.w	r1, ip, r1
10003d2a:	f100 34ff 	add.w	r4, r0, #4294967295
10003d2e:	d201      	bcs.n	10003d34 <__udivmoddi4+0x1dc>
10003d30:	458e      	cmp	lr, r1
10003d32:	d87f      	bhi.n	10003e34 <__udivmoddi4+0x2dc>
10003d34:	4620      	mov	r0, r4
10003d36:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10003d3a:	eba1 010e 	sub.w	r1, r1, lr
10003d3e:	fba0 9802 	umull	r9, r8, r0, r2
10003d42:	4541      	cmp	r1, r8
10003d44:	464c      	mov	r4, r9
10003d46:	46c6      	mov	lr, r8
10003d48:	d302      	bcc.n	10003d50 <__udivmoddi4+0x1f8>
10003d4a:	d106      	bne.n	10003d5a <__udivmoddi4+0x202>
10003d4c:	454b      	cmp	r3, r9
10003d4e:	d204      	bcs.n	10003d5a <__udivmoddi4+0x202>
10003d50:	3801      	subs	r0, #1
10003d52:	ebb9 0402 	subs.w	r4, r9, r2
10003d56:	eb68 0e0c 	sbc.w	lr, r8, ip
10003d5a:	2d00      	cmp	r5, #0
10003d5c:	d070      	beq.n	10003e40 <__udivmoddi4+0x2e8>
10003d5e:	1b1a      	subs	r2, r3, r4
10003d60:	eb61 010e 	sbc.w	r1, r1, lr
10003d64:	fa22 f306 	lsr.w	r3, r2, r6
10003d68:	fa01 f707 	lsl.w	r7, r1, r7
10003d6c:	40f1      	lsrs	r1, r6
10003d6e:	2600      	movs	r6, #0
10003d70:	431f      	orrs	r7, r3
10003d72:	e9c5 7100 	strd	r7, r1, [r5]
10003d76:	e73c      	b.n	10003bf2 <__udivmoddi4+0x9a>
10003d78:	fa02 fc03 	lsl.w	ip, r2, r3
10003d7c:	f1c3 0020 	rsb	r0, r3, #32
10003d80:	fa01 f203 	lsl.w	r2, r1, r3
10003d84:	fa21 f600 	lsr.w	r6, r1, r0
10003d88:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10003d8c:	fa24 f100 	lsr.w	r1, r4, r0
10003d90:	fa1f f78c 	uxth.w	r7, ip
10003d94:	409c      	lsls	r4, r3
10003d96:	4311      	orrs	r1, r2
10003d98:	fbb6 f0fe 	udiv	r0, r6, lr
10003d9c:	0c0a      	lsrs	r2, r1, #16
10003d9e:	fb0e 6610 	mls	r6, lr, r0, r6
10003da2:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10003da6:	fb00 f607 	mul.w	r6, r0, r7
10003daa:	4296      	cmp	r6, r2
10003dac:	d90e      	bls.n	10003dcc <__udivmoddi4+0x274>
10003dae:	eb1c 0202 	adds.w	r2, ip, r2
10003db2:	f100 38ff 	add.w	r8, r0, #4294967295
10003db6:	bf2c      	ite	cs
10003db8:	f04f 0901 	movcs.w	r9, #1
10003dbc:	f04f 0900 	movcc.w	r9, #0
10003dc0:	4296      	cmp	r6, r2
10003dc2:	d902      	bls.n	10003dca <__udivmoddi4+0x272>
10003dc4:	f1b9 0f00 	cmp.w	r9, #0
10003dc8:	d031      	beq.n	10003e2e <__udivmoddi4+0x2d6>
10003dca:	4640      	mov	r0, r8
10003dcc:	1b92      	subs	r2, r2, r6
10003dce:	b289      	uxth	r1, r1
10003dd0:	fbb2 f6fe 	udiv	r6, r2, lr
10003dd4:	fb0e 2216 	mls	r2, lr, r6, r2
10003dd8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10003ddc:	fb06 f207 	mul.w	r2, r6, r7
10003de0:	428a      	cmp	r2, r1
10003de2:	d907      	bls.n	10003df4 <__udivmoddi4+0x29c>
10003de4:	eb1c 0101 	adds.w	r1, ip, r1
10003de8:	f106 38ff 	add.w	r8, r6, #4294967295
10003dec:	d201      	bcs.n	10003df2 <__udivmoddi4+0x29a>
10003dee:	428a      	cmp	r2, r1
10003df0:	d823      	bhi.n	10003e3a <__udivmoddi4+0x2e2>
10003df2:	4646      	mov	r6, r8
10003df4:	1a89      	subs	r1, r1, r2
10003df6:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10003dfa:	e725      	b.n	10003c48 <__udivmoddi4+0xf0>
10003dfc:	462e      	mov	r6, r5
10003dfe:	4628      	mov	r0, r5
10003e00:	e6f7      	b.n	10003bf2 <__udivmoddi4+0x9a>
10003e02:	1a84      	subs	r4, r0, r2
10003e04:	eb61 0303 	sbc.w	r3, r1, r3
10003e08:	2001      	movs	r0, #1
10003e0a:	461f      	mov	r7, r3
10003e0c:	e70b      	b.n	10003c26 <__udivmoddi4+0xce>
10003e0e:	4464      	add	r4, ip
10003e10:	3802      	subs	r0, #2
10003e12:	e749      	b.n	10003ca8 <__udivmoddi4+0x150>
10003e14:	4464      	add	r4, ip
10003e16:	3802      	subs	r0, #2
10003e18:	e6e1      	b.n	10003bde <__udivmoddi4+0x86>
10003e1a:	3a02      	subs	r2, #2
10003e1c:	4461      	add	r1, ip
10003e1e:	e72e      	b.n	10003c7e <__udivmoddi4+0x126>
10003e20:	3e02      	subs	r6, #2
10003e22:	4462      	add	r2, ip
10003e24:	e6c6      	b.n	10003bb4 <__udivmoddi4+0x5c>
10003e26:	f1a8 0802 	sub.w	r8, r8, #2
10003e2a:	4461      	add	r1, ip
10003e2c:	e76f      	b.n	10003d0e <__udivmoddi4+0x1b6>
10003e2e:	3802      	subs	r0, #2
10003e30:	4462      	add	r2, ip
10003e32:	e7cb      	b.n	10003dcc <__udivmoddi4+0x274>
10003e34:	3802      	subs	r0, #2
10003e36:	4461      	add	r1, ip
10003e38:	e77d      	b.n	10003d36 <__udivmoddi4+0x1de>
10003e3a:	3e02      	subs	r6, #2
10003e3c:	4461      	add	r1, ip
10003e3e:	e7d9      	b.n	10003df4 <__udivmoddi4+0x29c>
10003e40:	462e      	mov	r6, r5
10003e42:	e6d6      	b.n	10003bf2 <__udivmoddi4+0x9a>

10003e44 <selfrel_offset31>:
10003e44:	6803      	ldr	r3, [r0, #0]
10003e46:	005a      	lsls	r2, r3, #1
10003e48:	bf4c      	ite	mi
10003e4a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10003e4e:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10003e52:	4418      	add	r0, r3
10003e54:	4770      	bx	lr
10003e56:	bf00      	nop

10003e58 <search_EIT_table>:
10003e58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003e5c:	b339      	cbz	r1, 10003eae <search_EIT_table+0x56>
10003e5e:	f101 38ff 	add.w	r8, r1, #4294967295
10003e62:	4606      	mov	r6, r0
10003e64:	4617      	mov	r7, r2
10003e66:	f04f 0900 	mov.w	r9, #0
10003e6a:	4645      	mov	r5, r8
10003e6c:	eb19 0105 	adds.w	r1, r9, r5
10003e70:	bf48      	it	mi
10003e72:	3101      	addmi	r1, #1
10003e74:	1049      	asrs	r1, r1, #1
10003e76:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10003e7a:	00cc      	lsls	r4, r1, #3
10003e7c:	4650      	mov	r0, sl
10003e7e:	f7ff ffe1 	bl	10003e44 <selfrel_offset31>
10003e82:	3408      	adds	r4, #8
10003e84:	4588      	cmp	r8, r1
10003e86:	4603      	mov	r3, r0
10003e88:	eb06 0004 	add.w	r0, r6, r4
10003e8c:	d009      	beq.n	10003ea2 <search_EIT_table+0x4a>
10003e8e:	42bb      	cmp	r3, r7
10003e90:	d809      	bhi.n	10003ea6 <search_EIT_table+0x4e>
10003e92:	f7ff ffd7 	bl	10003e44 <selfrel_offset31>
10003e96:	3801      	subs	r0, #1
10003e98:	f101 0901 	add.w	r9, r1, #1
10003e9c:	42b8      	cmp	r0, r7
10003e9e:	d3e5      	bcc.n	10003e6c <search_EIT_table+0x14>
10003ea0:	e007      	b.n	10003eb2 <search_EIT_table+0x5a>
10003ea2:	42bb      	cmp	r3, r7
10003ea4:	d905      	bls.n	10003eb2 <search_EIT_table+0x5a>
10003ea6:	4589      	cmp	r9, r1
10003ea8:	f101 35ff 	add.w	r5, r1, #4294967295
10003eac:	d1de      	bne.n	10003e6c <search_EIT_table+0x14>
10003eae:	f04f 0a00 	mov.w	sl, #0
10003eb2:	4650      	mov	r0, sl
10003eb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10003eb8 <__gnu_unwind_get_pr_addr>:
10003eb8:	2801      	cmp	r0, #1
10003eba:	d007      	beq.n	10003ecc <__gnu_unwind_get_pr_addr+0x14>
10003ebc:	2802      	cmp	r0, #2
10003ebe:	d007      	beq.n	10003ed0 <__gnu_unwind_get_pr_addr+0x18>
10003ec0:	2800      	cmp	r0, #0
10003ec2:	4b04      	ldr	r3, [pc, #16]	; (10003ed4 <__gnu_unwind_get_pr_addr+0x1c>)
10003ec4:	bf14      	ite	ne
10003ec6:	2000      	movne	r0, #0
10003ec8:	4618      	moveq	r0, r3
10003eca:	4770      	bx	lr
10003ecc:	4802      	ldr	r0, [pc, #8]	; (10003ed8 <__gnu_unwind_get_pr_addr+0x20>)
10003ece:	4770      	bx	lr
10003ed0:	4802      	ldr	r0, [pc, #8]	; (10003edc <__gnu_unwind_get_pr_addr+0x24>)
10003ed2:	4770      	bx	lr
10003ed4:	100045c9 	andne	r4, r0, r9, asr #11
10003ed8:	100045cd 	andne	r4, r0, sp, asr #11
10003edc:	100045d1 	ldrdne	r4, [r0], -r1

10003ee0 <get_eit_entry>:
10003ee0:	4b23      	ldr	r3, [pc, #140]	; (10003f70 <get_eit_entry+0x90>)
10003ee2:	b530      	push	{r4, r5, lr}
10003ee4:	4604      	mov	r4, r0
10003ee6:	b083      	sub	sp, #12
10003ee8:	1e8d      	subs	r5, r1, #2
10003eea:	b343      	cbz	r3, 10003f3e <get_eit_entry+0x5e>
10003eec:	a901      	add	r1, sp, #4
10003eee:	4628      	mov	r0, r5
10003ef0:	e000      	b.n	10003ef4 <get_eit_entry+0x14>
10003ef2:	bf00      	nop
10003ef4:	b1f0      	cbz	r0, 10003f34 <get_eit_entry+0x54>
10003ef6:	9901      	ldr	r1, [sp, #4]
10003ef8:	462a      	mov	r2, r5
10003efa:	f7ff ffad 	bl	10003e58 <search_EIT_table>
10003efe:	4601      	mov	r1, r0
10003f00:	b1c0      	cbz	r0, 10003f34 <get_eit_entry+0x54>
10003f02:	f7ff ff9f 	bl	10003e44 <selfrel_offset31>
10003f06:	684b      	ldr	r3, [r1, #4]
10003f08:	64a0      	str	r0, [r4, #72]	; 0x48
10003f0a:	2b01      	cmp	r3, #1
10003f0c:	d02c      	beq.n	10003f68 <get_eit_entry+0x88>
10003f0e:	2b00      	cmp	r3, #0
10003f10:	f101 0004 	add.w	r0, r1, #4
10003f14:	db24      	blt.n	10003f60 <get_eit_entry+0x80>
10003f16:	f7ff ff95 	bl	10003e44 <selfrel_offset31>
10003f1a:	2300      	movs	r3, #0
10003f1c:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10003f20:	6803      	ldr	r3, [r0, #0]
10003f22:	2b00      	cmp	r3, #0
10003f24:	db11      	blt.n	10003f4a <get_eit_entry+0x6a>
10003f26:	f7ff ff8d 	bl	10003e44 <selfrel_offset31>
10003f2a:	4603      	mov	r3, r0
10003f2c:	2000      	movs	r0, #0
10003f2e:	6123      	str	r3, [r4, #16]
10003f30:	b003      	add	sp, #12
10003f32:	bd30      	pop	{r4, r5, pc}
10003f34:	2300      	movs	r3, #0
10003f36:	2009      	movs	r0, #9
10003f38:	6123      	str	r3, [r4, #16]
10003f3a:	b003      	add	sp, #12
10003f3c:	bd30      	pop	{r4, r5, pc}
10003f3e:	480d      	ldr	r0, [pc, #52]	; (10003f74 <get_eit_entry+0x94>)
10003f40:	490d      	ldr	r1, [pc, #52]	; (10003f78 <get_eit_entry+0x98>)
10003f42:	1a09      	subs	r1, r1, r0
10003f44:	10c9      	asrs	r1, r1, #3
10003f46:	9101      	str	r1, [sp, #4]
10003f48:	e7d6      	b.n	10003ef8 <get_eit_entry+0x18>
10003f4a:	f3c3 6003 	ubfx	r0, r3, #24, #4
10003f4e:	f7ff ffb3 	bl	10003eb8 <__gnu_unwind_get_pr_addr>
10003f52:	2800      	cmp	r0, #0
10003f54:	6120      	str	r0, [r4, #16]
10003f56:	bf14      	ite	ne
10003f58:	2000      	movne	r0, #0
10003f5a:	2009      	moveq	r0, #9
10003f5c:	b003      	add	sp, #12
10003f5e:	bd30      	pop	{r4, r5, pc}
10003f60:	2301      	movs	r3, #1
10003f62:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10003f66:	e7db      	b.n	10003f20 <get_eit_entry+0x40>
10003f68:	2300      	movs	r3, #0
10003f6a:	2005      	movs	r0, #5
10003f6c:	6123      	str	r3, [r4, #16]
10003f6e:	e7df      	b.n	10003f30 <get_eit_entry+0x50>
10003f70:	00000000 	andeq	r0, r0, r0
10003f74:	10004fb0 			; <UNDEFINED> instruction: 0x10004fb0
10003f78:	10005070 	andne	r5, r0, r0, ror r0

10003f7c <restore_non_core_regs>:
10003f7c:	6803      	ldr	r3, [r0, #0]
10003f7e:	07da      	lsls	r2, r3, #31
10003f80:	b510      	push	{r4, lr}
10003f82:	4604      	mov	r4, r0
10003f84:	d406      	bmi.n	10003f94 <restore_non_core_regs+0x18>
10003f86:	079b      	lsls	r3, r3, #30
10003f88:	f100 0048 	add.w	r0, r0, #72	; 0x48
10003f8c:	d509      	bpl.n	10003fa2 <restore_non_core_regs+0x26>
10003f8e:	f000 fc8f 	bl	100048b0 <__gnu_Unwind_Restore_VFP_D>
10003f92:	6823      	ldr	r3, [r4, #0]
10003f94:	0759      	lsls	r1, r3, #29
10003f96:	d509      	bpl.n	10003fac <restore_non_core_regs+0x30>
10003f98:	071a      	lsls	r2, r3, #28
10003f9a:	d50e      	bpl.n	10003fba <restore_non_core_regs+0x3e>
10003f9c:	06db      	lsls	r3, r3, #27
10003f9e:	d513      	bpl.n	10003fc8 <restore_non_core_regs+0x4c>
10003fa0:	bd10      	pop	{r4, pc}
10003fa2:	f000 fc7d 	bl	100048a0 <__gnu_Unwind_Restore_VFP>
10003fa6:	6823      	ldr	r3, [r4, #0]
10003fa8:	0759      	lsls	r1, r3, #29
10003faa:	d4f5      	bmi.n	10003f98 <restore_non_core_regs+0x1c>
10003fac:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
10003fb0:	f000 fc86 	bl	100048c0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10003fb4:	6823      	ldr	r3, [r4, #0]
10003fb6:	071a      	lsls	r2, r3, #28
10003fb8:	d4f0      	bmi.n	10003f9c <restore_non_core_regs+0x20>
10003fba:	f504 70a8 	add.w	r0, r4, #336	; 0x150
10003fbe:	f000 fc87 	bl	100048d0 <__gnu_Unwind_Restore_WMMXD>
10003fc2:	6823      	ldr	r3, [r4, #0]
10003fc4:	06db      	lsls	r3, r3, #27
10003fc6:	d4eb      	bmi.n	10003fa0 <restore_non_core_regs+0x24>
10003fc8:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10003fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10003fd0:	f000 bcc2 	b.w	10004958 <__gnu_Unwind_Restore_WMMXC>

10003fd4 <__gnu_unwind_24bit.constprop.0>:
10003fd4:	2009      	movs	r0, #9
10003fd6:	4770      	bx	lr

10003fd8 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10003fd8:	4603      	mov	r3, r0
10003fda:	6800      	ldr	r0, [r0, #0]
10003fdc:	b100      	cbz	r0, 10003fe0 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
10003fde:	4418      	add	r0, r3
10003fe0:	4770      	bx	lr
10003fe2:	bf00      	nop

10003fe4 <_Unwind_DebugHook>:
10003fe4:	4770      	bx	lr
10003fe6:	bf00      	nop

10003fe8 <unwind_phase2>:
10003fe8:	b570      	push	{r4, r5, r6, lr}
10003fea:	4604      	mov	r4, r0
10003fec:	460e      	mov	r6, r1
10003fee:	6c31      	ldr	r1, [r6, #64]	; 0x40
10003ff0:	4620      	mov	r0, r4
10003ff2:	f7ff ff75 	bl	10003ee0 <get_eit_entry>
10003ff6:	4605      	mov	r5, r0
10003ff8:	b998      	cbnz	r0, 10004022 <unwind_phase2+0x3a>
10003ffa:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
10003ffe:	4632      	mov	r2, r6
10004000:	6923      	ldr	r3, [r4, #16]
10004002:	4621      	mov	r1, r4
10004004:	2001      	movs	r0, #1
10004006:	f8c4 c014 	str.w	ip, [r4, #20]
1000400a:	4798      	blx	r3
1000400c:	2808      	cmp	r0, #8
1000400e:	d0ee      	beq.n	10003fee <unwind_phase2+0x6>
10004010:	2807      	cmp	r0, #7
10004012:	d106      	bne.n	10004022 <unwind_phase2+0x3a>
10004014:	4628      	mov	r0, r5
10004016:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004018:	f7ff ffe4 	bl	10003fe4 <_Unwind_DebugHook>
1000401c:	1d30      	adds	r0, r6, #4
1000401e:	f000 fc33 	bl	10004888 <__restore_core_regs>
10004022:	f000 fec3 	bl	10004dac <abort>
10004026:	bf00      	nop

10004028 <unwind_phase2_forced>:
10004028:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1000402c:	f101 0c04 	add.w	ip, r1, #4
10004030:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10004034:	68c7      	ldr	r7, [r0, #12]
10004036:	4606      	mov	r6, r0
10004038:	f8d0 8018 	ldr.w	r8, [r0, #24]
1000403c:	4614      	mov	r4, r2
1000403e:	f10d 0e14 	add.w	lr, sp, #20
10004042:	ad04      	add	r5, sp, #16
10004044:	f04f 0900 	mov.w	r9, #0
10004048:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000404c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004050:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004054:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004058:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000405c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004060:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004064:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10004068:	f8c5 9000 	str.w	r9, [r5]
1000406c:	e023      	b.n	100040b6 <unwind_phase2_forced+0x8e>
1000406e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
10004070:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004074:	4629      	mov	r1, r5
10004076:	a87c      	add	r0, sp, #496	; 0x1f0
10004078:	6173      	str	r3, [r6, #20]
1000407a:	f000 fe9e 	bl	10004dba <memcpy>
1000407e:	aa7c      	add	r2, sp, #496	; 0x1f0
10004080:	4631      	mov	r1, r6
10004082:	6933      	ldr	r3, [r6, #16]
10004084:	4650      	mov	r0, sl
10004086:	4798      	blx	r3
10004088:	9b8a      	ldr	r3, [sp, #552]	; 0x228
1000408a:	4621      	mov	r1, r4
1000408c:	4681      	mov	r9, r0
1000408e:	9303      	str	r3, [sp, #12]
10004090:	4632      	mov	r2, r6
10004092:	9c03      	ldr	r4, [sp, #12]
10004094:	4633      	mov	r3, r6
10004096:	2001      	movs	r0, #1
10004098:	646c      	str	r4, [r5, #68]	; 0x44
1000409a:	e9cd 5800 	strd	r5, r8, [sp]
1000409e:	47b8      	blx	r7
100040a0:	4604      	mov	r4, r0
100040a2:	b9e8      	cbnz	r0, 100040e0 <unwind_phase2_forced+0xb8>
100040a4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100040a8:	a97c      	add	r1, sp, #496	; 0x1f0
100040aa:	4628      	mov	r0, r5
100040ac:	f000 fe85 	bl	10004dba <memcpy>
100040b0:	f1b9 0f08 	cmp.w	r9, #8
100040b4:	d11b      	bne.n	100040ee <unwind_phase2_forced+0xc6>
100040b6:	3409      	adds	r4, #9
100040b8:	6c29      	ldr	r1, [r5, #64]	; 0x40
100040ba:	4630      	mov	r0, r6
100040bc:	f7ff ff10 	bl	10003ee0 <get_eit_entry>
100040c0:	4681      	mov	r9, r0
100040c2:	fa5f fa84 	uxtb.w	sl, r4
100040c6:	2800      	cmp	r0, #0
100040c8:	d0d1      	beq.n	1000406e <unwind_phase2_forced+0x46>
100040ca:	6bac      	ldr	r4, [r5, #56]	; 0x38
100040cc:	4633      	mov	r3, r6
100040ce:	4632      	mov	r2, r6
100040d0:	f04a 0110 	orr.w	r1, sl, #16
100040d4:	646c      	str	r4, [r5, #68]	; 0x44
100040d6:	2001      	movs	r0, #1
100040d8:	e9cd 5800 	strd	r5, r8, [sp]
100040dc:	47b8      	blx	r7
100040de:	b108      	cbz	r0, 100040e4 <unwind_phase2_forced+0xbc>
100040e0:	f04f 0909 	mov.w	r9, #9
100040e4:	4648      	mov	r0, r9
100040e6:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
100040ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100040ee:	f1b9 0f07 	cmp.w	r9, #7
100040f2:	d1f5      	bne.n	100040e0 <unwind_phase2_forced+0xb8>
100040f4:	4620      	mov	r0, r4
100040f6:	6c29      	ldr	r1, [r5, #64]	; 0x40
100040f8:	f7ff ff74 	bl	10003fe4 <_Unwind_DebugHook>
100040fc:	a805      	add	r0, sp, #20
100040fe:	f000 fbc3 	bl	10004888 <__restore_core_regs>
10004102:	bf00      	nop

10004104 <_Unwind_GetCFA>:
10004104:	6c40      	ldr	r0, [r0, #68]	; 0x44
10004106:	4770      	bx	lr

10004108 <__gnu_Unwind_RaiseException>:
10004108:	b5f0      	push	{r4, r5, r6, r7, lr}
1000410a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
1000410c:	b0f9      	sub	sp, #484	; 0x1e4
1000410e:	f101 0c04 	add.w	ip, r1, #4
10004112:	460e      	mov	r6, r1
10004114:	640b      	str	r3, [r1, #64]	; 0x40
10004116:	ac01      	add	r4, sp, #4
10004118:	4605      	mov	r5, r0
1000411a:	f04f 37ff 	mov.w	r7, #4294967295
1000411e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004122:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004124:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004128:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000412a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000412e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004130:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004134:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10004138:	9700      	str	r7, [sp, #0]
1000413a:	e006      	b.n	1000414a <__gnu_Unwind_RaiseException+0x42>
1000413c:	692b      	ldr	r3, [r5, #16]
1000413e:	466a      	mov	r2, sp
10004140:	4629      	mov	r1, r5
10004142:	4798      	blx	r3
10004144:	2808      	cmp	r0, #8
10004146:	4604      	mov	r4, r0
10004148:	d108      	bne.n	1000415c <__gnu_Unwind_RaiseException+0x54>
1000414a:	9910      	ldr	r1, [sp, #64]	; 0x40
1000414c:	4628      	mov	r0, r5
1000414e:	f7ff fec7 	bl	10003ee0 <get_eit_entry>
10004152:	2800      	cmp	r0, #0
10004154:	d0f2      	beq.n	1000413c <__gnu_Unwind_RaiseException+0x34>
10004156:	2009      	movs	r0, #9
10004158:	b079      	add	sp, #484	; 0x1e4
1000415a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000415c:	4668      	mov	r0, sp
1000415e:	f7ff ff0d 	bl	10003f7c <restore_non_core_regs>
10004162:	2c06      	cmp	r4, #6
10004164:	d1f7      	bne.n	10004156 <__gnu_Unwind_RaiseException+0x4e>
10004166:	4631      	mov	r1, r6
10004168:	4628      	mov	r0, r5
1000416a:	f7ff ff3d 	bl	10003fe8 <unwind_phase2>
1000416e:	bf00      	nop

10004170 <__gnu_Unwind_ForcedUnwind>:
10004170:	b410      	push	{r4}
10004172:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10004174:	60c1      	str	r1, [r0, #12]
10004176:	4619      	mov	r1, r3
10004178:	6182      	str	r2, [r0, #24]
1000417a:	2200      	movs	r2, #0
1000417c:	641c      	str	r4, [r3, #64]	; 0x40
1000417e:	bc10      	pop	{r4}
10004180:	e752      	b.n	10004028 <unwind_phase2_forced>
10004182:	bf00      	nop

10004184 <__gnu_Unwind_Resume>:
10004184:	b570      	push	{r4, r5, r6, lr}
10004186:	6943      	ldr	r3, [r0, #20]
10004188:	68c6      	ldr	r6, [r0, #12]
1000418a:	640b      	str	r3, [r1, #64]	; 0x40
1000418c:	b9ae      	cbnz	r6, 100041ba <__gnu_Unwind_Resume+0x36>
1000418e:	6903      	ldr	r3, [r0, #16]
10004190:	460a      	mov	r2, r1
10004192:	4604      	mov	r4, r0
10004194:	460d      	mov	r5, r1
10004196:	4601      	mov	r1, r0
10004198:	2002      	movs	r0, #2
1000419a:	4798      	blx	r3
1000419c:	2807      	cmp	r0, #7
1000419e:	d005      	beq.n	100041ac <__gnu_Unwind_Resume+0x28>
100041a0:	2808      	cmp	r0, #8
100041a2:	d10f      	bne.n	100041c4 <__gnu_Unwind_Resume+0x40>
100041a4:	4629      	mov	r1, r5
100041a6:	4620      	mov	r0, r4
100041a8:	f7ff ff1e 	bl	10003fe8 <unwind_phase2>
100041ac:	4630      	mov	r0, r6
100041ae:	6c29      	ldr	r1, [r5, #64]	; 0x40
100041b0:	f7ff ff18 	bl	10003fe4 <_Unwind_DebugHook>
100041b4:	1d28      	adds	r0, r5, #4
100041b6:	f000 fb67 	bl	10004888 <__restore_core_regs>
100041ba:	2201      	movs	r2, #1
100041bc:	f7ff ff34 	bl	10004028 <unwind_phase2_forced>
100041c0:	f000 fdf4 	bl	10004dac <abort>
100041c4:	f000 fdf2 	bl	10004dac <abort>

100041c8 <__gnu_Unwind_Resume_or_Rethrow>:
100041c8:	68c2      	ldr	r2, [r0, #12]
100041ca:	b12a      	cbz	r2, 100041d8 <__gnu_Unwind_Resume_or_Rethrow+0x10>
100041cc:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
100041d0:	2200      	movs	r2, #0
100041d2:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
100041d6:	e727      	b.n	10004028 <unwind_phase2_forced>
100041d8:	e796      	b.n	10004108 <__gnu_Unwind_RaiseException>
100041da:	bf00      	nop

100041dc <_Unwind_Complete>:
100041dc:	4770      	bx	lr
100041de:	bf00      	nop

100041e0 <_Unwind_DeleteException>:
100041e0:	6883      	ldr	r3, [r0, #8]
100041e2:	4601      	mov	r1, r0
100041e4:	b10b      	cbz	r3, 100041ea <_Unwind_DeleteException+0xa>
100041e6:	2001      	movs	r0, #1
100041e8:	4718      	bx	r3
100041ea:	4770      	bx	lr

100041ec <_Unwind_VRS_Get>:
100041ec:	2901      	cmp	r1, #1
100041ee:	d015      	beq.n	1000421c <_Unwind_VRS_Get+0x30>
100041f0:	d80c      	bhi.n	1000420c <_Unwind_VRS_Get+0x20>
100041f2:	b98b      	cbnz	r3, 10004218 <_Unwind_VRS_Get+0x2c>
100041f4:	2a0f      	cmp	r2, #15
100041f6:	bf94      	ite	ls
100041f8:	2100      	movls	r1, #0
100041fa:	2101      	movhi	r1, #1
100041fc:	b961      	cbnz	r1, 10004218 <_Unwind_VRS_Get+0x2c>
100041fe:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004202:	4608      	mov	r0, r1
10004204:	6853      	ldr	r3, [r2, #4]
10004206:	9a00      	ldr	r2, [sp, #0]
10004208:	6013      	str	r3, [r2, #0]
1000420a:	4770      	bx	lr
1000420c:	3903      	subs	r1, #3
1000420e:	2901      	cmp	r1, #1
10004210:	bf94      	ite	ls
10004212:	2001      	movls	r0, #1
10004214:	2002      	movhi	r0, #2
10004216:	4770      	bx	lr
10004218:	2002      	movs	r0, #2
1000421a:	4770      	bx	lr
1000421c:	4608      	mov	r0, r1
1000421e:	4770      	bx	lr

10004220 <_Unwind_GetGR>:
10004220:	b510      	push	{r4, lr}
10004222:	b084      	sub	sp, #16
10004224:	2300      	movs	r3, #0
10004226:	460a      	mov	r2, r1
10004228:	ac03      	add	r4, sp, #12
1000422a:	4619      	mov	r1, r3
1000422c:	9400      	str	r4, [sp, #0]
1000422e:	f7ff ffdd 	bl	100041ec <_Unwind_VRS_Get>
10004232:	9803      	ldr	r0, [sp, #12]
10004234:	b004      	add	sp, #16
10004236:	bd10      	pop	{r4, pc}

10004238 <_Unwind_VRS_Set>:
10004238:	2901      	cmp	r1, #1
1000423a:	d015      	beq.n	10004268 <_Unwind_VRS_Set+0x30>
1000423c:	d80c      	bhi.n	10004258 <_Unwind_VRS_Set+0x20>
1000423e:	b98b      	cbnz	r3, 10004264 <_Unwind_VRS_Set+0x2c>
10004240:	2a0f      	cmp	r2, #15
10004242:	bf94      	ite	ls
10004244:	2100      	movls	r1, #0
10004246:	2101      	movhi	r1, #1
10004248:	b961      	cbnz	r1, 10004264 <_Unwind_VRS_Set+0x2c>
1000424a:	9b00      	ldr	r3, [sp, #0]
1000424c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004250:	4608      	mov	r0, r1
10004252:	681b      	ldr	r3, [r3, #0]
10004254:	6053      	str	r3, [r2, #4]
10004256:	4770      	bx	lr
10004258:	3903      	subs	r1, #3
1000425a:	2901      	cmp	r1, #1
1000425c:	bf94      	ite	ls
1000425e:	2001      	movls	r0, #1
10004260:	2002      	movhi	r0, #2
10004262:	4770      	bx	lr
10004264:	2002      	movs	r0, #2
10004266:	4770      	bx	lr
10004268:	4608      	mov	r0, r1
1000426a:	4770      	bx	lr

1000426c <_Unwind_SetGR>:
1000426c:	b510      	push	{r4, lr}
1000426e:	b084      	sub	sp, #16
10004270:	2300      	movs	r3, #0
10004272:	ac03      	add	r4, sp, #12
10004274:	9203      	str	r2, [sp, #12]
10004276:	460a      	mov	r2, r1
10004278:	4619      	mov	r1, r3
1000427a:	9400      	str	r4, [sp, #0]
1000427c:	f7ff ffdc 	bl	10004238 <_Unwind_VRS_Set>
10004280:	b004      	add	sp, #16
10004282:	bd10      	pop	{r4, pc}

10004284 <__gnu_Unwind_Backtrace>:
10004284:	b5f0      	push	{r4, r5, r6, r7, lr}
10004286:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004288:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
1000428c:	1d14      	adds	r4, r2, #4
1000428e:	4606      	mov	r6, r0
10004290:	6413      	str	r3, [r2, #64]	; 0x40
10004292:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004296:	460d      	mov	r5, r1
10004298:	f04f 37ff 	mov.w	r7, #4294967295
1000429c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
1000429e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
100042a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
100042a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
100042a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
100042aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
100042ae:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
100042b2:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
100042b6:	9716      	str	r7, [sp, #88]	; 0x58
100042b8:	e010      	b.n	100042dc <__gnu_Unwind_Backtrace+0x58>
100042ba:	f7ff ffd7 	bl	1000426c <_Unwind_SetGR>
100042be:	4629      	mov	r1, r5
100042c0:	a816      	add	r0, sp, #88	; 0x58
100042c2:	47b0      	blx	r6
100042c4:	4603      	mov	r3, r0
100042c6:	aa16      	add	r2, sp, #88	; 0x58
100042c8:	4669      	mov	r1, sp
100042ca:	2008      	movs	r0, #8
100042cc:	b983      	cbnz	r3, 100042f0 <__gnu_Unwind_Backtrace+0x6c>
100042ce:	9b04      	ldr	r3, [sp, #16]
100042d0:	4798      	blx	r3
100042d2:	2805      	cmp	r0, #5
100042d4:	4604      	mov	r4, r0
100042d6:	d00c      	beq.n	100042f2 <__gnu_Unwind_Backtrace+0x6e>
100042d8:	2809      	cmp	r0, #9
100042da:	d00a      	beq.n	100042f2 <__gnu_Unwind_Backtrace+0x6e>
100042dc:	9926      	ldr	r1, [sp, #152]	; 0x98
100042de:	4668      	mov	r0, sp
100042e0:	f7ff fdfe 	bl	10003ee0 <get_eit_entry>
100042e4:	4603      	mov	r3, r0
100042e6:	466a      	mov	r2, sp
100042e8:	210c      	movs	r1, #12
100042ea:	a816      	add	r0, sp, #88	; 0x58
100042ec:	2b00      	cmp	r3, #0
100042ee:	d0e4      	beq.n	100042ba <__gnu_Unwind_Backtrace+0x36>
100042f0:	2409      	movs	r4, #9
100042f2:	a816      	add	r0, sp, #88	; 0x58
100042f4:	f7ff fe42 	bl	10003f7c <restore_non_core_regs>
100042f8:	4620      	mov	r0, r4
100042fa:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
100042fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004300 <__gnu_unwind_pr_common>:
10004300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004304:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004306:	b089      	sub	sp, #36	; 0x24
10004308:	461e      	mov	r6, r3
1000430a:	460d      	mov	r5, r1
1000430c:	f854 3b04 	ldr.w	r3, [r4], #4
10004310:	4617      	mov	r7, r2
10004312:	f000 0803 	and.w	r8, r0, #3
10004316:	9406      	str	r4, [sp, #24]
10004318:	2e00      	cmp	r6, #0
1000431a:	d07f      	beq.n	1000441c <__gnu_unwind_pr_common+0x11c>
1000431c:	0c1a      	lsrs	r2, r3, #16
1000431e:	041b      	lsls	r3, r3, #16
10004320:	f88d 201d 	strb.w	r2, [sp, #29]
10004324:	b2d2      	uxtb	r2, r2
10004326:	9305      	str	r3, [sp, #20]
10004328:	2302      	movs	r3, #2
1000432a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
1000432e:	f88d 301c 	strb.w	r3, [sp, #28]
10004332:	f1b8 0f02 	cmp.w	r8, #2
10004336:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004338:	bf08      	it	eq
1000433a:	6bac      	ldreq	r4, [r5, #56]	; 0x38
1000433c:	f013 0301 	ands.w	r3, r3, #1
10004340:	d008      	beq.n	10004354 <__gnu_unwind_pr_common+0x54>
10004342:	a905      	add	r1, sp, #20
10004344:	4638      	mov	r0, r7
10004346:	f000 fba1 	bl	10004a8c <__gnu_unwind_execute>
1000434a:	bb90      	cbnz	r0, 100043b2 <__gnu_unwind_pr_common+0xb2>
1000434c:	2008      	movs	r0, #8
1000434e:	b009      	add	sp, #36	; 0x24
10004350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004354:	f8d4 a000 	ldr.w	sl, [r4]
10004358:	f1ba 0f00 	cmp.w	sl, #0
1000435c:	d0f1      	beq.n	10004342 <__gnu_unwind_pr_common+0x42>
1000435e:	9301      	str	r3, [sp, #4]
10004360:	f000 0308 	and.w	r3, r0, #8
10004364:	9302      	str	r3, [sp, #8]
10004366:	2e02      	cmp	r6, #2
10004368:	d054      	beq.n	10004414 <__gnu_unwind_pr_common+0x114>
1000436a:	f8b4 a000 	ldrh.w	sl, [r4]
1000436e:	3404      	adds	r4, #4
10004370:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004374:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004376:	f029 0b01 	bic.w	fp, r9, #1
1000437a:	210f      	movs	r1, #15
1000437c:	4638      	mov	r0, r7
1000437e:	449b      	add	fp, r3
10004380:	f7ff ff4e 	bl	10004220 <_Unwind_GetGR>
10004384:	4583      	cmp	fp, r0
10004386:	d818      	bhi.n	100043ba <__gnu_unwind_pr_common+0xba>
10004388:	f02a 0301 	bic.w	r3, sl, #1
1000438c:	449b      	add	fp, r3
1000438e:	4583      	cmp	fp, r0
10004390:	d913      	bls.n	100043ba <__gnu_unwind_pr_common+0xba>
10004392:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004396:	f00a 0a01 	and.w	sl, sl, #1
1000439a:	f003 0302 	and.w	r3, r3, #2
1000439e:	ea43 030a 	orr.w	r3, r3, sl
100043a2:	2b01      	cmp	r3, #1
100043a4:	f000 80bf 	beq.w	10004526 <__gnu_unwind_pr_common+0x226>
100043a8:	2b02      	cmp	r3, #2
100043aa:	f000 8089 	beq.w	100044c0 <__gnu_unwind_pr_common+0x1c0>
100043ae:	2b00      	cmp	r3, #0
100043b0:	d04d      	beq.n	1000444e <__gnu_unwind_pr_common+0x14e>
100043b2:	2009      	movs	r0, #9
100043b4:	b009      	add	sp, #36	; 0x24
100043b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100043ba:	ea4f 0349 	mov.w	r3, r9, lsl #1
100043be:	f00a 0a01 	and.w	sl, sl, #1
100043c2:	f003 0302 	and.w	r3, r3, #2
100043c6:	ea43 030a 	orr.w	r3, r3, sl
100043ca:	2b01      	cmp	r3, #1
100043cc:	d03a      	beq.n	10004444 <__gnu_unwind_pr_common+0x144>
100043ce:	2b02      	cmp	r3, #2
100043d0:	d02a      	beq.n	10004428 <__gnu_unwind_pr_common+0x128>
100043d2:	2b00      	cmp	r3, #0
100043d4:	d1ed      	bne.n	100043b2 <__gnu_unwind_pr_common+0xb2>
100043d6:	3404      	adds	r4, #4
100043d8:	f8d4 a000 	ldr.w	sl, [r4]
100043dc:	f1ba 0f00 	cmp.w	sl, #0
100043e0:	d1c1      	bne.n	10004366 <__gnu_unwind_pr_common+0x66>
100043e2:	a905      	add	r1, sp, #20
100043e4:	4638      	mov	r0, r7
100043e6:	f000 fb51 	bl	10004a8c <__gnu_unwind_execute>
100043ea:	2800      	cmp	r0, #0
100043ec:	d1e1      	bne.n	100043b2 <__gnu_unwind_pr_common+0xb2>
100043ee:	9b01      	ldr	r3, [sp, #4]
100043f0:	2b00      	cmp	r3, #0
100043f2:	d0ab      	beq.n	1000434c <__gnu_unwind_pr_common+0x4c>
100043f4:	210f      	movs	r1, #15
100043f6:	4638      	mov	r0, r7
100043f8:	f7ff ff12 	bl	10004220 <_Unwind_GetGR>
100043fc:	210e      	movs	r1, #14
100043fe:	4602      	mov	r2, r0
10004400:	4638      	mov	r0, r7
10004402:	f7ff ff33 	bl	1000426c <_Unwind_SetGR>
10004406:	4638      	mov	r0, r7
10004408:	4a6e      	ldr	r2, [pc, #440]	; (100045c4 <__gnu_unwind_pr_common+0x2c4>)
1000440a:	210f      	movs	r1, #15
1000440c:	f7ff ff2e 	bl	1000426c <_Unwind_SetGR>
10004410:	2007      	movs	r0, #7
10004412:	e7cf      	b.n	100043b4 <__gnu_unwind_pr_common+0xb4>
10004414:	f8d4 9004 	ldr.w	r9, [r4, #4]
10004418:	3408      	adds	r4, #8
1000441a:	e7ab      	b.n	10004374 <__gnu_unwind_pr_common+0x74>
1000441c:	021b      	lsls	r3, r3, #8
1000441e:	9305      	str	r3, [sp, #20]
10004420:	2303      	movs	r3, #3
10004422:	f8ad 301c 	strh.w	r3, [sp, #28]
10004426:	e784      	b.n	10004332 <__gnu_unwind_pr_common+0x32>
10004428:	6823      	ldr	r3, [r4, #0]
1000442a:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
1000442e:	f1b8 0f00 	cmp.w	r8, #0
10004432:	d121      	bne.n	10004478 <__gnu_unwind_pr_common+0x178>
10004434:	2b00      	cmp	r3, #0
10004436:	da00      	bge.n	1000443a <__gnu_unwind_pr_common+0x13a>
10004438:	3404      	adds	r4, #4
1000443a:	f10b 0b01 	add.w	fp, fp, #1
1000443e:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10004442:	e7c9      	b.n	100043d8 <__gnu_unwind_pr_common+0xd8>
10004444:	f1b8 0f00 	cmp.w	r8, #0
10004448:	d120      	bne.n	1000448c <__gnu_unwind_pr_common+0x18c>
1000444a:	3408      	adds	r4, #8
1000444c:	e7c4      	b.n	100043d8 <__gnu_unwind_pr_common+0xd8>
1000444e:	f1b8 0f00 	cmp.w	r8, #0
10004452:	d0c0      	beq.n	100043d6 <__gnu_unwind_pr_common+0xd6>
10004454:	4620      	mov	r0, r4
10004456:	3404      	adds	r4, #4
10004458:	f7ff fcf4 	bl	10003e44 <selfrel_offset31>
1000445c:	4606      	mov	r6, r0
1000445e:	63ac      	str	r4, [r5, #56]	; 0x38
10004460:	4628      	mov	r0, r5
10004462:	e000      	b.n	10004466 <__gnu_unwind_pr_common+0x166>
10004464:	bf00      	nop
10004466:	2800      	cmp	r0, #0
10004468:	d0a3      	beq.n	100043b2 <__gnu_unwind_pr_common+0xb2>
1000446a:	4638      	mov	r0, r7
1000446c:	4632      	mov	r2, r6
1000446e:	210f      	movs	r1, #15
10004470:	f7ff fefc 	bl	1000426c <_Unwind_SetGR>
10004474:	2007      	movs	r0, #7
10004476:	e79d      	b.n	100043b4 <__gnu_unwind_pr_common+0xb4>
10004478:	f8d5 9020 	ldr.w	r9, [r5, #32]
1000447c:	210d      	movs	r1, #13
1000447e:	4638      	mov	r0, r7
10004480:	f7ff fece 	bl	10004220 <_Unwind_GetGR>
10004484:	4581      	cmp	r9, r0
10004486:	d079      	beq.n	1000457c <__gnu_unwind_pr_common+0x27c>
10004488:	6823      	ldr	r3, [r4, #0]
1000448a:	e7d3      	b.n	10004434 <__gnu_unwind_pr_common+0x134>
1000448c:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004490:	210d      	movs	r1, #13
10004492:	4638      	mov	r0, r7
10004494:	f7ff fec4 	bl	10004220 <_Unwind_GetGR>
10004498:	4581      	cmp	r9, r0
1000449a:	d1d6      	bne.n	1000444a <__gnu_unwind_pr_common+0x14a>
1000449c:	6aab      	ldr	r3, [r5, #40]	; 0x28
1000449e:	429c      	cmp	r4, r3
100044a0:	d1d3      	bne.n	1000444a <__gnu_unwind_pr_common+0x14a>
100044a2:	4620      	mov	r0, r4
100044a4:	210f      	movs	r1, #15
100044a6:	f7ff fccd 	bl	10003e44 <selfrel_offset31>
100044aa:	4602      	mov	r2, r0
100044ac:	4638      	mov	r0, r7
100044ae:	f7ff fedd 	bl	1000426c <_Unwind_SetGR>
100044b2:	4638      	mov	r0, r7
100044b4:	462a      	mov	r2, r5
100044b6:	2100      	movs	r1, #0
100044b8:	f7ff fed8 	bl	1000426c <_Unwind_SetGR>
100044bc:	2007      	movs	r0, #7
100044be:	e779      	b.n	100043b4 <__gnu_unwind_pr_common+0xb4>
100044c0:	6823      	ldr	r3, [r4, #0]
100044c2:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
100044c6:	f1b8 0f00 	cmp.w	r8, #0
100044ca:	d1d5      	bne.n	10004478 <__gnu_unwind_pr_common+0x178>
100044cc:	9a02      	ldr	r2, [sp, #8]
100044ce:	b112      	cbz	r2, 100044d6 <__gnu_unwind_pr_common+0x1d6>
100044d0:	f1bb 0f00 	cmp.w	fp, #0
100044d4:	d1ae      	bne.n	10004434 <__gnu_unwind_pr_common+0x134>
100044d6:	f105 0358 	add.w	r3, r5, #88	; 0x58
100044da:	f8cd 800c 	str.w	r8, [sp, #12]
100044de:	f104 0a04 	add.w	sl, r4, #4
100044e2:	46b0      	mov	r8, r6
100044e4:	f04f 0900 	mov.w	r9, #0
100044e8:	461e      	mov	r6, r3
100044ea:	e00d      	b.n	10004508 <__gnu_unwind_pr_common+0x208>
100044ec:	4650      	mov	r0, sl
100044ee:	9604      	str	r6, [sp, #16]
100044f0:	2200      	movs	r2, #0
100044f2:	f7ff fd71 	bl	10003fd8 <_Unwind_decode_typeinfo_ptr.constprop.0>
100044f6:	ab04      	add	r3, sp, #16
100044f8:	4601      	mov	r1, r0
100044fa:	4628      	mov	r0, r5
100044fc:	f10a 0a04 	add.w	sl, sl, #4
10004500:	e000      	b.n	10004504 <__gnu_unwind_pr_common+0x204>
10004502:	bf00      	nop
10004504:	2800      	cmp	r0, #0
10004506:	d14a      	bne.n	1000459e <__gnu_unwind_pr_common+0x29e>
10004508:	45d9      	cmp	r9, fp
1000450a:	f109 0901 	add.w	r9, r9, #1
1000450e:	d1ed      	bne.n	100044ec <__gnu_unwind_pr_common+0x1ec>
10004510:	210d      	movs	r1, #13
10004512:	4638      	mov	r0, r7
10004514:	f7ff fe84 	bl	10004220 <_Unwind_GetGR>
10004518:	9b04      	ldr	r3, [sp, #16]
1000451a:	4602      	mov	r2, r0
1000451c:	2006      	movs	r0, #6
1000451e:	622a      	str	r2, [r5, #32]
10004520:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10004524:	e746      	b.n	100043b4 <__gnu_unwind_pr_common+0xb4>
10004526:	f1b8 0f00 	cmp.w	r8, #0
1000452a:	d1af      	bne.n	1000448c <__gnu_unwind_pr_common+0x18c>
1000452c:	6863      	ldr	r3, [r4, #4]
1000452e:	6822      	ldr	r2, [r4, #0]
10004530:	1c99      	adds	r1, r3, #2
10004532:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10004536:	f43f af3c 	beq.w	100043b2 <__gnu_unwind_pr_common+0xb2>
1000453a:	f105 0158 	add.w	r1, r5, #88	; 0x58
1000453e:	3301      	adds	r3, #1
10004540:	9104      	str	r1, [sp, #16]
10004542:	d031      	beq.n	100045a8 <__gnu_unwind_pr_common+0x2a8>
10004544:	1d20      	adds	r0, r4, #4
10004546:	f7ff fd47 	bl	10003fd8 <_Unwind_decode_typeinfo_ptr.constprop.0>
1000454a:	ab04      	add	r3, sp, #16
1000454c:	4601      	mov	r1, r0
1000454e:	4628      	mov	r0, r5
10004550:	e000      	b.n	10004554 <__gnu_unwind_pr_common+0x254>
10004552:	bf00      	nop
10004554:	2800      	cmp	r0, #0
10004556:	f43f af78 	beq.w	1000444a <__gnu_unwind_pr_common+0x14a>
1000455a:	4681      	mov	r9, r0
1000455c:	210d      	movs	r1, #13
1000455e:	4638      	mov	r0, r7
10004560:	f7ff fe5e 	bl	10004220 <_Unwind_GetGR>
10004564:	f1b9 0f02 	cmp.w	r9, #2
10004568:	6228      	str	r0, [r5, #32]
1000456a:	d122      	bne.n	100045b2 <__gnu_unwind_pr_common+0x2b2>
1000456c:	462b      	mov	r3, r5
1000456e:	9a04      	ldr	r2, [sp, #16]
10004570:	f843 2f2c 	str.w	r2, [r3, #44]!
10004574:	626b      	str	r3, [r5, #36]	; 0x24
10004576:	2006      	movs	r0, #6
10004578:	62ac      	str	r4, [r5, #40]	; 0x28
1000457a:	e71b      	b.n	100043b4 <__gnu_unwind_pr_common+0xb4>
1000457c:	6aab      	ldr	r3, [r5, #40]	; 0x28
1000457e:	429c      	cmp	r4, r3
10004580:	d182      	bne.n	10004488 <__gnu_unwind_pr_common+0x188>
10004582:	2304      	movs	r3, #4
10004584:	2200      	movs	r2, #0
10004586:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
1000458a:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
1000458e:	18e3      	adds	r3, r4, r3
10004590:	636b      	str	r3, [r5, #52]	; 0x34
10004592:	6823      	ldr	r3, [r4, #0]
10004594:	2b00      	cmp	r3, #0
10004596:	db0f      	blt.n	100045b8 <__gnu_unwind_pr_common+0x2b8>
10004598:	2301      	movs	r3, #1
1000459a:	9301      	str	r3, [sp, #4]
1000459c:	e74d      	b.n	1000443a <__gnu_unwind_pr_common+0x13a>
1000459e:	4646      	mov	r6, r8
100045a0:	6823      	ldr	r3, [r4, #0]
100045a2:	f8dd 800c 	ldr.w	r8, [sp, #12]
100045a6:	e745      	b.n	10004434 <__gnu_unwind_pr_common+0x134>
100045a8:	210d      	movs	r1, #13
100045aa:	4638      	mov	r0, r7
100045ac:	f7ff fe38 	bl	10004220 <_Unwind_GetGR>
100045b0:	6228      	str	r0, [r5, #32]
100045b2:	9b04      	ldr	r3, [sp, #16]
100045b4:	626b      	str	r3, [r5, #36]	; 0x24
100045b6:	e7de      	b.n	10004576 <__gnu_unwind_pr_common+0x276>
100045b8:	f10b 0001 	add.w	r0, fp, #1
100045bc:	210f      	movs	r1, #15
100045be:	eb04 0080 	add.w	r0, r4, r0, lsl #2
100045c2:	e770      	b.n	100044a6 <__gnu_unwind_pr_common+0x1a6>
100045c4:	00000000 	andeq	r0, r0, r0

100045c8 <__aeabi_unwind_cpp_pr0>:
100045c8:	2300      	movs	r3, #0
100045ca:	e699      	b.n	10004300 <__gnu_unwind_pr_common>

100045cc <__aeabi_unwind_cpp_pr1>:
100045cc:	2301      	movs	r3, #1
100045ce:	e697      	b.n	10004300 <__gnu_unwind_pr_common>

100045d0 <__aeabi_unwind_cpp_pr2>:
100045d0:	2302      	movs	r3, #2
100045d2:	e695      	b.n	10004300 <__gnu_unwind_pr_common>

100045d4 <_Unwind_VRS_Pop>:
100045d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100045d8:	4606      	mov	r6, r0
100045da:	b0c3      	sub	sp, #268	; 0x10c
100045dc:	4615      	mov	r5, r2
100045de:	461c      	mov	r4, r3
100045e0:	2904      	cmp	r1, #4
100045e2:	f200 80c2 	bhi.w	1000476a <_Unwind_VRS_Pop+0x196>
100045e6:	e8df f001 	tbb	[pc, r1]
100045ea:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
100045ee:	2c000003 	stccs	0, cr0, [r0], {3}
100045f2:	f040 80ba 	bne.w	1000476a <_Unwind_VRS_Pop+0x196>
100045f6:	2a10      	cmp	r2, #16
100045f8:	f200 80b7 	bhi.w	1000476a <_Unwind_VRS_Pop+0x196>
100045fc:	6803      	ldr	r3, [r0, #0]
100045fe:	06df      	lsls	r7, r3, #27
10004600:	f100 80b7 	bmi.w	10004772 <_Unwind_VRS_Pop+0x19e>
10004604:	af20      	add	r7, sp, #128	; 0x80
10004606:	4638      	mov	r0, r7
10004608:	f000 f9b0 	bl	1000496c <__gnu_Unwind_Save_WMMXC>
1000460c:	6bb4      	ldr	r4, [r6, #56]	; 0x38
1000460e:	4639      	mov	r1, r7
10004610:	2300      	movs	r3, #0
10004612:	f04f 0c01 	mov.w	ip, #1
10004616:	fa0c f203 	lsl.w	r2, ip, r3
1000461a:	4620      	mov	r0, r4
1000461c:	3301      	adds	r3, #1
1000461e:	422a      	tst	r2, r5
10004620:	d003      	beq.n	1000462a <_Unwind_VRS_Pop+0x56>
10004622:	f850 2b04 	ldr.w	r2, [r0], #4
10004626:	4604      	mov	r4, r0
10004628:	600a      	str	r2, [r1, #0]
1000462a:	2b04      	cmp	r3, #4
1000462c:	f101 0104 	add.w	r1, r1, #4
10004630:	d1f1      	bne.n	10004616 <_Unwind_VRS_Pop+0x42>
10004632:	4638      	mov	r0, r7
10004634:	63b4      	str	r4, [r6, #56]	; 0x38
10004636:	f000 f98f 	bl	10004958 <__gnu_Unwind_Restore_WMMXC>
1000463a:	2000      	movs	r0, #0
1000463c:	b043      	add	sp, #268	; 0x10c
1000463e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004642:	2c03      	cmp	r4, #3
10004644:	f040 8091 	bne.w	1000476a <_Unwind_VRS_Pop+0x196>
10004648:	fa1f f882 	uxth.w	r8, r2
1000464c:	0c14      	lsrs	r4, r2, #16
1000464e:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10004652:	2d10      	cmp	r5, #16
10004654:	f200 8089 	bhi.w	1000476a <_Unwind_VRS_Pop+0x196>
10004658:	6803      	ldr	r3, [r0, #0]
1000465a:	071a      	lsls	r2, r3, #28
1000465c:	f100 80cd 	bmi.w	100047fa <_Unwind_VRS_Pop+0x226>
10004660:	af20      	add	r7, sp, #128	; 0x80
10004662:	4638      	mov	r0, r7
10004664:	f000 f956 	bl	10004914 <__gnu_Unwind_Save_WMMXD>
10004668:	6bb5      	ldr	r5, [r6, #56]	; 0x38
1000466a:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
1000466e:	f1b8 0f00 	cmp.w	r8, #0
10004672:	d00b      	beq.n	1000468c <_Unwind_VRS_Pop+0xb8>
10004674:	460b      	mov	r3, r1
10004676:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
1000467a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
1000467e:	1ae8      	subs	r0, r5, r3
10004680:	581a      	ldr	r2, [r3, r0]
10004682:	f843 2b04 	str.w	r2, [r3], #4
10004686:	428b      	cmp	r3, r1
10004688:	d1fa      	bne.n	10004680 <_Unwind_VRS_Pop+0xac>
1000468a:	4445      	add	r5, r8
1000468c:	4638      	mov	r0, r7
1000468e:	63b5      	str	r5, [r6, #56]	; 0x38
10004690:	f000 f91e 	bl	100048d0 <__gnu_Unwind_Restore_WMMXD>
10004694:	2000      	movs	r0, #0
10004696:	b043      	add	sp, #268	; 0x10c
10004698:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000469c:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
100046a0:	ea4f 4812 	mov.w	r8, r2, lsr #16
100046a4:	b295      	uxth	r5, r2
100046a6:	2b01      	cmp	r3, #1
100046a8:	d15f      	bne.n	1000476a <_Unwind_VRS_Pop+0x196>
100046aa:	2c01      	cmp	r4, #1
100046ac:	eb08 0905 	add.w	r9, r8, r5
100046b0:	d058      	beq.n	10004764 <_Unwind_VRS_Pop+0x190>
100046b2:	f1b9 0f20 	cmp.w	r9, #32
100046b6:	d858      	bhi.n	1000476a <_Unwind_VRS_Pop+0x196>
100046b8:	f1b8 0f0f 	cmp.w	r8, #15
100046bc:	d975      	bls.n	100047aa <_Unwind_VRS_Pop+0x1d6>
100046be:	2c05      	cmp	r4, #5
100046c0:	46a9      	mov	r9, r5
100046c2:	f000 80a4 	beq.w	1000480e <_Unwind_VRS_Pop+0x23a>
100046c6:	2d00      	cmp	r5, #0
100046c8:	d14f      	bne.n	1000476a <_Unwind_VRS_Pop+0x196>
100046ca:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100046cc:	b365      	cbz	r5, 10004728 <_Unwind_VRS_Pop+0x154>
100046ce:	af20      	add	r7, sp, #128	; 0x80
100046d0:	f04f 0900 	mov.w	r9, #0
100046d4:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
100046d8:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
100046dc:	3f04      	subs	r7, #4
100046de:	f853 1b04 	ldr.w	r1, [r3], #4
100046e2:	429d      	cmp	r5, r3
100046e4:	f847 1f04 	str.w	r1, [r7, #4]!
100046e8:	d1f9      	bne.n	100046de <_Unwind_VRS_Pop+0x10a>
100046ea:	f1b9 0f00 	cmp.w	r9, #0
100046ee:	d00f      	beq.n	10004710 <_Unwind_VRS_Pop+0x13c>
100046f0:	466f      	mov	r7, sp
100046f2:	4641      	mov	r1, r8
100046f4:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
100046f8:	2910      	cmp	r1, #16
100046fa:	bf38      	it	cc
100046fc:	2110      	movcc	r1, #16
100046fe:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
10004702:	3984      	subs	r1, #132	; 0x84
10004704:	f853 0b04 	ldr.w	r0, [r3], #4
10004708:	429d      	cmp	r5, r3
1000470a:	f841 0f04 	str.w	r0, [r1, #4]!
1000470e:	d1f9      	bne.n	10004704 <_Unwind_VRS_Pop+0x130>
10004710:	2c01      	cmp	r4, #1
10004712:	d07a      	beq.n	1000480a <_Unwind_VRS_Pop+0x236>
10004714:	f1b8 0f0f 	cmp.w	r8, #15
10004718:	63b5      	str	r5, [r6, #56]	; 0x38
1000471a:	d96a      	bls.n	100047f2 <_Unwind_VRS_Pop+0x21e>
1000471c:	f1b9 0f00 	cmp.w	r9, #0
10004720:	d002      	beq.n	10004728 <_Unwind_VRS_Pop+0x154>
10004722:	4668      	mov	r0, sp
10004724:	f000 f8cc 	bl	100048c0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10004728:	2000      	movs	r0, #0
1000472a:	b043      	add	sp, #268	; 0x10c
1000472c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004730:	b9dc      	cbnz	r4, 1000476a <_Unwind_VRS_Pop+0x196>
10004732:	6b87      	ldr	r7, [r0, #56]	; 0x38
10004734:	4623      	mov	r3, r4
10004736:	fa1f fc82 	uxth.w	ip, r2
1000473a:	2001      	movs	r0, #1
1000473c:	1d34      	adds	r4, r6, #4
1000473e:	fa00 f103 	lsl.w	r1, r0, r3
10004742:	463a      	mov	r2, r7
10004744:	ea11 0f0c 	tst.w	r1, ip
10004748:	d004      	beq.n	10004754 <_Unwind_VRS_Pop+0x180>
1000474a:	f852 1b04 	ldr.w	r1, [r2], #4
1000474e:	4617      	mov	r7, r2
10004750:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10004754:	3301      	adds	r3, #1
10004756:	2b10      	cmp	r3, #16
10004758:	d1f1      	bne.n	1000473e <_Unwind_VRS_Pop+0x16a>
1000475a:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
1000475e:	d1e3      	bne.n	10004728 <_Unwind_VRS_Pop+0x154>
10004760:	63b7      	str	r7, [r6, #56]	; 0x38
10004762:	e003      	b.n	1000476c <_Unwind_VRS_Pop+0x198>
10004764:	f1b9 0f10 	cmp.w	r9, #16
10004768:	d90b      	bls.n	10004782 <_Unwind_VRS_Pop+0x1ae>
1000476a:	2002      	movs	r0, #2
1000476c:	b043      	add	sp, #268	; 0x10c
1000476e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004772:	f023 0310 	bic.w	r3, r3, #16
10004776:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
1000477a:	6033      	str	r3, [r6, #0]
1000477c:	f000 f8f6 	bl	1000496c <__gnu_Unwind_Save_WMMXC>
10004780:	e740      	b.n	10004604 <_Unwind_VRS_Pop+0x30>
10004782:	f1b8 0f0f 	cmp.w	r8, #15
10004786:	d8f0      	bhi.n	1000476a <_Unwind_VRS_Pop+0x196>
10004788:	6803      	ldr	r3, [r0, #0]
1000478a:	07d8      	lsls	r0, r3, #31
1000478c:	d450      	bmi.n	10004830 <_Unwind_VRS_Pop+0x25c>
1000478e:	af20      	add	r7, sp, #128	; 0x80
10004790:	4638      	mov	r0, r7
10004792:	f000 f889 	bl	100048a8 <__gnu_Unwind_Save_VFP>
10004796:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10004798:	2d00      	cmp	r5, #0
1000479a:	d199      	bne.n	100046d0 <_Unwind_VRS_Pop+0xfc>
1000479c:	461d      	mov	r5, r3
1000479e:	3504      	adds	r5, #4
100047a0:	4638      	mov	r0, r7
100047a2:	63b5      	str	r5, [r6, #56]	; 0x38
100047a4:	f000 f87c 	bl	100048a0 <__gnu_Unwind_Restore_VFP>
100047a8:	e7be      	b.n	10004728 <_Unwind_VRS_Pop+0x154>
100047aa:	f1b9 0f10 	cmp.w	r9, #16
100047ae:	d958      	bls.n	10004862 <_Unwind_VRS_Pop+0x28e>
100047b0:	2c05      	cmp	r4, #5
100047b2:	d1da      	bne.n	1000476a <_Unwind_VRS_Pop+0x196>
100047b4:	6833      	ldr	r3, [r6, #0]
100047b6:	f1a9 0910 	sub.w	r9, r9, #16
100047ba:	07dd      	lsls	r5, r3, #31
100047bc:	d509      	bpl.n	100047d2 <_Unwind_VRS_Pop+0x1fe>
100047be:	f023 0301 	bic.w	r3, r3, #1
100047c2:	4630      	mov	r0, r6
100047c4:	f043 0302 	orr.w	r3, r3, #2
100047c8:	f840 3b48 	str.w	r3, [r0], #72
100047cc:	f000 f874 	bl	100048b8 <__gnu_Unwind_Save_VFP_D>
100047d0:	6833      	ldr	r3, [r6, #0]
100047d2:	0759      	lsls	r1, r3, #29
100047d4:	d421      	bmi.n	1000481a <_Unwind_VRS_Pop+0x246>
100047d6:	a820      	add	r0, sp, #128	; 0x80
100047d8:	f000 f86e 	bl	100048b8 <__gnu_Unwind_Save_VFP_D>
100047dc:	466f      	mov	r7, sp
100047de:	f1c8 0510 	rsb	r5, r8, #16
100047e2:	4638      	mov	r0, r7
100047e4:	f000 f870 	bl	100048c8 <__gnu_Unwind_Save_VFP_D_16_to_31>
100047e8:	2d00      	cmp	r5, #0
100047ea:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100047ec:	dd81      	ble.n	100046f2 <_Unwind_VRS_Pop+0x11e>
100047ee:	af20      	add	r7, sp, #128	; 0x80
100047f0:	e770      	b.n	100046d4 <_Unwind_VRS_Pop+0x100>
100047f2:	a820      	add	r0, sp, #128	; 0x80
100047f4:	f000 f85c 	bl	100048b0 <__gnu_Unwind_Restore_VFP_D>
100047f8:	e790      	b.n	1000471c <_Unwind_VRS_Pop+0x148>
100047fa:	f023 0308 	bic.w	r3, r3, #8
100047fe:	f500 70a8 	add.w	r0, r0, #336	; 0x150
10004802:	6033      	str	r3, [r6, #0]
10004804:	f000 f886 	bl	10004914 <__gnu_Unwind_Save_WMMXD>
10004808:	e72a      	b.n	10004660 <_Unwind_VRS_Pop+0x8c>
1000480a:	af20      	add	r7, sp, #128	; 0x80
1000480c:	e7c7      	b.n	1000479e <_Unwind_VRS_Pop+0x1ca>
1000480e:	2d00      	cmp	r5, #0
10004810:	f43f af5b 	beq.w	100046ca <_Unwind_VRS_Pop+0xf6>
10004814:	6833      	ldr	r3, [r6, #0]
10004816:	075a      	lsls	r2, r3, #29
10004818:	d5e0      	bpl.n	100047dc <_Unwind_VRS_Pop+0x208>
1000481a:	f023 0304 	bic.w	r3, r3, #4
1000481e:	4630      	mov	r0, r6
10004820:	f840 3bd0 	str.w	r3, [r0], #208
10004824:	f000 f850 	bl	100048c8 <__gnu_Unwind_Save_VFP_D_16_to_31>
10004828:	f1b8 0f0f 	cmp.w	r8, #15
1000482c:	d8d6      	bhi.n	100047dc <_Unwind_VRS_Pop+0x208>
1000482e:	e7d2      	b.n	100047d6 <_Unwind_VRS_Pop+0x202>
10004830:	f023 0303 	bic.w	r3, r3, #3
10004834:	4630      	mov	r0, r6
10004836:	f840 3b48 	str.w	r3, [r0], #72
1000483a:	f000 f835 	bl	100048a8 <__gnu_Unwind_Save_VFP>
1000483e:	2c01      	cmp	r4, #1
10004840:	d0a5      	beq.n	1000478e <_Unwind_VRS_Pop+0x1ba>
10004842:	f1b8 0f0f 	cmp.w	r8, #15
10004846:	f63f af40 	bhi.w	100046ca <_Unwind_VRS_Pop+0xf6>
1000484a:	af20      	add	r7, sp, #128	; 0x80
1000484c:	4638      	mov	r0, r7
1000484e:	f000 f833 	bl	100048b8 <__gnu_Unwind_Save_VFP_D>
10004852:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10004854:	2d00      	cmp	r5, #0
10004856:	f47f af3b 	bne.w	100046d0 <_Unwind_VRS_Pop+0xfc>
1000485a:	4638      	mov	r0, r7
1000485c:	f000 f828 	bl	100048b0 <__gnu_Unwind_Restore_VFP_D>
10004860:	e762      	b.n	10004728 <_Unwind_VRS_Pop+0x154>
10004862:	6833      	ldr	r3, [r6, #0]
10004864:	07d9      	lsls	r1, r3, #31
10004866:	d5ea      	bpl.n	1000483e <_Unwind_VRS_Pop+0x26a>
10004868:	2c05      	cmp	r4, #5
1000486a:	d1e1      	bne.n	10004830 <_Unwind_VRS_Pop+0x25c>
1000486c:	f023 0301 	bic.w	r3, r3, #1
10004870:	4630      	mov	r0, r6
10004872:	af20      	add	r7, sp, #128	; 0x80
10004874:	f043 0302 	orr.w	r3, r3, #2
10004878:	f840 3b48 	str.w	r3, [r0], #72
1000487c:	f000 f81c 	bl	100048b8 <__gnu_Unwind_Save_VFP_D>
10004880:	4638      	mov	r0, r7
10004882:	f000 f819 	bl	100048b8 <__gnu_Unwind_Save_VFP_D>
10004886:	e7e4      	b.n	10004852 <_Unwind_VRS_Pop+0x27e>

10004888 <__restore_core_regs>:
10004888:	f100 0134 	add.w	r1, r0, #52	; 0x34
1000488c:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
10004890:	469c      	mov	ip, r3
10004892:	46a6      	mov	lr, r4
10004894:	f84c 5d04 	str.w	r5, [ip, #-4]!
10004898:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000489c:	46e5      	mov	sp, ip
1000489e:	bd00      	pop	{pc}

100048a0 <__gnu_Unwind_Restore_VFP>:
100048a0:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
100048a4:	4770      	bx	lr
100048a6:	bf00      	nop

100048a8 <__gnu_Unwind_Save_VFP>:
100048a8:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
100048ac:	4770      	bx	lr
100048ae:	bf00      	nop

100048b0 <__gnu_Unwind_Restore_VFP_D>:
100048b0:	ec90 0b20 	vldmia	r0, {d0-d15}
100048b4:	4770      	bx	lr
100048b6:	bf00      	nop

100048b8 <__gnu_Unwind_Save_VFP_D>:
100048b8:	ec80 0b20 	vstmia	r0, {d0-d15}
100048bc:	4770      	bx	lr
100048be:	bf00      	nop

100048c0 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
100048c0:	ecd0 0b20 	vldmia	r0, {d16-d31}
100048c4:	4770      	bx	lr
100048c6:	bf00      	nop

100048c8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
100048c8:	ecc0 0b20 	vstmia	r0, {d16-d31}
100048cc:	4770      	bx	lr
100048ce:	bf00      	nop

100048d0 <__gnu_Unwind_Restore_WMMXD>:
100048d0:	ecf0 0102 	ldfe	f0, [r0], #8
100048d4:	ecf0 1102 	ldfe	f1, [r0], #8
100048d8:	ecf0 2102 	ldfe	f2, [r0], #8
100048dc:	ecf0 3102 	ldfe	f3, [r0], #8
100048e0:	ecf0 4102 	ldfe	f4, [r0], #8
100048e4:	ecf0 5102 	ldfe	f5, [r0], #8
100048e8:	ecf0 6102 	ldfe	f6, [r0], #8
100048ec:	ecf0 7102 	ldfe	f7, [r0], #8
100048f0:	ecf0 8102 	ldfp	f0, [r0], #8
100048f4:	ecf0 9102 	ldfp	f1, [r0], #8
100048f8:	ecf0 a102 	ldfp	f2, [r0], #8
100048fc:	ecf0 b102 	ldfp	f3, [r0], #8
10004900:	ecf0 c102 	ldfp	f4, [r0], #8
10004904:	ecf0 d102 	ldfp	f5, [r0], #8
10004908:	ecf0 e102 	ldfp	f6, [r0], #8
1000490c:	ecf0 f102 	ldfp	f7, [r0], #8
10004910:	4770      	bx	lr
10004912:	bf00      	nop

10004914 <__gnu_Unwind_Save_WMMXD>:
10004914:	ece0 0102 	stfe	f0, [r0], #8
10004918:	ece0 1102 	stfe	f1, [r0], #8
1000491c:	ece0 2102 	stfe	f2, [r0], #8
10004920:	ece0 3102 	stfe	f3, [r0], #8
10004924:	ece0 4102 	stfe	f4, [r0], #8
10004928:	ece0 5102 	stfe	f5, [r0], #8
1000492c:	ece0 6102 	stfe	f6, [r0], #8
10004930:	ece0 7102 	stfe	f7, [r0], #8
10004934:	ece0 8102 	stfp	f0, [r0], #8
10004938:	ece0 9102 	stfp	f1, [r0], #8
1000493c:	ece0 a102 	stfp	f2, [r0], #8
10004940:	ece0 b102 	stfp	f3, [r0], #8
10004944:	ece0 c102 	stfp	f4, [r0], #8
10004948:	ece0 d102 	stfp	f5, [r0], #8
1000494c:	ece0 e102 	stfp	f6, [r0], #8
10004950:	ece0 f102 	stfp	f7, [r0], #8
10004954:	4770      	bx	lr
10004956:	bf00      	nop

10004958 <__gnu_Unwind_Restore_WMMXC>:
10004958:	fcb0 8101 	ldc2	1, cr8, [r0], #4
1000495c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10004960:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10004964:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10004968:	4770      	bx	lr
1000496a:	bf00      	nop

1000496c <__gnu_Unwind_Save_WMMXC>:
1000496c:	fca0 8101 	stc2	1, cr8, [r0], #4
10004970:	fca0 9101 	stc2	1, cr9, [r0], #4
10004974:	fca0 a101 	stc2	1, cr10, [r0], #4
10004978:	fca0 b101 	stc2	1, cr11, [r0], #4
1000497c:	4770      	bx	lr
1000497e:	bf00      	nop

10004980 <_Unwind_RaiseException>:
10004980:	46ec      	mov	ip, sp
10004982:	b500      	push	{lr}
10004984:	e92d 5000 	stmdb	sp!, {ip, lr}
10004988:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000498c:	f04f 0300 	mov.w	r3, #0
10004990:	e92d 000c 	stmdb	sp!, {r2, r3}
10004994:	a901      	add	r1, sp, #4
10004996:	f7ff fbb7 	bl	10004108 <__gnu_Unwind_RaiseException>
1000499a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000499e:	b012      	add	sp, #72	; 0x48
100049a0:	4770      	bx	lr
100049a2:	bf00      	nop

100049a4 <_Unwind_Resume>:
100049a4:	46ec      	mov	ip, sp
100049a6:	b500      	push	{lr}
100049a8:	e92d 5000 	stmdb	sp!, {ip, lr}
100049ac:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100049b0:	f04f 0300 	mov.w	r3, #0
100049b4:	e92d 000c 	stmdb	sp!, {r2, r3}
100049b8:	a901      	add	r1, sp, #4
100049ba:	f7ff fbe3 	bl	10004184 <__gnu_Unwind_Resume>
100049be:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100049c2:	b012      	add	sp, #72	; 0x48
100049c4:	4770      	bx	lr
100049c6:	bf00      	nop

100049c8 <_Unwind_Resume_or_Rethrow>:
100049c8:	46ec      	mov	ip, sp
100049ca:	b500      	push	{lr}
100049cc:	e92d 5000 	stmdb	sp!, {ip, lr}
100049d0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100049d4:	f04f 0300 	mov.w	r3, #0
100049d8:	e92d 000c 	stmdb	sp!, {r2, r3}
100049dc:	a901      	add	r1, sp, #4
100049de:	f7ff fbf3 	bl	100041c8 <__gnu_Unwind_Resume_or_Rethrow>
100049e2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100049e6:	b012      	add	sp, #72	; 0x48
100049e8:	4770      	bx	lr
100049ea:	bf00      	nop

100049ec <_Unwind_ForcedUnwind>:
100049ec:	46ec      	mov	ip, sp
100049ee:	b500      	push	{lr}
100049f0:	e92d 5000 	stmdb	sp!, {ip, lr}
100049f4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100049f8:	f04f 0300 	mov.w	r3, #0
100049fc:	e92d 000c 	stmdb	sp!, {r2, r3}
10004a00:	ab01      	add	r3, sp, #4
10004a02:	f7ff fbb5 	bl	10004170 <__gnu_Unwind_ForcedUnwind>
10004a06:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10004a0a:	b012      	add	sp, #72	; 0x48
10004a0c:	4770      	bx	lr
10004a0e:	bf00      	nop

10004a10 <_Unwind_Backtrace>:
10004a10:	46ec      	mov	ip, sp
10004a12:	b500      	push	{lr}
10004a14:	e92d 5000 	stmdb	sp!, {ip, lr}
10004a18:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10004a1c:	f04f 0300 	mov.w	r3, #0
10004a20:	e92d 000c 	stmdb	sp!, {r2, r3}
10004a24:	aa01      	add	r2, sp, #4
10004a26:	f7ff fc2d 	bl	10004284 <__gnu_Unwind_Backtrace>
10004a2a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10004a2e:	b012      	add	sp, #72	; 0x48
10004a30:	4770      	bx	lr
10004a32:	bf00      	nop

10004a34 <next_unwind_byte>:
10004a34:	7a02      	ldrb	r2, [r0, #8]
10004a36:	4603      	mov	r3, r0
10004a38:	b98a      	cbnz	r2, 10004a5e <next_unwind_byte+0x2a>
10004a3a:	7a42      	ldrb	r2, [r0, #9]
10004a3c:	b1b2      	cbz	r2, 10004a6c <next_unwind_byte+0x38>
10004a3e:	6841      	ldr	r1, [r0, #4]
10004a40:	3a01      	subs	r2, #1
10004a42:	f04f 0c03 	mov.w	ip, #3
10004a46:	b410      	push	{r4}
10004a48:	7242      	strb	r2, [r0, #9]
10004a4a:	1d0c      	adds	r4, r1, #4
10004a4c:	6808      	ldr	r0, [r1, #0]
10004a4e:	f883 c008 	strb.w	ip, [r3, #8]
10004a52:	0202      	lsls	r2, r0, #8
10004a54:	605c      	str	r4, [r3, #4]
10004a56:	0e00      	lsrs	r0, r0, #24
10004a58:	bc10      	pop	{r4}
10004a5a:	601a      	str	r2, [r3, #0]
10004a5c:	4770      	bx	lr
10004a5e:	6800      	ldr	r0, [r0, #0]
10004a60:	3a01      	subs	r2, #1
10004a62:	721a      	strb	r2, [r3, #8]
10004a64:	0202      	lsls	r2, r0, #8
10004a66:	0e00      	lsrs	r0, r0, #24
10004a68:	601a      	str	r2, [r3, #0]
10004a6a:	4770      	bx	lr
10004a6c:	20b0      	movs	r0, #176	; 0xb0
10004a6e:	4770      	bx	lr

10004a70 <_Unwind_GetGR.constprop.0>:
10004a70:	b510      	push	{r4, lr}
10004a72:	b084      	sub	sp, #16
10004a74:	2300      	movs	r3, #0
10004a76:	220c      	movs	r2, #12
10004a78:	ac03      	add	r4, sp, #12
10004a7a:	4619      	mov	r1, r3
10004a7c:	9400      	str	r4, [sp, #0]
10004a7e:	f7ff fbb5 	bl	100041ec <_Unwind_VRS_Get>
10004a82:	9803      	ldr	r0, [sp, #12]
10004a84:	b004      	add	sp, #16
10004a86:	bd10      	pop	{r4, pc}

10004a88 <unwind_UCB_from_context>:
10004a88:	e7f2      	b.n	10004a70 <_Unwind_GetGR.constprop.0>
10004a8a:	bf00      	nop

10004a8c <__gnu_unwind_execute>:
10004a8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10004a90:	f04f 0800 	mov.w	r8, #0
10004a94:	b085      	sub	sp, #20
10004a96:	4606      	mov	r6, r0
10004a98:	460d      	mov	r5, r1
10004a9a:	4628      	mov	r0, r5
10004a9c:	f7ff ffca 	bl	10004a34 <next_unwind_byte>
10004aa0:	28b0      	cmp	r0, #176	; 0xb0
10004aa2:	4604      	mov	r4, r0
10004aa4:	f000 80bc 	beq.w	10004c20 <__gnu_unwind_execute+0x194>
10004aa8:	0607      	lsls	r7, r0, #24
10004aaa:	d520      	bpl.n	10004aee <__gnu_unwind_execute+0x62>
10004aac:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
10004ab0:	2b80      	cmp	r3, #128	; 0x80
10004ab2:	d04e      	beq.n	10004b52 <__gnu_unwind_execute+0xc6>
10004ab4:	2b90      	cmp	r3, #144	; 0x90
10004ab6:	d037      	beq.n	10004b28 <__gnu_unwind_execute+0x9c>
10004ab8:	2ba0      	cmp	r3, #160	; 0xa0
10004aba:	d061      	beq.n	10004b80 <__gnu_unwind_execute+0xf4>
10004abc:	2bb0      	cmp	r3, #176	; 0xb0
10004abe:	d076      	beq.n	10004bae <__gnu_unwind_execute+0x122>
10004ac0:	2bc0      	cmp	r3, #192	; 0xc0
10004ac2:	f000 808d 	beq.w	10004be0 <__gnu_unwind_execute+0x154>
10004ac6:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10004aca:	2bd0      	cmp	r3, #208	; 0xd0
10004acc:	d10b      	bne.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004ace:	f000 0207 	and.w	r2, r0, #7
10004ad2:	2305      	movs	r3, #5
10004ad4:	2101      	movs	r1, #1
10004ad6:	4630      	mov	r0, r6
10004ad8:	3201      	adds	r2, #1
10004ada:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10004ade:	f7ff fd79 	bl	100045d4 <_Unwind_VRS_Pop>
10004ae2:	2800      	cmp	r0, #0
10004ae4:	d0d9      	beq.n	10004a9a <__gnu_unwind_execute+0xe>
10004ae6:	2009      	movs	r0, #9
10004ae8:	b005      	add	sp, #20
10004aea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004aee:	0083      	lsls	r3, r0, #2
10004af0:	f10d 090c 	add.w	r9, sp, #12
10004af4:	220d      	movs	r2, #13
10004af6:	4630      	mov	r0, r6
10004af8:	b2db      	uxtb	r3, r3
10004afa:	f8cd 9000 	str.w	r9, [sp]
10004afe:	1d1f      	adds	r7, r3, #4
10004b00:	2300      	movs	r3, #0
10004b02:	4619      	mov	r1, r3
10004b04:	f7ff fb72 	bl	100041ec <_Unwind_VRS_Get>
10004b08:	9b03      	ldr	r3, [sp, #12]
10004b0a:	0660      	lsls	r0, r4, #25
10004b0c:	f04f 020d 	mov.w	r2, #13
10004b10:	4630      	mov	r0, r6
10004b12:	f8cd 9000 	str.w	r9, [sp]
10004b16:	bf4c      	ite	mi
10004b18:	1bdf      	submi	r7, r3, r7
10004b1a:	18ff      	addpl	r7, r7, r3
10004b1c:	2300      	movs	r3, #0
10004b1e:	9703      	str	r7, [sp, #12]
10004b20:	4619      	mov	r1, r3
10004b22:	f7ff fb89 	bl	10004238 <_Unwind_VRS_Set>
10004b26:	e7b8      	b.n	10004a9a <__gnu_unwind_execute+0xe>
10004b28:	f000 030d 	and.w	r3, r0, #13
10004b2c:	2b0d      	cmp	r3, #13
10004b2e:	d0da      	beq.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004b30:	af03      	add	r7, sp, #12
10004b32:	2300      	movs	r3, #0
10004b34:	f000 020f 	and.w	r2, r0, #15
10004b38:	4630      	mov	r0, r6
10004b3a:	4619      	mov	r1, r3
10004b3c:	9700      	str	r7, [sp, #0]
10004b3e:	f7ff fb55 	bl	100041ec <_Unwind_VRS_Get>
10004b42:	2300      	movs	r3, #0
10004b44:	220d      	movs	r2, #13
10004b46:	4630      	mov	r0, r6
10004b48:	4619      	mov	r1, r3
10004b4a:	9700      	str	r7, [sp, #0]
10004b4c:	f7ff fb74 	bl	10004238 <_Unwind_VRS_Set>
10004b50:	e7a3      	b.n	10004a9a <__gnu_unwind_execute+0xe>
10004b52:	0224      	lsls	r4, r4, #8
10004b54:	4628      	mov	r0, r5
10004b56:	f7ff ff6d 	bl	10004a34 <next_unwind_byte>
10004b5a:	4320      	orrs	r0, r4
10004b5c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10004b60:	d0c1      	beq.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004b62:	0104      	lsls	r4, r0, #4
10004b64:	2300      	movs	r3, #0
10004b66:	4630      	mov	r0, r6
10004b68:	b2a2      	uxth	r2, r4
10004b6a:	4619      	mov	r1, r3
10004b6c:	f7ff fd32 	bl	100045d4 <_Unwind_VRS_Pop>
10004b70:	2800      	cmp	r0, #0
10004b72:	d1b8      	bne.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004b74:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10004b78:	bf18      	it	ne
10004b7a:	f04f 0801 	movne.w	r8, #1
10004b7e:	e78c      	b.n	10004a9a <__gnu_unwind_execute+0xe>
10004b80:	43c2      	mvns	r2, r0
10004b82:	0701      	lsls	r1, r0, #28
10004b84:	4630      	mov	r0, r6
10004b86:	f002 0307 	and.w	r3, r2, #7
10004b8a:	f44f 627f 	mov.w	r2, #4080	; 0xff0
10004b8e:	fa42 f203 	asr.w	r2, r2, r3
10004b92:	f04f 0300 	mov.w	r3, #0
10004b96:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
10004b9a:	4619      	mov	r1, r3
10004b9c:	bf48      	it	mi
10004b9e:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
10004ba2:	f7ff fd17 	bl	100045d4 <_Unwind_VRS_Pop>
10004ba6:	2800      	cmp	r0, #0
10004ba8:	f43f af77 	beq.w	10004a9a <__gnu_unwind_execute+0xe>
10004bac:	e79b      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004bae:	28b1      	cmp	r0, #177	; 0xb1
10004bb0:	d03b      	beq.n	10004c2a <__gnu_unwind_execute+0x19e>
10004bb2:	28b2      	cmp	r0, #178	; 0xb2
10004bb4:	f000 80a1 	beq.w	10004cfa <__gnu_unwind_execute+0x26e>
10004bb8:	28b3      	cmp	r0, #179	; 0xb3
10004bba:	d041      	beq.n	10004c40 <__gnu_unwind_execute+0x1b4>
10004bbc:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
10004bc0:	2bb4      	cmp	r3, #180	; 0xb4
10004bc2:	d090      	beq.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004bc4:	f000 0207 	and.w	r2, r0, #7
10004bc8:	2301      	movs	r3, #1
10004bca:	441a      	add	r2, r3
10004bcc:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10004bd0:	4619      	mov	r1, r3
10004bd2:	4630      	mov	r0, r6
10004bd4:	f7ff fcfe 	bl	100045d4 <_Unwind_VRS_Pop>
10004bd8:	2800      	cmp	r0, #0
10004bda:	f43f af5e 	beq.w	10004a9a <__gnu_unwind_execute+0xe>
10004bde:	e782      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004be0:	28c6      	cmp	r0, #198	; 0xc6
10004be2:	d051      	beq.n	10004c88 <__gnu_unwind_execute+0x1fc>
10004be4:	28c7      	cmp	r0, #199	; 0xc7
10004be6:	d062      	beq.n	10004cae <__gnu_unwind_execute+0x222>
10004be8:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10004bec:	2bc0      	cmp	r3, #192	; 0xc0
10004bee:	d071      	beq.n	10004cd4 <__gnu_unwind_execute+0x248>
10004bf0:	28c8      	cmp	r0, #200	; 0xc8
10004bf2:	d076      	beq.n	10004ce2 <__gnu_unwind_execute+0x256>
10004bf4:	28c9      	cmp	r0, #201	; 0xc9
10004bf6:	f47f af76 	bne.w	10004ae6 <__gnu_unwind_execute+0x5a>
10004bfa:	4628      	mov	r0, r5
10004bfc:	f7ff ff1a 	bl	10004a34 <next_unwind_byte>
10004c00:	0302      	lsls	r2, r0, #12
10004c02:	f000 000f 	and.w	r0, r0, #15
10004c06:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10004c0a:	3001      	adds	r0, #1
10004c0c:	4302      	orrs	r2, r0
10004c0e:	2101      	movs	r1, #1
10004c10:	2305      	movs	r3, #5
10004c12:	4630      	mov	r0, r6
10004c14:	f7ff fcde 	bl	100045d4 <_Unwind_VRS_Pop>
10004c18:	2800      	cmp	r0, #0
10004c1a:	f43f af3e 	beq.w	10004a9a <__gnu_unwind_execute+0xe>
10004c1e:	e762      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004c20:	f1b8 0f00 	cmp.w	r8, #0
10004c24:	d01f      	beq.n	10004c66 <__gnu_unwind_execute+0x1da>
10004c26:	2000      	movs	r0, #0
10004c28:	e75e      	b.n	10004ae8 <__gnu_unwind_execute+0x5c>
10004c2a:	4628      	mov	r0, r5
10004c2c:	f7ff ff02 	bl	10004a34 <next_unwind_byte>
10004c30:	4602      	mov	r2, r0
10004c32:	2800      	cmp	r0, #0
10004c34:	f43f af57 	beq.w	10004ae6 <__gnu_unwind_execute+0x5a>
10004c38:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10004c3c:	d0c8      	beq.n	10004bd0 <__gnu_unwind_execute+0x144>
10004c3e:	e752      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004c40:	4628      	mov	r0, r5
10004c42:	f7ff fef7 	bl	10004a34 <next_unwind_byte>
10004c46:	f000 030f 	and.w	r3, r0, #15
10004c4a:	0302      	lsls	r2, r0, #12
10004c4c:	4630      	mov	r0, r6
10004c4e:	3301      	adds	r3, #1
10004c50:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10004c54:	431a      	orrs	r2, r3
10004c56:	2301      	movs	r3, #1
10004c58:	4619      	mov	r1, r3
10004c5a:	f7ff fcbb 	bl	100045d4 <_Unwind_VRS_Pop>
10004c5e:	2800      	cmp	r0, #0
10004c60:	f43f af1b 	beq.w	10004a9a <__gnu_unwind_execute+0xe>
10004c64:	e73f      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004c66:	ac03      	add	r4, sp, #12
10004c68:	4643      	mov	r3, r8
10004c6a:	220e      	movs	r2, #14
10004c6c:	4641      	mov	r1, r8
10004c6e:	4630      	mov	r0, r6
10004c70:	9400      	str	r4, [sp, #0]
10004c72:	f7ff fabb 	bl	100041ec <_Unwind_VRS_Get>
10004c76:	4643      	mov	r3, r8
10004c78:	220f      	movs	r2, #15
10004c7a:	4630      	mov	r0, r6
10004c7c:	4641      	mov	r1, r8
10004c7e:	9400      	str	r4, [sp, #0]
10004c80:	f7ff fada 	bl	10004238 <_Unwind_VRS_Set>
10004c84:	4640      	mov	r0, r8
10004c86:	e72f      	b.n	10004ae8 <__gnu_unwind_execute+0x5c>
10004c88:	4628      	mov	r0, r5
10004c8a:	f7ff fed3 	bl	10004a34 <next_unwind_byte>
10004c8e:	f000 030f 	and.w	r3, r0, #15
10004c92:	0302      	lsls	r2, r0, #12
10004c94:	4630      	mov	r0, r6
10004c96:	3301      	adds	r3, #1
10004c98:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10004c9c:	431a      	orrs	r2, r3
10004c9e:	2303      	movs	r3, #3
10004ca0:	4619      	mov	r1, r3
10004ca2:	f7ff fc97 	bl	100045d4 <_Unwind_VRS_Pop>
10004ca6:	2800      	cmp	r0, #0
10004ca8:	f43f aef7 	beq.w	10004a9a <__gnu_unwind_execute+0xe>
10004cac:	e71b      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004cae:	4628      	mov	r0, r5
10004cb0:	f7ff fec0 	bl	10004a34 <next_unwind_byte>
10004cb4:	4602      	mov	r2, r0
10004cb6:	2800      	cmp	r0, #0
10004cb8:	f43f af15 	beq.w	10004ae6 <__gnu_unwind_execute+0x5a>
10004cbc:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10004cc0:	f47f af11 	bne.w	10004ae6 <__gnu_unwind_execute+0x5a>
10004cc4:	2104      	movs	r1, #4
10004cc6:	4630      	mov	r0, r6
10004cc8:	f7ff fc84 	bl	100045d4 <_Unwind_VRS_Pop>
10004ccc:	2800      	cmp	r0, #0
10004cce:	f43f aee4 	beq.w	10004a9a <__gnu_unwind_execute+0xe>
10004cd2:	e708      	b.n	10004ae6 <__gnu_unwind_execute+0x5a>
10004cd4:	f000 020f 	and.w	r2, r0, #15
10004cd8:	2303      	movs	r3, #3
10004cda:	3201      	adds	r2, #1
10004cdc:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
10004ce0:	e776      	b.n	10004bd0 <__gnu_unwind_execute+0x144>
10004ce2:	4628      	mov	r0, r5
10004ce4:	f7ff fea6 	bl	10004a34 <next_unwind_byte>
10004ce8:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10004cec:	f000 030f 	and.w	r3, r0, #15
10004cf0:	3210      	adds	r2, #16
10004cf2:	3301      	adds	r3, #1
10004cf4:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
10004cf8:	e789      	b.n	10004c0e <__gnu_unwind_execute+0x182>
10004cfa:	2300      	movs	r3, #0
10004cfc:	f10d 090c 	add.w	r9, sp, #12
10004d00:	220d      	movs	r2, #13
10004d02:	4630      	mov	r0, r6
10004d04:	4619      	mov	r1, r3
10004d06:	f8cd 9000 	str.w	r9, [sp]
10004d0a:	f7ff fa6f 	bl	100041ec <_Unwind_VRS_Get>
10004d0e:	4628      	mov	r0, r5
10004d10:	f7ff fe90 	bl	10004a34 <next_unwind_byte>
10004d14:	0602      	lsls	r2, r0, #24
10004d16:	f04f 0402 	mov.w	r4, #2
10004d1a:	d50b      	bpl.n	10004d34 <__gnu_unwind_execute+0x2a8>
10004d1c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10004d20:	9b03      	ldr	r3, [sp, #12]
10004d22:	40a0      	lsls	r0, r4
10004d24:	3407      	adds	r4, #7
10004d26:	4418      	add	r0, r3
10004d28:	9003      	str	r0, [sp, #12]
10004d2a:	4628      	mov	r0, r5
10004d2c:	f7ff fe82 	bl	10004a34 <next_unwind_byte>
10004d30:	0603      	lsls	r3, r0, #24
10004d32:	d4f3      	bmi.n	10004d1c <__gnu_unwind_execute+0x290>
10004d34:	9b03      	ldr	r3, [sp, #12]
10004d36:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10004d3a:	f8cd 9000 	str.w	r9, [sp]
10004d3e:	4630      	mov	r0, r6
10004d40:	40a2      	lsls	r2, r4
10004d42:	f503 7301 	add.w	r3, r3, #516	; 0x204
10004d46:	441a      	add	r2, r3
10004d48:	2300      	movs	r3, #0
10004d4a:	9203      	str	r2, [sp, #12]
10004d4c:	4619      	mov	r1, r3
10004d4e:	220d      	movs	r2, #13
10004d50:	f7ff fa72 	bl	10004238 <_Unwind_VRS_Set>
10004d54:	e6a1      	b.n	10004a9a <__gnu_unwind_execute+0xe>
10004d56:	bf00      	nop

10004d58 <__gnu_unwind_frame>:
10004d58:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10004d5a:	460b      	mov	r3, r1
10004d5c:	f04f 0c03 	mov.w	ip, #3
10004d60:	4618      	mov	r0, r3
10004d62:	3208      	adds	r2, #8
10004d64:	f852 3c04 	ldr.w	r3, [r2, #-4]
10004d68:	b500      	push	{lr}
10004d6a:	b085      	sub	sp, #20
10004d6c:	9202      	str	r2, [sp, #8]
10004d6e:	a901      	add	r1, sp, #4
10004d70:	0e1a      	lsrs	r2, r3, #24
10004d72:	f88d c00c 	strb.w	ip, [sp, #12]
10004d76:	021b      	lsls	r3, r3, #8
10004d78:	f88d 200d 	strb.w	r2, [sp, #13]
10004d7c:	9301      	str	r3, [sp, #4]
10004d7e:	f7ff fe85 	bl	10004a8c <__gnu_unwind_execute>
10004d82:	b005      	add	sp, #20
10004d84:	f85d fb04 	ldr.w	pc, [sp], #4

10004d88 <_Unwind_GetRegionStart>:
10004d88:	b508      	push	{r3, lr}
10004d8a:	f7ff fe7d 	bl	10004a88 <unwind_UCB_from_context>
10004d8e:	6c80      	ldr	r0, [r0, #72]	; 0x48
10004d90:	bd08      	pop	{r3, pc}
10004d92:	bf00      	nop

10004d94 <_Unwind_GetLanguageSpecificData>:
10004d94:	b508      	push	{r3, lr}
10004d96:	f7ff fe77 	bl	10004a88 <unwind_UCB_from_context>
10004d9a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
10004d9c:	79c3      	ldrb	r3, [r0, #7]
10004d9e:	3302      	adds	r3, #2
10004da0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10004da4:	bd08      	pop	{r3, pc}
10004da6:	bf00      	nop

10004da8 <__aeabi_idiv0>:
10004da8:	4770      	bx	lr
10004daa:	bf00      	nop

10004dac <abort>:
10004dac:	2006      	movs	r0, #6
10004dae:	b508      	push	{r3, lr}
10004db0:	f000 f838 	bl	10004e24 <raise>
10004db4:	2001      	movs	r0, #1
10004db6:	f7fe f879 	bl	10002eac <_exit>

10004dba <memcpy>:
10004dba:	440a      	add	r2, r1
10004dbc:	1e43      	subs	r3, r0, #1
10004dbe:	4291      	cmp	r1, r2
10004dc0:	d100      	bne.n	10004dc4 <memcpy+0xa>
10004dc2:	4770      	bx	lr
10004dc4:	b510      	push	{r4, lr}
10004dc6:	f811 4b01 	ldrb.w	r4, [r1], #1
10004dca:	4291      	cmp	r1, r2
10004dcc:	f803 4f01 	strb.w	r4, [r3, #1]!
10004dd0:	d1f9      	bne.n	10004dc6 <memcpy+0xc>
10004dd2:	bd10      	pop	{r4, pc}

10004dd4 <_raise_r>:
10004dd4:	291f      	cmp	r1, #31
10004dd6:	b538      	push	{r3, r4, r5, lr}
10004dd8:	4604      	mov	r4, r0
10004dda:	460d      	mov	r5, r1
10004ddc:	d904      	bls.n	10004de8 <_raise_r+0x14>
10004dde:	2316      	movs	r3, #22
10004de0:	6003      	str	r3, [r0, #0]
10004de2:	f04f 30ff 	mov.w	r0, #4294967295
10004de6:	bd38      	pop	{r3, r4, r5, pc}
10004de8:	6c42      	ldr	r2, [r0, #68]	; 0x44
10004dea:	b112      	cbz	r2, 10004df2 <_raise_r+0x1e>
10004dec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
10004df0:	b94b      	cbnz	r3, 10004e06 <_raise_r+0x32>
10004df2:	4620      	mov	r0, r4
10004df4:	f000 f830 	bl	10004e58 <_getpid_r>
10004df8:	462a      	mov	r2, r5
10004dfa:	4601      	mov	r1, r0
10004dfc:	4620      	mov	r0, r4
10004dfe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10004e02:	f000 b817 	b.w	10004e34 <_kill_r>
10004e06:	2b01      	cmp	r3, #1
10004e08:	d00a      	beq.n	10004e20 <_raise_r+0x4c>
10004e0a:	1c59      	adds	r1, r3, #1
10004e0c:	d103      	bne.n	10004e16 <_raise_r+0x42>
10004e0e:	2316      	movs	r3, #22
10004e10:	6003      	str	r3, [r0, #0]
10004e12:	2001      	movs	r0, #1
10004e14:	e7e7      	b.n	10004de6 <_raise_r+0x12>
10004e16:	2400      	movs	r4, #0
10004e18:	4628      	mov	r0, r5
10004e1a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
10004e1e:	4798      	blx	r3
10004e20:	2000      	movs	r0, #0
10004e22:	e7e0      	b.n	10004de6 <_raise_r+0x12>

10004e24 <raise>:
10004e24:	4b02      	ldr	r3, [pc, #8]	; (10004e30 <raise+0xc>)
10004e26:	4601      	mov	r1, r0
10004e28:	6818      	ldr	r0, [r3, #0]
10004e2a:	f7ff bfd3 	b.w	10004dd4 <_raise_r>
10004e2e:	bf00      	nop
10004e30:	38000008 	stmdacc	r0, {r3}

10004e34 <_kill_r>:
10004e34:	b538      	push	{r3, r4, r5, lr}
10004e36:	2300      	movs	r3, #0
10004e38:	4d06      	ldr	r5, [pc, #24]	; (10004e54 <_kill_r+0x20>)
10004e3a:	4604      	mov	r4, r0
10004e3c:	4608      	mov	r0, r1
10004e3e:	4611      	mov	r1, r2
10004e40:	602b      	str	r3, [r5, #0]
10004e42:	f7fe f82b 	bl	10002e9c <_kill>
10004e46:	1c43      	adds	r3, r0, #1
10004e48:	d102      	bne.n	10004e50 <_kill_r+0x1c>
10004e4a:	682b      	ldr	r3, [r5, #0]
10004e4c:	b103      	cbz	r3, 10004e50 <_kill_r+0x1c>
10004e4e:	6023      	str	r3, [r4, #0]
10004e50:	bd38      	pop	{r3, r4, r5, pc}
10004e52:	bf00      	nop
10004e54:	38002420 	stmdacc	r0, {r5, sl, sp}

10004e58 <_getpid_r>:
10004e58:	f7fe b81e 	b.w	10002e98 <_getpid>

10004e5c <_init>:
10004e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10004e5e:	bf00      	nop
10004e60:	bcf8      	pop	{r3, r4, r5, r6, r7}
10004e62:	bc08      	pop	{r3}
10004e64:	469e      	mov	lr, r3
10004e66:	4770      	bx	lr

10004e68 <_fini>:
10004e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10004e6a:	bf00      	nop
10004e6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
10004e6e:	bc08      	pop	{r3}
10004e70:	469e      	mov	lr, r3
10004e72:	4770      	bx	lr
10004e74:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10004e78:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
10004e7c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
10004e80:	64252078 	strtvs	r2, [r5], #-120	; 0xffffff88
10004e84:	00000a0d 	andeq	r0, r0, sp, lsl #20
10004e88:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
10004e8c:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
10004e90:	745f7874 	ldrbvc	r7, [pc], #-2164	; 10004e98 <_fini+0x30>
10004e94:	006b7361 	rsbeq	r7, fp, r1, ror #6
10004e98:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
10004e9c:	00000d74 	andeq	r0, r0, r4, ror sp
10004ea0:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10004ea4:	6f77206f 	svcvs	0x0077206f
10004ea8:	20646c72 	rsbcs	r6, r4, r2, ror ip
10004eac:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10004eb0:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10004eb4:	00696e66 	rsbeq	r6, r9, r6, ror #28
10004eb8:	2b696e66 	blcs	11a60858 <__copy_table_end__+0x1a5b7dc>
10004ebc:	00000000 	andeq	r0, r0, r0
10004ec0:	006e616e 	rsbeq	r6, lr, lr, ror #2
10004ec4:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10004ed0 <pow10.0>:
10004ed0:	00000000 	andeq	r0, r0, r0
10004ed4:	3ff00000 	svccc	0x00f00000	; IMB
10004ed8:	00000000 	andeq	r0, r0, r0
10004edc:	40240000 	eormi	r0, r4, r0
10004ee0:	00000000 	andeq	r0, r0, r0
10004ee4:	40590000 	subsmi	r0, r9, r0
10004ee8:	00000000 	andeq	r0, r0, r0
10004eec:	408f4000 	addmi	r4, pc, r0
10004ef0:	00000000 	andeq	r0, r0, r0
10004ef4:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10004ef8:	00000000 	andeq	r0, r0, r0
10004efc:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10004f00:	00000000 	andeq	r0, r0, r0
10004f04:	412e8480 	smlawbmi	lr, r0, r4, r8
10004f08:	00000000 	andeq	r0, r0, r0
10004f0c:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10004f10:	00000000 	andeq	r0, r0, r0
10004f14:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10004f18:	00000000 	andeq	r0, r0, r0
10004f1c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10004f20:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
10004f24:	54206d65 	strtpl	r6, [r0], #-3429	; 0xfffff29b
10004f28:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
10004f2c:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10004f30:	00646165 	rsbeq	r6, r4, r5, ror #2

10004f34 <__sf_fake_stderr>:
	...

10004f54 <__sf_fake_stdin>:
	...

10004f74 <__sf_fake_stdout>:
	...

10004f94 <__EH_FRAME_BEGIN__>:
10004f94:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10004f98 <__exidx_start-0x18>:
10004f98:	8101b108 	tsthi	r1, r8, lsl #2
10004f9c:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10004fa0:	00000000 	andeq	r0, r0, r0
10004fa4:	8101b108 	tsthi	r1, r8, lsl #2
10004fa8:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10004fac:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10004fb0 <__exidx_end-0xc0>:
10004fb0:	7fffdf08 	svcvc	0x00ffdf08
10004fb4:	80b0b0b0 	ldrhthi	fp, [r0], r0
10004fb8:	7fffdf70 	svcvc	0x00ffdf70
10004fbc:	00000001 	andeq	r0, r0, r1
10004fc0:	7fffef20 	svcvc	0x00ffef20
10004fc4:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10004fc8:	7fffefb4 	svcvc	0x00ffefb4
10004fcc:	80a8b0b0 	strhthi	fp, [r8], r0
10004fd0:	7ffff004 	svcvc	0x00fff004
10004fd4:	00000001 	andeq	r0, r0, r1
10004fd8:	7ffff010 	svcvc	0x00fff010
10004fdc:	80aab0b0 	strhthi	fp, [sl], r0
10004fe0:	7ffff048 	svcvc	0x00fff048
10004fe4:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10004fe8:	7ffff11c 	svcvc	0x00fff11c
10004fec:	00000001 	andeq	r0, r0, r1
10004ff0:	7ffff118 	svcvc	0x00fff118
10004ff4:	80383fab 	eorshi	r3, r8, fp, lsr #31
10004ff8:	7ffff178 	svcvc	0x00fff178
10004ffc:	00000001 	andeq	r0, r0, r1
10005000:	7ffff184 	svcvc	0x00fff184
10005004:	80aab0b0 	strhthi	fp, [sl], r0
10005008:	7ffff1c0 	svcvc	0x00fff1c0
1000500c:	00000001 	andeq	r0, r0, r1
10005010:	7ffff274 	svcvc	0x00fff274
10005014:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10005018:	7ffff2e8 	svcvc	0x00fff2e8
1000501c:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
10005020:	7ffff5a8 	svcvc	0x00fff5a8
10005024:	00000001 	andeq	r0, r0, r1
10005028:	7ffff5ac 	svcvc	0x00fff5ac
1000502c:	80023fad 	andhi	r3, r2, sp, lsr #31
10005030:	7ffff858 	svcvc	0x00fff858
10005034:	00000001 	andeq	r0, r0, r1
10005038:	7ffffa38 	svcvc	0x00fffa38
1000503c:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10005040:	7ffffa48 	svcvc	0x00fffa48
10005044:	00000001 	andeq	r0, r0, r1
10005048:	7ffffa44 	svcvc	0x00fffa44
1000504c:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10005050:	7ffffd08 	svcvc	0x00fffd08
10005054:	80048400 	andhi	r8, r4, r0, lsl #8
10005058:	7ffffd30 	svcvc	0x00fffd30
1000505c:	7fffff3c 	svcvc	0x00ffff3c
10005060:	7ffffd34 	svcvc	0x00fffd34
10005064:	7fffff40 	svcvc	0x00ffff40
10005068:	7ffffd40 	svcvc	0x00fffd40
1000506c:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10005070 <__copy_table_start__>:
10005070:	1000507c 	andne	r5, r0, ip, ror r0
10005074:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10005078:	0000001d 	andeq	r0, r0, sp, lsl r0

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <_tx_thread_system_state>:
volatile ULONG  _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
38000004:	f0f0f0f0 			; <UNDEFINED> instruction: 0xf0f0f0f0

38000008 <_impure_ptr>:
38000008:	3800000c 	stmdacc	r0, {r2, r3}

3800000c <impure_data>:
3800000c:	00000000 	andeq	r0, r0, r0
38000010:	10004f54 	andne	r4, r0, r4, asr pc
38000014:	10004f74 	andne	r4, r0, r4, ror pc
38000018:	10004f34 	andne	r4, r0, r4, lsr pc
	...

3800006c <__frame_dummy_init_array_entry>:
3800006c:	100007e5 	andne	r0, r0, r5, ror #15

38000070 <__do_global_dtors_aux_fini_array_entry>:
38000070:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000074 <__bss_start__>:
38000074:	00000000 	andeq	r0, r0, r0

38000078 <object.0>:
	...

38000090 <tx_memory.1>:
	...

38001090 <tx_pool.2>:
	...

380010c4 <tx_task.0>:
	...

38001198 <_tx_byte_pool_created_count>:
BYTE_POOL_DECLARE  TX_BYTE_POOL *   _tx_byte_pool_created_ptr;


/* Define the variable that holds the number of created byte pools. */

BYTE_POOL_DECLARE  ULONG            _tx_byte_pool_created_count;
38001198:	00000000 	andeq	r0, r0, r0

3800119c <_tx_byte_pool_created_ptr>:
BYTE_POOL_DECLARE  TX_BYTE_POOL *   _tx_byte_pool_created_ptr;
3800119c:	00000000 	andeq	r0, r0, r0

380011a0 <_tx_initialize_unused_memory>:
VOID     *_tx_initialize_unused_memory;
380011a0:	00000000 	andeq	r0, r0, r0

380011a4 <_tx_build_options>:
ULONG           _tx_build_options;
380011a4:	00000000 	andeq	r0, r0, r0

380011a8 <_tx_thread_application_stack_error_handler>:
VOID            (*_tx_thread_application_stack_error_handler)(TX_THREAD *thread_ptr);
380011a8:	00000000 	andeq	r0, r0, r0

380011ac <_tx_thread_created_count>:
ULONG           _tx_thread_created_count;
380011ac:	00000000 	andeq	r0, r0, r0

380011b0 <_tx_thread_created_ptr>:
TX_THREAD *     _tx_thread_created_ptr;
380011b0:	00000000 	andeq	r0, r0, r0

380011b4 <_tx_thread_current_ptr>:
TX_THREAD *     _tx_thread_current_ptr;
380011b4:	00000000 	andeq	r0, r0, r0

380011b8 <_tx_thread_execute_ptr>:
TX_THREAD *     _tx_thread_execute_ptr;
380011b8:	00000000 	andeq	r0, r0, r0

380011bc <_tx_thread_highest_priority>:
UINT            _tx_thread_highest_priority;
380011bc:	00000000 	andeq	r0, r0, r0

380011c0 <_tx_thread_mutex_release>:
VOID            (*_tx_thread_mutex_release)(TX_THREAD *thread_ptr);
380011c0:	00000000 	andeq	r0, r0, r0

380011c4 <_tx_thread_performance__execute_log_index>:
ULONG           _tx_thread_performance__execute_log_index;
380011c4:	00000000 	andeq	r0, r0, r0

380011c8 <_tx_thread_performance_execute_log>:
	...

380011e8 <_tx_thread_performance_idle_return_count>:
ULONG           _tx_thread_performance_idle_return_count;
380011e8:	00000000 	andeq	r0, r0, r0

380011ec <_tx_thread_performance_interrupt_preemption_count>:
ULONG           _tx_thread_performance_interrupt_preemption_count;
380011ec:	00000000 	andeq	r0, r0, r0

380011f0 <_tx_thread_performance_non_idle_return_count>:
ULONG           _tx_thread_performance_non_idle_return_count;
380011f0:	00000000 	andeq	r0, r0, r0

380011f4 <_tx_thread_performance_resume_count>:
ULONG           _tx_thread_performance_resume_count;
380011f4:	00000000 	andeq	r0, r0, r0

380011f8 <_tx_thread_performance_solicited_preemption_count>:
ULONG           _tx_thread_performance_solicited_preemption_count;
380011f8:	00000000 	andeq	r0, r0, r0

380011fc <_tx_thread_performance_suspend_count>:
ULONG           _tx_thread_performance_suspend_count;
380011fc:	00000000 	andeq	r0, r0, r0

38001200 <_tx_thread_performance_time_slice_count>:
ULONG           _tx_thread_performance_time_slice_count;
38001200:	00000000 	andeq	r0, r0, r0

38001204 <_tx_thread_performance_timeout_count>:
ULONG           _tx_thread_performance_timeout_count;
38001204:	00000000 	andeq	r0, r0, r0

38001208 <_tx_thread_preempt_disable>:
volatile UINT   _tx_thread_preempt_disable;
38001208:	00000000 	andeq	r0, r0, r0

3800120c <_tx_thread_priority_list>:
	...

3800128c <_tx_thread_priority_maps>:
ULONG           _tx_thread_priority_maps[TX_MAX_PRIORITIES/32];
3800128c:	00000000 	andeq	r0, r0, r0

38001290 <_tx_thread_system_stack_ptr>:
VOID *          _tx_thread_system_stack_ptr;
38001290:	00000000 	andeq	r0, r0, r0

38001294 <_tx_timer_current_ptr>:
TX_TIMER_INTERNAL   **_tx_timer_current_ptr;
38001294:	00000000 	andeq	r0, r0, r0

38001298 <_tx_timer_expired>:
UINT                _tx_timer_expired;
38001298:	00000000 	andeq	r0, r0, r0

3800129c <_tx_timer_expired_time_slice>:
UINT                _tx_timer_expired_time_slice;
3800129c:	00000000 	andeq	r0, r0, r0

380012a0 <_tx_timer_expired_timer_ptr>:
TX_TIMER_INTERNAL  *_tx_timer_expired_timer_ptr;
380012a0:	00000000 	andeq	r0, r0, r0

380012a4 <_tx_timer_list>:
	...

38001324 <_tx_timer_list_end>:
TX_TIMER_INTERNAL   **_tx_timer_list_end;
38001324:	00000000 	andeq	r0, r0, r0

38001328 <_tx_timer_list_start>:
TX_TIMER_INTERNAL   **_tx_timer_list_start;
38001328:	00000000 	andeq	r0, r0, r0

3800132c <_tx_timer_performance__expiration_adjust_count>:
ULONG               _tx_timer_performance__expiration_adjust_count;
3800132c:	00000000 	andeq	r0, r0, r0

38001330 <_tx_timer_performance_expiration_count>:
ULONG               _tx_timer_performance_expiration_count;
38001330:	00000000 	andeq	r0, r0, r0

38001334 <_tx_timer_performance_reactivate_count>:
ULONG               _tx_timer_performance_reactivate_count;
38001334:	00000000 	andeq	r0, r0, r0

38001338 <_tx_timer_priority>:
UINT                _tx_timer_priority;
38001338:	00000000 	andeq	r0, r0, r0

3800133c <_tx_timer_stack_size>:
ULONG               _tx_timer_stack_size;
3800133c:	00000000 	andeq	r0, r0, r0

38001340 <_tx_timer_stack_start>:
VOID                *_tx_timer_stack_start;
38001340:	00000000 	andeq	r0, r0, r0

38001344 <_tx_timer_system_clock>:
volatile ULONG      _tx_timer_system_clock;
38001344:	00000000 	andeq	r0, r0, r0

38001348 <_tx_timer_thread>:
	...

3800141c <_tx_timer_thread_stack_area>:
	...

3800241c <_tx_timer_time_slice>:
ULONG               _tx_timer_time_slice;
3800241c:	00000000 	andeq	r0, r0, r0

38002420 <errno>:
38002420:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38002424 <__end__-0x4>:
38002424:	00000000 	andeq	r0, r0, r0

38002428 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	00003541 	andeq	r3, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
}
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
}
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
}
   8:	72412055 	subvc	r2, r1, #85	; 0x55
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	00000bda 	ldrdeq	r0, [r0], -sl
       4:	00000002 	andeq	r0, r0, r2
}
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000003d 	andeq	r0, r0, sp, lsr r0
      10:	0004f60c 	andeq	pc, r4, ip, lsl #12
      14:	00064100 	andeq	r4, r6, r0, lsl #2
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000852 	andeq	r0, r0, r2, asr r8
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	50080102 	andpl	r0, r8, r2, lsl #2
      34:	02000008 	andeq	r0, r0, #8
        _tx_thread_system_ni_resume(thread_ptr);
      38:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
      3c:	02020000 	andeq	r0, r2, #0
}
      40:	00091e07 	andeq	r1, r9, r7, lsl #28
      44:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      48:	000004ed 	andeq	r0, r0, sp, ror #9
      4c:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
      50:	02000002 	andeq	r0, r0, #2
      54:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	00022f07 	andeq	r2, r2, r7, lsl #30
      60:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
      64:	00746e69 	rsbseq	r6, r4, r9, ror #28
      68:	39070402 	stmdbcc	r7, {r1, sl}
      6c:	02000002 	andeq	r0, r0, #2
      70:	06230408 	strteq	r0, [r3], -r8, lsl #8
      74:	04040000 	streq	r0, [r4], #-0
      78:	59080102 	stmdbpl	r8, {r1, r8}
      7c:	05000008 	streq	r0, [r0, #-8]
      80:	00000078 	andeq	r0, r0, r8, ror r0
      84:	0008df06 	andeq	sp, r8, r6, lsl #30
      88:	31730200 	cmncc	r3, r0, lsl #4
      8c:	00000078 	andeq	r0, r0, r8, ror r0
      90:	0008de06 	andeq	sp, r8, r6, lsl #28
      94:	31740200 	cmncc	r4, r0, lsl #4
      98:	00000030 	andeq	r0, r0, r0, lsr r0
      9c:	00077f06 	andeq	r7, r7, r6, lsl #30
      a0:	31760200 	cmncc	r6, r0, lsl #4
      a4:	00000068 	andeq	r0, r0, r8, rrx
      a8:	00071106 	andeq	r1, r7, r6, lsl #2
      ac:	31780200 	cmncc	r8, r0, lsl #4
      b0:	0000004c 	andeq	r0, r0, ip, asr #32
      b4:	00053b07 	andeq	r3, r5, r7, lsl #22
      b8:	82031c00 	andhi	r1, r3, #0, 24
      bc:	01331001 	teqeq	r3, r1
      c0:	12080000 	andne	r0, r8, #0
      c4:	03000008 	movweq	r0, #8
      c8:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
      cc:	02000000 	andeq	r0, r0, #0
      d0:	a0080023 	andge	r0, r8, r3, lsr #32
      d4:	03000003 	movweq	r0, #3
      d8:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
      dc:	02000000 	andeq	r0, r0, #0
      e0:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
      e4:	03000004 	movweq	r0, #4
      e8:	3f1b018a 	svccc	0x001b018a
      ec:	02000001 	andeq	r0, r0, #1
      f0:	f2080823 	vadd.i8	d0, d8, d19
      f4:	03000001 	movweq	r0, #1
      f8:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
      fc:	02000000 	andeq	r0, r0, #0
     100:	54080c23 	strpl	r0, [r8], #-3107	; 0xfffff3dd
     104:	03000009 	movweq	r0, #9
     108:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
     10c:	02000001 	andeq	r0, r0, #1
     110:	1b081023 	blne	2041a4 <__RAM_SIZE+0x1041a4>
     114:	03000000 	movweq	r0, #0
     118:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
     11c:	02000001 	andeq	r0, r0, #1
     120:	ee081423 	cdp	4, 0, cr1, cr8, cr3, {1}
     124:	03000005 	movweq	r0, #5
     128:	4b1b0196 	blmi	6c0788 <__RAM_SIZE+0x5c0788>
     12c:	02000001 	andeq	r0, r0, #1
     130:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
     134:	00013f01 	andeq	r3, r1, r1, lsl #30
     138:	00a80a00 	adceq	r0, r8, r0, lsl #20
     13c:	0b000000 	bleq	144 <__STACKSEAL_SIZE+0x144>
     140:	00013304 	andeq	r3, r1, r4, lsl #6
     144:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
     148:	0b000000 	bleq	150 <__STACKSEAL_SIZE+0x150>
     14c:	00014504 	andeq	r4, r1, r4, lsl #10
     150:	062f0c00 	strteq	r0, [pc], -r0, lsl #24
     154:	9b030000 	blls	c015c <SYSTICK_CYCLES+0x9711d>
     158:	00b40301 	adcseq	r0, r4, r1, lsl #6
     15c:	040b0000 	streq	r0, [fp], #-0
     160:	00000084 	andeq	r0, r0, r4, lsl #1
     164:	00034b07 	andeq	r4, r3, r7, lsl #22
     168:	d603d400 	strle	sp, [r3], -r0, lsl #8
     16c:	04781001 	ldrbteq	r1, [r8], #-1
     170:	11080000 	mrsne	r0, (UNDEF: 8)
     174:	03000009 	movweq	r0, #9
     178:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
     17c:	02000000 	andeq	r0, r0, #0
     180:	84080023 	strhi	r0, [r8], #-35	; 0xffffffdd
     184:	03000007 	movweq	r0, #7
     188:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
     18c:	02000000 	andeq	r0, r0, #0
     190:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
     194:	03000001 	movweq	r0, #1
     198:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
     19c:	02000000 	andeq	r0, r0, #0
     1a0:	fb080823 	blx	202236 <__RAM_SIZE+0x102236>
     1a4:	03000008 	movweq	r0, #8
     1a8:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
     1ac:	02000000 	andeq	r0, r0, #0
     1b0:	11080c23 	tstne	r8, r3, lsr #24
     1b4:	03000004 	movweq	r0, #4
     1b8:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
     1bc:	02000000 	andeq	r0, r0, #0
     1c0:	3f081023 	svccc	0x00081023
     1c4:	03000009 	movweq	r0, #9
     1c8:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
     1cc:	02000000 	andeq	r0, r0, #0
     1d0:	d1081423 	tstle	r8, r3, lsr #8
     1d4:	03000021 	movweq	r0, #33	; 0x21
     1d8:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
     1dc:	02000000 	andeq	r0, r0, #0
     1e0:	0a081823 	beq	206274 <__RAM_SIZE+0x106274>
     1e4:	03000006 	movweq	r0, #6
     1e8:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
     1ec:	02000000 	andeq	r0, r0, #0
     1f0:	9f081c23 	svcls	0x00081c23
     1f4:	03000006 	movweq	r0, #6
     1f8:	781a01e8 	ldmdavc	sl, {r3, r5, r6, r7, r8}
     1fc:	02000004 	andeq	r0, r0, #4
     200:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
     204:	03000001 	movweq	r0, #1
     208:	781a01e9 	ldmdavc	sl, {r0, r3, r5, r6, r7, r8}
     20c:	02000004 	andeq	r0, r0, #4
     210:	96082423 	strls	r2, [r8], -r3, lsr #8
     214:	03000005 	movweq	r0, #5
     218:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
     21c:	02000001 	andeq	r0, r0, #1
     220:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
     224:	03000002 	movweq	r0, #2
     228:	9c1901f2 	ldflss	f0, [r9], {242}	; 0xf2
     22c:	02000000 	andeq	r0, r0, #0
     230:	46082c23 	strmi	r2, [r8], -r3, lsr #24
     234:	03000002 	movweq	r0, #2
     238:	9c1901f3 	ldflss	f0, [r9], {243}	; 0xf3
     23c:	02000000 	andeq	r0, r0, #0
     240:	73083023 	movwvc	r3, #32803	; 0x8023
     244:	03000001 	movweq	r0, #1
     248:	9c1901f4 	ldflss	f0, [r9], {244}	; 0xf4
     24c:	02000000 	andeq	r0, r0, #0
     250:	30083423 	andcc	r3, r8, r3, lsr #8
     254:	03000007 	movweq	r0, #7
     258:	9c1901f5 	ldflss	f0, [r9], {245}	; 0xf5
     25c:	02000000 	andeq	r0, r0, #0
     260:	eb083823 	bl	20e2f4 <__RAM_SIZE+0x10e2f4>
     264:	03000000 	movweq	r0, #0
     268:	9c1901f6 	ldflss	f0, [r9], {246}	; 0xf6
     26c:	02000000 	andeq	r0, r0, #0
     270:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
     274:	03000003 	movweq	r0, #3
     278:	8f1b01fb 	svchi	0x001b01fb
     27c:	02000004 	andeq	r0, r0, #4
     280:	52084023 	andpl	r4, r8, #35	; 0x23
     284:	03000001 	movweq	r0, #1
     288:	3f1b0203 	svccc	0x001b0203
     28c:	02000001 	andeq	r0, r0, #1
     290:	07084423 	streq	r4, [r8, -r3, lsr #8]
     294:	03000001 	movweq	r0, #1
     298:	a8190204 	ldmdage	r9, {r2, r9}
     29c:	02000000 	andeq	r0, r0, #0
     2a0:	3b084823 	blcc	212334 <__RAM_SIZE+0x112334>
     2a4:	03000003 	movweq	r0, #3
     2a8:	51190208 	tstpl	r9, r8, lsl #4
     2ac:	02000001 	andeq	r0, r0, #1
     2b0:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
     2b4:	03000002 	movweq	r0, #2
     2b8:	8f1b020e 	svchi	0x001b020e
     2bc:	02000004 	andeq	r0, r0, #4
     2c0:	ce086823 	cdpgt	8, 0, cr6, cr8, cr3, {1}
     2c4:	03000005 	movweq	r0, #5
     2c8:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
     2cc:	02000000 	andeq	r0, r0, #0
     2d0:	17086c23 	strne	r6, [r8, -r3, lsr #24]
     2d4:	03000007 	movweq	r0, #7
     2d8:	781a0211 	ldmdavc	sl, {r0, r4, r9}
     2dc:	02000004 	andeq	r0, r0, #4
     2e0:	12087023 	andne	r7, r8, #35	; 0x23
     2e4:	03000002 	movweq	r0, #2
     2e8:	781a0212 	ldmdavc	sl, {r1, r4, r9}
     2ec:	02000004 	andeq	r0, r0, #4
     2f0:	fa087423 	blx	21d384 <__RAM_SIZE+0x11d384>
     2f4:	03000006 	movweq	r0, #6
     2f8:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
     2fc:	02000000 	andeq	r0, r0, #0
     300:	c6087823 	strgt	r7, [r8], -r3, lsr #16
     304:	03000003 	movweq	r0, #3
     308:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
     30c:	02000000 	andeq	r0, r0, #0
     310:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
     314:	03000005 	movweq	r0, #5
     318:	9c190215 	lfmls	f0, 4, [r9], {21}
     31c:	03000000 	movweq	r0, #0
     320:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     324:	000003e8 	andeq	r0, r0, r8, ror #7
     328:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
     32c:	0000009c 	muleq	r0, ip, r0
     330:	01842303 	orreq	r2, r4, r3, lsl #6
     334:	0008e408 	andeq	lr, r8, r8, lsl #8
     338:	021f0300 	andseq	r0, pc, #0, 6
     33c:	0004781a 	andeq	r7, r4, sl, lsl r8
     340:	88230300 	stmdahi	r3!, {r8, r9}
     344:	07d50801 	ldrbeq	r0, [r5, r1, lsl #16]
     348:	20030000 	andcs	r0, r3, r0
     34c:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
     350:	23030000 	movwcs	r0, #12288	; 0x3000
     354:	c108018c 	smlabbgt	r8, ip, r1, r0
     358:	03000002 	movweq	r0, #2
     35c:	9c19022e 	lfmls	f0, 4, [r9], {46}	; 0x2e
     360:	03000000 	movweq	r0, #0
     364:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     368:	00000256 	andeq	r0, r0, r6, asr r2
     36c:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
     370:	0000009c 	muleq	r0, ip, r0
     374:	01942303 	orrseq	r2, r4, r3, lsl #6
     378:	00032008 	andeq	r2, r3, r8
     37c:	02300300 	eorseq	r0, r0, #0, 6
     380:	00009c19 	andeq	r9, r0, r9, lsl ip
     384:	98230300 	stmdals	r3!, {r8, r9}
     388:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
     38c:	33030000 	movwcc	r0, #12288	; 0x3000
     390:	009c1902 	addseq	r1, ip, r2, lsl #18
     394:	23030000 	movwcs	r0, #12288	; 0x3000
     398:	0008019c 	muleq	r8, ip, r1
     39c:	03000000 	movweq	r0, #0
     3a0:	741a0235 	ldrvc	r0, [sl], #-565	; 0xfffffdcb
     3a4:	03000005 	movweq	r0, #5
     3a8:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
     3ac:	00001bb7 			; <UNDEFINED> instruction: 0x00001bb7
     3b0:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
     3b4:	000000a8 	andeq	r0, r0, r8, lsr #1
     3b8:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
     3bc:	001c7708 	andseq	r7, ip, r8, lsl #14
     3c0:	023d0300 	eorseq	r0, sp, #0, 6
     3c4:	0000a819 	andeq	sl, r0, r9, lsl r8
     3c8:	a8230300 	stmdage	r3!, {r8, r9}
     3cc:	1b300801 	blne	c023d8 <__RAM_SIZE+0xb023d8>
     3d0:	41030000 	mrsmi	r0, (UNDEF: 3)
     3d4:	00a81902 	adceq	r1, r8, r2, lsl #18
     3d8:	23030000 	movwcs	r0, #12288	; 0x3000
     3dc:	2e0801ac 	adfcs<illegal precision>p	f0, f0, #4.0
     3e0:	0300001d 	movweq	r0, #29
     3e4:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
     3e8:	03000000 	movweq	r0, #0
     3ec:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
     3f0:	00001c47 	andeq	r1, r0, r7, asr #24
     3f4:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
     3f8:	000000a8 	andeq	r0, r0, r8, lsr #1
     3fc:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
     400:	0007a808 	andeq	sl, r7, r8, lsl #16
     404:	024c0300 	subeq	r0, ip, #0, 6
     408:	0004781a 	andeq	r7, r4, sl, lsl r8
     40c:	b8230300 	stmdalt	r3!, {r8, r9}
     410:	1d060801 	stcne	8, cr0, [r6, #-4]
     414:	4f030000 	svcmi	0x00030000
     418:	00a81902 	adceq	r1, r8, r2, lsl #18
     41c:	23030000 	movwcs	r0, #12288	; 0x3000
     420:	080801bc 	stmdaeq	r8, {r2, r3, r4, r5, r7, r8}
     424:	0300001b 	movweq	r0, #27
     428:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
     42c:	03000000 	movweq	r0, #0
     430:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
     434:	00001a85 	andeq	r1, r0, r5, lsl #21
     438:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
     43c:	000000a8 	andeq	r0, r0, r8, lsr #1
     440:	01c42303 	biceq	r2, r4, r3, lsl #6
     444:	001bdb08 	andseq	sp, fp, r8, lsl #22
     448:	02590300 	subseq	r0, r9, #0, 6
     44c:	0000a819 	andeq	sl, r0, r9, lsl r8
     450:	c8230300 	stmdagt	r3!, {r8, r9}
     454:	09a90801 	stmibeq	r9!, {r0, fp}
     458:	5d030000 	stcpl	0, cr0, [r3, #-0]
     45c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
     460:	23030000 	movwcs	r0, #12288	; 0x3000
     464:	810801cc 	smlabthi	r8, ip, r1, r0
     468:	03000004 	movweq	r0, #4
     46c:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
     470:	03000000 	movweq	r0, #0
     474:	0001d023 	andeq	sp, r1, r3, lsr #32
     478:	0164040b 	cmneq	r4, fp, lsl #8
     47c:	01090000 	mrseq	r0, (UNDEF: 9)
     480:	0000048f 	andeq	r0, r0, pc, lsl #9
     484:	0004780a 	andeq	r7, r4, sl, lsl #16
     488:	00a80a00 	adceq	r0, r8, r0, lsl #20
     48c:	0b000000 	bleq	494 <STACK_SIZE+0x94>
     490:	00047e04 	andeq	r7, r4, r4, lsl #28
     494:	07980700 	ldreq	r0, [r8, r0, lsl #14]
     498:	03340000 	teqeq	r4, #0
     49c:	7410037e 	ldrvc	r0, [r0], #-894	; 0xfffffc82
     4a0:	08000005 	stmdaeq	r0, {r0, r2}
     4a4:	0000018d 	andeq	r0, r0, sp, lsl #3
     4a8:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
     4ac:	000000a8 	andeq	r0, r0, r8, lsr #1
     4b0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
     4b4:	0000087c 	andeq	r0, r0, ip, ror r8
     4b8:	1a038503 	bne	e18cc <SYSTICK_CYCLES+0xb888d>
     4bc:	0000015e 	andeq	r0, r0, lr, asr r1
     4c0:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
     4c4:	000006e1 	andeq	r0, r0, r1, ror #13
     4c8:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
     4cc:	0000009c 	muleq	r0, ip, r0
     4d0:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
     4d4:	000004cb 	andeq	r0, r0, fp, asr #9
     4d8:	1a038c03 	bne	e34ec <SYSTICK_CYCLES+0xba4ad>
     4dc:	0000067f 	andeq	r0, r0, pc, ror r6
     4e0:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
     4e4:	00000162 	andeq	r0, r0, r2, ror #2
     4e8:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
     4ec:	0000009c 	muleq	r0, ip, r0
     4f0:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
     4f4:	00000121 	andeq	r0, r0, r1, lsr #2
     4f8:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
     4fc:	0000009c 	muleq	r0, ip, r0
     500:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
     504:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
     508:	1a039803 	bne	e651c <SYSTICK_CYCLES+0xbd4dd>
     50c:	00000478 	andeq	r0, r0, r8, ror r4
     510:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
     514:	000006c8 	andeq	r0, r0, r8, asr #13
     518:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
     51c:	0000009c 	muleq	r0, ip, r0
     520:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
     524:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
     528:	1a039d03 	bne	e793c <SYSTICK_CYCLES+0xbe8fd>
     52c:	00000574 	andeq	r0, r0, r4, ror r5
     530:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
     534:	00000685 	andeq	r0, r0, r5, lsl #13
     538:	1a039e03 	bne	e7d4c <SYSTICK_CYCLES+0xbed0d>
     53c:	00000574 	andeq	r0, r0, r4, ror r5
     540:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
     544:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     548:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
     54c:	0000009c 	muleq	r0, ip, r0
     550:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     554:	000009c5 	andeq	r0, r0, r5, asr #19
     558:	1a03a603 	bne	e9d6c <SYSTICK_CYCLES+0xc0d2d>
     55c:	00000574 	andeq	r0, r0, r4, ror r5
     560:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     564:	00000425 	andeq	r0, r0, r5, lsr #8
     568:	1a03a703 	bne	ea17c <SYSTICK_CYCLES+0xc113d>
     56c:	00000574 	andeq	r0, r0, r4, ror r5
     570:	00302302 	eorseq	r2, r0, r2, lsl #6
     574:	0495040b 	ldreq	r0, [r5], #1035	; 0x40b
     578:	d40c0000 	strle	r0, [ip], #-0
     57c:	03000008 	movweq	r0, #8
     580:	64030286 	strvs	r0, [r3], #-646	; 0xfffffd7a
     584:	0b000001 	bleq	590 <STACK_SIZE+0x190>
     588:	00009004 	andeq	r9, r0, r4
     58c:	04600700 	strbteq	r0, [r0], #-1792	; 0xfffff900
     590:	03340000 	teqeq	r4, #0
     594:	6c1002d9 	lfmvs	f0, 4, [r0], {217}	; 0xd9
     598:	08000006 	stmdaeq	r0, {r1, r2}
     59c:	00000401 	andeq	r0, r0, r1, lsl #8
     5a0:	1902dd03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, lr, pc}
     5a4:	000000a8 	andeq	r0, r0, r8, lsr #1
     5a8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
     5ac:	00000374 	andeq	r0, r0, r4, ror r3
     5b0:	1a02e003 	bne	b85c4 <SYSTICK_CYCLES+0x8f585>
     5b4:	0000015e 	andeq	r0, r0, lr, asr r1
     5b8:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
     5bc:	00000755 	andeq	r0, r0, r5, asr r7
     5c0:	1902e303 	stmdbne	r2, {r0, r1, r8, r9, sp, lr, pc}
     5c4:	000000a8 	andeq	r0, r0, r8, lsr #1
     5c8:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
     5cc:	0000089b 	muleq	r0, fp, r8
     5d0:	1902e603 	stmdbne	r2, {r0, r1, r9, sl, sp, lr, pc}
     5d4:	0000009c 	muleq	r0, ip, r0
     5d8:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
     5dc:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     5e0:	1a02e903 	bne	ba9f4 <SYSTICK_CYCLES+0x919b5>
     5e4:	00000587 	andeq	r0, r0, r7, lsl #11
     5e8:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
     5ec:	00001107 	andeq	r1, r0, r7, lsl #2
     5f0:	1a02ed03 	bne	bba04 <SYSTICK_CYCLES+0x929c5>
     5f4:	00000587 	andeq	r0, r0, r7, lsl #11
     5f8:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
     5fc:	00000528 	andeq	r0, r0, r8, lsr #10
     600:	1a02f003 	bne	bc614 <SYSTICK_CYCLES+0x935d5>
     604:	00000587 	andeq	r0, r0, r7, lsl #11
     608:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
     60c:	00000306 	andeq	r0, r0, r6, lsl #6
     610:	1902f303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp, lr, pc}
     614:	000000a8 	andeq	r0, r0, r8, lsr #1
     618:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
     61c:	00000972 	andeq	r0, r0, r2, ror r9
     620:	1a02f903 	bne	bea34 <SYSTICK_CYCLES+0x959f5>
     624:	00000478 	andeq	r0, r0, r8, ror r4
     628:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
     62c:	000004ae 	andeq	r0, r0, lr, lsr #9
     630:	1a02fe03 	bne	bfe44 <SYSTICK_CYCLES+0x96e05>
     634:	00000478 	andeq	r0, r0, r8, ror r4
     638:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
     63c:	0000050b 	andeq	r0, r0, fp, lsl #10
     640:	1902ff03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, ip, sp, lr, pc}
     644:	0000009c 	muleq	r0, ip, r0
     648:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     64c:	000002a7 	andeq	r0, r0, r7, lsr #5
     650:	1a030303 	bne	c1264 <SYSTICK_CYCLES+0x98225>
     654:	0000066c 	andeq	r0, r0, ip, ror #12
     658:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     65c:	0000085e 	andeq	r0, r0, lr, asr r8
     660:	1a030403 	bne	c1674 <SYSTICK_CYCLES+0x98635>
     664:	0000066c 	andeq	r0, r0, ip, ror #12
     668:	00302302 	eorseq	r2, r0, r2, lsl #6
     66c:	058d040b 	streq	r0, [sp, #1035]	; 0x40b
     670:	740c0000 	strvc	r0, [ip], #-0
     674:	03000004 	movweq	r0, #4
     678:	8d030323 	stchi	3, cr0, [r3, #-140]	; 0xffffff74
     67c:	0b000005 	bleq	698 <STACK_SIZE+0x298>
     680:	00057a04 	andeq	r7, r5, r4, lsl #20
     684:	31010d00 	tstcc	r1, r0, lsl #26
     688:	01000009 	tsteq	r0, r9
     68c:	61010541 	tstvs	r1, r1, asr #10
     690:	90000000 	andls	r0, r0, r0
     694:	b8100008 	ldmdalt	r0, {r3}
     698:	00100008 	andseq	r0, r0, r8
     69c:	01000000 	mrseq	r0, (UNDEF: 0)
     6a0:	000006fb 	strdeq	r0, [r0], -fp
     6a4:	0018bc0e 	andseq	fp, r8, lr, lsl #24
     6a8:	09420100 	stmdbeq	r2, {r8}^
     6ac:	00000061 	andeq	r0, r0, r1, rrx
     6b0:	00000026 	andeq	r0, r0, r6, lsr #32
     6b4:	00000020 	andeq	r0, r0, r0, lsr #32
     6b8:	0008960f 	andeq	r9, r8, pc, lsl #12
     6bc:	000b5a10 	andeq	r5, fp, r0, lsl sl
     6c0:	089c1000 	ldmeq	ip, {ip}
     6c4:	0b681000 	bleq	1a046cc <__RAM_SIZE+0x19046cc>
     6c8:	06d80000 	ldrbeq	r0, [r8], r0
     6cc:	01110000 	tsteq	r1, r0
     6d0:	98030550 	stmdals	r3, {r4, r6, r8, sl}
     6d4:	0010004e 	andseq	r0, r0, lr, asr #32
     6d8:	0008a00f 	andeq	sl, r8, pc
     6dc:	000b7510 	andeq	r7, fp, r0, lsl r5
     6e0:	08ac1200 	stmiaeq	ip!, {r9, ip}
     6e4:	0b841000 	bleq	fe1046ec <__RAM_segment_used_end__+0xc60046ec>
     6e8:	01110000 	tsteq	r1, r0
     6ec:	a0030550 	andge	r0, r3, r0, asr r5
     6f0:	1110004e 	tstne	r0, lr, asr #32
     6f4:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
     6f8:	1300007f 	movwne	r0, #127	; 0x7f
     6fc:	00013c01 	andeq	r3, r1, r1, lsl #24
     700:	06350100 	ldrteq	r0, [r5], -r0, lsl #2
     704:	00081c01 	andeq	r1, r8, r1, lsl #24
     708:	00089010 	andeq	r9, r8, r0, lsl r0
     70c:	00005010 	andeq	r5, r0, r0, lsl r0
     710:	082a0100 	stmdaeq	sl!, {r8}
     714:	93140000 	tstls	r4, #0
     718:	01000002 	tsteq	r0, r2
     71c:	00762235 	rsbseq	r2, r6, r5, lsr r2
     720:	008c0000 	addeq	r0, ip, r0
     724:	00880000 	addeq	r0, r8, r0
     728:	cb150000 	blgt	540730 <__RAM_SIZE+0x440730>
     72c:	01000008 	tsteq	r0, r8
     730:	015e0b36 	cmpeq	lr, r6, lsr fp
     734:	91020000 	mrsls	r0, (UNDEF: 2)
     738:	074d156c 	strbeq	r1, [sp, -ip, ror #10]
     73c:	37010000 	strcc	r0, [r1, -r0]
     740:	00057a16 	andeq	r7, r5, r6, lsl sl
     744:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
     748:	15380010 	ldrne	r0, [r8, #-16]!
     74c:	00000745 	andeq	r0, r0, r5, asr #14
     750:	72193801 	andsvc	r3, r9, #65536	; 0x10000
     754:	05000006 	streq	r0, [r0, #-6]
     758:	00109003 	andseq	r9, r0, r3
     75c:	01b21538 			; <UNDEFINED> instruction: 0x01b21538
     760:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
     764:	00082a12 	andeq	r2, r8, r2, lsl sl
     768:	90030500 	andls	r0, r3, r0, lsl #10
     76c:	10380000 	eorsne	r0, r8, r0
     770:	10000838 	andne	r0, r0, r8, lsr r8
     774:	00000b92 	muleq	r0, r2, fp
     778:	000007a3 	andeq	r0, r0, r3, lsr #15
     77c:	02500111 	subseq	r0, r0, #1073741828	; 0x40000004
     780:	01110075 	tsteq	r1, r5, ror r0
     784:	88030551 	stmdahi	r3, {r0, r4, r6, r8, sl}
     788:	1110004e 	tstne	r0, lr, asr #32
     78c:	03055201 	movweq	r5, #20993	; 0x5201
     790:	38000090 	stmdacc	r0, {r4, r7}
     794:	03530111 	cmpeq	r3, #1073741828	; 0x40000004
     798:	1110000a 	tstne	r0, sl
     79c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
     7a0:	10003408 	andne	r3, r0, r8, lsl #8
     7a4:	10000846 	andne	r0, r0, r6, asr #16
     7a8:	00000ba1 	andeq	r0, r0, r1, lsr #23
     7ac:	000007ca 	andeq	r0, r0, sl, asr #15
     7b0:	02500111 	subseq	r0, r0, #1073741828	; 0x40000004
     7b4:	01110075 	tsteq	r1, r5, ror r0
     7b8:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
     7bc:	03520111 	cmpeq	r2, #1073741828	; 0x40000004
     7c0:	1104000a 	tstne	r4, sl
     7c4:	74025301 	strvc	r5, [r2], #-769	; 0xfffffcff
     7c8:	6c100000 	ldcvs	0, cr0, [r0], {-0}
     7cc:	b0100008 	andslt	r0, r0, r8
     7d0:	2000000b 	andcs	r0, r0, fp
     7d4:	11000008 	tstne	r0, r8
     7d8:	03055001 	movweq	r5, #20481	; 0x5001
     7dc:	380010c4 	stmdacc	r0, {r2, r6, r7, ip}
     7e0:	05510111 	ldrbeq	r0, [r1, #-273]	; 0xfffffeef
     7e4:	004e9003 	subeq	r9, lr, r3
     7e8:	52011110 	andpl	r1, r1, #16, 2
     7ec:	08010305 	stmdaeq	r1, {r0, r2, r8, r9}
     7f0:	01111000 	tsteq	r1, r0
     7f4:	00740253 	rsbseq	r0, r4, r3, asr r2
     7f8:	047d0211 	ldrbteq	r0, [sp], #-529	; 0xfffffdef
     7fc:	04000a03 	streq	r0, [r0], #-2563	; 0xfffff5fd
     800:	087d0211 	ldmdaeq	sp!, {r0, r4, r9}^
     804:	02113101 	andseq	r3, r1, #1073741824	; 0x40000000
     808:	31010c7d 	tstcc	r1, sp, ror ip
     80c:	107d0211 	rsbsne	r0, sp, r1, lsl r2
     810:	02113a01 	andseq	r3, r1, #4096	; 0x1000
     814:	3101147d 	tstcc	r1, sp, ror r4
     818:	187d0211 	ldmdane	sp!, {r0, r4, r9}^
     81c:	00d40802 	sbcseq	r0, r4, r2, lsl #16
     820:	0008720f 	andeq	r7, r8, pc, lsl #4
     824:	000bbf10 	andeq	fp, fp, r0, lsl pc
     828:	90160000 	andsls	r0, r6, r0
     82c:	3b000000 	blcc	834 <__Vectors_Size+0x74>
     830:	17000008 	strne	r0, [r0, -r8]
     834:	00000068 	andeq	r0, r0, r8, rrx
     838:	18000fff 	stmdane	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
     83c:	000004da 	ldrdeq	r0, [r0], -sl
     840:	010d2d01 	tsteq	sp, r1, lsl #26
     844:	10000800 	andne	r0, r0, r0, lsl #16
     848:	1000081c 	andne	r0, r0, ip, lsl r8
     84c:	000000ad 	andeq	r0, r0, sp, lsr #1
     850:	0008ac01 	andeq	sl, r8, r1, lsl #24
     854:	26181400 	ldrcs	r1, [r8], -r0, lsl #8
     858:	2d010000 	stccs	0, cr0, [r1, #-0]
     85c:	0000a821 	andeq	sl, r0, r1, lsr #16
     860:	0000d100 	andeq	sp, r0, r0, lsl #2
     864:	0000cd00 	andeq	ip, r0, r0, lsl #26
     868:	03180e00 	tsteq	r8, #0, 28
     86c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     870:	00006109 	andeq	r6, r0, r9, lsl #2
     874:	0000f800 	andeq	pc, r0, r0, lsl #16
     878:	0000f200 	andeq	pc, r0, r0, lsl #4
     87c:	080c1000 	stmdaeq	ip, {ip}
     880:	0b841000 	bleq	fe104888 <__RAM_segment_used_end__+0xc6004888>
     884:	089a0000 	ldmeq	sl, {}	; <UNPREDICTABLE>
     888:	01110000 	tsteq	r1, r0
     88c:	74030550 	strvc	r0, [r3], #-1360	; 0xfffffab0
     890:	1110004e 	tstne	r0, lr, asr #32
     894:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
     898:	1412007f 	ldrne	r0, [r2], #-127	; 0xffffff81
     89c:	ce100008 	cdpgt	0, 1, cr0, cr0, cr8, {0}
     8a0:	1100000b 	tstne	r0, fp
     8a4:	0a035001 	beq	d48b0 <SYSTICK_CYCLES+0xab871>
     8a8:	000003e8 	andeq	r0, r0, r8, ror #7
     8ac:	09a30113 	stmibeq	r3!, {r0, r1, r4, r8}
     8b0:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
     8b4:	00000106 	andeq	r0, r0, r6, lsl #2
     8b8:	00000000 	andeq	r0, r0, r0
     8bc:	01220000 			; <UNDEFINED> instruction: 0x01220000
     8c0:	01010000 	mrseq	r0, (UNDEF: 1)
     8c4:	19000009 	stmdbne	r0, {r0, r3}
     8c8:	00000936 	andeq	r0, r0, r6, lsr r9
     8cc:	00000911 	andeq	r0, r0, r1, lsl r9
     8d0:	00030501 	andeq	r0, r3, r1, lsl #10
     8d4:	10000000 	andne	r0, r0, r0
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	00000b84 	andeq	r0, r0, r4, lsl #23
     8e0:	000008f7 	strdeq	r0, [r0], -r7
     8e4:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     8e8:	00000003 	andeq	r0, r0, r3
     8ec:	51011100 	mrspl	r1, (UNDEF: 17)
     8f0:	00000305 	andeq	r0, r0, r5, lsl #6
     8f4:	0f000000 	svceq	0x00000000
     8f8:	00000000 	andeq	r0, r0, r0
     8fc:	00000916 	andeq	r0, r0, r6, lsl r9
     900:	007f1600 	rsbseq	r1, pc, r0, lsl #12
     904:	09110000 	ldmdbeq	r1, {}	; <UNPREDICTABLE>
     908:	681a0000 	ldmdavs	sl, {}	; <UNPREDICTABLE>
     90c:	05000000 	streq	r0, [r0, #-0]
     910:	09010500 	stmdbeq	r1, {r8, sl}
     914:	01130000 	tsteq	r3, r0
     918:	0000099d 	muleq	r0, sp, r9
     91c:	01062301 	tsteq	r6, r1, lsl #6
	...
     928:	00000142 	andeq	r0, r0, r2, asr #2
     92c:	00096b01 	andeq	r6, r9, r1, lsl #22
     930:	09361900 	ldmdbeq	r6!, {r8, fp, ip}
     934:	09110000 	ldmdbeq	r1, {}	; <UNPREDICTABLE>
     938:	05010000 	streq	r0, [r1, #-0]
     93c:	00000003 	andeq	r0, r0, r3
     940:	00001000 	andeq	r1, r0, r0
     944:	0b840000 	bleq	fe10094c <__RAM_segment_used_end__+0xc600094c>
     948:	09610000 	stmdbeq	r1!, {}^	; <UNPREDICTABLE>
     94c:	01110000 	tsteq	r1, r0
     950:	00030550 	andeq	r0, r3, r0, asr r5
     954:	11000000 	mrsne	r0, (UNDEF: 0)
     958:	03055101 	movweq	r5, #20737	; 0x5101
     95c:	00000000 	andeq	r0, r0, r0
     960:	00000f00 	andeq	r0, r0, r0, lsl #30
     964:	096b0000 	stmdbeq	fp!, {}^	; <UNPREDICTABLE>
     968:	13000000 	movwne	r0, #0
     96c:	00099701 	andeq	r9, r9, r1, lsl #14
     970:	061e0100 	ldreq	r0, [lr], -r0, lsl #2
     974:	00000001 	andeq	r0, r0, r1
     978:	00000000 	andeq	r0, r0, r0
     97c:	00016200 	andeq	r6, r1, r0, lsl #4
     980:	09c00100 	stmibeq	r0, {r8}^
     984:	36190000 	ldrcc	r0, [r9], -r0
     988:	11000009 	tstne	r0, r9
     98c:	01000009 	tsteq	r0, r9
     990:	00000305 	andeq	r0, r0, r5, lsl #6
     994:	00100000 	andseq	r0, r0, r0
     998:	84000000 	strhi	r0, [r0], #-0
     99c:	b600000b 	strlt	r0, [r0], -fp
     9a0:	11000009 	tstne	r0, r9
     9a4:	03055001 	movweq	r5, #20481	; 0x5001
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	05510111 	ldrbeq	r0, [r1, #-273]	; 0xfffffeef
     9b0:	00000003 	andeq	r0, r0, r3
     9b4:	000f0000 	andeq	r0, pc, r0
     9b8:	c0000000 	andgt	r0, r0, r0
     9bc:	00000009 	andeq	r0, r0, r9
     9c0:	09910113 	ldmibeq	r1, {r0, r1, r4, r8}
     9c4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
     9c8:	00000106 	andeq	r0, r0, r6, lsl #2
     9cc:	00000000 	andeq	r0, r0, r0
     9d0:	01820000 	orreq	r0, r2, r0
     9d4:	15010000 	strne	r0, [r1, #-0]
     9d8:	1900000a 	stmdbne	r0, {r1, r3}
     9dc:	00000936 	andeq	r0, r0, r6, lsr r9
     9e0:	00000911 	andeq	r0, r0, r1, lsl r9
     9e4:	00030501 	andeq	r0, r3, r1, lsl #10
     9e8:	10000000 	andne	r0, r0, r0
     9ec:	00000000 	andeq	r0, r0, r0
     9f0:	00000b84 	andeq	r0, r0, r4, lsl #23
     9f4:	00000a0b 	andeq	r0, r0, fp, lsl #20
     9f8:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     9fc:	00000003 	andeq	r0, r0, r3
     a00:	51011100 	mrspl	r1, (UNDEF: 17)
     a04:	00000305 	andeq	r0, r0, r5, lsl #6
     a08:	0f000000 	svceq	0x00000000
     a0c:	00000000 	andeq	r0, r0, r0
     a10:	00000a15 	andeq	r0, r0, r5, lsl sl
     a14:	8b011300 	blhi	4561c <SYSTICK_CYCLES+0x1c5dd>
     a18:	01000009 	tsteq	r0, r9
     a1c:	00010614 	andeq	r0, r1, r4, lsl r6
     a20:	00000000 	andeq	r0, r0, r0
     a24:	a2000000 	andge	r0, r0, #0
     a28:	01000001 	tsteq	r0, r1
     a2c:	00000a6a 	andeq	r0, r0, sl, ror #20
     a30:	00093619 	andeq	r3, r9, r9, lsl r6
     a34:	00091100 	andeq	r1, r9, r0, lsl #2
     a38:	03050100 	movweq	r0, #20736	; 0x5100
     a3c:	00000000 	andeq	r0, r0, r0
     a40:	00000010 	andeq	r0, r0, r0, lsl r0
     a44:	000b8400 	andeq	r8, fp, r0, lsl #8
     a48:	000a6000 	andeq	r6, sl, r0
     a4c:	50011100 	andpl	r1, r1, r0, lsl #2
     a50:	00000305 	andeq	r0, r0, r5, lsl #6
     a54:	01110000 	tsteq	r1, r0
     a58:	00030551 	andeq	r0, r3, r1, asr r5
     a5c:	00000000 	andeq	r0, r0, r0
     a60:	0000000f 	andeq	r0, r0, pc
     a64:	000a6a00 	andeq	r6, sl, r0, lsl #20
     a68:	01130000 	tsteq	r3, r0
     a6c:	00000985 	andeq	r0, r0, r5, lsl #19
     a70:	01061001 	tsteq	r6, r1
	...
     a7c:	000001c2 	andeq	r0, r0, r2, asr #3
     a80:	000ab201 	andeq	fp, sl, r1, lsl #4
     a84:	09361900 	ldmdbeq	r6!, {r8, fp, ip}
     a88:	09110000 	ldmdbeq	r1, {}	; <UNPREDICTABLE>
     a8c:	05010000 	streq	r0, [r1, #-0]
     a90:	00000003 	andeq	r0, r0, r3
     a94:	00001200 	andeq	r1, r0, r0, lsl #4
     a98:	0b840000 	bleq	fe100aa0 <__RAM_segment_used_end__+0xc6000aa0>
     a9c:	01110000 	tsteq	r1, r0
     aa0:	00030550 	andeq	r0, r3, r0, asr r5
     aa4:	11000000 	mrsne	r0, (UNDEF: 0)
     aa8:	03055101 	movweq	r5, #20737	; 0x5101
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	01130000 	tsteq	r3, r0
     ab4:	00000802 	andeq	r0, r0, r2, lsl #16
     ab8:	01060c01 	tsteq	r6, r1, lsl #24
	...
     ac4:	000001e2 	andeq	r0, r0, r2, ror #3
     ac8:	000af101 	andeq	pc, sl, r1, lsl #2
     acc:	09361900 	ldmdbeq	r6!, {r8, fp, ip}
     ad0:	0b010000 	bleq	40ad8 <SYSTICK_CYCLES+0x17a99>
     ad4:	05010000 	streq	r0, [r1, #-0]
     ad8:	00000003 	andeq	r0, r0, r3
     adc:	00001200 	andeq	r1, r0, r0, lsl #4
     ae0:	0b680000 	bleq	1a00ae8 <__RAM_SIZE+0x1900ae8>
     ae4:	01110000 	tsteq	r1, r0
     ae8:	00030550 	andeq	r0, r3, r0, asr r5
     aec:	00000000 	andeq	r0, r0, r0
     af0:	007f1600 	rsbseq	r1, pc, r0, lsl #12
     af4:	0b010000 	bleq	40afc <SYSTICK_CYCLES+0x17abd>
     af8:	681a0000 	ldmdavs	sl, {}	; <UNPREDICTABLE>
     afc:	0f000000 	svceq	0x00000000
     b00:	0af10500 	beq	ffc41f08 <__RAM_segment_used_end__+0xc7b41f08>
     b04:	01130000 	tsteq	r3, r0
     b08:	00000386 	andeq	r0, r0, r6, lsl #7
     b0c:	01060801 	tsteq	r6, r1, lsl #16
	...
     b18:	00000202 	andeq	r0, r0, r2, lsl #4
     b1c:	000b4501 	andeq	r4, fp, r1, lsl #10
     b20:	09361900 	ldmdbeq	r6!, {r8, fp, ip}
     b24:	0b550000 	bleq	1540b2c <__RAM_SIZE+0x1440b2c>
     b28:	05010000 	streq	r0, [r1, #-0]
     b2c:	00000003 	andeq	r0, r0, r3
     b30:	00001200 	andeq	r1, r0, r0, lsl #4
     b34:	0b680000 	bleq	1a00b3c <__RAM_SIZE+0x1900b3c>
     b38:	01110000 	tsteq	r1, r0
     b3c:	00030550 	andeq	r0, r3, r0, asr r5
     b40:	00000000 	andeq	r0, r0, r0
     b44:	007f1600 	rsbseq	r1, pc, r0, lsl #12
     b48:	0b550000 	bleq	1540b50 <__RAM_SIZE+0x1440b50>
     b4c:	681a0000 	ldmdavs	sl, {}	; <UNPREDICTABLE>
     b50:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     b54:	0b450500 	bleq	1141f5c <__RAM_SIZE+0x1041f5c>
     b58:	011b0000 	tsteq	fp, r0
     b5c:	0006be01 	andeq	fp, r6, r1, lsl #28
     b60:	0006be00 	andeq	fp, r6, r0, lsl #28
     b64:	06070400 	streq	r0, [r7], -r0, lsl #8
     b68:	a901011c 	stmdbge	r1, {r2, r3, r4, r8}
     b6c:	9f000004 	svcls	0x00000004
     b70:	06000004 	streq	r0, [r0], -r4
     b74:	01011d00 	tsteq	r1, r0, lsl #26
     b78:	00000834 	andeq	r0, r0, r4, lsr r8
     b7c:	00000834 	andeq	r0, r0, r4, lsr r8
     b80:	0d064b03 	vstreq	d4, [r6, #-12]
     b84:	3101011b 	tstcc	r1, fp, lsl r1
     b88:	3100000d 	tstcc	r0, sp
     b8c:	0500000d 	streq	r0, [r0, #-13]
     b90:	011d05c8 	tsteq	sp, r8, asr #11
     b94:	00058001 	andeq	r8, r5, r1
     b98:	00058000 	andeq	r8, r5, r0
     b9c:	06060300 	streq	r0, [r6], -r0, lsl #6
     ba0:	01011d0d 	tsteq	r1, sp, lsl #26
     ba4:	0000076c 	andeq	r0, r0, ip, ror #14
     ba8:	0000076c 	andeq	r0, r0, ip, ror #14
     bac:	0d060403 	cfstrseq	mvf0, [r6, #-12]
     bb0:	a501011d 	strge	r0, [r1, #-285]	; 0xfffffee3
     bb4:	a5000005 	strge	r0, [r0, #-5]
     bb8:	03000005 	movweq	r0, #5
     bbc:	1d0d06fa 	stcne	6, cr0, [sp, #-1000]	; 0xfffffc18
     bc0:	056d0101 	strbeq	r0, [sp, #-257]!	; 0xfffffeff
     bc4:	056d0000 	strbeq	r0, [sp, #-0]!
     bc8:	e1030000 	mrs	r0, (UNDEF: 3)
     bcc:	011d0d05 	tsteq	sp, r5, lsl #26
     bd0:	00088a01 	andeq	r8, r8, r1, lsl #20
     bd4:	00088a00 	andeq	r8, r8, r0, lsl #20
     bd8:	06ef0300 	strbteq	r0, [pc], r0, lsl #6
     bdc:	04e5000d 	strbteq	r0, [r5], #13
     be0:	00020000 	andeq	r0, r2, r0
     be4:	000001b1 			; <UNDEFINED> instruction: 0x000001b1
     be8:	003d0104 	eorseq	r0, sp, r4, lsl #2
     bec:	d90c0000 	stmdble	ip, {}	; <UNPREDICTABLE>
     bf0:	41000009 	tstmi	r0, r9
     bf4:	60000006 	andvs	r0, r0, r6
	...
     c00:	a2000000 	andge	r0, r0, #0
     c04:	02000002 	andeq	r0, r0, #2
     c08:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
     c0c:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
     c10:	02000009 	andeq	r0, r0, #9
     c14:	003c182b 	eorseq	r1, ip, fp, lsr #16
     c18:	01020000 	mrseq	r0, (UNDEF: 2)
     c1c:	00085008 	andeq	r5, r8, r8
     c20:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     c24:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
     c28:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
     c2c:	02000009 	andeq	r0, r0, #9
     c30:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
     c34:	5b030000 	blpl	c0c3c <SYSTICK_CYCLES+0x97bfd>
     c38:	0200000a 	andeq	r0, r0, #10
     c3c:	0064194f 	rsbeq	r1, r4, pc, asr #18
     c40:	04020000 	streq	r0, [r2], #-0
     c44:	00023407 	andeq	r3, r2, r7, lsl #8
     c48:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     c4c:	000004e8 	andeq	r0, r0, r8, ror #9
     c50:	2f070802 	svccs	0x00070802
     c54:	04000002 	streq	r0, [r0], #-2
     c58:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     c5c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
     c60:	00023907 	andeq	r3, r2, r7, lsl #18
     c64:	09fa0300 	ldmibeq	sl!, {r8, r9}^
     c68:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     c6c:	00003013 	andeq	r3, r0, r3, lsl r0
     c70:	00870500 	addeq	r0, r7, r0, lsl #10
     c74:	5d030000 	stcpl	0, cr0, [r3, #-0]
     c78:	0300000a 	movweq	r0, #10
     c7c:	00581430 	subseq	r1, r8, r0, lsr r4
     c80:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
     c84:	06000000 	streq	r0, [r0], -r0
     c88:	000000a4 	andeq	r0, r0, r4, lsr #1
     c8c:	04027c07 	streq	r7, [r2], #-3079	; 0xfffff3f9
     c90:	b30901f8 	movwlt	r0, #37368	; 0x91f8
     c94:	08000003 	stmdaeq	r0, {r0, r1}
     c98:	00000a15 	andeq	r0, r0, r5, lsl sl
     c9c:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
     ca0:	000000a9 	andeq	r0, r0, r9, lsr #1
     ca4:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
     ca8:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
     cac:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
     cb0:	000000a4 	andeq	r0, r0, r4, lsr #1
     cb4:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
     cb8:	00000aa7 	andeq	r0, r0, r7, lsr #21
     cbc:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
     cc0:	000000a4 	andeq	r0, r0, r4, lsr #1
     cc4:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
     cc8:	00000ab6 			; <UNDEFINED> instruction: 0x00000ab6
     ccc:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
     cd0:	000000a4 	andeq	r0, r0, r4, lsr #1
     cd4:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     cd8:	00524353 	subseq	r4, r2, r3, asr r3
     cdc:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
     ce0:	000000a4 	andeq	r0, r0, r4, lsr #1
     ce4:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     ce8:	00524343 	subseq	r4, r2, r3, asr #6
     cec:	1201ff04 	andne	pc, r1, #4, 30
     cf0:	000000a4 	andeq	r0, r0, r4, lsr #1
     cf4:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
     cf8:	00000b55 	andeq	r0, r0, r5, asr fp
     cfc:	12020004 	andne	r0, r2, #4
     d00:	000003c3 	andeq	r0, r0, r3, asr #7
     d04:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
     d08:	00000b28 	andeq	r0, r0, r8, lsr #22
     d0c:	12020104 	andne	r0, r2, #4, 2
     d10:	000000a4 	andeq	r0, r0, r4, lsr #1
     d14:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
     d18:	00000ace 	andeq	r0, r0, lr, asr #21
     d1c:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
     d20:	000000a4 	andeq	r0, r0, r4, lsr #1
     d24:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     d28:	00000b81 	andeq	r0, r0, r1, lsl #23
     d2c:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
     d30:	000000a4 	andeq	r0, r0, r4, lsr #1
     d34:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     d38:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
     d3c:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
     d40:	000000a4 	andeq	r0, r0, r4, lsr #1
     d44:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
     d48:	00000ac1 	andeq	r0, r0, r1, asr #21
     d4c:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
     d50:	000000a4 	andeq	r0, r0, r4, lsr #1
     d54:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     d58:	00000a56 	andeq	r0, r0, r6, asr sl
     d5c:	12020604 	andne	r0, r2, #4, 12	; 0x400000
     d60:	000000a4 	andeq	r0, r0, r4, lsr #1
     d64:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
     d68:	00000b45 	andeq	r0, r0, r5, asr #22
     d6c:	12020704 	andne	r0, r2, #4, 14	; 0x100000
     d70:	000000a4 	andeq	r0, r0, r4, lsr #1
     d74:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
     d78:	00000a22 	andeq	r0, r0, r2, lsr #20
     d7c:	12020804 	andne	r0, r2, #4, 16	; 0x40000
     d80:	000003dd 	ldrdeq	r0, [r0], -sp
     d84:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
     d88:	00000a6f 	andeq	r0, r0, pc, ror #20
     d8c:	12020904 	andne	r0, r2, #4, 18	; 0x10000
     d90:	000000a9 	andeq	r0, r0, r9, lsr #1
     d94:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
     d98:	00000b6c 	andeq	r0, r0, ip, ror #22
     d9c:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
     da0:	000000a9 	andeq	r0, r0, r9, lsr #1
     da4:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     da8:	00000a46 	andeq	r0, r0, r6, asr #20
     dac:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
     db0:	000003f7 	strdeq	r0, [r0], -r7
     db4:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
     db8:	00000b73 	andeq	r0, r0, r3, ror fp
     dbc:	12020c04 	andne	r0, r2, #4, 24	; 0x400
     dc0:	00000411 	andeq	r0, r0, r1, lsl r4
     dc4:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
     dc8:	00000a0f 	andeq	r0, r0, pc, lsl #20
     dcc:	12020d04 	andne	r0, r2, #4, 26	; 0x100
     dd0:	000000a9 	andeq	r0, r0, r9, lsr #1
     dd4:	09782302 	ldmdbeq	r8!, {r1, r8, r9, sp}^
     dd8:	00525443 	subseq	r5, r2, r3, asr #8
     ddc:	12020e04 	andne	r0, r2, #4, 28	; 0x40
     de0:	000000a9 	andeq	r0, r0, r9, lsr #1
     de4:	087c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}^
     de8:	00000ac7 	andeq	r0, r0, r7, asr #21
     dec:	12020f04 	andne	r0, r2, #4, 30
     df0:	000000a9 	andeq	r0, r0, r9, lsr #1
     df4:	01802303 	orreq	r2, r0, r3, lsl #6
     df8:	000a7e08 	andeq	r7, sl, r8, lsl #28
     dfc:	02100400 	andseq	r0, r0, #0, 8
     e00:	0000a412 	andeq	sl, r0, r2, lsl r4
     e04:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     e08:	0b7b0801 	bleq	1ec2e14 <__RAM_SIZE+0x1dc2e14>
     e0c:	11040000 	mrsne	r0, (UNDEF: 4)
     e10:	00a41202 	adceq	r1, r4, r2, lsl #4
     e14:	23030000 	movwcs	r0, #12288	; 0x3000
     e18:	d3080188 	movwle	r0, #33160	; 0x8188
     e1c:	0400000a 	streq	r0, [r0], #-10
     e20:	a4120212 	ldrge	r0, [r2], #-530	; 0xfffffdee
     e24:	03000000 	movweq	r0, #0
     e28:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
     e2c:	00000b13 	andeq	r0, r0, r3, lsl fp
     e30:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
     e34:	00000416 	andeq	r0, r0, r6, lsl r4
     e38:	01902303 	orrseq	r2, r0, r3, lsl #6
     e3c:	000b4a08 	andeq	r4, fp, r8, lsl #20
     e40:	02140400 	andseq	r0, r4, #0, 8
     e44:	0000a412 	andeq	sl, r0, r2, lsl r4
     e48:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     e4c:	0aac0801 	beq	feb02e58 <__RAM_segment_used_end__+0xc6a02e58>
     e50:	15040000 	strne	r0, [r4, #-0]
     e54:	00a41202 	adceq	r1, r4, r2, lsl #4
     e58:	23030000 	movwcs	r0, #12288	; 0x3000
     e5c:	eb0801e8 	bl	201604 <__RAM_SIZE+0x101604>
     e60:	0400000a 	streq	r0, [r0], #-10
     e64:	26120216 			; <UNDEFINED> instruction: 0x26120216
     e68:	03000004 	movweq	r0, #4
     e6c:	0801ec23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
     e70:	00000a02 	andeq	r0, r0, r2, lsl #20
     e74:	12021704 	andne	r1, r2, #4, 14	; 0x100000
     e78:	000000a4 	andeq	r0, r0, r4, lsr #1
     e7c:	04802303 	streq	r2, [r0], #771	; 0x303
     e80:	000af508 	andeq	pc, sl, r8, lsl #10
     e84:	02180400 	andseq	r0, r8, #0, 8
     e88:	00043612 	andeq	r3, r4, r2, lsl r6
     e8c:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     e90:	0ad90804 	beq	ff642ea8 <__RAM_segment_used_end__+0xc7542ea8>
     e94:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     e98:	00a91202 	adceq	r1, r9, r2, lsl #4
     e9c:	23030000 	movwcs	r0, #12288	; 0x3000
     ea0:	df0804c0 	svcle	0x000804c0
     ea4:	0400000a 	streq	r0, [r0], #-10
     ea8:	a912021a 	ldmdbge	r2, {r1, r3, r4, r9}
     eac:	03000000 	movweq	r0, #0
     eb0:	0804c423 	stmdaeq	r4, {r0, r1, r5, sl, lr, pc}
     eb4:	00000ae5 	andeq	r0, r0, r5, ror #21
     eb8:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
     ebc:	000000a9 	andeq	r0, r0, r9, lsr #1
     ec0:	04c82303 	strbeq	r2, [r8], #771	; 0x303
     ec4:	000aff08 	andeq	pc, sl, r8, lsl #30
     ec8:	021c0400 	andseq	r0, ip, #0, 8
     ecc:	00044612 	andeq	r4, r4, r2, lsl r6
     ed0:	cc230300 	stcgt	3, cr0, [r3], #-0
     ed4:	0a4e0804 	beq	1382eec <__RAM_SIZE+0x1282eec>
     ed8:	1d040000 	stcne	0, cr0, [r4, #-0]
     edc:	00a41202 	adceq	r1, r4, r2, lsl #4
     ee0:	23030000 	movwcs	r0, #12288	; 0x3000
     ee4:	090804d0 	stmdbeq	r8, {r4, r6, r7, sl}
     ee8:	0400000b 	streq	r0, [r0], #-11
     eec:	4612021e 			; <UNDEFINED> instruction: 0x4612021e
     ef0:	03000004 	movweq	r0, #4
     ef4:	0804d423 	stmdaeq	r4, {r0, r1, r5, sl, ip, lr, pc}
     ef8:	00000b37 	andeq	r0, r0, r7, lsr fp
     efc:	12021f04 	andne	r1, r2, #4, 30
     f00:	000000a4 	andeq	r0, r0, r4, lsr #1
     f04:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
     f08:	000a0708 	andeq	r0, sl, r8, lsl #14
     f0c:	02200400 	eoreq	r0, r0, #0, 8
     f10:	0000a412 	andeq	sl, r0, r2, lsl r4
     f14:	dc230300 	stcle	3, cr0, [r3], #-0
     f18:	0b3f0804 	bleq	fc2f30 <__RAM_SIZE+0xec2f30>
     f1c:	21040000 	mrscs	r0, (UNDEF: 4)
     f20:	00a41202 	adceq	r1, r4, r2, lsl #4
     f24:	23030000 	movwcs	r0, #12288	; 0x3000
     f28:	950804e0 	strls	r0, [r8, #-1248]	; 0xfffffb20
     f2c:	0400000a 	streq	r0, [r0], #-10
     f30:	a4120222 	ldrge	r0, [r2], #-546	; 0xfffffdde
     f34:	03000000 	movweq	r0, #0
     f38:	0804e423 	stmdaeq	r4, {r0, r1, r5, sl, sp, lr, pc}
     f3c:	00000a76 	andeq	r0, r0, r6, ror sl
     f40:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
     f44:	000000a4 	andeq	r0, r0, r4, lsr #1
     f48:	04e82303 	strbteq	r2, [r8], #771	; 0x303
     f4c:	000b4f08 	andeq	r4, fp, r8, lsl #30
     f50:	02240400 	eoreq	r0, r4, #0, 8
     f54:	0000a412 	andeq	sl, r0, r2, lsl r4
     f58:	ec230300 	stc	3, cr0, [r3], #-0
     f5c:	0b2e0804 	bleq	b82f74 <__RAM_SIZE+0xa82f74>
     f60:	25040000 	strcs	r0, [r4, #-0]
     f64:	00a41202 	adceq	r1, r4, r2, lsl #4
     f68:	23030000 	movwcs	r0, #12288	; 0x3000
     f6c:	290804f0 	stmdbcs	r8, {r4, r5, r6, r7, sl}
     f70:	0400000a 	streq	r0, [r0], #-10
     f74:	a4120226 	ldrge	r0, [r2], #-550	; 0xfffffdda
     f78:	03000000 	movweq	r0, #0
     f7c:	0804f423 	stmdaeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
     f80:	00000a1b 	andeq	r0, r0, fp, lsl sl
     f84:	12022704 	andne	r2, r2, #4, 14	; 0x100000
     f88:	000000a4 	andeq	r0, r0, r4, lsr #1
     f8c:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
     f90:	00930a00 	addseq	r0, r3, r0, lsl #20
     f94:	03c30000 	biceq	r0, r3, #0
     f98:	800b0000 	andhi	r0, fp, r0
     f9c:	0b000000 	bleq	fa4 <__Vectors_Size+0x7e4>
     fa0:	03b30500 			; <UNDEFINED> instruction: 0x03b30500
     fa4:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     fa8:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     fac:	0b000003 	bleq	fc0 <__Vectors_Size+0x800>
     fb0:	00000080 	andeq	r0, r0, r0, lsl #1
     fb4:	c8060001 	stmdagt	r6, {r0}
     fb8:	05000003 	streq	r0, [r0, #-3]
     fbc:	000003d8 	ldrdeq	r0, [r0], -r8
     fc0:	0000a90a 	andeq	sl, r0, sl, lsl #18
     fc4:	0003f200 	andeq	pc, r3, r0, lsl #4
     fc8:	00800b00 	addeq	r0, r0, r0, lsl #22
     fcc:	00030000 	andeq	r0, r3, r0
     fd0:	0003e206 	andeq	lr, r3, r6, lsl #4
     fd4:	03f20500 	mvnseq	r0, #0, 10
     fd8:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     fdc:	0c000000 	stceq	0, cr0, [r0], {-0}
     fe0:	0b000004 	bleq	ff8 <__Vectors_Size+0x838>
     fe4:	00000080 	andeq	r0, r0, r0, lsl #1
     fe8:	fc060005 	stc2	0, cr0, [r6], {5}
     fec:	05000003 	streq	r0, [r0, #-3]
     ff0:	0000040c 	andeq	r0, r0, ip, lsl #8
     ff4:	0000980a 	andeq	r9, r0, sl, lsl #16
     ff8:	00042600 	andeq	r2, r4, r0, lsl #12
     ffc:	00800b00 	addeq	r0, r0, r0, lsl #22
    1000:	00140000 	andseq	r0, r4, r0
    1004:	0000980a 	andeq	r9, r0, sl, lsl #16
    1008:	00043600 	andeq	r3, r4, r0, lsl #12
    100c:	00800b00 	addeq	r0, r0, r0, lsl #22
    1010:	00440000 	subeq	r0, r4, r0
    1014:	0000980a 	andeq	r9, r0, sl, lsl #16
    1018:	00044600 	andeq	r4, r4, r0, lsl #12
    101c:	00800b00 	addeq	r0, r0, r0, lsl #22
    1020:	000e0000 	andeq	r0, lr, r0
    1024:	0000980a 	andeq	r9, r0, sl, lsl #16
    1028:	00045600 	andeq	r5, r4, r0, lsl #12
    102c:	00800b00 	addeq	r0, r0, r0, lsl #22
    1030:	00000000 	andeq	r0, r0, r0
    1034:	000a660c 	andeq	r6, sl, ip, lsl #12
    1038:	02280400 	eoreq	r0, r8, #0, 8
    103c:	0000ae03 	andeq	sl, r0, r3, lsl #28
    1040:	0b5a0300 	bleq	1681c48 <__RAM_SIZE+0x1581c48>
    1044:	24050000 	strcs	r0, [r5], #-0
    1048:	0004740f 	andeq	r7, r4, pc, lsl #8
    104c:	04630600 	strbteq	r0, [r3], #-1536	; 0xfffffa00
    1050:	040d0000 	streq	r0, [sp], #-0
    1054:	0000047a 	andeq	r0, r0, sl, ror r4
    1058:	850f010e 	strhi	r0, [pc, #-270]	; f52 <__Vectors_Size+0x792>
    105c:	0500000a 	streq	r0, [r0, #-10]
    1060:	00981129 	addseq	r1, r8, r9, lsr #2
    1064:	01010000 	mrseq	r0, (UNDEF: 1)
    1068:	00046f0a 	andeq	r6, r4, sl, lsl #30
    106c:	00049b00 	andeq	r9, r4, r0, lsl #22
    1070:	00801000 	addeq	r1, r0, r0
    1074:	01ef0000 	mvneq	r0, r0
    1078:	048a0600 	streq	r0, [sl], #1536	; 0x600
    107c:	9d0f0000 	stcls	0, cr0, [pc, #-0]	; 1084 <_Min_Stack_Size+0x84>
    1080:	0100000a 	tsteq	r0, sl
    1084:	049b2038 	ldreq	r2, [fp], #56	; 0x38
    1088:	01010000 	mrseq	r0, (UNDEF: 1)
    108c:	00047c11 	andeq	r7, r4, r1, lsl ip
    1090:	0a3e0100 	beq	f81498 <__RAM_SIZE+0xe81498>
    1094:	00000305 	andeq	r0, r0, r5, lsl #6
    1098:	01123800 	tsteq	r2, r0, lsl #16
    109c:	00000b1d 	andeq	r0, r0, sp, lsl fp
    10a0:	01064c01 	tsteq	r6, r1, lsl #24
    10a4:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
    10a8:	100008e4 	andne	r0, r0, r4, ror #17
    10ac:	01007d02 	tsteq	r0, r2, lsl #26
    10b0:	0a300112 	beq	c01500 <__RAM_SIZE+0xb01500>
    10b4:	44010000 	strmi	r0, [r1], #-0
    10b8:	00000106 	andeq	r0, r0, r6, lsl #2
    10bc:	00000000 	andeq	r0, r0, r0
    10c0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    10c4:	c1000100 	mrsgt	r0, (UNDEF: 16)
    10c8:	0200001b 	andeq	r0, r0, #27
    10cc:	0002a100 	andeq	sl, r2, r0, lsl #2
    10d0:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    10d4:	0c000000 	stceq	0, cr0, [r0], {-0}
    10d8:	00000c64 	andeq	r0, r0, r4, ror #24
    10dc:	00000641 	andeq	r0, r0, r1, asr #12
    10e0:	00000130 	andeq	r0, r0, r0, lsr r1
	...
    10ec:	00000477 	andeq	r0, r0, r7, ror r4
    10f0:	28040802 	stmdacs	r4, {r1, fp}
    10f4:	02000006 	andeq	r0, r0, #6
    10f8:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    10fc:	01020000 	mrseq	r0, (UNDEF: 2)
    1100:	00085206 	andeq	r5, r8, r6, lsl #4
    1104:	08010200 	stmdaeq	r1, {r9}
    1108:	00000850 	andeq	r0, r0, r0, asr r8
    110c:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    1110:	02000006 	andeq	r0, r0, #6
    1114:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    1118:	04020000 	streq	r0, [r2], #-0
    111c:	0004ed05 	andeq	lr, r4, r5, lsl #26
    1120:	00530300 	subseq	r0, r3, r0, lsl #6
    1124:	04020000 	streq	r0, [r2], #-0
    1128:	00023407 	andeq	r3, r2, r7, lsl #8
    112c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    1130:	000004e8 	andeq	r0, r0, r8, ror #9
    1134:	00006603 	andeq	r6, r0, r3, lsl #12
    1138:	0d180400 	cfldrseq	mvf0, [r8, #-0]
    113c:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
    1140:	00007e19 	andeq	r7, r0, r9, lsl lr
    1144:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1148:	0000022f 	andeq	r0, r0, pc, lsr #4
    114c:	69050405 	stmdbvs	r5, {r0, r2, sl}
    1150:	0300746e 	movweq	r7, #1134	; 0x46e
    1154:	00000085 	andeq	r0, r0, r5, lsl #1
    1158:	000d4c04 	andeq	r4, sp, r4, lsl #24
    115c:	1ae80200 	bne	ffa01964 <__RAM_segment_used_end__+0xc7901964>
    1160:	00000030 	andeq	r0, r0, r0, lsr r0
    1164:	00003003 	andeq	r3, r0, r3
    1168:	0d1a0400 	cfldrseq	mvf0, [sl, #-0]
    116c:	3c030000 	stccc	0, cr0, [r3], {-0}
    1170:	00007214 	andeq	r7, r0, r4, lsl r2
    1174:	0d4e0400 	cfstrdeq	mvd0, [lr, #-0]
    1178:	52030000 	andpl	r0, r3, #0
    117c:	00009115 	andeq	r9, r0, r5, lsl r1
    1180:	0db60400 	cfldrseq	mvf0, [r6]
    1184:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    1188:	0000c61b 	andeq	ip, r0, fp, lsl r6
    118c:	0c5a0600 	mrrceq	6, 0, r0, sl, cr0
    1190:	06040000 	streq	r0, [r4], -r0
    1194:	0000e000 	andeq	lr, r0, r0
    1198:	0d000700 	stceq	7, cr0, [r0, #-0]
    119c:	00e00000 	rsceq	r0, r0, r0
    11a0:	23020000 	movwcs	r0, #8192	; 0x2000
    11a4:	08000100 	stmdaeq	r0, {r8}
    11a8:	0c5c0404 	cfldrdeq	mvd0, [ip], {4}
    11ac:	63040000 	movwvs	r0, #16384	; 0x4000
    11b0:	0000ba18 	andeq	fp, r0, r8, lsl sl
    11b4:	0bc30400 	bleq	ff0c21bc <__RAM_segment_used_end__+0xc6fc21bc>
    11b8:	d1050000 	mrsle	r0, (UNDEF: 5)
    11bc:	00003017 	andeq	r3, r0, r7, lsl r0
    11c0:	00ee0300 	rsceq	r0, lr, r0, lsl #6
    11c4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    11c8:	00062304 	andeq	r2, r6, r4, lsl #6
    11cc:	0c9d0400 	cfldrseq	mvf0, [sp], {0}
    11d0:	7a010000 	bvc	411d8 <SYSTICK_CYCLES+0x18199>
    11d4:	00011210 	andeq	r1, r1, r0, lsl r2
    11d8:	18040900 	stmdane	r4, {r8, fp}
    11dc:	0a000001 	beq	11e8 <_Min_Stack_Size+0x1e8>
    11e0:	00013301 	andeq	r3, r1, r1, lsl #6
    11e4:	01330b00 	teqeq	r3, r0, lsl #22
    11e8:	e00b0000 	and	r0, fp, r0
    11ec:	0b000000 	bleq	11f4 <_Min_Stack_Size+0x1f4>
    11f0:	000000ee 	andeq	r0, r0, lr, ror #1
    11f4:	0000ee0b 	andeq	lr, r0, fp, lsl #28
    11f8:	01020000 	mrseq	r0, (UNDEF: 2)
    11fc:	00085908 	andeq	r5, r8, r8, lsl #18
    1200:	01330300 	teqeq	r3, r0, lsl #6
    1204:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    1208:	67097e01 	strvs	r7, [r9, -r1, lsl #28]
    120c:	0d000001 	stceq	0, cr0, [r0, #-4]
    1210:	00746366 	rsbseq	r6, r4, r6, ror #6
    1214:	780b7f01 	stmdavc	fp, {r0, r8, r9, sl, fp, ip, sp, lr}
    1218:	02000001 	andeq	r0, r0, #1
    121c:	610d0023 	tstvs	sp, r3, lsr #32
    1220:	01006772 	tsteq	r0, r2, ror r7
    1224:	00e00980 	rsceq	r0, r0, r0, lsl #19
    1228:	23020000 	movwcs	r0, #8192	; 0x2000
    122c:	010a0004 	tsteq	sl, r4
    1230:	00000178 	andeq	r0, r0, r8, ror r1
    1234:	0001330b 	andeq	r3, r1, fp, lsl #6
    1238:	00e00b00 	rsceq	r0, r0, r0, lsl #22
    123c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1240:	00016704 	andeq	r6, r1, r4, lsl #14
    1244:	0d980400 	cfldrseq	mvf0, [r8]
    1248:	81010000 	mrshi	r0, (UNDEF: 1)
    124c:	00013f03 	andeq	r3, r1, r3, lsl #30
    1250:	017e0300 	cmneq	lr, r0, lsl #6
    1254:	010e0000 	mrseq	r0, (UNDEF: 14)
    1258:	00000c3a 	andeq	r0, r0, sl, lsr ip
    125c:	05038a01 	streq	r8, [r3, #-2561]	; 0xfffff5ff
    1260:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    126c:	00022200 	andeq	r2, r2, r0, lsl #4
    1270:	024c0100 	subeq	r0, ip, #0, 2
    1274:	6f0f0000 	svcvs	0x000f0000
    1278:	01007475 	tsteq	r0, r5, ror r4
    127c:	7816038a 	ldmdavc	r6, {r1, r3, r7, r8, r9}
    1280:	84000001 	strhi	r0, [r0], #-1
    1284:	7e000002 	cdpvc	0, 0, cr0, cr0, cr2, {0}
    1288:	0f000002 	svceq	0x00000002
    128c:	00677261 	rsbeq	r7, r7, r1, ror #4
    1290:	3d038a01 	vstrcc	s16, [r3, #-4]
    1294:	000000e0 	andeq	r0, r0, r0, ror #1
    1298:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
    129c:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    12a0:	000c7f10 	andeq	r7, ip, r0, lsl pc
    12a4:	038a0100 	orreq	r0, sl, #0, 2
    12a8:	00024c4e 	andeq	r4, r2, lr, asr #24
    12ac:	78910200 	ldmvc	r1, {r9}
    12b0:	61761211 	cmnvs	r6, r1, lsl r2
    12b4:	038c0100 	orreq	r0, ip, #0, 2
    12b8:	0000e20b 	andeq	lr, r0, fp, lsl #4
    12bc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    12c0:	000b9d13 	andeq	r9, fp, r3, lsl sp
    12c4:	038e0100 	orreq	r0, lr, #0, 2
    12c8:	00018a1b 	andeq	r8, r1, fp, lsl sl
    12cc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    12d0:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    12d4:	038f0100 	orreq	r0, pc, #0, 2
    12d8:	00008c0d 	andeq	r8, r0, sp, lsl #24
    12dc:	0002d800 	andeq	sp, r2, r0, lsl #16
    12e0:	0002d600 	andeq	sp, r2, r0, lsl #12
    12e4:	00001500 	andeq	r1, r0, r0, lsl #10
    12e8:	055f0000 	ldrbeq	r0, [pc, #-0]	; 12f0 <_Min_Stack_Size+0x2f0>
    12ec:	01160000 	tsteq	r6, r0
    12f0:	00030550 	andeq	r0, r3, r0, asr r5
    12f4:	16000000 	strne	r0, [r0], -r0
    12f8:	91025101 	tstls	r2, r1, lsl #2
    12fc:	52011654 	andpl	r1, r1, #84, 12	; 0x5400000
    1300:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1304:	91035301 	tstls	r3, r1, lsl #6
    1308:	02160668 	andseq	r0, r6, #104, 12	; 0x6800000
    130c:	9102007d 	tstls	r2, sp, ror r0
    1310:	0900006c 	stmdbeq	r0, {r2, r3, r5, r6}
    1314:	00013a04 	andeq	r3, r1, r4, lsl #20
    1318:	2e010e00 	cdpcs	14, 0, cr0, cr1, cr0, {0}
    131c:	0100000d 	tsteq	r0, sp
    1320:	01050384 	smlabbeq	r5, r4, r3, r0
    1324:	00000085 	andeq	r0, r0, r5, lsl #1
	...
    1330:	000002eb 	andeq	r0, r0, fp, ror #5
    1334:	0002ee01 	andeq	lr, r2, r1, lsl #28
    1338:	0bb41700 	bleq	fed06f40 <__RAM_segment_used_end__+0xc6c06f40>
    133c:	84010000 	strhi	r0, [r1], #-0
    1340:	02ee1503 	rsceq	r1, lr, #12582912	; 0xc00000
    1344:	03290000 			; <UNDEFINED> instruction: 0x03290000
    1348:	03230000 			; <UNDEFINED> instruction: 0x03230000
    134c:	bc170000 	ldclt	0, cr0, [r7], {-0}
    1350:	01000018 	tsteq	r0, r8, lsl r0
    1354:	ee240384 	cdp	3, 2, cr0, cr4, cr4, {4}
    1358:	5b000000 	blpl	1360 <_Min_Stack_Size+0x360>
    135c:	55000003 	strpl	r0, [r0, #-3]
    1360:	17000003 	strne	r0, [r0, -r3]
    1364:	00000c7f 	andeq	r0, r0, pc, ror ip
    1368:	37038401 	strcc	r8, [r3, -r1, lsl #8]
    136c:	0000024c 	andeq	r0, r0, ip, asr #4
    1370:	0000038d 	andeq	r0, r0, sp, lsl #7
    1374:	00000387 	andeq	r0, r0, r7, lsl #7
    1378:	0061760f 	rsbeq	r7, r1, pc, lsl #12
    137c:	47038401 	strmi	r8, [r3, -r1, lsl #8]
    1380:	000000e2 	andeq	r0, r0, r2, ror #1
    1384:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    1388:	000003b9 			; <UNDEFINED> instruction: 0x000003b9
    138c:	00000015 	andeq	r0, r0, r5, lsl r0
    1390:	00055f00 	andeq	r5, r5, r0, lsl #30
    1394:	50011600 	andpl	r1, r1, r0, lsl #12
    1398:	00000305 	andeq	r0, r0, r5, lsl #6
    139c:	01160000 	tsteq	r6, r0
    13a0:	01f30351 	mvnseq	r0, r1, asr r3
    13a4:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
    13a8:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    13ac:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    13b0:	005201f3 	ldrsheq	r0, [r2], #-19	; 0xffffffed
    13b4:	33040900 	movwcc	r0, #18688	; 0x4900
    13b8:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    13bc:	000bbb01 	andeq	fp, fp, r1, lsl #22
    13c0:	037d0100 	cmneq	sp, #0, 2
    13c4:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    13d0:	03ce0000 	biceq	r0, lr, #0
    13d4:	74010000 	strvc	r0, [r1], #-0
    13d8:	17000003 	strne	r0, [r0, -r3]
    13dc:	00000c7f 	andeq	r0, r0, pc, ror ip
    13e0:	19037d01 	stmdbne	r3, {r0, r8, sl, fp, ip, sp, lr}
    13e4:	0000024c 	andeq	r0, r0, ip, asr #4
    13e8:	0000040c 	andeq	r0, r0, ip, lsl #8
    13ec:	00000406 	andeq	r0, r0, r6, lsl #8
    13f0:	0061760f 	rsbeq	r7, r1, pc, lsl #12
    13f4:	29037d01 	stmdbcs	r3, {r0, r8, sl, fp, ip, sp, lr}
    13f8:	000000e2 	andeq	r0, r0, r2, ror #1
    13fc:	0000043a 	andeq	r0, r0, sl, lsr r4
    1400:	00000438 	andeq	r0, r0, r8, lsr r4
    1404:	000bb413 	andeq	fp, fp, r3, lsl r4
    1408:	037f0100 	cmneq	pc, #0, 2
    140c:	00037408 	andeq	r7, r3, r8, lsl #8
    1410:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1414:	00000015 	andeq	r0, r0, r5, lsl r0
    1418:	00055f00 	andeq	r5, r5, r0, lsl #30
    141c:	50011600 	andpl	r1, r1, r0, lsl #12
    1420:	1a290305 	bne	a4203c <__RAM_SIZE+0x94203c>
    1424:	01161000 	tsteq	r6, r0
    1428:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    142c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1430:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    1434:	01f30353 	mvnseq	r0, r3, asr r3
    1438:	18000050 	stmdane	r0, {r4, r6}
    143c:	00000133 	andeq	r0, r0, r3, lsr r1
    1440:	00000384 	andeq	r0, r0, r4, lsl #7
    1444:	00003019 	andeq	r3, r0, r9, lsl r0
    1448:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    144c:	000d2f01 	andeq	r2, sp, r1, lsl #30
    1450:	03730100 	cmneq	r3, #0, 2
    1454:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    1460:	044d0000 	strbeq	r0, [sp], #-0
    1464:	33010000 	movwcc	r0, #4096	; 0x1000
    1468:	17000004 	strne	r0, [r0, -r4]
    146c:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
    1470:	14037301 	strne	r7, [r3], #-769	; 0xfffffcff
    1474:	000002ee 	andeq	r0, r0, lr, ror #5
    1478:	000004af 	andeq	r0, r0, pc, lsr #9
    147c:	000004a9 	andeq	r0, r0, r9, lsr #9
    1480:	0018bc17 	andseq	fp, r8, r7, lsl ip
    1484:	03730100 	cmneq	r3, #0, 2
    1488:	0000ee23 	andeq	lr, r0, r3, lsr #28
    148c:	0004e100 	andeq	lr, r4, r0, lsl #2
    1490:	0004db00 	andeq	sp, r4, r0, lsl #22
    1494:	0c7f1000 	ldcleq	0, cr1, [pc], #-0	; 149c <_Min_Stack_Size+0x49c>
    1498:	73010000 	movwvc	r0, #4096	; 0x1000
    149c:	024c3603 	subeq	r3, ip, #3145728	; 0x300000
    14a0:	91020000 	mrsls	r0, (UNDEF: 2)
    14a4:	76121178 			; <UNDEFINED> instruction: 0x76121178
    14a8:	75010061 	strvc	r0, [r1, #-97]	; 0xffffff9f
    14ac:	00e20b03 	rsceq	r0, r2, r3, lsl #22
    14b0:	91020000 	mrsls	r0, (UNDEF: 2)
    14b4:	6572146c 	ldrbvs	r1, [r2, #-1132]!	; 0xfffffb94
    14b8:	77010074 	smlsdxvc	r1, r4, r0, r0
    14bc:	008c0d03 	addeq	r0, ip, r3, lsl #26
    14c0:	050f0000 	streq	r0, [pc, #-0]	; 14c8 <_Min_Stack_Size+0x4c8>
    14c4:	050d0000 	streq	r0, [sp, #-0]
    14c8:	00150000 	andseq	r0, r5, r0
    14cc:	5f000000 	svcpl	0x00000000
    14d0:	16000005 	strne	r0, [r0], -r5
    14d4:	03055001 	movweq	r5, #20481	; 0x5001
    14d8:	00000000 	andeq	r0, r0, r0
    14dc:	03510116 	cmpeq	r1, #-2147483643	; 0x80000005
    14e0:	165001f3 			; <UNDEFINED> instruction: 0x165001f3
    14e4:	f3035201 	vhsub.u8	d5, d3, d1
    14e8:	01165101 	tsteq	r6, r1, lsl #2
    14ec:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
    14f0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    14f4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    14f8:	010e0000 	mrseq	r0, (UNDEF: 14)
    14fc:	00000cc4 	andeq	r0, r0, r4, asr #25
    1500:	05036901 	streq	r6, [r3, #-2305]	; 0xfffff6ff
    1504:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    1510:	00052200 	andeq	r2, r5, r0, lsl #4
    1514:	04cc0100 	strbeq	r0, [ip], #256	; 0x100
    1518:	b4170000 	ldrlt	r0, [r7], #-0
    151c:	0100000b 	tsteq	r0, fp
    1520:	ee130369 	cdp	3, 1, cr0, cr3, cr9, {3}
    1524:	84000002 	strhi	r0, [r0], #-2
    1528:	7e000005 	cdpvc	0, 0, cr0, cr0, cr5, {0}
    152c:	10000005 	andne	r0, r0, r5
    1530:	00000c7f 	andeq	r0, r0, pc, ror ip
    1534:	27036901 	strcs	r6, [r3, -r1, lsl #18]
    1538:	0000024c 	andeq	r0, r0, ip, asr #4
    153c:	11749102 	cmnne	r4, r2, lsl #2
    1540:	00617612 	rsbeq	r7, r1, r2, lsl r6
    1544:	0b036b01 	bleq	dc150 <SYSTICK_CYCLES+0xb3111>
    1548:	000000e2 	andeq	r0, r0, r2, ror #1
    154c:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
    1550:	00746572 	rsbseq	r6, r4, r2, ror r5
    1554:	0d036d01 	stceq	13, cr6, [r3, #-4]
    1558:	0000008c 	andeq	r0, r0, ip, lsl #1
    155c:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
    1560:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
    1564:	00000015 	andeq	r0, r0, r5, lsl r0
    1568:	00055f00 	andeq	r5, r5, r0, lsl #30
    156c:	50011600 	andpl	r1, r1, r0, lsl #12
    1570:	00000305 	andeq	r0, r0, r5, lsl #6
    1574:	01160000 	tsteq	r6, r0
    1578:	01f30351 	mvnseq	r0, r1, asr r3
    157c:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
    1580:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1584:	91035301 	tstls	r3, r1, lsl #6
    1588:	0216065c 	andseq	r0, r6, #92, 12	; 0x5c00000
    158c:	9102007d 	tstls	r2, sp, ror r0
    1590:	0e000060 	cdpeq	0, 0, cr0, cr0, cr0, {3}
    1594:	000d3101 	andeq	r3, sp, r1, lsl #2
    1598:	035e0100 	cmpeq	lr, #0, 2
    159c:	00850105 	addeq	r0, r5, r5, lsl #2
    15a0:	1a340000 	bne	d015a8 <__RAM_SIZE+0xc015a8>
    15a4:	1a601000 	bne	18055ac <__RAM_SIZE+0x17055ac>
    15a8:	05c51000 	strbeq	r1, [r5]
    15ac:	5f010000 	svcpl	0x00010000
    15b0:	10000005 	andne	r0, r0, r5
    15b4:	00000c7f 	andeq	r0, r0, pc, ror ip
    15b8:	18035e01 	stmdane	r3, {r0, r9, sl, fp, ip, lr}
    15bc:	0000024c 	andeq	r0, r0, ip, asr #4
    15c0:	11709102 	cmnne	r0, r2, lsl #2
    15c4:	00617612 	rsbeq	r7, r1, r2, lsl r6
    15c8:	0b036001 	bleq	d95d4 <SYSTICK_CYCLES+0xb0595>
    15cc:	000000e2 	andeq	r0, r0, r2, ror #1
    15d0:	13649102 	cmnne	r4, #-2147483648	; 0x80000000
    15d4:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
    15d8:	08036201 	stmdaeq	r3, {r0, r9, sp, lr}
    15dc:	00000374 	andeq	r0, r0, r4, ror r3
    15e0:	14609102 	strbtne	r9, [r0], #-258	; 0xfffffefe
    15e4:	00746572 	rsbseq	r6, r4, r2, ror r5
    15e8:	0d036301 	stceq	3, cr6, [r3, #-4]
    15ec:	0000008c 	andeq	r0, r0, ip, lsl #1
    15f0:	00000623 	andeq	r0, r0, r3, lsr #12
    15f4:	00000621 	andeq	r0, r0, r1, lsr #12
    15f8:	001a5015 	andseq	r5, sl, r5, lsl r0
    15fc:	00055f10 	andeq	r5, r5, r0, lsl pc
    1600:	50011600 	andpl	r1, r1, r0, lsl #12
    1604:	1a290305 	bne	a42220 <__RAM_SIZE+0x942220>
    1608:	01161000 	tsteq	r6, r0
    160c:	40910251 	addsmi	r0, r1, r1, asr r2
    1610:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1614:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    1618:	50910353 	addspl	r0, r1, r3, asr r3
    161c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1620:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    1624:	2d1a0000 	ldccs	0, cr0, [sl, #-0]
    1628:	0100000d 	tsteq	r0, sp
    162c:	010c0241 	tsteq	ip, r1, asr #4
    1630:	00000085 	andeq	r0, r0, r5, lsl #1
    1634:	100013a8 	andne	r1, r0, r8, lsr #7
    1638:	10001a28 	andne	r1, r0, r8, lsr #20
    163c:	00000636 	andeq	r0, r0, r6, lsr r6
    1640:	000b7d01 	andeq	r7, fp, r1, lsl #26
    1644:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 74c <STACK_SIZE+0x34c>
    1648:	41010074 	tstmi	r1, r4, ror r0
    164c:	01062402 	tsteq	r6, r2, lsl #8
    1650:	06770000 	ldrbteq	r0, [r7], -r0
    1654:	066f0000 	strbteq	r0, [pc], -r0
    1658:	b4170000 	ldrlt	r0, [r7], #-0
    165c:	0100000b 	tsteq	r0, fp
    1660:	ee2f0241 	cdp	2, 2, cr0, cr15, cr1, {2}
    1664:	b5000002 	strlt	r0, [r0, #-2]
    1668:	ab000006 	blge	1688 <_Min_Stack_Size+0x688>
    166c:	17000006 	strne	r0, [r0, -r6]
    1670:	00000ce8 	andeq	r0, r0, r8, ror #25
    1674:	44024101 	strmi	r4, [r2], #-257	; 0xfffffeff
    1678:	000000fa 	strdeq	r0, [r0], -sl
    167c:	00000709 	andeq	r0, r0, r9, lsl #14
    1680:	000006f7 	strdeq	r0, [r0], -r7
    1684:	000c7f17 	andeq	r7, ip, r7, lsl pc
    1688:	02410100 	subeq	r0, r1, #0, 2
    168c:	00024c58 	andeq	r4, r2, r8, asr ip
    1690:	00077b00 	andeq	r7, r7, r0, lsl #22
    1694:	00077700 	andeq	r7, r7, r0, lsl #14
    1698:	61761b00 	cmnvs	r6, r0, lsl #22
    169c:	02410100 	subeq	r0, r1, #0, 2
    16a0:	0000e268 	andeq	lr, r0, r8, ror #4
    16a4:	00910200 	addseq	r0, r1, r0, lsl #4
    16a8:	00202d1c 	eoreq	r2, r0, ip, lsl sp
    16ac:	02430100 	subeq	r0, r3, #0, 2
    16b0:	00003010 	andeq	r3, r0, r0, lsl r0
    16b4:	0007b100 	andeq	fp, r7, r0, lsl #2
    16b8:	00079900 	andeq	r9, r7, r0, lsl #18
    16bc:	0db01c00 	ldceq	12, cr1, [r0]
    16c0:	43010000 	movwmi	r0, #4096	; 0x1000
    16c4:	00301702 	eorseq	r1, r0, r2, lsl #14
    16c8:	08550000 	ldmdaeq	r5, {}^	; <UNPREDICTABLE>
    16cc:	083f0000 	ldmdaeq	pc!, {}	; <UNPREDICTABLE>
    16d0:	ef1c0000 	svc	0x001c0000
    16d4:	0100000d 	tsteq	r0, sp
    16d8:	301e0243 	andscc	r0, lr, r3, asr #4
    16dc:	fd000000 	stc2	0, cr0, [r0, #-0]
    16e0:	df000008 	svcle	0x00000008
    16e4:	14000008 	strne	r0, [r0], #-8
    16e8:	4301006e 	movwmi	r0, #4206	; 0x106e
    16ec:	00302902 	eorseq	r2, r0, r2, lsl #18
    16f0:	09bb0000 	ldmibeq	fp!, {}	; <UNPREDICTABLE>
    16f4:	09ad0000 	stmibeq	sp!, {}	; <UNPREDICTABLE>
    16f8:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    16fc:	01007864 	tsteq	r0, r4, ror #16
    1700:	ee0a0244 	cdp	2, 0, cr0, cr10, cr4, {2}
    1704:	77000000 	strvc	r0, [r0, -r0]
    1708:	1700000a 	strne	r0, [r0, -sl]
    170c:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1710:	10001484 	andne	r1, r0, r4, lsl #9
    1714:	100014a4 	andne	r1, r0, r4, lsr #9
    1718:	00000663 	andeq	r0, r0, r3, ror #12
    171c:	01007712 	tsteq	r0, r2, lsl r7
    1720:	8c11026c 	lfmhi	f0, 4, [r1], {108}	; 0x6c
    1724:	01000000 	mrseq	r0, (UNDEF: 0)
    1728:	cc1d0050 	ldcgt	0, cr0, [sp], {80}	; 0x50
    172c:	e0100014 	ands	r0, r0, r4, lsl r0
    1730:	80100014 	andshi	r0, r0, r4, lsl r0
    1734:	13000006 	movwne	r0, #6
    1738:	00000daa 	andeq	r0, r0, sl, lsr #27
    173c:	13028001 	movwne	r8, #8193	; 0x2001
    1740:	0000008c 	andeq	r0, r0, ip, lsl #1
    1744:	1d005301 	stcne	3, cr5, [r0, #-4]
    1748:	100015ee 	andne	r1, r0, lr, ror #11
    174c:	100017da 	ldrdne	r1, [r0], -sl
    1750:	00000873 	andeq	r0, r0, r3, ror r8
    1754:	000dea1c 	andeq	lr, sp, ip, lsl sl
    1758:	02b40100 	adcseq	r0, r4, #0, 2
    175c:	00003016 	andeq	r3, r0, r6, lsl r0
    1760:	000cad00 	andeq	sl, ip, r0, lsl #26
    1764:	000c9100 	andeq	r9, ip, r0, lsl #2
    1768:	01181e00 	tsteq	r8, r0, lsl #28
    176c:	06e90000 	strbteq	r0, [r9], r0
    1770:	301f0000 	andscc	r0, pc, r0
    1774:	0100001e 	tsteq	r0, lr, lsl r0
    1778:	6d1d02d6 	lfmvs	f0, 4, [sp, #-856]	; 0xfffffca8
    177c:	15000000 	strne	r0, [r0, #-0]
    1780:	10001704 	andne	r1, r0, r4, lsl #14
    1784:	0000137c 	andeq	r1, r0, ip, ror r3
    1788:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    178c:	01160077 	tsteq	r6, r7, ror r0
    1790:	00780251 	rsbseq	r0, r8, r1, asr r2
    1794:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1798:	01160074 	tsteq	r6, r4, ror r0
    179c:	00760253 	rsbseq	r0, r6, r3, asr r2
    17a0:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    17a4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    17a8:	021c7d02 	andseq	r7, ip, #2, 26	; 0x80
    17ac:	00000075 	andeq	r0, r0, r5, ror r0
    17b0:	0017101d 	andseq	r1, r7, sp, lsl r0
    17b4:	00174010 	andseq	r4, r7, r0, lsl r0
    17b8:	00073e10 	andeq	r3, r7, r0, lsl lr
    17bc:	1e301300 	cdpne	3, 3, cr1, cr0, cr0, {0}
    17c0:	db010000 	blle	417c8 <SYSTICK_CYCLES+0x18789>
    17c4:	005a1802 	subseq	r1, sl, r2, lsl #16
    17c8:	52010000 	andpl	r0, r1, #0
    17cc:	00173e15 	andseq	r3, r7, r5, lsl lr
    17d0:	00150f10 	andseq	r0, r5, r0, lsl pc
    17d4:	50011600 	andpl	r1, r1, r0, lsl #12
    17d8:	16007702 	strne	r7, [r0], -r2, lsl #14
    17dc:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    17e0:	52011600 	andpl	r1, r1, #0, 12
    17e4:	16007402 	strne	r7, [r0], -r2, lsl #8
    17e8:	76025301 	strvc	r5, [r2], -r1, lsl #6
    17ec:	7d021600 	stcvc	6, cr1, [r2, #-0]
    17f0:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    17f4:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    17f8:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    17fc:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1800:	00007502 	andeq	r7, r0, r2, lsl #10
    1804:	01001e00 	tsteq	r0, r0, lsl #28
    1808:	07950000 	ldreq	r0, [r5, r0]
    180c:	301c0000 	andscc	r0, ip, r0
    1810:	0100001e 	tsteq	r0, lr, lsl r0
    1814:	8c1702df 	lfmhi	f0, 4, [r7], {223}	; 0xdf
    1818:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    181c:	5c00000d 	stcpl	0, cr0, [r0], {13}
    1820:	1500000d 	strne	r0, [r0, #-13]
    1824:	100016be 			; <UNDEFINED> instruction: 0x100016be
    1828:	0000150f 	andeq	r1, r0, pc, lsl #10
    182c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1830:	01160077 	tsteq	r6, r7, ror r0
    1834:	00780251 	rsbseq	r0, r8, r1, asr r2
    1838:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    183c:	01160074 	tsteq	r6, r4, ror r0
    1840:	00760253 	rsbseq	r0, r6, r3, asr r2
    1844:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1848:	16007b02 	strne	r7, [r0], -r2, lsl #22
    184c:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1850:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1854:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1858:	00000075 	andeq	r0, r0, r5, ror r0
    185c:	0000e81e 	andeq	lr, r0, lr, lsl r8
    1860:	0007f200 	andeq	pc, r7, r0, lsl #4
    1864:	1e301c00 	cdpne	12, 3, cr1, cr0, cr0, {0}
    1868:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    186c:	009d2002 	addseq	r2, sp, r2
    1870:	0d750000 	ldcleq	0, cr0, [r5, #-0]
    1874:	0d710000 	ldcleq	0, cr0, [r1, #-0]
    1878:	68150000 	ldmdavs	r5, {}	; <UNPREDICTABLE>
    187c:	0f100016 	svceq	0x00100016
    1880:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1884:	77025001 	strvc	r5, [r2, -r1]
    1888:	51011600 	tstpl	r1, r0, lsl #12
    188c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1890:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1894:	53011600 	movwpl	r1, #5632	; 0x1600
    1898:	16007602 	strne	r7, [r0], -r2, lsl #12
    189c:	01047d02 	tsteq	r4, r2, lsl #26
    18a0:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    18a4:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    18a8:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    18ac:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    18b0:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    18b4:	00007502 	andeq	r7, r0, r2, lsl #10
    18b8:	17922000 	ldrne	r2, [r2, r0]
    18bc:	137c1000 	cmnne	ip, #0
    18c0:	08340000 	ldmdaeq	r4!, {}	; <UNPREDICTABLE>
    18c4:	01160000 	tsteq	r6, r0
    18c8:	00770250 	rsbseq	r0, r7, r0, asr r2
    18cc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    18d0:	01160078 	tsteq	r6, r8, ror r0
    18d4:	00740252 	rsbseq	r0, r4, r2, asr r2
    18d8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    18dc:	02160076 	andseq	r0, r6, #118	; 0x76
    18e0:	3001087d 	andcc	r0, r1, sp, ror r8
    18e4:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    18e8:	16007b02 	strne	r7, [r0], -r2, lsl #22
    18ec:	031c7d02 	tsteq	ip, #2, 26	; 0x80
    18f0:	16064891 			; <UNDEFINED> instruction: 0x16064891
    18f4:	02207d02 	eoreq	r7, r0, #2, 26	; 0x80
    18f8:	15000075 	strne	r0, [r0, #-117]	; 0xffffff8b
    18fc:	100017bc 			; <UNDEFINED> instruction: 0x100017bc
    1900:	0000150f 	andeq	r1, r0, pc, lsl #10
    1904:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1908:	01160077 	tsteq	r6, r7, ror r0
    190c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1910:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1914:	01160074 	tsteq	r6, r4, ror r0
    1918:	00760253 	rsbseq	r0, r6, r3, asr r2
    191c:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1920:	02163001 	andseq	r3, r6, #1
    1924:	7b020c7d 	blvc	84b20 <SYSTICK_CYCLES+0x5bae1>
    1928:	7d021600 	stcvc	6, cr1, [r2, #-0]
    192c:	48910310 	ldmmi	r1, {r4, r8, r9}
    1930:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1934:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1938:	d01e0000 	andsle	r0, lr, r0
    193c:	ec000000 	stc	0, cr0, [r0], {-0}
    1940:	14000008 	strne	r0, [r0], #-8
    1944:	0901006c 	stmdbeq	r1, {r2, r3, r5, r6}
    1948:	00301603 	eorseq	r1, r0, r3, lsl #12
    194c:	0da80000 	stceq	0, cr0, [r8]
    1950:	0d940000 	ldceq	0, cr0, [r4]
    1954:	86210000 	strthi	r0, [r1], -r0
    1958:	ab100018 	blge	4019c0 <__RAM_SIZE+0x3019c0>
    195c:	16000008 	strne	r0, [r0], -r8
    1960:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1964:	52011600 	andpl	r1, r1, #0, 12
    1968:	16007402 	strne	r7, [r0], -r2, lsl #8
    196c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1970:	9e210000 	cdpls	0, 2, cr0, cr1, cr0, {0}
    1974:	cd100018 	ldcgt	0, cr0, [r0, #-96]	; 0xffffffa0
    1978:	16000008 	strne	r0, [r0], -r8
    197c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1980:	51011620 	tstpl	r1, r0, lsr #12
    1984:	16007802 	strne	r7, [r0], -r2, lsl #16
    1988:	7a025201 	bvc	96194 <SYSTICK_CYCLES+0x6d155>
    198c:	5301167f 	movwpl	r1, #5759	; 0x167f
    1990:	00007602 	andeq	r7, r0, r2, lsl #12
    1994:	0018ca22 	andseq	ip, r8, r2, lsr #20
    1998:	50011610 	andpl	r1, r1, r0, lsl r6
    199c:	16200802 	strtne	r0, [r0], -r2, lsl #16
    19a0:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    19a4:	52011600 	andpl	r1, r1, #0, 12
    19a8:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    19ac:	76025301 	strvc	r5, [r2], -r1, lsl #6
    19b0:	1d000000 	stcne	0, cr0, [r0, #-0]
    19b4:	100018da 	ldrdne	r1, [r0], -sl
    19b8:	100019a4 	andne	r1, r0, r4, lsr #19
    19bc:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
    19c0:	01007014 	tsteq	r0, r4, lsl r0
    19c4:	4c15031d 	ldcmi	3, cr0, [r5], {29}
    19c8:	24000002 	strcs	r0, [r0], #-2
    19cc:	2000000e 	andcs	r0, r0, lr
    19d0:	1400000e 	strne	r0, [r0], #-14
    19d4:	1e01006c 	cdpne	0, 0, cr0, cr1, cr12, {3}
    19d8:	00301603 	eorseq	r1, r0, r3, lsl #12
    19dc:	0e580000 	cdpeq	0, 5, cr0, cr8, cr0, {0}
    19e0:	0e420000 	cdpeq	0, 4, cr0, cr2, cr0, {0}
    19e4:	64230000 	strtvs	r0, [r3], #-0
    19e8:	f2000019 	vqadd.s8	d0, d0, d9
    19ec:	08100018 	ldmdaeq	r0, {r3, r4}
    19f0:	01100019 	tsteq	r0, r9, lsl r0
    19f4:	541a031e 	ldrpl	r0, [sl], #-798	; 0xfffffce2
    19f8:	24000009 	strcs	r0, [r0], #-9
    19fc:	00001982 	andeq	r1, r0, r2, lsl #19
    1a00:	00000ee1 	andeq	r0, r0, r1, ror #29
    1a04:	00000edb 	ldrdeq	r0, [r0], -fp
    1a08:	00197625 	andseq	r7, r9, r5, lsr #12
    1a0c:	198e2600 	stmibne	lr, {r9, sl, sp}
    1a10:	0f0c0000 	svceq	0x000c0000
    1a14:	0f0a0000 	svceq	0x000a0000
    1a18:	21000000 	mrscs	r0, (UNDEF: 0)
    1a1c:	10001940 	andne	r1, r0, r0, asr #18
    1a20:	00000976 	andeq	r0, r0, r6, ror r9
    1a24:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1a28:	01162008 	tsteq	r6, r8
    1a2c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a30:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a34:	01167f79 	tsteq	r6, r9, ror pc
    1a38:	00760253 	rsbseq	r0, r6, r3, asr r2
    1a3c:	19622100 	stmdbne	r2!, {r8, sp}^
    1a40:	09921000 	ldmibeq	r2, {ip}
    1a44:	01160000 	tsteq	r6, r0
    1a48:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a4c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a50:	01167f75 	tsteq	r6, r5, ror pc
    1a54:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1a58:	19942200 	ldmibne	r4, {r9, sp}
    1a5c:	01161000 	tsteq	r6, r0
    1a60:	20080250 	andcs	r0, r8, r0, asr r2
    1a64:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1a68:	01160078 	tsteq	r6, r8, ror r0
    1a6c:	7f750252 	svcvc	0x00750252
    1a70:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1a74:	00000076 	andeq	r0, r0, r6, ror r0
    1a78:	0019a41d 	andseq	sl, r9, sp, lsl r4
    1a7c:	0019da10 	andseq	sp, r9, r0, lsl sl
    1a80:	000a1610 	andeq	r1, sl, r0, lsl r6
    1a84:	0de41c00 	stcleq	12, cr1, [r4]
    1a88:	3a010000 	bcc	41a90 <SYSTICK_CYCLES+0x18a51>
    1a8c:	0b841403 	bleq	fe106aa0 <__RAM_segment_used_end__+0xc6006aa0>
    1a90:	0f210000 	svceq	0x00210000
    1a94:	0f1f0000 	svceq	0x001f0000
    1a98:	d0150000 	andsle	r0, r5, r0
    1a9c:	0f100019 	svceq	0x00100019
    1aa0:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1aa4:	77025001 	strvc	r5, [r2, -r1]
    1aa8:	51011600 	tstpl	r1, r0, lsl #12
    1aac:	16007802 	strne	r7, [r0], -r2, lsl #16
    1ab0:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1ab4:	53011600 	movwpl	r1, #5632	; 0x1600
    1ab8:	16007602 	strne	r7, [r0], -r2, lsl #12
    1abc:	01047d02 	tsteq	r4, r2, lsl #26
    1ac0:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1ac4:	16400108 	strbne	r0, [r0], -r8, lsl #2
    1ac8:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1acc:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1ad0:	3801107d 	stmdacc	r1, {r0, r2, r3, r4, r5, r6, ip}
    1ad4:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1ad8:	00007502 	andeq	r7, r0, r2, lsl #10
    1adc:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    1ae0:	14080000 	strne	r0, [r8], #-0
    1ae4:	00031000 	andeq	r1, r3, r0
    1ae8:	10001408 	andne	r1, r0, r8, lsl #8
    1aec:	1000140e 	andne	r1, r0, lr, lsl #8
    1af0:	09026801 	stmdbeq	r2, {r0, fp, sp, lr}
    1af4:	00000a3f 	andeq	r0, r0, pc, lsr sl
    1af8:	00195824 	andseq	r5, r9, r4, lsr #16
    1afc:	000f3700 	andeq	r3, pc, r0, lsl #14
    1b00:	000f3500 	andeq	r3, pc, r0, lsl #10
    1b04:	46270000 	strtmi	r0, [r7], -r0
    1b08:	ae000019 	mcrge	0, 0, r0, cr0, cr9, {0}
    1b0c:	00100014 	andseq	r0, r0, r4, lsl r0
    1b10:	0014ae00 	andseq	sl, r4, r0, lsl #28
    1b14:	0014b410 	andseq	fp, r4, r0, lsl r4
    1b18:	027c0110 	rsbseq	r0, ip, #16, 2
    1b1c:	000a680b 	andeq	r6, sl, fp, lsl #16
    1b20:	19582400 	ldmdbne	r8, {sl, sp}^
    1b24:	0f4c0000 	svceq	0x004c0000
    1b28:	0f4a0000 	svceq	0x004a0000
    1b2c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    1b30:	100013d6 	ldrdne	r1, [r0], -r6
    1b34:	87007702 	strhi	r7, [r0, -r2, lsl #14]
    1b38:	1600000a 	strne	r0, [r0], -sl
    1b3c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1b40:	52011600 	andpl	r1, r1, #0, 12
    1b44:	16007402 	strne	r7, [r0], -r2, lsl #8
    1b48:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1b4c:	80200000 	eorhi	r0, r0, r0
    1b50:	d8100014 	ldmdale	r0, {r2, r4}
    1b54:	9b000018 	blls	1bbc <_Min_Stack_Size+0xbbc>
    1b58:	1600000a 	strne	r0, [r0], -sl
    1b5c:	91025001 	tstls	r2, r1
    1b60:	c8200054 	stmdagt	r0!, {r2, r4, r6}
    1b64:	d8100014 	ldmdale	r0, {r2, r4}
    1b68:	af000018 	svcge	0x00000018
    1b6c:	1600000a 	strne	r0, [r0], -sl
    1b70:	91025001 	tstls	r2, r1
    1b74:	0a200054 	beq	801ccc <__RAM_SIZE+0x701ccc>
    1b78:	a8100018 	ldmdage	r0, {r3, r4}
    1b7c:	eb00000f 	bl	1bc0 <_Min_Stack_Size+0xbc0>
    1b80:	1600000a 	strne	r0, [r0], -sl
    1b84:	77025001 	strvc	r5, [r2, -r1]
    1b88:	51011600 	tstpl	r1, r0, lsl #12
    1b8c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1b90:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1b94:	53011600 	movwpl	r1, #5632	; 0x1600
    1b98:	16007602 	strne	r7, [r0], -r2, lsl #12
    1b9c:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1ba0:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1ba4:	91030c7d 	tstls	r3, sp, ror ip
    1ba8:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1bac:	7502107d 	strvc	r1, [r2, #-125]	; 0xffffff83
    1bb0:	5e200000 	cdppl	0, 2, cr0, cr0, cr0, {0}
    1bb4:	89100018 	ldmdbhi	r0, {r3, r4}
    1bb8:	2700000b 	strcs	r0, [r0, -fp]
    1bbc:	1600000b 	strne	r0, [r0], -fp
    1bc0:	77025001 	strvc	r5, [r2, -r1]
    1bc4:	51011600 	tstpl	r1, r0, lsl #12
    1bc8:	16007802 	strne	r7, [r0], -r2, lsl #16
    1bcc:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1bd0:	53011600 	movwpl	r1, #5632	; 0x1600
    1bd4:	16007602 	strne	r7, [r0], -r2, lsl #12
    1bd8:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1bdc:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1be0:	91030c7d 	tstls	r3, sp, ror ip
    1be4:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1be8:	7502107d 	strvc	r1, [r2, #-125]	; 0xffffff83
    1bec:	e6210000 	strt	r0, [r1], -r0
    1bf0:	49100019 	ldmdbmi	r0, {r0, r3, r4}
    1bf4:	1600000b 	strne	r0, [r0], -fp
    1bf8:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1bfc:	51011625 	tstpl	r1, r5, lsr #12
    1c00:	16007802 	strne	r7, [r0], -r2, lsl #16
    1c04:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1c08:	53011600 	movwpl	r1, #5632	; 0x1600
    1c0c:	00007602 	andeq	r7, r0, r2, lsl #12
    1c10:	0019fa21 	andseq	pc, r9, r1, lsr #20
    1c14:	000b6510 	andeq	r6, fp, r0, lsl r5
    1c18:	51011600 	tstpl	r1, r0, lsl #12
    1c1c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1c20:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1c24:	53011600 	movwpl	r1, #5632	; 0x1600
    1c28:	00007602 	andeq	r7, r0, r2, lsl #12
    1c2c:	001a1a22 	andseq	r1, sl, r2, lsr #20
    1c30:	50011610 	andpl	r1, r1, r0, lsl r6
    1c34:	01163001 	tsteq	r6, r1
    1c38:	00780251 	rsbseq	r0, r8, r1, asr r2
    1c3c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1c40:	00000076 	andeq	r0, r0, r6, ror r0
    1c44:	12020102 	andne	r0, r2, #-2147483648	; 0x80000000
    1c48:	0300000d 	movweq	r0, #13
    1c4c:	00000b7d 	andeq	r0, r0, sp, ror fp
    1c50:	000be01a 	andeq	lr, fp, sl, lsl r0
    1c54:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c58:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    1c5c:	0c200000 	stceq	0, cr0, [r0], #-0
    1c60:	100a1000 	andne	r1, sl, r0
    1c64:	0f5f1000 	svceq	0x005f1000
    1c68:	a3010000 	movwge	r0, #4096	; 0x1000
    1c6c:	0f00000f 	svceq	0x0000000f
    1c70:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1c74:	2201d301 	andcs	sp, r1, #67108864	; 0x4000000
    1c78:	00000106 	andeq	r0, r0, r6, lsl #2
    1c7c:	00000fc1 	andeq	r0, r0, r1, asr #31
    1c80:	00000fbd 			; <UNDEFINED> instruction: 0x00000fbd
    1c84:	000bb417 	andeq	fp, fp, r7, lsl r4
    1c88:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c8c:	0002ee2d 	andeq	lr, r2, sp, lsr #28
    1c90:	000fe300 	andeq	lr, pc, r0, lsl #6
    1c94:	000fdf00 	andeq	sp, pc, r0, lsl #30
    1c98:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    1c9c:	d3010078 	movwle	r0, #4216	; 0x1078
    1ca0:	00ee3c01 	rsceq	r3, lr, r1, lsl #24
    1ca4:	10170000 	andsne	r0, r7, r0
    1ca8:	10010000 	andne	r0, r1, r0
    1cac:	e8170000 	ldmda	r7, {}	; <UNPREDICTABLE>
    1cb0:	0100000c 	tsteq	r0, ip
    1cb4:	ee4801d3 	mcr	1, 2, r0, cr8, cr3, {6}
    1cb8:	9c000000 	stcls	0, cr0, [r0], {-0}
    1cbc:	98000010 	stmdals	r0, {r4}
    1cc0:	17000010 	smladne	r0, r0, r0, r0
    1cc4:	00001e30 	andeq	r1, r0, r0, lsr lr
    1cc8:	5701d301 	strpl	sp, [r1, -r1, lsl #6]
    1ccc:	00000029 	andeq	r0, r0, r9, lsr #32
    1cd0:	000010c6 	andeq	r1, r0, r6, asr #1
    1cd4:	000010ba 	strheq	r1, [r0], -sl
    1cd8:	000daa17 	andeq	sl, sp, r7, lsl sl
    1cdc:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1ce0:	0000306b 	andeq	r3, r0, fp, rrx
    1ce4:	00112500 	andseq	r2, r1, r0, lsl #10
    1ce8:	00111900 	andseq	r1, r1, r0, lsl #18
    1cec:	0db01700 	ldceq	7, cr1, [r0]
    1cf0:	d3010000 	movwle	r0, #4096	; 0x1000
    1cf4:	00307e01 	eorseq	r7, r0, r1, lsl #28
    1cf8:	11770000 	cmnne	r7, r0
    1cfc:	11730000 	cmnne	r3, r0
    1d00:	2d170000 	ldccs	0, cr0, [r7, #-0]
    1d04:	01000020 	tsteq	r0, r0, lsr #32
    1d08:	309201d3 			; <UNDEFINED> instruction: 0x309201d3
    1d0c:	9f000000 	svcls	0x00000000
    1d10:	97000011 	smladls	r0, r1, r0, r0
    1d14:	1c000011 	stcne	0, cr0, [r0], {17}
    1d18:	00000c44 	andeq	r0, r0, r4, asr #24
    1d1c:	0e01db01 	vmlaeq.f64	d13, d1, d1
    1d20:	00000b84 	andeq	r0, r0, r4, lsl #23
    1d24:	000011da 	ldrdeq	r1, [r0], -sl
    1d28:	000011d6 	ldrdeq	r1, [r0], -r6
    1d2c:	e7010829 	str	r0, [r1, -r9, lsr #16]
    1d30:	0c860301 	stceq	3, cr0, [r6], {1}
    1d34:	552a0000 	strpl	r0, [sl, #-0]!
    1d38:	01e80100 	mvneq	r0, r0, lsl #2
    1d3c:	0000a20e 	andeq	sl, r0, lr, lsl #4
    1d40:	00462a00 	subeq	r2, r6, r0, lsl #20
    1d44:	0e01e901 	vmlaeq.f16	s28, s2, s2	; <UNPREDICTABLE>
    1d48:	00000029 	andeq	r0, r0, r9, lsr #32
    1d4c:	0d381c00 	ldceq	12, cr1, [r8, #-0]
    1d50:	ea010000 	b	41d58 <SYSTICK_CYCLES+0x18d19>
    1d54:	0c650501 	cfstr64eq	mvdx0, [r5], #-4
    1d58:	121e0000 	andsne	r0, lr, #0
    1d5c:	121a0000 	andsne	r0, sl, #0
    1d60:	981c0000 	ldmdals	ip, {}	; <UNPREDICTABLE>
    1d64:	0100000b 	tsteq	r0, fp
    1d68:	850701ed 	strhi	r0, [r7, #-493]	; 0xfffffe13
    1d6c:	56000000 	strpl	r0, [r0], -r0
    1d70:	4a000012 	bmi	1dc0 <_Min_Stack_Size+0xdc0>
    1d74:	1c000012 	stcne	0, cr0, [r0], {18}
    1d78:	00000c96 	muleq	r0, r6, ip
    1d7c:	0701f001 	streq	pc, [r1, -r1]
    1d80:	00000085 	andeq	r0, r0, r5, lsl #1
    1d84:	000012b3 			; <UNDEFINED> instruction: 0x000012b3
    1d88:	000012a9 	andeq	r1, r0, r9, lsr #5
    1d8c:	01007a14 	tsteq	r0, r4, lsl sl
    1d90:	a31001f3 	tstge	r0, #-1073741764	; 0xc000003c
    1d94:	f500000f 			; <UNDEFINED> instruction: 0xf500000f
    1d98:	f3000012 	vqadd.u8	d0, d0, d2
    1d9c:	14000012 	strne	r0, [r0], #-18	; 0xffffffee
    1da0:	0100327a 	tsteq	r0, sl, ror r2
    1da4:	a31001f4 	tstge	r0, #244, 2	; 0x3d
    1da8:	1300000f 	movwne	r0, #15
    1dac:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1db0:	1c000013 	stcne	0, cr0, [r0], {19}
    1db4:	00000bca 	andeq	r0, r0, sl, asr #23
    1db8:	1001ff01 	andne	pc, r1, r1, lsl #30
    1dbc:	00000030 	andeq	r0, r0, r0, lsr r0
    1dc0:	00001351 	andeq	r1, r0, r1, asr r3
    1dc4:	00001345 	andeq	r1, r0, r5, asr #6
    1dc8:	000daf1c 	andeq	sl, sp, ip, lsl pc
    1dcc:	02190100 	andseq	r0, r9, #0, 2
    1dd0:	00003010 	andeq	r3, r0, r0, lsl r0
    1dd4:	0013a800 	andseq	sl, r3, r0, lsl #16
    1dd8:	00139e00 	andseq	r9, r3, r0, lsl #28
    1ddc:	0c301c00 	ldceq	12, cr1, [r0], #-0
    1de0:	2c010000 	stccs	0, cr0, [r1], {-0}
    1de4:	00fa1002 	rscseq	r1, sl, r2
    1de8:	13ea0000 	mvnne	r0, #0
    1dec:	13e80000 	mvnne	r0, #0
    1df0:	3e2b0000 	cdpcc	0, 2, cr0, cr11, cr0, {0}
    1df4:	1c10000c 	ldcne	0, cr0, [r0], {12}
    1df8:	2b00001b 	blcs	1e6c <_Min_Stack_Size+0xe6c>
    1dfc:	10000c52 	andne	r0, r0, r2, asr ip
    1e00:	00001b27 	andeq	r1, r0, r7, lsr #22
    1e04:	000c682b 	andeq	r6, ip, fp, lsr #16
    1e08:	001b3210 	andseq	r3, fp, r0, lsl r2
    1e0c:	0c7a2b00 			; <UNDEFINED> instruction: 0x0c7a2b00
    1e10:	1b321000 	blne	c85e18 <__RAM_SIZE+0xb85e18>
    1e14:	b62b0000 	strtlt	r0, [fp], -r0
    1e18:	3d10000c 	ldccc	0, cr0, [r0, #-48]	; 0xffffffd0
    1e1c:	2b00001b 	blcs	1e90 <_Min_Stack_Size+0xe90>
    1e20:	10000cc0 	andne	r0, r0, r0, asr #25
    1e24:	00001b48 	andeq	r1, r0, r8, asr #22
    1e28:	000cca2b 	andeq	ip, ip, fp, lsr #20
    1e2c:	001b5310 	andseq	r5, fp, r0, lsl r3
    1e30:	0cda2b00 	vldmiaeq	sl, {d18-d17}
    1e34:	1b5e1000 	blne	1785e3c <__RAM_SIZE+0x1685e3c>
    1e38:	e42b0000 	strt	r0, [fp], #-0
    1e3c:	4810000c 	ldmdami	r0, {r2, r3}
    1e40:	2b00001b 	blcs	1eb4 <_Min_Stack_Size+0xeb4>
    1e44:	10000cf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1e48:	00001b53 	andeq	r1, r0, r3, asr fp
    1e4c:	000cf42b 	andeq	pc, ip, fp, lsr #8
    1e50:	001b6910 	andseq	r6, fp, r0, lsl r9
    1e54:	0cfa2b00 	vldmiaeq	sl!, {d18-d17}
    1e58:	1b3d1000 	blne	f45e60 <__RAM_SIZE+0xe45e60>
    1e5c:	082b0000 	stmdaeq	fp!, {}	; <UNPREDICTABLE>
    1e60:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1e64:	2b00001b 	blcs	1ed8 <_Min_Stack_Size+0xed8>
    1e68:	10000d10 	andne	r0, r0, r0, lsl sp
    1e6c:	00001b53 	andeq	r1, r0, r3, asr fp
    1e70:	000d142b 	andeq	r1, sp, fp, lsr #8
    1e74:	001b6910 	andseq	r6, fp, r0, lsl r9
    1e78:	0d242b00 	vstmdbeq	r4!, {d2-d1}
    1e7c:	1b481000 	blne	1205e84 <__RAM_SIZE+0x1105e84>
    1e80:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
    1e84:	3d10000d 	ldccc	0, cr0, [r0, #-52]	; 0xffffffcc
    1e88:	2b00001b 	blcs	1efc <_Min_Stack_Size+0xefc>
    1e8c:	10000d38 	andne	r0, r0, r8, lsr sp
    1e90:	00001b48 	andeq	r1, r0, r8, asr #22
    1e94:	000d442b 	andeq	r4, sp, fp, lsr #8
    1e98:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1e9c:	0d502b00 	vldreq	d18, [r0, #-0]
    1ea0:	1b481000 	blne	1205ea8 <__RAM_SIZE+0x1105ea8>
    1ea4:	742b0000 	strtvc	r0, [fp], #-0
    1ea8:	5310000d 	tstpl	r0, #13
    1eac:	2b00001b 	blcs	1f20 <_Min_Stack_Size+0xf20>
    1eb0:	10000d86 	andne	r0, r0, r6, lsl #27
    1eb4:	00001b5e 	andeq	r1, r0, lr, asr fp
    1eb8:	000d962b 	andeq	r9, sp, fp, lsr #12
    1ebc:	001b7410 	andseq	r7, fp, r0, lsl r4
    1ec0:	0d9e2b00 	vldreq	d2, [lr]
    1ec4:	1b531000 	blne	14c5ecc <__RAM_SIZE+0x13c5ecc>
    1ec8:	aa2b0000 	bge	ac1ed0 <__RAM_SIZE+0x9c1ed0>
    1ecc:	7410000d 	ldrvc	r0, [r0], #-13
    1ed0:	2b00001b 	blcs	1f44 <_Min_Stack_Size+0xf44>
    1ed4:	10000db2 			; <UNDEFINED> instruction: 0x10000db2
    1ed8:	00001b53 	andeq	r1, r0, r3, asr fp
    1edc:	000dbe2b 	andeq	fp, sp, fp, lsr #28
    1ee0:	001b7410 	andseq	r7, fp, r0, lsl r4
    1ee4:	0dca2b00 	vstreq	d18, [sl]
    1ee8:	1b531000 	blne	14c5ef0 <__RAM_SIZE+0x13c5ef0>
    1eec:	d62b0000 	strtle	r0, [fp], -r0
    1ef0:	7410000d 	ldrvc	r0, [r0], #-13
    1ef4:	2b00001b 	blcs	1f68 <_Min_Stack_Size+0xf68>
    1ef8:	10000dde 	ldrdne	r0, [r0], -lr
    1efc:	00001b53 	andeq	r1, r0, r3, asr fp
    1f00:	000de62b 	andeq	lr, sp, fp, lsr #12
    1f04:	001b4810 	andseq	r4, fp, r0, lsl r8
    1f08:	0df62b00 			; <UNDEFINED> instruction: 0x0df62b00
    1f0c:	1b271000 	blne	9c5f14 <__RAM_SIZE+0x8c5f14>
    1f10:	062b0000 	strteq	r0, [fp], -r0
    1f14:	7410000e 	ldrvc	r0, [r0], #-14
    1f18:	2b00001b 	blcs	1f8c <_Min_Stack_Size+0xf8c>
    1f1c:	10000e2e 	andne	r0, r0, lr, lsr #28
    1f20:	00001b7f 	andeq	r1, r0, pc, ror fp
    1f24:	000e402b 	andeq	r4, lr, fp, lsr #32
    1f28:	001b3210 	andseq	r3, fp, r0, lsl r2
    1f2c:	0e722000 	cdpeq	0, 7, cr2, cr2, cr0, {0}
    1f30:	0fa81000 	svceq	0x00a81000
    1f34:	0eae0000 	cdpeq	0, 10, cr0, cr14, cr0, {0}
    1f38:	01160000 	tsteq	r6, r0
    1f3c:	007a0250 	rsbseq	r0, sl, r0, asr r2
    1f40:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1f44:	01160074 	tsteq	r6, r4, ror r0
    1f48:	007b0252 	rsbseq	r0, fp, r2, asr r2
    1f4c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1f50:	02160075 	andseq	r0, r6, #117	; 0x75
    1f54:	9105007d 	tstls	r5, sp, ror r0
    1f58:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    1f5c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1f60:	06089103 	streq	r9, [r8], -r3, lsl #2
    1f64:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1f68:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1f6c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1f70:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1f74:	0f4c2b00 	svceq	0x004c2b00
    1f78:	1b741000 	blne	1d05f80 <__RAM_SIZE+0x1c05f80>
    1f7c:	5c2b0000 	stcpl	0, cr0, [fp], #-0
    1f80:	3210000f 	andscc	r0, r0, #15
    1f84:	2000001b 	andcs	r0, r0, fp, lsl r0
    1f88:	10000f84 	andne	r0, r0, r4, lsl #31
    1f8c:	00000fa8 	andeq	r0, r0, r8, lsr #31
    1f90:	00000f0c 	andeq	r0, r0, ip, lsl #30
    1f94:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1f98:	0116007a 	tsteq	r6, sl, ror r0
    1f9c:	00740251 	rsbseq	r0, r4, r1, asr r2
    1fa0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1fa4:	0116007b 	tsteq	r6, fp, ror r0
    1fa8:	00750253 	rsbseq	r0, r5, r3, asr r2
    1fac:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1fb0:	7fa89106 	svcvc	0x00a89106
    1fb4:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    1fb8:	03087d02 	movweq	r7, #36098	; 0x8d02
    1fbc:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1fc0:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1fc4:	02160078 	andseq	r0, r6, #120	; 0x78
    1fc8:	9107107d 	tstls	r7, sp, ror r0
    1fcc:	ff0b0610 			; <UNDEFINED> instruction: 0xff0b0610
    1fd0:	21001af7 	strdcs	r1, [r0, -r7]
    1fd4:	10000fa4 	andne	r0, r0, r4, lsr #31
    1fd8:	00000f28 	andeq	r0, r0, r8, lsr #30
    1fdc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1fe0:	01160074 	tsteq	r6, r4, ror r0
    1fe4:	7f780252 	svcvc	0x00780252
    1fe8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1fec:	20000075 	andcs	r0, r0, r5, ror r0
    1ff0:	10000fce 	andne	r0, r0, lr, asr #31
    1ff4:	0000150f 	andeq	r1, r0, pc, lsl #10
    1ff8:	00000f84 	andeq	r0, r0, r4, lsl #31
    1ffc:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    2000:	0116007a 	tsteq	r6, sl, ror r0
    2004:	00740251 	rsbseq	r0, r4, r1, asr r2
    2008:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    200c:	01160078 	tsteq	r6, r8, ror r0
    2010:	00750253 	rsbseq	r0, r5, r3, asr r2
    2014:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    2018:	4f00760c 	svcmi	0x0000760c
    201c:	27007626 	strcs	r7, [r0, -r6, lsr #12]
    2020:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    2024:	7d02161c 	stcvc	6, cr1, [r2, #-112]	; 0xffffff90
    2028:	00760404 	rsbseq	r0, r6, r4, lsl #8
    202c:	0216254f 	andseq	r2, r6, #331350016	; 0x13c00000
    2030:	3a01087d 	bcc	4422c <SYSTICK_CYCLES+0x1b1ed>
    2034:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    2038:	7fb09104 	svcvc	0x00b09104
    203c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2040:	00770210 	rsbseq	r0, r7, r0, lsl r2
    2044:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    2048:	22003501 	andcs	r3, r0, #4194304	; 0x400000
    204c:	10000ffc 	strdne	r0, [r0], -ip
    2050:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    2054:	01162008 	tsteq	r6, r8
    2058:	00740251 	rsbseq	r0, r4, r1, asr r2
    205c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2060:	01167f76 	tsteq	r6, r6, ror pc
    2064:	00750253 	rsbseq	r0, r5, r3, asr r2
    2068:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    206c:	1a000000 	bne	2074 <_Min_Stack_Size+0x1074>
    2070:	00000c86 	andeq	r0, r0, r6, lsl #25
    2074:	0f015301 	svceq	0x00015301
    2078:	0000ee01 	andeq	lr, r0, r1, lsl #28
    207c:	00101000 	andseq	r1, r0, r0
    2080:	0013a610 	andseq	sl, r3, r0, lsl r6
    2084:	0013fd10 	andseq	pc, r3, r0, lsl sp	; <UNPREDICTABLE>
    2088:	13570100 	cmpne	r7, #0, 2
    208c:	6f0f0000 	svcvs	0x000f0000
    2090:	01007475 	tsteq	r0, r5, ror r4
    2094:	06220153 			; <UNDEFINED> instruction: 0x06220153
    2098:	5f000001 	svcpl	0x00000001
    209c:	5b000014 	blpl	20f4 <_Min_Stack_Size+0x10f4>
    20a0:	17000014 	smladne	r0, r4, r0, r0
    20a4:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
    20a8:	2d015301 	stccs	3, cr5, [r1, #-4]
    20ac:	000002ee 	andeq	r0, r0, lr, ror #5
    20b0:	00001483 	andeq	r1, r0, r3, lsl #9
    20b4:	0000147f 	andeq	r1, r0, pc, ror r4
    20b8:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    20bc:	01530100 	cmpeq	r3, r0, lsl #2
    20c0:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    20c4:	0014a700 	andseq	sl, r4, r0, lsl #14
    20c8:	0014a300 	andseq	sl, r4, r0, lsl #6
    20cc:	0ce81700 	stcleq	7, cr1, [r8]
    20d0:	53010000 	movwpl	r0, #4096	; 0x1000
    20d4:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    20d8:	14c90000 	strbne	r0, [r9], #0
    20dc:	14c50000 	strbne	r0, [r5], #0
    20e0:	30170000 	andscc	r0, r7, r0
    20e4:	0100001e 	tsteq	r0, lr, lsl r0
    20e8:	29570153 	ldmdbcs	r7, {r0, r1, r4, r6, r8}^
    20ec:	f1000000 	cps	#0
    20f0:	e7000014 	smlad	r0, r4, r0, r0
    20f4:	17000014 	smladne	r0, r4, r0, r0
    20f8:	00000daa 	andeq	r0, r0, sl, lsr #27
    20fc:	6b015301 	blvs	56d08 <SYSTICK_CYCLES+0x2dcc9>
    2100:	00000030 	andeq	r0, r0, r0, lsr r0
    2104:	00001549 	andeq	r1, r0, r9, asr #10
    2108:	00001541 	andeq	r1, r0, r1, asr #10
    210c:	000db017 	andeq	fp, sp, r7, lsl r0
    2110:	01530100 	cmpeq	r3, r0, lsl #2
    2114:	0000307e 	andeq	r3, r0, lr, ror r0
    2118:	00158900 	andseq	r8, r5, r0, lsl #18
    211c:	00157f00 	andseq	r7, r5, r0, lsl #30
    2120:	202d1700 	eorcs	r1, sp, r0, lsl #14
    2124:	53010000 	movwpl	r0, #4096	; 0x1000
    2128:	00309201 	eorseq	r9, r0, r1, lsl #4
    212c:	15cf0000 	strbne	r0, [pc]	; 2134 <_Min_Stack_Size+0x1134>
    2130:	15cb0000 	strbne	r0, [fp]
    2134:	62120000 	andsvs	r0, r2, #0
    2138:	01006675 	tsteq	r0, r5, ror r6
    213c:	57080155 	smlsdpl	r8, r5, r1, r0
    2140:	03000013 	movweq	r0, #19
    2144:	147fb091 	ldrbtne	fp, [pc], #-145	; 214c <_Min_Stack_Size+0x114c>
    2148:	006e656c 	rsbeq	r6, lr, ip, ror #10
    214c:	0a015601 	beq	57958 <SYSTICK_CYCLES+0x2e919>
    2150:	000000ee 	andeq	r0, r0, lr, ror #1
    2154:	0000161d 	andeq	r1, r0, sp, lsl r6
    2158:	000015ef 	andeq	r1, r0, pc, ror #11
    215c:	000baa1c 	andeq	sl, fp, ip, lsl sl
    2160:	01570100 	cmpeq	r7, r0, lsl #2
    2164:	0000290a 	andeq	r2, r0, sl, lsl #18
    2168:	00173c00 	andseq	r3, r7, r0, lsl #24
    216c:	00173200 	andseq	r3, r7, r0, lsl #4
    2170:	0b921300 	bleq	fe486d78 <__RAM_segment_used_end__+0xc6386d78>
    2174:	5a010000 	bpl	4217c <SYSTICK_CYCLES+0x1913d>
    2178:	13771701 	cmnne	r7, #262144	; 0x40000
    217c:	03050000 	movweq	r0, #20480	; 0x5000
    2180:	10004ed0 	ldrdne	r4, [r0], -r0
    2184:	000c441c 	andeq	r4, ip, ip, lsl r4
    2188:	016f0100 	cmneq	pc, r0, lsl #2
    218c:	000b7d08 	andeq	r7, fp, r8, lsl #26
    2190:	00179e00 	andseq	r9, r7, r0, lsl #28
    2194:	00179200 	andseq	r9, r7, r0, lsl #4
    2198:	0c011c00 	stceq	12, cr1, [r1], {-0}
    219c:	7f010000 	svcvc	0x00010000
    21a0:	00850701 	addeq	r0, r5, r1, lsl #14
    21a4:	17fb0000 	ldrbne	r0, [fp, r0]!
    21a8:	17f10000 	ldrbne	r0, [r1, r0]!
    21ac:	74140000 	ldrvc	r0, [r4], #-0
    21b0:	0100706d 	tsteq	r0, sp, rrx
    21b4:	290a0180 	stmdbcs	sl, {r7, r8}
    21b8:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    21bc:	3a000018 	bcc	2224 <_Min_Stack_Size+0x1224>
    21c0:	1c000018 	stcne	0, cr0, [r0], {24}
    21c4:	00000c14 	andeq	r0, r0, r4, lsl ip
    21c8:	11018101 	tstne	r1, r1, lsl #2
    21cc:	0000005f 	andeq	r0, r0, pc, asr r0
    21d0:	0000186f 	andeq	r1, r0, pc, ror #16
    21d4:	00001863 	andeq	r1, r0, r3, ror #16
    21d8:	00122a1d 	andseq	r2, r2, sp, lsl sl
    21dc:	00128a10 	andseq	r8, r2, r0, lsl sl
    21e0:	00113410 	andseq	r3, r1, r0, lsl r4
    21e4:	18bc1c00 	ldmne	ip!, {sl, fp, ip}
    21e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    21ec:	00301201 	eorseq	r1, r0, r1, lsl #4
    21f0:	18be0000 	ldmne	lr!, {}	; <UNPREDICTABLE>
    21f4:	18ba0000 	ldmne	sl!, {}	; <UNPREDICTABLE>
    21f8:	2b000000 	blcs	2200 <_Min_Stack_Size+0x1200>
    21fc:	10001034 	andne	r1, r0, r4, lsr r0
    2200:	00001b1c 	andeq	r1, r0, ip, lsl fp
    2204:	0010482b 	andseq	r4, r0, fp, lsr #16
    2208:	001b3210 	andseq	r3, fp, r0, lsl r2
    220c:	105a2b00 	subsne	r2, sl, r0, lsl #22
    2210:	1b271000 	blne	9c6218 <__RAM_SIZE+0x8c6218>
    2214:	6c2b0000 	stcvs	0, cr0, [fp], #-0
    2218:	27100010 			; <UNDEFINED> instruction: 0x27100010
    221c:	2b00001b 	blcs	2290 <_Min_Stack_Size+0x1290>
    2220:	1000107e 	andne	r1, r0, lr, ror r0
    2224:	00001b32 	andeq	r1, r0, r2, lsr fp
    2228:	00108e2b 	andseq	r8, r0, fp, lsr #28
    222c:	001b3210 	andseq	r3, fp, r0, lsl r2
    2230:	10d62000 	sbcsne	r2, r6, r0
    2234:	17911000 	ldrne	r1, [r1, r0]
    2238:	11b40000 			; <UNDEFINED> instruction: 0x11b40000
    223c:	01160000 	tsteq	r6, r0
    2240:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    2244:	0116067f 	tsteq	r6, pc, ror r6
    2248:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    224c:	0116067f 	tsteq	r6, pc, ror r6
    2250:	007a0252 	rsbseq	r0, sl, r2, asr r2
    2254:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2258:	0216007b 	andseq	r0, r6, #123	; 0x7b
    225c:	0305007d 	movweq	r0, #20605	; 0x507d
    2260:	10004ec0 	andne	r4, r0, r0, asr #29
    2264:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2268:	02163301 	andseq	r3, r6, #67108864	; 0x4000000
    226c:	9103087d 	tstls	r3, sp, ror r8
    2270:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    2274:	91030c7d 	tstls	r3, sp, ror ip
    2278:	20000610 	andcs	r0, r0, r0, lsl r6
    227c:	100010f4 	strdne	r1, [r0], -r4
    2280:	00001791 	muleq	r0, r1, r7
    2284:	000011fe 	strdeq	r1, [r0], -lr
    2288:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    228c:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    2290:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    2294:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    2298:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    229c:	0116007a 	tsteq	r6, sl, ror r0
    22a0:	007b0253 	rsbseq	r0, fp, r3, asr r2
    22a4:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    22a8:	4ec40305 	cdpmi	3, 12, cr0, cr4, cr5, {0}
    22ac:	02161000 	andseq	r1, r6, #0
    22b0:	3401047d 	strcc	r0, [r1], #-1149	; 0xfffffb83
    22b4:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    22b8:	060c9103 	streq	r9, [ip], -r3, lsl #2
    22bc:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    22c0:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    22c4:	111c2000 	tstne	ip, r0
    22c8:	17911000 	ldrne	r1, [r1, r0]
    22cc:	12380000 	eorsne	r0, r8, #0
    22d0:	01160000 	tsteq	r6, r0
    22d4:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    22d8:	0116067f 	tsteq	r6, pc, ror r6
    22dc:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    22e0:	0116067f 	tsteq	r6, pc, ror r6
    22e4:	007a0252 	rsbseq	r0, sl, r2, asr r2
    22e8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    22ec:	0216007b 	andseq	r0, r6, #123	; 0x7b
    22f0:	9103087d 	tstls	r3, sp, ror r8
    22f4:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    22f8:	91030c7d 	tstls	r3, sp, ror ip
    22fc:	20000610 	andcs	r0, r0, r0, lsl r6
    2300:	10001140 	andne	r1, r0, r0, asr #2
    2304:	00000b89 	andeq	r0, r0, r9, lsl #23
    2308:	00001281 	andeq	r1, r0, r1, lsl #5
    230c:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    2310:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    2314:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    2318:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    231c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2320:	0116007a 	tsteq	r6, sl, ror r0
    2324:	007b0253 	rsbseq	r0, fp, r3, asr r2
    2328:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    232c:	2908f503 	stmdbcs	r8, {r0, r1, r8, sl, ip, sp, lr, pc}
    2330:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2334:	16007502 	strne	r7, [r0], -r2, lsl #10
    2338:	030c7d02 	movweq	r7, #52482	; 0xcd02
    233c:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2340:	03107d02 	tsteq	r0, #2, 26	; 0x80
    2344:	00061091 	muleq	r6, r1, r0
    2348:	00114e2b 	andseq	r4, r1, fp, lsr #28
    234c:	001b5e10 	andseq	r5, fp, r0, lsl lr
    2350:	11642b00 	cmnne	r4, r0, lsl #22
    2354:	1b691000 	blne	1a4635c <__RAM_SIZE+0x194635c>
    2358:	6a2b0000 	bvs	ac2360 <__RAM_SIZE+0x9c2360>
    235c:	3d100011 	ldccc	0, cr0, [r0, #-68]	; 0xffffffbc
    2360:	2b00001b 	blcs	23d4 <_Min_Stack_Size+0x13d4>
    2364:	10001176 	andne	r1, r0, r6, ror r1
    2368:	00001b5e 	andeq	r1, r0, lr, asr fp
    236c:	0011882b 	andseq	r8, r1, fp, lsr #16
    2370:	001b4810 	andseq	r4, fp, r0, lsl r8
    2374:	11942b00 	orrsne	r2, r4, r0, lsl #22
    2378:	1b8a1000 	blne	fe286380 <__RAM_segment_used_end__+0xc6186380>
    237c:	9a2b0000 	bls	ac2384 <__RAM_SIZE+0x9c2384>
    2380:	95100011 	ldrls	r0, [r0, #-17]	; 0xffffffef
    2384:	2b00001b 	blcs	23f8 <_Min_Stack_Size+0x13f8>
    2388:	100011a6 	andne	r1, r0, r6, lsr #3
    238c:	00001b5e 	andeq	r1, r0, lr, asr fp
    2390:	0011b62b 	andseq	fp, r1, fp, lsr #12
    2394:	001b2710 	andseq	r2, fp, r0, lsl r7
    2398:	11c02b00 	bicne	r2, r0, r0, lsl #22
    239c:	1b951000 	blne	fe5463a4 <__RAM_segment_used_end__+0xc64463a4>
    23a0:	cc2b0000 	stcgt	0, cr0, [fp], #-0
    23a4:	a0100011 	andsge	r0, r0, r1, lsl r0
    23a8:	2b00001b 	blcs	241c <_Min_Stack_Size+0x141c>
    23ac:	100011da 	ldrdne	r1, [r0], -sl
    23b0:	00001b3d 	andeq	r1, r0, sp, lsr fp
    23b4:	0011e62b 	andseq	lr, r1, fp, lsr #12
    23b8:	001b5e10 	andseq	r5, fp, r0, lsl lr
    23bc:	11f22b00 	mvnsne	r2, r0, lsl #22
    23c0:	1b321000 	blne	c863c8 <__RAM_SIZE+0xb863c8>
    23c4:	002b0000 	eoreq	r0, fp, r0
    23c8:	27100012 			; <UNDEFINED> instruction: 0x27100012
    23cc:	2b00001b 	blcs	2440 <_Min_Stack_Size+0x1440>
    23d0:	1000121a 	andne	r1, r0, sl, lsl r2
    23d4:	00001b32 	andeq	r1, r0, r2, lsr fp
    23d8:	00133215 	andseq	r3, r3, r5, lsl r2
    23dc:	00179110 	andseq	r9, r7, r0, lsl r1
    23e0:	50011600 	andpl	r1, r1, r0, lsl #12
    23e4:	7f9c9104 	svcvc	0x009c9104
    23e8:	51011606 	tstpl	r1, r6, lsl #12
    23ec:	7fa89104 	svcvc	0x00a89104
    23f0:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    23f4:	16007a02 	strne	r7, [r0], -r2, lsl #20
    23f8:	7b025301 	blvc	97004 <SYSTICK_CYCLES+0x6dfc5>
    23fc:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2400:	b0910300 	addslt	r0, r1, r0, lsl #6
    2404:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    2408:	00740204 	rsbseq	r0, r4, r4, lsl #4
    240c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2410:	060c9103 	streq	r9, [ip], -r3, lsl #2
    2414:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    2418:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    241c:	33180000 	tstcc	r8, #0
    2420:	67000001 	strvs	r0, [r0, -r1]
    2424:	19000013 	stmdbne	r0, {r0, r1, r4}
    2428:	00000030 	andeq	r0, r0, r0, lsr r0
    242c:	a318001f 	tstge	r8, #31
    2430:	7700000f 	strvc	r0, [r0, -pc]
    2434:	19000013 	stmdbne	r0, {r0, r1, r4}
    2438:	00000030 	andeq	r0, r0, r0, lsr r0
    243c:	67030009 	strvs	r0, [r3, -r9]
    2440:	1a000013 	bne	2494 <_Min_Stack_Size+0x1494>
    2444:	00000dd4 	ldrdeq	r0, [r0], -r4
    2448:	0f013201 	svceq	0x00013201
    244c:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2450:	000b5400 	andeq	r5, fp, r0, lsl #8
    2454:	000c1a10 	andeq	r1, ip, r0, lsl sl
    2458:	0018dc10 	andseq	sp, r8, r0, lsl ip
    245c:	150f0100 	strne	r0, [pc, #-256]	; 2364 <_Min_Stack_Size+0x1364>
    2460:	6f0f0000 	svcvs	0x000f0000
    2464:	01007475 	tsteq	r0, r5, ror r4
    2468:	062c0132 			; <UNDEFINED> instruction: 0x062c0132
    246c:	1d000001 	stcne	0, cr0, [r0, #-4]
    2470:	15000019 	strne	r0, [r0, #-25]	; 0xffffffe7
    2474:	17000019 	smladne	r0, r9, r0, r0
    2478:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
    247c:	37013201 	strcc	r3, [r1, -r1, lsl #4]
    2480:	000002ee 	andeq	r0, r0, lr, ror #5
    2484:	0000195d 	andeq	r1, r0, sp, asr r9
    2488:	00001955 	andeq	r1, r0, r5, asr r9
    248c:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    2490:	01320100 	teqeq	r2, r0, lsl #2
    2494:	0000ee46 	andeq	lr, r0, r6, asr #28
    2498:	00199d00 	andseq	r9, r9, r0, lsl #26
    249c:	00199500 	andseq	r9, r9, r0, lsl #10
    24a0:	0ce81700 	stcleq	7, cr1, [r8]
    24a4:	32010000 	andcc	r0, r1, #0
    24a8:	00ee5201 	rsceq	r5, lr, r1, lsl #4
    24ac:	19d90000 	ldmibne	r9, {}^	; <UNPREDICTABLE>
    24b0:	19d50000 	ldmibne	r5, {}^	; <UNPREDICTABLE>
    24b4:	30170000 	andscc	r0, r7, r0
    24b8:	0100001e 	tsteq	r0, lr, lsl r0
    24bc:	7e6d0132 	mcrvc	1, 3, r0, cr13, cr2, {1}
    24c0:	01000000 	mrseq	r0, (UNDEF: 0)
    24c4:	f700001a 			; <UNDEFINED> instruction: 0xf700001a
    24c8:	10000019 	andne	r0, r0, r9, lsl r0
    24cc:	00000c44 	andeq	r0, r0, r4, asr #24
    24d0:	79013201 	stmdbvc	r1, {r0, r9, ip, sp}
    24d4:	00000b7d 	andeq	r0, r0, sp, ror fp
    24d8:	10089102 	andne	r9, r8, r2, lsl #2
    24dc:	00000dea 	andeq	r0, r0, sl, ror #27
    24e0:	96013201 	strls	r3, [r1], -r1, lsl #4
    24e4:	0000007e 	andeq	r0, r0, lr, ror r0
    24e8:	10109102 	andsne	r9, r0, r2, lsl #2
    24ec:	00000daa 	andeq	r0, r0, sl, lsr #27
    24f0:	a9013201 	stmdbge	r1, {r0, r9, ip, sp}
    24f4:	00000030 	andeq	r0, r0, r0, lsr r0
    24f8:	10189102 	andsne	r9, r8, r2, lsl #2
    24fc:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
    2500:	bc013201 	sfmlt	f3, 4, [r1], {1}
    2504:	00000030 	andeq	r0, r0, r0, lsr r0
    2508:	171c9102 	ldrne	r9, [ip, -r2, lsl #2]
    250c:	0000202d 	andeq	r2, r0, sp, lsr #32
    2510:	d0013201 	andle	r3, r1, r1, lsl #4
    2514:	00000030 	andeq	r0, r0, r0, lsr r0
    2518:	00001a55 	andeq	r1, r0, r5, asr sl
    251c:	00001a51 	andeq	r1, r0, r1, asr sl
    2520:	66756212 			; <UNDEFINED> instruction: 0x66756212
    2524:	01340100 	teqeq	r4, r0, lsl #2
    2528:	00135708 	andseq	r5, r3, r8, lsl #14
    252c:	b8910300 	ldmlt	r1, {r8, r9}
    2530:	656c147f 	strbvs	r1, [ip, #-1151]!	; 0xfffffb81
    2534:	3501006e 	strcc	r0, [r1, #-110]	; 0xffffff92
    2538:	00ee0a01 	rsceq	r0, lr, r1, lsl #20
    253c:	1a800000 	bne	fe002544 <__RAM_segment_used_end__+0xc5f02544>
    2540:	1a740000 	bne	1d02548 <__RAM_SIZE+0x1c02548>
    2544:	b01e0000 	andslt	r0, lr, r0
    2548:	b0000000 	andlt	r0, r0, r0
    254c:	1c000014 	stcne	0, cr0, [r0], {20}
    2550:	00000d27 	andeq	r0, r0, r7, lsr #26
    2554:	12013f01 	andne	r3, r1, #1, 30
    2558:	0000013a 	andeq	r0, r0, sl, lsr r1
    255c:	00001ad0 	ldrdeq	r1, [r0], -r0
    2560:	00001acc 	andeq	r1, r0, ip, asr #21
    2564:	000bac2b 	andeq	sl, fp, fp, lsr #24
    2568:	001bab10 	andseq	sl, fp, r0, lsl fp
    256c:	0bcc2b00 	bleq	ff30d174 <__RAM_segment_used_end__+0xc720d174>
    2570:	1bab1000 	blne	feac6578 <__RAM_segment_used_end__+0xc69c6578>
    2574:	15000000 	strne	r0, [r0, #-0]
    2578:	10000c14 	andne	r0, r0, r4, lsl ip
    257c:	00001670 	andeq	r1, r0, r0, ror r6
    2580:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    2584:	067fac91 			; <UNDEFINED> instruction: 0x067fac91
    2588:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    258c:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    2590:	04520116 	ldrbeq	r0, [r2], #-278	; 0xfffffeea
    2594:	067fb491 			; <UNDEFINED> instruction: 0x067fb491
    2598:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    259c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    25a0:	9103007d 	tstls	r3, sp, ror r0
    25a4:	02167fb8 	andseq	r7, r6, #184, 30	; 0x2e0
    25a8:	7902047d 	stmdbvc	r2, {r0, r2, r3, r4, r5, r6, sl}
    25ac:	7d021600 	stcvc	6, cr1, [r2, #-0]
    25b0:	08910408 	ldmeq	r1, {r3, sl}
    25b4:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    25b8:	77020c7d 	smlsdxvc	r2, sp, ip, r0
    25bc:	7d021600 	stcvc	6, cr1, [r2, #-0]
    25c0:	18910310 	ldmne	r1, {r4, r8, r9}
    25c4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    25c8:	1c910314 	ldcne	3, cr0, [r1], {20}
    25cc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    25d0:	007a0218 	rsbseq	r0, sl, r8, lsl r2
    25d4:	b91a0000 	ldmdblt	sl, {}	; <UNPREDICTABLE>
    25d8:	0100000c 	tsteq	r0, ip
    25dc:	010f0119 	tsteq	pc, r9, lsl r1	; <UNPREDICTABLE>
    25e0:	000000ee 	andeq	r0, r0, lr, ror #1
    25e4:	10000ac0 	andne	r0, r0, r0, asr #21
    25e8:	10000b54 	andne	r0, r0, r4, asr fp
    25ec:	00001aee 	andeq	r1, r0, lr, ror #21
    25f0:	00167001 	andseq	r7, r6, r1
    25f4:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 16fc <_Min_Stack_Size+0x6fc>
    25f8:	19010074 	stmdbne	r1, {r2, r4, r5, r6}
    25fc:	01062701 	tsteq	r6, r1, lsl #14
    2600:	1b2b0000 	blne	ac2608 <__RAM_SIZE+0x9c2608>
    2604:	1b270000 	blne	9c260c <__RAM_SIZE+0x8c260c>
    2608:	b4170000 	ldrlt	r0, [r7], #-0
    260c:	0100000b 	tsteq	r0, fp
    2610:	ee320119 	mrc	1, 1, r0, cr2, cr9, {0}
    2614:	50000002 	andpl	r0, r0, r2
    2618:	4c00001b 	stcmi	0, cr0, [r0], {27}
    261c:	0f00001b 	svceq	0x0000001b
    2620:	00786469 	rsbseq	r6, r8, r9, ror #8
    2624:	41011901 	tstmi	r1, r1, lsl #18
    2628:	000000ee 	andeq	r0, r0, lr, ror #1
    262c:	00001b75 	andeq	r1, r0, r5, ror fp
    2630:	00001b71 	andeq	r1, r0, r1, ror fp
    2634:	000ce817 	andeq	lr, ip, r7, lsl r8
    2638:	01190100 	tsteq	r9, r0, lsl #2
    263c:	0000ee4d 	andeq	lr, r0, sp, asr #28
    2640:	001b9a00 	andseq	r9, fp, r0, lsl #20
    2644:	001b9600 	andseq	r9, fp, r0, lsl #12
    2648:	1e301700 	cdpne	7, 3, cr1, cr0, cr0, {0}
    264c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2650:	005f6301 	subseq	r6, pc, r1, lsl #6
    2654:	1bc50000 	blne	ff14265c <__RAM_segment_used_end__+0xc704265c>
    2658:	1bbb0000 	blne	feec2660 <__RAM_segment_used_end__+0xc6dc2660>
    265c:	44100000 	ldrmi	r0, [r0], #-0
    2660:	0100000c 	tsteq	r0, ip
    2664:	7d6f0119 	stfvce	f0, [pc, #-100]!	; 2608 <_Min_Stack_Size+0x1608>
    2668:	0200000b 	andeq	r0, r0, #11
    266c:	ea100491 	b	4038b8 <__RAM_SIZE+0x3038b8>
    2670:	0100000d 	tsteq	r0, sp
    2674:	5f870119 	svcpl	0x00870119
    2678:	02000000 	andeq	r0, r0, #0
    267c:	aa100891 	bge	4048c8 <__RAM_SIZE+0x3048c8>
    2680:	0100000d 	tsteq	r0, sp
    2684:	309a0119 	addscc	r0, sl, r9, lsl r1
    2688:	02000000 	andeq	r0, r0, #0
    268c:	b0100c91 	mulslt	r0, r1, ip
    2690:	0100000d 	tsteq	r0, sp
    2694:	30ad0119 	adccc	r0, sp, r9, lsl r1
    2698:	02000000 	andeq	r0, r0, #0
    269c:	2d171091 	ldccs	0, cr1, [r7, #-580]	; 0xfffffdbc
    26a0:	01000020 	tsteq	r0, r0, lsr #32
    26a4:	30c10119 	sbccc	r0, r1, r9, lsl r1
    26a8:	0a000000 	beq	26b0 <_Min_Stack_Size+0x16b0>
    26ac:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    26b0:	1200001c 	andne	r0, r0, #28
    26b4:	00667562 	rsbeq	r7, r6, r2, ror #10
    26b8:	08011b01 	stmdaeq	r1, {r0, r8, r9, fp, ip}
    26bc:	00001357 	andeq	r1, r0, r7, asr r3
    26c0:	14489102 	strbne	r9, [r8], #-258	; 0xfffffefe
    26c4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    26c8:	0a011c01 	beq	496d4 <SYSTICK_CYCLES+0x20695>
    26cc:	000000ee 	andeq	r0, r0, lr, ror #1
    26d0:	00001c35 	andeq	r1, r0, r5, lsr ip
    26d4:	00001c29 	andeq	r1, r0, r9, lsr #24
    26d8:	0000901e 	andeq	r9, r0, lr, lsl r0
    26dc:	00163000 	andseq	r3, r6, r0
    26e0:	0d271c00 	stceq	12, cr1, [r7, #-0]
    26e4:	26010000 	strcs	r0, [r1], -r0
    26e8:	013a1201 	teqeq	sl, r1, lsl #4
    26ec:	1c8d0000 	stcne	0, cr0, [sp], {0}
    26f0:	1c810000 	stcne	0, cr0, [r1], {0}
    26f4:	15000000 	strne	r0, [r0, #-0]
    26f8:	10000b50 	andne	r0, r0, r0, asr fp
    26fc:	00001670 	andeq	r1, r0, r0, ror r6
    2700:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    2704:	16007402 	strne	r7, [r0], -r2, lsl #8
    2708:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    270c:	02160077 	andseq	r0, r6, #119	; 0x77
    2710:	9104087d 	tstls	r4, sp, ror r8
    2714:	16019404 	strne	r9, [r1], -r4, lsl #8
    2718:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    271c:	02160075 	andseq	r0, r6, #117	; 0x75
    2720:	9103107d 	tstls	r3, sp, ror r0
    2724:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    2728:	9103147d 	tstls	r3, sp, ror r4
    272c:	02160610 	andseq	r0, r6, #16, 12	; 0x1000000
    2730:	7602187d 			; <UNDEFINED> instruction: 0x7602187d
    2734:	2c000000 	stccs	0, cr0, [r0], {-0}
    2738:	00000c79 	andeq	r0, r0, r9, ror ip
    273c:	010fe301 	tsteq	pc, r1, lsl #6
    2740:	000000ee 	andeq	r0, r0, lr, ror #1
    2744:	10000988 	andne	r0, r0, r8, lsl #19
    2748:	10000ac0 	andne	r0, r0, r0, asr #21
    274c:	00001cfb 	strdeq	r1, [r0], -fp
    2750:	00179101 	andseq	r9, r7, r1, lsl #2
    2754:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 1a5c <_Min_Stack_Size+0xa5c>
    2758:	e3010074 	movw	r0, #4212	; 0x1074
    275c:	00010629 	andeq	r0, r1, r9, lsr #12
    2760:	001d4500 	andseq	r4, sp, r0, lsl #10
    2764:	001d3f00 	andseq	r3, sp, r0, lsl #30
    2768:	0bb42e00 	bleq	fed0df70 <__RAM_segment_used_end__+0xc6c0df70>
    276c:	e3010000 	movw	r0, #4096	; 0x1000
    2770:	0002ee34 	andeq	lr, r2, r4, lsr lr
    2774:	001d7700 	andseq	r7, sp, r0, lsl #14
    2778:	001d7100 	andseq	r7, sp, r0, lsl #2
    277c:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2780:	e3010078 	movw	r0, #4216	; 0x1078
    2784:	0000ee43 	andeq	lr, r0, r3, asr #28
    2788:	001da900 	andseq	sl, sp, r0, lsl #18
    278c:	001da300 	andseq	sl, sp, r0, lsl #6
    2790:	0ce82e00 	stcleq	14, cr2, [r8]
    2794:	e3010000 	movw	r0, #4096	; 0x1000
    2798:	0000ee4f 	andeq	lr, r0, pc, asr #28
    279c:	001ddb00 	andseq	sp, sp, r0, lsl #22
    27a0:	001dd500 	andseq	sp, sp, r0, lsl #10
    27a4:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    27a8:	e3010066 	movw	r0, #4198	; 0x1066
    27ac:	0002ee5d 	andeq	lr, r2, sp, asr lr
    27b0:	001e0b00 	andseq	r0, lr, r0, lsl #22
    27b4:	001e0700 	andseq	r0, lr, r0, lsl #14
    27b8:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    27bc:	e301006e 	movw	r0, #4206	; 0x106e
    27c0:	0000ee69 	andeq	lr, r0, r9, ror #28
    27c4:	001e5d00 	andseq	r5, lr, r0, lsl #26
    27c8:	001e2b00 	andseq	r2, lr, r0, lsl #22
    27cc:	0c442e00 	mcrreq	14, 0, r2, r4, cr0
    27d0:	e3010000 	movw	r0, #4096	; 0x1000
    27d4:	000b7d73 	andeq	r7, fp, r3, ror sp
    27d8:	001f9100 	andseq	r9, pc, r0, lsl #2
    27dc:	001f8d00 	andseq	r8, pc, r0, lsl #26
    27e0:	0dea2e00 	stcleq	14, cr2, [sl]
    27e4:	e3010000 	movw	r0, #4096	; 0x1000
    27e8:	0000308a 	andeq	r3, r0, sl, lsl #1
    27ec:	001fb500 	andseq	fp, pc, r0, lsl #10
    27f0:	001fb100 	andseq	fp, pc, r0, lsl #2
    27f4:	0daa2e00 	stceq	14, cr2, [sl]
    27f8:	e3010000 	movw	r0, #4096	; 0x1000
    27fc:	0000309d 	muleq	r0, sp, r0
    2800:	001fd900 	andseq	sp, pc, r0, lsl #18
    2804:	001fd500 	andseq	sp, pc, r0, lsl #10
    2808:	0db02e00 	ldceq	14, cr2, [r0]
    280c:	e3010000 	movw	r0, #4096	; 0x1000
    2810:	000030b0 	strheq	r3, [r0], -r0
    2814:	001ffd00 	andseq	pc, pc, r0, lsl #26
    2818:	001ff900 	andseq	pc, pc, r0, lsl #18
    281c:	202d2e00 	eorcs	r2, sp, r0, lsl #28
    2820:	e3010000 	movw	r0, #4096	; 0x1000
    2824:	000030c4 	andeq	r3, r0, r4, asr #1
    2828:	00202000 	eoreq	r2, r0, r0
    282c:	00201c00 	eoreq	r1, r0, r0, lsl #24
    2830:	0a421500 	beq	1087c38 <__RAM_SIZE+0xf87c38>
    2834:	17911000 	ldrne	r1, [r1, r0]
    2838:	02160000 	andseq	r0, r6, #0
    283c:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    2840:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2844:	00740204 	rsbseq	r0, r4, r4, lsl #4
    2848:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    284c:	16007702 	strne	r7, [r0], -r2, lsl #14
    2850:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    2854:	00000076 	andeq	r0, r0, r6, ror r0
    2858:	000d622c 	andeq	r6, sp, ip, lsr #4
    285c:	0fc70100 	svceq	0x00c70100
    2860:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2864:	00090a00 	andeq	r0, r9, r0, lsl #20
    2868:	00098810 	andeq	r8, r9, r0, lsl r8
    286c:	00204010 	eoreq	r4, r0, r0, lsl r0
    2870:	18d80100 	ldmne	r8, {r8}^
    2874:	6f2d0000 	svcvs	0x002d0000
    2878:	01007475 	tsteq	r0, r5, ror r4
    287c:	010625c7 	smlabteq	r6, r7, r5, r2
    2880:	20880000 	addcs	r0, r8, r0
    2884:	20840000 	addcs	r0, r4, r0
    2888:	b42e0000 	strtlt	r0, [lr], #-0
    288c:	0100000b 	tsteq	r0, fp
    2890:	02ee30c7 	rsceq	r3, lr, #199	; 0xc7
    2894:	20aa0000 	adccs	r0, sl, r0
    2898:	20a60000 	adccs	r0, r6, r0
    289c:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    28a0:	01007864 	tsteq	r0, r4, ror #16
    28a4:	00ee3fc7 	rsceq	r3, lr, r7, asr #31
    28a8:	20d40000 	sbcscs	r0, r4, r0
    28ac:	20c80000 	sbccs	r0, r8, r0
    28b0:	e82e0000 	stmda	lr!, {}	; <UNPREDICTABLE>
    28b4:	0100000c 	tsteq	r0, ip
    28b8:	00ee4bc7 	rsceq	r4, lr, r7, asr #23
    28bc:	21220000 			; <UNDEFINED> instruction: 0x21220000
    28c0:	211e0000 	tstcs	lr, r0
    28c4:	622d0000 	eorvs	r0, sp, #0
    28c8:	01006675 	tsteq	r0, r5, ror r6
    28cc:	024c5fc7 	subeq	r5, ip, #796	; 0x31c
    28d0:	21440000 	mrscs	r0, (UNDEF: 68)
    28d4:	21400000 	mrscs	r0, (UNDEF: 64)
    28d8:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    28dc:	01006e65 	tsteq	r0, r5, ror #28
    28e0:	00ee6bc7 	rsceq	r6, lr, r7, asr #23
    28e4:	21680000 	cmncs	r8, r0
    28e8:	21640000 	cmncs	r4, r0
    28ec:	b02e0000 	eorlt	r0, lr, r0
    28f0:	0100000d 	tsteq	r0, sp
    28f4:	00307dc7 	eorseq	r7, r0, r7, asr #27
    28f8:	218b0000 	orrcs	r0, fp, r0
    28fc:	21870000 	orrcs	r0, r7, r0
    2900:	2d2e0000 	stccs	0, cr0, [lr, #-0]
    2904:	01000020 	tsteq	r0, r0, lsr #32
    2908:	003091c7 	eorseq	r9, r0, r7, asr #3
    290c:	21af0000 			; <UNDEFINED> instruction: 0x21af0000
    2910:	21ab0000 			; <UNDEFINED> instruction: 0x21ab0000
    2914:	302f0000 	eorcc	r0, pc, r0
    2918:	0100000c 	tsteq	r0, ip
    291c:	00fa10c9 	rscseq	r1, sl, r9, asr #1
    2920:	21d50000 	bicscs	r0, r5, r0
    2924:	21cf0000 	biccs	r0, pc, r0
    2928:	781e0000 	ldmdavc	lr, {}	; <UNPREDICTABLE>
    292c:	9d000000 	stcls	0, cr0, [r0, #-0]
    2930:	30000018 	andcc	r0, r0, r8, lsl r0
    2934:	cd010069 	stcgt	0, cr0, [r1, #-420]	; 0xfffffe5c
    2938:	0000ee11 	andeq	lr, r0, r1, lsl lr
    293c:	00220400 	eoreq	r0, r2, r0, lsl #8
    2940:	00220200 	eoreq	r0, r2, r0, lsl #4
    2944:	093e2200 	ldmdbeq	lr!, {r9, sp}
    2948:	01161000 	tsteq	r6, r0
    294c:	20080250 	andcs	r0, r8, r0, asr r2
    2950:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    2954:	01160076 	tsteq	r6, r6, ror r0
    2958:	7f7b0252 	svcvc	0x007b0252
    295c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2960:	00000077 	andeq	r0, r0, r7, ror r0
    2964:	00095c21 	andeq	r5, r9, r1, lsr #24
    2968:	0018b910 	andseq	fp, r8, r0, lsl r9
    296c:	51011600 	tstpl	r1, r0, lsl #12
    2970:	16007602 	strne	r7, [r0], -r2, lsl #12
    2974:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    2978:	5301167f 	movwpl	r1, #5759	; 0x167f
    297c:	00007702 	andeq	r7, r0, r2, lsl #14
    2980:	00098422 	andeq	r8, r9, r2, lsr #8
    2984:	50011610 	andpl	r1, r1, r0, lsl r6
    2988:	16200802 	strtne	r0, [r0], -r2, lsl #16
    298c:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2990:	52011600 	andpl	r1, r1, #0, 12
    2994:	167f7402 	ldrbtne	r7, [pc], -r2, lsl #8
    2998:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    299c:	31000000 	mrscc	r0, (UNDEF: 0)
    29a0:	00000cef 	andeq	r0, r0, pc, ror #25
    29a4:	0115bc01 	tsteq	r5, r1, lsl #24
    29a8:	00000030 	andeq	r0, r0, r0, lsr r0
    29ac:	100008e6 	andne	r0, r0, r6, ror #17
    29b0:	1000090a 	andne	r0, r0, sl, lsl #18
    29b4:	01007d02 	tsteq	r0, r2, lsl #26
    29b8:	00001940 	andeq	r1, r0, r0, asr #18
    29bc:	7274732d 	rsbsvc	r7, r4, #-1275068416	; 0xb4000000
    29c0:	28bc0100 	ldmcs	ip!, {r8}
    29c4:	00001940 	andeq	r1, r0, r0, asr #18
    29c8:	0000221b 	andeq	r2, r0, fp, lsl r2
    29cc:	00002217 	andeq	r2, r0, r7, lsl r2
    29d0:	01006930 	tsteq	r0, r0, lsr r9
    29d4:	003010be 	ldrhteq	r1, [r0], -lr
    29d8:	223f0000 	eorscs	r0, pc, #0
    29dc:	22390000 	eorscs	r0, r9, #0
    29e0:	46320000 	ldrtmi	r0, [r2], -r0
    29e4:	00000019 	andeq	r0, r0, r9, lsl r0
    29e8:	00100009 	andseq	r0, r0, r9
    29ec:	00090000 	andeq	r0, r9, r0
    29f0:	00090410 	andeq	r0, r9, r0, lsl r4
    29f4:	0abf0110 	beq	fefc2e3c <__RAM_segment_used_end__+0xc6ec2e3c>
    29f8:	00195824 	andseq	r5, r9, r4, lsr #16
    29fc:	00226d00 	eoreq	r6, r2, r0, lsl #26
    2a00:	00226900 	eoreq	r6, r2, r0, lsl #18
    2a04:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2a08:	00024c04 	andeq	r4, r2, r4, lsl #24
    2a0c:	0d233300 	stceq	3, cr3, [r3, #-0]
    2a10:	b5010000 	strlt	r0, [r1, #-0]
    2a14:	0b7d0114 	bleq	1f42e6c <__RAM_SIZE+0x1e42e6c>
    2a18:	64030000 	strvs	r0, [r3], #-0
    2a1c:	34000019 	strcc	r0, [r0], #-25	; 0xffffffe7
    2a20:	01006863 	tsteq	r0, r3, ror #16
    2a24:	013323b5 	teqeq	r3, r5	; <illegal shifter operand>
    2a28:	33000000 	movwcc	r0, #0
    2a2c:	00000cf5 	strdeq	r0, [r0], -r5
    2a30:	011cab01 	tsteq	ip, r1, lsl #22
    2a34:	00000030 	andeq	r0, r0, r0, lsr r0
    2a38:	00199903 	andseq	r9, r9, r3, lsl #18
    2a3c:	74733400 	ldrbtvc	r3, [r3], #-1024	; 0xfffffc00
    2a40:	ab010072 	blge	42c10 <SYSTICK_CYCLES+0x19bd1>
    2a44:	00024c33 	andeq	r4, r2, r3, lsr ip
    2a48:	0bf93500 	bleq	ffe4fe50 <__RAM_segment_used_end__+0xc7d4fe50>
    2a4c:	ab010000 	blge	42a54 <SYSTICK_CYCLES+0x19a15>
    2a50:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    2a54:	00733600 	rsbseq	r3, r3, r0, lsl #12
    2a58:	4c0fad01 	stcmi	13, cr10, [pc], {1}
    2a5c:	00000002 	andeq	r0, r0, r2
    2a60:	000c1937 	andeq	r1, ip, r7, lsr r9
    2a64:	149f0100 	ldrne	r0, [pc], #256	; 2a6c <_Min_Stack_Size+0x1a6c>
    2a68:	00000001 	andeq	r0, r0, r1
    2a6c:	00000000 	andeq	r0, r0, r0
    2a70:	00228d00 	eoreq	r8, r2, r0, lsl #26
    2a74:	1a040100 	bne	102e7c <__RAM_SIZE+0x2e7c>
    2a78:	582e0000 	stmdapl	lr!, {}	; <UNPREDICTABLE>
    2a7c:	0100000d 	tsteq	r0, sp
    2a80:	0133229f 	teqeq	r3, pc	; <illegal shifter operand>
    2a84:	22bf0000 	adcscs	r0, pc, #0
    2a88:	22b90000 	adcscs	r0, r9, #0
    2a8c:	b42e0000 	strtlt	r0, [lr], #-0
    2a90:	0100000b 	tsteq	r0, fp
    2a94:	00e0339f 	smlaleq	r3, r0, pc, r3	; <UNPREDICTABLE>
    2a98:	22f10000 	rscscs	r0, r1, #0
    2a9c:	22eb0000 	rsccs	r0, fp, #0
    2aa0:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2aa4:	01007864 	tsteq	r0, r4, ror #16
    2aa8:	00ee429f 	smlaleq	r4, lr, pc, r2	; <UNPREDICTABLE>
    2aac:	23230000 			; <UNDEFINED> instruction: 0x23230000
    2ab0:	231d0000 	tstcs	sp, #0
    2ab4:	e82e0000 	stmda	lr!, {}	; <UNPREDICTABLE>
    2ab8:	0100000c 	tsteq	r0, ip
    2abc:	00ee4e9f 	smlaleq	r4, lr, pc, lr	; <UNPREDICTABLE>
    2ac0:	23550000 	cmpcs	r5, #0
    2ac4:	234f0000 	movtcs	r0, #61440	; 0xf000
    2ac8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    2acc:	00000bef 	andeq	r0, r0, pc, ror #23
    2ad0:	01149501 	tsteq	r4, r1, lsl #10
    2ad4:	10001a28 	andne	r1, r0, r8, lsr #20
    2ad8:	10001a34 	andne	r1, r0, r4, lsr sl
    2adc:	00002381 	andeq	r2, r0, r1, lsl #7
    2ae0:	001a7801 	andseq	r7, sl, r1, lsl #16
    2ae4:	0d582e00 	ldcleq	14, cr2, [r8, #-0]
    2ae8:	95010000 	strls	r0, [r1, #-0]
    2aec:	00013323 	andeq	r3, r1, r3, lsr #6
    2af0:	0023a500 	eoreq	sl, r3, r0, lsl #10
    2af4:	0023a100 	eoreq	sl, r3, r0, lsl #2
    2af8:	0bb42e00 	bleq	fed0e300 <__RAM_segment_used_end__+0xc6c0e300>
    2afc:	95010000 	strls	r0, [r1, #-0]
    2b00:	0000e034 	andeq	lr, r0, r4, lsr r0
    2b04:	0023ca00 	eoreq	ip, r3, r0, lsl #20
    2b08:	0023c600 	eoreq	ip, r3, r0, lsl #12
    2b0c:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2b10:	95010078 	strls	r0, [r1, #-120]	; 0xffffff88
    2b14:	0000ee43 	andeq	lr, r0, r3, asr #28
    2b18:	0023ef00 	eoreq	lr, r3, r0, lsl #30
    2b1c:	0023eb00 	eoreq	lr, r3, r0, lsl #22
    2b20:	0ce82e00 	stcleq	14, cr2, [r8]
    2b24:	95010000 	strls	r0, [r1, #-0]
    2b28:	0000ee4f 	andeq	lr, r0, pc, asr #28
    2b2c:	00241400 	eoreq	r1, r4, r0, lsl #8
    2b30:	00241000 	eoreq	r1, r4, r0
    2b34:	1a322b00 	bne	c8d73c <__RAM_SIZE+0xb8d73c>
    2b38:	1bb61000 	blne	fed86b40 <__RAM_segment_used_end__+0xc6c86b40>
    2b3c:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    2b40:	00000c8c 	andeq	r0, r0, ip, lsl #25
    2b44:	01148e01 	tsteq	r4, r1, lsl #28
    2b48:	100008e4 	andne	r0, r0, r4, ror #17
    2b4c:	100008e6 	andne	r0, r0, r6, ror #17
    2b50:	01007d02 	tsteq	r0, r2, lsl #26
    2b54:	00001aca 	andeq	r1, r0, sl, asr #21
    2b58:	000d583a 	andeq	r5, sp, sl, lsr r8
    2b5c:	238e0100 	orrcs	r0, lr, #0, 2
    2b60:	00000133 	andeq	r0, r0, r3, lsr r1
    2b64:	b43a5001 	ldrtlt	r5, [sl], #-1
    2b68:	0100000b 	tsteq	r0, fp
    2b6c:	00e0348e 	rsceq	r3, r0, lr, lsl #9
    2b70:	51010000 	mrspl	r0, (UNDEF: 1)
    2b74:	7864693b 	stmdavc	r4!, {r0, r1, r3, r4, r5, r8, fp, sp, lr}^
    2b78:	438e0100 	orrmi	r0, lr, #0, 2
    2b7c:	000000ee 	andeq	r0, r0, lr, ror #1
    2b80:	e83a5201 	ldmda	sl!, {r0, r9, ip, lr}
    2b84:	0100000c 	tsteq	r0, ip
    2b88:	00ee4f8e 	rsceq	r4, lr, lr, lsl #31
    2b8c:	53010000 	movwpl	r0, #4096	; 0x1000
    2b90:	0baf3900 	bleq	febd0f98 <__RAM_segment_used_end__+0xc6ad0f98>
    2b94:	85010000 	strhi	r0, [r1, #-0]
    2b98:	00000114 	andeq	r0, r0, r4, lsl r1
    2b9c:	00000000 	andeq	r0, r0, r0
    2ba0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2ba4:	1b1c0100 	blne	702fac <__RAM_SIZE+0x602fac>
    2ba8:	583a0000 	ldmdapl	sl!, {}	; <UNPREDICTABLE>
    2bac:	0100000d 	tsteq	r0, sp
    2bb0:	01332585 	teqeq	r3, r5, lsl #11
    2bb4:	50010000 	andpl	r0, r1, r0
    2bb8:	000bb43a 	andeq	fp, fp, sl, lsr r4
    2bbc:	36850100 	strcc	r0, [r5], r0, lsl #2
    2bc0:	000000e0 	andeq	r0, r0, r0, ror #1
    2bc4:	693b5101 	ldmdbvs	fp!, {r0, r8, ip, lr}
    2bc8:	01007864 	tsteq	r0, r4, ror #16
    2bcc:	00ee4585 	rsceq	r4, lr, r5, lsl #11
    2bd0:	52010000 	andpl	r0, r1, #0
    2bd4:	000ce83a 	andeq	lr, ip, sl, lsr r8
    2bd8:	51850100 	orrpl	r0, r5, r0, lsl #2
    2bdc:	000000ee 	andeq	r0, r0, lr, ror #1
    2be0:	3c005301 	stccc	3, cr5, [r0], {1}
    2be4:	0d3d0101 	ldfeqs	f0, [sp, #-4]!
    2be8:	0d3d0000 	ldceq	0, cr0, [sp, #-0]
    2bec:	013c0000 	teqeq	ip, r0
    2bf0:	000cd901 	andeq	sp, ip, r1, lsl #18
    2bf4:	000cd900 	andeq	sp, ip, r0, lsl #18
    2bf8:	01013c00 	tsteq	r1, r0, lsl #24
    2bfc:	00000dc5 	andeq	r0, r0, r5, asr #27
    2c00:	00000dc5 	andeq	r0, r0, r5, asr #27
    2c04:	8601013c 			; <UNDEFINED> instruction: 0x8601013c
    2c08:	8600000b 	strhi	r0, [r0], -fp
    2c0c:	3c00000b 	stccc	0, cr0, [r0], {11}
    2c10:	0d050101 	stfeqs	f0, [r5, #-4]
    2c14:	0d050000 	stceq	0, cr0, [r5, #-0]
    2c18:	013c0000 	teqeq	ip, r0
    2c1c:	000c4d01 	andeq	r4, ip, r1, lsl #26
    2c20:	000c4d00 	andeq	r4, ip, r0, lsl #26
    2c24:	01013c00 	tsteq	r1, r0, lsl #24
    2c28:	00000d6b 	andeq	r0, r0, fp, ror #26
    2c2c:	00000d6b 	andeq	r0, r0, fp, ror #26
    2c30:	0701013c 	smladxeq	r1, ip, r1, r0
    2c34:	0700000c 	streq	r0, [r0, -ip]
    2c38:	3c00000c 	stccc	0, cr0, [r0], {12}
    2c3c:	0bd30101 	bleq	ff4c3048 <__RAM_segment_used_end__+0xc73c3048>
    2c40:	0bd30000 	bleq	ff4c2c48 <__RAM_segment_used_end__+0xc73c2c48>
    2c44:	013c0000 	teqeq	ip, r0
    2c48:	000caa01 	andeq	sl, ip, r1, lsl #20
    2c4c:	000caa00 	andeq	sl, ip, r0, lsl #20
    2c50:	01013c00 	tsteq	r1, r0, lsl #24
    2c54:	00000c22 	andeq	r0, r0, r2, lsr #24
    2c58:	00000c22 	andeq	r0, r0, r2, lsr #24
    2c5c:	cc01013c 	stfgts	f0, [r1], {60}	; 0x3c
    2c60:	cc00000c 	stcgt	0, cr0, [r0], {12}
    2c64:	3c00000c 	stccc	0, cr0, [r0], {12}
    2c68:	0d890101 	stfeqs	f0, [r9, #4]
    2c6c:	0d890000 	stceq	0, cr0, [r9]
    2c70:	013c0000 	teqeq	ip, r0
    2c74:	000d7801 	andeq	r7, sp, r1, lsl #16
    2c78:	000d7800 	andeq	r7, sp, r0, lsl #16
    2c7c:	01013d00 	tsteq	r1, r0, lsl #26
    2c80:	00000be6 	andeq	r0, r0, r6, ror #23
    2c84:	00000be6 	andeq	r0, r0, r6, ror #23
    2c88:	00053107 	andeq	r3, r5, r7, lsl #2
    2c8c:	0000024f 	andeq	r0, r0, pc, asr #4
    2c90:	06720002 	ldrbteq	r0, [r2], -r2
    2c94:	01040000 	mrseq	r0, (UNDEF: 4)
    2c98:	0000003d 	andeq	r0, r0, sp, lsr r0
    2c9c:	000df90c 	andeq	pc, sp, ip, lsl #18
    2ca0:	00064100 	andeq	r4, r6, r0, lsl #2
    2ca4:	0001c800 	andeq	ip, r1, r0, lsl #16
	...
    2cb0:	00168800 	andseq	r8, r6, r0, lsl #16
    2cb4:	06010200 	streq	r0, [r1], -r0, lsl #4
    2cb8:	00000852 	andeq	r0, r0, r2, asr r8
    2cbc:	0009f803 	andeq	pc, r9, r3, lsl #16
    2cc0:	182b0200 	stmdane	fp!, {r9}
    2cc4:	0000003c 	andeq	r0, r0, ip, lsr r0
    2cc8:	50080102 	andpl	r0, r8, r2, lsl #2
    2ccc:	02000008 	andeq	r0, r0, #8
    2cd0:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    2cd4:	02020000 	andeq	r0, r2, #0
    2cd8:	00091e07 	andeq	r1, r9, r7, lsl #28
    2cdc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2ce0:	000004ed 	andeq	r0, r0, sp, ror #9
    2ce4:	000a5b03 	andeq	r5, sl, r3, lsl #22
    2ce8:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    2cec:	00000064 	andeq	r0, r0, r4, rrx
    2cf0:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    2cf4:	02000002 	andeq	r0, r0, #2
    2cf8:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    2cfc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2d00:	00022f07 	andeq	r2, r2, r7, lsl #30
    2d04:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    2d08:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2d0c:	39070402 	stmdbcc	r7, {r1, sl}
    2d10:	03000002 	movweq	r0, #2
    2d14:	00000bc3 	andeq	r0, r0, r3, asr #23
    2d18:	8017d103 	andshi	sp, r7, r3, lsl #2
    2d1c:	02000000 	andeq	r0, r0, #0
    2d20:	06230408 	strteq	r0, [r3], -r8, lsl #8
    2d24:	01020000 	mrseq	r0, (UNDEF: 2)
    2d28:	00085908 	andeq	r5, r8, r8, lsl #18
    2d2c:	009a0500 	addseq	r0, sl, r0, lsl #10
    2d30:	04060000 	streq	r0, [r6], #-0
    2d34:	000000a1 	andeq	r0, r0, r1, lsr #1
    2d38:	0009fa03 	andeq	pc, r9, r3, lsl #20
    2d3c:	13180400 	tstne	r8, #0, 8
    2d40:	00000030 	andeq	r0, r0, r0, lsr r0
    2d44:	000a5d03 	andeq	r5, sl, r3, lsl #26
    2d48:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    2d4c:	00000058 	andeq	r0, r0, r8, asr r0
    2d50:	0e0c0107 	adfeqe	f0, f4, f7
    2d54:	3f010000 	svccc	0x00010000
    2d58:	00870108 	addeq	r0, r7, r8, lsl #2
	...
    2d64:	24350000 	ldrtcs	r0, [r5], #-0
    2d68:	3b010000 	blcc	42d70 <SYSTICK_CYCLES+0x19d31>
    2d6c:	08000001 	stmdaeq	r0, {r0}
    2d70:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
    2d74:	3b1b3f01 	blcc	6d2980 <__RAM_SIZE+0x5d2980>
    2d78:	59000001 	stmdbpl	r0, {r0}
    2d7c:	55000024 	strpl	r0, [r0, #-36]	; 0xffffffdc
    2d80:	08000024 	stmdaeq	r0, {r2, r5}
    2d84:	0000177b 	andeq	r1, r0, fp, ror r7
    2d88:	872a3f01 	strhi	r3, [sl, -r1, lsl #30]!
    2d8c:	7b000000 	blvc	2d94 <_Min_Stack_Size+0x1d94>
    2d90:	77000024 	strvc	r0, [r0, -r4, lsr #32]
    2d94:	09000024 	stmdbeq	r0, {r2, r5}
    2d98:	01006863 	tsteq	r0, r3, ror #16
    2d9c:	00ac0d40 	adceq	r0, ip, r0, asr #26
    2da0:	249f0000 	ldrcs	r0, [pc], #0	; 2da8 <_Min_Stack_Size+0x1da8>
    2da4:	24990000 	ldrcs	r0, [r9], #0
    2da8:	69090000 	stmdbvs	r9, {}	; <UNPREDICTABLE>
    2dac:	41010074 	tstmi	r1, r4, ror r0
    2db0:	0000870c 	andeq	r8, r0, ip, lsl #14
    2db4:	0024cd00 	eoreq	ip, r4, r0, lsl #26
    2db8:	0024c900 	eoreq	ip, r4, r0, lsl #18
    2dbc:	00000a00 	andeq	r0, r0, r0, lsl #20
    2dc0:	02440000 	subeq	r0, r4, #0
    2dc4:	06000000 	streq	r0, [r0], -r0
    2dc8:	0000ac04 	andeq	sl, r0, r4, lsl #24
    2dcc:	1e010b00 	vmlane.f64	d0, d1, d0
    2dd0:	0100000e 	tsteq	r0, lr
    2dd4:	0001063b 	andeq	r0, r1, fp, lsr r6
    2dd8:	00000000 	andeq	r0, r0, r0
    2ddc:	ec000000 	stc	0, cr0, [r0], {-0}
    2de0:	01000024 	tsteq	r0, r4, lsr #32
    2de4:	00000182 	andeq	r0, r0, r2, lsl #3
    2de8:	001cae08 	andseq	sl, ip, r8, lsl #28
    2dec:	1c3b0100 	ldfnes	f0, [fp], #-0
    2df0:	000000a6 	andeq	r0, r0, r6, lsr #1
    2df4:	00002510 	andeq	r2, r0, r0, lsl r5
    2df8:	0000250c 	andeq	r2, r0, ip, lsl #10
    2dfc:	0000000c 	andeq	r0, r0, ip
    2e00:	00019800 	andeq	r9, r1, r0, lsl #16
    2e04:	50010d00 	andpl	r0, r1, r0, lsl #26
    2e08:	5001f303 	andpl	pc, r1, r3, lsl #6
    2e0c:	010e0000 	mrseq	r0, (UNDEF: 14)
    2e10:	000006be 			; <UNDEFINED> instruction: 0x000006be
    2e14:	01063201 	tsteq	r6, r1, lsl #4
    2e18:	10001a94 	mulne	r0, r4, sl
    2e1c:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
    2e20:	01007d02 	tsteq	r0, r2, lsl #26
    2e24:	04a90107 	strteq	r0, [r9], #263	; 0x107
    2e28:	dd050000 	stcle	0, cr0, [r5, #-0]
    2e2c:	00790105 	rsbseq	r0, r9, r5, lsl #2
    2e30:	1a740000 	bne	1d02e38 <__RAM_SIZE+0x1c02e38>
    2e34:	1a921000 	bne	fe486e3c <__RAM_segment_used_end__+0xc6386e3c>
    2e38:	25311000 	ldrcs	r1, [r1, #-0]!
    2e3c:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    2e40:	08000001 	stmdaeq	r0, {r0}
    2e44:	00001cae 	andeq	r1, r0, lr, lsr #25
    2e48:	a6162801 	ldrge	r2, [r6], -r1, lsl #16
    2e4c:	55000000 	strpl	r0, [r0, #-0]
    2e50:	51000025 	tstpl	r0, r5, lsr #32
    2e54:	0f000025 	svceq	0x00000025
    2e58:	00001bb0 			; <UNDEFINED> instruction: 0x00001bb0
    2e5c:	79092901 	stmdbvc	r9, {r0, r8, fp, sp}
    2e60:	77000000 	strvc	r0, [r0, -r0]
    2e64:	73000025 	movwvc	r0, #37	; 0x25
    2e68:	0a000025 	beq	2f04 <_Min_Stack_Size+0x1f04>
    2e6c:	10001a80 	andne	r1, r0, r0, lsl #21
    2e70:	00000212 	andeq	r0, r0, r2, lsl r2
    2e74:	001a8e0c 	andseq	r8, sl, ip, lsl #28
    2e78:	00021210 	andeq	r1, r2, r0, lsl r2
    2e7c:	50010d00 	andpl	r0, r1, r0, lsl #26
    2e80:	00003a01 	andeq	r3, r0, r1, lsl #20
    2e84:	0e280110 	mcreq	1, 1, r0, cr8, cr0, {0}
    2e88:	23010000 	movwcs	r0, #4096	; 0x1000
    2e8c:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    2e98:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2e9c:	01110100 	tsteq	r1, r0, lsl #2
    2ea0:	00000be6 	andeq	r0, r0, r6, ror #23
    2ea4:	01051d01 	tsteq	r5, r1, lsl #26
    2ea8:	00000079 	andeq	r0, r0, r9, ror r0
    2eac:	10001a60 	andne	r1, r0, r0, ror #20
    2eb0:	10001a74 	andne	r1, r0, r4, ror sl
    2eb4:	01007d02 	tsteq	r0, r2, lsl #26
    2eb8:	00000244 	andeq	r0, r0, r4, asr #4
    2ebc:	00686312 	rsbeq	r6, r8, r2, lsl r3
    2ec0:	79121d01 	ldmdbvc	r2, {r0, r8, sl, fp, ip}
    2ec4:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2ec8:	96000025 	strls	r0, [r0], -r5, lsr #32
    2ecc:	00000025 	andeq	r0, r0, r5, lsr #32
    2ed0:	16010113 			; <UNDEFINED> instruction: 0x16010113
    2ed4:	1600000e 	strne	r0, [r0], -lr
    2ed8:	0500000e 	streq	r0, [r0, #-14]
    2edc:	710005d9 	ldrdvc	r0, [r0, -r9]
    2ee0:	02000008 	andeq	r0, r0, #8
    2ee4:	0007d100 	andeq	sp, r7, r0, lsl #2
    2ee8:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    2eec:	0c000000 	stceq	0, cr0, [r0], {-0}
    2ef0:	00000e56 	andeq	r0, r0, r6, asr lr
    2ef4:	00000641 	andeq	r0, r0, r1, asr #12
    2ef8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    2f04:	000019c4 	andeq	r1, r0, r4, asr #19
    2f08:	39070402 	stmdbcc	r7, {r1, sl}
    2f0c:	03000002 	movweq	r0, #2
    2f10:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2f14:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    2f18:	0004e805 	andeq	lr, r4, r5, lsl #16
    2f1c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2f20:	00000623 	andeq	r0, r0, r3, lsr #12
    2f24:	52060102 	andpl	r0, r6, #-2147483648	; 0x80000000
    2f28:	02000008 	andeq	r0, r0, #8
    2f2c:	08500801 	ldmdaeq	r0, {r0, fp}^
    2f30:	02020000 	andeq	r0, r2, #0
    2f34:	0006b405 	andeq	fp, r6, r5, lsl #8
    2f38:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2f3c:	0000091e 	andeq	r0, r0, lr, lsl r9
    2f40:	ed050402 	cfstrs	mvf0, [r5, #-8]
    2f44:	02000004 	andeq	r0, r0, #4
    2f48:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    2f4c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2f50:	00022f07 	andeq	r2, r2, r7, lsl #30
    2f54:	02040400 	andeq	r0, r4, #0, 8
    2f58:	08590801 	ldmdaeq	r9, {r0, fp}^
    2f5c:	df050000 	svcle	0x00050000
    2f60:	02000008 	andeq	r0, r0, #8
    2f64:	00783173 	rsbseq	r3, r8, r3, ror r1
    2f68:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    2f6c:	02000008 	andeq	r0, r0, #8
    2f70:	004c3174 	subeq	r3, ip, r4, ror r1
    2f74:	7f050000 	svcvc	0x00050000
    2f78:	02000007 	andeq	r0, r0, #7
    2f7c:	00293176 	eoreq	r3, r9, r6, ror r1
    2f80:	11050000 	mrsne	r0, (UNDEF: 5)
    2f84:	02000007 	andeq	r0, r0, #7
    2f88:	00683178 	rsbeq	r3, r8, r8, ror r1
    2f8c:	3b060000 	blcc	182f94 <__RAM_SIZE+0x82f94>
    2f90:	1c000005 	stcne	0, cr0, [r0], {5}
    2f94:	10018203 	andne	r8, r1, r3, lsl #4
    2f98:	0000012e 	andeq	r0, r0, lr, lsr #2
    2f9c:	00081207 	andeq	r1, r8, r7, lsl #4
    2fa0:	01860300 	orreq	r0, r6, r0, lsl #6
    2fa4:	0000a319 	andeq	sl, r0, r9, lsl r3
    2fa8:	00230200 	eoreq	r0, r3, r0, lsl #4
    2fac:	0003a007 	andeq	sl, r3, r7
    2fb0:	01870300 	orreq	r0, r7, r0, lsl #6
    2fb4:	0000a319 	andeq	sl, r0, r9, lsl r3
    2fb8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2fbc:	00043d07 	andeq	r3, r4, r7, lsl #26
    2fc0:	018a0300 	orreq	r0, sl, r0, lsl #6
    2fc4:	00013a1b 	andeq	r3, r1, fp, lsl sl
    2fc8:	08230200 	stmdaeq	r3!, {r9}
    2fcc:	0001f207 	andeq	pc, r1, r7, lsl #4
    2fd0:	018b0300 	orreq	r0, fp, r0, lsl #6
    2fd4:	0000a319 	andeq	sl, r0, r9, lsl r3
    2fd8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2fdc:	00095407 	andeq	r5, r9, r7, lsl #8
    2fe0:	01910300 	orrseq	r0, r1, r0, lsl #6
    2fe4:	0001401a 	andeq	r4, r1, sl, lsl r0
    2fe8:	10230200 	eorne	r0, r3, r0, lsl #4
    2fec:	00001b07 	andeq	r1, r0, r7, lsl #22
    2ff0:	01920300 	orrseq	r0, r2, r0, lsl #6
    2ff4:	0001401a 	andeq	r4, r1, sl, lsl r0
    2ff8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2ffc:	0005ee07 	andeq	lr, r5, r7, lsl #28
    3000:	01960300 	orrseq	r0, r6, r0, lsl #6
    3004:	0001461b 	andeq	r4, r1, fp, lsl r6
    3008:	18230200 	stmdane	r3!, {r9}
    300c:	3a010800 	bcc	45014 <SYSTICK_CYCLES+0x1bfd5>
    3010:	09000001 	stmdbeq	r0, {r0}
    3014:	000000a3 	andeq	r0, r0, r3, lsr #1
    3018:	2e040a00 	vmlacs.f32	s0, s8, s0
    301c:	0a000001 	beq	3028 <_Min_Stack_Size+0x2028>
    3020:	0000af04 	andeq	sl, r0, r4, lsl #30
    3024:	40040a00 	andmi	r0, r4, r0, lsl #20
    3028:	0b000001 	bleq	3034 <_Min_Stack_Size+0x2034>
    302c:	0000062f 	andeq	r0, r0, pc, lsr #12
    3030:	03019b03 	movweq	r9, #6915	; 0x1b03
    3034:	000000af 	andeq	r0, r0, pc, lsr #1
    3038:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    303c:	4b060000 	blmi	183044 <__RAM_SIZE+0x83044>
    3040:	d4000003 	strle	r0, [r0], #-3
    3044:	1001d603 	andne	sp, r1, r3, lsl #12
    3048:	00000473 	andeq	r0, r0, r3, ror r4
    304c:	00091107 	andeq	r1, r9, r7, lsl #2
    3050:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    3054:	0000a319 	andeq	sl, r0, r9, lsl r3
    3058:	00230200 	eoreq	r0, r3, r0, lsl #4
    305c:	00078407 	andeq	r8, r7, r7, lsl #8
    3060:	01de0300 	bicseq	r0, lr, r0, lsl #6
    3064:	0000a319 	andeq	sl, r0, r9, lsl r3
    3068:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    306c:	0001bc07 	andeq	fp, r1, r7, lsl #24
    3070:	01df0300 	bicseq	r0, pc, r0, lsl #6
    3074:	0000761a 	andeq	r7, r0, sl, lsl r6
    3078:	08230200 	stmdaeq	r3!, {r9}
    307c:	0008fb07 	andeq	pc, r8, r7, lsl #22
    3080:	01e00300 	mvneq	r0, r0, lsl #6
    3084:	0000761a 	andeq	r7, r0, sl, lsl r6
    3088:	0c230200 	sfmeq	f0, 4, [r3], #-0
    308c:	00041107 	andeq	r1, r4, r7, lsl #2
    3090:	01e10300 	mvneq	r0, r0, lsl #6
    3094:	0000761a 	andeq	r7, r0, sl, lsl r6
    3098:	10230200 	eorne	r0, r3, r0, lsl #4
    309c:	00093f07 	andeq	r3, r9, r7, lsl #30
    30a0:	01e20300 	mvneq	r0, r0, lsl #6
    30a4:	0000a319 	andeq	sl, r0, r9, lsl r3
    30a8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    30ac:	0021d107 	eoreq	sp, r1, r7, lsl #2
    30b0:	01e30300 	mvneq	r0, r0, lsl #6
    30b4:	0000a319 	andeq	sl, r0, r9, lsl r3
    30b8:	18230200 	stmdane	r3!, {r9}
    30bc:	00060a07 	andeq	r0, r6, r7, lsl #20
    30c0:	01e40300 	mvneq	r0, r0, lsl #6
    30c4:	0000a319 	andeq	sl, r0, r9, lsl r3
    30c8:	1c230200 	sfmne	f0, 4, [r3], #-0
    30cc:	00069f07 	andeq	r9, r6, r7, lsl #30
    30d0:	01e80300 	mvneq	r0, r0, lsl #6
    30d4:	0004731a 	andeq	r7, r4, sl, lsl r3
    30d8:	20230200 	eorcs	r0, r3, r0, lsl #4
    30dc:	00019907 	andeq	r9, r1, r7, lsl #18
    30e0:	01e90300 	mvneq	r0, r0, lsl #6
    30e4:	0004731a 	andeq	r7, r4, sl, lsl r3
    30e8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    30ec:	00059607 	andeq	r9, r5, r7, lsl #12
    30f0:	01f10300 	mvnseq	r0, r0, lsl #6
    30f4:	0001591a 	andeq	r5, r1, sl, lsl r9
    30f8:	28230200 	stmdacs	r3!, {r9}
    30fc:	0002d907 	andeq	sp, r2, r7, lsl #18
    3100:	01f20300 	mvnseq	r0, r0, lsl #6
    3104:	00009719 	andeq	r9, r0, r9, lsl r7
    3108:	2c230200 	sfmcs	f0, 4, [r3], #-0
    310c:	00024607 	andeq	r4, r2, r7, lsl #12
    3110:	01f30300 	mvnseq	r0, r0, lsl #6
    3114:	00009719 	andeq	r9, r0, r9, lsl r7
    3118:	30230200 	eorcc	r0, r3, r0, lsl #4
    311c:	00017307 	andeq	r7, r1, r7, lsl #6
    3120:	01f40300 	mvnseq	r0, r0, lsl #6
    3124:	00009719 	andeq	r9, r0, r9, lsl r7
    3128:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    312c:	00073007 	andeq	r3, r7, r7
    3130:	01f50300 	mvnseq	r0, r0, lsl #6
    3134:	00009719 	andeq	r9, r0, r9, lsl r7
    3138:	38230200 	stmdacc	r3!, {r9}
    313c:	0000eb07 	andeq	lr, r0, r7, lsl #22
    3140:	01f60300 	mvnseq	r0, r0, lsl #6
    3144:	00009719 	andeq	r9, r0, r9, lsl r7
    3148:	3c230200 	sfmcc	f0, 4, [r3], #-0
    314c:	00035c07 	andeq	r5, r3, r7, lsl #24
    3150:	01fb0300 	mvnseq	r0, r0, lsl #6
    3154:	00048a1b 	andeq	r8, r4, fp, lsl sl
    3158:	40230200 	eormi	r0, r3, r0, lsl #4
    315c:	00015207 	andeq	r5, r1, r7, lsl #4
    3160:	02030300 	andeq	r0, r3, #0, 6
    3164:	00013a1b 	andeq	r3, r1, fp, lsl sl
    3168:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    316c:	00010707 	andeq	r0, r1, r7, lsl #14
    3170:	02040300 	andeq	r0, r4, #0, 6
    3174:	0000a319 	andeq	sl, r0, r9, lsl r3
    3178:	48230200 	stmdami	r3!, {r9}
    317c:	00033b07 	andeq	r3, r3, r7, lsl #22
    3180:	02080300 	andeq	r0, r8, #0, 6
    3184:	00014c19 	andeq	r4, r1, r9, lsl ip
    3188:	4c230200 	sfmmi	f0, 4, [r3], #-0
    318c:	0002ec07 	andeq	lr, r2, r7, lsl #24
    3190:	020e0300 	andeq	r0, lr, #0, 6
    3194:	00048a1b 	andeq	r8, r4, fp, lsl sl
    3198:	68230200 	stmdavs	r3!, {r9}
    319c:	0005ce07 	andeq	ip, r5, r7, lsl #28
    31a0:	020f0300 	andeq	r0, pc, #0, 6
    31a4:	0000761a 	andeq	r7, r0, sl, lsl r6
    31a8:	6c230200 	sfmvs	f0, 4, [r3], #-0
    31ac:	00071707 	andeq	r1, r7, r7, lsl #14
    31b0:	02110300 	andseq	r0, r1, #0, 6
    31b4:	0004731a 	andeq	r7, r4, sl, lsl r3
    31b8:	70230200 	eorvc	r0, r3, r0, lsl #4
    31bc:	00021207 	andeq	r1, r2, r7, lsl #4
    31c0:	02120300 	andseq	r0, r2, #0, 6
    31c4:	0004731a 	andeq	r7, r4, sl, lsl r3
    31c8:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    31cc:	0006fa07 	andeq	pc, r6, r7, lsl #20
    31d0:	02130300 	andseq	r0, r3, #0, 6
    31d4:	0000a319 	andeq	sl, r0, r9, lsl r3
    31d8:	78230200 	stmdavc	r3!, {r9}
    31dc:	0003c607 	andeq	ip, r3, r7, lsl #12
    31e0:	02140300 	andseq	r0, r4, #0, 6
    31e4:	0000761a 	andeq	r7, r0, sl, lsl r6
    31e8:	7c230200 	sfmvc	f0, 4, [r3], #-0
    31ec:	00055407 	andeq	r5, r5, r7, lsl #8
    31f0:	02150300 	andseq	r0, r5, #0, 6
    31f4:	00009719 	andeq	r9, r0, r9, lsl r7
    31f8:	80230300 	eorhi	r0, r3, r0, lsl #6
    31fc:	03e80701 	mvneq	r0, #262144	; 0x40000
    3200:	16030000 	strne	r0, [r3], -r0
    3204:	00971902 	addseq	r1, r7, r2, lsl #18
    3208:	23030000 	movwcs	r0, #12288	; 0x3000
    320c:	e4070184 	str	r0, [r7], #-388	; 0xfffffe7c
    3210:	03000008 	movweq	r0, #8
    3214:	731a021f 	tstvc	sl, #-268435455	; 0xf0000001
    3218:	03000004 	movweq	r0, #4
    321c:	07018823 	streq	r8, [r1, -r3, lsr #16]
    3220:	000007d5 	ldrdeq	r0, [r0], -r5
    3224:	1a022003 	bne	8b238 <SYSTICK_CYCLES+0x621f9>
    3228:	00000473 	andeq	r0, r0, r3, ror r4
    322c:	018c2303 	orreq	r2, ip, r3, lsl #6
    3230:	0002c107 	andeq	ip, r2, r7, lsl #2
    3234:	022e0300 	eoreq	r0, lr, #0, 6
    3238:	00009719 	andeq	r9, r0, r9, lsl r7
    323c:	90230300 	eorls	r0, r3, r0, lsl #6
    3240:	02560701 	subseq	r0, r6, #262144	; 0x40000
    3244:	2f030000 	svccs	0x00030000
    3248:	00971902 	addseq	r1, r7, r2, lsl #18
    324c:	23030000 	movwcs	r0, #12288	; 0x3000
    3250:	20070194 	mulcs	r7, r4, r1
    3254:	03000003 	movweq	r0, #3
    3258:	97190230 			; <UNDEFINED> instruction: 0x97190230
    325c:	03000000 	movweq	r0, #0
    3260:	07019823 	streq	r9, [r1, -r3, lsr #16]
    3264:	00000277 	andeq	r0, r0, r7, ror r2
    3268:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    326c:	00000097 	muleq	r0, r7, r0
    3270:	019c2303 	orrseq	r2, ip, r3, lsl #6
    3274:	00000007 	andeq	r0, r0, r7
    3278:	02350300 	eorseq	r0, r5, #0, 6
    327c:	00056f1a 	andeq	r6, r5, sl, lsl pc
    3280:	a0230300 	eorge	r0, r3, r0, lsl #6
    3284:	1bb70701 	blne	fedc4e90 <__RAM_segment_used_end__+0xc6cc4e90>
    3288:	3a030000 	bcc	c3290 <SYSTICK_CYCLES+0x9a251>
    328c:	00a31902 	adceq	r1, r3, r2, lsl #18
    3290:	23030000 	movwcs	r0, #12288	; 0x3000
    3294:	770701a4 	strvc	r0, [r7, -r4, lsr #3]
    3298:	0300001c 	movweq	r0, #28
    329c:	a319023d 	tstge	r9, #-805306365	; 0xd0000003
    32a0:	03000000 	movweq	r0, #0
    32a4:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    32a8:	00001b30 	andeq	r1, r0, r0, lsr fp
    32ac:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    32b0:	000000a3 	andeq	r0, r0, r3, lsr #1
    32b4:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    32b8:	001d2e07 	andseq	r2, sp, r7, lsl #28
    32bc:	02450300 	subeq	r0, r5, #0, 6
    32c0:	0000a319 	andeq	sl, r0, r9, lsl r3
    32c4:	b0230300 	eorlt	r0, r3, r0, lsl #6
    32c8:	1c470701 	mcrrne	7, 0, r0, r7, cr1
    32cc:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    32d0:	00a31902 	adceq	r1, r3, r2, lsl #18
    32d4:	23030000 	movwcs	r0, #12288	; 0x3000
    32d8:	a80701b4 	stmdage	r7, {r2, r4, r5, r7, r8}
    32dc:	03000007 	movweq	r0, #7
    32e0:	731a024c 	tstvc	sl, #76, 4	; 0xc0000004
    32e4:	03000004 	movweq	r0, #4
    32e8:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    32ec:	00001d06 	andeq	r1, r0, r6, lsl #26
    32f0:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    32f4:	000000a3 	andeq	r0, r0, r3, lsr #1
    32f8:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    32fc:	001b0807 	andseq	r0, fp, r7, lsl #16
    3300:	02520300 	subseq	r0, r2, #0, 6
    3304:	0000a319 	andeq	sl, r0, r9, lsl r3
    3308:	c0230300 	eorgt	r0, r3, r0, lsl #6
    330c:	1a850701 	bne	fe144f18 <__RAM_segment_used_end__+0xc6044f18>
    3310:	55030000 	strpl	r0, [r3, #-0]
    3314:	00a31902 	adceq	r1, r3, r2, lsl #18
    3318:	23030000 	movwcs	r0, #12288	; 0x3000
    331c:	db0701c4 	blle	1c3a34 <__RAM_SIZE+0xc3a34>
    3320:	0300001b 	movweq	r0, #27
    3324:	a3190259 	tstge	r9, #-1879048187	; 0x90000005
    3328:	03000000 	movweq	r0, #0
    332c:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    3330:	000009a9 	andeq	r0, r0, r9, lsr #19
    3334:	1a025d03 	bne	9a748 <SYSTICK_CYCLES+0x71709>
    3338:	00000076 	andeq	r0, r0, r6, ror r0
    333c:	01cc2303 	biceq	r2, ip, r3, lsl #6
    3340:	00048107 	andeq	r8, r4, r7, lsl #2
    3344:	02780300 	rsbseq	r0, r8, #0, 6
    3348:	0000a319 	andeq	sl, r0, r9, lsl r3
    334c:	d0230300 	eorle	r0, r3, r0, lsl #6
    3350:	040a0001 	streq	r0, [sl], #-1
    3354:	0000015f 	andeq	r0, r0, pc, asr r1
    3358:	048a0108 	streq	r0, [sl], #264	; 0x108
    335c:	73090000 	movwvc	r0, #36864	; 0x9000
    3360:	09000004 	stmdbeq	r0, {r2}
    3364:	000000a3 	andeq	r0, r0, r3, lsr #1
    3368:	79040a00 	stmdbvc	r4, {r9, fp}
    336c:	06000004 	streq	r0, [r0], -r4
    3370:	00000798 	muleq	r0, r8, r7
    3374:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    3378:	00056f10 	andeq	r6, r5, r0, lsl pc
    337c:	018d0700 	orreq	r0, sp, r0, lsl #14
    3380:	82030000 	andhi	r0, r3, #0
    3384:	00a31903 	adceq	r1, r3, r3, lsl #18
    3388:	23020000 	movwcs	r0, #8192	; 0x2000
    338c:	087c0700 	ldmdaeq	ip!, {r8, r9, sl}^
    3390:	85030000 	strhi	r0, [r3, #-0]
    3394:	01591a03 	cmpeq	r9, r3, lsl #20
    3398:	23020000 	movwcs	r0, #8192	; 0x2000
    339c:	06e10704 	strbteq	r0, [r1], r4, lsl #14
    33a0:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    33a4:	00971903 	addseq	r1, r7, r3, lsl #18
    33a8:	23020000 	movwcs	r0, #8192	; 0x2000
    33ac:	04cb0708 	strbeq	r0, [fp], #1800	; 0x708
    33b0:	8c030000 	stchi	0, cr0, [r3], {-0}
    33b4:	066a1a03 	strbteq	r1, [sl], -r3, lsl #20
    33b8:	23020000 	movwcs	r0, #8192	; 0x2000
    33bc:	0162070c 	cmneq	r2, ip, lsl #14
    33c0:	90030000 	andls	r0, r3, r0
    33c4:	00971903 	addseq	r1, r7, r3, lsl #18
    33c8:	23020000 	movwcs	r0, #8192	; 0x2000
    33cc:	01210710 			; <UNDEFINED> instruction: 0x01210710
    33d0:	93030000 	movwls	r0, #12288	; 0x3000
    33d4:	00971903 	addseq	r1, r7, r3, lsl #18
    33d8:	23020000 	movwcs	r0, #8192	; 0x2000
    33dc:	08b20714 	ldmeq	r2!, {r2, r4, r8, r9, sl}
    33e0:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    33e4:	04731a03 	ldrbteq	r1, [r3], #-2563	; 0xfffff5fd
    33e8:	23020000 	movwcs	r0, #8192	; 0x2000
    33ec:	06c80718 			; <UNDEFINED> instruction: 0x06c80718
    33f0:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    33f4:	00971903 	addseq	r1, r7, r3, lsl #18
    33f8:	23020000 	movwcs	r0, #8192	; 0x2000
    33fc:	05b8071c 	ldreq	r0, [r8, #1820]!	; 0x71c
    3400:	9d030000 	stcls	0, cr0, [r3, #-0]
    3404:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 2a09 <_Min_Stack_Size+0x1a09>
    3408:	23020000 	movwcs	r0, #8192	; 0x2000
    340c:	06850720 	streq	r0, [r5], r0, lsr #14
    3410:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    3414:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 2a19 <_Min_Stack_Size+0x1a19>
    3418:	23020000 	movwcs	r0, #8192	; 0x2000
    341c:	01d00724 	bicseq	r0, r0, r4, lsr #14
    3420:	a2030000 	andge	r0, r3, #0
    3424:	00971903 	addseq	r1, r7, r3, lsl #18
    3428:	23020000 	movwcs	r0, #8192	; 0x2000
    342c:	09c50728 	stmibeq	r5, {r3, r5, r8, r9, sl}^
    3430:	a6030000 	strge	r0, [r3], -r0
    3434:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 2a39 <_Min_Stack_Size+0x1a39>
    3438:	23020000 	movwcs	r0, #8192	; 0x2000
    343c:	0425072c 	strteq	r0, [r5], #-1836	; 0xfffff8d4
    3440:	a7030000 	strge	r0, [r3, -r0]
    3444:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 2a49 <_Min_Stack_Size+0x1a49>
    3448:	23020000 	movwcs	r0, #8192	; 0x2000
    344c:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    3450:	00000490 	muleq	r0, r0, r4
    3454:	0008d40b 	andeq	sp, r8, fp, lsl #8
    3458:	02860300 	addeq	r0, r6, #0, 6
    345c:	00015f03 	andeq	r5, r1, r3, lsl #30
    3460:	10430600 	subne	r0, r3, r0, lsl #12
    3464:	03300000 	teqeq	r0, #0
    3468:	5110028b 	tstpl	r0, fp, lsl #5
    346c:	07000006 	streq	r0, [r0, -r6]
    3470:	00000e45 	andeq	r0, r0, r5, asr #28
    3474:	19028f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, pc}
    3478:	000000a3 	andeq	r0, r0, r3, lsr #1
    347c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    3480:	00000fd7 	ldrdeq	r0, [r0], -r7
    3484:	1a029203 	bne	a7c98 <SYSTICK_CYCLES+0x7ec59>
    3488:	00000159 	andeq	r0, r0, r9, asr r1
    348c:	07042302 	streq	r2, [r4, -r2, lsl #6]
    3490:	00000f79 	andeq	r0, r0, r9, ror pc
    3494:	19029503 	stmdbne	r2, {r0, r1, r8, sl, ip, pc}
    3498:	00000097 	muleq	r0, r7, r0
    349c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    34a0:	00000ece 	andeq	r0, r0, lr, asr #29
    34a4:	19029803 	stmdbne	r2, {r0, r1, fp, ip, pc}
    34a8:	00000097 	muleq	r0, r7, r0
    34ac:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    34b0:	00001017 	andeq	r1, r0, r7, lsl r0
    34b4:	1a029b03 	bne	aa0c8 <SYSTICK_CYCLES+0x81089>
    34b8:	00000651 	andeq	r0, r0, r1, asr r6
    34bc:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    34c0:	00000e31 	andeq	r0, r0, r1, lsr lr
    34c4:	1a029e03 	bne	aacd8 <SYSTICK_CYCLES+0x81c99>
    34c8:	00000651 	andeq	r0, r0, r1, asr r6
    34cc:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    34d0:	00000f2d 	andeq	r0, r0, sp, lsr #30
    34d4:	1902a103 	stmdbne	r2, {r0, r1, r8, sp, pc}
    34d8:	000000a3 	andeq	r0, r0, r3, lsr #1
    34dc:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    34e0:	00000f9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
    34e4:	1902a403 	stmdbne	r2, {r0, r1, sl, sp, pc}
    34e8:	00000097 	muleq	r0, r7, r0
    34ec:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    34f0:	00000efa 	strdeq	r0, [r0], -sl
    34f4:	1a02a903 	bne	ad908 <SYSTICK_CYCLES+0x848c9>
    34f8:	00000473 	andeq	r0, r0, r3, ror r4
    34fc:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    3500:	00000f5b 	andeq	r0, r0, fp, asr pc
    3504:	1902aa03 	stmdbne	r2, {r0, r1, r9, fp, sp, pc}
    3508:	00000097 	muleq	r0, r7, r0
    350c:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    3510:	00000f40 	andeq	r0, r0, r0, asr #30
    3514:	1a02ae03 	bne	aed28 <SYSTICK_CYCLES+0x85ce9>
    3518:	00000657 	andeq	r0, r0, r7, asr r6
    351c:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    3520:	00000fb8 			; <UNDEFINED> instruction: 0x00000fb8
    3524:	1a02af03 	bne	af138 <SYSTICK_CYCLES+0x860f9>
    3528:	00000657 	andeq	r0, r0, r7, asr r6
    352c:	002c2302 	eoreq	r2, ip, r2, lsl #6
    3530:	008b040a 	addeq	r0, fp, sl, lsl #8
    3534:	040a0000 	streq	r0, [sl], #-0
    3538:	00000582 	andeq	r0, r0, r2, lsl #11
    353c:	000f910b 	andeq	r9, pc, fp, lsl #2
    3540:	02c40300 	sbceq	r0, r4, #0, 6
    3544:	00058203 	andeq	r8, r5, r3, lsl #4
    3548:	75040a00 	strvc	r0, [r4, #-2560]	; 0xfffff600
    354c:	0a000005 	beq	3568 <_Min_Stack_Size+0x2568>
    3550:	00065d04 	andeq	r5, r6, r4, lsl #26
    3554:	74010c00 	strvc	r0, [r1], #-3072	; 0xfffff400
    3558:	01000010 	tsteq	r0, r0, lsl r0
    355c:	9701074a 	strls	r0, [r1, -sl, asr #14]
    3560:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    3564:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    3568:	ab10001b 	blge	4035dc <__RAM_SIZE+0x3035dc>
    356c:	01000025 	tsteq	r0, r5, lsr #32
    3570:	00000800 	andeq	r0, r0, r0, lsl #16
    3574:	000ff10d 	andeq	pc, pc, sp, lsl #2
    3578:	1f4a0100 	svcne	0x004a0100
    357c:	00000076 	andeq	r0, r0, r6, ror r0
    3580:	000025d5 	ldrdeq	r2, [r0], -r5
    3584:	000025cb 	andeq	r2, r0, fp, asr #11
    3588:	000ee20e 	andeq	lr, lr, lr, lsl #4
    358c:	014d0100 	mrseq	r0, (UNDEF: 93)
    3590:	00000097 	muleq	r0, r7, r0
    3594:	0000261b 	andeq	r2, r0, fp, lsl r6
    3598:	00002619 	andeq	r2, r0, r9, lsl r6
    359c:	000ef10e 	andeq	pc, lr, lr, lsl #2
    35a0:	164f0100 	strbne	r0, [pc], -r0, lsl #2
    35a4:	00000670 	andeq	r0, r0, r0, ror r6
    35a8:	00002634 	andeq	r2, r0, r4, lsr r6
    35ac:	0000262e 	andeq	r2, r0, lr, lsr #12
    35b0:	0019cf0e 	andseq	ip, r9, lr, lsl #30
    35b4:	16500100 	ldrbne	r0, [r0], -r0, lsl #2
    35b8:	0000066a 	andeq	r0, r0, sl, ror #12
    35bc:	00002663 	andeq	r2, r0, r3, ror #12
    35c0:	0000265d 	andeq	r2, r0, sp, asr r6
    35c4:	000ead0e 	andeq	sl, lr, lr, lsl #26
    35c8:	16510100 	ldrbne	r0, [r1], -r0, lsl #2
    35cc:	00000651 	andeq	r0, r0, r1, asr r6
    35d0:	0000269b 	muleq	r0, fp, r6
    35d4:	0000268d 	andeq	r2, r0, sp, lsl #13
    35d8:	000fea0e 	andeq	lr, pc, lr, lsl #20
    35dc:	17520100 	ldrbne	r0, [r2, -r0, lsl #2]
    35e0:	00000800 	andeq	r0, r0, r0, lsl #16
    35e4:	000026f9 	strdeq	r2, [r0], -r9
    35e8:	000026f7 	strdeq	r2, [r0], -r7
    35ec:	0010340e 	andseq	r3, r0, lr, lsl #8
    35f0:	17530100 	ldrbne	r0, [r3, -r0, lsl #2]
    35f4:	00000800 	andeq	r0, r0, r0, lsl #16
    35f8:	00002716 	andeq	r2, r0, r6, lsl r7
    35fc:	0000270c 	andeq	r2, r0, ip, lsl #14
    3600:	0018b20e 	andseq	fp, r8, lr, lsl #4
    3604:	15540100 	ldrbne	r0, [r4, #-256]	; 0xffffff00
    3608:	00000097 	muleq	r0, r7, r0
    360c:	00002764 	andeq	r2, r0, r4, ror #14
    3610:	0000275e 	andeq	r2, r0, lr, asr r7
    3614:	000ffb0e 	andeq	pc, pc, lr, lsl #22
    3618:	16550100 	ldrbne	r0, [r5], -r0, lsl #2
    361c:	0000066a 	andeq	r0, r0, sl, ror #12
    3620:	00002790 	muleq	r0, r0, r7
    3624:	0000278e 	andeq	r2, r0, lr, lsl #15
    3628:	0010070e 	andseq	r0, r0, lr, lsl #14
    362c:	16560100 	ldrbne	r0, [r6], -r0, lsl #2
    3630:	0000066a 	andeq	r0, r0, sl, ror #12
    3634:	000027a5 	andeq	r2, r0, r5, lsr #15
    3638:	000027a3 	andeq	r2, r0, r3, lsr #15
    363c:	0008060f 	andeq	r0, r8, pc, lsl #12
    3640:	001abc00 	andseq	fp, sl, r0, lsl #24
    3644:	1abc0a10 	bne	fef05e8c <__RAM_segment_used_end__+0xc6e05e8c>
    3648:	1ac21000 	bne	ff087650 <__RAM_segment_used_end__+0xc6f87650>
    364c:	5a011000 	bpl	47654 <SYSTICK_CYCLES+0x1e615>
    3650:	0007a805 	andeq	sl, r7, r5, lsl #16
    3654:	08191000 	ldmdaeq	r9, {ip}
    3658:	27ba0000 	ldrcs	r0, [sl, r0]!
    365c:	27b80000 	ldrcs	r0, [r8, r0]!
    3660:	44110000 	ldrmi	r0, [r1], #-0
    3664:	bc000008 	stclt	0, cr0, [r0], {8}
    3668:	0d10001a 	ldceq	0, cr0, [r0, #-104]	; 0xffffff98
    366c:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
    3670:	10001ac0 	andne	r1, r0, r0, asr #21
    3674:	13025602 	movwne	r5, #9730	; 0x2602
    3678:	00085710 	andeq	r5, r8, r0, lsl r7
    367c:	0027cf00 	eoreq	ip, r7, r0, lsl #30
    3680:	0027cd00 	eoreq	ip, r7, r0, lsl #26
    3684:	0f000000 	svceq	0x00000000
    3688:	00000827 	andeq	r0, r0, r7, lsr #16
    368c:	10001ae6 	andne	r1, r0, r6, ror #21
    3690:	001ae601 	andseq	lr, sl, r1, lsl #12
    3694:	001aea10 	andseq	lr, sl, r0, lsl sl
    3698:	09ab0110 	stmibeq	fp!, {r4, r8}
    369c:	000007cf 	andeq	r0, r0, pc, asr #15
    36a0:	00083612 	andeq	r3, r8, r2, lsl r6
    36a4:	0027e400 	eoreq	lr, r7, r0, lsl #8
    36a8:	0027e200 	eoreq	lr, r7, r0, lsl #4
    36ac:	270f0000 	strcs	r0, [pc, -r0]
    36b0:	08000008 	stmdaeq	r0, {r3}
    36b4:	0110001b 	tsteq	r0, fp, lsl r0
    36b8:	10001b08 	andne	r1, r0, r8, lsl #22
    36bc:	10001b0e 	andne	r1, r0, lr, lsl #22
    36c0:	f609c701 			; <UNDEFINED> instruction: 0xf609c701
    36c4:	12000007 	andne	r0, r0, #7
    36c8:	00000836 	andeq	r0, r0, r6, lsr r8
    36cc:	000027f9 	strdeq	r2, [r0], -r9
    36d0:	000027f7 	strdeq	r2, [r0], -r7
    36d4:	1ae61300 	bne	ff9882dc <__RAM_segment_used_end__+0xc78882dc>
    36d8:	08651000 	stmdaeq	r5!, {ip}^
    36dc:	0a000000 	beq	36e4 <_Min_Stack_Size+0x26e4>
    36e0:	00065104 	andeq	r5, r6, r4, lsl #2
    36e4:	0f181400 	svceq	0x00181400
    36e8:	52020000 	andpl	r0, r2, #0
    36ec:	97013702 	strls	r3, [r1, -r2, lsl #14]
    36f0:	03000000 	movweq	r0, #0
    36f4:	00000827 	andeq	r0, r0, r7, lsr #16
    36f8:	000ea115 	andeq	sl, lr, r5, lsl r1
    36fc:	02540200 	subseq	r0, r4, #0, 4
    3700:	00009706 	andeq	r9, r0, r6, lsl #14
    3704:	8d160000 	ldchi	0, cr0, [r6, #-0]
    3708:	0200000e 	andeq	r0, r0, #14
    370c:	01370249 	teqeq	r7, r9, asr #4
    3710:	00084403 	andeq	r4, r8, r3, lsl #8
    3714:	0ea11700 	cdpeq	7, 10, cr1, cr1, cr0, {0}
    3718:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    371c:	00975002 	addseq	r5, r7, r2
    3720:	14000000 	strne	r0, [r0], #-0
    3724:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    3728:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    372c:	00009701 	andeq	r9, r0, r1, lsl #14
    3730:	08650300 	stmdaeq	r5!, {r8, r9}^
    3734:	a5150000 	ldrge	r0, [r5, #-0]
    3738:	0200000e 	andeq	r0, r0, #14
    373c:	97060234 	smladxls	r6, r4, r2, r0
    3740:	00000000 	andeq	r0, r0, r0
    3744:	58010118 	stmdapl	r1, {r3, r4, r8}
    3748:	58000010 	stmdapl	r0, {r4}
    374c:	04000010 	streq	r0, [r0], #-16
    3750:	000d011e 	andeq	r0, sp, lr, lsl r1
    3754:	000009c0 	andeq	r0, r0, r0, asr #19
    3758:	094e0002 	stmdbeq	lr, {r1}^
    375c:	01040000 	mrseq	r0, (UNDEF: 4)
    3760:	0000003d 	andeq	r0, r0, sp, lsr r0
    3764:	0010860c 	andseq	r8, r0, ip, lsl #12
    3768:	00064100 	andeq	r4, r6, r0, lsl #2
    376c:	00022800 	andeq	r2, r2, r0, lsl #16
	...
    3778:	001bbd00 	andseq	fp, fp, r0, lsl #26
    377c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3780:	00000239 	andeq	r0, r0, r9, lsr r2
    3784:	69050403 	stmdbvs	r5, {r0, r1, sl}
    3788:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    378c:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    3790:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3794:	00062304 	andeq	r2, r6, r4, lsl #6
    3798:	06010200 	streq	r0, [r1], -r0, lsl #4
    379c:	00000852 	andeq	r0, r0, r2, asr r8
    37a0:	50080102 	andpl	r0, r8, r2, lsl #2
    37a4:	02000008 	andeq	r0, r0, #8
    37a8:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    37ac:	02020000 	andeq	r0, r2, #0
    37b0:	00091e07 	andeq	r1, r9, r7, lsl #28
    37b4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    37b8:	000004ed 	andeq	r0, r0, sp, ror #9
    37bc:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    37c0:	02000002 	andeq	r0, r0, #2
    37c4:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    37c8:	04040000 	streq	r0, [r4], #-0
    37cc:	59080102 	stmdbpl	r8, {r1, r8}
    37d0:	05000008 	streq	r0, [r0, #-8]
    37d4:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    37d8:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    37dc:	05000000 	streq	r0, [r0, #-0]
    37e0:	000008de 	ldrdeq	r0, [r0], -lr
    37e4:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    37e8:	05000000 	streq	r0, [r0, #-0]
    37ec:	0000077f 	andeq	r0, r0, pc, ror r7
    37f0:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    37f4:	06000000 	streq	r0, [r0], -r0
    37f8:	00000097 	muleq	r0, r7, r0
    37fc:	00071105 	andeq	r1, r7, r5, lsl #2
    3800:	31780200 	cmncc	r8, r0, lsl #4
    3804:	00000068 	andeq	r0, r0, r8, rrx
    3808:	00053b07 	andeq	r3, r5, r7, lsl #22
    380c:	82031c00 	andhi	r1, r3, #0, 24
    3810:	01331001 	teqeq	r3, r1
    3814:	12080000 	andne	r0, r8, #0
    3818:	03000008 	movweq	r0, #8
    381c:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
    3820:	02000000 	andeq	r0, r0, #0
    3824:	a0080023 	andge	r0, r8, r3, lsr #32
    3828:	03000003 	movweq	r0, #3
    382c:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
    3830:	02000000 	andeq	r0, r0, #0
    3834:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
    3838:	03000004 	movweq	r0, #4
    383c:	3f1b018a 	svccc	0x001b018a
    3840:	02000001 	andeq	r0, r0, #1
    3844:	f2080823 	vadd.i8	d0, d8, d19
    3848:	03000001 	movweq	r0, #1
    384c:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
    3850:	02000000 	andeq	r0, r0, #0
    3854:	54080c23 	strpl	r0, [r8], #-3107	; 0xfffff3dd
    3858:	03000009 	movweq	r0, #9
    385c:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
    3860:	02000001 	andeq	r0, r0, #1
    3864:	1b081023 	blne	2078f8 <__RAM_SIZE+0x1078f8>
    3868:	03000000 	movweq	r0, #0
    386c:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
    3870:	02000001 	andeq	r0, r0, #1
    3874:	ee081423 	cdp	4, 0, cr1, cr8, cr3, {1}
    3878:	03000005 	movweq	r0, #5
    387c:	4b1b0196 	blmi	6c3edc <__RAM_SIZE+0x5c3edc>
    3880:	02000001 	andeq	r0, r0, #1
    3884:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
    3888:	00013f01 	andeq	r3, r1, r1, lsl #30
    388c:	00a80a00 	adceq	r0, r8, r0, lsl #20
    3890:	0b000000 	bleq	3898 <_Min_Stack_Size+0x2898>
    3894:	00013304 	andeq	r3, r1, r4, lsl #6
    3898:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
    389c:	0b000000 	bleq	38a4 <_Min_Stack_Size+0x28a4>
    38a0:	00014504 	andeq	r4, r1, r4, lsl #10
    38a4:	062f0c00 	strteq	r0, [pc], -r0, lsl #24
    38a8:	9b030000 	blls	c38b0 <SYSTICK_CYCLES+0x9a871>
    38ac:	00b40301 	adcseq	r0, r4, r1, lsl #6
    38b0:	040b0000 	streq	r0, [fp], #-0
    38b4:	0000007f 	andeq	r0, r0, pc, ror r0
    38b8:	00034b07 	andeq	r4, r3, r7, lsl #22
    38bc:	d603d400 	strle	sp, [r3], -r0, lsl #8
    38c0:	04781001 	ldrbteq	r1, [r8], #-1
    38c4:	11080000 	mrsne	r0, (UNDEF: 8)
    38c8:	03000009 	movweq	r0, #9
    38cc:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
    38d0:	02000000 	andeq	r0, r0, #0
    38d4:	84080023 	strhi	r0, [r8], #-35	; 0xffffffdd
    38d8:	03000007 	movweq	r0, #7
    38dc:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
    38e0:	02000000 	andeq	r0, r0, #0
    38e4:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
    38e8:	03000001 	movweq	r0, #1
    38ec:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    38f0:	02000000 	andeq	r0, r0, #0
    38f4:	fb080823 	blx	20598a <__RAM_SIZE+0x10598a>
    38f8:	03000008 	movweq	r0, #8
    38fc:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    3900:	02000000 	andeq	r0, r0, #0
    3904:	11080c23 	tstne	r8, r3, lsr #24
    3908:	03000004 	movweq	r0, #4
    390c:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    3910:	02000000 	andeq	r0, r0, #0
    3914:	3f081023 	svccc	0x00081023
    3918:	03000009 	movweq	r0, #9
    391c:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
    3920:	02000000 	andeq	r0, r0, #0
    3924:	d1081423 	tstle	r8, r3, lsr #8
    3928:	03000021 	movweq	r0, #33	; 0x21
    392c:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
    3930:	02000000 	andeq	r0, r0, #0
    3934:	0a081823 	beq	2099c8 <__RAM_SIZE+0x1099c8>
    3938:	03000006 	movweq	r0, #6
    393c:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
    3940:	02000000 	andeq	r0, r0, #0
    3944:	9f081c23 	svcls	0x00081c23
    3948:	03000006 	movweq	r0, #6
    394c:	781a01e8 	ldmdavc	sl, {r3, r5, r6, r7, r8}
    3950:	02000004 	andeq	r0, r0, #4
    3954:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
    3958:	03000001 	movweq	r0, #1
    395c:	781a01e9 	ldmdavc	sl, {r0, r3, r5, r6, r7, r8}
    3960:	02000004 	andeq	r0, r0, #4
    3964:	96082423 	strls	r2, [r8], -r3, lsr #8
    3968:	03000005 	movweq	r0, #5
    396c:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
    3970:	02000001 	andeq	r0, r0, #1
    3974:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    3978:	03000002 	movweq	r0, #2
    397c:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    3980:	02000000 	andeq	r0, r0, #0
    3984:	46082c23 	strmi	r2, [r8], -r3, lsr #24
    3988:	03000002 	movweq	r0, #2
    398c:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    3990:	02000000 	andeq	r0, r0, #0
    3994:	73083023 	movwvc	r3, #32803	; 0x8023
    3998:	03000001 	movweq	r0, #1
    399c:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    39a0:	02000000 	andeq	r0, r0, #0
    39a4:	30083423 	andcc	r3, r8, r3, lsr #8
    39a8:	03000007 	movweq	r0, #7
    39ac:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    39b0:	02000000 	andeq	r0, r0, #0
    39b4:	eb083823 	bl	211a48 <__RAM_SIZE+0x111a48>
    39b8:	03000000 	movweq	r0, #0
    39bc:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    39c0:	02000000 	andeq	r0, r0, #0
    39c4:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
    39c8:	03000003 	movweq	r0, #3
    39cc:	8f1b01fb 	svchi	0x001b01fb
    39d0:	02000004 	andeq	r0, r0, #4
    39d4:	52084023 	andpl	r4, r8, #35	; 0x23
    39d8:	03000001 	movweq	r0, #1
    39dc:	3f1b0203 	svccc	0x001b0203
    39e0:	02000001 	andeq	r0, r0, #1
    39e4:	07084423 	streq	r4, [r8, -r3, lsr #8]
    39e8:	03000001 	movweq	r0, #1
    39ec:	a8190204 	ldmdage	r9, {r2, r9}
    39f0:	02000000 	andeq	r0, r0, #0
    39f4:	3b084823 	blcc	215a88 <__RAM_SIZE+0x115a88>
    39f8:	03000003 	movweq	r0, #3
    39fc:	51190208 	tstpl	r9, r8, lsl #4
    3a00:	02000001 	andeq	r0, r0, #1
    3a04:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
    3a08:	03000002 	movweq	r0, #2
    3a0c:	8f1b020e 	svchi	0x001b020e
    3a10:	02000004 	andeq	r0, r0, #4
    3a14:	ce086823 	cdpgt	8, 0, cr6, cr8, cr3, {1}
    3a18:	03000005 	movweq	r0, #5
    3a1c:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    3a20:	02000000 	andeq	r0, r0, #0
    3a24:	17086c23 	strne	r6, [r8, -r3, lsr #24]
    3a28:	03000007 	movweq	r0, #7
    3a2c:	781a0211 	ldmdavc	sl, {r0, r4, r9}
    3a30:	02000004 	andeq	r0, r0, #4
    3a34:	12087023 	andne	r7, r8, #35	; 0x23
    3a38:	03000002 	movweq	r0, #2
    3a3c:	781a0212 	ldmdavc	sl, {r1, r4, r9}
    3a40:	02000004 	andeq	r0, r0, #4
    3a44:	fa087423 	blx	220ad8 <__RAM_SIZE+0x120ad8>
    3a48:	03000006 	movweq	r0, #6
    3a4c:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
    3a50:	02000000 	andeq	r0, r0, #0
    3a54:	c6087823 	strgt	r7, [r8], -r3, lsr #16
    3a58:	03000003 	movweq	r0, #3
    3a5c:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    3a60:	02000000 	andeq	r0, r0, #0
    3a64:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
    3a68:	03000005 	movweq	r0, #5
    3a6c:	97190215 			; <UNDEFINED> instruction: 0x97190215
    3a70:	03000000 	movweq	r0, #0
    3a74:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    3a78:	000003e8 	andeq	r0, r0, r8, ror #7
    3a7c:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    3a80:	00000097 	muleq	r0, r7, r0
    3a84:	01842303 	orreq	r2, r4, r3, lsl #6
    3a88:	0008e408 	andeq	lr, r8, r8, lsl #8
    3a8c:	021f0300 	andseq	r0, pc, #0, 6
    3a90:	0004781a 	andeq	r7, r4, sl, lsl r8
    3a94:	88230300 	stmdahi	r3!, {r8, r9}
    3a98:	07d50801 	ldrbeq	r0, [r5, r1, lsl #16]
    3a9c:	20030000 	andcs	r0, r3, r0
    3aa0:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    3aa4:	23030000 	movwcs	r0, #12288	; 0x3000
    3aa8:	c108018c 	smlabbgt	r8, ip, r1, r0
    3aac:	03000002 	movweq	r0, #2
    3ab0:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    3ab4:	03000000 	movweq	r0, #0
    3ab8:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    3abc:	00000256 	andeq	r0, r0, r6, asr r2
    3ac0:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    3ac4:	00000097 	muleq	r0, r7, r0
    3ac8:	01942303 	orrseq	r2, r4, r3, lsl #6
    3acc:	00032008 	andeq	r2, r3, r8
    3ad0:	02300300 	eorseq	r0, r0, #0, 6
    3ad4:	00009719 	andeq	r9, r0, r9, lsl r7
    3ad8:	98230300 	stmdals	r3!, {r8, r9}
    3adc:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
    3ae0:	33030000 	movwcc	r0, #12288	; 0x3000
    3ae4:	00971902 	addseq	r1, r7, r2, lsl #18
    3ae8:	23030000 	movwcs	r0, #12288	; 0x3000
    3aec:	0008019c 	muleq	r8, ip, r1
    3af0:	03000000 	movweq	r0, #0
    3af4:	741a0235 	ldrvc	r0, [sl], #-565	; 0xfffffdcb
    3af8:	03000005 	movweq	r0, #5
    3afc:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    3b00:	00001bb7 			; <UNDEFINED> instruction: 0x00001bb7
    3b04:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    3b08:	000000a8 	andeq	r0, r0, r8, lsr #1
    3b0c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    3b10:	001c7708 	andseq	r7, ip, r8, lsl #14
    3b14:	023d0300 	eorseq	r0, sp, #0, 6
    3b18:	0000a819 	andeq	sl, r0, r9, lsl r8
    3b1c:	a8230300 	stmdage	r3!, {r8, r9}
    3b20:	1b300801 	blne	c05b2c <__RAM_SIZE+0xb05b2c>
    3b24:	41030000 	mrsmi	r0, (UNDEF: 3)
    3b28:	00a81902 	adceq	r1, r8, r2, lsl #18
    3b2c:	23030000 	movwcs	r0, #12288	; 0x3000
    3b30:	2e0801ac 	adfcs<illegal precision>p	f0, f0, #4.0
    3b34:	0300001d 	movweq	r0, #29
    3b38:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
    3b3c:	03000000 	movweq	r0, #0
    3b40:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    3b44:	00001c47 	andeq	r1, r0, r7, asr #24
    3b48:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    3b4c:	000000a8 	andeq	r0, r0, r8, lsr #1
    3b50:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    3b54:	0007a808 	andeq	sl, r7, r8, lsl #16
    3b58:	024c0300 	subeq	r0, ip, #0, 6
    3b5c:	0004781a 	andeq	r7, r4, sl, lsl r8
    3b60:	b8230300 	stmdalt	r3!, {r8, r9}
    3b64:	1d060801 	stcne	8, cr0, [r6, #-4]
    3b68:	4f030000 	svcmi	0x00030000
    3b6c:	00a81902 	adceq	r1, r8, r2, lsl #18
    3b70:	23030000 	movwcs	r0, #12288	; 0x3000
    3b74:	080801bc 	stmdaeq	r8, {r2, r3, r4, r5, r7, r8}
    3b78:	0300001b 	movweq	r0, #27
    3b7c:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
    3b80:	03000000 	movweq	r0, #0
    3b84:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    3b88:	00001a85 	andeq	r1, r0, r5, lsl #21
    3b8c:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    3b90:	000000a8 	andeq	r0, r0, r8, lsr #1
    3b94:	01c42303 	biceq	r2, r4, r3, lsl #6
    3b98:	001bdb08 	andseq	sp, fp, r8, lsl #22
    3b9c:	02590300 	subseq	r0, r9, #0, 6
    3ba0:	0000a819 	andeq	sl, r0, r9, lsl r8
    3ba4:	c8230300 	stmdagt	r3!, {r8, r9}
    3ba8:	09a90801 	stmibeq	r9!, {r0, fp}
    3bac:	5d030000 	stcpl	0, cr0, [r3, #-0]
    3bb0:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    3bb4:	23030000 	movwcs	r0, #12288	; 0x3000
    3bb8:	810801cc 	smlabthi	r8, ip, r1, r0
    3bbc:	03000004 	movweq	r0, #4
    3bc0:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
    3bc4:	03000000 	movweq	r0, #0
    3bc8:	0001d023 	andeq	sp, r1, r3, lsr #32
    3bcc:	0164040b 	cmneq	r4, fp, lsl #8
    3bd0:	01090000 	mrseq	r0, (UNDEF: 9)
    3bd4:	0000048f 	andeq	r0, r0, pc, lsl #9
    3bd8:	0004780a 	andeq	r7, r4, sl, lsl #16
    3bdc:	00a80a00 	adceq	r0, r8, r0, lsl #20
    3be0:	0b000000 	bleq	3be8 <_Min_Stack_Size+0x2be8>
    3be4:	00047e04 	andeq	r7, r4, r4, lsl #28
    3be8:	07980700 	ldreq	r0, [r8, r0, lsl #14]
    3bec:	03340000 	teqeq	r4, #0
    3bf0:	7410037e 	ldrvc	r0, [r0], #-894	; 0xfffffc82
    3bf4:	08000005 	stmdaeq	r0, {r0, r2}
    3bf8:	0000018d 	andeq	r0, r0, sp, lsl #3
    3bfc:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    3c00:	000000a8 	andeq	r0, r0, r8, lsr #1
    3c04:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3c08:	0000087c 	andeq	r0, r0, ip, ror r8
    3c0c:	1a038503 	bne	e5020 <SYSTICK_CYCLES+0xbbfe1>
    3c10:	0000015e 	andeq	r0, r0, lr, asr r1
    3c14:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    3c18:	000006e1 	andeq	r0, r0, r1, ror #13
    3c1c:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    3c20:	00000097 	muleq	r0, r7, r0
    3c24:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    3c28:	000004cb 	andeq	r0, r0, fp, asr #9
    3c2c:	1a038c03 	bne	e6c40 <SYSTICK_CYCLES+0xbdc01>
    3c30:	0000067f 	andeq	r0, r0, pc, ror r6
    3c34:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    3c38:	00000162 	andeq	r0, r0, r2, ror #2
    3c3c:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    3c40:	00000097 	muleq	r0, r7, r0
    3c44:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    3c48:	00000121 	andeq	r0, r0, r1, lsr #2
    3c4c:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    3c50:	00000097 	muleq	r0, r7, r0
    3c54:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    3c58:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    3c5c:	1a039803 	bne	e9c70 <SYSTICK_CYCLES+0xc0c31>
    3c60:	00000478 	andeq	r0, r0, r8, ror r4
    3c64:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    3c68:	000006c8 	andeq	r0, r0, r8, asr #13
    3c6c:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    3c70:	00000097 	muleq	r0, r7, r0
    3c74:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    3c78:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    3c7c:	1a039d03 	bne	eb090 <SYSTICK_CYCLES+0xc2051>
    3c80:	00000574 	andeq	r0, r0, r4, ror r5
    3c84:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    3c88:	00000685 	andeq	r0, r0, r5, lsl #13
    3c8c:	1a039e03 	bne	eb4a0 <SYSTICK_CYCLES+0xc2461>
    3c90:	00000574 	andeq	r0, r0, r4, ror r5
    3c94:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    3c98:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3c9c:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    3ca0:	00000097 	muleq	r0, r7, r0
    3ca4:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    3ca8:	000009c5 	andeq	r0, r0, r5, asr #19
    3cac:	1a03a603 	bne	ed4c0 <SYSTICK_CYCLES+0xc4481>
    3cb0:	00000574 	andeq	r0, r0, r4, ror r5
    3cb4:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    3cb8:	00000425 	andeq	r0, r0, r5, lsr #8
    3cbc:	1a03a703 	bne	ed8d0 <SYSTICK_CYCLES+0xc4891>
    3cc0:	00000574 	andeq	r0, r0, r4, ror r5
    3cc4:	00302302 	eorseq	r2, r0, r2, lsl #6
    3cc8:	0495040b 	ldreq	r0, [r5], #1035	; 0x40b
    3ccc:	d40c0000 	strle	r0, [ip], #-0
    3cd0:	03000008 	movweq	r0, #8
    3cd4:	64030286 	strvs	r0, [r3], #-646	; 0xfffffd7a
    3cd8:	0b000001 	bleq	3ce4 <_Min_Stack_Size+0x2ce4>
    3cdc:	00008b04 	andeq	r8, r0, r4, lsl #22
    3ce0:	04600700 	strbteq	r0, [r0], #-1792	; 0xfffff900
    3ce4:	03340000 	teqeq	r4, #0
    3ce8:	6c1002d9 	lfmvs	f0, 4, [r0], {217}	; 0xd9
    3cec:	08000006 	stmdaeq	r0, {r1, r2}
    3cf0:	00000401 	andeq	r0, r0, r1, lsl #8
    3cf4:	1902dd03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, lr, pc}
    3cf8:	000000a8 	andeq	r0, r0, r8, lsr #1
    3cfc:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3d00:	00000374 	andeq	r0, r0, r4, ror r3
    3d04:	1a02e003 	bne	bbd18 <SYSTICK_CYCLES+0x92cd9>
    3d08:	0000015e 	andeq	r0, r0, lr, asr r1
    3d0c:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    3d10:	00000755 	andeq	r0, r0, r5, asr r7
    3d14:	1902e303 	stmdbne	r2, {r0, r1, r8, r9, sp, lr, pc}
    3d18:	000000a8 	andeq	r0, r0, r8, lsr #1
    3d1c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    3d20:	0000089b 	muleq	r0, fp, r8
    3d24:	1902e603 	stmdbne	r2, {r0, r1, r9, sl, sp, lr, pc}
    3d28:	00000097 	muleq	r0, r7, r0
    3d2c:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    3d30:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3d34:	1a02e903 	bne	be148 <SYSTICK_CYCLES+0x95109>
    3d38:	00000587 	andeq	r0, r0, r7, lsl #11
    3d3c:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    3d40:	00001107 	andeq	r1, r0, r7, lsl #2
    3d44:	1a02ed03 	bne	bf158 <SYSTICK_CYCLES+0x96119>
    3d48:	00000587 	andeq	r0, r0, r7, lsl #11
    3d4c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    3d50:	00000528 	andeq	r0, r0, r8, lsr #10
    3d54:	1a02f003 	bne	bfd68 <SYSTICK_CYCLES+0x96d29>
    3d58:	00000587 	andeq	r0, r0, r7, lsl #11
    3d5c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    3d60:	00000306 	andeq	r0, r0, r6, lsl #6
    3d64:	1902f303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp, lr, pc}
    3d68:	000000a8 	andeq	r0, r0, r8, lsr #1
    3d6c:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    3d70:	00000972 	andeq	r0, r0, r2, ror r9
    3d74:	1a02f903 	bne	c2188 <SYSTICK_CYCLES+0x99149>
    3d78:	00000478 	andeq	r0, r0, r8, ror r4
    3d7c:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    3d80:	000004ae 	andeq	r0, r0, lr, lsr #9
    3d84:	1a02fe03 	bne	c3598 <SYSTICK_CYCLES+0x9a559>
    3d88:	00000478 	andeq	r0, r0, r8, ror r4
    3d8c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    3d90:	0000050b 	andeq	r0, r0, fp, lsl #10
    3d94:	1902ff03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, ip, sp, lr, pc}
    3d98:	00000097 	muleq	r0, r7, r0
    3d9c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    3da0:	000002a7 	andeq	r0, r0, r7, lsr #5
    3da4:	1a030303 	bne	c49b8 <SYSTICK_CYCLES+0x9b979>
    3da8:	0000066c 	andeq	r0, r0, ip, ror #12
    3dac:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    3db0:	0000085e 	andeq	r0, r0, lr, asr r8
    3db4:	1a030403 	bne	c4dc8 <SYSTICK_CYCLES+0x9bd89>
    3db8:	0000066c 	andeq	r0, r0, ip, ror #12
    3dbc:	00302302 	eorseq	r2, r0, r2, lsl #6
    3dc0:	058d040b 	streq	r0, [sp, #1035]	; 0x40b
    3dc4:	740c0000 	strvc	r0, [ip], #-0
    3dc8:	03000004 	movweq	r0, #4
    3dcc:	8d030323 	stchi	3, cr0, [r3, #-140]	; 0xffffff74
    3dd0:	0b000005 	bleq	3dec <_Min_Stack_Size+0x2dec>
    3dd4:	00057a04 	andeq	r7, r5, r4, lsl #20
    3dd8:	111b0d00 	tstne	fp, r0, lsl #26
    3ddc:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    3de0:	067f2101 	ldrbteq	r2, [pc], -r1, lsl #2
    3de4:	01010000 	mrseq	r0, (UNDEF: 1)
    3de8:	0011320d 	andseq	r3, r1, sp, lsl #4
    3dec:	018e0400 	orreq	r0, lr, r0, lsl #8
    3df0:	0000a321 	andeq	sl, r0, r1, lsr #6
    3df4:	0b010100 	bleq	441fc <SYSTICK_CYCLES+0x1b1bd>
    3df8:	00067204 	andeq	r7, r6, r4, lsl #4
    3dfc:	4d010e00 	stcmi	14, cr0, [r1, #-0]
    3e00:	01000011 	tsteq	r0, r1, lsl r0
    3e04:	97010751 	smlsdls	r1, r1, r7, r0
    3e08:	10000000 	andne	r0, r0, r0
    3e0c:	bc10001b 	ldclt	0, cr0, [r0], {27}
    3e10:	0c10001b 	ldceq	0, cr0, [r0], {27}
    3e14:	01000028 	tsteq	r0, r8, lsr #32
    3e18:	00000941 	andeq	r0, r0, r1, asr #18
    3e1c:	000ef10f 	andeq	pc, lr, pc, lsl #2
    3e20:	27510100 	ldrbcs	r0, [r1, -r0, lsl #2]
    3e24:	000006a3 	andeq	r0, r0, r3, lsr #13
    3e28:	00002830 	andeq	r2, r0, r0, lsr r8
    3e2c:	0000282c 	andeq	r2, r0, ip, lsr #16
    3e30:	0010e60f 	andseq	lr, r0, pc, lsl #12
    3e34:	38510100 	ldmdacc	r1, {r8}^
    3e38:	00000941 	andeq	r0, r0, r1, asr #18
    3e3c:	00002852 	andeq	r2, r0, r2, asr r8
    3e40:	0000284e 	andeq	r2, r0, lr, asr #16
    3e44:	0010da0f 	andseq	sp, r0, pc, lsl #20
    3e48:	4a510100 	bmi	1444250 <__RAM_SIZE+0x1344250>
    3e4c:	000000a8 	andeq	r0, r0, r8, lsr #1
    3e50:	00002876 	andeq	r2, r0, r6, ror r8
    3e54:	00002870 	andeq	r2, r0, r0, ror r8
    3e58:	0010fa0f 	andseq	pc, r0, pc, lsl #20
    3e5c:	5e510100 	rdfpls	f0, f1, f0
    3e60:	000000a8 	andeq	r0, r0, r8, lsr #1
    3e64:	000028a5 	andeq	r2, r0, r5, lsr #17
    3e68:	000028a1 	andeq	r2, r0, r1, lsr #17
    3e6c:	000ee210 	andeq	lr, lr, r0, lsl r2
    3e70:	01540100 	cmpeq	r4, r0, lsl #2
    3e74:	00000097 	muleq	r0, r7, r0
    3e78:	000028c7 	andeq	r2, r0, r7, asr #17
    3e7c:	000028c3 	andeq	r2, r0, r3, asr #17
    3e80:	0003fa10 	andeq	pc, r3, r0, lsl sl	; <UNPREDICTABLE>
    3e84:	1d560100 	ldfnee	f0, [r6, #-0]
    3e88:	00000097 	muleq	r0, r7, r0
    3e8c:	000028ed 	andeq	r2, r0, sp, ror #17
    3e90:	000028e5 	andeq	r2, r0, r5, ror #17
    3e94:	0019cf10 	andseq	ip, r9, r0, lsl pc
    3e98:	1e570100 	rdfnes	f0, f7, f0
    3e9c:	0000067f 	andeq	r0, r0, pc, ror r6
    3ea0:	00002926 	andeq	r2, r0, r6, lsr #18
    3ea4:	00002924 	andeq	r2, r0, r4, lsr #18
    3ea8:	000ead10 	andeq	sl, lr, r0, lsl sp
    3eac:	1e580100 	rdfnee	f0, f0, f0
    3eb0:	00000587 	andeq	r0, r0, r7, lsl #11
    3eb4:	00002945 	andeq	r2, r0, r5, asr #18
    3eb8:	00002939 	andeq	r2, r0, r9, lsr r9
    3ebc:	0018b210 	andseq	fp, r8, r0, lsl r2
    3ec0:	1d590100 	ldfnee	f0, [r9, #-0]
    3ec4:	00000097 	muleq	r0, r7, r0
    3ec8:	00002997 	muleq	r0, r7, r9
    3ecc:	00002991 	muleq	r0, r1, r9
    3ed0:	000ffb10 	andeq	pc, pc, r0, lsl fp	; <UNPREDICTABLE>
    3ed4:	1e5a0100 	rdfnee	f0, f2, f0
    3ed8:	0000067f 	andeq	r0, r0, pc, ror r6
    3edc:	000029c4 	andeq	r2, r0, r4, asr #19
    3ee0:	000029c2 	andeq	r2, r0, r2, asr #19
    3ee4:	00100710 	andseq	r0, r0, r0, lsl r7
    3ee8:	1e5b0100 	rdfnee	f0, f3, f0
    3eec:	0000067f 	andeq	r0, r0, pc, ror r6
    3ef0:	000029d9 	ldrdeq	r2, [r0], -r9
    3ef4:	000029d7 	ldrdeq	r2, [r0], -r7
    3ef8:	0010f110 	andseq	pc, r0, r0, lsl r1	; <UNPREDICTABLE>
    3efc:	1d5c0100 	ldfnee	f0, [ip, #-0]
    3f00:	00000097 	muleq	r0, r7, r0
    3f04:	000029ee 	andeq	r2, r0, lr, ror #19
    3f08:	000029ec 	andeq	r2, r0, ip, ror #19
    3f0c:	00094711 	andeq	r4, r9, r1, lsl r7
    3f10:	001b2000 	andseq	r2, fp, r0
    3f14:	1b200110 	blne	80435c <__RAM_SIZE+0x70435c>
    3f18:	1b261000 	blne	987f20 <__RAM_SIZE+0x887f20>
    3f1c:	6d011000 	stcvs	0, cr1, [r1, #-0]
    3f20:	00080305 	andeq	r0, r8, r5, lsl #6
    3f24:	095a1200 	ldmdbeq	sl, {r9, ip}^
    3f28:	2a040000 	bcs	103f30 <__RAM_SIZE+0x3f30>
    3f2c:	2a020000 	bcs	83f34 <SYSTICK_CYCLES+0x5aef5>
    3f30:	85130000 	ldrhi	r0, [r3, #-0]
    3f34:	20000009 	andcs	r0, r0, r9
    3f38:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    3f3c:	10001b20 	andne	r1, r0, r0, lsr #22
    3f40:	10001b24 	andne	r1, r0, r4, lsr #22
    3f44:	13025602 	movwne	r5, #9730	; 0x2602
    3f48:	00099812 	andeq	r9, r9, r2, lsl r8
    3f4c:	002a1900 	eoreq	r1, sl, r0, lsl #18
    3f50:	002a1700 	eoreq	r1, sl, r0, lsl #14
    3f54:	11000000 	mrsne	r0, (UNDEF: 0)
    3f58:	00000968 	andeq	r0, r0, r8, ror #18
    3f5c:	10001b2c 	andne	r1, r0, ip, lsr #22
    3f60:	001b2c01 	andseq	r2, fp, r1, lsl #24
    3f64:	001b3010 	andseq	r3, fp, r0, lsl r0
    3f68:	09a80110 	stmibeq	r8!, {r4, r8}
    3f6c:	0000082a 	andeq	r0, r0, sl, lsr #16
    3f70:	00097714 	andeq	r7, r9, r4, lsl r7
    3f74:	002a2e00 	eoreq	r2, sl, r0, lsl #28
    3f78:	002a2c00 	eoreq	r2, sl, r0, lsl #24
    3f7c:	47110000 	ldrmi	r0, [r1, -r0]
    3f80:	38000009 	stmdacc	r0, {r0, r3}
    3f84:	0110001b 	tsteq	r0, fp, lsl r0
    3f88:	10001b38 	andne	r1, r0, r8, lsr fp
    3f8c:	10001b3e 	andne	r1, r0, lr, lsr fp
    3f90:	7509b201 	strvc	fp, [r9, #-513]	; 0xfffffdff
    3f94:	12000008 	andne	r0, r0, #8
    3f98:	0000095a 	andeq	r0, r0, sl, asr r9
    3f9c:	00002a43 	andeq	r2, r0, r3, asr #20
    3fa0:	00002a41 	andeq	r2, r0, r1, asr #20
    3fa4:	00098513 	andeq	r8, r9, r3, lsl r5
    3fa8:	001b3800 	andseq	r3, fp, r0, lsl #16
    3fac:	1b380410 	blne	e04ff4 <__RAM_SIZE+0xd04ff4>
    3fb0:	1b3c1000 	blne	f07fb8 <__RAM_SIZE+0xe07fb8>
    3fb4:	56021000 	strpl	r1, [r2], -r0
    3fb8:	98121302 	ldmdals	r2, {r1, r8, r9, ip}
    3fbc:	58000009 	stmdapl	r0, {r0, r3}
    3fc0:	5600002a 	strpl	r0, [r0], -sl, lsr #32
    3fc4:	0000002a 	andeq	r0, r0, sl, lsr #32
    3fc8:	09681100 	stmdbeq	r8!, {r8, ip}^
    3fcc:	1b4c0000 	blne	1303fd4 <__RAM_SIZE+0x1203fd4>
    3fd0:	4c011000 	stcmi	0, cr1, [r1], {-0}
    3fd4:	5010001b 	andspl	r0, r0, fp, lsl r0
    3fd8:	0110001b 	tsteq	r0, fp, lsl r0
    3fdc:	089c09f3 	ldmeq	ip, {r0, r1, r4, r5, r6, r7, r8, fp}
    3fe0:	77140000 	ldrvc	r0, [r4, -r0]
    3fe4:	6d000009 	stcvs	0, cr0, [r0, #-36]	; 0xffffffdc
    3fe8:	6b00002a 	blvs	4098 <_Min_Stack_Size+0x3098>
    3fec:	0000002a 	andeq	r0, r0, sl, lsr #32
    3ff0:	00096815 	andeq	r6, r9, r5, lsl r8
    3ff4:	001b8800 	andseq	r8, fp, r0, lsl #16
    3ff8:	1b880110 	blne	fe204440 <__RAM_segment_used_end__+0xc6104440>
    3ffc:	1b8c1000 	blne	fe308004 <__RAM_segment_used_end__+0xc6208004>
    4000:	52011000 	andpl	r1, r1, #0
    4004:	08c41101 	stmiaeq	r4, {r0, r8, ip}^
    4008:	77140000 	ldrvc	r0, [r4, -r0]
    400c:	82000009 	andhi	r0, r0, #9
    4010:	8000002a 	andhi	r0, r0, sl, lsr #32
    4014:	0000002a 	andeq	r0, r0, sl, lsr #32
    4018:	00096816 	andeq	r6, r9, r6, lsl r8
    401c:	001b9200 	andseq	r9, fp, r0, lsl #4
    4020:	02100210 	andseq	r0, r0, #16, 4
    4024:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    4028:	08e81101 	stmiaeq	r8!, {r0, r8, ip}^
    402c:	77140000 	ldrvc	r0, [r4, -r0]
    4030:	97000009 	strls	r0, [r0, -r9]
    4034:	9500002a 	strls	r0, [r0, #-42]	; 0xffffffd6
    4038:	0000002a 	andeq	r0, r0, sl, lsr #32
    403c:	00096815 	andeq	r6, r9, r5, lsl r8
    4040:	001ba800 	andseq	sl, fp, r0, lsl #16
    4044:	1ba80110 	blne	fea0448c <__RAM_segment_used_end__+0xc690448c>
    4048:	1bac1000 	blne	feb08050 <__RAM_segment_used_end__+0xc6a08050>
    404c:	90011000 	andls	r1, r1, r0
    4050:	09100d01 	ldmdbeq	r0, {r0, r8, sl, fp}
    4054:	77140000 	ldrvc	r0, [r4, -r0]
    4058:	ac000009 	stcge	0, cr0, [r0], {9}
    405c:	aa00002a 	bge	410c <_Min_Stack_Size+0x310c>
    4060:	0000002a 	andeq	r0, r0, sl, lsr #32
    4064:	001b3817 	andseq	r3, fp, r7, lsl r8
    4068:	0009a610 	andeq	sl, r9, r0, lsl r6
    406c:	00092a00 	andeq	r2, r9, r0, lsl #20
    4070:	50011800 	andpl	r1, r1, r0, lsl #16
    4074:	18007402 	stmdane	r0, {r1, sl, ip, sp, lr}
    4078:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    407c:	88190000 	ldmdahi	r9, {}	; <UNPREDICTABLE>
    4080:	b410001b 	ldrlt	r0, [r0], #-27	; 0xffffffe5
    4084:	18000009 	stmdane	r0, {r0, r3}
    4088:	76025001 	strvc	r5, [r2], -r1
    408c:	51011800 	tstpl	r1, r0, lsl #16
    4090:	00007902 	andeq	r7, r0, r2, lsl #18
    4094:	76040b00 	strvc	r0, [r4], -r0, lsl #22
    4098:	1a000000 	bne	40a0 <_Min_Stack_Size+0x30a0>
    409c:	00000f18 	andeq	r0, r0, r8, lsl pc
    40a0:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    40a4:	00009701 	andeq	r9, r0, r1, lsl #14
    40a8:	09680300 	stmdbeq	r8!, {r8, r9}^
    40ac:	a11b0000 	tstge	fp, r0
    40b0:	0200000e 	andeq	r0, r0, #14
    40b4:	97060254 	smlsdls	r6, r4, r2, r0
    40b8:	00000000 	andeq	r0, r0, r0
    40bc:	000e8d1c 	andeq	r8, lr, ip, lsl sp
    40c0:	02490200 	subeq	r0, r9, #0, 4
    40c4:	85030137 	strhi	r0, [r3, #-311]	; 0xfffffec9
    40c8:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    40cc:	00000ea1 	andeq	r0, r0, r1, lsr #29
    40d0:	50024902 	andpl	r4, r2, r2, lsl #18
    40d4:	00000097 	muleq	r0, r7, r0
    40d8:	0eb61a00 	vmoveq.f32	s2, #96	; 0x3f000000  0.5
    40dc:	32020000 	andcc	r0, r2, #0
    40e0:	97013702 	strls	r3, [r1, -r2, lsl #14]
    40e4:	03000000 	movweq	r0, #0
    40e8:	000009a6 	andeq	r0, r0, r6, lsr #19
    40ec:	000ea51b 	andeq	sl, lr, fp, lsl r5
    40f0:	02340200 	eorseq	r0, r4, #0, 4
    40f4:	00009706 	andeq	r9, r0, r6, lsl #14
    40f8:	011e0000 	tsteq	lr, r0
    40fc:	00110601 	andseq	r0, r1, r1, lsl #12
    4100:	00110600 	andseq	r0, r1, r0, lsl #12
    4104:	0e680500 	cdpeq	5, 6, cr0, cr8, cr0, {0}
    4108:	bd01011f 	stflts	f0, [r1, #-124]	; 0xffffff84
    410c:	bd000010 	stclt	0, cr0, [r0, #-64]	; 0xffffffc0
    4110:	04000010 	streq	r0, [r0], #-16
    4114:	000d0121 	andeq	r0, sp, r1, lsr #2
    4118:	00000737 	andeq	r0, r0, r7, lsr r7
    411c:	0b400002 	bleq	100412c <__RAM_SIZE+0xf0412c>
    4120:	01040000 	mrseq	r0, (UNDEF: 4)
    4124:	0000003d 	andeq	r0, r0, sp, lsr r0
    4128:	00115f0c 	andseq	r5, r1, ip, lsl #30
    412c:	00064100 	andeq	r4, r6, r0, lsl #2
    4130:	00023800 	andeq	r3, r2, r0, lsl #16
	...
    413c:	001eba00 	andseq	fp, lr, r0, lsl #20
    4140:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4144:	00000239 	andeq	r0, r0, r9, lsr r2
    4148:	69050403 	stmdbvs	r5, {r0, r1, sl}
    414c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    4150:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    4154:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    4158:	00062304 	andeq	r2, r6, r4, lsl #6
    415c:	06010200 	streq	r0, [r1], -r0, lsl #4
    4160:	00000852 	andeq	r0, r0, r2, asr r8
    4164:	50080102 	andpl	r0, r8, r2, lsl #2
    4168:	02000008 	andeq	r0, r0, #8
    416c:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    4170:	02020000 	andeq	r0, r2, #0
    4174:	00091e07 	andeq	r1, r9, r7, lsl #28
    4178:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    417c:	000004ed 	andeq	r0, r0, sp, ror #9
    4180:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    4184:	02000002 	andeq	r0, r0, #2
    4188:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    418c:	04040000 	streq	r0, [r4], #-0
    4190:	59080102 	stmdbpl	r8, {r1, r8}
    4194:	05000008 	streq	r0, [r0, #-8]
    4198:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    419c:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    41a0:	05000000 	streq	r0, [r0, #-0]
    41a4:	000008de 	ldrdeq	r0, [r0], -lr
    41a8:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    41ac:	05000000 	streq	r0, [r0, #-0]
    41b0:	0000077f 	andeq	r0, r0, pc, ror r7
    41b4:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    41b8:	05000000 	streq	r0, [r0, #-0]
    41bc:	00000711 	andeq	r0, r0, r1, lsl r7
    41c0:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    41c4:	06000000 	streq	r0, [r0], -r0
    41c8:	0000053b 	andeq	r0, r0, fp, lsr r5
    41cc:	0182031c 	orreq	r0, r2, ip, lsl r3
    41d0:	00012e10 	andeq	r2, r1, r0, lsl lr
    41d4:	08120700 	ldmdaeq	r2, {r8, r9, sl}
    41d8:	86030000 	strhi	r0, [r3], -r0
    41dc:	00a31901 	adceq	r1, r3, r1, lsl #18
    41e0:	23020000 	movwcs	r0, #8192	; 0x2000
    41e4:	03a00700 	moveq	r0, #0, 14
    41e8:	87030000 	strhi	r0, [r3, -r0]
    41ec:	00a31901 	adceq	r1, r3, r1, lsl #18
    41f0:	23020000 	movwcs	r0, #8192	; 0x2000
    41f4:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    41f8:	8a030000 	bhi	c4200 <SYSTICK_CYCLES+0x9b1c1>
    41fc:	013a1b01 	teqeq	sl, r1, lsl #22
    4200:	23020000 	movwcs	r0, #8192	; 0x2000
    4204:	01f20708 	mvnseq	r0, r8, lsl #14
    4208:	8b030000 	blhi	c4210 <SYSTICK_CYCLES+0x9b1d1>
    420c:	00a31901 	adceq	r1, r3, r1, lsl #18
    4210:	23020000 	movwcs	r0, #8192	; 0x2000
    4214:	0954070c 	ldmdbeq	r4, {r2, r3, r8, r9, sl}^
    4218:	91030000 	mrsls	r0, (UNDEF: 3)
    421c:	01401a01 	cmpeq	r0, r1, lsl #20
    4220:	23020000 	movwcs	r0, #8192	; 0x2000
    4224:	001b0710 	andseq	r0, fp, r0, lsl r7
    4228:	92030000 	andls	r0, r3, #0
    422c:	01401a01 	cmpeq	r0, r1, lsl #20
    4230:	23020000 	movwcs	r0, #8192	; 0x2000
    4234:	05ee0714 	strbeq	r0, [lr, #1812]!	; 0x714
    4238:	96030000 	strls	r0, [r3], -r0
    423c:	01461b01 	cmpeq	r6, r1, lsl #22
    4240:	23020000 	movwcs	r0, #8192	; 0x2000
    4244:	01080018 	tsteq	r8, r8, lsl r0
    4248:	0000013a 	andeq	r0, r0, sl, lsr r1
    424c:	0000a309 	andeq	sl, r0, r9, lsl #6
    4250:	040a0000 	streq	r0, [sl], #-0
    4254:	0000012e 	andeq	r0, r0, lr, lsr #2
    4258:	00af040a 	adceq	r0, pc, sl, lsl #8
    425c:	040a0000 	streq	r0, [sl], #-0
    4260:	00000140 	andeq	r0, r0, r0, asr #2
    4264:	00062f0b 	andeq	r2, r6, fp, lsl #30
    4268:	019b0300 	orrseq	r0, fp, r0, lsl #6
    426c:	0000af03 	andeq	sl, r0, r3, lsl #30
    4270:	7f040a00 	svcvc	0x00040a00
    4274:	06000000 	streq	r0, [r0], -r0
    4278:	0000034b 	andeq	r0, r0, fp, asr #6
    427c:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
    4280:	00047310 	andeq	r7, r4, r0, lsl r3
    4284:	09110700 	ldmdbeq	r1, {r8, r9, sl}
    4288:	dd030000 	stcle	0, cr0, [r3, #-0]
    428c:	00a31901 	adceq	r1, r3, r1, lsl #18
    4290:	23020000 	movwcs	r0, #8192	; 0x2000
    4294:	07840700 	streq	r0, [r4, r0, lsl #14]
    4298:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    429c:	00a31901 	adceq	r1, r3, r1, lsl #18
    42a0:	23020000 	movwcs	r0, #8192	; 0x2000
    42a4:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    42a8:	df030000 	svcle	0x00030000
    42ac:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    42b0:	23020000 	movwcs	r0, #8192	; 0x2000
    42b4:	08fb0708 	ldmeq	fp!, {r3, r8, r9, sl}^
    42b8:	e0030000 	and	r0, r3, r0
    42bc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    42c0:	23020000 	movwcs	r0, #8192	; 0x2000
    42c4:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    42c8:	e1030000 	mrs	r0, (UNDEF: 3)
    42cc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    42d0:	23020000 	movwcs	r0, #8192	; 0x2000
    42d4:	093f0710 	ldmdbeq	pc!, {r4, r8, r9, sl}	; <UNPREDICTABLE>
    42d8:	e2030000 	and	r0, r3, #0
    42dc:	00a31901 	adceq	r1, r3, r1, lsl #18
    42e0:	23020000 	movwcs	r0, #8192	; 0x2000
    42e4:	21d10714 	bicscs	r0, r1, r4, lsl r7
    42e8:	e3030000 	movw	r0, #12288	; 0x3000
    42ec:	00a31901 	adceq	r1, r3, r1, lsl #18
    42f0:	23020000 	movwcs	r0, #8192	; 0x2000
    42f4:	060a0718 			; <UNDEFINED> instruction: 0x060a0718
    42f8:	e4030000 	str	r0, [r3], #-0
    42fc:	00a31901 	adceq	r1, r3, r1, lsl #18
    4300:	23020000 	movwcs	r0, #8192	; 0x2000
    4304:	069f071c 			; <UNDEFINED> instruction: 0x069f071c
    4308:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    430c:	04731a01 	ldrbteq	r1, [r3], #-2561	; 0xfffff5ff
    4310:	23020000 	movwcs	r0, #8192	; 0x2000
    4314:	01990720 	orrseq	r0, r9, r0, lsr #14
    4318:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    431c:	04731a01 	ldrbteq	r1, [r3], #-2561	; 0xfffff5ff
    4320:	23020000 	movwcs	r0, #8192	; 0x2000
    4324:	05960724 	ldreq	r0, [r6, #1828]	; 0x724
    4328:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    432c:	01591a01 	cmpeq	r9, r1, lsl #20
    4330:	23020000 	movwcs	r0, #8192	; 0x2000
    4334:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    4338:	f2030000 	vhadd.s8	d0, d3, d0
    433c:	00971901 	addseq	r1, r7, r1, lsl #18
    4340:	23020000 	movwcs	r0, #8192	; 0x2000
    4344:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    4348:	f3030000 	vhadd.u8	d0, d3, d0
    434c:	00971901 	addseq	r1, r7, r1, lsl #18
    4350:	23020000 	movwcs	r0, #8192	; 0x2000
    4354:	01730730 	cmneq	r3, r0, lsr r7
    4358:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    435c:	00971901 	addseq	r1, r7, r1, lsl #18
    4360:	23020000 	movwcs	r0, #8192	; 0x2000
    4364:	07300734 			; <UNDEFINED> instruction: 0x07300734
    4368:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    436c:	00971901 	addseq	r1, r7, r1, lsl #18
    4370:	23020000 	movwcs	r0, #8192	; 0x2000
    4374:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    4378:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    437c:	00971901 	addseq	r1, r7, r1, lsl #18
    4380:	23020000 	movwcs	r0, #8192	; 0x2000
    4384:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    4388:	fb030000 	blx	c4392 <SYSTICK_CYCLES+0x9b353>
    438c:	048a1b01 	streq	r1, [sl], #2817	; 0xb01
    4390:	23020000 	movwcs	r0, #8192	; 0x2000
    4394:	01520740 	cmpeq	r2, r0, asr #14
    4398:	03030000 	movweq	r0, #12288	; 0x3000
    439c:	013a1b02 	teqeq	sl, r2, lsl #22
    43a0:	23020000 	movwcs	r0, #8192	; 0x2000
    43a4:	01070744 	tsteq	r7, r4, asr #14
    43a8:	04030000 	streq	r0, [r3], #-0
    43ac:	00a31902 	adceq	r1, r3, r2, lsl #18
    43b0:	23020000 	movwcs	r0, #8192	; 0x2000
    43b4:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    43b8:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    43bc:	014c1902 	cmpeq	ip, r2, lsl #18
    43c0:	23020000 	movwcs	r0, #8192	; 0x2000
    43c4:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    43c8:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    43cc:	048a1b02 	streq	r1, [sl], #2818	; 0xb02
    43d0:	23020000 	movwcs	r0, #8192	; 0x2000
    43d4:	05ce0768 	strbeq	r0, [lr, #1896]	; 0x768
    43d8:	0f030000 	svceq	0x00030000
    43dc:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    43e0:	23020000 	movwcs	r0, #8192	; 0x2000
    43e4:	0717076c 	ldreq	r0, [r7, -ip, ror #14]
    43e8:	11030000 	mrsne	r0, (UNDEF: 3)
    43ec:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    43f0:	23020000 	movwcs	r0, #8192	; 0x2000
    43f4:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    43f8:	12030000 	andne	r0, r3, #0
    43fc:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    4400:	23020000 	movwcs	r0, #8192	; 0x2000
    4404:	06fa0774 			; <UNDEFINED> instruction: 0x06fa0774
    4408:	13030000 	movwne	r0, #12288	; 0x3000
    440c:	00a31902 	adceq	r1, r3, r2, lsl #18
    4410:	23020000 	movwcs	r0, #8192	; 0x2000
    4414:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    4418:	14030000 	strne	r0, [r3], #-0
    441c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    4420:	23020000 	movwcs	r0, #8192	; 0x2000
    4424:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    4428:	15030000 	strne	r0, [r3, #-0]
    442c:	00971902 	addseq	r1, r7, r2, lsl #18
    4430:	23030000 	movwcs	r0, #12288	; 0x3000
    4434:	e8070180 	stmda	r7, {r7, r8}
    4438:	03000003 	movweq	r0, #3
    443c:	97190216 			; <UNDEFINED> instruction: 0x97190216
    4440:	03000000 	movweq	r0, #0
    4444:	07018423 	streq	r8, [r1, -r3, lsr #8]
    4448:	000008e4 	andeq	r0, r0, r4, ror #17
    444c:	1a021f03 	bne	8c060 <SYSTICK_CYCLES+0x63021>
    4450:	00000473 	andeq	r0, r0, r3, ror r4
    4454:	01882303 	orreq	r2, r8, r3, lsl #6
    4458:	0007d507 	andeq	sp, r7, r7, lsl #10
    445c:	02200300 	eoreq	r0, r0, #0, 6
    4460:	0004731a 	andeq	r7, r4, sl, lsl r3
    4464:	8c230300 	stchi	3, cr0, [r3], #-0
    4468:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    446c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    4470:	00971902 	addseq	r1, r7, r2, lsl #18
    4474:	23030000 	movwcs	r0, #12288	; 0x3000
    4478:	56070190 			; <UNDEFINED> instruction: 0x56070190
    447c:	03000002 	movweq	r0, #2
    4480:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    4484:	03000000 	movweq	r0, #0
    4488:	07019423 	streq	r9, [r1, -r3, lsr #8]
    448c:	00000320 	andeq	r0, r0, r0, lsr #6
    4490:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    4494:	00000097 	muleq	r0, r7, r0
    4498:	01982303 	orrseq	r2, r8, r3, lsl #6
    449c:	00027707 	andeq	r7, r2, r7, lsl #14
    44a0:	02330300 	eorseq	r0, r3, #0, 6
    44a4:	00009719 	andeq	r9, r0, r9, lsl r7
    44a8:	9c230300 	stcls	3, cr0, [r3], #-0
    44ac:	00000701 	andeq	r0, r0, r1, lsl #14
    44b0:	35030000 	strcc	r0, [r3, #-0]
    44b4:	056f1a02 	strbeq	r1, [pc, #-2562]!	; 3aba <_Min_Stack_Size+0x2aba>
    44b8:	23030000 	movwcs	r0, #12288	; 0x3000
    44bc:	b70701a0 	strlt	r0, [r7, -r0, lsr #3]
    44c0:	0300001b 	movweq	r0, #27
    44c4:	a319023a 	tstge	r9, #-1610612733	; 0xa0000003
    44c8:	03000000 	movweq	r0, #0
    44cc:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    44d0:	00001c77 	andeq	r1, r0, r7, ror ip
    44d4:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    44d8:	000000a3 	andeq	r0, r0, r3, lsr #1
    44dc:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    44e0:	001b3007 	andseq	r3, fp, r7
    44e4:	02410300 	subeq	r0, r1, #0, 6
    44e8:	0000a319 	andeq	sl, r0, r9, lsl r3
    44ec:	ac230300 	stcge	3, cr0, [r3], #-0
    44f0:	1d2e0701 	stcne	7, cr0, [lr, #-4]!
    44f4:	45030000 	strmi	r0, [r3, #-0]
    44f8:	00a31902 	adceq	r1, r3, r2, lsl #18
    44fc:	23030000 	movwcs	r0, #12288	; 0x3000
    4500:	470701b0 			; <UNDEFINED> instruction: 0x470701b0
    4504:	0300001c 	movweq	r0, #28
    4508:	a3190248 	tstge	r9, #72, 4	; 0x80000004
    450c:	03000000 	movweq	r0, #0
    4510:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    4514:	000007a8 	andeq	r0, r0, r8, lsr #15
    4518:	1a024c03 	bne	9752c <SYSTICK_CYCLES+0x6e4ed>
    451c:	00000473 	andeq	r0, r0, r3, ror r4
    4520:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    4524:	001d0607 	andseq	r0, sp, r7, lsl #12
    4528:	024f0300 	subeq	r0, pc, #0, 6
    452c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4530:	bc230300 	stclt	3, cr0, [r3], #-0
    4534:	1b080701 	blne	206140 <__RAM_SIZE+0x106140>
    4538:	52030000 	andpl	r0, r3, #0
    453c:	00a31902 	adceq	r1, r3, r2, lsl #18
    4540:	23030000 	movwcs	r0, #12288	; 0x3000
    4544:	850701c0 	strhi	r0, [r7, #-448]	; 0xfffffe40
    4548:	0300001a 	movweq	r0, #26
    454c:	a3190255 	tstge	r9, #1342177285	; 0x50000005
    4550:	03000000 	movweq	r0, #0
    4554:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    4558:	00001bdb 	ldrdeq	r1, [r0], -fp
    455c:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    4560:	000000a3 	andeq	r0, r0, r3, lsr #1
    4564:	01c82303 	biceq	r2, r8, r3, lsl #6
    4568:	0009a907 	andeq	sl, r9, r7, lsl #18
    456c:	025d0300 	subseq	r0, sp, #0, 6
    4570:	0000761a 	andeq	r7, r0, sl, lsl r6
    4574:	cc230300 	stcgt	3, cr0, [r3], #-0
    4578:	04810701 	streq	r0, [r1], #1793	; 0x701
    457c:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    4580:	00a31902 	adceq	r1, r3, r2, lsl #18
    4584:	23030000 	movwcs	r0, #12288	; 0x3000
    4588:	0a0001d0 	beq	4cd0 <_Min_Stack_Size+0x3cd0>
    458c:	00015f04 	andeq	r5, r1, r4, lsl #30
    4590:	8a010800 	bhi	46598 <SYSTICK_CYCLES+0x1d559>
    4594:	09000004 	stmdbeq	r0, {r2}
    4598:	00000473 	andeq	r0, r0, r3, ror r4
    459c:	0000a309 	andeq	sl, r0, r9, lsl #6
    45a0:	040a0000 	streq	r0, [sl], #-0
    45a4:	00000479 	andeq	r0, r0, r9, ror r4
    45a8:	00079806 	andeq	r9, r7, r6, lsl #16
    45ac:	7e033400 	cfcpysvc	mvf3, mvf3
    45b0:	056f1003 	strbeq	r1, [pc, #-3]!	; 45b5 <_Min_Stack_Size+0x35b5>
    45b4:	8d070000 	stchi	0, cr0, [r7, #-0]
    45b8:	03000001 	movweq	r0, #1
    45bc:	a3190382 	tstge	r9, #134217730	; 0x8000002
    45c0:	02000000 	andeq	r0, r0, #0
    45c4:	7c070023 	stcvc	0, cr0, [r7], {35}	; 0x23
    45c8:	03000008 	movweq	r0, #8
    45cc:	591a0385 	ldmdbpl	sl, {r0, r2, r7, r8, r9}
    45d0:	02000001 	andeq	r0, r0, #1
    45d4:	e1070423 	tst	r7, r3, lsr #8
    45d8:	03000006 	movweq	r0, #6
    45dc:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    45e0:	02000000 	andeq	r0, r0, #0
    45e4:	cb070823 	blgt	1c6678 <__RAM_SIZE+0xc6678>
    45e8:	03000004 	movweq	r0, #4
    45ec:	7a1a038c 	bvc	685424 <__RAM_SIZE+0x585424>
    45f0:	02000006 	andeq	r0, r0, #6
    45f4:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    45f8:	03000001 	movweq	r0, #1
    45fc:	97190390 			; <UNDEFINED> instruction: 0x97190390
    4600:	02000000 	andeq	r0, r0, #0
    4604:	21071023 	tstcs	r7, r3, lsr #32
    4608:	03000001 	movweq	r0, #1
    460c:	97190393 			; <UNDEFINED> instruction: 0x97190393
    4610:	02000000 	andeq	r0, r0, #0
    4614:	b2071423 	andlt	r1, r7, #587202560	; 0x23000000
    4618:	03000008 	movweq	r0, #8
    461c:	731a0398 	tstvc	sl, #152, 6	; 0x60000002
    4620:	02000004 	andeq	r0, r0, #4
    4624:	c8071823 	stmdagt	r7, {r0, r1, r5, fp, ip}
    4628:	03000006 	movweq	r0, #6
    462c:	97190399 			; <UNDEFINED> instruction: 0x97190399
    4630:	02000000 	andeq	r0, r0, #0
    4634:	b8071c23 	stmdalt	r7, {r0, r1, r5, sl, fp, ip}
    4638:	03000005 	movweq	r0, #5
    463c:	6f1a039d 	svcvs	0x001a039d
    4640:	02000005 	andeq	r0, r0, #5
    4644:	85072023 	strhi	r2, [r7, #-35]	; 0xffffffdd
    4648:	03000006 	movweq	r0, #6
    464c:	6f1a039e 	svcvs	0x001a039e
    4650:	02000005 	andeq	r0, r0, #5
    4654:	d0072423 	andle	r2, r7, r3, lsr #8
    4658:	03000001 	movweq	r0, #1
    465c:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    4660:	02000000 	andeq	r0, r0, #0
    4664:	c5072823 	strgt	r2, [r7, #-2083]	; 0xfffff7dd
    4668:	03000009 	movweq	r0, #9
    466c:	6f1a03a6 	svcvs	0x001a03a6
    4670:	02000005 	andeq	r0, r0, #5
    4674:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    4678:	03000004 	movweq	r0, #4
    467c:	6f1a03a7 	svcvs	0x001a03a7
    4680:	02000005 	andeq	r0, r0, #5
    4684:	0a003023 	beq	10718 <_Min_Stack_Size+0xf718>
    4688:	00049004 	andeq	r9, r4, r4
    468c:	08d40b00 	ldmeq	r4, {r8, r9, fp}^
    4690:	86030000 	strhi	r0, [r3], -r0
    4694:	015f0302 	cmpeq	pc, r2, lsl #6
    4698:	040a0000 	streq	r0, [sl], #-0
    469c:	0000008b 	andeq	r0, r0, fp, lsl #1
    46a0:	00046006 	andeq	r6, r4, r6
    46a4:	d9033400 	stmdble	r3, {sl, ip, sp}
    46a8:	06671002 	strbteq	r1, [r7], -r2
    46ac:	01070000 	mrseq	r0, (UNDEF: 7)
    46b0:	03000004 	movweq	r0, #4
    46b4:	a31902dd 	tstge	r9, #-805306355	; 0xd000000d
    46b8:	02000000 	andeq	r0, r0, #0
    46bc:	74070023 	strvc	r0, [r7], #-35	; 0xffffffdd
    46c0:	03000003 	movweq	r0, #3
    46c4:	591a02e0 	ldmdbpl	sl, {r5, r6, r7, r9}
    46c8:	02000001 	andeq	r0, r0, #1
    46cc:	55070423 	strpl	r0, [r7, #-1059]	; 0xfffffbdd
    46d0:	03000007 	movweq	r0, #7
    46d4:	a31902e3 	tstge	r9, #805306382	; 0x3000000e
    46d8:	02000000 	andeq	r0, r0, #0
    46dc:	9b070823 	blls	1c6770 <__RAM_SIZE+0xc6770>
    46e0:	03000008 	movweq	r0, #8
    46e4:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
    46e8:	02000000 	andeq	r0, r0, #0
    46ec:	f0070c23 			; <UNDEFINED> instruction: 0xf0070c23
    46f0:	03000007 	movweq	r0, #7
    46f4:	821a02e9 	andshi	r0, sl, #-1879048178	; 0x9000000e
    46f8:	02000005 	andeq	r0, r0, #5
    46fc:	07071023 	streq	r1, [r7, -r3, lsr #32]
    4700:	03000011 	movweq	r0, #17
    4704:	821a02ed 	andshi	r0, sl, #-805306354	; 0xd000000e
    4708:	02000005 	andeq	r0, r0, #5
    470c:	28071423 	stmdacs	r7, {r0, r1, r5, sl, ip}
    4710:	03000005 	movweq	r0, #5
    4714:	821a02f0 	andshi	r0, sl, #240, 4
    4718:	02000005 	andeq	r0, r0, #5
    471c:	06071823 	streq	r1, [r7], -r3, lsr #16
    4720:	03000003 	movweq	r0, #3
    4724:	a31902f3 	tstge	r9, #805306383	; 0x3000000f
    4728:	02000000 	andeq	r0, r0, #0
    472c:	72071c23 	andvc	r1, r7, #8960	; 0x2300
    4730:	03000009 	movweq	r0, #9
    4734:	731a02f9 	tstvc	sl, #-1879048177	; 0x9000000f
    4738:	02000004 	andeq	r0, r0, #4
    473c:	ae072023 	cdpge	0, 0, cr2, cr7, cr3, {1}
    4740:	03000004 	movweq	r0, #4
    4744:	731a02fe 	tstvc	sl, #-536870897	; 0xe000000f
    4748:	02000004 	andeq	r0, r0, #4
    474c:	0b072423 	bleq	1cd7e0 <__RAM_SIZE+0xcd7e0>
    4750:	03000005 	movweq	r0, #5
    4754:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
    4758:	02000000 	andeq	r0, r0, #0
    475c:	a7072823 	strge	r2, [r7, -r3, lsr #16]
    4760:	03000002 	movweq	r0, #2
    4764:	671a0303 	ldrvs	r0, [sl, -r3, lsl #6]
    4768:	02000006 	andeq	r0, r0, #6
    476c:	5e072c23 	cdppl	12, 0, cr2, cr7, cr3, {1}
    4770:	03000008 	movweq	r0, #8
    4774:	671a0304 	ldrvs	r0, [sl, -r4, lsl #6]
    4778:	02000006 	andeq	r0, r0, #6
    477c:	0a003023 	beq	10810 <_Min_Stack_Size+0xf810>
    4780:	00058804 	andeq	r8, r5, r4, lsl #16
    4784:	04740b00 	ldrbteq	r0, [r4], #-2816	; 0xfffff500
    4788:	23030000 	movwcs	r0, #12288	; 0x3000
    478c:	05880303 	streq	r0, [r8, #771]	; 0x303
    4790:	040a0000 	streq	r0, [sl], #-0
    4794:	00000575 	andeq	r0, r0, r5, ror r5
    4798:	066d040a 	strbteq	r0, [sp], -sl, lsl #8
    479c:	010c0000 	mrseq	r0, (UNDEF: 12)
    47a0:	0000119a 	muleq	r0, sl, r1
    47a4:	01074d01 	tsteq	r7, r1, lsl #26
    47a8:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    47ac:	10001bf4 	strdne	r1, [r0], -r4
    47b0:	00002abf 			; <UNDEFINED> instruction: 0x00002abf
    47b4:	00072b01 	andeq	r2, r7, r1, lsl #22
    47b8:	19cf0d00 	stmibne	pc, {r8, sl, fp}^	; <UNPREDICTABLE>
    47bc:	4d010000 	stcmi	0, cr0, [r1, #-0]
    47c0:	00067a28 	andeq	r7, r6, r8, lsr #20
    47c4:	002ae700 	eoreq	lr, sl, r0, lsl #14
    47c8:	002adf00 	eoreq	sp, sl, r0, lsl #30
    47cc:	048b0d00 	streq	r0, [fp], #3328	; 0xd00
    47d0:	4d010000 	stcmi	0, cr0, [r1, #-0]
    47d4:	0000a33a 	andeq	sl, r0, sl, lsr r3
    47d8:	002b2900 	eoreq	r2, fp, r0, lsl #18
    47dc:	002b2100 	eoreq	r2, fp, r0, lsl #2
    47e0:	0ef10e00 	cdpeq	14, 15, cr0, cr1, cr0, {0}
    47e4:	54010000 	strpl	r0, [r1], #-0
    47e8:	00068016 	andeq	r8, r6, r6, lsl r0
    47ec:	002b6700 	eoreq	r6, fp, r0, lsl #14
    47f0:	002b6300 	eoreq	r6, fp, r0, lsl #6
    47f4:	18b20e00 	ldmne	r2!, {r9, sl, fp}
    47f8:	55010000 	strpl	r0, [r1, #-0]
    47fc:	00009715 	andeq	r9, r0, r5, lsl r7
    4800:	002b8b00 	eoreq	r8, fp, r0, lsl #22
    4804:	002b8500 	eoreq	r8, fp, r0, lsl #10
    4808:	0ffb0e00 	svceq	0x00fb0e00
    480c:	56010000 	strpl	r0, [r1], -r0
    4810:	00067a16 	andeq	r7, r6, r6, lsl sl
    4814:	002bb700 	eoreq	fp, fp, r0, lsl #14
    4818:	002bb500 	eoreq	fp, fp, r0, lsl #10
    481c:	10070e00 	andne	r0, r7, r0, lsl #28
    4820:	57010000 	strpl	r0, [r1, -r0]
    4824:	00067a16 	andeq	r7, r6, r6, lsl sl
    4828:	002bcc00 	eoreq	ip, fp, r0, lsl #24
    482c:	002bca00 	eoreq	ip, fp, r0, lsl #20
    4830:	1bf20f00 	blne	ffc88438 <__RAM_segment_used_end__+0xc7b88438>
    4834:	072b1000 	streq	r1, [fp, -r0]!
    4838:	01100000 	tsteq	r0, r0
    483c:	01f30350 	mvnseq	r0, r0, asr r3
    4840:	11000050 	qaddne	r0, r0, r0
    4844:	10580101 	subsne	r0, r8, r1, lsl #2
    4848:	10580000 	subsne	r0, r8, r0
    484c:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    4850:	a0000d01 	andge	r0, r0, r1, lsl #26
    4854:	02000008 	andeq	r0, r0, #8
    4858:	000c3b00 	andeq	r3, ip, r0, lsl #22
    485c:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    4860:	0c000000 	stceq	0, cr0, [r0], {-0}
    4864:	000011b9 			; <UNDEFINED> instruction: 0x000011b9
    4868:	00000641 	andeq	r0, r0, r1, asr #12
    486c:	00000248 	andeq	r0, r0, r8, asr #4
	...
    4878:	00002034 	andeq	r2, r0, r4, lsr r0
    487c:	39070402 	stmdbcc	r7, {r1, sl}
    4880:	03000002 	movweq	r0, #2
    4884:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4888:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    488c:	0004e805 	andeq	lr, r4, r5, lsl #16
    4890:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    4894:	00000623 	andeq	r0, r0, r3, lsr #12
    4898:	52060102 	andpl	r0, r6, #-2147483648	; 0x80000000
    489c:	02000008 	andeq	r0, r0, #8
    48a0:	08500801 	ldmdaeq	r0, {r0, fp}^
    48a4:	02020000 	andeq	r0, r2, #0
    48a8:	0006b405 	andeq	fp, r6, r5, lsl #8
    48ac:	07020200 	streq	r0, [r2, -r0, lsl #4]
    48b0:	0000091e 	andeq	r0, r0, lr, lsl r9
    48b4:	ed050402 	cfstrs	mvf0, [r5, #-8]
    48b8:	02000004 	andeq	r0, r0, #4
    48bc:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    48c0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    48c4:	00022f07 	andeq	r2, r2, r7, lsl #30
    48c8:	02040400 	andeq	r0, r4, #0, 8
    48cc:	08590801 	ldmdaeq	r9, {r0, fp}^
    48d0:	df050000 	svcle	0x00050000
    48d4:	02000008 	andeq	r0, r0, #8
    48d8:	00783173 	rsbseq	r3, r8, r3, ror r1
    48dc:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    48e0:	02000008 	andeq	r0, r0, #8
    48e4:	004c3174 	subeq	r3, ip, r4, ror r1
    48e8:	7f050000 	svcvc	0x00050000
    48ec:	02000007 	andeq	r0, r0, #7
    48f0:	00293176 	eoreq	r3, r9, r6, ror r1
    48f4:	11050000 	mrsne	r0, (UNDEF: 5)
    48f8:	02000007 	andeq	r0, r0, #7
    48fc:	00683178 	rsbeq	r3, r8, r8, ror r1
    4900:	3b060000 	blcc	184908 <__RAM_SIZE+0x84908>
    4904:	1c000005 	stcne	0, cr0, [r0], {5}
    4908:	10018203 	andne	r8, r1, r3, lsl #4
    490c:	0000012e 	andeq	r0, r0, lr, lsr #2
    4910:	00081207 	andeq	r1, r8, r7, lsl #4
    4914:	01860300 	orreq	r0, r6, r0, lsl #6
    4918:	0000a319 	andeq	sl, r0, r9, lsl r3
    491c:	00230200 	eoreq	r0, r3, r0, lsl #4
    4920:	0003a007 	andeq	sl, r3, r7
    4924:	01870300 	orreq	r0, r7, r0, lsl #6
    4928:	0000a319 	andeq	sl, r0, r9, lsl r3
    492c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4930:	00043d07 	andeq	r3, r4, r7, lsl #26
    4934:	018a0300 	orreq	r0, sl, r0, lsl #6
    4938:	00013a1b 	andeq	r3, r1, fp, lsl sl
    493c:	08230200 	stmdaeq	r3!, {r9}
    4940:	0001f207 	andeq	pc, r1, r7, lsl #4
    4944:	018b0300 	orreq	r0, fp, r0, lsl #6
    4948:	0000a319 	andeq	sl, r0, r9, lsl r3
    494c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4950:	00095407 	andeq	r5, r9, r7, lsl #8
    4954:	01910300 	orrseq	r0, r1, r0, lsl #6
    4958:	0001401a 	andeq	r4, r1, sl, lsl r0
    495c:	10230200 	eorne	r0, r3, r0, lsl #4
    4960:	00001b07 	andeq	r1, r0, r7, lsl #22
    4964:	01920300 	orrseq	r0, r2, r0, lsl #6
    4968:	0001401a 	andeq	r4, r1, sl, lsl r0
    496c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4970:	0005ee07 	andeq	lr, r5, r7, lsl #28
    4974:	01960300 	orrseq	r0, r6, r0, lsl #6
    4978:	0001461b 	andeq	r4, r1, fp, lsl r6
    497c:	18230200 	stmdane	r3!, {r9}
    4980:	3a010800 	bcc	46988 <SYSTICK_CYCLES+0x1d949>
    4984:	09000001 	stmdbeq	r0, {r0}
    4988:	000000a3 	andeq	r0, r0, r3, lsr #1
    498c:	2e040a00 	vmlacs.f32	s0, s8, s0
    4990:	0a000001 	beq	499c <_Min_Stack_Size+0x399c>
    4994:	0000af04 	andeq	sl, r0, r4, lsl #30
    4998:	40040a00 	andmi	r0, r4, r0, lsl #20
    499c:	0b000001 	bleq	49a8 <_Min_Stack_Size+0x39a8>
    49a0:	0000062f 	andeq	r0, r0, pc, lsr #12
    49a4:	03019b03 	movweq	r9, #6915	; 0x1b03
    49a8:	000000af 	andeq	r0, r0, pc, lsr #1
    49ac:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    49b0:	4b060000 	blmi	1849b8 <__RAM_SIZE+0x849b8>
    49b4:	d4000003 	strle	r0, [r0], #-3
    49b8:	1001d603 	andne	sp, r1, r3, lsl #12
    49bc:	00000473 	andeq	r0, r0, r3, ror r4
    49c0:	00091107 	andeq	r1, r9, r7, lsl #2
    49c4:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    49c8:	0000a319 	andeq	sl, r0, r9, lsl r3
    49cc:	00230200 	eoreq	r0, r3, r0, lsl #4
    49d0:	00078407 	andeq	r8, r7, r7, lsl #8
    49d4:	01de0300 	bicseq	r0, lr, r0, lsl #6
    49d8:	0000a319 	andeq	sl, r0, r9, lsl r3
    49dc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    49e0:	0001bc07 	andeq	fp, r1, r7, lsl #24
    49e4:	01df0300 	bicseq	r0, pc, r0, lsl #6
    49e8:	0000761a 	andeq	r7, r0, sl, lsl r6
    49ec:	08230200 	stmdaeq	r3!, {r9}
    49f0:	0008fb07 	andeq	pc, r8, r7, lsl #22
    49f4:	01e00300 	mvneq	r0, r0, lsl #6
    49f8:	0000761a 	andeq	r7, r0, sl, lsl r6
    49fc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4a00:	00041107 	andeq	r1, r4, r7, lsl #2
    4a04:	01e10300 	mvneq	r0, r0, lsl #6
    4a08:	0000761a 	andeq	r7, r0, sl, lsl r6
    4a0c:	10230200 	eorne	r0, r3, r0, lsl #4
    4a10:	00093f07 	andeq	r3, r9, r7, lsl #30
    4a14:	01e20300 	mvneq	r0, r0, lsl #6
    4a18:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a1c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4a20:	0021d107 	eoreq	sp, r1, r7, lsl #2
    4a24:	01e30300 	mvneq	r0, r0, lsl #6
    4a28:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a2c:	18230200 	stmdane	r3!, {r9}
    4a30:	00060a07 	andeq	r0, r6, r7, lsl #20
    4a34:	01e40300 	mvneq	r0, r0, lsl #6
    4a38:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a3c:	1c230200 	sfmne	f0, 4, [r3], #-0
    4a40:	00069f07 	andeq	r9, r6, r7, lsl #30
    4a44:	01e80300 	mvneq	r0, r0, lsl #6
    4a48:	0004731a 	andeq	r7, r4, sl, lsl r3
    4a4c:	20230200 	eorcs	r0, r3, r0, lsl #4
    4a50:	00019907 	andeq	r9, r1, r7, lsl #18
    4a54:	01e90300 	mvneq	r0, r0, lsl #6
    4a58:	0004731a 	andeq	r7, r4, sl, lsl r3
    4a5c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    4a60:	00059607 	andeq	r9, r5, r7, lsl #12
    4a64:	01f10300 	mvnseq	r0, r0, lsl #6
    4a68:	0001591a 	andeq	r5, r1, sl, lsl r9
    4a6c:	28230200 	stmdacs	r3!, {r9}
    4a70:	0002d907 	andeq	sp, r2, r7, lsl #18
    4a74:	01f20300 	mvnseq	r0, r0, lsl #6
    4a78:	00009719 	andeq	r9, r0, r9, lsl r7
    4a7c:	2c230200 	sfmcs	f0, 4, [r3], #-0
    4a80:	00024607 	andeq	r4, r2, r7, lsl #12
    4a84:	01f30300 	mvnseq	r0, r0, lsl #6
    4a88:	00009719 	andeq	r9, r0, r9, lsl r7
    4a8c:	30230200 	eorcc	r0, r3, r0, lsl #4
    4a90:	00017307 	andeq	r7, r1, r7, lsl #6
    4a94:	01f40300 	mvnseq	r0, r0, lsl #6
    4a98:	00009719 	andeq	r9, r0, r9, lsl r7
    4a9c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    4aa0:	00073007 	andeq	r3, r7, r7
    4aa4:	01f50300 	mvnseq	r0, r0, lsl #6
    4aa8:	00009719 	andeq	r9, r0, r9, lsl r7
    4aac:	38230200 	stmdacc	r3!, {r9}
    4ab0:	0000eb07 	andeq	lr, r0, r7, lsl #22
    4ab4:	01f60300 	mvnseq	r0, r0, lsl #6
    4ab8:	00009719 	andeq	r9, r0, r9, lsl r7
    4abc:	3c230200 	sfmcc	f0, 4, [r3], #-0
    4ac0:	00035c07 	andeq	r5, r3, r7, lsl #24
    4ac4:	01fb0300 	mvnseq	r0, r0, lsl #6
    4ac8:	00048a1b 	andeq	r8, r4, fp, lsl sl
    4acc:	40230200 	eormi	r0, r3, r0, lsl #4
    4ad0:	00015207 	andeq	r5, r1, r7, lsl #4
    4ad4:	02030300 	andeq	r0, r3, #0, 6
    4ad8:	00013a1b 	andeq	r3, r1, fp, lsl sl
    4adc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    4ae0:	00010707 	andeq	r0, r1, r7, lsl #14
    4ae4:	02040300 	andeq	r0, r4, #0, 6
    4ae8:	0000a319 	andeq	sl, r0, r9, lsl r3
    4aec:	48230200 	stmdami	r3!, {r9}
    4af0:	00033b07 	andeq	r3, r3, r7, lsl #22
    4af4:	02080300 	andeq	r0, r8, #0, 6
    4af8:	00014c19 	andeq	r4, r1, r9, lsl ip
    4afc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    4b00:	0002ec07 	andeq	lr, r2, r7, lsl #24
    4b04:	020e0300 	andeq	r0, lr, #0, 6
    4b08:	00048a1b 	andeq	r8, r4, fp, lsl sl
    4b0c:	68230200 	stmdavs	r3!, {r9}
    4b10:	0005ce07 	andeq	ip, r5, r7, lsl #28
    4b14:	020f0300 	andeq	r0, pc, #0, 6
    4b18:	0000761a 	andeq	r7, r0, sl, lsl r6
    4b1c:	6c230200 	sfmvs	f0, 4, [r3], #-0
    4b20:	00071707 	andeq	r1, r7, r7, lsl #14
    4b24:	02110300 	andseq	r0, r1, #0, 6
    4b28:	0004731a 	andeq	r7, r4, sl, lsl r3
    4b2c:	70230200 	eorvc	r0, r3, r0, lsl #4
    4b30:	00021207 	andeq	r1, r2, r7, lsl #4
    4b34:	02120300 	andseq	r0, r2, #0, 6
    4b38:	0004731a 	andeq	r7, r4, sl, lsl r3
    4b3c:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    4b40:	0006fa07 	andeq	pc, r6, r7, lsl #20
    4b44:	02130300 	andseq	r0, r3, #0, 6
    4b48:	0000a319 	andeq	sl, r0, r9, lsl r3
    4b4c:	78230200 	stmdavc	r3!, {r9}
    4b50:	0003c607 	andeq	ip, r3, r7, lsl #12
    4b54:	02140300 	andseq	r0, r4, #0, 6
    4b58:	0000761a 	andeq	r7, r0, sl, lsl r6
    4b5c:	7c230200 	sfmvc	f0, 4, [r3], #-0
    4b60:	00055407 	andeq	r5, r5, r7, lsl #8
    4b64:	02150300 	andseq	r0, r5, #0, 6
    4b68:	00009719 	andeq	r9, r0, r9, lsl r7
    4b6c:	80230300 	eorhi	r0, r3, r0, lsl #6
    4b70:	03e80701 	mvneq	r0, #262144	; 0x40000
    4b74:	16030000 	strne	r0, [r3], -r0
    4b78:	00971902 	addseq	r1, r7, r2, lsl #18
    4b7c:	23030000 	movwcs	r0, #12288	; 0x3000
    4b80:	e4070184 	str	r0, [r7], #-388	; 0xfffffe7c
    4b84:	03000008 	movweq	r0, #8
    4b88:	731a021f 	tstvc	sl, #-268435455	; 0xf0000001
    4b8c:	03000004 	movweq	r0, #4
    4b90:	07018823 	streq	r8, [r1, -r3, lsr #16]
    4b94:	000007d5 	ldrdeq	r0, [r0], -r5
    4b98:	1a022003 	bne	8cbac <SYSTICK_CYCLES+0x63b6d>
    4b9c:	00000473 	andeq	r0, r0, r3, ror r4
    4ba0:	018c2303 	orreq	r2, ip, r3, lsl #6
    4ba4:	0002c107 	andeq	ip, r2, r7, lsl #2
    4ba8:	022e0300 	eoreq	r0, lr, #0, 6
    4bac:	00009719 	andeq	r9, r0, r9, lsl r7
    4bb0:	90230300 	eorls	r0, r3, r0, lsl #6
    4bb4:	02560701 	subseq	r0, r6, #262144	; 0x40000
    4bb8:	2f030000 	svccs	0x00030000
    4bbc:	00971902 	addseq	r1, r7, r2, lsl #18
    4bc0:	23030000 	movwcs	r0, #12288	; 0x3000
    4bc4:	20070194 	mulcs	r7, r4, r1
    4bc8:	03000003 	movweq	r0, #3
    4bcc:	97190230 			; <UNDEFINED> instruction: 0x97190230
    4bd0:	03000000 	movweq	r0, #0
    4bd4:	07019823 	streq	r9, [r1, -r3, lsr #16]
    4bd8:	00000277 	andeq	r0, r0, r7, ror r2
    4bdc:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    4be0:	00000097 	muleq	r0, r7, r0
    4be4:	019c2303 	orrseq	r2, ip, r3, lsl #6
    4be8:	00000007 	andeq	r0, r0, r7
    4bec:	02350300 	eorseq	r0, r5, #0, 6
    4bf0:	00056f1a 	andeq	r6, r5, sl, lsl pc
    4bf4:	a0230300 	eorge	r0, r3, r0, lsl #6
    4bf8:	1bb70701 	blne	fedc6804 <__RAM_segment_used_end__+0xc6cc6804>
    4bfc:	3a030000 	bcc	c4c04 <SYSTICK_CYCLES+0x9bbc5>
    4c00:	00a31902 	adceq	r1, r3, r2, lsl #18
    4c04:	23030000 	movwcs	r0, #12288	; 0x3000
    4c08:	770701a4 	strvc	r0, [r7, -r4, lsr #3]
    4c0c:	0300001c 	movweq	r0, #28
    4c10:	a319023d 	tstge	r9, #-805306365	; 0xd0000003
    4c14:	03000000 	movweq	r0, #0
    4c18:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    4c1c:	00001b30 	andeq	r1, r0, r0, lsr fp
    4c20:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    4c24:	000000a3 	andeq	r0, r0, r3, lsr #1
    4c28:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    4c2c:	001d2e07 	andseq	r2, sp, r7, lsl #28
    4c30:	02450300 	subeq	r0, r5, #0, 6
    4c34:	0000a319 	andeq	sl, r0, r9, lsl r3
    4c38:	b0230300 	eorlt	r0, r3, r0, lsl #6
    4c3c:	1c470701 	mcrrne	7, 0, r0, r7, cr1
    4c40:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    4c44:	00a31902 	adceq	r1, r3, r2, lsl #18
    4c48:	23030000 	movwcs	r0, #12288	; 0x3000
    4c4c:	a80701b4 	stmdage	r7, {r2, r4, r5, r7, r8}
    4c50:	03000007 	movweq	r0, #7
    4c54:	731a024c 	tstvc	sl, #76, 4	; 0xc0000004
    4c58:	03000004 	movweq	r0, #4
    4c5c:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    4c60:	00001d06 	andeq	r1, r0, r6, lsl #26
    4c64:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    4c68:	000000a3 	andeq	r0, r0, r3, lsr #1
    4c6c:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    4c70:	001b0807 	andseq	r0, fp, r7, lsl #16
    4c74:	02520300 	subseq	r0, r2, #0, 6
    4c78:	0000a319 	andeq	sl, r0, r9, lsl r3
    4c7c:	c0230300 	eorgt	r0, r3, r0, lsl #6
    4c80:	1a850701 	bne	fe14688c <__RAM_segment_used_end__+0xc604688c>
    4c84:	55030000 	strpl	r0, [r3, #-0]
    4c88:	00a31902 	adceq	r1, r3, r2, lsl #18
    4c8c:	23030000 	movwcs	r0, #12288	; 0x3000
    4c90:	db0701c4 	blle	1c53a8 <__RAM_SIZE+0xc53a8>
    4c94:	0300001b 	movweq	r0, #27
    4c98:	a3190259 	tstge	r9, #-1879048187	; 0x90000005
    4c9c:	03000000 	movweq	r0, #0
    4ca0:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    4ca4:	000009a9 	andeq	r0, r0, r9, lsr #19
    4ca8:	1a025d03 	bne	9c0bc <SYSTICK_CYCLES+0x7307d>
    4cac:	00000076 	andeq	r0, r0, r6, ror r0
    4cb0:	01cc2303 	biceq	r2, ip, r3, lsl #6
    4cb4:	00048107 	andeq	r8, r4, r7, lsl #2
    4cb8:	02780300 	rsbseq	r0, r8, #0, 6
    4cbc:	0000a319 	andeq	sl, r0, r9, lsl r3
    4cc0:	d0230300 	eorle	r0, r3, r0, lsl #6
    4cc4:	040a0001 	streq	r0, [sl], #-1
    4cc8:	0000015f 	andeq	r0, r0, pc, asr r1
    4ccc:	048a0108 	streq	r0, [sl], #264	; 0x108
    4cd0:	73090000 	movwvc	r0, #36864	; 0x9000
    4cd4:	09000004 	stmdbeq	r0, {r2}
    4cd8:	000000a3 	andeq	r0, r0, r3, lsr #1
    4cdc:	79040a00 	stmdbvc	r4, {r9, fp}
    4ce0:	06000004 	streq	r0, [r0], -r4
    4ce4:	00000798 	muleq	r0, r8, r7
    4ce8:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    4cec:	00056f10 	andeq	r6, r5, r0, lsl pc
    4cf0:	018d0700 	orreq	r0, sp, r0, lsl #14
    4cf4:	82030000 	andhi	r0, r3, #0
    4cf8:	00a31903 	adceq	r1, r3, r3, lsl #18
    4cfc:	23020000 	movwcs	r0, #8192	; 0x2000
    4d00:	087c0700 	ldmdaeq	ip!, {r8, r9, sl}^
    4d04:	85030000 	strhi	r0, [r3, #-0]
    4d08:	01591a03 	cmpeq	r9, r3, lsl #20
    4d0c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d10:	06e10704 	strbteq	r0, [r1], r4, lsl #14
    4d14:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    4d18:	00971903 	addseq	r1, r7, r3, lsl #18
    4d1c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d20:	04cb0708 	strbeq	r0, [fp], #1800	; 0x708
    4d24:	8c030000 	stchi	0, cr0, [r3], {-0}
    4d28:	067a1a03 	ldrbteq	r1, [sl], -r3, lsl #20
    4d2c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d30:	0162070c 	cmneq	r2, ip, lsl #14
    4d34:	90030000 	andls	r0, r3, r0
    4d38:	00971903 	addseq	r1, r7, r3, lsl #18
    4d3c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d40:	01210710 			; <UNDEFINED> instruction: 0x01210710
    4d44:	93030000 	movwls	r0, #12288	; 0x3000
    4d48:	00971903 	addseq	r1, r7, r3, lsl #18
    4d4c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d50:	08b20714 	ldmeq	r2!, {r2, r4, r8, r9, sl}
    4d54:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    4d58:	04731a03 	ldrbteq	r1, [r3], #-2563	; 0xfffff5fd
    4d5c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d60:	06c80718 			; <UNDEFINED> instruction: 0x06c80718
    4d64:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    4d68:	00971903 	addseq	r1, r7, r3, lsl #18
    4d6c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d70:	05b8071c 	ldreq	r0, [r8, #1820]!	; 0x71c
    4d74:	9d030000 	stcls	0, cr0, [r3, #-0]
    4d78:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 437d <_Min_Stack_Size+0x337d>
    4d7c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d80:	06850720 	streq	r0, [r5], r0, lsr #14
    4d84:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    4d88:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 438d <_Min_Stack_Size+0x338d>
    4d8c:	23020000 	movwcs	r0, #8192	; 0x2000
    4d90:	01d00724 	bicseq	r0, r0, r4, lsr #14
    4d94:	a2030000 	andge	r0, r3, #0
    4d98:	00971903 	addseq	r1, r7, r3, lsl #18
    4d9c:	23020000 	movwcs	r0, #8192	; 0x2000
    4da0:	09c50728 	stmibeq	r5, {r3, r5, r8, r9, sl}^
    4da4:	a6030000 	strge	r0, [r3], -r0
    4da8:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 43ad <_Min_Stack_Size+0x33ad>
    4dac:	23020000 	movwcs	r0, #8192	; 0x2000
    4db0:	0425072c 	strteq	r0, [r5], #-1836	; 0xfffff8d4
    4db4:	a7030000 	strge	r0, [r3, -r0]
    4db8:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 43bd <_Min_Stack_Size+0x33bd>
    4dbc:	23020000 	movwcs	r0, #8192	; 0x2000
    4dc0:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    4dc4:	00000490 	muleq	r0, r0, r4
    4dc8:	0008d40b 	andeq	sp, r8, fp, lsl #8
    4dcc:	02860300 	addeq	r0, r6, #0, 6
    4dd0:	00015f03 	andeq	r5, r1, r3, lsl #30
    4dd4:	8b040a00 	blhi	1075dc <__RAM_SIZE+0x75dc>
    4dd8:	06000000 	streq	r0, [r0], -r0
    4ddc:	00000460 	andeq	r0, r0, r0, ror #8
    4de0:	02d90334 	sbcseq	r0, r9, #52, 6	; 0xd0000000
    4de4:	00066710 	andeq	r6, r6, r0, lsl r7
    4de8:	04010700 	streq	r0, [r1], #-1792	; 0xfffff900
    4dec:	dd030000 	stcle	0, cr0, [r3, #-0]
    4df0:	00a31902 	adceq	r1, r3, r2, lsl #18
    4df4:	23020000 	movwcs	r0, #8192	; 0x2000
    4df8:	03740700 	cmneq	r4, #0, 14
    4dfc:	e0030000 	and	r0, r3, r0
    4e00:	01591a02 	cmpeq	r9, r2, lsl #20
    4e04:	23020000 	movwcs	r0, #8192	; 0x2000
    4e08:	07550704 	ldrbeq	r0, [r5, -r4, lsl #14]
    4e0c:	e3030000 	movw	r0, #12288	; 0x3000
    4e10:	00a31902 	adceq	r1, r3, r2, lsl #18
    4e14:	23020000 	movwcs	r0, #8192	; 0x2000
    4e18:	089b0708 	ldmeq	fp, {r3, r8, r9, sl}
    4e1c:	e6030000 	str	r0, [r3], -r0
    4e20:	00971902 	addseq	r1, r7, r2, lsl #18
    4e24:	23020000 	movwcs	r0, #8192	; 0x2000
    4e28:	07f0070c 	ldrbeq	r0, [r0, ip, lsl #14]!
    4e2c:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    4e30:	05821a02 	streq	r1, [r2, #2562]	; 0xa02
    4e34:	23020000 	movwcs	r0, #8192	; 0x2000
    4e38:	11070710 	tstne	r7, r0, lsl r7
    4e3c:	ed030000 	stc	0, cr0, [r3, #-0]
    4e40:	05821a02 	streq	r1, [r2, #2562]	; 0xa02
    4e44:	23020000 	movwcs	r0, #8192	; 0x2000
    4e48:	05280714 	streq	r0, [r8, #-1812]!	; 0xfffff8ec
    4e4c:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    4e50:	05821a02 	streq	r1, [r2, #2562]	; 0xa02
    4e54:	23020000 	movwcs	r0, #8192	; 0x2000
    4e58:	03060718 	movweq	r0, #26392	; 0x6718
    4e5c:	f3030000 	vhadd.u8	d0, d3, d0
    4e60:	00a31902 	adceq	r1, r3, r2, lsl #18
    4e64:	23020000 	movwcs	r0, #8192	; 0x2000
    4e68:	0972071c 	ldmdbeq	r2!, {r2, r3, r4, r8, r9, sl}^
    4e6c:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    4e70:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    4e74:	23020000 	movwcs	r0, #8192	; 0x2000
    4e78:	04ae0720 	strteq	r0, [lr], #1824	; 0x720
    4e7c:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    4e80:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    4e84:	23020000 	movwcs	r0, #8192	; 0x2000
    4e88:	050b0724 	streq	r0, [fp, #-1828]	; 0xfffff8dc
    4e8c:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    4e90:	00971902 	addseq	r1, r7, r2, lsl #18
    4e94:	23020000 	movwcs	r0, #8192	; 0x2000
    4e98:	02a70728 	adceq	r0, r7, #40, 14	; 0xa00000
    4e9c:	03030000 	movweq	r0, #12288	; 0x3000
    4ea0:	06671a03 	strbteq	r1, [r7], -r3, lsl #20
    4ea4:	23020000 	movwcs	r0, #8192	; 0x2000
    4ea8:	085e072c 	ldmdaeq	lr, {r2, r3, r5, r8, r9, sl}^
    4eac:	04030000 	streq	r0, [r3], #-0
    4eb0:	06671a03 	strbteq	r1, [r7], -r3, lsl #20
    4eb4:	23020000 	movwcs	r0, #8192	; 0x2000
    4eb8:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    4ebc:	00000588 	andeq	r0, r0, r8, lsl #11
    4ec0:	0004740b 	andeq	r7, r4, fp, lsl #8
    4ec4:	03230300 			; <UNDEFINED> instruction: 0x03230300
    4ec8:	00058803 	andeq	r8, r5, r3, lsl #16
    4ecc:	75040a00 	strvc	r0, [r4, #-2560]	; 0xfffff600
    4ed0:	0a000005 	beq	4eec <_Min_Stack_Size+0x3eec>
    4ed4:	0000a304 	andeq	sl, r0, r4, lsl #6
    4ed8:	12350c00 	eorsne	r0, r5, #0, 24
    4edc:	7b040000 	blvc	104ee4 <__RAM_SIZE+0x4ee4>
    4ee0:	00069425 	andeq	r9, r6, r5, lsr #8
    4ee4:	0a010100 	beq	452ec <SYSTICK_CYCLES+0x1c2ad>
    4ee8:	00066d04 	andeq	r6, r6, r4, lsl #26
    4eec:	12620c00 	rsbne	r0, r2, #0, 24
    4ef0:	80040000 	andhi	r0, r4, r0
    4ef4:	0000a325 	andeq	sl, r0, r5, lsr #6
    4ef8:	0d010100 	stfeqs	f0, [r1, #-0]
    4efc:	00120d01 	andseq	r0, r2, r1, lsl #26
    4f00:	074b0100 	strbeq	r0, [fp, -r0, lsl #2]
    4f04:	00009701 	andeq	r9, r0, r1, lsl #14
    4f08:	001bf400 	andseq	pc, fp, r0, lsl #8
    4f0c:	001c7c10 	andseq	r7, ip, r0, lsl ip
    4f10:	002bdf10 	eoreq	sp, fp, r0, lsl pc
    4f14:	08310100 	ldmdaeq	r1!, {r8}
    4f18:	f10e0000 	cpsid	,#0
    4f1c:	0100000e 	tsteq	r0, lr
    4f20:	06942a4b 	ldreq	r2, [r4], fp, asr #20
    4f24:	2c030000 	stccs	0, cr0, [r3], {-0}
    4f28:	2bff0000 	blcs	fffc4f30 <__RAM_segment_used_end__+0xc7ec4f30>
    4f2c:	b00e0000 	andlt	r0, lr, r0
    4f30:	01000011 	tsteq	r0, r1, lsl r0
    4f34:	01593a4b 	cmpeq	r9, fp, asr #20
    4f38:	2c250000 	stccs	0, cr0, [r5], #-0
    4f3c:	2c210000 	stccs	0, cr0, [r1], #-0
    4f40:	300e0000 	andcc	r0, lr, r0
    4f44:	01000005 	tsteq	r0, r5
    4f48:	00764a4b 	rsbseq	r4, r6, fp, asr #20
    4f4c:	2c470000 	marcs	acc0, r0, r7
    4f50:	2c430000 	marcs	acc0, r0, r3
    4f54:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    4f58:	01000003 	tsteq	r0, r3
    4f5c:	00a35c4b 	adceq	r5, r3, fp, asr #24
    4f60:	2c6f0000 	stclcs	0, cr0, [pc], #-0	; 4f68 <_Min_Stack_Size+0x3f68>
    4f64:	2c650000 	stclcs	0, cr0, [r5], #-0
    4f68:	e20f0000 	and	r0, pc, #0
    4f6c:	0100000e 	tsteq	r0, lr
    4f70:	0097014e 	addseq	r0, r7, lr, asr #2
    4f74:	2cb60000 	ldccs	0, cr0, [r6]
    4f78:	2cb40000 	ldccs	0, cr0, [r4]
    4f7c:	f10f0000 			; <UNDEFINED> instruction: 0xf10f0000
    4f80:	0100000f 	tsteq	r0, pc
    4f84:	05821650 	streq	r1, [r2, #1616]	; 0x650
    4f88:	2cd50000 	ldclcs	0, cr0, [r5], {0}
    4f8c:	2cc90000 	stclcs	0, cr0, [r9], {0}
    4f90:	220f0000 	andcs	r0, pc, #0
    4f94:	01000012 	tsteq	r0, r2, lsl r0
    4f98:	08311751 	ldmdaeq	r1!, {r0, r4, r6, r8, r9, sl, ip}
    4f9c:	2d290000 	stccs	0, cr0, [r9, #-0]
    4fa0:	2d230000 	stccs	0, cr0, [r3, #-0]
    4fa4:	590f0000 	stmdbpl	pc, {}	; <UNPREDICTABLE>
    4fa8:	01000012 	tsteq	r0, r2, lsl r0
    4fac:	05821652 	streq	r1, [r2, #1618]	; 0x652
    4fb0:	2d580000 	ldclcs	0, cr0, [r8, #-0]
    4fb4:	2d540000 	ldclcs	0, cr0, [r4, #-0]
    4fb8:	4f0f0000 	svcmi	0x000f0000
    4fbc:	01000012 	tsteq	r0, r2, lsl r0
    4fc0:	06941653 			; <UNDEFINED> instruction: 0x06941653
    4fc4:	2d780000 	ldclcs	0, cr0, [r8, #-0]
    4fc8:	2d760000 	ldclcs	0, cr0, [r6, #-0]
    4fcc:	7e0f0000 	cdpvc	0, 0, cr0, cr15, cr0, {0}
    4fd0:	01000012 	tsteq	r0, r2, lsl r0
    4fd4:	06941654 			; <UNDEFINED> instruction: 0x06941654
    4fd8:	2d8d0000 	stccs	0, cr0, [sp]
    4fdc:	2d8b0000 	stccs	0, cr0, [fp]
    4fe0:	f30f0000 	vhadd.u8	d0, d15, d0
    4fe4:	01000011 	tsteq	r0, r1, lsl r0
    4fe8:	06801655 	pkhtbeq	r1, r0, r5, asr #12
    4fec:	2da20000 	stccs	0, cr0, [r2]
    4ff0:	2da00000 	stccs	0, cr0, [r0]
    4ff4:	37100000 	ldrcc	r0, [r0, -r0]
    4ff8:	36000008 	strcc	r0, [r0], -r8
    4ffc:	0110001c 	tsteq	r0, ip, lsl r0
    5000:	10001c36 	andne	r1, r0, r6, lsr ip
    5004:	10001c3c 	andne	r1, r0, ip, lsr ip
    5008:	ee059201 	cdp	2, 0, cr9, cr5, cr1, {0}
    500c:	11000007 	tstne	r0, r7
    5010:	0000084a 	andeq	r0, r0, sl, asr #16
    5014:	00002db9 			; <UNDEFINED> instruction: 0x00002db9
    5018:	00002db7 			; <UNDEFINED> instruction: 0x00002db7
    501c:	00087512 	andeq	r7, r8, r2, lsl r5
    5020:	001c3600 	andseq	r3, ip, r0, lsl #12
    5024:	1c360410 	cfldrsne	mvf0, [r6], #-64	; 0xffffffc0
    5028:	1c3a1000 	ldcne	0, cr1, [sl], #-0
    502c:	56021000 	strpl	r1, [r2], -r0
    5030:	88111302 	ldmdahi	r1, {r1, r8, r9, ip}
    5034:	ce000008 	cdpgt	0, 0, cr0, cr0, cr8, {0}
    5038:	cc00002d 	stcgt	0, cr0, [r0], {45}	; 0x2d
    503c:	0000002d 	andeq	r0, r0, sp, lsr #32
    5040:	08581000 	ldmdaeq	r8, {ip}^
    5044:	1c540000 	mrane	r0, r4, acc0
    5048:	54011000 	strpl	r1, [r1], #-0
    504c:	5810001c 	ldmdapl	r0, {r2, r3, r4}
    5050:	0110001c 	tsteq	r0, ip, lsl r0
    5054:	081505c1 	ldmdaeq	r5, {r0, r6, r7, r8, sl}
    5058:	67130000 	ldrvs	r0, [r3, -r0]
    505c:	e3000008 	movw	r0, #8
    5060:	e100002d 	tst	r0, sp, lsr #32
    5064:	0000002d 	andeq	r0, r0, sp, lsr #32
    5068:	001c0614 	andseq	r0, ip, r4, lsl r6
    506c:	00089610 	andeq	r9, r8, r0, lsl r6
    5070:	50011500 	andpl	r1, r1, r0, lsl #10
    5074:	15007402 	strne	r7, [r0, #-1026]	; 0xfffffbfe
    5078:	30015101 	andcc	r5, r1, r1, lsl #2
    507c:	02520115 	subseq	r0, r2, #1073741829	; 0x40000005
    5080:	00003408 	andeq	r3, r0, r8, lsl #8
    5084:	0582040a 	streq	r0, [r2, #1034]	; 0x40a
    5088:	18160000 	ldmdane	r6, {}	; <UNPREDICTABLE>
    508c:	0200000f 	andeq	r0, r0, #15
    5090:	01370252 	teqeq	r7, r2, asr r2
    5094:	00000097 	muleq	r0, r7, r0
    5098:	00085803 	andeq	r5, r8, r3, lsl #16
    509c:	0ea11700 	cdpeq	7, 10, cr1, cr1, cr0, {0}
    50a0:	54020000 	strpl	r0, [r2], #-0
    50a4:	00970602 	addseq	r0, r7, r2, lsl #12
    50a8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    50ac:	00000e8d 	andeq	r0, r0, sp, lsl #29
    50b0:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    50b4:	08750301 	ldmdaeq	r5!, {r0, r8, r9}^
    50b8:	a1190000 	tstge	r9, r0
    50bc:	0200000e 	andeq	r0, r0, #14
    50c0:	97500249 	ldrbls	r0, [r0, -r9, asr #4]
    50c4:	00000000 	andeq	r0, r0, r0
    50c8:	000eb616 	andeq	fp, lr, r6, lsl r6
    50cc:	02320200 	eorseq	r0, r2, #0, 4
    50d0:	00970137 	addseq	r0, r7, r7, lsr r1
    50d4:	96030000 	strls	r0, [r3], -r0
    50d8:	17000008 	strne	r0, [r0, -r8]
    50dc:	00000ea5 	andeq	r0, r0, r5, lsr #29
    50e0:	06023402 	streq	r3, [r2], -r2, lsl #8
    50e4:	00000097 	muleq	r0, r7, r0
    50e8:	01011a00 	tsteq	r1, r0, lsl #20
    50ec:	00001206 	andeq	r1, r0, r6, lsl #4
    50f0:	000011fc 	strdeq	r1, [r0], -ip
    50f4:	63000005 	movwvs	r0, #5
    50f8:	02000009 	andeq	r0, r0, #9
    50fc:	000dd500 	andeq	sp, sp, r0, lsl #10
    5100:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    5104:	0c000000 	stceq	0, cr0, [r0], {-0}
    5108:	000012c0 	andeq	r1, r0, r0, asr #5
    510c:	00000641 	andeq	r0, r0, r1, asr #12
    5110:	00000258 	andeq	r0, r0, r8, asr r2
	...
    511c:	00002271 	andeq	r2, r0, r1, ror r2
    5120:	39070402 	stmdbcc	r7, {r1, sl}
    5124:	03000002 	movweq	r0, #2
    5128:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    512c:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    5130:	0004e805 	andeq	lr, r4, r5, lsl #16
    5134:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    5138:	00000623 	andeq	r0, r0, r3, lsr #12
    513c:	52060102 	andpl	r0, r6, #-2147483648	; 0x80000000
    5140:	02000008 	andeq	r0, r0, #8
    5144:	08500801 	ldmdaeq	r0, {r0, fp}^
    5148:	02020000 	andeq	r0, r2, #0
    514c:	0006b405 	andeq	fp, r6, r5, lsl #8
    5150:	07020200 	streq	r0, [r2, -r0, lsl #4]
    5154:	0000091e 	andeq	r0, r0, lr, lsl r9
    5158:	ed050402 	cfstrs	mvf0, [r5, #-8]
    515c:	02000004 	andeq	r0, r0, #4
    5160:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    5164:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5168:	00022f07 	andeq	r2, r2, r7, lsl #30
    516c:	02040400 	andeq	r0, r4, #0, 8
    5170:	08590801 	ldmdaeq	r9, {r0, fp}^
    5174:	df050000 	svcle	0x00050000
    5178:	02000008 	andeq	r0, r0, #8
    517c:	00783173 	rsbseq	r3, r8, r3, ror r1
    5180:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    5184:	02000008 	andeq	r0, r0, #8
    5188:	004c3174 	subeq	r3, ip, r4, ror r1
    518c:	7f050000 	svcvc	0x00050000
    5190:	02000007 	andeq	r0, r0, #7
    5194:	00293176 	eoreq	r3, r9, r6, ror r1
    5198:	11050000 	mrsne	r0, (UNDEF: 5)
    519c:	02000007 	andeq	r0, r0, #7
    51a0:	00683178 	rsbeq	r3, r8, r8, ror r1
    51a4:	3b060000 	blcc	1851ac <__RAM_SIZE+0x851ac>
    51a8:	1c000005 	stcne	0, cr0, [r0], {5}
    51ac:	10018203 	andne	r8, r1, r3, lsl #4
    51b0:	0000012e 	andeq	r0, r0, lr, lsr #2
    51b4:	00081207 	andeq	r1, r8, r7, lsl #4
    51b8:	01860300 	orreq	r0, r6, r0, lsl #6
    51bc:	0000a319 	andeq	sl, r0, r9, lsl r3
    51c0:	00230200 	eoreq	r0, r3, r0, lsl #4
    51c4:	0003a007 	andeq	sl, r3, r7
    51c8:	01870300 	orreq	r0, r7, r0, lsl #6
    51cc:	0000a319 	andeq	sl, r0, r9, lsl r3
    51d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    51d4:	00043d07 	andeq	r3, r4, r7, lsl #26
    51d8:	018a0300 	orreq	r0, sl, r0, lsl #6
    51dc:	00013a1b 	andeq	r3, r1, fp, lsl sl
    51e0:	08230200 	stmdaeq	r3!, {r9}
    51e4:	0001f207 	andeq	pc, r1, r7, lsl #4
    51e8:	018b0300 	orreq	r0, fp, r0, lsl #6
    51ec:	0000a319 	andeq	sl, r0, r9, lsl r3
    51f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    51f4:	00095407 	andeq	r5, r9, r7, lsl #8
    51f8:	01910300 	orrseq	r0, r1, r0, lsl #6
    51fc:	0001401a 	andeq	r4, r1, sl, lsl r0
    5200:	10230200 	eorne	r0, r3, r0, lsl #4
    5204:	00001b07 	andeq	r1, r0, r7, lsl #22
    5208:	01920300 	orrseq	r0, r2, r0, lsl #6
    520c:	0001401a 	andeq	r4, r1, sl, lsl r0
    5210:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    5214:	0005ee07 	andeq	lr, r5, r7, lsl #28
    5218:	01960300 	orrseq	r0, r6, r0, lsl #6
    521c:	0001461b 	andeq	r4, r1, fp, lsl r6
    5220:	18230200 	stmdane	r3!, {r9}
    5224:	3a010800 	bcc	4722c <SYSTICK_CYCLES+0x1e1ed>
    5228:	09000001 	stmdbeq	r0, {r0}
    522c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5230:	2e040a00 	vmlacs.f32	s0, s8, s0
    5234:	0a000001 	beq	5240 <_Min_Stack_Size+0x4240>
    5238:	0000af04 	andeq	sl, r0, r4, lsl #30
    523c:	40040a00 	andmi	r0, r4, r0, lsl #20
    5240:	0b000001 	bleq	524c <_Min_Stack_Size+0x424c>
    5244:	0000062f 	andeq	r0, r0, pc, lsr #12
    5248:	03019b03 	movweq	r9, #6915	; 0x1b03
    524c:	000000af 	andeq	r0, r0, pc, lsr #1
    5250:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    5254:	4b060000 	blmi	18525c <__RAM_SIZE+0x8525c>
    5258:	d4000003 	strle	r0, [r0], #-3
    525c:	1001d603 	andne	sp, r1, r3, lsl #12
    5260:	00000473 	andeq	r0, r0, r3, ror r4
    5264:	00091107 	andeq	r1, r9, r7, lsl #2
    5268:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    526c:	0000a319 	andeq	sl, r0, r9, lsl r3
    5270:	00230200 	eoreq	r0, r3, r0, lsl #4
    5274:	00078407 	andeq	r8, r7, r7, lsl #8
    5278:	01de0300 	bicseq	r0, lr, r0, lsl #6
    527c:	0000a319 	andeq	sl, r0, r9, lsl r3
    5280:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    5284:	0001bc07 	andeq	fp, r1, r7, lsl #24
    5288:	01df0300 	bicseq	r0, pc, r0, lsl #6
    528c:	0000761a 	andeq	r7, r0, sl, lsl r6
    5290:	08230200 	stmdaeq	r3!, {r9}
    5294:	0008fb07 	andeq	pc, r8, r7, lsl #22
    5298:	01e00300 	mvneq	r0, r0, lsl #6
    529c:	0000761a 	andeq	r7, r0, sl, lsl r6
    52a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    52a4:	00041107 	andeq	r1, r4, r7, lsl #2
    52a8:	01e10300 	mvneq	r0, r0, lsl #6
    52ac:	0000761a 	andeq	r7, r0, sl, lsl r6
    52b0:	10230200 	eorne	r0, r3, r0, lsl #4
    52b4:	00093f07 	andeq	r3, r9, r7, lsl #30
    52b8:	01e20300 	mvneq	r0, r0, lsl #6
    52bc:	0000a319 	andeq	sl, r0, r9, lsl r3
    52c0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    52c4:	0021d107 	eoreq	sp, r1, r7, lsl #2
    52c8:	01e30300 	mvneq	r0, r0, lsl #6
    52cc:	0000a319 	andeq	sl, r0, r9, lsl r3
    52d0:	18230200 	stmdane	r3!, {r9}
    52d4:	00060a07 	andeq	r0, r6, r7, lsl #20
    52d8:	01e40300 	mvneq	r0, r0, lsl #6
    52dc:	0000a319 	andeq	sl, r0, r9, lsl r3
    52e0:	1c230200 	sfmne	f0, 4, [r3], #-0
    52e4:	00069f07 	andeq	r9, r6, r7, lsl #30
    52e8:	01e80300 	mvneq	r0, r0, lsl #6
    52ec:	0004731a 	andeq	r7, r4, sl, lsl r3
    52f0:	20230200 	eorcs	r0, r3, r0, lsl #4
    52f4:	00019907 	andeq	r9, r1, r7, lsl #18
    52f8:	01e90300 	mvneq	r0, r0, lsl #6
    52fc:	0004731a 	andeq	r7, r4, sl, lsl r3
    5300:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    5304:	00059607 	andeq	r9, r5, r7, lsl #12
    5308:	01f10300 	mvnseq	r0, r0, lsl #6
    530c:	0001591a 	andeq	r5, r1, sl, lsl r9
    5310:	28230200 	stmdacs	r3!, {r9}
    5314:	0002d907 	andeq	sp, r2, r7, lsl #18
    5318:	01f20300 	mvnseq	r0, r0, lsl #6
    531c:	00009719 	andeq	r9, r0, r9, lsl r7
    5320:	2c230200 	sfmcs	f0, 4, [r3], #-0
    5324:	00024607 	andeq	r4, r2, r7, lsl #12
    5328:	01f30300 	mvnseq	r0, r0, lsl #6
    532c:	00009719 	andeq	r9, r0, r9, lsl r7
    5330:	30230200 	eorcc	r0, r3, r0, lsl #4
    5334:	00017307 	andeq	r7, r1, r7, lsl #6
    5338:	01f40300 	mvnseq	r0, r0, lsl #6
    533c:	00009719 	andeq	r9, r0, r9, lsl r7
    5340:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    5344:	00073007 	andeq	r3, r7, r7
    5348:	01f50300 	mvnseq	r0, r0, lsl #6
    534c:	00009719 	andeq	r9, r0, r9, lsl r7
    5350:	38230200 	stmdacc	r3!, {r9}
    5354:	0000eb07 	andeq	lr, r0, r7, lsl #22
    5358:	01f60300 	mvnseq	r0, r0, lsl #6
    535c:	00009719 	andeq	r9, r0, r9, lsl r7
    5360:	3c230200 	sfmcc	f0, 4, [r3], #-0
    5364:	00035c07 	andeq	r5, r3, r7, lsl #24
    5368:	01fb0300 	mvnseq	r0, r0, lsl #6
    536c:	00048a1b 	andeq	r8, r4, fp, lsl sl
    5370:	40230200 	eormi	r0, r3, r0, lsl #4
    5374:	00015207 	andeq	r5, r1, r7, lsl #4
    5378:	02030300 	andeq	r0, r3, #0, 6
    537c:	00013a1b 	andeq	r3, r1, fp, lsl sl
    5380:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    5384:	00010707 	andeq	r0, r1, r7, lsl #14
    5388:	02040300 	andeq	r0, r4, #0, 6
    538c:	0000a319 	andeq	sl, r0, r9, lsl r3
    5390:	48230200 	stmdami	r3!, {r9}
    5394:	00033b07 	andeq	r3, r3, r7, lsl #22
    5398:	02080300 	andeq	r0, r8, #0, 6
    539c:	00014c19 	andeq	r4, r1, r9, lsl ip
    53a0:	4c230200 	sfmmi	f0, 4, [r3], #-0
    53a4:	0002ec07 	andeq	lr, r2, r7, lsl #24
    53a8:	020e0300 	andeq	r0, lr, #0, 6
    53ac:	00048a1b 	andeq	r8, r4, fp, lsl sl
    53b0:	68230200 	stmdavs	r3!, {r9}
    53b4:	0005ce07 	andeq	ip, r5, r7, lsl #28
    53b8:	020f0300 	andeq	r0, pc, #0, 6
    53bc:	0000761a 	andeq	r7, r0, sl, lsl r6
    53c0:	6c230200 	sfmvs	f0, 4, [r3], #-0
    53c4:	00071707 	andeq	r1, r7, r7, lsl #14
    53c8:	02110300 	andseq	r0, r1, #0, 6
    53cc:	0004731a 	andeq	r7, r4, sl, lsl r3
    53d0:	70230200 	eorvc	r0, r3, r0, lsl #4
    53d4:	00021207 	andeq	r1, r2, r7, lsl #4
    53d8:	02120300 	andseq	r0, r2, #0, 6
    53dc:	0004731a 	andeq	r7, r4, sl, lsl r3
    53e0:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    53e4:	0006fa07 	andeq	pc, r6, r7, lsl #20
    53e8:	02130300 	andseq	r0, r3, #0, 6
    53ec:	0000a319 	andeq	sl, r0, r9, lsl r3
    53f0:	78230200 	stmdavc	r3!, {r9}
    53f4:	0003c607 	andeq	ip, r3, r7, lsl #12
    53f8:	02140300 	andseq	r0, r4, #0, 6
    53fc:	0000761a 	andeq	r7, r0, sl, lsl r6
    5400:	7c230200 	sfmvc	f0, 4, [r3], #-0
    5404:	00055407 	andeq	r5, r5, r7, lsl #8
    5408:	02150300 	andseq	r0, r5, #0, 6
    540c:	00009719 	andeq	r9, r0, r9, lsl r7
    5410:	80230300 	eorhi	r0, r3, r0, lsl #6
    5414:	03e80701 	mvneq	r0, #262144	; 0x40000
    5418:	16030000 	strne	r0, [r3], -r0
    541c:	00971902 	addseq	r1, r7, r2, lsl #18
    5420:	23030000 	movwcs	r0, #12288	; 0x3000
    5424:	e4070184 	str	r0, [r7], #-388	; 0xfffffe7c
    5428:	03000008 	movweq	r0, #8
    542c:	731a021f 	tstvc	sl, #-268435455	; 0xf0000001
    5430:	03000004 	movweq	r0, #4
    5434:	07018823 	streq	r8, [r1, -r3, lsr #16]
    5438:	000007d5 	ldrdeq	r0, [r0], -r5
    543c:	1a022003 	bne	8d450 <SYSTICK_CYCLES+0x64411>
    5440:	00000473 	andeq	r0, r0, r3, ror r4
    5444:	018c2303 	orreq	r2, ip, r3, lsl #6
    5448:	0002c107 	andeq	ip, r2, r7, lsl #2
    544c:	022e0300 	eoreq	r0, lr, #0, 6
    5450:	00009719 	andeq	r9, r0, r9, lsl r7
    5454:	90230300 	eorls	r0, r3, r0, lsl #6
    5458:	02560701 	subseq	r0, r6, #262144	; 0x40000
    545c:	2f030000 	svccs	0x00030000
    5460:	00971902 	addseq	r1, r7, r2, lsl #18
    5464:	23030000 	movwcs	r0, #12288	; 0x3000
    5468:	20070194 	mulcs	r7, r4, r1
    546c:	03000003 	movweq	r0, #3
    5470:	97190230 			; <UNDEFINED> instruction: 0x97190230
    5474:	03000000 	movweq	r0, #0
    5478:	07019823 	streq	r9, [r1, -r3, lsr #16]
    547c:	00000277 	andeq	r0, r0, r7, ror r2
    5480:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    5484:	00000097 	muleq	r0, r7, r0
    5488:	019c2303 	orrseq	r2, ip, r3, lsl #6
    548c:	00000007 	andeq	r0, r0, r7
    5490:	02350300 	eorseq	r0, r5, #0, 6
    5494:	00056f1a 	andeq	r6, r5, sl, lsl pc
    5498:	a0230300 	eorge	r0, r3, r0, lsl #6
    549c:	1bb70701 	blne	fedc70a8 <__RAM_segment_used_end__+0xc6cc70a8>
    54a0:	3a030000 	bcc	c54a8 <SYSTICK_CYCLES+0x9c469>
    54a4:	00a31902 	adceq	r1, r3, r2, lsl #18
    54a8:	23030000 	movwcs	r0, #12288	; 0x3000
    54ac:	770701a4 	strvc	r0, [r7, -r4, lsr #3]
    54b0:	0300001c 	movweq	r0, #28
    54b4:	a319023d 	tstge	r9, #-805306365	; 0xd0000003
    54b8:	03000000 	movweq	r0, #0
    54bc:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    54c0:	00001b30 	andeq	r1, r0, r0, lsr fp
    54c4:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    54c8:	000000a3 	andeq	r0, r0, r3, lsr #1
    54cc:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    54d0:	001d2e07 	andseq	r2, sp, r7, lsl #28
    54d4:	02450300 	subeq	r0, r5, #0, 6
    54d8:	0000a319 	andeq	sl, r0, r9, lsl r3
    54dc:	b0230300 	eorlt	r0, r3, r0, lsl #6
    54e0:	1c470701 	mcrrne	7, 0, r0, r7, cr1
    54e4:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    54e8:	00a31902 	adceq	r1, r3, r2, lsl #18
    54ec:	23030000 	movwcs	r0, #12288	; 0x3000
    54f0:	a80701b4 	stmdage	r7, {r2, r4, r5, r7, r8}
    54f4:	03000007 	movweq	r0, #7
    54f8:	731a024c 	tstvc	sl, #76, 4	; 0xc0000004
    54fc:	03000004 	movweq	r0, #4
    5500:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    5504:	00001d06 	andeq	r1, r0, r6, lsl #26
    5508:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    550c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5510:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    5514:	001b0807 	andseq	r0, fp, r7, lsl #16
    5518:	02520300 	subseq	r0, r2, #0, 6
    551c:	0000a319 	andeq	sl, r0, r9, lsl r3
    5520:	c0230300 	eorgt	r0, r3, r0, lsl #6
    5524:	1a850701 	bne	fe147130 <__RAM_segment_used_end__+0xc6047130>
    5528:	55030000 	strpl	r0, [r3, #-0]
    552c:	00a31902 	adceq	r1, r3, r2, lsl #18
    5530:	23030000 	movwcs	r0, #12288	; 0x3000
    5534:	db0701c4 	blle	1c5c4c <__RAM_SIZE+0xc5c4c>
    5538:	0300001b 	movweq	r0, #27
    553c:	a3190259 	tstge	r9, #-1879048187	; 0x90000005
    5540:	03000000 	movweq	r0, #0
    5544:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    5548:	000009a9 	andeq	r0, r0, r9, lsr #19
    554c:	1a025d03 	bne	9c960 <SYSTICK_CYCLES+0x73921>
    5550:	00000076 	andeq	r0, r0, r6, ror r0
    5554:	01cc2303 	biceq	r2, ip, r3, lsl #6
    5558:	00048107 	andeq	r8, r4, r7, lsl #2
    555c:	02780300 	rsbseq	r0, r8, #0, 6
    5560:	0000a319 	andeq	sl, r0, r9, lsl r3
    5564:	d0230300 	eorle	r0, r3, r0, lsl #6
    5568:	040a0001 	streq	r0, [sl], #-1
    556c:	0000015f 	andeq	r0, r0, pc, asr r1
    5570:	048a0108 	streq	r0, [sl], #264	; 0x108
    5574:	73090000 	movwvc	r0, #36864	; 0x9000
    5578:	09000004 	stmdbeq	r0, {r2}
    557c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5580:	79040a00 	stmdbvc	r4, {r9, fp}
    5584:	06000004 	streq	r0, [r0], -r4
    5588:	00000798 	muleq	r0, r8, r7
    558c:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    5590:	00056f10 	andeq	r6, r5, r0, lsl pc
    5594:	018d0700 	orreq	r0, sp, r0, lsl #14
    5598:	82030000 	andhi	r0, r3, #0
    559c:	00a31903 	adceq	r1, r3, r3, lsl #18
    55a0:	23020000 	movwcs	r0, #8192	; 0x2000
    55a4:	087c0700 	ldmdaeq	ip!, {r8, r9, sl}^
    55a8:	85030000 	strhi	r0, [r3, #-0]
    55ac:	01591a03 	cmpeq	r9, r3, lsl #20
    55b0:	23020000 	movwcs	r0, #8192	; 0x2000
    55b4:	06e10704 	strbteq	r0, [r1], r4, lsl #14
    55b8:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    55bc:	00971903 	addseq	r1, r7, r3, lsl #18
    55c0:	23020000 	movwcs	r0, #8192	; 0x2000
    55c4:	04cb0708 	strbeq	r0, [fp], #1800	; 0x708
    55c8:	8c030000 	stchi	0, cr0, [r3], {-0}
    55cc:	067a1a03 	ldrbteq	r1, [sl], -r3, lsl #20
    55d0:	23020000 	movwcs	r0, #8192	; 0x2000
    55d4:	0162070c 	cmneq	r2, ip, lsl #14
    55d8:	90030000 	andls	r0, r3, r0
    55dc:	00971903 	addseq	r1, r7, r3, lsl #18
    55e0:	23020000 	movwcs	r0, #8192	; 0x2000
    55e4:	01210710 			; <UNDEFINED> instruction: 0x01210710
    55e8:	93030000 	movwls	r0, #12288	; 0x3000
    55ec:	00971903 	addseq	r1, r7, r3, lsl #18
    55f0:	23020000 	movwcs	r0, #8192	; 0x2000
    55f4:	08b20714 	ldmeq	r2!, {r2, r4, r8, r9, sl}
    55f8:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    55fc:	04731a03 	ldrbteq	r1, [r3], #-2563	; 0xfffff5fd
    5600:	23020000 	movwcs	r0, #8192	; 0x2000
    5604:	06c80718 			; <UNDEFINED> instruction: 0x06c80718
    5608:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    560c:	00971903 	addseq	r1, r7, r3, lsl #18
    5610:	23020000 	movwcs	r0, #8192	; 0x2000
    5614:	05b8071c 	ldreq	r0, [r8, #1820]!	; 0x71c
    5618:	9d030000 	stcls	0, cr0, [r3, #-0]
    561c:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 4c21 <_Min_Stack_Size+0x3c21>
    5620:	23020000 	movwcs	r0, #8192	; 0x2000
    5624:	06850720 	streq	r0, [r5], r0, lsr #14
    5628:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    562c:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 4c31 <_Min_Stack_Size+0x3c31>
    5630:	23020000 	movwcs	r0, #8192	; 0x2000
    5634:	01d00724 	bicseq	r0, r0, r4, lsr #14
    5638:	a2030000 	andge	r0, r3, #0
    563c:	00971903 	addseq	r1, r7, r3, lsl #18
    5640:	23020000 	movwcs	r0, #8192	; 0x2000
    5644:	09c50728 	stmibeq	r5, {r3, r5, r8, r9, sl}^
    5648:	a6030000 	strge	r0, [r3], -r0
    564c:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 4c51 <_Min_Stack_Size+0x3c51>
    5650:	23020000 	movwcs	r0, #8192	; 0x2000
    5654:	0425072c 	strteq	r0, [r5], #-1836	; 0xfffff8d4
    5658:	a7030000 	strge	r0, [r3, -r0]
    565c:	056f1a03 	strbeq	r1, [pc, #-2563]!	; 4c61 <_Min_Stack_Size+0x3c61>
    5660:	23020000 	movwcs	r0, #8192	; 0x2000
    5664:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    5668:	00000490 	muleq	r0, r0, r4
    566c:	0008d40b 	andeq	sp, r8, fp, lsl #8
    5670:	02860300 	addeq	r0, r6, #0, 6
    5674:	00015f03 	andeq	r5, r1, r3, lsl #30
    5678:	8b040a00 	blhi	107e80 <__RAM_SIZE+0x7e80>
    567c:	06000000 	streq	r0, [r0], -r0
    5680:	00000460 	andeq	r0, r0, r0, ror #8
    5684:	02d90334 	sbcseq	r0, r9, #52, 6	; 0xd0000000
    5688:	00066710 	andeq	r6, r6, r0, lsl r7
    568c:	04010700 	streq	r0, [r1], #-1792	; 0xfffff900
    5690:	dd030000 	stcle	0, cr0, [r3, #-0]
    5694:	00a31902 	adceq	r1, r3, r2, lsl #18
    5698:	23020000 	movwcs	r0, #8192	; 0x2000
    569c:	03740700 	cmneq	r4, #0, 14
    56a0:	e0030000 	and	r0, r3, r0
    56a4:	01591a02 	cmpeq	r9, r2, lsl #20
    56a8:	23020000 	movwcs	r0, #8192	; 0x2000
    56ac:	07550704 	ldrbeq	r0, [r5, -r4, lsl #14]
    56b0:	e3030000 	movw	r0, #12288	; 0x3000
    56b4:	00a31902 	adceq	r1, r3, r2, lsl #18
    56b8:	23020000 	movwcs	r0, #8192	; 0x2000
    56bc:	089b0708 	ldmeq	fp, {r3, r8, r9, sl}
    56c0:	e6030000 	str	r0, [r3], -r0
    56c4:	00971902 	addseq	r1, r7, r2, lsl #18
    56c8:	23020000 	movwcs	r0, #8192	; 0x2000
    56cc:	07f0070c 	ldrbeq	r0, [r0, ip, lsl #14]!
    56d0:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    56d4:	05821a02 	streq	r1, [r2, #2562]	; 0xa02
    56d8:	23020000 	movwcs	r0, #8192	; 0x2000
    56dc:	11070710 	tstne	r7, r0, lsl r7
    56e0:	ed030000 	stc	0, cr0, [r3, #-0]
    56e4:	05821a02 	streq	r1, [r2, #2562]	; 0xa02
    56e8:	23020000 	movwcs	r0, #8192	; 0x2000
    56ec:	05280714 	streq	r0, [r8, #-1812]!	; 0xfffff8ec
    56f0:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    56f4:	05821a02 	streq	r1, [r2, #2562]	; 0xa02
    56f8:	23020000 	movwcs	r0, #8192	; 0x2000
    56fc:	03060718 	movweq	r0, #26392	; 0x6718
    5700:	f3030000 	vhadd.u8	d0, d3, d0
    5704:	00a31902 	adceq	r1, r3, r2, lsl #18
    5708:	23020000 	movwcs	r0, #8192	; 0x2000
    570c:	0972071c 	ldmdbeq	r2!, {r2, r3, r4, r8, r9, sl}^
    5710:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    5714:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    5718:	23020000 	movwcs	r0, #8192	; 0x2000
    571c:	04ae0720 	strteq	r0, [lr], #1824	; 0x720
    5720:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    5724:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    5728:	23020000 	movwcs	r0, #8192	; 0x2000
    572c:	050b0724 	streq	r0, [fp, #-1828]	; 0xfffff8dc
    5730:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    5734:	00971902 	addseq	r1, r7, r2, lsl #18
    5738:	23020000 	movwcs	r0, #8192	; 0x2000
    573c:	02a70728 	adceq	r0, r7, #40, 14	; 0xa00000
    5740:	03030000 	movweq	r0, #12288	; 0x3000
    5744:	06671a03 	strbteq	r1, [r7], -r3, lsl #20
    5748:	23020000 	movwcs	r0, #8192	; 0x2000
    574c:	085e072c 	ldmdaeq	lr, {r2, r3, r5, r8, r9, sl}^
    5750:	04030000 	streq	r0, [r3], #-0
    5754:	06671a03 	strbteq	r1, [r7], -r3, lsl #20
    5758:	23020000 	movwcs	r0, #8192	; 0x2000
    575c:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    5760:	00000588 	andeq	r0, r0, r8, lsl #11
    5764:	0004740b 	andeq	r7, r4, fp, lsl #8
    5768:	03230300 			; <UNDEFINED> instruction: 0x03230300
    576c:	00058803 	andeq	r8, r5, r3, lsl #16
    5770:	75040a00 	strvc	r0, [r4, #-2560]	; 0xfffff600
    5774:	0a000005 	beq	5790 <_Min_Stack_Size+0x4790>
    5778:	0000a304 	andeq	sl, r0, r4, lsl #6
    577c:	111b0c00 	tstne	fp, r0, lsl #24
    5780:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    5784:	067a2101 	ldrbteq	r2, [sl], -r1, lsl #2
    5788:	01010000 	mrseq	r0, (UNDEF: 1)
    578c:	066d040a 	strbteq	r0, [sp], -sl, lsl #8
    5790:	010d0000 	mrseq	r0, (UNDEF: 13)
    5794:	00001106 	andeq	r1, r0, r6, lsl #2
    5798:	01095601 	tsteq	r9, r1, lsl #12
    579c:	00000582 	andeq	r0, r0, r2, lsl #11
    57a0:	10001c7c 	andne	r1, r0, ip, ror ip
    57a4:	10001d64 	andne	r1, r0, r4, ror #26
    57a8:	00002df6 	strdeq	r2, [r0], -r6
    57ac:	00090501 	andeq	r0, r9, r1, lsl #10
    57b0:	0ef10e00 	cdpeq	14, 15, cr0, cr1, cr0, {0}
    57b4:	56010000 	strpl	r0, [r1], -r0
    57b8:	0006952c 	andeq	r9, r6, ip, lsr #10
    57bc:	002e2200 	eoreq	r2, lr, r0, lsl #4
    57c0:	002e1600 	eoreq	r1, lr, r0, lsl #12
    57c4:	10da0e00 	sbcsne	r0, sl, r0, lsl #28
    57c8:	56010000 	strpl	r0, [r1], -r0
    57cc:	0000a33c 	andeq	sl, r0, ip, lsr r3
    57d0:	002e7b00 	eoreq	r7, lr, r0, lsl #22
    57d4:	002e7500 	eoreq	r7, lr, r0, lsl #10
    57d8:	0ee20f00 	cdpeq	15, 14, cr0, cr2, cr0, {0}
    57dc:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    57e0:	00009701 	andeq	r9, r0, r1, lsl #14
    57e4:	002eab00 	eoreq	sl, lr, r0, lsl #22
    57e8:	002ea700 	eoreq	sl, lr, r0, lsl #14
    57ec:	11260f00 			; <UNDEFINED> instruction: 0x11260f00
    57f0:	5b010000 	blpl	457f8 <SYSTICK_CYCLES+0x1c7b9>
    57f4:	00058212 	andeq	r8, r5, r2, lsl r2
    57f8:	002ed300 	eoreq	sp, lr, r0, lsl #6
    57fc:	002ec900 	eoreq	ip, lr, r0, lsl #18
    5800:	12b70f00 	adcsne	r0, r7, #0, 30
    5804:	5c010000 	stcpl	0, cr0, [r1], {-0}
    5808:	00058212 	andeq	r8, r5, r2, lsl r2
    580c:	002f1a00 	eoreq	r1, pc, r0, lsl #20
    5810:	002f1400 	eoreq	r1, pc, r0, lsl #8
    5814:	13160f00 	tstne	r6, #0, 30
    5818:	5d010000 	stcpl	0, cr0, [r1, #-0]
    581c:	00090513 	andeq	r0, r9, r3, lsl r5
    5820:	002f5300 	eoreq	r5, pc, r0, lsl #6
    5824:	002f4300 	eoreq	r4, pc, r0, lsl #6
    5828:	12a30f00 	adcne	r0, r3, #0, 30
    582c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    5830:	00090513 	andeq	r0, r9, r3, lsl r5
    5834:	002fbd00 	eoreq	fp, pc, r0, lsl #26
    5838:	002fb700 	eoreq	fp, pc, r0, lsl #14
    583c:	13390f00 	teqne	r9, #0, 30
    5840:	5f010000 	svcpl	0x00010000
    5844:	0000a311 	andeq	sl, r0, r1, lsl r3
    5848:	002ff800 	eoreq	pc, pc, r0, lsl #16
    584c:	002fe600 	eoreq	lr, pc, r0, lsl #12
    5850:	132a0f00 			; <UNDEFINED> instruction: 0x132a0f00
    5854:	60010000 	andvs	r0, r1, r0
    5858:	00009711 	andeq	r9, r0, r1, lsl r7
    585c:	00306c00 	eorseq	r6, r0, r0, lsl #24
    5860:	00306600 	eorseq	r6, r0, r0, lsl #12
    5864:	128c0f00 	addne	r0, ip, #0, 30
    5868:	61010000 	mrsvs	r0, (UNDEF: 1)
    586c:	00009711 	andeq	r9, r0, r1, lsl r7
    5870:	00309f00 	eorseq	r9, r0, r0, lsl #30
    5874:	00309500 	eorseq	r9, r0, r0, lsl #10
    5878:	19cf0f00 	stmibne	pc, {r8, r9, sl, fp}^	; <UNPREDICTABLE>
    587c:	62010000 	andvs	r0, r1, #0
    5880:	00067a12 	andeq	r7, r6, r2, lsl sl
    5884:	0030e600 	eorseq	lr, r0, r0, lsl #12
    5888:	0030e000 	eorseq	lr, r0, r0
    588c:	11f30f00 	mvnsne	r0, r0, lsl #30
    5890:	63010000 	movwvs	r0, #4096	; 0x1000
    5894:	00068012 	andeq	r8, r6, r2, lsl r0
    5898:	00311900 	eorseq	r1, r1, r0, lsl #18
    589c:	00310f00 	eorseq	r0, r1, r0, lsl #30
    58a0:	0ead0f00 	cdpeq	15, 10, cr0, cr13, cr0, {0}
    58a4:	64010000 	strvs	r0, [r1], #-0
    58a8:	00058212 	andeq	r8, r5, r2, lsl r2
    58ac:	00317000 	eorseq	r7, r1, r0
    58b0:	00316200 	eorseq	r6, r1, r0, lsl #4
    58b4:	12fa0f00 	rscsne	r0, sl, #0, 30
    58b8:	65010000 	strvs	r0, [r1, #-0]
    58bc:	0000a311 	andeq	sl, r0, r1, lsl r3
    58c0:	0031d900 	eorseq	sp, r1, r0, lsl #18
    58c4:	0031d300 	eorseq	sp, r1, r0, lsl #6
    58c8:	090b1000 	stmdbeq	fp, {ip}
    58cc:	1c7e0000 	ldclne	0, cr0, [lr], #-0
    58d0:	7e0d1000 	cdpvc	0, 0, cr1, cr13, cr0, {0}
    58d4:	8410001c 	ldrhi	r0, [r0], #-28	; 0xffffffe4
    58d8:	0110001c 	tsteq	r0, ip, lsl r0
    58dc:	081d0569 	ldmdaeq	sp, {r0, r3, r5, r6, r8, sl}
    58e0:	1e110000 	cdpne	0, 1, cr0, cr1, cr0, {0}
    58e4:	0c000009 	stceq	0, cr0, [r0], {9}
    58e8:	0a000032 	beq	59b8 <_Min_Stack_Size+0x49b8>
    58ec:	12000032 	andne	r0, r0, #50	; 0x32
    58f0:	00000949 	andeq	r0, r0, r9, asr #18
    58f4:	10001c7e 	andne	r1, r0, lr, ror ip
    58f8:	001c7e10 	andseq	r7, ip, r0, lsl lr
    58fc:	001c8210 	andseq	r8, ip, r0, lsl r2
    5900:	02560210 	subseq	r0, r6, #16, 4
    5904:	09581113 	ldmdbeq	r8, {r0, r1, r4, r8, ip}^
    5908:	32210000 	eorcc	r0, r1, #0
    590c:	321f0000 	andscc	r0, pc, #0
    5910:	00000000 	andeq	r0, r0, r0
    5914:	00092c10 	andeq	r2, r9, r0, lsl ip
    5918:	001ca200 	andseq	sl, ip, r0, lsl #4
    591c:	1ca20110 	stfnes	f0, [r2], #64	; 0x40
    5920:	1ca61000 	stcne	0, cr1, [r6]
    5924:	72011000 	andvc	r1, r1, #0
    5928:	00084409 	andeq	r4, r8, r9, lsl #8
    592c:	093b1300 	ldmdbeq	fp!, {r8, r9, ip}
    5930:	32360000 	eorscc	r0, r6, #0
    5934:	32340000 	eorscc	r0, r4, #0
    5938:	14000000 	strne	r0, [r0], #-0
    593c:	0000092c 	andeq	r0, r0, ip, lsr #18
    5940:	10001ce4 	andne	r1, r0, r4, ror #25
    5944:	001ce401 	andseq	lr, ip, r1, lsl #8
    5948:	001ce810 	andseq	lr, ip, r0, lsl r8
    594c:	01010110 	tsteq	r1, r0, lsl r1
    5950:	00086c0d 	andeq	r6, r8, sp, lsl #24
    5954:	093b1300 	ldmdbeq	fp!, {r8, r9, ip}
    5958:	324b0000 	subcc	r0, fp, #0
    595c:	32490000 	subcc	r0, r9, #0
    5960:	14000000 	strne	r0, [r0], #-0
    5964:	0000090b 	andeq	r0, r0, fp, lsl #18
    5968:	10001ce8 	andne	r1, r0, r8, ror #25
    596c:	001ce802 	andseq	lr, ip, r2, lsl #16
    5970:	001cee10 	andseq	lr, ip, r0, lsl lr
    5974:	01040110 	tsteq	r4, r0, lsl r1
    5978:	0008b80d 	andeq	fp, r8, sp, lsl #16
    597c:	091e1100 	ldmdbeq	lr, {r8, ip}
    5980:	32600000 	rsbcc	r0, r0, #0
    5984:	325e0000 	subscc	r0, lr, #0
    5988:	49120000 	ldmdbmi	r2, {}	; <UNPREDICTABLE>
    598c:	e8000009 	stmda	r0, {r0, r3}
    5990:	0510001c 	ldreq	r0, [r0, #-28]	; 0xffffffe4
    5994:	10001ce8 	andne	r1, r0, r8, ror #25
    5998:	10001cec 	andne	r1, r0, ip, ror #25
    599c:	13025602 	movwne	r5, #9730	; 0x2602
    59a0:	00095811 	andeq	r5, r9, r1, lsl r8
    59a4:	00327500 	eorseq	r7, r2, r0, lsl #10
    59a8:	00327300 	eorseq	r7, r2, r0, lsl #6
    59ac:	14000000 	strne	r0, [r0], #-0
    59b0:	0000092c 	andeq	r0, r0, ip, lsr #18
    59b4:	10001d42 	andne	r1, r0, r2, asr #26
    59b8:	001d4201 	andseq	r4, sp, r1, lsl #4
    59bc:	001d4610 	andseq	r4, sp, r0, lsl r6
    59c0:	014e0110 	cmpeq	lr, r0, lsl r1
    59c4:	0008e00d 	andeq	lr, r8, sp
    59c8:	093b1300 	ldmdbeq	fp!, {r8, r9, ip}
    59cc:	328a0000 	addcc	r0, sl, #0
    59d0:	32880000 	addcc	r0, r8, #0
    59d4:	12000000 	andne	r0, r0, #0
    59d8:	0000092c 	andeq	r0, r0, ip, lsr #18
    59dc:	10001d52 	andne	r1, r0, r2, asr sp
    59e0:	001d5201 	andseq	r5, sp, r1, lsl #4
    59e4:	001d5610 	andseq	r5, sp, r0, lsl r6
    59e8:	01570110 	cmpeq	r7, r0, lsl r1
    59ec:	093b130d 	ldmdbeq	fp!, {r0, r2, r3, r8, r9, ip}
    59f0:	329f0000 	addscc	r0, pc, #0
    59f4:	329d0000 	addscc	r0, sp, #0
    59f8:	00000000 	andeq	r0, r0, r0
    59fc:	0582040a 	streq	r0, [r2, #1034]	; 0x40a
    5a00:	18150000 	ldmdane	r5, {}	; <UNPREDICTABLE>
    5a04:	0200000f 	andeq	r0, r0, #15
    5a08:	01370252 	teqeq	r7, r2, asr r2
    5a0c:	00000097 	muleq	r0, r7, r0
    5a10:	00092c03 	andeq	r2, r9, r3, lsl #24
    5a14:	0ea11600 	cdpeq	6, 10, cr1, cr1, cr0, {0}
    5a18:	54020000 	strpl	r0, [r2], #-0
    5a1c:	00970602 	addseq	r0, r7, r2, lsl #12
    5a20:	17000000 	strne	r0, [r0, -r0]
    5a24:	00000e8d 	andeq	r0, r0, sp, lsl #29
    5a28:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    5a2c:	09490301 	stmdbeq	r9, {r0, r8, r9}^
    5a30:	a1180000 	tstge	r8, r0
    5a34:	0200000e 	andeq	r0, r0, #14
    5a38:	97500249 	ldrbls	r0, [r0, -r9, asr #4]
    5a3c:	00000000 	andeq	r0, r0, r0
    5a40:	000eb619 	andeq	fp, lr, r9, lsl r6
    5a44:	02320200 	eorseq	r0, r2, #0, 4
    5a48:	00970137 	addseq	r0, r7, r7, lsr r1
    5a4c:	16030000 	strne	r0, [r3], -r0
    5a50:	00000ea5 	andeq	r0, r0, r5, lsr #29
    5a54:	06023402 	streq	r3, [r2], -r2, lsl #8
    5a58:	00000097 	muleq	r0, r7, r0
    5a5c:	0bb30000 	bleq	fecc5a64 <__RAM_segment_used_end__+0xc6bc5a64>
    5a60:	00020000 	andeq	r0, r2, r0
    5a64:	00000f71 	andeq	r0, r0, r1, ror pc
    5a68:	003d0104 	eorseq	r0, sp, r4, lsl #2
    5a6c:	8e0c0000 	cdphi	0, 0, cr0, cr12, cr0, {0}
    5a70:	41000017 	tstmi	r0, r7, lsl r0
    5a74:	68000006 	stmdavs	r0, {r1, r2}
    5a78:	00000002 	andeq	r0, r0, r2
    5a7c:	00000000 	andeq	r0, r0, r0
    5a80:	02000000 	andeq	r0, r0, #0
    5a84:	02000026 	andeq	r0, r0, #38	; 0x26
    5a88:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    5a8c:	04030000 	streq	r0, [r3], #-0
    5a90:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    5a94:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    5a98:	000004e8 	andeq	r0, r0, r8, ror #9
    5a9c:	23040802 	movwcs	r0, #18434	; 0x4802
    5aa0:	02000006 	andeq	r0, r0, #6
    5aa4:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    5aa8:	01020000 	mrseq	r0, (UNDEF: 2)
    5aac:	00085008 	andeq	r5, r8, r8
    5ab0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    5ab4:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    5ab8:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    5abc:	02000009 	andeq	r0, r0, #9
    5ac0:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    5ac4:	04020000 	streq	r0, [r2], #-0
    5ac8:	00023407 	andeq	r3, r2, r7, lsl #8
    5acc:	07080200 	streq	r0, [r8, -r0, lsl #4]
    5ad0:	0000022f 	andeq	r0, r0, pc, lsr #4
    5ad4:	01020404 	tsteq	r2, r4, lsl #8
    5ad8:	00085908 	andeq	r5, r8, r8, lsl #18
    5adc:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    5ae0:	73020000 	movwvc	r0, #8192	; 0x2000
    5ae4:	00007831 	andeq	r7, r0, r1, lsr r8
    5ae8:	08de0500 	ldmeq	lr, {r8, sl}^
    5aec:	74020000 	strvc	r0, [r2], #-0
    5af0:	00004c31 	andeq	r4, r0, r1, lsr ip
    5af4:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    5af8:	76020000 	strvc	r0, [r2], -r0
    5afc:	00002931 	andeq	r2, r0, r1, lsr r9
    5b00:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    5b04:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    5b08:	00006831 	andeq	r6, r0, r1, lsr r8
    5b0c:	053b0600 	ldreq	r0, [fp, #-1536]!	; 0xfffffa00
    5b10:	031c0000 	tsteq	ip, #0
    5b14:	2e100182 	mufcsd	f0, f0, f2
    5b18:	07000001 	streq	r0, [r0, -r1]
    5b1c:	00000812 	andeq	r0, r0, r2, lsl r8
    5b20:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    5b24:	000000a3 	andeq	r0, r0, r3, lsr #1
    5b28:	07002302 	streq	r2, [r0, -r2, lsl #6]
    5b2c:	000003a0 	andeq	r0, r0, r0, lsr #7
    5b30:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    5b34:	000000a3 	andeq	r0, r0, r3, lsr #1
    5b38:	07042302 	streq	r2, [r4, -r2, lsl #6]
    5b3c:	0000043d 	andeq	r0, r0, sp, lsr r4
    5b40:	1b018a03 	blne	68354 <SYSTICK_CYCLES+0x3f315>
    5b44:	0000013a 	andeq	r0, r0, sl, lsr r1
    5b48:	07082302 	streq	r2, [r8, -r2, lsl #6]
    5b4c:	000001f2 	strdeq	r0, [r0], -r2
    5b50:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    5b54:	000000a3 	andeq	r0, r0, r3, lsr #1
    5b58:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    5b5c:	00000954 	andeq	r0, r0, r4, asr r9
    5b60:	1a019103 	bne	69f74 <SYSTICK_CYCLES+0x40f35>
    5b64:	00000140 	andeq	r0, r0, r0, asr #2
    5b68:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    5b6c:	0000001b 	andeq	r0, r0, fp, lsl r0
    5b70:	1a019203 	bne	6a384 <SYSTICK_CYCLES+0x41345>
    5b74:	00000140 	andeq	r0, r0, r0, asr #2
    5b78:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    5b7c:	000005ee 	andeq	r0, r0, lr, ror #11
    5b80:	1b019603 	blne	6b394 <SYSTICK_CYCLES+0x42355>
    5b84:	00000146 	andeq	r0, r0, r6, asr #2
    5b88:	00182302 	andseq	r2, r8, r2, lsl #6
    5b8c:	013a0108 	teqeq	sl, r8, lsl #2
    5b90:	a3090000 	movwge	r0, #36864	; 0x9000
    5b94:	00000000 	andeq	r0, r0, r0
    5b98:	012e040a 			; <UNDEFINED> instruction: 0x012e040a
    5b9c:	040a0000 	streq	r0, [sl], #-0
    5ba0:	000000af 	andeq	r0, r0, pc, lsr #1
    5ba4:	0140040a 	cmpeq	r0, sl, lsl #8
    5ba8:	2f0b0000 	svccs	0x000b0000
    5bac:	03000006 	movweq	r0, #6
    5bb0:	af03019b 	svcge	0x0003019b
    5bb4:	0a000000 	beq	5bbc <_Min_Stack_Size+0x4bbc>
    5bb8:	00007f04 	andeq	r7, r0, r4, lsl #30
    5bbc:	034b0600 	movteq	r0, #46592	; 0xb600
    5bc0:	03d40000 	bicseq	r0, r4, #0
    5bc4:	731001d6 	tstvc	r0, #-2147483595	; 0x80000035
    5bc8:	07000004 	streq	r0, [r0, -r4]
    5bcc:	00000911 	andeq	r0, r0, r1, lsl r9
    5bd0:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    5bd4:	000000a3 	andeq	r0, r0, r3, lsr #1
    5bd8:	07002302 	streq	r2, [r0, -r2, lsl #6]
    5bdc:	00000784 	andeq	r0, r0, r4, lsl #15
    5be0:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    5be4:	000000a3 	andeq	r0, r0, r3, lsr #1
    5be8:	07042302 	streq	r2, [r4, -r2, lsl #6]
    5bec:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    5bf0:	1a01df03 	bne	7d804 <SYSTICK_CYCLES+0x547c5>
    5bf4:	00000076 	andeq	r0, r0, r6, ror r0
    5bf8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    5bfc:	000008fb 	strdeq	r0, [r0], -fp
    5c00:	1a01e003 	bne	7dc14 <SYSTICK_CYCLES+0x54bd5>
    5c04:	00000076 	andeq	r0, r0, r6, ror r0
    5c08:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    5c0c:	00000411 	andeq	r0, r0, r1, lsl r4
    5c10:	1a01e103 	bne	7e024 <SYSTICK_CYCLES+0x54fe5>
    5c14:	00000076 	andeq	r0, r0, r6, ror r0
    5c18:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    5c1c:	0000093f 	andeq	r0, r0, pc, lsr r9
    5c20:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    5c24:	000000a3 	andeq	r0, r0, r3, lsr #1
    5c28:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    5c2c:	000021d1 	ldrdeq	r2, [r0], -r1
    5c30:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    5c34:	000000a3 	andeq	r0, r0, r3, lsr #1
    5c38:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    5c3c:	0000060a 	andeq	r0, r0, sl, lsl #12
    5c40:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    5c44:	000000a3 	andeq	r0, r0, r3, lsr #1
    5c48:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    5c4c:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    5c50:	1a01e803 	bne	7fc64 <SYSTICK_CYCLES+0x56c25>
    5c54:	00000473 	andeq	r0, r0, r3, ror r4
    5c58:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    5c5c:	00000199 	muleq	r0, r9, r1
    5c60:	1a01e903 	bne	80074 <SYSTICK_CYCLES+0x57035>
    5c64:	00000473 	andeq	r0, r0, r3, ror r4
    5c68:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    5c6c:	00000596 	muleq	r0, r6, r5
    5c70:	1a01f103 	bne	82084 <SYSTICK_CYCLES+0x59045>
    5c74:	00000159 	andeq	r0, r0, r9, asr r1
    5c78:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    5c7c:	000002d9 	ldrdeq	r0, [r0], -r9
    5c80:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    5c84:	00000097 	muleq	r0, r7, r0
    5c88:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    5c8c:	00000246 	andeq	r0, r0, r6, asr #4
    5c90:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    5c94:	00000097 	muleq	r0, r7, r0
    5c98:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    5c9c:	00000173 	andeq	r0, r0, r3, ror r1
    5ca0:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    5ca4:	00000097 	muleq	r0, r7, r0
    5ca8:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    5cac:	00000730 	andeq	r0, r0, r0, lsr r7
    5cb0:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    5cb4:	00000097 	muleq	r0, r7, r0
    5cb8:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    5cbc:	000000eb 	andeq	r0, r0, fp, ror #1
    5cc0:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    5cc4:	00000097 	muleq	r0, r7, r0
    5cc8:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    5ccc:	0000035c 	andeq	r0, r0, ip, asr r3
    5cd0:	1b01fb03 	blne	848e4 <SYSTICK_CYCLES+0x5b8a5>
    5cd4:	0000048a 	andeq	r0, r0, sl, lsl #9
    5cd8:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    5cdc:	00000152 	andeq	r0, r0, r2, asr r1
    5ce0:	1b020303 	blne	868f4 <SYSTICK_CYCLES+0x5d8b5>
    5ce4:	0000013a 	andeq	r0, r0, sl, lsr r1
    5ce8:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    5cec:	00000107 	andeq	r0, r0, r7, lsl #2
    5cf0:	19020403 	stmdbne	r2, {r0, r1, sl}
    5cf4:	000000a3 	andeq	r0, r0, r3, lsr #1
    5cf8:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    5cfc:	0000033b 	andeq	r0, r0, fp, lsr r3
    5d00:	19020803 	stmdbne	r2, {r0, r1, fp}
    5d04:	0000014c 	andeq	r0, r0, ip, asr #2
    5d08:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    5d0c:	000002ec 	andeq	r0, r0, ip, ror #5
    5d10:	1b020e03 	blne	89524 <SYSTICK_CYCLES+0x604e5>
    5d14:	0000048a 	andeq	r0, r0, sl, lsl #9
    5d18:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    5d1c:	000005ce 	andeq	r0, r0, lr, asr #11
    5d20:	1a020f03 	bne	89934 <SYSTICK_CYCLES+0x608f5>
    5d24:	00000076 	andeq	r0, r0, r6, ror r0
    5d28:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    5d2c:	00000717 	andeq	r0, r0, r7, lsl r7
    5d30:	1a021103 	bne	8a144 <SYSTICK_CYCLES+0x61105>
    5d34:	00000473 	andeq	r0, r0, r3, ror r4
    5d38:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    5d3c:	00000212 	andeq	r0, r0, r2, lsl r2
    5d40:	1a021203 	bne	8a554 <SYSTICK_CYCLES+0x61515>
    5d44:	00000473 	andeq	r0, r0, r3, ror r4
    5d48:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    5d4c:	000006fa 	strdeq	r0, [r0], -sl
    5d50:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    5d54:	000000a3 	andeq	r0, r0, r3, lsr #1
    5d58:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    5d5c:	000003c6 	andeq	r0, r0, r6, asr #7
    5d60:	1a021403 	bne	8ad74 <SYSTICK_CYCLES+0x61d35>
    5d64:	00000076 	andeq	r0, r0, r6, ror r0
    5d68:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    5d6c:	00000554 	andeq	r0, r0, r4, asr r5
    5d70:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    5d74:	00000097 	muleq	r0, r7, r0
    5d78:	01802303 	orreq	r2, r0, r3, lsl #6
    5d7c:	0003e807 	andeq	lr, r3, r7, lsl #16
    5d80:	02160300 	andseq	r0, r6, #0, 6
    5d84:	00009719 	andeq	r9, r0, r9, lsl r7
    5d88:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    5d8c:	08e40701 	stmiaeq	r4!, {r0, r8, r9, sl}^
    5d90:	1f030000 	svcne	0x00030000
    5d94:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    5d98:	23030000 	movwcs	r0, #12288	; 0x3000
    5d9c:	d5070188 	strle	r0, [r7, #-392]	; 0xfffffe78
    5da0:	03000007 	movweq	r0, #7
    5da4:	731a0220 	tstvc	sl, #32, 4
    5da8:	03000004 	movweq	r0, #4
    5dac:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    5db0:	000002c1 	andeq	r0, r0, r1, asr #5
    5db4:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    5db8:	00000097 	muleq	r0, r7, r0
    5dbc:	01902303 	orrseq	r2, r0, r3, lsl #6
    5dc0:	00025607 	andeq	r5, r2, r7, lsl #12
    5dc4:	022f0300 	eoreq	r0, pc, #0, 6
    5dc8:	00009719 	andeq	r9, r0, r9, lsl r7
    5dcc:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    5dd0:	03200701 			; <UNDEFINED> instruction: 0x03200701
    5dd4:	30030000 	andcc	r0, r3, r0
    5dd8:	00971902 	addseq	r1, r7, r2, lsl #18
    5ddc:	23030000 	movwcs	r0, #12288	; 0x3000
    5de0:	77070198 			; <UNDEFINED> instruction: 0x77070198
    5de4:	03000002 	movweq	r0, #2
    5de8:	97190233 			; <UNDEFINED> instruction: 0x97190233
    5dec:	03000000 	movweq	r0, #0
    5df0:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    5df4:	00000000 	andeq	r0, r0, r0
    5df8:	1a023503 	bne	9320c <SYSTICK_CYCLES+0x6a1cd>
    5dfc:	0000056f 	andeq	r0, r0, pc, ror #10
    5e00:	01a02303 	lsleq	r2, r3, #6
    5e04:	001bb707 	andseq	fp, fp, r7, lsl #14
    5e08:	023a0300 	eorseq	r0, sl, #0, 6
    5e0c:	0000a319 	andeq	sl, r0, r9, lsl r3
    5e10:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    5e14:	1c770701 	ldclne	7, cr0, [r7], #-4
    5e18:	3d030000 	stccc	0, cr0, [r3, #-0]
    5e1c:	00a31902 	adceq	r1, r3, r2, lsl #18
    5e20:	23030000 	movwcs	r0, #12288	; 0x3000
    5e24:	300701a8 	andcc	r0, r7, r8, lsr #3
    5e28:	0300001b 	movweq	r0, #27
    5e2c:	a3190241 	tstge	r9, #268435460	; 0x10000004
    5e30:	03000000 	movweq	r0, #0
    5e34:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    5e38:	00001d2e 	andeq	r1, r0, lr, lsr #26
    5e3c:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    5e40:	000000a3 	andeq	r0, r0, r3, lsr #1
    5e44:	01b02303 	lslseq	r2, r3, #6
    5e48:	001c4707 	andseq	r4, ip, r7, lsl #14
    5e4c:	02480300 	subeq	r0, r8, #0, 6
    5e50:	0000a319 	andeq	sl, r0, r9, lsl r3
    5e54:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    5e58:	07a80701 	streq	r0, [r8, r1, lsl #14]!
    5e5c:	4c030000 	stcmi	0, cr0, [r3], {-0}
    5e60:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    5e64:	23030000 	movwcs	r0, #12288	; 0x3000
    5e68:	060701b8 			; <UNDEFINED> instruction: 0x060701b8
    5e6c:	0300001d 	movweq	r0, #29
    5e70:	a319024f 	tstge	r9, #-268435452	; 0xf0000004
    5e74:	03000000 	movweq	r0, #0
    5e78:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    5e7c:	00001b08 	andeq	r1, r0, r8, lsl #22
    5e80:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    5e84:	000000a3 	andeq	r0, r0, r3, lsr #1
    5e88:	01c02303 	biceq	r2, r0, r3, lsl #6
    5e8c:	001a8507 	andseq	r8, sl, r7, lsl #10
    5e90:	02550300 	subseq	r0, r5, #0, 6
    5e94:	0000a319 	andeq	sl, r0, r9, lsl r3
    5e98:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    5e9c:	1bdb0701 	blne	ff6c7aa8 <__RAM_segment_used_end__+0xc75c7aa8>
    5ea0:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    5ea4:	00a31902 	adceq	r1, r3, r2, lsl #18
    5ea8:	23030000 	movwcs	r0, #12288	; 0x3000
    5eac:	a90701c8 	stmdbge	r7, {r3, r6, r7, r8}
    5eb0:	03000009 	movweq	r0, #9
    5eb4:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    5eb8:	03000000 	movweq	r0, #0
    5ebc:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    5ec0:	00000481 	andeq	r0, r0, r1, lsl #9
    5ec4:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    5ec8:	000000a3 	andeq	r0, r0, r3, lsr #1
    5ecc:	01d02303 	bicseq	r2, r0, r3, lsl #6
    5ed0:	5f040a00 	svcpl	0x00040a00
    5ed4:	08000001 	stmdaeq	r0, {r0}
    5ed8:	00048a01 	andeq	r8, r4, r1, lsl #20
    5edc:	04730900 	ldrbteq	r0, [r3], #-2304	; 0xfffff700
    5ee0:	a3090000 	movwge	r0, #36864	; 0x9000
    5ee4:	00000000 	andeq	r0, r0, r0
    5ee8:	0479040a 	ldrbteq	r0, [r9], #-1034	; 0xfffffbf6
    5eec:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    5ef0:	34000007 	strcc	r0, [r0], #-7
    5ef4:	10037e03 	andne	r7, r3, r3, lsl #28
    5ef8:	0000056f 	andeq	r0, r0, pc, ror #10
    5efc:	00018d07 	andeq	r8, r1, r7, lsl #26
    5f00:	03820300 	orreq	r0, r2, #0, 6
    5f04:	0000a319 	andeq	sl, r0, r9, lsl r3
    5f08:	00230200 	eoreq	r0, r3, r0, lsl #4
    5f0c:	00087c07 	andeq	r7, r8, r7, lsl #24
    5f10:	03850300 	orreq	r0, r5, #0, 6
    5f14:	0001591a 	andeq	r5, r1, sl, lsl r9
    5f18:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    5f1c:	0006e107 	andeq	lr, r6, r7, lsl #2
    5f20:	03880300 	orreq	r0, r8, #0, 6
    5f24:	00009719 	andeq	r9, r0, r9, lsl r7
    5f28:	08230200 	stmdaeq	r3!, {r9}
    5f2c:	0004cb07 	andeq	ip, r4, r7, lsl #22
    5f30:	038c0300 	orreq	r0, ip, #0, 6
    5f34:	00080e1a 	andeq	r0, r8, sl, lsl lr
    5f38:	0c230200 	sfmeq	f0, 4, [r3], #-0
    5f3c:	00016207 	andeq	r6, r1, r7, lsl #4
    5f40:	03900300 	orrseq	r0, r0, #0, 6
    5f44:	00009719 	andeq	r9, r0, r9, lsl r7
    5f48:	10230200 	eorne	r0, r3, r0, lsl #4
    5f4c:	00012107 	andeq	r2, r1, r7, lsl #2
    5f50:	03930300 	orrseq	r0, r3, #0, 6
    5f54:	00009719 	andeq	r9, r0, r9, lsl r7
    5f58:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    5f5c:	0008b207 	andeq	fp, r8, r7, lsl #4
    5f60:	03980300 	orrseq	r0, r8, #0, 6
    5f64:	0004731a 	andeq	r7, r4, sl, lsl r3
    5f68:	18230200 	stmdane	r3!, {r9}
    5f6c:	0006c807 	andeq	ip, r6, r7, lsl #16
    5f70:	03990300 	orrseq	r0, r9, #0, 6
    5f74:	00009719 	andeq	r9, r0, r9, lsl r7
    5f78:	1c230200 	sfmne	f0, 4, [r3], #-0
    5f7c:	0005b807 	andeq	fp, r5, r7, lsl #16
    5f80:	039d0300 	orrseq	r0, sp, #0, 6
    5f84:	00056f1a 	andeq	r6, r5, sl, lsl pc
    5f88:	20230200 	eorcs	r0, r3, r0, lsl #4
    5f8c:	00068507 	andeq	r8, r6, r7, lsl #10
    5f90:	039e0300 	orrseq	r0, lr, #0, 6
    5f94:	00056f1a 	andeq	r6, r5, sl, lsl pc
    5f98:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    5f9c:	0001d007 	andeq	sp, r1, r7
    5fa0:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    5fa4:	00009719 	andeq	r9, r0, r9, lsl r7
    5fa8:	28230200 	stmdacs	r3!, {r9}
    5fac:	0009c507 	andeq	ip, r9, r7, lsl #10
    5fb0:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    5fb4:	00056f1a 	andeq	r6, r5, sl, lsl pc
    5fb8:	2c230200 	sfmcs	f0, 4, [r3], #-0
    5fbc:	00042507 	andeq	r2, r4, r7, lsl #10
    5fc0:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    5fc4:	00056f1a 	andeq	r6, r5, sl, lsl pc
    5fc8:	30230200 	eorcc	r0, r3, r0, lsl #4
    5fcc:	90040a00 	andls	r0, r4, r0, lsl #20
    5fd0:	0b000004 	bleq	5fe8 <_Min_Stack_Size+0x4fe8>
    5fd4:	000008d4 	ldrdeq	r0, [r0], -r4
    5fd8:	03028603 	movweq	r8, #9731	; 0x2603
    5fdc:	0000015f 	andeq	r0, r0, pc, asr r1
    5fe0:	00104306 	andseq	r4, r0, r6, lsl #6
    5fe4:	8b033000 	blhi	d1fec <SYSTICK_CYCLES+0xa8fad>
    5fe8:	06511002 	ldrbeq	r1, [r1], -r2
    5fec:	45070000 	strmi	r0, [r7, #-0]
    5ff0:	0300000e 	movweq	r0, #14
    5ff4:	a319028f 	tstge	r9, #-268435448	; 0xf0000008
    5ff8:	02000000 	andeq	r0, r0, #0
    5ffc:	d7070023 	strle	r0, [r7, -r3, lsr #32]
    6000:	0300000f 	movweq	r0, #15
    6004:	591a0292 	ldmdbpl	sl, {r1, r4, r7, r9}
    6008:	02000001 	andeq	r0, r0, #1
    600c:	79070423 	stmdbvc	r7, {r0, r1, r5, sl}
    6010:	0300000f 	movweq	r0, #15
    6014:	97190295 			; <UNDEFINED> instruction: 0x97190295
    6018:	02000000 	andeq	r0, r0, #0
    601c:	ce070823 	cdpgt	8, 0, cr0, cr7, cr3, {1}
    6020:	0300000e 	movweq	r0, #14
    6024:	97190298 			; <UNDEFINED> instruction: 0x97190298
    6028:	02000000 	andeq	r0, r0, #0
    602c:	17070c23 	strne	r0, [r7, -r3, lsr #24]
    6030:	03000010 	movweq	r0, #16
    6034:	511a029b 			; <UNDEFINED> instruction: 0x511a029b
    6038:	02000006 	andeq	r0, r0, #6
    603c:	31071023 	tstcc	r7, r3, lsr #32
    6040:	0300000e 	movweq	r0, #14
    6044:	511a029e 			; <UNDEFINED> instruction: 0x511a029e
    6048:	02000006 	andeq	r0, r0, #6
    604c:	2d071423 	cfstrscs	mvf1, [r7, #-140]	; 0xffffff74
    6050:	0300000f 	movweq	r0, #15
    6054:	a31902a1 	tstge	r9, #268435466	; 0x1000000a
    6058:	02000000 	andeq	r0, r0, #0
    605c:	9f071823 	svcls	0x00071823
    6060:	0300000f 	movweq	r0, #15
    6064:	971902a4 	ldrls	r0, [r9, -r4, lsr #5]
    6068:	02000000 	andeq	r0, r0, #0
    606c:	fa071c23 	blx	1cd100 <__RAM_SIZE+0xcd100>
    6070:	0300000e 	movweq	r0, #14
    6074:	731a02a9 	tstvc	sl, #-1879048182	; 0x9000000a
    6078:	02000004 	andeq	r0, r0, #4
    607c:	5b072023 	blpl	1ce110 <__RAM_SIZE+0xce110>
    6080:	0300000f 	movweq	r0, #15
    6084:	971902aa 	ldrls	r0, [r9, -sl, lsr #5]
    6088:	02000000 	andeq	r0, r0, #0
    608c:	40072423 	andmi	r2, r7, r3, lsr #8
    6090:	0300000f 	movweq	r0, #15
    6094:	571a02ae 	ldrpl	r0, [sl, -lr, lsr #5]
    6098:	02000006 	andeq	r0, r0, #6
    609c:	b8072823 	stmdalt	r7, {r0, r1, r5, fp, sp}
    60a0:	0300000f 	movweq	r0, #15
    60a4:	571a02af 	ldrpl	r0, [sl, -pc, lsr #5]
    60a8:	02000006 	andeq	r0, r0, #6
    60ac:	0a002c23 	beq	11140 <_Min_Stack_Size+0x10140>
    60b0:	00008b04 	andeq	r8, r0, r4, lsl #22
    60b4:	82040a00 	andhi	r0, r4, #0, 20
    60b8:	0b000005 	bleq	60d4 <_Min_Stack_Size+0x50d4>
    60bc:	00000f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    60c0:	0302c403 	movweq	ip, #9219	; 0x2403
    60c4:	00000582 	andeq	r0, r0, r2, lsl #11
    60c8:	00046006 	andeq	r6, r4, r6
    60cc:	d9033400 	stmdble	r3, {sl, ip, sp}
    60d0:	07491002 	strbeq	r1, [r9, -r2]
    60d4:	01070000 	mrseq	r0, (UNDEF: 7)
    60d8:	03000004 	movweq	r0, #4
    60dc:	a31902dd 	tstge	r9, #-805306355	; 0xd000000d
    60e0:	02000000 	andeq	r0, r0, #0
    60e4:	74070023 	strvc	r0, [r7], #-35	; 0xffffffdd
    60e8:	03000003 	movweq	r0, #3
    60ec:	591a02e0 	ldmdbpl	sl, {r5, r6, r7, r9}
    60f0:	02000001 	andeq	r0, r0, #1
    60f4:	55070423 	strpl	r0, [r7, #-1059]	; 0xfffffbdd
    60f8:	03000007 	movweq	r0, #7
    60fc:	a31902e3 	tstge	r9, #805306382	; 0x3000000e
    6100:	02000000 	andeq	r0, r0, #0
    6104:	9b070823 	blls	1c8198 <__RAM_SIZE+0xc8198>
    6108:	03000008 	movweq	r0, #8
    610c:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
    6110:	02000000 	andeq	r0, r0, #0
    6114:	f0070c23 			; <UNDEFINED> instruction: 0xf0070c23
    6118:	03000007 	movweq	r0, #7
    611c:	511a02e9 	tstpl	sl, r9, ror #5
    6120:	02000006 	andeq	r0, r0, #6
    6124:	07071023 	streq	r1, [r7, -r3, lsr #32]
    6128:	03000011 	movweq	r0, #17
    612c:	511a02ed 	tstpl	sl, sp, ror #5
    6130:	02000006 	andeq	r0, r0, #6
    6134:	28071423 	stmdacs	r7, {r0, r1, r5, sl, ip}
    6138:	03000005 	movweq	r0, #5
    613c:	511a02f0 			; <UNDEFINED> instruction: 0x511a02f0
    6140:	02000006 	andeq	r0, r0, #6
    6144:	06071823 	streq	r1, [r7], -r3, lsr #16
    6148:	03000003 	movweq	r0, #3
    614c:	a31902f3 	tstge	r9, #805306383	; 0x3000000f
    6150:	02000000 	andeq	r0, r0, #0
    6154:	72071c23 	andvc	r1, r7, #8960	; 0x2300
    6158:	03000009 	movweq	r0, #9
    615c:	731a02f9 	tstvc	sl, #-1879048177	; 0x9000000f
    6160:	02000004 	andeq	r0, r0, #4
    6164:	ae072023 	cdpge	0, 0, cr2, cr7, cr3, {1}
    6168:	03000004 	movweq	r0, #4
    616c:	731a02fe 	tstvc	sl, #-536870897	; 0xe000000f
    6170:	02000004 	andeq	r0, r0, #4
    6174:	0b072423 	bleq	1cf208 <__RAM_SIZE+0xcf208>
    6178:	03000005 	movweq	r0, #5
    617c:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
    6180:	02000000 	andeq	r0, r0, #0
    6184:	a7072823 	strge	r2, [r7, -r3, lsr #16]
    6188:	03000002 	movweq	r0, #2
    618c:	491a0303 	ldmdbmi	sl, {r0, r1, r8, r9}
    6190:	02000007 	andeq	r0, r0, #7
    6194:	5e072c23 	cdppl	12, 0, cr2, cr7, cr3, {1}
    6198:	03000008 	movweq	r0, #8
    619c:	491a0304 	ldmdbmi	sl, {r2, r8, r9}
    61a0:	02000007 	andeq	r0, r0, #7
    61a4:	0a003023 	beq	12238 <_Min_Stack_Size+0x11238>
    61a8:	00066a04 	andeq	r6, r6, r4, lsl #20
    61ac:	04740b00 	ldrbteq	r0, [r4], #-2816	; 0xfffff500
    61b0:	23030000 	movwcs	r0, #12288	; 0x3000
    61b4:	066a0303 	strbteq	r0, [sl], -r3, lsl #6
    61b8:	86060000 	strhi	r0, [r6], -r0
    61bc:	24000014 	strcs	r0, [r0], #-20	; 0xffffffec
    61c0:	10032803 	andne	r2, r3, r3, lsl #16
    61c4:	000007fb 	strdeq	r0, [r0], -fp
    61c8:	00134907 	andseq	r4, r3, r7, lsl #18
    61cc:	032c0300 			; <UNDEFINED> instruction: 0x032c0300
    61d0:	0000a319 	andeq	sl, r0, r9, lsl r3
    61d4:	00230200 	eoreq	r0, r3, r0, lsl #4
    61d8:	0014b707 	andseq	fp, r4, r7, lsl #14
    61dc:	032f0300 			; <UNDEFINED> instruction: 0x032f0300
    61e0:	0001591a 	andeq	r5, r1, sl, lsl r9
    61e4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    61e8:	00146907 	andseq	r6, r4, r7, lsl #18
    61ec:	03330300 	teqeq	r3, #0, 6
    61f0:	0000a319 	andeq	sl, r0, r9, lsl r3
    61f4:	08230200 	stmdaeq	r3!, {r9}
    61f8:	00157c07 	andseq	r7, r5, r7, lsl #24
    61fc:	03370300 	teqeq	r7, #0, 6
    6200:	00009719 	andeq	r9, r0, r9, lsl r7
    6204:	0c230200 	sfmeq	f0, 4, [r3], #-0
    6208:	0015e607 	andseq	lr, r5, r7, lsl #12
    620c:	033c0300 	teqeq	ip, #0, 6
    6210:	0004731a 	andeq	r7, r4, sl, lsl r3
    6214:	10230200 	eorne	r0, r3, r0, lsl #4
    6218:	00143507 	andseq	r3, r4, r7, lsl #10
    621c:	033d0300 	teqeq	sp, #0, 6
    6220:	00009719 	andeq	r9, r0, r9, lsl r7
    6224:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    6228:	00163607 	andseq	r3, r6, r7, lsl #12
    622c:	03410300 	movteq	r0, #4864	; 0x1300
    6230:	0007fb1a 	andeq	pc, r7, sl, lsl fp	; <UNPREDICTABLE>
    6234:	18230200 	stmdane	r3!, {r9}
    6238:	00155607 	andseq	r5, r5, r7, lsl #12
    623c:	03420300 	movteq	r0, #8960	; 0x2300
    6240:	0007fb1a 	andeq	pc, r7, sl, lsl fp	; <UNPREDICTABLE>
    6244:	1c230200 	sfmne	f0, 4, [r3], #-0
    6248:	0017e007 	andseq	lr, r7, r7
    624c:	03450300 	movteq	r0, #21248	; 0x5300
    6250:	0000a319 	andeq	sl, r0, r9, lsl r3
    6254:	20230200 	eorcs	r0, r3, r0, lsl #4
    6258:	5c040a00 			; <UNDEFINED> instruction: 0x5c040a00
    625c:	0b000007 	bleq	6280 <_Min_Stack_Size+0x5280>
    6260:	000014a2 	andeq	r1, r0, r2, lsr #9
    6264:	03036103 	movweq	r6, #12547	; 0x3103
    6268:	0000075c 	andeq	r0, r0, ip, asr r7
    626c:	0575040a 	ldrbeq	r0, [r5, #-1034]!	; 0xfffffbf6
    6270:	e90b0000 	stmdb	fp, {}	; <UNPREDICTABLE>
    6274:	03000016 	movweq	r0, #22
    6278:	900303c2 	andls	r0, r3, r2, asr #7
    627c:	06000004 	streq	r0, [r0], -r4
    6280:	00001508 	andeq	r1, r0, r8, lsl #10
    6284:	03c70338 	biceq	r0, r7, #56, 6	; 0xe0000000
    6288:	00091010 	andeq	r1, r9, r0, lsl r0
    628c:	13610700 	cmnne	r1, #0, 14
    6290:	cb030000 	blgt	c6298 <SYSTICK_CYCLES+0x9d259>
    6294:	00a31903 	adceq	r1, r3, r3, lsl #18
    6298:	23020000 	movwcs	r0, #8192	; 0x2000
    629c:	17800700 	strne	r0, [r0, r0, lsl #14]
    62a0:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    62a4:	01591a03 	cmpeq	r9, r3, lsl #20
    62a8:	23020000 	movwcs	r0, #8192	; 0x2000
    62ac:	176a0704 	strbne	r0, [sl, -r4, lsl #14]!
    62b0:	d1030000 	mrsle	r0, (UNDEF: 3)
    62b4:	00971903 	addseq	r1, r7, r3, lsl #18
    62b8:	23020000 	movwcs	r0, #8192	; 0x2000
    62bc:	160b0708 	strne	r0, [fp], -r8, lsl #14
    62c0:	d4030000 	strle	r0, [r3], #-0
    62c4:	00971903 	addseq	r1, r7, r3, lsl #18
    62c8:	23020000 	movwcs	r0, #8192	; 0x2000
    62cc:	18c2070c 	stmiane	r2, {r2, r3, r8, r9, sl}^
    62d0:	d8030000 	stmdale	r3, {}	; <UNPREDICTABLE>
    62d4:	00971903 	addseq	r1, r7, r3, lsl #18
    62d8:	23020000 	movwcs	r0, #8192	; 0x2000
    62dc:	16a70710 	ssatne	r0, #8, r0, lsl #14
    62e0:	d9030000 	stmdble	r3, {}	; <UNPREDICTABLE>
    62e4:	00971903 	addseq	r1, r7, r3, lsl #18
    62e8:	23020000 	movwcs	r0, #8192	; 0x2000
    62ec:	145a0714 	ldrbne	r0, [sl], #-1812	; 0xfffff8ec
    62f0:	dd030000 	stcle	0, cr0, [r3, #-0]
    62f4:	09101a03 	ldmdbeq	r0, {r0, r1, r9, fp, ip}
    62f8:	23020000 	movwcs	r0, #8192	; 0x2000
    62fc:	168a0718 	pkhbtne	r0, sl, r8, lsl #14
    6300:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    6304:	09101a03 	ldmdbeq	r0, {r0, r1, r9, fp, ip}
    6308:	23020000 	movwcs	r0, #8192	; 0x2000
    630c:	167c071c 			; <UNDEFINED> instruction: 0x167c071c
    6310:	e2030000 	and	r0, r3, #0
    6314:	09101a03 	ldmdbeq	r0, {r0, r1, r9, fp, ip}
    6318:	23020000 	movwcs	r0, #8192	; 0x2000
    631c:	18960720 	ldmne	r6, {r5, r8, r9, sl}
    6320:	e3030000 	movw	r0, #12288	; 0x3000
    6324:	09101a03 	ldmdbeq	r0, {r0, r1, r9, fp, ip}
    6328:	23020000 	movwcs	r0, #8192	; 0x2000
    632c:	17510724 	ldrbne	r0, [r1, -r4, lsr #14]
    6330:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    6334:	04731a03 	ldrbteq	r1, [r3], #-2563	; 0xfffff5fd
    6338:	23020000 	movwcs	r0, #8192	; 0x2000
    633c:	161d0728 	ldrne	r0, [sp], -r8, lsr #14
    6340:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    6344:	00971903 	addseq	r1, r7, r3, lsl #18
    6348:	23020000 	movwcs	r0, #8192	; 0x2000
    634c:	1540072c 	strbne	r0, [r0, #-1836]	; 0xfffff8d4
    6350:	ed030000 	stc	0, cr0, [r3, #-0]
    6354:	09161a03 	ldmdbeq	r6, {r0, r1, r9, fp, ip}
    6358:	23020000 	movwcs	r0, #8192	; 0x2000
    635c:	17370730 			; <UNDEFINED> instruction: 0x17370730
    6360:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    6364:	09161a03 	ldmdbeq	r6, {r0, r1, r9, fp, ip}
    6368:	23020000 	movwcs	r0, #8192	; 0x2000
    636c:	040a0034 	streq	r0, [sl], #-52	; 0xffffffcc
    6370:	000000a3 	andeq	r0, r0, r3, lsr #1
    6374:	0821040a 	stmdaeq	r1!, {r1, r3, sl}
    6378:	ff0b0000 			; <UNDEFINED> instruction: 0xff0b0000
    637c:	03000014 	movweq	r0, #20
    6380:	21030411 	tstcs	r3, r1, lsl r4
    6384:	06000008 	streq	r0, [r0], -r8
    6388:	000014eb 	andeq	r1, r0, fp, ror #9
    638c:	0416032c 	ldreq	r0, [r6], #-812	; 0xfffffcd4
    6390:	0009e810 	andeq	lr, r9, r0, lsl r8
    6394:	16970700 	ldrne	r0, [r7], r0, lsl #14
    6398:	1a030000 	bne	c63a0 <SYSTICK_CYCLES+0x9d361>
    639c:	00a31904 	adceq	r1, r3, r4, lsl #18
    63a0:	23020000 	movwcs	r0, #8192	; 0x2000
    63a4:	170f0700 	strne	r0, [pc, -r0, lsl #14]
    63a8:	1d030000 	stcne	0, cr0, [r3, #-0]
    63ac:	01591a04 	cmpeq	r9, r4, lsl #20
    63b0:	23020000 	movwcs	r0, #8192	; 0x2000
    63b4:	17cd0704 	strbne	r0, [sp, r4, lsl #14]
    63b8:	21030000 	mrscs	r0, (UNDEF: 3)
    63bc:	00a31904 	adceq	r1, r3, r4, lsl #18
    63c0:	23020000 	movwcs	r0, #8192	; 0x2000
    63c4:	13f40708 	mvnsne	r0, #8, 14	; 0x200000
    63c8:	26030000 	strcs	r0, [r3], -r0
    63cc:	04731a04 	ldrbteq	r1, [r3], #-2564	; 0xfffff5fc
    63d0:	23020000 	movwcs	r0, #8192	; 0x2000
    63d4:	18a5070c 	stmiane	r5!, {r2, r3, r8, r9, sl}
    63d8:	27030000 	strcs	r0, [r3, -r0]
    63dc:	00971904 	addseq	r1, r7, r4, lsl #18
    63e0:	23020000 	movwcs	r0, #8192	; 0x2000
    63e4:	14d10710 	ldrbne	r0, [r1], #1808	; 0x710
    63e8:	2b030000 	blcs	c63f0 <SYSTICK_CYCLES+0x9d3b1>
    63ec:	09e81a04 	stmibeq	r8!, {r2, r9, fp, ip}^
    63f0:	23020000 	movwcs	r0, #8192	; 0x2000
    63f4:	136d0714 	cmnne	sp, #20, 14	; 0x500000
    63f8:	2c030000 	stccs	0, cr0, [r3], {-0}
    63fc:	09e81a04 	stmibeq	r8!, {r2, r9, fp, ip}^
    6400:	23020000 	movwcs	r0, #8192	; 0x2000
    6404:	16590718 			; <UNDEFINED> instruction: 0x16590718
    6408:	31030000 	mrscc	r0, (UNDEF: 3)
    640c:	00a31904 	adceq	r1, r3, r4, lsl #18
    6410:	23020000 	movwcs	r0, #8192	; 0x2000
    6414:	1412071c 	ldrne	r0, [r2], #-1820	; 0xfffff8e4
    6418:	34030000 	strcc	r0, [r3], #-0
    641c:	00a31904 	adceq	r1, r3, r4, lsl #18
    6420:	23020000 	movwcs	r0, #8192	; 0x2000
    6424:	18500720 	ldmdane	r0, {r5, r8, r9, sl}^
    6428:	37030000 	strcc	r0, [r3, -r0]
    642c:	00a31904 	adceq	r1, r3, r4, lsl #18
    6430:	23020000 	movwcs	r0, #8192	; 0x2000
    6434:	15190724 	ldrne	r0, [r9, #-1828]	; 0xfffff8dc
    6438:	3a030000 	bcc	c6440 <SYSTICK_CYCLES+0x9d401>
    643c:	00a31904 	adceq	r1, r3, r4, lsl #18
    6440:	23020000 	movwcs	r0, #8192	; 0x2000
    6444:	040a0028 	streq	r0, [sl], #-40	; 0xffffffd8
    6448:	00000929 	andeq	r0, r0, r9, lsr #18
    644c:	0016dc0b 	andseq	sp, r6, fp, lsl #24
    6450:	04480300 	strbeq	r0, [r8], #-768	; 0xfffffd00
    6454:	00092903 	andeq	r2, r9, r3, lsl #18
    6458:	13a10c00 			; <UNDEFINED> instruction: 0x13a10c00
    645c:	6d040000 	stcvs	0, cr0, [r4, #-0]
    6460:	0000761e 	andeq	r7, r0, lr, lsl r6
    6464:	0d010100 	stfeqs	f0, [r1, #-0]
    6468:	000016c2 	andeq	r1, r0, r2, asr #13
    646c:	1c256805 	stcne	8, cr6, [r5], #-20	; 0xffffffec
    6470:	0100000a 	tsteq	r0, sl
    6474:	00000305 	andeq	r0, r0, r5, lsl #6
    6478:	040a0000 	streq	r0, [sl], #-0
    647c:	000009ee 	andeq	r0, r0, lr, ror #19
    6480:	0018030d 	andseq	r0, r8, sp, lsl #6
    6484:	256d0500 	strbcs	r0, [sp, #-1280]!	; 0xfffffb00
    6488:	000000a3 	andeq	r0, r0, r3, lsr #1
    648c:	00030501 	andeq	r0, r3, r1, lsl #10
    6490:	0d000000 	stceq	0, cr0, [r0, #-0]
    6494:	00001658 	andeq	r1, r0, r8, asr r6
    6498:	a3257405 			; <UNDEFINED> instruction: 0xa3257405
    649c:	01000000 	mrseq	r0, (UNDEF: 0)
    64a0:	00000305 	andeq	r0, r0, r5, lsl #6
    64a4:	110d0000 	mrsne	r0, (UNDEF: 13)
    64a8:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    64ac:	00a32579 	adceq	r2, r3, r9, ror r5
    64b0:	05010000 	streq	r0, [r1, #-0]
    64b4:	00000003 	andeq	r0, r0, r3
    64b8:	184f0d00 	stmdane	pc, {r8, sl, fp}^	; <UNPREDICTABLE>
    64bc:	7e050000 	cdpvc	0, 0, cr0, cr5, cr0, {0}
    64c0:	0000a325 	andeq	sl, r0, r5, lsr #6
    64c4:	03050100 	movweq	r0, #20736	; 0x5100
    64c8:	00000000 	andeq	r0, r0, r0
    64cc:	0015180d 	andseq	r1, r5, sp, lsl #16
    64d0:	25830500 	strcs	r0, [r3, #1280]	; 0x500
    64d4:	000000a3 	andeq	r0, r0, r3, lsr #1
    64d8:	00030501 	andeq	r0, r3, r1, lsl #10
    64dc:	0d000000 	stceq	0, cr0, [r0, #-0]
    64e0:	0000138b 	andeq	r1, r0, fp, lsl #7
    64e4:	941d7b06 	ldrls	r7, [sp], #-2822	; 0xfffff4fa
    64e8:	0100000a 	tsteq	r0, sl
    64ec:	00000305 	andeq	r0, r0, r5, lsl #6
    64f0:	040a0000 	streq	r0, [sl], #-0
    64f4:	0000091c 	andeq	r0, r0, ip, lsl r9
    64f8:	0013be0d 	andseq	fp, r3, sp, lsl #28
    64fc:	1d800600 	stcne	6, cr0, [r0]
    6500:	000000a3 	andeq	r0, r0, r3, lsr #1
    6504:	00030501 	andeq	r0, r3, r1, lsl #10
    6508:	0d000000 	stceq	0, cr0, [r0, #-0]
    650c:	0000187a 	andeq	r1, r0, sl, ror r8
    6510:	c02d6c07 	eorgt	r6, sp, r7, lsl #24
    6514:	0100000a 	tsteq	r0, sl
    6518:	00000305 	andeq	r0, r0, r5, lsl #6
    651c:	040a0000 	streq	r0, [sl], #-0
    6520:	00000801 	andeq	r0, r0, r1, lsl #16
    6524:	0013d60d 	andseq	sp, r3, sp, lsl #12
    6528:	2d710700 	ldclcs	7, cr0, [r1, #-0]
    652c:	000000a3 	andeq	r0, r0, r3, lsr #1
    6530:	00030501 	andeq	r0, r3, r1, lsl #10
    6534:	0d000000 	stceq	0, cr0, [r0, #-0]
    6538:	0000181f 	andeq	r1, r0, pc, lsl r8
    653c:	ec1d6f08 	ldc	15, cr6, [sp], {8}
    6540:	0100000a 	tsteq	r0, sl
    6544:	00000305 	andeq	r0, r0, r5, lsl #6
    6548:	040a0000 	streq	r0, [sl], #-0
    654c:	00000814 	andeq	r0, r0, r4, lsl r8
    6550:	0015b90d 	andseq	fp, r5, sp, lsl #18
    6554:	1d740800 	ldclne	8, cr0, [r4, #-0]
    6558:	000000a3 	andeq	r0, r0, r3, lsr #1
    655c:	00030501 	andeq	r0, r3, r1, lsl #10
    6560:	0d000000 	stceq	0, cr0, [r0, #-0]
    6564:	0000159e 	muleq	r0, lr, r5
    6568:	182d6b09 	stmdane	sp!, {r0, r3, r8, r9, fp, sp, lr}
    656c:	0100000b 	tsteq	r0, fp
    6570:	00000305 	andeq	r0, r0, r5, lsl #6
    6574:	040a0000 	streq	r0, [sl], #-0
    6578:	0000065d 	andeq	r0, r0, sp, asr r6
    657c:	0016f20d 	andseq	pc, r6, sp, lsl #4
    6580:	2d700900 			; <UNDEFINED> instruction: 0x2d700900
    6584:	000000a3 	andeq	r0, r0, r3, lsr #1
    6588:	00030501 	andeq	r0, r3, r1, lsl #10
    658c:	0d000000 	stceq	0, cr0, [r0, #-0]
    6590:	00001235 	andeq	r1, r0, r5, lsr r2
    6594:	44257b0a 	strtmi	r7, [r5], #-2826	; 0xfffff4f6
    6598:	0100000b 	tsteq	r0, fp
    659c:	119c0305 	orrsne	r0, ip, r5, lsl #6
    65a0:	040a3800 	streq	r3, [sl], #-2048	; 0xfffff800
    65a4:	0000074f 	andeq	r0, r0, pc, asr #14
    65a8:	0012620d 	andseq	r6, r2, sp, lsl #4
    65ac:	25800a00 	strcs	r0, [r0, #2560]	; 0xa00
    65b0:	000000a3 	andeq	r0, r0, r3, lsr #1
    65b4:	98030501 	stmdals	r3, {r0, r8, sl}
    65b8:	0e380011 	mrceq	0, 1, r0, cr8, cr1, {0}
    65bc:	000009fb 	strdeq	r0, [r0], -fp
    65c0:	050b3301 	streq	r3, [fp, #-769]	; 0xfffffcff
    65c4:	0011a003 	andseq	sl, r1, r3
    65c8:	35010f38 	strcc	r0, [r1, #-3896]	; 0xfffff0c8
    65cc:	01000018 	tsteq	r0, r8, lsl r0
    65d0:	64010970 	strvs	r0, [r1], #-2416	; 0xfffff690
    65d4:	7010001d 	andsvc	r0, r0, sp, lsl r0
    65d8:	b210001d 	andslt	r0, r0, #29
    65dc:	01000032 	tsteq	r0, r2, lsr r0
    65e0:	00000b99 	muleq	r0, r9, fp
    65e4:	001d6a10 	andseq	r6, sp, r0, lsl sl
    65e8:	000b9910 	andeq	r9, fp, r0, lsl r9
    65ec:	1d6e1000 	stclne	0, cr1, [lr, #-0]
    65f0:	0ba81000 	bleq	fea0a5f8 <__RAM_segment_used_end__+0xc690a5f8>
    65f4:	11000000 	mrsne	r0, (UNDEF: 0)
    65f8:	17210101 	strne	r0, [r1, -r1, lsl #2]!
    65fc:	17210000 	strne	r0, [r1, -r0]!
    6600:	150b0000 	strne	r0, [fp, #-0]
    6604:	01120d01 	tsteq	r2, r1, lsl #26
    6608:	0015d101 	andseq	sp, r5, r1, lsl #2
    660c:	0015d100 	andseq	sp, r5, r0, lsl #2
    6610:	0d3e0c00 	ldceq	12, cr0, [lr, #-0]
    6614:	00014400 	andeq	r4, r1, r0, lsl #8
    6618:	81000200 	mrshi	r0, R8_usr
    661c:	04000010 	streq	r0, [r0], #-16
    6620:	00003d01 	andeq	r3, r0, r1, lsl #26
    6624:	19000c00 	stmdbne	r0, {sl, fp}
    6628:	06410000 	strbeq	r0, [r1], -r0
    662c:	02780000 	rsbseq	r0, r8, #0
	...
    6638:	27850000 	strcs	r0, [r5, r0]
    663c:	04020000 	streq	r0, [r2], #-0
    6640:	00023907 	andeq	r3, r2, r7, lsl #18
    6644:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    6648:	00746e69 	rsbseq	r6, r4, r9, ror #28
    664c:	e8050802 	stmda	r5, {r1, fp}
    6650:	02000004 	andeq	r0, r0, #4
    6654:	06230408 	strteq	r0, [r3], -r8, lsl #8
    6658:	01020000 	mrseq	r0, (UNDEF: 2)
    665c:	00085206 	andeq	r5, r8, r6, lsl #4
    6660:	08010200 	stmdaeq	r1, {r9}
    6664:	00000850 	andeq	r0, r0, r0, asr r8
    6668:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    666c:	02000006 	andeq	r0, r0, #6
    6670:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    6674:	04020000 	streq	r0, [r2], #-0
    6678:	0004ed05 	andeq	lr, r4, r5, lsl #26
    667c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6680:	00000234 	andeq	r0, r0, r4, lsr r2
    6684:	2f070802 	svccs	0x00070802
    6688:	04000002 	streq	r0, [r0], #-2
    668c:	08010204 	stmdaeq	r1, {r2, r9}
    6690:	00000859 	andeq	r0, r0, r9, asr r8
    6694:	00077f05 	andeq	r7, r7, r5, lsl #30
    6698:	31760200 	cmncc	r6, r0, lsl #4
    669c:	00000029 	andeq	r0, r0, r9, lsr #32
    66a0:	00007f06 	andeq	r7, r0, r6, lsl #30
    66a4:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    66a8:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    66ac:	00006831 	andeq	r6, r0, r1, lsr r8
    66b0:	00900600 	addseq	r0, r0, r0, lsl #12
    66b4:	a1070000 	mrsge	r0, (UNDEF: 7)
    66b8:	03000013 	movweq	r0, #19
    66bc:	00761e6d 	rsbseq	r1, r6, sp, ror #28
    66c0:	01010000 	mrseq	r0, (UNDEF: 1)
    66c4:	0018e808 	andseq	lr, r8, r8, lsl #16
    66c8:	01530400 	cmpeq	r3, r0, lsl #8
    66cc:	00009c21 	andeq	r9, r0, r1, lsr #24
    66d0:	08010100 	stmdaeq	r1, {r8}
    66d4:	00001132 	andeq	r1, r0, r2, lsr r1
    66d8:	21018e04 	tstcs	r1, r4, lsl #28
    66dc:	0000008b 	andeq	r0, r0, fp, lsl #1
    66e0:	01090101 	tsteq	r9, r1, lsl #2
    66e4:	00000834 	andeq	r0, r0, r4, lsr r8
    66e8:	01076501 	tsteq	r7, r1, lsl #10
    66ec:	10001d70 	andne	r1, r0, r0, ror sp
    66f0:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    66f4:	000032d2 	ldrdeq	r3, [r0], -r2
    66f8:	00010d01 	andeq	r0, r1, r1, lsl #26
    66fc:	1d8c0a00 	vstrne	s0, [ip]
    6700:	010d1000 	mrseq	r1, (UNDEF: 13)
    6704:	940a0000 	strls	r0, [sl], #-0
    6708:	1c10001d 	ldcne	0, cr0, [r0], {29}
    670c:	0a000001 	beq	6718 <_Min_Stack_Size+0x5718>
    6710:	10001da2 	andne	r1, r0, r2, lsr #27
    6714:	0000012b 	andeq	r0, r0, fp, lsr #2
    6718:	001da60a 	andseq	sl, sp, sl, lsl #12
    671c:	00013910 	andeq	r3, r1, r0, lsl r9
    6720:	010b0000 	mrseq	r0, (UNDEF: 11)
    6724:	00013c01 	andeq	r3, r1, r1, lsl #24
    6728:	00013c00 	andeq	r3, r1, r0, lsl #24
    672c:	05bf0500 	ldreq	r0, [pc, #1280]!	; 6c34 <_Min_Stack_Size+0x5c34>
    6730:	01010b0d 	tsteq	r1, sp, lsl #22
    6734:	000018d4 	ldrdeq	r1, [r0], -r4
    6738:	000018d4 	ldrdeq	r1, [r0], -r4
    673c:	0d011604 	stceq	6, cr1, [r1, #-16]
    6740:	4101010c 	tstmi	r1, ip, lsl #2
    6744:	41000019 	tstmi	r0, r9, lsl r0
    6748:	03000019 	movweq	r0, #25
    674c:	010c0d40 	tsteq	ip, r0, asr #26
    6750:	00183501 	andseq	r3, r8, r1, lsl #10
    6754:	00183500 	andseq	r3, r8, r0, lsl #10
    6758:	0d3e0300 	ldceq	3, cr0, [lr, #-0]
    675c:	00093300 	andeq	r3, r9, r0, lsl #6
    6760:	3f000200 	svccc	0x00000200
    6764:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    6768:	00003d01 	andeq	r3, r0, r1, lsl #26
    676c:	197b0c00 	ldmdbne	fp!, {sl, fp}^
    6770:	06410000 	strbeq	r0, [r1], -r0
    6774:	02880000 	addeq	r0, r8, #0
	...
    6780:	28c00000 	stmiacs	r0, {}^	; <UNPREDICTABLE>
    6784:	04020000 	streq	r0, [r2], #-0
    6788:	00023907 	andeq	r3, r2, r7, lsl #18
    678c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    6790:	00746e69 	rsbseq	r6, r4, r9, ror #28
    6794:	e8050802 	stmda	r5, {r1, fp}
    6798:	02000004 	andeq	r0, r0, #4
    679c:	06230408 	strteq	r0, [r3], -r8, lsl #8
    67a0:	01020000 	mrseq	r0, (UNDEF: 2)
    67a4:	00085206 	andeq	r5, r8, r6, lsl #4
    67a8:	08010200 	stmdaeq	r1, {r9}
    67ac:	00000850 	andeq	r0, r0, r0, asr r8
    67b0:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    67b4:	02000006 	andeq	r0, r0, #6
    67b8:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    67bc:	04020000 	streq	r0, [r2], #-0
    67c0:	0004ed05 	andeq	lr, r4, r5, lsl #26
    67c4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    67c8:	00000234 	andeq	r0, r0, r4, lsr r2
    67cc:	2f070802 	svccs	0x00070802
    67d0:	04000002 	streq	r0, [r0], #-2
    67d4:	08010204 	stmdaeq	r1, {r2, r9}
    67d8:	00000859 	andeq	r0, r0, r9, asr r8
    67dc:	0008df05 	andeq	sp, r8, r5, lsl #30
    67e0:	31730200 	cmncc	r3, r0, lsl #4
    67e4:	00000078 	andeq	r0, r0, r8, ror r0
    67e8:	0008de05 	andeq	sp, r8, r5, lsl #28
    67ec:	31740200 	cmncc	r4, r0, lsl #4
    67f0:	0000004c 	andeq	r0, r0, ip, asr #32
    67f4:	00077f05 	andeq	r7, r7, r5, lsl #30
    67f8:	31760200 	cmncc	r6, r0, lsl #4
    67fc:	00000029 	andeq	r0, r0, r9, lsr #32
    6800:	00071105 	andeq	r1, r7, r5, lsl #2
    6804:	31780200 	cmncc	r8, r0, lsl #4
    6808:	00000068 	andeq	r0, r0, r8, rrx
    680c:	0000a306 	andeq	sl, r0, r6, lsl #6
    6810:	053b0700 	ldreq	r0, [fp, #-1792]!	; 0xfffff900
    6814:	031c0000 	tsteq	ip, #0
    6818:	33100182 	tstcc	r0, #-2147483616	; 0x80000020
    681c:	08000001 	stmdaeq	r0, {r0}
    6820:	00000812 	andeq	r0, r0, r2, lsl r8
    6824:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    6828:	000000a3 	andeq	r0, r0, r3, lsr #1
    682c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    6830:	000003a0 	andeq	r0, r0, r0, lsr #7
    6834:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    6838:	000000a3 	andeq	r0, r0, r3, lsr #1
    683c:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    6840:	0000043d 	andeq	r0, r0, sp, lsr r4
    6844:	1b018a03 	blne	69058 <SYSTICK_CYCLES+0x40019>
    6848:	0000013f 	andeq	r0, r0, pc, lsr r1
    684c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    6850:	000001f2 	strdeq	r0, [r0], -r2
    6854:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    6858:	000000a3 	andeq	r0, r0, r3, lsr #1
    685c:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    6860:	00000954 	andeq	r0, r0, r4, asr r9
    6864:	1a019103 	bne	6ac78 <SYSTICK_CYCLES+0x41c39>
    6868:	00000145 	andeq	r0, r0, r5, asr #2
    686c:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    6870:	0000001b 	andeq	r0, r0, fp, lsl r0
    6874:	1a019203 	bne	6b088 <SYSTICK_CYCLES+0x42049>
    6878:	00000145 	andeq	r0, r0, r5, asr #2
    687c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    6880:	000005ee 	andeq	r0, r0, lr, ror #11
    6884:	1b019603 	blne	6c098 <SYSTICK_CYCLES+0x43059>
    6888:	0000014b 	andeq	r0, r0, fp, asr #2
    688c:	00182302 	andseq	r2, r8, r2, lsl #6
    6890:	013f0109 	teqeq	pc, r9, lsl #2
    6894:	a30a0000 	movwge	r0, #40960	; 0xa000
    6898:	00000000 	andeq	r0, r0, r0
    689c:	0133040b 	teqeq	r3, fp, lsl #8
    68a0:	040b0000 	streq	r0, [fp], #-0
    68a4:	000000b4 	strheq	r0, [r0], -r4
    68a8:	0145040b 	cmpeq	r5, fp, lsl #8
    68ac:	2f0c0000 	svccs	0x000c0000
    68b0:	03000006 	movweq	r0, #6
    68b4:	b403019b 	strlt	r0, [r3], #-411	; 0xfffffe65
    68b8:	0b000000 	bleq	68c0 <_Min_Stack_Size+0x58c0>
    68bc:	00007f04 	andeq	r7, r0, r4, lsl #30
    68c0:	034b0700 	movteq	r0, #46848	; 0xb700
    68c4:	03d40000 	bicseq	r0, r4, #0
    68c8:	781001d6 	ldmdavc	r0, {r1, r2, r4, r6, r7, r8}
    68cc:	08000004 	stmdaeq	r0, {r2}
    68d0:	00000911 	andeq	r0, r0, r1, lsl r9
    68d4:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    68d8:	000000a3 	andeq	r0, r0, r3, lsr #1
    68dc:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    68e0:	00000784 	andeq	r0, r0, r4, lsl #15
    68e4:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    68e8:	000000a3 	andeq	r0, r0, r3, lsr #1
    68ec:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    68f0:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    68f4:	1a01df03 	bne	7e508 <SYSTICK_CYCLES+0x554c9>
    68f8:	00000076 	andeq	r0, r0, r6, ror r0
    68fc:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    6900:	000008fb 	strdeq	r0, [r0], -fp
    6904:	1a01e003 	bne	7e918 <SYSTICK_CYCLES+0x558d9>
    6908:	00000076 	andeq	r0, r0, r6, ror r0
    690c:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    6910:	00000411 	andeq	r0, r0, r1, lsl r4
    6914:	1a01e103 	bne	7ed28 <SYSTICK_CYCLES+0x55ce9>
    6918:	00000076 	andeq	r0, r0, r6, ror r0
    691c:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    6920:	0000093f 	andeq	r0, r0, pc, lsr r9
    6924:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    6928:	000000a3 	andeq	r0, r0, r3, lsr #1
    692c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    6930:	000021d1 	ldrdeq	r2, [r0], -r1
    6934:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    6938:	000000a3 	andeq	r0, r0, r3, lsr #1
    693c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    6940:	0000060a 	andeq	r0, r0, sl, lsl #12
    6944:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    6948:	000000a3 	andeq	r0, r0, r3, lsr #1
    694c:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    6950:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    6954:	1a01e803 	bne	80968 <SYSTICK_CYCLES+0x57929>
    6958:	00000478 	andeq	r0, r0, r8, ror r4
    695c:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    6960:	00000199 	muleq	r0, r9, r1
    6964:	1a01e903 	bne	80d78 <SYSTICK_CYCLES+0x57d39>
    6968:	00000478 	andeq	r0, r0, r8, ror r4
    696c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    6970:	00000596 	muleq	r0, r6, r5
    6974:	1a01f103 	bne	82d88 <SYSTICK_CYCLES+0x59d49>
    6978:	0000015e 	andeq	r0, r0, lr, asr r1
    697c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    6980:	000002d9 	ldrdeq	r0, [r0], -r9
    6984:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    6988:	00000097 	muleq	r0, r7, r0
    698c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    6990:	00000246 	andeq	r0, r0, r6, asr #4
    6994:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    6998:	00000097 	muleq	r0, r7, r0
    699c:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    69a0:	00000173 	andeq	r0, r0, r3, ror r1
    69a4:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    69a8:	00000097 	muleq	r0, r7, r0
    69ac:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    69b0:	00000730 	andeq	r0, r0, r0, lsr r7
    69b4:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    69b8:	00000097 	muleq	r0, r7, r0
    69bc:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    69c0:	000000eb 	andeq	r0, r0, fp, ror #1
    69c4:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    69c8:	00000097 	muleq	r0, r7, r0
    69cc:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    69d0:	0000035c 	andeq	r0, r0, ip, asr r3
    69d4:	1b01fb03 	blne	855e8 <SYSTICK_CYCLES+0x5c5a9>
    69d8:	0000048f 	andeq	r0, r0, pc, lsl #9
    69dc:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    69e0:	00000152 	andeq	r0, r0, r2, asr r1
    69e4:	1b020303 	blne	875f8 <SYSTICK_CYCLES+0x5e5b9>
    69e8:	0000013f 	andeq	r0, r0, pc, lsr r1
    69ec:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    69f0:	00000107 	andeq	r0, r0, r7, lsl #2
    69f4:	19020403 	stmdbne	r2, {r0, r1, sl}
    69f8:	000000a3 	andeq	r0, r0, r3, lsr #1
    69fc:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    6a00:	0000033b 	andeq	r0, r0, fp, lsr r3
    6a04:	19020803 	stmdbne	r2, {r0, r1, fp}
    6a08:	00000151 	andeq	r0, r0, r1, asr r1
    6a0c:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
    6a10:	000002ec 	andeq	r0, r0, ip, ror #5
    6a14:	1b020e03 	blne	8a228 <SYSTICK_CYCLES+0x611e9>
    6a18:	0000048f 	andeq	r0, r0, pc, lsl #9
    6a1c:	08682302 	stmdaeq	r8!, {r1, r8, r9, sp}^
    6a20:	000005ce 	andeq	r0, r0, lr, asr #11
    6a24:	1a020f03 	bne	8a638 <SYSTICK_CYCLES+0x615f9>
    6a28:	00000076 	andeq	r0, r0, r6, ror r0
    6a2c:	086c2302 	stmdaeq	ip!, {r1, r8, r9, sp}^
    6a30:	00000717 	andeq	r0, r0, r7, lsl r7
    6a34:	1a021103 	bne	8ae48 <SYSTICK_CYCLES+0x61e09>
    6a38:	00000478 	andeq	r0, r0, r8, ror r4
    6a3c:	08702302 	ldmdaeq	r0!, {r1, r8, r9, sp}^
    6a40:	00000212 	andeq	r0, r0, r2, lsl r2
    6a44:	1a021203 	bne	8b258 <SYSTICK_CYCLES+0x62219>
    6a48:	00000478 	andeq	r0, r0, r8, ror r4
    6a4c:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
    6a50:	000006fa 	strdeq	r0, [r0], -sl
    6a54:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    6a58:	000000a3 	andeq	r0, r0, r3, lsr #1
    6a5c:	08782302 	ldmdaeq	r8!, {r1, r8, r9, sp}^
    6a60:	000003c6 	andeq	r0, r0, r6, asr #7
    6a64:	1a021403 	bne	8ba78 <SYSTICK_CYCLES+0x62a39>
    6a68:	00000076 	andeq	r0, r0, r6, ror r0
    6a6c:	087c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}^
    6a70:	00000554 	andeq	r0, r0, r4, asr r5
    6a74:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    6a78:	00000097 	muleq	r0, r7, r0
    6a7c:	01802303 	orreq	r2, r0, r3, lsl #6
    6a80:	0003e808 	andeq	lr, r3, r8, lsl #16
    6a84:	02160300 	andseq	r0, r6, #0, 6
    6a88:	00009719 	andeq	r9, r0, r9, lsl r7
    6a8c:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    6a90:	08e40801 	stmiaeq	r4!, {r0, fp}^
    6a94:	1f030000 	svcne	0x00030000
    6a98:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    6a9c:	23030000 	movwcs	r0, #12288	; 0x3000
    6aa0:	d5080188 	strle	r0, [r8, #-392]	; 0xfffffe78
    6aa4:	03000007 	movweq	r0, #7
    6aa8:	781a0220 	ldmdavc	sl, {r5, r9}
    6aac:	03000004 	movweq	r0, #4
    6ab0:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
    6ab4:	000002c1 	andeq	r0, r0, r1, asr #5
    6ab8:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    6abc:	00000097 	muleq	r0, r7, r0
    6ac0:	01902303 	orrseq	r2, r0, r3, lsl #6
    6ac4:	00025608 	andeq	r5, r2, r8, lsl #12
    6ac8:	022f0300 	eoreq	r0, pc, #0, 6
    6acc:	00009719 	andeq	r9, r0, r9, lsl r7
    6ad0:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    6ad4:	03200801 			; <UNDEFINED> instruction: 0x03200801
    6ad8:	30030000 	andcc	r0, r3, r0
    6adc:	00971902 	addseq	r1, r7, r2, lsl #18
    6ae0:	23030000 	movwcs	r0, #12288	; 0x3000
    6ae4:	77080198 			; <UNDEFINED> instruction: 0x77080198
    6ae8:	03000002 	movweq	r0, #2
    6aec:	97190233 			; <UNDEFINED> instruction: 0x97190233
    6af0:	03000000 	movweq	r0, #0
    6af4:	08019c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, ip, pc}
    6af8:	00000000 	andeq	r0, r0, r0
    6afc:	1a023503 	bne	93f10 <SYSTICK_CYCLES+0x6aed1>
    6b00:	00000574 	andeq	r0, r0, r4, ror r5
    6b04:	01a02303 	lsleq	r2, r3, #6
    6b08:	001bb708 	andseq	fp, fp, r8, lsl #14
    6b0c:	023a0300 	eorseq	r0, sl, #0, 6
    6b10:	0000a319 	andeq	sl, r0, r9, lsl r3
    6b14:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    6b18:	1c770801 	ldclne	8, cr0, [r7], #-4
    6b1c:	3d030000 	stccc	0, cr0, [r3, #-0]
    6b20:	00a31902 	adceq	r1, r3, r2, lsl #18
    6b24:	23030000 	movwcs	r0, #12288	; 0x3000
    6b28:	300801a8 	andcc	r0, r8, r8, lsr #3
    6b2c:	0300001b 	movweq	r0, #27
    6b30:	a3190241 	tstge	r9, #268435460	; 0x10000004
    6b34:	03000000 	movweq	r0, #0
    6b38:	0801ac23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, pc}
    6b3c:	00001d2e 	andeq	r1, r0, lr, lsr #26
    6b40:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    6b44:	000000a3 	andeq	r0, r0, r3, lsr #1
    6b48:	01b02303 	lslseq	r2, r3, #6
    6b4c:	001c4708 	andseq	r4, ip, r8, lsl #14
    6b50:	02480300 	subeq	r0, r8, #0, 6
    6b54:	0000a319 	andeq	sl, r0, r9, lsl r3
    6b58:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    6b5c:	07a80801 	streq	r0, [r8, r1, lsl #16]!
    6b60:	4c030000 	stcmi	0, cr0, [r3], {-0}
    6b64:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    6b68:	23030000 	movwcs	r0, #12288	; 0x3000
    6b6c:	060801b8 			; <UNDEFINED> instruction: 0x060801b8
    6b70:	0300001d 	movweq	r0, #29
    6b74:	a319024f 	tstge	r9, #-268435452	; 0xf0000004
    6b78:	03000000 	movweq	r0, #0
    6b7c:	0801bc23 	stmdaeq	r1, {r0, r1, r5, sl, fp, ip, sp, pc}
    6b80:	00001b08 	andeq	r1, r0, r8, lsl #22
    6b84:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    6b88:	000000a3 	andeq	r0, r0, r3, lsr #1
    6b8c:	01c02303 	biceq	r2, r0, r3, lsl #6
    6b90:	001a8508 	andseq	r8, sl, r8, lsl #10
    6b94:	02550300 	subseq	r0, r5, #0, 6
    6b98:	0000a319 	andeq	sl, r0, r9, lsl r3
    6b9c:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    6ba0:	1bdb0801 	blne	ff6c8bac <__RAM_segment_used_end__+0xc75c8bac>
    6ba4:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    6ba8:	00a31902 	adceq	r1, r3, r2, lsl #18
    6bac:	23030000 	movwcs	r0, #12288	; 0x3000
    6bb0:	a90801c8 	stmdbge	r8, {r3, r6, r7, r8}
    6bb4:	03000009 	movweq	r0, #9
    6bb8:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    6bbc:	03000000 	movweq	r0, #0
    6bc0:	0801cc23 	stmdaeq	r1, {r0, r1, r5, sl, fp, lr, pc}
    6bc4:	00000481 	andeq	r0, r0, r1, lsl #9
    6bc8:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    6bcc:	000000a3 	andeq	r0, r0, r3, lsr #1
    6bd0:	01d02303 	bicseq	r2, r0, r3, lsl #6
    6bd4:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
    6bd8:	09000001 	stmdbeq	r0, {r0}
    6bdc:	00048f01 	andeq	r8, r4, r1, lsl #30
    6be0:	04780a00 	ldrbteq	r0, [r8], #-2560	; 0xfffff600
    6be4:	a30a0000 	movwge	r0, #40960	; 0xa000
    6be8:	00000000 	andeq	r0, r0, r0
    6bec:	047e040b 	ldrbteq	r0, [lr], #-1035	; 0xfffffbf5
    6bf0:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    6bf4:	34000007 	strcc	r0, [r0], #-7
    6bf8:	10037e03 	andne	r7, r3, r3, lsl #28
    6bfc:	00000574 	andeq	r0, r0, r4, ror r5
    6c00:	00018d08 	andeq	r8, r1, r8, lsl #26
    6c04:	03820300 	orreq	r0, r2, #0, 6
    6c08:	0000a319 	andeq	sl, r0, r9, lsl r3
    6c0c:	00230200 	eoreq	r0, r3, r0, lsl #4
    6c10:	00087c08 	andeq	r7, r8, r8, lsl #24
    6c14:	03850300 	orreq	r0, r5, #0, 6
    6c18:	00015e1a 	andeq	r5, r1, sl, lsl lr
    6c1c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6c20:	0006e108 	andeq	lr, r6, r8, lsl #2
    6c24:	03880300 	orreq	r0, r8, #0, 6
    6c28:	00009719 	andeq	r9, r0, r9, lsl r7
    6c2c:	08230200 	stmdaeq	r3!, {r9}
    6c30:	0004cb08 	andeq	ip, r4, r8, lsl #22
    6c34:	038c0300 	orreq	r0, ip, #0, 6
    6c38:	00058d1a 	andeq	r8, r5, sl, lsl sp
    6c3c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    6c40:	00016208 	andeq	r6, r1, r8, lsl #4
    6c44:	03900300 	orrseq	r0, r0, #0, 6
    6c48:	00009719 	andeq	r9, r0, r9, lsl r7
    6c4c:	10230200 	eorne	r0, r3, r0, lsl #4
    6c50:	00012108 	andeq	r2, r1, r8, lsl #2
    6c54:	03930300 	orrseq	r0, r3, #0, 6
    6c58:	00009719 	andeq	r9, r0, r9, lsl r7
    6c5c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    6c60:	0008b208 	andeq	fp, r8, r8, lsl #4
    6c64:	03980300 	orrseq	r0, r8, #0, 6
    6c68:	0004781a 	andeq	r7, r4, sl, lsl r8
    6c6c:	18230200 	stmdane	r3!, {r9}
    6c70:	0006c808 	andeq	ip, r6, r8, lsl #16
    6c74:	03990300 	orrseq	r0, r9, #0, 6
    6c78:	00009719 	andeq	r9, r0, r9, lsl r7
    6c7c:	1c230200 	sfmne	f0, 4, [r3], #-0
    6c80:	0005b808 	andeq	fp, r5, r8, lsl #16
    6c84:	039d0300 	orrseq	r0, sp, #0, 6
    6c88:	0005741a 	andeq	r7, r5, sl, lsl r4
    6c8c:	20230200 	eorcs	r0, r3, r0, lsl #4
    6c90:	00068508 	andeq	r8, r6, r8, lsl #10
    6c94:	039e0300 	orrseq	r0, lr, #0, 6
    6c98:	0005741a 	andeq	r7, r5, sl, lsl r4
    6c9c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    6ca0:	0001d008 	andeq	sp, r1, r8
    6ca4:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    6ca8:	00009719 	andeq	r9, r0, r9, lsl r7
    6cac:	28230200 	stmdacs	r3!, {r9}
    6cb0:	0009c508 	andeq	ip, r9, r8, lsl #10
    6cb4:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    6cb8:	0005741a 	andeq	r7, r5, sl, lsl r4
    6cbc:	2c230200 	sfmcs	f0, 4, [r3], #-0
    6cc0:	00042508 	andeq	r2, r4, r8, lsl #10
    6cc4:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    6cc8:	0005741a 	andeq	r7, r5, sl, lsl r4
    6ccc:	30230200 	eorcc	r0, r3, r0, lsl #4
    6cd0:	95040b00 	strls	r0, [r4, #-2816]	; 0xfffff500
    6cd4:	0c000004 	stceq	0, cr0, [r0], {4}
    6cd8:	000008d4 	ldrdeq	r0, [r0], -r4
    6cdc:	03028603 	movweq	r8, #9731	; 0x2603
    6ce0:	00000164 	andeq	r0, r0, r4, ror #2
    6ce4:	008b040b 	addeq	r0, fp, fp, lsl #8
    6ce8:	040b0000 	streq	r0, [fp], #-0
    6cec:	0000057a 	andeq	r0, r0, sl, ror r5
    6cf0:	0019b20d 	andseq	fp, r9, sp, lsl #4
    6cf4:	01400400 	cmpeq	r0, r0, lsl #8
    6cf8:	00058d21 	andeq	r8, r5, r1, lsr #26
    6cfc:	0d010100 	stfeqs	f0, [r1, #-0]
    6d00:	000019f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    6d04:	21014504 	tstcs	r1, r4, lsl #10
    6d08:	0000058d 	andeq	r0, r0, sp, lsl #11
    6d0c:	540d0101 	strpl	r0, [sp], #-257	; 0xfffffeff
    6d10:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    6d14:	a321014a 			; <UNDEFINED> instruction: 0xa321014a
    6d18:	01000000 	mrseq	r0, (UNDEF: 0)
    6d1c:	18e80d01 	stmiane	r8!, {r0, r8, sl, fp}^
    6d20:	53040000 	movwpl	r0, #16384	; 0x4000
    6d24:	00af2101 	adceq	r2, pc, r1, lsl #2
    6d28:	01010000 	mrseq	r0, (UNDEF: 1)
    6d2c:	1a18010e 	bne	60716c <__RAM_SIZE+0x50716c>
    6d30:	60010000 	andvs	r0, r1, r0
    6d34:	00970107 	addseq	r0, r7, r7, lsl #2
    6d38:	1dbc0000 	ldcne	0, cr0, [ip]
    6d3c:	1ee81000 	cdpne	0, 14, cr1, cr8, cr0, {0}
    6d40:	32f21000 	rscscc	r1, r2, #0
    6d44:	7d010000 	stcvc	0, cr0, [r1, #-0]
    6d48:	0f000008 	svceq	0x00000008
    6d4c:	000019cf 	andeq	r1, r0, pc, asr #19
    6d50:	8d246001 	stchi	0, cr6, [r4, #-4]!
    6d54:	16000005 	strne	r0, [r0], -r5
    6d58:	12000033 	andne	r0, r0, #51	; 0x33
    6d5c:	0f000033 	svceq	0x00000033
    6d60:	000011b0 			; <UNDEFINED> instruction: 0x000011b0
    6d64:	5e366001 	cdppl	0, 3, cr6, cr6, cr1, {0}
    6d68:	38000001 	stmdacc	r0, {r0}
    6d6c:	34000033 	strcc	r0, [r0], #-51	; 0xffffffcd
    6d70:	0f000033 	svceq	0x00000033
    6d74:	00001a3a 	andeq	r1, r0, sl, lsr sl
    6d78:	3f476001 	svccc	0x00476001
    6d7c:	5a000001 	bpl	6d88 <_Min_Stack_Size+0x5d88>
    6d80:	56000033 			; <UNDEFINED> instruction: 0x56000033
    6d84:	0f000033 	svceq	0x00000033
    6d88:	00001a6d 	andeq	r1, r0, sp, ror #20
    6d8c:	a3686001 	cmnge	r8, #1
    6d90:	7c000000 	stcvc	0, cr0, [r0], {-0}
    6d94:	78000033 	stmdavc	r0, {r0, r1, r4, r5}
    6d98:	0f000033 	svceq	0x00000033
    6d9c:	00000905 	andeq	r0, r0, r5, lsl #18
    6da0:	76236101 	strtvc	r6, [r3], -r1, lsl #2
    6da4:	a6000000 	strge	r0, [r0], -r0
    6da8:	9a000033 	bls	6e7c <_Min_Stack_Size+0x5e7c>
    6dac:	0f000033 	svceq	0x00000033
    6db0:	00000949 	andeq	r0, r0, r9, asr #18
    6db4:	a3366101 	teqge	r6, #1073741824	; 0x40000000
    6db8:	0b000000 	bleq	6dc0 <_Min_Stack_Size+0x5dc0>
    6dbc:	fd000034 	stc2	0, cr0, [r0, #-208]	; 0xffffff30
    6dc0:	0f000033 	svceq	0x00000033
    6dc4:	000002e3 	andeq	r0, r0, r3, ror #5
    6dc8:	97476101 	strbls	r6, [r7, -r1, lsl #2]
    6dcc:	6d000000 	stcvs	0, cr0, [r0, #-0]
    6dd0:	69000034 	stmdbvs	r0, {r2, r4, r5}
    6dd4:	0f000034 	svceq	0x00000034
    6dd8:	000000f5 	strdeq	r0, [r0], -r5
    6ddc:	97566101 	ldrbls	r6, [r6, -r1, lsl #2]
    6de0:	91000000 	mrsls	r0, (UNDEF: 0)
    6de4:	8d000034 	stchi	0, cr0, [r0, #-208]	; 0xffffff30
    6de8:	0f000034 	svceq	0x00000034
    6dec:	000021db 	ldrdeq	r2, [r0], -fp
    6df0:	a3236201 			; <UNDEFINED> instruction: 0xa3236201
    6df4:	b5000000 	strlt	r0, [r0, #-0]
    6df8:	b1000034 	tstlt	r0, r4, lsr r0
    6dfc:	0f000034 	svceq	0x00000034
    6e00:	00001a49 	andeq	r1, r0, r9, asr #20
    6e04:	97346201 	ldrls	r6, [r4, -r1, lsl #4]!
    6e08:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    6e0c:	d5000034 	strle	r0, [r0, #-52]	; 0xffffffcc
    6e10:	10000034 	andne	r0, r0, r4, lsr r0
    6e14:	00000ee2 	andeq	r0, r0, r2, ror #29
    6e18:	97016501 	strls	r6, [r1, -r1, lsl #10]
    6e1c:	fd000000 	stc2	0, cr0, [r0, #-0]
    6e20:	f9000034 			; <UNDEFINED> instruction: 0xf9000034
    6e24:	10000034 	andne	r0, r0, r4, lsr r0
    6e28:	00000ffb 	strdeq	r0, [r0], -fp
    6e2c:	8d1a6701 	ldchi	7, cr6, [sl, #-4]
    6e30:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    6e34:	1b000035 	blne	6f10 <_Min_Stack_Size+0x5f10>
    6e38:	10000035 	andne	r0, r0, r5, lsr r0
    6e3c:	00001007 	andeq	r1, r0, r7
    6e40:	8d1a6801 	ldchi	8, cr6, [sl, #-4]
    6e44:	32000005 	andcc	r0, r0, #5
    6e48:	30000035 	andcc	r0, r0, r5, lsr r0
    6e4c:	10000035 	andne	r0, r0, r5, lsr r0
    6e50:	000019c9 	andeq	r1, r0, r9, asr #19
    6e54:	8d1a6901 	vldrhi.16	s12, [sl, #-2]	; <UNPREDICTABLE>
    6e58:	49000005 	stmdbmi	r0, {r0, r2}
    6e5c:	45000035 	strmi	r0, [r0, #-53]	; 0xffffffcb
    6e60:	10000035 	andne	r0, r0, r5, lsr r0
    6e64:	00001a2a 	andeq	r1, r0, sl, lsr #20
    6e68:	97196a01 	ldrls	r6, [r9, -r1, lsl #20]
    6e6c:	73000000 	movwvc	r0, #0
    6e70:	67000035 	smladxvs	r0, r5, r0, r0
    6e74:	10000035 	andne	r0, r0, r5, lsr r0
    6e78:	00001259 	andeq	r1, r0, r9, asr r2
    6e7c:	871a6b01 	ldrhi	r6, [sl, -r1, lsl #22]
    6e80:	cb000005 	blgt	6e9c <_Min_Stack_Size+0x5e9c>
    6e84:	c1000035 	tstgt	r0, r5, lsr r0
    6e88:	10000035 	andne	r0, r0, r5, lsr r0
    6e8c:	00001a08 	andeq	r1, r0, r8, lsl #20
    6e90:	a3196e01 	tstge	r9, #1, 28
    6e94:	24000000 	strcs	r0, [r0], #-0
    6e98:	22000036 	andcs	r0, r0, #54	; 0x36
    6e9c:	10000036 	andne	r0, r0, r6, lsr r0
    6ea0:	0000195a 	andeq	r1, r0, sl, asr r9
    6ea4:	a3196f01 	tstge	r9, #1, 30
    6ea8:	41000000 	mrsmi	r0, (UNDEF: 0)
    6eac:	37000036 	smladxcc	r0, r6, r0, r0
    6eb0:	11000036 	tstne	r0, r6, lsr r0
    6eb4:	0000087d 	andeq	r0, r0, sp, ror r8
    6eb8:	10001e40 	andne	r1, r0, r0, asr #28
    6ebc:	001e4001 	andseq	r4, lr, r1
    6ec0:	001e4610 	andseq	r4, lr, r0, lsl r6
    6ec4:	05e90110 	strbeq	r0, [r9, #272]!	; 0x110
    6ec8:	000007a1 	andeq	r0, r0, r1, lsr #15
    6ecc:	00089012 	andeq	r9, r8, r2, lsl r0
    6ed0:	00369000 	eorseq	r9, r6, r0
    6ed4:	00368c00 	eorseq	r8, r6, r0, lsl #24
    6ed8:	08bb1300 	ldmeq	fp!, {r8, r9, ip}
    6edc:	1e400000 	cdpne	0, 4, cr0, cr0, cr0, {0}
    6ee0:	40041000 	andmi	r1, r4, r0
    6ee4:	4410001e 	ldrmi	r0, [r0], #-30	; 0xffffffe2
    6ee8:	0210001e 	andseq	r0, r0, #30
    6eec:	12130256 	andsne	r0, r3, #1610612741	; 0x60000005
    6ef0:	000008ce 	andeq	r0, r0, lr, asr #17
    6ef4:	000036b0 			; <UNDEFINED> instruction: 0x000036b0
    6ef8:	000036ae 	andeq	r3, r0, lr, lsr #13
    6efc:	9e140000 	cdpls	0, 1, cr0, cr4, cr0, {0}
    6f00:	68000008 	stmdavs	r0, {r3}
    6f04:	0110001e 	tsteq	r0, lr, lsl r0
    6f08:	10001e68 	andne	r1, r0, r8, ror #28
    6f0c:	10001e6c 	andne	r1, r0, ip, ror #28
    6f10:	09016c01 	stmdbeq	r1, {r0, sl, fp, sp, lr}
    6f14:	000007c9 	andeq	r0, r0, r9, asr #15
    6f18:	0008ad15 	andeq	sl, r8, r5, lsl sp
    6f1c:	0036c500 	eorseq	ip, r6, r0, lsl #10
    6f20:	0036c300 	eorseq	ip, r6, r0, lsl #6
    6f24:	dc140000 	ldcle	0, cr0, [r4], {-0}
    6f28:	94000008 	strls	r0, [r0], #-8
    6f2c:	0110001e 	tsteq	r0, lr, lsl r0
    6f30:	10001e94 	mulne	r0, r4, lr
    6f34:	10001e98 	mulne	r0, r8, lr
    6f38:	0d012301 	stceq	3, cr2, [r1, #-4]
    6f3c:	000007f1 	strdeq	r0, [r0], -r1
    6f40:	0008ef12 	andeq	lr, r8, r2, lsl pc
    6f44:	0036da00 	eorseq	sp, r6, r0, lsl #20
    6f48:	0036d800 	eorseq	sp, r6, r0, lsl #16
    6f4c:	9e140000 	cdpls	0, 1, cr0, cr4, cr0, {0}
    6f50:	bc000008 	stclt	0, cr0, [r0], {8}
    6f54:	0110001e 	tsteq	r0, lr, lsl r0
    6f58:	10001ebc 			; <UNDEFINED> instruction: 0x10001ebc
    6f5c:	10001ec0 	andne	r1, r0, r0, asr #29
    6f60:	09014d01 	stmdbeq	r1, {r0, r8, sl, fp, lr}
    6f64:	00000819 	andeq	r0, r0, r9, lsl r8
    6f68:	0008ad15 	andeq	sl, r8, r5, lsl sp
    6f6c:	0036ef00 	eorseq	lr, r6, r0, lsl #30
    6f70:	0036ed00 	eorseq	lr, r6, r0, lsl #26
    6f74:	da160000 	ble	586f7c <__RAM_SIZE+0x486f7c>
    6f78:	fd10001d 	ldc2	0, cr0, [r0, #-116]	; 0xffffff8c
    6f7c:	39000008 	stmdbcc	r0, {r3}
    6f80:	17000008 	strne	r0, [r0, -r8]
    6f84:	7b025001 	blvc	9af90 <SYSTICK_CYCLES+0x71f51>
    6f88:	51011700 	tstpl	r1, r0, lsl #14
    6f8c:	17ef0802 	strbne	r0, [pc, r2, lsl #16]!
    6f90:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    6f94:	fa160000 	blx	586f9c <__RAM_SIZE+0x486f9c>
    6f98:	0b10001d 	bleq	407014 <__RAM_SIZE+0x307014>
    6f9c:	58000009 	stmdapl	r0, {r0, r3}
    6fa0:	17000008 	strne	r0, [r0, -r8]
    6fa4:	74025001 	strvc	r5, [r2], #-1
    6fa8:	51011700 	tstpl	r1, r0, lsl #14
    6fac:	01173001 	tsteq	r7, r1
    6fb0:	d4080252 	strle	r0, [r8], #-594	; 0xfffffdae
    6fb4:	1e3a1600 	cfmsuba32ne	mvax0, mvax1, mvfx10, mvfx0
    6fb8:	09181000 	ldmdbeq	r8, {ip}
    6fbc:	086c0000 	stmdaeq	ip!, {}^	; <UNPREDICTABLE>
    6fc0:	01170000 	tsteq	r7, r0
    6fc4:	00740250 	rsbseq	r0, r4, r0, asr r2
    6fc8:	1ebc1800 	cdpne	8, 11, cr1, cr12, cr0, {0}
    6fcc:	09271000 	stmdbeq	r7!, {ip}
    6fd0:	01170000 	tsteq	r7, r0
    6fd4:	00740250 	rsbseq	r0, r4, r0, asr r2
    6fd8:	18190000 	ldmdane	r9, {}	; <UNPREDICTABLE>
    6fdc:	0200000f 	andeq	r0, r0, #15
    6fe0:	01370252 	teqeq	r7, r2, asr r2
    6fe4:	00000097 	muleq	r0, r7, r0
    6fe8:	00089e03 	andeq	r9, r8, r3, lsl #28
    6fec:	0ea11a00 	vfmaeq.f32	s2, s2, s0
    6ff0:	54020000 	strpl	r0, [r2], #-0
    6ff4:	00970602 	addseq	r0, r7, r2, lsl #12
    6ff8:	1b000000 	blne	7000 <_Min_Stack_Size+0x6000>
    6ffc:	00000e8d 	andeq	r0, r0, sp, lsl #29
    7000:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    7004:	08bb0301 	ldmeq	fp!, {r0, r8, r9}
    7008:	a11c0000 	tstge	ip, r0
    700c:	0200000e 	andeq	r0, r0, #14
    7010:	97500249 	ldrbls	r0, [r0, -r9, asr #4]
    7014:	00000000 	andeq	r0, r0, r0
    7018:	000eb619 	andeq	fp, lr, r9, lsl r6
    701c:	02320200 	eorseq	r0, r2, #0, 4
    7020:	00970137 	addseq	r0, r7, r7, lsr r1
    7024:	dc030000 	stcle	0, cr0, [r3], {-0}
    7028:	1a000008 	bne	7050 <_Min_Stack_Size+0x6050>
    702c:	00000ea5 	andeq	r0, r0, r5, lsr #29
    7030:	06023402 	streq	r3, [r2], -r2, lsl #8
    7034:	00000097 	muleq	r0, r7, r0
    7038:	196e1900 	stmdbne	lr!, {r8, fp, ip}^
    703c:	fa020000 	blx	87044 <SYSTICK_CYCLES+0x5e005>
    7040:	97013701 	strls	r3, [r1, -r1, lsl #14]
    7044:	03000000 	movweq	r0, #0
    7048:	000008fd 	strdeq	r0, [r0], -sp
    704c:	001a791a 	andseq	r7, sl, sl, lsl r9
    7050:	01fc0200 	mvnseq	r0, r0, lsl #4
    7054:	00009706 	andeq	r9, r0, r6, lsl #14
    7058:	011d0000 	tsteq	sp, r0
    705c:	00120601 	andseq	r0, r2, r1, lsl #12
    7060:	00120600 	andseq	r0, r2, r0, lsl #12
    7064:	09210500 	stmdbeq	r1!, {r8, sl}
    7068:	0601011e 			; <UNDEFINED> instruction: 0x0601011e
    706c:	fc000012 	stc2	0, cr0, [r0], {18}
    7070:	06000011 			; <UNDEFINED> instruction: 0x06000011
    7074:	01011f00 	tsteq	r1, r0, lsl #30
    7078:	000019da 	ldrdeq	r1, [r0], -sl
    707c:	000019da 	ldrdeq	r1, [r0], -sl
    7080:	0d011904 	vstreq.16	s2, [r1, #-8]	; <UNPREDICTABLE>
    7084:	5801011f 	stmdapl	r1, {r0, r1, r2, r3, r4, r8}
    7088:	58000010 	stmdapl	r0, {r4}
    708c:	04000010 	streq	r0, [r0], #-16
    7090:	000d011e 	andeq	r0, sp, lr, lsl r1
    7094:	00000922 	andeq	r0, r0, r2, lsr #18
    7098:	132d0002 			; <UNDEFINED> instruction: 0x132d0002
    709c:	01040000 	mrseq	r0, (UNDEF: 4)
    70a0:	0000003d 	andeq	r0, r0, sp, lsr r0
    70a4:	001d5f0c 	andseq	r5, sp, ip, lsl #30
    70a8:	00064100 	andeq	r4, r6, r0, lsl #2
    70ac:	00029800 	andeq	r9, r2, r0, lsl #16
	...
    70b8:	002c2500 	eoreq	r2, ip, r0, lsl #10
    70bc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    70c0:	00000239 	andeq	r0, r0, r9, lsr r2
    70c4:	69050403 	stmdbvs	r5, {r0, r1, sl}
    70c8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    70cc:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    70d0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    70d4:	00062304 	andeq	r2, r6, r4, lsl #6
    70d8:	06010200 	streq	r0, [r1], -r0, lsl #4
    70dc:	00000852 	andeq	r0, r0, r2, asr r8
    70e0:	50080102 	andpl	r0, r8, r2, lsl #2
    70e4:	02000008 	andeq	r0, r0, #8
    70e8:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    70ec:	02020000 	andeq	r0, r2, #0
    70f0:	00091e07 	andeq	r1, r9, r7, lsl #28
    70f4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    70f8:	000004ed 	andeq	r0, r0, sp, ror #9
    70fc:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    7100:	02000002 	andeq	r0, r0, #2
    7104:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    7108:	04040000 	streq	r0, [r4], #-0
    710c:	59080102 	stmdbpl	r8, {r1, r8}
    7110:	05000008 	streq	r0, [r0, #-8]
    7114:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    7118:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    711c:	06000000 	streq	r0, [r0], -r0
    7120:	0000007f 	andeq	r0, r0, pc, ror r0
    7124:	00077f05 	andeq	r7, r7, r5, lsl #30
    7128:	31760200 	cmncc	r6, r0, lsl #4
    712c:	00000029 	andeq	r0, r0, r9, lsr #32
    7130:	00009007 	andeq	r9, r0, r7
    7134:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    7138:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    713c:	00006831 	andeq	r6, r0, r1, lsr r8
    7140:	00a10700 	adceq	r0, r1, r0, lsl #14
    7144:	7f080000 	svcvc	0x00080000
    7148:	c2000000 	andgt	r0, r0, #0
    714c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7150:	00000029 	andeq	r0, r0, r9, lsr #32
    7154:	1b0a0052 	blne	2872a4 <__RAM_SIZE+0x1872a4>
    7158:	0200001c 	andeq	r0, r0, #28
    715c:	b2210287 	eorlt	r0, r1, #1879048200	; 0x70000008
    7160:	01000000 	mrseq	r0, (UNDEF: 0)
    7164:	00000305 	andeq	r0, r0, r5, lsl #6
    7168:	3b0b0000 	blcc	2c7170 <__RAM_SIZE+0x1c7170>
    716c:	1c000005 	stcne	0, cr0, [r0], {5}
    7170:	10018203 	andne	r8, r1, r3, lsl #4
    7174:	00000155 	andeq	r0, r0, r5, asr r1
    7178:	0008120c 	andeq	r1, r8, ip, lsl #4
    717c:	01860300 	orreq	r0, r6, r0, lsl #6
    7180:	0000a119 	andeq	sl, r0, r9, lsl r1
    7184:	00230200 	eoreq	r0, r3, r0, lsl #4
    7188:	0003a00c 	andeq	sl, r3, ip
    718c:	01870300 	orreq	r0, r7, r0, lsl #6
    7190:	0000a119 	andeq	sl, r0, r9, lsl r1
    7194:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7198:	00043d0c 	andeq	r3, r4, ip, lsl #26
    719c:	018a0300 	orreq	r0, sl, r0, lsl #6
    71a0:	0001611b 	andeq	r6, r1, fp, lsl r1
    71a4:	08230200 	stmdaeq	r3!, {r9}
    71a8:	0001f20c 	andeq	pc, r1, ip, lsl #4
    71ac:	018b0300 	orreq	r0, fp, r0, lsl #6
    71b0:	0000a119 	andeq	sl, r0, r9, lsl r1
    71b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    71b8:	0009540c 	andeq	r5, r9, ip, lsl #8
    71bc:	01910300 	orrseq	r0, r1, r0, lsl #6
    71c0:	0001671a 	andeq	r6, r1, sl, lsl r7
    71c4:	10230200 	eorne	r0, r3, r0, lsl #4
    71c8:	00001b0c 	andeq	r1, r0, ip, lsl #22
    71cc:	01920300 	orrseq	r0, r2, r0, lsl #6
    71d0:	0001671a 	andeq	r6, r1, sl, lsl r7
    71d4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    71d8:	0005ee0c 	andeq	lr, r5, ip, lsl #28
    71dc:	01960300 	orrseq	r0, r6, r0, lsl #6
    71e0:	00016d1b 	andeq	r6, r1, fp, lsl sp
    71e4:	18230200 	stmdane	r3!, {r9}
    71e8:	61010d00 	tstvs	r1, r0, lsl #26
    71ec:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    71f0:	000000a1 	andeq	r0, r0, r1, lsr #1
    71f4:	55040f00 	strpl	r0, [r4, #-3840]	; 0xfffff100
    71f8:	0f000001 	svceq	0x00000001
    71fc:	0000d604 	andeq	sp, r0, r4, lsl #12
    7200:	67040f00 	strvs	r0, [r4, -r0, lsl #30]
    7204:	10000001 	andne	r0, r0, r1
    7208:	0000062f 	andeq	r0, r0, pc, lsr #12
    720c:	03019b03 	movweq	r9, #6915	; 0x1b03
    7210:	000000d6 	ldrdeq	r0, [r0], -r6
    7214:	007f040f 	rsbseq	r0, pc, pc, lsl #8
    7218:	4b0b0000 	blmi	2c7220 <__RAM_SIZE+0x1c7220>
    721c:	d4000003 	strle	r0, [r0], #-3
    7220:	1001d603 	andne	sp, r1, r3, lsl #12
    7224:	0000049a 	muleq	r0, sl, r4
    7228:	0009110c 	andeq	r1, r9, ip, lsl #2
    722c:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    7230:	0000a119 	andeq	sl, r0, r9, lsl r1
    7234:	00230200 	eoreq	r0, r3, r0, lsl #4
    7238:	0007840c 	andeq	r8, r7, ip, lsl #8
    723c:	01de0300 	bicseq	r0, lr, r0, lsl #6
    7240:	0000a119 	andeq	sl, r0, r9, lsl r1
    7244:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7248:	0001bc0c 	andeq	fp, r1, ip, lsl #24
    724c:	01df0300 	bicseq	r0, pc, r0, lsl #6
    7250:	0000761a 	andeq	r7, r0, sl, lsl r6
    7254:	08230200 	stmdaeq	r3!, {r9}
    7258:	0008fb0c 	andeq	pc, r8, ip, lsl #22
    725c:	01e00300 	mvneq	r0, r0, lsl #6
    7260:	0000761a 	andeq	r7, r0, sl, lsl r6
    7264:	0c230200 	sfmeq	f0, 4, [r3], #-0
    7268:	0004110c 	andeq	r1, r4, ip, lsl #2
    726c:	01e10300 	mvneq	r0, r0, lsl #6
    7270:	0000761a 	andeq	r7, r0, sl, lsl r6
    7274:	10230200 	eorne	r0, r3, r0, lsl #4
    7278:	00093f0c 	andeq	r3, r9, ip, lsl #30
    727c:	01e20300 	mvneq	r0, r0, lsl #6
    7280:	0000a119 	andeq	sl, r0, r9, lsl r1
    7284:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    7288:	0021d10c 	eoreq	sp, r1, ip, lsl #2
    728c:	01e30300 	mvneq	r0, r0, lsl #6
    7290:	0000a119 	andeq	sl, r0, r9, lsl r1
    7294:	18230200 	stmdane	r3!, {r9}
    7298:	00060a0c 	andeq	r0, r6, ip, lsl #20
    729c:	01e40300 	mvneq	r0, r0, lsl #6
    72a0:	0000a119 	andeq	sl, r0, r9, lsl r1
    72a4:	1c230200 	sfmne	f0, 4, [r3], #-0
    72a8:	00069f0c 	andeq	r9, r6, ip, lsl #30
    72ac:	01e80300 	mvneq	r0, r0, lsl #6
    72b0:	00049a1a 	andeq	r9, r4, sl, lsl sl
    72b4:	20230200 	eorcs	r0, r3, r0, lsl #4
    72b8:	0001990c 	andeq	r9, r1, ip, lsl #18
    72bc:	01e90300 	mvneq	r0, r0, lsl #6
    72c0:	00049a1a 	andeq	r9, r4, sl, lsl sl
    72c4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    72c8:	0005960c 	andeq	r9, r5, ip, lsl #12
    72cc:	01f10300 	mvnseq	r0, r0, lsl #6
    72d0:	0001801a 	andeq	r8, r1, sl, lsl r0
    72d4:	28230200 	stmdacs	r3!, {r9}
    72d8:	0002d90c 	andeq	sp, r2, ip, lsl #18
    72dc:	01f20300 	mvnseq	r0, r0, lsl #6
    72e0:	00009019 	andeq	r9, r0, r9, lsl r0
    72e4:	2c230200 	sfmcs	f0, 4, [r3], #-0
    72e8:	0002460c 	andeq	r4, r2, ip, lsl #12
    72ec:	01f30300 	mvnseq	r0, r0, lsl #6
    72f0:	00009019 	andeq	r9, r0, r9, lsl r0
    72f4:	30230200 	eorcc	r0, r3, r0, lsl #4
    72f8:	0001730c 	andeq	r7, r1, ip, lsl #6
    72fc:	01f40300 	mvnseq	r0, r0, lsl #6
    7300:	00009019 	andeq	r9, r0, r9, lsl r0
    7304:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    7308:	0007300c 	andeq	r3, r7, ip
    730c:	01f50300 	mvnseq	r0, r0, lsl #6
    7310:	00009019 	andeq	r9, r0, r9, lsl r0
    7314:	38230200 	stmdacc	r3!, {r9}
    7318:	0000eb0c 	andeq	lr, r0, ip, lsl #22
    731c:	01f60300 	mvnseq	r0, r0, lsl #6
    7320:	00009019 	andeq	r9, r0, r9, lsl r0
    7324:	3c230200 	sfmcc	f0, 4, [r3], #-0
    7328:	00035c0c 	andeq	r5, r3, ip, lsl #24
    732c:	01fb0300 	mvnseq	r0, r0, lsl #6
    7330:	0004b11b 	andeq	fp, r4, fp, lsl r1
    7334:	40230200 	eormi	r0, r3, r0, lsl #4
    7338:	0001520c 	andeq	r5, r1, ip, lsl #4
    733c:	02030300 	andeq	r0, r3, #0, 6
    7340:	0001611b 	andeq	r6, r1, fp, lsl r1
    7344:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    7348:	0001070c 	andeq	r0, r1, ip, lsl #14
    734c:	02040300 	andeq	r0, r4, #0, 6
    7350:	0000a119 	andeq	sl, r0, r9, lsl r1
    7354:	48230200 	stmdami	r3!, {r9}
    7358:	00033b0c 	andeq	r3, r3, ip, lsl #22
    735c:	02080300 	andeq	r0, r8, #0, 6
    7360:	00017319 	andeq	r7, r1, r9, lsl r3
    7364:	4c230200 	sfmmi	f0, 4, [r3], #-0
    7368:	0002ec0c 	andeq	lr, r2, ip, lsl #24
    736c:	020e0300 	andeq	r0, lr, #0, 6
    7370:	0004b11b 	andeq	fp, r4, fp, lsl r1
    7374:	68230200 	stmdavs	r3!, {r9}
    7378:	0005ce0c 	andeq	ip, r5, ip, lsl #28
    737c:	020f0300 	andeq	r0, pc, #0, 6
    7380:	0000761a 	andeq	r7, r0, sl, lsl r6
    7384:	6c230200 	sfmvs	f0, 4, [r3], #-0
    7388:	0007170c 	andeq	r1, r7, ip, lsl #14
    738c:	02110300 	andseq	r0, r1, #0, 6
    7390:	00049a1a 	andeq	r9, r4, sl, lsl sl
    7394:	70230200 	eorvc	r0, r3, r0, lsl #4
    7398:	0002120c 	andeq	r1, r2, ip, lsl #4
    739c:	02120300 	andseq	r0, r2, #0, 6
    73a0:	00049a1a 	andeq	r9, r4, sl, lsl sl
    73a4:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    73a8:	0006fa0c 	andeq	pc, r6, ip, lsl #20
    73ac:	02130300 	andseq	r0, r3, #0, 6
    73b0:	0000a119 	andeq	sl, r0, r9, lsl r1
    73b4:	78230200 	stmdavc	r3!, {r9}
    73b8:	0003c60c 	andeq	ip, r3, ip, lsl #12
    73bc:	02140300 	andseq	r0, r4, #0, 6
    73c0:	0000761a 	andeq	r7, r0, sl, lsl r6
    73c4:	7c230200 	sfmvc	f0, 4, [r3], #-0
    73c8:	0005540c 	andeq	r5, r5, ip, lsl #8
    73cc:	02150300 	andseq	r0, r5, #0, 6
    73d0:	00009019 	andeq	r9, r0, r9, lsl r0
    73d4:	80230300 	eorhi	r0, r3, r0, lsl #6
    73d8:	03e80c01 	mvneq	r0, #256	; 0x100
    73dc:	16030000 	strne	r0, [r3], -r0
    73e0:	00901902 	addseq	r1, r0, r2, lsl #18
    73e4:	23030000 	movwcs	r0, #12288	; 0x3000
    73e8:	e40c0184 	str	r0, [ip], #-388	; 0xfffffe7c
    73ec:	03000008 	movweq	r0, #8
    73f0:	9a1a021f 	bls	687c74 <__RAM_SIZE+0x587c74>
    73f4:	03000004 	movweq	r0, #4
    73f8:	0c018823 	stceq	8, cr8, [r1], {35}	; 0x23
    73fc:	000007d5 	ldrdeq	r0, [r0], -r5
    7400:	1a022003 	bne	8f414 <SYSTICK_CYCLES+0x663d5>
    7404:	0000049a 	muleq	r0, sl, r4
    7408:	018c2303 	orreq	r2, ip, r3, lsl #6
    740c:	0002c10c 	andeq	ip, r2, ip, lsl #2
    7410:	022e0300 	eoreq	r0, lr, #0, 6
    7414:	00009019 	andeq	r9, r0, r9, lsl r0
    7418:	90230300 	eorls	r0, r3, r0, lsl #6
    741c:	02560c01 	subseq	r0, r6, #256	; 0x100
    7420:	2f030000 	svccs	0x00030000
    7424:	00901902 	addseq	r1, r0, r2, lsl #18
    7428:	23030000 	movwcs	r0, #12288	; 0x3000
    742c:	200c0194 	mulcs	ip, r4, r1
    7430:	03000003 	movweq	r0, #3
    7434:	90190230 	andsls	r0, r9, r0, lsr r2
    7438:	03000000 	movweq	r0, #0
    743c:	0c019823 	stceq	8, cr9, [r1], {35}	; 0x23
    7440:	00000277 	andeq	r0, r0, r7, ror r2
    7444:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    7448:	00000090 	muleq	r0, r0, r0
    744c:	019c2303 	orrseq	r2, ip, r3, lsl #6
    7450:	0000000c 	andeq	r0, r0, ip
    7454:	02350300 	eorseq	r0, r5, #0, 6
    7458:	0005961a 	andeq	r9, r5, sl, lsl r6
    745c:	a0230300 	eorge	r0, r3, r0, lsl #6
    7460:	1bb70c01 	blne	fedca46c <__RAM_segment_used_end__+0xc6cca46c>
    7464:	3a030000 	bcc	c746c <SYSTICK_CYCLES+0x9e42d>
    7468:	00a11902 	adceq	r1, r1, r2, lsl #18
    746c:	23030000 	movwcs	r0, #12288	; 0x3000
    7470:	770c01a4 	strvc	r0, [ip, -r4, lsr #3]
    7474:	0300001c 	movweq	r0, #28
    7478:	a119023d 	tstge	r9, sp, lsr r2
    747c:	03000000 	movweq	r0, #0
    7480:	0c01a823 	stceq	8, cr10, [r1], {35}	; 0x23
    7484:	00001b30 	andeq	r1, r0, r0, lsr fp
    7488:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    748c:	000000a1 	andeq	r0, r0, r1, lsr #1
    7490:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    7494:	001d2e0c 	andseq	r2, sp, ip, lsl #28
    7498:	02450300 	subeq	r0, r5, #0, 6
    749c:	0000a119 	andeq	sl, r0, r9, lsl r1
    74a0:	b0230300 	eorlt	r0, r3, r0, lsl #6
    74a4:	1c470c01 	mcrrne	12, 0, r0, r7, cr1
    74a8:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    74ac:	00a11902 	adceq	r1, r1, r2, lsl #18
    74b0:	23030000 	movwcs	r0, #12288	; 0x3000
    74b4:	a80c01b4 	stmdage	ip, {r2, r4, r5, r7, r8}
    74b8:	03000007 	movweq	r0, #7
    74bc:	9a1a024c 	bls	687df4 <__RAM_SIZE+0x587df4>
    74c0:	03000004 	movweq	r0, #4
    74c4:	0c01b823 	stceq	8, cr11, [r1], {35}	; 0x23
    74c8:	00001d06 	andeq	r1, r0, r6, lsl #26
    74cc:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    74d0:	000000a1 	andeq	r0, r0, r1, lsr #1
    74d4:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    74d8:	001b080c 	andseq	r0, fp, ip, lsl #16
    74dc:	02520300 	subseq	r0, r2, #0, 6
    74e0:	0000a119 	andeq	sl, r0, r9, lsl r1
    74e4:	c0230300 	eorgt	r0, r3, r0, lsl #6
    74e8:	1a850c01 	bne	fe14a4f4 <__RAM_segment_used_end__+0xc604a4f4>
    74ec:	55030000 	strpl	r0, [r3, #-0]
    74f0:	00a11902 	adceq	r1, r1, r2, lsl #18
    74f4:	23030000 	movwcs	r0, #12288	; 0x3000
    74f8:	db0c01c4 	blle	307c10 <__RAM_SIZE+0x207c10>
    74fc:	0300001b 	movweq	r0, #27
    7500:	a1190259 	tstge	r9, r9, asr r2
    7504:	03000000 	movweq	r0, #0
    7508:	0c01c823 	stceq	8, cr12, [r1], {35}	; 0x23
    750c:	000009a9 	andeq	r0, r0, r9, lsr #19
    7510:	1a025d03 	bne	9e924 <SYSTICK_CYCLES+0x758e5>
    7514:	00000076 	andeq	r0, r0, r6, ror r0
    7518:	01cc2303 	biceq	r2, ip, r3, lsl #6
    751c:	0004810c 	andeq	r8, r4, ip, lsl #2
    7520:	02780300 	rsbseq	r0, r8, #0, 6
    7524:	0000a119 	andeq	sl, r0, r9, lsl r1
    7528:	d0230300 	eorle	r0, r3, r0, lsl #6
    752c:	040f0001 	streq	r0, [pc], #-1	; 7534 <_Min_Stack_Size+0x6534>
    7530:	00000186 	andeq	r0, r0, r6, lsl #3
    7534:	04b1010d 	ldrteq	r0, [r1], #269	; 0x10d
    7538:	9a0e0000 	bls	387540 <__RAM_SIZE+0x287540>
    753c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    7540:	000000a1 	andeq	r0, r0, r1, lsr #1
    7544:	a0040f00 	andge	r0, r4, r0, lsl #30
    7548:	0b000004 	bleq	7560 <_Min_Stack_Size+0x6560>
    754c:	00000798 	muleq	r0, r8, r7
    7550:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    7554:	00059610 	andeq	r9, r5, r0, lsl r6
    7558:	018d0c00 	orreq	r0, sp, r0, lsl #24
    755c:	82030000 	andhi	r0, r3, #0
    7560:	00a11903 	adceq	r1, r1, r3, lsl #18
    7564:	23020000 	movwcs	r0, #8192	; 0x2000
    7568:	087c0c00 	ldmdaeq	ip!, {sl, fp}^
    756c:	85030000 	strhi	r0, [r3, #-0]
    7570:	01801a03 	orreq	r1, r0, r3, lsl #20
    7574:	23020000 	movwcs	r0, #8192	; 0x2000
    7578:	06e10c04 	strbteq	r0, [r1], r4, lsl #24
    757c:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    7580:	00901903 	addseq	r1, r0, r3, lsl #18
    7584:	23020000 	movwcs	r0, #8192	; 0x2000
    7588:	04cb0c08 	strbeq	r0, [fp], #3080	; 0xc08
    758c:	8c030000 	stchi	0, cr0, [r3], {-0}
    7590:	05a91a03 	streq	r1, [r9, #2563]!	; 0xa03
    7594:	23020000 	movwcs	r0, #8192	; 0x2000
    7598:	01620c0c 	cmneq	r2, ip, lsl #24
    759c:	90030000 	andls	r0, r3, r0
    75a0:	00901903 	addseq	r1, r0, r3, lsl #18
    75a4:	23020000 	movwcs	r0, #8192	; 0x2000
    75a8:	01210c10 			; <UNDEFINED> instruction: 0x01210c10
    75ac:	93030000 	movwls	r0, #12288	; 0x3000
    75b0:	00901903 	addseq	r1, r0, r3, lsl #18
    75b4:	23020000 	movwcs	r0, #8192	; 0x2000
    75b8:	08b20c14 	ldmeq	r2!, {r2, r4, sl, fp}
    75bc:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    75c0:	049a1a03 	ldreq	r1, [sl], #2563	; 0xa03
    75c4:	23020000 	movwcs	r0, #8192	; 0x2000
    75c8:	06c80c18 			; <UNDEFINED> instruction: 0x06c80c18
    75cc:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    75d0:	00901903 	addseq	r1, r0, r3, lsl #18
    75d4:	23020000 	movwcs	r0, #8192	; 0x2000
    75d8:	05b80c1c 	ldreq	r0, [r8, #3100]!	; 0xc1c
    75dc:	9d030000 	stcls	0, cr0, [r3, #-0]
    75e0:	05961a03 	ldreq	r1, [r6, #2563]	; 0xa03
    75e4:	23020000 	movwcs	r0, #8192	; 0x2000
    75e8:	06850c20 	streq	r0, [r5], r0, lsr #24
    75ec:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    75f0:	05961a03 	ldreq	r1, [r6, #2563]	; 0xa03
    75f4:	23020000 	movwcs	r0, #8192	; 0x2000
    75f8:	01d00c24 	bicseq	r0, r0, r4, lsr #24
    75fc:	a2030000 	andge	r0, r3, #0
    7600:	00901903 	addseq	r1, r0, r3, lsl #18
    7604:	23020000 	movwcs	r0, #8192	; 0x2000
    7608:	09c50c28 	stmibeq	r5, {r3, r5, sl, fp}^
    760c:	a6030000 	strge	r0, [r3], -r0
    7610:	05961a03 	ldreq	r1, [r6, #2563]	; 0xa03
    7614:	23020000 	movwcs	r0, #8192	; 0x2000
    7618:	04250c2c 	strteq	r0, [r5], #-3116	; 0xfffff3d4
    761c:	a7030000 	strge	r0, [r3, -r0]
    7620:	05961a03 	ldreq	r1, [r6, #2563]	; 0xa03
    7624:	23020000 	movwcs	r0, #8192	; 0x2000
    7628:	040f0030 	streq	r0, [pc], #-48	; 7630 <_Min_Stack_Size+0x6630>
    762c:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
    7630:	0008d410 	andeq	sp, r8, r0, lsl r4
    7634:	02860300 	addeq	r0, r6, #0, 6
    7638:	00018603 	andeq	r8, r1, r3, lsl #12
    763c:	9c040f00 	stcls	15, cr0, [r4], {-0}
    7640:	11000005 	tstne	r0, r5
    7644:	00001c2a 	andeq	r1, r0, sl, lsr #24
    7648:	21013304 	tstcs	r1, r4, lsl #6
    764c:	00000076 	andeq	r0, r0, r6, ror r0
    7650:	1b110101 	blne	447a5c <__RAM_SIZE+0x347a5c>
    7654:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    7658:	a9210139 	stmdbge	r1!, {r0, r3, r4, r5, r8}
    765c:	01000005 	tsteq	r0, r5
    7660:	19b21101 	ldmibne	r2!, {r0, r8, ip}
    7664:	40040000 	andmi	r0, r4, r0
    7668:	05a92101 	streq	r2, [r9, #257]!	; 0x101
    766c:	01010000 	mrseq	r0, (UNDEF: 1)
    7670:	0019f111 	andseq	pc, r9, r1, lsl r1	; <UNPREDICTABLE>
    7674:	01450400 	cmpeq	r5, r0, lsl #8
    7678:	0005a921 	andeq	sl, r5, r1, lsr #18
    767c:	11010100 	mrsne	r0, (UNDEF: 17)
    7680:	00001a54 	andeq	r1, r0, r4, asr sl
    7684:	21014a04 	tstcs	r1, r4, lsl #20
    7688:	000000a1 	andeq	r0, r0, r1, lsr #1
    768c:	e8110101 	ldmda	r1, {r0, r8}
    7690:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    7694:	ad210153 	stfges	f0, [r1, #-332]!	; 0xfffffeb4
    7698:	01000000 	mrseq	r0, (UNDEF: 0)
    769c:	00a10801 	adceq	r0, r1, r1, lsl #16
    76a0:	06190000 	ldreq	r0, [r9], -r0
    76a4:	29090000 	stmdbcs	r9, {}	; <UNPREDICTABLE>
    76a8:	00000000 	andeq	r0, r0, r0
    76ac:	1c021100 	stfnes	f1, [r2], {-0}
    76b0:	5b040000 	blpl	1076b8 <__RAM_SIZE+0x76b8>
    76b4:	06092101 	streq	r2, [r9], -r1, lsl #2
    76b8:	01010000 	mrseq	r0, (UNDEF: 1)
    76bc:	001aa911 	andseq	sl, sl, r1, lsl r9
    76c0:	017f0400 	cmneq	pc, r0, lsl #8
    76c4:	00009021 	andeq	r9, r0, r1, lsr #32
    76c8:	08010100 	stmdaeq	r1, {r8}
    76cc:	000005a9 	andeq	r0, r0, r9, lsr #11
    76d0:	00000647 	andeq	r0, r0, r7, asr #12
    76d4:	00002909 	andeq	r2, r0, r9, lsl #18
    76d8:	11001f00 	tstne	r0, r0, lsl #30
    76dc:	00001d9a 	muleq	r0, sl, sp
    76e0:	21018704 	tstcs	r1, r4, lsl #14
    76e4:	00000637 	andeq	r0, r0, r7, lsr r6
    76e8:	32110101 	andscc	r0, r1, #1073741824	; 0x40000000
    76ec:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    76f0:	9c21018e 	stflss	f0, [r1], #-568	; 0xfffffdc8
    76f4:	01000000 	mrseq	r0, (UNDEF: 0)
    76f8:	71010d01 	tstvc	r1, r1, lsl #26
    76fc:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    7700:	000005a9 	andeq	r0, r0, r9, lsr #11
    7704:	1aee1100 	bne	ffb8bb0c <__RAM_segment_used_end__+0xc7a8bb0c>
    7708:	94040000 	strls	r0, [r4], #-0
    770c:	06802301 	streq	r2, [r0], r1, lsl #6
    7710:	01010000 	mrseq	r0, (UNDEF: 1)
    7714:	0665040f 	strbteq	r0, [r5], -pc, lsl #8
    7718:	b3110000 	tstlt	r1, #0
    771c:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    7720:	a12101b8 			; <UNDEFINED> instruction: 0xa12101b8
    7724:	01000000 	mrseq	r0, (UNDEF: 0)
    7728:	1b611101 	blne	184bb34 <__RAM_SIZE+0x174bb34>
    772c:	c1040000 	mrsgt	r0, (UNDEF: 4)
    7730:	06802301 	streq	r2, [r0], r1, lsl #6
    7734:	01010000 	mrseq	r0, (UNDEF: 1)
    7738:	001bb611 	andseq	fp, fp, r1, lsl r6
    773c:	01ca0400 	biceq	r0, sl, r0, lsl #8
    7740:	0000a121 	andeq	sl, r0, r1, lsr #2
    7744:	11010100 	mrsne	r0, (UNDEF: 17)
    7748:	00001c76 	andeq	r1, r0, r6, ror ip
    774c:	2101d004 	tstcs	r1, r4
    7750:	000000a1 	andeq	r0, r0, r1, lsr #1
    7754:	2f110101 	svccs	0x00110101
    7758:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    775c:	a12101d6 	ldrdge	r0, [r1, -r6]!
    7760:	01000000 	mrseq	r0, (UNDEF: 0)
    7764:	1d2d1101 	stfnes	f1, [sp, #-4]!
    7768:	dd040000 	stcle	0, cr0, [r4, #-0]
    776c:	00a12101 	adceq	r2, r1, r1, lsl #2
    7770:	01010000 	mrseq	r0, (UNDEF: 1)
    7774:	001c4611 	andseq	r4, ip, r1, lsl r6
    7778:	01e30400 	mvneq	r0, r0, lsl #8
    777c:	0000a121 	andeq	sl, r0, r1, lsr #2
    7780:	11010100 	mrsne	r0, (UNDEF: 17)
    7784:	00001d05 	andeq	r1, r0, r5, lsl #26
    7788:	2101ea04 	tstcs	r1, r4, lsl #20
    778c:	000000a1 	andeq	r0, r0, r1, lsr #1
    7790:	07110101 	ldreq	r0, [r1, -r1, lsl #2]
    7794:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    7798:	a12101f1 	strdge	r0, [r1, -r1]!
    779c:	01000000 	mrseq	r0, (UNDEF: 0)
    77a0:	1a841101 	bne	fe10bbac <__RAM_segment_used_end__+0xc600bbac>
    77a4:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    77a8:	00a12101 	adceq	r2, r1, r1, lsl #2
    77ac:	01010000 	mrseq	r0, (UNDEF: 1)
    77b0:	001bda11 	andseq	sp, fp, r1, lsl sl
    77b4:	01fd0400 	mvnseq	r0, r0, lsl #8
    77b8:	0000a121 	andeq	sl, r0, r1, lsr #2
    77bc:	11010100 	mrsne	r0, (UNDEF: 17)
    77c0:	00001ac5 	andeq	r1, r0, r5, asr #21
    77c4:	21020304 	tstcs	r2, r4, lsl #6
    77c8:	000000a1 	andeq	r0, r0, r1, lsr #1
    77cc:	d8110101 	ldmdale	r1, {r0, r8}
    77d0:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    77d4:	a1210209 			; <UNDEFINED> instruction: 0xa1210209
    77d8:	01000000 	mrseq	r0, (UNDEF: 0)
    77dc:	1b8c1101 	blne	fe30bbe8 <__RAM_segment_used_end__+0xc620bbe8>
    77e0:	0f040000 	svceq	0x00040000
    77e4:	00a12102 	adceq	r2, r1, r2, lsl #2
    77e8:	01010000 	mrseq	r0, (UNDEF: 1)
    77ec:	0005a908 	andeq	sl, r5, r8, lsl #18
    77f0:	00076800 	andeq	r6, r7, r0, lsl #16
    77f4:	00290900 	eoreq	r0, r9, r0, lsl #18
    77f8:	00070000 	andeq	r0, r7, r0
    77fc:	001cb511 	andseq	fp, ip, r1, lsl r5
    7800:	02100400 	andseq	r0, r0, #0, 8
    7804:	00075821 	andeq	r5, r7, r1, lsr #16
    7808:	12010100 	andne	r0, r1, #0, 2
    780c:	000005af 	andeq	r0, r0, pc, lsr #11
    7810:	05112901 	ldreq	r2, [r1, #-2305]	; 0xfffff6ff
    7814:	00129003 	andseq	r9, r2, r3
    7818:	05be1238 	ldreq	r1, [lr, #568]!	; 0x238
    781c:	2f010000 	svccs	0x00010000
    7820:	b4030511 	strlt	r0, [r3], #-1297	; 0xfffffaef
    7824:	12380011 	eorsne	r0, r8, #17
    7828:	000005cd 	andeq	r0, r0, sp, asr #11
    782c:	05113601 	ldreq	r3, [r1, #-1537]	; 0xfffff9ff
    7830:	0011b803 	andseq	fp, r1, r3, lsl #16
    7834:	05dc1238 	ldrbeq	r1, [ip, #568]	; 0x238
    7838:	3b010000 	blcc	47840 <SYSTICK_CYCLES+0x1e801>
    783c:	b0030511 	andlt	r0, r3, r1, lsl r5
    7840:	12380011 	eorsne	r0, r8, #17
    7844:	000005eb 	andeq	r0, r0, fp, ror #11
    7848:	05114001 	ldreq	r4, [r1, #-1]
    784c:	0011ac03 	andseq	sl, r1, r3, lsl #24
    7850:	05fa1238 	ldrbeq	r1, [sl, #568]!	; 0x238
    7854:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    7858:	04030511 	streq	r0, [r3], #-1297	; 0xfffffaef
    785c:	12380000 	eorsne	r0, r8, #0
    7860:	00000619 	andeq	r0, r0, r9, lsl r6
    7864:	05115101 	ldreq	r5, [r1, #-257]	; 0xfffffeff
    7868:	00128c03 	andseq	r8, r2, r3, lsl #24
    786c:	06281238 			; <UNDEFINED> instruction: 0x06281238
    7870:	75010000 	strvc	r0, [r1, #-0]
    7874:	bc030511 	cfstr32lt	mvfx0, [r3], {17}
    7878:	12380011 	eorsne	r0, r8, #17
    787c:	00000647 	andeq	r0, r0, r7, asr #12
    7880:	05117d01 	ldreq	r7, [r1, #-3329]	; 0xfffff2ff
    7884:	00120c03 	andseq	r0, r2, r3, lsl #24
    7888:	06561238 			; <UNDEFINED> instruction: 0x06561238
    788c:	84010000 	strhi	r0, [r1], #-0
    7890:	08030511 	stmdaeq	r3, {r0, r4, r8, sl}
    7894:	12380012 	eorsne	r0, r8, #18
    7898:	00000671 	andeq	r0, r0, r1, ror r6
    789c:	05138a01 	ldreq	r8, [r3, #-2561]	; 0xfffff5ff
    78a0:	0011c003 	andseq	ip, r1, r3
    78a4:	06861238 			; <UNDEFINED> instruction: 0x06861238
    78a8:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    78ac:	a4030511 	strge	r0, [r3], #-1297	; 0xfffffaef
    78b0:	12380011 	eorsne	r0, r8, #17
    78b4:	00000695 	muleq	r0, r5, r6
    78b8:	0513b701 	ldreq	fp, [r3, #-1793]	; 0xfffff8ff
    78bc:	0011a803 	andseq	sl, r1, r3, lsl #16
    78c0:	06a41238 			; <UNDEFINED> instruction: 0x06a41238
    78c4:	c0010000 	andgt	r0, r1, r0
    78c8:	f4030511 	vst3.8	{d0,d2,d4}, [r3 :64], r1
    78cc:	12380011 	eorsne	r0, r8, #17
    78d0:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    78d4:	0511c601 	ldreq	ip, [r1, #-1537]	; 0xfffff9ff
    78d8:	0011fc03 	andseq	pc, r1, r3, lsl #24
    78dc:	06c21238 			; <UNDEFINED> instruction: 0x06c21238
    78e0:	cc010000 	stcgt	0, cr0, [r1], {-0}
    78e4:	f8030511 			; <UNDEFINED> instruction: 0xf8030511
    78e8:	12380011 	eorsne	r0, r8, #17
    78ec:	000006d1 	ldrdeq	r0, [r0], -r1
    78f0:	0511d301 	ldreq	sp, [r1, #-769]	; 0xfffffcff
    78f4:	0011ec03 	andseq	lr, r1, r3, lsl #24
    78f8:	06e01238 			; <UNDEFINED> instruction: 0x06e01238
    78fc:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    7900:	00030511 	andeq	r0, r3, r1, lsl r5
    7904:	12000000 	andne	r0, r0, #0
    7908:	000006ef 	andeq	r0, r0, pc, ror #13
    790c:	0511e001 	ldreq	lr, [r1, #-1]
    7910:	00120003 	andseq	r0, r2, r3
    7914:	06fe1238 			; <UNDEFINED> instruction: 0x06fe1238
    7918:	e7010000 	str	r0, [r1, -r0]
    791c:	00030511 	andeq	r0, r3, r1, lsl r5
    7920:	12000000 	andne	r0, r0, #0
    7924:	0000070d 	andeq	r0, r0, sp, lsl #14
    7928:	0511ed01 	ldreq	lr, [r1, #-3329]	; 0xfffff2ff
    792c:	00120403 	andseq	r0, r2, r3, lsl #8
    7930:	071c1238 			; <UNDEFINED> instruction: 0x071c1238
    7934:	f3010000 	vhadd.u8	d0, d1, d0
    7938:	00030511 	andeq	r0, r3, r1, lsl r5
    793c:	12000000 	andne	r0, r0, #0
    7940:	0000072b 	andeq	r0, r0, fp, lsr #14
    7944:	0511f901 	ldreq	pc, [r1, #-2305]	; 0xfffff6ff
    7948:	0011e803 	andseq	lr, r1, r3, lsl #16
    794c:	073a1238 			; <UNDEFINED> instruction: 0x073a1238
    7950:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    7954:	f0030511 			; <UNDEFINED> instruction: 0xf0030511
    7958:	13380011 	teqne	r8, #17
    795c:	00000749 	andeq	r0, r0, r9, asr #14
    7960:	11010501 	tstne	r1, r1, lsl #10
    7964:	11c40305 	bicne	r0, r4, r5, lsl #6
    7968:	68133800 	ldmdavs	r3, {fp, ip, sp}
    796c:	01000007 	tsteq	r0, r7
    7970:	05110106 	ldreq	r0, [r1, #-262]	; 0xfffffefa
    7974:	0011c803 	andseq	ip, r1, r3, lsl #16
    7978:	008b0838 	addeq	r0, fp, r8, lsr r8
    797c:	08f50000 	ldmeq	r5!, {}^	; <UNPREDICTABLE>
    7980:	29090000 	stmdbcs	r9, {}	; <UNPREDICTABLE>
    7984:	56000000 	strpl	r0, [r0], -r0
    7988:	08e50600 	stmiaeq	r5!, {r9, sl}^
    798c:	9b0a0000 	blls	287994 <__RAM_SIZE+0x187994>
    7990:	0100001c 	tsteq	r0, ip, lsl r0
    7994:	f50c010d 			; <UNDEFINED> instruction: 0xf50c010d
    7998:	01000008 	tsteq	r0, r8
    799c:	00000305 	andeq	r0, r0, r5, lsl #6
    79a0:	01140000 	tsteq	r4, r0
    79a4:	00001721 	andeq	r1, r0, r1, lsr #14
    79a8:	07014001 	streq	r4, [r1, -r1]
    79ac:	001ee801 	andseq	lr, lr, r1, lsl #16
    79b0:	001f0810 	andseq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    79b4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    79b8:	079c0001 	ldreq	r0, [ip, r1]
    79bc:	00020000 	andeq	r0, r2, r0
    79c0:	00001437 	andeq	r1, r0, r7, lsr r4
    79c4:	003d0104 	eorseq	r0, sp, r4, lsl #2
    79c8:	dc0c0000 	stcle	0, cr0, [ip], {-0}
    79cc:	4100001d 	tstmi	r0, sp, lsl r0
    79d0:	a8000006 	stmdage	r0, {r1, r2}
    79d4:	00000002 	andeq	r0, r0, r2
    79d8:	00000000 	andeq	r0, r0, r0
    79dc:	2f000000 	svccs	0x00000000
    79e0:	0200002d 	andeq	r0, r0, #45	; 0x2d
    79e4:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    79e8:	04030000 	streq	r0, [r3], #-0
    79ec:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    79f0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    79f4:	000004e8 	andeq	r0, r0, r8, ror #9
    79f8:	23040802 	movwcs	r0, #18434	; 0x4802
    79fc:	02000006 	andeq	r0, r0, #6
    7a00:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    7a04:	01020000 	mrseq	r0, (UNDEF: 2)
    7a08:	00085008 	andeq	r5, r8, r8
    7a0c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    7a10:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    7a14:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    7a18:	02000009 	andeq	r0, r0, #9
    7a1c:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    7a20:	04020000 	streq	r0, [r2], #-0
    7a24:	00023407 	andeq	r3, r2, r7, lsl #8
    7a28:	07080200 	streq	r0, [r8, -r0, lsl #4]
    7a2c:	0000022f 	andeq	r0, r0, pc, lsr #4
    7a30:	01020404 	tsteq	r2, r4, lsl #8
    7a34:	00085908 	andeq	r5, r8, r8, lsl #18
    7a38:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    7a3c:	73020000 	movwvc	r0, #8192	; 0x2000
    7a40:	00007831 	andeq	r7, r0, r1, lsr r8
    7a44:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    7a48:	76020000 	strvc	r0, [r2], -r0
    7a4c:	00002931 	andeq	r2, r0, r1, lsr r9
    7a50:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    7a54:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    7a58:	00006831 	andeq	r6, r0, r1, lsr r8
    7a5c:	053b0600 	ldreq	r0, [fp, #-1536]!	; 0xfffffa00
    7a60:	031c0000 	tsteq	ip, #0
    7a64:	22100182 	andscs	r0, r0, #-2147483616	; 0x80000020
    7a68:	07000001 	streq	r0, [r0, -r1]
    7a6c:	00000812 	andeq	r0, r0, r2, lsl r8
    7a70:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    7a74:	00000097 	muleq	r0, r7, r0
    7a78:	07002302 	streq	r2, [r0, -r2, lsl #6]
    7a7c:	000003a0 	andeq	r0, r0, r0, lsr #7
    7a80:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    7a84:	00000097 	muleq	r0, r7, r0
    7a88:	07042302 	streq	r2, [r4, -r2, lsl #6]
    7a8c:	0000043d 	andeq	r0, r0, sp, lsr r4
    7a90:	1b018a03 	blne	6a2a4 <SYSTICK_CYCLES+0x41265>
    7a94:	0000012e 	andeq	r0, r0, lr, lsr #2
    7a98:	07082302 	streq	r2, [r8, -r2, lsl #6]
    7a9c:	000001f2 	strdeq	r0, [r0], -r2
    7aa0:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    7aa4:	00000097 	muleq	r0, r7, r0
    7aa8:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    7aac:	00000954 	andeq	r0, r0, r4, asr r9
    7ab0:	1a019103 	bne	6bec4 <SYSTICK_CYCLES+0x42e85>
    7ab4:	00000134 	andeq	r0, r0, r4, lsr r1
    7ab8:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    7abc:	0000001b 	andeq	r0, r0, fp, lsl r0
    7ac0:	1a019203 	bne	6c2d4 <SYSTICK_CYCLES+0x43295>
    7ac4:	00000134 	andeq	r0, r0, r4, lsr r1
    7ac8:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    7acc:	000005ee 	andeq	r0, r0, lr, ror #11
    7ad0:	1b019603 	blne	6d2e4 <SYSTICK_CYCLES+0x442a5>
    7ad4:	0000013a 	andeq	r0, r0, sl, lsr r1
    7ad8:	00182302 	andseq	r2, r8, r2, lsl #6
    7adc:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    7ae0:	97090000 	strls	r0, [r9, -r0]
    7ae4:	00000000 	andeq	r0, r0, r0
    7ae8:	0122040a 			; <UNDEFINED> instruction: 0x0122040a
    7aec:	040a0000 	streq	r0, [sl], #-0
    7af0:	000000a3 	andeq	r0, r0, r3, lsr #1
    7af4:	0134040a 	teqeq	r4, sl, lsl #8
    7af8:	2f0b0000 	svccs	0x000b0000
    7afc:	03000006 	movweq	r0, #6
    7b00:	a303019b 	movwge	r0, #12699	; 0x319b
    7b04:	0a000000 	beq	7b0c <_Min_Stack_Size+0x6b0c>
    7b08:	00007f04 	andeq	r7, r0, r4, lsl #30
    7b0c:	034b0600 	movteq	r0, #46592	; 0xb600
    7b10:	03d40000 	bicseq	r0, r4, #0
    7b14:	671001d6 			; <UNDEFINED> instruction: 0x671001d6
    7b18:	07000004 	streq	r0, [r0, -r4]
    7b1c:	00000911 	andeq	r0, r0, r1, lsl r9
    7b20:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    7b24:	00000097 	muleq	r0, r7, r0
    7b28:	07002302 	streq	r2, [r0, -r2, lsl #6]
    7b2c:	00000784 	andeq	r0, r0, r4, lsl #15
    7b30:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    7b34:	00000097 	muleq	r0, r7, r0
    7b38:	07042302 	streq	r2, [r4, -r2, lsl #6]
    7b3c:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    7b40:	1a01df03 	bne	7f754 <SYSTICK_CYCLES+0x56715>
    7b44:	00000076 	andeq	r0, r0, r6, ror r0
    7b48:	07082302 	streq	r2, [r8, -r2, lsl #6]
    7b4c:	000008fb 	strdeq	r0, [r0], -fp
    7b50:	1a01e003 	bne	7fb64 <SYSTICK_CYCLES+0x56b25>
    7b54:	00000076 	andeq	r0, r0, r6, ror r0
    7b58:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    7b5c:	00000411 	andeq	r0, r0, r1, lsl r4
    7b60:	1a01e103 	bne	7ff74 <SYSTICK_CYCLES+0x56f35>
    7b64:	00000076 	andeq	r0, r0, r6, ror r0
    7b68:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    7b6c:	0000093f 	andeq	r0, r0, pc, lsr r9
    7b70:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    7b74:	00000097 	muleq	r0, r7, r0
    7b78:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    7b7c:	000021d1 	ldrdeq	r2, [r0], -r1
    7b80:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    7b84:	00000097 	muleq	r0, r7, r0
    7b88:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    7b8c:	0000060a 	andeq	r0, r0, sl, lsl #12
    7b90:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    7b94:	00000097 	muleq	r0, r7, r0
    7b98:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    7b9c:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    7ba0:	1a01e803 	bne	81bb4 <SYSTICK_CYCLES+0x58b75>
    7ba4:	00000467 	andeq	r0, r0, r7, ror #8
    7ba8:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    7bac:	00000199 	muleq	r0, r9, r1
    7bb0:	1a01e903 	bne	81fc4 <SYSTICK_CYCLES+0x58f85>
    7bb4:	00000467 	andeq	r0, r0, r7, ror #8
    7bb8:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    7bbc:	00000596 	muleq	r0, r6, r5
    7bc0:	1a01f103 	bne	83fd4 <SYSTICK_CYCLES+0x5af95>
    7bc4:	0000014d 	andeq	r0, r0, sp, asr #2
    7bc8:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    7bcc:	000002d9 	ldrdeq	r0, [r0], -r9
    7bd0:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    7bd4:	0000008b 	andeq	r0, r0, fp, lsl #1
    7bd8:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    7bdc:	00000246 	andeq	r0, r0, r6, asr #4
    7be0:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    7be4:	0000008b 	andeq	r0, r0, fp, lsl #1
    7be8:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    7bec:	00000173 	andeq	r0, r0, r3, ror r1
    7bf0:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    7bf4:	0000008b 	andeq	r0, r0, fp, lsl #1
    7bf8:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    7bfc:	00000730 	andeq	r0, r0, r0, lsr r7
    7c00:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    7c04:	0000008b 	andeq	r0, r0, fp, lsl #1
    7c08:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    7c0c:	000000eb 	andeq	r0, r0, fp, ror #1
    7c10:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    7c14:	0000008b 	andeq	r0, r0, fp, lsl #1
    7c18:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    7c1c:	0000035c 	andeq	r0, r0, ip, asr r3
    7c20:	1b01fb03 	blne	86834 <SYSTICK_CYCLES+0x5d7f5>
    7c24:	0000047e 	andeq	r0, r0, lr, ror r4
    7c28:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    7c2c:	00000152 	andeq	r0, r0, r2, asr r1
    7c30:	1b020303 	blne	88844 <SYSTICK_CYCLES+0x5f805>
    7c34:	0000012e 	andeq	r0, r0, lr, lsr #2
    7c38:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    7c3c:	00000107 	andeq	r0, r0, r7, lsl #2
    7c40:	19020403 	stmdbne	r2, {r0, r1, sl}
    7c44:	00000097 	muleq	r0, r7, r0
    7c48:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    7c4c:	0000033b 	andeq	r0, r0, fp, lsr r3
    7c50:	19020803 	stmdbne	r2, {r0, r1, fp}
    7c54:	00000140 	andeq	r0, r0, r0, asr #2
    7c58:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    7c5c:	000002ec 	andeq	r0, r0, ip, ror #5
    7c60:	1b020e03 	blne	8b474 <SYSTICK_CYCLES+0x62435>
    7c64:	0000047e 	andeq	r0, r0, lr, ror r4
    7c68:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    7c6c:	000005ce 	andeq	r0, r0, lr, asr #11
    7c70:	1a020f03 	bne	8b884 <SYSTICK_CYCLES+0x62845>
    7c74:	00000076 	andeq	r0, r0, r6, ror r0
    7c78:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    7c7c:	00000717 	andeq	r0, r0, r7, lsl r7
    7c80:	1a021103 	bne	8c094 <SYSTICK_CYCLES+0x63055>
    7c84:	00000467 	andeq	r0, r0, r7, ror #8
    7c88:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    7c8c:	00000212 	andeq	r0, r0, r2, lsl r2
    7c90:	1a021203 	bne	8c4a4 <SYSTICK_CYCLES+0x63465>
    7c94:	00000467 	andeq	r0, r0, r7, ror #8
    7c98:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    7c9c:	000006fa 	strdeq	r0, [r0], -sl
    7ca0:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    7ca4:	00000097 	muleq	r0, r7, r0
    7ca8:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    7cac:	000003c6 	andeq	r0, r0, r6, asr #7
    7cb0:	1a021403 	bne	8ccc4 <SYSTICK_CYCLES+0x63c85>
    7cb4:	00000076 	andeq	r0, r0, r6, ror r0
    7cb8:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    7cbc:	00000554 	andeq	r0, r0, r4, asr r5
    7cc0:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    7cc4:	0000008b 	andeq	r0, r0, fp, lsl #1
    7cc8:	01802303 	orreq	r2, r0, r3, lsl #6
    7ccc:	0003e807 	andeq	lr, r3, r7, lsl #16
    7cd0:	02160300 	andseq	r0, r6, #0, 6
    7cd4:	00008b19 	andeq	r8, r0, r9, lsl fp
    7cd8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    7cdc:	08e40701 	stmiaeq	r4!, {r0, r8, r9, sl}^
    7ce0:	1f030000 	svcne	0x00030000
    7ce4:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    7ce8:	23030000 	movwcs	r0, #12288	; 0x3000
    7cec:	d5070188 	strle	r0, [r7, #-392]	; 0xfffffe78
    7cf0:	03000007 	movweq	r0, #7
    7cf4:	671a0220 	ldrvs	r0, [sl, -r0, lsr #4]
    7cf8:	03000004 	movweq	r0, #4
    7cfc:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    7d00:	000002c1 	andeq	r0, r0, r1, asr #5
    7d04:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    7d08:	0000008b 	andeq	r0, r0, fp, lsl #1
    7d0c:	01902303 	orrseq	r2, r0, r3, lsl #6
    7d10:	00025607 	andeq	r5, r2, r7, lsl #12
    7d14:	022f0300 	eoreq	r0, pc, #0, 6
    7d18:	00008b19 	andeq	r8, r0, r9, lsl fp
    7d1c:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    7d20:	03200701 			; <UNDEFINED> instruction: 0x03200701
    7d24:	30030000 	andcc	r0, r3, r0
    7d28:	008b1902 	addeq	r1, fp, r2, lsl #18
    7d2c:	23030000 	movwcs	r0, #12288	; 0x3000
    7d30:	77070198 			; <UNDEFINED> instruction: 0x77070198
    7d34:	03000002 	movweq	r0, #2
    7d38:	8b190233 	blhi	64860c <__RAM_SIZE+0x54860c>
    7d3c:	03000000 	movweq	r0, #0
    7d40:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    7d44:	00000000 	andeq	r0, r0, r0
    7d48:	1a023503 	bne	9515c <SYSTICK_CYCLES+0x6c11d>
    7d4c:	00000563 	andeq	r0, r0, r3, ror #10
    7d50:	01a02303 	lsleq	r2, r3, #6
    7d54:	001bb707 	andseq	fp, fp, r7, lsl #14
    7d58:	023a0300 	eorseq	r0, sl, #0, 6
    7d5c:	00009719 	andeq	r9, r0, r9, lsl r7
    7d60:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    7d64:	1c770701 	ldclne	7, cr0, [r7], #-4
    7d68:	3d030000 	stccc	0, cr0, [r3, #-0]
    7d6c:	00971902 	addseq	r1, r7, r2, lsl #18
    7d70:	23030000 	movwcs	r0, #12288	; 0x3000
    7d74:	300701a8 	andcc	r0, r7, r8, lsr #3
    7d78:	0300001b 	movweq	r0, #27
    7d7c:	97190241 	ldrls	r0, [r9, -r1, asr #4]
    7d80:	03000000 	movweq	r0, #0
    7d84:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    7d88:	00001d2e 	andeq	r1, r0, lr, lsr #26
    7d8c:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    7d90:	00000097 	muleq	r0, r7, r0
    7d94:	01b02303 	lslseq	r2, r3, #6
    7d98:	001c4707 	andseq	r4, ip, r7, lsl #14
    7d9c:	02480300 	subeq	r0, r8, #0, 6
    7da0:	00009719 	andeq	r9, r0, r9, lsl r7
    7da4:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    7da8:	07a80701 	streq	r0, [r8, r1, lsl #14]!
    7dac:	4c030000 	stcmi	0, cr0, [r3], {-0}
    7db0:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    7db4:	23030000 	movwcs	r0, #12288	; 0x3000
    7db8:	060701b8 			; <UNDEFINED> instruction: 0x060701b8
    7dbc:	0300001d 	movweq	r0, #29
    7dc0:	9719024f 	ldrls	r0, [r9, -pc, asr #4]
    7dc4:	03000000 	movweq	r0, #0
    7dc8:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    7dcc:	00001b08 	andeq	r1, r0, r8, lsl #22
    7dd0:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    7dd4:	00000097 	muleq	r0, r7, r0
    7dd8:	01c02303 	biceq	r2, r0, r3, lsl #6
    7ddc:	001a8507 	andseq	r8, sl, r7, lsl #10
    7de0:	02550300 	subseq	r0, r5, #0, 6
    7de4:	00009719 	andeq	r9, r0, r9, lsl r7
    7de8:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    7dec:	1bdb0701 	blne	ff6c99f8 <__RAM_segment_used_end__+0xc75c99f8>
    7df0:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    7df4:	00971902 	addseq	r1, r7, r2, lsl #18
    7df8:	23030000 	movwcs	r0, #12288	; 0x3000
    7dfc:	a90701c8 	stmdbge	r7, {r3, r6, r7, r8}
    7e00:	03000009 	movweq	r0, #9
    7e04:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    7e08:	03000000 	movweq	r0, #0
    7e0c:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    7e10:	00000481 	andeq	r0, r0, r1, lsl #9
    7e14:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    7e18:	00000097 	muleq	r0, r7, r0
    7e1c:	01d02303 	bicseq	r2, r0, r3, lsl #6
    7e20:	53040a00 	movwpl	r0, #18944	; 0x4a00
    7e24:	08000001 	stmdaeq	r0, {r0}
    7e28:	00047e01 	andeq	r7, r4, r1, lsl #28
    7e2c:	04670900 	strbteq	r0, [r7], #-2304	; 0xfffff700
    7e30:	97090000 	strls	r0, [r9, -r0]
    7e34:	00000000 	andeq	r0, r0, r0
    7e38:	046d040a 	strbteq	r0, [sp], #-1034	; 0xfffffbf6
    7e3c:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    7e40:	34000007 	strcc	r0, [r0], #-7
    7e44:	10037e03 	andne	r7, r3, r3, lsl #28
    7e48:	00000563 	andeq	r0, r0, r3, ror #10
    7e4c:	00018d07 	andeq	r8, r1, r7, lsl #26
    7e50:	03820300 	orreq	r0, r2, #0, 6
    7e54:	00009719 	andeq	r9, r0, r9, lsl r7
    7e58:	00230200 	eoreq	r0, r3, r0, lsl #4
    7e5c:	00087c07 	andeq	r7, r8, r7, lsl #24
    7e60:	03850300 	orreq	r0, r5, #0, 6
    7e64:	00014d1a 	andeq	r4, r1, sl, lsl sp
    7e68:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7e6c:	0006e107 	andeq	lr, r6, r7, lsl #2
    7e70:	03880300 	orreq	r0, r8, #0, 6
    7e74:	00008b19 	andeq	r8, r0, r9, lsl fp
    7e78:	08230200 	stmdaeq	r3!, {r9}
    7e7c:	0004cb07 	andeq	ip, r4, r7, lsl #22
    7e80:	038c0300 	orreq	r0, ip, #0, 6
    7e84:	0005761a 	andeq	r7, r5, sl, lsl r6
    7e88:	0c230200 	sfmeq	f0, 4, [r3], #-0
    7e8c:	00016207 	andeq	r6, r1, r7, lsl #4
    7e90:	03900300 	orrseq	r0, r0, #0, 6
    7e94:	00008b19 	andeq	r8, r0, r9, lsl fp
    7e98:	10230200 	eorne	r0, r3, r0, lsl #4
    7e9c:	00012107 	andeq	r2, r1, r7, lsl #2
    7ea0:	03930300 	orrseq	r0, r3, #0, 6
    7ea4:	00008b19 	andeq	r8, r0, r9, lsl fp
    7ea8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    7eac:	0008b207 	andeq	fp, r8, r7, lsl #4
    7eb0:	03980300 	orrseq	r0, r8, #0, 6
    7eb4:	0004671a 	andeq	r6, r4, sl, lsl r7
    7eb8:	18230200 	stmdane	r3!, {r9}
    7ebc:	0006c807 	andeq	ip, r6, r7, lsl #16
    7ec0:	03990300 	orrseq	r0, r9, #0, 6
    7ec4:	00008b19 	andeq	r8, r0, r9, lsl fp
    7ec8:	1c230200 	sfmne	f0, 4, [r3], #-0
    7ecc:	0005b807 	andeq	fp, r5, r7, lsl #16
    7ed0:	039d0300 	orrseq	r0, sp, #0, 6
    7ed4:	0005631a 	andeq	r6, r5, sl, lsl r3
    7ed8:	20230200 	eorcs	r0, r3, r0, lsl #4
    7edc:	00068507 	andeq	r8, r6, r7, lsl #10
    7ee0:	039e0300 	orrseq	r0, lr, #0, 6
    7ee4:	0005631a 	andeq	r6, r5, sl, lsl r3
    7ee8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    7eec:	0001d007 	andeq	sp, r1, r7
    7ef0:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    7ef4:	00008b19 	andeq	r8, r0, r9, lsl fp
    7ef8:	28230200 	stmdacs	r3!, {r9}
    7efc:	0009c507 	andeq	ip, r9, r7, lsl #10
    7f00:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    7f04:	0005631a 	andeq	r6, r5, sl, lsl r3
    7f08:	2c230200 	sfmcs	f0, 4, [r3], #-0
    7f0c:	00042507 	andeq	r2, r4, r7, lsl #10
    7f10:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    7f14:	0005631a 	andeq	r6, r5, sl, lsl r3
    7f18:	30230200 	eorcc	r0, r3, r0, lsl #4
    7f1c:	84040a00 	strhi	r0, [r4], #-2560	; 0xfffff600
    7f20:	0b000004 	bleq	7f38 <_Min_Stack_Size+0x6f38>
    7f24:	000008d4 	ldrdeq	r0, [r0], -r4
    7f28:	03028603 	movweq	r8, #9731	; 0x2603
    7f2c:	00000153 	andeq	r0, r0, r3, asr r1
    7f30:	0569040a 	strbeq	r0, [r9, #-1034]!	; 0xfffffbf6
    7f34:	1b0c0000 	blne	307f3c <__RAM_SIZE+0x207f3c>
    7f38:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    7f3c:	76210139 			; <UNDEFINED> instruction: 0x76210139
    7f40:	01000005 	tsteq	r0, r5
    7f44:	97010801 	strls	r0, [r1, -r1, lsl #16]
    7f48:	09000005 	stmdbeq	r0, {r0, r2}
    7f4c:	00000576 	andeq	r0, r0, r6, ror r5
    7f50:	1aee0c00 	bne	ffb8af58 <__RAM_segment_used_end__+0xc7a8af58>
    7f54:	94040000 	strls	r0, [r4], #-0
    7f58:	05a62301 	streq	r2, [r6, #769]!	; 0x301
    7f5c:	01010000 	mrseq	r0, (UNDEF: 1)
    7f60:	058b040a 	streq	r0, [fp, #1034]	; 0x40a
    7f64:	010d0000 	mrseq	r0, (UNDEF: 13)
    7f68:	00001dc5 	andeq	r1, r0, r5, asr #27
    7f6c:	01074b01 	tsteq	r7, r1, lsl #22
    7f70:	10001f08 	andne	r1, r0, r8, lsl #30
    7f74:	10001f4c 	andne	r1, r0, ip, asr #30
    7f78:	00003702 	andeq	r3, r0, r2, lsl #14
    7f7c:	0006f301 	andeq	pc, r6, r1, lsl #6
    7f80:	0ee20e00 	cdpeq	14, 14, cr0, cr2, cr0, {0}
    7f84:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    7f88:	00008b01 	andeq	r8, r0, r1, lsl #22
    7f8c:	00372400 	eorseq	r2, r7, r0, lsl #8
    7f90:	00372200 	eorseq	r2, r7, r0, lsl #4
    7f94:	19cf0e00 	stmibne	pc, {r9, sl, fp}^	; <UNPREDICTABLE>
    7f98:	50010000 	andpl	r0, r1, r0
    7f9c:	00057612 	andeq	r7, r5, r2, lsl r6
    7fa0:	00373900 	eorseq	r3, r7, r0, lsl #18
    7fa4:	00373700 	eorseq	r3, r7, r0, lsl #14
    7fa8:	1f280f00 	svcne	0x00280f00
    7fac:	1f341000 	svcne	0x00341000
    7fb0:	065b1000 	ldrbeq	r1, [fp], -r0
    7fb4:	460e0000 	strmi	r0, [lr], -r0
    7fb8:	0100001e 	tsteq	r0, lr, lsl r0
    7fbc:	0097059c 	umullseq	r0, r7, ip, r5
    7fc0:	374e0000 	strbcc	r0, [lr, -r0]
    7fc4:	374c0000 	strbcc	r0, [ip, -r0]
    7fc8:	6f100000 	svcvs	0x00100000
    7fcc:	28000007 	stmdacs	r0, {r0, r1, r2}
    7fd0:	0210001f 	andseq	r0, r0, #31
    7fd4:	10001f28 	andne	r1, r0, r8, lsr #30
    7fd8:	10001f2c 	andne	r1, r0, ip, lsr #30
    7fdc:	37059c01 	strcc	r9, [r5, -r1, lsl #24]
    7fe0:	11000006 	tstne	r0, r6
    7fe4:	00000782 	andeq	r0, r0, r2, lsl #15
    7fe8:	00003763 	andeq	r3, r0, r3, ror #14
    7fec:	00003761 	andeq	r3, r0, r1, ror #14
    7ff0:	07521200 	ldrbeq	r1, [r2, -r0, lsl #4]
    7ff4:	1f300000 	svcne	0x00300000
    7ff8:	30011000 	andcc	r1, r1, r0
    7ffc:	3410001f 	ldrcc	r0, [r0], #-31	; 0xffffffe1
    8000:	0110001f 	tsteq	r0, pc, lsl r0
    8004:	6113059c 			; <UNDEFINED> instruction: 0x6113059c
    8008:	78000007 	stmdavc	r0, {r0, r1, r2}
    800c:	76000037 			; <UNDEFINED> instruction: 0x76000037
    8010:	00000037 	andeq	r0, r0, r7, lsr r0
    8014:	06f31000 	ldrbteq	r1, [r3], r0
    8018:	1f1e0000 	svcne	0x001e0000
    801c:	1e011000 	cdpne	0, 0, cr1, cr1, cr0, {0}
    8020:	2410001f 	ldrcs	r0, [r0], #-31	; 0xffffffe1
    8024:	0110001f 	tsteq	r0, pc, lsl r0
    8028:	06a6057f 			; <UNDEFINED> instruction: 0x06a6057f
    802c:	06110000 	ldreq	r0, [r1], -r0
    8030:	8d000007 	stchi	0, cr0, [r0, #-28]	; 0xffffffe4
    8034:	8b000037 	blhi	8118 <_Min_Stack_Size+0x7118>
    8038:	14000037 	strne	r0, [r0], #-55	; 0xffffffc9
    803c:	00000731 	andeq	r0, r0, r1, lsr r7
    8040:	10001f1e 	andne	r1, r0, lr, lsl pc
    8044:	001f1e04 	andseq	r1, pc, r4, lsl #28
    8048:	001f2210 	andseq	r2, pc, r0, lsl r2	; <UNPREDICTABLE>
    804c:	02560210 	subseq	r0, r6, #16, 4
    8050:	07441113 	smlaldeq	r1, r4, r3, r1
    8054:	37a20000 	strcc	r0, [r2, r0]!
    8058:	37a00000 	strcc	r0, [r0, r0]!
    805c:	00000000 	andeq	r0, r0, r0
    8060:	00071410 	andeq	r1, r7, r0, lsl r4
    8064:	001f3c00 	andseq	r3, pc, r0, lsl #24
    8068:	1f3c0110 	svcne	0x003c0110
    806c:	1f401000 	svcne	0x00401000
    8070:	a2011000 	andge	r1, r1, #0
    8074:	0006cd05 	andeq	ip, r6, r5, lsl #26
    8078:	07231300 	streq	r1, [r3, -r0, lsl #6]!
    807c:	37b70000 	ldrcc	r0, [r7, r0]!
    8080:	37b50000 	ldrcc	r0, [r5, r0]!
    8084:	15000000 	strne	r0, [r0, #-0]
    8088:	10001f1e 	andne	r1, r0, lr, lsl pc
    808c:	000006dd 	ldrdeq	r0, [r0], -sp
    8090:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    8094:	17000074 	smlsdxne	r0, r4, r0, r0
    8098:	10001f3c 	andne	r1, r0, ip, lsr pc
    809c:	00000790 	muleq	r0, r0, r7
    80a0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    80a4:	01160074 	tsteq	r6, r4, ror r0
    80a8:	00300151 	eorseq	r0, r0, r1, asr r1
    80ac:	0f181800 	svceq	0x00181800
    80b0:	52020000 	andpl	r0, r2, #0
    80b4:	8b013702 	blhi	55cc4 <SYSTICK_CYCLES+0x2cc85>
    80b8:	03000000 	movweq	r0, #0
    80bc:	00000714 	andeq	r0, r0, r4, lsl r7
    80c0:	000ea119 	andeq	sl, lr, r9, lsl r1
    80c4:	02540200 	subseq	r0, r4, #0, 4
    80c8:	00008b06 	andeq	r8, r0, r6, lsl #22
    80cc:	8d1a0000 	ldchi	0, cr0, [sl, #-0]
    80d0:	0200000e 	andeq	r0, r0, #14
    80d4:	01370249 	teqeq	r7, r9, asr #4
    80d8:	00073103 	andeq	r3, r7, r3, lsl #2
    80dc:	0ea11b00 	vfmaeq.f64	d1, d1, d0
    80e0:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    80e4:	008b5002 	addeq	r5, fp, r2
    80e8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    80ec:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    80f0:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    80f4:	00008b01 	andeq	r8, r0, r1, lsl #22
    80f8:	07520300 	ldrbeq	r0, [r2, -r0, lsl #6]
    80fc:	a5190000 	ldrge	r0, [r9, #-0]
    8100:	0200000e 	andeq	r0, r0, #14
    8104:	8b060234 	blhi	1889dc <__RAM_SIZE+0x889dc>
    8108:	00000000 	andeq	r0, r0, r0
    810c:	001e361a 	andseq	r3, lr, sl, lsl r6
    8110:	016e0200 	cmneq	lr, r0, lsl #4
    8114:	6f030137 	svcvs	0x00030137
    8118:	1b000007 	blne	813c <_Min_Stack_Size+0x713c>
    811c:	00001e28 	andeq	r1, r0, r8, lsr #28
    8120:	4d016e02 	stcmi	14, cr6, [r1, #-8]
    8124:	00000097 	muleq	r0, r7, r0
    8128:	1e181800 	cdpne	8, 1, cr1, cr8, cr0, {0}
    812c:	66020000 	strvs	r0, [r2], -r0
    8130:	97013801 	strls	r3, [r1, -r1, lsl #16]
    8134:	03000000 	movweq	r0, #0
    8138:	00000790 	muleq	r0, r0, r7
    813c:	001e2819 	andseq	r2, lr, r9, lsl r8
    8140:	01680200 	cmneq	r8, r0, lsl #4
    8144:	00009708 	andeq	r9, r0, r8, lsl #14
    8148:	011c0000 	tsteq	ip, r0
    814c:	0010bd01 	andseq	fp, r0, r1, lsl #26
    8150:	0010bd00 	andseq	fp, r0, r0, lsl #26
    8154:	01210400 			; <UNDEFINED> instruction: 0x01210400
    8158:	0830000d 	ldmdaeq	r0!, {r0, r2, r3}
    815c:	00020000 	andeq	r0, r2, r0
    8160:	000015e9 	andeq	r1, r0, r9, ror #11
    8164:	003d0104 	eorseq	r0, sp, r4, lsl #2
    8168:	540c0000 	strpl	r0, [ip], #-0
    816c:	4100001e 	tstmi	r0, lr, lsl r0
    8170:	b8000006 	stmdalt	r0, {r1, r2}
    8174:	00000002 	andeq	r0, r0, r2
    8178:	00000000 	andeq	r0, r0, r0
    817c:	b2000000 	andlt	r0, r0, #0
    8180:	0200002e 	andeq	r0, r0, #46	; 0x2e
    8184:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    8188:	04030000 	streq	r0, [r3], #-0
    818c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    8190:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    8194:	000004e8 	andeq	r0, r0, r8, ror #9
    8198:	23040802 	movwcs	r0, #18434	; 0x4802
    819c:	02000006 	andeq	r0, r0, #6
    81a0:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    81a4:	01020000 	mrseq	r0, (UNDEF: 2)
    81a8:	00085008 	andeq	r5, r8, r8
    81ac:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    81b0:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    81b4:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    81b8:	02000009 	andeq	r0, r0, #9
    81bc:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    81c0:	04020000 	streq	r0, [r2], #-0
    81c4:	00023407 	andeq	r3, r2, r7, lsl #8
    81c8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    81cc:	0000022f 	andeq	r0, r0, pc, lsr #4
    81d0:	01020404 	tsteq	r2, r4, lsl #8
    81d4:	00085908 	andeq	r5, r8, r8, lsl #18
    81d8:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    81dc:	73020000 	movwvc	r0, #8192	; 0x2000
    81e0:	00007831 	andeq	r7, r0, r1, lsr r8
    81e4:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    81e8:	76020000 	strvc	r0, [r2], -r0
    81ec:	00002931 	andeq	r2, r0, r1, lsr r9
    81f0:	008b0600 	addeq	r0, fp, r0, lsl #12
    81f4:	11050000 	mrsne	r0, (UNDEF: 5)
    81f8:	02000007 	andeq	r0, r0, #7
    81fc:	00683178 	rsbeq	r3, r8, r8, ror r1
    8200:	9c060000 	stcls	0, cr0, [r6], {-0}
    8204:	07000000 	streq	r0, [r0, -r0]
    8208:	0000053b 	andeq	r0, r0, fp, lsr r5
    820c:	0182031c 	orreq	r0, r2, ip, lsl r3
    8210:	00012c10 	andeq	r2, r1, r0, lsl ip
    8214:	08120800 	ldmdaeq	r2, {fp}
    8218:	86030000 	strhi	r0, [r3], -r0
    821c:	009c1901 	addseq	r1, ip, r1, lsl #18
    8220:	23020000 	movwcs	r0, #8192	; 0x2000
    8224:	03a00800 	moveq	r0, #0, 16
    8228:	87030000 	strhi	r0, [r3, -r0]
    822c:	009c1901 	addseq	r1, ip, r1, lsl #18
    8230:	23020000 	movwcs	r0, #8192	; 0x2000
    8234:	043d0804 	ldrteq	r0, [sp], #-2052	; 0xfffff7fc
    8238:	8a030000 	bhi	c8240 <SYSTICK_CYCLES+0x9f201>
    823c:	01381b01 	teqeq	r8, r1, lsl #22
    8240:	23020000 	movwcs	r0, #8192	; 0x2000
    8244:	01f20808 	mvnseq	r0, r8, lsl #16
    8248:	8b030000 	blhi	c8250 <SYSTICK_CYCLES+0x9f211>
    824c:	009c1901 	addseq	r1, ip, r1, lsl #18
    8250:	23020000 	movwcs	r0, #8192	; 0x2000
    8254:	0954080c 	ldmdbeq	r4, {r2, r3, fp}^
    8258:	91030000 	mrsls	r0, (UNDEF: 3)
    825c:	013e1a01 	teqeq	lr, r1, lsl #20
    8260:	23020000 	movwcs	r0, #8192	; 0x2000
    8264:	001b0810 	andseq	r0, fp, r0, lsl r8
    8268:	92030000 	andls	r0, r3, #0
    826c:	013e1a01 	teqeq	lr, r1, lsl #20
    8270:	23020000 	movwcs	r0, #8192	; 0x2000
    8274:	05ee0814 	strbeq	r0, [lr, #2068]!	; 0x814
    8278:	96030000 	strls	r0, [r3], -r0
    827c:	01441b01 	cmpeq	r4, r1, lsl #22
    8280:	23020000 	movwcs	r0, #8192	; 0x2000
    8284:	01090018 	tsteq	r9, r8, lsl r0
    8288:	00000138 	andeq	r0, r0, r8, lsr r1
    828c:	00009c0a 	andeq	r9, r0, sl, lsl #24
    8290:	040b0000 	streq	r0, [fp], #-0
    8294:	0000012c 	andeq	r0, r0, ip, lsr #2
    8298:	00ad040b 	adceq	r0, sp, fp, lsl #8
    829c:	040b0000 	streq	r0, [fp], #-0
    82a0:	0000013e 	andeq	r0, r0, lr, lsr r1
    82a4:	00062f0c 	andeq	r2, r6, ip, lsl #30
    82a8:	019b0300 	orrseq	r0, fp, r0, lsl #6
    82ac:	0000ad03 	andeq	sl, r0, r3, lsl #26
    82b0:	7f040b00 	svcvc	0x00040b00
    82b4:	07000000 	streq	r0, [r0, -r0]
    82b8:	0000034b 	andeq	r0, r0, fp, asr #6
    82bc:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
    82c0:	00047110 	andeq	r7, r4, r0, lsl r1
    82c4:	09110800 	ldmdbeq	r1, {fp}
    82c8:	dd030000 	stcle	0, cr0, [r3, #-0]
    82cc:	009c1901 	addseq	r1, ip, r1, lsl #18
    82d0:	23020000 	movwcs	r0, #8192	; 0x2000
    82d4:	07840800 	streq	r0, [r4, r0, lsl #16]
    82d8:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    82dc:	009c1901 	addseq	r1, ip, r1, lsl #18
    82e0:	23020000 	movwcs	r0, #8192	; 0x2000
    82e4:	01bc0804 			; <UNDEFINED> instruction: 0x01bc0804
    82e8:	df030000 	svcle	0x00030000
    82ec:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    82f0:	23020000 	movwcs	r0, #8192	; 0x2000
    82f4:	08fb0808 	ldmeq	fp!, {r3, fp}^
    82f8:	e0030000 	and	r0, r3, r0
    82fc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    8300:	23020000 	movwcs	r0, #8192	; 0x2000
    8304:	0411080c 	ldreq	r0, [r1], #-2060	; 0xfffff7f4
    8308:	e1030000 	mrs	r0, (UNDEF: 3)
    830c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    8310:	23020000 	movwcs	r0, #8192	; 0x2000
    8314:	093f0810 	ldmdbeq	pc!, {r4, fp}	; <UNPREDICTABLE>
    8318:	e2030000 	and	r0, r3, #0
    831c:	009c1901 	addseq	r1, ip, r1, lsl #18
    8320:	23020000 	movwcs	r0, #8192	; 0x2000
    8324:	21d10814 	bicscs	r0, r1, r4, lsl r8
    8328:	e3030000 	movw	r0, #12288	; 0x3000
    832c:	009c1901 	addseq	r1, ip, r1, lsl #18
    8330:	23020000 	movwcs	r0, #8192	; 0x2000
    8334:	060a0818 			; <UNDEFINED> instruction: 0x060a0818
    8338:	e4030000 	str	r0, [r3], #-0
    833c:	009c1901 	addseq	r1, ip, r1, lsl #18
    8340:	23020000 	movwcs	r0, #8192	; 0x2000
    8344:	069f081c 			; <UNDEFINED> instruction: 0x069f081c
    8348:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    834c:	04711a01 	ldrbteq	r1, [r1], #-2561	; 0xfffff5ff
    8350:	23020000 	movwcs	r0, #8192	; 0x2000
    8354:	01990820 	orrseq	r0, r9, r0, lsr #16
    8358:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    835c:	04711a01 	ldrbteq	r1, [r1], #-2561	; 0xfffff5ff
    8360:	23020000 	movwcs	r0, #8192	; 0x2000
    8364:	05960824 	ldreq	r0, [r6, #2084]	; 0x824
    8368:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    836c:	01571a01 	cmpeq	r7, r1, lsl #20
    8370:	23020000 	movwcs	r0, #8192	; 0x2000
    8374:	02d90828 	sbcseq	r0, r9, #40, 16	; 0x280000
    8378:	f2030000 	vhadd.s8	d0, d3, d0
    837c:	008b1901 	addeq	r1, fp, r1, lsl #18
    8380:	23020000 	movwcs	r0, #8192	; 0x2000
    8384:	0246082c 	subeq	r0, r6, #44, 16	; 0x2c0000
    8388:	f3030000 	vhadd.u8	d0, d3, d0
    838c:	008b1901 	addeq	r1, fp, r1, lsl #18
    8390:	23020000 	movwcs	r0, #8192	; 0x2000
    8394:	01730830 	cmneq	r3, r0, lsr r8
    8398:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    839c:	008b1901 	addeq	r1, fp, r1, lsl #18
    83a0:	23020000 	movwcs	r0, #8192	; 0x2000
    83a4:	07300834 			; <UNDEFINED> instruction: 0x07300834
    83a8:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    83ac:	008b1901 	addeq	r1, fp, r1, lsl #18
    83b0:	23020000 	movwcs	r0, #8192	; 0x2000
    83b4:	00eb0838 	rsceq	r0, fp, r8, lsr r8
    83b8:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    83bc:	008b1901 	addeq	r1, fp, r1, lsl #18
    83c0:	23020000 	movwcs	r0, #8192	; 0x2000
    83c4:	035c083c 	cmpeq	ip, #60, 16	; 0x3c0000
    83c8:	fb030000 	blx	c83d2 <SYSTICK_CYCLES+0x9f393>
    83cc:	04881b01 	streq	r1, [r8], #2817	; 0xb01
    83d0:	23020000 	movwcs	r0, #8192	; 0x2000
    83d4:	01520840 	cmpeq	r2, r0, asr #16
    83d8:	03030000 	movweq	r0, #12288	; 0x3000
    83dc:	01381b02 	teqeq	r8, r2, lsl #22
    83e0:	23020000 	movwcs	r0, #8192	; 0x2000
    83e4:	01070844 	tsteq	r7, r4, asr #16
    83e8:	04030000 	streq	r0, [r3], #-0
    83ec:	009c1902 	addseq	r1, ip, r2, lsl #18
    83f0:	23020000 	movwcs	r0, #8192	; 0x2000
    83f4:	033b0848 	teqeq	fp, #72, 16	; 0x480000
    83f8:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    83fc:	014a1902 	cmpeq	sl, r2, lsl #18
    8400:	23020000 	movwcs	r0, #8192	; 0x2000
    8404:	02ec084c 	rsceq	r0, ip, #76, 16	; 0x4c0000
    8408:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    840c:	04881b02 	streq	r1, [r8], #2818	; 0xb02
    8410:	23020000 	movwcs	r0, #8192	; 0x2000
    8414:	05ce0868 	strbeq	r0, [lr, #2152]	; 0x868
    8418:	0f030000 	svceq	0x00030000
    841c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    8420:	23020000 	movwcs	r0, #8192	; 0x2000
    8424:	0717086c 	ldreq	r0, [r7, -ip, ror #16]
    8428:	11030000 	mrsne	r0, (UNDEF: 3)
    842c:	04711a02 	ldrbteq	r1, [r1], #-2562	; 0xfffff5fe
    8430:	23020000 	movwcs	r0, #8192	; 0x2000
    8434:	02120870 	andseq	r0, r2, #112, 16	; 0x700000
    8438:	12030000 	andne	r0, r3, #0
    843c:	04711a02 	ldrbteq	r1, [r1], #-2562	; 0xfffff5fe
    8440:	23020000 	movwcs	r0, #8192	; 0x2000
    8444:	06fa0874 	uxtaheq	r0, sl, r4, ror #16
    8448:	13030000 	movwne	r0, #12288	; 0x3000
    844c:	009c1902 	addseq	r1, ip, r2, lsl #18
    8450:	23020000 	movwcs	r0, #8192	; 0x2000
    8454:	03c60878 	biceq	r0, r6, #120, 16	; 0x780000
    8458:	14030000 	strne	r0, [r3], #-0
    845c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    8460:	23020000 	movwcs	r0, #8192	; 0x2000
    8464:	0554087c 	ldrbeq	r0, [r4, #-2172]	; 0xfffff784
    8468:	15030000 	strne	r0, [r3, #-0]
    846c:	008b1902 	addeq	r1, fp, r2, lsl #18
    8470:	23030000 	movwcs	r0, #12288	; 0x3000
    8474:	e8080180 	stmda	r8, {r7, r8}
    8478:	03000003 	movweq	r0, #3
    847c:	8b190216 	blhi	648cdc <__RAM_SIZE+0x548cdc>
    8480:	03000000 	movweq	r0, #0
    8484:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    8488:	000008e4 	andeq	r0, r0, r4, ror #17
    848c:	1a021f03 	bne	900a0 <SYSTICK_CYCLES+0x67061>
    8490:	00000471 	andeq	r0, r0, r1, ror r4
    8494:	01882303 	orreq	r2, r8, r3, lsl #6
    8498:	0007d508 	andeq	sp, r7, r8, lsl #10
    849c:	02200300 	eoreq	r0, r0, #0, 6
    84a0:	0004711a 	andeq	r7, r4, sl, lsl r1
    84a4:	8c230300 	stchi	3, cr0, [r3], #-0
    84a8:	02c10801 	sbceq	r0, r1, #65536	; 0x10000
    84ac:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    84b0:	008b1902 	addeq	r1, fp, r2, lsl #18
    84b4:	23030000 	movwcs	r0, #12288	; 0x3000
    84b8:	56080190 			; <UNDEFINED> instruction: 0x56080190
    84bc:	03000002 	movweq	r0, #2
    84c0:	8b19022f 	blhi	648d84 <__RAM_SIZE+0x548d84>
    84c4:	03000000 	movweq	r0, #0
    84c8:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
    84cc:	00000320 	andeq	r0, r0, r0, lsr #6
    84d0:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    84d4:	0000008b 	andeq	r0, r0, fp, lsl #1
    84d8:	01982303 	orrseq	r2, r8, r3, lsl #6
    84dc:	00027708 	andeq	r7, r2, r8, lsl #14
    84e0:	02330300 	eorseq	r0, r3, #0, 6
    84e4:	00008b19 	andeq	r8, r0, r9, lsl fp
    84e8:	9c230300 	stcls	3, cr0, [r3], #-0
    84ec:	00000801 	andeq	r0, r0, r1, lsl #16
    84f0:	35030000 	strcc	r0, [r3, #-0]
    84f4:	056d1a02 	strbeq	r1, [sp, #-2562]!	; 0xfffff5fe
    84f8:	23030000 	movwcs	r0, #12288	; 0x3000
    84fc:	b70801a0 	strlt	r0, [r8, -r0, lsr #3]
    8500:	0300001b 	movweq	r0, #27
    8504:	9c19023a 	lfmls	f0, 4, [r9], {58}	; 0x3a
    8508:	03000000 	movweq	r0, #0
    850c:	0801a423 	stmdaeq	r1, {r0, r1, r5, sl, sp, pc}
    8510:	00001c77 	andeq	r1, r0, r7, ror ip
    8514:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    8518:	0000009c 	muleq	r0, ip, r0
    851c:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    8520:	001b3008 	andseq	r3, fp, r8
    8524:	02410300 	subeq	r0, r1, #0, 6
    8528:	00009c19 	andeq	r9, r0, r9, lsl ip
    852c:	ac230300 	stcge	3, cr0, [r3], #-0
    8530:	1d2e0801 	stcne	8, cr0, [lr, #-4]!
    8534:	45030000 	strmi	r0, [r3, #-0]
    8538:	009c1902 	addseq	r1, ip, r2, lsl #18
    853c:	23030000 	movwcs	r0, #12288	; 0x3000
    8540:	470801b0 			; <UNDEFINED> instruction: 0x470801b0
    8544:	0300001c 	movweq	r0, #28
    8548:	9c190248 	lfmls	f0, 4, [r9], {72}	; 0x48
    854c:	03000000 	movweq	r0, #0
    8550:	0801b423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, pc}
    8554:	000007a8 	andeq	r0, r0, r8, lsr #15
    8558:	1a024c03 	bne	9b56c <SYSTICK_CYCLES+0x7252d>
    855c:	00000471 	andeq	r0, r0, r1, ror r4
    8560:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    8564:	001d0608 	andseq	r0, sp, r8, lsl #12
    8568:	024f0300 	subeq	r0, pc, #0, 6
    856c:	00009c19 	andeq	r9, r0, r9, lsl ip
    8570:	bc230300 	stclt	3, cr0, [r3], #-0
    8574:	1b080801 	blne	20a580 <__RAM_SIZE+0x10a580>
    8578:	52030000 	andpl	r0, r3, #0
    857c:	009c1902 	addseq	r1, ip, r2, lsl #18
    8580:	23030000 	movwcs	r0, #12288	; 0x3000
    8584:	850801c0 	strhi	r0, [r8, #-448]	; 0xfffffe40
    8588:	0300001a 	movweq	r0, #26
    858c:	9c190255 	lfmls	f0, 4, [r9], {85}	; 0x55
    8590:	03000000 	movweq	r0, #0
    8594:	0801c423 	stmdaeq	r1, {r0, r1, r5, sl, lr, pc}
    8598:	00001bdb 	ldrdeq	r1, [r0], -fp
    859c:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    85a0:	0000009c 	muleq	r0, ip, r0
    85a4:	01c82303 	biceq	r2, r8, r3, lsl #6
    85a8:	0009a908 	andeq	sl, r9, r8, lsl #18
    85ac:	025d0300 	subseq	r0, sp, #0, 6
    85b0:	0000761a 	andeq	r7, r0, sl, lsl r6
    85b4:	cc230300 	stcgt	3, cr0, [r3], #-0
    85b8:	04810801 	streq	r0, [r1], #2049	; 0x801
    85bc:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    85c0:	009c1902 	addseq	r1, ip, r2, lsl #18
    85c4:	23030000 	movwcs	r0, #12288	; 0x3000
    85c8:	0b0001d0 	bleq	8d10 <_Min_Stack_Size+0x7d10>
    85cc:	00015d04 	andeq	r5, r1, r4, lsl #26
    85d0:	88010900 	stmdahi	r1, {r8, fp}
    85d4:	0a000004 	beq	85ec <_Min_Stack_Size+0x75ec>
    85d8:	00000471 	andeq	r0, r0, r1, ror r4
    85dc:	00009c0a 	andeq	r9, r0, sl, lsl #24
    85e0:	040b0000 	streq	r0, [fp], #-0
    85e4:	00000477 	andeq	r0, r0, r7, ror r4
    85e8:	00079807 	andeq	r9, r7, r7, lsl #16
    85ec:	7e033400 	cfcpysvc	mvf3, mvf3
    85f0:	056d1003 	strbeq	r1, [sp, #-3]!
    85f4:	8d080000 	stchi	0, cr0, [r8, #-0]
    85f8:	03000001 	movweq	r0, #1
    85fc:	9c190382 	ldcls	3, cr0, [r9], {130}	; 0x82
    8600:	02000000 	andeq	r0, r0, #0
    8604:	7c080023 	stcvc	0, cr0, [r8], {35}	; 0x23
    8608:	03000008 	movweq	r0, #8
    860c:	571a0385 	ldrpl	r0, [sl, -r5, lsl #7]
    8610:	02000001 	andeq	r0, r0, #1
    8614:	e1080423 	tst	r8, r3, lsr #8
    8618:	03000006 	movweq	r0, #6
    861c:	8b190388 	blhi	649444 <__RAM_SIZE+0x549444>
    8620:	02000000 	andeq	r0, r0, #0
    8624:	cb080823 	blgt	20a6b8 <__RAM_SIZE+0x10a6b8>
    8628:	03000004 	movweq	r0, #4
    862c:	801a038c 	andshi	r0, sl, ip, lsl #7
    8630:	02000005 	andeq	r0, r0, #5
    8634:	62080c23 	andvs	r0, r8, #8960	; 0x2300
    8638:	03000001 	movweq	r0, #1
    863c:	8b190390 	blhi	649484 <__RAM_SIZE+0x549484>
    8640:	02000000 	andeq	r0, r0, #0
    8644:	21081023 	tstcs	r8, r3, lsr #32
    8648:	03000001 	movweq	r0, #1
    864c:	8b190393 	blhi	6494a0 <__RAM_SIZE+0x5494a0>
    8650:	02000000 	andeq	r0, r0, #0
    8654:	b2081423 	andlt	r1, r8, #587202560	; 0x23000000
    8658:	03000008 	movweq	r0, #8
    865c:	711a0398 			; <UNDEFINED> instruction: 0x711a0398
    8660:	02000004 	andeq	r0, r0, #4
    8664:	c8081823 	stmdagt	r8, {r0, r1, r5, fp, ip}
    8668:	03000006 	movweq	r0, #6
    866c:	8b190399 	blhi	6494d8 <__RAM_SIZE+0x5494d8>
    8670:	02000000 	andeq	r0, r0, #0
    8674:	b8081c23 	stmdalt	r8, {r0, r1, r5, sl, fp, ip}
    8678:	03000005 	movweq	r0, #5
    867c:	6d1a039d 	ldcvs	3, cr0, [sl, #-628]	; 0xfffffd8c
    8680:	02000005 	andeq	r0, r0, #5
    8684:	85082023 	strhi	r2, [r8, #-35]	; 0xffffffdd
    8688:	03000006 	movweq	r0, #6
    868c:	6d1a039e 	ldcvs	3, cr0, [sl, #-632]	; 0xfffffd88
    8690:	02000005 	andeq	r0, r0, #5
    8694:	d0082423 	andle	r2, r8, r3, lsr #8
    8698:	03000001 	movweq	r0, #1
    869c:	8b1903a2 	blhi	64952c <__RAM_SIZE+0x54952c>
    86a0:	02000000 	andeq	r0, r0, #0
    86a4:	c5082823 	strgt	r2, [r8, #-2083]	; 0xfffff7dd
    86a8:	03000009 	movweq	r0, #9
    86ac:	6d1a03a6 	ldcvs	3, cr0, [sl, #-664]	; 0xfffffd68
    86b0:	02000005 	andeq	r0, r0, #5
    86b4:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
    86b8:	03000004 	movweq	r0, #4
    86bc:	6d1a03a7 	ldcvs	3, cr0, [sl, #-668]	; 0xfffffd64
    86c0:	02000005 	andeq	r0, r0, #5
    86c4:	0b003023 	bleq	14758 <_Min_Stack_Size+0x13758>
    86c8:	00048e04 	andeq	r8, r4, r4, lsl #28
    86cc:	08d40c00 	ldmeq	r4, {sl, fp}^
    86d0:	86030000 	strhi	r0, [r3], -r0
    86d4:	015d0302 	cmpeq	sp, r2, lsl #6
    86d8:	040b0000 	streq	r0, [fp], #-0
    86dc:	00000573 	andeq	r0, r0, r3, ror r5
    86e0:	00111b0d 	andseq	r1, r1, sp, lsl #22
    86e4:	01390400 	teqeq	r9, r0, lsl #8
    86e8:	00058021 	andeq	r8, r5, r1, lsr #32
    86ec:	0d010100 	stfeqs	f0, [r1, #-0]
    86f0:	000018e8 	andeq	r1, r0, r8, ror #17
    86f4:	21015304 	tstcs	r1, r4, lsl #6
    86f8:	000000a8 	andeq	r0, r0, r8, lsr #1
    86fc:	320d0101 	andcc	r0, sp, #1073741824	; 0x40000000
    8700:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    8704:	9721018e 	strls	r0, [r1, -lr, lsl #3]!
    8708:	01000000 	mrseq	r0, (UNDEF: 0)
    870c:	1e8a0e01 	cdpne	14, 8, cr0, cr10, cr1, {0}
    8710:	8f050000 	svchi	0x00050000
    8714:	00057321 	andeq	r7, r5, r1, lsr #6
    8718:	0f010100 	svceq	0x00010100
    871c:	00088a01 	andeq	r8, r8, r1, lsl #20
    8720:	07490100 	strbeq	r0, [r9, -r0, lsl #2]
    8724:	00008b01 	andeq	r8, r0, r1, lsl #22
    8728:	001f4c00 	andseq	r4, pc, r0, lsl #24
    872c:	001fc010 	andseq	ip, pc, r0, lsl r0	; <UNPREDICTABLE>
    8730:	0037ca10 	eorseq	ip, r7, r0, lsl sl
    8734:	07a40100 	streq	r0, [r4, r0, lsl #2]!
    8738:	9b100000 	blls	408740 <__RAM_SIZE+0x308740>
    873c:	0100001e 	tsteq	r0, lr, lsl r0
    8740:	009c1e49 	addseq	r1, ip, r9, asr #28
    8744:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8748:	37ea0000 	strbcc	r0, [sl, r0]!
    874c:	e2110000 	ands	r0, r1, #0
    8750:	0100000e 	tsteq	r0, lr
    8754:	008b014c 	addeq	r0, fp, ip, asr #2
    8758:	38920000 	ldmcc	r2, {}	; <UNPREDICTABLE>
    875c:	38900000 	ldmcc	r0, {}	; <UNPREDICTABLE>
    8760:	fa110000 	blx	448768 <__RAM_SIZE+0x348768>
    8764:	01000003 	tsteq	r0, r3
    8768:	008b114e 	addeq	r1, fp, lr, asr #2
    876c:	38b10000 	ldmcc	r1!, {}	; <UNPREDICTABLE>
    8770:	38a50000 	stmiacc	r5!, {}	; <UNPREDICTABLE>
    8774:	cf110000 	svcgt	0x00110000
    8778:	01000019 	tsteq	r0, r9, lsl r0
    877c:	0580124f 	streq	r1, [r0, #591]	; 0x24f
    8780:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    8784:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    8788:	a4120000 	ldrge	r0, [r2], #-0
    878c:	4e000007 	cdpmi	0, 0, cr0, cr0, cr7, {0}
    8790:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    8794:	10001f4e 	andne	r1, r0, lr, asr #30
    8798:	10001f54 	andne	r1, r0, r4, asr pc
    879c:	7b055301 	blvc	15d3a8 <__RAM_SIZE+0x5d3a8>
    87a0:	13000006 	movwne	r0, #6
    87a4:	000007b7 			; <UNDEFINED> instruction: 0x000007b7
    87a8:	00003917 	andeq	r3, r0, r7, lsl r9
    87ac:	00003915 	andeq	r3, r0, r5, lsl r9
    87b0:	0007e214 	andeq	lr, r7, r4, lsl r2
    87b4:	001f4e00 	andseq	r4, pc, r0, lsl #28
    87b8:	1f4e0710 	svcne	0x004e0710
    87bc:	1f521000 	svcne	0x00521000
    87c0:	56021000 	strpl	r1, [r2], -r0
    87c4:	f5131302 			; <UNDEFINED> instruction: 0xf5131302
    87c8:	2c000007 	stccs	0, cr0, [r0], {7}
    87cc:	2a000039 	bcs	88b8 <_Min_Stack_Size+0x78b8>
    87d0:	00000039 	andeq	r0, r0, r9, lsr r0
    87d4:	08031200 	stmdaeq	r3, {r9, ip}
    87d8:	1f5a0000 	svcne	0x005a0000
    87dc:	5a011000 	bpl	4c7e4 <SYSTICK_CYCLES+0x237a5>
    87e0:	5e10001f 	mrcpl	0, 0, r0, cr0, cr15, {0}
    87e4:	0110001f 	tsteq	r0, pc, lsl r0
    87e8:	06a20e66 	strteq	r0, [r2], r6, ror #28
    87ec:	16130000 	ldrne	r0, [r3], -r0
    87f0:	41000008 	tstmi	r0, r8
    87f4:	3f000039 	svccc	0x00000039
    87f8:	00000039 	andeq	r0, r0, r9, lsr r0
    87fc:	0007c512 	andeq	ip, r7, r2, lsl r5
    8800:	001f6e00 	andseq	r6, pc, r0, lsl #28
    8804:	1f6e0110 	svcne	0x006e0110
    8808:	1f721000 	svcne	0x00721000
    880c:	83011000 	movwhi	r1, #4096	; 0x1000
    8810:	0006c909 	andeq	ip, r6, r9, lsl #18
    8814:	07d41500 	ldrbeq	r1, [r4, r0, lsl #10]
    8818:	39560000 	ldmdbcc	r6, {}^	; <UNPREDICTABLE>
    881c:	39540000 	ldmdbcc	r4, {}^	; <UNPREDICTABLE>
    8820:	12000000 	andne	r0, r0, #0
    8824:	000007c5 	andeq	r0, r0, r5, asr #15
    8828:	10001f74 	andne	r1, r0, r4, ror pc
    882c:	001f7401 	andseq	r7, pc, r1, lsl #8
    8830:	001f7810 	andseq	r7, pc, r0, lsl r8	; <UNPREDICTABLE>
    8834:	095f0110 	ldmdbeq	pc, {r4, r8}^	; <UNPREDICTABLE>
    8838:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    883c:	0007d415 	andeq	sp, r7, r5, lsl r4
    8840:	00396b00 	eorseq	r6, r9, r0, lsl #22
    8844:	00396900 	eorseq	r6, r9, r0, lsl #18
    8848:	c5120000 	ldrgt	r0, [r2, #-0]
    884c:	7c000007 	stcvc	0, cr0, [r0], {7}
    8850:	0110001f 	tsteq	r0, pc, lsl r0
    8854:	10001f7c 	andne	r1, r0, ip, ror pc
    8858:	10001f80 	andne	r1, r0, r0, lsl #31
    885c:	17096a01 	strne	r6, [r9, -r1, lsl #20]
    8860:	15000007 	strne	r0, [r0, #-7]
    8864:	000007d4 	ldrdeq	r0, [r0], -r4
    8868:	00003980 	andeq	r3, r0, r0, lsl #19
    886c:	0000397e 	andeq	r3, r0, lr, ror r9
    8870:	07c51200 	strbeq	r1, [r5, r0, lsl #4]
    8874:	1f840000 	svcne	0x00840000
    8878:	84011000 	strhi	r1, [r1], #-0
    887c:	8810001f 	ldmdahi	r0, {r0, r1, r2, r3, r4}
    8880:	0110001f 	tsteq	r0, pc, lsl r0
    8884:	073e0977 			; <UNDEFINED> instruction: 0x073e0977
    8888:	d4150000 	ldrle	r0, [r5], #-0
    888c:	95000007 	strls	r0, [r0, #-7]
    8890:	93000039 	movwls	r0, #57	; 0x39
    8894:	00000039 	andeq	r0, r0, r9, lsr r0
    8898:	0007c512 	andeq	ip, r7, r2, lsl r5
    889c:	001f9200 	andseq	r9, pc, r0, lsl #4
    88a0:	1f920110 	svcne	0x00920110
    88a4:	1f961000 	svcne	0x00961000
    88a8:	90011000 	andls	r1, r1, r0
    88ac:	0007650d 	andeq	r6, r7, sp, lsl #10
    88b0:	07d41500 	ldrbeq	r1, [r4, r0, lsl #10]
    88b4:	39aa0000 	stmibcc	sl!, {}	; <UNPREDICTABLE>
    88b8:	39a80000 	stmibcc	r8!, {}	; <UNPREDICTABLE>
    88bc:	12000000 	andne	r0, r0, #0
    88c0:	000007c5 	andeq	r0, r0, r5, asr #15
    88c4:	10001fa6 	andne	r1, r0, r6, lsr #31
    88c8:	001fa601 	andseq	sl, pc, r1, lsl #12
    88cc:	001faa10 	andseq	sl, pc, r0, lsl sl	; <UNPREDICTABLE>
    88d0:	0da90110 	stfeqs	f0, [r9, #64]!	; 0x40
    88d4:	0000078c 	andeq	r0, r0, ip, lsl #15
    88d8:	0007d415 	andeq	sp, r7, r5, lsl r4
    88dc:	0039bf00 	eorseq	fp, r9, r0, lsl #30
    88e0:	0039bd00 	eorseq	fp, r9, r0, lsl #26
    88e4:	a6160000 	ldrge	r0, [r6], -r0
    88e8:	2410001f 	ldrcs	r0, [r0], #-31	; 0xffffffe1
    88ec:	17000008 	strne	r0, [r0, -r8]
    88f0:	74025001 	strvc	r5, [r2], #-1
    88f4:	51011700 	tstpl	r1, r0, lsl #14
    88f8:	5001f303 	andpl	pc, r1, r3, lsl #6
    88fc:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
    8900:	0200000f 	andeq	r0, r0, #15
    8904:	01370252 	teqeq	r7, r2, asr r2
    8908:	0000008b 	andeq	r0, r0, fp, lsl #1
    890c:	0007c503 	andeq	ip, r7, r3, lsl #10
    8910:	0ea11900 	vfmaeq.f16	s2, s2, s0	; <UNPREDICTABLE>
    8914:	54020000 	strpl	r0, [r2], #-0
    8918:	008b0602 	addeq	r0, fp, r2, lsl #12
    891c:	1a000000 	bne	8924 <_Min_Stack_Size+0x7924>
    8920:	00000e8d 	andeq	r0, r0, sp, lsl #29
    8924:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    8928:	07e20301 	strbeq	r0, [r2, r1, lsl #6]!
    892c:	a11b0000 	tstge	fp, r0
    8930:	0200000e 	andeq	r0, r0, #14
    8934:	8b500249 	blhi	1409260 <__RAM_SIZE+0x1309260>
    8938:	00000000 	andeq	r0, r0, r0
    893c:	000eb618 	andeq	fp, lr, r8, lsl r6
    8940:	02320200 	eorseq	r0, r2, #0, 4
    8944:	008b0137 	addeq	r0, fp, r7, lsr r1
    8948:	03030000 	movweq	r0, #12288	; 0x3000
    894c:	19000008 	stmdbne	r0, {r3}
    8950:	00000ea5 	andeq	r0, r0, r5, lsr #29
    8954:	06023402 	streq	r3, [r2], -r2, lsl #8
    8958:	0000008b 	andeq	r0, r0, fp, lsl #1
    895c:	196e1800 	stmdbne	lr!, {fp, ip}^
    8960:	fa020000 	blx	88968 <SYSTICK_CYCLES+0x5f929>
    8964:	8b013701 	blhi	56570 <SYSTICK_CYCLES+0x2d531>
    8968:	03000000 	movweq	r0, #0
    896c:	00000824 	andeq	r0, r0, r4, lsr #16
    8970:	001a7919 	andseq	r7, sl, r9, lsl r9
    8974:	01fc0200 	mvnseq	r0, r0, lsl #4
    8978:	00008b06 	andeq	r8, r0, r6, lsl #22
    897c:	011c0000 	tsteq	ip, r0
    8980:	0010bd01 	andseq	fp, r0, r1, lsl #26
    8984:	0010bd00 	andseq	fp, r0, r0, lsl #26
    8988:	01210400 			; <UNDEFINED> instruction: 0x01210400
    898c:	0744000d 	strbeq	r0, [r4, -sp]
    8990:	00020000 	andeq	r0, r2, r0
    8994:	0000179f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    8998:	003d0104 	eorseq	r0, sp, r4, lsl #2
    899c:	cd0c0000 	stcgt	0, cr0, [ip, #-0]
    89a0:	4100001e 	tstmi	r0, lr, lsl r0
    89a4:	e0000006 	and	r0, r0, r6
    89a8:	00000002 	andeq	r0, r0, r2
    89ac:	00000000 	andeq	r0, r0, r0
    89b0:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    89b4:	02000030 	andeq	r0, r0, #48	; 0x30
    89b8:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    89bc:	04030000 	streq	r0, [r3], #-0
    89c0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    89c4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    89c8:	000004e8 	andeq	r0, r0, r8, ror #9
    89cc:	23040802 	movwcs	r0, #18434	; 0x4802
    89d0:	02000006 	andeq	r0, r0, #6
    89d4:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    89d8:	01020000 	mrseq	r0, (UNDEF: 2)
    89dc:	00085008 	andeq	r5, r8, r8
    89e0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    89e4:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    89e8:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    89ec:	02000009 	andeq	r0, r0, #9
    89f0:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    89f4:	04020000 	streq	r0, [r2], #-0
    89f8:	00023407 	andeq	r3, r2, r7, lsl #8
    89fc:	07080200 	streq	r0, [r8, -r0, lsl #4]
    8a00:	0000022f 	andeq	r0, r0, pc, lsr #4
    8a04:	01020404 	tsteq	r2, r4, lsl #8
    8a08:	00085908 	andeq	r5, r8, r8, lsl #18
    8a0c:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    8a10:	73020000 	movwvc	r0, #8192	; 0x2000
    8a14:	00007831 	andeq	r7, r0, r1, lsr r8
    8a18:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    8a1c:	76020000 	strvc	r0, [r2], -r0
    8a20:	00002931 	andeq	r2, r0, r1, lsr r9
    8a24:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    8a28:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    8a2c:	00006831 	andeq	r6, r0, r1, lsr r8
    8a30:	053b0600 	ldreq	r0, [fp, #-1536]!	; 0xfffffa00
    8a34:	031c0000 	tsteq	ip, #0
    8a38:	22100182 	andscs	r0, r0, #-2147483616	; 0x80000020
    8a3c:	07000001 	streq	r0, [r0, -r1]
    8a40:	00000812 	andeq	r0, r0, r2, lsl r8
    8a44:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    8a48:	00000097 	muleq	r0, r7, r0
    8a4c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    8a50:	000003a0 	andeq	r0, r0, r0, lsr #7
    8a54:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    8a58:	00000097 	muleq	r0, r7, r0
    8a5c:	07042302 	streq	r2, [r4, -r2, lsl #6]
    8a60:	0000043d 	andeq	r0, r0, sp, lsr r4
    8a64:	1b018a03 	blne	6b278 <SYSTICK_CYCLES+0x42239>
    8a68:	0000012e 	andeq	r0, r0, lr, lsr #2
    8a6c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    8a70:	000001f2 	strdeq	r0, [r0], -r2
    8a74:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    8a78:	00000097 	muleq	r0, r7, r0
    8a7c:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    8a80:	00000954 	andeq	r0, r0, r4, asr r9
    8a84:	1a019103 	bne	6ce98 <SYSTICK_CYCLES+0x43e59>
    8a88:	00000134 	andeq	r0, r0, r4, lsr r1
    8a8c:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    8a90:	0000001b 	andeq	r0, r0, fp, lsl r0
    8a94:	1a019203 	bne	6d2a8 <SYSTICK_CYCLES+0x44269>
    8a98:	00000134 	andeq	r0, r0, r4, lsr r1
    8a9c:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    8aa0:	000005ee 	andeq	r0, r0, lr, ror #11
    8aa4:	1b019603 	blne	6e2b8 <SYSTICK_CYCLES+0x45279>
    8aa8:	0000013a 	andeq	r0, r0, sl, lsr r1
    8aac:	00182302 	andseq	r2, r8, r2, lsl #6
    8ab0:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    8ab4:	97090000 	strls	r0, [r9, -r0]
    8ab8:	00000000 	andeq	r0, r0, r0
    8abc:	0122040a 			; <UNDEFINED> instruction: 0x0122040a
    8ac0:	040a0000 	streq	r0, [sl], #-0
    8ac4:	000000a3 	andeq	r0, r0, r3, lsr #1
    8ac8:	0134040a 	teqeq	r4, sl, lsl #8
    8acc:	2f0b0000 	svccs	0x000b0000
    8ad0:	03000006 	movweq	r0, #6
    8ad4:	a303019b 	movwge	r0, #12699	; 0x319b
    8ad8:	0a000000 	beq	8ae0 <_Min_Stack_Size+0x7ae0>
    8adc:	00007f04 	andeq	r7, r0, r4, lsl #30
    8ae0:	034b0600 	movteq	r0, #46592	; 0xb600
    8ae4:	03d40000 	bicseq	r0, r4, #0
    8ae8:	671001d6 			; <UNDEFINED> instruction: 0x671001d6
    8aec:	07000004 	streq	r0, [r0, -r4]
    8af0:	00000911 	andeq	r0, r0, r1, lsl r9
    8af4:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    8af8:	00000097 	muleq	r0, r7, r0
    8afc:	07002302 	streq	r2, [r0, -r2, lsl #6]
    8b00:	00000784 	andeq	r0, r0, r4, lsl #15
    8b04:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    8b08:	00000097 	muleq	r0, r7, r0
    8b0c:	07042302 	streq	r2, [r4, -r2, lsl #6]
    8b10:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    8b14:	1a01df03 	bne	80728 <SYSTICK_CYCLES+0x576e9>
    8b18:	00000076 	andeq	r0, r0, r6, ror r0
    8b1c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    8b20:	000008fb 	strdeq	r0, [r0], -fp
    8b24:	1a01e003 	bne	80b38 <SYSTICK_CYCLES+0x57af9>
    8b28:	00000076 	andeq	r0, r0, r6, ror r0
    8b2c:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    8b30:	00000411 	andeq	r0, r0, r1, lsl r4
    8b34:	1a01e103 	bne	80f48 <SYSTICK_CYCLES+0x57f09>
    8b38:	00000076 	andeq	r0, r0, r6, ror r0
    8b3c:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    8b40:	0000093f 	andeq	r0, r0, pc, lsr r9
    8b44:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    8b48:	00000097 	muleq	r0, r7, r0
    8b4c:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    8b50:	000021d1 	ldrdeq	r2, [r0], -r1
    8b54:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    8b58:	00000097 	muleq	r0, r7, r0
    8b5c:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    8b60:	0000060a 	andeq	r0, r0, sl, lsl #12
    8b64:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    8b68:	00000097 	muleq	r0, r7, r0
    8b6c:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    8b70:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    8b74:	1a01e803 	bne	82b88 <SYSTICK_CYCLES+0x59b49>
    8b78:	00000467 	andeq	r0, r0, r7, ror #8
    8b7c:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    8b80:	00000199 	muleq	r0, r9, r1
    8b84:	1a01e903 	bne	82f98 <SYSTICK_CYCLES+0x59f59>
    8b88:	00000467 	andeq	r0, r0, r7, ror #8
    8b8c:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    8b90:	00000596 	muleq	r0, r6, r5
    8b94:	1a01f103 	bne	84fa8 <SYSTICK_CYCLES+0x5bf69>
    8b98:	0000014d 	andeq	r0, r0, sp, asr #2
    8b9c:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    8ba0:	000002d9 	ldrdeq	r0, [r0], -r9
    8ba4:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    8ba8:	0000008b 	andeq	r0, r0, fp, lsl #1
    8bac:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    8bb0:	00000246 	andeq	r0, r0, r6, asr #4
    8bb4:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    8bb8:	0000008b 	andeq	r0, r0, fp, lsl #1
    8bbc:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    8bc0:	00000173 	andeq	r0, r0, r3, ror r1
    8bc4:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    8bc8:	0000008b 	andeq	r0, r0, fp, lsl #1
    8bcc:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    8bd0:	00000730 	andeq	r0, r0, r0, lsr r7
    8bd4:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    8bd8:	0000008b 	andeq	r0, r0, fp, lsl #1
    8bdc:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    8be0:	000000eb 	andeq	r0, r0, fp, ror #1
    8be4:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    8be8:	0000008b 	andeq	r0, r0, fp, lsl #1
    8bec:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    8bf0:	0000035c 	andeq	r0, r0, ip, asr r3
    8bf4:	1b01fb03 	blne	87808 <SYSTICK_CYCLES+0x5e7c9>
    8bf8:	0000047e 	andeq	r0, r0, lr, ror r4
    8bfc:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    8c00:	00000152 	andeq	r0, r0, r2, asr r1
    8c04:	1b020303 	blne	89818 <SYSTICK_CYCLES+0x607d9>
    8c08:	0000012e 	andeq	r0, r0, lr, lsr #2
    8c0c:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    8c10:	00000107 	andeq	r0, r0, r7, lsl #2
    8c14:	19020403 	stmdbne	r2, {r0, r1, sl}
    8c18:	00000097 	muleq	r0, r7, r0
    8c1c:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    8c20:	0000033b 	andeq	r0, r0, fp, lsr r3
    8c24:	19020803 	stmdbne	r2, {r0, r1, fp}
    8c28:	00000140 	andeq	r0, r0, r0, asr #2
    8c2c:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    8c30:	000002ec 	andeq	r0, r0, ip, ror #5
    8c34:	1b020e03 	blne	8c448 <SYSTICK_CYCLES+0x63409>
    8c38:	0000047e 	andeq	r0, r0, lr, ror r4
    8c3c:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    8c40:	000005ce 	andeq	r0, r0, lr, asr #11
    8c44:	1a020f03 	bne	8c858 <SYSTICK_CYCLES+0x63819>
    8c48:	00000076 	andeq	r0, r0, r6, ror r0
    8c4c:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    8c50:	00000717 	andeq	r0, r0, r7, lsl r7
    8c54:	1a021103 	bne	8d068 <SYSTICK_CYCLES+0x64029>
    8c58:	00000467 	andeq	r0, r0, r7, ror #8
    8c5c:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    8c60:	00000212 	andeq	r0, r0, r2, lsl r2
    8c64:	1a021203 	bne	8d478 <SYSTICK_CYCLES+0x64439>
    8c68:	00000467 	andeq	r0, r0, r7, ror #8
    8c6c:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    8c70:	000006fa 	strdeq	r0, [r0], -sl
    8c74:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    8c78:	00000097 	muleq	r0, r7, r0
    8c7c:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    8c80:	000003c6 	andeq	r0, r0, r6, asr #7
    8c84:	1a021403 	bne	8dc98 <SYSTICK_CYCLES+0x64c59>
    8c88:	00000076 	andeq	r0, r0, r6, ror r0
    8c8c:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    8c90:	00000554 	andeq	r0, r0, r4, asr r5
    8c94:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    8c98:	0000008b 	andeq	r0, r0, fp, lsl #1
    8c9c:	01802303 	orreq	r2, r0, r3, lsl #6
    8ca0:	0003e807 	andeq	lr, r3, r7, lsl #16
    8ca4:	02160300 	andseq	r0, r6, #0, 6
    8ca8:	00008b19 	andeq	r8, r0, r9, lsl fp
    8cac:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    8cb0:	08e40701 	stmiaeq	r4!, {r0, r8, r9, sl}^
    8cb4:	1f030000 	svcne	0x00030000
    8cb8:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    8cbc:	23030000 	movwcs	r0, #12288	; 0x3000
    8cc0:	d5070188 	strle	r0, [r7, #-392]	; 0xfffffe78
    8cc4:	03000007 	movweq	r0, #7
    8cc8:	671a0220 	ldrvs	r0, [sl, -r0, lsr #4]
    8ccc:	03000004 	movweq	r0, #4
    8cd0:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    8cd4:	000002c1 	andeq	r0, r0, r1, asr #5
    8cd8:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    8cdc:	0000008b 	andeq	r0, r0, fp, lsl #1
    8ce0:	01902303 	orrseq	r2, r0, r3, lsl #6
    8ce4:	00025607 	andeq	r5, r2, r7, lsl #12
    8ce8:	022f0300 	eoreq	r0, pc, #0, 6
    8cec:	00008b19 	andeq	r8, r0, r9, lsl fp
    8cf0:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    8cf4:	03200701 			; <UNDEFINED> instruction: 0x03200701
    8cf8:	30030000 	andcc	r0, r3, r0
    8cfc:	008b1902 	addeq	r1, fp, r2, lsl #18
    8d00:	23030000 	movwcs	r0, #12288	; 0x3000
    8d04:	77070198 			; <UNDEFINED> instruction: 0x77070198
    8d08:	03000002 	movweq	r0, #2
    8d0c:	8b190233 	blhi	6495e0 <__RAM_SIZE+0x5495e0>
    8d10:	03000000 	movweq	r0, #0
    8d14:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    8d18:	00000000 	andeq	r0, r0, r0
    8d1c:	1a023503 	bne	96130 <SYSTICK_CYCLES+0x6d0f1>
    8d20:	00000563 	andeq	r0, r0, r3, ror #10
    8d24:	01a02303 	lsleq	r2, r3, #6
    8d28:	001bb707 	andseq	fp, fp, r7, lsl #14
    8d2c:	023a0300 	eorseq	r0, sl, #0, 6
    8d30:	00009719 	andeq	r9, r0, r9, lsl r7
    8d34:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    8d38:	1c770701 	ldclne	7, cr0, [r7], #-4
    8d3c:	3d030000 	stccc	0, cr0, [r3, #-0]
    8d40:	00971902 	addseq	r1, r7, r2, lsl #18
    8d44:	23030000 	movwcs	r0, #12288	; 0x3000
    8d48:	300701a8 	andcc	r0, r7, r8, lsr #3
    8d4c:	0300001b 	movweq	r0, #27
    8d50:	97190241 	ldrls	r0, [r9, -r1, asr #4]
    8d54:	03000000 	movweq	r0, #0
    8d58:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    8d5c:	00001d2e 	andeq	r1, r0, lr, lsr #26
    8d60:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    8d64:	00000097 	muleq	r0, r7, r0
    8d68:	01b02303 	lslseq	r2, r3, #6
    8d6c:	001c4707 	andseq	r4, ip, r7, lsl #14
    8d70:	02480300 	subeq	r0, r8, #0, 6
    8d74:	00009719 	andeq	r9, r0, r9, lsl r7
    8d78:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    8d7c:	07a80701 	streq	r0, [r8, r1, lsl #14]!
    8d80:	4c030000 	stcmi	0, cr0, [r3], {-0}
    8d84:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    8d88:	23030000 	movwcs	r0, #12288	; 0x3000
    8d8c:	060701b8 			; <UNDEFINED> instruction: 0x060701b8
    8d90:	0300001d 	movweq	r0, #29
    8d94:	9719024f 	ldrls	r0, [r9, -pc, asr #4]
    8d98:	03000000 	movweq	r0, #0
    8d9c:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    8da0:	00001b08 	andeq	r1, r0, r8, lsl #22
    8da4:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    8da8:	00000097 	muleq	r0, r7, r0
    8dac:	01c02303 	biceq	r2, r0, r3, lsl #6
    8db0:	001a8507 	andseq	r8, sl, r7, lsl #10
    8db4:	02550300 	subseq	r0, r5, #0, 6
    8db8:	00009719 	andeq	r9, r0, r9, lsl r7
    8dbc:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    8dc0:	1bdb0701 	blne	ff6ca9cc <__RAM_segment_used_end__+0xc75ca9cc>
    8dc4:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    8dc8:	00971902 	addseq	r1, r7, r2, lsl #18
    8dcc:	23030000 	movwcs	r0, #12288	; 0x3000
    8dd0:	a90701c8 	stmdbge	r7, {r3, r6, r7, r8}
    8dd4:	03000009 	movweq	r0, #9
    8dd8:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    8ddc:	03000000 	movweq	r0, #0
    8de0:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    8de4:	00000481 	andeq	r0, r0, r1, lsl #9
    8de8:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    8dec:	00000097 	muleq	r0, r7, r0
    8df0:	01d02303 	bicseq	r2, r0, r3, lsl #6
    8df4:	53040a00 	movwpl	r0, #18944	; 0x4a00
    8df8:	08000001 	stmdaeq	r0, {r0}
    8dfc:	00047e01 	andeq	r7, r4, r1, lsl #28
    8e00:	04670900 	strbteq	r0, [r7], #-2304	; 0xfffff700
    8e04:	97090000 	strls	r0, [r9, -r0]
    8e08:	00000000 	andeq	r0, r0, r0
    8e0c:	046d040a 	strbteq	r0, [sp], #-1034	; 0xfffffbf6
    8e10:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    8e14:	34000007 	strcc	r0, [r0], #-7
    8e18:	10037e03 	andne	r7, r3, r3, lsl #28
    8e1c:	00000563 	andeq	r0, r0, r3, ror #10
    8e20:	00018d07 	andeq	r8, r1, r7, lsl #26
    8e24:	03820300 	orreq	r0, r2, #0, 6
    8e28:	00009719 	andeq	r9, r0, r9, lsl r7
    8e2c:	00230200 	eoreq	r0, r3, r0, lsl #4
    8e30:	00087c07 	andeq	r7, r8, r7, lsl #24
    8e34:	03850300 	orreq	r0, r5, #0, 6
    8e38:	00014d1a 	andeq	r4, r1, sl, lsl sp
    8e3c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8e40:	0006e107 	andeq	lr, r6, r7, lsl #2
    8e44:	03880300 	orreq	r0, r8, #0, 6
    8e48:	00008b19 	andeq	r8, r0, r9, lsl fp
    8e4c:	08230200 	stmdaeq	r3!, {r9}
    8e50:	0004cb07 	andeq	ip, r4, r7, lsl #22
    8e54:	038c0300 	orreq	r0, ip, #0, 6
    8e58:	0005761a 	andeq	r7, r5, sl, lsl r6
    8e5c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8e60:	00016207 	andeq	r6, r1, r7, lsl #4
    8e64:	03900300 	orrseq	r0, r0, #0, 6
    8e68:	00008b19 	andeq	r8, r0, r9, lsl fp
    8e6c:	10230200 	eorne	r0, r3, r0, lsl #4
    8e70:	00012107 	andeq	r2, r1, r7, lsl #2
    8e74:	03930300 	orrseq	r0, r3, #0, 6
    8e78:	00008b19 	andeq	r8, r0, r9, lsl fp
    8e7c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    8e80:	0008b207 	andeq	fp, r8, r7, lsl #4
    8e84:	03980300 	orrseq	r0, r8, #0, 6
    8e88:	0004671a 	andeq	r6, r4, sl, lsl r7
    8e8c:	18230200 	stmdane	r3!, {r9}
    8e90:	0006c807 	andeq	ip, r6, r7, lsl #16
    8e94:	03990300 	orrseq	r0, r9, #0, 6
    8e98:	00008b19 	andeq	r8, r0, r9, lsl fp
    8e9c:	1c230200 	sfmne	f0, 4, [r3], #-0
    8ea0:	0005b807 	andeq	fp, r5, r7, lsl #16
    8ea4:	039d0300 	orrseq	r0, sp, #0, 6
    8ea8:	0005631a 	andeq	r6, r5, sl, lsl r3
    8eac:	20230200 	eorcs	r0, r3, r0, lsl #4
    8eb0:	00068507 	andeq	r8, r6, r7, lsl #10
    8eb4:	039e0300 	orrseq	r0, lr, #0, 6
    8eb8:	0005631a 	andeq	r6, r5, sl, lsl r3
    8ebc:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    8ec0:	0001d007 	andeq	sp, r1, r7
    8ec4:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    8ec8:	00008b19 	andeq	r8, r0, r9, lsl fp
    8ecc:	28230200 	stmdacs	r3!, {r9}
    8ed0:	0009c507 	andeq	ip, r9, r7, lsl #10
    8ed4:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    8ed8:	0005631a 	andeq	r6, r5, sl, lsl r3
    8edc:	2c230200 	sfmcs	f0, 4, [r3], #-0
    8ee0:	00042507 	andeq	r2, r4, r7, lsl #10
    8ee4:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    8ee8:	0005631a 	andeq	r6, r5, sl, lsl r3
    8eec:	30230200 	eorcc	r0, r3, r0, lsl #4
    8ef0:	84040a00 	strhi	r0, [r4], #-2560	; 0xfffff600
    8ef4:	0b000004 	bleq	8f0c <_Min_Stack_Size+0x7f0c>
    8ef8:	000008d4 	ldrdeq	r0, [r0], -r4
    8efc:	03028603 	movweq	r8, #9731	; 0x2603
    8f00:	00000153 	andeq	r0, r0, r3, asr r1
    8f04:	0569040a 	strbeq	r0, [r9, #-1034]!	; 0xfffffbf6
    8f08:	040a0000 	streq	r0, [sl], #-0
    8f0c:	00000097 	muleq	r0, r7, r0
    8f10:	1eb4010c 	frdnes	f0, f4, #4.0
    8f14:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    8f18:	1fc00107 	svcne	0x00c00107
    8f1c:	204c1000 	subcs	r1, ip, r0
    8f20:	39d21000 	ldmibcc	r2, {ip}^
    8f24:	ec010000 	stc	0, cr0, [r1], {-0}
    8f28:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    8f2c:	000019cf 	andeq	r1, r0, pc, asr #19
    8f30:	762b4801 	strtvc	r4, [fp], -r1, lsl #16
    8f34:	01000005 	tsteq	r0, r5
    8f38:	0ee20e50 	mcreq	14, 7, r0, cr2, cr0, {2}
    8f3c:	4b010000 	blmi	48f44 <SYSTICK_CYCLES+0x1ff05>
    8f40:	00008b01 	andeq	r8, r0, r1, lsl #22
    8f44:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    8f48:	003a0a00 	eorseq	r0, sl, r0, lsl #20
    8f4c:	01c60e00 	biceq	r0, r6, r0, lsl #28
    8f50:	4d010000 	stcmi	0, cr0, [r1, #-0]
    8f54:	00057c0e 	andeq	r7, r5, lr, lsl #24
    8f58:	003a3200 	eorseq	r3, sl, r0, lsl #4
    8f5c:	003a2c00 	eorseq	r2, sl, r0, lsl #24
    8f60:	1ea70e00 	cdpne	14, 10, cr0, cr7, cr0, {0}
    8f64:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    8f68:	00057c0e 	andeq	r7, r5, lr, lsl #24
    8f6c:	003a5d00 	eorseq	r5, sl, r0, lsl #26
    8f70:	003a5b00 	eorseq	r5, sl, r0, lsl #22
    8f74:	1f0b0e00 	svcne	0x000b0e00
    8f78:	4f010000 	svcmi	0x00010000
    8f7c:	00057c0e 	andeq	r7, r5, lr, lsl #24
    8f80:	003a7600 	eorseq	r7, sl, r0, lsl #12
    8f84:	003a7000 	eorseq	r7, sl, r0
    8f88:	177b0e00 	ldrbne	r0, [fp, -r0, lsl #28]!
    8f8c:	50010000 	andpl	r0, r1, r0
    8f90:	0000970d 	andeq	r9, r0, sp, lsl #14
    8f94:	003aa500 	eorseq	sl, sl, r0, lsl #10
    8f98:	003a9f00 	eorseq	r9, sl, r0, lsl #30
    8f9c:	06ec0f00 	strbteq	r0, [ip], r0, lsl #30
    8fa0:	1fc00000 	svcne	0x00c00000
    8fa4:	c0071000 	andgt	r1, r7, r0
    8fa8:	c610001f 			; <UNDEFINED> instruction: 0xc610001f
    8fac:	0110001f 	tsteq	r0, pc, lsl r0
    8fb0:	065a0554 			; <UNDEFINED> instruction: 0x065a0554
    8fb4:	ff100000 			; <UNDEFINED> instruction: 0xff100000
    8fb8:	d0000006 	andle	r0, r0, r6
    8fbc:	ce00003a 	mcrgt	0, 0, r0, cr0, cr10, {1}
    8fc0:	1100003a 	tstne	r0, sl, lsr r0
    8fc4:	0000072a 	andeq	r0, r0, sl, lsr #14
    8fc8:	10001fc0 	andne	r1, r0, r0, asr #31
    8fcc:	001fc00a 	andseq	ip, pc, sl
    8fd0:	001fc410 	andseq	ip, pc, r0, lsl r4	; <UNPREDICTABLE>
    8fd4:	02560210 	subseq	r0, r6, #16, 4
    8fd8:	07391013 			; <UNDEFINED> instruction: 0x07391013
    8fdc:	3ae50000 	bcc	ff948fe4 <__RAM_segment_used_end__+0xc7848fe4>
    8fe0:	3ae30000 	bcc	ff8c8fe8 <__RAM_segment_used_end__+0xc77c8fe8>
    8fe4:	00000000 	andeq	r0, r0, r0
    8fe8:	00070d12 	andeq	r0, r7, r2, lsl sp
    8fec:	001fd000 	andseq	sp, pc, r0
    8ff0:	02c80110 	sbceq	r0, r8, #16, 2
    8ff4:	b4010000 	strlt	r0, [r1], #-0
    8ff8:	00067d05 	andeq	r7, r6, r5, lsl #26
    8ffc:	071c1300 	ldreq	r1, [ip, -r0, lsl #6]
    9000:	3afc0000 	bcc	fff09008 <__RAM_segment_used_end__+0xc7e09008>
    9004:	3af80000 	bcc	ffe0900c <__RAM_segment_used_end__+0xc7d0900c>
    9008:	0f000000 	svceq	0x00000000
    900c:	0000070d 	andeq	r0, r0, sp, lsl #14
    9010:	10001fe4 	andne	r1, r0, r4, ror #31
    9014:	001fe401 	andseq	lr, pc, r1, lsl #8
    9018:	001fea10 	andseq	lr, pc, r0, lsl sl	; <UNPREDICTABLE>
    901c:	156d0110 	strbne	r0, [sp, #-272]!	; 0xfffffef0
    9020:	000006a4 	andeq	r0, r0, r4, lsr #13
    9024:	00071c13 	andeq	r1, r7, r3, lsl ip
    9028:	003b1c00 	eorseq	r1, fp, r0, lsl #24
    902c:	003b1a00 	eorseq	r1, fp, r0, lsl #20
    9030:	ec140000 	ldc	0, cr0, [r4], {-0}
    9034:	14000006 	strne	r0, [r0], #-6
    9038:	01100020 	tsteq	r0, r0, lsr #32
    903c:	10002014 	andne	r2, r0, r4, lsl r0
    9040:	1000201a 	andne	r2, r0, sl, lsl r0
    9044:	10159401 	andsne	r9, r5, r1, lsl #8
    9048:	000006ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    904c:	00003b33 	andeq	r3, r0, r3, lsr fp
    9050:	00003b2f 	andeq	r3, r0, pc, lsr #22
    9054:	00072a11 	andeq	r2, r7, r1, lsl sl
    9058:	00201400 	eoreq	r1, r0, r0, lsl #8
    905c:	20140410 	andscs	r0, r4, r0, lsl r4
    9060:	20181000 	andscs	r1, r8, r0
    9064:	56021000 	strpl	r1, [r2], -r0
    9068:	39101302 	ldmdbcc	r0, {r1, r8, r9, ip}
    906c:	53000007 	movwpl	r0, #7
    9070:	5100003b 	tstpl	r0, fp, lsr r0
    9074:	0000003b 	andeq	r0, r0, fp, lsr r0
    9078:	18150000 	ldmdane	r5, {}	; <UNPREDICTABLE>
    907c:	0200000f 	andeq	r0, r0, #15
    9080:	01370252 	teqeq	r7, r2, asr r2
    9084:	0000008b 	andeq	r0, r0, fp, lsl #1
    9088:	00070d03 	andeq	r0, r7, r3, lsl #26
    908c:	0ea11600 	cdpeq	6, 10, cr1, cr1, cr0, {0}
    9090:	54020000 	strpl	r0, [r2], #-0
    9094:	008b0602 	addeq	r0, fp, r2, lsl #12
    9098:	17000000 	strne	r0, [r0, -r0]
    909c:	00000e8d 	andeq	r0, r0, sp, lsl #29
    90a0:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    90a4:	072a0301 	streq	r0, [sl, -r1, lsl #6]!
    90a8:	a1180000 	tstge	r8, r0
    90ac:	0200000e 	andeq	r0, r0, #14
    90b0:	8b500249 	blhi	14099dc <__RAM_SIZE+0x13099dc>
    90b4:	00000000 	andeq	r0, r0, r0
    90b8:	000eb619 	andeq	fp, lr, r9, lsl r6
    90bc:	02320200 	eorseq	r0, r2, #0, 4
    90c0:	008b0137 	addeq	r0, fp, r7, lsr r1
    90c4:	16030000 	strne	r0, [r3], -r0
    90c8:	00000ea5 	andeq	r0, r0, r5, lsr #29
    90cc:	06023402 	streq	r3, [r2], -r2, lsl #8
    90d0:	0000008b 	andeq	r0, r0, fp, lsl #1
    90d4:	06b80000 	ldrteq	r0, [r8], r0
    90d8:	00020000 	andeq	r0, r2, r0
    90dc:	00001937 	andeq	r1, r0, r7, lsr r9
    90e0:	003d0104 	eorseq	r0, sp, r4, lsl #2
    90e4:	190c0000 	stmdbne	ip, {}	; <UNPREDICTABLE>
    90e8:	4100001f 	tstmi	r0, pc, lsl r0
    90ec:	f0000006 			; <UNDEFINED> instruction: 0xf0000006
    90f0:	00000002 	andeq	r0, r0, r2
    90f4:	00000000 	andeq	r0, r0, r0
    90f8:	35000000 	strcc	r0, [r0, #-0]
    90fc:	02000033 	andeq	r0, r0, #51	; 0x33
    9100:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    9104:	04030000 	streq	r0, [r3], #-0
    9108:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    910c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    9110:	000004e8 	andeq	r0, r0, r8, ror #9
    9114:	23040802 	movwcs	r0, #18434	; 0x4802
    9118:	02000006 	andeq	r0, r0, #6
    911c:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    9120:	01020000 	mrseq	r0, (UNDEF: 2)
    9124:	00085008 	andeq	r5, r8, r8
    9128:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    912c:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    9130:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    9134:	02000009 	andeq	r0, r0, #9
    9138:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    913c:	04020000 	streq	r0, [r2], #-0
    9140:	00023407 	andeq	r3, r2, r7, lsl #8
    9144:	07080200 	streq	r0, [r8, -r0, lsl #4]
    9148:	0000022f 	andeq	r0, r0, pc, lsr #4
    914c:	01020404 	tsteq	r2, r4, lsl #8
    9150:	00085908 	andeq	r5, r8, r8, lsl #18
    9154:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    9158:	73020000 	movwvc	r0, #8192	; 0x2000
    915c:	00007831 	andeq	r7, r0, r1, lsr r8
    9160:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    9164:	76020000 	strvc	r0, [r2], -r0
    9168:	00002931 	andeq	r2, r0, r1, lsr r9
    916c:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    9170:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    9174:	00006831 	andeq	r6, r0, r1, lsr r8
    9178:	053b0600 	ldreq	r0, [fp, #-1536]!	; 0xfffffa00
    917c:	031c0000 	tsteq	ip, #0
    9180:	22100182 	andscs	r0, r0, #-2147483616	; 0x80000020
    9184:	07000001 	streq	r0, [r0, -r1]
    9188:	00000812 	andeq	r0, r0, r2, lsl r8
    918c:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    9190:	00000097 	muleq	r0, r7, r0
    9194:	07002302 	streq	r2, [r0, -r2, lsl #6]
    9198:	000003a0 	andeq	r0, r0, r0, lsr #7
    919c:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    91a0:	00000097 	muleq	r0, r7, r0
    91a4:	07042302 	streq	r2, [r4, -r2, lsl #6]
    91a8:	0000043d 	andeq	r0, r0, sp, lsr r4
    91ac:	1b018a03 	blne	6b9c0 <SYSTICK_CYCLES+0x42981>
    91b0:	0000012e 	andeq	r0, r0, lr, lsr #2
    91b4:	07082302 	streq	r2, [r8, -r2, lsl #6]
    91b8:	000001f2 	strdeq	r0, [r0], -r2
    91bc:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    91c0:	00000097 	muleq	r0, r7, r0
    91c4:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    91c8:	00000954 	andeq	r0, r0, r4, asr r9
    91cc:	1a019103 	bne	6d5e0 <SYSTICK_CYCLES+0x445a1>
    91d0:	00000134 	andeq	r0, r0, r4, lsr r1
    91d4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    91d8:	0000001b 	andeq	r0, r0, fp, lsl r0
    91dc:	1a019203 	bne	6d9f0 <SYSTICK_CYCLES+0x449b1>
    91e0:	00000134 	andeq	r0, r0, r4, lsr r1
    91e4:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    91e8:	000005ee 	andeq	r0, r0, lr, ror #11
    91ec:	1b019603 	blne	6ea00 <SYSTICK_CYCLES+0x459c1>
    91f0:	0000013a 	andeq	r0, r0, sl, lsr r1
    91f4:	00182302 	andseq	r2, r8, r2, lsl #6
    91f8:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    91fc:	97090000 	strls	r0, [r9, -r0]
    9200:	00000000 	andeq	r0, r0, r0
    9204:	0122040a 			; <UNDEFINED> instruction: 0x0122040a
    9208:	040a0000 	streq	r0, [sl], #-0
    920c:	000000a3 	andeq	r0, r0, r3, lsr #1
    9210:	0134040a 	teqeq	r4, sl, lsl #8
    9214:	2f0b0000 	svccs	0x000b0000
    9218:	03000006 	movweq	r0, #6
    921c:	a303019b 	movwge	r0, #12699	; 0x319b
    9220:	0a000000 	beq	9228 <_Min_Stack_Size+0x8228>
    9224:	00007f04 	andeq	r7, r0, r4, lsl #30
    9228:	034b0600 	movteq	r0, #46592	; 0xb600
    922c:	03d40000 	bicseq	r0, r4, #0
    9230:	671001d6 			; <UNDEFINED> instruction: 0x671001d6
    9234:	07000004 	streq	r0, [r0, -r4]
    9238:	00000911 	andeq	r0, r0, r1, lsl r9
    923c:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    9240:	00000097 	muleq	r0, r7, r0
    9244:	07002302 	streq	r2, [r0, -r2, lsl #6]
    9248:	00000784 	andeq	r0, r0, r4, lsl #15
    924c:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    9250:	00000097 	muleq	r0, r7, r0
    9254:	07042302 	streq	r2, [r4, -r2, lsl #6]
    9258:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    925c:	1a01df03 	bne	80e70 <SYSTICK_CYCLES+0x57e31>
    9260:	00000076 	andeq	r0, r0, r6, ror r0
    9264:	07082302 	streq	r2, [r8, -r2, lsl #6]
    9268:	000008fb 	strdeq	r0, [r0], -fp
    926c:	1a01e003 	bne	81280 <SYSTICK_CYCLES+0x58241>
    9270:	00000076 	andeq	r0, r0, r6, ror r0
    9274:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    9278:	00000411 	andeq	r0, r0, r1, lsl r4
    927c:	1a01e103 	bne	81690 <SYSTICK_CYCLES+0x58651>
    9280:	00000076 	andeq	r0, r0, r6, ror r0
    9284:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    9288:	0000093f 	andeq	r0, r0, pc, lsr r9
    928c:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    9290:	00000097 	muleq	r0, r7, r0
    9294:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    9298:	000021d1 	ldrdeq	r2, [r0], -r1
    929c:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    92a0:	00000097 	muleq	r0, r7, r0
    92a4:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    92a8:	0000060a 	andeq	r0, r0, sl, lsl #12
    92ac:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    92b0:	00000097 	muleq	r0, r7, r0
    92b4:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    92b8:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    92bc:	1a01e803 	bne	832d0 <SYSTICK_CYCLES+0x5a291>
    92c0:	00000467 	andeq	r0, r0, r7, ror #8
    92c4:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    92c8:	00000199 	muleq	r0, r9, r1
    92cc:	1a01e903 	bne	836e0 <SYSTICK_CYCLES+0x5a6a1>
    92d0:	00000467 	andeq	r0, r0, r7, ror #8
    92d4:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    92d8:	00000596 	muleq	r0, r6, r5
    92dc:	1a01f103 	bne	856f0 <SYSTICK_CYCLES+0x5c6b1>
    92e0:	0000014d 	andeq	r0, r0, sp, asr #2
    92e4:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    92e8:	000002d9 	ldrdeq	r0, [r0], -r9
    92ec:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    92f0:	0000008b 	andeq	r0, r0, fp, lsl #1
    92f4:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    92f8:	00000246 	andeq	r0, r0, r6, asr #4
    92fc:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    9300:	0000008b 	andeq	r0, r0, fp, lsl #1
    9304:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    9308:	00000173 	andeq	r0, r0, r3, ror r1
    930c:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    9310:	0000008b 	andeq	r0, r0, fp, lsl #1
    9314:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    9318:	00000730 	andeq	r0, r0, r0, lsr r7
    931c:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    9320:	0000008b 	andeq	r0, r0, fp, lsl #1
    9324:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    9328:	000000eb 	andeq	r0, r0, fp, ror #1
    932c:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    9330:	0000008b 	andeq	r0, r0, fp, lsl #1
    9334:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    9338:	0000035c 	andeq	r0, r0, ip, asr r3
    933c:	1b01fb03 	blne	87f50 <SYSTICK_CYCLES+0x5ef11>
    9340:	0000047e 	andeq	r0, r0, lr, ror r4
    9344:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    9348:	00000152 	andeq	r0, r0, r2, asr r1
    934c:	1b020303 	blne	89f60 <SYSTICK_CYCLES+0x60f21>
    9350:	0000012e 	andeq	r0, r0, lr, lsr #2
    9354:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    9358:	00000107 	andeq	r0, r0, r7, lsl #2
    935c:	19020403 	stmdbne	r2, {r0, r1, sl}
    9360:	00000097 	muleq	r0, r7, r0
    9364:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    9368:	0000033b 	andeq	r0, r0, fp, lsr r3
    936c:	19020803 	stmdbne	r2, {r0, r1, fp}
    9370:	00000140 	andeq	r0, r0, r0, asr #2
    9374:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    9378:	000002ec 	andeq	r0, r0, ip, ror #5
    937c:	1b020e03 	blne	8cb90 <SYSTICK_CYCLES+0x63b51>
    9380:	0000047e 	andeq	r0, r0, lr, ror r4
    9384:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    9388:	000005ce 	andeq	r0, r0, lr, asr #11
    938c:	1a020f03 	bne	8cfa0 <SYSTICK_CYCLES+0x63f61>
    9390:	00000076 	andeq	r0, r0, r6, ror r0
    9394:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    9398:	00000717 	andeq	r0, r0, r7, lsl r7
    939c:	1a021103 	bne	8d7b0 <SYSTICK_CYCLES+0x64771>
    93a0:	00000467 	andeq	r0, r0, r7, ror #8
    93a4:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    93a8:	00000212 	andeq	r0, r0, r2, lsl r2
    93ac:	1a021203 	bne	8dbc0 <SYSTICK_CYCLES+0x64b81>
    93b0:	00000467 	andeq	r0, r0, r7, ror #8
    93b4:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    93b8:	000006fa 	strdeq	r0, [r0], -sl
    93bc:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    93c0:	00000097 	muleq	r0, r7, r0
    93c4:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    93c8:	000003c6 	andeq	r0, r0, r6, asr #7
    93cc:	1a021403 	bne	8e3e0 <SYSTICK_CYCLES+0x653a1>
    93d0:	00000076 	andeq	r0, r0, r6, ror r0
    93d4:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    93d8:	00000554 	andeq	r0, r0, r4, asr r5
    93dc:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    93e0:	0000008b 	andeq	r0, r0, fp, lsl #1
    93e4:	01802303 	orreq	r2, r0, r3, lsl #6
    93e8:	0003e807 	andeq	lr, r3, r7, lsl #16
    93ec:	02160300 	andseq	r0, r6, #0, 6
    93f0:	00008b19 	andeq	r8, r0, r9, lsl fp
    93f4:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    93f8:	08e40701 	stmiaeq	r4!, {r0, r8, r9, sl}^
    93fc:	1f030000 	svcne	0x00030000
    9400:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    9404:	23030000 	movwcs	r0, #12288	; 0x3000
    9408:	d5070188 	strle	r0, [r7, #-392]	; 0xfffffe78
    940c:	03000007 	movweq	r0, #7
    9410:	671a0220 	ldrvs	r0, [sl, -r0, lsr #4]
    9414:	03000004 	movweq	r0, #4
    9418:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    941c:	000002c1 	andeq	r0, r0, r1, asr #5
    9420:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    9424:	0000008b 	andeq	r0, r0, fp, lsl #1
    9428:	01902303 	orrseq	r2, r0, r3, lsl #6
    942c:	00025607 	andeq	r5, r2, r7, lsl #12
    9430:	022f0300 	eoreq	r0, pc, #0, 6
    9434:	00008b19 	andeq	r8, r0, r9, lsl fp
    9438:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    943c:	03200701 			; <UNDEFINED> instruction: 0x03200701
    9440:	30030000 	andcc	r0, r3, r0
    9444:	008b1902 	addeq	r1, fp, r2, lsl #18
    9448:	23030000 	movwcs	r0, #12288	; 0x3000
    944c:	77070198 			; <UNDEFINED> instruction: 0x77070198
    9450:	03000002 	movweq	r0, #2
    9454:	8b190233 	blhi	649d28 <__RAM_SIZE+0x549d28>
    9458:	03000000 	movweq	r0, #0
    945c:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    9460:	00000000 	andeq	r0, r0, r0
    9464:	1a023503 	bne	96878 <SYSTICK_CYCLES+0x6d839>
    9468:	00000563 	andeq	r0, r0, r3, ror #10
    946c:	01a02303 	lsleq	r2, r3, #6
    9470:	001bb707 	andseq	fp, fp, r7, lsl #14
    9474:	023a0300 	eorseq	r0, sl, #0, 6
    9478:	00009719 	andeq	r9, r0, r9, lsl r7
    947c:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    9480:	1c770701 	ldclne	7, cr0, [r7], #-4
    9484:	3d030000 	stccc	0, cr0, [r3, #-0]
    9488:	00971902 	addseq	r1, r7, r2, lsl #18
    948c:	23030000 	movwcs	r0, #12288	; 0x3000
    9490:	300701a8 	andcc	r0, r7, r8, lsr #3
    9494:	0300001b 	movweq	r0, #27
    9498:	97190241 	ldrls	r0, [r9, -r1, asr #4]
    949c:	03000000 	movweq	r0, #0
    94a0:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    94a4:	00001d2e 	andeq	r1, r0, lr, lsr #26
    94a8:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    94ac:	00000097 	muleq	r0, r7, r0
    94b0:	01b02303 	lslseq	r2, r3, #6
    94b4:	001c4707 	andseq	r4, ip, r7, lsl #14
    94b8:	02480300 	subeq	r0, r8, #0, 6
    94bc:	00009719 	andeq	r9, r0, r9, lsl r7
    94c0:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    94c4:	07a80701 	streq	r0, [r8, r1, lsl #14]!
    94c8:	4c030000 	stcmi	0, cr0, [r3], {-0}
    94cc:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    94d0:	23030000 	movwcs	r0, #12288	; 0x3000
    94d4:	060701b8 			; <UNDEFINED> instruction: 0x060701b8
    94d8:	0300001d 	movweq	r0, #29
    94dc:	9719024f 	ldrls	r0, [r9, -pc, asr #4]
    94e0:	03000000 	movweq	r0, #0
    94e4:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    94e8:	00001b08 	andeq	r1, r0, r8, lsl #22
    94ec:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    94f0:	00000097 	muleq	r0, r7, r0
    94f4:	01c02303 	biceq	r2, r0, r3, lsl #6
    94f8:	001a8507 	andseq	r8, sl, r7, lsl #10
    94fc:	02550300 	subseq	r0, r5, #0, 6
    9500:	00009719 	andeq	r9, r0, r9, lsl r7
    9504:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    9508:	1bdb0701 	blne	ff6cb114 <__RAM_segment_used_end__+0xc75cb114>
    950c:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    9510:	00971902 	addseq	r1, r7, r2, lsl #18
    9514:	23030000 	movwcs	r0, #12288	; 0x3000
    9518:	a90701c8 	stmdbge	r7, {r3, r6, r7, r8}
    951c:	03000009 	movweq	r0, #9
    9520:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    9524:	03000000 	movweq	r0, #0
    9528:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    952c:	00000481 	andeq	r0, r0, r1, lsl #9
    9530:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    9534:	00000097 	muleq	r0, r7, r0
    9538:	01d02303 	bicseq	r2, r0, r3, lsl #6
    953c:	53040a00 	movwpl	r0, #18944	; 0x4a00
    9540:	08000001 	stmdaeq	r0, {r0}
    9544:	00047e01 	andeq	r7, r4, r1, lsl #28
    9548:	04670900 	strbteq	r0, [r7], #-2304	; 0xfffff700
    954c:	97090000 	strls	r0, [r9, -r0]
    9550:	00000000 	andeq	r0, r0, r0
    9554:	046d040a 	strbteq	r0, [sp], #-1034	; 0xfffffbf6
    9558:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    955c:	34000007 	strcc	r0, [r0], #-7
    9560:	10037e03 	andne	r7, r3, r3, lsl #28
    9564:	00000563 	andeq	r0, r0, r3, ror #10
    9568:	00018d07 	andeq	r8, r1, r7, lsl #26
    956c:	03820300 	orreq	r0, r2, #0, 6
    9570:	00009719 	andeq	r9, r0, r9, lsl r7
    9574:	00230200 	eoreq	r0, r3, r0, lsl #4
    9578:	00087c07 	andeq	r7, r8, r7, lsl #24
    957c:	03850300 	orreq	r0, r5, #0, 6
    9580:	00014d1a 	andeq	r4, r1, sl, lsl sp
    9584:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9588:	0006e107 	andeq	lr, r6, r7, lsl #2
    958c:	03880300 	orreq	r0, r8, #0, 6
    9590:	00008b19 	andeq	r8, r0, r9, lsl fp
    9594:	08230200 	stmdaeq	r3!, {r9}
    9598:	0004cb07 	andeq	ip, r4, r7, lsl #22
    959c:	038c0300 	orreq	r0, ip, #0, 6
    95a0:	0005761a 	andeq	r7, r5, sl, lsl r6
    95a4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    95a8:	00016207 	andeq	r6, r1, r7, lsl #4
    95ac:	03900300 	orrseq	r0, r0, #0, 6
    95b0:	00008b19 	andeq	r8, r0, r9, lsl fp
    95b4:	10230200 	eorne	r0, r3, r0, lsl #4
    95b8:	00012107 	andeq	r2, r1, r7, lsl #2
    95bc:	03930300 	orrseq	r0, r3, #0, 6
    95c0:	00008b19 	andeq	r8, r0, r9, lsl fp
    95c4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    95c8:	0008b207 	andeq	fp, r8, r7, lsl #4
    95cc:	03980300 	orrseq	r0, r8, #0, 6
    95d0:	0004671a 	andeq	r6, r4, sl, lsl r7
    95d4:	18230200 	stmdane	r3!, {r9}
    95d8:	0006c807 	andeq	ip, r6, r7, lsl #16
    95dc:	03990300 	orrseq	r0, r9, #0, 6
    95e0:	00008b19 	andeq	r8, r0, r9, lsl fp
    95e4:	1c230200 	sfmne	f0, 4, [r3], #-0
    95e8:	0005b807 	andeq	fp, r5, r7, lsl #16
    95ec:	039d0300 	orrseq	r0, sp, #0, 6
    95f0:	0005631a 	andeq	r6, r5, sl, lsl r3
    95f4:	20230200 	eorcs	r0, r3, r0, lsl #4
    95f8:	00068507 	andeq	r8, r6, r7, lsl #10
    95fc:	039e0300 	orrseq	r0, lr, #0, 6
    9600:	0005631a 	andeq	r6, r5, sl, lsl r3
    9604:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9608:	0001d007 	andeq	sp, r1, r7
    960c:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    9610:	00008b19 	andeq	r8, r0, r9, lsl fp
    9614:	28230200 	stmdacs	r3!, {r9}
    9618:	0009c507 	andeq	ip, r9, r7, lsl #10
    961c:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    9620:	0005631a 	andeq	r6, r5, sl, lsl r3
    9624:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9628:	00042507 	andeq	r2, r4, r7, lsl #10
    962c:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    9630:	0005631a 	andeq	r6, r5, sl, lsl r3
    9634:	30230200 	eorcc	r0, r3, r0, lsl #4
    9638:	84040a00 	strhi	r0, [r4], #-2560	; 0xfffff600
    963c:	0b000004 	bleq	9654 <_Min_Stack_Size+0x8654>
    9640:	000008d4 	ldrdeq	r0, [r0], -r4
    9644:	03028603 	movweq	r8, #9731	; 0x2603
    9648:	00000153 	andeq	r0, r0, r3, asr r1
    964c:	0569040a 	strbeq	r0, [r9, #-1034]!	; 0xfffffbf6
    9650:	01080000 	mrseq	r0, (UNDEF: 8)
    9654:	00000588 	andeq	r0, r0, r8, lsl #11
    9658:	00057609 	andeq	r7, r5, r9, lsl #12
    965c:	040a0000 	streq	r0, [sl], #-0
    9660:	0000057c 	andeq	r0, r0, ip, ror r5
    9664:	001b610c 	andseq	r6, fp, ip, lsl #2
    9668:	01c10400 	biceq	r0, r1, r0, lsl #8
    966c:	00058823 	andeq	r8, r5, r3, lsr #16
    9670:	0d010100 	stfeqs	f0, [r1, #-0]
    9674:	001f5d01 	andseq	r5, pc, r1, lsl #26
    9678:	07540100 	ldrbeq	r0, [r4, -r0, lsl #2]
    967c:	00204c01 	eoreq	r4, r0, r1, lsl #24
    9680:	00206810 	eoreq	r6, r0, r0, lsl r8
    9684:	003b6610 	eorseq	r6, fp, r0, lsl r6
    9688:	06600100 	strbteq	r0, [r0], -r0, lsl #2
    968c:	cf0e0000 	svcgt	0x000e0000
    9690:	01000019 	tsteq	r0, r9, lsl r0
    9694:	05763154 	ldrbeq	r3, [r6, #-340]!	; 0xfffffeac
    9698:	3b8a0000 	blcc	fe2896a0 <__RAM_segment_used_end__+0xc61896a0>
    969c:	3b860000 	blcc	fe1896a4 <__RAM_segment_used_end__+0xc60896a4>
    96a0:	e20f0000 	and	r0, pc, #0
    96a4:	0100000e 	tsteq	r0, lr
    96a8:	008b0157 	addeq	r0, fp, r7, asr r1
    96ac:	3bad0000 	blcc	feb496b4 <__RAM_segment_used_end__+0xc6a496b4>
    96b0:	3bab0000 	blcc	feac96b8 <__RAM_segment_used_end__+0xc69c96b8>
    96b4:	60100000 	andsvs	r0, r0, r0
    96b8:	4e000006 	cdpmi	0, 0, cr0, cr0, cr6, {0}
    96bc:	02100020 	andseq	r0, r0, #32
    96c0:	1000204e 	andne	r2, r0, lr, asr #32
    96c4:	10002054 	andne	r2, r0, r4, asr r0
    96c8:	2b055c01 	blcs	1606d4 <__RAM_SIZE+0x606d4>
    96cc:	11000006 	tstne	r0, r6
    96d0:	00000673 	andeq	r0, r0, r3, ror r6
    96d4:	00003bc2 	andeq	r3, r0, r2, asr #23
    96d8:	00003bc0 	andeq	r3, r0, r0, asr #23
    96dc:	00069e12 	andeq	r9, r6, r2, lsl lr
    96e0:	00204e00 	eoreq	r4, r0, r0, lsl #28
    96e4:	204e0510 	subcs	r0, lr, r0, lsl r5
    96e8:	20521000 	subscs	r1, r2, r0
    96ec:	56021000 	strpl	r1, [r2], -r0
    96f0:	ad111302 	ldcge	3, cr1, [r1, #-8]
    96f4:	d7000006 	strle	r0, [r0, -r6]
    96f8:	d500003b 	strle	r0, [r0, #-59]	; 0xffffffc5
    96fc:	0000003b 	andeq	r0, r0, fp, lsr r0
    9700:	06811000 	streq	r1, [r1], r0
    9704:	205c0000 	subscs	r0, ip, r0
    9708:	5c011000 	stcpl	0, cr1, [r1], {-0}
    970c:	60100020 	andsvs	r0, r0, r0, lsr #32
    9710:	01100020 	tsteq	r0, r0, lsr #32
    9714:	06520567 	ldrbeq	r0, [r2], -r7, ror #10
    9718:	90130000 	andsls	r0, r3, r0
    971c:	ec000006 	stc	0, cr0, [r0], {6}
    9720:	ea00003b 	b	9814 <_Min_Stack_Size+0x8814>
    9724:	0000003b 	andeq	r0, r0, fp, lsr r0
    9728:	00205c14 	eoreq	r5, r0, r4, lsl ip
    972c:	50011510 	andpl	r1, r1, r0, lsl r5
    9730:	5001f303 	andpl	pc, r1, r3, lsl #6
    9734:	18160000 	ldmdane	r6, {}	; <UNPREDICTABLE>
    9738:	0200000f 	andeq	r0, r0, #15
    973c:	01370252 	teqeq	r7, r2, asr r2
    9740:	0000008b 	andeq	r0, r0, fp, lsl #1
    9744:	00068103 	andeq	r8, r6, r3, lsl #2
    9748:	0ea11700 	cdpeq	7, 10, cr1, cr1, cr0, {0}
    974c:	54020000 	strpl	r0, [r2], #-0
    9750:	008b0602 	addeq	r0, fp, r2, lsl #12
    9754:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    9758:	00000e8d 	andeq	r0, r0, sp, lsl #29
    975c:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    9760:	069e0301 	ldreq	r0, [lr], r1, lsl #6
    9764:	a1190000 	tstge	r9, r0
    9768:	0200000e 	andeq	r0, r0, #14
    976c:	8b500249 	blhi	140a098 <__RAM_SIZE+0x130a098>
    9770:	00000000 	andeq	r0, r0, r0
    9774:	000eb61a 	andeq	fp, lr, sl, lsl r6
    9778:	02320200 	eorseq	r0, r2, #0, 4
    977c:	008b0137 	addeq	r0, fp, r7, lsr r1
    9780:	17030000 	strne	r0, [r3, -r0]
    9784:	00000ea5 	andeq	r0, r0, r5, lsr #29
    9788:	06023402 	streq	r3, [r2], -r2, lsl #8
    978c:	0000008b 	andeq	r0, r0, fp, lsl #1
    9790:	09380000 	ldmdbeq	r8!, {}	; <UNPREDICTABLE>
    9794:	00020000 	andeq	r0, r2, r0
    9798:	00001ace 	andeq	r1, r0, lr, asr #21
    979c:	003d0104 	eorseq	r0, sp, r4, lsl #2
    97a0:	df0c0000 	svcle	0x000c0000
    97a4:	4100001f 	tstmi	r0, pc, lsl r0
    97a8:	18000006 	stmdane	r0, {r1, r2}
    97ac:	00000003 	andeq	r0, r0, r3
    97b0:	00000000 	andeq	r0, r0, r0
    97b4:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    97b8:	02000034 	andeq	r0, r0, #52	; 0x34
    97bc:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    97c0:	04030000 	streq	r0, [r3], #-0
    97c4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    97c8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    97cc:	000004e8 	andeq	r0, r0, r8, ror #9
    97d0:	23040802 	movwcs	r0, #18434	; 0x4802
    97d4:	02000006 	andeq	r0, r0, #6
    97d8:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    97dc:	01020000 	mrseq	r0, (UNDEF: 2)
    97e0:	00085008 	andeq	r5, r8, r8
    97e4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    97e8:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    97ec:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    97f0:	02000009 	andeq	r0, r0, #9
    97f4:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    97f8:	04020000 	streq	r0, [r2], #-0
    97fc:	00023407 	andeq	r3, r2, r7, lsl #8
    9800:	07080200 	streq	r0, [r8, -r0, lsl #4]
    9804:	0000022f 	andeq	r0, r0, pc, lsr #4
    9808:	01020404 	tsteq	r2, r4, lsl #8
    980c:	00085908 	andeq	r5, r8, r8, lsl #18
    9810:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    9814:	73020000 	movwvc	r0, #8192	; 0x2000
    9818:	00007831 	andeq	r7, r0, r1, lsr r8
    981c:	08de0500 	ldmeq	lr, {r8, sl}^
    9820:	74020000 	strvc	r0, [r2], #-0
    9824:	00004c31 	andeq	r4, r0, r1, lsr ip
    9828:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    982c:	76020000 	strvc	r0, [r2], -r0
    9830:	00002931 	andeq	r2, r0, r1, lsr r9
    9834:	00970600 	addseq	r0, r7, r0, lsl #12
    9838:	11050000 	mrsne	r0, (UNDEF: 5)
    983c:	02000007 	andeq	r0, r0, #7
    9840:	00683178 	rsbeq	r3, r8, r8, ror r1
    9844:	3b070000 	blcc	1c984c <__RAM_SIZE+0xc984c>
    9848:	1c000005 	stcne	0, cr0, [r0], {5}
    984c:	10018203 	andne	r8, r1, r3, lsl #4
    9850:	00000133 	andeq	r0, r0, r3, lsr r1
    9854:	00081208 	andeq	r1, r8, r8, lsl #4
    9858:	01860300 	orreq	r0, r6, r0, lsl #6
    985c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9860:	00230200 	eoreq	r0, r3, r0, lsl #4
    9864:	0003a008 	andeq	sl, r3, r8
    9868:	01870300 	orreq	r0, r7, r0, lsl #6
    986c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9870:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9874:	00043d08 	andeq	r3, r4, r8, lsl #26
    9878:	018a0300 	orreq	r0, sl, r0, lsl #6
    987c:	00013f1b 	andeq	r3, r1, fp, lsl pc
    9880:	08230200 	stmdaeq	r3!, {r9}
    9884:	0001f208 	andeq	pc, r1, r8, lsl #4
    9888:	018b0300 	orreq	r0, fp, r0, lsl #6
    988c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9890:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9894:	00095408 	andeq	r5, r9, r8, lsl #8
    9898:	01910300 	orrseq	r0, r1, r0, lsl #6
    989c:	0001451a 	andeq	r4, r1, sl, lsl r5
    98a0:	10230200 	eorne	r0, r3, r0, lsl #4
    98a4:	00001b08 	andeq	r1, r0, r8, lsl #22
    98a8:	01920300 	orrseq	r0, r2, r0, lsl #6
    98ac:	0001451a 	andeq	r4, r1, sl, lsl r5
    98b0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    98b4:	0005ee08 	andeq	lr, r5, r8, lsl #28
    98b8:	01960300 	orrseq	r0, r6, r0, lsl #6
    98bc:	00014b1b 	andeq	r4, r1, fp, lsl fp
    98c0:	18230200 	stmdane	r3!, {r9}
    98c4:	3f010900 	svccc	0x00010900
    98c8:	0a000001 	beq	98d4 <_Min_Stack_Size+0x88d4>
    98cc:	000000a8 	andeq	r0, r0, r8, lsr #1
    98d0:	33040b00 	movwcc	r0, #19200	; 0x4b00
    98d4:	0b000001 	bleq	98e0 <_Min_Stack_Size+0x88e0>
    98d8:	0000b404 	andeq	fp, r0, r4, lsl #8
    98dc:	45040b00 	strmi	r0, [r4, #-2816]	; 0xfffff500
    98e0:	0c000001 	stceq	0, cr0, [r0], {1}
    98e4:	0000062f 	andeq	r0, r0, pc, lsr #12
    98e8:	03019b03 	movweq	r9, #6915	; 0x1b03
    98ec:	000000b4 	strheq	r0, [r0], -r4
    98f0:	007f040b 	rsbseq	r0, pc, fp, lsl #8
    98f4:	4b070000 	blmi	1c98fc <__RAM_SIZE+0xc98fc>
    98f8:	d4000003 	strle	r0, [r0], #-3
    98fc:	1001d603 	andne	sp, r1, r3, lsl #12
    9900:	00000478 	andeq	r0, r0, r8, ror r4
    9904:	00091108 	andeq	r1, r9, r8, lsl #2
    9908:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    990c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9910:	00230200 	eoreq	r0, r3, r0, lsl #4
    9914:	00078408 	andeq	r8, r7, r8, lsl #8
    9918:	01de0300 	bicseq	r0, lr, r0, lsl #6
    991c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9920:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9924:	0001bc08 	andeq	fp, r1, r8, lsl #24
    9928:	01df0300 	bicseq	r0, pc, r0, lsl #6
    992c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9930:	08230200 	stmdaeq	r3!, {r9}
    9934:	0008fb08 	andeq	pc, r8, r8, lsl #22
    9938:	01e00300 	mvneq	r0, r0, lsl #6
    993c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9940:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9944:	00041108 	andeq	r1, r4, r8, lsl #2
    9948:	01e10300 	mvneq	r0, r0, lsl #6
    994c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9950:	10230200 	eorne	r0, r3, r0, lsl #4
    9954:	00093f08 	andeq	r3, r9, r8, lsl #30
    9958:	01e20300 	mvneq	r0, r0, lsl #6
    995c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9960:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9964:	0021d108 	eoreq	sp, r1, r8, lsl #2
    9968:	01e30300 	mvneq	r0, r0, lsl #6
    996c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9970:	18230200 	stmdane	r3!, {r9}
    9974:	00060a08 	andeq	r0, r6, r8, lsl #20
    9978:	01e40300 	mvneq	r0, r0, lsl #6
    997c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9980:	1c230200 	sfmne	f0, 4, [r3], #-0
    9984:	00069f08 	andeq	r9, r6, r8, lsl #30
    9988:	01e80300 	mvneq	r0, r0, lsl #6
    998c:	0004781a 	andeq	r7, r4, sl, lsl r8
    9990:	20230200 	eorcs	r0, r3, r0, lsl #4
    9994:	00019908 	andeq	r9, r1, r8, lsl #18
    9998:	01e90300 	mvneq	r0, r0, lsl #6
    999c:	0004781a 	andeq	r7, r4, sl, lsl r8
    99a0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    99a4:	00059608 	andeq	r9, r5, r8, lsl #12
    99a8:	01f10300 	mvnseq	r0, r0, lsl #6
    99ac:	00015e1a 	andeq	r5, r1, sl, lsl lr
    99b0:	28230200 	stmdacs	r3!, {r9}
    99b4:	0002d908 	andeq	sp, r2, r8, lsl #18
    99b8:	01f20300 	mvnseq	r0, r0, lsl #6
    99bc:	00009719 	andeq	r9, r0, r9, lsl r7
    99c0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    99c4:	00024608 	andeq	r4, r2, r8, lsl #12
    99c8:	01f30300 	mvnseq	r0, r0, lsl #6
    99cc:	00009719 	andeq	r9, r0, r9, lsl r7
    99d0:	30230200 	eorcc	r0, r3, r0, lsl #4
    99d4:	00017308 	andeq	r7, r1, r8, lsl #6
    99d8:	01f40300 	mvnseq	r0, r0, lsl #6
    99dc:	00009719 	andeq	r9, r0, r9, lsl r7
    99e0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    99e4:	00073008 	andeq	r3, r7, r8
    99e8:	01f50300 	mvnseq	r0, r0, lsl #6
    99ec:	00009719 	andeq	r9, r0, r9, lsl r7
    99f0:	38230200 	stmdacc	r3!, {r9}
    99f4:	0000eb08 	andeq	lr, r0, r8, lsl #22
    99f8:	01f60300 	mvnseq	r0, r0, lsl #6
    99fc:	00009719 	andeq	r9, r0, r9, lsl r7
    9a00:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9a04:	00035c08 	andeq	r5, r3, r8, lsl #24
    9a08:	01fb0300 	mvnseq	r0, r0, lsl #6
    9a0c:	00048f1b 	andeq	r8, r4, fp, lsl pc
    9a10:	40230200 	eormi	r0, r3, r0, lsl #4
    9a14:	00015208 	andeq	r5, r1, r8, lsl #4
    9a18:	02030300 	andeq	r0, r3, #0, 6
    9a1c:	00013f1b 	andeq	r3, r1, fp, lsl pc
    9a20:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    9a24:	00010708 	andeq	r0, r1, r8, lsl #14
    9a28:	02040300 	andeq	r0, r4, #0, 6
    9a2c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9a30:	48230200 	stmdami	r3!, {r9}
    9a34:	00033b08 	andeq	r3, r3, r8, lsl #22
    9a38:	02080300 	andeq	r0, r8, #0, 6
    9a3c:	00015119 	andeq	r5, r1, r9, lsl r1
    9a40:	4c230200 	sfmmi	f0, 4, [r3], #-0
    9a44:	0002ec08 	andeq	lr, r2, r8, lsl #24
    9a48:	020e0300 	andeq	r0, lr, #0, 6
    9a4c:	00048f1b 	andeq	r8, r4, fp, lsl pc
    9a50:	68230200 	stmdavs	r3!, {r9}
    9a54:	0005ce08 	andeq	ip, r5, r8, lsl #28
    9a58:	020f0300 	andeq	r0, pc, #0, 6
    9a5c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9a60:	6c230200 	sfmvs	f0, 4, [r3], #-0
    9a64:	00071708 	andeq	r1, r7, r8, lsl #14
    9a68:	02110300 	andseq	r0, r1, #0, 6
    9a6c:	0004781a 	andeq	r7, r4, sl, lsl r8
    9a70:	70230200 	eorvc	r0, r3, r0, lsl #4
    9a74:	00021208 	andeq	r1, r2, r8, lsl #4
    9a78:	02120300 	andseq	r0, r2, #0, 6
    9a7c:	0004781a 	andeq	r7, r4, sl, lsl r8
    9a80:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    9a84:	0006fa08 	andeq	pc, r6, r8, lsl #20
    9a88:	02130300 	andseq	r0, r3, #0, 6
    9a8c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9a90:	78230200 	stmdavc	r3!, {r9}
    9a94:	0003c608 	andeq	ip, r3, r8, lsl #12
    9a98:	02140300 	andseq	r0, r4, #0, 6
    9a9c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9aa0:	7c230200 	sfmvc	f0, 4, [r3], #-0
    9aa4:	00055408 	andeq	r5, r5, r8, lsl #8
    9aa8:	02150300 	andseq	r0, r5, #0, 6
    9aac:	00009719 	andeq	r9, r0, r9, lsl r7
    9ab0:	80230300 	eorhi	r0, r3, r0, lsl #6
    9ab4:	03e80801 	mvneq	r0, #65536	; 0x10000
    9ab8:	16030000 	strne	r0, [r3], -r0
    9abc:	00971902 	addseq	r1, r7, r2, lsl #18
    9ac0:	23030000 	movwcs	r0, #12288	; 0x3000
    9ac4:	e4080184 	str	r0, [r8], #-388	; 0xfffffe7c
    9ac8:	03000008 	movweq	r0, #8
    9acc:	781a021f 	ldmdavc	sl, {r0, r1, r2, r3, r4, r9}
    9ad0:	03000004 	movweq	r0, #4
    9ad4:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
    9ad8:	000007d5 	ldrdeq	r0, [r0], -r5
    9adc:	1a022003 	bne	91af0 <SYSTICK_CYCLES+0x68ab1>
    9ae0:	00000478 	andeq	r0, r0, r8, ror r4
    9ae4:	018c2303 	orreq	r2, ip, r3, lsl #6
    9ae8:	0002c108 	andeq	ip, r2, r8, lsl #2
    9aec:	022e0300 	eoreq	r0, lr, #0, 6
    9af0:	00009719 	andeq	r9, r0, r9, lsl r7
    9af4:	90230300 	eorls	r0, r3, r0, lsl #6
    9af8:	02560801 	subseq	r0, r6, #65536	; 0x10000
    9afc:	2f030000 	svccs	0x00030000
    9b00:	00971902 	addseq	r1, r7, r2, lsl #18
    9b04:	23030000 	movwcs	r0, #12288	; 0x3000
    9b08:	20080194 	mulcs	r8, r4, r1
    9b0c:	03000003 	movweq	r0, #3
    9b10:	97190230 			; <UNDEFINED> instruction: 0x97190230
    9b14:	03000000 	movweq	r0, #0
    9b18:	08019823 	stmdaeq	r1, {r0, r1, r5, fp, ip, pc}
    9b1c:	00000277 	andeq	r0, r0, r7, ror r2
    9b20:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    9b24:	00000097 	muleq	r0, r7, r0
    9b28:	019c2303 	orrseq	r2, ip, r3, lsl #6
    9b2c:	00000008 	andeq	r0, r0, r8
    9b30:	02350300 	eorseq	r0, r5, #0, 6
    9b34:	0005741a 	andeq	r7, r5, sl, lsl r4
    9b38:	a0230300 	eorge	r0, r3, r0, lsl #6
    9b3c:	1bb70801 	blne	fedcbb48 <__RAM_segment_used_end__+0xc6ccbb48>
    9b40:	3a030000 	bcc	c9b48 <SYSTICK_CYCLES+0xa0b09>
    9b44:	00a81902 	adceq	r1, r8, r2, lsl #18
    9b48:	23030000 	movwcs	r0, #12288	; 0x3000
    9b4c:	770801a4 	strvc	r0, [r8, -r4, lsr #3]
    9b50:	0300001c 	movweq	r0, #28
    9b54:	a819023d 	ldmdage	r9, {r0, r2, r3, r4, r5, r9}
    9b58:	03000000 	movweq	r0, #0
    9b5c:	0801a823 	stmdaeq	r1, {r0, r1, r5, fp, sp, pc}
    9b60:	00001b30 	andeq	r1, r0, r0, lsr fp
    9b64:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    9b68:	000000a8 	andeq	r0, r0, r8, lsr #1
    9b6c:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    9b70:	001d2e08 	andseq	r2, sp, r8, lsl #28
    9b74:	02450300 	subeq	r0, r5, #0, 6
    9b78:	0000a819 	andeq	sl, r0, r9, lsl r8
    9b7c:	b0230300 	eorlt	r0, r3, r0, lsl #6
    9b80:	1c470801 	mcrrne	8, 0, r0, r7, cr1
    9b84:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    9b88:	00a81902 	adceq	r1, r8, r2, lsl #18
    9b8c:	23030000 	movwcs	r0, #12288	; 0x3000
    9b90:	a80801b4 	stmdage	r8, {r2, r4, r5, r7, r8}
    9b94:	03000007 	movweq	r0, #7
    9b98:	781a024c 	ldmdavc	sl, {r2, r3, r6, r9}
    9b9c:	03000004 	movweq	r0, #4
    9ba0:	0801b823 	stmdaeq	r1, {r0, r1, r5, fp, ip, sp, pc}
    9ba4:	00001d06 	andeq	r1, r0, r6, lsl #26
    9ba8:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    9bac:	000000a8 	andeq	r0, r0, r8, lsr #1
    9bb0:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    9bb4:	001b0808 	andseq	r0, fp, r8, lsl #16
    9bb8:	02520300 	subseq	r0, r2, #0, 6
    9bbc:	0000a819 	andeq	sl, r0, r9, lsl r8
    9bc0:	c0230300 	eorgt	r0, r3, r0, lsl #6
    9bc4:	1a850801 	bne	fe14bbd0 <__RAM_segment_used_end__+0xc604bbd0>
    9bc8:	55030000 	strpl	r0, [r3, #-0]
    9bcc:	00a81902 	adceq	r1, r8, r2, lsl #18
    9bd0:	23030000 	movwcs	r0, #12288	; 0x3000
    9bd4:	db0801c4 	blle	20a2ec <__RAM_SIZE+0x10a2ec>
    9bd8:	0300001b 	movweq	r0, #27
    9bdc:	a8190259 	ldmdage	r9, {r0, r3, r4, r6, r9}
    9be0:	03000000 	movweq	r0, #0
    9be4:	0801c823 	stmdaeq	r1, {r0, r1, r5, fp, lr, pc}
    9be8:	000009a9 	andeq	r0, r0, r9, lsr #19
    9bec:	1a025d03 	bne	a1000 <SYSTICK_CYCLES+0x77fc1>
    9bf0:	00000076 	andeq	r0, r0, r6, ror r0
    9bf4:	01cc2303 	biceq	r2, ip, r3, lsl #6
    9bf8:	00048108 	andeq	r8, r4, r8, lsl #2
    9bfc:	02780300 	rsbseq	r0, r8, #0, 6
    9c00:	0000a819 	andeq	sl, r0, r9, lsl r8
    9c04:	d0230300 	eorle	r0, r3, r0, lsl #6
    9c08:	040b0001 	streq	r0, [fp], #-1
    9c0c:	00000164 	andeq	r0, r0, r4, ror #2
    9c10:	048f0109 	streq	r0, [pc], #265	; 9c18 <_Min_Stack_Size+0x8c18>
    9c14:	780a0000 	stmdavc	sl, {}	; <UNPREDICTABLE>
    9c18:	0a000004 	beq	9c30 <_Min_Stack_Size+0x8c30>
    9c1c:	000000a8 	andeq	r0, r0, r8, lsr #1
    9c20:	7e040b00 	vmlavc.f64	d0, d4, d0
    9c24:	07000004 	streq	r0, [r0, -r4]
    9c28:	00000798 	muleq	r0, r8, r7
    9c2c:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    9c30:	00057410 	andeq	r7, r5, r0, lsl r4
    9c34:	018d0800 	orreq	r0, sp, r0, lsl #16
    9c38:	82030000 	andhi	r0, r3, #0
    9c3c:	00a81903 	adceq	r1, r8, r3, lsl #18
    9c40:	23020000 	movwcs	r0, #8192	; 0x2000
    9c44:	087c0800 	ldmdaeq	ip!, {fp}^
    9c48:	85030000 	strhi	r0, [r3, #-0]
    9c4c:	015e1a03 	cmpeq	lr, r3, lsl #20
    9c50:	23020000 	movwcs	r0, #8192	; 0x2000
    9c54:	06e10804 	strbteq	r0, [r1], r4, lsl #16
    9c58:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    9c5c:	00971903 	addseq	r1, r7, r3, lsl #18
    9c60:	23020000 	movwcs	r0, #8192	; 0x2000
    9c64:	04cb0808 	strbeq	r0, [fp], #2056	; 0x808
    9c68:	8c030000 	stchi	0, cr0, [r3], {-0}
    9c6c:	05871a03 	streq	r1, [r7, #2563]	; 0xa03
    9c70:	23020000 	movwcs	r0, #8192	; 0x2000
    9c74:	0162080c 	cmneq	r2, ip, lsl #16
    9c78:	90030000 	andls	r0, r3, r0
    9c7c:	00971903 	addseq	r1, r7, r3, lsl #18
    9c80:	23020000 	movwcs	r0, #8192	; 0x2000
    9c84:	01210810 			; <UNDEFINED> instruction: 0x01210810
    9c88:	93030000 	movwls	r0, #12288	; 0x3000
    9c8c:	00971903 	addseq	r1, r7, r3, lsl #18
    9c90:	23020000 	movwcs	r0, #8192	; 0x2000
    9c94:	08b20814 	ldmeq	r2!, {r2, r4, fp}
    9c98:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    9c9c:	04781a03 	ldrbteq	r1, [r8], #-2563	; 0xfffff5fd
    9ca0:	23020000 	movwcs	r0, #8192	; 0x2000
    9ca4:	06c80818 			; <UNDEFINED> instruction: 0x06c80818
    9ca8:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    9cac:	00971903 	addseq	r1, r7, r3, lsl #18
    9cb0:	23020000 	movwcs	r0, #8192	; 0x2000
    9cb4:	05b8081c 	ldreq	r0, [r8, #2076]!	; 0x81c
    9cb8:	9d030000 	stcls	0, cr0, [r3, #-0]
    9cbc:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    9cc0:	23020000 	movwcs	r0, #8192	; 0x2000
    9cc4:	06850820 	streq	r0, [r5], r0, lsr #16
    9cc8:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    9ccc:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    9cd0:	23020000 	movwcs	r0, #8192	; 0x2000
    9cd4:	01d00824 	bicseq	r0, r0, r4, lsr #16
    9cd8:	a2030000 	andge	r0, r3, #0
    9cdc:	00971903 	addseq	r1, r7, r3, lsl #18
    9ce0:	23020000 	movwcs	r0, #8192	; 0x2000
    9ce4:	09c50828 	stmibeq	r5, {r3, r5, fp}^
    9ce8:	a6030000 	strge	r0, [r3], -r0
    9cec:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    9cf0:	23020000 	movwcs	r0, #8192	; 0x2000
    9cf4:	0425082c 	strteq	r0, [r5], #-2092	; 0xfffff7d4
    9cf8:	a7030000 	strge	r0, [r3, -r0]
    9cfc:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    9d00:	23020000 	movwcs	r0, #8192	; 0x2000
    9d04:	040b0030 	streq	r0, [fp], #-48	; 0xffffffd0
    9d08:	00000495 	muleq	r0, r5, r4
    9d0c:	0008d40c 	andeq	sp, r8, ip, lsl #8
    9d10:	02860300 	addeq	r0, r6, #0, 6
    9d14:	00016403 	andeq	r6, r1, r3, lsl #8
    9d18:	7a040b00 	bvc	10c920 <__RAM_SIZE+0xc920>
    9d1c:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    9d20:	0000111b 	andeq	r1, r0, fp, lsl r1
    9d24:	21013904 	tstcs	r1, r4, lsl #18
    9d28:	00000587 	andeq	r0, r0, r7, lsl #11
    9d2c:	b20d0101 	andlt	r0, sp, #1073741824	; 0x40000000
    9d30:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    9d34:	87210140 	strhi	r0, [r1, -r0, asr #2]!
    9d38:	01000005 	tsteq	r0, r5
    9d3c:	11320d01 	teqne	r2, r1, lsl #26
    9d40:	8e040000 	cdphi	0, 0, cr0, cr4, cr0, {0}
    9d44:	00a32101 	adceq	r2, r3, r1, lsl #2
    9d48:	01010000 	mrseq	r0, (UNDEF: 1)
    9d4c:	001ac50d 	andseq	ip, sl, sp, lsl #10
    9d50:	02030400 	andeq	r0, r3, #0, 8
    9d54:	0000a821 	andeq	sl, r0, r1, lsr #16
    9d58:	0d010100 	stfeqs	f0, [r1, #-0]
    9d5c:	00001cd8 	ldrdeq	r1, [r0], -r8
    9d60:	21020904 	tstcs	r2, r4, lsl #18
    9d64:	000000a8 	andeq	r0, r0, r8, lsr #1
    9d68:	010e0101 	tsteq	lr, r1, lsl #2
    9d6c:	00001f7c 	andeq	r1, r0, ip, ror pc
    9d70:	01074801 	tsteq	r7, r1, lsl #16
    9d74:	10002068 	andne	r2, r0, r8, rrx
    9d78:	10002140 	andne	r2, r0, r0, asr #2
    9d7c:	00003bff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
    9d80:	00087501 	andeq	r7, r8, r1, lsl #10
    9d84:	20240f00 	eorcs	r0, r4, r0, lsl #30
    9d88:	4b010000 	blmi	49d90 <SYSTICK_CYCLES+0x20d51>
    9d8c:	0000a811 	andeq	sl, r0, r1, lsl r8
    9d90:	003c2f00 	eorseq	r2, ip, r0, lsl #30
    9d94:	003c2b00 	eorseq	r2, ip, r0, lsl #22
    9d98:	1fb00f00 	svcne	0x00b00f00
    9d9c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    9da0:	00058712 	andeq	r8, r5, r2, lsl r7
    9da4:	003c4f00 	eorseq	r4, ip, r0, lsl #30
    9da8:	003c4d00 	eorseq	r4, ip, r0, lsl #26
    9dac:	19cf0f00 	stmibne	pc, {r8, r9, sl, fp}^	; <UNPREDICTABLE>
    9db0:	4d010000 	stcmi	0, cr0, [r1, #-0]
    9db4:	00058712 	andeq	r8, r5, r2, lsl r7
    9db8:	003c6400 	eorseq	r6, ip, r0, lsl #8
    9dbc:	003c6200 	eorseq	r6, ip, r0, lsl #4
    9dc0:	03001000 	movweq	r1, #0
    9dc4:	07c70000 	strbeq	r0, [r7, r0]
    9dc8:	e20f0000 	and	r0, pc, #0
    9dcc:	0100000e 	tsteq	r0, lr
    9dd0:	00970d66 	addseq	r0, r7, r6, ror #26
    9dd4:	3c7f0000 	ldclcc	0, cr0, [pc], #-0	; 9ddc <_Min_Stack_Size+0x8ddc>
    9dd8:	3c770000 	ldclcc	0, cr0, [r7], #-0
    9ddc:	92110000 	andsls	r0, r1, #0
    9de0:	7e000008 	cdpvc	0, 0, cr0, cr0, cr8, {0}
    9de4:	02100020 	andseq	r0, r0, #32
    9de8:	1000207e 	andne	r2, r0, lr, ror r0
    9dec:	10002084 	andne	r2, r0, r4, lsl #1
    9df0:	970d6601 	strls	r6, [sp, -r1, lsl #12]
    9df4:	12000006 	andne	r0, r0, #6
    9df8:	000008a5 	andeq	r0, r0, r5, lsr #17
    9dfc:	00003cb9 			; <UNDEFINED> instruction: 0x00003cb9
    9e00:	00003cb3 			; <UNDEFINED> instruction: 0x00003cb3
    9e04:	0008db13 	andeq	sp, r8, r3, lsl fp
    9e08:	00207e00 	eoreq	r7, r0, r0, lsl #28
    9e0c:	207e0510 	rsbscs	r0, lr, r0, lsl r5
    9e10:	20821000 	addcs	r1, r2, r0
    9e14:	56021000 	strpl	r1, [r2], -r0
    9e18:	ee121302 	cdp	3, 1, cr1, cr2, cr2, {0}
    9e1c:	e4000008 	str	r0, [r0], #-8
    9e20:	e200003c 	and	r0, r0, #60	; 0x3c
    9e24:	0000003c 	andeq	r0, r0, ip, lsr r0
    9e28:	08b31100 	ldmeq	r3!, {r8, ip}
    9e2c:	208e0000 	addcs	r0, lr, r0
    9e30:	8e011000 	cdphi	0, 0, cr1, cr1, cr0, {0}
    9e34:	92100020 	andsls	r0, r0, #32
    9e38:	01100020 	tsteq	r0, r0, lsr #32
    9e3c:	06be0d66 	ldrteq	r0, [lr], r6, ror #26
    9e40:	c2140000 	andsgt	r0, r4, #0
    9e44:	f9000008 			; <UNDEFINED> instruction: 0xf9000008
    9e48:	f700003c 			; <UNDEFINED> instruction: 0xf700003c
    9e4c:	0000003c 	andeq	r0, r0, ip, lsr r0
    9e50:	0008b311 	andeq	fp, r8, r1, lsl r3
    9e54:	0020e000 	eoreq	lr, r0, r0
    9e58:	20e00110 	rsccs	r0, r0, r0, lsl r1
    9e5c:	20e41000 	rsccs	r1, r4, r0
    9e60:	66011000 	strvs	r1, [r1], -r0
    9e64:	0006e50d 	andeq	lr, r6, sp, lsl #10
    9e68:	08c21400 	stmiaeq	r2, {sl, ip}^
    9e6c:	3d0e0000 	stccc	0, cr0, [lr, #-0]
    9e70:	3d0c0000 	stccc	0, cr0, [ip, #-0]
    9e74:	11000000 	mrsne	r0, (UNDEF: 0)
    9e78:	00000892 	muleq	r0, r2, r8
    9e7c:	100020ea 	andne	r2, r0, sl, ror #1
    9e80:	0020ea01 	eoreq	lr, r0, r1, lsl #20
    9e84:	0020f010 	eoreq	pc, r0, r0, lsl r0	; <UNPREDICTABLE>
    9e88:	0d660110 	stfeqe	f0, [r6, #-64]!	; 0xffffffc0
    9e8c:	00000730 	andeq	r0, r0, r0, lsr r7
    9e90:	0008a512 	andeq	sl, r8, r2, lsl r5
    9e94:	003d2300 	eorseq	r2, sp, r0, lsl #6
    9e98:	003d2100 	eorseq	r2, sp, r0, lsl #2
    9e9c:	08db1300 	ldmeq	fp, {r8, r9, ip}^
    9ea0:	20ea0000 	rsccs	r0, sl, r0
    9ea4:	ea041000 	b	10deac <__RAM_SIZE+0xdeac>
    9ea8:	ee100020 	cdp	0, 1, cr0, cr0, cr0, {1}
    9eac:	02100020 	andseq	r0, r0, #32
    9eb0:	12130256 	andsne	r0, r3, #1610612741	; 0x60000005
    9eb4:	000008ee 	andeq	r0, r0, lr, ror #17
    9eb8:	00003d38 	andeq	r3, r0, r8, lsr sp
    9ebc:	00003d36 	andeq	r3, r0, r6, lsr sp
    9ec0:	b3110000 	tstlt	r1, #0
    9ec4:	fe000008 	cdp2	0, 0, cr0, cr0, cr8, {0}
    9ec8:	01100020 	tsteq	r0, r0, lsr #32
    9ecc:	100020fe 	strdne	r2, [r0], -lr
    9ed0:	10002102 	andne	r2, r0, r2, lsl #2
    9ed4:	570d6601 	strpl	r6, [sp, -r1, lsl #12]
    9ed8:	14000007 	strne	r0, [r0], #-7
    9edc:	000008c2 	andeq	r0, r0, r2, asr #17
    9ee0:	00003d4d 	andeq	r3, r0, sp, asr #26
    9ee4:	00003d4b 	andeq	r3, r0, fp, asr #26
    9ee8:	08921100 	ldmeq	r2, {r8, ip}
    9eec:	21080000 	mrscs	r0, (UNDEF: 8)
    9ef0:	08011000 	stmdaeq	r1, {ip}
    9ef4:	10100021 	andsne	r0, r0, r1, lsr #32
    9ef8:	01100021 	tsteq	r0, r1, lsr #32
    9efc:	07a20d66 	streq	r0, [r2, r6, ror #26]!
    9f00:	a5120000 	ldrge	r0, [r2, #-0]
    9f04:	62000008 	andvs	r0, r0, #8
    9f08:	6000003d 	andvs	r0, r0, sp, lsr r0
    9f0c:	1300003d 	movwne	r0, #61	; 0x3d
    9f10:	000008db 	ldrdeq	r0, [r0], -fp
    9f14:	10002108 	andne	r2, r0, r8, lsl #2
    9f18:	00210804 	eoreq	r0, r1, r4, lsl #16
    9f1c:	00210c10 	eoreq	r0, r1, r0, lsl ip
    9f20:	02560210 	subseq	r0, r6, #16, 4
    9f24:	08ee1213 	stmiaeq	lr!, {r0, r1, r4, r9, ip}^
    9f28:	3d770000 	ldclcc	0, cr0, [r7, #-0]
    9f2c:	3d750000 	ldclcc	0, cr0, [r5, #-0]
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	0020ea15 	eoreq	lr, r0, r5, lsl sl
    9f38:	00091d10 	andeq	r1, r9, r0, lsl sp
    9f3c:	0007b600 	andeq	fp, r7, r0, lsl #12
    9f40:	50011600 	andpl	r1, r1, r0, lsl #12
    9f44:	00007402 	andeq	r7, r0, r2, lsl #8
    9f48:	00210817 	eoreq	r0, r1, r7, lsl r8
    9f4c:	00092c10 	andeq	r2, r9, r0, lsl ip
    9f50:	50011600 	andpl	r1, r1, r0, lsl #12
    9f54:	00007402 	andeq	r7, r0, r2, lsl #8
    9f58:	08751800 	ldmdaeq	r5!, {fp, ip}^
    9f5c:	209e0000 	addscs	r0, lr, r0
    9f60:	9e011000 	cdpls	0, 0, cr1, cr1, cr0, {0}
    9f64:	ba100020 	blt	409fec <__RAM_SIZE+0x309fec>
    9f68:	01100020 	tsteq	r0, r0, lsr #32
    9f6c:	84120d7c 	ldrhi	r0, [r2], #-3452	; 0xfffff284
    9f70:	8c000008 	stchi	0, cr0, [r0], {8}
    9f74:	8a00003d 	bhi	a070 <_Min_Stack_Size+0x9070>
    9f78:	1900003d 	stmdbne	r0, {r0, r2, r3, r4, r5}
    9f7c:	000008fc 	strdeq	r0, [r0], -ip
    9f80:	100020aa 	andne	r2, r0, sl, lsr #1
    9f84:	0020aa01 	eoreq	sl, r0, r1, lsl #20
    9f88:	0020ae10 	eoreq	sl, r0, r0, lsl lr
    9f8c:	02660210 	rsbeq	r0, r6, #16, 4
    9f90:	00081109 	andeq	r1, r8, r9, lsl #2
    9f94:	090f1200 	stmdbeq	pc, {r9, ip}	; <UNPREDICTABLE>
    9f98:	3da10000 	stccc	0, cr0, [r1]
    9f9c:	3d9f0000 	ldccc	0, cr0, [pc]	; 9fa4 <_Min_Stack_Size+0x8fa4>
    9fa0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    9fa4:	000008db 	ldrdeq	r0, [r0], -fp
    9fa8:	100020b0 	strhne	r2, [r0], -r0
    9fac:	0020b001 	eoreq	fp, r0, r1
    9fb0:	0020b410 	eoreq	fp, r0, r0, lsl r4
    9fb4:	02680210 	rsbeq	r0, r8, #16, 4
    9fb8:	0008391a 	andeq	r3, r8, sl, lsl r9
    9fbc:	08ee1200 	stmiaeq	lr!, {r9, ip}^
    9fc0:	3db60000 	ldccc	0, cr0, [r6]
    9fc4:	3db40000 	ldccc	0, cr0, [r4]
    9fc8:	1a000000 	bne	9fd0 <_Min_Stack_Size+0x8fd0>
    9fcc:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    9fd0:	100020b4 	strhne	r2, [r0], -r4
    9fd4:	0020b403 	eoreq	fp, r0, r3, lsl #8
    9fd8:	0020b610 	eoreq	fp, r0, r0, lsl r6
    9fdc:	026c0210 	rsbeq	r0, ip, #16, 4
    9fe0:	08b31309 	ldmeq	r3!, {r0, r3, r8, r9, ip}
    9fe4:	20b60000 	adcscs	r0, r6, r0
    9fe8:	b6011000 	strlt	r1, [r1], -r0
    9fec:	ba100020 	blt	40a074 <__RAM_SIZE+0x30a074>
    9ff0:	02100020 	andseq	r0, r0, #32
    9ff4:	1409026e 	strne	r0, [r9], #-622	; 0xfffffd92
    9ff8:	000008c2 	andeq	r0, r0, r2, asr #17
    9ffc:	00003dcb 	andeq	r3, r0, fp, asr #27
    a000:	00003dc9 	andeq	r3, r0, r9, asr #27
    a004:	1b000000 	blne	a00c <_Min_Stack_Size+0x900c>
    a008:	00001fbf 			; <UNDEFINED> instruction: 0x00001fbf
    a00c:	37026002 	strcc	r6, [r2, -r2]
    a010:	08920301 	ldmeq	r2, {r0, r8, r9}
    a014:	e21c0000 	ands	r0, ip, #0
    a018:	0200000e 	andeq	r0, r0, #14
    a01c:	97060262 	strls	r0, [r6, -r2, ror #4]
    a020:	00000000 	andeq	r0, r0, r0
    a024:	000f181d 	andeq	r1, pc, sp, lsl r8	; <UNPREDICTABLE>
    a028:	02520200 	subseq	r0, r2, #0, 4
    a02c:	00970137 	addseq	r0, r7, r7, lsr r1
    a030:	b3030000 	movwlt	r0, #12288	; 0x3000
    a034:	1c000008 	stcne	0, cr0, [r0], {8}
    a038:	00000ea1 	andeq	r0, r0, r1, lsr #29
    a03c:	06025402 	streq	r5, [r2], -r2, lsl #8
    a040:	00000097 	muleq	r0, r7, r0
    a044:	0e8d1b00 	vdiveq.f64	d1, d13, d0
    a048:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    a04c:	03013702 	movweq	r3, #5890	; 0x1702
    a050:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a054:	000ea11e 	andeq	sl, lr, lr, lsl r1
    a058:	02490200 	subeq	r0, r9, #0, 4
    a05c:	00009750 	andeq	r9, r0, r0, asr r7
    a060:	9c1f0000 	ldcls	0, cr0, [pc], {-0}
    a064:	0200001f 	andeq	r0, r0, #31
    a068:	01370243 	teqeq	r7, r3, asr #4
    a06c:	0eb61d03 	cdpeq	13, 11, cr1, cr6, cr3, {0}
    a070:	32020000 	andcc	r0, r2, #0
    a074:	97013702 	strls	r3, [r1, -r2, lsl #14]
    a078:	03000000 	movweq	r0, #0
    a07c:	000008fc 	strdeq	r0, [r0], -ip
    a080:	000ea51c 	andeq	sl, lr, ip, lsl r5
    a084:	02340200 	eorseq	r0, r4, #0, 4
    a088:	00009706 	andeq	r9, r0, r6, lsl #14
    a08c:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    a090:	02000019 	andeq	r0, r0, #25
    a094:	013701fa 	teqeq	r7, sl	; <illegal shifter operand>
    a098:	00000097 	muleq	r0, r7, r0
    a09c:	00091d03 	andeq	r1, r9, r3, lsl #26
    a0a0:	1a791c00 	bne	1e510a8 <__RAM_SIZE+0x1d510a8>
    a0a4:	fc020000 	stc2	0, cr0, [r2], {-0}
    a0a8:	00970601 	addseq	r0, r7, r1, lsl #12
    a0ac:	20000000 	andcs	r0, r0, r0
    a0b0:	1f5d0101 	svcne	0x005d0101
    a0b4:	1f5d0000 	svcne	0x005d0000
    a0b8:	1b040000 	blne	10a0c0 <__RAM_SIZE+0xa0c0>
    a0bc:	01200d01 			; <UNDEFINED> instruction: 0x01200d01
    a0c0:	001eb401 	andseq	fp, lr, r1, lsl #8
    a0c4:	001eb400 	andseq	fp, lr, r0, lsl #8
    a0c8:	01180400 	tsteq	r8, r0, lsl #8
    a0cc:	0fbe000d 	svceq	0x00be000d
    a0d0:	00020000 	andeq	r0, r2, r0
    a0d4:	00001cc6 	andeq	r1, r0, r6, asr #25
    a0d8:	003d0104 	eorseq	r0, sp, r4, lsl #2
    a0dc:	870c0000 	strhi	r0, [ip, -r0]
    a0e0:	41000020 	tstmi	r0, r0, lsr #32
    a0e4:	70000006 	andvc	r0, r0, r6
    a0e8:	00000003 	andeq	r0, r0, r3
    a0ec:	00000000 	andeq	r0, r0, r0
    a0f0:	31000000 	mrscc	r0, (UNDEF: 0)
    a0f4:	02000037 	andeq	r0, r0, #55	; 0x37
    a0f8:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    a0fc:	04030000 	streq	r0, [r3], #-0
    a100:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    a104:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    a108:	000004e8 	andeq	r0, r0, r8, ror #9
    a10c:	23040802 	movwcs	r0, #18434	; 0x4802
    a110:	02000006 	andeq	r0, r0, #6
    a114:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
    a118:	01020000 	mrseq	r0, (UNDEF: 2)
    a11c:	00085008 	andeq	r5, r8, r8
    a120:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    a124:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    a128:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
    a12c:	02000009 	andeq	r0, r0, #9
    a130:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    a134:	04020000 	streq	r0, [r2], #-0
    a138:	00023407 	andeq	r3, r2, r7, lsl #8
    a13c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    a140:	0000022f 	andeq	r0, r0, pc, lsr #4
    a144:	01020404 	tsteq	r2, r4, lsl #8
    a148:	00085908 	andeq	r5, r8, r8, lsl #18
    a14c:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
    a150:	73020000 	movwvc	r0, #8192	; 0x2000
    a154:	00007831 	andeq	r7, r0, r1, lsr r8
    a158:	08de0500 	ldmeq	lr, {r8, sl}^
    a15c:	74020000 	strvc	r0, [r2], #-0
    a160:	00004c31 	andeq	r4, r0, r1, lsr ip
    a164:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
    a168:	76020000 	strvc	r0, [r2], -r0
    a16c:	00002931 	andeq	r2, r0, r1, lsr r9
    a170:	00970600 	addseq	r0, r7, r0, lsl #12
    a174:	11050000 	mrsne	r0, (UNDEF: 5)
    a178:	02000007 	andeq	r0, r0, #7
    a17c:	00683178 	rsbeq	r3, r8, r8, ror r1
    a180:	a8060000 	stmdage	r6, {}	; <UNPREDICTABLE>
    a184:	07000000 	streq	r0, [r0, -r0]
    a188:	0000053b 	andeq	r0, r0, fp, lsr r5
    a18c:	0182031c 	orreq	r0, r2, ip, lsl r3
    a190:	00013810 	andeq	r3, r1, r0, lsl r8
    a194:	08120800 	ldmdaeq	r2, {fp}
    a198:	86030000 	strhi	r0, [r3], -r0
    a19c:	00a81901 	adceq	r1, r8, r1, lsl #18
    a1a0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1a4:	03a00800 	moveq	r0, #0, 16
    a1a8:	87030000 	strhi	r0, [r3, -r0]
    a1ac:	00a81901 	adceq	r1, r8, r1, lsl #18
    a1b0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1b4:	043d0804 	ldrteq	r0, [sp], #-2052	; 0xfffff7fc
    a1b8:	8a030000 	bhi	ca1c0 <SYSTICK_CYCLES+0xa1181>
    a1bc:	01441b01 	cmpeq	r4, r1, lsl #22
    a1c0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1c4:	01f20808 	mvnseq	r0, r8, lsl #16
    a1c8:	8b030000 	blhi	ca1d0 <SYSTICK_CYCLES+0xa1191>
    a1cc:	00a81901 	adceq	r1, r8, r1, lsl #18
    a1d0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1d4:	0954080c 	ldmdbeq	r4, {r2, r3, fp}^
    a1d8:	91030000 	mrsls	r0, (UNDEF: 3)
    a1dc:	014a1a01 	cmpeq	sl, r1, lsl #20
    a1e0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1e4:	001b0810 	andseq	r0, fp, r0, lsl r8
    a1e8:	92030000 	andls	r0, r3, #0
    a1ec:	014a1a01 	cmpeq	sl, r1, lsl #20
    a1f0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1f4:	05ee0814 	strbeq	r0, [lr, #2068]!	; 0x814
    a1f8:	96030000 	strls	r0, [r3], -r0
    a1fc:	01501b01 	cmpeq	r0, r1, lsl #22
    a200:	23020000 	movwcs	r0, #8192	; 0x2000
    a204:	01090018 	tsteq	r9, r8, lsl r0
    a208:	00000144 	andeq	r0, r0, r4, asr #2
    a20c:	0000a80a 	andeq	sl, r0, sl, lsl #16
    a210:	040b0000 	streq	r0, [fp], #-0
    a214:	00000138 	andeq	r0, r0, r8, lsr r1
    a218:	00b9040b 	adcseq	r0, r9, fp, lsl #8
    a21c:	040b0000 	streq	r0, [fp], #-0
    a220:	0000014a 	andeq	r0, r0, sl, asr #2
    a224:	00062f0c 	andeq	r2, r6, ip, lsl #30
    a228:	019b0300 	orrseq	r0, fp, r0, lsl #6
    a22c:	0000b903 	andeq	fp, r0, r3, lsl #18
    a230:	7f040b00 	svcvc	0x00040b00
    a234:	07000000 	streq	r0, [r0, -r0]
    a238:	0000034b 	andeq	r0, r0, fp, asr #6
    a23c:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
    a240:	00047d10 	andeq	r7, r4, r0, lsl sp
    a244:	09110800 	ldmdbeq	r1, {fp}
    a248:	dd030000 	stcle	0, cr0, [r3, #-0]
    a24c:	00a81901 	adceq	r1, r8, r1, lsl #18
    a250:	23020000 	movwcs	r0, #8192	; 0x2000
    a254:	07840800 	streq	r0, [r4, r0, lsl #16]
    a258:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    a25c:	00a81901 	adceq	r1, r8, r1, lsl #18
    a260:	23020000 	movwcs	r0, #8192	; 0x2000
    a264:	01bc0804 			; <UNDEFINED> instruction: 0x01bc0804
    a268:	df030000 	svcle	0x00030000
    a26c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    a270:	23020000 	movwcs	r0, #8192	; 0x2000
    a274:	08fb0808 	ldmeq	fp!, {r3, fp}^
    a278:	e0030000 	and	r0, r3, r0
    a27c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    a280:	23020000 	movwcs	r0, #8192	; 0x2000
    a284:	0411080c 	ldreq	r0, [r1], #-2060	; 0xfffff7f4
    a288:	e1030000 	mrs	r0, (UNDEF: 3)
    a28c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    a290:	23020000 	movwcs	r0, #8192	; 0x2000
    a294:	093f0810 	ldmdbeq	pc!, {r4, fp}	; <UNPREDICTABLE>
    a298:	e2030000 	and	r0, r3, #0
    a29c:	00a81901 	adceq	r1, r8, r1, lsl #18
    a2a0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2a4:	21d10814 	bicscs	r0, r1, r4, lsl r8
    a2a8:	e3030000 	movw	r0, #12288	; 0x3000
    a2ac:	00a81901 	adceq	r1, r8, r1, lsl #18
    a2b0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2b4:	060a0818 			; <UNDEFINED> instruction: 0x060a0818
    a2b8:	e4030000 	str	r0, [r3], #-0
    a2bc:	00a81901 	adceq	r1, r8, r1, lsl #18
    a2c0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2c4:	069f081c 			; <UNDEFINED> instruction: 0x069f081c
    a2c8:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    a2cc:	047d1a01 	ldrbteq	r1, [sp], #-2561	; 0xfffff5ff
    a2d0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2d4:	01990820 	orrseq	r0, r9, r0, lsr #16
    a2d8:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    a2dc:	047d1a01 	ldrbteq	r1, [sp], #-2561	; 0xfffff5ff
    a2e0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2e4:	05960824 	ldreq	r0, [r6, #2084]	; 0x824
    a2e8:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    a2ec:	01631a01 	cmneq	r3, r1, lsl #20
    a2f0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2f4:	02d90828 	sbcseq	r0, r9, #40, 16	; 0x280000
    a2f8:	f2030000 	vhadd.s8	d0, d3, d0
    a2fc:	00971901 	addseq	r1, r7, r1, lsl #18
    a300:	23020000 	movwcs	r0, #8192	; 0x2000
    a304:	0246082c 	subeq	r0, r6, #44, 16	; 0x2c0000
    a308:	f3030000 	vhadd.u8	d0, d3, d0
    a30c:	00971901 	addseq	r1, r7, r1, lsl #18
    a310:	23020000 	movwcs	r0, #8192	; 0x2000
    a314:	01730830 	cmneq	r3, r0, lsr r8
    a318:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    a31c:	00971901 	addseq	r1, r7, r1, lsl #18
    a320:	23020000 	movwcs	r0, #8192	; 0x2000
    a324:	07300834 			; <UNDEFINED> instruction: 0x07300834
    a328:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    a32c:	00971901 	addseq	r1, r7, r1, lsl #18
    a330:	23020000 	movwcs	r0, #8192	; 0x2000
    a334:	00eb0838 	rsceq	r0, fp, r8, lsr r8
    a338:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    a33c:	00971901 	addseq	r1, r7, r1, lsl #18
    a340:	23020000 	movwcs	r0, #8192	; 0x2000
    a344:	035c083c 	cmpeq	ip, #60, 16	; 0x3c0000
    a348:	fb030000 	blx	ca352 <SYSTICK_CYCLES+0xa1313>
    a34c:	04941b01 	ldreq	r1, [r4], #2817	; 0xb01
    a350:	23020000 	movwcs	r0, #8192	; 0x2000
    a354:	01520840 	cmpeq	r2, r0, asr #16
    a358:	03030000 	movweq	r0, #12288	; 0x3000
    a35c:	01441b02 	cmpeq	r4, r2, lsl #22
    a360:	23020000 	movwcs	r0, #8192	; 0x2000
    a364:	01070844 	tsteq	r7, r4, asr #16
    a368:	04030000 	streq	r0, [r3], #-0
    a36c:	00a81902 	adceq	r1, r8, r2, lsl #18
    a370:	23020000 	movwcs	r0, #8192	; 0x2000
    a374:	033b0848 	teqeq	fp, #72, 16	; 0x480000
    a378:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    a37c:	01561902 	cmpeq	r6, r2, lsl #18
    a380:	23020000 	movwcs	r0, #8192	; 0x2000
    a384:	02ec084c 	rsceq	r0, ip, #76, 16	; 0x4c0000
    a388:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    a38c:	04941b02 	ldreq	r1, [r4], #2818	; 0xb02
    a390:	23020000 	movwcs	r0, #8192	; 0x2000
    a394:	05ce0868 	strbeq	r0, [lr, #2152]	; 0x868
    a398:	0f030000 	svceq	0x00030000
    a39c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    a3a0:	23020000 	movwcs	r0, #8192	; 0x2000
    a3a4:	0717086c 	ldreq	r0, [r7, -ip, ror #16]
    a3a8:	11030000 	mrsne	r0, (UNDEF: 3)
    a3ac:	047d1a02 	ldrbteq	r1, [sp], #-2562	; 0xfffff5fe
    a3b0:	23020000 	movwcs	r0, #8192	; 0x2000
    a3b4:	02120870 	andseq	r0, r2, #112, 16	; 0x700000
    a3b8:	12030000 	andne	r0, r3, #0
    a3bc:	047d1a02 	ldrbteq	r1, [sp], #-2562	; 0xfffff5fe
    a3c0:	23020000 	movwcs	r0, #8192	; 0x2000
    a3c4:	06fa0874 	uxtaheq	r0, sl, r4, ror #16
    a3c8:	13030000 	movwne	r0, #12288	; 0x3000
    a3cc:	00a81902 	adceq	r1, r8, r2, lsl #18
    a3d0:	23020000 	movwcs	r0, #8192	; 0x2000
    a3d4:	03c60878 	biceq	r0, r6, #120, 16	; 0x780000
    a3d8:	14030000 	strne	r0, [r3], #-0
    a3dc:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    a3e0:	23020000 	movwcs	r0, #8192	; 0x2000
    a3e4:	0554087c 	ldrbeq	r0, [r4, #-2172]	; 0xfffff784
    a3e8:	15030000 	strne	r0, [r3, #-0]
    a3ec:	00971902 	addseq	r1, r7, r2, lsl #18
    a3f0:	23030000 	movwcs	r0, #12288	; 0x3000
    a3f4:	e8080180 	stmda	r8, {r7, r8}
    a3f8:	03000003 	movweq	r0, #3
    a3fc:	97190216 			; <UNDEFINED> instruction: 0x97190216
    a400:	03000000 	movweq	r0, #0
    a404:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    a408:	000008e4 	andeq	r0, r0, r4, ror #17
    a40c:	1a021f03 	bne	92020 <SYSTICK_CYCLES+0x68fe1>
    a410:	0000047d 	andeq	r0, r0, sp, ror r4
    a414:	01882303 	orreq	r2, r8, r3, lsl #6
    a418:	0007d508 	andeq	sp, r7, r8, lsl #10
    a41c:	02200300 	eoreq	r0, r0, #0, 6
    a420:	00047d1a 	andeq	r7, r4, sl, lsl sp
    a424:	8c230300 	stchi	3, cr0, [r3], #-0
    a428:	02c10801 	sbceq	r0, r1, #65536	; 0x10000
    a42c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    a430:	00971902 	addseq	r1, r7, r2, lsl #18
    a434:	23030000 	movwcs	r0, #12288	; 0x3000
    a438:	56080190 			; <UNDEFINED> instruction: 0x56080190
    a43c:	03000002 	movweq	r0, #2
    a440:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    a444:	03000000 	movweq	r0, #0
    a448:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
    a44c:	00000320 	andeq	r0, r0, r0, lsr #6
    a450:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    a454:	00000097 	muleq	r0, r7, r0
    a458:	01982303 	orrseq	r2, r8, r3, lsl #6
    a45c:	00027708 	andeq	r7, r2, r8, lsl #14
    a460:	02330300 	eorseq	r0, r3, #0, 6
    a464:	00009719 	andeq	r9, r0, r9, lsl r7
    a468:	9c230300 	stcls	3, cr0, [r3], #-0
    a46c:	00000801 	andeq	r0, r0, r1, lsl #16
    a470:	35030000 	strcc	r0, [r3, #-0]
    a474:	05791a02 	ldrbeq	r1, [r9, #-2562]!	; 0xfffff5fe
    a478:	23030000 	movwcs	r0, #12288	; 0x3000
    a47c:	b70801a0 	strlt	r0, [r8, -r0, lsr #3]
    a480:	0300001b 	movweq	r0, #27
    a484:	a819023a 	ldmdage	r9, {r1, r3, r4, r5, r9}
    a488:	03000000 	movweq	r0, #0
    a48c:	0801a423 	stmdaeq	r1, {r0, r1, r5, sl, sp, pc}
    a490:	00001c77 	andeq	r1, r0, r7, ror ip
    a494:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    a498:	000000a8 	andeq	r0, r0, r8, lsr #1
    a49c:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    a4a0:	001b3008 	andseq	r3, fp, r8
    a4a4:	02410300 	subeq	r0, r1, #0, 6
    a4a8:	0000a819 	andeq	sl, r0, r9, lsl r8
    a4ac:	ac230300 	stcge	3, cr0, [r3], #-0
    a4b0:	1d2e0801 	stcne	8, cr0, [lr, #-4]!
    a4b4:	45030000 	strmi	r0, [r3, #-0]
    a4b8:	00a81902 	adceq	r1, r8, r2, lsl #18
    a4bc:	23030000 	movwcs	r0, #12288	; 0x3000
    a4c0:	470801b0 			; <UNDEFINED> instruction: 0x470801b0
    a4c4:	0300001c 	movweq	r0, #28
    a4c8:	a8190248 	ldmdage	r9, {r3, r6, r9}
    a4cc:	03000000 	movweq	r0, #0
    a4d0:	0801b423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, pc}
    a4d4:	000007a8 	andeq	r0, r0, r8, lsr #15
    a4d8:	1a024c03 	bne	9d4ec <SYSTICK_CYCLES+0x744ad>
    a4dc:	0000047d 	andeq	r0, r0, sp, ror r4
    a4e0:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    a4e4:	001d0608 	andseq	r0, sp, r8, lsl #12
    a4e8:	024f0300 	subeq	r0, pc, #0, 6
    a4ec:	0000a819 	andeq	sl, r0, r9, lsl r8
    a4f0:	bc230300 	stclt	3, cr0, [r3], #-0
    a4f4:	1b080801 	blne	20c500 <__RAM_SIZE+0x10c500>
    a4f8:	52030000 	andpl	r0, r3, #0
    a4fc:	00a81902 	adceq	r1, r8, r2, lsl #18
    a500:	23030000 	movwcs	r0, #12288	; 0x3000
    a504:	850801c0 	strhi	r0, [r8, #-448]	; 0xfffffe40
    a508:	0300001a 	movweq	r0, #26
    a50c:	a8190255 	ldmdage	r9, {r0, r2, r4, r6, r9}
    a510:	03000000 	movweq	r0, #0
    a514:	0801c423 	stmdaeq	r1, {r0, r1, r5, sl, lr, pc}
    a518:	00001bdb 	ldrdeq	r1, [r0], -fp
    a51c:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    a520:	000000a8 	andeq	r0, r0, r8, lsr #1
    a524:	01c82303 	biceq	r2, r8, r3, lsl #6
    a528:	0009a908 	andeq	sl, r9, r8, lsl #18
    a52c:	025d0300 	subseq	r0, sp, #0, 6
    a530:	0000761a 	andeq	r7, r0, sl, lsl r6
    a534:	cc230300 	stcgt	3, cr0, [r3], #-0
    a538:	04810801 	streq	r0, [r1], #2049	; 0x801
    a53c:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    a540:	00a81902 	adceq	r1, r8, r2, lsl #18
    a544:	23030000 	movwcs	r0, #12288	; 0x3000
    a548:	0b0001d0 	bleq	ac90 <_Min_Stack_Size+0x9c90>
    a54c:	00016904 	andeq	r6, r1, r4, lsl #18
    a550:	94010900 	strls	r0, [r1], #-2304	; 0xfffff700
    a554:	0a000004 	beq	a56c <_Min_Stack_Size+0x956c>
    a558:	0000047d 	andeq	r0, r0, sp, ror r4
    a55c:	0000a80a 	andeq	sl, r0, sl, lsl #16
    a560:	040b0000 	streq	r0, [fp], #-0
    a564:	00000483 	andeq	r0, r0, r3, lsl #9
    a568:	00079807 	andeq	r9, r7, r7, lsl #16
    a56c:	7e033400 	cfcpysvc	mvf3, mvf3
    a570:	05791003 	ldrbeq	r1, [r9, #-3]!
    a574:	8d080000 	stchi	0, cr0, [r8, #-0]
    a578:	03000001 	movweq	r0, #1
    a57c:	a8190382 	ldmdage	r9, {r1, r7, r8, r9}
    a580:	02000000 	andeq	r0, r0, #0
    a584:	7c080023 	stcvc	0, cr0, [r8], {35}	; 0x23
    a588:	03000008 	movweq	r0, #8
    a58c:	631a0385 	tstvs	sl, #335544322	; 0x14000002
    a590:	02000001 	andeq	r0, r0, #1
    a594:	e1080423 	tst	r8, r3, lsr #8
    a598:	03000006 	movweq	r0, #6
    a59c:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    a5a0:	02000000 	andeq	r0, r0, #0
    a5a4:	cb080823 	blgt	20c638 <__RAM_SIZE+0x10c638>
    a5a8:	03000004 	movweq	r0, #4
    a5ac:	8c1a038c 	ldchi	3, cr0, [sl], {140}	; 0x8c
    a5b0:	02000005 	andeq	r0, r0, #5
    a5b4:	62080c23 	andvs	r0, r8, #8960	; 0x2300
    a5b8:	03000001 	movweq	r0, #1
    a5bc:	97190390 			; <UNDEFINED> instruction: 0x97190390
    a5c0:	02000000 	andeq	r0, r0, #0
    a5c4:	21081023 	tstcs	r8, r3, lsr #32
    a5c8:	03000001 	movweq	r0, #1
    a5cc:	97190393 			; <UNDEFINED> instruction: 0x97190393
    a5d0:	02000000 	andeq	r0, r0, #0
    a5d4:	b2081423 	andlt	r1, r8, #587202560	; 0x23000000
    a5d8:	03000008 	movweq	r0, #8
    a5dc:	7d1a0398 	ldcvc	3, cr0, [sl, #-608]	; 0xfffffda0
    a5e0:	02000004 	andeq	r0, r0, #4
    a5e4:	c8081823 	stmdagt	r8, {r0, r1, r5, fp, ip}
    a5e8:	03000006 	movweq	r0, #6
    a5ec:	97190399 			; <UNDEFINED> instruction: 0x97190399
    a5f0:	02000000 	andeq	r0, r0, #0
    a5f4:	b8081c23 	stmdalt	r8, {r0, r1, r5, sl, fp, ip}
    a5f8:	03000005 	movweq	r0, #5
    a5fc:	791a039d 	ldmdbvc	sl, {r0, r2, r3, r4, r7, r8, r9}
    a600:	02000005 	andeq	r0, r0, #5
    a604:	85082023 	strhi	r2, [r8, #-35]	; 0xffffffdd
    a608:	03000006 	movweq	r0, #6
    a60c:	791a039e 	ldmdbvc	sl, {r1, r2, r3, r4, r7, r8, r9}
    a610:	02000005 	andeq	r0, r0, #5
    a614:	d0082423 	andle	r2, r8, r3, lsr #8
    a618:	03000001 	movweq	r0, #1
    a61c:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    a620:	02000000 	andeq	r0, r0, #0
    a624:	c5082823 	strgt	r2, [r8, #-2083]	; 0xfffff7dd
    a628:	03000009 	movweq	r0, #9
    a62c:	791a03a6 	ldmdbvc	sl, {r1, r2, r5, r7, r8, r9}
    a630:	02000005 	andeq	r0, r0, #5
    a634:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
    a638:	03000004 	movweq	r0, #4
    a63c:	791a03a7 	ldmdbvc	sl, {r0, r1, r2, r5, r7, r8, r9}
    a640:	02000005 	andeq	r0, r0, #5
    a644:	0b003023 	bleq	166d8 <_Min_Stack_Size+0x156d8>
    a648:	00049a04 	andeq	r9, r4, r4, lsl #20
    a64c:	08d40c00 	ldmeq	r4, {sl, fp}^
    a650:	86030000 	strhi	r0, [r3], -r0
    a654:	01690302 	cmneq	r9, r2, lsl #6
    a658:	040b0000 	streq	r0, [fp], #-0
    a65c:	0000057f 	andeq	r0, r0, pc, ror r5
    a660:	00111b0d 	andseq	r1, r1, sp, lsl #22
    a664:	01390400 	teqeq	r9, r0, lsl #8
    a668:	00058c21 	andeq	r8, r5, r1, lsr #24
    a66c:	0d010100 	stfeqs	f0, [r1, #-0]
    a670:	000019b2 			; <UNDEFINED> instruction: 0x000019b2
    a674:	21014004 	tstcs	r1, r4
    a678:	0000058c 	andeq	r0, r0, ip, lsl #11
    a67c:	e80d0101 	stmda	sp, {r0, r8}
    a680:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    a684:	b4210153 	strtlt	r0, [r1], #-339	; 0xfffffead
    a688:	01000000 	mrseq	r0, (UNDEF: 0)
    a68c:	00a80e01 	adceq	r0, r8, r1, lsl #28
    a690:	05cf0000 	strbeq	r0, [pc]	; a698 <_Min_Stack_Size+0x9698>
    a694:	290f0000 	stmdbcs	pc, {}	; <UNPREDICTABLE>
    a698:	00000000 	andeq	r0, r0, r0
    a69c:	1c020d00 	stcne	13, cr0, [r2], {-0}
    a6a0:	5b040000 	blpl	10a6a8 <__RAM_SIZE+0xa6a8>
    a6a4:	05bf2101 	ldreq	r2, [pc, #257]!	; a7ad <_Min_Stack_Size+0x97ad>
    a6a8:	01010000 	mrseq	r0, (UNDEF: 1)
    a6ac:	001aa90d 	andseq	sl, sl, sp, lsl #18
    a6b0:	017f0400 	cmneq	pc, r0, lsl #8
    a6b4:	00009721 	andeq	r9, r0, r1, lsr #14
    a6b8:	0e010100 	adfeqs	f0, f1, f0
    a6bc:	0000058c 	andeq	r0, r0, ip, lsl #11
    a6c0:	000005fd 	strdeq	r0, [r0], -sp
    a6c4:	0000290f 	andeq	r2, r0, pc, lsl #18
    a6c8:	0d001f00 	stceq	15, cr1, [r0, #-0]
    a6cc:	00001d9a 	muleq	r0, sl, sp
    a6d0:	21018704 	tstcs	r1, r4, lsl #14
    a6d4:	000005ed 	andeq	r0, r0, sp, ror #11
    a6d8:	320d0101 	andcc	r0, sp, #1073741824	; 0x40000000
    a6dc:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    a6e0:	a321018e 			; <UNDEFINED> instruction: 0xa321018e
    a6e4:	01000000 	mrseq	r0, (UNDEF: 0)
    a6e8:	1bb60d01 	blne	fed8daf4 <__RAM_segment_used_end__+0xc6c8daf4>
    a6ec:	ca040000 	bgt	10a6f4 <__RAM_SIZE+0xa6f4>
    a6f0:	00a82101 	adceq	r2, r8, r1, lsl #2
    a6f4:	01010000 	mrseq	r0, (UNDEF: 1)
    a6f8:	001b2f0d 	andseq	r2, fp, sp, lsl #30
    a6fc:	01d60400 	bicseq	r0, r6, r0, lsl #8
    a700:	0000a821 	andeq	sl, r0, r1, lsr #16
    a704:	0d010100 	stfeqs	f0, [r1, #-0]
    a708:	00001d2d 	andeq	r1, r0, sp, lsr #26
    a70c:	2101dd04 	tstcs	r1, r4, lsl #26
    a710:	000000a8 	andeq	r0, r0, r8, lsr #1
    a714:	d80d0101 	stmdale	sp, {r0, r8}
    a718:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    a71c:	a8210209 	stmdage	r1!, {r0, r3, r9}
    a720:	01000000 	mrseq	r0, (UNDEF: 0)
    a724:	1b8c0d01 	blne	fe30db30 <__RAM_segment_used_end__+0xc620db30>
    a728:	0f040000 	svceq	0x00040000
    a72c:	00a82102 	adceq	r2, r8, r2, lsl #2
    a730:	01010000 	mrseq	r0, (UNDEF: 1)
    a734:	00058c0e 	andeq	r8, r5, lr, lsl #24
    a738:	00067600 	andeq	r7, r6, r0, lsl #12
    a73c:	00290f00 	eoreq	r0, r9, r0, lsl #30
    a740:	00070000 	andeq	r0, r7, r0
    a744:	001cb50d 	andseq	fp, ip, sp, lsl #10
    a748:	02100400 	andseq	r0, r0, #0, 8
    a74c:	00066621 	andeq	r6, r6, r1, lsr #12
    a750:	10010100 	andne	r0, r1, r0, lsl #2
    a754:	00105801 	andseq	r5, r0, r1, lsl #16
    a758:	026e0100 	rsbeq	r0, lr, #0, 2
    a75c:	21400107 	cmpcs	r0, r7, lsl #2
    a760:	24621000 	strbtcs	r1, [r2], #-0
    a764:	3dde1000 	ldclcc	0, cr1, [lr]
    a768:	13010000 	movwne	r0, #4096	; 0x1000
    a76c:	1100000e 	tstne	r0, lr
    a770:	000019cf 	andeq	r1, r0, pc, asr #19
    a774:	2e026e01 	cdpcs	14, 0, cr6, cr2, cr1, {0}
    a778:	0000058c 	andeq	r0, r0, ip, lsl #11
    a77c:	00003e08 	andeq	r3, r0, r8, lsl #28
    a780:	00003dfe 	strdeq	r3, [r0], -lr
    a784:	0002e312 	andeq	lr, r2, r2, lsl r3
    a788:	02710100 	rsbseq	r0, r1, #0, 2
    a78c:	00009711 	andeq	r9, r0, r1, lsl r7
    a790:	003e5200 	eorseq	r5, lr, r0, lsl #4
    a794:	003e4a00 	eorseq	r4, lr, r0, lsl #20
    a798:	20681200 	rsbcs	r1, r8, r0, lsl #4
    a79c:	72010000 	andvc	r0, r1, #0
    a7a0:	00a81102 	adceq	r1, r8, r2, lsl #2
    a7a4:	3e8d0000 	cdpcc	0, 8, cr0, cr13, cr0, {0}
    a7a8:	3e870000 	cdpcc	0, 8, cr0, cr7, cr0, {0}
    a7ac:	75120000 	ldrvc	r0, [r2, #-0]
    a7b0:	01000020 	tsteq	r0, r0, lsr #32
    a7b4:	8c120273 	lfmhi	f0, 4, [r2], {115}	; 0x73
    a7b8:	c0000005 	andgt	r0, r0, r5
    a7bc:	ba00003e 	blt	a8bc <_Min_Stack_Size+0x98bc>
    a7c0:	1200003e 	andne	r0, r0, #62	; 0x3e
    a7c4:	0000207e 	andeq	r2, r0, lr, ror r0
    a7c8:	12027401 	andne	r7, r2, #16777216	; 0x1000000
    a7cc:	0000058c 	andeq	r0, r0, ip, lsl #11
    a7d0:	00003ef1 	strdeq	r3, [r0], -r1
    a7d4:	00003eef 	andeq	r3, r0, pc, ror #29
    a7d8:	0019bd12 	andseq	fp, r9, r2, lsl sp
    a7dc:	02750100 	rsbseq	r0, r5, #0, 2
    a7e0:	00058c12 	andeq	r8, r5, r2, lsl ip
    a7e4:	003f0e00 	eorseq	r0, pc, r0, lsl #28
    a7e8:	003f0400 	eorseq	r0, pc, r0, lsl #8
    a7ec:	1fb01200 	svcne	0x00b01200
    a7f0:	76010000 	strvc	r0, [r1], -r0
    a7f4:	058c1202 	streq	r1, [ip, #514]	; 0x202
    a7f8:	3f510000 	svccc	0x00510000
    a7fc:	3f4f0000 	svccc	0x004f0000
    a800:	24120000 	ldrcs	r0, [r2], #-0
    a804:	01000020 	tsteq	r0, r0, lsr #32
    a808:	a8110277 	ldmdage	r1, {r0, r1, r2, r4, r5, r6, r9}
    a80c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    a810:	6400003f 	strvs	r0, [r0], #-63	; 0xffffffc1
    a814:	1300003f 	movwne	r0, #63	; 0x3f
    a818:	00000328 	andeq	r0, r0, r8, lsr #6
    a81c:	000008f1 	strdeq	r0, [r0], -r1
    a820:	000ee212 	andeq	lr, lr, r2, lsl r2
    a824:	02a80100 	adceq	r0, r8, #0, 2
    a828:	00009705 	andeq	r9, r0, r5, lsl #14
    a82c:	003f8e00 	eorseq	r8, pc, r0, lsl #28
    a830:	003f8600 	eorseq	r8, pc, r0, lsl #12
    a834:	0f0a1400 	svceq	0x000a1400
    a838:	214e0000 	mrscs	r0, (UNDEF: 78)
    a83c:	00021000 	andeq	r1, r2, r0
    a840:	1000214e 	andne	r2, r0, lr, asr #2
    a844:	10002154 	andne	r2, r0, r4, asr r1
    a848:	0502a801 	streq	sl, [r2, #-2049]	; 0xfffff7ff
    a84c:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
    a850:	000f1d15 	andeq	r1, pc, r5, lsl sp	; <UNPREDICTABLE>
    a854:	003fc800 	eorseq	ip, pc, r0, lsl #16
    a858:	003fc200 	eorseq	ip, pc, r0, lsl #4
    a85c:	0f531600 	svceq	0x00531600
    a860:	214e0000 	mrscs	r0, (UNDEF: 78)
    a864:	00051000 	andeq	r1, r5, r0
    a868:	1000214e 	andne	r2, r0, lr, asr #2
    a86c:	10002152 	andne	r2, r0, r2, asr r1
    a870:	13025602 	movwne	r5, #9730	; 0x2602
    a874:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    a878:	003ff300 	eorseq	pc, pc, r0, lsl #6
    a87c:	003ff100 	eorseq	pc, pc, r0, lsl #2
    a880:	14000000 	strne	r0, [r0], #-0
    a884:	00000f2b 	andeq	r0, r0, fp, lsr #30
    a888:	1000215e 	andne	r2, r0, lr, asr r1
    a88c:	215e0001 	cmpcs	lr, r1
    a890:	21621000 	cmncs	r2, r0
    a894:	a8011000 	stmdage	r1, {ip}
    a898:	07de0502 	ldrbeq	r0, [lr, r2, lsl #10]
    a89c:	3a170000 	bcc	5ca8a4 <__RAM_SIZE+0x4ca8a4>
    a8a0:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    a8a4:	06000040 	streq	r0, [r0], -r0, asr #32
    a8a8:	00000040 	andeq	r0, r0, r0, asr #32
    a8ac:	000f2b14 	andeq	r2, pc, r4, lsl fp	; <UNPREDICTABLE>
    a8b0:	0021c000 	eoreq	ip, r1, r0
    a8b4:	c0000110 	andgt	r0, r0, r0, lsl r1
    a8b8:	c4100021 	ldrgt	r0, [r0], #-33	; 0xffffffdf
    a8bc:	01100021 	tsteq	r0, r1, lsr #32
    a8c0:	070502a8 	streq	r0, [r5, -r8, lsr #5]
    a8c4:	17000008 	strne	r0, [r0, -r8]
    a8c8:	00000f3a 	andeq	r0, r0, sl, lsr pc
    a8cc:	0000401d 	andeq	r4, r0, sp, lsl r0
    a8d0:	0000401b 	andeq	r4, r0, fp, lsl r0
    a8d4:	0f0a1400 	svceq	0x000a1400
    a8d8:	21ca0000 	biccs	r0, sl, r0
    a8dc:	00011000 	andeq	r1, r1, r0
    a8e0:	100021ca 	andne	r2, r0, sl, asr #3
    a8e4:	100021d0 	ldrdne	r2, [r0], -r0
    a8e8:	0502a801 	streq	sl, [r2, #-2049]	; 0xfffff7ff
    a8ec:	00000855 	andeq	r0, r0, r5, asr r8
    a8f0:	000f1d15 	andeq	r1, pc, r5, lsl sp	; <UNPREDICTABLE>
    a8f4:	00403200 	subeq	r3, r0, r0, lsl #4
    a8f8:	00403000 	subeq	r3, r0, r0
    a8fc:	0f531600 	svceq	0x00531600
    a900:	21ca0000 	biccs	r0, sl, r0
    a904:	00041000 	andeq	r1, r4, r0
    a908:	100021ca 	andne	r2, r0, sl, asr #3
    a90c:	100021ce 	andne	r2, r0, lr, asr #3
    a910:	13025602 	movwne	r5, #9730	; 0x2602
    a914:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    a918:	00404700 	subeq	r4, r0, r0, lsl #14
    a91c:	00404500 	subeq	r4, r0, r0, lsl #10
    a920:	14000000 	strne	r0, [r0], #-0
    a924:	00000f2b 	andeq	r0, r0, fp, lsr #30
    a928:	100021de 	ldrdne	r2, [r0], -lr
    a92c:	21de0001 	bicscs	r0, lr, r1
    a930:	21e21000 	mvncs	r1, r0
    a934:	a8011000 	stmdage	r1, {ip}
    a938:	087e0502 	ldmdaeq	lr!, {r1, r8, sl}^
    a93c:	3a170000 	bcc	5ca944 <__RAM_SIZE+0x4ca944>
    a940:	5c00000f 	stcpl	0, cr0, [r0], {15}
    a944:	5a000040 	bpl	aa4c <_Min_Stack_Size+0x9a4c>
    a948:	00000040 	andeq	r0, r0, r0, asr #32
    a94c:	000f0a14 	andeq	r0, pc, r4, lsl sl	; <UNPREDICTABLE>
    a950:	0021e800 	eoreq	lr, r1, r0, lsl #16
    a954:	e8000110 	stmda	r0, {r4, r8}
    a958:	f0100021 			; <UNDEFINED> instruction: 0xf0100021
    a95c:	01100021 	tsteq	r0, r1, lsr #32
    a960:	cc0502a8 	sfmgt	f0, 4, [r5], {168}	; 0xa8
    a964:	15000008 	strne	r0, [r0, #-8]
    a968:	00000f1d 	andeq	r0, r0, sp, lsl pc
    a96c:	00004071 	andeq	r4, r0, r1, ror r0
    a970:	0000406f 	andeq	r4, r0, pc, rrx
    a974:	000f5316 	andeq	r5, pc, r6, lsl r3	; <UNPREDICTABLE>
    a978:	0021e800 	eoreq	lr, r1, r0, lsl #16
    a97c:	e8000410 	stmda	r0, {r4, sl}
    a980:	ec100021 	ldc	0, cr0, [r0], {33}	; 0x21
    a984:	02100021 	andseq	r0, r0, #33	; 0x21
    a988:	15130256 	ldrne	r0, [r3, #-598]	; 0xfffffdaa
    a98c:	00000f66 	andeq	r0, r0, r6, ror #30
    a990:	00004086 	andeq	r4, r0, r6, lsl #1
    a994:	00004084 	andeq	r4, r0, r4, lsl #1
    a998:	ca180000 	bgt	60a9a0 <__RAM_SIZE+0x50a9a0>
    a99c:	95100021 	ldrls	r0, [r0, #-33]	; 0xffffffdf
    a9a0:	e000000f 	and	r0, r0, pc
    a9a4:	19000008 	stmdbne	r0, {r3}
    a9a8:	74025001 	strvc	r5, [r2], #-1
    a9ac:	e81a0000 	ldmda	sl, {}	; <UNPREDICTABLE>
    a9b0:	a4100021 	ldrge	r0, [r0], #-33	; 0xffffffdf
    a9b4:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    a9b8:	74025001 	strvc	r5, [r2], #-1
    a9bc:	13000000 	movwne	r0, #0
    a9c0:	00000340 	andeq	r0, r0, r0, asr #6
    a9c4:	00000a99 	muleq	r0, r9, sl
    a9c8:	000ee212 	andeq	lr, lr, r2, lsl r2
    a9cc:	036b0100 	cmneq	fp, #0, 2
    a9d0:	0000971d 	andeq	r9, r0, sp, lsl r7
    a9d4:	0040a100 	subeq	sl, r0, r0, lsl #2
    a9d8:	00409900 	subeq	r9, r0, r0, lsl #18
    a9dc:	0f0a1400 	svceq	0x000a1400
    a9e0:	227e0000 	rsbscs	r0, lr, #0
    a9e4:	00031000 	andeq	r1, r3, r0
    a9e8:	1000227e 	andne	r2, r0, lr, ror r2
    a9ec:	10002284 	andne	r2, r0, r4, lsl #5
    a9f0:	1d036b01 	vstrne	d6, [r3, #-4]
    a9f4:	0000095d 	andeq	r0, r0, sp, asr r9
    a9f8:	000f1d15 	andeq	r1, pc, r5, lsl sp	; <UNPREDICTABLE>
    a9fc:	0040db00 	subeq	sp, r0, r0, lsl #22
    aa00:	0040d500 	subeq	sp, r0, r0, lsl #10
    aa04:	0f531600 	svceq	0x00531600
    aa08:	227e0000 	rsbscs	r0, lr, #0
    aa0c:	00061000 	andeq	r1, r6, r0
    aa10:	1000227e 	andne	r2, r0, lr, ror r2
    aa14:	10002282 	andne	r2, r0, r2, lsl #5
    aa18:	13025602 	movwne	r5, #9730	; 0x2602
    aa1c:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    aa20:	00410600 	subeq	r0, r1, r0, lsl #12
    aa24:	00410400 	subeq	r0, r1, r0, lsl #8
    aa28:	14000000 	strne	r0, [r0], #-0
    aa2c:	00000f2b 	andeq	r0, r0, fp, lsr #30
    aa30:	1000228e 	andne	r2, r0, lr, lsl #5
    aa34:	228e0001 	addcs	r0, lr, #1
    aa38:	22921000 	addscs	r1, r2, #0
    aa3c:	6b011000 	blvs	4ea44 <SYSTICK_CYCLES+0x25a05>
    aa40:	09861d03 	stmibeq	r6, {r0, r1, r8, sl, fp, ip}
    aa44:	3a170000 	bcc	5caa4c <__RAM_SIZE+0x4caa4c>
    aa48:	1b00000f 	blne	aa8c <_Min_Stack_Size+0x9a8c>
    aa4c:	19000041 	stmdbne	r0, {r0, r6}
    aa50:	00000041 	andeq	r0, r0, r1, asr #32
    aa54:	000f2b14 	andeq	r2, pc, r4, lsl fp	; <UNPREDICTABLE>
    aa58:	00231400 	eoreq	r1, r3, r0, lsl #8
    aa5c:	14000110 	strne	r0, [r0], #-272	; 0xfffffef0
    aa60:	18100023 	ldmdane	r0, {r0, r1, r5}
    aa64:	01100023 	tsteq	r0, r3, lsr #32
    aa68:	af1d036b 	svcge	0x001d036b
    aa6c:	17000009 	strne	r0, [r0, -r9]
    aa70:	00000f3a 	andeq	r0, r0, sl, lsr pc
    aa74:	00004130 	andeq	r4, r0, r0, lsr r1
    aa78:	0000412e 	andeq	r4, r0, lr, lsr #2
    aa7c:	0f0a1400 	svceq	0x000a1400
    aa80:	231e0000 	tstcs	lr, #0
    aa84:	00011000 	andeq	r1, r1, r0
    aa88:	1000231e 	andne	r2, r0, lr, lsl r3
    aa8c:	10002324 	andne	r2, r0, r4, lsr #6
    aa90:	1d036b01 	vstrne	d6, [r3, #-4]
    aa94:	000009fd 	strdeq	r0, [r0], -sp
    aa98:	000f1d15 	andeq	r1, pc, r5, lsl sp	; <UNPREDICTABLE>
    aa9c:	00414500 	subeq	r4, r1, r0, lsl #10
    aaa0:	00414300 	subeq	r4, r1, r0, lsl #6
    aaa4:	0f531600 	svceq	0x00531600
    aaa8:	231e0000 	tstcs	lr, #0
    aaac:	00041000 	andeq	r1, r4, r0
    aab0:	1000231e 	andne	r2, r0, lr, lsl r3
    aab4:	10002322 	andne	r2, r0, r2, lsr #6
    aab8:	13025602 	movwne	r5, #9730	; 0x2602
    aabc:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    aac0:	00415a00 	subeq	r5, r1, r0, lsl #20
    aac4:	00415800 	subeq	r5, r1, r0, lsl #16
    aac8:	14000000 	strne	r0, [r0], #-0
    aacc:	00000f2b 	andeq	r0, r0, fp, lsr #30
    aad0:	10002332 	andne	r2, r0, r2, lsr r3
    aad4:	23320001 	teqcs	r2, #1
    aad8:	23361000 	teqcs	r6, #0
    aadc:	6b011000 	blvs	4eae4 <SYSTICK_CYCLES+0x25aa5>
    aae0:	0a261d03 	beq	991ef4 <__RAM_SIZE+0x891ef4>
    aae4:	3a170000 	bcc	5caaec <__RAM_SIZE+0x4caaec>
    aae8:	6f00000f 	svcvs	0x0000000f
    aaec:	6d000041 	stcvs	0, cr0, [r0, #-260]	; 0xfffffefc
    aaf0:	00000041 	andeq	r0, r0, r1, asr #32
    aaf4:	000f0a14 	andeq	r0, pc, r4, lsl sl	; <UNPREDICTABLE>
    aaf8:	00233c00 	eoreq	r3, r3, r0, lsl #24
    aafc:	3c000110 	stfccs	f0, [r0], {16}
    ab00:	44100023 	ldrmi	r0, [r0], #-35	; 0xffffffdd
    ab04:	01100023 	tsteq	r0, r3, lsr #32
    ab08:	741d036b 	ldrvc	r0, [sp], #-875	; 0xfffffc95
    ab0c:	1500000a 	strne	r0, [r0, #-10]
    ab10:	00000f1d 	andeq	r0, r0, sp, lsl pc
    ab14:	00004184 	andeq	r4, r0, r4, lsl #3
    ab18:	00004182 	andeq	r4, r0, r2, lsl #3
    ab1c:	000f5316 	andeq	r5, pc, r6, lsl r3	; <UNPREDICTABLE>
    ab20:	00233c00 	eoreq	r3, r3, r0, lsl #24
    ab24:	3c000410 	cfstrscc	mvf0, [r0], {16}
    ab28:	40100023 	andsmi	r0, r0, r3, lsr #32
    ab2c:	02100023 	andseq	r0, r0, #35	; 0x23
    ab30:	15130256 	ldrne	r0, [r3, #-598]	; 0xfffffdaa
    ab34:	00000f66 	andeq	r0, r0, r6, ror #30
    ab38:	00004199 	muleq	r0, r9, r1
    ab3c:	00004197 	muleq	r0, r7, r1
    ab40:	1e180000 	cdpne	0, 1, cr0, cr8, cr0, {0}
    ab44:	95100023 	ldrls	r0, [r0, #-35]	; 0xffffffdd
    ab48:	8800000f 	stmdahi	r0, {r0, r1, r2, r3}
    ab4c:	1900000a 	stmdbne	r0, {r1, r3}
    ab50:	74025001 	strvc	r5, [r2], #-1
    ab54:	3c1a0000 	ldccc	0, cr0, [sl], {-0}
    ab58:	a4100023 	ldrge	r0, [r0], #-35	; 0xffffffdd
    ab5c:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    ab60:	74025001 	strvc	r5, [r2], #-1
    ab64:	13000000 	movwne	r0, #0
    ab68:	00000358 	andeq	r0, r0, r8, asr r3
    ab6c:	00000c41 	andeq	r0, r0, r1, asr #24
    ab70:	000ee212 	andeq	lr, lr, r2, lsl r2
    ab74:	03d70100 	bicseq	r0, r7, #0, 2
    ab78:	00009709 	andeq	r9, r0, r9, lsl #14
    ab7c:	0041b400 	subeq	fp, r1, r0, lsl #8
    ab80:	0041ac00 	subeq	sl, r1, r0, lsl #24
    ab84:	0f0a1400 	svceq	0x000a1400
    ab88:	238a0000 	orrcs	r0, sl, #0
    ab8c:	00031000 	andeq	r1, r3, r0
    ab90:	1000238a 	andne	r2, r0, sl, lsl #7
    ab94:	10002390 	mulne	r0, r0, r3
    ab98:	0903d701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr, pc}
    ab9c:	00000b05 	andeq	r0, r0, r5, lsl #22
    aba0:	000f1d15 	andeq	r1, pc, r5, lsl sp	; <UNPREDICTABLE>
    aba4:	0041ee00 	subeq	lr, r1, r0, lsl #28
    aba8:	0041e800 	subeq	lr, r1, r0, lsl #16
    abac:	0f531600 	svceq	0x00531600
    abb0:	238a0000 	orrcs	r0, sl, #0
    abb4:	00061000 	andeq	r1, r6, r0
    abb8:	1000238a 	andne	r2, r0, sl, lsl #7
    abbc:	1000238e 	andne	r2, r0, lr, lsl #7
    abc0:	13025602 	movwne	r5, #9730	; 0x2602
    abc4:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    abc8:	00421900 	subeq	r1, r2, r0, lsl #18
    abcc:	00421700 	subeq	r1, r2, r0, lsl #14
    abd0:	14000000 	strne	r0, [r0], #-0
    abd4:	00000f2b 	andeq	r0, r0, fp, lsr #30
    abd8:	1000239a 	mulne	r0, sl, r3
    abdc:	239a0001 	orrscs	r0, sl, #1
    abe0:	239e1000 	orrscs	r1, lr, #0
    abe4:	d7011000 	strle	r1, [r1, -r0]
    abe8:	0b2e0903 	bleq	b8cffc <__RAM_SIZE+0xa8cffc>
    abec:	3a170000 	bcc	5cabf4 <__RAM_SIZE+0x4cabf4>
    abf0:	2e00000f 	cdpcs	0, 0, cr0, cr0, cr15, {0}
    abf4:	2c000042 	stccs	0, cr0, [r0], {66}	; 0x42
    abf8:	00000042 	andeq	r0, r0, r2, asr #32
    abfc:	000f2b14 	andeq	r2, pc, r4, lsl fp	; <UNPREDICTABLE>
    ac00:	00242800 	eoreq	r2, r4, r0, lsl #16
    ac04:	28000110 	stmdacs	r0, {r4, r8}
    ac08:	2c100024 	ldccs	0, cr0, [r0], {36}	; 0x24
    ac0c:	01100024 	tsteq	r0, r4, lsr #32
    ac10:	570903d7 			; <UNDEFINED> instruction: 0x570903d7
    ac14:	1700000b 	strne	r0, [r0, -fp]
    ac18:	00000f3a 	andeq	r0, r0, sl, lsr pc
    ac1c:	00004243 	andeq	r4, r0, r3, asr #4
    ac20:	00004241 	andeq	r4, r0, r1, asr #4
    ac24:	0f0a1400 	svceq	0x000a1400
    ac28:	24320000 	ldrtcs	r0, [r2], #-0
    ac2c:	00011000 	andeq	r1, r1, r0
    ac30:	10002432 	andne	r2, r0, r2, lsr r4
    ac34:	10002438 	andne	r2, r0, r8, lsr r4
    ac38:	0903d701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr, pc}
    ac3c:	00000ba5 	andeq	r0, r0, r5, lsr #23
    ac40:	000f1d15 	andeq	r1, pc, r5, lsl sp	; <UNPREDICTABLE>
    ac44:	00425800 	subeq	r5, r2, r0, lsl #16
    ac48:	00425600 	subeq	r5, r2, r0, lsl #12
    ac4c:	0f531600 	svceq	0x00531600
    ac50:	24320000 	ldrtcs	r0, [r2], #-0
    ac54:	00041000 	andeq	r1, r4, r0
    ac58:	10002432 	andne	r2, r0, r2, lsr r4
    ac5c:	10002436 	andne	r2, r0, r6, lsr r4
    ac60:	13025602 	movwne	r5, #9730	; 0x2602
    ac64:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    ac68:	00426d00 	subeq	r6, r2, r0, lsl #26
    ac6c:	00426b00 	subeq	r6, r2, r0, lsl #22
    ac70:	14000000 	strne	r0, [r0], #-0
    ac74:	00000f2b 	andeq	r0, r0, fp, lsr #30
    ac78:	10002446 	andne	r2, r0, r6, asr #8
    ac7c:	24460001 	strbcs	r0, [r6], #-1
    ac80:	244a1000 	strbcs	r1, [sl], #-0
    ac84:	d7011000 	strle	r1, [r1, -r0]
    ac88:	0bce0903 	bleq	ff38d09c <__RAM_segment_used_end__+0xc728d09c>
    ac8c:	3a170000 	bcc	5cac94 <__RAM_SIZE+0x4cac94>
    ac90:	8200000f 	andhi	r0, r0, #15
    ac94:	80000042 	andhi	r0, r0, r2, asr #32
    ac98:	00000042 	andeq	r0, r0, r2, asr #32
    ac9c:	000f0a14 	andeq	r0, pc, r4, lsl sl	; <UNPREDICTABLE>
    aca0:	00245000 	eoreq	r5, r4, r0
    aca4:	50000110 	andpl	r0, r0, r0, lsl r1
    aca8:	58100024 	ldmdapl	r0, {r2, r5}
    acac:	01100024 	tsteq	r0, r4, lsr #32
    acb0:	1c0903d7 	stcne	3, cr0, [r9], {215}	; 0xd7
    acb4:	1500000c 	strne	r0, [r0, #-12]
    acb8:	00000f1d 	andeq	r0, r0, sp, lsl pc
    acbc:	00004297 	muleq	r0, r7, r2
    acc0:	00004295 	muleq	r0, r5, r2
    acc4:	000f5316 	andeq	r5, pc, r6, lsl r3	; <UNPREDICTABLE>
    acc8:	00245000 	eoreq	r5, r4, r0
    accc:	50000410 	andpl	r0, r0, r0, lsl r4
    acd0:	54100024 	ldrpl	r0, [r0], #-36	; 0xffffffdc
    acd4:	02100024 	andseq	r0, r0, #36	; 0x24
    acd8:	15130256 	ldrne	r0, [r3, #-598]	; 0xfffffdaa
    acdc:	00000f66 	andeq	r0, r0, r6, ror #30
    ace0:	000042ac 	andeq	r4, r0, ip, lsr #5
    ace4:	000042aa 	andeq	r4, r0, sl, lsr #5
    ace8:	32180000 	andscc	r0, r8, #0
    acec:	95100024 	ldrls	r0, [r0, #-36]	; 0xffffffdc
    acf0:	3000000f 	andcc	r0, r0, pc
    acf4:	1900000c 	stmdbne	r0, {r2, r3}
    acf8:	74025001 	strvc	r5, [r2], #-1
    acfc:	501a0000 	andspl	r0, sl, r0
    ad00:	a4100024 	ldrge	r0, [r0], #-36	; 0xffffffdc
    ad04:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    ad08:	74025001 	strvc	r5, [r2], #-1
    ad0c:	14000000 	strne	r0, [r0], #-0
    ad10:	00000f74 	andeq	r0, r0, r4, ror pc
    ad14:	10002230 	andne	r2, r0, r0, lsr r2
    ad18:	22300001 	eorscs	r0, r0, #1
    ad1c:	22341000 	eorscs	r1, r4, #0
    ad20:	1a011000 	bne	4ed28 <SYSTICK_CYCLES+0x25ce9>
    ad24:	0c6a2103 	stfeqe	f2, [sl], #-12
    ad28:	87150000 	ldrhi	r0, [r5, -r0]
    ad2c:	c100000f 	tstgt	r0, pc
    ad30:	bf000042 	svclt	0x00000042
    ad34:	00000042 	andeq	r0, r0, r2, asr #32
    ad38:	000eed14 	andeq	lr, lr, r4, lsl sp
    ad3c:	0022a400 	eoreq	sl, r2, r0, lsl #8
    ad40:	a4000110 	strge	r0, [r0], #-272	; 0xfffffef0
    ad44:	c4100022 	ldrgt	r0, [r0], #-34	; 0xffffffde
    ad48:	01100022 	tsteq	r0, r2, lsr #32
    ad4c:	2121037b 			; <UNDEFINED> instruction: 0x2121037b
    ad50:	1500000d 	strne	r0, [r0, #-13]
    ad54:	00000efc 	strdeq	r0, [r0], -ip
    ad58:	000042d6 	ldrdeq	r4, [r0], -r6
    ad5c:	000042d4 	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    ad60:	000f7414 	andeq	r7, pc, r4, lsl r4	; <UNPREDICTABLE>
    ad64:	0022b000 	eoreq	fp, r2, r0
    ad68:	b0000110 	andlt	r0, r0, r0, lsl r1
    ad6c:	b4100022 	ldrlt	r0, [r0], #-34	; 0xffffffde
    ad70:	02100022 	andseq	r0, r0, #34	; 0x22
    ad74:	bb090266 	bllt	24b714 <__RAM_SIZE+0x14b714>
    ad78:	1500000c 	strne	r0, [r0, #-12]
    ad7c:	00000f87 	andeq	r0, r0, r7, lsl #31
    ad80:	000042eb 	andeq	r4, r0, fp, ror #5
    ad84:	000042e9 	andeq	r4, r0, r9, ror #5
    ad88:	0f531400 	svceq	0x00531400
    ad8c:	22ba0000 	adcscs	r0, sl, #0
    ad90:	00011000 	andeq	r1, r1, r0
    ad94:	100022ba 			; <UNDEFINED> instruction: 0x100022ba
    ad98:	100022be 			; <UNDEFINED> instruction: 0x100022be
    ad9c:	1a026802 	bne	a4dac <SYSTICK_CYCLES+0x7bd6d>
    ada0:	00000ce4 	andeq	r0, r0, r4, ror #25
    ada4:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    ada8:	00430000 	subeq	r0, r3, r0
    adac:	0042fe00 	subeq	pc, r2, r0, lsl #28
    adb0:	481b0000 	ldmdami	fp, {}	; <UNPREDICTABLE>
    adb4:	be00000f 	cdplt	0, 0, cr0, cr0, cr15, {0}
    adb8:	03100022 	tsteq	r0, #34	; 0x22
    adbc:	0022be00 	eoreq	fp, r2, r0, lsl #28
    adc0:	0022c010 	eoreq	ip, r2, r0, lsl r0
    adc4:	026c0210 	rsbeq	r0, ip, #16, 4
    adc8:	0f2b1609 	svceq	0x002b1609
    adcc:	22c00000 	sbccs	r0, r0, #0
    add0:	00011000 	andeq	r1, r1, r0
    add4:	100022c0 	andne	r2, r0, r0, asr #5
    add8:	100022c4 	andne	r2, r0, r4, asr #5
    addc:	09026e02 	stmdbeq	r2, {r1, r9, sl, fp, sp, lr}
    ade0:	000f3a17 	andeq	r3, pc, r7, lsl sl	; <UNPREDICTABLE>
    ade4:	00431500 	subeq	r1, r3, r0, lsl #10
    ade8:	00431300 	subeq	r1, r3, r0, lsl #6
    adec:	14000000 	strne	r0, [r0], #-0
    adf0:	00000f74 	andeq	r0, r0, r4, ror pc
    adf4:	100022cc 	andne	r2, r0, ip, asr #5
    adf8:	22cc0001 	sbccs	r0, ip, #1
    adfc:	22d01000 	sbcscs	r1, r0, #0
    ae00:	26011000 	strcs	r1, [r1], -r0
    ae04:	0d4a2503 	cfstr64eq	mvdx2, [sl, #-12]
    ae08:	87150000 	ldrhi	r0, [r5, -r0]
    ae0c:	2a00000f 	bcs	ae50 <_Min_Stack_Size+0x9e50>
    ae10:	28000043 	stmdacs	r0, {r0, r1, r6}
    ae14:	00000043 	andeq	r0, r0, r3, asr #32
    ae18:	000eed14 	andeq	lr, lr, r4, lsl sp
    ae1c:	0023ac00 	eoreq	sl, r3, r0, lsl #24
    ae20:	ac000110 	stfges	f0, [r0], {16}
    ae24:	c8100023 	ldmdagt	r0, {r0, r1, r5}
    ae28:	01100023 	tsteq	r0, r3, lsr #32
    ae2c:	010d03e7 	smlatteq	sp, r7, r3, r0
    ae30:	1500000e 	strne	r0, [r0, #-14]
    ae34:	00000efc 	strdeq	r0, [r0], -ip
    ae38:	0000433f 	andeq	r4, r0, pc, lsr r3
    ae3c:	0000433d 	andeq	r4, r0, sp, lsr r3
    ae40:	000f7414 	andeq	r7, pc, r4, lsl r4	; <UNPREDICTABLE>
    ae44:	0023b800 	eoreq	fp, r3, r0, lsl #16
    ae48:	b8000110 	stmdalt	r0, {r4, r8}
    ae4c:	bc100023 	ldclt	0, cr0, [r0], {35}	; 0x23
    ae50:	02100023 	andseq	r0, r0, #35	; 0x23
    ae54:	9b090266 	blls	24b7f4 <__RAM_SIZE+0x14b7f4>
    ae58:	1500000d 	strne	r0, [r0, #-13]
    ae5c:	00000f87 	andeq	r0, r0, r7, lsl #31
    ae60:	00004354 	andeq	r4, r0, r4, asr r3
    ae64:	00004352 	andeq	r4, r0, r2, asr r3
    ae68:	0f531400 	svceq	0x00531400
    ae6c:	23be0000 			; <UNDEFINED> instruction: 0x23be0000
    ae70:	00011000 	andeq	r1, r1, r0
    ae74:	100023be 			; <UNDEFINED> instruction: 0x100023be
    ae78:	100023c2 	andne	r2, r0, r2, asr #7
    ae7c:	1a026802 	bne	a4e8c <SYSTICK_CYCLES+0x7be4d>
    ae80:	00000dc4 	andeq	r0, r0, r4, asr #27
    ae84:	000f6615 	andeq	r6, pc, r5, lsl r6	; <UNPREDICTABLE>
    ae88:	00436900 	subeq	r6, r3, r0, lsl #18
    ae8c:	00436700 	subeq	r6, r3, r0, lsl #14
    ae90:	481b0000 	ldmdami	fp, {}	; <UNPREDICTABLE>
    ae94:	c200000f 	andgt	r0, r0, #15
    ae98:	03100023 	tsteq	r0, #35	; 0x23
    ae9c:	0023c200 	eoreq	ip, r3, r0, lsl #4
    aea0:	0023c410 	eoreq	ip, r3, r0, lsl r4
    aea4:	026c0210 	rsbeq	r0, ip, #16, 4
    aea8:	0f2b1609 	svceq	0x002b1609
    aeac:	23c40000 	biccs	r0, r4, #0
    aeb0:	00011000 	andeq	r1, r1, r0
    aeb4:	100023c4 	andne	r2, r0, r4, asr #7
    aeb8:	100023c8 	andne	r2, r0, r8, asr #7
    aebc:	09026e02 	stmdbeq	r2, {r1, r9, sl, fp, sp, lr}
    aec0:	000f3a17 	andeq	r3, pc, r7, lsl sl	; <UNPREDICTABLE>
    aec4:	00437e00 	subeq	r7, r3, r0, lsl #28
    aec8:	00437c00 	subeq	r7, r3, r0, lsl #24
    aecc:	1a000000 	bne	aed4 <_Min_Stack_Size+0x9ed4>
    aed0:	1000214e 	andne	r2, r0, lr, asr #2
    aed4:	00000fb3 			; <UNDEFINED> instruction: 0x00000fb3
    aed8:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    aedc:	0000cc74 	andeq	ip, r0, r4, ror ip
    aee0:	4f011c00 	svcmi	0x00011c00
    aee4:	01000020 	tsteq	r0, r0, lsr #32
    aee8:	00010750 	andeq	r0, r1, r0, asr r7
    aeec:	00000000 	andeq	r0, r0, r0
    aef0:	91000000 	mrsls	r0, (UNDEF: 0)
    aef4:	01000043 	tsteq	r0, r3, asr #32
    aef8:	00000eed 	andeq	r0, r0, sp, ror #29
    aefc:	0019cf1d 	andseq	ip, r9, sp, lsl pc
    af00:	2b500100 	blcs	140b308 <__RAM_SIZE+0x130b308>
    af04:	0000058c 	andeq	r0, r0, ip, lsl #11
    af08:	000043b5 			; <UNDEFINED> instruction: 0x000043b5
    af0c:	000043b1 			; <UNDEFINED> instruction: 0x000043b1
    af10:	000ee212 	andeq	lr, lr, r2, lsl r2
    af14:	021f0100 	andseq	r0, pc, #0, 2
    af18:	00009701 	andeq	r9, r0, r1, lsl #14
    af1c:	0043d800 	subeq	sp, r3, r0, lsl #16
    af20:	0043d600 	subeq	sp, r3, r0, lsl #12
    af24:	02501200 	subseq	r1, r0, #0, 4
    af28:	23010000 	movwcs	r0, #4096	; 0x1000
    af2c:	00971102 	addseq	r1, r7, r2, lsl #2
    af30:	43ef0000 	mvnmi	r0, #0
    af34:	43eb0000 	mvnmi	r0, #0
    af38:	0a140000 	beq	50af40 <__RAM_SIZE+0x40af40>
    af3c:	0000000f 	andeq	r0, r0, pc
    af40:	03000000 	movweq	r0, #0
	...
    af4c:	02270100 	eoreq	r0, r7, #0, 2
    af50:	000eba05 	andeq	fp, lr, r5, lsl #20
    af54:	0f1d1500 	svceq	0x001d1500
    af58:	44100000 	ldrmi	r0, [r0], #-0
    af5c:	440e0000 	strmi	r0, [lr], #-0
    af60:	53160000 	tstpl	r6, #0
    af64:	0000000f 	andeq	r0, r0, pc
    af68:	06000000 	streq	r0, [r0], -r0
	...
    af74:	02560200 	subseq	r0, r6, #0, 4
    af78:	0f661513 	svceq	0x00661513
    af7c:	44250000 	strtmi	r0, [r5], #-0
    af80:	44230000 	strtmi	r0, [r3], #-0
    af84:	00000000 	andeq	r0, r0, r0
    af88:	000f2b14 	andeq	r2, pc, r4, lsl fp	; <UNPREDICTABLE>
    af8c:	00000000 	andeq	r0, r0, r0
    af90:	00000100 	andeq	r0, r0, r0, lsl #2
    af94:	00000000 	andeq	r0, r0, r0
    af98:	01000000 	mrseq	r0, (UNDEF: 0)
    af9c:	e3050268 	movw	r0, #21096	; 0x5268
    afa0:	1700000e 	strne	r0, [r0, -lr]
    afa4:	00000f3a 	andeq	r0, r0, sl, lsr pc
    afa8:	0000443a 	andeq	r4, r0, sl, lsr r4
    afac:	00004438 	andeq	r4, r0, r8, lsr r4
    afb0:	00001e00 	andeq	r1, r0, r0, lsl #28
    afb4:	06850000 	streq	r0, [r5], r0
    afb8:	1f000000 	svcne	0x00000000
    afbc:	00001fbf 			; <UNDEFINED> instruction: 0x00001fbf
    afc0:	37026002 	strcc	r6, [r2, -r2]
    afc4:	0f0a0301 	svceq	0x000a0301
    afc8:	e2200000 	eor	r0, r0, #0
    afcc:	0200000e 	andeq	r0, r0, #14
    afd0:	97060262 	strls	r0, [r6, -r2, ror #4]
    afd4:	00000000 	andeq	r0, r0, r0
    afd8:	000f1821 	andeq	r1, pc, r1, lsr #16
    afdc:	02520200 	subseq	r0, r2, #0, 4
    afe0:	00970137 	addseq	r0, r7, r7, lsr r1
    afe4:	2b030000 	blcs	cafec <SYSTICK_CYCLES+0xa1fad>
    afe8:	2000000f 	andcs	r0, r0, pc
    afec:	00000ea1 	andeq	r0, r0, r1, lsr #29
    aff0:	06025402 	streq	r5, [r2], -r2, lsl #8
    aff4:	00000097 	muleq	r0, r7, r0
    aff8:	0e8d1f00 	cdpeq	15, 8, cr1, cr13, cr0, {0}
    affc:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    b000:	03013702 	movweq	r3, #5890	; 0x1702
    b004:	00000f48 	andeq	r0, r0, r8, asr #30
    b008:	000ea122 	andeq	sl, lr, r2, lsr #2
    b00c:	02490200 	subeq	r0, r9, #0, 4
    b010:	00009750 	andeq	r9, r0, r0, asr r7
    b014:	9c230000 	stcls	0, cr0, [r3], #-0
    b018:	0200001f 	andeq	r0, r0, #31
    b01c:	01370243 	teqeq	r7, r3, asr #4
    b020:	0eb62103 	frdeqs	f2, f6, f3
    b024:	32020000 	andcc	r0, r2, #0
    b028:	97013702 	strls	r3, [r1, -r2, lsl #14]
    b02c:	03000000 	movweq	r0, #0
    b030:	00000f74 	andeq	r0, r0, r4, ror pc
    b034:	000ea520 	andeq	sl, lr, r0, lsr #10
    b038:	02340200 	eorseq	r0, r4, #0, 4
    b03c:	00009706 	andeq	r9, r0, r6, lsl #14
    b040:	6e210000 	cdpvs	0, 2, cr0, cr1, cr0, {0}
    b044:	02000019 	andeq	r0, r0, #25
    b048:	013701fa 	teqeq	r7, sl	; <illegal shifter operand>
    b04c:	00000097 	muleq	r0, r7, r0
    b050:	000f9503 	andeq	r9, pc, r3, lsl #10
    b054:	1a792000 	bne	1e5305c <__RAM_SIZE+0x1d5305c>
    b058:	fc020000 	stc2	0, cr0, [r2], {-0}
    b05c:	00970601 	addseq	r0, r7, r1, lsl #12
    b060:	24000000 	strcs	r0, [r0], #-0
    b064:	1f5d0101 	svcne	0x005d0101
    b068:	1f5d0000 	svcne	0x005d0000
    b06c:	1b040000 	blne	10b074 <__RAM_SIZE+0xb074>
    b070:	01240d01 			; <UNDEFINED> instruction: 0x01240d01
    b074:	001eb401 	andseq	fp, lr, r1, lsl #8
    b078:	001eb400 	andseq	fp, lr, r0, lsl #8
    b07c:	01180400 	tsteq	r8, r0, lsl #8
    b080:	0101250d 	tsteq	r1, sp, lsl #10
    b084:	00002033 	andeq	r2, r0, r3, lsr r0
    b088:	00002033 	andeq	r2, r0, r3, lsr r0
    b08c:	000d4005 	andeq	r4, sp, r5
    b090:	00000eb0 			; <UNDEFINED> instruction: 0x00000eb0
    b094:	1f050002 	svcne	0x00050002
    b098:	01040000 	mrseq	r0, (UNDEF: 4)
    b09c:	0000003d 	andeq	r0, r0, sp, lsr r0
    b0a0:	0020df0c 	eoreq	sp, r0, ip, lsl #30
    b0a4:	00064100 	andeq	r4, r6, r0, lsl #2
    b0a8:	0003b800 	andeq	fp, r3, r0, lsl #16
	...
    b0b4:	003f0d00 	eorseq	r0, pc, r0, lsl #26
    b0b8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    b0bc:	00000239 	andeq	r0, r0, r9, lsr r2
    b0c0:	69050403 	stmdbvs	r5, {r0, r1, sl}
    b0c4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    b0c8:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    b0cc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    b0d0:	00062304 	andeq	r2, r6, r4, lsl #6
    b0d4:	06010200 	streq	r0, [r1], -r0, lsl #4
    b0d8:	00000852 	andeq	r0, r0, r2, asr r8
    b0dc:	50080102 	andpl	r0, r8, r2, lsl #2
    b0e0:	02000008 	andeq	r0, r0, #8
    b0e4:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    b0e8:	02020000 	andeq	r0, r2, #0
    b0ec:	00091e07 	andeq	r1, r9, r7, lsl #28
    b0f0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    b0f4:	000004ed 	andeq	r0, r0, sp, ror #9
    b0f8:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    b0fc:	02000002 	andeq	r0, r0, #2
    b100:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    b104:	04040000 	streq	r0, [r4], #-0
    b108:	59080102 	stmdbpl	r8, {r1, r8}
    b10c:	05000008 	streq	r0, [r0, #-8]
    b110:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    b114:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    b118:	05000000 	streq	r0, [r0, #-0]
    b11c:	000008de 	ldrdeq	r0, [r0], -lr
    b120:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    b124:	05000000 	streq	r0, [r0, #-0]
    b128:	0000077f 	andeq	r0, r0, pc, ror r7
    b12c:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    b130:	06000000 	streq	r0, [r0], -r0
    b134:	00000097 	muleq	r0, r7, r0
    b138:	00071105 	andeq	r1, r7, r5, lsl #2
    b13c:	31780200 	cmncc	r8, r0, lsl #4
    b140:	00000068 	andeq	r0, r0, r8, rrx
    b144:	00053b07 	andeq	r3, r5, r7, lsl #22
    b148:	82031c00 	andhi	r1, r3, #0, 24
    b14c:	01331001 	teqeq	r3, r1
    b150:	12080000 	andne	r0, r8, #0
    b154:	03000008 	movweq	r0, #8
    b158:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
    b15c:	02000000 	andeq	r0, r0, #0
    b160:	a0080023 	andge	r0, r8, r3, lsr #32
    b164:	03000003 	movweq	r0, #3
    b168:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
    b16c:	02000000 	andeq	r0, r0, #0
    b170:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
    b174:	03000004 	movweq	r0, #4
    b178:	3f1b018a 	svccc	0x001b018a
    b17c:	02000001 	andeq	r0, r0, #1
    b180:	f2080823 	vadd.i8	d0, d8, d19
    b184:	03000001 	movweq	r0, #1
    b188:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
    b18c:	02000000 	andeq	r0, r0, #0
    b190:	54080c23 	strpl	r0, [r8], #-3107	; 0xfffff3dd
    b194:	03000009 	movweq	r0, #9
    b198:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
    b19c:	02000001 	andeq	r0, r0, #1
    b1a0:	1b081023 	blne	20f234 <__RAM_SIZE+0x10f234>
    b1a4:	03000000 	movweq	r0, #0
    b1a8:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
    b1ac:	02000001 	andeq	r0, r0, #1
    b1b0:	ee081423 	cdp	4, 0, cr1, cr8, cr3, {1}
    b1b4:	03000005 	movweq	r0, #5
    b1b8:	4b1b0196 	blmi	6cb818 <__RAM_SIZE+0x5cb818>
    b1bc:	02000001 	andeq	r0, r0, #1
    b1c0:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
    b1c4:	00013f01 	andeq	r3, r1, r1, lsl #30
    b1c8:	00a80a00 	adceq	r0, r8, r0, lsl #20
    b1cc:	0b000000 	bleq	b1d4 <_Min_Stack_Size+0xa1d4>
    b1d0:	00013304 	andeq	r3, r1, r4, lsl #6
    b1d4:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
    b1d8:	0b000000 	bleq	b1e0 <_Min_Stack_Size+0xa1e0>
    b1dc:	00014504 	andeq	r4, r1, r4, lsl #10
    b1e0:	062f0c00 	strteq	r0, [pc], -r0, lsl #24
    b1e4:	9b030000 	blls	cb1ec <SYSTICK_CYCLES+0xa21ad>
    b1e8:	00b40301 	adcseq	r0, r4, r1, lsl #6
    b1ec:	040b0000 	streq	r0, [fp], #-0
    b1f0:	0000007f 	andeq	r0, r0, pc, ror r0
    b1f4:	00034b07 	andeq	r4, r3, r7, lsl #22
    b1f8:	d603d400 	strle	sp, [r3], -r0, lsl #8
    b1fc:	04781001 	ldrbteq	r1, [r8], #-1
    b200:	11080000 	mrsne	r0, (UNDEF: 8)
    b204:	03000009 	movweq	r0, #9
    b208:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
    b20c:	02000000 	andeq	r0, r0, #0
    b210:	84080023 	strhi	r0, [r8], #-35	; 0xffffffdd
    b214:	03000007 	movweq	r0, #7
    b218:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
    b21c:	02000000 	andeq	r0, r0, #0
    b220:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
    b224:	03000001 	movweq	r0, #1
    b228:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    b22c:	02000000 	andeq	r0, r0, #0
    b230:	fb080823 	blx	20d2c6 <__RAM_SIZE+0x10d2c6>
    b234:	03000008 	movweq	r0, #8
    b238:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    b23c:	02000000 	andeq	r0, r0, #0
    b240:	11080c23 	tstne	r8, r3, lsr #24
    b244:	03000004 	movweq	r0, #4
    b248:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    b24c:	02000000 	andeq	r0, r0, #0
    b250:	3f081023 	svccc	0x00081023
    b254:	03000009 	movweq	r0, #9
    b258:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
    b25c:	02000000 	andeq	r0, r0, #0
    b260:	d1081423 	tstle	r8, r3, lsr #8
    b264:	03000021 	movweq	r0, #33	; 0x21
    b268:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
    b26c:	02000000 	andeq	r0, r0, #0
    b270:	0a081823 	beq	211304 <__RAM_SIZE+0x111304>
    b274:	03000006 	movweq	r0, #6
    b278:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
    b27c:	02000000 	andeq	r0, r0, #0
    b280:	9f081c23 	svcls	0x00081c23
    b284:	03000006 	movweq	r0, #6
    b288:	781a01e8 	ldmdavc	sl, {r3, r5, r6, r7, r8}
    b28c:	02000004 	andeq	r0, r0, #4
    b290:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
    b294:	03000001 	movweq	r0, #1
    b298:	781a01e9 	ldmdavc	sl, {r0, r3, r5, r6, r7, r8}
    b29c:	02000004 	andeq	r0, r0, #4
    b2a0:	96082423 	strls	r2, [r8], -r3, lsr #8
    b2a4:	03000005 	movweq	r0, #5
    b2a8:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
    b2ac:	02000001 	andeq	r0, r0, #1
    b2b0:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    b2b4:	03000002 	movweq	r0, #2
    b2b8:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    b2bc:	02000000 	andeq	r0, r0, #0
    b2c0:	46082c23 	strmi	r2, [r8], -r3, lsr #24
    b2c4:	03000002 	movweq	r0, #2
    b2c8:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    b2cc:	02000000 	andeq	r0, r0, #0
    b2d0:	73083023 	movwvc	r3, #32803	; 0x8023
    b2d4:	03000001 	movweq	r0, #1
    b2d8:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    b2dc:	02000000 	andeq	r0, r0, #0
    b2e0:	30083423 	andcc	r3, r8, r3, lsr #8
    b2e4:	03000007 	movweq	r0, #7
    b2e8:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    b2ec:	02000000 	andeq	r0, r0, #0
    b2f0:	eb083823 	bl	219384 <__RAM_SIZE+0x119384>
    b2f4:	03000000 	movweq	r0, #0
    b2f8:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    b2fc:	02000000 	andeq	r0, r0, #0
    b300:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
    b304:	03000003 	movweq	r0, #3
    b308:	8f1b01fb 	svchi	0x001b01fb
    b30c:	02000004 	andeq	r0, r0, #4
    b310:	52084023 	andpl	r4, r8, #35	; 0x23
    b314:	03000001 	movweq	r0, #1
    b318:	3f1b0203 	svccc	0x001b0203
    b31c:	02000001 	andeq	r0, r0, #1
    b320:	07084423 	streq	r4, [r8, -r3, lsr #8]
    b324:	03000001 	movweq	r0, #1
    b328:	a8190204 	ldmdage	r9, {r2, r9}
    b32c:	02000000 	andeq	r0, r0, #0
    b330:	3b084823 	blcc	21d3c4 <__RAM_SIZE+0x11d3c4>
    b334:	03000003 	movweq	r0, #3
    b338:	51190208 	tstpl	r9, r8, lsl #4
    b33c:	02000001 	andeq	r0, r0, #1
    b340:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
    b344:	03000002 	movweq	r0, #2
    b348:	8f1b020e 	svchi	0x001b020e
    b34c:	02000004 	andeq	r0, r0, #4
    b350:	ce086823 	cdpgt	8, 0, cr6, cr8, cr3, {1}
    b354:	03000005 	movweq	r0, #5
    b358:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    b35c:	02000000 	andeq	r0, r0, #0
    b360:	17086c23 	strne	r6, [r8, -r3, lsr #24]
    b364:	03000007 	movweq	r0, #7
    b368:	781a0211 	ldmdavc	sl, {r0, r4, r9}
    b36c:	02000004 	andeq	r0, r0, #4
    b370:	12087023 	andne	r7, r8, #35	; 0x23
    b374:	03000002 	movweq	r0, #2
    b378:	781a0212 	ldmdavc	sl, {r1, r4, r9}
    b37c:	02000004 	andeq	r0, r0, #4
    b380:	fa087423 	blx	228414 <__RAM_SIZE+0x128414>
    b384:	03000006 	movweq	r0, #6
    b388:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
    b38c:	02000000 	andeq	r0, r0, #0
    b390:	c6087823 	strgt	r7, [r8], -r3, lsr #16
    b394:	03000003 	movweq	r0, #3
    b398:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    b39c:	02000000 	andeq	r0, r0, #0
    b3a0:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
    b3a4:	03000005 	movweq	r0, #5
    b3a8:	97190215 			; <UNDEFINED> instruction: 0x97190215
    b3ac:	03000000 	movweq	r0, #0
    b3b0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    b3b4:	000003e8 	andeq	r0, r0, r8, ror #7
    b3b8:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    b3bc:	00000097 	muleq	r0, r7, r0
    b3c0:	01842303 	orreq	r2, r4, r3, lsl #6
    b3c4:	0008e408 	andeq	lr, r8, r8, lsl #8
    b3c8:	021f0300 	andseq	r0, pc, #0, 6
    b3cc:	0004781a 	andeq	r7, r4, sl, lsl r8
    b3d0:	88230300 	stmdahi	r3!, {r8, r9}
    b3d4:	07d50801 	ldrbeq	r0, [r5, r1, lsl #16]
    b3d8:	20030000 	andcs	r0, r3, r0
    b3dc:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    b3e0:	23030000 	movwcs	r0, #12288	; 0x3000
    b3e4:	c108018c 	smlabbgt	r8, ip, r1, r0
    b3e8:	03000002 	movweq	r0, #2
    b3ec:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    b3f0:	03000000 	movweq	r0, #0
    b3f4:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    b3f8:	00000256 	andeq	r0, r0, r6, asr r2
    b3fc:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    b400:	00000097 	muleq	r0, r7, r0
    b404:	01942303 	orrseq	r2, r4, r3, lsl #6
    b408:	00032008 	andeq	r2, r3, r8
    b40c:	02300300 	eorseq	r0, r0, #0, 6
    b410:	00009719 	andeq	r9, r0, r9, lsl r7
    b414:	98230300 	stmdals	r3!, {r8, r9}
    b418:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
    b41c:	33030000 	movwcc	r0, #12288	; 0x3000
    b420:	00971902 	addseq	r1, r7, r2, lsl #18
    b424:	23030000 	movwcs	r0, #12288	; 0x3000
    b428:	0008019c 	muleq	r8, ip, r1
    b42c:	03000000 	movweq	r0, #0
    b430:	741a0235 	ldrvc	r0, [sl], #-565	; 0xfffffdcb
    b434:	03000005 	movweq	r0, #5
    b438:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    b43c:	00001bb7 			; <UNDEFINED> instruction: 0x00001bb7
    b440:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    b444:	000000a8 	andeq	r0, r0, r8, lsr #1
    b448:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    b44c:	001c7708 	andseq	r7, ip, r8, lsl #14
    b450:	023d0300 	eorseq	r0, sp, #0, 6
    b454:	0000a819 	andeq	sl, r0, r9, lsl r8
    b458:	a8230300 	stmdage	r3!, {r8, r9}
    b45c:	1b300801 	blne	c0d468 <__RAM_SIZE+0xb0d468>
    b460:	41030000 	mrsmi	r0, (UNDEF: 3)
    b464:	00a81902 	adceq	r1, r8, r2, lsl #18
    b468:	23030000 	movwcs	r0, #12288	; 0x3000
    b46c:	2e0801ac 	adfcs<illegal precision>p	f0, f0, #4.0
    b470:	0300001d 	movweq	r0, #29
    b474:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
    b478:	03000000 	movweq	r0, #0
    b47c:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    b480:	00001c47 	andeq	r1, r0, r7, asr #24
    b484:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    b488:	000000a8 	andeq	r0, r0, r8, lsr #1
    b48c:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    b490:	0007a808 	andeq	sl, r7, r8, lsl #16
    b494:	024c0300 	subeq	r0, ip, #0, 6
    b498:	0004781a 	andeq	r7, r4, sl, lsl r8
    b49c:	b8230300 	stmdalt	r3!, {r8, r9}
    b4a0:	1d060801 	stcne	8, cr0, [r6, #-4]
    b4a4:	4f030000 	svcmi	0x00030000
    b4a8:	00a81902 	adceq	r1, r8, r2, lsl #18
    b4ac:	23030000 	movwcs	r0, #12288	; 0x3000
    b4b0:	080801bc 	stmdaeq	r8, {r2, r3, r4, r5, r7, r8}
    b4b4:	0300001b 	movweq	r0, #27
    b4b8:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
    b4bc:	03000000 	movweq	r0, #0
    b4c0:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    b4c4:	00001a85 	andeq	r1, r0, r5, lsl #21
    b4c8:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    b4cc:	000000a8 	andeq	r0, r0, r8, lsr #1
    b4d0:	01c42303 	biceq	r2, r4, r3, lsl #6
    b4d4:	001bdb08 	andseq	sp, fp, r8, lsl #22
    b4d8:	02590300 	subseq	r0, r9, #0, 6
    b4dc:	0000a819 	andeq	sl, r0, r9, lsl r8
    b4e0:	c8230300 	stmdagt	r3!, {r8, r9}
    b4e4:	09a90801 	stmibeq	r9!, {r0, fp}
    b4e8:	5d030000 	stcpl	0, cr0, [r3, #-0]
    b4ec:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    b4f0:	23030000 	movwcs	r0, #12288	; 0x3000
    b4f4:	810801cc 	smlabthi	r8, ip, r1, r0
    b4f8:	03000004 	movweq	r0, #4
    b4fc:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
    b500:	03000000 	movweq	r0, #0
    b504:	0001d023 	andeq	sp, r1, r3, lsr #32
    b508:	0164040b 	cmneq	r4, fp, lsl #8
    b50c:	01090000 	mrseq	r0, (UNDEF: 9)
    b510:	0000048f 	andeq	r0, r0, pc, lsl #9
    b514:	0004780a 	andeq	r7, r4, sl, lsl #16
    b518:	00a80a00 	adceq	r0, r8, r0, lsl #20
    b51c:	0b000000 	bleq	b524 <_Min_Stack_Size+0xa524>
    b520:	00047e04 	andeq	r7, r4, r4, lsl #28
    b524:	07980700 	ldreq	r0, [r8, r0, lsl #14]
    b528:	03340000 	teqeq	r4, #0
    b52c:	7410037e 	ldrvc	r0, [r0], #-894	; 0xfffffc82
    b530:	08000005 	stmdaeq	r0, {r0, r2}
    b534:	0000018d 	andeq	r0, r0, sp, lsl #3
    b538:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    b53c:	000000a8 	andeq	r0, r0, r8, lsr #1
    b540:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    b544:	0000087c 	andeq	r0, r0, ip, ror r8
    b548:	1a038503 	bne	ec95c <SYSTICK_CYCLES+0xc391d>
    b54c:	0000015e 	andeq	r0, r0, lr, asr r1
    b550:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    b554:	000006e1 	andeq	r0, r0, r1, ror #13
    b558:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    b55c:	00000097 	muleq	r0, r7, r0
    b560:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    b564:	000004cb 	andeq	r0, r0, fp, asr #9
    b568:	1a038c03 	bne	ee57c <SYSTICK_CYCLES+0xc553d>
    b56c:	00000587 	andeq	r0, r0, r7, lsl #11
    b570:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    b574:	00000162 	andeq	r0, r0, r2, ror #2
    b578:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    b57c:	00000097 	muleq	r0, r7, r0
    b580:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    b584:	00000121 	andeq	r0, r0, r1, lsr #2
    b588:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    b58c:	00000097 	muleq	r0, r7, r0
    b590:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    b594:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    b598:	1a039803 	bne	f15ac <SYSTICK_CYCLES+0xc856d>
    b59c:	00000478 	andeq	r0, r0, r8, ror r4
    b5a0:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    b5a4:	000006c8 	andeq	r0, r0, r8, asr #13
    b5a8:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    b5ac:	00000097 	muleq	r0, r7, r0
    b5b0:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    b5b4:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    b5b8:	1a039d03 	bne	f29cc <SYSTICK_CYCLES+0xc998d>
    b5bc:	00000574 	andeq	r0, r0, r4, ror r5
    b5c0:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    b5c4:	00000685 	andeq	r0, r0, r5, lsl #13
    b5c8:	1a039e03 	bne	f2ddc <SYSTICK_CYCLES+0xc9d9d>
    b5cc:	00000574 	andeq	r0, r0, r4, ror r5
    b5d0:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    b5d4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b5d8:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    b5dc:	00000097 	muleq	r0, r7, r0
    b5e0:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    b5e4:	000009c5 	andeq	r0, r0, r5, asr #19
    b5e8:	1a03a603 	bne	f4dfc <SYSTICK_CYCLES+0xcbdbd>
    b5ec:	00000574 	andeq	r0, r0, r4, ror r5
    b5f0:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    b5f4:	00000425 	andeq	r0, r0, r5, lsr #8
    b5f8:	1a03a703 	bne	f520c <SYSTICK_CYCLES+0xcc1cd>
    b5fc:	00000574 	andeq	r0, r0, r4, ror r5
    b600:	00302302 	eorseq	r2, r0, r2, lsl #6
    b604:	0495040b 	ldreq	r0, [r5], #1035	; 0x40b
    b608:	d40c0000 	strle	r0, [ip], #-0
    b60c:	03000008 	movweq	r0, #8
    b610:	64030286 	strvs	r0, [r3], #-646	; 0xfffffd7a
    b614:	0b000001 	bleq	b620 <_Min_Stack_Size+0xa620>
    b618:	00057a04 	andeq	r7, r5, r4, lsl #20
    b61c:	21460d00 	cmpcs	r6, r0, lsl #26
    b620:	5a040000 	bpl	10b628 <__RAM_SIZE+0xb628>
    b624:	0000a821 	andeq	sl, r0, r1, lsr #16
    b628:	0e010100 	adfeqs	f0, f1, f0
    b62c:	0000111b 	andeq	r1, r0, fp, lsl r1
    b630:	21013905 	tstcs	r1, r5, lsl #18
    b634:	00000587 	andeq	r0, r0, r7, lsl #11
    b638:	b20e0101 	andlt	r0, lr, #1073741824	; 0x40000000
    b63c:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    b640:	87210140 	strhi	r0, [r1, -r0, asr #2]!
    b644:	01000005 	tsteq	r0, r5
    b648:	00a80f01 	adceq	r0, r8, r1, lsl #30
    b64c:	05c90000 	strbeq	r0, [r9]
    b650:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    b654:	00000000 	andeq	r0, r0, r0
    b658:	1c020e00 	stcne	14, cr0, [r2], {-0}
    b65c:	5b050000 	blpl	14b664 <__RAM_SIZE+0x4b664>
    b660:	05b92101 	ldreq	r2, [r9, #257]!	; 0x101
    b664:	01010000 	mrseq	r0, (UNDEF: 1)
    b668:	001aa90e 	andseq	sl, sl, lr, lsl #18
    b66c:	017f0500 	cmneq	pc, r0, lsl #10
    b670:	00009721 	andeq	r9, r0, r1, lsr #14
    b674:	0f010100 	svceq	0x00010100
    b678:	00000587 	andeq	r0, r0, r7, lsl #11
    b67c:	000005f7 	strdeq	r0, [r0], -r7
    b680:	00002910 	andeq	r2, r0, r0, lsl r9
    b684:	0e001f00 	cdpeq	15, 0, cr1, cr0, cr0, {0}
    b688:	00001d9a 	muleq	r0, sl, sp
    b68c:	21018705 	tstcs	r1, r5, lsl #14
    b690:	000005e7 	andeq	r0, r0, r7, ror #11
    b694:	320e0101 	andcc	r0, lr, #1073741824	; 0x40000000
    b698:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    b69c:	a321018e 			; <UNDEFINED> instruction: 0xa321018e
    b6a0:	01000000 	mrseq	r0, (UNDEF: 0)
    b6a4:	1c760e01 	ldclne	14, cr0, [r6], #-4
    b6a8:	d0050000 	andle	r0, r5, r0
    b6ac:	00a82101 	adceq	r2, r8, r1, lsl #2
    b6b0:	01010000 	mrseq	r0, (UNDEF: 1)
    b6b4:	001ac50e 	andseq	ip, sl, lr, lsl #10
    b6b8:	02030500 	andeq	r0, r3, #0, 10
    b6bc:	0000a821 	andeq	sl, r0, r1, lsr #16
    b6c0:	0e010100 	adfeqs	f0, f1, f0
    b6c4:	00001cd8 	ldrdeq	r1, [r0], -r8
    b6c8:	21020905 	tstcs	r2, r5, lsl #18
    b6cc:	000000a8 	andeq	r0, r0, r8, lsr #1
    b6d0:	8c0e0101 	stfhis	f0, [lr], {1}
    b6d4:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    b6d8:	a821020f 	stmdage	r1!, {r0, r1, r2, r3, r9}
    b6dc:	01000000 	mrseq	r0, (UNDEF: 0)
    b6e0:	05870f01 	streq	r0, [r7, #3841]	; 0xf01
    b6e4:	06610000 	strbteq	r0, [r1], -r0
    b6e8:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    b6ec:	07000000 	streq	r0, [r0, -r0]
    b6f0:	1cb50e00 	ldcne	14, cr0, [r5]
    b6f4:	10050000 	andne	r0, r5, r0
    b6f8:	06512102 	ldrbeq	r2, [r1], -r2, lsl #2
    b6fc:	01010000 	mrseq	r0, (UNDEF: 1)
    b700:	10bd0111 	adcsne	r0, sp, r1, lsl r1
    b704:	b2010000 	andlt	r0, r1, #0
    b708:	64010702 	strvs	r0, [r1], #-1794	; 0xfffff8fe
    b70c:	20100024 	andscs	r0, r0, r4, lsr #32
    b710:	4d100027 	ldcmi	0, cr0, [r0, #-156]	; 0xffffff64
    b714:	01000044 	tsteq	r0, r4, asr #32
    b718:	00000ce5 	andeq	r0, r0, r5, ror #25
    b71c:	0019cf12 	andseq	ip, r9, r2, lsl pc
    b720:	02b20100 	adcseq	r0, r2, #0, 2
    b724:	0005872f 	andeq	r8, r5, pc, lsr #14
    b728:	00447d00 	subeq	r7, r4, r0, lsl #26
    b72c:	00446d00 	subeq	r6, r4, r0, lsl #26
    b730:	10fa1200 	rscsne	r1, sl, r0, lsl #4
    b734:	b2010000 	andlt	r0, r1, #0
    b738:	00a84102 	adceq	r4, r8, r2, lsl #2
    b73c:	44e90000 	strbtmi	r0, [r9], #0
    b740:	44dd0000 	ldrbmi	r0, [sp], #0
    b744:	e3130000 	tst	r3, #0
    b748:	01000002 	tsteq	r0, r2
    b74c:	971102b5 			; <UNDEFINED> instruction: 0x971102b5
    b750:	40000000 	andmi	r0, r0, r0
    b754:	3c000045 	stccc	0, cr0, [r0], {69}	; 0x45
    b758:	13000045 	movwne	r0, #69	; 0x45
    b75c:	00002138 	andeq	r2, r0, r8, lsr r1
    b760:	1102b601 	tstne	r2, r1, lsl #12
    b764:	00000097 	muleq	r0, r7, r0
    b768:	00004560 	andeq	r4, r0, r0, ror #10
    b76c:	0000455e 	andeq	r4, r0, lr, asr r5
    b770:	00215b13 	eoreq	r5, r1, r3, lsl fp
    b774:	02b70100 	adcseq	r0, r7, #0, 2
    b778:	0000a811 	andeq	sl, r0, r1, lsl r8
    b77c:	00457a00 	subeq	r7, r5, r0, lsl #20
    b780:	00457400 	subeq	r7, r5, r0, lsl #8
    b784:	20681300 	rsbcs	r1, r8, r0, lsl #6
    b788:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    b78c:	00a81102 	adceq	r1, r8, r2, lsl #2
    b790:	45aa0000 	strmi	r0, [sl, #0]!
    b794:	45a40000 	strmi	r0, [r4, #0]!
    b798:	24130000 	ldrcs	r0, [r3], #-0
    b79c:	01000020 	tsteq	r0, r0, lsr #32
    b7a0:	a81102b9 	ldmdage	r1, {r0, r3, r4, r5, r7, r9}
    b7a4:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    b7a8:	d3000045 	movwle	r0, #69	; 0x45
    b7ac:	13000045 	movwne	r0, #69	; 0x45
    b7b0:	000006a9 	andeq	r0, r0, r9, lsr #13
    b7b4:	1202ba01 	andne	fp, r2, #4096	; 0x1000
    b7b8:	00000587 	andeq	r0, r0, r7, lsl #11
    b7bc:	00004608 	andeq	r4, r0, r8, lsl #12
    b7c0:	00004602 	andeq	r4, r0, r2, lsl #12
    b7c4:	0001a313 	andeq	sl, r1, r3, lsl r3
    b7c8:	02bb0100 	adcseq	r0, fp, #0, 2
    b7cc:	00058712 	andeq	r8, r5, r2, lsl r7
    b7d0:	00463400 	subeq	r3, r6, r0, lsl #8
    b7d4:	00463200 	subeq	r3, r6, r0, lsl #4
    b7d8:	1fb01300 	svcne	0x00b01300
    b7dc:	bc010000 	stclt	0, cr0, [r1], {-0}
    b7e0:	05871202 	streq	r1, [r7, #514]	; 0x202
    b7e4:	46490000 	strbmi	r0, [r9], -r0
    b7e8:	46470000 	strbmi	r0, [r7], -r0
    b7ec:	88140000 	ldmdahi	r4, {}	; <UNPREDICTABLE>
    b7f0:	06000003 	streq	r0, [r0], -r3
    b7f4:	13000009 	movwne	r0, #9
    b7f8:	00000ee2 	andeq	r0, r0, r2, ror #29
    b7fc:	0502ea01 	streq	lr, [r2, #-2561]	; 0xfffff5ff
    b800:	00000097 	muleq	r0, r7, r0
    b804:	00004664 	andeq	r4, r0, r4, ror #12
    b808:	0000465c 	andeq	r4, r0, ip, asr r6
    b80c:	000ded15 	andeq	lr, sp, r5, lsl sp
    b810:	00247000 	eoreq	r7, r4, r0
    b814:	70000210 	andvc	r0, r0, r0, lsl r2
    b818:	76100024 	ldrvc	r0, [r0], -r4, lsr #32
    b81c:	01100024 	tsteq	r0, r4, lsr #32
    b820:	ca0502ea 	bgt	14c3d0 <__RAM_SIZE+0x4c3d0>
    b824:	16000007 	strne	r0, [r0], -r7
    b828:	00000e00 	andeq	r0, r0, r0, lsl #28
    b82c:	0000469e 	muleq	r0, lr, r6
    b830:	00004698 	muleq	r0, r8, r6
    b834:	000e3617 	andeq	r3, lr, r7, lsl r6
    b838:	00247000 	eoreq	r7, r4, r0
    b83c:	70000510 	andvc	r0, r0, r0, lsl r5
    b840:	74100024 	ldrvc	r0, [r0], #-36	; 0xffffffdc
    b844:	02100024 	andseq	r0, r0, #36	; 0x24
    b848:	16130256 			; <UNDEFINED> instruction: 0x16130256
    b84c:	00000e49 	andeq	r0, r0, r9, asr #28
    b850:	000046c9 	andeq	r4, r0, r9, asr #13
    b854:	000046c7 	andeq	r4, r0, r7, asr #13
    b858:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
    b85c:	8000000e 	andhi	r0, r0, lr
    b860:	01100024 	tsteq	r0, r4, lsr #32
    b864:	00248000 	eoreq	r8, r4, r0
    b868:	00248410 	eoreq	r8, r4, r0, lsl r4
    b86c:	02ea0110 	rsceq	r0, sl, #16, 2
    b870:	0007f305 	andeq	pc, r7, r5, lsl #6
    b874:	0e1d1800 	cdpeq	8, 1, cr1, cr13, cr0, {0}
    b878:	46de0000 	ldrbmi	r0, [lr], r0
    b87c:	46dc0000 	ldrbmi	r0, [ip], r0
    b880:	15000000 	strne	r0, [r0, #-0]
    b884:	00000e0e 	andeq	r0, r0, lr, lsl #28
    b888:	10002570 	andne	r2, r0, r0, ror r5
    b88c:	25700001 	ldrbcs	r0, [r0, #-1]!
    b890:	25741000 	ldrbcs	r1, [r4, #-0]!
    b894:	ea011000 	b	4f89c <SYSTICK_CYCLES+0x2685d>
    b898:	081c0502 	ldmdaeq	ip, {r1, r8, sl}
    b89c:	1d180000 	ldcne	0, cr0, [r8, #-0]
    b8a0:	f300000e 	vhadd.u8	d0, d0, d14
    b8a4:	f1000046 	cps	#6
    b8a8:	00000046 	andeq	r0, r0, r6, asr #32
    b8ac:	000ded15 	andeq	lr, sp, r5, lsl sp
    b8b0:	00257a00 	eoreq	r7, r5, r0, lsl #20
    b8b4:	7a000110 	bvc	bcfc <_Min_Stack_Size+0xacfc>
    b8b8:	80100025 	andshi	r0, r0, r5, lsr #32
    b8bc:	01100025 	tsteq	r0, r5, lsr #32
    b8c0:	6a0502ea 	bvs	14c470 <__RAM_SIZE+0x4c470>
    b8c4:	16000008 	strne	r0, [r0], -r8
    b8c8:	00000e00 	andeq	r0, r0, r0, lsl #28
    b8cc:	00004708 	andeq	r4, r0, r8, lsl #14
    b8d0:	00004706 	andeq	r4, r0, r6, lsl #14
    b8d4:	000e3617 	andeq	r3, lr, r7, lsl r6
    b8d8:	00257a00 	eoreq	r7, r5, r0, lsl #20
    b8dc:	7a000410 	bvc	c924 <_Min_Stack_Size+0xb924>
    b8e0:	7e100025 	cdpvc	0, 1, cr0, cr0, cr5, {1}
    b8e4:	02100025 	andseq	r0, r0, #37	; 0x25
    b8e8:	16130256 			; <UNDEFINED> instruction: 0x16130256
    b8ec:	00000e49 	andeq	r0, r0, r9, asr #28
    b8f0:	0000471d 	andeq	r4, r0, sp, lsl r7
    b8f4:	0000471b 	andeq	r4, r0, fp, lsl r7
    b8f8:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
    b8fc:	9000000e 	andls	r0, r0, lr
    b900:	01100025 	tsteq	r0, r5, lsr #32
    b904:	00259000 	eoreq	r9, r5, r0
    b908:	00259410 	eoreq	r9, r5, r0, lsl r4
    b90c:	02ea0110 	rsceq	r0, sl, #16, 2
    b910:	00089305 	andeq	r9, r8, r5, lsl #6
    b914:	0e1d1800 	cdpeq	8, 1, cr1, cr13, cr0, {0}
    b918:	47320000 	ldrmi	r0, [r2, -r0]!
    b91c:	47300000 	ldrmi	r0, [r0, -r0]!
    b920:	15000000 	strne	r0, [r0, #-0]
    b924:	00000ded 	andeq	r0, r0, sp, ror #27
    b928:	1000259a 	mulne	r0, sl, r5
    b92c:	259a0001 	ldrcs	r0, [sl, #1]
    b930:	25a21000 	strcs	r1, [r2, #0]!
    b934:	ea011000 	b	4f93c <SYSTICK_CYCLES+0x268fd>
    b938:	08e10502 	stmiaeq	r1!, {r1, r8, sl}^
    b93c:	00160000 	andseq	r0, r6, r0
    b940:	4700000e 	strmi	r0, [r0, -lr]
    b944:	45000047 	strmi	r0, [r0, #-71]	; 0xffffffb9
    b948:	17000047 	strne	r0, [r0, -r7, asr #32]
    b94c:	00000e36 	andeq	r0, r0, r6, lsr lr
    b950:	1000259a 	mulne	r0, sl, r5
    b954:	259a0004 	ldrcs	r0, [sl, #4]
    b958:	259e1000 	ldrcs	r1, [lr]
    b95c:	56021000 	strpl	r1, [r2], -r0
    b960:	49161302 	ldmdbmi	r6, {r1, r8, r9, ip}
    b964:	5c00000e 	stcpl	0, cr0, [r0], {14}
    b968:	5a000047 	bpl	ba8c <_Min_Stack_Size+0xaa8c>
    b96c:	00000047 	andeq	r0, r0, r7, asr #32
    b970:	257a1900 	ldrbcs	r1, [sl, #-2304]!	; 0xfffff700
    b974:	0e781000 	cdpeq	0, 7, cr1, cr8, cr0, {0}
    b978:	08f50000 	ldmeq	r5!, {}^	; <UNPREDICTABLE>
    b97c:	011a0000 	tsteq	sl, r0
    b980:	00740250 	rsbseq	r0, r4, r0, asr r2
    b984:	259a1b00 	ldrcs	r1, [sl, #2816]	; 0xb00
    b988:	0e871000 	cdpeq	0, 8, cr1, cr7, cr0, {0}
    b98c:	011a0000 	tsteq	sl, r0
    b990:	00740250 	rsbseq	r0, r4, r0, asr r2
    b994:	a0140000 	andsge	r0, r4, r0
    b998:	ae000003 	cdpge	0, 0, cr0, cr0, cr3, {0}
    b99c:	1300000a 	movwne	r0, #10
    b9a0:	00000ee2 	andeq	r0, r0, r2, ror #29
    b9a4:	0904a001 	stmdbeq	r4, {r0, sp, pc}
    b9a8:	00000097 	muleq	r0, r7, r0
    b9ac:	00004777 	andeq	r4, r0, r7, ror r7
    b9b0:	0000476f 	andeq	r4, r0, pc, ror #14
    b9b4:	000ded15 	andeq	lr, sp, r5, lsl sp
    b9b8:	0024e600 	eoreq	lr, r4, r0, lsl #12
    b9bc:	e6000310 			; <UNDEFINED> instruction: 0xe6000310
    b9c0:	ec100024 	ldc	0, cr0, [r0], {36}	; 0x24
    b9c4:	01100024 	tsteq	r0, r4, lsr #32
    b9c8:	720904a0 	andvc	r0, r9, #160, 8	; 0xa0000000
    b9cc:	16000009 	strne	r0, [r0], -r9
    b9d0:	00000e00 	andeq	r0, r0, r0, lsl #28
    b9d4:	000047b1 			; <UNDEFINED> instruction: 0x000047b1
    b9d8:	000047ab 	andeq	r4, r0, fp, lsr #15
    b9dc:	000e3617 	andeq	r3, lr, r7, lsl r6
    b9e0:	0024e600 	eoreq	lr, r4, r0, lsl #12
    b9e4:	e6000610 			; <UNDEFINED> instruction: 0xe6000610
    b9e8:	ea100024 	b	40ba80 <__RAM_SIZE+0x30ba80>
    b9ec:	02100024 	andseq	r0, r0, #36	; 0x24
    b9f0:	16130256 			; <UNDEFINED> instruction: 0x16130256
    b9f4:	00000e49 	andeq	r0, r0, r9, asr #28
    b9f8:	000047dc 	ldrdeq	r4, [r0], -ip
    b9fc:	000047da 	ldrdeq	r4, [r0], -sl
    ba00:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
    ba04:	f800000e 			; <UNDEFINED> instruction: 0xf800000e
    ba08:	01100024 	tsteq	r0, r4, lsr #32
    ba0c:	0024f800 	eoreq	pc, r4, r0, lsl #16
    ba10:	0024fc10 	eoreq	pc, r4, r0, lsl ip	; <UNPREDICTABLE>
    ba14:	04a00110 	strteq	r0, [r0], #272	; 0x110
    ba18:	00099b09 	andeq	r9, r9, r9, lsl #22
    ba1c:	0e1d1800 	cdpeq	8, 1, cr1, cr13, cr0, {0}
    ba20:	47f10000 	ldrbmi	r0, [r1, r0]!
    ba24:	47ef0000 	strbmi	r0, [pc, r0]!
    ba28:	15000000 	strne	r0, [r0, #-0]
    ba2c:	00000e0e 	andeq	r0, r0, lr, lsl #28
    ba30:	100026a4 	andne	r2, r0, r4, lsr #13
    ba34:	26a40001 	strtcs	r0, [r4], r1
    ba38:	26a81000 	strtcs	r1, [r8], r0
    ba3c:	a0011000 	andge	r1, r1, r0
    ba40:	09c40904 	stmibeq	r4, {r2, r8, fp}^
    ba44:	1d180000 	ldcne	0, cr0, [r8, #-0]
    ba48:	0600000e 	streq	r0, [r0], -lr
    ba4c:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
    ba50:	00000048 	andeq	r0, r0, r8, asr #32
    ba54:	000ded15 	andeq	lr, sp, r5, lsl sp
    ba58:	0026ae00 	eoreq	sl, r6, r0, lsl #28
    ba5c:	ae000110 	fltges	f0, r0
    ba60:	b4100026 	ldrlt	r0, [r0], #-38	; 0xffffffda
    ba64:	01100026 	tsteq	r0, r6, lsr #32
    ba68:	120904a0 	andne	r0, r9, #160, 8	; 0xa0000000
    ba6c:	1600000a 	strne	r0, [r0], -sl
    ba70:	00000e00 	andeq	r0, r0, r0, lsl #28
    ba74:	0000481b 	andeq	r4, r0, fp, lsl r8
    ba78:	00004819 	andeq	r4, r0, r9, lsl r8
    ba7c:	000e3617 	andeq	r3, lr, r7, lsl r6
    ba80:	0026ae00 	eoreq	sl, r6, r0, lsl #28
    ba84:	ae000410 	cfmvdlrge	mvd0, r0
    ba88:	b2100026 	andslt	r0, r0, #38	; 0x26
    ba8c:	02100026 	andseq	r0, r0, #38	; 0x26
    ba90:	16130256 			; <UNDEFINED> instruction: 0x16130256
    ba94:	00000e49 	andeq	r0, r0, r9, asr #28
    ba98:	00004830 	andeq	r4, r0, r0, lsr r8
    ba9c:	0000482e 	andeq	r4, r0, lr, lsr #16
    baa0:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
    baa4:	c400000e 	strgt	r0, [r0], #-14
    baa8:	01100026 	tsteq	r0, r6, lsr #32
    baac:	0026c400 	eoreq	ip, r6, r0, lsl #8
    bab0:	0026c810 	eoreq	ip, r6, r0, lsl r8
    bab4:	04a00110 	strteq	r0, [r0], #272	; 0x110
    bab8:	000a3b09 	andeq	r3, sl, r9, lsl #22
    babc:	0e1d1800 	cdpeq	8, 1, cr1, cr13, cr0, {0}
    bac0:	48450000 	stmdami	r5, {}^	; <UNPREDICTABLE>
    bac4:	48430000 	stmdami	r3, {}^	; <UNPREDICTABLE>
    bac8:	15000000 	strne	r0, [r0, #-0]
    bacc:	00000ded 	andeq	r0, r0, sp, ror #27
    bad0:	100026ce 	andne	r2, r0, lr, asr #13
    bad4:	26ce0001 	strbcs	r0, [lr], r1
    bad8:	26d61000 	ldrbcs	r1, [r6], r0
    badc:	a0011000 	andge	r1, r1, r0
    bae0:	0a890904 	beq	fe24def8 <__RAM_segment_used_end__+0xc614def8>
    bae4:	00160000 	andseq	r0, r6, r0
    bae8:	5a00000e 	bpl	bb28 <_Min_Stack_Size+0xab28>
    baec:	58000048 	stmdapl	r0, {r3, r6}
    baf0:	17000048 	strne	r0, [r0, -r8, asr #32]
    baf4:	00000e36 	andeq	r0, r0, r6, lsr lr
    baf8:	100026ce 	andne	r2, r0, lr, asr #13
    bafc:	26ce0004 	strbcs	r0, [lr], r4
    bb00:	26d21000 	ldrbcs	r1, [r2], r0
    bb04:	56021000 	strpl	r1, [r2], -r0
    bb08:	49161302 	ldmdbmi	r6, {r1, r8, r9, ip}
    bb0c:	6f00000e 	svcvs	0x0000000e
    bb10:	6d000048 	stcvs	0, cr0, [r0, #-288]	; 0xfffffee0
    bb14:	00000048 	andeq	r0, r0, r8, asr #32
    bb18:	26ae1900 	strtcs	r1, [lr], r0, lsl #18
    bb1c:	0e781000 	cdpeq	0, 7, cr1, cr8, cr0, {0}
    bb20:	0a9d0000 	beq	fe74bb28 <__RAM_segment_used_end__+0xc664bb28>
    bb24:	011a0000 	tsteq	sl, r0
    bb28:	00750250 	rsbseq	r0, r5, r0, asr r2
    bb2c:	26ce1b00 	strbcs	r1, [lr], r0, lsl #22
    bb30:	0e871000 	cdpeq	0, 8, cr1, cr7, cr0, {0}
    bb34:	011a0000 	tsteq	sl, r0
    bb38:	00750250 	rsbseq	r0, r5, r0, asr r2
    bb3c:	d0150000 	andsle	r0, r5, r0
    bb40:	1400000d 	strne	r0, [r0], #-13
    bb44:	01100025 	tsteq	r0, r5, lsr #32
    bb48:	00251400 	eoreq	r1, r5, r0, lsl #8
    bb4c:	00253010 	eoreq	r3, r5, r0, lsl r0
    bb50:	04bb0110 	ldrteq	r0, [fp], #272	; 0x110
    bb54:	000b650d 	andeq	r6, fp, sp, lsl #10
    bb58:	0ddf1600 	ldcleq	6, cr1, [pc]	; bb60 <_Min_Stack_Size+0xab60>
    bb5c:	48840000 	stmmi	r4, {}	; <UNPREDICTABLE>
    bb60:	48820000 	stmmi	r2, {}	; <UNPREDICTABLE>
    bb64:	57150000 	ldrpl	r0, [r5, -r0]
    bb68:	2000000e 	andcs	r0, r0, lr
    bb6c:	01100025 	tsteq	r0, r5, lsr #32
    bb70:	00252000 	eoreq	r2, r5, r0
    bb74:	00252410 	eoreq	r2, r5, r0, lsl r4
    bb78:	02660210 	rsbeq	r0, r6, #16, 4
    bb7c:	000aff09 	andeq	pc, sl, r9, lsl #30
    bb80:	0e6a1600 	cdpeq	6, 6, cr1, cr10, cr0, {0}
    bb84:	48990000 	ldmmi	r9, {}	; <UNPREDICTABLE>
    bb88:	48970000 	ldmmi	r7, {}	; <UNPREDICTABLE>
    bb8c:	15000000 	strne	r0, [r0, #-0]
    bb90:	00000e36 	andeq	r0, r0, r6, lsr lr
    bb94:	10002526 	andne	r2, r0, r6, lsr #10
    bb98:	25260001 	strcs	r0, [r6, #-1]!
    bb9c:	252a1000 	strcs	r1, [sl, #-0]!
    bba0:	68021000 	stmdavs	r2, {ip}
    bba4:	0b281a02 	bleq	a123b4 <__RAM_SIZE+0x9123b4>
    bba8:	49160000 	ldmdbmi	r6, {}	; <UNPREDICTABLE>
    bbac:	ae00000e 	cdpge	0, 0, cr0, cr0, cr14, {0}
    bbb0:	ac000048 	stcge	0, cr0, [r0], {72}	; 0x48
    bbb4:	00000048 	andeq	r0, r0, r8, asr #32
    bbb8:	000e2b1c 	andeq	r2, lr, ip, lsl fp
    bbbc:	00252a00 	eoreq	r2, r5, r0, lsl #20
    bbc0:	2a000310 	bcs	c808 <_Min_Stack_Size+0xb808>
    bbc4:	2c100025 	ldccs	0, cr0, [r0], {37}	; 0x25
    bbc8:	02100025 	andseq	r0, r0, #37	; 0x25
    bbcc:	1709026c 	strne	r0, [r9, -ip, ror #4]
    bbd0:	00000e0e 	andeq	r0, r0, lr, lsl #28
    bbd4:	1000252c 	andne	r2, r0, ip, lsr #10
    bbd8:	252c0001 	strcs	r0, [ip, #-1]!
    bbdc:	25301000 	ldrcs	r1, [r0, #-0]!
    bbe0:	6e021000 	cdpvs	0, 0, cr1, cr2, cr0, {0}
    bbe4:	1d180902 	vldrne.16	s0, [r8, #-4]	; <UNPREDICTABLE>
    bbe8:	c300000e 	movwgt	r0, #14
    bbec:	c1000048 	tstgt	r0, r8, asr #32
    bbf0:	00000048 	andeq	r0, r0, r8, asr #32
    bbf4:	0dd01500 	cfldr64eq	mvdx1, [r0]
    bbf8:	25f60000 	ldrbcs	r0, [r6, #0]!
    bbfc:	00011000 	andeq	r1, r1, r0
    bc00:	100025f6 	strdne	r2, [r0], -r6
    bc04:	10002614 	andne	r2, r0, r4, lsl r6
    bc08:	1103c501 	tstne	r3, r1, lsl #10
    bc0c:	00000c1c 	andeq	r0, r0, ip, lsl ip
    bc10:	000ddf16 	andeq	sp, sp, r6, lsl pc
    bc14:	0048d800 	subeq	sp, r8, r0, lsl #16
    bc18:	0048d600 	subeq	sp, r8, r0, lsl #12
    bc1c:	0e571500 	cdpeq	5, 5, cr1, cr7, cr0, {0}
    bc20:	26020000 	strcs	r0, [r2], -r0
    bc24:	00011000 	andeq	r1, r1, r0
    bc28:	10002602 	andne	r2, r0, r2, lsl #12
    bc2c:	10002606 	andne	r2, r0, r6, lsl #12
    bc30:	09026602 	stmdbeq	r2, {r1, r9, sl, sp, lr}
    bc34:	00000bb6 			; <UNDEFINED> instruction: 0x00000bb6
    bc38:	000e6a16 	andeq	r6, lr, r6, lsl sl
    bc3c:	0048ed00 	subeq	lr, r8, r0, lsl #26
    bc40:	0048eb00 	subeq	lr, r8, r0, lsl #22
    bc44:	36150000 	ldrcc	r0, [r5], -r0
    bc48:	0a00000e 	beq	bc88 <_Min_Stack_Size+0xac88>
    bc4c:	01100026 	tsteq	r0, r6, lsr #32
    bc50:	00260a00 	eoreq	r0, r6, r0, lsl #20
    bc54:	00260e10 	eoreq	r0, r6, r0, lsl lr
    bc58:	02680210 	rsbeq	r0, r8, #16, 4
    bc5c:	000bdf1a 	andeq	sp, fp, sl, lsl pc
    bc60:	0e491600 	cdpeq	6, 4, cr1, cr9, cr0, {0}
    bc64:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    bc68:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    bc6c:	1c000000 	stcne	0, cr0, [r0], {-0}
    bc70:	00000e2b 	andeq	r0, r0, fp, lsr #28
    bc74:	1000260e 	andne	r2, r0, lr, lsl #12
    bc78:	260e0003 	strcs	r0, [lr], -r3
    bc7c:	26101000 	ldrcs	r1, [r0], -r0
    bc80:	6c021000 	stcvs	0, cr1, [r2], {-0}
    bc84:	0e170902 	vnmlseq.f16	s0, s14, s4	; <UNPREDICTABLE>
    bc88:	1000000e 	andne	r0, r0, lr
    bc8c:	01100026 	tsteq	r0, r6, lsr #32
    bc90:	00261000 	eoreq	r1, r6, r0
    bc94:	00261410 	eoreq	r1, r6, r0, lsl r4
    bc98:	026e0210 	rsbeq	r0, lr, #16, 4
    bc9c:	0e1d1809 	cdpeq	8, 1, cr1, cr13, cr9, {0}
    bca0:	49170000 	ldmdbmi	r7, {}	; <UNPREDICTABLE>
    bca4:	49150000 	ldmdbmi	r5, {}	; <UNPREDICTABLE>
    bca8:	00000000 	andeq	r0, r0, r0
    bcac:	000dd015 	andeq	sp, sp, r5, lsl r0
    bcb0:	00265e00 	eoreq	r5, r6, r0, lsl #28
    bcb4:	5e000110 	fltpls	f0, r0
    bcb8:	7e100026 	cdpvc	0, 1, cr0, cr0, cr6, {1}
    bcbc:	01100026 	tsteq	r0, r6, lsr #32
    bcc0:	d30d0460 	movwle	r0, #54368	; 0xd460
    bcc4:	1600000c 	strne	r0, [r0], -ip
    bcc8:	00000ddf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    bccc:	0000492c 	andeq	r4, r0, ip, lsr #18
    bcd0:	0000492a 	andeq	r4, r0, sl, lsr #18
    bcd4:	000e5715 	andeq	r5, lr, r5, lsl r7
    bcd8:	00266a00 	eoreq	r6, r6, r0, lsl #20
    bcdc:	6a000110 	bvs	c124 <_Min_Stack_Size+0xb124>
    bce0:	6e100026 	cdpvs	0, 1, cr0, cr0, cr6, {1}
    bce4:	02100026 	andseq	r0, r0, #38	; 0x26
    bce8:	6d090266 	sfmvs	f0, 4, [r9, #-408]	; 0xfffffe68
    bcec:	1600000c 	strne	r0, [r0], -ip
    bcf0:	00000e6a 	andeq	r0, r0, sl, ror #28
    bcf4:	00004941 	andeq	r4, r0, r1, asr #18
    bcf8:	0000493f 	andeq	r4, r0, pc, lsr r9
    bcfc:	0e361500 	cfabs32eq	mvfx1, mvfx6
    bd00:	26740000 	ldrbtcs	r0, [r4], -r0
    bd04:	00011000 	andeq	r1, r1, r0
    bd08:	10002674 	andne	r2, r0, r4, ror r6
    bd0c:	10002678 	andne	r2, r0, r8, ror r6
    bd10:	1a026802 	bne	a5d20 <SYSTICK_CYCLES+0x7cce1>
    bd14:	00000c96 	muleq	r0, r6, ip
    bd18:	000e4916 	andeq	r4, lr, r6, lsl r9
    bd1c:	00495600 	subeq	r5, r9, r0, lsl #12
    bd20:	00495400 	subeq	r5, r9, r0, lsl #8
    bd24:	2b1c0000 	blcs	70bd2c <__RAM_SIZE+0x60bd2c>
    bd28:	7800000e 	stmdavc	r0, {r1, r2, r3}
    bd2c:	03100026 	tsteq	r0, #38	; 0x26
    bd30:	00267800 	eoreq	r7, r6, r0, lsl #16
    bd34:	00267a10 	eoreq	r7, r6, r0, lsl sl
    bd38:	026c0210 	rsbeq	r0, ip, #16, 4
    bd3c:	0e0e1709 	cdpeq	7, 0, cr1, cr14, cr9, {0}
    bd40:	267a0000 	ldrbtcs	r0, [sl], -r0
    bd44:	00011000 	andeq	r1, r1, r0
    bd48:	1000267a 	andne	r2, r0, sl, ror r6
    bd4c:	1000267e 	andne	r2, r0, lr, ror r6
    bd50:	09026e02 	stmdbeq	r2, {r1, r9, sl, fp, sp, lr}
    bd54:	000e1d18 	andeq	r1, lr, r8, lsl sp
    bd58:	00496b00 	subeq	r6, r9, r0, lsl #22
    bd5c:	00496900 	subeq	r6, r9, r0, lsl #18
    bd60:	1b000000 	blne	bd68 <_Min_Stack_Size+0xad68>
    bd64:	1000254a 	andne	r2, r0, sl, asr #10
    bd68:	00000e96 	muleq	r0, r6, lr
    bd6c:	0350011a 	cmpeq	r0, #-2147483642	; 0x80000006
    bd70:	0000cc74 	andeq	ip, r0, r4, ror ip
    bd74:	1e011d00 	cdpne	13, 0, cr1, cr1, cr0, {0}
    bd78:	01000021 	tsteq	r0, r1, lsr #32
    bd7c:	00010752 	andeq	r0, r1, r2, asr r7
    bd80:	00000000 	andeq	r0, r0, r0
    bd84:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    bd88:	01000049 	tsteq	r0, r9, asr #32
    bd8c:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bd90:	0019cf1e 	andseq	ip, r9, lr, lsl pc
    bd94:	2c520100 	ldfcse	f0, [r2], {-0}
    bd98:	00000587 	andeq	r0, r0, r7, lsl #11
    bd9c:	000049a6 	andeq	r4, r0, r6, lsr #19
    bda0:	0000499e 	muleq	r0, lr, r9
    bda4:	000ee213 	andeq	lr, lr, r3, lsl r2
    bda8:	028e0100 	addeq	r0, lr, #0, 2
    bdac:	00009701 	andeq	r9, r0, r1, lsl #14
    bdb0:	0049e200 	subeq	lr, r9, r0, lsl #4
    bdb4:	0049e000 	subeq	lr, r9, r0
    bdb8:	10fa1300 	rscsne	r1, sl, r0, lsl #6
    bdbc:	90010000 	andls	r0, r1, r0
    bdc0:	00a80d02 	adceq	r0, r8, r2, lsl #26
    bdc4:	49f70000 	ldmibmi	r7!, {}^	; <UNPREDICTABLE>
    bdc8:	49f50000 	ldmibmi	r5!, {}^	; <UNPREDICTABLE>
    bdcc:	ed150000 	ldc	0, cr0, [r5, #-0]
    bdd0:	0000000d 	andeq	r0, r0, sp
    bdd4:	03000000 	movweq	r0, #0
	...
    bde0:	02930100 	addseq	r0, r3, #0, 2
    bde4:	000d8c05 	andeq	r8, sp, r5, lsl #24
    bde8:	0e001600 	cfmadd32eq	mvax0, mvfx1, mvfx0, mvfx0
    bdec:	4a0e0000 	bmi	38bdf4 <__RAM_SIZE+0x28bdf4>
    bdf0:	4a0c0000 	bmi	30bdf8 <__RAM_SIZE+0x20bdf8>
    bdf4:	36170000 	ldrcc	r0, [r7], -r0
    bdf8:	0000000e 	andeq	r0, r0, lr
    bdfc:	06000000 	streq	r0, [r0], -r0
	...
    be08:	02560200 	subseq	r0, r6, #0, 4
    be0c:	0e491613 	mcreq	6, 2, r1, cr9, cr3, {0}
    be10:	4a230000 	bmi	8cbe18 <__RAM_SIZE+0x7cbe18>
    be14:	4a210000 	bmi	84be1c <__RAM_SIZE+0x74be1c>
    be18:	00000000 	andeq	r0, r0, r0
    be1c:	000e0e15 	andeq	r0, lr, r5, lsl lr
    be20:	00000000 	andeq	r0, r0, r0
    be24:	00000100 	andeq	r0, r0, r0, lsl #2
    be28:	00000000 	andeq	r0, r0, r0
    be2c:	01000000 	mrseq	r0, (UNDEF: 0)
    be30:	b50502a9 	strlt	r0, [r5, #-681]	; 0xfffffd57
    be34:	1800000d 	stmdane	r0, {r0, r2, r3}
    be38:	00000e1d 	andeq	r0, r0, sp, lsl lr
    be3c:	00004a38 	andeq	r4, r0, r8, lsr sl
    be40:	00004a36 	andeq	r4, r0, r6, lsr sl
    be44:	00001f00 	andeq	r1, r0, r0, lsl #30
    be48:	0ea40000 	cdpeq	0, 10, cr0, cr4, cr0, {0}
    be4c:	001b0000 	andseq	r0, fp, r0
    be50:	70000000 	andvc	r0, r0, r0
    be54:	1a000006 	bne	be74 <_Min_Stack_Size+0xae74>
    be58:	f3035001 	vhadd.u8	d5, d3, d1
    be5c:	00005001 	andeq	r5, r0, r1
    be60:	001fbf20 	andseq	fp, pc, r0, lsr #30
    be64:	02600200 	rsbeq	r0, r0, #0, 4
    be68:	ed030137 	stfs	f0, [r3, #-220]	; 0xffffff24
    be6c:	2100000d 	tstcs	r0, sp
    be70:	00000ee2 	andeq	r0, r0, r2, ror #29
    be74:	06026202 	streq	r6, [r2], -r2, lsl #4
    be78:	00000097 	muleq	r0, r7, r0
    be7c:	0f182200 	svceq	0x00182200
    be80:	52020000 	andpl	r0, r2, #0
    be84:	97013702 	strls	r3, [r1, -r2, lsl #14]
    be88:	03000000 	movweq	r0, #0
    be8c:	00000e0e 	andeq	r0, r0, lr, lsl #28
    be90:	000ea121 	andeq	sl, lr, r1, lsr #2
    be94:	02540200 	subseq	r0, r4, #0, 4
    be98:	00009706 	andeq	r9, r0, r6, lsl #14
    be9c:	8d200000 	stchi	0, cr0, [r0, #-0]
    bea0:	0200000e 	andeq	r0, r0, #14
    bea4:	01370249 	teqeq	r7, r9, asr #4
    bea8:	000e2b03 	andeq	r2, lr, r3, lsl #22
    beac:	0ea12300 	cdpeq	3, 10, cr2, cr1, cr0, {0}
    beb0:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    beb4:	00975002 	addseq	r5, r7, r2
    beb8:	24000000 	strcs	r0, [r0], #-0
    bebc:	00001f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
    bec0:	37024302 	strcc	r4, [r2, -r2, lsl #6]
    bec4:	b6220301 	strtlt	r0, [r2], -r1, lsl #6
    bec8:	0200000e 	andeq	r0, r0, #14
    becc:	01370232 	teqeq	r7, r2, lsr r2
    bed0:	00000097 	muleq	r0, r7, r0
    bed4:	000e5703 	andeq	r5, lr, r3, lsl #14
    bed8:	0ea52100 	fdveqs	f2, f5, f0
    bedc:	34020000 	strcc	r0, [r2], #-0
    bee0:	00970602 	addseq	r0, r7, r2, lsl #12
    bee4:	22000000 	andcs	r0, r0, #0
    bee8:	0000196e 	andeq	r1, r0, lr, ror #18
    beec:	3701fa02 	strcc	pc, [r1, -r2, lsl #20]
    bef0:	00009701 	andeq	r9, r0, r1, lsl #14
    bef4:	0e780300 	cdpeq	3, 7, cr0, cr8, cr0, {0}
    bef8:	79210000 	stmdbvc	r1!, {}	; <UNPREDICTABLE>
    befc:	0200001a 	andeq	r0, r0, #26
    bf00:	970601fc 			; <UNDEFINED> instruction: 0x970601fc
    bf04:	00000000 	andeq	r0, r0, r0
    bf08:	5d010125 	stfpls	f0, [r1, #-148]	; 0xffffff6c
    bf0c:	5d00001f 	stcpl	0, cr0, [r0, #-124]	; 0xffffff84
    bf10:	0500001f 	streq	r0, [r0, #-31]	; 0xffffffe1
    bf14:	250d011b 	strcs	r0, [sp, #-283]	; 0xfffffee5
    bf18:	1eb40101 	frdnes	f0, f4, f1
    bf1c:	1eb40000 	cdpne	0, 11, cr0, cr4, cr0, {0}
    bf20:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
    bf24:	01260d01 			; <UNDEFINED> instruction: 0x01260d01
    bf28:	0020c501 	eoreq	ip, r0, r1, lsl #10
    bf2c:	0020c500 	eoreq	ip, r0, r0, lsl #10
    bf30:	0d3f0400 	cfldrseq	mvf0, [pc, #-0]	; bf38 <_Min_Stack_Size+0xaf38>
    bf34:	7c010125 	stfvcs	f0, [r1], {37}	; 0x25
    bf38:	7c00001f 	stcvc	0, cr0, [r0], {31}
    bf3c:	0500001f 	streq	r0, [r0, #-31]	; 0xffffffe1
    bf40:	000d011c 	andeq	r0, sp, ip, lsl r1
    bf44:	00000a6b 	andeq	r0, r0, fp, ror #20
    bf48:	21570002 	cmpcs	r7, r2
    bf4c:	01040000 	mrseq	r0, (UNDEF: 4)
    bf50:	0000003d 	andeq	r0, r0, sp, lsr r0
    bf54:	0021680c 	eoreq	r6, r1, ip, lsl #16
    bf58:	00064100 	andeq	r4, r6, r0, lsl #2
    bf5c:	00043000 	andeq	r3, r4, r0
	...
    bf68:	0045c800 	subeq	ip, r5, r0, lsl #16
    bf6c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    bf70:	00000239 	andeq	r0, r0, r9, lsr r2
    bf74:	69050403 	stmdbvs	r5, {r0, r1, sl}
    bf78:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    bf7c:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    bf80:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    bf84:	00062304 	andeq	r2, r6, r4, lsl #6
    bf88:	06010200 	streq	r0, [r1], -r0, lsl #4
    bf8c:	00000852 	andeq	r0, r0, r2, asr r8
    bf90:	50080102 	andpl	r0, r8, r2, lsl #2
    bf94:	02000008 	andeq	r0, r0, #8
    bf98:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    bf9c:	02020000 	andeq	r0, r2, #0
    bfa0:	00091e07 	andeq	r1, r9, r7, lsl #28
    bfa4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    bfa8:	000004ed 	andeq	r0, r0, sp, ror #9
    bfac:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    bfb0:	02000002 	andeq	r0, r0, #2
    bfb4:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    bfb8:	04040000 	streq	r0, [r4], #-0
    bfbc:	59080102 	stmdbpl	r8, {r1, r8}
    bfc0:	05000008 	streq	r0, [r0, #-8]
    bfc4:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    bfc8:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    bfcc:	05000000 	streq	r0, [r0, #-0]
    bfd0:	000008de 	ldrdeq	r0, [r0], -lr
    bfd4:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    bfd8:	05000000 	streq	r0, [r0, #-0]
    bfdc:	0000077f 	andeq	r0, r0, pc, ror r7
    bfe0:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    bfe4:	05000000 	streq	r0, [r0, #-0]
    bfe8:	00000711 	andeq	r0, r0, r1, lsl r7
    bfec:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    bff0:	06000000 	streq	r0, [r0], -r0
    bff4:	0000053b 	andeq	r0, r0, fp, lsr r5
    bff8:	0182031c 	orreq	r0, r2, ip, lsl r3
    bffc:	00012e10 	andeq	r2, r1, r0, lsl lr
    c000:	08120700 	ldmdaeq	r2, {r8, r9, sl}
    c004:	86030000 	strhi	r0, [r3], -r0
    c008:	00a31901 	adceq	r1, r3, r1, lsl #18
    c00c:	23020000 	movwcs	r0, #8192	; 0x2000
    c010:	03a00700 	moveq	r0, #0, 14
    c014:	87030000 	strhi	r0, [r3, -r0]
    c018:	00a31901 	adceq	r1, r3, r1, lsl #18
    c01c:	23020000 	movwcs	r0, #8192	; 0x2000
    c020:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    c024:	8a030000 	bhi	cc02c <SYSTICK_CYCLES+0xa2fed>
    c028:	013a1b01 	teqeq	sl, r1, lsl #22
    c02c:	23020000 	movwcs	r0, #8192	; 0x2000
    c030:	01f20708 	mvnseq	r0, r8, lsl #14
    c034:	8b030000 	blhi	cc03c <SYSTICK_CYCLES+0xa2ffd>
    c038:	00a31901 	adceq	r1, r3, r1, lsl #18
    c03c:	23020000 	movwcs	r0, #8192	; 0x2000
    c040:	0954070c 	ldmdbeq	r4, {r2, r3, r8, r9, sl}^
    c044:	91030000 	mrsls	r0, (UNDEF: 3)
    c048:	01401a01 	cmpeq	r0, r1, lsl #20
    c04c:	23020000 	movwcs	r0, #8192	; 0x2000
    c050:	001b0710 	andseq	r0, fp, r0, lsl r7
    c054:	92030000 	andls	r0, r3, #0
    c058:	01401a01 	cmpeq	r0, r1, lsl #20
    c05c:	23020000 	movwcs	r0, #8192	; 0x2000
    c060:	05ee0714 	strbeq	r0, [lr, #1812]!	; 0x714
    c064:	96030000 	strls	r0, [r3], -r0
    c068:	01461b01 	cmpeq	r6, r1, lsl #22
    c06c:	23020000 	movwcs	r0, #8192	; 0x2000
    c070:	01080018 	tsteq	r8, r8, lsl r0
    c074:	0000013a 	andeq	r0, r0, sl, lsr r1
    c078:	0000a309 	andeq	sl, r0, r9, lsl #6
    c07c:	040a0000 	streq	r0, [sl], #-0
    c080:	0000012e 	andeq	r0, r0, lr, lsr #2
    c084:	00af040a 	adceq	r0, pc, sl, lsl #8
    c088:	040a0000 	streq	r0, [sl], #-0
    c08c:	00000140 	andeq	r0, r0, r0, asr #2
    c090:	00062f0b 	andeq	r2, r6, fp, lsl #30
    c094:	019b0300 	orrseq	r0, fp, r0, lsl #6
    c098:	0000af03 	andeq	sl, r0, r3, lsl #30
    c09c:	7f040a00 	svcvc	0x00040a00
    c0a0:	06000000 	streq	r0, [r0], -r0
    c0a4:	0000034b 	andeq	r0, r0, fp, asr #6
    c0a8:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
    c0ac:	00047310 	andeq	r7, r4, r0, lsl r3
    c0b0:	09110700 	ldmdbeq	r1, {r8, r9, sl}
    c0b4:	dd030000 	stcle	0, cr0, [r3, #-0]
    c0b8:	00a31901 	adceq	r1, r3, r1, lsl #18
    c0bc:	23020000 	movwcs	r0, #8192	; 0x2000
    c0c0:	07840700 	streq	r0, [r4, r0, lsl #14]
    c0c4:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    c0c8:	00a31901 	adceq	r1, r3, r1, lsl #18
    c0cc:	23020000 	movwcs	r0, #8192	; 0x2000
    c0d0:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    c0d4:	df030000 	svcle	0x00030000
    c0d8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    c0dc:	23020000 	movwcs	r0, #8192	; 0x2000
    c0e0:	08fb0708 	ldmeq	fp!, {r3, r8, r9, sl}^
    c0e4:	e0030000 	and	r0, r3, r0
    c0e8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    c0ec:	23020000 	movwcs	r0, #8192	; 0x2000
    c0f0:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    c0f4:	e1030000 	mrs	r0, (UNDEF: 3)
    c0f8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    c0fc:	23020000 	movwcs	r0, #8192	; 0x2000
    c100:	093f0710 	ldmdbeq	pc!, {r4, r8, r9, sl}	; <UNPREDICTABLE>
    c104:	e2030000 	and	r0, r3, #0
    c108:	00a31901 	adceq	r1, r3, r1, lsl #18
    c10c:	23020000 	movwcs	r0, #8192	; 0x2000
    c110:	21d10714 	bicscs	r0, r1, r4, lsl r7
    c114:	e3030000 	movw	r0, #12288	; 0x3000
    c118:	00a31901 	adceq	r1, r3, r1, lsl #18
    c11c:	23020000 	movwcs	r0, #8192	; 0x2000
    c120:	060a0718 			; <UNDEFINED> instruction: 0x060a0718
    c124:	e4030000 	str	r0, [r3], #-0
    c128:	00a31901 	adceq	r1, r3, r1, lsl #18
    c12c:	23020000 	movwcs	r0, #8192	; 0x2000
    c130:	069f071c 			; <UNDEFINED> instruction: 0x069f071c
    c134:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    c138:	04731a01 	ldrbteq	r1, [r3], #-2561	; 0xfffff5ff
    c13c:	23020000 	movwcs	r0, #8192	; 0x2000
    c140:	01990720 	orrseq	r0, r9, r0, lsr #14
    c144:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    c148:	04731a01 	ldrbteq	r1, [r3], #-2561	; 0xfffff5ff
    c14c:	23020000 	movwcs	r0, #8192	; 0x2000
    c150:	05960724 	ldreq	r0, [r6, #1828]	; 0x724
    c154:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    c158:	01591a01 	cmpeq	r9, r1, lsl #20
    c15c:	23020000 	movwcs	r0, #8192	; 0x2000
    c160:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    c164:	f2030000 	vhadd.s8	d0, d3, d0
    c168:	00971901 	addseq	r1, r7, r1, lsl #18
    c16c:	23020000 	movwcs	r0, #8192	; 0x2000
    c170:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    c174:	f3030000 	vhadd.u8	d0, d3, d0
    c178:	00971901 	addseq	r1, r7, r1, lsl #18
    c17c:	23020000 	movwcs	r0, #8192	; 0x2000
    c180:	01730730 	cmneq	r3, r0, lsr r7
    c184:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    c188:	00971901 	addseq	r1, r7, r1, lsl #18
    c18c:	23020000 	movwcs	r0, #8192	; 0x2000
    c190:	07300734 			; <UNDEFINED> instruction: 0x07300734
    c194:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    c198:	00971901 	addseq	r1, r7, r1, lsl #18
    c19c:	23020000 	movwcs	r0, #8192	; 0x2000
    c1a0:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    c1a4:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    c1a8:	00971901 	addseq	r1, r7, r1, lsl #18
    c1ac:	23020000 	movwcs	r0, #8192	; 0x2000
    c1b0:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    c1b4:	fb030000 	blx	cc1be <SYSTICK_CYCLES+0xa317f>
    c1b8:	048a1b01 	streq	r1, [sl], #2817	; 0xb01
    c1bc:	23020000 	movwcs	r0, #8192	; 0x2000
    c1c0:	01520740 	cmpeq	r2, r0, asr #14
    c1c4:	03030000 	movweq	r0, #12288	; 0x3000
    c1c8:	013a1b02 	teqeq	sl, r2, lsl #22
    c1cc:	23020000 	movwcs	r0, #8192	; 0x2000
    c1d0:	01070744 	tsteq	r7, r4, asr #14
    c1d4:	04030000 	streq	r0, [r3], #-0
    c1d8:	00a31902 	adceq	r1, r3, r2, lsl #18
    c1dc:	23020000 	movwcs	r0, #8192	; 0x2000
    c1e0:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    c1e4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    c1e8:	014c1902 	cmpeq	ip, r2, lsl #18
    c1ec:	23020000 	movwcs	r0, #8192	; 0x2000
    c1f0:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    c1f4:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    c1f8:	048a1b02 	streq	r1, [sl], #2818	; 0xb02
    c1fc:	23020000 	movwcs	r0, #8192	; 0x2000
    c200:	05ce0768 	strbeq	r0, [lr, #1896]	; 0x768
    c204:	0f030000 	svceq	0x00030000
    c208:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    c20c:	23020000 	movwcs	r0, #8192	; 0x2000
    c210:	0717076c 	ldreq	r0, [r7, -ip, ror #14]
    c214:	11030000 	mrsne	r0, (UNDEF: 3)
    c218:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    c21c:	23020000 	movwcs	r0, #8192	; 0x2000
    c220:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    c224:	12030000 	andne	r0, r3, #0
    c228:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    c22c:	23020000 	movwcs	r0, #8192	; 0x2000
    c230:	06fa0774 			; <UNDEFINED> instruction: 0x06fa0774
    c234:	13030000 	movwne	r0, #12288	; 0x3000
    c238:	00a31902 	adceq	r1, r3, r2, lsl #18
    c23c:	23020000 	movwcs	r0, #8192	; 0x2000
    c240:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    c244:	14030000 	strne	r0, [r3], #-0
    c248:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    c24c:	23020000 	movwcs	r0, #8192	; 0x2000
    c250:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    c254:	15030000 	strne	r0, [r3, #-0]
    c258:	00971902 	addseq	r1, r7, r2, lsl #18
    c25c:	23030000 	movwcs	r0, #12288	; 0x3000
    c260:	e8070180 	stmda	r7, {r7, r8}
    c264:	03000003 	movweq	r0, #3
    c268:	97190216 			; <UNDEFINED> instruction: 0x97190216
    c26c:	03000000 	movweq	r0, #0
    c270:	07018423 	streq	r8, [r1, -r3, lsr #8]
    c274:	000008e4 	andeq	r0, r0, r4, ror #17
    c278:	1a021f03 	bne	93e8c <SYSTICK_CYCLES+0x6ae4d>
    c27c:	00000473 	andeq	r0, r0, r3, ror r4
    c280:	01882303 	orreq	r2, r8, r3, lsl #6
    c284:	0007d507 	andeq	sp, r7, r7, lsl #10
    c288:	02200300 	eoreq	r0, r0, #0, 6
    c28c:	0004731a 	andeq	r7, r4, sl, lsl r3
    c290:	8c230300 	stchi	3, cr0, [r3], #-0
    c294:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    c298:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    c29c:	00971902 	addseq	r1, r7, r2, lsl #18
    c2a0:	23030000 	movwcs	r0, #12288	; 0x3000
    c2a4:	56070190 			; <UNDEFINED> instruction: 0x56070190
    c2a8:	03000002 	movweq	r0, #2
    c2ac:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    c2b0:	03000000 	movweq	r0, #0
    c2b4:	07019423 	streq	r9, [r1, -r3, lsr #8]
    c2b8:	00000320 	andeq	r0, r0, r0, lsr #6
    c2bc:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    c2c0:	00000097 	muleq	r0, r7, r0
    c2c4:	01982303 	orrseq	r2, r8, r3, lsl #6
    c2c8:	00027707 	andeq	r7, r2, r7, lsl #14
    c2cc:	02330300 	eorseq	r0, r3, #0, 6
    c2d0:	00009719 	andeq	r9, r0, r9, lsl r7
    c2d4:	9c230300 	stcls	3, cr0, [r3], #-0
    c2d8:	00000701 	andeq	r0, r0, r1, lsl #14
    c2dc:	35030000 	strcc	r0, [r3, #-0]
    c2e0:	056f1a02 	strbeq	r1, [pc, #-2562]!	; b8e6 <_Min_Stack_Size+0xa8e6>
    c2e4:	23030000 	movwcs	r0, #12288	; 0x3000
    c2e8:	b70701a0 	strlt	r0, [r7, -r0, lsr #3]
    c2ec:	0300001b 	movweq	r0, #27
    c2f0:	a319023a 	tstge	r9, #-1610612733	; 0xa0000003
    c2f4:	03000000 	movweq	r0, #0
    c2f8:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    c2fc:	00001c77 	andeq	r1, r0, r7, ror ip
    c300:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    c304:	000000a3 	andeq	r0, r0, r3, lsr #1
    c308:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    c30c:	001b3007 	andseq	r3, fp, r7
    c310:	02410300 	subeq	r0, r1, #0, 6
    c314:	0000a319 	andeq	sl, r0, r9, lsl r3
    c318:	ac230300 	stcge	3, cr0, [r3], #-0
    c31c:	1d2e0701 	stcne	7, cr0, [lr, #-4]!
    c320:	45030000 	strmi	r0, [r3, #-0]
    c324:	00a31902 	adceq	r1, r3, r2, lsl #18
    c328:	23030000 	movwcs	r0, #12288	; 0x3000
    c32c:	470701b0 			; <UNDEFINED> instruction: 0x470701b0
    c330:	0300001c 	movweq	r0, #28
    c334:	a3190248 	tstge	r9, #72, 4	; 0x80000004
    c338:	03000000 	movweq	r0, #0
    c33c:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    c340:	000007a8 	andeq	r0, r0, r8, lsr #15
    c344:	1a024c03 	bne	9f358 <SYSTICK_CYCLES+0x76319>
    c348:	00000473 	andeq	r0, r0, r3, ror r4
    c34c:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    c350:	001d0607 	andseq	r0, sp, r7, lsl #12
    c354:	024f0300 	subeq	r0, pc, #0, 6
    c358:	0000a319 	andeq	sl, r0, r9, lsl r3
    c35c:	bc230300 	stclt	3, cr0, [r3], #-0
    c360:	1b080701 	blne	20df6c <__RAM_SIZE+0x10df6c>
    c364:	52030000 	andpl	r0, r3, #0
    c368:	00a31902 	adceq	r1, r3, r2, lsl #18
    c36c:	23030000 	movwcs	r0, #12288	; 0x3000
    c370:	850701c0 	strhi	r0, [r7, #-448]	; 0xfffffe40
    c374:	0300001a 	movweq	r0, #26
    c378:	a3190255 	tstge	r9, #1342177285	; 0x50000005
    c37c:	03000000 	movweq	r0, #0
    c380:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    c384:	00001bdb 	ldrdeq	r1, [r0], -fp
    c388:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    c38c:	000000a3 	andeq	r0, r0, r3, lsr #1
    c390:	01c82303 	biceq	r2, r8, r3, lsl #6
    c394:	0009a907 	andeq	sl, r9, r7, lsl #18
    c398:	025d0300 	subseq	r0, sp, #0, 6
    c39c:	0000761a 	andeq	r7, r0, sl, lsl r6
    c3a0:	cc230300 	stcgt	3, cr0, [r3], #-0
    c3a4:	04810701 	streq	r0, [r1], #1793	; 0x701
    c3a8:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    c3ac:	00a31902 	adceq	r1, r3, r2, lsl #18
    c3b0:	23030000 	movwcs	r0, #12288	; 0x3000
    c3b4:	0a0001d0 	beq	cafc <_Min_Stack_Size+0xbafc>
    c3b8:	00015f04 	andeq	r5, r1, r4, lsl #30
    c3bc:	8a010800 	bhi	4e3c4 <SYSTICK_CYCLES+0x25385>
    c3c0:	09000004 	stmdbeq	r0, {r2}
    c3c4:	00000473 	andeq	r0, r0, r3, ror r4
    c3c8:	0000a309 	andeq	sl, r0, r9, lsl #6
    c3cc:	040a0000 	streq	r0, [sl], #-0
    c3d0:	00000479 	andeq	r0, r0, r9, ror r4
    c3d4:	00079806 	andeq	r9, r7, r6, lsl #16
    c3d8:	7e033400 	cfcpysvc	mvf3, mvf3
    c3dc:	056f1003 	strbeq	r1, [pc, #-3]!	; c3e1 <_Min_Stack_Size+0xb3e1>
    c3e0:	8d070000 	stchi	0, cr0, [r7, #-0]
    c3e4:	03000001 	movweq	r0, #1
    c3e8:	a3190382 	tstge	r9, #134217730	; 0x8000002
    c3ec:	02000000 	andeq	r0, r0, #0
    c3f0:	7c070023 	stcvc	0, cr0, [r7], {35}	; 0x23
    c3f4:	03000008 	movweq	r0, #8
    c3f8:	591a0385 	ldmdbpl	sl, {r0, r2, r7, r8, r9}
    c3fc:	02000001 	andeq	r0, r0, #1
    c400:	e1070423 	tst	r7, r3, lsr #8
    c404:	03000006 	movweq	r0, #6
    c408:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    c40c:	02000000 	andeq	r0, r0, #0
    c410:	cb070823 	blgt	1ce4a4 <__RAM_SIZE+0xce4a4>
    c414:	03000004 	movweq	r0, #4
    c418:	821a038c 	andshi	r0, sl, #140, 6	; 0x30000002
    c41c:	02000005 	andeq	r0, r0, #5
    c420:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    c424:	03000001 	movweq	r0, #1
    c428:	97190390 			; <UNDEFINED> instruction: 0x97190390
    c42c:	02000000 	andeq	r0, r0, #0
    c430:	21071023 	tstcs	r7, r3, lsr #32
    c434:	03000001 	movweq	r0, #1
    c438:	97190393 			; <UNDEFINED> instruction: 0x97190393
    c43c:	02000000 	andeq	r0, r0, #0
    c440:	b2071423 	andlt	r1, r7, #587202560	; 0x23000000
    c444:	03000008 	movweq	r0, #8
    c448:	731a0398 	tstvc	sl, #152, 6	; 0x60000002
    c44c:	02000004 	andeq	r0, r0, #4
    c450:	c8071823 	stmdagt	r7, {r0, r1, r5, fp, ip}
    c454:	03000006 	movweq	r0, #6
    c458:	97190399 			; <UNDEFINED> instruction: 0x97190399
    c45c:	02000000 	andeq	r0, r0, #0
    c460:	b8071c23 	stmdalt	r7, {r0, r1, r5, sl, fp, ip}
    c464:	03000005 	movweq	r0, #5
    c468:	6f1a039d 	svcvs	0x001a039d
    c46c:	02000005 	andeq	r0, r0, #5
    c470:	85072023 	strhi	r2, [r7, #-35]	; 0xffffffdd
    c474:	03000006 	movweq	r0, #6
    c478:	6f1a039e 	svcvs	0x001a039e
    c47c:	02000005 	andeq	r0, r0, #5
    c480:	d0072423 	andle	r2, r7, r3, lsr #8
    c484:	03000001 	movweq	r0, #1
    c488:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    c48c:	02000000 	andeq	r0, r0, #0
    c490:	c5072823 	strgt	r2, [r7, #-2083]	; 0xfffff7dd
    c494:	03000009 	movweq	r0, #9
    c498:	6f1a03a6 	svcvs	0x001a03a6
    c49c:	02000005 	andeq	r0, r0, #5
    c4a0:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    c4a4:	03000004 	movweq	r0, #4
    c4a8:	6f1a03a7 	svcvs	0x001a03a7
    c4ac:	02000005 	andeq	r0, r0, #5
    c4b0:	0a003023 	beq	18544 <_Min_Stack_Size+0x17544>
    c4b4:	00049004 	andeq	r9, r4, r4
    c4b8:	08d40b00 	ldmeq	r4, {r8, r9, fp}^
    c4bc:	86030000 	strhi	r0, [r3], -r0
    c4c0:	015f0302 	cmpeq	pc, r2, lsl #6
    c4c4:	040a0000 	streq	r0, [sl], #-0
    c4c8:	00000575 	andeq	r0, r0, r5, ror r5
    c4cc:	0021460c 	eoreq	r4, r1, ip, lsl #12
    c4d0:	215a0400 	cmpcs	sl, r0, lsl #8
    c4d4:	000000a3 	andeq	r0, r0, r3, lsr #1
    c4d8:	a30c0101 	movwge	r0, #49409	; 0xc101
    c4dc:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    c4e0:	00972160 	addseq	r2, r7, r0, ror #2
    c4e4:	01010000 	mrseq	r0, (UNDEF: 1)
    c4e8:	00111b0d 	andseq	r1, r1, sp, lsl #22
    c4ec:	01390500 	teqeq	r9, r0, lsl #10
    c4f0:	00058221 	andeq	r8, r5, r1, lsr #4
    c4f4:	0d010100 	stfeqs	f0, [r1, #-0]
    c4f8:	000019b2 			; <UNDEFINED> instruction: 0x000019b2
    c4fc:	21014005 	tstcs	r1, r5
    c500:	00000582 	andeq	r0, r0, r2, lsl #11
    c504:	a90d0101 	stmdbge	sp, {r0, r8}
    c508:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    c50c:	9721017f 			; <UNDEFINED> instruction: 0x9721017f
    c510:	01000000 	mrseq	r0, (UNDEF: 0)
    c514:	05820e01 	streq	r0, [r2, #3585]	; 0xe01
    c518:	05e10000 	strbeq	r0, [r1, #0]!
    c51c:	290f0000 	stmdbcs	pc, {}	; <UNPREDICTABLE>
    c520:	1f000000 	svcne	0x00000000
    c524:	1d9a0d00 	ldcne	13, cr0, [sl]
    c528:	87050000 	strhi	r0, [r5, -r0]
    c52c:	05d12101 	ldrbeq	r2, [r1, #257]	; 0x101
    c530:	01010000 	mrseq	r0, (UNDEF: 1)
    c534:	001d050d 	andseq	r0, sp, sp, lsl #10
    c538:	01ea0500 	mvneq	r0, r0, lsl #10
    c53c:	0000a321 	andeq	sl, r0, r1, lsr #6
    c540:	10010100 	andne	r0, r1, r0, lsl #2
    c544:	0021d001 	eoreq	sp, r1, r1
    c548:	074e0100 	strbeq	r0, [lr, -r0, lsl #2]
    c54c:	00272001 	eoreq	r2, r7, r1
    c550:	00289810 	eoreq	r9, r8, r0, lsl r8
    c554:	004a4b10 	subeq	r4, sl, r0, lsl fp
    c558:	09f10100 	ldmibeq	r1!, {r8}^
    c55c:	e2110000 	ands	r0, r1, #0
    c560:	0100000e 	tsteq	r0, lr
    c564:	00970151 	addseq	r0, r7, r1, asr r1
    c568:	4a6f0000 	bmi	1bcc570 <__RAM_SIZE+0x1acc570>
    c56c:	4a6b0000 	bmi	1acc574 <__RAM_SIZE+0x19cc574>
    c570:	cf110000 	svcgt	0x00110000
    c574:	01000019 	tsteq	r0, r9, lsl r0
    c578:	05821253 	streq	r1, [r2, #595]	; 0x253
    c57c:	4a8f0000 	bmi	fe3cc584 <__RAM_segment_used_end__+0xc62cc584>
    c580:	4a8d0000 	bmi	fe34c588 <__RAM_segment_used_end__+0xc624c588>
    c584:	c0110000 	andsgt	r0, r1, r0
    c588:	01000021 	tsteq	r0, r1, lsr #32
    c58c:	05821255 	streq	r1, [r2, #597]	; 0x255
    c590:	4aa80000 	bmi	fea0c598 <__RAM_segment_used_end__+0xc690c598>
    c594:	4aa20000 	bmi	fe88c59c <__RAM_segment_used_end__+0xc678c59c>
    c598:	d0120000 	andsle	r0, r2, r0
    c59c:	ee000003 	cdp	0, 0, cr0, cr0, cr3, {0}
    c5a0:	11000007 	tstne	r0, r7
    c5a4:	00000ee2 	andeq	r0, r0, r2, ror #29
    c5a8:	97056201 	strls	r6, [r5, -r1, lsl #4]
    c5ac:	db000000 	blle	c5b4 <_Min_Stack_Size+0xb5b4>
    c5b0:	d300004a 	movwle	r0, #74	; 0x4a
    c5b4:	1300004a 	movwne	r0, #74	; 0x4a
    c5b8:	000009f1 	strdeq	r0, [r0], -r1
    c5bc:	10002726 	andne	r2, r0, r6, lsr #14
    c5c0:	00272602 	eoreq	r2, r7, r2, lsl #12
    c5c4:	00272c10 	eoreq	r2, r7, r0, lsl ip
    c5c8:	05620110 	strbeq	r0, [r2, #-272]!	; 0xfffffef0
    c5cc:	000006be 			; <UNDEFINED> instruction: 0x000006be
    c5d0:	000a0414 	andeq	r0, sl, r4, lsl r4
    c5d4:	004b1500 	subeq	r1, fp, r0, lsl #10
    c5d8:	004b0f00 	subeq	r0, fp, r0, lsl #30
    c5dc:	0a2f1500 	beq	bd19e4 <__RAM_SIZE+0xad19e4>
    c5e0:	27260000 	strcs	r0, [r6, -r0]!
    c5e4:	26051000 	strcs	r1, [r5], -r0
    c5e8:	2a100027 	bcs	40c68c <__RAM_SIZE+0x30c68c>
    c5ec:	02100027 	andseq	r0, r0, #39	; 0x27
    c5f0:	14130256 	ldrne	r0, [r3], #-598	; 0xfffffdaa
    c5f4:	00000a42 	andeq	r0, r0, r2, asr #20
    c5f8:	00004b40 	andeq	r4, r0, r0, asr #22
    c5fc:	00004b3e 	andeq	r4, r0, lr, lsr fp
    c600:	12130000 	andsne	r0, r3, #0
    c604:	3600000a 	strcc	r0, [r0], -sl
    c608:	01100027 	tsteq	r0, r7, lsr #32
    c60c:	10002736 	andne	r2, r0, r6, lsr r7
    c610:	1000273a 	andne	r2, r0, sl, lsr r7
    c614:	e5056201 	str	r6, [r5, #-513]	; 0xfffffdff
    c618:	16000006 	strne	r0, [r0], -r6
    c61c:	00000a21 	andeq	r0, r0, r1, lsr #20
    c620:	00004b55 	andeq	r4, r0, r5, asr fp
    c624:	00004b53 	andeq	r4, r0, r3, asr fp
    c628:	0a121300 	beq	491230 <__RAM_SIZE+0x391230>
    c62c:	27760000 	ldrbcs	r0, [r6, -r0]!
    c630:	76011000 	strvc	r1, [r1], -r0
    c634:	7a100027 	bvc	40c6d8 <__RAM_SIZE+0x30c6d8>
    c638:	01100027 	tsteq	r0, r7, lsr #32
    c63c:	070c0562 	streq	r0, [ip, -r2, ror #10]
    c640:	21160000 	tstcs	r6, r0
    c644:	6a00000a 	bvs	c674 <_Min_Stack_Size+0xb674>
    c648:	6800004b 	stmdavs	r0, {r0, r1, r3, r6}
    c64c:	0000004b 	andeq	r0, r0, fp, asr #32
    c650:	0009f113 	andeq	pc, r9, r3, lsl r1	; <UNPREDICTABLE>
    c654:	00278000 	eoreq	r8, r7, r0
    c658:	27800110 	usada8cs	r0, r0, r1, r0
    c65c:	27861000 	strcs	r1, [r6, r0]
    c660:	62011000 	andvs	r1, r1, #0
    c664:	00075705 	andeq	r5, r7, r5, lsl #14
    c668:	0a041400 	beq	111670 <__RAM_SIZE+0x11670>
    c66c:	4b7f0000 	blmi	1fcc674 <__RAM_SIZE+0x1ecc674>
    c670:	4b7d0000 	blmi	1f4c678 <__RAM_SIZE+0x1e4c678>
    c674:	2f150000 	svccs	0x00150000
    c678:	8000000a 	andhi	r0, r0, sl
    c67c:	04100027 	ldreq	r0, [r0], #-39	; 0xffffffd9
    c680:	10002780 	andne	r2, r0, r0, lsl #15
    c684:	10002784 	andne	r2, r0, r4, lsl #15
    c688:	13025602 	movwne	r5, #9730	; 0x2602
    c68c:	000a4214 	andeq	r4, sl, r4, lsl r2
    c690:	004b9400 	subeq	r9, fp, r0, lsl #8
    c694:	004b9200 	subeq	r9, fp, r0, lsl #4
    c698:	13000000 	movwne	r0, #0
    c69c:	00000a12 	andeq	r0, r0, r2, lsl sl
    c6a0:	10002794 	mulne	r0, r4, r7
    c6a4:	00279401 	eoreq	r9, r7, r1, lsl #8
    c6a8:	00279810 	eoreq	r9, r7, r0, lsl r8
    c6ac:	05620110 	strbeq	r0, [r2, #-272]!	; 0xfffffef0
    c6b0:	0000077e 	andeq	r0, r0, lr, ror r7
    c6b4:	000a2116 	andeq	r2, sl, r6, lsl r1
    c6b8:	004ba900 	subeq	sl, fp, r0, lsl #18
    c6bc:	004ba700 	subeq	sl, fp, r0, lsl #14
    c6c0:	f1130000 			; <UNDEFINED> instruction: 0xf1130000
    c6c4:	9e000009 	cdpls	0, 0, cr0, cr0, cr9, {0}
    c6c8:	01100027 	tsteq	r0, r7, lsr #32
    c6cc:	1000279e 	mulne	r0, lr, r7
    c6d0:	100027a6 	andne	r2, r0, r6, lsr #15
    c6d4:	c9056201 	stmdbgt	r5, {r0, r9, sp, lr}
    c6d8:	14000007 	strne	r0, [r0], #-7
    c6dc:	00000a04 	andeq	r0, r0, r4, lsl #20
    c6e0:	00004bbe 			; <UNDEFINED> instruction: 0x00004bbe
    c6e4:	00004bbc 			; <UNDEFINED> instruction: 0x00004bbc
    c6e8:	000a2f15 	andeq	r2, sl, r5, lsl pc
    c6ec:	00279e00 	eoreq	r9, r7, r0, lsl #28
    c6f0:	279e0410 			; <UNDEFINED> instruction: 0x279e0410
    c6f4:	27a21000 	strcs	r1, [r2, r0]!
    c6f8:	56021000 	strpl	r1, [r2], -r0
    c6fc:	42141302 	andsmi	r1, r4, #134217728	; 0x8000000
    c700:	d300000a 	movwle	r0, #10
    c704:	d100004b 	tstle	r0, fp, asr #32
    c708:	0000004b 	andeq	r0, r0, fp, asr #32
    c70c:	27801700 	strcs	r1, [r0, r0, lsl #14]
    c710:	0a501000 	beq	1410718 <__RAM_SIZE+0x1310718>
    c714:	07dd0000 	ldrbeq	r0, [sp, r0]
    c718:	01180000 	tsteq	r8, r0
    c71c:	00740250 	rsbseq	r0, r4, r0, asr r2
    c720:	279e1900 	ldrcs	r1, [lr, r0, lsl #18]
    c724:	0a5f1000 	beq	17d072c <__RAM_SIZE+0x16d072c>
    c728:	01180000 	tsteq	r8, r0
    c72c:	00740250 	rsbseq	r0, r4, r0, asr r2
    c730:	18120000 	ldmdane	r2, {}	; <UNPREDICTABLE>
    c734:	86000004 	strhi	r0, [r0], -r4
    c738:	11000009 	tstne	r0, r9
    c73c:	00000ee2 	andeq	r0, r0, r2, ror #29
    c740:	9709b801 	strls	fp, [r9, -r1, lsl #16]
    c744:	ec000000 	stc	0, cr0, [r0], {-0}
    c748:	e600004b 	str	r0, [r0], -fp, asr #32
    c74c:	1300004b 	movwne	r0, #75	; 0x4b
    c750:	000009f1 	strdeq	r0, [r0], -r1
    c754:	10002804 	andne	r2, r0, r4, lsl #16
    c758:	00280402 	eoreq	r0, r8, r2, lsl #8
    c75c:	00280a10 	eoreq	r0, r8, r0, lsl sl
    c760:	09b80110 	ldmibeq	r8!, {r4, r8}
    c764:	00000856 	andeq	r0, r0, r6, asr r8
    c768:	000a0414 	andeq	r0, sl, r4, lsl r4
    c76c:	004c1b00 	subeq	r1, ip, r0, lsl #22
    c770:	004c1500 	subeq	r1, ip, r0, lsl #10
    c774:	0a2f1500 	beq	bd1b7c <__RAM_SIZE+0xad1b7c>
    c778:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    c77c:	04051000 	streq	r1, [r5], #-0
    c780:	08100028 	ldmdaeq	r0, {r3, r5}
    c784:	02100028 	andseq	r0, r0, #40	; 0x28
    c788:	14130256 	ldrne	r0, [r3], #-598	; 0xfffffdaa
    c78c:	00000a42 	andeq	r0, r0, r2, asr #20
    c790:	00004c46 	andeq	r4, r0, r6, asr #24
    c794:	00004c44 	andeq	r4, r0, r4, asr #24
    c798:	12130000 	andsne	r0, r3, #0
    c79c:	1200000a 	andne	r0, r0, #10
    c7a0:	01100028 	tsteq	r0, r8, lsr #32
    c7a4:	10002812 	andne	r2, r0, r2, lsl r8
    c7a8:	10002816 	andne	r2, r0, r6, lsl r8
    c7ac:	7d09b801 	stcvc	8, cr11, [r9, #-4]
    c7b0:	16000008 	strne	r0, [r0], -r8
    c7b4:	00000a21 	andeq	r0, r0, r1, lsr #20
    c7b8:	00004c5b 	andeq	r4, r0, fp, asr ip
    c7bc:	00004c59 	andeq	r4, r0, r9, asr ip
    c7c0:	0a121300 	beq	4913c8 <__RAM_SIZE+0x3913c8>
    c7c4:	283c0000 	ldmdacs	ip!, {}	; <UNPREDICTABLE>
    c7c8:	3c011000 	stccc	0, cr1, [r1], {-0}
    c7cc:	40100028 	andsmi	r0, r0, r8, lsr #32
    c7d0:	01100028 	tsteq	r0, r8, lsr #32
    c7d4:	08a409b8 	stmiaeq	r4!, {r3, r4, r5, r7, r8, fp}
    c7d8:	21160000 	tstcs	r6, r0
    c7dc:	7000000a 	andvc	r0, r0, sl
    c7e0:	6e00004c 	cdpvs	0, 0, cr0, cr0, cr12, {2}
    c7e4:	0000004c 	andeq	r0, r0, ip, asr #32
    c7e8:	0009f113 	andeq	pc, r9, r3, lsl r1	; <UNPREDICTABLE>
    c7ec:	00284600 	eoreq	r4, r8, r0, lsl #12
    c7f0:	28460110 	stmdacs	r6, {r4, r8}^
    c7f4:	284c1000 	stmdacs	ip, {ip}^
    c7f8:	b8011000 	stmdalt	r1, {ip}
    c7fc:	0008ef09 	andeq	lr, r8, r9, lsl #30
    c800:	0a041400 	beq	111808 <__RAM_SIZE+0x11808>
    c804:	4c850000 	stcmi	0, cr0, [r5], {0}
    c808:	4c830000 	stcmi	0, cr0, [r3], {0}
    c80c:	2f150000 	svccs	0x00150000
    c810:	4600000a 	strmi	r0, [r0], -sl
    c814:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    c818:	10002846 	andne	r2, r0, r6, asr #16
    c81c:	1000284a 	andne	r2, r0, sl, asr #16
    c820:	13025602 	movwne	r5, #9730	; 0x2602
    c824:	000a4214 	andeq	r4, sl, r4, lsl r2
    c828:	004c9a00 	subeq	r9, ip, r0, lsl #20
    c82c:	004c9800 	subeq	r9, ip, r0, lsl #16
    c830:	13000000 	movwne	r0, #0
    c834:	00000a12 	andeq	r0, r0, r2, lsl sl
    c838:	1000285a 	andne	r2, r0, sl, asr r8
    c83c:	00285a01 	eoreq	r5, r8, r1, lsl #20
    c840:	00285e10 	eoreq	r5, r8, r0, lsl lr
    c844:	09b80110 	ldmibeq	r8!, {r4, r8}
    c848:	00000916 	andeq	r0, r0, r6, lsl r9
    c84c:	000a2116 	andeq	r2, sl, r6, lsl r1
    c850:	004caf00 	subeq	sl, ip, r0, lsl #30
    c854:	004cad00 	subeq	sl, ip, r0, lsl #26
    c858:	f1130000 			; <UNDEFINED> instruction: 0xf1130000
    c85c:	64000009 	strvs	r0, [r0], #-9
    c860:	01100028 	tsteq	r0, r8, lsr #32
    c864:	10002864 	andne	r2, r0, r4, ror #16
    c868:	1000286c 	andne	r2, r0, ip, ror #16
    c86c:	6109b801 	tstvs	r9, r1, lsl #16
    c870:	14000009 	strne	r0, [r0], #-9
    c874:	00000a04 	andeq	r0, r0, r4, lsl #20
    c878:	00004cc4 	andeq	r4, r0, r4, asr #25
    c87c:	00004cc2 	andeq	r4, r0, r2, asr #25
    c880:	000a2f15 	andeq	r2, sl, r5, lsl pc
    c884:	00286400 	eoreq	r6, r8, r0, lsl #8
    c888:	28640410 	stmdacs	r4!, {r4, sl}^
    c88c:	28681000 	stmdacs	r8!, {ip}^
    c890:	56021000 	strpl	r1, [r2], -r0
    c894:	42141302 	andsmi	r1, r4, #134217728	; 0x8000000
    c898:	d900000a 	stmdble	r0, {r1, r3}
    c89c:	d700004c 	strle	r0, [r0, -ip, asr #32]
    c8a0:	0000004c 	andeq	r0, r0, ip, asr #32
    c8a4:	28461700 	stmdacs	r6, {r8, r9, sl, ip}^
    c8a8:	0a501000 	beq	14108b0 <__RAM_SIZE+0x13108b0>
    c8ac:	09750000 	ldmdbeq	r5!, {}^	; <UNPREDICTABLE>
    c8b0:	01180000 	tsteq	r8, r0
    c8b4:	00750250 	rsbseq	r0, r5, r0, asr r2
    c8b8:	28641900 	stmdacs	r4!, {r8, fp, ip}^
    c8bc:	0a5f1000 	beq	17d08c4 <__RAM_SIZE+0x16d08c4>
    c8c0:	01180000 	tsteq	r8, r0
    c8c4:	00750250 	rsbseq	r0, r5, r0, asr r2
    c8c8:	f1130000 			; <UNDEFINED> instruction: 0xf1130000
    c8cc:	3a000009 	bcc	c8f8 <_Min_Stack_Size+0xb8f8>
    c8d0:	03100027 	tsteq	r0, #39	; 0x27
    c8d4:	1000273a 	andne	r2, r0, sl, lsr r7
    c8d8:	10002740 	andne	r2, r0, r0, asr #14
    c8dc:	d1056901 	tstle	r5, r1, lsl #18
    c8e0:	14000009 	strne	r0, [r0], #-9
    c8e4:	00000a04 	andeq	r0, r0, r4, lsl #20
    c8e8:	00004cf0 	strdeq	r4, [r0], -r0
    c8ec:	00004cec 	andeq	r4, r0, ip, ror #25
    c8f0:	000a2f15 	andeq	r2, sl, r5, lsl pc
    c8f4:	00273a00 	eoreq	r3, r7, r0, lsl #20
    c8f8:	273a0610 			; <UNDEFINED> instruction: 0x273a0610
    c8fc:	273e1000 	ldrcs	r1, [lr, -r0]!
    c900:	56021000 	strpl	r1, [r2], -r0
    c904:	42141302 	andsmi	r1, r4, #134217728	; 0x8000000
    c908:	1000000a 	andne	r0, r0, sl
    c90c:	0e00004d 	cdpeq	0, 0, cr0, cr0, cr13, {2}
    c910:	0000004d 	andeq	r0, r0, sp, asr #32
    c914:	0a121a00 	beq	49311c <__RAM_SIZE+0x39311c>
    c918:	274c0000 	strbcs	r0, [ip, -r0]
    c91c:	e8011000 	stmda	r1, {ip}
    c920:	01000003 	tsteq	r0, r3
    c924:	211605af 	tstcs	r6, pc, lsr #11
    c928:	2d00000a 	stccs	0, cr0, [r0, #-40]	; 0xffffffd8
    c92c:	2300004d 	movwcs	r0, #77	; 0x4d
    c930:	0000004d 	andeq	r0, r0, sp, asr #32
    c934:	0f181b00 	svceq	0x00181b00
    c938:	52020000 	andpl	r0, r2, #0
    c93c:	97013702 	strls	r3, [r1, -r2, lsl #14]
    c940:	03000000 	movweq	r0, #0
    c944:	00000a12 	andeq	r0, r0, r2, lsl sl
    c948:	000ea11c 	andeq	sl, lr, ip, lsl r1
    c94c:	02540200 	subseq	r0, r4, #0, 4
    c950:	00009706 	andeq	r9, r0, r6, lsl #14
    c954:	8d1d0000 	ldchi	0, cr0, [sp, #-0]
    c958:	0200000e 	andeq	r0, r0, #14
    c95c:	01370249 	teqeq	r7, r9, asr #4
    c960:	000a2f03 	andeq	r2, sl, r3, lsl #30
    c964:	0ea11e00 	cdpeq	14, 10, cr1, cr1, cr0, {0}
    c968:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    c96c:	00975002 	addseq	r5, r7, r2
    c970:	1b000000 	blne	c978 <_Min_Stack_Size+0xb978>
    c974:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    c978:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    c97c:	00009701 	andeq	r9, r0, r1, lsl #14
    c980:	0a500300 	beq	140d588 <__RAM_SIZE+0x130d588>
    c984:	a51c0000 	ldrge	r0, [ip, #-0]
    c988:	0200000e 	andeq	r0, r0, #14
    c98c:	97060234 	smladxls	r6, r4, r2, r0
    c990:	00000000 	andeq	r0, r0, r0
    c994:	5d01011f 	stfpls	f0, [r1, #-124]	; 0xffffff84
    c998:	5d00001f 	stcpl	0, cr0, [r0, #-124]	; 0xffffff84
    c99c:	0500001f 	streq	r0, [r0, #-31]	; 0xffffffe1
    c9a0:	1f0d011b 	svcne	0x000d011b
    c9a4:	1eb40101 	frdnes	f0, f4, f1
    c9a8:	1eb40000 	cdpne	0, 11, cr0, cr4, cr0, {0}
    c9ac:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
    c9b0:	2e000d01 	cdpcs	13, 0, cr0, cr0, cr1, {0}
    c9b4:	02000007 	andeq	r0, r0, #7
    c9b8:	00232c00 	eoreq	r2, r3, r0, lsl #24
    c9bc:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    c9c0:	0c000000 	stceq	0, cr0, [r0], {-0}
    c9c4:	00002207 	andeq	r2, r0, r7, lsl #4
    c9c8:	00000641 	andeq	r0, r0, r1, asr #12
    c9cc:	00000440 	andeq	r0, r0, r0, asr #8
	...
    c9d8:	00004a35 	andeq	r4, r0, r5, lsr sl
    c9dc:	39070402 	stmdbcc	r7, {r1, sl}
    c9e0:	03000002 	movweq	r0, #2
    c9e4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c9e8:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    c9ec:	0004e805 	andeq	lr, r4, r5, lsl #16
    c9f0:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    c9f4:	00000623 	andeq	r0, r0, r3, lsr #12
    c9f8:	52060102 	andpl	r0, r6, #-2147483648	; 0x80000000
    c9fc:	02000008 	andeq	r0, r0, #8
    ca00:	08500801 	ldmdaeq	r0, {r0, fp}^
    ca04:	02020000 	andeq	r0, r2, #0
    ca08:	0006b405 	andeq	fp, r6, r5, lsl #8
    ca0c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    ca10:	0000091e 	andeq	r0, r0, lr, lsl r9
    ca14:	ed050402 	cfstrs	mvf0, [r5, #-8]
    ca18:	02000004 	andeq	r0, r0, #4
    ca1c:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    ca20:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    ca24:	00022f07 	andeq	r2, r2, r7, lsl #30
    ca28:	02040400 	andeq	r0, r4, #0, 8
    ca2c:	08590801 	ldmdaeq	r9, {r0, fp}^
    ca30:	df050000 	svcle	0x00050000
    ca34:	02000008 	andeq	r0, r0, #8
    ca38:	00783173 	rsbseq	r3, r8, r3, ror r1
    ca3c:	7f050000 	svcvc	0x00050000
    ca40:	02000007 	andeq	r0, r0, #7
    ca44:	00293176 	eoreq	r3, r9, r6, ror r1
    ca48:	11050000 	mrsne	r0, (UNDEF: 5)
    ca4c:	02000007 	andeq	r0, r0, #7
    ca50:	00683178 	rsbeq	r3, r8, r8, ror r1
    ca54:	3b060000 	blcc	18ca5c <__RAM_SIZE+0x8ca5c>
    ca58:	1c000005 	stcne	0, cr0, [r0], {5}
    ca5c:	10018203 	andne	r8, r1, r3, lsl #4
    ca60:	00000122 	andeq	r0, r0, r2, lsr #2
    ca64:	00081207 	andeq	r1, r8, r7, lsl #4
    ca68:	01860300 	orreq	r0, r6, r0, lsl #6
    ca6c:	00009719 	andeq	r9, r0, r9, lsl r7
    ca70:	00230200 	eoreq	r0, r3, r0, lsl #4
    ca74:	0003a007 	andeq	sl, r3, r7
    ca78:	01870300 	orreq	r0, r7, r0, lsl #6
    ca7c:	00009719 	andeq	r9, r0, r9, lsl r7
    ca80:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    ca84:	00043d07 	andeq	r3, r4, r7, lsl #26
    ca88:	018a0300 	orreq	r0, sl, r0, lsl #6
    ca8c:	00012e1b 	andeq	r2, r1, fp, lsl lr
    ca90:	08230200 	stmdaeq	r3!, {r9}
    ca94:	0001f207 	andeq	pc, r1, r7, lsl #4
    ca98:	018b0300 	orreq	r0, fp, r0, lsl #6
    ca9c:	00009719 	andeq	r9, r0, r9, lsl r7
    caa0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    caa4:	00095407 	andeq	r5, r9, r7, lsl #8
    caa8:	01910300 	orrseq	r0, r1, r0, lsl #6
    caac:	0001341a 	andeq	r3, r1, sl, lsl r4
    cab0:	10230200 	eorne	r0, r3, r0, lsl #4
    cab4:	00001b07 	andeq	r1, r0, r7, lsl #22
    cab8:	01920300 	orrseq	r0, r2, r0, lsl #6
    cabc:	0001341a 	andeq	r3, r1, sl, lsl r4
    cac0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    cac4:	0005ee07 	andeq	lr, r5, r7, lsl #28
    cac8:	01960300 	orrseq	r0, r6, r0, lsl #6
    cacc:	00013a1b 	andeq	r3, r1, fp, lsl sl
    cad0:	18230200 	stmdane	r3!, {r9}
    cad4:	2e010800 	cdpcs	8, 0, cr0, cr1, cr0, {0}
    cad8:	09000001 	stmdbeq	r0, {r0}
    cadc:	00000097 	muleq	r0, r7, r0
    cae0:	22040a00 	andcs	r0, r4, #0, 20
    cae4:	0a000001 	beq	caf0 <_Min_Stack_Size+0xbaf0>
    cae8:	0000a304 	andeq	sl, r0, r4, lsl #6
    caec:	34040a00 	strcc	r0, [r4], #-2560	; 0xfffff600
    caf0:	0b000001 	bleq	cafc <_Min_Stack_Size+0xbafc>
    caf4:	0000062f 	andeq	r0, r0, pc, lsr #12
    caf8:	03019b03 	movweq	r9, #6915	; 0x1b03
    cafc:	000000a3 	andeq	r0, r0, r3, lsr #1
    cb00:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    cb04:	4b060000 	blmi	18cb0c <__RAM_SIZE+0x8cb0c>
    cb08:	d4000003 	strle	r0, [r0], #-3
    cb0c:	1001d603 	andne	sp, r1, r3, lsl #12
    cb10:	00000467 	andeq	r0, r0, r7, ror #8
    cb14:	00091107 	andeq	r1, r9, r7, lsl #2
    cb18:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    cb1c:	00009719 	andeq	r9, r0, r9, lsl r7
    cb20:	00230200 	eoreq	r0, r3, r0, lsl #4
    cb24:	00078407 	andeq	r8, r7, r7, lsl #8
    cb28:	01de0300 	bicseq	r0, lr, r0, lsl #6
    cb2c:	00009719 	andeq	r9, r0, r9, lsl r7
    cb30:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    cb34:	0001bc07 	andeq	fp, r1, r7, lsl #24
    cb38:	01df0300 	bicseq	r0, pc, r0, lsl #6
    cb3c:	0000761a 	andeq	r7, r0, sl, lsl r6
    cb40:	08230200 	stmdaeq	r3!, {r9}
    cb44:	0008fb07 	andeq	pc, r8, r7, lsl #22
    cb48:	01e00300 	mvneq	r0, r0, lsl #6
    cb4c:	0000761a 	andeq	r7, r0, sl, lsl r6
    cb50:	0c230200 	sfmeq	f0, 4, [r3], #-0
    cb54:	00041107 	andeq	r1, r4, r7, lsl #2
    cb58:	01e10300 	mvneq	r0, r0, lsl #6
    cb5c:	0000761a 	andeq	r7, r0, sl, lsl r6
    cb60:	10230200 	eorne	r0, r3, r0, lsl #4
    cb64:	00093f07 	andeq	r3, r9, r7, lsl #30
    cb68:	01e20300 	mvneq	r0, r0, lsl #6
    cb6c:	00009719 	andeq	r9, r0, r9, lsl r7
    cb70:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    cb74:	0021d107 	eoreq	sp, r1, r7, lsl #2
    cb78:	01e30300 	mvneq	r0, r0, lsl #6
    cb7c:	00009719 	andeq	r9, r0, r9, lsl r7
    cb80:	18230200 	stmdane	r3!, {r9}
    cb84:	00060a07 	andeq	r0, r6, r7, lsl #20
    cb88:	01e40300 	mvneq	r0, r0, lsl #6
    cb8c:	00009719 	andeq	r9, r0, r9, lsl r7
    cb90:	1c230200 	sfmne	f0, 4, [r3], #-0
    cb94:	00069f07 	andeq	r9, r6, r7, lsl #30
    cb98:	01e80300 	mvneq	r0, r0, lsl #6
    cb9c:	0004671a 	andeq	r6, r4, sl, lsl r7
    cba0:	20230200 	eorcs	r0, r3, r0, lsl #4
    cba4:	00019907 	andeq	r9, r1, r7, lsl #18
    cba8:	01e90300 	mvneq	r0, r0, lsl #6
    cbac:	0004671a 	andeq	r6, r4, sl, lsl r7
    cbb0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    cbb4:	00059607 	andeq	r9, r5, r7, lsl #12
    cbb8:	01f10300 	mvnseq	r0, r0, lsl #6
    cbbc:	00014d1a 	andeq	r4, r1, sl, lsl sp
    cbc0:	28230200 	stmdacs	r3!, {r9}
    cbc4:	0002d907 	andeq	sp, r2, r7, lsl #18
    cbc8:	01f20300 	mvnseq	r0, r0, lsl #6
    cbcc:	00008b19 	andeq	r8, r0, r9, lsl fp
    cbd0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    cbd4:	00024607 	andeq	r4, r2, r7, lsl #12
    cbd8:	01f30300 	mvnseq	r0, r0, lsl #6
    cbdc:	00008b19 	andeq	r8, r0, r9, lsl fp
    cbe0:	30230200 	eorcc	r0, r3, r0, lsl #4
    cbe4:	00017307 	andeq	r7, r1, r7, lsl #6
    cbe8:	01f40300 	mvnseq	r0, r0, lsl #6
    cbec:	00008b19 	andeq	r8, r0, r9, lsl fp
    cbf0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    cbf4:	00073007 	andeq	r3, r7, r7
    cbf8:	01f50300 	mvnseq	r0, r0, lsl #6
    cbfc:	00008b19 	andeq	r8, r0, r9, lsl fp
    cc00:	38230200 	stmdacc	r3!, {r9}
    cc04:	0000eb07 	andeq	lr, r0, r7, lsl #22
    cc08:	01f60300 	mvnseq	r0, r0, lsl #6
    cc0c:	00008b19 	andeq	r8, r0, r9, lsl fp
    cc10:	3c230200 	sfmcc	f0, 4, [r3], #-0
    cc14:	00035c07 	andeq	r5, r3, r7, lsl #24
    cc18:	01fb0300 	mvnseq	r0, r0, lsl #6
    cc1c:	00047e1b 	andeq	r7, r4, fp, lsl lr
    cc20:	40230200 	eormi	r0, r3, r0, lsl #4
    cc24:	00015207 	andeq	r5, r1, r7, lsl #4
    cc28:	02030300 	andeq	r0, r3, #0, 6
    cc2c:	00012e1b 	andeq	r2, r1, fp, lsl lr
    cc30:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    cc34:	00010707 	andeq	r0, r1, r7, lsl #14
    cc38:	02040300 	andeq	r0, r4, #0, 6
    cc3c:	00009719 	andeq	r9, r0, r9, lsl r7
    cc40:	48230200 	stmdami	r3!, {r9}
    cc44:	00033b07 	andeq	r3, r3, r7, lsl #22
    cc48:	02080300 	andeq	r0, r8, #0, 6
    cc4c:	00014019 	andeq	r4, r1, r9, lsl r0
    cc50:	4c230200 	sfmmi	f0, 4, [r3], #-0
    cc54:	0002ec07 	andeq	lr, r2, r7, lsl #24
    cc58:	020e0300 	andeq	r0, lr, #0, 6
    cc5c:	00047e1b 	andeq	r7, r4, fp, lsl lr
    cc60:	68230200 	stmdavs	r3!, {r9}
    cc64:	0005ce07 	andeq	ip, r5, r7, lsl #28
    cc68:	020f0300 	andeq	r0, pc, #0, 6
    cc6c:	0000761a 	andeq	r7, r0, sl, lsl r6
    cc70:	6c230200 	sfmvs	f0, 4, [r3], #-0
    cc74:	00071707 	andeq	r1, r7, r7, lsl #14
    cc78:	02110300 	andseq	r0, r1, #0, 6
    cc7c:	0004671a 	andeq	r6, r4, sl, lsl r7
    cc80:	70230200 	eorvc	r0, r3, r0, lsl #4
    cc84:	00021207 	andeq	r1, r2, r7, lsl #4
    cc88:	02120300 	andseq	r0, r2, #0, 6
    cc8c:	0004671a 	andeq	r6, r4, sl, lsl r7
    cc90:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    cc94:	0006fa07 	andeq	pc, r6, r7, lsl #20
    cc98:	02130300 	andseq	r0, r3, #0, 6
    cc9c:	00009719 	andeq	r9, r0, r9, lsl r7
    cca0:	78230200 	stmdavc	r3!, {r9}
    cca4:	0003c607 	andeq	ip, r3, r7, lsl #12
    cca8:	02140300 	andseq	r0, r4, #0, 6
    ccac:	0000761a 	andeq	r7, r0, sl, lsl r6
    ccb0:	7c230200 	sfmvc	f0, 4, [r3], #-0
    ccb4:	00055407 	andeq	r5, r5, r7, lsl #8
    ccb8:	02150300 	andseq	r0, r5, #0, 6
    ccbc:	00008b19 	andeq	r8, r0, r9, lsl fp
    ccc0:	80230300 	eorhi	r0, r3, r0, lsl #6
    ccc4:	03e80701 	mvneq	r0, #262144	; 0x40000
    ccc8:	16030000 	strne	r0, [r3], -r0
    cccc:	008b1902 	addeq	r1, fp, r2, lsl #18
    ccd0:	23030000 	movwcs	r0, #12288	; 0x3000
    ccd4:	e4070184 	str	r0, [r7], #-388	; 0xfffffe7c
    ccd8:	03000008 	movweq	r0, #8
    ccdc:	671a021f 			; <UNDEFINED> instruction: 0x671a021f
    cce0:	03000004 	movweq	r0, #4
    cce4:	07018823 	streq	r8, [r1, -r3, lsr #16]
    cce8:	000007d5 	ldrdeq	r0, [r0], -r5
    ccec:	1a022003 	bne	94d00 <SYSTICK_CYCLES+0x6bcc1>
    ccf0:	00000467 	andeq	r0, r0, r7, ror #8
    ccf4:	018c2303 	orreq	r2, ip, r3, lsl #6
    ccf8:	0002c107 	andeq	ip, r2, r7, lsl #2
    ccfc:	022e0300 	eoreq	r0, lr, #0, 6
    cd00:	00008b19 	andeq	r8, r0, r9, lsl fp
    cd04:	90230300 	eorls	r0, r3, r0, lsl #6
    cd08:	02560701 	subseq	r0, r6, #262144	; 0x40000
    cd0c:	2f030000 	svccs	0x00030000
    cd10:	008b1902 	addeq	r1, fp, r2, lsl #18
    cd14:	23030000 	movwcs	r0, #12288	; 0x3000
    cd18:	20070194 	mulcs	r7, r4, r1
    cd1c:	03000003 	movweq	r0, #3
    cd20:	8b190230 	blhi	64d5e8 <__RAM_SIZE+0x54d5e8>
    cd24:	03000000 	movweq	r0, #0
    cd28:	07019823 	streq	r9, [r1, -r3, lsr #16]
    cd2c:	00000277 	andeq	r0, r0, r7, ror r2
    cd30:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    cd34:	0000008b 	andeq	r0, r0, fp, lsl #1
    cd38:	019c2303 	orrseq	r2, ip, r3, lsl #6
    cd3c:	00000007 	andeq	r0, r0, r7
    cd40:	02350300 	eorseq	r0, r5, #0, 6
    cd44:	0005631a 	andeq	r6, r5, sl, lsl r3
    cd48:	a0230300 	eorge	r0, r3, r0, lsl #6
    cd4c:	1bb70701 	blne	fedce958 <__RAM_segment_used_end__+0xc6cce958>
    cd50:	3a030000 	bcc	ccd58 <SYSTICK_CYCLES+0xa3d19>
    cd54:	00971902 	addseq	r1, r7, r2, lsl #18
    cd58:	23030000 	movwcs	r0, #12288	; 0x3000
    cd5c:	770701a4 	strvc	r0, [r7, -r4, lsr #3]
    cd60:	0300001c 	movweq	r0, #28
    cd64:	9719023d 			; <UNDEFINED> instruction: 0x9719023d
    cd68:	03000000 	movweq	r0, #0
    cd6c:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    cd70:	00001b30 	andeq	r1, r0, r0, lsr fp
    cd74:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    cd78:	00000097 	muleq	r0, r7, r0
    cd7c:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    cd80:	001d2e07 	andseq	r2, sp, r7, lsl #28
    cd84:	02450300 	subeq	r0, r5, #0, 6
    cd88:	00009719 	andeq	r9, r0, r9, lsl r7
    cd8c:	b0230300 	eorlt	r0, r3, r0, lsl #6
    cd90:	1c470701 	mcrrne	7, 0, r0, r7, cr1
    cd94:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    cd98:	00971902 	addseq	r1, r7, r2, lsl #18
    cd9c:	23030000 	movwcs	r0, #12288	; 0x3000
    cda0:	a80701b4 	stmdage	r7, {r2, r4, r5, r7, r8}
    cda4:	03000007 	movweq	r0, #7
    cda8:	671a024c 	ldrvs	r0, [sl, -ip, asr #4]
    cdac:	03000004 	movweq	r0, #4
    cdb0:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    cdb4:	00001d06 	andeq	r1, r0, r6, lsl #26
    cdb8:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    cdbc:	00000097 	muleq	r0, r7, r0
    cdc0:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    cdc4:	001b0807 	andseq	r0, fp, r7, lsl #16
    cdc8:	02520300 	subseq	r0, r2, #0, 6
    cdcc:	00009719 	andeq	r9, r0, r9, lsl r7
    cdd0:	c0230300 	eorgt	r0, r3, r0, lsl #6
    cdd4:	1a850701 	bne	fe14e9e0 <__RAM_segment_used_end__+0xc604e9e0>
    cdd8:	55030000 	strpl	r0, [r3, #-0]
    cddc:	00971902 	addseq	r1, r7, r2, lsl #18
    cde0:	23030000 	movwcs	r0, #12288	; 0x3000
    cde4:	db0701c4 	blle	1cd4fc <__RAM_SIZE+0xcd4fc>
    cde8:	0300001b 	movweq	r0, #27
    cdec:	97190259 			; <UNDEFINED> instruction: 0x97190259
    cdf0:	03000000 	movweq	r0, #0
    cdf4:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    cdf8:	000009a9 	andeq	r0, r0, r9, lsr #19
    cdfc:	1a025d03 	bne	a4210 <SYSTICK_CYCLES+0x7b1d1>
    ce00:	00000076 	andeq	r0, r0, r6, ror r0
    ce04:	01cc2303 	biceq	r2, ip, r3, lsl #6
    ce08:	00048107 	andeq	r8, r4, r7, lsl #2
    ce0c:	02780300 	rsbseq	r0, r8, #0, 6
    ce10:	00009719 	andeq	r9, r0, r9, lsl r7
    ce14:	d0230300 	eorle	r0, r3, r0, lsl #6
    ce18:	040a0001 	streq	r0, [sl], #-1
    ce1c:	00000153 	andeq	r0, r0, r3, asr r1
    ce20:	047e0108 	ldrbteq	r0, [lr], #-264	; 0xfffffef8
    ce24:	67090000 	strvs	r0, [r9, -r0]
    ce28:	09000004 	stmdbeq	r0, {r2}
    ce2c:	00000097 	muleq	r0, r7, r0
    ce30:	6d040a00 	vstrvs	s0, [r4, #-0]
    ce34:	06000004 	streq	r0, [r0], -r4
    ce38:	00000798 	muleq	r0, r8, r7
    ce3c:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    ce40:	00056310 	andeq	r6, r5, r0, lsl r3
    ce44:	018d0700 	orreq	r0, sp, r0, lsl #14
    ce48:	82030000 	andhi	r0, r3, #0
    ce4c:	00971903 	addseq	r1, r7, r3, lsl #18
    ce50:	23020000 	movwcs	r0, #8192	; 0x2000
    ce54:	087c0700 	ldmdaeq	ip!, {r8, r9, sl}^
    ce58:	85030000 	strhi	r0, [r3, #-0]
    ce5c:	014d1a03 	cmpeq	sp, r3, lsl #20
    ce60:	23020000 	movwcs	r0, #8192	; 0x2000
    ce64:	06e10704 	strbteq	r0, [r1], r4, lsl #14
    ce68:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    ce6c:	008b1903 	addeq	r1, fp, r3, lsl #18
    ce70:	23020000 	movwcs	r0, #8192	; 0x2000
    ce74:	04cb0708 	strbeq	r0, [fp], #1800	; 0x708
    ce78:	8c030000 	stchi	0, cr0, [r3], {-0}
    ce7c:	05761a03 	ldrbeq	r1, [r6, #-2563]!	; 0xfffff5fd
    ce80:	23020000 	movwcs	r0, #8192	; 0x2000
    ce84:	0162070c 	cmneq	r2, ip, lsl #14
    ce88:	90030000 	andls	r0, r3, r0
    ce8c:	008b1903 	addeq	r1, fp, r3, lsl #18
    ce90:	23020000 	movwcs	r0, #8192	; 0x2000
    ce94:	01210710 			; <UNDEFINED> instruction: 0x01210710
    ce98:	93030000 	movwls	r0, #12288	; 0x3000
    ce9c:	008b1903 	addeq	r1, fp, r3, lsl #18
    cea0:	23020000 	movwcs	r0, #8192	; 0x2000
    cea4:	08b20714 	ldmeq	r2!, {r2, r4, r8, r9, sl}
    cea8:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    ceac:	04671a03 	strbteq	r1, [r7], #-2563	; 0xfffff5fd
    ceb0:	23020000 	movwcs	r0, #8192	; 0x2000
    ceb4:	06c80718 			; <UNDEFINED> instruction: 0x06c80718
    ceb8:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    cebc:	008b1903 	addeq	r1, fp, r3, lsl #18
    cec0:	23020000 	movwcs	r0, #8192	; 0x2000
    cec4:	05b8071c 	ldreq	r0, [r8, #1820]!	; 0x71c
    cec8:	9d030000 	stcls	0, cr0, [r3, #-0]
    cecc:	05631a03 	strbeq	r1, [r3, #-2563]!	; 0xfffff5fd
    ced0:	23020000 	movwcs	r0, #8192	; 0x2000
    ced4:	06850720 	streq	r0, [r5], r0, lsr #14
    ced8:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    cedc:	05631a03 	strbeq	r1, [r3, #-2563]!	; 0xfffff5fd
    cee0:	23020000 	movwcs	r0, #8192	; 0x2000
    cee4:	01d00724 	bicseq	r0, r0, r4, lsr #14
    cee8:	a2030000 	andge	r0, r3, #0
    ceec:	008b1903 	addeq	r1, fp, r3, lsl #18
    cef0:	23020000 	movwcs	r0, #8192	; 0x2000
    cef4:	09c50728 	stmibeq	r5, {r3, r5, r8, r9, sl}^
    cef8:	a6030000 	strge	r0, [r3], -r0
    cefc:	05631a03 	strbeq	r1, [r3, #-2563]!	; 0xfffff5fd
    cf00:	23020000 	movwcs	r0, #8192	; 0x2000
    cf04:	0425072c 	strteq	r0, [r5], #-1836	; 0xfffff8d4
    cf08:	a7030000 	strge	r0, [r3, -r0]
    cf0c:	05631a03 	strbeq	r1, [r3, #-2563]!	; 0xfffff5fd
    cf10:	23020000 	movwcs	r0, #8192	; 0x2000
    cf14:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    cf18:	00000484 	andeq	r0, r0, r4, lsl #9
    cf1c:	0008d40b 	andeq	sp, r8, fp, lsl #8
    cf20:	02860300 	addeq	r0, r6, #0, 6
    cf24:	00015303 	andeq	r5, r1, r3, lsl #6
    cf28:	69040a00 	stmdbvs	r4, {r9, fp}
    cf2c:	0c000005 	stceq	0, cr0, [r0], {5}
    cf30:	00001a84 	andeq	r1, r0, r4, lsl #21
    cf34:	2101f704 	tstcs	r1, r4, lsl #14	; <UNPREDICTABLE>
    cf38:	00000097 	muleq	r0, r7, r0
    cf3c:	010d0101 	tsteq	sp, r1, lsl #2
    cf40:	000021e6 	andeq	r2, r0, r6, ror #3
    cf44:	01074e01 	tsteq	r7, r1, lsl #28
    cf48:	10002898 	mulne	r0, r8, r8
    cf4c:	100028d4 	ldrdne	r2, [r0], -r4
    cf50:	00004d6c 	andeq	r4, r0, ip, ror #26
    cf54:	0006c301 	andeq	ip, r6, r1, lsl #6
    cf58:	21f90e00 	mvnscs	r0, r0, lsl #28
    cf5c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    cf60:	00009720 	andeq	r9, r0, r0, lsr #14
    cf64:	004d9400 	subeq	r9, sp, r0, lsl #8
    cf68:	004d8c00 	subeq	r8, sp, r0, lsl #24
    cf6c:	0ee20f00 	cdpeq	15, 14, cr0, cr2, cr0, {0}
    cf70:	51010000 	mrspl	r0, (UNDEF: 1)
    cf74:	00008b01 	andeq	r8, r0, r1, lsl #22
    cf78:	004dd000 	subeq	sp, sp, r0
    cf7c:	004dce00 	subeq	ip, sp, r0, lsl #28
    cf80:	19cf0f00 	stmibne	pc, {r8, r9, sl, fp}^	; <UNPREDICTABLE>
    cf84:	53010000 	movwpl	r0, #4096	; 0x1000
    cf88:	00057612 	andeq	r7, r5, r2, lsl r6
    cf8c:	004deb00 	subeq	lr, sp, r0, lsl #22
    cf90:	004de300 	subeq	lr, sp, r0, lsl #6
    cf94:	02f60f00 	rscseq	r0, r6, #0, 30
    cf98:	54010000 	strpl	r0, [r1], #-0
    cf9c:	00047e13 	andeq	r7, r4, r3, lsl lr
    cfa0:	004e2700 	subeq	r2, lr, r0, lsl #14
    cfa4:	004e2500 	subeq	r2, lr, r0, lsl #10
    cfa8:	048b0f00 	streq	r0, [fp], #3840	; 0xf00
    cfac:	55010000 	strpl	r0, [r1, #-0]
    cfb0:	00009711 	andeq	r9, r0, r1, lsl r7
    cfb4:	004e3c00 	subeq	r3, lr, r0, lsl #24
    cfb8:	004e3a00 	subeq	r3, lr, r0, lsl #20
    cfbc:	06c31000 	strbeq	r1, [r3], r0
    cfc0:	289a0000 	ldmcs	sl, {}	; <UNPREDICTABLE>
    cfc4:	9a061000 	bls	190fcc <__RAM_SIZE+0x90fcc>
    cfc8:	a0100028 	andsge	r0, r0, r8, lsr #32
    cfcc:	01100028 	tsteq	r0, r8, lsr #32
    cfd0:	0655055c 			; <UNDEFINED> instruction: 0x0655055c
    cfd4:	d6110000 	ldrle	r0, [r1], -r0
    cfd8:	52000006 	andpl	r0, r0, #6
    cfdc:	5000004e 	andpl	r0, r0, lr, asr #32
    cfe0:	1200004e 	andne	r0, r0, #78	; 0x4e
    cfe4:	00000701 	andeq	r0, r0, r1, lsl #14
    cfe8:	1000289a 	mulne	r0, sl, r8
    cfec:	00289a09 	eoreq	r9, r8, r9, lsl #20
    cff0:	00289e10 	eoreq	r9, r8, r0, lsl lr
    cff4:	02560210 	subseq	r0, r6, #16, 4
    cff8:	07141113 			; <UNDEFINED> instruction: 0x07141113
    cffc:	4e670000 	cdpmi	0, 6, cr0, cr7, cr0, {0}
    d000:	4e650000 	cdpmi	0, 6, cr0, cr5, cr0, {0}
    d004:	00000000 	andeq	r0, r0, r0
    d008:	0006e410 	andeq	lr, r6, r0, lsl r4
    d00c:	0028c000 	eoreq	ip, r8, r0
    d010:	28c00110 	stmiacs	r0, {r4, r8}^
    d014:	28c41000 	stmiacs	r4, {ip}^
    d018:	a2011000 	andge	r1, r1, #0
    d01c:	00067c09 	andeq	r7, r6, r9, lsl #24
    d020:	06f31300 	ldrbteq	r1, [r3], r0, lsl #6
    d024:	4e7c0000 	cdpmi	0, 7, cr0, cr12, cr0, {0}
    d028:	4e7a0000 	cdpmi	0, 7, cr0, cr10, cr0, {0}
    d02c:	10000000 	andne	r0, r0, r0
    d030:	000006e4 	andeq	r0, r0, r4, ror #13
    d034:	100028ca 	andne	r2, r0, sl, asr #17
    d038:	0028ca01 	eoreq	ip, r8, r1, lsl #20
    d03c:	0028d410 	eoreq	sp, r8, r0, lsl r4
    d040:	09680110 	stmdbeq	r8!, {r4, r8}^
    d044:	000006a3 	andeq	r0, r0, r3, lsr #13
    d048:	0006f313 	andeq	pc, r6, r3, lsl r3	; <UNPREDICTABLE>
    d04c:	004e9100 	subeq	r9, lr, r0, lsl #2
    d050:	004e8f00 	subeq	r8, lr, r0, lsl #30
    d054:	c0140000 	andsgt	r0, r4, r0
    d058:	b9100028 	ldmdblt	r0, {r3, r5}
    d05c:	15000006 	strne	r0, [r0, #-6]
    d060:	f3035001 	vhadd.u8	d5, d3, d1
    d064:	01155001 	tsteq	r5, r1
    d068:	00300151 	eorseq	r0, r0, r1, asr r1
    d06c:	0028ca16 	eoreq	ip, r8, r6, lsl sl
    d070:	00072210 	andeq	r2, r7, r0, lsl r2
    d074:	18170000 	ldmdane	r7, {}	; <UNPREDICTABLE>
    d078:	0200000f 	andeq	r0, r0, #15
    d07c:	01370252 	teqeq	r7, r2, asr r2
    d080:	0000008b 	andeq	r0, r0, fp, lsl #1
    d084:	0006e403 	andeq	lr, r6, r3, lsl #8
    d088:	0ea11800 	cdpeq	8, 10, cr1, cr1, cr0, {0}
    d08c:	54020000 	strpl	r0, [r2], #-0
    d090:	008b0602 	addeq	r0, fp, r2, lsl #12
    d094:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    d098:	00000e8d 	andeq	r0, r0, sp, lsl #29
    d09c:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    d0a0:	07010301 	streq	r0, [r1, -r1, lsl #6]
    d0a4:	a11a0000 	tstge	sl, r0
    d0a8:	0200000e 	andeq	r0, r0, #14
    d0ac:	8b500249 	blhi	140d9d8 <__RAM_SIZE+0x130d9d8>
    d0b0:	00000000 	andeq	r0, r0, r0
    d0b4:	000eb617 	andeq	fp, lr, r7, lsl r6
    d0b8:	02320200 	eorseq	r0, r2, #0, 4
    d0bc:	008b0137 	addeq	r0, fp, r7, lsr r1
    d0c0:	22030000 	andcs	r0, r3, #0
    d0c4:	18000007 	stmdane	r0, {r0, r1, r2}
    d0c8:	00000ea5 	andeq	r0, r0, r5, lsr #29
    d0cc:	06023402 	streq	r3, [r2], -r2, lsl #8
    d0d0:	0000008b 	andeq	r0, r0, fp, lsl #1
    d0d4:	01011b00 	tsteq	r1, r0, lsl #22
    d0d8:	00001058 	andeq	r1, r0, r8, asr r0
    d0dc:	00001058 	andeq	r1, r0, r8, asr r0
    d0e0:	0d011e04 	stceq	14, cr1, [r1, #-16]
    d0e4:	0006a000 	andeq	sl, r6, r0
    d0e8:	d1000200 	mrsle	r0, R8_usr
    d0ec:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    d0f0:	00003d01 	andeq	r3, r0, r1, lsl #26
    d0f4:	223f0c00 	eorscs	r0, pc, #0, 24
    d0f8:	06410000 	strbeq	r0, [r1], -r0
    d0fc:	04500000 	ldrbeq	r0, [r0], #-0
	...
    d108:	4bb50000 	blmi	fed4d110 <__RAM_segment_used_end__+0xc6c4d110>
    d10c:	04020000 	streq	r0, [r2], #-0
    d110:	00023907 	andeq	r3, r2, r7, lsl #18
    d114:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    d118:	00746e69 	rsbseq	r6, r4, r9, ror #28
    d11c:	e8050802 	stmda	r5, {r1, fp}
    d120:	02000004 	andeq	r0, r0, #4
    d124:	06230408 	strteq	r0, [r3], -r8, lsl #8
    d128:	01020000 	mrseq	r0, (UNDEF: 2)
    d12c:	00085206 	andeq	r5, r8, r6, lsl #4
    d130:	08010200 	stmdaeq	r1, {r9}
    d134:	00000850 	andeq	r0, r0, r0, asr r8
    d138:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    d13c:	02000006 	andeq	r0, r0, #6
    d140:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    d144:	04020000 	streq	r0, [r2], #-0
    d148:	0004ed05 	andeq	lr, r4, r5, lsl #26
    d14c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    d150:	00000234 	andeq	r0, r0, r4, lsr r2
    d154:	2f070802 	svccs	0x00070802
    d158:	04000002 	streq	r0, [r0], #-2
    d15c:	08010204 	stmdaeq	r1, {r2, r9}
    d160:	00000859 	andeq	r0, r0, r9, asr r8
    d164:	0008df05 	andeq	sp, r8, r5, lsl #30
    d168:	31730200 	cmncc	r3, r0, lsl #4
    d16c:	00000078 	andeq	r0, r0, r8, ror r0
    d170:	00077f05 	andeq	r7, r7, r5, lsl #30
    d174:	31760200 	cmncc	r6, r0, lsl #4
    d178:	00000029 	andeq	r0, r0, r9, lsr #32
    d17c:	00071105 	andeq	r1, r7, r5, lsl #2
    d180:	31780200 	cmncc	r8, r0, lsl #4
    d184:	00000068 	andeq	r0, r0, r8, rrx
    d188:	00053b06 	andeq	r3, r5, r6, lsl #22
    d18c:	82031c00 	andhi	r1, r3, #0, 24
    d190:	01221001 			; <UNDEFINED> instruction: 0x01221001
    d194:	12070000 	andne	r0, r7, #0
    d198:	03000008 	movweq	r0, #8
    d19c:	97190186 	ldrls	r0, [r9, -r6, lsl #3]
    d1a0:	02000000 	andeq	r0, r0, #0
    d1a4:	a0070023 	andge	r0, r7, r3, lsr #32
    d1a8:	03000003 	movweq	r0, #3
    d1ac:	97190187 	ldrls	r0, [r9, -r7, lsl #3]
    d1b0:	02000000 	andeq	r0, r0, #0
    d1b4:	3d070423 	cfstrscc	mvf0, [r7, #-140]	; 0xffffff74
    d1b8:	03000004 	movweq	r0, #4
    d1bc:	2e1b018a 	mufcs<illegal precision>	f0, f3, #2.0
    d1c0:	02000001 	andeq	r0, r0, #1
    d1c4:	f2070823 	vadd.i8	d0, d7, d19
    d1c8:	03000001 	movweq	r0, #1
    d1cc:	9719018b 	ldrls	r0, [r9, -fp, lsl #3]
    d1d0:	02000000 	andeq	r0, r0, #0
    d1d4:	54070c23 	strpl	r0, [r7], #-3107	; 0xfffff3dd
    d1d8:	03000009 	movweq	r0, #9
    d1dc:	341a0191 	ldrcc	r0, [sl], #-401	; 0xfffffe6f
    d1e0:	02000001 	andeq	r0, r0, #1
    d1e4:	1b071023 	blne	1d1278 <__RAM_SIZE+0xd1278>
    d1e8:	03000000 	movweq	r0, #0
    d1ec:	341a0192 	ldrcc	r0, [sl], #-402	; 0xfffffe6e
    d1f0:	02000001 	andeq	r0, r0, #1
    d1f4:	ee071423 	cdp	4, 0, cr1, cr7, cr3, {1}
    d1f8:	03000005 	movweq	r0, #5
    d1fc:	3a1b0196 	bcc	6cd85c <__RAM_SIZE+0x5cd85c>
    d200:	02000001 	andeq	r0, r0, #1
    d204:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    d208:	00012e01 	andeq	r2, r1, r1, lsl #28
    d20c:	00970900 	addseq	r0, r7, r0, lsl #18
    d210:	0a000000 	beq	d218 <_Min_Stack_Size+0xc218>
    d214:	00012204 	andeq	r2, r1, r4, lsl #4
    d218:	a3040a00 	movwge	r0, #18944	; 0x4a00
    d21c:	0a000000 	beq	d224 <_Min_Stack_Size+0xc224>
    d220:	00013404 	andeq	r3, r1, r4, lsl #8
    d224:	062f0b00 	strteq	r0, [pc], -r0, lsl #22
    d228:	9b030000 	blls	cd230 <SYSTICK_CYCLES+0xa41f1>
    d22c:	00a30301 	adceq	r0, r3, r1, lsl #6
    d230:	040a0000 	streq	r0, [sl], #-0
    d234:	0000007f 	andeq	r0, r0, pc, ror r0
    d238:	00034b06 	andeq	r4, r3, r6, lsl #22
    d23c:	d603d400 	strle	sp, [r3], -r0, lsl #8
    d240:	04671001 	strbteq	r1, [r7], #-1
    d244:	11070000 	mrsne	r0, (UNDEF: 7)
    d248:	03000009 	movweq	r0, #9
    d24c:	971901dd 			; <UNDEFINED> instruction: 0x971901dd
    d250:	02000000 	andeq	r0, r0, #0
    d254:	84070023 	strhi	r0, [r7], #-35	; 0xffffffdd
    d258:	03000007 	movweq	r0, #7
    d25c:	971901de 			; <UNDEFINED> instruction: 0x971901de
    d260:	02000000 	andeq	r0, r0, #0
    d264:	bc070423 	cfstrslt	mvf0, [r7], {35}	; 0x23
    d268:	03000001 	movweq	r0, #1
    d26c:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    d270:	02000000 	andeq	r0, r0, #0
    d274:	fb070823 	blx	1cf30a <__RAM_SIZE+0xcf30a>
    d278:	03000008 	movweq	r0, #8
    d27c:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    d280:	02000000 	andeq	r0, r0, #0
    d284:	11070c23 	tstne	r7, r3, lsr #24
    d288:	03000004 	movweq	r0, #4
    d28c:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    d290:	02000000 	andeq	r0, r0, #0
    d294:	3f071023 	svccc	0x00071023
    d298:	03000009 	movweq	r0, #9
    d29c:	971901e2 	ldrls	r0, [r9, -r2, ror #3]
    d2a0:	02000000 	andeq	r0, r0, #0
    d2a4:	d1071423 	tstle	r7, r3, lsr #8
    d2a8:	03000021 	movweq	r0, #33	; 0x21
    d2ac:	971901e3 	ldrls	r0, [r9, -r3, ror #3]
    d2b0:	02000000 	andeq	r0, r0, #0
    d2b4:	0a071823 	beq	1d3348 <__RAM_SIZE+0xd3348>
    d2b8:	03000006 	movweq	r0, #6
    d2bc:	971901e4 	ldrls	r0, [r9, -r4, ror #3]
    d2c0:	02000000 	andeq	r0, r0, #0
    d2c4:	9f071c23 	svcls	0x00071c23
    d2c8:	03000006 	movweq	r0, #6
    d2cc:	671a01e8 	ldrvs	r0, [sl, -r8, ror #3]
    d2d0:	02000004 	andeq	r0, r0, #4
    d2d4:	99072023 	stmdbls	r7, {r0, r1, r5, sp}
    d2d8:	03000001 	movweq	r0, #1
    d2dc:	671a01e9 	ldrvs	r0, [sl, -r9, ror #3]
    d2e0:	02000004 	andeq	r0, r0, #4
    d2e4:	96072423 	strls	r2, [r7], -r3, lsr #8
    d2e8:	03000005 	movweq	r0, #5
    d2ec:	4d1a01f1 	ldfmis	f0, [sl, #-964]	; 0xfffffc3c
    d2f0:	02000001 	andeq	r0, r0, #1
    d2f4:	d9072823 	stmdble	r7, {r0, r1, r5, fp, sp}
    d2f8:	03000002 	movweq	r0, #2
    d2fc:	8b1901f2 	blhi	64dacc <__RAM_SIZE+0x54dacc>
    d300:	02000000 	andeq	r0, r0, #0
    d304:	46072c23 	strmi	r2, [r7], -r3, lsr #24
    d308:	03000002 	movweq	r0, #2
    d30c:	8b1901f3 	blhi	64dae0 <__RAM_SIZE+0x54dae0>
    d310:	02000000 	andeq	r0, r0, #0
    d314:	73073023 	movwvc	r3, #28707	; 0x7023
    d318:	03000001 	movweq	r0, #1
    d31c:	8b1901f4 	blhi	64daf4 <__RAM_SIZE+0x54daf4>
    d320:	02000000 	andeq	r0, r0, #0
    d324:	30073423 	andcc	r3, r7, r3, lsr #8
    d328:	03000007 	movweq	r0, #7
    d32c:	8b1901f5 	blhi	64db08 <__RAM_SIZE+0x54db08>
    d330:	02000000 	andeq	r0, r0, #0
    d334:	eb073823 	bl	1db3c8 <__RAM_SIZE+0xdb3c8>
    d338:	03000000 	movweq	r0, #0
    d33c:	8b1901f6 	blhi	64db1c <__RAM_SIZE+0x54db1c>
    d340:	02000000 	andeq	r0, r0, #0
    d344:	5c073c23 	stcpl	12, cr3, [r7], {35}	; 0x23
    d348:	03000003 	movweq	r0, #3
    d34c:	7e1b01fb 	mrcvc	1, 0, r0, cr11, cr11, {7}
    d350:	02000004 	andeq	r0, r0, #4
    d354:	52074023 	andpl	r4, r7, #35	; 0x23
    d358:	03000001 	movweq	r0, #1
    d35c:	2e1b0203 	cdpcs	2, 1, cr0, cr11, cr3, {0}
    d360:	02000001 	andeq	r0, r0, #1
    d364:	07074423 	streq	r4, [r7, -r3, lsr #8]
    d368:	03000001 	movweq	r0, #1
    d36c:	97190204 	ldrls	r0, [r9, -r4, lsl #4]
    d370:	02000000 	andeq	r0, r0, #0
    d374:	3b074823 	blcc	1df408 <__RAM_SIZE+0xdf408>
    d378:	03000003 	movweq	r0, #3
    d37c:	40190208 	andsmi	r0, r9, r8, lsl #4
    d380:	02000001 	andeq	r0, r0, #1
    d384:	ec074c23 	stc	12, cr4, [r7], {35}	; 0x23
    d388:	03000002 	movweq	r0, #2
    d38c:	7e1b020e 	cdpvc	2, 1, cr0, cr11, cr14, {0}
    d390:	02000004 	andeq	r0, r0, #4
    d394:	ce076823 	cdpgt	8, 0, cr6, cr7, cr3, {1}
    d398:	03000005 	movweq	r0, #5
    d39c:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    d3a0:	02000000 	andeq	r0, r0, #0
    d3a4:	17076c23 	strne	r6, [r7, -r3, lsr #24]
    d3a8:	03000007 	movweq	r0, #7
    d3ac:	671a0211 			; <UNDEFINED> instruction: 0x671a0211
    d3b0:	02000004 	andeq	r0, r0, #4
    d3b4:	12077023 	andne	r7, r7, #35	; 0x23
    d3b8:	03000002 	movweq	r0, #2
    d3bc:	671a0212 			; <UNDEFINED> instruction: 0x671a0212
    d3c0:	02000004 	andeq	r0, r0, #4
    d3c4:	fa077423 	blx	1ea458 <__RAM_SIZE+0xea458>
    d3c8:	03000006 	movweq	r0, #6
    d3cc:	97190213 			; <UNDEFINED> instruction: 0x97190213
    d3d0:	02000000 	andeq	r0, r0, #0
    d3d4:	c6077823 	strgt	r7, [r7], -r3, lsr #16
    d3d8:	03000003 	movweq	r0, #3
    d3dc:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    d3e0:	02000000 	andeq	r0, r0, #0
    d3e4:	54077c23 	strpl	r7, [r7], #-3107	; 0xfffff3dd
    d3e8:	03000005 	movweq	r0, #5
    d3ec:	8b190215 	blhi	64dc48 <__RAM_SIZE+0x54dc48>
    d3f0:	03000000 	movweq	r0, #0
    d3f4:	07018023 	streq	r8, [r1, -r3, lsr #32]
    d3f8:	000003e8 	andeq	r0, r0, r8, ror #7
    d3fc:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    d400:	0000008b 	andeq	r0, r0, fp, lsl #1
    d404:	01842303 	orreq	r2, r4, r3, lsl #6
    d408:	0008e407 	andeq	lr, r8, r7, lsl #8
    d40c:	021f0300 	andseq	r0, pc, #0, 6
    d410:	0004671a 	andeq	r6, r4, sl, lsl r7
    d414:	88230300 	stmdahi	r3!, {r8, r9}
    d418:	07d50701 	ldrbeq	r0, [r5, r1, lsl #14]
    d41c:	20030000 	andcs	r0, r3, r0
    d420:	04671a02 	strbteq	r1, [r7], #-2562	; 0xfffff5fe
    d424:	23030000 	movwcs	r0, #12288	; 0x3000
    d428:	c107018c 	smlabbgt	r7, ip, r1, r0
    d42c:	03000002 	movweq	r0, #2
    d430:	8b19022e 	blhi	64dcf0 <__RAM_SIZE+0x54dcf0>
    d434:	03000000 	movweq	r0, #0
    d438:	07019023 	streq	r9, [r1, -r3, lsr #32]
    d43c:	00000256 	andeq	r0, r0, r6, asr r2
    d440:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    d444:	0000008b 	andeq	r0, r0, fp, lsl #1
    d448:	01942303 	orrseq	r2, r4, r3, lsl #6
    d44c:	00032007 	andeq	r2, r3, r7
    d450:	02300300 	eorseq	r0, r0, #0, 6
    d454:	00008b19 	andeq	r8, r0, r9, lsl fp
    d458:	98230300 	stmdals	r3!, {r8, r9}
    d45c:	02770701 	rsbseq	r0, r7, #262144	; 0x40000
    d460:	33030000 	movwcc	r0, #12288	; 0x3000
    d464:	008b1902 	addeq	r1, fp, r2, lsl #18
    d468:	23030000 	movwcs	r0, #12288	; 0x3000
    d46c:	0007019c 	muleq	r7, ip, r1
    d470:	03000000 	movweq	r0, #0
    d474:	631a0235 	tstvs	sl, #1342177283	; 0x50000003
    d478:	03000005 	movweq	r0, #5
    d47c:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    d480:	00001bb7 			; <UNDEFINED> instruction: 0x00001bb7
    d484:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    d488:	00000097 	muleq	r0, r7, r0
    d48c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    d490:	001c7707 	andseq	r7, ip, r7, lsl #14
    d494:	023d0300 	eorseq	r0, sp, #0, 6
    d498:	00009719 	andeq	r9, r0, r9, lsl r7
    d49c:	a8230300 	stmdage	r3!, {r8, r9}
    d4a0:	1b300701 	blne	c0f0ac <__RAM_SIZE+0xb0f0ac>
    d4a4:	41030000 	mrsmi	r0, (UNDEF: 3)
    d4a8:	00971902 	addseq	r1, r7, r2, lsl #18
    d4ac:	23030000 	movwcs	r0, #12288	; 0x3000
    d4b0:	2e0701ac 	adfcsdp	f0, f7, #4.0
    d4b4:	0300001d 	movweq	r0, #29
    d4b8:	97190245 	ldrls	r0, [r9, -r5, asr #4]
    d4bc:	03000000 	movweq	r0, #0
    d4c0:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    d4c4:	00001c47 	andeq	r1, r0, r7, asr #24
    d4c8:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    d4cc:	00000097 	muleq	r0, r7, r0
    d4d0:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    d4d4:	0007a807 	andeq	sl, r7, r7, lsl #16
    d4d8:	024c0300 	subeq	r0, ip, #0, 6
    d4dc:	0004671a 	andeq	r6, r4, sl, lsl r7
    d4e0:	b8230300 	stmdalt	r3!, {r8, r9}
    d4e4:	1d060701 	stcne	7, cr0, [r6, #-4]
    d4e8:	4f030000 	svcmi	0x00030000
    d4ec:	00971902 	addseq	r1, r7, r2, lsl #18
    d4f0:	23030000 	movwcs	r0, #12288	; 0x3000
    d4f4:	080701bc 	stmdaeq	r7, {r2, r3, r4, r5, r7, r8}
    d4f8:	0300001b 	movweq	r0, #27
    d4fc:	97190252 			; <UNDEFINED> instruction: 0x97190252
    d500:	03000000 	movweq	r0, #0
    d504:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    d508:	00001a85 	andeq	r1, r0, r5, lsl #21
    d50c:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    d510:	00000097 	muleq	r0, r7, r0
    d514:	01c42303 	biceq	r2, r4, r3, lsl #6
    d518:	001bdb07 	andseq	sp, fp, r7, lsl #22
    d51c:	02590300 	subseq	r0, r9, #0, 6
    d520:	00009719 	andeq	r9, r0, r9, lsl r7
    d524:	c8230300 	stmdagt	r3!, {r8, r9}
    d528:	09a90701 	stmibeq	r9!, {r0, r8, r9, sl}
    d52c:	5d030000 	stcpl	0, cr0, [r3, #-0]
    d530:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    d534:	23030000 	movwcs	r0, #12288	; 0x3000
    d538:	810701cc 	smlabthi	r7, ip, r1, r0
    d53c:	03000004 	movweq	r0, #4
    d540:	97190278 			; <UNDEFINED> instruction: 0x97190278
    d544:	03000000 	movweq	r0, #0
    d548:	0001d023 	andeq	sp, r1, r3, lsr #32
    d54c:	0153040a 	cmpeq	r3, sl, lsl #8
    d550:	01080000 	mrseq	r0, (UNDEF: 8)
    d554:	0000047e 	andeq	r0, r0, lr, ror r4
    d558:	00046709 	andeq	r6, r4, r9, lsl #14
    d55c:	00970900 	addseq	r0, r7, r0, lsl #18
    d560:	0a000000 	beq	d568 <_Min_Stack_Size+0xc568>
    d564:	00046d04 	andeq	r6, r4, r4, lsl #26
    d568:	07980600 	ldreq	r0, [r8, r0, lsl #12]
    d56c:	03340000 	teqeq	r4, #0
    d570:	6310037e 	tstvs	r0, #-134217727	; 0xf8000001
    d574:	07000005 	streq	r0, [r0, -r5]
    d578:	0000018d 	andeq	r0, r0, sp, lsl #3
    d57c:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    d580:	00000097 	muleq	r0, r7, r0
    d584:	07002302 	streq	r2, [r0, -r2, lsl #6]
    d588:	0000087c 	andeq	r0, r0, ip, ror r8
    d58c:	1a038503 	bne	ee9a0 <SYSTICK_CYCLES+0xc5961>
    d590:	0000014d 	andeq	r0, r0, sp, asr #2
    d594:	07042302 	streq	r2, [r4, -r2, lsl #6]
    d598:	000006e1 	andeq	r0, r0, r1, ror #13
    d59c:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    d5a0:	0000008b 	andeq	r0, r0, fp, lsl #1
    d5a4:	07082302 	streq	r2, [r8, -r2, lsl #6]
    d5a8:	000004cb 	andeq	r0, r0, fp, asr #9
    d5ac:	1a038c03 	bne	f05c0 <SYSTICK_CYCLES+0xc7581>
    d5b0:	00000576 	andeq	r0, r0, r6, ror r5
    d5b4:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    d5b8:	00000162 	andeq	r0, r0, r2, ror #2
    d5bc:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    d5c0:	0000008b 	andeq	r0, r0, fp, lsl #1
    d5c4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    d5c8:	00000121 	andeq	r0, r0, r1, lsr #2
    d5cc:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    d5d0:	0000008b 	andeq	r0, r0, fp, lsl #1
    d5d4:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    d5d8:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    d5dc:	1a039803 	bne	f35f0 <SYSTICK_CYCLES+0xca5b1>
    d5e0:	00000467 	andeq	r0, r0, r7, ror #8
    d5e4:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    d5e8:	000006c8 	andeq	r0, r0, r8, asr #13
    d5ec:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    d5f0:	0000008b 	andeq	r0, r0, fp, lsl #1
    d5f4:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    d5f8:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    d5fc:	1a039d03 	bne	f4a10 <SYSTICK_CYCLES+0xcb9d1>
    d600:	00000563 	andeq	r0, r0, r3, ror #10
    d604:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    d608:	00000685 	andeq	r0, r0, r5, lsl #13
    d60c:	1a039e03 	bne	f4e20 <SYSTICK_CYCLES+0xcbde1>
    d610:	00000563 	andeq	r0, r0, r3, ror #10
    d614:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    d618:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d61c:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    d620:	0000008b 	andeq	r0, r0, fp, lsl #1
    d624:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    d628:	000009c5 	andeq	r0, r0, r5, asr #19
    d62c:	1a03a603 	bne	f6e40 <SYSTICK_CYCLES+0xcde01>
    d630:	00000563 	andeq	r0, r0, r3, ror #10
    d634:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    d638:	00000425 	andeq	r0, r0, r5, lsr #8
    d63c:	1a03a703 	bne	f7250 <SYSTICK_CYCLES+0xce211>
    d640:	00000563 	andeq	r0, r0, r3, ror #10
    d644:	00302302 	eorseq	r2, r0, r2, lsl #6
    d648:	0484040a 	streq	r0, [r4], #1034	; 0x40a
    d64c:	d40b0000 	strle	r0, [fp], #-0
    d650:	03000008 	movweq	r0, #8
    d654:	53030286 	movwpl	r0, #12934	; 0x3286
    d658:	0a000001 	beq	d664 <_Min_Stack_Size+0xc664>
    d65c:	00056904 	andeq	r6, r5, r4, lsl #18
    d660:	1e8a0c00 	cdpne	12, 8, cr0, cr10, cr0, {0}
    d664:	8f040000 	svchi	0x00040000
    d668:	00056921 	andeq	r6, r5, r1, lsr #18
    d66c:	0d010100 	stfeqs	f0, [r1, #-0]
    d670:	00228101 	eoreq	r8, r2, r1, lsl #2
    d674:	07510100 	ldrbeq	r0, [r1, -r0, lsl #2]
    d678:	0028d401 	eoreq	sp, r8, r1, lsl #8
    d67c:	0028ec10 	eoreq	lr, r8, r0, lsl ip
    d680:	004ea410 	subeq	sl, lr, r0, lsl r4
    d684:	06350100 	ldrteq	r0, [r5], -r0, lsl #2
    d688:	e20e0000 	and	r0, lr, #0
    d68c:	0100000e 	tsteq	r0, lr
    d690:	008b0154 	addeq	r0, fp, r4, asr r1
    d694:	4ec60000 	cdpmi	0, 12, cr0, cr6, cr0, {0}
    d698:	4ec40000 	cdpmi	0, 12, cr0, cr4, cr0, {0}
    d69c:	350f0000 	strcc	r0, [pc, #-0]	; d6a4 <_Min_Stack_Size+0xc6a4>
    d6a0:	d6000006 	strle	r0, [r0], -r6
    d6a4:	02100028 	andseq	r0, r0, #40	; 0x28
    d6a8:	100028d6 	ldrdne	r2, [r0], -r6
    d6ac:	100028dc 	ldrdne	r2, [r0], -ip
    d6b0:	04056f01 	streq	r6, [r5], #-3841	; 0xfffff0ff
    d6b4:	10000006 	andne	r0, r0, r6
    d6b8:	00000648 	andeq	r0, r0, r8, asr #12
    d6bc:	00004edb 	ldrdeq	r4, [r0], -fp
    d6c0:	00004ed9 	ldrdeq	r4, [r0], -r9
    d6c4:	00067311 	andeq	r7, r6, r1, lsl r3
    d6c8:	0028d600 	eoreq	sp, r8, r0, lsl #12
    d6cc:	28d60510 	ldmcs	r6, {r4, r8, sl}^
    d6d0:	28da1000 	ldmcs	sl, {ip}^
    d6d4:	56021000 	strpl	r1, [r2], -r0
    d6d8:	86101302 	ldrhi	r1, [r0], -r2, lsl #6
    d6dc:	f0000006 			; <UNDEFINED> instruction: 0xf0000006
    d6e0:	ee00004e 	cdp	0, 0, cr0, cr0, cr14, {2}
    d6e4:	0000004e 	andeq	r0, r0, lr, asr #32
    d6e8:	06560f00 	ldrbeq	r0, [r6], -r0, lsl #30
    d6ec:	28e20000 	stmiacs	r2!, {}^	; <UNPREDICTABLE>
    d6f0:	e2011000 	and	r1, r1, #0
    d6f4:	e6100028 	ldr	r0, [r0], -r8, lsr #32
    d6f8:	01100028 	tsteq	r0, r8, lsr #32
    d6fc:	062b0577 			; <UNDEFINED> instruction: 0x062b0577
    d700:	65120000 	ldrvs	r0, [r2, #-0]
    d704:	05000006 	streq	r0, [r0, #-6]
    d708:	0300004f 	movweq	r0, #79	; 0x4f
    d70c:	0000004f 	andeq	r0, r0, pc, asr #32
    d710:	0028e213 	eoreq	lr, r8, r3, lsl r2
    d714:	00069410 	andeq	r9, r6, r0, lsl r4
    d718:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    d71c:	0200000f 	andeq	r0, r0, #15
    d720:	01370252 	teqeq	r7, r2, asr r2
    d724:	0000008b 	andeq	r0, r0, fp, lsl #1
    d728:	00065603 	andeq	r5, r6, r3, lsl #12
    d72c:	0ea11500 	cdpeq	5, 10, cr1, cr1, cr0, {0}
    d730:	54020000 	strpl	r0, [r2], #-0
    d734:	008b0602 	addeq	r0, fp, r2, lsl #12
    d738:	16000000 	strne	r0, [r0], -r0
    d73c:	00000e8d 	andeq	r0, r0, sp, lsl #29
    d740:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    d744:	06730301 	ldrbteq	r0, [r3], -r1, lsl #6
    d748:	a1170000 	tstge	r7, r0
    d74c:	0200000e 	andeq	r0, r0, #14
    d750:	8b500249 	blhi	140e07c <__RAM_SIZE+0x130e07c>
    d754:	00000000 	andeq	r0, r0, r0
    d758:	000eb614 	andeq	fp, lr, r4, lsl r6
    d75c:	02320200 	eorseq	r0, r2, #0, 4
    d760:	008b0137 	addeq	r0, fp, r7, lsr r1
    d764:	94030000 	strls	r0, [r3], #-0
    d768:	15000006 	strne	r0, [r0, #-6]
    d76c:	00000ea5 	andeq	r0, r0, r5, lsr #29
    d770:	06023402 	streq	r3, [r2], -r2, lsl #8
    d774:	0000008b 	andeq	r0, r0, fp, lsl #1
    d778:	01011800 	tsteq	r1, r0, lsl #16
    d77c:	00001058 	andeq	r1, r0, r8, asr r0
    d780:	00001058 	andeq	r1, r0, r8, asr r0
    d784:	0d011e05 	stceq	14, cr1, [r1, #-20]	; 0xffffffec
    d788:	00092f00 	andeq	r2, r9, r0, lsl #30
    d78c:	4b000200 	blmi	df94 <_Min_Stack_Size+0xcf94>
    d790:	04000026 	streq	r0, [r0], #-38	; 0xffffffda
    d794:	00003d01 	andeq	r3, r0, r1, lsl #26
    d798:	24e00c00 	strbtcs	r0, [r0], #3072	; 0xc00
    d79c:	06410000 	strbeq	r0, [r1], -r0
    d7a0:	04600000 	strbteq	r0, [r0], #-0
	...
    d7ac:	4cfc0000 	ldclmi	0, cr0, [ip]
    d7b0:	04020000 	streq	r0, [r2], #-0
    d7b4:	00023907 	andeq	r3, r2, r7, lsl #18
    d7b8:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    d7bc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    d7c0:	e8050802 	stmda	r5, {r1, fp}
    d7c4:	02000004 	andeq	r0, r0, #4
    d7c8:	06230408 	strteq	r0, [r3], -r8, lsl #8
    d7cc:	01020000 	mrseq	r0, (UNDEF: 2)
    d7d0:	00085206 	andeq	r5, r8, r6, lsl #4
    d7d4:	08010200 	stmdaeq	r1, {r9}
    d7d8:	00000850 	andeq	r0, r0, r0, asr r8
    d7dc:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    d7e0:	02000006 	andeq	r0, r0, #6
    d7e4:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    d7e8:	04020000 	streq	r0, [r2], #-0
    d7ec:	0004ed05 	andeq	lr, r4, r5, lsl #26
    d7f0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    d7f4:	00000234 	andeq	r0, r0, r4, lsr r2
    d7f8:	2f070802 	svccs	0x00070802
    d7fc:	04000002 	streq	r0, [r0], #-2
    d800:	08010204 	stmdaeq	r1, {r2, r9}
    d804:	00000859 	andeq	r0, r0, r9, asr r8
    d808:	0008df05 	andeq	sp, r8, r5, lsl #30
    d80c:	31730200 	cmncc	r3, r0, lsl #4
    d810:	00000078 	andeq	r0, r0, r8, ror r0
    d814:	00077f05 	andeq	r7, r7, r5, lsl #30
    d818:	31760200 	cmncc	r6, r0, lsl #4
    d81c:	00000029 	andeq	r0, r0, r9, lsr #32
    d820:	00071105 	andeq	r1, r7, r5, lsl #2
    d824:	31780200 	cmncc	r8, r0, lsl #4
    d828:	00000068 	andeq	r0, r0, r8, rrx
    d82c:	00009706 	andeq	r9, r0, r6, lsl #14
    d830:	053b0700 	ldreq	r0, [fp, #-1792]!	; 0xfffff900
    d834:	031c0000 	tsteq	ip, #0
    d838:	27100182 	ldrcs	r0, [r0, -r2, lsl #3]
    d83c:	08000001 	stmdaeq	r0, {r0}
    d840:	00000812 	andeq	r0, r0, r2, lsl r8
    d844:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    d848:	00000097 	muleq	r0, r7, r0
    d84c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    d850:	000003a0 	andeq	r0, r0, r0, lsr #7
    d854:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    d858:	00000097 	muleq	r0, r7, r0
    d85c:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    d860:	0000043d 	andeq	r0, r0, sp, lsr r4
    d864:	1b018a03 	blne	70078 <SYSTICK_CYCLES+0x47039>
    d868:	00000133 	andeq	r0, r0, r3, lsr r1
    d86c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    d870:	000001f2 	strdeq	r0, [r0], -r2
    d874:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    d878:	00000097 	muleq	r0, r7, r0
    d87c:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    d880:	00000954 	andeq	r0, r0, r4, asr r9
    d884:	1a019103 	bne	71c98 <SYSTICK_CYCLES+0x48c59>
    d888:	00000139 	andeq	r0, r0, r9, lsr r1
    d88c:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    d890:	0000001b 	andeq	r0, r0, fp, lsl r0
    d894:	1a019203 	bne	720a8 <SYSTICK_CYCLES+0x49069>
    d898:	00000139 	andeq	r0, r0, r9, lsr r1
    d89c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    d8a0:	000005ee 	andeq	r0, r0, lr, ror #11
    d8a4:	1b019603 	blne	730b8 <SYSTICK_CYCLES+0x4a079>
    d8a8:	0000013f 	andeq	r0, r0, pc, lsr r1
    d8ac:	00182302 	andseq	r2, r8, r2, lsl #6
    d8b0:	01330109 	teqeq	r3, r9, lsl #2
    d8b4:	970a0000 	strls	r0, [sl, -r0]
    d8b8:	00000000 	andeq	r0, r0, r0
    d8bc:	0127040b 			; <UNDEFINED> instruction: 0x0127040b
    d8c0:	040b0000 	streq	r0, [fp], #-0
    d8c4:	000000a8 	andeq	r0, r0, r8, lsr #1
    d8c8:	0139040b 	teqeq	r9, fp, lsl #8
    d8cc:	2f0c0000 	svccs	0x000c0000
    d8d0:	03000006 	movweq	r0, #6
    d8d4:	a803019b 	stmdage	r3, {r0, r1, r3, r4, r7, r8}
    d8d8:	07000000 	streq	r0, [r0, -r0]
    d8dc:	000024d0 	ldrdeq	r2, [r0], -r0
    d8e0:	01a80340 			; <UNDEFINED> instruction: 0x01a80340
    d8e4:	00020110 	andeq	r0, r2, r0, lsl r1
    d8e8:	22c90800 	sbccs	r0, r9, #0, 16
    d8ec:	ac030000 	stcge	0, cr0, [r3], {-0}
    d8f0:	00971901 	addseq	r1, r7, r1, lsl #18
    d8f4:	23020000 	movwcs	r0, #8192	; 0x2000
    d8f8:	24470800 	strbcs	r0, [r7], #-2048	; 0xfffff800
    d8fc:	af030000 	svcge	0x00030000
    d900:	02011a01 	andeq	r1, r1, #4096	; 0x1000
    d904:	23020000 	movwcs	r0, #8192	; 0x2000
    d908:	247a0804 	ldrbtcs	r0, [sl], #-2052	; 0xfffff7fc
    d90c:	b3030000 	movwlt	r0, #12288	; 0x3000
    d910:	01451901 	cmpeq	r5, r1, lsl #18
    d914:	23020000 	movwcs	r0, #8192	; 0x2000
    d918:	24550808 	ldrbcs	r0, [r5], #-2056	; 0xfffff7f8
    d91c:	b7030000 	strlt	r0, [r3, -r0]
    d920:	02071a01 	andeq	r1, r7, #4096	; 0x1000
    d924:	23020000 	movwcs	r0, #8192	; 0x2000
    d928:	23b70824 			; <UNDEFINED> instruction: 0x23b70824
    d92c:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    d930:	02071a01 	andeq	r1, r7, #4096	; 0x1000
    d934:	23020000 	movwcs	r0, #8192	; 0x2000
    d938:	237d0828 	cmncs	sp, #40, 16	; 0x280000
    d93c:	c0030000 	andgt	r0, r3, r0
    d940:	00971901 	addseq	r1, r7, r1, lsl #18
    d944:	23020000 	movwcs	r0, #8192	; 0x2000
    d948:	2356082c 	cmpcs	r6, #44, 16	; 0x2c0000
    d94c:	c3030000 	movwgt	r0, #12288	; 0x3000
    d950:	00971901 	addseq	r1, r7, r1, lsl #18
    d954:	23020000 	movwcs	r0, #8192	; 0x2000
    d958:	23d20830 	bicscs	r0, r2, #48, 16	; 0x300000
    d95c:	c6030000 	strgt	r0, [r3], -r0
    d960:	00971901 	addseq	r1, r7, r1, lsl #18
    d964:	23020000 	movwcs	r0, #8192	; 0x2000
    d968:	240c0834 	strcs	r0, [ip], #-2100	; 0xfffff7cc
    d96c:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    d970:	00971901 	addseq	r1, r7, r1, lsl #18
    d974:	23020000 	movwcs	r0, #8192	; 0x2000
    d978:	231e0838 	tstcs	lr, #56, 16	; 0x380000
    d97c:	cc030000 	stcgt	0, cr0, [r3], {-0}
    d980:	00971901 	addseq	r1, r7, r1, lsl #18
    d984:	23020000 	movwcs	r0, #8192	; 0x2000
    d988:	040b003c 	streq	r0, [fp], #-60	; 0xffffffc4
    d98c:	0000007f 	andeq	r0, r0, pc, ror r0
    d990:	0152040b 	cmpeq	r2, fp, lsl #8
    d994:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    d998:	03000023 	movweq	r0, #35	; 0x23
    d99c:	520301cf 	andpl	r0, r3, #-1073741773	; 0xc0000033
    d9a0:	07000001 	streq	r0, [r0, -r1]
    d9a4:	0000034b 	andeq	r0, r0, fp, asr #6
    d9a8:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
    d9ac:	00052e10 	andeq	r2, r5, r0, lsl lr
    d9b0:	09110800 	ldmdbeq	r1, {fp}
    d9b4:	dd030000 	stcle	0, cr0, [r3, #-0]
    d9b8:	00971901 	addseq	r1, r7, r1, lsl #18
    d9bc:	23020000 	movwcs	r0, #8192	; 0x2000
    d9c0:	07840800 	streq	r0, [r4, r0, lsl #16]
    d9c4:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    d9c8:	00971901 	addseq	r1, r7, r1, lsl #18
    d9cc:	23020000 	movwcs	r0, #8192	; 0x2000
    d9d0:	01bc0804 			; <UNDEFINED> instruction: 0x01bc0804
    d9d4:	df030000 	svcle	0x00030000
    d9d8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    d9dc:	23020000 	movwcs	r0, #8192	; 0x2000
    d9e0:	08fb0808 	ldmeq	fp!, {r3, fp}^
    d9e4:	e0030000 	and	r0, r3, r0
    d9e8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    d9ec:	23020000 	movwcs	r0, #8192	; 0x2000
    d9f0:	0411080c 	ldreq	r0, [r1], #-2060	; 0xfffff7f4
    d9f4:	e1030000 	mrs	r0, (UNDEF: 3)
    d9f8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    d9fc:	23020000 	movwcs	r0, #8192	; 0x2000
    da00:	093f0810 	ldmdbeq	pc!, {r4, fp}	; <UNPREDICTABLE>
    da04:	e2030000 	and	r0, r3, #0
    da08:	00971901 	addseq	r1, r7, r1, lsl #18
    da0c:	23020000 	movwcs	r0, #8192	; 0x2000
    da10:	21d10814 	bicscs	r0, r1, r4, lsl r8
    da14:	e3030000 	movw	r0, #12288	; 0x3000
    da18:	00971901 	addseq	r1, r7, r1, lsl #18
    da1c:	23020000 	movwcs	r0, #8192	; 0x2000
    da20:	060a0818 			; <UNDEFINED> instruction: 0x060a0818
    da24:	e4030000 	str	r0, [r3], #-0
    da28:	00971901 	addseq	r1, r7, r1, lsl #18
    da2c:	23020000 	movwcs	r0, #8192	; 0x2000
    da30:	069f081c 			; <UNDEFINED> instruction: 0x069f081c
    da34:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    da38:	052e1a01 	streq	r1, [lr, #-2561]!	; 0xfffff5ff
    da3c:	23020000 	movwcs	r0, #8192	; 0x2000
    da40:	01990820 	orrseq	r0, r9, r0, lsr #16
    da44:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    da48:	052e1a01 	streq	r1, [lr, #-2561]!	; 0xfffff5ff
    da4c:	23020000 	movwcs	r0, #8192	; 0x2000
    da50:	05960824 	ldreq	r0, [r6, #2084]	; 0x824
    da54:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    da58:	02011a01 	andeq	r1, r1, #4096	; 0x1000
    da5c:	23020000 	movwcs	r0, #8192	; 0x2000
    da60:	02d90828 	sbcseq	r0, r9, #40, 16	; 0x280000
    da64:	f2030000 	vhadd.s8	d0, d3, d0
    da68:	008b1901 	addeq	r1, fp, r1, lsl #18
    da6c:	23020000 	movwcs	r0, #8192	; 0x2000
    da70:	0246082c 	subeq	r0, r6, #44, 16	; 0x2c0000
    da74:	f3030000 	vhadd.u8	d0, d3, d0
    da78:	008b1901 	addeq	r1, fp, r1, lsl #18
    da7c:	23020000 	movwcs	r0, #8192	; 0x2000
    da80:	01730830 	cmneq	r3, r0, lsr r8
    da84:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    da88:	008b1901 	addeq	r1, fp, r1, lsl #18
    da8c:	23020000 	movwcs	r0, #8192	; 0x2000
    da90:	07300834 			; <UNDEFINED> instruction: 0x07300834
    da94:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    da98:	008b1901 	addeq	r1, fp, r1, lsl #18
    da9c:	23020000 	movwcs	r0, #8192	; 0x2000
    daa0:	00eb0838 	rsceq	r0, fp, r8, lsr r8
    daa4:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    daa8:	008b1901 	addeq	r1, fp, r1, lsl #18
    daac:	23020000 	movwcs	r0, #8192	; 0x2000
    dab0:	035c083c 	cmpeq	ip, #60, 16	; 0x3c0000
    dab4:	fb030000 	blx	cdabe <SYSTICK_CYCLES+0xa4a7f>
    dab8:	05451b01 	strbeq	r1, [r5, #-2817]	; 0xfffff4ff
    dabc:	23020000 	movwcs	r0, #8192	; 0x2000
    dac0:	01520840 	cmpeq	r2, r0, asr #16
    dac4:	03030000 	movweq	r0, #12288	; 0x3000
    dac8:	01331b02 	teqeq	r3, r2, lsl #22
    dacc:	23020000 	movwcs	r0, #8192	; 0x2000
    dad0:	01070844 	tsteq	r7, r4, asr #16
    dad4:	04030000 	streq	r0, [r3], #-0
    dad8:	00971902 	addseq	r1, r7, r2, lsl #18
    dadc:	23020000 	movwcs	r0, #8192	; 0x2000
    dae0:	033b0848 	teqeq	fp, #72, 16	; 0x480000
    dae4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    dae8:	01451902 	cmpeq	r5, r2, lsl #18
    daec:	23020000 	movwcs	r0, #8192	; 0x2000
    daf0:	02ec084c 	rsceq	r0, ip, #76, 16	; 0x4c0000
    daf4:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    daf8:	05451b02 	strbeq	r1, [r5, #-2818]	; 0xfffff4fe
    dafc:	23020000 	movwcs	r0, #8192	; 0x2000
    db00:	05ce0868 	strbeq	r0, [lr, #2152]	; 0x868
    db04:	0f030000 	svceq	0x00030000
    db08:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    db0c:	23020000 	movwcs	r0, #8192	; 0x2000
    db10:	0717086c 	ldreq	r0, [r7, -ip, ror #16]
    db14:	11030000 	mrsne	r0, (UNDEF: 3)
    db18:	052e1a02 	streq	r1, [lr, #-2562]!	; 0xfffff5fe
    db1c:	23020000 	movwcs	r0, #8192	; 0x2000
    db20:	02120870 	andseq	r0, r2, #112, 16	; 0x700000
    db24:	12030000 	andne	r0, r3, #0
    db28:	052e1a02 	streq	r1, [lr, #-2562]!	; 0xfffff5fe
    db2c:	23020000 	movwcs	r0, #8192	; 0x2000
    db30:	06fa0874 	uxtaheq	r0, sl, r4, ror #16
    db34:	13030000 	movwne	r0, #12288	; 0x3000
    db38:	00971902 	addseq	r1, r7, r2, lsl #18
    db3c:	23020000 	movwcs	r0, #8192	; 0x2000
    db40:	03c60878 	biceq	r0, r6, #120, 16	; 0x780000
    db44:	14030000 	strne	r0, [r3], #-0
    db48:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    db4c:	23020000 	movwcs	r0, #8192	; 0x2000
    db50:	0554087c 	ldrbeq	r0, [r4, #-2172]	; 0xfffff784
    db54:	15030000 	strne	r0, [r3, #-0]
    db58:	008b1902 	addeq	r1, fp, r2, lsl #18
    db5c:	23030000 	movwcs	r0, #12288	; 0x3000
    db60:	e8080180 	stmda	r8, {r7, r8}
    db64:	03000003 	movweq	r0, #3
    db68:	8b190216 	blhi	64e3c8 <__RAM_SIZE+0x54e3c8>
    db6c:	03000000 	movweq	r0, #0
    db70:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    db74:	000008e4 	andeq	r0, r0, r4, ror #17
    db78:	1a021f03 	bne	9578c <SYSTICK_CYCLES+0x6c74d>
    db7c:	0000052e 	andeq	r0, r0, lr, lsr #10
    db80:	01882303 	orreq	r2, r8, r3, lsl #6
    db84:	0007d508 	andeq	sp, r7, r8, lsl #10
    db88:	02200300 	eoreq	r0, r0, #0, 6
    db8c:	00052e1a 	andeq	r2, r5, sl, lsl lr
    db90:	8c230300 	stchi	3, cr0, [r3], #-0
    db94:	02c10801 	sbceq	r0, r1, #65536	; 0x10000
    db98:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    db9c:	008b1902 	addeq	r1, fp, r2, lsl #18
    dba0:	23030000 	movwcs	r0, #12288	; 0x3000
    dba4:	56080190 			; <UNDEFINED> instruction: 0x56080190
    dba8:	03000002 	movweq	r0, #2
    dbac:	8b19022f 	blhi	64e470 <__RAM_SIZE+0x54e470>
    dbb0:	03000000 	movweq	r0, #0
    dbb4:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
    dbb8:	00000320 	andeq	r0, r0, r0, lsr #6
    dbbc:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    dbc0:	0000008b 	andeq	r0, r0, fp, lsl #1
    dbc4:	01982303 	orrseq	r2, r8, r3, lsl #6
    dbc8:	00027708 	andeq	r7, r2, r8, lsl #14
    dbcc:	02330300 	eorseq	r0, r3, #0, 6
    dbd0:	00008b19 	andeq	r8, r0, r9, lsl fp
    dbd4:	9c230300 	stcls	3, cr0, [r3], #-0
    dbd8:	00000801 	andeq	r0, r0, r1, lsl #16
    dbdc:	35030000 	strcc	r0, [r3, #-0]
    dbe0:	062a1a02 	strteq	r1, [sl], -r2, lsl #20
    dbe4:	23030000 	movwcs	r0, #12288	; 0x3000
    dbe8:	b70801a0 	strlt	r0, [r8, -r0, lsr #3]
    dbec:	0300001b 	movweq	r0, #27
    dbf0:	9719023a 			; <UNDEFINED> instruction: 0x9719023a
    dbf4:	03000000 	movweq	r0, #0
    dbf8:	0801a423 	stmdaeq	r1, {r0, r1, r5, sl, sp, pc}
    dbfc:	00001c77 	andeq	r1, r0, r7, ror ip
    dc00:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    dc04:	00000097 	muleq	r0, r7, r0
    dc08:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    dc0c:	001b3008 	andseq	r3, fp, r8
    dc10:	02410300 	subeq	r0, r1, #0, 6
    dc14:	00009719 	andeq	r9, r0, r9, lsl r7
    dc18:	ac230300 	stcge	3, cr0, [r3], #-0
    dc1c:	1d2e0801 	stcne	8, cr0, [lr, #-4]!
    dc20:	45030000 	strmi	r0, [r3, #-0]
    dc24:	00971902 	addseq	r1, r7, r2, lsl #18
    dc28:	23030000 	movwcs	r0, #12288	; 0x3000
    dc2c:	470801b0 			; <UNDEFINED> instruction: 0x470801b0
    dc30:	0300001c 	movweq	r0, #28
    dc34:	97190248 	ldrls	r0, [r9, -r8, asr #4]
    dc38:	03000000 	movweq	r0, #0
    dc3c:	0801b423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, pc}
    dc40:	000007a8 	andeq	r0, r0, r8, lsr #15
    dc44:	1a024c03 	bne	a0c58 <SYSTICK_CYCLES+0x77c19>
    dc48:	0000052e 	andeq	r0, r0, lr, lsr #10
    dc4c:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    dc50:	001d0608 	andseq	r0, sp, r8, lsl #12
    dc54:	024f0300 	subeq	r0, pc, #0, 6
    dc58:	00009719 	andeq	r9, r0, r9, lsl r7
    dc5c:	bc230300 	stclt	3, cr0, [r3], #-0
    dc60:	1b080801 	blne	20fc6c <__RAM_SIZE+0x10fc6c>
    dc64:	52030000 	andpl	r0, r3, #0
    dc68:	00971902 	addseq	r1, r7, r2, lsl #18
    dc6c:	23030000 	movwcs	r0, #12288	; 0x3000
    dc70:	850801c0 	strhi	r0, [r8, #-448]	; 0xfffffe40
    dc74:	0300001a 	movweq	r0, #26
    dc78:	97190255 			; <UNDEFINED> instruction: 0x97190255
    dc7c:	03000000 	movweq	r0, #0
    dc80:	0801c423 	stmdaeq	r1, {r0, r1, r5, sl, lr, pc}
    dc84:	00001bdb 	ldrdeq	r1, [r0], -fp
    dc88:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    dc8c:	00000097 	muleq	r0, r7, r0
    dc90:	01c82303 	biceq	r2, r8, r3, lsl #6
    dc94:	0009a908 	andeq	sl, r9, r8, lsl #18
    dc98:	025d0300 	subseq	r0, sp, #0, 6
    dc9c:	0000761a 	andeq	r7, r0, sl, lsl r6
    dca0:	cc230300 	stcgt	3, cr0, [r3], #-0
    dca4:	04810801 	streq	r0, [r1], #2049	; 0x801
    dca8:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    dcac:	00971902 	addseq	r1, r7, r2, lsl #18
    dcb0:	23030000 	movwcs	r0, #12288	; 0x3000
    dcb4:	0b0001d0 	bleq	e3fc <_Min_Stack_Size+0xd3fc>
    dcb8:	00021a04 	andeq	r1, r2, r4, lsl #20
    dcbc:	45010900 	strmi	r0, [r1, #-2304]	; 0xfffff700
    dcc0:	0a000005 	beq	dcdc <_Min_Stack_Size+0xccdc>
    dcc4:	0000052e 	andeq	r0, r0, lr, lsr #10
    dcc8:	0000970a 	andeq	r9, r0, sl, lsl #14
    dccc:	040b0000 	streq	r0, [fp], #-0
    dcd0:	00000534 	andeq	r0, r0, r4, lsr r5
    dcd4:	00079807 	andeq	r9, r7, r7, lsl #16
    dcd8:	7e033400 	cfcpysvc	mvf3, mvf3
    dcdc:	062a1003 	strteq	r1, [sl], -r3
    dce0:	8d080000 	stchi	0, cr0, [r8, #-0]
    dce4:	03000001 	movweq	r0, #1
    dce8:	97190382 	ldrls	r0, [r9, -r2, lsl #7]
    dcec:	02000000 	andeq	r0, r0, #0
    dcf0:	7c080023 	stcvc	0, cr0, [r8], {35}	; 0x23
    dcf4:	03000008 	movweq	r0, #8
    dcf8:	011a0385 	tsteq	sl, r5, lsl #7
    dcfc:	02000002 	andeq	r0, r0, #2
    dd00:	e1080423 	tst	r8, r3, lsr #8
    dd04:	03000006 	movweq	r0, #6
    dd08:	8b190388 	blhi	64eb30 <__RAM_SIZE+0x54eb30>
    dd0c:	02000000 	andeq	r0, r0, #0
    dd10:	cb080823 	blgt	20fda4 <__RAM_SIZE+0x10fda4>
    dd14:	03000004 	movweq	r0, #4
    dd18:	3d1a038c 	ldccc	3, cr0, [sl, #-560]	; 0xfffffdd0
    dd1c:	02000006 	andeq	r0, r0, #6
    dd20:	62080c23 	andvs	r0, r8, #8960	; 0x2300
    dd24:	03000001 	movweq	r0, #1
    dd28:	8b190390 	blhi	64eb70 <__RAM_SIZE+0x54eb70>
    dd2c:	02000000 	andeq	r0, r0, #0
    dd30:	21081023 	tstcs	r8, r3, lsr #32
    dd34:	03000001 	movweq	r0, #1
    dd38:	8b190393 	blhi	64eb8c <__RAM_SIZE+0x54eb8c>
    dd3c:	02000000 	andeq	r0, r0, #0
    dd40:	b2081423 	andlt	r1, r8, #587202560	; 0x23000000
    dd44:	03000008 	movweq	r0, #8
    dd48:	2e1a0398 	mrccs	3, 0, r0, cr10, cr8, {4}
    dd4c:	02000005 	andeq	r0, r0, #5
    dd50:	c8081823 	stmdagt	r8, {r0, r1, r5, fp, ip}
    dd54:	03000006 	movweq	r0, #6
    dd58:	8b190399 	blhi	64ebc4 <__RAM_SIZE+0x54ebc4>
    dd5c:	02000000 	andeq	r0, r0, #0
    dd60:	b8081c23 	stmdalt	r8, {r0, r1, r5, sl, fp, ip}
    dd64:	03000005 	movweq	r0, #5
    dd68:	2a1a039d 	bcs	68ebe4 <__RAM_SIZE+0x58ebe4>
    dd6c:	02000006 	andeq	r0, r0, #6
    dd70:	85082023 	strhi	r2, [r8, #-35]	; 0xffffffdd
    dd74:	03000006 	movweq	r0, #6
    dd78:	2a1a039e 	bcs	68ebf8 <__RAM_SIZE+0x58ebf8>
    dd7c:	02000006 	andeq	r0, r0, #6
    dd80:	d0082423 	andle	r2, r8, r3, lsr #8
    dd84:	03000001 	movweq	r0, #1
    dd88:	8b1903a2 	blhi	64ec18 <__RAM_SIZE+0x54ec18>
    dd8c:	02000000 	andeq	r0, r0, #0
    dd90:	c5082823 	strgt	r2, [r8, #-2083]	; 0xfffff7dd
    dd94:	03000009 	movweq	r0, #9
    dd98:	2a1a03a6 	bcs	68ec38 <__RAM_SIZE+0x58ec38>
    dd9c:	02000006 	andeq	r0, r0, #6
    dda0:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
    dda4:	03000004 	movweq	r0, #4
    dda8:	2a1a03a7 	bcs	68ec4c <__RAM_SIZE+0x58ec4c>
    ddac:	02000006 	andeq	r0, r0, #6
    ddb0:	0b003023 	bleq	19e44 <_Min_Stack_Size+0x18e44>
    ddb4:	00054b04 	andeq	r4, r5, r4, lsl #22
    ddb8:	08d40c00 	ldmeq	r4, {sl, fp}^
    ddbc:	86030000 	strhi	r0, [r3], -r0
    ddc0:	021a0302 	andseq	r0, sl, #134217728	; 0x8000000
    ddc4:	040b0000 	streq	r0, [fp], #-0
    ddc8:	00000630 	andeq	r0, r0, r0, lsr r6
    ddcc:	0022ea0d 	eoreq	lr, r2, sp, lsl #20
    ddd0:	21540400 	cmpcs	r4, r0, lsl #8
    ddd4:	000000a3 	andeq	r0, r0, r3, lsr #1
    ddd8:	460d0101 	strmi	r0, [sp], -r1, lsl #2
    dddc:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    dde0:	0097215a 	addseq	r2, r7, sl, asr r1
    dde4:	01010000 	mrseq	r0, (UNDEF: 1)
    dde8:	0021a30d 	eoreq	sl, r1, sp, lsl #6
    ddec:	21600400 	cmncs	r0, r0, lsl #8
    ddf0:	0000008b 	andeq	r0, r0, fp, lsl #1
    ddf4:	7d0e0101 	stfvcs	f0, [lr, #-4]
    ddf8:	7d000006 	stcvc	0, cr0, [r0, #-24]	; 0xffffffe8
    ddfc:	0f000006 	svceq	0x00000006
    de00:	00000029 	andeq	r0, r0, r9, lsr #32
    de04:	040b001f 	streq	r0, [fp], #-31	; 0xffffffe1
    de08:	00000145 	andeq	r0, r0, r5, asr #2
    de0c:	00246b0d 	eoreq	r6, r4, sp, lsl #22
    de10:	22660400 	rsbcs	r0, r6, #0, 8
    de14:	0000066d 	andeq	r0, r0, sp, ror #12
    de18:	d50d0101 	strle	r0, [sp, #-257]	; 0xfffffeff
    de1c:	04000022 	streq	r0, [r0], #-34	; 0xffffffde
    de20:	069f236c 	ldreq	r2, [pc], ip, ror #6
    de24:	01010000 	mrseq	r0, (UNDEF: 1)
    de28:	067d040b 	ldrbteq	r0, [sp], -fp, lsl #8
    de2c:	b60d0000 	strlt	r0, [sp], -r0
    de30:	04000022 	streq	r0, [r0], #-34	; 0xffffffde
    de34:	069f236d 	ldreq	r2, [pc], sp, ror #6
    de38:	01010000 	mrseq	r0, (UNDEF: 1)
    de3c:	0023a10d 	eoreq	sl, r3, sp, lsl #2
    de40:	23730400 	cmncs	r3, #0, 8
    de44:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    de48:	8c0d0101 	stfhis	f0, [sp], {1}
    de4c:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    de50:	008b2179 	addeq	r2, fp, r9, ror r1
    de54:	01010000 	mrseq	r0, (UNDEF: 1)
    de58:	0024ba0d 	eoreq	fp, r4, sp, lsl #20
    de5c:	227e0400 	rsbscs	r0, lr, #0, 8
    de60:	000006dd 	ldrdeq	r0, [r0], -sp
    de64:	040b0101 	streq	r0, [fp], #-257	; 0xfffffeff
    de68:	0000020d 	andeq	r0, r0, sp, lsl #4
    de6c:	00229e0d 	eoreq	r9, r2, sp, lsl #28
    de70:	21830400 	orrcs	r0, r3, r0, lsl #8
    de74:	00000097 	muleq	r0, r7, r0
    de78:	9e0d0101 	adflse	f0, f5, f1
    de7c:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    de80:	067d2288 	ldrbteq	r2, [sp], -r8, lsl #5
    de84:	01010000 	mrseq	r0, (UNDEF: 1)
    de88:	001e8a0d 	andseq	r8, lr, sp, lsl #20
    de8c:	218f0400 	orrcs	r0, pc, r0, lsl #8
    de90:	00000630 	andeq	r0, r0, r0, lsr r6
    de94:	1a0d0101 	bne	34e2a0 <__RAM_SIZE+0x24e2a0>
    de98:	04000025 	streq	r0, [r0], #-37	; 0xffffffdb
    de9c:	00762294 			; <UNDEFINED> instruction: 0x00762294
    dea0:	01010000 	mrseq	r0, (UNDEF: 1)
    dea4:	0024320d 	eoreq	r3, r4, sp, lsl #4
    dea8:	21990400 	orrscs	r0, r9, r0, lsl #8
    deac:	00000097 	muleq	r0, r7, r0
    deb0:	f80d0101 			; <UNDEFINED> instruction: 0xf80d0101
    deb4:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    deb8:	008b219e 	umulleq	r2, fp, lr, r1
    debc:	01010000 	mrseq	r0, (UNDEF: 1)
    dec0:	0000970e 	andeq	r9, r0, lr, lsl #14
    dec4:	00074800 	andeq	r4, r7, r0, lsl #16
    dec8:	00291000 	eoreq	r1, r9, r0
    decc:	03ff0000 	mvnseq	r0, #0
    ded0:	23010d00 	movwcs	r0, #7424	; 0x1d00
    ded4:	a3040000 	movwge	r0, #16384	; 0x4000
    ded8:	00073721 	andeq	r3, r7, r1, lsr #14
    dedc:	0d010100 	stfeqs	f0, [r1, #-0]
    dee0:	0000237c 	andeq	r2, r0, ip, ror r3
    dee4:	9721b204 	strls	fp, [r1, -r4, lsl #4]!
    dee8:	01000000 	mrseq	r0, (UNDEF: 0)
    deec:	23550d01 	cmpcs	r5, #1, 26	; 0x40
    def0:	b7040000 	strlt	r0, [r4, -r0]
    def4:	00009721 	andeq	r9, r0, r1, lsr #14
    def8:	0d010100 	stfeqs	f0, [r1, #-0]
    defc:	000023d1 	ldrdeq	r2, [r0], -r1
    df00:	9721bc04 	strls	fp, [r1, -r4, lsl #24]!
    df04:	01000000 	mrseq	r0, (UNDEF: 0)
    df08:	240b0d01 	strcs	r0, [fp], #-3329	; 0xfffff2ff
    df0c:	c1040000 	mrsgt	r0, (UNDEF: 4)
    df10:	00009721 	andeq	r9, r0, r1, lsr #14
    df14:	0d010100 	stfeqs	f0, [r1, #-0]
    df18:	0000231d 	andeq	r2, r0, sp, lsl r3
    df1c:	9721c904 	strls	ip, [r1, -r4, lsl #18]!
    df20:	01000000 	mrseq	r0, (UNDEF: 0)
    df24:	06431101 	strbeq	r1, [r3], -r1, lsl #2
    df28:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    df2c:	44030515 	strmi	r0, [r3], #-1301	; 0xfffffaeb
    df30:	11380013 	teqne	r8, r3, lsl r0
    df34:	0000065f 	andeq	r0, r0, pc, asr r6
    df38:	05152f01 	ldreq	r2, [r5, #-3841]	; 0xfffff0ff
    df3c:	00129c03 	andseq	r9, r2, r3, lsl #24
    df40:	06831138 			; <UNDEFINED> instruction: 0x06831138
    df44:	35010000 	strcc	r0, [r1, #-0]
    df48:	a4030516 	strge	r0, [r3], #-1302	; 0xfffffaea
    df4c:	11380012 	teqne	r8, r2, lsl r0
    df50:	00000691 	muleq	r0, r1, r6
    df54:	05173b01 	ldreq	r3, [r7, #-2817]	; 0xfffff4ff
    df58:	00132803 	andseq	r2, r3, r3, lsl #16
    df5c:	06a51138 			; <UNDEFINED> instruction: 0x06a51138
    df60:	3c010000 	stccc	0, cr0, [r1], {-0}
    df64:	24030517 	strcs	r0, [r3], #-1303	; 0xfffffae9
    df68:	11380013 	teqne	r8, r3, lsl r0
    df6c:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    df70:	05174201 	ldreq	r4, [r7, #-513]	; 0xfffffdff
    df74:	00129403 	andseq	r9, r2, r3, lsl #8
    df78:	06c11138 			; <UNDEFINED> instruction: 0x06c11138
    df7c:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    df80:	98030515 	stmdals	r3, {r0, r2, r4, r8, sl}
    df84:	11380012 	teqne	r8, r2, lsl r0
    df88:	000006cf 	andeq	r0, r0, pc, asr #13
    df8c:	05164d01 	ldreq	r4, [r6, #-3329]	; 0xfffff2ff
    df90:	00000003 	andeq	r0, r0, r3
    df94:	06e31100 	strbteq	r1, [r3], r0, lsl #2
    df98:	52010000 	andpl	r0, r1, #0
    df9c:	00030515 	andeq	r0, r3, r5, lsl r5
    dfa0:	11000000 	mrsne	r0, (UNDEF: 0)
    dfa4:	000006f1 	strdeq	r0, [r0], -r1
    dfa8:	05155701 	ldreq	r5, [r5, #-1793]	; 0xfffff8ff
    dfac:	0012a003 	andseq	sl, r2, r3
    dfb0:	06ff1138 			; <UNDEFINED> instruction: 0x06ff1138
    dfb4:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    dfb8:	48030515 	stmdami	r3, {r0, r2, r4, r8, sl}
    dfbc:	11380013 	teqne	r8, r3, lsl r0
    dfc0:	0000070d 	andeq	r0, r0, sp, lsl #14
    dfc4:	05166301 	ldreq	r6, [r6, #-769]	; 0xfffffcff
    dfc8:	00134003 	andseq	r4, r3, r3
    dfcc:	071b1138 			; <UNDEFINED> instruction: 0x071b1138
    dfd0:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    dfd4:	3c030515 	cfstr32cc	mvfx0, [r3], {21}
    dfd8:	11380013 	teqne	r8, r3, lsl r0
    dfdc:	00000729 	andeq	r0, r0, r9, lsr #14
    dfe0:	05156d01 	ldreq	r6, [r5, #-3329]	; 0xfffff2ff
    dfe4:	00133803 	andseq	r3, r3, r3, lsl #16
    dfe8:	07481138 	smlaldxeq	r1, r8, r8, r1
    dfec:	72010000 	andvc	r0, r1, #0
    dff0:	1c030515 	cfstr32ne	mvfx0, [r3], {21}
    dff4:	11380014 	teqne	r8, r4, lsl r0
    dff8:	00000756 	andeq	r0, r0, r6, asr r7
    dffc:	05158101 	ldreq	r8, [r5, #-257]	; 0xfffffeff
    e000:	00000003 	andeq	r0, r0, r3
    e004:	07641100 	strbeq	r1, [r4, -r0, lsl #2]!
    e008:	86010000 	strhi	r0, [r1], -r0
    e00c:	34030515 	strcc	r0, [r3], #-1301	; 0xfffffaeb
    e010:	11380013 	teqne	r8, r3, lsl r0
    e014:	00000772 	andeq	r0, r0, r2, ror r7
    e018:	05158b01 	ldreq	r8, [r5, #-2817]	; 0xfffff4ff
    e01c:	00000003 	andeq	r0, r0, r3
    e020:	07801100 	streq	r1, [r0, r0, lsl #2]
    e024:	90010000 	andls	r0, r1, r0
    e028:	30030515 	andcc	r0, r3, r5, lsl r5
    e02c:	11380013 	teqne	r8, r3, lsl r0
    e030:	0000078e 	andeq	r0, r0, lr, lsl #15
    e034:	05159801 	ldreq	r9, [r5, #-2049]	; 0xfffff7ff
    e038:	00132c03 	andseq	r2, r3, r3, lsl #24
    e03c:	06511138 			; <UNDEFINED> instruction: 0x06511138
    e040:	a1010000 	mrsge	r0, (UNDEF: 1)
    e044:	1c030515 	cfstr32ne	mvfx0, [r3], {21}
    e048:	12380024 	eorsne	r0, r8, #36	; 0x24
    e04c:	0015d101 	andseq	sp, r5, r1, lsl #2
    e050:	07cc0100 	strbeq	r0, [ip, r0, lsl #2]
    e054:	0028ec01 	eoreq	lr, r8, r1, lsl #24
    e058:	00297c10 	eoreq	r7, r9, r0, lsl ip
    e05c:	004f1810 	subeq	r1, pc, r0, lsl r8	; <UNPREDICTABLE>
    e060:	09230100 	stmdbeq	r3!, {r8}
    e064:	fa130000 	blx	4ce06c <__RAM_SIZE+0x3ce06c>
    e068:	01000003 	tsteq	r0, r3
    e06c:	008b09d0 	ldrdeq	r0, [fp], r0	; <UNPREDICTABLE>
    e070:	4f520000 	svcmi	0x00520000
    e074:	4f500000 	svcmi	0x00500000
    e078:	40140000 	andsmi	r0, r4, r0
    e07c:	23100029 	tstcs	r0, #41	; 0x29
    e080:	15000009 	strne	r0, [r0, #-9]
    e084:	03055001 	movweq	r5, #20481	; 0x5001
    e088:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}
    e08c:	05510115 	ldrbeq	r0, [r1, #-277]	; 0xfffffeeb
    e090:	004f2003 	subeq	r2, pc, r3
    e094:	53011510 	movwpl	r1, #5392	; 0x1510
    e098:	494d0c05 	stmdbmi	sp, {r0, r2, sl, fp}^
    e09c:	02154154 	andseq	r4, r5, #84, 2
    e0a0:	3001107d 	andcc	r1, r1, sp, ror r0
    e0a4:	147d0215 	ldrbtne	r0, [sp], #-533	; 0xfffffdeb
    e0a8:	00003001 	andeq	r3, r0, r1
    e0ac:	18010116 	stmdane	r1, {r1, r2, r4, r8}
    e0b0:	1800001a 	stmdane	r0, {r1, r3, r4}
    e0b4:	0300001a 	movweq	r0, #26
    e0b8:	000d06d5 	ldrdeq	r0, [sp], -r5
    e0bc:	00000203 	andeq	r0, r0, r3, lsl #4
    e0c0:	27760002 	ldrbcs	r0, [r6, -r2]!
    e0c4:	01040000 	mrseq	r0, (UNDEF: 4)
    e0c8:	0000003d 	andeq	r0, r0, sp, lsr r0
    e0cc:	0025300c 	eoreq	r3, r5, ip
    e0d0:	00064100 	andeq	r4, r6, r0, lsl #2
    e0d4:	00047000 	andeq	r7, r4, r0
	...
    e0e0:	004e4e00 	subeq	r4, lr, r0, lsl #28
    e0e4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    e0e8:	00000239 	andeq	r0, r0, r9, lsr r2
    e0ec:	69050403 	stmdbvs	r5, {r0, r1, sl}
    e0f0:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    e0f4:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    e0f8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    e0fc:	00062304 	andeq	r2, r6, r4, lsl #6
    e100:	06010200 	streq	r0, [r1], -r0, lsl #4
    e104:	00000852 	andeq	r0, r0, r2, asr r8
    e108:	50080102 	andpl	r0, r8, r2, lsl #2
    e10c:	02000008 	andeq	r0, r0, #8
    e110:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    e114:	02020000 	andeq	r0, r2, #0
    e118:	00091e07 	andeq	r1, r9, r7, lsl #28
    e11c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    e120:	000004ed 	andeq	r0, r0, sp, ror #9
    e124:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    e128:	02000002 	andeq	r0, r0, #2
    e12c:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    e130:	01020000 	mrseq	r0, (UNDEF: 2)
    e134:	00085908 	andeq	r5, r8, r8, lsl #18
    e138:	07110400 	ldreq	r0, [r1, -r0, lsl #8]
    e13c:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    e140:	00006831 	andeq	r6, r0, r1, lsr r8
    e144:	053b0500 	ldreq	r0, [fp, #-1280]!	; 0xfffffb00
    e148:	021c0000 	andseq	r0, ip, #0
    e14c:	08100182 	ldmdaeq	r0, {r1, r7, r8}
    e150:	06000001 	streq	r0, [r0], -r1
    e154:	00000812 	andeq	r0, r0, r2, lsl r8
    e158:	19018602 	stmdbne	r1, {r1, r9, sl, pc}
    e15c:	0000007d 	andeq	r0, r0, sp, ror r0
    e160:	06002302 	streq	r2, [r0], -r2, lsl #6
    e164:	000003a0 	andeq	r0, r0, r0, lsr #7
    e168:	19018702 	stmdbne	r1, {r1, r8, r9, sl, pc}
    e16c:	0000007d 	andeq	r0, r0, sp, ror r0
    e170:	06042302 	streq	r2, [r4], -r2, lsl #6
    e174:	0000043d 	andeq	r0, r0, sp, lsr r4
    e178:	1b018a02 	blne	70988 <SYSTICK_CYCLES+0x47949>
    e17c:	00000114 	andeq	r0, r0, r4, lsl r1
    e180:	06082302 	streq	r2, [r8], -r2, lsl #6
    e184:	000001f2 	strdeq	r0, [r0], -r2
    e188:	19018b02 	stmdbne	r1, {r1, r8, r9, fp, pc}
    e18c:	0000007d 	andeq	r0, r0, sp, ror r0
    e190:	060c2302 	streq	r2, [ip], -r2, lsl #6
    e194:	00000954 	andeq	r0, r0, r4, asr r9
    e198:	1a019102 	bne	725a8 <SYSTICK_CYCLES+0x49569>
    e19c:	0000011a 	andeq	r0, r0, sl, lsl r1
    e1a0:	06102302 	ldreq	r2, [r0], -r2, lsl #6
    e1a4:	0000001b 	andeq	r0, r0, fp, lsl r0
    e1a8:	1a019202 	bne	729b8 <SYSTICK_CYCLES+0x49979>
    e1ac:	0000011a 	andeq	r0, r0, sl, lsl r1
    e1b0:	06142302 	ldreq	r2, [r4], -r2, lsl #6
    e1b4:	000005ee 	andeq	r0, r0, lr, ror #11
    e1b8:	1b019602 	blne	739c8 <SYSTICK_CYCLES+0x4a989>
    e1bc:	00000120 	andeq	r0, r0, r0, lsr #2
    e1c0:	00182302 	andseq	r2, r8, r2, lsl #6
    e1c4:	01140107 	tsteq	r4, r7, lsl #2
    e1c8:	7d080000 	stcvc	0, cr0, [r8, #-0]
    e1cc:	00000000 	andeq	r0, r0, r0
    e1d0:	01080409 	tsteq	r8, r9, lsl #8
    e1d4:	04090000 	streq	r0, [r9], #-0
    e1d8:	00000089 	andeq	r0, r0, r9, lsl #1
    e1dc:	011a0409 	tsteq	sl, r9, lsl #8
    e1e0:	2f0a0000 	svccs	0x000a0000
    e1e4:	02000006 	andeq	r0, r0, #6
    e1e8:	8903019b 	stmdbhi	r3, {r0, r1, r3, r4, r7, r8}
    e1ec:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    e1f0:	00012604 	andeq	r2, r1, r4, lsl #12
    e1f4:	22d50b00 	sbcscs	r0, r5, #0, 22
    e1f8:	6c040000 	stcvs	0, cr0, [r4], {-0}
    e1fc:	00014723 	andeq	r4, r1, r3, lsr #14
    e200:	09010100 	stmdbeq	r1, {r8}
    e204:	00013304 	andeq	r3, r1, r4, lsl #6
    e208:	22b60b00 	adcscs	r0, r6, #0, 22
    e20c:	6d040000 	stcvs	0, cr0, [r4, #-0]
    e210:	00014723 	andeq	r4, r1, r3, lsr #14
    e214:	0b010100 	bleq	4e61c <SYSTICK_CYCLES+0x255dd>
    e218:	000023a1 	andeq	r2, r0, r1, lsr #7
    e21c:	47237304 	strmi	r7, [r3, -r4, lsl #6]!
    e220:	01000001 	tsteq	r0, r1
    e224:	c5010c01 	strgt	r0, [r1, #-3073]	; 0xfffff3ff
    e228:	01000020 	tsteq	r0, r0, lsr #32
    e22c:	7c01074e 	stcvc	7, cr0, [r1], {78}	; 0x4e
    e230:	d4100029 	ldrle	r0, [r0], #-41	; 0xffffffd7
    e234:	02100029 	andseq	r0, r0, #41	; 0x29
    e238:	0d01007d 	stceq	0, cr0, [r1, #-500]	; 0xfffffe0c
    e23c:	000024b0 			; <UNDEFINED> instruction: 0x000024b0
    e240:	33344e01 	teqcc	r4, #1, 28
    e244:	01000001 	tsteq	r0, r1
    e248:	246f0e50 	strbtcs	r0, [pc], #-3664	; e250 <_Min_Stack_Size+0xd250>
    e24c:	51010000 	mrspl	r0, (UNDEF: 1)
    e250:	0001471f 	andeq	r4, r1, pc, lsl r7
    e254:	004f6b00 	subeq	r6, pc, r0, lsl #22
    e258:	004f6500 	subeq	r6, pc, r0, lsl #10
    e25c:	257f0e00 	ldrbcs	r0, [pc, #-3584]!	; d464 <_Min_Stack_Size+0xc464>
    e260:	52010000 	andpl	r0, r1, #0
    e264:	0001331e 	andeq	r3, r1, lr, lsl r3
    e268:	004f9600 	subeq	r9, pc, r0, lsl #12
    e26c:	004f9400 	subeq	r9, pc, r0, lsl #8
    e270:	25900e00 	ldrcs	r0, [r0, #3584]	; 0xe00
    e274:	53010000 	movwpl	r0, #4096	; 0x1000
    e278:	0001331e 	andeq	r3, r1, lr, lsl r3
    e27c:	004fab00 	subeq	sl, pc, r0, lsl #22
    e280:	004fa900 	subeq	sl, pc, r0, lsl #18
    e284:	258a0e00 	strcs	r0, [sl, #3584]	; 0xe00
    e288:	54010000 	strpl	r0, [r1], #-0
    e28c:	00007d1d 	andeq	r7, r0, sp, lsl sp
    e290:	004fc000 	subeq	ip, pc, r0
    e294:	004fbe00 	subeq	fp, pc, r0, lsl #28
    e298:	08240e00 	stmdaeq	r4!, {r9, sl, fp}
    e29c:	55010000 	strpl	r0, [r1, #-0]
    e2a0:	00007d1d 	andeq	r7, r0, sp, lsl sp
    e2a4:	004fe100 	subeq	lr, pc, r0, lsl #2
    e2a8:	004fd700 	subeq	sp, pc, r0, lsl #14
    e2ac:	256f0e00 	strbcs	r0, [pc, #-3584]!	; d4b4 <_Min_Stack_Size+0xc4b4>
    e2b0:	56010000 	strpl	r0, [r1], -r0
    e2b4:	00007d1d 	andeq	r7, r0, sp, lsl sp
    e2b8:	00502400 	subseq	r2, r0, r0, lsl #8
    e2bc:	00502200 	subseq	r2, r0, r0, lsl #4
    e2c0:	9d000000 	stcls	0, cr0, [r0, #-0]
    e2c4:	02000001 	andeq	r0, r0, #1
    e2c8:	00284d00 	eoreq	r4, r8, r0, lsl #26
    e2cc:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    e2d0:	0c000000 	stceq	0, cr0, [r0], {-0}
    e2d4:	0000259f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    e2d8:	00000641 	andeq	r0, r0, r1, asr #12
    e2dc:	00000480 	andeq	r0, r0, r0, lsl #9
	...
    e2e8:	00005009 	andeq	r5, r0, r9
    e2ec:	39070402 	stmdbcc	r7, {r1, sl}
    e2f0:	03000002 	movweq	r0, #2
    e2f4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    e2f8:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    e2fc:	0004e805 	andeq	lr, r4, r5, lsl #16
    e300:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    e304:	00000623 	andeq	r0, r0, r3, lsr #12
    e308:	52060102 	andpl	r0, r6, #-2147483648	; 0x80000000
    e30c:	02000008 	andeq	r0, r0, #8
    e310:	08500801 	ldmdaeq	r0, {r0, fp}^
    e314:	02020000 	andeq	r0, r2, #0
    e318:	0006b405 	andeq	fp, r6, r5, lsl #8
    e31c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    e320:	0000091e 	andeq	r0, r0, lr, lsl r9
    e324:	ed050402 	cfstrs	mvf0, [r5, #-8]
    e328:	02000004 	andeq	r0, r0, #4
    e32c:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    e330:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    e334:	00022f07 	andeq	r2, r2, r7, lsl #30
    e338:	08010200 	stmdaeq	r1, {r9}
    e33c:	00000859 	andeq	r0, r0, r9, asr r8
    e340:	00071104 	andeq	r1, r7, r4, lsl #2
    e344:	31780300 	cmncc	r8, r0, lsl #6
    e348:	00000068 	andeq	r0, r0, r8, rrx
    e34c:	00053b05 	andeq	r3, r5, r5, lsl #22
    e350:	82021c00 	andhi	r1, r2, #0, 24
    e354:	01081001 	tsteq	r8, r1
    e358:	12060000 	andne	r0, r6, #0
    e35c:	02000008 	andeq	r0, r0, #8
    e360:	7d190186 	ldfvcs	f0, [r9, #-536]	; 0xfffffde8
    e364:	02000000 	andeq	r0, r0, #0
    e368:	a0060023 	andge	r0, r6, r3, lsr #32
    e36c:	02000003 	andeq	r0, r0, #3
    e370:	7d190187 	ldfvcs	f0, [r9, #-540]	; 0xfffffde4
    e374:	02000000 	andeq	r0, r0, #0
    e378:	3d060423 	cfstrscc	mvf0, [r6, #-140]	; 0xffffff74
    e37c:	02000004 	andeq	r0, r0, #4
    e380:	141b018a 	ldrne	r0, [fp], #-394	; 0xfffffe76
    e384:	02000001 	andeq	r0, r0, #1
    e388:	f2060823 	vadd.i8	d0, d6, d19
    e38c:	02000001 	andeq	r0, r0, #1
    e390:	7d19018b 	ldfvcs	f0, [r9, #-556]	; 0xfffffdd4
    e394:	02000000 	andeq	r0, r0, #0
    e398:	54060c23 	strpl	r0, [r6], #-3107	; 0xfffff3dd
    e39c:	02000009 	andeq	r0, r0, #9
    e3a0:	1a1a0191 	bne	68e9ec <__RAM_SIZE+0x58e9ec>
    e3a4:	02000001 	andeq	r0, r0, #1
    e3a8:	1b061023 	blne	19243c <__RAM_SIZE+0x9243c>
    e3ac:	02000000 	andeq	r0, r0, #0
    e3b0:	1a1a0192 	bne	68ea00 <__RAM_SIZE+0x58ea00>
    e3b4:	02000001 	andeq	r0, r0, #1
    e3b8:	ee061423 	cdp	4, 0, cr1, cr6, cr3, {1}
    e3bc:	02000005 	andeq	r0, r0, #5
    e3c0:	201b0196 	mulscs	fp, r6, r1
    e3c4:	02000001 	andeq	r0, r0, #1
    e3c8:	07001823 	streq	r1, [r0, -r3, lsr #16]
    e3cc:	00011401 	andeq	r1, r1, r1, lsl #8
    e3d0:	007d0800 	rsbseq	r0, sp, r0, lsl #16
    e3d4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    e3d8:	00010804 	andeq	r0, r1, r4, lsl #16
    e3dc:	89040900 	stmdbhi	r4, {r8, fp}
    e3e0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    e3e4:	00011a04 	andeq	r1, r1, r4, lsl #20
    e3e8:	062f0a00 	strteq	r0, [pc], -r0, lsl #20
    e3ec:	9b020000 	blls	8e3f4 <SYSTICK_CYCLES+0x653b5>
    e3f0:	00890301 	addeq	r0, r9, r1, lsl #6
    e3f4:	04090000 	streq	r0, [r9], #-0
    e3f8:	00000126 	andeq	r0, r0, r6, lsr #2
    e3fc:	01330409 	teqeq	r3, r9, lsl #8
    e400:	010b0000 	mrseq	r0, (UNDEF: 11)
    e404:	00002033 	andeq	r2, r0, r3, lsr r0
    e408:	01074901 	tsteq	r7, r1, lsl #18
    e40c:	100029d4 	ldrdne	r2, [r0], -r4
    e410:	10002a02 	andne	r2, r0, r2, lsl #20
    e414:	01007d02 	tsteq	r0, r2, lsl #26
    e418:	0024b00c 	eoreq	fp, r4, ip
    e41c:	36490100 	strbcc	r0, [r9], -r0, lsl #2
    e420:	00000133 	andeq	r0, r0, r3, lsr r1
    e424:	000d5001 	andeq	r5, sp, r1
    e428:	01000006 	tsteq	r0, r6
    e42c:	0139174c 	teqeq	r9, ip, asr #14
    e430:	503b0000 	eorspl	r0, fp, r0
    e434:	50370000 	eorspl	r0, r7, r0
    e438:	7f0d0000 	svcvc	0x000d0000
    e43c:	01000025 	tsteq	r0, r5, lsr #32
    e440:	0133164d 	teqeq	r3, sp, asr #12
    e444:	50610000 	rsbpl	r0, r1, r0
    e448:	50590000 	subspl	r0, r9, r0
    e44c:	900d0000 	andls	r0, sp, r0
    e450:	01000025 	tsteq	r0, r5, lsr #32
    e454:	0133164e 	teqeq	r3, lr, asr #12
    e458:	50980000 	addspl	r0, r8, r0
    e45c:	50960000 	addspl	r0, r6, r0
    e460:	00000000 	andeq	r0, r0, r0
    e464:	00000ac8 	andeq	r0, r0, r8, asr #21
    e468:	29110002 	ldmdbcs	r1, {r1}
    e46c:	01040000 	mrseq	r0, (UNDEF: 4)
    e470:	0000003d 	andeq	r0, r0, sp, lsr r0
    e474:	0026250c 	eoreq	r2, r6, ip, lsl #10
    e478:	00064100 	andeq	r4, r6, r0, lsl #2
    e47c:	00049000 	andeq	r9, r4, r0
	...
    e488:	00516800 	subseq	r6, r1, r0, lsl #16
    e48c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    e490:	00000239 	andeq	r0, r0, r9, lsr r2
    e494:	69050403 	stmdbvs	r5, {r0, r1, sl}
    e498:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    e49c:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    e4a0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    e4a4:	00062304 	andeq	r2, r6, r4, lsl #6
    e4a8:	06010200 	streq	r0, [r1], -r0, lsl #4
    e4ac:	00000852 	andeq	r0, r0, r2, asr r8
    e4b0:	50080102 	andpl	r0, r8, r2, lsl #2
    e4b4:	02000008 	andeq	r0, r0, #8
    e4b8:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    e4bc:	02020000 	andeq	r0, r2, #0
    e4c0:	00091e07 	andeq	r1, r9, r7, lsl #28
    e4c4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    e4c8:	000004ed 	andeq	r0, r0, sp, ror #9
    e4cc:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    e4d0:	02000002 	andeq	r0, r0, #2
    e4d4:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    e4d8:	04040000 	streq	r0, [r4], #-0
    e4dc:	59080102 	stmdbpl	r8, {r1, r8}
    e4e0:	05000008 	streq	r0, [r0, #-8]
    e4e4:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    e4e8:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    e4ec:	05000000 	streq	r0, [r0, #-0]
    e4f0:	000008de 	ldrdeq	r0, [r0], -lr
    e4f4:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    e4f8:	05000000 	streq	r0, [r0, #-0]
    e4fc:	0000077f 	andeq	r0, r0, pc, ror r7
    e500:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    e504:	05000000 	streq	r0, [r0, #-0]
    e508:	00000711 	andeq	r0, r0, r1, lsl r7
    e50c:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    e510:	06000000 	streq	r0, [r0], -r0
    e514:	0000053b 	andeq	r0, r0, fp, lsr r5
    e518:	0182031c 	orreq	r0, r2, ip, lsl r3
    e51c:	00012e10 	andeq	r2, r1, r0, lsl lr
    e520:	08120700 	ldmdaeq	r2, {r8, r9, sl}
    e524:	86030000 	strhi	r0, [r3], -r0
    e528:	00a31901 	adceq	r1, r3, r1, lsl #18
    e52c:	23020000 	movwcs	r0, #8192	; 0x2000
    e530:	03a00700 	moveq	r0, #0, 14
    e534:	87030000 	strhi	r0, [r3, -r0]
    e538:	00a31901 	adceq	r1, r3, r1, lsl #18
    e53c:	23020000 	movwcs	r0, #8192	; 0x2000
    e540:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    e544:	8a030000 	bhi	ce54c <SYSTICK_CYCLES+0xa550d>
    e548:	013a1b01 	teqeq	sl, r1, lsl #22
    e54c:	23020000 	movwcs	r0, #8192	; 0x2000
    e550:	01f20708 	mvnseq	r0, r8, lsl #14
    e554:	8b030000 	blhi	ce55c <SYSTICK_CYCLES+0xa551d>
    e558:	00a31901 	adceq	r1, r3, r1, lsl #18
    e55c:	23020000 	movwcs	r0, #8192	; 0x2000
    e560:	0954070c 	ldmdbeq	r4, {r2, r3, r8, r9, sl}^
    e564:	91030000 	mrsls	r0, (UNDEF: 3)
    e568:	01401a01 	cmpeq	r0, r1, lsl #20
    e56c:	23020000 	movwcs	r0, #8192	; 0x2000
    e570:	001b0710 	andseq	r0, fp, r0, lsl r7
    e574:	92030000 	andls	r0, r3, #0
    e578:	01401a01 	cmpeq	r0, r1, lsl #20
    e57c:	23020000 	movwcs	r0, #8192	; 0x2000
    e580:	05ee0714 	strbeq	r0, [lr, #1812]!	; 0x714
    e584:	96030000 	strls	r0, [r3], -r0
    e588:	01461b01 	cmpeq	r6, r1, lsl #22
    e58c:	23020000 	movwcs	r0, #8192	; 0x2000
    e590:	01080018 	tsteq	r8, r8, lsl r0
    e594:	0000013a 	andeq	r0, r0, sl, lsr r1
    e598:	0000a309 	andeq	sl, r0, r9, lsl #6
    e59c:	040a0000 	streq	r0, [sl], #-0
    e5a0:	0000012e 	andeq	r0, r0, lr, lsr #2
    e5a4:	00af040a 	adceq	r0, pc, sl, lsl #8
    e5a8:	040a0000 	streq	r0, [sl], #-0
    e5ac:	00000140 	andeq	r0, r0, r0, asr #2
    e5b0:	00062f0b 	andeq	r2, r6, fp, lsl #30
    e5b4:	019b0300 	orrseq	r0, fp, r0, lsl #6
    e5b8:	0000af03 	andeq	sl, r0, r3, lsl #30
    e5bc:	24d00600 	ldrbcs	r0, [r0], #1536	; 0x600
    e5c0:	03400000 	movteq	r0, #0
    e5c4:	081001a8 	ldmdaeq	r0, {r3, r5, r7, r8}
    e5c8:	07000002 	streq	r0, [r0, -r2]
    e5cc:	000022c9 	andeq	r2, r0, r9, asr #5
    e5d0:	1901ac03 	stmdbne	r1, {r0, r1, sl, fp, sp, pc}
    e5d4:	000000a3 	andeq	r0, r0, r3, lsr #1
    e5d8:	07002302 	streq	r2, [r0, -r2, lsl #6]
    e5dc:	00002447 	andeq	r2, r0, r7, asr #8
    e5e0:	1a01af03 	bne	7a1f4 <SYSTICK_CYCLES+0x511b5>
    e5e4:	00000208 	andeq	r0, r0, r8, lsl #4
    e5e8:	07042302 	streq	r2, [r4, -r2, lsl #6]
    e5ec:	0000247a 	andeq	r2, r0, sl, ror r4
    e5f0:	1901b303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, pc}
    e5f4:	0000014c 	andeq	r0, r0, ip, asr #2
    e5f8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    e5fc:	00002455 	andeq	r2, r0, r5, asr r4
    e600:	1a01b703 	bne	7c214 <SYSTICK_CYCLES+0x531d5>
    e604:	0000020e 	andeq	r0, r0, lr, lsl #4
    e608:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    e60c:	000023b7 			; <UNDEFINED> instruction: 0x000023b7
    e610:	1a01b803 	bne	7c624 <SYSTICK_CYCLES+0x535e5>
    e614:	0000020e 	andeq	r0, r0, lr, lsl #4
    e618:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    e61c:	0000237d 	andeq	r2, r0, sp, ror r3
    e620:	1901c003 	stmdbne	r1, {r0, r1, lr, pc}
    e624:	000000a3 	andeq	r0, r0, r3, lsr #1
    e628:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    e62c:	00002356 	andeq	r2, r0, r6, asr r3
    e630:	1901c303 	stmdbne	r1, {r0, r1, r8, r9, lr, pc}
    e634:	000000a3 	andeq	r0, r0, r3, lsr #1
    e638:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    e63c:	000023d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    e640:	1901c603 	stmdbne	r1, {r0, r1, r9, sl, lr, pc}
    e644:	000000a3 	andeq	r0, r0, r3, lsr #1
    e648:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    e64c:	0000240c 	andeq	r2, r0, ip, lsl #8
    e650:	1901c903 	stmdbne	r1, {r0, r1, r8, fp, lr, pc}
    e654:	000000a3 	andeq	r0, r0, r3, lsr #1
    e658:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    e65c:	0000231e 	andeq	r2, r0, lr, lsl r3
    e660:	1901cc03 	stmdbne	r1, {r0, r1, sl, fp, lr, pc}
    e664:	000000a3 	andeq	r0, r0, r3, lsr #1
    e668:	003c2302 	eorseq	r2, ip, r2, lsl #6
    e66c:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    e670:	040a0000 	streq	r0, [sl], #-0
    e674:	00000159 	andeq	r0, r0, r9, asr r1
    e678:	00234c0b 	eoreq	r4, r3, fp, lsl #24
    e67c:	01cf0300 	biceq	r0, pc, r0, lsl #6
    e680:	00015903 	andeq	r5, r1, r3, lsl #18
    e684:	034b0600 	movteq	r0, #46592	; 0xb600
    e688:	03d40000 	bicseq	r0, r4, #0
    e68c:	351001d6 	ldrcc	r0, [r0, #-470]	; 0xfffffe2a
    e690:	07000005 	streq	r0, [r0, -r5]
    e694:	00000911 	andeq	r0, r0, r1, lsl r9
    e698:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    e69c:	000000a3 	andeq	r0, r0, r3, lsr #1
    e6a0:	07002302 	streq	r2, [r0, -r2, lsl #6]
    e6a4:	00000784 	andeq	r0, r0, r4, lsl #15
    e6a8:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    e6ac:	000000a3 	andeq	r0, r0, r3, lsr #1
    e6b0:	07042302 	streq	r2, [r4, -r2, lsl #6]
    e6b4:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    e6b8:	1a01df03 	bne	862cc <SYSTICK_CYCLES+0x5d28d>
    e6bc:	00000076 	andeq	r0, r0, r6, ror r0
    e6c0:	07082302 	streq	r2, [r8, -r2, lsl #6]
    e6c4:	000008fb 	strdeq	r0, [r0], -fp
    e6c8:	1a01e003 	bne	866dc <SYSTICK_CYCLES+0x5d69d>
    e6cc:	00000076 	andeq	r0, r0, r6, ror r0
    e6d0:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    e6d4:	00000411 	andeq	r0, r0, r1, lsl r4
    e6d8:	1a01e103 	bne	86aec <SYSTICK_CYCLES+0x5daad>
    e6dc:	00000076 	andeq	r0, r0, r6, ror r0
    e6e0:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    e6e4:	0000093f 	andeq	r0, r0, pc, lsr r9
    e6e8:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    e6ec:	000000a3 	andeq	r0, r0, r3, lsr #1
    e6f0:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    e6f4:	000021d1 	ldrdeq	r2, [r0], -r1
    e6f8:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    e6fc:	000000a3 	andeq	r0, r0, r3, lsr #1
    e700:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    e704:	0000060a 	andeq	r0, r0, sl, lsl #12
    e708:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    e70c:	000000a3 	andeq	r0, r0, r3, lsr #1
    e710:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    e714:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    e718:	1a01e803 	bne	8872c <SYSTICK_CYCLES+0x5f6ed>
    e71c:	00000535 	andeq	r0, r0, r5, lsr r5
    e720:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    e724:	00000199 	muleq	r0, r9, r1
    e728:	1a01e903 	bne	88b3c <SYSTICK_CYCLES+0x5fafd>
    e72c:	00000535 	andeq	r0, r0, r5, lsr r5
    e730:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    e734:	00000596 	muleq	r0, r6, r5
    e738:	1a01f103 	bne	8ab4c <SYSTICK_CYCLES+0x61b0d>
    e73c:	00000208 	andeq	r0, r0, r8, lsl #4
    e740:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    e744:	000002d9 	ldrdeq	r0, [r0], -r9
    e748:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    e74c:	00000097 	muleq	r0, r7, r0
    e750:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    e754:	00000246 	andeq	r0, r0, r6, asr #4
    e758:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    e75c:	00000097 	muleq	r0, r7, r0
    e760:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    e764:	00000173 	andeq	r0, r0, r3, ror r1
    e768:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    e76c:	00000097 	muleq	r0, r7, r0
    e770:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    e774:	00000730 	andeq	r0, r0, r0, lsr r7
    e778:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    e77c:	00000097 	muleq	r0, r7, r0
    e780:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    e784:	000000eb 	andeq	r0, r0, fp, ror #1
    e788:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    e78c:	00000097 	muleq	r0, r7, r0
    e790:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    e794:	0000035c 	andeq	r0, r0, ip, asr r3
    e798:	1b01fb03 	blne	8d3ac <SYSTICK_CYCLES+0x6436d>
    e79c:	0000054c 	andeq	r0, r0, ip, asr #10
    e7a0:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    e7a4:	00000152 	andeq	r0, r0, r2, asr r1
    e7a8:	1b020303 	blne	8f3bc <SYSTICK_CYCLES+0x6637d>
    e7ac:	0000013a 	andeq	r0, r0, sl, lsr r1
    e7b0:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    e7b4:	00000107 	andeq	r0, r0, r7, lsl #2
    e7b8:	19020403 	stmdbne	r2, {r0, r1, sl}
    e7bc:	000000a3 	andeq	r0, r0, r3, lsr #1
    e7c0:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    e7c4:	0000033b 	andeq	r0, r0, fp, lsr r3
    e7c8:	19020803 	stmdbne	r2, {r0, r1, fp}
    e7cc:	0000014c 	andeq	r0, r0, ip, asr #2
    e7d0:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    e7d4:	000002ec 	andeq	r0, r0, ip, ror #5
    e7d8:	1b020e03 	blne	91fec <SYSTICK_CYCLES+0x68fad>
    e7dc:	0000054c 	andeq	r0, r0, ip, asr #10
    e7e0:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    e7e4:	000005ce 	andeq	r0, r0, lr, asr #11
    e7e8:	1a020f03 	bne	923fc <SYSTICK_CYCLES+0x693bd>
    e7ec:	00000076 	andeq	r0, r0, r6, ror r0
    e7f0:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    e7f4:	00000717 	andeq	r0, r0, r7, lsl r7
    e7f8:	1a021103 	bne	92c0c <SYSTICK_CYCLES+0x69bcd>
    e7fc:	00000535 	andeq	r0, r0, r5, lsr r5
    e800:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    e804:	00000212 	andeq	r0, r0, r2, lsl r2
    e808:	1a021203 	bne	9301c <SYSTICK_CYCLES+0x69fdd>
    e80c:	00000535 	andeq	r0, r0, r5, lsr r5
    e810:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    e814:	000006fa 	strdeq	r0, [r0], -sl
    e818:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    e81c:	000000a3 	andeq	r0, r0, r3, lsr #1
    e820:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    e824:	000003c6 	andeq	r0, r0, r6, asr #7
    e828:	1a021403 	bne	9383c <SYSTICK_CYCLES+0x6a7fd>
    e82c:	00000076 	andeq	r0, r0, r6, ror r0
    e830:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    e834:	00000554 	andeq	r0, r0, r4, asr r5
    e838:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    e83c:	00000097 	muleq	r0, r7, r0
    e840:	01802303 	orreq	r2, r0, r3, lsl #6
    e844:	0003e807 	andeq	lr, r3, r7, lsl #16
    e848:	02160300 	andseq	r0, r6, #0, 6
    e84c:	00009719 	andeq	r9, r0, r9, lsl r7
    e850:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    e854:	08e40701 	stmiaeq	r4!, {r0, r8, r9, sl}^
    e858:	1f030000 	svcne	0x00030000
    e85c:	05351a02 	ldreq	r1, [r5, #-2562]!	; 0xfffff5fe
    e860:	23030000 	movwcs	r0, #12288	; 0x3000
    e864:	d5070188 	strle	r0, [r7, #-392]	; 0xfffffe78
    e868:	03000007 	movweq	r0, #7
    e86c:	351a0220 	ldrcc	r0, [sl, #-544]	; 0xfffffde0
    e870:	03000005 	movweq	r0, #5
    e874:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    e878:	000002c1 	andeq	r0, r0, r1, asr #5
    e87c:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    e880:	00000097 	muleq	r0, r7, r0
    e884:	01902303 	orrseq	r2, r0, r3, lsl #6
    e888:	00025607 	andeq	r5, r2, r7, lsl #12
    e88c:	022f0300 	eoreq	r0, pc, #0, 6
    e890:	00009719 	andeq	r9, r0, r9, lsl r7
    e894:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    e898:	03200701 			; <UNDEFINED> instruction: 0x03200701
    e89c:	30030000 	andcc	r0, r3, r0
    e8a0:	00971902 	addseq	r1, r7, r2, lsl #18
    e8a4:	23030000 	movwcs	r0, #12288	; 0x3000
    e8a8:	77070198 			; <UNDEFINED> instruction: 0x77070198
    e8ac:	03000002 	movweq	r0, #2
    e8b0:	97190233 			; <UNDEFINED> instruction: 0x97190233
    e8b4:	03000000 	movweq	r0, #0
    e8b8:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    e8bc:	00000000 	andeq	r0, r0, r0
    e8c0:	1a023503 	bne	9bcd4 <SYSTICK_CYCLES+0x72c95>
    e8c4:	00000631 	andeq	r0, r0, r1, lsr r6
    e8c8:	01a02303 	lsleq	r2, r3, #6
    e8cc:	001bb707 	andseq	fp, fp, r7, lsl #14
    e8d0:	023a0300 	eorseq	r0, sl, #0, 6
    e8d4:	0000a319 	andeq	sl, r0, r9, lsl r3
    e8d8:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    e8dc:	1c770701 	ldclne	7, cr0, [r7], #-4
    e8e0:	3d030000 	stccc	0, cr0, [r3, #-0]
    e8e4:	00a31902 	adceq	r1, r3, r2, lsl #18
    e8e8:	23030000 	movwcs	r0, #12288	; 0x3000
    e8ec:	300701a8 	andcc	r0, r7, r8, lsr #3
    e8f0:	0300001b 	movweq	r0, #27
    e8f4:	a3190241 	tstge	r9, #268435460	; 0x10000004
    e8f8:	03000000 	movweq	r0, #0
    e8fc:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    e900:	00001d2e 	andeq	r1, r0, lr, lsr #26
    e904:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    e908:	000000a3 	andeq	r0, r0, r3, lsr #1
    e90c:	01b02303 	lslseq	r2, r3, #6
    e910:	001c4707 	andseq	r4, ip, r7, lsl #14
    e914:	02480300 	subeq	r0, r8, #0, 6
    e918:	0000a319 	andeq	sl, r0, r9, lsl r3
    e91c:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    e920:	07a80701 	streq	r0, [r8, r1, lsl #14]!
    e924:	4c030000 	stcmi	0, cr0, [r3], {-0}
    e928:	05351a02 	ldreq	r1, [r5, #-2562]!	; 0xfffff5fe
    e92c:	23030000 	movwcs	r0, #12288	; 0x3000
    e930:	060701b8 			; <UNDEFINED> instruction: 0x060701b8
    e934:	0300001d 	movweq	r0, #29
    e938:	a319024f 	tstge	r9, #-268435452	; 0xf0000004
    e93c:	03000000 	movweq	r0, #0
    e940:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    e944:	00001b08 	andeq	r1, r0, r8, lsl #22
    e948:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    e94c:	000000a3 	andeq	r0, r0, r3, lsr #1
    e950:	01c02303 	biceq	r2, r0, r3, lsl #6
    e954:	001a8507 	andseq	r8, sl, r7, lsl #10
    e958:	02550300 	subseq	r0, r5, #0, 6
    e95c:	0000a319 	andeq	sl, r0, r9, lsl r3
    e960:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    e964:	1bdb0701 	blne	ff6d0570 <__RAM_segment_used_end__+0xc75d0570>
    e968:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    e96c:	00a31902 	adceq	r1, r3, r2, lsl #18
    e970:	23030000 	movwcs	r0, #12288	; 0x3000
    e974:	a90701c8 	stmdbge	r7, {r3, r6, r7, r8}
    e978:	03000009 	movweq	r0, #9
    e97c:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    e980:	03000000 	movweq	r0, #0
    e984:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    e988:	00000481 	andeq	r0, r0, r1, lsl #9
    e98c:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    e990:	000000a3 	andeq	r0, r0, r3, lsr #1
    e994:	01d02303 	bicseq	r2, r0, r3, lsl #6
    e998:	21040a00 	tstcs	r4, r0, lsl #20
    e99c:	08000002 	stmdaeq	r0, {r1}
    e9a0:	00054c01 	andeq	r4, r5, r1, lsl #24
    e9a4:	05350900 	ldreq	r0, [r5, #-2304]!	; 0xfffff700
    e9a8:	a3090000 	movwge	r0, #36864	; 0x9000
    e9ac:	00000000 	andeq	r0, r0, r0
    e9b0:	053b040a 	ldreq	r0, [fp, #-1034]!	; 0xfffffbf6
    e9b4:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    e9b8:	34000007 	strcc	r0, [r0], #-7
    e9bc:	10037e03 	andne	r7, r3, r3, lsl #28
    e9c0:	00000631 	andeq	r0, r0, r1, lsr r6
    e9c4:	00018d07 	andeq	r8, r1, r7, lsl #26
    e9c8:	03820300 	orreq	r0, r2, #0, 6
    e9cc:	0000a319 	andeq	sl, r0, r9, lsl r3
    e9d0:	00230200 	eoreq	r0, r3, r0, lsl #4
    e9d4:	00087c07 	andeq	r7, r8, r7, lsl #24
    e9d8:	03850300 	orreq	r0, r5, #0, 6
    e9dc:	0002081a 	andeq	r0, r2, sl, lsl r8
    e9e0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    e9e4:	0006e107 	andeq	lr, r6, r7, lsl #2
    e9e8:	03880300 	orreq	r0, r8, #0, 6
    e9ec:	00009719 	andeq	r9, r0, r9, lsl r7
    e9f0:	08230200 	stmdaeq	r3!, {r9}
    e9f4:	0004cb07 	andeq	ip, r4, r7, lsl #22
    e9f8:	038c0300 	orreq	r0, ip, #0, 6
    e9fc:	00064a1a 	andeq	r4, r6, sl, lsl sl
    ea00:	0c230200 	sfmeq	f0, 4, [r3], #-0
    ea04:	00016207 	andeq	r6, r1, r7, lsl #4
    ea08:	03900300 	orrseq	r0, r0, #0, 6
    ea0c:	00009719 	andeq	r9, r0, r9, lsl r7
    ea10:	10230200 	eorne	r0, r3, r0, lsl #4
    ea14:	00012107 	andeq	r2, r1, r7, lsl #2
    ea18:	03930300 	orrseq	r0, r3, #0, 6
    ea1c:	00009719 	andeq	r9, r0, r9, lsl r7
    ea20:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    ea24:	0008b207 	andeq	fp, r8, r7, lsl #4
    ea28:	03980300 	orrseq	r0, r8, #0, 6
    ea2c:	0005351a 	andeq	r3, r5, sl, lsl r5
    ea30:	18230200 	stmdane	r3!, {r9}
    ea34:	0006c807 	andeq	ip, r6, r7, lsl #16
    ea38:	03990300 	orrseq	r0, r9, #0, 6
    ea3c:	00009719 	andeq	r9, r0, r9, lsl r7
    ea40:	1c230200 	sfmne	f0, 4, [r3], #-0
    ea44:	0005b807 	andeq	fp, r5, r7, lsl #16
    ea48:	039d0300 	orrseq	r0, sp, #0, 6
    ea4c:	0006311a 	andeq	r3, r6, sl, lsl r1
    ea50:	20230200 	eorcs	r0, r3, r0, lsl #4
    ea54:	00068507 	andeq	r8, r6, r7, lsl #10
    ea58:	039e0300 	orrseq	r0, lr, #0, 6
    ea5c:	0006311a 	andeq	r3, r6, sl, lsl r1
    ea60:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    ea64:	0001d007 	andeq	sp, r1, r7
    ea68:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    ea6c:	00009719 	andeq	r9, r0, r9, lsl r7
    ea70:	28230200 	stmdacs	r3!, {r9}
    ea74:	0009c507 	andeq	ip, r9, r7, lsl #10
    ea78:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    ea7c:	0006311a 	andeq	r3, r6, sl, lsl r1
    ea80:	2c230200 	sfmcs	f0, 4, [r3], #-0
    ea84:	00042507 	andeq	r2, r4, r7, lsl #10
    ea88:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    ea8c:	0006311a 	andeq	r3, r6, sl, lsl r1
    ea90:	30230200 	eorcc	r0, r3, r0, lsl #4
    ea94:	52040a00 	andpl	r0, r4, #0, 20
    ea98:	0b000005 	bleq	eab4 <_Min_Stack_Size+0xdab4>
    ea9c:	000008d4 	ldrdeq	r0, [r0], -r4
    eaa0:	03028603 	movweq	r8, #9731	; 0x2603
    eaa4:	00000221 	andeq	r0, r0, r1, lsr #4
    eaa8:	008b040a 	addeq	r0, fp, sl, lsl #8
    eaac:	040a0000 	streq	r0, [sl], #-0
    eab0:	00000637 	andeq	r0, r0, r7, lsr r6
    eab4:	014c040a 	cmpeq	ip, sl, lsl #8
    eab8:	d50c0000 	strle	r0, [ip, #-0]
    eabc:	04000022 	streq	r0, [r0], #-34	; 0xffffffde
    eac0:	0664236c 	strbteq	r2, [r4], -ip, ror #6
    eac4:	01010000 	mrseq	r0, (UNDEF: 1)
    eac8:	0650040a 	ldrbeq	r0, [r0], -sl, lsl #8
    eacc:	b60c0000 	strlt	r0, [ip], -r0
    ead0:	04000022 	streq	r0, [r0], #-34	; 0xffffffde
    ead4:	0664236d 	strbteq	r2, [r4], -sp, ror #6
    ead8:	01010000 	mrseq	r0, (UNDEF: 1)
    eadc:	0023a10c 	eoreq	sl, r3, ip, lsl #2
    eae0:	23730400 	cmncs	r3, #0, 8
    eae4:	00000664 	andeq	r0, r0, r4, ror #12
    eae8:	8c0c0101 	stfhis	f0, [ip], {1}
    eaec:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    eaf0:	00972179 	addseq	r2, r7, r9, ror r1
    eaf4:	01010000 	mrseq	r0, (UNDEF: 1)
    eaf8:	0214040a 	andseq	r0, r4, #167772160	; 0xa000000
    eafc:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
    eb00:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    eb04:	06502288 	ldrbeq	r2, [r0], -r8, lsl #5
    eb08:	01010000 	mrseq	r0, (UNDEF: 1)
    eb0c:	001e8a0c 	andseq	r8, lr, ip, lsl #20
    eb10:	218f0400 	orrcs	r0, pc, r0, lsl #8
    eb14:	00000637 	andeq	r0, r0, r7, lsr r6
    eb18:	550c0101 	strpl	r0, [ip, #-257]	; 0xfffffeff
    eb1c:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    eb20:	00a321b7 	strhteq	r2, [r3], r7
    eb24:	01010000 	mrseq	r0, (UNDEF: 1)
    eb28:	00240b0c 	eoreq	r0, r4, ip, lsl #22
    eb2c:	21c10400 	biccs	r0, r1, r0, lsl #8
    eb30:	000000a3 	andeq	r0, r0, r3, lsr #1
    eb34:	1d0c0101 	stfnes	f0, [ip, #-4]
    eb38:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    eb3c:	00a321c9 	adceq	r2, r3, r9, asr #3
    eb40:	01010000 	mrseq	r0, (UNDEF: 1)
    eb44:	25e0010d 	strbcs	r0, [r0, #269]!	; 0x10d
    eb48:	4c010000 	stcmi	0, cr0, [r1], {-0}
    eb4c:	2a040107 	bcs	10ef70 <__RAM_SIZE+0xef70>
    eb50:	2bc01000 	blcs	ff012b58 <__RAM_segment_used_end__+0xc6f12b58>
    eb54:	50ab1000 	adcpl	r1, fp, r0
    eb58:	5d010000 	stcpl	0, cr0, [r1, #-0]
    eb5c:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    eb60:	00002612 	andeq	r2, r0, r2, lsl r6
    eb64:	a3244c01 			; <UNDEFINED> instruction: 0xa3244c01
    eb68:	db000000 	blle	eb70 <_Min_Stack_Size+0xdb70>
    eb6c:	d7000050 	smlsdle	r0, r0, r0, r0
    eb70:	0f000050 	svceq	0x00000050
    eb74:	00000ee2 	andeq	r0, r0, r2, ror #29
    eb78:	97014f01 	strls	r4, [r1, -r1, lsl #30]
    eb7c:	0c000000 	stceq	0, cr0, [r0], {-0}
    eb80:	fc000051 	stc2	0, cr0, [r0], {81}	; 0x51
    eb84:	10000050 	andne	r0, r0, r0, asr r0
    eb88:	00002603 	andeq	r2, r0, r3, lsl #12
    eb8c:	501e5101 	andspl	r5, lr, r1, lsl #2
    eb90:	02000006 	andeq	r0, r0, #6
    eb94:	61106491 			; <UNDEFINED> instruction: 0x61106491
    eb98:	01000026 	tsteq	r0, r6, lsr #32
    eb9c:	06501e52 			; <UNDEFINED> instruction: 0x06501e52
    eba0:	91020000 	mrsls	r0, (UNDEF: 2)
    eba4:	257f0f60 	ldrbcs	r0, [pc, #-3936]!	; dc4c <_Min_Stack_Size+0xcc4c>
    eba8:	53010000 	movwpl	r0, #4096	; 0x1000
    ebac:	0006501e 	andeq	r5, r6, lr, lsl r0
    ebb0:	00517200 	subseq	r7, r1, r0, lsl #4
    ebb4:	00516c00 	subseq	r6, r1, r0, lsl #24
    ebb8:	25900f00 	ldrcs	r0, [r0, #3840]	; 0xf00
    ebbc:	54010000 	strpl	r0, [r1], #-0
    ebc0:	0006501e 	andeq	r5, r6, lr, lsl r0
    ebc4:	00519f00 	subseq	r9, r1, r0, lsl #30
    ebc8:	00519b00 	subseq	r9, r1, r0, lsl #22
    ebcc:	26720f00 	ldrbtcs	r0, [r2], -r0, lsl #30
    ebd0:	55010000 	strpl	r0, [r1, #-0]
    ebd4:	0006501e 	andeq	r5, r6, lr, lsl r0
    ebd8:	0051c100 	subseq	ip, r1, r0, lsl #2
    ebdc:	0051bd00 	subseq	fp, r1, r0, lsl #26
    ebe0:	044f0f00 	strbeq	r0, [pc], #-3840	; ebe8 <_Min_Stack_Size+0xdbe8>
    ebe4:	56010000 	strpl	r0, [r1], -r0
    ebe8:	00013a1f 	andeq	r3, r1, pc, lsl sl
    ebec:	0051e700 	subseq	lr, r1, r0, lsl #14
    ebf0:	0051df00 	subseq	sp, r1, r0, lsl #30
    ebf4:	02040f00 	andeq	r0, r4, #0, 30
    ebf8:	57010000 	strpl	r0, [r1, -r0]
    ebfc:	0000a31d 	andeq	sl, r0, sp, lsl r3
    ec00:	00522000 	subseq	r2, r2, r0
    ec04:	00521c00 	subseq	r1, r2, r0, lsl #24
    ec08:	19cf1100 	stmibne	pc, {r8, ip}^	; <UNPREDICTABLE>
    ec0c:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    ec10:	00064a1e 	andeq	r4, r6, lr, lsl sl
    ec14:	246f0f00 	strbtcs	r0, [pc], #-3840	; ec1c <_Min_Stack_Size+0xdc1c>
    ec18:	5a010000 	bpl	4ec20 <SYSTICK_CYCLES+0x25be1>
    ec1c:	0006641f 	andeq	r6, r6, pc, lsl r4
    ec20:	00524500 	subseq	r4, r2, r0, lsl #10
    ec24:	00523f00 	subseq	r3, r2, r0, lsl #30
    ec28:	256f0f00 	strbcs	r0, [pc, #-3840]!	; dd30 <_Min_Stack_Size+0xcd30>
    ec2c:	5b010000 	blpl	4ec34 <SYSTICK_CYCLES+0x25bf5>
    ec30:	0000971d 	andeq	r9, r0, sp, lsl r7
    ec34:	00527000 	subseq	r7, r2, r0
    ec38:	00526e00 	subseq	r6, r2, r0, lsl #28
    ec3c:	258a0f00 	strcs	r0, [sl, #3840]	; 0xf00
    ec40:	5c010000 	stcpl	0, cr0, [r1], {-0}
    ec44:	0000a31d 	andeq	sl, r0, sp, lsl r3
    ec48:	00528500 	subseq	r8, r2, r0, lsl #10
    ec4c:	00528300 	subseq	r8, r2, r0, lsl #6
    ec50:	24b00f00 	ldrtcs	r0, [r0], #3840	; 0xf00
    ec54:	5f010000 	svcpl	0x00010000
    ec58:	0006941e 	andeq	r9, r6, lr, lsl r4
    ec5c:	0052ac00 	subseq	sl, r2, r0, lsl #24
    ec60:	00529c00 	subseq	r9, r2, r0, lsl #24
    ec64:	08131200 	ldmdaeq	r3, {r9, ip}
    ec68:	f7110000 			; <UNDEFINED> instruction: 0xf7110000
    ec6c:	01000025 	tsteq	r0, r5, lsr #32
    ec70:	064419d1 			; <UNDEFINED> instruction: 0x064419d1
    ec74:	12000000 	andne	r0, r0, #0
    ec78:	00000825 	andeq	r0, r0, r5, lsr #16
    ec7c:	0025f711 	eoreq	pc, r5, r1, lsl r7	; <UNPREDICTABLE>
    ec80:	19fe0100 	ldmibne	lr!, {r8}^
    ec84:	00000644 	andeq	r0, r0, r4, asr #12
    ec88:	08381200 	ldmdaeq	r8!, {r9, ip}
    ec8c:	f7130000 			; <UNDEFINED> instruction: 0xf7130000
    ec90:	01000025 	tsteq	r0, r5, lsr #32
    ec94:	441d0151 	ldrmi	r0, [sp], #-337	; 0xfffffeaf
    ec98:	00000006 	andeq	r0, r0, r6
    ec9c:	000a7e14 	andeq	r7, sl, r4, lsl lr
    eca0:	002a3600 	eoreq	r3, sl, r0, lsl #12
    eca4:	36000110 			; <UNDEFINED> instruction: 0x36000110
    eca8:	3a10002a 	bcc	40ed58 <__RAM_SIZE+0x30ed58>
    ecac:	0110002a 	tsteq	r0, sl, lsr #32
    ecb0:	6111012c 	tstvs	r1, ip, lsr #2
    ecb4:	15000008 	strne	r0, [r0, #-8]
    ecb8:	00000a8d 	andeq	r0, r0, sp, lsl #21
    ecbc:	00005318 	andeq	r5, r0, r8, lsl r3
    ecc0:	00005316 	andeq	r5, r0, r6, lsl r3
    ecc4:	0a5d1400 	beq	1753ccc <__RAM_SIZE+0x1653ccc>
    ecc8:	2a400000 	bcs	100ecd0 <__RAM_SIZE+0xf0ecd0>
    eccc:	00011000 	andeq	r1, r1, r0
    ecd0:	10002a40 	andne	r2, r0, r0, asr #20
    ecd4:	10002a46 	andne	r2, r0, r6, asr #20
    ecd8:	11013601 	tstne	r1, r1, lsl #12
    ecdc:	000008af 	andeq	r0, r0, pc, lsr #17
    ece0:	000a7016 	andeq	r7, sl, r6, lsl r0
    ece4:	00532f00 	subseq	r2, r3, r0, lsl #30
    ece8:	00532b00 	subseq	r2, r3, r0, lsl #22
    ecec:	0a9b1700 	beq	fe6d48f4 <__RAM_segment_used_end__+0xc65d48f4>
    ecf0:	2a400000 	bcs	100ecf8 <__RAM_SIZE+0xf0ecf8>
    ecf4:	00041000 	andeq	r1, r4, r0
    ecf8:	10002a40 	andne	r2, r0, r0, asr #20
    ecfc:	10002a44 	andne	r2, r0, r4, asr #20
    ed00:	13025602 	movwne	r5, #9730	; 0x2602
    ed04:	000aae16 	andeq	sl, sl, r6, lsl lr
    ed08:	00534f00 	subseq	r4, r3, r0, lsl #30
    ed0c:	00534d00 	subseq	r4, r3, r0, lsl #26
    ed10:	14000000 	strne	r0, [r0], #-0
    ed14:	00000a7e 	andeq	r0, r0, lr, ror sl
    ed18:	10002a52 	andne	r2, r0, r2, asr sl
    ed1c:	2a520001 	bcs	148ed28 <__RAM_SIZE+0x138ed28>
    ed20:	2a561000 	bcs	1592d28 <__RAM_SIZE+0x1492d28>
    ed24:	a4011000 	strge	r1, [r1], #-0
    ed28:	08d81101 	ldmeq	r8, {r0, r8, ip}^
    ed2c:	8d150000 	ldchi	0, cr0, [r5, #-0]
    ed30:	6400000a 	strvs	r0, [r0], #-10
    ed34:	62000053 	andvs	r0, r0, #83	; 0x53
    ed38:	00000053 	andeq	r0, r0, r3, asr r0
    ed3c:	000a5d14 	andeq	r5, sl, r4, lsl sp
    ed40:	002a5600 	eoreq	r5, sl, r0, lsl #12
    ed44:	56000210 			; <UNDEFINED> instruction: 0x56000210
    ed48:	5c10002a 	ldcpl	0, cr0, [r0], {42}	; 0x2a
    ed4c:	0110002a 	tsteq	r0, sl, lsr #32
    ed50:	261101a7 	ldrcs	r0, [r1], -r7, lsr #3
    ed54:	16000009 	strne	r0, [r0], -r9
    ed58:	00000a70 	andeq	r0, r0, r0, ror sl
    ed5c:	00005379 	andeq	r5, r0, r9, ror r3
    ed60:	00005377 	andeq	r5, r0, r7, ror r3
    ed64:	000a9b17 	andeq	r9, sl, r7, lsl fp
    ed68:	002a5600 	eoreq	r5, sl, r0, lsl #12
    ed6c:	56000510 			; <UNDEFINED> instruction: 0x56000510
    ed70:	5a10002a 	bpl	40ee20 <__RAM_SIZE+0x30ee20>
    ed74:	0210002a 	andseq	r0, r0, #42	; 0x2a
    ed78:	16130256 			; <UNDEFINED> instruction: 0x16130256
    ed7c:	00000aae 	andeq	r0, r0, lr, lsr #21
    ed80:	0000538e 	andeq	r5, r0, lr, lsl #7
    ed84:	0000538c 	andeq	r5, r0, ip, lsl #7
    ed88:	7e140000 	cdpvc	0, 1, cr0, cr4, cr0, {0}
    ed8c:	4e00000a 	cdpmi	0, 0, cr0, cr0, cr10, {0}
    ed90:	0110002b 	tsteq	r0, fp, lsr #32
    ed94:	002b4e00 	eoreq	r4, fp, r0, lsl #28
    ed98:	002b5210 	eoreq	r5, fp, r0, lsl r2
    ed9c:	01c00110 	biceq	r0, r0, r0, lsl r1
    eda0:	00094f11 	andeq	r4, r9, r1, lsl pc
    eda4:	0a8d1500 	beq	fe3541ac <__RAM_segment_used_end__+0xc62541ac>
    eda8:	53a30000 			; <UNDEFINED> instruction: 0x53a30000
    edac:	53a10000 			; <UNDEFINED> instruction: 0x53a10000
    edb0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    edb4:	00000a5d 	andeq	r0, r0, sp, asr sl
    edb8:	10002b52 	andne	r2, r0, r2, asr fp
    edbc:	2b520003 	blcs	148edd0 <__RAM_SIZE+0x138edd0>
    edc0:	2b581000 	blcs	1612dc8 <__RAM_SIZE+0x1512dc8>
    edc4:	71011000 	mrsvc	r1, (UNDEF: 1)
    edc8:	00099c0d 	andeq	r9, r9, sp, lsl #24
    edcc:	0a701600 	beq	1c145d4 <__RAM_SIZE+0x1b145d4>
    edd0:	53ba0000 			; <UNDEFINED> instruction: 0x53ba0000
    edd4:	53b60000 			; <UNDEFINED> instruction: 0x53b60000
    edd8:	9b170000 	blls	5cede0 <__RAM_SIZE+0x4cede0>
    eddc:	5200000a 	andpl	r0, r0, #10
    ede0:	0610002b 	ldreq	r0, [r0], -fp, lsr #32
    ede4:	002b5200 	eoreq	r5, fp, r0, lsl #4
    ede8:	002b5610 	eoreq	r5, fp, r0, lsl r6
    edec:	02560210 	subseq	r0, r6, #16, 4
    edf0:	0aae1613 	beq	feb94644 <__RAM_segment_used_end__+0xc6a94644>
    edf4:	53da0000 	bicspl	r0, sl, #0
    edf8:	53d80000 	bicspl	r0, r8, #0
    edfc:	00000000 	andeq	r0, r0, r0
    ee00:	000a7e18 	andeq	r7, sl, r8, lsl lr
    ee04:	002b8200 	eoreq	r8, fp, r0, lsl #4
    ee08:	82000110 	andhi	r0, r0, #16, 2
    ee0c:	8610002b 	ldrhi	r0, [r0], -fp, lsr #32
    ee10:	0110002b 	tsteq	r0, fp, lsr #32
    ee14:	09c40d8e 	stmibeq	r4, {r1, r2, r3, r7, r8, sl, fp}^
    ee18:	8d150000 	ldchi	0, cr0, [r5, #-0]
    ee1c:	ef00000a 	svc	0x0000000a
    ee20:	ed000053 	stc	0, cr0, [r0, #-332]	; 0xfffffeb4
    ee24:	00000053 	andeq	r0, r0, r3, asr r0
    ee28:	000a5d18 	andeq	r5, sl, r8, lsl sp
    ee2c:	002b8600 	eoreq	r8, fp, r0, lsl #12
    ee30:	86000210 			; <UNDEFINED> instruction: 0x86000210
    ee34:	8c10002b 	ldchi	0, cr0, [r0], {43}	; 0x2b
    ee38:	0110002b 	tsteq	r0, fp, lsr #32
    ee3c:	0a110d91 	beq	452488 <__RAM_SIZE+0x352488>
    ee40:	70160000 	andsvc	r0, r6, r0
    ee44:	0400000a 	streq	r0, [r0], #-10
    ee48:	02000054 	andeq	r0, r0, #84	; 0x54
    ee4c:	17000054 	smlsdne	r0, r4, r0, r0
    ee50:	00000a9b 	muleq	r0, fp, sl
    ee54:	10002b86 	andne	r2, r0, r6, lsl #23
    ee58:	2b860005 	blcs	fe18ee74 <__RAM_segment_used_end__+0xc608ee74>
    ee5c:	2b8a1000 	blcs	fe292e64 <__RAM_segment_used_end__+0xc6192e64>
    ee60:	56021000 	strpl	r1, [r2], -r0
    ee64:	ae161302 	cdpge	3, 1, cr1, cr6, cr2, {0}
    ee68:	1900000a 	stmdbne	r0, {r1, r3}
    ee6c:	17000054 	smlsdne	r0, r4, r0, r0
    ee70:	00000054 	andeq	r0, r0, r4, asr r0
    ee74:	0a7e1400 	beq	1f93e7c <__RAM_SIZE+0x1e93e7c>
    ee78:	2b8e0000 	blcs	fe38ee80 <__RAM_segment_used_end__+0xc628ee80>
    ee7c:	00011000 	andeq	r1, r1, r0
    ee80:	10002b8e 	andne	r2, r0, lr, lsl #23
    ee84:	10002bc0 	andne	r2, r0, r0, asr #23
    ee88:	1101d401 	tstne	r1, r1, lsl #8
    ee8c:	00000a3a 	andeq	r0, r0, sl, lsr sl
    ee90:	000a8d15 	andeq	r8, sl, r5, lsl sp
    ee94:	00542e00 	subseq	r2, r4, r0, lsl #28
    ee98:	00542c00 	subseq	r2, r4, r0, lsl #24
    ee9c:	40190000 	andsmi	r0, r9, r0
    eea0:	0210002a 	andseq	r0, r0, #42	; 0x2a
    eea4:	0a4d0075 	beq	134f080 <__RAM_SIZE+0x124f080>
    eea8:	011a0000 	tsteq	sl, r0
    eeac:	00770250 	rsbseq	r0, r7, r0, asr r2
    eeb0:	2b4e1b00 	blcs	1395ab8 <__RAM_SIZE+0x1295ab8>
    eeb4:	0abc1000 	beq	fef12ebc <__RAM_segment_used_end__+0xc6e12ebc>
    eeb8:	011a0000 	tsteq	sl, r0
    eebc:	00300151 	eorseq	r0, r0, r1, asr r1
    eec0:	0f181c00 	svceq	0x00181c00
    eec4:	52020000 	andpl	r0, r2, #0
    eec8:	97013702 	strls	r3, [r1, -r2, lsl #14]
    eecc:	03000000 	movweq	r0, #0
    eed0:	00000a7e 	andeq	r0, r0, lr, ror sl
    eed4:	000ea113 	andeq	sl, lr, r3, lsl r1
    eed8:	02540200 	subseq	r0, r4, #0, 4
    eedc:	00009706 	andeq	r9, r0, r6, lsl #14
    eee0:	8d1d0000 	ldchi	0, cr0, [sp, #-0]
    eee4:	0200000e 	andeq	r0, r0, #14
    eee8:	01370249 	teqeq	r7, r9, asr #4
    eeec:	000a9b03 	andeq	r9, sl, r3, lsl #22
    eef0:	0ea11e00 	cdpeq	14, 10, cr1, cr1, cr0, {0}
    eef4:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    eef8:	00975002 	addseq	r5, r7, r2
    eefc:	1c000000 	stcne	0, cr0, [r0], {-0}
    ef00:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    ef04:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    ef08:	00009701 	andeq	r9, r0, r1, lsl #14
    ef0c:	0abc0300 	beq	fef0fb14 <__RAM_segment_used_end__+0xc6e0fb14>
    ef10:	a5130000 	ldrge	r0, [r3, #-0]
    ef14:	0200000e 	andeq	r0, r0, #14
    ef18:	97060234 	smladxls	r6, r4, r2, r0
    ef1c:	00000000 	andeq	r0, r0, r0
    ef20:	bd01011f 	stflts	f0, [r1, #-124]	; 0xffffff84
    ef24:	bd000010 	stclt	0, cr0, [r0, #-64]	; 0xffffffc0
    ef28:	05000010 	streq	r0, [r0, #-16]
    ef2c:	000d0121 	andeq	r0, sp, r1, lsr #2
    ef30:	00000715 	andeq	r0, r0, r5, lsl r7
    ef34:	2af80002 	bcs	ffe0ef44 <__RAM_segment_used_end__+0xc7d0ef44>
    ef38:	01040000 	mrseq	r0, (UNDEF: 4)
    ef3c:	0000003d 	andeq	r0, r0, sp, lsr r0
    ef40:	0026800c 	eoreq	r8, r6, ip
    ef44:	00064100 	andeq	r4, r6, r0, lsl #2
    ef48:	0004a000 	andeq	sl, r4, r0
	...
    ef54:	00564100 	subseq	r4, r6, r0, lsl #2
    ef58:	07040200 	streq	r0, [r4, -r0, lsl #4]
    ef5c:	00000239 	andeq	r0, r0, r9, lsr r2
    ef60:	69050403 	stmdbvs	r5, {r0, r1, sl}
    ef64:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    ef68:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    ef6c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    ef70:	00062304 	andeq	r2, r6, r4, lsl #6
    ef74:	06010200 	streq	r0, [r1], -r0, lsl #4
    ef78:	00000852 	andeq	r0, r0, r2, asr r8
    ef7c:	50080102 	andpl	r0, r8, r2, lsl #2
    ef80:	02000008 	andeq	r0, r0, #8
    ef84:	06b40502 	ldrteq	r0, [r4], r2, lsl #10
    ef88:	02020000 	andeq	r0, r2, #0
    ef8c:	00091e07 	andeq	r1, r9, r7, lsl #28
    ef90:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    ef94:	000004ed 	andeq	r0, r0, sp, ror #9
    ef98:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    ef9c:	02000002 	andeq	r0, r0, #2
    efa0:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    efa4:	04040000 	streq	r0, [r4], #-0
    efa8:	59080102 	stmdbpl	r8, {r1, r8}
    efac:	05000008 	streq	r0, [r0, #-8]
    efb0:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    efb4:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    efb8:	05000000 	streq	r0, [r0, #-0]
    efbc:	000008de 	ldrdeq	r0, [r0], -lr
    efc0:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    efc4:	05000000 	streq	r0, [r0, #-0]
    efc8:	0000077f 	andeq	r0, r0, pc, ror r7
    efcc:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    efd0:	05000000 	streq	r0, [r0, #-0]
    efd4:	00000711 	andeq	r0, r0, r1, lsl r7
    efd8:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    efdc:	06000000 	streq	r0, [r0], -r0
    efe0:	0000053b 	andeq	r0, r0, fp, lsr r5
    efe4:	0182031c 	orreq	r0, r2, ip, lsl r3
    efe8:	00012e10 	andeq	r2, r1, r0, lsl lr
    efec:	08120700 	ldmdaeq	r2, {r8, r9, sl}
    eff0:	86030000 	strhi	r0, [r3], -r0
    eff4:	00a31901 	adceq	r1, r3, r1, lsl #18
    eff8:	23020000 	movwcs	r0, #8192	; 0x2000
    effc:	03a00700 	moveq	r0, #0, 14
    f000:	87030000 	strhi	r0, [r3, -r0]
    f004:	00a31901 	adceq	r1, r3, r1, lsl #18
    f008:	23020000 	movwcs	r0, #8192	; 0x2000
    f00c:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    f010:	8a030000 	bhi	cf018 <SYSTICK_CYCLES+0xa5fd9>
    f014:	013a1b01 	teqeq	sl, r1, lsl #22
    f018:	23020000 	movwcs	r0, #8192	; 0x2000
    f01c:	01f20708 	mvnseq	r0, r8, lsl #14
    f020:	8b030000 	blhi	cf028 <SYSTICK_CYCLES+0xa5fe9>
    f024:	00a31901 	adceq	r1, r3, r1, lsl #18
    f028:	23020000 	movwcs	r0, #8192	; 0x2000
    f02c:	0954070c 	ldmdbeq	r4, {r2, r3, r8, r9, sl}^
    f030:	91030000 	mrsls	r0, (UNDEF: 3)
    f034:	01401a01 	cmpeq	r0, r1, lsl #20
    f038:	23020000 	movwcs	r0, #8192	; 0x2000
    f03c:	001b0710 	andseq	r0, fp, r0, lsl r7
    f040:	92030000 	andls	r0, r3, #0
    f044:	01401a01 	cmpeq	r0, r1, lsl #20
    f048:	23020000 	movwcs	r0, #8192	; 0x2000
    f04c:	05ee0714 	strbeq	r0, [lr, #1812]!	; 0x714
    f050:	96030000 	strls	r0, [r3], -r0
    f054:	01461b01 	cmpeq	r6, r1, lsl #22
    f058:	23020000 	movwcs	r0, #8192	; 0x2000
    f05c:	01080018 	tsteq	r8, r8, lsl r0
    f060:	0000013a 	andeq	r0, r0, sl, lsr r1
    f064:	0000a309 	andeq	sl, r0, r9, lsl #6
    f068:	040a0000 	streq	r0, [sl], #-0
    f06c:	0000012e 	andeq	r0, r0, lr, lsr #2
    f070:	00af040a 	adceq	r0, pc, sl, lsl #8
    f074:	040a0000 	streq	r0, [sl], #-0
    f078:	00000140 	andeq	r0, r0, r0, asr #2
    f07c:	00062f0b 	andeq	r2, r6, fp, lsl #30
    f080:	019b0300 	orrseq	r0, fp, r0, lsl #6
    f084:	0000af03 	andeq	sl, r0, r3, lsl #30
    f088:	7f040a00 	svcvc	0x00040a00
    f08c:	06000000 	streq	r0, [r0], -r0
    f090:	0000034b 	andeq	r0, r0, fp, asr #6
    f094:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
    f098:	00047310 	andeq	r7, r4, r0, lsl r3
    f09c:	09110700 	ldmdbeq	r1, {r8, r9, sl}
    f0a0:	dd030000 	stcle	0, cr0, [r3, #-0]
    f0a4:	00a31901 	adceq	r1, r3, r1, lsl #18
    f0a8:	23020000 	movwcs	r0, #8192	; 0x2000
    f0ac:	07840700 	streq	r0, [r4, r0, lsl #14]
    f0b0:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    f0b4:	00a31901 	adceq	r1, r3, r1, lsl #18
    f0b8:	23020000 	movwcs	r0, #8192	; 0x2000
    f0bc:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    f0c0:	df030000 	svcle	0x00030000
    f0c4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    f0c8:	23020000 	movwcs	r0, #8192	; 0x2000
    f0cc:	08fb0708 	ldmeq	fp!, {r3, r8, r9, sl}^
    f0d0:	e0030000 	and	r0, r3, r0
    f0d4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    f0d8:	23020000 	movwcs	r0, #8192	; 0x2000
    f0dc:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    f0e0:	e1030000 	mrs	r0, (UNDEF: 3)
    f0e4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    f0e8:	23020000 	movwcs	r0, #8192	; 0x2000
    f0ec:	093f0710 	ldmdbeq	pc!, {r4, r8, r9, sl}	; <UNPREDICTABLE>
    f0f0:	e2030000 	and	r0, r3, #0
    f0f4:	00a31901 	adceq	r1, r3, r1, lsl #18
    f0f8:	23020000 	movwcs	r0, #8192	; 0x2000
    f0fc:	21d10714 	bicscs	r0, r1, r4, lsl r7
    f100:	e3030000 	movw	r0, #12288	; 0x3000
    f104:	00a31901 	adceq	r1, r3, r1, lsl #18
    f108:	23020000 	movwcs	r0, #8192	; 0x2000
    f10c:	060a0718 			; <UNDEFINED> instruction: 0x060a0718
    f110:	e4030000 	str	r0, [r3], #-0
    f114:	00a31901 	adceq	r1, r3, r1, lsl #18
    f118:	23020000 	movwcs	r0, #8192	; 0x2000
    f11c:	069f071c 			; <UNDEFINED> instruction: 0x069f071c
    f120:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    f124:	04731a01 	ldrbteq	r1, [r3], #-2561	; 0xfffff5ff
    f128:	23020000 	movwcs	r0, #8192	; 0x2000
    f12c:	01990720 	orrseq	r0, r9, r0, lsr #14
    f130:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    f134:	04731a01 	ldrbteq	r1, [r3], #-2561	; 0xfffff5ff
    f138:	23020000 	movwcs	r0, #8192	; 0x2000
    f13c:	05960724 	ldreq	r0, [r6, #1828]	; 0x724
    f140:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    f144:	01591a01 	cmpeq	r9, r1, lsl #20
    f148:	23020000 	movwcs	r0, #8192	; 0x2000
    f14c:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    f150:	f2030000 	vhadd.s8	d0, d3, d0
    f154:	00971901 	addseq	r1, r7, r1, lsl #18
    f158:	23020000 	movwcs	r0, #8192	; 0x2000
    f15c:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    f160:	f3030000 	vhadd.u8	d0, d3, d0
    f164:	00971901 	addseq	r1, r7, r1, lsl #18
    f168:	23020000 	movwcs	r0, #8192	; 0x2000
    f16c:	01730730 	cmneq	r3, r0, lsr r7
    f170:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    f174:	00971901 	addseq	r1, r7, r1, lsl #18
    f178:	23020000 	movwcs	r0, #8192	; 0x2000
    f17c:	07300734 			; <UNDEFINED> instruction: 0x07300734
    f180:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    f184:	00971901 	addseq	r1, r7, r1, lsl #18
    f188:	23020000 	movwcs	r0, #8192	; 0x2000
    f18c:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    f190:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    f194:	00971901 	addseq	r1, r7, r1, lsl #18
    f198:	23020000 	movwcs	r0, #8192	; 0x2000
    f19c:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    f1a0:	fb030000 	blx	cf1aa <SYSTICK_CYCLES+0xa616b>
    f1a4:	048a1b01 	streq	r1, [sl], #2817	; 0xb01
    f1a8:	23020000 	movwcs	r0, #8192	; 0x2000
    f1ac:	01520740 	cmpeq	r2, r0, asr #14
    f1b0:	03030000 	movweq	r0, #12288	; 0x3000
    f1b4:	013a1b02 	teqeq	sl, r2, lsl #22
    f1b8:	23020000 	movwcs	r0, #8192	; 0x2000
    f1bc:	01070744 	tsteq	r7, r4, asr #14
    f1c0:	04030000 	streq	r0, [r3], #-0
    f1c4:	00a31902 	adceq	r1, r3, r2, lsl #18
    f1c8:	23020000 	movwcs	r0, #8192	; 0x2000
    f1cc:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    f1d0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    f1d4:	014c1902 	cmpeq	ip, r2, lsl #18
    f1d8:	23020000 	movwcs	r0, #8192	; 0x2000
    f1dc:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    f1e0:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    f1e4:	048a1b02 	streq	r1, [sl], #2818	; 0xb02
    f1e8:	23020000 	movwcs	r0, #8192	; 0x2000
    f1ec:	05ce0768 	strbeq	r0, [lr, #1896]	; 0x768
    f1f0:	0f030000 	svceq	0x00030000
    f1f4:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    f1f8:	23020000 	movwcs	r0, #8192	; 0x2000
    f1fc:	0717076c 	ldreq	r0, [r7, -ip, ror #14]
    f200:	11030000 	mrsne	r0, (UNDEF: 3)
    f204:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    f208:	23020000 	movwcs	r0, #8192	; 0x2000
    f20c:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    f210:	12030000 	andne	r0, r3, #0
    f214:	04731a02 	ldrbteq	r1, [r3], #-2562	; 0xfffff5fe
    f218:	23020000 	movwcs	r0, #8192	; 0x2000
    f21c:	06fa0774 			; <UNDEFINED> instruction: 0x06fa0774
    f220:	13030000 	movwne	r0, #12288	; 0x3000
    f224:	00a31902 	adceq	r1, r3, r2, lsl #18
    f228:	23020000 	movwcs	r0, #8192	; 0x2000
    f22c:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    f230:	14030000 	strne	r0, [r3], #-0
    f234:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    f238:	23020000 	movwcs	r0, #8192	; 0x2000
    f23c:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    f240:	15030000 	strne	r0, [r3, #-0]
    f244:	00971902 	addseq	r1, r7, r2, lsl #18
    f248:	23030000 	movwcs	r0, #12288	; 0x3000
    f24c:	e8070180 	stmda	r7, {r7, r8}
    f250:	03000003 	movweq	r0, #3
    f254:	97190216 			; <UNDEFINED> instruction: 0x97190216
    f258:	03000000 	movweq	r0, #0
    f25c:	07018423 	streq	r8, [r1, -r3, lsr #8]
    f260:	000008e4 	andeq	r0, r0, r4, ror #17
    f264:	1a021f03 	bne	96e78 <SYSTICK_CYCLES+0x6de39>
    f268:	00000473 	andeq	r0, r0, r3, ror r4
    f26c:	01882303 	orreq	r2, r8, r3, lsl #6
    f270:	0007d507 	andeq	sp, r7, r7, lsl #10
    f274:	02200300 	eoreq	r0, r0, #0, 6
    f278:	0004731a 	andeq	r7, r4, sl, lsl r3
    f27c:	8c230300 	stchi	3, cr0, [r3], #-0
    f280:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    f284:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    f288:	00971902 	addseq	r1, r7, r2, lsl #18
    f28c:	23030000 	movwcs	r0, #12288	; 0x3000
    f290:	56070190 			; <UNDEFINED> instruction: 0x56070190
    f294:	03000002 	movweq	r0, #2
    f298:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    f29c:	03000000 	movweq	r0, #0
    f2a0:	07019423 	streq	r9, [r1, -r3, lsr #8]
    f2a4:	00000320 	andeq	r0, r0, r0, lsr #6
    f2a8:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    f2ac:	00000097 	muleq	r0, r7, r0
    f2b0:	01982303 	orrseq	r2, r8, r3, lsl #6
    f2b4:	00027707 	andeq	r7, r2, r7, lsl #14
    f2b8:	02330300 	eorseq	r0, r3, #0, 6
    f2bc:	00009719 	andeq	r9, r0, r9, lsl r7
    f2c0:	9c230300 	stcls	3, cr0, [r3], #-0
    f2c4:	00000701 	andeq	r0, r0, r1, lsl #14
    f2c8:	35030000 	strcc	r0, [r3, #-0]
    f2cc:	056f1a02 	strbeq	r1, [pc, #-2562]!	; e8d2 <_Min_Stack_Size+0xd8d2>
    f2d0:	23030000 	movwcs	r0, #12288	; 0x3000
    f2d4:	b70701a0 	strlt	r0, [r7, -r0, lsr #3]
    f2d8:	0300001b 	movweq	r0, #27
    f2dc:	a319023a 	tstge	r9, #-1610612733	; 0xa0000003
    f2e0:	03000000 	movweq	r0, #0
    f2e4:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    f2e8:	00001c77 	andeq	r1, r0, r7, ror ip
    f2ec:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    f2f0:	000000a3 	andeq	r0, r0, r3, lsr #1
    f2f4:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    f2f8:	001b3007 	andseq	r3, fp, r7
    f2fc:	02410300 	subeq	r0, r1, #0, 6
    f300:	0000a319 	andeq	sl, r0, r9, lsl r3
    f304:	ac230300 	stcge	3, cr0, [r3], #-0
    f308:	1d2e0701 	stcne	7, cr0, [lr, #-4]!
    f30c:	45030000 	strmi	r0, [r3, #-0]
    f310:	00a31902 	adceq	r1, r3, r2, lsl #18
    f314:	23030000 	movwcs	r0, #12288	; 0x3000
    f318:	470701b0 			; <UNDEFINED> instruction: 0x470701b0
    f31c:	0300001c 	movweq	r0, #28
    f320:	a3190248 	tstge	r9, #72, 4	; 0x80000004
    f324:	03000000 	movweq	r0, #0
    f328:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    f32c:	000007a8 	andeq	r0, r0, r8, lsr #15
    f330:	1a024c03 	bne	a2344 <SYSTICK_CYCLES+0x79305>
    f334:	00000473 	andeq	r0, r0, r3, ror r4
    f338:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    f33c:	001d0607 	andseq	r0, sp, r7, lsl #12
    f340:	024f0300 	subeq	r0, pc, #0, 6
    f344:	0000a319 	andeq	sl, r0, r9, lsl r3
    f348:	bc230300 	stclt	3, cr0, [r3], #-0
    f34c:	1b080701 	blne	210f58 <__RAM_SIZE+0x110f58>
    f350:	52030000 	andpl	r0, r3, #0
    f354:	00a31902 	adceq	r1, r3, r2, lsl #18
    f358:	23030000 	movwcs	r0, #12288	; 0x3000
    f35c:	850701c0 	strhi	r0, [r7, #-448]	; 0xfffffe40
    f360:	0300001a 	movweq	r0, #26
    f364:	a3190255 	tstge	r9, #1342177285	; 0x50000005
    f368:	03000000 	movweq	r0, #0
    f36c:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    f370:	00001bdb 	ldrdeq	r1, [r0], -fp
    f374:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    f378:	000000a3 	andeq	r0, r0, r3, lsr #1
    f37c:	01c82303 	biceq	r2, r8, r3, lsl #6
    f380:	0009a907 	andeq	sl, r9, r7, lsl #18
    f384:	025d0300 	subseq	r0, sp, #0, 6
    f388:	0000761a 	andeq	r7, r0, sl, lsl r6
    f38c:	cc230300 	stcgt	3, cr0, [r3], #-0
    f390:	04810701 	streq	r0, [r1], #1793	; 0x701
    f394:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    f398:	00a31902 	adceq	r1, r3, r2, lsl #18
    f39c:	23030000 	movwcs	r0, #12288	; 0x3000
    f3a0:	0a0001d0 	beq	fae8 <_Min_Stack_Size+0xeae8>
    f3a4:	00015f04 	andeq	r5, r1, r4, lsl #30
    f3a8:	8a010800 	bhi	513b0 <SYSTICK_CYCLES+0x28371>
    f3ac:	09000004 	stmdbeq	r0, {r2}
    f3b0:	00000473 	andeq	r0, r0, r3, ror r4
    f3b4:	0000a309 	andeq	sl, r0, r9, lsl #6
    f3b8:	040a0000 	streq	r0, [sl], #-0
    f3bc:	00000479 	andeq	r0, r0, r9, ror r4
    f3c0:	00079806 	andeq	r9, r7, r6, lsl #16
    f3c4:	7e033400 	cfcpysvc	mvf3, mvf3
    f3c8:	056f1003 	strbeq	r1, [pc, #-3]!	; f3cd <_Min_Stack_Size+0xe3cd>
    f3cc:	8d070000 	stchi	0, cr0, [r7, #-0]
    f3d0:	03000001 	movweq	r0, #1
    f3d4:	a3190382 	tstge	r9, #134217730	; 0x8000002
    f3d8:	02000000 	andeq	r0, r0, #0
    f3dc:	7c070023 	stcvc	0, cr0, [r7], {35}	; 0x23
    f3e0:	03000008 	movweq	r0, #8
    f3e4:	591a0385 	ldmdbpl	sl, {r0, r2, r7, r8, r9}
    f3e8:	02000001 	andeq	r0, r0, #1
    f3ec:	e1070423 	tst	r7, r3, lsr #8
    f3f0:	03000006 	movweq	r0, #6
    f3f4:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    f3f8:	02000000 	andeq	r0, r0, #0
    f3fc:	cb070823 	blgt	1d1490 <__RAM_SIZE+0xd1490>
    f400:	03000004 	movweq	r0, #4
    f404:	6a1a038c 	bvs	69023c <__RAM_SIZE+0x59023c>
    f408:	02000006 	andeq	r0, r0, #6
    f40c:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    f410:	03000001 	movweq	r0, #1
    f414:	97190390 			; <UNDEFINED> instruction: 0x97190390
    f418:	02000000 	andeq	r0, r0, #0
    f41c:	21071023 	tstcs	r7, r3, lsr #32
    f420:	03000001 	movweq	r0, #1
    f424:	97190393 			; <UNDEFINED> instruction: 0x97190393
    f428:	02000000 	andeq	r0, r0, #0
    f42c:	b2071423 	andlt	r1, r7, #587202560	; 0x23000000
    f430:	03000008 	movweq	r0, #8
    f434:	731a0398 	tstvc	sl, #152, 6	; 0x60000002
    f438:	02000004 	andeq	r0, r0, #4
    f43c:	c8071823 	stmdagt	r7, {r0, r1, r5, fp, ip}
    f440:	03000006 	movweq	r0, #6
    f444:	97190399 			; <UNDEFINED> instruction: 0x97190399
    f448:	02000000 	andeq	r0, r0, #0
    f44c:	b8071c23 	stmdalt	r7, {r0, r1, r5, sl, fp, ip}
    f450:	03000005 	movweq	r0, #5
    f454:	6f1a039d 	svcvs	0x001a039d
    f458:	02000005 	andeq	r0, r0, #5
    f45c:	85072023 	strhi	r2, [r7, #-35]	; 0xffffffdd
    f460:	03000006 	movweq	r0, #6
    f464:	6f1a039e 	svcvs	0x001a039e
    f468:	02000005 	andeq	r0, r0, #5
    f46c:	d0072423 	andle	r2, r7, r3, lsr #8
    f470:	03000001 	movweq	r0, #1
    f474:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    f478:	02000000 	andeq	r0, r0, #0
    f47c:	c5072823 	strgt	r2, [r7, #-2083]	; 0xfffff7dd
    f480:	03000009 	movweq	r0, #9
    f484:	6f1a03a6 	svcvs	0x001a03a6
    f488:	02000005 	andeq	r0, r0, #5
    f48c:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    f490:	03000004 	movweq	r0, #4
    f494:	6f1a03a7 	svcvs	0x001a03a7
    f498:	02000005 	andeq	r0, r0, #5
    f49c:	0a003023 	beq	1b530 <_Min_Stack_Size+0x1a530>
    f4a0:	00049004 	andeq	r9, r4, r4
    f4a4:	08d40b00 	ldmeq	r4, {r8, r9, fp}^
    f4a8:	86030000 	strhi	r0, [r3], -r0
    f4ac:	015f0302 	cmpeq	pc, r2, lsl #6
    f4b0:	43060000 	movwmi	r0, #24576	; 0x6000
    f4b4:	30000010 	andcc	r0, r0, r0, lsl r0
    f4b8:	10028b03 	andne	r8, r2, r3, lsl #22
    f4bc:	00000651 	andeq	r0, r0, r1, asr r6
    f4c0:	000e4507 	andeq	r4, lr, r7, lsl #10
    f4c4:	028f0300 	addeq	r0, pc, #0, 6
    f4c8:	0000a319 	andeq	sl, r0, r9, lsl r3
    f4cc:	00230200 	eoreq	r0, r3, r0, lsl #4
    f4d0:	000fd707 	andeq	sp, pc, r7, lsl #14
    f4d4:	02920300 	addseq	r0, r2, #0, 6
    f4d8:	0001591a 	andeq	r5, r1, sl, lsl r9
    f4dc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    f4e0:	000f7907 	andeq	r7, pc, r7, lsl #18
    f4e4:	02950300 	addseq	r0, r5, #0, 6
    f4e8:	00009719 	andeq	r9, r0, r9, lsl r7
    f4ec:	08230200 	stmdaeq	r3!, {r9}
    f4f0:	000ece07 	andeq	ip, lr, r7, lsl #28
    f4f4:	02980300 	addseq	r0, r8, #0, 6
    f4f8:	00009719 	andeq	r9, r0, r9, lsl r7
    f4fc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    f500:	00101707 	andseq	r1, r0, r7, lsl #14
    f504:	029b0300 	addseq	r0, fp, #0, 6
    f508:	0006511a 	andeq	r5, r6, sl, lsl r1
    f50c:	10230200 	eorne	r0, r3, r0, lsl #4
    f510:	000e3107 	andeq	r3, lr, r7, lsl #2
    f514:	029e0300 	addseq	r0, lr, #0, 6
    f518:	0006511a 	andeq	r5, r6, sl, lsl r1
    f51c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    f520:	000f2d07 	andeq	r2, pc, r7, lsl #26
    f524:	02a10300 	adceq	r0, r1, #0, 6
    f528:	0000a319 	andeq	sl, r0, r9, lsl r3
    f52c:	18230200 	stmdane	r3!, {r9}
    f530:	000f9f07 	andeq	r9, pc, r7, lsl #30
    f534:	02a40300 	adceq	r0, r4, #0, 6
    f538:	00009719 	andeq	r9, r0, r9, lsl r7
    f53c:	1c230200 	sfmne	f0, 4, [r3], #-0
    f540:	000efa07 	andeq	pc, lr, r7, lsl #20
    f544:	02a90300 	adceq	r0, r9, #0, 6
    f548:	0004731a 	andeq	r7, r4, sl, lsl r3
    f54c:	20230200 	eorcs	r0, r3, r0, lsl #4
    f550:	000f5b07 	andeq	r5, pc, r7, lsl #22
    f554:	02aa0300 	adceq	r0, sl, #0, 6
    f558:	00009719 	andeq	r9, r0, r9, lsl r7
    f55c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    f560:	000f4007 	andeq	r4, pc, r7
    f564:	02ae0300 	adceq	r0, lr, #0, 6
    f568:	0006571a 	andeq	r5, r6, sl, lsl r7
    f56c:	28230200 	stmdacs	r3!, {r9}
    f570:	000fb807 	andeq	fp, pc, r7, lsl #16
    f574:	02af0300 	adceq	r0, pc, #0, 6
    f578:	0006571a 	andeq	r5, r6, sl, lsl r7
    f57c:	2c230200 	sfmcs	f0, 4, [r3], #-0
    f580:	8b040a00 	blhi	111d88 <__RAM_SIZE+0x11d88>
    f584:	0a000000 	beq	f58c <_Min_Stack_Size+0xe58c>
    f588:	00058204 	andeq	r8, r5, r4, lsl #4
    f58c:	0f910b00 	svceq	0x00910b00
    f590:	c4030000 	strgt	r0, [r3], #-0
    f594:	05820302 	streq	r0, [r2, #770]	; 0x302
    f598:	040a0000 	streq	r0, [sl], #-0
    f59c:	00000575 	andeq	r0, r0, r5, ror r5
    f5a0:	065d040a 	ldrbeq	r0, [sp], -sl, lsl #8
    f5a4:	010c0000 	mrseq	r0, (UNDEF: 12)
    f5a8:	0000056d 	andeq	r0, r0, sp, ror #10
    f5ac:	01074701 	tsteq	r7, r1, lsl #14
    f5b0:	00000097 	muleq	r0, r7, r0
    f5b4:	10002bc0 	andne	r2, r0, r0, asr #23
    f5b8:	10002be8 	andne	r2, r0, r8, ror #23
    f5bc:	00005441 	andeq	r5, r0, r1, asr #8
    f5c0:	00070301 	andeq	r0, r7, r1, lsl #6
    f5c4:	0ff10d00 	svceq	0x00f10d00
    f5c8:	47010000 	strmi	r0, [r1, -r0]
    f5cc:	00007620 	andeq	r7, r0, r0, lsr #12
    f5d0:	00548900 	subseq	r8, r4, r0, lsl #18
    f5d4:	00547900 	subseq	r7, r4, r0, lsl #18
    f5d8:	03fa0e00 	mvnseq	r0, #0, 28
    f5dc:	4a010000 	bmi	4f5e4 <SYSTICK_CYCLES+0x265a5>
    f5e0:	00009715 	andeq	r9, r0, r5, lsl r7
    f5e4:	0054f900 	subseq	pc, r4, r0, lsl #18
    f5e8:	0054f500 	subseq	pc, r4, r0, lsl #10
    f5ec:	0ef10e00 	cdpeq	14, 15, cr0, cr1, cr0, {0}
    f5f0:	4b010000 	blmi	4f5f8 <SYSTICK_CYCLES+0x265b9>
    f5f4:	00067016 	andeq	r7, r6, r6, lsl r0
    f5f8:	00552200 	subseq	r2, r5, r0, lsl #4
    f5fc:	00551800 	subseq	r1, r5, r0, lsl #16
    f600:	12280e00 	eorne	r0, r8, #0, 28
    f604:	4c010000 	stcmi	0, cr0, [r1], {-0}
    f608:	00070317 	andeq	r0, r7, r7, lsl r3
    f60c:	00557300 	subseq	r7, r5, r0, lsl #6
    f610:	00556700 	subseq	r6, r5, r0, lsl #14
    f614:	0ead0e00 	cdpeq	14, 10, cr0, cr13, cr0, {0}
    f618:	4d010000 	stcmi	0, cr0, [r1, #-0]
    f61c:	00065116 	andeq	r5, r6, r6, lsl r1
    f620:	0055e000 	subseq	lr, r5, r0
    f624:	0055d200 	subseq	sp, r5, r0, lsl #4
    f628:	2bda0f00 	blcs	ff693230 <__RAM_segment_used_end__+0xc7593230>
    f62c:	07091000 	streq	r1, [r9, -r0]
    f630:	0a000000 	beq	f638 <_Min_Stack_Size+0xe638>
    f634:	00065104 	andeq	r5, r6, r4, lsl #2
    f638:	01011000 	mrseq	r1, (UNDEF: 1)
    f63c:	00001074 	andeq	r1, r0, r4, ror r0
    f640:	00001074 	andeq	r1, r0, r4, ror r0
    f644:	0d05d303 	stceq	3, cr13, [r5, #-12]
    f648:	00080800 	andeq	r0, r8, r0, lsl #16
    f64c:	e9000200 	stmdb	r0, {r9}
    f650:	0400002b 	streq	r0, [r0], #-43	; 0xffffffd5
    f654:	00003d01 	andeq	r3, r0, r1, lsl #26
    f658:	26b80c00 	ldrtcs	r0, [r8], r0, lsl #24
    f65c:	06410000 	strbeq	r0, [r1], -r0
    f660:	04b00000 	ldrteq	r0, [r0], #0
	...
    f66c:	57740000 	ldrbpl	r0, [r4, -r0]!
    f670:	04020000 	streq	r0, [r2], #-0
    f674:	00023907 	andeq	r3, r2, r7, lsl #18
    f678:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    f67c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    f680:	e8050802 	stmda	r5, {r1, fp}
    f684:	02000004 	andeq	r0, r0, #4
    f688:	06230408 	strteq	r0, [r3], -r8, lsl #8
    f68c:	01020000 	mrseq	r0, (UNDEF: 2)
    f690:	00085206 	andeq	r5, r8, r6, lsl #4
    f694:	08010200 	stmdaeq	r1, {r9}
    f698:	00000850 	andeq	r0, r0, r0, asr r8
    f69c:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    f6a0:	02000006 	andeq	r0, r0, #6
    f6a4:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    f6a8:	04020000 	streq	r0, [r2], #-0
    f6ac:	0004ed05 	andeq	lr, r4, r5, lsl #26
    f6b0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    f6b4:	00000234 	andeq	r0, r0, r4, lsr r2
    f6b8:	2f070802 	svccs	0x00070802
    f6bc:	04000002 	streq	r0, [r0], #-2
    f6c0:	08010204 	stmdaeq	r1, {r2, r9}
    f6c4:	00000859 	andeq	r0, r0, r9, asr r8
    f6c8:	0008df05 	andeq	sp, r8, r5, lsl #30
    f6cc:	31730200 	cmncc	r3, r0, lsl #4
    f6d0:	00000078 	andeq	r0, r0, r8, ror r0
    f6d4:	0008de05 	andeq	sp, r8, r5, lsl #28
    f6d8:	31740200 	cmncc	r4, r0, lsl #4
    f6dc:	0000004c 	andeq	r0, r0, ip, asr #32
    f6e0:	00077f05 	andeq	r7, r7, r5, lsl #30
    f6e4:	31760200 	cmncc	r6, r0, lsl #4
    f6e8:	00000029 	andeq	r0, r0, r9, lsr #32
    f6ec:	00071105 	andeq	r1, r7, r5, lsl #2
    f6f0:	31780200 	cmncc	r8, r0, lsl #4
    f6f4:	00000068 	andeq	r0, r0, r8, rrx
    f6f8:	0000a306 	andeq	sl, r0, r6, lsl #6
    f6fc:	053b0700 	ldreq	r0, [fp, #-1792]!	; 0xfffff900
    f700:	031c0000 	tsteq	ip, #0
    f704:	33100182 	tstcc	r0, #-2147483616	; 0x80000020
    f708:	08000001 	stmdaeq	r0, {r0}
    f70c:	00000812 	andeq	r0, r0, r2, lsl r8
    f710:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    f714:	000000a3 	andeq	r0, r0, r3, lsr #1
    f718:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    f71c:	000003a0 	andeq	r0, r0, r0, lsr #7
    f720:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    f724:	000000a3 	andeq	r0, r0, r3, lsr #1
    f728:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    f72c:	0000043d 	andeq	r0, r0, sp, lsr r4
    f730:	1b018a03 	blne	71f44 <SYSTICK_CYCLES+0x48f05>
    f734:	0000013f 	andeq	r0, r0, pc, lsr r1
    f738:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    f73c:	000001f2 	strdeq	r0, [r0], -r2
    f740:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    f744:	000000a3 	andeq	r0, r0, r3, lsr #1
    f748:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    f74c:	00000954 	andeq	r0, r0, r4, asr r9
    f750:	1a019103 	bne	73b64 <SYSTICK_CYCLES+0x4ab25>
    f754:	00000145 	andeq	r0, r0, r5, asr #2
    f758:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    f75c:	0000001b 	andeq	r0, r0, fp, lsl r0
    f760:	1a019203 	bne	73f74 <SYSTICK_CYCLES+0x4af35>
    f764:	00000145 	andeq	r0, r0, r5, asr #2
    f768:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    f76c:	000005ee 	andeq	r0, r0, lr, ror #11
    f770:	1b019603 	blne	74f84 <SYSTICK_CYCLES+0x4bf45>
    f774:	0000014b 	andeq	r0, r0, fp, asr #2
    f778:	00182302 	andseq	r2, r8, r2, lsl #6
    f77c:	013f0109 	teqeq	pc, r9, lsl #2
    f780:	a30a0000 	movwge	r0, #40960	; 0xa000
    f784:	00000000 	andeq	r0, r0, r0
    f788:	0133040b 	teqeq	r3, fp, lsl #8
    f78c:	040b0000 	streq	r0, [fp], #-0
    f790:	000000b4 	strheq	r0, [r0], -r4
    f794:	0145040b 	cmpeq	r5, fp, lsl #8
    f798:	2f0c0000 	svccs	0x000c0000
    f79c:	03000006 	movweq	r0, #6
    f7a0:	b403019b 	strlt	r0, [r3], #-411	; 0xfffffe65
    f7a4:	0b000000 	bleq	f7ac <_Min_Stack_Size+0xe7ac>
    f7a8:	00007f04 	andeq	r7, r0, r4, lsl #30
    f7ac:	034b0700 	movteq	r0, #46848	; 0xb700
    f7b0:	03d40000 	bicseq	r0, r4, #0
    f7b4:	781001d6 	ldmdavc	r0, {r1, r2, r4, r6, r7, r8}
    f7b8:	08000004 	stmdaeq	r0, {r2}
    f7bc:	00000911 	andeq	r0, r0, r1, lsl r9
    f7c0:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    f7c4:	000000a3 	andeq	r0, r0, r3, lsr #1
    f7c8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    f7cc:	00000784 	andeq	r0, r0, r4, lsl #15
    f7d0:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    f7d4:	000000a3 	andeq	r0, r0, r3, lsr #1
    f7d8:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    f7dc:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    f7e0:	1a01df03 	bne	873f4 <SYSTICK_CYCLES+0x5e3b5>
    f7e4:	00000076 	andeq	r0, r0, r6, ror r0
    f7e8:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    f7ec:	000008fb 	strdeq	r0, [r0], -fp
    f7f0:	1a01e003 	bne	87804 <SYSTICK_CYCLES+0x5e7c5>
    f7f4:	00000076 	andeq	r0, r0, r6, ror r0
    f7f8:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    f7fc:	00000411 	andeq	r0, r0, r1, lsl r4
    f800:	1a01e103 	bne	87c14 <SYSTICK_CYCLES+0x5ebd5>
    f804:	00000076 	andeq	r0, r0, r6, ror r0
    f808:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    f80c:	0000093f 	andeq	r0, r0, pc, lsr r9
    f810:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    f814:	000000a3 	andeq	r0, r0, r3, lsr #1
    f818:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    f81c:	000021d1 	ldrdeq	r2, [r0], -r1
    f820:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    f824:	000000a3 	andeq	r0, r0, r3, lsr #1
    f828:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    f82c:	0000060a 	andeq	r0, r0, sl, lsl #12
    f830:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    f834:	000000a3 	andeq	r0, r0, r3, lsr #1
    f838:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    f83c:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    f840:	1a01e803 	bne	89854 <SYSTICK_CYCLES+0x60815>
    f844:	00000478 	andeq	r0, r0, r8, ror r4
    f848:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    f84c:	00000199 	muleq	r0, r9, r1
    f850:	1a01e903 	bne	89c64 <SYSTICK_CYCLES+0x60c25>
    f854:	00000478 	andeq	r0, r0, r8, ror r4
    f858:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    f85c:	00000596 	muleq	r0, r6, r5
    f860:	1a01f103 	bne	8bc74 <SYSTICK_CYCLES+0x62c35>
    f864:	0000015e 	andeq	r0, r0, lr, asr r1
    f868:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    f86c:	000002d9 	ldrdeq	r0, [r0], -r9
    f870:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    f874:	00000097 	muleq	r0, r7, r0
    f878:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    f87c:	00000246 	andeq	r0, r0, r6, asr #4
    f880:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    f884:	00000097 	muleq	r0, r7, r0
    f888:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    f88c:	00000173 	andeq	r0, r0, r3, ror r1
    f890:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    f894:	00000097 	muleq	r0, r7, r0
    f898:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    f89c:	00000730 	andeq	r0, r0, r0, lsr r7
    f8a0:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    f8a4:	00000097 	muleq	r0, r7, r0
    f8a8:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    f8ac:	000000eb 	andeq	r0, r0, fp, ror #1
    f8b0:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    f8b4:	00000097 	muleq	r0, r7, r0
    f8b8:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    f8bc:	0000035c 	andeq	r0, r0, ip, asr r3
    f8c0:	1b01fb03 	blne	8e4d4 <SYSTICK_CYCLES+0x65495>
    f8c4:	0000048f 	andeq	r0, r0, pc, lsl #9
    f8c8:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    f8cc:	00000152 	andeq	r0, r0, r2, asr r1
    f8d0:	1b020303 	blne	904e4 <SYSTICK_CYCLES+0x674a5>
    f8d4:	0000013f 	andeq	r0, r0, pc, lsr r1
    f8d8:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    f8dc:	00000107 	andeq	r0, r0, r7, lsl #2
    f8e0:	19020403 	stmdbne	r2, {r0, r1, sl}
    f8e4:	000000a3 	andeq	r0, r0, r3, lsr #1
    f8e8:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    f8ec:	0000033b 	andeq	r0, r0, fp, lsr r3
    f8f0:	19020803 	stmdbne	r2, {r0, r1, fp}
    f8f4:	00000151 	andeq	r0, r0, r1, asr r1
    f8f8:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
    f8fc:	000002ec 	andeq	r0, r0, ip, ror #5
    f900:	1b020e03 	blne	93114 <SYSTICK_CYCLES+0x6a0d5>
    f904:	0000048f 	andeq	r0, r0, pc, lsl #9
    f908:	08682302 	stmdaeq	r8!, {r1, r8, r9, sp}^
    f90c:	000005ce 	andeq	r0, r0, lr, asr #11
    f910:	1a020f03 	bne	93524 <SYSTICK_CYCLES+0x6a4e5>
    f914:	00000076 	andeq	r0, r0, r6, ror r0
    f918:	086c2302 	stmdaeq	ip!, {r1, r8, r9, sp}^
    f91c:	00000717 	andeq	r0, r0, r7, lsl r7
    f920:	1a021103 	bne	93d34 <SYSTICK_CYCLES+0x6acf5>
    f924:	00000478 	andeq	r0, r0, r8, ror r4
    f928:	08702302 	ldmdaeq	r0!, {r1, r8, r9, sp}^
    f92c:	00000212 	andeq	r0, r0, r2, lsl r2
    f930:	1a021203 	bne	94144 <SYSTICK_CYCLES+0x6b105>
    f934:	00000478 	andeq	r0, r0, r8, ror r4
    f938:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
    f93c:	000006fa 	strdeq	r0, [r0], -sl
    f940:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    f944:	000000a3 	andeq	r0, r0, r3, lsr #1
    f948:	08782302 	ldmdaeq	r8!, {r1, r8, r9, sp}^
    f94c:	000003c6 	andeq	r0, r0, r6, asr #7
    f950:	1a021403 	bne	94964 <SYSTICK_CYCLES+0x6b925>
    f954:	00000076 	andeq	r0, r0, r6, ror r0
    f958:	087c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}^
    f95c:	00000554 	andeq	r0, r0, r4, asr r5
    f960:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    f964:	00000097 	muleq	r0, r7, r0
    f968:	01802303 	orreq	r2, r0, r3, lsl #6
    f96c:	0003e808 	andeq	lr, r3, r8, lsl #16
    f970:	02160300 	andseq	r0, r6, #0, 6
    f974:	00009719 	andeq	r9, r0, r9, lsl r7
    f978:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    f97c:	08e40801 	stmiaeq	r4!, {r0, fp}^
    f980:	1f030000 	svcne	0x00030000
    f984:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    f988:	23030000 	movwcs	r0, #12288	; 0x3000
    f98c:	d5080188 	strle	r0, [r8, #-392]	; 0xfffffe78
    f990:	03000007 	movweq	r0, #7
    f994:	781a0220 	ldmdavc	sl, {r5, r9}
    f998:	03000004 	movweq	r0, #4
    f99c:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
    f9a0:	000002c1 	andeq	r0, r0, r1, asr #5
    f9a4:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    f9a8:	00000097 	muleq	r0, r7, r0
    f9ac:	01902303 	orrseq	r2, r0, r3, lsl #6
    f9b0:	00025608 	andeq	r5, r2, r8, lsl #12
    f9b4:	022f0300 	eoreq	r0, pc, #0, 6
    f9b8:	00009719 	andeq	r9, r0, r9, lsl r7
    f9bc:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    f9c0:	03200801 			; <UNDEFINED> instruction: 0x03200801
    f9c4:	30030000 	andcc	r0, r3, r0
    f9c8:	00971902 	addseq	r1, r7, r2, lsl #18
    f9cc:	23030000 	movwcs	r0, #12288	; 0x3000
    f9d0:	77080198 			; <UNDEFINED> instruction: 0x77080198
    f9d4:	03000002 	movweq	r0, #2
    f9d8:	97190233 			; <UNDEFINED> instruction: 0x97190233
    f9dc:	03000000 	movweq	r0, #0
    f9e0:	08019c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, ip, pc}
    f9e4:	00000000 	andeq	r0, r0, r0
    f9e8:	1a023503 	bne	9cdfc <SYSTICK_CYCLES+0x73dbd>
    f9ec:	00000574 	andeq	r0, r0, r4, ror r5
    f9f0:	01a02303 	lsleq	r2, r3, #6
    f9f4:	001bb708 	andseq	fp, fp, r8, lsl #14
    f9f8:	023a0300 	eorseq	r0, sl, #0, 6
    f9fc:	0000a319 	andeq	sl, r0, r9, lsl r3
    fa00:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    fa04:	1c770801 	ldclne	8, cr0, [r7], #-4
    fa08:	3d030000 	stccc	0, cr0, [r3, #-0]
    fa0c:	00a31902 	adceq	r1, r3, r2, lsl #18
    fa10:	23030000 	movwcs	r0, #12288	; 0x3000
    fa14:	300801a8 	andcc	r0, r8, r8, lsr #3
    fa18:	0300001b 	movweq	r0, #27
    fa1c:	a3190241 	tstge	r9, #268435460	; 0x10000004
    fa20:	03000000 	movweq	r0, #0
    fa24:	0801ac23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, pc}
    fa28:	00001d2e 	andeq	r1, r0, lr, lsr #26
    fa2c:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    fa30:	000000a3 	andeq	r0, r0, r3, lsr #1
    fa34:	01b02303 	lslseq	r2, r3, #6
    fa38:	001c4708 	andseq	r4, ip, r8, lsl #14
    fa3c:	02480300 	subeq	r0, r8, #0, 6
    fa40:	0000a319 	andeq	sl, r0, r9, lsl r3
    fa44:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    fa48:	07a80801 	streq	r0, [r8, r1, lsl #16]!
    fa4c:	4c030000 	stcmi	0, cr0, [r3], {-0}
    fa50:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    fa54:	23030000 	movwcs	r0, #12288	; 0x3000
    fa58:	060801b8 			; <UNDEFINED> instruction: 0x060801b8
    fa5c:	0300001d 	movweq	r0, #29
    fa60:	a319024f 	tstge	r9, #-268435452	; 0xf0000004
    fa64:	03000000 	movweq	r0, #0
    fa68:	0801bc23 	stmdaeq	r1, {r0, r1, r5, sl, fp, ip, sp, pc}
    fa6c:	00001b08 	andeq	r1, r0, r8, lsl #22
    fa70:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    fa74:	000000a3 	andeq	r0, r0, r3, lsr #1
    fa78:	01c02303 	biceq	r2, r0, r3, lsl #6
    fa7c:	001a8508 	andseq	r8, sl, r8, lsl #10
    fa80:	02550300 	subseq	r0, r5, #0, 6
    fa84:	0000a319 	andeq	sl, r0, r9, lsl r3
    fa88:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    fa8c:	1bdb0801 	blne	ff6d1a98 <__RAM_segment_used_end__+0xc75d1a98>
    fa90:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    fa94:	00a31902 	adceq	r1, r3, r2, lsl #18
    fa98:	23030000 	movwcs	r0, #12288	; 0x3000
    fa9c:	a90801c8 	stmdbge	r8, {r3, r6, r7, r8}
    faa0:	03000009 	movweq	r0, #9
    faa4:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    faa8:	03000000 	movweq	r0, #0
    faac:	0801cc23 	stmdaeq	r1, {r0, r1, r5, sl, fp, lr, pc}
    fab0:	00000481 	andeq	r0, r0, r1, lsl #9
    fab4:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    fab8:	000000a3 	andeq	r0, r0, r3, lsr #1
    fabc:	01d02303 	bicseq	r2, r0, r3, lsl #6
    fac0:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
    fac4:	09000001 	stmdbeq	r0, {r0}
    fac8:	00048f01 	andeq	r8, r4, r1, lsl #30
    facc:	04780a00 	ldrbteq	r0, [r8], #-2560	; 0xfffff600
    fad0:	a30a0000 	movwge	r0, #40960	; 0xa000
    fad4:	00000000 	andeq	r0, r0, r0
    fad8:	047e040b 	ldrbteq	r0, [lr], #-1035	; 0xfffffbf5
    fadc:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    fae0:	34000007 	strcc	r0, [r0], #-7
    fae4:	10037e03 	andne	r7, r3, r3, lsl #28
    fae8:	00000574 	andeq	r0, r0, r4, ror r5
    faec:	00018d08 	andeq	r8, r1, r8, lsl #26
    faf0:	03820300 	orreq	r0, r2, #0, 6
    faf4:	0000a319 	andeq	sl, r0, r9, lsl r3
    faf8:	00230200 	eoreq	r0, r3, r0, lsl #4
    fafc:	00087c08 	andeq	r7, r8, r8, lsl #24
    fb00:	03850300 	orreq	r0, r5, #0, 6
    fb04:	00015e1a 	andeq	r5, r1, sl, lsl lr
    fb08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    fb0c:	0006e108 	andeq	lr, r6, r8, lsl #2
    fb10:	03880300 	orreq	r0, r8, #0, 6
    fb14:	00009719 	andeq	r9, r0, r9, lsl r7
    fb18:	08230200 	stmdaeq	r3!, {r9}
    fb1c:	0004cb08 	andeq	ip, r4, r8, lsl #22
    fb20:	038c0300 	orreq	r0, ip, #0, 6
    fb24:	00067f1a 	andeq	r7, r6, sl, lsl pc
    fb28:	0c230200 	sfmeq	f0, 4, [r3], #-0
    fb2c:	00016208 	andeq	r6, r1, r8, lsl #4
    fb30:	03900300 	orrseq	r0, r0, #0, 6
    fb34:	00009719 	andeq	r9, r0, r9, lsl r7
    fb38:	10230200 	eorne	r0, r3, r0, lsl #4
    fb3c:	00012108 	andeq	r2, r1, r8, lsl #2
    fb40:	03930300 	orrseq	r0, r3, #0, 6
    fb44:	00009719 	andeq	r9, r0, r9, lsl r7
    fb48:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    fb4c:	0008b208 	andeq	fp, r8, r8, lsl #4
    fb50:	03980300 	orrseq	r0, r8, #0, 6
    fb54:	0004781a 	andeq	r7, r4, sl, lsl r8
    fb58:	18230200 	stmdane	r3!, {r9}
    fb5c:	0006c808 	andeq	ip, r6, r8, lsl #16
    fb60:	03990300 	orrseq	r0, r9, #0, 6
    fb64:	00009719 	andeq	r9, r0, r9, lsl r7
    fb68:	1c230200 	sfmne	f0, 4, [r3], #-0
    fb6c:	0005b808 	andeq	fp, r5, r8, lsl #16
    fb70:	039d0300 	orrseq	r0, sp, #0, 6
    fb74:	0005741a 	andeq	r7, r5, sl, lsl r4
    fb78:	20230200 	eorcs	r0, r3, r0, lsl #4
    fb7c:	00068508 	andeq	r8, r6, r8, lsl #10
    fb80:	039e0300 	orrseq	r0, lr, #0, 6
    fb84:	0005741a 	andeq	r7, r5, sl, lsl r4
    fb88:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    fb8c:	0001d008 	andeq	sp, r1, r8
    fb90:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    fb94:	00009719 	andeq	r9, r0, r9, lsl r7
    fb98:	28230200 	stmdacs	r3!, {r9}
    fb9c:	0009c508 	andeq	ip, r9, r8, lsl #10
    fba0:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    fba4:	0005741a 	andeq	r7, r5, sl, lsl r4
    fba8:	2c230200 	sfmcs	f0, 4, [r3], #-0
    fbac:	00042508 	andeq	r2, r4, r8, lsl #10
    fbb0:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    fbb4:	0005741a 	andeq	r7, r5, sl, lsl r4
    fbb8:	30230200 	eorcc	r0, r3, r0, lsl #4
    fbbc:	95040b00 	strls	r0, [r4, #-2816]	; 0xfffff500
    fbc0:	0c000004 	stceq	0, cr0, [r0], {4}
    fbc4:	000008d4 	ldrdeq	r0, [r0], -r4
    fbc8:	03028603 	movweq	r8, #9731	; 0x2603
    fbcc:	00000164 	andeq	r0, r0, r4, ror #2
    fbd0:	008b040b 	addeq	r0, fp, fp, lsl #8
    fbd4:	60070000 	andvs	r0, r7, r0
    fbd8:	34000004 	strcc	r0, [r0], #-4
    fbdc:	1002d903 	andne	sp, r2, r3, lsl #18
    fbe0:	0000066c 	andeq	r0, r0, ip, ror #12
    fbe4:	00040108 	andeq	r0, r4, r8, lsl #2
    fbe8:	02dd0300 	sbcseq	r0, sp, #0, 6
    fbec:	0000a319 	andeq	sl, r0, r9, lsl r3
    fbf0:	00230200 	eoreq	r0, r3, r0, lsl #4
    fbf4:	00037408 	andeq	r7, r3, r8, lsl #8
    fbf8:	02e00300 	rsceq	r0, r0, #0, 6
    fbfc:	00015e1a 	andeq	r5, r1, sl, lsl lr
    fc00:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    fc04:	00075508 	andeq	r5, r7, r8, lsl #10
    fc08:	02e30300 	rsceq	r0, r3, #0, 6
    fc0c:	0000a319 	andeq	sl, r0, r9, lsl r3
    fc10:	08230200 	stmdaeq	r3!, {r9}
    fc14:	00089b08 	andeq	r9, r8, r8, lsl #22
    fc18:	02e60300 	rsceq	r0, r6, #0, 6
    fc1c:	00009719 	andeq	r9, r0, r9, lsl r7
    fc20:	0c230200 	sfmeq	f0, 4, [r3], #-0
    fc24:	0007f008 	andeq	pc, r7, r8
    fc28:	02e90300 	rsceq	r0, r9, #0, 6
    fc2c:	0005871a 	andeq	r8, r5, sl, lsl r7
    fc30:	10230200 	eorne	r0, r3, r0, lsl #4
    fc34:	00110708 	andseq	r0, r1, r8, lsl #14
    fc38:	02ed0300 	rsceq	r0, sp, #0, 6
    fc3c:	0005871a 	andeq	r8, r5, sl, lsl r7
    fc40:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    fc44:	00052808 	andeq	r2, r5, r8, lsl #16
    fc48:	02f00300 	rscseq	r0, r0, #0, 6
    fc4c:	0005871a 	andeq	r8, r5, sl, lsl r7
    fc50:	18230200 	stmdane	r3!, {r9}
    fc54:	00030608 	andeq	r0, r3, r8, lsl #12
    fc58:	02f30300 	rscseq	r0, r3, #0, 6
    fc5c:	0000a319 	andeq	sl, r0, r9, lsl r3
    fc60:	1c230200 	sfmne	f0, 4, [r3], #-0
    fc64:	00097208 	andeq	r7, r9, r8, lsl #4
    fc68:	02f90300 	rscseq	r0, r9, #0, 6
    fc6c:	0004781a 	andeq	r7, r4, sl, lsl r8
    fc70:	20230200 	eorcs	r0, r3, r0, lsl #4
    fc74:	0004ae08 	andeq	sl, r4, r8, lsl #28
    fc78:	02fe0300 	rscseq	r0, lr, #0, 6
    fc7c:	0004781a 	andeq	r7, r4, sl, lsl r8
    fc80:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    fc84:	00050b08 	andeq	r0, r5, r8, lsl #22
    fc88:	02ff0300 	rscseq	r0, pc, #0, 6
    fc8c:	00009719 	andeq	r9, r0, r9, lsl r7
    fc90:	28230200 	stmdacs	r3!, {r9}
    fc94:	0002a708 	andeq	sl, r2, r8, lsl #14
    fc98:	03030300 	movweq	r0, #13056	; 0x3300
    fc9c:	00066c1a 	andeq	r6, r6, sl, lsl ip
    fca0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    fca4:	00085e08 	andeq	r5, r8, r8, lsl #28
    fca8:	03040300 	movweq	r0, #17152	; 0x4300
    fcac:	00066c1a 	andeq	r6, r6, sl, lsl ip
    fcb0:	30230200 	eorcc	r0, r3, r0, lsl #4
    fcb4:	8d040b00 	vstrhi	d0, [r4, #-0]
    fcb8:	0c000005 	stceq	0, cr0, [r0], {5}
    fcbc:	00000474 	andeq	r0, r0, r4, ror r4
    fcc0:	03032303 	movweq	r2, #13059	; 0x3303
    fcc4:	0000058d 	andeq	r0, r0, sp, lsl #11
    fcc8:	057a040b 	ldrbeq	r0, [sl, #-1035]!	; 0xfffffbf5
    fccc:	1b0d0000 	blne	34fcd4 <__RAM_SIZE+0x24fcd4>
    fcd0:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    fcd4:	7f210139 	svcvc	0x00210139
    fcd8:	01000006 	tsteq	r0, r6
    fcdc:	18e80d01 	stmiane	r8!, {r0, r8, sl, fp}^
    fce0:	53040000 	movwpl	r0, #16384	; 0x4000
    fce4:	00af2101 	adceq	r2, pc, r1, lsl #2
    fce8:	01010000 	mrseq	r0, (UNDEF: 1)
    fcec:	001e8a0e 	andseq	r8, lr, lr, lsl #20
    fcf0:	218f0500 	orrcs	r0, pc, r0, lsl #10
    fcf4:	0000057a 	andeq	r0, r0, sl, ror r5
    fcf8:	040b0101 	streq	r0, [fp], #-257	; 0xfffffeff
    fcfc:	00000672 	andeq	r0, r0, r2, ror r6
    fd00:	076c010f 	strbeq	r0, [ip, -pc, lsl #2]!
    fd04:	52010000 	andpl	r0, r1, #0
    fd08:	00970107 	addseq	r0, r7, r7, lsl #2
    fd0c:	2be80000 	blcs	ffa0fd14 <__RAM_segment_used_end__+0xc790fd14>
    fd10:	2c7c1000 	ldclcs	0, cr1, [ip], #-0
    fd14:	563d1000 	ldrtpl	r1, [sp], -r0
    fd18:	d5010000 	strle	r0, [r1, #-0]
    fd1c:	10000007 	andne	r0, r0, r7
    fd20:	00000ef1 	strdeq	r0, [r0], -r1
    fd24:	b1285201 			; <UNDEFINED> instruction: 0xb1285201
    fd28:	6d000006 	stcvs	0, cr0, [r0, #-24]	; 0xffffffe8
    fd2c:	5d000056 	stcpl	0, cr0, [r0, #-344]	; 0xfffffea8
    fd30:	10000056 	andne	r0, r0, r6, asr r0
    fd34:	000010e6 	andeq	r1, r0, r6, ror #1
    fd38:	d5395201 	ldrle	r5, [r9, #-513]!	; 0xfffffdff
    fd3c:	dd000007 	stcle	0, cr0, [r0, #-28]	; 0xffffffe4
    fd40:	d3000056 	movwle	r0, #86	; 0x56
    fd44:	10000056 	andne	r0, r0, r6, asr r0
    fd48:	000010da 	ldrdeq	r1, [r0], -sl
    fd4c:	a32b5301 			; <UNDEFINED> instruction: 0xa32b5301
    fd50:	2c000000 	stccs	0, cr0, [r0], {-0}
    fd54:	22000057 	andcs	r0, r0, #87	; 0x57
    fd58:	10000057 	andne	r0, r0, r7, asr r0
    fd5c:	000010fa 	strdeq	r1, [r0], -sl
    fd60:	a33f5301 	teqge	pc, #67108864	; 0x4000000
    fd64:	7b000000 	blvc	fd6c <_Min_Stack_Size+0xed6c>
    fd68:	71000057 	qaddvc	r0, r7, r0
    fd6c:	11000057 	qaddne	r0, r7, r0
    fd70:	000003fa 	strdeq	r0, [r0], -sl
    fd74:	97115601 	ldrls	r5, [r1, -r1, lsl #12]
    fd78:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    fd7c:	c0000057 	andgt	r0, r0, r7, asr r0
    fd80:	11000057 	qaddne	r0, r7, r0
    fd84:	000019cf 	andeq	r1, r0, pc, asr #19
    fd88:	7f125801 	svcvc	0x00125801
    fd8c:	2b000006 	blcs	fdac <_Min_Stack_Size+0xedac>
    fd90:	27000058 	smlsdcs	r0, r8, r0, r0
    fd94:	12000058 	andne	r0, r0, #88	; 0x58
    fd98:	000007db 	ldrdeq	r0, [r0], -fp
    fd9c:	10002bfc 	strdne	r2, [r0], -ip
    fda0:	002bfc01 	eoreq	pc, fp, r1, lsl #24
    fda4:	002c0010 	eoreq	r0, ip, r0, lsl r0
    fda8:	0db00110 	ldfeqs	f0, [r0, #64]!	; 0x40
    fdac:	00000775 	andeq	r0, r0, r5, ror r7
    fdb0:	0007ee13 	andeq	lr, r7, r3, lsl lr
    fdb4:	00584b00 	subseq	r4, r8, r0, lsl #22
    fdb8:	00584900 	subseq	r4, r8, r0, lsl #18
    fdbc:	db120000 	blle	48fdc4 <__RAM_SIZE+0x38fdc4>
    fdc0:	0a000007 	beq	fde4 <_Min_Stack_Size+0xede4>
    fdc4:	0110002c 	tsteq	r0, ip, lsr #32
    fdc8:	10002c0a 	andne	r2, r0, sl, lsl #24
    fdcc:	10002c0e 	andne	r2, r0, lr, lsl #24
    fdd0:	9c11b401 	cfldrsls	mvf11, [r1], {1}
    fdd4:	13000007 	movwne	r0, #7
    fdd8:	000007ee 	andeq	r0, r0, lr, ror #15
    fddc:	00005860 	andeq	r5, r0, r0, ror #16
    fde0:	0000585e 	andeq	r5, r0, lr, asr r8
    fde4:	07db1200 	ldrbeq	r1, [fp, r0, lsl #4]
    fde8:	2c2e0000 	stccs	0, cr0, [lr], #-0
    fdec:	2e011000 	cdpcs	0, 0, cr1, cr1, cr0, {0}
    fdf0:	3210002c 	andscc	r0, r0, #44	; 0x2c
    fdf4:	0110002c 	tsteq	r0, ip, lsr #32
    fdf8:	07c31190 	bfieq	r1, r0, #3, #1
    fdfc:	ee130000 	cdp	0, 1, cr0, cr3, cr0, {0}
    fe00:	75000007 	strvc	r0, [r0, #-7]
    fe04:	73000058 	movwvc	r0, #88	; 0x58
    fe08:	00000058 	andeq	r0, r0, r8, asr r0
    fe0c:	002c6614 	eoreq	r6, ip, r4, lsl r6
    fe10:	0007fc10 	andeq	pc, r7, r0, lsl ip	; <UNPREDICTABLE>
    fe14:	50011500 	andpl	r1, r1, r0, lsl #10
    fe18:	5001f303 	andpl	pc, r1, r3, lsl #6
    fe1c:	040b0000 	streq	r0, [fp], #-0
    fe20:	00000076 	andeq	r0, r0, r6, ror r0
    fe24:	00196e16 	andseq	r6, r9, r6, lsl lr
    fe28:	01fa0200 	mvnseq	r0, r0, lsl #4
    fe2c:	00970137 	addseq	r0, r7, r7, lsr r1
    fe30:	fc030000 	stc2	0, cr0, [r3], {-0}
    fe34:	17000007 	strne	r0, [r0, -r7]
    fe38:	00001a79 	andeq	r1, r0, r9, ror sl
    fe3c:	0601fc02 	streq	pc, [r1], -r2, lsl #24
    fe40:	00000097 	muleq	r0, r7, r0
    fe44:	01011800 	tsteq	r1, r0, lsl #16
    fe48:	0000114d 	andeq	r1, r0, sp, asr #2
    fe4c:	0000114d 	andeq	r1, r0, sp, asr #2
    fe50:	0d05f103 	stfeqd	f7, [r5, #-12]
    fe54:	0009c500 	andeq	ip, r9, r0, lsl #10
    fe58:	5b000200 	blpl	10660 <_Min_Stack_Size+0xf660>
    fe5c:	0400002d 	streq	r0, [r0], #-45	; 0xffffffd3
    fe60:	00003d01 	andeq	r3, r0, r1, lsl #26
    fe64:	27080c00 	strcs	r0, [r8, -r0, lsl #24]
    fe68:	06410000 	strbeq	r0, [r1], -r0
    fe6c:	04c00000 	strbeq	r0, [r0], #0
	...
    fe78:	59600000 	stmdbpl	r0!, {}^	; <UNPREDICTABLE>
    fe7c:	04020000 	streq	r0, [r2], #-0
    fe80:	00023907 	andeq	r3, r2, r7, lsl #18
    fe84:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    fe88:	00746e69 	rsbseq	r6, r4, r9, ror #28
    fe8c:	e8050802 	stmda	r5, {r1, fp}
    fe90:	02000004 	andeq	r0, r0, #4
    fe94:	06230408 	strteq	r0, [r3], -r8, lsl #8
    fe98:	01020000 	mrseq	r0, (UNDEF: 2)
    fe9c:	00085206 	andeq	r5, r8, r6, lsl #4
    fea0:	08010200 	stmdaeq	r1, {r9}
    fea4:	00000850 	andeq	r0, r0, r0, asr r8
    fea8:	b4050202 	strlt	r0, [r5], #-514	; 0xfffffdfe
    feac:	02000006 	andeq	r0, r0, #6
    feb0:	091e0702 	ldmdbeq	lr, {r1, r8, r9, sl}
    feb4:	04020000 	streq	r0, [r2], #-0
    feb8:	0004ed05 	andeq	lr, r4, r5, lsl #26
    febc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    fec0:	00000234 	andeq	r0, r0, r4, lsr r2
    fec4:	2f070802 	svccs	0x00070802
    fec8:	04000002 	streq	r0, [r0], #-2
    fecc:	08010204 	stmdaeq	r1, {r2, r9}
    fed0:	00000859 	andeq	r0, r0, r9, asr r8
    fed4:	0008df05 	andeq	sp, r8, r5, lsl #30
    fed8:	31730200 	cmncc	r3, r0, lsl #4
    fedc:	00000078 	andeq	r0, r0, r8, ror r0
    fee0:	0008de05 	andeq	sp, r8, r5, lsl #28
    fee4:	31740200 	cmncc	r4, r0, lsl #4
    fee8:	0000004c 	andeq	r0, r0, ip, asr #32
    feec:	00077f05 	andeq	r7, r7, r5, lsl #30
    fef0:	31760200 	cmncc	r6, r0, lsl #4
    fef4:	00000029 	andeq	r0, r0, r9, lsr #32
    fef8:	00009706 	andeq	r9, r0, r6, lsl #14
    fefc:	07110500 	ldreq	r0, [r1, -r0, lsl #10]
    ff00:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    ff04:	00006831 	andeq	r6, r0, r1, lsr r8
    ff08:	00a80600 	adceq	r0, r8, r0, lsl #12
    ff0c:	3b070000 	blcc	1cff14 <__RAM_SIZE+0xcff14>
    ff10:	1c000005 	stcne	0, cr0, [r0], {5}
    ff14:	10018203 	andne	r8, r1, r3, lsl #4
    ff18:	00000138 	andeq	r0, r0, r8, lsr r1
    ff1c:	00081208 	andeq	r1, r8, r8, lsl #4
    ff20:	01860300 	orreq	r0, r6, r0, lsl #6
    ff24:	0000a819 	andeq	sl, r0, r9, lsl r8
    ff28:	00230200 	eoreq	r0, r3, r0, lsl #4
    ff2c:	0003a008 	andeq	sl, r3, r8
    ff30:	01870300 	orreq	r0, r7, r0, lsl #6
    ff34:	0000a819 	andeq	sl, r0, r9, lsl r8
    ff38:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    ff3c:	00043d08 	andeq	r3, r4, r8, lsl #26
    ff40:	018a0300 	orreq	r0, sl, r0, lsl #6
    ff44:	0001441b 	andeq	r4, r1, fp, lsl r4
    ff48:	08230200 	stmdaeq	r3!, {r9}
    ff4c:	0001f208 	andeq	pc, r1, r8, lsl #4
    ff50:	018b0300 	orreq	r0, fp, r0, lsl #6
    ff54:	0000a819 	andeq	sl, r0, r9, lsl r8
    ff58:	0c230200 	sfmeq	f0, 4, [r3], #-0
    ff5c:	00095408 	andeq	r5, r9, r8, lsl #8
    ff60:	01910300 	orrseq	r0, r1, r0, lsl #6
    ff64:	00014a1a 	andeq	r4, r1, sl, lsl sl
    ff68:	10230200 	eorne	r0, r3, r0, lsl #4
    ff6c:	00001b08 	andeq	r1, r0, r8, lsl #22
    ff70:	01920300 	orrseq	r0, r2, r0, lsl #6
    ff74:	00014a1a 	andeq	r4, r1, sl, lsl sl
    ff78:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    ff7c:	0005ee08 	andeq	lr, r5, r8, lsl #28
    ff80:	01960300 	orrseq	r0, r6, r0, lsl #6
    ff84:	0001501b 	andeq	r5, r1, fp, lsl r0
    ff88:	18230200 	stmdane	r3!, {r9}
    ff8c:	44010900 	strmi	r0, [r1], #-2304	; 0xfffff700
    ff90:	0a000001 	beq	ff9c <_Min_Stack_Size+0xef9c>
    ff94:	000000a8 	andeq	r0, r0, r8, lsr #1
    ff98:	38040b00 	stmdacc	r4, {r8, r9, fp}
    ff9c:	0b000001 	bleq	ffa8 <_Min_Stack_Size+0xefa8>
    ffa0:	0000b904 	andeq	fp, r0, r4, lsl #18
    ffa4:	4a040b00 	bmi	112bac <__RAM_SIZE+0x12bac>
    ffa8:	0c000001 	stceq	0, cr0, [r0], {1}
    ffac:	0000062f 	andeq	r0, r0, pc, lsr #12
    ffb0:	03019b03 	movweq	r9, #6915	; 0x1b03
    ffb4:	000000b9 	strheq	r0, [r0], -r9
    ffb8:	007f040b 	rsbseq	r0, pc, fp, lsl #8
    ffbc:	4b070000 	blmi	1cffc4 <__RAM_SIZE+0xcffc4>
    ffc0:	d4000003 	strle	r0, [r0], #-3
    ffc4:	1001d603 	andne	sp, r1, r3, lsl #12
    ffc8:	0000047d 	andeq	r0, r0, sp, ror r4
    ffcc:	00091108 	andeq	r1, r9, r8, lsl #2
    ffd0:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    ffd4:	0000a819 	andeq	sl, r0, r9, lsl r8
    ffd8:	00230200 	eoreq	r0, r3, r0, lsl #4
    ffdc:	00078408 	andeq	r8, r7, r8, lsl #8
    ffe0:	01de0300 	bicseq	r0, lr, r0, lsl #6
    ffe4:	0000a819 	andeq	sl, r0, r9, lsl r8
    ffe8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    ffec:	0001bc08 	andeq	fp, r1, r8, lsl #24
    fff0:	01df0300 	bicseq	r0, pc, r0, lsl #6
    fff4:	0000761a 	andeq	r7, r0, sl, lsl r6
    fff8:	08230200 	stmdaeq	r3!, {r9}
    fffc:	0008fb08 	andeq	pc, r8, r8, lsl #22
   10000:	01e00300 	mvneq	r0, r0, lsl #6
   10004:	0000761a 	andeq	r7, r0, sl, lsl r6
   10008:	0c230200 	sfmeq	f0, 4, [r3], #-0
   1000c:	00041108 	andeq	r1, r4, r8, lsl #2
   10010:	01e10300 	mvneq	r0, r0, lsl #6
   10014:	0000761a 	andeq	r7, r0, sl, lsl r6
   10018:	10230200 	eorne	r0, r3, r0, lsl #4
   1001c:	00093f08 	andeq	r3, r9, r8, lsl #30
   10020:	01e20300 	mvneq	r0, r0, lsl #6
   10024:	0000a819 	andeq	sl, r0, r9, lsl r8
   10028:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
   1002c:	0021d108 	eoreq	sp, r1, r8, lsl #2
   10030:	01e30300 	mvneq	r0, r0, lsl #6
   10034:	0000a819 	andeq	sl, r0, r9, lsl r8
   10038:	18230200 	stmdane	r3!, {r9}
   1003c:	00060a08 	andeq	r0, r6, r8, lsl #20
   10040:	01e40300 	mvneq	r0, r0, lsl #6
   10044:	0000a819 	andeq	sl, r0, r9, lsl r8
   10048:	1c230200 	sfmne	f0, 4, [r3], #-0
   1004c:	00069f08 	andeq	r9, r6, r8, lsl #30
   10050:	01e80300 	mvneq	r0, r0, lsl #6
   10054:	00047d1a 	andeq	r7, r4, sl, lsl sp
   10058:	20230200 	eorcs	r0, r3, r0, lsl #4
   1005c:	00019908 	andeq	r9, r1, r8, lsl #18
   10060:	01e90300 	mvneq	r0, r0, lsl #6
   10064:	00047d1a 	andeq	r7, r4, sl, lsl sp
   10068:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
   1006c:	00059608 	andeq	r9, r5, r8, lsl #12
   10070:	01f10300 	mvnseq	r0, r0, lsl #6
   10074:	0001631a 	andeq	r6, r1, sl, lsl r3
   10078:	28230200 	stmdacs	r3!, {r9}
   1007c:	0002d908 	andeq	sp, r2, r8, lsl #18
   10080:	01f20300 	mvnseq	r0, r0, lsl #6
   10084:	00009719 	andeq	r9, r0, r9, lsl r7
   10088:	2c230200 	sfmcs	f0, 4, [r3], #-0
   1008c:	00024608 	andeq	r4, r2, r8, lsl #12
   10090:	01f30300 	mvnseq	r0, r0, lsl #6
   10094:	00009719 	andeq	r9, r0, r9, lsl r7
   10098:	30230200 	eorcc	r0, r3, r0, lsl #4
   1009c:	00017308 	andeq	r7, r1, r8, lsl #6
   100a0:	01f40300 	mvnseq	r0, r0, lsl #6
   100a4:	00009719 	andeq	r9, r0, r9, lsl r7
   100a8:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
   100ac:	00073008 	andeq	r3, r7, r8
   100b0:	01f50300 	mvnseq	r0, r0, lsl #6
   100b4:	00009719 	andeq	r9, r0, r9, lsl r7
   100b8:	38230200 	stmdacc	r3!, {r9}
   100bc:	0000eb08 	andeq	lr, r0, r8, lsl #22
   100c0:	01f60300 	mvnseq	r0, r0, lsl #6
   100c4:	00009719 	andeq	r9, r0, r9, lsl r7
   100c8:	3c230200 	sfmcc	f0, 4, [r3], #-0
   100cc:	00035c08 	andeq	r5, r3, r8, lsl #24
   100d0:	01fb0300 	mvnseq	r0, r0, lsl #6
   100d4:	0004941b 	andeq	r9, r4, fp, lsl r4
   100d8:	40230200 	eormi	r0, r3, r0, lsl #4
   100dc:	00015208 	andeq	r5, r1, r8, lsl #4
   100e0:	02030300 	andeq	r0, r3, #0, 6
   100e4:	0001441b 	andeq	r4, r1, fp, lsl r4
   100e8:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
   100ec:	00010708 	andeq	r0, r1, r8, lsl #14
   100f0:	02040300 	andeq	r0, r4, #0, 6
   100f4:	0000a819 	andeq	sl, r0, r9, lsl r8
   100f8:	48230200 	stmdami	r3!, {r9}
   100fc:	00033b08 	andeq	r3, r3, r8, lsl #22
   10100:	02080300 	andeq	r0, r8, #0, 6
   10104:	00015619 	andeq	r5, r1, r9, lsl r6
   10108:	4c230200 	sfmmi	f0, 4, [r3], #-0
   1010c:	0002ec08 	andeq	lr, r2, r8, lsl #24
   10110:	020e0300 	andeq	r0, lr, #0, 6
   10114:	0004941b 	andeq	r9, r4, fp, lsl r4
   10118:	68230200 	stmdavs	r3!, {r9}
   1011c:	0005ce08 	andeq	ip, r5, r8, lsl #28
   10120:	020f0300 	andeq	r0, pc, #0, 6
   10124:	0000761a 	andeq	r7, r0, sl, lsl r6
   10128:	6c230200 	sfmvs	f0, 4, [r3], #-0
   1012c:	00071708 	andeq	r1, r7, r8, lsl #14
   10130:	02110300 	andseq	r0, r1, #0, 6
   10134:	00047d1a 	andeq	r7, r4, sl, lsl sp
   10138:	70230200 	eorvc	r0, r3, r0, lsl #4
   1013c:	00021208 	andeq	r1, r2, r8, lsl #4
   10140:	02120300 	andseq	r0, r2, #0, 6
   10144:	00047d1a 	andeq	r7, r4, sl, lsl sp
   10148:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
   1014c:	0006fa08 	andeq	pc, r6, r8, lsl #20
   10150:	02130300 	andseq	r0, r3, #0, 6
   10154:	0000a819 	andeq	sl, r0, r9, lsl r8
   10158:	78230200 	stmdavc	r3!, {r9}
   1015c:	0003c608 	andeq	ip, r3, r8, lsl #12
   10160:	02140300 	andseq	r0, r4, #0, 6
   10164:	0000761a 	andeq	r7, r0, sl, lsl r6
   10168:	7c230200 	sfmvc	f0, 4, [r3], #-0
   1016c:	00055408 	andeq	r5, r5, r8, lsl #8
   10170:	02150300 	andseq	r0, r5, #0, 6
   10174:	00009719 	andeq	r9, r0, r9, lsl r7
   10178:	80230300 	eorhi	r0, r3, r0, lsl #6
   1017c:	03e80801 	mvneq	r0, #65536	; 0x10000
   10180:	16030000 	strne	r0, [r3], -r0
   10184:	00971902 	addseq	r1, r7, r2, lsl #18
   10188:	23030000 	movwcs	r0, #12288	; 0x3000
   1018c:	e4080184 	str	r0, [r8], #-388	; 0xfffffe7c
   10190:	03000008 	movweq	r0, #8
   10194:	7d1a021f 	lfmvc	f0, 4, [sl, #-124]	; 0xffffff84
   10198:	03000004 	movweq	r0, #4
   1019c:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
   101a0:	000007d5 	ldrdeq	r0, [r0], -r5
   101a4:	1a022003 	bne	981b8 <SYSTICK_CYCLES+0x6f179>
   101a8:	0000047d 	andeq	r0, r0, sp, ror r4
   101ac:	018c2303 	orreq	r2, ip, r3, lsl #6
   101b0:	0002c108 	andeq	ip, r2, r8, lsl #2
   101b4:	022e0300 	eoreq	r0, lr, #0, 6
   101b8:	00009719 	andeq	r9, r0, r9, lsl r7
   101bc:	90230300 	eorls	r0, r3, r0, lsl #6
   101c0:	02560801 	subseq	r0, r6, #65536	; 0x10000
   101c4:	2f030000 	svccs	0x00030000
   101c8:	00971902 	addseq	r1, r7, r2, lsl #18
   101cc:	23030000 	movwcs	r0, #12288	; 0x3000
   101d0:	20080194 	mulcs	r8, r4, r1
   101d4:	03000003 	movweq	r0, #3
   101d8:	97190230 			; <UNDEFINED> instruction: 0x97190230
   101dc:	03000000 	movweq	r0, #0
   101e0:	08019823 	stmdaeq	r1, {r0, r1, r5, fp, ip, pc}
   101e4:	00000277 	andeq	r0, r0, r7, ror r2
   101e8:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
   101ec:	00000097 	muleq	r0, r7, r0
   101f0:	019c2303 	orrseq	r2, ip, r3, lsl #6
   101f4:	00000008 	andeq	r0, r0, r8
   101f8:	02350300 	eorseq	r0, r5, #0, 6
   101fc:	0005791a 	andeq	r7, r5, sl, lsl r9
   10200:	a0230300 	eorge	r0, r3, r0, lsl #6
   10204:	1bb70801 	blne	fedd2210 <__RAM_segment_used_end__+0xc6cd2210>
   10208:	3a030000 	bcc	d0210 <SYSTICK_CYCLES+0xa71d1>
   1020c:	00a81902 	adceq	r1, r8, r2, lsl #18
   10210:	23030000 	movwcs	r0, #12288	; 0x3000
   10214:	770801a4 	strvc	r0, [r8, -r4, lsr #3]
   10218:	0300001c 	movweq	r0, #28
   1021c:	a819023d 	ldmdage	r9, {r0, r2, r3, r4, r5, r9}
   10220:	03000000 	movweq	r0, #0
   10224:	0801a823 	stmdaeq	r1, {r0, r1, r5, fp, sp, pc}
   10228:	00001b30 	andeq	r1, r0, r0, lsr fp
   1022c:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
   10230:	000000a8 	andeq	r0, r0, r8, lsr #1
   10234:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
   10238:	001d2e08 	andseq	r2, sp, r8, lsl #28
   1023c:	02450300 	subeq	r0, r5, #0, 6
   10240:	0000a819 	andeq	sl, r0, r9, lsl r8
   10244:	b0230300 	eorlt	r0, r3, r0, lsl #6
   10248:	1c470801 	mcrrne	8, 0, r0, r7, cr1
   1024c:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
   10250:	00a81902 	adceq	r1, r8, r2, lsl #18
   10254:	23030000 	movwcs	r0, #12288	; 0x3000
   10258:	a80801b4 	stmdage	r8, {r2, r4, r5, r7, r8}
   1025c:	03000007 	movweq	r0, #7
   10260:	7d1a024c 	lfmvc	f0, 4, [sl, #-304]	; 0xfffffed0
   10264:	03000004 	movweq	r0, #4
   10268:	0801b823 	stmdaeq	r1, {r0, r1, r5, fp, ip, sp, pc}
   1026c:	00001d06 	andeq	r1, r0, r6, lsl #26
   10270:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
   10274:	000000a8 	andeq	r0, r0, r8, lsr #1
   10278:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
   1027c:	001b0808 	andseq	r0, fp, r8, lsl #16
   10280:	02520300 	subseq	r0, r2, #0, 6
   10284:	0000a819 	andeq	sl, r0, r9, lsl r8
   10288:	c0230300 	eorgt	r0, r3, r0, lsl #6
   1028c:	1a850801 	bne	fe152298 <__RAM_segment_used_end__+0xc6052298>
   10290:	55030000 	strpl	r0, [r3, #-0]
   10294:	00a81902 	adceq	r1, r8, r2, lsl #18
   10298:	23030000 	movwcs	r0, #12288	; 0x3000
   1029c:	db0801c4 	blle	2109b4 <__RAM_SIZE+0x1109b4>
   102a0:	0300001b 	movweq	r0, #27
   102a4:	a8190259 	ldmdage	r9, {r0, r3, r4, r6, r9}
   102a8:	03000000 	movweq	r0, #0
   102ac:	0801c823 	stmdaeq	r1, {r0, r1, r5, fp, lr, pc}
   102b0:	000009a9 	andeq	r0, r0, r9, lsr #19
   102b4:	1a025d03 	bne	a76c8 <SYSTICK_CYCLES+0x7e689>
   102b8:	00000076 	andeq	r0, r0, r6, ror r0
   102bc:	01cc2303 	biceq	r2, ip, r3, lsl #6
   102c0:	00048108 	andeq	r8, r4, r8, lsl #2
   102c4:	02780300 	rsbseq	r0, r8, #0, 6
   102c8:	0000a819 	andeq	sl, r0, r9, lsl r8
   102cc:	d0230300 	eorle	r0, r3, r0, lsl #6
   102d0:	040b0001 	streq	r0, [fp], #-1
   102d4:	00000169 	andeq	r0, r0, r9, ror #2
   102d8:	04940109 	ldreq	r0, [r4], #265	; 0x109
   102dc:	7d0a0000 	stcvc	0, cr0, [sl, #-0]
   102e0:	0a000004 	beq	102f8 <_Min_Stack_Size+0xf2f8>
   102e4:	000000a8 	andeq	r0, r0, r8, lsr #1
   102e8:	83040b00 	movwhi	r0, #19200	; 0x4b00
   102ec:	07000004 	streq	r0, [r0, -r4]
   102f0:	00000798 	muleq	r0, r8, r7
   102f4:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
   102f8:	00057910 	andeq	r7, r5, r0, lsl r9
   102fc:	018d0800 	orreq	r0, sp, r0, lsl #16
   10300:	82030000 	andhi	r0, r3, #0
   10304:	00a81903 	adceq	r1, r8, r3, lsl #18
   10308:	23020000 	movwcs	r0, #8192	; 0x2000
   1030c:	087c0800 	ldmdaeq	ip!, {fp}^
   10310:	85030000 	strhi	r0, [r3, #-0]
   10314:	01631a03 	cmneq	r3, r3, lsl #20
   10318:	23020000 	movwcs	r0, #8192	; 0x2000
   1031c:	06e10804 	strbteq	r0, [r1], r4, lsl #16
   10320:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
   10324:	00971903 	addseq	r1, r7, r3, lsl #18
   10328:	23020000 	movwcs	r0, #8192	; 0x2000
   1032c:	04cb0808 	strbeq	r0, [fp], #2056	; 0x808
   10330:	8c030000 	stchi	0, cr0, [r3], {-0}
   10334:	06841a03 	streq	r1, [r4], r3, lsl #20
   10338:	23020000 	movwcs	r0, #8192	; 0x2000
   1033c:	0162080c 	cmneq	r2, ip, lsl #16
   10340:	90030000 	andls	r0, r3, r0
   10344:	00971903 	addseq	r1, r7, r3, lsl #18
   10348:	23020000 	movwcs	r0, #8192	; 0x2000
   1034c:	01210810 			; <UNDEFINED> instruction: 0x01210810
   10350:	93030000 	movwls	r0, #12288	; 0x3000
   10354:	00971903 	addseq	r1, r7, r3, lsl #18
   10358:	23020000 	movwcs	r0, #8192	; 0x2000
   1035c:	08b20814 	ldmeq	r2!, {r2, r4, fp}
   10360:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
   10364:	047d1a03 	ldrbteq	r1, [sp], #-2563	; 0xfffff5fd
   10368:	23020000 	movwcs	r0, #8192	; 0x2000
   1036c:	06c80818 			; <UNDEFINED> instruction: 0x06c80818
   10370:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
   10374:	00971903 	addseq	r1, r7, r3, lsl #18
   10378:	23020000 	movwcs	r0, #8192	; 0x2000
   1037c:	05b8081c 	ldreq	r0, [r8, #2076]!	; 0x81c
   10380:	9d030000 	stcls	0, cr0, [r3, #-0]
   10384:	05791a03 	ldrbeq	r1, [r9, #-2563]!	; 0xfffff5fd
   10388:	23020000 	movwcs	r0, #8192	; 0x2000
   1038c:	06850820 	streq	r0, [r5], r0, lsr #16
   10390:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
   10394:	05791a03 	ldrbeq	r1, [r9, #-2563]!	; 0xfffff5fd
   10398:	23020000 	movwcs	r0, #8192	; 0x2000
   1039c:	01d00824 	bicseq	r0, r0, r4, lsr #16
   103a0:	a2030000 	andge	r0, r3, #0
   103a4:	00971903 	addseq	r1, r7, r3, lsl #18
   103a8:	23020000 	movwcs	r0, #8192	; 0x2000
   103ac:	09c50828 	stmibeq	r5, {r3, r5, fp}^
   103b0:	a6030000 	strge	r0, [r3], -r0
   103b4:	05791a03 	ldrbeq	r1, [r9, #-2563]!	; 0xfffff5fd
   103b8:	23020000 	movwcs	r0, #8192	; 0x2000
   103bc:	0425082c 	strteq	r0, [r5], #-2092	; 0xfffff7d4
   103c0:	a7030000 	strge	r0, [r3, -r0]
   103c4:	05791a03 	ldrbeq	r1, [r9, #-2563]!	; 0xfffff5fd
   103c8:	23020000 	movwcs	r0, #8192	; 0x2000
   103cc:	040b0030 	streq	r0, [fp], #-48	; 0xffffffd0
   103d0:	0000049a 	muleq	r0, sl, r4
   103d4:	0008d40c 	andeq	sp, r8, ip, lsl #8
   103d8:	02860300 	addeq	r0, r6, #0, 6
   103dc:	00016903 	andeq	r6, r1, r3, lsl #18
   103e0:	8b040b00 	blhi	112fe8 <__RAM_SIZE+0x12fe8>
   103e4:	07000000 	streq	r0, [r0, -r0]
   103e8:	00000460 	andeq	r0, r0, r0, ror #8
   103ec:	02d90334 	sbcseq	r0, r9, #52, 6	; 0xd0000000
   103f0:	00067110 	andeq	r7, r6, r0, lsl r1
   103f4:	04010800 	streq	r0, [r1], #-2048	; 0xfffff800
   103f8:	dd030000 	stcle	0, cr0, [r3, #-0]
   103fc:	00a81902 	adceq	r1, r8, r2, lsl #18
   10400:	23020000 	movwcs	r0, #8192	; 0x2000
   10404:	03740800 	cmneq	r4, #0, 16
   10408:	e0030000 	and	r0, r3, r0
   1040c:	01631a02 	cmneq	r3, r2, lsl #20
   10410:	23020000 	movwcs	r0, #8192	; 0x2000
   10414:	07550804 	ldrbeq	r0, [r5, -r4, lsl #16]
   10418:	e3030000 	movw	r0, #12288	; 0x3000
   1041c:	00a81902 	adceq	r1, r8, r2, lsl #18
   10420:	23020000 	movwcs	r0, #8192	; 0x2000
   10424:	089b0808 	ldmeq	fp, {r3, fp}
   10428:	e6030000 	str	r0, [r3], -r0
   1042c:	00971902 	addseq	r1, r7, r2, lsl #18
   10430:	23020000 	movwcs	r0, #8192	; 0x2000
   10434:	07f0080c 	ldrbeq	r0, [r0, ip, lsl #16]!
   10438:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
   1043c:	058c1a02 	streq	r1, [ip, #2562]	; 0xa02
   10440:	23020000 	movwcs	r0, #8192	; 0x2000
   10444:	11070810 	tstne	r7, r0, lsl r8
   10448:	ed030000 	stc	0, cr0, [r3, #-0]
   1044c:	058c1a02 	streq	r1, [ip, #2562]	; 0xa02
   10450:	23020000 	movwcs	r0, #8192	; 0x2000
   10454:	05280814 	streq	r0, [r8, #-2068]!	; 0xfffff7ec
   10458:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
   1045c:	058c1a02 	streq	r1, [ip, #2562]	; 0xa02
   10460:	23020000 	movwcs	r0, #8192	; 0x2000
   10464:	03060818 	movweq	r0, #26648	; 0x6818
   10468:	f3030000 	vhadd.u8	d0, d3, d0
   1046c:	00a81902 	adceq	r1, r8, r2, lsl #18
   10470:	23020000 	movwcs	r0, #8192	; 0x2000
   10474:	0972081c 	ldmdbeq	r2!, {r2, r3, r4, fp}^
   10478:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
   1047c:	047d1a02 	ldrbteq	r1, [sp], #-2562	; 0xfffff5fe
   10480:	23020000 	movwcs	r0, #8192	; 0x2000
   10484:	04ae0820 	strteq	r0, [lr], #2080	; 0x820
   10488:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
   1048c:	047d1a02 	ldrbteq	r1, [sp], #-2562	; 0xfffff5fe
   10490:	23020000 	movwcs	r0, #8192	; 0x2000
   10494:	050b0824 	streq	r0, [fp, #-2084]	; 0xfffff7dc
   10498:	ff030000 			; <UNDEFINED> instruction: 0xff030000
   1049c:	00971902 	addseq	r1, r7, r2, lsl #18
   104a0:	23020000 	movwcs	r0, #8192	; 0x2000
   104a4:	02a70828 	adceq	r0, r7, #40, 16	; 0x280000
   104a8:	03030000 	movweq	r0, #12288	; 0x3000
   104ac:	06711a03 	ldrbteq	r1, [r1], -r3, lsl #20
   104b0:	23020000 	movwcs	r0, #8192	; 0x2000
   104b4:	085e082c 	ldmdaeq	lr, {r2, r3, r5, fp}^
   104b8:	04030000 	streq	r0, [r3], #-0
   104bc:	06711a03 	ldrbteq	r1, [r1], -r3, lsl #20
   104c0:	23020000 	movwcs	r0, #8192	; 0x2000
   104c4:	040b0030 	streq	r0, [fp], #-48	; 0xffffffd0
   104c8:	00000592 	muleq	r0, r2, r5
   104cc:	0004740c 	andeq	r7, r4, ip, lsl #8
   104d0:	03230300 			; <UNDEFINED> instruction: 0x03230300
   104d4:	00059203 	andeq	r9, r5, r3, lsl #4
   104d8:	7f040b00 	svcvc	0x00040b00
   104dc:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
   104e0:	0000111b 	andeq	r1, r0, fp, lsl r1
   104e4:	21013904 	tstcs	r1, r4, lsl #18
   104e8:	00000684 	andeq	r0, r0, r4, lsl #13
   104ec:	e80d0101 	stmda	sp, {r0, r8}
   104f0:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
   104f4:	b4210153 	strtlt	r0, [r1], #-339	; 0xfffffead
   104f8:	01000000 	mrseq	r0, (UNDEF: 0)
   104fc:	11320d01 	teqne	r2, r1, lsl #26
   10500:	8e040000 	cdphi	0, 0, cr0, cr4, cr0, {0}
   10504:	00a32101 	adceq	r2, r3, r1, lsl #2
   10508:	01010000 	mrseq	r0, (UNDEF: 1)
   1050c:	001e8a0e 	andseq	r8, lr, lr, lsl #20
   10510:	218f0500 	orrcs	r0, pc, r0, lsl #10
   10514:	0000057f 	andeq	r0, r0, pc, ror r5
   10518:	350e0101 	strcc	r0, [lr, #-257]	; 0xfffffeff
   1051c:	06000012 			; <UNDEFINED> instruction: 0x06000012
   10520:	06d3257b 			; <UNDEFINED> instruction: 0x06d3257b
   10524:	01010000 	mrseq	r0, (UNDEF: 1)
   10528:	0677040b 	ldrbteq	r0, [r7], -fp, lsl #8
   1052c:	620e0000 	andvs	r0, lr, #0
   10530:	06000012 			; <UNDEFINED> instruction: 0x06000012
   10534:	00a82580 	adceq	r2, r8, r0, lsl #11
   10538:	01010000 	mrseq	r0, (UNDEF: 1)
   1053c:	0580010f 	streq	r0, [r0, #271]	; 0x10f
   10540:	53010000 	movwpl	r0, #4096	; 0x1000
   10544:	00970107 	addseq	r0, r7, r7, lsl #2
   10548:	2c7c0000 	ldclcs	0, cr0, [ip], #-0
   1054c:	2d501000 	ldclcs	0, cr1, [r0, #-0]
   10550:	58881000 	stmpl	r8, {ip}
   10554:	2a010000 	bcs	5055c <SYSTICK_CYCLES+0x2751d>
   10558:	10000009 	andne	r0, r0, r9
   1055c:	00000ef1 	strdeq	r0, [r0], -r1
   10560:	d32b5301 			; <UNDEFINED> instruction: 0xd32b5301
   10564:	ce000006 	cdpgt	0, 0, cr0, cr0, cr6, {0}
   10568:	c0000058 	andgt	r0, r0, r8, asr r0
   1056c:	10000058 	andne	r0, r0, r8, asr r0
   10570:	000011b0 			; <UNDEFINED> instruction: 0x000011b0
   10574:	633b5301 	teqvs	fp, #67108864	; 0x4000000
   10578:	32000001 	andcc	r0, r0, #1
   1057c:	26000059 			; <UNDEFINED> instruction: 0x26000059
   10580:	10000059 	andne	r0, r0, r9, asr r0
   10584:	00000530 	andeq	r0, r0, r0, lsr r5
   10588:	764b5301 	strbvc	r5, [fp], -r1, lsl #6
   1058c:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
   10590:	7c000059 	stcvc	0, cr0, [r0], {89}	; 0x59
   10594:	10000059 	andne	r0, r0, r9, asr r0
   10598:	0000030e 	andeq	r0, r0, lr, lsl #6
   1059c:	a85d5301 	ldmdage	sp, {r0, r8, r9, ip, lr}^
   105a0:	da000000 	ble	105a8 <_Min_Stack_Size+0xf5a8>
   105a4:	d2000059 	andle	r0, r0, #89	; 0x59
   105a8:	10000059 	andne	r0, r0, r9, asr r0
   105ac:	000026f0 	strdeq	r2, [r0], -r0
   105b0:	976d5301 	strbls	r5, [sp, -r1, lsl #6]!
   105b4:	12000000 	andne	r0, r0, #0
   105b8:	0e00005a 	mcreq	0, 0, r0, cr0, cr10, {2}
   105bc:	1100005a 	qaddne	r0, sl, r0
   105c0:	00000ee2 	andeq	r0, r0, r2, ror #29
   105c4:	97015601 	strls	r5, [r1, -r1, lsl #12]
   105c8:	36000000 	strcc	r0, [r0], -r0
   105cc:	3200005a 	andcc	r0, r0, #90	; 0x5a
   105d0:	1100005a 	qaddne	r0, sl, r0
   105d4:	000003fa 	strdeq	r0, [r0], -sl
   105d8:	97115801 	ldrls	r5, [r1, -r1, lsl #16]
   105dc:	62000000 	andvs	r0, r0, #0
   105e0:	5400005a 	strpl	r0, [r0], #-90	; 0xffffffa6
   105e4:	1200005a 	andne	r0, r0, #90	; 0x5a
   105e8:	59010069 	stmdbpl	r1, {r0, r3, r5, r6}
   105ec:	0000a811 	andeq	sl, r0, r1, lsl r8
   105f0:	005abf00 	subseq	fp, sl, r0, lsl #30
   105f4:	005abb00 	subseq	fp, sl, r0, lsl #22
   105f8:	124f1100 	subne	r1, pc, #0, 2
   105fc:	5a010000 	bpl	50604 <SYSTICK_CYCLES+0x275c5>
   10600:	0006d312 	andeq	sp, r6, r2, lsl r3
   10604:	005ae200 	subseq	lr, sl, r0, lsl #4
   10608:	005ade00 	subseq	sp, sl, r0, lsl #28
   1060c:	19cf1100 	stmibne	pc, {r8, ip}^	; <UNPREDICTABLE>
   10610:	5c010000 	stcpl	0, cr0, [r1], {-0}
   10614:	00068412 	andeq	r8, r6, r2, lsl r4
   10618:	005b0400 	subseq	r0, fp, r0, lsl #8
   1061c:	005b0000 	subseq	r0, fp, r0
   10620:	092a1300 	stmdbeq	sl!, {r8, r9, ip}
   10624:	2c980000 	ldccs	0, cr0, [r8], {0}
   10628:	98011000 	stmdals	r1, {ip}
   1062c:	9e10002c 	cdpls	0, 1, cr0, cr0, cr12, {1}
   10630:	0110002c 	tsteq	r0, ip, lsr #32
   10634:	08170976 	ldmdaeq	r7, {r1, r2, r4, r5, r6, r8, fp}
   10638:	3d140000 	ldccc	0, cr0, [r4, #-0]
   1063c:	24000009 	strcs	r0, [r0], #-9
   10640:	2200005b 	andcs	r0, r0, #91	; 0x5b
   10644:	1500005b 	strne	r0, [r0, #-91]	; 0xffffffa5
   10648:	00000968 	andeq	r0, r0, r8, ror #18
   1064c:	10002c98 	mulne	r0, r8, ip
   10650:	002c9804 	eoreq	r9, ip, r4, lsl #16
   10654:	002c9c10 	eoreq	r9, ip, r0, lsl ip
   10658:	02560210 	subseq	r0, r6, #16, 4
   1065c:	097b1413 	ldmdbeq	fp!, {r0, r1, r4, sl, ip}^
   10660:	5b390000 	blpl	e50668 <__RAM_SIZE+0xd50668>
   10664:	5b370000 	blpl	dd066c <__RAM_SIZE+0xcd066c>
   10668:	00000000 	andeq	r0, r0, r0
   1066c:	00094b13 	andeq	r4, r9, r3, lsl fp
   10670:	002ca600 	eoreq	sl, ip, r0, lsl #12
   10674:	2ca60110 	stfcss	f0, [r6], #64	; 0x40
   10678:	2caa1000 	stccs	0, cr1, [sl]
   1067c:	7c011000 	stcvc	0, cr1, [r1], {-0}
   10680:	00083e09 	andeq	r3, r8, r9, lsl #28
   10684:	095a1600 	ldmdbeq	sl, {r9, sl, ip}^
   10688:	5b4e0000 	blpl	1390690 <__RAM_SIZE+0x1290690>
   1068c:	5b4c0000 	blpl	1310694 <__RAM_SIZE+0x1210694>
   10690:	13000000 	movwne	r0, #0
   10694:	0000092a 	andeq	r0, r0, sl, lsr #18
   10698:	10002cc2 	andne	r2, r0, r2, asr #25
   1069c:	002cc201 	eoreq	ip, ip, r1, lsl #4
   106a0:	002cc810 	eoreq	ip, ip, r0, lsl r8
   106a4:	09920110 	ldmibeq	r2, {r4, r8}
   106a8:	00000889 	andeq	r0, r0, r9, lsl #17
   106ac:	00093d14 	andeq	r3, r9, r4, lsl sp
   106b0:	005b6300 	subseq	r6, fp, r0, lsl #6
   106b4:	005b6100 	subseq	r6, fp, r0, lsl #2
   106b8:	09681500 	stmdbeq	r8!, {r8, sl, ip}^
   106bc:	2cc20000 	stclcs	0, cr0, [r2], {0}
   106c0:	c2041000 	andgt	r1, r4, #0
   106c4:	c610002c 	ldrgt	r0, [r0], -ip, lsr #32
   106c8:	0210002c 	andseq	r0, r0, #44	; 0x2c
   106cc:	14130256 	ldrne	r0, [r3], #-598	; 0xfffffdaa
   106d0:	0000097b 	andeq	r0, r0, fp, ror r9
   106d4:	00005b78 	andeq	r5, r0, r8, ror fp
   106d8:	00005b76 	andeq	r5, r0, r6, ror fp
   106dc:	4b130000 	blmi	4d06e4 <__RAM_SIZE+0x3d06e4>
   106e0:	d0000009 	andle	r0, r0, r9
   106e4:	0110002c 	tsteq	r0, ip, lsr #32
   106e8:	10002cd0 	ldrdne	r2, [r0], -r0
   106ec:	10002cd4 	ldrdne	r2, [r0], -r4
   106f0:	b0099801 	andlt	r9, r9, r1, lsl #16
   106f4:	16000008 	strne	r0, [r0], -r8
   106f8:	0000095a 	andeq	r0, r0, sl, asr r9
   106fc:	00005b8d 	andeq	r5, r0, sp, lsl #23
   10700:	00005b8b 	andeq	r5, r0, fp, lsl #23
   10704:	09891300 	stmibeq	r9, {r8, r9, ip}
   10708:	2cf00000 	ldclcs	0, cr0, [r0]
   1070c:	f0011000 			; <UNDEFINED> instruction: 0xf0011000
   10710:	f410002c 			; <UNDEFINED> instruction: 0xf410002c
   10714:	0110002c 	tsteq	r0, ip, lsr #32
   10718:	08d711c6 	ldmeq	r7, {r1, r2, r6, r7, r8, ip}^
   1071c:	9c140000 	ldcls	0, cr0, [r4], {-0}
   10720:	a2000009 	andge	r0, r0, #9
   10724:	a000005b 	andge	r0, r0, fp, asr r0
   10728:	0000005b 	andeq	r0, r0, fp, asr r0
   1072c:	00098913 	andeq	r8, r9, r3, lsl r9
   10730:	002cfc00 	eoreq	pc, ip, r0, lsl #24
   10734:	2cfc0110 	ldfcse	f0, [ip], #64	; 0x40
   10738:	2d001000 	stccs	0, cr1, [r0, #-0]
   1073c:	ca011000 	bgt	54744 <SYSTICK_CYCLES+0x2b705>
   10740:	0008fe15 	andeq	pc, r8, r5, lsl lr	; <UNPREDICTABLE>
   10744:	099c1400 	ldmibeq	ip, {sl, ip}
   10748:	5bb70000 	blpl	fedd0750 <__RAM_segment_used_end__+0xc6cd0750>
   1074c:	5bb50000 	blpl	fed50754 <__RAM_segment_used_end__+0xc6c50754>
   10750:	17000000 	strne	r0, [r0, -r0]
   10754:	10002cd8 	ldrdne	r2, [r0], -r8
   10758:	000009aa 	andeq	r0, r0, sl, lsr #19
   1075c:	002d1c18 	eoreq	r1, sp, r8, lsl ip
   10760:	0009b910 	andeq	fp, r9, r0, lsl r9
   10764:	50011900 	andpl	r1, r1, r0, lsl #18
   10768:	19007602 	stmdbne	r0, {r1, r9, sl, ip, sp, lr}
   1076c:	79025101 	stmdbvc	r2, {r0, r8, ip, lr}
   10770:	52011900 	andpl	r1, r1, #0, 18
   10774:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
   10778:	78025301 	stmdavc	r2, {r0, r8, r9, ip, lr}
   1077c:	1a000000 	bne	10784 <_Min_Stack_Size+0xf784>
   10780:	00000f18 	andeq	r0, r0, r8, lsl pc
   10784:	37025202 	strcc	r5, [r2, -r2, lsl #4]
   10788:	00009701 	andeq	r9, r0, r1, lsl #14
   1078c:	094b0300 	stmdbeq	fp, {r8, r9}^
   10790:	a11b0000 	tstge	fp, r0
   10794:	0200000e 	andeq	r0, r0, #14
   10798:	97060254 	smlsdls	r6, r4, r2, r0
   1079c:	00000000 	andeq	r0, r0, r0
   107a0:	000e8d1c 	andeq	r8, lr, ip, lsl sp
   107a4:	02490200 	subeq	r0, r9, #0, 4
   107a8:	68030137 	stmdavs	r3, {r0, r1, r2, r4, r5, r8}
   107ac:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
   107b0:	00000ea1 	andeq	r0, r0, r1, lsr #29
   107b4:	50024902 	andpl	r4, r2, r2, lsl #18
   107b8:	00000097 	muleq	r0, r7, r0
   107bc:	0eb61a00 	vmoveq.f32	s2, #96	; 0x3f000000  0.5
   107c0:	32020000 	andcc	r0, r2, #0
   107c4:	97013702 	strls	r3, [r1, -r2, lsl #14]
   107c8:	03000000 	movweq	r0, #0
   107cc:	00000989 	andeq	r0, r0, r9, lsl #19
   107d0:	000ea51b 	andeq	sl, lr, fp, lsl r5
   107d4:	02340200 	eorseq	r0, r4, #0, 4
   107d8:	00009706 	andeq	r9, r0, r6, lsl #14
   107dc:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
   107e0:	02000019 	andeq	r0, r0, #25
   107e4:	013701fa 	teqeq	r7, sl	; <illegal shifter operand>
   107e8:	00000097 	muleq	r0, r7, r0
   107ec:	0009aa03 	andeq	sl, r9, r3, lsl #20
   107f0:	1a791b00 	bne	1e573f8 <__RAM_SIZE+0x1d573f8>
   107f4:	fc020000 	stc2	0, cr0, [r2], {-0}
   107f8:	00970601 	addseq	r0, r7, r1, lsl #12
   107fc:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
   10800:	1f7c0101 	svcne	0x007c0101
   10804:	1f7c0000 	svcne	0x007c0000
   10808:	1c040000 	stcne	0, cr0, [r4], {-0}
   1080c:	011e0d01 	tsteq	lr, r1, lsl #26
   10810:	00120d01 	andseq	r0, r2, r1, lsl #26
   10814:	00120d00 	andseq	r0, r2, r0, lsl #26
   10818:	05f30300 	ldrbeq	r0, [r3, #768]!	; 0x300
   1081c:	09b4000d 	ldmibeq	r4!, {r0, r2, r3}
   10820:	00020000 	andeq	r0, r2, r0
   10824:	00002f30 	andeq	r2, r0, r0, lsr pc
   10828:	003d0104 	eorseq	r0, sp, r4, lsl #2
   1082c:	680c0000 	stmdavs	ip, {}	; <UNPREDICTABLE>
   10830:	41000027 	tstmi	r0, r7, lsr #32
   10834:	d0000006 	andle	r0, r0, r6
   10838:	00000004 	andeq	r0, r0, r4
   1083c:	00000000 	andeq	r0, r0, r0
   10840:	2c000000 	stccs	0, cr0, [r0], {-0}
   10844:	0200005c 	andeq	r0, r0, #92	; 0x5c
   10848:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
   1084c:	04030000 	streq	r0, [r3], #-0
   10850:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
   10854:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
   10858:	000004e8 	andeq	r0, r0, r8, ror #9
   1085c:	23040802 	movwcs	r0, #18434	; 0x4802
   10860:	02000006 	andeq	r0, r0, #6
   10864:	08520601 	ldmdaeq	r2, {r0, r9, sl}^
   10868:	01020000 	mrseq	r0, (UNDEF: 2)
   1086c:	00085008 	andeq	r5, r8, r8
   10870:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
   10874:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
   10878:	1e070202 	cdpne	2, 0, cr0, cr7, cr2, {0}
   1087c:	02000009 	andeq	r0, r0, #9
   10880:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
   10884:	04020000 	streq	r0, [r2], #-0
   10888:	00023407 	andeq	r3, r2, r7, lsl #8
   1088c:	07080200 	streq	r0, [r8, -r0, lsl #4]
   10890:	0000022f 	andeq	r0, r0, pc, lsr #4
   10894:	01020404 	tsteq	r2, r4, lsl #8
   10898:	00085908 	andeq	r5, r8, r8, lsl #18
   1089c:	08df0500 	ldmeq	pc, {r8, sl}^	; <UNPREDICTABLE>
   108a0:	73020000 	movwvc	r0, #8192	; 0x2000
   108a4:	00007831 	andeq	r7, r0, r1, lsr r8
   108a8:	08de0500 	ldmeq	lr, {r8, sl}^
   108ac:	74020000 	strvc	r0, [r2], #-0
   108b0:	00004c31 	andeq	r4, r0, r1, lsr ip
   108b4:	077f0500 	ldrbeq	r0, [pc, -r0, lsl #10]!
   108b8:	76020000 	strvc	r0, [r2], -r0
   108bc:	00002931 	andeq	r2, r0, r1, lsr r9
   108c0:	00970600 	addseq	r0, r7, r0, lsl #12
   108c4:	11050000 	mrsne	r0, (UNDEF: 5)
   108c8:	02000007 	andeq	r0, r0, #7
   108cc:	00683178 	rsbeq	r3, r8, r8, ror r1
   108d0:	a8060000 	stmdage	r6, {}	; <UNPREDICTABLE>
   108d4:	07000000 	streq	r0, [r0, -r0]
   108d8:	0000053b 	andeq	r0, r0, fp, lsr r5
   108dc:	0182031c 	orreq	r0, r2, ip, lsl r3
   108e0:	00013810 	andeq	r3, r1, r0, lsl r8
   108e4:	08120800 	ldmdaeq	r2, {fp}
   108e8:	86030000 	strhi	r0, [r3], -r0
   108ec:	00a81901 	adceq	r1, r8, r1, lsl #18
   108f0:	23020000 	movwcs	r0, #8192	; 0x2000
   108f4:	03a00800 	moveq	r0, #0, 16
   108f8:	87030000 	strhi	r0, [r3, -r0]
   108fc:	00a81901 	adceq	r1, r8, r1, lsl #18
   10900:	23020000 	movwcs	r0, #8192	; 0x2000
   10904:	043d0804 	ldrteq	r0, [sp], #-2052	; 0xfffff7fc
   10908:	8a030000 	bhi	d0910 <SYSTICK_CYCLES+0xa78d1>
   1090c:	01441b01 	cmpeq	r4, r1, lsl #22
   10910:	23020000 	movwcs	r0, #8192	; 0x2000
   10914:	01f20808 	mvnseq	r0, r8, lsl #16
   10918:	8b030000 	blhi	d0920 <SYSTICK_CYCLES+0xa78e1>
   1091c:	00a81901 	adceq	r1, r8, r1, lsl #18
   10920:	23020000 	movwcs	r0, #8192	; 0x2000
   10924:	0954080c 	ldmdbeq	r4, {r2, r3, fp}^
   10928:	91030000 	mrsls	r0, (UNDEF: 3)
   1092c:	014a1a01 	cmpeq	sl, r1, lsl #20
   10930:	23020000 	movwcs	r0, #8192	; 0x2000
   10934:	001b0810 	andseq	r0, fp, r0, lsl r8
   10938:	92030000 	andls	r0, r3, #0
   1093c:	014a1a01 	cmpeq	sl, r1, lsl #20
   10940:	23020000 	movwcs	r0, #8192	; 0x2000
   10944:	05ee0814 	strbeq	r0, [lr, #2068]!	; 0x814
   10948:	96030000 	strls	r0, [r3], -r0
   1094c:	01501b01 	cmpeq	r0, r1, lsl #22
   10950:	23020000 	movwcs	r0, #8192	; 0x2000
   10954:	01090018 	tsteq	r9, r8, lsl r0
   10958:	00000144 	andeq	r0, r0, r4, asr #2
   1095c:	0000a80a 	andeq	sl, r0, sl, lsl #16
   10960:	040b0000 	streq	r0, [fp], #-0
   10964:	00000138 	andeq	r0, r0, r8, lsr r1
   10968:	00b9040b 	adcseq	r0, r9, fp, lsl #8
   1096c:	040b0000 	streq	r0, [fp], #-0
   10970:	0000014a 	andeq	r0, r0, sl, asr #2
   10974:	00062f0c 	andeq	r2, r6, ip, lsl #30
   10978:	019b0300 	orrseq	r0, fp, r0, lsl #6
   1097c:	0000b903 	andeq	fp, r0, r3, lsl #18
   10980:	7f040b00 	svcvc	0x00040b00
   10984:	07000000 	streq	r0, [r0, -r0]
   10988:	0000034b 	andeq	r0, r0, fp, asr #6
   1098c:	01d603d4 	ldrsbeq	r0, [r6, #52]	; 0x34
   10990:	00047d10 	andeq	r7, r4, r0, lsl sp
   10994:	09110800 	ldmdbeq	r1, {fp}
   10998:	dd030000 	stcle	0, cr0, [r3, #-0]
   1099c:	00a81901 	adceq	r1, r8, r1, lsl #18
   109a0:	23020000 	movwcs	r0, #8192	; 0x2000
   109a4:	07840800 	streq	r0, [r4, r0, lsl #16]
   109a8:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
   109ac:	00a81901 	adceq	r1, r8, r1, lsl #18
   109b0:	23020000 	movwcs	r0, #8192	; 0x2000
   109b4:	01bc0804 			; <UNDEFINED> instruction: 0x01bc0804
   109b8:	df030000 	svcle	0x00030000
   109bc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
   109c0:	23020000 	movwcs	r0, #8192	; 0x2000
   109c4:	08fb0808 	ldmeq	fp!, {r3, fp}^
   109c8:	e0030000 	and	r0, r3, r0
   109cc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
   109d0:	23020000 	movwcs	r0, #8192	; 0x2000
   109d4:	0411080c 	ldreq	r0, [r1], #-2060	; 0xfffff7f4
   109d8:	e1030000 	mrs	r0, (UNDEF: 3)
   109dc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
   109e0:	23020000 	movwcs	r0, #8192	; 0x2000
   109e4:	093f0810 	ldmdbeq	pc!, {r4, fp}	; <UNPREDICTABLE>
   109e8:	e2030000 	and	r0, r3, #0
   109ec:	00a81901 	adceq	r1, r8, r1, lsl #18
   109f0:	23020000 	movwcs	r0, #8192	; 0x2000
   109f4:	21d10814 	bicscs	r0, r1, r4, lsl r8
   109f8:	e3030000 	movw	r0, #12288	; 0x3000
   109fc:	00a81901 	adceq	r1, r8, r1, lsl #18
   10a00:	23020000 	movwcs	r0, #8192	; 0x2000
   10a04:	060a0818 			; <UNDEFINED> instruction: 0x060a0818
   10a08:	e4030000 	str	r0, [r3], #-0
   10a0c:	00a81901 	adceq	r1, r8, r1, lsl #18
   10a10:	23020000 	movwcs	r0, #8192	; 0x2000
   10a14:	069f081c 			; <UNDEFINED> instruction: 0x069f081c
   10a18:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
   10a1c:	047d1a01 	ldrbteq	r1, [sp], #-2561	; 0xfffff5ff
   10a20:	23020000 	movwcs	r0, #8192	; 0x2000
   10a24:	01990820 	orrseq	r0, r9, r0, lsr #16
   10a28:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
   10a2c:	047d1a01 	ldrbteq	r1, [sp], #-2561	; 0xfffff5ff
   10a30:	23020000 	movwcs	r0, #8192	; 0x2000
   10a34:	05960824 	ldreq	r0, [r6, #2084]	; 0x824
   10a38:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
   10a3c:	01631a01 	cmneq	r3, r1, lsl #20
   10a40:	23020000 	movwcs	r0, #8192	; 0x2000
   10a44:	02d90828 	sbcseq	r0, r9, #40, 16	; 0x280000
   10a48:	f2030000 	vhadd.s8	d0, d3, d0
   10a4c:	00971901 	addseq	r1, r7, r1, lsl #18
   10a50:	23020000 	movwcs	r0, #8192	; 0x2000
   10a54:	0246082c 	subeq	r0, r6, #44, 16	; 0x2c0000
   10a58:	f3030000 	vhadd.u8	d0, d3, d0
   10a5c:	00971901 	addseq	r1, r7, r1, lsl #18
   10a60:	23020000 	movwcs	r0, #8192	; 0x2000
   10a64:	01730830 	cmneq	r3, r0, lsr r8
   10a68:	f4030000 	vst4.8	{d0-d3}, [r3], r0
   10a6c:	00971901 	addseq	r1, r7, r1, lsl #18
   10a70:	23020000 	movwcs	r0, #8192	; 0x2000
   10a74:	07300834 			; <UNDEFINED> instruction: 0x07300834
   10a78:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
   10a7c:	00971901 	addseq	r1, r7, r1, lsl #18
   10a80:	23020000 	movwcs	r0, #8192	; 0x2000
   10a84:	00eb0838 	rsceq	r0, fp, r8, lsr r8
   10a88:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
   10a8c:	00971901 	addseq	r1, r7, r1, lsl #18
   10a90:	23020000 	movwcs	r0, #8192	; 0x2000
   10a94:	035c083c 	cmpeq	ip, #60, 16	; 0x3c0000
   10a98:	fb030000 	blx	d0aa2 <SYSTICK_CYCLES+0xa7a63>
   10a9c:	04941b01 	ldreq	r1, [r4], #2817	; 0xb01
   10aa0:	23020000 	movwcs	r0, #8192	; 0x2000
   10aa4:	01520840 	cmpeq	r2, r0, asr #16
   10aa8:	03030000 	movweq	r0, #12288	; 0x3000
   10aac:	01441b02 	cmpeq	r4, r2, lsl #22
   10ab0:	23020000 	movwcs	r0, #8192	; 0x2000
   10ab4:	01070844 	tsteq	r7, r4, asr #16
   10ab8:	04030000 	streq	r0, [r3], #-0
   10abc:	00a81902 	adceq	r1, r8, r2, lsl #18
   10ac0:	23020000 	movwcs	r0, #8192	; 0x2000
   10ac4:	033b0848 	teqeq	fp, #72, 16	; 0x480000
   10ac8:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
   10acc:	01561902 	cmpeq	r6, r2, lsl #18
   10ad0:	23020000 	movwcs	r0, #8192	; 0x2000
   10ad4:	02ec084c 	rsceq	r0, ip, #76, 16	; 0x4c0000
   10ad8:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
   10adc:	04941b02 	ldreq	r1, [r4], #2818	; 0xb02
   10ae0:	23020000 	movwcs	r0, #8192	; 0x2000
   10ae4:	05ce0868 	strbeq	r0, [lr, #2152]	; 0x868
   10ae8:	0f030000 	svceq	0x00030000
   10aec:	00761a02 	rsbseq	r1, r6, r2, lsl #20
   10af0:	23020000 	movwcs	r0, #8192	; 0x2000
   10af4:	0717086c 	ldreq	r0, [r7, -ip, ror #16]
   10af8:	11030000 	mrsne	r0, (UNDEF: 3)
   10afc:	047d1a02 	ldrbteq	r1, [sp], #-2562	; 0xfffff5fe
   10b00:	23020000 	movwcs	r0, #8192	; 0x2000
   10b04:	02120870 	andseq	r0, r2, #112, 16	; 0x700000
   10b08:	12030000 	andne	r0, r3, #0
   10b0c:	047d1a02 	ldrbteq	r1, [sp], #-2562	; 0xfffff5fe
   10b10:	23020000 	movwcs	r0, #8192	; 0x2000
   10b14:	06fa0874 	uxtaheq	r0, sl, r4, ror #16
   10b18:	13030000 	movwne	r0, #12288	; 0x3000
   10b1c:	00a81902 	adceq	r1, r8, r2, lsl #18
   10b20:	23020000 	movwcs	r0, #8192	; 0x2000
   10b24:	03c60878 	biceq	r0, r6, #120, 16	; 0x780000
   10b28:	14030000 	strne	r0, [r3], #-0
   10b2c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
   10b30:	23020000 	movwcs	r0, #8192	; 0x2000
   10b34:	0554087c 	ldrbeq	r0, [r4, #-2172]	; 0xfffff784
   10b38:	15030000 	strne	r0, [r3, #-0]
   10b3c:	00971902 	addseq	r1, r7, r2, lsl #18
   10b40:	23030000 	movwcs	r0, #12288	; 0x3000
   10b44:	e8080180 	stmda	r8, {r7, r8}
   10b48:	03000003 	movweq	r0, #3
   10b4c:	97190216 			; <UNDEFINED> instruction: 0x97190216
   10b50:	03000000 	movweq	r0, #0
   10b54:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
   10b58:	000008e4 	andeq	r0, r0, r4, ror #17
   10b5c:	1a021f03 	bne	98770 <SYSTICK_CYCLES+0x6f731>
   10b60:	0000047d 	andeq	r0, r0, sp, ror r4
   10b64:	01882303 	orreq	r2, r8, r3, lsl #6
   10b68:	0007d508 	andeq	sp, r7, r8, lsl #10
   10b6c:	02200300 	eoreq	r0, r0, #0, 6
   10b70:	00047d1a 	andeq	r7, r4, sl, lsl sp
   10b74:	8c230300 	stchi	3, cr0, [r3], #-0
   10b78:	02c10801 	sbceq	r0, r1, #65536	; 0x10000
   10b7c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
   10b80:	00971902 	addseq	r1, r7, r2, lsl #18
   10b84:	23030000 	movwcs	r0, #12288	; 0x3000
   10b88:	56080190 			; <UNDEFINED> instruction: 0x56080190
   10b8c:	03000002 	movweq	r0, #2
   10b90:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
   10b94:	03000000 	movweq	r0, #0
   10b98:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
   10b9c:	00000320 	andeq	r0, r0, r0, lsr #6
   10ba0:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
   10ba4:	00000097 	muleq	r0, r7, r0
   10ba8:	01982303 	orrseq	r2, r8, r3, lsl #6
   10bac:	00027708 	andeq	r7, r2, r8, lsl #14
   10bb0:	02330300 	eorseq	r0, r3, #0, 6
   10bb4:	00009719 	andeq	r9, r0, r9, lsl r7
   10bb8:	9c230300 	stcls	3, cr0, [r3], #-0
   10bbc:	00000801 	andeq	r0, r0, r1, lsl #16
   10bc0:	35030000 	strcc	r0, [r3, #-0]
   10bc4:	05791a02 	ldrbeq	r1, [r9, #-2562]!	; 0xfffff5fe
   10bc8:	23030000 	movwcs	r0, #12288	; 0x3000
   10bcc:	b70801a0 	strlt	r0, [r8, -r0, lsr #3]
   10bd0:	0300001b 	movweq	r0, #27
   10bd4:	a819023a 	ldmdage	r9, {r1, r3, r4, r5, r9}
   10bd8:	03000000 	movweq	r0, #0
   10bdc:	0801a423 	stmdaeq	r1, {r0, r1, r5, sl, sp, pc}
   10be0:	00001c77 	andeq	r1, r0, r7, ror ip
   10be4:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
   10be8:	000000a8 	andeq	r0, r0, r8, lsr #1
   10bec:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
   10bf0:	001b3008 	andseq	r3, fp, r8
   10bf4:	02410300 	subeq	r0, r1, #0, 6
   10bf8:	0000a819 	andeq	sl, r0, r9, lsl r8
   10bfc:	ac230300 	stcge	3, cr0, [r3], #-0
   10c00:	1d2e0801 	stcne	8, cr0, [lr, #-4]!
   10c04:	45030000 	strmi	r0, [r3, #-0]
   10c08:	00a81902 	adceq	r1, r8, r2, lsl #18
   10c0c:	23030000 	movwcs	r0, #12288	; 0x3000
   10c10:	470801b0 			; <UNDEFINED> instruction: 0x470801b0
   10c14:	0300001c 	movweq	r0, #28
   10c18:	a8190248 	ldmdage	r9, {r3, r6, r9}
   10c1c:	03000000 	movweq	r0, #0
   10c20:	0801b423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, pc}
   10c24:	000007a8 	andeq	r0, r0, r8, lsr #15
   10c28:	1a024c03 	bne	a3c3c <SYSTICK_CYCLES+0x7abfd>
   10c2c:	0000047d 	andeq	r0, r0, sp, ror r4
   10c30:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
   10c34:	001d0608 	andseq	r0, sp, r8, lsl #12
   10c38:	024f0300 	subeq	r0, pc, #0, 6
   10c3c:	0000a819 	andeq	sl, r0, r9, lsl r8
   10c40:	bc230300 	stclt	3, cr0, [r3], #-0
   10c44:	1b080801 	blne	212c50 <__RAM_SIZE+0x112c50>
   10c48:	52030000 	andpl	r0, r3, #0
   10c4c:	00a81902 	adceq	r1, r8, r2, lsl #18
   10c50:	23030000 	movwcs	r0, #12288	; 0x3000
   10c54:	850801c0 	strhi	r0, [r8, #-448]	; 0xfffffe40
   10c58:	0300001a 	movweq	r0, #26
   10c5c:	a8190255 	ldmdage	r9, {r0, r2, r4, r6, r9}
   10c60:	03000000 	movweq	r0, #0
   10c64:	0801c423 	stmdaeq	r1, {r0, r1, r5, sl, lr, pc}
   10c68:	00001bdb 	ldrdeq	r1, [r0], -fp
   10c6c:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
   10c70:	000000a8 	andeq	r0, r0, r8, lsr #1
   10c74:	01c82303 	biceq	r2, r8, r3, lsl #6
   10c78:	0009a908 	andeq	sl, r9, r8, lsl #18
   10c7c:	025d0300 	subseq	r0, sp, #0, 6
   10c80:	0000761a 	andeq	r7, r0, sl, lsl r6
   10c84:	cc230300 	stcgt	3, cr0, [r3], #-0
   10c88:	04810801 	streq	r0, [r1], #2049	; 0x801
   10c8c:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
   10c90:	00a81902 	adceq	r1, r8, r2, lsl #18
   10c94:	23030000 	movwcs	r0, #12288	; 0x3000
   10c98:	0b0001d0 	bleq	113e0 <_Min_Stack_Size+0x103e0>
   10c9c:	00016904 	andeq	r6, r1, r4, lsl #18
   10ca0:	94010900 	strls	r0, [r1], #-2304	; 0xfffff700
   10ca4:	0a000004 	beq	10cbc <_Min_Stack_Size+0xfcbc>
   10ca8:	0000047d 	andeq	r0, r0, sp, ror r4
   10cac:	0000a80a 	andeq	sl, r0, sl, lsl #16
   10cb0:	040b0000 	streq	r0, [fp], #-0
   10cb4:	00000483 	andeq	r0, r0, r3, lsl #9
   10cb8:	00079807 	andeq	r9, r7, r7, lsl #16
   10cbc:	7e033400 	cfcpysvc	mvf3, mvf3
   10cc0:	05791003 	ldrbeq	r1, [r9, #-3]!
   10cc4:	8d080000 	stchi	0, cr0, [r8, #-0]
   10cc8:	03000001 	movweq	r0, #1
   10ccc:	a8190382 	ldmdage	r9, {r1, r7, r8, r9}
   10cd0:	02000000 	andeq	r0, r0, #0
   10cd4:	7c080023 	stcvc	0, cr0, [r8], {35}	; 0x23
   10cd8:	03000008 	movweq	r0, #8
   10cdc:	631a0385 	tstvs	sl, #335544322	; 0x14000002
   10ce0:	02000001 	andeq	r0, r0, #1
   10ce4:	e1080423 	tst	r8, r3, lsr #8
   10ce8:	03000006 	movweq	r0, #6
   10cec:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
   10cf0:	02000000 	andeq	r0, r0, #0
   10cf4:	cb080823 	blgt	212d88 <__RAM_SIZE+0x112d88>
   10cf8:	03000004 	movweq	r0, #4
   10cfc:	921a038c 	andsls	r0, sl, #140, 6	; 0x30000002
   10d00:	02000005 	andeq	r0, r0, #5
   10d04:	62080c23 	andvs	r0, r8, #8960	; 0x2300
   10d08:	03000001 	movweq	r0, #1
   10d0c:	97190390 			; <UNDEFINED> instruction: 0x97190390
   10d10:	02000000 	andeq	r0, r0, #0
   10d14:	21081023 	tstcs	r8, r3, lsr #32
   10d18:	03000001 	movweq	r0, #1
   10d1c:	97190393 			; <UNDEFINED> instruction: 0x97190393
   10d20:	02000000 	andeq	r0, r0, #0
   10d24:	b2081423 	andlt	r1, r8, #587202560	; 0x23000000
   10d28:	03000008 	movweq	r0, #8
   10d2c:	7d1a0398 	ldcvc	3, cr0, [sl, #-608]	; 0xfffffda0
   10d30:	02000004 	andeq	r0, r0, #4
   10d34:	c8081823 	stmdagt	r8, {r0, r1, r5, fp, ip}
   10d38:	03000006 	movweq	r0, #6
   10d3c:	97190399 			; <UNDEFINED> instruction: 0x97190399
   10d40:	02000000 	andeq	r0, r0, #0
   10d44:	b8081c23 	stmdalt	r8, {r0, r1, r5, sl, fp, ip}
   10d48:	03000005 	movweq	r0, #5
   10d4c:	791a039d 	ldmdbvc	sl, {r0, r2, r3, r4, r7, r8, r9}
   10d50:	02000005 	andeq	r0, r0, #5
   10d54:	85082023 	strhi	r2, [r8, #-35]	; 0xffffffdd
   10d58:	03000006 	movweq	r0, #6
   10d5c:	791a039e 	ldmdbvc	sl, {r1, r2, r3, r4, r7, r8, r9}
   10d60:	02000005 	andeq	r0, r0, #5
   10d64:	d0082423 	andle	r2, r8, r3, lsr #8
   10d68:	03000001 	movweq	r0, #1
   10d6c:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
   10d70:	02000000 	andeq	r0, r0, #0
   10d74:	c5082823 	strgt	r2, [r8, #-2083]	; 0xfffff7dd
   10d78:	03000009 	movweq	r0, #9
   10d7c:	791a03a6 	ldmdbvc	sl, {r1, r2, r5, r7, r8, r9}
   10d80:	02000005 	andeq	r0, r0, #5
   10d84:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
   10d88:	03000004 	movweq	r0, #4
   10d8c:	791a03a7 	ldmdbvc	sl, {r0, r1, r2, r5, r7, r8, r9}
   10d90:	02000005 	andeq	r0, r0, #5
   10d94:	0b003023 	bleq	1ce28 <_Min_Stack_Size+0x1be28>
   10d98:	00049a04 	andeq	r9, r4, r4, lsl #20
   10d9c:	08d40c00 	ldmeq	r4, {sl, fp}^
   10da0:	86030000 	strhi	r0, [r3], -r0
   10da4:	01690302 	cmneq	r9, r2, lsl #6
   10da8:	040b0000 	streq	r0, [fp], #-0
   10dac:	0000008b 	andeq	r0, r0, fp, lsl #1
   10db0:	057f040b 	ldrbeq	r0, [pc, #-1035]!	; 109ad <_Min_Stack_Size+0xf9ad>
   10db4:	1b0d0000 	blne	350dbc <__RAM_SIZE+0x250dbc>
   10db8:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
   10dbc:	92210139 	eorls	r0, r1, #1073741838	; 0x4000000e
   10dc0:	01000005 	tsteq	r0, r5
   10dc4:	19f10d01 	ldmibne	r1!, {r0, r8, sl, fp}^
   10dc8:	45040000 	strmi	r0, [r4, #-0]
   10dcc:	05922101 	ldreq	r2, [r2, #257]	; 0x101
   10dd0:	01010000 	mrseq	r0, (UNDEF: 1)
   10dd4:	001a540d 	andseq	r5, sl, sp, lsl #8
   10dd8:	014a0400 	cmpeq	sl, r0, lsl #8
   10ddc:	0000a821 	andeq	sl, r0, r1, lsr #16
   10de0:	0d010100 	stfeqs	f0, [r1, #-0]
   10de4:	000018e8 	andeq	r1, r0, r8, ror #17
   10de8:	21015304 	tstcs	r1, r4, lsl #6
   10dec:	000000b4 	strheq	r0, [r0], -r4
   10df0:	320d0101 	andcc	r0, sp, #1073741824	; 0x40000000
   10df4:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
   10df8:	a321018e 			; <UNDEFINED> instruction: 0xa321018e
   10dfc:	01000000 	mrseq	r0, (UNDEF: 0)
   10e00:	1e8a0e01 	cdpne	14, 8, cr0, cr10, cr1, {0}
   10e04:	8f050000 	svchi	0x00050000
   10e08:	00057f21 	andeq	r7, r5, r1, lsr #30
   10e0c:	0f010100 	svceq	0x00010100
   10e10:	0005a501 	andeq	sl, r5, r1, lsl #10
   10e14:	09590100 	ldmdbeq	r9, {r8}^
   10e18:	00009701 	andeq	r9, r0, r1, lsl #14
   10e1c:	002d5000 	eoreq	r5, sp, r0
   10e20:	002e9810 	eoreq	r9, lr, r0, lsl r8
   10e24:	005bca10 	subseq	ip, fp, r0, lsl sl
   10e28:	09190100 	ldmdbeq	r9, {r8}
   10e2c:	cf100000 	svcgt	0x00100000
   10e30:	01000019 	tsteq	r0, r9, lsl r0
   10e34:	05922759 	ldreq	r2, [r2, #1881]	; 0x759
   10e38:	5c1c0000 	ldcpl	0, cr0, [ip], {-0}
   10e3c:	5c0e0000 	stcpl	0, cr0, [lr], {-0}
   10e40:	b0100000 	andslt	r0, r0, r0
   10e44:	01000011 	tsteq	r0, r1, lsl r0
   10e48:	01633959 	cmneq	r3, r9, asr r9
   10e4c:	5c830000 	stcpl	0, cr0, [r3], {0}
   10e50:	5c770000 	ldclpl	0, cr0, [r7], #-0
   10e54:	3a100000 	bcc	410e5c <__RAM_SIZE+0x310e5c>
   10e58:	0100001a 	tsteq	r0, sl, lsl r0
   10e5c:	0144185a 	cmpeq	r4, sl, asr r8
   10e60:	5cdc0000 	ldclpl	0, cr0, [ip], {0}
   10e64:	5cd00000 	ldclpl	0, cr0, [r0], {0}
   10e68:	6d100000 	ldcvs	0, cr0, [r0, #-0]
   10e6c:	0100001a 	tsteq	r0, sl, lsl r0
   10e70:	00a8395a 	adceq	r3, r8, sl, asr r9
   10e74:	5d350000 	ldcpl	0, cr0, [r5, #-0]
   10e78:	5d290000 	stcpl	0, cr0, [r9, #-0]
   10e7c:	05100000 	ldreq	r0, [r0, #-0]
   10e80:	01000009 	tsteq	r0, r9
   10e84:	0076175b 	rsbseq	r1, r6, fp, asr r7
   10e88:	5d8e0000 	stcpl	0, cr0, [lr]
   10e8c:	5d820000 	stcpl	0, cr0, [r2]
   10e90:	49100000 	ldmdbmi	r0, {}	; <UNPREDICTABLE>
   10e94:	01000009 	tsteq	r0, r9
   10e98:	00a82a5b 	adceq	r2, r8, fp, asr sl
   10e9c:	5ddf0000 	ldclpl	0, cr0, [pc]	; 10ea4 <_Min_Stack_Size+0xfea4>
   10ea0:	5ddb0000 	ldclpl	0, cr0, [fp]
   10ea4:	e3100000 	tst	r0, #0
   10ea8:	01000002 	tsteq	r0, r2
   10eac:	0097165c 	addseq	r1, r7, ip, asr r6
   10eb0:	5e030000 	cdppl	0, 0, cr0, cr3, cr0, {0}
   10eb4:	5dff0000 	ldclpl	0, cr0, [pc]	; 10ebc <_Min_Stack_Size+0xfebc>
   10eb8:	f5100000 			; <UNDEFINED> instruction: 0xf5100000
   10ebc:	01000000 	mrseq	r0, (UNDEF: 0)
   10ec0:	0097255c 	addseq	r2, r7, ip, asr r5
   10ec4:	5e270000 	cdppl	0, 2, cr0, cr7, cr0, {0}
   10ec8:	5e230000 	cdppl	0, 2, cr0, cr3, cr0, {0}
   10ecc:	db100000 	blle	410ed4 <__RAM_SIZE+0x310ed4>
   10ed0:	01000021 	tsteq	r0, r1, lsr #32
   10ed4:	00a8175d 	adceq	r1, r8, sp, asr r7
   10ed8:	5e4b0000 	cdppl	0, 4, cr0, cr11, cr0, {0}
   10edc:	5e470000 	cdppl	0, 4, cr0, cr7, cr0, {0}
   10ee0:	49100000 	ldmdbmi	r0, {}	; <UNPREDICTABLE>
   10ee4:	0100001a 	tsteq	r0, sl, lsl r0
   10ee8:	0097285d 	addseq	r2, r7, sp, asr r8
   10eec:	5e6f0000 	cdppl	0, 6, cr0, cr15, cr0, {0}
   10ef0:	5e6b0000 	cdppl	0, 6, cr0, cr11, cr0, {0}
   10ef4:	43100000 	tstmi	r0, #0
   10ef8:	01000027 	tsteq	r0, r7, lsr #32
   10efc:	0097395d 	addseq	r3, r7, sp, asr r9
   10f00:	5e930000 	cdppl	0, 9, cr0, cr3, cr0, {0}
   10f04:	5e8f0000 	cdppl	0, 8, cr0, cr15, cr0, {0}
   10f08:	e2110000 	ands	r0, r1, #0
   10f0c:	0100000e 	tsteq	r0, lr
   10f10:	00970160 	addseq	r0, r7, r0, ror #2
   10f14:	5eb70000 	cdppl	0, 11, cr0, cr7, cr0, {0}
   10f18:	5eb30000 	cdppl	0, 11, cr0, cr3, cr0, {0}
   10f1c:	fa110000 	blx	450f24 <__RAM_SIZE+0x350f24>
   10f20:	01000003 	tsteq	r0, r3
   10f24:	00971162 	addseq	r1, r7, r2, ror #2
   10f28:	5ee30000 	cdppl	0, 14, cr0, cr3, cr0, {0}
   10f2c:	5ed50000 	cdppl	0, 13, cr0, cr5, cr0, {0}
   10f30:	5d110000 	ldcpl	0, cr0, [r1, #-0]
   10f34:	01000027 	tsteq	r0, r7, lsr #32
   10f38:	00971163 	addseq	r1, r7, r3, ror #2
   10f3c:	5f420000 	svcpl	0x00420000
   10f40:	5f3c0000 	svcpl	0x003c0000
   10f44:	69120000 	ldmdbvs	r2, {}	; <UNPREDICTABLE>
   10f48:	11640100 	cmnne	r4, r0, lsl #2
   10f4c:	000000a8 	andeq	r0, r0, r8, lsr #1
   10f50:	00005f70 	andeq	r5, r0, r0, ror pc
   10f54:	00005f6c 	andeq	r5, r0, ip, ror #30
   10f58:	000ffb11 	andeq	pc, pc, r1, lsl fp	; <UNPREDICTABLE>
   10f5c:	12650100 	rsbne	r0, r5, #0, 2
   10f60:	00000592 	muleq	r0, r2, r5
   10f64:	00005f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
   10f68:	00005f8f 	andeq	r5, r0, pc, lsl #31
   10f6c:	00041b11 	andeq	r1, r4, r1, lsl fp
   10f70:	12660100 	rsbne	r0, r6, #0, 2
   10f74:	00000076 	andeq	r0, r0, r6, ror r0
   10f78:	00005fb7 			; <UNDEFINED> instruction: 0x00005fb7
   10f7c:	00005fb1 			; <UNDEFINED> instruction: 0x00005fb1
   10f80:	000ead11 	andeq	sl, lr, r1, lsl sp
   10f84:	12670100 	rsbne	r0, r7, #0, 2
   10f88:	0000058c 	andeq	r0, r0, ip, lsl #11
   10f8c:	00005ffa 	strdeq	r5, [r0], -sl
   10f90:	00005ff2 	strdeq	r5, [r0], -r2
   10f94:	001fb011 	andseq	fp, pc, r1, lsl r0	; <UNPREDICTABLE>
   10f98:	12690100 	rsbne	r0, r9, #0, 2
   10f9c:	00000592 	muleq	r0, r2, r5
   10fa0:	00006044 	andeq	r6, r0, r4, asr #32
   10fa4:	00006040 	andeq	r6, r0, r0, asr #32
   10fa8:	00091913 	andeq	r1, r9, r3, lsl r9
   10fac:	002d7200 	eoreq	r7, sp, r0, lsl #4
   10fb0:	2d720110 	ldfcse	f0, [r2, #-64]!	; 0xffffffc0
   10fb4:	2d781000 	ldclcs	0, cr1, [r8, #-0]
   10fb8:	83011000 	movwhi	r1, #4096	; 0x1000
   10fbc:	0007d509 	andeq	sp, r7, r9, lsl #10
   10fc0:	092c1400 	stmdbeq	ip!, {sl, ip}
   10fc4:	60640000 	rsbvs	r0, r4, r0
   10fc8:	60620000 	rsbvs	r0, r2, r0
   10fcc:	57150000 	ldrpl	r0, [r5, -r0]
   10fd0:	72000009 	andvc	r0, r0, #9
   10fd4:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
   10fd8:	10002d72 	andne	r2, r0, r2, ror sp
   10fdc:	10002d76 	andne	r2, r0, r6, ror sp
   10fe0:	13025602 	movwne	r5, #9730	; 0x2602
   10fe4:	00096a14 	andeq	r6, r9, r4, lsl sl
   10fe8:	00607900 	rsbeq	r7, r0, r0, lsl #18
   10fec:	00607700 	rsbeq	r7, r0, r0, lsl #14
   10ff0:	13000000 	movwne	r0, #0
   10ff4:	0000093a 	andeq	r0, r0, sl, lsr r9
   10ff8:	10002d80 	andne	r2, r0, r0, lsl #27
   10ffc:	002d8001 	eoreq	r8, sp, r1
   11000:	002d8410 	eoreq	r8, sp, r0, lsl r4
   11004:	09890110 	stmibeq	r9, {r4, r8}
   11008:	000007fc 	strdeq	r0, [r0], -ip
   1100c:	00094916 	andeq	r4, r9, r6, lsl r9
   11010:	00608e00 	rsbeq	r8, r0, r0, lsl #28
   11014:	00608c00 	rsbeq	r8, r0, r0, lsl #24
   11018:	19130000 	ldmdbne	r3, {}	; <UNPREDICTABLE>
   1101c:	c8000009 	stmdagt	r0, {r0, r3}
   11020:	0110002d 	tsteq	r0, sp, lsr #32
   11024:	10002dc8 	andne	r2, r0, r8, asr #27
   11028:	10002dce 	andne	r2, r0, lr, asr #27
   1102c:	4709c901 	strmi	ip, [r9, -r1, lsl #18]
   11030:	14000008 	strne	r0, [r0], #-8
   11034:	0000092c 	andeq	r0, r0, ip, lsr #18
   11038:	000060a3 	andeq	r6, r0, r3, lsr #1
   1103c:	000060a1 	andeq	r6, r0, r1, lsr #1
   11040:	00095715 	andeq	r5, r9, r5, lsl r7
   11044:	002dc800 	eoreq	ip, sp, r0, lsl #16
   11048:	2dc80410 	cfstrdcs	mvd0, [r8, #64]	; 0x40
   1104c:	2dcc1000 	stclcs	0, cr1, [ip]
   11050:	56021000 	strpl	r1, [r2], -r0
   11054:	6a141302 	bvs	515c64 <__RAM_SIZE+0x415c64>
   11058:	b8000009 	stmdalt	r0, {r0, r3}
   1105c:	b6000060 	strlt	r0, [r0], -r0, rrx
   11060:	00000060 	andeq	r0, r0, r0, rrx
   11064:	093a1300 	ldmdbeq	sl!, {r8, r9, ip}
   11068:	2dd60000 	ldclcs	0, cr0, [r6]
   1106c:	d6011000 	strle	r1, [r1], -r0
   11070:	da10002d 	ble	41112c <__RAM_SIZE+0x31112c>
   11074:	0110002d 	tsteq	r0, sp, lsr #32
   11078:	086e09cf 	stmdaeq	lr!, {r0, r1, r2, r3, r6, r7, r8, fp}^
   1107c:	49160000 	ldmdbmi	r6, {}	; <UNPREDICTABLE>
   11080:	cd000009 	stcgt	0, cr0, [r0, #-36]	; 0xffffffdc
   11084:	cb000060 	blgt	1120c <_Min_Stack_Size+0x1020c>
   11088:	00000060 	andeq	r0, r0, r0, rrx
   1108c:	00097817 	andeq	r7, r9, r7, lsl r8
   11090:	002e1200 	eoreq	r1, lr, r0, lsl #4
   11094:	2e120110 	mrccs	1, 0, r0, cr2, cr0, {0}
   11098:	2e161000 	cdpcs	0, 1, cr1, cr6, cr0, {0}
   1109c:	1d011000 	stcne	0, cr1, [r1, #-0]
   110a0:	08961101 	ldmeq	r6, {r0, r8, ip}
   110a4:	8b140000 	blhi	5110ac <__RAM_SIZE+0x4110ac>
   110a8:	e2000009 	and	r0, r0, #9
   110ac:	e0000060 	and	r0, r0, r0, rrx
   110b0:	00000060 	andeq	r0, r0, r0, rrx
   110b4:	00097817 	andeq	r7, r9, r7, lsl r8
   110b8:	002e1e00 	eoreq	r1, lr, r0, lsl #28
   110bc:	2e1e0110 	mrccs	1, 0, r0, cr14, cr0, {0}
   110c0:	2e221000 	cdpcs	0, 2, cr1, cr2, cr0, {0}
   110c4:	21011000 	mrscs	r1, (UNDEF: 1)
   110c8:	08be1501 	ldmeq	lr!, {r0, r8, sl, ip}
   110cc:	8b140000 	blhi	5110d4 <__RAM_SIZE+0x4110d4>
   110d0:	f7000009 			; <UNDEFINED> instruction: 0xf7000009
   110d4:	f5000060 			; <UNDEFINED> instruction: 0xf5000060
   110d8:	00000060 	andeq	r0, r0, r0, rrx
   110dc:	002dde18 	eoreq	sp, sp, r8, lsl lr
   110e0:	00099910 	andeq	r9, r9, r0, lsl r9
   110e4:	2e541900 	vnmlscs.f16	s3, s8, s0	; <UNPREDICTABLE>
   110e8:	09a81000 	stmibeq	r8!, {ip}
   110ec:	011a0000 	tsteq	sl, r0
   110f0:	00770250 	rsbseq	r0, r7, r0, asr r2
   110f4:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
   110f8:	011a0079 	tsteq	sl, r9, ror r0
   110fc:	00780252 	rsbseq	r0, r8, r2, asr r2
   11100:	0253011a 	subseq	r0, r3, #-2147483642	; 0x80000006
   11104:	021a007a 	andseq	r0, sl, #122	; 0x7a
   11108:	7602007d 			; <UNDEFINED> instruction: 0x7602007d
   1110c:	7d021a00 	vstrvc	s2, [r2, #-0]
   11110:	04910304 	ldreq	r0, [r1], #772	; 0x304
   11114:	7d021a06 	vstrvc	s2, [r2, #-24]	; 0xffffffe8
   11118:	08910308 	ldmeq	r1, {r3, r8, r9}
   1111c:	7d021a06 	vstrvc	s2, [r2, #-24]	; 0xffffffe8
   11120:	0c91030c 	ldceq	3, cr0, [r1], {12}
   11124:	7d021a06 	vstrvc	s2, [r2, #-24]	; 0xffffffe8
   11128:	10910310 	addsne	r0, r1, r0, lsl r3
   1112c:	7d021a06 	vstrvc	s2, [r2, #-24]	; 0xffffffe8
   11130:	14910314 	ldrne	r0, [r1], #788	; 0x314
   11134:	1b000006 	blne	11154 <_Min_Stack_Size+0x10154>
   11138:	00000f18 	andeq	r0, r0, r8, lsl pc
   1113c:	37025202 	strcc	r5, [r2, -r2, lsl #4]
   11140:	00009701 	andeq	r9, r0, r1, lsl #14
   11144:	093a0300 	ldmdbeq	sl!, {r8, r9}
   11148:	a11c0000 	tstge	ip, r0
   1114c:	0200000e 	andeq	r0, r0, #14
   11150:	97060254 	smlsdls	r6, r4, r2, r0
   11154:	00000000 	andeq	r0, r0, r0
   11158:	000e8d1d 	andeq	r8, lr, sp, lsl sp
   1115c:	02490200 	subeq	r0, r9, #0, 4
   11160:	57030137 	smladxpl	r3, r7, r1, r0
   11164:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
   11168:	00000ea1 	andeq	r0, r0, r1, lsr #29
   1116c:	50024902 	andpl	r4, r2, r2, lsl #18
   11170:	00000097 	muleq	r0, r7, r0
   11174:	0eb61b00 	vmoveq.f64	d1, #96	; 0x3f000000  0.5
   11178:	32020000 	andcc	r0, r2, #0
   1117c:	97013702 	strls	r3, [r1, -r2, lsl #14]
   11180:	03000000 	movweq	r0, #0
   11184:	00000978 	andeq	r0, r0, r8, ror r9
   11188:	000ea51c 	andeq	sl, lr, ip, lsl r5
   1118c:	02340200 	eorseq	r0, r4, #0, 4
   11190:	00009706 	andeq	r9, r0, r6, lsl #14
   11194:	6e1b0000 	cdpvs	0, 1, cr0, cr11, cr0, {0}
   11198:	02000019 	andeq	r0, r0, #25
   1119c:	013701fa 	teqeq	r7, sl	; <illegal shifter operand>
   111a0:	00000097 	muleq	r0, r7, r0
   111a4:	00099903 	andeq	r9, r9, r3, lsl #18
   111a8:	1a791c00 	bne	1e581b0 <__RAM_SIZE+0x1d581b0>
   111ac:	fc020000 	stc2	0, cr0, [r2], {-0}
   111b0:	00970601 	addseq	r0, r7, r1, lsl #12
   111b4:	1f000000 	svcne	0x00000000
   111b8:	1f7c0101 	svcne	0x007c0101
   111bc:	1f7c0000 	svcne	0x007c0000
   111c0:	1c040000 	stcne	0, cr0, [r4], {-0}
   111c4:	011f0d01 	tsteq	pc, r1, lsl #26
   111c8:	001a1801 	andseq	r1, sl, r1, lsl #16
   111cc:	001a1800 	andseq	r1, sl, r0, lsl #16
   111d0:	06d50300 	ldrbeq	r0, [r5], r0, lsl #6
   111d4:	0022000d 	eoreq	r0, r2, sp
   111d8:	00020000 	andeq	r0, r2, r0
   111dc:	0000311d 	andeq	r3, r0, sp, lsl r1
   111e0:	5f500104 	svcpl	0x00500104
   111e4:	2eb80000 	cdpcs	0, 11, cr0, cr8, cr0, {0}
   111e8:	2f281000 	svccs	0x00281000
   111ec:	27a01000 	strcs	r1, [r0, r0]!
   111f0:	06410000 	strbeq	r0, [r1], -r0
   111f4:	27c00000 	strbcs	r0, [r0, r0]
   111f8:	80010000 	andhi	r0, r1, r0
   111fc:	00000022 	andeq	r0, r0, r2, lsr #32
   11200:	31310002 	teqcc	r1, r2
   11204:	01040000 	mrseq	r0, (UNDEF: 4)
   11208:	00005fd6 	ldrdeq	r5, [r0], -r6
   1120c:	10002f28 	andne	r2, r0, r8, lsr #30
   11210:	10003008 	andne	r3, r0, r8
   11214:	000027ce 	andeq	r2, r0, lr, asr #15
   11218:	00000641 	andeq	r0, r0, r1, asr #12
   1121c:	000027c0 	andeq	r2, r0, r0, asr #15
   11220:	00228001 	eoreq	r8, r2, r1
   11224:	00020000 	andeq	r0, r2, r0
   11228:	00003145 	andeq	r3, r0, r5, asr #2
   1122c:	60950104 	addsvs	r0, r5, r4, lsl #2
   11230:	30080000 	andcc	r0, r8, r0
   11234:	30d81000 	sbcscc	r1, r8, r0
   11238:	27f61000 	ldrbcs	r1, [r6, r0]!
   1123c:	06410000 	strbeq	r0, [r1], -r0
   11240:	27c00000 	strbcs	r0, [r0, r0]
   11244:	80010000 	andhi	r0, r1, r0
   11248:	00000022 	andeq	r0, r0, r2, lsr #32
   1124c:	31590002 	cmpcc	r9, r2
   11250:	01040000 	mrseq	r0, (UNDEF: 4)
   11254:	00006166 	andeq	r6, r0, r6, ror #2
   11258:	100030d8 	ldrdne	r3, [r0], -r8
   1125c:	10003118 	andne	r3, r0, r8, lsl r1
   11260:	0000283d 	andeq	r2, r0, sp, lsr r8
   11264:	00000641 	andeq	r0, r0, r1, asr #12
   11268:	000027c0 	andeq	r2, r0, r0, asr #15
   1126c:	00228001 	eoreq	r8, r2, r1
   11270:	00020000 	andeq	r0, r2, r0
   11274:	0000316d 	andeq	r3, r0, sp, ror #2
   11278:	61f90104 	mvnsvs	r0, r4, lsl #2
   1127c:	31180000 	tstcc	r8, r0
   11280:	31d01000 	bicscc	r1, r0, r0
   11284:	28871000 	stmcs	r7, {ip}
   11288:	06410000 	strbeq	r0, [r1], -r0
   1128c:	27c00000 	strbcs	r0, [r0, r0]
   11290:	80010000 	andhi	r0, r1, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
}
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
        if(ch == '\n' || it >= size) {
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	0b002403 	bleq	9034 <_Min_Stack_Size+0x8034>
      24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      28:	04000008 	streq	r0, [r0], #-8
      2c:	0b0b000f 	bleq	2c0070 <__RAM_SIZE+0x1c0070>
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	26050000 	strcs	r0, [r5], -r0
      34:	00134900 	andseq	r4, r3, r0, lsl #18
        _tx_thread_system_ni_resume(thread_ptr);
      38:	00160600 	andseq	r0, r6, r0, lsl #12
      3c:	0b3a0e03 	bleq	e83850 <__RAM_SIZE+0xd83850>
}
      40:	0b390b3b 	bleq	e42d34 <__RAM_SIZE+0xd42d34>
      44:	00001349 	andeq	r1, r0, r9, asr #6
      48:	03011307 	movweq	r1, #4871	; 0x1307
      4c:	3a0b0b0e 	bcc	2c2c8c <__RAM_SIZE+0x1c2c8c>
      50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      54:	0013010b 	andseq	r0, r3, fp, lsl #2
      58:	000d0800 	andeq	r0, sp, r0, lsl #16
      5c:	0b3a0e03 	bleq	e83870 <__RAM_SIZE+0xd83870>
      60:	0b39053b 	bleq	e41554 <__RAM_SIZE+0xd41554>
      64:	0a381349 	beq	e04d90 <__RAM_SIZE+0xd04d90>
      68:	15090000 	strne	r0, [r9, #-0]
      6c:	010c2701 	tsteq	ip, r1, lsl #14
      70:	0a000013 	beq	c4 <__STACKSEAL_SIZE+0xc4>
      74:	13490005 	movtne	r0, #36869	; 0x9005
      78:	0f0b0000 	svceq	0x000b0000
      7c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
      80:	0c000013 	stceq	0, cr0, [r0], {19}
      84:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      8c:	13490b39 	movtne	r0, #39737	; 0x9b39
      90:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
      94:	030c3f01 	movweq	r3, #52993	; 0xcf01
      98:	3b0b3a0e 	blcc	2ce8d8 <__RAM_SIZE+0x1ce8d8>
      9c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
      a0:	1113490c 	tstne	r3, ip, lsl #18
      a4:	40011201 	andmi	r1, r1, r1, lsl #4
      a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
      ac:	00001301 	andeq	r1, r0, r1, lsl #6
      b0:	0300340e 	movweq	r3, #1038	; 0x40e
      b4:	3b0b3a0e 	blcc	2ce8f4 <__RAM_SIZE+0x1ce8f4>
      b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      bc:	b7060213 	smladlt	r6, r3, r2, r0
      c0:	00000642 	andeq	r0, r0, r2, asr #12
      c4:	0182890f 	orreq	r8, r2, pc, lsl #18
      c8:	31011100 	mrscc	r1, (UNDEF: 17)
      cc:	10000013 	andne	r0, r0, r3, lsl r0
      d0:	01018289 	smlabbeq	r1, r9, r2, r8
      d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
      d8:	00001301 	andeq	r1, r0, r1, lsl #6
      dc:	01828a11 	orreq	r8, r2, r1, lsl sl
      e0:	910a0200 	mrsls	r0, R10_fiq
      e4:	00000a42 	andeq	r0, r0, r2, asr #20
      e8:	01828912 	orreq	r8, r2, r2, lsl r9
      ec:	31011101 	tstcc	r1, r1, lsl #2
      f0:	13000013 	movwne	r0, #19
      f4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 44 <__STACKSEAL_SIZE+0x44>
      f8:	0b3a0e03 	bleq	e8390c <__RAM_SIZE+0xd8390c>
      fc:	0b390b3b 	bleq	e42df0 <__RAM_SIZE+0xd42df0>
     100:	01110c27 	tsteq	r1, r7, lsr #24
     104:	06400112 			; <UNDEFINED> instruction: 0x06400112
     108:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     10c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     110:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     114:	0b3b0b3a 	bleq	ec2e04 <__RAM_SIZE+0xdc2e04>
     118:	13490b39 	movtne	r0, #39737	; 0x9b39
     11c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     120:	15000006 	strne	r0, [r0, #-6]
     124:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     128:	0b3b0b3a 	bleq	ec2e18 <__RAM_SIZE+0xdc2e18>
     12c:	13490b39 	movtne	r0, #39737	; 0x9b39
     130:	00000a02 	andeq	r0, r0, r2, lsl #20
     134:	49010116 	stmdbmi	r1, {r1, r2, r4, r8}
     138:	00130113 	andseq	r0, r3, r3, lsl r1
     13c:	00211700 	eoreq	r1, r1, r0, lsl #14
     140:	052f1349 	streq	r1, [pc, #-841]!	; fffffdff <__RAM_segment_used_end__+0xc7effdff>
     144:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     148:	3a0e0301 	bcc	380d54 <__RAM_SIZE+0x280d54>
     14c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     150:	110c270b 	tstne	ip, fp, lsl #14
     154:	40011201 	andmi	r1, r1, r1, lsl #4
     158:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     15c:	00001301 	andeq	r1, r0, r1, lsl #6
     160:	03003419 	movweq	r3, #1049	; 0x419
     164:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     168:	000a020c 	andeq	r0, sl, ip, lsl #4
     16c:	00211a00 	eoreq	r1, r1, r0, lsl #20
     170:	0b2f1349 	bleq	bc4e9c <__RAM_SIZE+0xac4e9c>
     174:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
     178:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     17c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     180:	0b3a0e03 	bleq	e83994 <__RAM_SIZE+0xd83994>
     184:	0b390b3b 	bleq	e42e78 <__RAM_SIZE+0xd42e78>
     188:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     18c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     190:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     194:	0b3a0e03 	bleq	e839a8 <__RAM_SIZE+0xd839a8>
     198:	00000b3b 	andeq	r0, r0, fp, lsr fp
     19c:	3f002e1d 	svccc	0x00002e1d
     1a0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     1a4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     1a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1ac:	00000b39 	andeq	r0, r0, r9, lsr fp
     1b0:	01110100 	tsteq	r1, r0, lsl #2
     1b4:	0b130e25 	bleq	4c3a50 <__RAM_SIZE+0x3c3a50>
     1b8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     1bc:	01110655 	tsteq	r1, r5, asr r6
     1c0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     1c4:	24020000 	strcs	r0, [r2], #-0
     1c8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     1cc:	000e030b 	andeq	r0, lr, fp, lsl #6
     1d0:	00160300 	andseq	r0, r6, r0, lsl #6
     1d4:	0b3a0e03 	bleq	e839e8 <__RAM_SIZE+0xd839e8>
     1d8:	0b390b3b 	bleq	e42ecc <__RAM_SIZE+0xd42ecc>
     1dc:	00001349 	andeq	r1, r0, r9, asr #6
     1e0:	0b002404 	bleq	91f8 <_Min_Stack_Size+0x81f8>
     1e4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     1e8:	05000008 	streq	r0, [r0, #-8]
     1ec:	13490035 	movtne	r0, #36917	; 0x9035
     1f0:	26060000 	strcs	r0, [r6], -r0
     1f4:	00134900 	andseq	r4, r3, r0, lsl #18
     1f8:	01130700 	tsteq	r3, r0, lsl #14
     1fc:	0b3a050b 	bleq	e81630 <__RAM_SIZE+0xd81630>
     200:	0b39053b 	bleq	e416f4 <__RAM_SIZE+0xd416f4>
     204:	00001301 	andeq	r1, r0, r1, lsl #6
     208:	03000d08 	movweq	r0, #3336	; 0xd08
     20c:	3b0b3a0e 	blcc	2cea4c <__RAM_SIZE+0x1cea4c>
     210:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     214:	000a3813 	andeq	r3, sl, r3, lsl r8
     218:	000d0900 	andeq	r0, sp, r0, lsl #18
     21c:	0b3a0803 	bleq	e82230 <__RAM_SIZE+0xd82230>
     220:	0b39053b 	bleq	e41714 <__RAM_SIZE+0xd41714>
     224:	0a381349 	beq	e04f50 <__RAM_SIZE+0xd04f50>
     228:	010a0000 	mrseq	r0, (UNDEF: 10)
     22c:	01134901 	tsteq	r3, r1, lsl #18
     230:	0b000013 	bleq	284 <__STACKSEAL_SIZE+0x284>
     234:	13490021 	movtne	r0, #36897	; 0x9021
     238:	00000b2f 	andeq	r0, r0, pc, lsr #22
     23c:	0300160c 	movweq	r1, #1548	; 0x60c
     240:	3b0b3a0e 	blcc	2cea80 <__RAM_SIZE+0x1cea80>
     244:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     248:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     24c:	0b0b000f 	bleq	2c0290 <__RAM_SIZE+0x1c0290>
     250:	00001349 	andeq	r1, r0, r9, asr #6
     254:	2700150e 	strcs	r1, [r0, -lr, lsl #10]
     258:	0f00000c 	svceq	0x0000000c
     25c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     260:	0b3b0b3a 	bleq	ec2f50 <__RAM_SIZE+0xdc2f50>
     264:	13490b39 	movtne	r0, #39737	; 0x9b39
     268:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     26c:	21100000 	tstcs	r0, r0
     270:	2f134900 	svccs	0x00134900
     274:	11000005 	tstne	r0, r5
     278:	13470034 	movtne	r0, #28724	; 0x7034
     27c:	0b3b0b3a 	bleq	ec2f6c <__RAM_SIZE+0xdc2f6c>
     280:	0a020b39 	beq	82f6c <SYSTICK_CYCLES+0x59f2d>
     284:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     288:	030c3f00 	movweq	r3, #52992	; 0xcf00
     28c:	3b0b3a0e 	blcc	2ceacc <__RAM_SIZE+0x1ceacc>
     290:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     294:	1201110c 	andne	r1, r1, #12, 2
     298:	970a4001 	strls	r4, [sl, -r1]
     29c:	00000c42 	andeq	r0, r0, r2, asr #24
     2a0:	01110100 	tsteq	r1, r0, lsl #2
     2a4:	0b130e25 	bleq	4c3b40 <__RAM_SIZE+0x3c3b40>
     2a8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     2ac:	01110655 	tsteq	r1, r5, asr r6
     2b0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     2b4:	24020000 	strcs	r0, [r2], #-0
     2b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     2bc:	000e030b 	andeq	r0, lr, fp, lsl #6
     2c0:	00260300 	eoreq	r0, r6, r0, lsl #6
     2c4:	00001349 	andeq	r1, r0, r9, asr #6
     2c8:	03001604 	movweq	r1, #1540	; 0x604
     2cc:	3b0b3a0e 	blcc	2ceb0c <__RAM_SIZE+0x1ceb0c>
     2d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     2d4:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     2d8:	0b0b0024 	bleq	2c0370 <__RAM_SIZE+0x1c0370>
     2dc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     2e0:	13060000 	movwne	r0, #24576	; 0x6000
     2e4:	0b0e0301 	bleq	380ef0 <__RAM_SIZE+0x280ef0>
     2e8:	3b0b3a0b 	blcc	2ceb1c <__RAM_SIZE+0x1ceb1c>
     2ec:	0013010b 	andseq	r0, r3, fp, lsl #2
     2f0:	000d0700 	andeq	r0, sp, r0, lsl #14
     2f4:	13490e03 	movtne	r0, #40451	; 0x9e03
     2f8:	0c340a38 			; <UNDEFINED> instruction: 0x0c340a38
     2fc:	0f080000 	svceq	0x00080000
     300:	000b0b00 	andeq	r0, fp, r0, lsl #22
     304:	000f0900 	andeq	r0, pc, r0, lsl #18
     308:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     30c:	150a0000 	strne	r0, [sl, #-0]
     310:	010c2701 	tsteq	ip, r1, lsl #14
     314:	0b000013 	bleq	368 <__STACKSEAL_SIZE+0x368>
     318:	13490005 	movtne	r0, #36869	; 0x9005
     31c:	130c0000 	movwne	r0, #49152	; 0xc000
     320:	3a0b0b01 	bcc	2c2f2c <__RAM_SIZE+0x1c2f2c>
     324:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     328:	0013010b 	andseq	r0, r3, fp, lsl #2
     32c:	000d0d00 	andeq	r0, sp, r0, lsl #26
     330:	0b3a0803 	bleq	e82344 <__RAM_SIZE+0xd82344>
     334:	0b390b3b 	bleq	e43028 <__RAM_SIZE+0xd43028>
     338:	0a381349 	beq	e05064 <__RAM_SIZE+0xd05064>
     33c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     340:	030c3f01 	movweq	r3, #52993	; 0xcf01
     344:	3b0b3a0e 	blcc	2ceb84 <__RAM_SIZE+0x1ceb84>
     348:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     34c:	1113490c 	tstne	r3, ip, lsl #18
     350:	40011201 	andmi	r1, r1, r1, lsl #4
     354:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     358:	00001301 	andeq	r1, r0, r1, lsl #6
     35c:	0300050f 	movweq	r0, #1295	; 0x50f
     360:	3b0b3a08 	blcc	2ceb88 <__RAM_SIZE+0x1ceb88>
     364:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     368:	b7060213 	smladlt	r6, r3, r2, r0
     36c:	00000642 	andeq	r0, r0, r2, asr #12
     370:	03000510 	movweq	r0, #1296	; 0x510
     374:	3b0b3a0e 	blcc	2cebb4 <__RAM_SIZE+0x1cebb4>
     378:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     37c:	000a0213 	andeq	r0, sl, r3, lsl r2
     380:	00181100 	andseq	r1, r8, r0, lsl #2
     384:	34120000 	ldrcc	r0, [r2], #-0
     388:	3a080300 	bcc	200f90 <__RAM_SIZE+0x100f90>
     38c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     390:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     394:	1300000a 	movwne	r0, #10
     398:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     39c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     3a4:	00000a02 	andeq	r0, r0, r2, lsl #20
     3a8:	03003414 	movweq	r3, #1044	; 0x414
     3ac:	3b0b3a08 	blcc	2cebd4 <__RAM_SIZE+0x1cebd4>
     3b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3b4:	b7060213 	smladlt	r6, r3, r2, r0
     3b8:	00000642 	andeq	r0, r0, r2, asr #12
     3bc:	01828915 	orreq	r8, r2, r5, lsl r9
     3c0:	31011101 	tstcc	r1, r1, lsl #2
     3c4:	16000013 			; <UNDEFINED> instruction: 0x16000013
     3c8:	0001828a 	andeq	r8, r1, sl, lsl #5
     3cc:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     3d0:	1700000a 	strne	r0, [r0, -sl]
     3d4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     3d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3dc:	13490b39 	movtne	r0, #39737	; 0x9b39
     3e0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     3e4:	18000006 	stmdane	r0, {r1, r2}
     3e8:	13490101 	movtne	r0, #37121	; 0x9101
     3ec:	00001301 	andeq	r1, r0, r1, lsl #6
     3f0:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
     3f4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     3f8:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     3fc:	0b3a0e03 	bleq	e83c10 <__RAM_SIZE+0xd83c10>
     400:	0b39053b 	bleq	e418f4 <__RAM_SIZE+0xd418f4>
     404:	13490c27 	movtne	r0, #39975	; 0x9c27
     408:	01120111 	tsteq	r2, r1, lsl r1
     40c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     410:	0013010c 	andseq	r0, r3, ip, lsl #2
     414:	00051b00 	andeq	r1, r5, r0, lsl #22
     418:	0b3a0803 	bleq	e8242c <__RAM_SIZE+0xd8242c>
     41c:	0b39053b 	bleq	e41910 <__RAM_SIZE+0xd41910>
     420:	0a021349 	beq	8514c <SYSTICK_CYCLES+0x5c10d>
     424:	341c0000 	ldrcc	r0, [ip], #-0
     428:	3a0e0300 	bcc	381030 <__RAM_SIZE+0x281030>
     42c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     430:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     434:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     438:	0b1d0000 	bleq	740440 <__RAM_SIZE+0x640440>
     43c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     440:	00130101 	andseq	r0, r3, r1, lsl #2
     444:	010b1e00 	tsteq	fp, r0, lsl #28
     448:	13010655 	movwne	r0, #5717	; 0x1655
     44c:	341f0000 	ldrcc	r0, [pc], #-0	; 454 <STACK_SIZE+0x54>
     450:	3a0e0300 	bcc	381058 <__RAM_SIZE+0x281058>
     454:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     458:	0013490b 	andseq	r4, r3, fp, lsl #18
     45c:	82892000 	addhi	r2, r9, #0
     460:	01110101 	tsteq	r1, r1, lsl #2
     464:	13011331 	movwne	r1, #4913	; 0x1331
     468:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     46c:	11010182 	smlabbne	r1, r2, r1, r0
     470:	00130101 	andseq	r0, r3, r1, lsl #2
     474:	82892200 	addhi	r2, r9, #0, 4
     478:	01110101 	tsteq	r1, r1, lsl #2
     47c:	1d230000 	stcne	0, cr0, [r3, #-0]
     480:	11133101 	tstne	r3, r1, lsl #2
     484:	58011201 	stmdapl	r1, {r0, r9, ip}
     488:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     48c:	0013010b 	andseq	r0, r3, fp, lsl #2
     490:	00052400 	andeq	r2, r5, r0, lsl #8
     494:	06021331 			; <UNDEFINED> instruction: 0x06021331
     498:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     49c:	00052500 	andeq	r2, r5, r0, lsl #10
     4a0:	00001331 	andeq	r1, r0, r1, lsr r3
     4a4:	31003426 	tstcc	r0, r6, lsr #8
     4a8:	b7060213 	smladlt	r6, r3, r2, r0
     4ac:	00000642 	andeq	r0, r0, r2, asr #12
     4b0:	31011d27 	tstcc	r1, r7, lsr #26
     4b4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     4b8:	01110542 	tsteq	r1, r2, asr #10
     4bc:	0b580112 	bleq	160090c <__RAM_SIZE+0x150090c>
     4c0:	0b570559 	bleq	15c1a2c <__RAM_SIZE+0x14c1a2c>
     4c4:	00001301 	andeq	r1, r0, r1, lsl #6
     4c8:	01828928 	orreq	r8, r2, r8, lsr #18
     4cc:	93011101 	movwls	r1, #4353	; 0x1101
     4d0:	13010a42 	movwne	r0, #6722	; 0x1a42
     4d4:	17290000 	strne	r0, [r9, -r0]!
     4d8:	3a0b0b01 	bcc	2c30e4 <__RAM_SIZE+0x1c30e4>
     4dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4e0:	0013010b 	andseq	r0, r3, fp, lsl #2
     4e4:	000d2a00 	andeq	r2, sp, r0, lsl #20
     4e8:	0b3a0803 	bleq	e824fc <__RAM_SIZE+0xd824fc>
     4ec:	0b39053b 	bleq	e419e0 <__RAM_SIZE+0xd419e0>
     4f0:	00001349 	andeq	r1, r0, r9, asr #6
     4f4:	0182892b 	orreq	r8, r2, fp, lsr #18
     4f8:	31011100 	mrscc	r1, (UNDEF: 17)
     4fc:	2c000013 	stccs	0, cr0, [r0], {19}
     500:	0e03012e 	adfeqsp	f0, f3, #0.5
     504:	0b3b0b3a 	bleq	ec31f4 <__RAM_SIZE+0xdc31f4>
     508:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     50c:	01111349 	tsteq	r1, r9, asr #6
     510:	06400112 			; <UNDEFINED> instruction: 0x06400112
     514:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     518:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     51c:	08030005 	stmdaeq	r3, {r0, r2}
     520:	0b3b0b3a 	bleq	ec3210 <__RAM_SIZE+0xdc3210>
     524:	13490b39 	movtne	r0, #39737	; 0x9b39
     528:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     52c:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
     530:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     534:	0b3b0b3a 	bleq	ec3224 <__RAM_SIZE+0xdc3224>
     538:	13490b39 	movtne	r0, #39737	; 0x9b39
     53c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     540:	2f000006 	svccs	0x00000006
     544:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     548:	0b3b0b3a 	bleq	ec3238 <__RAM_SIZE+0xdc3238>
     54c:	13490b39 	movtne	r0, #39737	; 0x9b39
     550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     554:	30000006 	andcc	r0, r0, r6
     558:	08030034 	stmdaeq	r3, {r2, r4, r5}
     55c:	0b3b0b3a 	bleq	ec324c <__RAM_SIZE+0xdc324c>
     560:	13490b39 	movtne	r0, #39737	; 0x9b39
     564:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     568:	31000006 	tstcc	r0, r6
     56c:	0e03012e 	adfeqsp	f0, f3, #0.5
     570:	0b3b0b3a 	bleq	ec3260 <__RAM_SIZE+0xdc3260>
     574:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     578:	01111349 	tsteq	r1, r9, asr #6
     57c:	0a400112 	beq	10009cc <__RAM_SIZE+0xf009cc>
     580:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     584:	32000013 	andcc	r0, r0, #19
     588:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     58c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     590:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     594:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     598:	000b570b 	andeq	r5, fp, fp, lsl #14
     59c:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
     5a0:	0b3a0e03 	bleq	e83db4 <__RAM_SIZE+0xd83db4>
     5a4:	0b390b3b 	bleq	e43298 <__RAM_SIZE+0xd43298>
     5a8:	13490c27 	movtne	r0, #39975	; 0x9c27
     5ac:	13010b20 	movwne	r0, #6944	; 0x1b20
     5b0:	05340000 	ldreq	r0, [r4, #-0]!
     5b4:	3a080300 	bcc	2011bc <__RAM_SIZE+0x1011bc>
     5b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5bc:	0013490b 	andseq	r4, r3, fp, lsl #18
     5c0:	00053500 	andeq	r3, r5, r0, lsl #10
     5c4:	0b3a0e03 	bleq	e83dd8 <__RAM_SIZE+0xd83dd8>
     5c8:	0b390b3b 	bleq	e432bc <__RAM_SIZE+0xd432bc>
     5cc:	00001349 	andeq	r1, r0, r9, asr #6
     5d0:	03003436 	movweq	r3, #1078	; 0x436
     5d4:	3b0b3a08 	blcc	2cedfc <__RAM_SIZE+0x1cedfc>
     5d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5dc:	37000013 	smladcc	r0, r3, r0, r0
     5e0:	0e03012e 	adfeqsp	f0, f3, #0.5
     5e4:	0b3b0b3a 	bleq	ec32d4 <__RAM_SIZE+0xdc32d4>
     5e8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5ec:	01120111 	tsteq	r2, r1, lsl r1
     5f0:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
     5f4:	0013010c 	andseq	r0, r3, ip, lsl #2
     5f8:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
     5fc:	0b3a0e03 	bleq	e83e10 <__RAM_SIZE+0xd83e10>
     600:	0b390b3b 	bleq	e432f4 <__RAM_SIZE+0xd432f4>
     604:	01110c27 	tsteq	r1, r7, lsr #24
     608:	06400112 			; <UNDEFINED> instruction: 0x06400112
     60c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     610:	39000013 	stmdbcc	r0, {r0, r1, r4}
     614:	0e03012e 	adfeqsp	f0, f3, #0.5
     618:	0b3b0b3a 	bleq	ec3308 <__RAM_SIZE+0xdc3308>
     61c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     620:	01120111 	tsteq	r2, r1, lsl r1
     624:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     628:	0013010c 	andseq	r0, r3, ip, lsl #2
     62c:	00053a00 	andeq	r3, r5, r0, lsl #20
     630:	0b3a0e03 	bleq	e83e44 <__RAM_SIZE+0xd83e44>
     634:	0b390b3b 	bleq	e43328 <__RAM_SIZE+0xd43328>
     638:	0a021349 	beq	85364 <SYSTICK_CYCLES+0x5c325>
     63c:	053b0000 	ldreq	r0, [fp, #-0]!
     640:	3a080300 	bcc	201248 <__RAM_SIZE+0x101248>
     644:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     648:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     64c:	3c00000a 	stccc	0, cr0, [r0], {10}
     650:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5a0 <STACK_SIZE+0x1a0>
     654:	40870c3c 	addmi	r0, r7, ip, lsr ip
     658:	000e030e 	andeq	r0, lr, lr, lsl #6
     65c:	002e3d00 	eoreq	r3, lr, r0, lsl #26
     660:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     664:	030e4087 	movweq	r4, #57479	; 0xe087
     668:	3b0b3a0e 	blcc	2ceea8 <__RAM_SIZE+0x1ceea8>
     66c:	000b390b 	andeq	r3, fp, fp, lsl #18
     670:	11010000 	mrsne	r0, (UNDEF: 1)
     674:	130e2501 	movwne	r2, #58625	; 0xe501
     678:	1b0e030b 	blne	3812ac <__RAM_SIZE+0x2812ac>
     67c:	1106550e 	tstne	r6, lr, lsl #10
     680:	10015201 	andne	r5, r1, r1, lsl #4
     684:	02000006 	andeq	r0, r0, #6
     688:	0b0b0024 	bleq	2c0720 <__RAM_SIZE+0x1c0720>
     68c:	0e030b3e 	vmoveq.16	d3[0], r0
     690:	16030000 	strne	r0, [r3], -r0
     694:	3a0e0300 	bcc	38129c <__RAM_SIZE+0x28129c>
     698:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     69c:	0013490b 	andseq	r4, r3, fp, lsl #18
     6a0:	00240400 	eoreq	r0, r4, r0, lsl #8
     6a4:	0b3e0b0b 	bleq	f832d8 <__RAM_SIZE+0xe832d8>
     6a8:	00000803 	andeq	r0, r0, r3, lsl #16
     6ac:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     6b0:	06000013 			; <UNDEFINED> instruction: 0x06000013
     6b4:	0b0b000f 	bleq	2c06f8 <__RAM_SIZE+0x1c06f8>
     6b8:	00001349 	andeq	r1, r0, r9, asr #6
     6bc:	3f012e07 	svccc	0x00012e07
     6c0:	3a0e030c 	bcc	3812f8 <__RAM_SIZE+0x2812f8>
     6c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     6cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     6d0:	97064001 	strls	r4, [r6, -r1]
     6d4:	13010c42 	movwne	r0, #7234	; 0x1c42
     6d8:	05080000 	streq	r0, [r8, #-0]
     6dc:	3a0e0300 	bcc	3812e4 <__RAM_SIZE+0x2812e4>
     6e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6e4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     6e8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     6ec:	34090000 	strcc	r0, [r9], #-0
     6f0:	3a080300 	bcc	2012f8 <__RAM_SIZE+0x1012f8>
     6f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     6fc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     700:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
     704:	11000182 	smlabbne	r0, r2, r1, r0
     708:	00133101 	andseq	r3, r3, r1, lsl #2
     70c:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
     710:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     714:	0b3b0b3a 	bleq	ec3404 <__RAM_SIZE+0xdc3404>
     718:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     71c:	01120111 	tsteq	r2, r1, lsl r1
     720:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     724:	0013010c 	andseq	r0, r3, ip, lsl #2
     728:	82890c00 	addhi	r0, r9, #0, 24
     72c:	01110101 	tsteq	r1, r1, lsl #2
     730:	00001331 	andeq	r1, r0, r1, lsr r3
     734:	01828a0d 	orreq	r8, r2, sp, lsl #20
     738:	910a0200 	mrsls	r0, R10_fiq
     73c:	00000a42 	andeq	r0, r0, r2, asr #20
     740:	3f002e0e 	svccc	0x00002e0e
     744:	3a0e030c 	bcc	38137c <__RAM_SIZE+0x28137c>
     748:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     74c:	110c270b 	tstne	ip, fp, lsl #14
     750:	40011201 	andmi	r1, r1, r1, lsl #4
     754:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     758:	340f0000 	strcc	r0, [pc], #-0	; 760 <STACK_SIZE+0x360>
     75c:	3a0e0300 	bcc	381364 <__RAM_SIZE+0x281364>
     760:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     764:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     768:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     76c:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     770:	030c3f00 	movweq	r3, #52992	; 0xcf00
     774:	3b0b3a0e 	blcc	2cefb4 <__RAM_SIZE+0x1cefb4>
     778:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     77c:	1113490c 	tstne	r3, ip, lsl #18
     780:	40011201 	andmi	r1, r1, r1, lsl #4
     784:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     788:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     78c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     790:	3b0b3a0e 	blcc	2cefd0 <__RAM_SIZE+0x1cefd0>
     794:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     798:	1113490c 	tstne	r3, ip, lsl #18
     79c:	40011201 	andmi	r1, r1, r1, lsl #4
     7a0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7a4:	00001301 	andeq	r1, r0, r1, lsl #6
     7a8:	03000512 	movweq	r0, #1298	; 0x512
     7ac:	3b0b3a08 	blcc	2cefd4 <__RAM_SIZE+0x1cefd4>
     7b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     7b4:	b7060213 	smladlt	r6, r3, r2, r0
     7b8:	00000642 	andeq	r0, r0, r2, asr #12
     7bc:	3f002e13 	svccc	0x00002e13
     7c0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     7c4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     7c8:	0b3b0b3a 	bleq	ec34b8 <__RAM_SIZE+0xdc34b8>
     7cc:	00000b39 	andeq	r0, r0, r9, lsr fp
     7d0:	01110100 	tsteq	r1, r0, lsl #2
     7d4:	0b130e25 	bleq	4c4070 <__RAM_SIZE+0x3c4070>
     7d8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     7dc:	01110655 	tsteq	r1, r5, asr r6
     7e0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     7e4:	24020000 	strcs	r0, [r2], #-0
     7e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7ec:	000e030b 	andeq	r0, lr, fp, lsl #6
     7f0:	00240300 	eoreq	r0, r4, r0, lsl #6
     7f4:	0b3e0b0b 	bleq	f83428 <__RAM_SIZE+0xe83428>
     7f8:	00000803 	andeq	r0, r0, r3, lsl #16
     7fc:	0b000f04 	bleq	4414 <_Min_Stack_Size+0x3414>
     800:	0500000b 	streq	r0, [r0, #-11]
     804:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     808:	0b3b0b3a 	bleq	ec34f8 <__RAM_SIZE+0xdc34f8>
     80c:	13490b39 	movtne	r0, #39737	; 0x9b39
     810:	13060000 	movwne	r0, #24576	; 0x6000
     814:	0b0e0301 	bleq	381420 <__RAM_SIZE+0x281420>
     818:	3b0b3a0b 	blcc	2cf04c <__RAM_SIZE+0x1cf04c>
     81c:	010b3905 	tsteq	fp, r5, lsl #18
     820:	07000013 	smladeq	r0, r3, r0, r0
     824:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     828:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     82c:	13490b39 	movtne	r0, #39737	; 0x9b39
     830:	00000a38 	andeq	r0, r0, r8, lsr sl
     834:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     838:	0013010c 	andseq	r0, r3, ip, lsl #2
     83c:	00050900 	andeq	r0, r5, r0, lsl #18
     840:	00001349 	andeq	r1, r0, r9, asr #6
     844:	0b000f0a 	bleq	4474 <_Min_Stack_Size+0x3474>
     848:	0013490b 	andseq	r4, r3, fp, lsl #18
     84c:	00160b00 	andseq	r0, r6, r0, lsl #22
     850:	0b3a0e03 	bleq	e84064 <__RAM_SIZE+0xd84064>
     854:	0b39053b 	bleq	e41d48 <__RAM_SIZE+0xd41d48>
     858:	00001349 	andeq	r1, r0, r9, asr #6
     85c:	3f012e0c 	svccc	0x00012e0c
     860:	3a0e030c 	bcc	381498 <__RAM_SIZE+0x281498>
     864:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     868:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     86c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     870:	97064001 	strls	r4, [r6, -r1]
     874:	13010c42 	movwne	r0, #7234	; 0x1c42
     878:	050d0000 	streq	r0, [sp, #-0]
     87c:	3a0e0300 	bcc	381484 <__RAM_SIZE+0x281484>
     880:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     884:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     888:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     88c:	340e0000 	strcc	r0, [lr], #-0
     890:	3a0e0300 	bcc	381498 <__RAM_SIZE+0x281498>
     894:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     898:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     89c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     8a0:	1d0f0000 	stcne	0, cr0, [pc, #-0]	; 8a8 <__Vectors_Size+0xe8>
     8a4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     8a8:	0b42b801 	bleq	10ae8b4 <__RAM_SIZE+0xfae8b4>
     8ac:	01120111 	tsteq	r2, r1, lsl r1
     8b0:	0b590b58 	bleq	1643618 <__RAM_SIZE+0x1543618>
     8b4:	13010b57 	movwne	r0, #6999	; 0x1b57
     8b8:	34100000 	ldrcc	r0, [r0], #-0
     8bc:	02133100 	andseq	r3, r3, #0, 2
     8c0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     8c4:	1d110000 	ldcne	0, cr0, [r1, #-0]
     8c8:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     8cc:	0b42b801 	bleq	10ae8d8 <__RAM_SIZE+0xfae8d8>
     8d0:	01120111 	tsteq	r2, r1, lsl r1
     8d4:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     8d8:	00000b57 	andeq	r0, r0, r7, asr fp
     8dc:	31000512 	tstcc	r0, r2, lsl r5
     8e0:	b7060213 	smladlt	r6, r3, r2, r0
     8e4:	00000642 	andeq	r0, r0, r2, asr #12
     8e8:	01828913 	orreq	r8, r2, r3, lsl r9
     8ec:	31011100 	mrscc	r1, (UNDEF: 17)
     8f0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     8f4:	0e03012e 	adfeqsp	f0, f3, #0.5
     8f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     900:	0b201349 	bleq	80562c <__RAM_SIZE+0x70562c>
     904:	00001301 	andeq	r1, r0, r1, lsl #6
     908:	03003415 	movweq	r3, #1045	; 0x415
     90c:	3b0b3a0e 	blcc	2cf14c <__RAM_SIZE+0x1cf14c>
     910:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     914:	16000013 			; <UNDEFINED> instruction: 0x16000013
     918:	0e03012e 	adfeqsp	f0, f3, #0.5
     91c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     920:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     924:	13010b20 	movwne	r0, #6944	; 0x1b20
     928:	05170000 	ldreq	r0, [r7, #-0]
     92c:	3a0e0300 	bcc	381534 <__RAM_SIZE+0x281534>
     930:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     934:	0013490b 	andseq	r4, r3, fp, lsl #18
     938:	002e1800 	eoreq	r1, lr, r0, lsl #16
     93c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     940:	030e4087 	movweq	r4, #57479	; 0xe087
     944:	3b0b3a0e 	blcc	2cf184 <__RAM_SIZE+0x1cf184>
     948:	000b3905 	andeq	r3, fp, r5, lsl #18
     94c:	11010000 	mrsne	r0, (UNDEF: 1)
     950:	130e2501 	movwne	r2, #58625	; 0xe501
     954:	1b0e030b 	blne	381588 <__RAM_SIZE+0x281588>
     958:	1106550e 	tstne	r6, lr, lsl #10
     95c:	10015201 	andne	r5, r1, r1, lsl #4
     960:	02000006 	andeq	r0, r0, #6
     964:	0b0b0024 	bleq	2c09fc <__RAM_SIZE+0x1c09fc>
     968:	0e030b3e 	vmoveq.16	d3[0], r0
     96c:	24030000 	strcs	r0, [r3], #-0
     970:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     974:	0008030b 	andeq	r0, r8, fp, lsl #6
     978:	000f0400 	andeq	r0, pc, r0, lsl #8
     97c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     980:	03001605 	movweq	r1, #1541	; 0x605
     984:	3b0b3a0e 	blcc	2cf1c4 <__RAM_SIZE+0x1cf1c4>
     988:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     98c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     990:	13490035 	movtne	r0, #36917	; 0x9035
     994:	13070000 	movwne	r0, #28672	; 0x7000
     998:	0b0e0301 	bleq	3815a4 <__RAM_SIZE+0x2815a4>
     99c:	3b0b3a0b 	blcc	2cf1d0 <__RAM_SIZE+0x1cf1d0>
     9a0:	010b3905 	tsteq	fp, r5, lsl #18
     9a4:	08000013 	stmdaeq	r0, {r0, r1, r4}
     9a8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     9ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     9b4:	00000a38 	andeq	r0, r0, r8, lsr sl
     9b8:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     9bc:	0013010c 	andseq	r0, r3, ip, lsl #2
     9c0:	00050a00 	andeq	r0, r5, r0, lsl #20
     9c4:	00001349 	andeq	r1, r0, r9, asr #6
     9c8:	0b000f0b 	bleq	45fc <_Min_Stack_Size+0x35fc>
     9cc:	0013490b 	andseq	r4, r3, fp, lsl #18
     9d0:	00160c00 	andseq	r0, r6, r0, lsl #24
     9d4:	0b3a0e03 	bleq	e841e8 <__RAM_SIZE+0xd841e8>
     9d8:	0b39053b 	bleq	e41ecc <__RAM_SIZE+0xd41ecc>
     9dc:	00001349 	andeq	r1, r0, r9, asr #6
     9e0:	0300340d 	movweq	r3, #1037	; 0x40d
     9e4:	3b0b3a0e 	blcc	2cf224 <__RAM_SIZE+0x1cf224>
     9e8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     9ec:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     9f0:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
     9f4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 944 <__Vectors_Size+0x184>
     9f8:	0b3a0e03 	bleq	e8420c <__RAM_SIZE+0xd8420c>
     9fc:	0b390b3b 	bleq	e436f0 <__RAM_SIZE+0xd436f0>
     a00:	13490c27 	movtne	r0, #39975	; 0x9c27
     a04:	01120111 	tsteq	r2, r1, lsl r1
     a08:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     a0c:	0013010c 	andseq	r0, r3, ip, lsl #2
     a10:	00050f00 	andeq	r0, r5, r0, lsl #30
     a14:	0b3a0e03 	bleq	e84228 <__RAM_SIZE+0xd84228>
     a18:	0b390b3b 	bleq	e4370c <__RAM_SIZE+0xd4370c>
     a1c:	06021349 	streq	r1, [r2], -r9, asr #6
     a20:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a24:	00341000 	eorseq	r1, r4, r0
     a28:	0b3a0e03 	bleq	e8423c <__RAM_SIZE+0xd8423c>
     a2c:	0b390b3b 	bleq	e43720 <__RAM_SIZE+0xd43720>
     a30:	06021349 	streq	r1, [r2], -r9, asr #6
     a34:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a38:	011d1100 	tsteq	sp, r0, lsl #2
     a3c:	01521331 	cmpeq	r2, r1, lsr r3
     a40:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     a44:	58011201 	stmdapl	r1, {r0, r9, ip}
     a48:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     a4c:	0013010b 	andseq	r0, r3, fp, lsl #2
     a50:	00341200 	eorseq	r1, r4, r0, lsl #4
     a54:	06021331 			; <UNDEFINED> instruction: 0x06021331
     a58:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a5c:	011d1300 	tsteq	sp, r0, lsl #6
     a60:	01521331 	cmpeq	r2, r1, lsr r3
     a64:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     a68:	58011201 	stmdapl	r1, {r0, r9, ip}
     a6c:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     a70:	1400000b 	strne	r0, [r0], #-11
     a74:	13310005 	teqne	r1, #5
     a78:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     a7c:	15000006 	strne	r0, [r0, #-6]
     a80:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     a84:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     a88:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     a8c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     a90:	010b5705 	tsteq	fp, r5, lsl #14
     a94:	16000013 			; <UNDEFINED> instruction: 0x16000013
     a98:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     a9c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     aa0:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     aa4:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     aa8:	0013010b 	andseq	r0, r3, fp, lsl #2
     aac:	82891700 	addhi	r1, r9, #0, 14
     ab0:	01110101 	tsteq	r1, r1, lsl #2
     ab4:	13011331 	movwne	r1, #4913	; 0x1331
     ab8:	8a180000 	bhi	600ac0 <__RAM_SIZE+0x500ac0>
     abc:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     ac0:	0a42910a 	beq	10a4ef0 <__RAM_SIZE+0xfa4ef0>
     ac4:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
     ac8:	11010182 	smlabbne	r1, r2, r1, r0
     acc:	00133101 	andseq	r3, r3, r1, lsl #2
     ad0:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     ad4:	0b3a0e03 	bleq	e842e8 <__RAM_SIZE+0xd842e8>
     ad8:	0b39053b 	bleq	e41fcc <__RAM_SIZE+0xd41fcc>
     adc:	13490c27 	movtne	r0, #39975	; 0x9c27
     ae0:	13010b20 	movwne	r0, #6944	; 0x1b20
     ae4:	341b0000 	ldrcc	r0, [fp], #-0
     ae8:	3a0e0300 	bcc	3816f0 <__RAM_SIZE+0x2816f0>
     aec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     af0:	0013490b 	andseq	r4, r3, fp, lsl #18
     af4:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
     af8:	0b3a0e03 	bleq	e8430c <__RAM_SIZE+0xd8430c>
     afc:	0b39053b 	bleq	e41ff0 <__RAM_SIZE+0xd41ff0>
     b00:	0b200c27 	bleq	803ba4 <__RAM_SIZE+0x703ba4>
     b04:	00001301 	andeq	r1, r0, r1, lsl #6
     b08:	0300051d 	movweq	r0, #1309	; 0x51d
     b0c:	3b0b3a0e 	blcc	2cf34c <__RAM_SIZE+0x1cf34c>
     b10:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     b14:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     b18:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a68 <__Vectors_Size+0x2a8>
     b1c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b20:	3a0e030e 	bcc	381760 <__RAM_SIZE+0x281760>
     b24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b28:	1f00000b 	svcne	0x0000000b
     b2c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a7c <__Vectors_Size+0x2bc>
     b30:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b34:	3a0e030e 	bcc	381774 <__RAM_SIZE+0x281774>
     b38:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b3c:	0000000b 	andeq	r0, r0, fp
     b40:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     b44:	030b130e 	movweq	r1, #45838	; 0xb30e
     b48:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     b4c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     b50:	00061001 	andeq	r1, r6, r1
     b54:	00240200 	eoreq	r0, r4, r0, lsl #4
     b58:	0b3e0b0b 	bleq	f8378c <__RAM_SIZE+0xe8378c>
     b5c:	00000e03 	andeq	r0, r0, r3, lsl #28
     b60:	0b002403 	bleq	9b74 <_Min_Stack_Size+0x8b74>
     b64:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b68:	04000008 	streq	r0, [r0], #-8
     b6c:	0b0b000f 	bleq	2c0bb0 <__RAM_SIZE+0x1c0bb0>
     b70:	16050000 	strne	r0, [r5], -r0
     b74:	3a0e0300 	bcc	38177c <__RAM_SIZE+0x28177c>
     b78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b7c:	0013490b 	andseq	r4, r3, fp, lsl #18
     b80:	01130600 	tsteq	r3, r0, lsl #12
     b84:	0b0b0e03 	bleq	2c4398 <__RAM_SIZE+0x1c4398>
     b88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b8c:	13010b39 	movwne	r0, #6969	; 0x1b39
     b90:	0d070000 	stceq	0, cr0, [r7, #-0]
     b94:	3a0e0300 	bcc	38179c <__RAM_SIZE+0x28179c>
     b98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b9c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ba0:	0800000a 	stmdaeq	r0, {r1, r3}
     ba4:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     ba8:	00001301 	andeq	r1, r0, r1, lsl #6
     bac:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
     bb0:	0a000013 	beq	c04 <__Vectors_Size+0x444>
     bb4:	0b0b000f 	bleq	2c0bf8 <__RAM_SIZE+0x1c0bf8>
     bb8:	00001349 	andeq	r1, r0, r9, asr #6
     bbc:	0300160b 	movweq	r1, #1547	; 0x60b
     bc0:	3b0b3a0e 	blcc	2cf400 <__RAM_SIZE+0x1cf400>
     bc4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     bc8:	0c000013 	stceq	0, cr0, [r0], {19}
     bcc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b1c <__Vectors_Size+0x35c>
     bd0:	0b3a0e03 	bleq	e843e4 <__RAM_SIZE+0xd843e4>
     bd4:	0b390b3b 	bleq	e438c8 <__RAM_SIZE+0xd438c8>
     bd8:	01110c27 	tsteq	r1, r7, lsr #24
     bdc:	06400112 			; <UNDEFINED> instruction: 0x06400112
     be0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     be4:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     be8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     bec:	0b3b0b3a 	bleq	ec38dc <__RAM_SIZE+0xdc38dc>
     bf0:	13490b39 	movtne	r0, #39737	; 0x9b39
     bf4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     bf8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     bfc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     c00:	0b3b0b3a 	bleq	ec38f0 <__RAM_SIZE+0xdc38f0>
     c04:	13490b39 	movtne	r0, #39737	; 0x9b39
     c08:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     c0c:	0f000006 	svceq	0x00000006
     c10:	01018289 	smlabbeq	r1, r9, r2, r8
     c14:	13310111 	teqne	r1, #1073741828	; 0x40000004
     c18:	8a100000 	bhi	400c20 <__RAM_SIZE+0x300c20>
     c1c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     c20:	0a42910a 	beq	10a5050 <__RAM_SIZE+0xfa5050>
     c24:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     c28:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     c2c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     c30:	0b3a0e03 	bleq	e84444 <__RAM_SIZE+0xd84444>
     c34:	0b39053b 	bleq	e42128 <__RAM_SIZE+0xd42128>
     c38:	01000000 	mrseq	r0, (UNDEF: 0)
     c3c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     c40:	0e030b13 	vmoveq.32	d3[0], r0
     c44:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     c48:	01520111 	cmpeq	r2, r1, lsl r1
     c4c:	00000610 	andeq	r0, r0, r0, lsl r6
     c50:	0b002402 	bleq	9c60 <_Min_Stack_Size+0x8c60>
     c54:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     c58:	0300000e 	movweq	r0, #14
     c5c:	0b0b0024 	bleq	2c0cf4 <__RAM_SIZE+0x1c0cf4>
     c60:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     c64:	0f040000 	svceq	0x00040000
     c68:	000b0b00 	andeq	r0, fp, r0, lsl #22
     c6c:	00160500 	andseq	r0, r6, r0, lsl #10
     c70:	0b3a0e03 	bleq	e84484 <__RAM_SIZE+0xd84484>
     c74:	0b390b3b 	bleq	e43968 <__RAM_SIZE+0xd43968>
     c78:	00001349 	andeq	r1, r0, r9, asr #6
     c7c:	03011306 	movweq	r1, #4870	; 0x1306
     c80:	3a0b0b0e 	bcc	2c38c0 <__RAM_SIZE+0x1c38c0>
     c84:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c88:	0013010b 	andseq	r0, r3, fp, lsl #2
     c8c:	000d0700 	andeq	r0, sp, r0, lsl #14
     c90:	0b3a0e03 	bleq	e844a4 <__RAM_SIZE+0xd844a4>
     c94:	0b39053b 	bleq	e42188 <__RAM_SIZE+0xd42188>
     c98:	0a381349 	beq	e059c4 <__RAM_SIZE+0xd059c4>
     c9c:	15080000 	strne	r0, [r8, #-0]
     ca0:	010c2701 	tsteq	ip, r1, lsl #14
     ca4:	09000013 	stmdbeq	r0, {r0, r1, r4}
     ca8:	13490005 	movtne	r0, #36869	; 0x9005
     cac:	0f0a0000 	svceq	0x000a0000
     cb0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     cb4:	0b000013 	bleq	d08 <__Vectors_Size+0x548>
     cb8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     cbc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cc0:	13490b39 	movtne	r0, #39737	; 0x9b39
     cc4:	340c0000 	strcc	r0, [ip], #-0
     cc8:	3a0e0300 	bcc	3818d0 <__RAM_SIZE+0x2818d0>
     ccc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     cd0:	3f13490b 	svccc	0x0013490b
     cd4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     cd8:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     cdc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ce0:	0b3b0b3a 	bleq	ec39d0 <__RAM_SIZE+0xdc39d0>
     ce4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ce8:	01111349 	tsteq	r1, r9, asr #6
     cec:	06400112 			; <UNDEFINED> instruction: 0x06400112
     cf0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     cf4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     cf8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     cfc:	0b3b0b3a 	bleq	ec39ec <__RAM_SIZE+0xdc39ec>
     d00:	13490b39 	movtne	r0, #39737	; 0x9b39
     d04:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d08:	0f000006 	svceq	0x00000006
     d0c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d10:	0b3b0b3a 	bleq	ec3a00 <__RAM_SIZE+0xdc3a00>
     d14:	13490b39 	movtne	r0, #39737	; 0x9b39
     d18:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d1c:	10000006 	andne	r0, r0, r6
     d20:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     d24:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     d28:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     d2c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     d30:	010b570b 	tsteq	fp, fp, lsl #14
     d34:	11000013 	tstne	r0, r3, lsl r0
     d38:	13310034 	teqne	r1, #52	; 0x34
     d3c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d40:	12000006 	andne	r0, r0, #6
     d44:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     d48:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     d4c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     d50:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     d54:	000b5705 	andeq	r5, fp, r5, lsl #14
     d58:	00051300 	andeq	r1, r5, r0, lsl #6
     d5c:	06021331 			; <UNDEFINED> instruction: 0x06021331
     d60:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d64:	82891400 	addhi	r1, r9, #0, 8
     d68:	01110101 	tsteq	r1, r1, lsl #2
     d6c:	00001331 	andeq	r1, r0, r1, lsr r3
     d70:	01828a15 	orreq	r8, r2, r5, lsl sl
     d74:	910a0200 	mrsls	r0, R10_fiq
     d78:	00000a42 	andeq	r0, r0, r2, asr #20
     d7c:	03012e16 	movweq	r2, #7702	; 0x1e16
     d80:	3b0b3a0e 	blcc	2cf5c0 <__RAM_SIZE+0x1cf5c0>
     d84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     d88:	2013490c 	andscs	r4, r3, ip, lsl #18
     d8c:	0013010b 	andseq	r0, r3, fp, lsl #2
     d90:	00341700 	eorseq	r1, r4, r0, lsl #14
     d94:	0b3a0e03 	bleq	e845a8 <__RAM_SIZE+0xd845a8>
     d98:	0b39053b 	bleq	e4228c <__RAM_SIZE+0xd4228c>
     d9c:	00001349 	andeq	r1, r0, r9, asr #6
     da0:	03012e18 	movweq	r2, #7704	; 0x1e18
     da4:	3b0b3a0e 	blcc	2cf5e4 <__RAM_SIZE+0x1cf5e4>
     da8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     dac:	010b200c 	tsteq	fp, ip
     db0:	19000013 	stmdbne	r0, {r0, r1, r4}
     db4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     db8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dbc:	13490b39 	movtne	r0, #39737	; 0x9b39
     dc0:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     dc4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     dc8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     dcc:	0b3a0e03 	bleq	e845e0 <__RAM_SIZE+0xd845e0>
     dd0:	00000b3b 	andeq	r0, r0, fp, lsr fp
     dd4:	01110100 	tsteq	r1, r0, lsl #2
     dd8:	0b130e25 	bleq	4c4674 <__RAM_SIZE+0x3c4674>
     ddc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     de0:	01110655 	tsteq	r1, r5, asr r6
     de4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     de8:	24020000 	strcs	r0, [r2], #-0
     dec:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     df0:	000e030b 	andeq	r0, lr, fp, lsl #6
     df4:	00240300 	eoreq	r0, r4, r0, lsl #6
     df8:	0b3e0b0b 	bleq	f83a2c <__RAM_SIZE+0xe83a2c>
     dfc:	00000803 	andeq	r0, r0, r3, lsl #16
     e00:	0b000f04 	bleq	4a18 <_Min_Stack_Size+0x3a18>
     e04:	0500000b 	streq	r0, [r0, #-11]
     e08:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     e0c:	0b3b0b3a 	bleq	ec3afc <__RAM_SIZE+0xdc3afc>
     e10:	13490b39 	movtne	r0, #39737	; 0x9b39
     e14:	13060000 	movwne	r0, #24576	; 0x6000
     e18:	0b0e0301 	bleq	381a24 <__RAM_SIZE+0x281a24>
     e1c:	3b0b3a0b 	blcc	2cf650 <__RAM_SIZE+0x1cf650>
     e20:	010b3905 	tsteq	fp, r5, lsl #18
     e24:	07000013 	smladeq	r0, r3, r0, r0
     e28:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e30:	13490b39 	movtne	r0, #39737	; 0x9b39
     e34:	00000a38 	andeq	r0, r0, r8, lsr sl
     e38:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     e3c:	0013010c 	andseq	r0, r3, ip, lsl #2
     e40:	00050900 	andeq	r0, r5, r0, lsl #18
     e44:	00001349 	andeq	r1, r0, r9, asr #6
     e48:	0b000f0a 	bleq	4a78 <_Min_Stack_Size+0x3a78>
     e4c:	0013490b 	andseq	r4, r3, fp, lsl #18
     e50:	00160b00 	andseq	r0, r6, r0, lsl #22
     e54:	0b3a0e03 	bleq	e84668 <__RAM_SIZE+0xd84668>
     e58:	0b39053b 	bleq	e4234c <__RAM_SIZE+0xd4234c>
     e5c:	00001349 	andeq	r1, r0, r9, asr #6
     e60:	0300340c 	movweq	r3, #1036	; 0x40c
     e64:	3b0b3a0e 	blcc	2cf6a4 <__RAM_SIZE+0x1cf6a4>
     e68:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e6c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     e70:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     e74:	0c3f012e 	ldfeqs	f0, [pc], #-184	; dc4 <__Vectors_Size+0x604>
     e78:	0b3a0e03 	bleq	e8468c <__RAM_SIZE+0xd8468c>
     e7c:	0b390b3b 	bleq	e43b70 <__RAM_SIZE+0xd43b70>
     e80:	13490c27 	movtne	r0, #39975	; 0x9c27
     e84:	01120111 	tsteq	r2, r1, lsl r1
     e88:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     e8c:	0013010c 	andseq	r0, r3, ip, lsl #2
     e90:	00050e00 	andeq	r0, r5, r0, lsl #28
     e94:	0b3a0e03 	bleq	e846a8 <__RAM_SIZE+0xd846a8>
     e98:	0b390b3b 	bleq	e43b8c <__RAM_SIZE+0xd43b8c>
     e9c:	06021349 	streq	r1, [r2], -r9, asr #6
     ea0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     ea4:	00340f00 	eorseq	r0, r4, r0, lsl #30
     ea8:	0b3a0e03 	bleq	e846bc <__RAM_SIZE+0xd846bc>
     eac:	0b390b3b 	bleq	e43ba0 <__RAM_SIZE+0xd43ba0>
     eb0:	06021349 	streq	r1, [r2], -r9, asr #6
     eb4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     eb8:	011d1000 	tsteq	sp, r0
     ebc:	01521331 	cmpeq	r2, r1, lsr r3
     ec0:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     ec4:	58011201 	stmdapl	r1, {r0, r9, ip}
     ec8:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     ecc:	0013010b 	andseq	r0, r3, fp, lsl #2
     ed0:	00341100 	eorseq	r1, r4, r0, lsl #2
     ed4:	06021331 			; <UNDEFINED> instruction: 0x06021331
     ed8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     edc:	011d1200 	tsteq	sp, r0, lsl #4
     ee0:	01521331 	cmpeq	r2, r1, lsr r3
     ee4:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     ee8:	58011201 	stmdapl	r1, {r0, r9, ip}
     eec:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     ef0:	1300000b 	movwne	r0, #11
     ef4:	13310005 	teqne	r1, #5
     ef8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     efc:	14000006 	strne	r0, [r0], #-6
     f00:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     f04:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     f08:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     f0c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     f10:	010b5705 	tsteq	fp, r5, lsl #14
     f14:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     f18:	0e03012e 	adfeqsp	f0, f3, #0.5
     f1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f20:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f24:	0b201349 	bleq	805c50 <__RAM_SIZE+0x705c50>
     f28:	00001301 	andeq	r1, r0, r1, lsl #6
     f2c:	03003416 	movweq	r3, #1046	; 0x416
     f30:	3b0b3a0e 	blcc	2cf770 <__RAM_SIZE+0x1cf770>
     f34:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f38:	17000013 	smladne	r0, r3, r0, r0
     f3c:	0e03012e 	adfeqsp	f0, f3, #0.5
     f40:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f44:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f48:	13010b20 	movwne	r0, #6944	; 0x1b20
     f4c:	05180000 	ldreq	r0, [r8, #-0]
     f50:	3a0e0300 	bcc	381b58 <__RAM_SIZE+0x281b58>
     f54:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f58:	0013490b 	andseq	r4, r3, fp, lsl #18
     f5c:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
     f60:	0b3a0e03 	bleq	e84774 <__RAM_SIZE+0xd84774>
     f64:	0b39053b 	bleq	e42458 <__RAM_SIZE+0xd42458>
     f68:	13490c27 	movtne	r0, #39975	; 0x9c27
     f6c:	00000b20 	andeq	r0, r0, r0, lsr #22
     f70:	01110100 	tsteq	r1, r0, lsl #2
     f74:	0b130e25 	bleq	4c4810 <__RAM_SIZE+0x3c4810>
     f78:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     f7c:	01110655 	tsteq	r1, r5, asr r6
     f80:	06100152 			; <UNDEFINED> instruction: 0x06100152
     f84:	24020000 	strcs	r0, [r2], #-0
     f88:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     f8c:	000e030b 	andeq	r0, lr, fp, lsl #6
     f90:	00240300 	eoreq	r0, r4, r0, lsl #6
     f94:	0b3e0b0b 	bleq	f83bc8 <__RAM_SIZE+0xe83bc8>
     f98:	00000803 	andeq	r0, r0, r3, lsl #16
     f9c:	0b000f04 	bleq	4bb4 <_Min_Stack_Size+0x3bb4>
     fa0:	0500000b 	streq	r0, [r0, #-11]
     fa4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     fa8:	0b3b0b3a 	bleq	ec3c98 <__RAM_SIZE+0xdc3c98>
     fac:	13490b39 	movtne	r0, #39737	; 0x9b39
     fb0:	13060000 	movwne	r0, #24576	; 0x6000
     fb4:	0b0e0301 	bleq	381bc0 <__RAM_SIZE+0x281bc0>
     fb8:	3b0b3a0b 	blcc	2cf7ec <__RAM_SIZE+0x1cf7ec>
     fbc:	010b3905 	tsteq	fp, r5, lsl #18
     fc0:	07000013 	smladeq	r0, r3, r0, r0
     fc4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     fc8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fcc:	13490b39 	movtne	r0, #39737	; 0x9b39
     fd0:	00000a38 	andeq	r0, r0, r8, lsr sl
     fd4:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     fd8:	0013010c 	andseq	r0, r3, ip, lsl #2
     fdc:	00050900 	andeq	r0, r5, r0, lsl #18
     fe0:	00001349 	andeq	r1, r0, r9, asr #6
     fe4:	0b000f0a 	bleq	4c14 <_Min_Stack_Size+0x3c14>
     fe8:	0013490b 	andseq	r4, r3, fp, lsl #18
     fec:	00160b00 	andseq	r0, r6, r0, lsl #22
     ff0:	0b3a0e03 	bleq	e84804 <__RAM_SIZE+0xd84804>
     ff4:	0b39053b 	bleq	e424e8 <__RAM_SIZE+0xd424e8>
     ff8:	00001349 	andeq	r1, r0, r9, asr #6
     ffc:	0300340c 	movweq	r3, #1036	; 0x40c
    1000:	3b0b3a0e 	blcc	2cf840 <__RAM_SIZE+0x1cf840>
    1004:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1008:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    100c:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    1010:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1014:	0b3b0b3a 	bleq	ec3d04 <__RAM_SIZE+0xdc3d04>
    1018:	13490b39 	movtne	r0, #39737	; 0x9b39
    101c:	0a020c3f 	beq	84120 <SYSTICK_CYCLES+0x5b0e1>
    1020:	340e0000 	strcc	r0, [lr], #-0
    1024:	3a134700 	bcc	4d2c2c <__RAM_SIZE+0x3d2c2c>
    1028:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    102c:	000a020b 	andeq	r0, sl, fp, lsl #4
    1030:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    1034:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1038:	0b3b0b3a 	bleq	ec3d28 <__RAM_SIZE+0xdc3d28>
    103c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1040:	01120111 	tsteq	r2, r1, lsl r1
    1044:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1048:	0013010c 	andseq	r0, r3, ip, lsl #2
    104c:	82891000 	addhi	r1, r9, #0
    1050:	01110001 	tsteq	r1, r1
    1054:	00001331 	andeq	r1, r0, r1, lsr r3
    1058:	3f002e11 	svccc	0x00002e11
    105c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1060:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1064:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1068:	00000b39 	andeq	r0, r0, r9, lsr fp
    106c:	3f002e12 	svccc	0x00002e12
    1070:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1074:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1078:	0b3b0b3a 	bleq	ec3d68 <__RAM_SIZE+0xdc3d68>
    107c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1080:	01110100 	tsteq	r1, r0, lsl #2
    1084:	0b130e25 	bleq	4c4920 <__RAM_SIZE+0x3c4920>
    1088:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    108c:	01110655 	tsteq	r1, r5, asr r6
    1090:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1094:	24020000 	strcs	r0, [r2], #-0
    1098:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    109c:	000e030b 	andeq	r0, lr, fp, lsl #6
    10a0:	00240300 	eoreq	r0, r4, r0, lsl #6
    10a4:	0b3e0b0b 	bleq	f83cd8 <__RAM_SIZE+0xe83cd8>
    10a8:	00000803 	andeq	r0, r0, r3, lsl #16
    10ac:	0b000f04 	bleq	4cc4 <_Min_Stack_Size+0x3cc4>
    10b0:	0500000b 	streq	r0, [r0, #-11]
    10b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    10b8:	0b3b0b3a 	bleq	ec3da8 <__RAM_SIZE+0xdc3da8>
    10bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    10c0:	35060000 	strcc	r0, [r6, #-0]
    10c4:	00134900 	andseq	r4, r3, r0, lsl #18
    10c8:	00340700 	eorseq	r0, r4, r0, lsl #14
    10cc:	0b3a0e03 	bleq	e848e0 <__RAM_SIZE+0xd848e0>
    10d0:	0b390b3b 	bleq	e43dc4 <__RAM_SIZE+0xd43dc4>
    10d4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; fb8 <__Vectors_Size+0x7f8>
    10d8:	00000c3c 	andeq	r0, r0, ip, lsr ip
    10dc:	03003408 	movweq	r3, #1032	; 0x408
    10e0:	3b0b3a0e 	blcc	2cf920 <__RAM_SIZE+0x1cf920>
    10e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10e8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    10ec:	0900000c 	stmdbeq	r0, {r2, r3}
    10f0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1040 <_Min_Stack_Size+0x40>
    10f4:	0b3a0e03 	bleq	e84908 <__RAM_SIZE+0xd84908>
    10f8:	0b390b3b 	bleq	e43dec <__RAM_SIZE+0xd43dec>
    10fc:	01110c27 	tsteq	r1, r7, lsr #24
    1100:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1104:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1108:	0a000013 	beq	115c <_Min_Stack_Size+0x15c>
    110c:	00018289 	andeq	r8, r1, r9, lsl #5
    1110:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1114:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    1118:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    111c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1120:	0b3a0e03 	bleq	e84934 <__RAM_SIZE+0xd84934>
    1124:	0b39053b 	bleq	e42618 <__RAM_SIZE+0xd42618>
    1128:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    112c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1130:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1134:	0b3a0e03 	bleq	e84948 <__RAM_SIZE+0xd84948>
    1138:	0b390b3b 	bleq	e43e2c <__RAM_SIZE+0xd43e2c>
    113c:	01000000 	mrseq	r0, (UNDEF: 0)
    1140:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1144:	0e030b13 	vmoveq.32	d3[0], r0
    1148:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    114c:	01520111 	cmpeq	r2, r1, lsl r1
    1150:	00000610 	andeq	r0, r0, r0, lsl r6
    1154:	0b002402 	bleq	a164 <_Min_Stack_Size+0x9164>
    1158:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    115c:	0300000e 	movweq	r0, #14
    1160:	0b0b0024 	bleq	2c11f8 <__RAM_SIZE+0x1c11f8>
    1164:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1168:	0f040000 	svceq	0x00040000
    116c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1170:	00160500 	andseq	r0, r6, r0, lsl #10
    1174:	0b3a0e03 	bleq	e84988 <__RAM_SIZE+0xd84988>
    1178:	0b390b3b 	bleq	e43e6c <__RAM_SIZE+0xd43e6c>
    117c:	00001349 	andeq	r1, r0, r9, asr #6
    1180:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1184:	07000013 	smladeq	r0, r3, r0, r0
    1188:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    118c:	0b3a0b0b 	bleq	e83dc0 <__RAM_SIZE+0xd83dc0>
    1190:	0b39053b 	bleq	e42684 <__RAM_SIZE+0xd42684>
    1194:	00001301 	andeq	r1, r0, r1, lsl #6
    1198:	03000d08 	movweq	r0, #3336	; 0xd08
    119c:	3b0b3a0e 	blcc	2cf9dc <__RAM_SIZE+0x1cf9dc>
    11a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    11a4:	000a3813 	andeq	r3, sl, r3, lsl r8
    11a8:	01150900 	tsteq	r5, r0, lsl #18
    11ac:	13010c27 	movwne	r0, #7207	; 0x1c27
    11b0:	050a0000 	streq	r0, [sl, #-0]
    11b4:	00134900 	andseq	r4, r3, r0, lsl #18
    11b8:	000f0b00 	andeq	r0, pc, r0, lsl #22
    11bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    11c0:	160c0000 	strne	r0, [ip], -r0
    11c4:	3a0e0300 	bcc	381dcc <__RAM_SIZE+0x281dcc>
    11c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    11d0:	00340d00 	eorseq	r0, r4, r0, lsl #26
    11d4:	0b3a0e03 	bleq	e849e8 <__RAM_SIZE+0xd849e8>
    11d8:	0b39053b 	bleq	e426cc <__RAM_SIZE+0xd426cc>
    11dc:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 10c0 <_Min_Stack_Size+0xc0>
    11e0:	00000c3c 	andeq	r0, r0, ip, lsr ip
    11e4:	3f012e0e 	svccc	0x00012e0e
    11e8:	3a0e030c 	bcc	381e20 <__RAM_SIZE+0x281e20>
    11ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11f0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    11f4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11f8:	97064001 	strls	r4, [r6, -r1]
    11fc:	13010c42 	movwne	r0, #7234	; 0x1c42
    1200:	050f0000 	streq	r0, [pc, #-0]	; 1208 <_Min_Stack_Size+0x208>
    1204:	3a0e0300 	bcc	381e0c <__RAM_SIZE+0x281e0c>
    1208:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    120c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1210:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1214:	34100000 	ldrcc	r0, [r0], #-0
    1218:	3a0e0300 	bcc	381e20 <__RAM_SIZE+0x281e20>
    121c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1220:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1224:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1228:	1d110000 	ldcne	0, cr0, [r1, #-0]
    122c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1230:	0b42b801 	bleq	10af23c <__RAM_SIZE+0xfaf23c>
    1234:	01120111 	tsteq	r2, r1, lsl r1
    1238:	0b590b58 	bleq	1643fa0 <__RAM_SIZE+0x1543fa0>
    123c:	13010b57 	movwne	r0, #6999	; 0x1b57
    1240:	34120000 	ldrcc	r0, [r2], #-0
    1244:	02133100 	andseq	r3, r3, #0, 2
    1248:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    124c:	1d130000 	ldcne	0, cr0, [r3, #-0]
    1250:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1254:	0b42b801 	bleq	10af260 <__RAM_SIZE+0xfaf260>
    1258:	01120111 	tsteq	r2, r1, lsl r1
    125c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1260:	00000b57 	andeq	r0, r0, r7, asr fp
    1264:	31011d14 	tstcc	r1, r4, lsl sp
    1268:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    126c:	01110b42 	tsteq	r1, r2, asr #22
    1270:	0b580112 	bleq	16016c0 <__RAM_SIZE+0x15016c0>
    1274:	0b570559 	bleq	15c27e0 <__RAM_SIZE+0x14c27e0>
    1278:	00001301 	andeq	r1, r0, r1, lsl #6
    127c:	31000515 	tstcc	r0, r5, lsl r5
    1280:	b7060213 	smladlt	r6, r3, r2, r0
    1284:	00000642 	andeq	r0, r0, r2, asr #12
    1288:	01828916 	orreq	r8, r2, r6, lsl r9
    128c:	31011101 	tstcc	r1, r1, lsl #2
    1290:	00130113 	andseq	r0, r3, r3, lsl r1
    1294:	828a1700 	addhi	r1, sl, #0, 14
    1298:	0a020001 	beq	812a4 <SYSTICK_CYCLES+0x58265>
    129c:	000a4291 	muleq	sl, r1, r2
    12a0:	82891800 	addhi	r1, r9, #0, 16
    12a4:	01110101 	tsteq	r1, r1, lsl #2
    12a8:	00001331 	andeq	r1, r0, r1, lsr r3
    12ac:	03012e19 	movweq	r2, #7705	; 0x1e19
    12b0:	3b0b3a0e 	blcc	2cfaf0 <__RAM_SIZE+0x1cfaf0>
    12b4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    12b8:	2013490c 	andscs	r4, r3, ip, lsl #18
    12bc:	0013010b 	andseq	r0, r3, fp, lsl #2
    12c0:	00341a00 	eorseq	r1, r4, r0, lsl #20
    12c4:	0b3a0e03 	bleq	e84ad8 <__RAM_SIZE+0xd84ad8>
    12c8:	0b39053b 	bleq	e427bc <__RAM_SIZE+0xd427bc>
    12cc:	00001349 	andeq	r1, r0, r9, asr #6
    12d0:	03012e1b 	movweq	r2, #7707	; 0x1e1b
    12d4:	3b0b3a0e 	blcc	2cfb14 <__RAM_SIZE+0x1cfb14>
    12d8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    12dc:	010b200c 	tsteq	fp, ip
    12e0:	1c000013 	stcne	0, cr0, [r0], {19}
    12e4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    12e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12ec:	13490b39 	movtne	r0, #39737	; 0x9b39
    12f0:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    12f4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    12f8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    12fc:	0b3a0e03 	bleq	e84b10 <__RAM_SIZE+0xd84b10>
    1300:	0b390b3b 	bleq	e43ff4 <__RAM_SIZE+0xd43ff4>
    1304:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    1308:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    130c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1310:	0b3a0e03 	bleq	e84b24 <__RAM_SIZE+0xd84b24>
    1314:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1318:	3f002e1f 	svccc	0x00002e1f
    131c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1320:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1324:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1328:	00000b39 	andeq	r0, r0, r9, lsr fp
    132c:	01110100 	tsteq	r1, r0, lsl #2
    1330:	0b130e25 	bleq	4c4bcc <__RAM_SIZE+0x3c4bcc>
    1334:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1338:	01110655 	tsteq	r1, r5, asr r6
    133c:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1340:	24020000 	strcs	r0, [r2], #-0
    1344:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1348:	000e030b 	andeq	r0, lr, fp, lsl #6
    134c:	00240300 	eoreq	r0, r4, r0, lsl #6
    1350:	0b3e0b0b 	bleq	f83f84 <__RAM_SIZE+0xe83f84>
    1354:	00000803 	andeq	r0, r0, r3, lsl #16
    1358:	0b000f04 	bleq	4f70 <_Min_Stack_Size+0x3f70>
    135c:	0500000b 	streq	r0, [r0, #-11]
    1360:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1364:	0b3b0b3a 	bleq	ec4054 <__RAM_SIZE+0xdc4054>
    1368:	13490b39 	movtne	r0, #39737	; 0x9b39
    136c:	26060000 	strcs	r0, [r6], -r0
    1370:	00134900 	andseq	r4, r3, r0, lsl #18
    1374:	00350700 	eorseq	r0, r5, r0, lsl #14
    1378:	00001349 	andeq	r1, r0, r9, asr #6
    137c:	49010108 	stmdbmi	r1, {r3, r8}
    1380:	00130113 	andseq	r0, r3, r3, lsl r1
    1384:	00210900 	eoreq	r0, r1, r0, lsl #18
    1388:	0b2f1349 	bleq	bc60b4 <__RAM_SIZE+0xac60b4>
    138c:	340a0000 	strcc	r0, [sl], #-0
    1390:	3a0e0300 	bcc	381f98 <__RAM_SIZE+0x281f98>
    1394:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1398:	3f13490b 	svccc	0x0013490b
    139c:	000a020c 	andeq	r0, sl, ip, lsl #4
    13a0:	01130b00 	tsteq	r3, r0, lsl #22
    13a4:	0b0b0e03 	bleq	2c4bb8 <__RAM_SIZE+0x1c4bb8>
    13a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13ac:	13010b39 	movwne	r0, #6969	; 0x1b39
    13b0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    13b4:	3a0e0300 	bcc	381fbc <__RAM_SIZE+0x281fbc>
    13b8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13bc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    13c0:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    13c4:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    13c8:	00001301 	andeq	r1, r0, r1, lsl #6
    13cc:	4900050e 	stmdbmi	r0, {r1, r2, r3, r8, sl}
    13d0:	0f000013 	svceq	0x00000013
    13d4:	0b0b000f 	bleq	2c1418 <__RAM_SIZE+0x1c1418>
    13d8:	00001349 	andeq	r1, r0, r9, asr #6
    13dc:	03001610 	movweq	r1, #1552	; 0x610
    13e0:	3b0b3a0e 	blcc	2cfc20 <__RAM_SIZE+0x1cfc20>
    13e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13e8:	11000013 	tstne	r0, r3, lsl r0
    13ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    13f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    13f8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    13fc:	34120000 	ldrcc	r0, [r2], #-0
    1400:	3a134700 	bcc	4d3008 <__RAM_SIZE+0x3d3008>
    1404:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1408:	000a020b 	andeq	r0, sl, fp, lsl #4
    140c:	00341300 	eorseq	r1, r4, r0, lsl #6
    1410:	0b3a1347 	bleq	e86134 <__RAM_SIZE+0xd86134>
    1414:	0b39053b 	bleq	e42908 <__RAM_SIZE+0xd42908>
    1418:	00000a02 	andeq	r0, r0, r2, lsl #20
    141c:	3f002e14 	svccc	0x00002e14
    1420:	3a0e030c 	bcc	382058 <__RAM_SIZE+0x282058>
    1424:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1428:	110c270b 	tstne	ip, fp, lsl #14
    142c:	40011201 	andmi	r1, r1, r1, lsl #4
    1430:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1434:	01000000 	mrseq	r0, (UNDEF: 0)
    1438:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    143c:	0e030b13 	vmoveq.32	d3[0], r0
    1440:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1444:	01520111 	cmpeq	r2, r1, lsl r1
    1448:	00000610 	andeq	r0, r0, r0, lsl r6
    144c:	0b002402 	bleq	a45c <_Min_Stack_Size+0x945c>
    1450:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1454:	0300000e 	movweq	r0, #14
    1458:	0b0b0024 	bleq	2c14f0 <__RAM_SIZE+0x1c14f0>
    145c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1460:	0f040000 	svceq	0x00040000
    1464:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1468:	00160500 	andseq	r0, r6, r0, lsl #10
    146c:	0b3a0e03 	bleq	e84c80 <__RAM_SIZE+0xd84c80>
    1470:	0b390b3b 	bleq	e44164 <__RAM_SIZE+0xd44164>
    1474:	00001349 	andeq	r1, r0, r9, asr #6
    1478:	03011306 	movweq	r1, #4870	; 0x1306
    147c:	3a0b0b0e 	bcc	2c40bc <__RAM_SIZE+0x1c40bc>
    1480:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1484:	0013010b 	andseq	r0, r3, fp, lsl #2
    1488:	000d0700 	andeq	r0, sp, r0, lsl #14
    148c:	0b3a0e03 	bleq	e84ca0 <__RAM_SIZE+0xd84ca0>
    1490:	0b39053b 	bleq	e42984 <__RAM_SIZE+0xd42984>
    1494:	0a381349 	beq	e061c0 <__RAM_SIZE+0xd061c0>
    1498:	15080000 	strne	r0, [r8, #-0]
    149c:	010c2701 	tsteq	ip, r1, lsl #14
    14a0:	09000013 	stmdbeq	r0, {r0, r1, r4}
    14a4:	13490005 	movtne	r0, #36869	; 0x9005
    14a8:	0f0a0000 	svceq	0x000a0000
    14ac:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    14b0:	0b000013 	bleq	1504 <_Min_Stack_Size+0x504>
    14b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    14b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    14bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    14c0:	340c0000 	strcc	r0, [ip], #-0
    14c4:	3a0e0300 	bcc	3820cc <__RAM_SIZE+0x2820cc>
    14c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14cc:	3f13490b 	svccc	0x0013490b
    14d0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    14d4:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    14d8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    14dc:	0b3b0b3a 	bleq	ec41cc <__RAM_SIZE+0xdc41cc>
    14e0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    14e4:	01120111 	tsteq	r2, r1, lsl r1
    14e8:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
    14ec:	0013010c 	andseq	r0, r3, ip, lsl #2
    14f0:	00340e00 	eorseq	r0, r4, r0, lsl #28
    14f4:	0b3a0e03 	bleq	e84d08 <__RAM_SIZE+0xd84d08>
    14f8:	0b390b3b 	bleq	e441ec <__RAM_SIZE+0xd441ec>
    14fc:	06021349 	streq	r1, [r2], -r9, asr #6
    1500:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1504:	010b0f00 	tsteq	fp, r0, lsl #30
    1508:	01120111 	tsteq	r2, r1, lsl r1
    150c:	00001301 	andeq	r1, r0, r1, lsl #6
    1510:	31011d10 	tstcc	r1, r0, lsl sp
    1514:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1518:	01110b42 	tsteq	r1, r2, asr #22
    151c:	0b580112 	bleq	160196c <__RAM_SIZE+0x150196c>
    1520:	0b570b59 	bleq	15c428c <__RAM_SIZE+0x14c428c>
    1524:	00001301 	andeq	r1, r0, r1, lsl #6
    1528:	31003411 	tstcc	r0, r1, lsl r4
    152c:	b7060213 	smladlt	r6, r3, r2, r0
    1530:	00000642 	andeq	r0, r0, r2, asr #12
    1534:	31011d12 	tstcc	r1, r2, lsl sp
    1538:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    153c:	01110b42 	tsteq	r1, r2, asr #22
    1540:	0b580112 	bleq	1601990 <__RAM_SIZE+0x1501990>
    1544:	0b570b59 	bleq	15c42b0 <__RAM_SIZE+0x14c42b0>
    1548:	05130000 	ldreq	r0, [r3, #-0]
    154c:	02133100 	andseq	r3, r3, #0, 2
    1550:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1554:	1d140000 	ldcne	0, cr0, [r4, #-0]
    1558:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    155c:	0b42b801 	bleq	10af568 <__RAM_SIZE+0xfaf568>
    1560:	01120111 	tsteq	r2, r1, lsl r1
    1564:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1568:	00000b57 	andeq	r0, r0, r7, asr fp
    156c:	01828915 	orreq	r8, r2, r5, lsl r9
    1570:	01011101 	tsteq	r1, r1, lsl #2
    1574:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1578:	0001828a 	andeq	r8, r1, sl, lsl #5
    157c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1580:	1700000a 	strne	r0, [r0, -sl]
    1584:	01018289 	smlabbeq	r1, r9, r2, r8
    1588:	13310111 	teqne	r1, #1073741828	; 0x40000004
    158c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    1590:	3a0e0301 	bcc	38219c <__RAM_SIZE+0x28219c>
    1594:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1598:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    159c:	010b2013 	tsteq	fp, r3, lsl r0
    15a0:	19000013 	stmdbne	r0, {r0, r1, r4}
    15a4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    15a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    15ac:	13490b39 	movtne	r0, #39737	; 0x9b39
    15b0:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    15b4:	3a0e0301 	bcc	3821c0 <__RAM_SIZE+0x2821c0>
    15b8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15bc:	200c270b 	andcs	r2, ip, fp, lsl #14
    15c0:	0013010b 	andseq	r0, r3, fp, lsl #2
    15c4:	00051b00 	andeq	r1, r5, r0, lsl #22
    15c8:	0b3a0e03 	bleq	e84ddc <__RAM_SIZE+0xd84ddc>
    15cc:	0b39053b 	bleq	e42ac0 <__RAM_SIZE+0xd42ac0>
    15d0:	00001349 	andeq	r1, r0, r9, asr #6
    15d4:	3f002e1c 	svccc	0x00002e1c
    15d8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    15dc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    15e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    15e4:	00000b39 	andeq	r0, r0, r9, lsr fp
    15e8:	01110100 	tsteq	r1, r0, lsl #2
    15ec:	0b130e25 	bleq	4c4e88 <__RAM_SIZE+0x3c4e88>
    15f0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    15f4:	01110655 	tsteq	r1, r5, asr r6
    15f8:	06100152 			; <UNDEFINED> instruction: 0x06100152
    15fc:	24020000 	strcs	r0, [r2], #-0
    1600:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1604:	000e030b 	andeq	r0, lr, fp, lsl #6
    1608:	00240300 	eoreq	r0, r4, r0, lsl #6
    160c:	0b3e0b0b 	bleq	f84240 <__RAM_SIZE+0xe84240>
    1610:	00000803 	andeq	r0, r0, r3, lsl #16
    1614:	0b000f04 	bleq	522c <_Min_Stack_Size+0x422c>
    1618:	0500000b 	streq	r0, [r0, #-11]
    161c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1620:	0b3b0b3a 	bleq	ec4310 <__RAM_SIZE+0xdc4310>
    1624:	13490b39 	movtne	r0, #39737	; 0x9b39
    1628:	35060000 	strcc	r0, [r6, #-0]
    162c:	00134900 	andseq	r4, r3, r0, lsl #18
    1630:	01130700 	tsteq	r3, r0, lsl #14
    1634:	0b0b0e03 	bleq	2c4e48 <__RAM_SIZE+0x1c4e48>
    1638:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    163c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1640:	0d080000 	stceq	0, cr0, [r8, #-0]
    1644:	3a0e0300 	bcc	38224c <__RAM_SIZE+0x28224c>
    1648:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    164c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1650:	0900000a 	stmdbeq	r0, {r1, r3}
    1654:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1658:	00001301 	andeq	r1, r0, r1, lsl #6
    165c:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    1660:	0b000013 	bleq	16b4 <_Min_Stack_Size+0x6b4>
    1664:	0b0b000f 	bleq	2c16a8 <__RAM_SIZE+0x1c16a8>
    1668:	00001349 	andeq	r1, r0, r9, asr #6
    166c:	0300160c 	movweq	r1, #1548	; 0x60c
    1670:	3b0b3a0e 	blcc	2cfeb0 <__RAM_SIZE+0x1cfeb0>
    1674:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1678:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    167c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1680:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1684:	13490b39 	movtne	r0, #39737	; 0x9b39
    1688:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    168c:	340e0000 	strcc	r0, [lr], #-0
    1690:	3a0e0300 	bcc	382298 <__RAM_SIZE+0x282298>
    1694:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1698:	3f13490b 	svccc	0x0013490b
    169c:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    16a0:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    16a4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    16a8:	0b3b0b3a 	bleq	ec4398 <__RAM_SIZE+0xdc4398>
    16ac:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    16b0:	01111349 	tsteq	r1, r9, asr #6
    16b4:	06400112 			; <UNDEFINED> instruction: 0x06400112
    16b8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    16bc:	10000013 	andne	r0, r0, r3, lsl r0
    16c0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    16c4:	0b3b0b3a 	bleq	ec43b4 <__RAM_SIZE+0xdc43b4>
    16c8:	13490b39 	movtne	r0, #39737	; 0x9b39
    16cc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    16d0:	11000006 	tstne	r0, r6
    16d4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    16d8:	0b3b0b3a 	bleq	ec43c8 <__RAM_SIZE+0xdc43c8>
    16dc:	13490b39 	movtne	r0, #39737	; 0x9b39
    16e0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    16e4:	12000006 	andne	r0, r0, #6
    16e8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    16ec:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    16f0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    16f4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    16f8:	010b570b 	tsteq	fp, fp, lsl #14
    16fc:	13000013 	movwne	r0, #19
    1700:	13310034 	teqne	r1, #52	; 0x34
    1704:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1708:	14000006 	strne	r0, [r0], #-6
    170c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1710:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1714:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1718:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    171c:	000b5705 	andeq	r5, fp, r5, lsl #14
    1720:	00051500 	andeq	r1, r5, r0, lsl #10
    1724:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1728:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    172c:	82891600 	addhi	r1, r9, #0, 12
    1730:	01110101 	tsteq	r1, r1, lsl #2
    1734:	00001331 	andeq	r1, r0, r1, lsr r3
    1738:	01828a17 	orreq	r8, r2, r7, lsl sl
    173c:	910a0200 	mrsls	r0, R10_fiq
    1740:	00000a42 	andeq	r0, r0, r2, asr #20
    1744:	03012e18 	movweq	r2, #7704	; 0x1e18
    1748:	3b0b3a0e 	blcc	2cff88 <__RAM_SIZE+0x1cff88>
    174c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1750:	2013490c 	andscs	r4, r3, ip, lsl #18
    1754:	0013010b 	andseq	r0, r3, fp, lsl #2
    1758:	00341900 	eorseq	r1, r4, r0, lsl #18
    175c:	0b3a0e03 	bleq	e84f70 <__RAM_SIZE+0xd84f70>
    1760:	0b39053b 	bleq	e42c54 <__RAM_SIZE+0xd42c54>
    1764:	00001349 	andeq	r1, r0, r9, asr #6
    1768:	03012e1a 	movweq	r2, #7706	; 0x1e1a
    176c:	3b0b3a0e 	blcc	2cffac <__RAM_SIZE+0x1cffac>
    1770:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1774:	010b200c 	tsteq	fp, ip
    1778:	1b000013 	blne	17cc <_Min_Stack_Size+0x7cc>
    177c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1780:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1784:	13490b39 	movtne	r0, #39737	; 0x9b39
    1788:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    178c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1790:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1794:	0b3a0e03 	bleq	e84fa8 <__RAM_SIZE+0xd84fa8>
    1798:	0b39053b 	bleq	e42c8c <__RAM_SIZE+0xd42c8c>
    179c:	01000000 	mrseq	r0, (UNDEF: 0)
    17a0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    17a4:	0e030b13 	vmoveq.32	d3[0], r0
    17a8:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    17ac:	01520111 	cmpeq	r2, r1, lsl r1
    17b0:	00000610 	andeq	r0, r0, r0, lsl r6
    17b4:	0b002402 	bleq	a7c4 <_Min_Stack_Size+0x97c4>
    17b8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    17bc:	0300000e 	movweq	r0, #14
    17c0:	0b0b0024 	bleq	2c1858 <__RAM_SIZE+0x1c1858>
    17c4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    17c8:	0f040000 	svceq	0x00040000
    17cc:	000b0b00 	andeq	r0, fp, r0, lsl #22
    17d0:	00160500 	andseq	r0, r6, r0, lsl #10
    17d4:	0b3a0e03 	bleq	e84fe8 <__RAM_SIZE+0xd84fe8>
    17d8:	0b390b3b 	bleq	e444cc <__RAM_SIZE+0xd444cc>
    17dc:	00001349 	andeq	r1, r0, r9, asr #6
    17e0:	03011306 	movweq	r1, #4870	; 0x1306
    17e4:	3a0b0b0e 	bcc	2c4424 <__RAM_SIZE+0x1c4424>
    17e8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17ec:	0013010b 	andseq	r0, r3, fp, lsl #2
    17f0:	000d0700 	andeq	r0, sp, r0, lsl #14
    17f4:	0b3a0e03 	bleq	e85008 <__RAM_SIZE+0xd85008>
    17f8:	0b39053b 	bleq	e42cec <__RAM_SIZE+0xd42cec>
    17fc:	0a381349 	beq	e06528 <__RAM_SIZE+0xd06528>
    1800:	15080000 	strne	r0, [r8, #-0]
    1804:	010c2701 	tsteq	ip, r1, lsl #14
    1808:	09000013 	stmdbeq	r0, {r0, r1, r4}
    180c:	13490005 	movtne	r0, #36869	; 0x9005
    1810:	0f0a0000 	svceq	0x000a0000
    1814:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1818:	0b000013 	bleq	186c <_Min_Stack_Size+0x86c>
    181c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1820:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1824:	13490b39 	movtne	r0, #39737	; 0x9b39
    1828:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    182c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1830:	3b0b3a0e 	blcc	2d0070 <__RAM_SIZE+0x1d0070>
    1834:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1838:	1201110c 	andne	r1, r1, #12, 2
    183c:	97064001 	strls	r4, [r6, -r1]
    1840:	13010c42 	movwne	r0, #7234	; 0x1c42
    1844:	050d0000 	streq	r0, [sp, #-0]
    1848:	3a0e0300 	bcc	382450 <__RAM_SIZE+0x282450>
    184c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1850:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1854:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    1858:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    185c:	0b3b0b3a 	bleq	ec454c <__RAM_SIZE+0xdc454c>
    1860:	13490b39 	movtne	r0, #39737	; 0x9b39
    1864:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1868:	0f000006 	svceq	0x00000006
    186c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1870:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1874:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1878:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    187c:	010b570b 	tsteq	fp, fp, lsl #14
    1880:	10000013 	andne	r0, r0, r3, lsl r0
    1884:	13310034 	teqne	r1, #52	; 0x34
    1888:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    188c:	11000006 	tstne	r0, r6
    1890:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1894:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1898:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    189c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    18a0:	000b5705 	andeq	r5, fp, r5, lsl #14
    18a4:	011d1200 	tsteq	sp, r0, lsl #4
    18a8:	01521331 	cmpeq	r2, r1, lsr r3
    18ac:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    18b0:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    18b4:	010b570b 	tsteq	fp, fp, lsl #14
    18b8:	13000013 	movwne	r0, #19
    18bc:	13310005 	teqne	r1, #5
    18c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    18c4:	14000006 	strne	r0, [r0], #-6
    18c8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    18cc:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    18d0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    18d4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    18d8:	000b570b 	andeq	r5, fp, fp, lsl #14
    18dc:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
    18e0:	0b3a0e03 	bleq	e850f4 <__RAM_SIZE+0xd850f4>
    18e4:	0b39053b 	bleq	e42dd8 <__RAM_SIZE+0xd42dd8>
    18e8:	13490c27 	movtne	r0, #39975	; 0x9c27
    18ec:	13010b20 	movwne	r0, #6944	; 0x1b20
    18f0:	34160000 	ldrcc	r0, [r6], #-0
    18f4:	3a0e0300 	bcc	3824fc <__RAM_SIZE+0x2824fc>
    18f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    18fc:	0013490b 	andseq	r4, r3, fp, lsl #18
    1900:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1904:	0b3a0e03 	bleq	e85118 <__RAM_SIZE+0xd85118>
    1908:	0b39053b 	bleq	e42dfc <__RAM_SIZE+0xd42dfc>
    190c:	0b200c27 	bleq	8049b0 <__RAM_SIZE+0x7049b0>
    1910:	00001301 	andeq	r1, r0, r1, lsl #6
    1914:	03000518 	movweq	r0, #1304	; 0x518
    1918:	3b0b3a0e 	blcc	2d0158 <__RAM_SIZE+0x1d0158>
    191c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1920:	19000013 	stmdbne	r0, {r0, r1, r4}
    1924:	0e03012e 	adfeqsp	f0, f3, #0.5
    1928:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    192c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1930:	0b201349 	bleq	80665c <__RAM_SIZE+0x70665c>
    1934:	01000000 	mrseq	r0, (UNDEF: 0)
    1938:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    193c:	0e030b13 	vmoveq.32	d3[0], r0
    1940:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1944:	01520111 	cmpeq	r2, r1, lsl r1
    1948:	00000610 	andeq	r0, r0, r0, lsl r6
    194c:	0b002402 	bleq	a95c <_Min_Stack_Size+0x995c>
    1950:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1954:	0300000e 	movweq	r0, #14
    1958:	0b0b0024 	bleq	2c19f0 <__RAM_SIZE+0x1c19f0>
    195c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1960:	0f040000 	svceq	0x00040000
    1964:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1968:	00160500 	andseq	r0, r6, r0, lsl #10
    196c:	0b3a0e03 	bleq	e85180 <__RAM_SIZE+0xd85180>
    1970:	0b390b3b 	bleq	e44664 <__RAM_SIZE+0xd44664>
    1974:	00001349 	andeq	r1, r0, r9, asr #6
    1978:	03011306 	movweq	r1, #4870	; 0x1306
    197c:	3a0b0b0e 	bcc	2c45bc <__RAM_SIZE+0x1c45bc>
    1980:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1984:	0013010b 	andseq	r0, r3, fp, lsl #2
    1988:	000d0700 	andeq	r0, sp, r0, lsl #14
    198c:	0b3a0e03 	bleq	e851a0 <__RAM_SIZE+0xd851a0>
    1990:	0b39053b 	bleq	e42e84 <__RAM_SIZE+0xd42e84>
    1994:	0a381349 	beq	e066c0 <__RAM_SIZE+0xd066c0>
    1998:	15080000 	strne	r0, [r8, #-0]
    199c:	010c2701 	tsteq	ip, r1, lsl #14
    19a0:	09000013 	stmdbeq	r0, {r0, r1, r4}
    19a4:	13490005 	movtne	r0, #36869	; 0x9005
    19a8:	0f0a0000 	svceq	0x000a0000
    19ac:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    19b0:	0b000013 	bleq	1a04 <_Min_Stack_Size+0xa04>
    19b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    19b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    19bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    19c0:	340c0000 	strcc	r0, [ip], #-0
    19c4:	3a0e0300 	bcc	3825cc <__RAM_SIZE+0x2825cc>
    19c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19cc:	3f13490b 	svccc	0x0013490b
    19d0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    19d4:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    19d8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    19dc:	0b3b0b3a 	bleq	ec46cc <__RAM_SIZE+0xdc46cc>
    19e0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    19e4:	01120111 	tsteq	r2, r1, lsl r1
    19e8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    19ec:	0013010c 	andseq	r0, r3, ip, lsl #2
    19f0:	00050e00 	andeq	r0, r5, r0, lsl #28
    19f4:	0b3a0e03 	bleq	e85208 <__RAM_SIZE+0xd85208>
    19f8:	0b390b3b 	bleq	e446ec <__RAM_SIZE+0xd446ec>
    19fc:	06021349 	streq	r1, [r2], -r9, asr #6
    1a00:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1a04:	00340f00 	eorseq	r0, r4, r0, lsl #30
    1a08:	0b3a0e03 	bleq	e8521c <__RAM_SIZE+0xd8521c>
    1a0c:	0b390b3b 	bleq	e44700 <__RAM_SIZE+0xd44700>
    1a10:	06021349 	streq	r1, [r2], -r9, asr #6
    1a14:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1a18:	011d1000 	tsteq	sp, r0
    1a1c:	01521331 	cmpeq	r2, r1, lsr r3
    1a20:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1a24:	58011201 	stmdapl	r1, {r0, r9, ip}
    1a28:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1a2c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1a30:	00341100 	eorseq	r1, r4, r0, lsl #2
    1a34:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1a38:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1a3c:	011d1200 	tsteq	sp, r0, lsl #4
    1a40:	01521331 	cmpeq	r2, r1, lsr r3
    1a44:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1a48:	58011201 	stmdapl	r1, {r0, r9, ip}
    1a4c:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1a50:	1300000b 	movwne	r0, #11
    1a54:	13310005 	teqne	r1, #5
    1a58:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1a5c:	14000006 	strne	r0, [r0], #-6
    1a60:	01018289 	smlabbeq	r1, r9, r2, r8
    1a64:	00000111 	andeq	r0, r0, r1, lsl r1
    1a68:	01828a15 	orreq	r8, r2, r5, lsl sl
    1a6c:	910a0200 	mrsls	r0, R10_fiq
    1a70:	00000a42 	andeq	r0, r0, r2, asr #20
    1a74:	03012e16 	movweq	r2, #7702	; 0x1e16
    1a78:	3b0b3a0e 	blcc	2d02b8 <__RAM_SIZE+0x1d02b8>
    1a7c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1a80:	2013490c 	andscs	r4, r3, ip, lsl #18
    1a84:	0013010b 	andseq	r0, r3, fp, lsl #2
    1a88:	00341700 	eorseq	r1, r4, r0, lsl #14
    1a8c:	0b3a0e03 	bleq	e852a0 <__RAM_SIZE+0xd852a0>
    1a90:	0b39053b 	bleq	e42f84 <__RAM_SIZE+0xd42f84>
    1a94:	00001349 	andeq	r1, r0, r9, asr #6
    1a98:	03012e18 	movweq	r2, #7704	; 0x1e18
    1a9c:	3b0b3a0e 	blcc	2d02dc <__RAM_SIZE+0x1d02dc>
    1aa0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1aa4:	010b200c 	tsteq	fp, ip
    1aa8:	19000013 	stmdbne	r0, {r0, r1, r4}
    1aac:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1ab0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1ab4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ab8:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1abc:	3a0e0301 	bcc	3826c8 <__RAM_SIZE+0x2826c8>
    1ac0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ac4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1ac8:	000b2013 	andeq	r2, fp, r3, lsl r0
    1acc:	11010000 	mrsne	r0, (UNDEF: 1)
    1ad0:	130e2501 	movwne	r2, #58625	; 0xe501
    1ad4:	1b0e030b 	blne	382708 <__RAM_SIZE+0x282708>
    1ad8:	1106550e 	tstne	r6, lr, lsl #10
    1adc:	10015201 	andne	r5, r1, r1, lsl #4
    1ae0:	02000006 	andeq	r0, r0, #6
    1ae4:	0b0b0024 	bleq	2c1b7c <__RAM_SIZE+0x1c1b7c>
    1ae8:	0e030b3e 	vmoveq.16	d3[0], r0
    1aec:	24030000 	strcs	r0, [r3], #-0
    1af0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1af4:	0008030b 	andeq	r0, r8, fp, lsl #6
    1af8:	000f0400 	andeq	r0, pc, r0, lsl #8
    1afc:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1b00:	03001605 	movweq	r1, #1541	; 0x605
    1b04:	3b0b3a0e 	blcc	2d0344 <__RAM_SIZE+0x1d0344>
    1b08:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b0c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1b10:	13490035 	movtne	r0, #36917	; 0x9035
    1b14:	13070000 	movwne	r0, #28672	; 0x7000
    1b18:	0b0e0301 	bleq	382724 <__RAM_SIZE+0x282724>
    1b1c:	3b0b3a0b 	blcc	2d0350 <__RAM_SIZE+0x1d0350>
    1b20:	010b3905 	tsteq	fp, r5, lsl #18
    1b24:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1b28:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1b2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1b30:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b34:	00000a38 	andeq	r0, r0, r8, lsr sl
    1b38:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    1b3c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1b40:	00050a00 	andeq	r0, r5, r0, lsl #20
    1b44:	00001349 	andeq	r1, r0, r9, asr #6
    1b48:	0b000f0b 	bleq	577c <_Min_Stack_Size+0x477c>
    1b4c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1b50:	00160c00 	andseq	r0, r6, r0, lsl #24
    1b54:	0b3a0e03 	bleq	e85368 <__RAM_SIZE+0xd85368>
    1b58:	0b39053b 	bleq	e4304c <__RAM_SIZE+0xd4304c>
    1b5c:	00001349 	andeq	r1, r0, r9, asr #6
    1b60:	0300340d 	movweq	r3, #1037	; 0x40d
    1b64:	3b0b3a0e 	blcc	2d03a4 <__RAM_SIZE+0x1d03a4>
    1b68:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1b6c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    1b70:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    1b74:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1ac4 <_Min_Stack_Size+0xac4>
    1b78:	0b3a0e03 	bleq	e8538c <__RAM_SIZE+0xd8538c>
    1b7c:	0b390b3b 	bleq	e44870 <__RAM_SIZE+0xd44870>
    1b80:	01110c27 	tsteq	r1, r7, lsr #24
    1b84:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1b88:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1b8c:	0f000013 	svceq	0x00000013
    1b90:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1b94:	0b3b0b3a 	bleq	ec4884 <__RAM_SIZE+0xdc4884>
    1b98:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b9c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1ba0:	10000006 	andne	r0, r0, r6
    1ba4:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
    1ba8:	00001301 	andeq	r1, r0, r1, lsl #6
    1bac:	31011d11 	tstcc	r1, r1, lsl sp
    1bb0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1bb4:	01110b42 	tsteq	r1, r2, asr #22
    1bb8:	0b580112 	bleq	1602008 <__RAM_SIZE+0x1502008>
    1bbc:	0b570b59 	bleq	15c4928 <__RAM_SIZE+0x14c4928>
    1bc0:	00001301 	andeq	r1, r0, r1, lsl #6
    1bc4:	31003412 	tstcc	r0, r2, lsl r4
    1bc8:	b7060213 	smladlt	r6, r3, r2, r0
    1bcc:	00000642 	andeq	r0, r0, r2, asr #12
    1bd0:	31011d13 	tstcc	r1, r3, lsl sp
    1bd4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1bd8:	01110b42 	tsteq	r1, r2, asr #22
    1bdc:	0b580112 	bleq	160202c <__RAM_SIZE+0x150202c>
    1be0:	0b570559 	bleq	15c314c <__RAM_SIZE+0x14c314c>
    1be4:	05140000 	ldreq	r0, [r4, #-0]
    1be8:	02133100 	andseq	r3, r3, #0, 2
    1bec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1bf0:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
    1bf4:	11010182 	smlabbne	r1, r2, r1, r0
    1bf8:	01133101 	tsteq	r3, r1, lsl #2
    1bfc:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1c00:	0001828a 	andeq	r8, r1, sl, lsl #5
    1c04:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1c08:	1700000a 	strne	r0, [r0, -sl]
    1c0c:	01018289 	smlabbeq	r1, r9, r2, r8
    1c10:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1c14:	1d180000 	ldcne	0, cr0, [r8, #-0]
    1c18:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1c1c:	0b42b801 	bleq	10afc28 <__RAM_SIZE+0xfafc28>
    1c20:	01120111 	tsteq	r2, r1, lsl r1
    1c24:	0b590b58 	bleq	164498c <__RAM_SIZE+0x154498c>
    1c28:	00000b57 	andeq	r0, r0, r7, asr fp
    1c2c:	31011d19 	tstcc	r1, r9, lsl sp
    1c30:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1c34:	01110b42 	tsteq	r1, r2, asr #22
    1c38:	0b580112 	bleq	1602088 <__RAM_SIZE+0x1502088>
    1c3c:	0b570559 	bleq	15c31a8 <__RAM_SIZE+0x14c31a8>
    1c40:	00001301 	andeq	r1, r0, r1, lsl #6
    1c44:	31001d1a 	tstcc	r0, sl, lsl sp
    1c48:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1c4c:	01110b42 	tsteq	r1, r2, asr #22
    1c50:	0b580112 	bleq	16020a0 <__RAM_SIZE+0x15020a0>
    1c54:	0b570559 	bleq	15c31c0 <__RAM_SIZE+0x14c31c0>
    1c58:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    1c5c:	3a0e0301 	bcc	382868 <__RAM_SIZE+0x282868>
    1c60:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c64:	200c270b 	andcs	r2, ip, fp, lsl #14
    1c68:	0013010b 	andseq	r0, r3, fp, lsl #2
    1c6c:	00341c00 	eorseq	r1, r4, r0, lsl #24
    1c70:	0b3a0e03 	bleq	e85484 <__RAM_SIZE+0xd85484>
    1c74:	0b39053b 	bleq	e43168 <__RAM_SIZE+0xd43168>
    1c78:	00001349 	andeq	r1, r0, r9, asr #6
    1c7c:	03012e1d 	movweq	r2, #7709	; 0x1e1d
    1c80:	3b0b3a0e 	blcc	2d04c0 <__RAM_SIZE+0x1d04c0>
    1c84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1c88:	2013490c 	andscs	r4, r3, ip, lsl #18
    1c8c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1c90:	00051e00 	andeq	r1, r5, r0, lsl #28
    1c94:	0b3a0e03 	bleq	e854a8 <__RAM_SIZE+0xd854a8>
    1c98:	0b39053b 	bleq	e4318c <__RAM_SIZE+0xd4318c>
    1c9c:	00001349 	andeq	r1, r0, r9, asr #6
    1ca0:	03002e1f 	movweq	r2, #3615	; 0xe1f
    1ca4:	3b0b3a0e 	blcc	2d04e4 <__RAM_SIZE+0x1d04e4>
    1ca8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1cac:	000b200c 	andeq	r2, fp, ip
    1cb0:	002e2000 	eoreq	r2, lr, r0
    1cb4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1cb8:	030e4087 	movweq	r4, #57479	; 0xe087
    1cbc:	3b0b3a0e 	blcc	2d04fc <__RAM_SIZE+0x1d04fc>
    1cc0:	000b3905 	andeq	r3, fp, r5, lsl #18
    1cc4:	11010000 	mrsne	r0, (UNDEF: 1)
    1cc8:	130e2501 	movwne	r2, #58625	; 0xe501
    1ccc:	1b0e030b 	blne	382900 <__RAM_SIZE+0x282900>
    1cd0:	1106550e 	tstne	r6, lr, lsl #10
    1cd4:	10015201 	andne	r5, r1, r1, lsl #4
    1cd8:	02000006 	andeq	r0, r0, #6
    1cdc:	0b0b0024 	bleq	2c1d74 <__RAM_SIZE+0x1c1d74>
    1ce0:	0e030b3e 	vmoveq.16	d3[0], r0
    1ce4:	24030000 	strcs	r0, [r3], #-0
    1ce8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1cec:	0008030b 	andeq	r0, r8, fp, lsl #6
    1cf0:	000f0400 	andeq	r0, pc, r0, lsl #8
    1cf4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1cf8:	03001605 	movweq	r1, #1541	; 0x605
    1cfc:	3b0b3a0e 	blcc	2d053c <__RAM_SIZE+0x1d053c>
    1d00:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d04:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1d08:	13490035 	movtne	r0, #36917	; 0x9035
    1d0c:	13070000 	movwne	r0, #28672	; 0x7000
    1d10:	0b0e0301 	bleq	38291c <__RAM_SIZE+0x28291c>
    1d14:	3b0b3a0b 	blcc	2d0548 <__RAM_SIZE+0x1d0548>
    1d18:	010b3905 	tsteq	fp, r5, lsl #18
    1d1c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1d20:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1d24:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d28:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d2c:	00000a38 	andeq	r0, r0, r8, lsr sl
    1d30:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    1d34:	0013010c 	andseq	r0, r3, ip, lsl #2
    1d38:	00050a00 	andeq	r0, r5, r0, lsl #20
    1d3c:	00001349 	andeq	r1, r0, r9, asr #6
    1d40:	0b000f0b 	bleq	5974 <_Min_Stack_Size+0x4974>
    1d44:	0013490b 	andseq	r4, r3, fp, lsl #18
    1d48:	00160c00 	andseq	r0, r6, r0, lsl #24
    1d4c:	0b3a0e03 	bleq	e85560 <__RAM_SIZE+0xd85560>
    1d50:	0b39053b 	bleq	e43244 <__RAM_SIZE+0xd43244>
    1d54:	00001349 	andeq	r1, r0, r9, asr #6
    1d58:	0300340d 	movweq	r3, #1037	; 0x40d
    1d5c:	3b0b3a0e 	blcc	2d059c <__RAM_SIZE+0x1d059c>
    1d60:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1d64:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    1d68:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    1d6c:	13490101 	movtne	r0, #37121	; 0x9101
    1d70:	00001301 	andeq	r1, r0, r1, lsl #6
    1d74:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    1d78:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1d7c:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
    1d80:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1d84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d88:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1d8c:	01120111 	tsteq	r2, r1, lsl r1
    1d90:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1d94:	0013010c 	andseq	r0, r3, ip, lsl #2
    1d98:	00051100 	andeq	r1, r5, r0, lsl #2
    1d9c:	0b3a0e03 	bleq	e855b0 <__RAM_SIZE+0xd855b0>
    1da0:	0b39053b 	bleq	e43294 <__RAM_SIZE+0xd43294>
    1da4:	06021349 	streq	r1, [r2], -r9, asr #6
    1da8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1dac:	00341200 	eorseq	r1, r4, r0, lsl #4
    1db0:	0b3a0e03 	bleq	e855c4 <__RAM_SIZE+0xd855c4>
    1db4:	0b39053b 	bleq	e432a8 <__RAM_SIZE+0xd432a8>
    1db8:	06021349 	streq	r1, [r2], -r9, asr #6
    1dbc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1dc0:	010b1300 	mrseq	r1, (UNDEF: 59)
    1dc4:	13010655 	movwne	r0, #5717	; 0x1655
    1dc8:	1d140000 	ldcne	0, cr0, [r4, #-0]
    1dcc:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1dd0:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
    1dd4:	01120111 	tsteq	r2, r1, lsl r1
    1dd8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1ddc:	13010b57 	movwne	r0, #6999	; 0x1b57
    1de0:	34150000 	ldrcc	r0, [r5], #-0
    1de4:	02133100 	andseq	r3, r3, #0, 2
    1de8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1dec:	1d160000 	ldcne	0, cr0, [r6, #-0]
    1df0:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1df4:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
    1df8:	01120111 	tsteq	r2, r1, lsl r1
    1dfc:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1e00:	00000b57 	andeq	r0, r0, r7, asr fp
    1e04:	31000517 	tstcc	r0, r7, lsl r5
    1e08:	b7060213 	smladlt	r6, r3, r2, r0
    1e0c:	00000642 	andeq	r0, r0, r2, asr #12
    1e10:	01828918 	orreq	r8, r2, r8, lsl r9
    1e14:	31011101 	tstcc	r1, r1, lsl #2
    1e18:	00130113 	andseq	r0, r3, r3, lsl r1
    1e1c:	828a1900 	addhi	r1, sl, #0, 18
    1e20:	0a020001 	beq	81e2c <SYSTICK_CYCLES+0x58ded>
    1e24:	000a4291 	muleq	sl, r1, r2
    1e28:	82891a00 	addhi	r1, r9, #0, 20
    1e2c:	01110101 	tsteq	r1, r1, lsl #2
    1e30:	00001331 	andeq	r1, r0, r1, lsr r3
    1e34:	31001d1b 	tstcc	r0, fp, lsl sp
    1e38:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1e3c:	01110542 	tsteq	r1, r2, asr #10
    1e40:	0b580112 	bleq	1602290 <__RAM_SIZE+0x1502290>
    1e44:	0b570559 	bleq	15c33b0 <__RAM_SIZE+0x14c33b0>
    1e48:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1e4c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1e50:	3b0b3a0e 	blcc	2d0690 <__RAM_SIZE+0x1d0690>
    1e54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1e58:	1201110c 	andne	r1, r1, #12, 2
    1e5c:	97064001 	strls	r4, [r6, -r1]
    1e60:	13010c42 	movwne	r0, #7234	; 0x1c42
    1e64:	051d0000 	ldreq	r0, [sp, #-0]
    1e68:	3a0e0300 	bcc	382a70 <__RAM_SIZE+0x282a70>
    1e6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e74:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1e78:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
    1e7c:	11000182 	smlabbne	r0, r2, r1, r0
    1e80:	00133101 	andseq	r3, r3, r1, lsl #2
    1e84:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    1e88:	0b3a0e03 	bleq	e8569c <__RAM_SIZE+0xd8569c>
    1e8c:	0b39053b 	bleq	e43380 <__RAM_SIZE+0xd43380>
    1e90:	0b200c27 	bleq	804f34 <__RAM_SIZE+0x704f34>
    1e94:	00001301 	andeq	r1, r0, r1, lsl #6
    1e98:	03003420 	movweq	r3, #1056	; 0x420
    1e9c:	3b0b3a0e 	blcc	2d06dc <__RAM_SIZE+0x1d06dc>
    1ea0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1ea4:	21000013 	tstcs	r0, r3, lsl r0
    1ea8:	0e03012e 	adfeqsp	f0, f3, #0.5
    1eac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1eb0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1eb4:	0b201349 	bleq	806be0 <__RAM_SIZE+0x706be0>
    1eb8:	00001301 	andeq	r1, r0, r1, lsl #6
    1ebc:	03000522 	movweq	r0, #1314	; 0x522
    1ec0:	3b0b3a0e 	blcc	2d0700 <__RAM_SIZE+0x1d0700>
    1ec4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1ec8:	23000013 	movwcs	r0, #19
    1ecc:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    1ed0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1ed4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1ed8:	00000b20 	andeq	r0, r0, r0, lsr #22
    1edc:	3f002e24 	svccc	0x00002e24
    1ee0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1ee4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1ee8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1eec:	00000b39 	andeq	r0, r0, r9, lsr fp
    1ef0:	3f002e25 	svccc	0x00002e25
    1ef4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1ef8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1efc:	0b3b0b3a 	bleq	ec4bec <__RAM_SIZE+0xdc4bec>
    1f00:	00000b39 	andeq	r0, r0, r9, lsr fp
    1f04:	01110100 	tsteq	r1, r0, lsl #2
    1f08:	0b130e25 	bleq	4c57a4 <__RAM_SIZE+0x3c57a4>
    1f0c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1f10:	01110655 	tsteq	r1, r5, asr r6
    1f14:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1f18:	24020000 	strcs	r0, [r2], #-0
    1f1c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1f20:	000e030b 	andeq	r0, lr, fp, lsl #6
    1f24:	00240300 	eoreq	r0, r4, r0, lsl #6
    1f28:	0b3e0b0b 	bleq	f84b5c <__RAM_SIZE+0xe84b5c>
    1f2c:	00000803 	andeq	r0, r0, r3, lsl #16
    1f30:	0b000f04 	bleq	5b48 <_Min_Stack_Size+0x4b48>
    1f34:	0500000b 	streq	r0, [r0, #-11]
    1f38:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1f3c:	0b3b0b3a 	bleq	ec4c2c <__RAM_SIZE+0xdc4c2c>
    1f40:	13490b39 	movtne	r0, #39737	; 0x9b39
    1f44:	35060000 	strcc	r0, [r6, #-0]
    1f48:	00134900 	andseq	r4, r3, r0, lsl #18
    1f4c:	01130700 	tsteq	r3, r0, lsl #14
    1f50:	0b0b0e03 	bleq	2c5764 <__RAM_SIZE+0x1c5764>
    1f54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1f58:	13010b39 	movwne	r0, #6969	; 0x1b39
    1f5c:	0d080000 	stceq	0, cr0, [r8, #-0]
    1f60:	3a0e0300 	bcc	382b68 <__RAM_SIZE+0x282b68>
    1f64:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f68:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1f6c:	0900000a 	stmdbeq	r0, {r1, r3}
    1f70:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1f74:	00001301 	andeq	r1, r0, r1, lsl #6
    1f78:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    1f7c:	0b000013 	bleq	1fd0 <_Min_Stack_Size+0xfd0>
    1f80:	0b0b000f 	bleq	2c1fc4 <__RAM_SIZE+0x1c1fc4>
    1f84:	00001349 	andeq	r1, r0, r9, asr #6
    1f88:	0300160c 	movweq	r1, #1548	; 0x60c
    1f8c:	3b0b3a0e 	blcc	2d07cc <__RAM_SIZE+0x1d07cc>
    1f90:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1f94:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1f98:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1f9c:	0b3b0b3a 	bleq	ec4c8c <__RAM_SIZE+0xdc4c8c>
    1fa0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1fa4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1fa8:	340e0000 	strcc	r0, [lr], #-0
    1fac:	3a0e0300 	bcc	382bb4 <__RAM_SIZE+0x282bb4>
    1fb0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fb4:	3f13490b 	svccc	0x0013490b
    1fb8:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1fbc:	01010f00 	tsteq	r1, r0, lsl #30
    1fc0:	13011349 	movwne	r1, #4937	; 0x1349
    1fc4:	21100000 	tstcs	r0, r0
    1fc8:	2f134900 	svccs	0x00134900
    1fcc:	1100000b 	tstne	r0, fp
    1fd0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1f20 <_Min_Stack_Size+0xf20>
    1fd4:	0b3a0e03 	bleq	e857e8 <__RAM_SIZE+0xd857e8>
    1fd8:	0b39053b 	bleq	e434cc <__RAM_SIZE+0xd434cc>
    1fdc:	01110c27 	tsteq	r1, r7, lsr #24
    1fe0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1fe4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1fe8:	12000013 	andne	r0, r0, #19
    1fec:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1ff0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1ff4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ff8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1ffc:	13000006 	movwne	r0, #6
    2000:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2004:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2008:	13490b39 	movtne	r0, #39737	; 0x9b39
    200c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2010:	14000006 	strne	r0, [r0], #-6
    2014:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
    2018:	00001301 	andeq	r1, r0, r1, lsl #6
    201c:	31011d15 	tstcc	r1, r5, lsl sp
    2020:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    2024:	01110542 	tsteq	r1, r2, asr #10
    2028:	0b580112 	bleq	1602478 <__RAM_SIZE+0x1502478>
    202c:	0b570559 	bleq	15c3598 <__RAM_SIZE+0x14c3598>
    2030:	00001301 	andeq	r1, r0, r1, lsl #6
    2034:	31003416 	tstcc	r0, r6, lsl r4
    2038:	b7060213 	smladlt	r6, r3, r2, r0
    203c:	00000642 	andeq	r0, r0, r2, asr #12
    2040:	31011d17 	tstcc	r1, r7, lsl sp
    2044:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    2048:	01110542 	tsteq	r1, r2, asr #10
    204c:	0b580112 	bleq	160249c <__RAM_SIZE+0x150249c>
    2050:	0b570559 	bleq	15c35bc <__RAM_SIZE+0x14c35bc>
    2054:	05180000 	ldreq	r0, [r8, #-0]
    2058:	02133100 	andseq	r3, r3, #0, 2
    205c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2060:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    2064:	11010182 	smlabbne	r1, r2, r1, r0
    2068:	01133101 	tsteq	r3, r1, lsl #2
    206c:	1a000013 	bne	20c0 <_Min_Stack_Size+0x10c0>
    2070:	0001828a 	andeq	r8, r1, sl, lsl #5
    2074:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    2078:	1b00000a 	blne	20a8 <_Min_Stack_Size+0x10a8>
    207c:	01018289 	smlabbeq	r1, r9, r2, r8
    2080:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2084:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
    2088:	52133100 	andspl	r3, r3, #0, 2
    208c:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
    2090:	01120111 	tsteq	r2, r1, lsl r1
    2094:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    2098:	00000b57 	andeq	r0, r0, r7, asr fp
    209c:	3f012e1d 	svccc	0x00012e1d
    20a0:	3a0e030c 	bcc	382cd8 <__RAM_SIZE+0x282cd8>
    20a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20a8:	110c270b 	tstne	ip, fp, lsl #14
    20ac:	40011201 	andmi	r1, r1, r1, lsl #4
    20b0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    20b4:	00001301 	andeq	r1, r0, r1, lsl #6
    20b8:	0300051e 	movweq	r0, #1310	; 0x51e
    20bc:	3b0b3a0e 	blcc	2d08fc <__RAM_SIZE+0x1d08fc>
    20c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    20c4:	b7060213 	smladlt	r6, r3, r2, r0
    20c8:	00000642 	andeq	r0, r0, r2, asr #12
    20cc:	0182891f 	orreq	r8, r2, pc, lsl r9
    20d0:	31011100 	mrscc	r1, (UNDEF: 17)
    20d4:	20000013 	andcs	r0, r0, r3, lsl r0
    20d8:	0e03012e 	adfeqsp	f0, f3, #0.5
    20dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    20e0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    20e4:	13010b20 	movwne	r0, #6944	; 0x1b20
    20e8:	34210000 	strtcc	r0, [r1], #-0
    20ec:	3a0e0300 	bcc	382cf4 <__RAM_SIZE+0x282cf4>
    20f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    20f4:	0013490b 	andseq	r4, r3, fp, lsl #18
    20f8:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    20fc:	0b3a0e03 	bleq	e85910 <__RAM_SIZE+0xd85910>
    2100:	0b39053b 	bleq	e435f4 <__RAM_SIZE+0xd435f4>
    2104:	13490c27 	movtne	r0, #39975	; 0x9c27
    2108:	13010b20 	movwne	r0, #6944	; 0x1b20
    210c:	05230000 	streq	r0, [r3, #-0]!
    2110:	3a0e0300 	bcc	382d18 <__RAM_SIZE+0x282d18>
    2114:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2118:	0013490b 	andseq	r4, r3, fp, lsl #18
    211c:	002e2400 	eoreq	r2, lr, r0, lsl #8
    2120:	0b3a0e03 	bleq	e85934 <__RAM_SIZE+0xd85934>
    2124:	0b39053b 	bleq	e43618 <__RAM_SIZE+0xd43618>
    2128:	0b200c27 	bleq	8051cc <__RAM_SIZE+0x7051cc>
    212c:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    2130:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    2134:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    2138:	0b3a0e03 	bleq	e8594c <__RAM_SIZE+0xd8594c>
    213c:	0b39053b 	bleq	e43630 <__RAM_SIZE+0xd43630>
    2140:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    2144:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    2148:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    214c:	0b3a0e03 	bleq	e85960 <__RAM_SIZE+0xd85960>
    2150:	0b390b3b 	bleq	e44e44 <__RAM_SIZE+0xd44e44>
    2154:	01000000 	mrseq	r0, (UNDEF: 0)
    2158:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    215c:	0e030b13 	vmoveq.32	d3[0], r0
    2160:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    2164:	01520111 	cmpeq	r2, r1, lsl r1
    2168:	00000610 	andeq	r0, r0, r0, lsl r6
    216c:	0b002402 	bleq	b17c <_Min_Stack_Size+0xa17c>
    2170:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2174:	0300000e 	movweq	r0, #14
    2178:	0b0b0024 	bleq	2c2210 <__RAM_SIZE+0x1c2210>
    217c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2180:	0f040000 	svceq	0x00040000
    2184:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2188:	00160500 	andseq	r0, r6, r0, lsl #10
    218c:	0b3a0e03 	bleq	e859a0 <__RAM_SIZE+0xd859a0>
    2190:	0b390b3b 	bleq	e44e84 <__RAM_SIZE+0xd44e84>
    2194:	00001349 	andeq	r1, r0, r9, asr #6
    2198:	03011306 	movweq	r1, #4870	; 0x1306
    219c:	3a0b0b0e 	bcc	2c4ddc <__RAM_SIZE+0x1c4ddc>
    21a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    21a4:	0013010b 	andseq	r0, r3, fp, lsl #2
    21a8:	000d0700 	andeq	r0, sp, r0, lsl #14
    21ac:	0b3a0e03 	bleq	e859c0 <__RAM_SIZE+0xd859c0>
    21b0:	0b39053b 	bleq	e436a4 <__RAM_SIZE+0xd436a4>
    21b4:	0a381349 	beq	e06ee0 <__RAM_SIZE+0xd06ee0>
    21b8:	15080000 	strne	r0, [r8, #-0]
    21bc:	010c2701 	tsteq	ip, r1, lsl #14
    21c0:	09000013 	stmdbeq	r0, {r0, r1, r4}
    21c4:	13490005 	movtne	r0, #36869	; 0x9005
    21c8:	0f0a0000 	svceq	0x000a0000
    21cc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    21d0:	0b000013 	bleq	2224 <_Min_Stack_Size+0x1224>
    21d4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    21d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    21dc:	13490b39 	movtne	r0, #39737	; 0x9b39
    21e0:	340c0000 	strcc	r0, [ip], #-0
    21e4:	3a0e0300 	bcc	382dec <__RAM_SIZE+0x282dec>
    21e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    21ec:	3f13490b 	svccc	0x0013490b
    21f0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    21f4:	00340d00 	eorseq	r0, r4, r0, lsl #26
    21f8:	0b3a0e03 	bleq	e85a0c <__RAM_SIZE+0xd85a0c>
    21fc:	0b39053b 	bleq	e436f0 <__RAM_SIZE+0xd436f0>
    2200:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 20e4 <_Min_Stack_Size+0x10e4>
    2204:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2208:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
    220c:	00130113 	andseq	r0, r3, r3, lsl r1
    2210:	00210f00 	eoreq	r0, r1, r0, lsl #30
    2214:	0b2f1349 	bleq	bc6f40 <__RAM_SIZE+0xac6f40>
    2218:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    221c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2220:	3b0b3a0e 	blcc	2d0a60 <__RAM_SIZE+0x1d0a60>
    2224:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2228:	1201110c 	andne	r1, r1, #12, 2
    222c:	97064001 	strls	r4, [r6, -r1]
    2230:	13010c42 	movwne	r0, #7234	; 0x1c42
    2234:	34110000 	ldrcc	r0, [r1], #-0
    2238:	3a0e0300 	bcc	382e40 <__RAM_SIZE+0x282e40>
    223c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2240:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2244:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2248:	0b120000 	bleq	482250 <__RAM_SIZE+0x382250>
    224c:	01065501 	tsteq	r6, r1, lsl #10
    2250:	13000013 	movwne	r0, #19
    2254:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    2258:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    225c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    2260:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    2264:	010b570b 	tsteq	fp, fp, lsl #14
    2268:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    226c:	13310034 	teqne	r1, #52	; 0x34
    2270:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2274:	15000006 	strne	r0, [r0, #-6]
    2278:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    227c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    2280:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    2284:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    2288:	000b5705 	andeq	r5, fp, r5, lsl #14
    228c:	00051600 	andeq	r1, r5, r0, lsl #12
    2290:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2294:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2298:	82891700 	addhi	r1, r9, #0, 14
    229c:	01110101 	tsteq	r1, r1, lsl #2
    22a0:	13011331 	movwne	r1, #4913	; 0x1331
    22a4:	8a180000 	bhi	6022ac <__RAM_SIZE+0x5022ac>
    22a8:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    22ac:	0a42910a 	beq	10a66dc <__RAM_SIZE+0xfa66dc>
    22b0:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    22b4:	11010182 	smlabbne	r1, r2, r1, r0
    22b8:	00133101 	andseq	r3, r3, r1, lsl #2
    22bc:	011d1a00 	tsteq	sp, r0, lsl #20
    22c0:	01521331 	cmpeq	r2, r1, lsr r3
    22c4:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    22c8:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    22cc:	000b570b 	andeq	r5, fp, fp, lsl #14
    22d0:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    22d4:	0b3a0e03 	bleq	e85ae8 <__RAM_SIZE+0xd85ae8>
    22d8:	0b39053b 	bleq	e437cc <__RAM_SIZE+0xd437cc>
    22dc:	13490c27 	movtne	r0, #39975	; 0x9c27
    22e0:	13010b20 	movwne	r0, #6944	; 0x1b20
    22e4:	341c0000 	ldrcc	r0, [ip], #-0
    22e8:	3a0e0300 	bcc	382ef0 <__RAM_SIZE+0x282ef0>
    22ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    22f0:	0013490b 	andseq	r4, r3, fp, lsl #18
    22f4:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    22f8:	0b3a0e03 	bleq	e85b0c <__RAM_SIZE+0xd85b0c>
    22fc:	0b39053b 	bleq	e437f0 <__RAM_SIZE+0xd437f0>
    2300:	0b200c27 	bleq	8053a4 <__RAM_SIZE+0x7053a4>
    2304:	00001301 	andeq	r1, r0, r1, lsl #6
    2308:	0300051e 	movweq	r0, #1310	; 0x51e
    230c:	3b0b3a0e 	blcc	2d0b4c <__RAM_SIZE+0x1d0b4c>
    2310:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2314:	1f000013 	svcne	0x00000013
    2318:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2268 <_Min_Stack_Size+0x1268>
    231c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2320:	3a0e030e 	bcc	382f60 <__RAM_SIZE+0x282f60>
    2324:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2328:	0000000b 	andeq	r0, r0, fp
    232c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2330:	030b130e 	movweq	r1, #45838	; 0xb30e
    2334:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2338:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    233c:	00061001 	andeq	r1, r6, r1
    2340:	00240200 	eoreq	r0, r4, r0, lsl #4
    2344:	0b3e0b0b 	bleq	f84f78 <__RAM_SIZE+0xe84f78>
    2348:	00000e03 	andeq	r0, r0, r3, lsl #28
    234c:	0b002403 	bleq	b360 <_Min_Stack_Size+0xa360>
    2350:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2354:	04000008 	streq	r0, [r0], #-8
    2358:	0b0b000f 	bleq	2c239c <__RAM_SIZE+0x1c239c>
    235c:	16050000 	strne	r0, [r5], -r0
    2360:	3a0e0300 	bcc	382f68 <__RAM_SIZE+0x282f68>
    2364:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2368:	0013490b 	andseq	r4, r3, fp, lsl #18
    236c:	01130600 	tsteq	r3, r0, lsl #12
    2370:	0b0b0e03 	bleq	2c5b84 <__RAM_SIZE+0x1c5b84>
    2374:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2378:	13010b39 	movwne	r0, #6969	; 0x1b39
    237c:	0d070000 	stceq	0, cr0, [r7, #-0]
    2380:	3a0e0300 	bcc	382f88 <__RAM_SIZE+0x282f88>
    2384:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2388:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    238c:	0800000a 	stmdaeq	r0, {r1, r3}
    2390:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    2394:	00001301 	andeq	r1, r0, r1, lsl #6
    2398:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    239c:	0a000013 	beq	23f0 <_Min_Stack_Size+0x13f0>
    23a0:	0b0b000f 	bleq	2c23e4 <__RAM_SIZE+0x1c23e4>
    23a4:	00001349 	andeq	r1, r0, r9, asr #6
    23a8:	0300160b 	movweq	r1, #1547	; 0x60b
    23ac:	3b0b3a0e 	blcc	2d0bec <__RAM_SIZE+0x1d0bec>
    23b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    23b4:	0c000013 	stceq	0, cr0, [r0], {19}
    23b8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    23bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    23c0:	13490b39 	movtne	r0, #39737	; 0x9b39
    23c4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    23c8:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    23cc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    23d0:	3b0b3a0e 	blcc	2d0c10 <__RAM_SIZE+0x1d0c10>
    23d4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    23d8:	1201110c 	andne	r1, r1, #12, 2
    23dc:	97064001 	strls	r4, [r6, -r1]
    23e0:	13010c42 	movwne	r0, #7234	; 0x1c42
    23e4:	050e0000 	streq	r0, [lr, #-0]
    23e8:	3a0e0300 	bcc	382ff0 <__RAM_SIZE+0x282ff0>
    23ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23f0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    23f4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    23f8:	340f0000 	strcc	r0, [pc], #-0	; 2400 <_Min_Stack_Size+0x1400>
    23fc:	3a0e0300 	bcc	383004 <__RAM_SIZE+0x283004>
    2400:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2404:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2408:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    240c:	1d100000 	ldcne	0, cr0, [r0, #-0]
    2410:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2414:	0b42b801 	bleq	10b0420 <__RAM_SIZE+0xfb0420>
    2418:	01120111 	tsteq	r2, r1, lsl r1
    241c:	0b590b58 	bleq	1645184 <__RAM_SIZE+0x1545184>
    2420:	13010b57 	movwne	r0, #6999	; 0x1b57
    2424:	34110000 	ldrcc	r0, [r1], #-0
    2428:	02133100 	andseq	r3, r3, #0, 2
    242c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2430:	1d120000 	ldcne	0, cr0, [r2, #-0]
    2434:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2438:	0b42b801 	bleq	10b0444 <__RAM_SIZE+0xfb0444>
    243c:	01120111 	tsteq	r2, r1, lsl r1
    2440:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    2444:	00000b57 	andeq	r0, r0, r7, asr fp
    2448:	31000513 	tstcc	r0, r3, lsl r5
    244c:	b7060213 	smladlt	r6, r3, r2, r0
    2450:	00000642 	andeq	r0, r0, r2, asr #12
    2454:	01828914 	orreq	r8, r2, r4, lsl r9
    2458:	01011101 	tsteq	r1, r1, lsl #2
    245c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    2460:	0001828a 	andeq	r8, r1, sl, lsl #5
    2464:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    2468:	1600000a 	strne	r0, [r0], -sl
    246c:	00018289 	andeq	r8, r1, r9, lsl #5
    2470:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2474:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    2478:	3a0e0301 	bcc	383084 <__RAM_SIZE+0x283084>
    247c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2480:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    2484:	010b2013 	tsteq	fp, r3, lsl r0
    2488:	18000013 	stmdane	r0, {r0, r1, r4}
    248c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2490:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2494:	13490b39 	movtne	r0, #39737	; 0x9b39
    2498:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    249c:	3a0e0301 	bcc	3830a8 <__RAM_SIZE+0x2830a8>
    24a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    24a4:	200c270b 	andcs	r2, ip, fp, lsl #14
    24a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    24ac:	00051a00 	andeq	r1, r5, r0, lsl #20
    24b0:	0b3a0e03 	bleq	e85cc4 <__RAM_SIZE+0xd85cc4>
    24b4:	0b39053b 	bleq	e439a8 <__RAM_SIZE+0xd439a8>
    24b8:	00001349 	andeq	r1, r0, r9, asr #6
    24bc:	3f002e1b 	svccc	0x00002e1b
    24c0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    24c4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    24c8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    24cc:	00000b39 	andeq	r0, r0, r9, lsr fp
    24d0:	01110100 	tsteq	r1, r0, lsl #2
    24d4:	0b130e25 	bleq	4c5d70 <__RAM_SIZE+0x3c5d70>
    24d8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    24dc:	01110655 	tsteq	r1, r5, asr r6
    24e0:	06100152 			; <UNDEFINED> instruction: 0x06100152
    24e4:	24020000 	strcs	r0, [r2], #-0
    24e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    24ec:	000e030b 	andeq	r0, lr, fp, lsl #6
    24f0:	00240300 	eoreq	r0, r4, r0, lsl #6
    24f4:	0b3e0b0b 	bleq	f85128 <__RAM_SIZE+0xe85128>
    24f8:	00000803 	andeq	r0, r0, r3, lsl #16
    24fc:	0b000f04 	bleq	6114 <_Min_Stack_Size+0x5114>
    2500:	0500000b 	streq	r0, [r0, #-11]
    2504:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2508:	0b3b0b3a 	bleq	ec51f8 <__RAM_SIZE+0xdc51f8>
    250c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2510:	13060000 	movwne	r0, #24576	; 0x6000
    2514:	0b0e0301 	bleq	383120 <__RAM_SIZE+0x283120>
    2518:	3b0b3a0b 	blcc	2d0d4c <__RAM_SIZE+0x1d0d4c>
    251c:	010b3905 	tsteq	fp, r5, lsl #18
    2520:	07000013 	smladeq	r0, r3, r0, r0
    2524:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2528:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    252c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2530:	00000a38 	andeq	r0, r0, r8, lsr sl
    2534:	27011508 	strcs	r1, [r1, -r8, lsl #10]
    2538:	0013010c 	andseq	r0, r3, ip, lsl #2
    253c:	00050900 	andeq	r0, r5, r0, lsl #18
    2540:	00001349 	andeq	r1, r0, r9, asr #6
    2544:	0b000f0a 	bleq	6174 <_Min_Stack_Size+0x5174>
    2548:	0013490b 	andseq	r4, r3, fp, lsl #18
    254c:	00160b00 	andseq	r0, r6, r0, lsl #22
    2550:	0b3a0e03 	bleq	e85d64 <__RAM_SIZE+0xd85d64>
    2554:	0b39053b 	bleq	e43a48 <__RAM_SIZE+0xd43a48>
    2558:	00001349 	andeq	r1, r0, r9, asr #6
    255c:	0300340c 	movweq	r3, #1036	; 0x40c
    2560:	3b0b3a0e 	blcc	2d0da0 <__RAM_SIZE+0x1d0da0>
    2564:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2568:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    256c:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    2570:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 24c0 <_Min_Stack_Size+0x14c0>
    2574:	0b3a0e03 	bleq	e85d88 <__RAM_SIZE+0xd85d88>
    2578:	0b390b3b 	bleq	e4526c <__RAM_SIZE+0xd4526c>
    257c:	01110c27 	tsteq	r1, r7, lsr #24
    2580:	06400112 			; <UNDEFINED> instruction: 0x06400112
    2584:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    2588:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    258c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2590:	0b3b0b3a 	bleq	ec5280 <__RAM_SIZE+0xdc5280>
    2594:	13490b39 	movtne	r0, #39737	; 0x9b39
    2598:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    259c:	0f000006 	svceq	0x00000006
    25a0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    25a4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    25a8:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    25ac:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    25b0:	010b570b 	tsteq	fp, fp, lsl #14
    25b4:	10000013 	andne	r0, r0, r3, lsl r0
    25b8:	13310034 	teqne	r1, #52	; 0x34
    25bc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    25c0:	11000006 	tstne	r0, r6
    25c4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    25c8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    25cc:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    25d0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    25d4:	000b5705 	andeq	r5, fp, r5, lsl #14
    25d8:	00051200 	andeq	r1, r5, r0, lsl #4
    25dc:	06021331 			; <UNDEFINED> instruction: 0x06021331
    25e0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    25e4:	82891300 	addhi	r1, r9, #0, 6
    25e8:	01110001 	tsteq	r1, r1
    25ec:	00001331 	andeq	r1, r0, r1, lsr r3
    25f0:	03012e14 	movweq	r2, #7700	; 0x1e14
    25f4:	3b0b3a0e 	blcc	2d0e34 <__RAM_SIZE+0x1d0e34>
    25f8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    25fc:	2013490c 	andscs	r4, r3, ip, lsl #18
    2600:	0013010b 	andseq	r0, r3, fp, lsl #2
    2604:	00341500 	eorseq	r1, r4, r0, lsl #10
    2608:	0b3a0e03 	bleq	e85e1c <__RAM_SIZE+0xd85e1c>
    260c:	0b39053b 	bleq	e43b00 <__RAM_SIZE+0xd43b00>
    2610:	00001349 	andeq	r1, r0, r9, asr #6
    2614:	03012e16 	movweq	r2, #7702	; 0x1e16
    2618:	3b0b3a0e 	blcc	2d0e58 <__RAM_SIZE+0x1d0e58>
    261c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2620:	010b200c 	tsteq	fp, ip
    2624:	17000013 	smladne	r0, r3, r0, r0
    2628:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    262c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2630:	13490b39 	movtne	r0, #39737	; 0x9b39
    2634:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    2638:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    263c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    2640:	0b3a0e03 	bleq	e85e54 <__RAM_SIZE+0xd85e54>
    2644:	0b39053b 	bleq	e43b38 <__RAM_SIZE+0xd43b38>
    2648:	01000000 	mrseq	r0, (UNDEF: 0)
    264c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2650:	0e030b13 	vmoveq.32	d3[0], r0
    2654:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    2658:	01520111 	cmpeq	r2, r1, lsl r1
    265c:	00000610 	andeq	r0, r0, r0, lsl r6
    2660:	0b002402 	bleq	b670 <_Min_Stack_Size+0xa670>
    2664:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2668:	0300000e 	movweq	r0, #14
    266c:	0b0b0024 	bleq	2c2704 <__RAM_SIZE+0x1c2704>
    2670:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2674:	0f040000 	svceq	0x00040000
    2678:	000b0b00 	andeq	r0, fp, r0, lsl #22
    267c:	00160500 	andseq	r0, r6, r0, lsl #10
    2680:	0b3a0e03 	bleq	e85e94 <__RAM_SIZE+0xd85e94>
    2684:	0b390b3b 	bleq	e45378 <__RAM_SIZE+0xd45378>
    2688:	00001349 	andeq	r1, r0, r9, asr #6
    268c:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    2690:	07000013 	smladeq	r0, r3, r0, r0
    2694:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2698:	0b3a0b0b 	bleq	e852cc <__RAM_SIZE+0xd852cc>
    269c:	0b39053b 	bleq	e43b90 <__RAM_SIZE+0xd43b90>
    26a0:	00001301 	andeq	r1, r0, r1, lsl #6
    26a4:	03000d08 	movweq	r0, #3336	; 0xd08
    26a8:	3b0b3a0e 	blcc	2d0ee8 <__RAM_SIZE+0x1d0ee8>
    26ac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    26b0:	000a3813 	andeq	r3, sl, r3, lsl r8
    26b4:	01150900 	tsteq	r5, r0, lsl #18
    26b8:	13010c27 	movwne	r0, #7207	; 0x1c27
    26bc:	050a0000 	streq	r0, [sl, #-0]
    26c0:	00134900 	andseq	r4, r3, r0, lsl #18
    26c4:	000f0b00 	andeq	r0, pc, r0, lsl #22
    26c8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    26cc:	160c0000 	strne	r0, [ip], -r0
    26d0:	3a0e0300 	bcc	3832d8 <__RAM_SIZE+0x2832d8>
    26d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    26d8:	0013490b 	andseq	r4, r3, fp, lsl #18
    26dc:	00340d00 	eorseq	r0, r4, r0, lsl #26
    26e0:	0b3a0e03 	bleq	e85ef4 <__RAM_SIZE+0xd85ef4>
    26e4:	0b390b3b 	bleq	e453d8 <__RAM_SIZE+0xd453d8>
    26e8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 25cc <_Min_Stack_Size+0x15cc>
    26ec:	00000c3c 	andeq	r0, r0, ip, lsr ip
    26f0:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
    26f4:	00130113 	andseq	r0, r3, r3, lsl r1
    26f8:	00210f00 	eoreq	r0, r1, r0, lsl #30
    26fc:	0b2f1349 	bleq	bc7428 <__RAM_SIZE+0xac7428>
    2700:	21100000 	tstcs	r0, r0
    2704:	2f134900 	svccs	0x00134900
    2708:	11000005 	tstne	r0, r5
    270c:	13470034 	movtne	r0, #28724	; 0x7034
    2710:	0b3b0b3a 	bleq	ec5400 <__RAM_SIZE+0xdc5400>
    2714:	0a020b39 	beq	85400 <SYSTICK_CYCLES+0x5c3c1>
    2718:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    271c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2720:	3b0b3a0e 	blcc	2d0f60 <__RAM_SIZE+0x1d0f60>
    2724:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2728:	1201110c 	andne	r1, r1, #12, 2
    272c:	97064001 	strls	r4, [r6, -r1]
    2730:	13010c42 	movwne	r0, #7234	; 0x1c42
    2734:	34130000 	ldrcc	r0, [r3], #-0
    2738:	3a0e0300 	bcc	383340 <__RAM_SIZE+0x283340>
    273c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2740:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2744:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2748:	89140000 	ldmdbhi	r4, {}	; <UNPREDICTABLE>
    274c:	11010182 	smlabbne	r1, r2, r1, r0
    2750:	00133101 	andseq	r3, r3, r1, lsl #2
    2754:	828a1500 	addhi	r1, sl, #0, 10
    2758:	0a020001 	beq	82764 <SYSTICK_CYCLES+0x59725>
    275c:	000a4291 	muleq	sl, r1, r2
    2760:	002e1600 	eoreq	r1, lr, r0, lsl #12
    2764:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2768:	030e4087 	movweq	r4, #57479	; 0xe087
    276c:	3b0b3a0e 	blcc	2d0fac <__RAM_SIZE+0x1d0fac>
    2770:	000b3905 	andeq	r3, fp, r5, lsl #18
    2774:	11010000 	mrsne	r0, (UNDEF: 1)
    2778:	130e2501 	movwne	r2, #58625	; 0xe501
    277c:	1b0e030b 	blne	3833b0 <__RAM_SIZE+0x2833b0>
    2780:	1106550e 	tstne	r6, lr, lsl #10
    2784:	10015201 	andne	r5, r1, r1, lsl #4
    2788:	02000006 	andeq	r0, r0, #6
    278c:	0b0b0024 	bleq	2c2824 <__RAM_SIZE+0x1c2824>
    2790:	0e030b3e 	vmoveq.16	d3[0], r0
    2794:	24030000 	strcs	r0, [r3], #-0
    2798:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    279c:	0008030b 	andeq	r0, r8, fp, lsl #6
    27a0:	00160400 	andseq	r0, r6, r0, lsl #8
    27a4:	0b3a0e03 	bleq	e85fb8 <__RAM_SIZE+0xd85fb8>
    27a8:	0b390b3b 	bleq	e4549c <__RAM_SIZE+0xd4549c>
    27ac:	00001349 	andeq	r1, r0, r9, asr #6
    27b0:	03011305 	movweq	r1, #4869	; 0x1305
    27b4:	3a0b0b0e 	bcc	2c53f4 <__RAM_SIZE+0x1c53f4>
    27b8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    27bc:	0013010b 	andseq	r0, r3, fp, lsl #2
    27c0:	000d0600 	andeq	r0, sp, r0, lsl #12
    27c4:	0b3a0e03 	bleq	e85fd8 <__RAM_SIZE+0xd85fd8>
    27c8:	0b39053b 	bleq	e43cbc <__RAM_SIZE+0xd43cbc>
    27cc:	0a381349 	beq	e074f8 <__RAM_SIZE+0xd074f8>
    27d0:	15070000 	strne	r0, [r7, #-0]
    27d4:	010c2701 	tsteq	ip, r1, lsl #14
    27d8:	08000013 	stmdaeq	r0, {r0, r1, r4}
    27dc:	13490005 	movtne	r0, #36869	; 0x9005
    27e0:	0f090000 	svceq	0x00090000
    27e4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    27e8:	0a000013 	beq	283c <_Min_Stack_Size+0x183c>
    27ec:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    27f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    27f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    27f8:	340b0000 	strcc	r0, [fp], #-0
    27fc:	3a0e0300 	bcc	383404 <__RAM_SIZE+0x283404>
    2800:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2804:	3f13490b 	svccc	0x0013490b
    2808:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    280c:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    2810:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2814:	0b3b0b3a 	bleq	ec5504 <__RAM_SIZE+0xdc5504>
    2818:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    281c:	01120111 	tsteq	r2, r1, lsl r1
    2820:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    2824:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    2828:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    282c:	0b3b0b3a 	bleq	ec551c <__RAM_SIZE+0xdc551c>
    2830:	13490b39 	movtne	r0, #39737	; 0x9b39
    2834:	00000a02 	andeq	r0, r0, r2, lsl #20
    2838:	0300340e 	movweq	r3, #1038	; 0x40e
    283c:	3b0b3a0e 	blcc	2d107c <__RAM_SIZE+0x1d107c>
    2840:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2844:	b7060213 	smladlt	r6, r3, r2, r0
    2848:	00000642 	andeq	r0, r0, r2, asr #12
    284c:	01110100 	tsteq	r1, r0, lsl #2
    2850:	0b130e25 	bleq	4c60ec <__RAM_SIZE+0x3c60ec>
    2854:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2858:	01110655 	tsteq	r1, r5, asr r6
    285c:	06100152 			; <UNDEFINED> instruction: 0x06100152
    2860:	24020000 	strcs	r0, [r2], #-0
    2864:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2868:	000e030b 	andeq	r0, lr, fp, lsl #6
    286c:	00240300 	eoreq	r0, r4, r0, lsl #6
    2870:	0b3e0b0b 	bleq	f854a4 <__RAM_SIZE+0xe854a4>
    2874:	00000803 	andeq	r0, r0, r3, lsl #16
    2878:	03001604 	movweq	r1, #1540	; 0x604
    287c:	3b0b3a0e 	blcc	2d10bc <__RAM_SIZE+0x1d10bc>
    2880:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2884:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2888:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    288c:	0b3a0b0b 	bleq	e854c0 <__RAM_SIZE+0xd854c0>
    2890:	0b39053b 	bleq	e43d84 <__RAM_SIZE+0xd43d84>
    2894:	00001301 	andeq	r1, r0, r1, lsl #6
    2898:	03000d06 	movweq	r0, #3334	; 0xd06
    289c:	3b0b3a0e 	blcc	2d10dc <__RAM_SIZE+0x1d10dc>
    28a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    28a4:	000a3813 	andeq	r3, sl, r3, lsl r8
    28a8:	01150700 	tsteq	r5, r0, lsl #14
    28ac:	13010c27 	movwne	r0, #7207	; 0x1c27
    28b0:	05080000 	streq	r0, [r8, #-0]
    28b4:	00134900 	andseq	r4, r3, r0, lsl #18
    28b8:	000f0900 	andeq	r0, pc, r0, lsl #18
    28bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    28c0:	160a0000 	strne	r0, [sl], -r0
    28c4:	3a0e0300 	bcc	3834cc <__RAM_SIZE+0x2834cc>
    28c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    28cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    28d0:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
    28d4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    28d8:	0b3b0b3a 	bleq	ec55c8 <__RAM_SIZE+0xdc55c8>
    28dc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    28e0:	01120111 	tsteq	r2, r1, lsl r1
    28e4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    28e8:	0c00000c 	stceq	0, cr0, [r0], {12}
    28ec:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    28f0:	0b3b0b3a 	bleq	ec55e0 <__RAM_SIZE+0xdc55e0>
    28f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    28f8:	00000a02 	andeq	r0, r0, r2, lsl #20
    28fc:	0300340d 	movweq	r3, #1037	; 0x40d
    2900:	3b0b3a0e 	blcc	2d1140 <__RAM_SIZE+0x1d1140>
    2904:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2908:	b7060213 	smladlt	r6, r3, r2, r0
    290c:	00000642 	andeq	r0, r0, r2, asr #12
    2910:	01110100 	tsteq	r1, r0, lsl #2
    2914:	0b130e25 	bleq	4c61b0 <__RAM_SIZE+0x3c61b0>
    2918:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    291c:	01110655 	tsteq	r1, r5, asr r6
    2920:	06100152 			; <UNDEFINED> instruction: 0x06100152
    2924:	24020000 	strcs	r0, [r2], #-0
    2928:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    292c:	000e030b 	andeq	r0, lr, fp, lsl #6
    2930:	00240300 	eoreq	r0, r4, r0, lsl #6
    2934:	0b3e0b0b 	bleq	f85568 <__RAM_SIZE+0xe85568>
    2938:	00000803 	andeq	r0, r0, r3, lsl #16
    293c:	0b000f04 	bleq	6554 <_Min_Stack_Size+0x5554>
    2940:	0500000b 	streq	r0, [r0, #-11]
    2944:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2948:	0b3b0b3a 	bleq	ec5638 <__RAM_SIZE+0xdc5638>
    294c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2950:	13060000 	movwne	r0, #24576	; 0x6000
    2954:	0b0e0301 	bleq	383560 <__RAM_SIZE+0x283560>
    2958:	3b0b3a0b 	blcc	2d118c <__RAM_SIZE+0x1d118c>
    295c:	010b3905 	tsteq	fp, r5, lsl #18
    2960:	07000013 	smladeq	r0, r3, r0, r0
    2964:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2968:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    296c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2970:	00000a38 	andeq	r0, r0, r8, lsr sl
    2974:	27011508 	strcs	r1, [r1, -r8, lsl #10]
    2978:	0013010c 	andseq	r0, r3, ip, lsl #2
    297c:	00050900 	andeq	r0, r5, r0, lsl #18
    2980:	00001349 	andeq	r1, r0, r9, asr #6
    2984:	0b000f0a 	bleq	65b4 <_Min_Stack_Size+0x55b4>
    2988:	0013490b 	andseq	r4, r3, fp, lsl #18
    298c:	00160b00 	andseq	r0, r6, r0, lsl #22
    2990:	0b3a0e03 	bleq	e861a4 <__RAM_SIZE+0xd861a4>
    2994:	0b39053b 	bleq	e43e88 <__RAM_SIZE+0xd43e88>
    2998:	00001349 	andeq	r1, r0, r9, asr #6
    299c:	0300340c 	movweq	r3, #1036	; 0x40c
    29a0:	3b0b3a0e 	blcc	2d11e0 <__RAM_SIZE+0x1d11e0>
    29a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    29a8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    29ac:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    29b0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2900 <_Min_Stack_Size+0x1900>
    29b4:	0b3a0e03 	bleq	e861c8 <__RAM_SIZE+0xd861c8>
    29b8:	0b390b3b 	bleq	e456ac <__RAM_SIZE+0xd456ac>
    29bc:	01110c27 	tsteq	r1, r7, lsr #24
    29c0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    29c4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    29c8:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    29cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    29d0:	0b3b0b3a 	bleq	ec56c0 <__RAM_SIZE+0xdc56c0>
    29d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    29d8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    29dc:	0f000006 	svceq	0x00000006
    29e0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    29e4:	0b3b0b3a 	bleq	ec56d4 <__RAM_SIZE+0xdc56d4>
    29e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    29ec:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    29f0:	10000006 	andne	r0, r0, r6
    29f4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    29f8:	0b3b0b3a 	bleq	ec56e8 <__RAM_SIZE+0xdc56e8>
    29fc:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a00:	00000a02 	andeq	r0, r0, r2, lsl #20
    2a04:	03003411 	movweq	r3, #1041	; 0x411
    2a08:	3b0b3a0e 	blcc	2d1248 <__RAM_SIZE+0x1d1248>
    2a0c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2a10:	12000013 	andne	r0, r0, #19
    2a14:	1301010b 	movwne	r0, #4363	; 0x110b
    2a18:	34130000 	ldrcc	r0, [r3], #-0
    2a1c:	3a0e0300 	bcc	383624 <__RAM_SIZE+0x283624>
    2a20:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2a24:	0013490b 	andseq	r4, r3, fp, lsl #18
    2a28:	011d1400 	tsteq	sp, r0, lsl #8
    2a2c:	01521331 	cmpeq	r2, r1, lsr r3
    2a30:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
    2a34:	58011201 	stmdapl	r1, {r0, r9, ip}
    2a38:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2a3c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2a40:	00051500 	andeq	r1, r5, r0, lsl #10
    2a44:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2a48:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2a4c:	00341600 	eorseq	r1, r4, r0, lsl #12
    2a50:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2a54:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2a58:	011d1700 	tsteq	sp, r0, lsl #14
    2a5c:	01521331 	cmpeq	r2, r1, lsr r3
    2a60:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
    2a64:	58011201 	stmdapl	r1, {r0, r9, ip}
    2a68:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2a6c:	1800000b 	stmdane	r0, {r0, r1, r3}
    2a70:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    2a74:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    2a78:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
    2a7c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    2a80:	010b570b 	tsteq	fp, fp, lsl #14
    2a84:	19000013 	stmdbne	r0, {r0, r1, r4}
    2a88:	01018289 	smlabbeq	r1, r9, r2, r8
    2a8c:	42930111 	addsmi	r0, r3, #1073741828	; 0x40000004
    2a90:	0013010a 	andseq	r0, r3, sl, lsl #2
    2a94:	828a1a00 	addhi	r1, sl, #0, 20
    2a98:	0a020001 	beq	82aa4 <SYSTICK_CYCLES+0x59a65>
    2a9c:	000a4291 	muleq	sl, r1, r2
    2aa0:	82891b00 	addhi	r1, r9, #0, 22
    2aa4:	01110101 	tsteq	r1, r1, lsl #2
    2aa8:	00001331 	andeq	r1, r0, r1, lsr r3
    2aac:	03012e1c 	movweq	r2, #7708	; 0x1e1c
    2ab0:	3b0b3a0e 	blcc	2d12f0 <__RAM_SIZE+0x1d12f0>
    2ab4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2ab8:	2013490c 	andscs	r4, r3, ip, lsl #18
    2abc:	0013010b 	andseq	r0, r3, fp, lsl #2
    2ac0:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    2ac4:	0b3a0e03 	bleq	e862d8 <__RAM_SIZE+0xd862d8>
    2ac8:	0b39053b 	bleq	e43fbc <__RAM_SIZE+0xd43fbc>
    2acc:	0b200c27 	bleq	805b70 <__RAM_SIZE+0x705b70>
    2ad0:	00001301 	andeq	r1, r0, r1, lsl #6
    2ad4:	0300051e 	movweq	r0, #1310	; 0x51e
    2ad8:	3b0b3a0e 	blcc	2d1318 <__RAM_SIZE+0x1d1318>
    2adc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2ae0:	1f000013 	svcne	0x00000013
    2ae4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2a34 <_Min_Stack_Size+0x1a34>
    2ae8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2aec:	3a0e030e 	bcc	38372c <__RAM_SIZE+0x28372c>
    2af0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2af4:	0000000b 	andeq	r0, r0, fp
    2af8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2afc:	030b130e 	movweq	r1, #45838	; 0xb30e
    2b00:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2b04:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    2b08:	00061001 	andeq	r1, r6, r1
    2b0c:	00240200 	eoreq	r0, r4, r0, lsl #4
    2b10:	0b3e0b0b 	bleq	f85744 <__RAM_SIZE+0xe85744>
    2b14:	00000e03 	andeq	r0, r0, r3, lsl #28
    2b18:	0b002403 	bleq	bb2c <_Min_Stack_Size+0xab2c>
    2b1c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2b20:	04000008 	streq	r0, [r0], #-8
    2b24:	0b0b000f 	bleq	2c2b68 <__RAM_SIZE+0x1c2b68>
    2b28:	16050000 	strne	r0, [r5], -r0
    2b2c:	3a0e0300 	bcc	383734 <__RAM_SIZE+0x283734>
    2b30:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b34:	0013490b 	andseq	r4, r3, fp, lsl #18
    2b38:	01130600 	tsteq	r3, r0, lsl #12
    2b3c:	0b0b0e03 	bleq	2c6350 <__RAM_SIZE+0x1c6350>
    2b40:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2b44:	13010b39 	movwne	r0, #6969	; 0x1b39
    2b48:	0d070000 	stceq	0, cr0, [r7, #-0]
    2b4c:	3a0e0300 	bcc	383754 <__RAM_SIZE+0x283754>
    2b50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b54:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2b58:	0800000a 	stmdaeq	r0, {r1, r3}
    2b5c:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    2b60:	00001301 	andeq	r1, r0, r1, lsl #6
    2b64:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    2b68:	0a000013 	beq	2bbc <_Min_Stack_Size+0x1bbc>
    2b6c:	0b0b000f 	bleq	2c2bb0 <__RAM_SIZE+0x1c2bb0>
    2b70:	00001349 	andeq	r1, r0, r9, asr #6
    2b74:	0300160b 	movweq	r1, #1547	; 0x60b
    2b78:	3b0b3a0e 	blcc	2d13b8 <__RAM_SIZE+0x1d13b8>
    2b7c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2b80:	0c000013 	stceq	0, cr0, [r0], {19}
    2b84:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2ad4 <_Min_Stack_Size+0x1ad4>
    2b88:	0b3a0e03 	bleq	e8639c <__RAM_SIZE+0xd8639c>
    2b8c:	0b390b3b 	bleq	e45880 <__RAM_SIZE+0xd45880>
    2b90:	13490c27 	movtne	r0, #39975	; 0x9c27
    2b94:	01120111 	tsteq	r2, r1, lsl r1
    2b98:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2b9c:	0013010c 	andseq	r0, r3, ip, lsl #2
    2ba0:	00050d00 	andeq	r0, r5, r0, lsl #26
    2ba4:	0b3a0e03 	bleq	e863b8 <__RAM_SIZE+0xd863b8>
    2ba8:	0b390b3b 	bleq	e4589c <__RAM_SIZE+0xd4589c>
    2bac:	06021349 	streq	r1, [r2], -r9, asr #6
    2bb0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2bb4:	00340e00 	eorseq	r0, r4, r0, lsl #28
    2bb8:	0b3a0e03 	bleq	e863cc <__RAM_SIZE+0xd863cc>
    2bbc:	0b390b3b 	bleq	e458b0 <__RAM_SIZE+0xd458b0>
    2bc0:	06021349 	streq	r1, [r2], -r9, asr #6
    2bc4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2bc8:	82890f00 	addhi	r0, r9, #0, 30
    2bcc:	01110001 	tsteq	r1, r1
    2bd0:	00001331 	andeq	r1, r0, r1, lsr r3
    2bd4:	3f002e10 	svccc	0x00002e10
    2bd8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    2bdc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    2be0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2be4:	00000b39 	andeq	r0, r0, r9, lsr fp
    2be8:	01110100 	tsteq	r1, r0, lsl #2
    2bec:	0b130e25 	bleq	4c6488 <__RAM_SIZE+0x3c6488>
    2bf0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2bf4:	01110655 	tsteq	r1, r5, asr r6
    2bf8:	06100152 			; <UNDEFINED> instruction: 0x06100152
    2bfc:	24020000 	strcs	r0, [r2], #-0
    2c00:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2c04:	000e030b 	andeq	r0, lr, fp, lsl #6
    2c08:	00240300 	eoreq	r0, r4, r0, lsl #6
    2c0c:	0b3e0b0b 	bleq	f85840 <__RAM_SIZE+0xe85840>
    2c10:	00000803 	andeq	r0, r0, r3, lsl #16
    2c14:	0b000f04 	bleq	682c <_Min_Stack_Size+0x582c>
    2c18:	0500000b 	streq	r0, [r0, #-11]
    2c1c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2c20:	0b3b0b3a 	bleq	ec5910 <__RAM_SIZE+0xdc5910>
    2c24:	13490b39 	movtne	r0, #39737	; 0x9b39
    2c28:	35060000 	strcc	r0, [r6, #-0]
    2c2c:	00134900 	andseq	r4, r3, r0, lsl #18
    2c30:	01130700 	tsteq	r3, r0, lsl #14
    2c34:	0b0b0e03 	bleq	2c6448 <__RAM_SIZE+0x1c6448>
    2c38:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2c3c:	13010b39 	movwne	r0, #6969	; 0x1b39
    2c40:	0d080000 	stceq	0, cr0, [r8, #-0]
    2c44:	3a0e0300 	bcc	38384c <__RAM_SIZE+0x28384c>
    2c48:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c4c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2c50:	0900000a 	stmdbeq	r0, {r1, r3}
    2c54:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    2c58:	00001301 	andeq	r1, r0, r1, lsl #6
    2c5c:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    2c60:	0b000013 	bleq	2cb4 <_Min_Stack_Size+0x1cb4>
    2c64:	0b0b000f 	bleq	2c2ca8 <__RAM_SIZE+0x1c2ca8>
    2c68:	00001349 	andeq	r1, r0, r9, asr #6
    2c6c:	0300160c 	movweq	r1, #1548	; 0x60c
    2c70:	3b0b3a0e 	blcc	2d14b0 <__RAM_SIZE+0x1d14b0>
    2c74:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2c78:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2c7c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2c80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2c84:	13490b39 	movtne	r0, #39737	; 0x9b39
    2c88:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2c8c:	340e0000 	strcc	r0, [lr], #-0
    2c90:	3a0e0300 	bcc	383898 <__RAM_SIZE+0x283898>
    2c94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c98:	3f13490b 	svccc	0x0013490b
    2c9c:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    2ca0:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    2ca4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2ca8:	0b3b0b3a 	bleq	ec5998 <__RAM_SIZE+0xdc5998>
    2cac:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2cb0:	01111349 	tsteq	r1, r9, asr #6
    2cb4:	06400112 			; <UNDEFINED> instruction: 0x06400112
    2cb8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    2cbc:	10000013 	andne	r0, r0, r3, lsl r0
    2cc0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2cc4:	0b3b0b3a 	bleq	ec59b4 <__RAM_SIZE+0xdc59b4>
    2cc8:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ccc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2cd0:	11000006 	tstne	r0, r6
    2cd4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2cd8:	0b3b0b3a 	bleq	ec59c8 <__RAM_SIZE+0xdc59c8>
    2cdc:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ce0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2ce4:	12000006 	andne	r0, r0, #6
    2ce8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    2cec:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    2cf0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    2cf4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    2cf8:	010b570b 	tsteq	fp, fp, lsl #14
    2cfc:	13000013 	movwne	r0, #19
    2d00:	13310034 	teqne	r1, #52	; 0x34
    2d04:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2d08:	14000006 	strne	r0, [r0], #-6
    2d0c:	01018289 	smlabbeq	r1, r9, r2, r8
    2d10:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2d14:	8a150000 	bhi	542d1c <__RAM_SIZE+0x442d1c>
    2d18:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    2d1c:	0a42910a 	beq	10a714c <__RAM_SIZE+0xfa714c>
    2d20:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    2d24:	3a0e0301 	bcc	383930 <__RAM_SIZE+0x283930>
    2d28:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d2c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    2d30:	010b2013 	tsteq	fp, r3, lsl r0
    2d34:	17000013 	smladne	r0, r3, r0, r0
    2d38:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2d3c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2d40:	13490b39 	movtne	r0, #39737	; 0x9b39
    2d44:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    2d48:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    2d4c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    2d50:	0b3a0e03 	bleq	e86564 <__RAM_SIZE+0xd86564>
    2d54:	0b39053b 	bleq	e44248 <__RAM_SIZE+0xd44248>
    2d58:	01000000 	mrseq	r0, (UNDEF: 0)
    2d5c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2d60:	0e030b13 	vmoveq.32	d3[0], r0
    2d64:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    2d68:	01520111 	cmpeq	r2, r1, lsl r1
    2d6c:	00000610 	andeq	r0, r0, r0, lsl r6
    2d70:	0b002402 	bleq	bd80 <_Min_Stack_Size+0xad80>
    2d74:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2d78:	0300000e 	movweq	r0, #14
    2d7c:	0b0b0024 	bleq	2c2e14 <__RAM_SIZE+0x1c2e14>
    2d80:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2d84:	0f040000 	svceq	0x00040000
    2d88:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2d8c:	00160500 	andseq	r0, r6, r0, lsl #10
    2d90:	0b3a0e03 	bleq	e865a4 <__RAM_SIZE+0xd865a4>
    2d94:	0b390b3b 	bleq	e45a88 <__RAM_SIZE+0xd45a88>
    2d98:	00001349 	andeq	r1, r0, r9, asr #6
    2d9c:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    2da0:	07000013 	smladeq	r0, r3, r0, r0
    2da4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2da8:	0b3a0b0b 	bleq	e859dc <__RAM_SIZE+0xd859dc>
    2dac:	0b39053b 	bleq	e442a0 <__RAM_SIZE+0xd442a0>
    2db0:	00001301 	andeq	r1, r0, r1, lsl #6
    2db4:	03000d08 	movweq	r0, #3336	; 0xd08
    2db8:	3b0b3a0e 	blcc	2d15f8 <__RAM_SIZE+0x1d15f8>
    2dbc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2dc0:	000a3813 	andeq	r3, sl, r3, lsl r8
    2dc4:	01150900 	tsteq	r5, r0, lsl #18
    2dc8:	13010c27 	movwne	r0, #7207	; 0x1c27
    2dcc:	050a0000 	streq	r0, [sl, #-0]
    2dd0:	00134900 	andseq	r4, r3, r0, lsl #18
    2dd4:	000f0b00 	andeq	r0, pc, r0, lsl #22
    2dd8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2ddc:	160c0000 	strne	r0, [ip], -r0
    2de0:	3a0e0300 	bcc	3839e8 <__RAM_SIZE+0x2839e8>
    2de4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2de8:	0013490b 	andseq	r4, r3, fp, lsl #18
    2dec:	00340d00 	eorseq	r0, r4, r0, lsl #26
    2df0:	0b3a0e03 	bleq	e86604 <__RAM_SIZE+0xd86604>
    2df4:	0b39053b 	bleq	e442e8 <__RAM_SIZE+0xd442e8>
    2df8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2cdc <_Min_Stack_Size+0x1cdc>
    2dfc:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2e00:	0300340e 	movweq	r3, #1038	; 0x40e
    2e04:	3b0b3a0e 	blcc	2d1644 <__RAM_SIZE+0x1d1644>
    2e08:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e0c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    2e10:	0f00000c 	svceq	0x0000000c
    2e14:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2d64 <_Min_Stack_Size+0x1d64>
    2e18:	0b3a0e03 	bleq	e8662c <__RAM_SIZE+0xd8662c>
    2e1c:	0b390b3b 	bleq	e45b10 <__RAM_SIZE+0xd45b10>
    2e20:	13490c27 	movtne	r0, #39975	; 0x9c27
    2e24:	01120111 	tsteq	r2, r1, lsl r1
    2e28:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2e2c:	0013010c 	andseq	r0, r3, ip, lsl #2
    2e30:	00051000 	andeq	r1, r5, r0
    2e34:	0b3a0e03 	bleq	e86648 <__RAM_SIZE+0xd86648>
    2e38:	0b390b3b 	bleq	e45b2c <__RAM_SIZE+0xd45b2c>
    2e3c:	06021349 	streq	r1, [r2], -r9, asr #6
    2e40:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2e44:	00341100 	eorseq	r1, r4, r0, lsl #2
    2e48:	0b3a0e03 	bleq	e8665c <__RAM_SIZE+0xd8665c>
    2e4c:	0b390b3b 	bleq	e45b40 <__RAM_SIZE+0xd45b40>
    2e50:	06021349 	streq	r1, [r2], -r9, asr #6
    2e54:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2e58:	00341200 	eorseq	r1, r4, r0, lsl #4
    2e5c:	0b3a0803 	bleq	e84e70 <__RAM_SIZE+0xd84e70>
    2e60:	0b390b3b 	bleq	e45b54 <__RAM_SIZE+0xd45b54>
    2e64:	06021349 	streq	r1, [r2], -r9, asr #6
    2e68:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2e6c:	011d1300 	tsteq	sp, r0, lsl #6
    2e70:	01521331 	cmpeq	r2, r1, lsr r3
    2e74:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2e78:	58011201 	stmdapl	r1, {r0, r9, ip}
    2e7c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    2e80:	0013010b 	andseq	r0, r3, fp, lsl #2
    2e84:	00341400 	eorseq	r1, r4, r0, lsl #8
    2e88:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2e8c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2e90:	011d1500 	tsteq	sp, r0, lsl #10
    2e94:	01521331 	cmpeq	r2, r1, lsr r3
    2e98:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2e9c:	58011201 	stmdapl	r1, {r0, r9, ip}
    2ea0:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2ea4:	1600000b 	strne	r0, [r0], -fp
    2ea8:	13310005 	teqne	r1, #5
    2eac:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2eb0:	17000006 	strne	r0, [r0, -r6]
    2eb4:	00018289 	andeq	r8, r1, r9, lsl #5
    2eb8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2ebc:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
    2ec0:	11010182 	smlabbne	r1, r2, r1, r0
    2ec4:	00133101 	andseq	r3, r3, r1, lsl #2
    2ec8:	828a1900 	addhi	r1, sl, #0, 18
    2ecc:	0a020001 	beq	82ed8 <SYSTICK_CYCLES+0x59e99>
    2ed0:	000a4291 	muleq	sl, r1, r2
    2ed4:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
    2ed8:	0b3a0e03 	bleq	e866ec <__RAM_SIZE+0xd866ec>
    2edc:	0b39053b 	bleq	e443d0 <__RAM_SIZE+0xd443d0>
    2ee0:	13490c27 	movtne	r0, #39975	; 0x9c27
    2ee4:	13010b20 	movwne	r0, #6944	; 0x1b20
    2ee8:	341b0000 	ldrcc	r0, [fp], #-0
    2eec:	3a0e0300 	bcc	383af4 <__RAM_SIZE+0x283af4>
    2ef0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ef4:	0013490b 	andseq	r4, r3, fp, lsl #18
    2ef8:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    2efc:	0b3a0e03 	bleq	e86710 <__RAM_SIZE+0xd86710>
    2f00:	0b39053b 	bleq	e443f4 <__RAM_SIZE+0xd443f4>
    2f04:	0b200c27 	bleq	805fa8 <__RAM_SIZE+0x705fa8>
    2f08:	00001301 	andeq	r1, r0, r1, lsl #6
    2f0c:	0300051d 	movweq	r0, #1309	; 0x51d
    2f10:	3b0b3a0e 	blcc	2d1750 <__RAM_SIZE+0x1d1750>
    2f14:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2f18:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2f1c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2e6c <_Min_Stack_Size+0x1e6c>
    2f20:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2f24:	3a0e030e 	bcc	383b64 <__RAM_SIZE+0x283b64>
    2f28:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f2c:	0000000b 	andeq	r0, r0, fp
    2f30:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2f34:	030b130e 	movweq	r1, #45838	; 0xb30e
    2f38:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2f3c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    2f40:	00061001 	andeq	r1, r6, r1
    2f44:	00240200 	eoreq	r0, r4, r0, lsl #4
    2f48:	0b3e0b0b 	bleq	f85b7c <__RAM_SIZE+0xe85b7c>
    2f4c:	00000e03 	andeq	r0, r0, r3, lsl #28
    2f50:	0b002403 	bleq	bf64 <_Min_Stack_Size+0xaf64>
    2f54:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2f58:	04000008 	streq	r0, [r0], #-8
    2f5c:	0b0b000f 	bleq	2c2fa0 <__RAM_SIZE+0x1c2fa0>
    2f60:	16050000 	strne	r0, [r5], -r0
    2f64:	3a0e0300 	bcc	383b6c <__RAM_SIZE+0x283b6c>
    2f68:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f6c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2f70:	00350600 	eorseq	r0, r5, r0, lsl #12
    2f74:	00001349 	andeq	r1, r0, r9, asr #6
    2f78:	03011307 	movweq	r1, #4871	; 0x1307
    2f7c:	3a0b0b0e 	bcc	2c5bbc <__RAM_SIZE+0x1c5bbc>
    2f80:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f84:	0013010b 	andseq	r0, r3, fp, lsl #2
    2f88:	000d0800 	andeq	r0, sp, r0, lsl #16
    2f8c:	0b3a0e03 	bleq	e867a0 <__RAM_SIZE+0xd867a0>
    2f90:	0b39053b 	bleq	e44484 <__RAM_SIZE+0xd44484>
    2f94:	0a381349 	beq	e07cc0 <__RAM_SIZE+0xd07cc0>
    2f98:	15090000 	strne	r0, [r9, #-0]
    2f9c:	010c2701 	tsteq	ip, r1, lsl #14
    2fa0:	0a000013 	beq	2ff4 <_Min_Stack_Size+0x1ff4>
    2fa4:	13490005 	movtne	r0, #36869	; 0x9005
    2fa8:	0f0b0000 	svceq	0x000b0000
    2fac:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2fb0:	0c000013 	stceq	0, cr0, [r0], {19}
    2fb4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2fb8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2fbc:	13490b39 	movtne	r0, #39737	; 0x9b39
    2fc0:	340d0000 	strcc	r0, [sp], #-0
    2fc4:	3a0e0300 	bcc	383bcc <__RAM_SIZE+0x283bcc>
    2fc8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2fcc:	3f13490b 	svccc	0x0013490b
    2fd0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    2fd4:	00340e00 	eorseq	r0, r4, r0, lsl #28
    2fd8:	0b3a0e03 	bleq	e867ec <__RAM_SIZE+0xd867ec>
    2fdc:	0b390b3b 	bleq	e45cd0 <__RAM_SIZE+0xd45cd0>
    2fe0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2ec4 <_Min_Stack_Size+0x1ec4>
    2fe4:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2fe8:	3f012e0f 	svccc	0x00012e0f
    2fec:	3a0e030c 	bcc	383c24 <__RAM_SIZE+0x283c24>
    2ff0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ff4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    2ff8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2ffc:	97064001 	strls	r4, [r6, -r1]
    3000:	13010c42 	movwne	r0, #7234	; 0x1c42
    3004:	05100000 	ldreq	r0, [r0, #-0]
    3008:	3a0e0300 	bcc	383c10 <__RAM_SIZE+0x283c10>
    300c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3010:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3014:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    3018:	34110000 	ldrcc	r0, [r1], #-0
    301c:	3a0e0300 	bcc	383c24 <__RAM_SIZE+0x283c24>
    3020:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3024:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3028:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    302c:	34120000 	ldrcc	r0, [r2], #-0
    3030:	3a080300 	bcc	203c38 <__RAM_SIZE+0x103c38>
    3034:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3038:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    303c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    3040:	1d130000 	ldcne	0, cr0, [r3, #-0]
    3044:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    3048:	0b42b801 	bleq	10b1054 <__RAM_SIZE+0xfb1054>
    304c:	01120111 	tsteq	r2, r1, lsl r1
    3050:	0b590b58 	bleq	1645db8 <__RAM_SIZE+0x1545db8>
    3054:	13010b57 	movwne	r0, #6999	; 0x1b57
    3058:	34140000 	ldrcc	r0, [r4], #-0
    305c:	02133100 	andseq	r3, r3, #0, 2
    3060:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    3064:	1d150000 	ldcne	0, cr0, [r5, #-0]
    3068:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    306c:	0b42b801 	bleq	10b1078 <__RAM_SIZE+0xfb1078>
    3070:	01120111 	tsteq	r2, r1, lsl r1
    3074:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    3078:	00000b57 	andeq	r0, r0, r7, asr fp
    307c:	31000516 	tstcc	r0, r6, lsl r5
    3080:	b7060213 	smladlt	r6, r3, r2, r0
    3084:	00000642 	andeq	r0, r0, r2, asr #12
    3088:	31011d17 	tstcc	r1, r7, lsl sp
    308c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    3090:	01110b42 	tsteq	r1, r2, asr #22
    3094:	0b580112 	bleq	16034e4 <__RAM_SIZE+0x15034e4>
    3098:	0b570559 	bleq	15c4604 <__RAM_SIZE+0x14c4604>
    309c:	00001301 	andeq	r1, r0, r1, lsl #6
    30a0:	01828918 	orreq	r8, r2, r8, lsl r9
    30a4:	31011100 	mrscc	r1, (UNDEF: 17)
    30a8:	19000013 	stmdbne	r0, {r0, r1, r4}
    30ac:	01018289 	smlabbeq	r1, r9, r2, r8
    30b0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    30b4:	8a1a0000 	bhi	6830bc <__RAM_SIZE+0x5830bc>
    30b8:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    30bc:	0a42910a 	beq	10a74ec <__RAM_SIZE+0xfa74ec>
    30c0:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    30c4:	3a0e0301 	bcc	383cd0 <__RAM_SIZE+0x283cd0>
    30c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    30cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    30d0:	010b2013 	tsteq	fp, r3, lsl r0
    30d4:	1c000013 	stcne	0, cr0, [r0], {19}
    30d8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    30dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    30e0:	13490b39 	movtne	r0, #39737	; 0x9b39
    30e4:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    30e8:	3a0e0301 	bcc	383cf4 <__RAM_SIZE+0x283cf4>
    30ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    30f0:	200c270b 	andcs	r2, ip, fp, lsl #14
    30f4:	0013010b 	andseq	r0, r3, fp, lsl #2
    30f8:	00051e00 	andeq	r1, r5, r0, lsl #28
    30fc:	0b3a0e03 	bleq	e86910 <__RAM_SIZE+0xd86910>
    3100:	0b39053b 	bleq	e445f4 <__RAM_SIZE+0xd445f4>
    3104:	00001349 	andeq	r1, r0, r9, asr #6
    3108:	3f002e1f 	svccc	0x00002e1f
    310c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    3110:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    3114:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3118:	00000b39 	andeq	r0, r0, r9, lsr fp
    311c:	00110100 	andseq	r0, r1, r0, lsl #2
    3120:	01110610 	tsteq	r1, r0, lsl r6
    3124:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    3128:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    312c:	00000513 	andeq	r0, r0, r3, lsl r5
    3130:	00110100 	andseq	r0, r1, r0, lsl #2
    3134:	01110610 	tsteq	r1, r0, lsl r6
    3138:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    313c:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    3140:	00000513 	andeq	r0, r0, r3, lsl r5
    3144:	00110100 	andseq	r0, r1, r0, lsl #2
    3148:	01110610 	tsteq	r1, r0, lsl r6
    314c:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    3150:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    3154:	00000513 	andeq	r0, r0, r3, lsl r5
    3158:	00110100 	andseq	r0, r1, r0, lsl #2
    315c:	01110610 	tsteq	r1, r0, lsl r6
    3160:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    3164:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    3168:	00000513 	andeq	r0, r0, r3, lsl r5
    316c:	00110100 	andseq	r0, r1, r0, lsl #2
    3170:	01110610 	tsteq	r1, r0, lsl r6
    3174:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    3178:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    317c:	00000513 	andeq	r0, r0, r3, lsl r5
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	10000890 	mulne	r0, r0, r8
       4:	10000892 	mulne	r0, r2, r8
}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	10000892 	mulne	r0, r2, r8
      10:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	08920000 	ldmeq	r2, {}	; <UNPREDICTABLE>
      28:	08a21000 	stmiaeq	r2!, {ip}
      2c:	00021000 	andeq	r1, r2, r0
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	08a29f30 	stmiaeq	r2!, {r4, r5, r8, r9, sl, fp, ip, pc}
      34:	08a61000 	stmiaeq	r6!, {ip}
        _tx_thread_system_ni_resume(thread_ptr);
      38:	00011000 	andeq	r1, r1, r0
      3c:	0008a651 	andeq	sl, r8, r1, asr r6
}
      40:	0008b810 	andeq	fp, r8, r0, lsl r8
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
      50:	1000081c 	andne	r0, r0, ip, lsl r8
      54:	1000081e 	andne	r0, r0, lr, lsl r8
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	1000081e 	andne	r0, r0, lr, lsl r8
      60:	10000820 	andne	r0, r0, r0, lsr #16
      64:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
      68:	10000820 	andne	r0, r0, r0, lsr #16
      6c:	10000874 	andne	r0, r0, r4, ror r8
      70:	387d0002 	ldmdacc	sp!, {r1}^
      74:	10000874 	andne	r0, r0, r4, ror r8
      78:	10000890 	mulne	r0, r0, r8
      7c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
      8c:	1000081c 	andne	r0, r0, ip, lsl r8
      90:	10000834 	andne	r0, r0, r4, lsr r8
      94:	34500001 	ldrbcc	r0, [r0], #-1
      98:	90100008 	andsls	r0, r0, r8
      9c:	04100008 	ldreq	r0, [r0], #-8
      a0:	5001f300 	andpl	pc, r1, r0, lsl #6
      a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      a8:	00000000 	andeq	r0, r0, r0
      ac:	00080000 	andeq	r0, r8, r0
      b0:	00080210 	andeq	r0, r8, r0, lsl r2
      b4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      b8:	00080200 	andeq	r0, r8, r0, lsl #4
      bc:	00081c10 	andeq	r1, r8, r0, lsl ip
      c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      c4:	00000008 	andeq	r0, r0, r8
	...
      d0:	00080000 	andeq	r0, r8, r0
      d4:	00080410 	andeq	r0, r8, r0, lsl r4
      d8:	50000110 	andpl	r0, r0, r0, lsl r1
      dc:	10000804 	andne	r0, r0, r4, lsl #16
      e0:	1000081c 	andne	r0, r0, ip, lsl r8
      e4:	01f30004 	mvnseq	r0, r4
      e8:	00009f50 	andeq	r9, r0, r0, asr pc
      ec:	00000000 	andeq	r0, r0, r0
      f0:	00010000 	andeq	r0, r1, r0
      f4:	00000000 	andeq	r0, r0, r0
      f8:	10000802 	andne	r0, r0, r2, lsl #16
      fc:	10000804 	andne	r0, r0, r4, lsl #16
     100:	9f300002 	svcls	0x00300002
     104:	10000804 	andne	r0, r0, r4, lsl #16
     108:	10000806 	andne	r0, r0, r6, lsl #16
     10c:	06510001 	ldrbeq	r0, [r1], -r1
     110:	1c100008 	ldcne	0, cr0, [r0], {8}
     114:	01100008 	tsteq	r0, r8
     118:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     128:	00020000 	andeq	r0, r2, r0
     12c:	0000007d 	andeq	r0, r0, sp, ror r0
     130:	00000000 	andeq	r0, r0, r0
     134:	00020000 	andeq	r0, r2, r0
     138:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     148:	00020000 	andeq	r0, r2, r0
     14c:	0000007d 	andeq	r0, r0, sp, ror r0
     150:	00000000 	andeq	r0, r0, r0
     154:	00020000 	andeq	r0, r2, r0
     158:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     168:	00020000 	andeq	r0, r2, r0
     16c:	0000007d 	andeq	r0, r0, sp, ror r0
     170:	00000000 	andeq	r0, r0, r0
     174:	00020000 	andeq	r0, r2, r0
     178:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     188:	00020000 	andeq	r0, r2, r0
     18c:	0000007d 	andeq	r0, r0, sp, ror r0
     190:	00000000 	andeq	r0, r0, r0
     194:	00020000 	andeq	r0, r2, r0
     198:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1a8:	00020000 	andeq	r0, r2, r0
     1ac:	0000007d 	andeq	r0, r0, sp, ror r0
     1b0:	00000000 	andeq	r0, r0, r0
     1b4:	00020000 	andeq	r0, r2, r0
     1b8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1c8:	00020000 	andeq	r0, r2, r0
     1cc:	0000007d 	andeq	r0, r0, sp, ror r0
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	00020000 	andeq	r0, r2, r0
     1d8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1e8:	00020000 	andeq	r0, r2, r0
     1ec:	0000007d 	andeq	r0, r0, sp, ror r0
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	00020000 	andeq	r0, r2, r0
     1f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     208:	00020000 	andeq	r0, r2, r0
     20c:	0000007d 	andeq	r0, r0, sp, ror r0
     210:	00000000 	andeq	r0, r0, r0
     214:	00020000 	andeq	r0, r2, r0
     218:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     228:	00020000 	andeq	r0, r2, r0
     22c:	0000007d 	andeq	r0, r0, sp, ror r0
     230:	00000000 	andeq	r0, r0, r0
     234:	00020000 	andeq	r0, r2, r0
     238:	0000087d 	andeq	r0, r0, sp, ror r8
     23c:	00000000 	andeq	r0, r0, r0
     240:	00020000 	andeq	r0, r2, r0
     244:	00000c7d 	andeq	r0, r0, sp, ror ip
     248:	00000000 	andeq	r0, r0, r0
     24c:	00020000 	andeq	r0, r2, r0
     250:	0000287d 	andeq	r2, r0, sp, ror r8
     254:	00000000 	andeq	r0, r0, r0
     258:	00020000 	andeq	r0, r2, r0
     25c:	00000c7d 	andeq	r0, r0, sp, ror ip
     260:	00000000 	andeq	r0, r0, r0
     264:	00020000 	andeq	r0, r2, r0
     268:	0000087d 	andeq	r0, r0, sp, ror r8
     26c:	00000000 	andeq	r0, r0, r0
     270:	00020000 	andeq	r0, r2, r0
     274:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     28c:	00500001 	subseq	r0, r0, r1
     290:	00000000 	andeq	r0, r0, r0
     294:	02000000 	andeq	r0, r0, #0
     298:	00549100 	subseq	r9, r4, r0, lsl #2
     29c:	00000000 	andeq	r0, r0, r0
     2a0:	04000000 	streq	r0, [r0], #-0
     2a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     2a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     2bc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     2c8:	01f30004 	mvnseq	r0, r4
     2cc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     2e0:	00500001 	subseq	r0, r0, r1
	...
     2f0:	02000000 	andeq	r0, r0, #0
     2f4:	00007d00 	andeq	r7, r0, r0, lsl #26
     2f8:	00000000 	andeq	r0, r0, r0
     2fc:	02000000 	andeq	r0, r0, #0
     300:	00047d00 	andeq	r7, r4, r0, lsl #26
     304:	00000000 	andeq	r0, r0, r0
     308:	02000000 	andeq	r0, r0, #0
     30c:	00107d00 	andseq	r7, r0, r0, lsl #26
     310:	00000000 	andeq	r0, r0, r0
     314:	02000000 	andeq	r0, r0, #0
     318:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     330:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     33c:	00510001 	subseq	r0, r1, r1
     340:	00000000 	andeq	r0, r0, r0
     344:	04000000 	streq	r0, [r0], #-0
     348:	5001f300 	andpl	pc, r1, r0, lsl #6
     34c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     360:	01000000 	mrseq	r0, (UNDEF: 0)
     364:	00005100 	andeq	r5, r0, r0, lsl #2
     368:	00000000 	andeq	r0, r0, r0
     36c:	00010000 	andeq	r0, r1, r0
     370:	00000052 	andeq	r0, r0, r2, asr r0
     374:	00000000 	andeq	r0, r0, r0
     378:	f3000400 	vshl.u8	d0, d0, d0
     37c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     394:	52000100 	andpl	r0, r0, #0, 2
	...
     3a0:	00530001 	subseq	r0, r3, r1
     3a4:	00000000 	andeq	r0, r0, r0
     3a8:	04000000 	streq	r0, [r0], #-0
     3ac:	5201f300 	andpl	pc, r1, #0, 6
     3b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     3c0:	01000000 	mrseq	r0, (UNDEF: 0)
     3c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     3d4:	00020000 	andeq	r0, r2, r0
     3d8:	0000007d 	andeq	r0, r0, sp, ror r0
     3dc:	00000000 	andeq	r0, r0, r0
     3e0:	00020000 	andeq	r0, r2, r0
     3e4:	0000047d 	andeq	r0, r0, sp, ror r4
     3e8:	00000000 	andeq	r0, r0, r0
     3ec:	00020000 	andeq	r0, r2, r0
     3f0:	0000187d 	andeq	r1, r0, sp, ror r8
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	00020000 	andeq	r0, r2, r0
     3fc:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     414:	00500001 	subseq	r0, r0, r1
     418:	00000000 	andeq	r0, r0, r0
     41c:	01000000 	mrseq	r0, (UNDEF: 0)
     420:	00005300 	andeq	r5, r0, r0, lsl #6
     424:	00000000 	andeq	r0, r0, r0
     428:	00040000 	andeq	r0, r4, r0
     42c:	9f5001f3 	svcls	0x005001f3
	...
     440:	00010000 	andeq	r0, r1, r0
     444:	00000051 	andeq	r0, r0, r1, asr r0
	...
     454:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     460:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     464:	00000008 	andeq	r0, r0, r8
     468:	00000000 	andeq	r0, r0, r0
     46c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     470:	00000010 	andeq	r0, r0, r0, lsl r0
     474:	00000000 	andeq	r0, r0, r0
     478:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     47c:	00000020 	andeq	r0, r0, r0, lsr #32
     480:	00000000 	andeq	r0, r0, r0
     484:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     488:	00000010 	andeq	r0, r0, r0, lsl r0
     48c:	00000000 	andeq	r0, r0, r0
     490:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     494:	00000008 	andeq	r0, r0, r8
     498:	00000000 	andeq	r0, r0, r0
     49c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     4b4:	01000000 	mrseq	r0, (UNDEF: 0)
     4b8:	00005000 	andeq	r5, r0, r0
     4bc:	00000000 	andeq	r0, r0, r0
     4c0:	00010000 	andeq	r0, r1, r0
     4c4:	00000051 	andeq	r0, r0, r1, asr r0
     4c8:	00000000 	andeq	r0, r0, r0
     4cc:	f3000400 	vshl.u8	d0, d0, d0
     4d0:	009f5001 	addseq	r5, pc, r1
	...
     4e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     4f4:	00520001 	subseq	r0, r2, r1
     4f8:	00000000 	andeq	r0, r0, r0
     4fc:	04000000 	streq	r0, [r0], #-0
     500:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     504:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     514:	01000000 	mrseq	r0, (UNDEF: 0)
     518:	00005000 	andeq	r5, r0, r0
	...
     528:	00020000 	andeq	r0, r2, r0
     52c:	0000007d 	andeq	r0, r0, sp, ror r0
     530:	00000000 	andeq	r0, r0, r0
     534:	00020000 	andeq	r0, r2, r0
     538:	00000c7d 	andeq	r0, r0, sp, ror ip
     53c:	00000000 	andeq	r0, r0, r0
     540:	00020000 	andeq	r0, r2, r0
     544:	0000107d 	andeq	r1, r0, sp, ror r0
     548:	00000000 	andeq	r0, r0, r0
     54c:	00020000 	andeq	r0, r2, r0
     550:	0000207d 	andeq	r2, r0, sp, ror r0
     554:	00000000 	andeq	r0, r0, r0
     558:	00020000 	andeq	r0, r2, r0
     55c:	0000107d 	andeq	r1, r0, sp, ror r0
     560:	00000000 	andeq	r0, r0, r0
     564:	00020000 	andeq	r0, r2, r0
     568:	00000c7d 	andeq	r0, r0, sp, ror ip
     56c:	00000000 	andeq	r0, r0, r0
     570:	00020000 	andeq	r0, r2, r0
     574:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     58c:	00500001 	subseq	r0, r0, r1
     590:	00000000 	andeq	r0, r0, r0
     594:	01000000 	mrseq	r0, (UNDEF: 0)
     598:	00005100 	andeq	r5, r0, r0, lsl #2
     59c:	00000000 	andeq	r0, r0, r0
     5a0:	00040000 	andeq	r0, r4, r0
     5a4:	9f5001f3 	svcls	0x005001f3
	...
     5b8:	00010000 	andeq	r0, r1, r0
     5bc:	00000050 	andeq	r0, r0, r0, asr r0
     5c0:	00000000 	andeq	r0, r0, r0
     5c4:	001a3400 	andseq	r3, sl, r0, lsl #8
     5c8:	001a3610 	andseq	r3, sl, r0, lsl r6
     5cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5d0:	001a3600 	andseq	r3, sl, r0, lsl #12
     5d4:	001a3810 	andseq	r3, sl, r0, lsl r8
     5d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5dc:	001a3810 	andseq	r3, sl, r0, lsl r8
     5e0:	001a3a10 	andseq	r3, sl, r0, lsl sl
     5e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5e8:	001a3a14 	andseq	r3, sl, r4, lsl sl
     5ec:	001a5210 	andseq	r5, sl, r0, lsl r2
     5f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5f4:	001a5228 	andseq	r5, sl, r8, lsr #4
     5f8:	001a5610 	andseq	r5, sl, r0, lsl r6
     5fc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     600:	001a5614 	andseq	r5, sl, r4, lsl r6
     604:	001a5810 	andseq	r5, sl, r0, lsl r8
     608:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     60c:	001a5810 	andseq	r5, sl, r0, lsl r8
     610:	001a6010 	andseq	r6, sl, r0, lsl r0
     614:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
     620:	50000000 	andpl	r0, r0, r0
     624:	6010001a 	andsvs	r0, r0, sl, lsl r0
     628:	0110001a 	tsteq	r0, sl, lsl r0
     62c:	00005000 	andeq	r5, r0, r0
     630:	00000000 	andeq	r0, r0, r0
     634:	13a80000 			; <UNDEFINED> instruction: 0x13a80000
     638:	13ac1000 			; <UNDEFINED> instruction: 0x13ac1000
     63c:	00021000 	andeq	r1, r2, r0
     640:	13ac007d 			; <UNDEFINED> instruction: 0x13ac007d
     644:	13ae1000 			; <UNDEFINED> instruction: 0x13ae1000
     648:	00021000 	andeq	r1, r2, r0
     64c:	13ae247d 			; <UNDEFINED> instruction: 0x13ae247d
     650:	1a1e1000 	bne	784658 <__RAM_SIZE+0x684658>
     654:	00031000 	andeq	r1, r3, r0
     658:	1e00e07d 	mcrne	0, 0, lr, cr0, cr13, {3}
     65c:	2810001a 	ldmdacs	r0, {r1, r3, r4}
     660:	0210001a 	andseq	r0, r0, #26
     664:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
     674:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     678:	bc100013 	ldclt	0, cr0, [r0], {19}
     67c:	01100013 	tsteq	r0, r3, lsl r0
     680:	13be5000 			; <UNDEFINED> instruction: 0x13be5000
     684:	1a041000 	bne	10468c <__RAM_SIZE+0x468c>
     688:	00011000 	andeq	r1, r1, r0
     68c:	001a0457 	andseq	r0, sl, r7, asr r4
     690:	001a0810 	andseq	r0, sl, r0, lsl r8
     694:	50000110 	andpl	r0, r0, r0, lsl r1
     698:	10001a08 	andne	r1, r0, r8, lsl #20
     69c:	10001a22 	andne	r1, r0, r2, lsr #20
     6a0:	00570001 	subseq	r0, r7, r1
	...
     6b4:	0013a800 	andseq	sl, r3, r0, lsl #16
     6b8:	0013be10 	andseq	fp, r3, r0, lsl lr
     6bc:	51000110 	tstpl	r0, r0, lsl r1
     6c0:	100013be 			; <UNDEFINED> instruction: 0x100013be
     6c4:	10001a04 	andne	r1, r0, r4, lsl #20
     6c8:	04580001 	ldrbeq	r0, [r8], #-1
     6cc:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     6d0:	0110001a 	tsteq	r0, sl, lsl r0
     6d4:	1a085100 	bne	214adc <__RAM_SIZE+0x114adc>
     6d8:	1a221000 	bne	8846e0 <__RAM_SIZE+0x7846e0>
     6dc:	00011000 	andeq	r1, r1, r0
     6e0:	001a2258 	andseq	r2, sl, r8, asr r2
     6e4:	001a2810 	andseq	r2, sl, r0, lsl r8
     6e8:	f3000410 	vqshl.u8	d0, d0, d0
     6ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     708:	0013a800 	andseq	sl, r3, r0, lsl #16
     70c:	0013be10 	andseq	fp, r3, r0, lsl lr
     710:	52000110 	andpl	r0, r0, #16, 2
     714:	100013be 			; <UNDEFINED> instruction: 0x100013be
     718:	10001926 	andne	r1, r0, r6, lsr #18
     71c:	26560001 	ldrbcs	r0, [r6], -r1
     720:	28100019 	ldmdacs	r0, {r0, r3, r4}
     724:	01100019 	tsteq	r0, r9, lsl r0
     728:	19285b00 	stmdbne	r8!, {r8, r9, fp, ip, lr}
     72c:	19521000 	ldmdbne	r2, {ip}^
     730:	00011000 	andeq	r1, r1, r0
     734:	00195256 	andseq	r5, r9, r6, asr r2
     738:	00197c10 	andseq	r7, r9, r0, lsl ip
     73c:	5b000110 	blpl	b84 <__Vectors_Size+0x3c4>
     740:	1000197c 	andne	r1, r0, ip, ror r9
     744:	10001a04 	andne	r1, r0, r4, lsl #20
     748:	04560001 	ldrbeq	r0, [r6], #-1
     74c:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     750:	0110001a 	tsteq	r0, sl, lsl r0
     754:	1a085200 	bne	214f5c <__RAM_SIZE+0x114f5c>
     758:	1a221000 	bne	884760 <__RAM_SIZE+0x784760>
     75c:	00011000 	andeq	r1, r1, r0
     760:	001a2256 	andseq	r2, sl, r6, asr r2
     764:	001a2810 	andseq	r2, sl, r0, lsl r8
     768:	f3000410 	vqshl.u8	d0, d0, d0
     76c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     778:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     77c:	be100013 	mrclt	0, 0, r0, cr0, cr3, {0}
     780:	01100013 	tsteq	r0, r3, lsl r0
     784:	1a045300 	bne	11538c <__RAM_SIZE+0x1538c>
     788:	1a081000 	bne	204790 <__RAM_SIZE+0x104790>
     78c:	00011000 	andeq	r1, r1, r0
     790:	00000053 	andeq	r0, r0, r3, asr r0
     794:	00000000 	andeq	r0, r0, r0
     798:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     7b0:	0013e400 	andseq	lr, r3, r0, lsl #8
     7b4:	0013e610 	andseq	lr, r3, r0, lsl r6
     7b8:	30000210 	andcc	r0, r0, r0, lsl r2
     7bc:	0013e69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
     7c0:	0014e410 	andseq	lr, r4, r0, lsl r4
     7c4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     7c8:	100014e4 	andne	r1, r0, r4, ror #9
     7cc:	100014f6 	strdne	r1, [r0], -r6
     7d0:	f6510001 			; <UNDEFINED> instruction: 0xf6510001
     7d4:	00100014 	andseq	r0, r0, r4, lsl r0
     7d8:	01100015 	tsteq	r0, r5, lsl r0
     7dc:	15005500 	strne	r5, [r0, #-1280]	; 0xfffffb00
     7e0:	15121000 	ldrne	r1, [r2, #-0]
     7e4:	00011000 	andeq	r1, r1, r0
     7e8:	00151251 	andseq	r1, r5, r1, asr r2
     7ec:	0016c010 	andseq	ip, r6, r0, lsl r0
     7f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     7f4:	100016c8 	andne	r1, r0, r8, asr #13
     7f8:	100016e4 	andne	r1, r0, r4, ror #13
     7fc:	e4550001 	ldrb	r0, [r5], #-1
     800:	03100016 	tsteq	r0, #22
     804:	02100017 	andseq	r0, r0, #23
     808:	08409100 	stmdaeq	r0, {r8, ip, pc}^
     80c:	6c100017 	ldcvs	0, cr0, [r0], {23}
     810:	01100018 	tsteq	r0, r8, lsl r0
     814:	18da5500 	ldmne	sl, {r8, sl, ip, lr}^
     818:	19341000 	ldmdbne	r4!, {ip}
     81c:	00011000 	andeq	r1, r1, r0
     820:	0019a455 	andseq	sl, r9, r5, asr r4
     824:	0019dc10 	andseq	sp, r9, r0, lsl ip
     828:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     82c:	100019f0 	strdne	r1, [r0], -r0
     830:	100019f2 	strdne	r1, [r0], -r2
     834:	00550001 	subseq	r0, r5, r1
     838:	00000000 	andeq	r0, r0, r0
     83c:	02000000 	andeq	r0, r0, #0
	...
     850:	00000202 	andeq	r0, r0, r2, lsl #4
     854:	00140800 	andseq	r0, r4, r0, lsl #16
     858:	00141a10 	andseq	r1, r4, r0, lsl sl
     85c:	30000210 	andcc	r0, r0, r0, lsl r2
     860:	00141a9f 	mulseq	r4, pc, sl	; <UNPREDICTABLE>
     864:	00144710 	andseq	r4, r4, r0, lsl r7
     868:	91000210 	tstls	r0, r0, lsl r2
     86c:	00147a48 	andseq	r7, r4, r8, asr #20
     870:	00148210 	andseq	r8, r4, r0, lsl r2
     874:	30000210 	andcc	r0, r0, r0, lsl r2
     878:	0014829f 	mulseq	r4, pc, r2	; <UNPREDICTABLE>
     87c:	00148410 	andseq	r8, r4, r0, lsl r4
     880:	50000110 	andpl	r0, r0, r0, lsl r1
     884:	10001484 	andne	r1, r0, r4, lsl #9
     888:	10001492 	mulne	r0, r2, r4
     88c:	9f300002 	svcls	0x00300002
     890:	10001492 	mulne	r0, r2, r4
     894:	1000149a 	mulne	r0, sl, r4
     898:	48910002 	ldmmi	r1, {r1}
     89c:	1000149a 	mulne	r0, sl, r4
     8a0:	100014a2 	andne	r1, r0, r2, lsr #9
     8a4:	9f300002 	svcls	0x00300002
     8a8:	100014a2 	andne	r1, r0, r2, lsr #9
     8ac:	100014a4 	andne	r1, r0, r4, lsr #9
     8b0:	a4530001 	ldrbge	r0, [r3], #-1
     8b4:	a4100014 	ldrge	r0, [r0], #-20	; 0xffffffec
     8b8:	02100019 	andseq	r0, r0, #25
     8bc:	a4489100 	strbge	r9, [r8], #-256	; 0xffffff00
     8c0:	da100019 	ble	40092c <__RAM_SIZE+0x30092c>
     8c4:	02100019 	andseq	r0, r0, #25
     8c8:	da9f3800 	ble	fe7ce8d0 <__RAM_segment_used_end__+0xc66ce8d0>
     8cc:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
     8d0:	0210001a 	andseq	r0, r0, #26
     8d4:	00489100 	subeq	r9, r8, r0, lsl #2
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     8fc:	00141a00 	andseq	r1, r4, r0, lsl #20
     900:	00142610 	andseq	r2, r4, r0, lsl r6
     904:	30000210 	andcc	r0, r0, r0, lsl r2
     908:	0014269f 	mulseq	r4, pc, r6	; <UNPREDICTABLE>
     90c:	00144710 	andseq	r4, r4, r0, lsl r7
     910:	5b000110 	blpl	d58 <__Vectors_Size+0x598>
     914:	100014a4 	andne	r1, r0, r4, lsr #9
     918:	100014ca 	andne	r1, r0, sl, asr #9
     91c:	9f300002 	svcls	0x00300002
     920:	100014ca 	andne	r1, r0, sl, asr #9
     924:	100014cc 	andne	r1, r0, ip, asr #9
     928:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     92c:	d8100014 	ldmdale	r0, {r2, r4}
     930:	02100014 	andseq	r0, r0, #20
     934:	d89f3000 	ldmle	pc, {ip, sp}	; <UNPREDICTABLE>
     938:	72100014 	andsvc	r0, r0, #20
     93c:	01100018 	tsteq	r0, r8, lsl r0
     940:	18ae5b00 	stmiane	lr!, {r8, r9, fp, ip, lr}
     944:	18b41000 	ldmne	r4!, {ip}
     948:	00011000 	andeq	r1, r1, r0
     94c:	0018da5b 	andseq	sp, r8, fp, asr sl
     950:	00192410 	andseq	r2, r9, r0, lsl r4
     954:	5b000110 	blpl	d9c <__Vectors_Size+0x5dc>
     958:	10001924 	andne	r1, r0, r4, lsr #18
     95c:	10001928 	andne	r1, r0, r8, lsr #18
     960:	28540001 	ldmdacs	r4, {r0}^
     964:	50100019 	andspl	r0, r0, r9, lsl r0
     968:	01100019 	tsteq	r0, r9, lsl r0
     96c:	19505b00 	ldmdbne	r0, {r8, r9, fp, ip, lr}^
     970:	19541000 	ldmdbne	r4, {ip}^
     974:	00011000 	andeq	r1, r1, r0
     978:	00195454 	andseq	r5, r9, r4, asr r4
     97c:	00195610 	andseq	r5, r9, r0, lsl r6
     980:	53000110 	movwpl	r0, #272	; 0x110
     984:	10001956 	andne	r1, r0, r6, asr r9
     988:	10001970 	andne	r1, r0, r0, ror r9
     98c:	70540001 	subsvc	r0, r4, r1
     990:	74100019 	ldrvc	r0, [r0], #-25	; 0xffffffe7
     994:	01100019 	tsteq	r0, r9, lsl r0
     998:	19a45300 	stmibne	r4!, {r8, r9, ip, lr}
     99c:	1a041000 	bne	1049a4 <__RAM_SIZE+0x49a4>
     9a0:	00011000 	andeq	r1, r1, r0
     9a4:	0000005b 	andeq	r0, r0, fp, asr r0
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	01000000 	mrseq	r0, (UNDEF: 0)
     9b0:	01000100 	mrseq	r0, (UNDEF: 16)
     9b4:	01000100 	mrseq	r0, (UNDEF: 16)
     9b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     9bc:	47100014 			; <UNDEFINED> instruction: 0x47100014
     9c0:	02100014 	andseq	r0, r0, #20
     9c4:	509f3000 	addspl	r3, pc, r0
     9c8:	52100014 	andspl	r0, r0, #20
     9cc:	02100014 	andseq	r0, r0, #20
     9d0:	5a9f3100 	bpl	fe7ccdd8 <__RAM_segment_used_end__+0xc66ccdd8>
     9d4:	5c100014 	ldcpl	0, cr0, [r0], {20}
     9d8:	02100014 	andseq	r0, r0, #20
     9dc:	649f3100 	ldrvs	r3, [pc], #256	; 9e4 <__Vectors_Size+0x224>
     9e0:	66100014 			; <UNDEFINED> instruction: 0x66100014
     9e4:	02100014 	andseq	r0, r0, #20
     9e8:	6e9f3100 	fmlvse	f3, f7, f0
     9ec:	70100014 	andsvc	r0, r0, r4, lsl r0
     9f0:	02100014 	andseq	r0, r0, #20
     9f4:	789f3100 	ldmvc	pc, {r8, ip, sp}	; <UNPREDICTABLE>
     9f8:	7a100014 	bvc	400a50 <__RAM_SIZE+0x300a50>
     9fc:	02100014 	andseq	r0, r0, #20
     a00:	7a9f3100 	bvc	fe7cce08 <__RAM_segment_used_end__+0xc66cce08>
     a04:	04100014 	ldreq	r0, [r0], #-20	; 0xffffffec
     a08:	0210001a 	andseq	r0, r0, #26
     a0c:	009f3000 	addseq	r3, pc, r0
     a10:	00000000 	andeq	r0, r0, r0
     a14:	02000000 	andeq	r0, r0, #0
	...
     a74:	b4000000 	strlt	r0, [r0], #-0
     a78:	be100013 	mrclt	0, 0, r0, cr0, cr3, {0}
     a7c:	02100013 	andseq	r0, r0, #19
     a80:	be9f3000 	cdplt	0, 9, cr3, cr15, cr0, {0}
     a84:	ce100013 	mrcgt	0, 0, r0, cr0, cr3, {0}
     a88:	01100013 	tsteq	r0, r3, lsl r0
     a8c:	13ce5400 	bicne	r5, lr, #0, 8
     a90:	13e01000 	mvnne	r1, #0
     a94:	00011000 	andeq	r1, r1, r0
     a98:	0013e055 	andseq	lr, r3, r5, asr r0
     a9c:	00166a10 	andseq	r6, r6, r0, lsl sl
     aa0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     aa4:	1000166a 	andne	r1, r0, sl, ror #12
     aa8:	1000166c 	andne	r1, r0, ip, ror #12
     aac:	6c500001 	mrrcvs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     ab0:	c0100016 	andsgt	r0, r0, r6, lsl r0
     ab4:	01100016 	tsteq	r0, r6, lsl r0
     ab8:	16c05400 	strbne	r5, [r0], r0, lsl #8
     abc:	16c81000 	strbne	r1, [r8], r0
     ac0:	00011000 	andeq	r1, r1, r0
     ac4:	0016c850 	andseq	ip, r6, r0, asr r8
     ac8:	00170610 	andseq	r0, r7, r0, lsl r6
     acc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ad0:	10001706 	andne	r1, r0, r6, lsl #14
     ad4:	10001708 	andne	r1, r0, r8, lsl #14
     ad8:	08500001 	ldmdaeq	r0, {r0}^
     adc:	40100017 	andsmi	r0, r0, r7, lsl r0
     ae0:	01100017 	tsteq	r0, r7, lsl r0
     ae4:	17405400 	strbne	r5, [r0, -r0, lsl #8]
     ae8:	17421000 	strbne	r1, [r2, -r0]
     aec:	00011000 	andeq	r1, r1, r0
     af0:	00174250 	andseq	r4, r7, r0, asr r2
     af4:	00179410 	andseq	r9, r7, r0, lsl r4
     af8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     afc:	10001794 	mulne	r0, r4, r7
     b00:	10001796 	mulne	r0, r6, r7
     b04:	96500001 	ldrbls	r0, [r0], -r1
     b08:	be100017 	mrclt	0, 0, r0, cr0, cr7, {0}
     b0c:	01100017 	tsteq	r0, r7, lsl r0
     b10:	17be5400 	ldrne	r5, [lr, r0, lsl #8]!
     b14:	17c01000 	strbne	r1, [r0, r0]
     b18:	00011000 	andeq	r1, r1, r0
     b1c:	0017c050 	andseq	ip, r7, r0, asr r0
     b20:	00180c10 	andseq	r0, r8, r0, lsl ip
     b24:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     b28:	1000180c 	andne	r1, r0, ip, lsl #16
     b2c:	10001814 	andne	r1, r0, r4, lsl r8
     b30:	14500001 	ldrbne	r0, [r0], #-1
     b34:	60100018 	andsvs	r0, r0, r8, lsl r0
     b38:	01100018 	tsteq	r0, r8, lsl r0
     b3c:	18605400 	stmdane	r0!, {sl, ip, lr}^
     b40:	18681000 	stmdane	r8!, {ip}^
     b44:	00011000 	andeq	r1, r1, r0
     b48:	00186850 	andseq	r6, r8, r0, asr r8
     b4c:	00187c10 	andseq	r7, r8, r0, lsl ip
     b50:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     b54:	1000187c 	andne	r1, r0, ip, ror r8
     b58:	10001892 	mulne	r0, r2, r8
     b5c:	925a0001 	subsls	r0, sl, #1
     b60:	96100018 			; <UNDEFINED> instruction: 0x96100018
     b64:	01100018 	tsteq	r0, r8, lsl r0
     b68:	18965200 	ldmne	r6, {r9, ip, lr}
     b6c:	18a21000 	stmiane	r2!, {ip}
     b70:	00011000 	andeq	r1, r1, r0
     b74:	0018a25a 	andseq	sl, r8, sl, asr r2
     b78:	0018ae10 	andseq	sl, r8, r0, lsl lr
     b7c:	52000110 	andpl	r0, r0, #16, 2
     b80:	100018ae 	andne	r1, r0, lr, lsr #17
     b84:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     b88:	b8540001 	ldmdalt	r4, {r0}^
     b8c:	be100018 	mrclt	0, 0, r0, cr0, cr8, {0}
     b90:	01100018 	tsteq	r0, r8, lsl r0
     b94:	18be5a00 	ldmne	lr!, {r9, fp, ip, lr}
     b98:	18c21000 	stmiane	r2, {ip}^
     b9c:	00011000 	andeq	r1, r1, r0
     ba0:	0018c252 	andseq	ip, r8, r2, asr r2
     ba4:	0018ce10 	andseq	ip, r8, r0, lsl lr
     ba8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     bac:	100018ce 	andne	r1, r0, lr, asr #17
     bb0:	100018da 	ldrdne	r1, [r0], -sl
     bb4:	da520001 	ble	1480bc0 <__RAM_SIZE+0x1380bc0>
     bb8:	22100018 	andscs	r0, r0, #24
     bbc:	01100019 	tsteq	r0, r9, lsl r0
     bc0:	19225400 	stmdbne	r2!, {sl, ip, lr}
     bc4:	19281000 	stmdbne	r8!, {ip}
     bc8:	00011000 	andeq	r1, r1, r0
     bcc:	00192852 	andseq	r2, r9, r2, asr r8
     bd0:	00193010 	andseq	r3, r9, r0, lsl r0
     bd4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bd8:	10001930 	andne	r1, r0, r0, lsr r9
     bdc:	10001938 	andne	r1, r0, r8, lsr r9
     be0:	38520001 	ldmdacc	r2, {r0}^
     be4:	44100019 	ldrmi	r0, [r0], #-25	; 0xffffffe7
     be8:	01100019 	tsteq	r0, r9, lsl r0
     bec:	19445900 	stmdbne	r4, {r8, fp, ip, lr}^
     bf0:	195c1000 	ldmdbne	ip, {ip}^
     bf4:	00011000 	andeq	r1, r1, r0
     bf8:	00195c52 	andseq	r5, r9, r2, asr ip
     bfc:	00196410 	andseq	r6, r9, r0, lsl r4
     c00:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     c04:	10001964 	andne	r1, r0, r4, ror #18
     c08:	1000198c 	andne	r1, r0, ip, lsl #19
     c0c:	8c520001 	mrrchi	0, 0, r0, r2, cr1
     c10:	98100019 	ldmdals	r0, {r0, r3, r4}
     c14:	01100019 	tsteq	r0, r9, lsl r0
     c18:	19985500 	ldmibne	r8, {r8, sl, ip, lr}
     c1c:	19a41000 	stmibne	r4!, {ip}
     c20:	00011000 	andeq	r1, r1, r0
     c24:	0019a452 	andseq	sl, r9, r2, asr r4
     c28:	0019d210 	andseq	sp, r9, r0, lsl r2
     c2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c30:	100019d2 	ldrdne	r1, [r0], -r2
     c34:	100019da 	ldrdne	r1, [r0], -sl
     c38:	da500001 	ble	1400c44 <__RAM_SIZE+0x1300c44>
     c3c:	dc100019 	ldcle	0, cr0, [r0], {25}
     c40:	01100019 	tsteq	r0, r9, lsl r0
     c44:	19dc5400 	ldmibne	ip, {sl, ip, lr}^
     c48:	19f01000 	ldmibne	r0!, {ip}^
     c4c:	00011000 	andeq	r1, r1, r0
     c50:	0019f055 	andseq	pc, r9, r5, asr r0	; <UNPREDICTABLE>
     c54:	0019f210 	andseq	pc, r9, r0, lsl r2	; <UNPREDICTABLE>
     c58:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c5c:	100019f2 	strdne	r1, [r0], -r2
     c60:	10001a04 	andne	r1, r0, r4, lsl #20
     c64:	04550001 	ldrbeq	r0, [r5], #-1
     c68:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     c6c:	0210001a 	andseq	r0, r0, #26
     c70:	089f3000 	ldmeq	pc, {ip, sp}	; <UNPREDICTABLE>
     c74:	2210001a 	andscs	r0, r0, #26
     c78:	0110001a 	tsteq	r0, sl, lsl r0
     c7c:	1a225400 	bne	895c84 <__RAM_SIZE+0x795c84>
     c80:	1a281000 	bne	a04c88 <__RAM_SIZE+0x904c88>
     c84:	00011000 	andeq	r1, r1, r0
     c88:	00000050 	andeq	r0, r0, r0, asr r0
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     cac:	0015fe00 	andseq	pc, r5, r0, lsl #28
     cb0:	00160610 	andseq	r0, r6, r0, lsl r6
     cb4:	3a000210 	bcc	14fc <_Min_Stack_Size+0x4fc>
     cb8:	0016089f 	mulseq	r6, pc, r8	; <UNPREDICTABLE>
     cbc:	00165810 	andseq	r5, r6, r0, lsl r8
     cc0:	53000110 	movwpl	r0, #272	; 0x110
     cc4:	10001658 	andne	r1, r0, r8, asr r6
     cc8:	10001667 	andne	r1, r0, r7, ror #12
     ccc:	a8910003 	ldmge	r1, {r0, r1}
     cd0:	0016787f 	andseq	r7, r6, pc, ror r8
     cd4:	0016b410 	andseq	fp, r6, r0, lsl r4
     cd8:	53000110 	movwpl	r0, #272	; 0x110
     cdc:	100016b4 			; <UNDEFINED> instruction: 0x100016b4
     ce0:	100016bd 			; <UNDEFINED> instruction: 0x100016bd
     ce4:	a8910003 	ldmge	r1, {r0, r1}
     ce8:	0016c87f 	andseq	ip, r6, pc, ror r8
     cec:	0016ee10 	andseq	lr, r6, r0, lsl lr
     cf0:	53000110 	movwpl	r0, #272	; 0x110
     cf4:	100016ee 	andne	r1, r0, lr, ror #13
     cf8:	10001703 	andne	r1, r0, r3, lsl #14
     cfc:	b0910003 	addslt	r0, r1, r3
     d00:	0017087f 	andseq	r0, r7, pc, ror r8
     d04:	00173410 	andseq	r3, r7, r0, lsl r4
     d08:	53000110 	movwpl	r0, #272	; 0x110
     d0c:	10001734 	andne	r1, r0, r4, lsr r7
     d10:	1000173d 	andne	r1, r0, sp, lsr r7
     d14:	a8910003 	ldmge	r1, {r0, r1}
     d18:	0017427f 	andseq	r4, r7, pc, ror r2
     d1c:	00178810 	andseq	r8, r7, r0, lsl r8
     d20:	53000110 	movwpl	r0, #272	; 0x110
     d24:	10001788 	andne	r1, r0, r8, lsl #15
     d28:	10001791 	mulne	r0, r1, r7
     d2c:	b0910003 	addslt	r0, r1, r3
     d30:	0017967f 	andseq	r9, r7, pc, ror r6
     d34:	0017aa10 	andseq	sl, r7, r0, lsl sl
     d38:	53000110 	movwpl	r0, #272	; 0x110
     d3c:	100017aa 	andne	r1, r0, sl, lsr #15
     d40:	100017bb 			; <UNDEFINED> instruction: 0x100017bb
     d44:	a8910003 	ldmge	r1, {r0, r1}
     d48:	0017c07f 	andseq	ip, r7, pc, ror r0
     d4c:	0017da10 	andseq	sp, r7, r0, lsl sl
     d50:	53000110 	movwpl	r0, #272	; 0x110
	...
     d5c:	16980000 	ldrne	r0, [r8], r0
     d60:	16ae1000 	strtne	r1, [lr], r0
     d64:	00011000 	andeq	r1, r1, r0
     d68:	00000052 	andeq	r0, r0, r2, asr r0
	...
     d74:	00164a00 	andseq	r4, r6, r0, lsl #20
     d78:	00166010 	andseq	r6, r6, r0, lsl r0
     d7c:	52000110 	andpl	r0, r0, #16, 2
     d80:	10001660 	andne	r1, r0, r0, ror #12
     d84:	10001667 	andne	r1, r0, r7, ror #12
     d88:	007d0002 	rsbseq	r0, sp, r2
	...
     d94:	00000001 	andeq	r0, r0, r1
	...
     da8:	10001868 	andne	r1, r0, r8, ror #16
     dac:	10001872 	andne	r1, r0, r2, ror r8
     db0:	9f310002 	svcls	0x00310002
     db4:	10001872 	andne	r1, r0, r2, ror r8
     db8:	10001888 	andne	r1, r0, r8, lsl #17
     dbc:	92590001 	subsls	r0, r9, #1
     dc0:	a2100018 	andsge	r0, r0, #24
     dc4:	01100018 	tsteq	r0, r8, lsl r0
     dc8:	18a25900 	stmiane	r2!, {r8, fp, ip, lr}
     dcc:	18a61000 	stmiane	r6!, {ip}
     dd0:	00011000 	andeq	r1, r1, r0
     dd4:	0018a653 	andseq	sl, r8, r3, asr r6
     dd8:	0018ae10 	andseq	sl, r8, r0, lsl lr
     ddc:	59000110 	stmdbpl	r0, {r4, r8}
     de0:	100018ae 	andne	r1, r0, lr, lsr #17
     de4:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     de8:	9f310002 	svcls	0x00310002
     dec:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     df0:	100018c0 	andne	r1, r0, r0, asr #17
     df4:	c0590001 	subsgt	r0, r9, r1
     df8:	ce100018 	mrcgt	0, 0, r0, cr0, cr8, {0}
     dfc:	01100018 	tsteq	r0, r8, lsl r0
     e00:	18ce5400 	stmiane	lr, {sl, ip, lr}^
     e04:	18d21000 	ldmne	r2, {ip}^
     e08:	00011000 	andeq	r1, r1, r0
     e0c:	0018d259 	andseq	sp, r8, r9, asr r2
     e10:	0018da10 	andseq	sp, r8, r0, lsl sl
     e14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     e24:	10001954 	andne	r1, r0, r4, asr r9
     e28:	1000197c 	andne	r1, r0, ip, ror r9
     e2c:	845a0001 	ldrbhi	r0, [sl], #-1
     e30:	88100019 	ldmdahi	r0, {r0, r3, r4}
     e34:	01100019 	tsteq	r0, r9, lsl r0
     e38:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     e58:	10001908 	andne	r1, r0, r8, lsl #18
     e5c:	10001928 	andne	r1, r0, r8, lsr #18
     e60:	2c590001 	mrrccs	0, 0, r0, r9, cr1
     e64:	34100019 	ldrcc	r0, [r0], #-25	; 0xffffffe7
     e68:	01100019 	tsteq	r0, r9, lsl r0
     e6c:	19345900 	ldmdbne	r4!, {r8, fp, ip, lr}
     e70:	19441000 	stmdbne	r4, {ip}^
     e74:	00011000 	andeq	r1, r1, r0
     e78:	00194455 	andseq	r4, r9, r5, asr r4
     e7c:	00194610 	andseq	r4, r9, r0, lsl r6
     e80:	53000110 	movwpl	r0, #272	; 0x110
     e84:	10001946 	andne	r1, r0, r6, asr #18
     e88:	10001954 	andne	r1, r0, r4, asr r9
     e8c:	54550001 	ldrbpl	r0, [r5], #-1
     e90:	7c100019 	ldcvc	0, cr0, [r0], {25}
     e94:	01100019 	tsteq	r0, r9, lsl r0
     e98:	19845900 	stmibne	r4, {r8, fp, ip, lr}
     e9c:	198a1000 	stmibne	sl, {ip}
     ea0:	00011000 	andeq	r1, r1, r0
     ea4:	00198a59 	andseq	r8, r9, r9, asr sl
     ea8:	00199810 	andseq	r9, r9, r0, lsl r8
     eac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     eb0:	10001998 	mulne	r0, r8, r9
     eb4:	1000199c 	mulne	r0, ip, r9
     eb8:	9c590001 	mrrcls	0, 0, r0, r9, cr1
     ebc:	a2100019 	andsge	r0, r0, #25
     ec0:	01100019 	tsteq	r0, r9, lsl r0
     ec4:	19a25400 	stmibne	r2!, {sl, ip, lr}
     ec8:	19a41000 	stmibne	r4!, {ip}
     ecc:	00031000 	andeq	r1, r3, r0
     ed0:	009f0179 	addseq	r0, pc, r9, ror r1	; <UNPREDICTABLE>
	...
     ee0:	0018f200 	andseq	pc, r8, r0, lsl #4
     ee4:	0018f810 	andseq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     ee8:	52000110 	andpl	r0, r0, #16, 2
     eec:	100018f8 	strdne	r1, [r0], -r8
     ef0:	10001900 	andne	r1, r0, r0, lsl #18
     ef4:	00530001 	subseq	r0, r3, r1
     ef8:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
     efc:	01100019 	tsteq	r0, r9, lsl r0
     f00:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     f0c:	100018f2 	strdne	r1, [r0], -r2
     f10:	10001908 	andne	r1, r0, r8, lsl #18
     f14:	00590001 	subseq	r0, r9, r1
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	01000000 	mrseq	r0, (UNDEF: 0)
     f20:	0019a800 	andseq	sl, r9, r0, lsl #16
     f24:	0019da10 	andseq	sp, r9, r0, lsl sl
     f28:	30000210 	andcc	r0, r0, r0, lsl r2
     f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f30:	00000000 	andeq	r0, r0, r0
     f34:	08000300 	stmdaeq	r0, {r8, r9}
     f38:	0e100014 	mrceq	0, 0, r0, cr0, cr4, {0}
     f3c:	01100014 	tsteq	r0, r4, lsl r0
     f40:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     f4c:	100014ae 	andne	r1, r0, lr, lsr #9
     f50:	100014b4 			; <UNDEFINED> instruction: 0x100014b4
     f54:	00520001 	subseq	r0, r2, r1
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	20000000 	andcs	r0, r0, r0
     f60:	2410000c 	ldrcs	r0, [r0], #-12
     f64:	0210000c 	andseq	r0, r0, #12
     f68:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
     f6c:	2810000c 	ldmdacs	r0, {r2, r3}
     f70:	0210000c 	andseq	r0, r0, #12
     f74:	28247d00 	stmdacs	r4!, {r8, sl, fp, ip, sp, lr}
     f78:	2a10000c 	bcs	400fb0 <__RAM_SIZE+0x300fb0>
     f7c:	0210000c 	andseq	r0, r0, #12
     f80:	2a2c7d00 	bcs	b20388 <__RAM_SIZE+0xa20388>
     f84:	7410000c 	ldrvc	r0, [r0], #-12
     f88:	0310000e 	tsteq	r0, #14
     f8c:	00f07d00 	rscseq	r7, r0, r0, lsl #26
     f90:	10000e74 	andne	r0, r0, r4, ror lr
     f94:	10000e78 	andne	r0, r0, r8, ror lr
     f98:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
     f9c:	10000e78 	andne	r0, r0, r8, ror lr
     fa0:	10000e7c 	andne	r0, r0, ip, ror lr
     fa4:	247d0002 	ldrbtcs	r0, [sp], #-2
     fa8:	10000e7c 	andne	r0, r0, ip, ror lr
     fac:	1000100a 	andne	r1, r0, sl
     fb0:	f07d0003 			; <UNDEFINED> instruction: 0xf07d0003
	...
     fc0:	000c2000 	andeq	r2, ip, r0
     fc4:	000c3810 	andeq	r3, ip, r0, lsl r8
     fc8:	50000110 	andpl	r0, r0, r0, lsl r1
     fcc:	10000c38 	andne	r0, r0, r8, lsr ip
     fd0:	1000100a 	andne	r1, r0, sl
     fd4:	005a0001 	subseq	r0, sl, r1
	...
     fe0:	20000000 	andcs	r0, r0, r0
     fe4:	3a10000c 	bcc	40101c <__RAM_SIZE+0x30101c>
     fe8:	0110000c 	tsteq	r0, ip
     fec:	0c3a5100 	ldfeqs	f5, [sl], #-0
     ff0:	100a1000 	andne	r1, sl, r0
     ff4:	00011000 	andeq	r1, r1, r0
     ff8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1014:	20000000 	andcs	r0, r0, r0
    1018:	3610000c 	ldrcc	r0, [r0], -ip
    101c:	0110000c 	tsteq	r0, ip
    1020:	0c365200 	lfmeq	f5, 4, [r6], #-0
    1024:	0e721000 	cdpeq	0, 7, cr1, cr2, cr0, {0}
    1028:	00011000 	andeq	r1, r1, r0
    102c:	000e7c5b 	andeq	r7, lr, fp, asr ip
    1030:	000f8410 	andeq	r8, pc, r0, lsl r4	; <UNPREDICTABLE>
    1034:	5b000110 	blpl	147c <_Min_Stack_Size+0x47c>
    1038:	10000f84 	andne	r0, r0, r4, lsl #31
    103c:	10000f9a 	mulne	r0, sl, pc	; <UNPREDICTABLE>
    1040:	9a500001 	bls	140104c <__RAM_SIZE+0x130104c>
    1044:	ce10000f 	cdpgt	0, 1, cr0, cr0, cr15, {0}
    1048:	0110000f 	tsteq	r0, pc
    104c:	0fce5800 	svceq	0x00ce5800
    1050:	0fdc1000 	svceq	0x00dc1000
    1054:	00011000 	andeq	r1, r1, r0
    1058:	000fdc50 	andeq	sp, pc, r0, asr ip	; <UNPREDICTABLE>
    105c:	000fec10 	andeq	lr, pc, r0, lsl ip	; <UNPREDICTABLE>
    1060:	5b000110 	blpl	14a8 <_Min_Stack_Size+0x4a8>
    1064:	10000fec 	andne	r0, r0, ip, ror #31
    1068:	10000ff2 	strdne	r0, [r0], -r2
    106c:	f2500001 	vhadd.s16	d16, d0, d1
    1070:	f410000f 			; <UNDEFINED> instruction: 0xf410000f
    1074:	0110000f 	tsteq	r0, pc
    1078:	0ff45200 	svceq	0x00f45200
    107c:	0ffe1000 	svceq	0x00fe1000
    1080:	00011000 	andeq	r1, r1, r0
    1084:	000ffe56 	andeq	pc, pc, r6, asr lr	; <UNPREDICTABLE>
    1088:	00100a10 	andseq	r0, r0, r0, lsl sl
    108c:	52000110 	andpl	r0, r0, #16, 2
	...
    109c:	10000c20 	andne	r0, r0, r0, lsr #24
    10a0:	10000c3d 	andne	r0, r0, sp, lsr ip
    10a4:	3d530001 	ldclcc	0, cr0, [r3, #-4]
    10a8:	0a10000c 	beq	4010e0 <__RAM_SIZE+0x3010e0>
    10ac:	01100010 	tsteq	r0, r0, lsl r0
    10b0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    10c4:	0c200000 	stceq	0, cr0, [r0], #-0
    10c8:	0c881000 	stceq	0, cr1, [r8], {0}
    10cc:	00021000 	andeq	r1, r2, r0
    10d0:	0c880091 	stceq	0, cr0, [r8], {145}	; 0x91
    10d4:	0e521000 	cdpeq	0, 5, cr1, cr2, cr0, {0}
    10d8:	00031000 	andeq	r1, r3, r0
    10dc:	527fa891 	rsbspl	sl, pc, #9502720	; 0x910000
    10e0:	7210000e 	andsvc	r0, r0, #14
    10e4:	0210000e 	andseq	r0, r0, #14
    10e8:	7c009100 	stfvcd	f1, [r0], {-0}
    10ec:	9010000e 	andsls	r0, r0, lr
    10f0:	0210000e 	andseq	r0, r0, #14
    10f4:	90009100 	andls	r9, r0, r0, lsl #2
    10f8:	6010000e 	andsvs	r0, r0, lr
    10fc:	0310000f 	tsteq	r0, #15
    1100:	7fa89100 	svcvc	0x00a89100
    1104:	10000fdc 	ldrdne	r0, [r0], -ip
    1108:	10000fea 	andne	r0, r0, sl, ror #31
    110c:	a8910003 	ldmge	r1, {r0, r1}
    1110:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1124:	000c2000 	andeq	r2, ip, r0
    1128:	000c9610 	andeq	r9, ip, r0, lsl r6
    112c:	91000210 	tstls	r0, r0, lsl r2
    1130:	000c9608 	andeq	r9, ip, r8, lsl #12
    1134:	000e5010 	andeq	r5, lr, r0, lsl r0
    1138:	91000210 	tstls	r0, r0, lsl r2
    113c:	000e5008 	andeq	r5, lr, r8
    1140:	000e5210 	andeq	r5, lr, r0, lsl r2
    1144:	53000110 	movwpl	r0, #272	; 0x110
    1148:	10000e52 	andne	r0, r0, r2, asr lr
    114c:	10000ec4 	andne	r0, r0, r4, asr #29
    1150:	08910002 	ldmeq	r1, {r1}
    1154:	10000ec4 	andne	r0, r0, r4, asr #29
    1158:	10000f2c 	andne	r0, r0, ip, lsr #30
    115c:	2c530001 	mrrccs	0, 0, r0, r3, cr1
    1160:	0a10000f 	beq	4011a4 <__RAM_SIZE+0x3011a4>
    1164:	02100010 	andseq	r0, r0, #16
    1168:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    1174:	20000000 	andcs	r0, r0, r0
    1178:	7c10000c 	ldcvc	0, cr0, [r0], {12}
    117c:	0210000e 	andseq	r0, r0, #14
    1180:	7c0c9100 	stfvcd	f1, [ip], {-0}
    1184:	0a10000e 	beq	4011c4 <__RAM_SIZE+0x3011c4>
    1188:	02100010 	andseq	r0, r0, #16
    118c:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    119c:	20000000 	andcs	r0, r0, r0
    11a0:	7c10000c 	ldcvc	0, cr0, [r0], {12}
    11a4:	0210000e 	andseq	r0, r0, #14
    11a8:	7c109100 	ldfvcd	f1, [r0], {-0}
    11ac:	a210000e 	andsge	r0, r0, #14
    11b0:	0210000e 	andseq	r0, r0, #14
    11b4:	a2109100 	andsge	r9, r0, #0, 2
    11b8:	a610000e 	ldrge	r0, [r0], -lr
    11bc:	0110000e 	tsteq	r0, lr
    11c0:	0ea65300 	cdpeq	3, 10, cr5, cr6, cr0, {0}
    11c4:	100a1000 	andne	r1, sl, r0
    11c8:	00021000 	andeq	r1, r2, r0
    11cc:	00001091 	muleq	r0, r1, r0
    11d0:	00000000 	andeq	r0, r0, r0
    11d4:	00010000 	andeq	r0, r1, r0
    11d8:	0c6e0000 	stcleq	0, cr0, [lr], #-0
    11dc:	0e521000 	cdpeq	0, 5, cr1, cr2, cr0, {0}
    11e0:	00121000 	andseq	r1, r2, r0
    11e4:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    11e8:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    11f4:	0e7c9f2d 	cdpeq	15, 7, cr9, cr12, cr13, {1}
    11f8:	100a1000 	andne	r1, sl, r0
    11fc:	00121000 	andseq	r1, r2, r0
    1200:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1204:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    1210:	00009f2d 	andeq	r9, r0, sp, lsr #30
	...
    121c:	0e720001 	cdpeq	0, 7, cr0, cr2, cr1, {0}
    1220:	0e781000 	cdpeq	0, 7, cr1, cr8, cr0, {0}
    1224:	00081000 	andeq	r1, r8, r0
    1228:	04935090 	ldreq	r5, [r3], #144	; 0x90
    122c:	04935190 	ldreq	r5, [r3], #400	; 0x190
    1230:	10000f40 	andne	r0, r0, r0, asr #30
    1234:	1000100a 	andne	r1, r0, sl
    1238:	50900008 	addspl	r0, r0, r8
    123c:	51900493 			; <UNDEFINED> instruction: 0x51900493
    1240:	00000493 	muleq	r0, r3, r4
	...
    1254:	0ca00000 	stceq	0, cr0, [r0]
    1258:	0cb21000 	ldceq	0, cr1, [r2]
    125c:	00041000 	andeq	r1, r4, r0
    1260:	9f788170 	svcls	0x00788170
    1264:	10000cb2 			; <UNDEFINED> instruction: 0x10000cb2
    1268:	10000cb5 			; <UNDEFINED> instruction: 0x10000cb5
    126c:	16500001 	ldrbne	r0, [r0], -r1
    1270:	1e10000d 	cdpne	0, 1, cr0, cr0, cr13, {0}
    1274:	0110000d 	tsteq	r0, sp
    1278:	0d1e5000 	ldceq	0, cr5, [lr, #-0]
    127c:	0d581000 	ldcleq	0, cr1, [r8, #-0]
    1280:	00011000 	andeq	r1, r1, r0
    1284:	000d5857 	andeq	r5, sp, r7, asr r8
    1288:	000e1410 	andeq	r1, lr, r0, lsl r4
    128c:	77000410 	smladvc	r0, r0, r4, r0
    1290:	929f7881 	addsls	r7, pc, #8454144	; 0x810000
    1294:	9410000e 	ldrls	r0, [r0], #-14
    1298:	0410000e 	ldreq	r0, [r0], #-14
    129c:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    12a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    12ac:	02000000 	andeq	r0, r0, #0
    12b0:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    12b4:	f910000c 			; <UNDEFINED> instruction: 0xf910000c
    12b8:	0110000c 	tsteq	r0, ip
    12bc:	0cf95000 	ldcleq	0, cr5, [r9]
    12c0:	0e4c1000 	cdpeq	0, 4, cr1, cr12, cr0, {0}
    12c4:	00011000 	andeq	r1, r1, r0
    12c8:	000e9256 	andeq	r9, lr, r6, asr r2
    12cc:	000e9a10 	andeq	r9, lr, r0, lsl sl
    12d0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    12d4:	10000ea2 	andne	r0, r0, r2, lsr #29
    12d8:	10000ea6 	andne	r0, r0, r6, lsr #29
    12dc:	9f300002 	svcls	0x00300002
    12e0:	10000ea6 	andne	r0, r0, r6, lsr #29
    12e4:	10000ff2 	strdne	r0, [r0], -r2
    12e8:	00560001 	subseq	r0, r6, r1
	...
    12f4:	000d4800 	andeq	r4, sp, r0, lsl #16
    12f8:	000d8810 	andeq	r8, sp, r0, lsl r8
    12fc:	58000610 	stmdapl	r0, {r4, r9, sl}
    1300:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1304:	00000004 	andeq	r0, r0, r4
	...
    1310:	54000000 	strpl	r0, [r0], #-0
    1314:	6e10000d 	cdpvs	0, 1, cr0, cr0, cr13, {0}
    1318:	0610000d 	ldreq	r0, [r0], -sp
    131c:	04935000 	ldreq	r5, [r3], #0
    1320:	6e049351 	mcrvs	3, 0, r9, cr4, cr1, {2}
    1324:	5210000d 	andspl	r0, r0, #13
    1328:	0310000e 	tsteq	r0, #14
    132c:	7fb89100 	svcvc	0x00b89100
    1330:	10000e92 	mulne	r0, r2, lr
    1334:	1000100a 	andne	r1, r0, sl
    1338:	b8910003 	ldmlt	r1, {r0, r1}
    133c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1348:	00000101 	andeq	r0, r0, r1, lsl #2
    134c:	00000000 	andeq	r0, r0, r0
    1350:	000e1400 	andeq	r1, lr, r0, lsl #8
    1354:	000e5210 	andeq	r5, lr, r0, lsl r2
    1358:	57000110 	smladpl	r0, r0, r1, r0
    135c:	10000e96 	mulne	r0, r6, lr
    1360:	10000ea2 	andne	r0, r0, r2, lsr #29
    1364:	a2570001 	subsge	r0, r7, #1
    1368:	a610000e 	ldrge	r0, [r0], -lr
    136c:	0210000e 	andseq	r0, r0, #14
    1370:	a69f3000 	ldrge	r3, [pc], r0
    1374:	b210000e 	andslt	r0, r0, #14
    1378:	0110000f 	tsteq	r0, pc
    137c:	0fb25700 	svceq	0x00b25700
    1380:	0fda1000 	svceq	0x00da1000
    1384:	00031000 	andeq	r1, r3, r0
    1388:	dc9f0177 	ldfles	f0, [pc], {119}	; 0x77
    138c:	f210000f 	vhadd.s16	d0, d0, d15
    1390:	0110000f 	tsteq	r0, pc
    1394:	00005700 	andeq	r5, r0, r0, lsl #14
    1398:	00000000 	andeq	r0, r0, r0
    139c:	00010000 	andeq	r0, r1, r0
	...
    13a8:	10000ea6 	andne	r0, r0, r6, lsr #29
    13ac:	10000eb0 			; <UNDEFINED> instruction: 0x10000eb0
    13b0:	0c910002 	ldceq	0, cr0, [r1], {2}
    13b4:	10000eb0 			; <UNDEFINED> instruction: 0x10000eb0
    13b8:	10000eb2 			; <UNDEFINED> instruction: 0x10000eb2
    13bc:	2c580001 	mrrccs	0, 0, r0, r8, cr1
    13c0:	3010000f 	andscc	r0, r0, pc
    13c4:	0110000f 	tsteq	r0, pc
    13c8:	0f305300 	svceq	0x00305300
    13cc:	0f9a1000 	svceq	0x009a1000
    13d0:	00011000 	andeq	r1, r1, r0
    13d4:	000fdc58 	andeq	sp, pc, r8, asr ip	; <UNPREDICTABLE>
    13d8:	000ff210 	andeq	pc, pc, r0, lsl r2	; <UNPREDICTABLE>
    13dc:	58000110 	stmdapl	r0, {r4, r8}
	...
    13e8:	0f500001 	svceq	0x00500001
    13ec:	100a1000 	andne	r1, sl, r0
    13f0:	00011000 	andeq	r1, r1, r0
    13f4:	0000005b 	andeq	r0, r0, fp, asr r0
    13f8:	00000000 	andeq	r0, r0, r0
    13fc:	00101000 	andseq	r1, r0, r0
    1400:	00101410 	andseq	r1, r0, r0, lsl r4
    1404:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1408:	00101400 	andseq	r1, r0, r0, lsl #8
    140c:	00101810 	andseq	r1, r0, r0, lsl r8
    1410:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1414:	00101824 	andseq	r1, r0, r4, lsr #16
    1418:	00101a10 	andseq	r1, r0, r0, lsl sl
    141c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1420:	00101a2c 	andseq	r1, r0, ip, lsr #20
    1424:	00133410 	andseq	r3, r3, r0, lsl r4
    1428:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    142c:	13340180 	teqne	r4, #128, 2
    1430:	13381000 	teqne	r8, #0
    1434:	00021000 	andeq	r1, r2, r0
    1438:	13382c7d 	teqne	r8, #32000	; 0x7d00
    143c:	133c1000 	teqne	ip, #0
    1440:	00021000 	andeq	r1, r2, r0
    1444:	133c247d 	teqne	ip, #2097152000	; 0x7d000000
    1448:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    144c:	00031000 	andeq	r1, r3, r0
    1450:	0001807d 	andeq	r8, r1, sp, ror r0
	...
    145c:	10000000 	andne	r0, r0, r0
    1460:	2e100010 	mrccs	0, 0, r0, cr0, cr0, {0}
    1464:	01100010 	tsteq	r0, r0, lsl r0
    1468:	102e5000 	eorne	r5, lr, r0
    146c:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    1470:	00031000 	andeq	r1, r3, r0
    1474:	007f9c91 			; <UNDEFINED> instruction: 0x007f9c91
	...
    1480:	10000000 	andne	r0, r0, r0
    1484:	30100010 	andscc	r0, r0, r0, lsl r0
    1488:	01100010 	tsteq	r0, r0, lsl r0
    148c:	10305100 	eorsne	r5, r0, r0, lsl #2
    1490:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    1494:	00031000 	andeq	r1, r3, r0
    1498:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    14a4:	10000000 	andne	r0, r0, r0
    14a8:	2a100010 	bcs	4014f0 <__RAM_SIZE+0x3014f0>
    14ac:	01100010 	tsteq	r0, r0, lsl r0
    14b0:	102a5200 	eorne	r5, sl, r0, lsl #4
    14b4:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    14b8:	00011000 	andeq	r1, r1, r0
    14bc:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    14c8:	00101000 	andseq	r1, r0, r0
    14cc:	00102c10 	andseq	r2, r0, r0, lsl ip
    14d0:	53000110 	movwpl	r0, #272	; 0x110
    14d4:	1000102c 	andne	r1, r0, ip, lsr #32
    14d8:	100013a6 	andne	r1, r0, r6, lsr #7
    14dc:	005b0001 	subseq	r0, fp, r1
	...
    14f0:	00101000 	andseq	r1, r0, r0
    14f4:	00109610 	andseq	r9, r0, r0, lsl r6
    14f8:	91000210 	tstls	r0, r0, lsl r2
    14fc:	00109600 	andseq	r9, r0, r0, lsl #12
    1500:	0010ba10 	andseq	fp, r0, r0, lsl sl
    1504:	58000610 	stmdapl	r0, {r4, r9, sl}
    1508:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    150c:	0010ba04 	andseq	fp, r0, r4, lsl #20
    1510:	00115210 	andseq	r5, r1, r0, lsl r2
    1514:	91000210 	tstls	r0, r0, lsl r2
    1518:	00115200 	andseq	r5, r1, r0, lsl #4
    151c:	0011ea10 	andseq	lr, r1, r0, lsl sl
    1520:	58000610 	stmdapl	r0, {r4, r9, sl}
    1524:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1528:	00120e04 	andseq	r0, r2, r4, lsl #28
    152c:	00128a10 	andseq	r8, r2, r0, lsl sl
    1530:	58000610 	stmdapl	r0, {r4, r9, sl}
    1534:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1538:	00000004 	andeq	r0, r0, r4
	...
    1548:	00101000 	andseq	r1, r0, r0
    154c:	00109e10 	andseq	r9, r0, r0, lsl lr
    1550:	91000210 	tstls	r0, r0, lsl r2
    1554:	0010a008 	andseq	sl, r0, r8
    1558:	0010ba10 	andseq	fp, r0, r0, lsl sl
    155c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1560:	100010ba 	strhne	r1, [r0], -sl
    1564:	1000115c 	andne	r1, r0, ip, asr r1
    1568:	08910002 	ldmeq	r1, {r1}
    156c:	1000115c 	andne	r1, r0, ip, asr r1
    1570:	1000122a 	andne	r1, r0, sl, lsr #4
    1574:	00550001 	subseq	r0, r5, r1
	...
    1588:	00101000 	andseq	r1, r0, r0
    158c:	00130010 	andseq	r0, r3, r0, lsl r0
    1590:	91000210 	tstls	r0, r0, lsl r2
    1594:	0013000c 	andseq	r0, r3, ip
    1598:	00135210 	andseq	r5, r3, r0, lsl r2
    159c:	91000210 	tstls	r0, r0, lsl r2
    15a0:	0013520c 	andseq	r5, r3, ip, lsl #4
    15a4:	00135610 	andseq	r5, r3, r0, lsl r6
    15a8:	53000110 	movwpl	r0, #272	; 0x110
    15ac:	10001356 	andne	r1, r0, r6, asr r3
    15b0:	1000136e 	andne	r1, r0, lr, ror #6
    15b4:	6e510001 	cdpvs	0, 5, cr0, cr1, cr1, {0}
    15b8:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    15bc:	02100013 	andseq	r0, r0, #19
    15c0:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    15cc:	10000000 	andne	r0, r0, r0
    15d0:	3c100010 	ldccc	0, cr0, [r0], {16}
    15d4:	02100013 	andseq	r0, r0, #19
    15d8:	3c109100 	ldfccd	f1, [r0], {-0}
    15dc:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    15e0:	02100013 	andseq	r0, r0, #19
    15e4:	00109100 	andseq	r9, r0, r0, lsl #2
    15e8:	00000000 	andeq	r0, r0, r0
    15ec:	02000000 	andeq	r0, r0, #0
    15f0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    15fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1600:	01010000 	mrseq	r0, (UNDEF: 1)
    1604:	00000000 	andeq	r0, r0, r0
    1608:	01010000 	mrseq	r0, (UNDEF: 1)
    160c:	00000000 	andeq	r0, r0, r0
    1610:	00000101 	andeq	r0, r0, r1, lsl #2
    1614:	00000101 	andeq	r0, r0, r1, lsl #2
    1618:	00000101 	andeq	r0, r0, r1, lsl #2
    161c:	00102800 	andseq	r2, r0, r0, lsl #16
    1620:	0010a010 	andseq	sl, r0, r0, lsl r0
    1624:	30000210 	andcc	r0, r0, r0, lsl r2
    1628:	0010a09f 	mulseq	r0, pc, r0	; <UNPREDICTABLE>
    162c:	0010a810 	andseq	sl, r0, r0, lsl r8
    1630:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1634:	100010a8 	andne	r1, r0, r8, lsr #1
    1638:	100010b8 	strhne	r1, [r0], -r8
    163c:	01740003 	cmneq	r4, r3
    1640:	0010b89f 	mulseq	r0, pc, r8	; <UNPREDICTABLE>
    1644:	0010ba10 	andseq	fp, r0, r0, lsl sl
    1648:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    164c:	100010ba 	strhne	r1, [r0], -sl
    1650:	1000115c 	andne	r1, r0, ip, asr r1
    1654:	9f300002 	svcls	0x00300002
    1658:	1000115c 	andne	r1, r0, ip, asr r1
    165c:	10001244 	andne	r1, r0, r4, asr #4
    1660:	44540001 	ldrbmi	r0, [r4], #-1
    1664:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1668:	01100012 	tsteq	r0, r2, lsl r0
    166c:	125e5200 	subsne	r5, lr, #0, 4
    1670:	12661000 	rsbne	r1, r6, #0
    1674:	00011000 	andeq	r1, r1, r0
    1678:	00126654 	andseq	r6, r2, r4, asr r6
    167c:	00127610 	andseq	r7, r2, r0, lsl r6
    1680:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1684:	12769f01 	rsbsne	r9, r6, #1, 30
    1688:	127c1000 	rsbsne	r1, ip, #0
    168c:	00011000 	andeq	r1, r1, r0
    1690:	00127c54 	andseq	r7, r2, r4, asr ip
    1694:	00128a10 	andseq	r8, r2, r0, lsl sl
    1698:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    169c:	128a9f01 	addne	r9, sl, #1, 30
    16a0:	12a61000 	adcne	r1, r6, #0
    16a4:	00011000 	andeq	r1, r1, r0
    16a8:	0012a654 	andseq	sl, r2, r4, asr r6
    16ac:	0012f610 	andseq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
    16b0:	51000110 	tstpl	r0, r0, lsl r1
    16b4:	100012f6 	strdne	r1, [r0], -r6
    16b8:	1000130a 	andne	r1, r0, sl, lsl #6
    16bc:	0a540001 	beq	15016c8 <__RAM_SIZE+0x14016c8>
    16c0:	18100013 	ldmdane	r0, {r0, r1, r4}
    16c4:	03100013 	tsteq	r0, #19
    16c8:	9f017400 	svcls	0x00017400
    16cc:	10001318 	andne	r1, r0, r8, lsl r3
    16d0:	10001332 	andne	r1, r0, r2, lsr r3
    16d4:	3c540001 	mrrccc	0, 0, r0, r4, cr1
    16d8:	56100013 			; <UNDEFINED> instruction: 0x56100013
    16dc:	01100013 	tsteq	r0, r3, lsl r0
    16e0:	13565400 	cmpne	r6, #0, 8
    16e4:	13641000 	cmnne	r4, #0
    16e8:	00031000 	andeq	r1, r3, r0
    16ec:	649f0174 	ldrvs	r0, [pc], #372	; 16f4 <_Min_Stack_Size+0x6f4>
    16f0:	7e100013 	mrcvc	0, 0, r0, cr0, cr3, {0}
    16f4:	01100013 	tsteq	r0, r3, lsl r0
    16f8:	137e5400 	cmnne	lr, #0, 8
    16fc:	138c1000 	orrne	r1, ip, #0
    1700:	00031000 	andeq	r1, r3, r0
    1704:	8c9f0174 	ldfhis	f0, [pc], {116}	; 0x74
    1708:	96100013 			; <UNDEFINED> instruction: 0x96100013
    170c:	01100013 	tsteq	r0, r3, lsl r0
    1710:	13965400 	orrsne	r5, r6, #0, 8
    1714:	13a41000 			; <UNDEFINED> instruction: 0x13a41000
    1718:	00031000 	andeq	r1, r3, r0
    171c:	a49f0174 	ldrge	r0, [pc], #372	; 1724 <_Min_Stack_Size+0x724>
    1720:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    1724:	01100013 	tsteq	r0, r3, lsl r0
    1728:	00005400 	andeq	r5, r0, r0, lsl #8
    172c:	00000000 	andeq	r0, r0, r0
    1730:	00030000 	andeq	r0, r3, r0
	...
    173c:	10001028 	andne	r1, r0, r8, lsr #32
    1740:	100011ae 	andne	r1, r0, lr, lsr #3
    1744:	089e000a 	ldmeq	lr, {r1, r3}
	...
    1750:	100011ae 	andne	r1, r0, lr, lsr #3
    1754:	100011b0 			; <UNDEFINED> instruction: 0x100011b0
    1758:	93520006 	cmpls	r2, #6
    175c:	04935304 	ldreq	r5, [r3], #772	; 0x304
    1760:	100011b0 			; <UNDEFINED> instruction: 0x100011b0
    1764:	100011ea 	andne	r1, r0, sl, ror #3
    1768:	a0910003 	addsge	r0, r1, r3
    176c:	0011ea7f 	andseq	lr, r1, pc, ror sl
    1770:	00120e10 	andseq	r0, r2, r0, lsl lr
    1774:	57000610 	smladpl	r0, r0, r6, r0
    1778:	93580493 	cmpls	r8, #-1828716544	; 0x93000000
    177c:	00120e04 	andseq	r0, r2, r4, lsl #28
    1780:	00128a10 	andseq	r8, r2, r0, lsl sl
    1784:	91000310 	tstls	r0, r0, lsl r3
    1788:	00007fa0 	andeq	r7, r0, r0, lsr #31
    178c:	00000000 	andeq	r0, r0, r0
    1790:	00010000 	andeq	r0, r1, r0
    1794:	01000000 	mrseq	r0, (UNDEF: 0)
    1798:	00000001 	andeq	r0, r0, r1
    179c:	10820000 	addne	r0, r2, r0
    17a0:	10961000 	addsne	r1, r6, r0
    17a4:	00021000 	andeq	r1, r2, r0
    17a8:	10969f30 	addsne	r9, r6, r0, lsr pc
    17ac:	10ba1000 	adcsne	r1, sl, r0
    17b0:	00031000 	andeq	r1, r3, r0
    17b4:	427fac91 	rsbsmi	sl, pc, #37120	; 0x9100
    17b8:	42100011 	andsmi	r0, r0, #17
    17bc:	02100011 	andseq	r0, r0, #17
    17c0:	429f3000 	addsmi	r3, pc, #0
    17c4:	58100011 	ldmdapl	r0, {r0, r4}
    17c8:	02100011 	andseq	r0, r0, #17
    17cc:	589f3100 	ldmpl	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    17d0:	32100011 	andscc	r0, r0, #17
    17d4:	03100013 	tsteq	r0, #19
    17d8:	7fac9100 	svcvc	0x00ac9100
    17dc:	1000133c 	andne	r1, r0, ip, lsr r3
    17e0:	100013a6 	andne	r1, r0, r6, lsr #7
    17e4:	ac910003 	ldcge	0, cr0, [r1], {3}
    17e8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    17f8:	66000000 	strvs	r0, [r0], -r0
    17fc:	69100011 	ldmdbvs	r0, {r0, r4}
    1800:	01100011 	tsteq	r0, r1, lsl r0
    1804:	11695000 	cmnne	r9, r0
    1808:	12b61000 	adcsne	r1, r6, #0
    180c:	00011000 	andeq	r1, r1, r0
    1810:	0012b656 	andseq	fp, r2, r6, asr r6
    1814:	0012f610 	andseq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
    1818:	52000110 	andpl	r0, r0, #16, 2
    181c:	100012f6 	strdne	r1, [r0], -r6
    1820:	10001332 	andne	r1, r0, r2, lsr r3
    1824:	3c560001 	mrrccc	0, 0, r0, r6, cr1
    1828:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    182c:	01100013 	tsteq	r0, r3, lsl r0
    1830:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    183c:	11900000 	orrsne	r0, r0, r0
    1840:	11931000 	orrsne	r1, r3, r0
    1844:	00061000 	andeq	r1, r6, r0
    1848:	53049352 	movwpl	r9, #17234	; 0x4352
    184c:	11930493 			; <UNDEFINED> instruction: 0x11930493
    1850:	11ae1000 			; <UNDEFINED> instruction: 0x11ae1000
    1854:	00031000 	andeq	r1, r3, r0
    1858:	007fa091 			; <UNDEFINED> instruction: 0x007fa091
	...
    1864:	01010000 	mrseq	r0, (UNDEF: 1)
    1868:	00000000 	andeq	r0, r0, r0
    186c:	96000101 	strls	r0, [r0], -r1, lsl #2
    1870:	99100011 	ldmdbls	r0, {r0, r4}
    1874:	01100011 	tsteq	r0, r1, lsl r0
    1878:	11995000 	orrsne	r5, r9, r0
    187c:	11ce1000 	bicne	r1, lr, r0
    1880:	00011000 	andeq	r1, r1, r0
    1884:	0011ce57 	andseq	ip, r1, r7, asr lr
    1888:	0011d210 	andseq	sp, r1, r0, lsl r2
    188c:	30000210 	andcc	r0, r0, r0, lsl r2
    1890:	0011d29f 	mulseq	r1, pc, r2	; <UNPREDICTABLE>
    1894:	0011e810 	andseq	lr, r1, r0, lsl r8
    1898:	57000110 	smladpl	r0, r0, r1, r0
    189c:	1000120e 	andne	r1, r0, lr, lsl #4
    18a0:	10001252 	andne	r1, r0, r2, asr r2
    18a4:	52570001 	subspl	r0, r7, #1
    18a8:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    18ac:	01100012 	tsteq	r0, r2, lsl r0
    18b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    18bc:	122a0000 	eorne	r0, sl, #0
    18c0:	12641000 	rsbne	r1, r4, #0
    18c4:	00011000 	andeq	r1, r1, r0
    18c8:	00126455 	andseq	r6, r2, r5, asr r4
    18cc:	00127810 	andseq	r7, r2, r0, lsl r8
    18d0:	53000110 	movwpl	r0, #272	; 0x110
	...
    18dc:	10000b54 	andne	r0, r0, r4, asr fp
    18e0:	10000b58 	andne	r0, r0, r8, asr fp
    18e4:	007d0002 	rsbseq	r0, sp, r2
    18e8:	10000b58 	andne	r0, r0, r8, asr fp
    18ec:	10000b5a 	andne	r0, r0, sl, asr fp
    18f0:	247d0002 	ldrbtcs	r0, [sp], #-2
    18f4:	10000b5a 	andne	r0, r0, sl, asr fp
    18f8:	10000c16 	andne	r0, r0, r6, lsl ip
    18fc:	f87d0003 			; <UNDEFINED> instruction: 0xf87d0003
    1900:	000c1600 	andeq	r1, ip, r0, lsl #12
    1904:	000c1a10 	andeq	r1, ip, r0, lsl sl
    1908:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    190c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
    191c:	000b5400 	andeq	r5, fp, r0, lsl #8
    1920:	000b8a10 	andeq	r8, fp, r0, lsl sl
    1924:	50000110 	andpl	r0, r0, r0, lsl r1
    1928:	10000b8a 	andne	r0, r0, sl, lsl #23
    192c:	10000be8 	andne	r0, r0, r8, ror #23
    1930:	ac910003 	ldcge	0, cr0, [r1], {3}
    1934:	000be87f 	andeq	lr, fp, pc, ror r8
    1938:	000bec10 	andeq	lr, fp, r0, lsl ip
    193c:	50000110 	andpl	r0, r0, r0, lsl r1
    1940:	10000bec 	andne	r0, r0, ip, ror #23
    1944:	10000c1a 	andne	r0, r0, sl, lsl ip
    1948:	ac910003 	ldcge	0, cr0, [r1], {3}
    194c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    195c:	000b5400 	andeq	r5, fp, r0, lsl #8
    1960:	000b8a10 	andeq	r8, fp, r0, lsl sl
    1964:	51000110 	tstpl	r0, r0, lsl r1
    1968:	10000b8a 	andne	r0, r0, sl, lsl #23
    196c:	10000be8 	andne	r0, r0, r8, ror #23
    1970:	b0910003 	addslt	r0, r1, r3
    1974:	000be87f 	andeq	lr, fp, pc, ror r8
    1978:	000bec10 	andeq	lr, fp, r0, lsl ip
    197c:	51000110 	tstpl	r0, r0, lsl r1
    1980:	10000bec 	andne	r0, r0, ip, ror #23
    1984:	10000c1a 	andne	r0, r0, sl, lsl ip
    1988:	b0910003 	addslt	r0, r1, r3
    198c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    199c:	000b5400 	andeq	r5, fp, r0, lsl #8
    19a0:	000b8a10 	andeq	r8, fp, r0, lsl sl
    19a4:	52000110 	andpl	r0, r0, #16, 2
    19a8:	10000b8a 	andne	r0, r0, sl, lsl #23
    19ac:	10000be8 	andne	r0, r0, r8, ror #23
    19b0:	b4910003 	ldrlt	r0, [r1], #3
    19b4:	000be87f 	andeq	lr, fp, pc, ror r8
    19b8:	000bec10 	andeq	lr, fp, r0, lsl ip
    19bc:	52000110 	andpl	r0, r0, #16, 2
    19c0:	10000bec 	andne	r0, r0, ip, ror #23
    19c4:	10000c1a 	andne	r0, r0, sl, lsl ip
    19c8:	b4910003 	ldrlt	r0, [r1], #3
    19cc:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    19d8:	000b5400 	andeq	r5, fp, r0, lsl #8
    19dc:	000b7410 	andeq	r7, fp, r0, lsl r4
    19e0:	53000110 	movwpl	r0, #272	; 0x110
    19e4:	10000b74 	andne	r0, r0, r4, ror fp
    19e8:	10000c1a 	andne	r0, r0, sl, lsl ip
    19ec:	005b0001 	subseq	r0, fp, r1
	...
    1a00:	000b5400 	andeq	r5, fp, r0, lsl #8
    1a04:	000b8a10 	andeq	r8, fp, r0, lsl sl
    1a08:	91000210 	tstls	r0, r0, lsl r2
    1a0c:	000b8a00 	andeq	r8, fp, r0, lsl #20
    1a10:	000bac10 	andeq	sl, fp, r0, lsl ip
    1a14:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1a18:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1a1c:	000bac04 	andeq	sl, fp, r4, lsl #24
    1a20:	000bc010 	andeq	ip, fp, r0, lsl r0
    1a24:	50000610 	andpl	r0, r0, r0, lsl r6
    1a28:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    1a2c:	000bc004 	andeq	ip, fp, r4
    1a30:	000be810 	andeq	lr, fp, r0, lsl r8
    1a34:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1a38:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1a3c:	000be804 	andeq	lr, fp, r4, lsl #16
    1a40:	000bec10 	andeq	lr, fp, r0, lsl ip
    1a44:	91000210 	tstls	r0, r0, lsl r2
	...
    1a54:	000b5400 	andeq	r5, fp, r0, lsl #8
    1a58:	000b7a10 	andeq	r7, fp, r0, lsl sl
    1a5c:	91000210 	tstls	r0, r0, lsl r2
    1a60:	000b7a20 	andeq	r7, fp, r0, lsr #20
    1a64:	000c1a10 	andeq	r1, ip, r0, lsl sl
    1a68:	5a000110 	bpl	1eb0 <_Min_Stack_Size+0xeb0>
	...
    1a74:	00000002 	andeq	r0, r0, r2
	...
    1a80:	10000b70 	andne	r0, r0, r0, ror fp
    1a84:	10000b8a 	andne	r0, r0, sl, lsl #23
    1a88:	9f300002 	svcls	0x00300002
    1a8c:	10000b8a 	andne	r0, r0, sl, lsl #23
    1a90:	10000b94 	mulne	r0, r4, fp
    1a94:	94540001 	ldrbls	r0, [r4], #-1
    1a98:	c010000b 	andsgt	r0, r0, fp
    1a9c:	0110000b 	tsteq	r0, fp
    1aa0:	0bc05900 	bleq	ff017ea8 <__RAM_segment_used_end__+0xc6f17ea8>
    1aa4:	0be81000 	bleq	ffa05aac <__RAM_segment_used_end__+0xc7905aac>
    1aa8:	00011000 	andeq	r1, r1, r0
    1aac:	000be854 	andeq	lr, fp, r4, asr r8
    1ab0:	000bec10 	andeq	lr, fp, r0, lsl ip
    1ab4:	30000210 	andcc	r0, r0, r0, lsl r2
    1ab8:	000bec9f 	muleq	fp, pc, ip	; <UNPREDICTABLE>
    1abc:	000c1a10 	andeq	r1, ip, r0, lsl sl
    1ac0:	59000110 	stmdbpl	r0, {r4, r8}
	...
    1ad0:	10000b8a 	andne	r0, r0, sl, lsl #23
    1ad4:	10000b98 	mulne	r0, r8, fp
    1ad8:	ce530001 	cdpgt	0, 5, cr0, cr3, cr1, {0}
    1adc:	e810000b 	ldmda	r0, {r0, r1, r3}
    1ae0:	0110000b 	tsteq	r0, fp
    1ae4:	00005300 	andeq	r5, r0, r0, lsl #6
    1ae8:	00000000 	andeq	r0, r0, r0
    1aec:	0ac00000 	beq	ff001af4 <__RAM_segment_used_end__+0xc6f01af4>
    1af0:	0ac21000 	beq	ff085af8 <__RAM_segment_used_end__+0xc6f85af8>
    1af4:	00021000 	andeq	r1, r2, r0
    1af8:	0ac2007d 	beq	ff081cf4 <__RAM_segment_used_end__+0xc6f81cf4>
    1afc:	0ac41000 	beq	ff105b04 <__RAM_segment_used_end__+0xc7005b04>
    1b00:	00021000 	andeq	r1, r2, r0
    1b04:	0ac4147d 	beq	ff106d00 <__RAM_segment_used_end__+0xc7006d00>
    1b08:	0b521000 	bleq	1485b10 <__RAM_SIZE+0x1385b10>
    1b0c:	00031000 	andeq	r1, r3, r0
    1b10:	5200d87d 	andpl	sp, r0, #8192000	; 0x7d0000
    1b14:	5410000b 	ldrpl	r0, [r0], #-11
    1b18:	0210000b 	andseq	r0, r0, #11
    1b1c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    1b28:	c0000000 	andgt	r0, r0, r0
    1b2c:	4f10000a 	svcmi	0x0010000a
    1b30:	0110000b 	tsteq	r0, fp
    1b34:	0b4f5000 	bleq	13d5b3c <__RAM_SIZE+0x12d5b3c>
    1b38:	0b541000 	bleq	1505b40 <__RAM_SIZE+0x1405b40>
    1b3c:	00041000 	andeq	r1, r4, r0
    1b40:	9f5001f3 	svcls	0x005001f3
	...
    1b50:	10000ac0 	andne	r0, r0, r0, asr #21
    1b54:	10000b4f 	andne	r0, r0, pc, asr #22
    1b58:	4f510001 	svcmi	0x00510001
    1b5c:	5410000b 	ldrpl	r0, [r0], #-11
    1b60:	0410000b 	ldreq	r0, [r0], #-11
    1b64:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1b68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1b74:	000ac000 	andeq	ip, sl, r0
    1b78:	000b4f10 	andeq	r4, fp, r0, lsl pc
    1b7c:	52000110 	andpl	r0, r0, #16, 2
    1b80:	10000b4f 	andne	r0, r0, pc, asr #22
    1b84:	10000b54 	andne	r0, r0, r4, asr fp
    1b88:	01f30004 	mvnseq	r0, r4
    1b8c:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    1b98:	0ac00000 	beq	ff001ba0 <__RAM_segment_used_end__+0xc6f01ba0>
    1b9c:	0b4f1000 	bleq	13c5ba4 <__RAM_SIZE+0x12c5ba4>
    1ba0:	00011000 	andeq	r1, r1, r0
    1ba4:	000b4f53 	andeq	r4, fp, r3, asr pc
    1ba8:	000b5410 	andeq	r5, fp, r0, lsl r4
    1bac:	f3000410 	vqshl.u8	d0, d0, d0
    1bb0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    1bc4:	000ac000 	andeq	ip, sl, r0
    1bc8:	000ade10 	andeq	sp, sl, r0, lsl lr
    1bcc:	91000210 	tstls	r0, r0, lsl r2
    1bd0:	000ade00 	andeq	sp, sl, r0, lsl #28
    1bd4:	000af810 	andeq	pc, sl, r0, lsl r8	; <UNPREDICTABLE>
    1bd8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1bdc:	10000af8 	strdne	r0, [r0], -r8
    1be0:	10000b04 	andne	r0, r0, r4, lsl #22
    1be4:	045c0001 	ldrbeq	r0, [ip], #-1
    1be8:	3210000b 	andscc	r0, r0, #11
    1bec:	0110000b 	tsteq	r0, fp
    1bf0:	0b325400 	bleq	c96bf8 <__RAM_SIZE+0xb96bf8>
    1bf4:	0b341000 	bleq	d05bfc <__RAM_SIZE+0xc05bfc>
    1bf8:	00021000 	andeq	r1, r2, r0
    1bfc:	00000091 	muleq	r0, r1, r0
	...
    1c08:	0ac00000 	beq	ff001c10 <__RAM_segment_used_end__+0xc6f01c10>
    1c0c:	0ad01000 	beq	ff405c14 <__RAM_segment_used_end__+0xc7305c14>
    1c10:	00021000 	andeq	r1, r2, r0
    1c14:	0ad01491 	beq	ff406e60 <__RAM_segment_used_end__+0xc7306e60>
    1c18:	0b541000 	bleq	1505c20 <__RAM_SIZE+0x1405c20>
    1c1c:	00011000 	andeq	r1, r1, r0
    1c20:	00000056 	andeq	r0, r0, r6, asr r0
    1c24:	00000000 	andeq	r0, r0, r0
    1c28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1c34:	000aca00 	andeq	ip, sl, r0, lsl #20
    1c38:	000ade10 	andeq	sp, sl, r0, lsl lr
    1c3c:	30000210 	andcc	r0, r0, r0, lsl r2
    1c40:	000ade9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
    1c44:	000aea10 	andeq	lr, sl, r0, lsl sl
    1c48:	5e000110 	fltpls	f0, r0
    1c4c:	10000aea 	andne	r0, r0, sl, ror #21
    1c50:	10000b04 	andne	r0, r0, r4, lsl #22
    1c54:	04570001 	ldrbeq	r0, [r7], #-1
    1c58:	3210000b 	andscc	r0, r0, #11
    1c5c:	0110000b 	tsteq	r0, fp
    1c60:	0b325e00 	bleq	c99468 <__RAM_SIZE+0xb99468>
    1c64:	0b341000 	bleq	d05c6c <__RAM_SIZE+0xc05c6c>
    1c68:	00021000 	andeq	r1, r2, r0
    1c6c:	0b349f30 	bleq	d29934 <__RAM_SIZE+0xc29934>
    1c70:	0b541000 	bleq	1505c78 <__RAM_SIZE+0x1405c78>
    1c74:	00011000 	andeq	r1, r1, r0
    1c78:	00000057 	andeq	r0, r0, r7, asr r0
	...
    1c8c:	000ade00 	andeq	sp, sl, r0, lsl #28
    1c90:	000ae210 	andeq	lr, sl, r0, lsl r2
    1c94:	5c000110 	stfpls	f0, [r0], {16}
    1c98:	10000ae2 	andne	r0, r0, r2, ror #21
    1c9c:	10000ae6 	andne	r0, r0, r6, ror #21
    1ca0:	507c0003 	rsbspl	r0, ip, r3
    1ca4:	000ae69f 	muleq	sl, pc, r6	; <UNPREDICTABLE>
    1ca8:	000b0410 	andeq	r0, fp, r0, lsl r4
    1cac:	74001210 	strvc	r1, [r0], #-528	; 0xfffffdf0
    1cb0:	f7007400 			; <UNDEFINED> instruction: 0xf7007400
    1cb4:	f7007530 			; <UNDEFINED> instruction: 0xf7007530
    1cb8:	00f71b30 	rscseq	r1, r7, r0, lsr fp
    1cbc:	1c1e0075 	ldcne	0, cr0, [lr], {117}	; 0x75
    1cc0:	000b109f 	muleq	fp, pc, r0	; <UNPREDICTABLE>
    1cc4:	000b2010 	andeq	r2, fp, r0, lsl r0
    1cc8:	5c000110 	stfpls	f0, [r0], {16}
    1ccc:	10000b20 	andne	r0, r0, r0, lsr #22
    1cd0:	10000b2e 	andne	r0, r0, lr, lsr #22
    1cd4:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1cd8:	30f70074 	rscscc	r0, r7, r4, ror r0
    1cdc:	30f70075 	rscscc	r0, r7, r5, ror r0
    1ce0:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1ce4:	9f1c1e00 	svcls	0x001c1e00
    1ce8:	10000b2e 	andne	r0, r0, lr, lsr #22
    1cec:	10000b32 	andne	r0, r0, r2, lsr fp
    1cf0:	005c0001 	subseq	r0, ip, r1
    1cf4:	00000000 	andeq	r0, r0, r0
    1cf8:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1cfc:	8c100009 	ldchi	0, cr0, [r0], {9}
    1d00:	02100009 	andseq	r0, r0, #9
    1d04:	8c007d00 	stchi	13, cr7, [r0], {-0}
    1d08:	8e100009 	cdphi	0, 1, cr0, cr0, cr9, {0}
    1d0c:	02100009 	andseq	r0, r0, #9
    1d10:	8e1c7d00 	cdphi	13, 1, cr7, cr12, cr0, {0}
    1d14:	44100009 	ldrmi	r0, [r0], #-9
    1d18:	0210000a 	andseq	r0, r0, #10
    1d1c:	44307d00 	ldrtmi	r7, [r0], #-3328	; 0xfffff300
    1d20:	4810000a 	ldmdami	r0, {r1, r3}
    1d24:	0210000a 	andseq	r0, r0, #10
    1d28:	481c7d00 	ldmdami	ip, {r8, sl, fp, ip, sp, lr}
    1d2c:	c010000a 	andsgt	r0, r0, sl
    1d30:	0210000a 	andseq	r0, r0, #10
    1d34:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    1d44:	00098800 	andeq	r8, r9, r0, lsl #16
    1d48:	000a4110 	andeq	r4, sl, r0, lsl r1
    1d4c:	50000110 	andpl	r0, r0, r0, lsl r1
    1d50:	10000a41 	andne	r0, r0, r1, asr #20
    1d54:	10000a48 	andne	r0, r0, r8, asr #20
    1d58:	01f30004 	mvnseq	r0, r4
    1d5c:	0a489f50 	beq	1229aa4 <__RAM_SIZE+0x1129aa4>
    1d60:	0ac01000 	beq	ff005d68 <__RAM_segment_used_end__+0xc6f05d68>
    1d64:	00011000 	andeq	r1, r1, r0
    1d68:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1d74:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1d78:	41100009 	tstmi	r0, r9
    1d7c:	0110000a 	tsteq	r0, sl
    1d80:	0a415100 	beq	1056188 <__RAM_SIZE+0xf56188>
    1d84:	0a481000 	beq	1205d8c <__RAM_SIZE+0x1105d8c>
    1d88:	00041000 	andeq	r1, r4, r0
    1d8c:	9f5101f3 	svcls	0x005101f3
    1d90:	10000a48 	andne	r0, r0, r8, asr #20
    1d94:	10000ac0 	andne	r0, r0, r0, asr #21
    1d98:	00510001 	subseq	r0, r1, r1
	...
    1da8:	00098800 	andeq	r8, r9, r0, lsl #16
    1dac:	000a4110 	andeq	r4, sl, r0, lsl r1
    1db0:	52000110 	andpl	r0, r0, #16, 2
    1db4:	10000a41 	andne	r0, r0, r1, asr #20
    1db8:	10000a48 	andne	r0, r0, r8, asr #20
    1dbc:	01f30004 	mvnseq	r0, r4
    1dc0:	0a489f52 	beq	1229b10 <__RAM_SIZE+0x1129b10>
    1dc4:	0ac01000 	beq	ff005dcc <__RAM_segment_used_end__+0xc6f05dcc>
    1dc8:	00011000 	andeq	r1, r1, r0
    1dcc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    1dd8:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1ddc:	41100009 	tstmi	r0, r9
    1de0:	0110000a 	tsteq	r0, sl
    1de4:	0a415300 	beq	10569ec <__RAM_SIZE+0xf569ec>
    1de8:	0a481000 	beq	1205df0 <__RAM_SIZE+0x1105df0>
    1dec:	00041000 	andeq	r1, r4, r0
    1df0:	9f5301f3 	svcls	0x005301f3
    1df4:	10000a48 	andne	r0, r0, r8, asr #20
    1df8:	10000ac0 	andne	r0, r0, r0, asr #21
    1dfc:	00530001 	subseq	r0, r3, r1
	...
    1e08:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1e0c:	48100009 	ldmdami	r0, {r0, r3}
    1e10:	0210000a 	andseq	r0, r0, #10
    1e14:	48009100 	stmdami	r0, {r8, ip, pc}
    1e18:	c010000a 	andsgt	r0, r0, sl
    1e1c:	0210000a 	andseq	r0, r0, #10
    1e20:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1e2c:	01010000 	mrseq	r0, (UNDEF: 1)
    1e30:	01010000 	mrseq	r0, (UNDEF: 1)
    1e34:	01010000 	mrseq	r0, (UNDEF: 1)
    1e38:	01010000 	mrseq	r0, (UNDEF: 1)
    1e3c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1e48:	00000101 	andeq	r0, r0, r1, lsl #2
    1e4c:	00000101 	andeq	r0, r0, r1, lsl #2
    1e50:	00000101 	andeq	r0, r0, r1, lsl #2
    1e54:	00000101 	andeq	r0, r0, r1, lsl #2
    1e58:	00000101 	andeq	r0, r0, r1, lsl #2
    1e5c:	00098800 	andeq	r8, r9, r0, lsl #16
    1e60:	0009c010 	andeq	ip, r9, r0, lsl r0
    1e64:	91000210 	tstls	r0, r0, lsl r2
    1e68:	0009c004 	andeq	ip, r9, r4
    1e6c:	0009c010 	andeq	ip, r9, r0, lsl r0
    1e70:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1e74:	100009c0 	andne	r0, r0, r0, asr #19
    1e78:	100009ca 	andne	r0, r0, sl, asr #19
    1e7c:	01740003 	cmneq	r4, r3
    1e80:	0009ca9f 	muleq	r9, pc, sl	; <UNPREDICTABLE>
    1e84:	0009e010 	andeq	lr, r9, r0, lsl r0
    1e88:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1e8c:	100009e0 	andne	r0, r0, r0, ror #19
    1e90:	100009ea 	andne	r0, r0, sl, ror #19
    1e94:	01740003 	cmneq	r4, r3
    1e98:	0009ea9f 	muleq	r9, pc, sl	; <UNPREDICTABLE>
    1e9c:	000a1810 	andeq	r1, sl, r0, lsl r8
    1ea0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ea4:	10000a18 	andne	r0, r0, r8, lsl sl
    1ea8:	10000a22 	andne	r0, r0, r2, lsr #20
    1eac:	01740003 	cmneq	r4, r3
    1eb0:	000a229f 	muleq	sl, pc, r2	; <UNPREDICTABLE>
    1eb4:	000a2c10 	andeq	r2, sl, r0, lsl ip
    1eb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ebc:	10000a2c 	andne	r0, r0, ip, lsr #20
    1ec0:	10000a36 	andne	r0, r0, r6, lsr sl
    1ec4:	01740003 	cmneq	r4, r3
    1ec8:	000a369f 	muleq	sl, pc, r6	; <UNPREDICTABLE>
    1ecc:	000a4810 	andeq	r4, sl, r0, lsl r8
    1ed0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ed4:	10000a48 	andne	r0, r0, r8, asr #20
    1ed8:	10000a4c 	andne	r0, r0, ip, asr #20
    1edc:	7f740003 	svcvc	0x00740003
    1ee0:	000a4c9f 	muleq	sl, pc, ip	; <UNPREDICTABLE>
    1ee4:	000a5a10 	andeq	r5, sl, r0, lsl sl
    1ee8:	5c000110 	stfpls	f0, [r0], {16}
    1eec:	10000a5a 	andne	r0, r0, sl, asr sl
    1ef0:	10000a5c 	andne	r0, r0, ip, asr sl
    1ef4:	5c540001 	mrrcpl	0, 0, r0, r4, cr1
    1ef8:	6010000a 	andsvs	r0, r0, sl
    1efc:	0110000a 	tsteq	r0, sl
    1f00:	0a605c00 	beq	1818f08 <__RAM_SIZE+0x1718f08>
    1f04:	0a6a1000 	beq	1a85f0c <__RAM_SIZE+0x1985f0c>
    1f08:	00011000 	andeq	r1, r1, r0
    1f0c:	000a6a54 	andeq	r6, sl, r4, asr sl
    1f10:	000a7410 	andeq	r7, sl, r0, lsl r4
    1f14:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f18:	0a749f01 	beq	1d29b24 <__RAM_SIZE+0x1c29b24>
    1f1c:	0a801000 	beq	fe005f24 <__RAM_segment_used_end__+0xc5f05f24>
    1f20:	00011000 	andeq	r1, r1, r0
    1f24:	000a8054 	andeq	r8, sl, r4, asr r0
    1f28:	000a8a10 	andeq	r8, sl, r0, lsl sl
    1f2c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f30:	0a8a9f01 	beq	fe2a9b3c <__RAM_segment_used_end__+0xc61a9b3c>
    1f34:	0a901000 	beq	fe405f3c <__RAM_segment_used_end__+0xc6305f3c>
    1f38:	00011000 	andeq	r1, r1, r0
    1f3c:	000a9054 	andeq	r9, sl, r4, asr r0
    1f40:	000a9a10 	andeq	r9, sl, r0, lsl sl
    1f44:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f48:	0a9a9f01 	beq	fe6a9b54 <__RAM_segment_used_end__+0xc65a9b54>
    1f4c:	0aa21000 	beq	fe885f54 <__RAM_segment_used_end__+0xc6785f54>
    1f50:	00011000 	andeq	r1, r1, r0
    1f54:	000aa254 	andeq	sl, sl, r4, asr r2
    1f58:	000aac10 	andeq	sl, sl, r0, lsl ip
    1f5c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f60:	0aac9f01 	beq	feb29b6c <__RAM_segment_used_end__+0xc6a29b6c>
    1f64:	0ab41000 	beq	fed05f6c <__RAM_segment_used_end__+0xc6c05f6c>
    1f68:	00011000 	andeq	r1, r1, r0
    1f6c:	000ab454 	andeq	fp, sl, r4, asr r4
    1f70:	000abe10 	andeq	fp, sl, r0, lsl lr
    1f74:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f78:	0abe9f01 	beq	fefa9b84 <__RAM_segment_used_end__+0xc6ea9b84>
    1f7c:	0ac01000 	beq	ff005f84 <__RAM_segment_used_end__+0xc6f05f84>
    1f80:	00011000 	andeq	r1, r1, r0
    1f84:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1f90:	00098800 	andeq	r8, r9, r0, lsl #16
    1f94:	000a4810 	andeq	r4, sl, r0, lsl r8
    1f98:	91000210 	tstls	r0, r0, lsl r2
    1f9c:	000a4808 	andeq	r4, sl, r8, lsl #16
    1fa0:	000ac010 	andeq	ip, sl, r0, lsl r0
    1fa4:	91000210 	tstls	r0, r0, lsl r2
    1fa8:	00000008 	andeq	r0, r0, r8
	...
    1fb4:	00098800 	andeq	r8, r9, r0, lsl #16
    1fb8:	000a4810 	andeq	r4, sl, r0, lsl r8
    1fbc:	91000210 	tstls	r0, r0, lsl r2
    1fc0:	000a480c 	andeq	r4, sl, ip, lsl #16
    1fc4:	000ac010 	andeq	ip, sl, r0, lsl r0
    1fc8:	91000210 	tstls	r0, r0, lsl r2
    1fcc:	0000000c 	andeq	r0, r0, ip
	...
    1fd8:	00098800 	andeq	r8, r9, r0, lsl #16
    1fdc:	000a4810 	andeq	r4, sl, r0, lsl r8
    1fe0:	91000210 	tstls	r0, r0, lsl r2
    1fe4:	000a4810 	andeq	r4, sl, r0, lsl r8
    1fe8:	000ac010 	andeq	ip, sl, r0, lsl r0
    1fec:	91000210 	tstls	r0, r0, lsl r2
    1ff0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    1ffc:	00098800 	andeq	r8, r9, r0, lsl #16
    2000:	0009be10 	andeq	fp, r9, r0, lsl lr
    2004:	91000210 	tstls	r0, r0, lsl r2
    2008:	0009be14 	andeq	fp, r9, r4, lsl lr
    200c:	000ac010 	andeq	ip, sl, r0, lsl r0
    2010:	57000110 	smladpl	r0, r0, r1, r0
	...
    2020:	10000988 	andne	r0, r0, r8, lsl #19
    2024:	10000a48 	andne	r0, r0, r8, asr #20
    2028:	18910002 	ldmne	r1, {r1}
    202c:	10000a48 	andne	r0, r0, r8, asr #20
    2030:	10000ac0 	andne	r0, r0, r0, asr #21
    2034:	18910002 	ldmne	r1, {r1}
	...
    2040:	1000090a 	andne	r0, r0, sl, lsl #18
    2044:	1000090e 	andne	r0, r0, lr, lsl #18
    2048:	007d0002 	rsbseq	r0, sp, r2
    204c:	1000090e 	andne	r0, r0, lr, lsl #18
    2050:	10000910 	andne	r0, r0, r0, lsl r9
    2054:	247d0002 	ldrbtcs	r0, [sp], #-2
    2058:	10000910 	andne	r0, r0, r0, lsl r9
    205c:	1000096e 	andne	r0, r0, lr, ror #18
    2060:	307d0002 	rsbscc	r0, sp, r2
    2064:	1000096e 	andne	r0, r0, lr, ror #18
    2068:	10000972 	andne	r0, r0, r2, ror r9
    206c:	247d0002 	ldrbtcs	r0, [sp], #-2
    2070:	10000972 	andne	r0, r0, r2, ror r9
    2074:	10000988 	andne	r0, r0, r8, lsl #19
    2078:	307d0002 	rsbscc	r0, sp, r2
	...
    2088:	1000090a 	andne	r0, r0, sl, lsl #18
    208c:	1000092e 	andne	r0, r0, lr, lsr #18
    2090:	2e500001 	cdpcs	0, 5, cr0, cr0, cr1, {0}
    2094:	88100009 	ldmdahi	r0, {r0, r3}
    2098:	01100009 	tsteq	r0, r9
    209c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    20a8:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    20ac:	092e1000 	stmdbeq	lr!, {ip}
    20b0:	00011000 	andeq	r1, r1, r0
    20b4:	00092e51 	andeq	r2, r9, r1, asr lr
    20b8:	00098810 	andeq	r8, r9, r0, lsl r8
    20bc:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    20d4:	1000090a 	andne	r0, r0, sl, lsl #18
    20d8:	10000936 	andne	r0, r0, r6, lsr r9
    20dc:	36520001 	ldrbcc	r0, [r2], -r1
    20e0:	46100009 	ldrmi	r0, [r0], -r9
    20e4:	01100009 	tsteq	r0, r9
    20e8:	09465b00 	stmdbeq	r6, {r8, r9, fp, ip, lr}^
    20ec:	09521000 	ldmdbeq	r2, {ip}^
    20f0:	00011000 	andeq	r1, r1, r0
    20f4:	00095252 	andeq	r5, r9, r2, asr r2
    20f8:	00095e10 	andeq	r5, r9, r0, lsl lr
    20fc:	58000110 	stmdapl	r0, {r4, r8}
    2100:	1000095e 	andne	r0, r0, lr, asr r9
    2104:	1000097c 	andne	r0, r0, ip, ror r9
    2108:	7c520001 	mrrcvc	0, 0, r0, r2, cr1
    210c:	88100009 	ldmdahi	r0, {r0, r3}
    2110:	01100009 	tsteq	r0, r9
    2114:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2120:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    2124:	09241000 	stmdbeq	r4!, {ip}
    2128:	00011000 	andeq	r1, r1, r0
    212c:	00092453 	andeq	r2, r9, r3, asr r4
    2130:	00098810 	andeq	r8, r9, r0, lsl r8
    2134:	57000110 	smladpl	r0, r0, r1, r0
	...
    2144:	1000090a 	andne	r0, r0, sl, lsl #18
    2148:	10000972 	andne	r0, r0, r2, ror r9
    214c:	00910002 	addseq	r0, r1, r2
    2150:	10000972 	andne	r0, r0, r2, ror r9
    2154:	10000988 	andne	r0, r0, r8, lsl #19
    2158:	00910002 	addseq	r0, r1, r2
	...
    2168:	1000090a 	andne	r0, r0, sl, lsl #18
    216c:	1000094c 	andne	r0, r0, ip, asr #18
    2170:	04910002 	ldreq	r0, [r1], #2
    2174:	1000094c 	andne	r0, r0, ip, asr #18
    2178:	1000096a 	andne	r0, r0, sl, ror #18
    217c:	00540001 	subseq	r0, r4, r1
	...
    2188:	0a000000 	beq	2190 <_Min_Stack_Size+0x1190>
    218c:	72100009 	andsvc	r0, r0, #9
    2190:	02100009 	andseq	r0, r0, #9
    2194:	72089100 	andvc	r9, r8, #0, 2
    2198:	88100009 	ldmdahi	r0, {r0, r3}
    219c:	02100009 	andseq	r0, r0, #9
    21a0:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    21ac:	0a000000 	beq	21b4 <_Min_Stack_Size+0x11b4>
    21b0:	72100009 	andsvc	r0, r0, #9
    21b4:	02100009 	andseq	r0, r0, #9
    21b8:	720c9100 	andvc	r9, ip, #0, 2
    21bc:	88100009 	ldmdahi	r0, {r0, r3}
    21c0:	02100009 	andseq	r0, r0, #9
    21c4:	000c9100 	andeq	r9, ip, r0, lsl #2
    21c8:	00000000 	andeq	r0, r0, r0
    21cc:	01000000 	mrseq	r0, (UNDEF: 0)
    21d0:	00000000 	andeq	r0, r0, r0
    21d4:	00092200 	andeq	r2, r9, r0, lsl #4
    21d8:	00092e10 	andeq	r2, r9, r0, lsl lr
    21dc:	52000110 	andpl	r0, r0, #16, 2
    21e0:	1000092e 	andne	r0, r0, lr, lsr #18
    21e4:	1000094c 	andne	r0, r0, ip, asr #18
    21e8:	54910002 	ldrpl	r0, [r1], #2
    21ec:	1000094c 	andne	r0, r0, ip, asr #18
    21f0:	10000988 	andne	r0, r0, r8, lsl #19
    21f4:	01f30004 	mvnseq	r0, r4
    21f8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2204:	1000092e 	andne	r0, r0, lr, lsr #18
    2208:	1000094c 	andne	r0, r0, ip, asr #18
    220c:	00580001 	subseq	r0, r8, r1
	...
    2218:	e6000000 	str	r0, [r0], -r0
    221c:	ea100008 	b	402244 <__RAM_SIZE+0x302244>
    2220:	01100008 	tsteq	r0, r8
    2224:	08ea5000 	stmiaeq	sl!, {ip, lr}^
    2228:	090a1000 	stmdbeq	sl, {ip}
    222c:	00011000 	andeq	r1, r1, r0
    2230:	00000051 	andeq	r0, r0, r1, asr r0
    2234:	00000000 	andeq	r0, r0, r0
    2238:	00000100 	andeq	r0, r0, r0, lsl #2
    223c:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    2240:	ec100008 	ldc	0, cr0, [r0], {8}
    2244:	02100008 	andseq	r0, r0, #8
    2248:	ec9f3000 	ldc	0, cr3, [pc], {0}
    224c:	f0100008 			; <UNDEFINED> instruction: 0xf0100008
    2250:	01100008 	tsteq	r0, r8
    2254:	08fc5000 	ldmeq	ip!, {ip, lr}^
    2258:	090a1000 	stmdbeq	sl, {ip}
    225c:	00011000 	andeq	r1, r1, r0
    2260:	00000050 	andeq	r0, r0, r0, asr r0
	...
    226c:	00090000 	andeq	r0, r9, r0
    2270:	00090210 	andeq	r0, r9, r0, lsl r2
    2274:	53000110 	movwpl	r0, #272	; 0x110
    2278:	10000902 	andne	r0, r0, r2, lsl #18
    227c:	10000904 	andne	r0, r0, r4, lsl #18
    2280:	30730003 	rsbscc	r0, r3, r3
    2284:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2294:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    22a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    22a4:	00000008 	andeq	r0, r0, r8
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    22c4:	01000000 	mrseq	r0, (UNDEF: 0)
    22c8:	00005000 	andeq	r5, r0, r0
    22cc:	00000000 	andeq	r0, r0, r0
    22d0:	00040000 	andeq	r0, r4, r0
    22d4:	9f5001f3 	svcls	0x005001f3
	...
    22e0:	00500001 	subseq	r0, r0, r1
	...
    22f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2304:	01f30004 	mvnseq	r0, r4
    2308:	00009f51 	andeq	r9, r0, r1, asr pc
    230c:	00000000 	andeq	r0, r0, r0
    2310:	00010000 	andeq	r0, r1, r0
    2314:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2328:	01000000 	mrseq	r0, (UNDEF: 0)
    232c:	00005200 	andeq	r5, r0, r0, lsl #4
    2330:	00000000 	andeq	r0, r0, r0
    2334:	00040000 	andeq	r0, r4, r0
    2338:	9f5201f3 	svcls	0x005201f3
	...
    2344:	00520001 	subseq	r0, r2, r1
	...
    235c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2368:	01f30004 	mvnseq	r0, r4
    236c:	00009f53 	andeq	r9, r0, r3, asr pc
    2370:	00000000 	andeq	r0, r0, r0
    2374:	00010000 	andeq	r0, r1, r0
    2378:	00000053 	andeq	r0, r0, r3, asr r0
    237c:	00000000 	andeq	r0, r0, r0
    2380:	001a2800 	andseq	r2, sl, r0, lsl #16
    2384:	001a2e10 	andseq	r2, sl, r0, lsl lr
    2388:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    238c:	001a2e00 	andseq	r2, sl, r0, lsl #28
    2390:	001a3410 	andseq	r3, sl, r0, lsl r4
    2394:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2398:	00000008 	andeq	r0, r0, r8
	...
    23a4:	001a2800 	andseq	r2, sl, r0, lsl #16
    23a8:	001a3110 	andseq	r3, sl, r0, lsl r1
    23ac:	50000110 	andpl	r0, r0, r0, lsl r1
    23b0:	10001a31 	andne	r1, r0, r1, lsr sl
    23b4:	10001a34 	andne	r1, r0, r4, lsr sl
    23b8:	01f30004 	mvnseq	r0, r4
    23bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    23c8:	1a280000 	bne	a023d0 <__RAM_SIZE+0x9023d0>
    23cc:	1a311000 	bne	c463d4 <__RAM_SIZE+0xb463d4>
    23d0:	00011000 	andeq	r1, r1, r0
    23d4:	001a3151 	andseq	r3, sl, r1, asr r1
    23d8:	001a3410 	andseq	r3, sl, r0, lsl r4
    23dc:	f3000410 	vqshl.u8	d0, d0, d0
    23e0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    23ec:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    23f0:	3110001a 	tstcc	r0, sl, lsl r0
    23f4:	0110001a 	tsteq	r0, sl, lsl r0
    23f8:	1a315200 	bne	c56c00 <__RAM_SIZE+0xb56c00>
    23fc:	1a341000 	bne	d06404 <__RAM_SIZE+0xc06404>
    2400:	00041000 	andeq	r1, r4, r0
    2404:	9f5201f3 	svcls	0x005201f3
	...
    2414:	10001a28 	andne	r1, r0, r8, lsr #20
    2418:	10001a31 	andne	r1, r0, r1, lsr sl
    241c:	31530001 	cmpcc	r3, r1
    2420:	3410001a 	ldrcc	r0, [r0], #-26	; 0xffffffe6
    2424:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    2428:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    242c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    243c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2448:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    244c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2460:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    246c:	00560001 	subseq	r0, r6, r1
	...
    2480:	01000000 	mrseq	r0, (UNDEF: 0)
    2484:	00005100 	andeq	r5, r0, r0, lsl #2
    2488:	00000000 	andeq	r0, r0, r0
    248c:	00010000 	andeq	r0, r1, r0
    2490:	00000055 	andeq	r0, r0, r5, asr r0
    2494:	00000000 	andeq	r0, r0, r0
    2498:	00000100 	andeq	r0, r0, r0, lsl #2
    249c:	00000001 	andeq	r0, r0, r1
    24a0:	00000000 	andeq	r0, r0, r0
    24a4:	02000000 	andeq	r0, r0, #0
    24a8:	009f3000 	addseq	r3, pc, r0
    24ac:	00000000 	andeq	r0, r0, r0
    24b0:	01000000 	mrseq	r0, (UNDEF: 0)
    24b4:	00005000 	andeq	r5, r0, r0
    24b8:	00000000 	andeq	r0, r0, r0
    24bc:	00010000 	andeq	r0, r1, r0
    24c0:	00000050 	andeq	r0, r0, r0, asr r0
    24c4:	00000000 	andeq	r0, r0, r0
    24c8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    24d4:	30000200 	andcc	r0, r0, r0, lsl #4
    24d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24dc:	00000000 	andeq	r0, r0, r0
    24e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    24f4:	007d0002 	rsbseq	r0, sp, r2
	...
    2500:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2518:	00500001 	subseq	r0, r0, r1
    251c:	00000000 	andeq	r0, r0, r0
    2520:	04000000 	streq	r0, [r0], #-0
    2524:	5001f300 	andpl	pc, r1, r0, lsl #6
    2528:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    252c:	00000000 	andeq	r0, r0, r0
    2530:	001a7400 	andseq	r7, sl, r0, lsl #8
    2534:	001a7610 	andseq	r7, sl, r0, lsl r6
    2538:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    253c:	001a7600 	andseq	r7, sl, r0, lsl #12
    2540:	001a9210 	andseq	r9, sl, r0, lsl r2
    2544:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2548:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2554:	001a7400 	andseq	r7, sl, r0, lsl #8
    2558:	001a7c10 	andseq	r7, sl, r0, lsl ip
    255c:	50000110 	andpl	r0, r0, r0, lsl r1
    2560:	10001a7c 	andne	r1, r0, ip, ror sl
    2564:	10001a92 	mulne	r0, r2, sl
    2568:	00550001 	subseq	r0, r5, r1
    256c:	00000000 	andeq	r0, r0, r0
    2570:	01000000 	mrseq	r0, (UNDEF: 0)
    2574:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    2578:	7c10001a 	ldcvc	0, cr0, [r0], {26}
    257c:	0210001a 	andseq	r0, r0, #26
    2580:	7c9f3000 	ldcvc	0, cr3, [pc], {0}
    2584:	9210001a 	andsls	r0, r0, #26
    2588:	0110001a 	tsteq	r0, sl, lsl r0
    258c:	00005400 	andeq	r5, r0, r0, lsl #8
    2590:	00000000 	andeq	r0, r0, r0
    2594:	00010000 	andeq	r0, r1, r0
    2598:	10001a60 	andne	r1, r0, r0, ror #20
    259c:	10001a74 	andne	r1, r0, r4, ror sl
    25a0:	00500001 	subseq	r0, r0, r1
    25a4:	00000000 	andeq	r0, r0, r0
    25a8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    25ac:	ba10001a 	blt	40261c <__RAM_SIZE+0x30261c>
    25b0:	0210001a 	andseq	r0, r0, #26
    25b4:	ba007d00 	blt	219bc <_Min_Stack_Size+0x209bc>
    25b8:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    25bc:	0210001b 	andseq	r0, r0, #27
    25c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    25d4:	001ab800 	andseq	fp, sl, r0, lsl #16
    25d8:	001aca10 	andseq	ip, sl, r0, lsl sl
    25dc:	50000110 	andpl	r0, r0, r0, lsl r1
    25e0:	10001aca 	andne	r1, r0, sl, asr #21
    25e4:	10001ae5 	andne	r1, r0, r5, ror #21
    25e8:	e5530001 	ldrb	r0, [r3, #-1]
    25ec:	ee10001a 	mrc	0, 0, r0, cr0, cr10, {0}
    25f0:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    25f4:	5001f300 	andpl	pc, r1, r0, lsl #6
    25f8:	001aee9f 	mulseq	sl, pc, lr	; <UNPREDICTABLE>
    25fc:	001b0410 	andseq	r0, fp, r0, lsl r4
    2600:	53000110 	movwpl	r0, #272	; 0x110
    2604:	10001b04 	andne	r1, r0, r4, lsl #22
    2608:	10001b0e 	andne	r1, r0, lr, lsl #22
    260c:	04710003 	ldrbteq	r0, [r1], #-3
    2610:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2614:	00000000 	andeq	r0, r0, r0
    2618:	c2000100 	andgt	r0, r0, #0, 2
    261c:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    2620:	0110001b 	tsteq	r0, fp, lsl r0
    2624:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2634:	10001ac8 	andne	r1, r0, r8, asr #21
    2638:	10001ad6 	ldrdne	r1, [r0], -r6
    263c:	ee520001 	cdp	0, 5, cr0, cr2, cr1, {0}
    2640:	f410001a 			; <UNDEFINED> instruction: 0xf410001a
    2644:	0110001a 	tsteq	r0, sl, lsl r0
    2648:	1afa5200 	bne	ffe96e50 <__RAM_segment_used_end__+0xc7d96e50>
    264c:	1b0e1000 	blne	386654 <__RAM_SIZE+0x286654>
    2650:	00011000 	andeq	r1, r1, r0
    2654:	00000052 	andeq	r0, r0, r2, asr r0
	...
    2660:	ca000000 	bgt	2668 <_Min_Stack_Size+0x1668>
    2664:	e510001a 	ldr	r0, [r0, #-26]	; 0xffffffe6
    2668:	0110001a 	tsteq	r0, sl, lsl r0
    266c:	1aee5000 	bne	ffb96674 <__RAM_segment_used_end__+0xc7a96674>
    2670:	1afc1000 	bne	fff06678 <__RAM_segment_used_end__+0xc7e06678>
    2674:	00011000 	andeq	r1, r1, r0
    2678:	001afc50 	andseq	pc, sl, r0, asr ip	; <UNPREDICTABLE>
    267c:	001b0010 	andseq	r0, fp, r0, lsl r0
    2680:	72000210 	andvc	r0, r0, #16, 4
    2684:	00000020 	andeq	r0, r0, r0, lsr #32
    2688:	00000000 	andeq	r0, r0, r0
    268c:	00000300 	andeq	r0, r0, r0, lsl #6
    2690:	01010000 	mrseq	r0, (UNDEF: 1)
    2694:	00000000 	andeq	r0, r0, r0
    2698:	c2000000 	andgt	r0, r0, #0
    269c:	c410001a 	ldrgt	r0, [r0], #-26	; 0xffffffe6
    26a0:	0110001a 	tsteq	r0, sl, lsl r0
    26a4:	1ac45000 	bne	ff1166ac <__RAM_segment_used_end__+0xc70166ac>
    26a8:	1ace1000 	bne	ff3866b0 <__RAM_segment_used_end__+0xc72866b0>
    26ac:	00011000 	andeq	r1, r1, r0
    26b0:	001ace51 	andseq	ip, sl, r1, asr lr
    26b4:	001adc10 	andseq	sp, sl, r0, lsl ip
    26b8:	73000310 	movwvc	r0, #784	; 0x310
    26bc:	1adc9f7c 	bne	ff72a4b4 <__RAM_segment_used_end__+0xc762a4b4>
    26c0:	1ae51000 	bne	ff9466c8 <__RAM_segment_used_end__+0xc78466c8>
    26c4:	00011000 	andeq	r1, r1, r0
    26c8:	001ae553 	andseq	lr, sl, r3, asr r5
    26cc:	001aea10 	andseq	lr, sl, r0, lsl sl
    26d0:	f3000410 	vqshl.u8	d0, d0, d0
    26d4:	ee9f5001 	cdp	0, 9, cr5, cr15, cr1, {0}
    26d8:	fa10001a 	blx	402748 <__RAM_SIZE+0x302748>
    26dc:	0310001a 	tsteq	r0, #26
    26e0:	9f7c7300 	svcls	0x007c7300
    26e4:	10001afa 	strdne	r1, [r0], -sl
    26e8:	10001b0e 	andne	r1, r0, lr, lsl #22
    26ec:	00510001 	subseq	r0, r1, r1
	...
    26f8:	001adc00 	andseq	sp, sl, r0, lsl #24
    26fc:	001ae510 	andseq	lr, sl, r0, lsl r5
    2700:	51000110 	tstpl	r0, r0, lsl r1
	...
    270c:	00000001 	andeq	r0, r0, r1
    2710:	00000000 	andeq	r0, r0, r0
    2714:	1ac40000 	bne	ff10271c <__RAM_segment_used_end__+0xc700271c>
    2718:	1ace1000 	bne	ff386720 <__RAM_segment_used_end__+0xc7286720>
    271c:	00011000 	andeq	r1, r1, r0
    2720:	001ace51 	andseq	ip, sl, r1, asr lr
    2724:	001ae510 	andseq	lr, sl, r0, lsl r5
    2728:	73000310 	movwvc	r0, #784	; 0x310
    272c:	1ae59f7c 	bne	ff96a524 <__RAM_segment_used_end__+0xc786a524>
    2730:	1aee1000 	bne	ffb86738 <__RAM_segment_used_end__+0xc7a86738>
    2734:	00061000 	andeq	r1, r6, r0
    2738:	345001f3 	ldrbcc	r0, [r0], #-499	; 0xfffffe0d
    273c:	1aee9f1c 	bne	ffbaa3b4 <__RAM_segment_used_end__+0xc7aaa3b4>
    2740:	1afa1000 	bne	ffe86748 <__RAM_segment_used_end__+0xc7d86748>
    2744:	00031000 	andeq	r1, r3, r0
    2748:	fa9f7c73 	blx	fe7e191c <__RAM_segment_used_end__+0xc66e191c>
    274c:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    2750:	0110001b 	tsteq	r0, fp, lsl r0
    2754:	00005100 	andeq	r5, r0, r0, lsl #2
    2758:	00000000 	andeq	r0, r0, r0
    275c:	00010000 	andeq	r0, r1, r0
    2760:	00000000 	andeq	r0, r0, r0
    2764:	10001ad2 	ldrdne	r1, [r0], -r2
    2768:	10001ad6 	ldrdne	r1, [r0], -r6
    276c:	ee510001 	cdp	0, 5, cr0, cr1, cr1, {0}
    2770:	f010001a 			; <UNDEFINED> instruction: 0xf010001a
    2774:	0110001a 	tsteq	r0, sl, lsl r0
    2778:	1af05100 	bne	ffc16b80 <__RAM_segment_used_end__+0xc7b16b80>
    277c:	1af41000 	bne	ffd06784 <__RAM_segment_used_end__+0xc7c06784>
    2780:	00021000 	andeq	r1, r2, r0
    2784:	00002472 	andeq	r2, r0, r2, ror r4
	...
    2790:	10001af0 	strdne	r1, [r0], -r0
    2794:	10001afa 	strdne	r1, [r0], -sl
    2798:	00510001 	subseq	r0, r1, r1
	...
    27a4:	001af400 	andseq	pc, sl, r0, lsl #8
    27a8:	001afa10 	andseq	pc, sl, r0, lsl sl	; <UNPREDICTABLE>
    27ac:	52000110 	andpl	r0, r0, #16, 2
	...
    27b8:	1ac00001 	bne	ff0027c4 <__RAM_segment_used_end__+0xc6f027c4>
    27bc:	1b0e1000 	blne	3867c4 <__RAM_SIZE+0x2867c4>
    27c0:	00011000 	andeq	r1, r1, r0
    27c4:	00000054 	andeq	r0, r0, r4, asr r0
    27c8:	00000000 	andeq	r0, r0, r0
    27cc:	c0010000 	andgt	r0, r1, r0
    27d0:	c010001a 	andsgt	r0, r0, sl, lsl r0
    27d4:	0110001a 	tsteq	r0, sl, lsl r0
    27d8:	00005400 	andeq	r5, r0, r0, lsl #8
    27dc:	00000000 	andeq	r0, r0, r0
    27e0:	00010000 	andeq	r0, r1, r0
    27e4:	10001ae6 	andne	r1, r0, r6, ror #21
    27e8:	10001aea 	andne	r1, r0, sl, ror #21
    27ec:	00540001 	subseq	r0, r4, r1
    27f0:	00000000 	andeq	r0, r0, r0
    27f4:	01000000 	mrseq	r0, (UNDEF: 0)
    27f8:	001b0800 	andseq	r0, fp, r0, lsl #16
    27fc:	001b0e10 	andseq	r0, fp, r0, lsl lr
    2800:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    280c:	10001b10 	andne	r1, r0, r0, lsl fp
    2810:	10001b14 	andne	r1, r0, r4, lsl fp
    2814:	007d0002 	rsbseq	r0, sp, r2
    2818:	10001b14 	andne	r1, r0, r4, lsl fp
    281c:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2820:	207d0002 	rsbscs	r0, sp, r2
	...
    282c:	00010100 	andeq	r0, r1, r0, lsl #2
    2830:	10001b10 	andne	r1, r0, r0, lsl fp
    2834:	10001b2a 	andne	r1, r0, sl, lsr #22
    2838:	2a500001 	bcs	1402844 <__RAM_SIZE+0x1302844>
    283c:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2840:	0110001b 	tsteq	r0, fp, lsl r0
    2844:	00005400 	andeq	r5, r0, r0, lsl #8
    2848:	00000000 	andeq	r0, r0, r0
    284c:	01000000 	mrseq	r0, (UNDEF: 0)
    2850:	1b100001 	blne	40285c <__RAM_SIZE+0x30285c>
    2854:	1b2a1000 	blne	a8685c <__RAM_SIZE+0x98685c>
    2858:	00011000 	andeq	r1, r1, r0
    285c:	001b2a51 	andseq	r2, fp, r1, asr sl
    2860:	001bbc10 	andseq	fp, fp, r0, lsl ip
    2864:	58000110 	stmdapl	r0, {r4, r8}
	...
    2874:	1b100000 	blne	40287c <__RAM_SIZE+0x30287c>
    2878:	1b1c1000 	blne	706880 <__RAM_SIZE+0x606880>
    287c:	00011000 	andeq	r1, r1, r0
    2880:	001b1c52 	andseq	r1, fp, r2, asr ip
    2884:	001b2010 	andseq	r2, fp, r0, lsl r0
    2888:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    288c:	1b209f7d 	blne	82a688 <__RAM_SIZE+0x72a688>
    2890:	1bbc1000 	blne	fef06898 <__RAM_segment_used_end__+0xc6e06898>
    2894:	00011000 	andeq	r1, r1, r0
    2898:	00000057 	andeq	r0, r0, r7, asr r0
	...
    28a4:	001b1000 	andseq	r1, fp, r0
    28a8:	001b2810 	andseq	r2, fp, r0, lsl r8
    28ac:	53000110 	movwpl	r0, #272	; 0x110
    28b0:	10001b28 	andne	r1, r0, r8, lsr #22
    28b4:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    28b8:	00590001 	subseq	r0, r9, r1
    28bc:	00000000 	andeq	r0, r0, r0
    28c0:	01000000 	mrseq	r0, (UNDEF: 0)
    28c4:	26000100 	strcs	r0, [r0], -r0, lsl #2
    28c8:	3c10001b 	ldccc	0, cr0, [r0], {27}
    28cc:	0110001b 	tsteq	r0, fp, lsl r0
    28d0:	1b3e5500 	blne	f97cd8 <__RAM_SIZE+0xe97cd8>
    28d4:	1bbc1000 	blne	fef068dc <__RAM_segment_used_end__+0xc6e068dc>
    28d8:	00011000 	andeq	r1, r1, r0
    28dc:	00000055 	andeq	r0, r0, r5, asr r0
    28e0:	00000000 	andeq	r0, r0, r0
    28e4:	00000200 	andeq	r0, r0, r0, lsl #4
    28e8:	02000100 	andeq	r0, r0, #0, 2
    28ec:	001b5000 	andseq	r5, fp, r0
    28f0:	001b5210 	andseq	r5, fp, r0, lsl r2
    28f4:	30000210 	andcc	r0, r0, r0, lsl r2
    28f8:	001b909f 	mulseq	fp, pc, r0	; <UNPREDICTABLE>
    28fc:	001b9210 	andseq	r9, fp, r0, lsl r2
    2900:	50000110 	andpl	r0, r0, r0, lsl r1
    2904:	10001b92 	mulne	r0, r2, fp
    2908:	10001b9a 	mulne	r0, sl, fp
    290c:	9f400002 	svcls	0x00400002
    2910:	10001bac 	andne	r1, r0, ip, lsr #23
    2914:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2918:	9f400002 	svcls	0x00400002
	...
    2924:	1b2a0000 	blne	a8292c <__RAM_SIZE+0x98292c>
    2928:	1bbc1000 	blne	fef06930 <__RAM_segment_used_end__+0xc6e06930>
    292c:	00011000 	andeq	r1, r1, r0
    2930:	00000056 	andeq	r0, r0, r6, asr r0
	...
    2944:	001b3800 	andseq	r3, fp, r0, lsl #16
    2948:	001b5210 	andseq	r5, fp, r0, lsl r2
    294c:	50000110 	andpl	r0, r0, r0, lsl r1
    2950:	10001b56 	andne	r1, r0, r6, asr fp
    2954:	10001b84 	andne	r1, r0, r4, lsl #23
    2958:	92500001 	subsls	r0, r0, #1
    295c:	9810001b 	ldmdals	r0, {r0, r1, r3, r4}
    2960:	0110001b 	tsteq	r0, fp, lsl r0
    2964:	1b985000 	blne	fe61696c <__RAM_segment_used_end__+0xc651696c>
    2968:	1b9a1000 	blne	fe686970 <__RAM_segment_used_end__+0xc6586970>
    296c:	00021000 	andeq	r1, r2, r0
    2970:	1b9a0078 	blne	fe682b58 <__RAM_segment_used_end__+0xc6582b58>
    2974:	1bae1000 	blne	feb8697c <__RAM_segment_used_end__+0xc6a8697c>
    2978:	00011000 	andeq	r1, r1, r0
    297c:	001bae50 	andseq	sl, fp, r0, asr lr
    2980:	001bbc10 	andseq	fp, fp, r0, lsl ip
    2984:	78000210 	stmdavc	r0, {r4, r9}
	...
    2994:	70000000 	andvc	r0, r0, r0
    2998:	7c10001b 	ldcvc	0, cr0, [r0], {27}
    299c:	0110001b 	tsteq	r0, fp, lsl r0
    29a0:	1b9a5300 	blne	fe6975a8 <__RAM_segment_used_end__+0xc65975a8>
    29a4:	1b9c1000 	blne	fe7069ac <__RAM_segment_used_end__+0xc66069ac>
    29a8:	00011000 	andeq	r1, r1, r0
    29ac:	001b9c53 	andseq	r9, fp, r3, asr ip
    29b0:	001ba010 	andseq	sl, fp, r0, lsl r0
    29b4:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    29b8:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
    29c4:	10001b9c 	mulne	r0, ip, fp
    29c8:	10001ba8 	andne	r1, r0, r8, lsr #23
    29cc:	00530001 	subseq	r0, r3, r1
	...
    29d8:	001ba000 	andseq	sl, fp, r0
    29dc:	001ba810 	andseq	sl, fp, r0, lsl r8
    29e0:	52000110 	andpl	r0, r0, #16, 2
	...
    29ec:	1b2a0001 	blne	a829f8 <__RAM_SIZE+0x9829f8>
    29f0:	1b461000 	blne	11869f8 <__RAM_SIZE+0x10869f8>
    29f4:	00021000 	andeq	r1, r2, r0
    29f8:	00009f30 	andeq	r9, r0, r0, lsr pc
    29fc:	00000000 	andeq	r0, r0, r0
    2a00:	01010000 	mrseq	r0, (UNDEF: 1)
    2a04:	10001b24 	andne	r1, r0, r4, lsr #22
    2a08:	10001b2a 	andne	r1, r0, sl, lsr #22
    2a0c:	00550001 	subseq	r0, r5, r1
	...
    2a18:	001b2401 	andseq	r2, fp, r1, lsl #8
    2a1c:	001b2410 	andseq	r2, fp, r0, lsl r4
    2a20:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2a2c:	1b2c0001 	blne	b02a38 <__RAM_SIZE+0xa02a38>
    2a30:	1b301000 	blne	c06a38 <__RAM_SIZE+0xb06a38>
    2a34:	00011000 	andeq	r1, r1, r0
    2a38:	00000055 	andeq	r0, r0, r5, asr r0
    2a3c:	00000000 	andeq	r0, r0, r0
    2a40:	3c000100 	stfccs	f0, [r0], {-0}
    2a44:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2a48:	0110001b 	tsteq	r0, fp, lsl r0
    2a4c:	00005500 	andeq	r5, r0, r0, lsl #10
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	01000000 	mrseq	r0, (UNDEF: 0)
    2a58:	10001b3c 	andne	r1, r0, ip, lsr fp
    2a5c:	10001b3c 	andne	r1, r0, ip, lsr fp
    2a60:	00550001 	subseq	r0, r5, r1
    2a64:	00000000 	andeq	r0, r0, r0
    2a68:	01000000 	mrseq	r0, (UNDEF: 0)
    2a6c:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2a70:	001b5010 	andseq	r5, fp, r0, lsl r0
    2a74:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2a80:	1b880001 	blne	fe202a8c <__RAM_segment_used_end__+0xc6102a8c>
    2a84:	1b8c1000 	blne	fe306a8c <__RAM_segment_used_end__+0xc6206a8c>
    2a88:	00011000 	andeq	r1, r1, r0
    2a8c:	00000055 	andeq	r0, r0, r5, asr r0
    2a90:	00000000 	andeq	r0, r0, r0
    2a94:	92000200 	andls	r0, r0, #0, 4
    2a98:	9a10001b 	bls	402b0c <__RAM_SIZE+0x302b0c>
    2a9c:	0110001b 	tsteq	r0, fp, lsl r0
    2aa0:	00005500 	andeq	r5, r0, r0, lsl #10
    2aa4:	00000000 	andeq	r0, r0, r0
    2aa8:	00010000 	andeq	r0, r1, r0
    2aac:	10001ba8 	andne	r1, r0, r8, lsr #23
    2ab0:	10001bac 	andne	r1, r0, ip, lsr #23
    2ab4:	00550001 	subseq	r0, r5, r1
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	bc000000 	stclt	0, cr0, [r0], {-0}
    2ac0:	be10001b 	mrclt	0, 0, r0, cr0, cr11, {0}
    2ac4:	0210001b 	andseq	r0, r0, #27
    2ac8:	be007d00 	cdplt	13, 0, cr7, cr0, cr0, {0}
    2acc:	f410001b 			; <UNDEFINED> instruction: 0xf410001b
    2ad0:	0210001b 	andseq	r0, r0, #27
    2ad4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2ae4:	bc000000 	stclt	0, cr0, [r0], {-0}
    2ae8:	d410001b 	ldrle	r0, [r0], #-27	; 0xffffffe5
    2aec:	0110001b 	tsteq	r0, fp, lsl r0
    2af0:	1bd45000 	blne	ff516af8 <__RAM_segment_used_end__+0xc7416af8>
    2af4:	1bd61000 	blne	ff586afc <__RAM_segment_used_end__+0xc7486afc>
    2af8:	00041000 	andeq	r1, r4, r0
    2afc:	9f5001f3 	svcls	0x005001f3
    2b00:	10001bd6 	ldrdne	r1, [r0], -r6
    2b04:	10001bf1 	strdne	r1, [r0], -r1	; <UNPREDICTABLE>
    2b08:	f1500001 			; <UNDEFINED> instruction: 0xf1500001
    2b0c:	f410001b 			; <UNDEFINED> instruction: 0xf410001b
    2b10:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2b14:	5001f300 	andpl	pc, r1, r0, lsl #6
    2b18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2b28:	001bbc00 	andseq	fp, fp, r0, lsl #24
    2b2c:	001bce10 	andseq	ip, fp, r0, lsl lr
    2b30:	51000110 	tstpl	r0, r0, lsl r1
    2b34:	10001bce 	andne	r1, r0, lr, asr #23
    2b38:	10001bd6 	ldrdne	r1, [r0], -r6
    2b3c:	01f30004 	mvnseq	r0, r4
    2b40:	1bd69f51 	blne	ff5aa88c <__RAM_segment_used_end__+0xc74aa88c>
    2b44:	1bda1000 	blne	ff686b4c <__RAM_segment_used_end__+0xc7586b4c>
    2b48:	00011000 	andeq	r1, r1, r0
    2b4c:	001bda51 	andseq	sp, fp, r1, asr sl
    2b50:	001bf410 	andseq	pc, fp, r0, lsl r4	; <UNPREDICTABLE>
    2b54:	f3000410 	vqshl.u8	d0, d0, d0
    2b58:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2b64:	c0000000 	andgt	r0, r0, r0
    2b68:	d410001b 	ldrle	r0, [r0], #-27	; 0xffffffe5
    2b6c:	0110001b 	tsteq	r0, fp, lsl r0
    2b70:	1bd65200 	blne	ff597378 <__RAM_segment_used_end__+0xc7497378>
    2b74:	1bf11000 	blne	ffc46b7c <__RAM_segment_used_end__+0xc7b46b7c>
    2b78:	00011000 	andeq	r1, r1, r0
    2b7c:	00000052 	andeq	r0, r0, r2, asr r0
    2b80:	00000000 	andeq	r0, r0, r0
    2b84:	00000100 	andeq	r0, r0, r0, lsl #2
    2b88:	ca000000 	bgt	2b90 <_Min_Stack_Size+0x1b90>
    2b8c:	ce10001b 	mrcgt	0, 0, r0, cr0, cr11, {0}
    2b90:	0110001b 	tsteq	r0, fp, lsl r0
    2b94:	1bd65300 	blne	ff59779c <__RAM_segment_used_end__+0xc749779c>
    2b98:	1bd81000 	blne	ff606ba0 <__RAM_segment_used_end__+0xc7506ba0>
    2b9c:	00011000 	andeq	r1, r1, r0
    2ba0:	001bd853 	andseq	sp, fp, r3, asr r8
    2ba4:	001bdc10 	andseq	sp, fp, r0, lsl ip
    2ba8:	72000210 	andvc	r0, r0, #16, 4
    2bac:	00000028 	andeq	r0, r0, r8, lsr #32
    2bb0:	00000000 	andeq	r0, r0, r0
    2bb4:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    2bb8:	e810001b 	ldmda	r0, {r0, r1, r3, r4}
    2bbc:	0110001b 	tsteq	r0, fp, lsl r0
    2bc0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2bcc:	10001bda 	ldrdne	r1, [r0], -sl
    2bd0:	10001be0 	andne	r1, r0, r0, ror #23
    2bd4:	00510001 	subseq	r0, r1, r1
    2bd8:	00000000 	andeq	r0, r0, r0
    2bdc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2be0:	f610001b 			; <UNDEFINED> instruction: 0xf610001b
    2be4:	0210001b 	andseq	r0, r0, #27
    2be8:	f6007d00 			; <UNDEFINED> instruction: 0xf6007d00
    2bec:	7c10001b 	ldcvc	0, cr0, [r0], {27}
    2bf0:	0210001c 	andseq	r0, r0, #28
    2bf4:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    2c00:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2c04:	0510001b 	ldreq	r0, [r0, #-27]	; 0xffffffe5
    2c08:	0110001c 	tsteq	r0, ip, lsl r0
    2c0c:	1c055000 	stcne	0, cr5, [r5], {-0}
    2c10:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2c14:	00011000 	andeq	r1, r1, r0
    2c18:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2c24:	001bf400 	andseq	pc, fp, r0, lsl #8
    2c28:	001c0210 	andseq	r0, ip, r0, lsl r2
    2c2c:	51000110 	tstpl	r0, r0, lsl r1
    2c30:	10001c02 	andne	r1, r0, r2, lsl #24
    2c34:	10001c7c 	andne	r1, r0, ip, ror ip
    2c38:	00570001 	subseq	r0, r7, r1
	...
    2c44:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2c48:	0010001b 	andseq	r0, r0, fp, lsl r0
    2c4c:	0110001c 	tsteq	r0, ip, lsl r0
    2c50:	1c005200 	sfmne	f5, 4, [r0], {-0}
    2c54:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2c58:	00011000 	andeq	r1, r1, r0
    2c5c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    2c6c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2c70:	0510001b 	ldreq	r0, [r0, #-27]	; 0xffffffe5
    2c74:	0110001c 	tsteq	r0, ip, lsl r0
    2c78:	1c055300 	stcne	3, cr5, [r5], {-0}
    2c7c:	1c0a1000 	stcne	0, cr1, [sl], {-0}
    2c80:	00011000 	andeq	r1, r1, r0
    2c84:	001c0a55 	andseq	r0, ip, r5, asr sl
    2c88:	001c2010 	andseq	r2, ip, r0, lsl r0
    2c8c:	53000110 	movwpl	r0, #272	; 0x110
    2c90:	10001c20 	andne	r1, r0, r0, lsr #24
    2c94:	10001c24 	andne	r1, r0, r4, lsr #24
    2c98:	1c740002 	ldclne	0, cr0, [r4], #-8
    2c9c:	10001c24 	andne	r1, r0, r4, lsr #24
    2ca0:	10001c7c 	andne	r1, r0, ip, ror ip
    2ca4:	00750006 	rsbseq	r0, r5, r6
    2ca8:	9f1afc09 	svcls	0x001afc09
	...
    2cb4:	1c3c0001 	ldcne	0, cr0, [ip], #-4
    2cb8:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2cbc:	00011000 	andeq	r1, r1, r0
    2cc0:	00000052 	andeq	r0, r0, r2, asr r0
    2cc4:	00000000 	andeq	r0, r0, r0
    2cc8:	00000100 	andeq	r0, r0, r0, lsl #2
    2ccc:	00000101 	andeq	r0, r0, r1, lsl #2
    2cd0:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
    2cd4:	001c1e00 	andseq	r1, ip, r0, lsl #28
    2cd8:	001c2010 	andseq	r2, ip, r0, lsl r0
    2cdc:	56000110 			; <UNDEFINED> instruction: 0x56000110
    2ce0:	10001c20 	andne	r1, r0, r0, lsr #24
    2ce4:	10001c20 	andne	r1, r0, r0, lsr #24
    2ce8:	20530001 	subscs	r0, r3, r1
    2cec:	2810001c 	ldmdacs	r0, {r2, r3, r4}
    2cf0:	0310001c 	tsteq	r0, #28
    2cf4:	9f7c7300 	svcls	0x007c7300
    2cf8:	10001c28 	andne	r1, r0, r8, lsr #24
    2cfc:	10001c2e 	andne	r1, r0, lr, lsr #24
    2d00:	2e520001 	cdpcs	0, 5, cr0, cr2, cr1, {0}
    2d04:	2e10001c 	mrccs	0, 0, r0, cr0, cr12, {0}
    2d08:	0110001c 	tsteq	r0, ip, lsl r0
    2d0c:	1c2e5600 	stcne	6, cr5, [lr], #-0
    2d10:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2d14:	00031000 	andeq	r1, r3, r0
    2d18:	009f0476 	addseq	r0, pc, r6, ror r4	; <UNPREDICTABLE>
    2d1c:	00000000 	andeq	r0, r0, r0
    2d20:	03000000 	movweq	r0, #0
    2d24:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
    2d28:	001c2000 	andseq	r2, ip, r0
    2d2c:	001c2810 	andseq	r2, ip, r0, lsl r8
    2d30:	73000310 	movwvc	r0, #784	; 0x310
    2d34:	1c289f7c 	stcne	15, cr9, [r8], #-496	; 0xfffffe10
    2d38:	1c2c1000 	stcne	0, cr1, [ip], #-0
    2d3c:	00011000 	andeq	r1, r1, r0
    2d40:	001c2c52 	andseq	r2, ip, r2, asr ip
    2d44:	001c7c10 	andseq	r7, ip, r0, lsl ip
    2d48:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    2d54:	00010102 	andeq	r0, r1, r2, lsl #2
    2d58:	10001c20 	andne	r1, r0, r0, lsr #24
    2d5c:	10001c2c 	andne	r1, r0, ip, lsr #24
    2d60:	2c540001 	mrrccs	0, 0, r0, r4, cr1
    2d64:	7c10001c 	ldcvc	0, cr0, [r0], {28}
    2d68:	0110001c 	tsteq	r0, ip, lsl r0
    2d6c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    2d78:	10001c60 	andne	r1, r0, r0, ror #24
    2d7c:	10001c7c 	andne	r1, r0, ip, ror ip
    2d80:	00510001 	subseq	r0, r1, r1
	...
    2d8c:	001c6200 	andseq	r6, ip, r0, lsl #4
    2d90:	001c7c10 	andseq	r7, ip, r0, lsl ip
    2d94:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2da0:	1c2e0003 	stcne	0, cr0, [lr], #-12
    2da4:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2da8:	00031000 	andeq	r1, r3, r0
    2dac:	009f0476 	addseq	r0, pc, r6, ror r4	; <UNPREDICTABLE>
    2db0:	00000000 	andeq	r0, r0, r0
    2db4:	01000000 	mrseq	r0, (UNDEF: 0)
    2db8:	001c3a00 	andseq	r3, ip, r0, lsl #20
    2dbc:	001c7c10 	andseq	r7, ip, r0, lsl ip
    2dc0:	52000110 	andpl	r0, r0, #16, 2
	...
    2dcc:	1c3a0100 	ldfnes	f0, [sl], #-0
    2dd0:	1c3a1000 	ldcne	0, cr1, [sl], #-0
    2dd4:	00011000 	andeq	r1, r1, r0
    2dd8:	00000052 	andeq	r0, r0, r2, asr r0
    2ddc:	00000000 	andeq	r0, r0, r0
    2de0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    2de4:	5810001c 	ldmdapl	r0, {r2, r3, r4}
    2de8:	0110001c 	tsteq	r0, ip, lsl r0
    2dec:	00005200 	andeq	r5, r0, r0, lsl #4
    2df0:	00000000 	andeq	r0, r0, r0
    2df4:	1c7c0000 	ldclne	0, cr0, [ip], #-0
    2df8:	1c7e1000 	ldclne	0, cr1, [lr], #-0
    2dfc:	00021000 	andeq	r1, r2, r0
    2e00:	1c7e007d 	ldclne	0, cr0, [lr], #-500	; 0xfffffe0c
    2e04:	1d641000 	stclne	0, cr1, [r4, #-0]
    2e08:	00021000 	andeq	r1, r2, r0
    2e0c:	0000147d 	andeq	r1, r0, sp, ror r4
	...
    2e20:	1c7c0000 	ldclne	0, cr0, [ip], #-0
    2e24:	1ca81000 	stcne	0, cr1, [r8]
    2e28:	00011000 	andeq	r1, r1, r0
    2e2c:	001ca850 	andseq	sl, ip, r0, asr r8
    2e30:	001caa10 	andseq	sl, ip, r0, lsl sl
    2e34:	f3000410 	vqshl.u8	d0, d0, d0
    2e38:	aa9f5001 	bge	fe7d6e44 <__RAM_segment_used_end__+0xc66d6e44>
    2e3c:	4a10001c 	bmi	402eb4 <__RAM_SIZE+0x302eb4>
    2e40:	0110001d 	tsteq	r0, sp, lsl r0
    2e44:	1d4a5000 	stclne	0, cr5, [sl, #-0]
    2e48:	1d4c1000 	stclne	0, cr1, [ip, #-0]
    2e4c:	00041000 	andeq	r1, r4, r0
    2e50:	9f5001f3 	svcls	0x005001f3
    2e54:	10001d4c 	andne	r1, r0, ip, asr #26
    2e58:	10001d58 	andne	r1, r0, r8, asr sp
    2e5c:	58500001 	ldmdapl	r0, {r0}^
    2e60:	6410001d 	ldrvs	r0, [r0], #-29	; 0xffffffe3
    2e64:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    2e68:	5001f300 	andpl	pc, r1, r0, lsl #6
    2e6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e78:	7c000000 	stcvc	0, cr0, [r0], {-0}
    2e7c:	3610001c 			; <UNDEFINED> instruction: 0x3610001c
    2e80:	0110001d 	tsteq	r0, sp, lsl r0
    2e84:	1d365100 	ldfnes	f5, [r6, #-0]
    2e88:	1d521000 	ldclne	0, cr1, [r2, #-0]
    2e8c:	00041000 	andeq	r1, r4, r0
    2e90:	9f5101f3 	svcls	0x005101f3
    2e94:	10001d52 	andne	r1, r0, r2, asr sp
    2e98:	10001d64 	andne	r1, r0, r4, ror #26
    2e9c:	00510001 	subseq	r0, r1, r1
    2ea0:	00000000 	andeq	r0, r0, r0
    2ea4:	01000000 	mrseq	r0, (UNDEF: 0)
    2ea8:	84000100 	strhi	r0, [r0], #-256	; 0xffffff00
    2eac:	ec10001c 	ldc	0, cr0, [r0], {28}
    2eb0:	0110001c 	tsteq	r0, ip, lsl r0
    2eb4:	1cee5c00 	stclne	12, cr5, [lr]
    2eb8:	1d641000 	stclne	0, cr1, [r4, #-0]
    2ebc:	00011000 	andeq	r1, r1, r0
    2ec0:	0000005c 	andeq	r0, r0, ip, asr r0
    2ec4:	00000000 	andeq	r0, r0, r0
    2ec8:	02000000 	andeq	r0, r0, #0
    2ecc:	00000000 	andeq	r0, r0, r0
    2ed0:	9a000202 	bls	36e0 <_Min_Stack_Size+0x26e0>
    2ed4:	a210001c 	andsge	r0, r0, #28
    2ed8:	0110001c 	tsteq	r0, ip, lsl r0
    2edc:	1ca65200 	sfmne	f5, 4, [r6]
    2ee0:	1caa1000 	stcne	0, cr1, [sl]
    2ee4:	00021000 	andeq	r1, r2, r0
    2ee8:	1caa9f30 	stcne	15, cr9, [sl], #192	; 0xc0
    2eec:	1d4a1000 	stclne	0, cr1, [sl, #-0]
    2ef0:	00011000 	andeq	r1, r1, r0
    2ef4:	001d4c52 	andseq	r4, sp, r2, asr ip
    2ef8:	001d5610 	andseq	r5, sp, r0, lsl r6
    2efc:	52000110 	andpl	r0, r0, #16, 2
    2f00:	10001d56 	andne	r1, r0, r6, asr sp
    2f04:	10001d64 	andne	r1, r0, r4, ror #26
    2f08:	9f300002 	svcls	0x00300002
	...
    2f18:	1cb80000 	ldcne	0, cr0, [r8]
    2f1c:	1ce41000 	stclne	0, cr1, [r4]
    2f20:	00011000 	andeq	r1, r1, r0
    2f24:	001d1057 	andseq	r1, sp, r7, asr r0
    2f28:	001d1210 	andseq	r1, sp, r0, lsl r2
    2f2c:	57000110 	smladpl	r0, r0, r1, r0
    2f30:	10001d20 	andne	r1, r0, r0, lsr #26
    2f34:	10001d32 	andne	r1, r0, r2, lsr sp
    2f38:	00540001 	subseq	r0, r4, r1
    2f3c:	00000000 	andeq	r0, r0, r0
    2f40:	01000000 	mrseq	r0, (UNDEF: 0)
    2f44:	01000000 	mrseq	r0, (UNDEF: 0)
    2f48:	02000000 	andeq	r0, r0, #0
    2f4c:	00000200 	andeq	r0, r0, r0, lsl #4
    2f50:	b6000101 	strlt	r0, [r0], -r1, lsl #2
    2f54:	ca10001c 	bgt	402fcc <__RAM_SIZE+0x302fcc>
    2f58:	0110001c 	tsteq	r0, ip, lsl r0
    2f5c:	1cd05200 	lfmne	f5, 2, [r0], {0}
    2f60:	1ce41000 	stclne	0, cr1, [r4]
    2f64:	00011000 	andeq	r1, r1, r0
    2f68:	001d0652 	andseq	r0, sp, r2, asr r6
    2f6c:	001d0810 	andseq	r0, sp, r0, lsl r8
    2f70:	52000110 	andpl	r0, r0, #16, 2
    2f74:	10001d10 	andne	r1, r0, r0, lsl sp
    2f78:	10001d12 	andne	r1, r0, r2, lsl sp
    2f7c:	20520001 	subscs	r0, r2, r1
    2f80:	3210001d 	andscc	r0, r0, #29
    2f84:	0110001d 	tsteq	r0, sp, lsl r0
    2f88:	1d325200 	lfmne	f5, 4, [r2, #-0]
    2f8c:	1d421000 	stclne	0, cr1, [r2, #-0]
    2f90:	00031000 	andeq	r1, r3, r0
    2f94:	4c9f0472 	cfldrsmi	mvf0, [pc], {114}	; 0x72
    2f98:	4c10001d 	ldcmi	0, cr0, [r0], {29}
    2f9c:	0310001d 	tsteq	r0, #29
    2fa0:	9f047200 	svcls	0x00047200
    2fa4:	10001d4c 	andne	r1, r0, ip, asr #26
    2fa8:	10001d52 	andne	r1, r0, r2, asr sp
    2fac:	00520001 	subseq	r0, r2, r1
    2fb0:	00000000 	andeq	r0, r0, r0
    2fb4:	01000000 	mrseq	r0, (UNDEF: 0)
    2fb8:	01000100 	mrseq	r0, (UNDEF: 16)
    2fbc:	001cc800 	andseq	ip, ip, r0, lsl #16
    2fc0:	001cd010 	andseq	sp, ip, r0, lsl r0
    2fc4:	57000110 	smladpl	r0, r0, r1, r0
    2fc8:	10001cd0 	ldrdne	r1, [r0], -r0
    2fcc:	10001ce4 	andne	r1, r0, r4, ror #25
    2fd0:	20570001 	subscs	r0, r7, r1
    2fd4:	3210001d 	andscc	r0, r0, #29
    2fd8:	0110001d 	tsteq	r0, sp, lsl r0
    2fdc:	00005400 	andeq	r5, r0, r0, lsl #8
    2fe0:	00000000 	andeq	r0, r0, r0
    2fe4:	00010000 	andeq	r0, r1, r0
    2fe8:	01000000 	mrseq	r0, (UNDEF: 0)
    2fec:	00000001 	andeq	r0, r0, r1
    2ff0:	00010000 	andeq	r0, r1, r0
    2ff4:	00000000 	andeq	r0, r0, r0
    2ff8:	10001c9c 	mulne	r0, ip, ip
    2ffc:	10001ca2 	andne	r1, r0, r2, lsr #25
    3000:	9f300002 	svcls	0x00300002
    3004:	10001caa 	andne	r1, r0, sl, lsr #25
    3008:	10001cba 			; <UNDEFINED> instruction: 0x10001cba
    300c:	9f300002 	svcls	0x00300002
    3010:	10001cba 			; <UNDEFINED> instruction: 0x10001cba
    3014:	10001cc0 	andne	r1, r0, r0, asr #25
    3018:	c0540001 	subsgt	r0, r4, r1
    301c:	1010001c 	andsne	r0, r0, ip, lsl r0
    3020:	0210001d 	andseq	r0, r0, #29
    3024:	109f3000 	addsne	r3, pc, r0
    3028:	1210001d 	andsne	r0, r0, #29
    302c:	0110001d 	tsteq	r0, sp, lsl r0
    3030:	1d125400 	cfldrsne	mvf5, [r2, #-0]
    3034:	1d1e1000 	ldcne	0, cr1, [lr, #-0]
    3038:	00011000 	andeq	r1, r1, r0
    303c:	001d3053 	andseq	r3, sp, r3, asr r0
    3040:	001d3210 	andseq	r3, sp, r0, lsl r2
    3044:	51000110 	tstpl	r0, r0, lsl r1
    3048:	10001d32 	andne	r1, r0, r2, lsr sp
    304c:	10001d38 	andne	r1, r0, r8, lsr sp
    3050:	52530001 	subspl	r0, r3, #1
    3054:	6410001d 	ldrvs	r0, [r0], #-29	; 0xffffffe3
    3058:	0110001d 	tsteq	r0, sp, lsl r0
    305c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    306c:	10001c9c 	mulne	r0, ip, ip
    3070:	10001ca2 	andne	r1, r0, r2, lsr #25
    3074:	aa530001 	bge	14c3080 <__RAM_SIZE+0x13c3080>
    3078:	f810001c 			; <UNDEFINED> instruction: 0xf810001c
    307c:	0110001c 	tsteq	r0, ip, lsl r0
    3080:	1cfa5300 	ldclne	3, cr5, [sl]
    3084:	1d121000 	ldcne	0, cr1, [r2, #-0]
    3088:	00011000 	andeq	r1, r1, r0
    308c:	00000053 	andeq	r0, r0, r3, asr r0
    3090:	00000000 	andeq	r0, r0, r0
    3094:	00000800 	andeq	r0, r0, r0, lsl #16
    3098:	00000101 	andeq	r0, r0, r1, lsl #2
    309c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    30a0:	aa10001c 	bge	403118 <__RAM_SIZE+0x303118>
    30a4:	0210001c 	andseq	r0, r0, #28
    30a8:	aa9f3000 	bge	fe7cf0b0 <__RAM_segment_used_end__+0xc66cf0b0>
    30ac:	b210001c 	andslt	r0, r0, #28
    30b0:	0110001c 	tsteq	r0, ip, lsl r0
    30b4:	1cb25e00 	ldcne	14, cr5, [r2]
    30b8:	1cb61000 	ldcne	0, cr1, [r6]
    30bc:	00021000 	andeq	r1, r2, r0
    30c0:	1cb69f31 	ldcne	15, cr9, [r6], #196	; 0xc4
    30c4:	1d4a1000 	stclne	0, cr1, [sl, #-0]
    30c8:	00011000 	andeq	r1, r1, r0
    30cc:	001d4c5e 	andseq	r4, sp, lr, asr ip
    30d0:	001d6410 	andseq	r6, sp, r0, lsl r4
    30d4:	5e000110 	fltpls	f0, r0
	...
    30e4:	1c960000 	ldcne	0, cr0, [r6], {0}
    30e8:	1ca21000 	stcne	0, cr1, [r2]
    30ec:	00011000 	andeq	r1, r1, r0
    30f0:	001caa55 	andseq	sl, ip, r5, asr sl
    30f4:	001d2210 	andseq	r2, sp, r0, lsl r2
    30f8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    30fc:	10001d52 	andne	r1, r0, r2, asr sp
    3100:	10001d64 	andne	r1, r0, r4, ror #26
    3104:	00550001 	subseq	r0, r5, r1
	...
    3110:	03000303 	movweq	r0, #771	; 0x303
    3114:	02000000 	andeq	r0, r0, #0
    3118:	001caa00 	andseq	sl, ip, r0, lsl #20
    311c:	001cc010 	andseq	ip, ip, r0, lsl r0
    3120:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    3124:	1cc09f04 	stclne	15, cr9, [r0], {4}
    3128:	1ce41000 	stclne	0, cr1, [r4]
    312c:	00031000 	andeq	r1, r3, r0
    3130:	fe9f0477 	mrc2	4, 4, r0, cr15, cr7, {3}
    3134:	0810001c 	ldmdaeq	r0, {r2, r3, r4}
    3138:	0310001d 	tsteq	r0, #29
    313c:	9f047200 	svcls	0x00047200
    3140:	10001d10 	andne	r1, r0, r0, lsl sp
    3144:	10001d12 	andne	r1, r0, r2, lsl sp
    3148:	04720003 	ldrbteq	r0, [r2], #-3
    314c:	001d249f 	mulseq	sp, pc, r4	; <UNPREDICTABLE>
    3150:	001d3210 	andseq	r3, sp, r0, lsl r2
    3154:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    3158:	00009f04 	andeq	r9, r0, r4, lsl #30
    315c:	00000000 	andeq	r0, r0, r0
    3160:	02000000 	andeq	r0, r0, #0
    3164:	00020002 	andeq	r0, r2, r2
    3168:	00010000 	andeq	r0, r1, r0
    316c:	00000001 	andeq	r0, r0, r1
    3170:	10001caa 	andne	r1, r0, sl, lsr #25
    3174:	10001cc0 	andne	r1, r0, r0, asr #25
    3178:	04720003 	ldrbteq	r0, [r2], #-3
    317c:	001cc09f 	mulseq	ip, pc, r0	; <UNPREDICTABLE>
    3180:	001ce410 	andseq	lr, ip, r0, lsl r4
    3184:	77000310 	smladvc	r0, r0, r3, r0
    3188:	1cfe9f04 	ldclne	15, cr9, [lr], #16
    318c:	1d081000 	stcne	0, cr1, [r8, #-0]
    3190:	00031000 	andeq	r1, r3, r0
    3194:	109f0472 	addsne	r0, pc, r2, ror r4	; <UNPREDICTABLE>
    3198:	1210001d 	andsne	r0, r0, #29
    319c:	0310001d 	tsteq	r0, #29
    31a0:	9f047200 	svcls	0x00047200
    31a4:	10001d24 	andne	r1, r0, r4, lsr #26
    31a8:	10001d32 	andne	r1, r0, r2, lsr sp
    31ac:	04740003 	ldrbteq	r0, [r4], #-3
    31b0:	001d329f 	mulseq	sp, pc, r2	; <UNPREDICTABLE>
    31b4:	001d4a10 	andseq	r4, sp, r0, lsl sl
    31b8:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    31bc:	1d4c9f04 	stclne	15, cr9, [ip, #-16]
    31c0:	1d521000 	ldclne	0, cr1, [r2, #-0]
    31c4:	00031000 	andeq	r1, r3, r0
    31c8:	009f0472 	addseq	r0, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    31d8:	001c8e00 	andseq	r8, ip, r0, lsl #28
    31dc:	001c9410 	andseq	r9, ip, r0, lsl r4
    31e0:	52000110 	andpl	r0, r0, #16, 2
    31e4:	10001c94 	mulne	r0, r4, ip
    31e8:	10001ca2 	andne	r1, r0, r2, lsr #25
    31ec:	00740009 	rsbseq	r0, r4, r9
    31f0:	08702433 	ldmdaeq	r0!, {r0, r1, r4, r5, sl, sp}^
    31f4:	a29f2206 	addsge	r2, pc, #1610612736	; 0x60000000
    31f8:	aa10001c 	bge	403270 <__RAM_SIZE+0x303270>
    31fc:	0110001c 	tsteq	r0, ip, lsl r0
    3200:	00005200 	andeq	r5, r0, r0, lsl #4
    3204:	00000000 	andeq	r0, r0, r0
    3208:	00010000 	andeq	r0, r1, r0
    320c:	10001c82 	andne	r1, r0, r2, lsl #25
    3210:	10001caa 	andne	r1, r0, sl, lsr #25
    3214:	005c0001 	subseq	r0, ip, r1
	...
    3220:	001c8201 	andseq	r8, ip, r1, lsl #4
    3224:	001c8210 	andseq	r8, ip, r0, lsl r2
    3228:	5c000110 	stfpls	f0, [r0], {16}
	...
    3234:	1ca20001 	stcne	0, cr0, [r2], #4
    3238:	1ca61000 	stcne	0, cr1, [r6]
    323c:	00011000 	andeq	r1, r1, r0
    3240:	0000005c 	andeq	r0, r0, ip, asr r0
    3244:	00000000 	andeq	r0, r0, r0
    3248:	e4000100 	str	r0, [r0], #-256	; 0xffffff00
    324c:	e810001c 	ldmda	r0, {r2, r3, r4}
    3250:	0110001c 	tsteq	r0, ip, lsl r0
    3254:	00005c00 	andeq	r5, r0, r0, lsl #24
    3258:	00000000 	andeq	r0, r0, r0
    325c:	00010000 	andeq	r0, r1, r0
    3260:	10001cec 	andne	r1, r0, ip, ror #25
    3264:	10001cfe 	strdne	r1, [r0], -lr
    3268:	005c0001 	subseq	r0, ip, r1
	...
    3274:	001cec01 	andseq	lr, ip, r1, lsl #24
    3278:	001cec10 	andseq	lr, ip, r0, lsl ip
    327c:	5c000110 	stfpls	f0, [r0], {16}
	...
    3288:	1d420001 	stclne	0, cr0, [r2, #-4]
    328c:	1d461000 	stclne	0, cr1, [r6, #-0]
    3290:	00011000 	andeq	r1, r1, r0
    3294:	0000005c 	andeq	r0, r0, ip, asr r0
    3298:	00000000 	andeq	r0, r0, r0
    329c:	52000100 	andpl	r0, r0, #0, 2
    32a0:	5610001d 			; <UNDEFINED> instruction: 0x5610001d
    32a4:	0110001d 	tsteq	r0, sp, lsl r0
    32a8:	00005c00 	andeq	r5, r0, r0, lsl #24
    32ac:	00000000 	andeq	r0, r0, r0
    32b0:	1d640000 	stclne	0, cr0, [r4, #-0]
    32b4:	1d661000 	stclne	0, cr1, [r6, #-0]
    32b8:	00021000 	andeq	r1, r2, r0
    32bc:	1d66007d 	stclne	0, cr0, [r6, #-500]!	; 0xfffffe0c
    32c0:	1d701000 	ldclne	0, cr1, [r0, #-0]
    32c4:	00021000 	andeq	r1, r2, r0
    32c8:	0000087d 	andeq	r0, r0, sp, ror r8
    32cc:	00000000 	andeq	r0, r0, r0
    32d0:	1d700000 	ldclne	0, cr0, [r0, #-0]
    32d4:	1d721000 	ldclne	0, cr1, [r2, #-0]
    32d8:	00021000 	andeq	r1, r2, r0
    32dc:	1d72007d 	ldclne	0, cr0, [r2, #-500]!	; 0xfffffe0c
    32e0:	1dbc1000 	ldcne	0, cr1, [ip]
    32e4:	00021000 	andeq	r1, r2, r0
    32e8:	0000087d 	andeq	r0, r0, sp, ror r8
    32ec:	00000000 	andeq	r0, r0, r0
    32f0:	1dbc0000 	ldcne	0, cr0, [ip]
    32f4:	1dc01000 	stclne	0, cr1, [r0]
    32f8:	00021000 	andeq	r1, r2, r0
    32fc:	1dc0007d 	stclne	0, cr0, [r0, #500]	; 0x1f4
    3300:	1ee81000 	cdpne	0, 14, cr1, cr8, cr0, {0}
    3304:	00021000 	andeq	r1, r2, r0
    3308:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    3314:	1dbc0000 	ldcne	0, cr0, [ip]
    3318:	1dd61000 	ldclne	0, cr1, [r6]
    331c:	00011000 	andeq	r1, r1, r0
    3320:	001dd650 	andseq	sp, sp, r0, asr r6
    3324:	001ee810 	andseq	lr, lr, r0, lsl r8
    3328:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3338:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    333c:	10001dd4 	ldrdne	r1, [r0], -r4
    3340:	d4510001 	ldrble	r0, [r1], #-1
    3344:	e810001d 	ldmda	r0, {r0, r2, r3, r4}
    3348:	0110001e 	tsteq	r0, lr, lsl r0
    334c:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    3358:	1dbc0000 	ldcne	0, cr0, [ip]
    335c:	1dd21000 	ldclne	0, cr1, [r2]
    3360:	00011000 	andeq	r1, r1, r0
    3364:	001dd252 	andseq	sp, sp, r2, asr r2
    3368:	001ee810 	andseq	lr, lr, r0, lsl r8
    336c:	59000110 	stmdbpl	r0, {r4, r8}
	...
    337c:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    3380:	10001dd9 	ldrdne	r1, [r0], -r9
    3384:	d9530001 	ldmdble	r3, {r0}^
    3388:	e810001d 	ldmda	r0, {r0, r2, r3, r4}
    338c:	0110001e 	tsteq	r0, lr, lsl r0
    3390:	00005800 	andeq	r5, r0, r0, lsl #16
    3394:	00000000 	andeq	r0, r0, r0
    3398:	01000000 	mrseq	r0, (UNDEF: 0)
    339c:	00000001 	andeq	r0, r0, r1
    33a0:	00000000 	andeq	r0, r0, r0
    33a4:	1dbc0000 	ldcne	0, cr0, [ip]
    33a8:	1df01000 	ldclne	0, cr1, [r0]
    33ac:	00021000 	andeq	r1, r2, r0
    33b0:	1df00091 	ldclne	0, cr0, [r0, #580]!	; 0x244
    33b4:	1e201000 	cdpne	0, 2, cr1, cr0, cr0, {0}
    33b8:	00011000 	andeq	r1, r1, r0
    33bc:	001e2055 	andseq	r2, lr, r5, asr r0
    33c0:	001e3910 	andseq	r3, lr, r0, lsl r9
    33c4:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    33c8:	001e390c 	andseq	r3, lr, ip, lsl #18
    33cc:	001e7210 	andseq	r7, lr, r0, lsl r2
    33d0:	7b000610 	blvc	4c18 <_Min_Stack_Size+0x3c18>
    33d4:	1afc0903 	bne	fff057e8 <__RAM_segment_used_end__+0xc7e057e8>
    33d8:	001e729f 	mulseq	lr, pc, r2	; <UNPREDICTABLE>
    33dc:	001e7a10 	andseq	r7, lr, r0, lsl sl
    33e0:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    33e4:	001e7a0c 	andseq	r7, lr, ip, lsl #20
    33e8:	001ee810 	andseq	lr, lr, r0, lsl r8
    33ec:	7b000610 	blvc	4c34 <_Min_Stack_Size+0x3c34>
    33f0:	1afc0903 	bne	fff05804 <__RAM_segment_used_end__+0xc7e05804>
    33f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3408:	bc000000 	stclt	0, cr0, [r0], {-0}
    340c:	e010001d 	ands	r0, r0, sp, lsl r0
    3410:	0210001d 	andseq	r0, r0, #29
    3414:	e0049100 	and	r9, r4, r0, lsl #2
    3418:	1e10001d 	mrcne	0, 0, r0, cr0, cr13, {0}
    341c:	0110001e 	tsteq	r0, lr, lsl r0
    3420:	1e1e5600 	cfmsub32ne	mvax0, mvfx5, mvfx14, mvfx0
    3424:	1e391000 	cdpne	0, 3, cr1, cr9, cr0, {0}
    3428:	00021000 	andeq	r1, r2, r0
    342c:	1e391474 	mrcne	4, 1, r1, cr9, cr4, {3}
    3430:	1e6c1000 	cdpne	0, 6, cr1, cr12, cr0, {0}
    3434:	00031000 	andeq	r1, r3, r0
    3438:	729f0176 	addsvc	r0, pc, #-2147483619	; 0x8000001d
    343c:	7a10001e 	bvc	4034bc <__RAM_SIZE+0x3034bc>
    3440:	0210001e 	andseq	r0, r0, #30
    3444:	7a147400 	bvc	52044c <__RAM_SIZE+0x42044c>
    3448:	a810001e 	ldmdage	r0, {r1, r2, r3, r4}
    344c:	0310001e 	tsteq	r0, #30
    3450:	9f017600 	svcls	0x00017600
    3454:	10001eb2 			; <UNDEFINED> instruction: 0x10001eb2
    3458:	10001eb6 			; <UNDEFINED> instruction: 0x10001eb6
    345c:	01760003 	cmneq	r6, r3
    3460:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    346c:	001dbc00 	andseq	fp, sp, r0, lsl #24
    3470:	001e7210 	andseq	r7, lr, r0, lsl r2
    3474:	91000210 	tstls	r0, r0, lsl r2
    3478:	001e7208 	andseq	r7, lr, r8, lsl #4
    347c:	001ee810 	andseq	lr, lr, r0, lsl r8
    3480:	91000210 	tstls	r0, r0, lsl r2
    3484:	00000008 	andeq	r0, r0, r8
	...
    3490:	001dbc00 	andseq	fp, sp, r0, lsl #24
    3494:	001e7210 	andseq	r7, lr, r0, lsl r2
    3498:	91000210 	tstls	r0, r0, lsl r2
    349c:	001e720c 	andseq	r7, lr, ip, lsl #4
    34a0:	001ee810 	andseq	lr, lr, r0, lsl r8
    34a4:	91000210 	tstls	r0, r0, lsl r2
    34a8:	0000000c 	andeq	r0, r0, ip
	...
    34b4:	001dbc00 	andseq	fp, sp, r0, lsl #24
    34b8:	001e7210 	andseq	r7, lr, r0, lsl r2
    34bc:	91000210 	tstls	r0, r0, lsl r2
    34c0:	001e7210 	andseq	r7, lr, r0, lsl r2
    34c4:	001ee810 	andseq	lr, lr, r0, lsl r8
    34c8:	91000210 	tstls	r0, r0, lsl r2
    34cc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    34d8:	001dbc00 	andseq	fp, sp, r0, lsl #24
    34dc:	001e7210 	andseq	r7, lr, r0, lsl r2
    34e0:	91000210 	tstls	r0, r0, lsl r2
    34e4:	001e7214 	andseq	r7, lr, r4, lsl r2
    34e8:	001ee810 	andseq	lr, lr, r0, lsl r8
    34ec:	91000210 	tstls	r0, r0, lsl r2
    34f0:	00000014 	andeq	r0, r0, r4, lsl r0
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	00000100 	andeq	r0, r0, r0, lsl #2
    34fc:	001e4600 	andseq	r4, lr, r0, lsl #12
    3500:	001e7210 	andseq	r7, lr, r0, lsl r2
    3504:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    3508:	10001e7a 	andne	r1, r0, sl, ror lr
    350c:	10001ee8 	andne	r1, r0, r8, ror #29
    3510:	00550001 	subseq	r0, r5, r1
	...
    351c:	001e7e00 	andseq	r7, lr, r0, lsl #28
    3520:	001e9410 	andseq	r9, lr, r0, lsl r4
    3524:	52000110 	andpl	r0, r0, #16, 2
	...
    3530:	1e820000 	cdpne	0, 8, cr0, cr2, cr0, {0}
    3534:	1e941000 	cdpne	0, 9, cr1, cr4, cr0, {0}
    3538:	00011000 	andeq	r1, r1, r0
    353c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3548:	001ea800 	andseq	sl, lr, r0, lsl #16
    354c:	001eb210 	andseq	fp, lr, r0, lsl r2
    3550:	56000110 			; <UNDEFINED> instruction: 0x56000110
    3554:	10001eb6 			; <UNDEFINED> instruction: 0x10001eb6
    3558:	10001ee8 	andne	r1, r0, r8, ror #29
    355c:	00560001 	subseq	r0, r6, r1
    3560:	00000000 	andeq	r0, r0, r0
    3564:	05000000 	streq	r0, [r0, #-0]
	...
    3570:	d0000000 	andle	r0, r0, r0
    3574:	6c10001d 	ldcvs	0, cr0, [r0], {29}
    3578:	0210001e 	andseq	r0, r0, #30
    357c:	729f3000 	addsvc	r3, pc, #0
    3580:	ac10001e 	ldcge	0, cr0, [r0], {30}
    3584:	0210001e 	andseq	r0, r0, #30
    3588:	ac9f3000 	ldcge	0, cr3, [pc], {0}
    358c:	b210001e 	andslt	r0, r0, #30
    3590:	0110001e 	tsteq	r0, lr, lsl r0
    3594:	1eb25700 	cdpne	7, 11, cr5, cr2, cr0, {0}
    3598:	1eb61000 	cdpne	0, 11, cr1, cr6, cr0, {0}
    359c:	00021000 	andeq	r1, r2, r0
    35a0:	1eb69f30 	mrcne	15, 5, r9, cr6, cr0, {1}
    35a4:	1ec81000 	cdpne	0, 12, cr1, cr8, cr0, {0}
    35a8:	00011000 	andeq	r1, r1, r0
    35ac:	001ec857 	andseq	ip, lr, r7, asr r8
    35b0:	001ee810 	andseq	lr, lr, r0, lsl r8
    35b4:	30000210 	andcc	r0, r0, r0, lsl r2
    35b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35bc:	00000000 	andeq	r0, r0, r0
    35c0:	00000100 	andeq	r0, r0, r0, lsl #2
    35c4:	00000000 	andeq	r0, r0, r0
    35c8:	1c000000 	stcne	0, cr0, [r0], {-0}
    35cc:	4410001e 	ldrmi	r0, [r0], #-30	; 0xffffffe2
    35d0:	0110001e 	tsteq	r0, lr, lsl r0
    35d4:	1e445500 	cdpne	5, 4, cr5, cr4, cr0, {0}
    35d8:	1e6c1000 	cdpne	0, 6, cr1, cr12, cr0, {0}
    35dc:	00091000 	andeq	r1, r9, r0
    35e0:	fc09037b 	stc2	3, cr0, [r9], {123}	; 0x7b
    35e4:	2200761a 	andcs	r7, r0, #27262976	; 0x1a00000
    35e8:	001e729f 	mulseq	lr, pc, r2	; <UNPREDICTABLE>
    35ec:	001e7a10 	andseq	r7, lr, r0, lsl sl
    35f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    35f4:	10001e7a 	andne	r1, r0, sl, ror lr
    35f8:	10001ea8 	andne	r1, r0, r8, lsr #29
    35fc:	037b0009 	cmneq	fp, #9
    3600:	761afc09 	ldrvc	pc, [sl], -r9, lsl #24
    3604:	b29f2200 	addslt	r2, pc, #0, 4
    3608:	b610001e 			; <UNDEFINED> instruction: 0xb610001e
    360c:	0910001e 	ldmdbeq	r0, {r1, r2, r3, r4}
    3610:	09037b00 	stmdbeq	r3, {r8, r9, fp, ip, sp, lr}
    3614:	00761afc 	ldrshteq	r1, [r6], #-172	; 0xffffff54
    3618:	00009f22 	andeq	r9, r0, r2, lsr #30
    361c:	00000000 	andeq	r0, r0, r0
    3620:	00010000 	andeq	r0, r1, r0
    3624:	10001de0 	andne	r1, r0, r0, ror #27
    3628:	10001ee8 	andne	r1, r0, r8, ror #29
    362c:	005b0001 	subseq	r0, fp, r1
	...
    3640:	001de800 	andseq	lr, sp, r0, lsl #16
    3644:	001e2010 	andseq	r2, lr, r0, lsl r0
    3648:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    364c:	10001e20 	andne	r1, r0, r0, lsr #28
    3650:	10001e39 	andne	r1, r0, r9, lsr lr
    3654:	0c740002 	ldcleq	0, cr0, [r4], #-8
    3658:	10001e39 	andne	r1, r0, r9, lsr lr
    365c:	10001e72 	andne	r1, r0, r2, ror lr
    3660:	037b0006 	cmneq	fp, #6
    3664:	9f1afc09 	svcls	0x001afc09
    3668:	10001e72 	andne	r1, r0, r2, ror lr
    366c:	10001e7a 	andne	r1, r0, sl, ror lr
    3670:	0c740002 	ldcleq	0, cr0, [r4], #-8
    3674:	10001e7a 	andne	r1, r0, sl, ror lr
    3678:	10001ee8 	andne	r1, r0, r8, ror #29
    367c:	037b0006 	cmneq	fp, #6
    3680:	9f1afc09 	svcls	0x001afc09
	...
    368c:	00000001 	andeq	r0, r0, r1
    3690:	10001e44 	andne	r1, r0, r4, asr #28
    3694:	10001e72 	andne	r1, r0, r2, ror lr
    3698:	7a550001 	bvc	15436a4 <__RAM_SIZE+0x14436a4>
    369c:	e810001e 	ldmda	r0, {r1, r2, r3, r4}
    36a0:	0110001e 	tsteq	r0, lr, lsl r0
    36a4:	00005500 	andeq	r5, r0, r0, lsl #10
    36a8:	00000000 	andeq	r0, r0, r0
    36ac:	01000000 	mrseq	r0, (UNDEF: 0)
    36b0:	10001e44 	andne	r1, r0, r4, asr #28
    36b4:	10001e44 	andne	r1, r0, r4, asr #28
    36b8:	00550001 	subseq	r0, r5, r1
    36bc:	00000000 	andeq	r0, r0, r0
    36c0:	01000000 	mrseq	r0, (UNDEF: 0)
    36c4:	001e6800 	andseq	r6, lr, r0, lsl #16
    36c8:	001e6c10 	andseq	r6, lr, r0, lsl ip
    36cc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    36d8:	1e980100 	fmlnee	f0, f0, f0
    36dc:	1e981000 	cdpne	0, 9, cr1, cr8, cr0, {0}
    36e0:	00011000 	andeq	r1, r1, r0
    36e4:	00000052 	andeq	r0, r0, r2, asr r0
    36e8:	00000000 	andeq	r0, r0, r0
    36ec:	bc000100 	stflts	f0, [r0], {-0}
    36f0:	c010001e 	andsgt	r0, r0, lr, lsl r0
    36f4:	0110001e 	tsteq	r0, lr, lsl r0
    36f8:	00005500 	andeq	r5, r0, r0, lsl #10
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	1f080000 	svcne	0x00080000
    3704:	1f0a1000 	svcne	0x000a1000
    3708:	00021000 	andeq	r1, r2, r0
    370c:	1f0a007d 	svcne	0x000a007d
    3710:	1f4c1000 	svcne	0x004c1000
    3714:	00021000 	andeq	r1, r2, r0
    3718:	0000107d 	andeq	r1, r0, sp, ror r0
    371c:	00000000 	andeq	r0, r0, r0
    3720:	00010000 	andeq	r0, r1, r0
    3724:	10001f24 	andne	r1, r0, r4, lsr #30
    3728:	10001f42 	andne	r1, r0, r2, asr #30
    372c:	00550001 	subseq	r0, r5, r1
	...
    3738:	001f0e00 	andseq	r0, pc, r0, lsl #28
    373c:	001f4210 	andseq	r4, pc, r0, lsl r2	; <UNPREDICTABLE>
    3740:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    374c:	1f2c0001 	svcne	0x002c0001
    3750:	1f3b1000 	svcne	0x003b1000
    3754:	00011000 	andeq	r1, r1, r0
    3758:	00000053 	andeq	r0, r0, r3, asr r0
    375c:	00000000 	andeq	r0, r0, r0
    3760:	2c010000 	stccs	0, cr0, [r1], {-0}
    3764:	2c10001f 	ldccs	0, cr0, [r0], {31}
    3768:	0110001f 	tsteq	r0, pc, lsl r0
    376c:	00005300 	andeq	r5, r0, r0, lsl #6
    3770:	00000000 	andeq	r0, r0, r0
    3774:	00010000 	andeq	r0, r1, r0
    3778:	10001f30 	andne	r1, r0, r0, lsr pc
    377c:	10001f34 	andne	r1, r0, r4, lsr pc
    3780:	00530001 	subseq	r0, r3, r1
    3784:	00000000 	andeq	r0, r0, r0
    3788:	01000000 	mrseq	r0, (UNDEF: 0)
    378c:	001f2200 	andseq	r2, pc, r0, lsl #4
    3790:	001f4210 	andseq	r4, pc, r0, lsl r2	; <UNPREDICTABLE>
    3794:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    37a0:	1f220100 	svcne	0x00220100
    37a4:	1f221000 	svcne	0x00221000
    37a8:	00011000 	andeq	r1, r1, r0
    37ac:	00000055 	andeq	r0, r0, r5, asr r0
    37b0:	00000000 	andeq	r0, r0, r0
    37b4:	3c000100 	stfccs	f0, [r0], {-0}
    37b8:	4010001f 	andsmi	r0, r0, pc, lsl r0
    37bc:	0110001f 	tsteq	r0, pc, lsl r0
    37c0:	00005500 	andeq	r5, r0, r0, lsl #10
    37c4:	00000000 	andeq	r0, r0, r0
    37c8:	1f4c0000 	svcne	0x004c0000
    37cc:	1f4e1000 	svcne	0x004e1000
    37d0:	00021000 	andeq	r1, r2, r0
    37d4:	1f4e007d 	svcne	0x004e007d
    37d8:	1fc01000 	svcne	0x00c01000
    37dc:	00021000 	andeq	r1, r2, r0
    37e0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3800:	10001f4c 	andne	r1, r0, ip, asr #30
    3804:	10001f7a 	andne	r1, r0, sl, ror pc
    3808:	7a500001 	bvc	1403814 <__RAM_SIZE+0x1303814>
    380c:	7c10001f 	ldcvc	0, cr0, [r0], {31}
    3810:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    3814:	5001f300 	andpl	pc, r1, r0, lsl #6
    3818:	001f7c9f 	mulseq	pc, pc, ip	; <UNPREDICTABLE>
    381c:	001f8210 	andseq	r8, pc, r0, lsl r2	; <UNPREDICTABLE>
    3820:	50000110 	andpl	r0, r0, r0, lsl r1
    3824:	10001f82 	andne	r1, r0, r2, lsl #31
    3828:	10001f84 	andne	r1, r0, r4, lsl #31
    382c:	01f30004 	mvnseq	r0, r4
    3830:	1f849f50 	svcne	0x00849f50
    3834:	1f8a1000 	svcne	0x008a1000
    3838:	00011000 	andeq	r1, r1, r0
    383c:	001f8a50 	andseq	r8, pc, r0, asr sl	; <UNPREDICTABLE>
    3840:	001f8c10 	andseq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>
    3844:	f3000410 	vqshl.u8	d0, d0, d0
    3848:	8c9f5001 	ldchi	0, cr5, [pc], {1}
    384c:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3850:	0110001f 	tsteq	r0, pc, lsl r0
    3854:	1f985000 	svcne	0x00985000
    3858:	1f9a1000 	svcne	0x009a1000
    385c:	00041000 	andeq	r1, r4, r0
    3860:	9f5001f3 	svcls	0x005001f3
    3864:	10001f9a 	mulne	r0, sl, pc	; <UNPREDICTABLE>
    3868:	10001fa2 	andne	r1, r0, r2, lsr #31
    386c:	a2500001 	subsge	r0, r0, #1
    3870:	a510001f 	ldrge	r0, [r0, #-31]	; 0xffffffe1
    3874:	0110001f 	tsteq	r0, pc, lsl r0
    3878:	1fa55100 	svcne	0x00a55100
    387c:	1fc01000 	svcne	0x00c01000
    3880:	00041000 	andeq	r1, r4, r0
    3884:	9f5001f3 	svcls	0x005001f3
	...
    3890:	1f540001 	svcne	0x00540001
    3894:	1fc01000 	svcne	0x00c01000
    3898:	00011000 	andeq	r1, r1, r0
    389c:	00000055 	andeq	r0, r0, r5, asr r0
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	02000200 	andeq	r0, r0, #0, 4
    38a8:	02000200 	andeq	r0, r0, #0, 4
    38ac:	00000200 	andeq	r0, r0, r0, lsl #4
    38b0:	001f7200 	andseq	r7, pc, r0, lsl #4
    38b4:	001f7410 	andseq	r7, pc, r0, lsl r4	; <UNPREDICTABLE>
    38b8:	30000210 	andcc	r0, r0, r0, lsl r2
    38bc:	001f789f 	mulseq	pc, pc, r8	; <UNPREDICTABLE>
    38c0:	001f7c10 	andseq	r7, pc, r0, lsl ip	; <UNPREDICTABLE>
    38c4:	43000210 	movwmi	r0, #528	; 0x210
    38c8:	001f809f 	mulseq	pc, pc, r0	; <UNPREDICTABLE>
    38cc:	001f8210 	andseq	r8, pc, r0, lsl r2	; <UNPREDICTABLE>
    38d0:	43000210 	movwmi	r0, #528	; 0x210
    38d4:	001f889f 	mulseq	pc, pc, r8	; <UNPREDICTABLE>
    38d8:	001f8c10 	andseq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>
    38dc:	43000210 	movwmi	r0, #528	; 0x210
    38e0:	001f969f 	mulseq	pc, pc, r6	; <UNPREDICTABLE>
    38e4:	001f9a10 	andseq	r9, pc, r0, lsl sl	; <UNPREDICTABLE>
    38e8:	43000210 	movwmi	r0, #528	; 0x210
    38ec:	001fae9f 	mulseq	pc, pc, lr	; <UNPREDICTABLE>
    38f0:	001fc010 	andseq	ip, pc, r0, lsl r0	; <UNPREDICTABLE>
    38f4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    3900:	1f580000 	svcne	0x00580000
    3904:	1fc01000 	svcne	0x00c01000
    3908:	00011000 	andeq	r1, r1, r0
    390c:	00000054 	andeq	r0, r0, r4, asr r0
    3910:	00000000 	andeq	r0, r0, r0
    3914:	52000100 	andpl	r0, r0, #0, 2
    3918:	c010001f 	andsgt	r0, r0, pc, lsl r0
    391c:	0110001f 	tsteq	r0, pc, lsl r0
    3920:	00005500 	andeq	r5, r0, r0, lsl #10
    3924:	00000000 	andeq	r0, r0, r0
    3928:	01000000 	mrseq	r0, (UNDEF: 0)
    392c:	10001f52 	andne	r1, r0, r2, asr pc
    3930:	10001f52 	andne	r1, r0, r2, asr pc
    3934:	00550001 	subseq	r0, r5, r1
	...
    3940:	001f5e01 	andseq	r5, pc, r1, lsl #28
    3944:	001f5e10 	andseq	r5, pc, r0, lsl lr	; <UNPREDICTABLE>
    3948:	53000110 	movwpl	r0, #272	; 0x110
	...
    3954:	1f6e0001 	svcne	0x006e0001
    3958:	1f721000 	svcne	0x00721000
    395c:	00011000 	andeq	r1, r1, r0
    3960:	00000055 	andeq	r0, r0, r5, asr r0
    3964:	00000000 	andeq	r0, r0, r0
    3968:	74000100 	strvc	r0, [r0], #-256	; 0xffffff00
    396c:	7810001f 	ldmdavc	r0, {r0, r1, r2, r3, r4}
    3970:	0110001f 	tsteq	r0, pc, lsl r0
    3974:	00005500 	andeq	r5, r0, r0, lsl #10
    3978:	00000000 	andeq	r0, r0, r0
    397c:	00010000 	andeq	r0, r1, r0
    3980:	10001f7c 	andne	r1, r0, ip, ror pc
    3984:	10001f80 	andne	r1, r0, r0, lsl #31
    3988:	00550001 	subseq	r0, r5, r1
    398c:	00000000 	andeq	r0, r0, r0
    3990:	01000000 	mrseq	r0, (UNDEF: 0)
    3994:	001f8400 	andseq	r8, pc, r0, lsl #8
    3998:	001f8810 	andseq	r8, pc, r0, lsl r8	; <UNPREDICTABLE>
    399c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    39a8:	1f920001 	svcne	0x00920001
    39ac:	1f961000 	svcne	0x00961000
    39b0:	00011000 	andeq	r1, r1, r0
    39b4:	00000055 	andeq	r0, r0, r5, asr r0
    39b8:	00000000 	andeq	r0, r0, r0
    39bc:	a6000100 	strge	r0, [r0], -r0, lsl #2
    39c0:	aa10001f 	bge	403a44 <__RAM_SIZE+0x303a44>
    39c4:	0110001f 	tsteq	r0, pc, lsl r0
    39c8:	00005500 	andeq	r5, r0, r0, lsl #10
    39cc:	00000000 	andeq	r0, r0, r0
    39d0:	1fc00000 	svcne	0x00c00000
    39d4:	1fde1000 	svcne	0x00de1000
    39d8:	00021000 	andeq	r1, r2, r0
    39dc:	1fde007d 	svcne	0x00de007d
    39e0:	20281000 	eorcs	r1, r8, r0
    39e4:	00021000 	andeq	r1, r2, r0
    39e8:	2028087d 	eorcs	r0, r8, sp, ror r8
    39ec:	202a1000 	eorcs	r1, sl, r0
    39f0:	00021000 	andeq	r1, r2, r0
    39f4:	202a007d 	eorcs	r0, sl, sp, ror r0
    39f8:	204c1000 	subcs	r1, ip, r0
    39fc:	00021000 	andeq	r1, r2, r0
    3a00:	0000087d 	andeq	r0, r0, sp, ror r8
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	00010000 	andeq	r0, r1, r0
    3a0c:	1fc60001 	svcne	0x00c60001
    3a10:	1fea1000 	svcne	0x00ea1000
    3a14:	00011000 	andeq	r1, r1, r0
    3a18:	00201a53 	eoreq	r1, r0, r3, asr sl
    3a1c:	00204c10 	eoreq	r4, r0, r0, lsl ip
    3a20:	53000110 	movwpl	r0, #272	; 0x110
	...
    3a30:	1fea0000 	svcne	0x00ea0000
    3a34:	1ff01000 	svcne	0x00f01000
    3a38:	00011000 	andeq	r1, r1, r0
    3a3c:	001ffc52 	andseq	pc, pc, r2, asr ip	; <UNPREDICTABLE>
    3a40:	00202210 	eoreq	r2, r0, r0, lsl r2
    3a44:	52000110 	andpl	r0, r0, #16, 2
    3a48:	1000202a 	andne	r2, r0, sl, lsr #32
    3a4c:	1000204c 	andne	r2, r0, ip, asr #32
    3a50:	00520001 	subseq	r0, r2, r1
	...
    3a5c:	001fd800 	andseq	sp, pc, r0, lsl #16
    3a60:	00201e10 	eoreq	r1, r0, r0, lsl lr
    3a64:	51000110 	tstpl	r0, r0, lsl r1
	...
    3a74:	1fe20000 	svcne	0x00e20000
    3a78:	20081000 	andcs	r1, r8, r0
    3a7c:	00011000 	andeq	r1, r1, r0
    3a80:	00200a55 	eoreq	r0, r0, r5, asr sl
    3a84:	00202810 	eoreq	r2, r0, r0, lsl r8
    3a88:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    3a8c:	1000202a 	andne	r2, r0, sl, lsr #32
    3a90:	1000204c 	andne	r2, r0, ip, asr #32
    3a94:	00550001 	subseq	r0, r5, r1
	...
    3aa4:	001fea00 	andseq	lr, pc, r0, lsl #20
    3aa8:	001ff010 	andseq	pc, pc, r0, lsl r0	; <UNPREDICTABLE>
    3aac:	5c000110 	stfpls	f0, [r0], {16}
    3ab0:	10001ff8 	strdne	r1, [r0], -r8
    3ab4:	10002022 	andne	r2, r0, r2, lsr #32
    3ab8:	2a5c0001 	bcs	1703ac4 <__RAM_SIZE+0x1603ac4>
    3abc:	4c100020 	ldcmi	0, cr0, [r0], {32}
    3ac0:	01100020 	tsteq	r0, r0, lsr #32
    3ac4:	00005c00 	andeq	r5, r0, r0, lsl #24
    3ac8:	00000000 	andeq	r0, r0, r0
    3acc:	00010000 	andeq	r0, r1, r0
    3ad0:	10001fc4 	andne	r1, r0, r4, asr #31
    3ad4:	10001fea 	andne	r1, r0, sl, ror #31
    3ad8:	00530001 	subseq	r0, r3, r1
	...
    3ae4:	001fc401 	andseq	ip, pc, r1, lsl #8
    3ae8:	001fc410 	andseq	ip, pc, r0, lsl r4	; <UNPREDICTABLE>
    3aec:	53000110 	movwpl	r0, #272	; 0x110
	...
    3af8:	00010001 	andeq	r0, r1, r1
    3afc:	10001fd0 	ldrdne	r1, [r0], -r0
    3b00:	10001fd4 	ldrdne	r1, [r0], -r4
    3b04:	22530001 	subscs	r0, r3, #1
    3b08:	26100020 	ldrcs	r0, [r0], -r0, lsr #32
    3b0c:	01100020 	tsteq	r0, r0, lsr #32
    3b10:	00005300 	andeq	r5, r0, r0, lsl #6
    3b14:	00000000 	andeq	r0, r0, r0
    3b18:	00010000 	andeq	r0, r1, r0
    3b1c:	10001fe4 	andne	r1, r0, r4, ror #31
    3b20:	10001fea 	andne	r1, r0, sl, ror #31
    3b24:	00530001 	subseq	r0, r3, r1
    3b28:	00000000 	andeq	r0, r0, r0
    3b2c:	01000000 	mrseq	r0, (UNDEF: 0)
    3b30:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3b34:	22100020 	andscs	r0, r0, #32
    3b38:	01100020 	tsteq	r0, r0, lsr #32
    3b3c:	202a5300 	eorcs	r5, sl, r0, lsl #6
    3b40:	204c1000 	subcs	r1, ip, r0
    3b44:	00011000 	andeq	r1, r1, r0
    3b48:	00000053 	andeq	r0, r0, r3, asr r0
    3b4c:	00000000 	andeq	r0, r0, r0
    3b50:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    3b54:	18100020 	ldmdane	r0, {r5}
    3b58:	01100020 	tsteq	r0, r0, lsr #32
    3b5c:	00005300 	andeq	r5, r0, r0, lsl #6
    3b60:	00000000 	andeq	r0, r0, r0
    3b64:	204c0000 	subcs	r0, ip, r0
    3b68:	204e1000 	subcs	r1, lr, r0
    3b6c:	00021000 	andeq	r1, r2, r0
    3b70:	204e007d 	subcs	r0, lr, sp, ror r0
    3b74:	20681000 	rsbcs	r1, r8, r0
    3b78:	00021000 	andeq	r1, r2, r0
    3b7c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3b88:	204c0000 	subcs	r0, ip, r0
    3b8c:	205b1000 	subscs	r1, fp, r0
    3b90:	00011000 	andeq	r1, r1, r0
    3b94:	00205b50 	eoreq	r5, r0, r0, asr fp
    3b98:	00206810 	eoreq	r6, r0, r0, lsl r8
    3b9c:	f3000410 	vqshl.u8	d0, d0, d0
    3ba0:	009f5001 	addseq	r5, pc, r1
    3ba4:	00000000 	andeq	r0, r0, r0
    3ba8:	01000000 	mrseq	r0, (UNDEF: 0)
    3bac:	00205400 	eoreq	r5, r0, r0, lsl #8
    3bb0:	00206210 	eoreq	r6, r0, r0, lsl r2
    3bb4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3bc0:	20520001 	subscs	r0, r2, r1
    3bc4:	20621000 	rsbcs	r1, r2, r0
    3bc8:	00011000 	andeq	r1, r1, r0
    3bcc:	00000054 	andeq	r0, r0, r4, asr r0
    3bd0:	00000000 	andeq	r0, r0, r0
    3bd4:	52010000 	andpl	r0, r1, #0
    3bd8:	52100020 	andspl	r0, r0, #32
    3bdc:	01100020 	tsteq	r0, r0, lsr #32
    3be0:	00005400 	andeq	r5, r0, r0, lsl #8
    3be4:	00000000 	andeq	r0, r0, r0
    3be8:	00010000 	andeq	r0, r1, r0
    3bec:	1000205c 	andne	r2, r0, ip, asr r0
    3bf0:	10002060 	andne	r2, r0, r0, rrx
    3bf4:	00540001 	subseq	r0, r4, r1
    3bf8:	00000000 	andeq	r0, r0, r0
    3bfc:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    3c00:	72100020 	andsvc	r0, r0, #32
    3c04:	02100020 	andseq	r0, r0, #32
    3c08:	72007d00 	andvc	r7, r0, #0, 26
    3c0c:	24100020 	ldrcs	r0, [r0], #-32	; 0xffffffe0
    3c10:	02100021 	andseq	r0, r0, #33	; 0x21
    3c14:	24087d00 	strcs	r7, [r8], #-3328	; 0xfffff300
    3c18:	40100021 	andsmi	r0, r0, r1, lsr #32
    3c1c:	02100021 	andseq	r0, r0, #33	; 0x21
    3c20:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    3c2c:	6c000000 	stcvs	0, cr0, [r0], {-0}
    3c30:	74100020 	ldrvc	r0, [r0], #-32	; 0xffffffe0
    3c34:	01100020 	tsteq	r0, r0, lsr #32
    3c38:	21245300 			; <UNDEFINED> instruction: 0x21245300
    3c3c:	21401000 	mrscs	r1, (UNDEF: 64)
    3c40:	00011000 	andeq	r1, r1, r0
    3c44:	00000053 	andeq	r0, r0, r3, asr r0
    3c48:	00000000 	andeq	r0, r0, r0
    3c4c:	76000000 	strvc	r0, [r0], -r0
    3c50:	82100020 	andshi	r0, r0, #32
    3c54:	01100020 	tsteq	r0, r0, lsr #32
    3c58:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3c64:	1000207a 	andne	r2, r0, sl, ror r0
    3c68:	10002124 	andne	r2, r0, r4, lsr #2
    3c6c:	00540001 	subseq	r0, r4, r1
    3c70:	00000000 	andeq	r0, r0, r0
    3c74:	01000000 	mrseq	r0, (UNDEF: 0)
    3c78:	01000000 	mrseq	r0, (UNDEF: 0)
    3c7c:	84000100 	strhi	r0, [r0], #-256	; 0xffffff00
    3c80:	9a100020 	bls	403d08 <__RAM_SIZE+0x303d08>
    3c84:	01100020 	tsteq	r0, r0, lsr #32
    3c88:	20bc5300 	adcscs	r5, ip, r0, lsl #6
    3c8c:	20e91000 	rsccs	r1, r9, r0
    3c90:	00011000 	andeq	r1, r1, r0
    3c94:	0020f053 	eoreq	pc, r0, r3, asr r0	; <UNPREDICTABLE>
    3c98:	00210710 	eoreq	r0, r1, r0, lsl r7
    3c9c:	53000110 	movwpl	r0, #272	; 0x110
    3ca0:	1000210e 	andne	r2, r0, lr, lsl #2
    3ca4:	1000211e 	andne	r2, r0, lr, lsl r1
    3ca8:	00530001 	subseq	r0, r3, r1
    3cac:	00000000 	andeq	r0, r0, r0
    3cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    3cb4:	00000000 	andeq	r0, r0, r0
    3cb8:	00208200 	eoreq	r8, r0, r0, lsl #4
    3cbc:	00208e10 	eoreq	r8, r0, r0, lsl lr
    3cc0:	53000110 	movwpl	r0, #272	; 0x110
    3cc4:	100020bc 	strhne	r2, [r0], -ip
    3cc8:	100020e9 	andne	r2, r0, r9, ror #1
    3ccc:	10530001 	subsne	r0, r3, r1
    3cd0:	1a100021 	bne	403d5c <__RAM_SIZE+0x303d5c>
    3cd4:	01100021 	tsteq	r0, r1, lsr #32
    3cd8:	00005300 	andeq	r5, r0, r0, lsl #6
    3cdc:	00000000 	andeq	r0, r0, r0
    3ce0:	01000000 	mrseq	r0, (UNDEF: 0)
    3ce4:	10002082 	andne	r2, r0, r2, lsl #1
    3ce8:	10002082 	andne	r2, r0, r2, lsl #1
    3cec:	00530001 	subseq	r0, r3, r1
    3cf0:	00000000 	andeq	r0, r0, r0
    3cf4:	01000000 	mrseq	r0, (UNDEF: 0)
    3cf8:	00208e00 	eoreq	r8, r0, r0, lsl #28
    3cfc:	00209210 	eoreq	r9, r0, r0, lsl r2
    3d00:	53000110 	movwpl	r0, #272	; 0x110
	...
    3d0c:	20e00001 	rsccs	r0, r0, r1
    3d10:	20e41000 	rsccs	r1, r4, r0
    3d14:	00011000 	andeq	r1, r1, r0
    3d18:	00000053 	andeq	r0, r0, r3, asr r0
    3d1c:	00000000 	andeq	r0, r0, r0
    3d20:	ee010100 	adfs	f0, f1, f0
    3d24:	f0100020 			; <UNDEFINED> instruction: 0xf0100020
    3d28:	01100020 	tsteq	r0, r0, lsr #32
    3d2c:	00005300 	andeq	r5, r0, r0, lsl #6
    3d30:	00000000 	andeq	r0, r0, r0
    3d34:	01000000 	mrseq	r0, (UNDEF: 0)
    3d38:	100020ee 	andne	r2, r0, lr, ror #1
    3d3c:	100020ee 	andne	r2, r0, lr, ror #1
    3d40:	00530001 	subseq	r0, r3, r1
    3d44:	00000000 	andeq	r0, r0, r0
    3d48:	01000000 	mrseq	r0, (UNDEF: 0)
    3d4c:	0020fe00 	eoreq	pc, r0, r0, lsl #28
    3d50:	00210210 	eoreq	r0, r1, r0, lsl r2
    3d54:	53000110 	movwpl	r0, #272	; 0x110
	...
    3d60:	210c0001 	tstcs	ip, r1
    3d64:	21101000 	tstcs	r0, r0
    3d68:	00011000 	andeq	r1, r1, r0
    3d6c:	00000053 	andeq	r0, r0, r3, asr r0
    3d70:	00000000 	andeq	r0, r0, r0
    3d74:	0c010000 	stceq	0, cr0, [r1], {-0}
    3d78:	0c100021 	ldceq	0, cr0, [r0], {33}	; 0x21
    3d7c:	01100021 	tsteq	r0, r1, lsr #32
    3d80:	00005300 	andeq	r5, r0, r0, lsl #6
    3d84:	00000000 	andeq	r0, r0, r0
    3d88:	00010000 	andeq	r0, r1, r0
    3d8c:	100020b4 	strhne	r2, [r0], -r4
    3d90:	100020ba 	strhne	r2, [r0], -sl
    3d94:	00530001 	subseq	r0, r3, r1
	...
    3da0:	0020ae01 	eoreq	sl, r0, r1, lsl #28
    3da4:	0020ae10 	eoreq	sl, r0, r0, lsl lr
    3da8:	53000110 	movwpl	r0, #272	; 0x110
	...
    3db4:	20b40100 	adcscs	r0, r4, r0, lsl #2
    3db8:	20b41000 	adcscs	r1, r4, r0
    3dbc:	00011000 	andeq	r1, r1, r0
    3dc0:	00000053 	andeq	r0, r0, r3, asr r0
    3dc4:	00000000 	andeq	r0, r0, r0
    3dc8:	b6000100 	strlt	r0, [r0], -r0, lsl #2
    3dcc:	ba100020 	blt	403e54 <__RAM_SIZE+0x303e54>
    3dd0:	01100020 	tsteq	r0, r0, lsr #32
    3dd4:	00005300 	andeq	r5, r0, r0, lsl #6
    3dd8:	00000000 	andeq	r0, r0, r0
    3ddc:	21400000 	mrscs	r0, (UNDEF: 64)
    3de0:	21421000 	mrscs	r1, (UNDEF: 66)
    3de4:	00021000 	andeq	r1, r2, r0
    3de8:	2142007d 	hvccs	8205	; 0x200d
    3dec:	24621000 	strbtcs	r1, [r2], #-0
    3df0:	00021000 	andeq	r1, r2, r0
    3df4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3e00:	01000000 	mrseq	r0, (UNDEF: 0)
    3e04:	00000001 	andeq	r0, r0, r1
    3e08:	10002140 	andne	r2, r0, r0, asr #2
    3e0c:	1000214a 	andne	r2, r0, sl, asr #2
    3e10:	4a500001 	bmi	1403e1c <__RAM_SIZE+0x1303e1c>
    3e14:	64100021 	ldrvs	r0, [r0], #-33	; 0xffffffdf
    3e18:	01100023 	tsteq	r0, r3, lsr #32
    3e1c:	23645400 	cmncs	r4, #0, 8
    3e20:	238a1000 	orrcs	r1, sl, #0
    3e24:	00041000 	andeq	r1, r4, r0
    3e28:	9f5001f3 	svcls	0x005001f3
    3e2c:	1000238a 	andne	r2, r0, sl, lsl #7
    3e30:	100023c8 	andne	r2, r0, r8, asr #7
    3e34:	04540001 	ldrbeq	r0, [r4], #-1
    3e38:	62100024 	andsvs	r0, r0, #36	; 0x24
    3e3c:	01100024 	tsteq	r0, r4, lsr #32
    3e40:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3e50:	21760000 	cmncs	r6, r0
    3e54:	21921000 	orrscs	r1, r2, r0
    3e58:	00011000 	andeq	r1, r1, r0
    3e5c:	00219252 	eoreq	r9, r1, r2, asr r2
    3e60:	00219410 	eoreq	r9, r1, r0, lsl r4
    3e64:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    3e68:	0021fa2c 	eoreq	pc, r1, ip, lsr #20
    3e6c:	00223410 	eoreq	r3, r2, r0, lsl r4
    3e70:	52000110 	andpl	r0, r0, #16, 2
    3e74:	100022c6 	andne	r2, r0, r6, asr #5
    3e78:	100022cc 	andne	r2, r0, ip, asr #5
    3e7c:	00520001 	subseq	r0, r2, r1
	...
    3e8c:	00220a00 	eoreq	r0, r2, r0, lsl #20
    3e90:	00222a10 	eoreq	r2, r2, r0, lsl sl
    3e94:	51000110 	tstpl	r0, r0, lsl r1
    3e98:	1000222a 	andne	r2, r0, sl, lsr #4
    3e9c:	10002234 	andne	r2, r0, r4, lsr r2
    3ea0:	72310005 	eorsvc	r0, r1, #5
    3ea4:	c69f2400 	ldrgt	r2, [pc], r0, lsl #8
    3ea8:	cc100022 	ldcgt	0, cr0, [r0], {34}	; 0x22
    3eac:	01100022 	tsteq	r0, r2, lsr #32
    3eb0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3ec0:	1000218e 	andne	r2, r0, lr, lsl #3
    3ec4:	1000219c 	mulne	r0, ip, r1
    3ec8:	fa530001 	blx	14c3ed4 <__RAM_SIZE+0x13c3ed4>
    3ecc:	fc100021 	ldc2	0, cr0, [r0], {33}	; 0x21
    3ed0:	01100021 	tsteq	r0, r1, lsr #32
    3ed4:	21fc5300 	mvnscs	r5, r0, lsl #6
    3ed8:	22001000 	andcs	r1, r0, #0
    3edc:	00071000 	andeq	r1, r7, r0
    3ee0:	24320072 	ldrtcs	r0, [r2], #-114	; 0xffffff8e
    3ee4:	00220073 	eoreq	r0, r2, r3, ror r0
	...
    3ef0:	00219200 	eoreq	r9, r1, r0, lsl #4
    3ef4:	00219c10 	eoreq	r9, r1, r0, lsl ip
    3ef8:	52000110 	andpl	r0, r0, #16, 2
	...
    3f0c:	22240000 	eorcs	r0, r4, #0
    3f10:	22541000 	subscs	r1, r4, #0
    3f14:	00011000 	andeq	r1, r1, r0
    3f18:	00225453 	eoreq	r5, r2, r3, asr r4
    3f1c:	00225610 	eoreq	r5, r2, r0, lsl r6
    3f20:	73000210 	movwvc	r0, #528	; 0x210
    3f24:	0022c600 	eoreq	ip, r2, r0, lsl #12
    3f28:	0022c810 	eoreq	ip, r2, r0, lsl r8
    3f2c:	53000110 	movwpl	r0, #272	; 0x110
    3f30:	100022c8 	andne	r2, r0, r8, asr #5
    3f34:	100022ca 	andne	r2, r0, sl, asr #5
    3f38:	00730002 	rsbseq	r0, r3, r2
    3f3c:	100022cc 	andne	r2, r0, ip, asr #5
    3f40:	100022f0 	strdne	r2, [r0], -r0
    3f44:	00530001 	subseq	r0, r3, r1
	...
    3f50:	00238600 	eoreq	r8, r3, r0, lsl #12
    3f54:	00238e10 	eoreq	r8, r3, r0, lsl lr
    3f58:	53000110 	movwpl	r0, #272	; 0x110
	...
    3f68:	10002296 	mulne	r0, r6, r2
    3f6c:	100022a0 	andne	r2, r0, r0, lsr #5
    3f70:	a2530001 	subsge	r0, r3, #1
    3f74:	a8100023 	ldmdage	r0, {r0, r1, r5}
    3f78:	01100023 	tsteq	r0, r3, lsr #32
    3f7c:	00005300 	andeq	r5, r0, r0, lsl #6
    3f80:	00000000 	andeq	r0, r0, r0
    3f84:	00010000 	andeq	r0, r1, r0
    3f88:	00010000 	andeq	r0, r1, r0
    3f8c:	21540001 	cmpcs	r4, r1
    3f90:	21641000 	cmncs	r4, r0
    3f94:	00011000 	andeq	r1, r1, r0
    3f98:	00219c53 	eoreq	r9, r1, r3, asr ip
    3f9c:	0021c910 	eoreq	ip, r1, r0, lsl r9
    3fa0:	53000110 	movwpl	r0, #272	; 0x110
    3fa4:	100021d0 	ldrdne	r2, [r0], -r0
    3fa8:	100021e7 	andne	r2, r0, r7, ror #3
    3fac:	ee530001 	cdp	0, 5, cr0, cr3, cr1, {0}
    3fb0:	fa100021 	blx	40403c <__RAM_SIZE+0x30403c>
    3fb4:	01100021 	tsteq	r0, r1, lsr #32
    3fb8:	00005300 	andeq	r5, r0, r0, lsl #6
    3fbc:	00000000 	andeq	r0, r0, r0
    3fc0:	00010000 	andeq	r0, r1, r0
    3fc4:	00000000 	andeq	r0, r0, r0
    3fc8:	10002152 	andne	r2, r0, r2, asr r1
    3fcc:	1000215e 	andne	r2, r0, lr, asr r1
    3fd0:	9c530001 	mrrcls	0, 0, r0, r3, cr1
    3fd4:	c9100021 	ldmdbgt	r0, {r0, r5}
    3fd8:	01100021 	tsteq	r0, r1, lsr #32
    3fdc:	21f05300 	mvnscs	r5, r0, lsl #6
    3fe0:	21fa1000 	mvnscs	r1, r0
    3fe4:	00011000 	andeq	r1, r1, r0
    3fe8:	00000053 	andeq	r0, r0, r3, asr r0
    3fec:	00000000 	andeq	r0, r0, r0
    3ff0:	52010000 	andpl	r0, r1, #0
    3ff4:	52100021 	andspl	r0, r0, #33	; 0x21
    3ff8:	01100021 	tsteq	r0, r1, lsr #32
    3ffc:	00005300 	andeq	r5, r0, r0, lsl #6
    4000:	00000000 	andeq	r0, r0, r0
    4004:	00010000 	andeq	r0, r1, r0
    4008:	1000215e 	andne	r2, r0, lr, asr r1
    400c:	10002162 	andne	r2, r0, r2, ror #2
    4010:	00530001 	subseq	r0, r3, r1
    4014:	00000000 	andeq	r0, r0, r0
    4018:	01000000 	mrseq	r0, (UNDEF: 0)
    401c:	0021c000 	eoreq	ip, r1, r0
    4020:	0021c410 	eoreq	ip, r1, r0, lsl r4
    4024:	53000110 	movwpl	r0, #272	; 0x110
	...
    4030:	21ce0101 	biccs	r0, lr, r1, lsl #2
    4034:	21d01000 	bicscs	r1, r0, r0
    4038:	00011000 	andeq	r1, r1, r0
    403c:	00000053 	andeq	r0, r0, r3, asr r0
    4040:	00000000 	andeq	r0, r0, r0
    4044:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    4048:	ce100021 	cdpgt	0, 1, cr0, cr0, cr1, {1}
    404c:	01100021 	tsteq	r0, r1, lsr #32
    4050:	00005300 	andeq	r5, r0, r0, lsl #6
    4054:	00000000 	andeq	r0, r0, r0
    4058:	00010000 	andeq	r0, r1, r0
    405c:	100021de 	ldrdne	r2, [r0], -lr
    4060:	100021e2 	andne	r2, r0, r2, ror #3
    4064:	00530001 	subseq	r0, r3, r1
    4068:	00000000 	andeq	r0, r0, r0
    406c:	01000000 	mrseq	r0, (UNDEF: 0)
    4070:	0021ec00 	eoreq	lr, r1, r0, lsl #24
    4074:	0021f010 	eoreq	pc, r1, r0, lsl r0	; <UNPREDICTABLE>
    4078:	53000110 	movwpl	r0, #272	; 0x110
	...
    4084:	21ec0100 	mvncs	r0, r0, lsl #2
    4088:	21ec1000 	mvncs	r1, r0
    408c:	00011000 	andeq	r1, r1, r0
    4090:	00000053 	andeq	r0, r0, r3, asr r0
    4094:	00000000 	andeq	r0, r0, r0
    4098:	00000100 	andeq	r0, r0, r0, lsl #2
    409c:	01000100 	mrseq	r0, (UNDEF: 16)
    40a0:	00228400 	eoreq	r8, r2, r0, lsl #8
    40a4:	00229410 	eoreq	r9, r2, r0, lsl r4
    40a8:	53000110 	movwpl	r0, #272	; 0x110
    40ac:	100022f0 	strdne	r2, [r0], -r0
    40b0:	1000231d 	andne	r2, r0, sp, lsl r3
    40b4:	24530001 	ldrbcs	r0, [r3], #-1
    40b8:	3b100023 	blcc	40414c <__RAM_SIZE+0x30414c>
    40bc:	01100023 	tsteq	r0, r3, lsr #32
    40c0:	23425300 	movtcs	r5, #8960	; 0x2300
    40c4:	234e1000 	movtcs	r1, #57344	; 0xe000
    40c8:	00011000 	andeq	r1, r1, r0
    40cc:	00000053 	andeq	r0, r0, r3, asr r0
    40d0:	00000000 	andeq	r0, r0, r0
    40d4:	00000100 	andeq	r0, r0, r0, lsl #2
    40d8:	82000000 	andhi	r0, r0, #0
    40dc:	8e100022 	cdphi	0, 1, cr0, cr0, cr2, {1}
    40e0:	01100022 	tsteq	r0, r2, lsr #32
    40e4:	22f05300 	rscscs	r5, r0, #0, 6
    40e8:	231d1000 	tstcs	sp, #0
    40ec:	00011000 	andeq	r1, r1, r0
    40f0:	00234453 	eoreq	r4, r3, r3, asr r4
    40f4:	00234e10 	eoreq	r4, r3, r0, lsl lr
    40f8:	53000110 	movwpl	r0, #272	; 0x110
	...
    4104:	22820100 	addcs	r0, r2, #0, 2
    4108:	22821000 	addcs	r1, r2, #0
    410c:	00011000 	andeq	r1, r1, r0
    4110:	00000053 	andeq	r0, r0, r3, asr r0
    4114:	00000000 	andeq	r0, r0, r0
    4118:	8e000100 	adfhis	f0, f0, f0
    411c:	92100022 	andsls	r0, r0, #34	; 0x22
    4120:	01100022 	tsteq	r0, r2, lsr #32
    4124:	00005300 	andeq	r5, r0, r0, lsl #6
    4128:	00000000 	andeq	r0, r0, r0
    412c:	00010000 	andeq	r0, r1, r0
    4130:	10002314 	andne	r2, r0, r4, lsl r3
    4134:	10002318 	andne	r2, r0, r8, lsl r3
    4138:	00530001 	subseq	r0, r3, r1
    413c:	00000000 	andeq	r0, r0, r0
    4140:	01000000 	mrseq	r0, (UNDEF: 0)
    4144:	00232201 	eoreq	r2, r3, r1, lsl #4
    4148:	00232410 	eoreq	r2, r3, r0, lsl r4
    414c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4158:	23220100 			; <UNDEFINED> instruction: 0x23220100
    415c:	23221000 			; <UNDEFINED> instruction: 0x23221000
    4160:	00011000 	andeq	r1, r1, r0
    4164:	00000053 	andeq	r0, r0, r3, asr r0
    4168:	00000000 	andeq	r0, r0, r0
    416c:	32000100 	andcc	r0, r0, #0, 2
    4170:	36100023 	ldrcc	r0, [r0], -r3, lsr #32
    4174:	01100023 	tsteq	r0, r3, lsr #32
    4178:	00005300 	andeq	r5, r0, r0, lsl #6
    417c:	00000000 	andeq	r0, r0, r0
    4180:	00010000 	andeq	r0, r1, r0
    4184:	10002340 	andne	r2, r0, r0, asr #6
    4188:	10002344 	andne	r2, r0, r4, asr #6
    418c:	00530001 	subseq	r0, r3, r1
	...
    4198:	00234001 	eoreq	r4, r3, r1
    419c:	00234010 	eoreq	r4, r3, r0, lsl r0
    41a0:	53000110 	movwpl	r0, #272	; 0x110
	...
    41ac:	00000001 	andeq	r0, r0, r1
    41b0:	00010001 	andeq	r0, r1, r1
    41b4:	10002390 	mulne	r0, r0, r3
    41b8:	100023a0 	andne	r2, r0, r0, lsr #7
    41bc:	04530001 	ldrbeq	r0, [r3], #-1
    41c0:	31100024 	tstcc	r0, r4, lsr #32
    41c4:	01100024 	tsteq	r0, r4, lsr #32
    41c8:	24385300 	ldrtcs	r5, [r8], #-768	; 0xfffffd00
    41cc:	244f1000 	strbcs	r1, [pc], #-0	; 41d4 <_Min_Stack_Size+0x31d4>
    41d0:	00011000 	andeq	r1, r1, r0
    41d4:	00245653 	eoreq	r5, r4, r3, asr r6
    41d8:	00246210 	eoreq	r6, r4, r0, lsl r2
    41dc:	53000110 	movwpl	r0, #272	; 0x110
	...
    41e8:	00000001 	andeq	r0, r0, r1
    41ec:	238e0000 	orrcs	r0, lr, #0
    41f0:	239a1000 	orrscs	r1, sl, #0
    41f4:	00011000 	andeq	r1, r1, r0
    41f8:	00240453 	eoreq	r0, r4, r3, asr r4
    41fc:	00243110 	eoreq	r3, r4, r0, lsl r1
    4200:	53000110 	movwpl	r0, #272	; 0x110
    4204:	10002458 	andne	r2, r0, r8, asr r4
    4208:	10002462 	andne	r2, r0, r2, ror #8
    420c:	00530001 	subseq	r0, r3, r1
	...
    4218:	00238e01 	eoreq	r8, r3, r1, lsl #28
    421c:	00238e10 	eoreq	r8, r3, r0, lsl lr
    4220:	53000110 	movwpl	r0, #272	; 0x110
	...
    422c:	239a0001 	orrscs	r0, sl, #1
    4230:	239e1000 	orrscs	r1, lr, #0
    4234:	00011000 	andeq	r1, r1, r0
    4238:	00000053 	andeq	r0, r0, r3, asr r0
    423c:	00000000 	andeq	r0, r0, r0
    4240:	28000100 	stmdacs	r0, {r8}
    4244:	2c100024 	ldccs	0, cr0, [r0], {36}	; 0x24
    4248:	01100024 	tsteq	r0, r4, lsr #32
    424c:	00005300 	andeq	r5, r0, r0, lsl #6
    4250:	00000000 	andeq	r0, r0, r0
    4254:	01010000 	mrseq	r0, (UNDEF: 1)
    4258:	10002436 	andne	r2, r0, r6, lsr r4
    425c:	10002438 	andne	r2, r0, r8, lsr r4
    4260:	00530001 	subseq	r0, r3, r1
	...
    426c:	00243601 	eoreq	r3, r4, r1, lsl #12
    4270:	00243610 	eoreq	r3, r4, r0, lsl r6
    4274:	53000110 	movwpl	r0, #272	; 0x110
	...
    4280:	24460001 	strbcs	r0, [r6], #-1
    4284:	244a1000 	strbcs	r1, [sl], #-0
    4288:	00011000 	andeq	r1, r1, r0
    428c:	00000053 	andeq	r0, r0, r3, asr r0
    4290:	00000000 	andeq	r0, r0, r0
    4294:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    4298:	58100024 	ldmdapl	r0, {r2, r5}
    429c:	01100024 	tsteq	r0, r4, lsr #32
    42a0:	00005300 	andeq	r5, r0, r0, lsl #6
    42a4:	00000000 	andeq	r0, r0, r0
    42a8:	01000000 	mrseq	r0, (UNDEF: 0)
    42ac:	10002454 	andne	r2, r0, r4, asr r4
    42b0:	10002454 	andne	r2, r0, r4, asr r4
    42b4:	00530001 	subseq	r0, r3, r1
	...
    42c0:	00223401 	eoreq	r3, r2, r1, lsl #8
    42c4:	00223410 	eoreq	r3, r2, r0, lsl r4
    42c8:	52000110 	andpl	r0, r0, #16, 2
	...
    42d4:	22be0001 	adcscs	r0, lr, #1
    42d8:	22c61000 	sbccs	r1, r6, #0
    42dc:	00011000 	andeq	r1, r1, r0
    42e0:	00000053 	andeq	r0, r0, r3, asr r0
    42e4:	00000000 	andeq	r0, r0, r0
    42e8:	b4010000 	strlt	r0, [r1], #-0
    42ec:	b4100022 	ldrlt	r0, [r0], #-34	; 0xffffffde
    42f0:	01100022 	tsteq	r0, r2, lsr #32
    42f4:	00005300 	andeq	r5, r0, r0, lsl #6
    42f8:	00000000 	andeq	r0, r0, r0
    42fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4300:	100022be 			; <UNDEFINED> instruction: 0x100022be
    4304:	100022be 			; <UNDEFINED> instruction: 0x100022be
    4308:	00530001 	subseq	r0, r3, r1
    430c:	00000000 	andeq	r0, r0, r0
    4310:	01000000 	mrseq	r0, (UNDEF: 0)
    4314:	0022c000 	eoreq	ip, r2, r0
    4318:	0022c410 	eoreq	ip, r2, r0, lsl r4
    431c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4328:	22d00100 	sbcscs	r0, r0, #0, 2
    432c:	22d01000 	sbcscs	r1, r0, #0
    4330:	00011000 	andeq	r1, r1, r0
    4334:	00000051 	andeq	r0, r0, r1, asr r0
    4338:	00000000 	andeq	r0, r0, r0
    433c:	c2000100 	andgt	r0, r0, #0, 2
    4340:	c8100023 	ldmdagt	r0, {r0, r1, r5}
    4344:	01100023 	tsteq	r0, r3, lsr #32
    4348:	00005300 	andeq	r5, r0, r0, lsl #6
    434c:	00000000 	andeq	r0, r0, r0
    4350:	01000000 	mrseq	r0, (UNDEF: 0)
    4354:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    4358:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    435c:	00530001 	subseq	r0, r3, r1
	...
    4368:	0023c201 	eoreq	ip, r3, r1, lsl #4
    436c:	0023c210 	eoreq	ip, r3, r0, lsl r2
    4370:	53000110 	movwpl	r0, #272	; 0x110
	...
    437c:	23c40001 	biccs	r0, r4, #1
    4380:	23c81000 	biccs	r1, r8, #0
    4384:	00011000 	andeq	r1, r1, r0
    4388:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4398:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    43a4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    43a8:	00000008 	andeq	r0, r0, r8
	...
    43bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    43c8:	01f30004 	mvnseq	r0, r4
    43cc:	00009f50 	andeq	r9, r0, r0, asr pc
    43d0:	00000000 	andeq	r0, r0, r0
    43d4:	00010000 	andeq	r0, r1, r0
	...
    43e0:	00540001 	subseq	r0, r4, r1
	...
    43f4:	01000000 	mrseq	r0, (UNDEF: 0)
    43f8:	00005300 	andeq	r5, r0, r0, lsl #6
    43fc:	00000000 	andeq	r0, r0, r0
    4400:	00020000 	andeq	r0, r2, r0
    4404:	00003070 	andeq	r3, r0, r0, ror r0
    4408:	00000000 	andeq	r0, r0, r0
    440c:	00010000 	andeq	r0, r1, r0
	...
    4418:	00540001 	subseq	r0, r4, r1
	...
    4424:	00000001 	andeq	r0, r0, r1
    4428:	00000000 	andeq	r0, r0, r0
    442c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4438:	00000001 	andeq	r0, r0, r1
    443c:	00000000 	andeq	r0, r0, r0
    4440:	00010000 	andeq	r0, r1, r0
    4444:	00000054 	andeq	r0, r0, r4, asr r0
    4448:	00000000 	andeq	r0, r0, r0
    444c:	00246400 	eoreq	r6, r4, r0, lsl #8
    4450:	00246610 	eoreq	r6, r4, r0, lsl r6
    4454:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4458:	00246600 	eoreq	r6, r4, r0, lsl #12
    445c:	00272010 	eoreq	r2, r7, r0, lsl r0
    4460:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4464:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    4470:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    447c:	00246400 	eoreq	r6, r4, r0, lsl #8
    4480:	00247010 	eoreq	r7, r4, r0, lsl r0
    4484:	50000110 	andpl	r0, r0, r0, lsl r1
    4488:	10002470 	andne	r2, r0, r0, ror r4
    448c:	100024e6 	andne	r2, r0, r6, ror #9
    4490:	e6540001 	ldrb	r0, [r4], -r1
    4494:	30100024 	andscc	r0, r0, r4, lsr #32
    4498:	01100025 	tsteq	r0, r5, lsr #32
    449c:	25325500 	ldrcs	r5, [r2, #-1280]!	; 0xfffffb00
    44a0:	253a1000 	ldrcs	r1, [sl, #-0]!
    44a4:	00011000 	andeq	r1, r1, r0
    44a8:	00253a50 	eoreq	r3, r5, r0, asr sl
    44ac:	00254210 	eoreq	r4, r5, r0, lsl r2
    44b0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    44b4:	10002542 	andne	r2, r0, r2, asr #10
    44b8:	10002546 	andne	r2, r0, r6, asr #10
    44bc:	46500001 	ldrbmi	r0, [r0], -r1
    44c0:	80100025 	andshi	r0, r0, r5, lsr #32
    44c4:	01100026 	tsteq	r0, r6, lsr #32
    44c8:	26805400 	strcs	r5, [r0], r0, lsl #8
    44cc:	27201000 	strcs	r1, [r0, -r0]!
    44d0:	00011000 	andeq	r1, r1, r0
    44d4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    44e8:	00246400 	eoreq	r6, r4, r0, lsl #8
    44ec:	00247010 	eoreq	r7, r4, r0, lsl r0
    44f0:	51000110 	tstpl	r0, r0, lsl r1
    44f4:	10002470 	andne	r2, r0, r0, ror r4
    44f8:	10002532 	andne	r2, r0, r2, lsr r5
    44fc:	01f30004 	mvnseq	r0, r4
    4500:	25329f51 	ldrcs	r9, [r2, #-3921]!	; 0xfffff0af
    4504:	253a1000 	ldrcs	r1, [sl, #-0]!
    4508:	00011000 	andeq	r1, r1, r0
    450c:	00253a51 	eoreq	r3, r5, r1, asr sl
    4510:	00254210 	eoreq	r4, r5, r0, lsl r2
    4514:	f3000410 	vqshl.u8	d0, d0, d0
    4518:	429f5101 	addsmi	r5, pc, #1073741824	; 0x40000000
    451c:	49100025 	ldmdbmi	r0, {r0, r2, r5}
    4520:	01100025 	tsteq	r0, r5, lsr #32
    4524:	25495100 	strbcs	r5, [r9, #-256]	; 0xffffff00
    4528:	27201000 	strcs	r1, [r0, -r0]!
    452c:	00041000 	andeq	r1, r4, r0
    4530:	9f5101f3 	svcls	0x005101f3
	...
    4540:	10002498 	mulne	r0, r8, r4
    4544:	100024b0 			; <UNDEFINED> instruction: 0x100024b0
    4548:	ac520001 	mrrcge	0, 0, r0, r2, cr1
    454c:	c4100025 	ldrgt	r0, [r0], #-37	; 0xffffffdb
    4550:	01100025 	tsteq	r0, r5, lsr #32
    4554:	00005200 	andeq	r5, r0, r0, lsl #4
    4558:	00000000 	andeq	r0, r0, r0
    455c:	00010000 	andeq	r0, r1, r0
    4560:	100025ca 	andne	r2, r0, sl, asr #11
    4564:	10002616 	andne	r2, r0, r6, lsl r6
    4568:	9f300002 	svcls	0x00300002
	...
    4574:	00000002 	andeq	r0, r0, r2
    4578:	25ca0000 	strbcs	r0, [sl]
    457c:	25d41000 	ldrbcs	r1, [r4]
    4580:	00011000 	andeq	r1, r1, r0
    4584:	0025da52 	eoreq	sp, r5, r2, asr sl
    4588:	0025de10 	eoreq	sp, r5, r0, lsl lr
    458c:	52000110 	andpl	r0, r0, #16, 2
    4590:	100025de 	ldrdne	r2, [r0], -lr
    4594:	10002602 	andne	r2, r0, r2, lsl #12
    4598:	00710002 	rsbseq	r0, r1, r2
	...
    45a8:	25c00000 	strbcs	r0, [r0]
    45ac:	25d41000 	ldrbcs	r1, [r4]
    45b0:	00011000 	andeq	r1, r1, r0
    45b4:	0025d453 	eoreq	sp, r5, r3, asr r4
    45b8:	0025da10 	eoreq	sp, r5, r0, lsl sl
    45bc:	52000110 	andpl	r0, r0, #16, 2
    45c0:	100025da 	ldrdne	r2, [r0], -sl
    45c4:	100025dc 	ldrdne	r2, [r0], -ip
    45c8:	00530001 	subseq	r0, r3, r1
	...
    45d8:	00250000 	eoreq	r0, r5, r0
    45dc:	00250410 	eoreq	r0, r5, r0, lsl r4
    45e0:	53000110 	movwpl	r0, #272	; 0x110
    45e4:	100025ea 	andne	r2, r0, sl, ror #11
    45e8:	100025f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    45ec:	50530001 	subspl	r0, r3, r1
    45f0:	5a100026 	bpl	404690 <__RAM_SIZE+0x304690>
    45f4:	01100026 	tsteq	r0, r6, lsr #32
    45f8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4608:	1000249a 	mulne	r0, sl, r4
    460c:	100024b0 			; <UNDEFINED> instruction: 0x100024b0
    4610:	ac530001 	mrrcge	0, 0, r0, r3, cr1
    4614:	b6100025 	ldrlt	r0, [r0], -r5, lsr #32
    4618:	01100025 	tsteq	r0, r5, lsr #32
    461c:	25b65300 	ldrcs	r5, [r6, #768]!	; 0x300
    4620:	25bc1000 	ldrcs	r1, [ip, #0]!
    4624:	00021000 	andeq	r1, r2, r0
    4628:	00002074 	andeq	r2, r0, r4, ror r0
	...
    4634:	100024a2 	andne	r2, r0, r2, lsr #9
    4638:	100024a8 	andne	r2, r0, r8, lsr #9
    463c:	00510001 	subseq	r0, r1, r1
	...
    4648:	00246c00 	eoreq	r6, r4, r0, lsl #24
    464c:	00272010 	eoreq	r2, r7, r0, lsl r0
    4650:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    465c:	00000001 	andeq	r0, r0, r1
    4660:	00010001 	andeq	r0, r1, r1
    4664:	10002476 	andne	r2, r0, r6, ror r4
    4668:	10002488 	andne	r2, r0, r8, lsl #9
    466c:	4c530001 	mrrcmi	0, 0, r0, r3, cr1
    4670:	79100025 	ldmdbvc	r0, {r0, r2, r5}
    4674:	01100025 	tsteq	r0, r5, lsr #32
    4678:	25805300 	strcs	r5, [r0, #768]	; 0x300
    467c:	25991000 	ldrcs	r1, [r9]
    4680:	00011000 	andeq	r1, r1, r0
    4684:	0025a053 	eoreq	sl, r5, r3, asr r0
    4688:	0025ac10 	eoreq	sl, r5, r0, lsl ip
    468c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4698:	00000001 	andeq	r0, r0, r1
    469c:	24740000 	ldrbtcs	r0, [r4], #-0
    46a0:	24801000 	strcs	r1, [r0], #0
    46a4:	00011000 	andeq	r1, r1, r0
    46a8:	00254c53 	eoreq	r4, r5, r3, asr ip
    46ac:	00257910 	eoreq	r7, r5, r0, lsl r9
    46b0:	53000110 	movwpl	r0, #272	; 0x110
    46b4:	100025a2 	andne	r2, r0, r2, lsr #11
    46b8:	100025ac 	andne	r2, r0, ip, lsr #11
    46bc:	00530001 	subseq	r0, r3, r1
	...
    46c8:	00247401 	eoreq	r7, r4, r1, lsl #8
    46cc:	00247410 	eoreq	r7, r4, r0, lsl r4
    46d0:	53000110 	movwpl	r0, #272	; 0x110
	...
    46dc:	24800001 	strcs	r0, [r0], #1
    46e0:	24841000 	strcs	r1, [r4], #0
    46e4:	00011000 	andeq	r1, r1, r0
    46e8:	00000053 	andeq	r0, r0, r3, asr r0
    46ec:	00000000 	andeq	r0, r0, r0
    46f0:	70000100 	andvc	r0, r0, r0, lsl #2
    46f4:	74100025 	ldrvc	r0, [r0], #-37	; 0xffffffdb
    46f8:	01100025 	tsteq	r0, r5, lsr #32
    46fc:	00005300 	andeq	r5, r0, r0, lsl #6
    4700:	00000000 	andeq	r0, r0, r0
    4704:	01010000 	mrseq	r0, (UNDEF: 1)
    4708:	1000257e 	andne	r2, r0, lr, ror r5
    470c:	10002580 	andne	r2, r0, r0, lsl #11
    4710:	00530001 	subseq	r0, r3, r1
	...
    471c:	00257e01 	eoreq	r7, r5, r1, lsl #28
    4720:	00257e10 	eoreq	r7, r5, r0, lsl lr
    4724:	53000110 	movwpl	r0, #272	; 0x110
	...
    4730:	25900001 	ldrcs	r0, [r0, #1]
    4734:	25941000 	ldrcs	r1, [r4]
    4738:	00011000 	andeq	r1, r1, r0
    473c:	00000053 	andeq	r0, r0, r3, asr r0
    4740:	00000000 	andeq	r0, r0, r0
    4744:	9e000100 	adflss	f0, f0, f0
    4748:	a2100025 	andsge	r0, r0, #37	; 0x25
    474c:	01100025 	tsteq	r0, r5, lsr #32
    4750:	00005300 	andeq	r5, r0, r0, lsl #6
    4754:	00000000 	andeq	r0, r0, r0
    4758:	01000000 	mrseq	r0, (UNDEF: 0)
    475c:	1000259e 	mulne	r0, lr, r5
    4760:	1000259e 	mulne	r0, lr, r5
    4764:	00530001 	subseq	r0, r3, r1
    4768:	00000000 	andeq	r0, r0, r0
    476c:	01000000 	mrseq	r0, (UNDEF: 0)
    4770:	01000000 	mrseq	r0, (UNDEF: 0)
    4774:	ec000100 	stfs	f0, [r0], {-0}
    4778:	fe100024 	cdp2	0, 1, cr0, cr0, cr4, {1}
    477c:	01100024 	tsteq	r0, r4, lsr #32
    4780:	26805300 	strcs	r5, [r0], r0, lsl #6
    4784:	26ad1000 	strtcs	r1, [sp], r0
    4788:	00011000 	andeq	r1, r1, r0
    478c:	0026b453 	eoreq	fp, r6, r3, asr r4
    4790:	0026cd10 	eoreq	ip, r6, r0, lsl sp
    4794:	53000110 	movwpl	r0, #272	; 0x110
    4798:	100026d4 	ldrdne	r2, [r0], -r4
    479c:	100026e0 	andne	r2, r0, r0, ror #13
    47a0:	00530001 	subseq	r0, r3, r1
    47a4:	00000000 	andeq	r0, r0, r0
    47a8:	01000000 	mrseq	r0, (UNDEF: 0)
    47ac:	00000000 	andeq	r0, r0, r0
    47b0:	0024ea00 	eoreq	lr, r4, r0, lsl #20
    47b4:	0024f810 	eoreq	pc, r4, r0, lsl r8	; <UNPREDICTABLE>
    47b8:	53000110 	movwpl	r0, #272	; 0x110
    47bc:	10002680 	andne	r2, r0, r0, lsl #13
    47c0:	100026ad 	andne	r2, r0, sp, lsr #13
    47c4:	d6530001 	ldrble	r0, [r3], -r1
    47c8:	e0100026 	ands	r0, r0, r6, lsr #32
    47cc:	01100026 	tsteq	r0, r6, lsr #32
    47d0:	00005300 	andeq	r5, r0, r0, lsl #6
    47d4:	00000000 	andeq	r0, r0, r0
    47d8:	01000000 	mrseq	r0, (UNDEF: 0)
    47dc:	100024ea 	andne	r2, r0, sl, ror #9
    47e0:	100024ea 	andne	r2, r0, sl, ror #9
    47e4:	00530001 	subseq	r0, r3, r1
    47e8:	00000000 	andeq	r0, r0, r0
    47ec:	01000000 	mrseq	r0, (UNDEF: 0)
    47f0:	0024f800 	eoreq	pc, r4, r0, lsl #16
    47f4:	0024fc10 	eoreq	pc, r4, r0, lsl ip	; <UNPREDICTABLE>
    47f8:	53000110 	movwpl	r0, #272	; 0x110
	...
    4804:	26a40001 	strtcs	r0, [r4], r1
    4808:	26a81000 	strtcs	r1, [r8], r0
    480c:	00011000 	andeq	r1, r1, r0
    4810:	00000053 	andeq	r0, r0, r3, asr r0
    4814:	00000000 	andeq	r0, r0, r0
    4818:	b2010100 	andlt	r0, r1, #0, 2
    481c:	b4100026 	ldrlt	r0, [r0], #-38	; 0xffffffda
    4820:	01100026 	tsteq	r0, r6, lsr #32
    4824:	00005300 	andeq	r5, r0, r0, lsl #6
    4828:	00000000 	andeq	r0, r0, r0
    482c:	01000000 	mrseq	r0, (UNDEF: 0)
    4830:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    4834:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    4838:	00530001 	subseq	r0, r3, r1
    483c:	00000000 	andeq	r0, r0, r0
    4840:	01000000 	mrseq	r0, (UNDEF: 0)
    4844:	0026c400 	eoreq	ip, r6, r0, lsl #8
    4848:	0026c810 	eoreq	ip, r6, r0, lsl r8
    484c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4858:	26d20001 	ldrbcs	r0, [r2], r1
    485c:	26d61000 	ldrbcs	r1, [r6], r0
    4860:	00011000 	andeq	r1, r1, r0
    4864:	00000053 	andeq	r0, r0, r3, asr r0
    4868:	00000000 	andeq	r0, r0, r0
    486c:	d2010000 	andle	r0, r1, #0
    4870:	d2100026 	andsle	r0, r0, #38	; 0x26
    4874:	01100026 	tsteq	r0, r6, lsr #32
    4878:	00005300 	andeq	r5, r0, r0, lsl #6
    487c:	00000000 	andeq	r0, r0, r0
    4880:	00010000 	andeq	r0, r1, r0
    4884:	1000252a 	andne	r2, r0, sl, lsr #10
    4888:	10002530 	andne	r2, r0, r0, lsr r5
    488c:	00530001 	subseq	r0, r3, r1
	...
    4898:	00252401 	eoreq	r2, r5, r1, lsl #8
    489c:	00252410 	eoreq	r2, r5, r0, lsl r4
    48a0:	53000110 	movwpl	r0, #272	; 0x110
	...
    48ac:	252a0100 	strcs	r0, [sl, #-256]!	; 0xffffff00
    48b0:	252a1000 	strcs	r1, [sl, #-0]!
    48b4:	00011000 	andeq	r1, r1, r0
    48b8:	00000053 	andeq	r0, r0, r3, asr r0
    48bc:	00000000 	andeq	r0, r0, r0
    48c0:	2c000100 	stfcss	f0, [r0], {-0}
    48c4:	30100025 	andscc	r0, r0, r5, lsr #32
    48c8:	01100025 	tsteq	r0, r5, lsr #32
    48cc:	00005300 	andeq	r5, r0, r0, lsl #6
    48d0:	00000000 	andeq	r0, r0, r0
    48d4:	00010000 	andeq	r0, r1, r0
    48d8:	1000260e 	andne	r2, r0, lr, lsl #12
    48dc:	10002616 	andne	r2, r0, r6, lsl r6
    48e0:	00530001 	subseq	r0, r3, r1
	...
    48ec:	00260601 	eoreq	r0, r6, r1, lsl #12
    48f0:	00260610 	eoreq	r0, r6, r0, lsl r6
    48f4:	53000110 	movwpl	r0, #272	; 0x110
	...
    4900:	260e0100 	strcs	r0, [lr], -r0, lsl #2
    4904:	260e1000 	strcs	r1, [lr], -r0
    4908:	00011000 	andeq	r1, r1, r0
    490c:	00000053 	andeq	r0, r0, r3, asr r0
    4910:	00000000 	andeq	r0, r0, r0
    4914:	10000100 	andne	r0, r0, r0, lsl #2
    4918:	14100026 	ldrne	r0, [r0], #-38	; 0xffffffda
    491c:	01100026 	tsteq	r0, r6, lsr #32
    4920:	00005300 	andeq	r5, r0, r0, lsl #6
    4924:	00000000 	andeq	r0, r0, r0
    4928:	00010000 	andeq	r0, r1, r0
    492c:	10002678 	andne	r2, r0, r8, ror r6
    4930:	10002680 	andne	r2, r0, r0, lsl #13
    4934:	00530001 	subseq	r0, r3, r1
	...
    4940:	00266e01 	eoreq	r6, r6, r1, lsl #28
    4944:	00266e10 	eoreq	r6, r6, r0, lsl lr
    4948:	53000110 	movwpl	r0, #272	; 0x110
	...
    4954:	26780100 	ldrbtcs	r0, [r8], -r0, lsl #2
    4958:	26781000 	ldrbtcs	r1, [r8], -r0
    495c:	00011000 	andeq	r1, r1, r0
    4960:	00000053 	andeq	r0, r0, r3, asr r0
    4964:	00000000 	andeq	r0, r0, r0
    4968:	7a000100 	bvc	4d70 <_Min_Stack_Size+0x3d70>
    496c:	7e100026 	cdpvc	0, 1, cr0, cr0, cr6, {1}
    4970:	01100026 	tsteq	r0, r6, lsr #32
    4974:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4984:	00020000 	andeq	r0, r2, r0
    4988:	0000007d 	andeq	r0, r0, sp, ror r0
    498c:	00000000 	andeq	r0, r0, r0
    4990:	00020000 	andeq	r0, r2, r0
    4994:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    49ac:	00010000 	andeq	r0, r1, r0
    49b0:	00000050 	andeq	r0, r0, r0, asr r0
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	f3000400 	vshl.u8	d0, d0, d0
    49bc:	009f5001 	addseq	r5, pc, r1
    49c0:	00000000 	andeq	r0, r0, r0
    49c4:	01000000 	mrseq	r0, (UNDEF: 0)
    49c8:	00005000 	andeq	r5, r0, r0
    49cc:	00000000 	andeq	r0, r0, r0
    49d0:	00040000 	andeq	r0, r4, r0
    49d4:	9f5001f3 	svcls	0x005001f3
	...
    49e0:	00000001 	andeq	r0, r0, r1
    49e4:	00000000 	andeq	r0, r0, r0
    49e8:	00010000 	andeq	r0, r1, r0
    49ec:	00000054 	andeq	r0, r0, r4, asr r0
    49f0:	00000000 	andeq	r0, r0, r0
    49f4:	00000100 	andeq	r0, r0, r0, lsl #2
    49f8:	00000000 	andeq	r0, r0, r0
    49fc:	03000000 	movweq	r0, #0
    4a00:	00cc7000 	sbceq	r7, ip, r0
	...
    4a0c:	00000001 	andeq	r0, r0, r1
    4a10:	00000000 	andeq	r0, r0, r0
    4a14:	00010000 	andeq	r0, r1, r0
    4a18:	00000054 	andeq	r0, r0, r4, asr r0
    4a1c:	00000000 	andeq	r0, r0, r0
    4a20:	00010000 	andeq	r0, r1, r0
    4a24:	00000000 	andeq	r0, r0, r0
    4a28:	01000000 	mrseq	r0, (UNDEF: 0)
    4a2c:	00005400 	andeq	r5, r0, r0, lsl #8
    4a30:	00000000 	andeq	r0, r0, r0
    4a34:	00010000 	andeq	r0, r1, r0
	...
    4a40:	00540001 	subseq	r0, r4, r1
    4a44:	00000000 	andeq	r0, r0, r0
    4a48:	20000000 	andcs	r0, r0, r0
    4a4c:	22100027 	andscs	r0, r0, #39	; 0x27
    4a50:	02100027 	andseq	r0, r0, #39	; 0x27
    4a54:	22007d00 	andcs	r7, r0, #0, 26
    4a58:	98100027 	ldmdals	r0, {r0, r1, r2, r5}
    4a5c:	02100028 	andseq	r0, r0, #40	; 0x28
    4a60:	00107d00 	andseq	r7, r0, r0, lsl #26
    4a64:	00000000 	andeq	r0, r0, r0
    4a68:	01000000 	mrseq	r0, (UNDEF: 0)
    4a6c:	40000002 	andmi	r0, r0, r2
    4a70:	50100027 	andspl	r0, r0, r7, lsr #32
    4a74:	01100027 	tsteq	r0, r7, lsr #32
    4a78:	27b05100 	ldrcs	r5, [r0, r0, lsl #2]!
    4a7c:	280c1000 	stmdacs	ip, {ip}
    4a80:	00011000 	andeq	r1, r1, r0
    4a84:	00000051 	andeq	r0, r0, r1, asr r0
    4a88:	00000000 	andeq	r0, r0, r0
    4a8c:	26000000 	strcs	r0, [r0], -r0
    4a90:	98100027 	ldmdals	r0, {r0, r1, r2, r5}
    4a94:	01100028 	tsteq	r0, r8, lsr #32
    4a98:	00005400 	andeq	r5, r0, r0, lsl #8
    4a9c:	00000000 	andeq	r0, r0, r0
    4aa0:	02020000 	andeq	r0, r2, #0
    4aa4:	00010100 	andeq	r0, r1, r0, lsl #2
    4aa8:	1000273a 	andne	r2, r0, sl, lsr r7
    4aac:	10002750 	andne	r2, r0, r0, asr r7
    4ab0:	9f300002 	svcls	0x00300002
    4ab4:	100027b0 			; <UNDEFINED> instruction: 0x100027b0
    4ab8:	100027fc 	strdne	r2, [r0], -ip
    4abc:	9f300002 	svcls	0x00300002
    4ac0:	100027fc 	strdne	r2, [r0], -ip
    4ac4:	10002898 	mulne	r0, r8, r8
    4ac8:	00550001 	subseq	r0, r5, r1
    4acc:	00000000 	andeq	r0, r0, r0
    4ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ad8:	2c000100 	stfcss	f0, [r0], {-0}
    4adc:	42100027 	andsmi	r0, r0, #39	; 0x27
    4ae0:	01100027 	tsteq	r0, r7, lsr #32
    4ae4:	27525300 	ldrbcs	r5, [r2, -r0, lsl #6]
    4ae8:	277f1000 	ldrbcs	r1, [pc, -r0]!
    4aec:	00011000 	andeq	r1, r1, r0
    4af0:	00278653 	eoreq	r8, r7, r3, asr r6
    4af4:	00279d10 	eoreq	r9, r7, r0, lsl sp
    4af8:	53000110 	movwpl	r0, #272	; 0x110
    4afc:	100027a4 	andne	r2, r0, r4, lsr #15
    4b00:	100027b0 			; <UNDEFINED> instruction: 0x100027b0
    4b04:	00530001 	subseq	r0, r3, r1
    4b08:	00000000 	andeq	r0, r0, r0
    4b0c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b10:	00000000 	andeq	r0, r0, r0
    4b14:	00272a00 	eoreq	r2, r7, r0, lsl #20
    4b18:	00273610 	eoreq	r3, r7, r0, lsl r6
    4b1c:	53000110 	movwpl	r0, #272	; 0x110
    4b20:	10002752 	andne	r2, r0, r2, asr r7
    4b24:	1000277f 	andne	r2, r0, pc, ror r7
    4b28:	a6530001 	ldrbge	r0, [r3], -r1
    4b2c:	b0100027 	andslt	r0, r0, r7, lsr #32
    4b30:	01100027 	tsteq	r0, r7, lsr #32
    4b34:	00005300 	andeq	r5, r0, r0, lsl #6
    4b38:	00000000 	andeq	r0, r0, r0
    4b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b40:	1000272a 	andne	r2, r0, sl, lsr #14
    4b44:	1000272a 	andne	r2, r0, sl, lsr #14
    4b48:	00530001 	subseq	r0, r3, r1
    4b4c:	00000000 	andeq	r0, r0, r0
    4b50:	01000000 	mrseq	r0, (UNDEF: 0)
    4b54:	00273600 	eoreq	r3, r7, r0, lsl #12
    4b58:	00273a10 	eoreq	r3, r7, r0, lsl sl
    4b5c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4b68:	27760001 	ldrbcs	r0, [r6, -r1]!
    4b6c:	277a1000 	ldrbcs	r1, [sl, -r0]!
    4b70:	00011000 	andeq	r1, r1, r0
    4b74:	00000053 	andeq	r0, r0, r3, asr r0
    4b78:	00000000 	andeq	r0, r0, r0
    4b7c:	84010100 	strhi	r0, [r1], #-256	; 0xffffff00
    4b80:	86100027 	ldrhi	r0, [r0], -r7, lsr #32
    4b84:	01100027 	tsteq	r0, r7, lsr #32
    4b88:	00005300 	andeq	r5, r0, r0, lsl #6
    4b8c:	00000000 	andeq	r0, r0, r0
    4b90:	01000000 	mrseq	r0, (UNDEF: 0)
    4b94:	10002784 	andne	r2, r0, r4, lsl #15
    4b98:	10002784 	andne	r2, r0, r4, lsl #15
    4b9c:	00530001 	subseq	r0, r3, r1
    4ba0:	00000000 	andeq	r0, r0, r0
    4ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ba8:	00279400 	eoreq	r9, r7, r0, lsl #8
    4bac:	00279810 	eoreq	r9, r7, r0, lsl r8
    4bb0:	53000110 	movwpl	r0, #272	; 0x110
	...
    4bbc:	27a20001 	strcs	r0, [r2, r1]!
    4bc0:	27a61000 	strcs	r1, [r6, r0]!
    4bc4:	00011000 	andeq	r1, r1, r0
    4bc8:	00000053 	andeq	r0, r0, r3, asr r0
    4bcc:	00000000 	andeq	r0, r0, r0
    4bd0:	a2010000 	andge	r0, r1, #0
    4bd4:	a2100027 	andsge	r0, r0, #39	; 0x27
    4bd8:	01100027 	tsteq	r0, r7, lsr #32
    4bdc:	00005300 	andeq	r5, r0, r0, lsl #6
    4be0:	00000000 	andeq	r0, r0, r0
    4be4:	00010000 	andeq	r0, r1, r0
    4be8:	00010001 	andeq	r0, r1, r1
    4bec:	1000280a 	andne	r2, r0, sl, lsl #16
    4bf0:	10002845 	andne	r2, r0, r5, asr #16
    4bf4:	4c530001 	mrrcmi	0, 0, r0, r3, cr1
    4bf8:	63100028 	tstvs	r0, #40	; 0x28
    4bfc:	01100028 	tsteq	r0, r8, lsr #32
    4c00:	286a5300 	stmdacs	sl!, {r8, r9, ip, lr}^
    4c04:	28981000 	ldmcs	r8, {ip}
    4c08:	00011000 	andeq	r1, r1, r0
    4c0c:	00000053 	andeq	r0, r0, r3, asr r0
    4c10:	00000000 	andeq	r0, r0, r0
    4c14:	00000100 	andeq	r0, r0, r0, lsl #2
    4c18:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4c1c:	12100028 	andsne	r0, r0, #40	; 0x28
    4c20:	01100028 	tsteq	r0, r8, lsr #32
    4c24:	28185300 	ldmdacs	r8, {r8, r9, ip, lr}
    4c28:	28451000 	stmdacs	r5, {ip}^
    4c2c:	00011000 	andeq	r1, r1, r0
    4c30:	00286c53 	eoreq	r6, r8, r3, asr ip
    4c34:	00289810 	eoreq	r9, r8, r0, lsl r8
    4c38:	53000110 	movwpl	r0, #272	; 0x110
	...
    4c44:	28080100 	stmdacs	r8, {r8}
    4c48:	28081000 	stmdacs	r8, {ip}
    4c4c:	00011000 	andeq	r1, r1, r0
    4c50:	00000053 	andeq	r0, r0, r3, asr r0
    4c54:	00000000 	andeq	r0, r0, r0
    4c58:	12000100 	andne	r0, r0, #0, 2
    4c5c:	16100028 	ldrne	r0, [r0], -r8, lsr #32
    4c60:	01100028 	tsteq	r0, r8, lsr #32
    4c64:	00005300 	andeq	r5, r0, r0, lsl #6
    4c68:	00000000 	andeq	r0, r0, r0
    4c6c:	00010000 	andeq	r0, r1, r0
    4c70:	1000283c 	andne	r2, r0, ip, lsr r8
    4c74:	10002840 	andne	r2, r0, r0, asr #16
    4c78:	00530001 	subseq	r0, r3, r1
    4c7c:	00000000 	andeq	r0, r0, r0
    4c80:	01000000 	mrseq	r0, (UNDEF: 0)
    4c84:	00284a01 	eoreq	r4, r8, r1, lsl #20
    4c88:	00284c10 	eoreq	r4, r8, r0, lsl ip
    4c8c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4c98:	284a0100 	stmdacs	sl, {r8}^
    4c9c:	284a1000 	stmdacs	sl, {ip}^
    4ca0:	00011000 	andeq	r1, r1, r0
    4ca4:	00000053 	andeq	r0, r0, r3, asr r0
    4ca8:	00000000 	andeq	r0, r0, r0
    4cac:	5a000100 	bpl	50b4 <_Min_Stack_Size+0x40b4>
    4cb0:	5e100028 	cdppl	0, 1, cr0, cr0, cr8, {1}
    4cb4:	01100028 	tsteq	r0, r8, lsr #32
    4cb8:	00005300 	andeq	r5, r0, r0, lsl #6
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	00010000 	andeq	r0, r1, r0
    4cc4:	10002868 	andne	r2, r0, r8, ror #16
    4cc8:	1000286c 	andne	r2, r0, ip, ror #16
    4ccc:	00530001 	subseq	r0, r3, r1
	...
    4cd8:	00286801 	eoreq	r6, r8, r1, lsl #16
    4cdc:	00286810 	eoreq	r6, r8, r0, lsl r8
    4ce0:	53000110 	movwpl	r0, #272	; 0x110
	...
    4cec:	00000201 	andeq	r0, r0, r1, lsl #4
    4cf0:	1000273e 	andne	r2, r0, lr, lsr r7
    4cf4:	10002750 	andne	r2, r0, r0, asr r7
    4cf8:	b0510001 	subslt	r0, r1, r1
    4cfc:	0c100027 	ldceq	0, cr0, [r0], {39}	; 0x27
    4d00:	01100028 	tsteq	r0, r8, lsr #32
    4d04:	00005100 	andeq	r5, r0, r0, lsl #2
    4d08:	00000000 	andeq	r0, r0, r0
    4d0c:	01000000 	mrseq	r0, (UNDEF: 0)
    4d10:	1000273e 	andne	r2, r0, lr, lsr r7
    4d14:	1000273e 	andne	r2, r0, lr, lsr r7
    4d18:	00510001 	subseq	r0, r1, r1
    4d1c:	00000000 	andeq	r0, r0, r0
    4d20:	01000000 	mrseq	r0, (UNDEF: 0)
    4d24:	01000200 	mrseq	r0, R8_usr
    4d28:	02000100 	andeq	r0, r0, #0, 2
    4d2c:	00274c00 	eoreq	r4, r7, r0, lsl #24
    4d30:	00275010 	eoreq	r5, r7, r0, lsl r0
    4d34:	51000110 	tstpl	r0, r0, lsl r1
    4d38:	100027b0 			; <UNDEFINED> instruction: 0x100027b0
    4d3c:	100027b4 			; <UNDEFINED> instruction: 0x100027b4
    4d40:	cc510001 	mrrcgt	0, 0, r0, r1, cr1
    4d44:	d0100027 	andsle	r0, r0, r7, lsr #32
    4d48:	01100027 	tsteq	r0, r7, lsr #32
    4d4c:	27d25100 	ldrbcs	r5, [r2, r0, lsl #2]
    4d50:	27d61000 	ldrbcs	r1, [r6, r0]
    4d54:	00011000 	andeq	r1, r1, r0
    4d58:	0027fc51 	eoreq	pc, r7, r1, asr ip	; <UNPREDICTABLE>
    4d5c:	00280010 	eoreq	r0, r8, r0, lsl r0
    4d60:	51000110 	tstpl	r0, r0, lsl r1
	...
    4d6c:	10002898 	mulne	r0, r8, r8
    4d70:	1000289a 	mulne	r0, sl, r8
    4d74:	007d0002 	rsbseq	r0, sp, r2
    4d78:	1000289a 	mulne	r0, sl, r8
    4d7c:	100028d4 	ldrdne	r2, [r0], -r4
    4d80:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    4d94:	10002898 	mulne	r0, r8, r8
    4d98:	100028bf 			; <UNDEFINED> instruction: 0x100028bf
    4d9c:	bf500001 	svclt	0x00500001
    4da0:	c6100028 	ldrgt	r0, [r0], -r8, lsr #32
    4da4:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    4da8:	5001f300 	andpl	pc, r1, r0, lsl #6
    4dac:	0028c69f 	mlaeq	r8, pc, r6, ip	; <UNPREDICTABLE>
    4db0:	0028c910 	eoreq	ip, r8, r0, lsl r9
    4db4:	50000110 	andpl	r0, r0, r0, lsl r1
    4db8:	100028c9 	andne	r2, r0, r9, asr #17
    4dbc:	100028d4 	ldrdne	r2, [r0], -r4
    4dc0:	01f30004 	mvnseq	r0, r4
    4dc4:	00009f50 	andeq	r9, r0, r0, asr pc
    4dc8:	00000000 	andeq	r0, r0, r0
    4dcc:	00010000 	andeq	r0, r1, r0
    4dd0:	100028a0 	andne	r2, r0, r0, lsr #17
    4dd4:	100028d4 	ldrdne	r2, [r0], -r4
    4dd8:	00540001 	subseq	r0, r4, r1
    4ddc:	00000000 	andeq	r0, r0, r0
    4de0:	05000000 	streq	r0, [r0, #-0]
    4de4:	00000000 	andeq	r0, r0, r0
    4de8:	9a000000 	bls	4df0 <_Min_Stack_Size+0x3df0>
    4dec:	bf100028 	svclt	0x00100028
    4df0:	01100028 	tsteq	r0, r8, lsr #32
    4df4:	28bf5000 	ldmcs	pc!, {ip, lr}	; <UNPREDICTABLE>
    4df8:	28c61000 	stmiacs	r6, {ip}^
    4dfc:	00041000 	andeq	r1, r4, r0
    4e00:	9f5001f3 	svcls	0x005001f3
    4e04:	100028c6 	andne	r2, r0, r6, asr #17
    4e08:	100028c9 	andne	r2, r0, r9, asr #17
    4e0c:	c9500001 	ldmdbgt	r0, {r0}^
    4e10:	d4100028 	ldrle	r0, [r0], #-40	; 0xffffffd8
    4e14:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    4e18:	5001f300 	andpl	pc, r1, r0, lsl #6
    4e1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e20:	00000000 	andeq	r0, r0, r0
    4e24:	ba000000 	blt	4e2c <_Min_Stack_Size+0x3e2c>
    4e28:	bf100028 	svclt	0x00100028
    4e2c:	01100028 	tsteq	r0, r8, lsr #32
    4e30:	00005300 	andeq	r5, r0, r0, lsl #6
    4e34:	00000000 	andeq	r0, r0, r0
    4e38:	00010000 	andeq	r0, r1, r0
    4e3c:	100028ba 			; <UNDEFINED> instruction: 0x100028ba
    4e40:	100028c4 	andne	r2, r0, r4, asr #17
    4e44:	9f300002 	svcls	0x00300002
	...
    4e50:	289e0001 	ldmcs	lr, {r0}
    4e54:	28d41000 	ldmcs	r4, {ip}^
    4e58:	00011000 	andeq	r1, r1, r0
    4e5c:	00000054 	andeq	r0, r0, r4, asr r0
    4e60:	00000000 	andeq	r0, r0, r0
    4e64:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    4e68:	9e100028 	cdpls	0, 1, cr0, cr0, cr8, {1}
    4e6c:	01100028 	tsteq	r0, r8, lsr #32
    4e70:	00005400 	andeq	r5, r0, r0, lsl #8
    4e74:	00000000 	andeq	r0, r0, r0
    4e78:	00010000 	andeq	r0, r1, r0
    4e7c:	100028c0 	andne	r2, r0, r0, asr #17
    4e80:	100028c4 	andne	r2, r0, r4, asr #17
    4e84:	00540001 	subseq	r0, r4, r1
    4e88:	00000000 	andeq	r0, r0, r0
    4e8c:	01000000 	mrseq	r0, (UNDEF: 0)
    4e90:	0028ca00 	eoreq	ip, r8, r0, lsl #20
    4e94:	0028d410 	eoreq	sp, r8, r0, lsl r4
    4e98:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4ea4:	100028d4 	ldrdne	r2, [r0], -r4
    4ea8:	100028d6 	ldrdne	r2, [r0], -r6
    4eac:	007d0002 	rsbseq	r0, sp, r2
    4eb0:	100028d6 	ldrdne	r2, [r0], -r6
    4eb4:	100028ec 	andne	r2, r0, ip, ror #17
    4eb8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    4ec4:	28dc0001 	ldmcs	ip, {r0}^
    4ec8:	28e81000 	stmiacs	r8!, {ip}^
    4ecc:	00011000 	andeq	r1, r1, r0
    4ed0:	00000054 	andeq	r0, r0, r4, asr r0
    4ed4:	00000000 	andeq	r0, r0, r0
    4ed8:	da000100 	ble	52e0 <_Min_Stack_Size+0x42e0>
    4edc:	e8100028 	ldmda	r0, {r3, r5}
    4ee0:	01100028 	tsteq	r0, r8, lsr #32
    4ee4:	00005400 	andeq	r5, r0, r0, lsl #8
    4ee8:	00000000 	andeq	r0, r0, r0
    4eec:	01000000 	mrseq	r0, (UNDEF: 0)
    4ef0:	100028da 	ldrdne	r2, [r0], -sl
    4ef4:	100028da 	ldrdne	r2, [r0], -sl
    4ef8:	00540001 	subseq	r0, r4, r1
    4efc:	00000000 	andeq	r0, r0, r0
    4f00:	01000000 	mrseq	r0, (UNDEF: 0)
    4f04:	0028e200 	eoreq	lr, r8, r0, lsl #4
    4f08:	0028e610 	eoreq	lr, r8, r0, lsl r6
    4f0c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4f18:	100028ec 	andne	r2, r0, ip, ror #17
    4f1c:	100028ee 	andne	r2, r0, lr, ror #17
    4f20:	007d0002 	rsbseq	r0, sp, r2
    4f24:	100028ee 	andne	r2, r0, lr, ror #17
    4f28:	100028f0 	strdne	r2, [r0], -r0
    4f2c:	047d0002 	ldrbteq	r0, [sp], #-2
    4f30:	100028f0 	strdne	r2, [r0], -r0
    4f34:	10002946 	andne	r2, r0, r6, asr #18
    4f38:	207d0002 	rsbscs	r0, sp, r2
    4f3c:	10002946 	andne	r2, r0, r6, asr #18
    4f40:	1000297c 	andne	r2, r0, ip, ror r9
    4f44:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    4f50:	29400000 	stmdbcs	r0, {}^	; <UNPREDICTABLE>
    4f54:	297c1000 	ldmdbcs	ip!, {ip}^
    4f58:	00011000 	andeq	r1, r1, r0
    4f5c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    4f68:	9a000000 	bls	4f70 <_Min_Stack_Size+0x3f70>
    4f6c:	a4100029 	ldrge	r0, [r0], #-41	; 0xffffffd7
    4f70:	01100029 	tsteq	r0, r9, lsr #32
    4f74:	29aa5300 	stmibcs	sl!, {r8, r9, ip, lr}
    4f78:	29bc1000 	ldmibcs	ip!, {ip}
    4f7c:	00011000 	andeq	r1, r1, r0
    4f80:	0029c053 	eoreq	ip, r9, r3, asr r0
    4f84:	0029d410 	eoreq	sp, r9, r0, lsl r4
    4f88:	53000110 	movwpl	r0, #272	; 0x110
	...
    4f94:	29ae0001 	stmibcs	lr!, {r0}
    4f98:	29b81000 	ldmibcs	r8!, {ip}
    4f9c:	00011000 	andeq	r1, r1, r0
    4fa0:	00000052 	andeq	r0, r0, r2, asr r0
    4fa4:	00000000 	andeq	r0, r0, r0
    4fa8:	b0000000 	andlt	r0, r0, r0
    4fac:	b8100029 	ldmdalt	r0, {r0, r3, r5}
    4fb0:	01100029 	tsteq	r0, r9, lsr #32
    4fb4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4fc0:	100029a4 	andne	r2, r0, r4, lsr #19
    4fc4:	100029aa 	andne	r2, r0, sl, lsr #19
    4fc8:	00730005 	rsbseq	r0, r3, r5
    4fcc:	009f1b34 	addseq	r1, pc, r4, lsr fp	; <UNPREDICTABLE>
	...
    4fe0:	00297e00 	eoreq	r7, r9, r0, lsl #28
    4fe4:	00298a10 	eoreq	r8, r9, r0, lsl sl
    4fe8:	53000110 	movwpl	r0, #272	; 0x110
    4fec:	1000298c 	andne	r2, r0, ip, lsl #19
    4ff0:	10002992 	mulne	r0, r2, r9
    4ff4:	92530001 	subsls	r0, r3, #1
    4ff8:	b2100029 	andslt	r0, r0, #41	; 0x29
    4ffc:	02100029 	andseq	r0, r0, #41	; 0x29
    5000:	bc007000 	stclt	0, cr7, [r0], {-0}
    5004:	be100029 	cdplt	0, 1, cr0, cr0, cr9, {1}
    5008:	01100029 	tsteq	r0, r9, lsr #32
    500c:	29be5300 	ldmibcs	lr!, {r8, r9, ip, lr}
    5010:	29c61000 	stmibcs	r6, {ip}^
    5014:	00021000 	andeq	r1, r2, r0
    5018:	00000070 	andeq	r0, r0, r0, ror r0
	...
    5024:	10002992 	mulne	r0, r2, r9
    5028:	1000299a 	mulne	r0, sl, r9
    502c:	00530001 	subseq	r0, r3, r1
	...
    5038:	d6000000 	strle	r0, [r0], -r0
    503c:	ec100029 	ldc	0, cr0, [r0], {41}	; 0x29
    5040:	01100029 	tsteq	r0, r9, lsr #32
    5044:	29f05300 	ldmibcs	r0!, {r8, r9, ip, lr}^
    5048:	2a021000 	bcs	89050 <SYSTICK_CYCLES+0x60011>
    504c:	00011000 	andeq	r1, r1, r0
    5050:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5060:	0029da00 	eoreq	sp, r9, r0, lsl #20
    5064:	0029ea10 	eoreq	lr, r9, r0, lsl sl
    5068:	52000110 	andpl	r0, r0, #16, 2
    506c:	100029f0 	strdne	r2, [r0], -r0
    5070:	100029f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5074:	f2520001 	vhadd.s16	d16, d2, d1
    5078:	fa100029 	blx	405124 <__RAM_SIZE+0x305124>
    507c:	02100029 	andseq	r0, r0, #41	; 0x29
    5080:	fc107000 	ldc2	0, cr7, [r0], {-0}
    5084:	02100029 	andseq	r0, r0, #41	; 0x29
    5088:	0110002a 	tsteq	r0, sl, lsr #32
    508c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5098:	100029e0 	andne	r2, r0, r0, ror #19
    509c:	100029e6 	andne	r2, r0, r6, ror #19
    50a0:	00510001 	subseq	r0, r1, r1
    50a4:	00000000 	andeq	r0, r0, r0
    50a8:	04000000 	streq	r0, [r0], #-0
    50ac:	0e10002a 	cdpeq	0, 1, cr0, cr0, cr10, {1}
    50b0:	0210002a 	andseq	r0, r0, #42	; 0x2a
    50b4:	0e007d00 	cdpeq	13, 0, cr7, cr0, cr0, {0}
    50b8:	1010002a 	andsne	r0, r0, sl, lsr #32
    50bc:	0210002a 	andseq	r0, r0, #42	; 0x2a
    50c0:	10147d00 	andsne	r7, r4, r0, lsl #26
    50c4:	c010002a 	andsgt	r0, r0, sl, lsr #32
    50c8:	0210002b 	andseq	r0, r0, #43	; 0x2b
    50cc:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    50d8:	04000000 	streq	r0, [r0], #-0
    50dc:	1410002a 	ldrne	r0, [r0], #-42	; 0xffffffd6
    50e0:	0110002a 	tsteq	r0, sl, lsr #32
    50e4:	2a145000 	bcs	5190ec <__RAM_SIZE+0x4190ec>
    50e8:	2bc01000 	blcs	ff0090f0 <__RAM_segment_used_end__+0xc6f090f0>
    50ec:	00041000 	andeq	r1, r4, r0
    50f0:	9f5001f3 	svcls	0x005001f3
	...
    50fc:	01000000 	mrseq	r0, (UNDEF: 0)
    5100:	00010101 	andeq	r0, r1, r1, lsl #2
    5104:	00000000 	andeq	r0, r0, r0
    5108:	00010101 	andeq	r0, r1, r1, lsl #2
    510c:	10002a14 	andne	r2, r0, r4, lsl sl
    5110:	10002a1e 	andne	r2, r0, lr, lsl sl
    5114:	1e510001 	cdpne	0, 5, cr0, cr1, cr1, {0}
    5118:	4610002a 	ldrmi	r0, [r0], -sl, lsr #32
    511c:	0110002a 	tsteq	r0, sl, lsr #32
    5120:	2a465600 	bcs	119a928 <__RAM_SIZE+0x109a928>
    5124:	2a5c1000 	bcs	170912c <__RAM_SIZE+0x160912c>
    5128:	00011000 	andeq	r1, r1, r0
    512c:	002a5c52 	eoreq	r5, sl, r2, asr ip
    5130:	002ada10 	eoreq	sp, sl, r0, lsl sl
    5134:	56000110 			; <UNDEFINED> instruction: 0x56000110
    5138:	10002ada 	ldrdne	r2, [r0], -sl
    513c:	10002b3c 	andne	r2, r0, ip, lsr fp
    5140:	3c520001 	mrrccc	0, 0, r0, r2, cr1
    5144:	5210002b 	andspl	r0, r0, #43	; 0x2b
    5148:	0110002b 	tsteq	r0, fp, lsr #32
    514c:	2b585600 	blcs	161a954 <__RAM_SIZE+0x151a954>
    5150:	2b8c1000 	blcs	fe309158 <__RAM_segment_used_end__+0xc6209158>
    5154:	00011000 	andeq	r1, r1, r0
    5158:	002b8c51 	eoreq	r8, fp, r1, asr ip
    515c:	002bc010 	eoreq	ip, fp, r0, lsl r0
    5160:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5170:	2a1e0001 	bcs	78517c <__RAM_SIZE+0x68517c>
    5174:	2a221000 	bcs	88917c <__RAM_SIZE+0x78917c>
    5178:	00011000 	andeq	r1, r1, r0
    517c:	002a6453 	eoreq	r6, sl, r3, asr r4
    5180:	002a7a10 	eoreq	r7, sl, r0, lsl sl
    5184:	53000110 	movwpl	r0, #272	; 0x110
    5188:	10002b1a 	andne	r2, r0, sl, lsl fp
    518c:	10002b24 	andne	r2, r0, r4, lsr #22
    5190:	00510001 	subseq	r0, r1, r1
	...
    519c:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    51a0:	7410002a 	ldrvc	r0, [r0], #-42	; 0xffffffd6
    51a4:	0110002a 	tsteq	r0, sl, lsr #32
    51a8:	2b1c5200 	blcs	7199b0 <__RAM_SIZE+0x6199b0>
    51ac:	2b241000 	blcs	9091b4 <__RAM_SIZE+0x8091b4>
    51b0:	00011000 	andeq	r1, r1, r0
    51b4:	00000050 	andeq	r0, r0, r0, asr r0
    51b8:	00000000 	andeq	r0, r0, r0
    51bc:	01010000 	mrseq	r0, (UNDEF: 1)
    51c0:	002a1e00 	eoreq	r1, sl, r0, lsl #28
    51c4:	002a5c10 	eoreq	r5, sl, r0, lsl ip
    51c8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    51cc:	10002a62 	andne	r2, r0, r2, ror #20
    51d0:	10002b3c 	andne	r2, r0, ip, lsr fp
    51d4:	00540001 	subseq	r0, r4, r1
    51d8:	00000000 	andeq	r0, r0, r0
    51dc:	01000000 	mrseq	r0, (UNDEF: 0)
    51e0:	01010000 	mrseq	r0, (UNDEF: 1)
    51e4:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    51e8:	3210002a 	andscc	r0, r0, #42	; 0x2a
    51ec:	0210002a 	andseq	r0, r0, #42	; 0x2a
    51f0:	329f3000 	addscc	r3, pc, #0
    51f4:	5c10002a 	ldcpl	0, cr0, [r0], {42}	; 0x2a
    51f8:	0110002a 	tsteq	r0, sl, lsr #32
    51fc:	2aba5500 	bcs	fee9a604 <__RAM_segment_used_end__+0xc6d9a604>
    5200:	2acc1000 	bcs	ff309208 <__RAM_segment_used_end__+0xc7209208>
    5204:	00011000 	andeq	r1, r1, r0
    5208:	002ad455 	eoreq	sp, sl, r5, asr r4
    520c:	002b3c10 	eoreq	r3, fp, r0, lsl ip
    5210:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    521c:	00000009 	andeq	r0, r0, r9
    5220:	10002a04 	andne	r2, r0, r4, lsl #20
    5224:	10002a14 	andne	r2, r0, r4, lsl sl
    5228:	9f300002 	svcls	0x00300002
    522c:	10002a14 	andne	r2, r0, r4, lsl sl
    5230:	10002bc0 	andne	r2, r0, r0, asr #23
    5234:	00570001 	subseq	r0, r7, r1
	...
    5244:	002b0600 	eoreq	r0, fp, r0, lsl #12
    5248:	002b1010 	eoreq	r1, fp, r0, lsl r0
    524c:	53000110 	movwpl	r0, #272	; 0x110
    5250:	10002b16 	andne	r2, r0, r6, lsl fp
    5254:	10002b28 	andne	r2, r0, r8, lsr #22
    5258:	34530001 	ldrbcc	r0, [r3], #-1
    525c:	3c10002b 	ldccc	0, cr0, [r0], {43}	; 0x2b
    5260:	0110002b 	tsteq	r0, fp, lsr #32
    5264:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5270:	10002afe 	strdne	r2, [r0], -lr
    5274:	10002b08 	andne	r2, r0, r8, lsl #22
    5278:	00510001 	subseq	r0, r1, r1
	...
    5284:	002b1000 	eoreq	r1, fp, r0
    5288:	002b1610 	eoreq	r1, fp, r0, lsl r6
    528c:	73000510 	movwvc	r0, #1296	; 0x510
    5290:	9f1b3400 	svcls	0x001b3400
	...
    529c:	00050503 	andeq	r0, r5, r3, lsl #10
    52a0:	00050503 	andeq	r0, r5, r3, lsl #10
    52a4:	05030000 	streq	r0, [r3, #-0]
    52a8:	00000005 	andeq	r0, r0, r5
    52ac:	10002a8e 	andne	r2, r0, lr, lsl #21
    52b0:	10002a8e 	andne	r2, r0, lr, lsl #21
    52b4:	8e540001 	cdphi	0, 5, cr0, cr4, cr1, {0}
    52b8:	a010002a 	andsge	r0, r0, sl, lsr #32
    52bc:	0310002a 	tsteq	r0, #42	; 0x2a
    52c0:	9f787400 	svcls	0x00787400
    52c4:	10002ab0 			; <UNDEFINED> instruction: 0x10002ab0
    52c8:	10002ab0 			; <UNDEFINED> instruction: 0x10002ab0
    52cc:	b0540001 	subslt	r0, r4, r1
    52d0:	ba10002a 	blt	405380 <__RAM_SIZE+0x305380>
    52d4:	0310002a 	tsteq	r0, #42	; 0x2a
    52d8:	9f787400 	svcls	0x00787400
    52dc:	10002acc 	andne	r2, r0, ip, asr #21
    52e0:	10002ad4 	ldrdne	r2, [r0], -r4
    52e4:	78740003 	ldmdavc	r4!, {r0, r1}^
    52e8:	002aec9f 	mlaeq	sl, pc, ip, lr	; <UNPREDICTABLE>
    52ec:	002aec10 	eoreq	lr, sl, r0, lsl ip
    52f0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    52f4:	10002aec 	andne	r2, r0, ip, ror #21
    52f8:	10002af6 	strdne	r2, [r0], -r6
    52fc:	78740003 	ldmdavc	r4!, {r0, r1}^
    5300:	002b289f 	mlaeq	fp, pc, r8, r2	; <UNPREDICTABLE>
    5304:	002b3010 	eoreq	r3, fp, r0, lsl r0
    5308:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    530c:	00009f78 	andeq	r9, r0, r8, ror pc
    5310:	00000000 	andeq	r0, r0, r0
    5314:	00010000 	andeq	r0, r1, r0
    5318:	10002a36 	andne	r2, r0, r6, lsr sl
    531c:	10002a3a 	andne	r2, r0, sl, lsr sl
    5320:	00560001 	subseq	r0, r6, r1
    5324:	00000000 	andeq	r0, r0, r0
    5328:	01000000 	mrseq	r0, (UNDEF: 0)
    532c:	44000001 	strmi	r0, [r0], #-1
    5330:	5c10002a 	ldcpl	0, cr0, [r0], {42}	; 0x2a
    5334:	0110002a 	tsteq	r0, sl, lsr #32
    5338:	2ada5200 	bcs	ff699b40 <__RAM_segment_used_end__+0xc7599b40>
    533c:	2b3c1000 	blcs	f09344 <__RAM_SIZE+0xe09344>
    5340:	00011000 	andeq	r1, r1, r0
    5344:	00000052 	andeq	r0, r0, r2, asr r0
    5348:	00000000 	andeq	r0, r0, r0
    534c:	44010000 	strmi	r0, [r1], #-0
    5350:	4410002a 	ldrmi	r0, [r0], #-42	; 0xffffffd6
    5354:	0110002a 	tsteq	r0, sl, lsr #32
    5358:	00005200 	andeq	r5, r0, r0, lsl #4
    535c:	00000000 	andeq	r0, r0, r0
    5360:	00010000 	andeq	r0, r1, r0
    5364:	10002a52 	andne	r2, r0, r2, asr sl
    5368:	10002a56 	andne	r2, r0, r6, asr sl
    536c:	00520001 	subseq	r0, r2, r1
    5370:	00000000 	andeq	r0, r0, r0
    5374:	01000000 	mrseq	r0, (UNDEF: 0)
    5378:	002a5a01 	eoreq	r5, sl, r1, lsl #20
    537c:	002a5c10 	eoreq	r5, sl, r0, lsl ip
    5380:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    538c:	2a5a0100 	bcs	1685794 <__RAM_SIZE+0x1585794>
    5390:	2a5a1000 	bcs	1689398 <__RAM_SIZE+0x1589398>
    5394:	00011000 	andeq	r1, r1, r0
    5398:	00000056 	andeq	r0, r0, r6, asr r0
    539c:	00000000 	andeq	r0, r0, r0
    53a0:	4e000100 	adfmis	f0, f0, f0
    53a4:	5210002b 	andspl	r0, r0, #43	; 0x2b
    53a8:	0110002b 	tsteq	r0, fp, lsr #32
    53ac:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    53b8:	2a140001 	bcs	5053c4 <__RAM_SIZE+0x4053c4>
    53bc:	2a1e1000 	bcs	7893c4 <__RAM_SIZE+0x6893c4>
    53c0:	00011000 	andeq	r1, r1, r0
    53c4:	002b5651 	eoreq	r5, fp, r1, asr r6
    53c8:	002b8e10 	eoreq	r8, fp, r0, lsl lr
    53cc:	51000110 	tstpl	r0, r0, lsl r1
	...
    53d8:	2b560100 	blcs	15857e0 <__RAM_SIZE+0x14857e0>
    53dc:	2b561000 	blcs	15893e4 <__RAM_SIZE+0x14893e4>
    53e0:	00011000 	andeq	r1, r1, r0
    53e4:	00000051 	andeq	r0, r0, r1, asr r0
    53e8:	00000000 	andeq	r0, r0, r0
    53ec:	82000100 	andhi	r0, r0, #0, 2
    53f0:	8610002b 	ldrhi	r0, [r0], -fp, lsr #32
    53f4:	0110002b 	tsteq	r0, fp, lsr #32
    53f8:	00005100 	andeq	r5, r0, r0, lsl #2
    53fc:	00000000 	andeq	r0, r0, r0
    5400:	00010000 	andeq	r0, r1, r0
    5404:	10002b8a 	andne	r2, r0, sl, lsl #23
    5408:	10002b8e 	andne	r2, r0, lr, lsl #23
    540c:	00560001 	subseq	r0, r6, r1
	...
    5418:	002b8a01 	eoreq	r8, fp, r1, lsl #20
    541c:	002b8a10 	eoreq	r8, fp, r0, lsl sl
    5420:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    542c:	2b8e0001 	blcs	fe385438 <__RAM_segment_used_end__+0xc6285438>
    5430:	2bc01000 	blcs	ff009438 <__RAM_segment_used_end__+0xc6f09438>
    5434:	00011000 	andeq	r1, r1, r0
    5438:	00000056 	andeq	r0, r0, r6, asr r0
    543c:	00000000 	andeq	r0, r0, r0
    5440:	002bc000 	eoreq	ip, fp, r0
    5444:	002bc410 	eoreq	ip, fp, r0, lsl r4
    5448:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    544c:	002bc400 	eoreq	ip, fp, r0, lsl #8
    5450:	002bdc10 	eoreq	sp, fp, r0, lsl ip
    5454:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5458:	002bdc08 	eoreq	sp, fp, r8, lsl #24
    545c:	002be010 	eoreq	lr, fp, r0, lsl r0
    5460:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5464:	002be000 	eoreq	lr, fp, r0
    5468:	002be810 	eoreq	lr, fp, r0, lsl r8
    546c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5470:	00000008 	andeq	r0, r0, r8
	...
    5488:	002bc000 	eoreq	ip, fp, r0
    548c:	002bd410 	eoreq	sp, fp, r0, lsl r4
    5490:	50000110 	andpl	r0, r0, r0, lsl r1
    5494:	10002bd4 	ldrdne	r2, [r0], -r4
    5498:	10002bd6 	ldrdne	r2, [r0], -r6
    549c:	01f30004 	mvnseq	r0, r4
    54a0:	2bd69f50 	blcs	ff5ad1e8 <__RAM_segment_used_end__+0xc74ad1e8>
    54a4:	2bd91000 	blcs	ff6494ac <__RAM_segment_used_end__+0xc75494ac>
    54a8:	00011000 	andeq	r1, r1, r0
    54ac:	002bd950 	eoreq	sp, fp, r0, asr r9
    54b0:	002bdc10 	eoreq	sp, fp, r0, lsl ip
    54b4:	f3000410 	vqshl.u8	d0, d0, d0
    54b8:	dc9f5001 	ldcle	0, cr5, [pc], {1}
    54bc:	de10002b 	cdple	0, 1, cr0, cr0, cr11, {1}
    54c0:	0110002b 	tsteq	r0, fp, lsr #32
    54c4:	2bde5000 	blcs	ff7994cc <__RAM_segment_used_end__+0xc76994cc>
    54c8:	2be01000 	blcs	ff8094d0 <__RAM_segment_used_end__+0xc77094d0>
    54cc:	00041000 	andeq	r1, r4, r0
    54d0:	9f5001f3 	svcls	0x005001f3
    54d4:	10002be0 	andne	r2, r0, r0, ror #23
    54d8:	10002be2 	andne	r2, r0, r2, ror #23
    54dc:	e2500001 	subs	r0, r0, #1
    54e0:	e810002b 	ldmda	r0, {r0, r1, r3, r5}
    54e4:	0410002b 	ldreq	r0, [r0], #-43	; 0xffffffd5
    54e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    54ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    54f0:	00000000 	andeq	r0, r0, r0
    54f4:	00010000 	andeq	r0, r1, r0
    54f8:	002bd400 	eoreq	sp, fp, r0, lsl #8
    54fc:	002bd410 	eoreq	sp, fp, r0, lsl r4
    5500:	33000210 	movwcc	r0, #528	; 0x210
    5504:	002bda9f 	mlaeq	fp, pc, sl, sp	; <UNPREDICTABLE>
    5508:	002bdc10 	eoreq	sp, fp, r0, lsl ip
    550c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    5518:	00000001 	andeq	r0, r0, r1
    551c:	00000100 	andeq	r0, r0, r0, lsl #2
    5520:	2bc80000 	blcs	ff205528 <__RAM_segment_used_end__+0xc7105528>
    5524:	2bce1000 	blcs	ff38952c <__RAM_segment_used_end__+0xc728952c>
    5528:	00011000 	andeq	r1, r1, r0
    552c:	002bce53 	eoreq	ip, fp, r3, asr lr
    5530:	002bd410 	eoreq	sp, fp, r0, lsl r4
    5534:	70000210 	andvc	r0, r0, r0, lsl r2
    5538:	002bd47c 	eoreq	sp, fp, ip, ror r4
    553c:	002bd410 	eoreq	sp, fp, r0, lsl r4
    5540:	f3000510 	vqrshl.u8	d0, d0, d0
    5544:	1c345001 	ldcne	0, cr5, [r4], #-4
    5548:	10002bd6 	ldrdne	r2, [r0], -r6
    554c:	10002bd9 	ldrdne	r2, [r0], -r9
    5550:	7c700002 	ldclvc	0, cr0, [r0], #-8
    5554:	10002be0 	andne	r2, r0, r0, ror #23
    5558:	10002be8 	andne	r2, r0, r8, ror #23
    555c:	00530001 	subseq	r0, r3, r1
    5560:	00000000 	andeq	r0, r0, r0
    5564:	03000000 	movweq	r0, #0
	...
    5570:	c4000000 	strgt	r0, [r0], #-0
    5574:	d410002b 	ldrle	r0, [r0], #-43	; 0xffffffd5
    5578:	0310002b 	tsteq	r0, #43	; 0x2b
    557c:	9f7c7000 	svcls	0x007c7000
    5580:	10002bd4 	ldrdne	r2, [r0], -r4
    5584:	10002bd6 	ldrdne	r2, [r0], -r6
    5588:	01f30006 	mvnseq	r0, r6
    558c:	9f1c3450 	svcls	0x001c3450
    5590:	10002bd6 	ldrdne	r2, [r0], -r6
    5594:	10002bd9 	ldrdne	r2, [r0], -r9
    5598:	7c700003 	ldclvc	0, cr0, [r0], #-12
    559c:	002bd99f 	mlaeq	fp, pc, r9, sp	; <UNPREDICTABLE>
    55a0:	002bdc10 	eoreq	sp, fp, r0, lsl ip
    55a4:	f3000610 	vmin.u8	d0, d0, d0
    55a8:	1c345001 	ldcne	0, cr5, [r4], #-4
    55ac:	002be09f 	mlaeq	fp, pc, r0, lr	; <UNPREDICTABLE>
    55b0:	002be210 	eoreq	lr, fp, r0, lsl r2
    55b4:	70000310 	andvc	r0, r0, r0, lsl r3
    55b8:	2be29f7c 	blcs	ff8ad3b0 <__RAM_segment_used_end__+0xc77ad3b0>
    55bc:	2be81000 	blcs	ffa095c4 <__RAM_segment_used_end__+0xc79095c4>
    55c0:	00061000 	andeq	r1, r6, r0
    55c4:	345001f3 	ldrbcc	r0, [r0], #-499	; 0xfffffe0d
    55c8:	00009f1c 	andeq	r9, r0, ip, lsl pc
    55cc:	00000000 	andeq	r0, r0, r0
    55d0:	02010000 	andeq	r0, r1, #0
    55d4:	00000002 	andeq	r0, r0, r2
    55d8:	01000000 	mrseq	r0, (UNDEF: 0)
    55dc:	00000000 	andeq	r0, r0, r0
    55e0:	10002bc4 	andne	r2, r0, r4, asr #23
    55e4:	10002bc4 	andne	r2, r0, r4, asr #23
    55e8:	c4500001 	ldrbgt	r0, [r0], #-1
    55ec:	c810002b 	ldmdagt	r0, {r0, r1, r3, r5}
    55f0:	0310002b 	tsteq	r0, #43	; 0x2b
    55f4:	9f7c7000 	svcls	0x007c7000
    55f8:	10002bc8 	andne	r2, r0, r8, asr #23
    55fc:	10002bce 	andne	r2, r0, lr, asr #23
    5600:	ce530001 	cdpgt	0, 5, cr0, cr3, cr1, {0}
    5604:	d410002b 	ldrle	r0, [r0], #-43	; 0xffffffd5
    5608:	0210002b 	andseq	r0, r0, #43	; 0x2b
    560c:	d47c7000 	ldrbtle	r7, [ip], #-0
    5610:	d410002b 	ldrle	r0, [r0], #-43	; 0xffffffd5
    5614:	0510002b 	ldreq	r0, [r0, #-43]	; 0xffffffd5
    5618:	5001f300 	andpl	pc, r1, r0, lsl #6
    561c:	2bd61c34 	blcs	ff58c6f4 <__RAM_segment_used_end__+0xc748c6f4>
    5620:	2bd91000 	blcs	ff649628 <__RAM_segment_used_end__+0xc7549628>
    5624:	00021000 	andeq	r1, r2, r0
    5628:	2be07c70 	blcs	ff8247f0 <__RAM_segment_used_end__+0xc77247f0>
    562c:	2be81000 	blcs	ffa09634 <__RAM_segment_used_end__+0xc7909634>
    5630:	00011000 	andeq	r1, r1, r0
    5634:	00000053 	andeq	r0, r0, r3, asr r0
    5638:	00000000 	andeq	r0, r0, r0
    563c:	002be800 	eoreq	lr, fp, r0, lsl #16
    5640:	002bea10 	eoreq	lr, fp, r0, lsl sl
    5644:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5648:	002bea00 	eoreq	lr, fp, r0, lsl #20
    564c:	002c7c10 	eoreq	r7, ip, r0, lsl ip
    5650:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5654:	00000008 	andeq	r0, r0, r8
	...
    566c:	002be800 	eoreq	lr, fp, r0, lsl #16
    5670:	002bf010 	eoreq	pc, fp, r0, lsl r0	; <UNPREDICTABLE>
    5674:	50000110 	andpl	r0, r0, r0, lsl r1
    5678:	10002bf0 	strdne	r2, [r0], -r0
    567c:	10002c1e 	andne	r2, r0, lr, lsl ip
    5680:	1e5c0001 	cdpne	0, 5, cr0, cr12, cr1, {0}
    5684:	2010002c 	andscs	r0, r0, ip, lsr #32
    5688:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    568c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5690:	002c209f 	mlaeq	ip, pc, r0, r2	; <UNPREDICTABLE>
    5694:	002c4810 	eoreq	r4, ip, r0, lsl r8
    5698:	5c000110 	stfpls	f0, [r0], {16}
    569c:	10002c48 	andne	r2, r0, r8, asr #24
    56a0:	10002c4a 	andne	r2, r0, sl, asr #24
    56a4:	4a500001 	bmi	14056b0 <__RAM_SIZE+0x13056b0>
    56a8:	6510002c 	ldrvs	r0, [r0, #-44]	; 0xffffffd4
    56ac:	0110002c 	tsteq	r0, ip, lsr #32
    56b0:	2c655c00 	stclcs	12, cr5, [r5], #-0
    56b4:	2c681000 	stclcs	0, cr1, [r8], #-0
    56b8:	00041000 	andeq	r1, r4, r0
    56bc:	9f5001f3 	svcls	0x005001f3
    56c0:	10002c68 	andne	r2, r0, r8, ror #24
    56c4:	10002c7c 	andne	r2, r0, ip, ror ip
    56c8:	005c0001 	subseq	r0, ip, r1
	...
    56dc:	002be800 	eoreq	lr, fp, r0, lsl #16
    56e0:	002c1e10 	eoreq	r1, ip, r0, lsl lr
    56e4:	51000110 	tstpl	r0, r0, lsl r1
    56e8:	10002c1e 	andne	r2, r0, lr, lsl ip
    56ec:	10002c20 	andne	r2, r0, r0, lsr #24
    56f0:	01f30004 	mvnseq	r0, r4
    56f4:	2c209f51 	stccs	15, cr9, [r0], #-324	; 0xfffffebc
    56f8:	2c651000 	stclcs	0, cr1, [r5], #-0
    56fc:	00011000 	andeq	r1, r1, r0
    5700:	002c6551 	eoreq	r6, ip, r1, asr r5
    5704:	002c6810 	eoreq	r6, ip, r0, lsl r8
    5708:	f3000410 	vqshl.u8	d0, d0, d0
    570c:	689f5101 	ldmvs	pc, {r0, r8, ip, lr}	; <UNPREDICTABLE>
    5710:	7c10002c 	ldcvc	0, cr0, [r0], {44}	; 0x2c
    5714:	0110002c 	tsteq	r0, ip, lsr #32
    5718:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    572c:	10002be8 	andne	r2, r0, r8, ror #23
    5730:	10002c1e 	andne	r2, r0, lr, lsl ip
    5734:	1e520001 	cdpne	0, 5, cr0, cr2, cr1, {0}
    5738:	2010002c 	andscs	r0, r0, ip, lsr #32
    573c:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    5740:	5201f300 	andpl	pc, r1, #0, 6
    5744:	002c209f 	mlaeq	ip, pc, r0, r2	; <UNPREDICTABLE>
    5748:	002c6510 	eoreq	r6, ip, r0, lsl r5
    574c:	52000110 	andpl	r0, r0, #16, 2
    5750:	10002c65 	andne	r2, r0, r5, ror #24
    5754:	10002c68 	andne	r2, r0, r8, ror #24
    5758:	01f30004 	mvnseq	r0, r4
    575c:	2c689f52 	stclcs	15, cr9, [r8], #-328	; 0xfffffeb8
    5760:	2c7c1000 	ldclcs	0, cr1, [ip], #-0
    5764:	00011000 	andeq	r1, r1, r0
    5768:	00000052 	andeq	r0, r0, r2, asr r0
	...
    5778:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    577c:	1e10002b 	cdpne	0, 1, cr0, cr0, cr11, {1}
    5780:	0110002c 	tsteq	r0, ip, lsr #32
    5784:	2c1e5300 	ldccs	3, cr5, [lr], {-0}
    5788:	2c201000 	stccs	0, cr1, [r0], #-0
    578c:	00041000 	andeq	r1, r4, r0
    5790:	9f5301f3 	svcls	0x005301f3
    5794:	10002c20 	andne	r2, r0, r0, lsr #24
    5798:	10002c65 	andne	r2, r0, r5, ror #24
    579c:	65530001 	ldrbvs	r0, [r3, #-1]
    57a0:	6810002c 	ldmdavs	r0, {r2, r3, r5}
    57a4:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    57a8:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    57ac:	002c689f 	mlaeq	ip, pc, r8, r6	; <UNPREDICTABLE>
    57b0:	002c7c10 	eoreq	r7, ip, r0, lsl ip
    57b4:	53000110 	movwpl	r0, #272	; 0x110
	...
    57c0:	00000003 	andeq	r0, r0, r3
	...
    57cc:	2bea0000 	blcs	ffa857d4 <__RAM_segment_used_end__+0xc79857d4>
    57d0:	2bfa1000 	blcs	ffe897d8 <__RAM_segment_used_end__+0xc7d897d8>
    57d4:	00021000 	andeq	r1, r2, r0
    57d8:	2bfa9f30 	blcs	ffead4a0 <__RAM_segment_used_end__+0xc7dad4a0>
    57dc:	2c1e1000 	ldccs	0, cr1, [lr], {-0}
    57e0:	00011000 	andeq	r1, r1, r0
    57e4:	002c2050 	eoreq	r2, ip, r0, asr r0
    57e8:	002c3a10 	eoreq	r3, ip, r0, lsl sl
    57ec:	30000210 	andcc	r0, r0, r0, lsl r2
    57f0:	002c489f 	mlaeq	ip, pc, r8, r4	; <UNPREDICTABLE>
    57f4:	002c5c10 	eoreq	r5, ip, r0, lsl ip
    57f8:	30000210 	andcc	r0, r0, r0, lsl r2
    57fc:	002c609f 	mlaeq	ip, pc, r0, r6	; <UNPREDICTABLE>
    5800:	002c6210 	eoreq	r6, ip, r0, lsl r2
    5804:	50000110 	andpl	r0, r0, r0, lsl r1
    5808:	10002c66 	andne	r2, r0, r6, ror #24
    580c:	10002c6a 	andne	r2, r0, sl, ror #24
    5810:	6a500001 	bvs	140581c <__RAM_SIZE+0x130581c>
    5814:	7c10002c 	ldcvc	0, cr0, [r0], {44}	; 0x2c
    5818:	0210002c 	andseq	r0, r0, #44	; 0x2c
    581c:	009f4300 	addseq	r4, pc, r0, lsl #6
	...
    5828:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    582c:	4810002c 	ldmdami	r0, {r2, r3, r5}
    5830:	0110002c 	tsteq	r0, ip, lsr #32
    5834:	2c5c5400 	cfldrdcs	mvd5, [ip], {-0}
    5838:	2c601000 	stclcs	0, cr1, [r0], #-0
    583c:	00011000 	andeq	r1, r1, r0
    5840:	00000054 	andeq	r0, r0, r4, asr r0
    5844:	00000000 	andeq	r0, r0, r0
    5848:	00010000 	andeq	r0, r1, r0
    584c:	0010002c 	andseq	r0, r0, ip, lsr #32
    5850:	0110002c 	tsteq	r0, ip, lsr #32
    5854:	00005e00 	andeq	r5, r0, r0, lsl #28
    5858:	00000000 	andeq	r0, r0, r0
    585c:	01000000 	mrseq	r0, (UNDEF: 0)
    5860:	10002c0e 	andne	r2, r0, lr, lsl #24
    5864:	10002c0e 	andne	r2, r0, lr, lsl #24
    5868:	005e0001 	subseq	r0, lr, r1
	...
    5874:	002c3201 	eoreq	r3, ip, r1, lsl #4
    5878:	002c3210 	eoreq	r3, ip, r0, lsl r2
    587c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    5888:	10002c7c 	andne	r2, r0, ip, ror ip
    588c:	10002c84 	andne	r2, r0, r4, lsl #25
    5890:	007d0002 	rsbseq	r0, sp, r2
    5894:	10002c84 	andne	r2, r0, r4, lsl #25
    5898:	10002d22 	andne	r2, r0, r2, lsr #26
    589c:	207d0002 	rsbscs	r0, sp, r2
    58a0:	10002d22 	andne	r2, r0, r2, lsr #26
    58a4:	10002d26 	andne	r2, r0, r6, lsr #26
    58a8:	007d0002 	rsbseq	r0, sp, r2
    58ac:	10002d26 	andne	r2, r0, r6, lsr #26
    58b0:	10002d50 	andne	r2, r0, r0, asr sp
    58b4:	207d0002 	rsbscs	r0, sp, r2
	...
    58cc:	2c7c0000 	ldclcs	0, cr0, [ip], #-0
    58d0:	2c941000 	ldccs	0, cr1, [r4], {0}
    58d4:	00011000 	andeq	r1, r1, r0
    58d8:	002c9450 	eoreq	r9, ip, r0, asr r4
    58dc:	002c9810 	eoreq	r9, ip, r0, lsl r8
    58e0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    58e4:	10002c98 	mulne	r0, r8, ip
    58e8:	10002cb0 			; <UNDEFINED> instruction: 0x10002cb0
    58ec:	b0500001 	subslt	r0, r0, r1
    58f0:	2210002c 	andscs	r0, r0, #44	; 0x2c
    58f4:	0110002d 	tsteq	r0, sp, lsr #32
    58f8:	2d225600 	stccs	6, cr5, [r2, #-0]
    58fc:	2d241000 	stccs	0, cr1, [r4, #-0]
    5900:	00011000 	andeq	r1, r1, r0
    5904:	002d2450 	eoreq	r2, sp, r0, asr r4
    5908:	002d2610 	eoreq	r2, sp, r0, lsl r6
    590c:	f3000410 	vqshl.u8	d0, d0, d0
    5910:	269f5001 	ldrcs	r5, [pc], r1
    5914:	5010002d 	andspl	r0, r0, sp, lsr #32
    5918:	0110002d 	tsteq	r0, sp, lsr #32
    591c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5930:	2c7c0000 	ldclcs	0, cr0, [ip], #-0
    5934:	2c941000 	ldccs	0, cr1, [r4], {0}
    5938:	00011000 	andeq	r1, r1, r0
    593c:	002c9451 	eoreq	r9, ip, r1, asr r4
    5940:	002c9810 	eoreq	r9, ip, r0, lsl r8
    5944:	59000110 	stmdbpl	r0, {r4, r8}
    5948:	10002c98 	mulne	r0, r8, ip
    594c:	10002c9c 	mulne	r0, ip, ip
    5950:	9c510001 	mrrcls	0, 0, r0, r1, cr1
    5954:	2210002c 	andscs	r0, r0, #44	; 0x2c
    5958:	0110002d 	tsteq	r0, sp, lsr #32
    595c:	2d225900 			; <UNDEFINED> instruction: 0x2d225900
    5960:	2d261000 	stccs	0, cr1, [r6, #-0]
    5964:	00011000 	andeq	r1, r1, r0
    5968:	002d2651 	eoreq	r2, sp, r1, asr r6
    596c:	002d5010 	eoreq	r5, sp, r0, lsl r0
    5970:	59000110 	stmdbpl	r0, {r4, r8}
	...
    5988:	10002c7c 	andne	r2, r0, ip, ror ip
    598c:	10002c94 	mulne	r0, r4, ip
    5990:	94520001 	ldrbls	r0, [r2], #-1
    5994:	9810002c 	ldmdals	r0, {r2, r3, r5}
    5998:	0110002c 	tsteq	r0, ip, lsr #32
    599c:	2c985700 	ldccs	7, cr5, [r8], {0}
    59a0:	2ca01000 	stccs	0, cr1, [r0]
    59a4:	00011000 	andeq	r1, r1, r0
    59a8:	002ca052 	eoreq	sl, ip, r2, asr r0
    59ac:	002d2210 	eoreq	r2, sp, r0, lsl r2
    59b0:	57000110 	smladpl	r0, r0, r1, r0
    59b4:	10002d22 	andne	r2, r0, r2, lsr #26
    59b8:	10002d26 	andne	r2, r0, r6, lsr #26
    59bc:	26520001 	ldrbcs	r0, [r2], -r1
    59c0:	5010002d 	andspl	r0, r0, sp, lsr #32
    59c4:	0110002d 	tsteq	r0, sp, lsr #32
    59c8:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    59d8:	2c7c0000 	ldclcs	0, cr0, [ip], #-0
    59dc:	2c8e1000 	stccs	0, cr1, [lr], {0}
    59e0:	00011000 	andeq	r1, r1, r0
    59e4:	002c8e53 	eoreq	r8, ip, r3, asr lr
    59e8:	002d2210 	eoreq	r2, sp, r0, lsl r2
    59ec:	58000110 	stmdapl	r0, {r4, r8}
    59f0:	10002d22 	andne	r2, r0, r2, lsr #26
    59f4:	10002d26 	andne	r2, r0, r6, lsr #26
    59f8:	26530001 	ldrbcs	r0, [r3], -r1
    59fc:	5010002d 	andspl	r0, r0, sp, lsr #32
    5a00:	0110002d 	tsteq	r0, sp, lsr #32
    5a04:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    5a10:	2c7c0000 	ldclcs	0, cr0, [ip], #-0
    5a14:	2c981000 	ldccs	0, cr1, [r8], {0}
    5a18:	00021000 	andeq	r1, r2, r0
    5a1c:	2c980091 	ldccs	0, cr0, [r8], {145}	; 0x91
    5a20:	2d501000 	ldclcs	0, cr1, [r0, #-0]
    5a24:	00021000 	andeq	r1, r2, r0
    5a28:	00000091 	muleq	r0, r1, r0
    5a2c:	00000000 	andeq	r0, r0, r0
    5a30:	00010000 	andeq	r0, r1, r0
    5a34:	2c9e0001 	ldccs	0, cr0, [lr], {1}
    5a38:	2cc61000 	stclcs	0, cr1, [r6], {0}
    5a3c:	00011000 	andeq	r1, r1, r0
    5a40:	002cc851 	eoreq	ip, ip, r1, asr r8
    5a44:	002cd710 	eoreq	sp, ip, r0, lsl r7
    5a48:	51000110 	tstpl	r0, r0, lsl r1
	...
    5a54:	00000007 	andeq	r0, r0, r7
	...
    5a60:	2c7c0000 	ldclcs	0, cr0, [ip], #-0
    5a64:	2c941000 	ldccs	0, cr1, [r4], {0}
    5a68:	00021000 	andeq	r1, r2, r0
    5a6c:	2c989f30 	ldccs	15, cr9, [r8], {48}	; 0x30
    5a70:	2cf01000 	ldclcs	0, cr1, [r0]
    5a74:	00021000 	andeq	r1, r2, r0
    5a78:	2cf09f30 	ldclcs	15, cr9, [r0], #192	; 0xc0
    5a7c:	2d181000 	ldccs	0, cr1, [r8, #-0]
    5a80:	00011000 	andeq	r1, r1, r0
    5a84:	002d1c50 	eoreq	r1, sp, r0, asr ip
    5a88:	002d1e10 	eoreq	r1, sp, r0, lsl lr
    5a8c:	50000110 	andpl	r0, r0, r0, lsl r1
    5a90:	10002d1e 	andne	r2, r0, lr, lsl sp
    5a94:	10002d32 	andne	r2, r0, r2, lsr sp
    5a98:	9f300002 	svcls	0x00300002
    5a9c:	10002d32 	andne	r2, r0, r2, lsr sp
    5aa0:	10002d34 	andne	r2, r0, r4, lsr sp
    5aa4:	34500001 	ldrbcc	r0, [r0], #-1
    5aa8:	5010002d 	andspl	r0, r0, sp, lsr #32
    5aac:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5ab0:	009f4300 	addseq	r4, pc, r0, lsl #6
    5ab4:	00000000 	andeq	r0, r0, r0
    5ab8:	01000000 	mrseq	r0, (UNDEF: 0)
    5abc:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    5ac0:	b010002c 	andslt	r0, r0, ip, lsr #32
    5ac4:	0210002c 	andseq	r0, r0, #44	; 0x2c
    5ac8:	b09f3000 	addslt	r3, pc, r0
    5acc:	d710002c 	ldrle	r0, [r0, -ip, lsr #32]
    5ad0:	0110002c 	tsteq	r0, ip, lsr #32
    5ad4:	00005000 	andeq	r5, r0, r0
	...
    5ae0:	2cae0000 	stccs	0, cr0, [lr]
    5ae4:	2d221000 	stccs	0, cr1, [r2, #-0]
    5ae8:	00011000 	andeq	r1, r1, r0
    5aec:	002d2654 	eoreq	r2, sp, r4, asr r6
    5af0:	002d5010 	eoreq	r5, sp, r0, lsl r0
    5af4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    5b04:	10002ce8 	andne	r2, r0, r8, ror #25
    5b08:	10002cf6 	strdne	r2, [r0], -r6
    5b0c:	1e520001 	cdpne	0, 5, cr0, cr2, cr1, {0}
    5b10:	2210002d 	andscs	r0, r0, #45	; 0x2d
    5b14:	0110002d 	tsteq	r0, sp, lsr #32
    5b18:	00005200 	andeq	r5, r0, r0, lsl #4
    5b1c:	00000000 	andeq	r0, r0, r0
    5b20:	00010000 	andeq	r0, r1, r0
    5b24:	10002c9c 	mulne	r0, ip, ip
    5b28:	10002cc6 	andne	r2, r0, r6, asr #25
    5b2c:	00510001 	subseq	r0, r1, r1
	...
    5b38:	002c9c01 	eoreq	r9, ip, r1, lsl #24
    5b3c:	002c9c10 	eoreq	r9, ip, r0, lsl ip
    5b40:	51000110 	tstpl	r0, r0, lsl r1
	...
    5b4c:	2ca60001 	stccs	0, cr0, [r6], #4
    5b50:	2caa1000 	stccs	0, cr1, [sl]
    5b54:	00011000 	andeq	r1, r1, r0
    5b58:	00000051 	andeq	r0, r0, r1, asr r0
    5b5c:	00000000 	andeq	r0, r0, r0
    5b60:	c6000100 	strgt	r0, [r0], -r0, lsl #2
    5b64:	d710002c 	ldrle	r0, [r0, -ip, lsr #32]
    5b68:	0110002c 	tsteq	r0, ip, lsr #32
    5b6c:	00005100 	andeq	r5, r0, r0, lsl #2
    5b70:	00000000 	andeq	r0, r0, r0
    5b74:	01000000 	mrseq	r0, (UNDEF: 0)
    5b78:	10002cc6 	andne	r2, r0, r6, asr #25
    5b7c:	10002cc6 	andne	r2, r0, r6, asr #25
    5b80:	00510001 	subseq	r0, r1, r1
    5b84:	00000000 	andeq	r0, r0, r0
    5b88:	01000000 	mrseq	r0, (UNDEF: 0)
    5b8c:	002cd000 	eoreq	sp, ip, r0
    5b90:	002cd410 	eoreq	sp, ip, r0, lsl r4
    5b94:	51000110 	tstpl	r0, r0, lsl r1
	...
    5ba0:	2cf40100 	ldfcse	f0, [r4]
    5ba4:	2cf41000 	ldclcs	0, cr1, [r4]
    5ba8:	00011000 	andeq	r1, r1, r0
    5bac:	00000053 	andeq	r0, r0, r3, asr r0
    5bb0:	00000000 	andeq	r0, r0, r0
    5bb4:	00010000 	andeq	r0, r1, r0
    5bb8:	0010002d 	andseq	r0, r0, sp, lsr #32
    5bbc:	0110002d 	tsteq	r0, sp, lsr #32
    5bc0:	00005200 	andeq	r5, r0, r0, lsl #4
    5bc4:	00000000 	andeq	r0, r0, r0
    5bc8:	2d500000 	ldclcs	0, cr0, [r0, #-0]
    5bcc:	2d541000 	ldclcs	0, cr1, [r4, #-0]
    5bd0:	00021000 	andeq	r1, r2, r0
    5bd4:	2d54007d 	ldclcs	0, cr0, [r4, #-500]	; 0xfffffe0c
    5bd8:	2d561000 	ldclcs	0, cr1, [r6, #-0]
    5bdc:	00021000 	andeq	r1, r2, r0
    5be0:	2d56207d 	ldclcs	0, cr2, [r6, #-500]	; 0xfffffe0c
    5be4:	2d6e1000 	stclcs	0, cr1, [lr, #-0]
    5be8:	00021000 	andeq	r1, r2, r0
    5bec:	2d6e387d 	stclcs	8, cr3, [lr, #-500]!	; 0xfffffe0c
    5bf0:	2d721000 	ldclcs	0, cr1, [r2, #-0]
    5bf4:	00021000 	andeq	r1, r2, r0
    5bf8:	2d72207d 	ldclcs	0, cr2, [r2, #-500]!	; 0xfffffe0c
    5bfc:	2e981000 	cdpcs	0, 9, cr1, cr8, cr0, {0}
    5c00:	00021000 	andeq	r1, r2, r0
    5c04:	0000387d 	andeq	r3, r0, sp, ror r8
	...
    5c1c:	10002d50 	andne	r2, r0, r0, asr sp
    5c20:	10002d6c 	andne	r2, r0, ip, ror #26
    5c24:	6c500001 	mrrcvs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    5c28:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5c2c:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    5c30:	5001f300 	andpl	pc, r1, r0, lsl #6
    5c34:	002d729f 	mlaeq	sp, pc, r2, r7	; <UNPREDICTABLE>
    5c38:	002d9010 	eoreq	r9, sp, r0, lsl r0
    5c3c:	50000110 	andpl	r0, r0, r0, lsl r1
    5c40:	10002d90 	mulne	r0, r0, sp
    5c44:	10002e5a 	andne	r2, r0, sl, asr lr
    5c48:	5a570001 	bpl	15c5c54 <__RAM_SIZE+0x14c5c54>
    5c4c:	5c10002e 	ldcpl	0, cr0, [r0], {46}	; 0x2e
    5c50:	0110002e 	tsteq	r0, lr, lsr #32
    5c54:	2e5c5000 	cdpcs	0, 5, cr5, cr12, cr0, {0}
    5c58:	2e5e1000 	cdpcs	0, 5, cr1, cr14, cr0, {0}
    5c5c:	00041000 	andeq	r1, r4, r0
    5c60:	9f5001f3 	svcls	0x005001f3
    5c64:	10002e5e 	andne	r2, r0, lr, asr lr
    5c68:	10002e98 	mulne	r0, r8, lr
    5c6c:	00570001 	subseq	r0, r7, r1
	...
    5c80:	50000000 	andpl	r0, r0, r0
    5c84:	6c10002d 	ldcvs	0, cr0, [r0], {45}	; 0x2d
    5c88:	0110002d 	tsteq	r0, sp, lsr #32
    5c8c:	2d6c5100 	stfcse	f5, [ip, #-0]
    5c90:	2d721000 	ldclcs	0, cr1, [r2, #-0]
    5c94:	00041000 	andeq	r1, r4, r0
    5c98:	9f5101f3 	svcls	0x005101f3
    5c9c:	10002d72 	andne	r2, r0, r2, ror sp
    5ca0:	10002d76 	andne	r2, r0, r6, ror sp
    5ca4:	76510001 	ldrbvc	r0, [r1], -r1
    5ca8:	5a10002d 	bpl	405d64 <__RAM_SIZE+0x305d64>
    5cac:	0110002e 	tsteq	r0, lr, lsr #32
    5cb0:	2e5a5900 	vnmlscs.f16	s11, s20, s0	; <UNPREDICTABLE>
    5cb4:	2e5e1000 	cdpcs	0, 5, cr1, cr14, cr0, {0}
    5cb8:	00011000 	andeq	r1, r1, r0
    5cbc:	002e5e51 	eoreq	r5, lr, r1, asr lr
    5cc0:	002e9810 	eoreq	r9, lr, r0, lsl r8
    5cc4:	59000110 	stmdbpl	r0, {r4, r8}
	...
    5cdc:	10002d50 	andne	r2, r0, r0, asr sp
    5ce0:	10002d6c 	andne	r2, r0, ip, ror #26
    5ce4:	6c520001 	mrrcvs	0, 0, r0, r2, cr1
    5ce8:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5cec:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    5cf0:	5201f300 	andpl	pc, r1, #0, 6
    5cf4:	002d729f 	mlaeq	sp, pc, r2, r7	; <UNPREDICTABLE>
    5cf8:	002d7a10 	eoreq	r7, sp, r0, lsl sl
    5cfc:	52000110 	andpl	r0, r0, #16, 2
    5d00:	10002d7a 	andne	r2, r0, sl, ror sp
    5d04:	10002e5a 	andne	r2, r0, sl, asr lr
    5d08:	5a580001 	bpl	1605d14 <__RAM_SIZE+0x1505d14>
    5d0c:	5e10002e 	cdppl	0, 1, cr0, cr0, cr14, {1}
    5d10:	0110002e 	tsteq	r0, lr, lsr #32
    5d14:	2e5e5200 	cdpcs	2, 5, cr5, cr14, cr0, {0}
    5d18:	2e981000 	cdpcs	0, 9, cr1, cr8, cr0, {0}
    5d1c:	00011000 	andeq	r1, r1, r0
    5d20:	00000058 	andeq	r0, r0, r8, asr r0
	...
    5d34:	002d5000 	eoreq	r5, sp, r0
    5d38:	002d6610 	eoreq	r6, sp, r0, lsl r6
    5d3c:	53000110 	movwpl	r0, #272	; 0x110
    5d40:	10002d66 	andne	r2, r0, r6, ror #26
    5d44:	10002d6c 	andne	r2, r0, ip, ror #26
    5d48:	6c5a0001 	mrrcvs	0, 0, r0, sl, cr1
    5d4c:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5d50:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    5d54:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    5d58:	002d729f 	mlaeq	sp, pc, r2, r7	; <UNPREDICTABLE>
    5d5c:	002e5a10 	eoreq	r5, lr, r0, lsl sl
    5d60:	5a000110 	bpl	61a8 <_Min_Stack_Size+0x51a8>
    5d64:	10002e5a 	andne	r2, r0, sl, asr lr
    5d68:	10002e5e 	andne	r2, r0, lr, asr lr
    5d6c:	5e530001 	cdppl	0, 5, cr0, cr3, cr1, {0}
    5d70:	9810002e 	ldmdals	r0, {r1, r2, r3, r5}
    5d74:	0110002e 	tsteq	r0, lr, lsr #32
    5d78:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    5d8c:	2d500000 	ldclcs	0, cr0, [r0, #-0]
    5d90:	2d6c1000 	stclcs	0, cr1, [ip, #-0]
    5d94:	00021000 	andeq	r1, r2, r0
    5d98:	2d720091 	ldclcs	0, cr0, [r2, #-580]!	; 0xfffffdbc
    5d9c:	2d941000 	ldccs	0, cr1, [r4]
    5da0:	00021000 	andeq	r1, r2, r0
    5da4:	2d940091 	ldccs	0, cr0, [r4, #580]	; 0x244
    5da8:	2dc61000 	stclcs	0, cr1, [r6]
    5dac:	00011000 	andeq	r1, r1, r0
    5db0:	002dc856 	eoreq	ip, sp, r6, asr r8
    5db4:	002e5a10 	eoreq	r5, lr, r0, lsl sl
    5db8:	56000110 			; <UNDEFINED> instruction: 0x56000110
    5dbc:	10002e5a 	andne	r2, r0, sl, asr lr
    5dc0:	10002e5e 	andne	r2, r0, lr, asr lr
    5dc4:	00910002 	addseq	r0, r1, r2
    5dc8:	10002e5e 	andne	r2, r0, lr, asr lr
    5dcc:	10002e7c 	andne	r2, r0, ip, ror lr
    5dd0:	00560001 	subseq	r0, r6, r1
	...
    5ddc:	50000000 	andpl	r0, r0, r0
    5de0:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5de4:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5de8:	72049100 	andvc	r9, r4, #0, 2
    5dec:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    5df0:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5df4:	00049100 	andeq	r9, r4, r0, lsl #2
	...
    5e00:	50000000 	andpl	r0, r0, r0
    5e04:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5e08:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e0c:	72089100 	andvc	r9, r8, #0, 2
    5e10:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    5e14:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e18:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    5e24:	50000000 	andpl	r0, r0, r0
    5e28:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5e2c:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e30:	720c9100 	andvc	r9, ip, #0, 2
    5e34:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    5e38:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e3c:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    5e48:	50000000 	andpl	r0, r0, r0
    5e4c:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5e50:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e54:	72109100 	andsvc	r9, r0, #0, 2
    5e58:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    5e5c:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e60:	00109100 	andseq	r9, r0, r0, lsl #2
	...
    5e6c:	50000000 	andpl	r0, r0, r0
    5e70:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5e74:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e78:	72149100 	andsvc	r9, r4, #0, 2
    5e7c:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    5e80:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e84:	00149100 	andseq	r9, r4, r0, lsl #2
	...
    5e90:	50000000 	andpl	r0, r0, r0
    5e94:	7210002d 	andsvc	r0, r0, #45	; 0x2d
    5e98:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e9c:	72189100 	andsvc	r9, r8, #0, 2
    5ea0:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    5ea4:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5ea8:	00189100 	andseq	r9, r8, r0, lsl #2
    5eac:	00000000 	andeq	r0, r0, r0
    5eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    5eb4:	78000100 	stmdavc	r0, {r8}
    5eb8:	9210002d 	andsls	r0, r0, #45	; 0x2d
    5ebc:	0110002d 	tsteq	r0, sp, lsr #32
    5ec0:	2dce5100 	stfcse	f5, [lr]
    5ec4:	2ddd1000 	ldclcs	0, cr1, [sp]
    5ec8:	00011000 	andeq	r1, r1, r0
    5ecc:	00000051 	andeq	r0, r0, r1, asr r0
    5ed0:	00000000 	andeq	r0, r0, r0
    5ed4:	00000900 	andeq	r0, r0, r0, lsl #18
	...
    5ee0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    5ee4:	6c10002d 	ldcvs	0, cr0, [r0], {45}	; 0x2d
    5ee8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5eec:	729f3000 	addsvc	r3, pc, #0
    5ef0:	1210002d 	andsne	r0, r0, #45	; 0x2d
    5ef4:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5ef8:	129f3000 	addsne	r3, pc, #0
    5efc:	5010002e 	andspl	r0, r0, lr, lsr #32
    5f00:	0110002e 	tsteq	r0, lr, lsr #32
    5f04:	2e545000 	cdpcs	0, 5, cr5, cr4, cr0, {0}
    5f08:	2e561000 	cdpcs	0, 5, cr1, cr6, cr0, {0}
    5f0c:	00011000 	andeq	r1, r1, r0
    5f10:	002e5650 	eoreq	r5, lr, r0, asr r6
    5f14:	002e7a10 	eoreq	r7, lr, r0, lsl sl
    5f18:	30000210 	andcc	r0, r0, r0, lsl r2
    5f1c:	002e7a9f 	mlaeq	lr, pc, sl, r7	; <UNPREDICTABLE>
    5f20:	002e7c10 	eoreq	r7, lr, r0, lsl ip
    5f24:	50000110 	andpl	r0, r0, r0, lsl r1
    5f28:	10002e7c 	andne	r2, r0, ip, ror lr
    5f2c:	10002e98 	mulne	r0, r8, lr
    5f30:	9f430002 	svcls	0x00430002
	...
    5f3c:	00000002 	andeq	r0, r0, r2
    5f40:	2d840000 	stccs	0, cr0, [r4]
    5f44:	2d941000 	ldccs	0, cr1, [r4]
    5f48:	00021000 	andeq	r1, r2, r0
    5f4c:	2d949f30 	ldccs	15, cr9, [r4, #192]	; 0xc0
    5f50:	2db61000 	ldccs	0, cr1, [r6]
    5f54:	00011000 	andeq	r1, r1, r0
    5f58:	002db851 	eoreq	fp, sp, r1, asr r8
    5f5c:	002dc410 	eoreq	ip, sp, r0, lsl r4
    5f60:	51000110 	tstpl	r0, r0, lsl r1
	...
    5f6c:	00000002 	andeq	r0, r0, r2
    5f70:	10002d8e 	andne	r2, r0, lr, lsl #27
    5f74:	10002d94 	mulne	r0, r4, sp
    5f78:	9f300002 	svcls	0x00300002
    5f7c:	10002d94 	mulne	r0, r4, sp
    5f80:	10002ddd 	ldrdne	r2, [r0], -sp
    5f84:	00500001 	subseq	r0, r0, r1
	...
    5f90:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    5f94:	5a10002d 	bpl	406050 <__RAM_SIZE+0x306050>
    5f98:	0110002e 	tsteq	r0, lr, lsr #32
    5f9c:	2e5e5400 	cdpcs	4, 5, cr5, cr14, cr0, {0}
    5fa0:	2e981000 	cdpcs	0, 9, cr1, cr8, cr0, {0}
    5fa4:	00011000 	andeq	r1, r1, r0
    5fa8:	00000054 	andeq	r0, r0, r4, asr r0
    5fac:	00000000 	andeq	r0, r0, r0
    5fb0:	00000100 	andeq	r0, r0, r0, lsl #2
    5fb4:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5fb8:	d010002d 	andsle	r0, r0, sp, lsr #32
    5fbc:	0110002d 	tsteq	r0, sp, lsr #32
    5fc0:	2dd05200 	lfmcs	f5, 2, [r0]
    5fc4:	2e5a1000 	cdpcs	0, 5, cr1, cr10, cr0, {0}
    5fc8:	000a1000 	andeq	r1, sl, r0
    5fcc:	91060091 	swpls	r0, r1, [r6]
    5fd0:	31220604 			; <UNDEFINED> instruction: 0x31220604
    5fd4:	2e5e9f1c 	mrccs	15, 2, r9, cr14, cr12, {0}
    5fd8:	2e981000 	cdpcs	0, 9, cr1, cr8, cr0, {0}
    5fdc:	000a1000 	andeq	r1, sl, r0
    5fe0:	91060091 	swpls	r0, r1, [r6]
    5fe4:	31220604 			; <UNDEFINED> instruction: 0x31220604
    5fe8:	00009f1c 	andeq	r9, r0, ip, lsl pc
    5fec:	00000000 	andeq	r0, r0, r0
    5ff0:	00010000 	andeq	r0, r1, r0
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	2d880000 	stccs	0, cr0, [r8]
    5ffc:	2d8e1000 	stccs	0, cr1, [lr]
    6000:	00011000 	andeq	r1, r1, r0
    6004:	002d8e56 	eoreq	r8, sp, r6, asr lr
    6008:	002dd010 	eoreq	sp, sp, r0, lsl r0
    600c:	52000110 	andpl	r0, r0, #16, 2
    6010:	10002dd0 	ldrdne	r2, [r0], -r0
    6014:	10002e5a 	andne	r2, r0, sl, asr lr
    6018:	0091000a 	addseq	r0, r1, sl
    601c:	06049106 	streq	r9, [r4], -r6, lsl #2
    6020:	9f1c3122 	svcls	0x001c3122
    6024:	10002e5e 	andne	r2, r0, lr, asr lr
    6028:	10002e98 	mulne	r0, r8, lr
    602c:	0091000a 	addseq	r0, r1, sl
    6030:	06049106 	streq	r9, [r4], -r6, lsl #2
    6034:	9f1c3122 	svcls	0x001c3122
	...
    6044:	10002e0a 	andne	r2, r0, sl, lsl #28
    6048:	10002e18 	andne	r2, r0, r8, lsl lr
    604c:	56520001 	ldrbpl	r0, [r2], -r1
    6050:	5a10002e 	bpl	406110 <__RAM_SIZE+0x306110>
    6054:	0110002e 	tsteq	r0, lr, lsr #32
    6058:	00005200 	andeq	r5, r0, r0, lsl #4
    605c:	00000000 	andeq	r0, r0, r0
    6060:	00010000 	andeq	r0, r1, r0
    6064:	10002d76 	andne	r2, r0, r6, ror sp
    6068:	10002d92 	mulne	r0, r2, sp
    606c:	00510001 	subseq	r0, r1, r1
	...
    6078:	002d7601 	eoreq	r7, sp, r1, lsl #12
    607c:	002d7610 	eoreq	r7, sp, r0, lsl r6
    6080:	51000110 	tstpl	r0, r0, lsl r1
	...
    608c:	2d800001 	stccs	0, cr0, [r0, #4]
    6090:	2d841000 	stccs	0, cr1, [r4]
    6094:	00011000 	andeq	r1, r1, r0
    6098:	00000051 	andeq	r0, r0, r1, asr r0
    609c:	00000000 	andeq	r0, r0, r0
    60a0:	cc000100 	stfgts	f0, [r0], {-0}
    60a4:	dd10002d 	ldcle	0, cr0, [r0, #-180]	; 0xffffff4c
    60a8:	0110002d 	tsteq	r0, sp, lsr #32
    60ac:	00005100 	andeq	r5, r0, r0, lsl #2
    60b0:	00000000 	andeq	r0, r0, r0
    60b4:	01000000 	mrseq	r0, (UNDEF: 0)
    60b8:	10002dcc 	andne	r2, r0, ip, asr #27
    60bc:	10002dcc 	andne	r2, r0, ip, asr #27
    60c0:	00510001 	subseq	r0, r1, r1
    60c4:	00000000 	andeq	r0, r0, r0
    60c8:	01000000 	mrseq	r0, (UNDEF: 0)
    60cc:	002dd600 	eoreq	sp, sp, r0, lsl #12
    60d0:	002dda10 	eoreq	sp, sp, r0, lsl sl
    60d4:	51000110 	tstpl	r0, r0, lsl r1
	...
    60e0:	2e160100 	mufcss	f0, f6, f0
    60e4:	2e161000 	cdpcs	0, 1, cr1, cr6, cr0, {0}
    60e8:	00011000 	andeq	r1, r1, r0
    60ec:	00000053 	andeq	r0, r0, r3, asr r0
    60f0:	00000000 	andeq	r0, r0, r0
    60f4:	22010000 	andcs	r0, r1, #0
    60f8:	2210002e 	andscs	r0, r0, #46	; 0x2e
    60fc:	0110002e 	tsteq	r0, lr, lsr #32
    6100:	00005200 	andeq	r5, r0, r0, lsl #4
    6104:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	0000006c 	andeq	r0, r0, ip, rrx
   4:	00000002 	andeq	r0, r0, r2
}
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	10000800 	andne	r0, r0, r0, lsl #16
  14:	0000001c 	andeq	r0, r0, ip, lsl r0
        if(ch == '\n' || it >= size) {
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000014 	andeq	r0, r0, r4, lsl r0
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	00000000 	andeq	r0, r0, r0
  34:	00000018 	andeq	r0, r0, r8, lsl r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	00000000 	andeq	r0, r0, r0
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
}
  40:	00000000 	andeq	r0, r0, r0
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	00000000 	andeq	r0, r0, r0
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	1000081c 	andne	r0, r0, ip, lsl r8
  5c:	00000074 	andeq	r0, r0, r4, ror r0
  60:	10000890 	mulne	r0, r0, r8
  64:	00000028 	andeq	r0, r0, r8, lsr #32
	...
  70:	00000024 	andeq	r0, r0, r4, lsr #32
  74:	0bde0002 	bleq	ff780084 <__RAM_segment_used_end__+0xc7680084>
  78:	00040000 	andeq	r0, r4, r0
	...
  84:	00000010 	andeq	r0, r0, r0, lsl r0
  88:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
  8c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  98:	000000a4 	andeq	r0, r0, r4, lsr #1
  9c:	10c70002 	sbcne	r0, r7, r2
  a0:	00040000 	andeq	r0, r4, r0
	...
  ac:	00000008 	andeq	r0, r0, r8
  b0:	100008e4 	andne	r0, r0, r4, ror #17
  b4:	00000002 	andeq	r0, r0, r2
  b8:	00000000 	andeq	r0, r0, r0
  bc:	0000000e 	andeq	r0, r0, lr
  c0:	100008e6 	andne	r0, r0, r6, ror #17
  c4:	00000024 	andeq	r0, r0, r4, lsr #32
  c8:	1000090a 	andne	r0, r0, sl, lsl #18
  cc:	0000007e 	andeq	r0, r0, lr, ror r0
  d0:	10000988 	andne	r0, r0, r8, lsl #19
  d4:	00000138 	andeq	r0, r0, r8, lsr r1
  d8:	10000ac0 	andne	r0, r0, r0, asr #21
  dc:	00000094 	muleq	r0, r4, r0
  e0:	10000b54 	andne	r0, r0, r4, asr fp
  e4:	000000c6 	andeq	r0, r0, r6, asr #1
  e8:	10000c20 	andne	r0, r0, r0, lsr #24
  ec:	000003ea 	andeq	r0, r0, sl, ror #7
  f0:	10001010 	andne	r1, r0, r0, lsl r0
  f4:	00000396 	muleq	r0, r6, r3
  f8:	100013a8 	andne	r1, r0, r8, lsr #7
  fc:	00000680 	andeq	r0, r0, r0, lsl #13
 100:	10001a28 	andne	r1, r0, r8, lsr #20
 104:	0000000c 	andeq	r0, r0, ip
 108:	10001a34 	andne	r1, r0, r4, lsr sl
 10c:	0000002c 	andeq	r0, r0, ip, lsr #32
 110:	00000000 	andeq	r0, r0, r0
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000028 	andeq	r0, r0, r8, lsr #32
 120:	00000000 	andeq	r0, r0, r0
 124:	00000020 	andeq	r0, r0, r0, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	0000001c 	andeq	r0, r0, ip, lsl r0
 130:	00000000 	andeq	r0, r0, r0
 134:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 140:	00000044 	andeq	r0, r0, r4, asr #32
 144:	2c8c0002 	stccs	0, cr0, [ip], {2}
 148:	00040000 	andeq	r0, r4, r0
 14c:	00000000 	andeq	r0, r0, r0
 150:	10001a60 	andne	r1, r0, r0, ror #20
 154:	00000014 	andeq	r0, r0, r4, lsl r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
 160:	10001a74 	andne	r1, r0, r4, ror sl
 164:	0000001e 	andeq	r0, r0, lr, lsl r0
 168:	10001a94 	mulne	r0, r4, sl
 16c:	00000024 	andeq	r0, r0, r4, lsr #32
 170:	00000000 	andeq	r0, r0, r0
 174:	00000008 	andeq	r0, r0, r8
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	2edf0002 	cdpcs	0, 13, cr0, cr15, cr2, {0}
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
 19c:	00000056 	andeq	r0, r0, r6, asr r0
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	37540002 	ldrbcc	r0, [r4, -r2]
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	10001b10 	andne	r1, r0, r0, lsl fp
 1bc:	000000ac 	andeq	r0, r0, ip, lsr #1
	...
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	41180002 	tstmi	r8, r2
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 1dc:	00000038 	andeq	r0, r0, r8, lsr r0
	...
 1e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ec:	48530002 	ldmdami	r3, {r1}^
 1f0:	00040000 	andeq	r0, r4, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	10001bf4 	strdne	r1, [r0], -r4
 1fc:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 208:	0000001c 	andeq	r0, r0, ip, lsl r0
 20c:	50f70002 	rscspl	r0, r7, r2
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	10001c7c 	andne	r1, r0, ip, ror ip
 21c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	5a5e0002 	bpl	178023c <__RAM_SIZE+0x168023c>
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	10001d64 	andne	r1, r0, r4, ror #26
 23c:	0000000c 	andeq	r0, r0, ip
	...
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	66150002 	ldrvs	r0, [r5], -r2
 250:	00040000 	andeq	r0, r4, r0
 254:	00000000 	andeq	r0, r0, r0
 258:	10001d70 	andne	r1, r0, r0, ror sp
 25c:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	675d0002 	ldrbvs	r0, [sp, -r2]
 270:	00040000 	andeq	r0, r4, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
 27c:	0000012c 	andeq	r0, r0, ip, lsr #2
	...
 288:	0000001c 	andeq	r0, r0, ip, lsl r0
 28c:	70940002 	addsvc	r0, r4, r2
 290:	00040000 	andeq	r0, r4, r0
 294:	00000000 	andeq	r0, r0, r0
 298:	10001ee8 	andne	r1, r0, r8, ror #29
 29c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 2a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ac:	79ba0002 	ldmibvc	sl!, {r1}
 2b0:	00040000 	andeq	r0, r4, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	10001f08 	andne	r1, r0, r8, lsl #30
 2bc:	00000044 	andeq	r0, r0, r4, asr #32
	...
 2c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2cc:	815a0002 	cmphi	sl, r2
 2d0:	00040000 	andeq	r0, r4, r0
 2d4:	00000000 	andeq	r0, r0, r0
 2d8:	10001f4c 	andne	r1, r0, ip, asr #30
 2dc:	00000074 	andeq	r0, r0, r4, ror r0
	...
 2e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ec:	898e0002 	stmibhi	lr, {r1}
 2f0:	00040000 	andeq	r0, r4, r0
 2f4:	00000000 	andeq	r0, r0, r0
 2f8:	10001fc0 	andne	r1, r0, r0, asr #31
 2fc:	0000008c 	andeq	r0, r0, ip, lsl #1
	...
 308:	0000001c 	andeq	r0, r0, ip, lsl r0
 30c:	90d60002 	sbcsls	r0, r6, r2
 310:	00040000 	andeq	r0, r4, r0
 314:	00000000 	andeq	r0, r0, r0
 318:	1000204c 	andne	r2, r0, ip, asr #32
 31c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 328:	0000001c 	andeq	r0, r0, ip, lsl r0
 32c:	97920002 	ldrls	r0, [r2, r2]
 330:	00040000 	andeq	r0, r4, r0
 334:	00000000 	andeq	r0, r0, r0
 338:	10002068 	andne	r2, r0, r8, rrx
 33c:	000000d8 	ldrdeq	r0, [r0], -r8
	...
 348:	00000024 	andeq	r0, r0, r4, lsr #32
 34c:	a0ce0002 	sbcge	r0, lr, r2
 350:	00040000 	andeq	r0, r4, r0
 354:	00000000 	andeq	r0, r0, r0
 358:	10002140 	andne	r2, r0, r0, asr #2
 35c:	00000322 	andeq	r0, r0, r2, lsr #6
 360:	00000000 	andeq	r0, r0, r0
 364:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 370:	00000024 	andeq	r0, r0, r4, lsr #32
 374:	b0900002 	addslt	r0, r0, r2
 378:	00040000 	andeq	r0, r4, r0
 37c:	00000000 	andeq	r0, r0, r0
 380:	10002464 	andne	r2, r0, r4, ror #8
 384:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 398:	0000001c 	andeq	r0, r0, ip, lsl r0
 39c:	bf440002 	svclt	0x00440002
 3a0:	00040000 	andeq	r0, r4, r0
 3a4:	00000000 	andeq	r0, r0, r0
 3a8:	10002720 	andne	r2, r0, r0, lsr #14
 3ac:	00000178 	andeq	r0, r0, r8, ror r1
	...
 3b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3bc:	c9b30002 	ldmibgt	r3!, {r1}
 3c0:	00040000 	andeq	r0, r4, r0
 3c4:	00000000 	andeq	r0, r0, r0
 3c8:	10002898 	mulne	r0, r8, r8
 3cc:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
 3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3dc:	d0e50002 	rscle	r0, r5, r2
 3e0:	00040000 	andeq	r0, r4, r0
 3e4:	00000000 	andeq	r0, r0, r0
 3e8:	100028d4 	ldrdne	r2, [r0], -r4
 3ec:	00000018 	andeq	r0, r0, r8, lsl r0
	...
 3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3fc:	d7890002 	strle	r0, [r9, r2]
 400:	00040000 	andeq	r0, r4, r0
 404:	00000000 	andeq	r0, r0, r0
 408:	100028ec 	andne	r2, r0, ip, ror #17
 40c:	00000090 	muleq	r0, r0, r0
	...
 418:	0000001c 	andeq	r0, r0, ip, lsl r0
 41c:	e0bc0002 	adcs	r0, ip, r2
 420:	00040000 	andeq	r0, r4, r0
 424:	00000000 	andeq	r0, r0, r0
 428:	1000297c 	andne	r2, r0, ip, ror r9
 42c:	00000058 	andeq	r0, r0, r8, asr r0
	...
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	e2c30002 	sbc	r0, r3, #2
 440:	00040000 	andeq	r0, r4, r0
 444:	00000000 	andeq	r0, r0, r0
 448:	100029d4 	ldrdne	r2, [r0], -r4
 44c:	0000002e 	andeq	r0, r0, lr, lsr #32
	...
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	e4640002 	strbt	r0, [r4], #-2
 460:	00040000 	andeq	r0, r4, r0
 464:	00000000 	andeq	r0, r0, r0
 468:	10002a04 	andne	r2, r0, r4, lsl #20
 46c:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
	...
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	ef300002 	svc	0x00300002
 480:	00040000 	andeq	r0, r4, r0
 484:	00000000 	andeq	r0, r0, r0
 488:	10002bc0 	andne	r2, r0, r0, asr #23
 48c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 498:	0000001c 	andeq	r0, r0, ip, lsl r0
 49c:	f6490002 			; <UNDEFINED> instruction: 0xf6490002
 4a0:	00040000 	andeq	r0, r4, r0
 4a4:	00000000 	andeq	r0, r0, r0
 4a8:	10002be8 	andne	r2, r0, r8, ror #23
 4ac:	00000094 	muleq	r0, r4, r0
	...
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	fe550002 	cdp2	0, 5, cr0, cr5, cr2, {0}
 4c0:	00040000 	andeq	r0, r4, r0
 4c4:	00000000 	andeq	r0, r0, r0
 4c8:	10002c7c 	andne	r2, r0, ip, ror ip
 4cc:	000000d4 	ldrdeq	r0, [r0], -r4
	...
 4d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4dc:	081e0002 	ldmdaeq	lr, {r1}
 4e0:	00040001 	andeq	r0, r4, r1
 4e4:	00000000 	andeq	r0, r0, r0
 4e8:	10002d50 	andne	r2, r0, r0, asr sp
 4ec:	00000148 	andeq	r0, r0, r8, asr #2
	...
 4f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4fc:	11d60002 	bicsne	r0, r6, r2
 500:	00040001 	andeq	r0, r4, r1
 504:	00000000 	andeq	r0, r0, r0
 508:	10002eb8 			; <UNDEFINED> instruction: 0x10002eb8
 50c:	00000070 	andeq	r0, r0, r0, ror r0
	...
 518:	0000001c 	andeq	r0, r0, ip, lsl r0
 51c:	11fc0002 	mvnsne	r0, r2
 520:	00040001 	andeq	r0, r4, r1
 524:	00000000 	andeq	r0, r0, r0
 528:	10002f28 	andne	r2, r0, r8, lsr #30
 52c:	000000e0 	andeq	r0, r0, r0, ror #1
	...
 538:	0000001c 	andeq	r0, r0, ip, lsl r0
 53c:	12220002 	eorne	r0, r2, #2
 540:	00040001 	andeq	r0, r4, r1
 544:	00000000 	andeq	r0, r0, r0
 548:	10003008 	andne	r3, r0, r8
 54c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 558:	0000001c 	andeq	r0, r0, ip, lsl r0
 55c:	12480002 	subne	r0, r8, #2
 560:	00040001 	andeq	r0, r4, r1
 564:	00000000 	andeq	r0, r0, r0
 568:	100030d8 	ldrdne	r3, [r0], -r8
 56c:	00000040 	andeq	r0, r0, r0, asr #32
	...
 578:	0000001c 	andeq	r0, r0, ip, lsl r0
 57c:	126e0002 	rsbne	r0, lr, #2
 580:	00040001 	andeq	r0, r4, r1
 584:	00000000 	andeq	r0, r0, r0
 588:	10003118 	andne	r3, r0, r8, lsl r1
 58c:	000000b8 	strheq	r0, [r0], -r8
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	10000800 	andne	r0, r0, r0, lsl #16
   4:	1000081c 	andne	r0, r0, ip, lsl r8
}
   8:	00000001 	andeq	r0, r0, r1
   c:	00000001 	andeq	r0, r0, r1
  10:	00000001 	andeq	r0, r0, r1
  14:	00000001 	andeq	r0, r0, r1
        if(ch == '\n' || it >= size) {
  18:	00000001 	andeq	r0, r0, r1
}
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	00000001 	andeq	r0, r0, r1
  34:	00000001 	andeq	r0, r0, r1
        _tx_thread_system_ni_resume(thread_ptr);
  38:	00000001 	andeq	r0, r0, r1
  3c:	00000001 	andeq	r0, r0, r1
}
  40:	00000001 	andeq	r0, r0, r1
  44:	00000001 	andeq	r0, r0, r1
  48:	1000081c 	andne	r0, r0, ip, lsl r8
  4c:	10000890 	mulne	r0, r0, r8
  50:	10000890 	mulne	r0, r0, r8
  54:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
	...
  60:	00000001 	andeq	r0, r0, r1
  64:	00000001 	andeq	r0, r0, r1
  68:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
  6c:	100008e4 	andne	r0, r0, r4, ror #17
	...
  78:	1000092a 	andne	r0, r0, sl, lsr #18
  7c:	1000092c 	andne	r0, r0, ip, lsr #18
  80:	1000092e 	andne	r0, r0, lr, lsr #18
  84:	1000094c 	andne	r0, r0, ip, asr #18
	...
  90:	10000ade 	ldrdne	r0, [r0], -lr
  94:	10000af8 	strdne	r0, [r0], -r8
  98:	10000b00 	andne	r0, r0, r0, lsl #22
  9c:	10000b04 	andne	r0, r0, r4, lsl #22
  a0:	10000b04 	andne	r0, r0, r4, lsl #22
  a4:	10000b32 	andne	r0, r0, r2, lsr fp
	...
  b0:	10000b8a 	andne	r0, r0, sl, lsl #23
  b4:	10000bac 	andne	r0, r0, ip, lsr #23
  b8:	10000bba 			; <UNDEFINED> instruction: 0x10000bba
  bc:	10000bc0 	andne	r0, r0, r0, asr #23
  c0:	10000bc0 	andne	r0, r0, r0, asr #23
  c4:	10000be8 	andne	r0, r0, r8, ror #23
	...
  d0:	100013bc 			; <UNDEFINED> instruction: 0x100013bc
  d4:	100013be 			; <UNDEFINED> instruction: 0x100013be
  d8:	10001868 	andne	r1, r0, r8, ror #16
  dc:	100018da 	ldrdne	r1, [r0], -sl
	...
  e8:	1000163a 	andne	r1, r0, sl, lsr r6
  ec:	1000166c 	andne	r1, r0, ip, ror #12
  f0:	100017c0 	andne	r1, r0, r0, asr #15
  f4:	100017da 	ldrdne	r1, [r0], -sl
	...
 100:	1000168a 	andne	r1, r0, sl, lsl #13
 104:	100016c0 	andne	r1, r0, r0, asr #13
 108:	10001742 	andne	r1, r0, r2, asr #14
 10c:	1000175e 	andne	r1, r0, lr, asr r7
	...
 118:	100016c8 	andne	r1, r0, r8, asr #13
 11c:	10001706 	andne	r1, r0, r6, lsl #14
 120:	10001708 	andne	r1, r0, r8, lsl #14
 124:	10001710 	andne	r1, r0, r0, lsl r7
	...
 130:	00000001 	andeq	r0, r0, r1
 134:	00000001 	andeq	r0, r0, r1
 138:	100008e4 	andne	r0, r0, r4, ror #17
 13c:	100008e6 	andne	r0, r0, r6, ror #17
 140:	00000001 	andeq	r0, r0, r1
 144:	00000001 	andeq	r0, r0, r1
 148:	100008e6 	andne	r0, r0, r6, ror #17
 14c:	1000090a 	andne	r0, r0, sl, lsl #18
 150:	1000090a 	andne	r0, r0, sl, lsl #18
 154:	10000988 	andne	r0, r0, r8, lsl #19
 158:	10000988 	andne	r0, r0, r8, lsl #19
 15c:	10000ac0 	andne	r0, r0, r0, asr #21
 160:	10000ac0 	andne	r0, r0, r0, asr #21
 164:	10000b54 	andne	r0, r0, r4, asr fp
 168:	10000b54 	andne	r0, r0, r4, asr fp
 16c:	10000c1a 	andne	r0, r0, sl, lsl ip
 170:	10000c20 	andne	r0, r0, r0, lsr #24
 174:	1000100a 	andne	r1, r0, sl
 178:	10001010 	andne	r1, r0, r0, lsl r0
 17c:	100013a6 	andne	r1, r0, r6, lsr #7
 180:	100013a8 	andne	r1, r0, r8, lsr #7
 184:	10001a28 	andne	r1, r0, r8, lsr #20
 188:	10001a28 	andne	r1, r0, r8, lsr #20
 18c:	10001a34 	andne	r1, r0, r4, lsr sl
 190:	10001a34 	andne	r1, r0, r4, lsr sl
 194:	10001a60 	andne	r1, r0, r0, ror #20
 198:	00000001 	andeq	r0, r0, r1
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
	...
 1c8:	10001a60 	andne	r1, r0, r0, ror #20
 1cc:	10001a74 	andne	r1, r0, r4, ror sl
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	10001a74 	andne	r1, r0, r4, ror sl
 1dc:	10001a92 	mulne	r0, r2, sl
 1e0:	10001a94 	mulne	r0, r4, sl
 1e4:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
 1e8:	00000001 	andeq	r0, r0, r1
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
	...
 200:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
 204:	10001b0e 	andne	r1, r0, lr, lsl #22
	...
 210:	10001b92 	mulne	r0, r2, fp
 214:	10001b96 	mulne	r0, r6, fp
 218:	10001b98 	mulne	r0, r8, fp
 21c:	10001b9a 	mulne	r0, sl, fp
	...
 228:	10001b10 	andne	r1, r0, r0, lsl fp
 22c:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
	...
 238:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 23c:	10001bf4 	strdne	r1, [r0], -r4
	...
 248:	10001bf4 	strdne	r1, [r0], -r4
 24c:	10001c7c 	andne	r1, r0, ip, ror ip
	...
 258:	10001c7c 	andne	r1, r0, ip, ror ip
 25c:	10001d64 	andne	r1, r0, r4, ror #26
	...
 268:	10001d64 	andne	r1, r0, r4, ror #26
 26c:	10001d70 	andne	r1, r0, r0, ror sp
	...
 278:	10001d70 	andne	r1, r0, r0, ror sp
 27c:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
	...
 288:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
 28c:	10001ee8 	andne	r1, r0, r8, ror #29
	...
 298:	10001ee8 	andne	r1, r0, r8, ror #29
 29c:	10001f08 	andne	r1, r0, r8, lsl #30
	...
 2a8:	10001f08 	andne	r1, r0, r8, lsl #30
 2ac:	10001f4c 	andne	r1, r0, ip, asr #30
	...
 2b8:	10001f4c 	andne	r1, r0, ip, asr #30
 2bc:	10001fc0 	andne	r1, r0, r0, asr #31
	...
 2c8:	10001fd0 	ldrdne	r1, [r0], -r0
 2cc:	10001fd6 	ldrdne	r1, [r0], -r6
 2d0:	10002022 	andne	r2, r0, r2, lsr #32
 2d4:	10002026 	andne	r2, r0, r6, lsr #32
	...
 2e0:	10001fc0 	andne	r1, r0, r0, asr #31
 2e4:	1000204c 	andne	r2, r0, ip, asr #32
	...
 2f0:	1000204c 	andne	r2, r0, ip, asr #32
 2f4:	10002068 	andne	r2, r0, r8, rrx
	...
 300:	1000207e 	andne	r2, r0, lr, ror r0
 304:	10002092 	mulne	r0, r2, r0
 308:	100020bc 	strhne	r2, [r0], -ip
 30c:	1000211a 	andne	r2, r0, sl, lsl r1
	...
 318:	10002068 	andne	r2, r0, r8, rrx
 31c:	10002140 	andne	r2, r0, r0, asr #2
	...
 328:	1000214e 	andne	r2, r0, lr, asr #2
 32c:	10002162 	andne	r2, r0, r2, ror #2
 330:	1000219c 	mulne	r0, ip, r1
 334:	100021fa 	strdne	r2, [r0], -sl
	...
 340:	1000227e 	andne	r2, r0, lr, ror r2
 344:	10002292 	mulne	r0, r2, r2
 348:	100022f0 	strdne	r2, [r0], -r0
 34c:	1000234e 	andne	r2, r0, lr, asr #6
	...
 358:	1000238a 	andne	r2, r0, sl, lsl #7
 35c:	1000239e 	mulne	r0, lr, r3
 360:	10002404 	andne	r2, r0, r4, lsl #8
 364:	10002462 	andne	r2, r0, r2, ror #8
	...
 370:	10002140 	andne	r2, r0, r0, asr #2
 374:	10002462 	andne	r2, r0, r2, ror #8
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
	...
 388:	10002470 	andne	r2, r0, r0, ror r4
 38c:	10002484 	andne	r2, r0, r4, lsl #9
 390:	1000254c 	andne	r2, r0, ip, asr #10
 394:	100025ac 	andne	r2, r0, ip, lsr #11
	...
 3a0:	100024e6 	andne	r2, r0, r6, ror #9
 3a4:	100024fc 	strdne	r2, [r0], -ip
 3a8:	10002680 	andne	r2, r0, r0, lsl #13
 3ac:	100026e0 	andne	r2, r0, r0, ror #13
	...
 3b8:	10002464 	andne	r2, r0, r4, ror #8
 3bc:	10002720 	andne	r2, r0, r0, lsr #14
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
	...
 3d0:	10002726 	andne	r2, r0, r6, lsr #14
 3d4:	1000273a 	andne	r2, r0, sl, lsr r7
 3d8:	10002752 	andne	r2, r0, r2, asr r7
 3dc:	100027b0 			; <UNDEFINED> instruction: 0x100027b0
	...
 3e8:	1000274c 	andne	r2, r0, ip, asr #14
 3ec:	10002750 	andne	r2, r0, r0, asr r7
 3f0:	100027b0 			; <UNDEFINED> instruction: 0x100027b0
 3f4:	100027b4 			; <UNDEFINED> instruction: 0x100027b4
 3f8:	100027cc 	andne	r2, r0, ip, asr #15
 3fc:	100027d0 	ldrdne	r2, [r0], -r0
 400:	100027d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 404:	100027d6 	ldrdne	r2, [r0], -r6
 408:	100027fc 	strdne	r2, [r0], -ip
 40c:	10002800 	andne	r2, r0, r0, lsl #16
	...
 418:	10002804 	andne	r2, r0, r4, lsl #16
 41c:	10002816 	andne	r2, r0, r6, lsl r8
 420:	10002818 	andne	r2, r0, r8, lsl r8
 424:	10002898 	mulne	r0, r8, r8
	...
 430:	10002720 	andne	r2, r0, r0, lsr #14
 434:	10002898 	mulne	r0, r8, r8
	...
 440:	10002898 	mulne	r0, r8, r8
 444:	100028d4 	ldrdne	r2, [r0], -r4
	...
 450:	100028d4 	ldrdne	r2, [r0], -r4
 454:	100028ec 	andne	r2, r0, ip, ror #17
	...
 460:	100028ec 	andne	r2, r0, ip, ror #17
 464:	1000297c 	andne	r2, r0, ip, ror r9
	...
 470:	1000297c 	andne	r2, r0, ip, ror r9
 474:	100029d4 	ldrdne	r2, [r0], -r4
	...
 480:	100029d4 	ldrdne	r2, [r0], -r4
 484:	10002a02 	andne	r2, r0, r2, lsl #20
	...
 490:	10002a04 	andne	r2, r0, r4, lsl #20
 494:	10002bc0 	andne	r2, r0, r0, asr #23
	...
 4a0:	10002bc0 	andne	r2, r0, r0, asr #23
 4a4:	10002be8 	andne	r2, r0, r8, ror #23
	...
 4b0:	10002be8 	andne	r2, r0, r8, ror #23
 4b4:	10002c7c 	andne	r2, r0, ip, ror ip
	...
 4c0:	10002c7c 	andne	r2, r0, ip, ror ip
 4c4:	10002d50 	andne	r2, r0, r0, asr sp
	...
 4d0:	10002d50 	andne	r2, r0, r0, asr sp
 4d4:	10002e98 	mulne	r0, r8, lr
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	0000029e 	muleq	r0, lr, r2
       4:	011d0003 	tsteq	sp, r3
}
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	2f2e2e00 	svccs	0x002e2e00
      2c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
      34:	6f747262 	svcvs	0x00747262
        _tx_thread_system_ni_resume(thread_ptr);
      38:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
      3c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
}
      40:	6f702f78 	svcvs	0x00702f78
      44:	2f737472 	svccs	0x00737472
      48:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
      4c:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; fffffec0 <__RAM_segment_used_end__+0xc7effec0>
      50:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
      54:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
      58:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
      5c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
      60:	2f2e2e2f 	svccs	0x002e2e2f
      64:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
      68:	2f736f74 	svccs	0x00736f74
      6c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
      70:	2f786461 	svccs	0x00786461
      74:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
      78:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
      7c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
      80:	6f432f2e 	svcvs	0x00432f2e
      84:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
      88:	6300636e 	movwvs	r6, #878	; 0x36e
      8c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
      90:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
      94:	6f646978 	svcvs	0x00646978
      98:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
      9c:	6172676f 	cmnvs	r2, pc, ror #14
      a0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
      a4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
      a8:	63675c63 	cmnvs	r7, #25344	; 0x6300
      ac:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
      b0:	6f6e2d6d 	svcvs	0x006e2d6d
      b4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
      b8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
      bc:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
      c0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
      c4:	30312e31 	eorscc	r2, r1, r1, lsr lr
      c8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
      cc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
      d0:	61652d65 	cmnvs	r5, r5, ror #26
      d4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
      d8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      dc:	00006564 	andeq	r6, r0, r4, ror #10
      e0:	6e69616d 	powvsez	f6, f1, #5.0
      e4:	0100632e 	tsteq	r0, lr, lsr #6
      e8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
      ec:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
      f0:	00682e74 	rsbeq	r2, r8, r4, ror lr
      f4:	74000002 	strvc	r0, [r0], #-2
      f8:	70615f78 	rsbvc	r5, r1, r8, ror pc
      fc:	00682e69 	rsbeq	r2, r8, r9, ror #28
     100:	75000003 	strvc	r0, [r0, #-3]
     104:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     108:	00040068 	andeq	r0, r4, r8, rrx
     10c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     110:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     114:	00000500 	andeq	r0, r0, r0, lsl #10
     118:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     11c:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     120:	00003e6e 	andeq	r3, r0, lr, ror #28
     124:	05000000 	streq	r0, [r0, #-0]
     128:	0205002f 	andeq	r0, r5, #47	; 0x2f
     12c:	10000800 	andne	r0, r0, r0, lsl #16
     130:	06012c03 	streq	r2, [r1], -r3, lsl #24
     134:	06050501 	streq	r0, [r5], -r1, lsl #10
     138:	06090521 	streq	r0, [r9], -r1, lsr #10
     13c:	00050501 	andeq	r0, r5, r1, lsl #10
     140:	06010402 	streq	r0, [r1], -r2, lsl #8
     144:	00090521 	andeq	r0, r9, r1, lsr #10
     148:	13010402 	movwne	r0, #5122	; 0x1402
     14c:	01040200 	mrseq	r0, R12_usr
     150:	02002006 	andeq	r2, r0, #6
     154:	3d060104 	stfccs	f0, [r6, #-16]
     158:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     15c:	05480104 	strbeq	r0, [r8, #-260]	; 0xfffffefc
     160:	04020009 	streq	r0, [r2], #-9
     164:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     168:	01010004 	tsteq	r1, r4
     16c:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
     170:	00000002 	andeq	r0, r0, r2
     174:	05051900 	streq	r1, [r5, #-2304]	; 0xfffff700
     178:	06010521 	streq	r0, [r1], -r1, lsr #10
     17c:	0004023d 	andeq	r0, r4, sp, lsr r2
     180:	1c050101 	stfnes	f0, [r5], {1}
     184:	00020500 	andeq	r0, r2, r0, lsl #10
     188:	03000000 	movweq	r0, #0
     18c:	0505010b 	streq	r0, [r5, #-267]	; 0xfffffef5
     190:	06010521 	streq	r0, [r1], -r1, lsr #10
     194:	0004023d 	andeq	r0, r4, sp, lsr r2
     198:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     19c:	00020500 	andeq	r0, r2, r0, lsl #10
     1a0:	03000000 	movweq	r0, #0
     1a4:	0505010f 	streq	r0, [r5, #-271]	; 0xfffffef1
     1a8:	06010521 	streq	r0, [r1], -r1, lsr #10
     1ac:	0005024b 	andeq	r0, r5, fp, asr #4
     1b0:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     1b4:	00020500 	andeq	r0, r2, r0, lsl #10
     1b8:	03000000 	movweq	r0, #0
     1bc:	05050113 	streq	r0, [r5, #-275]	; 0xfffffeed
     1c0:	01054b21 	tsteq	r5, r1, lsr #22
     1c4:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     1c8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     1cc:	02050012 	andeq	r0, r5, #18
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	05011803 	streq	r1, [r1, #-2051]	; 0xfffff7fd
     1d8:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     1dc:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     1e0:	01010005 	tsteq	r1, r5
     1e4:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     1e8:	00000002 	andeq	r0, r0, r2
     1ec:	011d0300 	tsteq	sp, r0, lsl #6
     1f0:	4b210505 	blmi	84160c <__RAM_SIZE+0x74160c>
     1f4:	2f060105 	svccs	0x00060105
     1f8:	01000502 	tsteq	r0, r2, lsl #10
     1fc:	00120501 	andseq	r0, r2, r1, lsl #10
     200:	00000205 	andeq	r0, r0, r5, lsl #4
     204:	22030000 	andcs	r0, r3, #0
     208:	21050501 	tstcs	r5, r1, lsl #10
     20c:	0601054b 	streq	r0, [r1], -fp, asr #10
     210:	0005022f 	andeq	r0, r5, pc, lsr #4
     214:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     218:	00020500 	andeq	r0, r2, r0, lsl #10
     21c:	03000000 	movweq	r0, #0
     220:	05050127 	streq	r0, [r5, #-295]	; 0xfffffed9
     224:	01054b21 	tsteq	r5, r1, lsr #22
     228:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     22c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     230:	02050037 	andeq	r0, r5, #55	; 0x37
     234:	1000081c 	andne	r0, r0, ip, lsl r8
     238:	06013403 	streq	r3, [r1], -r3, lsl #8
     23c:	06050501 	streq	r0, [r5], -r1, lsl #10
     240:	060b052f 	streq	r0, [fp], -pc, lsr #10
     244:	06050501 	streq	r0, [r5], -r1, lsl #10
     248:	1413132f 	ldrne	r1, [r3], #-815	; 0xfffffcd1
     24c:	2f068206 	svccs	0x00068206
     250:	052f0875 	streq	r0, [pc, #-2165]!	; fffff9e3 <__RAM_segment_used_end__+0xc7eff9e3>
     254:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     258:	0101000f 	tsteq	r1, pc
     25c:	05001005 	streq	r1, [r0, #-5]
     260:	00089002 	andeq	r9, r8, r2
     264:	00c00310 	sbceq	r0, r0, r0, lsl r3
     268:	21050501 	tstcs	r5, r1, lsl #10
     26c:	053d3013 	ldreq	r3, [sp, #-19]!	; 0xffffffed
     270:	052a0609 	streq	r0, [sl, #-1545]!	; 0xfffff9f7
     274:	04020005 	streq	r0, [r2], #-5
     278:	05260601 	streq	r0, [r6, #-1537]!	; 0xfffff9ff
     27c:	04020009 	streq	r0, [r2], #-9
     280:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
     284:	00210104 	eoreq	r0, r1, r4, lsl #2
     288:	06010402 	streq	r0, [r1], -r2, lsl #8
     28c:	000b0520 	andeq	r0, fp, r0, lsr #10
     290:	06010402 	streq	r0, [r1], -r2, lsl #8
     294:	0009053a 	andeq	r0, r9, sl, lsr r5
     298:	06010402 	streq	r0, [r1], -r2, lsl #8
     29c:	00060214 	andeq	r0, r6, r4, lsl r2
     2a0:	01d10101 	bicseq	r0, r1, r1, lsl #2
     2a4:	00030000 	andeq	r0, r3, r0
     2a8:	00000181 	andeq	r0, r0, r1, lsl #3
     2ac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     2b0:	0101000d 	tsteq	r1, sp
     2b4:	00000101 	andeq	r0, r0, r1, lsl #2
     2b8:	00000100 	andeq	r0, r0, r0, lsl #2
     2bc:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
     2c0:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     2c4:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     2c8:	63006e6f 	movwvs	r6, #3695	; 0xe6f
     2cc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     2d0:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     2d4:	6f646978 	svcvs	0x00646978
     2d8:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     2dc:	6172676f 	cmnvs	r2, pc, ror #14
     2e0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     2e4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     2e8:	63675c63 	cmnvs	r7, #25344	; 0x6300
     2ec:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     2f0:	6f6e2d6d 	svcvs	0x006e2d6d
     2f4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     2f8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     2fc:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     300:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     304:	30312e31 	eorscc	r2, r1, r1, lsr lr
     308:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     30c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     310:	61652d65 	cmnvs	r5, r5, ror #26
     314:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     318:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     31c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     320:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     324:	6300656e 	movwvs	r6, #1390	; 0x56e
     328:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     32c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     330:	6f646978 	svcvs	0x00646978
     334:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     338:	6172676f 	cmnvs	r2, pc, ror #14
     33c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     340:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     344:	63675c63 	cmnvs	r7, #25344	; 0x6300
     348:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     34c:	6f6e2d6d 	svcvs	0x006e2d6d
     350:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     354:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     358:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     35c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     360:	30312e31 	eorscc	r2, r1, r1, lsr lr
     364:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     368:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     36c:	61652d65 	cmnvs	r5, r5, ror #26
     370:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     374:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     378:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     37c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     380:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     384:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     388:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     38c:	5f534953 	svcpl	0x00534953
     390:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
     394:	2f534953 	svccs	0x00534953
     398:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     39c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     3a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     3a4:	2f2e2e00 	svccs	0x002e2e00
     3a8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     3ac:	2f737265 	svccs	0x00737265
     3b0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     3b4:	2f355f53 	svccs	0x00355f53
     3b8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     3bc:	412f6563 			; <UNDEFINED> instruction: 0x412f6563
     3c0:	412f4d52 			; <UNDEFINED> instruction: 0x412f4d52
     3c4:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     3c8:	492f3333 	stmdbmi	pc!, {r0, r1, r4, r5, r8, r9, ip, sp}	; <UNPREDICTABLE>
     3cc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     3d0:	00006564 	andeq	r6, r0, r4, ror #10
     3d4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     3d8:	415f6d65 	cmpmi	pc, r5, ror #26
     3dc:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     3e0:	632e3333 			; <UNDEFINED> instruction: 0x632e3333
     3e4:	00000100 	andeq	r0, r0, r0, lsl #2
     3e8:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     3ec:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     3f0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     3f4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     3f8:	00000200 	andeq	r0, r0, r0, lsl #4
     3fc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     400:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     404:	00030068 	andeq	r0, r3, r8, rrx
     408:	726f6300 	rsbvc	r6, pc, #0, 6
     40c:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     410:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     414:	00000400 	andeq	r0, r0, r0, lsl #8
     418:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     41c:	415f6d65 	cmpmi	pc, r5, ror #26
     420:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     424:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     428:	00000500 	andeq	r0, r0, r0, lsl #10
     42c:	00010500 	andeq	r0, r1, r0, lsl #10
     430:	00000205 	andeq	r0, r0, r5, lsl #4
     434:	c4030000 	strgt	r0, [r3], #-0
     438:	03050100 	movweq	r0, #20736	; 0x5100
     43c:	06130513 			; <UNDEFINED> instruction: 0x06130513
     440:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
     444:	01000502 	tsteq	r0, r2, lsl #10
     448:	00010501 	andeq	r0, r1, r1, lsl #10
     44c:	08b80205 	ldmeq	r8!, {r0, r2, r9}
     450:	cc031000 	stcgt	0, cr1, [r3], {-0}
     454:	03050100 	movweq	r0, #20736	; 0x5100
     458:	060d0515 			; <UNDEFINED> instruction: 0x060d0515
     45c:	06030501 	streq	r0, [r3], -r1, lsl #10
     460:	060e0540 	streq	r0, [lr], -r0, asr #10
     464:	06030501 	streq	r0, [r3], -r1, lsl #10
     468:	05660c03 	strbeq	r0, [r6, #-3075]!	; 0xfffff3fd
     46c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     470:	0a023d01 	beq	8f87c <SYSTICK_CYCLES+0x6683d>
     474:	0d010100 	stfeqs	f0, [r1, #-0]
     478:	03000012 	movweq	r0, #18
     47c:	0001a100 	andeq	sl, r1, r0, lsl #2
     480:	fb010200 	blx	40c8a <SYSTICK_CYCLES+0x17c4b>
     484:	01000d0e 	tsteq	r0, lr, lsl #26
     488:	00010101 	andeq	r0, r1, r1, lsl #2
     48c:	00010000 	andeq	r0, r1, r0
     490:	2e2e0100 	sufcse	f0, f6, f0
     494:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     498:	72532f65 	subsvc	r2, r3, #404	; 0x194
     49c:	3a630063 	bcc	18c0630 <__RAM_SIZE+0x17c0630>
     4a0:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     4a4:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     4a8:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     4ac:	6f72705c 	svcvs	0x0072705c
     4b0:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     4b4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     4b8:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     4bc:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     4c0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     4c4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     4c8:	61652d65 	cmnvs	r5, r5, ror #26
     4cc:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     4d0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     4d4:	31323032 	teqcc	r2, r2, lsr r0
     4d8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     4dc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     4e0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     4e4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     4e8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     4ec:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     4f0:	616d5c65 	cmnvs	sp, r5, ror #24
     4f4:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     4f8:	3a630065 	bcc	18c0694 <__RAM_SIZE+0x17c0694>
     4fc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     500:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     504:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     508:	6f72705c 	svcvs	0x0072705c
     50c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     510:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     514:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     518:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     51c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     520:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     524:	61652d65 	cmnvs	r5, r5, ror #26
     528:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     52c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     530:	31323032 	teqcc	r2, r2, lsr r0
     534:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     538:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     53c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     540:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     544:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     548:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     54c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     550:	3a630073 	bcc	18c0724 <__RAM_SIZE+0x17c0724>
     554:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     558:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     55c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     560:	6f72705c 	svcvs	0x0072705c
     564:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     568:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     56c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     570:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     574:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     578:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     57c:	61652d65 	cmnvs	r5, r5, ror #26
     580:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     584:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     588:	31323032 	teqcc	r2, r2, lsr r0
     58c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     590:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
     594:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     598:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     59c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     5a0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     5a4:	30315c69 	eorscc	r5, r1, r9, ror #24
     5a8:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     5ac:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     5b0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     5b4:	2f2e2e00 	svccs	0x002e2e00
     5b8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     5bc:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     5c0:	72700000 	rsbsvc	r0, r0, #0
     5c4:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     5c8:	0100632e 	tsteq	r0, lr, lsr #6
     5cc:	645f0000 	ldrbvs	r0, [pc], #-0	; 5d4 <STACK_SIZE+0x1d4>
     5d0:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     5d4:	745f746c 	ldrbvc	r7, [pc], #-1132	; 5dc <STACK_SIZE+0x1dc>
     5d8:	73657079 	cmnvc	r5, #121	; 0x79
     5dc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     5e0:	735f0000 	cmpvc	pc, #0
     5e4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     5e8:	00682e74 	rsbeq	r2, r8, r4, ror lr
     5ec:	73000003 	movwvc	r0, #3
     5f0:	72616474 	rsbvc	r6, r1, #116, 8	; 0x74000000
     5f4:	00682e67 	rsbeq	r2, r8, r7, ror #28
     5f8:	73000004 	movwvc	r0, #4
     5fc:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     600:	00682e66 	rsbeq	r2, r8, r6, ror #28
     604:	3c000004 	stccc	0, cr0, [r0], {4}
     608:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     60c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
     610:	0000003e 	andeq	r0, r0, lr, lsr r0
     614:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
     618:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     61c:	00050068 	andeq	r0, r5, r8, rrx
     620:	01050000 	mrseq	r0, (UNDEF: 5)
     624:	00020500 	andeq	r0, r2, r0, lsl #10
     628:	03000000 	movweq	r0, #0
     62c:	05010185 	streq	r0, [r1, #-389]	; 0xfffffe7b
     630:	06051303 	streq	r1, [r5], -r3, lsl #6
     634:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     638:	1a052f06 	bne	14c258 <__RAM_SIZE+0x4c258>
     63c:	01050106 	tsteq	r5, r6, lsl #2
     640:	00010222 	andeq	r0, r1, r2, lsr #4
     644:	01050101 	tsteq	r5, r1, lsl #2
     648:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
     64c:	03100008 	tsteq	r0, #8
     650:	0501018e 	streq	r0, [r1, #-398]	; 0xfffffe72
     654:	14051303 	strne	r1, [r5], #-771	; 0xfffffcfd
     658:	01220501 			; <UNDEFINED> instruction: 0x01220501
     65c:	05012d05 	streq	r2, [r1, #-3333]	; 0xfffff2fb
     660:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     664:	01010001 	tsteq	r1, r1
     668:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     66c:	00000002 	andeq	r0, r0, r2
     670:	019f0300 	orrseq	r0, pc, r0, lsl #6
     674:	13030501 	movwne	r0, #13569	; 0x3501
     678:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
     67c:	06051303 	streq	r1, [r5], -r3, lsl #6
     680:	01050106 	tsteq	r5, r6, lsl #2
     684:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
     688:	06210524 	strteq	r0, [r1], -r4, lsr #10
     68c:	20060501 	andcs	r0, r6, r1, lsl #10
     690:	22010520 	andcs	r0, r1, #32, 10	; 0x8000000
     694:	00010220 	andeq	r0, r1, r0, lsr #4
     698:	01050101 	tsteq	r5, r1, lsl #2
     69c:	e6020500 	str	r0, [r2], -r0, lsl #10
     6a0:	03100008 	tsteq	r0, #8
     6a4:	060101bc 			; <UNDEFINED> instruction: 0x060101bc
     6a8:	06030501 	streq	r0, [r3], -r1, lsl #10
     6ac:	10051321 	andne	r1, r5, r1, lsr #6
     6b0:	09051106 	stmdbeq	r5, {r1, r2, r8, ip}
     6b4:	06050521 	streq	r0, [r5], -r1, lsr #10
     6b8:	060b0521 	streq	r0, [fp], -r1, lsr #10
     6bc:	2e2a0501 	cfsh64cs	mvdx0, mvdx10, #1
     6c0:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
     6c4:	07052011 	smladeq	r5, r1, r0, r2
     6c8:	0609052e 	streq	r0, [r9], -lr, lsr #10
     6cc:	0615051f 			; <UNDEFINED> instruction: 0x0615051f
     6d0:	200a0501 	andcs	r0, sl, r1, lsl #10
     6d4:	03061405 	movweq	r1, #25605	; 0x6405
     6d8:	03052076 	movweq	r2, #20598	; 0x5076
     6dc:	06160514 			; <UNDEFINED> instruction: 0x06160514
     6e0:	05202001 	streq	r2, [r0, #-1]!
     6e4:	03051a09 	movweq	r1, #23049	; 0x5a09
     6e8:	01053106 	tsteq	r5, r6, lsl #2
     6ec:	01021306 	tsteq	r2, r6, lsl #6
     6f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     6f4:	02050001 	andeq	r0, r5, #1
     6f8:	1000090a 	andne	r0, r0, sl, lsl #18
     6fc:	0101c703 	tsteq	r1, r3, lsl #14
     700:	03050106 	movweq	r0, #20742	; 0x5106
     704:	0515bb06 	ldreq	fp, [r5, #-2822]	; 0xfffff4fa
     708:	20010606 	andcs	r0, r1, r6, lsl #12
     70c:	053d1105 	ldreq	r1, [sp, #-261]!	; 0xfffffefb
     710:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     714:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     718:	04020005 	streq	r0, [r2], #-5
     71c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     720:	04020007 	streq	r0, [r2], #-7
     724:	002f0603 	eoreq	r0, pc, r3, lsl #12
     728:	06030402 	streq	r0, [r3], -r2, lsl #8
     72c:	0025052e 	eoreq	r0, r5, lr, lsr #10
     730:	06030402 	streq	r0, [r3], -r2, lsl #8
     734:	00260549 	eoreq	r0, r6, r9, asr #10
     738:	06030402 	streq	r0, [r3], -r2, lsl #8
     73c:	00070501 	andeq	r0, r7, r1, lsl #10
     740:	2f030402 	svccs	0x00030402
     744:	03040200 	movweq	r0, #16896	; 0x4200
     748:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     74c:	05053c03 	streq	r3, [r5, #-3075]	; 0xfffff3fd
     750:	20061806 	andcs	r1, r6, r6, lsl #16
     754:	0609052e 	streq	r0, [r9], -lr, lsr #10
     758:	33030565 	movwcc	r0, #13669	; 0x3565
     75c:	01060605 	tsteq	r6, r5, lsl #12
     760:	05510105 	ldrbeq	r0, [r1, #-261]	; 0xfffffefb
     764:	7a03060b 	bvc	c1f98 <SYSTICK_CYCLES+0x98f59>
     768:	0610054a 	ldreq	r0, [r0], -sl, asr #10
     76c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     770:	2f060705 	svccs	0x00060705
     774:	06022006 	streq	r2, [r2], -r6
     778:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     77c:	02050001 	andeq	r0, r5, #1
     780:	10000988 	andne	r0, r0, r8, lsl #19
     784:	0101e303 	tsteq	r1, r3, lsl #6
     788:	03050106 	movweq	r0, #20742	; 0x5106
     78c:	0605ca06 	streq	ip, [r5], -r6, lsl #20
     790:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     794:	08053d06 	stmdaeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     798:	0f050106 	svceq	0x00050106
     79c:	01040200 	mrseq	r0, R12_usr
     7a0:	002a0520 	eoreq	r0, sl, r0, lsr #10
     7a4:	3c020402 	cfstrscc	mvf0, [r2], {2}
     7a8:	02003705 	andeq	r3, r0, #1310720	; 0x140000
     7ac:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
     7b0:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     7b4:	2001060c 	andcs	r0, r1, ip, lsl #12
     7b8:	23060705 	movwcs	r0, #26373	; 0x6705
     7bc:	01061205 	tsteq	r6, r5, lsl #4
     7c0:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     7c4:	051f060b 	ldreq	r0, [pc, #-1547]	; 1c1 <__STACKSEAL_SIZE+0x1c1>
     7c8:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     7cc:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     7d0:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
     7d4:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     7d8:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
     7dc:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     7e0:	07052e02 	streq	r2, [r5, -r2, lsl #28]
     7e4:	12052f06 	andne	r2, r5, #6, 30
     7e8:	0e050106 	adfeqs	f0, f5, f6
     7ec:	0305204a 	movweq	r2, #20554	; 0x504a
     7f0:	06052506 	streq	r2, [r5], -r6, lsl #10
     7f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     7f8:	08053d06 	stmdaeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     7fc:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     800:	01040200 	mrseq	r0, R12_usr
     804:	002b053c 	eoreq	r0, fp, ip, lsr r5
     808:	20020402 	andcs	r0, r2, r2, lsl #8
     80c:	02003d05 	andeq	r3, r0, #320	; 0x140
     810:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     814:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
     818:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     81c:	053f060a 	ldreq	r0, [pc, #-1546]!	; 21a <__STACKSEAL_SIZE+0x21a>
     820:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     824:	053f060a 	ldreq	r0, [pc, #-1546]!	; 222 <__STACKSEAL_SIZE+0x222>
     828:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     82c:	053f0605 	ldreq	r0, [pc, #-1541]!	; 22f <__STACKSEAL_SIZE+0x22f>
     830:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     834:	052f0607 	streq	r0, [pc, #-1543]!	; 235 <__STACKSEAL_SIZE+0x235>
     838:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     83c:	03054a0e 	movweq	r4, #23054	; 0x5a0e
     840:	06052406 	streq	r2, [r5], -r6, lsl #8
     844:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     848:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     84c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     850:	12053d06 	andne	r3, r5, #384	; 0x180
     854:	0e050106 	adfeqs	f0, f5, f6
     858:	0603054a 	streq	r0, [r3], -sl, asr #10
     85c:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     860:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     864:	07056701 	streq	r6, [r5, -r1, lsl #14]
     868:	3c600306 	stclcc	3, cr0, [r0], #-24	; 0xffffffe8
     86c:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
     870:	0f052e01 	svceq	0x00052e01
     874:	01040200 	mrseq	r0, R12_usr
     878:	3b0a0520 	blcc	281d00 <__RAM_SIZE+0x181d00>
     87c:	30060905 	andcc	r0, r6, r5, lsl #18
     880:	01060c05 	tsteq	r6, r5, lsl #24
     884:	1e0a0520 	cfsh32ne	mvfx0, mvfx10, #16
     888:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     88c:	05330104 	ldreq	r0, [r3, #-260]!	; 0xfffffefc
     890:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     894:	07053c02 	streq	r3, [r5, -r2, lsl #24]
     898:	12052f06 	andne	r2, r5, #6, 30
     89c:	0e050106 	adfeqs	f0, f5, f6
     8a0:	2012054a 	andscs	r0, r2, sl, asr #10
     8a4:	02001c05 	andeq	r1, r0, #1280	; 0x500
     8a8:	05220104 	streq	r0, [r2, #-260]!	; 0xfffffefc
     8ac:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
     8b0:	07053c02 	streq	r3, [r5, -r2, lsl #24]
     8b4:	12052f06 	andne	r2, r5, #6, 30
     8b8:	0e050106 	adfeqs	f0, f5, f6
     8bc:	2012054a 	andscs	r0, r2, sl, asr #10
     8c0:	02001b05 	andeq	r1, r0, #5120	; 0x1400
     8c4:	05220104 	streq	r0, [r2, #-260]!	; 0xfffffefc
     8c8:	052f0607 	streq	r0, [pc, #-1543]!	; 2c9 <__STACKSEAL_SIZE+0x2c9>
     8cc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     8d0:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     8d4:	0b03060a 	bleq	c2104 <SYSTICK_CYCLES+0x990c5>
     8d8:	060d0520 	streq	r0, [sp], -r0, lsr #10
     8dc:	06070501 	streq	r0, [r7], -r1, lsl #10
     8e0:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
     8e4:	4a0e0501 	bmi	381cf0 <__RAM_SIZE+0x281cf0>
     8e8:	060a0520 	streq	r0, [sl], -r0, lsr #10
     8ec:	060d0522 	streq	r0, [sp], -r2, lsr #10
     8f0:	06070501 	streq	r0, [r7], -r1, lsl #10
     8f4:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
     8f8:	4a0e0501 	bmi	381d04 <__RAM_SIZE+0x281d04>
     8fc:	00010220 	andeq	r0, r1, r0, lsr #4
     900:	01050101 	tsteq	r5, r1, lsl #2
     904:	c0020500 	andgt	r0, r2, r0, lsl #10
     908:	0310000a 	tsteq	r0, #10
     90c:	06010299 			; <UNDEFINED> instruction: 0x06010299
     910:	06030501 	streq	r0, [r3], -r1, lsl #10
     914:	05151359 	ldreq	r1, [r5, #-857]	; 0xfffffca7
     918:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     91c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     920:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     924:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
     928:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     92c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     930:	12053c01 	andne	r3, r5, #256	; 0x100
     934:	01040200 	mrseq	r0, R12_usr
     938:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
     93c:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     940:	08040200 	stmdaeq	r4, {r9}
     944:	0012052e 	andseq	r0, r2, lr, lsr #10
     948:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     94c:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     950:	59060804 	stmdbpl	r6, {r2, fp}
     954:	02000d05 	andeq	r0, r0, #320	; 0x140
     958:	01060804 	tsteq	r6, r4, lsl #16
     95c:	08040200 	stmdaeq	r4, {r9}
     960:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     964:	05130608 	ldreq	r0, [r3, #-1544]	; 0xfffff9f8
     968:	04020005 	streq	r0, [r2], #-5
     96c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     970:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     974:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     978:	210d052c 	tstcs	sp, ip, lsr #10
     97c:	06050520 	streq	r0, [r5], -r0, lsr #10
     980:	1307050f 	movwne	r0, #29967	; 0x750f
     984:	01062705 	tsteq	r6, r5, lsl #14
     988:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
     98c:	052f0607 	streq	r0, [pc, #-1543]!	; 38d <__STACKSEAL_SIZE+0x38d>
     990:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     994:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
     998:	003c3c02 	eorseq	r3, ip, r2, lsl #24
     99c:	20070402 	andcs	r0, r7, r2, lsl #8
     9a0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9a4:	00120520 	andseq	r0, r2, r0, lsr #10
     9a8:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
     9ac:	2e585505 	cdpcs	5, 5, cr5, cr8, cr5, {0}
     9b0:	75030a05 	strvc	r0, [r3, #-2565]	; 0xfffff5fb
     9b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     9b8:	05201003 	streq	r1, [r0, #-3]!
     9bc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     9c0:	002ed701 	eoreq	sp, lr, r1, lsl #14
     9c4:	01050101 	tsteq	r5, r1, lsl #2
     9c8:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
     9cc:	0310000b 	tsteq	r0, #11
     9d0:	060102b2 			; <UNDEFINED> instruction: 0x060102b2
     9d4:	06030501 	streq	r0, [r3], -r1, lsl #10
     9d8:	051513d7 	ldreq	r1, [r5, #-983]	; 0xfffffc29
     9dc:	2e010606 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx6
     9e0:	21060505 	tstcs	r6, r5, lsl #10
     9e4:	01060b05 	tsteq	r6, r5, lsl #22
     9e8:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     9ec:	01060605 	tsteq	r6, r5, lsl #12
     9f0:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     9f4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     9f8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     9fc:	0e055b01 	vmlaeq.f64	d5, d5, d1
     a00:	08040200 	stmdaeq	r4, {r9}
     a04:	0012053c 	andseq	r0, r2, ip, lsr r5
     a08:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     a0c:	08040200 	stmdaeq	r4, {r9}
     a10:	0007052e 	andeq	r0, r7, lr, lsr #10
     a14:	06080402 	streq	r0, [r8], -r2, lsl #8
     a18:	000d054b 	andeq	r0, sp, fp, asr #10
     a1c:	06080402 	streq	r0, [r8], -r2, lsl #8
     a20:	04020001 	streq	r0, [r2], #-1
     a24:	02006608 	andeq	r6, r0, #8, 12	; 0x800000
     a28:	13060804 	movwne	r0, #26628	; 0x6804
     a2c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     a30:	01060804 	tsteq	r6, r4, lsl #16
     a34:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     a38:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     a3c:	0d053a0e 	vstreq	s6, [r5, #-56]	; 0xffffffc8
     a40:	05052e21 	streq	r2, [r5, #-3617]	; 0xfffff1df
     a44:	07050f06 	streq	r0, [r5, -r6, lsl #30]
     a48:	06270513 			; <UNDEFINED> instruction: 0x06270513
     a4c:	66120501 	ldrvs	r0, [r2], -r1, lsl #10
     a50:	21060705 	tstcs	r6, r5, lsl #14
     a54:	01061205 	tsteq	r6, r5, lsl #4
     a58:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
     a5c:	3c2e0204 	sfmcc	f0, 4, [lr], #-16
     a60:	07040200 	streq	r0, [r4, -r0, lsl #4]
     a64:	00120520 	andseq	r0, r2, r0, lsr #10
     a68:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
     a6c:	2e3c5505 	cdpcs	5, 3, cr5, cr12, cr5, {0}
     a70:	75030a05 	strvc	r0, [r3, #-2565]	; 0xfffff5fb
     a74:	06030501 	streq	r0, [r3], -r1, lsl #10
     a78:	052e1003 	streq	r1, [lr, #-3]!
     a7c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     a80:	3c3d0801 	ldccc	8, cr0, [sp], #-4
     a84:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a88:	02050001 	andeq	r0, r5, #1
     a8c:	10000c20 	andne	r0, r0, r0, lsr #24
     a90:	0103d303 	tsteq	r3, r3, lsl #6
     a94:	03050106 	movweq	r0, #20742	; 0x5106
     a98:	06059206 	streq	r9, [r5], -r6, lsl #4
     a9c:	202e0106 	eorcs	r0, lr, r6, lsl #2
     aa0:	18052e20 	stmdane	r5, {r5, r9, sl, fp, sp}
     aa4:	01040200 	mrseq	r0, R12_usr
     aa8:	002d053c 	eoreq	r0, sp, ip, lsr r5
     aac:	9e020402 	cdpls	4, 0, cr0, cr2, cr2, {0}
     ab0:	b1060305 	tstlt	r6, r5, lsl #6
     ab4:	06060513 			; <UNDEFINED> instruction: 0x06060513
     ab8:	06030501 	streq	r0, [r3], -r1, lsl #10
     abc:	060605cd 	streq	r0, [r6], -sp, asr #11
     ac0:	590a0501 	stmdbpl	sl, {r0, r8, sl}
     ac4:	33060305 	movwcc	r0, #25349	; 0x6305
     ac8:	0e051317 	mcreq	3, 0, r1, cr5, cr7, {0}
     acc:	03053c06 	movweq	r3, #23558	; 0x5c06
     ad0:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
     ad4:	2c050106 	stfcss	f0, [r5], {6}
     ad8:	0603052e 	streq	r0, [r3], -lr, lsr #10
     adc:	062d055a 			; <UNDEFINED> instruction: 0x062d055a
     ae0:	052e2e01 	streq	r2, [lr, #-3585]!	; 0xfffff1ff
     ae4:	4b055826 	blmi	156b84 <__RAM_SIZE+0x56b84>
     ae8:	66520574 			; <UNDEFINED> instruction: 0x66520574
     aec:	05744105 	ldrbeq	r4, [r4, #-261]!	; 0xfffffefb
     af0:	03054a07 	movweq	r4, #23047	; 0x5a07
     af4:	17053e06 	strne	r3, [r5, -r6, lsl #28]
     af8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     afc:	0805742b 	stmdaeq	r5, {r0, r1, r3, r5, sl, ip, sp, lr}
     b00:	0603054a 	streq	r0, [r3], -sl, asr #10
     b04:	061c053d 			; <UNDEFINED> instruction: 0x061c053d
     b08:	37054a01 	strcc	r4, [r5, -r1, lsl #20]
     b0c:	9e100558 	mrcls	5, 0, r0, cr0, cr8, {2}
     b10:	67060305 	strvs	r0, [r6, -r5, lsl #6]
     b14:	01061005 	tsteq	r6, r5
     b18:	67060305 	strvs	r0, [r6, -r5, lsl #6]
     b1c:	01061c05 	tsteq	r6, r5, lsl #24
     b20:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
     b24:	05840603 	streq	r0, [r4, #1539]	; 0x603
     b28:	3c010613 	stccc	6, cr0, [r1], {19}
     b2c:	82581c05 	subshi	r1, r8, #1280	; 0x500
     b30:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
     b34:	31056637 	tstcc	r5, r7, lsr r6
     b38:	4a2b0566 	bmi	ac20d8 <__RAM_SIZE+0x9c20d8>
     b3c:	05662605 	strbeq	r2, [r6, #-1541]!	; 0xfffff9fb
     b40:	17056620 	strne	r6, [r5, -r0, lsr #12]
     b44:	4a0f0566 	bmi	3c20e4 <__RAM_SIZE+0x2c20e4>
     b48:	054a0a05 	strbeq	r0, [sl, #-2565]	; 0xfffff5fb
     b4c:	05840603 	streq	r0, [r4, #1539]	; 0x603
     b50:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     b54:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
     b58:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     b5c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     b60:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     b64:	05860603 	streq	r0, [r6, #1539]	; 0x603
     b68:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
     b6c:	052e2e44 	streq	r2, [lr, #-3652]!	; 0xfffff1bc
     b70:	04020003 	streq	r0, [r2], #-3
     b74:	05230604 	streq	r0, [r3, #-1540]!	; 0xfffff9fc
     b78:	04020006 	streq	r0, [r2], #-6
     b7c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     b80:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
     b84:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     b88:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     b8c:	0705ac01 	streq	sl, [r5, -r1, lsl #24]
     b90:	0a059106 	beq	164fb0 <__RAM_SIZE+0x64fb0>
     b94:	09050106 	stmdbeq	r5, {r1, r2, r8}
     b98:	25053d06 	strcs	r3, [r5, #-3334]	; 0xfffff2fa
     b9c:	2e050106 	adfcss	f0, f5, f6
     ba0:	05052e20 	streq	r2, [r5, #-3616]	; 0xfffff1e0
     ba4:	20510306 	subscs	r0, r1, r6, lsl #6
     ba8:	01060c05 	tsteq	r6, r5, lsl #24
     bac:	e4030105 	str	r0, [r3], #-261	; 0xfffffefb
     bb0:	053cf200 	ldreq	pc, [ip, #-512]!	; 0xfffffe00
     bb4:	a2030605 	andge	r0, r3, #5242880	; 0x500000
     bb8:	0b052e7f 	bleq	14c5bc <__RAM_SIZE+0x4c5bc>
     bbc:	059e0106 	ldreq	r0, [lr, #262]	; 0x106
     bc0:	20220344 	eorcs	r0, r2, r4, asr #6
     bc4:	030e0520 	movweq	r0, #58656	; 0xe520
     bc8:	0705200a 	streq	r2, [r5, -sl]
     bcc:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     bd0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     bd4:	05134c06 	ldreq	r4, [r3, #-3078]	; 0xfffff3fa
     bd8:	21110610 	tstcs	r1, r0, lsl r6
     bdc:	03060305 	movweq	r0, #25349	; 0x6305
     be0:	0513200b 	ldreq	r2, [r3, #-11]
     be4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     be8:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
     bec:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
     bf0:	03060705 	movweq	r0, #26373	; 0x6705
     bf4:	0a052076 	beq	148dd4 <__RAM_SIZE+0x48dd4>
     bf8:	16050106 	strne	r0, [r5], -r6, lsl #2
     bfc:	01040200 	mrseq	r0, R12_usr
     c00:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
     c04:	053c063d 	ldreq	r0, [ip, #-1597]!	; 0xfffff9c3
     c08:	020c030c 	andeq	r0, ip, #12, 6	; 0x30000000
     c0c:	03050134 	movweq	r0, #20788	; 0x5134
     c10:	06053006 	streq	r3, [r5], -r6
     c14:	1c050106 	stfnes	f0, [r5], {6}
     c18:	01040200 	mrseq	r0, R12_usr
     c1c:	220c054a 	andcs	r0, ip, #310378496	; 0x12800000
     c20:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     c24:	01060605 	tsteq	r6, r5, lsl #12
     c28:	21060505 	tstcs	r6, r5, lsl #10
     c2c:	01061205 	tsteq	r6, r5, lsl #4
     c30:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
     c34:	136a0603 	cmnne	sl, #3145728	; 0x300000
     c38:	01060905 	tsteq	r6, r5, lsl #18
     c3c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c40:	00030582 	andeq	r0, r3, r2, lsl #11
     c44:	06040402 	streq	r0, [r4], -r2, lsl #8
     c48:	06052308 	streq	r2, [r5], -r8, lsl #6
     c4c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     c54:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
     c58:	66060404 	strvs	r0, [r6], -r4, lsl #8
     c5c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c60:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     c64:	055a0604 	ldrbeq	r0, [sl, #-1540]	; 0xfffff9fc
     c68:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
     c6c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     c70:	0402000b 	streq	r0, [r2], #-11
     c74:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
     c78:	053c0404 	ldreq	r0, [ip, #-1028]!	; 0xfffffbfc
     c7c:	04020005 	streq	r0, [r2], #-5
     c80:	05d80604 	ldrbeq	r0, [r8, #1540]	; 0x604
     c84:	04020008 	streq	r0, [r2], #-8
     c88:	00010604 	andeq	r0, r1, r4, lsl #12
     c8c:	66040402 	strvs	r0, [r4], -r2, lsl #8
     c90:	02000905 	andeq	r0, r0, #81920	; 0x14000
     c94:	77030104 	strvc	r0, [r3, -r4, lsl #2]
     c98:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     c9c:	05057401 	streq	r7, [r5, #-1025]	; 0xfffffbff
     ca0:	00270525 	eoreq	r0, r7, r5, lsr #10
     ca4:	06020402 	streq	r0, [r2], -r2, lsl #8
     ca8:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
     cac:	05200602 	streq	r0, [r0, #-1538]!	; 0xfffff9fe
     cb0:	0402000d 	streq	r0, [r2], #-13
     cb4:	05580601 	ldrbeq	r0, [r8, #-1537]	; 0xfffff9ff
     cb8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     cbc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     cc0:	0402000d 	streq	r0, [r2], #-13
     cc4:	02002e01 	andeq	r2, r0, #1, 28
     cc8:	022e0104 	eoreq	r0, lr, #4, 2
     ccc:	01010002 	tsteq	r1, r2
     cd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     cd4:	00101002 	andseq	r1, r0, r2
     cd8:	02d30310 	sbcseq	r0, r3, #16, 6	; 0x40000000
     cdc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     ce0:	13bb0603 			; <UNDEFINED> instruction: 0x13bb0603
     ce4:	05151513 	ldreq	r1, [r5, #-1299]	; 0xfffffaed
     ce8:	20010606 	andcs	r0, r1, r6, lsl #12
     cec:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
     cf0:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
     cf4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     cf8:	05a00603 	streq	r0, [r0, #1539]!	; 0x603
     cfc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     d00:	05950603 	ldreq	r0, [r5, #1539]	; 0x603
     d04:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     d08:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     d0c:	03059001 	movweq	r9, #20481	; 0x5001
     d10:	90090306 	andls	r0, r9, r6, lsl #6
     d14:	06060513 			; <UNDEFINED> instruction: 0x06060513
     d18:	81080501 	tsthi	r8, r1, lsl #10
     d1c:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
     d20:	01060605 	tsteq	r6, r5, lsl #12
     d24:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
     d28:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
     d2c:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     d30:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     d34:	052f0605 	streq	r0, [pc, #-1541]!	; 737 <STACK_SIZE+0x337>
     d38:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d3c:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     d40:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     d44:	05201f0c 	streq	r1, [r0, #-3852]!	; 0xfffff0f4
     d48:	63030605 	movwvs	r0, #13829	; 0x3605
     d4c:	060c0520 	streq	r0, [ip], -r0, lsr #10
     d50:	06050501 	streq	r0, [r5], -r1, lsl #10
     d54:	060c05e6 	streq	r0, [ip], -r6, ror #11
     d58:	06050501 	streq	r0, [r5], -r1, lsl #10
     d5c:	060c05e6 	streq	r0, [ip], -r6, ror #11
     d60:	04020001 	streq	r0, [r2], #-1
     d64:	00205804 	eoreq	r5, r0, r4, lsl #16
     d68:	20080402 	andcs	r0, r8, r2, lsl #8
     d6c:	060505c8 	streq	r0, [r5], -r8, asr #11
     d70:	060c0550 			; <UNDEFINED> instruction: 0x060c0550
     d74:	06050501 	streq	r0, [r5], -r1, lsl #10
     d78:	13d60903 	bicsne	r0, r6, #49152	; 0xc000
     d7c:	01060b05 	tsteq	r6, r5, lsl #22
     d80:	05810e05 	streq	r0, [r1, #3589]	; 0xe05
     d84:	0305420a 	movweq	r4, #21002	; 0x520a
     d88:	07053606 	streq	r3, [r5, -r6, lsl #12]
     d8c:	03050106 	movweq	r0, #20742	; 0x5106
     d90:	17055906 	strne	r5, [r5, -r6, lsl #18]
     d94:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     d98:	0a056627 	beq	15a63c <__RAM_SIZE+0x5a63c>
     d9c:	06030558 			; <UNDEFINED> instruction: 0x06030558
     da0:	06110583 	ldreq	r0, [r1], -r3, lsl #11
     da4:	03052e01 	movweq	r2, #24065	; 0x5e01
     da8:	0e052106 	adfeqs	f2, f5, f6
     dac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     db0:	03052e08 	movweq	r2, #24072	; 0x5e08
     db4:	06058406 	streq	r8, [r5], -r6, lsl #8
     db8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     dbc:	224b0605 	subcs	r0, fp, #5242880	; 0x500000
     dc0:	01060e05 	tsteq	r6, r5, lsl #28
     dc4:	05580805 	ldrbeq	r0, [r8, #-2053]	; 0xfffff7fb
     dc8:	13590607 	cmpne	r9, #7340032	; 0x700000
     dcc:	1f060c05 	svcne	0x00060c05
     dd0:	03060305 	movweq	r0, #25349	; 0x6305
     dd4:	0605200b 	streq	r2, [r5], -fp
     dd8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     ddc:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
     de0:	0a050106 	beq	141200 <__RAM_SIZE+0x41200>
     de4:	05055858 	streq	r5, [r5, #-2136]	; 0xfffff7a8
     de8:	08052106 	stmdaeq	r5, {r1, r2, r8, sp}
     dec:	18050106 	stmdane	r5, {r1, r2, r8}
     df0:	02040200 	andeq	r0, r4, #0, 4
     df4:	00290558 	eoreq	r0, r9, r8, asr r5
     df8:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
     dfc:	3f060705 	svccc	0x00060705
     e00:	08052006 	stmdaeq	r5, {r1, r2, sp}
     e04:	20740306 	rsbscs	r0, r4, r6, lsl #6
     e08:	01060b05 	tsteq	r6, r5, lsl #22
     e0c:	84060805 	strhi	r0, [r6], #-2053	; 0xfffff7fb
     e10:	01060b05 	tsteq	r6, r5, lsl #22
     e14:	02001905 	andeq	r1, r0, #81920	; 0x14000
     e18:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     e1c:	063e0605 	ldrteq	r0, [lr], -r5, lsl #12
     e20:	060b0520 	streq	r0, [fp], -r0, lsr #10
     e24:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
     e28:	05212f07 	streq	r2, [r1, #-3847]!	; 0xfffff0f9
     e2c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     e30:	1405900e 	strne	r9, [r5], #-14
     e34:	20120520 	andscs	r0, r2, r0, lsr #10
     e38:	67060705 	strvs	r0, [r6, -r5, lsl #14]
     e3c:	01060a05 	tsteq	r6, r5, lsl #20
     e40:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
     e44:	052e1f0e 	streq	r1, [lr, #-3854]!	; 0xfffff0f2
     e48:	0526060b 	streq	r0, [r6, #-1547]!	; 0xfffff9f5
     e4c:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     e50:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     e54:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
     e58:	07052001 	streq	r2, [r5, -r1]
     e5c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     e60:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
     e64:	210e0565 	tstcs	lr, r5, ror #10
     e68:	06050520 	streq	r0, [r5], -r0, lsr #10
     e6c:	06080522 	streq	r0, [r8], -r2, lsr #10
     e70:	06070501 	streq	r0, [r7], -r1, lsl #10
     e74:	06120530 			; <UNDEFINED> instruction: 0x06120530
     e78:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     e7c:	06090520 	streq	r0, [r9], -r0, lsr #10
     e80:	2f050517 	svccs	0x00050517
     e84:	01062505 	tsteq	r6, r5, lsl #10
     e88:	05ac0c05 	streq	r0, [ip, #3077]!	; 0xc05
     e8c:	10052012 	andne	r2, r5, r2, lsl r0
     e90:	06050520 	streq	r0, [r5], -r0, lsr #10
     e94:	06110567 	ldreq	r0, [r1], -r7, ror #10
     e98:	20080501 	andcs	r0, r8, r1, lsl #10
     e9c:	081f0c05 	ldmdaeq	pc, {r0, r2, sl, fp}	; <UNPREDICTABLE>
     ea0:	060305c8 	streq	r0, [r3], -r8, asr #11
     ea4:	061d0527 	ldreq	r0, [sp], -r7, lsr #10
     ea8:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
     eac:	03060305 	movweq	r0, #25349	; 0x6305
     eb0:	06052e09 	streq	r2, [r5], -r9, lsl #28
     eb4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     eb8:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     ebc:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ec0:	12053d06 	andne	r3, r5, #384	; 0x180
     ec4:	0e050106 	adfeqs	f0, f5, f6
     ec8:	06030566 	streq	r0, [r3], -r6, ror #10
     ecc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     ed0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     ed4:	0505c901 	streq	ip, [r5, #-2305]	; 0xfffff6ff
     ed8:	586b0306 	stmdapl	fp!, {r1, r2, r8, r9}^
     edc:	01060805 	tsteq	r6, r5, lsl #16
     ee0:	02000f05 	andeq	r0, r0, #5, 30
     ee4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     ee8:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     eec:	07052e02 	streq	r2, [r5, -r2, lsl #28]
     ef0:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
     ef4:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     ef8:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
     efc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     f00:	0b05660e 	bleq	15a740 <__RAM_SIZE+0x5a740>
     f04:	1a051f06 	bne	148b24 <__RAM_SIZE+0x48b24>
     f08:	01040200 	mrseq	r0, R12_usr
     f0c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
     f10:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     f14:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
     f18:	060d054a 	streq	r0, [sp], -sl, asr #10
     f1c:	06070501 	streq	r0, [r7], -r1, lsl #10
     f20:	0612054b 	ldreq	r0, [r2], -fp, asr #10
     f24:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     f28:	060a0520 	streq	r0, [sl], -r0, lsr #10
     f2c:	060d0522 	streq	r0, [sp], -r2, lsr #10
     f30:	06070501 	streq	r0, [r7], -r1, lsl #10
     f34:	0612054b 	ldreq	r0, [r2], -fp, asr #10
     f38:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     f3c:	00010220 	andeq	r0, r1, r0, lsr #4
     f40:	01050101 	tsteq	r5, r1, lsl #2
     f44:	a8020500 	stmdage	r2, {r8, sl}
     f48:	03100013 	tsteq	r0, #19
     f4c:	060104c1 	streq	r0, [r1], -r1, asr #9
     f50:	06030501 	streq	r0, [r3], -r1, lsl #10
     f54:	05141367 	ldreq	r1, [r4, #-871]	; 0xfffffc99
     f58:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     f5c:	01d30309 	bicseq	r0, r3, r9, lsl #6
     f60:	0306204a 	movweq	r2, #24650	; 0x604a
     f64:	05017eb2 	streq	r7, [r1, #-3762]	; 0xfffff14e
     f68:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     f6c:	05052e09 	streq	r2, [r5, #-3593]	; 0xfffff1f7
     f70:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
     f74:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f78:	20063006 	andcs	r3, r6, r6
     f7c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     f80:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f84:	10063d06 	andne	r3, r6, r6, lsl #26
     f88:	05240622 	streq	r0, [r4, #-1570]!	; 0xfffff9de
     f8c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     f90:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
     f94:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     f98:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     f9c:	0f051307 	svceq	0x00051307
     fa0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     fa4:	060d052e 	streq	r0, [sp], -lr, lsr #10
     fa8:	150505ec 	strne	r0, [r5, #-1516]	; 0xfffffa14
     fac:	03140513 	tsteq	r4, #79691776	; 0x4c00000
     fb0:	05017ccd 	streq	r7, [r1, #-3277]	; 0xfffff333
     fb4:	16051403 	strne	r1, [r5], -r3, lsl #8
     fb8:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     fbc:	03b10308 			; <UNDEFINED> instruction: 0x03b10308
     fc0:	060a0501 	streq	r0, [sl], -r1, lsl #10
     fc4:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
     fc8:	2a0b0501 	bcs	2c23d4 <__RAM_SIZE+0x1c23d4>
     fcc:	03060505 	movweq	r0, #25861	; 0x6505
     fd0:	05132e11 	ldreq	r2, [r3, #-3601]	; 0xfffff1ef
     fd4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     fd8:	0f052e08 	svceq	0x00052e08
     fdc:	0605052d 	streq	r0, [r5], -sp, lsr #10
     fe0:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
     fe4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     fe8:	13052e05 	movwne	r2, #24069	; 0x5e05
     fec:	e4560306 	ldrb	r0, [r6], #-774	; 0xfffffcfa
     ff0:	01061905 	tsteq	r6, r5, lsl #18
     ff4:	2e062b05 	vmlacs.f64	d2, d6, d5
     ff8:	01063105 	tsteq	r6, r5, lsl #2
     ffc:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1000:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1004:	1305190d 	movwne	r1, #22797	; 0x590d
    1008:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    100c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1010:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1014:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1018:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    101c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    1020:	1b130518 	blne	4c2488 <__RAM_SIZE+0x3c2488>
    1024:	01061905 	tsteq	r6, r5, lsl #18
    1028:	2e062b05 	vmlacs.f64	d2, d6, d5
    102c:	01063105 	tsteq	r6, r5, lsl #2
    1030:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1034:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1038:	1305170d 	movwne	r1, #22285	; 0x570d
    103c:	0619051c 			; <UNDEFINED> instruction: 0x0619051c
    1040:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1044:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1048:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    104c:	013d052e 	teqeq	sp, lr, lsr #10
    1050:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    1054:	19051d13 	stmdbne	r5, {r0, r1, r4, r8, sl, fp, ip}
    1058:	2b050106 	blcs	141478 <__RAM_SIZE+0x41478>
    105c:	31052e06 	tstcc	r5, r6, lsl #28
    1060:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1064:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1068:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    106c:	05250705 	streq	r0, [r5, #-1797]!	; 0xfffff8fb
    1070:	4a01060f 	bmi	428b4 <SYSTICK_CYCLES+0x19875>
    1074:	23060705 	movwcs	r0, #26373	; 0x6705
    1078:	01061105 	tsteq	r6, r5, lsl #2
    107c:	4b060705 	blmi	182c98 <__RAM_SIZE+0x82c98>
    1080:	01060a05 	tsteq	r6, r5, lsl #20
    1084:	33060905 	movwcc	r0, #26885	; 0x6905
    1088:	01060f05 	tsteq	r6, r5, lsl #30
    108c:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    1090:	01060d05 	tsteq	r6, r5, lsl #26
    1094:	03060905 	movweq	r0, #26885	; 0x6905
    1098:	0f054a7a 	svceq	0x00054a7a
    109c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10a0:	1f052f06 	svcne	0x00052f06
    10a4:	202e0106 	eorcs	r0, lr, r6, lsl #2
    10a8:	03060705 	movweq	r0, #26373	; 0x6705
    10ac:	0d05010b 	stfeqs	f0, [r5, #-44]	; 0xffffffd4
    10b0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    10b4:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    10b8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    10bc:	0b052f06 	bleq	14ccdc <__RAM_SIZE+0x4ccdc>
    10c0:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    10c4:	7cb90306 	ldcvc	3, cr0, [r9], #24
    10c8:	14030520 	strne	r0, [r3], #-1312	; 0xfffffae0
    10cc:	01061605 	tsteq	r6, r5, lsl #12
    10d0:	030a053c 	movweq	r0, #42300	; 0xa53c
    10d4:	050103c5 	streq	r0, [r1, #-965]	; 0xfffffc3b
    10d8:	0531060c 	ldreq	r0, [r1, #-1548]!	; 0xfffff9f4
    10dc:	0301060f 	movweq	r0, #5647	; 0x160f
    10e0:	09052e79 	stmdbeq	r5, {r0, r3, r4, r5, r6, r9, sl, fp, sp}
    10e4:	15054106 	strne	r4, [r5, #-262]	; 0xfffffefa
    10e8:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    10ec:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    10f0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    10f4:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    10f8:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    10fc:	052f0609 	streq	r0, [pc, #-1545]!	; afb <__Vectors_Size+0x33b>
    1100:	4a01060f 	bmi	42944 <SYSTICK_CYCLES+0x19905>
    1104:	19060905 	stmdbne	r6, {r0, r2, r8, fp}
    1108:	01060f05 	tsteq	r6, r5, lsl #30
    110c:	2f060905 	svccs	0x00060905
    1110:	01060f05 	tsteq	r6, r5, lsl #30
    1114:	2f060905 	svccs	0x00060905
    1118:	01060d05 	tsteq	r6, r5, lsl #26
    111c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1120:	0b052c0f 	bleq	14c164 <__RAM_SIZE+0x4c164>
    1124:	11053106 	tstne	r5, r6, lsl #2
    1128:	0b050106 	bleq	141548 <__RAM_SIZE+0x41548>
    112c:	11052f06 	tstne	r5, r6, lsl #30
    1130:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1134:	0f054006 	svceq	0x00054006
    1138:	09050106 	stmdbeq	r5, {r1, r2, r8}
    113c:	0f052f06 	svceq	0x00052f06
    1140:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1144:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    1148:	0c050106 	stfeqs	f0, [r5], {6}
    114c:	2c0f0520 	cfstr32cs	mvfx0, [pc], {32}
    1150:	31060b05 	tstcc	r6, r5, lsl #22
    1154:	01061105 	tsteq	r6, r5, lsl #2
    1158:	2f060b05 	svccs	0x00060b05
    115c:	01061105 	tsteq	r6, r5, lsl #2
    1160:	41060905 	tstmi	r6, r5, lsl #18
    1164:	01060f05 	tsteq	r6, r5, lsl #30
    1168:	2f060905 	svccs	0x00060905
    116c:	01060f05 	tsteq	r6, r5, lsl #30
    1170:	2f060905 	svccs	0x00060905
    1174:	0f030505 	svceq	0x00030505
    1178:	060d0501 	streq	r0, [sp], -r1, lsl #10
    117c:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    1180:	03060905 	movweq	r0, #26885	; 0x6905
    1184:	015b0274 	cmpeq	fp, r4, ror r2
    1188:	01060f05 	tsteq	r6, r5, lsl #30
    118c:	2f060905 	svccs	0x00060905
    1190:	01060f05 	tsteq	r6, r5, lsl #30
    1194:	2f060905 	svccs	0x00060905
    1198:	060f0522 	streq	r0, [pc], -r2, lsr #10
    119c:	06090501 	streq	r0, [r9], -r1, lsl #10
    11a0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    11a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    11a8:	200f032f 	andcs	r0, pc, pc, lsr #6
    11ac:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    11b0:	001c0501 	andseq	r0, ip, r1, lsl #10
    11b4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    11b8:	31060e05 	tstcc	r6, r5, lsl #28
    11bc:	01061105 	tsteq	r6, r5, lsl #2
    11c0:	31060e05 	tstcc	r6, r5, lsl #28
    11c4:	01061105 	tsteq	r6, r5, lsl #2
    11c8:	32060b05 	andcc	r0, r6, #5120	; 0x1400
    11cc:	06110513 			; <UNDEFINED> instruction: 0x06110513
    11d0:	2d100501 	cfldr32cs	mvfx0, [r0, #-4]
    11d4:	052e7703 	streq	r7, [lr, #-1795]!	; 0xfffff8fd
    11d8:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    11dc:	060c0520 	streq	r0, [ip], -r0, lsr #10
    11e0:	06090501 	streq	r0, [r9], -r1, lsl #10
    11e4:	060c0533 			; <UNDEFINED> instruction: 0x060c0533
    11e8:	001e0501 	andseq	r0, lr, r1, lsl #10
    11ec:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    11f0:	2f060b05 	svccs	0x00060b05
    11f4:	01061105 	tsteq	r6, r5, lsl #2
    11f8:	32060905 	andcc	r0, r6, #81920	; 0x14000
    11fc:	01060c05 	tsteq	r6, r5, lsl #24
    1200:	3d060b05 	vstrcc	d0, [r6, #-20]	; 0xffffffec
    1204:	01061105 	tsteq	r6, r5, lsl #2
    1208:	32060905 	andcc	r0, r6, #81920	; 0x14000
    120c:	01060c05 	tsteq	r6, r5, lsl #24
    1210:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    1214:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1218:	1303060b 	movwne	r0, #13835	; 0x360b
    121c:	060e052e 	streq	r0, [lr], -lr, lsr #10
    1220:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1224:	0613054f 	ldreq	r0, [r3], -pc, asr #10
    1228:	060d0501 	streq	r0, [sp], -r1, lsl #10
    122c:	0667054e 	strbteq	r0, [r7], -lr, asr #10
    1230:	4a4e0501 	bmi	138263c <__RAM_SIZE+0x128263c>
    1234:	02000d05 	andeq	r0, r0, #320	; 0x140
    1238:	4b060804 	blmi	183250 <__RAM_SIZE+0x83250>
    123c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    1240:	01060804 	tsteq	r6, r4, lsl #16
    1244:	08040200 	stmdaeq	r4, {r9}
    1248:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    124c:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    1250:	004a0804 	subeq	r0, sl, r4, lsl #16
    1254:	20080402 	andcs	r0, r8, r2, lsl #8
    1258:	08040200 	stmdaeq	r4, {r9}
    125c:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    1260:	31310147 	teqcc	r1, r7, asr #2
    1264:	36060b05 	strcc	r0, [r6], -r5, lsl #22
    1268:	01061105 	tsteq	r6, r5, lsl #2
    126c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1270:	05201003 	streq	r1, [r0, #-3]!
    1274:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1278:	05420610 	strbeq	r0, [r2, #-1552]	; 0xfffff9f0
    127c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1280:	0541060d 	strbeq	r0, [r1, #-1549]	; 0xfffff9f3
    1284:	0501064c 	streq	r0, [r1, #-1612]	; 0xfffff9b4
    1288:	0d053c3c 	stceq	12, cr3, [r5, #-240]	; 0xffffff10
    128c:	08040200 	stmdaeq	r4, {r9}
    1290:	38054b06 	stmdacc	r5, {r1, r2, r8, r9, fp, lr}
    1294:	08040200 	stmdaeq	r4, {r9}
    1298:	13050106 	movwne	r0, #20742	; 0x5106
    129c:	08040200 	stmdaeq	r4, {r9}
    12a0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    12a4:	02007408 	andeq	r7, r0, #8, 8	; 0x8000000
    12a8:	003c0804 	eorseq	r0, ip, r4, lsl #16
    12ac:	58080402 	stmdapl	r8, {r1, sl}
    12b0:	08040200 	stmdaeq	r4, {r9}
    12b4:	06090520 	streq	r0, [r9], -r0, lsr #10
    12b8:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    12bc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    12c0:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    12c4:	2063030d 	rsbcs	r0, r3, sp, lsl #6
    12c8:	01061d05 	tsteq	r6, r5, lsl #26
    12cc:	83060d05 	movwhi	r0, #27909	; 0x6d05
    12d0:	01063d05 	tsteq	r6, r5, lsl #26
    12d4:	2e4a1305 	cdpcs	3, 4, cr1, cr10, cr5, {0}
    12d8:	0520ac58 	streq	sl, [r0, #-3160]!	; 0xfffff3a8
    12dc:	0d05203d 	stceq	0, cr2, [r5, #-244]	; 0xffffff0c
    12e0:	18054e06 	stmdane	r5, {r1, r2, r9, sl, fp, lr}
    12e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    12e8:	38054b06 	stmdacc	r5, {r1, r2, r8, r9, fp, lr}
    12ec:	13050106 	movwne	r0, #20742	; 0x5106
    12f0:	20589e4a 	subscs	r9, r8, sl, asr #28
    12f4:	00018105 	andeq	r8, r1, r5, lsl #2
    12f8:	23020402 	movwcs	r0, #9218	; 0x2402
    12fc:	053c7105 	ldreq	r7, [ip, #-261]!	; 0xfffffefb
    1300:	81053c66 	tsthi	r5, r6, ror #24
    1304:	05583c01 	ldrbeq	r3, [r8, #-3073]	; 0xfffff3ff
    1308:	051a060d 	ldreq	r0, [sl, #-1549]	; 0xfffff9f3
    130c:	08010613 	stmdaeq	r1, {r0, r1, r4, r9, sl}
    1310:	0520584a 	streq	r5, [r0, #-2122]!	; 0xfffff7b6
    1314:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    1318:	9e010613 	mcrls	6, 0, r0, cr1, cr3, {0}
    131c:	ae052090 	mcrge	0, 0, r2, cr5, cr0, {4}
    1320:	04020001 	streq	r0, [r2], #-1
    1324:	95052302 	strls	r2, [r5, #-770]	; 0xfffffcfe
    1328:	ae053c01 	cdpge	12, 0, cr3, cr5, cr1, {0}
    132c:	05585801 	ldrbeq	r5, [r8, #-2049]	; 0xfffff7ff
    1330:	0a030609 	beq	c2b5c <SYSTICK_CYCLES+0x99b1d>
    1334:	060c0501 	streq	r0, [ip], -r1, lsl #10
    1338:	06090501 	streq	r0, [r9], -r1, lsl #10
    133c:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1340:	06090501 	streq	r0, [r9], -r1, lsl #10
    1344:	0f056708 	svceq	0x00056708
    1348:	09050106 	stmdbeq	r5, {r1, r2, r8}
    134c:	1d053d06 	stcne	13, cr3, [r5, #-24]	; 0xffffffe8
    1350:	01040200 	mrseq	r0, R12_usr
    1354:	0023051d 	eoreq	r0, r3, sp, lsl r5
    1358:	06010402 	streq	r0, [r1], -r2, lsl #8
    135c:	04020001 	streq	r0, [r2], #-1
    1360:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    1364:	20090306 	andcs	r0, r9, r6, lsl #6
    1368:	01060c05 	tsteq	r6, r5, lsl #24
    136c:	02001d05 	andeq	r1, r0, #320	; 0x140
    1370:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1374:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1378:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    137c:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    1380:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    1384:	052f0609 	streq	r0, [pc, #-1545]!	; d83 <__Vectors_Size+0x5c3>
    1388:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    138c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1390:	31052e02 	tstcc	r5, r2, lsl #28
    1394:	03040200 	movweq	r0, #16896	; 0x4200
    1398:	37052e06 	strcc	r2, [r5, -r6, lsl #28]
    139c:	03040200 	movweq	r0, #16896	; 0x4200
    13a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13a4:	0f052f06 	svceq	0x00052f06
    13a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13ac:	05670806 	strbeq	r0, [r7, #-2054]!	; 0xfffff7fa
    13b0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13b4:	243d0609 	ldrtcs	r0, [sp], #-1545	; 0xfffff9f7
    13b8:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    13bc:	16052e01 	strne	r2, [r5], -r1, lsl #28
    13c0:	0609051e 			; <UNDEFINED> instruction: 0x0609051e
    13c4:	06130536 			; <UNDEFINED> instruction: 0x06130536
    13c8:	3c090501 	cfstr32cc	mvfx0, [r9], {1}
    13cc:	055a062e 	ldrbeq	r0, [sl, #-1582]	; 0xfffff9d2
    13d0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    13d4:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    13d8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13dc:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    13e0:	2e74030d 	cdpcs	3, 7, cr0, cr4, cr13, {0}
    13e4:	13052e06 	movwne	r2, #24070	; 0x5e06
    13e8:	210d0549 	tstcs	sp, r9, asr #10
    13ec:	1f061105 	svcne	0x00061105
    13f0:	01061305 	tsteq	r6, r5, lsl #6
    13f4:	2e2e1105 	sufcse	f1, f6, f5
    13f8:	3c2b1605 	stccc	6, cr1, [fp], #-20	; 0xffffffec
    13fc:	0d053c2e 	stceq	12, cr3, [r5, #-184]	; 0xffffff48
    1400:	200c0306 	andcs	r0, ip, r6, lsl #6
    1404:	13052006 	movwne	r2, #20486	; 0x5006
    1408:	210d0549 	tstcs	sp, r9, asr #10
    140c:	1f061105 	svcne	0x00061105
    1410:	01061305 	tsteq	r6, r5, lsl #6
    1414:	2e2e1105 	sufcse	f1, f6, f5
    1418:	0609052e 	streq	r0, [r9], -lr, lsr #10
    141c:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    1420:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    1424:	05590609 	ldrbeq	r0, [r9, #-1545]	; 0xfffff9f7
    1428:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    142c:	90030626 	andls	r0, r3, r6, lsr #12
    1430:	2205747b 	andcs	r7, r5, #2063597568	; 0x7b000000
    1434:	061e0501 	ldreq	r0, [lr], -r1, lsl #10
    1438:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    143c:	06030520 	streq	r0, [r3], -r0, lsr #10
    1440:	201e052e 	andscs	r0, lr, lr, lsr #10
    1444:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    1448:	052f0603 	streq	r0, [pc, #-1539]!	; e4d <__Vectors_Size+0x68d>
    144c:	2e01061b 	mcrcs	6, 0, r0, cr1, cr11, {0}
    1450:	03060905 	movweq	r0, #26885	; 0x6905
    1454:	050104f1 	streq	r0, [r1, #-1265]	; 0xfffffb0f
    1458:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    145c:	054b060b 	strbeq	r0, [fp, #-1547]	; 0xfffff9f5
    1460:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1464:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    1468:	4a01060c 	bmi	42ca0 <SYSTICK_CYCLES+0x19c61>
    146c:	0520202e 	streq	r2, [r0, #-46]!	; 0xffffffd2
    1470:	2e2e1b1a 	vmovcs.32	d14[1], r1
    1474:	35060d05 	strcc	r0, [r6, #-3333]	; 0xfffff2fb
    1478:	13052e06 	movwne	r2, #24070	; 0x5e06
    147c:	210d0549 	tstcs	sp, r9, asr #10
    1480:	1f061105 	svcne	0x00061105
    1484:	01061305 	tsteq	r6, r5, lsl #6
    1488:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    148c:	203c2e13 	eorscs	r2, ip, r3, lsl lr
    1490:	05254505 	streq	r4, [r5, #-1285]!	; 0xfffffafb
    1494:	0521060b 	streq	r0, [r1, #-1547]!	; 0xfffff9f5
    1498:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    149c:	05202e0b 	streq	r2, [r0, #-3595]!	; 0xfffff1f5
    14a0:	0549060f 	strbeq	r0, [r9, #-1551]	; 0xfffff9f1
    14a4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    14a8:	1a052e0f 	bne	14ccec <__RAM_SIZE+0x4ccec>
    14ac:	01040200 	mrseq	r0, R12_usr
    14b0:	00450520 	subeq	r0, r5, r0, lsr #10
    14b4:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    14b8:	02003905 	andeq	r3, r0, #81920	; 0x14000
    14bc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    14c0:	0905320c 	stmdbeq	r5, {r2, r3, r9, ip, sp}
    14c4:	0c052e06 	stceq	14, cr2, [r5], {6}
    14c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    14cc:	0f053306 	svceq	0x00053306
    14d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    14d4:	20063d06 	andcs	r3, r6, r6, lsl #26
    14d8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    14dc:	0520061c 	streq	r0, [r0, #-1564]!	; 0xfffff9e4
    14e0:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    14e4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    14e8:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    14ec:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    14f0:	0520202e 	streq	r2, [r0, #-46]!	; 0xffffffd2
    14f4:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    14f8:	0f051301 	svceq	0x00051301
    14fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1500:	05133006 	ldreq	r3, [r3, #-6]
    1504:	5105170b 	tstpl	r5, fp, lsl #14
    1508:	11050106 	tstne	r5, r6, lsl #2
    150c:	0609054a 	streq	r0, [r9], -sl, asr #10
    1510:	0f051608 	svceq	0x00051608
    1514:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1518:	20063d06 	andcs	r3, r6, r6, lsl #26
    151c:	20061606 	andcs	r1, r6, r6, lsl #12
    1520:	0f055906 	svceq	0x00055906
    1524:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1528:	10063d06 	andne	r3, r6, r6, lsl #26
    152c:	06230622 	strteq	r0, [r3], -r2, lsr #12
    1530:	054b0620 	strbeq	r0, [fp, #-1568]	; 0xfffff9e0
    1534:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1538:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    153c:	f8032210 			; <UNDEFINED> instruction: 0xf8032210
    1540:	0305207d 	movweq	r2, #20605	; 0x507d
    1544:	028d0306 	addeq	r0, sp, #402653184	; 0x18000000
    1548:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    154c:	2e2e0601 	cfmadda32cs	mvax0, mvax0, mvfx14, mvfx1
    1550:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1554:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1558:	054d0604 	strbeq	r0, [sp, #-1540]	; 0xfffff9fc
    155c:	04020001 	streq	r0, [r2], #-1
    1560:	00130604 	andseq	r0, r3, r4, lsl #12
    1564:	4a040402 	bmi	102574 <__RAM_SIZE+0x2574>
    1568:	01000302 	tsteq	r0, r2, lsl #6
    156c:	00010501 	andeq	r0, r1, r1, lsl #10
    1570:	1a280205 	bne	a01d8c <__RAM_SIZE+0x901d8c>
    1574:	95031000 	strls	r1, [r3, #-0]
    1578:	03050101 	movweq	r0, #20737	; 0x5101
    157c:	01110513 	tsteq	r1, r3, lsl r5
    1580:	05011c05 	streq	r1, [r1, #-3077]	; 0xfffff3fb
    1584:	06051303 	streq	r1, [r5], -r3, lsl #6
    1588:	01050106 	tsteq	r5, r6, lsl #2
    158c:	0605052c 	streq	r0, [r5], -ip, lsr #10
    1590:	06010523 	streq	r0, [r1], -r3, lsr #10
    1594:	00010230 	andeq	r0, r1, r0, lsr r2
    1598:	01050101 	tsteq	r5, r1, lsl #2
    159c:	34020500 	strcc	r0, [r2], #-1280	; 0xfffffb00
    15a0:	0310001a 	tsteq	r0, #26
    15a4:	060106de 			; <UNDEFINED> instruction: 0x060106de
    15a8:	06030501 	streq	r0, [r3], -r1, lsl #10
    15ac:	13211367 			; <UNDEFINED> instruction: 0x13211367
    15b0:	01061305 	tsteq	r6, r5, lsl #6
    15b4:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    15b8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    15bc:	00080213 	andeq	r0, r8, r3, lsl r2
    15c0:	01050101 	tsteq	r5, r1, lsl #2
    15c4:	00020500 	andeq	r0, r2, r0, lsl #10
    15c8:	03000000 	movweq	r0, #0
    15cc:	060106e9 	streq	r0, [r1], -r9, ror #13
    15d0:	06030501 	streq	r0, [r3], -r1, lsl #10
    15d4:	05211375 	streq	r1, [r1, #-885]!	; 0xfffffc8b
    15d8:	4a010613 	bmi	42e2c <SYSTICK_CYCLES+0x19ded>
    15dc:	2f060305 	svccs	0x00060305
    15e0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    15e4:	00080213 	andeq	r0, r8, r3, lsl r2
    15e8:	01050101 	tsteq	r5, r1, lsl #2
    15ec:	00020500 	andeq	r0, r2, r0, lsl #10
    15f0:	03000000 	movweq	r0, #0
    15f4:	060106f3 			; <UNDEFINED> instruction: 0x060106f3
    15f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    15fc:	05211375 	streq	r1, [r1, #-885]!	; 0xfffffc8b
    1600:	2e010613 	mcrcs	6, 0, r0, cr1, cr3, {0}
    1604:	06030520 	streq	r0, [r3], -r0, lsr #10
    1608:	0105132f 	tsteq	r5, pc, lsr #6
    160c:	07021306 	streq	r1, [r2, -r6, lsl #6]
    1610:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1614:	02050001 	andeq	r0, r5, #1
    1618:	00000000 	andeq	r0, r0, r0
    161c:	0106fd03 	tsteq	r6, r3, lsl #26	; <UNPREDICTABLE>
    1620:	03050106 	movweq	r0, #20742	; 0x5106
    1624:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    1628:	4a01060a 	bmi	42e58 <SYSTICK_CYCLES+0x19e19>
    162c:	2f010520 	svccs	0x00010520
    1630:	01000602 	tsteq	r0, r2, lsl #12
    1634:	00010501 	andeq	r0, r1, r1, lsl #10
    1638:	00000205 	andeq	r0, r0, r5, lsl #4
    163c:	84030000 	strhi	r0, [r3], #-0
    1640:	01060107 	tsteq	r6, r7, lsl #2
    1644:	2f060305 	svccs	0x00060305
    1648:	01060a05 	tsteq	r6, r5, lsl #20
    164c:	2020202e 	eorcs	r2, r0, lr, lsr #32
    1650:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1654:	01010005 	tsteq	r1, r5
    1658:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    165c:	00000002 	andeq	r0, r0, r2
    1660:	078a0300 	streq	r0, [sl, r0, lsl #6]
    1664:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1668:	13670603 	cmnne	r7, #3145728	; 0x300000
    166c:	061b0521 	ldreq	r0, [fp], -r1, lsr #10
    1670:	06030501 	streq	r0, [r3], -r1, lsl #10
    1674:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1678:	03055801 	movweq	r5, #22529	; 0x5801
    167c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1680:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1684:	01010008 	tsteq	r1, r8
    1688:	00000338 	andeq	r0, r0, r8, lsr r3
    168c:	01cc0003 	biceq	r0, ip, r3
    1690:	01020000 	mrseq	r0, (UNDEF: 2)
    1694:	000d0efb 	strdeq	r0, [sp], -fp
    1698:	01010101 	tsteq	r1, r1, lsl #2
    169c:	01000000 	mrseq	r0, (UNDEF: 0)
    16a0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    16a4:	6f432f2e 	svcvs	0x00432f2e
    16a8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    16ac:	63006372 	movwvs	r6, #882	; 0x372
    16b0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    16b4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    16b8:	6f646978 	svcvs	0x00646978
    16bc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    16c0:	6172676f 	cmnvs	r2, pc, ror #14
    16c4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    16c8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    16cc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    16d0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    16d4:	6f6e2d6d 	svcvs	0x006e2d6d
    16d8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    16dc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    16e0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    16e4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    16e8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    16ec:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    16f0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    16f4:	61652d65 	cmnvs	r5, r5, ror #26
    16f8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    16fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1700:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    1704:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    1708:	6300656e 	movwvs	r6, #1390	; 0x56e
    170c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1710:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1714:	6f646978 	svcvs	0x00646978
    1718:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    171c:	6172676f 	cmnvs	r2, pc, ror #14
    1720:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1724:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1728:	63675c63 	cmnvs	r7, #25344	; 0x6300
    172c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1730:	6f6e2d6d 	svcvs	0x006e2d6d
    1734:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1738:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    173c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1740:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1744:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1748:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    174c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1750:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1754:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1758:	61652d65 	cmnvs	r5, r5, ror #26
    175c:	315c6962 	cmpcc	ip, r2, ror #18
    1760:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    1764:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    1768:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    176c:	3a630065 	bcc	18c1908 <__RAM_SIZE+0x17c1908>
    1770:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    1774:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1778:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    177c:	6f72705c 	svcvs	0x0072705c
    1780:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1784:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1788:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    178c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1790:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1794:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1798:	61652d65 	cmnvs	r5, r5, ror #26
    179c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    17a0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    17a4:	31323032 	teqcc	r2, r2, lsr r0
    17a8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    17ac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    17b0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    17b4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    17b8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    17bc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    17c0:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    17c4:	3a630073 	bcc	18c1998 <__RAM_SIZE+0x17c1998>
    17c8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    17cc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    17d0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    17d4:	6f72705c 	svcvs	0x0072705c
    17d8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    17dc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    17e0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    17e4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    17e8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    17ec:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    17f0:	61652d65 	cmnvs	r5, r5, ror #26
    17f4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    17f8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    17fc:	31323032 	teqcc	r2, r2, lsr r0
    1800:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1804:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1808:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    180c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1810:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1814:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1818:	75000065 	strvc	r0, [r0, #-101]	; 0xffffff9b
    181c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    1820:	00010063 	andeq	r0, r1, r3, rrx
    1824:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    1828:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    182c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1830:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1834:	00020068 	andeq	r0, r2, r8, rrx
    1838:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    183c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1840:	00030068 	andeq	r0, r3, r8, rrx
    1844:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1848:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    184c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1850:	74730000 	ldrbtvc	r0, [r3], #-0
    1854:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    1858:	00050068 	andeq	r0, r5, r8, rrx
    185c:	16050000 	strne	r0, [r5], -r0
    1860:	60020500 	andvs	r0, r2, r0, lsl #10
    1864:	0310001a 	tsteq	r0, #26
    1868:	2405011c 	strcs	r0, [r5], #-284	; 0xfffffee4
    186c:	01040200 	mrseq	r0, R12_usr
    1870:	000b0513 	andeq	r0, fp, r3, lsl r5
    1874:	01010402 	tsteq	r1, r2, lsl #8
    1878:	02000c05 	andeq	r0, r0, #1280	; 0x500
    187c:	01060104 	tsteq	r6, r4, lsl #2
    1880:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1884:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1888:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    188c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1890:	052f0605 	streq	r0, [pc, #-1541]!	; 1293 <_Min_Stack_Size+0x293>
    1894:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1898:	01010003 	tsteq	r1, r3
    189c:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
    18a0:	00000002 	andeq	r0, r0, r2
    18a4:	01220300 			; <UNDEFINED> instruction: 0x01220300
    18a8:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    18ac:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    18b0:	0402000b 	streq	r0, [r2], #-11
    18b4:	0d050101 	stfeqs	f0, [r5, #-4]
    18b8:	01040200 	mrseq	r0, R12_usr
    18bc:	0b050106 	bleq	141cdc <__RAM_SIZE+0x41cdc>
    18c0:	01040200 	mrseq	r0, R12_usr
    18c4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    18c8:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
    18cc:	2f010501 	svccs	0x00010501
    18d0:	01000302 	tsteq	r0, r2, lsl #6
    18d4:	001e0501 	andseq	r0, lr, r1, lsl #10
    18d8:	1a740205 	bne	1d020f4 <__RAM_SIZE+0x1c020f4>
    18dc:	27031000 	strcs	r1, [r3, -r0]
    18e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    18e4:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    18e8:	11060905 	tstne	r6, r5, lsl #18
    18ec:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
    18f0:	2f210609 	svccs	0x00210609
    18f4:	01060e05 	tsteq	r6, r5, lsl #28
    18f8:	1e060b05 	vmlane.f64	d0, d6, d5
    18fc:	01061205 	tsteq	r6, r5, lsl #4
    1900:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    1904:	3d320605 	ldccc	6, cr0, [r2, #-20]!	; 0xffffffec
    1908:	13060105 	movwne	r0, #24837	; 0x6105
    190c:	0101002e 	tsteq	r1, lr, lsr #32
    1910:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    1914:	001a9402 	andseq	r9, sl, r2, lsl #8
    1918:	01310310 	teqeq	r1, r0, lsl r3
    191c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    1920:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1924:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1928:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    192c:	052f0605 	streq	r0, [pc, #-1541]!	; 132f <_Min_Stack_Size+0x32f>
    1930:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1934:	052f0605 	streq	r0, [pc, #-1541]!	; 1337 <_Min_Stack_Size+0x337>
    1938:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    193c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1940:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1944:	052f0605 	streq	r0, [pc, #-1541]!	; 1347 <_Min_Stack_Size+0x347>
    1948:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    194c:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    1950:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1954:	02050024 	andeq	r0, r5, #36	; 0x24
    1958:	00000000 	andeq	r0, r0, r0
    195c:	06013a03 	streq	r3, [r1], -r3, lsl #20
    1960:	06050501 	streq	r0, [r5], -r1, lsl #10
    1964:	06010521 	streq	r0, [r1], -r1, lsr #10
    1968:	0001022f 	andeq	r0, r1, pc, lsr #4
    196c:	30050101 	andcc	r0, r5, r1, lsl #2
    1970:	00020500 	andeq	r0, r2, r0, lsl #10
    1974:	03000000 	movweq	r0, #0
    1978:	0106013e 	tsteq	r6, lr, lsr r1
    197c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1980:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    1984:	06090501 	streq	r0, [r9], -r1, lsl #10
    1988:	06140534 			; <UNDEFINED> instruction: 0x06140534
    198c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1990:	060c0521 	streq	r0, [ip], -r1, lsr #10
    1994:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1998:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    199c:	09050105 	stmdbeq	r5, {r0, r2, r8}
    19a0:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    19a4:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    19a8:	21060905 	tstcs	r6, r5, lsl #18
    19ac:	01060b05 	tsteq	r6, r5, lsl #22
    19b0:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    19b4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    19b8:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    19bc:	20130601 	andscs	r0, r3, r1, lsl #12
    19c0:	01010020 	tsteq	r1, r0, lsr #32
    19c4:	000001f5 	strdeq	r0, [r0], -r5
    19c8:	00cb0003 	sbceq	r0, fp, r3
    19cc:	01020000 	mrseq	r0, (UNDEF: 2)
    19d0:	000d0efb 	strdeq	r0, [sp], -fp
    19d4:	01010101 	tsteq	r1, r1, lsl #2
    19d8:	01000000 	mrseq	r0, (UNDEF: 0)
    19dc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    19e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    19e4:	2f2e2e2f 	svccs	0x002e2e2f
    19e8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    19ec:	2f736f74 	svccs	0x00736f74
    19f0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    19f4:	2f786461 	svccs	0x00786461
    19f8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    19fc:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1a00:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    1a04:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1a08:	2f2e2e2f 	svccs	0x002e2e2f
    1a0c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1a10:	2f736f74 	svccs	0x00736f74
    1a14:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a18:	2f786461 	svccs	0x00786461
    1a1c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1a20:	6f632f73 	svcvs	0x00632f73
    1a24:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    1a28:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    1a2c:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    1a30:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1a34:	2f2e2e00 	svccs	0x002e2e00
    1a38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1a3c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1a40:	6f747262 	svcvs	0x00747262
    1a44:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1a48:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1a4c:	6f632f78 	svcvs	0x00632f78
    1a50:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1a54:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1a58:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1a5c:	6f6c625f 	svcvs	0x006c625f
    1a60:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
    1a64:	61656c65 	cmnvs	r5, r5, ror #24
    1a68:	632e6573 			; <UNDEFINED> instruction: 0x632e6573
    1a6c:	00000100 	andeq	r0, r0, r0, lsl #2
    1a70:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    1a74:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    1a78:	00020068 	andeq	r0, r2, r8, rrx
    1a7c:	5f787400 	svcpl	0x00787400
    1a80:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    1a84:	00030068 	andeq	r0, r3, r8, rrx
    1a88:	5f787400 	svcpl	0x00787400
    1a8c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a90:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    1a94:	00000300 	andeq	r0, r0, r0, lsl #6
    1a98:	00010500 	andeq	r0, r1, r0, lsl #10
    1a9c:	1ab80205 	bne	fee022b8 <__RAM_segment_used_end__+0xc6d022b8>
    1aa0:	ca031000 	bgt	c5aa8 <SYSTICK_CYCLES+0x9ca69>
    1aa4:	01060100 	mrseq	r0, (UNDEF: 22)
    1aa8:	13143006 	tstne	r4, #6
    1aac:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    1ab0:	05051313 	streq	r1, [r5, #-787]	; 0xfffffced
    1ab4:	05020416 	streq	r0, [r2, #-1046]	; 0xfffffbea
    1ab8:	03f80337 	mvnseq	r0, #-603979776	; 0xdc000000
    1abc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    1ac0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    1ac4:	015c0337 	cmpeq	ip, r7, lsr r3
    1ac8:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    1acc:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    1ad0:	21030601 	tstcs	r3, r1, lsl #12
    1ad4:	01062201 	tsteq	r6, r1, lsl #4
    1ad8:	03060104 	movweq	r0, #24836	; 0x6104
    1adc:	13017c81 	movwne	r7, #7297	; 0x1c81
    1ae0:	01060e05 	tsteq	r6, r5, lsl #28
    1ae4:	21060505 	tstcs	r6, r5, lsl #10
    1ae8:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    1aec:	06050501 	streq	r0, [r5], -r1, lsl #10
    1af0:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    1af4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1af8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1afc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1b00:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    1b04:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1b08:	09052034 	stmdbeq	r5, {r2, r4, r5, sp}
    1b0c:	05153106 	ldreq	r3, [r5, #-262]	; 0xfffffefa
    1b10:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b14:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    1b18:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    1b1c:	14030609 	strne	r0, [r3], #-1545	; 0xfffff9f7
    1b20:	06310520 	ldrteq	r0, [r1], -r0, lsr #10
    1b24:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b28:	061a0532 			; <UNDEFINED> instruction: 0x061a0532
    1b2c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b30:	1b051321 	blne	1467bc <__RAM_SIZE+0x467bc>
    1b34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b38:	30052306 	andcc	r2, r5, r6, lsl #6
    1b3c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b40:	04313306 	ldrteq	r3, [r1], #-774	; 0xfffffcfa
    1b44:	03370502 	teqeq	r7, #8388608	; 0x800000
    1b48:	0501039e 	streq	r0, [r1, #-926]	; 0xfffffc62
    1b4c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1b50:	03060104 	movweq	r0, #24836	; 0x6104
    1b54:	05017cfd 	streq	r7, [r1, #-3325]	; 0xfffff303
    1b58:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1b5c:	4203060d 	andmi	r0, r3, #13631488	; 0xd00000
    1b60:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    1b64:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b68:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    1b6c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b70:	061d0523 	ldreq	r0, [sp], -r3, lsr #10
    1b74:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b78:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    1b7c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b80:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    1b84:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b88:	052e2a03 	streq	r2, [lr, #-2563]!	; 0xfffff5fd
    1b8c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    1b90:	09052019 	stmdbeq	r5, {r0, r3, r4, sp}
    1b94:	32053106 	andcc	r3, r5, #-2147483647	; 0x80000001
    1b98:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b9c:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    1ba0:	2c050106 	stfcss	f0, [r5], {6}
    1ba4:	06090520 	streq	r0, [r9], -r0, lsr #10
    1ba8:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    1bac:	03820337 	orreq	r0, r2, #-603979776	; 0xdc000000
    1bb0:	17050501 	strne	r0, [r5, -r1, lsl #10]
    1bb4:	30060105 	andcc	r0, r6, r5, lsl #2
    1bb8:	01000102 	tsteq	r0, r2, lsl #2
    1bbc:	0002f901 	andeq	pc, r2, r1, lsl #18
    1bc0:	dd000300 	stcle	3, cr0, [r0, #-0]
    1bc4:	02000000 	andeq	r0, r0, #0
    1bc8:	0d0efb01 	vstreq	d15, [lr, #-4]
    1bcc:	01010100 	mrseq	r0, (UNDEF: 17)
    1bd0:	00000001 	andeq	r0, r0, r1
    1bd4:	01000001 	tsteq	r0, r1
    1bd8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1bdc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1be0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1be4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1be8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1bec:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1bf0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1b3c <_Min_Stack_Size+0xb3c>
    1bf4:	2f6e6f6d 	svccs	0x006e6f6d
    1bf8:	00637273 	rsbeq	r7, r3, r3, ror r2
    1bfc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1c00:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1c04:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1c08:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1c0c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1c10:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1c14:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    1c18:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    1c1c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1c20:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    1c24:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    1c28:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    1c2c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1c30:	2f2e2e2f 	svccs	0x002e2e2f
    1c34:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1b84 <_Min_Stack_Size+0xb84>
    1c38:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1c3c:	742f736f 	strtvc	r7, [pc], #-879	; 1c44 <_Min_Stack_Size+0xc44>
    1c40:	61657268 	cmnvs	r5, r8, ror #4
    1c44:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1c48:	6f6d6d6f 	svcvs	0x006d6d6f
    1c4c:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    1c50:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    1c54:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c58:	615f6574 	cmpvs	pc, r4, ror r5	; <UNPREDICTABLE>
    1c5c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    1c60:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    1c64:	00010063 	andeq	r0, r1, r3, rrx
    1c68:	5f787400 	svcpl	0x00787400
    1c6c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1c70:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1c74:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1c78:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    1c7c:	0300682e 	movweq	r6, #2094	; 0x82e
    1c80:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1c84:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1c88:	2e646165 	powcssz	f6, f4, f5
    1c8c:	00030068 	andeq	r0, r3, r8, rrx
    1c90:	5f787400 	svcpl	0x00787400
    1c94:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    1c98:	6f6f705f 	svcvs	0x006f705f
    1c9c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    1ca0:	00000003 	andeq	r0, r0, r3
    1ca4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1ca8:	001b1002 	andseq	r1, fp, r2
    1cac:	00d10310 	sbcseq	r0, r1, r0, lsl r3
    1cb0:	06010601 	streq	r0, [r1], -r1, lsl #12
    1cb4:	1313145a 	tstne	r3, #1509949440	; 0x5a000000
    1cb8:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    1cbc:	0e030505 	cfsh32eq	mvfx0, mvfx3, #5
    1cc0:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    1cc4:	20110501 	andscs	r0, r1, r1, lsl #10
    1cc8:	31060505 	tstcc	r6, r5, lsl #10
    1ccc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    1cd0:	0103e503 	tsteq	r3, r3, lsl #10
    1cd4:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    1cd8:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    1cdc:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    1ce0:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    1ce4:	01063016 	tsteq	r6, r6, lsl r0
    1ce8:	01210306 			; <UNDEFINED> instruction: 0x01210306
    1cec:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    1cf0:	93030601 	movwls	r0, #13825	; 0x3601
    1cf4:	2006017c 	andcs	r0, r6, ip, ror r1
    1cf8:	202e0306 	eorcs	r0, lr, r6, lsl #6
    1cfc:	16090515 			; <UNDEFINED> instruction: 0x16090515
    1d00:	01062805 	tsteq	r6, r5, lsl #16
    1d04:	23060905 	movwcs	r0, #26885	; 0x6905
    1d08:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    1d0c:	0103a103 	tsteq	r3, r3, lsl #2
    1d10:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    1d14:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    1d18:	de030609 	cfmadd32le	mvax0, mvfx0, mvfx3, mvfx9
    1d1c:	1505017c 	strne	r0, [r5, #-380]	; 0xfffffe84
    1d20:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1d24:	02045006 	andeq	r5, r4, #6
    1d28:	a0033705 	andge	r3, r3, r5, lsl #14
    1d2c:	01050103 	tsteq	r5, r3, lsl #2
    1d30:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    1d34:	5c033705 	stcpl	7, cr3, [r3], {5}
    1d38:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    1d3c:	30160505 	andscc	r0, r6, r5, lsl #10
    1d40:	03060106 	movweq	r0, #24838	; 0x6106
    1d44:	06220121 	strteq	r0, [r2], -r1, lsr #2
    1d48:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1d4c:	d8030609 	stmdale	r3, {r0, r3, r9, sl}
    1d50:	0c05017c 	stfeqs	f0, [r5], {124}	; 0x7c
    1d54:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1d58:	200a0306 	andcs	r0, sl, r6, lsl #6
    1d5c:	01061a05 	tsteq	r6, r5, lsl #20
    1d60:	05201005 	streq	r1, [r0, #-5]!
    1d64:	0b030605 	bleq	c3580 <SYSTICK_CYCLES+0x9a541>
    1d68:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1d6c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d70:	06080531 			; <UNDEFINED> instruction: 0x06080531
    1d74:	06090501 	streq	r0, [r9], -r1, lsl #10
    1d78:	04202603 	strteq	r2, [r0], #-1539	; 0xfffff9fd
    1d7c:	03370502 	teqeq	r7, #8388608	; 0x800000
    1d80:	050102d6 	streq	r0, [r1, #-726]	; 0xfffffd2a
    1d84:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1d88:	09050104 	stmdbeq	r5, {r2, r8}
    1d8c:	7da80306 	stcvc	3, cr0, [r8, #24]!
    1d90:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1d94:	03010501 	movweq	r0, #5377	; 0x1501
    1d98:	052001a3 	streq	r0, [r0, #-419]!	; 0xfffffe5d
    1d9c:	e5030609 	str	r0, [r3, #-1545]	; 0xfffff9f7
    1da0:	0c052e7e 	stceq	14, cr2, [r5], {126}	; 0x7e
    1da4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1da8:	2c054006 	stccs	0, cr4, [r5], {6}
    1dac:	10050106 	andne	r0, r5, r6, lsl #2
    1db0:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1db4:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    1db8:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    1dbc:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    1dc0:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    1dc4:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    1dc8:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    1dcc:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    1dd0:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    1dd4:	0a030611 	beq	c3620 <SYSTICK_CYCLES+0x9a5e1>
    1dd8:	06210520 	strteq	r0, [r1], -r0, lsr #10
    1ddc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1de0:	063b0523 	ldrteq	r0, [fp], -r3, lsr #10
    1de4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1de8:	06140531 			; <UNDEFINED> instruction: 0x06140531
    1dec:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1df0:	063e0525 	ldrteq	r0, [lr], -r5, lsr #10
    1df4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1df8:	063c0521 	ldrteq	r0, [ip], -r1, lsr #10
    1dfc:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1e00:	06400521 	strbeq	r0, [r0], -r1, lsr #10
    1e04:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1e08:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    1e0c:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    1e10:	06330611 			; <UNDEFINED> instruction: 0x06330611
    1e14:	0431062e 	ldrteq	r0, [r1], #-1582	; 0xfffff9d2
    1e18:	03370502 	teqeq	r7, #8388608	; 0x800000
    1e1c:	050101f7 	streq	r0, [r1, #-503]	; 0xfffffe09
    1e20:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1e24:	11050104 	tstne	r5, r4, lsl #2
    1e28:	7ebb0306 	cdpvc	3, 11, cr0, cr11, cr6, {0}
    1e2c:	06180501 	ldreq	r0, [r8], -r1, lsl #10
    1e30:	11052e01 	tstne	r5, r1, lsl #28
    1e34:	7efd0306 	cdpvc	3, 15, cr0, cr13, cr6, {0}
    1e38:	02041520 	andeq	r1, r4, #32, 10	; 0x8000000
    1e3c:	c0033705 	andgt	r3, r3, r5, lsl #14
    1e40:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    1e44:	05010417 	streq	r0, [r1, #-1047]	; 0xfffffbe9
    1e48:	b8030618 	stmdalt	r3, {r3, r4, r9, sl}
    1e4c:	02042e7d 	andeq	r2, r4, #2000	; 0x7d0
    1e50:	ca030105 	bgt	c226c <SYSTICK_CYCLES+0x9922d>
    1e54:	04202002 	strteq	r2, [r0], #-2
    1e58:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1e5c:	017df103 	cmneq	sp, r3, lsl #2	; <UNPREDICTABLE>
    1e60:	01062105 	tsteq	r6, r5, lsl #2
    1e64:	21061505 	tstcs	r6, r5, lsl #10
    1e68:	01063c05 	tsteq	r6, r5, lsl #24
    1e6c:	21061505 	tstcs	r6, r5, lsl #10
    1e70:	01062505 	tsteq	r6, r5, lsl #10
    1e74:	21061505 	tstcs	r6, r5, lsl #10
    1e78:	01064005 	tsteq	r6, r5
    1e7c:	21061505 	tstcs	r6, r5, lsl #10
    1e80:	01064105 	tsteq	r6, r5, lsl #2
    1e84:	21061505 	tstcs	r6, r5, lsl #10
    1e88:	01064105 	tsteq	r6, r5, lsl #2
    1e8c:	03060d05 	movweq	r0, #27909	; 0x6d05
    1e90:	042e00ca 	strteq	r0, [lr], #-202	; 0xffffff36
    1e94:	03370502 	teqeq	r7, #8388608	; 0x800000
    1e98:	050101b9 	streq	r0, [r1, #-441]	; 0xfffffe47
    1e9c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1ea0:	0d050104 	stfeqs	f0, [r5, #-16]
    1ea4:	7ec50306 	cdpvc	3, 12, cr0, cr5, cr6, {0}
    1ea8:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    1eac:	06050501 	streq	r0, [r5], -r1, lsl #10
    1eb0:	060b0525 	streq	r0, [fp], -r5, lsr #10
    1eb4:	00070201 	andeq	r0, r7, r1, lsl #4
    1eb8:	01760101 	cmneq	r6, r1, lsl #2
    1ebc:	00030000 	andeq	r0, r3, r0
    1ec0:	000000cf 	andeq	r0, r0, pc, asr #1
    1ec4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1ec8:	0101000d 	tsteq	r1, sp
    1ecc:	00000101 	andeq	r0, r0, r1, lsl #2
    1ed0:	00000100 	andeq	r0, r0, r0, lsl #2
    1ed4:	2f2e2e01 	svccs	0x002e2e01
    1ed8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1edc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1ee0:	6f747262 	svcvs	0x00747262
    1ee4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1ee8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1eec:	6f632f78 	svcvs	0x00632f78
    1ef0:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1ef4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1ef8:	2f2e2e00 	svccs	0x002e2e00
    1efc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1f00:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1f04:	6f747262 	svcvs	0x00747262
    1f08:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f0c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f10:	6f702f78 	svcvs	0x00702f78
    1f14:	2f737472 	svccs	0x00737472
    1f18:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1f1c:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 1d90 <_Min_Stack_Size+0xd90>
    1f20:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    1f24:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    1f28:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    1f2c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1f30:	2f2e2e2f 	svccs	0x002e2e2f
    1f34:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1f38:	2f736f74 	svccs	0x00736f74
    1f3c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1f40:	2f786461 	svccs	0x00786461
    1f44:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1f48:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1f4c:	0000636e 	andeq	r6, r0, lr, ror #6
    1f50:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1f54:	5f657479 	svcpl	0x00657479
    1f58:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1da0 <_Min_Stack_Size+0xda0>
    1f5c:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
    1f60:	70756e61 	rsbsvc	r6, r5, r1, ror #28
    1f64:	0100632e 	tsteq	r0, lr, lsr #6
    1f68:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1f6c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    1f70:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1f74:	74000002 	strvc	r0, [r0], #-2
    1f78:	70615f78 	rsbvc	r5, r1, r8, ror pc
    1f7c:	00682e69 	rsbeq	r2, r8, r9, ror #28
    1f80:	74000003 	strvc	r0, [r0], #-3
    1f84:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f88:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f8c:	0300682e 	movweq	r6, #2094	; 0x82e
    1f90:	05000000 	streq	r0, [r0, #-0]
    1f94:	02050001 	andeq	r0, r5, #1
    1f98:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    1f9c:	0100cd03 	tsteq	r0, r3, lsl #26
    1fa0:	26060106 	strcs	r0, [r6], -r6, lsl #2
    1fa4:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    1fa8:	01210319 			; <UNDEFINED> instruction: 0x01210319
    1fac:	01062205 	tsteq	r6, r5, lsl #4
    1fb0:	24061905 	strcs	r1, [r6], #-2309	; 0xfffff6fb
    1fb4:	01064105 	tsteq	r6, r5, lsl #2
    1fb8:	31061905 	tstcc	r6, r5, lsl #18
    1fbc:	01062205 	tsteq	r6, r5, lsl #4
    1fc0:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
    1fc4:	17310619 			; <UNDEFINED> instruction: 0x17310619
    1fc8:	01061c05 	tsteq	r6, r5, lsl #24
    1fcc:	26061d05 	strcs	r1, [r6], -r5, lsl #26
    1fd0:	01064605 	tsteq	r6, r5, lsl #12
    1fd4:	03061905 	movweq	r1, #26885	; 0x6905
    1fd8:	28052018 	stmdacs	r5, {r3, r4, sp}
    1fdc:	1c050106 	stfnes	f0, [r5], {6}
    1fe0:	03010520 	movweq	r0, #5408	; 0x1520
    1fe4:	1d052e2f 	stcne	14, cr2, [r5, #-188]	; 0xffffff44
    1fe8:	20410306 	subcs	r0, r1, r6, lsl #6
    1fec:	01062905 	tsteq	r6, r5, lsl #18
    1ff0:	21061d05 	tstcs	r6, r5, lsl #26
    1ff4:	01062d05 	tsteq	r6, r5, lsl #26
    1ff8:	21061d05 	tstcs	r6, r5, lsl #26
    1ffc:	01064905 	tsteq	r6, r5, lsl #18
    2000:	21061d05 	tstcs	r6, r5, lsl #26
    2004:	01064905 	tsteq	r6, r5, lsl #18
    2008:	23061d05 	movwcs	r1, #27909	; 0x6d05
    200c:	01062a05 	tsteq	r6, r5, lsl #20
    2010:	05202005 	streq	r2, [r0, #-5]!
    2014:	05320621 	ldreq	r0, [r2, #-1569]!	; 0xfffff9df
    2018:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    201c:	1603061d 			; <UNDEFINED> instruction: 0x1603061d
    2020:	0644052e 	strbeq	r0, [r4], -lr, lsr #10
    2024:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    2028:	06010541 	streq	r0, [r1], -r1, asr #10
    202c:	022e1a03 	eoreq	r1, lr, #12288	; 0x3000
    2030:	01010001 	tsteq	r1, r1
    2034:	00000239 	andeq	r0, r0, r9, lsr r2
    2038:	00df0003 	sbcseq	r0, pc, r3
    203c:	01020000 	mrseq	r0, (UNDEF: 2)
    2040:	000d0efb 	strdeq	r0, [sp], -fp
    2044:	01010101 	tsteq	r1, r1, lsl #2
    2048:	01000000 	mrseq	r0, (UNDEF: 0)
    204c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    2050:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2054:	2f2e2e2f 	svccs	0x002e2e2f
    2058:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    205c:	2f736f74 	svccs	0x00736f74
    2060:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2064:	2f786461 	svccs	0x00786461
    2068:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    206c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2070:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    2074:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2078:	2f2e2e2f 	svccs	0x002e2e2f
    207c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2080:	2f736f74 	svccs	0x00736f74
    2084:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2088:	2f786461 	svccs	0x00786461
    208c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2090:	6f632f73 	svcvs	0x00632f73
    2094:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2098:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    209c:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    20a0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    20a4:	2f2e2e00 	svccs	0x002e2e00
    20a8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    20ac:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    20b0:	6f747262 	svcvs	0x00747262
    20b4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    20b8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    20bc:	6f632f78 	svcvs	0x00632f78
    20c0:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    20c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    20c8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    20cc:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    20d0:	6f705f65 	svcvs	0x00705f65
    20d4:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    20d8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    20dc:	00632e65 	rsbeq	r2, r3, r5, ror #28
    20e0:	74000001 	strvc	r0, [r0], #-1
    20e4:	6f705f78 	svcvs	0x00705f78
    20e8:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    20ec:	00000200 	andeq	r0, r0, r0, lsl #4
    20f0:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    20f4:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    20f8:	00000300 	andeq	r0, r0, r0, lsl #6
    20fc:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    2100:	5f657479 	svcpl	0x00657479
    2104:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1f4c <_Min_Stack_Size+0xf4c>
    2108:	0300682e 	movweq	r6, #2094	; 0x82e
    210c:	623c0000 	eorsvs	r0, ip, #0
    2110:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    2114:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    2118:	00000000 	andeq	r0, r0, r0
    211c:	00010500 	andeq	r0, r1, r0, lsl #10
    2120:	1bf40205 	blne	ffd0293c <__RAM_segment_used_end__+0xc7c0293c>
    2124:	cb031000 	blgt	c612c <SYSTICK_CYCLES+0x9d0ed>
    2128:	01060100 	mrseq	r0, (UNDEF: 22)
    212c:	13145a06 	tstne	r4, #24576	; 0x6000
    2130:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    2134:	06160505 	ldreq	r0, [r6], -r5, lsl #10
    2138:	32062020 	andcc	r2, r6, #32
    213c:	01060f05 	tsteq	r6, r5, lsl #30
    2140:	31060505 	tstcc	r6, r5, lsl #10
    2144:	01062305 	tsteq	r6, r5, lsl #6
    2148:	23060505 	movwcs	r0, #25861	; 0x6505
    214c:	01062405 	tsteq	r6, r5, lsl #8
    2150:	21060505 	tstcs	r6, r5, lsl #10
    2154:	01062305 	tsteq	r6, r5, lsl #6
    2158:	23060505 	movwcs	r0, #25861	; 0x6505
    215c:	01062305 	tsteq	r6, r5, lsl #6
    2160:	21060505 	tstcs	r6, r5, lsl #10
    2164:	01062505 	tsteq	r6, r5, lsl #10
    2168:	26060505 	strcs	r0, [r6], -r5, lsl #10
    216c:	01063605 	tsteq	r6, r5, lsl #12
    2170:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
    2174:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2178:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    217c:	13350605 	teqne	r5, #5242880	; 0x500000
    2180:	01060f05 	tsteq	r6, r5, lsl #30
    2184:	23060505 	movwcs	r0, #25861	; 0x6505
    2188:	05131315 	ldreq	r1, [r3, #-789]	; 0xfffffceb
    218c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2190:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    2194:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2198:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    219c:	01061905 	tsteq	r6, r5, lsl #18
    21a0:	31060505 	tstcc	r6, r5, lsl #10
    21a4:	19051313 	stmdbne	r5, {r0, r1, r4, r8, r9, ip}
    21a8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    21ac:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    21b0:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    21b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    21b8:	06240531 			; <UNDEFINED> instruction: 0x06240531
    21bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    21c0:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    21c4:	03c00337 	biceq	r0, r0, #-603979776	; 0xdc000000
    21c8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    21cc:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    21d0:	015c0337 	cmpeq	ip, r7, lsr r3
    21d4:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    21d8:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    21dc:	21030601 	tstcs	r3, r1, lsl #12
    21e0:	01062201 	tsteq	r6, r1, lsl #4
    21e4:	03060104 	movweq	r0, #24836	; 0x6104
    21e8:	05017cb8 	streq	r7, [r1, #-3256]	; 0xfffff348
    21ec:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    21f0:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
    21f4:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    21f8:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
    21fc:	23052406 	movwcs	r2, #21510	; 0x5406
    2200:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2204:	2f052f06 	svccs	0x00052f06
    2208:	09050106 	stmdbeq	r5, {r1, r2, r8}
    220c:	33052106 	movwcc	r2, #20742	; 0x5106
    2210:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2214:	20130306 	andscs	r0, r3, r6, lsl #6
    2218:	01062005 	tsteq	r6, r5
    221c:	03060505 	movweq	r0, #25861	; 0x6505
    2220:	02043c0f 	andeq	r3, r4, #3840	; 0xf00
    2224:	88033705 	stmdahi	r3, {r0, r2, r8, r9, sl, ip, sp}
    2228:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    222c:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2230:	f6030601 			; <UNDEFINED> instruction: 0xf6030601
    2234:	0105017c 	tsteq	r5, ip, ror r1
    2238:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    223c:	2e600306 	cdpcs	3, 6, cr0, cr0, cr6, {0}
    2240:	01061305 	tsteq	r6, r5, lsl #6
    2244:	2f060905 	svccs	0x00060905
    2248:	01061705 	tsteq	r6, r5, lsl #14
    224c:	23060905 	movwcs	r0, #26885	; 0x6905
    2250:	01063405 	tsteq	r6, r5, lsl #8
    2254:	21060905 	tstcs	r6, r5, lsl #18
    2258:	01063405 	tsteq	r6, r5, lsl #8
    225c:	23060905 	movwcs	r0, #26885	; 0x6905
    2260:	01063305 	tsteq	r6, r5, lsl #6
    2264:	21060905 	tstcs	r6, r5, lsl #18
    2268:	01062f05 	tsteq	r6, r5, lsl #30
    226c:	01000a02 	tsteq	r0, r2, lsl #20
    2270:	00038d01 	andeq	r8, r3, r1, lsl #26
    2274:	ce000300 	cdpgt	3, 0, cr0, cr0, cr0, {0}
    2278:	02000000 	andeq	r0, r0, #0
    227c:	0d0efb01 	vstreq	d15, [lr, #-4]
    2280:	01010100 	mrseq	r0, (UNDEF: 17)
    2284:	00000001 	andeq	r0, r0, r1
    2288:	01000001 	tsteq	r0, r1
    228c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2290:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2294:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2298:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    229c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    22a0:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    22a4:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 21f0 <_Min_Stack_Size+0x11f0>
    22a8:	2f6e6f6d 	svccs	0x006e6f6d
    22ac:	00637273 	rsbeq	r7, r3, r3, ror r2
    22b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    22b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    22b8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    22bc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    22c0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    22c4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    22c8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    22cc:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    22d0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    22d4:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    22d8:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    22dc:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    22e0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    22e4:	2f2e2e2f 	svccs	0x002e2e2f
    22e8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2238 <_Min_Stack_Size+0x1238>
    22ec:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    22f0:	742f736f 	strtvc	r7, [pc], #-879	; 22f8 <_Min_Stack_Size+0x12f8>
    22f4:	61657268 	cmnvs	r5, r8, ror #4
    22f8:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    22fc:	6f6d6d6f 	svcvs	0x006d6d6f
    2300:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    2304:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    2308:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    230c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2310:	5f6c6f6f 	svcpl	0x006c6f6f
    2314:	72616573 	rsbvc	r6, r1, #482344960	; 0x1cc00000
    2318:	632e6863 			; <UNDEFINED> instruction: 0x632e6863
    231c:	00000100 	andeq	r0, r0, r0, lsl #2
    2320:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    2324:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2328:	00020068 	andeq	r0, r2, r8, rrx
    232c:	5f787400 	svcpl	0x00787400
    2330:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    2334:	00030068 	andeq	r0, r3, r8, rrx
    2338:	5f787400 	svcpl	0x00787400
    233c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2340:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    2344:	00000300 	andeq	r0, r0, r0, lsl #6
    2348:	00010500 	andeq	r0, r1, r0, lsl #10
    234c:	1c7c0205 	lfmne	f0, 2, [ip], #-20	; 0xffffffec
    2350:	d6031000 	strle	r1, [r3], -r0
    2354:	01060100 	mrseq	r0, (UNDEF: 22)
    2358:	13142206 	tstne	r4, #1610612736	; 0x60000000
    235c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    2360:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    2364:	16050513 			; <UNDEFINED> instruction: 0x16050513
    2368:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    236c:	0103e903 	tsteq	r3, r3, lsl #18
    2370:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2374:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    2378:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    237c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2380:	01063016 	tsteq	r6, r6, lsl r0
    2384:	01210306 			; <UNDEFINED> instruction: 0x01210306
    2388:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    238c:	90030601 	andls	r0, r3, r1, lsl #12
    2390:	2c05017c 	stfcss	f0, [r5], {124}	; 0x7c
    2394:	53050106 	movwpl	r0, #20742	; 0x5106
    2398:	206d0520 	rsbcs	r0, sp, r0, lsr #10
    239c:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    23a0:	052f0605 	streq	r0, [pc, #-1541]!	; 1da3 <_Min_Stack_Size+0xda3>
    23a4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    23a8:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    23ac:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    23b0:	06280523 	strteq	r0, [r8], -r3, lsr #10
    23b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    23b8:	06150523 	ldreq	r0, [r5], -r3, lsr #10
    23bc:	06090501 	streq	r0, [r9], -r1, lsl #10
    23c0:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    23c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    23c8:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    23cc:	05015e03 	streq	r5, [r1, #-3587]	; 0xfffff1fd
    23d0:	11030609 	tstne	r3, r9, lsl #12
    23d4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    23d8:	03d70337 	bicseq	r0, r7, #-603979776	; 0xdc000000
    23dc:	17050501 	strne	r0, [r5, -r1, lsl #10]
    23e0:	01042e06 	tsteq	r4, r6, lsl #28
    23e4:	03060905 	movweq	r0, #26885	; 0x6905
    23e8:	05017ca7 	streq	r7, [r1, #-3239]	; 0xfffff359
    23ec:	20010615 	andcs	r0, r1, r5, lsl r6
    23f0:	03061105 	movweq	r1, #24837	; 0x6105
    23f4:	14052023 	strne	r2, [r5], #-35	; 0xffffffdd
    23f8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    23fc:	33053f06 	movwcc	r3, #24326	; 0x5f06
    2400:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2404:	2c052406 	cfstrscs	mvf2, [r5], {6}
    2408:	11050106 	tstne	r5, r6, lsl #2
    240c:	05133406 	ldreq	r3, [r3, #-1030]	; 0xfffffbfa
    2410:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2414:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    2418:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    241c:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    2420:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2424:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    2428:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    242c:	09030615 	stmdbeq	r3, {r0, r2, r4, r9, sl}
    2430:	1313162e 	tstne	r3, #48234496	; 0x2e00000
    2434:	01061805 	tsteq	r6, r5, lsl #16
    2438:	03061905 	movweq	r1, #26885	; 0x6905
    243c:	05134a20 	ldreq	r4, [r3, #-2592]	; 0xfffff5e0
    2440:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    2444:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    2448:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    244c:	0522061d 	streq	r0, [r2, #-1565]!	; 0xfffff9e3
    2450:	2001062b 	andcs	r0, r1, fp, lsr #12
    2454:	03061905 	movweq	r1, #26885	; 0x6905
    2458:	0513205f 	ldreq	r2, [r3, #-95]	; 0xffffffa1
    245c:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    2460:	1905202e 	stmdbne	r5, {r1, r2, r3, r5, sp}
    2464:	22052506 	andcs	r2, r5, #25165824	; 0x1800000
    2468:	3b050106 	blcc	142888 <__RAM_SIZE+0x42888>
    246c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2470:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    2474:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    2478:	1d05201c 	stcne	0, cr2, [r5, #-112]	; 0xffffff90
    247c:	3d053106 	stfccs	f3, [r5, #-24]	; 0xffffffe8
    2480:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2484:	2e2a0306 	cdpcs	3, 2, cr0, cr10, cr6, {0}
    2488:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    248c:	0102c803 	tsteq	r2, r3, lsl #16
    2490:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    2494:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    2498:	b603060d 	strlt	r0, [r3], -sp, lsl #12
    249c:	0204017d 	andeq	r0, r4, #1073741855	; 0x4000001f
    24a0:	ce033705 	cdpgt	7, 0, cr3, cr3, cr5, {0}
    24a4:	01050102 	tsteq	r5, r2, lsl #2
    24a8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    24ac:	5c033705 	stcpl	7, cr3, [r3], {5}
    24b0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    24b4:	30160505 	andscc	r0, r6, r5, lsl #10
    24b8:	03060106 	movweq	r0, #24838	; 0x6106
    24bc:	06220121 	strteq	r0, [r2], -r1, lsr #2
    24c0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    24c4:	aa03060d 	bge	c3d00 <SYSTICK_CYCLES+0x9acc1>
    24c8:	1a05017d 	bne	142ac4 <__RAM_SIZE+0x42ac4>
    24cc:	10050106 	andne	r0, r5, r6, lsl #2
    24d0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    24d4:	061d0533 			; <UNDEFINED> instruction: 0x061d0533
    24d8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    24dc:	062d0521 	strteq	r0, [sp], -r1, lsr #10
    24e0:	20200501 	eorcs	r0, r0, r1, lsl #10
    24e4:	23061105 	movwcs	r1, #24837	; 0x6105
    24e8:	01063005 	tsteq	r6, r5
    24ec:	22061005 	andcs	r1, r6, #5
    24f0:	01060905 	tsteq	r6, r5, lsl #18
    24f4:	7ef20306 	cdpvc	3, 15, cr0, cr2, cr6, {0}
    24f8:	030d0520 	movweq	r0, #54560	; 0xd520
    24fc:	1313010e 	tstne	r3, #-2147483645	; 0x80000003
    2500:	01061005 	tsteq	r6, r5
    2504:	03061105 	movweq	r1, #24837	; 0x6105
    2508:	134a00e1 	movtne	r0, #41185	; 0xa0e1
    250c:	01061d05 	tsteq	r6, r5, lsl #26
    2510:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    2514:	01061005 	tsteq	r6, r5
    2518:	31061105 	tstcc	r6, r5, lsl #2
    251c:	01061f05 	tsteq	r6, r5, lsl #30
    2520:	03210520 			; <UNDEFINED> instruction: 0x03210520
    2524:	05207fad 	streq	r7, [r0, #-4013]!	; 0xfffff053
    2528:	ec030609 	stc	6, cr0, [r3], {9}
    252c:	0c052000 	stceq	0, cr2, [r5], {-0}
    2530:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2534:	22052406 	andcs	r2, r5, #100663296	; 0x6000000
    2538:	10050106 	andne	r0, r5, r6, lsl #2
    253c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    2540:	061d0532 			; <UNDEFINED> instruction: 0x061d0532
    2544:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    2548:	23061105 	movwcs	r1, #24837	; 0x6105
    254c:	29051313 	stmdbcs	r5, {r0, r1, r4, r8, r9, ip}
    2550:	26050106 	strcs	r0, [r5], -r6, lsl #2
    2554:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    2558:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    255c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    2560:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    2564:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2568:	11052033 	tstne	r5, r3, lsr r0
    256c:	26053106 	strcs	r3, [r5], -r6, lsl #2
    2570:	11050106 	tstne	r5, r6, lsl #2
    2574:	21052306 	tstcs	r5, r6, lsl #6
    2578:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    257c:	200d0306 	andcs	r0, sp, r6, lsl #6
    2580:	22051313 	andcs	r1, r5, #1275068416	; 0x4c000000
    2584:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2588:	3d052306 	stccc	3, cr2, [r5, #-24]	; 0xffffffe8
    258c:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    2590:	206a0520 	rsbcs	r0, sl, r0, lsr #10
    2594:	05203005 	streq	r3, [r0, #-5]!
    2598:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    259c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    25a0:	0d052010 	stceq	0, cr2, [r5, #-64]	; 0xffffffc0
    25a4:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    25a8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    25ac:	0101fb03 	tsteq	r1, r3, lsl #22	; <UNPREDICTABLE>
    25b0:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    25b4:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    25b8:	8303060d 	movwhi	r0, #13837	; 0x360d
    25bc:	1905017e 	stmdbne	r5, {r1, r2, r3, r4, r5, r6, r8}
    25c0:	01050106 	tsteq	r5, r6, lsl #2
    25c4:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    25c8:	69030611 	stmdbvs	r3, {r0, r4, r9, sl}
    25cc:	34051320 	strcc	r1, [r5], #-800	; 0xfffffce0
    25d0:	31050106 	tstcc	r5, r6, lsl #2
    25d4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    25d8:	042e0d03 	strteq	r0, [lr], #-3331	; 0xfffff2fd
    25dc:	03370502 	teqeq	r7, #8388608	; 0x800000
    25e0:	050101f2 	streq	r0, [r1, #-498]	; 0xfffffe0e
    25e4:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    25e8:	0d050104 	stfeqs	f0, [r5, #-16]
    25ec:	7e8c0306 	cdpvc	3, 8, cr0, cr12, cr6, {0}
    25f0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    25f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    25f8:	060b0525 	streq	r0, [fp], -r5, lsr #10
    25fc:	00060201 	andeq	r0, r6, r1, lsl #4
    2600:	017f0101 	cmneq	pc, r1, lsl #2
    2604:	00030000 	andeq	r0, r3, r0
    2608:	0000015b 	andeq	r0, r0, fp, asr r1
    260c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2610:	0101000d 	tsteq	r1, sp
    2614:	00000101 	andeq	r0, r0, r1, lsl #2
    2618:	00000100 	andeq	r0, r0, r0, lsl #2
    261c:	2f2e2e01 	svccs	0x002e2e01
    2620:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2624:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2628:	6f747262 	svcvs	0x00747262
    262c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2630:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2634:	6f632f78 	svcvs	0x00632f78
    2638:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    263c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2640:	2f2e2e00 	svccs	0x002e2e00
    2644:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2648:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    264c:	6f747262 	svcvs	0x00747262
    2650:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2654:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2658:	6f702f78 	svcvs	0x00702f78
    265c:	2f737472 	svccs	0x00737472
    2660:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2664:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 24d8 <_Min_Stack_Size+0x14d8>
    2668:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    266c:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2670:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    2674:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2678:	2f2e2e2f 	svccs	0x002e2e2f
    267c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2680:	2f736f74 	svccs	0x00736f74
    2684:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2688:	2f786461 	svccs	0x00786461
    268c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2690:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2694:	0000636e 	andeq	r6, r0, lr, ror #6
    2698:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    269c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    26a0:	7a696c61 	bvc	1a5d82c <__RAM_SIZE+0x195d82c>
    26a4:	69685f65 	stmdbvs	r8!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    26a8:	6c5f6867 	mrrcvs	8, 6, r6, pc, cr7	; <UNPREDICTABLE>
    26ac:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
    26b0:	0100632e 	tsteq	r0, lr, lsr #6
    26b4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    26b8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    26bc:	00682e74 	rsbeq	r2, r8, r4, ror lr
    26c0:	74000002 	strvc	r0, [r0], #-2
    26c4:	70615f78 	rsbvc	r5, r1, r8, ror pc
    26c8:	00682e69 	rsbeq	r2, r8, r9, ror #28
    26cc:	74000003 	strvc	r0, [r0], #-3
    26d0:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
    26d4:	61697469 	cmnvs	r9, r9, ror #8
    26d8:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    26dc:	0300682e 	movweq	r6, #2094	; 0x82e
    26e0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    26e4:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    26e8:	6f687061 	svcvs	0x00687061
    26ec:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
    26f0:	00000300 	andeq	r0, r0, r0, lsl #6
    26f4:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    26f8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    26fc:	0300682e 	movweq	r6, #2094	; 0x82e
    2700:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2704:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    2708:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    270c:	7367616c 	cmnvc	r7, #108, 2
    2710:	0300682e 	movweq	r6, #2094	; 0x82e
    2714:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2718:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    271c:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    2720:	00000300 	andeq	r0, r0, r0, lsl #6
    2724:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    2728:	6b636f6c 	blvs	18de4e0 <__RAM_SIZE+0x17de4e0>
    272c:	6f6f705f 	svcvs	0x006f705f
    2730:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    2734:	74000003 	strvc	r0, [r0], #-3
    2738:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    273c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2740:	2e6c6f6f 	cdpcs	15, 6, cr6, cr12, cr15, {3}
    2744:	00030068 	andeq	r0, r3, r8, rrx
    2748:	5f787400 	svcpl	0x00787400
    274c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2750:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    2754:	00000300 	andeq	r0, r0, r0, lsl #6
    2758:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2760 <_Min_Stack_Size+0x1760>
    275c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2760:	0300682e 	movweq	r6, #2094	; 0x82e
    2764:	05000000 	streq	r0, [r0, #-0]
    2768:	02050001 	andeq	r0, r5, #1
    276c:	10001d64 	andne	r1, r0, r4, ror #26
    2770:	0100f003 	tsteq	r0, r3	; <UNPREDICTABLE>
    2774:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    2778:	01053320 	tsteq	r5, r0, lsr #6
    277c:	2e170306 	cdpcs	3, 1, cr0, cr7, cr6, {0}
    2780:	01000102 	tsteq	r0, r2, lsl #2
    2784:	00013701 	andeq	r3, r1, r1, lsl #14
    2788:	e8000300 	stmda	r0, {r8, r9}
    278c:	02000000 	andeq	r0, r0, #0
    2790:	0d0efb01 	vstreq	d15, [lr, #-4]
    2794:	01010100 	mrseq	r0, (UNDEF: 17)
    2798:	00000001 	andeq	r0, r0, r1
    279c:	01000001 	tsteq	r0, r1
    27a0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    27a4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    27a8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    27ac:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    27b0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    27b4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    27b8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2704 <_Min_Stack_Size+0x1704>
    27bc:	2f6e6f6d 	svccs	0x006e6f6d
    27c0:	00637273 	rsbeq	r7, r3, r3, ror r2
    27c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    27c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    27cc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    27d0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    27d4:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    27d8:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    27dc:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    27e0:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    27e4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    27e8:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    27ec:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    27f0:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    27f4:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    27f8:	2f2e2e2f 	svccs	0x002e2e2f
    27fc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 274c <_Min_Stack_Size+0x174c>
    2800:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2804:	742f736f 	strtvc	r7, [pc], #-879	; 280c <_Min_Stack_Size+0x180c>
    2808:	61657268 	cmnvs	r5, r8, ror #4
    280c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2810:	6f6d6d6f 	svcvs	0x006d6d6f
    2814:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    2818:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    281c:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
    2820:	61697469 	cmnvs	r9, r9, ror #8
    2824:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    2828:	72656b5f 	rsbvc	r6, r5, #97280	; 0x17c00
    282c:	5f6c656e 	svcpl	0x006c656e
    2830:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
    2834:	00632e72 	rsbeq	r2, r3, r2, ror lr
    2838:	74000001 	strvc	r0, [r0], #-1
    283c:	6f705f78 	svcvs	0x00705f78
    2840:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    2844:	00000200 	andeq	r0, r0, r0, lsl #4
    2848:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    284c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2850:	7a696c61 	bvc	1a5d9dc <__RAM_SIZE+0x195d9dc>
    2854:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2858:	74000003 	strvc	r0, [r0], #-3
    285c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2860:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2864:	0300682e 	movweq	r6, #2094	; 0x82e
    2868:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    286c:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2870:	0300682e 	movweq	r6, #2094	; 0x82e
    2874:	05000000 	streq	r0, [r0, #-0]
    2878:	02050001 	andeq	r0, r5, #1
    287c:	10001d70 	andne	r1, r0, r0, ror sp
    2880:	0100e503 	tsteq	r0, r3, lsl #10
    2884:	05230505 	streq	r0, [r3, #-1285]!	; 0xfffffafb
    2888:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    288c:	05052e08 	streq	r2, [r5, #-3592]	; 0xfffff1f8
    2890:	3c200306 	stccc	3, cr0, [r0], #-24	; 0xffffffe8
    2894:	01061d05 	tsteq	r6, r5, lsl #26
    2898:	51060505 	tstpl	r6, r5, lsl #10
    289c:	061d054e 	ldreq	r0, [sp], -lr, asr #10
    28a0:	06050501 	streq	r0, [r5], -r1, lsl #10
    28a4:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    28a8:	05350601 	ldreq	r0, [r5, #-1537]!	; 0xfffff9ff
    28ac:	4b030609 	blmi	c40d8 <SYSTICK_CYCLES+0x9b099>
    28b0:	06210520 	strteq	r0, [r1], -r0, lsr #10
    28b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    28b8:	02313351 	eorseq	r3, r1, #1140850689	; 0x44000001
    28bc:	0101000b 	tsteq	r1, fp
    28c0:	00000361 	andeq	r0, r0, r1, ror #6
    28c4:	01390003 	teqeq	r9, r3
    28c8:	01020000 	mrseq	r0, (UNDEF: 2)
    28cc:	000d0efb 	strdeq	r0, [sp], -fp
    28d0:	01010101 	tsteq	r1, r1, lsl #2
    28d4:	01000000 	mrseq	r0, (UNDEF: 0)
    28d8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    28dc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    28e0:	2f2e2e2f 	svccs	0x002e2e2f
    28e4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    28e8:	2f736f74 	svccs	0x00736f74
    28ec:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    28f0:	2f786461 	svccs	0x00786461
    28f4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    28f8:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    28fc:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    2900:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2904:	2f2e2e2f 	svccs	0x002e2e2f
    2908:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    290c:	2f736f74 	svccs	0x00736f74
    2910:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2914:	2f786461 	svccs	0x00786461
    2918:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    291c:	6f632f73 	svcvs	0x00632f73
    2920:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2924:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    2928:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    292c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2930:	2f2e2e00 	svccs	0x002e2e00
    2934:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2938:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    293c:	6f747262 	svcvs	0x00747262
    2940:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2944:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2948:	6f632f78 	svcvs	0x00632f78
    294c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2950:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2954:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2958:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    295c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2960:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2964:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2968:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    296c:	5f6d7261 	svcpl	0x006d7261
    2970:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2974:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2978:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    297c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2980:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2984:	30312d69 	eorscc	r2, r1, r9, ror #26
    2988:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    298c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2990:	615c3031 	cmpvs	ip, r1, lsr r0
    2994:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2998:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    299c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    29a0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    29a4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    29a8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    29ac:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    29b0:	5f646165 	svcpl	0x00646165
    29b4:	61657263 	cmnvs	r5, r3, ror #4
    29b8:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    29bc:	00000100 	andeq	r0, r0, r0, lsl #2
    29c0:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    29c4:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    29c8:	00020068 	andeq	r0, r2, r8, rrx
    29cc:	5f787400 	svcpl	0x00787400
    29d0:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    29d4:	00030068 	andeq	r0, r3, r8, rrx
    29d8:	5f787400 	svcpl	0x00787400
    29dc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    29e0:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    29e4:	00000300 	andeq	r0, r0, r0, lsl #6
    29e8:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    29ec:	682e676e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    29f0:	00000400 	andeq	r0, r0, r0, lsl #8
    29f4:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    29f8:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    29fc:	00003e6e 	andeq	r3, r0, lr, ror #28
    2a00:	05000000 	streq	r0, [r0, #-0]
    2a04:	02050001 	andeq	r0, r5, #1
    2a08:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    2a0c:	0100e203 	tsteq	r0, r3, lsl #4
    2a10:	a0060106 	andge	r0, r6, r6, lsl #2
    2a14:	13131314 	tstne	r3, #20, 6	; 0x50000000
    2a18:	05131513 	ldreq	r1, [r3, #-1299]	; 0xfffffaed
    2a1c:	01130305 	tsteq	r3, r5, lsl #6
    2a20:	20202006 	eorcs	r2, r0, r6
    2a24:	31053606 	tstcc	r5, r6, lsl #12
    2a28:	10050106 	andne	r0, r5, r6, lsl #2
    2a2c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    2a30:	30051426 	andcc	r1, r5, r6, lsr #8
    2a34:	19050106 	stmdbne	r5, {r1, r2, r8}
    2a38:	0605052e 	streq	r0, [r5], -lr, lsr #10
    2a3c:	06080531 			; <UNDEFINED> instruction: 0x06080531
    2a40:	06090501 	streq	r0, [r9], -r1, lsl #10
    2a44:	06140532 			; <UNDEFINED> instruction: 0x06140532
    2a48:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a4c:	055b1a35 	ldrbeq	r1, [fp, #-2613]	; 0xfffff5cb
    2a50:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    2a54:	052f0605 	streq	r0, [pc, #-1541]!	; 2457 <_Min_Stack_Size+0x1457>
    2a58:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    2a5c:	052f0605 	streq	r0, [pc, #-1541]!	; 245f <_Min_Stack_Size+0x145f>
    2a60:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    2a64:	052f0605 	streq	r0, [pc, #-1541]!	; 2467 <_Min_Stack_Size+0x1467>
    2a68:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    2a6c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2a70:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2a74:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2a78:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    2a7c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2a80:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    2a84:	052f0605 	streq	r0, [pc, #-1541]!	; 2487 <_Min_Stack_Size+0x1487>
    2a88:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2a8c:	052f0605 	streq	r0, [pc, #-1541]!	; 248f <_Min_Stack_Size+0x148f>
    2a90:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    2a94:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2a98:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    2a9c:	133f0605 	teqne	pc, #5242880	; 0x500000
    2aa0:	01061205 	tsteq	r6, r5, lsl #4
    2aa4:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    2aa8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2aac:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    2ab0:	0a030605 	beq	c42cc <SYSTICK_CYCLES+0x9b28d>
    2ab4:	06080520 	streq	r0, [r8], -r0, lsr #10
    2ab8:	06050501 	streq	r0, [r5], -r1, lsl #10
    2abc:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    2ac0:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    2ac4:	2e310605 	cfmsuba32cs	mvax0, mvax0, mvfx1, mvfx5
    2ac8:	3d054f28 	stccc	15, cr4, [r5, #-160]	; 0xffffff60
    2acc:	2f050106 	svccs	0x00050106
    2ad0:	06050520 	streq	r0, [r5], -r0, lsr #10
    2ad4:	05020432 	streq	r0, [r2, #-1074]	; 0xfffffbce
    2ad8:	02e90337 	rsceq	r0, r9, #-603979776	; 0xdc000000
    2adc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2ae0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2ae4:	015c0337 	cmpeq	ip, r7, lsr r3
    2ae8:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2aec:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    2af0:	21030601 	tstcs	r3, r1, lsl #12
    2af4:	01062201 	tsteq	r6, r1, lsl #4
    2af8:	03060104 	movweq	r0, #24836	; 0x6104
    2afc:	05017d8f 	streq	r7, [r1, #-3471]	; 0xfffff271
    2b00:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2b04:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
    2b08:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    2b0c:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
    2b10:	20052406 	andcs	r2, r5, r6, lsl #8
    2b14:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b18:	2e052f06 	cdpcs	15, 0, cr2, cr5, cr6, {0}
    2b1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b20:	32052f06 	andcc	r2, r5, #6, 30
    2b24:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b28:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
    2b2c:	01061d05 	tsteq	r6, r5, lsl #26
    2b30:	03060505 	movweq	r0, #25861	; 0x6505
    2b34:	08053c16 	stmdaeq	r5, {r1, r2, r4, sl, fp, ip, sp}
    2b38:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b3c:	00cd0306 	sbceq	r0, sp, r6, lsl #6
    2b40:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    2b44:	01dd0337 	bicseq	r0, sp, r7, lsr r3
    2b48:	17050501 	strne	r0, [r5, -r1, lsl #10]
    2b4c:	01042e06 	tsteq	r4, r6, lsl #28
    2b50:	7eb60306 	cdpvc	3, 11, cr0, cr6, cr6, {0}
    2b54:	06010501 	streq	r0, [r1], -r1, lsl #10
    2b58:	06090513 			; <UNDEFINED> instruction: 0x06090513
    2b5c:	3c7eca03 			; <UNDEFINED> instruction: 0x3c7eca03
    2b60:	01063305 	tsteq	r6, r5, lsl #6
    2b64:	21060905 	tstcs	r6, r5, lsl #18
    2b68:	01063805 	tsteq	r6, r5, lsl #16
    2b6c:	03060905 	movweq	r0, #26885	; 0x6905
    2b70:	15053c2c 	strne	r3, [r5, #-3116]	; 0xfffff3d4
    2b74:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b78:	19052f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, sp}
    2b7c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b80:	33053106 	movwcc	r3, #20742	; 0x5106
    2b84:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b88:	33052f06 	movwcc	r2, #24326	; 0x5f06
    2b8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b90:	32053106 	andcc	r3, r5, #-2147483647	; 0x80000001
    2b94:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b98:	2e052f06 	cdpcs	15, 0, cr2, cr5, cr6, {0}
    2b9c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2ba0:	3c1e0306 	ldccc	3, cr0, [lr], {6}
    2ba4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2ba8:	0101d703 	tsteq	r1, r3, lsl #14
    2bac:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2bb0:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    2bb4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2bb8:	7ea5030d 	cdpvc	3, 10, cr0, cr5, cr13, {0}
    2bbc:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    2bc0:	03060d05 	movweq	r0, #27909	; 0x6d05
    2bc4:	1e053c09 	cdpne	12, 0, cr3, cr5, cr9, {0}
    2bc8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2bcc:	10053106 	andne	r3, r5, r6, lsl #2
    2bd0:	11050106 	tstne	r5, r6, lsl #2
    2bd4:	21052606 	tstcs	r5, r6, lsl #12
    2bd8:	11050106 	tstne	r5, r6, lsl #2
    2bdc:	55052506 	strpl	r2, [r5, #-1286]	; 0xfffffafa
    2be0:	41050106 	tstmi	r5, r6, lsl #2
    2be4:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    2be8:	052e7eb0 	streq	r7, [lr, #-3760]!	; 0xfffff150
    2bec:	01d7031e 	bicseq	r0, r7, lr, lsl r3
    2bf0:	06090520 	streq	r0, [r9], -r0, lsr #10
    2bf4:	3f200903 	svccc	0x00200903
    2bf8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2bfc:	0101fc03 	tsteq	r1, r3, lsl #24	; <UNPREDICTABLE>
    2c00:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    2c04:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    2c08:	8d030609 	stchi	6, cr0, [r3, #-36]	; 0xffffffdc
    2c0c:	0c05017e 	stfeqs	f0, [r5], {126}	; 0x7e
    2c10:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2c14:	3d053306 	stccc	3, cr3, [r5, #-24]	; 0xffffffe8
    2c18:	19050106 	stmdbne	r5, {r1, r2, r8}
    2c1c:	2e7e8a03 	vaddcs.f32	s17, s28, s6
    2c20:	01001002 	tsteq	r0, r2
    2c24:	00010601 	andeq	r0, r1, r1, lsl #12
    2c28:	cf000300 	svcgt	0x00000300
    2c2c:	02000000 	andeq	r0, r0, #0
    2c30:	0d0efb01 	vstreq	d15, [lr, #-4]
    2c34:	01010100 	mrseq	r0, (UNDEF: 17)
    2c38:	00000001 	andeq	r0, r0, r1
    2c3c:	01000001 	tsteq	r0, r1
    2c40:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c44:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2c48:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2c4c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2c50:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2c54:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2c58:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2ba4 <_Min_Stack_Size+0x1ba4>
    2c5c:	2f6e6f6d 	svccs	0x006e6f6d
    2c60:	00637273 	rsbeq	r7, r3, r3, ror r2
    2c64:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c68:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2c6c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2c70:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2c74:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2c78:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2c7c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    2c80:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    2c84:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    2c88:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    2c8c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    2c90:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    2c94:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    2c98:	2f2e2e2f 	svccs	0x002e2e2f
    2c9c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2bec <_Min_Stack_Size+0x1bec>
    2ca0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2ca4:	742f736f 	strtvc	r7, [pc], #-879	; 2cac <_Min_Stack_Size+0x1cac>
    2ca8:	61657268 	cmnvs	r5, r8, ror #4
    2cac:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2cb0:	6f6d6d6f 	svcvs	0x006d6d6f
    2cb4:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    2cb8:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    2cbc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cc0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2cc4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2cc8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2ccc:	2e657a69 	vnmulcs.f32	s15, s10, s19
    2cd0:	00010063 	andeq	r0, r1, r3, rrx
    2cd4:	5f787400 	svcpl	0x00787400
    2cd8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2cdc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2ce0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2ce4:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2ce8:	0300682e 	movweq	r6, #2094	; 0x82e
    2cec:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2cf0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    2cf4:	2e646165 	powcssz	f6, f4, f5
    2cf8:	00030068 	andeq	r0, r3, r8, rrx
    2cfc:	01050000 	mrseq	r0, (UNDEF: 5)
    2d00:	e8020500 	stmda	r2, {r8, sl}
    2d04:	0310001e 	tsteq	r0, #30
    2d08:	050102c0 	streq	r0, [r1, #-704]	; 0xfffffd40
    2d0c:	01180305 	tsteq	r8, r5, lsl #6
    2d10:	01062105 	tsteq	r6, r5, lsl #2
    2d14:	03060505 	movweq	r0, #25861	; 0x6505
    2d18:	1d053c2e 	stcne	12, cr3, [r5, #-184]	; 0xffffff48
    2d1c:	01330306 	teqeq	r3, r6, lsl #6
    2d20:	4d031705 	stcmi	7, cr1, [r3, #-20]	; 0xffffffec
    2d24:	0301054a 	movweq	r0, #5450	; 0x154a
    2d28:	0802203f 	stmdaeq	r2, {r0, r1, r2, r3, r4, r5, sp}
    2d2c:	7f010100 	svcvc	0x00010100
    2d30:	03000001 	movweq	r0, #1
    2d34:	0000d000 	andeq	sp, r0, r0
    2d38:	fb010200 	blx	43542 <SYSTICK_CYCLES+0x1a503>
    2d3c:	01000d0e 	tsteq	r0, lr, lsl #26
    2d40:	00010101 	andeq	r0, r1, r1, lsl #2
    2d44:	00010000 	andeq	r0, r1, r0
    2d48:	2e2e0100 	sufcse	f0, f6, f0
    2d4c:	2f2e2e2f 	svccs	0x002e2e2f
    2d50:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2ca0 <_Min_Stack_Size+0x1ca0>
    2d54:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2d58:	742f736f 	strtvc	r7, [pc], #-879	; 2d60 <_Min_Stack_Size+0x1d60>
    2d5c:	61657268 	cmnvs	r5, r8, ror #4
    2d60:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2d64:	6f6d6d6f 	svcvs	0x006d6d6f
    2d68:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    2d6c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    2d70:	2f2e2e2f 	svccs	0x002e2e2f
    2d74:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2cc4 <_Min_Stack_Size+0x1cc4>
    2d78:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2d7c:	742f736f 	strtvc	r7, [pc], #-879	; 2d84 <_Min_Stack_Size+0x1d84>
    2d80:	61657268 	cmnvs	r5, r8, ror #4
    2d84:	702f7864 	eorvc	r7, pc, r4, ror #16
    2d88:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    2d8c:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2d90:	5f786574 	svcpl	0x00786574
    2d94:	2f33336d 	svccs	0x0033336d
    2d98:	2f756e67 	svccs	0x00756e67
    2d9c:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2da0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2da4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2da8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2dac:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2db0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2db4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2db8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2d04 <_Min_Stack_Size+0x1d04>
    2dbc:	2f6e6f6d 	svccs	0x006e6f6d
    2dc0:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2dc4:	5f787400 	svcpl	0x00787400
    2dc8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2dcc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    2dd0:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
    2dd4:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    2dd8:	632e7972 			; <UNDEFINED> instruction: 0x632e7972
    2ddc:	00000100 	andeq	r0, r0, r0, lsl #2
    2de0:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    2de4:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2de8:	00020068 	andeq	r0, r2, r8, rrx
    2dec:	5f787400 	svcpl	0x00787400
    2df0:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    2df4:	00030068 	andeq	r0, r3, r8, rrx
    2df8:	5f787400 	svcpl	0x00787400
    2dfc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2e00:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    2e04:	00000300 	andeq	r0, r0, r0, lsl #6
    2e08:	00010500 	andeq	r0, r1, r0, lsl #10
    2e0c:	1f080205 	svcne	0x00080205
    2e10:	cb031000 	blgt	c6e18 <SYSTICK_CYCLES+0x9ddd9>
    2e14:	14220100 	strtne	r0, [r2], #-256	; 0xffffff00
    2e18:	03190505 	tsteq	r9, #20971520	; 0x1400000
    2e1c:	11052e1a 	tstne	r5, sl, lsl lr
    2e20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2e24:	22054106 	andcs	r4, r5, #-2147483647	; 0x80000001
    2e28:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2e2c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    2e30:	32050525 	andcc	r0, r5, #155189248	; 0x9400000
    2e34:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2e38:	0103d303 	tsteq	r3, r3, lsl #6
    2e3c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2e40:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    2e44:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    2e48:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2e4c:	01063016 	tsteq	r6, r6, lsl r0
    2e50:	01210306 			; <UNDEFINED> instruction: 0x01210306
    2e54:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    2e58:	ac030601 	stcge	6, cr0, [r3], {1}
    2e5c:	2305017c 	movwcs	r0, #20860	; 0x517c
    2e60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2e64:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
    2e68:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2e6c:	01ca0338 	biceq	r0, sl, r8, lsr r3
    2e70:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2e74:	2f140505 	svccs	0x00140505
    2e78:	01040106 	tsteq	r4, r6, lsl #2
    2e7c:	7eb10306 	cdpvc	3, 11, cr0, cr1, cr6, {0}
    2e80:	02042e01 	andeq	r2, r4, #1, 28
    2e84:	d2033705 	andle	r3, r3, #1310720	; 0x140000
    2e88:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2e8c:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    2e90:	af030601 	svcge	0x00030601
    2e94:	044d017e 	strbeq	r0, [sp], #-382	; 0xfffffe82
    2e98:	03370502 	teqeq	r7, #8388608	; 0x800000
    2e9c:	050103a7 	streq	r0, [r1, #-935]	; 0xfffffc59
    2ea0:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2ea4:	01050104 	tsteq	r5, r4, lsl #2
    2ea8:	017cfb03 	cmneq	ip, r3, lsl #22	; <UNPREDICTABLE>
    2eac:	00050220 	andeq	r0, r5, r0, lsr #4
    2eb0:	023f0101 	eorseq	r0, pc, #1073741824	; 0x40000000
    2eb4:	00030000 	andeq	r0, r3, r0
    2eb8:	000000d8 	ldrdeq	r0, [r0], -r8
    2ebc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2ec0:	0101000d 	tsteq	r1, sp
    2ec4:	00000101 	andeq	r0, r0, r1, lsl #2
    2ec8:	00000100 	andeq	r0, r0, r0, lsl #2
    2ecc:	2f2e2e01 	svccs	0x002e2e01
    2ed0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2ed4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2ed8:	6f747262 	svcvs	0x00747262
    2edc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2ee0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2ee4:	6f632f78 	svcvs	0x00632f78
    2ee8:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2eec:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2ef0:	2f2e2e00 	svccs	0x002e2e00
    2ef4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2ef8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2efc:	6f747262 	svcvs	0x00747262
    2f00:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2f04:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2f08:	6f702f78 	svcvs	0x00702f78
    2f0c:	2f737472 	svccs	0x00737472
    2f10:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2f14:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 2d88 <_Min_Stack_Size+0x1d88>
    2f18:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    2f1c:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2f20:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    2f24:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f28:	2f2e2e2f 	svccs	0x002e2e2f
    2f2c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2f30:	2f736f74 	svccs	0x00736f74
    2f34:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2f38:	2f786461 	svccs	0x00786461
    2f3c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2f40:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2f44:	0000636e 	andeq	r6, r0, lr, ror #6
    2f48:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2f50 <_Min_Stack_Size+0x1f50>
    2f4c:	61657268 	cmnvs	r5, r8, ror #4
    2f50:	6c735f64 	ldclvs	15, cr5, [r3], #-400	; 0xfffffe70
    2f54:	2e706565 	cdpcs	5, 7, cr6, cr0, cr5, {3}
    2f58:	00010063 	andeq	r0, r1, r3, rrx
    2f5c:	5f787400 	svcpl	0x00787400
    2f60:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2f64:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2f68:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2f6c:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2f70:	0300682e 	movweq	r6, #2094	; 0x82e
    2f74:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2f78:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    2f7c:	2e646165 	powcssz	f6, f4, f5
    2f80:	00030068 	andeq	r0, r3, r8, rrx
    2f84:	5f787400 	svcpl	0x00787400
    2f88:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2f8c:	00682e72 	rsbeq	r2, r8, r2, ror lr
    2f90:	00000003 	andeq	r0, r0, r3
    2f94:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2f98:	001f4c02 	andseq	r4, pc, r2, lsl #24
    2f9c:	00c90310 	sbceq	r0, r9, r0, lsl r3
    2fa0:	06010601 	streq	r0, [r1], -r1, lsl #12
    2fa4:	05131422 	ldreq	r1, [r3, #-1058]	; 0xfffffbde
    2fa8:	02041605 	andeq	r1, r4, #5242880	; 0x500000
    2fac:	ff033705 			; <UNDEFINED> instruction: 0xff033705
    2fb0:	01050103 	tsteq	r5, r3, lsl #2
    2fb4:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    2fb8:	5c033705 	stcpl	7, cr3, [r3], {5}
    2fbc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2fc0:	30160505 	andscc	r0, r6, r5, lsl #10
    2fc4:	03060106 	movweq	r0, #24838	; 0x6106
    2fc8:	06220121 	strteq	r0, [r2], -r1, lsr #2
    2fcc:	06010401 	streq	r0, [r1], -r1, lsl #8
    2fd0:	017bf903 	cmneq	fp, r3, lsl #18	; <UNPREDICTABLE>
    2fd4:	06080533 			; <UNDEFINED> instruction: 0x06080533
    2fd8:	060a0501 	streq	r0, [sl], -r1, lsl #10
    2fdc:	04200b03 	strteq	r0, [r0], #-2819	; 0xfffff4fd
    2fe0:	03370502 	teqeq	r7, #8388608	; 0x800000
    2fe4:	05010394 	streq	r0, [r1, #-916]	; 0xfffffc6c
    2fe8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2fec:	01062f13 	tsteq	r6, r3, lsl pc
    2ff0:	0e050104 	adfeqs	f0, f5, f4
    2ff4:	017ce803 	cmneq	ip, r3, lsl #16
    2ff8:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    2ffc:	0d03060a 	stceq	6, cr0, [r3, #-40]	; 0xffffffd8
    3000:	060d052e 	streq	r0, [sp], -lr, lsr #10
    3004:	060a0501 	streq	r0, [sl], -r1, lsl #10
    3008:	053c0c03 	ldreq	r0, [ip, #-3075]!	; 0xfffff3fd
    300c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    3010:	04240609 	strteq	r0, [r4], #-1545	; 0xfffff9f7
    3014:	03370502 	teqeq	r7, #8388608	; 0x800000
    3018:	050103c6 	streq	r0, [r1, #-966]	; 0xfffffc3a
    301c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3020:	09050104 	stmdbeq	r5, {r2, r8}
    3024:	7cb80306 	ldcvc	3, cr0, [r8], #24
    3028:	06010601 	streq	r0, [r1], -r1, lsl #12
    302c:	04205903 	strteq	r5, [r0], #-2307	; 0xfffff6fd
    3030:	03370502 	teqeq	r7, #8388608	; 0x800000
    3034:	050103ea 	streq	r0, [r1, #-1002]	; 0xfffffc16
    3038:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    303c:	09050104 	stmdbeq	r5, {r2, r8}
    3040:	7c940306 	ldcvc	3, cr0, [r4], {6}
    3044:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    3048:	09052001 	stmdbeq	r5, {r0, sp}
    304c:	02042806 	andeq	r2, r4, #393216	; 0x60000
    3050:	df033705 	svcle	0x00033705
    3054:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    3058:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    305c:	06090501 	streq	r0, [r9], -r1, lsl #10
    3060:	017c9f03 	cmneq	ip, r3, lsl #30
    3064:	01061005 	tsteq	r6, r5
    3068:	d9030105 	stmdble	r3, {r0, r2, r8}
    306c:	09052000 	stmdbeq	r5, {sp}
    3070:	7fb10306 	svcvc	0x00b10306
    3074:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
    3078:	03d20337 	bicseq	r0, r2, #-603979776	; 0xdc000000
    307c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3080:	01042e06 	tsteq	r4, r6, lsl #28
    3084:	03060905 	movweq	r0, #26885	; 0x6905
    3088:	05017cac 	streq	r7, [r1, #-3244]	; 0xfffff354
    308c:	20010610 	andcs	r0, r1, r0, lsl r6
    3090:	03060905 	movweq	r0, #26885	; 0x6905
    3094:	28052012 	stmdacs	r5, {r1, r4, sp}
    3098:	0c050106 	stfeqs	f0, [r5], {6}
    309c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    30a0:	05020424 	streq	r0, [r2, #-1060]	; 0xfffffbdc
    30a4:	03b90337 			; <UNDEFINED> instruction: 0x03b90337
    30a8:	17050501 	strne	r0, [r5, -r1, lsl #10]
    30ac:	01042e06 	tsteq	r4, r6, lsl #28
    30b0:	03060d05 	movweq	r0, #27909	; 0x6d05
    30b4:	05017cc5 	streq	r7, [r1, #-3269]	; 0xfffff33b
    30b8:	20010614 	andcs	r0, r1, r4, lsl r6
    30bc:	03060d05 	movweq	r0, #27909	; 0x6d05
    30c0:	2b05200e 	blcs	14b100 <__RAM_SIZE+0x4b100>
    30c4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    30c8:	2e063306 	cdpcs	3, 0, cr3, cr6, cr6, {0}
    30cc:	02043106 	andeq	r3, r4, #-2147483647	; 0x80000001
    30d0:	a0033705 	andge	r3, r3, r5, lsl #14
    30d4:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    30d8:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    30dc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    30e0:	017cf203 	cmneq	ip, r3, lsl #4	; <UNPREDICTABLE>
    30e4:	01061405 	tsteq	r6, r5, lsl #8
    30e8:	33060505 	movwcc	r0, #25861	; 0x6505
    30ec:	01060b05 	tsteq	r6, r5, lsl #22
    30f0:	01000902 	tsteq	r0, r2, lsl #18
    30f4:	00023c01 	andeq	r3, r2, r1, lsl #24
    30f8:	c3000300 	movwgt	r0, #768	; 0x300
    30fc:	02000000 	andeq	r0, r0, #0
    3100:	0d0efb01 	vstreq	d15, [lr, #-4]
    3104:	01010100 	mrseq	r0, (UNDEF: 17)
    3108:	00000001 	andeq	r0, r0, r1
    310c:	01000001 	tsteq	r0, r1
    3110:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3114:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3118:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    311c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3120:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3124:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3128:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 3074 <_Min_Stack_Size+0x2074>
    312c:	2f6e6f6d 	svccs	0x006e6f6d
    3130:	00637273 	rsbeq	r7, r3, r3, ror r2
    3134:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3138:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    313c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3140:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3144:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3148:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    314c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    3150:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    3154:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3158:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    315c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    3160:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    3164:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    3168:	2f2e2e2f 	svccs	0x002e2e2f
    316c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 30bc <_Min_Stack_Size+0x20bc>
    3170:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3174:	742f736f 	strtvc	r7, [pc], #-879	; 317c <_Min_Stack_Size+0x217c>
    3178:	61657268 	cmnvs	r5, r8, ror #4
    317c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    3180:	6f6d6d6f 	svcvs	0x006d6d6f
    3184:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    3188:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    318c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3190:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3194:	6174735f 	cmnvs	r4, pc, asr r3
    3198:	615f6b63 	cmpvs	pc, r3, ror #22
    319c:	796c616e 	stmdbvc	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
    31a0:	632e657a 			; <UNDEFINED> instruction: 0x632e657a
    31a4:	00000100 	andeq	r0, r0, r0, lsl #2
    31a8:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    31ac:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    31b0:	00020068 	andeq	r0, r2, r8, rrx
    31b4:	5f787400 	svcpl	0x00787400
    31b8:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    31bc:	00030068 	andeq	r0, r3, r8, rrx
    31c0:	01050000 	mrseq	r0, (UNDEF: 5)
    31c4:	c0020500 	andgt	r0, r2, r0, lsl #10
    31c8:	0310001f 	tsteq	r0, #31
    31cc:	140100c8 	strne	r0, [r1], #-200	; 0xffffff38
    31d0:	13131314 	tstne	r3, #20, 6	; 0x50000000
    31d4:	04160505 	ldreq	r0, [r6], #-1285	; 0xfffffafb
    31d8:	03370502 	teqeq	r7, #8388608	; 0x800000
    31dc:	050103fe 	streq	r0, [r1, #-1022]	; 0xfffffc02
    31e0:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    31e4:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    31e8:	0105015c 	tsteq	r5, ip, asr r1
    31ec:	16050514 			; <UNDEFINED> instruction: 0x16050514
    31f0:	06010630 			; <UNDEFINED> instruction: 0x06010630
    31f4:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    31f8:	01040106 	tsteq	r4, r6, lsl #2
    31fc:	7bfa0306 	blvc	ffe83e1c <__RAM_segment_used_end__+0xc7d83e1c>
    3200:	06080501 	streq	r0, [r8], -r1, lsl #10
    3204:	06090501 	streq	r0, [r9], -r1, lsl #10
    3208:	06180524 	ldreq	r0, [r8], -r4, lsr #10
    320c:	200c0501 	andcs	r0, ip, r1, lsl #10
    3210:	03060505 	movweq	r0, #25861	; 0x6505
    3214:	043c00d9 	ldrteq	r0, [ip], #-217	; 0xffffff27
    3218:	03370502 	teqeq	r7, #8388608	; 0x800000
    321c:	05010395 	streq	r0, [r1, #-917]	; 0xfffffc6b
    3220:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3224:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    3228:	9103060d 	tstls	r3, sp, lsl #12
    322c:	1a05017c 	bne	143824 <__RAM_SIZE+0x43824>
    3230:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3234:	10052306 	andne	r2, r5, r6, lsl #6
    3238:	01050106 	tsteq	r5, r6, lsl #2
    323c:	052e6703 	streq	r6, [lr, #-1795]!	; 0xfffff8fd
    3240:	1d030611 	stcne	6, cr0, [r3, #-68]	; 0xffffffbc
    3244:	061f0520 	ldreq	r0, [pc], -r0, lsr #10
    3248:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    324c:	06140531 			; <UNDEFINED> instruction: 0x06140531
    3250:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3254:	05020424 	streq	r0, [r2, #-1060]	; 0xfffffbdc
    3258:	03dc0337 	bicseq	r0, ip, #-603979776	; 0xdc000000
    325c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3260:	30060105 	andcc	r0, r6, r5, lsl #2
    3264:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    3268:	7cb3032a 	ldcvc	3, cr0, [r3], #168	; 0xa8
    326c:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    3270:	06150523 	ldreq	r0, [r5], -r3, lsr #10
    3274:	6b030601 	blvs	c4a80 <SYSTICK_CYCLES+0x9ba41>
    3278:	1619052e 	ldrne	r0, [r9], -lr, lsr #10
    327c:	01062a05 	tsteq	r6, r5, lsl #20
    3280:	052e1e05 	streq	r1, [lr, #-3589]!	; 0xfffff1fb
    3284:	052f0619 	streq	r0, [pc, #-1561]!	; 2c73 <_Min_Stack_Size+0x1c73>
    3288:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    328c:	05310619 	ldreq	r0, [r1, #-1561]!	; 0xfffff9e7
    3290:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    3294:	2b052e1c 	blcs	14eb0c <__RAM_SIZE+0x4eb0c>
    3298:	19052040 	stmdbne	r5, {r6, sp}
    329c:	20100306 	andscs	r0, r0, r6, lsl #6
    32a0:	01062305 	tsteq	r6, r5, lsl #6
    32a4:	1c061b05 			; <UNDEFINED> instruction: 0x1c061b05
    32a8:	01061c05 	tsteq	r6, r5, lsl #24
    32ac:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    32b0:	0b030615 	bleq	c4b0c <SYSTICK_CYCLES+0x9bacd>
    32b4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    32b8:	03be0337 			; <UNDEFINED> instruction: 0x03be0337
    32bc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    32c0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    32c4:	015c0337 	cmpeq	ip, r7, lsr r3
    32c8:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    32cc:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    32d0:	21030601 	tstcs	r3, r1, lsl #12
    32d4:	01062201 	tsteq	r6, r1, lsl #4
    32d8:	15050104 	strne	r0, [r5, #-260]	; 0xfffffefc
    32dc:	7cba0306 	ldcvc	3, cr0, [sl], #24
    32e0:	06240501 	strteq	r0, [r4], -r1, lsl #10
    32e4:	20180501 	andscs	r0, r8, r1, lsl #10
    32e8:	06050520 	streq	r0, [r5], -r0, lsr #10
    32ec:	042e1d03 	strteq	r1, [lr], #-3331	; 0xfffff2fd
    32f0:	03370502 	teqeq	r7, #8388608	; 0x800000
    32f4:	05010395 	streq	r0, [r1, #-917]	; 0xfffffc6b
    32f8:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    32fc:	01050104 	tsteq	r5, r4, lsl #2
    3300:	017ce703 	cmneq	ip, r3, lsl #14
    3304:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    3308:	05206803 	streq	r6, [r0, #-2051]!	; 0xfffff7fd
    330c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    3310:	1d05201c 	stcne	0, cr2, [r5, #-112]	; 0xffffff90
    3314:	2e053206 	cdpcs	2, 0, cr3, cr5, cr6, {0}
    3318:	20050106 	andcs	r0, r5, r6, lsl #2
    331c:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    3320:	06250532 			; <UNDEFINED> instruction: 0x06250532
    3324:	20240501 	eorcs	r0, r4, r1, lsl #10
    3328:	40062505 	andmi	r2, r6, r5, lsl #10
    332c:	01064f05 	tsteq	r6, r5, lsl #30
    3330:	01000602 	tsteq	r0, r2, lsl #12
    3334:	00014501 	andeq	r4, r1, r1, lsl #10
    3338:	d8000300 	stmdale	r0, {r8, r9}
    333c:	02000000 	andeq	r0, r0, #0
    3340:	0d0efb01 	vstreq	d15, [lr, #-4]
    3344:	01010100 	mrseq	r0, (UNDEF: 17)
    3348:	00000001 	andeq	r0, r0, r1
    334c:	01000001 	tsteq	r0, r1
    3350:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3354:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3358:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    335c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3360:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3364:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3368:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 32b4 <_Min_Stack_Size+0x22b4>
    336c:	2f6e6f6d 	svccs	0x006e6f6d
    3370:	00637273 	rsbeq	r7, r3, r3, ror r2
    3374:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3378:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    337c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3380:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3384:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3388:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    338c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    3390:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    3394:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3398:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    339c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    33a0:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    33a4:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    33a8:	2f2e2e2f 	svccs	0x002e2e2f
    33ac:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 32fc <_Min_Stack_Size+0x22fc>
    33b0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    33b4:	742f736f 	strtvc	r7, [pc], #-879	; 33bc <_Min_Stack_Size+0x23bc>
    33b8:	61657268 	cmnvs	r5, r8, ror #4
    33bc:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    33c0:	6f6d6d6f 	svcvs	0x006d6d6f
    33c4:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    33c8:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    33cc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    33d0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    33d4:	6174735f 	cmnvs	r4, pc, asr r3
    33d8:	655f6b63 	ldrbvs	r6, [pc, #-2915]	; 287d <_Min_Stack_Size+0x187d>
    33dc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    33e0:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    33e4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    33e8:	0100632e 	tsteq	r0, lr, lsr #6
    33ec:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    33f0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    33f4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    33f8:	74000002 	strvc	r0, [r0], #-2
    33fc:	70615f78 	rsbvc	r5, r1, r8, ror pc
    3400:	00682e69 	rsbeq	r2, r8, r9, ror #28
    3404:	74000003 	strvc	r0, [r0], #-3
    3408:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    340c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3410:	0300682e 	movweq	r6, #2094	; 0x82e
    3414:	05000000 	streq	r0, [r0, #-0]
    3418:	02050001 	andeq	r0, r5, #1
    341c:	1000204c 	andne	r2, r0, ip, asr #32
    3420:	0100d403 	tsteq	r0, r3, lsl #8
    3424:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    3428:	04170505 	ldreq	r0, [r7], #-1285	; 0xfffffafb
    342c:	03370502 	teqeq	r7, #8388608	; 0x800000
    3430:	050103f6 	streq	r0, [r1, #-1014]	; 0xfffffc0a
    3434:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3438:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    343c:	0105015c 	tsteq	r5, ip, asr r1
    3440:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3444:	06010630 			; <UNDEFINED> instruction: 0x06010630
    3448:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    344c:	01040106 	tsteq	r4, r6, lsl #2
    3450:	7c820306 	stcvc	3, cr0, [r2], {6}
    3454:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    3458:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    345c:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    3460:	04240505 	strteq	r0, [r4], #-1285	; 0xfffffafb
    3464:	03370502 	teqeq	r7, #8388608	; 0x800000
    3468:	050103e2 	streq	r0, [r1, #-994]	; 0xfffffc1e
    346c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3470:	01050104 	tsteq	r5, r4, lsl #2
    3474:	017ca803 	cmneq	ip, r3, lsl #16
    3478:	00030220 	andeq	r0, r3, r0, lsr #4
    347c:	02af0101 	adceq	r0, pc, #1073741824	; 0x40000000
    3480:	00030000 	andeq	r0, r3, r0
    3484:	000000d9 	ldrdeq	r0, [r0], -r9
    3488:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    348c:	0101000d 	tsteq	r1, sp
    3490:	00000101 	andeq	r0, r0, r1, lsl #2
    3494:	00000100 	andeq	r0, r0, r0, lsl #2
    3498:	2f2e2e01 	svccs	0x002e2e01
    349c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    34a0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    34a4:	6f747262 	svcvs	0x00747262
    34a8:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    34ac:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    34b0:	6f632f78 	svcvs	0x00632f78
    34b4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    34b8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    34bc:	2f2e2e00 	svccs	0x002e2e00
    34c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    34c4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    34c8:	6f747262 	svcvs	0x00747262
    34cc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    34d0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    34d4:	6f702f78 	svcvs	0x00702f78
    34d8:	2f737472 	svccs	0x00737472
    34dc:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    34e0:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 3354 <_Min_Stack_Size+0x2354>
    34e4:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    34e8:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    34ec:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    34f0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    34f4:	2f2e2e2f 	svccs	0x002e2e2f
    34f8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    34fc:	2f736f74 	svccs	0x00736f74
    3500:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3504:	2f786461 	svccs	0x00786461
    3508:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    350c:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    3510:	0000636e 	andeq	r6, r0, lr, ror #6
    3514:	745f7874 	ldrbvc	r7, [pc], #-2164	; 351c <_Min_Stack_Size+0x251c>
    3518:	61657268 	cmnvs	r5, r8, ror #4
    351c:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    3520:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    3524:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    3528:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    352c:	6568635f 	strbvs	r6, [r8, #-863]!	; 0xfffffca1
    3530:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
    3534:	00000100 	andeq	r0, r0, r0, lsl #2
    3538:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    353c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    3540:	00020068 	andeq	r0, r2, r8, rrx
    3544:	5f787400 	svcpl	0x00787400
    3548:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    354c:	00030068 	andeq	r0, r3, r8, rrx
    3550:	5f787400 	svcpl	0x00787400
    3554:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3558:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    355c:	00000300 	andeq	r0, r0, r0, lsl #6
    3560:	00010500 	andeq	r0, r1, r0, lsl #10
    3564:	20680205 	rsbcs	r0, r8, r5, lsl #4
    3568:	c8031000 	stmdagt	r3, {ip}
    356c:	13140100 	tstne	r4, #0, 2
    3570:	16050513 			; <UNDEFINED> instruction: 0x16050513
    3574:	06080531 			; <UNDEFINED> instruction: 0x06080531
    3578:	03010501 	movweq	r0, #5377	; 0x1501
    357c:	09052e75 	stmdbeq	r5, {r0, r2, r4, r5, r6, r9, sl, fp, sp}
    3580:	20110306 	andscs	r0, r1, r6, lsl #6
    3584:	23062006 	movwcs	r2, #24582	; 0x6006
    3588:	01061405 	tsteq	r6, r5, lsl #8
    358c:	31060905 	tstcc	r6, r5, lsl #18
    3590:	01060c05 	tsteq	r6, r5, lsl #24
    3594:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    3598:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    359c:	03ec0337 	mvneq	r0, #-603979776	; 0xdc000000
    35a0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    35a4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    35a8:	015c0337 	cmpeq	ip, r7, lsr r3
    35ac:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    35b0:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    35b4:	21030601 	tstcs	r3, r1, lsl #12
    35b8:	01062201 	tsteq	r6, r1, lsl #4
    35bc:	0d050104 	stfeqs	f0, [r5, #-16]
    35c0:	7c890306 	stcvc	3, cr0, [r9], {6}
    35c4:	04020001 	streq	r0, [r2], #-1
    35c8:	00200601 	eoreq	r0, r0, r1, lsl #12
    35cc:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    35d0:	0502044a 	streq	r0, [r2, #-1098]	; 0xfffffbb6
    35d4:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    35d8:	03e30311 	mvneq	r0, #1140850688	; 0x44000000
    35dc:	00050501 	andeq	r0, r5, r1, lsl #10
    35e0:	17110402 	ldrne	r0, [r1, -r2, lsl #8]
    35e4:	11040200 	mrsne	r0, R12_usr
    35e8:	01042e06 	tsteq	r4, r6, lsl #28
    35ec:	02000d05 	andeq	r0, r0, #320	; 0x140
    35f0:	03061104 	movweq	r1, #24836	; 0x6104
    35f4:	05017c9f 	streq	r7, [r1, #-3231]	; 0xfffff361
    35f8:	04020010 	streq	r0, [r2], #-16
    35fc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3600:	0a030611 	beq	c4e4c <SYSTICK_CYCLES+0x9be0d>
    3604:	063d052e 	ldrteq	r0, [sp], -lr, lsr #10
    3608:	0d052e01 	stceq	14, cr2, [r5, #-4]
    360c:	02043306 	andeq	r3, r4, #402653184	; 0x18000000
    3610:	e4033705 	str	r3, [r3], #-1797	; 0xfffff8fb
    3614:	01050103 	tsteq	r5, r3, lsl #2
    3618:	15050514 	strne	r0, [r5, #-1300]	; 0xfffffaec
    361c:	01062605 	tsteq	r6, r5, lsl #12
    3620:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    3624:	94033705 	strls	r3, [r3], #-1797	; 0xfffff8fb
    3628:	0105017f 	tsteq	r5, pc, ror r1
    362c:	13050514 	movwne	r0, #21780	; 0x5514
    3630:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    3634:	00e80308 	rsceq	r0, r8, r8, lsl #6
    3638:	06090501 	streq	r0, [r9], -r1, lsl #10
    363c:	03370522 	teqeq	r7, #142606336	; 0x8800000
    3640:	0105014a 	tsteq	r5, sl, asr #2
    3644:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3648:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    364c:	32030609 	andcc	r0, r3, #9437184	; 0x900000
    3650:	03370501 	teqeq	r7, #4194304	; 0x400000
    3654:	05050157 	streq	r0, [r5, #-343]	; 0xfffffea9
    3658:	03090514 	movweq	r0, #38164	; 0x9514
    365c:	37052029 	strcc	r2, [r5, -r9, lsr #32]
    3660:	05015b03 	streq	r5, [r1, #-2819]	; 0xfffff4fd
    3664:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3668:	01050104 	tsteq	r5, r4, lsl #2
    366c:	017cb103 	cmneq	ip, r3, lsl #2
    3670:	02000d05 	andeq	r0, r0, #320	; 0x140
    3674:	03060304 	movweq	r0, #25348	; 0x6304
    3678:	02002067 	andeq	r2, r0, #103	; 0x67
    367c:	00580504 	subseq	r0, r8, r4, lsl #10
    3680:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    3684:	09040200 	stmdbeq	r4, {r9}
    3688:	66065806 	strvs	r5, [r6], -r6, lsl #16
    368c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3690:	0103e303 	tsteq	r3, r3, lsl #6
    3694:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3698:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    369c:	9803060d 	stmdals	r3, {r0, r2, r3, r9, sl}
    36a0:	043c017c 	ldrteq	r0, [ip], #-380	; 0xfffffe84
    36a4:	03370502 	teqeq	r7, #8388608	; 0x800000
    36a8:	050103ec 	streq	r0, [r1, #-1004]	; 0xfffffc14
    36ac:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    36b0:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    36b4:	0105015c 	tsteq	r5, ip, asr r1
    36b8:	16050514 			; <UNDEFINED> instruction: 0x16050514
    36bc:	06010630 			; <UNDEFINED> instruction: 0x06010630
    36c0:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    36c4:	01040106 	tsteq	r4, r6, lsl #2
    36c8:	02000d05 	andeq	r0, r0, #320	; 0x140
    36cc:	03060e04 	movweq	r0, #28164	; 0x6e04
    36d0:	74017c89 	strvc	r7, [r1], #-3209	; 0xfffff377
    36d4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    36d8:	0103e303 	tsteq	r3, r3, lsl #6
    36dc:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    36e0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    36e4:	9803060d 	stmdals	r3, {r0, r2, r3, r9, sl}
    36e8:	043c017c 	ldrteq	r0, [ip], #-380	; 0xfffffe84
    36ec:	03370502 	teqeq	r7, #8388608	; 0x800000
    36f0:	050103ec 	streq	r0, [r1, #-1004]	; 0xfffffc14
    36f4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    36f8:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    36fc:	0105015c 	tsteq	r5, ip, asr r1
    3700:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3704:	06010630 			; <UNDEFINED> instruction: 0x06010630
    3708:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    370c:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    3710:	000d0501 	andeq	r0, sp, r1, lsl #10
    3714:	030b0402 	movweq	r0, #46082	; 0xb402
    3718:	00017c89 	andeq	r7, r1, r9, lsl #25
    371c:	580b0402 	stmdapl	fp, {r1, sl}
    3720:	03061105 	movweq	r1, #24837	; 0x6105
    3724:	3905010b 	stmdbcc	r5, {r0, r1, r3, r8}
    3728:	3c2e0106 	stfccs	f0, [lr], #-24	; 0xffffffe8
    372c:	01000e02 	tsteq	r0, r2, lsl #28
    3730:	0007d801 	andeq	sp, r7, r1, lsl #16
    3734:	e0000300 	and	r0, r0, r0, lsl #6
    3738:	02000000 	andeq	r0, r0, #0
    373c:	0d0efb01 	vstreq	d15, [lr, #-4]
    3740:	01010100 	mrseq	r0, (UNDEF: 17)
    3744:	00000001 	andeq	r0, r0, r1
    3748:	01000001 	tsteq	r0, r1
    374c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3750:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3754:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3758:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    375c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3760:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3764:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 36b0 <_Min_Stack_Size+0x26b0>
    3768:	2f6e6f6d 	svccs	0x006e6f6d
    376c:	00637273 	rsbeq	r7, r3, r3, ror r2
    3770:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3774:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3778:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    377c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3780:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3784:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3788:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    378c:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    3790:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3794:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    3798:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    379c:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    37a0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    37a4:	2f2e2e2f 	svccs	0x002e2e2f
    37a8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 36f8 <_Min_Stack_Size+0x26f8>
    37ac:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    37b0:	742f736f 	strtvc	r7, [pc], #-879	; 37b8 <_Min_Stack_Size+0x27b8>
    37b4:	61657268 	cmnvs	r5, r8, ror #4
    37b8:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    37bc:	6f6d6d6f 	svcvs	0x006d6d6f
    37c0:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    37c4:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    37c8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    37cc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    37d0:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    37d4:	5f6d6574 	svcpl	0x006d6574
    37d8:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    37dc:	632e656d 			; <UNDEFINED> instruction: 0x632e656d
    37e0:	00000100 	andeq	r0, r0, r0, lsl #2
    37e4:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    37e8:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    37ec:	00020068 	andeq	r0, r2, r8, rrx
    37f0:	5f787400 	svcpl	0x00787400
    37f4:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    37f8:	00030068 	andeq	r0, r3, r8, rrx
    37fc:	5f787400 	svcpl	0x00787400
    3800:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3804:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    3808:	00000300 	andeq	r0, r0, r0, lsl #6
    380c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3814 <_Min_Stack_Size+0x2814>
    3810:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    3814:	0300682e 	movweq	r6, #2094	; 0x82e
    3818:	05000000 	streq	r0, [r0, #-0]
    381c:	02050001 	andeq	r0, r5, #1
    3820:	10002140 	andne	r2, r0, r0, asr #2
    3824:	0104ee03 	tsteq	r4, r3, lsl #28
    3828:	30060106 	andcc	r0, r6, r6, lsl #2
    382c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    3830:	05051313 	streq	r1, [r5, #-787]	; 0xfffffced
    3834:	05012603 	streq	r2, [r1, #-1539]	; 0xfffff9fd
    3838:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    383c:	09052008 	stmdbeq	r5, {r3, sp}
    3840:	20062406 	andcs	r2, r6, r6, lsl #8
    3844:	35060505 	strcc	r0, [r6, #-1285]	; 0xfffffafb
    3848:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    384c:	7faa0337 	svcvc	0x00aa0337
    3850:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3854:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3858:	015c0337 	cmpeq	ip, r7, lsr r3
    385c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3860:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3864:	21030601 	tstcs	r3, r1, lsl #12
    3868:	01062201 	tsteq	r6, r1, lsl #4
    386c:	03060104 	movweq	r0, #24836	; 0x6104
    3870:	000100cb 	andeq	r0, r1, fp, asr #1
    3874:	06010402 	streq	r0, [r1], -r2, lsl #8
    3878:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    387c:	044a0611 	strbeq	r0, [sl], #-1553	; 0xfffff9ef
    3880:	00370502 	eorseq	r0, r7, r2, lsl #10
    3884:	03110402 	tsteq	r1, #33554432	; 0x2000000
    3888:	05017fa1 	streq	r7, [r1, #-4001]	; 0xfffff05f
    388c:	04020005 	streq	r0, [r2], #-5
    3890:	02001711 	andeq	r1, r0, #4456448	; 0x440000
    3894:	2e061104 	adfcss	f1, f6, f4
    3898:	02000104 	andeq	r0, r0, #4, 2
    389c:	03061104 	movweq	r1, #24836	; 0x6104
    38a0:	050100df 	streq	r0, [r1, #-223]	; 0xffffff21
    38a4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    38a8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    38ac:	04020008 	streq	r0, [r2], #-8
    38b0:	09052011 	stmdbeq	r5, {r0, r4, sp}
    38b4:	18054006 	stmdane	r5, {r1, r2, lr}
    38b8:	0c050106 	stfeqs	f0, [r5], {6}
    38bc:	060d0520 	streq	r0, [sp], -r0, lsr #10
    38c0:	062b0544 	strteq	r0, [fp], -r4, asr #10
    38c4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    38c8:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    38cc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    38d0:	0525060d 	streq	r0, [r5, #-1549]!	; 0xfffff9f3
    38d4:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    38d8:	054d060d 	strbeq	r0, [sp, #-1549]	; 0xfffff9f3
    38dc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    38e0:	0d052e3d 	stceq	14, cr2, [r5, #-244]	; 0xffffff0c
    38e4:	16054106 	strne	r4, [r5], -r6, lsl #2
    38e8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    38ec:	10053d06 	andne	r3, r5, r6, lsl #26
    38f0:	11050106 	tstne	r5, r6, lsl #2
    38f4:	01bb0306 			; <UNDEFINED> instruction: 0x01bb0306
    38f8:	061a0520 	ldreq	r0, [sl], -r0, lsr #10
    38fc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3900:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
    3904:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3908:	06360521 	ldrteq	r0, [r6], -r1, lsr #10
    390c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3910:	06380521 	ldrteq	r0, [r8], -r1, lsr #10
    3914:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3918:	06340521 	ldrteq	r0, [r4], -r1, lsr #10
    391c:	00050501 	andeq	r0, r5, r1, lsl #10
    3920:	06030402 	streq	r0, [r3], -r2, lsl #8
    3924:	2e7e9903 	vaddcs.f16	s19, s28, s6	; <UNPREDICTABLE>
    3928:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    392c:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    3930:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    3934:	58060904 	stmdapl	r6, {r2, r8, fp}
    3938:	02046606 	andeq	r6, r4, #6291456	; 0x600000
    393c:	a1033705 	tstge	r3, r5, lsl #14
    3940:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
    3944:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    3948:	da030601 	ble	c5154 <SYSTICK_CYCLES+0x9c115>
    394c:	043c0100 	ldrteq	r0, [ip], #-256	; 0xffffff00
    3950:	03370502 	teqeq	r7, #8388608	; 0x800000
    3954:	05017faa 	streq	r7, [r1, #-4010]	; 0xfffff056
    3958:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    395c:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    3960:	0105015c 	tsteq	r5, ip, asr r1
    3964:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3968:	06010630 			; <UNDEFINED> instruction: 0x06010630
    396c:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    3970:	01040106 	tsteq	r4, r6, lsl #2
    3974:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    3978:	00cb0306 	sbceq	r0, fp, r6, lsl #6
    397c:	02047401 	andeq	r7, r4, #16777216	; 0x1000000
    3980:	a1033705 	tstge	r3, r5, lsl #14
    3984:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
    3988:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    398c:	da030601 	ble	c5198 <SYSTICK_CYCLES+0x9c159>
    3990:	043c0100 	ldrteq	r0, [ip], #-256	; 0xffffff00
    3994:	03370502 	teqeq	r7, #8388608	; 0x800000
    3998:	05017faa 	streq	r7, [r1, #-4010]	; 0xfffff056
    399c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    39a0:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    39a4:	0105015c 	tsteq	r5, ip, asr r1
    39a8:	16050514 			; <UNDEFINED> instruction: 0x16050514
    39ac:	06010630 			; <UNDEFINED> instruction: 0x06010630
    39b0:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    39b4:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    39b8:	04020001 	streq	r0, [r2], #-1
    39bc:	00cb030b 	sbceq	r0, fp, fp, lsl #6
    39c0:	04020001 	streq	r0, [r2], #-1
    39c4:	1105580b 	tstne	r5, fp, lsl #16
    39c8:	012c0306 			; <UNDEFINED> instruction: 0x012c0306
    39cc:	01063405 	tsteq	r6, r5, lsl #8
    39d0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    39d4:	0634052f 	ldrteq	r0, [r4], -pc, lsr #10
    39d8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    39dc:	06380521 	ldrteq	r0, [r8], -r1, lsr #10
    39e0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    39e4:	3d200d03 	stccc	13, cr0, [r0, #-12]!
    39e8:	01065005 	tsteq	r6, r5
    39ec:	052e5c05 	streq	r5, [lr, #-3077]!	; 0xfffff3fb
    39f0:	11052035 	tstne	r5, r5, lsr r0
    39f4:	1e052306 	cdpne	3, 0, cr2, cr5, cr6, {0}
    39f8:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    39fc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    3a00:	06310542 	ldrteq	r0, [r1], -r2, asr #10
    3a04:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3a08:	06210532 			; <UNDEFINED> instruction: 0x06210532
    3a0c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3a10:	06180531 			; <UNDEFINED> instruction: 0x06180531
    3a14:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    3a18:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    3a1c:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    3a20:	1d05201c 	stcne	0, cr2, [r5, #-112]	; 0xffffff90
    3a24:	3c1c0306 	ldccc	3, cr0, [ip], {6}
    3a28:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3a2c:	017de003 	cmneq	sp, r3
    3a30:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3a34:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    3a38:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a3c:	029c0321 	addseq	r0, ip, #-2080374784	; 0x84000000
    3a40:	2e200501 	cfsh64cs	mvdx0, mvdx0, #1
    3a44:	32062105 	andcc	r2, r6, #1073741825	; 0x40000001
    3a48:	01065205 	tsteq	r6, r5, lsl #4
    3a4c:	4d062105 	stfmis	f2, [r6, #-20]	; 0xffffffec
    3a50:	01062d05 	tsteq	r6, r5, lsl #26
    3a54:	052e6005 	streq	r6, [lr, #-5]!
    3a58:	1103061d 	tstne	r3, sp, lsl r6
    3a5c:	0659053c 			; <UNDEFINED> instruction: 0x0659053c
    3a60:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    3a64:	06340532 			; <UNDEFINED> instruction: 0x06340532
    3a68:	1d052001 	stcne	0, cr2, [r5, #-4]
    3a6c:	20090306 	andcs	r0, r9, r6, lsl #6
    3a70:	01064305 	tsteq	r6, r5, lsl #6
    3a74:	05582005 	ldrbeq	r2, [r8, #-5]
    3a78:	05320621 	ldreq	r0, [r2, #-1569]!	; 0xfffff9df
    3a7c:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    3a80:	053f0621 	ldreq	r0, [pc, #-1569]!	; 3467 <_Min_Stack_Size+0x2467>
    3a84:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    3a88:	05320625 	ldreq	r0, [r2, #-1573]!	; 0xfffff9db
    3a8c:	0501064f 	streq	r0, [r1, #-1615]	; 0xfffff9b1
    3a90:	05400621 	strbeq	r0, [r0, #-1569]	; 0xfffff9df
    3a94:	05010643 	streq	r0, [r1, #-1603]	; 0xfffff9bd
    3a98:	1d052e6f 	stcne	14, cr2, [r5, #-444]	; 0xfffffe44
    3a9c:	3c1a0306 	ldccc	3, cr0, [sl], {6}
    3aa0:	02040115 	andeq	r0, r4, #1073741829	; 0x40000005
    3aa4:	e7033705 	str	r3, [r3, -r5, lsl #14]
    3aa8:	0105017d 	tsteq	r5, sp, ror r1
    3aac:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3ab0:	5c033705 	stcpl	7, cr3, [r3], {5}
    3ab4:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3ab8:	30160505 	andscc	r0, r6, r5, lsl #10
    3abc:	03060106 	movweq	r0, #24838	; 0x6106
    3ac0:	06220121 	strteq	r0, [r2], -r1, lsr #2
    3ac4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3ac8:	8e03061d 	mcrhi	6, 0, r0, cr3, cr13, {0}
    3acc:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    3ad0:	20060104 	andcs	r0, r6, r4, lsl #2
    3ad4:	11040200 	mrsne	r0, R12_usr
    3ad8:	02044a06 	andeq	r4, r4, #24576	; 0x6000
    3adc:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    3ae0:	de031104 	adfles	f1, f3, f4
    3ae4:	0505017d 	streq	r0, [r5, #-381]	; 0xfffffe83
    3ae8:	11040200 	mrsne	r0, R12_usr
    3aec:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    3af0:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    3af4:	001d0501 	andseq	r0, sp, r1, lsl #10
    3af8:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3afc:	0102a203 	tsteq	r2, r3, lsl #4
    3b00:	11040200 	mrsne	r0, R12_usr
    3b04:	02002006 	andeq	r2, r0, #6
    3b08:	21061104 	tstcs	r6, r4, lsl #2
    3b0c:	02002005 	andeq	r2, r0, #5
    3b10:	01061104 	tsteq	r6, r4, lsl #2
    3b14:	42062105 	andmi	r2, r6, #1073741825	; 0x40000001
    3b18:	01064d05 	tsteq	r6, r5, lsl #26
    3b1c:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    3b20:	05020432 	streq	r0, [r2, #-1074]	; 0xfffffbce
    3b24:	7de50337 	stclvc	3, cr0, [r5, #220]!	; 0xdc
    3b28:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3b2c:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3b30:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    3b34:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    3b38:	7f940337 	svcvc	0x00940337
    3b3c:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3b40:	2f130505 	svccs	0x00130505
    3b44:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3b48:	0100e803 	tsteq	r0, r3, lsl #16
    3b4c:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    3b50:	4a033705 	bmi	d176c <SYSTICK_CYCLES+0xa872d>
    3b54:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3b58:	30160505 	andscc	r0, r6, r5, lsl #10
    3b5c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3b60:	01320306 	teqeq	r2, r6, lsl #6
    3b64:	57033705 	strpl	r3, [r3, -r5, lsl #14]
    3b68:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    3b6c:	29030905 	stmdbcs	r3, {r0, r2, r8, fp}
    3b70:	03370520 	teqeq	r7, #32, 10	; 0x8000000
    3b74:	0505015b 	streq	r0, [r5, #-347]	; 0xfffffea5
    3b78:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    3b7c:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    3b80:	0102b103 	tsteq	r2, r3, lsl #2
    3b84:	f9031905 			; <UNDEFINED> instruction: 0xf9031905
    3b88:	3005207e 	andcc	r2, r5, lr, ror r0
    3b8c:	20200106 	eorcs	r0, r0, r6, lsl #2
    3b90:	03062105 	movweq	r2, #24837	; 0x6105
    3b94:	0204202e 	andeq	r2, r4, #46	; 0x2e
    3b98:	d4033705 	strle	r3, [r3], #-1797	; 0xfffff8fb
    3b9c:	0105017d 	tsteq	r5, sp, ror r1
    3ba0:	13050514 	movwne	r0, #21780	; 0x5514
    3ba4:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    3ba8:	03250501 			; <UNDEFINED> instruction: 0x03250501
    3bac:	050102a8 	streq	r0, [r1, #-680]	; 0xfffffd58
    3bb0:	25053c24 	strcs	r3, [r5, #-3108]	; 0xfffff3dc
    3bb4:	56054006 	strpl	r4, [r5], -r6
    3bb8:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    3bbc:	31054d06 	tstcc	r5, r6, lsl #26
    3bc0:	64050106 	strvs	r0, [r5], #-262	; 0xfffffefa
    3bc4:	001d052e 	andseq	r0, sp, lr, lsr #10
    3bc8:	06030402 	streq	r0, [r3], -r2, lsl #8
    3bcc:	004a3e03 	subeq	r3, sl, r3, lsl #28
    3bd0:	58050402 	stmdapl	r5, {r1, sl}
    3bd4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3bd8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3bdc:	06580609 	ldrbeq	r0, [r8], -r9, lsl #12
    3be0:	05020466 	streq	r0, [r2, #-1126]	; 0xfffffb9a
    3be4:	7dde0337 	ldclvc	3, cr0, [lr, #220]	; 0xdc
    3be8:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3bec:	01042e06 	tsteq	r4, r6, lsl #28
    3bf0:	03061d05 	movweq	r1, #27909	; 0x6d05
    3bf4:	3c01029d 	sfmcc	f0, 4, [r1], {157}	; 0x9d
    3bf8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3bfc:	017de703 	cmneq	sp, r3, lsl #14
    3c00:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3c04:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    3c08:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    3c0c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3c10:	01063016 	tsteq	r6, r6, lsl r0
    3c14:	01210306 			; <UNDEFINED> instruction: 0x01210306
    3c18:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    3c1c:	001d0501 	andseq	r0, sp, r1, lsl #10
    3c20:	060e0402 	streq	r0, [lr], -r2, lsl #8
    3c24:	01028e03 	tsteq	r2, r3, lsl #28
    3c28:	05020474 	streq	r0, [r2, #-1140]	; 0xfffffb8c
    3c2c:	7dde0337 	ldclvc	3, cr0, [lr, #220]	; 0xdc
    3c30:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3c34:	01042e06 	tsteq	r4, r6, lsl #28
    3c38:	03061d05 	movweq	r1, #27909	; 0x6d05
    3c3c:	3c01029d 	sfmcc	f0, 4, [r1], {157}	; 0x9d
    3c40:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3c44:	017de703 	cmneq	sp, r3, lsl #14
    3c48:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3c4c:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    3c50:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    3c54:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3c58:	01063016 	tsteq	r6, r6, lsl r0
    3c5c:	01210306 			; <UNDEFINED> instruction: 0x01210306
    3c60:	20010622 	andcs	r0, r1, r2, lsr #12
    3c64:	1d050104 	stfnes	f0, [r5, #-16]
    3c68:	0b040200 	bleq	104470 <__RAM_SIZE+0x4470>
    3c6c:	01028e03 	tsteq	r2, r3, lsl #28
    3c70:	0b040200 	bleq	104478 <__RAM_SIZE+0x4478>
    3c74:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    3c78:	05012d03 	streq	r2, [r1, #-3331]	; 0xfffff2fd
    3c7c:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    3c80:	052f060d 	streq	r0, [pc, #-1549]!	; 367b <_Min_Stack_Size+0x267b>
    3c84:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    3c88:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    3c8c:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    3c90:	08055857 	stmdaeq	r5, {r0, r1, r2, r4, r6, fp, ip, lr}
    3c94:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3c98:	06320532 			; <UNDEFINED> instruction: 0x06320532
    3c9c:	06090501 	streq	r0, [r9], -r1, lsl #10
    3ca0:	060c053f 			; <UNDEFINED> instruction: 0x060c053f
    3ca4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3ca8:	06370532 			; <UNDEFINED> instruction: 0x06370532
    3cac:	06090501 	streq	r0, [r9], -r1, lsl #10
    3cb0:	062b0540 	strteq	r0, [fp], -r0, asr #10
    3cb4:	2e570501 	cdpcs	5, 5, cr0, cr7, cr1, {0}
    3cb8:	03060505 	movweq	r0, #25861	; 0x6505
    3cbc:	05313c1c 	ldreq	r3, [r1, #-3100]!	; 0xfffff3e4
    3cc0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3cc4:	15340609 	ldrne	r0, [r4, #-1545]!	; 0xfffff9f7
    3cc8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3ccc:	7cfb0337 	ldclvc	3, cr0, [fp], #220	; 0xdc
    3cd0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3cd4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3cd8:	015c0337 	cmpeq	ip, r7, lsr r3
    3cdc:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3ce0:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3ce4:	21030601 	tstcs	r3, r1, lsl #12
    3ce8:	01062201 	tsteq	r6, r1, lsl #4
    3cec:	09050104 	stmdbeq	r5, {r2, r8}
    3cf0:	02fa0306 	rscseq	r0, sl, #402653184	; 0x18000000
    3cf4:	04020001 	streq	r0, [r2], #-1
    3cf8:	00200601 	eoreq	r0, r0, r1, lsl #12
    3cfc:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3d00:	0502044a 	streq	r0, [r2, #-1098]	; 0xfffffbb6
    3d04:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    3d08:	7cf20311 	ldclvc	3, cr0, [r2], #68	; 0x44
    3d0c:	00050501 	andeq	r0, r5, r1, lsl #10
    3d10:	17110402 	ldrne	r0, [r1, -r2, lsl #8]
    3d14:	11040200 	mrsne	r0, R12_usr
    3d18:	01042e06 	tsteq	r4, r6, lsl #28
    3d1c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3d20:	03061104 	movweq	r1, #24836	; 0x6104
    3d24:	0001038e 	andeq	r0, r1, lr, lsl #7
    3d28:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3d2c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3d30:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    3d34:	0402000c 	streq	r0, [r2], #-12
    3d38:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3d3c:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    3d40:	2e010639 	mcrcs	6, 0, r0, cr1, cr9, {1}
    3d44:	32060d05 	andcc	r0, r6, #320	; 0x140
    3d48:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3d4c:	017cf903 	cmneq	ip, r3, lsl #18	; <UNPREDICTABLE>
    3d50:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3d54:	26051505 	strcs	r1, [r5], -r5, lsl #10
    3d58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3d5c:	37056706 	strcc	r6, [r5, -r6, lsl #14]
    3d60:	017f9403 	cmneq	pc, r3, lsl #8
    3d64:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3d68:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    3d6c:	03080501 	movweq	r0, #34049	; 0x8501
    3d70:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    3d74:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    3d78:	014a0337 	cmpeq	sl, r7, lsr r3
    3d7c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3d80:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3d84:	06090501 	streq	r0, [r9], -r1, lsl #10
    3d88:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
    3d8c:	01570337 	cmpeq	r7, r7, lsr r3
    3d90:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3d94:	20290309 	eorcs	r0, r9, r9, lsl #6
    3d98:	5b033705 	blpl	d19b4 <SYSTICK_CYCLES+0xa8975>
    3d9c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3da0:	01042e06 	tsteq	r4, r6, lsl #28
    3da4:	9c030105 	stflss	f0, [r3], {5}
    3da8:	09050103 	stmdbeq	r5, {r0, r1, r8}
    3dac:	03040200 	movweq	r0, #16896	; 0x4200
    3db0:	086d0306 	stmdaeq	sp!, {r1, r2, r8, r9}^
    3db4:	040200c8 	streq	r0, [r2], #-200	; 0xffffff38
    3db8:	02005805 	andeq	r5, r0, #327680	; 0x50000
    3dbc:	002e0704 	eoreq	r0, lr, r4, lsl #14
    3dc0:	06090402 	streq	r0, [r9], -r2, lsl #8
    3dc4:	04660658 	strbteq	r0, [r6], #-1624	; 0xfffff9a8
    3dc8:	03370502 	teqeq	r7, #8388608	; 0x800000
    3dcc:	05017cf2 	streq	r7, [r1, #-3314]	; 0xfffff30e
    3dd0:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3dd4:	09050104 	stmdbeq	r5, {r2, r8}
    3dd8:	03890306 	orreq	r0, r9, #402653184	; 0x18000000
    3ddc:	02043c01 	andeq	r3, r4, #256	; 0x100
    3de0:	fb033705 	blx	d19fe <SYSTICK_CYCLES+0xa89bf>
    3de4:	0105017c 	tsteq	r5, ip, ror r1
    3de8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3dec:	5c033705 	stcpl	7, cr3, [r3], {5}
    3df0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3df4:	30160505 	andscc	r0, r6, r5, lsl #10
    3df8:	03060106 	movweq	r0, #24838	; 0x6106
    3dfc:	06220121 	strteq	r0, [r2], -r1, lsr #2
    3e00:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3e04:	04020009 	streq	r0, [r2], #-9
    3e08:	fa03060e 	blx	c5648 <SYSTICK_CYCLES+0x9c609>
    3e0c:	04740102 	ldrbteq	r0, [r4], #-258	; 0xfffffefe
    3e10:	03370502 	teqeq	r7, #8388608	; 0x800000
    3e14:	05017cf2 	streq	r7, [r1, #-3314]	; 0xfffff30e
    3e18:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3e1c:	09050104 	stmdbeq	r5, {r2, r8}
    3e20:	03890306 	orreq	r0, r9, #402653184	; 0x18000000
    3e24:	02043c01 	andeq	r3, r4, #256	; 0x100
    3e28:	fb033705 	blx	d1a46 <SYSTICK_CYCLES+0xa8a07>
    3e2c:	0105017c 	tsteq	r5, ip, ror r1
    3e30:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3e34:	5c033705 	stcpl	7, cr3, [r3], {5}
    3e38:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3e3c:	30160505 	andscc	r0, r6, r5, lsl #10
    3e40:	03060106 	movweq	r0, #24838	; 0x6106
    3e44:	06220121 	strteq	r0, [r2], -r1, lsr #2
    3e48:	01042001 	tsteq	r4, r1
    3e4c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3e50:	fa030b04 	blx	c6a68 <SYSTICK_CYCLES+0x9da29>
    3e54:	05020102 	streq	r0, [r2, #-258]	; 0xfffffefe
    3e58:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3e5c:	02050001 	andeq	r0, r5, #1
    3e60:	00000000 	andeq	r0, r0, r0
    3e64:	01049c03 	tsteq	r4, r3, lsl #24
    3e68:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    3e6c:	16050516 			; <UNDEFINED> instruction: 0x16050516
    3e70:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3e74:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    3e78:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3e7c:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    3e80:	0105015c 	tsteq	r5, ip, asr r1
    3e84:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3e88:	06010630 			; <UNDEFINED> instruction: 0x06010630
    3e8c:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    3e90:	01040106 	tsteq	r4, r6, lsl #2
    3e94:	014d0306 	cmpeq	sp, r6, lsl #6
    3e98:	01061f05 	tsteq	r6, r5, lsl #30
    3e9c:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    3ea0:	01061405 	tsteq	r6, r5, lsl #8
    3ea4:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    3ea8:	0c030609 	stceq	6, cr0, [r3], {9}
    3eac:	060f0520 	streq	r0, [pc], -r0, lsr #10
    3eb0:	06090501 	streq	r0, [r9], -r1, lsl #10
    3eb4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3eb8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3ebc:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    3ec0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3ec4:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    3ec8:	20010634 	andcs	r0, r1, r4, lsr r6
    3ecc:	23061105 	movwcs	r1, #24837	; 0x6105
    3ed0:	01062f05 	tsteq	r6, r5, lsl #30
    3ed4:	03061105 	movweq	r1, #24837	; 0x6105
    3ed8:	3405200b 	strcc	r2, [r5], #-11
    3edc:	11050106 	tstne	r5, r6, lsl #2
    3ee0:	1c054d06 	stcne	13, cr4, [r5], {6}
    3ee4:	41050106 	tstmi	r5, r6, lsl #2
    3ee8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3eec:	054a5103 	strbeq	r5, [sl, #-259]	; 0xfffffefd
    3ef0:	2e360305 	cdpcs	3, 3, cr0, cr6, cr5, {0}
    3ef4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3ef8:	05016103 	streq	r6, [r1, #-259]	; 0xfffffefd
    3efc:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3f00:	01050104 	tsteq	r5, r4, lsl #2
    3f04:	20011b03 	andcs	r1, r1, r3, lsl #22
    3f08:	01000502 	tsteq	r0, r2, lsl #10
    3f0c:	0006b701 	andeq	fp, r6, r1, lsl #14
    3f10:	e1000300 	mrs	r0, LR_irq
    3f14:	02000000 	andeq	r0, r0, #0
    3f18:	0d0efb01 	vstreq	d15, [lr, #-4]
    3f1c:	01010100 	mrseq	r0, (UNDEF: 17)
    3f20:	00000001 	andeq	r0, r0, r1
    3f24:	01000001 	tsteq	r0, r1
    3f28:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3f2c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f30:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3f34:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3f38:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3f3c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3f40:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 3e8c <_Min_Stack_Size+0x2e8c>
    3f44:	2f6e6f6d 	svccs	0x006e6f6d
    3f48:	00637273 	rsbeq	r7, r3, r3, ror r2
    3f4c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3f50:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f54:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3f58:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3f5c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    3f60:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3f64:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    3f68:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    3f6c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3f70:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    3f74:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    3f78:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    3f7c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    3f80:	2f2e2e2f 	svccs	0x002e2e2f
    3f84:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3ed4 <_Min_Stack_Size+0x2ed4>
    3f88:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3f8c:	742f736f 	strtvc	r7, [pc], #-879	; 3f94 <_Min_Stack_Size+0x2f94>
    3f90:	61657268 	cmnvs	r5, r8, ror #4
    3f94:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    3f98:	6f6d6d6f 	svcvs	0x006d6d6f
    3f9c:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    3fa0:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    3fa4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3fa8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3fac:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    3fb0:	5f6d6574 	svcpl	0x006d6574
    3fb4:	70737573 	rsbsvc	r7, r3, r3, ror r5
    3fb8:	2e646e65 	cdpcs	14, 6, cr6, cr4, cr5, {3}
    3fbc:	00010063 	andeq	r0, r1, r3, rrx
    3fc0:	5f787400 	svcpl	0x00787400
    3fc4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3fc8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3fcc:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    3fd0:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    3fd4:	0300682e 	movweq	r6, #2094	; 0x82e
    3fd8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    3fdc:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    3fe0:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    3fe4:	00000300 	andeq	r0, r0, r0, lsl #6
    3fe8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3ff0 <_Min_Stack_Size+0x2ff0>
    3fec:	61657268 	cmnvs	r5, r8, ror #4
    3ff0:	00682e64 	rsbeq	r2, r8, r4, ror #28
    3ff4:	00000003 	andeq	r0, r0, r3
    3ff8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3ffc:	00246402 	eoreq	r6, r4, r2, lsl #8
    4000:	05b20310 	ldreq	r0, [r2, #784]!	; 0x310
    4004:	06010601 	streq	r0, [r1], -r1, lsl #12
    4008:	13131330 	tstne	r3, #48, 6	; 0xc0000000
    400c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4010:	0d030505 	cfstr32eq	mvfx0, [r3, #-20]	; 0xffffffec
    4014:	08053401 	stmdaeq	r5, {r0, sl, ip, sp}
    4018:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    401c:	2e1b0306 	cdpcs	3, 1, cr0, cr11, cr6, {0}
    4020:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4024:	7ee80337 	mcrvc	3, 7, r0, cr8, cr7, {1}
    4028:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    402c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4030:	015c0337 	cmpeq	ip, r7, lsr r3
    4034:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4038:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    403c:	21030601 	tstcs	r3, r1, lsl #12
    4040:	01062201 	tsteq	r6, r1, lsl #4
    4044:	03060104 	movweq	r0, #24836	; 0x6104
    4048:	0001018d 	andeq	r0, r1, sp, lsl #3
    404c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4050:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4054:	044a0611 	strbeq	r0, [sl], #-1553	; 0xfffff9ef
    4058:	00370502 	eorseq	r0, r7, r2, lsl #10
    405c:	03110402 	tsteq	r1, #33554432	; 0x2000000
    4060:	05017edf 	streq	r7, [r1, #-3807]	; 0xfffff121
    4064:	04020005 	streq	r0, [r2], #-5
    4068:	02001711 	andeq	r1, r0, #4456448	; 0x440000
    406c:	2e061104 	adfcss	f1, f6, f4
    4070:	02000104 	andeq	r0, r0, #4, 2
    4074:	03061104 	movweq	r1, #24836	; 0x6104
    4078:	050101a2 	streq	r0, [r1, #-418]	; 0xfffffe5e
    407c:	04020010 	streq	r0, [r2], #-16
    4080:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    4084:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    4088:	05052e11 	streq	r2, [r5, #-3601]	; 0xfffff1ef
    408c:	11040200 	mrsne	r0, R12_usr
    4090:	29053f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    4094:	11040200 	mrsne	r0, R12_usr
    4098:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    409c:	11040200 	mrsne	r0, R12_usr
    40a0:	4a200306 	bmi	804cc0 <__RAM_SIZE+0x704cc0>
    40a4:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    40a8:	01061104 	tsteq	r6, r4, lsl #2
    40ac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    40b0:	23061104 	movwcs	r1, #24836	; 0x6104
    40b4:	02001005 	andeq	r1, r0, #5
    40b8:	01061104 	tsteq	r6, r4, lsl #2
    40bc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    40c0:	24061104 	strcs	r1, [r6], #-260	; 0xfffffefc
    40c4:	02000805 	andeq	r0, r0, #327680	; 0x50000
    40c8:	01061104 	tsteq	r6, r4, lsl #2
    40cc:	42060905 	andmi	r0, r6, #81920	; 0x14000
    40d0:	01061805 	tsteq	r6, r5, lsl #16
    40d4:	23060905 	movwcs	r0, #26885	; 0x6905
    40d8:	01063005 	tsteq	r6, r5
    40dc:	21060905 	tstcs	r6, r5, lsl #18
    40e0:	01063005 	tsteq	r6, r5
    40e4:	23060905 	movwcs	r0, #26885	; 0x6905
    40e8:	01062505 	tsteq	r6, r5, lsl #10
    40ec:	2e0c0520 	cfsh32cs	mvfx0, mvfx12, #16
    40f0:	03060505 	movweq	r0, #25861	; 0x6505
    40f4:	052e01b1 	streq	r0, [lr, #-433]!	; 0xfffffe4f
    40f8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    40fc:	05052e08 	streq	r2, [r5, #-3592]	; 0xfffff1f8
    4100:	01930306 	orrseq	r0, r3, r6, lsl #6
    4104:	062b053c 			; <UNDEFINED> instruction: 0x062b053c
    4108:	58080501 	stmdapl	r8, {r0, r8, sl}
    410c:	32060905 	andcc	r0, r6, #81920	; 0x14000
    4110:	01063205 	tsteq	r6, r5, lsl #4
    4114:	3f060905 	svccc	0x00060905
    4118:	01060c05 	tsteq	r6, r5, lsl #24
    411c:	32060d05 	andcc	r0, r6, #320	; 0x140
    4120:	01063705 	tsteq	r6, r5, lsl #14
    4124:	40060905 	andmi	r0, r6, r5, lsl #18
    4128:	01062b05 	tsteq	r6, r5, lsl #22
    412c:	052e5705 	streq	r5, [lr, #-1797]!	; 0xfffff8fb
    4130:	1d030605 	stcne	6, cr0, [r3, #-20]	; 0xffffffec
    4134:	0608053c 			; <UNDEFINED> instruction: 0x0608053c
    4138:	06090501 	streq	r0, [r9], -r1, lsl #10
    413c:	04011534 	streq	r1, [r1], #-1332	; 0xfffffacc
    4140:	03370502 	teqeq	r7, #8388608	; 0x800000
    4144:	05017bb2 	streq	r7, [r1, #-2994]	; 0xfffff44e
    4148:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    414c:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    4150:	0105015c 	tsteq	r5, ip, asr r1
    4154:	16050514 			; <UNDEFINED> instruction: 0x16050514
    4158:	06010630 			; <UNDEFINED> instruction: 0x06010630
    415c:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    4160:	01040106 	tsteq	r4, r6, lsl #2
    4164:	03060905 	movweq	r0, #26885	; 0x6905
    4168:	000104c3 	andeq	r0, r1, r3, asr #9
    416c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4170:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4174:	04580611 	ldrbeq	r0, [r8], #-1553	; 0xfffff9ef
    4178:	00370502 	eorseq	r0, r7, r2, lsl #10
    417c:	03110402 	tsteq	r1, #33554432	; 0x2000000
    4180:	05017ba9 	streq	r7, [r1, #-2985]	; 0xfffff457
    4184:	04020005 	streq	r0, [r2], #-5
    4188:	02001711 	andeq	r1, r0, #4456448	; 0x440000
    418c:	2e061104 	adfcss	f1, f6, f4
    4190:	09050104 	stmdbeq	r5, {r2, r8}
    4194:	11040200 	mrsne	r0, R12_usr
    4198:	04d70306 	ldrbeq	r0, [r7], #774	; 0x306
    419c:	04020001 	streq	r0, [r2], #-1
    41a0:	00200611 	eoreq	r0, r0, r1, lsl r6
    41a4:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    41a8:	000c0521 	andeq	r0, ip, r1, lsr #10
    41ac:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    41b0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    41b4:	06280526 	strteq	r0, [r8], -r6, lsr #10
    41b8:	10052001 	andne	r2, r5, r1
    41bc:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    41c0:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    41c4:	0501063d 	streq	r0, [r1, #-1597]	; 0xfffff9c3
    41c8:	044f060d 	strbeq	r0, [pc], #-1549	; 41d0 <_Min_Stack_Size+0x31d0>
    41cc:	03370502 	teqeq	r7, #8388608	; 0x800000
    41d0:	05017ba5 	streq	r7, [r1, #-2981]	; 0xfffff45b
    41d4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    41d8:	06260515 			; <UNDEFINED> instruction: 0x06260515
    41dc:	06050501 	streq	r0, [r5], -r1, lsl #10
    41e0:	03370567 	teqeq	r7, #432013312	; 0x19c00000
    41e4:	05017f94 	streq	r7, [r1, #-3988]	; 0xfffff06c
    41e8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    41ec:	01062f13 	tsteq	r6, r3, lsl pc
    41f0:	e8030805 	stmda	r3, {r0, r2, fp}
    41f4:	09050100 	stmdbeq	r5, {r8}
    41f8:	37052206 	strcc	r2, [r5, -r6, lsl #4]
    41fc:	05014a03 	streq	r4, [r1, #-2563]	; 0xfffff5fd
    4200:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4204:	01063016 	tsteq	r6, r6, lsl r0
    4208:	03060905 	movweq	r0, #26885	; 0x6905
    420c:	37050132 	smladxcc	r5, r2, r1, r0
    4210:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
    4214:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    4218:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    421c:	015b0337 	cmpeq	fp, r7, lsr r3
    4220:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4224:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    4228:	04f30301 	ldrbteq	r0, [r3], #769	; 0x301
    422c:	06090501 	streq	r0, [r9], -r1, lsl #10
    4230:	207c9203 	rsbscs	r9, ip, r3, lsl #4
    4234:	01060c05 	tsteq	r6, r5, lsl #24
    4238:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    423c:	01061005 	tsteq	r6, r5
    4240:	03060905 	movweq	r0, #26885	; 0x6905
    4244:	2c053c0c 	stccs	12, cr3, [r5], {12}
    4248:	1e050106 	adfnes	f0, f5, f6
    424c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4250:	053c7803 	ldreq	r7, [ip, #-2051]!	; 0xfffff7fd
    4254:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    4258:	06310611 			; <UNDEFINED> instruction: 0x06310611
    425c:	0005052e 	andeq	r0, r5, lr, lsr #10
    4260:	06030402 	streq	r0, [r3], -r2, lsl #8
    4264:	00200c03 	eoreq	r0, r0, r3, lsl #24
    4268:	58050402 	stmdapl	r5, {r1, sl}
    426c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4270:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4274:	06580609 	ldrbeq	r0, [r8], -r9, lsl #12
    4278:	05020466 	streq	r0, [r2, #-1126]	; 0xfffffb9a
    427c:	7edf0337 	mrcvc	3, 6, r0, cr15, cr7, {1}
    4280:	17050501 	strne	r0, [r5, -r1, lsl #10]
    4284:	01042e06 	tsteq	r4, r6, lsl #28
    4288:	019c0306 	orrseq	r0, ip, r6, lsl #6
    428c:	02043c01 	andeq	r3, r4, #256	; 0x100
    4290:	e8033705 	stmda	r3, {r0, r2, r8, r9, sl, ip, sp}
    4294:	0105017e 	tsteq	r5, lr, ror r1
    4298:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    429c:	5c033705 	stcpl	7, cr3, [r3], {5}
    42a0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    42a4:	30160505 	andscc	r0, r6, r5, lsl #10
    42a8:	03060106 	movweq	r0, #24838	; 0x6106
    42ac:	06220121 	strteq	r0, [r2], -r1, lsr #2
    42b0:	00010401 	andeq	r0, r1, r1, lsl #8
    42b4:	060e0402 	streq	r0, [lr], -r2, lsl #8
    42b8:	01018d03 	tsteq	r1, r3, lsl #26
    42bc:	05020482 	streq	r0, [r2, #-1154]	; 0xfffffb7e
    42c0:	7edf0337 	mrcvc	3, 6, r0, cr15, cr7, {1}
    42c4:	17050501 	strne	r0, [r5, -r1, lsl #10]
    42c8:	01042e06 	tsteq	r4, r6, lsl #28
    42cc:	019c0306 	orrseq	r0, ip, r6, lsl #6
    42d0:	02043c01 	andeq	r3, r4, #256	; 0x100
    42d4:	e8033705 	stmda	r3, {r0, r2, r8, r9, sl, ip, sp}
    42d8:	0105017e 	tsteq	r5, lr, ror r1
    42dc:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    42e0:	5c033705 	stcpl	7, cr3, [r3], {5}
    42e4:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    42e8:	30160505 	andscc	r0, r6, r5, lsl #10
    42ec:	03060106 	movweq	r0, #24838	; 0x6106
    42f0:	06220121 	strteq	r0, [r2], -r1, lsr #2
    42f4:	01042001 	tsteq	r4, r1
    42f8:	0b040200 	bleq	104b00 <__RAM_SIZE+0x4b00>
    42fc:	01018d03 	tsteq	r1, r3, lsl #26
    4300:	0b040200 	bleq	104b08 <__RAM_SIZE+0x4b08>
    4304:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    4308:	0100c103 	tsteq	r0, r3, lsl #2
    430c:	01063005 	tsteq	r6, r5
    4310:	03060905 	movweq	r0, #26885	; 0x6905
    4314:	2c054a26 			; <UNDEFINED> instruction: 0x2c054a26
    4318:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    431c:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    4320:	48052f3c 	stmdami	r5, {r2, r3, r4, r5, r8, r9, sl, fp, sp}
    4324:	54050106 	strpl	r0, [r5], #-262	; 0xfffffefa
    4328:	2e2d052e 	cfsh64cs	mvdx0, mvdx13, #30
    432c:	03060905 	movweq	r0, #26885	; 0x6905
    4330:	15162038 	ldrne	r2, [r6, #-56]	; 0xffffffc8
    4334:	01060c05 	tsteq	r6, r5, lsl #24
    4338:	03060d05 	movweq	r0, #27909	; 0x6d05
    433c:	312e2036 			; <UNDEFINED> instruction: 0x312e2036
    4340:	01062905 	tsteq	r6, r5, lsl #18
    4344:	03060d05 	movweq	r0, #27909	; 0x6d05
    4348:	29053c4c 	stmdbcs	r5, {r2, r3, r6, sl, fp, ip, sp}
    434c:	20200106 	eorcs	r0, r0, r6, lsl #2
    4350:	21060d05 	tstcs	r6, r5, lsl #26
    4354:	01062405 	tsteq	r6, r5, lsl #8
    4358:	03060d05 	movweq	r0, #27909	; 0x6d05
    435c:	052f3c1a 	streq	r3, [pc, #-3098]!	; 374a <_Min_Stack_Size+0x274a>
    4360:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    4364:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    4368:	2e010639 	mcrcs	6, 0, r0, cr1, cr9, {1}
    436c:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    4370:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4374:	017d9b03 	cmneq	sp, r3, lsl #22
    4378:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    437c:	26051505 	strcs	r1, [r5], -r5, lsl #10
    4380:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4384:	37056706 	strcc	r6, [r5, -r6, lsl #14]
    4388:	017f9403 	cmneq	pc, r3, lsl #8
    438c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4390:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    4394:	03080501 	movweq	r0, #34049	; 0x8501
    4398:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    439c:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    43a0:	014a0337 	cmpeq	sl, r7, lsr r3
    43a4:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    43a8:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    43ac:	06090501 	streq	r0, [r9], -r1, lsl #10
    43b0:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
    43b4:	01570337 	cmpeq	r7, r7, lsr r3
    43b8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    43bc:	20290309 	eorcs	r0, r9, r9, lsl #6
    43c0:	5b033705 	blpl	d1fdc <SYSTICK_CYCLES+0xa8f9d>
    43c4:	17050501 	strne	r0, [r5, -r1, lsl #10]
    43c8:	01042e06 	tsteq	r4, r6, lsl #28
    43cc:	03060d05 	movweq	r0, #27909	; 0x6d05
    43d0:	050102fb 	streq	r0, [r1, #-763]	; 0xfffffd05
    43d4:	20130309 	andscs	r0, r3, r9, lsl #6
    43d8:	01063b05 	tsteq	r6, r5, lsl #22
    43dc:	05582005 	ldrbeq	r2, [r8, #-5]
    43e0:	d0030609 	andle	r0, r3, r9, lsl #12
    43e4:	2f052e00 	svccs	0x00052e00
    43e8:	0c050106 	stfeqs	f0, [r5], {6}
    43ec:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    43f0:	06360532 			; <UNDEFINED> instruction: 0x06360532
    43f4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    43f8:	0610053f 			; <UNDEFINED> instruction: 0x0610053f
    43fc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4400:	063b0532 			; <UNDEFINED> instruction: 0x063b0532
    4404:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4408:	062f0540 	strteq	r0, [pc], -r0, asr #10
    440c:	2e5b0501 	cdpcs	5, 5, cr0, cr11, cr1, {0}
    4410:	03060905 	movweq	r0, #26885	; 0x6905
    4414:	052f3c1a 	streq	r3, [pc, #-3098]!	; 3802 <_Min_Stack_Size+0x2802>
    4418:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    441c:	0542060d 	strbeq	r0, [r2, #-1549]	; 0xfffff9f3
    4420:	2e010639 	mcrcs	6, 0, r0, cr1, cr9, {1}
    4424:	32060d05 	andcc	r0, r6, #320	; 0x140
    4428:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    442c:	017c8003 	cmneq	ip, r3
    4430:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4434:	26051505 	strcs	r1, [r5], -r5, lsl #10
    4438:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    443c:	37056706 	strcc	r6, [r5, -r6, lsl #14]
    4440:	017f9403 	cmneq	pc, r3, lsl #8
    4444:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4448:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    444c:	03080501 	movweq	r0, #34049	; 0x8501
    4450:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    4454:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    4458:	014a0337 	cmpeq	sl, r7, lsr r3
    445c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4460:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    4464:	06090501 	streq	r0, [r9], -r1, lsl #10
    4468:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
    446c:	01570337 	cmpeq	r7, r7, lsr r3
    4470:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4474:	20290309 	eorcs	r0, r9, r9, lsl #6
    4478:	5b033705 	blpl	d2094 <SYSTICK_CYCLES+0xa9055>
    447c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    4480:	01042e06 	tsteq	r4, r6, lsl #28
    4484:	03060905 	movweq	r0, #26885	; 0x6905
    4488:	00010496 	muleq	r1, r6, r4
    448c:	03030402 	movweq	r0, #13314	; 0x3402
    4490:	0200203c 	andeq	r2, r0, #60	; 0x3c
    4494:	00580504 	subseq	r0, r8, r4, lsl #10
    4498:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    449c:	09040200 	stmdbeq	r4, {r9}
    44a0:	66065806 	strvs	r5, [r6], -r6, lsl #16
    44a4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    44a8:	017ba903 	cmneq	fp, r3, lsl #18
    44ac:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    44b0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    44b4:	d2030609 	andle	r0, r3, #9437184	; 0x900000
    44b8:	043c0104 	ldrteq	r0, [ip], #-260	; 0xfffffefc
    44bc:	03370502 	teqeq	r7, #8388608	; 0x800000
    44c0:	05017bb2 	streq	r7, [r1, #-2994]	; 0xfffff44e
    44c4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    44c8:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    44cc:	0105015c 	tsteq	r5, ip, asr r1
    44d0:	16050514 			; <UNDEFINED> instruction: 0x16050514
    44d4:	06010630 			; <UNDEFINED> instruction: 0x06010630
    44d8:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    44dc:	01040106 	tsteq	r4, r6, lsl #2
    44e0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    44e4:	03060e04 	movweq	r0, #28164	; 0x6e04
    44e8:	820104c3 	andhi	r0, r1, #-1023410176	; 0xc3000000
    44ec:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    44f0:	017ba903 	cmneq	fp, r3, lsl #18
    44f4:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    44f8:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    44fc:	d2030609 	andle	r0, r3, #9437184	; 0x900000
    4500:	043c0104 	ldrteq	r0, [ip], #-260	; 0xfffffefc
    4504:	03370502 	teqeq	r7, #8388608	; 0x800000
    4508:	05017bb2 	streq	r7, [r1, #-2994]	; 0xfffff44e
    450c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4510:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    4514:	0105015c 	tsteq	r5, ip, asr r1
    4518:	16050514 			; <UNDEFINED> instruction: 0x16050514
    451c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    4520:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    4524:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    4528:	00090501 	andeq	r0, r9, r1, lsl #10
    452c:	030b0402 	movweq	r0, #46082	; 0xb402
    4530:	000104c3 	andeq	r0, r1, r3, asr #9
    4534:	580b0402 	stmdapl	fp, {r1, sl}
    4538:	03061105 	movweq	r1, #24837	; 0x6105
    453c:	39050110 	stmdbcc	r5, {r4, r8}
    4540:	20020106 	andcs	r0, r2, r6, lsl #2
    4544:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4548:	02050001 	andeq	r0, r5, #1
    454c:	00000000 	andeq	r0, r0, r0
    4550:	01058b03 	tsteq	r5, r3, lsl #22
    4554:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    4558:	15050514 	strne	r0, [r5, #-1300]	; 0xfffffaec
    455c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4560:	017fbf03 	cmneq	pc, r3, lsl #30
    4564:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4568:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    456c:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    4570:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4574:	01063016 	tsteq	r6, r6, lsl r0
    4578:	01210306 			; <UNDEFINED> instruction: 0x01210306
    457c:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    4580:	39030601 	stmdbcc	r3, {r0, r9, sl}
    4584:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    4588:	20080501 	andcs	r0, r8, r1, lsl #10
    458c:	03060505 	movweq	r0, #25861	; 0x6505
    4590:	02042e13 	andeq	r2, r4, #304	; 0x130
    4594:	a0033705 	andge	r3, r3, r5, lsl #14
    4598:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
    459c:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    45a0:	de030601 	cfmadd32le	mvax0, mvfx0, mvfx3, mvfx1
    45a4:	01050100 	mrseq	r0, (UNDEF: 21)
    45a8:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    45ac:	206f0306 	rsbcs	r0, pc, r6, lsl #6
    45b0:	01062c05 	tsteq	r6, r5, lsl #24
    45b4:	31060905 	tstcc	r6, r5, lsl #18
    45b8:	06230515 			; <UNDEFINED> instruction: 0x06230515
    45bc:	06090501 	streq	r0, [r9], -r1, lsl #10
    45c0:	023c064d 	eorseq	r0, ip, #80740352	; 0x4d00000
    45c4:	01010003 	tsteq	r1, r3
    45c8:	00000469 	andeq	r0, r0, r9, ror #8
    45cc:	00dd0003 	sbcseq	r0, sp, r3
    45d0:	01020000 	mrseq	r0, (UNDEF: 2)
    45d4:	000d0efb 	strdeq	r0, [sp], -fp
    45d8:	01010101 	tsteq	r1, r1, lsl #2
    45dc:	01000000 	mrseq	r0, (UNDEF: 0)
    45e0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    45e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    45e8:	2f2e2e2f 	svccs	0x002e2e2f
    45ec:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    45f0:	2f736f74 	svccs	0x00736f74
    45f4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    45f8:	2f786461 	svccs	0x00786461
    45fc:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    4600:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    4604:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    4608:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    460c:	2f2e2e2f 	svccs	0x002e2e2f
    4610:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4614:	2f736f74 	svccs	0x00736f74
    4618:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    461c:	2f786461 	svccs	0x00786461
    4620:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4624:	6f632f73 	svcvs	0x00632f73
    4628:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    462c:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    4630:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    4634:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4638:	2f2e2e00 	svccs	0x002e2e00
    463c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4640:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4644:	6f747262 	svcvs	0x00747262
    4648:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    464c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4650:	6f632f78 	svcvs	0x00632f78
    4654:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4658:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    465c:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4660:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    4664:	5f646165 	svcpl	0x00646165
    4668:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    466c:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    4670:	632e6563 			; <UNDEFINED> instruction: 0x632e6563
    4674:	00000100 	andeq	r0, r0, r0, lsl #2
    4678:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    467c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    4680:	00020068 	andeq	r0, r2, r8, rrx
    4684:	5f787400 	svcpl	0x00787400
    4688:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    468c:	00030068 	andeq	r0, r3, r8, rrx
    4690:	5f787400 	svcpl	0x00787400
    4694:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4698:	00682e72 	rsbeq	r2, r8, r2, ror lr
    469c:	74000003 	strvc	r0, [r0], #-3
    46a0:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    46a4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    46a8:	0300682e 	movweq	r6, #2094	; 0x82e
    46ac:	05000000 	streq	r0, [r0, #-0]
    46b0:	02050001 	andeq	r0, r5, #1
    46b4:	10002720 	andne	r2, r0, r0, lsr #14
    46b8:	0100ce03 	tsteq	r0, r3, lsl #28
    46bc:	05141422 	ldreq	r1, [r4, #-1058]	; 0xfffffbde
    46c0:	01331a05 	teqeq	r3, r5, lsl #20
    46c4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    46c8:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
    46cc:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    46d0:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    46d4:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    46d8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    46dc:	01063016 	tsteq	r6, r6, lsl r0
    46e0:	01210306 			; <UNDEFINED> instruction: 0x01210306
    46e4:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    46e8:	85030601 	strhi	r0, [r3, #-1537]	; 0xfffff9ff
    46ec:	0200017c 	andeq	r0, r0, #124, 2
    46f0:	20060104 	andcs	r0, r6, r4, lsl #2
    46f4:	11040200 	mrsne	r0, R12_usr
    46f8:	02044a06 	andeq	r4, r4, #24576	; 0x6000
    46fc:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    4700:	e7031104 	str	r1, [r3, -r4, lsl #2]
    4704:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    4708:	11040200 	mrsne	r0, R12_usr
    470c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4710:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    4714:	04020001 	streq	r0, [r2], #-1
    4718:	97030611 	smladls	r3, r1, r6, r0
    471c:	0200017c 	andeq	r0, r0, #124, 2
    4720:	04161104 	ldreq	r1, [r6], #-260	; 0xfffffefc
    4724:	00370502 	eorseq	r0, r7, r2, lsl #10
    4728:	03110402 	tsteq	r1, #33554432	; 0x2000000
    472c:	050103e9 	streq	r0, [r1, #-1001]	; 0xfffffc17
    4730:	04020001 	streq	r0, [r2], #-1
    4734:	05051411 	streq	r1, [r5, #-1041]	; 0xfffffbef
    4738:	11040200 	mrsne	r0, R12_usr
    473c:	00370514 	eorseq	r0, r7, r4, lsl r5
    4740:	03110402 	tsteq	r1, #33554432	; 0x2000000
    4744:	0105015c 	tsteq	r5, ip, asr r1
    4748:	11040200 	mrsne	r0, R12_usr
    474c:	00050514 	andeq	r0, r5, r4, lsl r5
    4750:	16110402 	ldrne	r0, [r1], -r2, lsl #8
    4754:	11040200 	mrsne	r0, R12_usr
    4758:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    475c:	00010611 	andeq	r0, r1, r1, lsl r6
    4760:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    4764:	00012103 	andeq	r2, r1, r3, lsl #2
    4768:	22110402 	andscs	r0, r1, #33554432	; 0x2000000
    476c:	11040200 	mrsne	r0, R12_usr
    4770:	01040106 	tsteq	r4, r6, lsl #2
    4774:	11040200 	mrsne	r0, R12_usr
    4778:	7c8f0306 	stcvc	3, cr0, [pc], {6}
    477c:	00220501 	eoreq	r0, r2, r1, lsl #10
    4780:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    4784:	04020001 	streq	r0, [r2], #-1
    4788:	05052011 	streq	r2, [r5, #-17]	; 0xffffffef
    478c:	11040200 	mrsne	r0, R12_usr
    4790:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    4794:	11040200 	mrsne	r0, R12_usr
    4798:	09050106 	stmdbeq	r5, {r1, r2, r8}
    479c:	18052406 	stmdane	r5, {r1, r2, sl, sp}
    47a0:	0c050106 	stfeqs	f0, [r5], {6}
    47a4:	06050520 	streq	r0, [r5], -r0, lsr #10
    47a8:	04203c03 	strteq	r3, [r0], #-3075	; 0xfffff3fd
    47ac:	03370502 	teqeq	r7, #8388608	; 0x800000
    47b0:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    47b4:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    47b8:	03060104 	movweq	r0, #24836	; 0x6104
    47bc:	05017ce6 	streq	r7, [r1, #-3302]	; 0xfffff31a
    47c0:	05190601 	ldreq	r0, [r9, #-1537]	; 0xfffff9ff
    47c4:	04020005 	streq	r0, [r2], #-5
    47c8:	a7030603 	strge	r0, [r3, -r3, lsl #12]
    47cc:	0200207f 	andeq	r2, r0, #127	; 0x7f
    47d0:	00580504 	subseq	r0, r8, r4, lsl #10
    47d4:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    47d8:	09040200 	stmdbeq	r4, {r9}
    47dc:	66065806 	strvs	r5, [r6], -r6, lsl #16
    47e0:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    47e4:	0103e703 	tsteq	r3, r3, lsl #14
    47e8:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    47ec:	0601042e 	streq	r0, [r1], -lr, lsr #8
    47f0:	017c9403 	cmneq	ip, r3, lsl #8
    47f4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    47f8:	03f00337 	mvnseq	r0, #-603979776	; 0xdc000000
    47fc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4800:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4804:	015c0337 	cmpeq	ip, r7, lsr r3
    4808:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    480c:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    4810:	21030601 	tstcs	r3, r1, lsl #12
    4814:	01062201 	tsteq	r6, r1, lsl #4
    4818:	02000104 	andeq	r0, r0, #4, 2
    481c:	03060e04 	movweq	r0, #28164	; 0x6e04
    4820:	74017c85 	strvc	r7, [r1], #-3205	; 0xfffff37b
    4824:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4828:	0103e703 	tsteq	r3, r3, lsl #14
    482c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4830:	0601042e 	streq	r0, [r1], -lr, lsr #8
    4834:	017c9403 	cmneq	ip, r3, lsl #8
    4838:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    483c:	03f00337 	mvnseq	r0, #-603979776	; 0xdc000000
    4840:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4844:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4848:	015c0337 	cmpeq	ip, r7, lsr r3
    484c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4850:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    4854:	21030601 	tstcs	r3, r1, lsl #12
    4858:	01062201 	tsteq	r6, r1, lsl #4
    485c:	00010420 	andeq	r0, r1, r0, lsr #8
    4860:	030b0402 	movweq	r0, #46082	; 0xb402
    4864:	00017c85 	andeq	r7, r1, r5, lsl #25
    4868:	580b0402 	stmdapl	fp, {r1, sl}
    486c:	00cd0306 	sbceq	r0, sp, r6, lsl #6
    4870:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4874:	039a0337 	orrseq	r0, sl, #-603979776	; 0xdc000000
    4878:	17050501 	strne	r0, [r5, -r1, lsl #10]
    487c:	01042e06 	tsteq	r4, r6, lsl #28
    4880:	7ce60306 	stclvc	3, cr0, [r6], #24
    4884:	030d0501 	movweq	r0, #54529	; 0xd501
    4888:	3e052043 	cdpcc	0, 0, cr2, cr5, cr3, {2}
    488c:	30050106 	andcc	r0, r5, r6, lsl #2
    4890:	060d0520 	streq	r0, [sp], -r0, lsr #10
    4894:	06220523 	strteq	r0, [r2], -r3, lsr #10
    4898:	060d0501 	streq	r0, [sp], -r1, lsl #10
    489c:	061c0532 			; <UNDEFINED> instruction: 0x061c0532
    48a0:	20100501 	andscs	r0, r0, r1, lsl #10
    48a4:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    48a8:	01062005 	tsteq	r6, r5
    48ac:	05204405 	streq	r4, [r0, #-1029]!	; 0xfffffbfb
    48b0:	05052014 	streq	r2, [r5, #-20]	; 0xffffffec
    48b4:	2e2d0306 	cdpcs	3, 2, cr0, cr13, cr6, {0}
    48b8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    48bc:	01039a03 	tsteq	r3, r3, lsl #20
    48c0:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    48c4:	0601042e 	streq	r0, [r1], -lr, lsr #8
    48c8:	017ce603 	cmneq	ip, r3, lsl #12
    48cc:	0502041b 	streq	r0, [r2, #-1051]	; 0xfffffbe5
    48d0:	039a0337 	orrseq	r0, sl, #-603979776	; 0xdc000000
    48d4:	17050501 	strne	r0, [r5, -r1, lsl #10]
    48d8:	01042e06 	tsteq	r4, r6, lsl #28
    48dc:	7ce60306 	stclvc	3, cr0, [r6], #24
    48e0:	03150501 	tsteq	r5, #4194304	; 0x400000
    48e4:	50052055 	andpl	r2, r5, r5, asr r0
    48e8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    48ec:	47054106 	strmi	r4, [r5, -r6, lsl #2]
    48f0:	2c050106 	stfcss	f0, [r5], {6}
    48f4:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    48f8:	06200533 			; <UNDEFINED> instruction: 0x06200533
    48fc:	2e490501 	cdpcs	5, 4, cr0, cr9, cr1, {0}
    4900:	3f061505 	svccc	0x00061505
    4904:	01063c05 	tsteq	r6, r5, lsl #24
    4908:	51061505 	tstpl	r6, r5, lsl #10
    490c:	12030505 	andne	r0, r3, #20971520	; 0x1400000
    4910:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4914:	039a0337 	orrseq	r0, sl, #-603979776	; 0xdc000000
    4918:	17050501 	strne	r0, [r5, -r1, lsl #10]
    491c:	01042e06 	tsteq	r4, r6, lsl #28
    4920:	7ce60306 	stclvc	3, cr0, [r6], #24
    4924:	06080501 	streq	r0, [r8], -r1, lsl #10
    4928:	06090501 	streq	r0, [r9], -r1, lsl #10
    492c:	02040132 	andeq	r0, r4, #-2147483636	; 0x8000000c
    4930:	9a033705 	bls	d254c <SYSTICK_CYCLES+0xa950d>
    4934:	01050103 	tsteq	r5, r3, lsl #2
    4938:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    493c:	5c033705 	stcpl	7, cr3, [r3], {5}
    4940:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4944:	30160505 	andscc	r0, r6, r5, lsl #10
    4948:	03060106 	movweq	r0, #24838	; 0x6106
    494c:	06220121 	strteq	r0, [r2], -r1, lsr #2
    4950:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4954:	db030609 	blle	c6180 <SYSTICK_CYCLES+0x9d141>
    4958:	2006017c 	andcs	r0, r6, ip, ror r1
    495c:	11040200 	mrsne	r0, R12_usr
    4960:	02043c06 	andeq	r3, r4, #1536	; 0x600
    4964:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    4968:	91031104 	tstls	r3, r4, lsl #2
    496c:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    4970:	11040200 	mrsne	r0, R12_usr
    4974:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4978:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    497c:	00010501 	andeq	r0, r1, r1, lsl #10
    4980:	03110402 	tsteq	r1, #33554432	; 0x2000000
    4984:	05017ced 	streq	r7, [r1, #-3309]	; 0xfffff313
    4988:	04020009 	streq	r0, [r2], #-9
    498c:	001d0603 	andseq	r0, sp, r3, lsl #12
    4990:	58050402 	stmdapl	r5, {r1, sl}
    4994:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4998:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    499c:	06580609 	ldrbeq	r0, [r8], -r9, lsl #12
    49a0:	05020466 	streq	r0, [r2, #-1126]	; 0xfffffb9a
    49a4:	03910337 	orrseq	r0, r1, #-603979776	; 0xdc000000
    49a8:	17050501 	strne	r0, [r5, -r1, lsl #10]
    49ac:	01042e06 	tsteq	r4, r6, lsl #28
    49b0:	03060905 	movweq	r0, #26885	; 0x6905
    49b4:	3c017cea 	stccc	12, cr7, [r1], {234}	; 0xea
    49b8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    49bc:	01039a03 	tsteq	r3, r3, lsl #20
    49c0:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    49c4:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    49c8:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    49cc:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    49d0:	01063016 	tsteq	r6, r6, lsl r0
    49d4:	01210306 			; <UNDEFINED> instruction: 0x01210306
    49d8:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    49dc:	00090501 	andeq	r0, r9, r1, lsl #10
    49e0:	060e0402 	streq	r0, [lr], -r2, lsl #8
    49e4:	017cdb03 	cmneq	ip, r3, lsl #22
    49e8:	05020474 	streq	r0, [r2, #-1140]	; 0xfffffb8c
    49ec:	03910337 	orrseq	r0, r1, #-603979776	; 0xdc000000
    49f0:	17050501 	strne	r0, [r5, -r1, lsl #10]
    49f4:	01042e06 	tsteq	r4, r6, lsl #28
    49f8:	03060905 	movweq	r0, #26885	; 0x6905
    49fc:	3c017cea 	stccc	12, cr7, [r1], {234}	; 0xea
    4a00:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4a04:	01039a03 	tsteq	r3, r3, lsl #20
    4a08:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4a0c:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    4a10:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    4a14:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4a18:	01063016 	tsteq	r6, r6, lsl r0
    4a1c:	01210306 			; <UNDEFINED> instruction: 0x01210306
    4a20:	20010622 	andcs	r0, r1, r2, lsr #12
    4a24:	09050104 	stmdbeq	r5, {r2, r8}
    4a28:	0b040200 	bleq	105230 <__RAM_SIZE+0x5230>
    4a2c:	017cdb03 	cmneq	ip, r3, lsl #22
    4a30:	01001602 	tsteq	r0, r2, lsl #12
    4a34:	00017c01 	andeq	r7, r1, r1, lsl #24
    4a38:	cc000300 	stcgt	3, cr0, [r0], {-0}
    4a3c:	02000000 	andeq	r0, r0, #0
    4a40:	0d0efb01 	vstreq	d15, [lr, #-4]
    4a44:	01010100 	mrseq	r0, (UNDEF: 17)
    4a48:	00000001 	andeq	r0, r0, r1
    4a4c:	01000001 	tsteq	r0, r1
    4a50:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a54:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a58:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4a5c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4a60:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4a64:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4a68:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 49b4 <_Min_Stack_Size+0x39b4>
    4a6c:	2f6e6f6d 	svccs	0x006e6f6d
    4a70:	00637273 	rsbeq	r7, r3, r3, ror r2
    4a74:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a78:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a7c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4a80:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4a84:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4a88:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4a8c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    4a90:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    4a94:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4a98:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    4a9c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    4aa0:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    4aa4:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    4aa8:	2f2e2e2f 	svccs	0x002e2e2f
    4aac:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 49fc <_Min_Stack_Size+0x39fc>
    4ab0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4ab4:	742f736f 	strtvc	r7, [pc], #-879	; 4abc <_Min_Stack_Size+0x3abc>
    4ab8:	61657268 	cmnvs	r5, r8, ror #4
    4abc:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    4ac0:	6f6d6d6f 	svcvs	0x006d6d6f
    4ac4:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    4ac8:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    4acc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ad0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4ad4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    4ad8:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    4adc:	0100632e 	tsteq	r0, lr, lsr #6
    4ae0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4ae4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    4ae8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    4aec:	74000002 	strvc	r0, [r0], #-2
    4af0:	70615f78 	rsbvc	r5, r1, r8, ror pc
    4af4:	00682e69 	rsbeq	r2, r8, r9, ror #28
    4af8:	74000003 	strvc	r0, [r0], #-3
    4afc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4b00:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4b04:	0300682e 	movweq	r6, #2094	; 0x82e
    4b08:	05000000 	streq	r0, [r0, #-0]
    4b0c:	02050001 	andeq	r0, r5, #1
    4b10:	10002898 	mulne	r0, r8, r8
    4b14:	0100ce03 	tsteq	r0, r3, lsl #28
    4b18:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    4b1c:	05131314 	ldreq	r1, [r3, #-788]	; 0xfffffcec
    4b20:	04151605 	ldreq	r1, [r5], #-1541	; 0xfffff9fb
    4b24:	03370502 	teqeq	r7, #8388608	; 0x800000
    4b28:	050103f6 	streq	r0, [r1, #-1014]	; 0xfffffc0a
    4b2c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4b30:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    4b34:	0105015c 	tsteq	r5, ip, asr r1
    4b38:	16050514 			; <UNDEFINED> instruction: 0x16050514
    4b3c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    4b40:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    4b44:	01040106 	tsteq	r4, r6, lsl #2
    4b48:	7c820306 	stcvc	3, cr0, [r2], {6}
    4b4c:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    4b50:	20080501 	andcs	r0, r8, r1, lsl #10
    4b54:	03060905 	movweq	r0, #26885	; 0x6905
    4b58:	2d052e1e 	stccs	14, cr2, [r5, #-120]	; 0xffffff88
    4b5c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4b60:	14054d06 	strne	r4, [r5], #-3334	; 0xfffff2fa
    4b64:	3a050106 	bcc	144f84 <__RAM_SIZE+0x44f84>
    4b68:	0609052e 	streq	r0, [r9], -lr, lsr #10
    4b6c:	06190540 	ldreq	r0, [r9], -r0, asr #10
    4b70:	06090501 	streq	r0, [r9], -r1, lsl #10
    4b74:	03200a03 			; <UNDEFINED> instruction: 0x03200a03
    4b78:	0c05010a 	stfeqs	f0, [r5], {10}
    4b7c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4b80:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    4b84:	05020434 	streq	r0, [r2, #-1076]	; 0xfffffbcc
    4b88:	03a70337 			; <UNDEFINED> instruction: 0x03a70337
    4b8c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    4b90:	01042e06 	tsteq	r4, r6, lsl #28
    4b94:	d7030105 	strle	r0, [r3, -r5, lsl #2]
    4b98:	0905017c 	stmdbeq	r5, {r2, r3, r4, r5, r6, r8}
    4b9c:	20400306 	subcs	r0, r0, r6, lsl #6
    4ba0:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    4ba4:	03e10337 	mvneq	r0, #-603979776	; 0xdc000000
    4ba8:	17050501 	strne	r0, [r5, -r1, lsl #10]
    4bac:	30060105 	andcc	r0, r6, r5, lsl #2
    4bb0:	01000302 	tsteq	r0, r2, lsl #6
    4bb4:	00014301 	andeq	r4, r1, r1, lsl #6
    4bb8:	e4000300 	str	r0, [r0], #-768	; 0xfffffd00
    4bbc:	02000000 	andeq	r0, r0, #0
    4bc0:	0d0efb01 	vstreq	d15, [lr, #-4]
    4bc4:	01010100 	mrseq	r0, (UNDEF: 17)
    4bc8:	00000001 	andeq	r0, r0, r1
    4bcc:	01000001 	tsteq	r0, r1
    4bd0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4bd4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4bd8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4bdc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4be0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4be4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4be8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4b34 <_Min_Stack_Size+0x3b34>
    4bec:	2f6e6f6d 	svccs	0x006e6f6d
    4bf0:	00637273 	rsbeq	r7, r3, r3, ror r2
    4bf4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4bf8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4bfc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4c00:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4c04:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4c08:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4c0c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    4c10:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    4c14:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4c18:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    4c1c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    4c20:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    4c24:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    4c28:	2f2e2e2f 	svccs	0x002e2e2f
    4c2c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4b7c <_Min_Stack_Size+0x3b7c>
    4c30:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4c34:	742f736f 	strtvc	r7, [pc], #-879	; 4c3c <_Min_Stack_Size+0x3c3c>
    4c38:	61657268 	cmnvs	r5, r8, ror #4
    4c3c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    4c40:	6f6d6d6f 	svcvs	0x006d6d6f
    4c44:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    4c48:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    4c4c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c50:	5f72656d 	svcpl	0x0072656d
    4c54:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    4c58:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    4c5c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4c60:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    4c64:	632e7373 			; <UNDEFINED> instruction: 0x632e7373
    4c68:	00000100 	andeq	r0, r0, r0, lsl #2
    4c6c:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    4c70:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    4c74:	00020068 	andeq	r0, r2, r8, rrx
    4c78:	5f787400 	svcpl	0x00787400
    4c7c:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    4c80:	00030068 	andeq	r0, r3, r8, rrx
    4c84:	5f787400 	svcpl	0x00787400
    4c88:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4c8c:	00682e72 	rsbeq	r2, r8, r2, ror lr
    4c90:	74000003 	strvc	r0, [r0], #-3
    4c94:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c98:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4c9c:	0300682e 	movweq	r6, #2094	; 0x82e
    4ca0:	05000000 	streq	r0, [r0, #-0]
    4ca4:	02050001 	andeq	r0, r5, #1
    4ca8:	100028d4 	ldrdne	r2, [r0], -r4
    4cac:	0100d103 	tsteq	r0, r3, lsl #2
    4cb0:	03050522 	movweq	r0, #21794	; 0x5522
    4cb4:	0204011b 	andeq	r0, r4, #-1073741818	; 0xc0000006
    4cb8:	e3033705 	movw	r3, #14085	; 0x3705
    4cbc:	01050103 	tsteq	r5, r3, lsl #2
    4cc0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    4cc4:	5c033705 	stcpl	7, cr3, [r3], {5}
    4cc8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4ccc:	30160505 	andscc	r0, r6, r5, lsl #10
    4cd0:	03060106 	movweq	r0, #24838	; 0x6106
    4cd4:	06220121 	strteq	r0, [r2], -r1, lsr #2
    4cd8:	06010401 	streq	r0, [r1], -r1, lsl #8
    4cdc:	017c9703 	cmneq	ip, r3, lsl #14
    4ce0:	0502043f 	streq	r0, [r2, #-1087]	; 0xfffffbc1
    4ce4:	03d20337 	bicseq	r0, r2, #-603979776	; 0xdc000000
    4ce8:	17050501 	strne	r0, [r5, -r1, lsl #10]
    4cec:	01042e06 	tsteq	r4, r6, lsl #28
    4cf0:	92030105 	andls	r0, r3, #1073741825	; 0x40000001
    4cf4:	0220017f 	eoreq	r0, r0, #-1073741793	; 0xc000001f
    4cf8:	01010002 	tsteq	r1, r2
    4cfc:	0000014e 	andeq	r0, r0, lr, asr #2
    4d00:	00cd0003 	sbceq	r0, sp, r3
    4d04:	01020000 	mrseq	r0, (UNDEF: 2)
    4d08:	000d0efb 	strdeq	r0, [sp], -fp
    4d0c:	01010101 	tsteq	r1, r1, lsl #2
    4d10:	01000000 	mrseq	r0, (UNDEF: 0)
    4d14:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4d18:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4d1c:	2f2e2e2f 	svccs	0x002e2e2f
    4d20:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4d24:	2f736f74 	svccs	0x00736f74
    4d28:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4d2c:	2f786461 	svccs	0x00786461
    4d30:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    4d34:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    4d38:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    4d3c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4d40:	2f2e2e2f 	svccs	0x002e2e2f
    4d44:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4d48:	2f736f74 	svccs	0x00736f74
    4d4c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4d50:	2f786461 	svccs	0x00786461
    4d54:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4d58:	6f632f73 	svcvs	0x00632f73
    4d5c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    4d60:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    4d64:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    4d68:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4d6c:	2f2e2e00 	svccs	0x002e2e00
    4d70:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4d74:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4d78:	6f747262 	svcvs	0x00747262
    4d7c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4d80:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4d84:	6f632f78 	svcvs	0x00632f78
    4d88:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4d8c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4d90:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4d94:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    4d98:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    4d9c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    4da0:	7a696c61 	bvc	1a5ff2c <__RAM_SIZE+0x195ff2c>
    4da4:	00632e65 	rsbeq	r2, r3, r5, ror #28
    4da8:	74000001 	strvc	r0, [r0], #-1
    4dac:	6f705f78 	svcvs	0x00705f78
    4db0:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    4db4:	00000200 	andeq	r0, r0, r0, lsl #4
    4db8:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    4dbc:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    4dc0:	00000300 	andeq	r0, r0, r0, lsl #6
    4dc4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 4dcc <_Min_Stack_Size+0x3dcc>
    4dc8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4dcc:	0300682e 	movweq	r6, #2094	; 0x82e
    4dd0:	05000000 	streq	r0, [r0, #-0]
    4dd4:	02050001 	andeq	r0, r5, #1
    4dd8:	100028ec 	andne	r2, r0, ip, ror #17
    4ddc:	0101cc03 	tsteq	r1, r3, lsl #24
    4de0:	03050531 	movweq	r0, #21809	; 0x5531
    4de4:	1a050119 	bne	145250 <__RAM_SIZE+0x45250>
    4de8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4dec:	1b053d06 	blne	15420c <__RAM_SIZE+0x5420c>
    4df0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4df4:	18053206 	stmdane	r5, {r1, r2, r9, ip, sp}
    4df8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4dfc:	18054b06 	stmdane	r5, {r1, r2, r8, r9, fp, lr}
    4e00:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4e04:	1b053406 	blne	151e24 <__RAM_SIZE+0x51e24>
    4e08:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4e0c:	1a053d06 	bne	15422c <__RAM_SIZE+0x5422c>
    4e10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4e14:	18054b06 	stmdane	r5, {r1, r2, r8, r9, fp, lr}
    4e18:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4e1c:	01040200 	mrseq	r0, R12_usr
    4e20:	09054106 	stmdbeq	r5, {r1, r2, r8, lr}
    4e24:	01040200 	mrseq	r0, R12_usr
    4e28:	00130516 	andseq	r0, r3, r6, lsl r5
    4e2c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e30:	000d0501 	andeq	r0, sp, r1, lsl #10
    4e34:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e38:	2e081503 	cfsh32cs	mvfx1, mvfx8, #3
    4e3c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4e40:	01060104 	tsteq	r6, r4, lsl #2
    4e44:	1b030105 	blne	c5260 <SYSTICK_CYCLES+0x9c221>
    4e48:	001c022e 	andseq	r0, ip, lr, lsr #4
    4e4c:	01b70101 			; <UNDEFINED> instruction: 0x01b70101
    4e50:	00030000 	andeq	r0, r3, r0
    4e54:	000000d2 	ldrdeq	r0, [r0], -r2
    4e58:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    4e5c:	0101000d 	tsteq	r1, sp
    4e60:	00000101 	andeq	r0, r0, r1, lsl #2
    4e64:	00000100 	andeq	r0, r0, r0, lsl #2
    4e68:	2f2e2e01 	svccs	0x002e2e01
    4e6c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e70:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4e74:	6f747262 	svcvs	0x00747262
    4e78:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4e7c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4e80:	6f632f78 	svcvs	0x00632f78
    4e84:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4e88:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    4e8c:	2f2e2e00 	svccs	0x002e2e00
    4e90:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e94:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4e98:	6f747262 	svcvs	0x00747262
    4e9c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4ea0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4ea4:	6f632f78 	svcvs	0x00632f78
    4ea8:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4eac:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4eb0:	2f2e2e00 	svccs	0x002e2e00
    4eb4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4eb8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4ebc:	6f747262 	svcvs	0x00747262
    4ec0:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4ec4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4ec8:	6f702f78 	svcvs	0x00702f78
    4ecc:	2f737472 	svccs	0x00737472
    4ed0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    4ed4:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 4d48 <_Min_Stack_Size+0x3d48>
    4ed8:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    4edc:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    4ee0:	0000636e 	andeq	r6, r0, lr, ror #6
    4ee4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 4eec <_Min_Stack_Size+0x3eec>
    4ee8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4eec:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    4ef0:	5f6d6574 	svcpl	0x006d6574
    4ef4:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    4ef8:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    4efc:	0100632e 	tsteq	r0, lr, lsr #6
    4f00:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4f04:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    4f08:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4f0c:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4f10:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    4f14:	00682e74 	rsbeq	r2, r8, r4, ror lr
    4f18:	74000003 	strvc	r0, [r0], #-3
    4f1c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4f20:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    4f24:	00020068 	andeq	r0, r2, r8, rrx
    4f28:	01050000 	mrseq	r0, (UNDEF: 5)
    4f2c:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    4f30:	03100029 	tsteq	r0, #41	; 0x29
    4f34:	140100ce 	strne	r0, [r1], #-206	; 0xffffff32
    4f38:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4f3c:	16050513 			; <UNDEFINED> instruction: 0x16050513
    4f40:	01061505 	tsteq	r6, r5, lsl #10
    4f44:	23060505 	movwcs	r0, #25861	; 0x6505
    4f48:	01060805 	tsteq	r6, r5, lsl #16
    4f4c:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    4f50:	01060c05 	tsteq	r6, r5, lsl #24
    4f54:	42060d05 	andmi	r0, r6, #320	; 0x140
    4f58:	01061b05 	tsteq	r6, r5, lsl #22
    4f5c:	05201005 	streq	r1, [r0, #-5]!
    4f60:	00c00301 	sbceq	r0, r0, r1, lsl #6
    4f64:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4f68:	05204603 	streq	r4, [r0, #-1539]!	; 0xfffff9fd
    4f6c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    4f70:	0c030615 	stceq	6, cr0, [r3], {21}
    4f74:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    4f78:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4f7c:	061f0527 	ldreq	r0, [pc], -r7, lsr #10
    4f80:	2e1c0501 	cfmul32cs	mvfx0, mvfx12, mvfx1
    4f84:	2f061105 	svccs	0x00061105
    4f88:	01064e05 	tsteq	r6, r5, lsl #28
    4f8c:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    4f90:	05320615 	ldreq	r0, [r2, #-1557]!	; 0xfffff9eb
    4f94:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4f98:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    4f9c:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    4fa0:	11052e20 	tstne	r5, r0, lsr #28
    4fa4:	16052406 	strne	r2, [r5], -r6, lsl #8
    4fa8:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    4fac:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    4fb0:	13201003 			; <UNDEFINED> instruction: 0x13201003
    4fb4:	01062405 	tsteq	r6, r5, lsl #8
    4fb8:	21061505 	tstcs	r6, r5, lsl #10
    4fbc:	01064505 	tsteq	r6, r5, lsl #10
    4fc0:	21061505 	tstcs	r6, r5, lsl #10
    4fc4:	01064505 	tsteq	r6, r5, lsl #10
    4fc8:	21061505 	tstcs	r6, r5, lsl #10
    4fcc:	01064005 	tsteq	r6, r5
    4fd0:	21061505 	tstcs	r6, r5, lsl #10
    4fd4:	01064405 	tsteq	r6, r5, lsl #8
    4fd8:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    4fdc:	01063a05 	tsteq	r6, r5, lsl #20
    4fe0:	05240105 	streq	r0, [r4, #-261]!	; 0xfffffefb
    4fe4:	204a0325 	subcs	r0, sl, r5, lsr #6
    4fe8:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    4fec:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    4ff0:	05010640 	streq	r0, [r1, #-1600]	; 0xfffff9c0
    4ff4:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    4ff8:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    4ffc:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    5000:	20010621 	andcs	r0, r1, r1, lsr #12
    5004:	01000702 	tsteq	r0, r2, lsl #14
    5008:	00015b01 	andeq	r5, r1, r1, lsl #22
    500c:	c6000300 	strgt	r0, [r0], -r0, lsl #6
    5010:	02000000 	andeq	r0, r0, #0
    5014:	0d0efb01 	vstreq	d15, [lr, #-4]
    5018:	01010100 	mrseq	r0, (UNDEF: 17)
    501c:	00000001 	andeq	r0, r0, r1
    5020:	01000001 	tsteq	r0, r1
    5024:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5028:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    502c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5030:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5034:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5038:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    503c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4f88 <_Min_Stack_Size+0x3f88>
    5040:	2f6e6f6d 	svccs	0x006e6f6d
    5044:	00637273 	rsbeq	r7, r3, r3, ror r2
    5048:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    504c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5050:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5054:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5058:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    505c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5060:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4fac <_Min_Stack_Size+0x3fac>
    5064:	2f6e6f6d 	svccs	0x006e6f6d
    5068:	00636e69 	rsbeq	r6, r3, r9, ror #28
    506c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5070:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5074:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5078:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    507c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5080:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5084:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    5088:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    508c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    5090:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    5094:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    5098:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    509c:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    50a0:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    50a4:	5f72656d 	svcpl	0x0072656d
    50a8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    50ac:	645f6d65 	ldrbvs	r6, [pc], #-3429	; 50b4 <_Min_Stack_Size+0x40b4>
    50b0:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
    50b4:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    50b8:	00632e65 	rsbeq	r2, r3, r5, ror #28
    50bc:	74000001 	strvc	r0, [r0], #-1
    50c0:	70615f78 	rsbvc	r5, r1, r8, ror pc
    50c4:	00682e69 	rsbeq	r2, r8, r9, ror #28
    50c8:	74000002 	strvc	r0, [r0], #-2
    50cc:	6f705f78 	svcvs	0x00705f78
    50d0:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    50d4:	00000300 	andeq	r0, r0, r0, lsl #6
    50d8:	00010500 	andeq	r0, r1, r0, lsl #10
    50dc:	29d40205 	ldmibcs	r4, {r0, r2, r9}^
    50e0:	c9031000 	stmdbgt	r3, {ip}
    50e4:	13140100 	tstne	r4, #0, 2
    50e8:	16050513 			; <UNDEFINED> instruction: 0x16050513
    50ec:	01060f05 	tsteq	r6, r5, lsl #30
    50f0:	23060505 	movwcs	r0, #25861	; 0x6505
    50f4:	01060805 	tsteq	r6, r5, lsl #16
    50f8:	26060905 	strcs	r0, [r6], -r5, lsl #18
    50fc:	01061405 	tsteq	r6, r5, lsl #8
    5100:	23060905 	movwcs	r0, #26885	; 0x6905
    5104:	01060c05 	tsteq	r6, r5, lsl #24
    5108:	03060d05 	movweq	r0, #27909	; 0x6d05
    510c:	1c052e13 	stcne	14, cr2, [r5], {19}
    5110:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5114:	3d052106 	stfccs	f2, [r5, #-24]	; 0xffffffe8
    5118:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    511c:	3d052106 	stfccs	f2, [r5, #-24]	; 0xffffffe8
    5120:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5124:	11052306 	tstne	r5, r6, lsl #6
    5128:	10050106 	andne	r0, r5, r6, lsl #2
    512c:	06090520 	streq	r0, [r9], -r0, lsr #10
    5130:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    5134:	20010632 	andcs	r0, r1, r2, lsr r6
    5138:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    513c:	6003060d 	andvs	r0, r3, sp, lsl #12
    5140:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    5144:	20100501 	andscs	r0, r0, r1, lsl #10
    5148:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    514c:	01061e05 	tsteq	r6, r5, lsl #28
    5150:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    5154:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    5158:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    515c:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    5160:	0201061e 	andeq	r0, r1, #31457280	; 0x1e00000
    5164:	01010002 	tsteq	r1, r2
    5168:	000004d5 	ldrdeq	r0, [r0], -r5
    516c:	00de0003 	sbcseq	r0, lr, r3
    5170:	01020000 	mrseq	r0, (UNDEF: 2)
    5174:	000d0efb 	strdeq	r0, [sp], -fp
    5178:	01010101 	tsteq	r1, r1, lsl #2
    517c:	01000000 	mrseq	r0, (UNDEF: 0)
    5180:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5184:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5188:	2f2e2e2f 	svccs	0x002e2e2f
    518c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    5190:	2f736f74 	svccs	0x00736f74
    5194:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5198:	2f786461 	svccs	0x00786461
    519c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    51a0:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    51a4:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    51a8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    51ac:	2f2e2e2f 	svccs	0x002e2e2f
    51b0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    51b4:	2f736f74 	svccs	0x00736f74
    51b8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    51bc:	2f786461 	svccs	0x00786461
    51c0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    51c4:	6f632f73 	svcvs	0x00632f73
    51c8:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    51cc:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    51d0:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    51d4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    51d8:	2f2e2e00 	svccs	0x002e2e00
    51dc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    51e0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    51e4:	6f747262 	svcvs	0x00747262
    51e8:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    51ec:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    51f0:	6f632f78 	svcvs	0x00632f78
    51f4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    51f8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    51fc:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5200:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    5204:	745f7265 	ldrbvc	r7, [pc], #-613	; 520c <_Min_Stack_Size+0x420c>
    5208:	61657268 	cmnvs	r5, r8, ror #4
    520c:	6e655f64 	cdpvs	15, 6, cr5, cr5, cr4, {3}
    5210:	2e797274 	mrccs	2, 3, r7, cr9, cr4, {3}
    5214:	00010063 	andeq	r0, r1, r3, rrx
    5218:	5f787400 	svcpl	0x00787400
    521c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    5220:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5224:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5228:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    522c:	0300682e 	movweq	r6, #2094	; 0x82e
    5230:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5234:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    5238:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    523c:	00000300 	andeq	r0, r0, r0, lsl #6
    5240:	745f7874 	ldrbvc	r7, [pc], #-2164	; 5248 <_Min_Stack_Size+0x4248>
    5244:	61657268 	cmnvs	r5, r8, ror #4
    5248:	00682e64 	rsbeq	r2, r8, r4, ror #28
    524c:	00000003 	andeq	r0, r0, r3
    5250:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5254:	002a0402 	eoreq	r0, sl, r2, lsl #8
    5258:	00cc0310 	sbceq	r0, ip, r0, lsl r3
    525c:	13141401 	tstne	r4, #16777216	; 0x1000000
    5260:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    5264:	13141313 	tstne	r4, #1275068416	; 0x4c000000
    5268:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    526c:	06080518 			; <UNDEFINED> instruction: 0x06080518
    5270:	03010501 	movweq	r0, #5377	; 0x1501
    5274:	1d054a68 	vstrne	s8, [r5, #-416]	; 0xfffffe60
    5278:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    527c:	30030611 	andcc	r0, r3, r1, lsl r6
    5280:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    5284:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    5288:	05582103 	ldrbeq	r2, [r8, #-259]	; 0xfffffefd
    528c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    5290:	35030615 	strcc	r0, [r3, #-1557]	; 0xfffff9eb
    5294:	062b052e 	strteq	r0, [fp], -lr, lsr #10
    5298:	20500513 	subscs	r0, r0, r3, lsl r5
    529c:	051f4805 	ldreq	r4, [pc, #-2053]	; 4a9f <_Min_Stack_Size+0x3a9f>
    52a0:	17250615 			; <UNDEFINED> instruction: 0x17250615
    52a4:	01064205 	tsteq	r6, r5, lsl #4
    52a8:	2f061505 	svccs	0x00061505
    52ac:	01064405 	tsteq	r6, r5, lsl #8
    52b0:	23061505 	movwcs	r1, #25861	; 0x6505
    52b4:	01062605 	tsteq	r6, r5, lsl #12
    52b8:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    52bc:	c7030611 	smladgt	r3, r1, r6, r0
    52c0:	2d052000 	stccs	0, cr2, [r5, #-0]
    52c4:	11050106 	tstne	r5, r6, lsl #2
    52c8:	02043106 	andeq	r3, r4, #-2147483647	; 0x80000001
    52cc:	9d033705 	stcls	7, cr3, [r3, #-20]	; 0xffffffec
    52d0:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    52d4:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    52d8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    52dc:	017de103 	cmneq	sp, r3, lsl #2
    52e0:	01061405 	tsteq	r6, r5, lsl #8
    52e4:	23061505 	movwcs	r1, #25861	; 0x6505
    52e8:	04321105 	ldrteq	r1, [r2], #-261	; 0xfffffefb
    52ec:	03370502 	teqeq	r7, #8388608	; 0x800000
    52f0:	0501029c 	streq	r0, [r1, #-668]	; 0xfffffd64
    52f4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    52f8:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    52fc:	0105015c 	tsteq	r5, ip, asr r1
    5300:	16050514 			; <UNDEFINED> instruction: 0x16050514
    5304:	06010630 			; <UNDEFINED> instruction: 0x06010630
    5308:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    530c:	01040106 	tsteq	r4, r6, lsl #2
    5310:	03061105 	movweq	r1, #24837	; 0x6105
    5314:	05017ddc 	streq	r7, [r1, #-3548]	; 0xfffff224
    5318:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    531c:	053f0611 	ldreq	r0, [pc, #-1553]!	; 4d13 <_Min_Stack_Size+0x3d13>
    5320:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    5324:	11052014 	tstne	r5, r4, lsl r0
    5328:	00e80306 	rsceq	r0, r8, r6, lsl #6
    532c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5330:	01a50337 			; <UNDEFINED> instruction: 0x01a50337
    5334:	17050501 	strne	r0, [r5, -r1, lsl #10]
    5338:	01042e06 	tsteq	r4, r6, lsl #28
    533c:	03061105 	movweq	r1, #24837	; 0x6105
    5340:	04017ed9 	streq	r7, [r1], #-3801	; 0xfffff127
    5344:	03370502 	teqeq	r7, #8388608	; 0x800000
    5348:	050101ab 	streq	r0, [r1, #-427]	; 0xfffffe55
    534c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5350:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    5354:	0105015c 	tsteq	r5, ip, asr r1
    5358:	16050514 			; <UNDEFINED> instruction: 0x16050514
    535c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    5360:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    5364:	01040106 	tsteq	r4, r6, lsl #2
    5368:	03061305 	movweq	r1, #25349	; 0x6305
    536c:	05017cb8 	streq	r7, [r1, #-3256]	; 0xfffff348
    5370:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    5374:	11052013 	tstne	r5, r3, lsl r0
    5378:	05153206 	ldreq	r3, [r5, #-518]	; 0xfffffdfa
    537c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    5380:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    5384:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    5388:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    538c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    5390:	0e030615 	mcreq	6, 0, r0, cr3, cr5, {0}
    5394:	0624052e 	strteq	r0, [r4], -lr, lsr #10
    5398:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    539c:	06450521 	strbeq	r0, [r5], -r1, lsr #10
    53a0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    53a4:	06450521 	strbeq	r0, [r5], -r1, lsr #10
    53a8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    53ac:	063f0523 	ldrteq	r0, [pc], -r3, lsr #10
    53b0:	15052001 	strne	r2, [r5, #-1]
    53b4:	24052306 	strcs	r2, [r5], #-774	; 0xfffffcfa
    53b8:	11050106 	tstne	r5, r6, lsl #2
    53bc:	23052706 	movwcs	r2, #22278	; 0x5706
    53c0:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    53c4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    53c8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    53cc:	05010643 	streq	r0, [r1, #-1603]	; 0xfffff9bd
    53d0:	054d0615 	strbeq	r0, [sp, #-1557]	; 0xfffff9eb
    53d4:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    53d8:	19052018 	stmdbne	r5, {r3, r4, sp}
    53dc:	01014206 	tsteq	r1, r6, lsl #4
    53e0:	05150101 	ldreq	r0, [r5, #-257]	; 0xfffffeff
    53e4:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    53e8:	1d052e1c 	stcne	14, cr2, [r5, #-112]	; 0xffffff90
    53ec:	27053f06 	strcs	r3, [r5, -r6, lsl #30]
    53f0:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    53f4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    53f8:	053c1e03 	ldreq	r1, [ip, #-3587]!	; 0xfffff1fd
    53fc:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    5400:	054d0615 	strbeq	r0, [sp, #-1557]	; 0xfffff9eb
    5404:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    5408:	19052018 	stmdbne	r5, {r3, r4, sp}
    540c:	01014206 	tsteq	r1, r6, lsl #4
    5410:	05150101 	ldreq	r0, [r5, #-257]	; 0xfffffeff
    5414:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    5418:	15052e1c 	strne	r2, [r5, #-3612]	; 0xfffff1e4
    541c:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5420:	06230513 			; <UNDEFINED> instruction: 0x06230513
    5424:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    5428:	06590523 	ldrbeq	r0, [r9], -r3, lsr #10
    542c:	20480501 	subcs	r0, r8, r1, lsl #10
    5430:	23061505 	movwcs	r1, #25861	; 0x6505
    5434:	01061805 	tsteq	r6, r5, lsl #16
    5438:	27061905 	strcs	r1, [r6, -r5, lsl #18]
    543c:	01064605 	tsteq	r6, r5, lsl #12
    5440:	2f061905 	svccs	0x00061905
    5444:	01064805 	tsteq	r6, r5, lsl #16
    5448:	23061905 	movwcs	r1, #26885	; 0x6905
    544c:	01062a05 	tsteq	r6, r5, lsl #20
    5450:	03061d05 	movweq	r1, #27909	; 0x6d05
    5454:	27052e67 	strcs	r2, [r5, -r7, ror #28]
    5458:	4f050106 	svcmi	0x00050106
    545c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5460:	053c2003 	ldreq	r2, [ip, #-3]!
    5464:	05010646 	streq	r0, [r1, #-1606]	; 0xfffff9ba
    5468:	20030615 	andcs	r0, r3, r5, lsl r6
    546c:	0618053c 			; <UNDEFINED> instruction: 0x0618053c
    5470:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    5474:	063f0524 	ldrteq	r0, [pc], -r4, lsr #10
    5478:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    547c:	062b054d 	strteq	r0, [fp], -sp, asr #10
    5480:	201c0501 	andscs	r0, ip, r1, lsl #10
    5484:	42061d05 	andmi	r1, r6, #320	; 0x140
    5488:	01010101 	tsteq	r1, r1, lsl #2
    548c:	062b0515 			; <UNDEFINED> instruction: 0x062b0515
    5490:	2e200501 	cfsh64cs	mvdx0, mvdx0, #1
    5494:	03061505 	movweq	r1, #25861	; 0x6505
    5498:	27053c0c 	strcs	r3, [r5, -ip, lsl #24]
    549c:	18050106 	stmdane	r5, {r1, r2, r8}
    54a0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    54a4:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    54a8:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    54ac:	05270615 	streq	r0, [r7, #-1557]!	; 0xfffff9eb
    54b0:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    54b4:	15052e20 	strne	r2, [r5, #-3616]	; 0xfffff1e0
    54b8:	52052f06 	andpl	r2, r5, #6, 30
    54bc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    54c0:	19052018 	stmdbne	r5, {r3, r4, sp}
    54c4:	22053206 	andcs	r3, r5, #1610612736	; 0x60000000
    54c8:	19050106 	stmdbne	r5, {r1, r2, r8}
    54cc:	27052106 	strcs	r2, [r5, -r6, lsl #2]
    54d0:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    54d4:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    54d8:	061a0524 	ldreq	r0, [sl], -r4, lsr #10
    54dc:	20180501 	andscs	r0, r8, r1, lsl #10
    54e0:	03061905 	movweq	r1, #26885	; 0x6905
    54e4:	05132010 	ldreq	r2, [r3, #-16]
    54e8:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    54ec:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    54f0:	05010649 	streq	r0, [r1, #-1609]	; 0xfffff9b7
    54f4:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    54f8:	05010649 	streq	r0, [r1, #-1609]	; 0xfffff9b7
    54fc:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    5500:	05010648 	streq	r0, [r1, #-1608]	; 0xfffff9b8
    5504:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    5508:	0501064c 	streq	r0, [r1, #-1612]	; 0xfffff9b4
    550c:	05240615 	streq	r0, [r4, #-1557]!	; 0xfffff9eb
    5510:	05010642 	streq	r0, [r1, #-1602]	; 0xfffff9be
    5514:	41030621 	tstmi	r3, r1, lsr #12
    5518:	062b052e 	strteq	r0, [fp], -lr, lsr #10
    551c:	20530501 	subscs	r0, r3, r1, lsl #10
    5520:	0d032905 	vstreq.16	s4, [r3, #-10]	; <UNPREDICTABLE>
    5524:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    5528:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    552c:	05010648 	streq	r0, [r1, #-1608]	; 0xfffff9b8
    5530:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    5534:	0501064c 	streq	r0, [r1, #-1612]	; 0xfffff9b4
    5538:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    553c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    5540:	2703060d 	strcs	r0, [r3, -sp, lsl #12]
    5544:	0623052e 	strteq	r0, [r3], -lr, lsr #10
    5548:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    554c:	26061105 	strcs	r1, [r6], -r5, lsl #2
    5550:	062f0516 			; <UNDEFINED> instruction: 0x062f0516
    5554:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    5558:	02043f41 	andeq	r3, r4, #260	; 0x104
    555c:	89033705 	stmdbhi	r3, {r0, r2, r8, r9, sl, ip, sp}
    5560:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5564:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    5568:	06090501 	streq	r0, [r9], -r1, lsl #10
    556c:	017c9d03 	cmneq	ip, r3, lsl #26
    5570:	04180d05 	ldreq	r0, [r8], #-3333	; 0xfffff2fb
    5574:	03370502 	teqeq	r7, #8388608	; 0x800000
    5578:	050103e1 	streq	r0, [r1, #-993]	; 0xfffffc1f
    557c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5580:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    5584:	0105015c 	tsteq	r5, ip, asr r1
    5588:	16050514 			; <UNDEFINED> instruction: 0x16050514
    558c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    5590:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    5594:	01040106 	tsteq	r4, r6, lsl #2
    5598:	03060d05 	movweq	r0, #27909	; 0x6d05
    559c:	05017c97 	streq	r7, [r1, #-3223]	; 0xfffff369
    55a0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    55a4:	0d053c1c 	stceq	12, cr3, [r5, #-112]	; 0xffffff90
    55a8:	10052406 	andne	r2, r5, r6, lsl #8
    55ac:	11050106 	tstne	r5, r6, lsl #2
    55b0:	3f052306 	svccc	0x00052306
    55b4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    55b8:	24053206 	strcs	r3, [r5], #-518	; 0xfffffdfa
    55bc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    55c0:	26053206 	strcs	r3, [r5], -r6, lsl #4
    55c4:	23050106 	movwcs	r0, #20742	; 0x5106
    55c8:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    55cc:	06270521 	strteq	r0, [r7], -r1, lsr #10
    55d0:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    55d4:	43060d05 	movwmi	r0, #27909	; 0x6d05
    55d8:	01061f05 	tsteq	r6, r5, lsl #30
    55dc:	3f060d05 	svccc	0x00060d05
    55e0:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    55e4:	0103bb03 	tsteq	r3, r3, lsl #22
    55e8:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    55ec:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    55f0:	c303060d 	movwgt	r0, #13837	; 0x360d
    55f4:	0204017c 	andeq	r0, r4, #124, 2
    55f8:	c1033705 	tstgt	r3, r5, lsl #14
    55fc:	01050103 	tsteq	r5, r3, lsl #2
    5600:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    5604:	5c033705 	stcpl	7, cr3, [r3], {5}
    5608:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    560c:	30160505 	andscc	r0, r6, r5, lsl #10
    5610:	03060106 	movweq	r0, #24838	; 0x6106
    5614:	06220121 	strteq	r0, [r2], -r1, lsr #2
    5618:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    561c:	b803060d 	stmdalt	r3, {r0, r2, r3, r9, sl}
    5620:	1305017c 	movwne	r0, #20860	; 0x517c
    5624:	11050106 	tstne	r5, r6, lsl #2
    5628:	02bf0306 	adcseq	r0, pc, #402653184	; 0x18000000
    562c:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
    5630:	00f50337 	rscseq	r0, r5, r7, lsr r3
    5634:	17050501 	strne	r0, [r5, -r1, lsl #10]
    5638:	30060105 	andcc	r0, r6, r5, lsl #2
    563c:	01001702 	tsteq	r0, r2, lsl #14
    5640:	00012f01 	andeq	r2, r1, r1, lsl #30
    5644:	bd000300 	stclt	3, cr0, [r0, #-0]
    5648:	02000000 	andeq	r0, r0, #0
    564c:	0d0efb01 	vstreq	d15, [lr, #-4]
    5650:	01010100 	mrseq	r0, (UNDEF: 17)
    5654:	00000001 	andeq	r0, r0, r1
    5658:	01000001 	tsteq	r0, r1
    565c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5660:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5664:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5668:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    566c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5670:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5674:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 55c0 <_Min_Stack_Size+0x45c0>
    5678:	2f6e6f6d 	svccs	0x006e6f6d
    567c:	00637273 	rsbeq	r7, r3, r3, ror r2
    5680:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5684:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5688:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    568c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5690:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5694:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5698:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    569c:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    56a0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    56a4:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    56a8:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    56ac:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    56b0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    56b4:	2f2e2e2f 	svccs	0x002e2e2f
    56b8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5608 <_Min_Stack_Size+0x4608>
    56bc:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    56c0:	742f736f 	strtvc	r7, [pc], #-879	; 56c8 <_Min_Stack_Size+0x46c8>
    56c4:	61657268 	cmnvs	r5, r8, ror #4
    56c8:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    56cc:	6f6d6d6f 	svcvs	0x006d6d6f
    56d0:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    56d4:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    56d8:	625f6578 	subsvs	r6, pc, #120, 10	; 0x1e000000
    56dc:	6b636f6c 	blvs	18e1494 <__RAM_SIZE+0x17e1494>
    56e0:	6c65725f 	sfmvs	f7, 2, [r5], #-380	; 0xfffffe84
    56e4:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    56e8:	0100632e 	tsteq	r0, lr, lsr #6
    56ec:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    56f0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    56f4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    56f8:	74000002 	strvc	r0, [r0], #-2
    56fc:	70615f78 	rsbvc	r5, r1, r8, ror pc
    5700:	00682e69 	rsbeq	r2, r8, r9, ror #28
    5704:	00000003 	andeq	r0, r0, r3
    5708:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    570c:	002bc002 	eoreq	ip, fp, r2
    5710:	00c70310 	sbceq	r0, r7, r0, lsl r3
    5714:	13131401 	tstne	r3, #16777216	; 0x1000000
    5718:	16050513 			; <UNDEFINED> instruction: 0x16050513
    571c:	01060805 	tsteq	r6, r5, lsl #16
    5720:	77030105 	strvc	r0, [r3, -r5, lsl #2]
    5724:	06090520 	streq	r0, [r9], -r0, lsr #10
    5728:	13201403 			; <UNDEFINED> instruction: 0x13201403
    572c:	12051313 	andne	r1, r5, #1275068416	; 0x4c000000
    5730:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5734:	05152f06 	ldreq	r2, [r5, #-3846]	; 0xfffff0fa
    5738:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    573c:	0528060e 	streq	r0, [r8, #-1550]!	; 0xfffff9f2
    5740:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    5744:	05202012 	streq	r2, [r0, #-18]!	; 0xffffffee
    5748:	05053214 	streq	r3, [r5, #-532]	; 0xfffffdec
    574c:	200b0306 	andcs	r0, fp, r6, lsl #6
    5750:	13060105 	movwne	r0, #24837	; 0x6105
    5754:	03060d05 	movweq	r0, #27909	; 0x6d05
    5758:	1705207a 	smlsdxne	r5, sl, r0, r2
    575c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    5760:	20600310 	rsbcs	r0, r0, r0, lsl r3
    5764:	26030105 	strcs	r0, [r3], -r5, lsl #2
    5768:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    576c:	0220206c 	eoreq	r2, r0, #108	; 0x6c
    5770:	01010003 	tsteq	r1, r3
    5774:	000001e8 	andeq	r0, r0, r8, ror #3
    5778:	00da0003 	sbcseq	r0, sl, r3
    577c:	01020000 	mrseq	r0, (UNDEF: 2)
    5780:	000d0efb 	strdeq	r0, [sp], -fp
    5784:	01010101 	tsteq	r1, r1, lsl #2
    5788:	01000000 	mrseq	r0, (UNDEF: 0)
    578c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5790:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5794:	2f2e2e2f 	svccs	0x002e2e2f
    5798:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    579c:	2f736f74 	svccs	0x00736f74
    57a0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    57a4:	2f786461 	svccs	0x00786461
    57a8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    57ac:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    57b0:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    57b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    57b8:	2f2e2e2f 	svccs	0x002e2e2f
    57bc:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    57c0:	2f736f74 	svccs	0x00736f74
    57c4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    57c8:	2f786461 	svccs	0x00786461
    57cc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    57d0:	6f632f73 	svcvs	0x00632f73
    57d4:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    57d8:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    57dc:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    57e0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    57e4:	2f2e2e00 	svccs	0x002e2e00
    57e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    57ec:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    57f0:	6f747262 	svcvs	0x00747262
    57f4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    57f8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    57fc:	6f632f78 	svcvs	0x00632f78
    5800:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    5804:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5808:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    580c:	79625f65 	stmdbvc	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    5810:	615f6574 	cmpvs	pc, r4, ror r5	; <UNPREDICTABLE>
    5814:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    5818:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    581c:	00010063 	andeq	r0, r1, r3, rrx
    5820:	5f787400 	svcpl	0x00787400
    5824:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    5828:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    582c:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5830:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    5834:	0300682e 	movweq	r6, #2094	; 0x82e
    5838:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    583c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    5840:	2e646165 	powcssz	f6, f4, f5
    5844:	00030068 	andeq	r0, r3, r8, rrx
    5848:	5f787400 	svcpl	0x00787400
    584c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    5850:	00682e72 	rsbeq	r2, r8, r2, ror lr
    5854:	00000003 	andeq	r0, r0, r3
    5858:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    585c:	002be802 	eoreq	lr, fp, r2, lsl #16
    5860:	00d30310 	sbcseq	r0, r3, r0, lsl r3
    5864:	06010601 	streq	r0, [r1], -r1, lsl #12
    5868:	05051422 	streq	r1, [r5, #-1058]	; 0xfffffbde
    586c:	08051517 	stmdaeq	r5, {r0, r1, r2, r4, r8, sl, ip}
    5870:	0a050106 	beq	145c90 <__RAM_SIZE+0x45c90>
    5874:	0e053606 	cfmadd32eq	mvax0, mvfx3, mvfx5, mvfx6
    5878:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    587c:	05054e10 	streq	r4, [r5, #-3600]	; 0xfffff1f0
    5880:	00c00306 	sbceq	r0, r0, r6, lsl #6
    5884:	06080520 	streq	r0, [r8], -r0, lsr #10
    5888:	06090501 	streq	r0, [r9], -r1, lsl #10
    588c:	05020424 	streq	r0, [r2, #-1060]	; 0xfffffbdc
    5890:	02ca0337 	sbceq	r0, sl, #-603979776	; 0xdc000000
    5894:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    5898:	2f130505 	svccs	0x00130505
    589c:	01040106 	tsteq	r4, r6, lsl #2
    58a0:	b2030d05 	andlt	r0, r3, #320	; 0x140
    58a4:	0c05017d 	stfeqs	f0, [r5], {125}	; 0x7d
    58a8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    58ac:	05020440 	streq	r0, [r2, #-1088]	; 0xfffffbc0
    58b0:	02c60337 	sbceq	r0, r6, #-603979776	; 0xdc000000
    58b4:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    58b8:	2f130505 	svccs	0x00130505
    58bc:	01040106 	tsteq	r4, r6, lsl #2
    58c0:	b6031105 	strlt	r1, [r3], -r5, lsl #2
    58c4:	1005017d 	andne	r0, r5, sp, ror r1
    58c8:	0605054a 	streq	r0, [r5], -sl, asr #10
    58cc:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    58d0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    58d4:	20090301 	andcs	r0, r9, r1, lsl #6
    58d8:	03060a05 	movweq	r0, #27141	; 0x6a05
    58dc:	05207fa9 	streq	r7, [r0, #-4009]!	; 0xfffff057
    58e0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    58e4:	0528060a 	streq	r0, [r8, #-1546]!	; 0xfffff9f6
    58e8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    58ec:	0528060a 	streq	r0, [r8, #-1546]!	; 0xfffff9f6
    58f0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    58f4:	09052e0d 	stmdbeq	r5, {r0, r2, r3, r9, sl, fp, sp}
    58f8:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    58fc:	01060c05 	tsteq	r6, r5, lsl #24
    5900:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    5904:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5908:	0102ea03 	tsteq	r2, r3, lsl #20
    590c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5910:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    5914:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5918:	7d920311 	ldcvc	3, cr0, [r2, #68]	; 0x44
    591c:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    5920:	03060905 	movweq	r0, #26885	; 0x6905
    5924:	05312e0f 	ldreq	r2, [r1, #-3599]!	; 0xfffff1f1
    5928:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    592c:	58420310 	stmdapl	r2, {r4, r8, r9}^
    5930:	20100320 	andscs	r0, r0, r0, lsr #6
    5934:	18053636 	stmdane	r5, {r1, r2, r4, r5, r9, sl, ip, sp}
    5938:	052e1003 	streq	r1, [lr, #-3]!
    593c:	2e120314 	mrccs	3, 0, r0, cr2, cr4, {0}
    5940:	03060905 	movweq	r0, #26885	; 0x6905
    5944:	13052e1c 	movwne	r2, #24092	; 0x5e1c
    5948:	2e200106 	sufcss	f0, f0, f6
    594c:	76031805 	strvc	r1, [r3], -r5, lsl #16
    5950:	06050520 	streq	r0, [r5], -r0, lsr #10
    5954:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    5958:	0201060b 	andeq	r0, r1, #11534336	; 0xb00000
    595c:	01010009 	tsteq	r1, r9
    5960:	000002c8 	andeq	r0, r0, r8, asr #5
    5964:	00ef0003 	rsceq	r0, pc, r3
    5968:	01020000 	mrseq	r0, (UNDEF: 2)
    596c:	000d0efb 	strdeq	r0, [sp], -fp
    5970:	01010101 	tsteq	r1, r1, lsl #2
    5974:	01000000 	mrseq	r0, (UNDEF: 0)
    5978:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    597c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5980:	2f2e2e2f 	svccs	0x002e2e2f
    5984:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    5988:	2f736f74 	svccs	0x00736f74
    598c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5990:	2f786461 	svccs	0x00786461
    5994:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    5998:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    599c:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    59a0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    59a4:	2f2e2e2f 	svccs	0x002e2e2f
    59a8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    59ac:	2f736f74 	svccs	0x00736f74
    59b0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    59b4:	2f786461 	svccs	0x00786461
    59b8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    59bc:	6f632f73 	svcvs	0x00632f73
    59c0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    59c4:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    59c8:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    59cc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    59d0:	2f2e2e00 	svccs	0x002e2e00
    59d4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    59d8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    59dc:	6f747262 	svcvs	0x00747262
    59e0:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    59e4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    59e8:	6f632f78 	svcvs	0x00632f78
    59ec:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    59f0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    59f4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    59f8:	79625f65 	stmdbvc	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    59fc:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    5a00:	5f6c6f6f 	svcpl	0x006c6f6f
    5a04:	61657263 	cmnvs	r5, r3, ror #4
    5a08:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    5a0c:	00000100 	andeq	r0, r0, r0, lsl #2
    5a10:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    5a14:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    5a18:	00020068 	andeq	r0, r2, r8, rrx
    5a1c:	5f787400 	svcpl	0x00787400
    5a20:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    5a24:	00030068 	andeq	r0, r3, r8, rrx
    5a28:	5f787400 	svcpl	0x00787400
    5a2c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5a30:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    5a34:	00000300 	andeq	r0, r0, r0, lsl #6
    5a38:	745f7874 	ldrbvc	r7, [pc], #-2164	; 5a40 <_Min_Stack_Size+0x4a40>
    5a3c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    5a40:	0300682e 	movweq	r6, #2094	; 0x82e
    5a44:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5a48:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    5a4c:	6f705f65 	svcvs	0x00705f65
    5a50:	682e6c6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}
    5a54:	00000300 	andeq	r0, r0, r0, lsl #6
    5a58:	00010500 	andeq	r0, r1, r0, lsl #10
    5a5c:	2c7c0205 	lfmcs	f0, 2, [ip], #-20	; 0xffffffec
    5a60:	d3031000 	movwle	r1, #12288	; 0x3000
    5a64:	14140100 	ldrne	r0, [r4], #-256	; 0xffffff00
    5a68:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    5a6c:	05151705 	ldreq	r1, [r5, #-1797]	; 0xfffff8fb
    5a70:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5a74:	2e700301 	cdpcs	3, 7, cr0, cr0, cr1, {0}
    5a78:	03060a05 	movweq	r0, #27141	; 0x6a05
    5a7c:	0d056618 	stceq	6, cr6, [r5, #-96]	; 0xffffffa0
    5a80:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    5a84:	01053210 	tsteq	r5, r0, lsl r2
    5a88:	2000ee03 	andcs	lr, r0, r3, lsl #28
    5a8c:	03060905 	movweq	r0, #26885	; 0x6905
    5a90:	042e7f98 	strteq	r7, [lr], #-3992	; 0xfffff068
    5a94:	03370502 	teqeq	r7, #8388608	; 0x800000
    5a98:	050103dc 	streq	r0, [r1, #-988]	; 0xfffffc24
    5a9c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5aa0:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    5aa4:	0105015c 	tsteq	r5, ip, asr r1
    5aa8:	16050514 			; <UNDEFINED> instruction: 0x16050514
    5aac:	06010630 			; <UNDEFINED> instruction: 0x06010630
    5ab0:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    5ab4:	01040106 	tsteq	r4, r6, lsl #2
    5ab8:	03060905 	movweq	r0, #26885	; 0x6905
    5abc:	05017c9c 	streq	r7, [r1, #-3228]	; 0xfffff364
    5ac0:	20010623 	andcs	r0, r1, r3, lsr #12
    5ac4:	3f060905 	svccc	0x00060905
    5ac8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5acc:	0103cd03 	tsteq	r3, r3, lsl #26
    5ad0:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    5ad4:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    5ad8:	b1030609 	tstlt	r3, r9, lsl #12
    5adc:	1305017c 	movwne	r0, #20860	; 0x517c
    5ae0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5ae4:	10052f06 	andne	r2, r5, r6, lsl #30
    5ae8:	1f050106 	svcne	0x00050106
    5aec:	01040200 	mrseq	r0, R12_usr
    5af0:	21052006 	tstcs	r5, r6
    5af4:	01040200 	mrseq	r0, R12_usr
    5af8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5afc:	01040200 	mrseq	r0, R12_usr
    5b00:	060d052e 	streq	r0, [sp], -lr, lsr #10
    5b04:	06100532 			; <UNDEFINED> instruction: 0x06100532
    5b08:	00110501 	andseq	r0, r1, r1, lsl #10
    5b0c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5b10:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    5b14:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    5b18:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    5b1c:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    5b20:	73030602 	movwvc	r0, #13826	; 0x3602
    5b24:	00410520 	subeq	r0, r1, r0, lsr #10
    5b28:	06020402 	streq	r0, [r2], -r2, lsl #8
    5b2c:	04020001 	streq	r0, [r2], #-1
    5b30:	09052002 	stmdbeq	r5, {r1, sp}
    5b34:	20120306 	andscs	r0, r2, r6, lsl #6
    5b38:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5b3c:	0103c003 	tsteq	r3, r3
    5b40:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5b44:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    5b48:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    5b4c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5b50:	01063016 	tsteq	r6, r6, lsl r0
    5b54:	01210306 			; <UNDEFINED> instruction: 0x01210306
    5b58:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    5b5c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5b60:	017cb803 	cmneq	ip, r3, lsl #16
    5b64:	01062305 	tsteq	r6, r5, lsl #6
    5b68:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    5b6c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5b70:	0103b103 	tsteq	r3, r3, lsl #2
    5b74:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    5b78:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    5b7c:	cd030609 	stcgt	6, cr0, [r3, #-36]	; 0xffffffdc
    5b80:	0531017c 	ldreq	r0, [r1, #-380]!	; 0xfffffe84
    5b84:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5b88:	0536060e 	ldreq	r0, [r6, #-1550]!	; 0xfffff9f2
    5b8c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5b90:	0528060e 	streq	r0, [r8, #-1550]!	; 0xfffff9f2
    5b94:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5b98:	0c03060d 	stceq	6, cr0, [r3], {13}
    5b9c:	1005313c 	andne	r3, r5, ip, lsr r1
    5ba0:	0c050106 	stfeqs	f0, [r5], {6}
    5ba4:	3c7fa403 	cfldrdcc	mvd10, [pc], #-12	; 5ba0 <_Min_Stack_Size+0x4ba0>
    5ba8:	03060d05 	movweq	r0, #27909	; 0x6d05
    5bac:	042000e5 	strteq	r0, [r0], #-229	; 0xffffff1b
    5bb0:	03370502 	teqeq	r7, #8388608	; 0x800000
    5bb4:	050102b4 	streq	r0, [r1, #-692]	; 0xfffffd4c
    5bb8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5bbc:	01062f13 	tsteq	r6, r3, lsl pc
    5bc0:	11050104 	tstne	r5, r4, lsl #2
    5bc4:	017dc803 	cmneq	sp, r3, lsl #16
    5bc8:	20100520 	andscs	r0, r0, r0, lsr #10
    5bcc:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    5bd0:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5bd4:	0102b003 	tsteq	r2, r3
    5bd8:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5bdc:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    5be0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5be4:	7dcc0315 	stclvc	3, cr0, [ip, #84]	; 0x54
    5be8:	3c140501 	cfldr32cc	mvfx0, [r4], {1}
    5bec:	03060505 	movweq	r0, #25861	; 0x6505
    5bf0:	08053c0b 	stmdaeq	r5, {r0, r1, r3, sl, fp, ip, sp}
    5bf4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5bf8:	13053206 	movwne	r3, #20998	; 0x5206
    5bfc:	2e4a0106 	dvfcse	f0, f2, f6
    5c00:	68031805 	stmdavs	r3, {r0, r2, fp, ip}
    5c04:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    5c08:	052e7fa7 	streq	r7, [lr, #-4007]!	; 0xfffff059
    5c0c:	00f60301 	rscseq	r0, r6, r1, lsl #6
    5c10:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    5c14:	36362044 	ldrtcc	r2, [r6], -r4, asr #32
    5c18:	1c031c05 	stcne	12, cr1, [r3], {5}
    5c1c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5c20:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    5c24:	0201060b 	andeq	r0, r1, #11534336	; 0xb00000
    5c28:	0101000e 	tsteq	r1, lr
    5c2c:	00000320 	andeq	r0, r0, r0, lsr #6
    5c30:	00da0003 	sbcseq	r0, sl, r3
    5c34:	01020000 	mrseq	r0, (UNDEF: 2)
    5c38:	000d0efb 	strdeq	r0, [sp], -fp
    5c3c:	01010101 	tsteq	r1, r1, lsl #2
    5c40:	01000000 	mrseq	r0, (UNDEF: 0)
    5c44:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5c48:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5c4c:	2f2e2e2f 	svccs	0x002e2e2f
    5c50:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    5c54:	2f736f74 	svccs	0x00736f74
    5c58:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5c5c:	2f786461 	svccs	0x00786461
    5c60:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    5c64:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    5c68:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    5c6c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5c70:	2f2e2e2f 	svccs	0x002e2e2f
    5c74:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    5c78:	2f736f74 	svccs	0x00736f74
    5c7c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5c80:	2f786461 	svccs	0x00786461
    5c84:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    5c88:	6f632f73 	svcvs	0x00632f73
    5c8c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    5c90:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    5c94:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    5c98:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5c9c:	2f2e2e00 	svccs	0x002e2e00
    5ca0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5ca4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    5ca8:	6f747262 	svcvs	0x00747262
    5cac:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    5cb0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    5cb4:	6f632f78 	svcvs	0x00632f78
    5cb8:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    5cbc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5cc0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5cc4:	68745f65 	ldmdavs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    5cc8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    5ccc:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    5cd0:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    5cd4:	00010063 	andeq	r0, r1, r3, rrx
    5cd8:	5f787400 	svcpl	0x00787400
    5cdc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    5ce0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5ce4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5ce8:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    5cec:	0300682e 	movweq	r6, #2094	; 0x82e
    5cf0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5cf4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    5cf8:	2e646165 	powcssz	f6, f4, f5
    5cfc:	00030068 	andeq	r0, r3, r8, rrx
    5d00:	5f787400 	svcpl	0x00787400
    5d04:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    5d08:	00682e72 	rsbeq	r2, r8, r2, ror lr
    5d0c:	00000003 	andeq	r0, r0, r3
    5d10:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5d14:	002d5002 	eoreq	r5, sp, r2
    5d18:	00dd0310 	sbcseq	r0, sp, r0, lsl r3
    5d1c:	06010601 	streq	r0, [r1], -r1, lsl #12
    5d20:	1313144c 	tstne	r3, #76, 8	; 0x4c000000
    5d24:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    5d28:	15170505 	ldrne	r0, [r7, #-1285]	; 0xfffffafb
    5d2c:	01060805 	tsteq	r6, r5, lsl #16
    5d30:	6e060a05 	vmlavs.f32	s0, s12, s10
    5d34:	01060d05 	tsteq	r6, r5, lsl #26
    5d38:	32100520 	andscc	r0, r0, #32, 10	; 0x8000000
    5d3c:	ba030105 	blt	c6158 <SYSTICK_CYCLES+0x9d119>
    5d40:	09052001 	stmdbeq	r5, {r0, sp}
    5d44:	7ecc0306 	cdpvc	3, 12, cr0, cr12, cr6, {0}
    5d48:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    5d4c:	03cf0337 	biceq	r0, pc, #-603979776	; 0xdc000000
    5d50:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    5d54:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    5d58:	015c0337 	cmpeq	ip, r7, lsr r3
    5d5c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5d60:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    5d64:	21030601 	tstcs	r3, r1, lsl #12
    5d68:	01062201 	tsteq	r6, r1, lsl #4
    5d6c:	09050104 	stmdbeq	r5, {r2, r8}
    5d70:	7ca90306 	stcvc	3, cr0, [r9], #24
    5d74:	06230501 	strteq	r0, [r3], -r1, lsl #10
    5d78:	09052001 	stmdbeq	r5, {r0, sp}
    5d7c:	02043f06 	andeq	r3, r4, #6, 30
    5d80:	c0033705 	andgt	r3, r3, r5, lsl #14
    5d84:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    5d88:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    5d8c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5d90:	017cbe03 	cmneq	ip, r3, lsl #28
    5d94:	06150513 			; <UNDEFINED> instruction: 0x06150513
    5d98:	06090501 	streq	r0, [r9], -r1, lsl #10
    5d9c:	1805132f 	stmdane	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    5da0:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    5da4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    5da8:	10051321 	andne	r1, r5, r1, lsr #6
    5dac:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5db0:	2509051b 	strcs	r0, [r9, #-1307]	; 0xfffffae5
    5db4:	02000d05 	andeq	r0, r0, #320	; 0x140
    5db8:	03060204 	movweq	r0, #25092	; 0x6204
    5dbc:	19052034 	stmdbne	r5, {r2, r4, r5, sp}
    5dc0:	02040200 	andeq	r0, r4, #0, 4
    5dc4:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    5dc8:	02040200 	andeq	r0, r4, #0, 4
    5dcc:	2e4c0306 	cdpcs	3, 4, cr0, cr12, cr6, {0}
    5dd0:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    5dd4:	01060204 	tsteq	r6, r4, lsl #4
    5dd8:	02001f05 	andeq	r1, r0, #5, 30
    5ddc:	20060104 	andcs	r0, r6, r4, lsl #2
    5de0:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    5de4:	01060104 	tsteq	r6, r4, lsl #2
    5de8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5dec:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    5df0:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    5df4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    5df8:	0536060d 	ldreq	r0, [r6, #-1549]!	; 0xfffff9f3
    5dfc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    5e00:	0528060d 	streq	r0, [r8, #-1549]!	; 0xfffff9f3
    5e04:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    5e08:	11052010 	tstne	r5, r0, lsl r0
    5e0c:	2f053106 	svccs	0x00053106
    5e10:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5e14:	36200520 	strtcc	r0, [r0], -r0, lsr #10
    5e18:	051d2105 	ldreq	r2, [sp, #-261]	; 0xfffffefb
    5e1c:	0528060d 	streq	r0, [r8, #-1549]!	; 0xfffff9f3
    5e20:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    5e24:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    5e28:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    5e2c:	20052014 	andcs	r2, r5, r4, lsl r0
    5e30:	1d210536 	cfstr32ne	mvfx0, [r1, #-216]!	; 0xffffff28
    5e34:	06090520 	streq	r0, [r9], -r0, lsr #10
    5e38:	04200c03 	strteq	r0, [r0], #-3075	; 0xfffff3fd
    5e3c:	03370502 	teqeq	r7, #8388608	; 0x800000
    5e40:	05010389 	streq	r0, [r1, #-905]	; 0xfffffc77
    5e44:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5e48:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    5e4c:	0105015c 	tsteq	r5, ip, asr r1
    5e50:	16050514 			; <UNDEFINED> instruction: 0x16050514
    5e54:	06010630 			; <UNDEFINED> instruction: 0x06010630
    5e58:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    5e5c:	01040106 	tsteq	r4, r6, lsl #2
    5e60:	03060905 	movweq	r0, #26885	; 0x6905
    5e64:	05017cef 	streq	r7, [r1, #-3311]	; 0xfffff311
    5e68:	20010623 	andcs	r0, r1, r3, lsr #12
    5e6c:	3f060905 	svccc	0x00060905
    5e70:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5e74:	0102fa03 	tsteq	r2, r3, lsl #20	; <UNPREDICTABLE>
    5e78:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    5e7c:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    5e80:	84030609 	strhi	r0, [r3], #-1545	; 0xfffff9f7
    5e84:	0531017d 	ldreq	r0, [r1, #-381]!	; 0xfffffe83
    5e88:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5e8c:	0536060e 	ldreq	r0, [r6, #-1550]!	; 0xfffff9f2
    5e90:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5e94:	0536060e 	ldreq	r0, [r6, #-1550]!	; 0xfffff9f2
    5e98:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5e9c:	0544060e 	strbeq	r0, [r4, #-1550]	; 0xfffff9f2
    5ea0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5ea4:	0552060e 	ldrbeq	r0, [r2, #-1550]	; 0xfffff9f2
    5ea8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5eac:	0544060e 	strbeq	r0, [r4, #-1550]	; 0xfffff9f2
    5eb0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5eb4:	0544060e 	strbeq	r0, [r4, #-1550]	; 0xfffff9f2
    5eb8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5ebc:	0c03060d 	stceq	6, cr0, [r3], {13}
    5ec0:	1005313c 	andne	r3, r5, ip, lsr r1
    5ec4:	0c050106 	stfeqs	f0, [r5], {6}
    5ec8:	3c7eda03 			; <UNDEFINED> instruction: 0x3c7eda03
    5ecc:	03060d05 	movweq	r0, #27909	; 0x6d05
    5ed0:	042001af 	strteq	r0, [r0], #-431	; 0xfffffe51
    5ed4:	03370502 	teqeq	r7, #8388608	; 0x800000
    5ed8:	050101dd 	streq	r0, [r1, #-477]	; 0xfffffe23
    5edc:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5ee0:	01062f13 	tsteq	r6, r3, lsl pc
    5ee4:	11050104 	tstne	r5, r4, lsl #2
    5ee8:	017e9f03 	cmneq	lr, r3, lsl #30
    5eec:	20100520 	andscs	r0, r0, r0, lsr #10
    5ef0:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    5ef4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5ef8:	0101d903 	tsteq	r1, r3, lsl #18
    5efc:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5f00:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    5f04:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5f08:	7ea30315 	mcrvc	3, 5, r0, cr3, cr5, {0}
    5f0c:	3c140501 	cfldr32cc	mvfx0, [r4], {1}
    5f10:	03060505 	movweq	r0, #25861	; 0x6505
    5f14:	08053c0b 	stmdaeq	r5, {r0, r1, r3, sl, fp, ip, sp}
    5f18:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5f1c:	13053206 	movwne	r3, #20998	; 0x5206
    5f20:	2ee40106 	cdpcs	1, 14, cr0, cr4, cr6, {0}
    5f24:	68031805 	stmdavs	r3, {r0, r2, fp, ip}
    5f28:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    5f2c:	202e7edd 	ldrdcs	r7, [lr], -sp	; <UNPREDICTABLE>
    5f30:	e4031405 	str	r1, [r3], #-1029	; 0xfffffbfb
    5f34:	36362000 	ldrtcc	r2, [r6], -r0
    5f38:	36363636 			; <UNDEFINED> instruction: 0x36363636
    5f3c:	1c031c05 	stcne	12, cr1, [r3], {5}
    5f40:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5f44:	05201103 	streq	r1, [r0, #-259]!	; 0xfffffefd
    5f48:	0201060b 	andeq	r0, r1, #11534336	; 0xb00000
    5f4c:	0101000e 	tsteq	r1, lr
    5f50:	00000082 	andeq	r0, r0, r2, lsl #1
    5f54:	00360003 	eorseq	r0, r6, r3
    5f58:	01020000 	mrseq	r0, (UNDEF: 2)
    5f5c:	000d0efb 	strdeq	r0, [sp], -fp
    5f60:	01010101 	tsteq	r1, r1, lsl #2
    5f64:	01000000 	mrseq	r0, (UNDEF: 0)
    5f68:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5f6c:	6174732f 	cmnvs	r4, pc, lsr #6
    5f70:	70757472 	rsbsvc	r7, r5, r2, ror r4
    5f74:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    5f78:	74730000 	ldrbtvc	r0, [r3], #-0
    5f7c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    5f80:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    5f84:	334d434d 	movtcc	r4, #54093	; 0xd34d
    5f88:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    5f8c:	00000001 	andeq	r0, r0, r1
    5f90:	b8020500 	stmdalt	r2, {r8, sl}
    5f94:	0310002e 	tsteq	r0, #46	; 0x2e
    5f98:	210100d3 	ldrdcs	r0, [r1, -r3]
    5f9c:	362f2130 			; <UNDEFINED> instruction: 0x362f2130
    5fa0:	21232130 			; <UNDEFINED> instruction: 0x21232130
    5fa4:	21212121 			; <UNDEFINED> instruction: 0x21212121
    5fa8:	21212123 			; <UNDEFINED> instruction: 0x21212123
    5fac:	23212221 			; <UNDEFINED> instruction: 0x23212221
    5fb0:	21212321 			; <UNDEFINED> instruction: 0x21212321
    5fb4:	23212121 			; <UNDEFINED> instruction: 0x23212121
    5fb8:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    5fbc:	0e032321 	cdpeq	3, 0, cr2, cr3, cr1, {1}
    5fc0:	2009032e 	andcs	r0, r9, lr, lsr #6
    5fc4:	2e7faf03 	cdpcs	15, 7, cr10, cr15, cr3, {0}
    5fc8:	2e0c0331 	mcrcs	3, 0, r0, cr12, cr1, {1}
    5fcc:	2e15032f 	cdpcs	3, 1, cr0, cr5, cr15, {1}
    5fd0:	0002022f 	andeq	r0, r2, pc, lsr #4
    5fd4:	00bb0101 	adcseq	r0, fp, r1, lsl #2
    5fd8:	00030000 	andeq	r0, r3, r0
    5fdc:	0000003e 	andeq	r0, r0, lr, lsr r0
    5fe0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    5fe4:	0101000d 	tsteq	r1, sp
    5fe8:	00000101 	andeq	r0, r0, r1, lsl #2
    5fec:	00000100 	andeq	r0, r0, r0, lsl #2
    5ff0:	732f2e01 			; <UNDEFINED> instruction: 0x732f2e01
    5ff4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    5ff8:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    5ffc:	00006363 	andeq	r6, r0, r3, ror #6
    6000:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6004:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    6008:	7a696c61 	bvc	1a61194 <__RAM_SIZE+0x1961194>
    600c:	6f6c5f65 	svcvs	0x006c5f65
    6010:	656c5f77 	strbvs	r5, [ip, #-3959]!	; 0xfffff089
    6014:	2e6c6576 	mcrcs	5, 3, r6, cr12, cr6, {3}
    6018:	00010073 	andeq	r0, r1, r3, ror r0
    601c:	05000000 	streq	r0, [r0, #-0]
    6020:	002f2802 	eoreq	r2, pc, r2, lsl #16
    6024:	00da0310 	sbcseq	r0, sl, r0, lsl r3
    6028:	21212301 			; <UNDEFINED> instruction: 0x21212301
    602c:	212f232f 			; <UNDEFINED> instruction: 0x212f232f
    6030:	2f212131 	svccs	0x00212131
    6034:	21212123 			; <UNDEFINED> instruction: 0x21212123
    6038:	21212f23 			; <UNDEFINED> instruction: 0x21212f23
    603c:	2f2f232f 	svccs	0x002f232f
    6040:	3221302f 	eorcc	r3, r1, #47	; 0x2f
    6044:	032e0d03 			; <UNDEFINED> instruction: 0x032e0d03
    6048:	09032e0d 	stmdbeq	r3, {r0, r2, r3, r9, sl, fp, sp}
    604c:	0e032f20 	cdpeq	15, 0, cr2, cr3, cr0, {1}
    6050:	2f322420 	svccs	0x00322420
    6054:	03200c03 			; <UNDEFINED> instruction: 0x03200c03
    6058:	21222e0b 			; <UNDEFINED> instruction: 0x21222e0b
    605c:	23233021 			; <UNDEFINED> instruction: 0x23233021
    6060:	232f2121 			; <UNDEFINED> instruction: 0x232f2121
    6064:	2f212121 	svccs	0x00212121
    6068:	2f2e0903 	svccs	0x002e0903
    606c:	2f212321 	svccs	0x00212321
    6070:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    6074:	0b032e0c 	bleq	d18ac <SYSTICK_CYCLES+0xa886d>
    6078:	7ec6032e 	cdpvc	3, 12, cr0, cr6, cr14, {1}
    607c:	32342f2e 	eorscc	r2, r4, #46, 30	; 0xb8
    6080:	0b033534 	bleq	d3558 <SYSTICK_CYCLES+0xaa519>
    6084:	00d9032e 	sbcseq	r0, r9, lr, lsr #6
    6088:	2e0a032e 	cdpcs	3, 0, cr0, cr10, cr14, {1}
    608c:	2e120334 	mrccs	3, 0, r0, cr2, cr4, {1}
    6090:	01000202 	tsteq	r0, r2, lsl #4
    6094:	0000cd01 	andeq	ip, r0, r1, lsl #26
    6098:	5d000300 	stcpl	3, cr0, [r0, #-0]
    609c:	02000000 	andeq	r0, r0, #0
    60a0:	0d0efb01 	vstreq	d15, [lr, #-4]
    60a4:	01010100 	mrseq	r0, (UNDEF: 17)
    60a8:	00000001 	andeq	r0, r0, r1
    60ac:	01000001 	tsteq	r0, r1
    60b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    60b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    60b8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    60bc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    60c0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    60c4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    60c8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    60cc:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    60d0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    60d4:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    60d8:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    60dc:	72732f75 	rsbsvc	r2, r3, #468	; 0x1d4
    60e0:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    60e4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    60e8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    60ec:	6863735f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    60f0:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    60f4:	00532e65 	subseq	r2, r3, r5, ror #28
    60f8:	00000001 	andeq	r0, r0, r1
    60fc:	08020500 	stmdaeq	r2, {r8, sl}
    6100:	03100030 	tsteq	r0, #48	; 0x30
    6104:	2f0100dc 	svccs	0x000100dc
    6108:	2f2f2421 	svccs	0x002f2421
    610c:	2f2f2332 	svccs	0x002f2332
    6110:	03332f2f 	teqeq	r3, #47, 30	; 0xbc
    6114:	21212023 			; <UNDEFINED> instruction: 0x21212023
    6118:	2124242f 			; <UNDEFINED> instruction: 0x2124242f
    611c:	212f302f 			; <UNDEFINED> instruction: 0x212f302f
    6120:	032f2131 			; <UNDEFINED> instruction: 0x032f2131
    6124:	24212e0f 	strtcs	r2, [r1], #-3599	; 0xfffff1f1
    6128:	200c0324 	andcs	r0, ip, r4, lsr #6
    612c:	25242122 	strcs	r2, [r4, #-290]!	; 0xfffffede
    6130:	21212126 			; <UNDEFINED> instruction: 0x21212126
    6134:	1503242f 	strne	r2, [r3, #-1071]	; 0xfffffbd1
    6138:	2f2f2f20 	svccs	0x002f2f20
    613c:	31212f30 			; <UNDEFINED> instruction: 0x31212f30
    6140:	0b03302f 	bleq	d2204 <SYSTICK_CYCLES+0xa91c5>
    6144:	21212220 			; <UNDEFINED> instruction: 0x21212220
    6148:	22201803 	eorcs	r1, r0, #196608	; 0x30000
    614c:	352f2f25 	strcc	r2, [pc, #-3877]!	; 522f <_Min_Stack_Size+0x422f>
    6150:	00c10322 	sbceq	r0, r1, r2, lsr #6
    6154:	d403302e 	strle	r3, [r3], #-46	; 0xffffffd2
    6158:	3a032e7d 	bcc	d1b54 <SYSTICK_CYCLES+0xa8b15>
    615c:	13032f2e 	movwne	r2, #16174	; 0x3f2e
    6160:	0002022e 	andeq	r0, r2, lr, lsr #4
    6164:	008f0101 	addeq	r0, pc, r1, lsl #2
    6168:	00030000 	andeq	r0, r3, r0
    616c:	00000060 	andeq	r0, r0, r0, rrx
    6170:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6174:	0101000d 	tsteq	r1, sp
    6178:	00000101 	andeq	r0, r0, r1, lsl #2
    617c:	00000100 	andeq	r0, r0, r0, lsl #2
    6180:	2f2e2e01 	svccs	0x002e2e01
    6184:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6188:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    618c:	6f747262 	svcvs	0x00747262
    6190:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    6194:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    6198:	6f702f78 	svcvs	0x00702f78
    619c:	2f737472 	svccs	0x00737472
    61a0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    61a4:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 6018 <_Min_Stack_Size+0x5018>
    61a8:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    61ac:	732f756e 			; <UNDEFINED> instruction: 0x732f756e
    61b0:	00006372 	andeq	r6, r0, r2, ror r3
    61b4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 61bc <_Min_Stack_Size+0x51bc>
    61b8:	61657268 	cmnvs	r5, r8, ror #4
    61bc:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    61c0:	5f6b6361 	svcpl	0x006b6361
    61c4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    61c8:	00532e64 	subseq	r2, r3, r4, ror #28
    61cc:	00000001 	andeq	r0, r0, r1
    61d0:	d8020500 	stmdale	r2, {r8, sl}
    61d4:	03100030 	tsteq	r0, #48	; 0x30
    61d8:	210100e5 	smlattcs	r1, r5, r0, r0
    61dc:	2432302f 	ldrtcs	r3, [r2], #-47	; 0xffffffd1
    61e0:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    61e4:	21212121 			; <UNDEFINED> instruction: 0x21212121
    61e8:	21212124 			; <UNDEFINED> instruction: 0x21212124
    61ec:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    61f0:	22252f21 	eorcs	r2, r5, #33, 30	; 0x84
    61f4:	01000102 	tsteq	r0, r2, lsl #2
    61f8:	0000cf01 	andeq	ip, r0, r1, lsl #30
    61fc:	5d000300 	stcpl	3, cr0, [r0, #-0]
    6200:	02000000 	andeq	r0, r0, #0
    6204:	0d0efb01 	vstreq	d15, [lr, #-4]
    6208:	01010100 	mrseq	r0, (UNDEF: 17)
    620c:	00000001 	andeq	r0, r0, r1
    6210:	01000001 	tsteq	r0, r1
    6214:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6218:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    621c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6220:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    6224:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    6228:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    622c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    6230:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    6234:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    6238:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    623c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    6240:	72732f75 	rsbsvc	r2, r3, #468	; 0x1d4
    6244:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    6248:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    624c:	5f72656d 	svcpl	0x0072656d
    6250:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    6254:	70757272 	rsbsvc	r7, r5, r2, ror r2
    6258:	00532e74 	subseq	r2, r3, r4, ror lr
    625c:	00000001 	andeq	r0, r0, r1
    6260:	18020500 	stmdane	r2, {r8, sl}
    6264:	03100031 	tsteq	r0, #49	; 0x31
    6268:	210100d5 	ldrdcs	r0, [r1, -r5]
    626c:	21262f21 			; <UNDEFINED> instruction: 0x21262f21
    6270:	252f2621 	strcs	r2, [pc, #-1569]!	; 5c57 <_Min_Stack_Size+0x4c57>
    6274:	032f2126 			; <UNDEFINED> instruction: 0x032f2126
    6278:	2121200a 			; <UNDEFINED> instruction: 0x2121200a
    627c:	2f212621 	svccs	0x00212621
    6280:	200a0321 	andcs	r0, sl, r1, lsr #6
    6284:	21212133 			; <UNDEFINED> instruction: 0x21212133
    6288:	03242125 			; <UNDEFINED> instruction: 0x03242125
    628c:	21212009 			; <UNDEFINED> instruction: 0x21212009
    6290:	25212122 	strcs	r2, [r1, #-290]!	; 0xfffffede
    6294:	26212127 	strtcs	r2, [r1], -r7, lsr #2
    6298:	212e0903 			; <UNDEFINED> instruction: 0x212e0903
    629c:	212f2621 			; <UNDEFINED> instruction: 0x212f2621
    62a0:	21212121 			; <UNDEFINED> instruction: 0x21212121
    62a4:	2f212121 	svccs	0x00212121
    62a8:	35262121 	strcc	r2, [r6, #-289]!	; 0xfffffedf
    62ac:	7ee1032f 	cdpvc	3, 14, cr0, cr1, cr15, {1}
    62b0:	2e09032e 	cdpcs	3, 0, cr0, cr9, cr14, {1}
    62b4:	032e1403 			; <UNDEFINED> instruction: 0x032e1403
    62b8:	09032e0c 	stmdbeq	r3, {r2, r3, r9, sl, fp, sp}
    62bc:	2e12032e 	cdpcs	3, 1, cr0, cr2, cr14, {1}
    62c0:	2e3a0336 	mrccs	3, 1, r0, cr10, cr6, {1}
    62c4:	02303031 	eorseq	r3, r0, #49	; 0x31
    62c8:	01010002 	tsteq	r1, r2

Disassembly of section .debug_str:

00000000 <.debug_str>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 8 <__STACKSEAL_SIZE+0x8>
       4:	61657268 	cmnvs	r5, r8, ror #4
}
       8:	776f5f64 	strbvc	r5, [pc, -r4, ror #30]!
       c:	5f64656e 	svcpl	0x0064656e
      10:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
      14:	696c5f78 	stmdbvs	ip!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
        if(ch == '\n' || it >= size) {
      18:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
}
      1c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
      20:	5f72656d 	svcpl	0x0072656d
      24:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
      28:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
      2c:	7463615f 	strbtvc	r6, [r3], #-351	; 0xfffffea1
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	5f657669 	svcpl	0x00657669
      34:	76657270 			; <UNDEFINED> instruction: 0x76657270
        _tx_thread_system_ni_resume(thread_ptr);
      38:	73756f69 	cmnvc	r5, #420	; 0x1a4
      3c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
}
      40:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
      44:	2e303120 	rsfcssp	f3, f0, f0
      48:	20312e33 	eorscs	r2, r1, r3, lsr lr
      4c:	31323032 	teqcc	r2, r2, lsr r0
      50:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
      54:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
      58:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
      5c:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
      60:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
      64:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
      68:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
      6c:	2033336d 	eorscs	r3, r3, sp, ror #6
      70:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      74:	20626d75 	rsbcs	r6, r2, r5, ror sp
      78:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
      7c:	70663d75 	rsbvc	r3, r6, r5, ror sp
      80:	732d3576 			; <UNDEFINED> instruction: 0x732d3576
      84:	31642d70 	smccc	17104	; 0x42d0
      88:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
      8c:	616f6c66 	cmnvs	pc, r6, ror #24
      90:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
      94:	61683d69 	cmnvs	r8, r9, ror #26
      98:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
      9c:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
      a0:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
      a4:	2d38766d 	ldccs	6, cr7, [r8, #-436]!	; 0xfffffe4c
      a8:	616d2e6d 	cmnvs	sp, sp, ror #28
      ac:	642b6e69 	strtvs	r6, [fp], #-3689	; 0xfffff197
      b0:	662b7073 			; <UNDEFINED> instruction: 0x662b7073
      b4:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
      b8:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
      bc:	66726177 			; <UNDEFINED> instruction: 0x66726177
      c0:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
      c4:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
      c8:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
      cc:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
      d0:	6f697463 	svcvs	0x00697463
      d4:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
      d8:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
      dc:	6f697463 	svcvs	0x00697463
      e0:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
      e4:	6f697463 	svcvs	0x00697463
      e8:	7400736e 	strvc	r7, [r0], #-878	; 0xfffffc92
      ec:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
      f0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
      f4:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
      f8:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
      fc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     100:	6f687365 	svcvs	0x00687365
     104:	7400646c 	strvc	r6, [r0], #-1132	; 0xfffffb94
     108:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     10c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     110:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     114:	705f7972 	subsvc	r7, pc, r2, ror r9	; <UNPREDICTABLE>
     118:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
     11c:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
     120:	5f787400 	svcpl	0x00787400
     124:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     128:	726f5f78 	rsbvc	r5, pc, #120, 30	; 0x1e0
     12c:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
     130:	705f6c61 	subsvc	r6, pc, r1, ror #24
     134:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     138:	00797469 	rsbseq	r7, r9, r9, ror #8
     13c:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
     140:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     144:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     148:	645f6e6f 	ldrbvs	r6, [pc], #-3695	; 150 <__STACKSEAL_SIZE+0x150>
     14c:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
     150:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     154:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     158:	5f646165 	svcpl	0x00646165
     15c:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
     160:	78740079 	ldmdavc	r4!, {r0, r3, r4, r5, r6}^
     164:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     168:	695f7865 	ldmdbvs	pc, {r0, r2, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     16c:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     170:	74007469 	strvc	r7, [r0], #-1129	; 0xfffffb97
     174:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     178:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     17c:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
     180:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
     184:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     188:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     18c:	5f787400 	svcpl	0x00787400
     190:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     194:	64695f78 	strbtvs	r5, [r9], #-3960	; 0xfffff088
     198:	5f787400 	svcpl	0x00787400
     19c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     1a0:	725f6461 	subsvc	r6, pc, #1627389952	; 0x61000000
     1a4:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     1a8:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     1ac:	756f6976 	strbvc	r6, [pc, #-2422]!	; fffff83e <__RAM_segment_used_end__+0xc7eff83e>
     1b0:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     1b4:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
     1b8:	0079726f 	rsbseq	r7, r9, pc, ror #4
     1bc:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1c4 <__STACKSEAL_SIZE+0x1c4>
     1c0:	61657268 	cmnvs	r5, r8, ror #4
     1c4:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     1c8:	5f6b6361 	svcpl	0x006b6361
     1cc:	00727470 	rsbseq	r7, r2, r0, ror r4
     1d0:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 8 <__STACKSEAL_SIZE+0x8>
     1d4:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     1d8:	6769685f 			; <UNDEFINED> instruction: 0x6769685f
     1dc:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
     1e0:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
     1e4:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     1e8:	61775f79 	cmnvs	r7, r9, ror pc
     1ec:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     1f0:	78740067 	ldmdavc	r4!, {r0, r1, r2, r5, r6}^
     1f4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     1f8:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     1fc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     200:	5f6c616e 	svcpl	0x006c616e
     204:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     208:	5f74756f 	svcpl	0x0074756f
     20c:	61726170 	cmnvs	r2, r0, ror r1
     210:	7874006d 	ldmdavc	r4!, {r0, r2, r3, r5, r6}^
     214:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     218:	5f646165 	svcpl	0x00646165
     21c:	70737573 	rsbsvc	r7, r3, r3, ror r5
     220:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
     224:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     228:	6f697665 	svcvs	0x00697665
     22c:	6c007375 	stcvs	3, cr7, [r0], {117}	; 0x75
     230:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     234:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     238:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     23c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     240:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     244:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     248:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     24c:	5f646165 	svcpl	0x00646165
     250:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     254:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     258:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     25c:	5f646165 	svcpl	0x00646165
     260:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     264:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     268:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
     26c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     270:	6f687365 	svcvs	0x00687365
     274:	7400646c 	strvc	r6, [r0], #-1132	; 0xfffffb94
     278:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     27c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     280:	6e776f5f 	mrcvs	15, 3, r6, cr7, cr15, {2}
     284:	6d5f6465 	cfldrdvs	mvd6, [pc, #-404]	; f8 <__STACKSEAL_SIZE+0xf8>
     288:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     28c:	756f635f 	strbvc	r6, [pc, #-863]!	; ffffff35 <__RAM_segment_used_end__+0xc7efff35>
     290:	6600746e 	strvs	r7, [r0], -lr, ror #8
     294:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
     298:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
     29c:	5f646573 	svcpl	0x00646573
     2a0:	6f6d656d 	svcvs	0x006d656d
     2a4:	74007972 	strvc	r7, [r0], #-2418	; 0xfffff68e
     2a8:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     2ac:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     2b0:	5f6c6f6f 	svcpl	0x006c6f6f
     2b4:	61657263 	cmnvs	r5, r3, ror #4
     2b8:	5f646574 	svcpl	0x00646574
     2bc:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     2c0:	5f787400 	svcpl	0x00787400
     2c4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     2c8:	755f6461 	ldrbvc	r6, [pc, #-1121]	; fffffe6f <__RAM_segment_used_end__+0xc7effe6f>
     2cc:	5f726573 	svcpl	0x00726573
     2d0:	6f697270 	svcvs	0x00697270
     2d4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     2d8:	5f787400 	svcpl	0x00787400
     2dc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     2e0:	705f6461 	subsvc	r6, pc, r1, ror #8
     2e4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     2e8:	00797469 	rsbseq	r7, r9, r9, ror #8
     2ec:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2f4 <__STACKSEAL_SIZE+0x2f4>
     2f0:	61657268 	cmnvs	r5, r8, ror #4
     2f4:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     2f8:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     2fc:	6c635f64 	stclvs	15, cr5, [r3], #-400	; 0xfffffe70
     300:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
     304:	78740070 	ldmdavc	r4!, {r4, r5, r6}^
     308:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     30c:	6f705f65 	svcvs	0x00705f65
     310:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     314:	00657a69 	rsbeq	r7, r5, r9, ror #20
     318:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     31c:	00726574 	rsbseq	r6, r2, r4, ror r5
     320:	745f7874 	ldrbvc	r7, [pc], #-2164	; 328 <__STACKSEAL_SIZE+0x328>
     324:	61657268 	cmnvs	r5, r8, ror #4
     328:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
     32c:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
     330:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
     334:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     338:	74007974 	strvc	r7, [r0], #-2420	; 0xfffff68c
     33c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     340:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     344:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     348:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
     34c:	48545f58 	ldmdami	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     350:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     354:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     358:	00544355 	subseq	r4, r4, r5, asr r3
     35c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 364 <__STACKSEAL_SIZE+0x364>
     360:	61657268 	cmnvs	r5, r8, ror #4
     364:	63735f64 	cmnvs	r3, #100, 30	; 0x190
     368:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
     36c:	685f656c 	ldmdavs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     370:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
     374:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     378:	5f657479 	svcpl	0x00657479
     37c:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1c4 <__STACKSEAL_SIZE+0x1c4>
     380:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     384:	61480065 	cmpvs	r8, r5, rrx
     388:	61466472 	hvcvs	26178	; 0x6642
     38c:	5f746c75 	svcpl	0x00746c75
     390:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     394:	5f72656c 	svcpl	0x0072656c
     398:	6567654c 	strbvs	r6, [r7, #-1356]!	; 0xfffffab4
     39c:	0079636e 	rsbseq	r6, r9, lr, ror #6
     3a0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3a8 <__STACKSEAL_SIZE+0x3a8>
     3a4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     3a8:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
     3ac:	616e7265 	cmnvs	lr, r5, ror #4
     3b0:	65725f6c 	ldrbvs	r5, [r2, #-3948]!	; 0xfffff094
     3b4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     3b8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
     3bc:	5f657a69 	svcpl	0x00657a69
     3c0:	6b636974 	blvs	18da998 <__RAM_SIZE+0x17da998>
     3c4:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     3c8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     3cc:	5f646165 	svcpl	0x00646165
     3d0:	69646461 	stmdbvs	r4!, {r0, r5, r6, sl, sp, lr}^
     3d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     3d8:	735f6c61 	cmpvc	pc, #24832	; 0x6100
     3dc:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     3e0:	695f646e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
     3e4:	006f666e 	rsbeq	r6, pc, lr, ror #12
     3e8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3f0 <__STACKSEAL_SIZE+0x3f0>
     3ec:	61657268 	cmnvs	r5, r8, ror #4
     3f0:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     3f4:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     3f8:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     3fc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     400:	5f787400 	svcpl	0x00787400
     404:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     408:	6f6f705f 	svcvs	0x006f705f
     40c:	64695f6c 	strbtvs	r5, [r9], #-3948	; 0xfffff094
     410:	5f787400 	svcpl	0x00787400
     414:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     418:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     41c:	6b636174 	blvs	18d89f4 <__RAM_SIZE+0x17d89f4>
     420:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
     424:	5f787400 	svcpl	0x00787400
     428:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     42c:	776f5f78 			; <UNDEFINED> instruction: 0x776f5f78
     430:	5f64656e 	svcpl	0x0064656e
     434:	76657270 			; <UNDEFINED> instruction: 0x76657270
     438:	73756f69 	cmnvc	r5, #420	; 0x1a4
     43c:	5f787400 	svcpl	0x00787400
     440:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     444:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     448:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     44c:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 454 <STACK_SIZE+0x54>
     450:	6f656d69 	svcvs	0x00656d69
     454:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     458:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     45c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     460:	425f5854 	subsmi	r5, pc, #84, 16	; 0x540000
     464:	5f455459 	svcpl	0x00455459
     468:	4c4f4f50 	mcrrmi	15, 5, r4, pc, cr0
     46c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     470:	00544355 	subseq	r4, r4, r5, asr r3
     474:	425f5854 	subsmi	r5, pc, #84, 16	; 0x540000
     478:	5f455459 	svcpl	0x00455459
     47c:	4c4f4f50 	mcrrmi	15, 5, r4, pc, cr0
     480:	5f787400 	svcpl	0x00787400
     484:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     488:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     48c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     490:	6f69736e 	svcvs	0x0069736e
     494:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
     498:	6e657571 	mcrvs	5, 3, r7, cr5, cr1, {3}
     49c:	5f006563 	svcpl	0x00006563
     4a0:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
     4a4:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
     4a8:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
     4ac:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     4b0:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     4b4:	6f705f65 	svcvs	0x00705f65
     4b8:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     4bc:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     4c0:	6f69736e 	svcvs	0x0069736e
     4c4:	696c5f6e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     4c8:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
     4cc:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     4d0:	5f786574 	svcpl	0x00786574
     4d4:	656e776f 	strbvs	r7, [lr, #-1903]!	; 0xfffff891
     4d8:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     4dc:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
     4e0:	6e655f6b 	cdpvs	15, 6, cr5, cr5, cr11, {3}
     4e4:	00797274 	rsbseq	r7, r9, r4, ror r2
     4e8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     4ec:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     4f0:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
     4f4:	2f2e0074 	svccs	0x002e0074
     4f8:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     4fc:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     500:	2f6e6f69 	svccs	0x006e6f69
     504:	6e69616d 	powvsez	f6, f1, #5.0
     508:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
     50c:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     510:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     514:	5f6c6f6f 	svcpl	0x006c6f6f
     518:	70737573 	rsbsvc	r7, r3, r3, ror r5
     51c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
     520:	6f635f64 	svcvs	0x00635f64
     524:	00746e75 	rsbseq	r6, r4, r5, ror lr
     528:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     52c:	5f657479 	svcpl	0x00657479
     530:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 378 <__STACKSEAL_SIZE+0x378>
     534:	6174735f 	cmnvs	r4, pc, asr r3
     538:	54007472 	strpl	r7, [r0], #-1138	; 0xfffffb8e
     53c:	49545f58 	ldmdbmi	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     540:	5f52454d 	svcpl	0x0052454d
     544:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
     548:	4c414e52 	mcrrmi	14, 5, r4, r1, cr2
     54c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     550:	00544355 	subseq	r4, r4, r5, asr r3
     554:	745f7874 	ldrbvc	r7, [pc], #-2164	; 55c <STACK_SIZE+0x15c>
     558:	61657268 	cmnvs	r5, r8, ror #4
     55c:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     560:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     564:	706f5f64 	rsbvc	r5, pc, r4, ror #30
     568:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     56c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
     570:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     574:	5f6b636f 	svcpl	0x006b636f
     578:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
     57c:	00657361 	rsbeq	r7, r5, r1, ror #6
     580:	6578745f 	ldrbvs	r7, [r8, #-1119]!	; 0xfffffba1
     584:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     588:	6f705f65 	svcvs	0x00705f65
     58c:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
     590:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     594:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     598:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     59c:	5f646165 	svcpl	0x00646165
     5a0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
     5a4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
     5a8:	68745f65 	ldmdavs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     5ac:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     5b0:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     5b4:	00657461 	rsbeq	r7, r5, r1, ror #8
     5b8:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 3f0 <__STACKSEAL_SIZE+0x3f0>
     5bc:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     5c0:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     5c4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
     5c8:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
     5cc:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     5d0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     5d4:	5f646165 	svcpl	0x00646165
     5d8:	70737573 	rsbsvc	r7, r3, r3, ror r5
     5dc:	5f646e65 	svcpl	0x00646e65
     5e0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
     5e4:	5f6c6f72 	svcpl	0x006c6f72
     5e8:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     5ec:	7874006b 	ldmdavc	r4!, {r0, r1, r3, r5, r6}^
     5f0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     5f4:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     5f8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     5fc:	5f6c616e 	svcpl	0x006c616e
     600:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     604:	6165685f 	cmnvs	r5, pc, asr r8
     608:	78740064 	ldmdavc	r4!, {r2, r5, r6}^
     60c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     610:	5f646165 	svcpl	0x00646165
     614:	5f77656e 	svcpl	0x0077656e
     618:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     61c:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
     620:	6c006563 	cfstr32vs	mvfx6, [r0], {99}	; 0x63
     624:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     628:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
     62c:	5400656c 	strpl	r6, [r0], #-1388	; 0xfffffa94
     630:	49545f58 	ldmdbmi	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     634:	5f52454d 	svcpl	0x0052454d
     638:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
     63c:	4c414e52 	mcrrmi	14, 5, r4, r1, cr2
     640:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     644:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     648:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     64c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     650:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     654:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     658:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     65c:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     660:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     664:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     668:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     66c:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     670:	706d5c73 	rsbvc	r5, sp, r3, ror ip
     674:	612d3273 			; <UNDEFINED> instruction: 0x612d3273
     678:	3530356e 	ldrcc	r3, [r0, #-1390]!	; 0xfffffa92
     67c:	7268745c 	rsbvc	r7, r8, #92, 8	; 0x5c000000
     680:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     684:	5f787400 	svcpl	0x00787400
     688:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     68c:	72635f78 	rsbvc	r5, r3, #120, 30	; 0x1e0
     690:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     694:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     698:	6f697665 	svcvs	0x00697665
     69c:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     6a0:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     6a4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     6a8:	6165725f 	cmnvs	r5, pc, asr r2
     6ac:	6e5f7964 	vnmlavs.f16	s15, s30, s9	; <UNPREDICTABLE>
     6b0:	00747865 	rsbseq	r7, r4, r5, ror #16
     6b4:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     6b8:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
     6bc:	61750074 	cmnvs	r5, r4, ror r0
     6c0:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     6c4:	0074696e 	rsbseq	r6, r4, lr, ror #18
     6c8:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 500 <STACK_SIZE+0x100>
     6cc:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     6d0:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     6d4:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     6d8:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
     6dc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     6e0:	5f787400 	svcpl	0x00787400
     6e4:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     6e8:	776f5f78 			; <UNDEFINED> instruction: 0x776f5f78
     6ec:	7372656e 	cmnvc	r2, #461373440	; 0x1b800000
     6f0:	5f706968 	svcpl	0x00706968
     6f4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     6f8:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     6fc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     700:	5f646165 	svcpl	0x00646165
     704:	70737573 	rsbsvc	r7, r3, r3, ror r5
     708:	5f646e65 	svcpl	0x00646e65
     70c:	6f666e69 	svcvs	0x00666e69
     710:	4f4c5500 	svcmi	0x004c5500
     714:	7400474e 	strvc	r4, [r0], #-1870	; 0xfffff8b2
     718:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     71c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     720:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     724:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     728:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
     72c:	00747865 	rsbseq	r7, r4, r5, ror #16
     730:	745f7874 	ldrbvc	r7, [pc], #-2164	; 738 <STACK_SIZE+0x338>
     734:	61657268 	cmnvs	r5, r8, ror #4
     738:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     73c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     740:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
     744:	5f787400 	svcpl	0x00787400
     748:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 590 <STACK_SIZE+0x190>
     74c:	5f787400 	svcpl	0x00787400
     750:	6b736174 	blvs	1cd8d28 <__RAM_SIZE+0x1bd8d28>
     754:	5f787400 	svcpl	0x00787400
     758:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     75c:	6f6f705f 	svcvs	0x006f705f
     760:	76615f6c 	strbtvc	r5, [r1], -ip, ror #30
     764:	616c6961 	cmnvs	ip, r1, ror #18
     768:	00656c62 	rsbeq	r6, r5, r2, ror #24
     76c:	6578745f 	ldrbvs	r7, [r8, #-1119]!	; 0xfffffba1
     770:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     774:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
     778:	61636f6c 	cmnvs	r3, ip, ror #30
     77c:	55006574 	strpl	r6, [r0, #-1396]	; 0xfffffa8c
     780:	00544e49 	subseq	r4, r4, r9, asr #28
     784:	745f7874 	ldrbvc	r7, [pc], #-2164	; 78c <STACK_SIZE+0x38c>
     788:	61657268 	cmnvs	r5, r8, ror #4
     78c:	75725f64 	ldrbvc	r5, [r2, #-3940]!	; 0xfffff09c
     790:	6f635f6e 	svcvs	0x00635f6e
     794:	00746e75 	rsbseq	r6, r4, r5, ror lr
     798:	4d5f5854 	ldclmi	8, cr5, [pc, #-336]	; 650 <STACK_SIZE+0x250>
     79c:	58455455 	stmdapl	r5, {r0, r2, r4, r6, sl, ip, lr}^
     7a0:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     7a4:	00544355 	subseq	r4, r4, r5, asr r3
     7a8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 7b0 <STACK_SIZE+0x3b0>
     7ac:	61657268 	cmnvs	r5, r8, ror #4
     7b0:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
     7b4:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
     7b8:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
     7bc:	616c5f65 	cmnvs	ip, r5, ror #30
     7c0:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     7c4:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
     7c8:	6e697470 	mcrvs	4, 3, r7, cr9, cr0, {3}
     7cc:	68745f67 	ldmdavs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     7d0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     7d4:	5f787400 	svcpl	0x00787400
     7d8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     7dc:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
     7e0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     7e4:	705f6465 	subsvc	r6, pc, r5, ror #8
     7e8:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     7ec:	0073756f 	rsbseq	r7, r3, pc, ror #10
     7f0:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     7f4:	5f657479 	svcpl	0x00657479
     7f8:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 640 <STACK_SIZE+0x240>
     7fc:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     800:	65440074 	strbvs	r0, [r4, #-116]	; 0xffffff8c
     804:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     808:	61485f74 	hvcvs	34292	; 0x85f4
     80c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     810:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     814:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     818:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     81c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     820:	5f6c616e 	svcpl	0x006c616e
     824:	616d6572 	smcvs	54866	; 0xd652
     828:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
     82c:	69745f67 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     830:	00736b63 	rsbseq	r6, r3, r3, ror #22
     834:	5f78745f 	svcpl	0x0078745f
     838:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     83c:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     840:	6b5f657a 	blvs	17d9e30 <__RAM_SIZE+0x16d9e30>
     844:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     848:	6e655f6c 	cdpvs	15, 6, cr5, cr5, cr12, {3}
     84c:	00726574 	rsbseq	r6, r2, r4, ror r5
     850:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     854:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     858:	61686320 	cmnvs	r8, r0, lsr #6
     85c:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     860:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     864:	6f705f65 	svcvs	0x00705f65
     868:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
     86c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     870:	705f6465 	subsvc	r6, pc, r5, ror #8
     874:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     878:	0073756f 	rsbseq	r7, r3, pc, ror #10
     87c:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 6b4 <STACK_SIZE+0x2b4>
     880:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     884:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     888:	745f0065 	ldrbvc	r0, [pc], #-101	; 890 <__Vectors_Size+0xd0>
     88c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     890:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     894:	656c735f 	strbvs	r7, [ip, #-863]!	; 0xfffffca1
     898:	74007065 	strvc	r7, [r0], #-101	; 0xffffff9b
     89c:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     8a0:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     8a4:	5f6c6f6f 	svcpl	0x006c6f6f
     8a8:	67617266 	strbvs	r7, [r1, -r6, ror #4]!
     8ac:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     8b0:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     8b4:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     8b8:	735f7865 	cmpvc	pc, #6619136	; 0x650000
     8bc:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     8c0:	6f69736e 	svcvs	0x0069736e
     8c4:	696c5f6e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     8c8:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
     8cc:	74735f78 	ldrbtvc	r5, [r3], #-3960	; 0xfffff088
     8d0:	006b6361 	rsbeq	r6, fp, r1, ror #6
     8d4:	545f5854 	ldrbpl	r5, [pc], #-2132	; 8dc <__Vectors_Size+0x11c>
     8d8:	41455248 	cmpmi	r5, r8, asr #4
     8dc:	43550044 	cmpmi	r5, #68	; 0x44
     8e0:	00524148 	subseq	r4, r2, r8, asr #2
     8e4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 8ec <__Vectors_Size+0x12c>
     8e8:	61657268 	cmnvs	r5, r8, ror #4
     8ec:	72635f64 	rsbvc	r5, r3, #100, 30	; 0x190
     8f0:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     8f4:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     8f8:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     8fc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     900:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     904:	6174735f 	cmnvs	r4, pc, asr r3
     908:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
     90c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     910:	5f787400 	svcpl	0x00787400
     914:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     918:	695f6461 	ldmdbvs	pc, {r0, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
     91c:	68730064 	ldmdavs	r3!, {r2, r5, r6}^
     920:	2074726f 	rsbscs	r7, r4, pc, ror #4
     924:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     928:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     92c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     930:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     934:	5f5f006e 	svcpl	0x005f006e
     938:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     93c:	74005f5f 	strvc	r5, [r0], #-3935	; 0xfffff0a1
     940:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     944:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     948:	6174735f 	cmnvs	r4, pc, asr r3
     94c:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
     950:	00657a69 	rsbeq	r7, r5, r9, ror #20
     954:	745f7874 	ldrbvc	r7, [pc], #-2164	; 95c <__Vectors_Size+0x19c>
     958:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     95c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
     960:	616e7265 	cmnvs	lr, r5, ror #4
     964:	63615f6c 	cmnvs	r1, #108, 30	; 0x1b0
     968:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
     96c:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
     970:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     974:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     978:	6f705f65 	svcvs	0x00705f65
     97c:	6f5f6c6f 	svcvs	0x005f6c6f
     980:	72656e77 	rsbvc	r6, r5, #1904	; 0x770
     984:	73657400 	cmnvc	r5, #0, 8
     988:	74003074 	strvc	r3, [r0], #-116	; 0xffffff8c
     98c:	31747365 	cmncc	r4, r5, ror #6
     990:	73657400 	cmnvc	r5, #0, 8
     994:	74003274 	strvc	r3, [r0], #-628	; 0xfffffd8c
     998:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
     99c:	73657400 	cmnvc	r5, #0, 8
     9a0:	74003474 	strvc	r3, [r0], #-1140	; 0xfffffb8c
     9a4:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
     9a8:	5f787400 	svcpl	0x00787400
     9ac:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     9b0:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     9b4:	6b636174 	blvs	18d8f8c <__RAM_SIZE+0x17d8f8c>
     9b8:	6769685f 			; <UNDEFINED> instruction: 0x6769685f
     9bc:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
     9c0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
     9c4:	5f787400 	svcpl	0x00787400
     9c8:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     9cc:	776f5f78 			; <UNDEFINED> instruction: 0x776f5f78
     9d0:	5f64656e 	svcpl	0x0064656e
     9d4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     9d8:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     9dc:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     9e0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     9e4:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     9e8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     9ec:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     9f0:	334d434d 	movtcc	r4, #54093	; 0xd34d
     9f4:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     9f8:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     9fc:	5f38746e 	svcpl	0x0038746e
     a00:	54530074 	ldrbpl	r0, [r3], #-116	; 0xffffff8c
     a04:	44005249 	strmi	r5, [r0], #-585	; 0xfffffdb7
     a08:	564d4943 	strbpl	r4, [sp], -r3, asr #18
     a0c:	43004341 	movwmi	r4, #833	; 0x341
     a10:	5244494c 	subpl	r4, r4, #76, 18	; 0x130000
     a14:	55504300 	ldrbpl	r4, [r0, #-768]	; 0xfffffd00
     a18:	42004449 	andmi	r4, r0, #1224736768	; 0x49000000
     a1c:	4c414950 	mcrrmi	9, 5, r4, r1, cr0	; <UNPREDICTABLE>
     a20:	4449004c 	strbmi	r0, [r9], #-76	; 0xffffffb4
     a24:	5246505f 	subpl	r5, r6, #95	; 0x5f
     a28:	43434400 	movtmi	r4, #13312	; 0x3400
     a2c:	00575349 	subseq	r5, r7, r9, asr #6
     a30:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     a34:	6f436d65 	svcvs	0x00436d65
     a38:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
     a3c:	556b636f 	strbpl	r6, [fp, #-879]!	; 0xfffffc91
     a40:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     a44:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
     a48:	464d4d5f 			; <UNDEFINED> instruction: 0x464d4d5f
     a4c:	43490052 	movtmi	r0, #36946	; 0x9052
     a50:	4c4c4149 	stfmie	f4, [ip], {73}	; 0x49
     a54:	46420055 			; <UNDEFINED> instruction: 0x46420055
     a58:	5f005241 	svcpl	0x00005241
     a5c:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     a60:	5f323374 	svcpl	0x00323374
     a64:	43530074 	cmpmi	r3, #116	; 0x74
     a68:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     a6c:	49006570 	stmdbmi	r0, {r4, r5, r6, r8, sl, sp, lr}
     a70:	46445f44 	strbmi	r5, [r4], -r4, asr #30
     a74:	43440052 	movtmi	r0, #16466	; 0x4052
     a78:	41564d43 	cmpmi	r6, r3, asr #26
     a7c:	53430043 	movtpl	r0, #12355	; 0x3043
     a80:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     a84:	73795300 	cmnvc	r9, #0, 6
     a88:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
     a8c:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
     a90:	6b636f6c 	blvs	18dc848 <__RAM_SIZE+0x17dc848>
     a94:	43434400 	movtmi	r4, #13312	; 0x3400
     a98:	5541564d 	strbpl	r5, [r1, #-1613]	; 0xfffff9b3
     a9c:	565f5f00 	ldrbpl	r5, [pc], -r0, lsl #30
     aa0:	6f746365 	svcvs	0x00746365
     aa4:	56007372 			; <UNDEFINED> instruction: 0x56007372
     aa8:	00524f54 	subseq	r4, r2, r4, asr pc
     aac:	52414653 	subpl	r4, r1, #87031808	; 0x5300000
     ab0:	53434900 	movtpl	r4, #14592	; 0x3900
     ab4:	49410052 	stmdbmi	r1, {r1, r4, r6}^
     ab8:	00524352 	subseq	r4, r2, r2, asr r3
     abc:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
     ac0:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
     ac4:	43005241 	movwmi	r5, #577	; 0x241
     ac8:	44495343 	strbmi	r5, [r9], #-835	; 0xfffffcbd
     acc:	46430052 			; <UNDEFINED> instruction: 0x46430052
     ad0:	4e005253 	mcrmi	2, 0, r5, cr0, cr3, {2}
     ad4:	52434153 	subpl	r4, r3, #-1073741804	; 0xc0000014
     ad8:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     adc:	4d003052 	stcmi	0, cr3, [r0, #-328]	; 0xfffffeb8
     ae0:	31524656 	cmpcc	r2, r6, asr r6
     ae4:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     ae8:	52003252 	andpl	r3, r0, #536870917	; 0x20000005
     aec:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     af0:	33444556 	movtcc	r4, #17750	; 0x4556
     af4:	53455200 	movtpl	r5, #20992	; 0x5200
     af8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     afc:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     b00:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     b04:	35444556 	strbcc	r4, [r4, #-1366]	; 0xfffffaaa
     b08:	53455200 	movtpl	r5, #20992	; 0x5200
     b0c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     b10:	52003644 	andpl	r3, r0, #68, 12	; 0x4400000
     b14:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     b18:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
     b1c:	73795300 	cmnvc	r9, #0, 6
     b20:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     b24:	0074696e 	rsbseq	r6, r4, lr, ror #18
     b28:	53434853 	movtpl	r4, #14419	; 0x3853
     b2c:	43440052 	movtmi	r0, #16466	; 0x4052
     b30:	564d4943 	strbpl	r4, [sp], -r3, asr #18
     b34:	49004341 	stmdbmi	r0, {r0, r6, r8, r9, lr}
     b38:	564d4943 	strbpl	r4, [sp], -r3, asr #18
     b3c:	44005541 	strmi	r5, [r0], #-1345	; 0xfffffabf
     b40:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
     b44:	53464100 	movtpl	r4, #24832	; 0x6100
     b48:	46530052 			; <UNDEFINED> instruction: 0x46530052
     b4c:	44005253 	strmi	r5, [r0], #-595	; 0xfffffdad
     b50:	57534343 	ldrbpl	r4, [r3, -r3, asr #6]
     b54:	50485300 	subpl	r5, r8, r0, lsl #6
     b58:	45560052 	ldrbmi	r0, [r6, #-82]	; 0xffffffae
     b5c:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
     b60:	4241545f 	submi	r5, r1, #1593835520	; 0x5f000000
     b64:	545f454c 	ldrbpl	r4, [pc], #-1356	; b6c <__Vectors_Size+0x3ac>
     b68:	00657079 	rsbeq	r7, r5, r9, ror r0
     b6c:	415f4449 	cmpmi	pc, r9, asr #8
     b70:	49005246 	stmdbmi	r0, {r1, r2, r6, r9, ip, lr}
     b74:	53495f44 	movtpl	r5, #40772	; 0x9f44
     b78:	43005241 	movwmi	r5, #577	; 0x241
     b7c:	52434150 	subpl	r4, r3, #80, 2
     b80:	53464800 	movtpl	r4, #26624	; 0x6800
     b84:	5f5f0052 	svcpl	0x005f0052
     b88:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     b8c:	32695f69 	rsbcc	r5, r9, #420	; 0x1a4
     b90:	6f700064 	svcvs	0x00700064
     b94:	00303177 	eorseq	r3, r0, r7, ror r1
     b98:	32707865 	rsbscc	r7, r0, #6619136	; 0x650000
     b9c:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
     ba0:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
     ba4:	6172775f 	cmnvs	r2, pc, asr r7
     ba8:	69640070 	stmdbvs	r4!, {r4, r5, r6}^
     bac:	5f006666 	svcpl	0x00006666
     bb0:	5f74756f 	svcpl	0x0074756f
     bb4:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     bb8:	76007265 	strvc	r7, [r0], -r5, ror #4
     bbc:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     bc0:	73006674 	movwvc	r6, #1652	; 0x674
     bc4:	5f657a69 	svcpl	0x00657a69
     bc8:	696d0074 	stmdbvs	sp!, {r2, r4, r5, r6}^
     bcc:	6469776e 	strbtvs	r7, [r9], #-1902	; 0xfffff892
     bd0:	5f006874 	svcpl	0x00006874
     bd4:	6165615f 	cmnvs	r5, pc, asr r1
     bd8:	645f6962 	ldrbvs	r6, [pc], #-2402	; be0 <__Vectors_Size+0x420>
     bdc:	00766964 	rsbseq	r6, r6, r4, ror #18
     be0:	6f74655f 	svcvs	0x0074655f
     be4:	75700061 	ldrbvc	r0, [r0, #-97]!	; 0xffffff9f
     be8:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     bec:	5f007261 	svcpl	0x00007261
     bf0:	5f74756f 	svcpl	0x0074756f
     bf4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     bf8:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
     bfc:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     c00:	6f687700 	svcvs	0x00687700
     c04:	5f00656c 	svcpl	0x0000656c
     c08:	6165615f 	cmnvs	r5, pc, asr r1
     c0c:	645f6962 	ldrbvs	r6, [pc], #-2402	; c14 <__Vectors_Size+0x454>
     c10:	007a6932 	rsbseq	r6, sl, r2, lsr r9
     c14:	63617266 	cmnvs	r1, #1610612742	; 0x60000006
     c18:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffffd20 <__RAM_segment_used_end__+0xc7effd20>
     c1c:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     c20:	5f5f0074 	svcpl	0x005f0074
     c24:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     c28:	32645f69 	rsbcc	r5, r4, #420	; 0x1a4
     c2c:	007a6975 	rsbseq	r6, sl, r5, ror r9
     c30:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     c34:	64695f74 	strbtvs	r5, [r9], #-3956	; 0xfffff08c
     c38:	63660078 	cmnvs	r6, #120	; 0x78
     c3c:	69727074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, sp, lr}^
     c40:	0066746e 	rsbeq	r7, r6, lr, ror #8
     c44:	6167656e 	cmnvs	r7, lr, ror #10
     c48:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
     c4c:	615f5f00 	cmpvs	pc, r0, lsl #30
     c50:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     c54:	6461645f 	strbtvs	r6, [r1], #-1119	; 0xfffffba1
     c58:	5f5f0064 	svcpl	0x005f0064
     c5c:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
     c60:	00747369 	rsbseq	r7, r4, r9, ror #6
     c64:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     c68:	2f65726f 	svccs	0x0065726f
     c6c:	2f637253 	svccs	0x00637253
     c70:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     c74:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     c78:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     c7c:	665f616f 	ldrbvs	r6, [pc], -pc, ror #2
     c80:	616d726f 	cmnvs	sp, pc, ror #4
     c84:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     c88:	00616f74 	rsbeq	r6, r1, r4, ror pc
     c8c:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     c90:	6c756e5f 	ldclvs	14, cr6, [r5], #-380	; 0xfffffe84
     c94:	7865006c 	stmdavc	r5!, {r2, r3, r5, r6}^
     c98:	6c617670 	stclvs	6, cr7, [r1], #-448	; 0xfffffe40
     c9c:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
     ca0:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
     ca4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     ca8:	5f5f0065 	svcpl	0x005f0065
     cac:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     cb0:	63645f69 	cmnvs	r4, #420	; 0x1a4
     cb4:	6567706d 	strbvs	r7, [r7, #-109]!	; 0xffffff93
     cb8:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     cbc:	6c5f616f 	ldfvse	f6, [pc], {111}	; 0x6f
     cc0:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     cc4:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     cc8:	0066746e 	rsbeq	r7, r6, lr, ror #8
     ccc:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     cd0:	5f696261 	svcpl	0x00696261
     cd4:	64326975 	ldrtvs	r6, [r2], #-2421	; 0xfffff68b
     cd8:	615f5f00 	cmpvs	pc, r0, lsl #30
     cdc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     ce0:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     ce4:	00746770 	rsbseq	r6, r4, r0, ror r7
     ce8:	6c78616d 	ldfvse	f6, [r8], #-436	; 0xfffffe4c
     cec:	5f006e65 	svcpl	0x00006e65
     cf0:	696f7461 	stmdbvs	pc!, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     cf4:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     cf8:	656c6e72 	strbvs	r6, [ip, #-3698]!	; 0xfffff18e
     cfc:	00735f6e 	rsbseq	r5, r3, lr, ror #30
     d00:	70615f5f 	rsbvc	r5, r1, pc, asr pc
     d04:	615f5f00 	cmpvs	pc, r0, lsl #30
     d08:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d0c:	756d645f 	strbvc	r6, [sp, #-1119]!	; 0xfffffba1
     d10:	425f006c 	subsmi	r0, pc, #108	; 0x6c
     d14:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     d18:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     d1c:	3436746e 	ldrtcc	r7, [r6], #-1134	; 0xfffffb92
     d20:	5f00745f 	svcpl	0x0000745f
     d24:	645f7369 	ldrbvs	r7, [pc], #-873	; d2c <__Vectors_Size+0x56c>
     d28:	74696769 	strbtvc	r6, [r9], #-1897	; 0xfffff897
     d2c:	73765f00 	cmnvc	r6, #0, 30
     d30:	6972706e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, sp, lr}^
     d34:	0066746e 	rsbeq	r7, r6, lr, ror #8
     d38:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
     d3c:	615f5f00 	cmpvs	pc, r0, lsl #30
     d40:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d44:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     d48:	00716570 	rsbseq	r6, r1, r0, ror r5
     d4c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     d50:	7470746e 	ldrbtvc	r7, [r0], #-1134	; 0xfffffb92
     d54:	00745f72 	rsbseq	r5, r4, r2, ror pc
     d58:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     d5c:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
     d60:	6f5f0072 	svcvs	0x005f0072
     d64:	725f7475 	subsvc	r7, pc, #1962934272	; 0x75000000
     d68:	5f007665 	svcpl	0x00007665
     d6c:	6165615f 	cmnvs	r5, pc, asr r1
     d70:	645f6962 	ldrbvs	r6, [pc], #-2402	; d78 <__Vectors_Size+0x5b8>
     d74:	00627573 	rsbeq	r7, r2, r3, ror r5
     d78:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     d7c:	5f696261 	svcpl	0x00696261
     d80:	69646c75 	stmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
     d84:	646f6d76 	strbtvs	r6, [pc], #-3446	; d8c <__Vectors_Size+0x5cc>
     d88:	615f5f00 	cmpvs	pc, r0, lsl #30
     d8c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d90:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     d94:	00656c70 	rsbeq	r6, r5, r0, ror ip
     d98:	5f74756f 	svcpl	0x0074756f
     d9c:	5f746366 	svcpl	0x00746366
     da0:	70617277 	rsbvc	r7, r1, r7, ror r2
     da4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     da8:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     dac:	66006365 	strvs	r6, [r0], -r5, ror #6
     db0:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     db4:	5f5f0068 	svcpl	0x005f0068
     db8:	63756e67 	cmnvs	r5, #1648	; 0x670
     dbc:	5f61765f 	svcpl	0x0061765f
     dc0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     dc4:	615f5f00 	cmpvs	pc, r0, lsl #30
     dc8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     dcc:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     dd0:	00746c70 	rsbseq	r6, r4, r0, ror ip
     dd4:	6f746e5f 	svcvs	0x00746e5f
     dd8:	6f6c5f61 	svcvs	0x006c5f61
     ddc:	6c5f676e 	mrrcvs	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
     de0:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     de4:	6c5f7369 	mrrcvs	3, 6, r7, pc, cr9	; <UNPREDICTABLE>
     de8:	6162006c 	cmnvs	r2, ip, rrx
     dec:	70006573 	andvc	r6, r0, r3, ror r5
     df0:	69636572 	stmdbvs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     df4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     df8:	2f2e2e00 	svccs	0x002e2e00
     dfc:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     e00:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     e04:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
     e08:	00632e74 	rsbeq	r2, r3, r4, ror lr
     e0c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     e10:	6365725f 	cmnvs	r5, #-268435451	; 0xf0000005
     e14:	65670076 	strbvs	r0, [r7, #-118]!	; 0xffffff8a
     e18:	61686374 	smcvs	34356	; 0x8634
     e1c:	61750072 	cmnvs	r5, r2, ror r0
     e20:	735f7472 	cmpvc	pc, #1912602624	; 0x72000000
     e24:	00646e65 	rsbeq	r6, r4, r5, ror #28
     e28:	5f746567 	svcpl	0x00746567
     e2c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     e30:	5f787400 	svcpl	0x00787400
     e34:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     e38:	6f705f6b 	svcvs	0x00705f6b
     e3c:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     e40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     e44:	5f787400 	svcpl	0x00787400
     e48:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     e4c:	6f705f6b 	svcvs	0x00705f6b
     e50:	695f6c6f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     e54:	2e2e0064 	cdpcs	0, 2, cr0, cr14, cr4, {3}
     e58:	2f2e2e2f 	svccs	0x002e2e2f
     e5c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; dac <__Vectors_Size+0x5ec>
     e60:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     e64:	742f736f 	strtvc	r7, [pc], #-879	; e6c <__Vectors_Size+0x6ac>
     e68:	61657268 	cmnvs	r5, r8, ror #4
     e6c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
     e70:	6f6d6d6f 	svcvs	0x006d6d6f
     e74:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
     e78:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
     e7c:	6f6c625f 	svcvs	0x006c625f
     e80:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
     e84:	61656c65 	cmnvs	r5, r5, ror #24
     e88:	632e6573 			; <UNDEFINED> instruction: 0x632e6573
     e8c:	725f5f00 	subsvc	r5, pc, #0, 30
     e90:	6f747365 	svcvs	0x00747365
     e94:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     e98:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     e9c:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     ea0:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     ea4:	736f705f 	cmnvc	pc, #95	; 0x5f
     ea8:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     eac:	726f7700 	rsbvc	r7, pc, #0, 14
     eb0:	74705f6b 	ldrbtvc	r5, [r0], #-3947	; 0xfffff095
     eb4:	5f5f0072 	svcpl	0x005f0072
     eb8:	5f746567 	svcpl	0x00746567
     ebc:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     ec0:	70757272 	rsbsvc	r7, r5, r2, ror r2
     ec4:	6f705f74 	svcvs	0x00705f74
     ec8:	72757473 	rsbsvc	r7, r5, #1929379840	; 0x73000000
     ecc:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     ed0:	6f6c625f 	svcvs	0x006c625f
     ed4:	705f6b63 	subsvc	r6, pc, r3, ror #22
     ed8:	5f6c6f6f 	svcpl	0x006c6f6f
     edc:	61746f74 	cmnvs	r4, r4, ror pc
     ee0:	6e69006c 	cdpvs	0, 6, cr0, cr9, cr12, {3}
     ee4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     ee8:	5f747075 	svcpl	0x00747075
     eec:	65766173 	ldrbvs	r6, [r6, #-371]!	; 0xfffffe8d
     ef0:	6f6f7000 	svcvs	0x006f7000
     ef4:	74705f6c 	ldrbtvc	r5, [r0], #-3948	; 0xfffff094
     ef8:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     efc:	6f6c625f 	svcvs	0x006c625f
     f00:	705f6b63 	subsvc	r6, pc, r3, ror #22
     f04:	5f6c6f6f 	svcpl	0x006c6f6f
     f08:	70737573 	rsbsvc	r7, r3, r3, ror r5
     f0c:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     f10:	6c5f6e6f 	mrrcvs	14, 6, r6, pc, cr15	; <UNPREDICTABLE>
     f14:	00747369 	rsbseq	r7, r4, r9, ror #6
     f18:	69645f5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     f1c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     f20:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
     f24:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     f28:	73747075 	cmnvc	r4, #117	; 0x75
     f2c:	5f787400 	svcpl	0x00787400
     f30:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     f34:	6f705f6b 	svcvs	0x00705f6b
     f38:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     f3c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     f40:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     f44:	6b636f6c 	blvs	18dccfc <__RAM_SIZE+0x17dccfc>
     f48:	6f6f705f 	svcvs	0x006f705f
     f4c:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     f50:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     f54:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     f58:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     f5c:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     f60:	5f6b636f 	svcpl	0x006b636f
     f64:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; dac <__Vectors_Size+0x5ec>
     f68:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     f6c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     f70:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
     f74:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     f78:	5f787400 	svcpl	0x00787400
     f7c:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     f80:	6f705f6b 	svcvs	0x00705f6b
     f84:	615f6c6f 	cmpvs	pc, pc, ror #24
     f88:	6c696176 	stfvse	f6, [r9], #-472	; 0xfffffe28
     f8c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     f90:	5f585400 	svcpl	0x00585400
     f94:	434f4c42 	movtmi	r4, #64578	; 0xfc42
     f98:	4f505f4b 	svcmi	0x00505f4b
     f9c:	74004c4f 	strvc	r4, [r0], #-3151	; 0xfffff3b1
     fa0:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     fa4:	5f6b636f 	svcpl	0x006b636f
     fa8:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; df0 <__Vectors_Size+0x630>
     fac:	6f6c625f 	svcvs	0x006c625f
     fb0:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
     fb4:	00657a69 	rsbeq	r7, r5, r9, ror #20
     fb8:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     fbc:	6b636f6c 	blvs	18dcd74 <__RAM_SIZE+0x17dcd74>
     fc0:	6f6f705f 	svcvs	0x006f705f
     fc4:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     fc8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     fcc:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     fd0:	6f697665 	svcvs	0x00697665
     fd4:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     fd8:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     fdc:	5f6b636f 	svcpl	0x006b636f
     fe0:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; e28 <__Vectors_Size+0x668>
     fe4:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     fe8:	65720065 	ldrbvs	r0, [r2, #-101]!	; 0xffffff9b
     fec:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     ff0:	6f6c625f 	svcvs	0x006c625f
     ff4:	705f6b63 	subsvc	r6, pc, r3, ror #22
     ff8:	6e007274 	mcrvs	2, 0, r7, cr0, cr4, {3}
     ffc:	5f747865 	svcpl	0x00747865
    1000:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1004:	70006461 	andvc	r6, r0, r1, ror #8
    1008:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    100c:	5f73756f 	svcpl	0x0073756f
    1010:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1014:	74006461 	strvc	r6, [r0], #-1121	; 0xfffffb9f
    1018:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    101c:	5f6b636f 	svcpl	0x006b636f
    1020:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; e68 <__Vectors_Size+0x6a8>
    1024:	6176615f 	cmnvs	r6, pc, asr r1
    1028:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
    102c:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
    1030:	00747369 	rsbseq	r7, r4, r9, ror #6
    1034:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    1038:	6f6c625f 	svcvs	0x006c625f
    103c:	705f6b63 	subsvc	r6, pc, r3, ror #22
    1040:	54007274 	strpl	r7, [r0], #-628	; 0xfffffd8c
    1044:	4c425f58 	mcrrmi	15, 5, r5, r2, cr8
    1048:	5f4b434f 	svcpl	0x004b434f
    104c:	4c4f4f50 	mcrrmi	15, 5, r4, pc, cr0
    1050:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    1054:	00544355 	subseq	r4, r4, r5, asr r3
    1058:	5f78745f 	svcpl	0x0078745f
    105c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1060:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1064:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1068:	696e5f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    106c:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    1070:	00656d75 	rsbeq	r6, r5, r5, ror sp
    1074:	5f78745f 	svcpl	0x0078745f
    1078:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    107c:	65725f6b 	ldrbvs	r5, [r2, #-3947]!	; 0xfffff095
    1080:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    1084:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    1088:	2f2e2e2f 	svccs	0x002e2e2f
    108c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; fdc <__Vectors_Size+0x81c>
    1090:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1094:	742f736f 	strtvc	r7, [pc], #-879	; 109c <_Min_Stack_Size+0x9c>
    1098:	61657268 	cmnvs	r5, r8, ror #4
    109c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    10a0:	6f6d6d6f 	svcvs	0x006d6d6f
    10a4:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    10a8:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    10ac:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    10b0:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    10b4:	61636f6c 	cmnvs	r3, ip, ror #30
    10b8:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    10bc:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    10c0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    10c4:	5f646165 	svcpl	0x00646165
    10c8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    10cc:	6e5f6d65 	cdpvs	13, 5, cr6, cr15, cr5, {3}
    10d0:	75735f69 	ldrbvc	r5, [r3, #-3945]!	; 0xfffff097
    10d4:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    10d8:	656d0064 	strbvs	r0, [sp, #-100]!	; 0xffffff9c
    10dc:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    10e0:	7a69735f 	bvc	1a5de64 <__RAM_SIZE+0x195de64>
    10e4:	656d0065 	strbvs	r0, [sp, #-101]!	; 0xffffff9b
    10e8:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    10ec:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    10f0:	6e696600 	cdpvs	6, 6, cr6, cr9, cr0, {0}
    10f4:	65687369 	strbvs	r7, [r8, #-873]!	; 0xfffffc97
    10f8:	61770064 	cmnvs	r7, r4, rrx
    10fc:	6f5f7469 	svcvs	0x005f7469
    1100:	6f697470 	svcvs	0x00697470
    1104:	745f006e 	ldrbvc	r0, [pc], #-110	; 110c <_Min_Stack_Size+0x10c>
    1108:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    110c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    1110:	5f6c6f6f 	svcpl	0x006c6f6f
    1114:	72616573 	rsbvc	r6, r1, #482344960	; 0x1cc00000
    1118:	5f006863 	svcpl	0x00006863
    111c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1124 <_Min_Stack_Size+0x124>
    1120:	61657268 	cmnvs	r5, r8, ror #4
    1124:	75635f64 	strbvc	r5, [r3, #-3940]!	; 0xfffff09c
    1128:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    112c:	74705f74 	ldrbtvc	r5, [r0], #-3956	; 0xfffff08c
    1130:	745f0072 	ldrbvc	r0, [pc], #-114	; 1138 <_Min_Stack_Size+0x138>
    1134:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1138:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    113c:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    1140:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    1144:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
    1148:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    114c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1150:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    1154:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    1158:	61636f6c 	cmnvs	r3, ip, ror #30
    115c:	2e006574 	cfrshl64cs	mvdx0, mvdx4, r6
    1160:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1164:	2f2e2e2f 	svccs	0x002e2e2f
    1168:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    116c:	2f736f74 	svccs	0x00736f74
    1170:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1174:	2f786461 	svccs	0x00786461
    1178:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    117c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1180:	742f6372 	strtvc	r6, [pc], #-882	; 1188 <_Min_Stack_Size+0x188>
    1184:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1188:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    118c:	5f6c6f6f 	svcpl	0x006c6f6f
    1190:	61656c63 	cmnvs	r5, r3, ror #24
    1194:	2e70756e 	cdpcs	5, 7, cr7, cr0, cr14, {3}
    1198:	745f0063 	ldrbvc	r0, [pc], #-99	; 11a0 <_Min_Stack_Size+0x1a0>
    119c:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    11a0:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    11a4:	5f6c6f6f 	svcpl	0x006c6f6f
    11a8:	61656c63 	cmnvs	r5, r3, ror #24
    11ac:	0070756e 	rsbseq	r7, r0, lr, ror #10
    11b0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    11b4:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    11b8:	2f2e2e00 	svccs	0x002e2e00
    11bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    11c0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    11c4:	6f747262 	svcvs	0x00747262
    11c8:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    11cc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    11d0:	6f632f78 	svcvs	0x00632f78
    11d4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    11d8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    11dc:	5f78742f 	svcpl	0x0078742f
    11e0:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    11e4:	6f6f705f 	svcvs	0x006f705f
    11e8:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
    11ec:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    11f0:	6600632e 	strvs	r6, [r0], -lr, lsr #6
    11f4:	5f656572 	svcpl	0x00656572
    11f8:	00727470 	rsbseq	r7, r2, r0, ror r4
    11fc:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
    1200:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
    1204:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
    1208:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
    120c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1210:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    1214:	6f705f65 	svcvs	0x00705f65
    1218:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    121c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1220:	6c620065 	stclvs	0, cr0, [r2], #-404	; 0xfffffe6c
    1224:	5f6b636f 	svcpl	0x006b636f
    1228:	69646e69 	stmdbvs	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    122c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
    1230:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1234:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1238:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    123c:	6f705f65 	svcvs	0x00705f65
    1240:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    1244:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1248:	705f6465 	subsvc	r6, pc, r5, ror #8
    124c:	6e007274 	mcrvs	2, 0, r7, cr0, cr4, {3}
    1250:	5f747865 	svcpl	0x00747865
    1254:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 109c <_Min_Stack_Size+0x9c>
    1258:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    125c:	74705f70 	ldrbtvc	r5, [r0], #-3952	; 0xfffff090
    1260:	745f0072 	ldrbvc	r0, [pc], #-114	; 1268 <_Min_Stack_Size+0x268>
    1264:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1268:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    126c:	5f6c6f6f 	svcpl	0x006c6f6f
    1270:	61657263 	cmnvs	r5, r3, ror #4
    1274:	5f646574 	svcpl	0x00646574
    1278:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    127c:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    1280:	6f697665 	svcvs	0x00697665
    1284:	705f7375 	subsvc	r7, pc, r5, ror r3	; <UNPREDICTABLE>
    1288:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
    128c:	73726966 	cmnvc	r2, #1671168	; 0x198000
    1290:	72665f74 	rsbvc	r5, r6, #116, 30	; 0x1d0
    1294:	625f6565 	subsvs	r6, pc, #423624704	; 0x19400000
    1298:	6b636f6c 	blvs	18dd050 <__RAM_SIZE+0x17dd050>
    129c:	756f665f 	strbvc	r6, [pc, #-1631]!	; c45 <__Vectors_Size+0x485>
    12a0:	6e00646e 	cdpvs	4, 0, cr6, cr0, cr14, {3}
    12a4:	5f747865 	svcpl	0x00747865
    12a8:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    12ac:	696c5f6b 	stmdbvs	ip!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    12b0:	705f6b6e 	subsvc	r6, pc, lr, ror #22
    12b4:	6e007274 	mcrvs	2, 0, r7, cr0, cr4, {3}
    12b8:	5f747865 	svcpl	0x00747865
    12bc:	00727470 	rsbseq	r7, r2, r0, ror r4
    12c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    12c4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    12c8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    12cc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    12d0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    12d4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    12d8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1224 <_Min_Stack_Size+0x224>
    12dc:	2f6e6f6d 	svccs	0x006e6f6d
    12e0:	2f637273 	svccs	0x00637273
    12e4:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    12e8:	5f657479 	svcpl	0x00657479
    12ec:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1134 <_Min_Stack_Size+0x134>
    12f0:	6165735f 	cmnvs	r5, pc, asr r3
    12f4:	2e686372 	mcrcs	3, 3, r6, cr8, cr2, {3}
    12f8:	6f740063 	svcvs	0x00740063
    12fc:	5f6c6174 	svcpl	0x006c6174
    1300:	6f656874 	svcvs	0x00656874
    1304:	69746572 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1308:	5f6c6163 	svcpl	0x006c6163
    130c:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
    1310:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
    1314:	68740065 	ldmdavs	r4!, {r0, r2, r5, r6}^
    1318:	625f7369 	subsvs	r7, pc, #-1543503871	; 0xa4000001
    131c:	6b636f6c 	blvs	18dd0d4 <__RAM_SIZE+0x17dd0d4>
    1320:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
    1324:	74705f6b 	ldrbtvc	r5, [r0], #-3947	; 0xfffff095
    1328:	78650072 	stmdavc	r5!, {r1, r4, r5, r6}^
    132c:	6e696d61 	cdpvs	13, 6, cr6, cr9, cr1, {3}
    1330:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
    1334:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
    1338:	61766100 	cmnvs	r6, r0, lsl #2
    133c:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
    1340:	625f656c 	subsvs	r6, pc, #108, 10	; 0x1b000000
    1344:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1348:	5f787400 	svcpl	0x00787400
    134c:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    1350:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    1354:	5f736761 	svcpl	0x00736761
    1358:	756f7267 	strbvc	r7, [pc, #-615]!	; 10f9 <_Min_Stack_Size+0xf9>
    135c:	64695f70 	strbtvs	r5, [r9], #-3952	; 0xfffff090
    1360:	5f787400 	svcpl	0x00787400
    1364:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1368:	64695f65 	strbtvs	r5, [r9], #-3941	; 0xfffff09b
    136c:	5f787400 	svcpl	0x00787400
    1370:	616d6573 	smcvs	54867	; 0xd653
    1374:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1378:	72635f65 	rsbvc	r5, r3, #404	; 0x194
    137c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1380:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    1384:	6f697665 	svcvs	0x00697665
    1388:	5f007375 	svcpl	0x00007375
    138c:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    1390:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1394:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1398:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    139c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    13a0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    13a4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    13a8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    13ac:	5f657a69 	svcpl	0x00657a69
    13b0:	73756e75 	cmnvc	r5, #1872	; 0x750
    13b4:	6d5f6465 	cfldrdvs	mvd6, [pc, #-404]	; 1228 <_Min_Stack_Size+0x228>
    13b8:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    13bc:	745f0079 	ldrbvc	r0, [pc], #-121	; 13c4 <_Min_Stack_Size+0x3c4>
    13c0:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    13c4:	5f657565 	svcpl	0x00657565
    13c8:	61657263 	cmnvs	r5, r3, ror #4
    13cc:	5f646574 	svcpl	0x00646574
    13d0:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    13d4:	745f0074 	ldrbvc	r0, [pc], #-116	; 13dc <_Min_Stack_Size+0x3dc>
    13d8:	76655f78 	uqsub16vc	r5, r5, r8
    13dc:	5f746e65 	svcpl	0x00746e65
    13e0:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    13e4:	72635f73 	rsbvc	r5, r3, #460	; 0x1cc
    13e8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    13ec:	6f635f64 	svcvs	0x00635f64
    13f0:	00746e75 	rsbseq	r6, r4, r5, ror lr
    13f4:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    13f8:	70616d65 	rsbvc	r6, r1, r5, ror #26
    13fc:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1400:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1404:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    1408:	5f6e6f69 	svcpl	0x006e6f69
    140c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    1410:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1414:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    1418:	6f687061 	svcvs	0x00687061
    141c:	705f6572 	subsvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    1420:	6f667265 	svcvs	0x00667265
    1424:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1428:	675f6563 	ldrbvs	r6, [pc, -r3, ror #10]
    142c:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
    1430:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1434:	5f787400 	svcpl	0x00787400
    1438:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    143c:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    1440:	5f736761 	svcpl	0x00736761
    1444:	756f7267 	strbvc	r7, [pc, #-615]!	; 11e5 <_Min_Stack_Size+0x1e5>
    1448:	75735f70 	ldrbvc	r5, [r3, #-3952]!	; 0xfffff090
    144c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1450:	5f646564 	svcpl	0x00646564
    1454:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1458:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    145c:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    1460:	735f6575 	cmpvc	pc, #490733568	; 0x1d400000
    1464:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1468:	5f787400 	svcpl	0x00787400
    146c:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    1470:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    1474:	5f736761 	svcpl	0x00736761
    1478:	756f7267 	strbvc	r7, [pc, #-615]!	; 1219 <_Min_Stack_Size+0x219>
    147c:	75635f70 	strbvc	r5, [r3, #-3952]!	; 0xfffff090
    1480:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1484:	58540074 	ldmdapl	r4, {r2, r4, r5, r6}^
    1488:	4556455f 	ldrbmi	r4, [r6, #-1375]	; 0xfffffaa1
    148c:	465f544e 	ldrbmi	r5, [pc], -lr, asr #8
    1490:	5347414c 	movtpl	r4, #29004	; 0x714c
    1494:	4f52475f 	svcmi	0x0052475f
    1498:	535f5055 	cmppl	pc, #85	; 0x55
    149c:	43555254 	cmpmi	r5, #84, 4	; 0x40000005
    14a0:	58540054 	ldmdapl	r4, {r2, r4, r6}^
    14a4:	4556455f 	ldrbmi	r4, [r6, #-1375]	; 0xfffffaa1
    14a8:	465f544e 	ldrbmi	r5, [pc], -lr, asr #8
    14ac:	5347414c 	movtpl	r4, #29004	; 0x714c
    14b0:	4f52475f 	svcmi	0x0052475f
    14b4:	74005055 	strvc	r5, [r0], #-85	; 0xffffffab
    14b8:	76655f78 	uqsub16vc	r5, r5, r8
    14bc:	5f746e65 	svcpl	0x00746e65
    14c0:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    14c4:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
    14c8:	5f70756f 	svcpl	0x0070756f
    14cc:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    14d0:	5f787400 	svcpl	0x00787400
    14d4:	616d6573 	smcvs	54867	; 0xd653
    14d8:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    14dc:	72635f65 	rsbvc	r5, r3, #404	; 0x194
    14e0:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    14e4:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
    14e8:	54007478 	strpl	r7, [r0], #-1144	; 0xfffffb88
    14ec:	45535f58 	ldrbmi	r5, [r3, #-3928]	; 0xfffff0a8
    14f0:	4850414d 	ldmdami	r0, {r0, r2, r3, r6, r8, lr}^
    14f4:	5f45524f 	svcpl	0x0045524f
    14f8:	55525453 	ldrbpl	r5, [r2, #-1107]	; 0xfffffbad
    14fc:	54005443 	strpl	r5, [r0], #-1091	; 0xfffffbbd
    1500:	55515f58 	ldrbpl	r5, [r1, #-3928]	; 0xfffff0a8
    1504:	00455545 	subeq	r5, r5, r5, asr #10
    1508:	515f5854 	cmppl	pc, r4, asr r8	; <UNPREDICTABLE>
    150c:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    1510:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    1514:	00544355 	subseq	r4, r4, r5, asr r3
    1518:	5f78745f 	svcpl	0x0078745f
    151c:	616d6573 	smcvs	54867	; 0xd653
    1520:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1524:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
    1528:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    152c:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1530:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1534:	756f656d 	strbvc	r6, [pc, #-1389]!	; fcf <__Vectors_Size+0x80f>
    1538:	6f635f74 	svcvs	0x00635f74
    153c:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1540:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    1544:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1548:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    154c:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1550:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    1554:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    1558:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    155c:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    1560:	7367616c 	cmnvc	r7, #108, 2
    1564:	6f72675f 	svcvs	0x0072675f
    1568:	635f7075 	cmpvs	pc, #117	; 0x75
    156c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1570:	705f6465 	subsvc	r6, pc, r5, ror #8
    1574:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1578:	0073756f 	rsbseq	r7, r3, pc, ror #10
    157c:	655f7874 	ldrbvs	r7, [pc, #-2164]	; d10 <__Vectors_Size+0x550>
    1580:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1584:	616c665f 	cmnvs	ip, pc, asr r6
    1588:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
    158c:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    1590:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    1594:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
    1598:	63726165 	cmnvs	r2, #1073741849	; 0x40000019
    159c:	745f0068 	ldrbvc	r0, [pc], #-104	; 15a4 <_Min_Stack_Size+0x5a4>
    15a0:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    15a4:	5f6b636f 	svcpl	0x006b636f
    15a8:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 13f0 <_Min_Stack_Size+0x3f0>
    15ac:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    15b0:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    15b4:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    15b8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    15bc:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    15c0:	635f7865 	cmpvs	pc, #6619136	; 0x650000
    15c4:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    15c8:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    15cc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    15d0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    15d4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    15d8:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    15dc:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    15e0:	7a696c61 	bvc	1a5c76c <__RAM_SIZE+0x195c76c>
    15e4:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    15e8:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    15ec:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    15f0:	7367616c 	cmnvc	r7, #108, 2
    15f4:	6f72675f 	svcvs	0x0072675f
    15f8:	735f7075 	cmpvc	pc, #117	; 0x75
    15fc:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    1600:	6f69736e 	svcvs	0x0069736e
    1604:	696c5f6e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1608:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
    160c:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    1610:	5f657565 	svcpl	0x00657565
    1614:	61706163 	cmnvs	r0, r3, ror #2
    1618:	79746963 	ldmdbvc	r4!, {r0, r1, r5, r6, r8, fp, sp, lr}^
    161c:	5f787400 	svcpl	0x00787400
    1620:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1624:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    1628:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    162c:	5f646564 	svcpl	0x00646564
    1630:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1634:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    1638:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    163c:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    1640:	7367616c 	cmnvc	r7, #108, 2
    1644:	6f72675f 	svcvs	0x0072675f
    1648:	635f7075 	cmpvs	pc, #117	; 0x75
    164c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1650:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
    1654:	00747865 	rsbseq	r7, r4, r5, ror #16
    1658:	5f78745f 	svcpl	0x0078745f
    165c:	616d6573 	smcvs	54867	; 0xd653
    1660:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1664:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
    1668:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    166c:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1670:	75705f65 	ldrbvc	r5, [r0, #-3941]!	; 0xfffff09b
    1674:	6f635f74 	svcvs	0x00635f74
    1678:	00746e75 	rsbseq	r6, r4, r5, ror lr
    167c:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    1680:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1684:	6165725f 	cmnvs	r5, pc, asr r2
    1688:	78740064 	ldmdavc	r4!, {r2, r5, r6}^
    168c:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    1690:	655f6575 	ldrbvs	r6, [pc, #-1397]	; 1123 <_Min_Stack_Size+0x123>
    1694:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    1698:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    169c:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    16a0:	5f65726f 	svcpl	0x0065726f
    16a4:	74006469 	strvc	r6, [r0], #-1129	; 0xfffffb97
    16a8:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    16ac:	5f657565 	svcpl	0x00657565
    16b0:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
    16b4:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
    16b8:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
    16bc:	6761726f 	strbvs	r7, [r1, -pc, ror #4]!
    16c0:	745f0065 	ldrbvc	r0, [pc], #-101	; 16c8 <_Min_Stack_Size+0x6c8>
    16c4:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    16c8:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    16cc:	5f65726f 	svcpl	0x0065726f
    16d0:	61657263 	cmnvs	r5, r3, ror #4
    16d4:	5f646574 	svcpl	0x00646574
    16d8:	00727470 	rsbseq	r7, r2, r0, ror r4
    16dc:	535f5854 	cmppl	pc, #84, 16	; 0x540000
    16e0:	50414d45 	subpl	r4, r1, r5, asr #26
    16e4:	45524f48 	ldrbmi	r4, [r2, #-3912]	; 0xfffff0b8
    16e8:	5f585400 	svcpl	0x00585400
    16ec:	4554554d 	ldrbmi	r5, [r4, #-1357]	; 0xfffffab3
    16f0:	745f0058 	ldrbvc	r0, [pc], #-88	; 16f8 <_Min_Stack_Size+0x6f8>
    16f4:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    16f8:	5f6b636f 	svcpl	0x006b636f
    16fc:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1544 <_Min_Stack_Size+0x544>
    1700:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1704:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1708:	756f635f 	strbvc	r6, [pc, #-863]!	; 13b1 <_Min_Stack_Size+0x3b1>
    170c:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
    1710:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    1714:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1718:	5f65726f 	svcpl	0x0065726f
    171c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    1720:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1724:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1728:	5f646165 	svcpl	0x00646165
    172c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1730:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1734:	7400657a 	strvc	r6, [r0], #-1402	; 0xfffffa86
    1738:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    173c:	5f657565 	svcpl	0x00657565
    1740:	61657263 	cmnvs	r5, r3, ror #4
    1744:	5f646574 	svcpl	0x00646574
    1748:	76657270 			; <UNDEFINED> instruction: 0x76657270
    174c:	73756f69 	cmnvc	r5, #420	; 0x1a4
    1750:	5f787400 	svcpl	0x00787400
    1754:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1758:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    175c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1760:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    1764:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    1768:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    176c:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    1770:	6d5f6575 	cfldr64vs	mvdx6, [pc, #-468]	; 15a4 <_Min_Stack_Size+0x5a4>
    1774:	61737365 	cmnvs	r3, r5, ror #6
    1778:	735f6567 	cmpvc	pc, #432013312	; 0x19c00000
    177c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1780:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    1784:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1788:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    178c:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    1790:	2f2e2e2f 	svccs	0x002e2e2f
    1794:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 16e4 <_Min_Stack_Size+0x6e4>
    1798:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    179c:	742f736f 	strtvc	r7, [pc], #-879	; 17a4 <_Min_Stack_Size+0x7a4>
    17a0:	61657268 	cmnvs	r5, r8, ror #4
    17a4:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    17a8:	6f6d6d6f 	svcvs	0x006d6d6f
    17ac:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    17b0:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    17b4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    17b8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    17bc:	5f657a69 	svcpl	0x00657a69
    17c0:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
    17c4:	76656c5f 			; <UNDEFINED> instruction: 0x76656c5f
    17c8:	632e6c65 			; <UNDEFINED> instruction: 0x632e6c65
    17cc:	5f787400 	svcpl	0x00787400
    17d0:	616d6573 	smcvs	54867	; 0xd653
    17d4:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    17d8:	6f635f65 	svcvs	0x00635f65
    17dc:	00746e75 	rsbseq	r6, r4, r5, ror lr
    17e0:	655f7874 	ldrbvs	r7, [pc, #-2164]	; f74 <__Vectors_Size+0x7b4>
    17e4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    17e8:	616c665f 	cmnvs	ip, pc, asr r6
    17ec:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
    17f0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    17f4:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
    17f8:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    17fc:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
    1800:	5f007261 	svcpl	0x00007261
    1804:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    1808:	70616d65 	rsbvc	r6, r1, r5, ror #26
    180c:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1810:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1814:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1818:	756f635f 	strbvc	r6, [pc, #-863]!	; 14c1 <_Min_Stack_Size+0x4c1>
    181c:	5f00746e 	svcpl	0x0000746e
    1820:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 1658 <_Min_Stack_Size+0x658>
    1824:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1828:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    182c:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1830:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1834:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1838:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    183c:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1840:	5f657a69 	svcpl	0x00657a69
    1844:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
    1848:	76656c5f 			; <UNDEFINED> instruction: 0x76656c5f
    184c:	5f006c65 	svcpl	0x00006c65
    1850:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    1854:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1858:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    185c:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1860:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1864:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1868:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    186c:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    1870:	5f6e6f69 	svcpl	0x006e6f69
    1874:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1878:	745f0074 	ldrbvc	r0, [pc], #-116	; 1880 <_Min_Stack_Size+0x880>
    187c:	76655f78 	uqsub16vc	r5, r5, r8
    1880:	5f746e65 	svcpl	0x00746e65
    1884:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    1888:	72635f73 	rsbvc	r5, r3, #460	; 0x1cc
    188c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1890:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
    1894:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
    1898:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    189c:	775f6575 			; <UNDEFINED> instruction: 0x775f6575
    18a0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    18a4:	5f787400 	svcpl	0x00787400
    18a8:	616d6573 	smcvs	54867	; 0xd653
    18ac:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    18b0:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    18b4:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    18b8:	5f646564 	svcpl	0x00646564
    18bc:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    18c0:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    18c4:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    18c8:	655f6575 	ldrbvs	r6, [pc, #-1397]	; 135b <_Min_Stack_Size+0x35b>
    18cc:	6575716e 	ldrbvs	r7, [r5, #-366]!	; 0xfffffe92
    18d0:	00646575 	rsbeq	r6, r4, r5, ror r5
    18d4:	5f78745f 	svcpl	0x0078745f
    18d8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    18dc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    18e0:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    18e4:	00656c75 	rsbeq	r6, r5, r5, ror ip
    18e8:	5f78745f 	svcpl	0x0078745f
    18ec:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    18f0:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    18f4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    18f8:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    18fc:	00657461 	rsbeq	r7, r5, r1, ror #8
    1900:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1904:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1908:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    190c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1910:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1914:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1918:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1864 <_Min_Stack_Size+0x864>
    191c:	2f6e6f6d 	svccs	0x006e6f6d
    1920:	2f637273 	svccs	0x00637273
    1924:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1928:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    192c:	7a696c61 	bvc	1a5cab8 <__RAM_SIZE+0x195cab8>
    1930:	656b5f65 	strbvs	r5, [fp, #-3941]!	; 0xfffff09b
    1934:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1938:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    193c:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
    1940:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1944:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1948:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    194c:	5f657a69 	svcpl	0x00657a69
    1950:	5f776f6c 	svcpl	0x00776f6c
    1954:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    1958:	7075006c 	rsbsvc	r0, r5, ip, rrx
    195c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    1960:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    1964:	5f6b6361 	svcpl	0x006b6361
    1968:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    196c:	745f0074 	ldrbvc	r0, [pc], #-116	; 1974 <_Min_Stack_Size+0x974>
    1970:	70695f78 	rsbvc	r5, r9, r8, ror pc
    1974:	675f7273 			; <UNDEFINED> instruction: 0x675f7273
    1978:	2e007465 	cdpcs	4, 0, cr7, cr0, cr5, {3}
    197c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1980:	2f2e2e2f 	svccs	0x002e2e2f
    1984:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1988:	2f736f74 	svccs	0x00736f74
    198c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1990:	2f786461 	svccs	0x00786461
    1994:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1998:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    199c:	742f6372 	strtvc	r6, [pc], #-882	; 19a4 <_Min_Stack_Size+0x9a4>
    19a0:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19a4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    19a8:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    19ac:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    19b0:	745f0063 	ldrbvc	r0, [pc], #-99	; 19b8 <_Min_Stack_Size+0x9b8>
    19b4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19b8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    19bc:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
    19c0:	65747563 	ldrbvs	r7, [r4, #-1379]!	; 0xfffffa9d
    19c4:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    19c8:	76617300 	strbtvc	r7, [r1], -r0, lsl #6
    19cc:	745f6465 	ldrbvc	r6, [pc], #-1125	; 19d4 <_Min_Stack_Size+0x9d4>
    19d0:	61657268 	cmnvs	r5, r8, ror #4
    19d4:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
    19d8:	745f0072 	ldrbvc	r0, [pc], #-114	; 19e0 <_Min_Stack_Size+0x9e0>
    19dc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19e0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    19e4:	6174735f 	cmnvs	r4, pc, asr r3
    19e8:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    19ec:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    19f0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    19f4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    19f8:	5f646165 	svcpl	0x00646165
    19fc:	61657263 	cmnvs	r5, r3, ror #4
    1a00:	5f646574 	svcpl	0x00646574
    1a04:	00727470 	rsbseq	r7, r2, r0, ror r4
    1a08:	5f77656e 	svcpl	0x0077656e
    1a0c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1a10:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
    1a14:	00747261 	rsbseq	r7, r4, r1, ror #4
    1a18:	5f78745f 	svcpl	0x0078745f
    1a1c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a20:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    1a24:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1a28:	61730065 	cmnvs	r3, r5, rrx
    1a2c:	5f646576 	svcpl	0x00646576
    1a30:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a34:	6c6f6873 	stclvs	8, cr6, [pc], #-460	; 1870 <_Min_Stack_Size+0x870>
    1a38:	6e650064 	cdpvs	0, 6, cr0, cr5, cr4, {3}
    1a3c:	5f797274 	svcpl	0x00797274
    1a40:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    1a44:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1a48:	74756100 	ldrbtvc	r6, [r5], #-256	; 0xffffff00
    1a4c:	74735f6f 	ldrbtvc	r5, [r3], #-3951	; 0xfffff091
    1a50:	00747261 	rsbseq	r7, r4, r1, ror #4
    1a54:	5f78745f 	svcpl	0x0078745f
    1a58:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a5c:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    1a60:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1a64:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    1a68:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1a6c:	746e6500 	strbtvc	r6, [lr], #-1280	; 0xfffffb00
    1a70:	695f7972 	ldmdbvs	pc, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1a74:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
    1a78:	73706900 	cmnvc	r0, #0, 18
    1a7c:	61765f72 	cmnvs	r6, r2, ror pc
    1a80:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1a84:	5f78745f 	svcpl	0x0078745f
    1a88:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a8c:	705f6461 	subsvc	r6, pc, r1, ror #8
    1a90:	6f667265 	svcvs	0x00667265
    1a94:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1a98:	745f6563 	ldrbvc	r6, [pc], #-1379	; 1aa0 <_Min_Stack_Size+0xaa0>
    1a9c:	6f656d69 	svcvs	0x00656d69
    1aa0:	635f7475 	cmpvs	pc, #1962934272	; 0x75000000
    1aa4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1aa8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1aac:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1ab0:	5f646165 	svcpl	0x00646165
    1ab4:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
    1ab8:	5f747365 	svcpl	0x00747365
    1abc:	6f697270 	svcvs	0x00697270
    1ac0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1ac4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1ac8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1acc:	5f646165 	svcpl	0x00646165
    1ad0:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1ad4:	616d726f 	cmnvs	sp, pc, ror #4
    1ad8:	5f65636e 	svcpl	0x0065636e
    1adc:	656c6469 	strbvs	r6, [ip, #-1129]!	; 0xfffffb97
    1ae0:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    1ae4:	5f6e7275 	svcpl	0x006e7275
    1ae8:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1aec:	745f0074 	ldrbvc	r0, [pc], #-116	; 1af4 <_Min_Stack_Size+0xaf4>
    1af0:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1af4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1af8:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    1afc:	725f7865 	subsvc	r7, pc, #6619136	; 0x650000
    1b00:	61656c65 	cmnvs	r5, r5, ror #24
    1b04:	5f006573 	svcpl	0x00006573
    1b08:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1b10 <_Min_Stack_Size+0xb10>
    1b0c:	61657268 	cmnvs	r5, r8, ror #4
    1b10:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    1b14:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1b18:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1b1c:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
    1b20:	716e696c 	cmnvc	lr, ip, ror #18
    1b24:	68736975 	ldmdavs	r3!, {r0, r2, r4, r5, r6, r8, fp, sp, lr}^
    1b28:	756f635f 	strbvc	r6, [pc, #-863]!	; 17d1 <_Min_Stack_Size+0x7d1>
    1b2c:	5f00746e 	svcpl	0x0000746e
    1b30:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1b38 <_Min_Stack_Size+0xb38>
    1b34:	61657268 	cmnvs	r5, r8, ror #4
    1b38:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    1b3c:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1b40:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1b44:	6f735f65 	svcvs	0x00735f65
    1b48:	6963696c 	stmdbvs	r3!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1b4c:	5f646574 	svcpl	0x00646574
    1b50:	65657270 	strbvs	r7, [r5, #-624]!	; 0xfffffd90
    1b54:	6974706d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    1b58:	635f6e6f 	cmpvs	pc, #1776	; 0x6f0
    1b5c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1b60:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1b64:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1b68:	5f646165 	svcpl	0x00646165
    1b6c:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
    1b70:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1b74:	5f6e6f69 	svcpl	0x006e6f69
    1b78:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1b7c:	72655f6b 	rsbvc	r5, r5, #428	; 0x1ac
    1b80:	5f726f72 	svcpl	0x00726f72
    1b84:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    1b88:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1b8c:	5f78745f 	svcpl	0x0078745f
    1b90:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1b94:	705f6461 	subsvc	r6, pc, r1, ror #8
    1b98:	6f667265 	svcvs	0x00667265
    1b9c:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1ba0:	5f5f6563 	svcpl	0x005f6563
    1ba4:	63657865 	cmnvs	r5, #6619136	; 0x650000
    1ba8:	5f657475 	svcpl	0x00657475
    1bac:	5f676f6c 	svcpl	0x00676f6c
    1bb0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
    1bb4:	745f0078 	ldrbvc	r0, [pc], #-120	; 1bbc <_Min_Stack_Size+0xbbc>
    1bb8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1bbc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1bc0:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1bc4:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1bc8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1bcc:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    1bd0:	5f656d75 	svcpl	0x00656d75
    1bd4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1bd8:	745f0074 	ldrbvc	r0, [pc], #-116	; 1be0 <_Min_Stack_Size+0xbe0>
    1bdc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1be0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1be4:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1be8:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1bec:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1bf0:	6961775f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1bf4:	62615f74 	rsbvs	r5, r1, #116, 30	; 0x1d0
    1bf8:	5f74726f 	svcpl	0x0074726f
    1bfc:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1c00:	745f0074 	ldrbvc	r0, [pc], #-116	; 1c08 <_Min_Stack_Size+0xc08>
    1c04:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c08:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1c0c:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    1c10:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1c14:	616d5f79 	smcvs	54777	; 0xd5f9
    1c18:	5f007370 	svcpl	0x00007370
    1c1c:	765f7874 			; <UNDEFINED> instruction: 0x765f7874
    1c20:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1c24:	695f6e6f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1c28:	745f0064 	ldrbvc	r0, [pc], #-100	; 1c30 <_Min_Stack_Size+0xc30>
    1c2c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c30:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1c34:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    1c38:	5f6d6574 	svcpl	0x006d6574
    1c3c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1c40:	74705f6b 	ldrbtvc	r5, [r0], #-3947	; 0xfffff095
    1c44:	745f0072 	ldrbvc	r0, [pc], #-114	; 1c4c <_Min_Stack_Size+0xc4c>
    1c48:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c4c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1c50:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1c54:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1c58:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1c5c:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    1c60:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1c64:	6e695f79 	mcrvs	15, 3, r5, cr9, cr9, {3}
    1c68:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1c6c:	5f6e6f69 	svcpl	0x006e6f69
    1c70:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1c74:	745f0074 	ldrbvc	r0, [pc], #-116	; 1c7c <_Min_Stack_Size+0xc7c>
    1c78:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c7c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1c80:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1c84:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1c88:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1c8c:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1c90:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    1c94:	756f635f 	strbvc	r6, [pc, #-863]!	; 193d <_Min_Stack_Size+0x93d>
    1c98:	5f00746e 	svcpl	0x0000746e
    1c9c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1ca4 <_Min_Stack_Size+0xca4>
    1ca0:	61657268 	cmnvs	r5, r8, ror #4
    1ca4:	70735f64 	rsbsvc	r5, r3, r4, ror #30
    1ca8:	61696365 	cmnvs	r9, r5, ror #6
    1cac:	74735f6c 	ldrbtvc	r5, [r3], #-3948	; 0xfffff094
    1cb0:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    1cb4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1cb8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1cbc:	5f646165 	svcpl	0x00646165
    1cc0:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1cc4:	616d726f 	cmnvs	sp, pc, ror #4
    1cc8:	5f65636e 	svcpl	0x0065636e
    1ccc:	63657865 	cmnvs	r5, #6619136	; 0x650000
    1cd0:	5f657475 	svcpl	0x00657475
    1cd4:	00676f6c 	rsbeq	r6, r7, ip, ror #30
    1cd8:	5f78745f 	svcpl	0x0078745f
    1cdc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1ce0:	705f6461 	subsvc	r6, pc, r1, ror #8
    1ce4:	6f667265 	svcvs	0x00667265
    1ce8:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1cec:	6e5f6563 	cdpvs	5, 5, cr6, cr15, cr3, {3}
    1cf0:	695f6e6f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1cf4:	5f656c64 	svcpl	0x00656c64
    1cf8:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
    1cfc:	635f6e72 	cmpvs	pc, #1824	; 0x720
    1d00:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1d04:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1d08:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1d0c:	5f646165 	svcpl	0x00646165
    1d10:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1d14:	616d726f 	cmnvs	sp, pc, ror #4
    1d18:	5f65636e 	svcpl	0x0065636e
    1d1c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1d20:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    1d24:	635f6563 	cmpvs	pc, #415236096	; 0x18c00000
    1d28:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1d2c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1d30:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1d34:	5f646165 	svcpl	0x00646165
    1d38:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1d3c:	616d726f 	cmnvs	sp, pc, ror #4
    1d40:	5f65636e 	svcpl	0x0065636e
    1d44:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    1d48:	70757272 	rsbsvc	r7, r5, r2, ror r2
    1d4c:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    1d50:	706d6565 	rsbvc	r6, sp, r5, ror #10
    1d54:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1d58:	756f635f 	strbvc	r6, [pc, #-863]!	; 1a01 <_Min_Stack_Size+0xa01>
    1d5c:	2e00746e 	cdpcs	4, 0, cr7, cr0, cr14, {3}
    1d60:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1d64:	2f2e2e2f 	svccs	0x002e2e2f
    1d68:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1d6c:	2f736f74 	svccs	0x00736f74
    1d70:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1d74:	2f786461 	svccs	0x00786461
    1d78:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1d7c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1d80:	742f6372 	strtvc	r6, [pc], #-882	; 1d88 <_Min_Stack_Size+0xd88>
    1d84:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d88:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1d8c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1d90:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1d94:	2e657a69 	vnmulcs.f32	s15, s10, s19
    1d98:	745f0063 	ldrbvc	r0, [pc], #-99	; 1da0 <_Min_Stack_Size+0xda0>
    1d9c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1da0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1da4:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    1da8:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1dac:	696c5f79 	stmdbvs	ip!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1db0:	5f007473 	svcpl	0x00007473
    1db4:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1db8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    1dbc:	74706f5f 	ldrbtvc	r6, [r0], #-3935	; 0xfffff0a1
    1dc0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    1dc4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1dc8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1dcc:	5f646165 	svcpl	0x00646165
    1dd0:	6c656873 	stclvs	8, cr6, [r5], #-460	; 0xfffffe34
    1dd4:	6e655f6c 	cdpvs	15, 6, cr5, cr5, cr12, {3}
    1dd8:	00797274 	rsbseq	r7, r9, r4, ror r2
    1ddc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1de0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1de4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1de8:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1dec:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1df0:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1df4:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1d40 <_Min_Stack_Size+0xd40>
    1df8:	2f6e6f6d 	svccs	0x006e6f6d
    1dfc:	2f637273 	svccs	0x00637273
    1e00:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1e08 <_Min_Stack_Size+0xe08>
    1e04:	61657268 	cmnvs	r5, r8, ror #4
    1e08:	68735f64 	ldmdavs	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e0c:	5f6c6c65 	svcpl	0x006c6c65
    1e10:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
    1e14:	00632e79 	rsbeq	r2, r3, r9, ror lr
    1e18:	5f78745f 	svcpl	0x0078745f
    1e1c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    1e20:	5f6c6f72 	svcpl	0x006c6f72
    1e24:	00746567 	rsbseq	r6, r4, r7, ror #10
    1e28:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    1e2c:	5f6c6f72 	svcpl	0x006c6f72
    1e30:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
    1e34:	745f0065 	ldrbvc	r0, [pc], #-101	; 1e3c <_Min_Stack_Size+0xe3c>
    1e38:	6f635f78 	svcvs	0x00635f78
    1e3c:	6f72746e 	svcvs	0x0072746e
    1e40:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
    1e44:	745f0074 	ldrbvc	r0, [pc], #-116	; 1e4c <_Min_Stack_Size+0xe4c>
    1e48:	66765f78 	uhsub16vs	r5, r6, r8
    1e4c:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    1e50:	00657461 	rsbeq	r7, r5, r1, ror #8
    1e54:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1e58:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1e5c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1e60:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1e64:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1e68:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1e6c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1db8 <_Min_Stack_Size+0xdb8>
    1e70:	2f6e6f6d 	svccs	0x006e6f6d
    1e74:	2f637273 	svccs	0x00637273
    1e78:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1e80 <_Min_Stack_Size+0xe80>
    1e7c:	61657268 	cmnvs	r5, r8, ror #4
    1e80:	6c735f64 	ldclvs	15, cr5, [r3], #-400	; 0xfffffe70
    1e84:	2e706565 	cdpcs	5, 7, cr6, cr0, cr5, {3}
    1e88:	745f0063 	ldrbvc	r0, [pc], #-99	; 1e90 <_Min_Stack_Size+0xe90>
    1e8c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e90:	5f72656d 	svcpl	0x0072656d
    1e94:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1e98:	74006461 	strvc	r6, [r0], #-1121	; 0xfffffb9f
    1e9c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1ea0:	6369745f 	cmnvs	r9, #1593835520	; 0x5f000000
    1ea4:	7300736b 	movwvc	r7, #875	; 0x36b
    1ea8:	6b636174 	blvs	18da480 <__RAM_SIZE+0x17da480>
    1eac:	776f6c5f 			; <UNDEFINED> instruction: 0x776f6c5f
    1eb0:	00747365 	rsbseq	r7, r4, r5, ror #6
    1eb4:	5f78745f 	svcpl	0x0078745f
    1eb8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1ebc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1ec0:	6b636174 	blvs	18da498 <__RAM_SIZE+0x17da498>
    1ec4:	616e615f 	cmnvs	lr, pc, asr r1
    1ec8:	657a796c 	ldrbvs	r7, [sl, #-2412]!	; 0xfffff694
    1ecc:	2f2e2e00 	svccs	0x002e2e00
    1ed0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1ed4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1ed8:	6f747262 	svcvs	0x00747262
    1edc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1ee0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1ee4:	6f632f78 	svcvs	0x00632f78
    1ee8:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1eec:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1ef0:	5f78742f 	svcpl	0x0078742f
    1ef4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1ef8:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1efc:	6b636174 	blvs	18da4d4 <__RAM_SIZE+0x17da4d4>
    1f00:	616e615f 	cmnvs	lr, pc, asr r1
    1f04:	657a796c 	ldrbvs	r7, [sl, #-2412]!	; 0xfffff694
    1f08:	7300632e 	movwvc	r6, #814	; 0x32e
    1f0c:	6b636174 	blvs	18da4e4 <__RAM_SIZE+0x17da4e4>
    1f10:	6769685f 			; <UNDEFINED> instruction: 0x6769685f
    1f14:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    1f18:	2f2e2e00 	svccs	0x002e2e00
    1f1c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1f20:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1f24:	6f747262 	svcvs	0x00747262
    1f28:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f2c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f30:	6f632f78 	svcvs	0x00632f78
    1f34:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1f38:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1f3c:	5f78742f 	svcpl	0x0078742f
    1f40:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1f44:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1f48:	6b636174 	blvs	18da520 <__RAM_SIZE+0x17da520>
    1f4c:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    1f50:	685f726f 	ldmdavs	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1f54:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1f58:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
    1f5c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1f60:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1f64:	5f646165 	svcpl	0x00646165
    1f68:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1f6c:	72655f6b 	rsbvc	r5, r5, #428	; 0x1ac
    1f70:	5f726f72 	svcpl	0x00726f72
    1f74:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    1f78:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1f7c:	5f78745f 	svcpl	0x0078745f
    1f80:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1f84:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1f88:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1f8c:	72705f6d 	rsbsvc	r5, r0, #436	; 0x1b4
    1f90:	706d6565 	rsbvc	r6, sp, r5, ror #10
    1f94:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f98:	006b6365 	rsbeq	r6, fp, r5, ror #6
    1f9c:	6e655f5f 	mcrvs	15, 3, r5, cr5, cr15, {2}
    1fa0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1fa4:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    1fa8:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    1fac:	00737470 	rsbseq	r7, r3, r0, ror r4
    1fb0:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    1fb4:	5f746e65 	svcpl	0x00746e65
    1fb8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1fbc:	5f006461 	svcpl	0x00006461
    1fc0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1fc8 <_Min_Stack_Size+0xfc8>
    1fc4:	61657268 	cmnvs	r5, r8, ror #4
    1fc8:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1fcc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1fd0:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    1fd4:	5f6e7275 	svcpl	0x006e7275
    1fd8:	696c6e69 	stmdbvs	ip!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1fdc:	2e00656e 	cfsh32cs	mvfx6, mvfx0, #62
    1fe0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1fe4:	2f2e2e2f 	svccs	0x002e2e2f
    1fe8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1fec:	2f736f74 	svccs	0x00736f74
    1ff0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1ff4:	2f786461 	svccs	0x00786461
    1ff8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1ffc:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2000:	742f6372 	strtvc	r6, [pc], #-882	; 2008 <_Min_Stack_Size+0x1008>
    2004:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2008:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    200c:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2010:	5f6d6574 	svcpl	0x006d6574
    2014:	65657270 	strbvs	r7, [r5, #-624]!	; 0xfffffd90
    2018:	5f74706d 	svcpl	0x0074706d
    201c:	63656863 	cmnvs	r5, #6488064	; 0x630000
    2020:	00632e6b 	rsbeq	r2, r3, fp, ror #28
    2024:	626d6f63 	rsbvs	r6, sp, #396	; 0x18c
    2028:	64656e69 	strbtvs	r6, [r5], #-3689	; 0xfffff197
    202c:	616c665f 	cmnvs	ip, pc, asr r6
    2030:	5f007367 	svcpl	0x00007367
    2034:	745f7874 	ldrbvc	r7, [pc], #-2164	; 203c <_Min_Stack_Size+0x103c>
    2038:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    203c:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2040:	5f6d6574 	svcpl	0x006d6574
    2044:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    2048:	61766974 	cmnvs	r6, r4, ror r9
    204c:	5f006574 	svcpl	0x00006574
    2050:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2058 <_Min_Stack_Size+0x1058>
    2054:	61657268 	cmnvs	r5, r8, ror #4
    2058:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    205c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2060:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    2064:	00656d75 	rsbeq	r6, r5, r5, ror sp
    2068:	6f697270 	svcvs	0x00697270
    206c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2070:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2074:	61656800 	cmnvs	r5, r0, lsl #16
    2078:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
    207c:	61740072 	cmnvs	r4, r2, ror r0
    2080:	705f6c69 	subsvc	r6, pc, r9, ror #24
    2084:	2e007274 	mcrcs	2, 0, r7, cr0, cr4, {3}
    2088:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    208c:	2f2e2e2f 	svccs	0x002e2e2f
    2090:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2094:	2f736f74 	svccs	0x00736f74
    2098:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    209c:	2f786461 	svccs	0x00786461
    20a0:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    20a4:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    20a8:	742f6372 	strtvc	r6, [pc], #-882	; 20b0 <_Min_Stack_Size+0x10b0>
    20ac:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20b0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    20b4:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    20b8:	5f6d6574 	svcpl	0x006d6574
    20bc:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    20c0:	632e656d 			; <UNDEFINED> instruction: 0x632e656d
    20c4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    20c8:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    20cc:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    20d0:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    20d4:	63615f6d 	cmnvs	r1, #436	; 0x1b4
    20d8:	61766974 	cmnvs	r6, r4, ror r9
    20dc:	2e006574 	cfrshl64cs	mvdx0, mvdx4, r6
    20e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    20e4:	2f2e2e2f 	svccs	0x002e2e2f
    20e8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    20ec:	2f736f74 	svccs	0x00736f74
    20f0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    20f4:	2f786461 	svccs	0x00786461
    20f8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    20fc:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2100:	742f6372 	strtvc	r6, [pc], #-882	; 2108 <_Min_Stack_Size+0x1108>
    2104:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2108:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    210c:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2110:	5f6d6574 	svcpl	0x006d6574
    2114:	70737573 	rsbsvc	r7, r3, r3, ror r5
    2118:	2e646e65 	cdpcs	14, 6, cr6, cr4, cr5, {3}
    211c:	745f0063 	ldrbvc	r0, [pc], #-99	; 2124 <_Min_Stack_Size+0x1124>
    2120:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2124:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2128:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    212c:	5f6d6574 	svcpl	0x006d6574
    2130:	70737573 	rsbsvc	r7, r3, r3, ror r5
    2134:	00646e65 	rsbeq	r6, r4, r5, ror #28
    2138:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    213c:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    2140:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2144:	745f0079 	ldrbvc	r0, [pc], #-121	; 214c <_Min_Stack_Size+0x114c>
    2148:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    214c:	5f72656d 	svcpl	0x0072656d
    2150:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2154:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    2158:	70006563 	andvc	r6, r0, r3, ror #10
    215c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2160:	5f797469 	svcpl	0x00797469
    2164:	0070616d 	rsbseq	r6, r0, sp, ror #2
    2168:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    216c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2170:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2174:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2178:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    217c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2180:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 20cc <_Min_Stack_Size+0x10cc>
    2184:	2f6e6f6d 	svccs	0x006e6f6d
    2188:	2f637273 	svccs	0x00637273
    218c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2194 <_Min_Stack_Size+0x1194>
    2190:	61657268 	cmnvs	r5, r8, ror #4
    2194:	69745f64 	ldmdbvs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2198:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
    219c:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
    21a0:	5f00632e 	svcpl	0x0000632e
    21a4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 21ac <_Min_Stack_Size+0x11ac>
    21a8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    21ac:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    21b0:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    21b4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    21b8:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
    21bc:	00656369 	rsbeq	r6, r5, r9, ror #6
    21c0:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    21c4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    21c8:	5f646165 	svcpl	0x00646165
    21cc:	00727470 	rsbseq	r7, r2, r0, ror r4
    21d0:	5f78745f 	svcpl	0x0078745f
    21d4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    21d8:	745f6461 	ldrbvc	r6, [pc], #-1121	; 21e0 <_Min_Stack_Size+0x11e0>
    21dc:	5f656d69 	svcpl	0x00656d69
    21e0:	63696c73 	cmnvs	r9, #29440	; 0x7300
    21e4:	745f0065 	ldrbvc	r0, [pc], #-101	; 21ec <_Min_Stack_Size+0x11ec>
    21e8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21ec:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    21f0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    21f4:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    21f8:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    21fc:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    2200:	706e695f 	rsbvc	r6, lr, pc, asr r9
    2204:	2e007475 	mcrcs	4, 0, r7, cr0, cr5, {3}
    2208:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    220c:	2f2e2e2f 	svccs	0x002e2e2f
    2210:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2214:	2f736f74 	svccs	0x00736f74
    2218:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    221c:	2f786461 	svccs	0x00786461
    2220:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2224:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2228:	742f6372 	strtvc	r6, [pc], #-882	; 2230 <_Min_Stack_Size+0x1230>
    222c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2230:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2234:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2238:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    223c:	2e00632e 	cdpcs	3, 0, cr6, cr0, cr14, {1}
    2240:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2244:	2f2e2e2f 	svccs	0x002e2e2f
    2248:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    224c:	2f736f74 	svccs	0x00736f74
    2250:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2254:	2f786461 	svccs	0x00786461
    2258:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    225c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2260:	742f6372 	strtvc	r6, [pc], #-882	; 2268 <_Min_Stack_Size+0x1268>
    2264:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2268:	5f72656d 	svcpl	0x0072656d
    226c:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    2270:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2274:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    2278:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    227c:	632e7373 			; <UNDEFINED> instruction: 0x632e7373
    2280:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    2284:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2288:	655f7265 	ldrbvs	r7, [pc, #-613]	; 202b <_Min_Stack_Size+0x102b>
    228c:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2290:	6f697461 	svcvs	0x00697461
    2294:	72705f6e 	rsbsvc	r5, r0, #440	; 0x1b8
    2298:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    229c:	745f0073 	ldrbvc	r0, [pc], #-115	; 22a4 <_Min_Stack_Size+0x12a4>
    22a0:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22a4:	5f72656d 	svcpl	0x0072656d
    22a8:	61657263 	cmnvs	r5, r3, ror #4
    22ac:	5f646574 	svcpl	0x00646574
    22b0:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    22b4:	745f0074 	ldrbvc	r0, [pc], #-116	; 22bc <_Min_Stack_Size+0x12bc>
    22b8:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22bc:	5f72656d 	svcpl	0x0072656d
    22c0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    22c4:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    22c8:	5f787400 	svcpl	0x00787400
    22cc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    22d0:	64695f72 	strbtvs	r5, [r9], #-3954	; 0xfffff08e
    22d4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    22d8:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    22dc:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
    22e0:	5f747369 	svcpl	0x00747369
    22e4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    22e8:	745f0074 	ldrbvc	r0, [pc], #-116	; 22f0 <_Min_Stack_Size+0x12f0>
    22ec:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22f0:	5f72656d 	svcpl	0x0072656d
    22f4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    22f8:	635f6d65 	cmpvs	pc, #6464	; 0x1940
    22fc:	6b636f6c 	blvs	18de0b4 <__RAM_SIZE+0x17de0b4>
    2300:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    2304:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2308:	745f7265 	ldrbvc	r7, [pc], #-613	; 2310 <_Min_Stack_Size+0x1310>
    230c:	61657268 	cmnvs	r5, r8, ror #4
    2310:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    2314:	5f6b6361 	svcpl	0x006b6361
    2318:	61657261 	cmnvs	r5, r1, ror #4
    231c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    2320:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2324:	705f7265 	subsvc	r7, pc, r5, ror #4
    2328:	6f667265 	svcvs	0x00667265
    232c:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    2330:	5f5f6563 	svcpl	0x005f6563
    2334:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    2338:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    233c:	615f6e6f 	cmpvs	pc, pc, ror #28
    2340:	73756a64 	cmnvc	r5, #100, 20	; 0x64000
    2344:	6f635f74 	svcvs	0x00635f74
    2348:	00746e75 	rsbseq	r6, r4, r5, ror lr
    234c:	545f5854 	ldrbpl	r5, [pc], #-2132	; 2354 <_Min_Stack_Size+0x1354>
    2350:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    2354:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    2358:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    235c:	705f7265 	subsvc	r7, pc, r5, ror #4
    2360:	6f667265 	svcvs	0x00667265
    2364:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    2368:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    236c:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
    2370:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    2374:	6f635f65 	svcvs	0x00635f65
    2378:	00746e75 	rsbseq	r6, r4, r5, ror lr
    237c:	5f78745f 	svcpl	0x0078745f
    2380:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2384:	65705f72 	ldrbvs	r5, [r0, #-3954]!	; 0xfffff08e
    2388:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    238c:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    2390:	63615f65 	cmnvs	r1, #404	; 0x194
    2394:	61766974 	cmnvs	r6, r4, ror r9
    2398:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    239c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    23a0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    23a4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    23a8:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    23ac:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    23b0:	705f746e 	subsvc	r7, pc, lr, ror #8
    23b4:	74007274 	strvc	r7, [r0], #-628	; 0xfffffd8c
    23b8:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23bc:	5f72656d 	svcpl	0x0072656d
    23c0:	61657263 	cmnvs	r5, r3, ror #4
    23c4:	5f646574 	svcpl	0x00646574
    23c8:	76657270 			; <UNDEFINED> instruction: 0x76657270
    23cc:	73756f69 	cmnvc	r5, #420	; 0x1a4
    23d0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    23d4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    23d8:	705f7265 	subsvc	r7, pc, r5, ror #4
    23dc:	6f667265 	svcvs	0x00667265
    23e0:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    23e4:	645f6563 	ldrbvs	r6, [pc], #-1379	; 23ec <_Min_Stack_Size+0x13ec>
    23e8:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
    23ec:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    23f0:	6f635f65 	svcvs	0x00635f65
    23f4:	00746e75 	rsbseq	r6, r4, r5, ror lr
    23f8:	5f78745f 	svcpl	0x0078745f
    23fc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2400:	72705f72 	rsbsvc	r5, r0, #456	; 0x1c8
    2404:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2408:	5f007974 	svcpl	0x00007974
    240c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2414 <_Min_Stack_Size+0x1414>
    2410:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2414:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    2418:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    241c:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    2420:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    2424:	74617269 	strbtvc	r7, [r1], #-617	; 0xfffffd97
    2428:	5f6e6f69 	svcpl	0x006e6f69
    242c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    2430:	745f0074 	ldrbvc	r0, [pc], #-116	; 2438 <_Min_Stack_Size+0x1438>
    2434:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2438:	5f72656d 	svcpl	0x0072656d
    243c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2440:	69735f6b 	ldmdbvs	r3!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2444:	7400657a 	strvc	r6, [r0], #-1402	; 0xfffffa86
    2448:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    244c:	5f72656d 	svcpl	0x0072656d
    2450:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    2454:	5f787400 	svcpl	0x00787400
    2458:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    245c:	72635f72 	rsbvc	r5, r3, #456	; 0x1c8
    2460:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2464:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
    2468:	5f007478 	svcpl	0x00007478
    246c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2474 <_Min_Stack_Size+0x1474>
    2470:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2474:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    2478:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    247c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2480:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    2484:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2488:	006c616e 	rsbeq	r6, ip, lr, ror #2
    248c:	5f78745f 	svcpl	0x0078745f
    2490:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2494:	78655f72 	stmdavc	r5!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2498:	65726970 	ldrbvs	r6, [r2, #-2416]!	; 0xfffff690
    249c:	745f0064 	ldrbvc	r0, [pc], #-100	; 24a4 <_Min_Stack_Size+0x14a4>
    24a0:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    24a4:	5f72656d 	svcpl	0x0072656d
    24a8:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    24ac:	5f646572 	svcpl	0x00646572
    24b0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    24b4:	74705f72 	ldrbtvc	r5, [r0], #-3954	; 0xfffff08e
    24b8:	745f0072 	ldrbvc	r0, [pc], #-114	; 24c0 <_Min_Stack_Size+0x14c0>
    24bc:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    24c0:	5f72656d 	svcpl	0x0072656d
    24c4:	61657263 	cmnvs	r5, r3, ror #4
    24c8:	5f646574 	svcpl	0x00646574
    24cc:	00727470 	rsbseq	r7, r2, r0, ror r4
    24d0:	545f5854 	ldrbpl	r5, [pc], #-2132	; 24d8 <_Min_Stack_Size+0x14d8>
    24d4:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    24d8:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    24dc:	00544355 	subseq	r4, r4, r5, asr r3
    24e0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    24e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    24e8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    24ec:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    24f0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    24f4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    24f8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2444 <_Min_Stack_Size+0x1444>
    24fc:	2f6e6f6d 	svccs	0x006e6f6d
    2500:	2f637273 	svccs	0x00637273
    2504:	745f7874 	ldrbvc	r7, [pc], #-2164	; 250c <_Min_Stack_Size+0x150c>
    2508:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    250c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2510:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2514:	2e657a69 	vnmulcs.f32	s15, s10, s19
    2518:	745f0063 	ldrbvc	r0, [pc], #-99	; 2520 <_Min_Stack_Size+0x1520>
    251c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2520:	5f72656d 	svcpl	0x0072656d
    2524:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2528:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
    252c:	00747261 	rsbseq	r7, r4, r1, ror #4
    2530:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2534:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2538:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    253c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2540:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2544:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2548:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2494 <_Min_Stack_Size+0x1494>
    254c:	2f6e6f6d 	svccs	0x006e6f6d
    2550:	2f637273 	svccs	0x00637273
    2554:	745f7874 	ldrbvc	r7, [pc], #-2164	; 255c <_Min_Stack_Size+0x155c>
    2558:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    255c:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2560:	5f6d6574 	svcpl	0x006d6574
    2564:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    2568:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    256c:	6500632e 	strvs	r6, [r0, #-814]	; 0xfffffcd2
    2570:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2574:	6f697461 	svcvs	0x00697461
    2578:	69745f6e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    257c:	6e00656d 	cfsh32vs	mvfx6, mvfx0, #61
    2580:	5f747865 	svcpl	0x00747865
    2584:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2588:	65640072 	strbvs	r0, [r4, #-114]!	; 0xffffff8e
    258c:	0061746c 	rsbeq	r7, r1, ip, ror #8
    2590:	76657270 			; <UNDEFINED> instruction: 0x76657270
    2594:	73756f69 	cmnvc	r5, #420	; 0x1a4
    2598:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    259c:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    25a0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    25a4:	2f2e2e2f 	svccs	0x002e2e2f
    25a8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    25ac:	2f736f74 	svccs	0x00736f74
    25b0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    25b4:	2f786461 	svccs	0x00786461
    25b8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    25bc:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    25c0:	742f6372 	strtvc	r6, [pc], #-882	; 25c8 <_Min_Stack_Size+0x15c8>
    25c4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25c8:	5f72656d 	svcpl	0x0072656d
    25cc:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    25d0:	645f6d65 	ldrbvs	r6, [pc], #-3429	; 25d8 <_Min_Stack_Size+0x15d8>
    25d4:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
    25d8:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    25dc:	00632e65 	rsbeq	r2, r3, r5, ror #28
    25e0:	5f78745f 	svcpl	0x0078745f
    25e4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    25e8:	68745f72 	ldmdavs	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25ec:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    25f0:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    25f4:	77007972 	smlsdxvc	r0, r2, r9, r7
    25f8:	696b726f 	stmdbvs	fp!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    25fc:	705f676e 	subsvc	r6, pc, lr, ror #14
    2600:	65007274 	strvs	r7, [r0, #-628]	; 0xfffffd8c
    2604:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2608:	745f6465 	ldrbvc	r6, [pc], #-1125	; 2610 <_Min_Stack_Size+0x1610>
    260c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2610:	69740073 	ldmdbvs	r4!, {r0, r1, r4, r5, r6}^
    2614:	5f72656d 	svcpl	0x0072656d
    2618:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    261c:	695f6461 	ldmdbvs	pc, {r0, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
    2620:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
    2624:	2f2e2e00 	svccs	0x002e2e00
    2628:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    262c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2630:	6f747262 	svcvs	0x00747262
    2634:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2638:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    263c:	6f632f78 	svcvs	0x00632f78
    2640:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2644:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2648:	5f78742f 	svcpl	0x0078742f
    264c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2650:	68745f72 	ldmdavs	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2654:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2658:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    265c:	632e7972 			; <UNDEFINED> instruction: 0x632e7972
    2660:	61657200 	cmnvs	r5, r0, lsl #4
    2664:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    2668:	5f657461 	svcpl	0x00657461
    266c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2670:	75630072 	strbvc	r0, [r3, #-114]!	; 0xffffff8e
    2674:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    2678:	69745f74 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    267c:	0072656d 	rsbseq	r6, r2, sp, ror #10
    2680:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2684:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2688:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    268c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2690:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2694:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2698:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 25e4 <_Min_Stack_Size+0x15e4>
    269c:	2f6e6f6d 	svccs	0x006e6f6d
    26a0:	2f637273 	svccs	0x00637273
    26a4:	5f657874 	svcpl	0x00657874
    26a8:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    26ac:	65725f6b 	ldrbvs	r5, [r2, #-3947]!	; 0xfffff095
    26b0:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    26b4:	00632e65 	rsbeq	r2, r3, r5, ror #28
    26b8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    26bc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    26c0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    26c4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    26c8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    26cc:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    26d0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 261c <_Min_Stack_Size+0x161c>
    26d4:	2f6e6f6d 	svccs	0x006e6f6d
    26d8:	2f637273 	svccs	0x00637273
    26dc:	5f657874 	svcpl	0x00657874
    26e0:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    26e4:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
    26e8:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    26ec:	00632e65 	rsbeq	r2, r3, r5, ror #28
    26f0:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 2538 <_Min_Stack_Size+0x1538>
    26f4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    26f8:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2530 <_Min_Stack_Size+0x1530>
    26fc:	6f6c625f 	svcvs	0x006c625f
    2700:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    2704:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2708:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    270c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2710:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2714:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2718:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    271c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2720:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 266c <_Min_Stack_Size+0x166c>
    2724:	2f6e6f6d 	svccs	0x006e6f6d
    2728:	2f637273 	svccs	0x00637273
    272c:	5f657874 	svcpl	0x00657874
    2730:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    2734:	6f6f705f 	svcvs	0x006f705f
    2738:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
    273c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2740:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
    2744:	61657268 	cmnvs	r5, r8, ror #4
    2748:	6f635f64 	svcvs	0x00635f64
    274c:	6f72746e 	svcvs	0x0072746e
    2750:	6c625f6c 	stclvs	15, cr5, [r2], #-432	; 0xfffffe50
    2754:	5f6b636f 	svcpl	0x006b636f
    2758:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    275c:	65726200 	ldrbvs	r6, [r2, #-512]!	; 0xfffffe00
    2760:	665f6b61 	ldrbvs	r6, [pc], -r1, ror #22
    2764:	0067616c 	rsbeq	r6, r7, ip, ror #2
    2768:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    276c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2770:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2774:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2778:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    277c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2780:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 26cc <_Min_Stack_Size+0x16cc>
    2784:	2f6e6f6d 	svccs	0x006e6f6d
    2788:	2f637273 	svccs	0x00637273
    278c:	5f657874 	svcpl	0x00657874
    2790:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2794:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    2798:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    279c:	00632e65 	rsbeq	r2, r3, r5, ror #28
    27a0:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    27a4:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    27a8:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    27ac:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    27b0:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    27b4:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    27b8:	334d434d 	movtcc	r4, #54093	; 0xd34d
    27bc:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    27c0:	20554e47 	subscs	r4, r5, r7, asr #28
    27c4:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    27c8:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    27cc:	2f2e0031 	svccs	0x002e0031
    27d0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    27d4:	2f707574 	svccs	0x00707574
    27d8:	2f636367 	svccs	0x00636367
    27dc:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    27e0:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    27e4:	7a696c61 	bvc	1a5d970 <__RAM_SIZE+0x195d970>
    27e8:	6f6c5f65 	svcvs	0x006c5f65
    27ec:	656c5f77 	strbvs	r5, [ip, #-3959]!	; 0xfffff089
    27f0:	2e6c6576 	mcrcs	5, 3, r6, cr12, cr6, {3}
    27f4:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    27f8:	2f2e2e2f 	svccs	0x002e2e2f
    27fc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 274c <_Min_Stack_Size+0x174c>
    2800:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2804:	742f736f 	strtvc	r7, [pc], #-879	; 280c <_Min_Stack_Size+0x180c>
    2808:	61657268 	cmnvs	r5, r8, ror #4
    280c:	702f7864 	eorvc	r7, pc, r4, ror #16
    2810:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    2814:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2818:	5f786574 	svcpl	0x00786574
    281c:	2f33336d 	svccs	0x0033336d
    2820:	2f756e67 	svccs	0x00756e67
    2824:	2f637273 	svccs	0x00637273
    2828:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2830 <_Min_Stack_Size+0x1830>
    282c:	61657268 	cmnvs	r5, r8, ror #4
    2830:	63735f64 	cmnvs	r3, #100, 30	; 0x190
    2834:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    2838:	532e656c 			; <UNDEFINED> instruction: 0x532e656c
    283c:	2f2e2e00 	svccs	0x002e2e00
    2840:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2844:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2848:	6f747262 	svcvs	0x00747262
    284c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2850:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2854:	6f702f78 	svcvs	0x00702f78
    2858:	2f737472 	svccs	0x00737472
    285c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2860:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 26d4 <_Min_Stack_Size+0x16d4>
    2864:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    2868:	732f756e 			; <UNDEFINED> instruction: 0x732f756e
    286c:	742f6372 	strtvc	r6, [pc], #-882	; 2874 <_Min_Stack_Size+0x1874>
    2870:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2874:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2878:	6174735f 	cmnvs	r4, pc, asr r3
    287c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    2880:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    2884:	2e00532e 	cdpcs	3, 0, cr5, cr0, cr14, {1}
    2888:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    288c:	2f2e2e2f 	svccs	0x002e2e2f
    2890:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2894:	2f736f74 	svccs	0x00736f74
    2898:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    289c:	2f786461 	svccs	0x00786461
    28a0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    28a4:	6f632f73 	svcvs	0x00632f73
    28a8:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    28ac:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    28b0:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    28b4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    28b8:	5f78742f 	svcpl	0x0078742f
    28bc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    28c0:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
    28c4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    28c8:	2e747075 	mrccs	0, 3, r7, cr4, cr5, {3}
    28cc:	Address 0x000028cc is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
}
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000014 	andeq	r0, r0, r4, lsl r0
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	0000001c 	andeq	r0, r0, ip, lsl r0
      20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
      24:	00018e02 	andeq	r8, r1, r2, lsl #28
      28:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                thread_ptr -> tx_thread_performance_resume_count++;
      34:	00000010 	andeq	r0, r0, r0, lsl r0
        _tx_thread_system_ni_resume(thread_ptr);
      38:	83080e41 	movwhi	r0, #36417	; 0x8e41
      3c:	00018e02 	andeq	r8, r1, r2, lsl #28
}
      40:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      4c:	00000010 	andeq	r0, r0, r0, lsl r0
      50:	83080e41 	movwhi	r0, #36417	; 0x8e41
      54:	00018e02 	andeq	r8, r1, r2, lsl #28
      58:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      64:	00000014 	andeq	r0, r0, r4, lsl r0
      68:	83080e41 	movwhi	r0, #36417	; 0x8e41
      6c:	00018e02 	andeq	r8, r1, r2, lsl #28
      70:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      7c:	00000018 	andeq	r0, r0, r8, lsl r0
      80:	83080e41 	movwhi	r0, #36417	; 0x8e41
      84:	00018e02 	andeq	r8, r1, r2, lsl #28
      88:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      94:	00000018 	andeq	r0, r0, r8, lsl r0
      98:	83080e41 	movwhi	r0, #36417	; 0x8e41
      9c:	00018e02 	andeq	r8, r1, r2, lsl #28
      a0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      ac:	00000018 	andeq	r0, r0, r8, lsl r0
      b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      b4:	00018e02 	andeq	r8, r1, r2, lsl #28
      b8:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      c4:	00000018 	andeq	r0, r0, r8, lsl r0
      c8:	83080e41 	movwhi	r0, #36417	; 0x8e41
      cc:	00018e02 	andeq	r8, r1, r2, lsl #28
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      dc:	00000018 	andeq	r0, r0, r8, lsl r0
      e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      e4:	00018e02 	andeq	r8, r1, r2, lsl #28
      e8:	0000001c 	andeq	r0, r0, ip, lsl r0
      ec:	00000000 	andeq	r0, r0, r0
      f0:	1000081c 	andne	r0, r0, ip, lsl r8
      f4:	00000074 	andeq	r0, r0, r4, ror r0
      f8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      fc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     100:	380e4101 	stmdacc	lr, {r0, r8, lr}
     104:	000c0e6a 	andeq	r0, ip, sl, ror #28
     108:	00000014 	andeq	r0, r0, r4, lsl r0
     10c:	00000000 	andeq	r0, r0, r0
     110:	10000890 	mulne	r0, r0, r8
     114:	00000028 	andeq	r0, r0, r8, lsr #32
     118:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     11c:	00018e02 	andeq	r8, r1, r2, lsl #28
     120:	0000000c 	andeq	r0, r0, ip
     124:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     128:	7c020001 	stcvc	0, cr0, [r2], {1}
     12c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     130:	0000000c 	andeq	r0, r0, ip
     134:	00000120 	andeq	r0, r0, r0, lsr #2
     138:	00000000 	andeq	r0, r0, r0
     13c:	00000010 	andeq	r0, r0, r0, lsl r0
     140:	0000000c 	andeq	r0, r0, ip
     144:	00000120 	andeq	r0, r0, r0, lsr #2
     148:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
     14c:	0000002c 	andeq	r0, r0, ip, lsr #32
     150:	0000000c 	andeq	r0, r0, ip
     154:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     158:	7c020001 	stcvc	0, cr0, [r2], {1}
     15c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000150 	andeq	r0, r0, r0, asr r1
     168:	00000000 	andeq	r0, r0, r0
     16c:	00000008 	andeq	r0, r0, r8
     170:	0000000c 	andeq	r0, r0, ip
     174:	00000150 	andeq	r0, r0, r0, asr r1
     178:	100008e4 	andne	r0, r0, r4, ror #17
     17c:	00000002 	andeq	r0, r0, r2
     180:	00000018 	andeq	r0, r0, r8, lsl r0
     184:	00000150 	andeq	r0, r0, r0, asr r1
     188:	00000000 	andeq	r0, r0, r0
     18c:	0000000e 	andeq	r0, r0, lr
     190:	83080e42 	movwhi	r0, #36418	; 0x8e42
     194:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     198:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     19c:	0000000c 	andeq	r0, r0, ip
     1a0:	00000150 	andeq	r0, r0, r0, asr r1
     1a4:	100008e6 	andne	r0, r0, r6, ror #17
     1a8:	00000024 	andeq	r0, r0, r4, lsr #32
     1ac:	0000002c 	andeq	r0, r0, ip, lsr #32
     1b0:	00000150 	andeq	r0, r0, r0, asr r1
     1b4:	1000090a 	andne	r0, r0, sl, lsl #18
     1b8:	0000007e 	andeq	r0, r0, lr, ror r0
     1bc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     1c0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1c4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1c8:	8a048905 	bhi	1225e4 <__RAM_SIZE+0x225e4>
     1cc:	8e028b03 	vmlahi.f64	d8, d2, d3
     1d0:	300e4101 	andcc	r4, lr, r1, lsl #2
     1d4:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     1d8:	00000b42 	andeq	r0, r0, r2, asr #22
     1dc:	00000028 	andeq	r0, r0, r8, lsr #32
     1e0:	00000150 	andeq	r0, r0, r0, asr r1
     1e4:	10000988 	andne	r0, r0, r8, lsl #19
     1e8:	00000138 	andeq	r0, r0, r8, lsr r1
     1ec:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     1f0:	86068507 	strhi	r8, [r6], -r7, lsl #10
     1f4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     1f8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     1fc:	300e4101 	andcc	r4, lr, r1, lsl #2
     200:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     204:	000b421c 	andeq	r4, fp, ip, lsl r2
     208:	00000020 	andeq	r0, r0, r0, lsr #32
     20c:	00000150 	andeq	r0, r0, r0, asr r1
     210:	10000ac0 	andne	r0, r0, r0, asr #21
     214:	00000094 	muleq	r0, r4, r0
     218:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     21c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     220:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     224:	580e4101 	stmdapl	lr, {r0, r8, lr}
     228:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     22c:	00000028 	andeq	r0, r0, r8, lsr #32
     230:	00000150 	andeq	r0, r0, r0, asr r1
     234:	10000b54 	andne	r0, r0, r4, asr fp
     238:	000000c6 	andeq	r0, r0, r6, asr #1
     23c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     240:	86088509 	strhi	r8, [r8], -r9, lsl #10
     244:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     248:	8a048905 	bhi	122664 <__RAM_SIZE+0x22664>
     24c:	8e028b03 	vmlahi.f64	d8, d2, d3
     250:	780e4101 	stmdavc	lr, {r0, r8, lr}
     254:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     258:	0000003c 	andeq	r0, r0, ip, lsr r0
     25c:	00000150 	andeq	r0, r0, r0, asr r1
     260:	10000c20 	andne	r0, r0, r0, lsr #24
     264:	000003ea 	andeq	r0, r0, sl, ror #7
     268:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     26c:	86088509 	strhi	r8, [r8], -r9, lsl #10
     270:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     274:	8a048905 	bhi	122690 <__RAM_SIZE+0x22690>
     278:	8e028b03 	vmlahi.f64	d8, d2, d3
     27c:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     280:	050b5005 	streq	r5, [fp, #-5]
     284:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     288:	01250370 			; <UNDEFINED> instruction: 0x01250370
     28c:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     290:	51065006 	tstpl	r6, r6
     294:	0b42240e 	bleq	10892d4 <__RAM_SIZE+0xf892d4>
     298:	00000040 	andeq	r0, r0, r0, asr #32
     29c:	00000150 	andeq	r0, r0, r0, asr r1
     2a0:	10001010 	andne	r1, r0, r0, lsl r0
     2a4:	00000396 	muleq	r0, r6, r3
     2a8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2ac:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2b0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2b4:	8a048905 	bhi	1226d0 <__RAM_SIZE+0x226d0>
     2b8:	8e028b03 	vmlahi.f64	d8, d2, d3
     2bc:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2c0:	050b5005 	streq	r5, [fp, #-5]
     2c4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2c8:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     2cc:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     2d0:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     2d4:	42240e51 	eormi	r0, r4, #1296	; 0x510
     2d8:	0000000b 	andeq	r0, r0, fp
     2dc:	0000002c 	andeq	r0, r0, ip, lsr #32
     2e0:	00000150 	andeq	r0, r0, r0, asr r1
     2e4:	100013a8 	andne	r1, r0, r8, lsr #7
     2e8:	00000680 	andeq	r0, r0, r0, lsl #13
     2ec:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2f0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2f4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2f8:	8a048905 	bhi	122714 <__RAM_SIZE+0x22714>
     2fc:	8e028b03 	vmlahi.f64	d8, d2, d3
     300:	600e4101 	andvs	r4, lr, r1, lsl #2
     304:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     308:	00000024 	andeq	r0, r0, r4, lsr #32
     30c:	00000014 	andeq	r0, r0, r4, lsl r0
     310:	00000150 	andeq	r0, r0, r0, asr r1
     314:	10001a28 	andne	r1, r0, r8, lsr #20
     318:	0000000c 	andeq	r0, r0, ip
     31c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     320:	00018e02 	andeq	r8, r1, r2, lsl #28
     324:	00000030 	andeq	r0, r0, r0, lsr r0
     328:	00000150 	andeq	r0, r0, r0, asr r1
     32c:	10001a34 	andne	r1, r0, r4, lsr sl
     330:	0000002c 	andeq	r0, r0, ip, lsr #32
     334:	80100e41 	andshi	r0, r0, r1, asr #28
     338:	82038104 	andhi	r8, r3, #4, 2
     33c:	41018302 	tstmi	r1, r2, lsl #6
     340:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     344:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     348:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     34c:	c341100e 	movtgt	r1, #4110	; 0x100e
     350:	0ec0c1c2 	acseqdm	f4, f2
     354:	00000000 	andeq	r0, r0, r0
     358:	0000002c 	andeq	r0, r0, ip, lsr #32
     35c:	00000150 	andeq	r0, r0, r0, asr r1
     360:	00000000 	andeq	r0, r0, r0
     364:	0000002c 	andeq	r0, r0, ip, lsr #32
     368:	810c0e41 	tsthi	ip, r1, asr #28
     36c:	83028203 	movwhi	r8, #8707	; 0x2203
     370:	100e4101 	andne	r4, lr, r1, lsl #2
     374:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     378:	100e4c20 	andne	r4, lr, r0, lsr #24
     37c:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     380:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     384:	0000000e 	andeq	r0, r0, lr
     388:	0000002c 	andeq	r0, r0, ip, lsr #32
     38c:	00000150 	andeq	r0, r0, r0, asr r1
     390:	00000000 	andeq	r0, r0, r0
     394:	00000028 	andeq	r0, r0, r8, lsr #32
     398:	82080e41 	andhi	r0, r8, #1040	; 0x410
     39c:	41018302 	tstmi	r1, r2, lsl #6
     3a0:	0484100e 	streq	r1, [r4], #14
     3a4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     3a8:	100e4b20 	andne	r4, lr, r0, lsr #22
     3ac:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     3b0:	c2c34108 	sbcgt	r4, r3, #8, 2
     3b4:	0000000e 	andeq	r0, r0, lr
     3b8:	00000018 	andeq	r0, r0, r8, lsl r0
     3bc:	00000150 	andeq	r0, r0, r0, asr r1
     3c0:	00000000 	andeq	r0, r0, r0
     3c4:	00000020 	andeq	r0, r0, r0, lsr #32
     3c8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3cc:	180e4101 	stmdane	lr, {r0, r8, lr}
     3d0:	00040e49 	andeq	r0, r4, r9, asr #28
     3d4:	00000018 	andeq	r0, r0, r8, lsl r0
     3d8:	00000150 	andeq	r0, r0, r0, asr r1
     3dc:	00000000 	andeq	r0, r0, r0
     3e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     3e4:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3e8:	100e4101 	andne	r4, lr, r1, lsl #2
     3ec:	00040e48 	andeq	r0, r4, r8, asr #28
     3f0:	00000028 	andeq	r0, r0, r8, lsr #32
     3f4:	00000150 	andeq	r0, r0, r0, asr r1
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	00000030 	andeq	r0, r0, r0, lsr r0
     400:	82080e41 	andhi	r0, r8, #1040	; 0x410
     404:	41018302 	tstmi	r1, r2, lsl #6
     408:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     40c:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     410:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     414:	c341080e 	movtgt	r0, #6158	; 0x180e
     418:	00000ec2 	andeq	r0, r0, r2, asr #29
     41c:	0000000c 	andeq	r0, r0, ip
     420:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     424:	7c020001 	stcvc	0, cr0, [r2], {1}
     428:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     42c:	0000000c 	andeq	r0, r0, ip
     430:	0000041c 	andeq	r0, r0, ip, lsl r4
     434:	10001a60 	andne	r1, r0, r0, ror #20
     438:	00000014 	andeq	r0, r0, r4, lsl r0
     43c:	0000000c 	andeq	r0, r0, ip
     440:	0000041c 	andeq	r0, r0, ip, lsl r4
     444:	00000000 	andeq	r0, r0, r0
     448:	00000014 	andeq	r0, r0, r4, lsl r0
     44c:	00000018 	andeq	r0, r0, r8, lsl r0
     450:	0000041c 	andeq	r0, r0, ip, lsl r4
     454:	10001a74 	andne	r1, r0, r4, ror sl
     458:	0000001e 	andeq	r0, r0, lr, lsl r0
     45c:	83100e41 	tsthi	r0, #1040	; 0x410
     460:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     464:	00018e02 	andeq	r8, r1, r2, lsl #28
     468:	0000000c 	andeq	r0, r0, ip
     46c:	0000041c 	andeq	r0, r0, ip, lsl r4
     470:	10001a94 	mulne	r0, r4, sl
     474:	00000024 	andeq	r0, r0, r4, lsr #32
     478:	00000014 	andeq	r0, r0, r4, lsl r0
     47c:	0000041c 	andeq	r0, r0, ip, lsl r4
     480:	00000000 	andeq	r0, r0, r0
     484:	00000008 	andeq	r0, r0, r8
     488:	83080e41 	movwhi	r0, #36417	; 0x8e41
     48c:	00018e02 	andeq	r8, r1, r2, lsl #28
     490:	00000018 	andeq	r0, r0, r8, lsl r0
     494:	0000041c 	andeq	r0, r0, ip, lsl r4
     498:	00000000 	andeq	r0, r0, r0
     49c:	00000020 	andeq	r0, r0, r0, lsr #32
     4a0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     4a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4ac:	0000000c 	andeq	r0, r0, ip
     4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4b4:	7c020001 	stcvc	0, cr0, [r2], {1}
     4b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4bc:	00000014 	andeq	r0, r0, r4, lsl r0
     4c0:	000004ac 	andeq	r0, r0, ip, lsr #9
     4c4:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
     4c8:	00000056 	andeq	r0, r0, r6, asr r0
     4cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     4d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4d4:	0000000c 	andeq	r0, r0, ip
     4d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4dc:	7c020001 	stcvc	0, cr0, [r2], {1}
     4e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4e4:	00000020 	andeq	r0, r0, r0, lsr #32
     4e8:	000004d4 	ldrdeq	r0, [r0], -r4
     4ec:	10001b10 	andne	r1, r0, r0, lsl fp
     4f0:	000000ac 	andeq	r0, r0, ip, lsr #1
     4f4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     4f8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     4fc:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     500:	89038804 	stmdbhi	r3, {r2, fp, pc}
     504:	00018e02 	andeq	r8, r1, r2, lsl #28
     508:	0000000c 	andeq	r0, r0, ip
     50c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     510:	7c020001 	stcvc	0, cr0, [r2], {1}
     514:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     518:	00000014 	andeq	r0, r0, r4, lsl r0
     51c:	00000508 	andeq	r0, r0, r8, lsl #10
     520:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
     524:	00000038 	andeq	r0, r0, r8, lsr r0
     528:	83080e41 	movwhi	r0, #36417	; 0x8e41
     52c:	00018e02 	andeq	r8, r1, r2, lsl #28
     530:	0000000c 	andeq	r0, r0, ip
     534:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     538:	7c020001 	stcvc	0, cr0, [r2], {1}
     53c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     540:	0000001c 	andeq	r0, r0, ip, lsl r0
     544:	00000530 	andeq	r0, r0, r0, lsr r5
     548:	10001bf4 	strdne	r1, [r0], -r4
     54c:	00000088 	andeq	r0, r0, r8, lsl #1
     550:	83180e41 	tsthi	r8, #1040	; 0x410
     554:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     558:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     55c:	00018e02 	andeq	r8, r1, r2, lsl #28
     560:	0000000c 	andeq	r0, r0, ip
     564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     568:	7c020001 	stcvc	0, cr0, [r2], {1}
     56c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     570:	0000001c 	andeq	r0, r0, ip, lsl r0
     574:	00000560 	andeq	r0, r0, r0, ror #10
     578:	10001c7c 	andne	r1, r0, ip, ror ip
     57c:	000000e8 	andeq	r0, r0, r8, ror #1
     580:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     584:	86048505 	strhi	r8, [r4], -r5, lsl #10
     588:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     58c:	00000001 	andeq	r0, r0, r1
     590:	0000000c 	andeq	r0, r0, ip
     594:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     598:	7c020001 	stcvc	0, cr0, [r2], {1}
     59c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5a0:	00000014 	andeq	r0, r0, r4, lsl r0
     5a4:	00000590 	muleq	r0, r0, r5
     5a8:	10001d64 	andne	r1, r0, r4, ror #26
     5ac:	0000000c 	andeq	r0, r0, ip
     5b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b8:	0000000c 	andeq	r0, r0, ip
     5bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5c0:	7c020001 	stcvc	0, cr0, [r2], {1}
     5c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5c8:	00000014 	andeq	r0, r0, r4, lsl r0
     5cc:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
     5d0:	10001d70 	andne	r1, r0, r0, ror sp
     5d4:	0000004c 	andeq	r0, r0, ip, asr #32
     5d8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5dc:	00018e02 	andeq	r8, r1, r2, lsl #28
     5e0:	0000000c 	andeq	r0, r0, ip
     5e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5f0:	00000024 	andeq	r0, r0, r4, lsr #32
     5f4:	000005e0 	andeq	r0, r0, r0, ror #11
     5f8:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
     5fc:	0000012c 	andeq	r0, r0, ip, lsr #2
     600:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
     604:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     608:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     60c:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     610:	8b038a04 	blhi	e2e28 <SYSTICK_CYCLES+0xb9de9>
     614:	00018e02 	andeq	r8, r1, r2, lsl #28
     618:	0000000c 	andeq	r0, r0, ip
     61c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     620:	7c020001 	stcvc	0, cr0, [r2], {1}
     624:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     628:	0000000c 	andeq	r0, r0, ip
     62c:	00000618 	andeq	r0, r0, r8, lsl r6
     630:	10001ee8 	andne	r1, r0, r8, ror #29
     634:	00000020 	andeq	r0, r0, r0, lsr #32
     638:	0000000c 	andeq	r0, r0, ip
     63c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     640:	7c020001 	stcvc	0, cr0, [r2], {1}
     644:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     648:	00000018 	andeq	r0, r0, r8, lsl r0
     64c:	00000638 	andeq	r0, r0, r8, lsr r6
     650:	10001f08 	andne	r1, r0, r8, lsl #30
     654:	00000044 	andeq	r0, r0, r4, asr #32
     658:	83100e41 	tsthi	r0, #1040	; 0x410
     65c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     660:	00018e02 	andeq	r8, r1, r2, lsl #28
     664:	0000000c 	andeq	r0, r0, ip
     668:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     66c:	7c020001 	stcvc	0, cr0, [r2], {1}
     670:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     674:	00000018 	andeq	r0, r0, r8, lsl r0
     678:	00000664 	andeq	r0, r0, r4, ror #12
     67c:	10001f4c 	andne	r1, r0, ip, asr #30
     680:	00000074 	andeq	r0, r0, r4, ror r0
     684:	83100e41 	tsthi	r0, #1040	; 0x410
     688:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     68c:	00018e02 	andeq	r8, r1, r2, lsl #28
     690:	0000000c 	andeq	r0, r0, ip
     694:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     698:	7c020001 	stcvc	0, cr0, [r2], {1}
     69c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     6a4:	00000690 	muleq	r0, r0, r6
     6a8:	10001fc0 	andne	r1, r0, r0, asr #31
     6ac:	0000008c 	andeq	r0, r0, ip, lsl #1
     6b0:	84080e4f 	strhi	r0, [r8], #-3663	; 0xfffff1b1
     6b4:	65018502 	strvs	r8, [r1, #-1282]	; 0xfffffafe
     6b8:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     6bc:	000b4100 	andeq	r4, fp, r0, lsl #2
     6c0:	0000000c 	andeq	r0, r0, ip
     6c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6c8:	7c020001 	stcvc	0, cr0, [r2], {1}
     6cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6d0:	00000014 	andeq	r0, r0, r4, lsl r0
     6d4:	000006c0 	andeq	r0, r0, r0, asr #13
     6d8:	1000204c 	andne	r2, r0, ip, asr #32
     6dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     6e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6e8:	0000000c 	andeq	r0, r0, ip
     6ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6f0:	7c020001 	stcvc	0, cr0, [r2], {1}
     6f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6fc:	000006e8 	andeq	r0, r0, r8, ror #13
     700:	10002068 	andne	r2, r0, r8, rrx
     704:	000000d8 	ldrdeq	r0, [r0], -r8
     708:	84080e45 	strhi	r0, [r8], #-3653	; 0xfffff1bb
     70c:	02018e02 	andeq	r8, r1, #2, 28
     710:	c4000e59 	strgt	r0, [r0], #-3673	; 0xfffff1a7
     714:	000000ce 	andeq	r0, r0, lr, asr #1
     718:	0000000c 	andeq	r0, r0, ip
     71c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     720:	7c020001 	stcvc	0, cr0, [r2], {1}
     724:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     728:	00000014 	andeq	r0, r0, r4, lsl r0
     72c:	00000718 	andeq	r0, r0, r8, lsl r7
     730:	10002140 	andne	r2, r0, r0, asr #2
     734:	00000322 	andeq	r0, r0, r2, lsr #6
     738:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     73c:	00018e02 	andeq	r8, r1, r2, lsl #28
     740:	00000014 	andeq	r0, r0, r4, lsl r0
     744:	00000718 	andeq	r0, r0, r8, lsl r7
     748:	00000000 	andeq	r0, r0, r0
     74c:	0000004c 	andeq	r0, r0, ip, asr #32
     750:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     754:	00018e02 	andeq	r8, r1, r2, lsl #28
     758:	0000000c 	andeq	r0, r0, ip
     75c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     760:	7c020001 	stcvc	0, cr0, [r2], {1}
     764:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     768:	00000018 	andeq	r0, r0, r8, lsl r0
     76c:	00000758 	andeq	r0, r0, r8, asr r7
     770:	10002464 	andne	r2, r0, r4, ror #8
     774:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     778:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     77c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     780:	00018e02 	andeq	r8, r1, r2, lsl #28
     784:	00000014 	andeq	r0, r0, r4, lsl r0
     788:	00000758 	andeq	r0, r0, r8, asr r7
     78c:	00000000 	andeq	r0, r0, r0
     790:	00000030 	andeq	r0, r0, r0, lsr r0
     794:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     798:	00018e02 	andeq	r8, r1, r2, lsl #28
     79c:	0000000c 	andeq	r0, r0, ip
     7a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7a4:	7c020001 	stcvc	0, cr0, [r2], {1}
     7a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7ac:	00000018 	andeq	r0, r0, r8, lsl r0
     7b0:	0000079c 	muleq	r0, ip, r7
     7b4:	10002720 	andne	r2, r0, r0, lsr #14
     7b8:	00000178 	andeq	r0, r0, r8, ror r1
     7bc:	83100e41 	tsthi	r0, #1040	; 0x410
     7c0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     7c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7c8:	0000000c 	andeq	r0, r0, ip
     7cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7d0:	7c020001 	stcvc	0, cr0, [r2], {1}
     7d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7d8:	00000014 	andeq	r0, r0, r4, lsl r0
     7dc:	000007c8 	andeq	r0, r0, r8, asr #15
     7e0:	10002898 	mulne	r0, r8, r8
     7e4:	0000003c 	andeq	r0, r0, ip, lsr r0
     7e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     7f0:	0000000c 	andeq	r0, r0, ip
     7f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7f8:	7c020001 	stcvc	0, cr0, [r2], {1}
     7fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     800:	00000014 	andeq	r0, r0, r4, lsl r0
     804:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     808:	100028d4 	ldrdne	r2, [r0], -r4
     80c:	00000018 	andeq	r0, r0, r8, lsl r0
     810:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     814:	00018e02 	andeq	r8, r1, r2, lsl #28
     818:	0000000c 	andeq	r0, r0, ip
     81c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     820:	7c020001 	stcvc	0, cr0, [r2], {1}
     824:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     828:	00000018 	andeq	r0, r0, r8, lsl r0
     82c:	00000818 	andeq	r0, r0, r8, lsl r8
     830:	100028ec 	andne	r2, r0, ip, ror #17
     834:	00000090 	muleq	r0, r0, r0
     838:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     83c:	200e4101 	andcs	r4, lr, r1, lsl #2
     840:	00040e6b 	andeq	r0, r4, fp, ror #28
     844:	0000000c 	andeq	r0, r0, ip
     848:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     84c:	7c020001 	stcvc	0, cr0, [r2], {1}
     850:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     854:	0000000c 	andeq	r0, r0, ip
     858:	00000844 	andeq	r0, r0, r4, asr #16
     85c:	1000297c 	andne	r2, r0, ip, ror r9
     860:	00000058 	andeq	r0, r0, r8, asr r0
     864:	0000000c 	andeq	r0, r0, ip
     868:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     86c:	7c020001 	stcvc	0, cr0, [r2], {1}
     870:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     874:	0000000c 	andeq	r0, r0, ip
     878:	00000864 	andeq	r0, r0, r4, ror #16
     87c:	100029d4 	ldrdne	r2, [r0], -r4
     880:	0000002e 	andeq	r0, r0, lr, lsr #32
     884:	0000000c 	andeq	r0, r0, ip
     888:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     88c:	7c020001 	stcvc	0, cr0, [r2], {1}
     890:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     894:	0000001c 	andeq	r0, r0, ip, lsl r0
     898:	00000884 	andeq	r0, r0, r4, lsl #17
     89c:	10002a04 	andne	r2, r0, r4, lsl #20
     8a0:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     8a4:	84140e45 	ldrhi	r0, [r4], #-3653	; 0xfffff1bb
     8a8:	86048505 	strhi	r8, [r4], -r5, lsl #10
     8ac:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     8b0:	200e4101 	andcs	r4, lr, r1, lsl #2
     8b4:	0000000c 	andeq	r0, r0, ip
     8b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     8bc:	7c020001 	stcvc	0, cr0, [r2], {1}
     8c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8c4:	00000020 	andeq	r0, r0, r0, lsr #32
     8c8:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
     8cc:	10002bc0 	andne	r2, r0, r0, asr #23
     8d0:	00000028 	andeq	r0, r0, r8, lsr #32
     8d4:	83080e42 	movwhi	r0, #36418	; 0x8e42
     8d8:	4c018e02 	stcmi	14, cr8, [r1], {2}
     8dc:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     8e0:	83080e42 	movwhi	r0, #36418	; 0x8e42
     8e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e8:	0000000c 	andeq	r0, r0, ip
     8ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     8f0:	7c020001 	stcvc	0, cr0, [r2], {1}
     8f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8f8:	00000014 	andeq	r0, r0, r4, lsl r0
     8fc:	000008e8 	andeq	r0, r0, r8, ror #17
     900:	10002be8 	andne	r2, r0, r8, ror #23
     904:	00000094 	muleq	r0, r4, r0
     908:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     90c:	00018e02 	andeq	r8, r1, r2, lsl #28
     910:	0000000c 	andeq	r0, r0, ip
     914:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     918:	7c020001 	stcvc	0, cr0, [r2], {1}
     91c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     920:	00000040 	andeq	r0, r0, r0, asr #32
     924:	00000910 	andeq	r0, r0, r0, lsl r9
     928:	10002c7c 	andne	r2, r0, ip, ror ip
     92c:	000000d4 	ldrdeq	r0, [r0], -r4
     930:	83200e44 			; <UNDEFINED> instruction: 0x83200e44
     934:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     938:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     93c:	89038804 	stmdbhi	r3, {r2, fp, pc}
     940:	02018e02 	andeq	r8, r1, #2, 28
     944:	c3000e4f 	movwgt	r0, #3663	; 0xe4f
     948:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
     94c:	42cec9c8 	sbcmi	ip, lr, #200, 18	; 0x320000
     950:	0883200e 	stmeq	r3, {r1, r2, r3, sp}
     954:	06850784 	streq	r0, [r5], r4, lsl #15
     958:	04870586 	streq	r0, [r7], #1414	; 0x586
     95c:	02890388 	addeq	r0, r9, #136, 6	; 0x20000002
     960:	0000018e 	andeq	r0, r0, lr, lsl #3
     964:	0000000c 	andeq	r0, r0, ip
     968:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     96c:	7c020001 	stcvc	0, cr0, [r2], {1}
     970:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     974:	00000028 	andeq	r0, r0, r8, lsr #32
     978:	00000964 	andeq	r0, r0, r4, ror #18
     97c:	10002d50 	andne	r2, r0, r0, asr sp
     980:	00000148 	andeq	r0, r0, r8, asr #2
     984:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     988:	86078508 	strhi	r8, [r7], -r8, lsl #10
     98c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     990:	8a038904 	bhi	e2da8 <SYSTICK_CYCLES+0xb9d69>
     994:	41018e02 	tstmi	r1, r2, lsl #28
     998:	0a4c380e 	beq	130e9d8 <__RAM_SIZE+0x120e9d8>
     99c:	0b42200e 	bleq	10889dc <__RAM_SIZE+0xf889dc>
     9a0:	0000000c 	andeq	r0, r0, ip
     9a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     9a8:	7c020001 	stcvc	0, cr0, [r2], {1}
     9ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     9b0:	0000000c 	andeq	r0, r0, ip
     9b4:	000009a0 	andeq	r0, r0, r0, lsr #19
     9b8:	100031d0 	ldrdne	r3, [r0], -r0
     9bc:	0000000c 	andeq	r0, r0, ip
     9c0:	0000000c 	andeq	r0, r0, ip
     9c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     9c8:	7c020001 	stcvc	0, cr0, [r2], {1}
     9cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     9d0:	0000000c 	andeq	r0, r0, ip
     9d4:	000009c0 	andeq	r0, r0, r0, asr #19
     9d8:	100031dc 	ldrdne	r3, [r0], -ip
     9dc:	00000010 	andeq	r0, r0, r0, lsl r0
     9e0:	0000000c 	andeq	r0, r0, ip
     9e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     9e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     9ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     9f0:	00000014 	andeq	r0, r0, r4, lsl r0
     9f4:	000009e0 	andeq	r0, r0, r0, ror #19
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	00000048 	andeq	r0, r0, r8, asr #32
     a00:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     a04:	00018e02 	andeq	r8, r1, r2, lsl #28
     a08:	0000000c 	andeq	r0, r0, ip
     a0c:	000009e0 	andeq	r0, r0, r0, ror #19
     a10:	00000000 	andeq	r0, r0, r0
     a14:	0000000c 	andeq	r0, r0, ip
     a18:	00000014 	andeq	r0, r0, r4, lsl r0
     a1c:	000009e0 	andeq	r0, r0, r0, ror #19
     a20:	00000000 	andeq	r0, r0, r0
     a24:	00000018 	andeq	r0, r0, r8, lsl r0
     a28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	00000014 	andeq	r0, r0, r4, lsl r0
     a34:	000009e0 	andeq	r0, r0, r0, ror #19
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	00000018 	andeq	r0, r0, r8, lsl r0
     a40:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a44:	00018e02 	andeq	r8, r1, r2, lsl #28
     a48:	00000018 	andeq	r0, r0, r8, lsl r0
     a4c:	000009e0 	andeq	r0, r0, r0, ror #19
     a50:	00000000 	andeq	r0, r0, r0
     a54:	0000002c 	andeq	r0, r0, ip, lsr #32
     a58:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a5c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a60:	00018e02 	andeq	r8, r1, r2, lsl #28
     a64:	0000000c 	andeq	r0, r0, ip
     a68:	000009e0 	andeq	r0, r0, r0, ror #19
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	0000000c 	andeq	r0, r0, ip
     a74:	0000000c 	andeq	r0, r0, ip
     a78:	000009e0 	andeq	r0, r0, r0, ror #19
     a7c:	00000000 	andeq	r0, r0, r0
     a80:	0000000c 	andeq	r0, r0, ip
     a84:	0000000c 	andeq	r0, r0, ip
     a88:	000009e0 	andeq	r0, r0, r0, ror #19
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	0000000c 	andeq	r0, r0, ip
     a94:	0000000c 	andeq	r0, r0, ip
     a98:	000009e0 	andeq	r0, r0, r0, ror #19
     a9c:	00000000 	andeq	r0, r0, r0
     aa0:	0000000c 	andeq	r0, r0, ip
     aa4:	0000000c 	andeq	r0, r0, ip
     aa8:	000009e0 	andeq	r0, r0, r0, ror #19
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	0000000c 	andeq	r0, r0, ip
     ab4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ab8:	000009e0 	andeq	r0, r0, r0, ror #19
     abc:	00000000 	andeq	r0, r0, r0
     ac0:	00000070 	andeq	r0, r0, r0, ror r0
     ac4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ac8:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     acc:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
     ad0:	000b4200 	andeq	r4, fp, r0, lsl #4
     ad4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ad8:	000009e0 	andeq	r0, r0, r0, ror #19
     adc:	00000000 	andeq	r0, r0, r0
     ae0:	0000008c 	andeq	r0, r0, ip, lsl #1
     ae4:	83180e41 	tsthi	r8, #1040	; 0x410
     ae8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     aec:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     af0:	00018e02 	andeq	r8, r1, r2, lsl #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	000009e0 	andeq	r0, r0, r0, ror #19
     afc:	00000000 	andeq	r0, r0, r0
     b00:	0000001c 	andeq	r0, r0, ip, lsl r0
     b04:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b08:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     b0c:	000ec3ce 	andeq	ip, lr, lr, asr #7
     b10:	00000018 	andeq	r0, r0, r8, lsl r0
     b14:	000009e0 	andeq	r0, r0, r0, ror #19
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b20:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b24:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     b28:	000ec3ce 	andeq	ip, lr, lr, asr #7
     b2c:	0000000c 	andeq	r0, r0, ip
     b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b34:	7c020001 	stcvc	0, cr0, [r2], {1}
     b38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b3c:	00000020 	andeq	r0, r0, r0, lsr #32
     b40:	00000b2c 	andeq	r0, r0, ip, lsr #22
     b44:	00000000 	andeq	r0, r0, r0
     b48:	0000001a 	andeq	r0, r0, sl, lsl r0
     b4c:	83100e41 	tsthi	r0, #1040	; 0x410
     b50:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b54:	4a018e02 	bmi	64364 <SYSTICK_CYCLES+0x3b325>
     b58:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
     b5c:	0000000e 	andeq	r0, r0, lr
     b60:	00000024 	andeq	r0, r0, r4, lsr #32
     b64:	00000b2c 	andeq	r0, r0, ip, lsr #22
     b68:	00000000 	andeq	r0, r0, r0
     b6c:	000000b8 	strheq	r0, [r0], -r8
     b70:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     b74:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b78:	7f018e02 	svcvc	0x00018e02
     b7c:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
     b80:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
     b84:	0000000b 	andeq	r0, r0, fp
     b88:	0000000c 	andeq	r0, r0, ip
     b8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b90:	7c020001 	stcvc	0, cr0, [r2], {1}
     b94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b98:	0000001c 	andeq	r0, r0, ip, lsl r0
     b9c:	00000b88 	andeq	r0, r0, r8, lsl #23
     ba0:	100031ec 	andne	r3, r0, ip, ror #3
     ba4:	00000282 	andeq	r0, r0, r2, lsl #5
     ba8:	0c0e470a 	stceq	7, cr4, [lr], {10}
     bac:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     bb0:	3a03018e 	bcc	c11f0 <SYSTICK_CYCLES+0x981b1>
     bb4:	00000b01 	andeq	r0, r0, r1, lsl #22
     bb8:	00000018 	andeq	r0, r0, r8, lsl r0
     bbc:	00000b88 	andeq	r0, r0, r8, lsl #23
     bc0:	10003470 	andne	r3, r0, r0, ror r4
     bc4:	0000001e 	andeq	r0, r0, lr, lsl r0
     bc8:	0c0e460a 	stceq	6, cr4, [lr], {10}
     bcc:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     bd0:	0b49018e 	bleq	1241210 <__RAM_SIZE+0x1141210>
     bd4:	00000018 	andeq	r0, r0, r8, lsl r0
     bd8:	00000b88 	andeq	r0, r0, r8, lsl #23
     bdc:	10003490 	mulne	r0, r0, r4
     be0:	00000022 	andeq	r0, r0, r2, lsr #32
     be4:	0c0e460a 	stceq	6, cr4, [lr], {10}
     be8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     bec:	0b4b018e 	bleq	12c122c <__RAM_SIZE+0x11c122c>
     bf0:	00000018 	andeq	r0, r0, r8, lsl r0
     bf4:	00000b88 	andeq	r0, r0, r8, lsl #23
     bf8:	100034b4 			; <UNDEFINED> instruction: 0x100034b4
     bfc:	00000042 	andeq	r0, r0, r2, asr #32
     c00:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
     c04:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     c08:	0b47018e 	bleq	11c1248 <__RAM_SIZE+0x10c1248>
     c0c:	00000024 	andeq	r0, r0, r4, lsr #32
     c10:	00000b88 	andeq	r0, r0, r8, lsl #23
     c14:	100034f8 	strdne	r3, [r0], -r8
     c18:	0000006a 	andeq	r0, r0, sl, rrx
     c1c:	0e450a0a 	vmlaeq.f32	s1, s10, s20
     c20:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
     c24:	43018e02 	movwmi	r8, #7682	; 0x1e02
     c28:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
     c2c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     c30:	0b68018e 	bleq	1a01270 <__RAM_SIZE+0x1901270>
     c34:	0000000c 	andeq	r0, r0, ip
     c38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c3c:	7c020001 	stcvc	0, cr0, [r2], {1}
     c40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c44:	0000001c 	andeq	r0, r0, ip, lsl r0
     c48:	00000c34 	andeq	r0, r0, r4, lsr ip
     c4c:	10003564 	andne	r3, r0, r4, ror #10
     c50:	00000254 	andeq	r0, r0, r4, asr r2
     c54:	100e410a 	andne	r4, lr, sl, lsl #2
     c58:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
     c5c:	018e0286 	orreq	r0, lr, r6, lsl #5
     c60:	0b012903 	bleq	4b074 <SYSTICK_CYCLES+0x22035>
     c64:	0000001c 	andeq	r0, r0, ip, lsl r0
     c68:	00000c34 	andeq	r0, r0, r4, lsr ip
     c6c:	100037b8 			; <UNDEFINED> instruction: 0x100037b8
     c70:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     c74:	100e410a 	andne	r4, lr, sl, lsl #2
     c78:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
     c7c:	018e0286 	orreq	r0, lr, r6, lsl #5
     c80:	000be702 	andeq	lr, fp, r2, lsl #14
     c84:	0000000c 	andeq	r0, r0, ip
     c88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c8c:	7c020001 	stcvc	0, cr0, [r2], {1}
     c90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c94:	0000001c 	andeq	r0, r0, ip, lsl r0
     c98:	00000c84 	andeq	r0, r0, r4, lsl #25
     c9c:	10003988 	andne	r3, r0, r8, lsl #19
     ca0:	0000008a 	andeq	r0, r0, sl, lsl #1
     ca4:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
     ca8:	0e410a4a 	vmlseq.f32	s1, s2, s20
     cac:	520b5b00 	andpl	r5, fp, #0, 22
     cb0:	0b41000e 	bleq	1040cf0 <__RAM_SIZE+0xf40cf0>
     cb4:	00000018 	andeq	r0, r0, r8, lsl r0
     cb8:	00000c84 	andeq	r0, r0, r4, lsl #25
     cbc:	10003a14 	andne	r3, r0, r4, lsl sl
     cc0:	00000020 	andeq	r0, r0, r0, lsr #32
     cc4:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
     cc8:	018e0280 	orreq	r0, lr, r0, lsl #5
     ccc:	00000b47 	andeq	r0, r0, r7, asr #22
     cd0:	00000014 	andeq	r0, r0, r4, lsl r0
     cd4:	00000c84 	andeq	r0, r0, r4, lsl #25
     cd8:	10003a34 	andne	r3, r0, r4, lsr sl
     cdc:	00000012 	andeq	r0, r0, r2, lsl r0
     ce0:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     ce4:	0b47028e 	bleq	11c1724 <__RAM_SIZE+0x10c1724>
     ce8:	00000014 	andeq	r0, r0, r4, lsl r0
     cec:	00000c84 	andeq	r0, r0, r4, lsl #25
     cf0:	10003a48 	andne	r3, r0, r8, asr #20
     cf4:	00000012 	andeq	r0, r0, r2, lsl r0
     cf8:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     cfc:	0b47028e 	bleq	11c173c <__RAM_SIZE+0x10c173c>
     d00:	00000014 	andeq	r0, r0, r4, lsl r0
     d04:	00000c84 	andeq	r0, r0, r4, lsl #25
     d08:	10003a5c 	andne	r3, r0, ip, asr sl
     d0c:	00000012 	andeq	r0, r0, r2, lsl r0
     d10:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     d14:	0b47028e 	bleq	11c1754 <__RAM_SIZE+0x10c1754>
     d18:	00000014 	andeq	r0, r0, r4, lsl r0
     d1c:	00000c84 	andeq	r0, r0, r4, lsl #25
     d20:	10003a70 	andne	r3, r0, r0, ror sl
     d24:	00000012 	andeq	r0, r0, r2, lsl r0
     d28:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     d2c:	0b47028e 	bleq	11c176c <__RAM_SIZE+0x10c176c>
     d30:	00000014 	andeq	r0, r0, r4, lsl r0
     d34:	00000c84 	andeq	r0, r0, r4, lsl #25
     d38:	10003a84 	andne	r3, r0, r4, lsl #21
     d3c:	00000012 	andeq	r0, r0, r2, lsl r0
     d40:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     d44:	0b47028e 	bleq	11c1784 <__RAM_SIZE+0x10c1784>
     d48:	0000000c 	andeq	r0, r0, ip
     d4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d50:	7c020001 	stcvc	0, cr0, [r2], {1}
     d54:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d58:	00000010 	andeq	r0, r0, r0, lsl r0
     d5c:	00000d48 	andeq	r0, r0, r8, asr #26
     d60:	10003a98 	mulne	r0, r8, sl
     d64:	0000004e 	andeq	r0, r0, lr, asr #32
     d68:	000b670a 	andeq	r6, fp, sl, lsl #14
     d6c:	0000000c 	andeq	r0, r0, ip
     d70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d74:	7c020001 	stcvc	0, cr0, [r2], {1}
     d78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d7c:	00000010 	andeq	r0, r0, r0, lsl r0
     d80:	00000d6c 	andeq	r0, r0, ip, ror #26
     d84:	10003ae8 	andne	r3, r0, r8, ror #21
     d88:	00000040 	andeq	r0, r0, r0, asr #32
     d8c:	000b600a 	andeq	r6, fp, sl
     d90:	0000000c 	andeq	r0, r0, ip
     d94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d98:	7c020001 	stcvc	0, cr0, [r2], {1}
     d9c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     da0:	00000018 	andeq	r0, r0, r8, lsl r0
     da4:	00000d90 	muleq	r0, r0, sp
     da8:	10003b28 	andne	r3, r0, r8, lsr #22
     dac:	00000030 	andeq	r0, r0, r0, lsr r0
     db0:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
     db4:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
     db8:	00000010 	andeq	r0, r0, r0, lsl r0
     dbc:	0000000c 	andeq	r0, r0, ip
     dc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     dc4:	7c020001 	stcvc	0, cr0, [r2], {1}
     dc8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     dcc:	00000024 	andeq	r0, r0, r4, lsr #32
     dd0:	00000dbc 			; <UNDEFINED> instruction: 0x00000dbc
     dd4:	10003b58 	andne	r3, r0, r8, asr fp
     dd8:	000002ec 	andeq	r0, r0, ip, ror #5
     ddc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     de0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     de4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     de8:	8a048905 	bhi	123204 <__RAM_SIZE+0x23204>
     dec:	8e028b03 	vmlahi.f64	d8, d2, d3
     df0:	00000001 	andeq	r0, r0, r1
     df4:	0000000c 	andeq	r0, r0, ip
     df8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     dfc:	7c020001 	stcvc	0, cr0, [r2], {1}
     e00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     e04:	0000000c 	andeq	r0, r0, ip
     e08:	00000df4 	strdeq	r0, [r0], -r4
     e0c:	10003e44 	andne	r3, r0, r4, asr #28
     e10:	00000012 	andeq	r0, r0, r2, lsl r0
     e14:	00000020 	andeq	r0, r0, r0, lsr #32
     e18:	00000df4 	strdeq	r0, [r0], -r4
     e1c:	10003e58 	andne	r3, r0, r8, asr lr
     e20:	00000060 	andeq	r0, r0, r0, rrx
     e24:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     e28:	86078508 	strhi	r8, [r7], -r8, lsl #10
     e2c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     e30:	8a038904 	bhi	e3248 <SYSTICK_CYCLES+0xba209>
     e34:	00018e02 	andeq	r8, r1, r2, lsl #28
     e38:	0000000c 	andeq	r0, r0, ip
     e3c:	00000df4 	strdeq	r0, [r0], -r4
     e40:	10003eb8 			; <UNDEFINED> instruction: 0x10003eb8
     e44:	00000028 	andeq	r0, r0, r8, lsr #32
     e48:	0000002c 	andeq	r0, r0, ip, lsr #32
     e4c:	00000df4 	strdeq	r0, [r0], -r4
     e50:	10003ee0 	andne	r3, r0, r0, ror #29
     e54:	0000009c 	muleq	r0, ip, r0
     e58:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     e5c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     e60:	180e4201 	stmdane	lr, {r0, r9, lr}
     e64:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
     e68:	0a440b41 	beq	1103b74 <__RAM_SIZE+0x1003b74>
     e6c:	0b410c0e 	bleq	1043eac <__RAM_SIZE+0xf43eac>
     e70:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
     e74:	00000b41 	andeq	r0, r0, r1, asr #22
     e78:	00000018 	andeq	r0, r0, r8, lsl r0
     e7c:	00000df4 	strdeq	r0, [r0], -r4
     e80:	10003f7c 	andne	r3, r0, ip, ror pc
     e84:	00000058 	andeq	r0, r0, r8, asr r0
     e88:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
     e8c:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
     e90:	000ec4ce 	andeq	ip, lr, lr, asr #9
     e94:	0000000c 	andeq	r0, r0, ip
     e98:	00000df4 	strdeq	r0, [r0], -r4
     e9c:	10003fd4 	ldrdne	r3, [r0], -r4
     ea0:	00000004 	andeq	r0, r0, r4
     ea4:	0000000c 	andeq	r0, r0, ip
     ea8:	00000df4 	strdeq	r0, [r0], -r4
     eac:	10003fd8 	ldrdne	r3, [r0], -r8
     eb0:	0000000a 	andeq	r0, r0, sl
     eb4:	0000000c 	andeq	r0, r0, ip
     eb8:	00000df4 	strdeq	r0, [r0], -r4
     ebc:	10003fe4 	andne	r3, r0, r4, ror #31
     ec0:	00000002 	andeq	r0, r0, r2
     ec4:	00000018 	andeq	r0, r0, r8, lsl r0
     ec8:	00000df4 	strdeq	r0, [r0], -r4
     ecc:	10003fe8 	andne	r3, r0, r8, ror #31
     ed0:	0000003e 	andeq	r0, r0, lr, lsr r0
     ed4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     ed8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	0000002c 	andeq	r0, r0, ip, lsr #32
     ee4:	00000df4 	strdeq	r0, [r0], -r4
     ee8:	10004028 	andne	r4, r0, r8, lsr #32
     eec:	000000da 	ldrdeq	r0, [r0], -sl
     ef0:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     ef4:	86078508 	strhi	r8, [r7], -r8, lsl #10
     ef8:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     efc:	8a038904 	bhi	e3314 <SYSTICK_CYCLES+0xba2d5>
     f00:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     f04:	0207f00e 	andeq	pc, r7, #14
     f08:	200e0a5b 	andcs	r0, lr, fp, asr sl
     f0c:	00000b42 	andeq	r0, r0, r2, asr #22
     f10:	0000000c 	andeq	r0, r0, ip
     f14:	00000df4 	strdeq	r0, [r0], -r4
     f18:	10004104 	andne	r4, r0, r4, lsl #2
     f1c:	00000004 	andeq	r0, r0, r4
     f20:	00000024 	andeq	r0, r0, r4, lsr #32
     f24:	00000df4 	strdeq	r0, [r0], -r4
     f28:	10004108 	andne	r4, r0, r8, lsl #2
     f2c:	00000066 	andeq	r0, r0, r6, rrx
     f30:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     f34:	86048505 	strhi	r8, [r4], -r5, lsl #10
     f38:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     f3c:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
     f40:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
     f44:	000b4114 	andeq	r4, fp, r4, lsl r1
     f48:	00000018 	andeq	r0, r0, r8, lsl r0
     f4c:	00000df4 	strdeq	r0, [r0], -r4
     f50:	10004170 	andne	r4, r0, r0, ror r1
     f54:	00000012 	andeq	r0, r0, r2, lsl r0
     f58:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     f5c:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
     f60:	00000000 	andeq	r0, r0, r0
     f64:	00000018 	andeq	r0, r0, r8, lsl r0
     f68:	00000df4 	strdeq	r0, [r0], -r4
     f6c:	10004184 	andne	r4, r0, r4, lsl #3
     f70:	00000044 	andeq	r0, r0, r4, asr #32
     f74:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f78:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f80:	0000000c 	andeq	r0, r0, ip
     f84:	00000df4 	strdeq	r0, [r0], -r4
     f88:	100041c8 	andne	r4, r0, r8, asr #3
     f8c:	00000012 	andeq	r0, r0, r2, lsl r0
     f90:	0000000c 	andeq	r0, r0, ip
     f94:	00000df4 	strdeq	r0, [r0], -r4
     f98:	100041dc 	ldrdne	r4, [r0], -ip
     f9c:	00000002 	andeq	r0, r0, r2
     fa0:	0000000c 	andeq	r0, r0, ip
     fa4:	00000df4 	strdeq	r0, [r0], -r4
     fa8:	100041e0 	andne	r4, r0, r0, ror #3
     fac:	0000000c 	andeq	r0, r0, ip
     fb0:	0000000c 	andeq	r0, r0, ip
     fb4:	00000df4 	strdeq	r0, [r0], -r4
     fb8:	100041ec 	andne	r4, r0, ip, ror #3
     fbc:	00000034 	andeq	r0, r0, r4, lsr r0
     fc0:	0000001c 	andeq	r0, r0, ip, lsl r0
     fc4:	00000df4 	strdeq	r0, [r0], -r4
     fc8:	10004220 	andne	r4, r0, r0, lsr #4
     fcc:	00000018 	andeq	r0, r0, r8, lsl r0
     fd0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fd4:	41018e02 	tstmi	r1, r2, lsl #28
     fd8:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
     fdc:	00000008 	andeq	r0, r0, r8
     fe0:	0000000c 	andeq	r0, r0, ip
     fe4:	00000df4 	strdeq	r0, [r0], -r4
     fe8:	10004238 	andne	r4, r0, r8, lsr r2
     fec:	00000034 	andeq	r0, r0, r4, lsr r0
     ff0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ff4:	00000df4 	strdeq	r0, [r0], -r4
     ff8:	1000426c 	andne	r4, r0, ip, ror #4
     ffc:	00000018 	andeq	r0, r0, r8, lsl r0
    1000:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1004:	41018e02 	tstmi	r1, r2, lsl #28
    1008:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    100c:	00000008 	andeq	r0, r0, r8
    1010:	00000020 	andeq	r0, r0, r0, lsr #32
    1014:	00000df4 	strdeq	r0, [r0], -r4
    1018:	10004284 	andne	r4, r0, r4, lsl #5
    101c:	0000007c 	andeq	r0, r0, ip, ror r0
    1020:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1024:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1028:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    102c:	d00e4301 	andle	r4, lr, r1, lsl #6
    1030:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    1034:	00000030 	andeq	r0, r0, r0, lsr r0
    1038:	00000df4 	strdeq	r0, [r0], -r4
    103c:	10004300 	andne	r4, r0, r0, lsl #6
    1040:	000002c8 	andeq	r0, r0, r8, asr #5
    1044:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1048:	86088509 	strhi	r8, [r8], -r9, lsl #10
    104c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1050:	8a048905 	bhi	12346c <__RAM_SIZE+0x2346c>
    1054:	8e028b03 	vmlahi.f64	d8, d2, d3
    1058:	480e4201 	stmdami	lr, {r0, r9, lr}
    105c:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    1060:	0a710b42 	beq	1c43d70 <__RAM_SIZE+0x1b43d70>
    1064:	0b42240e 	bleq	108a0a4 <__RAM_SIZE+0xf8a0a4>
    1068:	0000000c 	andeq	r0, r0, ip
    106c:	00000df4 	strdeq	r0, [r0], -r4
    1070:	100045c8 	andne	r4, r0, r8, asr #11
    1074:	00000004 	andeq	r0, r0, r4
    1078:	0000000c 	andeq	r0, r0, ip
    107c:	00000df4 	strdeq	r0, [r0], -r4
    1080:	100045cc 	andne	r4, r0, ip, asr #11
    1084:	00000004 	andeq	r0, r0, r4
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	00000df4 	strdeq	r0, [r0], -r4
    1090:	100045d0 	ldrdne	r4, [r0], -r0
    1094:	00000004 	andeq	r0, r0, r4
    1098:	0000003c 	andeq	r0, r0, ip, lsr r0
    109c:	00000df4 	strdeq	r0, [r0], -r4
    10a0:	100045d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    10a4:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    10a8:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    10ac:	86068507 	strhi	r8, [r6], -r7, lsl #10
    10b0:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    10b4:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    10b8:	a80e4201 	stmdage	lr, {r0, r9, lr}
    10bc:	0e0a7102 	adfeqe	f7, f2, f2
    10c0:	6b0b421c 	blvs	2d1938 <__RAM_SIZE+0x1d1938>
    10c4:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    10c8:	0a48020b 	beq	12018fc <__RAM_SIZE+0x11018fc>
    10cc:	0b421c0e 	bleq	108810c <__RAM_SIZE+0xf8810c>
    10d0:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    10d4:	00000b42 	andeq	r0, r0, r2, asr #22
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    10e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10e8:	00000018 	andeq	r0, r0, r8, lsl r0
    10ec:	000010d8 	ldrdeq	r1, [r0], -r8
    10f0:	10004a34 	andne	r4, r0, r4, lsr sl
    10f4:	0000003c 	andeq	r0, r0, ip, lsr r0
    10f8:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    10fc:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    1100:	00000000 	andeq	r0, r0, r0
    1104:	0000001c 	andeq	r0, r0, ip, lsl r0
    1108:	000010d8 	ldrdeq	r1, [r0], -r8
    110c:	10004a70 	andne	r4, r0, r0, ror sl
    1110:	00000018 	andeq	r0, r0, r8, lsl r0
    1114:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1118:	41018e02 	tstmi	r1, r2, lsl #28
    111c:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1120:	00000008 	andeq	r0, r0, r8
    1124:	0000000c 	andeq	r0, r0, ip
    1128:	000010d8 	ldrdeq	r1, [r0], -r8
    112c:	10004a88 	andne	r4, r0, r8, lsl #21
    1130:	00000002 	andeq	r0, r0, r2
    1134:	00000028 	andeq	r0, r0, r8, lsr #32
    1138:	000010d8 	ldrdeq	r1, [r0], -r8
    113c:	10004a8c 	andne	r4, r0, ip, lsl #21
    1140:	000002ca 	andeq	r0, r0, sl, asr #5
    1144:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    1148:	86068507 	strhi	r8, [r6], -r7, lsl #10
    114c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    1150:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    1154:	300e4301 	andcc	r4, lr, r1, lsl #6
    1158:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    115c:	00000b42 	andeq	r0, r0, r2, asr #22
    1160:	00000018 	andeq	r0, r0, r8, lsl r0
    1164:	000010d8 	ldrdeq	r1, [r0], -r8
    1168:	10004d58 	andne	r4, r0, r8, asr sp
    116c:	00000030 	andeq	r0, r0, r0, lsr r0
    1170:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    1174:	180e4101 	stmdane	lr, {r0, r8, lr}
    1178:	00040e4c 	andeq	r0, r4, ip, asr #28
    117c:	00000014 	andeq	r0, r0, r4, lsl r0
    1180:	000010d8 	ldrdeq	r1, [r0], -r8
    1184:	10004d88 	andne	r4, r0, r8, lsl #27
    1188:	0000000a 	andeq	r0, r0, sl
    118c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1190:	00018e02 	andeq	r8, r1, r2, lsl #28
    1194:	00000014 	andeq	r0, r0, r4, lsl r0
    1198:	000010d8 	ldrdeq	r1, [r0], -r8
    119c:	10004d94 	mulne	r0, r4, sp
    11a0:	00000012 	andeq	r0, r0, r2, lsl r0
    11a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    11a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11ac:	00000014 	andeq	r0, r0, r4, lsl r0
    11b0:	000010d8 	ldrdeq	r1, [r0], -r8
    11b4:	00000000 	andeq	r0, r0, r0
    11b8:	00000006 	andeq	r0, r0, r6
    11bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
    11c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    11c4:	00000014 	andeq	r0, r0, r4, lsl r0
    11c8:	000010d8 	ldrdeq	r1, [r0], -r8
    11cc:	00000000 	andeq	r0, r0, r0
    11d0:	00000006 	andeq	r0, r0, r6
    11d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    11d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11dc:	0000000c 	andeq	r0, r0, ip
    11e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11e4:	7c020001 	stcvc	0, cr0, [r2], {1}
    11e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11ec:	00000014 	andeq	r0, r0, r4, lsl r0
    11f0:	000011dc 	ldrdeq	r1, [r0], -ip
    11f4:	10004dac 	andne	r4, r0, ip, lsr #27
    11f8:	0000000e 	andeq	r0, r0, lr
    11fc:	83080e42 	movwhi	r0, #36418	; 0x8e42
    1200:	00018e02 	andeq	r8, r1, r2, lsl #28
    1204:	0000000c 	andeq	r0, r0, ip
    1208:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    120c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1210:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1214:	00000014 	andeq	r0, r0, r4, lsl r0
    1218:	00001204 	andeq	r1, r0, r4, lsl #4
    121c:	10004dba 			; <UNDEFINED> instruction: 0x10004dba
    1220:	0000001a 	andeq	r0, r0, sl, lsl r0
    1224:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
    1228:	00018e02 	andeq	r8, r1, r2, lsl #28
    122c:	0000000c 	andeq	r0, r0, ip
    1230:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1234:	7c020001 	stcvc	0, cr0, [r2], {1}
    1238:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    123c:	00000018 	andeq	r0, r0, r8, lsl r0
    1240:	0000122c 	andeq	r1, r0, ip, lsr #4
    1244:	00000000 	andeq	r0, r0, r0
    1248:	00000028 	andeq	r0, r0, r8, lsr #32
    124c:	83100e41 	tsthi	r0, #1040	; 0x410
    1250:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1254:	00018e02 	andeq	r8, r1, r2, lsl #28
    1258:	00000018 	andeq	r0, r0, r8, lsl r0
    125c:	0000122c 	andeq	r1, r0, ip, lsr #4
    1260:	00000000 	andeq	r0, r0, r0
    1264:	00000030 	andeq	r0, r0, r0, lsr r0
    1268:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    126c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1270:	00018e02 	andeq	r8, r1, r2, lsl #28
    1274:	00000024 	andeq	r0, r0, r4, lsr #32
    1278:	0000122c 	andeq	r1, r0, ip, lsr #4
    127c:	10004dd4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1280:	00000050 	andeq	r0, r0, r0, asr r0
    1284:	83100e42 	tsthi	r0, #1056	; 0x420
    1288:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    128c:	55018e02 	strpl	r8, [r1, #-3586]	; 0xfffff1fe
    1290:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    1294:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    1298:	0000000b 	andeq	r0, r0, fp
    129c:	00000018 	andeq	r0, r0, r8, lsl r0
    12a0:	0000122c 	andeq	r1, r0, ip, lsr #4
    12a4:	00000000 	andeq	r0, r0, r0
    12a8:	00000048 	andeq	r0, r0, r8, asr #32
    12ac:	83100e42 	tsthi	r0, #1056	; 0x420
    12b0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    12b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    12b8:	0000000c 	andeq	r0, r0, ip
    12bc:	0000122c 	andeq	r1, r0, ip, lsr #4
    12c0:	10004e24 	andne	r4, r0, r4, lsr #28
    12c4:	00000010 	andeq	r0, r0, r0, lsl r0
    12c8:	0000000c 	andeq	r0, r0, ip
    12cc:	0000122c 	andeq	r1, r0, ip, lsr #4
    12d0:	00000000 	andeq	r0, r0, r0
    12d4:	00000010 	andeq	r0, r0, r0, lsl r0
    12d8:	0000000c 	andeq	r0, r0, ip
    12dc:	0000122c 	andeq	r1, r0, ip, lsr #4
    12e0:	00000000 	andeq	r0, r0, r0
    12e4:	0000000c 	andeq	r0, r0, ip
    12e8:	0000000c 	andeq	r0, r0, ip
    12ec:	0000122c 	andeq	r1, r0, ip, lsr #4
    12f0:	00000000 	andeq	r0, r0, r0
    12f4:	00000010 	andeq	r0, r0, r0, lsl r0
    12f8:	0000000c 	andeq	r0, r0, ip
    12fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1300:	7c020001 	stcvc	0, cr0, [r2], {1}
    1304:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1308:	00000018 	andeq	r0, r0, r8, lsl r0
    130c:	000012f8 	strdeq	r1, [r0], -r8
    1310:	10004e34 	andne	r4, r0, r4, lsr lr
    1314:	00000024 	andeq	r0, r0, r4, lsr #32
    1318:	83100e41 	tsthi	r0, #1040	; 0x410
    131c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1320:	00018e02 	andeq	r8, r1, r2, lsl #28
    1324:	0000000c 	andeq	r0, r0, ip
    1328:	000012f8 	strdeq	r1, [r0], -r8
    132c:	10004e58 	andne	r4, r0, r8, asr lr
    1330:	00000004 	andeq	r0, r0, r4

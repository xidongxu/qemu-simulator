
.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10001fd5 	ldrdne	r1, [r0], -r5
10000008:	10002029 	andne	r2, r0, r9, lsr #32
1000000c:	100020ad 	andne	r2, r0, sp, lsr #1
10000010:	10002029 	andne	r2, r0, r9, lsr #32
10000014:	10002029 	andne	r2, r0, r9, lsr #32
10000018:	100020b1 	strhne	r2, [r0], -r1
1000001c:	10002029 	andne	r2, r0, r9, lsr #32
	...
1000002c:	10002029 	andne	r2, r0, r9, lsr #32
10000030:	10002029 	andne	r2, r0, r9, lsr #32
10000034:	00000000 	andeq	r0, r0, r0
10000038:	1000214d 	andne	r2, r0, sp, asr #2
1000003c:	100020a1 	andne	r2, r0, r1, lsr #1
10000040:	10002029 	andne	r2, r0, r9, lsr #32
10000044:	10002029 	andne	r2, r0, r9, lsr #32
10000048:	10002029 	andne	r2, r0, r9, lsr #32
1000004c:	10002029 	andne	r2, r0, r9, lsr #32
10000050:	10002029 	andne	r2, r0, r9, lsr #32
10000054:	10002029 	andne	r2, r0, r9, lsr #32
10000058:	10002029 	andne	r2, r0, r9, lsr #32
1000005c:	10002029 	andne	r2, r0, r9, lsr #32
10000060:	10002029 	andne	r2, r0, r9, lsr #32
10000064:	10002029 	andne	r2, r0, r9, lsr #32
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000074 	stmdacc	r0, {r2, r4, r5, r6}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10004020 	andne	r4, r0, r0, lsr #32

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000078 	stmdacc	r0, {r3, r4, r5, r6}
100007fc:	10004020 	andne	r4, r0, r0, lsr #32

10000800 <main>:

static void main_task_init(void) {

}

int main(void) {
10000800:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
10000802:	f001 f8fb 	bl	100019fc <uart_init>

    printf("Start\r\n");
10000806:	4805      	ldr	r0, [pc, #20]	; (1000081c <main+0x1c>)
10000808:	f001 f8e8 	bl	100019dc <puts>
    int count = 0;
1000080c:	2100      	movs	r1, #0
    main_task_init();

    while (1) {
        __NOP();
1000080e:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
10000810:	1c4c      	adds	r4, r1, #1
10000812:	4803      	ldr	r0, [pc, #12]	; (10000820 <main+0x20>)
10000814:	f001 f8c2 	bl	1000199c <printf>
10000818:	4621      	mov	r1, r4
1000081a:	e7f8      	b.n	1000080e <main+0xe>
1000081c:	10003f3c 	andne	r3, r0, ip, lsr pc
10000820:	10003f44 	andne	r3, r0, r4, asr #30

10000824 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000824:	4b06      	ldr	r3, [pc, #24]	; (10000840 <SystemInit+0x1c>)
10000826:	4a07      	ldr	r2, [pc, #28]	; (10000844 <SystemInit+0x20>)
10000828:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
1000082a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
1000082e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
10000832:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
10000836:	4b04      	ldr	r3, [pc, #16]	; (10000848 <SystemInit+0x24>)
10000838:	4a04      	ldr	r2, [pc, #16]	; (1000084c <SystemInit+0x28>)
1000083a:	601a      	str	r2, [r3, #0]
}
1000083c:	4770      	bx	lr
1000083e:	bf00      	nop
10000840:	e000ed00 	and	lr, r0, r0, lsl #26
10000844:	10000000 	andne	r0, r0, r0
10000848:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
1000084c:	017d7840 	cmneq	sp, r0, asr #16

10000850 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
10000850:	4770      	bx	lr

10000852 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
10000852:	4601      	mov	r1, r0
  unsigned int i = 0U;
10000854:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
10000856:	e007      	b.n	10000868 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
10000858:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1000085c:	1c53      	adds	r3, r2, #1
1000085e:	600b      	str	r3, [r1, #0]
10000860:	7813      	ldrb	r3, [r2, #0]
10000862:	eb03 0040 	add.w	r0, r3, r0, lsl #1
10000866:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
10000868:	680a      	ldr	r2, [r1, #0]
1000086a:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
1000086c:	3b30      	subs	r3, #48	; 0x30
1000086e:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
10000870:	2b09      	cmp	r3, #9
10000872:	d9f1      	bls.n	10000858 <_atoi+0x6>
  }
  return i;
}
10000874:	4770      	bx	lr

10000876 <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
10000876:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000087a:	b083      	sub	sp, #12
1000087c:	4605      	mov	r5, r0
1000087e:	460e      	mov	r6, r1
10000880:	4693      	mov	fp, r2
10000882:	461f      	mov	r7, r3
10000884:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
10000888:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000088a:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
1000088e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000890:	f013 0f03 	tst.w	r3, #3
10000894:	d119      	bne.n	100008ca <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
10000896:	46a0      	mov	r8, r4
10000898:	9201      	str	r2, [sp, #4]
1000089a:	45c8      	cmp	r8, r9
1000089c:	d209      	bcs.n	100008b2 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
1000089e:	f102 0b01 	add.w	fp, r2, #1
100008a2:	463b      	mov	r3, r7
100008a4:	4631      	mov	r1, r6
100008a6:	2020      	movs	r0, #32
100008a8:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
100008aa:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
100008ae:	465a      	mov	r2, fp
100008b0:	e7f3      	b.n	1000089a <_out_rev+0x24>
100008b2:	f8dd b004 	ldr.w	fp, [sp, #4]
100008b6:	e008      	b.n	100008ca <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
100008b8:	3c01      	subs	r4, #1
100008ba:	f102 0801 	add.w	r8, r2, #1
100008be:	463b      	mov	r3, r7
100008c0:	4631      	mov	r1, r6
100008c2:	f81a 0004 	ldrb.w	r0, [sl, r4]
100008c6:	47a8      	blx	r5
100008c8:	4642      	mov	r2, r8
  while (len) {
100008ca:	2c00      	cmp	r4, #0
100008cc:	d1f4      	bne.n	100008b8 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
100008ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100008d0:	f013 0f02 	tst.w	r3, #2
100008d4:	d103      	bne.n	100008de <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
100008d6:	4610      	mov	r0, r2
100008d8:	b003      	add	sp, #12
100008da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
100008de:	eba2 030b 	sub.w	r3, r2, fp
100008e2:	454b      	cmp	r3, r9
100008e4:	d2f7      	bcs.n	100008d6 <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
100008e6:	1c54      	adds	r4, r2, #1
100008e8:	463b      	mov	r3, r7
100008ea:	4631      	mov	r1, r6
100008ec:	2020      	movs	r0, #32
100008ee:	47a8      	blx	r5
100008f0:	4622      	mov	r2, r4
100008f2:	e7f4      	b.n	100008de <_out_rev+0x68>

100008f4 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
100008f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100008f8:	b085      	sub	sp, #20
100008fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
100008fc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
100008fe:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000902:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000906:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000090a:	9f11      	ldr	r7, [sp, #68]	; 0x44
1000090c:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
1000090e:	f016 0f02 	tst.w	r6, #2
10000912:	d121      	bne.n	10000958 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000914:	b17f      	cbz	r7, 10000936 <_ntoa_format+0x42>
10000916:	f016 0f01 	tst.w	r6, #1
1000091a:	d00c      	beq.n	10000936 <_ntoa_format+0x42>
1000091c:	f1b9 0f00 	cmp.w	r9, #0
10000920:	d102      	bne.n	10000928 <_ntoa_format+0x34>
10000922:	f016 0f0c 	tst.w	r6, #12
10000926:	d006      	beq.n	10000936 <_ntoa_format+0x42>
      width--;
10000928:	3f01      	subs	r7, #1
1000092a:	e004      	b.n	10000936 <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
1000092c:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000930:	f805 c004 	strb.w	ip, [r5, r4]
10000934:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000936:	4574      	cmp	r4, lr
10000938:	d201      	bcs.n	1000093e <_ntoa_format+0x4a>
1000093a:	2c1f      	cmp	r4, #31
1000093c:	d9f6      	bls.n	1000092c <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
1000093e:	f016 0f01 	tst.w	r6, #1
10000942:	d009      	beq.n	10000958 <_ntoa_format+0x64>
10000944:	42bc      	cmp	r4, r7
10000946:	d207      	bcs.n	10000958 <_ntoa_format+0x64>
10000948:	2c1f      	cmp	r4, #31
1000094a:	d805      	bhi.n	10000958 <_ntoa_format+0x64>
      buf[len++] = '0';
1000094c:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000950:	f805 c004 	strb.w	ip, [r5, r4]
10000954:	3401      	adds	r4, #1
10000956:	e7f2      	b.n	1000093e <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000958:	f016 0f10 	tst.w	r6, #16
1000095c:	d017      	beq.n	1000098e <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
1000095e:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000962:	d104      	bne.n	1000096e <_ntoa_format+0x7a>
10000964:	b11c      	cbz	r4, 1000096e <_ntoa_format+0x7a>
10000966:	4574      	cmp	r4, lr
10000968:	d024      	beq.n	100009b4 <_ntoa_format+0xc0>
1000096a:	42bc      	cmp	r4, r7
1000096c:	d022      	beq.n	100009b4 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
1000096e:	f1b8 0f10 	cmp.w	r8, #16
10000972:	d02b      	beq.n	100009cc <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000974:	f1b8 0f10 	cmp.w	r8, #16
10000978:	d033      	beq.n	100009e2 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
1000097a:	f1b8 0f02 	cmp.w	r8, #2
1000097e:	d03b      	beq.n	100009f8 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000980:	2c1f      	cmp	r4, #31
10000982:	d804      	bhi.n	1000098e <_ntoa_format+0x9a>
      buf[len++] = '0';
10000984:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000988:	f805 c004 	strb.w	ip, [r5, r4]
1000098c:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
1000098e:	2c1f      	cmp	r4, #31
10000990:	d807      	bhi.n	100009a2 <_ntoa_format+0xae>
    if (negative) {
10000992:	f1b9 0f00 	cmp.w	r9, #0
10000996:	d037      	beq.n	10000a08 <_ntoa_format+0x114>
      buf[len++] = '-';
10000998:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
1000099c:	f805 c004 	strb.w	ip, [r5, r4]
100009a0:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100009a2:	9603      	str	r6, [sp, #12]
100009a4:	9702      	str	r7, [sp, #8]
100009a6:	9401      	str	r4, [sp, #4]
100009a8:	9500      	str	r5, [sp, #0]
100009aa:	f7ff ff64 	bl	10000876 <_out_rev>
}
100009ae:	b005      	add	sp, #20
100009b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
100009b4:	f1b4 0c01 	subs.w	ip, r4, #1
100009b8:	d006      	beq.n	100009c8 <_ntoa_format+0xd4>
100009ba:	f1b8 0f10 	cmp.w	r8, #16
100009be:	d001      	beq.n	100009c4 <_ntoa_format+0xd0>
      len--;
100009c0:	4664      	mov	r4, ip
100009c2:	e7d4      	b.n	1000096e <_ntoa_format+0x7a>
        len--;
100009c4:	3c02      	subs	r4, #2
100009c6:	e7d2      	b.n	1000096e <_ntoa_format+0x7a>
      len--;
100009c8:	4664      	mov	r4, ip
100009ca:	e7d0      	b.n	1000096e <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009cc:	f016 0f20 	tst.w	r6, #32
100009d0:	d1d0      	bne.n	10000974 <_ntoa_format+0x80>
100009d2:	2c1f      	cmp	r4, #31
100009d4:	d8ce      	bhi.n	10000974 <_ntoa_format+0x80>
      buf[len++] = 'x';
100009d6:	f04f 0c78 	mov.w	ip, #120	; 0x78
100009da:	f805 c004 	strb.w	ip, [r5, r4]
100009de:	3401      	adds	r4, #1
100009e0:	e7ce      	b.n	10000980 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009e2:	f016 0f20 	tst.w	r6, #32
100009e6:	d0c8      	beq.n	1000097a <_ntoa_format+0x86>
100009e8:	2c1f      	cmp	r4, #31
100009ea:	d8c6      	bhi.n	1000097a <_ntoa_format+0x86>
      buf[len++] = 'X';
100009ec:	f04f 0c58 	mov.w	ip, #88	; 0x58
100009f0:	f805 c004 	strb.w	ip, [r5, r4]
100009f4:	3401      	adds	r4, #1
100009f6:	e7c3      	b.n	10000980 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009f8:	2c1f      	cmp	r4, #31
100009fa:	d8c1      	bhi.n	10000980 <_ntoa_format+0x8c>
      buf[len++] = 'b';
100009fc:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000a00:	f805 c004 	strb.w	ip, [r5, r4]
10000a04:	3401      	adds	r4, #1
10000a06:	e7bb      	b.n	10000980 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000a08:	f016 0f04 	tst.w	r6, #4
10000a0c:	d005      	beq.n	10000a1a <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000a0e:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000a12:	f805 c004 	strb.w	ip, [r5, r4]
10000a16:	3401      	adds	r4, #1
10000a18:	e7c3      	b.n	100009a2 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000a1a:	f016 0f08 	tst.w	r6, #8
10000a1e:	d0c0      	beq.n	100009a2 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000a20:	f04f 0c20 	mov.w	ip, #32
10000a24:	f805 c004 	strb.w	ip, [r5, r4]
10000a28:	3401      	adds	r4, #1
10000a2a:	e7ba      	b.n	100009a2 <_ntoa_format+0xae>

10000a2c <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
10000a2e:	b091      	sub	sp, #68	; 0x44
10000a30:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000a32:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000a34:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000a36:	b90c      	cbnz	r4, 10000a3c <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000a38:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000a3c:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000a40:	d016      	beq.n	10000a70 <_ntoa_long+0x44>
10000a42:	b364      	cbz	r4, 10000a9e <_ntoa_long+0x72>
10000a44:	f04f 0e00 	mov.w	lr, #0
10000a48:	e012      	b.n	10000a70 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000a4a:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000a4e:	fa5f fc8c 	uxtb.w	ip, ip
10000a52:	f10e 0701 	add.w	r7, lr, #1
10000a56:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000a5a:	44ee      	add	lr, sp
10000a5c:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000a60:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000a64:	42ac      	cmp	r4, r5
10000a66:	d31b      	bcc.n	10000aa0 <_ntoa_long+0x74>
10000a68:	2f1f      	cmp	r7, #31
10000a6a:	d819      	bhi.n	10000aa0 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000a6c:	46be      	mov	lr, r7
      value /= base;
10000a6e:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000a70:	fbb4 fcf5 	udiv	ip, r4, r5
10000a74:	fb05 4c1c 	mls	ip, r5, ip, r4
10000a78:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000a7c:	f1bc 0f09 	cmp.w	ip, #9
10000a80:	d9e3      	bls.n	10000a4a <_ntoa_long+0x1e>
10000a82:	f016 0f20 	tst.w	r6, #32
10000a86:	d008      	beq.n	10000a9a <_ntoa_long+0x6e>
10000a88:	2741      	movs	r7, #65	; 0x41
10000a8a:	44bc      	add	ip, r7
10000a8c:	fa5f fc8c 	uxtb.w	ip, ip
10000a90:	f1ac 0c0a 	sub.w	ip, ip, #10
10000a94:	fa5f fc8c 	uxtb.w	ip, ip
10000a98:	e7db      	b.n	10000a52 <_ntoa_long+0x26>
10000a9a:	2761      	movs	r7, #97	; 0x61
10000a9c:	e7f5      	b.n	10000a8a <_ntoa_long+0x5e>
  size_t len = 0U;
10000a9e:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000aa0:	9606      	str	r6, [sp, #24]
10000aa2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000aa4:	9405      	str	r4, [sp, #20]
10000aa6:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000aa8:	9404      	str	r4, [sp, #16]
10000aaa:	9503      	str	r5, [sp, #12]
10000aac:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000ab0:	9402      	str	r4, [sp, #8]
10000ab2:	9701      	str	r7, [sp, #4]
10000ab4:	ac08      	add	r4, sp, #32
10000ab6:	9400      	str	r4, [sp, #0]
10000ab8:	f7ff ff1c 	bl	100008f4 <_ntoa_format>
}
10000abc:	b011      	add	sp, #68	; 0x44
10000abe:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000ac0 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000ac4:	b095      	sub	sp, #84	; 0x54
10000ac6:	9009      	str	r0, [sp, #36]	; 0x24
10000ac8:	910a      	str	r1, [sp, #40]	; 0x28
10000aca:	920b      	str	r2, [sp, #44]	; 0x2c
10000acc:	469b      	mov	fp, r3
10000ace:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000ad0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000ad2:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000ad4:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000ad8:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000adc:	ea55 0306 	orrs.w	r3, r5, r6
10000ae0:	d101      	bne.n	10000ae6 <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000ae2:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000ae6:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000aea:	d01f      	beq.n	10000b2c <_ntoa_long_long+0x6c>
10000aec:	ea55 0306 	orrs.w	r3, r5, r6
10000af0:	d030      	beq.n	10000b54 <_ntoa_long_long+0x94>
10000af2:	2400      	movs	r4, #0
10000af4:	e01a      	b.n	10000b2c <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000af6:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000afa:	b2d2      	uxtb	r2, r2
10000afc:	f104 0901 	add.w	r9, r4, #1
10000b00:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000b04:	eb0d 0403 	add.w	r4, sp, r3
10000b08:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000b0c:	463a      	mov	r2, r7
10000b0e:	4643      	mov	r3, r8
10000b10:	4628      	mov	r0, r5
10000b12:	4631      	mov	r1, r6
10000b14:	f002 f8c4 	bl	10002ca0 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000b18:	42bd      	cmp	r5, r7
10000b1a:	eb76 0308 	sbcs.w	r3, r6, r8
10000b1e:	d31b      	bcc.n	10000b58 <_ntoa_long_long+0x98>
10000b20:	f1b9 0f1f 	cmp.w	r9, #31
10000b24:	d818      	bhi.n	10000b58 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b26:	464c      	mov	r4, r9
      value /= base;
10000b28:	4605      	mov	r5, r0
10000b2a:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000b2c:	463a      	mov	r2, r7
10000b2e:	4643      	mov	r3, r8
10000b30:	4628      	mov	r0, r5
10000b32:	4631      	mov	r1, r6
10000b34:	f002 f8b4 	bl	10002ca0 <__aeabi_uldivmod>
10000b38:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b3a:	2b09      	cmp	r3, #9
10000b3c:	d9db      	bls.n	10000af6 <_ntoa_long_long+0x36>
10000b3e:	f01a 0f20 	tst.w	sl, #32
10000b42:	d005      	beq.n	10000b50 <_ntoa_long_long+0x90>
10000b44:	2241      	movs	r2, #65	; 0x41
10000b46:	441a      	add	r2, r3
10000b48:	b2d2      	uxtb	r2, r2
10000b4a:	3a0a      	subs	r2, #10
10000b4c:	b2d2      	uxtb	r2, r2
10000b4e:	e7d5      	b.n	10000afc <_ntoa_long_long+0x3c>
10000b50:	2261      	movs	r2, #97	; 0x61
10000b52:	e7f8      	b.n	10000b46 <_ntoa_long_long+0x86>
  size_t len = 0U;
10000b54:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000b58:	f8cd a018 	str.w	sl, [sp, #24]
10000b5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000b5e:	9305      	str	r3, [sp, #20]
10000b60:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000b62:	9304      	str	r3, [sp, #16]
10000b64:	9703      	str	r7, [sp, #12]
10000b66:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000b6a:	9302      	str	r3, [sp, #8]
10000b6c:	f8cd 9004 	str.w	r9, [sp, #4]
10000b70:	ab0c      	add	r3, sp, #48	; 0x30
10000b72:	9300      	str	r3, [sp, #0]
10000b74:	465b      	mov	r3, fp
10000b76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000b78:	990a      	ldr	r1, [sp, #40]	; 0x28
10000b7a:	9809      	ldr	r0, [sp, #36]	; 0x24
10000b7c:	f7ff feba 	bl	100008f4 <_ntoa_format>
}
10000b80:	b015      	add	sp, #84	; 0x54
10000b82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

10000b88 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000b8c:	ed2d 8b02 	vpush	{d8}
10000b90:	b091      	sub	sp, #68	; 0x44
10000b92:	4682      	mov	sl, r0
10000b94:	460c      	mov	r4, r1
10000b96:	4693      	mov	fp, r2
10000b98:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000b9a:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000b9e:	4610      	mov	r0, r2
10000ba0:	4619      	mov	r1, r3
10000ba2:	f002 f803 	bl	10002bac <__aeabi_dcmpeq>
10000ba6:	2800      	cmp	r0, #0
10000ba8:	f000 8107 	beq.w	10000dba <_etoa+0x232>
10000bac:	f04f 32ff 	mov.w	r2, #4294967295
10000bb0:	4bb1      	ldr	r3, [pc, #708]	; (10000e78 <_etoa+0x2f0>)
10000bb2:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000bb6:	f002 f821 	bl	10002bfc <__aeabi_dcmpgt>
10000bba:	2800      	cmp	r0, #0
10000bbc:	f040 80fd 	bne.w	10000dba <_etoa+0x232>
10000bc0:	f04f 32ff 	mov.w	r2, #4294967295
10000bc4:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000bc8:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000bcc:	f001 fff8 	bl	10002bc0 <__aeabi_dcmplt>
10000bd0:	2800      	cmp	r0, #0
10000bd2:	f040 80f2 	bne.w	10000dba <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000bd6:	2200      	movs	r2, #0
10000bd8:	2300      	movs	r3, #0
10000bda:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000bde:	f001 ffef 	bl	10002bc0 <__aeabi_dcmplt>
10000be2:	2800      	cmp	r0, #0
10000be4:	f040 80fe 	bne.w	10000de4 <_etoa+0x25c>
10000be8:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000bec:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000bf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000bf2:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000bf6:	930f      	str	r3, [sp, #60]	; 0x3c
10000bf8:	d101      	bne.n	10000bfe <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000bfa:	2306      	movs	r3, #6
10000bfc:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000bfe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000c02:	4602      	mov	r2, r0
10000c04:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000c08:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000c0c:	4690      	mov	r8, r2
10000c0e:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000c12:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000c16:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000c1a:	f001 fcf5 	bl	10002608 <__aeabi_i2d>
10000c1e:	a384      	add	r3, pc, #528	; (adr r3, 10000e30 <_etoa+0x2a8>)
10000c20:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c24:	f001 fd5a 	bl	100026dc <__aeabi_dmul>
10000c28:	a383      	add	r3, pc, #524	; (adr r3, 10000e38 <_etoa+0x2b0>)
10000c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c2e:	f001 fb9f 	bl	10002370 <__adddf3>
10000c32:	4606      	mov	r6, r0
10000c34:	460f      	mov	r7, r1
10000c36:	2200      	movs	r2, #0
10000c38:	4b90      	ldr	r3, [pc, #576]	; (10000e7c <_etoa+0x2f4>)
10000c3a:	4640      	mov	r0, r8
10000c3c:	4649      	mov	r1, r9
10000c3e:	f001 fb95 	bl	1000236c <__aeabi_dsub>
10000c42:	a37f      	add	r3, pc, #508	; (adr r3, 10000e40 <_etoa+0x2b8>)
10000c44:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c48:	f001 fd48 	bl	100026dc <__aeabi_dmul>
10000c4c:	4602      	mov	r2, r0
10000c4e:	460b      	mov	r3, r1
10000c50:	4630      	mov	r0, r6
10000c52:	4639      	mov	r1, r7
10000c54:	f001 fb8c 	bl	10002370 <__adddf3>
10000c58:	f001 ffda 	bl	10002c10 <__aeabi_d2iz>
10000c5c:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000c5e:	f001 fcd3 	bl	10002608 <__aeabi_i2d>
10000c62:	4680      	mov	r8, r0
10000c64:	4689      	mov	r9, r1
10000c66:	a378      	add	r3, pc, #480	; (adr r3, 10000e48 <_etoa+0x2c0>)
10000c68:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c6c:	f001 fd36 	bl	100026dc <__aeabi_dmul>
10000c70:	2200      	movs	r2, #0
10000c72:	4b83      	ldr	r3, [pc, #524]	; (10000e80 <_etoa+0x2f8>)
10000c74:	f001 fb7c 	bl	10002370 <__adddf3>
10000c78:	f001 ffca 	bl	10002c10 <__aeabi_d2iz>
10000c7c:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000c7e:	a374      	add	r3, pc, #464	; (adr r3, 10000e50 <_etoa+0x2c8>)
10000c80:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c84:	4640      	mov	r0, r8
10000c86:	4649      	mov	r1, r9
10000c88:	f001 fd28 	bl	100026dc <__aeabi_dmul>
10000c8c:	4680      	mov	r8, r0
10000c8e:	4689      	mov	r9, r1
10000c90:	4638      	mov	r0, r7
10000c92:	f001 fcb9 	bl	10002608 <__aeabi_i2d>
10000c96:	a370      	add	r3, pc, #448	; (adr r3, 10000e58 <_etoa+0x2d0>)
10000c98:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c9c:	f001 fd1e 	bl	100026dc <__aeabi_dmul>
10000ca0:	4602      	mov	r2, r0
10000ca2:	460b      	mov	r3, r1
10000ca4:	4640      	mov	r0, r8
10000ca6:	4649      	mov	r1, r9
10000ca8:	f001 fb60 	bl	1000236c <__aeabi_dsub>
10000cac:	4680      	mov	r8, r0
10000cae:	4689      	mov	r9, r1
  const double z2 = z * z;
10000cb0:	4602      	mov	r2, r0
10000cb2:	460b      	mov	r3, r1
10000cb4:	f001 fd12 	bl	100026dc <__aeabi_dmul>
10000cb8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000cbc:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000cc0:	2100      	movs	r1, #0
10000cc2:	2200      	movs	r2, #0
10000cc4:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000cc8:	053b      	lsls	r3, r7, #20
10000cca:	9309      	str	r3, [sp, #36]	; 0x24
10000ccc:	2300      	movs	r3, #0
10000cce:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000cd0:	4642      	mov	r2, r8
10000cd2:	464b      	mov	r3, r9
10000cd4:	4640      	mov	r0, r8
10000cd6:	4649      	mov	r1, r9
10000cd8:	f001 fb4a 	bl	10002370 <__adddf3>
10000cdc:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000ce0:	4642      	mov	r2, r8
10000ce2:	464b      	mov	r3, r9
10000ce4:	2000      	movs	r0, #0
10000ce6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000cea:	f001 fb3f 	bl	1000236c <__aeabi_dsub>
10000cee:	4680      	mov	r8, r0
10000cf0:	4689      	mov	r9, r1
10000cf2:	2200      	movs	r2, #0
10000cf4:	4b63      	ldr	r3, [pc, #396]	; (10000e84 <_etoa+0x2fc>)
10000cf6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000cfa:	f001 fe19 	bl	10002930 <__aeabi_ddiv>
10000cfe:	2200      	movs	r2, #0
10000d00:	4b61      	ldr	r3, [pc, #388]	; (10000e88 <_etoa+0x300>)
10000d02:	f001 fb35 	bl	10002370 <__adddf3>
10000d06:	4602      	mov	r2, r0
10000d08:	460b      	mov	r3, r1
10000d0a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d0e:	f001 fe0f 	bl	10002930 <__aeabi_ddiv>
10000d12:	2200      	movs	r2, #0
10000d14:	4b5d      	ldr	r3, [pc, #372]	; (10000e8c <_etoa+0x304>)
10000d16:	f001 fb2b 	bl	10002370 <__adddf3>
10000d1a:	4602      	mov	r2, r0
10000d1c:	460b      	mov	r3, r1
10000d1e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d22:	f001 fe05 	bl	10002930 <__aeabi_ddiv>
10000d26:	4602      	mov	r2, r0
10000d28:	460b      	mov	r3, r1
10000d2a:	4640      	mov	r0, r8
10000d2c:	4649      	mov	r1, r9
10000d2e:	f001 fb1f 	bl	10002370 <__adddf3>
10000d32:	4602      	mov	r2, r0
10000d34:	460b      	mov	r3, r1
10000d36:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000d3a:	f001 fdf9 	bl	10002930 <__aeabi_ddiv>
10000d3e:	2200      	movs	r2, #0
10000d40:	4b53      	ldr	r3, [pc, #332]	; (10000e90 <_etoa+0x308>)
10000d42:	f001 fb15 	bl	10002370 <__adddf3>
10000d46:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000d4a:	f001 fcc7 	bl	100026dc <__aeabi_dmul>
10000d4e:	4680      	mov	r8, r0
10000d50:	4689      	mov	r9, r1
10000d52:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000d56:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000d5a:	f001 ff4f 	bl	10002bfc <__aeabi_dcmpgt>
10000d5e:	b140      	cbz	r0, 10000d72 <_etoa+0x1ea>
    expval--;
10000d60:	3e01      	subs	r6, #1
    conv.F /= 10;
10000d62:	2200      	movs	r2, #0
10000d64:	4b48      	ldr	r3, [pc, #288]	; (10000e88 <_etoa+0x300>)
10000d66:	4640      	mov	r0, r8
10000d68:	4649      	mov	r1, r9
10000d6a:	f001 fde1 	bl	10002930 <__aeabi_ddiv>
10000d6e:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000d72:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000d76:	2bc6      	cmp	r3, #198	; 0xc6
10000d78:	d83f      	bhi.n	10000dfa <_etoa+0x272>
10000d7a:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000d7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000d7e:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000d82:	d044      	beq.n	10000e0e <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000d84:	a336      	add	r3, pc, #216	; (adr r3, 10000e60 <_etoa+0x2d8>)
10000d86:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d8a:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000d8e:	4640      	mov	r0, r8
10000d90:	4649      	mov	r1, r9
10000d92:	f001 ff29 	bl	10002be8 <__aeabi_dcmpge>
10000d96:	2800      	cmp	r0, #0
10000d98:	d03f      	beq.n	10000e1a <_etoa+0x292>
10000d9a:	a333      	add	r3, pc, #204	; (adr r3, 10000e68 <_etoa+0x2e0>)
10000d9c:	e9d3 2300 	ldrd	r2, r3, [r3]
10000da0:	4640      	mov	r0, r8
10000da2:	4649      	mov	r1, r9
10000da4:	f001 ff0c 	bl	10002bc0 <__aeabi_dcmplt>
10000da8:	2800      	cmp	r0, #0
10000daa:	d036      	beq.n	10000e1a <_etoa+0x292>
      if ((int)prec > expval) {
10000dac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000dae:	42b3      	cmp	r3, r6
10000db0:	dd25      	ble.n	10000dfe <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000db2:	1b9e      	subs	r6, r3, r6
10000db4:	1e73      	subs	r3, r6, #1
10000db6:	931e      	str	r3, [sp, #120]	; 0x78
10000db8:	e023      	b.n	10000e02 <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000dba:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000dbc:	9304      	str	r3, [sp, #16]
10000dbe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000dc0:	9303      	str	r3, [sp, #12]
10000dc2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000dc4:	9302      	str	r3, [sp, #8]
10000dc6:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000dca:	ed8d 7b00 	vstr	d7, [sp]
10000dce:	462b      	mov	r3, r5
10000dd0:	465a      	mov	r2, fp
10000dd2:	4621      	mov	r1, r4
10000dd4:	4650      	mov	r0, sl
10000dd6:	f000 f8cf 	bl	10000f78 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000dda:	b011      	add	sp, #68	; 0x44
10000ddc:	ecbd 8b02 	vpop	{d8}
10000de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000de4:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000e70 <_etoa+0x2e8>
10000de8:	ed8d 7b06 	vstr	d7, [sp, #24]
10000dec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000dee:	9306      	str	r3, [sp, #24]
10000df0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000df2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000df6:	9307      	str	r3, [sp, #28]
10000df8:	e6fa      	b.n	10000bf0 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000dfa:	2705      	movs	r7, #5
10000dfc:	e7be      	b.n	10000d7c <_etoa+0x1f4>
        prec = 0;
10000dfe:	2300      	movs	r3, #0
10000e00:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000e02:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e04:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000e08:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000e0a:	2700      	movs	r7, #0
      expval   = 0;
10000e0c:	463e      	mov	r6, r7
  if (width > minwidth) {
10000e0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e10:	429f      	cmp	r7, r3
10000e12:	d23f      	bcs.n	10000e94 <_etoa+0x30c>
    fwidth -= minwidth;
10000e14:	eba3 0807 	sub.w	r8, r3, r7
10000e18:	e03e      	b.n	10000e98 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000e1a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e1c:	2b00      	cmp	r3, #0
10000e1e:	d0f6      	beq.n	10000e0e <_etoa+0x286>
10000e20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000e22:	2b00      	cmp	r3, #0
10000e24:	d0f3      	beq.n	10000e0e <_etoa+0x286>
        --prec;
10000e26:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e28:	3b01      	subs	r3, #1
10000e2a:	931e      	str	r3, [sp, #120]	; 0x78
10000e2c:	e7ef      	b.n	10000e0e <_etoa+0x286>
10000e2e:	bf00      	nop
10000e30:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000e34:	3fd34413 	svccc	0x00d34413
10000e38:	8b60c8b3 	blhi	1183310c <__copy_table_end__+0x182f004>
10000e3c:	3fc68a28 	svccc	0x00c68a28
10000e40:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000e44:	3fd287a7 	svccc	0x00d287a7
10000e48:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000e4c:	400a934f 	andmi	r9, sl, pc, asr #6
10000e50:	bbb55516 	bllt	ed562b0 <SYSTEM_CLOCK+0xe79d530>
10000e54:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000e58:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000e5c:	3fe62e42 	svccc	0x00e62e42
10000e60:	eb1c432d 	bl	10711b1c <__copy_table_end__+0x70da14>
10000e64:	3f1a36e2 	svccc	0x001a36e2
10000e68:	00000000 	andeq	r0, r0, r0
10000e6c:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000e78:	7fefffff 	svcvc	0x00efffff
10000e7c:	3ff80000 	svccc	0x00f80000
10000e80:	3fe00000 	svccc	0x00e00000
10000e84:	402c0000 	eormi	r0, ip, r0
10000e88:	40240000 	eormi	r0, r4, r0
10000e8c:	40180000 	andsmi	r0, r8, r0
10000e90:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000e94:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000e98:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e9a:	f013 0902 	ands.w	r9, r3, #2
10000e9e:	d002      	beq.n	10000ea6 <_etoa+0x31e>
10000ea0:	b10f      	cbz	r7, 10000ea6 <_etoa+0x31e>
    fwidth = 0U;
10000ea2:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000ea6:	b13e      	cbz	r6, 10000eb8 <_etoa+0x330>
    value /= conv.F;
10000ea8:	ec53 2b18 	vmov	r2, r3, d8
10000eac:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000eb0:	f001 fd3e 	bl	10002930 <__aeabi_ddiv>
10000eb4:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000eb8:	2200      	movs	r2, #0
10000eba:	2300      	movs	r3, #0
10000ebc:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000ec0:	f001 fe7e 	bl	10002bc0 <__aeabi_dcmplt>
10000ec4:	2800      	cmp	r0, #0
10000ec6:	d13d      	bne.n	10000f44 <_etoa+0x3bc>
10000ec8:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000eca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10000ece:	9304      	str	r3, [sp, #16]
10000ed0:	f8cd 800c 	str.w	r8, [sp, #12]
10000ed4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000ed6:	9302      	str	r3, [sp, #8]
10000ed8:	ed9d 7b06 	vldr	d7, [sp, #24]
10000edc:	ed8d 7b00 	vstr	d7, [sp]
10000ee0:	462b      	mov	r3, r5
10000ee2:	465a      	mov	r2, fp
10000ee4:	4621      	mov	r1, r4
10000ee6:	4650      	mov	r0, sl
10000ee8:	f000 f846 	bl	10000f78 <_ftoa>
  if (minwidth) {
10000eec:	2f00      	cmp	r7, #0
10000eee:	f43f af74 	beq.w	10000dda <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000ef2:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000ef4:	f013 0f20 	tst.w	r3, #32
10000ef8:	d02c      	beq.n	10000f54 <_etoa+0x3cc>
10000efa:	f04f 0c45 	mov.w	ip, #69	; 0x45
10000efe:	f100 0801 	add.w	r8, r0, #1
10000f02:	462b      	mov	r3, r5
10000f04:	4602      	mov	r2, r0
10000f06:	4621      	mov	r1, r4
10000f08:	4660      	mov	r0, ip
10000f0a:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10000f0c:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10000f10:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10000f14:	2205      	movs	r2, #5
10000f16:	9205      	str	r2, [sp, #20]
10000f18:	3f01      	subs	r7, #1
10000f1a:	9704      	str	r7, [sp, #16]
10000f1c:	2200      	movs	r2, #0
10000f1e:	9203      	str	r2, [sp, #12]
10000f20:	220a      	movs	r2, #10
10000f22:	9202      	str	r2, [sp, #8]
10000f24:	0ff0      	lsrs	r0, r6, #31
10000f26:	9001      	str	r0, [sp, #4]
10000f28:	9300      	str	r3, [sp, #0]
10000f2a:	462b      	mov	r3, r5
10000f2c:	4642      	mov	r2, r8
10000f2e:	4621      	mov	r1, r4
10000f30:	4650      	mov	r0, sl
10000f32:	f7ff fd7b 	bl	10000a2c <_ntoa_long>
    if (flags & FLAGS_LEFT) {
10000f36:	f1b9 0f00 	cmp.w	r9, #0
10000f3a:	f43f af4e 	beq.w	10000dda <_etoa+0x252>
10000f3e:	4602      	mov	r2, r0
10000f40:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
10000f42:	e010      	b.n	10000f66 <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000f44:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000f48:	4602      	mov	r2, r0
10000f4a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10000f4e:	e9cd 2306 	strd	r2, r3, [sp, #24]
10000f52:	e7b9      	b.n	10000ec8 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000f54:	f04f 0c65 	mov.w	ip, #101	; 0x65
10000f58:	e7d1      	b.n	10000efe <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10000f5a:	1c56      	adds	r6, r2, #1
10000f5c:	462b      	mov	r3, r5
10000f5e:	4621      	mov	r1, r4
10000f60:	2020      	movs	r0, #32
10000f62:	47d0      	blx	sl
10000f64:	4632      	mov	r2, r6
10000f66:	eba2 030b 	sub.w	r3, r2, fp
10000f6a:	42bb      	cmp	r3, r7
10000f6c:	d3f5      	bcc.n	10000f5a <_etoa+0x3d2>
10000f6e:	4610      	mov	r0, r2
10000f70:	e733      	b.n	10000dda <_etoa+0x252>
10000f72:	bf00      	nop
10000f74:	0000      	movs	r0, r0
	...

10000f78 <_ftoa>:
{
10000f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000f7c:	ed2d 8b02 	vpush	{d8}
10000f80:	b095      	sub	sp, #84	; 0x54
10000f82:	9007      	str	r0, [sp, #28]
10000f84:	910a      	str	r1, [sp, #40]	; 0x28
10000f86:	4692      	mov	sl, r2
10000f88:	469b      	mov	fp, r3
10000f8a:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10000f8e:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10000f90:	4642      	mov	r2, r8
10000f92:	464b      	mov	r3, r9
10000f94:	4640      	mov	r0, r8
10000f96:	4649      	mov	r1, r9
10000f98:	f001 fe08 	bl	10002bac <__aeabi_dcmpeq>
10000f9c:	2800      	cmp	r0, #0
10000f9e:	d040      	beq.n	10001022 <_ftoa+0xaa>
  if (value < -DBL_MAX)
10000fa0:	f04f 32ff 	mov.w	r2, #4294967295
10000fa4:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000fa8:	4640      	mov	r0, r8
10000faa:	4649      	mov	r1, r9
10000fac:	f001 fe08 	bl	10002bc0 <__aeabi_dcmplt>
10000fb0:	2800      	cmp	r0, #0
10000fb2:	d145      	bne.n	10001040 <_ftoa+0xc8>
  if (value > DBL_MAX)
10000fb4:	f04f 32ff 	mov.w	r2, #4294967295
10000fb8:	4b9f      	ldr	r3, [pc, #636]	; (10001238 <_ftoa+0x2c0>)
10000fba:	4640      	mov	r0, r8
10000fbc:	4649      	mov	r1, r9
10000fbe:	f001 fe1d 	bl	10002bfc <__aeabi_dcmpgt>
10000fc2:	2800      	cmp	r0, #0
10000fc4:	d14b      	bne.n	1000105e <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
10000fc6:	a398      	add	r3, pc, #608	; (adr r3, 10001228 <_ftoa+0x2b0>)
10000fc8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000fcc:	4640      	mov	r0, r8
10000fce:	4649      	mov	r1, r9
10000fd0:	f001 fe14 	bl	10002bfc <__aeabi_dcmpgt>
10000fd4:	2800      	cmp	r0, #0
10000fd6:	d15a      	bne.n	1000108e <_ftoa+0x116>
10000fd8:	a395      	add	r3, pc, #596	; (adr r3, 10001230 <_ftoa+0x2b8>)
10000fda:	e9d3 2300 	ldrd	r2, r3, [r3]
10000fde:	4640      	mov	r0, r8
10000fe0:	4649      	mov	r1, r9
10000fe2:	f001 fded 	bl	10002bc0 <__aeabi_dcmplt>
10000fe6:	2800      	cmp	r0, #0
10000fe8:	d151      	bne.n	1000108e <_ftoa+0x116>
  if (value < 0) {
10000fea:	2200      	movs	r2, #0
10000fec:	2300      	movs	r3, #0
10000fee:	4640      	mov	r0, r8
10000ff0:	4649      	mov	r1, r9
10000ff2:	f001 fde5 	bl	10002bc0 <__aeabi_dcmplt>
10000ff6:	2800      	cmp	r0, #0
10000ff8:	d157      	bne.n	100010aa <_ftoa+0x132>
  bool negative = false;
10000ffa:	2300      	movs	r3, #0
10000ffc:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
10000ffe:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001000:	f413 6f80 	tst.w	r3, #1024	; 0x400
10001004:	d05c      	beq.n	100010c0 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001006:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001008:	2c1f      	cmp	r4, #31
1000100a:	d85b      	bhi.n	100010c4 <_ftoa+0x14c>
1000100c:	2d09      	cmp	r5, #9
1000100e:	d959      	bls.n	100010c4 <_ftoa+0x14c>
    buf[len++] = '0';
10001010:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001014:	446b      	add	r3, sp
10001016:	2230      	movs	r2, #48	; 0x30
10001018:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
1000101c:	3d01      	subs	r5, #1
    buf[len++] = '0';
1000101e:	3401      	adds	r4, #1
10001020:	e7f2      	b.n	10001008 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
10001022:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001024:	9303      	str	r3, [sp, #12]
10001026:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001028:	9302      	str	r3, [sp, #8]
1000102a:	2303      	movs	r3, #3
1000102c:	9301      	str	r3, [sp, #4]
1000102e:	4b83      	ldr	r3, [pc, #524]	; (1000123c <_ftoa+0x2c4>)
10001030:	9300      	str	r3, [sp, #0]
10001032:	465b      	mov	r3, fp
10001034:	4652      	mov	r2, sl
10001036:	990a      	ldr	r1, [sp, #40]	; 0x28
10001038:	9807      	ldr	r0, [sp, #28]
1000103a:	f7ff fc1c 	bl	10000876 <_out_rev>
1000103e:	e12c      	b.n	1000129a <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
10001040:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001042:	9303      	str	r3, [sp, #12]
10001044:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001046:	9302      	str	r3, [sp, #8]
10001048:	2304      	movs	r3, #4
1000104a:	9301      	str	r3, [sp, #4]
1000104c:	4b7c      	ldr	r3, [pc, #496]	; (10001240 <_ftoa+0x2c8>)
1000104e:	9300      	str	r3, [sp, #0]
10001050:	465b      	mov	r3, fp
10001052:	4652      	mov	r2, sl
10001054:	990a      	ldr	r1, [sp, #40]	; 0x28
10001056:	9807      	ldr	r0, [sp, #28]
10001058:	f7ff fc0d 	bl	10000876 <_out_rev>
1000105c:	e11d      	b.n	1000129a <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
1000105e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001060:	f013 0304 	ands.w	r3, r3, #4
10001064:	d00f      	beq.n	10001086 <_ftoa+0x10e>
10001066:	4a77      	ldr	r2, [pc, #476]	; (10001244 <_ftoa+0x2cc>)
10001068:	b17b      	cbz	r3, 1000108a <_ftoa+0x112>
1000106a:	2304      	movs	r3, #4
1000106c:	9924      	ldr	r1, [sp, #144]	; 0x90
1000106e:	9103      	str	r1, [sp, #12]
10001070:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001072:	9102      	str	r1, [sp, #8]
10001074:	9301      	str	r3, [sp, #4]
10001076:	9200      	str	r2, [sp, #0]
10001078:	465b      	mov	r3, fp
1000107a:	4652      	mov	r2, sl
1000107c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000107e:	9807      	ldr	r0, [sp, #28]
10001080:	f7ff fbf9 	bl	10000876 <_out_rev>
10001084:	e109      	b.n	1000129a <_ftoa+0x322>
10001086:	4a70      	ldr	r2, [pc, #448]	; (10001248 <_ftoa+0x2d0>)
10001088:	e7ee      	b.n	10001068 <_ftoa+0xf0>
1000108a:	2303      	movs	r3, #3
1000108c:	e7ee      	b.n	1000106c <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
1000108e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001090:	9304      	str	r3, [sp, #16]
10001092:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001094:	9303      	str	r3, [sp, #12]
10001096:	9502      	str	r5, [sp, #8]
10001098:	e9cd 8900 	strd	r8, r9, [sp]
1000109c:	465b      	mov	r3, fp
1000109e:	4652      	mov	r2, sl
100010a0:	990a      	ldr	r1, [sp, #40]	; 0x28
100010a2:	9807      	ldr	r0, [sp, #28]
100010a4:	f7ff fd70 	bl	10000b88 <_etoa>
100010a8:	e0f7      	b.n	1000129a <_ftoa+0x322>
    value = 0 - value;
100010aa:	4642      	mov	r2, r8
100010ac:	464b      	mov	r3, r9
100010ae:	2000      	movs	r0, #0
100010b0:	2100      	movs	r1, #0
100010b2:	f001 f95b 	bl	1000236c <__aeabi_dsub>
100010b6:	4680      	mov	r8, r0
100010b8:	4689      	mov	r9, r1
    negative = true;
100010ba:	2301      	movs	r3, #1
100010bc:	930b      	str	r3, [sp, #44]	; 0x2c
100010be:	e79e      	b.n	10000ffe <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
100010c0:	2506      	movs	r5, #6
100010c2:	e7a0      	b.n	10001006 <_ftoa+0x8e>
  int whole = (int)value;
100010c4:	4640      	mov	r0, r8
100010c6:	4649      	mov	r1, r9
100010c8:	f001 fda2 	bl	10002c10 <__aeabi_d2iz>
100010cc:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
100010ce:	f001 fa9b 	bl	10002608 <__aeabi_i2d>
100010d2:	4602      	mov	r2, r0
100010d4:	460b      	mov	r3, r1
100010d6:	4640      	mov	r0, r8
100010d8:	4649      	mov	r1, r9
100010da:	f001 f947 	bl	1000236c <__aeabi_dsub>
100010de:	4b5b      	ldr	r3, [pc, #364]	; (1000124c <_ftoa+0x2d4>)
100010e0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
100010e4:	ed93 8b00 	vldr	d8, [r3]
100010e8:	ec53 2b18 	vmov	r2, r3, d8
100010ec:	f001 faf6 	bl	100026dc <__aeabi_dmul>
100010f0:	4602      	mov	r2, r0
100010f2:	460b      	mov	r3, r1
100010f4:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
100010f8:	f001 fdb2 	bl	10002c60 <__aeabi_d2uiz>
100010fc:	4607      	mov	r7, r0
  diff = tmp - frac;
100010fe:	f001 fa73 	bl	100025e8 <__aeabi_ui2d>
10001102:	4602      	mov	r2, r0
10001104:	460b      	mov	r3, r1
10001106:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1000110a:	f001 f92f 	bl	1000236c <__aeabi_dsub>
1000110e:	4602      	mov	r2, r0
10001110:	460b      	mov	r3, r1
10001112:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
10001116:	2200      	movs	r2, #0
10001118:	4b4d      	ldr	r3, [pc, #308]	; (10001250 <_ftoa+0x2d8>)
1000111a:	f001 fd6f 	bl	10002bfc <__aeabi_dcmpgt>
1000111e:	b350      	cbz	r0, 10001176 <_ftoa+0x1fe>
    ++frac;
10001120:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
10001122:	4638      	mov	r0, r7
10001124:	f001 fa60 	bl	100025e8 <__aeabi_ui2d>
10001128:	4602      	mov	r2, r0
1000112a:	460b      	mov	r3, r1
1000112c:	ec51 0b18 	vmov	r0, r1, d8
10001130:	f001 fd50 	bl	10002bd4 <__aeabi_dcmple>
10001134:	b108      	cbz	r0, 1000113a <_ftoa+0x1c2>
      ++whole;
10001136:	3601      	adds	r6, #1
      frac = 0;
10001138:	2700      	movs	r7, #0
  if (prec == 0U) {
1000113a:	bb55      	cbnz	r5, 10001192 <_ftoa+0x21a>
    diff = value - (double)whole;
1000113c:	4630      	mov	r0, r6
1000113e:	f001 fa63 	bl	10002608 <__aeabi_i2d>
10001142:	4602      	mov	r2, r0
10001144:	460b      	mov	r3, r1
10001146:	4640      	mov	r0, r8
10001148:	4649      	mov	r1, r9
1000114a:	f001 f90f 	bl	1000236c <__aeabi_dsub>
1000114e:	4607      	mov	r7, r0
10001150:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
10001152:	2200      	movs	r2, #0
10001154:	4b3e      	ldr	r3, [pc, #248]	; (10001250 <_ftoa+0x2d8>)
10001156:	f001 fd33 	bl	10002bc0 <__aeabi_dcmplt>
1000115a:	b138      	cbz	r0, 1000116c <_ftoa+0x1f4>
1000115c:	2200      	movs	r2, #0
1000115e:	4b3c      	ldr	r3, [pc, #240]	; (10001250 <_ftoa+0x2d8>)
10001160:	4638      	mov	r0, r7
10001162:	4641      	mov	r1, r8
10001164:	f001 fd4a 	bl	10002bfc <__aeabi_dcmpgt>
10001168:	2800      	cmp	r0, #0
1000116a:	d042      	beq.n	100011f2 <_ftoa+0x27a>
1000116c:	f016 0f01 	tst.w	r6, #1
10001170:	d03f      	beq.n	100011f2 <_ftoa+0x27a>
      ++whole;
10001172:	3601      	adds	r6, #1
10001174:	e03d      	b.n	100011f2 <_ftoa+0x27a>
  else if (diff < 0.5) {
10001176:	2200      	movs	r2, #0
10001178:	4b35      	ldr	r3, [pc, #212]	; (10001250 <_ftoa+0x2d8>)
1000117a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1000117e:	f001 fd1f 	bl	10002bc0 <__aeabi_dcmplt>
10001182:	2800      	cmp	r0, #0
10001184:	d1d9      	bne.n	1000113a <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
10001186:	b117      	cbz	r7, 1000118e <_ftoa+0x216>
10001188:	f017 0f01 	tst.w	r7, #1
1000118c:	d0d5      	beq.n	1000113a <_ftoa+0x1c2>
    ++frac;
1000118e:	3701      	adds	r7, #1
10001190:	e7d3      	b.n	1000113a <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001192:	2c1f      	cmp	r4, #31
10001194:	d817      	bhi.n	100011c6 <_ftoa+0x24e>
      --count;
10001196:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001198:	4b2e      	ldr	r3, [pc, #184]	; (10001254 <_ftoa+0x2dc>)
1000119a:	fba3 2307 	umull	r2, r3, r3, r7
1000119e:	08db      	lsrs	r3, r3, #3
100011a0:	4619      	mov	r1, r3
100011a2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
100011a6:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
100011aa:	1c62      	adds	r2, r4, #1
100011ac:	3330      	adds	r3, #48	; 0x30
100011ae:	f104 0050 	add.w	r0, r4, #80	; 0x50
100011b2:	eb0d 0400 	add.w	r4, sp, r0
100011b6:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
100011ba:	2f09      	cmp	r7, #9
100011bc:	d902      	bls.n	100011c4 <_ftoa+0x24c>
100011be:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
100011c0:	4614      	mov	r4, r2
100011c2:	e7e6      	b.n	10001192 <_ftoa+0x21a>
100011c4:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
100011c6:	2c1f      	cmp	r4, #31
100011c8:	d80a      	bhi.n	100011e0 <_ftoa+0x268>
100011ca:	1e6b      	subs	r3, r5, #1
100011cc:	b145      	cbz	r5, 100011e0 <_ftoa+0x268>
      buf[len++] = '0';
100011ce:	f104 0250 	add.w	r2, r4, #80	; 0x50
100011d2:	446a      	add	r2, sp
100011d4:	2130      	movs	r1, #48	; 0x30
100011d6:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
100011da:	461d      	mov	r5, r3
      buf[len++] = '0';
100011dc:	3401      	adds	r4, #1
100011de:	e7f2      	b.n	100011c6 <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
100011e0:	2c1f      	cmp	r4, #31
100011e2:	d806      	bhi.n	100011f2 <_ftoa+0x27a>
      buf[len++] = '.';
100011e4:	f104 0350 	add.w	r3, r4, #80	; 0x50
100011e8:	446b      	add	r3, sp
100011ea:	222e      	movs	r2, #46	; 0x2e
100011ec:	f803 2c20 	strb.w	r2, [r3, #-32]
100011f0:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
100011f2:	2c1f      	cmp	r4, #31
100011f4:	d833      	bhi.n	1000125e <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
100011f6:	4a18      	ldr	r2, [pc, #96]	; (10001258 <_ftoa+0x2e0>)
100011f8:	fb82 3206 	smull	r3, r2, r2, r6
100011fc:	17f3      	asrs	r3, r6, #31
100011fe:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
10001202:	461a      	mov	r2, r3
10001204:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001208:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
1000120c:	1c61      	adds	r1, r4, #1
1000120e:	3330      	adds	r3, #48	; 0x30
10001210:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001214:	eb0d 0400 	add.w	r4, sp, r0
10001218:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
1000121c:	4616      	mov	r6, r2
1000121e:	b1ea      	cbz	r2, 1000125c <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001220:	460c      	mov	r4, r1
10001222:	e7e6      	b.n	100011f2 <_ftoa+0x27a>
10001224:	f3af 8000 	nop.w
10001228:	00000000 	andeq	r0, r0, r0
1000122c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10001230:	00000000 	andeq	r0, r0, r0
10001234:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
10001238:	7fefffff 	svcvc	0x00efffff
1000123c:	10003f64 	andne	r3, r0, r4, ror #30
10001240:	10003f68 	andne	r3, r0, r8, ror #30
10001244:	10003f5c 	andne	r3, r0, ip, asr pc
10001248:	10003f58 	andne	r3, r0, r8, asr pc
1000124c:	10003f70 	andne	r3, r0, r0, ror pc
10001250:	3fe00000 	svccc	0x00e00000
10001254:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
10001258:	66666667 	strbtvs	r6, [r6], -r7, ror #12
1000125c:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
1000125e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001260:	f003 0303 	and.w	r3, r3, #3
10001264:	2b01      	cmp	r3, #1
10001266:	d01d      	beq.n	100012a4 <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001268:	2c1f      	cmp	r4, #31
1000126a:	d809      	bhi.n	10001280 <_ftoa+0x308>
    if (negative) {
1000126c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000126e:	2b00      	cmp	r3, #0
10001270:	d035      	beq.n	100012de <_ftoa+0x366>
      buf[len++] = '-';
10001272:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001276:	446b      	add	r3, sp
10001278:	222d      	movs	r2, #45	; 0x2d
1000127a:	f803 2c20 	strb.w	r2, [r3, #-32]
1000127e:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10001280:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001282:	9303      	str	r3, [sp, #12]
10001284:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001286:	9302      	str	r3, [sp, #8]
10001288:	9401      	str	r4, [sp, #4]
1000128a:	ab0c      	add	r3, sp, #48	; 0x30
1000128c:	9300      	str	r3, [sp, #0]
1000128e:	465b      	mov	r3, fp
10001290:	4652      	mov	r2, sl
10001292:	990a      	ldr	r1, [sp, #40]	; 0x28
10001294:	9807      	ldr	r0, [sp, #28]
10001296:	f7ff faee 	bl	10000876 <_out_rev>
}
1000129a:	b015      	add	sp, #84	; 0x54
1000129c:	ecbd 8b02 	vpop	{d8}
100012a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
100012a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100012a6:	b1b3      	cbz	r3, 100012d6 <_ftoa+0x35e>
100012a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100012aa:	b91b      	cbnz	r3, 100012b4 <_ftoa+0x33c>
100012ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012ae:	f013 0f0c 	tst.w	r3, #12
100012b2:	d012      	beq.n	100012da <_ftoa+0x362>
      width--;
100012b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100012b6:	3b01      	subs	r3, #1
100012b8:	9323      	str	r3, [sp, #140]	; 0x8c
100012ba:	4619      	mov	r1, r3
100012bc:	e006      	b.n	100012cc <_ftoa+0x354>
      buf[len++] = '0';
100012be:	f104 0350 	add.w	r3, r4, #80	; 0x50
100012c2:	446b      	add	r3, sp
100012c4:	2230      	movs	r2, #48	; 0x30
100012c6:	f803 2c20 	strb.w	r2, [r3, #-32]
100012ca:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
100012cc:	428c      	cmp	r4, r1
100012ce:	d2cb      	bcs.n	10001268 <_ftoa+0x2f0>
100012d0:	2c1f      	cmp	r4, #31
100012d2:	d9f4      	bls.n	100012be <_ftoa+0x346>
100012d4:	e7c8      	b.n	10001268 <_ftoa+0x2f0>
100012d6:	9923      	ldr	r1, [sp, #140]	; 0x8c
100012d8:	e7f8      	b.n	100012cc <_ftoa+0x354>
100012da:	9923      	ldr	r1, [sp, #140]	; 0x8c
100012dc:	e7f6      	b.n	100012cc <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
100012de:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012e0:	f013 0f04 	tst.w	r3, #4
100012e4:	d007      	beq.n	100012f6 <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
100012e6:	f104 0350 	add.w	r3, r4, #80	; 0x50
100012ea:	446b      	add	r3, sp
100012ec:	222b      	movs	r2, #43	; 0x2b
100012ee:	f803 2c20 	strb.w	r2, [r3, #-32]
100012f2:	3401      	adds	r4, #1
100012f4:	e7c4      	b.n	10001280 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
100012f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012f8:	f013 0f08 	tst.w	r3, #8
100012fc:	d0c0      	beq.n	10001280 <_ftoa+0x308>
      buf[len++] = ' ';
100012fe:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001302:	446b      	add	r3, sp
10001304:	2220      	movs	r2, #32
10001306:	f803 2c20 	strb.w	r2, [r3, #-32]
1000130a:	3401      	adds	r4, #1
1000130c:	e7b8      	b.n	10001280 <_ftoa+0x308>
1000130e:	bf00      	nop

10001310 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001314:	b08f      	sub	sp, #60	; 0x3c
10001316:	4607      	mov	r7, r0
10001318:	4616      	mov	r6, r2
1000131a:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
1000131c:	4688      	mov	r8, r1
1000131e:	2900      	cmp	r1, #0
10001320:	f000 8324 	beq.w	1000196c <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
10001324:	2400      	movs	r4, #0
  while (*format)
10001326:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001328:	7818      	ldrb	r0, [r3, #0]
1000132a:	2800      	cmp	r0, #0
1000132c:	f000 8320 	beq.w	10001970 <_vsnprintf+0x660>
    if (*format != '%') {
10001330:	2825      	cmp	r0, #37	; 0x25
10001332:	d009      	beq.n	10001348 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
10001334:	1c65      	adds	r5, r4, #1
10001336:	4633      	mov	r3, r6
10001338:	4622      	mov	r2, r4
1000133a:	4641      	mov	r1, r8
1000133c:	47b8      	blx	r7
      format++;
1000133e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001340:	3301      	adds	r3, #1
10001342:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
10001344:	462c      	mov	r4, r5
      continue;
10001346:	e7ee      	b.n	10001326 <_vsnprintf+0x16>
      format++;
10001348:	3301      	adds	r3, #1
1000134a:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
1000134c:	2500      	movs	r5, #0
      switch (*format) {
1000134e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001350:	7819      	ldrb	r1, [r3, #0]
10001352:	f1a1 0220 	sub.w	r2, r1, #32
10001356:	2a10      	cmp	r2, #16
10001358:	d80a      	bhi.n	10001370 <_vsnprintf+0x60>
1000135a:	e8df f002 	tbb	[pc, r2]
1000135e:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
10001362:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
10001366:	33090909 	movwcc	r0, #39177	; 0x9909
1000136a:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
1000136e:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
10001372:	0330      	lsls	r0, r6, #12
10001374:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
10001376:	2b09      	cmp	r3, #9
10001378:	d933      	bls.n	100013e2 <_vsnprintf+0xd2>
    else if (*format == '*') {
1000137a:	292a      	cmp	r1, #42	; 0x2a
1000137c:	d036      	beq.n	100013ec <_vsnprintf+0xdc>
    width = 0U;
1000137e:	2300      	movs	r3, #0
10001380:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
10001382:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001384:	781a      	ldrb	r2, [r3, #0]
10001386:	2a2e      	cmp	r2, #46	; 0x2e
10001388:	d040      	beq.n	1000140c <_vsnprintf+0xfc>
    precision = 0U;
1000138a:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
1000138e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001390:	7813      	ldrb	r3, [r2, #0]
10001392:	3b68      	subs	r3, #104	; 0x68
10001394:	2b12      	cmp	r3, #18
10001396:	d877      	bhi.n	10001488 <_vsnprintf+0x178>
10001398:	e8df f003 	tbb	[pc, r3]
1000139c:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
100013a0:	76767656 			; <UNDEFINED> instruction: 0x76767656
100013a4:	76767676 			; <UNDEFINED> instruction: 0x76767676
100013a8:	76767672 			; <UNDEFINED> instruction: 0x76767672
100013ac:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
100013b0:	f045 0501 	orr.w	r5, r5, #1
100013b4:	3301      	adds	r3, #1
100013b6:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100013b8:	e7c9      	b.n	1000134e <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
100013ba:	f045 0502 	orr.w	r5, r5, #2
100013be:	3301      	adds	r3, #1
100013c0:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100013c2:	e7c4      	b.n	1000134e <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
100013c4:	f045 0504 	orr.w	r5, r5, #4
100013c8:	3301      	adds	r3, #1
100013ca:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100013cc:	e7bf      	b.n	1000134e <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
100013ce:	f045 0508 	orr.w	r5, r5, #8
100013d2:	3301      	adds	r3, #1
100013d4:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100013d6:	e7ba      	b.n	1000134e <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
100013d8:	f045 0510 	orr.w	r5, r5, #16
100013dc:	3301      	adds	r3, #1
100013de:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100013e0:	e7b5      	b.n	1000134e <_vsnprintf+0x3e>
      width = _atoi(&format);
100013e2:	a80d      	add	r0, sp, #52	; 0x34
100013e4:	f7ff fa35 	bl	10000852 <_atoi>
100013e8:	900a      	str	r0, [sp, #40]	; 0x28
100013ea:	e7ca      	b.n	10001382 <_vsnprintf+0x72>
      const int w = va_arg(va, int);
100013ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
100013ee:	1d1a      	adds	r2, r3, #4
100013f0:	9218      	str	r2, [sp, #96]	; 0x60
100013f2:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
100013f4:	2800      	cmp	r0, #0
100013f6:	db04      	blt.n	10001402 <_vsnprintf+0xf2>
        width = (unsigned int)w;
100013f8:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
100013fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013fc:	3301      	adds	r3, #1
100013fe:	930d      	str	r3, [sp, #52]	; 0x34
10001400:	e7bf      	b.n	10001382 <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
10001402:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
10001406:	4243      	negs	r3, r0
10001408:	930a      	str	r3, [sp, #40]	; 0x28
1000140a:	e7f6      	b.n	100013fa <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
1000140c:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001410:	1c5a      	adds	r2, r3, #1
10001412:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
10001414:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
10001416:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
1000141a:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
1000141c:	2b09      	cmp	r3, #9
1000141e:	d904      	bls.n	1000142a <_vsnprintf+0x11a>
      else if (*format == '*') {
10001420:	2a2a      	cmp	r2, #42	; 0x2a
10001422:	d007      	beq.n	10001434 <_vsnprintf+0x124>
    precision = 0U;
10001424:	f04f 0b00 	mov.w	fp, #0
10001428:	e7b1      	b.n	1000138e <_vsnprintf+0x7e>
        precision = _atoi(&format);
1000142a:	a80d      	add	r0, sp, #52	; 0x34
1000142c:	f7ff fa11 	bl	10000852 <_atoi>
10001430:	4683      	mov	fp, r0
10001432:	e7ac      	b.n	1000138e <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
10001434:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001436:	1d1a      	adds	r2, r3, #4
10001438:	9218      	str	r2, [sp, #96]	; 0x60
1000143a:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
1000143c:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
10001440:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001442:	3301      	adds	r3, #1
10001444:	930d      	str	r3, [sp, #52]	; 0x34
10001446:	e7a2      	b.n	1000138e <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
10001448:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
1000144c:	1c53      	adds	r3, r2, #1
1000144e:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
10001450:	7852      	ldrb	r2, [r2, #1]
10001452:	2a6c      	cmp	r2, #108	; 0x6c
10001454:	d001      	beq.n	1000145a <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
10001456:	460d      	mov	r5, r1
10001458:	e016      	b.n	10001488 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
1000145a:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
1000145e:	3301      	adds	r3, #1
10001460:	930d      	str	r3, [sp, #52]	; 0x34
10001462:	e011      	b.n	10001488 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
10001464:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
10001468:	1c53      	adds	r3, r2, #1
1000146a:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
1000146c:	7852      	ldrb	r2, [r2, #1]
1000146e:	2a68      	cmp	r2, #104	; 0x68
10001470:	d001      	beq.n	10001476 <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
10001472:	460d      	mov	r5, r1
10001474:	e008      	b.n	10001488 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
10001476:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
1000147a:	3301      	adds	r3, #1
1000147c:	930d      	str	r3, [sp, #52]	; 0x34
1000147e:	e003      	b.n	10001488 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001480:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
10001484:	3201      	adds	r2, #1
10001486:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
10001488:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000148a:	7818      	ldrb	r0, [r3, #0]
1000148c:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001490:	2b53      	cmp	r3, #83	; 0x53
10001492:	f200 8261 	bhi.w	10001958 <_vsnprintf+0x648>
10001496:	e8df f013 	tbh	[pc, r3, lsl #1]
1000149a:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
1000149e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014a6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014aa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014ae:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014b2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014b6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014ba:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014be:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014c2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014c6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014ca:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014ce:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014d2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014d6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014da:	01540174 	cmpeq	r4, r4, ror r1
100014de:	025f0174 	subseq	r0, pc, #116, 2
100014e2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014e6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014ea:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014ee:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014f2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014f6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014fa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100014fe:	005e025f 	subseq	r0, lr, pc, asr r2
10001502:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001506:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000150a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000150e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001512:	005e025f 	subseq	r0, lr, pc, asr r2
10001516:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
1000151a:	01540174 	cmpeq	r4, r4, ror r1
1000151e:	025f0174 	subseq	r0, pc, #116, 2
10001522:	025f005e 	subseq	r0, pc, #94	; 0x5e
10001526:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000152a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000152e:	0239005e 	eorseq	r0, r9, #94	; 0x5e
10001532:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001536:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
1000153a:	025f005e 	subseq	r0, pc, #94	; 0x5e
1000153e:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001542:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
10001546:	3201      	adds	r2, #1
10001548:	920d      	str	r2, [sp, #52]	; 0x34
        break;
1000154a:	e79d      	b.n	10001488 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
1000154c:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
10001550:	3201      	adds	r2, #1
10001552:	920d      	str	r2, [sp, #52]	; 0x34
        break;
10001554:	e798      	b.n	10001488 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
10001556:	2878      	cmp	r0, #120	; 0x78
10001558:	d009      	beq.n	1000156e <_vsnprintf+0x25e>
1000155a:	2858      	cmp	r0, #88	; 0x58
1000155c:	d03a      	beq.n	100015d4 <_vsnprintf+0x2c4>
        else if (*format == 'o') {
1000155e:	286f      	cmp	r0, #111	; 0x6f
10001560:	d03a      	beq.n	100015d8 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
10001562:	2862      	cmp	r0, #98	; 0x62
10001564:	d03a      	beq.n	100015dc <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
10001566:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
1000156a:	230a      	movs	r3, #10
1000156c:	e000      	b.n	10001570 <_vsnprintf+0x260>
          base = 16U;
1000156e:	2310      	movs	r3, #16
        if (*format == 'X') {
10001570:	2858      	cmp	r0, #88	; 0x58
10001572:	d035      	beq.n	100015e0 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
10001574:	2869      	cmp	r0, #105	; 0x69
10001576:	d003      	beq.n	10001580 <_vsnprintf+0x270>
10001578:	2864      	cmp	r0, #100	; 0x64
1000157a:	d001      	beq.n	10001580 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
1000157c:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
10001580:	f415 6f80 	tst.w	r5, #1024	; 0x400
10001584:	d001      	beq.n	1000158a <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
10001586:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
1000158a:	2869      	cmp	r0, #105	; 0x69
1000158c:	d02b      	beq.n	100015e6 <_vsnprintf+0x2d6>
1000158e:	2864      	cmp	r0, #100	; 0x64
10001590:	d029      	beq.n	100015e6 <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
10001592:	f415 7f00 	tst.w	r5, #512	; 0x200
10001596:	f040 8096 	bne.w	100016c6 <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
1000159a:	f415 7f80 	tst.w	r5, #256	; 0x100
1000159e:	f040 80ae 	bne.w	100016fe <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100015a2:	f015 0f40 	tst.w	r5, #64	; 0x40
100015a6:	f000 80bf 	beq.w	10001728 <_vsnprintf+0x418>
100015aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
100015ac:	1d11      	adds	r1, r2, #4
100015ae:	9118      	str	r1, [sp, #96]	; 0x60
100015b0:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
100015b2:	9505      	str	r5, [sp, #20]
100015b4:	990a      	ldr	r1, [sp, #40]	; 0x28
100015b6:	9104      	str	r1, [sp, #16]
100015b8:	f8cd b00c 	str.w	fp, [sp, #12]
100015bc:	9302      	str	r3, [sp, #8]
100015be:	2300      	movs	r3, #0
100015c0:	9301      	str	r3, [sp, #4]
100015c2:	9200      	str	r2, [sp, #0]
100015c4:	4633      	mov	r3, r6
100015c6:	4622      	mov	r2, r4
100015c8:	4641      	mov	r1, r8
100015ca:	4638      	mov	r0, r7
100015cc:	f7ff fa2e 	bl	10000a2c <_ntoa_long>
100015d0:	4604      	mov	r4, r0
100015d2:	e029      	b.n	10001628 <_vsnprintf+0x318>
          base = 16U;
100015d4:	2310      	movs	r3, #16
100015d6:	e7cb      	b.n	10001570 <_vsnprintf+0x260>
          base =  8U;
100015d8:	2308      	movs	r3, #8
100015da:	e7c9      	b.n	10001570 <_vsnprintf+0x260>
          base =  2U;
100015dc:	2302      	movs	r3, #2
100015de:	e7c7      	b.n	10001570 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
100015e0:	f045 0520 	orr.w	r5, r5, #32
100015e4:	e7c6      	b.n	10001574 <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
100015e6:	f415 7f00 	tst.w	r5, #512	; 0x200
100015ea:	d121      	bne.n	10001630 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
100015ec:	f415 7f80 	tst.w	r5, #256	; 0x100
100015f0:	d142      	bne.n	10001678 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
100015f2:	f015 0f40 	tst.w	r5, #64	; 0x40
100015f6:	d058      	beq.n	100016aa <_vsnprintf+0x39a>
100015f8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100015fa:	1d11      	adds	r1, r2, #4
100015fc:	9118      	str	r1, [sp, #96]	; 0x60
100015fe:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001600:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
10001604:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001608:	9505      	str	r5, [sp, #20]
1000160a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000160c:	9004      	str	r0, [sp, #16]
1000160e:	f8cd b00c 	str.w	fp, [sp, #12]
10001612:	9302      	str	r3, [sp, #8]
10001614:	0fd2      	lsrs	r2, r2, #31
10001616:	9201      	str	r2, [sp, #4]
10001618:	9100      	str	r1, [sp, #0]
1000161a:	4633      	mov	r3, r6
1000161c:	4622      	mov	r2, r4
1000161e:	4641      	mov	r1, r8
10001620:	4638      	mov	r0, r7
10001622:	f7ff fa03 	bl	10000a2c <_ntoa_long>
10001626:	4604      	mov	r4, r0
        format++;
10001628:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000162a:	3301      	adds	r3, #1
1000162c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000162e:	e67a      	b.n	10001326 <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
10001630:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001632:	3207      	adds	r2, #7
10001634:	f022 0207 	bic.w	r2, r2, #7
10001638:	f102 0108 	add.w	r1, r2, #8
1000163c:	9118      	str	r1, [sp, #96]	; 0x60
1000163e:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001640:	6812      	ldr	r2, [r2, #0]
10001642:	4608      	mov	r0, r1
10001644:	2900      	cmp	r1, #0
10001646:	db13      	blt.n	10001670 <_vsnprintf+0x360>
10001648:	9508      	str	r5, [sp, #32]
1000164a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
1000164c:	9507      	str	r5, [sp, #28]
1000164e:	f8cd b018 	str.w	fp, [sp, #24]
10001652:	9304      	str	r3, [sp, #16]
10001654:	2300      	movs	r3, #0
10001656:	9305      	str	r3, [sp, #20]
10001658:	0fc9      	lsrs	r1, r1, #31
1000165a:	9102      	str	r1, [sp, #8]
1000165c:	9200      	str	r2, [sp, #0]
1000165e:	9001      	str	r0, [sp, #4]
10001660:	4633      	mov	r3, r6
10001662:	4622      	mov	r2, r4
10001664:	4641      	mov	r1, r8
10001666:	4638      	mov	r0, r7
10001668:	f7ff fa2a 	bl	10000ac0 <_ntoa_long_long>
1000166c:	4604      	mov	r4, r0
1000166e:	e7db      	b.n	10001628 <_vsnprintf+0x318>
10001670:	4252      	negs	r2, r2
10001672:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
10001676:	e7e7      	b.n	10001648 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
10001678:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000167a:	1d11      	adds	r1, r2, #4
1000167c:	9118      	str	r1, [sp, #96]	; 0x60
1000167e:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001680:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
10001684:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001688:	9505      	str	r5, [sp, #20]
1000168a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000168c:	9004      	str	r0, [sp, #16]
1000168e:	f8cd b00c 	str.w	fp, [sp, #12]
10001692:	9302      	str	r3, [sp, #8]
10001694:	0fd2      	lsrs	r2, r2, #31
10001696:	9201      	str	r2, [sp, #4]
10001698:	9100      	str	r1, [sp, #0]
1000169a:	4633      	mov	r3, r6
1000169c:	4622      	mov	r2, r4
1000169e:	4641      	mov	r1, r8
100016a0:	4638      	mov	r0, r7
100016a2:	f7ff f9c3 	bl	10000a2c <_ntoa_long>
100016a6:	4604      	mov	r4, r0
100016a8:	e7be      	b.n	10001628 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
100016aa:	f015 0f80 	tst.w	r5, #128	; 0x80
100016ae:	d005      	beq.n	100016bc <_vsnprintf+0x3ac>
100016b0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016b2:	1d11      	adds	r1, r2, #4
100016b4:	9118      	str	r1, [sp, #96]	; 0x60
100016b6:	f9b2 2000 	ldrsh.w	r2, [r2]
100016ba:	e7a1      	b.n	10001600 <_vsnprintf+0x2f0>
100016bc:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016be:	1d11      	adds	r1, r2, #4
100016c0:	9118      	str	r1, [sp, #96]	; 0x60
100016c2:	6812      	ldr	r2, [r2, #0]
100016c4:	e79c      	b.n	10001600 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
100016c6:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016c8:	3207      	adds	r2, #7
100016ca:	f022 0207 	bic.w	r2, r2, #7
100016ce:	f102 0108 	add.w	r1, r2, #8
100016d2:	9118      	str	r1, [sp, #96]	; 0x60
100016d4:	9508      	str	r5, [sp, #32]
100016d6:	990a      	ldr	r1, [sp, #40]	; 0x28
100016d8:	9107      	str	r1, [sp, #28]
100016da:	f8cd b018 	str.w	fp, [sp, #24]
100016de:	2100      	movs	r1, #0
100016e0:	9304      	str	r3, [sp, #16]
100016e2:	9105      	str	r1, [sp, #20]
100016e4:	9102      	str	r1, [sp, #8]
100016e6:	e9d2 2300 	ldrd	r2, r3, [r2]
100016ea:	e9cd 2300 	strd	r2, r3, [sp]
100016ee:	4633      	mov	r3, r6
100016f0:	4622      	mov	r2, r4
100016f2:	4641      	mov	r1, r8
100016f4:	4638      	mov	r0, r7
100016f6:	f7ff f9e3 	bl	10000ac0 <_ntoa_long_long>
100016fa:	4604      	mov	r4, r0
100016fc:	e794      	b.n	10001628 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
100016fe:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001700:	1d11      	adds	r1, r2, #4
10001702:	9118      	str	r1, [sp, #96]	; 0x60
10001704:	9505      	str	r5, [sp, #20]
10001706:	990a      	ldr	r1, [sp, #40]	; 0x28
10001708:	9104      	str	r1, [sp, #16]
1000170a:	f8cd b00c 	str.w	fp, [sp, #12]
1000170e:	9302      	str	r3, [sp, #8]
10001710:	2300      	movs	r3, #0
10001712:	9301      	str	r3, [sp, #4]
10001714:	6813      	ldr	r3, [r2, #0]
10001716:	9300      	str	r3, [sp, #0]
10001718:	4633      	mov	r3, r6
1000171a:	4622      	mov	r2, r4
1000171c:	4641      	mov	r1, r8
1000171e:	4638      	mov	r0, r7
10001720:	f7ff f984 	bl	10000a2c <_ntoa_long>
10001724:	4604      	mov	r4, r0
10001726:	e77f      	b.n	10001628 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001728:	f015 0f80 	tst.w	r5, #128	; 0x80
1000172c:	d004      	beq.n	10001738 <_vsnprintf+0x428>
1000172e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001730:	1d11      	adds	r1, r2, #4
10001732:	9118      	str	r1, [sp, #96]	; 0x60
10001734:	8812      	ldrh	r2, [r2, #0]
10001736:	e73c      	b.n	100015b2 <_vsnprintf+0x2a2>
10001738:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000173a:	1d11      	adds	r1, r2, #4
1000173c:	9118      	str	r1, [sp, #96]	; 0x60
1000173e:	6812      	ldr	r2, [r2, #0]
10001740:	e737      	b.n	100015b2 <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
10001742:	2846      	cmp	r0, #70	; 0x46
10001744:	d01a      	beq.n	1000177c <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001746:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001748:	3307      	adds	r3, #7
1000174a:	f023 0307 	bic.w	r3, r3, #7
1000174e:	f103 0208 	add.w	r2, r3, #8
10001752:	9218      	str	r2, [sp, #96]	; 0x60
10001754:	9504      	str	r5, [sp, #16]
10001756:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001758:	9203      	str	r2, [sp, #12]
1000175a:	f8cd b008 	str.w	fp, [sp, #8]
1000175e:	e9d3 2300 	ldrd	r2, r3, [r3]
10001762:	e9cd 2300 	strd	r2, r3, [sp]
10001766:	4633      	mov	r3, r6
10001768:	4622      	mov	r2, r4
1000176a:	4641      	mov	r1, r8
1000176c:	4638      	mov	r0, r7
1000176e:	f7ff fc03 	bl	10000f78 <_ftoa>
10001772:	4604      	mov	r4, r0
        format++;
10001774:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001776:	3301      	adds	r3, #1
10001778:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000177a:	e5d4      	b.n	10001326 <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
1000177c:	f045 0520 	orr.w	r5, r5, #32
10001780:	e7e1      	b.n	10001746 <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
10001782:	2867      	cmp	r0, #103	; 0x67
10001784:	d001      	beq.n	1000178a <_vsnprintf+0x47a>
10001786:	2847      	cmp	r0, #71	; 0x47
10001788:	d101      	bne.n	1000178e <_vsnprintf+0x47e>
1000178a:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
1000178e:	2845      	cmp	r0, #69	; 0x45
10001790:	d001      	beq.n	10001796 <_vsnprintf+0x486>
10001792:	2847      	cmp	r0, #71	; 0x47
10001794:	d101      	bne.n	1000179a <_vsnprintf+0x48a>
10001796:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
1000179a:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000179c:	3307      	adds	r3, #7
1000179e:	f023 0307 	bic.w	r3, r3, #7
100017a2:	f103 0208 	add.w	r2, r3, #8
100017a6:	9218      	str	r2, [sp, #96]	; 0x60
100017a8:	9504      	str	r5, [sp, #16]
100017aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100017ac:	9203      	str	r2, [sp, #12]
100017ae:	f8cd b008 	str.w	fp, [sp, #8]
100017b2:	e9d3 2300 	ldrd	r2, r3, [r3]
100017b6:	e9cd 2300 	strd	r2, r3, [sp]
100017ba:	4633      	mov	r3, r6
100017bc:	4622      	mov	r2, r4
100017be:	4641      	mov	r1, r8
100017c0:	4638      	mov	r0, r7
100017c2:	f7ff f9e1 	bl	10000b88 <_etoa>
100017c6:	4604      	mov	r4, r0
        format++;
100017c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100017ca:	3301      	adds	r3, #1
100017cc:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100017ce:	e5aa      	b.n	10001326 <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
100017d0:	f015 0502 	ands.w	r5, r5, #2
100017d4:	d01f      	beq.n	10001816 <_vsnprintf+0x506>
        unsigned int l = 1U;
100017d6:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
100017da:	9818      	ldr	r0, [sp, #96]	; 0x60
100017dc:	1d03      	adds	r3, r0, #4
100017de:	9318      	str	r3, [sp, #96]	; 0x60
100017e0:	f104 0a01 	add.w	sl, r4, #1
100017e4:	4633      	mov	r3, r6
100017e6:	4622      	mov	r2, r4
100017e8:	4641      	mov	r1, r8
100017ea:	7800      	ldrb	r0, [r0, #0]
100017ec:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
100017ee:	b9bd      	cbnz	r5, 10001820 <_vsnprintf+0x510>
        format++;
100017f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100017f2:	3301      	adds	r3, #1
100017f4:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100017f6:	4654      	mov	r4, sl
100017f8:	e595      	b.n	10001326 <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
100017fa:	f102 0a01 	add.w	sl, r2, #1
100017fe:	4633      	mov	r3, r6
10001800:	4641      	mov	r1, r8
10001802:	2020      	movs	r0, #32
10001804:	47b8      	blx	r7
          while (l++ < width) {
10001806:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001808:	4652      	mov	r2, sl
          while (l++ < width) {
1000180a:	f103 0901 	add.w	r9, r3, #1
1000180e:	459b      	cmp	fp, r3
10001810:	d8f3      	bhi.n	100017fa <_vsnprintf+0x4ea>
10001812:	4614      	mov	r4, r2
10001814:	e7e1      	b.n	100017da <_vsnprintf+0x4ca>
        unsigned int l = 1U;
10001816:	2301      	movs	r3, #1
10001818:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
1000181c:	4622      	mov	r2, r4
1000181e:	e7f4      	b.n	1000180a <_vsnprintf+0x4fa>
10001820:	4652      	mov	r2, sl
10001822:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001826:	e006      	b.n	10001836 <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001828:	1c55      	adds	r5, r2, #1
1000182a:	4633      	mov	r3, r6
1000182c:	4641      	mov	r1, r8
1000182e:	2020      	movs	r0, #32
10001830:	47b8      	blx	r7
          while (l++ < width) {
10001832:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001834:	462a      	mov	r2, r5
          while (l++ < width) {
10001836:	f109 0401 	add.w	r4, r9, #1
1000183a:	45ca      	cmp	sl, r9
1000183c:	d8f4      	bhi.n	10001828 <_vsnprintf+0x518>
1000183e:	4692      	mov	sl, r2
10001840:	e7d6      	b.n	100017f0 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
10001842:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001844:	1d1a      	adds	r2, r3, #4
10001846:	9218      	str	r2, [sp, #96]	; 0x60
10001848:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
1000184c:	f1bb 0f00 	cmp.w	fp, #0
10001850:	d11e      	bne.n	10001890 <_vsnprintf+0x580>
10001852:	f04f 33ff 	mov.w	r3, #4294967295
10001856:	46d1      	mov	r9, sl
10001858:	e002      	b.n	10001860 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
1000185a:	f109 0901 	add.w	r9, r9, #1
1000185e:	4613      	mov	r3, r2
10001860:	f899 2000 	ldrb.w	r2, [r9]
10001864:	b112      	cbz	r2, 1000186c <_vsnprintf+0x55c>
10001866:	1e5a      	subs	r2, r3, #1
10001868:	2b00      	cmp	r3, #0
1000186a:	d1f6      	bne.n	1000185a <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
1000186c:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
10001870:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
10001874:	930b      	str	r3, [sp, #44]	; 0x2c
10001876:	d002      	beq.n	1000187e <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
10001878:	45d9      	cmp	r9, fp
1000187a:	bf28      	it	cs
1000187c:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
1000187e:	f015 0302 	ands.w	r3, r5, #2
10001882:	930c      	str	r3, [sp, #48]	; 0x30
10001884:	d006      	beq.n	10001894 <_vsnprintf+0x584>
10001886:	4622      	mov	r2, r4
10001888:	465c      	mov	r4, fp
1000188a:	46b3      	mov	fp, r6
1000188c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
1000188e:	e01d      	b.n	100018cc <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001890:	465b      	mov	r3, fp
10001892:	e7e0      	b.n	10001856 <_vsnprintf+0x546>
10001894:	4622      	mov	r2, r4
10001896:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001898:	464b      	mov	r3, r9
1000189a:	e007      	b.n	100018ac <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
1000189c:	f102 0901 	add.w	r9, r2, #1
100018a0:	4633      	mov	r3, r6
100018a2:	4641      	mov	r1, r8
100018a4:	2020      	movs	r0, #32
100018a6:	47b8      	blx	r7
          while (l++ < width) {
100018a8:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
100018aa:	464a      	mov	r2, r9
          while (l++ < width) {
100018ac:	1c5d      	adds	r5, r3, #1
100018ae:	429c      	cmp	r4, r3
100018b0:	d8f4      	bhi.n	1000189c <_vsnprintf+0x58c>
100018b2:	46a9      	mov	r9, r5
100018b4:	465c      	mov	r4, fp
100018b6:	46b3      	mov	fp, r6
100018b8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100018ba:	e007      	b.n	100018cc <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
100018bc:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
100018be:	f10a 0a01 	add.w	sl, sl, #1
100018c2:	1c55      	adds	r5, r2, #1
100018c4:	465b      	mov	r3, fp
100018c6:	4641      	mov	r1, r8
100018c8:	47b8      	blx	r7
100018ca:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
100018cc:	f89a 0000 	ldrb.w	r0, [sl]
100018d0:	b120      	cbz	r0, 100018dc <_vsnprintf+0x5cc>
100018d2:	2e00      	cmp	r6, #0
100018d4:	d0f3      	beq.n	100018be <_vsnprintf+0x5ae>
100018d6:	1e63      	subs	r3, r4, #1
100018d8:	2c00      	cmp	r4, #0
100018da:	d1ef      	bne.n	100018bc <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
100018dc:	4614      	mov	r4, r2
100018de:	465e      	mov	r6, fp
100018e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100018e2:	b91b      	cbnz	r3, 100018ec <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
100018e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018e6:	3301      	adds	r3, #1
100018e8:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018ea:	e51c      	b.n	10001326 <_vsnprintf+0x16>
100018ec:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
100018f0:	e006      	b.n	10001900 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
100018f2:	1c55      	adds	r5, r2, #1
100018f4:	4633      	mov	r3, r6
100018f6:	4641      	mov	r1, r8
100018f8:	2020      	movs	r0, #32
100018fa:	47b8      	blx	r7
          while (l++ < width) {
100018fc:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100018fe:	462a      	mov	r2, r5
          while (l++ < width) {
10001900:	f109 0401 	add.w	r4, r9, #1
10001904:	45ca      	cmp	sl, r9
10001906:	d8f4      	bhi.n	100018f2 <_vsnprintf+0x5e2>
10001908:	4614      	mov	r4, r2
1000190a:	e7eb      	b.n	100018e4 <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
1000190c:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001910:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001912:	1d1a      	adds	r2, r3, #4
10001914:	9218      	str	r2, [sp, #96]	; 0x60
10001916:	681b      	ldr	r3, [r3, #0]
10001918:	9505      	str	r5, [sp, #20]
1000191a:	2208      	movs	r2, #8
1000191c:	9204      	str	r2, [sp, #16]
1000191e:	f8cd b00c 	str.w	fp, [sp, #12]
10001922:	2210      	movs	r2, #16
10001924:	9202      	str	r2, [sp, #8]
10001926:	2200      	movs	r2, #0
10001928:	9201      	str	r2, [sp, #4]
1000192a:	9300      	str	r3, [sp, #0]
1000192c:	4633      	mov	r3, r6
1000192e:	4622      	mov	r2, r4
10001930:	4641      	mov	r1, r8
10001932:	4638      	mov	r0, r7
10001934:	f7ff f87a 	bl	10000a2c <_ntoa_long>
10001938:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
1000193a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000193c:	3301      	adds	r3, #1
1000193e:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001940:	e4f1      	b.n	10001326 <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001942:	1c65      	adds	r5, r4, #1
10001944:	4633      	mov	r3, r6
10001946:	4622      	mov	r2, r4
10001948:	4641      	mov	r1, r8
1000194a:	2025      	movs	r0, #37	; 0x25
1000194c:	47b8      	blx	r7
        format++;
1000194e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001950:	3301      	adds	r3, #1
10001952:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001954:	462c      	mov	r4, r5
        break;
10001956:	e4e6      	b.n	10001326 <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001958:	1c65      	adds	r5, r4, #1
1000195a:	4633      	mov	r3, r6
1000195c:	4622      	mov	r2, r4
1000195e:	4641      	mov	r1, r8
10001960:	47b8      	blx	r7
        format++;
10001962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001964:	3301      	adds	r3, #1
10001966:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001968:	462c      	mov	r4, r5
        break;
1000196a:	e4dc      	b.n	10001326 <_vsnprintf+0x16>
    out = _out_null;
1000196c:	4f07      	ldr	r7, [pc, #28]	; (1000198c <_vsnprintf+0x67c>)
1000196e:	e4d9      	b.n	10001324 <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001970:	42b4      	cmp	r4, r6
10001972:	d301      	bcc.n	10001978 <_vsnprintf+0x668>
10001974:	1e72      	subs	r2, r6, #1
10001976:	e000      	b.n	1000197a <_vsnprintf+0x66a>
10001978:	4622      	mov	r2, r4
1000197a:	4633      	mov	r3, r6
1000197c:	4641      	mov	r1, r8
1000197e:	2000      	movs	r0, #0
10001980:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001982:	4620      	mov	r0, r4
10001984:	b00f      	add	sp, #60	; 0x3c
10001986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000198a:	bf00      	nop
1000198c:	10000851 	andne	r0, r0, r1, asr r8

10001990 <_out_char>:
  if (character) {
10001990:	b900      	cbnz	r0, 10001994 <_out_char+0x4>
10001992:	4770      	bx	lr
{
10001994:	b508      	push	{r3, lr}
    put_char(character);
10001996:	f000 f817 	bl	100019c8 <put_char>
}
1000199a:	bd08      	pop	{r3, pc}

1000199c <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
1000199c:	b40f      	push	{r0, r1, r2, r3}
1000199e:	b500      	push	{lr}
100019a0:	b085      	sub	sp, #20
100019a2:	aa06      	add	r2, sp, #24
100019a4:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
100019a8:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
100019aa:	9200      	str	r2, [sp, #0]
100019ac:	f04f 32ff 	mov.w	r2, #4294967295
100019b0:	a902      	add	r1, sp, #8
100019b2:	4804      	ldr	r0, [pc, #16]	; (100019c4 <printf+0x28>)
100019b4:	f7ff fcac 	bl	10001310 <_vsnprintf>
  va_end(va);
  return ret;
}
100019b8:	b005      	add	sp, #20
100019ba:	f85d eb04 	ldr.w	lr, [sp], #4
100019be:	b004      	add	sp, #16
100019c0:	4770      	bx	lr
100019c2:	bf00      	nop
100019c4:	10001991 	mulne	r0, r1, r9

100019c8 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
100019c8:	4b03      	ldr	r3, [pc, #12]	; (100019d8 <put_char+0x10>)
100019ca:	699b      	ldr	r3, [r3, #24]
100019cc:	f013 0f20 	tst.w	r3, #32
100019d0:	d1fa      	bne.n	100019c8 <put_char>
    UART_DATA(UART0) = ch;
100019d2:	4b01      	ldr	r3, [pc, #4]	; (100019d8 <put_char+0x10>)
100019d4:	6018      	str	r0, [r3, #0]
    return ch;
}
100019d6:	4770      	bx	lr
100019d8:	40200000 	eormi	r0, r0, r0

100019dc <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
100019dc:	b538      	push	{r3, r4, r5, lr}
100019de:	4605      	mov	r5, r0
    int index = 0;
100019e0:	2400      	movs	r4, #0
    while (string[index] != '\0') {
100019e2:	e002      	b.n	100019ea <puts+0xe>
        put_char(string[index]);
100019e4:	f7ff fff0 	bl	100019c8 <put_char>
        index++;
100019e8:	3401      	adds	r4, #1
    while (string[index] != '\0') {
100019ea:	5d28      	ldrb	r0, [r5, r4]
100019ec:	2800      	cmp	r0, #0
100019ee:	d1f9      	bne.n	100019e4 <puts+0x8>
    }
    put_char('\n');
100019f0:	200a      	movs	r0, #10
100019f2:	f7ff ffe9 	bl	100019c8 <put_char>
    return index;
}
100019f6:	4620      	mov	r0, r4
100019f8:	bd38      	pop	{r3, r4, r5, pc}
	...

100019fc <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
100019fc:	4b07      	ldr	r3, [pc, #28]	; (10001a1c <uart_init+0x20>)
100019fe:	2228      	movs	r2, #40	; 0x28
10001a00:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001a02:	220b      	movs	r2, #11
10001a04:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001a06:	2260      	movs	r2, #96	; 0x60
10001a08:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001a0a:	f240 3201 	movw	r2, #769	; 0x301
10001a0e:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001a10:	220a      	movs	r2, #10
10001a12:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001a14:	2201      	movs	r2, #1
10001a16:	609a      	str	r2, [r3, #8]
}
10001a18:	4770      	bx	lr
10001a1a:	bf00      	nop
10001a1c:	40200000 	eormi	r0, r0, r0

10001a20 <_tx_thread_stack_analyze>:
{
UINT posture;
#ifdef TX_PORT_USE_BASEPRI
    __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
#else
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001a20:	f3ef 8310 	mrs	r3, PRIMASK
    int_posture = __get_interrupt_posture();

#ifdef TX_PORT_USE_BASEPRI
    __set_basepri_value(TX_PORT_BASEPRI);
#else
    __asm__ volatile ("CPSID i" : : : "memory");
10001a24:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine if the thread pointer is NULL.  */
    if (thread_ptr != TX_NULL)
10001a26:	b118      	cbz	r0, 10001a30 <_tx_thread_stack_analyze+0x10>
    {

        /* Determine if the thread ID is invalid.  */
        if (thread_ptr -> tx_thread_id == TX_THREAD_ID)
10001a28:	6801      	ldr	r1, [r0, #0]
10001a2a:	4a1f      	ldr	r2, [pc, #124]	; (10001aa8 <_tx_thread_stack_analyze+0x88>)
10001a2c:	4291      	cmp	r1, r2
10001a2e:	d002      	beq.n	10001a36 <_tx_thread_stack_analyze+0x16>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001a30:	f383 8810 	msr	PRIMASK, r3
10001a34:	4770      	bx	lr
        {

            /* Pickup the current stack variables.  */
            stack_lowest =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_start);
10001a36:	68c1      	ldr	r1, [r0, #12]

            /* Determine if the pointer is null.  */
            if (stack_lowest != TX_NULL)
10001a38:	2900      	cmp	r1, #0
10001a3a:	d0f9      	beq.n	10001a30 <_tx_thread_stack_analyze+0x10>
{
10001a3c:	b470      	push	{r4, r5, r6}
            {

                /* Pickup the highest stack pointer.  */
                stack_highest =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_highest_ptr);
10001a3e:	f8d0 60cc 	ldr.w	r6, [r0, #204]	; 0xcc

                /* Determine if the pointer is null.  */
                if (stack_highest != TX_NULL)
10001a42:	b1ee      	cbz	r6, 10001a80 <_tx_thread_stack_analyze+0x60>
10001a44:	f383 8810 	msr	PRIMASK, r3
}
10001a48:	e002      	b.n	10001a50 <_tx_thread_stack_analyze+0x30>
                        }
                        else
                        {

                            /* Update the stack lowest, since we need to look in the lower half now.  */
                            stack_lowest =  stack_ptr;
10001a4a:	4611      	mov	r1, r2
                        }

                    } while(size > ((ULONG) 1));
10001a4c:	2b03      	cmp	r3, #3
10001a4e:	d90d      	bls.n	10001a6c <_tx_thread_stack_analyze+0x4c>
                        size =  (ULONG) (TX_ULONG_POINTER_DIF(stack_highest, stack_lowest))/((ULONG) 2);
10001a50:	1a73      	subs	r3, r6, r1
10001a52:	109b      	asrs	r3, r3, #2
10001a54:	085c      	lsrs	r4, r3, #1
                        stack_ptr =  TX_ULONG_POINTER_ADD(stack_lowest, size);
10001a56:	eb01 0284 	add.w	r2, r1, r4, lsl #2
                        if (*stack_ptr != TX_STACK_FILL)
10001a5a:	f851 5024 	ldr.w	r5, [r1, r4, lsl #2]
10001a5e:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
10001a62:	42a5      	cmp	r5, r4
10001a64:	d0f1      	beq.n	10001a4a <_tx_thread_stack_analyze+0x2a>
                            stack_highest =  stack_ptr;
10001a66:	4616      	mov	r6, r2
10001a68:	e7f0      	b.n	10001a4c <_tx_thread_stack_analyze+0x2c>
                    /* Position to first used word - at this point we are within a few words.  */
                    while (*stack_ptr == TX_STACK_FILL)
                    {

                        /* Position to next word in stack.  */
                        stack_ptr =  TX_ULONG_POINTER_ADD(stack_ptr, 1);
10001a6a:	3204      	adds	r2, #4
                    while (*stack_ptr == TX_STACK_FILL)
10001a6c:	6813      	ldr	r3, [r2, #0]
10001a6e:	429c      	cmp	r4, r3
10001a70:	d0fb      	beq.n	10001a6a <_tx_thread_stack_analyze+0x4a>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001a72:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001a76:	b672      	cpsid	i

                    /* Disable interrupts.  */
                    TX_DISABLE

                    /* Check to see if the thread is still created.  */
                    if (thread_ptr -> tx_thread_id == TX_THREAD_ID)
10001a78:	6804      	ldr	r4, [r0, #0]
10001a7a:	490b      	ldr	r1, [pc, #44]	; (10001aa8 <_tx_thread_stack_analyze+0x88>)
10001a7c:	428c      	cmp	r4, r1
10001a7e:	d003      	beq.n	10001a88 <_tx_thread_stack_analyze+0x68>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001a80:	f383 8810 	msr	PRIMASK, r3
        }
    }

    /* Restore interrupts.  */
    TX_RESTORE
}
10001a84:	bc70      	pop	{r4, r5, r6}
10001a86:	4770      	bx	lr
                        if (stack_ptr > (TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_start)))
10001a88:	68c1      	ldr	r1, [r0, #12]
10001a8a:	4291      	cmp	r1, r2
10001a8c:	d2f8      	bcs.n	10001a80 <_tx_thread_stack_analyze+0x60>
                            if (stack_ptr < (TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_highest_ptr)))
10001a8e:	f8d0 10cc 	ldr.w	r1, [r0, #204]	; 0xcc
10001a92:	4291      	cmp	r1, r2
10001a94:	d9f4      	bls.n	10001a80 <_tx_thread_stack_analyze+0x60>
                                if (*stack_ptr != TX_STACK_FILL)
10001a96:	6814      	ldr	r4, [r2, #0]
10001a98:	f8d0 10d4 	ldr.w	r1, [r0, #212]	; 0xd4
10001a9c:	428c      	cmp	r4, r1
10001a9e:	d0ef      	beq.n	10001a80 <_tx_thread_stack_analyze+0x60>
                                    thread_ptr -> tx_thread_stack_highest_ptr =  stack_ptr;
10001aa0:	f8c0 20cc 	str.w	r2, [r0, #204]	; 0xcc
10001aa4:	e7ec      	b.n	10001a80 <_tx_thread_stack_analyze+0x60>
10001aa6:	bf00      	nop
10001aa8:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc

10001aac <_tx_thread_stack_error_handler>:
/*                                            stack check error handling, */
/*                                            resulting in version 6.1.9  */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_stack_error_handler(TX_THREAD *thread_ptr)
{
10001aac:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001aae:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001ab2:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine if the application has registered an error handler.  */
    if (_tx_thread_application_stack_error_handler != TX_NULL)
10001ab4:	4b03      	ldr	r3, [pc, #12]	; (10001ac4 <_tx_thread_stack_error_handler+0x18>)
10001ab6:	681b      	ldr	r3, [r3, #0]
10001ab8:	b103      	cbz	r3, 10001abc <_tx_thread_stack_error_handler+0x10>
    {

        /* Yes, an error handler is present, simply call the application error handler.  */
        (_tx_thread_application_stack_error_handler)(thread_ptr);
10001aba:	4798      	blx	r3
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001abc:	f384 8810 	msr	PRIMASK, r4

        /* Restore interrupts.  */
        TX_RESTORE
    }
#endif
}
10001ac0:	bd10      	pop	{r4, pc}
10001ac2:	bf00      	nop
10001ac4:	38000094 	stmdacc	r0, {r2, r4, r7}

10001ac8 <_tx_thread_system_ni_resume>:

/* Define the non-interruptable version of thread resume. It is assumed at this point that
   all interrupts are disabled and will remain so during this function.  */

VOID  _tx_thread_system_ni_resume(TX_THREAD *thread_ptr)
{
10001ac8:	b510      	push	{r4, lr}
10001aca:	4604      	mov	r4, r0


#ifndef TX_NO_TIMER

    /* Deactivate the timeout timer if necessary.  */
    if (thread_ptr -> tx_thread_timer.tx_timer_internal_list_head != TX_NULL)
10001acc:	6e43      	ldr	r3, [r0, #100]	; 0x64
10001ace:	b113      	cbz	r3, 10001ad6 <_tx_thread_system_ni_resume+0xe>
    {

        /* Deactivate the thread's timeout timer.  */
        _tx_timer_system_deactivate(&(thread_ptr -> tx_thread_timer));
10001ad0:	304c      	adds	r0, #76	; 0x4c
10001ad2:	f000 fa57 	bl	10001f84 <_tx_timer_system_deactivate>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001ad6:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001ada:	b672      	cpsid	i
#endif

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10001adc:	b11c      	cbz	r4, 10001ae6 <_tx_thread_system_ni_resume+0x1e>
10001ade:	6821      	ldr	r1, [r4, #0]
10001ae0:	4a9d      	ldr	r2, [pc, #628]	; (10001d58 <_tx_thread_system_ni_resume+0x290>)
10001ae2:	4291      	cmp	r1, r2
10001ae4:	d01f      	beq.n	10001b26 <_tx_thread_system_ni_resume+0x5e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ae6:	f383 8810 	msr	PRIMASK, r3
#endif

    /* Thread is not in the process of suspending. Now check to make sure the thread
       has not already been resumed.  */
    if (thread_ptr -> tx_thread_state != TX_READY)
10001aea:	6b23      	ldr	r3, [r4, #48]	; 0x30
10001aec:	2b00      	cmp	r3, #0
10001aee:	f000 80f9 	beq.w	10001ce4 <_tx_thread_system_ni_resume+0x21c>
    {

        /* No, now check to see if the delayed suspension flag is set.  */
        if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
10001af2:	6b63      	ldr	r3, [r4, #52]	; 0x34
10001af4:	2b00      	cmp	r3, #0
10001af6:	f040 80f1 	bne.w	10001cdc <_tx_thread_system_ni_resume+0x214>
            /* Resume the thread!  */

            /* Make this thread ready.  */

            /* Change the state to ready.  */
            thread_ptr -> tx_thread_state =  TX_READY;
10001afa:	6323      	str	r3, [r4, #48]	; 0x30

            /* Log the thread status change.  */
            TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)

            /* Pickup priority of thread.  */
            priority =  thread_ptr -> tx_thread_priority;
10001afc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Increment the total number of thread resumptions.  */
            _tx_thread_performance_resume_count++;
10001afe:	4997      	ldr	r1, [pc, #604]	; (10001d5c <_tx_thread_system_ni_resume+0x294>)
10001b00:	680b      	ldr	r3, [r1, #0]
10001b02:	3301      	adds	r3, #1
10001b04:	600b      	str	r3, [r1, #0]

            /* Increment this thread's resume count.  */
            thread_ptr -> tx_thread_performance_resume_count++;
10001b06:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
10001b0a:	3301      	adds	r3, #1
10001b0c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
#endif

            /* Determine if there are other threads at this priority that are
               ready.  */
            head_ptr =  _tx_thread_priority_list[priority];
10001b10:	4b93      	ldr	r3, [pc, #588]	; (10001d60 <_tx_thread_system_ni_resume+0x298>)
10001b12:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
            if (head_ptr == TX_NULL)
10001b16:	2b00      	cmp	r3, #0
10001b18:	d035      	beq.n	10001b86 <_tx_thread_system_ni_resume+0xbe>
            {

                /* No, there are other threads at this priority already ready.  */

                /* Just add this thread to the priority list.  */
                tail_ptr =                                 head_ptr -> tx_thread_ready_previous;
10001b1a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                tail_ptr -> tx_thread_ready_next =         thread_ptr;
10001b1c:	6214      	str	r4, [r2, #32]
                head_ptr -> tx_thread_ready_previous =     thread_ptr;
10001b1e:	625c      	str	r4, [r3, #36]	; 0x24
                thread_ptr -> tx_thread_ready_previous =   tail_ptr;
10001b20:	6262      	str	r2, [r4, #36]	; 0x24
                thread_ptr -> tx_thread_ready_next =       head_ptr;
10001b22:	6223      	str	r3, [r4, #32]
10001b24:	e0de      	b.n	10001ce4 <_tx_thread_system_ni_resume+0x21c>
    TX_THREAD_STACK_CHECK(thread_ptr)
10001b26:	68a2      	ldr	r2, [r4, #8]
10001b28:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10001b2c:	428a      	cmp	r2, r1
10001b2e:	d201      	bcs.n	10001b34 <_tx_thread_system_ni_resume+0x6c>
10001b30:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10001b34:	68e1      	ldr	r1, [r4, #12]
10001b36:	6808      	ldr	r0, [r1, #0]
10001b38:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001b3c:	4290      	cmp	r0, r2
10001b3e:	d104      	bne.n	10001b4a <_tx_thread_system_ni_resume+0x82>
10001b40:	6920      	ldr	r0, [r4, #16]
10001b42:	f8d0 0001 	ldr.w	r0, [r0, #1]
10001b46:	4282      	cmp	r2, r0
10001b48:	d018      	beq.n	10001b7c <_tx_thread_system_ni_resume+0xb4>
10001b4a:	f383 8810 	msr	PRIMASK, r3
10001b4e:	4620      	mov	r0, r4
10001b50:	f7ff ffac 	bl	10001aac <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001b54:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001b58:	b672      	cpsid	i
10001b5a:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001b5e:	f852 1c04 	ldr.w	r1, [r2, #-4]
10001b62:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001b66:	4291      	cmp	r1, r2
10001b68:	d0bd      	beq.n	10001ae6 <_tx_thread_system_ni_resume+0x1e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001b6a:	f383 8810 	msr	PRIMASK, r3
10001b6e:	4620      	mov	r0, r4
10001b70:	f7ff ff56 	bl	10001a20 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001b74:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001b78:	b672      	cpsid	i
#endif
    return(int_posture);
10001b7a:	e7b4      	b.n	10001ae6 <_tx_thread_system_ni_resume+0x1e>
10001b7c:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001b80:	4291      	cmp	r1, r2
10001b82:	d9ea      	bls.n	10001b5a <_tx_thread_system_ni_resume+0x92>
10001b84:	e7e1      	b.n	10001b4a <_tx_thread_system_ni_resume+0x82>
                _tx_thread_priority_list[priority] =       thread_ptr;
10001b86:	4b76      	ldr	r3, [pc, #472]	; (10001d60 <_tx_thread_system_ni_resume+0x298>)
10001b88:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
                thread_ptr -> tx_thread_ready_next =       thread_ptr;
10001b8c:	6224      	str	r4, [r4, #32]
                thread_ptr -> tx_thread_ready_previous =   thread_ptr;
10001b8e:	6264      	str	r4, [r4, #36]	; 0x24
                TX_MOD32_BIT_SET(priority, priority_bit)
10001b90:	2301      	movs	r3, #1
10001b92:	fa03 f102 	lsl.w	r1, r3, r2
                _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | priority_bit;
10001b96:	4873      	ldr	r0, [pc, #460]	; (10001d64 <_tx_thread_system_ni_resume+0x29c>)
10001b98:	6803      	ldr	r3, [r0, #0]
10001b9a:	430b      	orrs	r3, r1
10001b9c:	6003      	str	r3, [r0, #0]
                if (priority < _tx_thread_highest_priority)
10001b9e:	4b72      	ldr	r3, [pc, #456]	; (10001d68 <_tx_thread_system_ni_resume+0x2a0>)
10001ba0:	681b      	ldr	r3, [r3, #0]
10001ba2:	4293      	cmp	r3, r2
10001ba4:	f240 809e 	bls.w	10001ce4 <_tx_thread_system_ni_resume+0x21c>
                    _tx_thread_highest_priority =  priority;
10001ba8:	4b6f      	ldr	r3, [pc, #444]	; (10001d68 <_tx_thread_system_ni_resume+0x2a0>)
10001baa:	601a      	str	r2, [r3, #0]
                    execute_ptr =  _tx_thread_execute_ptr;
10001bac:	4b6f      	ldr	r3, [pc, #444]	; (10001d6c <_tx_thread_system_ni_resume+0x2a4>)
10001bae:	681b      	ldr	r3, [r3, #0]
                    if (execute_ptr == TX_NULL)
10001bb0:	2b00      	cmp	r3, #0
10001bb2:	d04e      	beq.n	10001c52 <_tx_thread_system_ni_resume+0x18a>
                        if (priority < execute_ptr -> tx_thread_preempt_threshold)
10001bb4:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
10001bb6:	4291      	cmp	r1, r2
10001bb8:	f240 8094 	bls.w	10001ce4 <_tx_thread_system_ni_resume+0x21c>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001bbc:	f3ef 8205 	mrs	r2, IPSR
                            if (TX_THREAD_GET_SYSTEM_STATE() == ((ULONG) 0))
10001bc0:	496b      	ldr	r1, [pc, #428]	; (10001d70 <_tx_thread_system_ni_resume+0x2a8>)
10001bc2:	6809      	ldr	r1, [r1, #0]
10001bc4:	430a      	orrs	r2, r1
10001bc6:	d147      	bne.n	10001c58 <_tx_thread_system_ni_resume+0x190>
                                _tx_thread_performance_solicited_preemption_count++;
10001bc8:	496a      	ldr	r1, [pc, #424]	; (10001d74 <_tx_thread_system_ni_resume+0x2ac>)
10001bca:	680a      	ldr	r2, [r1, #0]
10001bcc:	3201      	adds	r2, #1
10001bce:	600a      	str	r2, [r1, #0]
                                execute_ptr -> tx_thread_performance_solicited_preemption_count++;
10001bd0:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
10001bd4:	3201      	adds	r2, #1
10001bd6:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
                            execute_ptr -> tx_thread_performance_last_preempting_thread =  thread_ptr;
10001bda:	f8c3 40b8 	str.w	r4, [r3, #184]	; 0xb8
                            _tx_thread_execute_ptr =  thread_ptr;
10001bde:	4b63      	ldr	r3, [pc, #396]	; (10001d6c <_tx_thread_system_ni_resume+0x2a4>)
10001be0:	601c      	str	r4, [r3, #0]
                            if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10001be2:	4b65      	ldr	r3, [pc, #404]	; (10001d78 <_tx_thread_system_ni_resume+0x2b0>)
10001be4:	681b      	ldr	r3, [r3, #0]
10001be6:	4a65      	ldr	r2, [pc, #404]	; (10001d7c <_tx_thread_system_ni_resume+0x2b4>)
10001be8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10001bec:	42a2      	cmp	r2, r4
10001bee:	d00c      	beq.n	10001c0a <_tx_thread_system_ni_resume+0x142>
                                _tx_thread_performance__execute_log_index++;
10001bf0:	3301      	adds	r3, #1
10001bf2:	4a61      	ldr	r2, [pc, #388]	; (10001d78 <_tx_thread_system_ni_resume+0x2b0>)
10001bf4:	6013      	str	r3, [r2, #0]
                                if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
10001bf6:	2b07      	cmp	r3, #7
10001bf8:	d902      	bls.n	10001c00 <_tx_thread_system_ni_resume+0x138>
                                    _tx_thread_performance__execute_log_index =  ((UINT) 0);
10001bfa:	4613      	mov	r3, r2
10001bfc:	2200      	movs	r2, #0
10001bfe:	601a      	str	r2, [r3, #0]
                                _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10001c00:	4b5d      	ldr	r3, [pc, #372]	; (10001d78 <_tx_thread_system_ni_resume+0x2b0>)
10001c02:	681a      	ldr	r2, [r3, #0]
10001c04:	4b5d      	ldr	r3, [pc, #372]	; (10001d7c <_tx_thread_system_ni_resume+0x2b4>)
10001c06:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001c0a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001c0e:	b672      	cpsid	i
                            TX_THREAD_STACK_CHECK(thread_ptr)
10001c10:	b11c      	cbz	r4, 10001c1a <_tx_thread_system_ni_resume+0x152>
10001c12:	6821      	ldr	r1, [r4, #0]
10001c14:	4a50      	ldr	r2, [pc, #320]	; (10001d58 <_tx_thread_system_ni_resume+0x290>)
10001c16:	4291      	cmp	r1, r2
10001c18:	d030      	beq.n	10001c7c <_tx_thread_system_ni_resume+0x1b4>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001c1a:	f383 8810 	msr	PRIMASK, r3
                            TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
10001c1e:	4b58      	ldr	r3, [pc, #352]	; (10001d80 <_tx_thread_system_ni_resume+0x2b8>)
10001c20:	681b      	ldr	r3, [r3, #0]
                            if (combined_flags == ((ULONG) 0))
10001c22:	2b00      	cmp	r3, #0
10001c24:	f040 8097 	bne.w	10001d56 <_tx_thread_system_ni_resume+0x28e>
                                _tx_thread_performance_non_idle_return_count++;
10001c28:	4a56      	ldr	r2, [pc, #344]	; (10001d84 <_tx_thread_system_ni_resume+0x2bc>)
10001c2a:	6813      	ldr	r3, [r2, #0]
10001c2c:	3301      	adds	r3, #1
10001c2e:	6013      	str	r3, [r2, #0]
__attribute__( ( always_inline ) ) static inline void _tx_thread_system_return_inline(void)
{
UINT interrupt_save;

    /* Set PendSV to invoke ThreadX scheduler.  */
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
10001c30:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10001c34:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10001c38:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001c3c:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10001c40:	2b00      	cmp	r3, #0
10001c42:	f040 8088 	bne.w	10001d56 <_tx_thread_system_ni_resume+0x28e>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001c46:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
10001c4a:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001c4c:	f383 8810 	msr	PRIMASK, r3
                            return;
10001c50:	e081      	b.n	10001d56 <_tx_thread_system_ni_resume+0x28e>
                        _tx_thread_execute_ptr =  thread_ptr;
10001c52:	4b46      	ldr	r3, [pc, #280]	; (10001d6c <_tx_thread_system_ni_resume+0x2a4>)
10001c54:	601c      	str	r4, [r3, #0]
10001c56:	e045      	b.n	10001ce4 <_tx_thread_system_ni_resume+0x21c>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001c58:	f3ef 8105 	mrs	r1, IPSR
                                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10001c5c:	4a44      	ldr	r2, [pc, #272]	; (10001d70 <_tx_thread_system_ni_resume+0x2a8>)
10001c5e:	6812      	ldr	r2, [r2, #0]
10001c60:	430a      	orrs	r2, r1
10001c62:	f1b2 3ff0 	cmp.w	r2, #4042322160	; 0xf0f0f0f0
10001c66:	d2b8      	bcs.n	10001bda <_tx_thread_system_ni_resume+0x112>
                                    _tx_thread_performance_interrupt_preemption_count++;
10001c68:	4947      	ldr	r1, [pc, #284]	; (10001d88 <_tx_thread_system_ni_resume+0x2c0>)
10001c6a:	680a      	ldr	r2, [r1, #0]
10001c6c:	3201      	adds	r2, #1
10001c6e:	600a      	str	r2, [r1, #0]
                                    execute_ptr -> tx_thread_performance_interrupt_preemption_count++;
10001c70:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
10001c74:	3201      	adds	r2, #1
10001c76:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
10001c7a:	e7ae      	b.n	10001bda <_tx_thread_system_ni_resume+0x112>
                            TX_THREAD_STACK_CHECK(thread_ptr)
10001c7c:	68a2      	ldr	r2, [r4, #8]
10001c7e:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10001c82:	428a      	cmp	r2, r1
10001c84:	d201      	bcs.n	10001c8a <_tx_thread_system_ni_resume+0x1c2>
10001c86:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10001c8a:	68e2      	ldr	r2, [r4, #12]
10001c8c:	6810      	ldr	r0, [r2, #0]
10001c8e:	f8d4 10d4 	ldr.w	r1, [r4, #212]	; 0xd4
10001c92:	4288      	cmp	r0, r1
10001c94:	d104      	bne.n	10001ca0 <_tx_thread_system_ni_resume+0x1d8>
10001c96:	6920      	ldr	r0, [r4, #16]
10001c98:	f8d0 0001 	ldr.w	r0, [r0, #1]
10001c9c:	4281      	cmp	r1, r0
10001c9e:	d018      	beq.n	10001cd2 <_tx_thread_system_ni_resume+0x20a>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ca0:	f383 8810 	msr	PRIMASK, r3
10001ca4:	4620      	mov	r0, r4
10001ca6:	f7ff ff01 	bl	10001aac <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001caa:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001cae:	b672      	cpsid	i
10001cb0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001cb4:	f852 1c04 	ldr.w	r1, [r2, #-4]
10001cb8:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001cbc:	4291      	cmp	r1, r2
10001cbe:	d0ac      	beq.n	10001c1a <_tx_thread_system_ni_resume+0x152>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001cc0:	f383 8810 	msr	PRIMASK, r3
10001cc4:	4620      	mov	r0, r4
10001cc6:	f7ff feab 	bl	10001a20 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001cca:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001cce:	b672      	cpsid	i
    return(int_posture);
10001cd0:	e7a3      	b.n	10001c1a <_tx_thread_system_ni_resume+0x152>
10001cd2:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10001cd6:	428a      	cmp	r2, r1
10001cd8:	d9ea      	bls.n	10001cb0 <_tx_thread_system_ni_resume+0x1e8>
10001cda:	e7e1      	b.n	10001ca0 <_tx_thread_system_ni_resume+0x1d8>
        /* Else, delayed suspend flag was set.  */
        else
        {

            /* Clear the delayed suspend flag and change the state.  */
            thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
10001cdc:	2300      	movs	r3, #0
10001cde:	6363      	str	r3, [r4, #52]	; 0x34
            thread_ptr -> tx_thread_state =            TX_SUSPENDED;
10001ce0:	2303      	movs	r3, #3
10001ce2:	6323      	str	r3, [r4, #48]	; 0x30
    }

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Is the execute pointer different?  */
    if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10001ce4:	4b24      	ldr	r3, [pc, #144]	; (10001d78 <_tx_thread_system_ni_resume+0x2b0>)
10001ce6:	681b      	ldr	r3, [r3, #0]
10001ce8:	4a24      	ldr	r2, [pc, #144]	; (10001d7c <_tx_thread_system_ni_resume+0x2b4>)
10001cea:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10001cee:	491f      	ldr	r1, [pc, #124]	; (10001d6c <_tx_thread_system_ni_resume+0x2a4>)
10001cf0:	680c      	ldr	r4, [r1, #0]
10001cf2:	42a2      	cmp	r2, r4
10001cf4:	d00c      	beq.n	10001d10 <_tx_thread_system_ni_resume+0x248>
    {

        /* Move to next entry.  */
        _tx_thread_performance__execute_log_index++;
10001cf6:	3301      	adds	r3, #1
10001cf8:	4a1f      	ldr	r2, [pc, #124]	; (10001d78 <_tx_thread_system_ni_resume+0x2b0>)
10001cfa:	6013      	str	r3, [r2, #0]

        /* Check for wrap condition.  */
        if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
10001cfc:	2b07      	cmp	r3, #7
10001cfe:	d902      	bls.n	10001d06 <_tx_thread_system_ni_resume+0x23e>
        {

            /* Set the index to the beginning.  */
            _tx_thread_performance__execute_log_index =  ((UINT) 0);
10001d00:	4613      	mov	r3, r2
10001d02:	2200      	movs	r2, #0
10001d04:	601a      	str	r2, [r3, #0]
        }

        /* Log the new execute pointer.  */
        _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10001d06:	4b1c      	ldr	r3, [pc, #112]	; (10001d78 <_tx_thread_system_ni_resume+0x2b0>)
10001d08:	681a      	ldr	r2, [r3, #0]
10001d0a:	4b1c      	ldr	r3, [pc, #112]	; (10001d7c <_tx_thread_system_ni_resume+0x2b4>)
10001d0c:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
        }
    }
#endif

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(current_thread)
10001d10:	4b1e      	ldr	r3, [pc, #120]	; (10001d8c <_tx_thread_system_ni_resume+0x2c4>)
10001d12:	681b      	ldr	r3, [r3, #0]

    /* Determine if a preemption condition is present.  */
    if (current_thread != _tx_thread_execute_ptr)
10001d14:	429c      	cmp	r4, r3
10001d16:	d01e      	beq.n	10001d56 <_tx_thread_system_ni_resume+0x28e>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001d18:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001d1c:	b672      	cpsid	i

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;

        /* Check this thread's stack.  */
        TX_THREAD_STACK_CHECK(thread_ptr)
10001d1e:	b11c      	cbz	r4, 10001d28 <_tx_thread_system_ni_resume+0x260>
10001d20:	6821      	ldr	r1, [r4, #0]
10001d22:	4a0d      	ldr	r2, [pc, #52]	; (10001d58 <_tx_thread_system_ni_resume+0x290>)
10001d24:	4291      	cmp	r1, r2
10001d26:	d033      	beq.n	10001d90 <_tx_thread_system_ni_resume+0x2c8>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001d28:	f383 8810 	msr	PRIMASK, r3
#endif

        /* Now determine if preemption should take place. This is only possible if the current thread pointer is
           not the same as the execute thread pointer AND the system state and preempt disable flags are clear.  */
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
10001d2c:	4b14      	ldr	r3, [pc, #80]	; (10001d80 <_tx_thread_system_ni_resume+0x2b8>)
10001d2e:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
10001d30:	b98b      	cbnz	r3, 10001d56 <_tx_thread_system_ni_resume+0x28e>
        {

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* There is another thread ready to run and will be scheduled upon return.  */
            _tx_thread_performance_non_idle_return_count++;
10001d32:	4a14      	ldr	r2, [pc, #80]	; (10001d84 <_tx_thread_system_ni_resume+0x2bc>)
10001d34:	6813      	ldr	r3, [r2, #0]
10001d36:	3301      	adds	r3, #1
10001d38:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
10001d3a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10001d3e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10001d42:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001d46:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10001d4a:	b923      	cbnz	r3, 10001d56 <_tx_thread_system_ni_resume+0x28e>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001d4c:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
10001d50:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001d52:	f383 8810 	msr	PRIMASK, r3

            /* Preemption is needed - return to the system!  */
            _tx_thread_system_return();
        }
    }
}
10001d56:	bd10      	pop	{r4, pc}
10001d58:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10001d5c:	380000d0 	stmdacc	r0, {r4, r6, r7}
10001d60:	380000e0 	stmdacc	r0, {r5, r6, r7}
10001d64:	38000160 	stmdacc	r0, {r5, r6, r8}
10001d68:	380000a0 	stmdacc	r0, {r5, r7}
10001d6c:	3800009c 	stmdacc	r0, {r2, r3, r4, r7}
10001d70:	38000004 	stmdacc	r0, {r2}
10001d74:	380000d4 	stmdacc	r0, {r2, r4, r6, r7}
10001d78:	380000a4 	stmdacc	r0, {r2, r5, r7}
10001d7c:	380000a8 	stmdacc	r0, {r3, r5, r7}
10001d80:	380000dc 	stmdacc	r0, {r2, r3, r4, r6, r7}
10001d84:	380000cc 	stmdacc	r0, {r2, r3, r6, r7}
10001d88:	380000c8 	stmdacc	r0, {r3, r6, r7}
10001d8c:	38000098 	stmdacc	r0, {r3, r4, r7}
        TX_THREAD_STACK_CHECK(thread_ptr)
10001d90:	68a2      	ldr	r2, [r4, #8]
10001d92:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10001d96:	428a      	cmp	r2, r1
10001d98:	d201      	bcs.n	10001d9e <_tx_thread_system_ni_resume+0x2d6>
10001d9a:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10001d9e:	68e1      	ldr	r1, [r4, #12]
10001da0:	6808      	ldr	r0, [r1, #0]
10001da2:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001da6:	4290      	cmp	r0, r2
10001da8:	d104      	bne.n	10001db4 <_tx_thread_system_ni_resume+0x2ec>
10001daa:	6920      	ldr	r0, [r4, #16]
10001dac:	f8d0 0001 	ldr.w	r0, [r0, #1]
10001db0:	4282      	cmp	r2, r0
10001db2:	d018      	beq.n	10001de6 <_tx_thread_system_ni_resume+0x31e>
10001db4:	f383 8810 	msr	PRIMASK, r3
10001db8:	4620      	mov	r0, r4
10001dba:	f7ff fe77 	bl	10001aac <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001dbe:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001dc2:	b672      	cpsid	i
10001dc4:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001dc8:	f852 1c04 	ldr.w	r1, [r2, #-4]
10001dcc:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001dd0:	4291      	cmp	r1, r2
10001dd2:	d0a9      	beq.n	10001d28 <_tx_thread_system_ni_resume+0x260>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001dd4:	f383 8810 	msr	PRIMASK, r3
10001dd8:	4620      	mov	r0, r4
10001dda:	f7ff fe21 	bl	10001a20 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001dde:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001de2:	b672      	cpsid	i
    return(int_posture);
10001de4:	e7a0      	b.n	10001d28 <_tx_thread_system_ni_resume+0x260>
10001de6:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001dea:	4291      	cmp	r1, r2
10001dec:	d9ea      	bls.n	10001dc4 <_tx_thread_system_ni_resume+0x2fc>
10001dee:	e7e1      	b.n	10001db4 <_tx_thread_system_ni_resume+0x2ec>

10001df0 <_tx_thread_time_slice>:
/*                                            TX_NO_TIMER is defined,     */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_time_slice(VOID)
{
10001df0:	b538      	push	{r3, r4, r5, lr}
ULONG           system_state;
UINT            preempt_disable;
#endif

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001df2:	4b56      	ldr	r3, [pc, #344]	; (10001f4c <_tx_thread_time_slice+0x15c>)
10001df4:	681c      	ldr	r4, [r3, #0]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001df6:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001dfa:	b672      	cpsid	i

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10001dfc:	b11c      	cbz	r4, 10001e06 <_tx_thread_time_slice+0x16>
10001dfe:	6821      	ldr	r1, [r4, #0]
10001e00:	4a53      	ldr	r2, [pc, #332]	; (10001f50 <_tx_thread_time_slice+0x160>)
10001e02:	4291      	cmp	r1, r2
10001e04:	d00d      	beq.n	10001e22 <_tx_thread_time_slice+0x32>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001e06:	f383 8810 	msr	PRIMASK, r3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001e0a:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001e0e:	b672      	cpsid	i

    /* Lockout interrupts while the time-slice is evaluated.  */
    TX_DISABLE

    /* Clear the expired time-slice flag.  */
    _tx_timer_expired_time_slice =  TX_FALSE;
10001e10:	4b50      	ldr	r3, [pc, #320]	; (10001f54 <_tx_thread_time_slice+0x164>)
10001e12:	2200      	movs	r2, #0
10001e14:	601a      	str	r2, [r3, #0]

    /* Make sure the thread pointer is valid.  */
    if (thread_ptr != TX_NULL)
10001e16:	b3a4      	cbz	r4, 10001e82 <_tx_thread_time_slice+0x92>
    {

        /* Make sure the thread is still active, i.e. not suspended.  */
        if (thread_ptr -> tx_thread_state == TX_READY)
10001e18:	6b23      	ldr	r3, [r4, #48]	; 0x30
10001e1a:	b3ab      	cbz	r3, 10001e88 <_tx_thread_time_slice+0x98>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001e1c:	f381 8810 	msr	PRIMASK, r1

        /* Yes, check this thread's stack.  */
        TX_THREAD_STACK_CHECK(next_thread_ptr)
    }
#endif
}
10001e20:	bd38      	pop	{r3, r4, r5, pc}
    TX_THREAD_STACK_CHECK(thread_ptr)
10001e22:	68a2      	ldr	r2, [r4, #8]
10001e24:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10001e28:	428a      	cmp	r2, r1
10001e2a:	d201      	bcs.n	10001e30 <_tx_thread_time_slice+0x40>
10001e2c:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10001e30:	68e1      	ldr	r1, [r4, #12]
10001e32:	6808      	ldr	r0, [r1, #0]
10001e34:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001e38:	4290      	cmp	r0, r2
10001e3a:	d104      	bne.n	10001e46 <_tx_thread_time_slice+0x56>
10001e3c:	6920      	ldr	r0, [r4, #16]
10001e3e:	f8d0 0001 	ldr.w	r0, [r0, #1]
10001e42:	4282      	cmp	r2, r0
10001e44:	d018      	beq.n	10001e78 <_tx_thread_time_slice+0x88>
10001e46:	f383 8810 	msr	PRIMASK, r3
10001e4a:	4620      	mov	r0, r4
10001e4c:	f7ff fe2e 	bl	10001aac <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001e50:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001e54:	b672      	cpsid	i
10001e56:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001e5a:	f852 1c04 	ldr.w	r1, [r2, #-4]
10001e5e:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001e62:	4291      	cmp	r1, r2
10001e64:	d0cf      	beq.n	10001e06 <_tx_thread_time_slice+0x16>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001e66:	f383 8810 	msr	PRIMASK, r3
10001e6a:	4620      	mov	r0, r4
10001e6c:	f7ff fdd8 	bl	10001a20 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001e70:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001e74:	b672      	cpsid	i
    return(int_posture);
10001e76:	e7c6      	b.n	10001e06 <_tx_thread_time_slice+0x16>
10001e78:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10001e7c:	4291      	cmp	r1, r2
10001e7e:	d9ea      	bls.n	10001e56 <_tx_thread_time_slice+0x66>
10001e80:	e7e1      	b.n	10001e46 <_tx_thread_time_slice+0x56>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001e82:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
10001e86:	e7cb      	b.n	10001e20 <_tx_thread_time_slice+0x30>
            thread_ptr -> tx_thread_time_slice =  thread_ptr -> tx_thread_new_time_slice;
10001e88:	69e3      	ldr	r3, [r4, #28]
10001e8a:	61a3      	str	r3, [r4, #24]
            _tx_timer_time_slice =  thread_ptr -> tx_thread_time_slice;
10001e8c:	4a32      	ldr	r2, [pc, #200]	; (10001f58 <_tx_thread_time_slice+0x168>)
10001e8e:	6013      	str	r3, [r2, #0]
            if (thread_ptr -> tx_thread_ready_next != thread_ptr)
10001e90:	6a23      	ldr	r3, [r4, #32]
10001e92:	42a3      	cmp	r3, r4
10001e94:	d006      	beq.n	10001ea4 <_tx_thread_time_slice+0xb4>
                if (thread_ptr -> tx_thread_priority == thread_ptr -> tx_thread_preempt_threshold)
10001e96:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10001e98:	6be0      	ldr	r0, [r4, #60]	; 0x3c
10001e9a:	4282      	cmp	r2, r0
10001e9c:	d005      	beq.n	10001eaa <_tx_thread_time_slice+0xba>
10001e9e:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
10001ea2:	e7bd      	b.n	10001e20 <_tx_thread_time_slice+0x30>
10001ea4:	f381 8810 	msr	PRIMASK, r1
10001ea8:	e7ba      	b.n	10001e20 <_tx_thread_time_slice+0x30>
                    _tx_thread_priority_list[thread_ptr -> tx_thread_priority] =  thread_ptr -> tx_thread_ready_next;
10001eaa:	482c      	ldr	r0, [pc, #176]	; (10001f5c <_tx_thread_time_slice+0x16c>)
10001eac:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
                    _tx_thread_execute_ptr =  _tx_thread_priority_list[_tx_thread_highest_priority];
10001eb0:	4b2b      	ldr	r3, [pc, #172]	; (10001f60 <_tx_thread_time_slice+0x170>)
10001eb2:	681b      	ldr	r3, [r3, #0]
10001eb4:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
10001eb8:	4b2a      	ldr	r3, [pc, #168]	; (10001f64 <_tx_thread_time_slice+0x174>)
10001eba:	601d      	str	r5, [r3, #0]
                    thread_ptr -> tx_thread_performance_time_slice_count++;
10001ebc:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
10001ec0:	3301      	adds	r3, #1
10001ec2:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
                    _tx_thread_performance_time_slice_count++;
10001ec6:	4a28      	ldr	r2, [pc, #160]	; (10001f68 <_tx_thread_time_slice+0x178>)
10001ec8:	6813      	ldr	r3, [r2, #0]
10001eca:	3301      	adds	r3, #1
10001ecc:	6013      	str	r3, [r2, #0]
10001ece:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
10001ed2:	2d00      	cmp	r5, #0
10001ed4:	d0a4      	beq.n	10001e20 <_tx_thread_time_slice+0x30>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001ed6:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001eda:	b672      	cpsid	i
        TX_THREAD_STACK_CHECK(next_thread_ptr)
10001edc:	6829      	ldr	r1, [r5, #0]
10001ede:	4a1c      	ldr	r2, [pc, #112]	; (10001f50 <_tx_thread_time_slice+0x160>)
10001ee0:	4291      	cmp	r1, r2
10001ee2:	d002      	beq.n	10001eea <_tx_thread_time_slice+0xfa>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ee4:	f383 8810 	msr	PRIMASK, r3
}
10001ee8:	e79a      	b.n	10001e20 <_tx_thread_time_slice+0x30>
        TX_THREAD_STACK_CHECK(next_thread_ptr)
10001eea:	68aa      	ldr	r2, [r5, #8]
10001eec:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
10001ef0:	428a      	cmp	r2, r1
10001ef2:	d201      	bcs.n	10001ef8 <_tx_thread_time_slice+0x108>
10001ef4:	f8c5 20cc 	str.w	r2, [r5, #204]	; 0xcc
10001ef8:	68e9      	ldr	r1, [r5, #12]
10001efa:	6808      	ldr	r0, [r1, #0]
10001efc:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001f00:	4290      	cmp	r0, r2
10001f02:	d104      	bne.n	10001f0e <_tx_thread_time_slice+0x11e>
10001f04:	6928      	ldr	r0, [r5, #16]
10001f06:	f8d0 0001 	ldr.w	r0, [r0, #1]
10001f0a:	4282      	cmp	r2, r0
10001f0c:	d018      	beq.n	10001f40 <_tx_thread_time_slice+0x150>
10001f0e:	f383 8810 	msr	PRIMASK, r3
10001f12:	4628      	mov	r0, r5
10001f14:	f7ff fdca 	bl	10001aac <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f18:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f1c:	b672      	cpsid	i
10001f1e:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
10001f22:	f852 1c04 	ldr.w	r1, [r2, #-4]
10001f26:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10001f2a:	4291      	cmp	r1, r2
10001f2c:	d0da      	beq.n	10001ee4 <_tx_thread_time_slice+0xf4>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001f2e:	f383 8810 	msr	PRIMASK, r3
10001f32:	4628      	mov	r0, r5
10001f34:	f7ff fd74 	bl	10001a20 <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f38:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f3c:	b672      	cpsid	i
    return(int_posture);
10001f3e:	e7d1      	b.n	10001ee4 <_tx_thread_time_slice+0xf4>
10001f40:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
10001f44:	4291      	cmp	r1, r2
10001f46:	d9ea      	bls.n	10001f1e <_tx_thread_time_slice+0x12e>
10001f48:	e7e1      	b.n	10001f0e <_tx_thread_time_slice+0x11e>
10001f4a:	bf00      	nop
10001f4c:	38000098 	stmdacc	r0, {r3, r4, r7}
10001f50:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10001f54:	38000170 	stmdacc	r0, {r4, r5, r6, r8}
10001f58:	38000258 	stmdacc	r0, {r3, r4, r6, r9}
10001f5c:	380000e0 	stmdacc	r0, {r5, r6, r7}
10001f60:	380000a0 	stmdacc	r0, {r5, r7}
10001f64:	3800009c 	stmdacc	r0, {r2, r3, r4, r7}
10001f68:	380000d8 	stmdacc	r0, {r3, r4, r6, r7}

10001f6c <_tx_timer_expiration_process>:
/*                                            TX_NO_TIMER is defined,     */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_timer_expiration_process(VOID)
{
10001f6c:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f6e:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f72:	b672      	cpsid	i
    TX_DISABLE

#ifdef TX_NOT_INTERRUPTABLE

    /* Resume the thread!  */
    _tx_thread_system_ni_resume(&_tx_timer_thread);
10001f74:	4802      	ldr	r0, [pc, #8]	; (10001f80 <_tx_timer_expiration_process+0x14>)
10001f76:	f7ff fda7 	bl	10001ac8 <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001f7a:	f384 8810 	msr	PRIMASK, r4
    }

    /* Restore interrupts.  */
    TX_RESTORE
#endif
}
10001f7e:	bd10      	pop	{r4, pc}
10001f80:	38000180 	stmdacc	r0, {r7, r8}

10001f84 <_tx_timer_system_deactivate>:
TX_TIMER_INTERNAL   *next_timer;
TX_TIMER_INTERNAL   *previous_timer;


    /* Pickup the list head pointer.  */
    list_head =  timer_ptr -> tx_timer_internal_list_head;
10001f84:	6983      	ldr	r3, [r0, #24]

    /* Determine if the timer still needs deactivation.  */
    if (list_head != TX_NULL)
10001f86:	b153      	cbz	r3, 10001f9e <_tx_timer_system_deactivate+0x1a>
    {

        /* Deactivate the timer.  */

        /* Pickup the next active timer.  */
        next_timer =  timer_ptr -> tx_timer_internal_active_next;
10001f88:	6902      	ldr	r2, [r0, #16]

        /* See if this is the only timer in the list.  */
        if (timer_ptr == next_timer)
10001f8a:	4290      	cmp	r0, r2
10001f8c:	d008      	beq.n	10001fa0 <_tx_timer_system_deactivate+0x1c>
        {

            /* At least one more timer is on the same expiration list.  */

            /* Update the links of the adjacent timers.  */
            previous_timer =                                   timer_ptr -> tx_timer_internal_active_previous;
10001f8e:	6941      	ldr	r1, [r0, #20]
            next_timer -> tx_timer_internal_active_previous =  previous_timer;
10001f90:	6151      	str	r1, [r2, #20]
            previous_timer -> tx_timer_internal_active_next =  next_timer;
10001f92:	610a      	str	r2, [r1, #16]

            /* Determine if the head pointer needs to be updated.  */
            if (*(list_head) == timer_ptr)
10001f94:	6819      	ldr	r1, [r3, #0]
10001f96:	4281      	cmp	r1, r0
10001f98:	d008      	beq.n	10001fac <_tx_timer_system_deactivate+0x28>
                *(list_head) =  next_timer;
            }
        }

        /* Clear the timer's list head pointer.  */
        timer_ptr -> tx_timer_internal_list_head =  TX_NULL;
10001f9a:	2300      	movs	r3, #0
10001f9c:	6183      	str	r3, [r0, #24]
    }
}
10001f9e:	4770      	bx	lr
            if (*(list_head) == timer_ptr)
10001fa0:	681a      	ldr	r2, [r3, #0]
10001fa2:	4282      	cmp	r2, r0
10001fa4:	d1f9      	bne.n	10001f9a <_tx_timer_system_deactivate+0x16>
                *(list_head) =  TX_NULL;
10001fa6:	2200      	movs	r2, #0
10001fa8:	601a      	str	r2, [r3, #0]
10001faa:	e7f6      	b.n	10001f9a <_tx_timer_system_deactivate+0x16>
                next_timer -> tx_timer_internal_list_head =  list_head;
10001fac:	6193      	str	r3, [r2, #24]
                *(list_head) =  next_timer;
10001fae:	601a      	str	r2, [r3, #0]
10001fb0:	e7f3      	b.n	10001f9a <_tx_timer_system_deactivate+0x16>

10001fb2 <_getpid>:
10001fb2:	2001      	movs	r0, #1
10001fb4:	4770      	bx	lr

10001fb6 <_kill>:
10001fb6:	b508      	push	{r3, lr}
10001fb8:	f000 f976 	bl	100022a8 <__errno>
10001fbc:	2316      	movs	r3, #22
10001fbe:	6003      	str	r3, [r0, #0]
10001fc0:	f04f 30ff 	mov.w	r0, #4294967295
10001fc4:	bd08      	pop	{r3, pc}

10001fc6 <_exit>:
10001fc6:	b508      	push	{r3, lr}
10001fc8:	f04f 31ff 	mov.w	r1, #4294967295
10001fcc:	f7ff fff3 	bl	10001fb6 <_kill>
10001fd0:	e7fe      	b.n	10001fd0 <_exit+0xa>
	...

10001fd4 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10001fd4:	4815      	ldr	r0, [pc, #84]	; (1000202c <BusFault_Handler+0x4>)
                msr      psp, r0
10001fd6:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10001fda:	4815      	ldr	r0, [pc, #84]	; (10002030 <BusFault_Handler+0x8>)
                msr      msplim, r0
10001fdc:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10001fe0:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10001fe4:	f7fe fc1e 	bl	10000824 <SystemInit>

                ldr      r4, =__copy_table_start__
10001fe8:	4c12      	ldr	r4, [pc, #72]	; (10002034 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10001fea:	4d13      	ldr	r5, [pc, #76]	; (10002038 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10001fec:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10001fee:	da0a      	bge.n	10002006 <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10001ff0:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10001ff2:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10001ff4:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10001ff6:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10001ff8:	3b04      	subs	r3, #4
                ittt     ge
10001ffa:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10001ffc:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10001ffe:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10002000:	e7fa      	bge.n	10001ff8 <Reset_Handler+0x24>

                adds     r4, #12
10002002:	340c      	adds	r4, #12
                b        .L_loop0
10002004:	e7f2      	b.n	10001fec <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10002006:	4b0d      	ldr	r3, [pc, #52]	; (1000203c <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10002008:	4c0d      	ldr	r4, [pc, #52]	; (10002040 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
1000200a:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
1000200c:	da09      	bge.n	10002022 <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
1000200e:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10002010:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10002012:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10002014:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10002016:	3a04      	subs	r2, #4
                itt      ge
10002018:	bfa4      	itt	ge
                strge    r0, [r1, r2]
1000201a:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
1000201c:	e7fb      	bge.n	10002016 <Reset_Handler+0x42>

                adds     r3, #8
1000201e:	3308      	adds	r3, #8
                b        .L_loop2
10002020:	e7f3      	b.n	1000200a <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10002022:	f7fe fbed 	bl	10000800 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10002026:	e7fe      	b.n	10002026 <Reset_Handler+0x52>

10002028 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10002028:	e7fe      	b.n	10002028 <BusFault_Handler>
1000202a:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
1000202e:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10002032:	40fc380f 	rscsmi	r3, ip, pc, lsl #16
                ldr      r4, =__copy_table_start__
10002036:	41081000 	mrsmi	r1, (UNDEF: 8)
                ldr      r5, =__copy_table_end__
1000203a:	41081000 	mrsmi	r1, (UNDEF: 8)
                ldr      r3, =__zero_table_start__
1000203e:	41081000 	mrsmi	r1, (UNDEF: 8)
                ldr      r4, =__zero_table_end__
10002042:	 	ldrbtlt	r1, [r2], -r0

10002044 <_tx_initialize_low_level>:
    .thumb_func
.type _tx_initialize_low_level, function
_tx_initialize_low_level:

    /* Disable interrupts during ThreadX initialization.  */
    CPSID   i
10002044:	b672      	cpsid	i

    /* Set base of available memory to end of non-initialised RAM area.  */
    LDR     r0, =_tx_initialize_unused_memory       // Build address of unused memory pointer
10002046:	482c      	ldr	r0, [pc, #176]	; (100020f8 <__tx_DBGHandler+0x4>)
    LDR     r1, =__RAM_segment_used_end__           // Build first free address
10002048:	492c      	ldr	r1, [pc, #176]	; (100020fc <__tx_DBGHandler+0x8>)
    ADD     r1, r1, #4                              //
1000204a:	f101 0104 	add.w	r1, r1, #4
    STR     r1, [r0]                                // Setup first unused memory pointer
1000204e:	6001      	str	r1, [r0, #0]

    /* Setup Vector Table Offset Register.  */
    MOV     r0, #0xE000E000                         // Build address of NVIC registers
10002050:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002054:	492a      	ldr	r1, [pc, #168]	; (10002100 <__tx_DBGHandler+0xc>)
    STR     r1, [r0, #0xD08]                        // Set vector table address
10002056:	f8c0 1d08 	str.w	r1, [r0, #3336]	; 0xd08

    /* Enable the cycle count register.  */
    LDR     r0, =0xE0001000                         // Build address of DWT register
1000205a:	482a      	ldr	r0, [pc, #168]	; (10002104 <__tx_DBGHandler+0x10>)
    LDR     r1, [r0]                                // Pickup the current value
1000205c:	6801      	ldr	r1, [r0, #0]
    ORR     r1, r1, #1                              // Set the CYCCNTENA bit
1000205e:	f041 0101 	orr.w	r1, r1, #1
    STR     r1, [r0]                                // Enable the cycle count register
10002062:	6001      	str	r1, [r0, #0]

    /* Set system stack pointer from vector value.  */
    LDR     r0, =_tx_thread_system_stack_ptr        // Build address of system stack pointer
10002064:	4828      	ldr	r0, [pc, #160]	; (10002108 <__tx_DBGHandler+0x14>)
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002066:	4926      	ldr	r1, [pc, #152]	; (10002100 <__tx_DBGHandler+0xc>)
    LDR     r1, [r1]                                // Pickup reset stack pointer
10002068:	6809      	ldr	r1, [r1, #0]
    STR     r1, [r0]                                // Save system stack pointer
1000206a:	6001      	str	r1, [r0, #0]

    /* Configure SysTick.  */
    MOV     r0, #0xE000E000                         // Build address of NVIC registers
1000206c:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    LDR     r1, =SYSTICK_CYCLES
10002070:	f64e 215f 	movw	r1, #59999	; 0xea5f
    STR     r1, [r0, #0x14]                         // Setup SysTick Reload Value
10002074:	6141      	str	r1, [r0, #20]
    MOV     r1, #0x7                                // Build SysTick Control Enable Value
10002076:	f04f 0107 	mov.w	r1, #7
    STR     r1, [r0, #0x10]                         // Setup SysTick Control
1000207a:	6101      	str	r1, [r0, #16]

    /* Configure handler priorities.  */
    LDR     r1, =0x00000000                         // Rsrv, UsgF, BusF, MemM
1000207c:	f04f 0100 	mov.w	r1, #0
    STR     r1, [r0, #0xD18]                        // Setup System Handlers 4-7 Priority Registers
10002080:	f8c0 1d18 	str.w	r1, [r0, #3352]	; 0xd18
    LDR     r1, =0xFF000000                         // SVCl, Rsrv, Rsrv, Rsrv
10002084:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    STR     r1, [r0, #0xD1C]                        // Setup System Handlers 8-11 Priority Registers
10002088:	f8c0 1d1c 	str.w	r1, [r0, #3356]	; 0xd1c
                                                    // Note: SVC must be lowest priority, which is 0xFF
    LDR     r1, =0x40FF0000                         // SysT, PnSV, Rsrv, DbgM
1000208c:	491f      	ldr	r1, [pc, #124]	; (1000210c <__tx_DBGHandler+0x18>)
    STR     r1, [r0, #0xD20]                        // Setup System Handlers 12-15 Priority Registers
1000208e:	f8c0 1d20 	str.w	r1, [r0, #3360]	; 0xd20
                                                    // Note: PnSV must be lowest priority, which is 0xFF

    /* Return to caller.  */
    BX      lr
10002092:	4770      	bx	lr

10002094 <__tx_BadHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_BadHandler
    .thumb_func
.type __tx_BadHandler, function
__tx_BadHandler:
    B       __tx_BadHandler
10002094:	f7ff bffe 	b.w	10002094 <__tx_BadHandler>

10002098 <__tx_IntHandler>:
    .thumb_func
.type __tx_IntHandler, function
__tx_IntHandler:
// VOID InterruptHandler (VOID)
// {
    PUSH    {r0,lr}     // Save LR (and dummy r0 to maintain stack alignment)
10002098:	b501      	push	{r0, lr}
    /* Do interrupt handler work here */
    /* .... */
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_exit              // Call the ISR exit function
#endif
    POP     {r0,lr}
1000209a:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    BX      lr
1000209e:	4770      	bx	lr

100020a0 <SysTick_Handler>:
    .thumb_func
.type SysTick_Handler, function
SysTick_Handler:
// VOID TimerInterruptHandler (VOID)
// {
    PUSH    {r0,lr}     // Save LR (and dummy r0 to maintain stack alignment)
100020a0:	b501      	push	{r0, lr}
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_enter             // Call the ISR enter function
#endif
    BL      _tx_timer_interrupt
100020a2:	f000 f8a5 	bl	100021f0 <_tx_timer_interrupt>
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_exit              // Call the ISR exit function
#endif
    POP     {r0,lr}
100020a6:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    BX      lr
100020aa:	4770      	bx	lr

100020ac <HardFault_Handler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  HardFault_Handler
    .thumb_func
.type HardFault_Handler, function
HardFault_Handler:
    B       HardFault_Handler
100020ac:	f7ff bffe 	b.w	100020ac <HardFault_Handler>

100020b0 <UsageFault_Handler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  UsageFault_Handler
    .thumb_func
.type UsageFault_Handler, function
UsageFault_Handler:
    CPSID   i                                       // Disable interrupts
100020b0:	b672      	cpsid	i
    // Check for stack limit fault
    LDR     r0, =0xE000ED28                         // CFSR address
100020b2:	4817      	ldr	r0, [pc, #92]	; (10002110 <__tx_DBGHandler+0x1c>)
    LDR     r1,[r0]                                 // Pick up CFSR
100020b4:	6801      	ldr	r1, [r0, #0]
    TST     r1, #0x00100000                         // Check for Stack Overflow
100020b6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000

100020ba <_unhandled_usage_loop>:
_unhandled_usage_loop:
    BEQ     _unhandled_usage_loop                   // If not stack overflow then loop
100020ba:	d0fe      	beq.n	100020ba <_unhandled_usage_loop>

    // Handle stack overflow
    STR     r1, [r0]                                // Clear CFSR flag(s)
100020bc:	6001      	str	r1, [r0, #0]

#ifdef __ARM_FP
    LDR     r0, =0xE000EF34                         // Cleanup FPU context: Load FPCCR address
100020be:	4815      	ldr	r0, [pc, #84]	; (10002114 <__tx_DBGHandler+0x20>)
    LDR     r1, [r0]                                // Load FPCCR
100020c0:	6801      	ldr	r1, [r0, #0]
    BIC     r1, r1, #1                              // Clear the lazy preservation active bit
100020c2:	f021 0101 	bic.w	r1, r1, #1
    STR     r1, [r0]                                // Store the value
100020c6:	6001      	str	r1, [r0, #0]
#endif

    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
100020c8:	4813      	ldr	r0, [pc, #76]	; (10002118 <__tx_DBGHandler+0x24>)
    LDR     r0,[r0]                                 // Pick up current thread pointer
100020ca:	6800      	ldr	r0, [r0, #0]
    PUSH    {r0,lr}                                 // Save LR (and r0 to maintain stack alignment)
100020cc:	b501      	push	{r0, lr}
    BL      _tx_thread_stack_error_handler          // Call ThreadX/user handler
100020ce:	f7ff fced 	bl	10001aac <_tx_thread_stack_error_handler>
    POP     {r0,lr}                                 // Restore LR and dummy reg
100020d2:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    PUSH    {r0, lr}                                // Save LR (and r0 just for alignment)
    BL      _tx_execution_thread_exit               // Call the thread exit function
    POP     {r0, lr}                                // Recover LR
#endif

    MOV     r1, #0                                  // Build NULL value
100020d6:	f04f 0100 	mov.w	r1, #0
    LDR     r0, =_tx_thread_current_ptr             // Pickup address of current thread pointer
100020da:	480f      	ldr	r0, [pc, #60]	; (10002118 <__tx_DBGHandler+0x24>)
    STR     r1, [r0]                                // Clear current thread pointer
100020dc:	6001      	str	r1, [r0, #0]

    // Return from UsageFault_Handler exception
    LDR     r0, =0xE000ED04                         // Load ICSR
100020de:	480f      	ldr	r0, [pc, #60]	; (1000211c <__tx_DBGHandler+0x28>)
    LDR     r1, =0x10000000                         // Set PENDSVSET bit
100020e0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
    STR     r1, [r0]                                // Store ICSR
100020e4:	6001      	str	r1, [r0, #0]
    DSB                                             // Wait for memory access to complete
100020e6:	f3bf 8f4f 	dsb	sy
    CPSIE   i                                       // Enable interrupts
100020ea:	b662      	cpsie	i
    BX      lr                                      // Return from exception
100020ec:	4770      	bx	lr
100020ee:	bf00      	nop

100020f0 <__tx_NMIHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_NMIHandler
    .thumb_func
.type __tx_NMIHandler, function
__tx_NMIHandler:
    B       __tx_NMIHandler
100020f0:	f7ff bffe 	b.w	100020f0 <__tx_NMIHandler>

100020f4 <__tx_DBGHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_DBGHandler
    .thumb_func
.type __tx_DBGHandler, function
__tx_DBGHandler:
    B       __tx_DBGHandler
100020f4:	f7ff bffe 	b.w	100020f4 <__tx_DBGHandler>
    LDR     r0, =_tx_initialize_unused_memory       // Build address of unused memory pointer
100020f8:	38000090 	stmdacc	r0, {r4, r7}
    LDR     r1, =__RAM_segment_used_end__           // Build first free address
100020fc:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002100:	10000000 	andne	r0, r0, r0
    LDR     r0, =0xE0001000                         // Build address of DWT register
10002104:	e0001000 	and	r1, r0, r0
    LDR     r0, =_tx_thread_system_stack_ptr        // Build address of system stack pointer
10002108:	38000164 	stmdacc	r0, {r2, r5, r6, r8}
    LDR     r1, =0x40FF0000                         // SysT, PnSV, Rsrv, DbgM
1000210c:	40ff0000 	rscsmi	r0, pc, r0
    LDR     r0, =0xE000ED28                         // CFSR address
10002110:	e000ed28 	and	lr, r0, r8, lsr #26
    LDR     r0, =0xE000EF34                         // Cleanup FPU context: Load FPCCR address
10002114:	e000ef34 	and	lr, r0, r4, lsr pc
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10002118:	38000098 	stmdacc	r0, {r3, r4, r7}
    LDR     r0, =0xE000ED04                         // Load ICSR
1000211c:	e000ed04 	and	lr, r0, r4, lsl #26

10002120 <_tx_thread_schedule>:
    /* This function should only ever be called on Cortex-M
       from the first schedule request. Subsequent scheduling occurs
       from the PendSV handling routine below. */

    /* Clear the preempt-disable flag to enable rescheduling after initialization on Cortex-M targets.  */
    MOV     r0, #0                                  // Build value for TX_FALSE
10002120:	f04f 0000 	mov.w	r0, #0
    LDR     r2, =_tx_thread_preempt_disable         // Build address of preempt disable flag
10002124:	4a2e      	ldr	r2, [pc, #184]	; (100021e0 <_tx_vfp_access+0x8>)
    STR     r0, [r2, #0]                            // Clear preempt disable flag
10002126:	6010      	str	r0, [r2, #0]

#ifdef __ARM_FP
    /* Clear CONTROL.FPCA bit so VFP registers aren't unnecessarily stacked.  */
    MRS     r0, CONTROL                             // Pickup current CONTROL register
10002128:	f3ef 8014 	mrs	r0, CONTROL
    BIC     r0, r0, #4                              // Clear the FPCA bit
1000212c:	f020 0004 	bic.w	r0, r0, #4
    MSR     CONTROL, r0                             // Setup new CONTROL register
10002130:	f380 8814 	msr	CONTROL, r0
#endif

    /* Enable interrupts */
    CPSIE   i
10002134:	b662      	cpsie	i

    /* Enter the scheduler for the first time.  */
    MOV     r0, #0x10000000                         // Load PENDSVSET bit
10002136:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
    MOV     r1, #0xE000E000                         // Load NVIC base
1000213a:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
    STR     r0, [r1, #0xD04]                        // Set PENDSVBIT in ICSR
1000213e:	f8c1 0d04 	str.w	r0, [r1, #3332]	; 0xd04
    DSB                                             // Complete all memory accesses
10002142:	f3bf 8f4f 	dsb	sy
    ISB                                             // Flush pipeline
10002146:	f3bf 8f6f 	isb	sy

1000214a <__tx_wait_here>:

    /* Wait here for the PendSV to take place.  */

__tx_wait_here:
    B       __tx_wait_here                          // Wait for the PendSV to happen
1000214a:	e7fe      	b.n	1000214a <__tx_wait_here>

1000214c <PendSV_Handler>:
#else
    CPSIE   i                                       // Enable interrupts
#endif  /* TX_PORT_USE_BASEPRI */
#endif  /* EXECUTION PROFILE */

    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
1000214c:	4825      	ldr	r0, [pc, #148]	; (100021e4 <_tx_vfp_access+0xc>)
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
1000214e:	4a26      	ldr	r2, [pc, #152]	; (100021e8 <_tx_vfp_access+0x10>)
    MOV     r3, #0                                  // Build NULL value
10002150:	f04f 0300 	mov.w	r3, #0
    LDR     r1, [r0]                                // Pickup current thread pointer
10002154:	6801      	ldr	r1, [r0, #0]

    /* Determine if there is a current thread to finish preserving.  */

    CBZ     r1, __tx_ts_new                         // If NULL, skip preservation
10002156:	b191      	cbz	r1, 1000217e <__tx_ts_new>

    /* Recover PSP and preserve current thread context.  */

    STR     r3, [r0]                                // Set _tx_thread_current_ptr to NULL
10002158:	6003      	str	r3, [r0, #0]
    MRS     r12, PSP                                // Pickup PSP pointer (thread's stack pointer)
1000215a:	f3ef 8c09 	mrs	ip, PSP
    STMDB   r12!, {r4-r11}                          // Save its remaining registers
1000215e:	e92c 0ff0 	stmdb	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
#ifdef __ARM_FP
    TST     LR, #0x10                               // Determine if the VFP extended frame is present
10002162:	f01e 0f10 	tst.w	lr, #16
    BNE     _skip_vfp_save
10002166:	d101      	bne.n	1000216c <_skip_vfp_save>
    VSTMDB  r12!,{s16-s31}                          // Yes, save additional VFP registers
10002168:	ed2c 8a10 	vstmdb	ip!, {s16-s31}

1000216c <_skip_vfp_save>:
_skip_vfp_save:
#endif
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
1000216c:	4c1f      	ldr	r4, [pc, #124]	; (100021ec <_tx_vfp_access+0x14>)
    STMDB   r12!, {LR}                              // Save LR on the stack
1000216e:	f84c ed04 	str.w	lr, [ip, #-4]!
    STR     r12, [r1, #8]                           // Save the thread stack pointer
10002172:	f8c1 c008 	str.w	ip, [r1, #8]
_skip_secure_save:
#endif

    /* Determine if time-slice is active. If it isn't, skip time handling processing.  */

    LDR     r5, [r4]                                // Pickup current time-slice
10002176:	6825      	ldr	r5, [r4, #0]
    CBZ     r5, __tx_ts_new                         // If not active, skip processing
10002178:	b10d      	cbz	r5, 1000217e <__tx_ts_new>

    /* Time-slice is active, save the current thread's time-slice and clear the global time-slice variable.  */

    STR     r5, [r1, #24]                           // Save current time-slice
1000217a:	618d      	str	r5, [r1, #24]

    /* Clear the global time-slice.  */

    STR     r3, [r4]                                // Clear time-slice
1000217c:	6023      	str	r3, [r4, #0]

1000217e <__tx_ts_new>:

#ifdef TX_PORT_USE_BASEPRI
    LDR     r1, =TX_PORT_BASEPRI                    // Mask interrupt priorities =< TX_PORT_BASEPRI
    MSR     BASEPRI, r1
#else
    CPSID   i                                       // Disable interrupts
1000217e:	b672      	cpsid	i
#endif
    LDR     r1, [r2]                                // Is there another thread ready to execute?
10002180:	6811      	ldr	r1, [r2, #0]
    CBZ     r1, __tx_ts_wait                        // No, skip to the wait processing
10002182:	b1d1      	cbz	r1, 100021ba <__tx_ts_wait>

    /* Yes, another thread is ready for else, make the current thread the new thread.  */

    STR     r1, [r0]                                // Setup the current thread pointer to the new thread
10002184:	6001      	str	r1, [r0, #0]
#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
10002186:	b662      	cpsie	i

10002188 <__tx_ts_restore>:
#endif

    /* Increment the thread run count.  */

__tx_ts_restore:
    LDR     r7, [r1, #4]                            // Pickup the current thread run count
10002188:	684f      	ldr	r7, [r1, #4]
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
1000218a:	4c18      	ldr	r4, [pc, #96]	; (100021ec <_tx_vfp_access+0x14>)
    LDR     r5, [r1, #24]                           // Pickup thread's current time-slice
1000218c:	698d      	ldr	r5, [r1, #24]
    ADD     r7, r7, #1                              // Increment the thread run count
1000218e:	f107 0701 	add.w	r7, r7, #1
    STR     r7, [r1, #4]                            // Store the new run count
10002192:	604f      	str	r7, [r1, #4]

    /* Setup global time-slice with thread's current time-slice.  */

    STR     r5, [r4]                                // Setup global time-slice
10002194:	6025      	str	r5, [r4, #0]
    POP     {r0,r1}                                 // Restore r1 (and dummy r0)
_skip_secure_restore:
#endif

    /* Restore the thread context and PSP.  */
    LDR     r12, [r1, #12]                          // Get stack start
10002196:	f8d1 c00c 	ldr.w	ip, [r1, #12]
    MSR     PSPLIM, r12                             // Set stack limit
1000219a:	f38c 880b 	msr	PSPLIM, ip
    LDR     r12, [r1, #8]                           // Pickup thread's stack pointer
1000219e:	f8d1 c008 	ldr.w	ip, [r1, #8]
    LDMIA   r12!, {LR}                              // Pickup LR
100021a2:	f85c eb04 	ldr.w	lr, [ip], #4
#ifdef __ARM_FP
    TST     LR, #0x10                               // Determine if the VFP extended frame is present
100021a6:	f01e 0f10 	tst.w	lr, #16
    BNE     _skip_vfp_restore                       // If not, skip VFP restore
100021aa:	d101      	bne.n	100021b0 <_skip_vfp_restore>
    VLDMIA  r12!, {s16-s31}                         // Yes, restore additional VFP registers
100021ac:	ecbc 8a10 	vldmia	ip!, {s16-s31}

100021b0 <_skip_vfp_restore>:
_skip_vfp_restore:
#endif
    LDMIA   r12!, {r4-r11}                          // Recover thread's registers
100021b0:	e8bc 0ff0 	ldmia.w	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
    MSR     PSP, r12                                // Setup the thread's stack pointer
100021b4:	f38c 8809 	msr	PSP, ip

    BX      lr                                      // Return to thread!
100021b8:	4770      	bx	lr

100021ba <__tx_ts_wait>:
__tx_ts_wait:
#ifdef TX_PORT_USE_BASEPRI
    LDR     r1, =TX_PORT_BASEPRI                    // Mask interrupt priorities =< TX_PORT_BASEPRI
    MSR     BASEPRI, r1
#else
    CPSID   i                                       // Disable interrupts
100021ba:	b672      	cpsid	i
#endif
    LDR     r1, [r2]                                // Pickup the next thread to execute pointer
100021bc:	6811      	ldr	r1, [r2, #0]
    STR     r1, [r0]                                // Store it in the current pointer
100021be:	6001      	str	r1, [r0, #0]
    CBNZ    r1, __tx_ts_ready                       // If non-NULL, a new thread is ready!
100021c0:	b909      	cbnz	r1, 100021c6 <__tx_ts_ready>

#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
100021c2:	b662      	cpsie	i
#endif
    B       __tx_ts_wait                            // Loop to continue waiting
100021c4:	e7f9      	b.n	100021ba <__tx_ts_wait>

100021c6 <__tx_ts_ready>:

    /* At this point, we have a new thread ready to go. Clear any newly pended PendSV - since we are
       already in the handler!  */
__tx_ts_ready:
    MOV     r7, #0x08000000                         // Build clear PendSV value
100021c6:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    MOV     r8, #0xE000E000                         // Build base NVIC address
100021ca:	f04f 28e0 	mov.w	r8, #3758153728	; 0xe000e000
    STR     r7, [r8, #0xD04]                        // Clear any PendSV
100021ce:	f8c8 7d04 	str.w	r7, [r8, #3332]	; 0xd04
    /* Re-enable interrupts and restore new thread.  */
#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
100021d2:	b662      	cpsie	i
#endif
    B       __tx_ts_restore                         // Restore the thread
100021d4:	e7d8      	b.n	10002188 <__tx_ts_restore>
100021d6:	bf00      	nop

100021d8 <_tx_vfp_access>:
    .global  _tx_vfp_access
    .thumb_func
.type _tx_vfp_access, function
_tx_vfp_access:
#if TX_ENABLE_FPU_SUPPORT
    VMOV.F32 s0, s0                                 // Simply access the VFP
100021d8:	eeb0 0a40 	vmov.f32	s0, s0
#endif
    BX       lr                                     // Return to caller
100021dc:	4770      	bx	lr
100021de:	00dc0000 	sbcseq	r0, ip, r0
    LDR     r2, =_tx_thread_preempt_disable         // Build address of preempt disable flag
100021e2:	00983800 	addseq	r3, r8, r0, lsl #16
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
100021e6:	009c3800 	addseq	r3, ip, r0, lsl #16
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
100021ea:	02583800 	subseq	r3, r8, #0, 16
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
100021ee:	 	stmdbmi	r2!, {fp, ip, sp}

100021f0 <_tx_timer_interrupt>:
       for use.  */

    /* Increment the system clock.  */
    // _tx_timer_system_clock++;

    LDR     r1, =_tx_timer_system_clock             // Pickup address of system clock
100021f0:	4922      	ldr	r1, [pc, #136]	; (1000227c <__tx_timer_nothing_expired+0x8>)
    LDR     r0, [r1, #0]                            // Pickup system clock
100021f2:	6808      	ldr	r0, [r1, #0]
    ADD     r0, r0, #1                              // Increment system clock
100021f4:	f100 0001 	add.w	r0, r0, #1
    STR     r0, [r1, #0]                            // Store new system clock
100021f8:	6008      	str	r0, [r1, #0]

    /* Test for time-slice expiration.  */
    // if (_tx_timer_time_slice)
    // {

    LDR     r3, =_tx_timer_time_slice               // Pickup address of time-slice
100021fa:	4b21      	ldr	r3, [pc, #132]	; (10002280 <__tx_timer_nothing_expired+0xc>)
    LDR     r2, [r3, #0]                            // Pickup time-slice
100021fc:	681a      	ldr	r2, [r3, #0]
    CBZ     r2, __tx_timer_no_time_slice            // Is it non-active?
100021fe:	b13a      	cbz	r2, 10002210 <__tx_timer_no_time_slice>
                                                    // Yes, skip time-slice processing

       /* Decrement the time_slice.  */
       // _tx_timer_time_slice--;

    SUB     r2, r2, #1                              // Decrement the time-slice
10002200:	f1a2 0201 	sub.w	r2, r2, #1
    STR     r2, [r3, #0]                            // Store new time-slice value
10002204:	601a      	str	r2, [r3, #0]

       /* Check for expiration.  */
       // if (__tx_timer_time_slice == 0)

    CBNZ    r2, __tx_timer_no_time_slice            // Has it expired?
10002206:	b91a      	cbnz	r2, 10002210 <__tx_timer_no_time_slice>
                                                    // No, skip expiration processing

       /* Set the time-slice expired flag.  */
       // _tx_timer_expired_time_slice =  TX_TRUE;

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup address of expired flag
10002208:	4b1e      	ldr	r3, [pc, #120]	; (10002284 <__tx_timer_nothing_expired+0x10>)
    MOV     r0, #1                                  // Build expired value
1000220a:	f04f 0001 	mov.w	r0, #1
    STR     r0, [r3, #0]                            // Set time-slice expiration flag
1000220e:	6018      	str	r0, [r3, #0]

10002210 <__tx_timer_no_time_slice>:

    /* Test for timer expiration.  */
    // if (*_tx_timer_current_ptr)
    // {

    LDR     r1, =_tx_timer_current_ptr              // Pickup current timer pointer address
10002210:	491d      	ldr	r1, [pc, #116]	; (10002288 <__tx_timer_nothing_expired+0x14>)
    LDR     r0, [r1, #0]                            // Pickup current timer
10002212:	6808      	ldr	r0, [r1, #0]
    LDR     r2, [r0, #0]                            // Pickup timer list entry
10002214:	6802      	ldr	r2, [r0, #0]
    CBZ     r2, __tx_timer_no_timer                 // Is there anything in the list?
10002216:	b122      	cbz	r2, 10002222 <__tx_timer_no_timer>
                                                    // No, just increment the timer

        /* Set expiration flag.  */
        // _tx_timer_expired =  TX_TRUE;

    LDR     r3, =_tx_timer_expired                  // Pickup expiration flag address
10002218:	4b1c      	ldr	r3, [pc, #112]	; (1000228c <__tx_timer_nothing_expired+0x18>)
    MOV     r2, #1                                  // Build expired value
1000221a:	f04f 0201 	mov.w	r2, #1
    STR     r2, [r3, #0]                            // Set expired flag
1000221e:	601a      	str	r2, [r3, #0]
    B       __tx_timer_done                         // Finished timer processing
10002220:	e008      	b.n	10002234 <__tx_timer_done>

10002222 <__tx_timer_no_timer>:
__tx_timer_no_timer:

        /* No timer expired, increment the timer pointer.  */
        // _tx_timer_current_ptr++;

    ADD     r0, r0, #4                              // Move to next timer
10002222:	f100 0004 	add.w	r0, r0, #4

        /* Check for wrap-around.  */
        // if (_tx_timer_current_ptr == _tx_timer_list_end)

    LDR     r3, =_tx_timer_list_end                 // Pickup addr of timer list end
10002226:	4b1a      	ldr	r3, [pc, #104]	; (10002290 <__tx_timer_nothing_expired+0x1c>)
    LDR     r2, [r3, #0]                            // Pickup list end
10002228:	681a      	ldr	r2, [r3, #0]
    CMP     r0, r2                                  // Are we at list end?
1000222a:	4290      	cmp	r0, r2
    BNE     __tx_timer_skip_wrap                    // No, skip wrap-around logic
1000222c:	d101      	bne.n	10002232 <__tx_timer_skip_wrap>

            /* Wrap to beginning of list.  */
            // _tx_timer_current_ptr =  _tx_timer_list_start;

    LDR     r3, =_tx_timer_list_start               // Pickup addr of timer list start
1000222e:	4b19      	ldr	r3, [pc, #100]	; (10002294 <__tx_timer_nothing_expired+0x20>)
    LDR     r0, [r3, #0]                            // Set current pointer to list start
10002230:	6818      	ldr	r0, [r3, #0]

10002232 <__tx_timer_skip_wrap>:

__tx_timer_skip_wrap:

    STR     r0, [r1, #0]                            // Store new current timer pointer
10002232:	6008      	str	r0, [r1, #0]

10002234 <__tx_timer_done>:

    /* See if anything has expired.  */
    // if ((_tx_timer_expired_time_slice) || (_tx_timer_expired))
    // {

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup addr of expired flag
10002234:	4b13      	ldr	r3, [pc, #76]	; (10002284 <__tx_timer_nothing_expired+0x10>)
    LDR     r2, [r3, #0]                            // Pickup time-slice expired flag
10002236:	681a      	ldr	r2, [r3, #0]
    CBNZ    r2, __tx_something_expired              // Did a time-slice expire?
10002238:	b912      	cbnz	r2, 10002240 <__tx_something_expired>
                                                    // If non-zero, time-slice expired
    LDR     r1, =_tx_timer_expired                  // Pickup addr of other expired flag
1000223a:	4914      	ldr	r1, [pc, #80]	; (1000228c <__tx_timer_nothing_expired+0x18>)
    LDR     r0, [r1, #0]                            // Pickup timer expired flag
1000223c:	6808      	ldr	r0, [r1, #0]
    CBZ     r0, __tx_timer_nothing_expired          // Did a timer expire?
1000223e:	b1c8      	cbz	r0, 10002274 <__tx_timer_nothing_expired>

10002240 <__tx_something_expired>:
                                                    // No, nothing expired

__tx_something_expired:

    PUSH    {r0, lr}                                // Save the lr register on the stack
10002240:	b501      	push	{r0, lr}

    /* Did a timer expire?  */
    // if (_tx_timer_expired)
    // {

    LDR     r1, =_tx_timer_expired                  // Pickup addr of expired flag
10002242:	4912      	ldr	r1, [pc, #72]	; (1000228c <__tx_timer_nothing_expired+0x18>)
    LDR     r0, [r1, #0]                            // Pickup timer expired flag
10002244:	6808      	ldr	r0, [r1, #0]
    CBZ     r0, __tx_timer_dont_activate            // Check for timer expiration
10002246:	b108      	cbz	r0, 1000224c <__tx_timer_dont_activate>
                                                    // If not set, skip timer activation

        /* Process timer expiration.  */
        // _tx_timer_expiration_process();

    BL      _tx_timer_expiration_process            // Call the timer expiration handling routine
10002248:	f7ff fe90 	bl	10001f6c <_tx_timer_expiration_process>

1000224c <__tx_timer_dont_activate>:

    /* Did time slice expire?  */
    // if (_tx_timer_expired_time_slice)
    // {

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup addr of time-slice expired
1000224c:	4b0d      	ldr	r3, [pc, #52]	; (10002284 <__tx_timer_nothing_expired+0x10>)
    LDR     r2, [r3, #0]                            // Pickup the actual flag
1000224e:	681a      	ldr	r2, [r3, #0]
    CBZ     r2, __tx_timer_not_ts_expiration        // See if the flag is set
10002250:	b172      	cbz	r2, 10002270 <__tx_timer_not_ts_expiration>
                                                    // No, skip time-slice processing

        /* Time slice interrupted thread.  */
        // _tx_thread_time_slice();

    BL      _tx_thread_time_slice                   // Call time-slice processing
10002252:	f7ff fdcd 	bl	10001df0 <_tx_thread_time_slice>
    LDR     r0, =_tx_thread_preempt_disable         // Build address of preempt disable flag
10002256:	4810      	ldr	r0, [pc, #64]	; (10002298 <__tx_timer_nothing_expired+0x24>)
    LDR     r1, [r0]                                // Is the preempt disable flag set?
10002258:	6801      	ldr	r1, [r0, #0]
    CBNZ    r1, __tx_timer_skip_time_slice          // Yes, skip the PendSV logic
1000225a:	b949      	cbnz	r1, 10002270 <__tx_timer_not_ts_expiration>
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
1000225c:	480f      	ldr	r0, [pc, #60]	; (1000229c <__tx_timer_nothing_expired+0x28>)
    LDR     r1, [r0]                                // Pickup the current thread pointer
1000225e:	6801      	ldr	r1, [r0, #0]
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
10002260:	4a0f      	ldr	r2, [pc, #60]	; (100022a0 <__tx_timer_nothing_expired+0x2c>)
    LDR     r3, [r2]                                // Pickup the execute thread pointer
10002262:	6813      	ldr	r3, [r2, #0]
    LDR     r0, =0xE000ED04                         // Build address of control register
10002264:	480f      	ldr	r0, [pc, #60]	; (100022a4 <__tx_timer_nothing_expired+0x30>)
    LDR     r2, =0x10000000                         // Build value for PendSV bit
10002266:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    CMP     r1, r3                                  // Are they the same?
1000226a:	4299      	cmp	r1, r3
    BEQ     __tx_timer_skip_time_slice              // If the same, there was no time-slice performed
1000226c:	d000      	beq.n	10002270 <__tx_timer_not_ts_expiration>
    STR     r2, [r0]                                // Not the same, issue the PendSV for preemption
1000226e:	6002      	str	r2, [r0, #0]

10002270 <__tx_timer_not_ts_expiration>:
__tx_timer_skip_time_slice:
    // }

__tx_timer_not_ts_expiration:

    POP     {r0, lr}                                // Recover lr register (r0 is just there for
10002270:	e8bd 4001 	ldmia.w	sp!, {r0, lr}

10002274 <__tx_timer_nothing_expired>:

    // }

__tx_timer_nothing_expired:

    DSB                                             // Complete all memory access
10002274:	f3bf 8f4f 	dsb	sy
    BX      lr                                      // Return to caller
10002278:	4770      	bx	lr
1000227a:	017c0000 	cmneq	ip, r0
    LDR     r1, =_tx_timer_system_clock             // Pickup address of system clock
1000227e:	02583800 	subseq	r3, r8, #0, 16
    LDR     r3, =_tx_timer_time_slice               // Pickup address of time-slice
10002282:	01703800 	cmneq	r0, r0, lsl #16
    LDR     r3, =_tx_timer_expired_time_slice       // Pickup address of expired flag
10002286:	01683800 	cmneq	r8, r0, lsl #16
    LDR     r1, =_tx_timer_current_ptr              // Pickup current timer pointer address
1000228a:	016c3800 	cmneq	ip, r0, lsl #16
    LDR     r3, =_tx_timer_expired                  // Pickup expiration flag address
1000228e:	01743800 	cmneq	r4, r0, lsl #16
    LDR     r3, =_tx_timer_list_end                 // Pickup addr of timer list end
10002292:	01783800 	cmneq	r8, r0, lsl #16
    LDR     r3, =_tx_timer_list_start               // Pickup addr of timer list start
10002296:	00dc3800 	sbcseq	r3, ip, r0, lsl #16
    LDR     r0, =_tx_thread_preempt_disable         // Build address of preempt disable flag
1000229a:	00983800 	addseq	r3, r8, r0, lsl #16
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
1000229e:	009c3800 	addseq	r3, ip, r0, lsl #16
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
100022a2:	ed043800 	stc	8, cr3, [r4, #-0]
    LDR     r0, =0xE000ED04                         // Build address of control register
100022a6:	 	blmi	1007a2ae <__copy_table_end__+0x761a6>

100022a8 <__errno>:
100022a8:	4b01      	ldr	r3, [pc, #4]	; (100022b0 <__errno+0x8>)
100022aa:	6818      	ldr	r0, [r3, #0]
100022ac:	4770      	bx	lr
100022ae:	bf00      	nop
100022b0:	38000008 	stmdacc	r0, {r3}

100022b4 <abort>:
100022b4:	2006      	movs	r0, #6
100022b6:	b508      	push	{r3, lr}
100022b8:	f000 f838 	bl	1000232c <raise>
100022bc:	2001      	movs	r0, #1
100022be:	f7ff fe82 	bl	10001fc6 <_exit>

100022c2 <memcpy>:
100022c2:	440a      	add	r2, r1
100022c4:	1e43      	subs	r3, r0, #1
100022c6:	4291      	cmp	r1, r2
100022c8:	d100      	bne.n	100022cc <memcpy+0xa>
100022ca:	4770      	bx	lr
100022cc:	b510      	push	{r4, lr}
100022ce:	f811 4b01 	ldrb.w	r4, [r1], #1
100022d2:	4291      	cmp	r1, r2
100022d4:	f803 4f01 	strb.w	r4, [r3, #1]!
100022d8:	d1f9      	bne.n	100022ce <memcpy+0xc>
100022da:	bd10      	pop	{r4, pc}

100022dc <_raise_r>:
100022dc:	291f      	cmp	r1, #31
100022de:	b538      	push	{r3, r4, r5, lr}
100022e0:	4604      	mov	r4, r0
100022e2:	460d      	mov	r5, r1
100022e4:	d904      	bls.n	100022f0 <_raise_r+0x14>
100022e6:	2316      	movs	r3, #22
100022e8:	6003      	str	r3, [r0, #0]
100022ea:	f04f 30ff 	mov.w	r0, #4294967295
100022ee:	bd38      	pop	{r3, r4, r5, pc}
100022f0:	6c42      	ldr	r2, [r0, #68]	; 0x44
100022f2:	b112      	cbz	r2, 100022fa <_raise_r+0x1e>
100022f4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
100022f8:	b94b      	cbnz	r3, 1000230e <_raise_r+0x32>
100022fa:	4620      	mov	r0, r4
100022fc:	f000 f830 	bl	10002360 <_getpid_r>
10002300:	462a      	mov	r2, r5
10002302:	4601      	mov	r1, r0
10002304:	4620      	mov	r0, r4
10002306:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1000230a:	f000 b817 	b.w	1000233c <_kill_r>
1000230e:	2b01      	cmp	r3, #1
10002310:	d00a      	beq.n	10002328 <_raise_r+0x4c>
10002312:	1c59      	adds	r1, r3, #1
10002314:	d103      	bne.n	1000231e <_raise_r+0x42>
10002316:	2316      	movs	r3, #22
10002318:	6003      	str	r3, [r0, #0]
1000231a:	2001      	movs	r0, #1
1000231c:	e7e7      	b.n	100022ee <_raise_r+0x12>
1000231e:	2400      	movs	r4, #0
10002320:	4628      	mov	r0, r5
10002322:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
10002326:	4798      	blx	r3
10002328:	2000      	movs	r0, #0
1000232a:	e7e0      	b.n	100022ee <_raise_r+0x12>

1000232c <raise>:
1000232c:	4b02      	ldr	r3, [pc, #8]	; (10002338 <raise+0xc>)
1000232e:	4601      	mov	r1, r0
10002330:	6818      	ldr	r0, [r3, #0]
10002332:	f7ff bfd3 	b.w	100022dc <_raise_r>
10002336:	bf00      	nop
10002338:	38000008 	stmdacc	r0, {r3}

1000233c <_kill_r>:
1000233c:	b538      	push	{r3, r4, r5, lr}
1000233e:	2300      	movs	r3, #0
10002340:	4d06      	ldr	r5, [pc, #24]	; (1000235c <_kill_r+0x20>)
10002342:	4604      	mov	r4, r0
10002344:	4608      	mov	r0, r1
10002346:	4611      	mov	r1, r2
10002348:	602b      	str	r3, [r5, #0]
1000234a:	f7ff fe34 	bl	10001fb6 <_kill>
1000234e:	1c43      	adds	r3, r0, #1
10002350:	d102      	bne.n	10002358 <_kill_r+0x1c>
10002352:	682b      	ldr	r3, [r5, #0]
10002354:	b103      	cbz	r3, 10002358 <_kill_r+0x1c>
10002356:	6023      	str	r3, [r4, #0]
10002358:	bd38      	pop	{r3, r4, r5, pc}
1000235a:	bf00      	nop
1000235c:	3800025c 	stmdacc	r0, {r2, r3, r4, r6, r9}

10002360 <_getpid_r>:
10002360:	f7ff be27 	b.w	10001fb2 <_getpid>

10002364 <__aeabi_drsub>:
10002364:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10002368:	e002      	b.n	10002370 <__adddf3>
1000236a:	bf00      	nop

1000236c <__aeabi_dsub>:
1000236c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10002370 <__adddf3>:
10002370:	b530      	push	{r4, r5, lr}
10002372:	ea4f 0441 	mov.w	r4, r1, lsl #1
10002376:	ea4f 0543 	mov.w	r5, r3, lsl #1
1000237a:	ea94 0f05 	teq	r4, r5
1000237e:	bf08      	it	eq
10002380:	ea90 0f02 	teqeq	r0, r2
10002384:	bf1f      	itttt	ne
10002386:	ea54 0c00 	orrsne.w	ip, r4, r0
1000238a:	ea55 0c02 	orrsne.w	ip, r5, r2
1000238e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10002392:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10002396:	f000 80e2 	beq.w	1000255e <__adddf3+0x1ee>
1000239a:	ea4f 5454 	mov.w	r4, r4, lsr #21
1000239e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
100023a2:	bfb8      	it	lt
100023a4:	426d      	neglt	r5, r5
100023a6:	dd0c      	ble.n	100023c2 <__adddf3+0x52>
100023a8:	442c      	add	r4, r5
100023aa:	ea80 0202 	eor.w	r2, r0, r2
100023ae:	ea81 0303 	eor.w	r3, r1, r3
100023b2:	ea82 0000 	eor.w	r0, r2, r0
100023b6:	ea83 0101 	eor.w	r1, r3, r1
100023ba:	ea80 0202 	eor.w	r2, r0, r2
100023be:	ea81 0303 	eor.w	r3, r1, r3
100023c2:	2d36      	cmp	r5, #54	; 0x36
100023c4:	bf88      	it	hi
100023c6:	bd30      	pophi	{r4, r5, pc}
100023c8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
100023cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
100023d0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
100023d4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
100023d8:	d002      	beq.n	100023e0 <__adddf3+0x70>
100023da:	4240      	negs	r0, r0
100023dc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100023e0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
100023e4:	ea4f 3303 	mov.w	r3, r3, lsl #12
100023e8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
100023ec:	d002      	beq.n	100023f4 <__adddf3+0x84>
100023ee:	4252      	negs	r2, r2
100023f0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
100023f4:	ea94 0f05 	teq	r4, r5
100023f8:	f000 80a7 	beq.w	1000254a <__adddf3+0x1da>
100023fc:	f1a4 0401 	sub.w	r4, r4, #1
10002400:	f1d5 0e20 	rsbs	lr, r5, #32
10002404:	db0d      	blt.n	10002422 <__adddf3+0xb2>
10002406:	fa02 fc0e 	lsl.w	ip, r2, lr
1000240a:	fa22 f205 	lsr.w	r2, r2, r5
1000240e:	1880      	adds	r0, r0, r2
10002410:	f141 0100 	adc.w	r1, r1, #0
10002414:	fa03 f20e 	lsl.w	r2, r3, lr
10002418:	1880      	adds	r0, r0, r2
1000241a:	fa43 f305 	asr.w	r3, r3, r5
1000241e:	4159      	adcs	r1, r3
10002420:	e00e      	b.n	10002440 <__adddf3+0xd0>
10002422:	f1a5 0520 	sub.w	r5, r5, #32
10002426:	f10e 0e20 	add.w	lr, lr, #32
1000242a:	2a01      	cmp	r2, #1
1000242c:	fa03 fc0e 	lsl.w	ip, r3, lr
10002430:	bf28      	it	cs
10002432:	f04c 0c02 	orrcs.w	ip, ip, #2
10002436:	fa43 f305 	asr.w	r3, r3, r5
1000243a:	18c0      	adds	r0, r0, r3
1000243c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10002440:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10002444:	d507      	bpl.n	10002456 <__adddf3+0xe6>
10002446:	f04f 0e00 	mov.w	lr, #0
1000244a:	f1dc 0c00 	rsbs	ip, ip, #0
1000244e:	eb7e 0000 	sbcs.w	r0, lr, r0
10002452:	eb6e 0101 	sbc.w	r1, lr, r1
10002456:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1000245a:	d31b      	bcc.n	10002494 <__adddf3+0x124>
1000245c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10002460:	d30c      	bcc.n	1000247c <__adddf3+0x10c>
10002462:	0849      	lsrs	r1, r1, #1
10002464:	ea5f 0030 	movs.w	r0, r0, rrx
10002468:	ea4f 0c3c 	mov.w	ip, ip, rrx
1000246c:	f104 0401 	add.w	r4, r4, #1
10002470:	ea4f 5244 	mov.w	r2, r4, lsl #21
10002474:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10002478:	f080 809a 	bcs.w	100025b0 <__adddf3+0x240>
1000247c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10002480:	bf08      	it	eq
10002482:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10002486:	f150 0000 	adcs.w	r0, r0, #0
1000248a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1000248e:	ea41 0105 	orr.w	r1, r1, r5
10002492:	bd30      	pop	{r4, r5, pc}
10002494:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10002498:	4140      	adcs	r0, r0
1000249a:	eb41 0101 	adc.w	r1, r1, r1
1000249e:	3c01      	subs	r4, #1
100024a0:	bf28      	it	cs
100024a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
100024a6:	d2e9      	bcs.n	1000247c <__adddf3+0x10c>
100024a8:	f091 0f00 	teq	r1, #0
100024ac:	bf04      	itt	eq
100024ae:	4601      	moveq	r1, r0
100024b0:	2000      	moveq	r0, #0
100024b2:	fab1 f381 	clz	r3, r1
100024b6:	bf08      	it	eq
100024b8:	3320      	addeq	r3, #32
100024ba:	f1a3 030b 	sub.w	r3, r3, #11
100024be:	f1b3 0220 	subs.w	r2, r3, #32
100024c2:	da0c      	bge.n	100024de <__adddf3+0x16e>
100024c4:	320c      	adds	r2, #12
100024c6:	dd08      	ble.n	100024da <__adddf3+0x16a>
100024c8:	f102 0c14 	add.w	ip, r2, #20
100024cc:	f1c2 020c 	rsb	r2, r2, #12
100024d0:	fa01 f00c 	lsl.w	r0, r1, ip
100024d4:	fa21 f102 	lsr.w	r1, r1, r2
100024d8:	e00c      	b.n	100024f4 <__adddf3+0x184>
100024da:	f102 0214 	add.w	r2, r2, #20
100024de:	bfd8      	it	le
100024e0:	f1c2 0c20 	rsble	ip, r2, #32
100024e4:	fa01 f102 	lsl.w	r1, r1, r2
100024e8:	fa20 fc0c 	lsr.w	ip, r0, ip
100024ec:	bfdc      	itt	le
100024ee:	ea41 010c 	orrle.w	r1, r1, ip
100024f2:	4090      	lslle	r0, r2
100024f4:	1ae4      	subs	r4, r4, r3
100024f6:	bfa2      	ittt	ge
100024f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100024fc:	4329      	orrge	r1, r5
100024fe:	bd30      	popge	{r4, r5, pc}
10002500:	ea6f 0404 	mvn.w	r4, r4
10002504:	3c1f      	subs	r4, #31
10002506:	da1c      	bge.n	10002542 <__adddf3+0x1d2>
10002508:	340c      	adds	r4, #12
1000250a:	dc0e      	bgt.n	1000252a <__adddf3+0x1ba>
1000250c:	f104 0414 	add.w	r4, r4, #20
10002510:	f1c4 0220 	rsb	r2, r4, #32
10002514:	fa20 f004 	lsr.w	r0, r0, r4
10002518:	fa01 f302 	lsl.w	r3, r1, r2
1000251c:	ea40 0003 	orr.w	r0, r0, r3
10002520:	fa21 f304 	lsr.w	r3, r1, r4
10002524:	ea45 0103 	orr.w	r1, r5, r3
10002528:	bd30      	pop	{r4, r5, pc}
1000252a:	f1c4 040c 	rsb	r4, r4, #12
1000252e:	f1c4 0220 	rsb	r2, r4, #32
10002532:	fa20 f002 	lsr.w	r0, r0, r2
10002536:	fa01 f304 	lsl.w	r3, r1, r4
1000253a:	ea40 0003 	orr.w	r0, r0, r3
1000253e:	4629      	mov	r1, r5
10002540:	bd30      	pop	{r4, r5, pc}
10002542:	fa21 f004 	lsr.w	r0, r1, r4
10002546:	4629      	mov	r1, r5
10002548:	bd30      	pop	{r4, r5, pc}
1000254a:	f094 0f00 	teq	r4, #0
1000254e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10002552:	bf06      	itte	eq
10002554:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10002558:	3401      	addeq	r4, #1
1000255a:	3d01      	subne	r5, #1
1000255c:	e74e      	b.n	100023fc <__adddf3+0x8c>
1000255e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10002562:	bf18      	it	ne
10002564:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10002568:	d029      	beq.n	100025be <__adddf3+0x24e>
1000256a:	ea94 0f05 	teq	r4, r5
1000256e:	bf08      	it	eq
10002570:	ea90 0f02 	teqeq	r0, r2
10002574:	d005      	beq.n	10002582 <__adddf3+0x212>
10002576:	ea54 0c00 	orrs.w	ip, r4, r0
1000257a:	bf04      	itt	eq
1000257c:	4619      	moveq	r1, r3
1000257e:	4610      	moveq	r0, r2
10002580:	bd30      	pop	{r4, r5, pc}
10002582:	ea91 0f03 	teq	r1, r3
10002586:	bf1e      	ittt	ne
10002588:	2100      	movne	r1, #0
1000258a:	2000      	movne	r0, #0
1000258c:	bd30      	popne	{r4, r5, pc}
1000258e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10002592:	d105      	bne.n	100025a0 <__adddf3+0x230>
10002594:	0040      	lsls	r0, r0, #1
10002596:	4149      	adcs	r1, r1
10002598:	bf28      	it	cs
1000259a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1000259e:	bd30      	pop	{r4, r5, pc}
100025a0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
100025a4:	bf3c      	itt	cc
100025a6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
100025aa:	bd30      	popcc	{r4, r5, pc}
100025ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100025b0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
100025b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
100025b8:	f04f 0000 	mov.w	r0, #0
100025bc:	bd30      	pop	{r4, r5, pc}
100025be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100025c2:	bf1a      	itte	ne
100025c4:	4619      	movne	r1, r3
100025c6:	4610      	movne	r0, r2
100025c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
100025cc:	bf1c      	itt	ne
100025ce:	460b      	movne	r3, r1
100025d0:	4602      	movne	r2, r0
100025d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100025d6:	bf06      	itte	eq
100025d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
100025dc:	ea91 0f03 	teqeq	r1, r3
100025e0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
100025e4:	bd30      	pop	{r4, r5, pc}
100025e6:	bf00      	nop

100025e8 <__aeabi_ui2d>:
100025e8:	f090 0f00 	teq	r0, #0
100025ec:	bf04      	itt	eq
100025ee:	2100      	moveq	r1, #0
100025f0:	4770      	bxeq	lr
100025f2:	b530      	push	{r4, r5, lr}
100025f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
100025f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
100025fc:	f04f 0500 	mov.w	r5, #0
10002600:	f04f 0100 	mov.w	r1, #0
10002604:	e750      	b.n	100024a8 <__adddf3+0x138>
10002606:	bf00      	nop

10002608 <__aeabi_i2d>:
10002608:	f090 0f00 	teq	r0, #0
1000260c:	bf04      	itt	eq
1000260e:	2100      	moveq	r1, #0
10002610:	4770      	bxeq	lr
10002612:	b530      	push	{r4, r5, lr}
10002614:	f44f 6480 	mov.w	r4, #1024	; 0x400
10002618:	f104 0432 	add.w	r4, r4, #50	; 0x32
1000261c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10002620:	bf48      	it	mi
10002622:	4240      	negmi	r0, r0
10002624:	f04f 0100 	mov.w	r1, #0
10002628:	e73e      	b.n	100024a8 <__adddf3+0x138>
1000262a:	bf00      	nop

1000262c <__aeabi_f2d>:
1000262c:	0042      	lsls	r2, r0, #1
1000262e:	ea4f 01e2 	mov.w	r1, r2, asr #3
10002632:	ea4f 0131 	mov.w	r1, r1, rrx
10002636:	ea4f 7002 	mov.w	r0, r2, lsl #28
1000263a:	bf1f      	itttt	ne
1000263c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10002640:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10002644:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
10002648:	4770      	bxne	lr
1000264a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
1000264e:	bf08      	it	eq
10002650:	4770      	bxeq	lr
10002652:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
10002656:	bf04      	itt	eq
10002658:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
1000265c:	4770      	bxeq	lr
1000265e:	b530      	push	{r4, r5, lr}
10002660:	f44f 7460 	mov.w	r4, #896	; 0x380
10002664:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10002668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1000266c:	e71c      	b.n	100024a8 <__adddf3+0x138>
1000266e:	bf00      	nop

10002670 <__aeabi_ul2d>:
10002670:	ea50 0201 	orrs.w	r2, r0, r1
10002674:	bf08      	it	eq
10002676:	4770      	bxeq	lr
10002678:	b530      	push	{r4, r5, lr}
1000267a:	f04f 0500 	mov.w	r5, #0
1000267e:	e00a      	b.n	10002696 <__aeabi_l2d+0x16>

10002680 <__aeabi_l2d>:
10002680:	ea50 0201 	orrs.w	r2, r0, r1
10002684:	bf08      	it	eq
10002686:	4770      	bxeq	lr
10002688:	b530      	push	{r4, r5, lr}
1000268a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1000268e:	d502      	bpl.n	10002696 <__aeabi_l2d+0x16>
10002690:	4240      	negs	r0, r0
10002692:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10002696:	f44f 6480 	mov.w	r4, #1024	; 0x400
1000269a:	f104 0432 	add.w	r4, r4, #50	; 0x32
1000269e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
100026a2:	f43f aed8 	beq.w	10002456 <__adddf3+0xe6>
100026a6:	f04f 0203 	mov.w	r2, #3
100026aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100026ae:	bf18      	it	ne
100026b0:	3203      	addne	r2, #3
100026b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100026b6:	bf18      	it	ne
100026b8:	3203      	addne	r2, #3
100026ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
100026be:	f1c2 0320 	rsb	r3, r2, #32
100026c2:	fa00 fc03 	lsl.w	ip, r0, r3
100026c6:	fa20 f002 	lsr.w	r0, r0, r2
100026ca:	fa01 fe03 	lsl.w	lr, r1, r3
100026ce:	ea40 000e 	orr.w	r0, r0, lr
100026d2:	fa21 f102 	lsr.w	r1, r1, r2
100026d6:	4414      	add	r4, r2
100026d8:	e6bd      	b.n	10002456 <__adddf3+0xe6>
100026da:	bf00      	nop

100026dc <__aeabi_dmul>:
100026dc:	b570      	push	{r4, r5, r6, lr}
100026de:	f04f 0cff 	mov.w	ip, #255	; 0xff
100026e2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100026e6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100026ea:	bf1d      	ittte	ne
100026ec:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100026f0:	ea94 0f0c 	teqne	r4, ip
100026f4:	ea95 0f0c 	teqne	r5, ip
100026f8:	f000 f8de 	bleq	100028b8 <__aeabi_dmul+0x1dc>
100026fc:	442c      	add	r4, r5
100026fe:	ea81 0603 	eor.w	r6, r1, r3
10002702:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10002706:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1000270a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1000270e:	bf18      	it	ne
10002710:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10002714:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10002718:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1000271c:	d038      	beq.n	10002790 <__aeabi_dmul+0xb4>
1000271e:	fba0 ce02 	umull	ip, lr, r0, r2
10002722:	f04f 0500 	mov.w	r5, #0
10002726:	fbe1 e502 	umlal	lr, r5, r1, r2
1000272a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
1000272e:	fbe0 e503 	umlal	lr, r5, r0, r3
10002732:	f04f 0600 	mov.w	r6, #0
10002736:	fbe1 5603 	umlal	r5, r6, r1, r3
1000273a:	f09c 0f00 	teq	ip, #0
1000273e:	bf18      	it	ne
10002740:	f04e 0e01 	orrne.w	lr, lr, #1
10002744:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
10002748:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
1000274c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10002750:	d204      	bcs.n	1000275c <__aeabi_dmul+0x80>
10002752:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10002756:	416d      	adcs	r5, r5
10002758:	eb46 0606 	adc.w	r6, r6, r6
1000275c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10002760:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10002764:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10002768:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1000276c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10002770:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10002774:	bf88      	it	hi
10002776:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1000277a:	d81e      	bhi.n	100027ba <__aeabi_dmul+0xde>
1000277c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10002780:	bf08      	it	eq
10002782:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10002786:	f150 0000 	adcs.w	r0, r0, #0
1000278a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1000278e:	bd70      	pop	{r4, r5, r6, pc}
10002790:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10002794:	ea46 0101 	orr.w	r1, r6, r1
10002798:	ea40 0002 	orr.w	r0, r0, r2
1000279c:	ea81 0103 	eor.w	r1, r1, r3
100027a0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
100027a4:	bfc2      	ittt	gt
100027a6:	ebd4 050c 	rsbsgt	r5, r4, ip
100027aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100027ae:	bd70      	popgt	{r4, r5, r6, pc}
100027b0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100027b4:	f04f 0e00 	mov.w	lr, #0
100027b8:	3c01      	subs	r4, #1
100027ba:	f300 80ab 	bgt.w	10002914 <__aeabi_dmul+0x238>
100027be:	f114 0f36 	cmn.w	r4, #54	; 0x36
100027c2:	bfde      	ittt	le
100027c4:	2000      	movle	r0, #0
100027c6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
100027ca:	bd70      	pople	{r4, r5, r6, pc}
100027cc:	f1c4 0400 	rsb	r4, r4, #0
100027d0:	3c20      	subs	r4, #32
100027d2:	da35      	bge.n	10002840 <__aeabi_dmul+0x164>
100027d4:	340c      	adds	r4, #12
100027d6:	dc1b      	bgt.n	10002810 <__aeabi_dmul+0x134>
100027d8:	f104 0414 	add.w	r4, r4, #20
100027dc:	f1c4 0520 	rsb	r5, r4, #32
100027e0:	fa00 f305 	lsl.w	r3, r0, r5
100027e4:	fa20 f004 	lsr.w	r0, r0, r4
100027e8:	fa01 f205 	lsl.w	r2, r1, r5
100027ec:	ea40 0002 	orr.w	r0, r0, r2
100027f0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
100027f4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
100027f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100027fc:	fa21 f604 	lsr.w	r6, r1, r4
10002800:	eb42 0106 	adc.w	r1, r2, r6
10002804:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10002808:	bf08      	it	eq
1000280a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1000280e:	bd70      	pop	{r4, r5, r6, pc}
10002810:	f1c4 040c 	rsb	r4, r4, #12
10002814:	f1c4 0520 	rsb	r5, r4, #32
10002818:	fa00 f304 	lsl.w	r3, r0, r4
1000281c:	fa20 f005 	lsr.w	r0, r0, r5
10002820:	fa01 f204 	lsl.w	r2, r1, r4
10002824:	ea40 0002 	orr.w	r0, r0, r2
10002828:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1000282c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10002830:	f141 0100 	adc.w	r1, r1, #0
10002834:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10002838:	bf08      	it	eq
1000283a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1000283e:	bd70      	pop	{r4, r5, r6, pc}
10002840:	f1c4 0520 	rsb	r5, r4, #32
10002844:	fa00 f205 	lsl.w	r2, r0, r5
10002848:	ea4e 0e02 	orr.w	lr, lr, r2
1000284c:	fa20 f304 	lsr.w	r3, r0, r4
10002850:	fa01 f205 	lsl.w	r2, r1, r5
10002854:	ea43 0302 	orr.w	r3, r3, r2
10002858:	fa21 f004 	lsr.w	r0, r1, r4
1000285c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10002860:	fa21 f204 	lsr.w	r2, r1, r4
10002864:	ea20 0002 	bic.w	r0, r0, r2
10002868:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1000286c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10002870:	bf08      	it	eq
10002872:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10002876:	bd70      	pop	{r4, r5, r6, pc}
10002878:	f094 0f00 	teq	r4, #0
1000287c:	d10f      	bne.n	1000289e <__aeabi_dmul+0x1c2>
1000287e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
10002882:	0040      	lsls	r0, r0, #1
10002884:	eb41 0101 	adc.w	r1, r1, r1
10002888:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1000288c:	bf08      	it	eq
1000288e:	3c01      	subeq	r4, #1
10002890:	d0f7      	beq.n	10002882 <__aeabi_dmul+0x1a6>
10002892:	ea41 0106 	orr.w	r1, r1, r6
10002896:	f095 0f00 	teq	r5, #0
1000289a:	bf18      	it	ne
1000289c:	4770      	bxne	lr
1000289e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
100028a2:	0052      	lsls	r2, r2, #1
100028a4:	eb43 0303 	adc.w	r3, r3, r3
100028a8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
100028ac:	bf08      	it	eq
100028ae:	3d01      	subeq	r5, #1
100028b0:	d0f7      	beq.n	100028a2 <__aeabi_dmul+0x1c6>
100028b2:	ea43 0306 	orr.w	r3, r3, r6
100028b6:	4770      	bx	lr
100028b8:	ea94 0f0c 	teq	r4, ip
100028bc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100028c0:	bf18      	it	ne
100028c2:	ea95 0f0c 	teqne	r5, ip
100028c6:	d00c      	beq.n	100028e2 <__aeabi_dmul+0x206>
100028c8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100028cc:	bf18      	it	ne
100028ce:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100028d2:	d1d1      	bne.n	10002878 <__aeabi_dmul+0x19c>
100028d4:	ea81 0103 	eor.w	r1, r1, r3
100028d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100028dc:	f04f 0000 	mov.w	r0, #0
100028e0:	bd70      	pop	{r4, r5, r6, pc}
100028e2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100028e6:	bf06      	itte	eq
100028e8:	4610      	moveq	r0, r2
100028ea:	4619      	moveq	r1, r3
100028ec:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100028f0:	d019      	beq.n	10002926 <__aeabi_dmul+0x24a>
100028f2:	ea94 0f0c 	teq	r4, ip
100028f6:	d102      	bne.n	100028fe <__aeabi_dmul+0x222>
100028f8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
100028fc:	d113      	bne.n	10002926 <__aeabi_dmul+0x24a>
100028fe:	ea95 0f0c 	teq	r5, ip
10002902:	d105      	bne.n	10002910 <__aeabi_dmul+0x234>
10002904:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10002908:	bf1c      	itt	ne
1000290a:	4610      	movne	r0, r2
1000290c:	4619      	movne	r1, r3
1000290e:	d10a      	bne.n	10002926 <__aeabi_dmul+0x24a>
10002910:	ea81 0103 	eor.w	r1, r1, r3
10002914:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10002918:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1000291c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10002920:	f04f 0000 	mov.w	r0, #0
10002924:	bd70      	pop	{r4, r5, r6, pc}
10002926:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1000292a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
1000292e:	bd70      	pop	{r4, r5, r6, pc}

10002930 <__aeabi_ddiv>:
10002930:	b570      	push	{r4, r5, r6, lr}
10002932:	f04f 0cff 	mov.w	ip, #255	; 0xff
10002936:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1000293a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1000293e:	bf1d      	ittte	ne
10002940:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10002944:	ea94 0f0c 	teqne	r4, ip
10002948:	ea95 0f0c 	teqne	r5, ip
1000294c:	f000 f8a7 	bleq	10002a9e <__aeabi_ddiv+0x16e>
10002950:	eba4 0405 	sub.w	r4, r4, r5
10002954:	ea81 0e03 	eor.w	lr, r1, r3
10002958:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1000295c:	ea4f 3101 	mov.w	r1, r1, lsl #12
10002960:	f000 8088 	beq.w	10002a74 <__aeabi_ddiv+0x144>
10002964:	ea4f 3303 	mov.w	r3, r3, lsl #12
10002968:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
1000296c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10002970:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10002974:	ea4f 2202 	mov.w	r2, r2, lsl #8
10002978:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1000297c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10002980:	ea4f 2600 	mov.w	r6, r0, lsl #8
10002984:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10002988:	429d      	cmp	r5, r3
1000298a:	bf08      	it	eq
1000298c:	4296      	cmpeq	r6, r2
1000298e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
10002992:	f504 7440 	add.w	r4, r4, #768	; 0x300
10002996:	d202      	bcs.n	1000299e <__aeabi_ddiv+0x6e>
10002998:	085b      	lsrs	r3, r3, #1
1000299a:	ea4f 0232 	mov.w	r2, r2, rrx
1000299e:	1ab6      	subs	r6, r6, r2
100029a0:	eb65 0503 	sbc.w	r5, r5, r3
100029a4:	085b      	lsrs	r3, r3, #1
100029a6:	ea4f 0232 	mov.w	r2, r2, rrx
100029aa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
100029ae:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
100029b2:	ebb6 0e02 	subs.w	lr, r6, r2
100029b6:	eb75 0e03 	sbcs.w	lr, r5, r3
100029ba:	bf22      	ittt	cs
100029bc:	1ab6      	subcs	r6, r6, r2
100029be:	4675      	movcs	r5, lr
100029c0:	ea40 000c 	orrcs.w	r0, r0, ip
100029c4:	085b      	lsrs	r3, r3, #1
100029c6:	ea4f 0232 	mov.w	r2, r2, rrx
100029ca:	ebb6 0e02 	subs.w	lr, r6, r2
100029ce:	eb75 0e03 	sbcs.w	lr, r5, r3
100029d2:	bf22      	ittt	cs
100029d4:	1ab6      	subcs	r6, r6, r2
100029d6:	4675      	movcs	r5, lr
100029d8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
100029dc:	085b      	lsrs	r3, r3, #1
100029de:	ea4f 0232 	mov.w	r2, r2, rrx
100029e2:	ebb6 0e02 	subs.w	lr, r6, r2
100029e6:	eb75 0e03 	sbcs.w	lr, r5, r3
100029ea:	bf22      	ittt	cs
100029ec:	1ab6      	subcs	r6, r6, r2
100029ee:	4675      	movcs	r5, lr
100029f0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
100029f4:	085b      	lsrs	r3, r3, #1
100029f6:	ea4f 0232 	mov.w	r2, r2, rrx
100029fa:	ebb6 0e02 	subs.w	lr, r6, r2
100029fe:	eb75 0e03 	sbcs.w	lr, r5, r3
10002a02:	bf22      	ittt	cs
10002a04:	1ab6      	subcs	r6, r6, r2
10002a06:	4675      	movcs	r5, lr
10002a08:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10002a0c:	ea55 0e06 	orrs.w	lr, r5, r6
10002a10:	d018      	beq.n	10002a44 <__aeabi_ddiv+0x114>
10002a12:	ea4f 1505 	mov.w	r5, r5, lsl #4
10002a16:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10002a1a:	ea4f 1606 	mov.w	r6, r6, lsl #4
10002a1e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10002a22:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10002a26:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10002a2a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10002a2e:	d1c0      	bne.n	100029b2 <__aeabi_ddiv+0x82>
10002a30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10002a34:	d10b      	bne.n	10002a4e <__aeabi_ddiv+0x11e>
10002a36:	ea41 0100 	orr.w	r1, r1, r0
10002a3a:	f04f 0000 	mov.w	r0, #0
10002a3e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
10002a42:	e7b6      	b.n	100029b2 <__aeabi_ddiv+0x82>
10002a44:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10002a48:	bf04      	itt	eq
10002a4a:	4301      	orreq	r1, r0
10002a4c:	2000      	moveq	r0, #0
10002a4e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10002a52:	bf88      	it	hi
10002a54:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10002a58:	f63f aeaf 	bhi.w	100027ba <__aeabi_dmul+0xde>
10002a5c:	ebb5 0c03 	subs.w	ip, r5, r3
10002a60:	bf04      	itt	eq
10002a62:	ebb6 0c02 	subseq.w	ip, r6, r2
10002a66:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10002a6a:	f150 0000 	adcs.w	r0, r0, #0
10002a6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10002a72:	bd70      	pop	{r4, r5, r6, pc}
10002a74:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
10002a78:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10002a7c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10002a80:	bfc2      	ittt	gt
10002a82:	ebd4 050c 	rsbsgt	r5, r4, ip
10002a86:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10002a8a:	bd70      	popgt	{r4, r5, r6, pc}
10002a8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10002a90:	f04f 0e00 	mov.w	lr, #0
10002a94:	3c01      	subs	r4, #1
10002a96:	e690      	b.n	100027ba <__aeabi_dmul+0xde>
10002a98:	ea45 0e06 	orr.w	lr, r5, r6
10002a9c:	e68d      	b.n	100027ba <__aeabi_dmul+0xde>
10002a9e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10002aa2:	ea94 0f0c 	teq	r4, ip
10002aa6:	bf08      	it	eq
10002aa8:	ea95 0f0c 	teqeq	r5, ip
10002aac:	f43f af3b 	beq.w	10002926 <__aeabi_dmul+0x24a>
10002ab0:	ea94 0f0c 	teq	r4, ip
10002ab4:	d10a      	bne.n	10002acc <__aeabi_ddiv+0x19c>
10002ab6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10002aba:	f47f af34 	bne.w	10002926 <__aeabi_dmul+0x24a>
10002abe:	ea95 0f0c 	teq	r5, ip
10002ac2:	f47f af25 	bne.w	10002910 <__aeabi_dmul+0x234>
10002ac6:	4610      	mov	r0, r2
10002ac8:	4619      	mov	r1, r3
10002aca:	e72c      	b.n	10002926 <__aeabi_dmul+0x24a>
10002acc:	ea95 0f0c 	teq	r5, ip
10002ad0:	d106      	bne.n	10002ae0 <__aeabi_ddiv+0x1b0>
10002ad2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10002ad6:	f43f aefd 	beq.w	100028d4 <__aeabi_dmul+0x1f8>
10002ada:	4610      	mov	r0, r2
10002adc:	4619      	mov	r1, r3
10002ade:	e722      	b.n	10002926 <__aeabi_dmul+0x24a>
10002ae0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10002ae4:	bf18      	it	ne
10002ae6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10002aea:	f47f aec5 	bne.w	10002878 <__aeabi_dmul+0x19c>
10002aee:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10002af2:	f47f af0d 	bne.w	10002910 <__aeabi_dmul+0x234>
10002af6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10002afa:	f47f aeeb 	bne.w	100028d4 <__aeabi_dmul+0x1f8>
10002afe:	e712      	b.n	10002926 <__aeabi_dmul+0x24a>

10002b00 <__gedf2>:
10002b00:	f04f 3cff 	mov.w	ip, #4294967295
10002b04:	e006      	b.n	10002b14 <__cmpdf2+0x4>
10002b06:	bf00      	nop

10002b08 <__ledf2>:
10002b08:	f04f 0c01 	mov.w	ip, #1
10002b0c:	e002      	b.n	10002b14 <__cmpdf2+0x4>
10002b0e:	bf00      	nop

10002b10 <__cmpdf2>:
10002b10:	f04f 0c01 	mov.w	ip, #1
10002b14:	f84d cd04 	str.w	ip, [sp, #-4]!
10002b18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10002b1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10002b20:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10002b24:	bf18      	it	ne
10002b26:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10002b2a:	d01b      	beq.n	10002b64 <__cmpdf2+0x54>
10002b2c:	b001      	add	sp, #4
10002b2e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10002b32:	bf0c      	ite	eq
10002b34:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10002b38:	ea91 0f03 	teqne	r1, r3
10002b3c:	bf02      	ittt	eq
10002b3e:	ea90 0f02 	teqeq	r0, r2
10002b42:	2000      	moveq	r0, #0
10002b44:	4770      	bxeq	lr
10002b46:	f110 0f00 	cmn.w	r0, #0
10002b4a:	ea91 0f03 	teq	r1, r3
10002b4e:	bf58      	it	pl
10002b50:	4299      	cmppl	r1, r3
10002b52:	bf08      	it	eq
10002b54:	4290      	cmpeq	r0, r2
10002b56:	bf2c      	ite	cs
10002b58:	17d8      	asrcs	r0, r3, #31
10002b5a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10002b5e:	f040 0001 	orr.w	r0, r0, #1
10002b62:	4770      	bx	lr
10002b64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10002b68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10002b6c:	d102      	bne.n	10002b74 <__cmpdf2+0x64>
10002b6e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10002b72:	d107      	bne.n	10002b84 <__cmpdf2+0x74>
10002b74:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10002b78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10002b7c:	d1d6      	bne.n	10002b2c <__cmpdf2+0x1c>
10002b7e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10002b82:	d0d3      	beq.n	10002b2c <__cmpdf2+0x1c>
10002b84:	f85d 0b04 	ldr.w	r0, [sp], #4
10002b88:	4770      	bx	lr
10002b8a:	bf00      	nop

10002b8c <__aeabi_cdrcmple>:
10002b8c:	4684      	mov	ip, r0
10002b8e:	4610      	mov	r0, r2
10002b90:	4662      	mov	r2, ip
10002b92:	468c      	mov	ip, r1
10002b94:	4619      	mov	r1, r3
10002b96:	4663      	mov	r3, ip
10002b98:	e000      	b.n	10002b9c <__aeabi_cdcmpeq>
10002b9a:	bf00      	nop

10002b9c <__aeabi_cdcmpeq>:
10002b9c:	b501      	push	{r0, lr}
10002b9e:	f7ff ffb7 	bl	10002b10 <__cmpdf2>
10002ba2:	2800      	cmp	r0, #0
10002ba4:	bf48      	it	mi
10002ba6:	f110 0f00 	cmnmi.w	r0, #0
10002baa:	bd01      	pop	{r0, pc}

10002bac <__aeabi_dcmpeq>:
10002bac:	f84d ed08 	str.w	lr, [sp, #-8]!
10002bb0:	f7ff fff4 	bl	10002b9c <__aeabi_cdcmpeq>
10002bb4:	bf0c      	ite	eq
10002bb6:	2001      	moveq	r0, #1
10002bb8:	2000      	movne	r0, #0
10002bba:	f85d fb08 	ldr.w	pc, [sp], #8
10002bbe:	bf00      	nop

10002bc0 <__aeabi_dcmplt>:
10002bc0:	f84d ed08 	str.w	lr, [sp, #-8]!
10002bc4:	f7ff ffea 	bl	10002b9c <__aeabi_cdcmpeq>
10002bc8:	bf34      	ite	cc
10002bca:	2001      	movcc	r0, #1
10002bcc:	2000      	movcs	r0, #0
10002bce:	f85d fb08 	ldr.w	pc, [sp], #8
10002bd2:	bf00      	nop

10002bd4 <__aeabi_dcmple>:
10002bd4:	f84d ed08 	str.w	lr, [sp, #-8]!
10002bd8:	f7ff ffe0 	bl	10002b9c <__aeabi_cdcmpeq>
10002bdc:	bf94      	ite	ls
10002bde:	2001      	movls	r0, #1
10002be0:	2000      	movhi	r0, #0
10002be2:	f85d fb08 	ldr.w	pc, [sp], #8
10002be6:	bf00      	nop

10002be8 <__aeabi_dcmpge>:
10002be8:	f84d ed08 	str.w	lr, [sp, #-8]!
10002bec:	f7ff ffce 	bl	10002b8c <__aeabi_cdrcmple>
10002bf0:	bf94      	ite	ls
10002bf2:	2001      	movls	r0, #1
10002bf4:	2000      	movhi	r0, #0
10002bf6:	f85d fb08 	ldr.w	pc, [sp], #8
10002bfa:	bf00      	nop

10002bfc <__aeabi_dcmpgt>:
10002bfc:	f84d ed08 	str.w	lr, [sp, #-8]!
10002c00:	f7ff ffc4 	bl	10002b8c <__aeabi_cdrcmple>
10002c04:	bf34      	ite	cc
10002c06:	2001      	movcc	r0, #1
10002c08:	2000      	movcs	r0, #0
10002c0a:	f85d fb08 	ldr.w	pc, [sp], #8
10002c0e:	bf00      	nop

10002c10 <__aeabi_d2iz>:
10002c10:	ea4f 0241 	mov.w	r2, r1, lsl #1
10002c14:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10002c18:	d215      	bcs.n	10002c46 <__aeabi_d2iz+0x36>
10002c1a:	d511      	bpl.n	10002c40 <__aeabi_d2iz+0x30>
10002c1c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10002c20:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10002c24:	d912      	bls.n	10002c4c <__aeabi_d2iz+0x3c>
10002c26:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10002c2a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10002c2e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10002c32:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10002c36:	fa23 f002 	lsr.w	r0, r3, r2
10002c3a:	bf18      	it	ne
10002c3c:	4240      	negne	r0, r0
10002c3e:	4770      	bx	lr
10002c40:	f04f 0000 	mov.w	r0, #0
10002c44:	4770      	bx	lr
10002c46:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10002c4a:	d105      	bne.n	10002c58 <__aeabi_d2iz+0x48>
10002c4c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
10002c50:	bf08      	it	eq
10002c52:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
10002c56:	4770      	bx	lr
10002c58:	f04f 0000 	mov.w	r0, #0
10002c5c:	4770      	bx	lr
10002c5e:	bf00      	nop

10002c60 <__aeabi_d2uiz>:
10002c60:	004a      	lsls	r2, r1, #1
10002c62:	d211      	bcs.n	10002c88 <__aeabi_d2uiz+0x28>
10002c64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10002c68:	d211      	bcs.n	10002c8e <__aeabi_d2uiz+0x2e>
10002c6a:	d50d      	bpl.n	10002c88 <__aeabi_d2uiz+0x28>
10002c6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10002c70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10002c74:	d40e      	bmi.n	10002c94 <__aeabi_d2uiz+0x34>
10002c76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10002c7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10002c7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10002c82:	fa23 f002 	lsr.w	r0, r3, r2
10002c86:	4770      	bx	lr
10002c88:	f04f 0000 	mov.w	r0, #0
10002c8c:	4770      	bx	lr
10002c8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10002c92:	d102      	bne.n	10002c9a <__aeabi_d2uiz+0x3a>
10002c94:	f04f 30ff 	mov.w	r0, #4294967295
10002c98:	4770      	bx	lr
10002c9a:	f04f 0000 	mov.w	r0, #0
10002c9e:	4770      	bx	lr

10002ca0 <__aeabi_uldivmod>:
10002ca0:	b953      	cbnz	r3, 10002cb8 <__aeabi_uldivmod+0x18>
10002ca2:	b94a      	cbnz	r2, 10002cb8 <__aeabi_uldivmod+0x18>
10002ca4:	2900      	cmp	r1, #0
10002ca6:	bf08      	it	eq
10002ca8:	2800      	cmpeq	r0, #0
10002caa:	bf1c      	itt	ne
10002cac:	f04f 31ff 	movne.w	r1, #4294967295
10002cb0:	f04f 30ff 	movne.w	r0, #4294967295
10002cb4:	f001 b934 	b.w	10003f20 <__aeabi_idiv0>
10002cb8:	f1ad 0c08 	sub.w	ip, sp, #8
10002cbc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10002cc0:	f000 f806 	bl	10002cd0 <__udivmoddi4>
10002cc4:	f8dd e004 	ldr.w	lr, [sp, #4]
10002cc8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10002ccc:	b004      	add	sp, #16
10002cce:	4770      	bx	lr

10002cd0 <__udivmoddi4>:
10002cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10002cd4:	9d09      	ldr	r5, [sp, #36]	; 0x24
10002cd6:	4604      	mov	r4, r0
10002cd8:	460f      	mov	r7, r1
10002cda:	2b00      	cmp	r3, #0
10002cdc:	d148      	bne.n	10002d70 <__udivmoddi4+0xa0>
10002cde:	428a      	cmp	r2, r1
10002ce0:	4694      	mov	ip, r2
10002ce2:	d961      	bls.n	10002da8 <__udivmoddi4+0xd8>
10002ce4:	fab2 f382 	clz	r3, r2
10002ce8:	b143      	cbz	r3, 10002cfc <__udivmoddi4+0x2c>
10002cea:	f1c3 0120 	rsb	r1, r3, #32
10002cee:	409f      	lsls	r7, r3
10002cf0:	fa02 fc03 	lsl.w	ip, r2, r3
10002cf4:	409c      	lsls	r4, r3
10002cf6:	fa20 f101 	lsr.w	r1, r0, r1
10002cfa:	430f      	orrs	r7, r1
10002cfc:	ea4f 411c 	mov.w	r1, ip, lsr #16
10002d00:	fa1f fe8c 	uxth.w	lr, ip
10002d04:	0c22      	lsrs	r2, r4, #16
10002d06:	fbb7 f6f1 	udiv	r6, r7, r1
10002d0a:	fb01 7716 	mls	r7, r1, r6, r7
10002d0e:	fb06 f00e 	mul.w	r0, r6, lr
10002d12:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
10002d16:	4290      	cmp	r0, r2
10002d18:	d908      	bls.n	10002d2c <__udivmoddi4+0x5c>
10002d1a:	eb1c 0202 	adds.w	r2, ip, r2
10002d1e:	f106 37ff 	add.w	r7, r6, #4294967295
10002d22:	d202      	bcs.n	10002d2a <__udivmoddi4+0x5a>
10002d24:	4290      	cmp	r0, r2
10002d26:	f200 8137 	bhi.w	10002f98 <__udivmoddi4+0x2c8>
10002d2a:	463e      	mov	r6, r7
10002d2c:	1a12      	subs	r2, r2, r0
10002d2e:	b2a4      	uxth	r4, r4
10002d30:	fbb2 f0f1 	udiv	r0, r2, r1
10002d34:	fb01 2210 	mls	r2, r1, r0, r2
10002d38:	fb00 fe0e 	mul.w	lr, r0, lr
10002d3c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
10002d40:	45a6      	cmp	lr, r4
10002d42:	d908      	bls.n	10002d56 <__udivmoddi4+0x86>
10002d44:	eb1c 0404 	adds.w	r4, ip, r4
10002d48:	f100 32ff 	add.w	r2, r0, #4294967295
10002d4c:	d202      	bcs.n	10002d54 <__udivmoddi4+0x84>
10002d4e:	45a6      	cmp	lr, r4
10002d50:	f200 811c 	bhi.w	10002f8c <__udivmoddi4+0x2bc>
10002d54:	4610      	mov	r0, r2
10002d56:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10002d5a:	eba4 040e 	sub.w	r4, r4, lr
10002d5e:	2600      	movs	r6, #0
10002d60:	b11d      	cbz	r5, 10002d6a <__udivmoddi4+0x9a>
10002d62:	40dc      	lsrs	r4, r3
10002d64:	2300      	movs	r3, #0
10002d66:	e9c5 4300 	strd	r4, r3, [r5]
10002d6a:	4631      	mov	r1, r6
10002d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10002d70:	428b      	cmp	r3, r1
10002d72:	d909      	bls.n	10002d88 <__udivmoddi4+0xb8>
10002d74:	2d00      	cmp	r5, #0
10002d76:	f000 80fd 	beq.w	10002f74 <__udivmoddi4+0x2a4>
10002d7a:	2600      	movs	r6, #0
10002d7c:	e9c5 0100 	strd	r0, r1, [r5]
10002d80:	4630      	mov	r0, r6
10002d82:	4631      	mov	r1, r6
10002d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10002d88:	fab3 f683 	clz	r6, r3
10002d8c:	2e00      	cmp	r6, #0
10002d8e:	d14b      	bne.n	10002e28 <__udivmoddi4+0x158>
10002d90:	428b      	cmp	r3, r1
10002d92:	f0c0 80f2 	bcc.w	10002f7a <__udivmoddi4+0x2aa>
10002d96:	4282      	cmp	r2, r0
10002d98:	f240 80ef 	bls.w	10002f7a <__udivmoddi4+0x2aa>
10002d9c:	4630      	mov	r0, r6
10002d9e:	2d00      	cmp	r5, #0
10002da0:	d0e3      	beq.n	10002d6a <__udivmoddi4+0x9a>
10002da2:	e9c5 4700 	strd	r4, r7, [r5]
10002da6:	e7e0      	b.n	10002d6a <__udivmoddi4+0x9a>
10002da8:	b902      	cbnz	r2, 10002dac <__udivmoddi4+0xdc>
10002daa:	deff      	udf	#255	; 0xff
10002dac:	fab2 f382 	clz	r3, r2
10002db0:	2b00      	cmp	r3, #0
10002db2:	f040 809d 	bne.w	10002ef0 <__udivmoddi4+0x220>
10002db6:	1a89      	subs	r1, r1, r2
10002db8:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10002dbc:	b297      	uxth	r7, r2
10002dbe:	2601      	movs	r6, #1
10002dc0:	0c20      	lsrs	r0, r4, #16
10002dc2:	fbb1 f2fe 	udiv	r2, r1, lr
10002dc6:	fb0e 1112 	mls	r1, lr, r2, r1
10002dca:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10002dce:	fb07 f002 	mul.w	r0, r7, r2
10002dd2:	4288      	cmp	r0, r1
10002dd4:	d90f      	bls.n	10002df6 <__udivmoddi4+0x126>
10002dd6:	eb1c 0101 	adds.w	r1, ip, r1
10002dda:	f102 38ff 	add.w	r8, r2, #4294967295
10002dde:	bf2c      	ite	cs
10002de0:	f04f 0901 	movcs.w	r9, #1
10002de4:	f04f 0900 	movcc.w	r9, #0
10002de8:	4288      	cmp	r0, r1
10002dea:	d903      	bls.n	10002df4 <__udivmoddi4+0x124>
10002dec:	f1b9 0f00 	cmp.w	r9, #0
10002df0:	f000 80cf 	beq.w	10002f92 <__udivmoddi4+0x2c2>
10002df4:	4642      	mov	r2, r8
10002df6:	1a09      	subs	r1, r1, r0
10002df8:	b2a4      	uxth	r4, r4
10002dfa:	fbb1 f0fe 	udiv	r0, r1, lr
10002dfe:	fb0e 1110 	mls	r1, lr, r0, r1
10002e02:	fb00 f707 	mul.w	r7, r0, r7
10002e06:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10002e0a:	42a7      	cmp	r7, r4
10002e0c:	d908      	bls.n	10002e20 <__udivmoddi4+0x150>
10002e0e:	eb1c 0404 	adds.w	r4, ip, r4
10002e12:	f100 31ff 	add.w	r1, r0, #4294967295
10002e16:	d202      	bcs.n	10002e1e <__udivmoddi4+0x14e>
10002e18:	42a7      	cmp	r7, r4
10002e1a:	f200 80b4 	bhi.w	10002f86 <__udivmoddi4+0x2b6>
10002e1e:	4608      	mov	r0, r1
10002e20:	1be4      	subs	r4, r4, r7
10002e22:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
10002e26:	e79b      	b.n	10002d60 <__udivmoddi4+0x90>
10002e28:	f1c6 0720 	rsb	r7, r6, #32
10002e2c:	40b3      	lsls	r3, r6
10002e2e:	fa01 f406 	lsl.w	r4, r1, r6
10002e32:	fa22 fc07 	lsr.w	ip, r2, r7
10002e36:	40f9      	lsrs	r1, r7
10002e38:	40b2      	lsls	r2, r6
10002e3a:	ea4c 0c03 	orr.w	ip, ip, r3
10002e3e:	fa20 f307 	lsr.w	r3, r0, r7
10002e42:	ea4f 491c 	mov.w	r9, ip, lsr #16
10002e46:	431c      	orrs	r4, r3
10002e48:	fa1f fe8c 	uxth.w	lr, ip
10002e4c:	fa00 f306 	lsl.w	r3, r0, r6
10002e50:	0c20      	lsrs	r0, r4, #16
10002e52:	fbb1 f8f9 	udiv	r8, r1, r9
10002e56:	fb09 1118 	mls	r1, r9, r8, r1
10002e5a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10002e5e:	fb08 f00e 	mul.w	r0, r8, lr
10002e62:	4288      	cmp	r0, r1
10002e64:	d90f      	bls.n	10002e86 <__udivmoddi4+0x1b6>
10002e66:	eb1c 0101 	adds.w	r1, ip, r1
10002e6a:	f108 3aff 	add.w	sl, r8, #4294967295
10002e6e:	bf2c      	ite	cs
10002e70:	f04f 0b01 	movcs.w	fp, #1
10002e74:	f04f 0b00 	movcc.w	fp, #0
10002e78:	4288      	cmp	r0, r1
10002e7a:	d903      	bls.n	10002e84 <__udivmoddi4+0x1b4>
10002e7c:	f1bb 0f00 	cmp.w	fp, #0
10002e80:	f000 808d 	beq.w	10002f9e <__udivmoddi4+0x2ce>
10002e84:	46d0      	mov	r8, sl
10002e86:	1a09      	subs	r1, r1, r0
10002e88:	b2a4      	uxth	r4, r4
10002e8a:	fbb1 f0f9 	udiv	r0, r1, r9
10002e8e:	fb09 1110 	mls	r1, r9, r0, r1
10002e92:	fb00 fe0e 	mul.w	lr, r0, lr
10002e96:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10002e9a:	458e      	cmp	lr, r1
10002e9c:	d907      	bls.n	10002eae <__udivmoddi4+0x1de>
10002e9e:	eb1c 0101 	adds.w	r1, ip, r1
10002ea2:	f100 34ff 	add.w	r4, r0, #4294967295
10002ea6:	d201      	bcs.n	10002eac <__udivmoddi4+0x1dc>
10002ea8:	458e      	cmp	lr, r1
10002eaa:	d87f      	bhi.n	10002fac <__udivmoddi4+0x2dc>
10002eac:	4620      	mov	r0, r4
10002eae:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10002eb2:	eba1 010e 	sub.w	r1, r1, lr
10002eb6:	fba0 9802 	umull	r9, r8, r0, r2
10002eba:	4541      	cmp	r1, r8
10002ebc:	464c      	mov	r4, r9
10002ebe:	46c6      	mov	lr, r8
10002ec0:	d302      	bcc.n	10002ec8 <__udivmoddi4+0x1f8>
10002ec2:	d106      	bne.n	10002ed2 <__udivmoddi4+0x202>
10002ec4:	454b      	cmp	r3, r9
10002ec6:	d204      	bcs.n	10002ed2 <__udivmoddi4+0x202>
10002ec8:	3801      	subs	r0, #1
10002eca:	ebb9 0402 	subs.w	r4, r9, r2
10002ece:	eb68 0e0c 	sbc.w	lr, r8, ip
10002ed2:	2d00      	cmp	r5, #0
10002ed4:	d070      	beq.n	10002fb8 <__udivmoddi4+0x2e8>
10002ed6:	1b1a      	subs	r2, r3, r4
10002ed8:	eb61 010e 	sbc.w	r1, r1, lr
10002edc:	fa22 f306 	lsr.w	r3, r2, r6
10002ee0:	fa01 f707 	lsl.w	r7, r1, r7
10002ee4:	40f1      	lsrs	r1, r6
10002ee6:	2600      	movs	r6, #0
10002ee8:	431f      	orrs	r7, r3
10002eea:	e9c5 7100 	strd	r7, r1, [r5]
10002eee:	e73c      	b.n	10002d6a <__udivmoddi4+0x9a>
10002ef0:	fa02 fc03 	lsl.w	ip, r2, r3
10002ef4:	f1c3 0020 	rsb	r0, r3, #32
10002ef8:	fa01 f203 	lsl.w	r2, r1, r3
10002efc:	fa21 f600 	lsr.w	r6, r1, r0
10002f00:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10002f04:	fa24 f100 	lsr.w	r1, r4, r0
10002f08:	fa1f f78c 	uxth.w	r7, ip
10002f0c:	409c      	lsls	r4, r3
10002f0e:	4311      	orrs	r1, r2
10002f10:	fbb6 f0fe 	udiv	r0, r6, lr
10002f14:	0c0a      	lsrs	r2, r1, #16
10002f16:	fb0e 6610 	mls	r6, lr, r0, r6
10002f1a:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10002f1e:	fb00 f607 	mul.w	r6, r0, r7
10002f22:	4296      	cmp	r6, r2
10002f24:	d90e      	bls.n	10002f44 <__udivmoddi4+0x274>
10002f26:	eb1c 0202 	adds.w	r2, ip, r2
10002f2a:	f100 38ff 	add.w	r8, r0, #4294967295
10002f2e:	bf2c      	ite	cs
10002f30:	f04f 0901 	movcs.w	r9, #1
10002f34:	f04f 0900 	movcc.w	r9, #0
10002f38:	4296      	cmp	r6, r2
10002f3a:	d902      	bls.n	10002f42 <__udivmoddi4+0x272>
10002f3c:	f1b9 0f00 	cmp.w	r9, #0
10002f40:	d031      	beq.n	10002fa6 <__udivmoddi4+0x2d6>
10002f42:	4640      	mov	r0, r8
10002f44:	1b92      	subs	r2, r2, r6
10002f46:	b289      	uxth	r1, r1
10002f48:	fbb2 f6fe 	udiv	r6, r2, lr
10002f4c:	fb0e 2216 	mls	r2, lr, r6, r2
10002f50:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10002f54:	fb06 f207 	mul.w	r2, r6, r7
10002f58:	428a      	cmp	r2, r1
10002f5a:	d907      	bls.n	10002f6c <__udivmoddi4+0x29c>
10002f5c:	eb1c 0101 	adds.w	r1, ip, r1
10002f60:	f106 38ff 	add.w	r8, r6, #4294967295
10002f64:	d201      	bcs.n	10002f6a <__udivmoddi4+0x29a>
10002f66:	428a      	cmp	r2, r1
10002f68:	d823      	bhi.n	10002fb2 <__udivmoddi4+0x2e2>
10002f6a:	4646      	mov	r6, r8
10002f6c:	1a89      	subs	r1, r1, r2
10002f6e:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10002f72:	e725      	b.n	10002dc0 <__udivmoddi4+0xf0>
10002f74:	462e      	mov	r6, r5
10002f76:	4628      	mov	r0, r5
10002f78:	e6f7      	b.n	10002d6a <__udivmoddi4+0x9a>
10002f7a:	1a84      	subs	r4, r0, r2
10002f7c:	eb61 0303 	sbc.w	r3, r1, r3
10002f80:	2001      	movs	r0, #1
10002f82:	461f      	mov	r7, r3
10002f84:	e70b      	b.n	10002d9e <__udivmoddi4+0xce>
10002f86:	4464      	add	r4, ip
10002f88:	3802      	subs	r0, #2
10002f8a:	e749      	b.n	10002e20 <__udivmoddi4+0x150>
10002f8c:	4464      	add	r4, ip
10002f8e:	3802      	subs	r0, #2
10002f90:	e6e1      	b.n	10002d56 <__udivmoddi4+0x86>
10002f92:	3a02      	subs	r2, #2
10002f94:	4461      	add	r1, ip
10002f96:	e72e      	b.n	10002df6 <__udivmoddi4+0x126>
10002f98:	3e02      	subs	r6, #2
10002f9a:	4462      	add	r2, ip
10002f9c:	e6c6      	b.n	10002d2c <__udivmoddi4+0x5c>
10002f9e:	f1a8 0802 	sub.w	r8, r8, #2
10002fa2:	4461      	add	r1, ip
10002fa4:	e76f      	b.n	10002e86 <__udivmoddi4+0x1b6>
10002fa6:	3802      	subs	r0, #2
10002fa8:	4462      	add	r2, ip
10002faa:	e7cb      	b.n	10002f44 <__udivmoddi4+0x274>
10002fac:	3802      	subs	r0, #2
10002fae:	4461      	add	r1, ip
10002fb0:	e77d      	b.n	10002eae <__udivmoddi4+0x1de>
10002fb2:	3e02      	subs	r6, #2
10002fb4:	4461      	add	r1, ip
10002fb6:	e7d9      	b.n	10002f6c <__udivmoddi4+0x29c>
10002fb8:	462e      	mov	r6, r5
10002fba:	e6d6      	b.n	10002d6a <__udivmoddi4+0x9a>

10002fbc <selfrel_offset31>:
10002fbc:	6803      	ldr	r3, [r0, #0]
10002fbe:	005a      	lsls	r2, r3, #1
10002fc0:	bf4c      	ite	mi
10002fc2:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10002fc6:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10002fca:	4418      	add	r0, r3
10002fcc:	4770      	bx	lr
10002fce:	bf00      	nop

10002fd0 <search_EIT_table>:
10002fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002fd4:	b339      	cbz	r1, 10003026 <search_EIT_table+0x56>
10002fd6:	f101 38ff 	add.w	r8, r1, #4294967295
10002fda:	4606      	mov	r6, r0
10002fdc:	4617      	mov	r7, r2
10002fde:	f04f 0900 	mov.w	r9, #0
10002fe2:	4645      	mov	r5, r8
10002fe4:	eb19 0105 	adds.w	r1, r9, r5
10002fe8:	bf48      	it	mi
10002fea:	3101      	addmi	r1, #1
10002fec:	1049      	asrs	r1, r1, #1
10002fee:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10002ff2:	00cc      	lsls	r4, r1, #3
10002ff4:	4650      	mov	r0, sl
10002ff6:	f7ff ffe1 	bl	10002fbc <selfrel_offset31>
10002ffa:	3408      	adds	r4, #8
10002ffc:	4588      	cmp	r8, r1
10002ffe:	4603      	mov	r3, r0
10003000:	eb06 0004 	add.w	r0, r6, r4
10003004:	d009      	beq.n	1000301a <search_EIT_table+0x4a>
10003006:	42bb      	cmp	r3, r7
10003008:	d809      	bhi.n	1000301e <search_EIT_table+0x4e>
1000300a:	f7ff ffd7 	bl	10002fbc <selfrel_offset31>
1000300e:	3801      	subs	r0, #1
10003010:	f101 0901 	add.w	r9, r1, #1
10003014:	42b8      	cmp	r0, r7
10003016:	d3e5      	bcc.n	10002fe4 <search_EIT_table+0x14>
10003018:	e007      	b.n	1000302a <search_EIT_table+0x5a>
1000301a:	42bb      	cmp	r3, r7
1000301c:	d905      	bls.n	1000302a <search_EIT_table+0x5a>
1000301e:	4589      	cmp	r9, r1
10003020:	f101 35ff 	add.w	r5, r1, #4294967295
10003024:	d1de      	bne.n	10002fe4 <search_EIT_table+0x14>
10003026:	f04f 0a00 	mov.w	sl, #0
1000302a:	4650      	mov	r0, sl
1000302c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10003030 <__gnu_unwind_get_pr_addr>:
10003030:	2801      	cmp	r0, #1
10003032:	d007      	beq.n	10003044 <__gnu_unwind_get_pr_addr+0x14>
10003034:	2802      	cmp	r0, #2
10003036:	d007      	beq.n	10003048 <__gnu_unwind_get_pr_addr+0x18>
10003038:	2800      	cmp	r0, #0
1000303a:	4b04      	ldr	r3, [pc, #16]	; (1000304c <__gnu_unwind_get_pr_addr+0x1c>)
1000303c:	bf14      	ite	ne
1000303e:	2000      	movne	r0, #0
10003040:	4618      	moveq	r0, r3
10003042:	4770      	bx	lr
10003044:	4802      	ldr	r0, [pc, #8]	; (10003050 <__gnu_unwind_get_pr_addr+0x20>)
10003046:	4770      	bx	lr
10003048:	4802      	ldr	r0, [pc, #8]	; (10003054 <__gnu_unwind_get_pr_addr+0x24>)
1000304a:	4770      	bx	lr
1000304c:	10003741 	andne	r3, r0, r1, asr #14
10003050:	10003745 	andne	r3, r0, r5, asr #14
10003054:	10003749 	andne	r3, r0, r9, asr #14

10003058 <get_eit_entry>:
10003058:	4b23      	ldr	r3, [pc, #140]	; (100030e8 <get_eit_entry+0x90>)
1000305a:	b530      	push	{r4, r5, lr}
1000305c:	4604      	mov	r4, r0
1000305e:	b083      	sub	sp, #12
10003060:	1e8d      	subs	r5, r1, #2
10003062:	b343      	cbz	r3, 100030b6 <get_eit_entry+0x5e>
10003064:	a901      	add	r1, sp, #4
10003066:	4628      	mov	r0, r5
10003068:	e000      	b.n	1000306c <get_eit_entry+0x14>
1000306a:	bf00      	nop
1000306c:	b1f0      	cbz	r0, 100030ac <get_eit_entry+0x54>
1000306e:	9901      	ldr	r1, [sp, #4]
10003070:	462a      	mov	r2, r5
10003072:	f7ff ffad 	bl	10002fd0 <search_EIT_table>
10003076:	4601      	mov	r1, r0
10003078:	b1c0      	cbz	r0, 100030ac <get_eit_entry+0x54>
1000307a:	f7ff ff9f 	bl	10002fbc <selfrel_offset31>
1000307e:	684b      	ldr	r3, [r1, #4]
10003080:	64a0      	str	r0, [r4, #72]	; 0x48
10003082:	2b01      	cmp	r3, #1
10003084:	d02c      	beq.n	100030e0 <get_eit_entry+0x88>
10003086:	2b00      	cmp	r3, #0
10003088:	f101 0004 	add.w	r0, r1, #4
1000308c:	db24      	blt.n	100030d8 <get_eit_entry+0x80>
1000308e:	f7ff ff95 	bl	10002fbc <selfrel_offset31>
10003092:	2300      	movs	r3, #0
10003094:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10003098:	6803      	ldr	r3, [r0, #0]
1000309a:	2b00      	cmp	r3, #0
1000309c:	db11      	blt.n	100030c2 <get_eit_entry+0x6a>
1000309e:	f7ff ff8d 	bl	10002fbc <selfrel_offset31>
100030a2:	4603      	mov	r3, r0
100030a4:	2000      	movs	r0, #0
100030a6:	6123      	str	r3, [r4, #16]
100030a8:	b003      	add	sp, #12
100030aa:	bd30      	pop	{r4, r5, pc}
100030ac:	2300      	movs	r3, #0
100030ae:	2009      	movs	r0, #9
100030b0:	6123      	str	r3, [r4, #16]
100030b2:	b003      	add	sp, #12
100030b4:	bd30      	pop	{r4, r5, pc}
100030b6:	480d      	ldr	r0, [pc, #52]	; (100030ec <get_eit_entry+0x94>)
100030b8:	490d      	ldr	r1, [pc, #52]	; (100030f0 <get_eit_entry+0x98>)
100030ba:	1a09      	subs	r1, r1, r0
100030bc:	10c9      	asrs	r1, r1, #3
100030be:	9101      	str	r1, [sp, #4]
100030c0:	e7d6      	b.n	10003070 <get_eit_entry+0x18>
100030c2:	f3c3 6003 	ubfx	r0, r3, #24, #4
100030c6:	f7ff ffb3 	bl	10003030 <__gnu_unwind_get_pr_addr>
100030ca:	2800      	cmp	r0, #0
100030cc:	6120      	str	r0, [r4, #16]
100030ce:	bf14      	ite	ne
100030d0:	2000      	movne	r0, #0
100030d2:	2009      	moveq	r0, #9
100030d4:	b003      	add	sp, #12
100030d6:	bd30      	pop	{r4, r5, pc}
100030d8:	2301      	movs	r3, #1
100030da:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
100030de:	e7db      	b.n	10003098 <get_eit_entry+0x40>
100030e0:	2300      	movs	r3, #0
100030e2:	2005      	movs	r0, #5
100030e4:	6123      	str	r3, [r4, #16]
100030e6:	e7df      	b.n	100030a8 <get_eit_entry+0x50>
100030e8:	00000000 	andeq	r0, r0, r0
100030ec:	1000403c 	andne	r4, r0, ip, lsr r0
100030f0:	100040fc 	strdne	r4, [r0], -ip

100030f4 <restore_non_core_regs>:
100030f4:	6803      	ldr	r3, [r0, #0]
100030f6:	07da      	lsls	r2, r3, #31
100030f8:	b510      	push	{r4, lr}
100030fa:	4604      	mov	r4, r0
100030fc:	d406      	bmi.n	1000310c <restore_non_core_regs+0x18>
100030fe:	079b      	lsls	r3, r3, #30
10003100:	f100 0048 	add.w	r0, r0, #72	; 0x48
10003104:	d509      	bpl.n	1000311a <restore_non_core_regs+0x26>
10003106:	f000 fc8f 	bl	10003a28 <__gnu_Unwind_Restore_VFP_D>
1000310a:	6823      	ldr	r3, [r4, #0]
1000310c:	0759      	lsls	r1, r3, #29
1000310e:	d509      	bpl.n	10003124 <restore_non_core_regs+0x30>
10003110:	071a      	lsls	r2, r3, #28
10003112:	d50e      	bpl.n	10003132 <restore_non_core_regs+0x3e>
10003114:	06db      	lsls	r3, r3, #27
10003116:	d513      	bpl.n	10003140 <restore_non_core_regs+0x4c>
10003118:	bd10      	pop	{r4, pc}
1000311a:	f000 fc7d 	bl	10003a18 <__gnu_Unwind_Restore_VFP>
1000311e:	6823      	ldr	r3, [r4, #0]
10003120:	0759      	lsls	r1, r3, #29
10003122:	d4f5      	bmi.n	10003110 <restore_non_core_regs+0x1c>
10003124:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
10003128:	f000 fc86 	bl	10003a38 <__gnu_Unwind_Restore_VFP_D_16_to_31>
1000312c:	6823      	ldr	r3, [r4, #0]
1000312e:	071a      	lsls	r2, r3, #28
10003130:	d4f0      	bmi.n	10003114 <restore_non_core_regs+0x20>
10003132:	f504 70a8 	add.w	r0, r4, #336	; 0x150
10003136:	f000 fc87 	bl	10003a48 <__gnu_Unwind_Restore_WMMXD>
1000313a:	6823      	ldr	r3, [r4, #0]
1000313c:	06db      	lsls	r3, r3, #27
1000313e:	d4eb      	bmi.n	10003118 <restore_non_core_regs+0x24>
10003140:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10003144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10003148:	f000 bcc2 	b.w	10003ad0 <__gnu_Unwind_Restore_WMMXC>

1000314c <__gnu_unwind_24bit.constprop.0>:
1000314c:	2009      	movs	r0, #9
1000314e:	4770      	bx	lr

10003150 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10003150:	4603      	mov	r3, r0
10003152:	6800      	ldr	r0, [r0, #0]
10003154:	b100      	cbz	r0, 10003158 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
10003156:	4418      	add	r0, r3
10003158:	4770      	bx	lr
1000315a:	bf00      	nop

1000315c <_Unwind_DebugHook>:
1000315c:	4770      	bx	lr
1000315e:	bf00      	nop

10003160 <unwind_phase2>:
10003160:	b570      	push	{r4, r5, r6, lr}
10003162:	4604      	mov	r4, r0
10003164:	460e      	mov	r6, r1
10003166:	6c31      	ldr	r1, [r6, #64]	; 0x40
10003168:	4620      	mov	r0, r4
1000316a:	f7ff ff75 	bl	10003058 <get_eit_entry>
1000316e:	4605      	mov	r5, r0
10003170:	b998      	cbnz	r0, 1000319a <unwind_phase2+0x3a>
10003172:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
10003176:	4632      	mov	r2, r6
10003178:	6923      	ldr	r3, [r4, #16]
1000317a:	4621      	mov	r1, r4
1000317c:	2001      	movs	r0, #1
1000317e:	f8c4 c014 	str.w	ip, [r4, #20]
10003182:	4798      	blx	r3
10003184:	2808      	cmp	r0, #8
10003186:	d0ee      	beq.n	10003166 <unwind_phase2+0x6>
10003188:	2807      	cmp	r0, #7
1000318a:	d106      	bne.n	1000319a <unwind_phase2+0x3a>
1000318c:	4628      	mov	r0, r5
1000318e:	6c31      	ldr	r1, [r6, #64]	; 0x40
10003190:	f7ff ffe4 	bl	1000315c <_Unwind_DebugHook>
10003194:	1d30      	adds	r0, r6, #4
10003196:	f000 fc33 	bl	10003a00 <__restore_core_regs>
1000319a:	f7ff f88b 	bl	100022b4 <abort>
1000319e:	bf00      	nop

100031a0 <unwind_phase2_forced>:
100031a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100031a4:	f101 0c04 	add.w	ip, r1, #4
100031a8:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
100031ac:	68c7      	ldr	r7, [r0, #12]
100031ae:	4606      	mov	r6, r0
100031b0:	f8d0 8018 	ldr.w	r8, [r0, #24]
100031b4:	4614      	mov	r4, r2
100031b6:	f10d 0e14 	add.w	lr, sp, #20
100031ba:	ad04      	add	r5, sp, #16
100031bc:	f04f 0900 	mov.w	r9, #0
100031c0:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100031c4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100031c8:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100031cc:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100031d0:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100031d4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100031d8:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
100031dc:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
100031e0:	f8c5 9000 	str.w	r9, [r5]
100031e4:	e023      	b.n	1000322e <unwind_phase2_forced+0x8e>
100031e6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
100031e8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100031ec:	4629      	mov	r1, r5
100031ee:	a87c      	add	r0, sp, #496	; 0x1f0
100031f0:	6173      	str	r3, [r6, #20]
100031f2:	f7ff f866 	bl	100022c2 <memcpy>
100031f6:	aa7c      	add	r2, sp, #496	; 0x1f0
100031f8:	4631      	mov	r1, r6
100031fa:	6933      	ldr	r3, [r6, #16]
100031fc:	4650      	mov	r0, sl
100031fe:	4798      	blx	r3
10003200:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10003202:	4621      	mov	r1, r4
10003204:	4681      	mov	r9, r0
10003206:	9303      	str	r3, [sp, #12]
10003208:	4632      	mov	r2, r6
1000320a:	9c03      	ldr	r4, [sp, #12]
1000320c:	4633      	mov	r3, r6
1000320e:	2001      	movs	r0, #1
10003210:	646c      	str	r4, [r5, #68]	; 0x44
10003212:	e9cd 5800 	strd	r5, r8, [sp]
10003216:	47b8      	blx	r7
10003218:	4604      	mov	r4, r0
1000321a:	b9e8      	cbnz	r0, 10003258 <unwind_phase2_forced+0xb8>
1000321c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10003220:	a97c      	add	r1, sp, #496	; 0x1f0
10003222:	4628      	mov	r0, r5
10003224:	f7ff f84d 	bl	100022c2 <memcpy>
10003228:	f1b9 0f08 	cmp.w	r9, #8
1000322c:	d11b      	bne.n	10003266 <unwind_phase2_forced+0xc6>
1000322e:	3409      	adds	r4, #9
10003230:	6c29      	ldr	r1, [r5, #64]	; 0x40
10003232:	4630      	mov	r0, r6
10003234:	f7ff ff10 	bl	10003058 <get_eit_entry>
10003238:	4681      	mov	r9, r0
1000323a:	fa5f fa84 	uxtb.w	sl, r4
1000323e:	2800      	cmp	r0, #0
10003240:	d0d1      	beq.n	100031e6 <unwind_phase2_forced+0x46>
10003242:	6bac      	ldr	r4, [r5, #56]	; 0x38
10003244:	4633      	mov	r3, r6
10003246:	4632      	mov	r2, r6
10003248:	f04a 0110 	orr.w	r1, sl, #16
1000324c:	646c      	str	r4, [r5, #68]	; 0x44
1000324e:	2001      	movs	r0, #1
10003250:	e9cd 5800 	strd	r5, r8, [sp]
10003254:	47b8      	blx	r7
10003256:	b108      	cbz	r0, 1000325c <unwind_phase2_forced+0xbc>
10003258:	f04f 0909 	mov.w	r9, #9
1000325c:	4648      	mov	r0, r9
1000325e:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10003262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003266:	f1b9 0f07 	cmp.w	r9, #7
1000326a:	d1f5      	bne.n	10003258 <unwind_phase2_forced+0xb8>
1000326c:	4620      	mov	r0, r4
1000326e:	6c29      	ldr	r1, [r5, #64]	; 0x40
10003270:	f7ff ff74 	bl	1000315c <_Unwind_DebugHook>
10003274:	a805      	add	r0, sp, #20
10003276:	f000 fbc3 	bl	10003a00 <__restore_core_regs>
1000327a:	bf00      	nop

1000327c <_Unwind_GetCFA>:
1000327c:	6c40      	ldr	r0, [r0, #68]	; 0x44
1000327e:	4770      	bx	lr

10003280 <__gnu_Unwind_RaiseException>:
10003280:	b5f0      	push	{r4, r5, r6, r7, lr}
10003282:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003284:	b0f9      	sub	sp, #484	; 0x1e4
10003286:	f101 0c04 	add.w	ip, r1, #4
1000328a:	460e      	mov	r6, r1
1000328c:	640b      	str	r3, [r1, #64]	; 0x40
1000328e:	ac01      	add	r4, sp, #4
10003290:	4605      	mov	r5, r0
10003292:	f04f 37ff 	mov.w	r7, #4294967295
10003296:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000329a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000329c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100032a0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
100032a2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100032a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
100032a8:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
100032ac:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
100032b0:	9700      	str	r7, [sp, #0]
100032b2:	e006      	b.n	100032c2 <__gnu_Unwind_RaiseException+0x42>
100032b4:	692b      	ldr	r3, [r5, #16]
100032b6:	466a      	mov	r2, sp
100032b8:	4629      	mov	r1, r5
100032ba:	4798      	blx	r3
100032bc:	2808      	cmp	r0, #8
100032be:	4604      	mov	r4, r0
100032c0:	d108      	bne.n	100032d4 <__gnu_Unwind_RaiseException+0x54>
100032c2:	9910      	ldr	r1, [sp, #64]	; 0x40
100032c4:	4628      	mov	r0, r5
100032c6:	f7ff fec7 	bl	10003058 <get_eit_entry>
100032ca:	2800      	cmp	r0, #0
100032cc:	d0f2      	beq.n	100032b4 <__gnu_Unwind_RaiseException+0x34>
100032ce:	2009      	movs	r0, #9
100032d0:	b079      	add	sp, #484	; 0x1e4
100032d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100032d4:	4668      	mov	r0, sp
100032d6:	f7ff ff0d 	bl	100030f4 <restore_non_core_regs>
100032da:	2c06      	cmp	r4, #6
100032dc:	d1f7      	bne.n	100032ce <__gnu_Unwind_RaiseException+0x4e>
100032de:	4631      	mov	r1, r6
100032e0:	4628      	mov	r0, r5
100032e2:	f7ff ff3d 	bl	10003160 <unwind_phase2>
100032e6:	bf00      	nop

100032e8 <__gnu_Unwind_ForcedUnwind>:
100032e8:	b410      	push	{r4}
100032ea:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
100032ec:	60c1      	str	r1, [r0, #12]
100032ee:	4619      	mov	r1, r3
100032f0:	6182      	str	r2, [r0, #24]
100032f2:	2200      	movs	r2, #0
100032f4:	641c      	str	r4, [r3, #64]	; 0x40
100032f6:	bc10      	pop	{r4}
100032f8:	e752      	b.n	100031a0 <unwind_phase2_forced>
100032fa:	bf00      	nop

100032fc <__gnu_Unwind_Resume>:
100032fc:	b570      	push	{r4, r5, r6, lr}
100032fe:	6943      	ldr	r3, [r0, #20]
10003300:	68c6      	ldr	r6, [r0, #12]
10003302:	640b      	str	r3, [r1, #64]	; 0x40
10003304:	b9ae      	cbnz	r6, 10003332 <__gnu_Unwind_Resume+0x36>
10003306:	6903      	ldr	r3, [r0, #16]
10003308:	460a      	mov	r2, r1
1000330a:	4604      	mov	r4, r0
1000330c:	460d      	mov	r5, r1
1000330e:	4601      	mov	r1, r0
10003310:	2002      	movs	r0, #2
10003312:	4798      	blx	r3
10003314:	2807      	cmp	r0, #7
10003316:	d005      	beq.n	10003324 <__gnu_Unwind_Resume+0x28>
10003318:	2808      	cmp	r0, #8
1000331a:	d10f      	bne.n	1000333c <__gnu_Unwind_Resume+0x40>
1000331c:	4629      	mov	r1, r5
1000331e:	4620      	mov	r0, r4
10003320:	f7ff ff1e 	bl	10003160 <unwind_phase2>
10003324:	4630      	mov	r0, r6
10003326:	6c29      	ldr	r1, [r5, #64]	; 0x40
10003328:	f7ff ff18 	bl	1000315c <_Unwind_DebugHook>
1000332c:	1d28      	adds	r0, r5, #4
1000332e:	f000 fb67 	bl	10003a00 <__restore_core_regs>
10003332:	2201      	movs	r2, #1
10003334:	f7ff ff34 	bl	100031a0 <unwind_phase2_forced>
10003338:	f7fe ffbc 	bl	100022b4 <abort>
1000333c:	f7fe ffba 	bl	100022b4 <abort>

10003340 <__gnu_Unwind_Resume_or_Rethrow>:
10003340:	68c2      	ldr	r2, [r0, #12]
10003342:	b12a      	cbz	r2, 10003350 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10003344:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10003348:	2200      	movs	r2, #0
1000334a:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
1000334e:	e727      	b.n	100031a0 <unwind_phase2_forced>
10003350:	e796      	b.n	10003280 <__gnu_Unwind_RaiseException>
10003352:	bf00      	nop

10003354 <_Unwind_Complete>:
10003354:	4770      	bx	lr
10003356:	bf00      	nop

10003358 <_Unwind_DeleteException>:
10003358:	6883      	ldr	r3, [r0, #8]
1000335a:	4601      	mov	r1, r0
1000335c:	b10b      	cbz	r3, 10003362 <_Unwind_DeleteException+0xa>
1000335e:	2001      	movs	r0, #1
10003360:	4718      	bx	r3
10003362:	4770      	bx	lr

10003364 <_Unwind_VRS_Get>:
10003364:	2901      	cmp	r1, #1
10003366:	d015      	beq.n	10003394 <_Unwind_VRS_Get+0x30>
10003368:	d80c      	bhi.n	10003384 <_Unwind_VRS_Get+0x20>
1000336a:	b98b      	cbnz	r3, 10003390 <_Unwind_VRS_Get+0x2c>
1000336c:	2a0f      	cmp	r2, #15
1000336e:	bf94      	ite	ls
10003370:	2100      	movls	r1, #0
10003372:	2101      	movhi	r1, #1
10003374:	b961      	cbnz	r1, 10003390 <_Unwind_VRS_Get+0x2c>
10003376:	eb00 0282 	add.w	r2, r0, r2, lsl #2
1000337a:	4608      	mov	r0, r1
1000337c:	6853      	ldr	r3, [r2, #4]
1000337e:	9a00      	ldr	r2, [sp, #0]
10003380:	6013      	str	r3, [r2, #0]
10003382:	4770      	bx	lr
10003384:	3903      	subs	r1, #3
10003386:	2901      	cmp	r1, #1
10003388:	bf94      	ite	ls
1000338a:	2001      	movls	r0, #1
1000338c:	2002      	movhi	r0, #2
1000338e:	4770      	bx	lr
10003390:	2002      	movs	r0, #2
10003392:	4770      	bx	lr
10003394:	4608      	mov	r0, r1
10003396:	4770      	bx	lr

10003398 <_Unwind_GetGR>:
10003398:	b510      	push	{r4, lr}
1000339a:	b084      	sub	sp, #16
1000339c:	2300      	movs	r3, #0
1000339e:	460a      	mov	r2, r1
100033a0:	ac03      	add	r4, sp, #12
100033a2:	4619      	mov	r1, r3
100033a4:	9400      	str	r4, [sp, #0]
100033a6:	f7ff ffdd 	bl	10003364 <_Unwind_VRS_Get>
100033aa:	9803      	ldr	r0, [sp, #12]
100033ac:	b004      	add	sp, #16
100033ae:	bd10      	pop	{r4, pc}

100033b0 <_Unwind_VRS_Set>:
100033b0:	2901      	cmp	r1, #1
100033b2:	d015      	beq.n	100033e0 <_Unwind_VRS_Set+0x30>
100033b4:	d80c      	bhi.n	100033d0 <_Unwind_VRS_Set+0x20>
100033b6:	b98b      	cbnz	r3, 100033dc <_Unwind_VRS_Set+0x2c>
100033b8:	2a0f      	cmp	r2, #15
100033ba:	bf94      	ite	ls
100033bc:	2100      	movls	r1, #0
100033be:	2101      	movhi	r1, #1
100033c0:	b961      	cbnz	r1, 100033dc <_Unwind_VRS_Set+0x2c>
100033c2:	9b00      	ldr	r3, [sp, #0]
100033c4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
100033c8:	4608      	mov	r0, r1
100033ca:	681b      	ldr	r3, [r3, #0]
100033cc:	6053      	str	r3, [r2, #4]
100033ce:	4770      	bx	lr
100033d0:	3903      	subs	r1, #3
100033d2:	2901      	cmp	r1, #1
100033d4:	bf94      	ite	ls
100033d6:	2001      	movls	r0, #1
100033d8:	2002      	movhi	r0, #2
100033da:	4770      	bx	lr
100033dc:	2002      	movs	r0, #2
100033de:	4770      	bx	lr
100033e0:	4608      	mov	r0, r1
100033e2:	4770      	bx	lr

100033e4 <_Unwind_SetGR>:
100033e4:	b510      	push	{r4, lr}
100033e6:	b084      	sub	sp, #16
100033e8:	2300      	movs	r3, #0
100033ea:	ac03      	add	r4, sp, #12
100033ec:	9203      	str	r2, [sp, #12]
100033ee:	460a      	mov	r2, r1
100033f0:	4619      	mov	r1, r3
100033f2:	9400      	str	r4, [sp, #0]
100033f4:	f7ff ffdc 	bl	100033b0 <_Unwind_VRS_Set>
100033f8:	b004      	add	sp, #16
100033fa:	bd10      	pop	{r4, pc}

100033fc <__gnu_Unwind_Backtrace>:
100033fc:	b5f0      	push	{r4, r5, r6, r7, lr}
100033fe:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10003400:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10003404:	1d14      	adds	r4, r2, #4
10003406:	4606      	mov	r6, r0
10003408:	6413      	str	r3, [r2, #64]	; 0x40
1000340a:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
1000340e:	460d      	mov	r5, r1
10003410:	f04f 37ff 	mov.w	r7, #4294967295
10003414:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10003416:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
1000341a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
1000341c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10003420:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10003422:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10003426:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
1000342a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
1000342e:	9716      	str	r7, [sp, #88]	; 0x58
10003430:	e010      	b.n	10003454 <__gnu_Unwind_Backtrace+0x58>
10003432:	f7ff ffd7 	bl	100033e4 <_Unwind_SetGR>
10003436:	4629      	mov	r1, r5
10003438:	a816      	add	r0, sp, #88	; 0x58
1000343a:	47b0      	blx	r6
1000343c:	4603      	mov	r3, r0
1000343e:	aa16      	add	r2, sp, #88	; 0x58
10003440:	4669      	mov	r1, sp
10003442:	2008      	movs	r0, #8
10003444:	b983      	cbnz	r3, 10003468 <__gnu_Unwind_Backtrace+0x6c>
10003446:	9b04      	ldr	r3, [sp, #16]
10003448:	4798      	blx	r3
1000344a:	2805      	cmp	r0, #5
1000344c:	4604      	mov	r4, r0
1000344e:	d00c      	beq.n	1000346a <__gnu_Unwind_Backtrace+0x6e>
10003450:	2809      	cmp	r0, #9
10003452:	d00a      	beq.n	1000346a <__gnu_Unwind_Backtrace+0x6e>
10003454:	9926      	ldr	r1, [sp, #152]	; 0x98
10003456:	4668      	mov	r0, sp
10003458:	f7ff fdfe 	bl	10003058 <get_eit_entry>
1000345c:	4603      	mov	r3, r0
1000345e:	466a      	mov	r2, sp
10003460:	210c      	movs	r1, #12
10003462:	a816      	add	r0, sp, #88	; 0x58
10003464:	2b00      	cmp	r3, #0
10003466:	d0e4      	beq.n	10003432 <__gnu_Unwind_Backtrace+0x36>
10003468:	2409      	movs	r4, #9
1000346a:	a816      	add	r0, sp, #88	; 0x58
1000346c:	f7ff fe42 	bl	100030f4 <restore_non_core_regs>
10003470:	4620      	mov	r0, r4
10003472:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10003476:	bdf0      	pop	{r4, r5, r6, r7, pc}

10003478 <__gnu_unwind_pr_common>:
10003478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000347c:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
1000347e:	b089      	sub	sp, #36	; 0x24
10003480:	461e      	mov	r6, r3
10003482:	460d      	mov	r5, r1
10003484:	f854 3b04 	ldr.w	r3, [r4], #4
10003488:	4617      	mov	r7, r2
1000348a:	f000 0803 	and.w	r8, r0, #3
1000348e:	9406      	str	r4, [sp, #24]
10003490:	2e00      	cmp	r6, #0
10003492:	d07f      	beq.n	10003594 <__gnu_unwind_pr_common+0x11c>
10003494:	0c1a      	lsrs	r2, r3, #16
10003496:	041b      	lsls	r3, r3, #16
10003498:	f88d 201d 	strb.w	r2, [sp, #29]
1000349c:	b2d2      	uxtb	r2, r2
1000349e:	9305      	str	r3, [sp, #20]
100034a0:	2302      	movs	r3, #2
100034a2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
100034a6:	f88d 301c 	strb.w	r3, [sp, #28]
100034aa:	f1b8 0f02 	cmp.w	r8, #2
100034ae:	6d2b      	ldr	r3, [r5, #80]	; 0x50
100034b0:	bf08      	it	eq
100034b2:	6bac      	ldreq	r4, [r5, #56]	; 0x38
100034b4:	f013 0301 	ands.w	r3, r3, #1
100034b8:	d008      	beq.n	100034cc <__gnu_unwind_pr_common+0x54>
100034ba:	a905      	add	r1, sp, #20
100034bc:	4638      	mov	r0, r7
100034be:	f000 fba1 	bl	10003c04 <__gnu_unwind_execute>
100034c2:	bb90      	cbnz	r0, 1000352a <__gnu_unwind_pr_common+0xb2>
100034c4:	2008      	movs	r0, #8
100034c6:	b009      	add	sp, #36	; 0x24
100034c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100034cc:	f8d4 a000 	ldr.w	sl, [r4]
100034d0:	f1ba 0f00 	cmp.w	sl, #0
100034d4:	d0f1      	beq.n	100034ba <__gnu_unwind_pr_common+0x42>
100034d6:	9301      	str	r3, [sp, #4]
100034d8:	f000 0308 	and.w	r3, r0, #8
100034dc:	9302      	str	r3, [sp, #8]
100034de:	2e02      	cmp	r6, #2
100034e0:	d054      	beq.n	1000358c <__gnu_unwind_pr_common+0x114>
100034e2:	f8b4 a000 	ldrh.w	sl, [r4]
100034e6:	3404      	adds	r4, #4
100034e8:	f834 9c02 	ldrh.w	r9, [r4, #-2]
100034ec:	6cab      	ldr	r3, [r5, #72]	; 0x48
100034ee:	f029 0b01 	bic.w	fp, r9, #1
100034f2:	210f      	movs	r1, #15
100034f4:	4638      	mov	r0, r7
100034f6:	449b      	add	fp, r3
100034f8:	f7ff ff4e 	bl	10003398 <_Unwind_GetGR>
100034fc:	4583      	cmp	fp, r0
100034fe:	d818      	bhi.n	10003532 <__gnu_unwind_pr_common+0xba>
10003500:	f02a 0301 	bic.w	r3, sl, #1
10003504:	449b      	add	fp, r3
10003506:	4583      	cmp	fp, r0
10003508:	d913      	bls.n	10003532 <__gnu_unwind_pr_common+0xba>
1000350a:	ea4f 0349 	mov.w	r3, r9, lsl #1
1000350e:	f00a 0a01 	and.w	sl, sl, #1
10003512:	f003 0302 	and.w	r3, r3, #2
10003516:	ea43 030a 	orr.w	r3, r3, sl
1000351a:	2b01      	cmp	r3, #1
1000351c:	f000 80bf 	beq.w	1000369e <__gnu_unwind_pr_common+0x226>
10003520:	2b02      	cmp	r3, #2
10003522:	f000 8089 	beq.w	10003638 <__gnu_unwind_pr_common+0x1c0>
10003526:	2b00      	cmp	r3, #0
10003528:	d04d      	beq.n	100035c6 <__gnu_unwind_pr_common+0x14e>
1000352a:	2009      	movs	r0, #9
1000352c:	b009      	add	sp, #36	; 0x24
1000352e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10003532:	ea4f 0349 	mov.w	r3, r9, lsl #1
10003536:	f00a 0a01 	and.w	sl, sl, #1
1000353a:	f003 0302 	and.w	r3, r3, #2
1000353e:	ea43 030a 	orr.w	r3, r3, sl
10003542:	2b01      	cmp	r3, #1
10003544:	d03a      	beq.n	100035bc <__gnu_unwind_pr_common+0x144>
10003546:	2b02      	cmp	r3, #2
10003548:	d02a      	beq.n	100035a0 <__gnu_unwind_pr_common+0x128>
1000354a:	2b00      	cmp	r3, #0
1000354c:	d1ed      	bne.n	1000352a <__gnu_unwind_pr_common+0xb2>
1000354e:	3404      	adds	r4, #4
10003550:	f8d4 a000 	ldr.w	sl, [r4]
10003554:	f1ba 0f00 	cmp.w	sl, #0
10003558:	d1c1      	bne.n	100034de <__gnu_unwind_pr_common+0x66>
1000355a:	a905      	add	r1, sp, #20
1000355c:	4638      	mov	r0, r7
1000355e:	f000 fb51 	bl	10003c04 <__gnu_unwind_execute>
10003562:	2800      	cmp	r0, #0
10003564:	d1e1      	bne.n	1000352a <__gnu_unwind_pr_common+0xb2>
10003566:	9b01      	ldr	r3, [sp, #4]
10003568:	2b00      	cmp	r3, #0
1000356a:	d0ab      	beq.n	100034c4 <__gnu_unwind_pr_common+0x4c>
1000356c:	210f      	movs	r1, #15
1000356e:	4638      	mov	r0, r7
10003570:	f7ff ff12 	bl	10003398 <_Unwind_GetGR>
10003574:	210e      	movs	r1, #14
10003576:	4602      	mov	r2, r0
10003578:	4638      	mov	r0, r7
1000357a:	f7ff ff33 	bl	100033e4 <_Unwind_SetGR>
1000357e:	4638      	mov	r0, r7
10003580:	4a6e      	ldr	r2, [pc, #440]	; (1000373c <__gnu_unwind_pr_common+0x2c4>)
10003582:	210f      	movs	r1, #15
10003584:	f7ff ff2e 	bl	100033e4 <_Unwind_SetGR>
10003588:	2007      	movs	r0, #7
1000358a:	e7cf      	b.n	1000352c <__gnu_unwind_pr_common+0xb4>
1000358c:	f8d4 9004 	ldr.w	r9, [r4, #4]
10003590:	3408      	adds	r4, #8
10003592:	e7ab      	b.n	100034ec <__gnu_unwind_pr_common+0x74>
10003594:	021b      	lsls	r3, r3, #8
10003596:	9305      	str	r3, [sp, #20]
10003598:	2303      	movs	r3, #3
1000359a:	f8ad 301c 	strh.w	r3, [sp, #28]
1000359e:	e784      	b.n	100034aa <__gnu_unwind_pr_common+0x32>
100035a0:	6823      	ldr	r3, [r4, #0]
100035a2:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
100035a6:	f1b8 0f00 	cmp.w	r8, #0
100035aa:	d121      	bne.n	100035f0 <__gnu_unwind_pr_common+0x178>
100035ac:	2b00      	cmp	r3, #0
100035ae:	da00      	bge.n	100035b2 <__gnu_unwind_pr_common+0x13a>
100035b0:	3404      	adds	r4, #4
100035b2:	f10b 0b01 	add.w	fp, fp, #1
100035b6:	eb04 048b 	add.w	r4, r4, fp, lsl #2
100035ba:	e7c9      	b.n	10003550 <__gnu_unwind_pr_common+0xd8>
100035bc:	f1b8 0f00 	cmp.w	r8, #0
100035c0:	d120      	bne.n	10003604 <__gnu_unwind_pr_common+0x18c>
100035c2:	3408      	adds	r4, #8
100035c4:	e7c4      	b.n	10003550 <__gnu_unwind_pr_common+0xd8>
100035c6:	f1b8 0f00 	cmp.w	r8, #0
100035ca:	d0c0      	beq.n	1000354e <__gnu_unwind_pr_common+0xd6>
100035cc:	4620      	mov	r0, r4
100035ce:	3404      	adds	r4, #4
100035d0:	f7ff fcf4 	bl	10002fbc <selfrel_offset31>
100035d4:	4606      	mov	r6, r0
100035d6:	63ac      	str	r4, [r5, #56]	; 0x38
100035d8:	4628      	mov	r0, r5
100035da:	e000      	b.n	100035de <__gnu_unwind_pr_common+0x166>
100035dc:	bf00      	nop
100035de:	2800      	cmp	r0, #0
100035e0:	d0a3      	beq.n	1000352a <__gnu_unwind_pr_common+0xb2>
100035e2:	4638      	mov	r0, r7
100035e4:	4632      	mov	r2, r6
100035e6:	210f      	movs	r1, #15
100035e8:	f7ff fefc 	bl	100033e4 <_Unwind_SetGR>
100035ec:	2007      	movs	r0, #7
100035ee:	e79d      	b.n	1000352c <__gnu_unwind_pr_common+0xb4>
100035f0:	f8d5 9020 	ldr.w	r9, [r5, #32]
100035f4:	210d      	movs	r1, #13
100035f6:	4638      	mov	r0, r7
100035f8:	f7ff fece 	bl	10003398 <_Unwind_GetGR>
100035fc:	4581      	cmp	r9, r0
100035fe:	d079      	beq.n	100036f4 <__gnu_unwind_pr_common+0x27c>
10003600:	6823      	ldr	r3, [r4, #0]
10003602:	e7d3      	b.n	100035ac <__gnu_unwind_pr_common+0x134>
10003604:	f8d5 9020 	ldr.w	r9, [r5, #32]
10003608:	210d      	movs	r1, #13
1000360a:	4638      	mov	r0, r7
1000360c:	f7ff fec4 	bl	10003398 <_Unwind_GetGR>
10003610:	4581      	cmp	r9, r0
10003612:	d1d6      	bne.n	100035c2 <__gnu_unwind_pr_common+0x14a>
10003614:	6aab      	ldr	r3, [r5, #40]	; 0x28
10003616:	429c      	cmp	r4, r3
10003618:	d1d3      	bne.n	100035c2 <__gnu_unwind_pr_common+0x14a>
1000361a:	4620      	mov	r0, r4
1000361c:	210f      	movs	r1, #15
1000361e:	f7ff fccd 	bl	10002fbc <selfrel_offset31>
10003622:	4602      	mov	r2, r0
10003624:	4638      	mov	r0, r7
10003626:	f7ff fedd 	bl	100033e4 <_Unwind_SetGR>
1000362a:	4638      	mov	r0, r7
1000362c:	462a      	mov	r2, r5
1000362e:	2100      	movs	r1, #0
10003630:	f7ff fed8 	bl	100033e4 <_Unwind_SetGR>
10003634:	2007      	movs	r0, #7
10003636:	e779      	b.n	1000352c <__gnu_unwind_pr_common+0xb4>
10003638:	6823      	ldr	r3, [r4, #0]
1000363a:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
1000363e:	f1b8 0f00 	cmp.w	r8, #0
10003642:	d1d5      	bne.n	100035f0 <__gnu_unwind_pr_common+0x178>
10003644:	9a02      	ldr	r2, [sp, #8]
10003646:	b112      	cbz	r2, 1000364e <__gnu_unwind_pr_common+0x1d6>
10003648:	f1bb 0f00 	cmp.w	fp, #0
1000364c:	d1ae      	bne.n	100035ac <__gnu_unwind_pr_common+0x134>
1000364e:	f105 0358 	add.w	r3, r5, #88	; 0x58
10003652:	f8cd 800c 	str.w	r8, [sp, #12]
10003656:	f104 0a04 	add.w	sl, r4, #4
1000365a:	46b0      	mov	r8, r6
1000365c:	f04f 0900 	mov.w	r9, #0
10003660:	461e      	mov	r6, r3
10003662:	e00d      	b.n	10003680 <__gnu_unwind_pr_common+0x208>
10003664:	4650      	mov	r0, sl
10003666:	9604      	str	r6, [sp, #16]
10003668:	2200      	movs	r2, #0
1000366a:	f7ff fd71 	bl	10003150 <_Unwind_decode_typeinfo_ptr.constprop.0>
1000366e:	ab04      	add	r3, sp, #16
10003670:	4601      	mov	r1, r0
10003672:	4628      	mov	r0, r5
10003674:	f10a 0a04 	add.w	sl, sl, #4
10003678:	e000      	b.n	1000367c <__gnu_unwind_pr_common+0x204>
1000367a:	bf00      	nop
1000367c:	2800      	cmp	r0, #0
1000367e:	d14a      	bne.n	10003716 <__gnu_unwind_pr_common+0x29e>
10003680:	45d9      	cmp	r9, fp
10003682:	f109 0901 	add.w	r9, r9, #1
10003686:	d1ed      	bne.n	10003664 <__gnu_unwind_pr_common+0x1ec>
10003688:	210d      	movs	r1, #13
1000368a:	4638      	mov	r0, r7
1000368c:	f7ff fe84 	bl	10003398 <_Unwind_GetGR>
10003690:	9b04      	ldr	r3, [sp, #16]
10003692:	4602      	mov	r2, r0
10003694:	2006      	movs	r0, #6
10003696:	622a      	str	r2, [r5, #32]
10003698:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
1000369c:	e746      	b.n	1000352c <__gnu_unwind_pr_common+0xb4>
1000369e:	f1b8 0f00 	cmp.w	r8, #0
100036a2:	d1af      	bne.n	10003604 <__gnu_unwind_pr_common+0x18c>
100036a4:	6863      	ldr	r3, [r4, #4]
100036a6:	6822      	ldr	r2, [r4, #0]
100036a8:	1c99      	adds	r1, r3, #2
100036aa:	ea4f 72d2 	mov.w	r2, r2, lsr #31
100036ae:	f43f af3c 	beq.w	1000352a <__gnu_unwind_pr_common+0xb2>
100036b2:	f105 0158 	add.w	r1, r5, #88	; 0x58
100036b6:	3301      	adds	r3, #1
100036b8:	9104      	str	r1, [sp, #16]
100036ba:	d031      	beq.n	10003720 <__gnu_unwind_pr_common+0x2a8>
100036bc:	1d20      	adds	r0, r4, #4
100036be:	f7ff fd47 	bl	10003150 <_Unwind_decode_typeinfo_ptr.constprop.0>
100036c2:	ab04      	add	r3, sp, #16
100036c4:	4601      	mov	r1, r0
100036c6:	4628      	mov	r0, r5
100036c8:	e000      	b.n	100036cc <__gnu_unwind_pr_common+0x254>
100036ca:	bf00      	nop
100036cc:	2800      	cmp	r0, #0
100036ce:	f43f af78 	beq.w	100035c2 <__gnu_unwind_pr_common+0x14a>
100036d2:	4681      	mov	r9, r0
100036d4:	210d      	movs	r1, #13
100036d6:	4638      	mov	r0, r7
100036d8:	f7ff fe5e 	bl	10003398 <_Unwind_GetGR>
100036dc:	f1b9 0f02 	cmp.w	r9, #2
100036e0:	6228      	str	r0, [r5, #32]
100036e2:	d122      	bne.n	1000372a <__gnu_unwind_pr_common+0x2b2>
100036e4:	462b      	mov	r3, r5
100036e6:	9a04      	ldr	r2, [sp, #16]
100036e8:	f843 2f2c 	str.w	r2, [r3, #44]!
100036ec:	626b      	str	r3, [r5, #36]	; 0x24
100036ee:	2006      	movs	r0, #6
100036f0:	62ac      	str	r4, [r5, #40]	; 0x28
100036f2:	e71b      	b.n	1000352c <__gnu_unwind_pr_common+0xb4>
100036f4:	6aab      	ldr	r3, [r5, #40]	; 0x28
100036f6:	429c      	cmp	r4, r3
100036f8:	d182      	bne.n	10003600 <__gnu_unwind_pr_common+0x188>
100036fa:	2304      	movs	r3, #4
100036fc:	2200      	movs	r2, #0
100036fe:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10003702:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10003706:	18e3      	adds	r3, r4, r3
10003708:	636b      	str	r3, [r5, #52]	; 0x34
1000370a:	6823      	ldr	r3, [r4, #0]
1000370c:	2b00      	cmp	r3, #0
1000370e:	db0f      	blt.n	10003730 <__gnu_unwind_pr_common+0x2b8>
10003710:	2301      	movs	r3, #1
10003712:	9301      	str	r3, [sp, #4]
10003714:	e74d      	b.n	100035b2 <__gnu_unwind_pr_common+0x13a>
10003716:	4646      	mov	r6, r8
10003718:	6823      	ldr	r3, [r4, #0]
1000371a:	f8dd 800c 	ldr.w	r8, [sp, #12]
1000371e:	e745      	b.n	100035ac <__gnu_unwind_pr_common+0x134>
10003720:	210d      	movs	r1, #13
10003722:	4638      	mov	r0, r7
10003724:	f7ff fe38 	bl	10003398 <_Unwind_GetGR>
10003728:	6228      	str	r0, [r5, #32]
1000372a:	9b04      	ldr	r3, [sp, #16]
1000372c:	626b      	str	r3, [r5, #36]	; 0x24
1000372e:	e7de      	b.n	100036ee <__gnu_unwind_pr_common+0x276>
10003730:	f10b 0001 	add.w	r0, fp, #1
10003734:	210f      	movs	r1, #15
10003736:	eb04 0080 	add.w	r0, r4, r0, lsl #2
1000373a:	e770      	b.n	1000361e <__gnu_unwind_pr_common+0x1a6>
1000373c:	00000000 	andeq	r0, r0, r0

10003740 <__aeabi_unwind_cpp_pr0>:
10003740:	2300      	movs	r3, #0
10003742:	e699      	b.n	10003478 <__gnu_unwind_pr_common>

10003744 <__aeabi_unwind_cpp_pr1>:
10003744:	2301      	movs	r3, #1
10003746:	e697      	b.n	10003478 <__gnu_unwind_pr_common>

10003748 <__aeabi_unwind_cpp_pr2>:
10003748:	2302      	movs	r3, #2
1000374a:	e695      	b.n	10003478 <__gnu_unwind_pr_common>

1000374c <_Unwind_VRS_Pop>:
1000374c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10003750:	4606      	mov	r6, r0
10003752:	b0c3      	sub	sp, #268	; 0x10c
10003754:	4615      	mov	r5, r2
10003756:	461c      	mov	r4, r3
10003758:	2904      	cmp	r1, #4
1000375a:	f200 80c2 	bhi.w	100038e2 <_Unwind_VRS_Pop+0x196>
1000375e:	e8df f001 	tbb	[pc, r1]
10003762:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
10003766:	2c000003 	stccs	0, cr0, [r0], {3}
1000376a:	f040 80ba 	bne.w	100038e2 <_Unwind_VRS_Pop+0x196>
1000376e:	2a10      	cmp	r2, #16
10003770:	f200 80b7 	bhi.w	100038e2 <_Unwind_VRS_Pop+0x196>
10003774:	6803      	ldr	r3, [r0, #0]
10003776:	06df      	lsls	r7, r3, #27
10003778:	f100 80b7 	bmi.w	100038ea <_Unwind_VRS_Pop+0x19e>
1000377c:	af20      	add	r7, sp, #128	; 0x80
1000377e:	4638      	mov	r0, r7
10003780:	f000 f9b0 	bl	10003ae4 <__gnu_Unwind_Save_WMMXC>
10003784:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10003786:	4639      	mov	r1, r7
10003788:	2300      	movs	r3, #0
1000378a:	f04f 0c01 	mov.w	ip, #1
1000378e:	fa0c f203 	lsl.w	r2, ip, r3
10003792:	4620      	mov	r0, r4
10003794:	3301      	adds	r3, #1
10003796:	422a      	tst	r2, r5
10003798:	d003      	beq.n	100037a2 <_Unwind_VRS_Pop+0x56>
1000379a:	f850 2b04 	ldr.w	r2, [r0], #4
1000379e:	4604      	mov	r4, r0
100037a0:	600a      	str	r2, [r1, #0]
100037a2:	2b04      	cmp	r3, #4
100037a4:	f101 0104 	add.w	r1, r1, #4
100037a8:	d1f1      	bne.n	1000378e <_Unwind_VRS_Pop+0x42>
100037aa:	4638      	mov	r0, r7
100037ac:	63b4      	str	r4, [r6, #56]	; 0x38
100037ae:	f000 f98f 	bl	10003ad0 <__gnu_Unwind_Restore_WMMXC>
100037b2:	2000      	movs	r0, #0
100037b4:	b043      	add	sp, #268	; 0x10c
100037b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100037ba:	2c03      	cmp	r4, #3
100037bc:	f040 8091 	bne.w	100038e2 <_Unwind_VRS_Pop+0x196>
100037c0:	fa1f f882 	uxth.w	r8, r2
100037c4:	0c14      	lsrs	r4, r2, #16
100037c6:	eb08 4512 	add.w	r5, r8, r2, lsr #16
100037ca:	2d10      	cmp	r5, #16
100037cc:	f200 8089 	bhi.w	100038e2 <_Unwind_VRS_Pop+0x196>
100037d0:	6803      	ldr	r3, [r0, #0]
100037d2:	071a      	lsls	r2, r3, #28
100037d4:	f100 80cd 	bmi.w	10003972 <_Unwind_VRS_Pop+0x226>
100037d8:	af20      	add	r7, sp, #128	; 0x80
100037da:	4638      	mov	r0, r7
100037dc:	f000 f956 	bl	10003a8c <__gnu_Unwind_Save_WMMXD>
100037e0:	6bb5      	ldr	r5, [r6, #56]	; 0x38
100037e2:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
100037e6:	f1b8 0f00 	cmp.w	r8, #0
100037ea:	d00b      	beq.n	10003804 <_Unwind_VRS_Pop+0xb8>
100037ec:	460b      	mov	r3, r1
100037ee:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
100037f2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
100037f6:	1ae8      	subs	r0, r5, r3
100037f8:	581a      	ldr	r2, [r3, r0]
100037fa:	f843 2b04 	str.w	r2, [r3], #4
100037fe:	428b      	cmp	r3, r1
10003800:	d1fa      	bne.n	100037f8 <_Unwind_VRS_Pop+0xac>
10003802:	4445      	add	r5, r8
10003804:	4638      	mov	r0, r7
10003806:	63b5      	str	r5, [r6, #56]	; 0x38
10003808:	f000 f91e 	bl	10003a48 <__gnu_Unwind_Restore_WMMXD>
1000380c:	2000      	movs	r0, #0
1000380e:	b043      	add	sp, #268	; 0x10c
10003810:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10003814:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
10003818:	ea4f 4812 	mov.w	r8, r2, lsr #16
1000381c:	b295      	uxth	r5, r2
1000381e:	2b01      	cmp	r3, #1
10003820:	d15f      	bne.n	100038e2 <_Unwind_VRS_Pop+0x196>
10003822:	2c01      	cmp	r4, #1
10003824:	eb08 0905 	add.w	r9, r8, r5
10003828:	d058      	beq.n	100038dc <_Unwind_VRS_Pop+0x190>
1000382a:	f1b9 0f20 	cmp.w	r9, #32
1000382e:	d858      	bhi.n	100038e2 <_Unwind_VRS_Pop+0x196>
10003830:	f1b8 0f0f 	cmp.w	r8, #15
10003834:	d975      	bls.n	10003922 <_Unwind_VRS_Pop+0x1d6>
10003836:	2c05      	cmp	r4, #5
10003838:	46a9      	mov	r9, r5
1000383a:	f000 80a4 	beq.w	10003986 <_Unwind_VRS_Pop+0x23a>
1000383e:	2d00      	cmp	r5, #0
10003840:	d14f      	bne.n	100038e2 <_Unwind_VRS_Pop+0x196>
10003842:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10003844:	b365      	cbz	r5, 100038a0 <_Unwind_VRS_Pop+0x154>
10003846:	af20      	add	r7, sp, #128	; 0x80
10003848:	f04f 0900 	mov.w	r9, #0
1000384c:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
10003850:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
10003854:	3f04      	subs	r7, #4
10003856:	f853 1b04 	ldr.w	r1, [r3], #4
1000385a:	429d      	cmp	r5, r3
1000385c:	f847 1f04 	str.w	r1, [r7, #4]!
10003860:	d1f9      	bne.n	10003856 <_Unwind_VRS_Pop+0x10a>
10003862:	f1b9 0f00 	cmp.w	r9, #0
10003866:	d00f      	beq.n	10003888 <_Unwind_VRS_Pop+0x13c>
10003868:	466f      	mov	r7, sp
1000386a:	4641      	mov	r1, r8
1000386c:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
10003870:	2910      	cmp	r1, #16
10003872:	bf38      	it	cc
10003874:	2110      	movcc	r1, #16
10003876:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
1000387a:	3984      	subs	r1, #132	; 0x84
1000387c:	f853 0b04 	ldr.w	r0, [r3], #4
10003880:	429d      	cmp	r5, r3
10003882:	f841 0f04 	str.w	r0, [r1, #4]!
10003886:	d1f9      	bne.n	1000387c <_Unwind_VRS_Pop+0x130>
10003888:	2c01      	cmp	r4, #1
1000388a:	d07a      	beq.n	10003982 <_Unwind_VRS_Pop+0x236>
1000388c:	f1b8 0f0f 	cmp.w	r8, #15
10003890:	63b5      	str	r5, [r6, #56]	; 0x38
10003892:	d96a      	bls.n	1000396a <_Unwind_VRS_Pop+0x21e>
10003894:	f1b9 0f00 	cmp.w	r9, #0
10003898:	d002      	beq.n	100038a0 <_Unwind_VRS_Pop+0x154>
1000389a:	4668      	mov	r0, sp
1000389c:	f000 f8cc 	bl	10003a38 <__gnu_Unwind_Restore_VFP_D_16_to_31>
100038a0:	2000      	movs	r0, #0
100038a2:	b043      	add	sp, #268	; 0x10c
100038a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100038a8:	b9dc      	cbnz	r4, 100038e2 <_Unwind_VRS_Pop+0x196>
100038aa:	6b87      	ldr	r7, [r0, #56]	; 0x38
100038ac:	4623      	mov	r3, r4
100038ae:	fa1f fc82 	uxth.w	ip, r2
100038b2:	2001      	movs	r0, #1
100038b4:	1d34      	adds	r4, r6, #4
100038b6:	fa00 f103 	lsl.w	r1, r0, r3
100038ba:	463a      	mov	r2, r7
100038bc:	ea11 0f0c 	tst.w	r1, ip
100038c0:	d004      	beq.n	100038cc <_Unwind_VRS_Pop+0x180>
100038c2:	f852 1b04 	ldr.w	r1, [r2], #4
100038c6:	4617      	mov	r7, r2
100038c8:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
100038cc:	3301      	adds	r3, #1
100038ce:	2b10      	cmp	r3, #16
100038d0:	d1f1      	bne.n	100038b6 <_Unwind_VRS_Pop+0x16a>
100038d2:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
100038d6:	d1e3      	bne.n	100038a0 <_Unwind_VRS_Pop+0x154>
100038d8:	63b7      	str	r7, [r6, #56]	; 0x38
100038da:	e003      	b.n	100038e4 <_Unwind_VRS_Pop+0x198>
100038dc:	f1b9 0f10 	cmp.w	r9, #16
100038e0:	d90b      	bls.n	100038fa <_Unwind_VRS_Pop+0x1ae>
100038e2:	2002      	movs	r0, #2
100038e4:	b043      	add	sp, #268	; 0x10c
100038e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100038ea:	f023 0310 	bic.w	r3, r3, #16
100038ee:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
100038f2:	6033      	str	r3, [r6, #0]
100038f4:	f000 f8f6 	bl	10003ae4 <__gnu_Unwind_Save_WMMXC>
100038f8:	e740      	b.n	1000377c <_Unwind_VRS_Pop+0x30>
100038fa:	f1b8 0f0f 	cmp.w	r8, #15
100038fe:	d8f0      	bhi.n	100038e2 <_Unwind_VRS_Pop+0x196>
10003900:	6803      	ldr	r3, [r0, #0]
10003902:	07d8      	lsls	r0, r3, #31
10003904:	d450      	bmi.n	100039a8 <_Unwind_VRS_Pop+0x25c>
10003906:	af20      	add	r7, sp, #128	; 0x80
10003908:	4638      	mov	r0, r7
1000390a:	f000 f889 	bl	10003a20 <__gnu_Unwind_Save_VFP>
1000390e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10003910:	2d00      	cmp	r5, #0
10003912:	d199      	bne.n	10003848 <_Unwind_VRS_Pop+0xfc>
10003914:	461d      	mov	r5, r3
10003916:	3504      	adds	r5, #4
10003918:	4638      	mov	r0, r7
1000391a:	63b5      	str	r5, [r6, #56]	; 0x38
1000391c:	f000 f87c 	bl	10003a18 <__gnu_Unwind_Restore_VFP>
10003920:	e7be      	b.n	100038a0 <_Unwind_VRS_Pop+0x154>
10003922:	f1b9 0f10 	cmp.w	r9, #16
10003926:	d958      	bls.n	100039da <_Unwind_VRS_Pop+0x28e>
10003928:	2c05      	cmp	r4, #5
1000392a:	d1da      	bne.n	100038e2 <_Unwind_VRS_Pop+0x196>
1000392c:	6833      	ldr	r3, [r6, #0]
1000392e:	f1a9 0910 	sub.w	r9, r9, #16
10003932:	07dd      	lsls	r5, r3, #31
10003934:	d509      	bpl.n	1000394a <_Unwind_VRS_Pop+0x1fe>
10003936:	f023 0301 	bic.w	r3, r3, #1
1000393a:	4630      	mov	r0, r6
1000393c:	f043 0302 	orr.w	r3, r3, #2
10003940:	f840 3b48 	str.w	r3, [r0], #72
10003944:	f000 f874 	bl	10003a30 <__gnu_Unwind_Save_VFP_D>
10003948:	6833      	ldr	r3, [r6, #0]
1000394a:	0759      	lsls	r1, r3, #29
1000394c:	d421      	bmi.n	10003992 <_Unwind_VRS_Pop+0x246>
1000394e:	a820      	add	r0, sp, #128	; 0x80
10003950:	f000 f86e 	bl	10003a30 <__gnu_Unwind_Save_VFP_D>
10003954:	466f      	mov	r7, sp
10003956:	f1c8 0510 	rsb	r5, r8, #16
1000395a:	4638      	mov	r0, r7
1000395c:	f000 f870 	bl	10003a40 <__gnu_Unwind_Save_VFP_D_16_to_31>
10003960:	2d00      	cmp	r5, #0
10003962:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10003964:	dd81      	ble.n	1000386a <_Unwind_VRS_Pop+0x11e>
10003966:	af20      	add	r7, sp, #128	; 0x80
10003968:	e770      	b.n	1000384c <_Unwind_VRS_Pop+0x100>
1000396a:	a820      	add	r0, sp, #128	; 0x80
1000396c:	f000 f85c 	bl	10003a28 <__gnu_Unwind_Restore_VFP_D>
10003970:	e790      	b.n	10003894 <_Unwind_VRS_Pop+0x148>
10003972:	f023 0308 	bic.w	r3, r3, #8
10003976:	f500 70a8 	add.w	r0, r0, #336	; 0x150
1000397a:	6033      	str	r3, [r6, #0]
1000397c:	f000 f886 	bl	10003a8c <__gnu_Unwind_Save_WMMXD>
10003980:	e72a      	b.n	100037d8 <_Unwind_VRS_Pop+0x8c>
10003982:	af20      	add	r7, sp, #128	; 0x80
10003984:	e7c7      	b.n	10003916 <_Unwind_VRS_Pop+0x1ca>
10003986:	2d00      	cmp	r5, #0
10003988:	f43f af5b 	beq.w	10003842 <_Unwind_VRS_Pop+0xf6>
1000398c:	6833      	ldr	r3, [r6, #0]
1000398e:	075a      	lsls	r2, r3, #29
10003990:	d5e0      	bpl.n	10003954 <_Unwind_VRS_Pop+0x208>
10003992:	f023 0304 	bic.w	r3, r3, #4
10003996:	4630      	mov	r0, r6
10003998:	f840 3bd0 	str.w	r3, [r0], #208
1000399c:	f000 f850 	bl	10003a40 <__gnu_Unwind_Save_VFP_D_16_to_31>
100039a0:	f1b8 0f0f 	cmp.w	r8, #15
100039a4:	d8d6      	bhi.n	10003954 <_Unwind_VRS_Pop+0x208>
100039a6:	e7d2      	b.n	1000394e <_Unwind_VRS_Pop+0x202>
100039a8:	f023 0303 	bic.w	r3, r3, #3
100039ac:	4630      	mov	r0, r6
100039ae:	f840 3b48 	str.w	r3, [r0], #72
100039b2:	f000 f835 	bl	10003a20 <__gnu_Unwind_Save_VFP>
100039b6:	2c01      	cmp	r4, #1
100039b8:	d0a5      	beq.n	10003906 <_Unwind_VRS_Pop+0x1ba>
100039ba:	f1b8 0f0f 	cmp.w	r8, #15
100039be:	f63f af40 	bhi.w	10003842 <_Unwind_VRS_Pop+0xf6>
100039c2:	af20      	add	r7, sp, #128	; 0x80
100039c4:	4638      	mov	r0, r7
100039c6:	f000 f833 	bl	10003a30 <__gnu_Unwind_Save_VFP_D>
100039ca:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100039cc:	2d00      	cmp	r5, #0
100039ce:	f47f af3b 	bne.w	10003848 <_Unwind_VRS_Pop+0xfc>
100039d2:	4638      	mov	r0, r7
100039d4:	f000 f828 	bl	10003a28 <__gnu_Unwind_Restore_VFP_D>
100039d8:	e762      	b.n	100038a0 <_Unwind_VRS_Pop+0x154>
100039da:	6833      	ldr	r3, [r6, #0]
100039dc:	07d9      	lsls	r1, r3, #31
100039de:	d5ea      	bpl.n	100039b6 <_Unwind_VRS_Pop+0x26a>
100039e0:	2c05      	cmp	r4, #5
100039e2:	d1e1      	bne.n	100039a8 <_Unwind_VRS_Pop+0x25c>
100039e4:	f023 0301 	bic.w	r3, r3, #1
100039e8:	4630      	mov	r0, r6
100039ea:	af20      	add	r7, sp, #128	; 0x80
100039ec:	f043 0302 	orr.w	r3, r3, #2
100039f0:	f840 3b48 	str.w	r3, [r0], #72
100039f4:	f000 f81c 	bl	10003a30 <__gnu_Unwind_Save_VFP_D>
100039f8:	4638      	mov	r0, r7
100039fa:	f000 f819 	bl	10003a30 <__gnu_Unwind_Save_VFP_D>
100039fe:	e7e4      	b.n	100039ca <_Unwind_VRS_Pop+0x27e>

10003a00 <__restore_core_regs>:
10003a00:	f100 0134 	add.w	r1, r0, #52	; 0x34
10003a04:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
10003a08:	469c      	mov	ip, r3
10003a0a:	46a6      	mov	lr, r4
10003a0c:	f84c 5d04 	str.w	r5, [ip, #-4]!
10003a10:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10003a14:	46e5      	mov	sp, ip
10003a16:	bd00      	pop	{pc}

10003a18 <__gnu_Unwind_Restore_VFP>:
10003a18:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
10003a1c:	4770      	bx	lr
10003a1e:	bf00      	nop

10003a20 <__gnu_Unwind_Save_VFP>:
10003a20:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
10003a24:	4770      	bx	lr
10003a26:	bf00      	nop

10003a28 <__gnu_Unwind_Restore_VFP_D>:
10003a28:	ec90 0b20 	vldmia	r0, {d0-d15}
10003a2c:	4770      	bx	lr
10003a2e:	bf00      	nop

10003a30 <__gnu_Unwind_Save_VFP_D>:
10003a30:	ec80 0b20 	vstmia	r0, {d0-d15}
10003a34:	4770      	bx	lr
10003a36:	bf00      	nop

10003a38 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
10003a38:	ecd0 0b20 	vldmia	r0, {d16-d31}
10003a3c:	4770      	bx	lr
10003a3e:	bf00      	nop

10003a40 <__gnu_Unwind_Save_VFP_D_16_to_31>:
10003a40:	ecc0 0b20 	vstmia	r0, {d16-d31}
10003a44:	4770      	bx	lr
10003a46:	bf00      	nop

10003a48 <__gnu_Unwind_Restore_WMMXD>:
10003a48:	ecf0 0102 	ldfe	f0, [r0], #8
10003a4c:	ecf0 1102 	ldfe	f1, [r0], #8
10003a50:	ecf0 2102 	ldfe	f2, [r0], #8
10003a54:	ecf0 3102 	ldfe	f3, [r0], #8
10003a58:	ecf0 4102 	ldfe	f4, [r0], #8
10003a5c:	ecf0 5102 	ldfe	f5, [r0], #8
10003a60:	ecf0 6102 	ldfe	f6, [r0], #8
10003a64:	ecf0 7102 	ldfe	f7, [r0], #8
10003a68:	ecf0 8102 	ldfp	f0, [r0], #8
10003a6c:	ecf0 9102 	ldfp	f1, [r0], #8
10003a70:	ecf0 a102 	ldfp	f2, [r0], #8
10003a74:	ecf0 b102 	ldfp	f3, [r0], #8
10003a78:	ecf0 c102 	ldfp	f4, [r0], #8
10003a7c:	ecf0 d102 	ldfp	f5, [r0], #8
10003a80:	ecf0 e102 	ldfp	f6, [r0], #8
10003a84:	ecf0 f102 	ldfp	f7, [r0], #8
10003a88:	4770      	bx	lr
10003a8a:	bf00      	nop

10003a8c <__gnu_Unwind_Save_WMMXD>:
10003a8c:	ece0 0102 	stfe	f0, [r0], #8
10003a90:	ece0 1102 	stfe	f1, [r0], #8
10003a94:	ece0 2102 	stfe	f2, [r0], #8
10003a98:	ece0 3102 	stfe	f3, [r0], #8
10003a9c:	ece0 4102 	stfe	f4, [r0], #8
10003aa0:	ece0 5102 	stfe	f5, [r0], #8
10003aa4:	ece0 6102 	stfe	f6, [r0], #8
10003aa8:	ece0 7102 	stfe	f7, [r0], #8
10003aac:	ece0 8102 	stfp	f0, [r0], #8
10003ab0:	ece0 9102 	stfp	f1, [r0], #8
10003ab4:	ece0 a102 	stfp	f2, [r0], #8
10003ab8:	ece0 b102 	stfp	f3, [r0], #8
10003abc:	ece0 c102 	stfp	f4, [r0], #8
10003ac0:	ece0 d102 	stfp	f5, [r0], #8
10003ac4:	ece0 e102 	stfp	f6, [r0], #8
10003ac8:	ece0 f102 	stfp	f7, [r0], #8
10003acc:	4770      	bx	lr
10003ace:	bf00      	nop

10003ad0 <__gnu_Unwind_Restore_WMMXC>:
10003ad0:	fcb0 8101 	ldc2	1, cr8, [r0], #4
10003ad4:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10003ad8:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10003adc:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10003ae0:	4770      	bx	lr
10003ae2:	bf00      	nop

10003ae4 <__gnu_Unwind_Save_WMMXC>:
10003ae4:	fca0 8101 	stc2	1, cr8, [r0], #4
10003ae8:	fca0 9101 	stc2	1, cr9, [r0], #4
10003aec:	fca0 a101 	stc2	1, cr10, [r0], #4
10003af0:	fca0 b101 	stc2	1, cr11, [r0], #4
10003af4:	4770      	bx	lr
10003af6:	bf00      	nop

10003af8 <_Unwind_RaiseException>:
10003af8:	46ec      	mov	ip, sp
10003afa:	b500      	push	{lr}
10003afc:	e92d 5000 	stmdb	sp!, {ip, lr}
10003b00:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003b04:	f04f 0300 	mov.w	r3, #0
10003b08:	e92d 000c 	stmdb	sp!, {r2, r3}
10003b0c:	a901      	add	r1, sp, #4
10003b0e:	f7ff fbb7 	bl	10003280 <__gnu_Unwind_RaiseException>
10003b12:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003b16:	b012      	add	sp, #72	; 0x48
10003b18:	4770      	bx	lr
10003b1a:	bf00      	nop

10003b1c <_Unwind_Resume>:
10003b1c:	46ec      	mov	ip, sp
10003b1e:	b500      	push	{lr}
10003b20:	e92d 5000 	stmdb	sp!, {ip, lr}
10003b24:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003b28:	f04f 0300 	mov.w	r3, #0
10003b2c:	e92d 000c 	stmdb	sp!, {r2, r3}
10003b30:	a901      	add	r1, sp, #4
10003b32:	f7ff fbe3 	bl	100032fc <__gnu_Unwind_Resume>
10003b36:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003b3a:	b012      	add	sp, #72	; 0x48
10003b3c:	4770      	bx	lr
10003b3e:	bf00      	nop

10003b40 <_Unwind_Resume_or_Rethrow>:
10003b40:	46ec      	mov	ip, sp
10003b42:	b500      	push	{lr}
10003b44:	e92d 5000 	stmdb	sp!, {ip, lr}
10003b48:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003b4c:	f04f 0300 	mov.w	r3, #0
10003b50:	e92d 000c 	stmdb	sp!, {r2, r3}
10003b54:	a901      	add	r1, sp, #4
10003b56:	f7ff fbf3 	bl	10003340 <__gnu_Unwind_Resume_or_Rethrow>
10003b5a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003b5e:	b012      	add	sp, #72	; 0x48
10003b60:	4770      	bx	lr
10003b62:	bf00      	nop

10003b64 <_Unwind_ForcedUnwind>:
10003b64:	46ec      	mov	ip, sp
10003b66:	b500      	push	{lr}
10003b68:	e92d 5000 	stmdb	sp!, {ip, lr}
10003b6c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003b70:	f04f 0300 	mov.w	r3, #0
10003b74:	e92d 000c 	stmdb	sp!, {r2, r3}
10003b78:	ab01      	add	r3, sp, #4
10003b7a:	f7ff fbb5 	bl	100032e8 <__gnu_Unwind_ForcedUnwind>
10003b7e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003b82:	b012      	add	sp, #72	; 0x48
10003b84:	4770      	bx	lr
10003b86:	bf00      	nop

10003b88 <_Unwind_Backtrace>:
10003b88:	46ec      	mov	ip, sp
10003b8a:	b500      	push	{lr}
10003b8c:	e92d 5000 	stmdb	sp!, {ip, lr}
10003b90:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003b94:	f04f 0300 	mov.w	r3, #0
10003b98:	e92d 000c 	stmdb	sp!, {r2, r3}
10003b9c:	aa01      	add	r2, sp, #4
10003b9e:	f7ff fc2d 	bl	100033fc <__gnu_Unwind_Backtrace>
10003ba2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003ba6:	b012      	add	sp, #72	; 0x48
10003ba8:	4770      	bx	lr
10003baa:	bf00      	nop

10003bac <next_unwind_byte>:
10003bac:	7a02      	ldrb	r2, [r0, #8]
10003bae:	4603      	mov	r3, r0
10003bb0:	b98a      	cbnz	r2, 10003bd6 <next_unwind_byte+0x2a>
10003bb2:	7a42      	ldrb	r2, [r0, #9]
10003bb4:	b1b2      	cbz	r2, 10003be4 <next_unwind_byte+0x38>
10003bb6:	6841      	ldr	r1, [r0, #4]
10003bb8:	3a01      	subs	r2, #1
10003bba:	f04f 0c03 	mov.w	ip, #3
10003bbe:	b410      	push	{r4}
10003bc0:	7242      	strb	r2, [r0, #9]
10003bc2:	1d0c      	adds	r4, r1, #4
10003bc4:	6808      	ldr	r0, [r1, #0]
10003bc6:	f883 c008 	strb.w	ip, [r3, #8]
10003bca:	0202      	lsls	r2, r0, #8
10003bcc:	605c      	str	r4, [r3, #4]
10003bce:	0e00      	lsrs	r0, r0, #24
10003bd0:	bc10      	pop	{r4}
10003bd2:	601a      	str	r2, [r3, #0]
10003bd4:	4770      	bx	lr
10003bd6:	6800      	ldr	r0, [r0, #0]
10003bd8:	3a01      	subs	r2, #1
10003bda:	721a      	strb	r2, [r3, #8]
10003bdc:	0202      	lsls	r2, r0, #8
10003bde:	0e00      	lsrs	r0, r0, #24
10003be0:	601a      	str	r2, [r3, #0]
10003be2:	4770      	bx	lr
10003be4:	20b0      	movs	r0, #176	; 0xb0
10003be6:	4770      	bx	lr

10003be8 <_Unwind_GetGR.constprop.0>:
10003be8:	b510      	push	{r4, lr}
10003bea:	b084      	sub	sp, #16
10003bec:	2300      	movs	r3, #0
10003bee:	220c      	movs	r2, #12
10003bf0:	ac03      	add	r4, sp, #12
10003bf2:	4619      	mov	r1, r3
10003bf4:	9400      	str	r4, [sp, #0]
10003bf6:	f7ff fbb5 	bl	10003364 <_Unwind_VRS_Get>
10003bfa:	9803      	ldr	r0, [sp, #12]
10003bfc:	b004      	add	sp, #16
10003bfe:	bd10      	pop	{r4, pc}

10003c00 <unwind_UCB_from_context>:
10003c00:	e7f2      	b.n	10003be8 <_Unwind_GetGR.constprop.0>
10003c02:	bf00      	nop

10003c04 <__gnu_unwind_execute>:
10003c04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10003c08:	f04f 0800 	mov.w	r8, #0
10003c0c:	b085      	sub	sp, #20
10003c0e:	4606      	mov	r6, r0
10003c10:	460d      	mov	r5, r1
10003c12:	4628      	mov	r0, r5
10003c14:	f7ff ffca 	bl	10003bac <next_unwind_byte>
10003c18:	28b0      	cmp	r0, #176	; 0xb0
10003c1a:	4604      	mov	r4, r0
10003c1c:	f000 80bc 	beq.w	10003d98 <__gnu_unwind_execute+0x194>
10003c20:	0607      	lsls	r7, r0, #24
10003c22:	d520      	bpl.n	10003c66 <__gnu_unwind_execute+0x62>
10003c24:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
10003c28:	2b80      	cmp	r3, #128	; 0x80
10003c2a:	d04e      	beq.n	10003cca <__gnu_unwind_execute+0xc6>
10003c2c:	2b90      	cmp	r3, #144	; 0x90
10003c2e:	d037      	beq.n	10003ca0 <__gnu_unwind_execute+0x9c>
10003c30:	2ba0      	cmp	r3, #160	; 0xa0
10003c32:	d061      	beq.n	10003cf8 <__gnu_unwind_execute+0xf4>
10003c34:	2bb0      	cmp	r3, #176	; 0xb0
10003c36:	d076      	beq.n	10003d26 <__gnu_unwind_execute+0x122>
10003c38:	2bc0      	cmp	r3, #192	; 0xc0
10003c3a:	f000 808d 	beq.w	10003d58 <__gnu_unwind_execute+0x154>
10003c3e:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10003c42:	2bd0      	cmp	r3, #208	; 0xd0
10003c44:	d10b      	bne.n	10003c5e <__gnu_unwind_execute+0x5a>
10003c46:	f000 0207 	and.w	r2, r0, #7
10003c4a:	2305      	movs	r3, #5
10003c4c:	2101      	movs	r1, #1
10003c4e:	4630      	mov	r0, r6
10003c50:	3201      	adds	r2, #1
10003c52:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10003c56:	f7ff fd79 	bl	1000374c <_Unwind_VRS_Pop>
10003c5a:	2800      	cmp	r0, #0
10003c5c:	d0d9      	beq.n	10003c12 <__gnu_unwind_execute+0xe>
10003c5e:	2009      	movs	r0, #9
10003c60:	b005      	add	sp, #20
10003c62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10003c66:	0083      	lsls	r3, r0, #2
10003c68:	f10d 090c 	add.w	r9, sp, #12
10003c6c:	220d      	movs	r2, #13
10003c6e:	4630      	mov	r0, r6
10003c70:	b2db      	uxtb	r3, r3
10003c72:	f8cd 9000 	str.w	r9, [sp]
10003c76:	1d1f      	adds	r7, r3, #4
10003c78:	2300      	movs	r3, #0
10003c7a:	4619      	mov	r1, r3
10003c7c:	f7ff fb72 	bl	10003364 <_Unwind_VRS_Get>
10003c80:	9b03      	ldr	r3, [sp, #12]
10003c82:	0660      	lsls	r0, r4, #25
10003c84:	f04f 020d 	mov.w	r2, #13
10003c88:	4630      	mov	r0, r6
10003c8a:	f8cd 9000 	str.w	r9, [sp]
10003c8e:	bf4c      	ite	mi
10003c90:	1bdf      	submi	r7, r3, r7
10003c92:	18ff      	addpl	r7, r7, r3
10003c94:	2300      	movs	r3, #0
10003c96:	9703      	str	r7, [sp, #12]
10003c98:	4619      	mov	r1, r3
10003c9a:	f7ff fb89 	bl	100033b0 <_Unwind_VRS_Set>
10003c9e:	e7b8      	b.n	10003c12 <__gnu_unwind_execute+0xe>
10003ca0:	f000 030d 	and.w	r3, r0, #13
10003ca4:	2b0d      	cmp	r3, #13
10003ca6:	d0da      	beq.n	10003c5e <__gnu_unwind_execute+0x5a>
10003ca8:	af03      	add	r7, sp, #12
10003caa:	2300      	movs	r3, #0
10003cac:	f000 020f 	and.w	r2, r0, #15
10003cb0:	4630      	mov	r0, r6
10003cb2:	4619      	mov	r1, r3
10003cb4:	9700      	str	r7, [sp, #0]
10003cb6:	f7ff fb55 	bl	10003364 <_Unwind_VRS_Get>
10003cba:	2300      	movs	r3, #0
10003cbc:	220d      	movs	r2, #13
10003cbe:	4630      	mov	r0, r6
10003cc0:	4619      	mov	r1, r3
10003cc2:	9700      	str	r7, [sp, #0]
10003cc4:	f7ff fb74 	bl	100033b0 <_Unwind_VRS_Set>
10003cc8:	e7a3      	b.n	10003c12 <__gnu_unwind_execute+0xe>
10003cca:	0224      	lsls	r4, r4, #8
10003ccc:	4628      	mov	r0, r5
10003cce:	f7ff ff6d 	bl	10003bac <next_unwind_byte>
10003cd2:	4320      	orrs	r0, r4
10003cd4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10003cd8:	d0c1      	beq.n	10003c5e <__gnu_unwind_execute+0x5a>
10003cda:	0104      	lsls	r4, r0, #4
10003cdc:	2300      	movs	r3, #0
10003cde:	4630      	mov	r0, r6
10003ce0:	b2a2      	uxth	r2, r4
10003ce2:	4619      	mov	r1, r3
10003ce4:	f7ff fd32 	bl	1000374c <_Unwind_VRS_Pop>
10003ce8:	2800      	cmp	r0, #0
10003cea:	d1b8      	bne.n	10003c5e <__gnu_unwind_execute+0x5a>
10003cec:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10003cf0:	bf18      	it	ne
10003cf2:	f04f 0801 	movne.w	r8, #1
10003cf6:	e78c      	b.n	10003c12 <__gnu_unwind_execute+0xe>
10003cf8:	43c2      	mvns	r2, r0
10003cfa:	0701      	lsls	r1, r0, #28
10003cfc:	4630      	mov	r0, r6
10003cfe:	f002 0307 	and.w	r3, r2, #7
10003d02:	f44f 627f 	mov.w	r2, #4080	; 0xff0
10003d06:	fa42 f203 	asr.w	r2, r2, r3
10003d0a:	f04f 0300 	mov.w	r3, #0
10003d0e:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
10003d12:	4619      	mov	r1, r3
10003d14:	bf48      	it	mi
10003d16:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
10003d1a:	f7ff fd17 	bl	1000374c <_Unwind_VRS_Pop>
10003d1e:	2800      	cmp	r0, #0
10003d20:	f43f af77 	beq.w	10003c12 <__gnu_unwind_execute+0xe>
10003d24:	e79b      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003d26:	28b1      	cmp	r0, #177	; 0xb1
10003d28:	d03b      	beq.n	10003da2 <__gnu_unwind_execute+0x19e>
10003d2a:	28b2      	cmp	r0, #178	; 0xb2
10003d2c:	f000 80a1 	beq.w	10003e72 <__gnu_unwind_execute+0x26e>
10003d30:	28b3      	cmp	r0, #179	; 0xb3
10003d32:	d041      	beq.n	10003db8 <__gnu_unwind_execute+0x1b4>
10003d34:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
10003d38:	2bb4      	cmp	r3, #180	; 0xb4
10003d3a:	d090      	beq.n	10003c5e <__gnu_unwind_execute+0x5a>
10003d3c:	f000 0207 	and.w	r2, r0, #7
10003d40:	2301      	movs	r3, #1
10003d42:	441a      	add	r2, r3
10003d44:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10003d48:	4619      	mov	r1, r3
10003d4a:	4630      	mov	r0, r6
10003d4c:	f7ff fcfe 	bl	1000374c <_Unwind_VRS_Pop>
10003d50:	2800      	cmp	r0, #0
10003d52:	f43f af5e 	beq.w	10003c12 <__gnu_unwind_execute+0xe>
10003d56:	e782      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003d58:	28c6      	cmp	r0, #198	; 0xc6
10003d5a:	d051      	beq.n	10003e00 <__gnu_unwind_execute+0x1fc>
10003d5c:	28c7      	cmp	r0, #199	; 0xc7
10003d5e:	d062      	beq.n	10003e26 <__gnu_unwind_execute+0x222>
10003d60:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10003d64:	2bc0      	cmp	r3, #192	; 0xc0
10003d66:	d071      	beq.n	10003e4c <__gnu_unwind_execute+0x248>
10003d68:	28c8      	cmp	r0, #200	; 0xc8
10003d6a:	d076      	beq.n	10003e5a <__gnu_unwind_execute+0x256>
10003d6c:	28c9      	cmp	r0, #201	; 0xc9
10003d6e:	f47f af76 	bne.w	10003c5e <__gnu_unwind_execute+0x5a>
10003d72:	4628      	mov	r0, r5
10003d74:	f7ff ff1a 	bl	10003bac <next_unwind_byte>
10003d78:	0302      	lsls	r2, r0, #12
10003d7a:	f000 000f 	and.w	r0, r0, #15
10003d7e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003d82:	3001      	adds	r0, #1
10003d84:	4302      	orrs	r2, r0
10003d86:	2101      	movs	r1, #1
10003d88:	2305      	movs	r3, #5
10003d8a:	4630      	mov	r0, r6
10003d8c:	f7ff fcde 	bl	1000374c <_Unwind_VRS_Pop>
10003d90:	2800      	cmp	r0, #0
10003d92:	f43f af3e 	beq.w	10003c12 <__gnu_unwind_execute+0xe>
10003d96:	e762      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003d98:	f1b8 0f00 	cmp.w	r8, #0
10003d9c:	d01f      	beq.n	10003dde <__gnu_unwind_execute+0x1da>
10003d9e:	2000      	movs	r0, #0
10003da0:	e75e      	b.n	10003c60 <__gnu_unwind_execute+0x5c>
10003da2:	4628      	mov	r0, r5
10003da4:	f7ff ff02 	bl	10003bac <next_unwind_byte>
10003da8:	4602      	mov	r2, r0
10003daa:	2800      	cmp	r0, #0
10003dac:	f43f af57 	beq.w	10003c5e <__gnu_unwind_execute+0x5a>
10003db0:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10003db4:	d0c8      	beq.n	10003d48 <__gnu_unwind_execute+0x144>
10003db6:	e752      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003db8:	4628      	mov	r0, r5
10003dba:	f7ff fef7 	bl	10003bac <next_unwind_byte>
10003dbe:	f000 030f 	and.w	r3, r0, #15
10003dc2:	0302      	lsls	r2, r0, #12
10003dc4:	4630      	mov	r0, r6
10003dc6:	3301      	adds	r3, #1
10003dc8:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003dcc:	431a      	orrs	r2, r3
10003dce:	2301      	movs	r3, #1
10003dd0:	4619      	mov	r1, r3
10003dd2:	f7ff fcbb 	bl	1000374c <_Unwind_VRS_Pop>
10003dd6:	2800      	cmp	r0, #0
10003dd8:	f43f af1b 	beq.w	10003c12 <__gnu_unwind_execute+0xe>
10003ddc:	e73f      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003dde:	ac03      	add	r4, sp, #12
10003de0:	4643      	mov	r3, r8
10003de2:	220e      	movs	r2, #14
10003de4:	4641      	mov	r1, r8
10003de6:	4630      	mov	r0, r6
10003de8:	9400      	str	r4, [sp, #0]
10003dea:	f7ff fabb 	bl	10003364 <_Unwind_VRS_Get>
10003dee:	4643      	mov	r3, r8
10003df0:	220f      	movs	r2, #15
10003df2:	4630      	mov	r0, r6
10003df4:	4641      	mov	r1, r8
10003df6:	9400      	str	r4, [sp, #0]
10003df8:	f7ff fada 	bl	100033b0 <_Unwind_VRS_Set>
10003dfc:	4640      	mov	r0, r8
10003dfe:	e72f      	b.n	10003c60 <__gnu_unwind_execute+0x5c>
10003e00:	4628      	mov	r0, r5
10003e02:	f7ff fed3 	bl	10003bac <next_unwind_byte>
10003e06:	f000 030f 	and.w	r3, r0, #15
10003e0a:	0302      	lsls	r2, r0, #12
10003e0c:	4630      	mov	r0, r6
10003e0e:	3301      	adds	r3, #1
10003e10:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003e14:	431a      	orrs	r2, r3
10003e16:	2303      	movs	r3, #3
10003e18:	4619      	mov	r1, r3
10003e1a:	f7ff fc97 	bl	1000374c <_Unwind_VRS_Pop>
10003e1e:	2800      	cmp	r0, #0
10003e20:	f43f aef7 	beq.w	10003c12 <__gnu_unwind_execute+0xe>
10003e24:	e71b      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003e26:	4628      	mov	r0, r5
10003e28:	f7ff fec0 	bl	10003bac <next_unwind_byte>
10003e2c:	4602      	mov	r2, r0
10003e2e:	2800      	cmp	r0, #0
10003e30:	f43f af15 	beq.w	10003c5e <__gnu_unwind_execute+0x5a>
10003e34:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10003e38:	f47f af11 	bne.w	10003c5e <__gnu_unwind_execute+0x5a>
10003e3c:	2104      	movs	r1, #4
10003e3e:	4630      	mov	r0, r6
10003e40:	f7ff fc84 	bl	1000374c <_Unwind_VRS_Pop>
10003e44:	2800      	cmp	r0, #0
10003e46:	f43f aee4 	beq.w	10003c12 <__gnu_unwind_execute+0xe>
10003e4a:	e708      	b.n	10003c5e <__gnu_unwind_execute+0x5a>
10003e4c:	f000 020f 	and.w	r2, r0, #15
10003e50:	2303      	movs	r3, #3
10003e52:	3201      	adds	r2, #1
10003e54:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
10003e58:	e776      	b.n	10003d48 <__gnu_unwind_execute+0x144>
10003e5a:	4628      	mov	r0, r5
10003e5c:	f7ff fea6 	bl	10003bac <next_unwind_byte>
10003e60:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10003e64:	f000 030f 	and.w	r3, r0, #15
10003e68:	3210      	adds	r2, #16
10003e6a:	3301      	adds	r3, #1
10003e6c:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
10003e70:	e789      	b.n	10003d86 <__gnu_unwind_execute+0x182>
10003e72:	2300      	movs	r3, #0
10003e74:	f10d 090c 	add.w	r9, sp, #12
10003e78:	220d      	movs	r2, #13
10003e7a:	4630      	mov	r0, r6
10003e7c:	4619      	mov	r1, r3
10003e7e:	f8cd 9000 	str.w	r9, [sp]
10003e82:	f7ff fa6f 	bl	10003364 <_Unwind_VRS_Get>
10003e86:	4628      	mov	r0, r5
10003e88:	f7ff fe90 	bl	10003bac <next_unwind_byte>
10003e8c:	0602      	lsls	r2, r0, #24
10003e8e:	f04f 0402 	mov.w	r4, #2
10003e92:	d50b      	bpl.n	10003eac <__gnu_unwind_execute+0x2a8>
10003e94:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10003e98:	9b03      	ldr	r3, [sp, #12]
10003e9a:	40a0      	lsls	r0, r4
10003e9c:	3407      	adds	r4, #7
10003e9e:	4418      	add	r0, r3
10003ea0:	9003      	str	r0, [sp, #12]
10003ea2:	4628      	mov	r0, r5
10003ea4:	f7ff fe82 	bl	10003bac <next_unwind_byte>
10003ea8:	0603      	lsls	r3, r0, #24
10003eaa:	d4f3      	bmi.n	10003e94 <__gnu_unwind_execute+0x290>
10003eac:	9b03      	ldr	r3, [sp, #12]
10003eae:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10003eb2:	f8cd 9000 	str.w	r9, [sp]
10003eb6:	4630      	mov	r0, r6
10003eb8:	40a2      	lsls	r2, r4
10003eba:	f503 7301 	add.w	r3, r3, #516	; 0x204
10003ebe:	441a      	add	r2, r3
10003ec0:	2300      	movs	r3, #0
10003ec2:	9203      	str	r2, [sp, #12]
10003ec4:	4619      	mov	r1, r3
10003ec6:	220d      	movs	r2, #13
10003ec8:	f7ff fa72 	bl	100033b0 <_Unwind_VRS_Set>
10003ecc:	e6a1      	b.n	10003c12 <__gnu_unwind_execute+0xe>
10003ece:	bf00      	nop

10003ed0 <__gnu_unwind_frame>:
10003ed0:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10003ed2:	460b      	mov	r3, r1
10003ed4:	f04f 0c03 	mov.w	ip, #3
10003ed8:	4618      	mov	r0, r3
10003eda:	3208      	adds	r2, #8
10003edc:	f852 3c04 	ldr.w	r3, [r2, #-4]
10003ee0:	b500      	push	{lr}
10003ee2:	b085      	sub	sp, #20
10003ee4:	9202      	str	r2, [sp, #8]
10003ee6:	a901      	add	r1, sp, #4
10003ee8:	0e1a      	lsrs	r2, r3, #24
10003eea:	f88d c00c 	strb.w	ip, [sp, #12]
10003eee:	021b      	lsls	r3, r3, #8
10003ef0:	f88d 200d 	strb.w	r2, [sp, #13]
10003ef4:	9301      	str	r3, [sp, #4]
10003ef6:	f7ff fe85 	bl	10003c04 <__gnu_unwind_execute>
10003efa:	b005      	add	sp, #20
10003efc:	f85d fb04 	ldr.w	pc, [sp], #4

10003f00 <_Unwind_GetRegionStart>:
10003f00:	b508      	push	{r3, lr}
10003f02:	f7ff fe7d 	bl	10003c00 <unwind_UCB_from_context>
10003f06:	6c80      	ldr	r0, [r0, #72]	; 0x48
10003f08:	bd08      	pop	{r3, pc}
10003f0a:	bf00      	nop

10003f0c <_Unwind_GetLanguageSpecificData>:
10003f0c:	b508      	push	{r3, lr}
10003f0e:	f7ff fe77 	bl	10003c00 <unwind_UCB_from_context>
10003f12:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
10003f14:	79c3      	ldrb	r3, [r0, #7]
10003f16:	3302      	adds	r3, #2
10003f18:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10003f1c:	bd08      	pop	{r3, pc}
10003f1e:	bf00      	nop

10003f20 <__aeabi_idiv0>:
10003f20:	4770      	bx	lr
10003f22:	bf00      	nop

10003f24 <_init>:
10003f24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003f26:	bf00      	nop
10003f28:	bcf8      	pop	{r3, r4, r5, r6, r7}
10003f2a:	bc08      	pop	{r3}
10003f2c:	469e      	mov	lr, r3
10003f2e:	4770      	bx	lr

10003f30 <_fini>:
10003f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003f32:	bf00      	nop
10003f34:	bcf8      	pop	{r3, r4, r5, r6, r7}
10003f36:	bc08      	pop	{r3}
10003f38:	469e      	mov	lr, r3
10003f3a:	4770      	bx	lr
10003f3c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
10003f40:	00000d74 	andeq	r0, r0, r4, ror sp
10003f44:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10003f48:	6f77206f 	svcvs	0x0077206f
10003f4c:	20646c72 	rsbcs	r6, r4, r2, ror ip
10003f50:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10003f54:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10003f58:	00696e66 	rsbeq	r6, r9, r6, ror #28
10003f5c:	2b696e66 	blcs	11a5f8fc <__copy_table_end__+0x1a5b7f4>
10003f60:	00000000 	andeq	r0, r0, r0
10003f64:	006e616e 	rsbeq	r6, lr, lr, ror #2
10003f68:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
10003f6c:	00000000 	andeq	r0, r0, r0

10003f70 <pow10.0>:
10003f70:	00000000 	andeq	r0, r0, r0
10003f74:	3ff00000 	svccc	0x00f00000	; IMB
10003f78:	00000000 	andeq	r0, r0, r0
10003f7c:	40240000 	eormi	r0, r4, r0
10003f80:	00000000 	andeq	r0, r0, r0
10003f84:	40590000 	subsmi	r0, r9, r0
10003f88:	00000000 	andeq	r0, r0, r0
10003f8c:	408f4000 	addmi	r4, pc, r0
10003f90:	00000000 	andeq	r0, r0, r0
10003f94:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10003f98:	00000000 	andeq	r0, r0, r0
10003f9c:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10003fa0:	00000000 	andeq	r0, r0, r0
10003fa4:	412e8480 	smlawbmi	lr, r0, r4, r8
10003fa8:	00000000 	andeq	r0, r0, r0
10003fac:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10003fb0:	00000000 	andeq	r0, r0, r0
10003fb4:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10003fb8:	00000000 	andeq	r0, r0, r0
10003fbc:	41cdcd65 	bicmi	ip, sp, r5, ror #26

10003fc0 <__sf_fake_stderr>:
	...

10003fe0 <__sf_fake_stdin>:
	...

10004000 <__sf_fake_stdout>:
	...

10004020 <__EH_FRAME_BEGIN__>:
10004020:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10004024 <__exidx_start-0x18>:
10004024:	8101b108 	tsthi	r1, r8, lsl #2
10004028:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
1000402c:	00000000 	andeq	r0, r0, r0
10004030:	8101b108 	tsthi	r1, r8, lsl #2
10004034:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10004038:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

1000403c <__exidx_end-0xc0>:
1000403c:	7fffdf98 	svcvc	0x00ffdf98
10004040:	80b0b0b0 	ldrhthi	fp, [r0], r0
10004044:	7fffe000 	svcvc	0x00ffe000
10004048:	00000001 	andeq	r0, r0, r1
1000404c:	7ffff00c 	svcvc	0x00fff00c
10004050:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10004054:	7ffff0a0 	svcvc	0x00fff0a0
10004058:	80a8b0b0 	strhthi	fp, [r8], r0
1000405c:	7ffff0f0 	svcvc	0x00fff0f0
10004060:	00000001 	andeq	r0, r0, r1
10004064:	7ffff0fc 	svcvc	0x00fff0fc
10004068:	80aab0b0 	strhthi	fp, [sl], r0
1000406c:	7ffff134 	svcvc	0x00fff134
10004070:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10004074:	7ffff208 	svcvc	0x00fff208
10004078:	00000001 	andeq	r0, r0, r1
1000407c:	7ffff204 	svcvc	0x00fff204
10004080:	80383fab 	eorshi	r3, r8, fp, lsr #31
10004084:	7ffff264 	svcvc	0x00fff264
10004088:	00000001 	andeq	r0, r0, r1
1000408c:	7ffff270 	svcvc	0x00fff270
10004090:	80aab0b0 	strhthi	fp, [sl], r0
10004094:	7ffff2ac 	svcvc	0x00fff2ac
10004098:	00000001 	andeq	r0, r0, r1
1000409c:	7ffff360 	svcvc	0x00fff360
100040a0:	80b20eab 	adcshi	r0, r2, fp, lsr #29
100040a4:	7ffff3d4 	svcvc	0x00fff3d4
100040a8:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
100040ac:	7ffff694 	svcvc	0x00fff694
100040b0:	00000001 	andeq	r0, r0, r1
100040b4:	7ffff698 	svcvc	0x00fff698
100040b8:	80023fad 	andhi	r3, r2, sp, lsr #31
100040bc:	7ffff944 	svcvc	0x00fff944
100040c0:	00000001 	andeq	r0, r0, r1
100040c4:	7ffffb24 	svcvc	0x00fffb24
100040c8:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
100040cc:	7ffffb34 	svcvc	0x00fffb34
100040d0:	00000001 	andeq	r0, r0, r1
100040d4:	7ffffb30 	svcvc	0x00fffb30
100040d8:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
100040dc:	7ffffdf4 	svcvc	0x00fffdf4
100040e0:	80048400 	andhi	r8, r4, r0, lsl #8
100040e4:	7ffffe1c 	svcvc	0x00fffe1c
100040e8:	7fffff3c 	svcvc	0x00ffff3c
100040ec:	7ffffe20 	svcvc	0x00fffe20
100040f0:	7fffff40 	svcvc	0x00ffff40
100040f4:	7ffffe2c 	svcvc	0x00fffe2c
100040f8:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

100040fc <__copy_table_start__>:
100040fc:	10004108 	andne	r4, r0, r8, lsl #2
10004100:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10004104:	0000001d 	andeq	r0, r0, sp, lsl r0

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <_tx_thread_system_state>:
   is executing or the system is idle.  Other values indicate that 
   interrupt or initialization processing is active.  This variable is
   initialized to TX_INITIALIZE_IN_PROGRESS to indicate initialization is
   active.  */

volatile ULONG  _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
38000004:	f0f0f0f0 			; <UNDEFINED> instruction: 0xf0f0f0f0

38000008 <_impure_ptr>:
38000008:	3800000c 	stmdacc	r0, {r2, r3}

3800000c <impure_data>:
3800000c:	00000000 	andeq	r0, r0, r0
38000010:	10003fe0 	andne	r3, r0, r0, ror #31
38000014:	10004000 	andne	r4, r0, r0
38000018:	10003fc0 	andne	r3, r0, r0, asr #31
	...

3800006c <__frame_dummy_init_array_entry>:
3800006c:	100007e5 	andne	r0, r0, r5, ror #15

38000070 <__do_global_dtors_aux_fini_array_entry>:
38000070:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000074 <__bss_start__>:
38000074:	00000000 	andeq	r0, r0, r0

38000078 <object.0>:
	...

38000090 <_tx_initialize_unused_memory>:
/* Define the unused memory pointer.  The value of the first available
   memory address is placed in this variable in the low-level
   initialization function.  The content of this variable is passed
   to the application's system definition function.  */

VOID     *_tx_initialize_unused_memory;
38000090:	00000000 	andeq	r0, r0, r0

38000094 <_tx_thread_application_stack_error_handler>:

/* Define the global function pointer for stack error handling. If a stack error is 
   detected and the application has registered a stack error handler, it will be 
   called via this function pointer.  */

VOID            (*_tx_thread_application_stack_error_handler)(TX_THREAD *thread_ptr);
38000094:	00000000 	andeq	r0, r0, r0

38000098 <_tx_thread_current_ptr>:
TX_THREAD *     _tx_thread_current_ptr;
38000098:	00000000 	andeq	r0, r0, r0

3800009c <_tx_thread_execute_ptr>:
TX_THREAD *     _tx_thread_execute_ptr;
3800009c:	00000000 	andeq	r0, r0, r0

380000a0 <_tx_thread_highest_priority>:
UINT            _tx_thread_highest_priority;
380000a0:	00000000 	andeq	r0, r0, r0

380000a4 <_tx_thread_performance__execute_log_index>:


/* Define the last TX_THREAD_EXECUTE_LOG_SIZE threads scheduled in ThreadX. This 
   is a circular list, where the index points to the oldest entry.  */

ULONG           _tx_thread_performance__execute_log_index;
380000a4:	00000000 	andeq	r0, r0, r0

380000a8 <_tx_thread_performance_execute_log>:
	...

380000c8 <_tx_thread_performance_interrupt_preemption_count>:
ULONG           _tx_thread_performance_interrupt_preemption_count;
380000c8:	00000000 	andeq	r0, r0, r0

380000cc <_tx_thread_performance_non_idle_return_count>:
ULONG           _tx_thread_performance_non_idle_return_count;
380000cc:	00000000 	andeq	r0, r0, r0

380000d0 <_tx_thread_performance_resume_count>:
ULONG           _tx_thread_performance_resume_count;
380000d0:	00000000 	andeq	r0, r0, r0

380000d4 <_tx_thread_performance_solicited_preemption_count>:
ULONG           _tx_thread_performance_solicited_preemption_count;
380000d4:	00000000 	andeq	r0, r0, r0

380000d8 <_tx_thread_performance_time_slice_count>:
ULONG           _tx_thread_performance_time_slice_count;
380000d8:	00000000 	andeq	r0, r0, r0

380000dc <_tx_thread_preempt_disable>:
volatile UINT   _tx_thread_preempt_disable;
380000dc:	00000000 	andeq	r0, r0, r0

380000e0 <_tx_thread_priority_list>:
	...

38000160 <_tx_thread_priority_maps>:
ULONG           _tx_thread_priority_maps[TX_MAX_PRIORITIES/32];
38000160:	00000000 	andeq	r0, r0, r0

38000164 <_tx_thread_system_stack_ptr>:
VOID *          _tx_thread_system_stack_ptr;
38000164:	00000000 	andeq	r0, r0, r0

38000168 <_tx_timer_current_ptr>:


/* Define the current timer pointer in the list.  This pointer is moved sequentially
   through the timer list by the timer interrupt handler.  */

TX_TIMER_INTERNAL   **_tx_timer_current_ptr;
38000168:	00000000 	andeq	r0, r0, r0

3800016c <_tx_timer_expired>:


/* Define the timer expiration flag.  This is used to indicate that a timer
   has expired.  */

UINT                _tx_timer_expired;
3800016c:	00000000 	andeq	r0, r0, r0

38000170 <_tx_timer_expired_time_slice>:
UINT                _tx_timer_expired_time_slice;
38000170:	00000000 	andeq	r0, r0, r0

38000174 <_tx_timer_list_end>:
TX_TIMER_INTERNAL   **_tx_timer_list_end;
38000174:	00000000 	andeq	r0, r0, r0

38000178 <_tx_timer_list_start>:
TX_TIMER_INTERNAL   **_tx_timer_list_start;
38000178:	00000000 	andeq	r0, r0, r0

3800017c <_tx_timer_system_clock>:
volatile ULONG      _tx_timer_system_clock;
3800017c:	00000000 	andeq	r0, r0, r0

38000180 <_tx_timer_thread>:
	...

38000258 <_tx_timer_time_slice>:


/* Define the current time slice value.  If non-zero, a time-slice is active.
   Otherwise, the time_slice is not active.  */

ULONG               _tx_timer_time_slice;
38000258:	00000000 	andeq	r0, r0, r0

3800025c <errno>:
3800025c:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38000260 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID    _tx_initialize_high_level(VOID)
{
   0:	00003541 	andeq	r3, r0, r1, asr #10

    /* Initialize the event log, if enabled.  */
    TX_EL_INITIALIZE

    /* Call the thread control initialization function.  */
    _tx_thread_initialize();
   4:	61656100 	cmnvs	r5, r0, lsl #2

#ifndef TX_NO_TIMER

    /* Call the timer control initialization function.  */
    _tx_timer_initialize();
   8:	01006962 	tsteq	r0, r2, ror #18
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
}
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
{
   0:	3a434347 	bcc	10d0d24 <SYSTEM_CLOCK+0xb17fa4>
    _tx_thread_initialize();
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
    _tx_timer_initialize();
   8:	72412055 	subvc	r2, r1, #85	; 0x55
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
{
       0:	000003cc 	andeq	r0, r0, ip, asr #7
    _tx_thread_initialize();
       4:	00000002 	andeq	r0, r0, r2
    _tx_timer_initialize();
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000000f 	andeq	r0, r0, pc
      10:	0000c60c 	andeq	ip, r0, ip, lsl #12
      14:	00019d00 	andeq	r9, r1, r0, lsl #26
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	000000f6 	strdeq	r0, [r0], -r6
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	f4080102 	vst4.8	{d0,d2,d4,d6}, [r8], r2
      34:	02000000 	andeq	r0, r0, #0
        _tx_thread_system_ni_resume(thread_ptr);
      38:	017b0502 	cmneq	fp, r2, lsl #10
      3c:	02020000 	andeq	r0, r2, #0
}
      40:	00010207 	andeq	r0, r1, r7, lsl #4
      44:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      48:	00000162 	andeq	r0, r0, r2, ror #2
       low-level initialization component.  */
    do
    {

        /* Create the system timer thread.  */
        status =  _tx_thread_create(&_tx_timer_thread,
      4c:	3f070402 	svccc	0x00070402
      50:	02000001 	andeq	r0, r0, #1
#endif

        /* Define timer initialize extension.  */
        TX_TIMER_INITIALIZE_EXTENSION(status)

    } while (status != TX_SUCCESS);
      54:	015d0508 	cmpeq	sp, r8, lsl #10
    _tx_timer_performance_expiration_count =         ((ULONG) 0);
    _tx_timer_performance__expiration_adjust_count =  ((ULONG) 0);
#endif
#endif
#endif
}
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	00013a07 	andeq	r3, r1, r7, lsl #20
      60:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
      64:	00746e69 	rsbseq	r6, r4, r9, ror #28
      68:	44070402 	strmi	r0, [r7], #-1026	; 0xfffffbfe
      6c:	02000001 	andeq	r0, r0, #1
      70:	01510408 	cmpeq	r1, r8, lsl #8
      74:	01020000 	mrseq	r0, (UNDEF: 2)
      78:	0000fd08 	andeq	pc, r0, r8, lsl #26
      7c:	00760400 	rsbseq	r0, r6, r0, lsl #8
      80:	01050000 	mrseq	r0, (UNDEF: 5)
      84:	0000012f 	andeq	r0, r0, pc, lsr #2
      88:	01053401 	tsteq	r5, r1, lsl #8
      8c:	00000061 	andeq	r0, r0, r1, rrx
      90:	10000800 	andne	r0, r0, r0, lsl #16
      94:	10000824 	andne	r0, r0, r4, lsr #16
      98:	00000000 	andeq	r0, r0, r0
      9c:	0000ef01 	andeq	lr, r0, r1, lsl #30
      a0:	14610600 	strbtne	r0, [r1], #-1536	; 0xfffffa00
      a4:	35010000 	strcc	r0, [r1, #-0]
      a8:	00006109 	andeq	r6, r0, r9, lsl #2
      ac:	00002600 	andeq	r2, r0, r0, lsl #12
      b0:	00002000 	andeq	r2, r0, r0
      b4:	08060700 	stmdaeq	r6, {r8, r9, sl}
      b8:	03a61000 			; <UNDEFINED> instruction: 0x03a61000
      bc:	0c080000 	stceq	0, cr0, [r8], {-0}
      c0:	b4100008 	ldrlt	r0, [r0], #-8
      c4:	d5000003 	strle	r0, [r0, #-3]
      c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
      cc:	03055001 	movweq	r5, #20481	; 0x5001
      d0:	10003f3c 	andne	r3, r0, ip, lsr pc
      d4:	08180a00 	ldmdaeq	r8, {r9, fp}
      d8:	03c11000 	biceq	r1, r1, #0
      dc:	01090000 	mrseq	r0, (UNDEF: 9)
      e0:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
      e4:	0910003f 	ldmdbeq	r0, {r0, r1, r2, r3, r4, r5}
      e8:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
      ec:	0b00007f 	bleq	2f0 <__STACKSEAL_SIZE+0x2f0>
      f0:	00000000 	andeq	r0, r0, r0
      f4:	010d3001 	tsteq	sp, r1
      f8:	01e1010c 	mvneq	r0, ip, lsl #2
      fc:	27010000 	strcs	r0, [r1, -r0]
     100:	00000106 	andeq	r0, r0, r6, lsl #2
     104:	00000000 	andeq	r0, r0, r0
     108:	00500000 	subseq	r0, r0, r0
     10c:	4d010000 	stcmi	0, cr0, [r1, #-0]
     110:	0d000001 	stceq	0, cr0, [r0, #-4]
     114:	000000bd 	strheq	r0, [r0], -sp
     118:	0000015d 	andeq	r0, r0, sp, asr r1
     11c:	00030501 	andeq	r0, r3, r1, lsl #10
     120:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     124:	00000000 	andeq	r0, r0, r0
     128:	000003c1 	andeq	r0, r0, r1, asr #7
     12c:	00000143 	andeq	r0, r0, r3, asr #2
     130:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
     134:	00000003 	andeq	r0, r0, r3
     138:	51010900 	tstpl	r1, r0, lsl #18
     13c:	00000305 	andeq	r0, r0, r5, lsl #6
     140:	07000000 	streq	r0, [r0, -r0]
     144:	00000000 	andeq	r0, r0, r0
     148:	00000162 	andeq	r0, r0, r2, ror #2
     14c:	007d0e00 	rsbseq	r0, sp, r0, lsl #28
     150:	015d0000 	cmpeq	sp, r0
     154:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
     158:	05000000 	streq	r0, [r0, #-0]
     15c:	014d0400 	cmpeq	sp, r0, lsl #8
     160:	010c0000 	mrseq	r0, (UNDEF: 12)
     164:	00000134 	andeq	r0, r0, r4, lsr r1
     168:	01062201 	tsteq	r6, r1, lsl #4
	...
     174:	00000070 	andeq	r0, r0, r0, ror r0
     178:	0001b701 	andeq	fp, r1, r1, lsl #14
     17c:	00bd0d00 	adcseq	r0, sp, r0, lsl #26
     180:	015d0000 	cmpeq	sp, r0
     184:	05010000 	streq	r0, [r1, #-0]
     188:	00000003 	andeq	r0, r0, r3
     18c:	00000800 	andeq	r0, r0, r0, lsl #16
     190:	03c10000 	biceq	r0, r1, #0
     194:	01ad0000 			; <UNDEFINED> instruction: 0x01ad0000
     198:	01090000 	mrseq	r0, (UNDEF: 9)
     19c:	00030550 	andeq	r0, r3, r0, asr r5
     1a0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     1a4:	03055101 	movweq	r5, #20737	; 0x5101
     1a8:	00000000 	andeq	r0, r0, r0
     1ac:	00000700 	andeq	r0, r0, r0, lsl #14
     1b0:	01b70000 			; <UNDEFINED> instruction: 0x01b70000
     1b4:	0c000000 	stceq	0, cr0, [r0], {-0}
     1b8:	00019701 	andeq	r9, r1, r1, lsl #14
     1bc:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
     1c0:	00000001 	andeq	r0, r0, r1
     1c4:	00000000 	andeq	r0, r0, r0
     1c8:	00009000 	andeq	r9, r0, r0
     1cc:	020c0100 	andeq	r0, ip, #0, 2
     1d0:	bd0d0000 	stclt	0, cr0, [sp, #-0]
     1d4:	5d000000 	stcpl	0, cr0, [r0, #-0]
     1d8:	01000001 	tsteq	r0, r1
     1dc:	00000305 	andeq	r0, r0, r5, lsl #6
     1e0:	00080000 	andeq	r0, r8, r0
     1e4:	c1000000 	mrsgt	r0, (UNDEF: 0)
     1e8:	02000003 	andeq	r0, r0, #3
     1ec:	09000002 	stmdbeq	r0, {r1}
     1f0:	03055001 	movweq	r5, #20481	; 0x5001
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	05510109 	ldrbeq	r0, [r1, #-265]	; 0xfffffef7
     1fc:	00000003 	andeq	r0, r0, r3
     200:	00070000 	andeq	r0, r7, r0
     204:	0c000000 	stceq	0, cr0, [r0], {-0}
     208:	00000002 	andeq	r0, r0, r2
     20c:	0191010c 	orrseq	r0, r1, ip, lsl #2
     210:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     214:	00000106 	andeq	r0, r0, r6, lsl #2
     218:	00000000 	andeq	r0, r0, r0
     21c:	00b00000 	adcseq	r0, r0, r0
     220:	61010000 	mrsvs	r0, (UNDEF: 1)
     224:	0d000002 	stceq	0, cr0, [r0, #-8]
     228:	000000bd 	strheq	r0, [r0], -sp
     22c:	0000015d 	andeq	r0, r0, sp, asr r1
     230:	00030501 	andeq	r0, r3, r1, lsl #10
     234:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     238:	00000000 	andeq	r0, r0, r0
     23c:	000003c1 	andeq	r0, r0, r1, asr #7
     240:	00000257 	andeq	r0, r0, r7, asr r2
     244:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
     248:	00000003 	andeq	r0, r0, r3
     24c:	51010900 	tstpl	r1, r0, lsl #18
     250:	00000305 	andeq	r0, r0, r5, lsl #6
     254:	07000000 	streq	r0, [r0, -r0]
     258:	00000000 	andeq	r0, r0, r0
     25c:	00000261 	andeq	r0, r0, r1, ror #4
     260:	8b010c00 	blhi	43268 <SYSTICK_CYCLES+0x34809>
     264:	01000001 	tsteq	r0, r1
     268:	00010613 	andeq	r0, r1, r3, lsl r6
     26c:	00000000 	andeq	r0, r0, r0
     270:	d0000000 	andle	r0, r0, r0
     274:	01000000 	mrseq	r0, (UNDEF: 0)
     278:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     27c:	0000bd0d 	andeq	fp, r0, sp, lsl #26
     280:	00015d00 	andeq	r5, r1, r0, lsl #26
     284:	03050100 	movweq	r0, #20736	; 0x5100
     288:	00000000 	andeq	r0, r0, r0
     28c:	00000008 	andeq	r0, r0, r8
     290:	0003c100 	andeq	ip, r3, r0, lsl #2
     294:	0002ac00 	andeq	sl, r2, r0, lsl #24
     298:	50010900 	andpl	r0, r1, r0, lsl #18
     29c:	00000305 	andeq	r0, r0, r5, lsl #6
     2a0:	01090000 	mrseq	r0, (UNDEF: 9)
     2a4:	00030551 	andeq	r0, r3, r1, asr r5
     2a8:	00000000 	andeq	r0, r0, r0
     2ac:	00000007 	andeq	r0, r0, r7
     2b0:	0002b600 	andeq	fp, r2, r0, lsl #12
     2b4:	010c0000 	mrseq	r0, (UNDEF: 12)
     2b8:	00000185 	andeq	r0, r0, r5, lsl #3
     2bc:	01060f01 	tsteq	r6, r1, lsl #30
	...
     2c8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     2cc:	0002fe01 	andeq	pc, r2, r1, lsl #28
     2d0:	00bd0d00 	adcseq	r0, sp, r0, lsl #26
     2d4:	015d0000 	cmpeq	sp, r0
     2d8:	05010000 	streq	r0, [r1, #-0]
     2dc:	00000003 	andeq	r0, r0, r3
     2e0:	00000a00 	andeq	r0, r0, r0, lsl #20
     2e4:	03c10000 	biceq	r0, r1, #0
     2e8:	01090000 	mrseq	r0, (UNDEF: 9)
     2ec:	00030550 	andeq	r0, r3, r0, asr r5
     2f0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     2f4:	03055101 	movweq	r5, #20737	; 0x5101
     2f8:	00000000 	andeq	r0, r0, r0
     2fc:	010c0000 	mrseq	r0, (UNDEF: 12)
     300:	0000016b 	andeq	r0, r0, fp, ror #2
     304:	01060b01 	tsteq	r6, r1, lsl #22
	...
     310:	00000110 	andeq	r0, r0, r0, lsl r1
     314:	00033d01 	andeq	r3, r3, r1, lsl #26
     318:	00bd0d00 	adcseq	r0, sp, r0, lsl #26
     31c:	034d0000 	movteq	r0, #53248	; 0xd000
     320:	05010000 	streq	r0, [r1, #-0]
     324:	00000003 	andeq	r0, r0, r3
     328:	00000a00 	andeq	r0, r0, r0, lsl #20
     32c:	03b40000 			; <UNDEFINED> instruction: 0x03b40000
     330:	01090000 	mrseq	r0, (UNDEF: 9)
     334:	00030550 	andeq	r0, r3, r0, asr r5
     338:	00000000 	andeq	r0, r0, r0
     33c:	007d0e00 	rsbseq	r0, sp, r0, lsl #28
     340:	034d0000 	movteq	r0, #53248	; 0xd000
     344:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
     348:	0f000000 	svceq	0x00000000
     34c:	033d0400 	teqeq	sp, #0, 8
     350:	010c0000 	mrseq	r0, (UNDEF: 12)
     354:	00000115 	andeq	r0, r0, r5, lsl r1
     358:	01060701 	tsteq	r6, r1, lsl #14
	...
     364:	00000130 	andeq	r0, r0, r0, lsr r1
     368:	00039101 	andeq	r9, r3, r1, lsl #2
     36c:	00bd0d00 	adcseq	r0, sp, r0, lsl #26
     370:	03a10000 			; <UNDEFINED> instruction: 0x03a10000
     374:	05010000 	streq	r0, [r1, #-0]
     378:	00000003 	andeq	r0, r0, r3
     37c:	00000a00 	andeq	r0, r0, r0, lsl #20
     380:	03b40000 			; <UNDEFINED> instruction: 0x03b40000
     384:	01090000 	mrseq	r0, (UNDEF: 9)
     388:	00030550 	andeq	r0, r3, r0, asr r5
     38c:	00000000 	andeq	r0, r0, r0
     390:	007d0e00 	rsbseq	r0, sp, r0, lsl #28
     394:	03a10000 			; <UNDEFINED> instruction: 0x03a10000
     398:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
     39c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     3a0:	03910400 	orrseq	r0, r1, #0, 8
     3a4:	01100000 	tsteq	r0, r0
     3a8:	0000db01 	andeq	sp, r0, r1, lsl #22
     3ac:	0000db00 	andeq	sp, r0, r0, lsl #22
     3b0:	06070200 	streq	r0, [r7], -r0, lsl #4
     3b4:	ef010111 	svc	0x00010111
     3b8:	e5000000 	str	r0, [r0, #-0]
     3bc:	04000000 	streq	r0, [r0], #-0
     3c0:	01011000 	mrseq	r1, (UNDEF: 1)
     3c4:	0000053f 	andeq	r0, r0, pc, lsr r5
     3c8:	0000053f 	andeq	r0, r0, pc, lsr r5
     3cc:	0005c803 	andeq	ip, r5, r3, lsl #16
     3d0:	000004e5 	andeq	r0, r0, r5, ror #9
     3d4:	01040002 	tsteq	r4, r2
     3d8:	01040000 	mrseq	r0, (UNDEF: 4)
     3dc:	0000000f 	andeq	r0, r0, pc
     3e0:	0001e70c 	andeq	lr, r1, ip, lsl #14
     3e4:	00019d00 	andeq	r9, r1, r0, lsl #26
     3e8:	00005000 	andeq	r5, r0, r0
	...
     3f4:	0001c000 	andeq	ip, r1, r0
     3f8:	06010200 	streq	r0, [r1], -r0, lsl #4
     3fc:	000000f6 	strdeq	r0, [r0], -r6
     400:	00020603 	andeq	r0, r2, r3, lsl #12
     404:	182b0200 	stmdane	fp!, {r9}
     408:	0000003c 	andeq	r0, r0, ip, lsr r0
     40c:	f4080102 	vst4.8	{d0,d2,d4,d6}, [r8], r2
     410:	02000000 	andeq	r0, r0, #0
     414:	017b0502 	cmneq	fp, r2, lsl #10
     418:	02020000 	andeq	r0, r2, #0
     41c:	00010207 	andeq	r0, r1, r7, lsl #4
     420:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     424:	00000162 	andeq	r0, r0, r2, ror #2
     428:	00026903 	andeq	r6, r2, r3, lsl #18
     42c:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
     430:	00000064 	andeq	r0, r0, r4, rrx
     434:	3f070402 	svccc	0x00070402
     438:	02000001 	andeq	r0, r0, #1
     43c:	015d0508 	cmpeq	sp, r8, lsl #10
     440:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     444:	00013a07 	andeq	r3, r1, r7, lsl #20
     448:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
     44c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     450:	44070402 	strmi	r0, [r7], #-1026	; 0xfffffbfe
     454:	03000001 	movweq	r0, #1
     458:	00000208 	andeq	r0, r0, r8, lsl #4
     45c:	30131803 	andscc	r1, r3, r3, lsl #16
     460:	05000000 	streq	r0, [r0, #-0]
     464:	00000087 	andeq	r0, r0, r7, lsl #1
     468:	00026b03 	andeq	r6, r2, r3, lsl #22
     46c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
     470:	00000058 	andeq	r0, r0, r8, asr r0
     474:	00009805 	andeq	r9, r0, r5, lsl #16
     478:	00a40600 	adceq	r0, r4, r0, lsl #12
     47c:	7c070000 	stcvc	0, cr0, [r7], {-0}
     480:	01f80402 	mvnseq	r0, r2, lsl #8
     484:	0003b309 	andeq	fp, r3, r9, lsl #6
     488:	02230800 	eoreq	r0, r3, #0, 16
     48c:	fa040000 	blx	100494 <__RAM_SIZE+0x494>
     490:	00a91201 	adceq	r1, r9, r1, lsl #4
     494:	23020000 	movwcs	r0, #8192	; 0x2000
     498:	02bf0800 	adcseq	r0, pc, #0, 16
     49c:	fb040000 	blx	1004a6 <__RAM_SIZE+0x4a6>
     4a0:	00a41201 	adceq	r1, r4, r1, lsl #4
     4a4:	23020000 	movwcs	r0, #8192	; 0x2000
     4a8:	02b50804 	adcseq	r0, r5, #4, 16	; 0x40000
     4ac:	fc040000 	stc2	0, cr0, [r4], {-0}
     4b0:	00a41201 	adceq	r1, r4, r1, lsl #4
     4b4:	23020000 	movwcs	r0, #8192	; 0x2000
     4b8:	02c40808 	sbceq	r0, r4, #8, 16	; 0x80000
     4bc:	fd040000 	stc2	0, cr0, [r4, #-0]
     4c0:	00a41201 	adceq	r1, r4, r1, lsl #4
     4c4:	23020000 	movwcs	r0, #8192	; 0x2000
     4c8:	4353090c 	cmpmi	r3, #12, 18	; 0x30000
     4cc:	fe040052 	mcr2	0, 0, r0, cr4, cr2, {2}
     4d0:	00a41201 	adceq	r1, r4, r1, lsl #4
     4d4:	23020000 	movwcs	r0, #8192	; 0x2000
     4d8:	43430910 	movtmi	r0, #14608	; 0x3910
     4dc:	ff040052 			; <UNDEFINED> instruction: 0xff040052
     4e0:	00a41201 	adceq	r1, r4, r1, lsl #4
     4e4:	23020000 	movwcs	r0, #8192	; 0x2000
     4e8:	03630814 	cmneq	r3, #20, 16	; 0x140000
     4ec:	00040000 	andeq	r0, r4, r0
     4f0:	03c31202 	biceq	r1, r3, #536870912	; 0x20000000
     4f4:	23020000 	movwcs	r0, #8192	; 0x2000
     4f8:	03360818 	teqeq	r6, #24, 16	; 0x180000
     4fc:	01040000 	mrseq	r0, (UNDEF: 4)
     500:	00a41202 	adceq	r1, r4, r2, lsl #4
     504:	23020000 	movwcs	r0, #8192	; 0x2000
     508:	02dc0824 	sbcseq	r0, ip, #36, 16	; 0x240000
     50c:	02040000 	andeq	r0, r4, #0
     510:	00a41202 	adceq	r1, r4, r2, lsl #4
     514:	23020000 	movwcs	r0, #8192	; 0x2000
     518:	038f0828 	orreq	r0, pc, #40, 16	; 0x280000
     51c:	03040000 	movweq	r0, #16384	; 0x4000
     520:	00a41202 	adceq	r1, r4, r2, lsl #4
     524:	23020000 	movwcs	r0, #8192	; 0x2000
     528:	02ca082c 	sbceq	r0, sl, #44, 16	; 0x2c0000
     52c:	04040000 	streq	r0, [r4], #-0
     530:	00a41202 	adceq	r1, r4, r2, lsl #4
     534:	23020000 	movwcs	r0, #8192	; 0x2000
     538:	02cf0830 	sbceq	r0, pc, #48, 16	; 0x300000
     53c:	05040000 	streq	r0, [r4, #-0]
     540:	00a41202 	adceq	r1, r4, r2, lsl #4
     544:	23020000 	movwcs	r0, #8192	; 0x2000
     548:	02640834 	rsbeq	r0, r4, #52, 16	; 0x340000
     54c:	06040000 	streq	r0, [r4], -r0
     550:	00a41202 	adceq	r1, r4, r2, lsl #4
     554:	23020000 	movwcs	r0, #8192	; 0x2000
     558:	03530838 	cmpeq	r3, #56, 16	; 0x380000
     55c:	07040000 	streq	r0, [r4, -r0]
     560:	00a41202 	adceq	r1, r4, r2, lsl #4
     564:	23020000 	movwcs	r0, #8192	; 0x2000
     568:	0230083c 	eorseq	r0, r0, #60, 16	; 0x3c0000
     56c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
     570:	03dd1202 	bicseq	r1, sp, #536870912	; 0x20000000
     574:	23020000 	movwcs	r0, #8192	; 0x2000
     578:	027d0840 	rsbseq	r0, sp, #64, 16	; 0x400000
     57c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
     580:	00a91202 	adceq	r1, r9, r2, lsl #4
     584:	23020000 	movwcs	r0, #8192	; 0x2000
     588:	037a0848 	cmneq	sl, #72, 16	; 0x480000
     58c:	0a040000 	beq	100594 <__RAM_SIZE+0x594>
     590:	00a91202 	adceq	r1, r9, r2, lsl #4
     594:	23020000 	movwcs	r0, #8192	; 0x2000
     598:	0254084c 	subseq	r0, r4, #76, 16	; 0x4c0000
     59c:	0b040000 	bleq	1005a4 <__RAM_SIZE+0x5a4>
     5a0:	03f71202 	mvnseq	r1, #536870912	; 0x20000000
     5a4:	23020000 	movwcs	r0, #8192	; 0x2000
     5a8:	03810850 	orreq	r0, r1, #80, 16	; 0x500000
     5ac:	0c040000 	stceq	0, cr0, [r4], {-0}
     5b0:	04111202 	ldreq	r1, [r1], #-514	; 0xfffffdfe
     5b4:	23020000 	movwcs	r0, #8192	; 0x2000
     5b8:	021d0860 	andseq	r0, sp, #96, 16	; 0x600000
     5bc:	0d040000 	stceq	0, cr0, [r4, #-0]
     5c0:	00a91202 	adceq	r1, r9, r2, lsl #4
     5c4:	23020000 	movwcs	r0, #8192	; 0x2000
     5c8:	54430978 	strbpl	r0, [r3], #-2424	; 0xfffff688
     5cc:	0e040052 	mcreq	0, 0, r0, cr4, cr2, {2}
     5d0:	00a91202 	adceq	r1, r9, r2, lsl #4
     5d4:	23020000 	movwcs	r0, #8192	; 0x2000
     5d8:	02d5087c 	sbcseq	r0, r5, #124, 16	; 0x7c0000
     5dc:	0f040000 	svceq	0x00040000
     5e0:	00a91202 	adceq	r1, r9, r2, lsl #4
     5e4:	23030000 	movwcs	r0, #12288	; 0x3000
     5e8:	8c080180 	stfhis	f0, [r8], {128}	; 0x80
     5ec:	04000002 	streq	r0, [r0], #-2
     5f0:	a4120210 	ldrge	r0, [r2], #-528	; 0xfffffdf0
     5f4:	03000000 	movweq	r0, #0
     5f8:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
     5fc:	00000389 	andeq	r0, r0, r9, lsl #7
     600:	12021104 	andne	r1, r2, #4, 2
     604:	000000a4 	andeq	r0, r0, r4, lsr #1
     608:	01882303 	orreq	r2, r8, r3, lsl #6
     60c:	0002e108 	andeq	lr, r2, r8, lsl #2
     610:	02120400 	andseq	r0, r2, #0, 8
     614:	0000a412 	andeq	sl, r0, r2, lsl r4
     618:	8c230300 	stchi	3, cr0, [r3], #-0
     61c:	03210801 			; <UNDEFINED> instruction: 0x03210801
     620:	13040000 	movwne	r0, #16384	; 0x4000
     624:	04161202 	ldreq	r1, [r6], #-514	; 0xfffffdfe
     628:	23030000 	movwcs	r0, #12288	; 0x3000
     62c:	58080190 	stmdapl	r8, {r4, r7, r8}
     630:	04000003 	streq	r0, [r0], #-3
     634:	a4120214 	ldrge	r0, [r2], #-532	; 0xfffffdec
     638:	03000000 	movweq	r0, #0
     63c:	0801e423 	stmdaeq	r1, {r0, r1, r5, sl, sp, lr, pc}
     640:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
     644:	12021504 	andne	r1, r2, #4, 10	; 0x1000000
     648:	000000a4 	andeq	r0, r0, r4, lsr #1
     64c:	01e82303 	mvneq	r2, r3, lsl #6
     650:	0002f908 	andeq	pc, r2, r8, lsl #18
     654:	02160400 	andseq	r0, r6, #0, 8
     658:	00042612 	andeq	r2, r4, r2, lsl r6
     65c:	ec230300 	stc	3, cr0, [r3], #-0
     660:	02100801 	andseq	r0, r0, #65536	; 0x10000
     664:	17040000 	strne	r0, [r4, -r0]
     668:	00a41202 	adceq	r1, r4, r2, lsl #4
     66c:	23030000 	movwcs	r0, #12288	; 0x3000
     670:	03080480 	movweq	r0, #33920	; 0x8480
     674:	04000003 	streq	r0, [r0], #-3
     678:	36120218 			; <UNDEFINED> instruction: 0x36120218
     67c:	03000004 	movweq	r0, #4
     680:	08048423 	stmdaeq	r4, {r0, r1, r5, sl, pc}
     684:	000002e7 	andeq	r0, r0, r7, ror #5
     688:	12021904 	andne	r1, r2, #4, 18	; 0x10000
     68c:	000000a9 	andeq	r0, r0, r9, lsr #1
     690:	04c02303 	strbeq	r2, [r0], #771	; 0x303
     694:	0002ed08 	andeq	lr, r2, r8, lsl #26
     698:	021a0400 	andseq	r0, sl, #0, 8
     69c:	0000a912 	andeq	sl, r0, r2, lsl r9
     6a0:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
     6a4:	02f30804 	rscseq	r0, r3, #4, 16	; 0x40000
     6a8:	1b040000 	blne	1006b0 <__RAM_SIZE+0x6b0>
     6ac:	00a91202 	adceq	r1, r9, r2, lsl #4
     6b0:	23030000 	movwcs	r0, #12288	; 0x3000
     6b4:	0d0804c8 	cfstrseq	mvf0, [r8, #-800]	; 0xfffffce0
     6b8:	04000003 	streq	r0, [r0], #-3
     6bc:	4612021c 			; <UNDEFINED> instruction: 0x4612021c
     6c0:	03000004 	movweq	r0, #4
     6c4:	0804cc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, lr, pc}
     6c8:	0000025c 	andeq	r0, r0, ip, asr r2
     6cc:	12021d04 	andne	r1, r2, #4, 26	; 0x100
     6d0:	000000a4 	andeq	r0, r0, r4, lsr #1
     6d4:	04d02303 	ldrbeq	r2, [r0], #771	; 0x303
     6d8:	00031708 	andeq	r1, r3, r8, lsl #14
     6dc:	021e0400 	andseq	r0, lr, #0, 8
     6e0:	00044612 	andeq	r4, r4, r2, lsl r6
     6e4:	d4230300 	strtle	r0, [r3], #-768	; 0xfffffd00
     6e8:	03450804 	movteq	r0, #22532	; 0x5804
     6ec:	1f040000 	svcne	0x00040000
     6f0:	00a41202 	adceq	r1, r4, r2, lsl #4
     6f4:	23030000 	movwcs	r0, #12288	; 0x3000
     6f8:	150804d8 	strne	r0, [r8, #-1240]	; 0xfffffb28
     6fc:	04000002 	streq	r0, [r0], #-2
     700:	a4120220 	ldrge	r0, [r2], #-544	; 0xfffffde0
     704:	03000000 	movweq	r0, #0
     708:	0804dc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, ip, lr, pc}
     70c:	0000034d 	andeq	r0, r0, sp, asr #6
     710:	12022104 	andne	r2, r2, #4, 2
     714:	000000a4 	andeq	r0, r0, r4, lsr #1
     718:	04e02303 	strbteq	r2, [r0], #771	; 0x303
     71c:	0002a308 	andeq	sl, r2, r8, lsl #6
     720:	02220400 	eoreq	r0, r2, #0, 8
     724:	0000a412 	andeq	sl, r0, r2, lsl r4
     728:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     72c:	02840804 	addeq	r0, r4, #4, 16	; 0x40000
     730:	23040000 	movwcs	r0, #16384	; 0x4000
     734:	00a41202 	adceq	r1, r4, r2, lsl #4
     738:	23030000 	movwcs	r0, #12288	; 0x3000
     73c:	5d0804e8 	cfstrspl	mvf0, [r8, #-928]	; 0xfffffc60
     740:	04000003 	streq	r0, [r0], #-3
     744:	a4120224 	ldrge	r0, [r2], #-548	; 0xfffffddc
     748:	03000000 	movweq	r0, #0
     74c:	0804ec23 	stmdaeq	r4, {r0, r1, r5, sl, fp, sp, lr, pc}
     750:	0000033c 	andeq	r0, r0, ip, lsr r3
     754:	12022504 	andne	r2, r2, #4, 10	; 0x1000000
     758:	000000a4 	andeq	r0, r0, r4, lsr #1
     75c:	04f02303 	ldrbteq	r2, [r0], #771	; 0x303
     760:	00023708 	andeq	r3, r2, r8, lsl #14
     764:	02260400 	eoreq	r0, r6, #0, 8
     768:	0000a412 	andeq	sl, r0, r2, lsl r4
     76c:	f4230300 	vld2.8	{d0-d3}, [r3], r0
     770:	02290804 	eoreq	r0, r9, #4, 16	; 0x40000
     774:	27040000 	strcs	r0, [r4, -r0]
     778:	00a41202 	adceq	r1, r4, r2, lsl #4
     77c:	23030000 	movwcs	r0, #12288	; 0x3000
     780:	0a0004f8 	beq	1b68 <__HEAP_SIZE+0xb68>
     784:	00000093 	muleq	r0, r3, r0
     788:	000003c3 	andeq	r0, r0, r3, asr #7
     78c:	0000800b 	andeq	r8, r0, fp
     790:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
     794:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
     798:	0000a90a 	andeq	sl, r0, sl, lsl #18
     79c:	0003d800 	andeq	sp, r3, r0, lsl #16
     7a0:	00800b00 	addeq	r0, r0, r0, lsl #22
     7a4:	00010000 	andeq	r0, r1, r0
     7a8:	0003c806 	andeq	ip, r3, r6, lsl #16
     7ac:	03d80500 	bicseq	r0, r8, #0, 10
     7b0:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     7b4:	f2000000 	vhadd.s8	d0, d0, d0
     7b8:	0b000003 	bleq	7cc <__Vectors_Size+0xc>
     7bc:	00000080 	andeq	r0, r0, r0, lsl #1
     7c0:	e2060003 	and	r0, r6, #3
     7c4:	05000003 	streq	r0, [r0, #-3]
     7c8:	000003f2 	strdeq	r0, [r0], -r2
     7cc:	0000a90a 	andeq	sl, r0, sl, lsl #18
     7d0:	00040c00 	andeq	r0, r4, r0, lsl #24
     7d4:	00800b00 	addeq	r0, r0, r0, lsl #22
     7d8:	00050000 	andeq	r0, r5, r0
     7dc:	0003fc06 	andeq	pc, r3, r6, lsl #24
     7e0:	040c0500 	streq	r0, [ip], #-1280	; 0xfffffb00
     7e4:	980a0000 	stmdals	sl, {}	; <UNPREDICTABLE>
     7e8:	26000000 	strcs	r0, [r0], -r0
     7ec:	0b000004 	bleq	804 <__Vectors_Size+0x44>
     7f0:	00000080 	andeq	r0, r0, r0, lsl #1
     7f4:	980a0014 	stmdals	sl, {r2, r4}
     7f8:	36000000 	strcc	r0, [r0], -r0
     7fc:	0b000004 	bleq	814 <__Vectors_Size+0x54>
     800:	00000080 	andeq	r0, r0, r0, lsl #1
     804:	980a0044 	stmdals	sl, {r2, r6}
     808:	46000000 	strmi	r0, [r0], -r0
     80c:	0b000004 	bleq	824 <__Vectors_Size+0x64>
     810:	00000080 	andeq	r0, r0, r0, lsl #1
     814:	980a000e 	stmdals	sl, {r1, r2, r3}
     818:	56000000 	strpl	r0, [r0], -r0
     81c:	0b000004 	bleq	834 <__Vectors_Size+0x74>
     820:	00000080 	andeq	r0, r0, r0, lsl #1
     824:	740c0000 	strvc	r0, [ip], #-0
     828:	04000002 	streq	r0, [r0], #-2
     82c:	ae030228 	cdpge	2, 0, cr0, cr3, cr8, {1}
     830:	03000000 	movweq	r0, #0
     834:	00000368 	andeq	r0, r0, r8, ror #6
     838:	740f2405 	strvc	r2, [pc], #-1029	; 840 <__Vectors_Size+0x80>
     83c:	06000004 	streq	r0, [r0], -r4
     840:	00000463 	andeq	r0, r0, r3, ror #8
     844:	047a040d 	ldrbteq	r0, [sl], #-1037	; 0xfffffbf3
     848:	010e0000 	mrseq	r0, (UNDEF: 14)
     84c:	0002930f 	andeq	r9, r2, pc, lsl #6
     850:	11290500 			; <UNDEFINED> instruction: 0x11290500
     854:	00000098 	muleq	r0, r8, r0
     858:	6f0a0101 	svcvs	0x000a0101
     85c:	9b000004 	blls	874 <__Vectors_Size+0xb4>
     860:	10000004 	andne	r0, r0, r4
     864:	00000080 	andeq	r0, r0, r0, lsl #1
     868:	060001ef 	streq	r0, [r0], -pc, ror #3
     86c:	0000048a 	andeq	r0, r0, sl, lsl #9
     870:	0002ab0f 	andeq	sl, r2, pc, lsl #22
     874:	20380100 	eorscs	r0, r8, r0, lsl #2
     878:	0000049b 	muleq	r0, fp, r4
     87c:	7c110101 	ldfvcs	f0, [r1], {1}
     880:	01000004 	tsteq	r0, r4
     884:	03050a3e 	movweq	r0, #23102	; 0x5a3e
     888:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     88c:	032b0112 			; <UNDEFINED> instruction: 0x032b0112
     890:	4c010000 	stcmi	0, cr0, [r1], {-0}
     894:	08240106 	stmdaeq	r4!, {r1, r2, r8}
     898:	08501000 	ldmdaeq	r0, {ip}^
     89c:	7d021000 	stcvc	0, cr1, [r2, #-0]
     8a0:	01120100 	tsteq	r2, r0, lsl #2
     8a4:	0000023e 	andeq	r0, r0, lr, lsr r2
     8a8:	01064401 	tsteq	r6, r1, lsl #8
	...
     8b4:	01007d02 	tsteq	r0, r2, lsl #26
     8b8:	001bc100 	andseq	ip, fp, r0, lsl #2
     8bc:	f4000200 	vst1.8	{d0-d3}, [r0], r0
     8c0:	04000001 	streq	r0, [r0], #-1
     8c4:	00000f01 	andeq	r0, r0, r1, lsl #30
     8c8:	04720c00 	ldrbteq	r0, [r2], #-3072	; 0xfffff400
     8cc:	019d0000 	orrseq	r0, sp, r0
     8d0:	01200000 			; <UNDEFINED> instruction: 0x01200000
	...
     8dc:	03950000 	orrseq	r0, r5, #0
     8e0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     8e4:	00015604 	andeq	r5, r1, r4, lsl #12
     8e8:	07040200 	streq	r0, [r4, -r0, lsl #4]
     8ec:	00000144 	andeq	r0, r0, r4, asr #2
     8f0:	f6060102 			; <UNDEFINED> instruction: 0xf6060102
     8f4:	02000000 	andeq	r0, r0, #0
     8f8:	00f40801 	rscseq	r0, r4, r1, lsl #16
     8fc:	02020000 	andeq	r0, r2, #0
     900:	00017b05 	andeq	r7, r1, r5, lsl #22
     904:	07020200 	streq	r0, [r2, -r0, lsl #4]
     908:	00000102 	andeq	r0, r0, r2, lsl #2
     90c:	62050402 	andvs	r0, r5, #33554432	; 0x2000000
     910:	03000001 	movweq	r0, #1
     914:	00000053 	andeq	r0, r0, r3, asr r0
     918:	3f070402 	svccc	0x00070402
     91c:	02000001 	andeq	r0, r0, #1
     920:	015d0508 	cmpeq	sp, r8, lsl #10
     924:	66030000 	strvs	r0, [r3], -r0
     928:	04000000 	streq	r0, [r0], #-0
     92c:	00000526 	andeq	r0, r0, r6, lsr #10
     930:	7e196902 	vnmlsvc.f16	s12, s18, s4	; <UNPREDICTABLE>
     934:	02000000 	andeq	r0, r0, #0
     938:	013a0708 	teqeq	sl, r8, lsl #14
     93c:	04050000 	streq	r0, [r5], #-0
     940:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     944:	00850300 	addeq	r0, r5, r0, lsl #6
     948:	5a040000 	bpl	100950 <__RAM_SIZE+0x950>
     94c:	02000005 	andeq	r0, r0, #5
     950:	00301ae8 	eorseq	r1, r0, r8, ror #21
     954:	30030000 	andcc	r0, r3, r0
     958:	04000000 	streq	r0, [r0], #-0
     95c:	00000528 	andeq	r0, r0, r8, lsr #10
     960:	72143c03 	andsvc	r3, r4, #768	; 0x300
     964:	04000000 	streq	r0, [r0], #-0
     968:	0000055c 	andeq	r0, r0, ip, asr r5
     96c:	91155203 	tstls	r5, r3, lsl #4
     970:	04000000 	streq	r0, [r0], #-0
     974:	000005c4 	andeq	r0, r0, r4, asr #11
     978:	c61b2804 	ldrgt	r2, [fp], -r4, lsl #16
     97c:	06000000 	streq	r0, [r0], -r0
     980:	00000468 	andeq	r0, r0, r8, ror #8
     984:	e0000604 	and	r0, r0, r4, lsl #12
     988:	07000000 	streq	r0, [r0, -r0]
     98c:	0000050e 	andeq	r0, r0, lr, lsl #10
     990:	000000e0 	andeq	r0, r0, r0, ror #1
     994:	01002302 	tsteq	r0, r2, lsl #6
     998:	04040800 	streq	r0, [r4], #-2048	; 0xfffff800
     99c:	0000046a 	andeq	r0, r0, sl, ror #8
     9a0:	ba186304 	blt	6195b8 <SYSTEM_CLOCK+0x60838>
     9a4:	04000000 	streq	r0, [r0], #-0
     9a8:	000003d1 	ldrdeq	r0, [r0], -r1
     9ac:	3017d105 	andscc	sp, r7, r5, lsl #2
     9b0:	03000000 	movweq	r0, #0
     9b4:	000000ee 	andeq	r0, r0, lr, ror #1
     9b8:	51040802 	tstpl	r4, r2, lsl #16
     9bc:	04000001 	streq	r0, [r0], #-1
     9c0:	000004ab 	andeq	r0, r0, fp, lsr #9
     9c4:	12107a01 	andsne	r7, r0, #4096	; 0x1000
     9c8:	09000001 	stmdbeq	r0, {r0}
     9cc:	00011804 	andeq	r1, r1, r4, lsl #16
     9d0:	33010a00 	movwcc	r0, #6656	; 0x1a00
     9d4:	0b000001 	bleq	9e0 <__Vectors_Size+0x220>
     9d8:	00000133 	andeq	r0, r0, r3, lsr r1
     9dc:	0000e00b 	andeq	lr, r0, fp
     9e0:	00ee0b00 	rsceq	r0, lr, r0, lsl #22
     9e4:	ee0b0000 	cdp	0, 0, cr0, cr11, cr0, {0}
     9e8:	00000000 	andeq	r0, r0, r0
     9ec:	fd080102 	stc2	1, cr0, [r8, #-8]
     9f0:	03000000 	movweq	r0, #0
     9f4:	00000133 	andeq	r0, r0, r3, lsr r1
     9f8:	7e01080c 	cdpvc	8, 0, cr0, cr1, cr12, {0}
     9fc:	00016709 	andeq	r6, r1, r9, lsl #14
     a00:	63660d00 	cmnvs	r6, #0, 26
     a04:	7f010074 	svcvc	0x00010074
     a08:	0001780b 	andeq	r7, r1, fp, lsl #16
     a0c:	00230200 	eoreq	r0, r3, r0, lsl #4
     a10:	6772610d 	ldrbvs	r6, [r2, -sp, lsl #2]!
     a14:	09800100 	stmibeq	r0, {r8}
     a18:	000000e0 	andeq	r0, r0, r0, ror #1
     a1c:	00042302 	andeq	r2, r4, r2, lsl #6
     a20:	0178010a 	cmneq	r8, sl, lsl #2
     a24:	330b0000 	movwcc	r0, #45056	; 0xb000
     a28:	0b000001 	bleq	a34 <__Vectors_Size+0x274>
     a2c:	000000e0 	andeq	r0, r0, r0, ror #1
     a30:	67040900 	strvs	r0, [r4, -r0, lsl #18]
     a34:	04000001 	streq	r0, [r0], #-1
     a38:	000005a6 	andeq	r0, r0, r6, lsr #11
     a3c:	3f038101 	svccc	0x00038101
     a40:	03000001 	movweq	r0, #1
     a44:	0000017e 	andeq	r0, r0, lr, ror r1
     a48:	0448010e 	strbeq	r0, [r8], #-270	; 0xfffffef2
     a4c:	8a010000 	bhi	40a54 <SYSTICK_CYCLES+0x31ff5>
     a50:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
     a5c:	50000000 	andpl	r0, r0, r0
     a60:	01000001 	tsteq	r0, r1
     a64:	0000024c 	andeq	r0, r0, ip, asr #4
     a68:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
     a6c:	038a0100 	orreq	r0, sl, #0, 2
     a70:	00017816 	andeq	r7, r1, r6, lsl r8
     a74:	0001b200 	andeq	fp, r1, r0, lsl #4
     a78:	0001ac00 	andeq	sl, r1, r0, lsl #24
     a7c:	72610f00 	rsbvc	r0, r1, #0, 30
     a80:	8a010067 	bhi	40c24 <SYSTICK_CYCLES+0x321c5>
     a84:	00e03d03 	rsceq	r3, r0, r3, lsl #26
     a88:	01e30000 	mvneq	r0, r0
     a8c:	01df0000 	bicseq	r0, pc, r0
     a90:	8d100000 	ldchi	0, cr0, [r0, #-0]
     a94:	01000004 	tsteq	r0, r4
     a98:	4c4e038a 	mcrrmi	3, 8, r0, lr, cr10
     a9c:	02000002 	andeq	r0, r0, #2
     aa0:	12117891 	andsne	r7, r1, #9502720	; 0x910000
     aa4:	01006176 	tsteq	r0, r6, ror r1
     aa8:	e20b038c 	and	r0, fp, #140, 6	; 0x30000002
     aac:	02000000 	andeq	r0, r0, #0
     ab0:	ab136c91 	blge	4dbcfc <__RAM_SIZE+0x3dbcfc>
     ab4:	01000003 	tsteq	r0, r3
     ab8:	8a1b038e 	bhi	6c18f8 <SYSTEM_CLOCK+0x108b78>
     abc:	02000001 	andeq	r0, r0, #1
     ac0:	72146491 	andsvc	r6, r4, #-1862270976	; 0x91000000
     ac4:	01007465 	tsteq	r0, r5, ror #8
     ac8:	8c0d038f 	stchi	3, cr0, [sp], {143}	; 0x8f
     acc:	06000000 	streq	r0, [r0], -r0
     ad0:	04000002 	streq	r0, [r0], #-2
     ad4:	15000002 	strne	r0, [r0, #-2]
     ad8:	00000000 	andeq	r0, r0, r0
     adc:	0000055f 	andeq	r0, r0, pc, asr r5
     ae0:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     ae4:	00000003 	andeq	r0, r0, r3
     ae8:	51011600 	tstpl	r1, r0, lsl #12
     aec:	16549102 	ldrbne	r9, [r4], -r2, lsl #2
     af0:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
     af4:	530116ff 	movwpl	r1, #5887	; 0x16ff
     af8:	06689103 	strbteq	r9, [r8], -r3, lsl #2
     afc:	007d0216 	rsbseq	r0, sp, r6, lsl r2
     b00:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     b04:	3a040900 	bcc	102f0c <__RAM_SIZE+0x2f0c>
     b08:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     b0c:	00053c01 	andeq	r3, r5, r1, lsl #24
     b10:	03840100 	orreq	r0, r4, #0, 2
     b14:	00850105 	addeq	r0, r5, r5, lsl #2
	...
     b20:	02190000 	andseq	r0, r9, #0
     b24:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
     b28:	17000002 	strne	r0, [r0, -r2]
     b2c:	000003c2 	andeq	r0, r0, r2, asr #7
     b30:	15038401 	strne	r8, [r3, #-1025]	; 0xfffffbff
     b34:	000002ee 	andeq	r0, r0, lr, ror #5
     b38:	00000257 	andeq	r0, r0, r7, asr r2
     b3c:	00000251 	andeq	r0, r0, r1, asr r2
     b40:	00146117 	andseq	r6, r4, r7, lsl r1
     b44:	03840100 	orreq	r0, r4, #0, 2
     b48:	0000ee24 	andeq	lr, r0, r4, lsr #28
     b4c:	00028900 	andeq	r8, r2, r0, lsl #18
     b50:	00028300 	andeq	r8, r2, r0, lsl #6
     b54:	048d1700 	streq	r1, [sp], #1792	; 0x700
     b58:	84010000 	strhi	r0, [r1], #-0
     b5c:	024c3703 	subeq	r3, ip, #786432	; 0xc0000
     b60:	02bb0000 	adcseq	r0, fp, #0
     b64:	02b50000 	adcseq	r0, r5, #0
     b68:	760f0000 	strvc	r0, [pc], -r0
     b6c:	84010061 	strhi	r0, [r1], #-97	; 0xffffff9f
     b70:	00e24703 	rsceq	r4, r2, r3, lsl #14
     b74:	02e90000 	rsceq	r0, r9, #0
     b78:	02e70000 	rsceq	r0, r7, #0
     b7c:	00150000 	andseq	r0, r5, r0
     b80:	5f000000 	svcpl	0x00000000
     b84:	16000005 	strne	r0, [r0], -r5
     b88:	03055001 	movweq	r5, #20481	; 0x5001
     b8c:	00000000 	andeq	r0, r0, r0
     b90:	03510116 	cmpeq	r1, #-2147483643	; 0x80000005
     b94:	165001f3 			; <UNDEFINED> instruction: 0x165001f3
     b98:	f3035201 	vhsub.u8	d5, d3, d1
     b9c:	01165101 	tsteq	r6, r1, lsl #2
     ba0:	01f30353 	mvnseq	r0, r3, asr r3
     ba4:	09000052 	stmdbeq	r0, {r1, r4, r6}
     ba8:	00013304 	andeq	r3, r1, r4, lsl #6
     bac:	c9010e00 	stmdbgt	r1, {r9, sl, fp}
     bb0:	01000003 	tsteq	r0, r3
     bb4:	0105037d 	tsteq	r5, sp, ror r3
     bb8:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     bc4:	000002fc 	strdeq	r0, [r0], -ip
     bc8:	00037401 	andeq	r7, r3, r1, lsl #8
     bcc:	048d1700 	streq	r1, [sp], #1792	; 0x700
     bd0:	7d010000 	stcvc	0, cr0, [r1, #-0]
     bd4:	024c1903 	subeq	r1, ip, #49152	; 0xc000
     bd8:	033a0000 	teqeq	sl, #0
     bdc:	03340000 	teqeq	r4, #0
     be0:	760f0000 	strvc	r0, [pc], -r0
     be4:	7d010061 	stcvc	0, cr0, [r1, #-388]	; 0xfffffe7c
     be8:	00e22903 	rsceq	r2, r2, r3, lsl #18
     bec:	03680000 	cmneq	r8, #0
     bf0:	03660000 	cmneq	r6, #0
     bf4:	c2130000 	andsgt	r0, r3, #0
     bf8:	01000003 	tsteq	r0, r3
     bfc:	7408037f 	strvc	r0, [r8], #-895	; 0xfffffc81
     c00:	02000003 	andeq	r0, r0, #3
     c04:	00157491 	mulseq	r5, r1, r4
     c08:	5f000000 	svcpl	0x00000000
     c0c:	16000005 	strne	r0, [r0], -r5
     c10:	03055001 	movweq	r5, #20481	; 0x5001
     c14:	10001991 	mulne	r0, r1, r9
     c18:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     c1c:	01167491 			; <UNDEFINED> instruction: 0x01167491
     c20:	ff090252 			; <UNDEFINED> instruction: 0xff090252
     c24:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
     c28:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
     c2c:	01331800 	teqeq	r3, r0, lsl #16
     c30:	03840000 	orreq	r0, r4, #0
     c34:	30190000 	andscc	r0, r9, r0
     c38:	00000000 	andeq	r0, r0, r0
     c3c:	3d010e00 	stccc	14, cr0, [r1, #-0]
     c40:	01000005 	tsteq	r0, r5
     c44:	01050373 	tsteq	r5, r3, ror r3
     c48:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     c54:	0000037b 	andeq	r0, r0, fp, ror r3
     c58:	00043301 	andeq	r3, r4, r1, lsl #6
     c5c:	03c21700 	biceq	r1, r2, #0, 14
     c60:	73010000 	movwvc	r0, #4096	; 0x1000
     c64:	02ee1403 	rsceq	r1, lr, #50331648	; 0x3000000
     c68:	03dd0000 	bicseq	r0, sp, #0
     c6c:	03d70000 	bicseq	r0, r7, #0
     c70:	61170000 	tstvs	r7, r0
     c74:	01000014 	tsteq	r0, r4, lsl r0
     c78:	ee230373 	mcr	3, 1, r0, cr3, cr3, {3}
     c7c:	0f000000 	svceq	0x00000000
     c80:	09000004 	stmdbeq	r0, {r2}
     c84:	10000004 	andne	r0, r0, r4
     c88:	0000048d 	andeq	r0, r0, sp, lsl #9
     c8c:	36037301 	strcc	r7, [r3], -r1, lsl #6
     c90:	0000024c 	andeq	r0, r0, ip, asr #4
     c94:	11789102 	cmnne	r8, r2, lsl #2
     c98:	00617612 	rsbeq	r7, r1, r2, lsl r6
     c9c:	0b037501 	bleq	de0a8 <SYSTICK_CYCLES+0xcf649>
     ca0:	000000e2 	andeq	r0, r0, r2, ror #1
     ca4:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
     ca8:	00746572 	rsbseq	r6, r4, r2, ror r5
     cac:	0d037701 	stceq	7, cr7, [r3, #-4]
     cb0:	0000008c 	andeq	r0, r0, ip, lsl #1
     cb4:	0000043d 	andeq	r0, r0, sp, lsr r4
     cb8:	0000043b 	andeq	r0, r0, fp, lsr r4
     cbc:	00000015 	andeq	r0, r0, r5, lsl r0
     cc0:	00055f00 	andeq	r5, r5, r0, lsl #30
     cc4:	50011600 	andpl	r1, r1, r0, lsl #12
     cc8:	00000305 	andeq	r0, r0, r5, lsl #6
     ccc:	01160000 	tsteq	r6, r0
     cd0:	01f30351 	mvnseq	r0, r1, asr r3
     cd4:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
     cd8:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
     cdc:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
     ce0:	16066891 			; <UNDEFINED> instruction: 0x16066891
     ce4:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
     ce8:	00006c91 	muleq	r0, r1, ip
     cec:	04d2010e 	ldrbeq	r0, [r2], #270	; 0x10e
     cf0:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     cf4:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
     d00:	50000000 	andpl	r0, r0, r0
     d04:	01000004 	tsteq	r0, r4
     d08:	000004cc 	andeq	r0, r0, ip, asr #9
     d0c:	0003c217 	andeq	ip, r3, r7, lsl r2
     d10:	03690100 	cmneq	r9, #0, 2
     d14:	0002ee13 	andeq	lr, r2, r3, lsl lr
     d18:	0004b200 	andeq	fp, r4, r0, lsl #4
     d1c:	0004ac00 	andeq	sl, r4, r0, lsl #24
     d20:	048d1000 	streq	r1, [sp], #0
     d24:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     d28:	024c2703 	subeq	r2, ip, #786432	; 0xc0000
     d2c:	91020000 	mrsls	r0, (UNDEF: 2)
     d30:	76121174 			; <UNDEFINED> instruction: 0x76121174
     d34:	6b010061 	blvs	40ec0 <SYSTICK_CYCLES+0x32461>
     d38:	00e20b03 	rsceq	r0, r2, r3, lsl #22
     d3c:	91020000 	mrsls	r0, (UNDEF: 2)
     d40:	6572146c 	ldrbvs	r1, [r2, #-1132]!	; 0xfffffb94
     d44:	6d010074 	stcvs	0, cr0, [r1, #-464]	; 0xfffffe30
     d48:	008c0d03 	addeq	r0, ip, r3, lsl #26
     d4c:	04e00000 	strbteq	r0, [r0], #0
     d50:	04de0000 	ldrbeq	r0, [lr], #0
     d54:	00150000 	andseq	r0, r5, r0
     d58:	5f000000 	svcpl	0x00000000
     d5c:	16000005 	strne	r0, [r0], -r5
     d60:	03055001 	movweq	r5, #20481	; 0x5001
     d64:	00000000 	andeq	r0, r0, r0
     d68:	03510116 	cmpeq	r1, #-2147483643	; 0x80000005
     d6c:	165001f3 			; <UNDEFINED> instruction: 0x165001f3
     d70:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
     d74:	530116ff 	movwpl	r1, #5887	; 0x16ff
     d78:	065c9103 	ldrbeq	r9, [ip], -r3, lsl #2
     d7c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
     d80:	00609102 	rsbeq	r9, r0, r2, lsl #2
     d84:	3f010e00 	svccc	0x00010e00
     d88:	01000005 	tsteq	r0, r5
     d8c:	0105035e 	tsteq	r5, lr, asr r3
     d90:	00000085 	andeq	r0, r0, r5, lsl #1
     d94:	1000199c 	mulne	r0, ip, r9
     d98:	100019c8 	andne	r1, r0, r8, asr #19
     d9c:	000004f3 	strdeq	r0, [r0], -r3
     da0:	00055f01 	andeq	r5, r5, r1, lsl #30
     da4:	048d1000 	streq	r1, [sp], #0
     da8:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
     dac:	024c1803 	subeq	r1, ip, #196608	; 0x30000
     db0:	91020000 	mrsls	r0, (UNDEF: 2)
     db4:	76121170 			; <UNDEFINED> instruction: 0x76121170
     db8:	60010061 	andvs	r0, r1, r1, rrx
     dbc:	00e20b03 	rsceq	r0, r2, r3, lsl #22
     dc0:	91020000 	mrsls	r0, (UNDEF: 2)
     dc4:	03c21364 	biceq	r1, r2, #100, 6	; 0x90000001
     dc8:	62010000 	andvs	r0, r1, #0
     dcc:	03740803 	cmneq	r4, #196608	; 0x30000
     dd0:	91020000 	mrsls	r0, (UNDEF: 2)
     dd4:	65721460 	ldrbvs	r1, [r2, #-1120]!	; 0xfffffba0
     dd8:	63010074 	movwvs	r0, #4212	; 0x1074
     ddc:	008c0d03 	addeq	r0, ip, r3, lsl #26
     de0:	05510000 	ldrbeq	r0, [r1, #-0]
     de4:	054f0000 	strbeq	r0, [pc, #-0]	; dec <__Vectors_Size+0x62c>
     de8:	b8150000 	ldmdalt	r5, {}	; <UNPREDICTABLE>
     dec:	5f100019 	svcpl	0x00100019
     df0:	16000005 	strne	r0, [r0], -r5
     df4:	03055001 	movweq	r5, #20481	; 0x5001
     df8:	10001991 	mulne	r0, r1, r9
     dfc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     e00:	01164091 			; <UNDEFINED> instruction: 0x01164091
     e04:	ff090252 			; <UNDEFINED> instruction: 0xff090252
     e08:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
     e0c:	16065091 			; <UNDEFINED> instruction: 0x16065091
     e10:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
     e14:	00005491 	muleq	r0, r1, r4
     e18:	00053b1a 	andeq	r3, r5, sl, lsl fp
     e1c:	02410100 	subeq	r0, r1, #0, 2
     e20:	0085010c 	addeq	r0, r5, ip, lsl #2
     e24:	13100000 	tstne	r0, #0
     e28:	19901000 	ldmibne	r0, {ip}
     e2c:	05641000 	strbeq	r1, [r4, #-0]!
     e30:	7d010000 	stcvc	0, cr0, [r1, #-0]
     e34:	0f00000b 	svceq	0x0000000b
     e38:	0074756f 	rsbseq	r7, r4, pc, ror #10
     e3c:	24024101 	strcs	r4, [r2], #-257	; 0xfffffeff
     e40:	00000106 	andeq	r0, r0, r6, lsl #2
     e44:	000005a5 	andeq	r0, r0, r5, lsr #11
     e48:	0000059d 	muleq	r0, sp, r5
     e4c:	0003c217 	andeq	ip, r3, r7, lsl r2
     e50:	02410100 	subeq	r0, r1, #0, 2
     e54:	0002ee2f 	andeq	lr, r2, pc, lsr #28
     e58:	0005e300 	andeq	lr, r5, r0, lsl #6
     e5c:	0005d900 	andeq	sp, r5, r0, lsl #18
     e60:	04f61700 	ldrbteq	r1, [r6], #1792	; 0x700
     e64:	41010000 	mrsmi	r0, (UNDEF: 1)
     e68:	00fa4402 	rscseq	r4, sl, r2, lsl #8
     e6c:	06370000 	ldrteq	r0, [r7], -r0
     e70:	06250000 	strteq	r0, [r5], -r0
     e74:	8d170000 	ldchi	0, cr0, [r7, #-0]
     e78:	01000004 	tsteq	r0, r4
     e7c:	4c580241 	lfmmi	f0, 2, [r8], {65}	; 0x41
     e80:	a9000002 	stmdbge	r0, {r1}
     e84:	a5000006 	strge	r0, [r0, #-6]
     e88:	1b000006 	blne	ea8 <__Vectors_Size+0x6e8>
     e8c:	01006176 	tsteq	r0, r6, ror r1
     e90:	e2680241 	rsb	r0, r8, #268435460	; 0x10000004
     e94:	02000000 	andeq	r0, r0, #0
     e98:	0c1c0091 	ldceq	0, cr0, [ip], {145}	; 0x91
     e9c:	0100001a 	tsteq	r0, sl, lsl r0
     ea0:	30100243 	andscc	r0, r0, r3, asr #4
     ea4:	df000000 	svcle	0x00000000
     ea8:	c7000006 	strgt	r0, [r0, -r6]
     eac:	1c000006 	stcne	0, cr0, [r0], {6}
     eb0:	000005be 			; <UNDEFINED> instruction: 0x000005be
     eb4:	17024301 	strne	r4, [r2, -r1, lsl #6]
     eb8:	00000030 	andeq	r0, r0, r0, lsr r0
     ebc:	00000783 	andeq	r0, r0, r3, lsl #15
     ec0:	0000076d 	andeq	r0, r0, sp, ror #14
     ec4:	0005fd1c 	andeq	pc, r5, ip, lsl sp	; <UNPREDICTABLE>
     ec8:	02430100 	subeq	r0, r3, #0, 2
     ecc:	0000301e 	andeq	r3, r0, lr, lsl r0
     ed0:	00082b00 	andeq	r2, r8, r0, lsl #22
     ed4:	00080d00 	andeq	r0, r8, r0, lsl #26
     ed8:	006e1400 	rsbeq	r1, lr, r0, lsl #8
     edc:	29024301 	stmdbcs	r2, {r0, r8, r9, lr}
     ee0:	00000030 	andeq	r0, r0, r0, lsr r0
     ee4:	000008e9 	andeq	r0, r0, r9, ror #17
     ee8:	000008db 	ldrdeq	r0, [r0], -fp
     eec:	78646914 	stmdavc	r4!, {r2, r4, r8, fp, sp, lr}^
     ef0:	02440100 	subeq	r0, r4, #0, 2
     ef4:	0000ee0a 	andeq	lr, r0, sl, lsl #28
     ef8:	0009a500 	andeq	sl, r9, r0, lsl #10
     efc:	00094500 	andeq	r4, r9, r0, lsl #10
     f00:	13ec1d00 	mvnne	r1, #0, 26
     f04:	140c1000 	strne	r1, [ip], #-0
     f08:	06631000 	strbteq	r1, [r3], -r0
     f0c:	77120000 	ldrvc	r0, [r2, -r0]
     f10:	026c0100 	rsbeq	r0, ip, #0, 2
     f14:	00008c11 	andeq	r8, r0, r1, lsl ip
     f18:	00500100 	subseq	r0, r0, r0, lsl #2
     f1c:	0014341d 	andseq	r3, r4, sp, lsl r4
     f20:	00144810 	andseq	r4, r4, r0, lsl r8
     f24:	00068010 	andeq	r8, r6, r0, lsl r0
     f28:	05b81300 	ldreq	r1, [r8, #768]!	; 0x300
     f2c:	80010000 	andhi	r0, r1, r0
     f30:	008c1302 	addeq	r1, ip, r2, lsl #6
     f34:	53010000 	movwpl	r0, #4096	; 0x1000
     f38:	15561d00 	ldrbne	r1, [r6, #-3328]	; 0xfffff300
     f3c:	17421000 	strbne	r1, [r2, -r0]
     f40:	08731000 	ldmdaeq	r3!, {ip}^
     f44:	f81c0000 			; <UNDEFINED> instruction: 0xf81c0000
     f48:	01000005 	tsteq	r0, r5
     f4c:	301602b4 			; <UNDEFINED> instruction: 0x301602b4
     f50:	db000000 	blle	f58 <__Vectors_Size+0x798>
     f54:	bf00000b 	svclt	0x0000000b
     f58:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
     f5c:	00000108 	andeq	r0, r0, r8, lsl #2
     f60:	000006e9 	andeq	r0, r0, r9, ror #13
     f64:	000e7a1f 	andeq	r7, lr, pc, lsl sl
     f68:	02d60100 	sbcseq	r0, r6, #0, 2
     f6c:	00006d1d 	andeq	r6, r0, sp, lsl sp
     f70:	166c1500 	strbtne	r1, [ip], -r0, lsl #10
     f74:	137c1000 	cmnne	ip, #0
     f78:	01160000 	tsteq	r6, r0
     f7c:	00770250 	rsbseq	r0, r7, r0, asr r2
     f80:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     f84:	01160078 	tsteq	r6, r8, ror r0
     f88:	00740252 	rsbseq	r0, r4, r2, asr r2
     f8c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
     f90:	02160076 	andseq	r0, r6, #118	; 0x76
     f94:	7b02187d 	blvc	87190 <SYSTICK_CYCLES+0x78731>
     f98:	7d021600 	stcvc	6, cr1, [r2, #-0]
     f9c:	0075021c 	rsbseq	r0, r5, ip, lsl r2
     fa0:	781d0000 	ldmdavc	sp, {}	; <UNPREDICTABLE>
     fa4:	a8100016 	ldmdage	r0, {r1, r2, r4}
     fa8:	3e100016 	mrccc	0, 0, r0, cr0, cr6, {0}
     fac:	13000007 	movwne	r0, #7
     fb0:	00000e7a 	andeq	r0, r0, sl, ror lr
     fb4:	1802db01 	stmdane	r2, {r0, r8, r9, fp, ip, lr, pc}
     fb8:	0000005a 	andeq	r0, r0, sl, asr r0
     fbc:	a6155201 	ldrge	r5, [r5], -r1, lsl #4
     fc0:	0f100016 	svceq	0x00100016
     fc4:	16000015 			; <UNDEFINED> instruction: 0x16000015
     fc8:	77025001 	strvc	r5, [r2, -r1]
     fcc:	51011600 	tstpl	r1, r0, lsl #12
     fd0:	16007802 	strne	r7, [r0], -r2, lsl #16
     fd4:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
     fd8:	53011600 	movwpl	r1, #5632	; 0x1600
     fdc:	16007602 	strne	r7, [r0], -r2, lsl #12
     fe0:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
     fe4:	0216007b 	andseq	r0, r6, #123	; 0x7b
     fe8:	9103107d 	tstls	r3, sp, ror r0
     fec:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
     ff0:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
     ff4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     ff8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     ffc:	00000795 	muleq	r0, r5, r7
    1000:	000e7a1c 	andeq	r7, lr, ip, lsl sl
    1004:	02df0100 	sbcseq	r0, pc, #0, 2
    1008:	00008c17 	andeq	r8, r0, r7, lsl ip
    100c:	000c8c00 	andeq	r8, ip, r0, lsl #24
    1010:	000c8a00 	andeq	r8, ip, r0, lsl #20
    1014:	16261500 	strtne	r1, [r6], -r0, lsl #10
    1018:	150f1000 	strne	r1, [pc, #-0]	; 1020 <__HEAP_SIZE+0x20>
    101c:	01160000 	tsteq	r6, r0
    1020:	00770250 	rsbseq	r0, r7, r0, asr r2
    1024:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1028:	01160078 	tsteq	r6, r8, ror r0
    102c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1030:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1034:	02160076 	andseq	r0, r6, #118	; 0x76
    1038:	7b020c7d 	blvc	84234 <SYSTICK_CYCLES+0x757d5>
    103c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1040:	48910310 	ldmmi	r1, {r4, r8, r9}
    1044:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1048:	00750214 	rsbseq	r0, r5, r4, lsl r2
    104c:	d81e0000 	ldmdale	lr, {}	; <UNPREDICTABLE>
    1050:	f2000000 	vhadd.s8	d0, d0, d0
    1054:	1c000007 	stcne	0, cr0, [r0], {7}
    1058:	00000e7a 	andeq	r0, r0, sl, ror lr
    105c:	2002ee01 	andcs	lr, r2, r1, lsl #28
    1060:	0000009d 	muleq	r0, sp, r0
    1064:	00000ca3 	andeq	r0, r0, r3, lsr #25
    1068:	00000c9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
    106c:	0015d015 	andseq	sp, r5, r5, lsl r0
    1070:	00150f10 	andseq	r0, r5, r0, lsl pc
    1074:	50011600 	andpl	r1, r1, r0, lsl #12
    1078:	16007702 	strne	r7, [r0], -r2, lsl #14
    107c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1080:	52011600 	andpl	r1, r1, #0, 12
    1084:	16007402 	strne	r7, [r0], -r2, lsl #8
    1088:	76025301 	strvc	r5, [r2], -r1, lsl #6
    108c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1090:	16300104 	ldrtne	r0, [r0], -r4, lsl #2
    1094:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1098:	0216007b 	andseq	r0, r6, #123	; 0x7b
    109c:	9103107d 	tstls	r3, sp, ror r0
    10a0:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    10a4:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    10a8:	20000000 	andcs	r0, r0, r0
    10ac:	100016fa 	strdne	r1, [r0], -sl
    10b0:	0000137c 	andeq	r1, r0, ip, ror r3
    10b4:	00000834 	andeq	r0, r0, r4, lsr r8
    10b8:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    10bc:	01160077 	tsteq	r6, r7, ror r0
    10c0:	00780251 	rsbseq	r0, r8, r1, asr r2
    10c4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    10c8:	01160074 	tsteq	r6, r4, ror r0
    10cc:	00760253 	rsbseq	r0, r6, r3, asr r2
    10d0:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    10d4:	02163001 	andseq	r3, r6, #1
    10d8:	7b02187d 	blvc	872d4 <SYSTICK_CYCLES+0x78875>
    10dc:	7d021600 	stcvc	6, cr1, [r2, #-0]
    10e0:	4891031c 	ldmmi	r1, {r2, r3, r4, r8, r9}
    10e4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    10e8:	00750220 	rsbseq	r0, r5, r0, lsr #4
    10ec:	17241500 	strne	r1, [r4, -r0, lsl #10]!
    10f0:	150f1000 	strne	r1, [pc, #-0]	; 10f8 <__HEAP_SIZE+0xf8>
    10f4:	01160000 	tsteq	r6, r0
    10f8:	00770250 	rsbseq	r0, r7, r0, asr r2
    10fc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1100:	01160078 	tsteq	r6, r8, ror r0
    1104:	00740252 	rsbseq	r0, r4, r2, asr r2
    1108:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    110c:	02160076 	andseq	r0, r6, #118	; 0x76
    1110:	3001047d 	andcc	r0, r1, sp, ror r4
    1114:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1118:	16007b02 	strne	r7, [r0], -r2, lsl #22
    111c:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1120:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1124:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1128:	00000075 	andeq	r0, r0, r5, ror r0
    112c:	0000c01e 	andeq	ip, r0, lr, lsl r0
    1130:	0008ec00 	andeq	lr, r8, r0, lsl #24
    1134:	006c1400 	rsbeq	r1, ip, r0, lsl #8
    1138:	16030901 	strne	r0, [r3], -r1, lsl #18
    113c:	00000030 	andeq	r0, r0, r0, lsr r0
    1140:	00000cd6 	ldrdeq	r0, [r0], -r6
    1144:	00000cc2 	andeq	r0, r0, r2, asr #25
    1148:	0017ee21 	andseq	lr, r7, r1, lsr #28
    114c:	0008ab10 	andeq	sl, r8, r0, lsl fp
    1150:	51011600 	tstpl	r1, r0, lsl #12
    1154:	16007802 	strne	r7, [r0], -r2, lsl #16
    1158:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    115c:	53011600 	movwpl	r1, #5632	; 0x1600
    1160:	00007602 	andeq	r7, r0, r2, lsl #12
    1164:	00180621 	andseq	r0, r8, r1, lsr #12
    1168:	0008cd10 	andeq	ip, r8, r0, lsl sp
    116c:	50011600 	andpl	r1, r1, r0, lsl #12
    1170:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1174:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1178:	52011600 	andpl	r1, r1, #0, 12
    117c:	167f7a02 	ldrbtne	r7, [pc], -r2, lsl #20
    1180:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1184:	32220000 	eorcc	r0, r2, #0
    1188:	16100018 			; <UNDEFINED> instruction: 0x16100018
    118c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1190:	51011620 	tstpl	r1, r0, lsr #12
    1194:	16007802 	strne	r7, [r0], -r2, lsl #16
    1198:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    119c:	5301167f 	movwpl	r1, #5759	; 0x167f
    11a0:	00007602 	andeq	r7, r0, r2, lsl #12
    11a4:	18421d00 	stmdane	r2, {r8, sl, fp, ip}^
    11a8:	190c1000 	stmdbne	ip, {ip}
    11ac:	09b11000 	ldmibeq	r1!, {ip}
    11b0:	70140000 	andsvc	r0, r4, r0
    11b4:	031d0100 	tsteq	sp, #0, 2
    11b8:	00024c15 	andeq	r4, r2, r5, lsl ip
    11bc:	000d5200 	andeq	r5, sp, r0, lsl #4
    11c0:	000d4e00 	andeq	r4, sp, r0, lsl #28
    11c4:	006c1400 	rsbeq	r1, ip, r0, lsl #8
    11c8:	16031e01 	strne	r1, [r3], -r1, lsl #28
    11cc:	00000030 	andeq	r0, r0, r0, lsr r0
    11d0:	00000d86 	andeq	r0, r0, r6, lsl #27
    11d4:	00000d70 	andeq	r0, r0, r0, ror sp
    11d8:	00196423 	andseq	r6, r9, r3, lsr #8
    11dc:	00185a00 	andseq	r5, r8, r0, lsl #20
    11e0:	00187010 	andseq	r7, r8, r0, lsl r0
    11e4:	031e0110 	tsteq	lr, #16, 2
    11e8:	0009541a 	andeq	r5, r9, sl, lsl r4
    11ec:	19822400 	stmibne	r2, {sl, sp}
    11f0:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
    11f4:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
    11f8:	76250000 	strtvc	r0, [r5], -r0
    11fc:	26000019 			; <UNDEFINED> instruction: 0x26000019
    1200:	0000198e 	andeq	r1, r0, lr, lsl #19
    1204:	00000e3a 	andeq	r0, r0, sl, lsr lr
    1208:	00000e38 	andeq	r0, r0, r8, lsr lr
    120c:	18a82100 	stmiane	r8!, {r8, sp}
    1210:	09761000 	ldmdbeq	r6!, {ip}^
    1214:	01160000 	tsteq	r6, r0
    1218:	20080250 	andcs	r0, r8, r0, asr r2
    121c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1220:	01160078 	tsteq	r6, r8, ror r0
    1224:	7f790252 	svcvc	0x00790252
    1228:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    122c:	21000076 	tstcs	r0, r6, ror r0
    1230:	100018ca 	andne	r1, r0, sl, asr #17
    1234:	00000992 	muleq	r0, r2, r9
    1238:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    123c:	01160078 	tsteq	r6, r8, ror r0
    1240:	7f750252 	svcvc	0x00750252
    1244:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1248:	2200007b 	andcs	r0, r0, #123	; 0x7b
    124c:	100018fc 	strdne	r1, [r0], -ip
    1250:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1254:	01162008 	tsteq	r6, r8
    1258:	00780251 	rsbseq	r0, r8, r1, asr r2
    125c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1260:	01167f75 	tsteq	r6, r5, ror pc
    1264:	00760253 	rsbseq	r0, r6, r3, asr r2
    1268:	0c1d0000 	ldceq	0, cr0, [sp], {-0}
    126c:	42100019 	andsmi	r0, r0, #25
    1270:	16100019 			; <UNDEFINED> instruction: 0x16100019
    1274:	1c00000a 	stcne	0, cr0, [r0], {10}
    1278:	000005f2 	strdeq	r0, [r0], -r2
    127c:	14033a01 	strne	r3, [r3], #-2561	; 0xfffff5ff
    1280:	00000b84 	andeq	r0, r0, r4, lsl #23
    1284:	00000e4f 	andeq	r0, r0, pc, asr #28
    1288:	00000e4d 	andeq	r0, r0, sp, asr #28
    128c:	00193815 	andseq	r3, r9, r5, lsl r8
    1290:	00150f10 	andseq	r0, r5, r0, lsl pc
    1294:	50011600 	andpl	r1, r1, r0, lsl #12
    1298:	16007702 	strne	r7, [r0], -r2, lsl #14
    129c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    12a0:	52011600 	andpl	r1, r1, #0, 12
    12a4:	16007402 	strne	r7, [r0], -r2, lsl #8
    12a8:	76025301 	strvc	r5, [r2], -r1, lsl #6
    12ac:	7d021600 	stcvc	6, cr1, [r2, #-0]
    12b0:	16300104 	ldrtne	r0, [r0], -r4, lsl #2
    12b4:	01087d02 	tsteq	r8, r2, lsl #26
    12b8:	7d021640 	stcvc	6, cr1, [r2, #-256]	; 0xffffff00
    12bc:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    12c0:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    12c4:	02163801 	andseq	r3, r6, #65536	; 0x10000
    12c8:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    12cc:	27000000 	strcs	r0, [r0, -r0]
    12d0:	00001946 	andeq	r1, r0, r6, asr #18
    12d4:	10001370 	andne	r1, r0, r0, ror r3
    12d8:	13700003 	cmnne	r0, #3
    12dc:	13761000 	cmnne	r6, #0
    12e0:	68011000 	stmdavs	r1, {ip}
    12e4:	0a3f0902 	beq	fc36f4 <SYSTEM_CLOCK+0xa0a974>
    12e8:	58240000 	stmdapl	r4!, {}	; <UNPREDICTABLE>
    12ec:	65000019 	strvs	r0, [r0, #-25]	; 0xffffffe7
    12f0:	6300000e 	movwvs	r0, #14
    12f4:	0000000e 	andeq	r0, r0, lr
    12f8:	00194627 	andseq	r4, r9, r7, lsr #12
    12fc:	00141600 	andseq	r1, r4, r0, lsl #12
    1300:	16000010 			; <UNDEFINED> instruction: 0x16000010
    1304:	1c100014 	ldcne	0, cr0, [r0], {20}
    1308:	01100014 	tsteq	r0, r4, lsl r0
    130c:	680b027c 	stmdavs	fp, {r2, r3, r4, r5, r6, r9}
    1310:	2400000a 	strcs	r0, [r0], #-10
    1314:	00001958 	andeq	r1, r0, r8, asr r9
    1318:	00000e7a 	andeq	r0, r0, sl, ror lr
    131c:	00000e78 	andeq	r0, r0, r8, ror lr
    1320:	133e2800 	teqne	lr, #0, 16
    1324:	77021000 	strvc	r1, [r2, -r0]
    1328:	000a8700 	andeq	r8, sl, r0, lsl #14
    132c:	51011600 	tstpl	r1, r0, lsl #12
    1330:	16007802 	strne	r7, [r0], -r2, lsl #16
    1334:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1338:	53011600 	movwpl	r1, #5632	; 0x1600
    133c:	00007602 	andeq	r7, r0, r2, lsl #12
    1340:	0013e820 	andseq	lr, r3, r0, lsr #16
    1344:	0018d810 	andseq	sp, r8, r0, lsl r8
    1348:	000a9b00 	andeq	r9, sl, r0, lsl #22
    134c:	50011600 	andpl	r1, r1, r0, lsl #12
    1350:	00549102 	subseq	r9, r4, r2, lsl #2
    1354:	00143020 	andseq	r3, r4, r0, lsr #32
    1358:	0018d810 	andseq	sp, r8, r0, lsl r8
    135c:	000aaf00 	andeq	sl, sl, r0, lsl #30
    1360:	50011600 	andpl	r1, r1, r0, lsl #12
    1364:	00549102 	subseq	r9, r4, r2, lsl #2
    1368:	00177220 	andseq	r7, r7, r0, lsr #4
    136c:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1370:	000aeb00 	andeq	lr, sl, r0, lsl #22
    1374:	50011600 	andpl	r1, r1, r0, lsl #12
    1378:	16007702 	strne	r7, [r0], -r2, lsl #14
    137c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1380:	52011600 	andpl	r1, r1, #0, 12
    1384:	16007402 	strne	r7, [r0], -r2, lsl #8
    1388:	76025301 	strvc	r5, [r2], -r1, lsl #6
    138c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1390:	007b0208 	rsbseq	r0, fp, r8, lsl #4
    1394:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1398:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    139c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    13a0:	00007502 	andeq	r7, r0, r2, lsl #10
    13a4:	0017c620 	andseq	ip, r7, r0, lsr #12
    13a8:	000b8910 	andeq	r8, fp, r0, lsl r9
    13ac:	000b2700 	andeq	r2, fp, r0, lsl #14
    13b0:	50011600 	andpl	r1, r1, r0, lsl #12
    13b4:	16007702 	strne	r7, [r0], -r2, lsl #14
    13b8:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    13bc:	52011600 	andpl	r1, r1, #0, 12
    13c0:	16007402 	strne	r7, [r0], -r2, lsl #8
    13c4:	76025301 	strvc	r5, [r2], -r1, lsl #6
    13c8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    13cc:	007b0208 	rsbseq	r0, fp, r8, lsl #4
    13d0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    13d4:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    13d8:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    13dc:	00007502 	andeq	r7, r0, r2, lsl #10
    13e0:	00194e21 	andseq	r4, r9, r1, lsr #28
    13e4:	000b4910 	andeq	r4, fp, r0, lsl r9
    13e8:	50011600 	andpl	r1, r1, r0, lsl #12
    13ec:	16250802 	strtne	r0, [r5], -r2, lsl #16
    13f0:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    13f4:	52011600 	andpl	r1, r1, #0, 12
    13f8:	16007402 	strne	r7, [r0], -r2, lsl #8
    13fc:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1400:	62210000 	eorvs	r0, r1, #0
    1404:	65100019 	ldrvs	r0, [r0, #-25]	; 0xffffffe7
    1408:	1600000b 	strne	r0, [r0], -fp
    140c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1410:	52011600 	andpl	r1, r1, #0, 12
    1414:	16007402 	strne	r7, [r0], -r2, lsl #8
    1418:	76025301 	strvc	r5, [r2], -r1, lsl #6
    141c:	82220000 	eorhi	r0, r2, #0
    1420:	16100019 			; <UNDEFINED> instruction: 0x16100019
    1424:	30015001 	andcc	r5, r1, r1
    1428:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    142c:	01160078 	tsteq	r6, r8, ror r0
    1430:	00760253 	rsbseq	r0, r6, r3, asr r2
    1434:	01020000 	mrseq	r0, (UNDEF: 2)
    1438:	00052002 	andeq	r2, r5, r2
    143c:	0b7d0300 	bleq	1f42044 <SYSTEM_CLOCK+0x19892c4>
    1440:	ee1a0000 	cdp	0, 1, cr0, cr10, cr0, {0}
    1444:	01000003 	tsteq	r0, r3
    1448:	010f01d3 	ldrdeq	r0, [pc, -r3]
    144c:	000000ee 	andeq	r0, r0, lr, ror #1
    1450:	10000b88 	andne	r0, r0, r8, lsl #23
    1454:	10000f72 	andne	r0, r0, r2, ror pc
    1458:	00000e8d 	andeq	r0, r0, sp, lsl #29
    145c:	000fa301 	andeq	sl, pc, r1, lsl #6
    1460:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 568 <STACK_SIZE+0x168>
    1464:	d3010074 	movwle	r0, #4212	; 0x1074
    1468:	01062201 	tsteq	r6, r1, lsl #4
    146c:	0eef0000 	cdpeq	0, 14, cr0, cr15, cr0, {0}
    1470:	0eeb0000 	cdpeq	0, 14, cr0, cr11, cr0, {0}
    1474:	c2170000 	andsgt	r0, r7, #0
    1478:	01000003 	tsteq	r0, r3
    147c:	ee2d01d3 	mcr	1, 1, r0, cr13, cr3, {6}
    1480:	11000002 	tstne	r0, r2
    1484:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    1488:	0f00000f 	svceq	0x0000000f
    148c:	00786469 	rsbseq	r6, r8, r9, ror #8
    1490:	3c01d301 	stccc	3, cr13, [r1], {1}
    1494:	000000ee 	andeq	r0, r0, lr, ror #1
    1498:	00000f45 	andeq	r0, r0, r5, asr #30
    149c:	00000f2f 	andeq	r0, r0, pc, lsr #30
    14a0:	0004f617 	andeq	pc, r4, r7, lsl r6	; <UNPREDICTABLE>
    14a4:	01d30100 	bicseq	r0, r3, r0, lsl #2
    14a8:	0000ee48 	andeq	lr, r0, r8, asr #28
    14ac:	000fca00 	andeq	ip, pc, r0, lsl #20
    14b0:	000fc600 	andeq	ip, pc, r0, lsl #12
    14b4:	0e7a1700 	cdpeq	7, 7, cr1, cr10, cr0, {0}
    14b8:	d3010000 	movwle	r0, #4096	; 0x1000
    14bc:	00295701 	eoreq	r5, r9, r1, lsl #14
    14c0:	0ff40000 	svceq	0x00f40000
    14c4:	0fe80000 	svceq	0x00e80000
    14c8:	b8170000 	ldmdalt	r7, {}	; <UNPREDICTABLE>
    14cc:	01000005 	tsteq	r0, r5
    14d0:	306b01d3 	ldrdcc	r0, [fp], #-19	; 0xffffffed	; <UNPREDICTABLE>
    14d4:	53000000 	movwpl	r0, #0
    14d8:	47000010 	smladmi	r0, r0, r0, r0
    14dc:	17000010 	smladne	r0, r0, r0, r0
    14e0:	000005be 			; <UNDEFINED> instruction: 0x000005be
    14e4:	7e01d301 	cdpvc	3, 0, cr13, cr1, cr1, {0}
    14e8:	00000030 	andeq	r0, r0, r0, lsr r0
    14ec:	000010a5 	andeq	r1, r0, r5, lsr #1
    14f0:	000010a1 	andeq	r1, r0, r1, lsr #1
    14f4:	001a0c17 	andseq	r0, sl, r7, lsl ip
    14f8:	01d30100 	bicseq	r0, r3, r0, lsl #2
    14fc:	00003092 	muleq	r0, r2, r0
    1500:	0010cd00 	andseq	ip, r0, r0, lsl #26
    1504:	0010c500 	andseq	ip, r0, r0, lsl #10
    1508:	04521c00 	ldrbeq	r1, [r2], #-3072	; 0xfffff400
    150c:	db010000 	blle	41514 <SYSTICK_CYCLES+0x32ab5>
    1510:	0b840e01 	bleq	fe104d1c <__RAM_segment_used_end__+0xc6004d1c>
    1514:	11080000 	mrsne	r0, (UNDEF: 8)
    1518:	11040000 	mrsne	r0, (UNDEF: 4)
    151c:	08290000 	stmdaeq	r9!, {}	; <UNPREDICTABLE>
    1520:	0301e701 	movweq	lr, #5889	; 0x1701
    1524:	00000c86 	andeq	r0, r0, r6, lsl #25
    1528:	0100552a 	tsteq	r0, sl, lsr #10
    152c:	a20e01e8 	andge	r0, lr, #232, 2	; 0x3a
    1530:	2a000000 	bcs	1538 <__HEAP_SIZE+0x538>
    1534:	e9010046 	stmdb	r1, {r1, r2, r6}
    1538:	00290e01 	eoreq	r0, r9, r1, lsl #28
    153c:	1c000000 	stcne	0, cr0, [r0], {-0}
    1540:	00000546 	andeq	r0, r0, r6, asr #10
    1544:	0501ea01 	streq	lr, [r1, #-2561]	; 0xfffff5ff
    1548:	00000c65 	andeq	r0, r0, r5, ror #24
    154c:	0000114c 	andeq	r1, r0, ip, asr #2
    1550:	00001148 	andeq	r1, r0, r8, asr #2
    1554:	0003a61c 	andeq	sl, r3, ip, lsl r6
    1558:	01ed0100 	mvneq	r0, r0, lsl #2
    155c:	00008507 	andeq	r8, r0, r7, lsl #10
    1560:	00118400 	andseq	r8, r1, r0, lsl #8
    1564:	00117800 	andseq	r7, r1, r0, lsl #16
    1568:	04a41c00 	strteq	r1, [r4], #3072	; 0xc00
    156c:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    1570:	00850701 	addeq	r0, r5, r1, lsl #14
    1574:	11e10000 	mvnne	r0, r0
    1578:	11d70000 	bicsne	r0, r7, r0
    157c:	7a140000 	bvc	501584 <__RAM_SIZE+0x401584>
    1580:	01f30100 	mvnseq	r0, r0, lsl #2
    1584:	000fa310 	andeq	sl, pc, r0, lsl r3	; <UNPREDICTABLE>
    1588:	00122300 	andseq	r2, r2, r0, lsl #6
    158c:	00122100 	andseq	r2, r2, r0, lsl #2
    1590:	327a1400 	rsbscc	r1, sl, #0, 8
    1594:	01f40100 	mvnseq	r0, r0, lsl #2
    1598:	000fa310 	andeq	sl, pc, r0, lsl r3	; <UNPREDICTABLE>
    159c:	00124100 	andseq	r4, r2, r0, lsl #2
    15a0:	00123b00 	andseq	r3, r2, r0, lsl #22
    15a4:	03d81c00 	bicseq	r1, r8, #0, 24
    15a8:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    15ac:	00301001 	eorseq	r1, r0, r1
    15b0:	127f0000 	rsbsne	r0, pc, #0
    15b4:	12730000 	rsbsne	r0, r3, #0
    15b8:	bd1c0000 	ldclt	0, cr0, [ip, #-0]
    15bc:	01000005 	tsteq	r0, r5
    15c0:	30100219 	andscc	r0, r0, r9, lsl r2
    15c4:	d6000000 	strle	r0, [r0], -r0
    15c8:	cc000012 	stcgt	0, cr0, [r0], {18}
    15cc:	1c000012 	stcne	0, cr0, [r0], {18}
    15d0:	0000043e 	andeq	r0, r0, lr, lsr r4
    15d4:	10022c01 	andne	r2, r2, r1, lsl #24
    15d8:	000000fa 	strdeq	r0, [r0], -sl
    15dc:	00001318 	andeq	r1, r0, r8, lsl r3
    15e0:	00001316 	andeq	r1, r0, r6, lsl r3
    15e4:	000ba62b 	andeq	sl, fp, fp, lsr #12
    15e8:	001b1c10 	andseq	r1, fp, r0, lsl ip
    15ec:	0bba2b00 	bleq	fee8c1f4 <__RAM_segment_used_end__+0xc6d8c1f4>
    15f0:	1b271000 	blne	9c55f8 <SYSTEM_CLOCK+0x40c878>
    15f4:	d02b0000 	eorle	r0, fp, r0
    15f8:	3210000b 	andscc	r0, r0, #11
    15fc:	2b00001b 	blcs	1670 <__HEAP_SIZE+0x670>
    1600:	10000be2 	andne	r0, r0, r2, ror #23
    1604:	00001b32 	andeq	r1, r0, r2, lsr fp
    1608:	000c1e2b 	andeq	r1, ip, fp, lsr #28
    160c:	001b3d10 	andseq	r3, fp, r0, lsl sp
    1610:	0c282b00 			; <UNDEFINED> instruction: 0x0c282b00
    1614:	1b481000 	blne	120561c <SYSTEM_CLOCK+0xc4c89c>
    1618:	322b0000 	eorcc	r0, fp, #0
    161c:	5310000c 	tstpl	r0, #12
    1620:	2b00001b 	blcs	1694 <__HEAP_SIZE+0x694>
    1624:	10000c42 	andne	r0, r0, r2, asr #24
    1628:	00001b5e 	andeq	r1, r0, lr, asr fp
    162c:	000c4c2b 	andeq	r4, ip, fp, lsr #24
    1630:	001b4810 	andseq	r4, fp, r0, lsl r8
    1634:	0c582b00 	mrrceq	11, 0, r2, r8, cr0
    1638:	1b531000 	blne	14c5640 <SYSTEM_CLOCK+0xf0c8c0>
    163c:	5c2b0000 	stcpl	0, cr0, [fp], #-0
    1640:	6910000c 	ldmdbvs	r0, {r2, r3}
    1644:	2b00001b 	blcs	16b8 <__HEAP_SIZE+0x6b8>
    1648:	10000c62 	andne	r0, r0, r2, ror #24
    164c:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1650:	000c702b 	andeq	r7, ip, fp, lsr #32
    1654:	001b4810 	andseq	r4, fp, r0, lsl r8
    1658:	0c782b00 			; <UNDEFINED> instruction: 0x0c782b00
    165c:	1b531000 	blne	14c5664 <SYSTEM_CLOCK+0xf0c8e4>
    1660:	7c2b0000 	stcvc	0, cr0, [fp], #-0
    1664:	6910000c 	ldmdbvs	r0, {r2, r3}
    1668:	2b00001b 	blcs	16dc <__HEAP_SIZE+0x6dc>
    166c:	10000c8c 	andne	r0, r0, ip, lsl #25
    1670:	00001b48 	andeq	r1, r0, r8, asr #22
    1674:	000c962b 	andeq	r9, ip, fp, lsr #12
    1678:	001b3d10 	andseq	r3, fp, r0, lsl sp
    167c:	0ca02b00 	vstmiaeq	r0!, {d2-d1}
    1680:	1b481000 	blne	1205688 <SYSTEM_CLOCK+0xc4c908>
    1684:	ac2b0000 	stcge	0, cr0, [fp], #-0
    1688:	5e10000c 	cdppl	0, 1, cr0, cr0, cr12, {0}
    168c:	2b00001b 	blcs	1700 <__HEAP_SIZE+0x700>
    1690:	10000cb8 			; <UNDEFINED> instruction: 0x10000cb8
    1694:	00001b48 	andeq	r1, r0, r8, asr #22
    1698:	000cdc2b 	andeq	sp, ip, fp, lsr #24
    169c:	001b5310 	andseq	r5, fp, r0, lsl r3
    16a0:	0cee2b00 	vstmiaeq	lr!, {d18-d17}
    16a4:	1b5e1000 	blne	17856ac <SYSTEM_CLOCK+0x11cc92c>
    16a8:	fe2b0000 	cdp2	0, 2, cr0, cr11, cr0, {0}
    16ac:	7410000c 	ldrvc	r0, [r0], #-12
    16b0:	2b00001b 	blcs	1724 <__HEAP_SIZE+0x724>
    16b4:	10000d06 	andne	r0, r0, r6, lsl #26
    16b8:	00001b53 	andeq	r1, r0, r3, asr fp
    16bc:	000d122b 	andeq	r1, sp, fp, lsr #4
    16c0:	001b7410 	andseq	r7, fp, r0, lsl r4
    16c4:	0d1a2b00 	vldreq	d2, [sl, #-0]
    16c8:	1b531000 	blne	14c56d0 <SYSTEM_CLOCK+0xf0c950>
    16cc:	262b0000 	strtcs	r0, [fp], -r0
    16d0:	7410000d 	ldrvc	r0, [r0], #-13
    16d4:	2b00001b 	blcs	1748 <__HEAP_SIZE+0x748>
    16d8:	10000d32 	andne	r0, r0, r2, lsr sp
    16dc:	00001b53 	andeq	r1, r0, r3, asr fp
    16e0:	000d3e2b 	andeq	r3, sp, fp, lsr #28
    16e4:	001b7410 	andseq	r7, fp, r0, lsl r4
    16e8:	0d462b00 	vstreq	d18, [r6, #-0]
    16ec:	1b531000 	blne	14c56f4 <SYSTEM_CLOCK+0xf0c974>
    16f0:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    16f4:	4810000d 	ldmdami	r0, {r0, r2, r3}
    16f8:	2b00001b 	blcs	176c <__HEAP_SIZE+0x76c>
    16fc:	10000d5e 	andne	r0, r0, lr, asr sp
    1700:	00001b27 	andeq	r1, r0, r7, lsr #22
    1704:	000d6e2b 	andeq	r6, sp, fp, lsr #28
    1708:	001b7410 	andseq	r7, fp, r0, lsl r4
    170c:	0d962b00 	vldreq	d2, [r6]
    1710:	1b7f1000 	blne	1fc5718 <SYSTEM_CLOCK+0x1a0c998>
    1714:	a82b0000 	stmdage	fp!, {}	; <UNPREDICTABLE>
    1718:	3210000d 	andscc	r0, r0, #13
    171c:	2000001b 	andcs	r0, r0, fp, lsl r0
    1720:	10000dda 	ldrdne	r0, [r0], -sl
    1724:	00000fa8 	andeq	r0, r0, r8, lsr #31
    1728:	00000eae 	andeq	r0, r0, lr, lsr #29
    172c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1730:	0116007a 	tsteq	r6, sl, ror r0
    1734:	00740251 	rsbseq	r0, r4, r1, asr r2
    1738:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    173c:	0116007b 	tsteq	r6, fp, ror r0
    1740:	00750253 	rsbseq	r0, r5, r3, asr r2
    1744:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1748:	f6009105 			; <UNDEFINED> instruction: 0xf6009105
    174c:	02162908 	andseq	r2, r6, #8, 18	; 0x20000
    1750:	9103087d 	tstls	r3, sp, ror r8
    1754:	02160608 	andseq	r0, r6, #8, 12	; 0x800000
    1758:	91030c7d 	tstls	r3, sp, ror ip
    175c:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1760:	9103107d 	tstls	r3, sp, ror r0
    1764:	2b000610 	blcs	2fac <__HEAP_SIZE+0x1fac>
    1768:	10000eb4 			; <UNDEFINED> instruction: 0x10000eb4
    176c:	00001b74 	andeq	r1, r0, r4, ror fp
    1770:	000ec42b 	andeq	ip, lr, fp, lsr #8
    1774:	001b3210 	andseq	r3, fp, r0, lsl r2
    1778:	0eec2000 	cdpeq	0, 14, cr2, cr12, cr0, {0}
    177c:	0fa81000 	svceq	0x00a81000
    1780:	0f0c0000 	svceq	0x000c0000
    1784:	01160000 	tsteq	r6, r0
    1788:	007a0250 	rsbseq	r0, sl, r0, asr r2
    178c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1790:	01160074 	tsteq	r6, r4, ror r0
    1794:	007b0252 	rsbseq	r0, fp, r2, asr r2
    1798:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    179c:	02160075 	andseq	r0, r6, #117	; 0x75
    17a0:	9106007d 	tstls	r6, sp, ror r0
    17a4:	08f67fa8 	ldmeq	r6!, {r3, r5, r7, r8, r9, sl, fp, ip, sp, lr}^
    17a8:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    17ac:	08910308 	ldmeq	r1, {r3, r8, r9}
    17b0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    17b4:	0078020c 	rsbseq	r0, r8, ip, lsl #4
    17b8:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    17bc:	06109107 	ldreq	r9, [r0], -r7, lsl #2
    17c0:	1af7ff0b 	bne	ffe013f4 <__RAM_segment_used_end__+0xc7d013f4>
    17c4:	0f0c2100 	svceq	0x000c2100
    17c8:	0f281000 	svceq	0x00281000
    17cc:	01160000 	tsteq	r6, r0
    17d0:	00740251 	rsbseq	r0, r4, r1, asr r2
    17d4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    17d8:	01167f78 	tsteq	r6, r8, ror pc
    17dc:	00750253 	rsbseq	r0, r5, r3, asr r2
    17e0:	0f362000 	svceq	0x00362000
    17e4:	150f1000 	strne	r1, [pc, #-0]	; 17ec <__HEAP_SIZE+0x7ec>
    17e8:	0f840000 	svceq	0x00840000
    17ec:	01160000 	tsteq	r6, r0
    17f0:	007a0250 	rsbseq	r0, sl, r0, asr r2
    17f4:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    17f8:	01160074 	tsteq	r6, r4, ror r0
    17fc:	00780252 	rsbseq	r0, r8, r2, asr r2
    1800:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1804:	02160075 	andseq	r0, r6, #117	; 0x75
    1808:	760c007d 			; <UNDEFINED> instruction: 0x760c007d
    180c:	76264f00 	strtvc	r4, [r6], -r0, lsl #30
    1810:	00762700 	rsbseq	r2, r6, r0, lsl #14
    1814:	161c264f 	ldrne	r2, [ip], -pc, asr #12
    1818:	04047d02 	streq	r7, [r4], #-3330	; 0xfffff2fe
    181c:	254f0076 	strbcs	r0, [pc, #-118]	; 17ae <__HEAP_SIZE+0x7ae>
    1820:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1824:	02163a01 	andseq	r3, r6, #4096	; 0x1000
    1828:	91040c7d 	tstls	r4, sp, ror ip
    182c:	16067fb0 			; <UNDEFINED> instruction: 0x16067fb0
    1830:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1834:	02160077 	andseq	r0, r6, #119	; 0x77
    1838:	3501147d 	strcc	r1, [r1, #-1149]	; 0xfffffb83
    183c:	0f642200 	svceq	0x00642200
    1840:	01161000 	tsteq	r6, r0
    1844:	20080250 	andcs	r0, r8, r0, asr r2
    1848:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    184c:	01160074 	tsteq	r6, r4, ror r0
    1850:	7f760252 	svcvc	0x00760252
    1854:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1858:	00000075 	andeq	r0, r0, r5, ror r0
    185c:	00002903 	andeq	r2, r0, r3, lsl #18
    1860:	04941a00 	ldreq	r1, [r4], #2560	; 0xa00
    1864:	53010000 	movwpl	r0, #4096	; 0x1000
    1868:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    186c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1870:	0e10000f 	cdpeq	0, 1, cr0, cr0, cr15, {0}
    1874:	2b100013 	blcs	4018c8 <__RAM_SIZE+0x3018c8>
    1878:	01000013 	tsteq	r0, r3, lsl r0
    187c:	00001357 	andeq	r1, r0, r7, asr r3
    1880:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1884:	01530100 	cmpeq	r3, r0, lsl #2
    1888:	00010622 	andeq	r0, r1, r2, lsr #12
    188c:	00138d00 	andseq	r8, r3, r0, lsl #26
    1890:	00138900 	andseq	r8, r3, r0, lsl #18
    1894:	03c21700 	biceq	r1, r2, #0, 14
    1898:	53010000 	movwpl	r0, #4096	; 0x1000
    189c:	02ee2d01 	rsceq	r2, lr, #1, 26	; 0x40
    18a0:	13b10000 			; <UNDEFINED> instruction: 0x13b10000
    18a4:	13ad0000 			; <UNDEFINED> instruction: 0x13ad0000
    18a8:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    18ac:	01007864 	tsteq	r0, r4, ror #16
    18b0:	ee3c0153 	mrc	1, 1, r0, cr12, cr3, {2}
    18b4:	d5000000 	strle	r0, [r0, #-0]
    18b8:	d1000013 	tstle	r0, r3, lsl r0
    18bc:	17000013 	smladne	r0, r3, r0, r0
    18c0:	000004f6 	strdeq	r0, [r0], -r6
    18c4:	48015301 	stmdami	r1, {r0, r8, r9, ip, lr}
    18c8:	000000ee 	andeq	r0, r0, lr, ror #1
    18cc:	000013f7 	strdeq	r1, [r0], -r7
    18d0:	000013f3 	strdeq	r1, [r0], -r3
    18d4:	000e7a17 	andeq	r7, lr, r7, lsl sl
    18d8:	01530100 	cmpeq	r3, r0, lsl #2
    18dc:	00002957 	andeq	r2, r0, r7, asr r9
    18e0:	00141f00 	andseq	r1, r4, r0, lsl #30
    18e4:	00141500 	andseq	r1, r4, r0, lsl #10
    18e8:	05b81700 	ldreq	r1, [r8, #1792]!	; 0x700
    18ec:	53010000 	movwpl	r0, #4096	; 0x1000
    18f0:	00306b01 	eorseq	r6, r0, r1, lsl #22
    18f4:	14770000 	ldrbtne	r0, [r7], #-0
    18f8:	146f0000 	strbtne	r0, [pc], #-0	; 1900 <__HEAP_SIZE+0x900>
    18fc:	be170000 	cdplt	0, 1, cr0, cr7, cr0, {0}
    1900:	01000005 	tsteq	r0, r5
    1904:	307e0153 	rsbscc	r0, lr, r3, asr r1
    1908:	b7000000 	strlt	r0, [r0, -r0]
    190c:	ad000014 	stcge	0, cr0, [r0, #-80]	; 0xffffffb0
    1910:	17000014 	smladne	r0, r4, r0, r0
    1914:	00001a0c 	andeq	r1, r0, ip, lsl #20
    1918:	92015301 	andls	r5, r1, #67108864	; 0x4000000
    191c:	00000030 	andeq	r0, r0, r0, lsr r0
    1920:	000014fd 	strdeq	r1, [r0], -sp
    1924:	000014f9 	strdeq	r1, [r0], -r9
    1928:	66756212 			; <UNDEFINED> instruction: 0x66756212
    192c:	01550100 	cmpeq	r5, r0, lsl #2
    1930:	00135708 	andseq	r5, r3, r8, lsl #14
    1934:	b0910300 	addslt	r0, r1, r0, lsl #6
    1938:	656c147f 	strbvs	r1, [ip, #-1151]!	; 0xfffffb81
    193c:	5601006e 	strpl	r0, [r1], -lr, rrx
    1940:	00ee0a01 	rsceq	r0, lr, r1, lsl #20
    1944:	154b0000 	strbne	r0, [fp, #-0]
    1948:	151d0000 	ldrne	r0, [sp, #-0]
    194c:	b81c0000 	ldmdalt	ip, {}	; <UNPREDICTABLE>
    1950:	01000003 	tsteq	r0, r3
    1954:	290a0157 	stmdbcs	sl, {r0, r1, r2, r4, r6, r8}
    1958:	6a000000 	bvs	1960 <__HEAP_SIZE+0x960>
    195c:	60000016 	andvs	r0, r0, r6, lsl r0
    1960:	13000016 	movwne	r0, #22
    1964:	000003a0 	andeq	r0, r0, r0, lsr #7
    1968:	17015a01 	strne	r5, [r1, -r1, lsl #20]
    196c:	00001377 	andeq	r1, r0, r7, ror r3
    1970:	3f700305 	svccc	0x00700305
    1974:	521c1000 	andspl	r1, ip, #0
    1978:	01000004 	tsteq	r0, r4
    197c:	7d08016f 	stfvcs	f0, [r8, #-444]	; 0xfffffe44
    1980:	cc00000b 	stcgt	0, cr0, [r0], {11}
    1984:	c0000016 	andgt	r0, r0, r6, lsl r0
    1988:	1c000016 	stcne	0, cr0, [r0], {22}
    198c:	0000040f 	andeq	r0, r0, pc, lsl #8
    1990:	07017f01 	streq	r7, [r1, -r1, lsl #30]
    1994:	00000085 	andeq	r0, r0, r5, lsl #1
    1998:	00001729 	andeq	r1, r0, r9, lsr #14
    199c:	0000171f 	andeq	r1, r0, pc, lsl r7
    19a0:	706d7414 	rsbvc	r7, sp, r4, lsl r4
    19a4:	01800100 	orreq	r0, r0, r0, lsl #2
    19a8:	0000290a 	andeq	r2, r0, sl, lsl #18
    19ac:	00176c00 	andseq	r6, r7, r0, lsl #24
    19b0:	00176800 	andseq	r6, r7, r0, lsl #16
    19b4:	04221c00 	strteq	r1, [r2], #-3072	; 0xfffff400
    19b8:	81010000 	mrshi	r0, (UNDEF: 1)
    19bc:	005f1101 	subseq	r1, pc, r1, lsl #2
    19c0:	179d0000 	ldrne	r0, [sp, r0]
    19c4:	17910000 	ldrne	r0, [r1, r0]
    19c8:	921d0000 	andsls	r0, sp, #0
    19cc:	f2100011 	vqadd.s16	d0, d0, d1
    19d0:	34100011 	ldrcc	r0, [r0], #-17	; 0xffffffef
    19d4:	1c000011 	stcne	0, cr0, [r0], {17}
    19d8:	00001461 	andeq	r1, r0, r1, ror #8
    19dc:	12019c01 	andne	r9, r1, #256	; 0x100
    19e0:	00000030 	andeq	r0, r0, r0, lsr r0
    19e4:	000017ec 	andeq	r1, r0, ip, ror #15
    19e8:	000017e8 	andeq	r1, r0, r8, ror #15
    19ec:	0f9c2b00 	svceq	0x009c2b00
    19f0:	1b1c1000 	blne	7059f8 <SYSTEM_CLOCK+0x14cc78>
    19f4:	b02b0000 	eorlt	r0, fp, r0
    19f8:	3210000f 	andscc	r0, r0, #15
    19fc:	2b00001b 	blcs	1a70 <__HEAP_SIZE+0xa70>
    1a00:	10000fc2 	andne	r0, r0, r2, asr #31
    1a04:	00001b27 	andeq	r1, r0, r7, lsr #22
    1a08:	000fd42b 	andeq	sp, pc, fp, lsr #8
    1a0c:	001b2710 	andseq	r2, fp, r0, lsl r7
    1a10:	0fe62b00 	svceq	0x00e62b00
    1a14:	1b321000 	blne	c85a1c <SYSTEM_CLOCK+0x6ccc9c>
    1a18:	f62b0000 			; <UNDEFINED> instruction: 0xf62b0000
    1a1c:	3210000f 	andscc	r0, r0, #15
    1a20:	2000001b 	andcs	r0, r0, fp, lsl r0
    1a24:	1000103e 	andne	r1, r0, lr, lsr r0
    1a28:	00001791 	muleq	r0, r1, r7
    1a2c:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    1a30:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1a34:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1a38:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1a3c:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1a40:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a44:	0116007a 	tsteq	r6, sl, ror r0
    1a48:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1a4c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1a50:	3f640305 	svccc	0x00640305
    1a54:	02161000 	andseq	r1, r6, #0
    1a58:	3301047d 	movwcc	r0, #5245	; 0x147d
    1a5c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1a60:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1a64:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1a68:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1a6c:	105c2000 	subsne	r2, ip, r0
    1a70:	17911000 	ldrne	r1, [r1, r0]
    1a74:	11fe0000 	mvnsne	r0, r0
    1a78:	01160000 	tsteq	r6, r0
    1a7c:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    1a80:	0116067f 	tsteq	r6, pc, ror r6
    1a84:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    1a88:	0116067f 	tsteq	r6, pc, ror r6
    1a8c:	007a0252 	rsbseq	r0, sl, r2, asr r2
    1a90:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1a94:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1a98:	0305007d 	movweq	r0, #20605	; 0x507d
    1a9c:	10003f68 	andne	r3, r0, r8, ror #30
    1aa0:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1aa4:	02163401 	andseq	r3, r6, #16777216	; 0x1000000
    1aa8:	9103087d 	tstls	r3, sp, ror r8
    1aac:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1ab0:	91030c7d 	tstls	r3, sp, ror ip
    1ab4:	20000610 	andcs	r0, r0, r0, lsl r6
    1ab8:	10001084 	andne	r1, r0, r4, lsl #1
    1abc:	00001791 	muleq	r0, r1, r7
    1ac0:	00001238 	andeq	r1, r0, r8, lsr r2
    1ac4:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1ac8:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1acc:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1ad0:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1ad4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1ad8:	0116007a 	tsteq	r6, sl, ror r0
    1adc:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1ae0:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1ae4:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1ae8:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1aec:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1af0:	10a82000 	adcne	r2, r8, r0
    1af4:	0b891000 	bleq	fe245afc <__RAM_segment_used_end__+0xc6145afc>
    1af8:	12810000 	addne	r0, r1, #0
    1afc:	01160000 	tsteq	r6, r0
    1b00:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    1b04:	0116067f 	tsteq	r6, pc, ror r6
    1b08:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    1b0c:	0116067f 	tsteq	r6, pc, ror r6
    1b10:	007a0252 	rsbseq	r0, sl, r2, asr r2
    1b14:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1b18:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1b1c:	f503007d 			; <UNDEFINED> instruction: 0xf503007d
    1b20:	02162908 	andseq	r2, r6, #8, 18	; 0x20000
    1b24:	7502087d 	strvc	r0, [r2, #-2173]	; 0xfffff783
    1b28:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1b2c:	0c91030c 	ldceq	3, cr0, [r1], {12}
    1b30:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1b34:	10910310 	addsne	r0, r1, r0, lsl r3
    1b38:	b62b0006 	strtlt	r0, [fp], -r6
    1b3c:	5e100010 	mrcpl	0, 0, r0, cr0, cr0, {0}
    1b40:	2b00001b 	blcs	1bb4 <__HEAP_SIZE+0xbb4>
    1b44:	100010cc 	andne	r1, r0, ip, asr #1
    1b48:	00001b69 	andeq	r1, r0, r9, ror #22
    1b4c:	0010d22b 	andseq	sp, r0, fp, lsr #4
    1b50:	001b3d10 	andseq	r3, fp, r0, lsl sp
    1b54:	10de2b00 	sbcsne	r2, lr, r0, lsl #22
    1b58:	1b5e1000 	blne	1785b60 <SYSTEM_CLOCK+0x11ccde0>
    1b5c:	f02b0000 			; <UNDEFINED> instruction: 0xf02b0000
    1b60:	48100010 	ldmdami	r0, {r4}
    1b64:	2b00001b 	blcs	1bd8 <__HEAP_SIZE+0xbd8>
    1b68:	100010fc 	strdne	r1, [r0], -ip
    1b6c:	00001b8a 	andeq	r1, r0, sl, lsl #23
    1b70:	0011022b 	andseq	r0, r1, fp, lsr #4
    1b74:	001b9510 	andseq	r9, fp, r0, lsl r5
    1b78:	110e2b00 	tstne	lr, r0, lsl #22
    1b7c:	1b5e1000 	blne	1785b84 <SYSTEM_CLOCK+0x11cce04>
    1b80:	1e2b0000 	cdpne	0, 2, cr0, cr11, cr0, {0}
    1b84:	27100011 			; <UNDEFINED> instruction: 0x27100011
    1b88:	2b00001b 	blcs	1bfc <__HEAP_SIZE+0xbfc>
    1b8c:	10001128 	andne	r1, r0, r8, lsr #2
    1b90:	00001b95 	muleq	r0, r5, fp
    1b94:	0011342b 	andseq	r3, r1, fp, lsr #8
    1b98:	001ba010 	andseq	sl, fp, r0, lsl r0
    1b9c:	11422b00 	cmpne	r2, r0, lsl #22
    1ba0:	1b3d1000 	blne	f45ba8 <SYSTEM_CLOCK+0x98ce28>
    1ba4:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    1ba8:	5e100011 	mrcpl	0, 0, r0, cr0, cr1, {0}
    1bac:	2b00001b 	blcs	1c20 <__HEAP_SIZE+0xc20>
    1bb0:	1000115a 	andne	r1, r0, sl, asr r1
    1bb4:	00001b32 	andeq	r1, r0, r2, lsr fp
    1bb8:	0011682b 	andseq	r6, r1, fp, lsr #16
    1bbc:	001b2710 	andseq	r2, fp, r0, lsl r7
    1bc0:	11822b00 	orrne	r2, r2, r0, lsl #22
    1bc4:	1b321000 	blne	c85bcc <SYSTEM_CLOCK+0x6cce4c>
    1bc8:	9a150000 	bls	541bd0 <__RAM_SIZE+0x441bd0>
    1bcc:	91100012 	tstls	r0, r2, lsl r0
    1bd0:	16000017 			; <UNDEFINED> instruction: 0x16000017
    1bd4:	91045001 	tstls	r4, r1
    1bd8:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1bdc:	91045101 	tstls	r4, r1, lsl #2
    1be0:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1be4:	7a025201 	bvc	963f0 <SYSTICK_CYCLES+0x87991>
    1be8:	53011600 	movwpl	r1, #5632	; 0x1600
    1bec:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1bf0:	03007d02 	movweq	r7, #3330	; 0xd02
    1bf4:	167fb091 			; <UNDEFINED> instruction: 0x167fb091
    1bf8:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    1bfc:	02160074 	andseq	r0, r6, #116	; 0x74
    1c00:	9103087d 	tstls	r3, sp, ror r8
    1c04:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1c08:	91030c7d 	tstls	r3, sp, ror ip
    1c0c:	00000610 	andeq	r0, r0, r0, lsl r6
    1c10:	00013318 	andeq	r3, r1, r8, lsl r3
    1c14:	00136700 	andseq	r6, r3, r0, lsl #14
    1c18:	00301900 	eorseq	r1, r0, r0, lsl #18
    1c1c:	001f0000 	andseq	r0, pc, r0
    1c20:	000fa318 	andeq	sl, pc, r8, lsl r3	; <UNPREDICTABLE>
    1c24:	00137700 	andseq	r7, r3, r0, lsl #14
    1c28:	00301900 	eorseq	r1, r0, r0, lsl #18
    1c2c:	00090000 	andeq	r0, r9, r0
    1c30:	00136703 	andseq	r6, r3, r3, lsl #14
    1c34:	05e21a00 	strbeq	r1, [r2, #2560]!	; 0xa00
    1c38:	32010000 	andcc	r0, r1, #0
    1c3c:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    1c40:	c0000000 	andgt	r0, r0, r0
    1c44:	8610000a 	ldrhi	r0, [r0], -sl
    1c48:	0a10000b 	beq	401c7c <__RAM_SIZE+0x301c7c>
    1c4c:	01000018 	tsteq	r0, r8, lsl r0
    1c50:	0000150f 	andeq	r1, r0, pc, lsl #10
    1c54:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1c58:	01320100 	teqeq	r2, r0, lsl #2
    1c5c:	0001062c 	andeq	r0, r1, ip, lsr #12
    1c60:	00184b00 	andseq	r4, r8, r0, lsl #22
    1c64:	00184300 	andseq	r4, r8, r0, lsl #6
    1c68:	03c21700 	biceq	r1, r2, #0, 14
    1c6c:	32010000 	andcc	r0, r1, #0
    1c70:	02ee3701 	rsceq	r3, lr, #262144	; 0x40000
    1c74:	188b0000 	stmne	fp, {}	; <UNPREDICTABLE>
    1c78:	18830000 	stmne	r3, {}	; <UNPREDICTABLE>
    1c7c:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    1c80:	01007864 	tsteq	r0, r4, ror #16
    1c84:	ee460132 	mcr	1, 2, r0, cr6, cr2, {1}
    1c88:	cb000000 	blgt	1c90 <__HEAP_SIZE+0xc90>
    1c8c:	c3000018 	movwgt	r0, #24
    1c90:	17000018 	smladne	r0, r8, r0, r0
    1c94:	000004f6 	strdeq	r0, [r0], -r6
    1c98:	52013201 	andpl	r3, r1, #268435456	; 0x10000000
    1c9c:	000000ee 	andeq	r0, r0, lr, ror #1
    1ca0:	00001907 	andeq	r1, r0, r7, lsl #18
    1ca4:	00001903 	andeq	r1, r0, r3, lsl #18
    1ca8:	000e7a17 	andeq	r7, lr, r7, lsl sl
    1cac:	01320100 	teqeq	r2, r0, lsl #2
    1cb0:	00007e6d 	andeq	r7, r0, sp, ror #28
    1cb4:	00192f00 	andseq	r2, r9, r0, lsl #30
    1cb8:	00192500 	andseq	r2, r9, r0, lsl #10
    1cbc:	04521000 	ldrbeq	r1, [r2], #-0
    1cc0:	32010000 	andcc	r0, r1, #0
    1cc4:	0b7d7901 	bleq	1f600d0 <SYSTEM_CLOCK+0x19a7350>
    1cc8:	91020000 	mrsls	r0, (UNDEF: 2)
    1ccc:	05f81008 	ldrbeq	r1, [r8, #8]!
    1cd0:	32010000 	andcc	r0, r1, #0
    1cd4:	007e9601 	rsbseq	r9, lr, r1, lsl #12
    1cd8:	91020000 	mrsls	r0, (UNDEF: 2)
    1cdc:	05b81010 	ldreq	r1, [r8, #16]!
    1ce0:	32010000 	andcc	r0, r1, #0
    1ce4:	0030a901 	eorseq	sl, r0, r1, lsl #18
    1ce8:	91020000 	mrsls	r0, (UNDEF: 2)
    1cec:	05be1018 	ldreq	r1, [lr, #24]!
    1cf0:	32010000 	andcc	r0, r1, #0
    1cf4:	0030bc01 	eorseq	fp, r0, r1, lsl #24
    1cf8:	91020000 	mrsls	r0, (UNDEF: 2)
    1cfc:	1a0c171c 	bne	307974 <__RAM_SIZE+0x207974>
    1d00:	32010000 	andcc	r0, r1, #0
    1d04:	0030d001 	eorseq	sp, r0, r1
    1d08:	19830000 	stmibne	r3, {}	; <UNPREDICTABLE>
    1d0c:	197f0000 	ldmdbne	pc!, {}^	; <UNPREDICTABLE>
    1d10:	62120000 	andsvs	r0, r2, #0
    1d14:	01006675 	tsteq	r0, r5, ror r6
    1d18:	57080134 	smladxpl	r8, r4, r1, r0
    1d1c:	03000013 	movweq	r0, #19
    1d20:	147fb891 	ldrbtne	fp, [pc], #-2193	; 1d28 <__HEAP_SIZE+0xd28>
    1d24:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1d28:	0a013501 	beq	4f134 <SYSTICK_CYCLES+0x406d5>
    1d2c:	000000ee 	andeq	r0, r0, lr, ror #1
    1d30:	000019ae 	andeq	r1, r0, lr, lsr #19
    1d34:	000019a2 	andeq	r1, r0, r2, lsr #19
    1d38:	0000a01e 	andeq	sl, r0, lr, lsl r0
    1d3c:	0014b000 	andseq	fp, r4, r0
    1d40:	05351c00 	ldreq	r1, [r5, #-3072]!	; 0xfffff400
    1d44:	3f010000 	svccc	0x00010000
    1d48:	013a1201 	teqeq	sl, r1, lsl #4
    1d4c:	19fe0000 	ldmibne	lr!, {}^	; <UNPREDICTABLE>
    1d50:	19fa0000 	ldmibne	sl!, {}^	; <UNPREDICTABLE>
    1d54:	182b0000 	stmdane	fp!, {}	; <UNPREDICTABLE>
    1d58:	ab10000b 	blge	401d8c <__RAM_SIZE+0x301d8c>
    1d5c:	2b00001b 	blcs	1dd0 <__HEAP_SIZE+0xdd0>
    1d60:	10000b38 	andne	r0, r0, r8, lsr fp
    1d64:	00001bab 	andeq	r1, r0, fp, lsr #23
    1d68:	0b801500 	bleq	fe007170 <__RAM_segment_used_end__+0xc5f07170>
    1d6c:	16701000 	ldrbtne	r1, [r0], -r0
    1d70:	01160000 	tsteq	r6, r0
    1d74:	ac910450 	cfldrsge	mvf0, [r1], {80}	; 0x50
    1d78:	0116067f 	tsteq	r6, pc, ror r6
    1d7c:	b0910451 	addslt	r0, r1, r1, asr r4
    1d80:	0116067f 	tsteq	r6, pc, ror r6
    1d84:	b4910452 	ldrlt	r0, [r1], #1106	; 0x452
    1d88:	0116067f 	tsteq	r6, pc, ror r6
    1d8c:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1d90:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1d94:	7fb89103 	svcvc	0x00b89103
    1d98:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1d9c:	16007902 	strne	r7, [r0], -r2, lsl #18
    1da0:	04087d02 	streq	r7, [r8], #-3330	; 0xfffff2fe
    1da4:	01940891 			; <UNDEFINED> instruction: 0x01940891
    1da8:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1dac:	16007702 	strne	r7, [r0], -r2, lsl #14
    1db0:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1db4:	16061891 			; <UNDEFINED> instruction: 0x16061891
    1db8:	03147d02 	tsteq	r4, #2, 26	; 0x80
    1dbc:	16061c91 			; <UNDEFINED> instruction: 0x16061c91
    1dc0:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    1dc4:	0000007a 	andeq	r0, r0, sl, ror r0
    1dc8:	0004c71a 	andeq	ip, r4, sl, lsl r7
    1dcc:	01190100 	tsteq	r9, r0, lsl #2
    1dd0:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    1dd4:	0a2c0000 	beq	b01ddc <SYSTEM_CLOCK+0x54905c>
    1dd8:	0ac01000 	beq	ff005de0 <__RAM_segment_used_end__+0xc6f05de0>
    1ddc:	1a1c1000 	bne	705de4 <SYSTEM_CLOCK+0x14d064>
    1de0:	70010000 	andvc	r0, r1, r0
    1de4:	0f000016 	svceq	0x00000016
    1de8:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1dec:	27011901 	strcs	r1, [r1, -r1, lsl #18]
    1df0:	00000106 	andeq	r0, r0, r6, lsl #2
    1df4:	00001a59 	andeq	r1, r0, r9, asr sl
    1df8:	00001a55 	andeq	r1, r0, r5, asr sl
    1dfc:	0003c217 	andeq	ip, r3, r7, lsl r2
    1e00:	01190100 	tsteq	r9, r0, lsl #2
    1e04:	0002ee32 	andeq	lr, r2, r2, lsr lr
    1e08:	001a7e00 	andseq	r7, sl, r0, lsl #28
    1e0c:	001a7a00 	andseq	r7, sl, r0, lsl #20
    1e10:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    1e14:	19010078 	stmdbne	r1, {r3, r4, r5, r6}
    1e18:	00ee4101 	rsceq	r4, lr, r1, lsl #2
    1e1c:	1aa30000 	bne	fe8c1e24 <__RAM_segment_used_end__+0xc67c1e24>
    1e20:	1a9f0000 	bne	fe7c1e28 <__RAM_segment_used_end__+0xc66c1e28>
    1e24:	f6170000 			; <UNDEFINED> instruction: 0xf6170000
    1e28:	01000004 	tsteq	r0, r4
    1e2c:	ee4d0119 	mcr	1, 2, r0, cr13, cr9, {0}
    1e30:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    1e34:	c400001a 	strgt	r0, [r0], #-26	; 0xffffffe6
    1e38:	1700001a 	smladne	r0, sl, r0, r0
    1e3c:	00000e7a 	andeq	r0, r0, sl, ror lr
    1e40:	63011901 	movwvs	r1, #6401	; 0x1901
    1e44:	0000005f 	andeq	r0, r0, pc, asr r0
    1e48:	00001af3 	strdeq	r1, [r0], -r3
    1e4c:	00001ae9 	andeq	r1, r0, r9, ror #21
    1e50:	00045210 	andeq	r5, r4, r0, lsl r2
    1e54:	01190100 	tsteq	r9, r0, lsl #2
    1e58:	000b7d6f 	andeq	r7, fp, pc, ror #26
    1e5c:	04910200 	ldreq	r0, [r1], #512	; 0x200
    1e60:	0005f810 	andeq	pc, r5, r0, lsl r8	; <UNPREDICTABLE>
    1e64:	01190100 	tsteq	r9, r0, lsl #2
    1e68:	00005f87 	andeq	r5, r0, r7, lsl #31
    1e6c:	08910200 	ldmeq	r1, {r9}
    1e70:	0005b810 	andeq	fp, r5, r0, lsl r8
    1e74:	01190100 	tsteq	r9, r0, lsl #2
    1e78:	0000309a 	muleq	r0, sl, r0
    1e7c:	0c910200 	lfmeq	f0, 4, [r1], {0}
    1e80:	0005be10 	andeq	fp, r5, r0, lsl lr
    1e84:	01190100 	tsteq	r9, r0, lsl #2
    1e88:	000030ad 	andeq	r3, r0, sp, lsr #1
    1e8c:	10910200 	addsne	r0, r1, r0, lsl #4
    1e90:	001a0c17 	andseq	r0, sl, r7, lsl ip
    1e94:	01190100 	tsteq	r9, r0, lsl #2
    1e98:	000030c1 	andeq	r3, r0, r1, asr #1
    1e9c:	001b3800 	andseq	r3, fp, r0, lsl #16
    1ea0:	001b3400 	andseq	r3, fp, r0, lsl #8
    1ea4:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    1ea8:	1b010066 	blne	42048 <SYSTICK_CYCLES+0x335e9>
    1eac:	13570801 	cmpne	r7, #65536	; 0x10000
    1eb0:	91020000 	mrsls	r0, (UNDEF: 2)
    1eb4:	656c1448 	strbvs	r1, [ip, #-1096]!	; 0xfffffbb8
    1eb8:	1c01006e 	stcne	0, cr0, [r1], {110}	; 0x6e
    1ebc:	00ee0a01 	rsceq	r0, lr, r1, lsl #20
    1ec0:	1b630000 	blne	18c1ec8 <SYSTEM_CLOCK+0x1309148>
    1ec4:	1b570000 	blne	15c1ecc <SYSTEM_CLOCK+0x100914c>
    1ec8:	801e0000 	andshi	r0, lr, r0
    1ecc:	30000000 	andcc	r0, r0, r0
    1ed0:	1c000016 	stcne	0, cr0, [r0], {22}
    1ed4:	00000535 	andeq	r0, r0, r5, lsr r5
    1ed8:	12012601 	andne	r2, r1, #1048576	; 0x100000
    1edc:	0000013a 	andeq	r0, r0, sl, lsr r1
    1ee0:	00001bbb 			; <UNDEFINED> instruction: 0x00001bbb
    1ee4:	00001baf 	andeq	r1, r0, pc, lsr #23
    1ee8:	0abc1500 	beq	fef072f0 <__RAM_segment_used_end__+0xc6e072f0>
    1eec:	16701000 	ldrbtne	r1, [r0], -r0
    1ef0:	02160000 	andseq	r0, r6, #0
    1ef4:	7402007d 	strvc	r0, [r2], #-125	; 0xffffff83
    1ef8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1efc:	00770204 	rsbseq	r0, r7, r4, lsl #4
    1f00:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1f04:	94049104 	strls	r9, [r4], #-260	; 0xfffffefc
    1f08:	7d021601 	stcvc	6, cr1, [r2, #-4]
    1f0c:	0075020c 	rsbseq	r0, r5, ip, lsl #4
    1f10:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1f14:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1f18:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1f1c:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1f20:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    1f24:	00007602 	andeq	r7, r0, r2, lsl #12
    1f28:	04872c00 	streq	r2, [r7], #3072	; 0xc00
    1f2c:	e3010000 	movw	r0, #4096	; 0x1000
    1f30:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    1f34:	08f40000 	ldmeq	r4!, {}^	; <UNPREDICTABLE>
    1f38:	0a2c1000 	beq	b05f40 <SYSTEM_CLOCK+0x54d1c0>
    1f3c:	1c291000 	stcne	0, cr1, [r9], #-0
    1f40:	91010000 	mrsls	r0, (UNDEF: 1)
    1f44:	2d000017 	stccs	0, cr0, [r0, #-92]	; 0xffffffa4
    1f48:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1f4c:	0629e301 	strteq	lr, [r9], -r1, lsl #6
    1f50:	73000001 	movwvc	r0, #1
    1f54:	6d00001c 	stcvs	0, cr0, [r0, #-112]	; 0xffffff90
    1f58:	2e00001c 	mcrcs	0, 0, r0, cr0, cr12, {0}
    1f5c:	000003c2 	andeq	r0, r0, r2, asr #7
    1f60:	ee34e301 	cdp	3, 3, cr14, cr4, cr1, {0}
    1f64:	a5000002 	strge	r0, [r0, #-2]
    1f68:	9f00001c 	svcls	0x0000001c
    1f6c:	2d00001c 	stccs	0, cr0, [r0, #-112]	; 0xffffff90
    1f70:	00786469 	rsbseq	r6, r8, r9, ror #8
    1f74:	ee43e301 	cdp	3, 4, cr14, cr3, cr1, {0}
    1f78:	d7000000 	strle	r0, [r0, -r0]
    1f7c:	d100001c 	tstle	r0, ip, lsl r0
    1f80:	2e00001c 	mcrcs	0, 0, r0, cr0, cr12, {0}
    1f84:	000004f6 	strdeq	r0, [r0], -r6
    1f88:	ee4fe301 	cdp	3, 4, cr14, cr15, cr1, {0}
    1f8c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1f90:	0300001d 	movweq	r0, #29
    1f94:	2d00001d 	stccs	0, cr0, [r0, #-116]	; 0xffffff8c
    1f98:	00667562 	rsbeq	r7, r6, r2, ror #10
    1f9c:	ee5de301 	cdp	3, 5, cr14, cr13, cr1, {0}
    1fa0:	39000002 	stmdbcc	r0, {r1}
    1fa4:	3500001d 	strcc	r0, [r0, #-29]	; 0xffffffe3
    1fa8:	2d00001d 	stccs	0, cr0, [r0, #-116]	; 0xffffff8c
    1fac:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1fb0:	ee69e301 	cdp	3, 6, cr14, cr9, cr1, {0}
    1fb4:	8b000000 	blhi	1fbc <__HEAP_SIZE+0xfbc>
    1fb8:	5900001d 	stmdbpl	r0, {r0, r2, r3, r4}
    1fbc:	2e00001d 	mcrcs	0, 0, r0, cr0, cr13, {0}
    1fc0:	00000452 	andeq	r0, r0, r2, asr r4
    1fc4:	7d73e301 	ldclvc	3, cr14, [r3, #-4]!
    1fc8:	bf00000b 	svclt	0x0000000b
    1fcc:	bb00001e 	bllt	204c <__HEAP_SIZE+0x104c>
    1fd0:	2e00001e 	mcrcs	0, 0, r0, cr0, cr14, {0}
    1fd4:	000005f8 	strdeq	r0, [r0], -r8
    1fd8:	308ae301 	addcc	lr, sl, r1, lsl #6
    1fdc:	e3000000 	movw	r0, #0
    1fe0:	df00001e 	svcle	0x0000001e
    1fe4:	2e00001e 	mcrcs	0, 0, r0, cr0, cr14, {0}
    1fe8:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    1fec:	309de301 	addscc	lr, sp, r1, lsl #6
    1ff0:	07000000 	streq	r0, [r0, -r0]
    1ff4:	0300001f 	movweq	r0, #31
    1ff8:	2e00001f 	mcrcs	0, 0, r0, cr0, cr15, {0}
    1ffc:	000005be 			; <UNDEFINED> instruction: 0x000005be
    2000:	30b0e301 	adcscc	lr, r0, r1, lsl #6
    2004:	2b000000 	blcs	200c <__HEAP_SIZE+0x100c>
    2008:	2700001f 	smladcs	r0, pc, r0, r0	; <UNPREDICTABLE>
    200c:	2e00001f 	mcrcs	0, 0, r0, cr0, cr15, {0}
    2010:	00001a0c 	andeq	r1, r0, ip, lsl #20
    2014:	30c4e301 	sbccc	lr, r4, r1, lsl #6
    2018:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    201c:	4a00001f 	bmi	20a0 <__HEAP_SIZE+0x10a0>
    2020:	1500001f 	strne	r0, [r0, #-31]	; 0xffffffe1
    2024:	100009ae 	andne	r0, r0, lr, lsr #19
    2028:	00001791 	muleq	r0, r1, r7
    202c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    2030:	16007502 	strne	r7, [r0], -r2, lsl #10
    2034:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    2038:	02160074 	andseq	r0, r6, #116	; 0x74
    203c:	7702087d 	smlsdxvc	r2, sp, r8, r0
    2040:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2044:	0076020c 	rsbseq	r0, r6, ip, lsl #4
    2048:	702c0000 	eorvc	r0, ip, r0
    204c:	01000005 	tsteq	r0, r5
    2050:	ee010fc7 	cdp	15, 0, cr0, cr1, cr7, {6}
    2054:	76000000 	strvc	r0, [r0], -r0
    2058:	f4100008 			; <UNDEFINED> instruction: 0xf4100008
    205c:	6e100008 	cdpvs	0, 1, cr0, cr0, cr8, {0}
    2060:	0100001f 	tsteq	r0, pc, lsl r0
    2064:	000018d8 	ldrdeq	r1, [r0], -r8
    2068:	74756f2d 	ldrbtvc	r6, [r5], #-3885	; 0xfffff0d3
    206c:	25c70100 	strbcs	r0, [r7, #256]	; 0x100
    2070:	00000106 	andeq	r0, r0, r6, lsl #2
    2074:	00001fb6 			; <UNDEFINED> instruction: 0x00001fb6
    2078:	00001fb2 			; <UNDEFINED> instruction: 0x00001fb2
    207c:	0003c22e 	andeq	ip, r3, lr, lsr #4
    2080:	30c70100 	sbccc	r0, r7, r0, lsl #2
    2084:	000002ee 	andeq	r0, r0, lr, ror #5
    2088:	00001fd8 	ldrdeq	r1, [r0], -r8
    208c:	00001fd4 	ldrdeq	r1, [r0], -r4
    2090:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    2094:	3fc70100 	svccc	0x00c70100
    2098:	000000ee 	andeq	r0, r0, lr, ror #1
    209c:	00002002 	andeq	r2, r0, r2
    20a0:	00001ff6 	strdeq	r1, [r0], -r6
    20a4:	0004f62e 	andeq	pc, r4, lr, lsr #12
    20a8:	4bc70100 	blmi	ff1c24b0 <__RAM_segment_used_end__+0xc70c24b0>
    20ac:	000000ee 	andeq	r0, r0, lr, ror #1
    20b0:	00002050 	andeq	r2, r0, r0, asr r0
    20b4:	0000204c 	andeq	r2, r0, ip, asr #32
    20b8:	6675622d 	ldrbtvs	r6, [r5], -sp, lsr #4
    20bc:	5fc70100 	svcpl	0x00c70100
    20c0:	0000024c 	andeq	r0, r0, ip, asr #4
    20c4:	00002072 	andeq	r2, r0, r2, ror r0
    20c8:	0000206e 	andeq	r2, r0, lr, rrx
    20cc:	6e656c2d 	cdpvs	12, 6, cr6, cr5, cr13, {1}
    20d0:	6bc70100 	blvs	ff1c24d8 <__RAM_segment_used_end__+0xc70c24d8>
    20d4:	000000ee 	andeq	r0, r0, lr, ror #1
    20d8:	00002096 	muleq	r0, r6, r0
    20dc:	00002092 	muleq	r0, r2, r0
    20e0:	0005be2e 	andeq	fp, r5, lr, lsr #28
    20e4:	7dc70100 	stfvce	f0, [r7]
    20e8:	00000030 	andeq	r0, r0, r0, lsr r0
    20ec:	000020b9 	strheq	r2, [r0], -r9
    20f0:	000020b5 	strheq	r2, [r0], -r5
    20f4:	001a0c2e 	andseq	r0, sl, lr, lsr #24
    20f8:	91c70100 	bicls	r0, r7, r0, lsl #2
    20fc:	00000030 	andeq	r0, r0, r0, lsr r0
    2100:	000020dd 	ldrdeq	r2, [r0], -sp
    2104:	000020d9 	ldrdeq	r2, [r0], -r9
    2108:	00043e2f 	andeq	r3, r4, pc, lsr #28
    210c:	10c90100 	sbcne	r0, r9, r0, lsl #2
    2110:	000000fa 	strdeq	r0, [r0], -sl
    2114:	00002103 	andeq	r2, r0, r3, lsl #2
    2118:	000020fd 	strdeq	r2, [r0], -sp
    211c:	0000681e 	andeq	r6, r0, lr, lsl r8
    2120:	00189d00 	andseq	r9, r8, r0, lsl #26
    2124:	00693000 	rsbeq	r3, r9, r0
    2128:	ee11cd01 	cdp	13, 1, cr12, cr1, cr1, {0}
    212c:	32000000 	andcc	r0, r0, #0
    2130:	30000021 	andcc	r0, r0, r1, lsr #32
    2134:	22000021 	andcs	r0, r0, #33	; 0x21
    2138:	100008aa 	andne	r0, r0, sl, lsr #17
    213c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    2140:	01162008 	tsteq	r6, r8
    2144:	00760251 	rsbseq	r0, r6, r1, asr r2
    2148:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    214c:	01167f7b 	tsteq	r6, fp, ror pc
    2150:	00770253 	rsbseq	r0, r7, r3, asr r2
    2154:	c8210000 	stmdagt	r1!, {}	; <UNPREDICTABLE>
    2158:	b9100008 	ldmdblt	r0, {r3}
    215c:	16000018 			; <UNDEFINED> instruction: 0x16000018
    2160:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2164:	52011600 	andpl	r1, r1, #0, 12
    2168:	167f7802 	ldrbtne	r7, [pc], -r2, lsl #16
    216c:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    2170:	f0220000 			; <UNDEFINED> instruction: 0xf0220000
    2174:	16100008 	ldrne	r0, [r0], -r8
    2178:	08025001 	stmdaeq	r2, {r0, ip, lr}
    217c:	51011620 	tstpl	r1, r0, lsr #12
    2180:	16007602 	strne	r7, [r0], -r2, lsl #12
    2184:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    2188:	5301167f 	movwpl	r1, #5759	; 0x167f
    218c:	00007702 	andeq	r7, r0, r2, lsl #14
    2190:	04fd3100 	ldrbteq	r3, [sp], #256	; 0x100
    2194:	bc010000 	stclt	0, cr0, [r1], {-0}
    2198:	00300115 	eorseq	r0, r0, r5, lsl r1
    219c:	08520000 	ldmdaeq	r2, {}^	; <UNPREDICTABLE>
    21a0:	08761000 	ldmdaeq	r6!, {ip}^
    21a4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    21a8:	19400100 	stmdbne	r0, {r8}^
    21ac:	732d0000 			; <UNDEFINED> instruction: 0x732d0000
    21b0:	01007274 	tsteq	r0, r4, ror r2
    21b4:	194028bc 	stmdbne	r0, {r2, r3, r4, r5, r7, fp, sp}^
    21b8:	21490000 	mrscs	r0, (UNDEF: 73)
    21bc:	21450000 	mrscs	r0, (UNDEF: 69)
    21c0:	69300000 	ldmdbvs	r0!, {}	; <UNPREDICTABLE>
    21c4:	10be0100 	adcsne	r0, lr, r0, lsl #2
    21c8:	00000030 	andeq	r0, r0, r0, lsr r0
    21cc:	0000216d 	andeq	r2, r0, sp, ror #2
    21d0:	00002167 	andeq	r2, r0, r7, ror #2
    21d4:	00194632 	andseq	r4, r9, r2, lsr r6
    21d8:	00086c00 	andeq	r6, r8, r0, lsl #24
    21dc:	6c000010 	stcvs	0, cr0, [r0], {16}
    21e0:	70100008 	andsvc	r0, r0, r8
    21e4:	01100008 	tsteq	r0, r8
    21e8:	58240abf 	stmdapl	r4!, {r0, r1, r2, r3, r4, r5, r7, r9, fp}
    21ec:	9b000019 	blls	2258 <__HEAP_SIZE+0x1258>
    21f0:	97000021 	strls	r0, [r0, -r1, lsr #32]
    21f4:	00000021 	andeq	r0, r0, r1, lsr #32
    21f8:	4c040900 			; <UNDEFINED> instruction: 0x4c040900
    21fc:	33000002 	movwcc	r0, #2
    2200:	00000531 	andeq	r0, r0, r1, lsr r5
    2204:	0114b501 	tsteq	r4, r1, lsl #10
    2208:	00000b7d 	andeq	r0, r0, sp, ror fp
    220c:	00196403 	andseq	r6, r9, r3, lsl #8
    2210:	68633400 	stmdavs	r3!, {sl, ip, sp}^
    2214:	23b50100 			; <UNDEFINED> instruction: 0x23b50100
    2218:	00000133 	andeq	r0, r0, r3, lsr r1
    221c:	05033300 	streq	r3, [r3, #-768]	; 0xfffffd00
    2220:	ab010000 	blge	42228 <SYSTICK_CYCLES+0x337c9>
    2224:	0030011c 	eorseq	r0, r0, ip, lsl r1
    2228:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    222c:	34000019 	strcc	r0, [r0], #-25	; 0xffffffe7
    2230:	00727473 	rsbseq	r7, r2, r3, ror r4
    2234:	4c33ab01 			; <UNDEFINED> instruction: 0x4c33ab01
    2238:	35000002 	strcc	r0, [r0, #-2]
    223c:	00000407 	andeq	r0, r0, r7, lsl #8
    2240:	ee3fab01 	vadd.f64	d10, d15, d1
    2244:	36000000 	strcc	r0, [r0], -r0
    2248:	ad010073 	stcge	0, cr0, [r1, #-460]	; 0xfffffe34
    224c:	00024c0f 	andeq	r4, r2, pc, lsl #24
    2250:	27370000 	ldrcs	r0, [r7, -r0]!
    2254:	01000004 	tsteq	r0, r4
    2258:	0001149f 	muleq	r1, pc, r4	; <UNPREDICTABLE>
    225c:	00000000 	andeq	r0, r0, r0
    2260:	bb000000 	bllt	2268 <__HEAP_SIZE+0x1268>
    2264:	01000021 	tsteq	r0, r1, lsr #32
    2268:	00001a04 	andeq	r1, r0, r4, lsl #20
    226c:	0005662e 	andeq	r6, r5, lr, lsr #12
    2270:	229f0100 	addscs	r0, pc, #0, 2
    2274:	00000133 	andeq	r0, r0, r3, lsr r1
    2278:	000021ed 	andeq	r2, r0, sp, ror #3
    227c:	000021e7 	andeq	r2, r0, r7, ror #3
    2280:	0003c22e 	andeq	ip, r3, lr, lsr #4
    2284:	339f0100 	orrscc	r0, pc, #0, 2
    2288:	000000e0 	andeq	r0, r0, r0, ror #1
    228c:	0000221f 	andeq	r2, r0, pc, lsl r2
    2290:	00002219 	andeq	r2, r0, r9, lsl r2
    2294:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    2298:	429f0100 	addsmi	r0, pc, #0, 2
    229c:	000000ee 	andeq	r0, r0, lr, ror #1
    22a0:	00002251 	andeq	r2, r0, r1, asr r2
    22a4:	0000224b 	andeq	r2, r0, fp, asr #4
    22a8:	0004f62e 	andeq	pc, r4, lr, lsr #12
    22ac:	4e9f0100 	fmlmie	f0, f7, f0
    22b0:	000000ee 	andeq	r0, r0, lr, ror #1
    22b4:	00002283 	andeq	r2, r0, r3, lsl #5
    22b8:	0000227d 	andeq	r2, r0, sp, ror r2
    22bc:	03fd3800 	mvnseq	r3, #0, 16
    22c0:	95010000 	strls	r0, [r1, #-0]
    22c4:	19900114 	ldmibne	r0, {r2, r4, r8}
    22c8:	199c1000 	ldmibne	ip, {ip}
    22cc:	22af1000 	adccs	r1, pc, #0
    22d0:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    22d4:	2e00001a 	mcrcs	0, 0, r0, cr0, cr10, {0}
    22d8:	00000566 	andeq	r0, r0, r6, ror #10
    22dc:	33239501 			; <UNDEFINED> instruction: 0x33239501
    22e0:	d3000001 	movwle	r0, #1
    22e4:	cf000022 	svcgt	0x00000022
    22e8:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    22ec:	000003c2 	andeq	r0, r0, r2, asr #7
    22f0:	e0349501 	eors	r9, r4, r1, lsl #10
    22f4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    22f8:	f4000022 	vst4.8	{d0-d3}, [r0 :128], r2
    22fc:	2d000022 	stccs	0, cr0, [r0, #-136]	; 0xffffff78
    2300:	00786469 	rsbseq	r6, r8, r9, ror #8
    2304:	ee439501 	cdp	5, 4, cr9, cr3, cr1, {0}
    2308:	1d000000 	stcne	0, cr0, [r0, #-0]
    230c:	19000023 	stmdbne	r0, {r0, r1, r5}
    2310:	2e000023 	cdpcs	0, 0, cr0, cr0, cr3, {1}
    2314:	000004f6 	strdeq	r0, [r0], -r6
    2318:	ee4f9501 	cdp	5, 4, cr9, cr15, cr1, {0}
    231c:	42000000 	andmi	r0, r0, #0
    2320:	3e000023 	cdpcc	0, 0, cr0, cr0, cr3, {1}
    2324:	2b000023 	blcs	23b8 <__HEAP_SIZE+0x13b8>
    2328:	1000199a 	mulne	r0, sl, r9
    232c:	00001bb6 			; <UNDEFINED> instruction: 0x00001bb6
    2330:	049a3900 	ldreq	r3, [sl], #2304	; 0x900
    2334:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2338:	08500114 	ldmdaeq	r0, {r2, r4, r8}^
    233c:	08521000 	ldmdaeq	r2, {ip}^
    2340:	7d021000 	stcvc	0, cr1, [r2, #-0]
    2344:	1aca0100 	bne	ff28274c <__RAM_segment_used_end__+0xc718274c>
    2348:	663a0000 	ldrtvs	r0, [sl], -r0
    234c:	01000005 	tsteq	r0, r5
    2350:	0133238e 	teqeq	r3, lr, lsl #7
    2354:	50010000 	andpl	r0, r1, r0
    2358:	0003c23a 	andeq	ip, r3, sl, lsr r2
    235c:	348e0100 	strcc	r0, [lr], #256	; 0x100
    2360:	000000e0 	andeq	r0, r0, r0, ror #1
    2364:	693b5101 	ldmdbvs	fp!, {r0, r8, ip, lr}
    2368:	01007864 	tsteq	r0, r4, ror #16
    236c:	00ee438e 	rsceq	r4, lr, lr, lsl #7
    2370:	52010000 	andpl	r0, r1, #0
    2374:	0004f63a 	andeq	pc, r4, sl, lsr r6	; <UNPREDICTABLE>
    2378:	4f8e0100 	svcmi	0x008e0100
    237c:	000000ee 	andeq	r0, r0, lr, ror #1
    2380:	39005301 	stmdbcc	r0, {r0, r8, r9, ip, lr}
    2384:	000003bd 			; <UNDEFINED> instruction: 0x000003bd
    2388:	01148501 	tsteq	r4, r1, lsl #10
	...
    2394:	01007d02 	tsteq	r0, r2, lsl #26
    2398:	00001b1c 	andeq	r1, r0, ip, lsl fp
    239c:	0005663a 	andeq	r6, r5, sl, lsr r6
    23a0:	25850100 	strcs	r0, [r5, #256]	; 0x100
    23a4:	00000133 	andeq	r0, r0, r3, lsr r1
    23a8:	c23a5001 	eorsgt	r5, sl, #1
    23ac:	01000003 	tsteq	r0, r3
    23b0:	00e03685 	rsceq	r3, r0, r5, lsl #13
    23b4:	51010000 	mrspl	r0, (UNDEF: 1)
    23b8:	7864693b 	stmdavc	r4!, {r0, r1, r3, r4, r5, r8, fp, sp, lr}^
    23bc:	45850100 	strmi	r0, [r5, #256]	; 0x100
    23c0:	000000ee 	andeq	r0, r0, lr, ror #1
    23c4:	f63a5201 			; <UNDEFINED> instruction: 0xf63a5201
    23c8:	01000004 	tsteq	r0, r4
    23cc:	00ee5185 	rsceq	r5, lr, r5, lsl #3
    23d0:	53010000 	movwpl	r0, #4096	; 0x1000
    23d4:	01013c00 	tsteq	r1, r0, lsl #24
    23d8:	0000054b 	andeq	r0, r0, fp, asr #10
    23dc:	0000054b 	andeq	r0, r0, fp, asr #10
    23e0:	e701013c 	smladx	r1, ip, r1, r0
    23e4:	e7000004 	str	r0, [r0, -r4]
    23e8:	3c000004 	stccc	0, cr0, [r0], {4}
    23ec:	05d30101 	ldrbeq	r0, [r3, #257]	; 0x101
    23f0:	05d30000 	ldrbeq	r0, [r3]
    23f4:	013c0000 	teqeq	ip, r0
    23f8:	00039401 	andeq	r9, r3, r1, lsl #8
    23fc:	00039400 	andeq	r9, r3, r0, lsl #8
    2400:	01013c00 	tsteq	r1, r0, lsl #24
    2404:	00000513 	andeq	r0, r0, r3, lsl r5
    2408:	00000513 	andeq	r0, r0, r3, lsl r5
    240c:	5b01013c 	blpl	42904 <SYSTICK_CYCLES+0x33ea5>
    2410:	5b000004 	blpl	2428 <__HEAP_SIZE+0x1428>
    2414:	3c000004 	stccc	0, cr0, [r0], {4}
    2418:	05790101 	ldrbeq	r0, [r9, #-257]!	; 0xfffffeff
    241c:	05790000 	ldrbeq	r0, [r9, #-0]!
    2420:	013c0000 	teqeq	ip, r0
    2424:	00041501 	andeq	r1, r4, r1, lsl #10
    2428:	00041500 	andeq	r1, r4, r0, lsl #10
    242c:	01013c00 	tsteq	r1, r0, lsl #24
    2430:	000003e1 	andeq	r0, r0, r1, ror #7
    2434:	000003e1 	andeq	r0, r0, r1, ror #7
    2438:	b801013c 	stmdalt	r1, {r2, r3, r4, r5, r8}
    243c:	b8000004 	stmdalt	r0, {r2}
    2440:	3c000004 	stccc	0, cr0, [r0], {4}
    2444:	04300101 	ldrteq	r0, [r0], #-257	; 0xfffffeff
    2448:	04300000 	ldrteq	r0, [r0], #-0
    244c:	013c0000 	teqeq	ip, r0
    2450:	0004da01 	andeq	sp, r4, r1, lsl #20
    2454:	0004da00 	andeq	sp, r4, r0, lsl #20
    2458:	01013c00 	tsteq	r1, r0, lsl #24
    245c:	00000597 	muleq	r0, r7, r5
    2460:	00000597 	muleq	r0, r7, r5
    2464:	8601013c 			; <UNDEFINED> instruction: 0x8601013c
    2468:	86000005 	strhi	r0, [r0], -r5
    246c:	3d000005 	stccc	0, cr0, [r0, #-20]	; 0xffffffec
    2470:	03f40101 	mvnseq	r0, #1073741824	; 0x40000000
    2474:	03f40000 	mvnseq	r0, #0
    2478:	31070000 	mrscc	r0, (UNDEF: 7)
    247c:	024f0005 	subeq	r0, pc, #5
    2480:	00020000 	andeq	r0, r2, r0
    2484:	000005c5 	andeq	r0, r0, r5, asr #11
    2488:	000f0104 	andeq	r0, pc, r4, lsl #2
    248c:	070c0000 	streq	r0, [ip, -r0]
    2490:	9d000006 	stcls	0, cr0, [r0, #-24]	; 0xffffffe8
    2494:	b8000001 	stmdalt	r0, {r0}
    2498:	00000001 	andeq	r0, r0, r1
    249c:	00000000 	andeq	r0, r0, r0
    24a0:	a6000000 	strge	r0, [r0], -r0
    24a4:	02000015 	andeq	r0, r0, #21
    24a8:	00f60601 	rscseq	r0, r6, r1, lsl #12
    24ac:	06030000 	streq	r0, [r3], -r0
    24b0:	02000002 	andeq	r0, r0, #2
    24b4:	003c182b 	eorseq	r1, ip, fp, lsr #16
    24b8:	01020000 	mrseq	r0, (UNDEF: 2)
    24bc:	0000f408 	andeq	pc, r0, r8, lsl #8
    24c0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    24c4:	0000017b 	andeq	r0, r0, fp, ror r1
    24c8:	02070202 	andeq	r0, r7, #536870912	; 0x20000000
    24cc:	02000001 	andeq	r0, r0, #1
    24d0:	01620504 	cmneq	r2, r4, lsl #10
    24d4:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    24d8:	02000002 	andeq	r0, r0, #2
    24dc:	0064194f 	rsbeq	r1, r4, pc, asr #18
    24e0:	04020000 	streq	r0, [r2], #-0
    24e4:	00013f07 	andeq	r3, r1, r7, lsl #30
    24e8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    24ec:	0000015d 	andeq	r0, r0, sp, asr r1
    24f0:	3a070802 	bcc	1c4500 <__RAM_SIZE+0xc4500>
    24f4:	04000001 	streq	r0, [r0], #-1
    24f8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    24fc:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2500:	00014407 	andeq	r4, r1, r7, lsl #8
    2504:	03d10300 	bicseq	r0, r1, #0, 6
    2508:	d1030000 	mrsle	r0, (UNDEF: 3)
    250c:	00008017 	andeq	r8, r0, r7, lsl r0
    2510:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2514:	00000151 	andeq	r0, r0, r1, asr r1
    2518:	fd080102 	stc2	1, cr0, [r8, #-8]
    251c:	05000000 	streq	r0, [r0, #-0]
    2520:	0000009a 	muleq	r0, sl, r0
    2524:	00a10406 	adceq	r0, r1, r6, lsl #8
    2528:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    252c:	04000002 	streq	r0, [r0], #-2
    2530:	00301318 	eorseq	r1, r0, r8, lsl r3
    2534:	6b030000 	blvs	c253c <SYSTICK_CYCLES+0xb3add>
    2538:	04000002 	streq	r0, [r0], #-2
    253c:	00581430 	subseq	r1, r8, r0, lsr r4
    2540:	01070000 	mrseq	r0, (UNDEF: 7)
    2544:	0000061a 	andeq	r0, r0, sl, lsl r6
    2548:	01083f01 	tsteq	r8, r1, lsl #30
    254c:	00000087 	andeq	r0, r0, r7, lsl #1
	...
    2558:	00002363 	andeq	r2, r0, r3, ror #6
    255c:	00013b01 	andeq	r3, r1, r1, lsl #22
    2560:	03c20800 	biceq	r0, r2, #0, 16
    2564:	3f010000 	svccc	0x00010000
    2568:	00013b1b 	andeq	r3, r1, fp, lsl fp
    256c:	00238700 	eoreq	r8, r3, r0, lsl #14
    2570:	00238300 	eoreq	r8, r3, r0, lsl #6
    2574:	11390800 	teqne	r9, r0, lsl #16
    2578:	3f010000 	svccc	0x00010000
    257c:	0000872a 	andeq	r8, r0, sl, lsr #14
    2580:	0023a900 	eoreq	sl, r3, r0, lsl #18
    2584:	0023a500 	eoreq	sl, r3, r0, lsl #10
    2588:	68630900 	stmdavs	r3!, {r8, fp}^
    258c:	0d400100 	stfeqe	f0, [r0, #-0]
    2590:	000000ac 	andeq	r0, r0, ip, lsr #1
    2594:	000023cd 	andeq	r2, r0, sp, asr #7
    2598:	000023c7 	andeq	r2, r0, r7, asr #7
    259c:	00746909 	rsbseq	r6, r4, r9, lsl #18
    25a0:	870c4101 	strhi	r4, [ip, -r1, lsl #2]
    25a4:	fb000000 	blx	25ae <__HEAP_SIZE+0x15ae>
    25a8:	f7000023 			; <UNDEFINED> instruction: 0xf7000023
    25ac:	0a000023 	beq	2640 <__HEAP_SIZE+0x1640>
    25b0:	00000000 	andeq	r0, r0, r0
    25b4:	00000244 	andeq	r0, r0, r4, asr #4
    25b8:	ac040600 	stcge	6, cr0, [r4], {-0}
    25bc:	0b000000 	bleq	25c4 <__HEAP_SIZE+0x15c4>
    25c0:	00062c01 	andeq	r2, r6, r1, lsl #24
    25c4:	063b0100 	ldrteq	r0, [fp], -r0, lsl #2
    25c8:	00000001 	andeq	r0, r0, r1
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	00241a00 	eoreq	r1, r4, r0, lsl #20
    25d4:	01820100 	orreq	r0, r2, r0, lsl #2
    25d8:	07080000 	streq	r0, [r8, -r0]
    25dc:	01000017 	tsteq	r0, r7, lsl r0
    25e0:	00a61c3b 	adceq	r1, r6, fp, lsr ip
    25e4:	243e0000 	ldrtcs	r0, [lr], #-0
    25e8:	243a0000 	ldrtcs	r0, [sl], #-0
    25ec:	000c0000 	andeq	r0, ip, r0
    25f0:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    25f4:	0d000001 	stceq	0, cr0, [r0, #-4]
    25f8:	f3035001 	vhadd.u8	d5, d3, d1
    25fc:	00005001 	andeq	r5, r0, r1
    2600:	00db010e 	sbcseq	r0, fp, lr, lsl #2
    2604:	32010000 	andcc	r0, r1, #0
    2608:	19fc0106 	ldmibne	ip!, {r1, r2, r8}^
    260c:	1a201000 	bne	806614 <SYSTEM_CLOCK+0x24d894>
    2610:	7d021000 	stcvc	0, cr1, [r2, #-0]
    2614:	01070100 	mrseq	r0, (UNDEF: 23)
    2618:	000000ef 	andeq	r0, r0, pc, ror #1
    261c:	0105dd05 	tsteq	r5, r5, lsl #26
    2620:	00000079 	andeq	r0, r0, r9, ror r0
    2624:	100019dc 	ldrdne	r1, [r0], -ip
    2628:	100019fa 	strdne	r1, [r0], -sl
    262c:	0000245f 	andeq	r2, r0, pc, asr r4
    2630:	0001f801 	andeq	pc, r1, r1, lsl #16
    2634:	17070800 	strne	r0, [r7, -r0, lsl #16]
    2638:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    263c:	0000a616 	andeq	sl, r0, r6, lsl r6
    2640:	00248300 	eoreq	r8, r4, r0, lsl #6
    2644:	00247f00 	eoreq	r7, r4, r0, lsl #30
    2648:	15da0f00 	ldrbne	r0, [sl, #3840]	; 0xf00
    264c:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    2650:	00007909 	andeq	r7, r0, r9, lsl #18
    2654:	0024a500 	eoreq	sl, r4, r0, lsl #10
    2658:	0024a100 	eoreq	sl, r4, r0, lsl #2
    265c:	19e80a00 	stmibne	r8!, {r9, fp}^
    2660:	02121000 	andseq	r1, r2, #0
    2664:	f60c0000 			; <UNDEFINED> instruction: 0xf60c0000
    2668:	12100019 	andsne	r0, r0, #25
    266c:	0d000002 	stceq	0, cr0, [r0, #-8]
    2670:	3a015001 	bcc	5667c <SYSTICK_CYCLES+0x47c1d>
    2674:	01100000 	tsteq	r0, r0
    2678:	00000636 	andeq	r0, r0, r6, lsr r6
    267c:	01052301 	tsteq	r5, r1, lsl #6
    2680:	00000079 	andeq	r0, r0, r9, ror r0
	...
    268c:	01007d02 	tsteq	r0, r2, lsl #26
    2690:	03f40111 	mvnseq	r0, #1073741828	; 0x40000004
    2694:	1d010000 	stcne	0, cr0, [r1, #-0]
    2698:	00790105 	rsbseq	r0, r9, r5, lsl #2
    269c:	19c80000 	stmibne	r8, {}^	; <UNPREDICTABLE>
    26a0:	19dc1000 	ldmibne	ip, {ip}^
    26a4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    26a8:	02440100 	subeq	r0, r4, #0, 2
    26ac:	63120000 	tstvs	r2, #0
    26b0:	1d010068 	stcne	0, cr0, [r1, #-416]	; 0xfffffe60
    26b4:	00007912 	andeq	r7, r0, r2, lsl r9
    26b8:	0024c600 	eoreq	ip, r4, r0, lsl #12
    26bc:	0024c400 	eoreq	ip, r4, r0, lsl #8
    26c0:	01130000 	tsteq	r3, r0
    26c4:	00062401 	andeq	r2, r6, r1, lsl #8
    26c8:	00062400 	andeq	r2, r6, r0, lsl #8
    26cc:	05d90500 	ldrbeq	r0, [r9, #1280]	; 0x500
    26d0:	000bc400 	andeq	ip, fp, r0, lsl #8
    26d4:	24000200 	strcs	r0, [r0], #-512	; 0xfffffe00
    26d8:	04000007 	streq	r0, [r0], #-7
    26dc:	00000f01 	andeq	r0, r0, r1, lsl #30
    26e0:	11510c00 	cmpne	r1, r0, lsl #24
    26e4:	019d0000 	orrseq	r0, sp, r0
    26e8:	01f00000 	mvnseq	r0, r0
	...
    26f4:	18e20000 	stmiane	r2!, {}^	; <UNPREDICTABLE>
    26f8:	04020000 	streq	r0, [r2], #-0
    26fc:	00014407 	andeq	r4, r1, r7, lsl #8
    2700:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    2704:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2708:	5d050802 	stcpl	8, cr0, [r5, #-8]
    270c:	02000001 	andeq	r0, r0, #1
    2710:	01510408 	cmpeq	r1, r8, lsl #8
    2714:	01020000 	mrseq	r0, (UNDEF: 2)
    2718:	0000f606 	andeq	pc, r0, r6, lsl #12
    271c:	08010200 	stmdaeq	r1, {r9}
    2720:	000000f4 	strdeq	r0, [r0], -r4
    2724:	7b050202 	blvc	142f34 <__RAM_SIZE+0x42f34>
    2728:	02000001 	andeq	r0, r0, #1
    272c:	01020702 	tsteq	r2, r2, lsl #14
    2730:	04020000 	streq	r0, [r2], #-0
    2734:	00016205 	andeq	r6, r1, r5, lsl #4
    2738:	07040200 	streq	r0, [r4, -r0, lsl #4]
    273c:	0000013f 	andeq	r0, r0, pc, lsr r1
    2740:	3a070802 	bcc	1c4750 <__RAM_SIZE+0xc4750>
    2744:	04000001 	streq	r0, [r0], #-1
    2748:	08010204 	stmdaeq	r1, {r2, r9}
    274c:	000000fd 	strdeq	r0, [r0], -sp
    2750:	0012e905 	andseq	lr, r2, r5, lsl #18
    2754:	31730200 	cmncc	r3, r0, lsl #4
    2758:	00000078 	andeq	r0, r0, r8, ror r0
    275c:	0012e805 	andseq	lr, r2, r5, lsl #16
    2760:	31740200 	cmncc	r4, r0, lsl #4
    2764:	0000004c 	andeq	r0, r0, ip, asr #32
    2768:	00114c05 	andseq	r4, r1, r5, lsl #24
    276c:	31760200 	cmncc	r6, r0, lsl #4
    2770:	00000029 	andeq	r0, r0, r9, lsr #32
    2774:	0010aa05 	andseq	sl, r0, r5, lsl #20
    2778:	31780200 	cmncc	r8, r0, lsl #4
    277c:	00000068 	andeq	r0, r0, r8, rrx
    2780:	000dcb06 	andeq	ip, sp, r6, lsl #22
    2784:	82031c00 	andhi	r1, r3, #0, 24
    2788:	012e1001 			; <UNDEFINED> instruction: 0x012e1001
    278c:	44070000 	strmi	r0, [r7], #-0
    2790:	03000012 	movweq	r0, #18
    2794:	a3190186 	tstge	r9, #-2147483615	; 0x80000021
    2798:	02000000 	andeq	r0, r0, #0
    279c:	ce070023 	cdpgt	0, 0, cr0, cr7, cr3, {1}
    27a0:	0300000b 	movweq	r0, #11
    27a4:	a3190187 	tstge	r9, #-1073741791	; 0xc0000021
    27a8:	02000000 	andeq	r0, r0, #0
    27ac:	6b070423 	blvs	1c3840 <__RAM_SIZE+0xc3840>
    27b0:	0300000c 	movweq	r0, #12
    27b4:	3a1b018a 	bcc	6c2de4 <SYSTEM_CLOCK+0x10a064>
    27b8:	02000001 	andeq	r0, r0, #1
    27bc:	f4070823 	vst2.8	{d0-d1}, [r7 :128], r3
    27c0:	03000008 	movweq	r0, #8
    27c4:	a319018b 	tstge	r9, #-1073741790	; 0xc0000022
    27c8:	02000000 	andeq	r0, r0, #0
    27cc:	da070c23 	ble	1c5860 <__RAM_SIZE+0xc5860>
    27d0:	03000013 	movweq	r0, #19
    27d4:	401a0191 	mulsmi	sl, r1, r1
    27d8:	02000001 	andeq	r0, r0, #1
    27dc:	5a071023 	bpl	1c6870 <__RAM_SIZE+0xc6870>
    27e0:	03000006 	movweq	r0, #6
    27e4:	401a0192 	mulsmi	sl, r2, r1
    27e8:	02000001 	andeq	r0, r0, #1
    27ec:	2f071423 	svccs	0x00071423
    27f0:	0300000f 	movweq	r0, #15
    27f4:	461b0196 			; <UNDEFINED> instruction: 0x461b0196
    27f8:	02000001 	andeq	r0, r0, #1
    27fc:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    2800:	00013a01 	andeq	r3, r1, r1, lsl #20
    2804:	00a30900 	adceq	r0, r3, r0, lsl #18
    2808:	0a000000 	beq	2810 <__HEAP_SIZE+0x1810>
    280c:	00012e04 	andeq	r2, r1, r4, lsl #28
    2810:	af040a00 	svcge	0x00040a00
    2814:	0a000000 	beq	281c <__HEAP_SIZE+0x181c>
    2818:	00014004 	andeq	r4, r1, r4
    281c:	0f7e0b00 	svceq	0x007e0b00
    2820:	9b030000 	blls	c2828 <SYSTICK_CYCLES+0xb3dc9>
    2824:	00af0301 	adceq	r0, pc, r1, lsl #6
    2828:	040a0000 	streq	r0, [sl], #-0
    282c:	0000007f 	andeq	r0, r0, pc, ror r0
    2830:	000b0306 	andeq	r0, fp, r6, lsl #6
    2834:	d603d800 	strle	sp, [r3], -r0, lsl #16
    2838:	04841001 	streq	r1, [r4], #1
    283c:	31070000 	mrscc	r0, (UNDEF: 7)
    2840:	03000013 	movweq	r0, #19
    2844:	a31901dd 	tstge	r9, #1073741879	; 0x40000037
    2848:	02000000 	andeq	r0, r0, #0
    284c:	a3070023 	movwge	r0, #28707	; 0x7023
    2850:	03000011 	movweq	r0, #17
    2854:	a31901de 	tstge	r9, #-2147483593	; 0x80000037
    2858:	02000000 	andeq	r0, r0, #0
    285c:	60070423 	andvs	r0, r7, r3, lsr #8
    2860:	03000008 	movweq	r0, #8
    2864:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    2868:	02000000 	andeq	r0, r0, #0
    286c:	05070823 	streq	r0, [r7, #-2083]	; 0xfffff7dd
    2870:	03000013 	movweq	r0, #19
    2874:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    2878:	02000000 	andeq	r0, r0, #0
    287c:	3f070c23 	svccc	0x00070c23
    2880:	0300000c 	movweq	r0, #12
    2884:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    2888:	02000000 	andeq	r0, r0, #0
    288c:	c5071023 	strgt	r1, [r7, #-35]	; 0xffffffdd
    2890:	03000013 	movweq	r0, #19
    2894:	a31901e2 	tstge	r9, #-2147483592	; 0x80000038
    2898:	02000000 	andeq	r0, r0, #0
    289c:	30071423 	andcc	r1, r7, r3, lsr #8
    28a0:	0300001b 	movweq	r0, #27
    28a4:	a31901e3 	tstge	r9, #-1073741768	; 0xc0000038
    28a8:	02000000 	andeq	r0, r0, #0
    28ac:	4b071823 	blmi	1c8940 <__RAM_SIZE+0xc8940>
    28b0:	0300000f 	movweq	r0, #15
    28b4:	a31901e4 	tstge	r9, #228, 2	; 0x39
    28b8:	02000000 	andeq	r0, r0, #0
    28bc:	ed071c23 	stc	12, cr1, [r7, #-140]	; 0xffffff74
    28c0:	0300000f 	movweq	r0, #15
    28c4:	841a01e8 	ldrhi	r0, [sl], #-488	; 0xfffffe18
    28c8:	02000004 	andeq	r0, r0, #4
    28cc:	0c072023 	stceq	0, cr2, [r7], {35}	; 0x23
    28d0:	03000008 	movweq	r0, #8
    28d4:	841a01e9 	ldrhi	r0, [sl], #-489	; 0xfffffe17
    28d8:	02000004 	andeq	r0, r0, #4
    28dc:	a4072423 	strge	r2, [r7], #-1059	; 0xfffffbdd
    28e0:	0300000e 	movweq	r0, #14
    28e4:	591a01f1 	ldmdbpl	sl, {r0, r4, r5, r6, r7, r8}
    28e8:	02000001 	andeq	r0, r0, #1
    28ec:	04072823 	streq	r2, [r7], #-2083	; 0xfffff7dd
    28f0:	0300000a 	movweq	r0, #10
    28f4:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    28f8:	02000000 	andeq	r0, r0, #0
    28fc:	54072c23 	strpl	r2, [r7], #-3107	; 0xfffff3dd
    2900:	03000009 	movweq	r0, #9
    2904:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    2908:	02000000 	andeq	r0, r0, #0
    290c:	e6073023 	str	r3, [r7], -r3, lsr #32
    2910:	03000007 	movweq	r0, #7
    2914:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    2918:	02000000 	andeq	r0, r0, #0
    291c:	e3073423 	movw	r3, #29731	; 0x7423
    2920:	03000010 	movweq	r0, #16
    2924:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    2928:	02000000 	andeq	r0, r0, #0
    292c:	f7073823 			; <UNDEFINED> instruction: 0xf7073823
    2930:	03000006 	movweq	r0, #6
    2934:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    2938:	02000000 	andeq	r0, r0, #0
    293c:	14073c23 	strne	r3, [r7], #-3107	; 0xfffff3dd
    2940:	0300000b 	movweq	r0, #11
    2944:	9b1b01fb 	blls	6c3138 <SYSTEM_CLOCK+0x10a3b8>
    2948:	02000004 	andeq	r0, r0, #4
    294c:	c5074023 	strgt	r4, [r7, #-35]	; 0xffffffdd
    2950:	03000007 	movweq	r0, #7
    2954:	3a1b0203 	bcc	6c3168 <SYSTEM_CLOCK+0x10a3e8>
    2958:	02000001 	andeq	r0, r0, #1
    295c:	13074423 	movwne	r4, #29731	; 0x7423
    2960:	03000007 	movweq	r0, #7
    2964:	a3190204 	tstge	r9, #4, 4	; 0x40000000
    2968:	02000000 	andeq	r0, r0, #0
    296c:	ea074823 	b	1d4a00 <__RAM_SIZE+0xd4a00>
    2970:	0300000a 	movweq	r0, #10
    2974:	4c190208 	lfmmi	f0, 4, [r9], {8}
    2978:	02000001 	andeq	r0, r0, #1
    297c:	17074c23 	strne	r4, [r7, -r3, lsr #24]
    2980:	0300000a 	movweq	r0, #10
    2984:	9b1b020e 	blls	6c31c4 <SYSTEM_CLOCK+0x10a444>
    2988:	02000004 	andeq	r0, r0, #4
    298c:	c9076823 	stmdbgt	r7, {r0, r1, r5, fp, sp, lr}
    2990:	0300000e 	movweq	r0, #14
    2994:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    2998:	02000000 	andeq	r0, r0, #0
    299c:	b0076c23 	andlt	r6, r7, r3, lsr #24
    29a0:	03000010 	movweq	r0, #16
    29a4:	841a0211 	ldrhi	r0, [sl], #-529	; 0xfffffdef
    29a8:	02000004 	andeq	r0, r0, #4
    29ac:	37077023 	strcc	r7, [r7, -r3, lsr #32]
    29b0:	03000009 	movweq	r0, #9
    29b4:	841a0212 	ldrhi	r0, [sl], #-530	; 0xfffffdee
    29b8:	02000004 	andeq	r0, r0, #4
    29bc:	93077423 	movwls	r7, #29731	; 0x7423
    29c0:	03000010 	movweq	r0, #16
    29c4:	a3190213 	tstge	r9, #805306369	; 0x30000001
    29c8:	02000000 	andeq	r0, r0, #0
    29cc:	f4077823 	vst2.8	{d7-d8}, [r7 :128], r3
    29d0:	0300000b 	movweq	r0, #11
    29d4:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    29d8:	02000000 	andeq	r0, r0, #0
    29dc:	2a077c23 	bcs	1e1a70 <__RAM_SIZE+0xe1a70>
    29e0:	0300000e 	movweq	r0, #14
    29e4:	97190215 			; <UNDEFINED> instruction: 0x97190215
    29e8:	03000000 	movweq	r0, #0
    29ec:	07018023 	streq	r8, [r1, -r3, lsr #32]
    29f0:	00000c16 	andeq	r0, r0, r6, lsl ip
    29f4:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    29f8:	00000097 	muleq	r0, r7, r0
    29fc:	01842303 	orreq	r2, r4, r3, lsl #6
    2a00:	0012ee07 	andseq	lr, r2, r7, lsl #28
    2a04:	021f0300 	andseq	r0, pc, #0, 6
    2a08:	0004841a 	andeq	r8, r4, sl, lsl r4
    2a0c:	88230300 	stmdahi	r3!, {r8, r9}
    2a10:	11f40701 	mvnsne	r0, r1, lsl #14
    2a14:	20030000 	andcs	r0, r3, r0
    2a18:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    2a1c:	23030000 	movwcs	r0, #12288	; 0x3000
    2a20:	cf07018c 	svcgt	0x0007018c
    2a24:	03000009 	movweq	r0, #9
    2a28:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    2a2c:	03000000 	movweq	r0, #0
    2a30:	07019023 	streq	r9, [r1, -r3, lsr #32]
    2a34:	00000964 	andeq	r0, r0, r4, ror #18
    2a38:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    2a3c:	00000097 	muleq	r0, r7, r0
    2a40:	01942303 	orrseq	r2, r4, r3, lsl #6
    2a44:	000abc07 	andeq	fp, sl, r7, lsl #24
    2a48:	02300300 	eorseq	r0, r0, #0, 6
    2a4c:	00009719 	andeq	r9, r0, r9, lsl r7
    2a50:	98230300 	stmdals	r3!, {r8, r9}
    2a54:	09850701 	stmibeq	r5, {r0, r8, r9, sl}
    2a58:	33030000 	movwcc	r0, #12288	; 0x3000
    2a5c:	00971902 	addseq	r1, r7, r2, lsl #18
    2a60:	23030000 	movwcs	r0, #12288	; 0x3000
    2a64:	3f07019c 	svccc	0x0007019c
    2a68:	03000006 	movweq	r0, #6
    2a6c:	801a0235 	andshi	r0, sl, r5, lsr r2
    2a70:	03000005 	movweq	r0, #5
    2a74:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    2a78:	000015e1 	andeq	r1, r0, r1, ror #11
    2a7c:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    2a80:	000000a3 	andeq	r0, r0, r3, lsr #1
    2a84:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    2a88:	0016d007 	andseq	sp, r6, r7
    2a8c:	023d0300 	eorseq	r0, sp, #0, 6
    2a90:	0000a319 	andeq	sl, r0, r9, lsl r3
    2a94:	a8230300 	stmdage	r3!, {r8, r9}
    2a98:	155a0701 	ldrbne	r0, [sl, #-1793]	; 0xfffff8ff
    2a9c:	41030000 	mrsmi	r0, (UNDEF: 3)
    2aa0:	00a31902 	adceq	r1, r3, r2, lsl #18
    2aa4:	23030000 	movwcs	r0, #12288	; 0x3000
    2aa8:	870701ac 	strhi	r0, [r7, -ip, lsr #3]
    2aac:	03000017 	movweq	r0, #23
    2ab0:	a3190245 	tstge	r9, #1342177284	; 0x50000004
    2ab4:	03000000 	movweq	r0, #0
    2ab8:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    2abc:	00001689 	andeq	r1, r0, r9, lsl #13
    2ac0:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    2ac4:	000000a3 	andeq	r0, r0, r3, lsr #1
    2ac8:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    2acc:	0011c707 	andseq	ip, r1, r7, lsl #14
    2ad0:	024c0300 	subeq	r0, ip, #0, 6
    2ad4:	0004841a 	andeq	r8, r4, sl, lsl r4
    2ad8:	b8230300 	stmdalt	r3!, {r8, r9}
    2adc:	175f0701 	ldrbne	r0, [pc, -r1, lsl #14]
    2ae0:	4f030000 	svcmi	0x00030000
    2ae4:	00a31902 	adceq	r1, r3, r2, lsl #18
    2ae8:	23030000 	movwcs	r0, #12288	; 0x3000
    2aec:	320701bc 	andcc	r0, r7, #188, 2	; 0x2f
    2af0:	03000015 	movweq	r0, #21
    2af4:	a3190252 	tstge	r9, #536870917	; 0x20000005
    2af8:	03000000 	movweq	r0, #0
    2afc:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    2b00:	00001498 	muleq	r0, r8, r4
    2b04:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    2b08:	000000a3 	andeq	r0, r0, r3, lsr #1
    2b0c:	01c42303 	biceq	r2, r4, r3, lsl #6
    2b10:	00160507 	andseq	r0, r6, r7, lsl #10
    2b14:	02590300 	subseq	r0, r9, #0, 6
    2b18:	0000a319 	andeq	sl, r0, r9, lsl r3
    2b1c:	c8230300 	stmdagt	r3!, {r8, r9}
    2b20:	140b0701 	strne	r0, [fp], #-1793	; 0xfffff8ff
    2b24:	5d030000 	stcpl	0, cr0, [r3, #-0]
    2b28:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    2b2c:	23030000 	movwcs	r0, #12288	; 0x3000
    2b30:	e40701cc 	str	r0, [r7], #-460	; 0xfffffe34
    2b34:	0300000c 	movweq	r0, #12
    2b38:	a3190278 	tstge	r9, #120, 4	; 0x80000007
    2b3c:	03000000 	movweq	r0, #0
    2b40:	0701d023 	streq	sp, [r1, -r3, lsr #32]
    2b44:	00000e65 	andeq	r0, r0, r5, ror #28
    2b48:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    2b4c:	000000a3 	andeq	r0, r0, r3, lsr #1
    2b50:	01d42303 	bicseq	r2, r4, r3, lsl #6
    2b54:	5f040a00 	svcpl	0x00040a00
    2b58:	08000001 	stmdaeq	r0, {r0}
    2b5c:	00049b01 	andeq	r9, r4, r1, lsl #22
    2b60:	04840900 	streq	r0, [r4], #2304	; 0x900
    2b64:	a3090000 	movwge	r0, #36864	; 0x9000
    2b68:	00000000 	andeq	r0, r0, r0
    2b6c:	048a040a 	streq	r0, [sl], #1034	; 0x40a
    2b70:	b7060000 	strlt	r0, [r6, -r0]
    2b74:	34000011 	strcc	r0, [r0], #-17	; 0xffffffef
    2b78:	10037e03 	andne	r7, r3, r3, lsl #28
    2b7c:	00000580 	andeq	r0, r0, r0, lsl #11
    2b80:	00080007 	andeq	r0, r8, r7
    2b84:	03820300 	orreq	r0, r2, #0, 6
    2b88:	0000a319 	andeq	sl, r0, r9, lsl r3
    2b8c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2b90:	00128407 	andseq	r8, r2, r7, lsl #8
    2b94:	03850300 	orreq	r0, r5, #0, 6
    2b98:	0001591a 	andeq	r5, r1, sl, lsl r9
    2b9c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2ba0:	00107a07 	andseq	r7, r0, r7, lsl #20
    2ba4:	03880300 	orreq	r0, r8, #0, 6
    2ba8:	00009719 	andeq	r9, r0, r9, lsl r7
    2bac:	08230200 	stmdaeq	r3!, {r9}
    2bb0:	000d3a07 	andeq	r3, sp, r7, lsl #20
    2bb4:	038c0300 	orreq	r0, ip, #0, 6
    2bb8:	00081f1a 	andeq	r1, r8, sl, lsl pc
    2bbc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2bc0:	0007d507 	andeq	sp, r7, r7, lsl #10
    2bc4:	03900300 	orrseq	r0, r0, #0, 6
    2bc8:	00009719 	andeq	r9, r0, r9, lsl r7
    2bcc:	10230200 	eorne	r0, r3, r0, lsl #4
    2bd0:	00074107 	andeq	r4, r7, r7, lsl #2
    2bd4:	03930300 	orrseq	r0, r3, #0, 6
    2bd8:	00009719 	andeq	r9, r0, r9, lsl r7
    2bdc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2be0:	0012c507 	andseq	ip, r2, r7, lsl #10
    2be4:	03980300 	orrseq	r0, r8, #0, 6
    2be8:	0004841a 	andeq	r8, r4, sl, lsl r4
    2bec:	18230200 	stmdane	r3!, {r9}
    2bf0:	00104b07 	andseq	r4, r0, r7, lsl #22
    2bf4:	03990300 	orrseq	r0, r9, #0, 6
    2bf8:	00009719 	andeq	r9, r0, r9, lsl r7
    2bfc:	1c230200 	sfmne	f0, 4, [r3], #-0
    2c00:	000eb307 	andeq	fp, lr, r7, lsl #6
    2c04:	039d0300 	orrseq	r0, sp, #0, 6
    2c08:	0005801a 	andeq	r8, r5, sl, lsl r0
    2c0c:	20230200 	eorcs	r0, r3, r0, lsl #4
    2c10:	000fb607 	andeq	fp, pc, r7, lsl #12
    2c14:	039e0300 	orrseq	r0, lr, #0, 6
    2c18:	0005801a 	andeq	r8, r5, sl, lsl r0
    2c1c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    2c20:	0008d207 	andeq	sp, r8, r7, lsl #4
    2c24:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    2c28:	00009719 	andeq	r9, r0, r9, lsl r7
    2c2c:	28230200 	stmdacs	r3!, {r9}
    2c30:	00143607 	andseq	r3, r4, r7, lsl #12
    2c34:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    2c38:	0005801a 	andeq	r8, r5, sl, lsl r0
    2c3c:	2c230200 	sfmcs	f0, 4, [r3], #-0
    2c40:	000c5307 	andeq	r5, ip, r7, lsl #6
    2c44:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    2c48:	0005801a 	andeq	r8, r5, sl, lsl r0
    2c4c:	30230200 	eorcc	r0, r3, r0, lsl #4
    2c50:	a1040a00 	tstge	r4, r0, lsl #20
    2c54:	0b000004 	bleq	2c6c <__HEAP_SIZE+0x1c6c>
    2c58:	000012de 	ldrdeq	r1, [r0], -lr
    2c5c:	03028603 	movweq	r8, #9731	; 0x2603
    2c60:	0000015f 	andeq	r0, r0, pc, asr r1
    2c64:	00089806 	andeq	r9, r8, r6, lsl #16
    2c68:	8b033000 	blhi	cec70 <SYSTICK_CYCLES+0xc0211>
    2c6c:	06621002 	strbteq	r1, [r2], -r2
    2c70:	0b070000 	bleq	1c2c78 <__RAM_SIZE+0xc2c78>
    2c74:	03000010 	movweq	r0, #16
    2c78:	a319028f 	tstge	r9, #-268435448	; 0xf0000008
    2c7c:	02000000 	andeq	r0, r0, #0
    2c80:	8e070023 	cdphi	0, 0, cr0, cr7, cr3, {1}
    2c84:	0300000c 	movweq	r0, #12
    2c88:	591a0292 	ldmdbpl	sl, {r1, r4, r7, r9}
    2c8c:	02000001 	andeq	r0, r0, #1
    2c90:	91070423 	tstls	r7, r3, lsr #8
    2c94:	03000013 	movweq	r0, #19
    2c98:	97190295 			; <UNDEFINED> instruction: 0x97190295
    2c9c:	02000000 	andeq	r0, r0, #0
    2ca0:	23070823 	movwcs	r0, #30755	; 0x7823
    2ca4:	03000009 	movweq	r0, #9
    2ca8:	97190298 			; <UNDEFINED> instruction: 0x97190298
    2cac:	02000000 	andeq	r0, r0, #0
    2cb0:	d0070c23 	andle	r0, r7, r3, lsr #24
    2cb4:	0300000f 	movweq	r0, #15
    2cb8:	621a029b 	andsvs	r0, sl, #-1342177271	; 0xb0000009
    2cbc:	02000006 	andeq	r0, r0, #6
    2cc0:	2d071023 	stccs	0, cr1, [r7, #-140]	; 0xffffff74
    2cc4:	03000007 	movweq	r0, #7
    2cc8:	621a029e 	andsvs	r0, sl, #-536870903	; 0xe0000009
    2ccc:	02000006 	andeq	r0, r0, #6
    2cd0:	d7071423 	strle	r1, [r7, -r3, lsr #8]
    2cd4:	0300000a 	movweq	r0, #10
    2cd8:	a31902a1 	tstge	r9, #268435466	; 0x1000000a
    2cdc:	02000000 	andeq	r0, r0, #0
    2ce0:	90071823 	andls	r1, r7, r3, lsr #16
    2ce4:	0300000f 	movweq	r0, #15
    2ce8:	971902a4 	ldrls	r0, [r9, -r4, lsr #5]
    2cec:	02000000 	andeq	r0, r0, #0
    2cf0:	42071c23 	andmi	r1, r7, #8960	; 0x2300
    2cf4:	03000008 	movweq	r0, #8
    2cf8:	841a02a9 	ldrhi	r0, [sl], #-681	; 0xfffffd57
    2cfc:	02000004 	andeq	r0, r0, #4
    2d00:	67072023 	strvs	r2, [r7, -r3, lsr #32]
    2d04:	03000014 	movweq	r0, #20
    2d08:	971902aa 	ldrls	r0, [r9, -sl, lsr #5]
    2d0c:	02000000 	andeq	r0, r0, #0
    2d10:	e4072423 	str	r2, [r7], #-1059	; 0xfffffbdd
    2d14:	0300000d 	movweq	r0, #13
    2d18:	681a02ae 	ldmdavs	sl, {r1, r2, r3, r5, r7, r9}
    2d1c:	02000006 	andeq	r0, r0, #6
    2d20:	d8072823 	stmdale	r7, {r0, r1, r5, fp, sp}
    2d24:	03000006 	movweq	r0, #6
    2d28:	681a02af 	ldmdavs	sl, {r0, r1, r2, r3, r5, r7, r9}
    2d2c:	02000006 	andeq	r0, r0, #6
    2d30:	0a002c23 	beq	ddc4 <__HEAP_SIZE+0xcdc4>
    2d34:	00008b04 	andeq	r8, r0, r4, lsl #22
    2d38:	93040a00 	movwls	r0, #18944	; 0x4a00
    2d3c:	0b000005 	bleq	2d58 <__HEAP_SIZE+0x1d58>
    2d40:	0000133e 	andeq	r1, r0, lr, lsr r3
    2d44:	0302c403 	movweq	ip, #9219	; 0x2403
    2d48:	00000593 	muleq	r0, r3, r5
    2d4c:	000ca106 	andeq	sl, ip, r6, lsl #2
    2d50:	d9033400 	stmdble	r3, {sl, ip, sp}
    2d54:	075a1002 	ldrbeq	r1, [sl, -r2]
    2d58:	2f070000 	svccs	0x00070000
    2d5c:	0300000c 	movweq	r0, #12
    2d60:	a31902dd 	tstge	r9, #-805306355	; 0xd000000d
    2d64:	02000000 	andeq	r0, r0, #0
    2d68:	64070023 	strvs	r0, [r7], #-35	; 0xffffffdd
    2d6c:	0300000b 	movweq	r0, #11
    2d70:	591a02e0 	ldmdbpl	sl, {r5, r6, r7, r9}
    2d74:	02000001 	andeq	r0, r0, #1
    2d78:	11070423 	tstne	r7, r3, lsr #8
    2d7c:	03000011 	movweq	r0, #17
    2d80:	a31902e3 	tstge	r9, #805306382	; 0x3000000e
    2d84:	02000000 	andeq	r0, r0, #0
    2d88:	92070823 	andls	r0, r7, #2293760	; 0x230000
    2d8c:	03000012 	movweq	r0, #18
    2d90:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
    2d94:	02000000 	andeq	r0, r0, #0
    2d98:	0f070c23 	svceq	0x00070c23
    2d9c:	03000012 	movweq	r0, #18
    2da0:	621a02e9 	andsvs	r0, sl, #-1879048178	; 0x9000000e
    2da4:	02000006 	andeq	r0, r0, #6
    2da8:	a1071023 	tstge	r7, r3, lsr #32
    2dac:	03000009 	movweq	r0, #9
    2db0:	621a02ed 	andsvs	r0, sl, #-805306354	; 0xd000000e
    2db4:	02000006 	andeq	r0, r0, #6
    2db8:	b8071423 	stmdalt	r7, {r0, r1, r5, sl, ip}
    2dbc:	0300000d 	movweq	r0, #13
    2dc0:	621a02f0 	andsvs	r0, sl, #240, 4
    2dc4:	02000006 	andeq	r0, r0, #6
    2dc8:	4d071823 	stcmi	8, cr1, [r7, #-140]	; 0xffffff74
    2dcc:	0300000a 	movweq	r0, #10
    2dd0:	a31902f3 	tstge	r9, #805306383	; 0x3000000f
    2dd4:	02000000 	andeq	r0, r0, #0
    2dd8:	f8071c23 			; <UNDEFINED> instruction: 0xf8071c23
    2ddc:	03000013 	movweq	r0, #19
    2de0:	841a02f9 	ldrhi	r0, [sl], #-761	; 0xfffffd07
    2de4:	02000004 	andeq	r0, r0, #4
    2de8:	1d072023 	stcne	0, cr2, [r7, #-140]	; 0xffffff74
    2dec:	0300000d 	movweq	r0, #13
    2df0:	841a02fe 	ldrhi	r0, [sl], #-766	; 0xfffffd02
    2df4:	02000004 	andeq	r0, r0, #4
    2df8:	76072423 	strvc	r2, [r7], -r3, lsr #8
    2dfc:	0300000d 	movweq	r0, #13
    2e00:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
    2e04:	02000000 	andeq	r0, r0, #0
    2e08:	b5072823 	strlt	r2, [r7, #-2083]	; 0xfffff7dd
    2e0c:	03000009 	movweq	r0, #9
    2e10:	5a1a0303 	bpl	683a24 <SYSTEM_CLOCK+0xcaca4>
    2e14:	02000007 	andeq	r0, r0, #7
    2e18:	66072c23 	strvs	r2, [r7], -r3, lsr #24
    2e1c:	03000012 	movweq	r0, #18
    2e20:	5a1a0304 	bpl	683a38 <SYSTEM_CLOCK+0xcacb8>
    2e24:	02000007 	andeq	r0, r0, #7
    2e28:	0a003023 	beq	eebc <SYSTICK_CYCLES+0x45d>
    2e2c:	00067b04 	andeq	r7, r6, r4, lsl #22
    2e30:	0cb50b00 	vldmiaeq	r5!, {d0-d-1}
    2e34:	23030000 	movwcs	r0, #12288	; 0x3000
    2e38:	067b0303 	ldrbteq	r0, [fp], -r3, lsl #6
    2e3c:	31060000 	mrscc	r0, (UNDEF: 6)
    2e40:	2400000a 	strcs	r0, [r0], #-10
    2e44:	10032803 	andne	r2, r3, r3, lsl #16
    2e48:	0000080c 	andeq	r0, r0, ip, lsl #16
    2e4c:	00067c07 	andeq	r7, r6, r7, lsl #24
    2e50:	032c0300 			; <UNDEFINED> instruction: 0x032c0300
    2e54:	0000a319 	andeq	sl, r0, r9, lsl r3
    2e58:	00230200 	eoreq	r0, r3, r0, lsl #4
    2e5c:	000a7407 	andeq	r7, sl, r7, lsl #8
    2e60:	032f0300 			; <UNDEFINED> instruction: 0x032f0300
    2e64:	0001591a 	andeq	r5, r1, sl, lsl r9
    2e68:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2e6c:	0009e707 	andeq	lr, r9, r7, lsl #14
    2e70:	03330300 	teqeq	r3, #0, 6
    2e74:	0000a319 	andeq	sl, r0, r9, lsl r3
    2e78:	08230200 	stmdaeq	r3!, {r9}
    2e7c:	000cc207 	andeq	ip, ip, r7, lsl #4
    2e80:	03370300 	teqeq	r7, #0, 6
    2e84:	00009719 	andeq	r9, r0, r9, lsl r7
    2e88:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2e8c:	000d9307 	andeq	r9, sp, r7, lsl #6
    2e90:	033c0300 	teqeq	ip, #0, 6
    2e94:	0004841a 	andeq	r8, r4, sl, lsl r4
    2e98:	10230200 	eorne	r0, r3, r0, lsl #4
    2e9c:	0008ad07 	andeq	sl, r8, r7, lsl #26
    2ea0:	033d0300 	teqeq	sp, #0, 6
    2ea4:	00009719 	andeq	r9, r0, r9, lsl r7
    2ea8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2eac:	000e4307 	andeq	r4, lr, r7, lsl #6
    2eb0:	03410300 	movteq	r0, #4864	; 0x1300
    2eb4:	00080c1a 	andeq	r0, r8, sl, lsl ip
    2eb8:	18230200 	stmdane	r3!, {r9}
    2ebc:	000b8c07 	andeq	r8, fp, r7, lsl #24
    2ec0:	03420300 	movteq	r0, #8960	; 0x2300
    2ec4:	00080c1a 	andeq	r0, r8, sl, lsl ip
    2ec8:	1c230200 	sfmne	f0, 4, [r3], #-0
    2ecc:	00122107 	andseq	r2, r2, r7, lsl #2
    2ed0:	03450300 	movteq	r0, #21248	; 0x5300
    2ed4:	0000a319 	andeq	sl, r0, r9, lsl r3
    2ed8:	20230200 	eorcs	r0, r3, r0, lsl #4
    2edc:	6d040a00 	vstrvs	s0, [r4, #-0]
    2ee0:	0b000007 	bleq	2f04 <__HEAP_SIZE+0x1f04>
    2ee4:	00000a5f 	andeq	r0, r0, pc, asr sl
    2ee8:	03036103 	movweq	r6, #12547	; 0x3103
    2eec:	0000076d 	andeq	r0, r0, sp, ror #14
    2ef0:	0586040a 	streq	r0, [r6, #1034]	; 0x40a
    2ef4:	020b0000 	andeq	r0, fp, #0
    2ef8:	03000010 	movweq	r0, #16
    2efc:	a10303c2 	smlabtge	r3, r2, r3, r0
    2f00:	06000004 	streq	r0, [r0], -r4
    2f04:	00000b2c 	andeq	r0, r0, ip, lsr #22
    2f08:	03c70338 	biceq	r0, r7, #56, 6	; 0xe0000000
    2f0c:	00092110 	andeq	r2, r9, r0, lsl r1
    2f10:	06ae0700 	strteq	r0, [lr], r0, lsl #14
    2f14:	cb030000 	blgt	c2f1c <SYSTICK_CYCLES+0xb44bd>
    2f18:	00a31903 	adceq	r1, r3, r3, lsl #18
    2f1c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f20:	113e0700 	teqne	lr, r0, lsl #14
    2f24:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    2f28:	01591a03 	cmpeq	r9, r3, lsl #20
    2f2c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f30:	11280704 			; <UNDEFINED> instruction: 0x11280704
    2f34:	d1030000 	mrsle	r0, (UNDEF: 3)
    2f38:	00971903 	addseq	r1, r7, r3, lsl #18
    2f3c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f40:	0dff0708 	ldcleq	7, cr0, [pc, #32]!	; 2f68 <__HEAP_SIZE+0x1f68>
    2f44:	d4030000 	strle	r0, [r3], #-0
    2f48:	00971903 	addseq	r1, r7, r3, lsl #18
    2f4c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f50:	1485070c 	strne	r0, [r5], #1804	; 0x70c
    2f54:	d8030000 	stmdale	r3, {}	; <UNPREDICTABLE>
    2f58:	00971903 	addseq	r1, r7, r3, lsl #18
    2f5c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f60:	0f140710 	svceq	0x00140710
    2f64:	d9030000 	stmdble	r3, {}	; <UNPREDICTABLE>
    2f68:	00971903 	addseq	r1, r7, r3, lsl #18
    2f6c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f70:	09140714 	ldmdbeq	r4, {r2, r4, r8, r9, sl}
    2f74:	dd030000 	stcle	0, cr0, [r3, #-0]
    2f78:	09211a03 	stmdbeq	r1!, {r0, r1, r9, fp, ip}
    2f7c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f80:	0ef70718 	mrceq	7, 7, r0, cr7, cr8, {0}
    2f84:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    2f88:	09211a03 	stmdbeq	r1!, {r0, r1, r9, fp, ip}
    2f8c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f90:	0ee9071c 	mcreq	7, 7, r0, cr9, cr12, {0}
    2f94:	e2030000 	and	r0, r3, #0
    2f98:	09211a03 	stmdbeq	r1!, {r0, r1, r9, fp, ip}
    2f9c:	23020000 	movwcs	r0, #8192	; 0x2000
    2fa0:	14270720 	strtne	r0, [r7], #-1824	; 0xfffff8e0
    2fa4:	e3030000 	movw	r0, #12288	; 0x3000
    2fa8:	09211a03 	stmdbeq	r1!, {r0, r1, r9, fp, ip}
    2fac:	23020000 	movwcs	r0, #8192	; 0x2000
    2fb0:	10f80724 	rscsne	r0, r8, r4, lsr #14
    2fb4:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    2fb8:	04841a03 	streq	r1, [r4], #2563	; 0xa03
    2fbc:	23020000 	movwcs	r0, #8192	; 0x2000
    2fc0:	0e110728 	cdpeq	7, 1, cr0, cr1, cr8, {1}
    2fc4:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    2fc8:	00971903 	addseq	r1, r7, r3, lsl #18
    2fcc:	23020000 	movwcs	r0, #8192	; 0x2000
    2fd0:	0b76072c 	bleq	1d84c88 <SYSTEM_CLOCK+0x17cbf08>
    2fd4:	ed030000 	stc	0, cr0, [r3, #-0]
    2fd8:	09271a03 	stmdbeq	r7!, {r0, r1, r9, fp, ip}
    2fdc:	23020000 	movwcs	r0, #8192	; 0x2000
    2fe0:	10c90730 	sbcne	r0, r9, r0, lsr r7
    2fe4:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    2fe8:	09271a03 	stmdbeq	r7!, {r0, r1, r9, fp, ip}
    2fec:	23020000 	movwcs	r0, #8192	; 0x2000
    2ff0:	040a0034 	streq	r0, [sl], #-52	; 0xffffffcc
    2ff4:	000000a3 	andeq	r0, r0, r3, lsr #1
    2ff8:	0832040a 	ldmdaeq	r2!, {r1, r3, sl}
    2ffc:	fa0b0000 	blx	2c3004 <__RAM_SIZE+0x1c3004>
    3000:	0300000a 	movweq	r0, #10
    3004:	32030411 	andcc	r0, r3, #285212672	; 0x11000000
    3008:	06000008 	streq	r0, [r0], -r8
    300c:	00000aa8 	andeq	r0, r0, r8, lsr #21
    3010:	0416032c 	ldreq	r0, [r6], #-812	; 0xfffffcd4
    3014:	0009f910 	andeq	pc, r9, r0, lsl r9	; <UNPREDICTABLE>
    3018:	0f040700 	svceq	0x00040700
    301c:	1a030000 	bne	c3024 <SYSTICK_CYCLES+0xb45c5>
    3020:	00a31904 	adceq	r1, r3, r4, lsl #18
    3024:	23020000 	movwcs	r0, #8192	; 0x2000
    3028:	10390700 	eorsne	r0, r9, r0, lsl #14
    302c:	1d030000 	stcne	0, cr0, [r3, #-0]
    3030:	01591a04 	cmpeq	r9, r4, lsl #20
    3034:	23020000 	movwcs	r0, #8192	; 0x2000
    3038:	11900704 	orrsne	r0, r0, r4, lsl #14
    303c:	21030000 	mrscs	r0, (UNDEF: 3)
    3040:	00a31904 	adceq	r1, r3, r4, lsl #18
    3044:	23020000 	movwcs	r0, #8192	; 0x2000
    3048:	08250708 	stmdaeq	r5!, {r3, r8, r9, sl}
    304c:	26030000 	strcs	r0, [r3], -r0
    3050:	04841a04 	streq	r1, [r4], #2564	; 0xa04
    3054:	23020000 	movwcs	r0, #8192	; 0x2000
    3058:	144a070c 	strbne	r0, [sl], #-1804	; 0xfffff8f4
    305c:	27030000 	strcs	r0, [r3, -r0]
    3060:	00971904 	addseq	r1, r7, r4, lsl #18
    3064:	23020000 	movwcs	r0, #8192	; 0x2000
    3068:	0a8e0710 	beq	fe384cb0 <__RAM_segment_used_end__+0xc6284cb0>
    306c:	2b030000 	blcs	c3074 <SYSTICK_CYCLES+0xb4615>
    3070:	09f91a04 	ldmibeq	r9!, {r2, r9, fp, ip}^
    3074:	23020000 	movwcs	r0, #8192	; 0x2000
    3078:	06ba0714 	ssateq	r0, #27, r4, lsl #14
    307c:	2c030000 	stccs	0, cr0, [r3], {-0}
    3080:	09f91a04 	ldmibeq	r9!, {r2, r9, fp, ip}^
    3084:	23020000 	movwcs	r0, #8192	; 0x2000
    3088:	0e810718 	mcreq	7, 4, r0, cr1, cr8, {0}
    308c:	31030000 	mrscc	r0, (UNDEF: 3)
    3090:	00a31904 	adceq	r1, r3, r4, lsl #18
    3094:	23020000 	movwcs	r0, #8192	; 0x2000
    3098:	0875071c 	ldmdaeq	r5!, {r2, r3, r4, r8, r9, sl}^
    309c:	34030000 	strcc	r0, [r3], #-0
    30a0:	00a31904 	adceq	r1, r3, r4, lsl #18
    30a4:	23020000 	movwcs	r0, #8192	; 0x2000
    30a8:	13670720 	cmnne	r7, #32, 14	; 0x800000
    30ac:	37030000 	strcc	r0, [r3, -r0]
    30b0:	00a31904 	adceq	r1, r3, r4, lsl #18
    30b4:	23020000 	movwcs	r0, #8192	; 0x2000
    30b8:	0b3d0724 	bleq	f44d50 <SYSTEM_CLOCK+0x98bfd0>
    30bc:	3a030000 	bcc	c30c4 <SYSTICK_CYCLES+0xb4665>
    30c0:	00a31904 	adceq	r1, r3, r4, lsl #18
    30c4:	23020000 	movwcs	r0, #8192	; 0x2000
    30c8:	040a0028 	streq	r0, [sl], #-40	; 0xffffffd8
    30cc:	0000093a 	andeq	r0, r0, sl, lsr r9
    30d0:	000fa90b 	andeq	sl, pc, fp, lsl #18
    30d4:	04480300 	strbeq	r0, [r8], #-768	; 0xfffffd00
    30d8:	00093a03 	andeq	r3, r9, r3, lsl #20
    30dc:	07720c00 	ldrbeq	r0, [r2, -r0, lsl #24]!
    30e0:	6d040000 	stcvs	0, cr0, [r4, #-0]
    30e4:	0000761e 	andeq	r7, r0, lr, lsl r6
    30e8:	0d010100 	stfeqs	f0, [r1, #-0]
    30ec:	00000f64 	andeq	r0, r0, r4, ror #30
    30f0:	2d256805 	stccs	8, cr6, [r5, #-20]!	; 0xffffffec
    30f4:	0100000a 	tsteq	r0, sl
    30f8:	00000305 	andeq	r0, r0, r5, lsl #6
    30fc:	040a0000 	streq	r0, [sl], #-0
    3100:	000009ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3104:	0012a90d 	andseq	sl, r2, sp, lsl #18
    3108:	256d0500 	strbcs	r0, [sp, #-1280]!	; 0xfffffb00
    310c:	000000a3 	andeq	r0, r0, r3, lsr #1
    3110:	00030501 	andeq	r0, r3, r1, lsl #10
    3114:	0d000000 	stceq	0, cr0, [r0, #-0]
    3118:	00000e80 	andeq	r0, r0, r0, lsl #29
    311c:	a3257405 			; <UNDEFINED> instruction: 0xa3257405
    3120:	01000000 	mrseq	r0, (UNDEF: 0)
    3124:	00000305 	andeq	r0, r0, r5, lsl #6
    3128:	740d0000 	strvc	r0, [sp], #-0
    312c:	05000008 	streq	r0, [r0, #-8]
    3130:	00a32579 	adceq	r2, r3, r9, ror r5
    3134:	05010000 	streq	r0, [r1, #-0]
    3138:	00000003 	andeq	r0, r0, r3
    313c:	13660d00 	cmnne	r6, #0, 26
    3140:	7e050000 	cdpvc	0, 0, cr0, cr5, cr0, {0}
    3144:	0000a325 	andeq	sl, r0, r5, lsr #6
    3148:	03050100 	movweq	r0, #20736	; 0x5100
    314c:	00000000 	andeq	r0, r0, r0
    3150:	000b3c0d 	andeq	r3, fp, sp, lsl #24
    3154:	25830500 	strcs	r0, [r3, #1280]	; 0x500
    3158:	000000a3 	andeq	r0, r0, r3, lsr #1
    315c:	00030501 	andeq	r0, r3, r1, lsl #10
    3160:	0d000000 	stceq	0, cr0, [r0, #-0]
    3164:	0000075c 	andeq	r0, r0, ip, asr r7
    3168:	a51d7b06 	ldrge	r7, [sp, #-2822]	; 0xfffff4fa
    316c:	0100000a 	tsteq	r0, sl
    3170:	00000305 	andeq	r0, r0, r5, lsl #6
    3174:	040a0000 	streq	r0, [sl], #-0
    3178:	0000092d 	andeq	r0, r0, sp, lsr #18
    317c:	00078f0d 	andeq	r8, r7, sp, lsl #30
    3180:	1d800600 	stcne	6, cr0, [r0]
    3184:	000000a3 	andeq	r0, r0, r3, lsr #1
    3188:	00030501 	andeq	r0, r3, r1, lsl #10
    318c:	0d000000 	stceq	0, cr0, [r0, #-0]
    3190:	000013a9 	andeq	r1, r0, r9, lsr #7
    3194:	d12d6c07 			; <UNDEFINED> instruction: 0xd12d6c07
    3198:	0100000a 	tsteq	r0, sl
    319c:	00000305 	andeq	r0, r0, r5, lsl #6
    31a0:	040a0000 	streq	r0, [sl], #-0
    31a4:	00000812 	andeq	r0, r0, r2, lsl r8
    31a8:	0007a70d 	andeq	sl, r7, sp, lsl #14
    31ac:	2d710700 	ldclcs	7, cr0, [r1, #-0]
    31b0:	000000a3 	andeq	r0, r0, r3, lsr #1
    31b4:	00030501 	andeq	r0, r3, r1, lsl #10
    31b8:	0d000000 	stceq	0, cr0, [r0, #-0]
    31bc:	0000131b 	andeq	r1, r0, fp, lsl r3
    31c0:	fd1d6f08 	ldc2	15, cr6, [sp, #-32]	; 0xffffffe0
    31c4:	0100000a 	tsteq	r0, sl
    31c8:	00000305 	andeq	r0, r0, r5, lsl #6
    31cc:	040a0000 	streq	r0, [sl], #-0
    31d0:	00000825 	andeq	r0, r0, r5, lsr #16
    31d4:	000d490d 	andeq	r4, sp, sp, lsl #18
    31d8:	1d740800 	ldclne	8, cr0, [r4, #-0]
    31dc:	000000a3 	andeq	r0, r0, r3, lsr #1
    31e0:	00030501 	andeq	r0, r3, r1, lsl #10
    31e4:	0d000000 	stceq	0, cr0, [r0, #-0]
    31e8:	00000d02 	andeq	r0, r0, r2, lsl #26
    31ec:	292d6b09 	pushcs	{r0, r3, r8, r9, fp, sp, lr}
    31f0:	0100000b 	tsteq	r0, fp
    31f4:	00000305 	andeq	r0, r0, r5, lsl #6
    31f8:	040a0000 	streq	r0, [sl], #-0
    31fc:	0000066e 	andeq	r0, r0, lr, ror #12
    3200:	00101c0d 	andseq	r1, r0, sp, lsl #24
    3204:	2d700900 			; <UNDEFINED> instruction: 0x2d700900
    3208:	000000a3 	andeq	r0, r0, r3, lsr #1
    320c:	00030501 	andeq	r0, r3, r1, lsl #10
    3210:	0d000000 	stceq	0, cr0, [r0, #-0]
    3214:	00000694 	muleq	r0, r4, r6
    3218:	55257b0a 	strpl	r7, [r5, #-2826]!	; 0xfffff4f6
    321c:	0100000b 	tsteq	r0, fp
    3220:	00000305 	andeq	r0, r0, r5, lsl #6
    3224:	040a0000 	streq	r0, [sl], #-0
    3228:	00000760 	andeq	r0, r0, r0, ror #14
    322c:	000bb20d 	andeq	fp, fp, sp, lsl #4
    3230:	25800a00 	strcs	r0, [r0, #2560]	; 0xa00
    3234:	000000a3 	andeq	r0, r0, r3, lsr #1
    3238:	00030501 	andeq	r0, r3, r1, lsl #10
    323c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3240:	00000a0c 	andeq	r0, r0, ip, lsl #20
    3244:	050b3301 	streq	r3, [fp, #-769]	; 0xfffffcff
    3248:	00009003 	andeq	r9, r0, r3
    324c:	4c010f38 	stcmi	15, cr0, [r1], {56}	; 0x38
    3250:	01000013 	tsteq	r0, r3, lsl r0
    3254:	00010970 	andeq	r0, r1, r0, ror r9
    3258:	00000000 	andeq	r0, r0, r0
    325c:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    3260:	01000024 	tsteq	r0, r4, lsr #32
    3264:	00000baa 	andeq	r0, r0, sl, lsr #23
    3268:	00000010 	andeq	r0, r0, r0, lsl r0
    326c:	000baa00 	andeq	sl, fp, r0, lsl #20
    3270:	00001000 	andeq	r1, r0, r0
    3274:	0bb90000 	bleq	fee4327c <__RAM_segment_used_end__+0xc6d4327c>
    3278:	11000000 	mrsne	r0, (UNDEF: 0)
    327c:	10640101 	rsbne	r0, r4, r1, lsl #2
    3280:	10640000 	rsbne	r0, r4, r0
    3284:	150b0000 	strne	r0, [fp, #-0]
    3288:	01120d01 	tsteq	r2, r1, lsl #26
    328c:	000d6101 	andeq	r6, sp, r1, lsl #2
    3290:	000d6100 	andeq	r6, sp, r0, lsl #2
    3294:	0d3e0c00 	ldceq	12, cr0, [lr, #-0]
    3298:	00093300 	andeq	r3, r9, r0, lsl #6
    329c:	34000200 	strcc	r0, [r0], #-512	; 0xfffffe00
    32a0:	04000008 	streq	r0, [r0], #-8
    32a4:	00000f01 	andeq	r0, r0, r1, lsl #30
    32a8:	18030c00 	stmdane	r3, {sl, fp}
    32ac:	019d0000 	orrseq	r0, sp, r0
    32b0:	02000000 	andeq	r0, r0, #0
	...
    32bc:	1a650000 	bne	19432c4 <SYSTEM_CLOCK+0x138a544>
    32c0:	04020000 	streq	r0, [r2], #-0
    32c4:	00014407 	andeq	r4, r1, r7, lsl #8
    32c8:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    32cc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    32d0:	5d050802 	stcpl	8, cr0, [r5, #-8]
    32d4:	02000001 	andeq	r0, r0, #1
    32d8:	01510408 	cmpeq	r1, r8, lsl #8
    32dc:	01020000 	mrseq	r0, (UNDEF: 2)
    32e0:	0000f606 	andeq	pc, r0, r6, lsl #12
    32e4:	08010200 	stmdaeq	r1, {r9}
    32e8:	000000f4 	strdeq	r0, [r0], -r4
    32ec:	7b050202 	blvc	143afc <__RAM_SIZE+0x43afc>
    32f0:	02000001 	andeq	r0, r0, #1
    32f4:	01020702 	tsteq	r2, r2, lsl #14
    32f8:	04020000 	streq	r0, [r2], #-0
    32fc:	00016205 	andeq	r6, r1, r5, lsl #4
    3300:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3304:	0000013f 	andeq	r0, r0, pc, lsr r1
    3308:	3a070802 	bcc	1c5318 <__RAM_SIZE+0xc5318>
    330c:	04000001 	streq	r0, [r0], #-1
    3310:	08010204 	stmdaeq	r1, {r2, r9}
    3314:	000000fd 	strdeq	r0, [r0], -sp
    3318:	0012e905 	andseq	lr, r2, r5, lsl #18
    331c:	31730200 	cmncc	r3, r0, lsl #4
    3320:	00000078 	andeq	r0, r0, r8, ror r0
    3324:	00007f06 	andeq	r7, r0, r6, lsl #30
    3328:	114c0500 	cmpne	ip, r0, lsl #10
    332c:	76020000 	strvc	r0, [r2], -r0
    3330:	00002931 	andeq	r2, r0, r1, lsr r9
    3334:	00900700 	addseq	r0, r0, r0, lsl #14
    3338:	aa050000 	bge	143340 <__RAM_SIZE+0x43340>
    333c:	02000010 	andeq	r0, r0, #16
    3340:	00683178 	rsbeq	r3, r8, r8, ror r1
    3344:	a1070000 	mrsge	r0, (UNDEF: 7)
    3348:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    334c:	0000007f 	andeq	r0, r0, pc, ror r0
    3350:	000000c2 	andeq	r0, r0, r2, asr #1
    3354:	00002909 	andeq	r2, r0, r9, lsl #18
    3358:	0a005200 	beq	17b60 <SYSTICK_CYCLES+0x9101>
    335c:	0000165d 	andeq	r1, r0, sp, asr r6
    3360:	21028702 	tstcs	r2, r2, lsl #14
    3364:	000000b2 	strheq	r0, [r0], -r2
    3368:	00030501 	andeq	r0, r3, r1, lsl #10
    336c:	0b000000 	bleq	3374 <__HEAP_SIZE+0x2374>
    3370:	00000dcb 	andeq	r0, r0, fp, asr #27
    3374:	0182031c 	orreq	r0, r2, ip, lsl r3
    3378:	00015510 	andeq	r5, r1, r0, lsl r5
    337c:	12440c00 	subne	r0, r4, #0, 24
    3380:	86030000 	strhi	r0, [r3], -r0
    3384:	00a11901 	adceq	r1, r1, r1, lsl #18
    3388:	23020000 	movwcs	r0, #8192	; 0x2000
    338c:	0bce0c00 	bleq	ff386394 <__RAM_segment_used_end__+0xc7286394>
    3390:	87030000 	strhi	r0, [r3, -r0]
    3394:	00a11901 	adceq	r1, r1, r1, lsl #18
    3398:	23020000 	movwcs	r0, #8192	; 0x2000
    339c:	0c6b0c04 	stcleq	12, cr0, [fp], #-16
    33a0:	8a030000 	bhi	c33a8 <SYSTICK_CYCLES+0xb4949>
    33a4:	01611b01 	cmneq	r1, r1, lsl #22
    33a8:	23020000 	movwcs	r0, #8192	; 0x2000
    33ac:	08f40c08 	ldmeq	r4!, {r3, sl, fp}^
    33b0:	8b030000 	blhi	c33b8 <SYSTICK_CYCLES+0xb4959>
    33b4:	00a11901 	adceq	r1, r1, r1, lsl #18
    33b8:	23020000 	movwcs	r0, #8192	; 0x2000
    33bc:	13da0c0c 	bicsne	r0, sl, #12, 24	; 0xc00
    33c0:	91030000 	mrsls	r0, (UNDEF: 3)
    33c4:	01671a01 	cmneq	r7, r1, lsl #20
    33c8:	23020000 	movwcs	r0, #8192	; 0x2000
    33cc:	065a0c10 			; <UNDEFINED> instruction: 0x065a0c10
    33d0:	92030000 	andls	r0, r3, #0
    33d4:	01671a01 	cmneq	r7, r1, lsl #20
    33d8:	23020000 	movwcs	r0, #8192	; 0x2000
    33dc:	0f2f0c14 	svceq	0x002f0c14
    33e0:	96030000 	strls	r0, [r3], -r0
    33e4:	016d1b01 	cmneq	sp, r1, lsl #22
    33e8:	23020000 	movwcs	r0, #8192	; 0x2000
    33ec:	010d0018 	tsteq	sp, r8, lsl r0
    33f0:	00000161 	andeq	r0, r0, r1, ror #2
    33f4:	0000a10e 	andeq	sl, r0, lr, lsl #2
    33f8:	040f0000 	streq	r0, [pc], #-0	; 3400 <__HEAP_SIZE+0x2400>
    33fc:	00000155 	andeq	r0, r0, r5, asr r1
    3400:	00d6040f 	sbcseq	r0, r6, pc, lsl #8
    3404:	040f0000 	streq	r0, [pc], #-0	; 340c <__HEAP_SIZE+0x240c>
    3408:	00000167 	andeq	r0, r0, r7, ror #2
    340c:	000f7e10 	andeq	r7, pc, r0, lsl lr	; <UNPREDICTABLE>
    3410:	019b0300 	orrseq	r0, fp, r0, lsl #6
    3414:	0000d603 	andeq	sp, r0, r3, lsl #12
    3418:	7f040f00 	svcvc	0x00040f00
    341c:	0b000000 	bleq	3424 <__HEAP_SIZE+0x2424>
    3420:	00000b03 	andeq	r0, r0, r3, lsl #22
    3424:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    3428:	0004ab10 	andeq	sl, r4, r0, lsl fp
    342c:	13310c00 	teqne	r1, #0, 24
    3430:	dd030000 	stcle	0, cr0, [r3, #-0]
    3434:	00a11901 	adceq	r1, r1, r1, lsl #18
    3438:	23020000 	movwcs	r0, #8192	; 0x2000
    343c:	11a30c00 			; <UNDEFINED> instruction: 0x11a30c00
    3440:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    3444:	00a11901 	adceq	r1, r1, r1, lsl #18
    3448:	23020000 	movwcs	r0, #8192	; 0x2000
    344c:	08600c04 	stmdaeq	r0!, {r2, sl, fp}^
    3450:	df030000 	svcle	0x00030000
    3454:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3458:	23020000 	movwcs	r0, #8192	; 0x2000
    345c:	13050c08 	movwne	r0, #23560	; 0x5c08
    3460:	e0030000 	and	r0, r3, r0
    3464:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3468:	23020000 	movwcs	r0, #8192	; 0x2000
    346c:	0c3f0c0c 	ldceq	12, cr0, [pc], #-48	; 3444 <__HEAP_SIZE+0x2444>
    3470:	e1030000 	mrs	r0, (UNDEF: 3)
    3474:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3478:	23020000 	movwcs	r0, #8192	; 0x2000
    347c:	13c50c10 	bicne	r0, r5, #16, 24	; 0x1000
    3480:	e2030000 	and	r0, r3, #0
    3484:	00a11901 	adceq	r1, r1, r1, lsl #18
    3488:	23020000 	movwcs	r0, #8192	; 0x2000
    348c:	1b300c14 	blne	c064e4 <SYSTEM_CLOCK+0x64d764>
    3490:	e3030000 	movw	r0, #12288	; 0x3000
    3494:	00a11901 	adceq	r1, r1, r1, lsl #18
    3498:	23020000 	movwcs	r0, #8192	; 0x2000
    349c:	0f4b0c18 	svceq	0x004b0c18
    34a0:	e4030000 	str	r0, [r3], #-0
    34a4:	00a11901 	adceq	r1, r1, r1, lsl #18
    34a8:	23020000 	movwcs	r0, #8192	; 0x2000
    34ac:	0fed0c1c 	svceq	0x00ed0c1c
    34b0:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    34b4:	04ab1a01 	strteq	r1, [fp], #2561	; 0xa01
    34b8:	23020000 	movwcs	r0, #8192	; 0x2000
    34bc:	080c0c20 	stmdaeq	ip, {r5, sl, fp}
    34c0:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    34c4:	04ab1a01 	strteq	r1, [fp], #2561	; 0xa01
    34c8:	23020000 	movwcs	r0, #8192	; 0x2000
    34cc:	0ea40c24 	cdpeq	12, 10, cr0, cr4, cr4, {1}
    34d0:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    34d4:	01801a01 	orreq	r1, r0, r1, lsl #20
    34d8:	23020000 	movwcs	r0, #8192	; 0x2000
    34dc:	0a040c28 	beq	106584 <__RAM_SIZE+0x6584>
    34e0:	f2030000 	vhadd.s8	d0, d3, d0
    34e4:	00901901 	addseq	r1, r0, r1, lsl #18
    34e8:	23020000 	movwcs	r0, #8192	; 0x2000
    34ec:	09540c2c 	ldmdbeq	r4, {r2, r3, r5, sl, fp}^
    34f0:	f3030000 	vhadd.u8	d0, d3, d0
    34f4:	00901901 	addseq	r1, r0, r1, lsl #18
    34f8:	23020000 	movwcs	r0, #8192	; 0x2000
    34fc:	07e60c30 			; <UNDEFINED> instruction: 0x07e60c30
    3500:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    3504:	00901901 	addseq	r1, r0, r1, lsl #18
    3508:	23020000 	movwcs	r0, #8192	; 0x2000
    350c:	10e30c34 	rscne	r0, r3, r4, lsr ip
    3510:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    3514:	00901901 	addseq	r1, r0, r1, lsl #18
    3518:	23020000 	movwcs	r0, #8192	; 0x2000
    351c:	06f70c38 			; <UNDEFINED> instruction: 0x06f70c38
    3520:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    3524:	00901901 	addseq	r1, r0, r1, lsl #18
    3528:	23020000 	movwcs	r0, #8192	; 0x2000
    352c:	0b140c3c 	bleq	506624 <__RAM_SIZE+0x406624>
    3530:	fb030000 	blx	c353a <SYSTICK_CYCLES+0xb4adb>
    3534:	04c21b01 	strbeq	r1, [r2], #2817	; 0xb01
    3538:	23020000 	movwcs	r0, #8192	; 0x2000
    353c:	07c50c40 	strbeq	r0, [r5, r0, asr #24]
    3540:	03030000 	movweq	r0, #12288	; 0x3000
    3544:	01611b02 	cmneq	r1, r2, lsl #22
    3548:	23020000 	movwcs	r0, #8192	; 0x2000
    354c:	07130c44 	ldreq	r0, [r3, -r4, asr #24]
    3550:	04030000 	streq	r0, [r3], #-0
    3554:	00a11902 	adceq	r1, r1, r2, lsl #18
    3558:	23020000 	movwcs	r0, #8192	; 0x2000
    355c:	0aea0c48 	beq	ffa86684 <__RAM_segment_used_end__+0xc7986684>
    3560:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3564:	01731902 	cmneq	r3, r2, lsl #18
    3568:	23020000 	movwcs	r0, #8192	; 0x2000
    356c:	0a170c4c 	beq	5c66a4 <SYSTEM_CLOCK+0xd924>
    3570:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    3574:	04c21b02 	strbeq	r1, [r2], #2818	; 0xb02
    3578:	23020000 	movwcs	r0, #8192	; 0x2000
    357c:	0ec90c68 	cdpeq	12, 12, cr0, cr9, cr8, {3}
    3580:	0f030000 	svceq	0x00030000
    3584:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    3588:	23020000 	movwcs	r0, #8192	; 0x2000
    358c:	10b00c6c 	adcsne	r0, r0, ip, ror #24
    3590:	11030000 	mrsne	r0, (UNDEF: 3)
    3594:	04ab1a02 	strteq	r1, [fp], #2562	; 0xa02
    3598:	23020000 	movwcs	r0, #8192	; 0x2000
    359c:	09370c70 	ldmdbeq	r7!, {r4, r5, r6, sl, fp}
    35a0:	12030000 	andne	r0, r3, #0
    35a4:	04ab1a02 	strteq	r1, [fp], #2562	; 0xa02
    35a8:	23020000 	movwcs	r0, #8192	; 0x2000
    35ac:	10930c74 	addsne	r0, r3, r4, ror ip
    35b0:	13030000 	movwne	r0, #12288	; 0x3000
    35b4:	00a11902 	adceq	r1, r1, r2, lsl #18
    35b8:	23020000 	movwcs	r0, #8192	; 0x2000
    35bc:	0bf40c78 	bleq	ffd067a4 <__RAM_segment_used_end__+0xc7c067a4>
    35c0:	14030000 	strne	r0, [r3], #-0
    35c4:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    35c8:	23020000 	movwcs	r0, #8192	; 0x2000
    35cc:	0e2a0c7c 	mcreq	12, 1, r0, cr10, cr12, {3}
    35d0:	15030000 	strne	r0, [r3, #-0]
    35d4:	00901902 	addseq	r1, r0, r2, lsl #18
    35d8:	23030000 	movwcs	r0, #12288	; 0x3000
    35dc:	160c0180 	strne	r0, [ip], -r0, lsl #3
    35e0:	0300000c 	movweq	r0, #12
    35e4:	90190216 	andsls	r0, r9, r6, lsl r2
    35e8:	03000000 	movweq	r0, #0
    35ec:	0c018423 	cfstrseq	mvf8, [r1], {35}	; 0x23
    35f0:	000012ee 	andeq	r1, r0, lr, ror #5
    35f4:	1a021f03 	bne	8b208 <SYSTICK_CYCLES+0x7c7a9>
    35f8:	000004ab 	andeq	r0, r0, fp, lsr #9
    35fc:	01882303 	orreq	r2, r8, r3, lsl #6
    3600:	0011f40c 	andseq	pc, r1, ip, lsl #8
    3604:	02200300 	eoreq	r0, r0, #0, 6
    3608:	0004ab1a 	andeq	sl, r4, sl, lsl fp
    360c:	8c230300 	stchi	3, cr0, [r3], #-0
    3610:	09cf0c01 	stmibeq	pc, {r0, sl, fp}^	; <UNPREDICTABLE>
    3614:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    3618:	00901902 	addseq	r1, r0, r2, lsl #18
    361c:	23030000 	movwcs	r0, #12288	; 0x3000
    3620:	640c0190 	strvs	r0, [ip], #-400	; 0xfffffe70
    3624:	03000009 	movweq	r0, #9
    3628:	9019022f 	andsls	r0, r9, pc, lsr #4
    362c:	03000000 	movweq	r0, #0
    3630:	0c019423 	cfstrseq	mvf9, [r1], {35}	; 0x23
    3634:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
    3638:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    363c:	00000090 	muleq	r0, r0, r0
    3640:	01982303 	orrseq	r2, r8, r3, lsl #6
    3644:	0009850c 	andeq	r8, r9, ip, lsl #10
    3648:	02330300 	eorseq	r0, r3, #0, 6
    364c:	00009019 	andeq	r9, r0, r9, lsl r0
    3650:	9c230300 	stcls	3, cr0, [r3], #-0
    3654:	063f0c01 	ldrteq	r0, [pc], -r1, lsl #24
    3658:	35030000 	strcc	r0, [r3, #-0]
    365c:	05a71a02 	streq	r1, [r7, #2562]!	; 0xa02
    3660:	23030000 	movwcs	r0, #12288	; 0x3000
    3664:	e10c01a0 	smlatb	ip, r0, r1, r0
    3668:	03000015 	movweq	r0, #21
    366c:	a119023a 	tstge	r9, sl, lsr r2
    3670:	03000000 	movweq	r0, #0
    3674:	0c01a423 	cfstrseq	mvf10, [r1], {35}	; 0x23
    3678:	000016d0 	ldrdeq	r1, [r0], -r0
    367c:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    3680:	000000a1 	andeq	r0, r0, r1, lsr #1
    3684:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    3688:	00155a0c 	andseq	r5, r5, ip, lsl #20
    368c:	02410300 	subeq	r0, r1, #0, 6
    3690:	0000a119 	andeq	sl, r0, r9, lsl r1
    3694:	ac230300 	stcge	3, cr0, [r3], #-0
    3698:	17870c01 	strne	r0, [r7, r1, lsl #24]
    369c:	45030000 	strmi	r0, [r3, #-0]
    36a0:	00a11902 	adceq	r1, r1, r2, lsl #18
    36a4:	23030000 	movwcs	r0, #12288	; 0x3000
    36a8:	890c01b0 	stmdbhi	ip, {r4, r5, r7, r8}
    36ac:	03000016 	movweq	r0, #22
    36b0:	a1190248 	tstge	r9, r8, asr #4
    36b4:	03000000 	movweq	r0, #0
    36b8:	0c01b423 	cfstrseq	mvf11, [r1], {35}	; 0x23
    36bc:	000011c7 	andeq	r1, r0, r7, asr #3
    36c0:	1a024c03 	bne	966d4 <SYSTICK_CYCLES+0x87c75>
    36c4:	000004ab 	andeq	r0, r0, fp, lsr #9
    36c8:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    36cc:	00175f0c 	andseq	r5, r7, ip, lsl #30
    36d0:	024f0300 	subeq	r0, pc, #0, 6
    36d4:	0000a119 	andeq	sl, r0, r9, lsl r1
    36d8:	bc230300 	stclt	3, cr0, [r3], #-0
    36dc:	15320c01 	ldrne	r0, [r2, #-3073]!	; 0xfffff3ff
    36e0:	52030000 	andpl	r0, r3, #0
    36e4:	00a11902 	adceq	r1, r1, r2, lsl #18
    36e8:	23030000 	movwcs	r0, #12288	; 0x3000
    36ec:	980c01c0 	stmdals	ip, {r6, r7, r8}
    36f0:	03000014 	movweq	r0, #20
    36f4:	a1190255 	tstge	r9, r5, asr r2
    36f8:	03000000 	movweq	r0, #0
    36fc:	0c01c423 	cfstrseq	mvf12, [r1], {35}	; 0x23
    3700:	00001605 	andeq	r1, r0, r5, lsl #12
    3704:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    3708:	000000a1 	andeq	r0, r0, r1, lsr #1
    370c:	01c82303 	biceq	r2, r8, r3, lsl #6
    3710:	00140b0c 	andseq	r0, r4, ip, lsl #22
    3714:	025d0300 	subseq	r0, sp, #0, 6
    3718:	0000761a 	andeq	r7, r0, sl, lsl r6
    371c:	cc230300 	stcgt	3, cr0, [r3], #-0
    3720:	0ce40c01 	stcleq	12, cr0, [r4], #4
    3724:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    3728:	00a11902 	adceq	r1, r1, r2, lsl #18
    372c:	23030000 	movwcs	r0, #12288	; 0x3000
    3730:	650c01d0 	strvs	r0, [ip, #-464]	; 0xfffffe30
    3734:	0300000e 	movweq	r0, #14
    3738:	a119027d 	tstge	r9, sp, ror r2
    373c:	03000000 	movweq	r0, #0
    3740:	0001d423 	andeq	sp, r1, r3, lsr #8
    3744:	0186040f 	orreq	r0, r6, pc, lsl #8
    3748:	010d0000 	mrseq	r0, (UNDEF: 13)
    374c:	000004c2 	andeq	r0, r0, r2, asr #9
    3750:	0004ab0e 	andeq	sl, r4, lr, lsl #22
    3754:	00a10e00 	adceq	r0, r1, r0, lsl #28
    3758:	0f000000 	svceq	0x00000000
    375c:	0004b104 	andeq	fp, r4, r4, lsl #2
    3760:	11b70b00 			; <UNDEFINED> instruction: 0x11b70b00
    3764:	03340000 	teqeq	r4, #0
    3768:	a710037e 			; <UNDEFINED> instruction: 0xa710037e
    376c:	0c000005 	stceq	0, cr0, [r0], {5}
    3770:	00000800 	andeq	r0, r0, r0, lsl #16
    3774:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    3778:	000000a1 	andeq	r0, r0, r1, lsr #1
    377c:	0c002302 	stceq	3, cr2, [r0], {2}
    3780:	00001284 	andeq	r1, r0, r4, lsl #5
    3784:	1a038503 	bne	e4b98 <SYSTICK_CYCLES+0xd6139>
    3788:	00000180 	andeq	r0, r0, r0, lsl #3
    378c:	0c042302 	stceq	3, cr2, [r4], {2}
    3790:	0000107a 	andeq	r1, r0, sl, ror r0
    3794:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    3798:	00000090 	muleq	r0, r0, r0
    379c:	0c082302 	stceq	3, cr2, [r8], {2}
    37a0:	00000d3a 	andeq	r0, r0, sl, lsr sp
    37a4:	1a038c03 	bne	e67b8 <SYSTICK_CYCLES+0xd7d59>
    37a8:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    37ac:	0c0c2302 	stceq	3, cr2, [ip], {2}
    37b0:	000007d5 	ldrdeq	r0, [r0], -r5
    37b4:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    37b8:	00000090 	muleq	r0, r0, r0
    37bc:	0c102302 	ldceq	3, cr2, [r0], {2}
    37c0:	00000741 	andeq	r0, r0, r1, asr #14
    37c4:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    37c8:	00000090 	muleq	r0, r0, r0
    37cc:	0c142302 	ldceq	3, cr2, [r4], {2}
    37d0:	000012c5 	andeq	r1, r0, r5, asr #5
    37d4:	1a039803 	bne	e97e8 <SYSTICK_CYCLES+0xdad89>
    37d8:	000004ab 	andeq	r0, r0, fp, lsr #9
    37dc:	0c182302 	ldceq	3, cr2, [r8], {2}
    37e0:	0000104b 	andeq	r1, r0, fp, asr #32
    37e4:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    37e8:	00000090 	muleq	r0, r0, r0
    37ec:	0c1c2302 	ldceq	3, cr2, [ip], {2}
    37f0:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    37f4:	1a039d03 	bne	eac08 <SYSTICK_CYCLES+0xdc1a9>
    37f8:	000005a7 	andeq	r0, r0, r7, lsr #11
    37fc:	0c202302 	stceq	3, cr2, [r0], #-8
    3800:	00000fb6 			; <UNDEFINED> instruction: 0x00000fb6
    3804:	1a039e03 	bne	eb018 <SYSTICK_CYCLES+0xdc5b9>
    3808:	000005a7 	andeq	r0, r0, r7, lsr #11
    380c:	0c242302 	stceq	3, cr2, [r4], #-8
    3810:	000008d2 	ldrdeq	r0, [r0], -r2
    3814:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    3818:	00000090 	muleq	r0, r0, r0
    381c:	0c282302 	stceq	3, cr2, [r8], #-8
    3820:	00001436 	andeq	r1, r0, r6, lsr r4
    3824:	1a03a603 	bne	ed038 <SYSTICK_CYCLES+0xde5d9>
    3828:	000005a7 	andeq	r0, r0, r7, lsr #11
    382c:	0c2c2302 	stceq	3, cr2, [ip], #-8
    3830:	00000c53 	andeq	r0, r0, r3, asr ip
    3834:	1a03a703 	bne	ed448 <SYSTICK_CYCLES+0xde9e9>
    3838:	000005a7 	andeq	r0, r0, r7, lsr #11
    383c:	00302302 	eorseq	r2, r0, r2, lsl #6
    3840:	04c8040f 	strbeq	r0, [r8], #1039	; 0x40f
    3844:	de100000 	cdple	0, 1, cr0, cr0, cr0, {0}
    3848:	03000012 	movweq	r0, #18
    384c:	86030286 	strhi	r0, [r3], -r6, lsl #5
    3850:	0f000001 	svceq	0x00000001
    3854:	0005ad04 	andeq	sl, r5, r4, lsl #26
    3858:	166c1100 	strbtne	r1, [ip], -r0, lsl #2
    385c:	33040000 	movwcc	r0, #16384	; 0x4000
    3860:	00762101 	rsbseq	r2, r6, r1, lsl #2
    3864:	01010000 	mrseq	r0, (UNDEF: 1)
    3868:	0017d311 	andseq	sp, r7, r1, lsl r3
    386c:	01390400 	teqeq	r9, r0, lsl #8
    3870:	0005ba21 	andeq	fp, r5, r1, lsr #20
    3874:	11010100 	mrsne	r0, (UNDEF: 17)
    3878:	00001501 	andeq	r1, r0, r1, lsl #10
    387c:	21014004 	tstcs	r1, r4
    3880:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    3884:	b8110101 	ldmdalt	r1, {r0, r8}
    3888:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    388c:	ba210145 	blt	843da8 <SYSTEM_CLOCK+0x28b028>
    3890:	01000005 	tsteq	r0, r5
    3894:	17ea1101 	strbne	r1, [sl, r1, lsl #2]!
    3898:	4a040000 	bmi	1038a0 <__RAM_SIZE+0x38a0>
    389c:	00a12101 	adceq	r2, r1, r1, lsl #2
    38a0:	01010000 	mrseq	r0, (UNDEF: 1)
    38a4:	00162c11 	andseq	r2, r6, r1, lsl ip
    38a8:	01530400 	cmpeq	r3, r0, lsl #8
    38ac:	0000ad21 	andeq	sl, r0, r1, lsr #26
    38b0:	08010100 	stmdaeq	r1, {r8}
    38b4:	000000a1 	andeq	r0, r0, r1, lsr #1
    38b8:	0000062a 	andeq	r0, r0, sl, lsr #12
    38bc:	00002909 	andeq	r2, r0, r9, lsl #18
    38c0:	11000000 	mrsne	r0, (UNDEF: 0)
    38c4:	00001644 	andeq	r1, r0, r4, asr #12
    38c8:	21015b04 	tstcs	r1, r4, lsl #22
    38cc:	0000061a 	andeq	r0, r0, sl, lsl r6
    38d0:	bc110101 	ldflts	f0, [r1], {1}
    38d4:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    38d8:	9021017f 	eorls	r0, r1, pc, ror r1
    38dc:	01000000 	mrseq	r0, (UNDEF: 0)
    38e0:	05ba0801 	ldreq	r0, [sl, #2049]!	; 0x801
    38e4:	06580000 	ldrbeq	r0, [r8], -r0
    38e8:	29090000 	stmdbcs	r9, {}	; <UNPREDICTABLE>
    38ec:	1f000000 	svcne	0x00000000
    38f0:	183e1100 	ldmdane	lr!, {r8, ip}
    38f4:	87040000 	strhi	r0, [r4, -r0]
    38f8:	06482101 	strbeq	r2, [r8], -r1, lsl #2
    38fc:	01010000 	mrseq	r0, (UNDEF: 1)
    3900:	0017b811 	andseq	fp, r7, r1, lsl r8
    3904:	018e0400 	orreq	r0, lr, r0, lsl #8
    3908:	00009c21 	andeq	r9, r0, r1, lsr #24
    390c:	0d010100 	stfeqs	f0, [r1, #-0]
    3910:	00068201 	andeq	r8, r6, r1, lsl #4
    3914:	05ba0e00 	ldreq	r0, [sl, #3584]!	; 0xe00
    3918:	11000000 	mrsne	r0, (UNDEF: 0)
    391c:	00001518 	andeq	r1, r0, r8, lsl r5
    3920:	23019404 	movwcs	r9, #5124	; 0x1404
    3924:	00000691 	muleq	r0, r1, r6
    3928:	040f0101 	streq	r0, [pc], #-257	; 3930 <__HEAP_SIZE+0x2930>
    392c:	00000676 	andeq	r0, r0, r6, ror r6
    3930:	00185711 	andseq	r5, r8, r1, lsl r7
    3934:	01b80400 			; <UNDEFINED> instruction: 0x01b80400
    3938:	0000a121 	andeq	sl, r0, r1, lsr #2
    393c:	11010100 	mrsne	r0, (UNDEF: 17)
    3940:	0000158b 	andeq	r1, r0, fp, lsl #11
    3944:	2301c104 	movwcs	ip, #4356	; 0x1104
    3948:	00000691 	muleq	r0, r1, r6
    394c:	e0110101 	ands	r0, r1, r1, lsl #2
    3950:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    3954:	a12101ca 	smlawtge	r1, sl, r1, r0
    3958:	01000000 	mrseq	r0, (UNDEF: 0)
    395c:	16cf1101 	strbne	r1, [pc], r1, lsl #2
    3960:	d0040000 	andle	r0, r4, r0
    3964:	00a12101 	adceq	r2, r1, r1, lsl #2
    3968:	01010000 	mrseq	r0, (UNDEF: 1)
    396c:	00155911 	andseq	r5, r5, r1, lsl r9
    3970:	01d60400 	bicseq	r0, r6, r0, lsl #8
    3974:	0000a121 	andeq	sl, r0, r1, lsr #2
    3978:	11010100 	mrsne	r0, (UNDEF: 17)
    397c:	00001786 	andeq	r1, r0, r6, lsl #15
    3980:	2101dd04 	tstcs	r1, r4, lsl #26
    3984:	000000a1 	andeq	r0, r0, r1, lsr #1
    3988:	88110101 	ldmdahi	r1, {r0, r8}
    398c:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    3990:	a12101e3 	smulwtge	r1, r3, r1
    3994:	01000000 	mrseq	r0, (UNDEF: 0)
    3998:	175e1101 	ldrbne	r1, [lr, -r1, lsl #2]
    399c:	ea040000 	b	1039a4 <__RAM_SIZE+0x39a4>
    39a0:	00a12101 	adceq	r2, r1, r1, lsl #2
    39a4:	01010000 	mrseq	r0, (UNDEF: 1)
    39a8:	00153111 	andseq	r3, r5, r1, lsl r1
    39ac:	01f10400 	mvnseq	r0, r0, lsl #8
    39b0:	0000a121 	andeq	sl, r0, r1, lsr #2
    39b4:	11010100 	mrsne	r0, (UNDEF: 17)
    39b8:	00001497 	muleq	r0, r7, r4
    39bc:	2101f704 	tstcs	r1, r4, lsl #14	; <UNPREDICTABLE>
    39c0:	000000a1 	andeq	r0, r0, r1, lsr #1
    39c4:	04110101 	ldreq	r0, [r1], #-257	; 0xfffffeff
    39c8:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    39cc:	a12101fd 	strdge	r0, [r1, -sp]!
    39d0:	01000000 	mrseq	r0, (UNDEF: 0)
    39d4:	14d81101 	ldrbne	r1, [r8], #257	; 0x101
    39d8:	03040000 	movweq	r0, #16384	; 0x4000
    39dc:	00a12102 	adceq	r2, r1, r2, lsl #2
    39e0:	01010000 	mrseq	r0, (UNDEF: 1)
    39e4:	00173111 	andseq	r3, r7, r1, lsl r1
    39e8:	02090400 	andeq	r0, r9, #0, 8
    39ec:	0000a121 	andeq	sl, r0, r1, lsr #2
    39f0:	11010100 	mrsne	r0, (UNDEF: 17)
    39f4:	000015b6 			; <UNDEFINED> instruction: 0x000015b6
    39f8:	21020f04 	tstcs	r2, r4, lsl #30
    39fc:	000000a1 	andeq	r0, r0, r1, lsr #1
    3a00:	ba080101 	blt	203e0c <__RAM_SIZE+0x103e0c>
    3a04:	79000005 	stmdbvc	r0, {r0, r2}
    3a08:	09000007 	stmdbeq	r0, {r0, r1, r2}
    3a0c:	00000029 	andeq	r0, r0, r9, lsr #32
    3a10:	0e110007 	cdpeq	0, 1, cr0, cr1, cr7, {0}
    3a14:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    3a18:	69210210 	stmdbvs	r1!, {r4, r9}
    3a1c:	01000007 	tsteq	r0, r7
    3a20:	05c01201 	strbeq	r1, [r0, #513]	; 0x201
    3a24:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    3a28:	64030511 	strvs	r0, [r3], #-1297	; 0xfffffaef
    3a2c:	12380001 	eorsne	r0, r8, #1
    3a30:	000005cf 	andeq	r0, r0, pc, asr #11
    3a34:	05112f01 	ldreq	r2, [r1, #-3841]	; 0xfffff0ff
    3a38:	00009803 	andeq	r9, r0, r3, lsl #16
    3a3c:	05de1238 	ldrbeq	r1, [lr, #568]	; 0x238
    3a40:	36010000 	strcc	r0, [r1], -r0
    3a44:	9c030511 	cfstr32ls	mvfx0, [r3], {17}
    3a48:	12380000 	eorsne	r0, r8, #0
    3a4c:	000005ed 	andeq	r0, r0, sp, ror #11
    3a50:	05113b01 	ldreq	r3, [r1, #-2817]	; 0xfffff4ff
    3a54:	00000003 	andeq	r0, r0, r3
    3a58:	05fc1200 	ldrbeq	r1, [ip, #512]!	; 0x200
    3a5c:	40010000 	andmi	r0, r1, r0
    3a60:	00030511 	andeq	r0, r3, r1, lsl r5
    3a64:	12000000 	andne	r0, r0, #0
    3a68:	0000060b 	andeq	r0, r0, fp, lsl #12
    3a6c:	05114901 	ldreq	r4, [r1, #-2305]	; 0xfffff6ff
    3a70:	00000403 	andeq	r0, r0, r3, lsl #8
    3a74:	062a1238 			; <UNDEFINED> instruction: 0x062a1238
    3a78:	51010000 	mrspl	r0, (UNDEF: 1)
    3a7c:	60030511 	andvs	r0, r3, r1, lsl r5
    3a80:	12380001 	eorsne	r0, r8, #1
    3a84:	00000639 	andeq	r0, r0, r9, lsr r6
    3a88:	05117501 	ldreq	r7, [r1, #-1281]	; 0xfffffaff
    3a8c:	0000a003 	andeq	sl, r0, r3
    3a90:	06581238 			; <UNDEFINED> instruction: 0x06581238
    3a94:	7d010000 	stcvc	0, cr0, [r1, #-0]
    3a98:	e0030511 	and	r0, r3, r1, lsl r5
    3a9c:	12380000 	eorsne	r0, r8, #0
    3aa0:	00000667 	andeq	r0, r0, r7, ror #12
    3aa4:	05118401 	ldreq	r8, [r1, #-1025]	; 0xfffffbff
    3aa8:	0000dc03 	andeq	sp, r0, r3, lsl #24
    3aac:	06821238 			; <UNDEFINED> instruction: 0x06821238
    3ab0:	8a010000 	bhi	43ab8 <SYSTICK_CYCLES+0x35059>
    3ab4:	00030513 	andeq	r0, r3, r3, lsl r5
    3ab8:	12000000 	andne	r0, r0, #0
    3abc:	00000697 	muleq	r0, r7, r6
    3ac0:	0511ae01 	ldreq	sl, [r1, #-3585]	; 0xfffff1ff
    3ac4:	00000003 	andeq	r0, r0, r3
    3ac8:	06a61200 	strteq	r1, [r6], r0, lsl #4
    3acc:	b7010000 	strlt	r0, [r1, -r0]
    3ad0:	94030513 	strls	r0, [r3], #-1299	; 0xfffffaed
    3ad4:	12380000 	eorsne	r0, r8, #0
    3ad8:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    3adc:	0511c001 	ldreq	ip, [r1, #-1]
    3ae0:	0000d003 	andeq	sp, r0, r3
    3ae4:	06c41238 			; <UNDEFINED> instruction: 0x06c41238
    3ae8:	c6010000 	strgt	r0, [r1], -r0
    3aec:	00030511 	andeq	r0, r3, r1, lsl r5
    3af0:	12000000 	andne	r0, r0, #0
    3af4:	000006d3 	ldrdeq	r0, [r0], -r3
    3af8:	0511cc01 	ldreq	ip, [r1, #-3073]	; 0xfffff3ff
    3afc:	0000d403 	andeq	sp, r0, r3, lsl #8
    3b00:	06e21238 			; <UNDEFINED> instruction: 0x06e21238
    3b04:	d3010000 	movwle	r0, #4096	; 0x1000
    3b08:	c8030511 	stmdagt	r3, {r0, r4, r8, sl}
    3b0c:	12380000 	eorsne	r0, r8, #0
    3b10:	000006f1 	strdeq	r0, [r0], -r1
    3b14:	0511d901 	ldreq	sp, [r1, #-2305]	; 0xfffff6ff
    3b18:	00000003 	andeq	r0, r0, r3
    3b1c:	07001200 	streq	r1, [r0, -r0, lsl #4]
    3b20:	e0010000 	and	r0, r1, r0
    3b24:	d8030511 	stmdale	r3, {r0, r4, r8, sl}
    3b28:	12380000 	eorsne	r0, r8, #0
    3b2c:	0000070f 	andeq	r0, r0, pc, lsl #14
    3b30:	0511e701 	ldreq	lr, [r1, #-1793]	; 0xfffff8ff
    3b34:	00000003 	andeq	r0, r0, r3
    3b38:	071e1200 	ldreq	r1, [lr, -r0, lsl #4]
    3b3c:	ed010000 	stc	0, cr0, [r1, #-0]
    3b40:	00030511 	andeq	r0, r3, r1, lsl r5
    3b44:	12000000 	andne	r0, r0, #0
    3b48:	0000072d 	andeq	r0, r0, sp, lsr #14
    3b4c:	0511f301 	ldreq	pc, [r1, #-769]	; 0xfffffcff
    3b50:	00000003 	andeq	r0, r0, r3
    3b54:	073c1200 	ldreq	r1, [ip, -r0, lsl #4]!
    3b58:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    3b5c:	00030511 	andeq	r0, r3, r1, lsl r5
    3b60:	12000000 	andne	r0, r0, #0
    3b64:	0000074b 	andeq	r0, r0, fp, asr #14
    3b68:	0511ff01 	ldreq	pc, [r1, #-3841]	; 0xfffff0ff
    3b6c:	0000cc03 	andeq	ip, r0, r3, lsl #24
    3b70:	075a1338 	smmlareq	sl, r8, r3, r1
    3b74:	05010000 	streq	r0, [r1, #-0]
    3b78:	03051101 	movweq	r1, #20737	; 0x5101
    3b7c:	380000a4 	stmdacc	r0, {r2, r5, r7}
    3b80:	00077913 	andeq	r7, r7, r3, lsl r9
    3b84:	01060100 	mrseq	r0, (UNDEF: 22)
    3b88:	a8030511 	stmdage	r3, {r0, r4, r8, sl}
    3b8c:	08380000 	ldmdaeq	r8!, {}	; <UNPREDICTABLE>
    3b90:	0000008b 	andeq	r0, r0, fp, lsl #1
    3b94:	00000906 	andeq	r0, r0, r6, lsl #18
    3b98:	00002909 	andeq	r2, r0, r9, lsl #18
    3b9c:	06005600 	streq	r5, [r0], -r0, lsl #12
    3ba0:	000008f6 	strdeq	r0, [r0], -r6
    3ba4:	0016f40a 	andseq	pc, r6, sl, lsl #8
    3ba8:	010d0100 	mrseq	r0, (UNDEF: 29)
    3bac:	0009060c 	andeq	r0, r9, ip, lsl #12
    3bb0:	03050100 	movweq	r0, #20736	; 0x5100
    3bb4:	00000000 	andeq	r0, r0, r0
    3bb8:	10640114 	rsbne	r0, r4, r4, lsl r1
    3bbc:	40010000 	andmi	r0, r1, r0
    3bc0:	00010701 	andeq	r0, r1, r1, lsl #14
    3bc4:	00000000 	andeq	r0, r0, r0
    3bc8:	02000000 	andeq	r0, r0, #0
    3bcc:	0001007d 	andeq	r0, r1, sp, ror r0
    3bd0:	00000755 	andeq	r0, r0, r5, asr r7
    3bd4:	093e0002 	ldmdbeq	lr!, {r1}
    3bd8:	01040000 	mrseq	r0, (UNDEF: 4)
    3bdc:	0000000f 	andeq	r0, r0, pc
    3be0:	0018eb0c 	andseq	lr, r8, ip, lsl #22
    3be4:	00019d00 	andeq	r9, r1, r0, lsl #26
    3be8:	00022800 	andeq	r2, r2, r0, lsl #16
	...
    3bf4:	001b6f00 	andseq	r6, fp, r0, lsl #30
    3bf8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3bfc:	00000144 	andeq	r0, r0, r4, asr #2
    3c00:	69050403 	stmdbvs	r5, {r0, r1, sl}
    3c04:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3c08:	015d0508 	cmpeq	sp, r8, lsl #10
    3c0c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3c10:	00015104 	andeq	r5, r1, r4, lsl #2
    3c14:	06010200 	streq	r0, [r1], -r0, lsl #4
    3c18:	000000f6 	strdeq	r0, [r0], -r6
    3c1c:	f4080102 	vst4.8	{d0,d2,d4,d6}, [r8], r2
    3c20:	02000000 	andeq	r0, r0, #0
    3c24:	017b0502 	cmneq	fp, r2, lsl #10
    3c28:	02020000 	andeq	r0, r2, #0
    3c2c:	00010207 	andeq	r0, r1, r7, lsl #4
    3c30:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3c34:	00000162 	andeq	r0, r0, r2, ror #2
    3c38:	3f070402 	svccc	0x00070402
    3c3c:	02000001 	andeq	r0, r0, #1
    3c40:	013a0708 	teqeq	sl, r8, lsl #14
    3c44:	04040000 	streq	r0, [r4], #-0
    3c48:	fd080102 	stc2	1, cr0, [r8, #-8]
    3c4c:	05000000 	streq	r0, [r0, #-0]
    3c50:	000012e9 	andeq	r1, r0, r9, ror #5
    3c54:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    3c58:	05000000 	streq	r0, [r0, #-0]
    3c5c:	0000114c 	andeq	r1, r0, ip, asr #2
    3c60:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    3c64:	05000000 	streq	r0, [r0, #-0]
    3c68:	000010aa 	andeq	r1, r0, sl, lsr #1
    3c6c:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    3c70:	06000000 	streq	r0, [r0], -r0
    3c74:	00000dcb 	andeq	r0, r0, fp, asr #27
    3c78:	0182031c 	orreq	r0, r2, ip, lsl r3
    3c7c:	00012210 	andeq	r2, r1, r0, lsl r2
    3c80:	12440700 	subne	r0, r4, #0, 14
    3c84:	86030000 	strhi	r0, [r3], -r0
    3c88:	00971901 	addseq	r1, r7, r1, lsl #18
    3c8c:	23020000 	movwcs	r0, #8192	; 0x2000
    3c90:	0bce0700 	bleq	ff385898 <__RAM_segment_used_end__+0xc7285898>
    3c94:	87030000 	strhi	r0, [r3, -r0]
    3c98:	00971901 	addseq	r1, r7, r1, lsl #18
    3c9c:	23020000 	movwcs	r0, #8192	; 0x2000
    3ca0:	0c6b0704 	stcleq	7, cr0, [fp], #-16
    3ca4:	8a030000 	bhi	c3cac <SYSTICK_CYCLES+0xb524d>
    3ca8:	012e1b01 			; <UNDEFINED> instruction: 0x012e1b01
    3cac:	23020000 	movwcs	r0, #8192	; 0x2000
    3cb0:	08f40708 	ldmeq	r4!, {r3, r8, r9, sl}^
    3cb4:	8b030000 	blhi	c3cbc <SYSTICK_CYCLES+0xb525d>
    3cb8:	00971901 	addseq	r1, r7, r1, lsl #18
    3cbc:	23020000 	movwcs	r0, #8192	; 0x2000
    3cc0:	13da070c 	bicsne	r0, sl, #12, 14	; 0x300000
    3cc4:	91030000 	mrsls	r0, (UNDEF: 3)
    3cc8:	01341a01 	teqeq	r4, r1, lsl #20
    3ccc:	23020000 	movwcs	r0, #8192	; 0x2000
    3cd0:	065a0710 			; <UNDEFINED> instruction: 0x065a0710
    3cd4:	92030000 	andls	r0, r3, #0
    3cd8:	01341a01 	teqeq	r4, r1, lsl #20
    3cdc:	23020000 	movwcs	r0, #8192	; 0x2000
    3ce0:	0f2f0714 	svceq	0x002f0714
    3ce4:	96030000 	strls	r0, [r3], -r0
    3ce8:	013a1b01 	teqeq	sl, r1, lsl #22
    3cec:	23020000 	movwcs	r0, #8192	; 0x2000
    3cf0:	01080018 	tsteq	r8, r8, lsl r0
    3cf4:	0000012e 	andeq	r0, r0, lr, lsr #2
    3cf8:	00009709 	andeq	r9, r0, r9, lsl #14
    3cfc:	040a0000 	streq	r0, [sl], #-0
    3d00:	00000122 	andeq	r0, r0, r2, lsr #2
    3d04:	00a3040a 	adceq	r0, r3, sl, lsl #8
    3d08:	040a0000 	streq	r0, [sl], #-0
    3d0c:	00000134 	andeq	r0, r0, r4, lsr r1
    3d10:	000f7e0b 	andeq	r7, pc, fp, lsl #28
    3d14:	019b0300 	orrseq	r0, fp, r0, lsl #6
    3d18:	0000a303 	andeq	sl, r0, r3, lsl #6
    3d1c:	7f040a00 	svcvc	0x00040a00
    3d20:	06000000 	streq	r0, [r0], -r0
    3d24:	00000b03 	andeq	r0, r0, r3, lsl #22
    3d28:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    3d2c:	00047810 	andeq	r7, r4, r0, lsl r8
    3d30:	13310700 	teqne	r1, #0, 14
    3d34:	dd030000 	stcle	0, cr0, [r3, #-0]
    3d38:	00971901 	addseq	r1, r7, r1, lsl #18
    3d3c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d40:	11a30700 			; <UNDEFINED> instruction: 0x11a30700
    3d44:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    3d48:	00971901 	addseq	r1, r7, r1, lsl #18
    3d4c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d50:	08600704 	stmdaeq	r0!, {r2, r8, r9, sl}^
    3d54:	df030000 	svcle	0x00030000
    3d58:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3d5c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d60:	13050708 	movwne	r0, #22280	; 0x5708
    3d64:	e0030000 	and	r0, r3, r0
    3d68:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3d6c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d70:	0c3f070c 	ldceq	7, cr0, [pc], #-48	; 3d48 <__HEAP_SIZE+0x2d48>
    3d74:	e1030000 	mrs	r0, (UNDEF: 3)
    3d78:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3d7c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d80:	13c50710 	bicne	r0, r5, #16, 14	; 0x400000
    3d84:	e2030000 	and	r0, r3, #0
    3d88:	00971901 	addseq	r1, r7, r1, lsl #18
    3d8c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d90:	1b300714 	blne	c059e8 <SYSTEM_CLOCK+0x64cc68>
    3d94:	e3030000 	movw	r0, #12288	; 0x3000
    3d98:	00971901 	addseq	r1, r7, r1, lsl #18
    3d9c:	23020000 	movwcs	r0, #8192	; 0x2000
    3da0:	0f4b0718 	svceq	0x004b0718
    3da4:	e4030000 	str	r0, [r3], #-0
    3da8:	00971901 	addseq	r1, r7, r1, lsl #18
    3dac:	23020000 	movwcs	r0, #8192	; 0x2000
    3db0:	0fed071c 	svceq	0x00ed071c
    3db4:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    3db8:	04781a01 	ldrbteq	r1, [r8], #-2561	; 0xfffff5ff
    3dbc:	23020000 	movwcs	r0, #8192	; 0x2000
    3dc0:	080c0720 	stmdaeq	ip, {r5, r8, r9, sl}
    3dc4:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    3dc8:	04781a01 	ldrbteq	r1, [r8], #-2561	; 0xfffff5ff
    3dcc:	23020000 	movwcs	r0, #8192	; 0x2000
    3dd0:	0ea40724 	cdpeq	7, 10, cr0, cr4, cr4, {1}
    3dd4:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    3dd8:	014d1a01 	cmpeq	sp, r1, lsl #20
    3ddc:	23020000 	movwcs	r0, #8192	; 0x2000
    3de0:	0a040728 	beq	105a88 <__RAM_SIZE+0x5a88>
    3de4:	f2030000 	vhadd.s8	d0, d3, d0
    3de8:	008b1901 	addeq	r1, fp, r1, lsl #18
    3dec:	23020000 	movwcs	r0, #8192	; 0x2000
    3df0:	0954072c 	ldmdbeq	r4, {r2, r3, r5, r8, r9, sl}^
    3df4:	f3030000 	vhadd.u8	d0, d3, d0
    3df8:	008b1901 	addeq	r1, fp, r1, lsl #18
    3dfc:	23020000 	movwcs	r0, #8192	; 0x2000
    3e00:	07e60730 			; <UNDEFINED> instruction: 0x07e60730
    3e04:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    3e08:	008b1901 	addeq	r1, fp, r1, lsl #18
    3e0c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e10:	10e30734 	rscne	r0, r3, r4, lsr r7
    3e14:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    3e18:	008b1901 	addeq	r1, fp, r1, lsl #18
    3e1c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e20:	06f70738 			; <UNDEFINED> instruction: 0x06f70738
    3e24:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    3e28:	008b1901 	addeq	r1, fp, r1, lsl #18
    3e2c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e30:	0b14073c 	bleq	505b28 <__RAM_SIZE+0x405b28>
    3e34:	fb030000 	blx	c3e3e <SYSTICK_CYCLES+0xb53df>
    3e38:	048f1b01 	streq	r1, [pc], #2817	; 3e40 <__HEAP_SIZE+0x2e40>
    3e3c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e40:	07c50740 	strbeq	r0, [r5, r0, asr #14]
    3e44:	03030000 	movweq	r0, #12288	; 0x3000
    3e48:	012e1b02 			; <UNDEFINED> instruction: 0x012e1b02
    3e4c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e50:	07130744 	ldreq	r0, [r3, -r4, asr #14]
    3e54:	04030000 	streq	r0, [r3], #-0
    3e58:	00971902 	addseq	r1, r7, r2, lsl #18
    3e5c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e60:	0aea0748 	beq	ffa85b88 <__RAM_segment_used_end__+0xc7985b88>
    3e64:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3e68:	01401902 	cmpeq	r0, r2, lsl #18
    3e6c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e70:	0a17074c 	beq	5c5ba8 <SYSTEM_CLOCK+0xce28>
    3e74:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    3e78:	048f1b02 	streq	r1, [pc], #2818	; 3e80 <__HEAP_SIZE+0x2e80>
    3e7c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e80:	0ec90768 	cdpeq	7, 12, cr0, cr9, cr8, {3}
    3e84:	0f030000 	svceq	0x00030000
    3e88:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    3e8c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e90:	10b0076c 	adcsne	r0, r0, ip, ror #14
    3e94:	11030000 	mrsne	r0, (UNDEF: 3)
    3e98:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    3e9c:	23020000 	movwcs	r0, #8192	; 0x2000
    3ea0:	09370770 	ldmdbeq	r7!, {r4, r5, r6, r8, r9, sl}
    3ea4:	12030000 	andne	r0, r3, #0
    3ea8:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    3eac:	23020000 	movwcs	r0, #8192	; 0x2000
    3eb0:	10930774 	addsne	r0, r3, r4, ror r7
    3eb4:	13030000 	movwne	r0, #12288	; 0x3000
    3eb8:	00971902 	addseq	r1, r7, r2, lsl #18
    3ebc:	23020000 	movwcs	r0, #8192	; 0x2000
    3ec0:	0bf40778 	bleq	ffd05ca8 <__RAM_segment_used_end__+0xc7c05ca8>
    3ec4:	14030000 	strne	r0, [r3], #-0
    3ec8:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    3ecc:	23020000 	movwcs	r0, #8192	; 0x2000
    3ed0:	0e2a077c 	mcreq	7, 1, r0, cr10, cr12, {3}
    3ed4:	15030000 	strne	r0, [r3, #-0]
    3ed8:	008b1902 	addeq	r1, fp, r2, lsl #18
    3edc:	23030000 	movwcs	r0, #12288	; 0x3000
    3ee0:	16070180 	strne	r0, [r7], -r0, lsl #3
    3ee4:	0300000c 	movweq	r0, #12
    3ee8:	8b190216 	blhi	644748 <SYSTEM_CLOCK+0x8b9c8>
    3eec:	03000000 	movweq	r0, #0
    3ef0:	07018423 	streq	r8, [r1, -r3, lsr #8]
    3ef4:	000012ee 	andeq	r1, r0, lr, ror #5
    3ef8:	1a021f03 	bne	8bb0c <SYSTICK_CYCLES+0x7d0ad>
    3efc:	00000478 	andeq	r0, r0, r8, ror r4
    3f00:	01882303 	orreq	r2, r8, r3, lsl #6
    3f04:	0011f407 	andseq	pc, r1, r7, lsl #8
    3f08:	02200300 	eoreq	r0, r0, #0, 6
    3f0c:	0004781a 	andeq	r7, r4, sl, lsl r8
    3f10:	8c230300 	stchi	3, cr0, [r3], #-0
    3f14:	09cf0701 	stmibeq	pc, {r0, r8, r9, sl}^	; <UNPREDICTABLE>
    3f18:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    3f1c:	008b1902 	addeq	r1, fp, r2, lsl #18
    3f20:	23030000 	movwcs	r0, #12288	; 0x3000
    3f24:	64070190 	strvs	r0, [r7], #-400	; 0xfffffe70
    3f28:	03000009 	movweq	r0, #9
    3f2c:	8b19022f 	blhi	6447f0 <SYSTEM_CLOCK+0x8ba70>
    3f30:	03000000 	movweq	r0, #0
    3f34:	07019423 	streq	r9, [r1, -r3, lsr #8]
    3f38:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
    3f3c:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    3f40:	0000008b 	andeq	r0, r0, fp, lsl #1
    3f44:	01982303 	orrseq	r2, r8, r3, lsl #6
    3f48:	00098507 	andeq	r8, r9, r7, lsl #10
    3f4c:	02330300 	eorseq	r0, r3, #0, 6
    3f50:	00008b19 	andeq	r8, r0, r9, lsl fp
    3f54:	9c230300 	stcls	3, cr0, [r3], #-0
    3f58:	063f0701 	ldrteq	r0, [pc], -r1, lsl #14
    3f5c:	35030000 	strcc	r0, [r3, #-0]
    3f60:	05741a02 	ldrbeq	r1, [r4, #-2562]!	; 0xfffff5fe
    3f64:	23030000 	movwcs	r0, #12288	; 0x3000
    3f68:	e10701a0 	smlatb	r7, r0, r1, r0
    3f6c:	03000015 	movweq	r0, #21
    3f70:	9719023a 			; <UNDEFINED> instruction: 0x9719023a
    3f74:	03000000 	movweq	r0, #0
    3f78:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    3f7c:	000016d0 	ldrdeq	r1, [r0], -r0
    3f80:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    3f84:	00000097 	muleq	r0, r7, r0
    3f88:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    3f8c:	00155a07 	andseq	r5, r5, r7, lsl #20
    3f90:	02410300 	subeq	r0, r1, #0, 6
    3f94:	00009719 	andeq	r9, r0, r9, lsl r7
    3f98:	ac230300 	stcge	3, cr0, [r3], #-0
    3f9c:	17870701 	strne	r0, [r7, r1, lsl #14]
    3fa0:	45030000 	strmi	r0, [r3, #-0]
    3fa4:	00971902 	addseq	r1, r7, r2, lsl #18
    3fa8:	23030000 	movwcs	r0, #12288	; 0x3000
    3fac:	890701b0 	stmdbhi	r7, {r4, r5, r7, r8}
    3fb0:	03000016 	movweq	r0, #22
    3fb4:	97190248 	ldrls	r0, [r9, -r8, asr #4]
    3fb8:	03000000 	movweq	r0, #0
    3fbc:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    3fc0:	000011c7 	andeq	r1, r0, r7, asr #3
    3fc4:	1a024c03 	bne	96fd8 <SYSTICK_CYCLES+0x88579>
    3fc8:	00000478 	andeq	r0, r0, r8, ror r4
    3fcc:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    3fd0:	00175f07 	andseq	r5, r7, r7, lsl #30
    3fd4:	024f0300 	subeq	r0, pc, #0, 6
    3fd8:	00009719 	andeq	r9, r0, r9, lsl r7
    3fdc:	bc230300 	stclt	3, cr0, [r3], #-0
    3fe0:	15320701 	ldrne	r0, [r2, #-1793]!	; 0xfffff8ff
    3fe4:	52030000 	andpl	r0, r3, #0
    3fe8:	00971902 	addseq	r1, r7, r2, lsl #18
    3fec:	23030000 	movwcs	r0, #12288	; 0x3000
    3ff0:	980701c0 	stmdals	r7, {r6, r7, r8}
    3ff4:	03000014 	movweq	r0, #20
    3ff8:	97190255 			; <UNDEFINED> instruction: 0x97190255
    3ffc:	03000000 	movweq	r0, #0
    4000:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    4004:	00001605 	andeq	r1, r0, r5, lsl #12
    4008:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    400c:	00000097 	muleq	r0, r7, r0
    4010:	01c82303 	biceq	r2, r8, r3, lsl #6
    4014:	00140b07 	andseq	r0, r4, r7, lsl #22
    4018:	025d0300 	subseq	r0, sp, #0, 6
    401c:	0000761a 	andeq	r7, r0, sl, lsl r6
    4020:	cc230300 	stcgt	3, cr0, [r3], #-0
    4024:	0ce40701 	stcleq	7, cr0, [r4], #4
    4028:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    402c:	00971902 	addseq	r1, r7, r2, lsl #18
    4030:	23030000 	movwcs	r0, #12288	; 0x3000
    4034:	650701d0 	strvs	r0, [r7, #-464]	; 0xfffffe30
    4038:	0300000e 	movweq	r0, #14
    403c:	9719027d 			; <UNDEFINED> instruction: 0x9719027d
    4040:	03000000 	movweq	r0, #0
    4044:	0001d423 	andeq	sp, r1, r3, lsr #8
    4048:	0153040a 	cmpeq	r3, sl, lsl #8
    404c:	01080000 	mrseq	r0, (UNDEF: 8)
    4050:	0000048f 	andeq	r0, r0, pc, lsl #9
    4054:	00047809 	andeq	r7, r4, r9, lsl #16
    4058:	00970900 	addseq	r0, r7, r0, lsl #18
    405c:	0a000000 	beq	4064 <__HEAP_SIZE+0x3064>
    4060:	00047e04 	andeq	r7, r4, r4, lsl #28
    4064:	11b70600 			; <UNDEFINED> instruction: 0x11b70600
    4068:	03340000 	teqeq	r4, #0
    406c:	7410037e 	ldrvc	r0, [r0], #-894	; 0xfffffc82
    4070:	07000005 	streq	r0, [r0, -r5]
    4074:	00000800 	andeq	r0, r0, r0, lsl #16
    4078:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    407c:	00000097 	muleq	r0, r7, r0
    4080:	07002302 	streq	r2, [r0, -r2, lsl #6]
    4084:	00001284 	andeq	r1, r0, r4, lsl #5
    4088:	1a038503 	bne	e549c <SYSTICK_CYCLES+0xd6a3d>
    408c:	0000014d 	andeq	r0, r0, sp, asr #2
    4090:	07042302 	streq	r2, [r4, -r2, lsl #6]
    4094:	0000107a 	andeq	r1, r0, sl, ror r0
    4098:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    409c:	0000008b 	andeq	r0, r0, fp, lsl #1
    40a0:	07082302 	streq	r2, [r8, -r2, lsl #6]
    40a4:	00000d3a 	andeq	r0, r0, sl, lsr sp
    40a8:	1a038c03 	bne	e70bc <SYSTICK_CYCLES+0xd865d>
    40ac:	00000587 	andeq	r0, r0, r7, lsl #11
    40b0:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    40b4:	000007d5 	ldrdeq	r0, [r0], -r5
    40b8:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    40bc:	0000008b 	andeq	r0, r0, fp, lsl #1
    40c0:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    40c4:	00000741 	andeq	r0, r0, r1, asr #14
    40c8:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    40cc:	0000008b 	andeq	r0, r0, fp, lsl #1
    40d0:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    40d4:	000012c5 	andeq	r1, r0, r5, asr #5
    40d8:	1a039803 	bne	ea0ec <SYSTICK_CYCLES+0xdb68d>
    40dc:	00000478 	andeq	r0, r0, r8, ror r4
    40e0:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    40e4:	0000104b 	andeq	r1, r0, fp, asr #32
    40e8:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    40ec:	0000008b 	andeq	r0, r0, fp, lsl #1
    40f0:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    40f4:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    40f8:	1a039d03 	bne	eb50c <SYSTICK_CYCLES+0xdcaad>
    40fc:	00000574 	andeq	r0, r0, r4, ror r5
    4100:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    4104:	00000fb6 			; <UNDEFINED> instruction: 0x00000fb6
    4108:	1a039e03 	bne	eb91c <SYSTICK_CYCLES+0xdcebd>
    410c:	00000574 	andeq	r0, r0, r4, ror r5
    4110:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    4114:	000008d2 	ldrdeq	r0, [r0], -r2
    4118:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    411c:	0000008b 	andeq	r0, r0, fp, lsl #1
    4120:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    4124:	00001436 	andeq	r1, r0, r6, lsr r4
    4128:	1a03a603 	bne	ed93c <SYSTICK_CYCLES+0xdeedd>
    412c:	00000574 	andeq	r0, r0, r4, ror r5
    4130:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    4134:	00000c53 	andeq	r0, r0, r3, asr ip
    4138:	1a03a703 	bne	edd4c <SYSTICK_CYCLES+0xdf2ed>
    413c:	00000574 	andeq	r0, r0, r4, ror r5
    4140:	00302302 	eorseq	r2, r0, r2, lsl #6
    4144:	0495040a 	ldreq	r0, [r5], #1034	; 0x40a
    4148:	de0b0000 	cdple	0, 0, cr0, cr11, cr0, {0}
    414c:	03000012 	movweq	r0, #18
    4150:	53030286 	movwpl	r0, #12934	; 0x3286
    4154:	0a000001 	beq	4160 <__HEAP_SIZE+0x3160>
    4158:	00057a04 	andeq	r7, r5, r4, lsl #20
    415c:	97040a00 	strls	r0, [r4, -r0, lsl #20]
    4160:	0c000000 	stceq	0, cr0, [r0], {-0}
    4164:	0018d201 	andseq	sp, r8, r1, lsl #4
    4168:	07480100 	strbeq	r0, [r8, -r0, lsl #2]
    416c:	001a2001 	andseq	r2, sl, r1
    4170:	001aac10 	andseq	sl, sl, r0, lsl ip
    4174:	0024f910 	eoreq	pc, r4, r0, lsl r9	; <UNPREDICTABLE>
    4178:	06fd0100 	ldrbteq	r0, [sp], r0, lsl #2
    417c:	240d0000 	strcs	r0, [sp], #-0
    4180:	0100001b 	tsteq	r0, fp, lsl r0
    4184:	05872b48 	streq	r2, [r7, #2888]	; 0xb48
    4188:	50010000 	andpl	r0, r1, r0
    418c:	0018a10e 	andseq	sl, r8, lr, lsl #2
    4190:	014b0100 	mrseq	r0, (UNDEF: 91)
    4194:	0000008b 	andeq	r0, r0, fp, lsl #1
    4198:	00002535 	andeq	r2, r0, r5, lsr r5
    419c:	00002531 	andeq	r2, r0, r1, lsr r5
    41a0:	00086a0e 	andeq	r6, r8, lr, lsl #20
    41a4:	0e4d0100 	dvfeqe	f0, f5, f0
    41a8:	0000058d 	andeq	r0, r0, sp, lsl #11
    41ac:	00002559 	andeq	r2, r0, r9, asr r5
    41b0:	00002553 	andeq	r2, r0, r3, asr r5
    41b4:	0018b00e 	andseq	fp, r8, lr
    41b8:	0e4e0100 	dvfeqe	f0, f6, f0
    41bc:	0000058d 	andeq	r0, r0, sp, lsl #11
    41c0:	00002584 	andeq	r2, r0, r4, lsl #11
    41c4:	00002582 	andeq	r2, r0, r2, lsl #11
    41c8:	0019290e 	andseq	r2, r9, lr, lsl #18
    41cc:	0e4f0100 	dvfeqe	f0, f7, f0
    41d0:	0000058d 	andeq	r0, r0, sp, lsl #11
    41d4:	0000259d 	muleq	r0, sp, r5
    41d8:	00002597 	muleq	r0, r7, r5
    41dc:	0011390e 	andseq	r3, r1, lr, lsl #18
    41e0:	0d500100 	ldfeqe	f0, [r0, #-0]
    41e4:	00000097 	muleq	r0, r7, r0
    41e8:	000025cc 	andeq	r2, r0, ip, asr #11
    41ec:	000025c6 	andeq	r2, r0, r6, asr #11
    41f0:	0006fd0f 	andeq	pc, r6, pc, lsl #26
    41f4:	001a2000 	andseq	r2, sl, r0
    41f8:	1a200710 	bne	805e40 <SYSTEM_CLOCK+0x24d0c0>
    41fc:	1a261000 	bne	988204 <SYSTEM_CLOCK+0x3cf484>
    4200:	54011000 	strpl	r1, [r1], #-0
    4204:	00066b05 	andeq	r6, r6, r5, lsl #22
    4208:	07101000 	ldreq	r1, [r0, -r0]
    420c:	25ff0000 	ldrbcs	r0, [pc, #0]!	; 4214 <__HEAP_SIZE+0x3214>
    4210:	25fd0000 	ldrbcs	r0, [sp, #0]!
    4214:	3b110000 	blcc	44421c <__RAM_SIZE+0x34421c>
    4218:	20000007 	andcs	r0, r0, r7
    421c:	0a10001a 	beq	40428c <__RAM_SIZE+0x30428c>
    4220:	10001a20 	andne	r1, r0, r0, lsr #20
    4224:	10001a24 	andne	r1, r0, r4, lsr #20
    4228:	13025602 	movwne	r5, #9730	; 0x2602
    422c:	00074a10 	andeq	r4, r7, r0, lsl sl
    4230:	00261400 	eoreq	r1, r6, r0, lsl #8
    4234:	00261200 	eoreq	r1, r6, r0, lsl #4
    4238:	12000000 	andne	r0, r0, #0
    423c:	0000071e 	andeq	r0, r0, lr, lsl r7
    4240:	10001a30 	andne	r1, r0, r0, lsr sl
    4244:	00021001 	andeq	r1, r2, r1
    4248:	05b40100 	ldreq	r0, [r4, #256]!	; 0x100
    424c:	0000068e 	andeq	r0, r0, lr, lsl #13
    4250:	00072d13 	andeq	r2, r7, r3, lsl sp
    4254:	00262b00 	eoreq	r2, r6, r0, lsl #22
    4258:	00262700 	eoreq	r2, r6, r0, lsl #14
    425c:	1e0f0000 	cdpne	0, 0, cr0, cr15, cr0, {0}
    4260:	44000007 	strmi	r0, [r0], #-7
    4264:	0110001a 	tsteq	r0, sl, lsl r0
    4268:	10001a44 	andne	r1, r0, r4, asr #20
    426c:	10001a4a 	andne	r1, r0, sl, asr #20
    4270:	b5156d01 	ldrlt	r6, [r5, #-3329]	; 0xfffff2ff
    4274:	13000006 	movwne	r0, #6
    4278:	0000072d 	andeq	r0, r0, sp, lsr #14
    427c:	0000264b 	andeq	r2, r0, fp, asr #12
    4280:	00002649 	andeq	r2, r0, r9, asr #12
    4284:	06fd1400 	ldrbteq	r1, [sp], r0, lsl #8
    4288:	1a720000 	bne	1c84290 <SYSTEM_CLOCK+0x16cb510>
    428c:	72011000 	andvc	r1, r1, #0
    4290:	7810001a 	ldmdavc	r0, {r1, r3, r4}
    4294:	0110001a 	tsteq	r0, sl, lsl r0
    4298:	10101594 	mulsne	r0, r4, r5
    429c:	62000007 	andvs	r0, r0, #7
    42a0:	5e000026 	cdppl	0, 0, cr0, cr0, cr6, {1}
    42a4:	11000026 	tstne	r0, r6, lsr #32
    42a8:	0000073b 	andeq	r0, r0, fp, lsr r7
    42ac:	10001a72 	andne	r1, r0, r2, ror sl
    42b0:	001a7204 	andseq	r7, sl, r4, lsl #4
    42b4:	001a7610 	andseq	r7, sl, r0, lsl r6
    42b8:	02560210 	subseq	r0, r6, #16, 4
    42bc:	074a1013 	smlaldeq	r1, sl, r3, r0
    42c0:	26820000 	strcs	r0, [r2], r0
    42c4:	26800000 	strcs	r0, [r0], r0
    42c8:	00000000 	andeq	r0, r0, r0
    42cc:	18bd1500 	popne	{r8, sl, ip}
    42d0:	52020000 	andpl	r0, r2, #0
    42d4:	8b013702 	blhi	51ee4 <SYSTICK_CYCLES+0x43485>
    42d8:	03000000 	movweq	r0, #0
    42dc:	0000071e 	andeq	r0, r0, lr, lsl r7
    42e0:	00187d16 	andseq	r7, r8, r6, lsl sp
    42e4:	02540200 	subseq	r0, r4, #0, 4
    42e8:	00008b06 	andeq	r8, r0, r6, lsl #22
    42ec:	69170000 	ldmdbvs	r7, {}	; <UNPREDICTABLE>
    42f0:	02000018 	andeq	r0, r0, #24
    42f4:	01370249 	teqeq	r7, r9, asr #4
    42f8:	00073b03 	andeq	r3, r7, r3, lsl #22
    42fc:	187d1800 	ldmdane	sp!, {fp, ip}^
    4300:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    4304:	008b5002 	addeq	r5, fp, r2
    4308:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    430c:	00001889 	andeq	r1, r0, r9, lsl #17
    4310:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    4314:	00008b01 	andeq	r8, r0, r1, lsl #22
    4318:	81160300 	tsthi	r6, r0, lsl #6
    431c:	02000018 	andeq	r0, r0, #24
    4320:	8b060234 	blhi	184bf8 <__RAM_SIZE+0x84bf8>
    4324:	00000000 	andeq	r0, r0, r0
    4328:	0006c900 	andeq	ip, r6, r0, lsl #18
    432c:	d6000200 	strle	r0, [r0], -r0, lsl #4
    4330:	0400000a 	streq	r0, [r0], #-10
    4334:	00000f01 	andeq	r0, r0, r1, lsl #30
    4338:	19370c00 	ldmdbne	r7!, {sl, fp}
    433c:	019d0000 	orrseq	r0, sp, r0
    4340:	02380000 	eorseq	r0, r8, #0
	...
    434c:	1db50000 	ldcne	0, cr0, [r5]
    4350:	04020000 	streq	r0, [r2], #-0
    4354:	00014407 	andeq	r4, r1, r7, lsl #8
    4358:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    435c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    4360:	5d050802 	stcpl	8, cr0, [r5, #-8]
    4364:	02000001 	andeq	r0, r0, #1
    4368:	01510408 	cmpeq	r1, r8, lsl #8
    436c:	01020000 	mrseq	r0, (UNDEF: 2)
    4370:	0000f606 	andeq	pc, r0, r6, lsl #12
    4374:	08010200 	stmdaeq	r1, {r9}
    4378:	000000f4 	strdeq	r0, [r0], -r4
    437c:	7b050202 	blvc	144b8c <__RAM_SIZE+0x44b8c>
    4380:	02000001 	andeq	r0, r0, #1
    4384:	01020702 	tsteq	r2, r2, lsl #14
    4388:	04020000 	streq	r0, [r2], #-0
    438c:	00016205 	andeq	r6, r1, r5, lsl #4
    4390:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4394:	0000013f 	andeq	r0, r0, pc, lsr r1
    4398:	3a070802 	bcc	1c63a8 <__RAM_SIZE+0xc63a8>
    439c:	04000001 	streq	r0, [r0], #-1
    43a0:	08010204 	stmdaeq	r1, {r2, r9}
    43a4:	000000fd 	strdeq	r0, [r0], -sp
    43a8:	0012e905 	andseq	lr, r2, r5, lsl #18
    43ac:	31730200 	cmncc	r3, r0, lsl #4
    43b0:	00000078 	andeq	r0, r0, r8, ror r0
    43b4:	00114c05 	andseq	r4, r1, r5, lsl #24
    43b8:	31760200 	cmncc	r6, r0, lsl #4
    43bc:	00000029 	andeq	r0, r0, r9, lsr #32
    43c0:	0010aa05 	andseq	sl, r0, r5, lsl #20
    43c4:	31780200 	cmncc	r8, r0, lsl #4
    43c8:	00000068 	andeq	r0, r0, r8, rrx
    43cc:	000dcb06 	andeq	ip, sp, r6, lsl #22
    43d0:	82031c00 	andhi	r1, r3, #0, 24
    43d4:	01221001 			; <UNDEFINED> instruction: 0x01221001
    43d8:	44070000 	strmi	r0, [r7], #-0
    43dc:	03000012 	movweq	r0, #18
    43e0:	97190186 	ldrls	r0, [r9, -r6, lsl #3]
    43e4:	02000000 	andeq	r0, r0, #0
    43e8:	ce070023 	cdpgt	0, 0, cr0, cr7, cr3, {1}
    43ec:	0300000b 	movweq	r0, #11
    43f0:	97190187 	ldrls	r0, [r9, -r7, lsl #3]
    43f4:	02000000 	andeq	r0, r0, #0
    43f8:	6b070423 	blvs	1c548c <__RAM_SIZE+0xc548c>
    43fc:	0300000c 	movweq	r0, #12
    4400:	2e1b018a 	mufcs<illegal precision>	f0, f3, #2.0
    4404:	02000001 	andeq	r0, r0, #1
    4408:	f4070823 	vst2.8	{d0-d1}, [r7 :128], r3
    440c:	03000008 	movweq	r0, #8
    4410:	9719018b 	ldrls	r0, [r9, -fp, lsl #3]
    4414:	02000000 	andeq	r0, r0, #0
    4418:	da070c23 	ble	1c74ac <__RAM_SIZE+0xc74ac>
    441c:	03000013 	movweq	r0, #19
    4420:	341a0191 	ldrcc	r0, [sl], #-401	; 0xfffffe6f
    4424:	02000001 	andeq	r0, r0, #1
    4428:	5a071023 	bpl	1c84bc <__RAM_SIZE+0xc84bc>
    442c:	03000006 	movweq	r0, #6
    4430:	341a0192 	ldrcc	r0, [sl], #-402	; 0xfffffe6e
    4434:	02000001 	andeq	r0, r0, #1
    4438:	2f071423 	svccs	0x00071423
    443c:	0300000f 	movweq	r0, #15
    4440:	3a1b0196 	bcc	6c4aa0 <SYSTEM_CLOCK+0x10bd20>
    4444:	02000001 	andeq	r0, r0, #1
    4448:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    444c:	00012e01 	andeq	r2, r1, r1, lsl #28
    4450:	00970900 	addseq	r0, r7, r0, lsl #18
    4454:	0a000000 	beq	445c <__HEAP_SIZE+0x345c>
    4458:	00012204 	andeq	r2, r1, r4, lsl #4
    445c:	a3040a00 	movwge	r0, #18944	; 0x4a00
    4460:	0a000000 	beq	4468 <__HEAP_SIZE+0x3468>
    4464:	00013404 	andeq	r3, r1, r4, lsl #8
    4468:	0f7e0b00 	svceq	0x007e0b00
    446c:	9b030000 	blls	c4474 <SYSTICK_CYCLES+0xb5a15>
    4470:	00a30301 	adceq	r0, r3, r1, lsl #6
    4474:	040a0000 	streq	r0, [sl], #-0
    4478:	0000007f 	andeq	r0, r0, pc, ror r0
    447c:	000b0306 	andeq	r0, fp, r6, lsl #6
    4480:	d603d800 	strle	sp, [r3], -r0, lsl #16
    4484:	04781001 	ldrbteq	r1, [r8], #-1
    4488:	31070000 	mrscc	r0, (UNDEF: 7)
    448c:	03000013 	movweq	r0, #19
    4490:	971901dd 			; <UNDEFINED> instruction: 0x971901dd
    4494:	02000000 	andeq	r0, r0, #0
    4498:	a3070023 	movwge	r0, #28707	; 0x7023
    449c:	03000011 	movweq	r0, #17
    44a0:	971901de 			; <UNDEFINED> instruction: 0x971901de
    44a4:	02000000 	andeq	r0, r0, #0
    44a8:	60070423 	andvs	r0, r7, r3, lsr #8
    44ac:	03000008 	movweq	r0, #8
    44b0:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    44b4:	02000000 	andeq	r0, r0, #0
    44b8:	05070823 	streq	r0, [r7, #-2083]	; 0xfffff7dd
    44bc:	03000013 	movweq	r0, #19
    44c0:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    44c4:	02000000 	andeq	r0, r0, #0
    44c8:	3f070c23 	svccc	0x00070c23
    44cc:	0300000c 	movweq	r0, #12
    44d0:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    44d4:	02000000 	andeq	r0, r0, #0
    44d8:	c5071023 	strgt	r1, [r7, #-35]	; 0xffffffdd
    44dc:	03000013 	movweq	r0, #19
    44e0:	971901e2 	ldrls	r0, [r9, -r2, ror #3]
    44e4:	02000000 	andeq	r0, r0, #0
    44e8:	30071423 	andcc	r1, r7, r3, lsr #8
    44ec:	0300001b 	movweq	r0, #27
    44f0:	971901e3 	ldrls	r0, [r9, -r3, ror #3]
    44f4:	02000000 	andeq	r0, r0, #0
    44f8:	4b071823 	blmi	1ca58c <__RAM_SIZE+0xca58c>
    44fc:	0300000f 	movweq	r0, #15
    4500:	971901e4 	ldrls	r0, [r9, -r4, ror #3]
    4504:	02000000 	andeq	r0, r0, #0
    4508:	ed071c23 	stc	12, cr1, [r7, #-140]	; 0xffffff74
    450c:	0300000f 	movweq	r0, #15
    4510:	781a01e8 	ldmdavc	sl, {r3, r5, r6, r7, r8}
    4514:	02000004 	andeq	r0, r0, #4
    4518:	0c072023 	stceq	0, cr2, [r7], {35}	; 0x23
    451c:	03000008 	movweq	r0, #8
    4520:	781a01e9 	ldmdavc	sl, {r0, r3, r5, r6, r7, r8}
    4524:	02000004 	andeq	r0, r0, #4
    4528:	a4072423 	strge	r2, [r7], #-1059	; 0xfffffbdd
    452c:	0300000e 	movweq	r0, #14
    4530:	4d1a01f1 	ldfmis	f0, [sl, #-964]	; 0xfffffc3c
    4534:	02000001 	andeq	r0, r0, #1
    4538:	04072823 	streq	r2, [r7], #-2083	; 0xfffff7dd
    453c:	0300000a 	movweq	r0, #10
    4540:	8b1901f2 	blhi	644d10 <SYSTEM_CLOCK+0x8bf90>
    4544:	02000000 	andeq	r0, r0, #0
    4548:	54072c23 	strpl	r2, [r7], #-3107	; 0xfffff3dd
    454c:	03000009 	movweq	r0, #9
    4550:	8b1901f3 	blhi	644d24 <SYSTEM_CLOCK+0x8bfa4>
    4554:	02000000 	andeq	r0, r0, #0
    4558:	e6073023 	str	r3, [r7], -r3, lsr #32
    455c:	03000007 	movweq	r0, #7
    4560:	8b1901f4 	blhi	644d38 <SYSTEM_CLOCK+0x8bfb8>
    4564:	02000000 	andeq	r0, r0, #0
    4568:	e3073423 	movw	r3, #29731	; 0x7423
    456c:	03000010 	movweq	r0, #16
    4570:	8b1901f5 	blhi	644d4c <SYSTEM_CLOCK+0x8bfcc>
    4574:	02000000 	andeq	r0, r0, #0
    4578:	f7073823 			; <UNDEFINED> instruction: 0xf7073823
    457c:	03000006 	movweq	r0, #6
    4580:	8b1901f6 	blhi	644d60 <SYSTEM_CLOCK+0x8bfe0>
    4584:	02000000 	andeq	r0, r0, #0
    4588:	14073c23 	strne	r3, [r7], #-3107	; 0xfffff3dd
    458c:	0300000b 	movweq	r0, #11
    4590:	8f1b01fb 	svchi	0x001b01fb
    4594:	02000004 	andeq	r0, r0, #4
    4598:	c5074023 	strgt	r4, [r7, #-35]	; 0xffffffdd
    459c:	03000007 	movweq	r0, #7
    45a0:	2e1b0203 	cdpcs	2, 1, cr0, cr11, cr3, {0}
    45a4:	02000001 	andeq	r0, r0, #1
    45a8:	13074423 	movwne	r4, #29731	; 0x7423
    45ac:	03000007 	movweq	r0, #7
    45b0:	97190204 	ldrls	r0, [r9, -r4, lsl #4]
    45b4:	02000000 	andeq	r0, r0, #0
    45b8:	ea074823 	b	1d664c <__RAM_SIZE+0xd664c>
    45bc:	0300000a 	movweq	r0, #10
    45c0:	40190208 	andsmi	r0, r9, r8, lsl #4
    45c4:	02000001 	andeq	r0, r0, #1
    45c8:	17074c23 	strne	r4, [r7, -r3, lsr #24]
    45cc:	0300000a 	movweq	r0, #10
    45d0:	8f1b020e 	svchi	0x001b020e
    45d4:	02000004 	andeq	r0, r0, #4
    45d8:	c9076823 	stmdbgt	r7, {r0, r1, r5, fp, sp, lr}
    45dc:	0300000e 	movweq	r0, #14
    45e0:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    45e4:	02000000 	andeq	r0, r0, #0
    45e8:	b0076c23 	andlt	r6, r7, r3, lsr #24
    45ec:	03000010 	movweq	r0, #16
    45f0:	781a0211 	ldmdavc	sl, {r0, r4, r9}
    45f4:	02000004 	andeq	r0, r0, #4
    45f8:	37077023 	strcc	r7, [r7, -r3, lsr #32]
    45fc:	03000009 	movweq	r0, #9
    4600:	781a0212 	ldmdavc	sl, {r1, r4, r9}
    4604:	02000004 	andeq	r0, r0, #4
    4608:	93077423 	movwls	r7, #29731	; 0x7423
    460c:	03000010 	movweq	r0, #16
    4610:	97190213 			; <UNDEFINED> instruction: 0x97190213
    4614:	02000000 	andeq	r0, r0, #0
    4618:	f4077823 	vst2.8	{d7-d8}, [r7 :128], r3
    461c:	0300000b 	movweq	r0, #11
    4620:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    4624:	02000000 	andeq	r0, r0, #0
    4628:	2a077c23 	bcs	1e36bc <__RAM_SIZE+0xe36bc>
    462c:	0300000e 	movweq	r0, #14
    4630:	8b190215 	blhi	644e8c <SYSTEM_CLOCK+0x8c10c>
    4634:	03000000 	movweq	r0, #0
    4638:	07018023 	streq	r8, [r1, -r3, lsr #32]
    463c:	00000c16 	andeq	r0, r0, r6, lsl ip
    4640:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    4644:	0000008b 	andeq	r0, r0, fp, lsl #1
    4648:	01842303 	orreq	r2, r4, r3, lsl #6
    464c:	0012ee07 	andseq	lr, r2, r7, lsl #28
    4650:	021f0300 	andseq	r0, pc, #0, 6
    4654:	0004781a 	andeq	r7, r4, sl, lsl r8
    4658:	88230300 	stmdahi	r3!, {r8, r9}
    465c:	11f40701 	mvnsne	r0, r1, lsl #14
    4660:	20030000 	andcs	r0, r3, r0
    4664:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    4668:	23030000 	movwcs	r0, #12288	; 0x3000
    466c:	cf07018c 	svcgt	0x0007018c
    4670:	03000009 	movweq	r0, #9
    4674:	8b19022e 	blhi	644f34 <SYSTEM_CLOCK+0x8c1b4>
    4678:	03000000 	movweq	r0, #0
    467c:	07019023 	streq	r9, [r1, -r3, lsr #32]
    4680:	00000964 	andeq	r0, r0, r4, ror #18
    4684:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    4688:	0000008b 	andeq	r0, r0, fp, lsl #1
    468c:	01942303 	orrseq	r2, r4, r3, lsl #6
    4690:	000abc07 	andeq	fp, sl, r7, lsl #24
    4694:	02300300 	eorseq	r0, r0, #0, 6
    4698:	00008b19 	andeq	r8, r0, r9, lsl fp
    469c:	98230300 	stmdals	r3!, {r8, r9}
    46a0:	09850701 	stmibeq	r5, {r0, r8, r9, sl}
    46a4:	33030000 	movwcc	r0, #12288	; 0x3000
    46a8:	008b1902 	addeq	r1, fp, r2, lsl #18
    46ac:	23030000 	movwcs	r0, #12288	; 0x3000
    46b0:	3f07019c 	svccc	0x0007019c
    46b4:	03000006 	movweq	r0, #6
    46b8:	741a0235 	ldrvc	r0, [sl], #-565	; 0xfffffdcb
    46bc:	03000005 	movweq	r0, #5
    46c0:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    46c4:	000015e1 	andeq	r1, r0, r1, ror #11
    46c8:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    46cc:	00000097 	muleq	r0, r7, r0
    46d0:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    46d4:	0016d007 	andseq	sp, r6, r7
    46d8:	023d0300 	eorseq	r0, sp, #0, 6
    46dc:	00009719 	andeq	r9, r0, r9, lsl r7
    46e0:	a8230300 	stmdage	r3!, {r8, r9}
    46e4:	155a0701 	ldrbne	r0, [sl, #-1793]	; 0xfffff8ff
    46e8:	41030000 	mrsmi	r0, (UNDEF: 3)
    46ec:	00971902 	addseq	r1, r7, r2, lsl #18
    46f0:	23030000 	movwcs	r0, #12288	; 0x3000
    46f4:	870701ac 	strhi	r0, [r7, -ip, lsr #3]
    46f8:	03000017 	movweq	r0, #23
    46fc:	97190245 	ldrls	r0, [r9, -r5, asr #4]
    4700:	03000000 	movweq	r0, #0
    4704:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    4708:	00001689 	andeq	r1, r0, r9, lsl #13
    470c:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    4710:	00000097 	muleq	r0, r7, r0
    4714:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    4718:	0011c707 	andseq	ip, r1, r7, lsl #14
    471c:	024c0300 	subeq	r0, ip, #0, 6
    4720:	0004781a 	andeq	r7, r4, sl, lsl r8
    4724:	b8230300 	stmdalt	r3!, {r8, r9}
    4728:	175f0701 	ldrbne	r0, [pc, -r1, lsl #14]
    472c:	4f030000 	svcmi	0x00030000
    4730:	00971902 	addseq	r1, r7, r2, lsl #18
    4734:	23030000 	movwcs	r0, #12288	; 0x3000
    4738:	320701bc 	andcc	r0, r7, #188, 2	; 0x2f
    473c:	03000015 	movweq	r0, #21
    4740:	97190252 			; <UNDEFINED> instruction: 0x97190252
    4744:	03000000 	movweq	r0, #0
    4748:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    474c:	00001498 	muleq	r0, r8, r4
    4750:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    4754:	00000097 	muleq	r0, r7, r0
    4758:	01c42303 	biceq	r2, r4, r3, lsl #6
    475c:	00160507 	andseq	r0, r6, r7, lsl #10
    4760:	02590300 	subseq	r0, r9, #0, 6
    4764:	00009719 	andeq	r9, r0, r9, lsl r7
    4768:	c8230300 	stmdagt	r3!, {r8, r9}
    476c:	140b0701 	strne	r0, [fp], #-1793	; 0xfffff8ff
    4770:	5d030000 	stcpl	0, cr0, [r3, #-0]
    4774:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    4778:	23030000 	movwcs	r0, #12288	; 0x3000
    477c:	e40701cc 	str	r0, [r7], #-460	; 0xfffffe34
    4780:	0300000c 	movweq	r0, #12
    4784:	97190278 			; <UNDEFINED> instruction: 0x97190278
    4788:	03000000 	movweq	r0, #0
    478c:	0701d023 	streq	sp, [r1, -r3, lsr #32]
    4790:	00000e65 	andeq	r0, r0, r5, ror #28
    4794:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    4798:	00000097 	muleq	r0, r7, r0
    479c:	01d42303 	bicseq	r2, r4, r3, lsl #6
    47a0:	53040a00 	movwpl	r0, #18944	; 0x4a00
    47a4:	08000001 	stmdaeq	r0, {r0}
    47a8:	00048f01 	andeq	r8, r4, r1, lsl #30
    47ac:	04780900 	ldrbteq	r0, [r8], #-2304	; 0xfffff700
    47b0:	97090000 	strls	r0, [r9, -r0]
    47b4:	00000000 	andeq	r0, r0, r0
    47b8:	047e040a 	ldrbteq	r0, [lr], #-1034	; 0xfffffbf6
    47bc:	b7060000 	strlt	r0, [r6, -r0]
    47c0:	34000011 	strcc	r0, [r0], #-17	; 0xffffffef
    47c4:	10037e03 	andne	r7, r3, r3, lsl #28
    47c8:	00000574 	andeq	r0, r0, r4, ror r5
    47cc:	00080007 	andeq	r0, r8, r7
    47d0:	03820300 	orreq	r0, r2, #0, 6
    47d4:	00009719 	andeq	r9, r0, r9, lsl r7
    47d8:	00230200 	eoreq	r0, r3, r0, lsl #4
    47dc:	00128407 	andseq	r8, r2, r7, lsl #8
    47e0:	03850300 	orreq	r0, r5, #0, 6
    47e4:	00014d1a 	andeq	r4, r1, sl, lsl sp
    47e8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    47ec:	00107a07 	andseq	r7, r0, r7, lsl #20
    47f0:	03880300 	orreq	r0, r8, #0, 6
    47f4:	00008b19 	andeq	r8, r0, r9, lsl fp
    47f8:	08230200 	stmdaeq	r3!, {r9}
    47fc:	000d3a07 	andeq	r3, sp, r7, lsl #20
    4800:	038c0300 	orreq	r0, ip, #0, 6
    4804:	0005871a 	andeq	r8, r5, sl, lsl r7
    4808:	0c230200 	sfmeq	f0, 4, [r3], #-0
    480c:	0007d507 	andeq	sp, r7, r7, lsl #10
    4810:	03900300 	orrseq	r0, r0, #0, 6
    4814:	00008b19 	andeq	r8, r0, r9, lsl fp
    4818:	10230200 	eorne	r0, r3, r0, lsl #4
    481c:	00074107 	andeq	r4, r7, r7, lsl #2
    4820:	03930300 	orrseq	r0, r3, #0, 6
    4824:	00008b19 	andeq	r8, r0, r9, lsl fp
    4828:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    482c:	0012c507 	andseq	ip, r2, r7, lsl #10
    4830:	03980300 	orrseq	r0, r8, #0, 6
    4834:	0004781a 	andeq	r7, r4, sl, lsl r8
    4838:	18230200 	stmdane	r3!, {r9}
    483c:	00104b07 	andseq	r4, r0, r7, lsl #22
    4840:	03990300 	orrseq	r0, r9, #0, 6
    4844:	00008b19 	andeq	r8, r0, r9, lsl fp
    4848:	1c230200 	sfmne	f0, 4, [r3], #-0
    484c:	000eb307 	andeq	fp, lr, r7, lsl #6
    4850:	039d0300 	orrseq	r0, sp, #0, 6
    4854:	0005741a 	andeq	r7, r5, sl, lsl r4
    4858:	20230200 	eorcs	r0, r3, r0, lsl #4
    485c:	000fb607 	andeq	fp, pc, r7, lsl #12
    4860:	039e0300 	orrseq	r0, lr, #0, 6
    4864:	0005741a 	andeq	r7, r5, sl, lsl r4
    4868:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    486c:	0008d207 	andeq	sp, r8, r7, lsl #4
    4870:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    4874:	00008b19 	andeq	r8, r0, r9, lsl fp
    4878:	28230200 	stmdacs	r3!, {r9}
    487c:	00143607 	andseq	r3, r4, r7, lsl #12
    4880:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    4884:	0005741a 	andeq	r7, r5, sl, lsl r4
    4888:	2c230200 	sfmcs	f0, 4, [r3], #-0
    488c:	000c5307 	andeq	r5, ip, r7, lsl #6
    4890:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    4894:	0005741a 	andeq	r7, r5, sl, lsl r4
    4898:	30230200 	eorcc	r0, r3, r0, lsl #4
    489c:	95040a00 	strls	r0, [r4, #-2560]	; 0xfffff600
    48a0:	0b000004 	bleq	48b8 <__HEAP_SIZE+0x38b8>
    48a4:	000012de 	ldrdeq	r1, [r0], -lr
    48a8:	03028603 	movweq	r8, #9731	; 0x2603
    48ac:	00000153 	andeq	r0, r0, r3, asr r1
    48b0:	057a040a 	ldrbeq	r0, [sl, #-1034]!	; 0xfffffbf6
    48b4:	01080000 	mrseq	r0, (UNDEF: 8)
    48b8:	00000599 	muleq	r0, r9, r5
    48bc:	00058709 	andeq	r8, r5, r9, lsl #14
    48c0:	040a0000 	streq	r0, [sl], #-0
    48c4:	0000058d 	andeq	r0, r0, sp, lsl #11
    48c8:	00158b0c 	andseq	r8, r5, ip, lsl #22
    48cc:	01c10400 	biceq	r0, r1, r0, lsl #8
    48d0:	00059923 	andeq	r9, r5, r3, lsr #18
    48d4:	0d010100 	stfeqs	f0, [r1, #-0]
    48d8:	00197b01 	andseq	r7, r9, r1, lsl #22
    48dc:	07540100 	ldrbeq	r0, [r4, -r0, lsl #2]
    48e0:	001aac01 	andseq	sl, sl, r1, lsl #24
    48e4:	001ac810 	andseq	ip, sl, r0, lsl r8
    48e8:	00269510 	eoreq	r9, r6, r0, lsl r5
    48ec:	06710100 	ldrbteq	r0, [r1], -r0, lsl #2
    48f0:	240e0000 	strcs	r0, [lr], #-0
    48f4:	0100001b 	tsteq	r0, fp, lsl r0
    48f8:	05873154 	streq	r3, [r7, #340]	; 0x154
    48fc:	26b90000 	ldrtcs	r0, [r9], r0
    4900:	26b50000 	ldrtcs	r0, [r5], r0
    4904:	a10f0000 	mrsge	r0, CPSR
    4908:	01000018 	tsteq	r0, r8, lsl r0
    490c:	008b0157 	addeq	r0, fp, r7, asr r1
    4910:	26dc0000 	ldrbcs	r0, [ip], r0
    4914:	26da0000 	ldrbcs	r0, [sl], r0
    4918:	71100000 	tstvc	r0, r0
    491c:	ae000006 	cdpge	0, 0, cr0, cr0, cr6, {0}
    4920:	0210001a 	andseq	r0, r0, #26
    4924:	10001aae 	andne	r1, r0, lr, lsr #21
    4928:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
    492c:	3c055c01 	stccc	12, cr5, [r5], {1}
    4930:	11000006 	tstne	r0, r6
    4934:	00000684 	andeq	r0, r0, r4, lsl #13
    4938:	000026f1 	strdeq	r2, [r0], -r1
    493c:	000026ef 	andeq	r2, r0, pc, ror #13
    4940:	0006af12 	andeq	sl, r6, r2, lsl pc
    4944:	001aae00 	andseq	sl, sl, r0, lsl #28
    4948:	1aae0510 	bne	feb85d90 <__RAM_segment_used_end__+0xc6a85d90>
    494c:	1ab21000 	bne	fec88954 <__RAM_segment_used_end__+0xc6b88954>
    4950:	56021000 	strpl	r1, [r2], -r0
    4954:	be111302 	cdplt	3, 1, cr1, cr1, cr2, {0}
    4958:	06000006 	streq	r0, [r0], -r6
    495c:	04000027 	streq	r0, [r0], #-39	; 0xffffffd9
    4960:	00000027 	andeq	r0, r0, r7, lsr #32
    4964:	06921000 	ldreq	r1, [r2], r0
    4968:	1abc0000 	bne	fef04970 <__RAM_segment_used_end__+0xc6e04970>
    496c:	bc011000 	stclt	0, cr1, [r1], {-0}
    4970:	c010001a 	andsgt	r0, r0, sl, lsl r0
    4974:	0110001a 	tsteq	r0, sl, lsl r0
    4978:	06630567 	strbteq	r0, [r3], -r7, ror #10
    497c:	a1130000 	tstge	r3, r0
    4980:	1b000006 	blne	49a0 <__HEAP_SIZE+0x39a0>
    4984:	19000027 	stmdbne	r0, {r0, r1, r2, r5}
    4988:	00000027 	andeq	r0, r0, r7, lsr #32
    498c:	001abc14 	andseq	fp, sl, r4, lsl ip
    4990:	50011510 	andpl	r1, r1, r0, lsl r5
    4994:	5001f303 	andpl	pc, r1, r3, lsl #6
    4998:	bd160000 	ldclt	0, cr0, [r6, #-0]
    499c:	02000018 	andeq	r0, r0, #24
    49a0:	01370252 	teqeq	r7, r2, asr r2
    49a4:	0000008b 	andeq	r0, r0, fp, lsl #1
    49a8:	00069203 	andeq	r9, r6, r3, lsl #4
    49ac:	187d1700 	ldmdane	sp!, {r8, r9, sl, ip}^
    49b0:	54020000 	strpl	r0, [r2], #-0
    49b4:	008b0602 	addeq	r0, fp, r2, lsl #12
    49b8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    49bc:	00001869 	andeq	r1, r0, r9, ror #16
    49c0:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    49c4:	06af0301 	strteq	r0, [pc], r1, lsl #6
    49c8:	7d190000 	ldcvc	0, cr0, [r9, #-0]
    49cc:	02000018 	andeq	r0, r0, #24
    49d0:	8b500249 	blhi	14052fc <SYSTEM_CLOCK+0xe4c57c>
    49d4:	00000000 	andeq	r0, r0, r0
    49d8:	0018891a 	andseq	r8, r8, sl, lsl r9
    49dc:	02320200 	eorseq	r0, r2, #0, 4
    49e0:	008b0137 	addeq	r0, fp, r7, lsr r1
    49e4:	17030000 	strne	r0, [r3, -r0]
    49e8:	00001881 	andeq	r1, r0, r1, lsl #17
    49ec:	06023402 	streq	r3, [r2], -r2, lsl #8
    49f0:	0000008b 	andeq	r0, r0, fp, lsl #1
    49f4:	0fcf0000 	svceq	0x00cf0000
    49f8:	00020000 	andeq	r0, r2, r0
    49fc:	00000c6d 	andeq	r0, r0, sp, ror #24
    4a00:	000f0104 	andeq	r0, pc, r4, lsl #2
    4a04:	670c0000 	strvs	r0, [ip, -r0]
    4a08:	9d00001a 	stcls	0, cr0, [r0, #-104]	; 0xffffff98
    4a0c:	90000001 	andls	r0, r0, r1
    4a10:	00000002 	andeq	r0, r0, r2
    4a14:	00000000 	andeq	r0, r0, r0
    4a18:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    4a1c:	0200001e 	andeq	r0, r0, #30
    4a20:	01440704 	cmpeq	r4, r4, lsl #14
    4a24:	04030000 	streq	r0, [r3], #-0
    4a28:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4a2c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    4a30:	0000015d 	andeq	r0, r0, sp, asr r1
    4a34:	51040802 	tstpl	r4, r2, lsl #16
    4a38:	02000001 	andeq	r0, r0, #1
    4a3c:	00f60601 	rscseq	r0, r6, r1, lsl #12
    4a40:	01020000 	mrseq	r0, (UNDEF: 2)
    4a44:	0000f408 	andeq	pc, r0, r8, lsl #8
    4a48:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    4a4c:	0000017b 	andeq	r0, r0, fp, ror r1
    4a50:	02070202 	andeq	r0, r7, #536870912	; 0x20000000
    4a54:	02000001 	andeq	r0, r0, #1
    4a58:	01620504 	cmneq	r2, r4, lsl #10
    4a5c:	04020000 	streq	r0, [r2], #-0
    4a60:	00013f07 	andeq	r3, r1, r7, lsl #30
    4a64:	07080200 	streq	r0, [r8, -r0, lsl #4]
    4a68:	0000013a 	andeq	r0, r0, sl, lsr r1
    4a6c:	01020404 	tsteq	r2, r4, lsl #8
    4a70:	0000fd08 	andeq	pc, r0, r8, lsl #26
    4a74:	12e90500 	rscne	r0, r9, #0, 10
    4a78:	73020000 	movwvc	r0, #8192	; 0x2000
    4a7c:	00007831 	andeq	r7, r0, r1, lsr r8
    4a80:	12e80500 	rscne	r0, r8, #0, 10
    4a84:	74020000 	strvc	r0, [r2], #-0
    4a88:	00004c31 	andeq	r4, r0, r1, lsr ip
    4a8c:	114c0500 	cmpne	ip, r0, lsl #10
    4a90:	76020000 	strvc	r0, [r2], -r0
    4a94:	00002931 	andeq	r2, r0, r1, lsr r9
    4a98:	00970600 	addseq	r0, r7, r0, lsl #12
    4a9c:	aa050000 	bge	144aa4 <__RAM_SIZE+0x44aa4>
    4aa0:	02000010 	andeq	r0, r0, #16
    4aa4:	00683178 	rsbeq	r3, r8, r8, ror r1
    4aa8:	a8060000 	stmdage	r6, {}	; <UNPREDICTABLE>
    4aac:	07000000 	streq	r0, [r0, -r0]
    4ab0:	00000dcb 	andeq	r0, r0, fp, asr #27
    4ab4:	0182031c 	orreq	r0, r2, ip, lsl r3
    4ab8:	00013810 	andeq	r3, r1, r0, lsl r8
    4abc:	12440800 	subne	r0, r4, #0, 16
    4ac0:	86030000 	strhi	r0, [r3], -r0
    4ac4:	00a81901 	adceq	r1, r8, r1, lsl #18
    4ac8:	23020000 	movwcs	r0, #8192	; 0x2000
    4acc:	0bce0800 	bleq	ff386ad4 <__RAM_segment_used_end__+0xc7286ad4>
    4ad0:	87030000 	strhi	r0, [r3, -r0]
    4ad4:	00a81901 	adceq	r1, r8, r1, lsl #18
    4ad8:	23020000 	movwcs	r0, #8192	; 0x2000
    4adc:	0c6b0804 	stcleq	8, cr0, [fp], #-16
    4ae0:	8a030000 	bhi	c4ae8 <SYSTICK_CYCLES+0xb6089>
    4ae4:	01441b01 	cmpeq	r4, r1, lsl #22
    4ae8:	23020000 	movwcs	r0, #8192	; 0x2000
    4aec:	08f40808 	ldmeq	r4!, {r3, fp}^
    4af0:	8b030000 	blhi	c4af8 <SYSTICK_CYCLES+0xb6099>
    4af4:	00a81901 	adceq	r1, r8, r1, lsl #18
    4af8:	23020000 	movwcs	r0, #8192	; 0x2000
    4afc:	13da080c 	bicsne	r0, sl, #12, 16	; 0xc0000
    4b00:	91030000 	mrsls	r0, (UNDEF: 3)
    4b04:	014a1a01 	cmpeq	sl, r1, lsl #20
    4b08:	23020000 	movwcs	r0, #8192	; 0x2000
    4b0c:	065a0810 			; <UNDEFINED> instruction: 0x065a0810
    4b10:	92030000 	andls	r0, r3, #0
    4b14:	014a1a01 	cmpeq	sl, r1, lsl #20
    4b18:	23020000 	movwcs	r0, #8192	; 0x2000
    4b1c:	0f2f0814 	svceq	0x002f0814
    4b20:	96030000 	strls	r0, [r3], -r0
    4b24:	01501b01 	cmpeq	r0, r1, lsl #22
    4b28:	23020000 	movwcs	r0, #8192	; 0x2000
    4b2c:	01090018 	tsteq	r9, r8, lsl r0
    4b30:	00000144 	andeq	r0, r0, r4, asr #2
    4b34:	0000a80a 	andeq	sl, r0, sl, lsl #16
    4b38:	040b0000 	streq	r0, [fp], #-0
    4b3c:	00000138 	andeq	r0, r0, r8, lsr r1
    4b40:	00b9040b 	adcseq	r0, r9, fp, lsl #8
    4b44:	040b0000 	streq	r0, [fp], #-0
    4b48:	0000014a 	andeq	r0, r0, sl, asr #2
    4b4c:	000f7e0c 	andeq	r7, pc, ip, lsl #28
    4b50:	019b0300 	orrseq	r0, fp, r0, lsl #6
    4b54:	0000b903 	andeq	fp, r0, r3, lsl #18
    4b58:	7f040b00 	svcvc	0x00040b00
    4b5c:	07000000 	streq	r0, [r0, -r0]
    4b60:	00000b03 	andeq	r0, r0, r3, lsl #22
    4b64:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    4b68:	00048e10 	andeq	r8, r4, r0, lsl lr
    4b6c:	13310800 	teqne	r1, #0, 16
    4b70:	dd030000 	stcle	0, cr0, [r3, #-0]
    4b74:	00a81901 	adceq	r1, r8, r1, lsl #18
    4b78:	23020000 	movwcs	r0, #8192	; 0x2000
    4b7c:	11a30800 			; <UNDEFINED> instruction: 0x11a30800
    4b80:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    4b84:	00a81901 	adceq	r1, r8, r1, lsl #18
    4b88:	23020000 	movwcs	r0, #8192	; 0x2000
    4b8c:	08600804 	stmdaeq	r0!, {r2, fp}^
    4b90:	df030000 	svcle	0x00030000
    4b94:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    4b98:	23020000 	movwcs	r0, #8192	; 0x2000
    4b9c:	13050808 	movwne	r0, #22536	; 0x5808
    4ba0:	e0030000 	and	r0, r3, r0
    4ba4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    4ba8:	23020000 	movwcs	r0, #8192	; 0x2000
    4bac:	0c3f080c 	ldceq	8, cr0, [pc], #-48	; 4b84 <__HEAP_SIZE+0x3b84>
    4bb0:	e1030000 	mrs	r0, (UNDEF: 3)
    4bb4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    4bb8:	23020000 	movwcs	r0, #8192	; 0x2000
    4bbc:	13c50810 	bicne	r0, r5, #16, 16	; 0x100000
    4bc0:	e2030000 	and	r0, r3, #0
    4bc4:	00a81901 	adceq	r1, r8, r1, lsl #18
    4bc8:	23020000 	movwcs	r0, #8192	; 0x2000
    4bcc:	1b300814 	blne	c06c24 <SYSTEM_CLOCK+0x64dea4>
    4bd0:	e3030000 	movw	r0, #12288	; 0x3000
    4bd4:	00a81901 	adceq	r1, r8, r1, lsl #18
    4bd8:	23020000 	movwcs	r0, #8192	; 0x2000
    4bdc:	0f4b0818 	svceq	0x004b0818
    4be0:	e4030000 	str	r0, [r3], #-0
    4be4:	00a81901 	adceq	r1, r8, r1, lsl #18
    4be8:	23020000 	movwcs	r0, #8192	; 0x2000
    4bec:	0fed081c 	svceq	0x00ed081c
    4bf0:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    4bf4:	048e1a01 	streq	r1, [lr], #2561	; 0xa01
    4bf8:	23020000 	movwcs	r0, #8192	; 0x2000
    4bfc:	080c0820 	stmdaeq	ip, {r5, fp}
    4c00:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    4c04:	048e1a01 	streq	r1, [lr], #2561	; 0xa01
    4c08:	23020000 	movwcs	r0, #8192	; 0x2000
    4c0c:	0ea40824 	cdpeq	8, 10, cr0, cr4, cr4, {1}
    4c10:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    4c14:	01631a01 	cmneq	r3, r1, lsl #20
    4c18:	23020000 	movwcs	r0, #8192	; 0x2000
    4c1c:	0a040828 	beq	106cc4 <__RAM_SIZE+0x6cc4>
    4c20:	f2030000 	vhadd.s8	d0, d3, d0
    4c24:	00971901 	addseq	r1, r7, r1, lsl #18
    4c28:	23020000 	movwcs	r0, #8192	; 0x2000
    4c2c:	0954082c 	ldmdbeq	r4, {r2, r3, r5, fp}^
    4c30:	f3030000 	vhadd.u8	d0, d3, d0
    4c34:	00971901 	addseq	r1, r7, r1, lsl #18
    4c38:	23020000 	movwcs	r0, #8192	; 0x2000
    4c3c:	07e60830 			; <UNDEFINED> instruction: 0x07e60830
    4c40:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    4c44:	00971901 	addseq	r1, r7, r1, lsl #18
    4c48:	23020000 	movwcs	r0, #8192	; 0x2000
    4c4c:	10e30834 	rscne	r0, r3, r4, lsr r8
    4c50:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    4c54:	00971901 	addseq	r1, r7, r1, lsl #18
    4c58:	23020000 	movwcs	r0, #8192	; 0x2000
    4c5c:	06f70838 			; <UNDEFINED> instruction: 0x06f70838
    4c60:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    4c64:	00971901 	addseq	r1, r7, r1, lsl #18
    4c68:	23020000 	movwcs	r0, #8192	; 0x2000
    4c6c:	0b14083c 	bleq	506d64 <__RAM_SIZE+0x406d64>
    4c70:	fb030000 	blx	c4c7a <SYSTICK_CYCLES+0xb621b>
    4c74:	04a51b01 	strteq	r1, [r5], #2817	; 0xb01
    4c78:	23020000 	movwcs	r0, #8192	; 0x2000
    4c7c:	07c50840 	strbeq	r0, [r5, r0, asr #16]
    4c80:	03030000 	movweq	r0, #12288	; 0x3000
    4c84:	01441b02 	cmpeq	r4, r2, lsl #22
    4c88:	23020000 	movwcs	r0, #8192	; 0x2000
    4c8c:	07130844 	ldreq	r0, [r3, -r4, asr #16]
    4c90:	04030000 	streq	r0, [r3], #-0
    4c94:	00a81902 	adceq	r1, r8, r2, lsl #18
    4c98:	23020000 	movwcs	r0, #8192	; 0x2000
    4c9c:	0aea0848 	beq	ffa86dc4 <__RAM_segment_used_end__+0xc7986dc4>
    4ca0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    4ca4:	01561902 	cmpeq	r6, r2, lsl #18
    4ca8:	23020000 	movwcs	r0, #8192	; 0x2000
    4cac:	0a17084c 	beq	5c6de4 <SYSTEM_CLOCK+0xe064>
    4cb0:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    4cb4:	04a51b02 	strteq	r1, [r5], #2818	; 0xb02
    4cb8:	23020000 	movwcs	r0, #8192	; 0x2000
    4cbc:	0ec90868 	cdpeq	8, 12, cr0, cr9, cr8, {3}
    4cc0:	0f030000 	svceq	0x00030000
    4cc4:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    4cc8:	23020000 	movwcs	r0, #8192	; 0x2000
    4ccc:	10b0086c 	adcsne	r0, r0, ip, ror #16
    4cd0:	11030000 	mrsne	r0, (UNDEF: 3)
    4cd4:	048e1a02 	streq	r1, [lr], #2562	; 0xa02
    4cd8:	23020000 	movwcs	r0, #8192	; 0x2000
    4cdc:	09370870 	ldmdbeq	r7!, {r4, r5, r6, fp}
    4ce0:	12030000 	andne	r0, r3, #0
    4ce4:	048e1a02 	streq	r1, [lr], #2562	; 0xa02
    4ce8:	23020000 	movwcs	r0, #8192	; 0x2000
    4cec:	10930874 	addsne	r0, r3, r4, ror r8
    4cf0:	13030000 	movwne	r0, #12288	; 0x3000
    4cf4:	00a81902 	adceq	r1, r8, r2, lsl #18
    4cf8:	23020000 	movwcs	r0, #8192	; 0x2000
    4cfc:	0bf40878 	bleq	ffd06ee4 <__RAM_segment_used_end__+0xc7c06ee4>
    4d00:	14030000 	strne	r0, [r3], #-0
    4d04:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    4d08:	23020000 	movwcs	r0, #8192	; 0x2000
    4d0c:	0e2a087c 	mcreq	8, 1, r0, cr10, cr12, {3}
    4d10:	15030000 	strne	r0, [r3, #-0]
    4d14:	00971902 	addseq	r1, r7, r2, lsl #18
    4d18:	23030000 	movwcs	r0, #12288	; 0x3000
    4d1c:	16080180 	strne	r0, [r8], -r0, lsl #3
    4d20:	0300000c 	movweq	r0, #12
    4d24:	97190216 			; <UNDEFINED> instruction: 0x97190216
    4d28:	03000000 	movweq	r0, #0
    4d2c:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    4d30:	000012ee 	andeq	r1, r0, lr, ror #5
    4d34:	1a021f03 	bne	8c948 <SYSTICK_CYCLES+0x7dee9>
    4d38:	0000048e 	andeq	r0, r0, lr, lsl #9
    4d3c:	01882303 	orreq	r2, r8, r3, lsl #6
    4d40:	0011f408 	andseq	pc, r1, r8, lsl #8
    4d44:	02200300 	eoreq	r0, r0, #0, 6
    4d48:	00048e1a 	andeq	r8, r4, sl, lsl lr
    4d4c:	8c230300 	stchi	3, cr0, [r3], #-0
    4d50:	09cf0801 	stmibeq	pc, {r0, fp}^	; <UNPREDICTABLE>
    4d54:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    4d58:	00971902 	addseq	r1, r7, r2, lsl #18
    4d5c:	23030000 	movwcs	r0, #12288	; 0x3000
    4d60:	64080190 	strvs	r0, [r8], #-400	; 0xfffffe70
    4d64:	03000009 	movweq	r0, #9
    4d68:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    4d6c:	03000000 	movweq	r0, #0
    4d70:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
    4d74:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
    4d78:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    4d7c:	00000097 	muleq	r0, r7, r0
    4d80:	01982303 	orrseq	r2, r8, r3, lsl #6
    4d84:	00098508 	andeq	r8, r9, r8, lsl #10
    4d88:	02330300 	eorseq	r0, r3, #0, 6
    4d8c:	00009719 	andeq	r9, r0, r9, lsl r7
    4d90:	9c230300 	stcls	3, cr0, [r3], #-0
    4d94:	063f0801 	ldrteq	r0, [pc], -r1, lsl #16
    4d98:	35030000 	strcc	r0, [r3, #-0]
    4d9c:	058a1a02 	streq	r1, [sl, #2562]	; 0xa02
    4da0:	23030000 	movwcs	r0, #12288	; 0x3000
    4da4:	e10801a0 	smlatb	r8, r0, r1, r0
    4da8:	03000015 	movweq	r0, #21
    4dac:	a819023a 	ldmdage	r9, {r1, r3, r4, r5, r9}
    4db0:	03000000 	movweq	r0, #0
    4db4:	0801a423 	stmdaeq	r1, {r0, r1, r5, sl, sp, pc}
    4db8:	000016d0 	ldrdeq	r1, [r0], -r0
    4dbc:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    4dc0:	000000a8 	andeq	r0, r0, r8, lsr #1
    4dc4:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    4dc8:	00155a08 	andseq	r5, r5, r8, lsl #20
    4dcc:	02410300 	subeq	r0, r1, #0, 6
    4dd0:	0000a819 	andeq	sl, r0, r9, lsl r8
    4dd4:	ac230300 	stcge	3, cr0, [r3], #-0
    4dd8:	17870801 	strne	r0, [r7, r1, lsl #16]
    4ddc:	45030000 	strmi	r0, [r3, #-0]
    4de0:	00a81902 	adceq	r1, r8, r2, lsl #18
    4de4:	23030000 	movwcs	r0, #12288	; 0x3000
    4de8:	890801b0 	stmdbhi	r8, {r4, r5, r7, r8}
    4dec:	03000016 	movweq	r0, #22
    4df0:	a8190248 	ldmdage	r9, {r3, r6, r9}
    4df4:	03000000 	movweq	r0, #0
    4df8:	0801b423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, pc}
    4dfc:	000011c7 	andeq	r1, r0, r7, asr #3
    4e00:	1a024c03 	bne	97e14 <SYSTICK_CYCLES+0x893b5>
    4e04:	0000048e 	andeq	r0, r0, lr, lsl #9
    4e08:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    4e0c:	00175f08 	andseq	r5, r7, r8, lsl #30
    4e10:	024f0300 	subeq	r0, pc, #0, 6
    4e14:	0000a819 	andeq	sl, r0, r9, lsl r8
    4e18:	bc230300 	stclt	3, cr0, [r3], #-0
    4e1c:	15320801 	ldrne	r0, [r2, #-2049]!	; 0xfffff7ff
    4e20:	52030000 	andpl	r0, r3, #0
    4e24:	00a81902 	adceq	r1, r8, r2, lsl #18
    4e28:	23030000 	movwcs	r0, #12288	; 0x3000
    4e2c:	980801c0 	stmdals	r8, {r6, r7, r8}
    4e30:	03000014 	movweq	r0, #20
    4e34:	a8190255 	ldmdage	r9, {r0, r2, r4, r6, r9}
    4e38:	03000000 	movweq	r0, #0
    4e3c:	0801c423 	stmdaeq	r1, {r0, r1, r5, sl, lr, pc}
    4e40:	00001605 	andeq	r1, r0, r5, lsl #12
    4e44:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    4e48:	000000a8 	andeq	r0, r0, r8, lsr #1
    4e4c:	01c82303 	biceq	r2, r8, r3, lsl #6
    4e50:	00140b08 	andseq	r0, r4, r8, lsl #22
    4e54:	025d0300 	subseq	r0, sp, #0, 6
    4e58:	0000761a 	andeq	r7, r0, sl, lsl r6
    4e5c:	cc230300 	stcgt	3, cr0, [r3], #-0
    4e60:	0ce40801 	stcleq	8, cr0, [r4], #4
    4e64:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    4e68:	00a81902 	adceq	r1, r8, r2, lsl #18
    4e6c:	23030000 	movwcs	r0, #12288	; 0x3000
    4e70:	650801d0 	strvs	r0, [r8, #-464]	; 0xfffffe30
    4e74:	0300000e 	movweq	r0, #14
    4e78:	a819027d 	ldmdage	r9, {r0, r2, r3, r4, r5, r6, r9}
    4e7c:	03000000 	movweq	r0, #0
    4e80:	0001d423 	andeq	sp, r1, r3, lsr #8
    4e84:	0169040b 	cmneq	r9, fp, lsl #8
    4e88:	01090000 	mrseq	r0, (UNDEF: 9)
    4e8c:	000004a5 	andeq	r0, r0, r5, lsr #9
    4e90:	00048e0a 	andeq	r8, r4, sl, lsl #28
    4e94:	00a80a00 	adceq	r0, r8, r0, lsl #20
    4e98:	0b000000 	bleq	4ea0 <__HEAP_SIZE+0x3ea0>
    4e9c:	00049404 	andeq	r9, r4, r4, lsl #8
    4ea0:	11b70700 			; <UNDEFINED> instruction: 0x11b70700
    4ea4:	03340000 	teqeq	r4, #0
    4ea8:	8a10037e 	bhi	405ca8 <__RAM_SIZE+0x305ca8>
    4eac:	08000005 	stmdaeq	r0, {r0, r2}
    4eb0:	00000800 	andeq	r0, r0, r0, lsl #16
    4eb4:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    4eb8:	000000a8 	andeq	r0, r0, r8, lsr #1
    4ebc:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    4ec0:	00001284 	andeq	r1, r0, r4, lsl #5
    4ec4:	1a038503 	bne	e62d8 <SYSTICK_CYCLES+0xd7879>
    4ec8:	00000163 	andeq	r0, r0, r3, ror #2
    4ecc:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    4ed0:	0000107a 	andeq	r1, r0, sl, ror r0
    4ed4:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    4ed8:	00000097 	muleq	r0, r7, r0
    4edc:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    4ee0:	00000d3a 	andeq	r0, r0, sl, lsr sp
    4ee4:	1a038c03 	bne	e7ef8 <SYSTICK_CYCLES+0xd9499>
    4ee8:	0000059d 	muleq	r0, sp, r5
    4eec:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    4ef0:	000007d5 	ldrdeq	r0, [r0], -r5
    4ef4:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    4ef8:	00000097 	muleq	r0, r7, r0
    4efc:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    4f00:	00000741 	andeq	r0, r0, r1, asr #14
    4f04:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    4f08:	00000097 	muleq	r0, r7, r0
    4f0c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    4f10:	000012c5 	andeq	r1, r0, r5, asr #5
    4f14:	1a039803 	bne	eaf28 <SYSTICK_CYCLES+0xdc4c9>
    4f18:	0000048e 	andeq	r0, r0, lr, lsl #9
    4f1c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    4f20:	0000104b 	andeq	r1, r0, fp, asr #32
    4f24:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    4f28:	00000097 	muleq	r0, r7, r0
    4f2c:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    4f30:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    4f34:	1a039d03 	bne	ec348 <SYSTICK_CYCLES+0xdd8e9>
    4f38:	0000058a 	andeq	r0, r0, sl, lsl #11
    4f3c:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    4f40:	00000fb6 			; <UNDEFINED> instruction: 0x00000fb6
    4f44:	1a039e03 	bne	ec758 <SYSTICK_CYCLES+0xddcf9>
    4f48:	0000058a 	andeq	r0, r0, sl, lsl #11
    4f4c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    4f50:	000008d2 	ldrdeq	r0, [r0], -r2
    4f54:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    4f58:	00000097 	muleq	r0, r7, r0
    4f5c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    4f60:	00001436 	andeq	r1, r0, r6, lsr r4
    4f64:	1a03a603 	bne	ee778 <SYSTICK_CYCLES+0xdfd19>
    4f68:	0000058a 	andeq	r0, r0, sl, lsl #11
    4f6c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    4f70:	00000c53 	andeq	r0, r0, r3, asr ip
    4f74:	1a03a703 	bne	eeb88 <SYSTICK_CYCLES+0xe0129>
    4f78:	0000058a 	andeq	r0, r0, sl, lsl #11
    4f7c:	00302302 	eorseq	r2, r0, r2, lsl #6
    4f80:	04ab040b 	strteq	r0, [fp], #1035	; 0x40b
    4f84:	de0c0000 	cdple	0, 0, cr0, cr12, cr0, {0}
    4f88:	03000012 	movweq	r0, #18
    4f8c:	69030286 	stmdbvs	r3, {r1, r2, r7, r9}
    4f90:	0b000001 	bleq	4f9c <__HEAP_SIZE+0x3f9c>
    4f94:	00059004 	andeq	r9, r5, r4
    4f98:	17d30d00 	ldrbne	r0, [r3, r0, lsl #26]
    4f9c:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    4fa0:	059d2101 	ldreq	r2, [sp, #257]	; 0x101
    4fa4:	01010000 	mrseq	r0, (UNDEF: 1)
    4fa8:	0015010d 	andseq	r0, r5, sp, lsl #2
    4fac:	01400400 	cmpeq	r0, r0, lsl #8
    4fb0:	00059d21 	andeq	r9, r5, r1, lsr #26
    4fb4:	0d010100 	stfeqs	f0, [r1, #-0]
    4fb8:	0000162c 	andeq	r1, r0, ip, lsr #12
    4fbc:	21015304 	tstcs	r1, r4, lsl #6
    4fc0:	000000b4 	strheq	r0, [r0], -r4
    4fc4:	a80e0101 	stmdage	lr, {r0, r8}
    4fc8:	e0000000 	and	r0, r0, r0
    4fcc:	0f000005 	svceq	0x00000005
    4fd0:	00000029 	andeq	r0, r0, r9, lsr #32
    4fd4:	440d0000 	strmi	r0, [sp], #-0
    4fd8:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    4fdc:	d021015b 	eorle	r0, r1, fp, asr r1
    4fe0:	01000005 	tsteq	r0, r5
    4fe4:	14bc0d01 	ldrtne	r0, [ip], #3329	; 0xd01
    4fe8:	7f040000 	svcvc	0x00040000
    4fec:	00972101 	addseq	r2, r7, r1, lsl #2
    4ff0:	01010000 	mrseq	r0, (UNDEF: 1)
    4ff4:	00059d0e 	andeq	r9, r5, lr, lsl #26
    4ff8:	00060e00 	andeq	r0, r6, r0, lsl #28
    4ffc:	00290f00 	eoreq	r0, r9, r0, lsl #30
    5000:	001f0000 	andseq	r0, pc, r0
    5004:	00183e0d 	andseq	r3, r8, sp, lsl #28
    5008:	01870400 	orreq	r0, r7, r0, lsl #8
    500c:	0005fe21 	andeq	pc, r5, r1, lsr #28
    5010:	0d010100 	stfeqs	f0, [r1, #-0]
    5014:	000017b8 			; <UNDEFINED> instruction: 0x000017b8
    5018:	21018e04 	tstcs	r1, r4, lsl #28
    501c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5020:	e00d0101 	and	r0, sp, r1, lsl #2
    5024:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    5028:	a82101ca 	stmdage	r1!, {r1, r3, r6, r7, r8}
    502c:	01000000 	mrseq	r0, (UNDEF: 0)
    5030:	15590d01 	ldrbne	r0, [r9, #-3329]	; 0xfffff2ff
    5034:	d6040000 	strle	r0, [r4], -r0
    5038:	00a82101 	adceq	r2, r8, r1, lsl #2
    503c:	01010000 	mrseq	r0, (UNDEF: 1)
    5040:	0017860d 	andseq	r8, r7, sp, lsl #12
    5044:	01dd0400 	bicseq	r0, sp, r0, lsl #8
    5048:	0000a821 	andeq	sl, r0, r1, lsr #16
    504c:	0d010100 	stfeqs	f0, [r1, #-0]
    5050:	00001731 	andeq	r1, r0, r1, lsr r7
    5054:	21020904 	tstcs	r2, r4, lsl #18
    5058:	000000a8 	andeq	r0, r0, r8, lsr #1
    505c:	b60d0101 	strlt	r0, [sp], -r1, lsl #2
    5060:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    5064:	a821020f 	stmdage	r1!, {r0, r1, r2, r3, r9}
    5068:	01000000 	mrseq	r0, (UNDEF: 0)
    506c:	059d0e01 	ldreq	r0, [sp, #3585]	; 0xe01
    5070:	06870000 	streq	r0, [r7], r0
    5074:	290f0000 	stmdbcs	pc, {}	; <UNPREDICTABLE>
    5078:	07000000 	streq	r0, [r0, -r0]
    507c:	170e0d00 	strne	r0, [lr, -r0, lsl #26]
    5080:	10040000 	andne	r0, r4, r0
    5084:	06772102 	ldrbteq	r2, [r7], -r2, lsl #2
    5088:	01010000 	mrseq	r0, (UNDEF: 1)
    508c:	1a420110 	bne	10854d4 <SYSTEM_CLOCK+0xacc754>
    5090:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    5094:	c8010702 	stmdagt	r1, {r1, r8, r9, sl}
    5098:	f010001a 			; <UNDEFINED> instruction: 0xf010001a
    509c:	2e10001d 	mrccs	0, 0, r0, cr0, cr13, {0}
    50a0:	01000027 	tsteq	r0, r7, lsr #32
    50a4:	00000e24 	andeq	r0, r0, r4, lsr #28
    50a8:	001b2411 	andseq	r2, fp, r1, lsl r4
    50ac:	026e0100 	rsbeq	r0, lr, #0, 2
    50b0:	00059d2e 	andeq	r9, r5, lr, lsr #26
    50b4:	00275800 	eoreq	r5, r7, r0, lsl #16
    50b8:	00274e00 	eoreq	r4, r7, r0, lsl #28
    50bc:	0a0e1200 	beq	3898c4 <__RAM_SIZE+0x2898c4>
    50c0:	71010000 	mrsvc	r0, (UNDEF: 1)
    50c4:	00971102 	addseq	r1, r7, r2, lsl #2
    50c8:	27a20000 	strcs	r0, [r2, r0]!
    50cc:	279a0000 	ldrcs	r0, [sl, r0]
    50d0:	12120000 	andsne	r0, r2, #0
    50d4:	0100001a 	tsteq	r0, sl, lsl r0
    50d8:	a8110272 	ldmdage	r1, {r1, r4, r5, r6, r9}
    50dc:	dd000000 	stcle	0, cr0, [r0, #-0]
    50e0:	d7000027 	strle	r0, [r0, -r7, lsr #32]
    50e4:	12000027 	andne	r0, r0, #39	; 0x27
    50e8:	00001a1f 	andeq	r1, r0, pc, lsl sl
    50ec:	12027301 	andne	r7, r2, #67108864	; 0x4000000
    50f0:	0000059d 	muleq	r0, sp, r5
    50f4:	00002810 	andeq	r2, r0, r0, lsl r8
    50f8:	0000280a 	andeq	r2, r0, sl, lsl #16
    50fc:	001a5e12 	andseq	r5, sl, r2, lsl lr
    5100:	02740100 	rsbseq	r0, r4, #0, 2
    5104:	00059d12 	andeq	r9, r5, r2, lsl sp
    5108:	00284100 	eoreq	r4, r8, r0, lsl #2
    510c:	00283f00 	eoreq	r3, r8, r0, lsl #30
    5110:	150c1200 	strne	r1, [ip, #-512]	; 0xfffffe00
    5114:	75010000 	strvc	r0, [r1, #-0]
    5118:	059d1202 	ldreq	r1, [sp, #514]	; 0x202
    511c:	285e0000 	ldmdacs	lr, {}^	; <UNPREDICTABLE>
    5120:	28540000 	ldmdacs	r4, {}^	; <UNPREDICTABLE>
    5124:	28120000 	ldmdacs	r2, {}	; <UNPREDICTABLE>
    5128:	0100001a 	tsteq	r0, sl, lsl r0
    512c:	9d120276 	lfmls	f0, 4, [r2, #-472]	; 0xfffffe28
    5130:	a1000005 	tstge	r0, r5
    5134:	9f000028 	svcls	0x00000028
    5138:	12000028 	andne	r0, r0, #40	; 0x28
    513c:	00001a03 	andeq	r1, r0, r3, lsl #20
    5140:	11027701 	tstne	r2, r1, lsl #14
    5144:	000000a8 	andeq	r0, r0, r8, lsr #1
    5148:	000028b8 			; <UNDEFINED> instruction: 0x000028b8
    514c:	000028b4 			; <UNDEFINED> instruction: 0x000028b4
    5150:	00024813 	andeq	r4, r2, r3, lsl r8
    5154:	00090200 	andeq	r0, r9, r0, lsl #4
    5158:	18a11200 	stmiane	r1!, {r9, ip}
    515c:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    5160:	00970502 	addseq	r0, r7, r2, lsl #10
    5164:	28de0000 	ldmcs	lr, {}^	; <UNPREDICTABLE>
    5168:	28d60000 	ldmcs	r6, {}^	; <UNPREDICTABLE>
    516c:	1b140000 	blne	505174 <__RAM_SIZE+0x405174>
    5170:	d600000f 	strle	r0, [r0], -pc
    5174:	0210001a 	andseq	r0, r0, #26
    5178:	001ad600 	andseq	sp, sl, r0, lsl #12
    517c:	001adc10 	andseq	sp, sl, r0, lsl ip
    5180:	02a80110 	adceq	r0, r8, #16, 2
    5184:	0007c605 	andeq	ip, r7, r5, lsl #12
    5188:	0f2e1500 	svceq	0x002e1500
    518c:	29180000 	ldmdbcs	r8, {}	; <UNPREDICTABLE>
    5190:	29120000 	ldmdbcs	r2, {}	; <UNPREDICTABLE>
    5194:	64160000 	ldrvs	r0, [r6], #-0
    5198:	d600000f 	strle	r0, [r0], -pc
    519c:	0510001a 	ldreq	r0, [r0, #-26]	; 0xffffffe6
    51a0:	001ad600 	andseq	sp, sl, r0, lsl #12
    51a4:	001ada10 	andseq	sp, sl, r0, lsl sl
    51a8:	02560210 	subseq	r0, r6, #16, 4
    51ac:	0f771513 	svceq	0x00771513
    51b0:	29430000 	stmdbcs	r3, {}^	; <UNPREDICTABLE>
    51b4:	29410000 	stmdbcs	r1, {}^	; <UNPREDICTABLE>
    51b8:	00000000 	andeq	r0, r0, r0
    51bc:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    51c0:	001ae600 	andseq	lr, sl, r0, lsl #12
    51c4:	e6000110 			; <UNDEFINED> instruction: 0xe6000110
    51c8:	ea10001a 	b	405238 <__RAM_SIZE+0x305238>
    51cc:	0110001a 	tsteq	r0, sl, lsl r0
    51d0:	ef0502a8 	svc	0x000502a8
    51d4:	17000007 	strne	r0, [r0, -r7]
    51d8:	00000f4b 	andeq	r0, r0, fp, asr #30
    51dc:	00002958 	andeq	r2, r0, r8, asr r9
    51e0:	00002956 	andeq	r2, r0, r6, asr r9
    51e4:	0f3c1400 	svceq	0x003c1400
    51e8:	1b4a0000 	blne	12851f0 <SYSTEM_CLOCK+0xccc470>
    51ec:	00011000 	andeq	r1, r1, r0
    51f0:	10001b4a 	andne	r1, r0, sl, asr #22
    51f4:	10001b4e 	andne	r1, r0, lr, asr #22
    51f8:	0502a801 	streq	sl, [r2, #-2049]	; 0xfffff7ff
    51fc:	00000818 	andeq	r0, r0, r8, lsl r8
    5200:	000f4b17 	andeq	r4, pc, r7, lsl fp	; <UNPREDICTABLE>
    5204:	00296d00 	eoreq	r6, r9, r0, lsl #26
    5208:	00296b00 	eoreq	r6, r9, r0, lsl #22
    520c:	1b140000 	blne	505214 <__RAM_SIZE+0x405214>
    5210:	5400000f 	strpl	r0, [r0], #-15
    5214:	0110001b 	tsteq	r0, fp, lsl r0
    5218:	001b5400 	andseq	r5, fp, r0, lsl #8
    521c:	001b5a10 	andseq	r5, fp, r0, lsl sl
    5220:	02a80110 	adceq	r0, r8, #16, 2
    5224:	00086605 	andeq	r6, r8, r5, lsl #12
    5228:	0f2e1500 	svceq	0x002e1500
    522c:	29820000 	stmibcs	r2, {}	; <UNPREDICTABLE>
    5230:	29800000 	stmibcs	r0, {}	; <UNPREDICTABLE>
    5234:	64160000 	ldrvs	r0, [r6], #-0
    5238:	5400000f 	strpl	r0, [r0], #-15
    523c:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    5240:	001b5400 	andseq	r5, fp, r0, lsl #8
    5244:	001b5810 	andseq	r5, fp, r0, lsl r8
    5248:	02560210 	subseq	r0, r6, #16, 4
    524c:	0f771513 	svceq	0x00771513
    5250:	29970000 	ldmibcs	r7, {}	; <UNPREDICTABLE>
    5254:	29950000 	ldmibcs	r5, {}	; <UNPREDICTABLE>
    5258:	00000000 	andeq	r0, r0, r0
    525c:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    5260:	001b6a00 	andseq	r6, fp, r0, lsl #20
    5264:	6a000110 	bvs	56ac <__HEAP_SIZE+0x46ac>
    5268:	6e10001b 	mrcvs	0, 0, r0, cr0, cr11, {0}
    526c:	0110001b 	tsteq	r0, fp, lsl r0
    5270:	8f0502a8 	svchi	0x000502a8
    5274:	17000008 	strne	r0, [r0, -r8]
    5278:	00000f4b 	andeq	r0, r0, fp, asr #30
    527c:	000029ac 	andeq	r2, r0, ip, lsr #19
    5280:	000029aa 	andeq	r2, r0, sl, lsr #19
    5284:	0f1b1400 	svceq	0x001b1400
    5288:	1b740000 	blne	1d05290 <SYSTEM_CLOCK+0x174c510>
    528c:	00011000 	andeq	r1, r1, r0
    5290:	10001b74 	andne	r1, r0, r4, ror fp
    5294:	10001b7c 	andne	r1, r0, ip, ror fp
    5298:	0502a801 	streq	sl, [r2, #-2049]	; 0xfffff7ff
    529c:	000008dd 	ldrdeq	r0, [r0], -sp
    52a0:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    52a4:	0029c100 	eoreq	ip, r9, r0, lsl #2
    52a8:	0029bf00 	eoreq	fp, r9, r0, lsl #30
    52ac:	0f641600 	svceq	0x00641600
    52b0:	1b740000 	blne	1d052b8 <SYSTEM_CLOCK+0x174c538>
    52b4:	00041000 	andeq	r1, r4, r0
    52b8:	10001b74 	andne	r1, r0, r4, ror fp
    52bc:	10001b78 	andne	r1, r0, r8, ror fp
    52c0:	13025602 	movwne	r5, #9730	; 0x2602
    52c4:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    52c8:	0029d600 	eoreq	sp, r9, r0, lsl #12
    52cc:	0029d400 	eoreq	sp, r9, r0, lsl #8
    52d0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    52d4:	10001b54 	andne	r1, r0, r4, asr fp
    52d8:	00000fa6 	andeq	r0, r0, r6, lsr #31
    52dc:	000008f1 	strdeq	r0, [r0], -r1
    52e0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    52e4:	1a000074 	bne	54bc <__HEAP_SIZE+0x44bc>
    52e8:	10001b74 	andne	r1, r0, r4, ror fp
    52ec:	00000fb5 			; <UNDEFINED> instruction: 0x00000fb5
    52f0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    52f4:	00000074 	andeq	r0, r0, r4, ror r0
    52f8:	00026013 	andeq	r6, r2, r3, lsl r0
    52fc:	000aaa00 	andeq	sl, sl, r0, lsl #20
    5300:	18a11200 	stmiane	r1!, {r9, ip}
    5304:	6b010000 	blvs	4530c <SYSTICK_CYCLES+0x368ad>
    5308:	00971d03 	addseq	r1, r7, r3, lsl #26
    530c:	29f10000 	ldmibcs	r1!, {}^	; <UNPREDICTABLE>
    5310:	29e90000 	stmibcs	r9!, {}^	; <UNPREDICTABLE>
    5314:	1b140000 	blne	50531c <__RAM_SIZE+0x40531c>
    5318:	0a00000f 	beq	535c <__HEAP_SIZE+0x435c>
    531c:	0310001c 	tsteq	r0, #28
    5320:	001c0a00 	andseq	r0, ip, r0, lsl #20
    5324:	001c1010 	andseq	r1, ip, r0, lsl r0
    5328:	036b0110 	cmneq	fp, #16, 2
    532c:	00096e1d 	andeq	r6, r9, sp, lsl lr
    5330:	0f2e1500 	svceq	0x002e1500
    5334:	2a2b0000 	bcs	ac533c <SYSTEM_CLOCK+0x50c5bc>
    5338:	2a250000 	bcs	945340 <SYSTEM_CLOCK+0x38c5c0>
    533c:	64160000 	ldrvs	r0, [r6], #-0
    5340:	0a00000f 	beq	5384 <__HEAP_SIZE+0x4384>
    5344:	0610001c 			; <UNDEFINED> instruction: 0x0610001c
    5348:	001c0a00 	andseq	r0, ip, r0, lsl #20
    534c:	001c0e10 	andseq	r0, ip, r0, lsl lr
    5350:	02560210 	subseq	r0, r6, #16, 4
    5354:	0f771513 	svceq	0x00771513
    5358:	2a560000 	bcs	1585360 <SYSTEM_CLOCK+0xfcc5e0>
    535c:	2a540000 	bcs	1505364 <SYSTEM_CLOCK+0xf4c5e4>
    5360:	00000000 	andeq	r0, r0, r0
    5364:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    5368:	001c1a00 	andseq	r1, ip, r0, lsl #20
    536c:	1a000110 	bne	57b4 <__HEAP_SIZE+0x47b4>
    5370:	1e10001c 	mrcne	0, 0, r0, cr0, cr12, {0}
    5374:	0110001c 	tsteq	r0, ip, lsl r0
    5378:	971d036b 	ldrls	r0, [sp, -fp, ror #6]
    537c:	17000009 	strne	r0, [r0, -r9]
    5380:	00000f4b 	andeq	r0, r0, fp, asr #30
    5384:	00002a6b 	andeq	r2, r0, fp, ror #20
    5388:	00002a69 	andeq	r2, r0, r9, ror #20
    538c:	0f3c1400 	svceq	0x003c1400
    5390:	1ca00000 	stcne	0, cr0, [r0]
    5394:	00011000 	andeq	r1, r1, r0
    5398:	10001ca0 	andne	r1, r0, r0, lsr #25
    539c:	10001ca4 	andne	r1, r0, r4, lsr #25
    53a0:	1d036b01 	vstrne	d6, [r3, #-4]
    53a4:	000009c0 	andeq	r0, r0, r0, asr #19
    53a8:	000f4b17 	andeq	r4, pc, r7, lsl fp	; <UNPREDICTABLE>
    53ac:	002a8000 	eoreq	r8, sl, r0
    53b0:	002a7e00 	eoreq	r7, sl, r0, lsl #28
    53b4:	1b140000 	blne	5053bc <__RAM_SIZE+0x4053bc>
    53b8:	aa00000f 	bge	53fc <__HEAP_SIZE+0x43fc>
    53bc:	0110001c 	tsteq	r0, ip, lsl r0
    53c0:	001caa00 	andseq	sl, ip, r0, lsl #20
    53c4:	001cb010 	andseq	fp, ip, r0, lsl r0
    53c8:	036b0110 	cmneq	fp, #16, 2
    53cc:	000a0e1d 	andeq	r0, sl, sp, lsl lr
    53d0:	0f2e1500 	svceq	0x002e1500
    53d4:	2a950000 	bcs	fe5453dc <__RAM_segment_used_end__+0xc64453dc>
    53d8:	2a930000 	bcs	fe4c53e0 <__RAM_segment_used_end__+0xc63c53e0>
    53dc:	64160000 	ldrvs	r0, [r6], #-0
    53e0:	aa00000f 	bge	5424 <__HEAP_SIZE+0x4424>
    53e4:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    53e8:	001caa00 	andseq	sl, ip, r0, lsl #20
    53ec:	001cae10 	andseq	sl, ip, r0, lsl lr
    53f0:	02560210 	subseq	r0, r6, #16, 4
    53f4:	0f771513 	svceq	0x00771513
    53f8:	2aaa0000 	bcs	fea85400 <__RAM_segment_used_end__+0xc6985400>
    53fc:	2aa80000 	bcs	fea05404 <__RAM_segment_used_end__+0xc6905404>
    5400:	00000000 	andeq	r0, r0, r0
    5404:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    5408:	001cc000 	andseq	ip, ip, r0
    540c:	c0000110 	andgt	r0, r0, r0, lsl r1
    5410:	c410001c 	ldrgt	r0, [r0], #-28	; 0xffffffe4
    5414:	0110001c 	tsteq	r0, ip, lsl r0
    5418:	371d036b 	ldrcc	r0, [sp, -fp, ror #6]
    541c:	1700000a 	strne	r0, [r0, -sl]
    5420:	00000f4b 	andeq	r0, r0, fp, asr #30
    5424:	00002abf 			; <UNDEFINED> instruction: 0x00002abf
    5428:	00002abd 			; <UNDEFINED> instruction: 0x00002abd
    542c:	0f1b1400 	svceq	0x001b1400
    5430:	1cca0000 	stclne	0, cr0, [sl], {0}
    5434:	00011000 	andeq	r1, r1, r0
    5438:	10001cca 	andne	r1, r0, sl, asr #25
    543c:	10001cd2 	ldrdne	r1, [r0], -r2
    5440:	1d036b01 	vstrne	d6, [r3, #-4]
    5444:	00000a85 	andeq	r0, r0, r5, lsl #21
    5448:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    544c:	002ad400 	eoreq	sp, sl, r0, lsl #8
    5450:	002ad200 	eoreq	sp, sl, r0, lsl #4
    5454:	0f641600 	svceq	0x00641600
    5458:	1cca0000 	stclne	0, cr0, [sl], {0}
    545c:	00041000 	andeq	r1, r4, r0
    5460:	10001cca 	andne	r1, r0, sl, asr #25
    5464:	10001cce 	andne	r1, r0, lr, asr #25
    5468:	13025602 	movwne	r5, #9730	; 0x2602
    546c:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    5470:	002ae900 	eoreq	lr, sl, r0, lsl #18
    5474:	002ae700 	eoreq	lr, sl, r0, lsl #14
    5478:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    547c:	10001caa 	andne	r1, r0, sl, lsr #25
    5480:	00000fa6 	andeq	r0, r0, r6, lsr #31
    5484:	00000a99 	muleq	r0, r9, sl
    5488:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    548c:	1a000074 	bne	5664 <__HEAP_SIZE+0x4664>
    5490:	10001cca 	andne	r1, r0, sl, asr #25
    5494:	00000fb5 			; <UNDEFINED> instruction: 0x00000fb5
    5498:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    549c:	00000074 	andeq	r0, r0, r4, ror r0
    54a0:	00027813 	andeq	r7, r2, r3, lsl r8
    54a4:	000c5200 	andeq	r5, ip, r0, lsl #4
    54a8:	18a11200 	stmiane	r1!, {r9, ip}
    54ac:	d7010000 	strle	r0, [r1, -r0]
    54b0:	00970903 	addseq	r0, r7, r3, lsl #18
    54b4:	2b040000 	blcs	1054bc <__RAM_SIZE+0x54bc>
    54b8:	2afc0000 	bcs	fff054c0 <__RAM_segment_used_end__+0xc7e054c0>
    54bc:	1b140000 	blne	5054c4 <__RAM_SIZE+0x4054c4>
    54c0:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    54c4:	0310001d 	tsteq	r0, #29
    54c8:	001d1800 	andseq	r1, sp, r0, lsl #16
    54cc:	001d1e10 	andseq	r1, sp, r0, lsl lr
    54d0:	03d70110 	bicseq	r0, r7, #16, 2
    54d4:	000b1609 	andeq	r1, fp, r9, lsl #12
    54d8:	0f2e1500 	svceq	0x002e1500
    54dc:	2b3e0000 	blcs	f854e4 <SYSTEM_CLOCK+0x9cc764>
    54e0:	2b380000 	blcs	e054e8 <SYSTEM_CLOCK+0x84c768>
    54e4:	64160000 	ldrvs	r0, [r6], #-0
    54e8:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    54ec:	0610001d 			; <UNDEFINED> instruction: 0x0610001d
    54f0:	001d1800 	andseq	r1, sp, r0, lsl #16
    54f4:	001d1c10 	andseq	r1, sp, r0, lsl ip
    54f8:	02560210 	subseq	r0, r6, #16, 4
    54fc:	0f771513 	svceq	0x00771513
    5500:	2b690000 	blcs	1a45508 <SYSTEM_CLOCK+0x148c788>
    5504:	2b670000 	blcs	19c550c <SYSTEM_CLOCK+0x140c78c>
    5508:	00000000 	andeq	r0, r0, r0
    550c:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    5510:	001d2800 	andseq	r2, sp, r0, lsl #16
    5514:	28000110 	stmdacs	r0, {r4, r8}
    5518:	2c10001d 	ldccs	0, cr0, [r0], {29}
    551c:	0110001d 	tsteq	r0, sp, lsl r0
    5520:	3f0903d7 	svccc	0x000903d7
    5524:	1700000b 	strne	r0, [r0, -fp]
    5528:	00000f4b 	andeq	r0, r0, fp, asr #30
    552c:	00002b7e 	andeq	r2, r0, lr, ror fp
    5530:	00002b7c 	andeq	r2, r0, ip, ror fp
    5534:	0f3c1400 	svceq	0x003c1400
    5538:	1db40000 	ldcne	0, cr0, [r4]
    553c:	00011000 	andeq	r1, r1, r0
    5540:	10001db4 			; <UNDEFINED> instruction: 0x10001db4
    5544:	10001db8 			; <UNDEFINED> instruction: 0x10001db8
    5548:	0903d701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr, pc}
    554c:	00000b68 	andeq	r0, r0, r8, ror #22
    5550:	000f4b17 	andeq	r4, pc, r7, lsl fp	; <UNPREDICTABLE>
    5554:	002b9300 	eoreq	r9, fp, r0, lsl #6
    5558:	002b9100 	eoreq	r9, fp, r0, lsl #2
    555c:	1b140000 	blne	505564 <__RAM_SIZE+0x405564>
    5560:	be00000f 	cdplt	0, 0, cr0, cr0, cr15, {0}
    5564:	0110001d 	tsteq	r0, sp, lsl r0
    5568:	001dbe00 	andseq	fp, sp, r0, lsl #28
    556c:	001dc410 	andseq	ip, sp, r0, lsl r4
    5570:	03d70110 	bicseq	r0, r7, #16, 2
    5574:	000bb609 	andeq	fp, fp, r9, lsl #12
    5578:	0f2e1500 	svceq	0x002e1500
    557c:	2ba80000 	blcs	fea05584 <__RAM_segment_used_end__+0xc6905584>
    5580:	2ba60000 	blcs	fe985588 <__RAM_segment_used_end__+0xc6885588>
    5584:	64160000 	ldrvs	r0, [r6], #-0
    5588:	be00000f 	cdplt	0, 0, cr0, cr0, cr15, {0}
    558c:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    5590:	001dbe00 	andseq	fp, sp, r0, lsl #28
    5594:	001dc210 	andseq	ip, sp, r0, lsl r2
    5598:	02560210 	subseq	r0, r6, #16, 4
    559c:	0f771513 	svceq	0x00771513
    55a0:	2bbd0000 	blcs	fef455a8 <__RAM_segment_used_end__+0xc6e455a8>
    55a4:	2bbb0000 	blcs	feec55ac <__RAM_segment_used_end__+0xc6dc55ac>
    55a8:	00000000 	andeq	r0, r0, r0
    55ac:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    55b0:	001dd400 	andseq	sp, sp, r0, lsl #8
    55b4:	d4000110 	strle	r0, [r0], #-272	; 0xfffffef0
    55b8:	d810001d 	ldmdale	r0, {r0, r2, r3, r4}
    55bc:	0110001d 	tsteq	r0, sp, lsl r0
    55c0:	df0903d7 	svcle	0x000903d7
    55c4:	1700000b 	strne	r0, [r0, -fp]
    55c8:	00000f4b 	andeq	r0, r0, fp, asr #30
    55cc:	00002bd2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    55d0:	00002bd0 	ldrdeq	r2, [r0], -r0
    55d4:	0f1b1400 	svceq	0x001b1400
    55d8:	1dde0000 	ldclne	0, cr0, [lr]
    55dc:	00011000 	andeq	r1, r1, r0
    55e0:	10001dde 	ldrdne	r1, [r0], -lr
    55e4:	10001de6 	andne	r1, r0, r6, ror #27
    55e8:	0903d701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr, pc}
    55ec:	00000c2d 	andeq	r0, r0, sp, lsr #24
    55f0:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    55f4:	002be700 	eoreq	lr, fp, r0, lsl #14
    55f8:	002be500 	eoreq	lr, fp, r0, lsl #10
    55fc:	0f641600 	svceq	0x00641600
    5600:	1dde0000 	ldclne	0, cr0, [lr]
    5604:	00041000 	andeq	r1, r4, r0
    5608:	10001dde 	ldrdne	r1, [r0], -lr
    560c:	10001de2 	andne	r1, r0, r2, ror #27
    5610:	13025602 	movwne	r5, #9730	; 0x2602
    5614:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    5618:	002bfc00 	eoreq	pc, fp, r0, lsl #24
    561c:	002bfa00 	eoreq	pc, fp, r0, lsl #20
    5620:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5624:	10001dbe 			; <UNDEFINED> instruction: 0x10001dbe
    5628:	00000fa6 	andeq	r0, r0, r6, lsr #31
    562c:	00000c41 	andeq	r0, r0, r1, asr #24
    5630:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5634:	1a000074 	bne	580c <__HEAP_SIZE+0x480c>
    5638:	10001dde 	ldrdne	r1, [r0], -lr
    563c:	00000fb5 			; <UNDEFINED> instruction: 0x00000fb5
    5640:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5644:	00000074 	andeq	r0, r0, r4, ror r0
    5648:	000f8514 	andeq	r8, pc, r4, lsl r5	; <UNPREDICTABLE>
    564c:	001bbc00 	andseq	fp, fp, r0, lsl #24
    5650:	bc000110 	stflts	f0, [r0], {16}
    5654:	c010001b 	andsgt	r0, r0, fp, lsl r0
    5658:	0110001b 	tsteq	r0, fp, lsl r0
    565c:	7b21031a 	blvc	8462cc <SYSTEM_CLOCK+0x28d54c>
    5660:	1500000c 	strne	r0, [r0, #-12]
    5664:	00000f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    5668:	00002c11 	andeq	r2, r0, r1, lsl ip
    566c:	00002c0f 	andeq	r2, r0, pc, lsl #24
    5670:	0efe1400 	cdpeq	4, 15, cr1, cr14, cr0, {0}
    5674:	1c300000 	ldcne	0, cr0, [r0], #-0
    5678:	00011000 	andeq	r1, r1, r0
    567c:	10001c30 	andne	r1, r0, r0, lsr ip
    5680:	10001c50 	andne	r1, r0, r0, asr ip
    5684:	21037b01 	tstcs	r3, r1, lsl #22
    5688:	00000d32 	andeq	r0, r0, r2, lsr sp
    568c:	000f0d15 	andeq	r0, pc, r5, lsl sp	; <UNPREDICTABLE>
    5690:	002c2600 	eoreq	r2, ip, r0, lsl #12
    5694:	002c2400 	eoreq	r2, ip, r0, lsl #8
    5698:	0f851400 	svceq	0x00851400
    569c:	1c3c0000 	ldcne	0, cr0, [ip], #-0
    56a0:	00011000 	andeq	r1, r1, r0
    56a4:	10001c3c 	andne	r1, r0, ip, lsr ip
    56a8:	10001c40 	andne	r1, r0, r0, asr #24
    56ac:	09026602 	stmdbeq	r2, {r1, r9, sl, sp, lr}
    56b0:	00000ccc 	andeq	r0, r0, ip, asr #25
    56b4:	000f9815 	andeq	r9, pc, r5, lsl r8	; <UNPREDICTABLE>
    56b8:	002c3b00 	eoreq	r3, ip, r0, lsl #22
    56bc:	002c3900 	eoreq	r3, ip, r0, lsl #18
    56c0:	64140000 	ldrvs	r0, [r4], #-0
    56c4:	4600000f 	strmi	r0, [r0], -pc
    56c8:	0110001c 	tsteq	r0, ip, lsl r0
    56cc:	001c4600 	andseq	r4, ip, r0, lsl #12
    56d0:	001c4a10 	andseq	r4, ip, r0, lsl sl
    56d4:	02680210 	rsbeq	r0, r8, #16, 4
    56d8:	000cf51a 	andeq	pc, ip, sl, lsl r5	; <UNPREDICTABLE>
    56dc:	0f771500 	svceq	0x00771500
    56e0:	2c500000 	mracs	r0, r0, acc0
    56e4:	2c4e0000 	marcs	acc0, r0, lr
    56e8:	1b000000 	blne	56f0 <__HEAP_SIZE+0x46f0>
    56ec:	00000f59 	andeq	r0, r0, r9, asr pc
    56f0:	10001c4a 	andne	r1, r0, sl, asr #24
    56f4:	1c4a0003 	mcrrne	0, 0, r0, sl, cr3
    56f8:	1c4c1000 	marne	acc0, r1, ip
    56fc:	6c021000 	stcvs	0, cr1, [r2], {-0}
    5700:	3c160902 			; <UNDEFINED> instruction: 0x3c160902
    5704:	4c00000f 	stcmi	0, cr0, [r0], {15}
    5708:	0110001c 	tsteq	r0, ip, lsl r0
    570c:	001c4c00 	andseq	r4, ip, r0, lsl #24
    5710:	001c5010 	andseq	r5, ip, r0, lsl r0
    5714:	026e0210 	rsbeq	r0, lr, #16, 4
    5718:	0f4b1709 	svceq	0x004b1709
    571c:	2c650000 	stclcs	0, cr0, [r5], #-0
    5720:	2c630000 	stclcs	0, cr0, [r3], #-0
    5724:	00000000 	andeq	r0, r0, r0
    5728:	000f8514 	andeq	r8, pc, r4, lsl r5	; <UNPREDICTABLE>
    572c:	001c5800 	andseq	r5, ip, r0, lsl #16
    5730:	58000110 	stmdapl	r0, {r4, r8}
    5734:	5c10001c 	ldcpl	0, cr0, [r0], {28}
    5738:	0110001c 	tsteq	r0, ip, lsl r0
    573c:	5b250326 	blpl	9463dc <SYSTEM_CLOCK+0x38d65c>
    5740:	1500000d 	strne	r0, [r0, #-13]
    5744:	00000f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    5748:	00002c7a 	andeq	r2, r0, sl, ror ip
    574c:	00002c78 	andeq	r2, r0, r8, ror ip
    5750:	0efe1400 	cdpeq	4, 15, cr1, cr14, cr0, {0}
    5754:	1d3a0000 	ldcne	0, cr0, [sl, #-0]
    5758:	00011000 	andeq	r1, r1, r0
    575c:	10001d3a 	andne	r1, r0, sl, lsr sp
    5760:	10001d56 	andne	r1, r0, r6, asr sp
    5764:	0d03e701 	stceq	7, cr14, [r3, #-4]
    5768:	00000e12 	andeq	r0, r0, r2, lsl lr
    576c:	000f0d15 	andeq	r0, pc, r5, lsl sp	; <UNPREDICTABLE>
    5770:	002c8f00 	eoreq	r8, ip, r0, lsl #30
    5774:	002c8d00 	eoreq	r8, ip, r0, lsl #26
    5778:	0f851400 	svceq	0x00851400
    577c:	1d460000 	stclne	0, cr0, [r6, #-0]
    5780:	00011000 	andeq	r1, r1, r0
    5784:	10001d46 	andne	r1, r0, r6, asr #26
    5788:	10001d4a 	andne	r1, r0, sl, asr #26
    578c:	09026602 	stmdbeq	r2, {r1, r9, sl, sp, lr}
    5790:	00000dac 	andeq	r0, r0, ip, lsr #27
    5794:	000f9815 	andeq	r9, pc, r5, lsl r8	; <UNPREDICTABLE>
    5798:	002ca400 	eoreq	sl, ip, r0, lsl #8
    579c:	002ca200 	eoreq	sl, ip, r0, lsl #4
    57a0:	64140000 	ldrvs	r0, [r4], #-0
    57a4:	4c00000f 	stcmi	0, cr0, [r0], {15}
    57a8:	0110001d 	tsteq	r0, sp, lsl r0
    57ac:	001d4c00 	andseq	r4, sp, r0, lsl #24
    57b0:	001d5010 	andseq	r5, sp, r0, lsl r0
    57b4:	02680210 	rsbeq	r0, r8, #16, 4
    57b8:	000dd51a 	andeq	sp, sp, sl, lsl r5
    57bc:	0f771500 	svceq	0x00771500
    57c0:	2cb90000 	ldccs	0, cr0, [r9]
    57c4:	2cb70000 	ldccs	0, cr0, [r7]
    57c8:	1b000000 	blne	57d0 <__HEAP_SIZE+0x47d0>
    57cc:	00000f59 	andeq	r0, r0, r9, asr pc
    57d0:	10001d50 	andne	r1, r0, r0, asr sp
    57d4:	1d500003 	ldclne	0, cr0, [r0, #-12]
    57d8:	1d521000 	ldclne	0, cr1, [r2, #-0]
    57dc:	6c021000 	stcvs	0, cr1, [r2], {-0}
    57e0:	3c160902 			; <UNDEFINED> instruction: 0x3c160902
    57e4:	5200000f 	andpl	r0, r0, #15
    57e8:	0110001d 	tsteq	r0, sp, lsl r0
    57ec:	001d5200 	andseq	r5, sp, r0, lsl #4
    57f0:	001d5610 	andseq	r5, sp, r0, lsl r6
    57f4:	026e0210 	rsbeq	r0, lr, #16, 4
    57f8:	0f4b1709 	svceq	0x004b1709
    57fc:	2cce0000 	stclcs	0, cr0, [lr], {0}
    5800:	2ccc0000 	stclcs	0, cr0, [ip], {0}
    5804:	00000000 	andeq	r0, r0, r0
    5808:	001ad61a 	andseq	sp, sl, sl, lsl r6
    580c:	000fc410 	andeq	ip, pc, r0, lsl r4	; <UNPREDICTABLE>
    5810:	50011900 	andpl	r1, r1, r0, lsl #18
    5814:	00cc7403 	sbceq	r7, ip, r3, lsl #8
    5818:	011c0000 	tsteq	ip, r0
    581c:	000019ca 	andeq	r1, r0, sl, asr #19
    5820:	01075001 	tsteq	r7, r1
	...
    582c:	00002ce1 	andeq	r2, r0, r1, ror #25
    5830:	000efe01 	andeq	pc, lr, r1, lsl #28
    5834:	1b241d00 	blne	90cc3c <SYSTEM_CLOCK+0x353ebc>
    5838:	50010000 	andpl	r0, r1, r0
    583c:	00059d2b 	andeq	r9, r5, fp, lsr #26
    5840:	002d0500 	eoreq	r0, sp, r0, lsl #10
    5844:	002d0100 	eoreq	r0, sp, r0, lsl #2
    5848:	18a11200 	stmiane	r1!, {r9, ip}
    584c:	1f010000 	svcne	0x00010000
    5850:	00970102 	addseq	r0, r7, r2, lsl #2
    5854:	2d280000 	stccs	0, cr0, [r8, #-0]
    5858:	2d260000 	stccs	0, cr0, [r6, #-0]
    585c:	5e120000 	cdppl	0, 1, cr0, cr2, cr0, {0}
    5860:	01000009 	tsteq	r0, r9
    5864:	97110223 	ldrls	r0, [r1, -r3, lsr #4]
    5868:	3f000000 	svccc	0x00000000
    586c:	3b00002d 	blcc	5928 <__HEAP_SIZE+0x4928>
    5870:	1400002d 	strne	r0, [r0], #-45	; 0xffffffd3
    5874:	00000f1b 	andeq	r0, r0, fp, lsl pc
    5878:	00000000 	andeq	r0, r0, r0
    587c:	00000003 	andeq	r0, r0, r3
    5880:	00000000 	andeq	r0, r0, r0
    5884:	27010000 	strcs	r0, [r1, -r0]
    5888:	0ecb0502 	cdpeq	5, 12, cr0, cr11, cr2, {0}
    588c:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    5890:	6000000f 	andvs	r0, r0, pc
    5894:	5e00002d 	cdppl	0, 0, cr0, cr0, cr13, {1}
    5898:	1600002d 	strne	r0, [r0], -sp, lsr #32
    589c:	00000f64 	andeq	r0, r0, r4, ror #30
    58a0:	00000000 	andeq	r0, r0, r0
    58a4:	00000006 	andeq	r0, r0, r6
    58a8:	00000000 	andeq	r0, r0, r0
    58ac:	56020000 	strpl	r0, [r2], -r0
    58b0:	77151302 	ldrvc	r1, [r5, -r2, lsl #6]
    58b4:	7500000f 	strvc	r0, [r0, #-15]
    58b8:	7300002d 	movwvc	r0, #45	; 0x2d
    58bc:	0000002d 	andeq	r0, r0, sp, lsr #32
    58c0:	0f3c1400 	svceq	0x003c1400
    58c4:	00000000 	andeq	r0, r0, r0
    58c8:	00010000 	andeq	r0, r1, r0
	...
    58d4:	05026801 	streq	r6, [r2, #-2049]	; 0xfffff7ff
    58d8:	00000ef4 	strdeq	r0, [r0], -r4
    58dc:	000f4b17 	andeq	r4, pc, r7, lsl fp	; <UNPREDICTABLE>
    58e0:	002d8a00 	eoreq	r8, sp, r0, lsl #20
    58e4:	002d8800 	eoreq	r8, sp, r0, lsl #16
    58e8:	001e0000 	andseq	r0, lr, r0
    58ec:	96000000 	strls	r0, [r0], -r0
    58f0:	00000006 	andeq	r0, r0, r6
    58f4:	0019e31f 	andseq	lr, r9, pc, lsl r3
    58f8:	02600200 	rsbeq	r0, r0, #0, 4
    58fc:	1b030137 	blne	c5de0 <SYSTICK_CYCLES+0xb7381>
    5900:	2000000f 	andcs	r0, r0, pc
    5904:	000018a1 	andeq	r1, r0, r1, lsr #17
    5908:	06026202 	streq	r6, [r2], -r2, lsl #4
    590c:	00000097 	muleq	r0, r7, r0
    5910:	18bd2100 	popne	{r8, sp}
    5914:	52020000 	andpl	r0, r2, #0
    5918:	97013702 	strls	r3, [r1, -r2, lsl #14]
    591c:	03000000 	movweq	r0, #0
    5920:	00000f3c 	andeq	r0, r0, ip, lsr pc
    5924:	00187d20 	andseq	r7, r8, r0, lsr #26
    5928:	02540200 	subseq	r0, r4, #0, 4
    592c:	00009706 	andeq	r9, r0, r6, lsl #14
    5930:	691f0000 	ldmdbvs	pc, {}	; <UNPREDICTABLE>
    5934:	02000018 	andeq	r0, r0, #24
    5938:	01370249 	teqeq	r7, r9, asr #4
    593c:	000f5903 	andeq	r5, pc, r3, lsl #18
    5940:	187d2200 	ldmdane	sp!, {r9, sp}^
    5944:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    5948:	00975002 	addseq	r5, r7, r2
    594c:	23000000 	movwcs	r0, #0
    5950:	000019b6 			; <UNDEFINED> instruction: 0x000019b6
    5954:	37024302 	strcc	r4, [r2, -r2, lsl #6]
    5958:	89210301 	stmdbhi	r1!, {r0, r8, r9}
    595c:	02000018 	andeq	r0, r0, #24
    5960:	01370232 	teqeq	r7, r2, lsr r2
    5964:	00000097 	muleq	r0, r7, r0
    5968:	000f8503 	andeq	r8, pc, r3, lsl #10
    596c:	18812000 	stmne	r1, {sp}
    5970:	34020000 	strcc	r0, [r2], #-0
    5974:	00970602 	addseq	r0, r7, r2, lsl #12
    5978:	21000000 	mrscs	r0, (UNDEF: 0)
    597c:	00001aa5 	andeq	r1, r0, r5, lsr #21
    5980:	3701fa02 	strcc	pc, [r1, -r2, lsl #20]
    5984:	00009701 	andeq	r9, r0, r1, lsl #14
    5988:	0fa60300 	svceq	0x00a60300
    598c:	37200000 	strcc	r0, [r0, -r0]!
    5990:	0200001a 	andeq	r0, r0, #26
    5994:	970601fc 			; <UNDEFINED> instruction: 0x970601fc
    5998:	00000000 	andeq	r0, r0, r0
    599c:	7b010124 	blvc	45e34 <SYSTICK_CYCLES+0x373d5>
    59a0:	7b000019 	blvc	5a0c <__HEAP_SIZE+0x4a0c>
    59a4:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    59a8:	240d011b 	strcs	r0, [sp], #-283	; 0xfffffee5
    59ac:	18d20101 	ldmne	r2, {r0, r8}^
    59b0:	18d20000 	ldmne	r2, {}^	; <UNPREDICTABLE>
    59b4:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    59b8:	01250d01 			; <UNDEFINED> instruction: 0x01250d01
    59bc:	00199a01 	andseq	r9, r9, r1, lsl #20
    59c0:	00199a00 	andseq	r9, r9, r0, lsl #20
    59c4:	0d400500 	cfstr64eq	mvdx0, [r0, #-0]
    59c8:	000a7c00 	andeq	r7, sl, r0, lsl #24
    59cc:	ac000200 	sfmge	f0, 4, [r0], {-0}
    59d0:	0400000e 	streq	r0, [r0], #-14
    59d4:	00000f01 	andeq	r0, r0, r1, lsl #30
    59d8:	1ac70c00 	bne	ff1c89e0 <__RAM_segment_used_end__+0xc70c89e0>
    59dc:	019d0000 	orrseq	r0, sp, r0
    59e0:	03080000 	movweq	r0, #32768	; 0x8000
	...
    59ec:	26da0000 	ldrbcs	r0, [sl], r0
    59f0:	04020000 	streq	r0, [r2], #-0
    59f4:	00014407 	andeq	r4, r1, r7, lsl #8
    59f8:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    59fc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    5a00:	5d050802 	stcpl	8, cr0, [r5, #-8]
    5a04:	02000001 	andeq	r0, r0, #1
    5a08:	01510408 	cmpeq	r1, r8, lsl #8
    5a0c:	01020000 	mrseq	r0, (UNDEF: 2)
    5a10:	0000f606 	andeq	pc, r0, r6, lsl #12
    5a14:	08010200 	stmdaeq	r1, {r9}
    5a18:	000000f4 	strdeq	r0, [r0], -r4
    5a1c:	7b050202 	blvc	14622c <__RAM_SIZE+0x4622c>
    5a20:	02000001 	andeq	r0, r0, #1
    5a24:	01020702 	tsteq	r2, r2, lsl #14
    5a28:	04020000 	streq	r0, [r2], #-0
    5a2c:	00016205 	andeq	r6, r1, r5, lsl #4
    5a30:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5a34:	0000013f 	andeq	r0, r0, pc, lsr r1
    5a38:	3a070802 	bcc	1c7a48 <__RAM_SIZE+0xc7a48>
    5a3c:	04000001 	streq	r0, [r0], #-1
    5a40:	08010204 	stmdaeq	r1, {r2, r9}
    5a44:	000000fd 	strdeq	r0, [r0], -sp
    5a48:	0012e905 	andseq	lr, r2, r5, lsl #18
    5a4c:	31730200 	cmncc	r3, r0, lsl #4
    5a50:	00000078 	andeq	r0, r0, r8, ror r0
    5a54:	0012e805 	andseq	lr, r2, r5, lsl #16
    5a58:	31740200 	cmncc	r4, r0, lsl #4
    5a5c:	0000004c 	andeq	r0, r0, ip, asr #32
    5a60:	00114c05 	andseq	r4, r1, r5, lsl #24
    5a64:	31760200 	cmncc	r6, r0, lsl #4
    5a68:	00000029 	andeq	r0, r0, r9, lsr #32
    5a6c:	0010aa05 	andseq	sl, r0, r5, lsl #20
    5a70:	31780200 	cmncc	r8, r0, lsl #4
    5a74:	00000068 	andeq	r0, r0, r8, rrx
    5a78:	000dcb06 	andeq	ip, sp, r6, lsl #22
    5a7c:	82031c00 	andhi	r1, r3, #0, 24
    5a80:	012e1001 			; <UNDEFINED> instruction: 0x012e1001
    5a84:	44070000 	strmi	r0, [r7], #-0
    5a88:	03000012 	movweq	r0, #18
    5a8c:	a3190186 	tstge	r9, #-2147483615	; 0x80000021
    5a90:	02000000 	andeq	r0, r0, #0
    5a94:	ce070023 	cdpgt	0, 0, cr0, cr7, cr3, {1}
    5a98:	0300000b 	movweq	r0, #11
    5a9c:	a3190187 	tstge	r9, #-1073741791	; 0xc0000021
    5aa0:	02000000 	andeq	r0, r0, #0
    5aa4:	6b070423 	blvs	1c6b38 <__RAM_SIZE+0xc6b38>
    5aa8:	0300000c 	movweq	r0, #12
    5aac:	3a1b018a 	bcc	6c60dc <SYSTEM_CLOCK+0x10d35c>
    5ab0:	02000001 	andeq	r0, r0, #1
    5ab4:	f4070823 	vst2.8	{d0-d1}, [r7 :128], r3
    5ab8:	03000008 	movweq	r0, #8
    5abc:	a319018b 	tstge	r9, #-1073741790	; 0xc0000022
    5ac0:	02000000 	andeq	r0, r0, #0
    5ac4:	da070c23 	ble	1c8b58 <__RAM_SIZE+0xc8b58>
    5ac8:	03000013 	movweq	r0, #19
    5acc:	401a0191 	mulsmi	sl, r1, r1
    5ad0:	02000001 	andeq	r0, r0, #1
    5ad4:	5a071023 	bpl	1c9b68 <__RAM_SIZE+0xc9b68>
    5ad8:	03000006 	movweq	r0, #6
    5adc:	401a0192 	mulsmi	sl, r2, r1
    5ae0:	02000001 	andeq	r0, r0, #1
    5ae4:	2f071423 	svccs	0x00071423
    5ae8:	0300000f 	movweq	r0, #15
    5aec:	461b0196 			; <UNDEFINED> instruction: 0x461b0196
    5af0:	02000001 	andeq	r0, r0, #1
    5af4:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    5af8:	00013a01 	andeq	r3, r1, r1, lsl #20
    5afc:	00a30900 	adceq	r0, r3, r0, lsl #18
    5b00:	0a000000 	beq	5b08 <__HEAP_SIZE+0x4b08>
    5b04:	00012e04 	andeq	r2, r1, r4, lsl #28
    5b08:	af040a00 	svcge	0x00040a00
    5b0c:	0a000000 	beq	5b14 <__HEAP_SIZE+0x4b14>
    5b10:	00014004 	andeq	r4, r1, r4
    5b14:	0f7e0b00 	svceq	0x007e0b00
    5b18:	9b030000 	blls	c5b20 <SYSTICK_CYCLES+0xb70c1>
    5b1c:	00af0301 	adceq	r0, pc, r1, lsl #6
    5b20:	040a0000 	streq	r0, [sl], #-0
    5b24:	0000007f 	andeq	r0, r0, pc, ror r0
    5b28:	000b0306 	andeq	r0, fp, r6, lsl #6
    5b2c:	d603d800 	strle	sp, [r3], -r0, lsl #16
    5b30:	04841001 	streq	r1, [r4], #1
    5b34:	31070000 	mrscc	r0, (UNDEF: 7)
    5b38:	03000013 	movweq	r0, #19
    5b3c:	a31901dd 	tstge	r9, #1073741879	; 0x40000037
    5b40:	02000000 	andeq	r0, r0, #0
    5b44:	a3070023 	movwge	r0, #28707	; 0x7023
    5b48:	03000011 	movweq	r0, #17
    5b4c:	a31901de 	tstge	r9, #-2147483593	; 0x80000037
    5b50:	02000000 	andeq	r0, r0, #0
    5b54:	60070423 	andvs	r0, r7, r3, lsr #8
    5b58:	03000008 	movweq	r0, #8
    5b5c:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    5b60:	02000000 	andeq	r0, r0, #0
    5b64:	05070823 	streq	r0, [r7, #-2083]	; 0xfffff7dd
    5b68:	03000013 	movweq	r0, #19
    5b6c:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    5b70:	02000000 	andeq	r0, r0, #0
    5b74:	3f070c23 	svccc	0x00070c23
    5b78:	0300000c 	movweq	r0, #12
    5b7c:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    5b80:	02000000 	andeq	r0, r0, #0
    5b84:	c5071023 	strgt	r1, [r7, #-35]	; 0xffffffdd
    5b88:	03000013 	movweq	r0, #19
    5b8c:	a31901e2 	tstge	r9, #-2147483592	; 0x80000038
    5b90:	02000000 	andeq	r0, r0, #0
    5b94:	30071423 	andcc	r1, r7, r3, lsr #8
    5b98:	0300001b 	movweq	r0, #27
    5b9c:	a31901e3 	tstge	r9, #-1073741768	; 0xc0000038
    5ba0:	02000000 	andeq	r0, r0, #0
    5ba4:	4b071823 	blmi	1cbc38 <__RAM_SIZE+0xcbc38>
    5ba8:	0300000f 	movweq	r0, #15
    5bac:	a31901e4 	tstge	r9, #228, 2	; 0x39
    5bb0:	02000000 	andeq	r0, r0, #0
    5bb4:	ed071c23 	stc	12, cr1, [r7, #-140]	; 0xffffff74
    5bb8:	0300000f 	movweq	r0, #15
    5bbc:	841a01e8 	ldrhi	r0, [sl], #-488	; 0xfffffe18
    5bc0:	02000004 	andeq	r0, r0, #4
    5bc4:	0c072023 	stceq	0, cr2, [r7], {35}	; 0x23
    5bc8:	03000008 	movweq	r0, #8
    5bcc:	841a01e9 	ldrhi	r0, [sl], #-489	; 0xfffffe17
    5bd0:	02000004 	andeq	r0, r0, #4
    5bd4:	a4072423 	strge	r2, [r7], #-1059	; 0xfffffbdd
    5bd8:	0300000e 	movweq	r0, #14
    5bdc:	591a01f1 	ldmdbpl	sl, {r0, r4, r5, r6, r7, r8}
    5be0:	02000001 	andeq	r0, r0, #1
    5be4:	04072823 	streq	r2, [r7], #-2083	; 0xfffff7dd
    5be8:	0300000a 	movweq	r0, #10
    5bec:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    5bf0:	02000000 	andeq	r0, r0, #0
    5bf4:	54072c23 	strpl	r2, [r7], #-3107	; 0xfffff3dd
    5bf8:	03000009 	movweq	r0, #9
    5bfc:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    5c00:	02000000 	andeq	r0, r0, #0
    5c04:	e6073023 	str	r3, [r7], -r3, lsr #32
    5c08:	03000007 	movweq	r0, #7
    5c0c:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    5c10:	02000000 	andeq	r0, r0, #0
    5c14:	e3073423 	movw	r3, #29731	; 0x7423
    5c18:	03000010 	movweq	r0, #16
    5c1c:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    5c20:	02000000 	andeq	r0, r0, #0
    5c24:	f7073823 			; <UNDEFINED> instruction: 0xf7073823
    5c28:	03000006 	movweq	r0, #6
    5c2c:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    5c30:	02000000 	andeq	r0, r0, #0
    5c34:	14073c23 	strne	r3, [r7], #-3107	; 0xfffff3dd
    5c38:	0300000b 	movweq	r0, #11
    5c3c:	9b1b01fb 	blls	6c6430 <SYSTEM_CLOCK+0x10d6b0>
    5c40:	02000004 	andeq	r0, r0, #4
    5c44:	c5074023 	strgt	r4, [r7, #-35]	; 0xffffffdd
    5c48:	03000007 	movweq	r0, #7
    5c4c:	3a1b0203 	bcc	6c6460 <SYSTEM_CLOCK+0x10d6e0>
    5c50:	02000001 	andeq	r0, r0, #1
    5c54:	13074423 	movwne	r4, #29731	; 0x7423
    5c58:	03000007 	movweq	r0, #7
    5c5c:	a3190204 	tstge	r9, #4, 4	; 0x40000000
    5c60:	02000000 	andeq	r0, r0, #0
    5c64:	ea074823 	b	1d7cf8 <__RAM_SIZE+0xd7cf8>
    5c68:	0300000a 	movweq	r0, #10
    5c6c:	4c190208 	lfmmi	f0, 4, [r9], {8}
    5c70:	02000001 	andeq	r0, r0, #1
    5c74:	17074c23 	strne	r4, [r7, -r3, lsr #24]
    5c78:	0300000a 	movweq	r0, #10
    5c7c:	9b1b020e 	blls	6c64bc <SYSTEM_CLOCK+0x10d73c>
    5c80:	02000004 	andeq	r0, r0, #4
    5c84:	c9076823 	stmdbgt	r7, {r0, r1, r5, fp, sp, lr}
    5c88:	0300000e 	movweq	r0, #14
    5c8c:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    5c90:	02000000 	andeq	r0, r0, #0
    5c94:	b0076c23 	andlt	r6, r7, r3, lsr #24
    5c98:	03000010 	movweq	r0, #16
    5c9c:	841a0211 	ldrhi	r0, [sl], #-529	; 0xfffffdef
    5ca0:	02000004 	andeq	r0, r0, #4
    5ca4:	37077023 	strcc	r7, [r7, -r3, lsr #32]
    5ca8:	03000009 	movweq	r0, #9
    5cac:	841a0212 	ldrhi	r0, [sl], #-530	; 0xfffffdee
    5cb0:	02000004 	andeq	r0, r0, #4
    5cb4:	93077423 	movwls	r7, #29731	; 0x7423
    5cb8:	03000010 	movweq	r0, #16
    5cbc:	a3190213 	tstge	r9, #805306369	; 0x30000001
    5cc0:	02000000 	andeq	r0, r0, #0
    5cc4:	f4077823 	vst2.8	{d7-d8}, [r7 :128], r3
    5cc8:	0300000b 	movweq	r0, #11
    5ccc:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    5cd0:	02000000 	andeq	r0, r0, #0
    5cd4:	2a077c23 	bcs	1e4d68 <__RAM_SIZE+0xe4d68>
    5cd8:	0300000e 	movweq	r0, #14
    5cdc:	97190215 			; <UNDEFINED> instruction: 0x97190215
    5ce0:	03000000 	movweq	r0, #0
    5ce4:	07018023 	streq	r8, [r1, -r3, lsr #32]
    5ce8:	00000c16 	andeq	r0, r0, r6, lsl ip
    5cec:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    5cf0:	00000097 	muleq	r0, r7, r0
    5cf4:	01842303 	orreq	r2, r4, r3, lsl #6
    5cf8:	0012ee07 	andseq	lr, r2, r7, lsl #28
    5cfc:	021f0300 	andseq	r0, pc, #0, 6
    5d00:	0004841a 	andeq	r8, r4, sl, lsl r4
    5d04:	88230300 	stmdahi	r3!, {r8, r9}
    5d08:	11f40701 	mvnsne	r0, r1, lsl #14
    5d0c:	20030000 	andcs	r0, r3, r0
    5d10:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    5d14:	23030000 	movwcs	r0, #12288	; 0x3000
    5d18:	cf07018c 	svcgt	0x0007018c
    5d1c:	03000009 	movweq	r0, #9
    5d20:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    5d24:	03000000 	movweq	r0, #0
    5d28:	07019023 	streq	r9, [r1, -r3, lsr #32]
    5d2c:	00000964 	andeq	r0, r0, r4, ror #18
    5d30:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    5d34:	00000097 	muleq	r0, r7, r0
    5d38:	01942303 	orrseq	r2, r4, r3, lsl #6
    5d3c:	000abc07 	andeq	fp, sl, r7, lsl #24
    5d40:	02300300 	eorseq	r0, r0, #0, 6
    5d44:	00009719 	andeq	r9, r0, r9, lsl r7
    5d48:	98230300 	stmdals	r3!, {r8, r9}
    5d4c:	09850701 	stmibeq	r5, {r0, r8, r9, sl}
    5d50:	33030000 	movwcc	r0, #12288	; 0x3000
    5d54:	00971902 	addseq	r1, r7, r2, lsl #18
    5d58:	23030000 	movwcs	r0, #12288	; 0x3000
    5d5c:	3f07019c 	svccc	0x0007019c
    5d60:	03000006 	movweq	r0, #6
    5d64:	801a0235 	andshi	r0, sl, r5, lsr r2
    5d68:	03000005 	movweq	r0, #5
    5d6c:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    5d70:	000015e1 	andeq	r1, r0, r1, ror #11
    5d74:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    5d78:	000000a3 	andeq	r0, r0, r3, lsr #1
    5d7c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    5d80:	0016d007 	andseq	sp, r6, r7
    5d84:	023d0300 	eorseq	r0, sp, #0, 6
    5d88:	0000a319 	andeq	sl, r0, r9, lsl r3
    5d8c:	a8230300 	stmdage	r3!, {r8, r9}
    5d90:	155a0701 	ldrbne	r0, [sl, #-1793]	; 0xfffff8ff
    5d94:	41030000 	mrsmi	r0, (UNDEF: 3)
    5d98:	00a31902 	adceq	r1, r3, r2, lsl #18
    5d9c:	23030000 	movwcs	r0, #12288	; 0x3000
    5da0:	870701ac 	strhi	r0, [r7, -ip, lsr #3]
    5da4:	03000017 	movweq	r0, #23
    5da8:	a3190245 	tstge	r9, #1342177284	; 0x50000004
    5dac:	03000000 	movweq	r0, #0
    5db0:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    5db4:	00001689 	andeq	r1, r0, r9, lsl #13
    5db8:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    5dbc:	000000a3 	andeq	r0, r0, r3, lsr #1
    5dc0:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    5dc4:	0011c707 	andseq	ip, r1, r7, lsl #14
    5dc8:	024c0300 	subeq	r0, ip, #0, 6
    5dcc:	0004841a 	andeq	r8, r4, sl, lsl r4
    5dd0:	b8230300 	stmdalt	r3!, {r8, r9}
    5dd4:	175f0701 	ldrbne	r0, [pc, -r1, lsl #14]
    5dd8:	4f030000 	svcmi	0x00030000
    5ddc:	00a31902 	adceq	r1, r3, r2, lsl #18
    5de0:	23030000 	movwcs	r0, #12288	; 0x3000
    5de4:	320701bc 	andcc	r0, r7, #188, 2	; 0x2f
    5de8:	03000015 	movweq	r0, #21
    5dec:	a3190252 	tstge	r9, #536870917	; 0x20000005
    5df0:	03000000 	movweq	r0, #0
    5df4:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    5df8:	00001498 	muleq	r0, r8, r4
    5dfc:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    5e00:	000000a3 	andeq	r0, r0, r3, lsr #1
    5e04:	01c42303 	biceq	r2, r4, r3, lsl #6
    5e08:	00160507 	andseq	r0, r6, r7, lsl #10
    5e0c:	02590300 	subseq	r0, r9, #0, 6
    5e10:	0000a319 	andeq	sl, r0, r9, lsl r3
    5e14:	c8230300 	stmdagt	r3!, {r8, r9}
    5e18:	140b0701 	strne	r0, [fp], #-1793	; 0xfffff8ff
    5e1c:	5d030000 	stcpl	0, cr0, [r3, #-0]
    5e20:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    5e24:	23030000 	movwcs	r0, #12288	; 0x3000
    5e28:	e40701cc 	str	r0, [r7], #-460	; 0xfffffe34
    5e2c:	0300000c 	movweq	r0, #12
    5e30:	a3190278 	tstge	r9, #120, 4	; 0x80000007
    5e34:	03000000 	movweq	r0, #0
    5e38:	0701d023 	streq	sp, [r1, -r3, lsr #32]
    5e3c:	00000e65 	andeq	r0, r0, r5, ror #28
    5e40:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    5e44:	000000a3 	andeq	r0, r0, r3, lsr #1
    5e48:	01d42303 	bicseq	r2, r4, r3, lsl #6
    5e4c:	5f040a00 	svcpl	0x00040a00
    5e50:	08000001 	stmdaeq	r0, {r0}
    5e54:	00049b01 	andeq	r9, r4, r1, lsl #22
    5e58:	04840900 	streq	r0, [r4], #2304	; 0x900
    5e5c:	a3090000 	movwge	r0, #36864	; 0x9000
    5e60:	00000000 	andeq	r0, r0, r0
    5e64:	048a040a 	streq	r0, [sl], #1034	; 0x40a
    5e68:	b7060000 	strlt	r0, [r6, -r0]
    5e6c:	34000011 	strcc	r0, [r0], #-17	; 0xffffffef
    5e70:	10037e03 	andne	r7, r3, r3, lsl #28
    5e74:	00000580 	andeq	r0, r0, r0, lsl #11
    5e78:	00080007 	andeq	r0, r8, r7
    5e7c:	03820300 	orreq	r0, r2, #0, 6
    5e80:	0000a319 	andeq	sl, r0, r9, lsl r3
    5e84:	00230200 	eoreq	r0, r3, r0, lsl #4
    5e88:	00128407 	andseq	r8, r2, r7, lsl #8
    5e8c:	03850300 	orreq	r0, r5, #0, 6
    5e90:	0001591a 	andeq	r5, r1, sl, lsl r9
    5e94:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    5e98:	00107a07 	andseq	r7, r0, r7, lsl #20
    5e9c:	03880300 	orreq	r0, r8, #0, 6
    5ea0:	00009719 	andeq	r9, r0, r9, lsl r7
    5ea4:	08230200 	stmdaeq	r3!, {r9}
    5ea8:	000d3a07 	andeq	r3, sp, r7, lsl #20
    5eac:	038c0300 	orreq	r0, ip, #0, 6
    5eb0:	0005931a 	andeq	r9, r5, sl, lsl r3
    5eb4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    5eb8:	0007d507 	andeq	sp, r7, r7, lsl #10
    5ebc:	03900300 	orrseq	r0, r0, #0, 6
    5ec0:	00009719 	andeq	r9, r0, r9, lsl r7
    5ec4:	10230200 	eorne	r0, r3, r0, lsl #4
    5ec8:	00074107 	andeq	r4, r7, r7, lsl #2
    5ecc:	03930300 	orrseq	r0, r3, #0, 6
    5ed0:	00009719 	andeq	r9, r0, r9, lsl r7
    5ed4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    5ed8:	0012c507 	andseq	ip, r2, r7, lsl #10
    5edc:	03980300 	orrseq	r0, r8, #0, 6
    5ee0:	0004841a 	andeq	r8, r4, sl, lsl r4
    5ee4:	18230200 	stmdane	r3!, {r9}
    5ee8:	00104b07 	andseq	r4, r0, r7, lsl #22
    5eec:	03990300 	orrseq	r0, r9, #0, 6
    5ef0:	00009719 	andeq	r9, r0, r9, lsl r7
    5ef4:	1c230200 	sfmne	f0, 4, [r3], #-0
    5ef8:	000eb307 	andeq	fp, lr, r7, lsl #6
    5efc:	039d0300 	orrseq	r0, sp, #0, 6
    5f00:	0005801a 	andeq	r8, r5, sl, lsl r0
    5f04:	20230200 	eorcs	r0, r3, r0, lsl #4
    5f08:	000fb607 	andeq	fp, pc, r7, lsl #12
    5f0c:	039e0300 	orrseq	r0, lr, #0, 6
    5f10:	0005801a 	andeq	r8, r5, sl, lsl r0
    5f14:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    5f18:	0008d207 	andeq	sp, r8, r7, lsl #4
    5f1c:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    5f20:	00009719 	andeq	r9, r0, r9, lsl r7
    5f24:	28230200 	stmdacs	r3!, {r9}
    5f28:	00143607 	andseq	r3, r4, r7, lsl #12
    5f2c:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    5f30:	0005801a 	andeq	r8, r5, sl, lsl r0
    5f34:	2c230200 	sfmcs	f0, 4, [r3], #-0
    5f38:	000c5307 	andeq	r5, ip, r7, lsl #6
    5f3c:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    5f40:	0005801a 	andeq	r8, r5, sl, lsl r0
    5f44:	30230200 	eorcc	r0, r3, r0, lsl #4
    5f48:	a1040a00 	tstge	r4, r0, lsl #20
    5f4c:	0b000004 	bleq	5f64 <__HEAP_SIZE+0x4f64>
    5f50:	000012de 	ldrdeq	r1, [r0], -lr
    5f54:	03028603 	movweq	r8, #9731	; 0x2603
    5f58:	0000015f 	andeq	r0, r0, pc, asr r1
    5f5c:	0586040a 	streq	r0, [r6, #1034]	; 0x40a
    5f60:	b20c0000 	andlt	r0, ip, #0
    5f64:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    5f68:	00a3215a 	adceq	r2, r3, sl, asr r1
    5f6c:	01010000 	mrseq	r0, (UNDEF: 1)
    5f70:	001b020c 	andseq	r0, fp, ip, lsl #4
    5f74:	21600400 	cmncs	r0, r0, lsl #8
    5f78:	00000097 	muleq	r0, r7, r0
    5f7c:	d30d0101 	movwle	r0, #53505	; 0xd101
    5f80:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    5f84:	93210139 			; <UNDEFINED> instruction: 0x93210139
    5f88:	01000005 	tsteq	r0, r5
    5f8c:	15010d01 	strne	r0, [r1, #-3329]	; 0xfffff2ff
    5f90:	40050000 	andmi	r0, r5, r0
    5f94:	05932101 	ldreq	r2, [r3, #257]	; 0x101
    5f98:	01010000 	mrseq	r0, (UNDEF: 1)
    5f9c:	0014bc0d 	andseq	fp, r4, sp, lsl #24
    5fa0:	017f0500 	cmneq	pc, r0, lsl #10
    5fa4:	00009721 	andeq	r9, r0, r1, lsr #14
    5fa8:	0e010100 	adfeqs	f0, f1, f0
    5fac:	00000593 	muleq	r0, r3, r5
    5fb0:	000005f2 	strdeq	r0, [r0], -r2
    5fb4:	0000290f 	andeq	r2, r0, pc, lsl #18
    5fb8:	0d001f00 	stceq	15, cr1, [r0, #-0]
    5fbc:	0000183e 	andeq	r1, r0, lr, lsr r8
    5fc0:	21018705 	tstcs	r1, r5, lsl #14
    5fc4:	000005e2 	andeq	r0, r0, r2, ror #11
    5fc8:	5e0d0101 	adfple	f0, f5, f1
    5fcc:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    5fd0:	a32101ea 			; <UNDEFINED> instruction: 0xa32101ea
    5fd4:	01000000 	mrseq	r0, (UNDEF: 0)
    5fd8:	2f011001 	svccs	0x00011001
    5fdc:	0100001b 	tsteq	r0, fp, lsl r0
    5fe0:	f001074e 			; <UNDEFINED> instruction: 0xf001074e
    5fe4:	6c10001d 	ldcvs	0, cr0, [r0], {29}
    5fe8:	9d10001f 	ldcls	0, cr0, [r0, #-124]	; 0xffffff84
    5fec:	0100002d 	tsteq	r0, sp, lsr #32
    5ff0:	00000a02 	andeq	r0, r0, r2, lsl #20
    5ff4:	0018a111 	andseq	sl, r8, r1, lsl r1
    5ff8:	01510100 	cmpeq	r1, r0, lsl #2
    5ffc:	00000097 	muleq	r0, r7, r0
    6000:	00002dc1 	andeq	r2, r0, r1, asr #27
    6004:	00002dbd 			; <UNDEFINED> instruction: 0x00002dbd
    6008:	001b2411 	andseq	r2, fp, r1, lsl r4
    600c:	12530100 	subsne	r0, r3, #0, 2
    6010:	00000593 	muleq	r0, r3, r5
    6014:	00002de1 	andeq	r2, r0, r1, ror #27
    6018:	00002ddf 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    601c:	001b1f11 	andseq	r1, fp, r1, lsl pc
    6020:	12550100 	subsne	r0, r5, #0, 2
    6024:	00000593 	muleq	r0, r3, r5
    6028:	00002dfa 	strdeq	r2, [r0], -sl
    602c:	00002df4 	strdeq	r2, [r0], -r4
    6030:	0002a812 	andeq	sl, r2, r2, lsl r8
    6034:	0007ff00 	andeq	pc, r7, r0, lsl #30
    6038:	18a11100 	stmiane	r1!, {r8, ip}
    603c:	62010000 	andvs	r0, r1, #0
    6040:	00009705 	andeq	r9, r0, r5, lsl #14
    6044:	002e2d00 	eoreq	r2, lr, r0, lsl #26
    6048:	002e2500 	eoreq	r2, lr, r0, lsl #10
    604c:	0a021300 	beq	8ac54 <SYSTICK_CYCLES+0x7c1f5>
    6050:	1df60000 	ldclne	0, cr0, [r6]
    6054:	f6021000 			; <UNDEFINED> instruction: 0xf6021000
    6058:	fc10001d 	ldc2	0, cr0, [r0], {29}
    605c:	0110001d 	tsteq	r0, sp, lsl r0
    6060:	06cf0562 	strbeq	r0, [pc], r2, ror #10
    6064:	15140000 	ldrne	r0, [r4, #-0]
    6068:	6700000a 	strvs	r0, [r0, -sl]
    606c:	6100002e 	tstvs	r0, lr, lsr #32
    6070:	1500002e 	strne	r0, [r0, #-46]	; 0xffffffd2
    6074:	00000a40 	andeq	r0, r0, r0, asr #20
    6078:	10001df6 	strdne	r1, [r0], -r6
    607c:	001df605 	andseq	pc, sp, r5, lsl #12
    6080:	001dfa10 	andseq	pc, sp, r0, lsl sl	; <UNPREDICTABLE>
    6084:	02560210 	subseq	r0, r6, #16, 4
    6088:	0a531413 	beq	14cb0dc <SYSTEM_CLOCK+0xf1235c>
    608c:	2e920000 	cdpcs	0, 9, cr0, cr2, cr0, {0}
    6090:	2e900000 	cdpcs	0, 9, cr0, cr0, cr0, {0}
    6094:	00000000 	andeq	r0, r0, r0
    6098:	000a2313 	andeq	r2, sl, r3, lsl r3
    609c:	001e0600 	andseq	r0, lr, r0, lsl #12
    60a0:	1e060110 	fltnes	f6, r0
    60a4:	1e0a1000 	cdpne	0, 0, cr1, cr10, cr0, {0}
    60a8:	62011000 	andvs	r1, r1, #0
    60ac:	0006f605 	andeq	pc, r6, r5, lsl #12
    60b0:	0a321600 	beq	c8b8b8 <SYSTEM_CLOCK+0x6d2b38>
    60b4:	2ea70000 	cdpcs	0, 10, cr0, cr7, cr0, {0}
    60b8:	2ea50000 	cdpcs	0, 10, cr0, cr5, cr0, {0}
    60bc:	13000000 	movwne	r0, #0
    60c0:	00000a23 	andeq	r0, r0, r3, lsr #20
    60c4:	10001e46 	andne	r1, r0, r6, asr #28
    60c8:	001e4601 	andseq	r4, lr, r1, lsl #12
    60cc:	001e4a10 	andseq	r4, lr, r0, lsl sl
    60d0:	05620110 	strbeq	r0, [r2, #-272]!	; 0xfffffef0
    60d4:	0000071d 	andeq	r0, r0, sp, lsl r7
    60d8:	000a3216 	andeq	r3, sl, r6, lsl r2
    60dc:	002ebc00 	eoreq	fp, lr, r0, lsl #24
    60e0:	002eba00 	eoreq	fp, lr, r0, lsl #20
    60e4:	02130000 	andseq	r0, r3, #0
    60e8:	5000000a 	andpl	r0, r0, sl
    60ec:	0110001e 	tsteq	r0, lr, lsl r0
    60f0:	10001e50 	andne	r1, r0, r0, asr lr
    60f4:	10001e56 	andne	r1, r0, r6, asr lr
    60f8:	68056201 	stmdavs	r5, {r0, r9, sp, lr}
    60fc:	14000007 	strne	r0, [r0], #-7
    6100:	00000a15 	andeq	r0, r0, r5, lsl sl
    6104:	00002ed1 	ldrdeq	r2, [r0], -r1
    6108:	00002ecf 	andeq	r2, r0, pc, asr #29
    610c:	000a4015 	andeq	r4, sl, r5, lsl r0
    6110:	001e5000 	andseq	r5, lr, r0
    6114:	1e500410 	mrcne	4, 2, r0, cr0, cr0, {0}
    6118:	1e541000 	cdpne	0, 5, cr1, cr4, cr0, {0}
    611c:	56021000 	strpl	r1, [r2], -r0
    6120:	53141302 	tstpl	r4, #134217728	; 0x8000000
    6124:	e600000a 	str	r0, [r0], -sl
    6128:	e400002e 	str	r0, [r0], #-46	; 0xffffffd2
    612c:	0000002e 	andeq	r0, r0, lr, lsr #32
    6130:	0a231300 	beq	8cad38 <SYSTEM_CLOCK+0x311fb8>
    6134:	1e660000 	cdpne	0, 6, cr0, cr6, cr0, {0}
    6138:	66011000 	strvs	r1, [r1], -r0
    613c:	6a10001e 	bvs	4061bc <__RAM_SIZE+0x3061bc>
    6140:	0110001e 	tsteq	r0, lr, lsl r0
    6144:	078f0562 	streq	r0, [pc, r2, ror #10]
    6148:	32160000 	andscc	r0, r6, #0
    614c:	fb00000a 	blx	617e <__HEAP_SIZE+0x517e>
    6150:	f900002e 			; <UNDEFINED> instruction: 0xf900002e
    6154:	0000002e 	andeq	r0, r0, lr, lsr #32
    6158:	000a0213 	andeq	r0, sl, r3, lsl r2
    615c:	001e7000 	andseq	r7, lr, r0
    6160:	1e700110 	mrcne	1, 3, r0, cr0, cr0, {0}
    6164:	1e781000 	cdpne	0, 7, cr1, cr8, cr0, {0}
    6168:	62011000 	andvs	r1, r1, #0
    616c:	0007da05 	andeq	sp, r7, r5, lsl #20
    6170:	0a151400 	beq	54b178 <__RAM_SIZE+0x44b178>
    6174:	2f100000 	svccs	0x00100000
    6178:	2f0e0000 	svccs	0x000e0000
    617c:	40150000 	andsmi	r0, r5, r0
    6180:	7000000a 	andvc	r0, r0, sl
    6184:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    6188:	10001e70 	andne	r1, r0, r0, ror lr
    618c:	10001e74 	andne	r1, r0, r4, ror lr
    6190:	13025602 	movwne	r5, #9730	; 0x2602
    6194:	000a5314 	andeq	r5, sl, r4, lsl r3
    6198:	002f2500 	eoreq	r2, pc, r0, lsl #10
    619c:	002f2300 	eoreq	r2, pc, r0, lsl #6
    61a0:	17000000 	strne	r0, [r0, -r0]
    61a4:	10001e50 	andne	r1, r0, r0, asr lr
    61a8:	00000a61 	andeq	r0, r0, r1, ror #20
    61ac:	000007ee 	andeq	r0, r0, lr, ror #15
    61b0:	02500118 	subseq	r0, r0, #24, 2
    61b4:	19000074 	stmdbne	r0, {r2, r4, r5, r6}
    61b8:	10001e70 	andne	r1, r0, r0, ror lr
    61bc:	00000a70 	andeq	r0, r0, r0, ror sl
    61c0:	02500118 	subseq	r0, r0, #24, 2
    61c4:	00000074 	andeq	r0, r0, r4, ror r0
    61c8:	0002f012 	andeq	pc, r2, r2, lsl r0	; <UNPREDICTABLE>
    61cc:	00099700 	andeq	r9, r9, r0, lsl #14
    61d0:	18a11100 	stmiane	r1!, {r8, ip}
    61d4:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    61d8:	00009709 	andeq	r9, r0, r9, lsl #14
    61dc:	002f3e00 	eoreq	r3, pc, r0, lsl #28
    61e0:	002f3800 	eoreq	r3, pc, r0, lsl #16
    61e4:	0a021300 	beq	8adec <SYSTICK_CYCLES+0x7c38d>
    61e8:	1ed60000 	cdpne	0, 13, cr0, cr6, cr0, {0}
    61ec:	d6021000 	strle	r1, [r2], -r0
    61f0:	dc10001e 	ldcle	0, cr0, [r0], {30}
    61f4:	0110001e 	tsteq	r0, lr, lsl r0
    61f8:	086709b8 	stmdaeq	r7!, {r3, r4, r5, r7, r8, fp}^
    61fc:	15140000 	ldrne	r0, [r4, #-0]
    6200:	6d00000a 	stcvs	0, cr0, [r0, #-40]	; 0xffffffd8
    6204:	6700002f 	strvs	r0, [r0, -pc, lsr #32]
    6208:	1500002f 	strne	r0, [r0, #-47]	; 0xffffffd1
    620c:	00000a40 	andeq	r0, r0, r0, asr #20
    6210:	10001ed6 	ldrdne	r1, [r0], -r6
    6214:	001ed605 	andseq	sp, lr, r5, lsl #12
    6218:	001eda10 	andseq	sp, lr, r0, lsl sl
    621c:	02560210 	subseq	r0, r6, #16, 4
    6220:	0a531413 	beq	14cb274 <SYSTEM_CLOCK+0xf124f4>
    6224:	2f980000 	svccs	0x00980000
    6228:	2f960000 	svccs	0x00960000
    622c:	00000000 	andeq	r0, r0, r0
    6230:	000a2313 	andeq	r2, sl, r3, lsl r3
    6234:	001ee400 	andseq	lr, lr, r0, lsl #8
    6238:	1ee40110 	mcrne	1, 7, r0, cr4, cr0, {0}
    623c:	1ee81000 	cdpne	0, 14, cr1, cr8, cr0, {0}
    6240:	b8011000 	stmdalt	r1, {ip}
    6244:	00088e09 	andeq	r8, r8, r9, lsl #28
    6248:	0a321600 	beq	c8ba50 <SYSTEM_CLOCK+0x6d2cd0>
    624c:	2fad0000 	svccs	0x00ad0000
    6250:	2fab0000 	svccs	0x00ab0000
    6254:	13000000 	movwne	r0, #0
    6258:	00000a23 	andeq	r0, r0, r3, lsr #20
    625c:	10001f0e 	andne	r1, r0, lr, lsl #30
    6260:	001f0e01 	andseq	r0, pc, r1, lsl #28
    6264:	001f1210 	andseq	r1, pc, r0, lsl r2	; <UNPREDICTABLE>
    6268:	09b80110 	ldmibeq	r8!, {r4, r8}
    626c:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
    6270:	000a3216 	andeq	r3, sl, r6, lsl r2
    6274:	002fc200 	eoreq	ip, pc, r0, lsl #4
    6278:	002fc000 	eoreq	ip, pc, r0
    627c:	02130000 	andseq	r0, r3, #0
    6280:	1800000a 	stmdane	r0, {r1, r3}
    6284:	0110001f 	tsteq	r0, pc, lsl r0
    6288:	10001f18 	andne	r1, r0, r8, lsl pc
    628c:	10001f1e 	andne	r1, r0, lr, lsl pc
    6290:	0009b801 	andeq	fp, r9, r1, lsl #16
    6294:	14000009 	strne	r0, [r0], #-9
    6298:	00000a15 	andeq	r0, r0, r5, lsl sl
    629c:	00002fd7 	ldrdeq	r2, [r0], -r7
    62a0:	00002fd5 	ldrdeq	r2, [r0], -r5
    62a4:	000a4015 	andeq	r4, sl, r5, lsl r0
    62a8:	001f1800 	andseq	r1, pc, r0, lsl #16
    62ac:	1f180410 	svcne	0x00180410
    62b0:	1f1c1000 	svcne	0x001c1000
    62b4:	56021000 	strpl	r1, [r2], -r0
    62b8:	53141302 	tstpl	r4, #134217728	; 0x8000000
    62bc:	ec00000a 	stc	0, cr0, [r0], {10}
    62c0:	ea00002f 	b	6384 <__HEAP_SIZE+0x5384>
    62c4:	0000002f 	andeq	r0, r0, pc, lsr #32
    62c8:	0a231300 	beq	8caed0 <SYSTEM_CLOCK+0x312150>
    62cc:	1f2e0000 	svcne	0x002e0000
    62d0:	2e011000 	cdpcs	0, 0, cr1, cr1, cr0, {0}
    62d4:	3210001f 	andscc	r0, r0, #31
    62d8:	0110001f 	tsteq	r0, pc, lsl r0
    62dc:	092709b8 	stmdbeq	r7!, {r3, r4, r5, r7, r8, fp}
    62e0:	32160000 	andscc	r0, r6, #0
    62e4:	0100000a 	tsteq	r0, sl
    62e8:	ff000030 			; <UNDEFINED> instruction: 0xff000030
    62ec:	0000002f 	andeq	r0, r0, pc, lsr #32
    62f0:	000a0213 	andeq	r0, sl, r3, lsl r2
    62f4:	001f3800 	andseq	r3, pc, r0, lsl #16
    62f8:	1f380110 	svcne	0x00380110
    62fc:	1f401000 	svcne	0x00401000
    6300:	b8011000 	stmdalt	r1, {ip}
    6304:	00097209 	andeq	r7, r9, r9, lsl #4
    6308:	0a151400 	beq	54b310 <__RAM_SIZE+0x44b310>
    630c:	30160000 	andscc	r0, r6, r0
    6310:	30140000 	andscc	r0, r4, r0
    6314:	40150000 	andsmi	r0, r5, r0
    6318:	3800000a 	stmdacc	r0, {r1, r3}
    631c:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    6320:	10001f38 	andne	r1, r0, r8, lsr pc
    6324:	10001f3c 	andne	r1, r0, ip, lsr pc
    6328:	13025602 	movwne	r5, #9730	; 0x2602
    632c:	000a5314 	andeq	r5, sl, r4, lsl r3
    6330:	00302b00 	eorseq	r2, r0, r0, lsl #22
    6334:	00302900 	eorseq	r2, r0, r0, lsl #18
    6338:	17000000 	strne	r0, [r0, -r0]
    633c:	10001f18 	andne	r1, r0, r8, lsl pc
    6340:	00000a61 	andeq	r0, r0, r1, ror #20
    6344:	00000986 	andeq	r0, r0, r6, lsl #19
    6348:	02500118 	subseq	r0, r0, #24, 2
    634c:	19000075 	stmdbne	r0, {r0, r2, r4, r5, r6}
    6350:	10001f38 	andne	r1, r0, r8, lsr pc
    6354:	00000a70 	andeq	r0, r0, r0, ror sl
    6358:	02500118 	subseq	r0, r0, #24, 2
    635c:	00000075 	andeq	r0, r0, r5, ror r0
    6360:	000a0213 	andeq	r0, sl, r3, lsl r2
    6364:	001e0a00 	andseq	r0, lr, r0, lsl #20
    6368:	1e0a0310 	mcrne	3, 0, r0, cr10, cr0, {0}
    636c:	1e101000 	cdpne	0, 1, cr1, cr0, cr0, {0}
    6370:	69011000 	stmdbvs	r1, {ip}
    6374:	0009e205 	andeq	lr, r9, r5, lsl #4
    6378:	0a151400 	beq	54b380 <__RAM_SIZE+0x44b380>
    637c:	30420000 	subcc	r0, r2, r0
    6380:	303e0000 	eorscc	r0, lr, r0
    6384:	40150000 	andsmi	r0, r5, r0
    6388:	0a00000a 	beq	63b8 <__HEAP_SIZE+0x53b8>
    638c:	0610001e 			; <UNDEFINED> instruction: 0x0610001e
    6390:	10001e0a 	andne	r1, r0, sl, lsl #28
    6394:	10001e0e 	andne	r1, r0, lr, lsl #28
    6398:	13025602 	movwne	r5, #9730	; 0x2602
    639c:	000a5314 	andeq	r5, sl, r4, lsl r3
    63a0:	00306200 	eorseq	r6, r0, r0, lsl #4
    63a4:	00306000 	eorseq	r6, r0, r0
    63a8:	1a000000 	bne	63b0 <__HEAP_SIZE+0x53b0>
    63ac:	00000a23 	andeq	r0, r0, r3, lsr #20
    63b0:	10001e1c 	andne	r1, r0, ip, lsl lr
    63b4:	0002c001 	andeq	ip, r2, r1
    63b8:	05af0100 	streq	r0, [pc, #256]!	; 64c0 <__HEAP_SIZE+0x54c0>
    63bc:	000a3216 	andeq	r3, sl, r6, lsl r2
    63c0:	00307f00 	eorseq	r7, r0, r0, lsl #30
    63c4:	00307500 	eorseq	r7, r0, r0, lsl #10
    63c8:	1b000000 	blne	63d0 <__HEAP_SIZE+0x53d0>
    63cc:	000018bd 			; <UNDEFINED> instruction: 0x000018bd
    63d0:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    63d4:	00009701 	andeq	r9, r0, r1, lsl #14
    63d8:	0a230300 	beq	8c6fe0 <SYSTEM_CLOCK+0x30e260>
    63dc:	7d1c0000 	ldcvc	0, cr0, [ip, #-0]
    63e0:	02000018 	andeq	r0, r0, #24
    63e4:	97060254 	smlsdls	r6, r4, r2, r0
    63e8:	00000000 	andeq	r0, r0, r0
    63ec:	0018691d 	andseq	r6, r8, sp, lsl r9
    63f0:	02490200 	subeq	r0, r9, #0, 4
    63f4:	40030137 	andmi	r0, r3, r7, lsr r1
    63f8:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    63fc:	0000187d 	andeq	r1, r0, sp, ror r8
    6400:	50024902 	andpl	r4, r2, r2, lsl #18
    6404:	00000097 	muleq	r0, r7, r0
    6408:	18891b00 	stmne	r9, {r8, r9, fp, ip}
    640c:	32020000 	andcc	r0, r2, #0
    6410:	97013702 	strls	r3, [r1, -r2, lsl #14]
    6414:	03000000 	movweq	r0, #0
    6418:	00000a61 	andeq	r0, r0, r1, ror #20
    641c:	0018811c 	andseq	r8, r8, ip, lsl r1
    6420:	02340200 	eorseq	r0, r4, #0, 4
    6424:	00009706 	andeq	r9, r0, r6, lsl #14
    6428:	011f0000 	tsteq	pc, r0
    642c:	00197b01 	andseq	r7, r9, r1, lsl #22
    6430:	00197b00 	andseq	r7, r9, r0, lsl #22
    6434:	011b0500 	tsteq	fp, r0, lsl #10
    6438:	01011f0d 	tsteq	r1, sp, lsl #30
    643c:	000018d2 	ldrdeq	r1, [r0], -r2
    6440:	000018d2 	ldrdeq	r1, [r0], -r2
    6444:	0d011805 	stceq	8, cr1, [r1, #-20]	; 0xffffffec
    6448:	0006b100 	andeq	fp, r6, r0, lsl #2
    644c:	81000200 	mrshi	r0, R8_usr
    6450:	04000010 	streq	r0, [r0], #-16
    6454:	00000f01 	andeq	r0, r0, r1, lsl #30
    6458:	1b450c00 	blne	1149460 <SYSTEM_CLOCK+0xb906e0>
    645c:	019d0000 	orrseq	r0, sp, r0
    6460:	03180000 	tsteq	r8, #0
	...
    646c:	2b470000 	blcs	11c6474 <SYSTEM_CLOCK+0xc0d6f4>
    6470:	04020000 	streq	r0, [r2], #-0
    6474:	00014407 	andeq	r4, r1, r7, lsl #8
    6478:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    647c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    6480:	5d050802 	stcpl	8, cr0, [r5, #-8]
    6484:	02000001 	andeq	r0, r0, #1
    6488:	01510408 	cmpeq	r1, r8, lsl #8
    648c:	01020000 	mrseq	r0, (UNDEF: 2)
    6490:	0000f606 	andeq	pc, r0, r6, lsl #12
    6494:	08010200 	stmdaeq	r1, {r9}
    6498:	000000f4 	strdeq	r0, [r0], -r4
    649c:	7b050202 	blvc	146cac <__RAM_SIZE+0x46cac>
    64a0:	02000001 	andeq	r0, r0, #1
    64a4:	01020702 	tsteq	r2, r2, lsl #14
    64a8:	04020000 	streq	r0, [r2], #-0
    64ac:	00016205 	andeq	r6, r1, r5, lsl #4
    64b0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    64b4:	0000013f 	andeq	r0, r0, pc, lsr r1
    64b8:	3a070802 	bcc	1c84c8 <__RAM_SIZE+0xc84c8>
    64bc:	04000001 	streq	r0, [r0], #-1
    64c0:	08010204 	stmdaeq	r1, {r2, r9}
    64c4:	000000fd 	strdeq	r0, [r0], -sp
    64c8:	0012e905 	andseq	lr, r2, r5, lsl #18
    64cc:	31730200 	cmncc	r3, r0, lsl #4
    64d0:	00000078 	andeq	r0, r0, r8, ror r0
    64d4:	00114c05 	andseq	r4, r1, r5, lsl #24
    64d8:	31760200 	cmncc	r6, r0, lsl #4
    64dc:	00000029 	andeq	r0, r0, r9, lsr #32
    64e0:	0010aa05 	andseq	sl, r0, r5, lsl #20
    64e4:	31780200 	cmncc	r8, r0, lsl #4
    64e8:	00000068 	andeq	r0, r0, r8, rrx
    64ec:	000dcb06 	andeq	ip, sp, r6, lsl #22
    64f0:	82031c00 	andhi	r1, r3, #0, 24
    64f4:	01221001 			; <UNDEFINED> instruction: 0x01221001
    64f8:	44070000 	strmi	r0, [r7], #-0
    64fc:	03000012 	movweq	r0, #18
    6500:	97190186 	ldrls	r0, [r9, -r6, lsl #3]
    6504:	02000000 	andeq	r0, r0, #0
    6508:	ce070023 	cdpgt	0, 0, cr0, cr7, cr3, {1}
    650c:	0300000b 	movweq	r0, #11
    6510:	97190187 	ldrls	r0, [r9, -r7, lsl #3]
    6514:	02000000 	andeq	r0, r0, #0
    6518:	6b070423 	blvs	1c75ac <__RAM_SIZE+0xc75ac>
    651c:	0300000c 	movweq	r0, #12
    6520:	2e1b018a 	mufcs<illegal precision>	f0, f3, #2.0
    6524:	02000001 	andeq	r0, r0, #1
    6528:	f4070823 	vst2.8	{d0-d1}, [r7 :128], r3
    652c:	03000008 	movweq	r0, #8
    6530:	9719018b 	ldrls	r0, [r9, -fp, lsl #3]
    6534:	02000000 	andeq	r0, r0, #0
    6538:	da070c23 	ble	1c95cc <__RAM_SIZE+0xc95cc>
    653c:	03000013 	movweq	r0, #19
    6540:	341a0191 	ldrcc	r0, [sl], #-401	; 0xfffffe6f
    6544:	02000001 	andeq	r0, r0, #1
    6548:	5a071023 	bpl	1ca5dc <__RAM_SIZE+0xca5dc>
    654c:	03000006 	movweq	r0, #6
    6550:	341a0192 	ldrcc	r0, [sl], #-402	; 0xfffffe6e
    6554:	02000001 	andeq	r0, r0, #1
    6558:	2f071423 	svccs	0x00071423
    655c:	0300000f 	movweq	r0, #15
    6560:	3a1b0196 	bcc	6c6bc0 <SYSTEM_CLOCK+0x10de40>
    6564:	02000001 	andeq	r0, r0, #1
    6568:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    656c:	00012e01 	andeq	r2, r1, r1, lsl #28
    6570:	00970900 	addseq	r0, r7, r0, lsl #18
    6574:	0a000000 	beq	657c <__HEAP_SIZE+0x557c>
    6578:	00012204 	andeq	r2, r1, r4, lsl #4
    657c:	a3040a00 	movwge	r0, #18944	; 0x4a00
    6580:	0a000000 	beq	6588 <__HEAP_SIZE+0x5588>
    6584:	00013404 	andeq	r3, r1, r4, lsl #8
    6588:	0f7e0b00 	svceq	0x007e0b00
    658c:	9b030000 	blls	c6594 <SYSTICK_CYCLES+0xb7b35>
    6590:	00a30301 	adceq	r0, r3, r1, lsl #6
    6594:	040a0000 	streq	r0, [sl], #-0
    6598:	0000007f 	andeq	r0, r0, pc, ror r0
    659c:	000b0306 	andeq	r0, fp, r6, lsl #6
    65a0:	d603d800 	strle	sp, [r3], -r0, lsl #16
    65a4:	04781001 	ldrbteq	r1, [r8], #-1
    65a8:	31070000 	mrscc	r0, (UNDEF: 7)
    65ac:	03000013 	movweq	r0, #19
    65b0:	971901dd 			; <UNDEFINED> instruction: 0x971901dd
    65b4:	02000000 	andeq	r0, r0, #0
    65b8:	a3070023 	movwge	r0, #28707	; 0x7023
    65bc:	03000011 	movweq	r0, #17
    65c0:	971901de 			; <UNDEFINED> instruction: 0x971901de
    65c4:	02000000 	andeq	r0, r0, #0
    65c8:	60070423 	andvs	r0, r7, r3, lsr #8
    65cc:	03000008 	movweq	r0, #8
    65d0:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    65d4:	02000000 	andeq	r0, r0, #0
    65d8:	05070823 	streq	r0, [r7, #-2083]	; 0xfffff7dd
    65dc:	03000013 	movweq	r0, #19
    65e0:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    65e4:	02000000 	andeq	r0, r0, #0
    65e8:	3f070c23 	svccc	0x00070c23
    65ec:	0300000c 	movweq	r0, #12
    65f0:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    65f4:	02000000 	andeq	r0, r0, #0
    65f8:	c5071023 	strgt	r1, [r7, #-35]	; 0xffffffdd
    65fc:	03000013 	movweq	r0, #19
    6600:	971901e2 	ldrls	r0, [r9, -r2, ror #3]
    6604:	02000000 	andeq	r0, r0, #0
    6608:	30071423 	andcc	r1, r7, r3, lsr #8
    660c:	0300001b 	movweq	r0, #27
    6610:	971901e3 	ldrls	r0, [r9, -r3, ror #3]
    6614:	02000000 	andeq	r0, r0, #0
    6618:	4b071823 	blmi	1cc6ac <__RAM_SIZE+0xcc6ac>
    661c:	0300000f 	movweq	r0, #15
    6620:	971901e4 	ldrls	r0, [r9, -r4, ror #3]
    6624:	02000000 	andeq	r0, r0, #0
    6628:	ed071c23 	stc	12, cr1, [r7, #-140]	; 0xffffff74
    662c:	0300000f 	movweq	r0, #15
    6630:	781a01e8 	ldmdavc	sl, {r3, r5, r6, r7, r8}
    6634:	02000004 	andeq	r0, r0, #4
    6638:	0c072023 	stceq	0, cr2, [r7], {35}	; 0x23
    663c:	03000008 	movweq	r0, #8
    6640:	781a01e9 	ldmdavc	sl, {r0, r3, r5, r6, r7, r8}
    6644:	02000004 	andeq	r0, r0, #4
    6648:	a4072423 	strge	r2, [r7], #-1059	; 0xfffffbdd
    664c:	0300000e 	movweq	r0, #14
    6650:	4d1a01f1 	ldfmis	f0, [sl, #-964]	; 0xfffffc3c
    6654:	02000001 	andeq	r0, r0, #1
    6658:	04072823 	streq	r2, [r7], #-2083	; 0xfffff7dd
    665c:	0300000a 	movweq	r0, #10
    6660:	8b1901f2 	blhi	646e30 <SYSTEM_CLOCK+0x8e0b0>
    6664:	02000000 	andeq	r0, r0, #0
    6668:	54072c23 	strpl	r2, [r7], #-3107	; 0xfffff3dd
    666c:	03000009 	movweq	r0, #9
    6670:	8b1901f3 	blhi	646e44 <SYSTEM_CLOCK+0x8e0c4>
    6674:	02000000 	andeq	r0, r0, #0
    6678:	e6073023 	str	r3, [r7], -r3, lsr #32
    667c:	03000007 	movweq	r0, #7
    6680:	8b1901f4 	blhi	646e58 <SYSTEM_CLOCK+0x8e0d8>
    6684:	02000000 	andeq	r0, r0, #0
    6688:	e3073423 	movw	r3, #29731	; 0x7423
    668c:	03000010 	movweq	r0, #16
    6690:	8b1901f5 	blhi	646e6c <SYSTEM_CLOCK+0x8e0ec>
    6694:	02000000 	andeq	r0, r0, #0
    6698:	f7073823 			; <UNDEFINED> instruction: 0xf7073823
    669c:	03000006 	movweq	r0, #6
    66a0:	8b1901f6 	blhi	646e80 <SYSTEM_CLOCK+0x8e100>
    66a4:	02000000 	andeq	r0, r0, #0
    66a8:	14073c23 	strne	r3, [r7], #-3107	; 0xfffff3dd
    66ac:	0300000b 	movweq	r0, #11
    66b0:	8f1b01fb 	svchi	0x001b01fb
    66b4:	02000004 	andeq	r0, r0, #4
    66b8:	c5074023 	strgt	r4, [r7, #-35]	; 0xffffffdd
    66bc:	03000007 	movweq	r0, #7
    66c0:	2e1b0203 	cdpcs	2, 1, cr0, cr11, cr3, {0}
    66c4:	02000001 	andeq	r0, r0, #1
    66c8:	13074423 	movwne	r4, #29731	; 0x7423
    66cc:	03000007 	movweq	r0, #7
    66d0:	97190204 	ldrls	r0, [r9, -r4, lsl #4]
    66d4:	02000000 	andeq	r0, r0, #0
    66d8:	ea074823 	b	1d876c <__RAM_SIZE+0xd876c>
    66dc:	0300000a 	movweq	r0, #10
    66e0:	40190208 	andsmi	r0, r9, r8, lsl #4
    66e4:	02000001 	andeq	r0, r0, #1
    66e8:	17074c23 	strne	r4, [r7, -r3, lsr #24]
    66ec:	0300000a 	movweq	r0, #10
    66f0:	8f1b020e 	svchi	0x001b020e
    66f4:	02000004 	andeq	r0, r0, #4
    66f8:	c9076823 	stmdbgt	r7, {r0, r1, r5, fp, sp, lr}
    66fc:	0300000e 	movweq	r0, #14
    6700:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    6704:	02000000 	andeq	r0, r0, #0
    6708:	b0076c23 	andlt	r6, r7, r3, lsr #24
    670c:	03000010 	movweq	r0, #16
    6710:	781a0211 	ldmdavc	sl, {r0, r4, r9}
    6714:	02000004 	andeq	r0, r0, #4
    6718:	37077023 	strcc	r7, [r7, -r3, lsr #32]
    671c:	03000009 	movweq	r0, #9
    6720:	781a0212 	ldmdavc	sl, {r1, r4, r9}
    6724:	02000004 	andeq	r0, r0, #4
    6728:	93077423 	movwls	r7, #29731	; 0x7423
    672c:	03000010 	movweq	r0, #16
    6730:	97190213 			; <UNDEFINED> instruction: 0x97190213
    6734:	02000000 	andeq	r0, r0, #0
    6738:	f4077823 	vst2.8	{d7-d8}, [r7 :128], r3
    673c:	0300000b 	movweq	r0, #11
    6740:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    6744:	02000000 	andeq	r0, r0, #0
    6748:	2a077c23 	bcs	1e57dc <__RAM_SIZE+0xe57dc>
    674c:	0300000e 	movweq	r0, #14
    6750:	8b190215 	blhi	646fac <SYSTEM_CLOCK+0x8e22c>
    6754:	03000000 	movweq	r0, #0
    6758:	07018023 	streq	r8, [r1, -r3, lsr #32]
    675c:	00000c16 	andeq	r0, r0, r6, lsl ip
    6760:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    6764:	0000008b 	andeq	r0, r0, fp, lsl #1
    6768:	01842303 	orreq	r2, r4, r3, lsl #6
    676c:	0012ee07 	andseq	lr, r2, r7, lsl #28
    6770:	021f0300 	andseq	r0, pc, #0, 6
    6774:	0004781a 	andeq	r7, r4, sl, lsl r8
    6778:	88230300 	stmdahi	r3!, {r8, r9}
    677c:	11f40701 	mvnsne	r0, r1, lsl #14
    6780:	20030000 	andcs	r0, r3, r0
    6784:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    6788:	23030000 	movwcs	r0, #12288	; 0x3000
    678c:	cf07018c 	svcgt	0x0007018c
    6790:	03000009 	movweq	r0, #9
    6794:	8b19022e 	blhi	647054 <SYSTEM_CLOCK+0x8e2d4>
    6798:	03000000 	movweq	r0, #0
    679c:	07019023 	streq	r9, [r1, -r3, lsr #32]
    67a0:	00000964 	andeq	r0, r0, r4, ror #18
    67a4:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    67a8:	0000008b 	andeq	r0, r0, fp, lsl #1
    67ac:	01942303 	orrseq	r2, r4, r3, lsl #6
    67b0:	000abc07 	andeq	fp, sl, r7, lsl #24
    67b4:	02300300 	eorseq	r0, r0, #0, 6
    67b8:	00008b19 	andeq	r8, r0, r9, lsl fp
    67bc:	98230300 	stmdals	r3!, {r8, r9}
    67c0:	09850701 	stmibeq	r5, {r0, r8, r9, sl}
    67c4:	33030000 	movwcc	r0, #12288	; 0x3000
    67c8:	008b1902 	addeq	r1, fp, r2, lsl #18
    67cc:	23030000 	movwcs	r0, #12288	; 0x3000
    67d0:	3f07019c 	svccc	0x0007019c
    67d4:	03000006 	movweq	r0, #6
    67d8:	741a0235 	ldrvc	r0, [sl], #-565	; 0xfffffdcb
    67dc:	03000005 	movweq	r0, #5
    67e0:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    67e4:	000015e1 	andeq	r1, r0, r1, ror #11
    67e8:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    67ec:	00000097 	muleq	r0, r7, r0
    67f0:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    67f4:	0016d007 	andseq	sp, r6, r7
    67f8:	023d0300 	eorseq	r0, sp, #0, 6
    67fc:	00009719 	andeq	r9, r0, r9, lsl r7
    6800:	a8230300 	stmdage	r3!, {r8, r9}
    6804:	155a0701 	ldrbne	r0, [sl, #-1793]	; 0xfffff8ff
    6808:	41030000 	mrsmi	r0, (UNDEF: 3)
    680c:	00971902 	addseq	r1, r7, r2, lsl #18
    6810:	23030000 	movwcs	r0, #12288	; 0x3000
    6814:	870701ac 	strhi	r0, [r7, -ip, lsr #3]
    6818:	03000017 	movweq	r0, #23
    681c:	97190245 	ldrls	r0, [r9, -r5, asr #4]
    6820:	03000000 	movweq	r0, #0
    6824:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    6828:	00001689 	andeq	r1, r0, r9, lsl #13
    682c:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    6830:	00000097 	muleq	r0, r7, r0
    6834:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    6838:	0011c707 	andseq	ip, r1, r7, lsl #14
    683c:	024c0300 	subeq	r0, ip, #0, 6
    6840:	0004781a 	andeq	r7, r4, sl, lsl r8
    6844:	b8230300 	stmdalt	r3!, {r8, r9}
    6848:	175f0701 	ldrbne	r0, [pc, -r1, lsl #14]
    684c:	4f030000 	svcmi	0x00030000
    6850:	00971902 	addseq	r1, r7, r2, lsl #18
    6854:	23030000 	movwcs	r0, #12288	; 0x3000
    6858:	320701bc 	andcc	r0, r7, #188, 2	; 0x2f
    685c:	03000015 	movweq	r0, #21
    6860:	97190252 			; <UNDEFINED> instruction: 0x97190252
    6864:	03000000 	movweq	r0, #0
    6868:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    686c:	00001498 	muleq	r0, r8, r4
    6870:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    6874:	00000097 	muleq	r0, r7, r0
    6878:	01c42303 	biceq	r2, r4, r3, lsl #6
    687c:	00160507 	andseq	r0, r6, r7, lsl #10
    6880:	02590300 	subseq	r0, r9, #0, 6
    6884:	00009719 	andeq	r9, r0, r9, lsl r7
    6888:	c8230300 	stmdagt	r3!, {r8, r9}
    688c:	140b0701 	strne	r0, [fp], #-1793	; 0xfffff8ff
    6890:	5d030000 	stcpl	0, cr0, [r3, #-0]
    6894:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    6898:	23030000 	movwcs	r0, #12288	; 0x3000
    689c:	e40701cc 	str	r0, [r7], #-460	; 0xfffffe34
    68a0:	0300000c 	movweq	r0, #12
    68a4:	97190278 			; <UNDEFINED> instruction: 0x97190278
    68a8:	03000000 	movweq	r0, #0
    68ac:	0701d023 	streq	sp, [r1, -r3, lsr #32]
    68b0:	00000e65 	andeq	r0, r0, r5, ror #28
    68b4:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    68b8:	00000097 	muleq	r0, r7, r0
    68bc:	01d42303 	bicseq	r2, r4, r3, lsl #6
    68c0:	53040a00 	movwpl	r0, #18944	; 0x4a00
    68c4:	08000001 	stmdaeq	r0, {r0}
    68c8:	00048f01 	andeq	r8, r4, r1, lsl #30
    68cc:	04780900 	ldrbteq	r0, [r8], #-2304	; 0xfffff700
    68d0:	97090000 	strls	r0, [r9, -r0]
    68d4:	00000000 	andeq	r0, r0, r0
    68d8:	047e040a 	ldrbteq	r0, [lr], #-1034	; 0xfffffbf6
    68dc:	b7060000 	strlt	r0, [r6, -r0]
    68e0:	34000011 	strcc	r0, [r0], #-17	; 0xffffffef
    68e4:	10037e03 	andne	r7, r3, r3, lsl #28
    68e8:	00000574 	andeq	r0, r0, r4, ror r5
    68ec:	00080007 	andeq	r0, r8, r7
    68f0:	03820300 	orreq	r0, r2, #0, 6
    68f4:	00009719 	andeq	r9, r0, r9, lsl r7
    68f8:	00230200 	eoreq	r0, r3, r0, lsl #4
    68fc:	00128407 	andseq	r8, r2, r7, lsl #8
    6900:	03850300 	orreq	r0, r5, #0, 6
    6904:	00014d1a 	andeq	r4, r1, sl, lsl sp
    6908:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    690c:	00107a07 	andseq	r7, r0, r7, lsl #20
    6910:	03880300 	orreq	r0, r8, #0, 6
    6914:	00008b19 	andeq	r8, r0, r9, lsl fp
    6918:	08230200 	stmdaeq	r3!, {r9}
    691c:	000d3a07 	andeq	r3, sp, r7, lsl #20
    6920:	038c0300 	orreq	r0, ip, #0, 6
    6924:	0005871a 	andeq	r8, r5, sl, lsl r7
    6928:	0c230200 	sfmeq	f0, 4, [r3], #-0
    692c:	0007d507 	andeq	sp, r7, r7, lsl #10
    6930:	03900300 	orrseq	r0, r0, #0, 6
    6934:	00008b19 	andeq	r8, r0, r9, lsl fp
    6938:	10230200 	eorne	r0, r3, r0, lsl #4
    693c:	00074107 	andeq	r4, r7, r7, lsl #2
    6940:	03930300 	orrseq	r0, r3, #0, 6
    6944:	00008b19 	andeq	r8, r0, r9, lsl fp
    6948:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    694c:	0012c507 	andseq	ip, r2, r7, lsl #10
    6950:	03980300 	orrseq	r0, r8, #0, 6
    6954:	0004781a 	andeq	r7, r4, sl, lsl r8
    6958:	18230200 	stmdane	r3!, {r9}
    695c:	00104b07 	andseq	r4, r0, r7, lsl #22
    6960:	03990300 	orrseq	r0, r9, #0, 6
    6964:	00008b19 	andeq	r8, r0, r9, lsl fp
    6968:	1c230200 	sfmne	f0, 4, [r3], #-0
    696c:	000eb307 	andeq	fp, lr, r7, lsl #6
    6970:	039d0300 	orrseq	r0, sp, #0, 6
    6974:	0005741a 	andeq	r7, r5, sl, lsl r4
    6978:	20230200 	eorcs	r0, r3, r0, lsl #4
    697c:	000fb607 	andeq	fp, pc, r7, lsl #12
    6980:	039e0300 	orrseq	r0, lr, #0, 6
    6984:	0005741a 	andeq	r7, r5, sl, lsl r4
    6988:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    698c:	0008d207 	andeq	sp, r8, r7, lsl #4
    6990:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    6994:	00008b19 	andeq	r8, r0, r9, lsl fp
    6998:	28230200 	stmdacs	r3!, {r9}
    699c:	00143607 	andseq	r3, r4, r7, lsl #12
    69a0:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    69a4:	0005741a 	andeq	r7, r5, sl, lsl r4
    69a8:	2c230200 	sfmcs	f0, 4, [r3], #-0
    69ac:	000c5307 	andeq	r5, ip, r7, lsl #6
    69b0:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    69b4:	0005741a 	andeq	r7, r5, sl, lsl r4
    69b8:	30230200 	eorcc	r0, r3, r0, lsl #4
    69bc:	95040a00 	strls	r0, [r4, #-2560]	; 0xfffff600
    69c0:	0b000004 	bleq	69d8 <__HEAP_SIZE+0x59d8>
    69c4:	000012de 	ldrdeq	r1, [r0], -lr
    69c8:	03028603 	movweq	r8, #9731	; 0x2603
    69cc:	00000153 	andeq	r0, r0, r3, asr r1
    69d0:	057a040a 	ldrbeq	r0, [sl, #-1034]!	; 0xfffffbf6
    69d4:	870c0000 	strhi	r0, [ip, -r0]
    69d8:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    69dc:	057a218f 	ldrbeq	r2, [sl, #-399]!	; 0xfffffe71
    69e0:	01010000 	mrseq	r0, (UNDEF: 1)
    69e4:	1b98010d 	blne	fe606e20 <__RAM_segment_used_end__+0xc6506e20>
    69e8:	51010000 	mrspl	r0, (UNDEF: 1)
    69ec:	1f6c0107 	svcne	0x006c0107
    69f0:	1f841000 	svcne	0x00841000
    69f4:	30be1000 	adcscc	r1, lr, r0
    69f8:	46010000 	strmi	r0, [r1], -r0
    69fc:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    6a00:	000018a1 	andeq	r1, r0, r1, lsr #17
    6a04:	8b015401 	blhi	5ba10 <SYSTICK_CYCLES+0x4cfb1>
    6a08:	e0000000 	and	r0, r0, r0
    6a0c:	de000030 	mcrle	0, 0, r0, cr0, cr0, {1}
    6a10:	0f000030 	svceq	0x00000030
    6a14:	00000646 	andeq	r0, r0, r6, asr #12
    6a18:	10001f6e 	andne	r1, r0, lr, ror #30
    6a1c:	001f6e02 	andseq	r6, pc, r2, lsl #28
    6a20:	001f7410 	andseq	r7, pc, r0, lsl r4	; <UNPREDICTABLE>
    6a24:	056f0110 	strbeq	r0, [pc, #-272]!	; 691c <__HEAP_SIZE+0x591c>
    6a28:	00000615 	andeq	r0, r0, r5, lsl r6
    6a2c:	00065910 	andeq	r5, r6, r0, lsl r9
    6a30:	0030f500 	eorseq	pc, r0, r0, lsl #10
    6a34:	0030f300 	eorseq	pc, r0, r0, lsl #6
    6a38:	06841100 	streq	r1, [r4], r0, lsl #2
    6a3c:	1f6e0000 	svcne	0x006e0000
    6a40:	6e051000 	cdpvs	0, 0, cr1, cr5, cr0, {0}
    6a44:	7210001f 	andsvc	r0, r0, #31
    6a48:	0210001f 	andseq	r0, r0, #31
    6a4c:	10130256 	andsne	r0, r3, r6, asr r2
    6a50:	00000697 	muleq	r0, r7, r6
    6a54:	0000310a 	andeq	r3, r0, sl, lsl #2
    6a58:	00003108 	andeq	r3, r0, r8, lsl #2
    6a5c:	670f0000 	strvs	r0, [pc, -r0]
    6a60:	7a000006 	bvc	6a80 <__HEAP_SIZE+0x5a80>
    6a64:	0110001f 	tsteq	r0, pc, lsl r0
    6a68:	10001f7a 	andne	r1, r0, sl, ror pc
    6a6c:	10001f7e 	andne	r1, r0, lr, ror pc
    6a70:	3c057701 	stccc	7, cr7, [r5], {1}
    6a74:	12000006 	andne	r0, r0, #6
    6a78:	00000676 	andeq	r0, r0, r6, ror r6
    6a7c:	0000311f 	andeq	r3, r0, pc, lsl r1
    6a80:	0000311d 	andeq	r3, r0, sp, lsl r1
    6a84:	1f7a1300 	svcne	0x007a1300
    6a88:	06a51000 	strteq	r1, [r5], r0
    6a8c:	14000000 	strne	r0, [r0], #-0
    6a90:	000018bd 			; <UNDEFINED> instruction: 0x000018bd
    6a94:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    6a98:	00008b01 	andeq	r8, r0, r1, lsl #22
    6a9c:	06670300 	strbteq	r0, [r7], -r0, lsl #6
    6aa0:	7d150000 	ldcvc	0, cr0, [r5, #-0]
    6aa4:	02000018 	andeq	r0, r0, #24
    6aa8:	8b060254 	blhi	187400 <__RAM_SIZE+0x87400>
    6aac:	00000000 	andeq	r0, r0, r0
    6ab0:	00186916 	andseq	r6, r8, r6, lsl r9
    6ab4:	02490200 	subeq	r0, r9, #0, 4
    6ab8:	84030137 	strhi	r0, [r3], #-311	; 0xfffffec9
    6abc:	17000006 	strne	r0, [r0, -r6]
    6ac0:	0000187d 	andeq	r1, r0, sp, ror r8
    6ac4:	50024902 	andpl	r4, r2, r2, lsl #18
    6ac8:	0000008b 	andeq	r0, r0, fp, lsl #1
    6acc:	18891400 	stmne	r9, {sl, ip}
    6ad0:	32020000 	andcc	r0, r2, #0
    6ad4:	8b013702 	blhi	546e4 <SYSTICK_CYCLES+0x45c85>
    6ad8:	03000000 	movweq	r0, #0
    6adc:	000006a5 	andeq	r0, r0, r5, lsr #13
    6ae0:	00188115 	andseq	r8, r8, r5, lsl r1
    6ae4:	02340200 	eorseq	r0, r4, #0, 4
    6ae8:	00008b06 	andeq	r8, r0, r6, lsl #22
    6aec:	01180000 	tsteq	r8, r0
    6af0:	001a4201 	andseq	r4, sl, r1, lsl #4
    6af4:	001a4200 	andseq	r4, sl, r0, lsl #4
    6af8:	011e0500 	tsteq	lr, r0, lsl #10
    6afc:	0940000d 	stmdbeq	r0, {r0, r2, r3}^
    6b00:	00020000 	andeq	r0, r2, r0
    6b04:	000011fb 	strdeq	r1, [r0], -fp
    6b08:	000f0104 	andeq	r0, pc, r4, lsl #2
    6b0c:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    6b10:	9d00001e 	stcls	0, cr0, [r0, #-120]	; 0xffffff88
    6b14:	28000001 	stmdacs	r0, {r0}
    6b18:	00000003 	andeq	r0, r0, r3
    6b1c:	00000000 	andeq	r0, r0, r0
    6b20:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    6b24:	0200002c 	andeq	r0, r0, #44	; 0x2c
    6b28:	01440704 	cmpeq	r4, r4, lsl #14
    6b2c:	04030000 	streq	r0, [r3], #-0
    6b30:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    6b34:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    6b38:	0000015d 	andeq	r0, r0, sp, asr r1
    6b3c:	51040802 	tstpl	r4, r2, lsl #16
    6b40:	02000001 	andeq	r0, r0, #1
    6b44:	00f60601 	rscseq	r0, r6, r1, lsl #12
    6b48:	01020000 	mrseq	r0, (UNDEF: 2)
    6b4c:	0000f408 	andeq	pc, r0, r8, lsl #8
    6b50:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    6b54:	0000017b 	andeq	r0, r0, fp, ror r1
    6b58:	02070202 	andeq	r0, r7, #536870912	; 0x20000000
    6b5c:	02000001 	andeq	r0, r0, #1
    6b60:	01620504 	cmneq	r2, r4, lsl #10
    6b64:	04020000 	streq	r0, [r2], #-0
    6b68:	00013f07 	andeq	r3, r1, r7, lsl #30
    6b6c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    6b70:	0000013a 	andeq	r0, r0, sl, lsr r1
    6b74:	01020404 	tsteq	r2, r4, lsl #8
    6b78:	0000fd08 	andeq	pc, r0, r8, lsl #26
    6b7c:	12e90500 	rscne	r0, r9, #0, 10
    6b80:	73020000 	movwvc	r0, #8192	; 0x2000
    6b84:	00007831 	andeq	r7, r0, r1, lsr r8
    6b88:	114c0500 	cmpne	ip, r0, lsl #10
    6b8c:	76020000 	strvc	r0, [r2], -r0
    6b90:	00002931 	andeq	r2, r0, r1, lsr r9
    6b94:	10aa0500 	adcne	r0, sl, r0, lsl #10
    6b98:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    6b9c:	00006831 	andeq	r6, r0, r1, lsr r8
    6ba0:	00970600 	addseq	r0, r7, r0, lsl #12
    6ba4:	cb070000 	blgt	1c6bac <__RAM_SIZE+0xc6bac>
    6ba8:	1c00000d 	stcne	0, cr0, [r0], {13}
    6bac:	10018203 	andne	r8, r1, r3, lsl #4
    6bb0:	00000127 	andeq	r0, r0, r7, lsr #2
    6bb4:	00124408 	andseq	r4, r2, r8, lsl #8
    6bb8:	01860300 	orreq	r0, r6, r0, lsl #6
    6bbc:	00009719 	andeq	r9, r0, r9, lsl r7
    6bc0:	00230200 	eoreq	r0, r3, r0, lsl #4
    6bc4:	000bce08 	andeq	ip, fp, r8, lsl #28
    6bc8:	01870300 	orreq	r0, r7, r0, lsl #6
    6bcc:	00009719 	andeq	r9, r0, r9, lsl r7
    6bd0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6bd4:	000c6b08 	andeq	r6, ip, r8, lsl #22
    6bd8:	018a0300 	orreq	r0, sl, r0, lsl #6
    6bdc:	0001331b 	andeq	r3, r1, fp, lsl r3
    6be0:	08230200 	stmdaeq	r3!, {r9}
    6be4:	0008f408 	andeq	pc, r8, r8, lsl #8
    6be8:	018b0300 	orreq	r0, fp, r0, lsl #6
    6bec:	00009719 	andeq	r9, r0, r9, lsl r7
    6bf0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    6bf4:	0013da08 	andseq	sp, r3, r8, lsl #20
    6bf8:	01910300 	orrseq	r0, r1, r0, lsl #6
    6bfc:	0001391a 	andeq	r3, r1, sl, lsl r9
    6c00:	10230200 	eorne	r0, r3, r0, lsl #4
    6c04:	00065a08 	andeq	r5, r6, r8, lsl #20
    6c08:	01920300 	orrseq	r0, r2, r0, lsl #6
    6c0c:	0001391a 	andeq	r3, r1, sl, lsl r9
    6c10:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    6c14:	000f2f08 	andeq	r2, pc, r8, lsl #30
    6c18:	01960300 	orrseq	r0, r6, r0, lsl #6
    6c1c:	00013f1b 	andeq	r3, r1, fp, lsl pc
    6c20:	18230200 	stmdane	r3!, {r9}
    6c24:	33010900 	movwcc	r0, #6400	; 0x1900
    6c28:	0a000001 	beq	6c34 <__HEAP_SIZE+0x5c34>
    6c2c:	00000097 	muleq	r0, r7, r0
    6c30:	27040b00 	strcs	r0, [r4, -r0, lsl #22]
    6c34:	0b000001 	bleq	6c40 <__HEAP_SIZE+0x5c40>
    6c38:	0000a804 	andeq	sl, r0, r4, lsl #16
    6c3c:	39040b00 	stmdbcc	r4, {r8, r9, fp}
    6c40:	0c000001 	stceq	0, cr0, [r0], {1}
    6c44:	00000f7e 	andeq	r0, r0, lr, ror pc
    6c48:	03019b03 	movweq	r9, #6915	; 0x1b03
    6c4c:	000000a8 	andeq	r0, r0, r8, lsr #1
    6c50:	001df907 	andseq	pc, sp, r7, lsl #18
    6c54:	a8034000 	stmdage	r3, {lr}
    6c58:	02011001 	andeq	r1, r1, #1
    6c5c:	e0080000 	and	r0, r8, r0
    6c60:	0300001b 	movweq	r0, #27
    6c64:	971901ac 	ldrls	r0, [r9, -ip, lsr #3]
    6c68:	02000000 	andeq	r0, r0, #0
    6c6c:	70080023 	andvc	r0, r8, r3, lsr #32
    6c70:	0300001d 	movweq	r0, #29
    6c74:	011a01af 	tsteq	sl, pc, lsr #3
    6c78:	02000002 	andeq	r0, r0, #2
    6c7c:	a3080423 	movwge	r0, #33827	; 0x8423
    6c80:	0300001d 	movweq	r0, #29
    6c84:	451901b3 	ldrmi	r0, [r9, #-435]	; 0xfffffe4d
    6c88:	02000001 	andeq	r0, r0, #1
    6c8c:	7e080823 	cdpvc	8, 0, cr0, cr8, cr3, {1}
    6c90:	0300001d 	movweq	r0, #29
    6c94:	071a01b7 			; <UNDEFINED> instruction: 0x071a01b7
    6c98:	02000002 	andeq	r0, r0, #2
    6c9c:	e0082423 	and	r2, r8, r3, lsr #8
    6ca0:	0300001c 	movweq	r0, #28
    6ca4:	071a01b8 			; <UNDEFINED> instruction: 0x071a01b8
    6ca8:	02000002 	andeq	r0, r0, #2
    6cac:	a6082823 	strge	r2, [r8], -r3, lsr #16
    6cb0:	0300001c 	movweq	r0, #28
    6cb4:	971901c0 	ldrls	r0, [r9, -r0, asr #3]
    6cb8:	02000000 	andeq	r0, r0, #0
    6cbc:	7f082c23 	svcvc	0x00082c23
    6cc0:	0300001c 	movweq	r0, #28
    6cc4:	971901c3 	ldrls	r0, [r9, -r3, asr #3]
    6cc8:	02000000 	andeq	r0, r0, #0
    6ccc:	fb083023 	blx	212d62 <__RAM_SIZE+0x112d62>
    6cd0:	0300001c 	movweq	r0, #28
    6cd4:	971901c6 	ldrls	r0, [r9, -r6, asr #3]
    6cd8:	02000000 	andeq	r0, r0, #0
    6cdc:	35083423 	strcc	r3, [r8, #-1059]	; 0xfffffbdd
    6ce0:	0300001d 	movweq	r0, #29
    6ce4:	971901c9 	ldrls	r0, [r9, -r9, asr #3]
    6ce8:	02000000 	andeq	r0, r0, #0
    6cec:	47083823 	strmi	r3, [r8, -r3, lsr #16]
    6cf0:	0300001c 	movweq	r0, #28
    6cf4:	971901cc 	ldrls	r0, [r9, -ip, asr #3]
    6cf8:	02000000 	andeq	r0, r0, #0
    6cfc:	0b003c23 	bleq	15d90 <SYSTICK_CYCLES+0x7331>
    6d00:	00007f04 	andeq	r7, r0, r4, lsl #30
    6d04:	52040b00 	andpl	r0, r4, #0, 22
    6d08:	0c000001 	stceq	0, cr0, [r0], {1}
    6d0c:	00001c75 	andeq	r1, r0, r5, ror ip
    6d10:	0301cf03 	movweq	ip, #7939	; 0x1f03
    6d14:	00000152 	andeq	r0, r0, r2, asr r1
    6d18:	000b0307 	andeq	r0, fp, r7, lsl #6
    6d1c:	d603d800 	strle	sp, [r3], -r0, lsl #16
    6d20:	053f1001 	ldreq	r1, [pc, #-1]!	; 6d27 <__HEAP_SIZE+0x5d27>
    6d24:	31080000 	mrscc	r0, (UNDEF: 8)
    6d28:	03000013 	movweq	r0, #19
    6d2c:	971901dd 			; <UNDEFINED> instruction: 0x971901dd
    6d30:	02000000 	andeq	r0, r0, #0
    6d34:	a3080023 	movwge	r0, #32803	; 0x8023
    6d38:	03000011 	movweq	r0, #17
    6d3c:	971901de 			; <UNDEFINED> instruction: 0x971901de
    6d40:	02000000 	andeq	r0, r0, #0
    6d44:	60080423 	andvs	r0, r8, r3, lsr #8
    6d48:	03000008 	movweq	r0, #8
    6d4c:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    6d50:	02000000 	andeq	r0, r0, #0
    6d54:	05080823 	streq	r0, [r8, #-2083]	; 0xfffff7dd
    6d58:	03000013 	movweq	r0, #19
    6d5c:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    6d60:	02000000 	andeq	r0, r0, #0
    6d64:	3f080c23 	svccc	0x00080c23
    6d68:	0300000c 	movweq	r0, #12
    6d6c:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    6d70:	02000000 	andeq	r0, r0, #0
    6d74:	c5081023 	strgt	r1, [r8, #-35]	; 0xffffffdd
    6d78:	03000013 	movweq	r0, #19
    6d7c:	971901e2 	ldrls	r0, [r9, -r2, ror #3]
    6d80:	02000000 	andeq	r0, r0, #0
    6d84:	30081423 	andcc	r1, r8, r3, lsr #8
    6d88:	0300001b 	movweq	r0, #27
    6d8c:	971901e3 	ldrls	r0, [r9, -r3, ror #3]
    6d90:	02000000 	andeq	r0, r0, #0
    6d94:	4b081823 	blmi	20ce28 <__RAM_SIZE+0x10ce28>
    6d98:	0300000f 	movweq	r0, #15
    6d9c:	971901e4 	ldrls	r0, [r9, -r4, ror #3]
    6da0:	02000000 	andeq	r0, r0, #0
    6da4:	ed081c23 	stc	12, cr1, [r8, #-140]	; 0xffffff74
    6da8:	0300000f 	movweq	r0, #15
    6dac:	3f1a01e8 	svccc	0x001a01e8
    6db0:	02000005 	andeq	r0, r0, #5
    6db4:	0c082023 	stceq	0, cr2, [r8], {35}	; 0x23
    6db8:	03000008 	movweq	r0, #8
    6dbc:	3f1a01e9 	svccc	0x001a01e9
    6dc0:	02000005 	andeq	r0, r0, #5
    6dc4:	a4082423 	strge	r2, [r8], #-1059	; 0xfffffbdd
    6dc8:	0300000e 	movweq	r0, #14
    6dcc:	011a01f1 			; <UNDEFINED> instruction: 0x011a01f1
    6dd0:	02000002 	andeq	r0, r0, #2
    6dd4:	04082823 	streq	r2, [r8], #-2083	; 0xfffff7dd
    6dd8:	0300000a 	movweq	r0, #10
    6ddc:	8b1901f2 	blhi	6475ac <SYSTEM_CLOCK+0x8e82c>
    6de0:	02000000 	andeq	r0, r0, #0
    6de4:	54082c23 	strpl	r2, [r8], #-3107	; 0xfffff3dd
    6de8:	03000009 	movweq	r0, #9
    6dec:	8b1901f3 	blhi	6475c0 <SYSTEM_CLOCK+0x8e840>
    6df0:	02000000 	andeq	r0, r0, #0
    6df4:	e6083023 	str	r3, [r8], -r3, lsr #32
    6df8:	03000007 	movweq	r0, #7
    6dfc:	8b1901f4 	blhi	6475d4 <SYSTEM_CLOCK+0x8e854>
    6e00:	02000000 	andeq	r0, r0, #0
    6e04:	e3083423 	movw	r3, #33827	; 0x8423
    6e08:	03000010 	movweq	r0, #16
    6e0c:	8b1901f5 	blhi	6475e8 <SYSTEM_CLOCK+0x8e868>
    6e10:	02000000 	andeq	r0, r0, #0
    6e14:	f7083823 			; <UNDEFINED> instruction: 0xf7083823
    6e18:	03000006 	movweq	r0, #6
    6e1c:	8b1901f6 	blhi	6475fc <SYSTEM_CLOCK+0x8e87c>
    6e20:	02000000 	andeq	r0, r0, #0
    6e24:	14083c23 	strne	r3, [r8], #-3107	; 0xfffff3dd
    6e28:	0300000b 	movweq	r0, #11
    6e2c:	561b01fb 			; <UNDEFINED> instruction: 0x561b01fb
    6e30:	02000005 	andeq	r0, r0, #5
    6e34:	c5084023 	strgt	r4, [r8, #-35]	; 0xffffffdd
    6e38:	03000007 	movweq	r0, #7
    6e3c:	331b0203 	tstcc	fp, #805306368	; 0x30000000
    6e40:	02000001 	andeq	r0, r0, #1
    6e44:	13084423 	movwne	r4, #33827	; 0x8423
    6e48:	03000007 	movweq	r0, #7
    6e4c:	97190204 	ldrls	r0, [r9, -r4, lsl #4]
    6e50:	02000000 	andeq	r0, r0, #0
    6e54:	ea084823 	b	218ee8 <__RAM_SIZE+0x118ee8>
    6e58:	0300000a 	movweq	r0, #10
    6e5c:	45190208 	ldrmi	r0, [r9, #-520]	; 0xfffffdf8
    6e60:	02000001 	andeq	r0, r0, #1
    6e64:	17084c23 	strne	r4, [r8, -r3, lsr #24]
    6e68:	0300000a 	movweq	r0, #10
    6e6c:	561b020e 	ldrpl	r0, [fp], -lr, lsl #4
    6e70:	02000005 	andeq	r0, r0, #5
    6e74:	c9086823 	stmdbgt	r8, {r0, r1, r5, fp, sp, lr}
    6e78:	0300000e 	movweq	r0, #14
    6e7c:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    6e80:	02000000 	andeq	r0, r0, #0
    6e84:	b0086c23 	andlt	r6, r8, r3, lsr #24
    6e88:	03000010 	movweq	r0, #16
    6e8c:	3f1a0211 	svccc	0x001a0211
    6e90:	02000005 	andeq	r0, r0, #5
    6e94:	37087023 	strcc	r7, [r8, -r3, lsr #32]
    6e98:	03000009 	movweq	r0, #9
    6e9c:	3f1a0212 	svccc	0x001a0212
    6ea0:	02000005 	andeq	r0, r0, #5
    6ea4:	93087423 	movwls	r7, #33827	; 0x8423
    6ea8:	03000010 	movweq	r0, #16
    6eac:	97190213 			; <UNDEFINED> instruction: 0x97190213
    6eb0:	02000000 	andeq	r0, r0, #0
    6eb4:	f4087823 	vst2.8	{d7-d8}, [r8 :128], r3
    6eb8:	0300000b 	movweq	r0, #11
    6ebc:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    6ec0:	02000000 	andeq	r0, r0, #0
    6ec4:	2a087c23 	bcs	225f58 <__RAM_SIZE+0x125f58>
    6ec8:	0300000e 	movweq	r0, #14
    6ecc:	8b190215 	blhi	647728 <SYSTEM_CLOCK+0x8e9a8>
    6ed0:	03000000 	movweq	r0, #0
    6ed4:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    6ed8:	00000c16 	andeq	r0, r0, r6, lsl ip
    6edc:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    6ee0:	0000008b 	andeq	r0, r0, fp, lsl #1
    6ee4:	01842303 	orreq	r2, r4, r3, lsl #6
    6ee8:	0012ee08 	andseq	lr, r2, r8, lsl #28
    6eec:	021f0300 	andseq	r0, pc, #0, 6
    6ef0:	00053f1a 	andeq	r3, r5, sl, lsl pc
    6ef4:	88230300 	stmdahi	r3!, {r8, r9}
    6ef8:	11f40801 	mvnsne	r0, r1, lsl #16
    6efc:	20030000 	andcs	r0, r3, r0
    6f00:	053f1a02 	ldreq	r1, [pc, #-2562]!	; 6506 <__HEAP_SIZE+0x5506>
    6f04:	23030000 	movwcs	r0, #12288	; 0x3000
    6f08:	cf08018c 	svcgt	0x0008018c
    6f0c:	03000009 	movweq	r0, #9
    6f10:	8b19022e 	blhi	6477d0 <SYSTEM_CLOCK+0x8ea50>
    6f14:	03000000 	movweq	r0, #0
    6f18:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    6f1c:	00000964 	andeq	r0, r0, r4, ror #18
    6f20:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    6f24:	0000008b 	andeq	r0, r0, fp, lsl #1
    6f28:	01942303 	orrseq	r2, r4, r3, lsl #6
    6f2c:	000abc08 	andeq	fp, sl, r8, lsl #24
    6f30:	02300300 	eorseq	r0, r0, #0, 6
    6f34:	00008b19 	andeq	r8, r0, r9, lsl fp
    6f38:	98230300 	stmdals	r3!, {r8, r9}
    6f3c:	09850801 	stmibeq	r5, {r0, fp}
    6f40:	33030000 	movwcc	r0, #12288	; 0x3000
    6f44:	008b1902 	addeq	r1, fp, r2, lsl #18
    6f48:	23030000 	movwcs	r0, #12288	; 0x3000
    6f4c:	3f08019c 	svccc	0x0008019c
    6f50:	03000006 	movweq	r0, #6
    6f54:	3b1a0235 	blcc	687830 <SYSTEM_CLOCK+0xceab0>
    6f58:	03000006 	movweq	r0, #6
    6f5c:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    6f60:	000015e1 	andeq	r1, r0, r1, ror #11
    6f64:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    6f68:	00000097 	muleq	r0, r7, r0
    6f6c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    6f70:	0016d008 	andseq	sp, r6, r8
    6f74:	023d0300 	eorseq	r0, sp, #0, 6
    6f78:	00009719 	andeq	r9, r0, r9, lsl r7
    6f7c:	a8230300 	stmdage	r3!, {r8, r9}
    6f80:	155a0801 	ldrbne	r0, [sl, #-2049]	; 0xfffff7ff
    6f84:	41030000 	mrsmi	r0, (UNDEF: 3)
    6f88:	00971902 	addseq	r1, r7, r2, lsl #18
    6f8c:	23030000 	movwcs	r0, #12288	; 0x3000
    6f90:	870801ac 	strhi	r0, [r8, -ip, lsr #3]
    6f94:	03000017 	movweq	r0, #23
    6f98:	97190245 	ldrls	r0, [r9, -r5, asr #4]
    6f9c:	03000000 	movweq	r0, #0
    6fa0:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    6fa4:	00001689 	andeq	r1, r0, r9, lsl #13
    6fa8:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    6fac:	00000097 	muleq	r0, r7, r0
    6fb0:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    6fb4:	0011c708 	andseq	ip, r1, r8, lsl #14
    6fb8:	024c0300 	subeq	r0, ip, #0, 6
    6fbc:	00053f1a 	andeq	r3, r5, sl, lsl pc
    6fc0:	b8230300 	stmdalt	r3!, {r8, r9}
    6fc4:	175f0801 	ldrbne	r0, [pc, -r1, lsl #16]
    6fc8:	4f030000 	svcmi	0x00030000
    6fcc:	00971902 	addseq	r1, r7, r2, lsl #18
    6fd0:	23030000 	movwcs	r0, #12288	; 0x3000
    6fd4:	320801bc 	andcc	r0, r8, #188, 2	; 0x2f
    6fd8:	03000015 	movweq	r0, #21
    6fdc:	97190252 			; <UNDEFINED> instruction: 0x97190252
    6fe0:	03000000 	movweq	r0, #0
    6fe4:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    6fe8:	00001498 	muleq	r0, r8, r4
    6fec:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    6ff0:	00000097 	muleq	r0, r7, r0
    6ff4:	01c42303 	biceq	r2, r4, r3, lsl #6
    6ff8:	00160508 	andseq	r0, r6, r8, lsl #10
    6ffc:	02590300 	subseq	r0, r9, #0, 6
    7000:	00009719 	andeq	r9, r0, r9, lsl r7
    7004:	c8230300 	stmdagt	r3!, {r8, r9}
    7008:	140b0801 	strne	r0, [fp], #-2049	; 0xfffff7ff
    700c:	5d030000 	stcpl	0, cr0, [r3, #-0]
    7010:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    7014:	23030000 	movwcs	r0, #12288	; 0x3000
    7018:	e40801cc 	str	r0, [r8], #-460	; 0xfffffe34
    701c:	0300000c 	movweq	r0, #12
    7020:	97190278 			; <UNDEFINED> instruction: 0x97190278
    7024:	03000000 	movweq	r0, #0
    7028:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
    702c:	00000e65 	andeq	r0, r0, r5, ror #28
    7030:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    7034:	00000097 	muleq	r0, r7, r0
    7038:	01d42303 	bicseq	r2, r4, r3, lsl #6
    703c:	1a040b00 	bne	109c44 <__RAM_SIZE+0x9c44>
    7040:	09000002 	stmdbeq	r0, {r1}
    7044:	00055601 	andeq	r5, r5, r1, lsl #12
    7048:	053f0a00 	ldreq	r0, [pc, #-2560]!	; 6650 <__HEAP_SIZE+0x5650>
    704c:	970a0000 	strls	r0, [sl, -r0]
    7050:	00000000 	andeq	r0, r0, r0
    7054:	0545040b 	strbeq	r0, [r5, #-1035]	; 0xfffffbf5
    7058:	b7070000 	strlt	r0, [r7, -r0]
    705c:	34000011 	strcc	r0, [r0], #-17	; 0xffffffef
    7060:	10037e03 	andne	r7, r3, r3, lsl #28
    7064:	0000063b 	andeq	r0, r0, fp, lsr r6
    7068:	00080008 	andeq	r0, r8, r8
    706c:	03820300 	orreq	r0, r2, #0, 6
    7070:	00009719 	andeq	r9, r0, r9, lsl r7
    7074:	00230200 	eoreq	r0, r3, r0, lsl #4
    7078:	00128408 	andseq	r8, r2, r8, lsl #8
    707c:	03850300 	orreq	r0, r5, #0, 6
    7080:	0002011a 	andeq	r0, r2, sl, lsl r1
    7084:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7088:	00107a08 	andseq	r7, r0, r8, lsl #20
    708c:	03880300 	orreq	r0, r8, #0, 6
    7090:	00008b19 	andeq	r8, r0, r9, lsl fp
    7094:	08230200 	stmdaeq	r3!, {r9}
    7098:	000d3a08 	andeq	r3, sp, r8, lsl #20
    709c:	038c0300 	orreq	r0, ip, #0, 6
    70a0:	00064e1a 	andeq	r4, r6, sl, lsl lr
    70a4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    70a8:	0007d508 	andeq	sp, r7, r8, lsl #10
    70ac:	03900300 	orrseq	r0, r0, #0, 6
    70b0:	00008b19 	andeq	r8, r0, r9, lsl fp
    70b4:	10230200 	eorne	r0, r3, r0, lsl #4
    70b8:	00074108 	andeq	r4, r7, r8, lsl #2
    70bc:	03930300 	orrseq	r0, r3, #0, 6
    70c0:	00008b19 	andeq	r8, r0, r9, lsl fp
    70c4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    70c8:	0012c508 	andseq	ip, r2, r8, lsl #10
    70cc:	03980300 	orrseq	r0, r8, #0, 6
    70d0:	00053f1a 	andeq	r3, r5, sl, lsl pc
    70d4:	18230200 	stmdane	r3!, {r9}
    70d8:	00104b08 	andseq	r4, r0, r8, lsl #22
    70dc:	03990300 	orrseq	r0, r9, #0, 6
    70e0:	00008b19 	andeq	r8, r0, r9, lsl fp
    70e4:	1c230200 	sfmne	f0, 4, [r3], #-0
    70e8:	000eb308 	andeq	fp, lr, r8, lsl #6
    70ec:	039d0300 	orrseq	r0, sp, #0, 6
    70f0:	00063b1a 	andeq	r3, r6, sl, lsl fp
    70f4:	20230200 	eorcs	r0, r3, r0, lsl #4
    70f8:	000fb608 	andeq	fp, pc, r8, lsl #12
    70fc:	039e0300 	orrseq	r0, lr, #0, 6
    7100:	00063b1a 	andeq	r3, r6, sl, lsl fp
    7104:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    7108:	0008d208 	andeq	sp, r8, r8, lsl #4
    710c:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    7110:	00008b19 	andeq	r8, r0, r9, lsl fp
    7114:	28230200 	stmdacs	r3!, {r9}
    7118:	00143608 	andseq	r3, r4, r8, lsl #12
    711c:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    7120:	00063b1a 	andeq	r3, r6, sl, lsl fp
    7124:	2c230200 	sfmcs	f0, 4, [r3], #-0
    7128:	000c5308 	andeq	r5, ip, r8, lsl #6
    712c:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    7130:	00063b1a 	andeq	r3, r6, sl, lsl fp
    7134:	30230200 	eorcc	r0, r3, r0, lsl #4
    7138:	5c040b00 			; <UNDEFINED> instruction: 0x5c040b00
    713c:	0c000005 	stceq	0, cr0, [r0], {5}
    7140:	000012de 	ldrdeq	r1, [r0], -lr
    7144:	03028603 	movweq	r8, #9731	; 0x2603
    7148:	0000021a 	andeq	r0, r0, sl, lsl r2
    714c:	0641040b 	strbeq	r0, [r1], -fp, lsl #8
    7150:	010d0000 	mrseq	r0, (UNDEF: 13)
    7154:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    7158:	00a32154 	adceq	r2, r3, r4, asr r1
    715c:	01010000 	mrseq	r0, (UNDEF: 1)
    7160:	001ab20d 	andseq	fp, sl, sp, lsl #4
    7164:	215a0400 	cmpcs	sl, r0, lsl #8
    7168:	00000097 	muleq	r0, r7, r0
    716c:	020d0101 	andeq	r0, sp, #1073741824	; 0x40000000
    7170:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    7174:	008b2160 	addeq	r2, fp, r0, ror #2
    7178:	01010000 	mrseq	r0, (UNDEF: 1)
    717c:	00068e0e 	andeq	r8, r6, lr, lsl #28
    7180:	00068e00 	andeq	r8, r6, r0, lsl #28
    7184:	00290f00 	eoreq	r0, r9, r0, lsl #30
    7188:	001f0000 	andseq	r0, pc, r0
    718c:	0145040b 	cmpeq	r5, fp, lsl #8
    7190:	940d0000 	strls	r0, [sp], #-0
    7194:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    7198:	067e2266 	ldrbteq	r2, [lr], -r6, ror #4
    719c:	01010000 	mrseq	r0, (UNDEF: 1)
    71a0:	001bec0d 	andseq	lr, fp, sp, lsl #24
    71a4:	236c0400 	cmncs	ip, #0, 8
    71a8:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    71ac:	040b0101 	streq	r0, [fp], #-257	; 0xfffffeff
    71b0:	0000068e 	andeq	r0, r0, lr, lsl #13
    71b4:	001bcd0d 	andseq	ip, fp, sp, lsl #26
    71b8:	236d0400 	cmncs	sp, #0, 8
    71bc:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    71c0:	ca0d0101 	bgt	3475cc <__RAM_SIZE+0x2475cc>
    71c4:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    71c8:	06b02373 			; <UNDEFINED> instruction: 0x06b02373
    71cc:	01010000 	mrseq	r0, (UNDEF: 1)
    71d0:	001db50d 	andseq	fp, sp, sp, lsl #10
    71d4:	21790400 	cmncs	r9, r0, lsl #8
    71d8:	0000008b 	andeq	r0, r0, fp, lsl #1
    71dc:	e30d0101 	movw	r0, #53505	; 0xd101
    71e0:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    71e4:	06ee227e 			; <UNDEFINED> instruction: 0x06ee227e
    71e8:	01010000 	mrseq	r0, (UNDEF: 1)
    71ec:	020d040b 	andeq	r0, sp, #184549376	; 0xb000000
    71f0:	b50d0000 	strlt	r0, [sp, #-0]
    71f4:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    71f8:	00972183 	addseq	r2, r7, r3, lsl #3
    71fc:	01010000 	mrseq	r0, (UNDEF: 1)
    7200:	001dc70d 	andseq	ip, sp, sp, lsl #14
    7204:	22880400 	addcs	r0, r8, #0, 8
    7208:	0000068e 	andeq	r0, r0, lr, lsl #13
    720c:	870d0101 	strhi	r0, [sp, -r1, lsl #2]
    7210:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    7214:	0641218f 	strbeq	r2, [r1], -pc, lsl #3
    7218:	01010000 	mrseq	r0, (UNDEF: 1)
    721c:	001e430d 	andseq	r4, lr, sp, lsl #6
    7220:	22940400 	addscs	r0, r4, #0, 8
    7224:	00000076 	andeq	r0, r0, r6, ror r0
    7228:	5b0d0101 	blpl	347634 <__RAM_SIZE+0x247634>
    722c:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    7230:	00972199 	umullseq	r2, r7, r9, r1
    7234:	01010000 	mrseq	r0, (UNDEF: 1)
    7238:	001d210d 	andseq	r2, sp, sp, lsl #2
    723c:	219e0400 	orrscs	r0, lr, r0, lsl #8
    7240:	0000008b 	andeq	r0, r0, fp, lsl #1
    7244:	970e0101 	strls	r0, [lr, -r1, lsl #2]
    7248:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    724c:	10000007 	andne	r0, r0, r7
    7250:	00000029 	andeq	r0, r0, r9, lsr #32
    7254:	0d0003ff 	stceq	3, cr0, [r0, #-1020]	; 0xfffffc04
    7258:	00001c18 	andeq	r1, r0, r8, lsl ip
    725c:	4821a304 	stmdami	r1!, {r2, r8, r9, sp, pc}
    7260:	01000007 	tsteq	r0, r7
    7264:	1ca50d01 	stcne	13, cr0, [r5], #4
    7268:	b2040000 	andlt	r0, r4, #0
    726c:	00009721 	andeq	r9, r0, r1, lsr #14
    7270:	0d010100 	stfeqs	f0, [r1, #-0]
    7274:	00001c7e 	andeq	r1, r0, lr, ror ip
    7278:	9721b704 	strls	fp, [r1, -r4, lsl #14]!
    727c:	01000000 	mrseq	r0, (UNDEF: 0)
    7280:	1cfa0d01 	ldclne	13, cr0, [sl], #4
    7284:	bc040000 	stclt	0, cr0, [r4], {-0}
    7288:	00009721 	andeq	r9, r0, r1, lsr #14
    728c:	0d010100 	stfeqs	f0, [r1, #-0]
    7290:	00001d34 	andeq	r1, r0, r4, lsr sp
    7294:	9721c104 	strls	ip, [r1, -r4, lsl #2]!
    7298:	01000000 	mrseq	r0, (UNDEF: 0)
    729c:	1c460d01 	mcrrne	13, 0, r0, r6, cr1
    72a0:	c9040000 	stmdbgt	r4, {}	; <UNPREDICTABLE>
    72a4:	00009721 	andeq	r9, r0, r1, lsr #14
    72a8:	11010100 	mrsne	r0, (UNDEF: 17)
    72ac:	00000654 	andeq	r0, r0, r4, asr r6
    72b0:	05152901 	ldreq	r2, [r5, #-2305]	; 0xfffff6ff
    72b4:	00017c03 	andeq	r7, r1, r3, lsl #24
    72b8:	06701138 			; <UNDEFINED> instruction: 0x06701138
    72bc:	2f010000 	svccs	0x00010000
    72c0:	70030515 	andvc	r0, r3, r5, lsl r5
    72c4:	11380001 	teqne	r8, r1
    72c8:	00000694 	muleq	r0, r4, r6
    72cc:	05163501 	ldreq	r3, [r6, #-1281]	; 0xfffffaff
    72d0:	00000003 	andeq	r0, r0, r3
    72d4:	06a21100 	strteq	r1, [r2], r0, lsl #2
    72d8:	3b010000 	blcc	472e0 <SYSTICK_CYCLES+0x38881>
    72dc:	78030517 	stmdavc	r3, {r0, r1, r2, r4, r8, sl}
    72e0:	11380001 	teqne	r8, r1
    72e4:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
    72e8:	05173c01 	ldreq	r3, [r7, #-3073]	; 0xfffff3ff
    72ec:	00017403 	andeq	r7, r1, r3, lsl #8
    72f0:	06c41138 			; <UNDEFINED> instruction: 0x06c41138
    72f4:	42010000 	andmi	r0, r1, #0
    72f8:	68030517 	stmdavs	r3, {r0, r1, r2, r4, r8, sl}
    72fc:	11380001 	teqne	r8, r1
    7300:	000006d2 	ldrdeq	r0, [r0], -r2
    7304:	05154801 	ldreq	r4, [r5, #-2049]	; 0xfffff7ff
    7308:	00016c03 	andeq	r6, r1, r3, lsl #24
    730c:	06e01138 			; <UNDEFINED> instruction: 0x06e01138
    7310:	4d010000 	stcmi	0, cr0, [r1, #-0]
    7314:	00030516 	andeq	r0, r3, r6, lsl r5
    7318:	11000000 	mrsne	r0, (UNDEF: 0)
    731c:	000006f4 	strdeq	r0, [r0], -r4
    7320:	05155201 	ldreq	r5, [r5, #-513]	; 0xfffffdff
    7324:	00000003 	andeq	r0, r0, r3
    7328:	07021100 	streq	r1, [r2, -r0, lsl #2]
    732c:	57010000 	strpl	r0, [r1, -r0]
    7330:	00030515 	andeq	r0, r3, r5, lsl r5
    7334:	11000000 	mrsne	r0, (UNDEF: 0)
    7338:	00000710 	andeq	r0, r0, r0, lsl r7
    733c:	05155e01 	ldreq	r5, [r5, #-3585]	; 0xfffff1ff
    7340:	00018003 	andeq	r8, r1, r3
    7344:	071e1138 			; <UNDEFINED> instruction: 0x071e1138
    7348:	63010000 	movwvs	r0, #4096	; 0x1000
    734c:	00030516 	andeq	r0, r3, r6, lsl r5
    7350:	11000000 	mrsne	r0, (UNDEF: 0)
    7354:	0000072c 	andeq	r0, r0, ip, lsr #14
    7358:	05156801 	ldreq	r6, [r5, #-2049]	; 0xfffff7ff
    735c:	00000003 	andeq	r0, r0, r3
    7360:	073a1100 	ldreq	r1, [sl, -r0, lsl #2]!
    7364:	6d010000 	stcvs	0, cr0, [r1, #-0]
    7368:	00030515 	andeq	r0, r3, r5, lsl r5
    736c:	11000000 	mrsne	r0, (UNDEF: 0)
    7370:	00000759 	andeq	r0, r0, r9, asr r7
    7374:	05157201 	ldreq	r7, [r5, #-513]	; 0xfffffdff
    7378:	00000003 	andeq	r0, r0, r3
    737c:	07671100 	strbeq	r1, [r7, -r0, lsl #2]!
    7380:	81010000 	mrshi	r0, (UNDEF: 1)
    7384:	00030515 	andeq	r0, r3, r5, lsl r5
    7388:	11000000 	mrsne	r0, (UNDEF: 0)
    738c:	00000775 	andeq	r0, r0, r5, ror r7
    7390:	05158601 	ldreq	r8, [r5, #-1537]	; 0xfffff9ff
    7394:	00000003 	andeq	r0, r0, r3
    7398:	07831100 	streq	r1, [r3, r0, lsl #2]
    739c:	8b010000 	blhi	473a4 <SYSTICK_CYCLES+0x38945>
    73a0:	00030515 	andeq	r0, r3, r5, lsl r5
    73a4:	11000000 	mrsne	r0, (UNDEF: 0)
    73a8:	00000791 	muleq	r0, r1, r7
    73ac:	05159001 	ldreq	r9, [r5, #-1]
    73b0:	00000003 	andeq	r0, r0, r3
    73b4:	079f1100 	ldreq	r1, [pc, r0, lsl #2]
    73b8:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    73bc:	00030515 	andeq	r0, r3, r5, lsl r5
    73c0:	11000000 	mrsne	r0, (UNDEF: 0)
    73c4:	00000662 	andeq	r0, r0, r2, ror #12
    73c8:	0515a101 	ldreq	sl, [r5, #-257]	; 0xfffffeff
    73cc:	00025803 	andeq	r5, r2, r3, lsl #16
    73d0:	61011238 	tstvs	r1, r8, lsr r2
    73d4:	0100000d 	tsteq	r0, sp
    73d8:	000107cc 	andeq	r0, r1, ip, asr #15
    73dc:	00000000 	andeq	r0, r0, r0
    73e0:	32000000 	andcc	r0, r0, #0
    73e4:	01000031 	tsteq	r0, r1, lsr r0
    73e8:	00000934 	andeq	r0, r0, r4, lsr r9
    73ec:	000c2813 	andeq	r2, ip, r3, lsl r8
    73f0:	09d00100 	ldmibeq	r0, {r8}^
    73f4:	0000008b 	andeq	r0, r0, fp, lsl #1
    73f8:	0000316c 	andeq	r3, r0, ip, ror #2
    73fc:	0000316a 	andeq	r3, r0, sl, ror #2
    7400:	00000014 	andeq	r0, r0, r4, lsl r0
    7404:	00093400 	andeq	r3, r9, r0, lsl #8
    7408:	50011500 	andpl	r1, r1, r0, lsl #10
    740c:	01800305 	orreq	r0, r0, r5, lsl #6
    7410:	01153800 	tsteq	r5, r0, lsl #16
    7414:	00030551 	andeq	r0, r3, r1, asr r5
    7418:	15000000 	strne	r0, [r0, #-0]
    741c:	0c055301 	stceq	3, cr5, [r5], {1}
    7420:	4154494d 	cmpmi	r4, sp, asr #18
    7424:	107d0215 	rsbsne	r0, sp, r5, lsl r2
    7428:	02153001 	andseq	r3, r5, #1
    742c:	3001147d 	andcc	r1, r1, sp, ror r4
    7430:	01160000 	tsteq	r6, r0
    7434:	001c3401 	andseq	r3, ip, r1, lsl #8
    7438:	001c3400 	andseq	r3, ip, r0, lsl #8
    743c:	06d50300 	ldrbeq	r0, [r5], r0, lsl #6
    7440:	019d000d 	orrseq	r0, sp, sp
    7444:	00020000 	andeq	r0, r2, r0
    7448:	00001326 	andeq	r1, r0, r6, lsr #6
    744c:	000f0104 	andeq	r0, pc, r4, lsl #2
    7450:	640c0000 	strvs	r0, [ip], #-0
    7454:	9d00001e 	stcls	0, cr0, [r0, #-120]	; 0xffffff88
    7458:	38000001 	stmdacc	r0, {r0}
    745c:	00000003 	andeq	r0, r0, r3
    7460:	00000000 	andeq	r0, r0, r0
    7464:	e0000000 	and	r0, r0, r0
    7468:	0200002d 	andeq	r0, r0, #45	; 0x2d
    746c:	01440704 	cmpeq	r4, r4, lsl #14
    7470:	04030000 	streq	r0, [r3], #-0
    7474:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    7478:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    747c:	0000015d 	andeq	r0, r0, sp, asr r1
    7480:	51040802 	tstpl	r4, r2, lsl #16
    7484:	02000001 	andeq	r0, r0, #1
    7488:	00f60601 	rscseq	r0, r6, r1, lsl #12
    748c:	01020000 	mrseq	r0, (UNDEF: 2)
    7490:	0000f408 	andeq	pc, r0, r8, lsl #8
    7494:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    7498:	0000017b 	andeq	r0, r0, fp, ror r1
    749c:	02070202 	andeq	r0, r7, #536870912	; 0x20000000
    74a0:	02000001 	andeq	r0, r0, #1
    74a4:	01620504 	cmneq	r2, r4, lsl #10
    74a8:	04020000 	streq	r0, [r2], #-0
    74ac:	00013f07 	andeq	r3, r1, r7, lsl #30
    74b0:	07080200 	streq	r0, [r8, -r0, lsl #4]
    74b4:	0000013a 	andeq	r0, r0, sl, lsr r1
    74b8:	fd080102 	stc2	1, cr0, [r8, #-8]
    74bc:	04000000 	streq	r0, [r0], #-0
    74c0:	000010aa 	andeq	r1, r0, sl, lsr #1
    74c4:	68317803 	ldmdavs	r1!, {r0, r1, fp, ip, sp, lr}
    74c8:	05000000 	streq	r0, [r0, #-0]
    74cc:	00000dcb 	andeq	r0, r0, fp, asr #27
    74d0:	0182021c 	orreq	r0, r2, ip, lsl r2
    74d4:	00010810 	andeq	r0, r1, r0, lsl r8
    74d8:	12440600 	subne	r0, r4, #0, 12
    74dc:	86020000 	strhi	r0, [r2], -r0
    74e0:	007d1901 	rsbseq	r1, sp, r1, lsl #18
    74e4:	23020000 	movwcs	r0, #8192	; 0x2000
    74e8:	0bce0600 	bleq	ff388cf0 <__RAM_segment_used_end__+0xc7288cf0>
    74ec:	87020000 	strhi	r0, [r2, -r0]
    74f0:	007d1901 	rsbseq	r1, sp, r1, lsl #18
    74f4:	23020000 	movwcs	r0, #8192	; 0x2000
    74f8:	0c6b0604 	stcleq	6, cr0, [fp], #-16
    74fc:	8a020000 	bhi	87504 <SYSTICK_CYCLES+0x78aa5>
    7500:	01141b01 	tsteq	r4, r1, lsl #22
    7504:	23020000 	movwcs	r0, #8192	; 0x2000
    7508:	08f40608 	ldmeq	r4!, {r3, r9, sl}^
    750c:	8b020000 	blhi	87514 <SYSTICK_CYCLES+0x78ab5>
    7510:	007d1901 	rsbseq	r1, sp, r1, lsl #18
    7514:	23020000 	movwcs	r0, #8192	; 0x2000
    7518:	13da060c 	bicsne	r0, sl, #12, 12	; 0xc00000
    751c:	91020000 	mrsls	r0, (UNDEF: 2)
    7520:	011a1a01 	tsteq	sl, r1, lsl #20
    7524:	23020000 	movwcs	r0, #8192	; 0x2000
    7528:	065a0610 			; <UNDEFINED> instruction: 0x065a0610
    752c:	92020000 	andls	r0, r2, #0
    7530:	011a1a01 	tsteq	sl, r1, lsl #20
    7534:	23020000 	movwcs	r0, #8192	; 0x2000
    7538:	0f2f0614 	svceq	0x002f0614
    753c:	96020000 	strls	r0, [r2], -r0
    7540:	01201b01 			; <UNDEFINED> instruction: 0x01201b01
    7544:	23020000 	movwcs	r0, #8192	; 0x2000
    7548:	01070018 	tsteq	r7, r8, lsl r0
    754c:	00000114 	andeq	r0, r0, r4, lsl r1
    7550:	00007d08 	andeq	r7, r0, r8, lsl #26
    7554:	04090000 	streq	r0, [r9], #-0
    7558:	00000108 	andeq	r0, r0, r8, lsl #2
    755c:	00890409 	addeq	r0, r9, r9, lsl #8
    7560:	04090000 	streq	r0, [r9], #-0
    7564:	0000011a 	andeq	r0, r0, sl, lsl r1
    7568:	000f7e0a 	andeq	r7, pc, sl, lsl #28
    756c:	019b0200 	orrseq	r0, fp, r0, lsl #4
    7570:	00008903 	andeq	r8, r0, r3, lsl #18
    7574:	26040900 	strcs	r0, [r4], -r0, lsl #18
    7578:	09000001 	stmdbeq	r0, {r0}
    757c:	00013304 	andeq	r3, r1, r4, lsl #6
    7580:	9a010b00 	bls	4a188 <SYSTICK_CYCLES+0x3b729>
    7584:	01000019 	tsteq	r0, r9, lsl r0
    7588:	84010749 	strhi	r0, [r1], #-1865	; 0xfffff8b7
    758c:	b210001f 	andslt	r0, r0, #31
    7590:	0210001f 	andseq	r0, r0, #31
    7594:	0c01007d 	stceq	0, cr0, [r1], {125}	; 0x7d
    7598:	00001dd9 	ldrdeq	r1, [r0], -r9
    759c:	33364901 	teqcc	r6, #16384	; 0x4000
    75a0:	01000001 	tsteq	r0, r1
    75a4:	0f410d50 	svceq	0x00410d50
    75a8:	4c010000 	stcmi	0, cr0, [r1], {-0}
    75ac:	00013917 	andeq	r3, r1, r7, lsl r9
    75b0:	00318300 	eorseq	r8, r1, r0, lsl #6
    75b4:	00317f00 	eorseq	r7, r1, r0, lsl #30
    75b8:	1e590d00 	cdpne	13, 5, cr0, cr9, cr0, {0}
    75bc:	4d010000 	stcmi	0, cr0, [r1, #-0]
    75c0:	00013316 	andeq	r3, r1, r6, lsl r3
    75c4:	0031a900 	eorseq	sl, r1, r0, lsl #18
    75c8:	0031a100 	eorseq	sl, r1, r0, lsl #2
    75cc:	1ea50d00 	cdpne	13, 10, cr0, cr5, cr0, {0}
    75d0:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    75d4:	00013316 	andeq	r3, r1, r6, lsl r3
    75d8:	0031e000 	eorseq	lr, r1, r0
    75dc:	0031de00 	eorseq	sp, r1, r0, lsl #28
    75e0:	22000000 	andcs	r0, r0, #0
    75e4:	02000000 	andeq	r0, r0, #0
    75e8:	0013ea00 	andseq	lr, r3, r0, lsl #20
    75ec:	3f010400 	svccc	0x00010400
    75f0:	d400002f 	strle	r0, [r0], #-47	; 0xffffffd1
    75f4:	4410001f 	ldrmi	r0, [r0], #-31	; 0xffffffe1
    75f8:	b4100020 	ldrlt	r0, [r0], #-32	; 0xffffffe0
    75fc:	9d00001e 	stcls	0, cr0, [r0, #-120]	; 0xffffff88
    7600:	d4000001 	strle	r0, [r0], #-1
    7604:	0100001e 	tsteq	r0, lr, lsl r0
    7608:	00002280 	andeq	r2, r0, r0, lsl #5
    760c:	fe000200 	cdp2	2, 0, cr0, cr0, cr0, {0}
    7610:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    7614:	002fc501 	eoreq	ip, pc, r1, lsl #10
    7618:	00204400 	eoreq	r4, r0, r0, lsl #8
    761c:	00212010 	eoreq	r2, r1, r0, lsl r0
    7620:	001ee210 	andseq	lr, lr, r0, lsl r2
    7624:	00019d00 	andeq	r9, r1, r0, lsl #26
    7628:	001ed400 	andseq	sp, lr, r0, lsl #8
    762c:	22800100 	addcs	r0, r0, #0, 2
    7630:	02000000 	andeq	r0, r0, #0
    7634:	00141200 	andseq	r1, r4, r0, lsl #4
    7638:	83010400 	movwhi	r0, #5120	; 0x1400
    763c:	20000030 	andcs	r0, r0, r0, lsr r0
    7640:	f0100021 			; <UNDEFINED> instruction: 0xf0100021
    7644:	0a100021 	beq	4076d0 <__RAM_SIZE+0x3076d0>
    7648:	9d00001f 	stcls	0, cr0, [r0, #-124]	; 0xffffff84
    764c:	d4000001 	strle	r0, [r0], #-1
    7650:	0100001e 	tsteq	r0, lr, lsl r0
    7654:	00002280 	andeq	r2, r0, r0, lsl #5
    7658:	26000200 	strcs	r0, [r0], -r0, lsl #4
    765c:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    7660:	00315401 	eorseq	r5, r1, r1, lsl #8
    7664:	0021f000 	eoreq	pc, r1, r0
    7668:	0022a810 	eoreq	sl, r2, r0, lsl r8
    766c:	001f5110 	andseq	r5, pc, r0, lsl r1	; <UNPREDICTABLE>
    7670:	00019d00 	andeq	r9, r1, r0, lsl #26
    7674:	001ed400 	andseq	sp, lr, r0, lsl #8
    7678:	Address 0x00007678 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
{
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    _tx_thread_initialize();
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
    _tx_timer_initialize();
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
        if(ch == '\n' || it >= size) {
      18:	0b3e0b0b 	bleq	f82c4c <SYSTEM_CLOCK+0x9c9ecc>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	0b002403 	bleq	9034 <__HEAP_SIZE+0x8034>
      24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      28:	04000008 	streq	r0, [r0], #-8
      2c:	13490026 	movtne	r0, #36902	; 0x9026
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
      34:	030c3f01 	movweq	r3, #52993	; 0xcf01
        _tx_thread_system_ni_resume(thread_ptr);
      38:	3b0b3a0e 	blcc	2ce878 <__RAM_SIZE+0x1ce878>
      3c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
}
      40:	1113490c 	tstne	r3, ip, lsl #18
      44:	40011201 	andmi	r1, r1, r1, lsl #4
      48:	0c429706 	mcrreq	7, 0, r9, r2, cr6
        status =  _tx_thread_create(&_tx_timer_thread,
      4c:	00001301 	andeq	r1, r0, r1, lsl #6
      50:	03003406 	movweq	r3, #1030	; 0x406
    } while (status != TX_SUCCESS);
      54:	3b0b3a0e 	blcc	2ce894 <__RAM_SIZE+0x1ce894>
}
      58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      5c:	b7060213 	smladlt	r6, r3, r2, r0
      60:	00000642 	andeq	r0, r0, r2, asr #12
      64:	01828907 	orreq	r8, r2, r7, lsl #18
      68:	31011100 	mrscc	r1, (UNDEF: 17)
      6c:	08000013 	stmdaeq	r0, {r0, r1, r4}
      70:	01018289 	smlabbeq	r1, r9, r2, r8
      74:	13310111 	teqne	r1, #1073741828	; 0x40000004
      78:	00001301 	andeq	r1, r0, r1, lsl #6
      7c:	01828a09 	orreq	r8, r2, r9, lsl #20
      80:	910a0200 	mrsls	r0, R10_fiq
      84:	00000a42 	andeq	r0, r0, r2, asr #20
      88:	0182890a 	orreq	r8, r2, sl, lsl #18
      8c:	31011101 	tstcc	r1, r1, lsl #2
      90:	0b000013 	bleq	e4 <__STACKSEAL_SIZE+0xe4>
      94:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
      98:	0b3b0b3a 	bleq	ec2d88 <SYSTEM_CLOCK+0x90a008>
      9c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
      a0:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
      a4:	030c3f01 	movweq	r3, #52993	; 0xcf01
      a8:	3b0b3a0e 	blcc	2ce8e8 <__RAM_SIZE+0x1ce8e8>
      ac:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
      b0:	1201110c 	andne	r1, r1, #12, 2
      b4:	97064001 	strls	r4, [r6, -r1]
      b8:	13010c42 	movwne	r0, #7234	; 0x1c42
      bc:	340d0000 	strcc	r0, [sp], #-0
      c0:	490e0300 	stmdbmi	lr, {r8, r9}
      c4:	020c3413 	andeq	r3, ip, #318767104	; 0x13000000
      c8:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
      cc:	13490101 	movtne	r0, #37121	; 0x9101
      d0:	00001301 	andeq	r1, r0, r1, lsl #6
      d4:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
      d8:	000b2f13 	andeq	r2, fp, r3, lsl pc
      dc:	002e1000 	eoreq	r1, lr, r0
      e0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
      e4:	030e4087 	movweq	r4, #57479	; 0xe087
      e8:	3b0b3a0e 	blcc	2ce928 <__RAM_SIZE+0x1ce928>
      ec:	000b390b 	andeq	r3, fp, fp, lsl #18
      f0:	002e1100 	eoreq	r1, lr, r0, lsl #2
      f4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
      f8:	030e4087 	movweq	r4, #57479	; 0xe087
      fc:	3b0b3a0e 	blcc	2ce93c <__RAM_SIZE+0x1ce93c>
     100:	0000000b 	andeq	r0, r0, fp
     104:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     108:	030b130e 	movweq	r1, #45838	; 0xb30e
     10c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     110:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     114:	00061001 	andeq	r1, r6, r1
     118:	00240200 	eoreq	r0, r4, r0, lsl #4
     11c:	0b3e0b0b 	bleq	f82d50 <SYSTEM_CLOCK+0x9c9fd0>
     120:	00000e03 	andeq	r0, r0, r3, lsl #28
     124:	03001603 	movweq	r1, #1539	; 0x603
     128:	3b0b3a0e 	blcc	2ce968 <__RAM_SIZE+0x1ce968>
     12c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     130:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     134:	0b0b0024 	bleq	2c01cc <__RAM_SIZE+0x1c01cc>
     138:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     13c:	35050000 	strcc	r0, [r5, #-0]
     140:	00134900 	andseq	r4, r3, r0, lsl #18
     144:	00260600 	eoreq	r0, r6, r0, lsl #12
     148:	00001349 	andeq	r1, r0, r9, asr #6
     14c:	0b011307 	bleq	44d70 <SYSTICK_CYCLES+0x36311>
     150:	3b0b3a05 	blcc	2ce96c <__RAM_SIZE+0x1ce96c>
     154:	010b3905 	tsteq	fp, r5, lsl #18
     158:	08000013 	stmdaeq	r0, {r0, r1, r4}
     15c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     160:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     164:	13490b39 	movtne	r0, #39737	; 0x9b39
     168:	00000a38 	andeq	r0, r0, r8, lsr sl
     16c:	03000d09 	movweq	r0, #3337	; 0xd09
     170:	3b0b3a08 	blcc	2ce998 <__RAM_SIZE+0x1ce998>
     174:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     178:	000a3813 	andeq	r3, sl, r3, lsl r8
     17c:	01010a00 	tsteq	r1, r0, lsl #20
     180:	13011349 	movwne	r1, #4937	; 0x1349
     184:	210b0000 	mrscs	r0, (UNDEF: 11)
     188:	2f134900 	svccs	0x00134900
     18c:	0c00000b 	stceq	0, cr0, [r0], {11}
     190:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     194:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     198:	13490b39 	movtne	r0, #39737	; 0x9b39
     19c:	0f0d0000 	svceq	0x000d0000
     1a0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     1a4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     1a8:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
     1ac:	340f0000 	strcc	r0, [pc], #-0	; 1b4 <__STACKSEAL_SIZE+0x1b4>
     1b0:	3a0e0300 	bcc	380db8 <__RAM_SIZE+0x280db8>
     1b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1b8:	3f13490b 	svccc	0x0013490b
     1bc:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     1c0:	00211000 	eoreq	r1, r1, r0
     1c4:	052f1349 	streq	r1, [pc, #-841]!	; fffffe83 <__RAM_segment_used_end__+0xc7effe83>
     1c8:	34110000 	ldrcc	r0, [r1], #-0
     1cc:	3a134700 	bcc	4d1dd4 <__RAM_SIZE+0x3d1dd4>
     1d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1d4:	000a020b 	andeq	r0, sl, fp, lsl #4
     1d8:	002e1200 	eoreq	r1, lr, r0, lsl #4
     1dc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     1e0:	0b3b0b3a 	bleq	ec2ed0 <SYSTEM_CLOCK+0x90a150>
     1e4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     1e8:	01120111 	tsteq	r2, r1, lsl r1
     1ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     1f0:	0000000c 	andeq	r0, r0, ip
     1f4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     1f8:	030b130e 	movweq	r1, #45838	; 0xb30e
     1fc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     200:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     204:	00061001 	andeq	r1, r6, r1
     208:	00240200 	eoreq	r0, r4, r0, lsl #4
     20c:	0b3e0b0b 	bleq	f82e40 <SYSTEM_CLOCK+0x9ca0c0>
     210:	00000e03 	andeq	r0, r0, r3, lsl #28
     214:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
     218:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     21c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     220:	0b3b0b3a 	bleq	ec2f10 <SYSTEM_CLOCK+0x90a190>
     224:	13490b39 	movtne	r0, #39737	; 0x9b39
     228:	24050000 	strcs	r0, [r5], #-0
     22c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     230:	0008030b 	andeq	r0, r8, fp, lsl #6
     234:	01130600 	tsteq	r3, r0, lsl #12
     238:	0b0b0e03 	bleq	2c3a4c <__RAM_SIZE+0x1c3a4c>
     23c:	0b3b0b3a 	bleq	ec2f2c <SYSTEM_CLOCK+0x90a1ac>
     240:	00001301 	andeq	r1, r0, r1, lsl #6
     244:	03000d07 	movweq	r0, #3335	; 0xd07
     248:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
     24c:	000c340a 	andeq	r3, ip, sl, lsl #8
     250:	000f0800 	andeq	r0, pc, r0, lsl #16
     254:	00000b0b 	andeq	r0, r0, fp, lsl #22
     258:	0b000f09 	bleq	3e84 <__HEAP_SIZE+0x2e84>
     25c:	0013490b 	andseq	r4, r3, fp, lsl #18
     260:	01150a00 	tsteq	r5, r0, lsl #20
     264:	13010c27 	movwne	r0, #7207	; 0x1c27
     268:	050b0000 	streq	r0, [fp, #-0]
     26c:	00134900 	andseq	r4, r3, r0, lsl #18
     270:	01130c00 	tsteq	r3, r0, lsl #24
     274:	0b3a0b0b 	bleq	e82ea8 <SYSTEM_CLOCK+0x8ca128>
     278:	0b390b3b 	bleq	e42f6c <SYSTEM_CLOCK+0x88a1ec>
     27c:	00001301 	andeq	r1, r0, r1, lsl #6
     280:	03000d0d 	movweq	r0, #3341	; 0xd0d
     284:	3b0b3a08 	blcc	2ceaac <__RAM_SIZE+0x1ceaac>
     288:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     28c:	000a3813 	andeq	r3, sl, r3, lsl r8
     290:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
     294:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     298:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     29c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     2a0:	01111349 	tsteq	r1, r9, asr #6
     2a4:	06400112 			; <UNDEFINED> instruction: 0x06400112
     2a8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     2ac:	0f000013 	svceq	0x00000013
     2b0:	08030005 	stmdaeq	r3, {r0, r2}
     2b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2b8:	13490b39 	movtne	r0, #39737	; 0x9b39
     2bc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     2c0:	10000006 	andne	r0, r0, r6
     2c4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     2c8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2cc:	13490b39 	movtne	r0, #39737	; 0x9b39
     2d0:	00000a02 	andeq	r0, r0, r2, lsl #20
     2d4:	00001811 	andeq	r1, r0, r1, lsl r8
     2d8:	00341200 	eorseq	r1, r4, r0, lsl #4
     2dc:	0b3a0803 	bleq	e822f0 <SYSTEM_CLOCK+0x8c9570>
     2e0:	0b39053b 	bleq	e417d4 <SYSTEM_CLOCK+0x888a54>
     2e4:	0a021349 	beq	85010 <SYSTICK_CYCLES+0x765b1>
     2e8:	34130000 	ldrcc	r0, [r3], #-0
     2ec:	3a0e0300 	bcc	380ef4 <__RAM_SIZE+0x280ef4>
     2f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     2f8:	1400000a 	strne	r0, [r0], #-10
     2fc:	08030034 	stmdaeq	r3, {r2, r4, r5}
     300:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     304:	13490b39 	movtne	r0, #39737	; 0x9b39
     308:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     30c:	15000006 	strne	r0, [r0, #-6]
     310:	01018289 	smlabbeq	r1, r9, r2, r8
     314:	13310111 	teqne	r1, #1073741828	; 0x40000004
     318:	8a160000 	bhi	580320 <__RAM_SIZE+0x480320>
     31c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     320:	0a42910a 	beq	10a4750 <SYSTEM_CLOCK+0xaeb9d0>
     324:	05170000 	ldreq	r0, [r7, #-0]
     328:	3a0e0300 	bcc	380f30 <__RAM_SIZE+0x280f30>
     32c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     330:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     334:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     338:	01180000 	tsteq	r8, r0
     33c:	01134901 	tsteq	r3, r1, lsl #18
     340:	19000013 	stmdbne	r0, {r0, r1, r4}
     344:	13490021 	movtne	r0, #36897	; 0x9021
     348:	00000b2f 	andeq	r0, r0, pc, lsr #22
     34c:	03012e1a 	movweq	r2, #7706	; 0x1e1a
     350:	3b0b3a0e 	blcc	2ceb90 <__RAM_SIZE+0x1ceb90>
     354:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     358:	1113490c 	tstne	r3, ip, lsl #18
     35c:	40011201 	andmi	r1, r1, r1, lsl #4
     360:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     364:	00001301 	andeq	r1, r0, r1, lsl #6
     368:	0300051b 	movweq	r0, #1307	; 0x51b
     36c:	3b0b3a08 	blcc	2ceb94 <__RAM_SIZE+0x1ceb94>
     370:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     374:	000a0213 	andeq	r0, sl, r3, lsl r2
     378:	00341c00 	eorseq	r1, r4, r0, lsl #24
     37c:	0b3a0e03 	bleq	e83b90 <SYSTEM_CLOCK+0x8cae10>
     380:	0b39053b 	bleq	e41874 <SYSTEM_CLOCK+0x888af4>
     384:	06021349 	streq	r1, [r2], -r9, asr #6
     388:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     38c:	010b1d00 	tsteq	fp, r0, lsl #26
     390:	01120111 	tsteq	r2, r1, lsl r1
     394:	00001301 	andeq	r1, r0, r1, lsl #6
     398:	55010b1e 	strpl	r0, [r1, #-2846]	; 0xfffff4e2
     39c:	00130106 	andseq	r0, r3, r6, lsl #2
     3a0:	00341f00 	eorseq	r1, r4, r0, lsl #30
     3a4:	0b3a0e03 	bleq	e83bb8 <SYSTEM_CLOCK+0x8cae38>
     3a8:	0b39053b 	bleq	e4189c <SYSTEM_CLOCK+0x888b1c>
     3ac:	00001349 	andeq	r1, r0, r9, asr #6
     3b0:	01828920 	orreq	r8, r2, r0, lsr #18
     3b4:	31011101 	tstcc	r1, r1, lsl #2
     3b8:	00130113 	andseq	r0, r3, r3, lsl r1
     3bc:	82892100 	addhi	r2, r9, #0, 2
     3c0:	01110101 	tsteq	r1, r1, lsl #2
     3c4:	00001301 	andeq	r1, r0, r1, lsl #6
     3c8:	01828922 	orreq	r8, r2, r2, lsr #18
     3cc:	00011101 	andeq	r1, r1, r1, lsl #2
     3d0:	011d2300 	tsteq	sp, r0, lsl #6
     3d4:	01111331 	tsteq	r1, r1, lsr r3
     3d8:	0b580112 	bleq	1600828 <SYSTEM_CLOCK+0x1047aa8>
     3dc:	0b570559 	bleq	15c1948 <SYSTEM_CLOCK+0x1008bc8>
     3e0:	00001301 	andeq	r1, r0, r1, lsl #6
     3e4:	31000524 	tstcc	r0, r4, lsr #10
     3e8:	b7060213 	smladlt	r6, r3, r2, r0
     3ec:	00000642 	andeq	r0, r0, r2, asr #12
     3f0:	31000525 	tstcc	r0, r5, lsr #10
     3f4:	26000013 			; <UNDEFINED> instruction: 0x26000013
     3f8:	13310034 	teqne	r1, #52	; 0x34
     3fc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     400:	27000006 	strcs	r0, [r0, -r6]
     404:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     408:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     40c:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     410:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     414:	010b5705 	tsteq	fp, r5, lsl #14
     418:	28000013 	stmdacs	r0, {r0, r1, r4}
     41c:	01018289 	smlabbeq	r1, r9, r2, r8
     420:	42930111 	addsmi	r0, r3, #1073741828	; 0x40000004
     424:	0013010a 	andseq	r0, r3, sl, lsl #2
     428:	01172900 	tsteq	r7, r0, lsl #18
     42c:	0b3a0b0b 	bleq	e83060 <SYSTEM_CLOCK+0x8ca2e0>
     430:	0b39053b 	bleq	e41924 <SYSTEM_CLOCK+0x888ba4>
     434:	00001301 	andeq	r1, r0, r1, lsl #6
     438:	03000d2a 	movweq	r0, #3370	; 0xd2a
     43c:	3b0b3a08 	blcc	2cec64 <__RAM_SIZE+0x1cec64>
     440:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     444:	2b000013 	blcs	498 <STACK_SIZE+0x98>
     448:	00018289 	andeq	r8, r1, r9, lsl #5
     44c:	13310111 	teqne	r1, #1073741828	; 0x40000004
     450:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     454:	3a0e0301 	bcc	381060 <__RAM_SIZE+0x281060>
     458:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     45c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     460:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     464:	97064001 	strls	r4, [r6, -r1]
     468:	13010c42 	movwne	r0, #7234	; 0x1c42
     46c:	052d0000 	streq	r0, [sp, #-0]!
     470:	3a080300 	bcc	201078 <__RAM_SIZE+0x101078>
     474:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     478:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     47c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     480:	052e0000 	streq	r0, [lr, #-0]!
     484:	3a0e0300 	bcc	38108c <__RAM_SIZE+0x28108c>
     488:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     48c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     490:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     494:	342f0000 	strtcc	r0, [pc], #-0	; 49c <STACK_SIZE+0x9c>
     498:	3a0e0300 	bcc	3810a0 <__RAM_SIZE+0x2810a0>
     49c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     4a4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     4a8:	34300000 	ldrtcc	r0, [r0], #-0
     4ac:	3a080300 	bcc	2010b4 <__RAM_SIZE+0x1010b4>
     4b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     4b8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     4bc:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
     4c0:	3a0e0301 	bcc	3810cc <__RAM_SIZE+0x2810cc>
     4c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     4cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     4d0:	970a4001 	strls	r4, [sl, -r1]
     4d4:	13010c42 	movwne	r0, #7234	; 0x1c42
     4d8:	1d320000 	ldcne	0, cr0, [r2, #-0]
     4dc:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     4e0:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     4e4:	01120111 	tsteq	r2, r1, lsl r1
     4e8:	0b590b58 	bleq	1643250 <SYSTEM_CLOCK+0x108a4d0>
     4ec:	00000b57 	andeq	r0, r0, r7, asr fp
     4f0:	03012e33 	movweq	r2, #7731	; 0x1e33
     4f4:	3b0b3a0e 	blcc	2ced34 <__RAM_SIZE+0x1ced34>
     4f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     4fc:	2013490c 	andscs	r4, r3, ip, lsl #18
     500:	0013010b 	andseq	r0, r3, fp, lsl #2
     504:	00053400 	andeq	r3, r5, r0, lsl #8
     508:	0b3a0803 	bleq	e8251c <SYSTEM_CLOCK+0x8c979c>
     50c:	0b390b3b 	bleq	e43200 <SYSTEM_CLOCK+0x88a480>
     510:	00001349 	andeq	r1, r0, r9, asr #6
     514:	03000535 	movweq	r0, #1333	; 0x535
     518:	3b0b3a0e 	blcc	2ced58 <__RAM_SIZE+0x1ced58>
     51c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     520:	36000013 			; <UNDEFINED> instruction: 0x36000013
     524:	08030034 	stmdaeq	r3, {r2, r4, r5}
     528:	0b3b0b3a 	bleq	ec3218 <SYSTEM_CLOCK+0x90a498>
     52c:	13490b39 	movtne	r0, #39737	; 0x9b39
     530:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
     534:	3a0e0301 	bcc	381140 <__RAM_SIZE+0x281140>
     538:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     53c:	110c270b 	tstne	ip, fp, lsl #14
     540:	40011201 	andmi	r1, r1, r1, lsl #4
     544:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     548:	00001301 	andeq	r1, r0, r1, lsl #6
     54c:	03012e38 	movweq	r2, #7736	; 0x1e38
     550:	3b0b3a0e 	blcc	2ced90 <__RAM_SIZE+0x1ced90>
     554:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     558:	1201110c 	andne	r1, r1, #12, 2
     55c:	97064001 	strls	r4, [r6, -r1]
     560:	13010c42 	movwne	r0, #7234	; 0x1c42
     564:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
     568:	3a0e0301 	bcc	381174 <__RAM_SIZE+0x281174>
     56c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     570:	110c270b 	tstne	ip, fp, lsl #14
     574:	40011201 	andmi	r1, r1, r1, lsl #4
     578:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     57c:	00001301 	andeq	r1, r0, r1, lsl #6
     580:	0300053a 	movweq	r0, #1338	; 0x53a
     584:	3b0b3a0e 	blcc	2cedc4 <__RAM_SIZE+0x1cedc4>
     588:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     58c:	000a0213 	andeq	r0, sl, r3, lsl r2
     590:	00053b00 	andeq	r3, r5, r0, lsl #22
     594:	0b3a0803 	bleq	e825a8 <SYSTEM_CLOCK+0x8c9828>
     598:	0b390b3b 	bleq	e4328c <SYSTEM_CLOCK+0x88a50c>
     59c:	0a021349 	beq	852c8 <SYSTICK_CYCLES+0x76869>
     5a0:	2e3c0000 	cdpcs	0, 3, cr0, cr12, cr0, {0}
     5a4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     5a8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     5ac:	00000e03 	andeq	r0, r0, r3, lsl #28
     5b0:	3f002e3d 	svccc	0x00002e3d
     5b4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     5b8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     5bc:	0b3b0b3a 	bleq	ec32ac <SYSTEM_CLOCK+0x90a52c>
     5c0:	00000b39 	andeq	r0, r0, r9, lsr fp
     5c4:	01110100 	tsteq	r1, r0, lsl #2
     5c8:	0b130e25 	bleq	4c3e64 <__RAM_SIZE+0x3c3e64>
     5cc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     5d0:	01110655 	tsteq	r1, r5, asr r6
     5d4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     5d8:	24020000 	strcs	r0, [r2], #-0
     5dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     5e0:	000e030b 	andeq	r0, lr, fp, lsl #6
     5e4:	00160300 	andseq	r0, r6, r0, lsl #6
     5e8:	0b3a0e03 	bleq	e83dfc <SYSTEM_CLOCK+0x8cb07c>
     5ec:	0b390b3b 	bleq	e432e0 <SYSTEM_CLOCK+0x88a560>
     5f0:	00001349 	andeq	r1, r0, r9, asr #6
     5f4:	0b002404 	bleq	960c <__HEAP_SIZE+0x860c>
     5f8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     5fc:	05000008 	streq	r0, [r0, #-8]
     600:	13490026 	movtne	r0, #36902	; 0x9026
     604:	0f060000 	svceq	0x00060000
     608:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     60c:	07000013 	smladeq	r0, r3, r0, r0
     610:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 560 <STACK_SIZE+0x160>
     614:	0b3a0e03 	bleq	e83e28 <SYSTEM_CLOCK+0x8cb0a8>
     618:	0b390b3b 	bleq	e4330c <SYSTEM_CLOCK+0x88a58c>
     61c:	13490c27 	movtne	r0, #39975	; 0x9c27
     620:	01120111 	tsteq	r2, r1, lsl r1
     624:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     628:	0013010c 	andseq	r0, r3, ip, lsl #2
     62c:	00050800 	andeq	r0, r5, r0, lsl #16
     630:	0b3a0e03 	bleq	e83e44 <SYSTEM_CLOCK+0x8cb0c4>
     634:	0b390b3b 	bleq	e43328 <SYSTEM_CLOCK+0x88a5a8>
     638:	06021349 	streq	r1, [r2], -r9, asr #6
     63c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     640:	00340900 	eorseq	r0, r4, r0, lsl #18
     644:	0b3a0803 	bleq	e82658 <SYSTEM_CLOCK+0x8c98d8>
     648:	0b390b3b 	bleq	e4333c <SYSTEM_CLOCK+0x88a5bc>
     64c:	06021349 	streq	r1, [r2], -r9, asr #6
     650:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     654:	82890a00 	addhi	r0, r9, #0, 20
     658:	01110001 	tsteq	r1, r1
     65c:	00001331 	andeq	r1, r0, r1, lsr r3
     660:	3f012e0b 	svccc	0x00012e0b
     664:	3a0e030c 	bcc	38129c <__RAM_SIZE+0x28129c>
     668:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     66c:	110c270b 	tstne	ip, fp, lsl #14
     670:	40011201 	andmi	r1, r1, r1, lsl #4
     674:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     678:	00001301 	andeq	r1, r0, r1, lsl #6
     67c:	0182890c 	orreq	r8, r2, ip, lsl #18
     680:	31011101 	tstcc	r1, r1, lsl #2
     684:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     688:	0001828a 	andeq	r8, r1, sl, lsl #5
     68c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     690:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
     694:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5e4 <STACK_SIZE+0x1e4>
     698:	0b3a0e03 	bleq	e83eac <SYSTEM_CLOCK+0x8cb12c>
     69c:	0b390b3b 	bleq	e43390 <SYSTEM_CLOCK+0x88a610>
     6a0:	01110c27 	tsteq	r1, r7, lsr #24
     6a4:	0a400112 	beq	1000af4 <SYSTEM_CLOCK+0xa47d74>
     6a8:	000c4297 	muleq	ip, r7, r2
     6ac:	00340f00 	eorseq	r0, r4, r0, lsl #30
     6b0:	0b3a0e03 	bleq	e83ec4 <SYSTEM_CLOCK+0x8cb144>
     6b4:	0b390b3b 	bleq	e433a8 <SYSTEM_CLOCK+0x88a628>
     6b8:	06021349 	streq	r1, [r2], -r9, asr #6
     6bc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     6c0:	002e1000 	eoreq	r1, lr, r0
     6c4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     6c8:	0b3b0b3a 	bleq	ec33b8 <SYSTEM_CLOCK+0x90a638>
     6cc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     6d0:	01111349 	tsteq	r1, r9, asr #6
     6d4:	0a400112 	beq	1000b24 <SYSTEM_CLOCK+0xa47da4>
     6d8:	000c4297 	muleq	ip, r7, r2
     6dc:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
     6e0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     6e4:	0b3b0b3a 	bleq	ec33d4 <SYSTEM_CLOCK+0x90a654>
     6e8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     6ec:	01111349 	tsteq	r1, r9, asr #6
     6f0:	0a400112 	beq	1000b40 <SYSTEM_CLOCK+0xa47dc0>
     6f4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     6f8:	12000013 	andne	r0, r0, #19
     6fc:	08030005 	stmdaeq	r3, {r0, r2}
     700:	0b3b0b3a 	bleq	ec33f0 <SYSTEM_CLOCK+0x90a670>
     704:	13490b39 	movtne	r0, #39737	; 0x9b39
     708:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     70c:	13000006 	movwne	r0, #6
     710:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 660 <STACK_SIZE+0x260>
     714:	40870c3c 	addmi	r0, r7, ip, lsr ip
     718:	3a0e030e 	bcc	381358 <__RAM_SIZE+0x281358>
     71c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     720:	0000000b 	andeq	r0, r0, fp
     724:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     728:	030b130e 	movweq	r1, #45838	; 0xb30e
     72c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     730:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     734:	00061001 	andeq	r1, r6, r1
     738:	00240200 	eoreq	r0, r4, r0, lsl #4
     73c:	0b3e0b0b 	bleq	f83370 <SYSTEM_CLOCK+0x9ca5f0>
     740:	00000e03 	andeq	r0, r0, r3, lsl #28
     744:	0b002403 	bleq	9758 <__HEAP_SIZE+0x8758>
     748:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     74c:	04000008 	streq	r0, [r0], #-8
     750:	0b0b000f 	bleq	2c0794 <__RAM_SIZE+0x1c0794>
     754:	16050000 	strne	r0, [r5], -r0
     758:	3a0e0300 	bcc	381360 <__RAM_SIZE+0x281360>
     75c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     760:	0013490b 	andseq	r4, r3, fp, lsl #18
     764:	01130600 	tsteq	r3, r0, lsl #12
     768:	0b0b0e03 	bleq	2c3f7c <__RAM_SIZE+0x1c3f7c>
     76c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     770:	13010b39 	movwne	r0, #6969	; 0x1b39
     774:	0d070000 	stceq	0, cr0, [r7, #-0]
     778:	3a0e0300 	bcc	381380 <__RAM_SIZE+0x281380>
     77c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     780:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     784:	0800000a 	stmdaeq	r0, {r1, r3}
     788:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     78c:	00001301 	andeq	r1, r0, r1, lsl #6
     790:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
     794:	0a000013 	beq	7e8 <__Vectors_Size+0x28>
     798:	0b0b000f 	bleq	2c07dc <__RAM_SIZE+0x1c07dc>
     79c:	00001349 	andeq	r1, r0, r9, asr #6
     7a0:	0300160b 	movweq	r1, #1547	; 0x60b
     7a4:	3b0b3a0e 	blcc	2cefe4 <__RAM_SIZE+0x1cefe4>
     7a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     7ac:	0c000013 	stceq	0, cr0, [r0], {19}
     7b0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     7b4:	0b3b0b3a 	bleq	ec34a4 <SYSTEM_CLOCK+0x90a724>
     7b8:	13490b39 	movtne	r0, #39737	; 0x9b39
     7bc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     7c0:	340d0000 	strcc	r0, [sp], #-0
     7c4:	3a0e0300 	bcc	3813cc <__RAM_SIZE+0x2813cc>
     7c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7cc:	3f13490b 	svccc	0x0013490b
     7d0:	000a020c 	andeq	r0, sl, ip, lsl #4
     7d4:	00340e00 	eorseq	r0, r4, r0, lsl #28
     7d8:	0b3a1347 	bleq	e854fc <SYSTEM_CLOCK+0x8cc77c>
     7dc:	0b390b3b 	bleq	e434d0 <SYSTEM_CLOCK+0x88a750>
     7e0:	00000a02 	andeq	r0, r0, r2, lsl #20
     7e4:	3f012e0f 	svccc	0x00012e0f
     7e8:	3a0e030c 	bcc	381420 <__RAM_SIZE+0x281420>
     7ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7f0:	110c270b 	tstne	ip, fp, lsl #14
     7f4:	40011201 	andmi	r1, r1, r1, lsl #4
     7f8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     7fc:	00001301 	andeq	r1, r0, r1, lsl #6
     800:	01828910 	orreq	r8, r2, r0, lsl r9
     804:	31011100 	mrscc	r1, (UNDEF: 17)
     808:	11000013 	tstne	r0, r3, lsl r0
     80c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 75c <STACK_SIZE+0x35c>
     810:	40870c3c 	addmi	r0, r7, ip, lsr ip
     814:	3a0e030e 	bcc	381454 <__RAM_SIZE+0x281454>
     818:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     81c:	1200000b 	andne	r0, r0, #11
     820:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 770 <STACK_SIZE+0x370>
     824:	40870c3c 	addmi	r0, r7, ip, lsr ip
     828:	3a0e030e 	bcc	381468 <__RAM_SIZE+0x281468>
     82c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     830:	0000000b 	andeq	r0, r0, fp
     834:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     838:	030b130e 	movweq	r1, #45838	; 0xb30e
     83c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     840:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     844:	00061001 	andeq	r1, r6, r1
     848:	00240200 	eoreq	r0, r4, r0, lsl #4
     84c:	0b3e0b0b 	bleq	f83480 <SYSTEM_CLOCK+0x9ca700>
     850:	00000e03 	andeq	r0, r0, r3, lsl #28
     854:	0b002403 	bleq	9868 <__HEAP_SIZE+0x8868>
     858:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     85c:	04000008 	streq	r0, [r0], #-8
     860:	0b0b000f 	bleq	2c08a4 <__RAM_SIZE+0x1c08a4>
     864:	16050000 	strne	r0, [r5], -r0
     868:	3a0e0300 	bcc	381470 <__RAM_SIZE+0x281470>
     86c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     870:	0013490b 	andseq	r4, r3, fp, lsl #18
     874:	00260600 	eoreq	r0, r6, r0, lsl #12
     878:	00001349 	andeq	r1, r0, r9, asr #6
     87c:	49003507 	stmdbmi	r0, {r0, r1, r2, r8, sl, ip, sp}
     880:	08000013 	stmdaeq	r0, {r0, r1, r4}
     884:	13490101 	movtne	r0, #37121	; 0x9101
     888:	00001301 	andeq	r1, r0, r1, lsl #6
     88c:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
     890:	000b2f13 	andeq	r2, fp, r3, lsl pc
     894:	00340a00 	eorseq	r0, r4, r0, lsl #20
     898:	0b3a0e03 	bleq	e840ac <SYSTEM_CLOCK+0x8cb32c>
     89c:	0b39053b 	bleq	e41d90 <SYSTEM_CLOCK+0x889010>
     8a0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 784 <STACK_SIZE+0x384>
     8a4:	00000a02 	andeq	r0, r0, r2, lsl #20
     8a8:	0301130b 	movweq	r1, #4875	; 0x130b
     8ac:	3a0b0b0e 	bcc	2c34ec <__RAM_SIZE+0x1c34ec>
     8b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8b4:	0013010b 	andseq	r0, r3, fp, lsl #2
     8b8:	000d0c00 	andeq	r0, sp, r0, lsl #24
     8bc:	0b3a0e03 	bleq	e840d0 <SYSTEM_CLOCK+0x8cb350>
     8c0:	0b39053b 	bleq	e41db4 <SYSTEM_CLOCK+0x889034>
     8c4:	0a381349 	beq	e055f0 <SYSTEM_CLOCK+0x84c870>
     8c8:	150d0000 	strne	r0, [sp, #-0]
     8cc:	010c2701 	tsteq	ip, r1, lsl #14
     8d0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     8d4:	13490005 	movtne	r0, #36869	; 0x9005
     8d8:	0f0f0000 	svceq	0x000f0000
     8dc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     8e0:	10000013 	andne	r0, r0, r3, lsl r0
     8e4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     8e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8ec:	13490b39 	movtne	r0, #39737	; 0x9b39
     8f0:	34110000 	ldrcc	r0, [r1], #-0
     8f4:	3a0e0300 	bcc	3814fc <__RAM_SIZE+0x2814fc>
     8f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8fc:	3f13490b 	svccc	0x0013490b
     900:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     904:	00341200 	eorseq	r1, r4, r0, lsl #4
     908:	0b3a1347 	bleq	e8562c <SYSTEM_CLOCK+0x8cc8ac>
     90c:	0b390b3b 	bleq	e43600 <SYSTEM_CLOCK+0x88a880>
     910:	00000a02 	andeq	r0, r0, r2, lsl #20
     914:	47003413 	smladmi	r0, r3, r4, r3
     918:	3b0b3a13 	blcc	2cf16c <__RAM_SIZE+0x1cf16c>
     91c:	020b3905 	andeq	r3, fp, #81920	; 0x14000
     920:	1400000a 	strne	r0, [r0], #-10
     924:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 874 <__Vectors_Size+0xb4>
     928:	0b3a0e03 	bleq	e8413c <SYSTEM_CLOCK+0x8cb3bc>
     92c:	0b39053b 	bleq	e41e20 <SYSTEM_CLOCK+0x8890a0>
     930:	01110c27 	tsteq	r1, r7, lsr #24
     934:	0a400112 	beq	1000d84 <SYSTEM_CLOCK+0xa48004>
     938:	000c4297 	muleq	ip, r7, r2
     93c:	11010000 	mrsne	r0, (UNDEF: 1)
     940:	130e2501 	movwne	r2, #58625	; 0xe501
     944:	1b0e030b 	blne	381578 <__RAM_SIZE+0x281578>
     948:	1106550e 	tstne	r6, lr, lsl #10
     94c:	10015201 	andne	r5, r1, r1, lsl #4
     950:	02000006 	andeq	r0, r0, #6
     954:	0b0b0024 	bleq	2c09ec <__RAM_SIZE+0x1c09ec>
     958:	0e030b3e 	vmoveq.16	d3[0], r0
     95c:	24030000 	strcs	r0, [r3], #-0
     960:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     964:	0008030b 	andeq	r0, r8, fp, lsl #6
     968:	000f0400 	andeq	r0, pc, r0, lsl #8
     96c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     970:	03001605 	movweq	r1, #1541	; 0x605
     974:	3b0b3a0e 	blcc	2cf1b4 <__RAM_SIZE+0x1cf1b4>
     978:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     97c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     980:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     984:	0b3a0b0b 	bleq	e835b8 <SYSTEM_CLOCK+0x8ca838>
     988:	0b39053b 	bleq	e41e7c <SYSTEM_CLOCK+0x8890fc>
     98c:	00001301 	andeq	r1, r0, r1, lsl #6
     990:	03000d07 	movweq	r0, #3335	; 0xd07
     994:	3b0b3a0e 	blcc	2cf1d4 <__RAM_SIZE+0x1cf1d4>
     998:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     99c:	000a3813 	andeq	r3, sl, r3, lsl r8
     9a0:	01150800 	tsteq	r5, r0, lsl #16
     9a4:	13010c27 	movwne	r0, #7207	; 0x1c27
     9a8:	05090000 	streq	r0, [r9, #-0]
     9ac:	00134900 	andseq	r4, r3, r0, lsl #18
     9b0:	000f0a00 	andeq	r0, pc, r0, lsl #20
     9b4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     9b8:	160b0000 	strne	r0, [fp], -r0
     9bc:	3a0e0300 	bcc	3815c4 <__RAM_SIZE+0x2815c4>
     9c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c4:	0013490b 	andseq	r4, r3, fp, lsl #18
     9c8:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
     9cc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     9d0:	0b3b0b3a 	bleq	ec36c0 <SYSTEM_CLOCK+0x90a940>
     9d4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     9d8:	01120111 	tsteq	r2, r1, lsl r1
     9dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     9e0:	0013010c 	andseq	r0, r3, ip, lsl #2
     9e4:	00050d00 	andeq	r0, r5, r0, lsl #26
     9e8:	0b3a0e03 	bleq	e841fc <SYSTEM_CLOCK+0x8cb47c>
     9ec:	0b390b3b 	bleq	e436e0 <SYSTEM_CLOCK+0x88a960>
     9f0:	0a021349 	beq	8571c <SYSTICK_CYCLES+0x76cbd>
     9f4:	340e0000 	strcc	r0, [lr], #-0
     9f8:	3a0e0300 	bcc	381600 <__RAM_SIZE+0x281600>
     9fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a00:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a04:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a08:	1d0f0000 	stcne	0, cr0, [pc, #-0]	; a10 <__Vectors_Size+0x250>
     a0c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     a10:	0b42b801 	bleq	10aea1c <SYSTEM_CLOCK+0xaf5c9c>
     a14:	01120111 	tsteq	r2, r1, lsl r1
     a18:	0b590b58 	bleq	1643780 <SYSTEM_CLOCK+0x108aa00>
     a1c:	13010b57 	movwne	r0, #6999	; 0x1b57
     a20:	34100000 	ldrcc	r0, [r0], #-0
     a24:	02133100 	andseq	r3, r3, #0, 2
     a28:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a2c:	1d110000 	ldcne	0, cr0, [r1, #-0]
     a30:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     a34:	0b42b801 	bleq	10aea40 <SYSTEM_CLOCK+0xaf5cc0>
     a38:	01120111 	tsteq	r2, r1, lsl r1
     a3c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     a40:	00000b57 	andeq	r0, r0, r7, asr fp
     a44:	31011d12 	tstcc	r1, r2, lsl sp
     a48:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     a4c:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     a50:	0b590b58 	bleq	16437b8 <SYSTEM_CLOCK+0x108aa38>
     a54:	13010b57 	movwne	r0, #6999	; 0x1b57
     a58:	05130000 	ldreq	r0, [r3, #-0]
     a5c:	02133100 	andseq	r3, r3, #0, 2
     a60:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a64:	1d140000 	ldcne	0, cr0, [r4, #-0]
     a68:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     a6c:	0b42b801 	bleq	10aea78 <SYSTEM_CLOCK+0xaf5cf8>
     a70:	01120111 	tsteq	r2, r1, lsl r1
     a74:	0b590b58 	bleq	16437dc <SYSTEM_CLOCK+0x108aa5c>
     a78:	00000b57 	andeq	r0, r0, r7, asr fp
     a7c:	03012e15 	movweq	r2, #7701	; 0x1e15
     a80:	3b0b3a0e 	blcc	2cf2c0 <__RAM_SIZE+0x1cf2c0>
     a84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a88:	2013490c 	andscs	r4, r3, ip, lsl #18
     a8c:	0013010b 	andseq	r0, r3, fp, lsl #2
     a90:	00341600 	eorseq	r1, r4, r0, lsl #12
     a94:	0b3a0e03 	bleq	e842a8 <SYSTEM_CLOCK+0x8cb528>
     a98:	0b39053b 	bleq	e41f8c <SYSTEM_CLOCK+0x88920c>
     a9c:	00001349 	andeq	r1, r0, r9, asr #6
     aa0:	03012e17 	movweq	r2, #7703	; 0x1e17
     aa4:	3b0b3a0e 	blcc	2cf2e4 <__RAM_SIZE+0x1cf2e4>
     aa8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     aac:	010b200c 	tsteq	fp, ip
     ab0:	18000013 	stmdane	r0, {r0, r1, r4}
     ab4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ab8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     abc:	13490b39 	movtne	r0, #39737	; 0x9b39
     ac0:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     ac4:	3a0e0301 	bcc	3816d0 <__RAM_SIZE+0x2816d0>
     ac8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     acc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     ad0:	000b2013 	andeq	r2, fp, r3, lsl r0
     ad4:	11010000 	mrsne	r0, (UNDEF: 1)
     ad8:	130e2501 	movwne	r2, #58625	; 0xe501
     adc:	1b0e030b 	blne	381710 <__RAM_SIZE+0x281710>
     ae0:	1106550e 	tstne	r6, lr, lsl #10
     ae4:	10015201 	andne	r5, r1, r1, lsl #4
     ae8:	02000006 	andeq	r0, r0, #6
     aec:	0b0b0024 	bleq	2c0b84 <__RAM_SIZE+0x1c0b84>
     af0:	0e030b3e 	vmoveq.16	d3[0], r0
     af4:	24030000 	strcs	r0, [r3], #-0
     af8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     afc:	0008030b 	andeq	r0, r8, fp, lsl #6
     b00:	000f0400 	andeq	r0, pc, r0, lsl #8
     b04:	00000b0b 	andeq	r0, r0, fp, lsl #22
     b08:	03001605 	movweq	r1, #1541	; 0x605
     b0c:	3b0b3a0e 	blcc	2cf34c <__RAM_SIZE+0x1cf34c>
     b10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b14:	06000013 			; <UNDEFINED> instruction: 0x06000013
     b18:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     b1c:	0b3a0b0b 	bleq	e83750 <SYSTEM_CLOCK+0x8ca9d0>
     b20:	0b39053b 	bleq	e42014 <SYSTEM_CLOCK+0x889294>
     b24:	00001301 	andeq	r1, r0, r1, lsl #6
     b28:	03000d07 	movweq	r0, #3335	; 0xd07
     b2c:	3b0b3a0e 	blcc	2cf36c <__RAM_SIZE+0x1cf36c>
     b30:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     b34:	000a3813 	andeq	r3, sl, r3, lsl r8
     b38:	01150800 	tsteq	r5, r0, lsl #16
     b3c:	13010c27 	movwne	r0, #7207	; 0x1c27
     b40:	05090000 	streq	r0, [r9, #-0]
     b44:	00134900 	andseq	r4, r3, r0, lsl #18
     b48:	000f0a00 	andeq	r0, pc, r0, lsl #20
     b4c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     b50:	160b0000 	strne	r0, [fp], -r0
     b54:	3a0e0300 	bcc	38175c <__RAM_SIZE+0x28175c>
     b58:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b5c:	0013490b 	andseq	r4, r3, fp, lsl #18
     b60:	00340c00 	eorseq	r0, r4, r0, lsl #24
     b64:	0b3a0e03 	bleq	e84378 <SYSTEM_CLOCK+0x8cb5f8>
     b68:	0b39053b 	bleq	e4205c <SYSTEM_CLOCK+0x8892dc>
     b6c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; a50 <__Vectors_Size+0x290>
     b70:	00000c3c 	andeq	r0, r0, ip, lsr ip
     b74:	3f012e0d 	svccc	0x00012e0d
     b78:	3a0e030c 	bcc	3817b0 <__RAM_SIZE+0x2817b0>
     b7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b80:	110c270b 	tstne	ip, fp, lsl #14
     b84:	40011201 	andmi	r1, r1, r1, lsl #4
     b88:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     b8c:	00001301 	andeq	r1, r0, r1, lsl #6
     b90:	0300050e 	movweq	r0, #1294	; 0x50e
     b94:	3b0b3a0e 	blcc	2cf3d4 <__RAM_SIZE+0x1cf3d4>
     b98:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b9c:	b7060213 	smladlt	r6, r3, r2, r0
     ba0:	00000642 	andeq	r0, r0, r2, asr #12
     ba4:	0300340f 	movweq	r3, #1039	; 0x40f
     ba8:	3b0b3a0e 	blcc	2cf3e8 <__RAM_SIZE+0x1cf3e8>
     bac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     bb0:	b7060213 	smladlt	r6, r3, r2, r0
     bb4:	00000642 	andeq	r0, r0, r2, asr #12
     bb8:	31011d10 	tstcc	r1, r0, lsl sp
     bbc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     bc0:	01110b42 	tsteq	r1, r2, asr #22
     bc4:	0b580112 	bleq	1601014 <SYSTEM_CLOCK+0x1048294>
     bc8:	0b570b59 	bleq	15c3934 <SYSTEM_CLOCK+0x100abb4>
     bcc:	00001301 	andeq	r1, r0, r1, lsl #6
     bd0:	31003411 	tstcc	r0, r1, lsl r4
     bd4:	b7060213 	smladlt	r6, r3, r2, r0
     bd8:	00000642 	andeq	r0, r0, r2, asr #12
     bdc:	31011d12 	tstcc	r1, r2, lsl sp
     be0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     be4:	01110b42 	tsteq	r1, r2, asr #22
     be8:	0b580112 	bleq	1601038 <SYSTEM_CLOCK+0x10482b8>
     bec:	0b570559 	bleq	15c2158 <SYSTEM_CLOCK+0x10093d8>
     bf0:	05130000 	ldreq	r0, [r3, #-0]
     bf4:	02133100 	andseq	r3, r3, #0, 2
     bf8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     bfc:	89140000 	ldmdbhi	r4, {}	; <UNPREDICTABLE>
     c00:	11010182 	smlabbne	r1, r2, r1, r0
     c04:	15000001 	strne	r0, [r0, #-1]
     c08:	0001828a 	andeq	r8, r1, sl, lsl #5
     c0c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     c10:	1600000a 	strne	r0, [r0], -sl
     c14:	0e03012e 	adfeqsp	f0, f3, #0.5
     c18:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c1c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c20:	0b201349 	bleq	80594c <SYSTEM_CLOCK+0x24cbcc>
     c24:	00001301 	andeq	r1, r0, r1, lsl #6
     c28:	03003417 	movweq	r3, #1047	; 0x417
     c2c:	3b0b3a0e 	blcc	2cf46c <__RAM_SIZE+0x1cf46c>
     c30:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     c34:	18000013 	stmdane	r0, {r0, r1, r4}
     c38:	0e03012e 	adfeqsp	f0, f3, #0.5
     c3c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c40:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c44:	13010b20 	movwne	r0, #6944	; 0x1b20
     c48:	05190000 	ldreq	r0, [r9, #-0]
     c4c:	3a0e0300 	bcc	381854 <__RAM_SIZE+0x281854>
     c50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c54:	0013490b 	andseq	r4, r3, fp, lsl #18
     c58:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     c5c:	0b3a0e03 	bleq	e84470 <SYSTEM_CLOCK+0x8cb6f0>
     c60:	0b39053b 	bleq	e42154 <SYSTEM_CLOCK+0x8893d4>
     c64:	13490c27 	movtne	r0, #39975	; 0x9c27
     c68:	00000b20 	andeq	r0, r0, r0, lsr #22
     c6c:	01110100 	tsteq	r1, r0, lsl #2
     c70:	0b130e25 	bleq	4c450c <__RAM_SIZE+0x3c450c>
     c74:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     c78:	01110655 	tsteq	r1, r5, asr r6
     c7c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     c80:	24020000 	strcs	r0, [r2], #-0
     c84:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     c88:	000e030b 	andeq	r0, lr, fp, lsl #6
     c8c:	00240300 	eoreq	r0, r4, r0, lsl #6
     c90:	0b3e0b0b 	bleq	f838c4 <SYSTEM_CLOCK+0x9cab44>
     c94:	00000803 	andeq	r0, r0, r3, lsl #16
     c98:	0b000f04 	bleq	48b0 <__HEAP_SIZE+0x38b0>
     c9c:	0500000b 	streq	r0, [r0, #-11]
     ca0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     ca4:	0b3b0b3a 	bleq	ec3994 <SYSTEM_CLOCK+0x90ac14>
     ca8:	13490b39 	movtne	r0, #39737	; 0x9b39
     cac:	35060000 	strcc	r0, [r6, #-0]
     cb0:	00134900 	andseq	r4, r3, r0, lsl #18
     cb4:	01130700 	tsteq	r3, r0, lsl #14
     cb8:	0b0b0e03 	bleq	2c44cc <__RAM_SIZE+0x1c44cc>
     cbc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cc0:	13010b39 	movwne	r0, #6969	; 0x1b39
     cc4:	0d080000 	stceq	0, cr0, [r8, #-0]
     cc8:	3a0e0300 	bcc	3818d0 <__RAM_SIZE+0x2818d0>
     ccc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     cd0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     cd4:	0900000a 	stmdbeq	r0, {r1, r3}
     cd8:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     cdc:	00001301 	andeq	r1, r0, r1, lsl #6
     ce0:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
     ce4:	0b000013 	bleq	d38 <__Vectors_Size+0x578>
     ce8:	0b0b000f 	bleq	2c0d2c <__RAM_SIZE+0x1c0d2c>
     cec:	00001349 	andeq	r1, r0, r9, asr #6
     cf0:	0300160c 	movweq	r1, #1548	; 0x60c
     cf4:	3b0b3a0e 	blcc	2cf534 <__RAM_SIZE+0x1cf534>
     cf8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     cfc:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     d00:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d04:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d08:	13490b39 	movtne	r0, #39737	; 0x9b39
     d0c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     d10:	010e0000 	mrseq	r0, (UNDEF: 14)
     d14:	01134901 	tsteq	r3, r1, lsl #18
     d18:	0f000013 	svceq	0x00000013
     d1c:	13490021 	movtne	r0, #36897	; 0x9021
     d20:	00000b2f 	andeq	r0, r0, pc, lsr #22
     d24:	3f012e10 	svccc	0x00012e10
     d28:	3a0e030c 	bcc	381960 <__RAM_SIZE+0x281960>
     d2c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d30:	110c270b 	tstne	ip, fp, lsl #14
     d34:	40011201 	andmi	r1, r1, r1, lsl #4
     d38:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     d3c:	00001301 	andeq	r1, r0, r1, lsl #6
     d40:	03000511 	movweq	r0, #1297	; 0x511
     d44:	3b0b3a0e 	blcc	2cf584 <__RAM_SIZE+0x1cf584>
     d48:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d4c:	b7060213 	smladlt	r6, r3, r2, r0
     d50:	00000642 	andeq	r0, r0, r2, asr #12
     d54:	03003412 	movweq	r3, #1042	; 0x412
     d58:	3b0b3a0e 	blcc	2cf598 <__RAM_SIZE+0x1cf598>
     d5c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d60:	b7060213 	smladlt	r6, r3, r2, r0
     d64:	00000642 	andeq	r0, r0, r2, asr #12
     d68:	55010b13 	strpl	r0, [r1, #-2835]	; 0xfffff4ed
     d6c:	00130106 	andseq	r0, r3, r6, lsl #2
     d70:	011d1400 	tsteq	sp, r0, lsl #8
     d74:	01521331 	cmpeq	r2, r1, lsr r3
     d78:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
     d7c:	58011201 	stmdapl	r1, {r0, r9, ip}
     d80:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     d84:	0013010b 	andseq	r0, r3, fp, lsl #2
     d88:	00341500 	eorseq	r1, r4, r0, lsl #10
     d8c:	06021331 			; <UNDEFINED> instruction: 0x06021331
     d90:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d94:	011d1600 	tsteq	sp, r0, lsl #12
     d98:	01521331 	cmpeq	r2, r1, lsr r3
     d9c:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
     da0:	58011201 	stmdapl	r1, {r0, r9, ip}
     da4:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     da8:	1700000b 	strne	r0, [r0, -fp]
     dac:	13310005 	teqne	r1, #5
     db0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     db4:	18000006 	stmdane	r0, {r1, r2}
     db8:	01018289 	smlabbeq	r1, r9, r2, r8
     dbc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     dc0:	00001301 	andeq	r1, r0, r1, lsl #6
     dc4:	01828a19 	orreq	r8, r2, r9, lsl sl
     dc8:	910a0200 	mrsls	r0, R10_fiq
     dcc:	00000a42 	andeq	r0, r0, r2, asr #20
     dd0:	0182891a 	orreq	r8, r2, sl, lsl r9
     dd4:	31011101 	tstcc	r1, r1, lsl #2
     dd8:	1b000013 	blne	e2c <__Vectors_Size+0x66c>
     ddc:	1331001d 	teqne	r1, #29
     de0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     de4:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     de8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     dec:	000b5705 	andeq	r5, fp, r5, lsl #14
     df0:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
     df4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     df8:	0b3b0b3a 	bleq	ec3ae8 <SYSTEM_CLOCK+0x90ad68>
     dfc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     e00:	01120111 	tsteq	r2, r1, lsl r1
     e04:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     e08:	0013010c 	andseq	r0, r3, ip, lsl #2
     e0c:	00051d00 	andeq	r1, r5, r0, lsl #26
     e10:	0b3a0e03 	bleq	e84624 <SYSTEM_CLOCK+0x8cb8a4>
     e14:	0b390b3b 	bleq	e43b08 <SYSTEM_CLOCK+0x88ad88>
     e18:	06021349 	streq	r1, [r2], -r9, asr #6
     e1c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     e20:	82891e00 	addhi	r1, r9, #0, 28
     e24:	01110001 	tsteq	r1, r1
     e28:	00001331 	andeq	r1, r0, r1, lsr r3
     e2c:	03012e1f 	movweq	r2, #7711	; 0x1e1f
     e30:	3b0b3a0e 	blcc	2cf670 <__RAM_SIZE+0x1cf670>
     e34:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e38:	010b200c 	tsteq	fp, ip
     e3c:	20000013 	andcs	r0, r0, r3, lsl r0
     e40:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e44:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e48:	13490b39 	movtne	r0, #39737	; 0x9b39
     e4c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     e50:	3a0e0301 	bcc	381a5c <__RAM_SIZE+0x281a5c>
     e54:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e58:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     e5c:	010b2013 	tsteq	fp, r3, lsl r0
     e60:	22000013 	andcs	r0, r0, #19
     e64:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     e68:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e6c:	13490b39 	movtne	r0, #39737	; 0x9b39
     e70:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     e74:	3a0e0300 	bcc	381a7c <__RAM_SIZE+0x281a7c>
     e78:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e7c:	200c270b 	andcs	r2, ip, fp, lsl #14
     e80:	2400000b 	strcs	r0, [r0], #-11
     e84:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; dd4 <__Vectors_Size+0x614>
     e88:	40870c3c 	addmi	r0, r7, ip, lsr ip
     e8c:	3a0e030e 	bcc	381acc <__RAM_SIZE+0x281acc>
     e90:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e94:	2500000b 	strcs	r0, [r0, #-11]
     e98:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; de8 <__Vectors_Size+0x628>
     e9c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     ea0:	3a0e030e 	bcc	381ae0 <__RAM_SIZE+0x281ae0>
     ea4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ea8:	0000000b 	andeq	r0, r0, fp
     eac:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     eb0:	030b130e 	movweq	r1, #45838	; 0xb30e
     eb4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     eb8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     ebc:	00061001 	andeq	r1, r6, r1
     ec0:	00240200 	eoreq	r0, r4, r0, lsl #4
     ec4:	0b3e0b0b 	bleq	f83af8 <SYSTEM_CLOCK+0x9cad78>
     ec8:	00000e03 	andeq	r0, r0, r3, lsl #28
     ecc:	0b002403 	bleq	9ee0 <__HEAP_SIZE+0x8ee0>
     ed0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     ed4:	04000008 	streq	r0, [r0], #-8
     ed8:	0b0b000f 	bleq	2c0f1c <__RAM_SIZE+0x1c0f1c>
     edc:	16050000 	strne	r0, [r5], -r0
     ee0:	3a0e0300 	bcc	381ae8 <__RAM_SIZE+0x281ae8>
     ee4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ee8:	0013490b 	andseq	r4, r3, fp, lsl #18
     eec:	01130600 	tsteq	r3, r0, lsl #12
     ef0:	0b0b0e03 	bleq	2c4704 <__RAM_SIZE+0x1c4704>
     ef4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ef8:	13010b39 	movwne	r0, #6969	; 0x1b39
     efc:	0d070000 	stceq	0, cr0, [r7, #-0]
     f00:	3a0e0300 	bcc	381b08 <__RAM_SIZE+0x281b08>
     f04:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f08:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     f0c:	0800000a 	stmdaeq	r0, {r1, r3}
     f10:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     f14:	00001301 	andeq	r1, r0, r1, lsl #6
     f18:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
     f1c:	0a000013 	beq	f70 <__Vectors_Size+0x7b0>
     f20:	0b0b000f 	bleq	2c0f64 <__RAM_SIZE+0x1c0f64>
     f24:	00001349 	andeq	r1, r0, r9, asr #6
     f28:	0300160b 	movweq	r1, #1547	; 0x60b
     f2c:	3b0b3a0e 	blcc	2cf76c <__RAM_SIZE+0x1cf76c>
     f30:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f34:	0c000013 	stceq	0, cr0, [r0], {19}
     f38:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     f3c:	0b3b0b3a 	bleq	ec3c2c <SYSTEM_CLOCK+0x90aeac>
     f40:	13490b39 	movtne	r0, #39737	; 0x9b39
     f44:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     f48:	340d0000 	strcc	r0, [sp], #-0
     f4c:	3a0e0300 	bcc	381b54 <__RAM_SIZE+0x281b54>
     f50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f54:	3f13490b 	svccc	0x0013490b
     f58:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     f5c:	01010e00 	tsteq	r1, r0, lsl #28
     f60:	13011349 	movwne	r1, #4937	; 0x1349
     f64:	210f0000 	mrscs	r0, CPSR
     f68:	2f134900 	svccs	0x00134900
     f6c:	1000000b 	andne	r0, r0, fp
     f70:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ec0 <__Vectors_Size+0x700>
     f74:	0b3a0e03 	bleq	e84788 <SYSTEM_CLOCK+0x8cba08>
     f78:	0b390b3b 	bleq	e43c6c <SYSTEM_CLOCK+0x88aeec>
     f7c:	01110c27 	tsteq	r1, r7, lsr #24
     f80:	06400112 			; <UNDEFINED> instruction: 0x06400112
     f84:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     f88:	11000013 	tstne	r0, r3, lsl r0
     f8c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     f90:	0b3b0b3a 	bleq	ec3c80 <SYSTEM_CLOCK+0x90af00>
     f94:	13490b39 	movtne	r0, #39737	; 0x9b39
     f98:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     f9c:	12000006 	andne	r0, r0, #6
     fa0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     fa4:	00001301 	andeq	r1, r0, r1, lsl #6
     fa8:	31011d13 	tstcc	r1, r3, lsl sp
     fac:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     fb0:	01110b42 	tsteq	r1, r2, asr #22
     fb4:	0b580112 	bleq	1601404 <SYSTEM_CLOCK+0x1048684>
     fb8:	0b570b59 	bleq	15c3d24 <SYSTEM_CLOCK+0x100afa4>
     fbc:	00001301 	andeq	r1, r0, r1, lsl #6
     fc0:	31003414 	tstcc	r0, r4, lsl r4
     fc4:	b7060213 	smladlt	r6, r3, r2, r0
     fc8:	00000642 	andeq	r0, r0, r2, asr #12
     fcc:	31011d15 	tstcc	r1, r5, lsl sp
     fd0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     fd4:	01110b42 	tsteq	r1, r2, asr #22
     fd8:	0b580112 	bleq	1601428 <SYSTEM_CLOCK+0x10486a8>
     fdc:	0b570559 	bleq	15c2548 <SYSTEM_CLOCK+0x10097c8>
     fe0:	05160000 	ldreq	r0, [r6, #-0]
     fe4:	02133100 	andseq	r3, r3, #0, 2
     fe8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     fec:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
     ff0:	11010182 	smlabbne	r1, r2, r1, r0
     ff4:	01133101 	tsteq	r3, r1, lsl #2
     ff8:	18000013 	stmdane	r0, {r0, r1, r4}
     ffc:	0001828a 	andeq	r8, r1, sl, lsl #5
    1000:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1004:	1900000a 	stmdbne	r0, {r1, r3}
    1008:	01018289 	smlabbeq	r1, r9, r2, r8
    100c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1010:	1d1a0000 	ldcne	0, cr0, [sl, #-0]
    1014:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1018:	0b42b801 	bleq	10af024 <SYSTEM_CLOCK+0xaf62a4>
    101c:	0b580655 	bleq	1602978 <SYSTEM_CLOCK+0x1049bf8>
    1020:	0b570b59 	bleq	15c3d8c <SYSTEM_CLOCK+0x100b00c>
    1024:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    1028:	3a0e0301 	bcc	381c34 <__RAM_SIZE+0x281c34>
    102c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1030:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1034:	010b2013 	tsteq	fp, r3, lsl r0
    1038:	1c000013 	stcne	0, cr0, [r0], {19}
    103c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1040:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1044:	13490b39 	movtne	r0, #39737	; 0x9b39
    1048:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    104c:	3a0e0301 	bcc	381c58 <__RAM_SIZE+0x281c58>
    1050:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1054:	200c270b 	andcs	r2, ip, fp, lsl #14
    1058:	0013010b 	andseq	r0, r3, fp, lsl #2
    105c:	00051e00 	andeq	r1, r5, r0, lsl #28
    1060:	0b3a0e03 	bleq	e84874 <SYSTEM_CLOCK+0x8cbaf4>
    1064:	0b39053b 	bleq	e42558 <SYSTEM_CLOCK+0x8897d8>
    1068:	00001349 	andeq	r1, r0, r9, asr #6
    106c:	3f002e1f 	svccc	0x00002e1f
    1070:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1074:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1078:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    107c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1080:	01110100 	tsteq	r1, r0, lsl #2
    1084:	0b130e25 	bleq	4c4920 <__RAM_SIZE+0x3c4920>
    1088:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    108c:	01110655 	tsteq	r1, r5, asr r6
    1090:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1094:	24020000 	strcs	r0, [r2], #-0
    1098:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    109c:	000e030b 	andeq	r0, lr, fp, lsl #6
    10a0:	00240300 	eoreq	r0, r4, r0, lsl #6
    10a4:	0b3e0b0b 	bleq	f83cd8 <SYSTEM_CLOCK+0x9caf58>
    10a8:	00000803 	andeq	r0, r0, r3, lsl #16
    10ac:	0b000f04 	bleq	4cc4 <__HEAP_SIZE+0x3cc4>
    10b0:	0500000b 	streq	r0, [r0, #-11]
    10b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    10b8:	0b3b0b3a 	bleq	ec3da8 <SYSTEM_CLOCK+0x90b028>
    10bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    10c0:	13060000 	movwne	r0, #24576	; 0x6000
    10c4:	0b0e0301 	bleq	381cd0 <__RAM_SIZE+0x281cd0>
    10c8:	3b0b3a0b 	blcc	2cf8fc <__RAM_SIZE+0x1cf8fc>
    10cc:	010b3905 	tsteq	fp, r5, lsl #18
    10d0:	07000013 	smladeq	r0, r3, r0, r0
    10d4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    10d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    10dc:	13490b39 	movtne	r0, #39737	; 0x9b39
    10e0:	00000a38 	andeq	r0, r0, r8, lsr sl
    10e4:	27011508 	strcs	r1, [r1, -r8, lsl #10]
    10e8:	0013010c 	andseq	r0, r3, ip, lsl #2
    10ec:	00050900 	andeq	r0, r5, r0, lsl #18
    10f0:	00001349 	andeq	r1, r0, r9, asr #6
    10f4:	0b000f0a 	bleq	4d24 <__HEAP_SIZE+0x3d24>
    10f8:	0013490b 	andseq	r4, r3, fp, lsl #18
    10fc:	00160b00 	andseq	r0, r6, r0, lsl #22
    1100:	0b3a0e03 	bleq	e84914 <SYSTEM_CLOCK+0x8cbb94>
    1104:	0b39053b 	bleq	e425f8 <SYSTEM_CLOCK+0x889878>
    1108:	00001349 	andeq	r1, r0, r9, asr #6
    110c:	0300340c 	movweq	r3, #1036	; 0x40c
    1110:	3b0b3a0e 	blcc	2cf950 <__RAM_SIZE+0x1cf950>
    1114:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1118:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    111c:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    1120:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1070 <__HEAP_SIZE+0x70>
    1124:	0b3a0e03 	bleq	e84938 <SYSTEM_CLOCK+0x8cbbb8>
    1128:	0b390b3b 	bleq	e43e1c <SYSTEM_CLOCK+0x88b09c>
    112c:	01110c27 	tsteq	r1, r7, lsr #24
    1130:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1134:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1138:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    113c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1140:	0b3b0b3a 	bleq	ec3e30 <SYSTEM_CLOCK+0x90b0b0>
    1144:	13490b39 	movtne	r0, #39737	; 0x9b39
    1148:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    114c:	0f000006 	svceq	0x00000006
    1150:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1154:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1158:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    115c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1160:	010b570b 	tsteq	fp, fp, lsl #14
    1164:	10000013 	andne	r0, r0, r3, lsl r0
    1168:	13310034 	teqne	r1, #52	; 0x34
    116c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1170:	11000006 	tstne	r0, r6
    1174:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1178:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    117c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1180:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1184:	000b5705 	andeq	r5, fp, r5, lsl #14
    1188:	00051200 	andeq	r1, r5, r0, lsl #4
    118c:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1190:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1194:	82891300 	addhi	r1, r9, #0, 6
    1198:	01110001 	tsteq	r1, r1
    119c:	00001331 	andeq	r1, r0, r1, lsr r3
    11a0:	03012e14 	movweq	r2, #7700	; 0x1e14
    11a4:	3b0b3a0e 	blcc	2cf9e4 <__RAM_SIZE+0x1cf9e4>
    11a8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    11ac:	2013490c 	andscs	r4, r3, ip, lsl #18
    11b0:	0013010b 	andseq	r0, r3, fp, lsl #2
    11b4:	00341500 	eorseq	r1, r4, r0, lsl #10
    11b8:	0b3a0e03 	bleq	e849cc <SYSTEM_CLOCK+0x8cbc4c>
    11bc:	0b39053b 	bleq	e426b0 <SYSTEM_CLOCK+0x889930>
    11c0:	00001349 	andeq	r1, r0, r9, asr #6
    11c4:	03012e16 	movweq	r2, #7702	; 0x1e16
    11c8:	3b0b3a0e 	blcc	2cfa08 <__RAM_SIZE+0x1cfa08>
    11cc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    11d0:	010b200c 	tsteq	fp, ip
    11d4:	17000013 	smladne	r0, r3, r0, r0
    11d8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    11dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11e0:	13490b39 	movtne	r0, #39737	; 0x9b39
    11e4:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    11e8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    11ec:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    11f0:	0b3a0e03 	bleq	e84a04 <SYSTEM_CLOCK+0x8cbc84>
    11f4:	0b39053b 	bleq	e426e8 <SYSTEM_CLOCK+0x889968>
    11f8:	01000000 	mrseq	r0, (UNDEF: 0)
    11fc:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1200:	0e030b13 	vmoveq.32	d3[0], r0
    1204:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1208:	01520111 	cmpeq	r2, r1, lsl r1
    120c:	00000610 	andeq	r0, r0, r0, lsl r6
    1210:	0b002402 	bleq	a220 <__HEAP_SIZE+0x9220>
    1214:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1218:	0300000e 	movweq	r0, #14
    121c:	0b0b0024 	bleq	2c12b4 <__RAM_SIZE+0x1c12b4>
    1220:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1224:	0f040000 	svceq	0x00040000
    1228:	000b0b00 	andeq	r0, fp, r0, lsl #22
    122c:	00160500 	andseq	r0, r6, r0, lsl #10
    1230:	0b3a0e03 	bleq	e84a44 <SYSTEM_CLOCK+0x8cbcc4>
    1234:	0b390b3b 	bleq	e43f28 <SYSTEM_CLOCK+0x88b1a8>
    1238:	00001349 	andeq	r1, r0, r9, asr #6
    123c:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1240:	07000013 	smladeq	r0, r3, r0, r0
    1244:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1248:	0b3a0b0b 	bleq	e83e7c <SYSTEM_CLOCK+0x8cb0fc>
    124c:	0b39053b 	bleq	e42740 <SYSTEM_CLOCK+0x8899c0>
    1250:	00001301 	andeq	r1, r0, r1, lsl #6
    1254:	03000d08 	movweq	r0, #3336	; 0xd08
    1258:	3b0b3a0e 	blcc	2cfa98 <__RAM_SIZE+0x1cfa98>
    125c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1260:	000a3813 	andeq	r3, sl, r3, lsl r8
    1264:	01150900 	tsteq	r5, r0, lsl #18
    1268:	13010c27 	movwne	r0, #7207	; 0x1c27
    126c:	050a0000 	streq	r0, [sl, #-0]
    1270:	00134900 	andseq	r4, r3, r0, lsl #18
    1274:	000f0b00 	andeq	r0, pc, r0, lsl #22
    1278:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    127c:	160c0000 	strne	r0, [ip], -r0
    1280:	3a0e0300 	bcc	381e88 <__RAM_SIZE+0x281e88>
    1284:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1288:	0013490b 	andseq	r4, r3, fp, lsl #18
    128c:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1290:	0b3a0e03 	bleq	e84aa4 <SYSTEM_CLOCK+0x8cbd24>
    1294:	0b390b3b 	bleq	e43f88 <SYSTEM_CLOCK+0x88b208>
    1298:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 117c <__HEAP_SIZE+0x17c>
    129c:	00000c3c 	andeq	r0, r0, ip, lsr ip
    12a0:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
    12a4:	00130113 	andseq	r0, r3, r3, lsl r1
    12a8:	00210f00 	eoreq	r0, r1, r0, lsl #30
    12ac:	0b2f1349 	bleq	bc5fd8 <SYSTEM_CLOCK+0x60d258>
    12b0:	21100000 	tstcs	r0, r0
    12b4:	2f134900 	svccs	0x00134900
    12b8:	11000005 	tstne	r0, r5
    12bc:	13470034 	movtne	r0, #28724	; 0x7034
    12c0:	0b3b0b3a 	bleq	ec3fb0 <SYSTEM_CLOCK+0x90b230>
    12c4:	0a020b39 	beq	83fb0 <SYSTICK_CYCLES+0x75551>
    12c8:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    12cc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    12d0:	3b0b3a0e 	blcc	2cfb10 <__RAM_SIZE+0x1cfb10>
    12d4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    12d8:	1201110c 	andne	r1, r1, #12, 2
    12dc:	97064001 	strls	r4, [r6, -r1]
    12e0:	13010c42 	movwne	r0, #7234	; 0x1c42
    12e4:	34130000 	ldrcc	r0, [r3], #-0
    12e8:	3a0e0300 	bcc	381ef0 <__RAM_SIZE+0x281ef0>
    12ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12f0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    12f4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    12f8:	89140000 	ldmdbhi	r4, {}	; <UNPREDICTABLE>
    12fc:	11010182 	smlabbne	r1, r2, r1, r0
    1300:	00133101 	andseq	r3, r3, r1, lsl #2
    1304:	828a1500 	addhi	r1, sl, #0, 10
    1308:	0a020001 	beq	81314 <SYSTICK_CYCLES+0x728b5>
    130c:	000a4291 	muleq	sl, r1, r2
    1310:	002e1600 	eoreq	r1, lr, r0, lsl #12
    1314:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1318:	030e4087 	movweq	r4, #57479	; 0xe087
    131c:	3b0b3a0e 	blcc	2cfb5c <__RAM_SIZE+0x1cfb5c>
    1320:	000b3905 	andeq	r3, fp, r5, lsl #18
    1324:	11010000 	mrsne	r0, (UNDEF: 1)
    1328:	130e2501 	movwne	r2, #58625	; 0xe501
    132c:	1b0e030b 	blne	381f60 <__RAM_SIZE+0x281f60>
    1330:	1106550e 	tstne	r6, lr, lsl #10
    1334:	10015201 	andne	r5, r1, r1, lsl #4
    1338:	02000006 	andeq	r0, r0, #6
    133c:	0b0b0024 	bleq	2c13d4 <__RAM_SIZE+0x1c13d4>
    1340:	0e030b3e 	vmoveq.16	d3[0], r0
    1344:	24030000 	strcs	r0, [r3], #-0
    1348:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    134c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1350:	00160400 	andseq	r0, r6, r0, lsl #8
    1354:	0b3a0e03 	bleq	e84b68 <SYSTEM_CLOCK+0x8cbde8>
    1358:	0b390b3b 	bleq	e4404c <SYSTEM_CLOCK+0x88b2cc>
    135c:	00001349 	andeq	r1, r0, r9, asr #6
    1360:	03011305 	movweq	r1, #4869	; 0x1305
    1364:	3a0b0b0e 	bcc	2c3fa4 <__RAM_SIZE+0x1c3fa4>
    1368:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    136c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1370:	000d0600 	andeq	r0, sp, r0, lsl #12
    1374:	0b3a0e03 	bleq	e84b88 <SYSTEM_CLOCK+0x8cbe08>
    1378:	0b39053b 	bleq	e4286c <SYSTEM_CLOCK+0x889aec>
    137c:	0a381349 	beq	e060a8 <SYSTEM_CLOCK+0x84d328>
    1380:	15070000 	strne	r0, [r7, #-0]
    1384:	010c2701 	tsteq	ip, r1, lsl #14
    1388:	08000013 	stmdaeq	r0, {r0, r1, r4}
    138c:	13490005 	movtne	r0, #36869	; 0x9005
    1390:	0f090000 	svceq	0x00090000
    1394:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1398:	0a000013 	beq	13ec <__HEAP_SIZE+0x3ec>
    139c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    13a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13a4:	13490b39 	movtne	r0, #39737	; 0x9b39
    13a8:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    13ac:	030c3f01 	movweq	r3, #52993	; 0xcf01
    13b0:	3b0b3a0e 	blcc	2cfbf0 <__RAM_SIZE+0x1cfbf0>
    13b4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    13b8:	1201110c 	andne	r1, r1, #12, 2
    13bc:	970a4001 	strls	r4, [sl, -r1]
    13c0:	00000c42 	andeq	r0, r0, r2, asr #24
    13c4:	0300050c 	movweq	r0, #1292	; 0x50c
    13c8:	3b0b3a0e 	blcc	2cfc08 <__RAM_SIZE+0x1cfc08>
    13cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13d0:	000a0213 	andeq	r0, sl, r3, lsl r2
    13d4:	00340d00 	eorseq	r0, r4, r0, lsl #26
    13d8:	0b3a0e03 	bleq	e84bec <SYSTEM_CLOCK+0x8cbe6c>
    13dc:	0b390b3b 	bleq	e440d0 <SYSTEM_CLOCK+0x88b350>
    13e0:	06021349 	streq	r1, [r2], -r9, asr #6
    13e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    13e8:	11010000 	mrsne	r0, (UNDEF: 1)
    13ec:	11061000 	mrsne	r1, (UNDEF: 6)
    13f0:	03011201 	movweq	r1, #4609	; 0x1201
    13f4:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    13f8:	0005130e 	andeq	r1, r5, lr, lsl #6
    13fc:	11010000 	mrsne	r0, (UNDEF: 1)
    1400:	11061000 	mrsne	r1, (UNDEF: 6)
    1404:	03011201 	movweq	r1, #4609	; 0x1201
    1408:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    140c:	0005130e 	andeq	r1, r5, lr, lsl #6
    1410:	11010000 	mrsne	r0, (UNDEF: 1)
    1414:	11061000 	mrsne	r1, (UNDEF: 6)
    1418:	03011201 	movweq	r1, #4609	; 0x1201
    141c:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    1420:	0005130e 	andeq	r1, r5, lr, lsl #6
    1424:	11010000 	mrsne	r0, (UNDEF: 1)
    1428:	11061000 	mrsne	r1, (UNDEF: 6)
    142c:	03011201 	movweq	r1, #4609	; 0x1201
    1430:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    1434:	0005130e 	andeq	r1, r5, lr, lsl #6
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
{
       0:	10000800 	andne	r0, r0, r0, lsl #16
    _tx_thread_initialize();
       4:	10000802 	andne	r0, r0, r2, lsl #16
    _tx_timer_initialize();
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	10000802 	andne	r0, r0, r2, lsl #16
      10:	10000824 	andne	r0, r0, r4, lsr #16
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      28:	080e1000 	stmdaeq	lr, {ip}
      2c:	00021000 	andeq	r1, r2, r0
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	080e9f30 	stmdaeq	lr, {r4, r5, r8, r9, sl, fp, ip, pc}
      34:	08121000 	ldmdaeq	r2, {ip}
        _tx_thread_system_ni_resume(thread_ptr);
      38:	00011000 	andeq	r1, r1, r0
      3c:	00081251 	andeq	r1, r8, r1, asr r2
}
      40:	00082410 	andeq	r2, r8, r0, lsl r4
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
      58:	007d0002 	rsbseq	r0, sp, r2
	...
      64:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      78:	007d0002 	rsbseq	r0, sp, r2
	...
      84:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      98:	007d0002 	rsbseq	r0, sp, r2
	...
      a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      b8:	007d0002 	rsbseq	r0, sp, r2
	...
      c4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      d8:	007d0002 	rsbseq	r0, sp, r2
	...
      e4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      f8:	007d0002 	rsbseq	r0, sp, r2
	...
     104:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     118:	007d0002 	rsbseq	r0, sp, r2
	...
     124:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     138:	007d0002 	rsbseq	r0, sp, r2
	...
     144:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     158:	007d0002 	rsbseq	r0, sp, r2
	...
     164:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     170:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     17c:	287d0002 	ldmdacs	sp!, {r1}^
	...
     188:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     194:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     1a0:	007d0002 	rsbseq	r0, sp, r2
	...
     1b8:	00010000 	andeq	r0, r1, r0
     1bc:	00000050 	andeq	r0, r0, r0, asr r0
     1c0:	00000000 	andeq	r0, r0, r0
     1c4:	91000200 	mrsls	r0, R8_usr
     1c8:	00000054 	andeq	r0, r0, r4, asr r0
     1cc:	00000000 	andeq	r0, r0, r0
     1d0:	f3000400 	vshl.u8	d0, d0, d0
     1d4:	009f5001 	addseq	r5, pc, r1
	...
     1e8:	01000000 	mrseq	r0, (UNDEF: 0)
     1ec:	00005100 	andeq	r5, r0, r0, lsl #2
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	00040000 	andeq	r0, r4, r0
     1f8:	9f5101f3 	svcls	0x005101f3
	...
     20c:	00010000 	andeq	r0, r1, r0
     210:	00000050 	andeq	r0, r0, r0, asr r0
	...
     220:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     22c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     230:	00000004 	andeq	r0, r0, r4
     234:	00000000 	andeq	r0, r0, r0
     238:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     23c:	00000010 	andeq	r0, r0, r0, lsl r0
     240:	00000000 	andeq	r0, r0, r0
     244:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     248:	00000004 	andeq	r0, r0, r4
	...
     25c:	01000000 	mrseq	r0, (UNDEF: 0)
     260:	00005000 	andeq	r5, r0, r0
     264:	00000000 	andeq	r0, r0, r0
     268:	00010000 	andeq	r0, r1, r0
     26c:	00000051 	andeq	r0, r0, r1, asr r0
     270:	00000000 	andeq	r0, r0, r0
     274:	f3000400 	vshl.u8	d0, d0, d0
     278:	009f5001 	addseq	r5, pc, r1
	...
     290:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     29c:	00520001 	subseq	r0, r2, r1
     2a0:	00000000 	andeq	r0, r0, r0
     2a4:	04000000 	streq	r0, [r0], #-0
     2a8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     2ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     2c0:	01000000 	mrseq	r0, (UNDEF: 0)
     2c4:	00005200 	andeq	r5, r0, r0, lsl #4
     2c8:	00000000 	andeq	r0, r0, r0
     2cc:	00010000 	andeq	r0, r1, r0
     2d0:	00000053 	andeq	r0, r0, r3, asr r0
     2d4:	00000000 	andeq	r0, r0, r0
     2d8:	f3000400 	vshl.u8	d0, d0, d0
     2dc:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     2f0:	53000100 	movwpl	r0, #256	; 0x100
	...
     304:	007d0002 	rsbseq	r0, sp, r2
	...
     310:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     31c:	187d0002 	ldmdane	sp!, {r1}^
	...
     328:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     340:	00010000 	andeq	r0, r1, r0
     344:	00000050 	andeq	r0, r0, r0, asr r0
     348:	00000000 	andeq	r0, r0, r0
     34c:	53000100 	movwpl	r0, #256	; 0x100
	...
     358:	01f30004 	mvnseq	r0, r4
     35c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     370:	00510001 	subseq	r0, r1, r1
	...
     380:	02000000 	andeq	r0, r0, #0
     384:	00007d00 	andeq	r7, r0, r0, lsl #26
     388:	00000000 	andeq	r0, r0, r0
     38c:	02000000 	andeq	r0, r0, #0
     390:	00087d00 	andeq	r7, r8, r0, lsl #26
     394:	00000000 	andeq	r0, r0, r0
     398:	02000000 	andeq	r0, r0, #0
     39c:	00107d00 	andseq	r7, r0, r0, lsl #26
     3a0:	00000000 	andeq	r0, r0, r0
     3a4:	02000000 	andeq	r0, r0, #0
     3a8:	00207d00 	eoreq	r7, r0, r0, lsl #26
     3ac:	00000000 	andeq	r0, r0, r0
     3b0:	02000000 	andeq	r0, r0, #0
     3b4:	00107d00 	andseq	r7, r0, r0, lsl #26
     3b8:	00000000 	andeq	r0, r0, r0
     3bc:	02000000 	andeq	r0, r0, #0
     3c0:	00087d00 	andeq	r7, r8, r0, lsl #26
     3c4:	00000000 	andeq	r0, r0, r0
     3c8:	02000000 	andeq	r0, r0, #0
     3cc:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     3e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     3f0:	00510001 	subseq	r0, r1, r1
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	04000000 	streq	r0, [r0], #-0
     3fc:	5001f300 	andpl	pc, r1, r0, lsl #6
     400:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     414:	01000000 	mrseq	r0, (UNDEF: 0)
     418:	00005100 	andeq	r5, r0, r0, lsl #2
     41c:	00000000 	andeq	r0, r0, r0
     420:	00010000 	andeq	r0, r1, r0
     424:	00000052 	andeq	r0, r0, r2, asr r0
     428:	00000000 	andeq	r0, r0, r0
     42c:	f3000400 	vshl.u8	d0, d0, d0
     430:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     444:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     458:	007d0002 	rsbseq	r0, sp, r2
	...
     464:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     470:	107d0002 	rsbsne	r0, sp, r2
	...
     47c:	207d0002 	rsbscs	r0, sp, r2
	...
     488:	107d0002 	rsbsne	r0, sp, r2
	...
     494:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     4a0:	007d0002 	rsbseq	r0, sp, r2
	...
     4b8:	00010000 	andeq	r0, r1, r0
     4bc:	00000050 	andeq	r0, r0, r0, asr r0
     4c0:	00000000 	andeq	r0, r0, r0
     4c4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     4d0:	01f30004 	mvnseq	r0, r4
     4d4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     4e8:	00500001 	subseq	r0, r0, r1
     4ec:	00000000 	andeq	r0, r0, r0
     4f0:	9c000000 	stcls	0, cr0, [r0], {-0}
     4f4:	9e100019 	mrcls	0, 0, r0, cr0, cr9, {0}
     4f8:	02100019 	andseq	r0, r0, #25
     4fc:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
     500:	a0100019 	andsge	r0, r0, r9, lsl r0
     504:	02100019 	andseq	r0, r0, #25
     508:	a0107d00 	andsge	r7, r0, r0, lsl #26
     50c:	a2100019 	andsge	r0, r0, #25
     510:	02100019 	andseq	r0, r0, #25
     514:	a2147d00 	andsge	r7, r4, #0, 26
     518:	ba100019 	blt	400584 <__RAM_SIZE+0x300584>
     51c:	02100019 	andseq	r0, r0, #25
     520:	ba287d00 	blt	a1f928 <SYSTEM_CLOCK+0x466ba8>
     524:	be100019 	mrclt	0, 0, r0, cr0, cr9, {0}
     528:	02100019 	andseq	r0, r0, #25
     52c:	be147d00 	cdplt	13, 1, cr7, cr4, cr0, {0}
     530:	c0100019 	andsgt	r0, r0, r9, lsl r0
     534:	02100019 	andseq	r0, r0, #25
     538:	c0107d00 	andsgt	r7, r0, r0, lsl #26
     53c:	c8100019 	ldmdagt	r0, {r0, r3, r4}
     540:	02100019 	andseq	r0, r0, #25
     544:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     550:	0019b800 	andseq	fp, r9, r0, lsl #16
     554:	0019c810 	andseq	ip, r9, r0, lsl r8
     558:	50000110 	andpl	r0, r0, r0, lsl r1
	...
     564:	10001310 	andne	r1, r0, r0, lsl r3
     568:	10001314 	andne	r1, r0, r4, lsl r3
     56c:	007d0002 	rsbseq	r0, sp, r2
     570:	10001314 	andne	r1, r0, r4, lsl r3
     574:	10001316 	andne	r1, r0, r6, lsl r3
     578:	247d0002 	ldrbtcs	r0, [sp], #-2
     57c:	10001316 	andne	r1, r0, r6, lsl r3
     580:	10001986 	andne	r1, r0, r6, lsl #19
     584:	e07d0003 	rsbs	r0, sp, r3
     588:	00198600 	andseq	r8, r9, r0, lsl #12
     58c:	00199010 	andseq	r9, r9, r0, lsl r0
     590:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     594:	00000024 	andeq	r0, r0, r4, lsr #32
	...
     5a4:	00131000 	andseq	r1, r3, r0
     5a8:	00132410 	andseq	r2, r3, r0, lsl r4
     5ac:	50000110 	andpl	r0, r0, r0, lsl r1
     5b0:	10001326 	andne	r1, r0, r6, lsr #6
     5b4:	1000196c 	andne	r1, r0, ip, ror #18
     5b8:	6c570001 	mrrcvs	0, 0, r0, r7, cr1
     5bc:	70100019 	andsvc	r0, r0, r9, lsl r0
     5c0:	01100019 	tsteq	r0, r9, lsl r0
     5c4:	19705000 	ldmdbne	r0!, {ip, lr}^
     5c8:	198a1000 	stmibne	sl, {ip}
     5cc:	00011000 	andeq	r1, r1, r0
     5d0:	00000057 	andeq	r0, r0, r7, asr r0
	...
     5e0:	10000000 	andne	r0, r0, r0
     5e4:	26100013 			; <UNDEFINED> instruction: 0x26100013
     5e8:	01100013 	tsteq	r0, r3, lsl r0
     5ec:	13265100 			; <UNDEFINED> instruction: 0x13265100
     5f0:	196c1000 	stmdbne	ip!, {ip}^
     5f4:	00011000 	andeq	r1, r1, r0
     5f8:	00196c58 	andseq	r6, r9, r8, asr ip
     5fc:	00197010 	andseq	r7, r9, r0, lsl r0
     600:	51000110 	tstpl	r0, r0, lsl r1
     604:	10001970 	andne	r1, r0, r0, ror r9
     608:	1000198a 	andne	r1, r0, sl, lsl #19
     60c:	8a580001 	bhi	1600618 <SYSTEM_CLOCK+0x1047898>
     610:	90100019 	andsls	r0, r0, r9, lsl r0
     614:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
     618:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     61c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     634:	10000000 	andne	r0, r0, r0
     638:	26100013 			; <UNDEFINED> instruction: 0x26100013
     63c:	01100013 	tsteq	r0, r3, lsl r0
     640:	13265200 			; <UNDEFINED> instruction: 0x13265200
     644:	188e1000 	stmne	lr, {ip}
     648:	00011000 	andeq	r1, r1, r0
     64c:	00188e56 	andseq	r8, r8, r6, asr lr
     650:	00189010 	andseq	r9, r8, r0, lsl r0
     654:	5b000110 	blpl	a9c <__Vectors_Size+0x2dc>
     658:	10001890 	mulne	r0, r0, r8
     65c:	100018ba 			; <UNDEFINED> instruction: 0x100018ba
     660:	ba560001 	blt	158066c <SYSTEM_CLOCK+0xfc78ec>
     664:	e4100018 	ldr	r0, [r0], #-24	; 0xffffffe8
     668:	01100018 	tsteq	r0, r8, lsl r0
     66c:	18e45b00 	stmiane	r4!, {r8, r9, fp, ip, lr}^
     670:	196c1000 	stmdbne	ip!, {ip}^
     674:	00011000 	andeq	r1, r1, r0
     678:	00196c56 	andseq	r6, r9, r6, asr ip
     67c:	00197010 	andseq	r7, r9, r0, lsl r0
     680:	52000110 	andpl	r0, r0, #16, 2
     684:	10001970 	andne	r1, r0, r0, ror r9
     688:	1000198a 	andne	r1, r0, sl, lsl #19
     68c:	8a560001 	bhi	1580698 <SYSTEM_CLOCK+0xfc7918>
     690:	90100019 	andsls	r0, r0, r9, lsl r0
     694:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
     698:	5201f300 	andpl	pc, r1, #0, 6
     69c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     6a8:	00131000 	andseq	r1, r3, r0
     6ac:	00132610 	andseq	r2, r3, r0, lsl r6
     6b0:	53000110 	movwpl	r0, #272	; 0x110
     6b4:	1000196c 	andne	r1, r0, ip, ror #18
     6b8:	10001970 	andne	r1, r0, r0, ror r9
     6bc:	00530001 	subseq	r0, r3, r1
     6c0:	00000000 	andeq	r0, r0, r0
     6c4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     6dc:	4c000000 	stcmi	0, cr0, [r0], {-0}
     6e0:	4e100013 	mrcmi	0, 0, r0, cr0, cr3, {0}
     6e4:	02100013 	andseq	r0, r0, #19
     6e8:	4e9f3000 	cdpmi	0, 9, cr3, cr15, cr0, {0}
     6ec:	4c100013 	ldcmi	0, cr0, [r0], {19}
     6f0:	01100014 	tsteq	r0, r4, lsl r0
     6f4:	144c5500 	strbne	r5, [ip], #-1280	; 0xfffffb00
     6f8:	145e1000 	ldrbne	r1, [lr], #-0
     6fc:	00011000 	andeq	r1, r1, r0
     700:	00145e51 	andseq	r5, r4, r1, asr lr
     704:	00146810 	andseq	r6, r4, r0, lsl r8
     708:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     70c:	10001468 	andne	r1, r0, r8, ror #8
     710:	1000147a 	andne	r1, r0, sl, ror r4
     714:	7a510001 	bvc	1440720 <SYSTEM_CLOCK+0xe879a0>
     718:	28100014 	ldmdacs	r0, {r2, r4}
     71c:	01100016 	tsteq	r0, r6, lsl r0
     720:	16305500 	ldrtne	r5, [r0], -r0, lsl #10
     724:	164c1000 	strbne	r1, [ip], -r0
     728:	00011000 	andeq	r1, r1, r0
     72c:	00164c55 	andseq	r4, r6, r5, asr ip
     730:	00166b10 	andseq	r6, r6, r0, lsl fp
     734:	91000210 	tstls	r0, r0, lsl r2
     738:	00167040 	andseq	r7, r6, r0, asr #32
     73c:	0017d410 	andseq	sp, r7, r0, lsl r4
     740:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     744:	10001842 	andne	r1, r0, r2, asr #16
     748:	1000189c 	mulne	r0, ip, r8
     74c:	0c550001 	mrrceq	0, 0, r0, r5, cr1
     750:	44100019 	ldrmi	r0, [r0], #-25	; 0xffffffe7
     754:	01100019 	tsteq	r0, r9, lsl r0
     758:	19585500 	ldmdbne	r8, {r8, sl, ip, lr}^
     75c:	195a1000 	ldmdbne	sl, {ip}^
     760:	00011000 	andeq	r1, r1, r0
     764:	00000055 	andeq	r0, r0, r5, asr r0
     768:	00000000 	andeq	r0, r0, r0
     76c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
     77c:	02020000 	andeq	r0, r2, #0
     780:	70000000 	andvc	r0, r0, r0
     784:	82100013 	andshi	r0, r0, #19
     788:	02100013 	andseq	r0, r0, #19
     78c:	829f3000 	addshi	r3, pc, #0
     790:	af100013 	svcge	0x00100013
     794:	02100013 	andseq	r0, r0, #19
     798:	e2489100 	sub	r9, r8, #0, 2
     79c:	ea100013 	b	4007f0 <__RAM_SIZE+0x3007f0>
     7a0:	02100013 	andseq	r0, r0, #19
     7a4:	ea9f3000 	b	fe7cc7ac <__RAM_segment_used_end__+0xc66cc7ac>
     7a8:	ec100013 	ldc	0, cr0, [r0], {19}
     7ac:	01100013 	tsteq	r0, r3, lsl r0
     7b0:	13ec5000 	mvnne	r5, #0
     7b4:	13fa1000 	mvnsne	r1, #0
     7b8:	00021000 	andeq	r1, r2, r0
     7bc:	13fa9f30 	mvnsne	r9, #48, 30	; 0xc0
     7c0:	14021000 	strne	r1, [r2], #-0
     7c4:	00021000 	andeq	r1, r2, r0
     7c8:	14024891 	strne	r4, [r2], #-2193	; 0xfffff76f
     7cc:	140a1000 	strne	r1, [sl], #-0
     7d0:	00021000 	andeq	r1, r2, r0
     7d4:	140a9f30 	strne	r9, [sl], #-3888	; 0xfffff0d0
     7d8:	140c1000 	strne	r1, [ip], #-0
     7dc:	00011000 	andeq	r1, r1, r0
     7e0:	00140c53 	andseq	r0, r4, r3, asr ip
     7e4:	00190c10 	andseq	r0, r9, r0, lsl ip
     7e8:	91000210 	tstls	r0, r0, lsl r2
     7ec:	00190c48 	andseq	r0, r9, r8, asr #24
     7f0:	00194210 	andseq	r4, r9, r0, lsl r2
     7f4:	38000210 	stmdacc	r0, {r4, r9}
     7f8:	0019429f 	mulseq	r9, pc, r2	; <UNPREDICTABLE>
     7fc:	00196c10 	andseq	r6, r9, r0, lsl ip
     800:	91000210 	tstls	r0, r0, lsl r2
     804:	00000048 	andeq	r0, r0, r8, asr #32
     808:	00000000 	andeq	r0, r0, r0
     80c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     828:	82000000 	andhi	r0, r0, #0
     82c:	8e100013 	mrchi	0, 0, r0, cr0, cr3, {0}
     830:	02100013 	andseq	r0, r0, #19
     834:	8e9f3000 	cdphi	0, 9, cr3, cr15, cr0, {0}
     838:	af100013 	svcge	0x00100013
     83c:	01100013 	tsteq	r0, r3, lsl r0
     840:	140c5b00 	strne	r5, [ip], #-2816	; 0xfffff500
     844:	14321000 	ldrtne	r1, [r2], #-0
     848:	00021000 	andeq	r1, r2, r0
     84c:	14329f30 	ldrtne	r9, [r2], #-3888	; 0xfffff0d0
     850:	14341000 	ldrtne	r1, [r4], #-0
     854:	00011000 	andeq	r1, r1, r0
     858:	00143450 	andseq	r3, r4, r0, asr r4
     85c:	00144010 	andseq	r4, r4, r0, lsl r0
     860:	30000210 	andcc	r0, r0, r0, lsl r2
     864:	0014409f 	mulseq	r4, pc, r0	; <UNPREDICTABLE>
     868:	0017da10 	andseq	sp, r7, r0, lsl sl
     86c:	5b000110 	blpl	cb4 <__Vectors_Size+0x4f4>
     870:	10001816 	andne	r1, r0, r6, lsl r8
     874:	1000181c 	andne	r1, r0, ip, lsl r8
     878:	425b0001 	subsmi	r0, fp, #1
     87c:	8c100018 	ldchi	0, cr0, [r0], {24}
     880:	01100018 	tsteq	r0, r8, lsl r0
     884:	188c5b00 	stmne	ip, {r8, r9, fp, ip, lr}
     888:	18901000 	ldmne	r0, {ip}
     88c:	00011000 	andeq	r1, r1, r0
     890:	00189054 	andseq	r9, r8, r4, asr r0
     894:	0018b810 	andseq	fp, r8, r0, lsl r8
     898:	5b000110 	blpl	ce0 <__Vectors_Size+0x520>
     89c:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     8a0:	100018bc 			; <UNDEFINED> instruction: 0x100018bc
     8a4:	bc540001 	mrrclt	0, 0, r0, r4, cr1
     8a8:	be100018 	mrclt	0, 0, r0, cr0, cr8, {0}
     8ac:	01100018 	tsteq	r0, r8, lsl r0
     8b0:	18be5300 	ldmne	lr!, {r8, r9, ip, lr}
     8b4:	18d81000 	ldmne	r8, {ip}^
     8b8:	00011000 	andeq	r1, r1, r0
     8bc:	0018d854 	andseq	sp, r8, r4, asr r8
     8c0:	0018dc10 	andseq	sp, r8, r0, lsl ip
     8c4:	53000110 	movwpl	r0, #272	; 0x110
     8c8:	1000190c 	andne	r1, r0, ip, lsl #18
     8cc:	1000196c 	andne	r1, r0, ip, ror #18
     8d0:	005b0001 	subseq	r0, fp, r1
	...
     8dc:	01000100 	mrseq	r0, (UNDEF: 16)
     8e0:	01000100 	mrseq	r0, (UNDEF: 16)
     8e4:	00000100 	andeq	r0, r0, r0, lsl #2
     8e8:	00137000 	andseq	r7, r3, r0
     8ec:	0013af10 	andseq	sl, r3, r0, lsl pc
     8f0:	30000210 	andcc	r0, r0, r0, lsl r2
     8f4:	0013b89f 	mulseq	r3, pc, r8	; <UNPREDICTABLE>
     8f8:	0013ba10 	andseq	fp, r3, r0, lsl sl
     8fc:	31000210 	tstcc	r0, r0, lsl r2
     900:	0013c29f 	mulseq	r3, pc, r2	; <UNPREDICTABLE>
     904:	0013c410 	andseq	ip, r3, r0, lsl r4
     908:	31000210 	tstcc	r0, r0, lsl r2
     90c:	0013cc9f 	mulseq	r3, pc, ip	; <UNPREDICTABLE>
     910:	0013ce10 	andseq	ip, r3, r0, lsl lr
     914:	31000210 	tstcc	r0, r0, lsl r2
     918:	0013d69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
     91c:	0013d810 	andseq	sp, r3, r0, lsl r8
     920:	31000210 	tstcc	r0, r0, lsl r2
     924:	0013e09f 	mulseq	r3, pc, r0	; <UNPREDICTABLE>
     928:	0013e210 	andseq	lr, r3, r0, lsl r2
     92c:	31000210 	tstcc	r0, r0, lsl r2
     930:	0013e29f 	mulseq	r3, pc, r2	; <UNPREDICTABLE>
     934:	00196c10 	andseq	r6, r9, r0, lsl ip
     938:	30000210 	andcc	r0, r0, r0, lsl r2
     93c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     940:	00000000 	andeq	r0, r0, r0
     944:	00000200 	andeq	r0, r0, r0, lsl #4
	...
     9a4:	00131c00 	andseq	r1, r3, r0, lsl #24
     9a8:	00132610 	andseq	r2, r3, r0, lsl r6
     9ac:	30000210 	andcc	r0, r0, r0, lsl r2
     9b0:	0013269f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
     9b4:	00133610 	andseq	r3, r3, r0, lsl r6
     9b8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     9bc:	10001336 	andne	r1, r0, r6, lsr r3
     9c0:	10001348 	andne	r1, r0, r8, asr #6
     9c4:	48550001 	ldmdami	r5, {r0}^
     9c8:	d2100013 	andsle	r0, r0, #19
     9cc:	01100015 	tsteq	r0, r5, lsl r0
     9d0:	15d25400 	ldrbne	r5, [r2, #1024]	; 0x400
     9d4:	15d41000 	ldrbne	r1, [r4]
     9d8:	00011000 	andeq	r1, r1, r0
     9dc:	0015d450 	andseq	sp, r5, r0, asr r4
     9e0:	00162810 	andseq	r2, r6, r0, lsl r8
     9e4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     9e8:	10001628 	andne	r1, r0, r8, lsr #12
     9ec:	10001630 	andne	r1, r0, r0, lsr r6
     9f0:	30500001 	subscc	r0, r0, r1
     9f4:	6e100016 	mrcvs	0, 0, r0, cr0, cr6, {0}
     9f8:	01100016 	tsteq	r0, r6, lsl r0
     9fc:	166e5400 	strbtne	r5, [lr], -r0, lsl #8
     a00:	16701000 	ldrbtne	r1, [r0], -r0
     a04:	00011000 	andeq	r1, r1, r0
     a08:	00167050 	andseq	r7, r6, r0, asr r0
     a0c:	0016a810 	andseq	sl, r6, r0, lsl r8
     a10:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     a14:	100016a8 	andne	r1, r0, r8, lsr #13
     a18:	100016aa 	andne	r1, r0, sl, lsr #13
     a1c:	aa500001 	bge	1400a28 <SYSTEM_CLOCK+0xe47ca8>
     a20:	fc100016 	ldc2	0, cr0, [r0], {22}
     a24:	01100016 	tsteq	r0, r6, lsl r0
     a28:	16fc5400 	ldrbtne	r5, [ip], r0, lsl #8
     a2c:	16fe1000 	ldrbtne	r1, [lr], r0
     a30:	00011000 	andeq	r1, r1, r0
     a34:	0016fe50 	andseq	pc, r6, r0, asr lr	; <UNPREDICTABLE>
     a38:	00172610 	andseq	r2, r7, r0, lsl r6
     a3c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     a40:	10001726 	andne	r1, r0, r6, lsr #14
     a44:	10001728 	andne	r1, r0, r8, lsr #14
     a48:	28500001 	ldmdacs	r0, {r0}^
     a4c:	74100017 	ldrvc	r0, [r0], #-23	; 0xffffffe9
     a50:	01100017 	tsteq	r0, r7, lsl r0
     a54:	17745400 	ldrbne	r5, [r4, -r0, lsl #8]!
     a58:	177c1000 	ldrbne	r1, [ip, -r0]!
     a5c:	00011000 	andeq	r1, r1, r0
     a60:	00177c50 	andseq	r7, r7, r0, asr ip
     a64:	0017c810 	andseq	ip, r7, r0, lsl r8
     a68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     a6c:	100017c8 	andne	r1, r0, r8, asr #15
     a70:	100017d0 	ldrdne	r1, [r0], -r0
     a74:	d0500001 	subsle	r0, r0, r1
     a78:	e4100017 	ldr	r0, [r0], #-23	; 0xffffffe9
     a7c:	01100017 	tsteq	r0, r7, lsl r0
     a80:	17e45400 	strbne	r5, [r4, r0, lsl #8]!
     a84:	17fa1000 	ldrbne	r1, [sl, r0]!
     a88:	00011000 	andeq	r1, r1, r0
     a8c:	0017fa5a 	andseq	pc, r7, sl, asr sl	; <UNPREDICTABLE>
     a90:	0017fe10 	andseq	pc, r7, r0, lsl lr	; <UNPREDICTABLE>
     a94:	52000110 	andpl	r0, r0, #16, 2
     a98:	100017fe 	strdne	r1, [r0], -lr
     a9c:	1000180a 	andne	r1, r0, sl, lsl #16
     aa0:	0a5a0001 	beq	1680aac <SYSTEM_CLOCK+0x10c7d2c>
     aa4:	16100018 			; <UNDEFINED> instruction: 0x16100018
     aa8:	01100018 	tsteq	r0, r8, lsl r0
     aac:	18165200 	ldmdane	r6, {r9, ip, lr}
     ab0:	18201000 	stmdane	r0!, {ip}
     ab4:	00011000 	andeq	r1, r1, r0
     ab8:	00182054 	andseq	r2, r8, r4, asr r0
     abc:	00182610 	andseq	r2, r8, r0, lsl r6
     ac0:	5a000110 	bpl	f08 <__Vectors_Size+0x748>
     ac4:	10001826 	andne	r1, r0, r6, lsr #16
     ac8:	1000182a 	andne	r1, r0, sl, lsr #16
     acc:	2a520001 	bcs	1480ad8 <SYSTEM_CLOCK+0xec7d58>
     ad0:	36100018 			; <UNDEFINED> instruction: 0x36100018
     ad4:	01100018 	tsteq	r0, r8, lsl r0
     ad8:	18365500 	ldmdane	r6!, {r8, sl, ip, lr}
     adc:	18421000 	stmdane	r2, {ip}^
     ae0:	00011000 	andeq	r1, r1, r0
     ae4:	00184252 	andseq	r4, r8, r2, asr r2
     ae8:	00188a10 	andseq	r8, r8, r0, lsl sl
     aec:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     af0:	1000188a 	andne	r1, r0, sl, lsl #17
     af4:	10001890 	mulne	r0, r0, r8
     af8:	90520001 	subsls	r0, r2, r1
     afc:	98100018 	ldmdals	r0, {r3, r4}
     b00:	01100018 	tsteq	r0, r8, lsl r0
     b04:	18985400 	ldmne	r8, {sl, ip, lr}
     b08:	18a01000 	stmiane	r0!, {ip}
     b0c:	00011000 	andeq	r1, r1, r0
     b10:	0018a052 	andseq	sl, r8, r2, asr r0
     b14:	0018ac10 	andseq	sl, r8, r0, lsl ip
     b18:	59000110 	stmdbpl	r0, {r4, r8}
     b1c:	100018ac 	andne	r1, r0, ip, lsr #17
     b20:	100018c4 	andne	r1, r0, r4, asr #17
     b24:	c4520001 	ldrbgt	r0, [r2], #-1
     b28:	cc100018 	ldcgt	0, cr0, [r0], {24}
     b2c:	01100018 	tsteq	r0, r8, lsl r0
     b30:	18cc5500 	stmiane	ip, {r8, sl, ip, lr}^
     b34:	18f41000 	ldmne	r4!, {ip}^
     b38:	00011000 	andeq	r1, r1, r0
     b3c:	0018f452 	andseq	pc, r8, r2, asr r4	; <UNPREDICTABLE>
     b40:	00190010 	andseq	r0, r9, r0, lsl r0
     b44:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     b48:	10001900 	andne	r1, r0, r0, lsl #18
     b4c:	1000190c 	andne	r1, r0, ip, lsl #18
     b50:	0c520001 	mrrceq	0, 0, r0, r2, cr1
     b54:	3a100019 	bcc	400bc0 <__RAM_SIZE+0x300bc0>
     b58:	01100019 	tsteq	r0, r9, lsl r0
     b5c:	193a5400 	ldmdbne	sl!, {sl, ip, lr}
     b60:	19421000 	stmdbne	r2, {ip}^
     b64:	00011000 	andeq	r1, r1, r0
     b68:	00194250 	andseq	r4, r9, r0, asr r2
     b6c:	00194410 	andseq	r4, r9, r0, lsl r4
     b70:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     b74:	10001944 	andne	r1, r0, r4, asr #18
     b78:	10001958 	andne	r1, r0, r8, asr r9
     b7c:	58550001 	ldmdapl	r5, {r0}^
     b80:	5a100019 	bpl	400bec <__RAM_SIZE+0x300bec>
     b84:	01100019 	tsteq	r0, r9, lsl r0
     b88:	195a5400 	ldmdbne	sl, {sl, ip, lr}^
     b8c:	196c1000 	stmdbne	ip!, {ip}^
     b90:	00011000 	andeq	r1, r1, r0
     b94:	00196c55 	andseq	r6, r9, r5, asr ip
     b98:	00197010 	andseq	r7, r9, r0, lsl r0
     b9c:	30000210 	andcc	r0, r0, r0, lsl r2
     ba0:	0019709f 	mulseq	r9, pc, r0	; <UNPREDICTABLE>
     ba4:	00198a10 	andseq	r8, r9, r0, lsl sl
     ba8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bac:	1000198a 	andne	r1, r0, sl, lsl #19
     bb0:	10001990 	mulne	r0, r0, r9
     bb4:	00500001 	subseq	r0, r0, r1
     bb8:	00000000 	andeq	r0, r0, r0
     bbc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     bd8:	66000000 	strvs	r0, [r0], -r0
     bdc:	6e100015 	mrcvs	0, 0, r0, cr0, cr5, {0}
     be0:	02100015 	andseq	r0, r0, #21
     be4:	709f3a00 	addsvc	r3, pc, r0, lsl #20
     be8:	c0100015 	andsgt	r0, r0, r5, lsl r0
     bec:	01100015 	tsteq	r0, r5, lsl r0
     bf0:	15c05300 	strbne	r5, [r0, #768]	; 0x300
     bf4:	15cf1000 	strbne	r1, [pc]	; bfc <__Vectors_Size+0x43c>
     bf8:	00031000 	andeq	r1, r3, r0
     bfc:	e07fa891 			; <UNDEFINED> instruction: 0xe07fa891
     c00:	1c100015 	ldcne	0, cr0, [r0], {21}
     c04:	01100016 	tsteq	r0, r6, lsl r0
     c08:	161c5300 	ldrne	r5, [ip], -r0, lsl #6
     c0c:	16251000 	strtne	r1, [r5], -r0
     c10:	00031000 	andeq	r1, r3, r0
     c14:	307fa891 			; <UNDEFINED> instruction: 0x307fa891
     c18:	56100016 			; <UNDEFINED> instruction: 0x56100016
     c1c:	01100016 	tsteq	r0, r6, lsl r0
     c20:	16565300 	ldrbne	r5, [r6], -r0, lsl #6
     c24:	166b1000 	strbtne	r1, [fp], -r0
     c28:	00031000 	andeq	r1, r3, r0
     c2c:	707fb091 			; <UNDEFINED> instruction: 0x707fb091
     c30:	9c100016 	ldcls	0, cr0, [r0], {22}
     c34:	01100016 	tsteq	r0, r6, lsl r0
     c38:	169c5300 	ldrne	r5, [ip], r0, lsl #6
     c3c:	16a51000 	strtne	r1, [r5], r0
     c40:	00031000 	andeq	r1, r3, r0
     c44:	aa7fa891 	bge	1feae90 <SYSTEM_CLOCK+0x1a32110>
     c48:	f0100016 			; <UNDEFINED> instruction: 0xf0100016
     c4c:	01100016 	tsteq	r0, r6, lsl r0
     c50:	16f05300 	ldrbtne	r5, [r0], r0, lsl #6
     c54:	16f91000 	ldrbtne	r1, [r9], r0
     c58:	00031000 	andeq	r1, r3, r0
     c5c:	fe7fb091 	mrc2	0, 3, fp, cr15, cr1, {4}
     c60:	12100016 	andsne	r0, r0, #22
     c64:	01100017 	tsteq	r0, r7, lsl r0
     c68:	17125300 	ldrne	r5, [r2, -r0, lsl #6]
     c6c:	17231000 	strne	r1, [r3, -r0]!
     c70:	00031000 	andeq	r1, r3, r0
     c74:	287fa891 	ldmdacs	pc!, {r0, r4, r7, fp, sp, pc}^	; <UNPREDICTABLE>
     c78:	42100017 	andsmi	r0, r0, #23
     c7c:	01100017 	tsteq	r0, r7, lsl r0
     c80:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     c8c:	10001600 	andne	r1, r0, r0, lsl #12
     c90:	10001616 	andne	r1, r0, r6, lsl r6
     c94:	00520001 	subseq	r0, r2, r1
	...
     ca0:	b2000000 	andlt	r0, r0, #0
     ca4:	c8100015 	ldmdagt	r0, {r0, r2, r4}
     ca8:	01100015 	tsteq	r0, r5, lsl r0
     cac:	15c85200 	strbne	r5, [r8, #512]	; 0x200
     cb0:	15cf1000 	strbne	r1, [pc]	; cb8 <__Vectors_Size+0x4f8>
     cb4:	00021000 	andeq	r1, r2, r0
     cb8:	0000007d 	andeq	r0, r0, sp, ror r0
     cbc:	00000000 	andeq	r0, r0, r0
     cc0:	00010000 	andeq	r0, r1, r0
	...
     cd4:	17d00000 	ldrbne	r0, [r0, r0]
     cd8:	17da1000 	ldrbne	r1, [sl, r0]
     cdc:	00021000 	andeq	r1, r2, r0
     ce0:	17da9f31 			; <UNDEFINED> instruction: 0x17da9f31
     ce4:	17f01000 	ldrbne	r1, [r0, r0]!
     ce8:	00011000 	andeq	r1, r1, r0
     cec:	0017fa59 	andseq	pc, r7, r9, asr sl	; <UNPREDICTABLE>
     cf0:	00180a10 	andseq	r0, r8, r0, lsl sl
     cf4:	59000110 	stmdbpl	r0, {r4, r8}
     cf8:	1000180a 	andne	r1, r0, sl, lsl #16
     cfc:	1000180e 	andne	r1, r0, lr, lsl #16
     d00:	0e530001 	cdpeq	0, 5, cr0, cr3, cr1, {0}
     d04:	16100018 			; <UNDEFINED> instruction: 0x16100018
     d08:	01100018 	tsteq	r0, r8, lsl r0
     d0c:	18165900 	ldmdane	r6, {r8, fp, ip, lr}
     d10:	18201000 	stmdane	r0!, {ip}
     d14:	00021000 	andeq	r1, r2, r0
     d18:	18209f31 	stmdane	r0!, {r0, r4, r5, r8, r9, sl, fp, ip, pc}
     d1c:	18281000 	stmdane	r8!, {ip}
     d20:	00011000 	andeq	r1, r1, r0
     d24:	00182859 	andseq	r2, r8, r9, asr r8
     d28:	00183610 	andseq	r3, r8, r0, lsl r6
     d2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d30:	10001836 	andne	r1, r0, r6, lsr r8
     d34:	1000183a 	andne	r1, r0, sl, lsr r8
     d38:	3a590001 	bcc	1640d44 <SYSTEM_CLOCK+0x1087fc4>
     d3c:	42100018 	andsmi	r0, r0, #24
     d40:	01100018 	tsteq	r0, r8, lsl r0
     d44:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     d50:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
     d54:	18e41000 	stmiane	r4!, {ip}^
     d58:	00011000 	andeq	r1, r1, r0
     d5c:	0018ec5a 	andseq	lr, r8, sl, asr ip
     d60:	0018f010 	andseq	pc, r8, r0, lsl r0	; <UNPREDICTABLE>
     d64:	5a000110 	bpl	11ac <__HEAP_SIZE+0x1ac>
	...
     d84:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
     d88:	18901000 	ldmne	r0, {ip}
     d8c:	00011000 	andeq	r1, r1, r0
     d90:	00189459 	andseq	r9, r8, r9, asr r4
     d94:	00189c10 	andseq	r9, r8, r0, lsl ip
     d98:	59000110 	stmdbpl	r0, {r4, r8}
     d9c:	1000189c 	mulne	r0, ip, r8
     da0:	100018ac 	andne	r1, r0, ip, lsr #17
     da4:	ac550001 	mrrcge	0, 0, r0, r5, cr1
     da8:	ae100018 	mrcge	0, 0, r0, cr0, cr8, {0}
     dac:	01100018 	tsteq	r0, r8, lsl r0
     db0:	18ae5300 	stmiane	lr!, {r8, r9, ip, lr}
     db4:	18bc1000 	ldmne	ip!, {ip}
     db8:	00011000 	andeq	r1, r1, r0
     dbc:	0018bc55 	andseq	fp, r8, r5, asr ip
     dc0:	0018e410 	andseq	lr, r8, r0, lsl r4
     dc4:	59000110 	stmdbpl	r0, {r4, r8}
     dc8:	100018ec 	andne	r1, r0, ip, ror #17
     dcc:	100018f2 	strdne	r1, [r0], -r2
     dd0:	f2590001 	vhadd.s16	d16, d9, d1
     dd4:	00100018 	andseq	r0, r0, r8, lsl r0
     dd8:	01100019 	tsteq	r0, r9, lsl r0
     ddc:	19005400 	stmdbne	r0, {sl, ip, lr}
     de0:	19041000 	stmdbne	r4, {ip}
     de4:	00011000 	andeq	r1, r1, r0
     de8:	00190459 	andseq	r0, r9, r9, asr r4
     dec:	00190a10 	andseq	r0, r9, r0, lsl sl
     df0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     df4:	1000190a 	andne	r1, r0, sl, lsl #18
     df8:	1000190c 	andne	r1, r0, ip, lsl #18
     dfc:	01790003 	cmneq	r9, r3
     e00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     e0c:	5a000000 	bpl	e14 <__Vectors_Size+0x654>
     e10:	60100018 	andsvs	r0, r0, r8, lsl r0
     e14:	01100018 	tsteq	r0, r8, lsl r0
     e18:	18605200 	stmdane	r0!, {r9, ip, lr}^
     e1c:	18681000 	stmdane	r8!, {ip}^
     e20:	00011000 	andeq	r1, r1, r0
     e24:	00186853 	andseq	r6, r8, r3, asr r8
     e28:	00186c10 	andseq	r6, r8, r0, lsl ip
     e2c:	52000110 	andpl	r0, r0, #16, 2
	...
     e38:	185a0000 	ldmdane	sl, {}^	; <UNPREDICTABLE>
     e3c:	18701000 	ldmdane	r0!, {ip}^
     e40:	00011000 	andeq	r1, r1, r0
     e44:	00000059 	andeq	r0, r0, r9, asr r0
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	10000100 	andne	r0, r0, r0, lsl #2
     e50:	42100019 	andsmi	r0, r0, #25
     e54:	02100019 	andseq	r0, r0, #25
     e58:	009f3000 	addseq	r3, pc, r0
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	03000000 	movweq	r0, #0
     e64:	00137000 	andseq	r7, r3, r0
     e68:	00137610 	andseq	r7, r3, r0, lsl r6
     e6c:	51000110 	tstpl	r0, r0, lsl r1
	...
     e78:	14160000 	ldrne	r0, [r6], #-0
     e7c:	141c1000 	ldrne	r1, [ip], #-0
     e80:	00011000 	andeq	r1, r1, r0
     e84:	00000052 	andeq	r0, r0, r2, asr r0
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	000b8800 	andeq	r8, fp, r0, lsl #16
     e90:	000b8c10 	andeq	r8, fp, r0, lsl ip
     e94:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     e98:	000b8c00 	andeq	r8, fp, r0, lsl #24
     e9c:	000b9010 	andeq	r9, fp, r0, lsl r0
     ea0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     ea4:	000b9024 	andeq	r9, fp, r4, lsr #32
     ea8:	000b9210 	andeq	r9, fp, r0, lsl r2
     eac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     eb0:	000b922c 	andeq	r9, fp, ip, lsr #4
     eb4:	000ddc10 	andeq	sp, sp, r0, lsl ip
     eb8:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     ebc:	0ddc00f0 	ldcleq	0, cr0, [ip, #960]	; 0x3c0
     ec0:	0de01000 	stcleq	0, cr1, [r0]
     ec4:	00021000 	andeq	r1, r2, r0
     ec8:	0de02c7d 	stcleq	12, cr2, [r0, #500]!	; 0x1f4
     ecc:	0de41000 	stcleq	0, cr1, [r4]
     ed0:	00021000 	andeq	r1, r2, r0
     ed4:	0de4247d 	cfstrdeq	mvd2, [r4, #500]!	; 0x1f4
     ed8:	0f721000 	svceq	0x00721000
     edc:	00031000 	andeq	r1, r3, r0
     ee0:	0000f07d 	andeq	pc, r0, sp, ror r0	; <UNPREDICTABLE>
	...
     eec:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     ef0:	a010000b 	andsge	r0, r0, fp
     ef4:	0110000b 	tsteq	r0, fp
     ef8:	0ba05000 	bleq	fe814f00 <__RAM_segment_used_end__+0xc6714f00>
     efc:	0f721000 	svceq	0x00721000
     f00:	00011000 	andeq	r1, r1, r0
     f04:	0000005a 	andeq	r0, r0, sl, asr r0
	...
     f10:	000b8800 	andeq	r8, fp, r0, lsl #16
     f14:	000ba210 	andeq	sl, fp, r0, lsl r2
     f18:	51000110 	tstpl	r0, r0, lsl r1
     f1c:	10000ba2 	andne	r0, r0, r2, lsr #23
     f20:	10000f72 	andne	r0, r0, r2, ror pc
     f24:	00540001 	subseq	r0, r4, r1
	...
     f44:	000b8800 	andeq	r8, fp, r0, lsl #16
     f48:	000b9e10 	andeq	r9, fp, r0, lsl lr
     f4c:	52000110 	andpl	r0, r0, #16, 2
     f50:	10000b9e 	mulne	r0, lr, fp
     f54:	10000dda 	ldrdne	r0, [r0], -sl
     f58:	e45b0001 	ldrb	r0, [fp], #-1
     f5c:	ec10000d 	ldc	0, cr0, [r0], {13}
     f60:	0110000e 	tsteq	r0, lr
     f64:	0eec5b00 	vfmaeq.f64	d21, d12, d0
     f68:	0f021000 	svceq	0x00021000
     f6c:	00011000 	andeq	r1, r1, r0
     f70:	000f0250 	andeq	r0, pc, r0, asr r2	; <UNPREDICTABLE>
     f74:	000f3610 	andeq	r3, pc, r0, lsl r6	; <UNPREDICTABLE>
     f78:	58000110 	stmdapl	r0, {r4, r8}
     f7c:	10000f36 	andne	r0, r0, r6, lsr pc
     f80:	10000f44 	andne	r0, r0, r4, asr #30
     f84:	44500001 	ldrbmi	r0, [r0], #-1
     f88:	5410000f 	ldrpl	r0, [r0], #-15
     f8c:	0110000f 	tsteq	r0, pc
     f90:	0f545b00 	svceq	0x00545b00
     f94:	0f5a1000 	svceq	0x005a1000
     f98:	00011000 	andeq	r1, r1, r0
     f9c:	000f5a50 	andeq	r5, pc, r0, asr sl	; <UNPREDICTABLE>
     fa0:	000f5c10 	andeq	r5, pc, r0, lsl ip	; <UNPREDICTABLE>
     fa4:	52000110 	andpl	r0, r0, #16, 2
     fa8:	10000f5c 	andne	r0, r0, ip, asr pc
     fac:	10000f66 	andne	r0, r0, r6, ror #30
     fb0:	66560001 	ldrbvs	r0, [r6], -r1
     fb4:	7210000f 	andsvc	r0, r0, #15
     fb8:	0110000f 	tsteq	r0, pc
     fbc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     fc8:	0b880000 	bleq	fe200fd0 <__RAM_segment_used_end__+0xc6100fd0>
     fcc:	0ba51000 	bleq	fe944fd4 <__RAM_segment_used_end__+0xc6844fd4>
     fd0:	00011000 	andeq	r1, r1, r0
     fd4:	000ba553 	andeq	sl, fp, r3, asr r5
     fd8:	000f7210 	andeq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
     fdc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
     ff4:	10000b88 	andne	r0, r0, r8, lsl #23
     ff8:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
     ffc:	00910002 	addseq	r0, r1, r2
    1000:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1004:	10000dba 			; <UNDEFINED> instruction: 0x10000dba
    1008:	a8910003 	ldmge	r1, {r0, r1}
    100c:	000dba7f 	andeq	fp, sp, pc, ror sl
    1010:	000dda10 	andeq	sp, sp, r0, lsl sl
    1014:	91000210 	tstls	r0, r0, lsl r2
    1018:	000de400 	andeq	lr, sp, r0, lsl #8
    101c:	000df810 	andeq	pc, sp, r0, lsl r8	; <UNPREDICTABLE>
    1020:	91000210 	tstls	r0, r0, lsl r2
    1024:	000df800 	andeq	pc, sp, r0, lsl #16
    1028:	000ec810 	andeq	ip, lr, r0, lsl r8
    102c:	91000310 	tstls	r0, r0, lsl r3
    1030:	0f447fa8 	svceq	0x00447fa8
    1034:	0f521000 	svceq	0x00521000
    1038:	00031000 	andeq	r1, r3, r0
    103c:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    1050:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1054:	fe10000b 	cdp2	0, 1, cr0, cr0, cr11, {0}
    1058:	0210000b 	andseq	r0, r0, #11
    105c:	fe089100 	cdp2	1, 0, cr9, cr8, cr0, {0}
    1060:	b810000b 	ldmdalt	r0, {r0, r1, r3}
    1064:	0210000d 	andseq	r0, r0, #13
    1068:	b8089100 	stmdalt	r8, {r8, ip, pc}
    106c:	ba10000d 	blt	4010a8 <__RAM_SIZE+0x3010a8>
    1070:	0110000d 	tsteq	r0, sp
    1074:	0dba5300 	ldceq	3, cr5, [sl]
    1078:	0e2c1000 	cdpeq	0, 2, cr1, cr12, cr0, {0}
    107c:	00021000 	andeq	r1, r2, r0
    1080:	0e2c0891 	mcreq	8, 1, r0, cr12, cr1, {4}
    1084:	0e941000 	cdpeq	0, 9, cr1, cr4, cr0, {0}
    1088:	00011000 	andeq	r1, r1, r0
    108c:	000e9453 	andeq	r9, lr, r3, asr r4
    1090:	000f7210 	andeq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    1094:	91000210 	tstls	r0, r0, lsl r2
    1098:	00000008 	andeq	r0, r0, r8
	...
    10a4:	000b8800 	andeq	r8, fp, r0, lsl #16
    10a8:	000de410 	andeq	lr, sp, r0, lsl r4
    10ac:	91000210 	tstls	r0, r0, lsl r2
    10b0:	000de40c 	andeq	lr, sp, ip, lsl #8
    10b4:	000f7210 	andeq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    10b8:	91000210 	tstls	r0, r0, lsl r2
    10bc:	0000000c 	andeq	r0, r0, ip
	...
    10cc:	000b8800 	andeq	r8, fp, r0, lsl #16
    10d0:	000de410 	andeq	lr, sp, r0, lsl r4
    10d4:	91000210 	tstls	r0, r0, lsl r2
    10d8:	000de410 	andeq	lr, sp, r0, lsl r4
    10dc:	000e0a10 	andeq	r0, lr, r0, lsl sl
    10e0:	91000210 	tstls	r0, r0, lsl r2
    10e4:	000e0a10 	andeq	r0, lr, r0, lsl sl
    10e8:	000e0e10 	andeq	r0, lr, r0, lsl lr
    10ec:	53000110 	movwpl	r0, #272	; 0x110
    10f0:	10000e0e 	andne	r0, r0, lr, lsl #28
    10f4:	10000f72 	andne	r0, r0, r2, ror pc
    10f8:	10910002 	addsne	r0, r1, r2
	...
    1104:	00000001 	andeq	r0, r0, r1
    1108:	10000bd6 	ldrdne	r0, [r0], -r6
    110c:	10000dba 			; <UNDEFINED> instruction: 0x10000dba
    1110:	00910012 	addseq	r0, r1, r2, lsl r0
    1114:	f42908f6 	vld2.<illegal width 64>	{d0-d1}, [r9 :256], r6
    1118:	00000829 	andeq	r0, r0, r9, lsr #16
    111c:	00000000 	andeq	r0, r0, r0
    1120:	9f2d0000 	svcls	0x002d0000
    1124:	10000de4 	andne	r0, r0, r4, ror #27
    1128:	10000f72 	andne	r0, r0, r2, ror pc
    112c:	00910012 	addseq	r0, r1, r2, lsl r0
    1130:	f42908f6 	vld2.<illegal width 64>	{d0-d1}, [r9 :256], r6
    1134:	00000829 	andeq	r0, r0, r9, lsr #16
    1138:	00000000 	andeq	r0, r0, r0
    113c:	9f2d0000 	svcls	0x002d0000
	...
    1148:	00010000 	andeq	r0, r1, r0
    114c:	10000dda 	ldrdne	r0, [r0], -sl
    1150:	10000de0 	andne	r0, r0, r0, ror #27
    1154:	50900008 	addspl	r0, r0, r8
    1158:	51900493 			; <UNDEFINED> instruction: 0x51900493
    115c:	0ea80493 	mcreq	4, 5, r0, cr8, cr3, {4}
    1160:	0f721000 	svceq	0x00721000
    1164:	00081000 	andeq	r1, r8, r0
    1168:	04935090 	ldreq	r5, [r3], #144	; 0x90
    116c:	04935190 	ldreq	r5, [r3], #400	; 0x190
	...
    1184:	10000c08 	andne	r0, r0, r8, lsl #24
    1188:	10000c1a 	andne	r0, r0, sl, lsl ip
    118c:	81700004 	cmnhi	r0, r4
    1190:	0c1a9f78 	ldceq	15, cr9, [sl], {120}	; 0x78
    1194:	0c1d1000 	ldceq	0, cr1, [sp], {-0}
    1198:	00011000 	andeq	r1, r1, r0
    119c:	000c7e50 	andeq	r7, ip, r0, asr lr
    11a0:	000c8610 	andeq	r8, ip, r0, lsl r6
    11a4:	50000110 	andpl	r0, r0, r0, lsl r1
    11a8:	10000c86 	andne	r0, r0, r6, lsl #25
    11ac:	10000cc0 	andne	r0, r0, r0, asr #25
    11b0:	c0570001 	subsgt	r0, r7, r1
    11b4:	7c10000c 	ldcvc	0, cr0, [r0], {12}
    11b8:	0410000d 	ldreq	r0, [r0], #-13
    11bc:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    11c0:	000dfa9f 	muleq	sp, pc, sl	; <UNPREDICTABLE>
    11c4:	000dfc10 	andeq	pc, sp, r0, lsl ip	; <UNPREDICTABLE>
    11c8:	77000410 	smladvc	r0, r0, r4, r0
    11cc:	009f7881 	addseq	r7, pc, r1, lsl #17
	...
    11dc:	00000200 	andeq	r0, r0, r0, lsl #4
    11e0:	000c5e00 	andeq	r5, ip, r0, lsl #28
    11e4:	000c6110 	andeq	r6, ip, r0, lsl r1
    11e8:	50000110 	andpl	r0, r0, r0, lsl r1
    11ec:	10000c61 	andne	r0, r0, r1, ror #24
    11f0:	10000db4 			; <UNDEFINED> instruction: 0x10000db4
    11f4:	fa560001 	blx	1581200 <SYSTEM_CLOCK+0xfc8480>
    11f8:	0210000d 	andseq	r0, r0, #13
    11fc:	0110000e 	tsteq	r0, lr
    1200:	0e0a5600 	cfmadd32eq	mvax0, mvfx5, mvfx10, mvfx0
    1204:	0e0e1000 	cdpeq	0, 0, cr1, cr14, cr0, {0}
    1208:	00021000 	andeq	r1, r2, r0
    120c:	0e0e9f30 	mcreq	15, 0, r9, cr14, cr0, {1}
    1210:	0f5a1000 	svceq	0x005a1000
    1214:	00011000 	andeq	r1, r1, r0
    1218:	00000056 	andeq	r0, r0, r6, asr r0
    121c:	00000000 	andeq	r0, r0, r0
    1220:	b0000000 	andlt	r0, r0, r0
    1224:	f010000c 			; <UNDEFINED> instruction: 0xf010000c
    1228:	0610000c 	ldreq	r0, [r0], -ip
    122c:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    1230:	00049359 	andeq	r9, r4, r9, asr r3
	...
    1240:	000cbc00 	andeq	fp, ip, r0, lsl #24
    1244:	000cd610 	andeq	sp, ip, r0, lsl r6
    1248:	50000610 	andpl	r0, r0, r0, lsl r6
    124c:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    1250:	000cd604 	andeq	sp, ip, r4, lsl #12
    1254:	000dba10 	andeq	fp, sp, r0, lsl sl
    1258:	91000310 	tstls	r0, r0, lsl r3
    125c:	0dfa7fb8 	ldcleq	15, cr7, [sl, #736]!	; 0x2e0
    1260:	0f721000 	svceq	0x00721000
    1264:	00031000 	andeq	r1, r3, r0
    1268:	007fb891 			; <UNDEFINED> instruction: 0x007fb891
	...
    1274:	01010000 	mrseq	r0, (UNDEF: 1)
    1278:	00000000 	andeq	r0, r0, r0
    127c:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1280:	ba10000d 	blt	4012bc <__RAM_SIZE+0x3012bc>
    1284:	0110000d 	tsteq	r0, sp
    1288:	0dfe5700 	ldcleq	7, cr5, [lr]
    128c:	0e0a1000 	cdpeq	0, 0, cr1, cr10, cr0, {0}
    1290:	00011000 	andeq	r1, r1, r0
    1294:	000e0a57 	andeq	r0, lr, r7, asr sl
    1298:	000e0e10 	andeq	r0, lr, r0, lsl lr
    129c:	30000210 	andcc	r0, r0, r0, lsl r2
    12a0:	000e0e9f 	muleq	lr, pc, lr	; <UNPREDICTABLE>
    12a4:	000f1a10 	andeq	r1, pc, r0, lsl sl	; <UNPREDICTABLE>
    12a8:	57000110 	smladpl	r0, r0, r1, r0
    12ac:	10000f1a 	andne	r0, r0, sl, lsl pc
    12b0:	10000f42 	andne	r0, r0, r2, asr #30
    12b4:	01770003 	cmneq	r7, r3
    12b8:	000f449f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    12bc:	000f5a10 	andeq	r5, pc, r0, lsl sl	; <UNPREDICTABLE>
    12c0:	57000110 	smladpl	r0, r0, r1, r0
	...
    12cc:	00000001 	andeq	r0, r0, r1
    12d0:	00000000 	andeq	r0, r0, r0
    12d4:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    12d8:	0e181000 	cdpeq	0, 1, cr1, cr8, cr0, {0}
    12dc:	00021000 	andeq	r1, r2, r0
    12e0:	0e180c91 	mrceq	12, 0, r0, cr8, cr1, {4}
    12e4:	0e1a1000 	cdpeq	0, 1, cr1, cr10, cr0, {0}
    12e8:	00011000 	andeq	r1, r1, r0
    12ec:	000e9458 	andeq	r9, lr, r8, asr r4
    12f0:	000e9810 	andeq	r9, lr, r0, lsl r8
    12f4:	53000110 	movwpl	r0, #272	; 0x110
    12f8:	10000e98 	mulne	r0, r8, lr
    12fc:	10000f02 	andne	r0, r0, r2, lsl #30
    1300:	44580001 	ldrbmi	r0, [r8], #-1
    1304:	5a10000f 	bpl	401348 <__RAM_SIZE+0x301348>
    1308:	0110000f 	tsteq	r0, pc
    130c:	00005800 	andeq	r5, r0, r0, lsl #16
    1310:	00000000 	andeq	r0, r0, r0
    1314:	00010000 	andeq	r0, r1, r0
    1318:	10000eb8 			; <UNDEFINED> instruction: 0x10000eb8
    131c:	10000f72 	andne	r0, r0, r2, ror pc
    1320:	005b0001 	subseq	r0, fp, r1
    1324:	00000000 	andeq	r0, r0, r0
    1328:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    132c:	7c10000f 	ldcvc	0, cr0, [r0], {15}
    1330:	0210000f 	andseq	r0, r0, #15
    1334:	7c007d00 	stcvc	13, cr7, [r0], {-0}
    1338:	8010000f 	andshi	r0, r0, pc
    133c:	0210000f 	andseq	r0, r0, #15
    1340:	80247d00 	eorhi	r7, r4, r0, lsl #26
    1344:	8210000f 	andshi	r0, r0, #15
    1348:	0210000f 	andseq	r0, r0, #15
    134c:	822c7d00 	eorhi	r7, ip, #0, 26
    1350:	9c10000f 	ldcls	0, cr0, [r0], {15}
    1354:	03100012 	tsteq	r0, #18
    1358:	01807d00 	orreq	r7, r0, r0, lsl #26
    135c:	1000129c 	mulne	r0, ip, r2
    1360:	100012a0 	andne	r1, r0, r0, lsr #5
    1364:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    1368:	100012a0 	andne	r1, r0, r0, lsr #5
    136c:	100012a4 	andne	r1, r0, r4, lsr #5
    1370:	247d0002 	ldrbtcs	r0, [sp], #-2
    1374:	100012a4 	andne	r1, r0, r4, lsr #5
    1378:	1000130e 	andne	r1, r0, lr, lsl #6
    137c:	807d0003 	rsbshi	r0, sp, r3
    1380:	00000001 	andeq	r0, r0, r1
	...
    138c:	000f7800 	andeq	r7, pc, r0, lsl #16
    1390:	000f9610 	andeq	r9, pc, r0, lsl r6	; <UNPREDICTABLE>
    1394:	50000110 	andpl	r0, r0, r0, lsl r1
    1398:	10000f96 	mulne	r0, r6, pc	; <UNPREDICTABLE>
    139c:	1000130e 	andne	r1, r0, lr, lsl #6
    13a0:	9c910003 	ldcls	0, cr0, [r1], {3}
    13a4:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    13b0:	000f7800 	andeq	r7, pc, r0, lsl #16
    13b4:	000f9810 	andeq	r9, pc, r0, lsl r8	; <UNPREDICTABLE>
    13b8:	51000110 	tstpl	r0, r0, lsl r1
    13bc:	10000f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
    13c0:	1000130e 	andne	r1, r0, lr, lsl #6
    13c4:	a8910003 	ldmge	r1, {r0, r1}
    13c8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    13d4:	000f7800 	andeq	r7, pc, r0, lsl #16
    13d8:	000f9210 	andeq	r9, pc, r0, lsl r2	; <UNPREDICTABLE>
    13dc:	52000110 	andpl	r0, r0, #16, 2
    13e0:	10000f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
    13e4:	1000130e 	andne	r1, r0, lr, lsl #6
    13e8:	005a0001 	subseq	r0, sl, r1
	...
    13f4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    13f8:	9410000f 	ldrls	r0, [r0], #-15
    13fc:	0110000f 	tsteq	r0, pc
    1400:	0f945300 	svceq	0x00945300
    1404:	130e1000 	movwne	r1, #57344	; 0xe000
    1408:	00011000 	andeq	r1, r1, r0
    140c:	0000005b 	andeq	r0, r0, fp, asr r0
	...
    141c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1420:	fe10000f 	cdp2	0, 1, cr0, cr0, cr15, {0}
    1424:	0210000f 	andseq	r0, r0, #15
    1428:	fe009100 	cdp2	1, 0, cr9, cr0, cr0, {0}
    142c:	2210000f 	andscs	r0, r0, #15
    1430:	06100010 			; <UNDEFINED> instruction: 0x06100010
    1434:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    1438:	22049359 	andcs	r9, r4, #1677721601	; 0x64000001
    143c:	ba100010 	blt	401484 <__RAM_SIZE+0x301484>
    1440:	02100010 	andseq	r0, r0, #16
    1444:	ba009100 	blt	2584c <SYSTICK_CYCLES+0x16ded>
    1448:	52100010 	andspl	r0, r0, #16
    144c:	06100011 			; <UNDEFINED> instruction: 0x06100011
    1450:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    1454:	76049359 			; <UNDEFINED> instruction: 0x76049359
    1458:	f2100011 	vqadd.s16	d0, d0, d1
    145c:	06100011 			; <UNDEFINED> instruction: 0x06100011
    1460:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    1464:	00049359 	andeq	r9, r4, r9, asr r3
	...
    1474:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1478:	0610000f 	ldreq	r0, [r0], -pc
    147c:	02100010 	andseq	r0, r0, #16
    1480:	08089100 	stmdaeq	r8, {r8, ip, pc}
    1484:	22100010 	andscs	r0, r0, #16
    1488:	01100010 	tsteq	r0, r0, lsl r0
    148c:	10225500 	eorne	r5, r2, r0, lsl #10
    1490:	10c41000 	sbcne	r1, r4, r0
    1494:	00021000 	andeq	r1, r2, r0
    1498:	10c40891 	smullne	r0, r4, r1, r8
    149c:	11921000 	orrsne	r1, r2, r0
    14a0:	00011000 	andeq	r1, r1, r0
    14a4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    14b4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    14b8:	6810000f 	ldmdavs	r0, {r0, r1, r2, r3}
    14bc:	02100012 	andseq	r0, r0, #18
    14c0:	680c9100 	stmdavs	ip, {r8, ip, pc}
    14c4:	ba100012 	blt	401514 <__RAM_SIZE+0x301514>
    14c8:	02100012 	andseq	r0, r0, #18
    14cc:	ba0c9100 	blt	3258d4 <__RAM_SIZE+0x2258d4>
    14d0:	be100012 	mrclt	0, 0, r0, cr0, cr2, {0}
    14d4:	01100012 	tsteq	r0, r2, lsl r0
    14d8:	12be5300 	adcsne	r5, lr, #0, 6
    14dc:	12d61000 	sbcsne	r1, r6, #0
    14e0:	00011000 	andeq	r1, r1, r0
    14e4:	0012d651 	andseq	sp, r2, r1, asr r6
    14e8:	00130e10 	andseq	r0, r3, r0, lsl lr
    14ec:	91000210 	tstls	r0, r0, lsl r2
    14f0:	0000000c 	andeq	r0, r0, ip
	...
    14fc:	000f7800 	andeq	r7, pc, r0, lsl #16
    1500:	0012a410 	andseq	sl, r2, r0, lsl r4
    1504:	91000210 	tstls	r0, r0, lsl r2
    1508:	0012a410 	andseq	sl, r2, r0, lsl r4
    150c:	00130e10 	andseq	r0, r3, r0, lsl lr
    1510:	91000210 	tstls	r0, r0, lsl r2
    1514:	00000010 	andeq	r0, r0, r0, lsl r0
    1518:	00000000 	andeq	r0, r0, r0
    151c:	00000200 	andeq	r0, r0, r0, lsl #4
    1520:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    152c:	00000101 	andeq	r0, r0, r1, lsl #2
    1530:	00000101 	andeq	r0, r0, r1, lsl #2
    1534:	00000000 	andeq	r0, r0, r0
    1538:	00000101 	andeq	r0, r0, r1, lsl #2
    153c:	01010000 	mrseq	r0, (UNDEF: 1)
    1540:	01010000 	mrseq	r0, (UNDEF: 1)
    1544:	01010000 	mrseq	r0, (UNDEF: 1)
    1548:	90000000 	andls	r0, r0, r0
    154c:	0810000f 	ldmdaeq	r0, {r0, r1, r2, r3}
    1550:	02100010 	andseq	r0, r0, #16
    1554:	089f3000 	ldmeq	pc, {ip, sp}	; <UNPREDICTABLE>
    1558:	10100010 	andsne	r0, r0, r0, lsl r0
    155c:	01100010 	tsteq	r0, r0, lsl r0
    1560:	10105400 	andsne	r5, r0, r0, lsl #8
    1564:	10201000 	eorne	r1, r0, r0
    1568:	00031000 	andeq	r1, r3, r0
    156c:	209f0174 	addscs	r0, pc, r4, ror r1	; <UNPREDICTABLE>
    1570:	22100010 	andscs	r0, r0, #16
    1574:	01100010 	tsteq	r0, r0, lsl r0
    1578:	10225400 	eorne	r5, r2, r0, lsl #8
    157c:	10c41000 	sbcne	r1, r4, r0
    1580:	00021000 	andeq	r1, r2, r0
    1584:	10c49f30 	sbcne	r9, r4, r0, lsr pc
    1588:	11ac1000 			; <UNDEFINED> instruction: 0x11ac1000
    158c:	00011000 	andeq	r1, r1, r0
    1590:	0011ac54 	andseq	sl, r1, r4, asr ip
    1594:	0011c610 	andseq	ip, r1, r0, lsl r6
    1598:	52000110 	andpl	r0, r0, #16, 2
    159c:	100011c6 	andne	r1, r0, r6, asr #3
    15a0:	100011ce 	andne	r1, r0, lr, asr #3
    15a4:	ce540001 	cdpgt	0, 5, cr0, cr4, cr1, {0}
    15a8:	de100011 	mrcle	0, 0, r0, cr0, cr1, {0}
    15ac:	03100011 	tsteq	r0, #17
    15b0:	9f017400 	svcls	0x00017400
    15b4:	100011de 	ldrdne	r1, [r0], -lr
    15b8:	100011e4 	andne	r1, r0, r4, ror #3
    15bc:	e4540001 	ldrb	r0, [r4], #-1
    15c0:	f2100011 	vqadd.s16	d0, d0, d1
    15c4:	03100011 	tsteq	r0, #17
    15c8:	9f017400 	svcls	0x00017400
    15cc:	100011f2 	strdne	r1, [r0], -r2
    15d0:	1000120e 	andne	r1, r0, lr, lsl #4
    15d4:	0e540001 	cdpeq	0, 5, cr0, cr4, cr1, {0}
    15d8:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    15dc:	01100012 	tsteq	r0, r2, lsl r0
    15e0:	125e5100 	subsne	r5, lr, #0, 2
    15e4:	12721000 	rsbsne	r1, r2, #0
    15e8:	00011000 	andeq	r1, r1, r0
    15ec:	00127254 	andseq	r7, r2, r4, asr r2
    15f0:	00128010 	andseq	r8, r2, r0, lsl r0
    15f4:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    15f8:	12809f01 	addne	r9, r0, #1, 30
    15fc:	129a1000 	addsne	r1, sl, #0
    1600:	00011000 	andeq	r1, r1, r0
    1604:	0012a454 	andseq	sl, r2, r4, asr r4
    1608:	0012be10 	andseq	fp, r2, r0, lsl lr
    160c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1610:	100012be 			; <UNDEFINED> instruction: 0x100012be
    1614:	100012cc 	andne	r1, r0, ip, asr #5
    1618:	01740003 	cmneq	r4, r3
    161c:	0012cc9f 	mulseq	r2, pc, ip	; <UNPREDICTABLE>
    1620:	0012e610 	andseq	lr, r2, r0, lsl r6
    1624:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1628:	100012e6 	andne	r1, r0, r6, ror #5
    162c:	100012f4 	strdne	r1, [r0], -r4
    1630:	01740003 	cmneq	r4, r3
    1634:	0012f49f 	mulseq	r2, pc, r4	; <UNPREDICTABLE>
    1638:	0012fe10 	andseq	pc, r2, r0, lsl lr	; <UNPREDICTABLE>
    163c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1640:	100012fe 	strdne	r1, [r0], -lr
    1644:	1000130c 	andne	r1, r0, ip, lsl #6
    1648:	01740003 	cmneq	r4, r3
    164c:	00130c9f 	mulseq	r3, pc, ip	; <UNPREDICTABLE>
    1650:	00130e10 	andseq	r0, r3, r0, lsl lr
    1654:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    1660:	00000003 	andeq	r0, r0, r3
    1664:	00000000 	andeq	r0, r0, r0
    1668:	0f900000 	svceq	0x00900000
    166c:	11161000 	tstne	r6, r0
    1670:	000a1000 	andeq	r1, sl, r0
    1674:	0000089e 	muleq	r0, lr, r8
    1678:	00000000 	andeq	r0, r0, r0
    167c:	11160000 	tstne	r6, r0
    1680:	11181000 	tstne	r8, r0
    1684:	00061000 	andeq	r1, r6, r0
    1688:	53049352 	movwpl	r9, #17234	; 0x4352
    168c:	11180493 			; <UNDEFINED> instruction: 0x11180493
    1690:	11521000 	cmpne	r2, r0
    1694:	00031000 	andeq	r1, r3, r0
    1698:	527fa091 	rsbspl	sl, pc, #145	; 0x91
    169c:	76100011 			; <UNDEFINED> instruction: 0x76100011
    16a0:	06100011 			; <UNDEFINED> instruction: 0x06100011
    16a4:	04935700 	ldreq	r5, [r3], #1792	; 0x700
    16a8:	76049358 			; <UNDEFINED> instruction: 0x76049358
    16ac:	f2100011 	vqadd.s16	d0, d0, d1
    16b0:	03100011 	tsteq	r0, #17
    16b4:	7fa09100 	svcvc	0x00a09100
	...
    16c0:	00000001 	andeq	r0, r0, r1
    16c4:	00010100 	andeq	r0, r1, r0, lsl #2
    16c8:	00000000 	andeq	r0, r0, r0
    16cc:	10000fea 	andne	r0, r0, sl, ror #31
    16d0:	10000ffe 	strdne	r0, [r0], -lr
    16d4:	9f300002 	svcls	0x00300002
    16d8:	10000ffe 	strdne	r0, [r0], -lr
    16dc:	10001022 	andne	r1, r0, r2, lsr #32
    16e0:	ac910003 	ldcge	0, cr0, [r1], {3}
    16e4:	0010aa7f 	andseq	sl, r0, pc, ror sl
    16e8:	0010aa10 	andseq	sl, r0, r0, lsl sl
    16ec:	30000210 	andcc	r0, r0, r0, lsl r2
    16f0:	0010aa9f 	mulseq	r0, pc, sl	; <UNPREDICTABLE>
    16f4:	0010c010 	andseq	ip, r0, r0, lsl r0
    16f8:	31000210 	tstcc	r0, r0, lsl r2
    16fc:	0010c09f 	mulseq	r0, pc, r0	; <UNPREDICTABLE>
    1700:	00129a10 	andseq	r9, r2, r0, lsl sl
    1704:	91000310 	tstls	r0, r0, lsl r3
    1708:	12a47fac 	adcne	r7, r4, #172, 30	; 0x2b0
    170c:	130e1000 	movwne	r1, #57344	; 0xe000
    1710:	00031000 	andeq	r1, r3, r0
    1714:	007fac91 			; <UNDEFINED> instruction: 0x007fac91
	...
    1728:	0010ce00 	andseq	ip, r0, r0, lsl #28
    172c:	0010d110 	andseq	sp, r0, r0, lsl r1
    1730:	50000110 	andpl	r0, r0, r0, lsl r1
    1734:	100010d1 	ldrdne	r1, [r0], -r1	; <UNPREDICTABLE>
    1738:	1000121e 	andne	r1, r0, lr, lsl r2
    173c:	1e560001 	cdpne	0, 5, cr0, cr6, cr1, {0}
    1740:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1744:	01100012 	tsteq	r0, r2, lsl r0
    1748:	125e5200 	subsne	r5, lr, #0, 4
    174c:	129a1000 	addsne	r1, sl, #0
    1750:	00011000 	andeq	r1, r1, r0
    1754:	0012a456 	andseq	sl, r2, r6, asr r4
    1758:	00130e10 	andseq	r0, r3, r0, lsl lr
    175c:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    176c:	100010f8 	strdne	r1, [r0], -r8
    1770:	100010fb 	strdne	r1, [r0], -fp
    1774:	93520006 	cmpls	r2, #6
    1778:	04935304 	ldreq	r5, [r3], #772	; 0x304
    177c:	100010fb 	strdne	r1, [r0], -fp
    1780:	10001116 	andne	r1, r0, r6, lsl r1
    1784:	a0910003 	addsge	r0, r1, r3
    1788:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1794:	00000101 	andeq	r0, r0, r1, lsl #2
    1798:	01010000 	mrseq	r0, (UNDEF: 1)
    179c:	0010fe00 	andseq	pc, r0, r0, lsl #28
    17a0:	00110110 	andseq	r0, r1, r0, lsl r1
    17a4:	50000110 	andpl	r0, r0, r0, lsl r1
    17a8:	10001101 	andne	r1, r0, r1, lsl #2
    17ac:	10001136 	andne	r1, r0, r6, lsr r1
    17b0:	36570001 	ldrbcc	r0, [r7], -r1
    17b4:	3a100011 	bcc	401800 <__RAM_SIZE+0x301800>
    17b8:	02100011 	andseq	r0, r0, #17
    17bc:	3a9f3000 	bcc	fe7cd7c4 <__RAM_segment_used_end__+0xc66cd7c4>
    17c0:	50100011 	andspl	r0, r0, r1, lsl r0
    17c4:	01100011 	tsteq	r0, r1, lsl r0
    17c8:	11765700 	cmnne	r6, r0, lsl #14
    17cc:	11ba1000 			; <UNDEFINED> instruction: 0x11ba1000
    17d0:	00011000 	andeq	r1, r1, r0
    17d4:	0011ba57 	andseq	fp, r1, r7, asr sl
    17d8:	0011c610 	andseq	ip, r1, r0, lsl r6
    17dc:	51000110 	tstpl	r0, r0, lsl r1
	...
    17ec:	10001192 	mulne	r0, r2, r1
    17f0:	100011cc 	andne	r1, r0, ip, asr #3
    17f4:	cc550001 	mrrcgt	0, 0, r0, r5, cr1
    17f8:	e0100011 	ands	r0, r0, r1, lsl r0
    17fc:	01100011 	tsteq	r0, r1, lsl r0
    1800:	00005300 	andeq	r5, r0, r0, lsl #6
    1804:	00000000 	andeq	r0, r0, r0
    1808:	0ac00000 	beq	ff001810 <__RAM_segment_used_end__+0xc6f01810>
    180c:	0ac41000 	beq	ff105814 <__RAM_segment_used_end__+0xc7005814>
    1810:	00021000 	andeq	r1, r2, r0
    1814:	0ac4007d 	beq	ff101a10 <__RAM_segment_used_end__+0xc7001a10>
    1818:	0ac61000 	beq	ff185820 <__RAM_segment_used_end__+0xc7085820>
    181c:	00021000 	andeq	r1, r2, r0
    1820:	0ac6247d 	beq	ff18aa1c <__RAM_segment_used_end__+0xc708aa1c>
    1824:	0b821000 	bleq	fe08582c <__RAM_segment_used_end__+0xc5f8582c>
    1828:	00031000 	andeq	r1, r3, r0
    182c:	8200f87d 	andhi	pc, r0, #8192000	; 0x7d0000
    1830:	8610000b 	ldrhi	r0, [r0], -fp
    1834:	0210000b 	andseq	r0, r0, #11
    1838:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
    1848:	c0000000 	andgt	r0, r0, r0
    184c:	f610000a 			; <UNDEFINED> instruction: 0xf610000a
    1850:	0110000a 	tsteq	r0, sl
    1854:	0af65000 	beq	ffd9585c <__RAM_segment_used_end__+0xc7c9585c>
    1858:	0b541000 	bleq	1505860 <SYSTEM_CLOCK+0xf4cae0>
    185c:	00031000 	andeq	r1, r3, r0
    1860:	547fac91 	ldrbtpl	sl, [pc], #-3217	; 1868 <__HEAP_SIZE+0x868>
    1864:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    1868:	0110000b 	tsteq	r0, fp
    186c:	0b585000 	bleq	1615874 <SYSTEM_CLOCK+0x105caf4>
    1870:	0b861000 	bleq	fe185878 <__RAM_segment_used_end__+0xc6085878>
    1874:	00031000 	andeq	r1, r3, r0
    1878:	007fac91 			; <UNDEFINED> instruction: 0x007fac91
	...
    1888:	c0000000 	andgt	r0, r0, r0
    188c:	f610000a 			; <UNDEFINED> instruction: 0xf610000a
    1890:	0110000a 	tsteq	r0, sl
    1894:	0af65100 	beq	ffd95c9c <__RAM_segment_used_end__+0xc7c95c9c>
    1898:	0b541000 	bleq	15058a0 <SYSTEM_CLOCK+0xf4cb20>
    189c:	00031000 	andeq	r1, r3, r0
    18a0:	547fb091 	ldrbtpl	fp, [pc], #-145	; 18a8 <__HEAP_SIZE+0x8a8>
    18a4:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    18a8:	0110000b 	tsteq	r0, fp
    18ac:	0b585100 	bleq	1615cb4 <SYSTEM_CLOCK+0x105cf34>
    18b0:	0b861000 	bleq	fe1858b8 <__RAM_segment_used_end__+0xc60858b8>
    18b4:	00031000 	andeq	r1, r3, r0
    18b8:	007fb091 			; <UNDEFINED> instruction: 0x007fb091
	...
    18c8:	c0000000 	andgt	r0, r0, r0
    18cc:	f610000a 			; <UNDEFINED> instruction: 0xf610000a
    18d0:	0110000a 	tsteq	r0, sl
    18d4:	0af65200 	beq	ffd960dc <__RAM_segment_used_end__+0xc7c960dc>
    18d8:	0b541000 	bleq	15058e0 <SYSTEM_CLOCK+0xf4cb60>
    18dc:	00031000 	andeq	r1, r3, r0
    18e0:	547fb491 	ldrbtpl	fp, [pc], #-1169	; 18e8 <__HEAP_SIZE+0x8e8>
    18e4:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    18e8:	0110000b 	tsteq	r0, fp
    18ec:	0b585200 	bleq	16160f4 <SYSTEM_CLOCK+0x105d374>
    18f0:	0b861000 	bleq	fe1858f8 <__RAM_segment_used_end__+0xc60858f8>
    18f4:	00031000 	andeq	r1, r3, r0
    18f8:	007fb491 			; <UNDEFINED> instruction: 0x007fb491
	...
    1904:	c0000000 	andgt	r0, r0, r0
    1908:	e010000a 	ands	r0, r0, sl
    190c:	0110000a 	tsteq	r0, sl
    1910:	0ae05300 	beq	ff816518 <__RAM_segment_used_end__+0xc7716518>
    1914:	0b861000 	bleq	fe18591c <__RAM_segment_used_end__+0xc608591c>
    1918:	00011000 	andeq	r1, r1, r0
    191c:	0000005b 	andeq	r0, r0, fp, asr r0
	...
    192c:	c0000000 	andgt	r0, r0, r0
    1930:	f610000a 			; <UNDEFINED> instruction: 0xf610000a
    1934:	0210000a 	andseq	r0, r0, #10
    1938:	f6009100 			; <UNDEFINED> instruction: 0xf6009100
    193c:	1810000a 	ldmdane	r0, {r1, r3}
    1940:	0610000b 	ldreq	r0, [r0], -fp
    1944:	04935500 	ldreq	r5, [r3], #1280	; 0x500
    1948:	18049356 	stmdane	r4, {r1, r2, r4, r6, r8, r9, ip, pc}
    194c:	2c10000b 	ldccs	0, cr0, [r0], {11}
    1950:	0610000b 	ldreq	r0, [r0], -fp
    1954:	04935000 	ldreq	r5, [r3], #0
    1958:	2c049351 	stccs	3, cr9, [r4], {81}	; 0x51
    195c:	5410000b 	ldrpl	r0, [r0], #-11
    1960:	0610000b 	ldreq	r0, [r0], -fp
    1964:	04935500 	ldreq	r5, [r3], #1280	; 0x500
    1968:	54049356 	strpl	r9, [r4], #-854	; 0xfffffcaa
    196c:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    1970:	0210000b 	andseq	r0, r0, #11
    1974:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1980:	c0000000 	andgt	r0, r0, r0
    1984:	e610000a 	ldr	r0, [r0], -sl
    1988:	0210000a 	andseq	r0, r0, #10
    198c:	e6209100 	strt	r9, [r0], -r0, lsl #2
    1990:	8610000a 	ldrhi	r0, [r0], -sl
    1994:	0110000b 	tsteq	r0, fp
    1998:	00005a00 	andeq	r5, r0, r0, lsl #20
    199c:	00000000 	andeq	r0, r0, r0
    19a0:	00020000 	andeq	r0, r2, r0
	...
    19ac:	0adc0000 	beq	ff7019b4 <__RAM_segment_used_end__+0xc76019b4>
    19b0:	0af61000 	beq	ffd859b8 <__RAM_segment_used_end__+0xc7c859b8>
    19b4:	00021000 	andeq	r1, r2, r0
    19b8:	0af69f30 	beq	ffda9680 <__RAM_segment_used_end__+0xc7ca9680>
    19bc:	0b001000 	bleq	59c4 <__HEAP_SIZE+0x49c4>
    19c0:	00011000 	andeq	r1, r1, r0
    19c4:	000b0054 	andeq	r0, fp, r4, asr r0
    19c8:	000b2c10 	andeq	r2, fp, r0, lsl ip
    19cc:	59000110 	stmdbpl	r0, {r4, r8}
    19d0:	10000b2c 	andne	r0, r0, ip, lsr #22
    19d4:	10000b54 	andne	r0, r0, r4, asr fp
    19d8:	54540001 	ldrbpl	r0, [r4], #-1
    19dc:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    19e0:	0210000b 	andseq	r0, r0, #11
    19e4:	589f3000 	ldmpl	pc, {ip, sp}	; <UNPREDICTABLE>
    19e8:	8610000b 	ldrhi	r0, [r0], -fp
    19ec:	0110000b 	tsteq	r0, fp
    19f0:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    19fc:	0af60000 	beq	ffd81a04 <__RAM_segment_used_end__+0xc7c81a04>
    1a00:	0b041000 	bleq	105a08 <__RAM_SIZE+0x5a08>
    1a04:	00011000 	andeq	r1, r1, r0
    1a08:	000b3a53 	andeq	r3, fp, r3, asr sl
    1a0c:	000b5410 	andeq	r5, fp, r0, lsl r4
    1a10:	53000110 	movwpl	r0, #272	; 0x110
	...
    1a1c:	10000a2c 	andne	r0, r0, ip, lsr #20
    1a20:	10000a2e 	andne	r0, r0, lr, lsr #20
    1a24:	007d0002 	rsbseq	r0, sp, r2
    1a28:	10000a2e 	andne	r0, r0, lr, lsr #20
    1a2c:	10000a30 	andne	r0, r0, r0, lsr sl
    1a30:	147d0002 	ldrbtne	r0, [sp], #-2
    1a34:	10000a30 	andne	r0, r0, r0, lsr sl
    1a38:	10000abe 			; <UNDEFINED> instruction: 0x10000abe
    1a3c:	d87d0003 	ldmdale	sp!, {r0, r1}^
    1a40:	000abe00 	andeq	fp, sl, r0, lsl #28
    1a44:	000ac010 	andeq	ip, sl, r0, lsl r0
    1a48:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1a4c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    1a58:	000a2c00 	andeq	r2, sl, r0, lsl #24
    1a5c:	000abb10 	andeq	fp, sl, r0, lsl fp
    1a60:	50000110 	andpl	r0, r0, r0, lsl r1
    1a64:	10000abb 			; <UNDEFINED> instruction: 0x10000abb
    1a68:	10000ac0 	andne	r0, r0, r0, asr #21
    1a6c:	01f30004 	mvnseq	r0, r4
    1a70:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1a7c:	0a2c0000 	beq	b01a84 <SYSTEM_CLOCK+0x548d04>
    1a80:	0abb1000 	beq	feec5a88 <__RAM_segment_used_end__+0xc6dc5a88>
    1a84:	00011000 	andeq	r1, r1, r0
    1a88:	000abb51 	andeq	fp, sl, r1, asr fp
    1a8c:	000ac010 	andeq	ip, sl, r0, lsl r0
    1a90:	f3000410 	vqshl.u8	d0, d0, d0
    1a94:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1aa0:	2c000000 	stccs	0, cr0, [r0], {-0}
    1aa4:	bb10000a 	bllt	401ad4 <__RAM_SIZE+0x301ad4>
    1aa8:	0110000a 	tsteq	r0, sl
    1aac:	0abb5200 	beq	feed62b4 <__RAM_segment_used_end__+0xc6dd62b4>
    1ab0:	0ac01000 	beq	ff005ab8 <__RAM_segment_used_end__+0xc6f05ab8>
    1ab4:	00041000 	andeq	r1, r4, r0
    1ab8:	9f5201f3 	svcls	0x005201f3
	...
    1ac8:	10000a2c 	andne	r0, r0, ip, lsr #20
    1acc:	10000abb 			; <UNDEFINED> instruction: 0x10000abb
    1ad0:	bb530001 	bllt	14c1adc <SYSTEM_CLOCK+0xf08d5c>
    1ad4:	c010000a 	andsgt	r0, r0, sl
    1ad8:	0410000a 	ldreq	r0, [r0], #-10
    1adc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    1ae0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1af0:	2c000000 	stccs	0, cr0, [r0], {-0}
    1af4:	4a10000a 	bmi	401b24 <__RAM_SIZE+0x301b24>
    1af8:	0210000a 	andseq	r0, r0, #10
    1afc:	4a009100 	bmi	25f04 <SYSTICK_CYCLES+0x174a5>
    1b00:	6410000a 	ldrvs	r0, [r0], #-10
    1b04:	0110000a 	tsteq	r0, sl
    1b08:	0a645400 	beq	1916b10 <SYSTEM_CLOCK+0x135dd90>
    1b0c:	0a701000 	beq	1c05b14 <SYSTEM_CLOCK+0x164cd94>
    1b10:	00011000 	andeq	r1, r1, r0
    1b14:	000a705c 	andeq	r7, sl, ip, asr r0
    1b18:	000a9e10 	andeq	r9, sl, r0, lsl lr
    1b1c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1b20:	10000a9e 	mulne	r0, lr, sl
    1b24:	10000aa0 	andne	r0, r0, r0, lsr #21
    1b28:	00910002 	addseq	r0, r1, r2
	...
    1b38:	10000a2c 	andne	r0, r0, ip, lsr #20
    1b3c:	10000a3c 	andne	r0, r0, ip, lsr sl
    1b40:	14910002 	ldrne	r0, [r1], #2
    1b44:	10000a3c 	andne	r0, r0, ip, lsr sl
    1b48:	10000ac0 	andne	r0, r0, r0, asr #21
    1b4c:	00560001 	subseq	r0, r6, r1
    1b50:	00000000 	andeq	r0, r0, r0
    1b54:	02000000 	andeq	r0, r0, #0
	...
    1b60:	36000000 	strcc	r0, [r0], -r0
    1b64:	4a10000a 	bmi	401b94 <__RAM_SIZE+0x301b94>
    1b68:	0210000a 	andseq	r0, r0, #10
    1b6c:	4a9f3000 	bmi	fe7cdb74 <__RAM_segment_used_end__+0xc66cdb74>
    1b70:	5610000a 	ldrpl	r0, [r0], -sl
    1b74:	0110000a 	tsteq	r0, sl
    1b78:	0a565e00 	beq	1599380 <SYSTEM_CLOCK+0xfe0600>
    1b7c:	0a701000 	beq	1c05b84 <SYSTEM_CLOCK+0x164ce04>
    1b80:	00011000 	andeq	r1, r1, r0
    1b84:	000a7057 	andeq	r7, sl, r7, asr r0
    1b88:	000a9e10 	andeq	r9, sl, r0, lsl lr
    1b8c:	5e000110 	fltpls	f0, r0
    1b90:	10000a9e 	mulne	r0, lr, sl
    1b94:	10000aa0 	andne	r0, r0, r0, lsr #21
    1b98:	9f300002 	svcls	0x00300002
    1b9c:	10000aa0 	andne	r0, r0, r0, lsr #21
    1ba0:	10000ac0 	andne	r0, r0, r0, asr #21
    1ba4:	00570001 	subseq	r0, r7, r1
	...
    1bb8:	4a000000 	bmi	1bc0 <__HEAP_SIZE+0xbc0>
    1bbc:	4e10000a 	cdpmi	0, 1, cr0, cr0, cr10, {0}
    1bc0:	0110000a 	tsteq	r0, sl
    1bc4:	0a4e5c00 	beq	1398bcc <SYSTEM_CLOCK+0xddfe4c>
    1bc8:	0a521000 	beq	1485bd0 <SYSTEM_CLOCK+0xecce50>
    1bcc:	00031000 	andeq	r1, r3, r0
    1bd0:	529f507c 	addspl	r5, pc, #124	; 0x7c
    1bd4:	7010000a 	andsvc	r0, r0, sl
    1bd8:	1210000a 	andsne	r0, r0, #10
    1bdc:	74007400 	strvc	r7, [r0], #-1024	; 0xfffffc00
    1be0:	7530f700 	ldrvc	pc, [r0, #-1792]!	; 0xfffff900
    1be4:	1b30f700 	blne	c3f7ec <SYSTEM_CLOCK+0x686a6c>
    1be8:	007500f7 	ldrshteq	r0, [r5], #-7
    1bec:	7c9f1c1e 	ldcvc	12, cr1, [pc], {30}
    1bf0:	8c10000a 	ldchi	0, cr0, [r0], {10}
    1bf4:	0110000a 	tsteq	r0, sl
    1bf8:	0a8c5c00 	beq	fe318c00 <__RAM_segment_used_end__+0xc6218c00>
    1bfc:	0a9a1000 	beq	fe685c04 <__RAM_segment_used_end__+0xc6585c04>
    1c00:	00121000 	andseq	r1, r2, r0
    1c04:	00740074 	rsbseq	r0, r4, r4, ror r0
    1c08:	007530f7 	ldrshteq	r3, [r5], #-7
    1c0c:	f71b30f7 			; <UNDEFINED> instruction: 0xf71b30f7
    1c10:	1e007500 	cfsh32ne	mvfx7, mvfx0, #0
    1c14:	0a9a9f1c 	beq	fe6a988c <__RAM_segment_used_end__+0xc65a988c>
    1c18:	0a9e1000 	beq	fe785c20 <__RAM_segment_used_end__+0xc6685c20>
    1c1c:	00011000 	andeq	r1, r1, r0
    1c20:	0000005c 	andeq	r0, r0, ip, asr r0
    1c24:	00000000 	andeq	r0, r0, r0
    1c28:	0008f400 	andeq	pc, r8, r0, lsl #8
    1c2c:	0008f810 	andeq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
    1c30:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c34:	0008f800 	andeq	pc, r8, r0, lsl #16
    1c38:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
    1c3c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c40:	0008fa1c 	andeq	pc, r8, ip, lsl sl	; <UNPREDICTABLE>
    1c44:	0009b010 	andeq	fp, r9, r0, lsl r0
    1c48:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c4c:	0009b030 	andeq	fp, r9, r0, lsr r0
    1c50:	0009b410 	andeq	fp, r9, r0, lsl r4
    1c54:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c58:	0009b41c 	andeq	fp, r9, ip, lsl r4
    1c5c:	000a2c10 	andeq	r2, sl, r0, lsl ip
    1c60:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c64:	00000030 	andeq	r0, r0, r0, lsr r0
	...
    1c70:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1c74:	ad100008 	ldcge	0, cr0, [r0, #-32]	; 0xffffffe0
    1c78:	01100009 	tsteq	r0, r9
    1c7c:	09ad5000 	stmibeq	sp!, {ip, lr}
    1c80:	09b41000 	ldmibeq	r4!, {ip}
    1c84:	00041000 	andeq	r1, r4, r0
    1c88:	9f5001f3 	svcls	0x005001f3
    1c8c:	100009b4 			; <UNDEFINED> instruction: 0x100009b4
    1c90:	10000a2c 	andne	r0, r0, ip, lsr #20
    1c94:	00500001 	subseq	r0, r0, r1
	...
    1ca4:	0008f400 	andeq	pc, r8, r0, lsl #8
    1ca8:	0009ad10 	andeq	sl, r9, r0, lsl sp
    1cac:	51000110 	tstpl	r0, r0, lsl r1
    1cb0:	100009ad 	andne	r0, r0, sp, lsr #19
    1cb4:	100009b4 			; <UNDEFINED> instruction: 0x100009b4
    1cb8:	01f30004 	mvnseq	r0, r4
    1cbc:	09b49f51 	ldmibeq	r4!, {r0, r4, r6, r8, r9, sl, fp, ip, pc}
    1cc0:	0a2c1000 	beq	b05cc8 <SYSTEM_CLOCK+0x54cf48>
    1cc4:	00011000 	andeq	r1, r1, r0
    1cc8:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1cd4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1cd8:	ad100008 	ldcge	0, cr0, [r0, #-32]	; 0xffffffe0
    1cdc:	01100009 	tsteq	r0, r9
    1ce0:	09ad5200 	stmibeq	sp!, {r9, ip, lr}
    1ce4:	09b41000 	ldmibeq	r4!, {ip}
    1ce8:	00041000 	andeq	r1, r4, r0
    1cec:	9f5201f3 	svcls	0x005201f3
    1cf0:	100009b4 			; <UNDEFINED> instruction: 0x100009b4
    1cf4:	10000a2c 	andne	r0, r0, ip, lsr #20
    1cf8:	00520001 	subseq	r0, r2, r1
	...
    1d08:	0008f400 	andeq	pc, r8, r0, lsl #8
    1d0c:	0009ad10 	andeq	sl, r9, r0, lsl sp
    1d10:	53000110 	movwpl	r0, #272	; 0x110
    1d14:	100009ad 	andne	r0, r0, sp, lsr #19
    1d18:	100009b4 			; <UNDEFINED> instruction: 0x100009b4
    1d1c:	01f30004 	mvnseq	r0, r4
    1d20:	09b49f53 	ldmibeq	r4!, {r0, r1, r4, r6, r8, r9, sl, fp, ip, pc}
    1d24:	0a2c1000 	beq	b05d2c <SYSTEM_CLOCK+0x54cfac>
    1d28:	00011000 	andeq	r1, r1, r0
    1d2c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1d38:	0008f400 	andeq	pc, r8, r0, lsl #8
    1d3c:	0009b410 	andeq	fp, r9, r0, lsl r4
    1d40:	91000210 	tstls	r0, r0, lsl r2
    1d44:	0009b400 	andeq	fp, r9, r0, lsl #8
    1d48:	000a2c10 	andeq	r2, sl, r0, lsl ip
    1d4c:	91000210 	tstls	r0, r0, lsl r2
	...
    1d5c:	00000101 	andeq	r0, r0, r1, lsl #2
    1d60:	00000101 	andeq	r0, r0, r1, lsl #2
    1d64:	00000101 	andeq	r0, r0, r1, lsl #2
    1d68:	00000101 	andeq	r0, r0, r1, lsl #2
    1d6c:	00000101 	andeq	r0, r0, r1, lsl #2
    1d70:	00000000 	andeq	r0, r0, r0
    1d74:	01010000 	mrseq	r0, (UNDEF: 1)
    1d78:	01010000 	mrseq	r0, (UNDEF: 1)
    1d7c:	01010000 	mrseq	r0, (UNDEF: 1)
    1d80:	01010000 	mrseq	r0, (UNDEF: 1)
    1d84:	01010000 	mrseq	r0, (UNDEF: 1)
    1d88:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1d8c:	2c100008 	ldccs	0, cr0, [r0], {8}
    1d90:	02100009 	andseq	r0, r0, #9
    1d94:	2c049100 	stfcsd	f1, [r4], {-0}
    1d98:	2c100009 	ldccs	0, cr0, [r0], {9}
    1d9c:	01100009 	tsteq	r0, r9
    1da0:	092c5400 	stmdbeq	ip!, {sl, ip, lr}
    1da4:	09361000 	ldmdbeq	r6!, {ip}
    1da8:	00031000 	andeq	r1, r3, r0
    1dac:	369f0174 			; <UNDEFINED> instruction: 0x369f0174
    1db0:	4c100009 	ldcmi	0, cr0, [r0], {9}
    1db4:	01100009 	tsteq	r0, r9
    1db8:	094c5400 	stmdbeq	ip, {sl, ip, lr}^
    1dbc:	09561000 	ldmdbeq	r6, {ip}^
    1dc0:	00031000 	andeq	r1, r3, r0
    1dc4:	569f0174 			; <UNDEFINED> instruction: 0x569f0174
    1dc8:	84100009 	ldrhi	r0, [r0], #-9
    1dcc:	01100009 	tsteq	r0, r9
    1dd0:	09845400 	stmibeq	r4, {sl, ip, lr}
    1dd4:	098e1000 	stmibeq	lr, {ip}
    1dd8:	00031000 	andeq	r1, r3, r0
    1ddc:	8e9f0174 	mrchi	1, 4, r0, cr15, cr4, {3}
    1de0:	98100009 	ldmdals	r0, {r0, r3}
    1de4:	01100009 	tsteq	r0, r9
    1de8:	09985400 	ldmibeq	r8, {sl, ip, lr}
    1dec:	09a21000 	stmibeq	r2!, {ip}
    1df0:	00031000 	andeq	r1, r3, r0
    1df4:	a29f0174 	addsge	r0, pc, #116, 2
    1df8:	b4100009 	ldrlt	r0, [r0], #-9
    1dfc:	01100009 	tsteq	r0, r9
    1e00:	09b45400 	ldmibeq	r4!, {sl, ip, lr}
    1e04:	09b81000 	ldmibeq	r8!, {ip}
    1e08:	00031000 	andeq	r1, r3, r0
    1e0c:	b89f7f74 	ldmlt	pc, {r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    1e10:	c6100009 	ldrgt	r0, [r0], -r9
    1e14:	01100009 	tsteq	r0, r9
    1e18:	09c65c00 	stmibeq	r6, {sl, fp, ip, lr}^
    1e1c:	09c81000 	stmibeq	r8, {ip}^
    1e20:	00011000 	andeq	r1, r1, r0
    1e24:	0009c854 	andeq	ip, r9, r4, asr r8
    1e28:	0009cc10 	andeq	ip, r9, r0, lsl ip
    1e2c:	5c000110 	stfpls	f0, [r0], {16}
    1e30:	100009cc 	andne	r0, r0, ip, asr #19
    1e34:	100009d6 	ldrdne	r0, [r0], -r6
    1e38:	d6540001 	ldrble	r0, [r4], -r1
    1e3c:	e0100009 	ands	r0, r0, r9
    1e40:	03100009 	tsteq	r0, #9
    1e44:	9f017400 	svcls	0x00017400
    1e48:	100009e0 	andne	r0, r0, r0, ror #19
    1e4c:	100009ec 	andne	r0, r0, ip, ror #19
    1e50:	ec540001 	mrrc	0, 0, r0, r4, cr1
    1e54:	f6100009 			; <UNDEFINED> instruction: 0xf6100009
    1e58:	03100009 	tsteq	r0, #9
    1e5c:	9f017400 	svcls	0x00017400
    1e60:	100009f6 	strdne	r0, [r0], -r6
    1e64:	100009fc 	strdne	r0, [r0], -ip
    1e68:	fc540001 	mrrc2	0, 0, r0, r4, cr1
    1e6c:	06100009 	ldreq	r0, [r0], -r9
    1e70:	0310000a 	tsteq	r0, #10
    1e74:	9f017400 	svcls	0x00017400
    1e78:	10000a06 	andne	r0, r0, r6, lsl #20
    1e7c:	10000a0e 	andne	r0, r0, lr, lsl #20
    1e80:	0e540001 	cdpeq	0, 5, cr0, cr4, cr1, {0}
    1e84:	1810000a 	ldmdane	r0, {r1, r3}
    1e88:	0310000a 	tsteq	r0, #10
    1e8c:	9f017400 	svcls	0x00017400
    1e90:	10000a18 	andne	r0, r0, r8, lsl sl
    1e94:	10000a20 	andne	r0, r0, r0, lsr #20
    1e98:	20540001 	subscs	r0, r4, r1
    1e9c:	2a10000a 	bcs	401ecc <__RAM_SIZE+0x301ecc>
    1ea0:	0310000a 	tsteq	r0, #10
    1ea4:	9f017400 	svcls	0x00017400
    1ea8:	10000a2a 	andne	r0, r0, sl, lsr #20
    1eac:	10000a2c 	andne	r0, r0, ip, lsr #20
    1eb0:	00540001 	subseq	r0, r4, r1
	...
    1ebc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1ec0:	b4100008 	ldrlt	r0, [r0], #-8
    1ec4:	02100009 	andseq	r0, r0, #9
    1ec8:	b4089100 	strlt	r9, [r8], #-256	; 0xffffff00
    1ecc:	2c100009 	ldccs	0, cr0, [r0], {9}
    1ed0:	0210000a 	andseq	r0, r0, #10
    1ed4:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    1ee0:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1ee4:	b4100008 	ldrlt	r0, [r0], #-8
    1ee8:	02100009 	andseq	r0, r0, #9
    1eec:	b40c9100 	strlt	r9, [ip], #-256	; 0xffffff00
    1ef0:	2c100009 	ldccs	0, cr0, [r0], {9}
    1ef4:	0210000a 	andseq	r0, r0, #10
    1ef8:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    1f04:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1f08:	b4100008 	ldrlt	r0, [r0], #-8
    1f0c:	02100009 	andseq	r0, r0, #9
    1f10:	b4109100 	ldrlt	r9, [r0], #-256	; 0xffffff00
    1f14:	2c100009 	ldccs	0, cr0, [r0], {9}
    1f18:	0210000a 	andseq	r0, r0, #10
    1f1c:	00109100 	andseq	r9, r0, r0, lsl #2
	...
    1f28:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1f2c:	2a100008 	bcs	401f54 <__RAM_SIZE+0x301f54>
    1f30:	02100009 	andseq	r0, r0, #9
    1f34:	2a149100 	bcs	52633c <__RAM_SIZE+0x42633c>
    1f38:	2c100009 	ldccs	0, cr0, [r0], {9}
    1f3c:	0110000a 	tsteq	r0, sl
    1f40:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    1f4c:	08f40000 	ldmeq	r4!, {}^	; <UNPREDICTABLE>
    1f50:	09b41000 	ldmibeq	r4!, {ip}
    1f54:	00021000 	andeq	r1, r2, r0
    1f58:	09b41891 	ldmibeq	r4!, {r0, r4, r7, fp, ip}
    1f5c:	0a2c1000 	beq	b05f64 <SYSTEM_CLOCK+0x54d1e4>
    1f60:	00021000 	andeq	r1, r2, r0
    1f64:	00001891 	muleq	r0, r1, r8
    1f68:	00000000 	andeq	r0, r0, r0
    1f6c:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    1f70:	087a1000 	ldmdaeq	sl!, {ip}^
    1f74:	00021000 	andeq	r1, r2, r0
    1f78:	087a007d 	ldmdaeq	sl!, {r0, r2, r3, r4, r5, r6}^
    1f7c:	087c1000 	ldmdaeq	ip!, {ip}^
    1f80:	00021000 	andeq	r1, r2, r0
    1f84:	087c247d 	ldmdaeq	ip!, {r0, r2, r3, r4, r5, r6, sl, sp}^
    1f88:	08da1000 	ldmeq	sl, {ip}^
    1f8c:	00021000 	andeq	r1, r2, r0
    1f90:	08da307d 	ldmeq	sl, {r0, r2, r3, r4, r5, r6, ip, sp}^
    1f94:	08de1000 	ldmeq	lr, {ip}^
    1f98:	00021000 	andeq	r1, r2, r0
    1f9c:	08de247d 	ldmeq	lr, {r0, r2, r3, r4, r5, r6, sl, sp}^
    1fa0:	08f41000 	ldmeq	r4!, {ip}^
    1fa4:	00021000 	andeq	r1, r2, r0
    1fa8:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    1fb4:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    1fb8:	089a1000 	ldmeq	sl, {ip}
    1fbc:	00011000 	andeq	r1, r1, r0
    1fc0:	00089a50 	andeq	r9, r8, r0, asr sl
    1fc4:	0008f410 	andeq	pc, r8, r0, lsl r4	; <UNPREDICTABLE>
    1fc8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    1fd8:	10000876 	andne	r0, r0, r6, ror r8
    1fdc:	1000089a 	mulne	r0, sl, r8
    1fe0:	9a510001 	bls	1441fec <SYSTEM_CLOCK+0xe8926c>
    1fe4:	f4100008 			; <UNDEFINED> instruction: 0xf4100008
    1fe8:	01100008 	tsteq	r0, r8
    1fec:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    2000:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    2004:	08a21000 	stmiaeq	r2!, {ip}
    2008:	00011000 	andeq	r1, r1, r0
    200c:	0008a252 	andeq	sl, r8, r2, asr r2
    2010:	0008b210 	andeq	fp, r8, r0, lsl r2
    2014:	5b000110 	blpl	245c <__HEAP_SIZE+0x145c>
    2018:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
    201c:	100008be 			; <UNDEFINED> instruction: 0x100008be
    2020:	be520001 	cdplt	0, 5, cr0, cr2, cr1, {0}
    2024:	ca100008 	bgt	40204c <__RAM_SIZE+0x30204c>
    2028:	01100008 	tsteq	r0, r8
    202c:	08ca5800 	stmiaeq	sl, {fp, ip, lr}^
    2030:	08e81000 	stmiaeq	r8!, {ip}^
    2034:	00011000 	andeq	r1, r1, r0
    2038:	0008e852 	andeq	lr, r8, r2, asr r8
    203c:	0008f410 	andeq	pc, r8, r0, lsl r4	; <UNPREDICTABLE>
    2040:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2050:	10000876 	andne	r0, r0, r6, ror r8
    2054:	10000890 	mulne	r0, r0, r8
    2058:	90530001 	subsls	r0, r3, r1
    205c:	f4100008 			; <UNDEFINED> instruction: 0xf4100008
    2060:	01100008 	tsteq	r0, r8
    2064:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    2070:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    2074:	08de1000 	ldmeq	lr, {ip}^
    2078:	00021000 	andeq	r1, r2, r0
    207c:	08de0091 	ldmeq	lr, {r0, r4, r7}^
    2080:	08f41000 	ldmeq	r4!, {ip}^
    2084:	00021000 	andeq	r1, r2, r0
    2088:	00000091 	muleq	r0, r1, r0
	...
    2094:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    2098:	08b81000 	ldmeq	r8!, {ip}
    209c:	00021000 	andeq	r1, r2, r0
    20a0:	08b80491 	ldmeq	r8!, {r0, r4, r7, sl}
    20a4:	08d61000 	ldmeq	r6, {ip}^
    20a8:	00011000 	andeq	r1, r1, r0
    20ac:	00000054 	andeq	r0, r0, r4, asr r0
	...
    20b8:	00087600 	andeq	r7, r8, r0, lsl #12
    20bc:	0008de10 	andeq	sp, r8, r0, lsl lr
    20c0:	91000210 	tstls	r0, r0, lsl r2
    20c4:	0008de08 	andeq	sp, r8, r8, lsl #28
    20c8:	0008f410 	andeq	pc, r8, r0, lsl r4	; <UNPREDICTABLE>
    20cc:	91000210 	tstls	r0, r0, lsl r2
    20d0:	00000008 	andeq	r0, r0, r8
	...
    20dc:	00087600 	andeq	r7, r8, r0, lsl #12
    20e0:	0008de10 	andeq	sp, r8, r0, lsl lr
    20e4:	91000210 	tstls	r0, r0, lsl r2
    20e8:	0008de0c 	andeq	sp, r8, ip, lsl #28
    20ec:	0008f410 	andeq	pc, r8, r0, lsl r4	; <UNPREDICTABLE>
    20f0:	91000210 	tstls	r0, r0, lsl r2
    20f4:	0000000c 	andeq	r0, r0, ip
    20f8:	00000000 	andeq	r0, r0, r0
    20fc:	00000100 	andeq	r0, r0, r0, lsl #2
    2100:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    2104:	9a100008 	bls	40212c <__RAM_SIZE+0x30212c>
    2108:	01100008 	tsteq	r0, r8
    210c:	089a5200 	ldmeq	sl, {r9, ip, lr}
    2110:	08b81000 	ldmeq	r8!, {ip}
    2114:	00021000 	andeq	r1, r2, r0
    2118:	08b85491 	ldmeq	r8!, {r0, r4, r7, sl, ip, lr}
    211c:	08f41000 	ldmeq	r4!, {ip}^
    2120:	00041000 	andeq	r1, r4, r0
    2124:	9f5201f3 	svcls	0x005201f3
	...
    2130:	089a0000 	ldmeq	sl, {}	; <UNPREDICTABLE>
    2134:	08b81000 	ldmeq	r8!, {ip}
    2138:	00011000 	andeq	r1, r1, r0
    213c:	00000058 	andeq	r0, r0, r8, asr r0
	...
    2148:	00085200 	andeq	r5, r8, r0, lsl #4
    214c:	00085610 	andeq	r5, r8, r0, lsl r6
    2150:	50000110 	andpl	r0, r0, r0, lsl r1
    2154:	10000856 	andne	r0, r0, r6, asr r8
    2158:	10000876 	andne	r0, r0, r6, ror r8
    215c:	00510001 	subseq	r0, r1, r1
    2160:	00000000 	andeq	r0, r0, r0
    2164:	01000000 	mrseq	r0, (UNDEF: 0)
    2168:	00000000 	andeq	r0, r0, r0
    216c:	00085400 	andeq	r5, r8, r0, lsl #8
    2170:	00085810 	andeq	r5, r8, r0, lsl r8
    2174:	30000210 	andcc	r0, r0, r0, lsl r2
    2178:	0008589f 	muleq	r8, pc, r8	; <UNPREDICTABLE>
    217c:	00085c10 	andeq	r5, r8, r0, lsl ip
    2180:	50000110 	andpl	r0, r0, r0, lsl r1
    2184:	10000868 	andne	r0, r0, r8, ror #16
    2188:	10000876 	andne	r0, r0, r6, ror r8
    218c:	00500001 	subseq	r0, r0, r1
	...
    2198:	6c000000 	stcvs	0, cr0, [r0], {-0}
    219c:	6e100008 	cdpvs	0, 1, cr0, cr0, cr8, {0}
    21a0:	01100008 	tsteq	r0, r8
    21a4:	086e5300 	stmdaeq	lr!, {r8, r9, ip, lr}^
    21a8:	08701000 	ldmdaeq	r0!, {ip}^
    21ac:	00031000 	andeq	r1, r3, r0
    21b0:	009f3073 	addseq	r3, pc, r3, ror r0	; <UNPREDICTABLE>
	...
    21c0:	02000000 	andeq	r0, r0, #0
    21c4:	00007d00 	andeq	r7, r0, r0, lsl #26
    21c8:	00000000 	andeq	r0, r0, r0
    21cc:	02000000 	andeq	r0, r0, #0
    21d0:	00087d00 	andeq	r7, r8, r0, lsl #26
    21d4:	00000000 	andeq	r0, r0, r0
    21d8:	02000000 	andeq	r0, r0, #0
    21dc:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    21f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2200:	01f30004 	mvnseq	r0, r4
    2204:	00009f50 	andeq	r9, r0, r0, asr pc
    2208:	00000000 	andeq	r0, r0, r0
    220c:	00010000 	andeq	r0, r1, r0
    2210:	00000050 	andeq	r0, r0, r0, asr r0
	...
    2224:	01000000 	mrseq	r0, (UNDEF: 0)
    2228:	00005100 	andeq	r5, r0, r0, lsl #2
    222c:	00000000 	andeq	r0, r0, r0
    2230:	00040000 	andeq	r0, r4, r0
    2234:	9f5101f3 	svcls	0x005101f3
	...
    2240:	00510001 	subseq	r0, r1, r1
	...
    2258:	52000100 	andpl	r0, r0, #0, 2
	...
    2264:	01f30004 	mvnseq	r0, r4
    2268:	00009f52 	andeq	r9, r0, r2, asr pc
    226c:	00000000 	andeq	r0, r0, r0
    2270:	00010000 	andeq	r0, r1, r0
    2274:	00000052 	andeq	r0, r0, r2, asr r0
	...
    2288:	01000000 	mrseq	r0, (UNDEF: 0)
    228c:	00005300 	andeq	r5, r0, r0, lsl #6
    2290:	00000000 	andeq	r0, r0, r0
    2294:	00040000 	andeq	r0, r4, r0
    2298:	9f5301f3 	svcls	0x005301f3
	...
    22a4:	00530001 	subseq	r0, r3, r1
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	90000000 	andls	r0, r0, r0
    22b0:	96100019 			; <UNDEFINED> instruction: 0x96100019
    22b4:	02100019 	andseq	r0, r0, #25
    22b8:	96007d00 	strls	r7, [r0], -r0, lsl #26
    22bc:	9c100019 	ldcls	0, cr0, [r0], {25}
    22c0:	02100019 	andseq	r0, r0, #25
    22c4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    22d0:	90000000 	andls	r0, r0, r0
    22d4:	99100019 	ldmdbls	r0, {r0, r3, r4}
    22d8:	01100019 	tsteq	r0, r9, lsl r0
    22dc:	19995000 	ldmibne	r9, {ip, lr}
    22e0:	199c1000 	ldmibne	ip, {ip}
    22e4:	00041000 	andeq	r1, r4, r0
    22e8:	9f5001f3 	svcls	0x005001f3
	...
    22f8:	10001990 	mulne	r0, r0, r9
    22fc:	10001999 	mulne	r0, r9, r9
    2300:	99510001 	ldmdbls	r1, {r0}^
    2304:	9c100019 	ldcls	0, cr0, [r0], {25}
    2308:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
    230c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2310:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    231c:	00199000 	andseq	r9, r9, r0
    2320:	00199910 	andseq	r9, r9, r0, lsl r9
    2324:	52000110 	andpl	r0, r0, #16, 2
    2328:	10001999 	mulne	r0, r9, r9
    232c:	1000199c 	mulne	r0, ip, r9
    2330:	01f30004 	mvnseq	r0, r4
    2334:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2340:	19900000 	ldmibne	r0, {}	; <UNPREDICTABLE>
    2344:	19991000 	ldmibne	r9, {ip}
    2348:	00011000 	andeq	r1, r1, r0
    234c:	00199953 	andseq	r9, r9, r3, asr r9
    2350:	00199c10 	andseq	r9, r9, r0, lsl ip
    2354:	f3000410 	vqshl.u8	d0, d0, d0
    2358:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    2368:	02000000 	andeq	r0, r0, #0
    236c:	00007d00 	andeq	r7, r0, r0, lsl #26
    2370:	00000000 	andeq	r0, r0, r0
    2374:	02000000 	andeq	r0, r0, #0
    2378:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    238c:	01000000 	mrseq	r0, (UNDEF: 0)
    2390:	00005000 	andeq	r5, r0, r0
    2394:	00000000 	andeq	r0, r0, r0
    2398:	00010000 	andeq	r0, r1, r0
    239c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    23b0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    23bc:	00550001 	subseq	r0, r5, r1
    23c0:	00000000 	andeq	r0, r0, r0
    23c4:	01000000 	mrseq	r0, (UNDEF: 0)
    23c8:	00010000 	andeq	r0, r1, r0
	...
    23d4:	30000200 	andcc	r0, r0, r0, lsl #4
    23d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    23dc:	00000000 	andeq	r0, r0, r0
    23e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    23ec:	00500001 	subseq	r0, r0, r1
    23f0:	00000000 	andeq	r0, r0, r0
    23f4:	02000000 	andeq	r0, r0, #0
	...
    2400:	02000000 	andeq	r0, r0, #0
    2404:	009f3000 	addseq	r3, pc, r0
    2408:	00000000 	andeq	r0, r0, r0
    240c:	01000000 	mrseq	r0, (UNDEF: 0)
    2410:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2420:	00020000 	andeq	r0, r2, r0
    2424:	0000007d 	andeq	r0, r0, sp, ror r0
    2428:	00000000 	andeq	r0, r0, r0
    242c:	00020000 	andeq	r0, r2, r0
    2430:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    2444:	00010000 	andeq	r0, r1, r0
    2448:	00000050 	andeq	r0, r0, r0, asr r0
    244c:	00000000 	andeq	r0, r0, r0
    2450:	f3000400 	vshl.u8	d0, d0, d0
    2454:	009f5001 	addseq	r5, pc, r1
    2458:	00000000 	andeq	r0, r0, r0
    245c:	dc000000 	stcle	0, cr0, [r0], {-0}
    2460:	de100019 	mrcle	0, 0, r0, cr0, cr9, {0}
    2464:	02100019 	andseq	r0, r0, #25
    2468:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    246c:	fa100019 	blx	4024d8 <__RAM_SIZE+0x3024d8>
    2470:	02100019 	andseq	r0, r0, #25
    2474:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    2480:	dc000000 	stcle	0, cr0, [r0], {-0}
    2484:	e4100019 	ldr	r0, [r0], #-25	; 0xffffffe7
    2488:	01100019 	tsteq	r0, r9, lsl r0
    248c:	19e45000 	stmibne	r4!, {ip, lr}^
    2490:	19fa1000 	ldmibne	sl!, {ip}^
    2494:	00011000 	andeq	r1, r1, r0
    2498:	00000055 	andeq	r0, r0, r5, asr r0
    249c:	00000000 	andeq	r0, r0, r0
    24a0:	00000100 	andeq	r0, r0, r0, lsl #2
    24a4:	0019e000 	andseq	lr, r9, r0
    24a8:	0019e410 	andseq	lr, r9, r0, lsl r4
    24ac:	30000210 	andcc	r0, r0, r0, lsl r2
    24b0:	0019e49f 	mulseq	r9, pc, r4	; <UNPREDICTABLE>
    24b4:	0019fa10 	andseq	pc, r9, r0, lsl sl	; <UNPREDICTABLE>
    24b8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    24c4:	19c80001 	stmibne	r8, {r0}^
    24c8:	19dc1000 	ldmibne	ip, {ip}^
    24cc:	00011000 	andeq	r1, r1, r0
    24d0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    24e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    24ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    24f0:	00000008 	andeq	r0, r0, r8
    24f4:	00000000 	andeq	r0, r0, r0
    24f8:	001a2000 	andseq	r2, sl, r0
    24fc:	001a3e10 	andseq	r3, sl, r0, lsl lr
    2500:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2504:	001a3e00 	andseq	r3, sl, r0, lsl #28
    2508:	001a8610 	andseq	r8, sl, r0, lsl r6
    250c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2510:	001a860c 	andseq	r8, sl, ip, lsl #12
    2514:	001a8810 	andseq	r8, sl, r0, lsl r8
    2518:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    251c:	001a8800 	andseq	r8, sl, r0, lsl #16
    2520:	001aac10 	andseq	sl, sl, r0, lsl ip
    2524:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2528:	0000000c 	andeq	r0, r0, ip
    252c:	00000000 	andeq	r0, r0, r0
    2530:	01000100 	mrseq	r0, (UNDEF: 16)
    2534:	001a2600 	andseq	r2, sl, r0, lsl #12
    2538:	001a4a10 	andseq	r4, sl, r0, lsl sl
    253c:	53000110 	movwpl	r0, #272	; 0x110
    2540:	10001a78 	andne	r1, r0, r8, ror sl
    2544:	10001aac 	andne	r1, r0, ip, lsr #21
    2548:	00530001 	subseq	r0, r3, r1
	...
    2558:	001a4a00 	andseq	r4, sl, r0, lsl #20
    255c:	001a5010 	andseq	r5, sl, r0, lsl r0
    2560:	52000110 	andpl	r0, r0, #16, 2
    2564:	10001a5a 	andne	r1, r0, sl, asr sl
    2568:	10001a80 	andne	r1, r0, r0, lsl #21
    256c:	88520001 	ldmdahi	r2, {r0}^
    2570:	ac10001a 	ldcge	0, cr0, [r0], {26}
    2574:	0110001a 	tsteq	r0, sl, lsl r0
    2578:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    2584:	10001a38 	andne	r1, r0, r8, lsr sl
    2588:	10001a7c 	andne	r1, r0, ip, ror sl
    258c:	00510001 	subseq	r0, r1, r1
	...
    259c:	001a4200 	andseq	r4, sl, r0, lsl #4
    25a0:	001a6810 	andseq	r6, sl, r0, lsl r8
    25a4:	56000110 			; <UNDEFINED> instruction: 0x56000110
    25a8:	10001a6a 	andne	r1, r0, sl, ror #20
    25ac:	10001a86 	andne	r1, r0, r6, lsl #21
    25b0:	88560001 	ldmdahi	r6, {r0}^
    25b4:	ac10001a 	ldcge	0, cr0, [r0], {26}
    25b8:	0110001a 	tsteq	r0, sl, lsl r0
    25bc:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    25cc:	10001a4a 	andne	r1, r0, sl, asr #20
    25d0:	10001a50 	andne	r1, r0, r0, asr sl
    25d4:	00730005 	rsbseq	r0, r3, r5
    25d8:	569f2531 			; <UNDEFINED> instruction: 0x569f2531
    25dc:	6210001a 	andsvs	r0, r0, #26
    25e0:	0110001a 	tsteq	r0, sl, lsl r0
    25e4:	1a625400 	bne	18975ec <SYSTEM_CLOCK+0x12de86c>
    25e8:	1a6a1000 	bne	1a865f0 <SYSTEM_CLOCK+0x14cd870>
    25ec:	00051000 	andeq	r1, r5, r0
    25f0:	25310073 	ldrcs	r0, [r1, #-115]!	; 0xffffff8d
    25f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25f8:	00000000 	andeq	r0, r0, r0
    25fc:	24000100 	strcs	r0, [r0], #-256	; 0xffffff00
    2600:	4a10001a 	bmi	402670 <__RAM_SIZE+0x302670>
    2604:	0110001a 	tsteq	r0, sl, lsl r0
    2608:	00005300 	andeq	r5, r0, r0, lsl #6
    260c:	00000000 	andeq	r0, r0, r0
    2610:	01000000 	mrseq	r0, (UNDEF: 0)
    2614:	10001a24 	andne	r1, r0, r4, lsr #20
    2618:	10001a24 	andne	r1, r0, r4, lsr #20
    261c:	00530001 	subseq	r0, r3, r1
    2620:	00000000 	andeq	r0, r0, r0
    2624:	01000000 	mrseq	r0, (UNDEF: 0)
    2628:	30000100 	andcc	r0, r0, r0, lsl #2
    262c:	3410001a 	ldrcc	r0, [r0], #-26	; 0xffffffe6
    2630:	0110001a 	tsteq	r0, sl, lsl r0
    2634:	1a805300 	bne	fe01723c <__RAM_segment_used_end__+0xc5f1723c>
    2638:	1a841000 	bne	fe106640 <__RAM_segment_used_end__+0xc6006640>
    263c:	00011000 	andeq	r1, r1, r0
    2640:	00000053 	andeq	r0, r0, r3, asr r0
    2644:	00000000 	andeq	r0, r0, r0
    2648:	44000100 	strmi	r0, [r0], #-256	; 0xffffff00
    264c:	4a10001a 	bmi	4026bc <__RAM_SIZE+0x3026bc>
    2650:	0110001a 	tsteq	r0, sl, lsl r0
    2654:	00005300 	andeq	r5, r0, r0, lsl #6
    2658:	00000000 	andeq	r0, r0, r0
    265c:	00010000 	andeq	r0, r1, r0
    2660:	1a760000 	bne	1d82668 <SYSTEM_CLOCK+0x17c98e8>
    2664:	1a801000 	bne	fe00666c <__RAM_segment_used_end__+0xc5f0666c>
    2668:	00011000 	andeq	r1, r1, r0
    266c:	001a8853 	andseq	r8, sl, r3, asr r8
    2670:	001aac10 	andseq	sl, sl, r0, lsl ip
    2674:	53000110 	movwpl	r0, #272	; 0x110
	...
    2680:	1a760100 	bne	1d82a88 <SYSTEM_CLOCK+0x17c9d08>
    2684:	1a761000 	bne	1d8668c <SYSTEM_CLOCK+0x17cd90c>
    2688:	00011000 	andeq	r1, r1, r0
    268c:	00000053 	andeq	r0, r0, r3, asr r0
    2690:	00000000 	andeq	r0, r0, r0
    2694:	001aac00 	andseq	sl, sl, r0, lsl #24
    2698:	001aae10 	andseq	sl, sl, r0, lsl lr
    269c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    26a0:	001aae00 	andseq	sl, sl, r0, lsl #28
    26a4:	001ac810 	andseq	ip, sl, r0, lsl r8
    26a8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    26ac:	00000008 	andeq	r0, r0, r8
	...
    26b8:	001aac00 	andseq	sl, sl, r0, lsl #24
    26bc:	001abb10 	andseq	fp, sl, r0, lsl fp
    26c0:	50000110 	andpl	r0, r0, r0, lsl r1
    26c4:	10001abb 			; <UNDEFINED> instruction: 0x10001abb
    26c8:	10001ac8 	andne	r1, r0, r8, asr #21
    26cc:	01f30004 	mvnseq	r0, r4
    26d0:	00009f50 	andeq	r9, r0, r0, asr pc
    26d4:	00000000 	andeq	r0, r0, r0
    26d8:	00010000 	andeq	r0, r1, r0
    26dc:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
    26e0:	10001ac2 	andne	r1, r0, r2, asr #21
    26e4:	00540001 	subseq	r0, r4, r1
    26e8:	00000000 	andeq	r0, r0, r0
    26ec:	01000000 	mrseq	r0, (UNDEF: 0)
    26f0:	001ab200 	andseq	fp, sl, r0, lsl #4
    26f4:	001ac210 	andseq	ip, sl, r0, lsl r2
    26f8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2704:	1ab20100 	bne	fec82b0c <__RAM_segment_used_end__+0xc6b82b0c>
    2708:	1ab21000 	bne	fec86710 <__RAM_segment_used_end__+0xc6b86710>
    270c:	00011000 	andeq	r1, r1, r0
    2710:	00000054 	andeq	r0, r0, r4, asr r0
    2714:	00000000 	andeq	r0, r0, r0
    2718:	bc000100 	stflts	f0, [r0], {-0}
    271c:	c010001a 	andsgt	r0, r0, sl, lsl r0
    2720:	0110001a 	tsteq	r0, sl, lsl r0
    2724:	00005400 	andeq	r5, r0, r0, lsl #8
    2728:	00000000 	andeq	r0, r0, r0
    272c:	1ac80000 	bne	ff202734 <__RAM_segment_used_end__+0xc7102734>
    2730:	1aca1000 	bne	ff286738 <__RAM_segment_used_end__+0xc7186738>
    2734:	00021000 	andeq	r1, r2, r0
    2738:	1aca007d 	bne	ff282934 <__RAM_segment_used_end__+0xc7182934>
    273c:	1df01000 	ldclne	0, cr1, [r0]
    2740:	00021000 	andeq	r1, r2, r0
    2744:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    2750:	01000000 	mrseq	r0, (UNDEF: 0)
    2754:	00000001 	andeq	r0, r0, r1
    2758:	10001ac8 	andne	r1, r0, r8, asr #21
    275c:	10001ad2 	ldrdne	r1, [r0], -r2
    2760:	d2500001 	subsle	r0, r0, #1
    2764:	f210001a 	vqadd.s16	d0, d0, d10
    2768:	0110001c 	tsteq	r0, ip, lsl r0
    276c:	1cf25400 	cfldrdne	mvd5, [r2]
    2770:	1d181000 	ldcne	0, cr1, [r8, #-0]
    2774:	00041000 	andeq	r1, r4, r0
    2778:	9f5001f3 	svcls	0x005001f3
    277c:	10001d18 	andne	r1, r0, r8, lsl sp
    2780:	10001d56 	andne	r1, r0, r6, asr sp
    2784:	90540001 	subsls	r0, r4, r1
    2788:	f010001d 			; <UNDEFINED> instruction: 0xf010001d
    278c:	0110001d 	tsteq	r0, sp, lsl r0
    2790:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    27a0:	1afe0000 	bne	fff827a8 <__RAM_segment_used_end__+0xc7e827a8>
    27a4:	1b1c1000 	blne	7067ac <SYSTEM_CLOCK+0x14da2c>
    27a8:	00011000 	andeq	r1, r1, r0
    27ac:	001b1c52 	andseq	r1, fp, r2, asr ip
    27b0:	001b1e10 	andseq	r1, fp, r0, lsl lr
    27b4:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    27b8:	001b862c 	andseq	r8, fp, ip, lsr #12
    27bc:	001bc010 	andseq	ip, fp, r0, lsl r0
    27c0:	52000110 	andpl	r0, r0, #16, 2
    27c4:	10001c52 	andne	r1, r0, r2, asr ip
    27c8:	10001c58 	andne	r1, r0, r8, asr ip
    27cc:	00520001 	subseq	r0, r2, r1
	...
    27dc:	001b9600 	andseq	r9, fp, r0, lsl #12
    27e0:	001bb610 	andseq	fp, fp, r0, lsl r6
    27e4:	51000110 	tstpl	r0, r0, lsl r1
    27e8:	10001bb6 			; <UNDEFINED> instruction: 0x10001bb6
    27ec:	10001bc0 	andne	r1, r0, r0, asr #23
    27f0:	72310005 	eorsvc	r0, r1, #5
    27f4:	529f2400 	addspl	r2, pc, #0, 8
    27f8:	5810001c 	ldmdapl	r0, {r2, r3, r4}
    27fc:	0110001c 	tsteq	r0, ip, lsl r0
    2800:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2810:	10001b16 	andne	r1, r0, r6, lsl fp
    2814:	10001b26 	andne	r1, r0, r6, lsr #22
    2818:	86530001 	ldrbhi	r0, [r3], -r1
    281c:	8810001b 	ldmdahi	r0, {r0, r1, r3, r4}
    2820:	0110001b 	tsteq	r0, fp, lsl r0
    2824:	1b885300 	blne	fe21742c <__RAM_segment_used_end__+0xc611742c>
    2828:	1b8c1000 	blne	fe306830 <__RAM_segment_used_end__+0xc6206830>
    282c:	00071000 	andeq	r1, r7, r0
    2830:	24320072 	ldrtcs	r0, [r2], #-114	; 0xffffff8e
    2834:	00220073 	eoreq	r0, r2, r3, ror r0
	...
    2840:	001b1c00 	andseq	r1, fp, r0, lsl #24
    2844:	001b2610 	andseq	r2, fp, r0, lsl r6
    2848:	52000110 	andpl	r0, r0, #16, 2
	...
    285c:	1bb00000 	blne	fec02864 <__RAM_segment_used_end__+0xc6b02864>
    2860:	1be01000 	blne	ff806868 <__RAM_segment_used_end__+0xc7706868>
    2864:	00011000 	andeq	r1, r1, r0
    2868:	001be053 	andseq	lr, fp, r3, asr r0
    286c:	001be210 	andseq	lr, fp, r0, lsl r2
    2870:	73000210 	movwvc	r0, #528	; 0x210
    2874:	001c5200 	andseq	r5, ip, r0, lsl #4
    2878:	001c5410 	andseq	r5, ip, r0, lsl r4
    287c:	53000110 	movwpl	r0, #272	; 0x110
    2880:	10001c54 	andne	r1, r0, r4, asr ip
    2884:	10001c56 	andne	r1, r0, r6, asr ip
    2888:	00730002 	rsbseq	r0, r3, r2
    288c:	10001c58 	andne	r1, r0, r8, asr ip
    2890:	10001c7c 	andne	r1, r0, ip, ror ip
    2894:	00530001 	subseq	r0, r3, r1
	...
    28a0:	001d1400 	andseq	r1, sp, r0, lsl #8
    28a4:	001d1c10 	andseq	r1, sp, r0, lsl ip
    28a8:	53000110 	movwpl	r0, #272	; 0x110
	...
    28b8:	10001c22 	andne	r1, r0, r2, lsr #24
    28bc:	10001c2c 	andne	r1, r0, ip, lsr #24
    28c0:	30530001 	subscc	r0, r3, r1
    28c4:	3610001d 			; <UNDEFINED> instruction: 0x3610001d
    28c8:	0110001d 	tsteq	r0, sp, lsl r0
    28cc:	00005300 	andeq	r5, r0, r0, lsl #6
    28d0:	00000000 	andeq	r0, r0, r0
    28d4:	00010000 	andeq	r0, r1, r0
    28d8:	00010000 	andeq	r0, r1, r0
    28dc:	1adc0001 	bne	ff7028e8 <__RAM_segment_used_end__+0xc76028e8>
    28e0:	1aec1000 	bne	ffb068e8 <__RAM_segment_used_end__+0xc7a068e8>
    28e4:	00011000 	andeq	r1, r1, r0
    28e8:	001b2653 	andseq	r2, fp, r3, asr r6
    28ec:	001b5310 	andseq	r5, fp, r0, lsl r3
    28f0:	53000110 	movwpl	r0, #272	; 0x110
    28f4:	10001b5a 	andne	r1, r0, sl, asr fp
    28f8:	10001b73 	andne	r1, r0, r3, ror fp
    28fc:	7a530001 	bvc	14c2908 <SYSTEM_CLOCK+0xf09b88>
    2900:	8610001b 			; <UNDEFINED> instruction: 0x8610001b
    2904:	0110001b 	tsteq	r0, fp, lsl r0
    2908:	00005300 	andeq	r5, r0, r0, lsl #6
    290c:	00000000 	andeq	r0, r0, r0
    2910:	00010000 	andeq	r0, r1, r0
    2914:	00000000 	andeq	r0, r0, r0
    2918:	10001ada 	ldrdne	r1, [r0], -sl
    291c:	10001ae6 	andne	r1, r0, r6, ror #21
    2920:	26530001 	ldrbcs	r0, [r3], -r1
    2924:	5310001b 	tstpl	r0, #27
    2928:	0110001b 	tsteq	r0, fp, lsl r0
    292c:	1b7c5300 	blne	1f17534 <SYSTEM_CLOCK+0x195e7b4>
    2930:	1b861000 	blne	fe186938 <__RAM_segment_used_end__+0xc6086938>
    2934:	00011000 	andeq	r1, r1, r0
    2938:	00000053 	andeq	r0, r0, r3, asr r0
    293c:	00000000 	andeq	r0, r0, r0
    2940:	da010000 	ble	42948 <SYSTICK_CYCLES+0x33ee9>
    2944:	da10001a 	ble	4029b4 <__RAM_SIZE+0x3029b4>
    2948:	0110001a 	tsteq	r0, sl, lsl r0
    294c:	00005300 	andeq	r5, r0, r0, lsl #6
    2950:	00000000 	andeq	r0, r0, r0
    2954:	00010000 	andeq	r0, r1, r0
    2958:	10001ae6 	andne	r1, r0, r6, ror #21
    295c:	10001aea 	andne	r1, r0, sl, ror #21
    2960:	00530001 	subseq	r0, r3, r1
    2964:	00000000 	andeq	r0, r0, r0
    2968:	01000000 	mrseq	r0, (UNDEF: 0)
    296c:	001b4a00 	andseq	r4, fp, r0, lsl #20
    2970:	001b4e10 	andseq	r4, fp, r0, lsl lr
    2974:	53000110 	movwpl	r0, #272	; 0x110
	...
    2980:	1b580101 	blne	1602d8c <SYSTEM_CLOCK+0x104a00c>
    2984:	1b5a1000 	blne	168698c <SYSTEM_CLOCK+0x10cdc0c>
    2988:	00011000 	andeq	r1, r1, r0
    298c:	00000053 	andeq	r0, r0, r3, asr r0
    2990:	00000000 	andeq	r0, r0, r0
    2994:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    2998:	5810001b 	ldmdapl	r0, {r0, r1, r3, r4}
    299c:	0110001b 	tsteq	r0, fp, lsl r0
    29a0:	00005300 	andeq	r5, r0, r0, lsl #6
    29a4:	00000000 	andeq	r0, r0, r0
    29a8:	00010000 	andeq	r0, r1, r0
    29ac:	10001b6a 	andne	r1, r0, sl, ror #22
    29b0:	10001b6e 	andne	r1, r0, lr, ror #22
    29b4:	00530001 	subseq	r0, r3, r1
    29b8:	00000000 	andeq	r0, r0, r0
    29bc:	01000000 	mrseq	r0, (UNDEF: 0)
    29c0:	001b7800 	andseq	r7, fp, r0, lsl #16
    29c4:	001b7c10 	andseq	r7, fp, r0, lsl ip
    29c8:	53000110 	movwpl	r0, #272	; 0x110
	...
    29d4:	1b780100 	blne	1e02ddc <SYSTEM_CLOCK+0x184a05c>
    29d8:	1b781000 	blne	1e069e0 <SYSTEM_CLOCK+0x184dc60>
    29dc:	00011000 	andeq	r1, r1, r0
    29e0:	00000053 	andeq	r0, r0, r3, asr r0
    29e4:	00000000 	andeq	r0, r0, r0
    29e8:	00000100 	andeq	r0, r0, r0, lsl #2
    29ec:	01000100 	mrseq	r0, (UNDEF: 16)
    29f0:	001c1000 	andseq	r1, ip, r0
    29f4:	001c2010 	andseq	r2, ip, r0, lsl r0
    29f8:	53000110 	movwpl	r0, #272	; 0x110
    29fc:	10001c7c 	andne	r1, r0, ip, ror ip
    2a00:	10001ca9 	andne	r1, r0, r9, lsr #25
    2a04:	b0530001 	subslt	r0, r3, r1
    2a08:	c910001c 	ldmdbgt	r0, {r2, r3, r4}
    2a0c:	0110001c 	tsteq	r0, ip, lsl r0
    2a10:	1cd05300 	ldclne	3, cr5, [r0], {0}
    2a14:	1cdc1000 	ldclne	0, cr1, [ip], {0}
    2a18:	00011000 	andeq	r1, r1, r0
    2a1c:	00000053 	andeq	r0, r0, r3, asr r0
    2a20:	00000000 	andeq	r0, r0, r0
    2a24:	00000100 	andeq	r0, r0, r0, lsl #2
    2a28:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2a2c:	1a10001c 	bne	402aa4 <__RAM_SIZE+0x302aa4>
    2a30:	0110001c 	tsteq	r0, ip, lsl r0
    2a34:	1c7c5300 	ldclne	3, cr5, [ip], #-0
    2a38:	1ca91000 	stcne	0, cr1, [r9]
    2a3c:	00011000 	andeq	r1, r1, r0
    2a40:	001cd253 	andseq	sp, ip, r3, asr r2
    2a44:	001cdc10 	andseq	sp, ip, r0, lsl ip
    2a48:	53000110 	movwpl	r0, #272	; 0x110
	...
    2a54:	1c0e0100 	stfnes	f0, [lr], {-0}
    2a58:	1c0e1000 	stcne	0, cr1, [lr], {-0}
    2a5c:	00011000 	andeq	r1, r1, r0
    2a60:	00000053 	andeq	r0, r0, r3, asr r0
    2a64:	00000000 	andeq	r0, r0, r0
    2a68:	1a000100 	bne	2e70 <__HEAP_SIZE+0x1e70>
    2a6c:	1e10001c 	mrcne	0, 0, r0, cr0, cr12, {0}
    2a70:	0110001c 	tsteq	r0, ip, lsl r0
    2a74:	00005300 	andeq	r5, r0, r0, lsl #6
    2a78:	00000000 	andeq	r0, r0, r0
    2a7c:	00010000 	andeq	r0, r1, r0
    2a80:	10001ca0 	andne	r1, r0, r0, lsr #25
    2a84:	10001ca4 	andne	r1, r0, r4, lsr #25
    2a88:	00530001 	subseq	r0, r3, r1
    2a8c:	00000000 	andeq	r0, r0, r0
    2a90:	01000000 	mrseq	r0, (UNDEF: 0)
    2a94:	001cae01 	andseq	sl, ip, r1, lsl #28
    2a98:	001cb010 	andseq	fp, ip, r0, lsl r0
    2a9c:	53000110 	movwpl	r0, #272	; 0x110
	...
    2aa8:	1cae0100 	stfnes	f0, [lr]
    2aac:	1cae1000 	stcne	0, cr1, [lr]
    2ab0:	00011000 	andeq	r1, r1, r0
    2ab4:	00000053 	andeq	r0, r0, r3, asr r0
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	c0000100 	andgt	r0, r0, r0, lsl #2
    2ac0:	c410001c 	ldrgt	r0, [r0], #-28	; 0xffffffe4
    2ac4:	0110001c 	tsteq	r0, ip, lsl r0
    2ac8:	00005300 	andeq	r5, r0, r0, lsl #6
    2acc:	00000000 	andeq	r0, r0, r0
    2ad0:	00010000 	andeq	r0, r1, r0
    2ad4:	10001cce 	andne	r1, r0, lr, asr #25
    2ad8:	10001cd2 	ldrdne	r1, [r0], -r2
    2adc:	00530001 	subseq	r0, r3, r1
	...
    2ae8:	001cce01 	andseq	ip, ip, r1, lsl #28
    2aec:	001cce10 	andseq	ip, ip, r0, lsl lr
    2af0:	53000110 	movwpl	r0, #272	; 0x110
	...
    2afc:	00000001 	andeq	r0, r0, r1
    2b00:	00010001 	andeq	r0, r1, r1
    2b04:	10001d1e 	andne	r1, r0, lr, lsl sp
    2b08:	10001d2e 	andne	r1, r0, lr, lsr #26
    2b0c:	90530001 	subsls	r0, r3, r1
    2b10:	bd10001d 	ldclt	0, cr0, [r0, #-116]	; 0xffffff8c
    2b14:	0110001d 	tsteq	r0, sp, lsl r0
    2b18:	1dc45300 	stclne	3, cr5, [r4]
    2b1c:	1ddd1000 	ldclne	0, cr1, [sp]
    2b20:	00011000 	andeq	r1, r1, r0
    2b24:	001de453 	andseq	lr, sp, r3, asr r4
    2b28:	001df010 	andseq	pc, sp, r0, lsl r0	; <UNPREDICTABLE>
    2b2c:	53000110 	movwpl	r0, #272	; 0x110
	...
    2b38:	00000001 	andeq	r0, r0, r1
    2b3c:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
    2b40:	1d281000 	stcne	0, cr1, [r8, #-0]
    2b44:	00011000 	andeq	r1, r1, r0
    2b48:	001d9053 	andseq	r9, sp, r3, asr r0
    2b4c:	001dbd10 	andseq	fp, sp, r0, lsl sp
    2b50:	53000110 	movwpl	r0, #272	; 0x110
    2b54:	10001de6 	andne	r1, r0, r6, ror #27
    2b58:	10001df0 	strdne	r1, [r0], -r0
    2b5c:	00530001 	subseq	r0, r3, r1
	...
    2b68:	001d1c01 	andseq	r1, sp, r1, lsl #24
    2b6c:	001d1c10 	andseq	r1, sp, r0, lsl ip
    2b70:	53000110 	movwpl	r0, #272	; 0x110
	...
    2b7c:	1d280001 	stcne	0, cr0, [r8, #-4]!
    2b80:	1d2c1000 	stcne	0, cr1, [ip, #-0]
    2b84:	00011000 	andeq	r1, r1, r0
    2b88:	00000053 	andeq	r0, r0, r3, asr r0
    2b8c:	00000000 	andeq	r0, r0, r0
    2b90:	b4000100 	strlt	r0, [r0], #-256	; 0xffffff00
    2b94:	b810001d 	ldmdalt	r0, {r0, r2, r3, r4}
    2b98:	0110001d 	tsteq	r0, sp, lsl r0
    2b9c:	00005300 	andeq	r5, r0, r0, lsl #6
    2ba0:	00000000 	andeq	r0, r0, r0
    2ba4:	01010000 	mrseq	r0, (UNDEF: 1)
    2ba8:	10001dc2 	andne	r1, r0, r2, asr #27
    2bac:	10001dc4 	andne	r1, r0, r4, asr #27
    2bb0:	00530001 	subseq	r0, r3, r1
	...
    2bbc:	001dc201 	andseq	ip, sp, r1, lsl #4
    2bc0:	001dc210 	andseq	ip, sp, r0, lsl r2
    2bc4:	53000110 	movwpl	r0, #272	; 0x110
	...
    2bd0:	1dd40001 	ldclne	0, cr0, [r4, #4]
    2bd4:	1dd81000 	ldclne	0, cr1, [r8]
    2bd8:	00011000 	andeq	r1, r1, r0
    2bdc:	00000053 	andeq	r0, r0, r3, asr r0
    2be0:	00000000 	andeq	r0, r0, r0
    2be4:	e2000100 	and	r0, r0, #0, 2
    2be8:	e610001d 			; <UNDEFINED> instruction: 0xe610001d
    2bec:	0110001d 	tsteq	r0, sp, lsl r0
    2bf0:	00005300 	andeq	r5, r0, r0, lsl #6
    2bf4:	00000000 	andeq	r0, r0, r0
    2bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    2bfc:	10001de2 	andne	r1, r0, r2, ror #27
    2c00:	10001de2 	andne	r1, r0, r2, ror #27
    2c04:	00530001 	subseq	r0, r3, r1
	...
    2c10:	001bc001 	andseq	ip, fp, r1
    2c14:	001bc010 	andseq	ip, fp, r0, lsl r0
    2c18:	52000110 	andpl	r0, r0, #16, 2
	...
    2c24:	1c4a0001 	mcrrne	0, 0, r0, sl, cr1
    2c28:	1c521000 	mrane	r1, r2, acc0
    2c2c:	00011000 	andeq	r1, r1, r0
    2c30:	00000053 	andeq	r0, r0, r3, asr r0
    2c34:	00000000 	andeq	r0, r0, r0
    2c38:	40010000 	andmi	r0, r1, r0
    2c3c:	4010001c 	andsmi	r0, r0, ip, lsl r0
    2c40:	0110001c 	tsteq	r0, ip, lsl r0
    2c44:	00005300 	andeq	r5, r0, r0, lsl #6
    2c48:	00000000 	andeq	r0, r0, r0
    2c4c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c50:	10001c4a 	andne	r1, r0, sl, asr #24
    2c54:	10001c4a 	andne	r1, r0, sl, asr #24
    2c58:	00530001 	subseq	r0, r3, r1
    2c5c:	00000000 	andeq	r0, r0, r0
    2c60:	01000000 	mrseq	r0, (UNDEF: 0)
    2c64:	001c4c00 	andseq	r4, ip, r0, lsl #24
    2c68:	001c5010 	andseq	r5, ip, r0, lsl r0
    2c6c:	53000110 	movwpl	r0, #272	; 0x110
	...
    2c78:	1c5c0100 	ldfnee	f0, [ip], {-0}
    2c7c:	1c5c1000 	mrane	r1, ip, acc0
    2c80:	00011000 	andeq	r1, r1, r0
    2c84:	00000051 	andeq	r0, r0, r1, asr r0
    2c88:	00000000 	andeq	r0, r0, r0
    2c8c:	50000100 	andpl	r0, r0, r0, lsl #2
    2c90:	5610001d 			; <UNDEFINED> instruction: 0x5610001d
    2c94:	0110001d 	tsteq	r0, sp, lsl r0
    2c98:	00005300 	andeq	r5, r0, r0, lsl #6
    2c9c:	00000000 	andeq	r0, r0, r0
    2ca0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ca4:	10001d4a 	andne	r1, r0, sl, asr #26
    2ca8:	10001d4a 	andne	r1, r0, sl, asr #26
    2cac:	00530001 	subseq	r0, r3, r1
	...
    2cb8:	001d5001 	andseq	r5, sp, r1
    2cbc:	001d5010 	andseq	r5, sp, r0, lsl r0
    2cc0:	53000110 	movwpl	r0, #272	; 0x110
	...
    2ccc:	1d520001 	ldclne	0, cr0, [r2, #-4]
    2cd0:	1d561000 	ldclne	0, cr1, [r6, #-0]
    2cd4:	00011000 	andeq	r1, r1, r0
    2cd8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2ce8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2cf4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2cf8:	00000008 	andeq	r0, r0, r8
	...
    2d0c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2d18:	01f30004 	mvnseq	r0, r4
    2d1c:	00009f50 	andeq	r9, r0, r0, asr pc
    2d20:	00000000 	andeq	r0, r0, r0
    2d24:	00010000 	andeq	r0, r1, r0
	...
    2d30:	00540001 	subseq	r0, r4, r1
	...
    2d44:	01000000 	mrseq	r0, (UNDEF: 0)
    2d48:	00005300 	andeq	r5, r0, r0, lsl #6
    2d4c:	00000000 	andeq	r0, r0, r0
    2d50:	00020000 	andeq	r0, r2, r0
    2d54:	00003070 	andeq	r3, r0, r0, ror r0
    2d58:	00000000 	andeq	r0, r0, r0
    2d5c:	00010000 	andeq	r0, r1, r0
	...
    2d68:	00540001 	subseq	r0, r4, r1
	...
    2d74:	00000001 	andeq	r0, r0, r1
    2d78:	00000000 	andeq	r0, r0, r0
    2d7c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2d88:	00000001 	andeq	r0, r0, r1
    2d8c:	00000000 	andeq	r0, r0, r0
    2d90:	00010000 	andeq	r0, r1, r0
    2d94:	00000054 	andeq	r0, r0, r4, asr r0
    2d98:	00000000 	andeq	r0, r0, r0
    2d9c:	001df000 	andseq	pc, sp, r0
    2da0:	001df210 	andseq	pc, sp, r0, lsl r2	; <UNPREDICTABLE>
    2da4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2da8:	001df200 	andseq	pc, sp, r0, lsl #4
    2dac:	001f6c10 	andseq	r6, pc, r0, lsl ip	; <UNPREDICTABLE>
    2db0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2db4:	00000010 	andeq	r0, r0, r0, lsl r0
    2db8:	00000000 	andeq	r0, r0, r0
    2dbc:	00020100 	andeq	r0, r2, r0, lsl #2
    2dc0:	001e1000 	andseq	r1, lr, r0
    2dc4:	001e2010 	andseq	r2, lr, r0, lsl r0
    2dc8:	51000110 	tstpl	r0, r0, lsl r1
    2dcc:	10001e82 	andne	r1, r0, r2, lsl #29
    2dd0:	10001ede 	ldrdne	r1, [r0], -lr
    2dd4:	00510001 	subseq	r0, r1, r1
	...
    2de0:	001df600 	andseq	pc, sp, r0, lsl #12
    2de4:	001f6c10 	andseq	r6, pc, r0, lsl ip	; <UNPREDICTABLE>
    2de8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2df4:	01000202 	tsteq	r0, r2, lsl #4
    2df8:	1e0a0001 	cdpne	0, 0, cr0, cr10, cr1, {0}
    2dfc:	1e201000 	cdpne	0, 2, cr1, cr0, cr0, {0}
    2e00:	00021000 	andeq	r1, r2, r0
    2e04:	1e829f30 	mcrne	15, 4, r9, cr2, cr0, {1}
    2e08:	1ece1000 	cdpne	0, 12, cr1, cr14, cr0, {0}
    2e0c:	00021000 	andeq	r1, r2, r0
    2e10:	1ece9f30 	mcrne	15, 6, r9, cr14, cr0, {1}
    2e14:	1f6c1000 	svcne	0x006c1000
    2e18:	00011000 	andeq	r1, r1, r0
    2e1c:	00000055 	andeq	r0, r0, r5, asr r0
    2e20:	00000000 	andeq	r0, r0, r0
    2e24:	00000100 	andeq	r0, r0, r0, lsl #2
    2e28:	01000100 	mrseq	r0, (UNDEF: 16)
    2e2c:	001dfc00 	andseq	pc, sp, r0, lsl #24
    2e30:	001e1210 	andseq	r1, lr, r0, lsl r2
    2e34:	53000110 	movwpl	r0, #272	; 0x110
    2e38:	10001e22 	andne	r1, r0, r2, lsr #28
    2e3c:	10001e4f 	andne	r1, r0, pc, asr #28
    2e40:	56530001 	ldrbpl	r0, [r3], -r1
    2e44:	6f10001e 	svcvs	0x0010001e
    2e48:	0110001e 	tsteq	r0, lr, lsl r0
    2e4c:	1e765300 	cdpne	3, 7, cr5, cr6, cr0, {0}
    2e50:	1e821000 	cdpne	0, 8, cr1, cr2, cr0, {0}
    2e54:	00011000 	andeq	r1, r1, r0
    2e58:	00000053 	andeq	r0, r0, r3, asr r0
    2e5c:	00000000 	andeq	r0, r0, r0
    2e60:	00000100 	andeq	r0, r0, r0, lsl #2
    2e64:	fa000000 	blx	2e6c <__HEAP_SIZE+0x1e6c>
    2e68:	0610001d 			; <UNDEFINED> instruction: 0x0610001d
    2e6c:	0110001e 	tsteq	r0, lr, lsl r0
    2e70:	1e225300 	cdpne	3, 2, cr5, cr2, cr0, {0}
    2e74:	1e4f1000 	cdpne	0, 4, cr1, cr15, cr0, {0}
    2e78:	00011000 	andeq	r1, r1, r0
    2e7c:	001e7853 	andseq	r7, lr, r3, asr r8
    2e80:	001e8210 	andseq	r8, lr, r0, lsl r2
    2e84:	53000110 	movwpl	r0, #272	; 0x110
	...
    2e90:	1dfa0100 	ldfnee	f0, [sl]
    2e94:	1dfa1000 	ldclne	0, cr1, [sl]
    2e98:	00011000 	andeq	r1, r1, r0
    2e9c:	00000053 	andeq	r0, r0, r3, asr r0
    2ea0:	00000000 	andeq	r0, r0, r0
    2ea4:	06000100 	streq	r0, [r0], -r0, lsl #2
    2ea8:	0a10001e 	beq	402f28 <__RAM_SIZE+0x302f28>
    2eac:	0110001e 	tsteq	r0, lr, lsl r0
    2eb0:	00005300 	andeq	r5, r0, r0, lsl #6
    2eb4:	00000000 	andeq	r0, r0, r0
    2eb8:	00010000 	andeq	r0, r1, r0
    2ebc:	10001e46 	andne	r1, r0, r6, asr #28
    2ec0:	10001e4a 	andne	r1, r0, sl, asr #28
    2ec4:	00530001 	subseq	r0, r3, r1
    2ec8:	00000000 	andeq	r0, r0, r0
    2ecc:	01000000 	mrseq	r0, (UNDEF: 0)
    2ed0:	001e5401 	andseq	r5, lr, r1, lsl #8
    2ed4:	001e5610 	andseq	r5, lr, r0, lsl r6
    2ed8:	53000110 	movwpl	r0, #272	; 0x110
	...
    2ee4:	1e540100 	rdfnes	f0, f4, f0
    2ee8:	1e541000 	cdpne	0, 5, cr1, cr4, cr0, {0}
    2eec:	00011000 	andeq	r1, r1, r0
    2ef0:	00000053 	andeq	r0, r0, r3, asr r0
    2ef4:	00000000 	andeq	r0, r0, r0
    2ef8:	66000100 	strvs	r0, [r0], -r0, lsl #2
    2efc:	6a10001e 	bvs	402f7c <__RAM_SIZE+0x302f7c>
    2f00:	0110001e 	tsteq	r0, lr, lsl r0
    2f04:	00005300 	andeq	r5, r0, r0, lsl #6
    2f08:	00000000 	andeq	r0, r0, r0
    2f0c:	00010000 	andeq	r0, r1, r0
    2f10:	10001e74 	andne	r1, r0, r4, ror lr
    2f14:	10001e78 	andne	r1, r0, r8, ror lr
    2f18:	00530001 	subseq	r0, r3, r1
	...
    2f24:	001e7401 	andseq	r7, lr, r1, lsl #8
    2f28:	001e7410 	andseq	r7, lr, r0, lsl r4
    2f2c:	53000110 	movwpl	r0, #272	; 0x110
	...
    2f38:	00010001 	andeq	r0, r1, r1
    2f3c:	1edc0001 	cdpne	0, 13, cr0, cr12, cr1, {0}
    2f40:	1f171000 	svcne	0x00171000
    2f44:	00011000 	andeq	r1, r1, r0
    2f48:	001f1e53 	andseq	r1, pc, r3, asr lr	; <UNPREDICTABLE>
    2f4c:	001f3710 	andseq	r3, pc, r0, lsl r7	; <UNPREDICTABLE>
    2f50:	53000110 	movwpl	r0, #272	; 0x110
    2f54:	10001f3e 	andne	r1, r0, lr, lsr pc
    2f58:	10001f6c 	andne	r1, r0, ip, ror #30
    2f5c:	00530001 	subseq	r0, r3, r1
    2f60:	00000000 	andeq	r0, r0, r0
    2f64:	01000000 	mrseq	r0, (UNDEF: 0)
    2f68:	00000000 	andeq	r0, r0, r0
    2f6c:	001eda00 	andseq	sp, lr, r0, lsl #20
    2f70:	001ee410 	andseq	lr, lr, r0, lsl r4
    2f74:	53000110 	movwpl	r0, #272	; 0x110
    2f78:	10001eea 	andne	r1, r0, sl, ror #29
    2f7c:	10001f17 	andne	r1, r0, r7, lsl pc
    2f80:	40530001 	subsmi	r0, r3, r1
    2f84:	6c10001f 	ldcvs	0, cr0, [r0], {31}
    2f88:	0110001f 	tsteq	r0, pc, lsl r0
    2f8c:	00005300 	andeq	r5, r0, r0, lsl #6
    2f90:	00000000 	andeq	r0, r0, r0
    2f94:	01000000 	mrseq	r0, (UNDEF: 0)
    2f98:	10001eda 	ldrdne	r1, [r0], -sl
    2f9c:	10001eda 	ldrdne	r1, [r0], -sl
    2fa0:	00530001 	subseq	r0, r3, r1
    2fa4:	00000000 	andeq	r0, r0, r0
    2fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    2fac:	001ee400 	andseq	lr, lr, r0, lsl #8
    2fb0:	001ee810 	andseq	lr, lr, r0, lsl r8
    2fb4:	53000110 	movwpl	r0, #272	; 0x110
	...
    2fc0:	1f0e0001 	svcne	0x000e0001
    2fc4:	1f121000 	svcne	0x00121000
    2fc8:	00011000 	andeq	r1, r1, r0
    2fcc:	00000053 	andeq	r0, r0, r3, asr r0
    2fd0:	00000000 	andeq	r0, r0, r0
    2fd4:	1c010100 	stfnes	f0, [r1], {-0}
    2fd8:	1e10001f 	mrcne	0, 0, r0, cr0, cr15, {0}
    2fdc:	0110001f 	tsteq	r0, pc, lsl r0
    2fe0:	00005300 	andeq	r5, r0, r0, lsl #6
    2fe4:	00000000 	andeq	r0, r0, r0
    2fe8:	01000000 	mrseq	r0, (UNDEF: 0)
    2fec:	10001f1c 	andne	r1, r0, ip, lsl pc
    2ff0:	10001f1c 	andne	r1, r0, ip, lsl pc
    2ff4:	00530001 	subseq	r0, r3, r1
    2ff8:	00000000 	andeq	r0, r0, r0
    2ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    3000:	001f2e00 	andseq	r2, pc, r0, lsl #28
    3004:	001f3210 	andseq	r3, pc, r0, lsl r2	; <UNPREDICTABLE>
    3008:	53000110 	movwpl	r0, #272	; 0x110
	...
    3014:	1f3c0001 	svcne	0x003c0001
    3018:	1f401000 	svcne	0x00401000
    301c:	00011000 	andeq	r1, r1, r0
    3020:	00000053 	andeq	r0, r0, r3, asr r0
    3024:	00000000 	andeq	r0, r0, r0
    3028:	3c010000 	stccc	0, cr0, [r1], {-0}
    302c:	3c10001f 	ldccc	0, cr0, [r0], {31}
    3030:	0110001f 	tsteq	r0, pc, lsl r0
    3034:	00005300 	andeq	r5, r0, r0, lsl #6
    3038:	00000000 	andeq	r0, r0, r0
    303c:	02010000 	andeq	r0, r1, #0
    3040:	1e0e0000 	cdpne	0, 0, cr0, cr14, cr0, {0}
    3044:	1e201000 	cdpne	0, 2, cr1, cr0, cr0, {0}
    3048:	00011000 	andeq	r1, r1, r0
    304c:	001e8251 	andseq	r8, lr, r1, asr r2
    3050:	001ede10 	andseq	sp, lr, r0, lsl lr
    3054:	51000110 	tstpl	r0, r0, lsl r1
	...
    3060:	1e0e0100 	adfnee	f0, f6, f0
    3064:	1e0e1000 	cdpne	0, 0, cr1, cr14, cr0, {0}
    3068:	00011000 	andeq	r1, r1, r0
    306c:	00000051 	andeq	r0, r0, r1, asr r0
    3070:	00000000 	andeq	r0, r0, r0
    3074:	02000100 	andeq	r0, r0, #0, 2
    3078:	01000100 	mrseq	r0, (UNDEF: 16)
    307c:	1c000200 	sfmne	f0, 4, [r0], {-0}
    3080:	2010001e 	andscs	r0, r0, lr, lsl r0
    3084:	0110001e 	tsteq	r0, lr, lsl r0
    3088:	1e825100 	rmfnes	f5, f2, f0
    308c:	1e861000 	cdpne	0, 8, cr1, cr6, cr0, {0}
    3090:	00011000 	andeq	r1, r1, r0
    3094:	001e9e51 	andseq	r9, lr, r1, asr lr
    3098:	001ea210 	andseq	sl, lr, r0, lsl r2
    309c:	51000110 	tstpl	r0, r0, lsl r1
    30a0:	10001ea4 	andne	r1, r0, r4, lsr #29
    30a4:	10001ea8 	andne	r1, r0, r8, lsr #29
    30a8:	ce510001 	cdpgt	0, 5, cr0, cr1, cr1, {0}
    30ac:	d210001e 	andsle	r0, r0, #30
    30b0:	0110001e 	tsteq	r0, lr, lsl r0
    30b4:	00005100 	andeq	r5, r0, r0, lsl #2
    30b8:	00000000 	andeq	r0, r0, r0
    30bc:	1f6c0000 	svcne	0x006c0000
    30c0:	1f6e1000 	svcne	0x006e1000
    30c4:	00021000 	andeq	r1, r2, r0
    30c8:	1f6e007d 	svcne	0x006e007d
    30cc:	1f841000 	svcne	0x00841000
    30d0:	00021000 	andeq	r1, r2, r0
    30d4:	0000087d 	andeq	r0, r0, sp, ror r8
    30d8:	00000000 	andeq	r0, r0, r0
    30dc:	00010000 	andeq	r0, r1, r0
    30e0:	10001f74 	andne	r1, r0, r4, ror pc
    30e4:	10001f80 	andne	r1, r0, r0, lsl #31
    30e8:	00540001 	subseq	r0, r4, r1
    30ec:	00000000 	andeq	r0, r0, r0
    30f0:	01000000 	mrseq	r0, (UNDEF: 0)
    30f4:	001f7200 	andseq	r7, pc, r0, lsl #4
    30f8:	001f8010 	andseq	r8, pc, r0, lsl r0	; <UNPREDICTABLE>
    30fc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3108:	1f720100 	svcne	0x00720100
    310c:	1f721000 	svcne	0x00721000
    3110:	00011000 	andeq	r1, r1, r0
    3114:	00000054 	andeq	r0, r0, r4, asr r0
    3118:	00000000 	andeq	r0, r0, r0
    311c:	7a000100 	bvc	3524 <__HEAP_SIZE+0x2524>
    3120:	7e10001f 	mrcvc	0, 0, r0, cr0, cr15, {0}
    3124:	0110001f 	tsteq	r0, pc, lsl r0
    3128:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3138:	00020000 	andeq	r0, r2, r0
    313c:	0000007d 	andeq	r0, r0, sp, ror r0
    3140:	00000000 	andeq	r0, r0, r0
    3144:	00020000 	andeq	r0, r2, r0
    3148:	0000047d 	andeq	r0, r0, sp, ror r4
    314c:	00000000 	andeq	r0, r0, r0
    3150:	00020000 	andeq	r0, r2, r0
    3154:	0000207d 	andeq	r2, r0, sp, ror r0
    3158:	00000000 	andeq	r0, r0, r0
    315c:	00020000 	andeq	r0, r2, r0
    3160:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    3174:	00500001 	subseq	r0, r0, r1
	...
    3180:	86000000 	strhi	r0, [r0], -r0
    3184:	9c10001f 	ldcls	0, cr0, [r0], {31}
    3188:	0110001f 	tsteq	r0, pc, lsl r0
    318c:	1fa05300 	svcne	0x00a05300
    3190:	1fb21000 	svcne	0x00b21000
    3194:	00011000 	andeq	r1, r1, r0
    3198:	00000053 	andeq	r0, r0, r3, asr r0
	...
    31a8:	001f8a00 	andseq	r8, pc, r0, lsl #20
    31ac:	001f9a10 	andseq	r9, pc, r0, lsl sl	; <UNPREDICTABLE>
    31b0:	52000110 	andpl	r0, r0, #16, 2
    31b4:	10001fa0 	andne	r1, r0, r0, lsr #31
    31b8:	10001fa2 	andne	r1, r0, r2, lsr #31
    31bc:	a2520001 	subsge	r0, r2, #1
    31c0:	aa10001f 	bge	403244 <__RAM_SIZE+0x303244>
    31c4:	0210001f 	andseq	r0, r0, #31
    31c8:	ac107000 	ldcge	0, cr7, [r0], {-0}
    31cc:	b210001f 	andslt	r0, r0, #31
    31d0:	0110001f 	tsteq	r0, pc, lsl r0
    31d4:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    31e0:	10001f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    31e4:	10001f96 	mulne	r0, r6, pc	; <UNPREDICTABLE>
    31e8:	00510001 	subseq	r0, r1, r1
    31ec:	00000000 	andeq	r0, r0, r0
    31f0:	Address 0x000031f0 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
{
   0:	0000005c 	andeq	r0, r0, ip, asr r0
    _tx_thread_initialize();
   4:	00000002 	andeq	r0, r0, r2
    _tx_timer_initialize();
   8:	00040000 	andeq	r0, r4, r0
	...
  14:	00000010 	andeq	r0, r0, r0, lsl r0
        if(ch == '\n' || it >= size) {
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000014 	andeq	r0, r0, r4, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	00000000 	andeq	r0, r0, r0
  34:	00000018 	andeq	r0, r0, r8, lsl r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	00000000 	andeq	r0, r0, r0
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
}
  40:	00000000 	andeq	r0, r0, r0
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	00000000 	andeq	r0, r0, r0
        status =  _tx_thread_create(&_tx_timer_thread,
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	10000800 	andne	r0, r0, r0, lsl #16
    } while (status != TX_SUCCESS);
  54:	00000024 	andeq	r0, r0, r4, lsr #32
	...
}
  60:	00000024 	andeq	r0, r0, r4, lsr #32
  64:	03d00002 	bicseq	r0, r0, #2
  68:	00040000 	andeq	r0, r4, r0
	...
  74:	00000010 	andeq	r0, r0, r0, lsl r0
  78:	10000824 	andne	r0, r0, r4, lsr #16
  7c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  88:	000000a4 	andeq	r0, r0, r4, lsr #1
  8c:	08b90002 	ldmeq	r9!, {r1}
  90:	00040000 	andeq	r0, r4, r0
	...
  9c:	00000008 	andeq	r0, r0, r8
  a0:	10000850 	andne	r0, r0, r0, asr r8
  a4:	00000002 	andeq	r0, r0, r2
  a8:	00000000 	andeq	r0, r0, r0
  ac:	0000000e 	andeq	r0, r0, lr
  b0:	10000852 	andne	r0, r0, r2, asr r8
  b4:	00000024 	andeq	r0, r0, r4, lsr #32
  b8:	10000876 	andne	r0, r0, r6, ror r8
  bc:	0000007e 	andeq	r0, r0, lr, ror r0
  c0:	100008f4 	strdne	r0, [r0], -r4
  c4:	00000138 	andeq	r0, r0, r8, lsr r1
  c8:	10000a2c 	andne	r0, r0, ip, lsr #20
  cc:	00000094 	muleq	r0, r4, r0
  d0:	10000ac0 	andne	r0, r0, r0, asr #21
  d4:	000000c6 	andeq	r0, r0, r6, asr #1
  d8:	10000b88 	andne	r0, r0, r8, lsl #23
  dc:	000003ea 	andeq	r0, r0, sl, ror #7
  e0:	10000f78 	andne	r0, r0, r8, ror pc
  e4:	00000396 	muleq	r0, r6, r3
  e8:	10001310 	andne	r1, r0, r0, lsl r3
  ec:	00000680 	andeq	r0, r0, r0, lsl #13
  f0:	10001990 	mulne	r0, r0, r9
  f4:	0000000c 	andeq	r0, r0, ip
  f8:	1000199c 	mulne	r0, ip, r9
  fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 100:	00000000 	andeq	r0, r0, r0
 104:	0000002c 	andeq	r0, r0, ip, lsr #32
 108:	00000000 	andeq	r0, r0, r0
 10c:	00000028 	andeq	r0, r0, r8, lsr #32
 110:	00000000 	andeq	r0, r0, r0
 114:	00000020 	andeq	r0, r0, r0, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 130:	00000044 	andeq	r0, r0, r4, asr #32
 134:	247e0002 	ldrbtcs	r0, [lr], #-2
 138:	00040000 	andeq	r0, r4, r0
 13c:	00000000 	andeq	r0, r0, r0
 140:	100019c8 	andne	r1, r0, r8, asr #19
 144:	00000014 	andeq	r0, r0, r4, lsl r0
 148:	00000000 	andeq	r0, r0, r0
 14c:	00000014 	andeq	r0, r0, r4, lsl r0
 150:	100019dc 	ldrdne	r1, [r0], -ip
 154:	0000001e 	andeq	r0, r0, lr, lsl r0
 158:	100019fc 	strdne	r1, [r0], -ip
 15c:	00000024 	andeq	r0, r0, r4, lsr #32
 160:	00000000 	andeq	r0, r0, r0
 164:	00000008 	andeq	r0, r0, r8
 168:	00000000 	andeq	r0, r0, r0
 16c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	26d10002 	ldrbcs	r0, [r1], r2
 180:	00040000 	andeq	r0, r4, r0
	...
 18c:	0000000c 	andeq	r0, r0, ip
	...
 198:	0000001c 	andeq	r0, r0, ip, lsl r0
 19c:	32990002 	addscc	r0, r9, #2
 1a0:	00040000 	andeq	r0, r4, r0
	...
 1ac:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1bc:	3bd00002 	blcc	ff4001cc <__RAM_segment_used_end__+0xc73001cc>
 1c0:	00040000 	andeq	r0, r4, r0
 1c4:	00000000 	andeq	r0, r0, r0
 1c8:	10001a20 	andne	r1, r0, r0, lsr #20
 1cc:	0000008c 	andeq	r0, r0, ip, lsl #1
	...
 1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1dc:	43290002 			; <UNDEFINED> instruction: 0x43290002
 1e0:	00040000 	andeq	r0, r4, r0
 1e4:	00000000 	andeq	r0, r0, r0
 1e8:	10001aac 	andne	r1, r0, ip, lsr #21
 1ec:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 1f8:	00000024 	andeq	r0, r0, r4, lsr #32
 1fc:	49f60002 	ldmibmi	r6!, {r1}^
 200:	00040000 	andeq	r0, r4, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	10001ac8 	andne	r1, r0, r8, asr #21
 20c:	00000328 	andeq	r0, r0, r8, lsr #6
 210:	00000000 	andeq	r0, r0, r0
 214:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 220:	0000001c 	andeq	r0, r0, ip, lsl r0
 224:	59c90002 	stmibpl	r9, {r1}^
 228:	00040000 	andeq	r0, r4, r0
 22c:	00000000 	andeq	r0, r0, r0
 230:	10001df0 	strdne	r1, [r0], -r0
 234:	0000017c 	andeq	r0, r0, ip, ror r1
	...
 240:	0000001c 	andeq	r0, r0, ip, lsl r0
 244:	64490002 	strbvs	r0, [r9], #-2
 248:	00040000 	andeq	r0, r4, r0
 24c:	00000000 	andeq	r0, r0, r0
 250:	10001f6c 	andne	r1, r0, ip, ror #30
 254:	00000018 	andeq	r0, r0, r8, lsl r0
	...
 260:	0000001c 	andeq	r0, r0, ip, lsl r0
 264:	6afe0002 	bvs	fff80274 <__RAM_segment_used_end__+0xc7e80274>
 268:	00040000 	andeq	r0, r4, r0
	...
 274:	00000090 	muleq	r0, r0, r0
	...
 280:	0000001c 	andeq	r0, r0, ip, lsl r0
 284:	74420002 	strbvc	r0, [r2], #-2
 288:	00040000 	andeq	r0, r4, r0
 28c:	00000000 	andeq	r0, r0, r0
 290:	10001f84 	andne	r1, r0, r4, lsl #31
 294:	0000002e 	andeq	r0, r0, lr, lsr #32
	...
 2a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2a4:	75e30002 	strbvc	r0, [r3, #2]!
 2a8:	00040000 	andeq	r0, r4, r0
 2ac:	00000000 	andeq	r0, r0, r0
 2b0:	10001fd4 	ldrdne	r1, [r0], -r4
 2b4:	00000070 	andeq	r0, r0, r0, ror r0
	...
 2c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2c4:	76090002 	strvc	r0, [r9], -r2
 2c8:	00040000 	andeq	r0, r4, r0
 2cc:	00000000 	andeq	r0, r0, r0
 2d0:	10002044 	andne	r2, r0, r4, asr #32
 2d4:	000000dc 	ldrdeq	r0, [r0], -ip
	...
 2e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e4:	762f0002 	strtvc	r0, [pc], -r2
 2e8:	00040000 	andeq	r0, r4, r0
 2ec:	00000000 	andeq	r0, r0, r0
 2f0:	10002120 	andne	r2, r0, r0, lsr #2
 2f4:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 300:	0000001c 	andeq	r0, r0, ip, lsl r0
 304:	76550002 	ldrbvc	r0, [r5], -r2
 308:	00040000 	andeq	r0, r4, r0
 30c:	00000000 	andeq	r0, r0, r0
 310:	100021f0 	strdne	r2, [r0], -r0
 314:	000000b8 	strheq	r0, [r0], -r8
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
{
   0:	00000001 	andeq	r0, r0, r1
    _tx_thread_initialize();
   4:	00000001 	andeq	r0, r0, r1
    _tx_timer_initialize();
   8:	00000001 	andeq	r0, r0, r1
   c:	00000001 	andeq	r0, r0, r1
  10:	00000001 	andeq	r0, r0, r1
  14:	00000001 	andeq	r0, r0, r1
        if(ch == '\n' || it >= size) {
  18:	00000001 	andeq	r0, r0, r1
}
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	00000001 	andeq	r0, r0, r1
  34:	00000001 	andeq	r0, r0, r1
        _tx_thread_system_ni_resume(thread_ptr);
  38:	00000001 	andeq	r0, r0, r1
  3c:	00000001 	andeq	r0, r0, r1
}
  40:	10000800 	andne	r0, r0, r0, lsl #16
  44:	10000824 	andne	r0, r0, r4, lsr #16
	...
        status =  _tx_thread_create(&_tx_timer_thread,
  50:	00000001 	andeq	r0, r0, r1
    } while (status != TX_SUCCESS);
  54:	00000001 	andeq	r0, r0, r1
}
  58:	10000824 	andne	r0, r0, r4, lsr #16
  5c:	10000850 	andne	r0, r0, r0, asr r8
	...
  68:	10000896 	mulne	r0, r6, r8
  6c:	10000898 	mulne	r0, r8, r8
  70:	1000089a 	mulne	r0, sl, r8
  74:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
	...
  80:	10000a4a 	andne	r0, r0, sl, asr #20
  84:	10000a64 	andne	r0, r0, r4, ror #20
  88:	10000a6c 	andne	r0, r0, ip, ror #20
  8c:	10000a70 	andne	r0, r0, r0, ror sl
  90:	10000a70 	andne	r0, r0, r0, ror sl
  94:	10000a9e 	mulne	r0, lr, sl
	...
  a0:	10000af6 	strdne	r0, [r0], -r6
  a4:	10000b18 	andne	r0, r0, r8, lsl fp
  a8:	10000b26 	andne	r0, r0, r6, lsr #22
  ac:	10000b2c 	andne	r0, r0, ip, lsr #22
  b0:	10000b2c 	andne	r0, r0, ip, lsr #22
  b4:	10000b54 	andne	r0, r0, r4, asr fp
	...
  c0:	10001324 	andne	r1, r0, r4, lsr #6
  c4:	10001326 	andne	r1, r0, r6, lsr #6
  c8:	100017d0 	ldrdne	r1, [r0], -r0
  cc:	10001842 	andne	r1, r0, r2, asr #16
	...
  d8:	100015a2 	andne	r1, r0, r2, lsr #11
  dc:	100015d4 	ldrdne	r1, [r0], -r4
  e0:	10001728 	andne	r1, r0, r8, lsr #14
  e4:	10001742 	andne	r1, r0, r2, asr #14
	...
  f0:	100015f2 	strdne	r1, [r0], -r2
  f4:	10001628 	andne	r1, r0, r8, lsr #12
  f8:	100016aa 	andne	r1, r0, sl, lsr #13
  fc:	100016c6 	andne	r1, r0, r6, asr #13
	...
 108:	10001630 	andne	r1, r0, r0, lsr r6
 10c:	1000166e 	andne	r1, r0, lr, ror #12
 110:	10001670 	andne	r1, r0, r0, ror r6
 114:	10001678 	andne	r1, r0, r8, ror r6
	...
 120:	00000001 	andeq	r0, r0, r1
 124:	00000001 	andeq	r0, r0, r1
 128:	10000850 	andne	r0, r0, r0, asr r8
 12c:	10000852 	andne	r0, r0, r2, asr r8
 130:	00000001 	andeq	r0, r0, r1
 134:	00000001 	andeq	r0, r0, r1
 138:	10000852 	andne	r0, r0, r2, asr r8
 13c:	10000876 	andne	r0, r0, r6, ror r8
 140:	10000876 	andne	r0, r0, r6, ror r8
 144:	100008f4 	strdne	r0, [r0], -r4
 148:	100008f4 	strdne	r0, [r0], -r4
 14c:	10000a2c 	andne	r0, r0, ip, lsr #20
 150:	10000a2c 	andne	r0, r0, ip, lsr #20
 154:	10000ac0 	andne	r0, r0, r0, asr #21
 158:	10000ac0 	andne	r0, r0, r0, asr #21
 15c:	10000b86 	andne	r0, r0, r6, lsl #23
 160:	10000b88 	andne	r0, r0, r8, lsl #23
 164:	10000f72 	andne	r0, r0, r2, ror pc
 168:	10000f78 	andne	r0, r0, r8, ror pc
 16c:	1000130e 	andne	r1, r0, lr, lsl #6
 170:	10001310 	andne	r1, r0, r0, lsl r3
 174:	10001990 	mulne	r0, r0, r9
 178:	10001990 	mulne	r0, r0, r9
 17c:	1000199c 	mulne	r0, ip, r9
 180:	1000199c 	mulne	r0, ip, r9
 184:	100019c8 	andne	r1, r0, r8, asr #19
 188:	00000001 	andeq	r0, r0, r1
 18c:	00000001 	andeq	r0, r0, r1
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
 198:	00000001 	andeq	r0, r0, r1
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
	...
 1b8:	100019c8 	andne	r1, r0, r8, asr #19
 1bc:	100019dc 	ldrdne	r1, [r0], -ip
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	100019dc 	ldrdne	r1, [r0], -ip
 1cc:	100019fa 	strdne	r1, [r0], -sl
 1d0:	100019fc 	strdne	r1, [r0], -ip
 1d4:	10001a20 	andne	r1, r0, r0, lsr #20
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
 1e0:	00000001 	andeq	r0, r0, r1
 1e4:	00000001 	andeq	r0, r0, r1
	...
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
	...
 200:	00000001 	andeq	r0, r0, r1
 204:	00000001 	andeq	r0, r0, r1
	...
 210:	10001a30 	andne	r1, r0, r0, lsr sl
 214:	10001a36 	andne	r1, r0, r6, lsr sl
 218:	10001a80 	andne	r1, r0, r0, lsl #21
 21c:	10001a84 	andne	r1, r0, r4, lsl #21
	...
 228:	10001a20 	andne	r1, r0, r0, lsr #20
 22c:	10001aac 	andne	r1, r0, ip, lsr #21
	...
 238:	10001aac 	andne	r1, r0, ip, lsr #21
 23c:	10001ac8 	andne	r1, r0, r8, asr #21
	...
 248:	10001ad6 	ldrdne	r1, [r0], -r6
 24c:	10001aea 	andne	r1, r0, sl, ror #21
 250:	10001b26 	andne	r1, r0, r6, lsr #22
 254:	10001b86 	andne	r1, r0, r6, lsl #23
	...
 260:	10001c0a 	andne	r1, r0, sl, lsl #24
 264:	10001c1e 	andne	r1, r0, lr, lsl ip
 268:	10001c7c 	andne	r1, r0, ip, ror ip
 26c:	10001cdc 	ldrdne	r1, [r0], -ip
	...
 278:	10001d18 	andne	r1, r0, r8, lsl sp
 27c:	10001d2c 	andne	r1, r0, ip, lsr #26
 280:	10001d90 	mulne	r0, r0, sp
 284:	10001df0 	strdne	r1, [r0], -r0
	...
 290:	10001ac8 	andne	r1, r0, r8, asr #21
 294:	10001df0 	strdne	r1, [r0], -r0
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
	...
 2a8:	10001df6 	strdne	r1, [r0], -r6
 2ac:	10001e0a 	andne	r1, r0, sl, lsl #28
 2b0:	10001e22 	andne	r1, r0, r2, lsr #28
 2b4:	10001e82 	andne	r1, r0, r2, lsl #29
	...
 2c0:	10001e1c 	andne	r1, r0, ip, lsl lr
 2c4:	10001e20 	andne	r1, r0, r0, lsr #28
 2c8:	10001e82 	andne	r1, r0, r2, lsl #29
 2cc:	10001e86 	andne	r1, r0, r6, lsl #29
 2d0:	10001e9e 	mulne	r0, lr, lr
 2d4:	10001ea2 	andne	r1, r0, r2, lsr #29
 2d8:	10001ea4 	andne	r1, r0, r4, lsr #29
 2dc:	10001ea8 	andne	r1, r0, r8, lsr #29
 2e0:	10001ece 	andne	r1, r0, lr, asr #29
 2e4:	10001ed2 	ldrdne	r1, [r0], -r2
	...
 2f0:	10001ed6 	ldrdne	r1, [r0], -r6
 2f4:	10001ee8 	andne	r1, r0, r8, ror #29
 2f8:	10001eea 	andne	r1, r0, sl, ror #29
 2fc:	10001f6c 	andne	r1, r0, ip, ror #30
	...
 308:	10001df0 	strdne	r1, [r0], -r0
 30c:	10001f6c 	andne	r1, r0, ip, ror #30
	...
 318:	10001f6c 	andne	r1, r0, ip, ror #30
 31c:	10001f84 	andne	r1, r0, r4, lsl #31
	...
 328:	00000001 	andeq	r0, r0, r1
 32c:	00000001 	andeq	r0, r0, r1
	...
 338:	10001f84 	andne	r1, r0, r4, lsl #31
 33c:	10001fb2 			; <UNDEFINED> instruction: 0x10001fb2
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
{
       0:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    _tx_thread_initialize();
       4:	00ae0003 	adceq	r0, lr, r3
    _tx_timer_initialize();
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	2f2e2e00 	svccs	0x002e2e00
      2c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	636e492f 	cmnvs	lr, #770048	; 0xbc000
      34:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
        _tx_thread_system_ni_resume(thread_ptr);
      38:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      3c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
}
      40:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      44:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      48:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
        status =  _tx_thread_create(&_tx_timer_thread,
      4c:	5f6d7261 	svcpl	0x006d7261
      50:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    } while (status != TX_SUCCESS);
      54:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
}
      58:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      5c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      60:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      64:	30312d69 	eorscc	r2, r1, r9, ror #26
      68:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      6c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      70:	615c3031 	cmpvs	ip, r1, lsr r0
      74:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      78:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      7c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      80:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      84:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      88:	616d0000 	cmnvs	sp, r0
      8c:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      90:	00000100 	andeq	r0, r0, r0, lsl #2
      94:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
      98:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      9c:	74730000 	ldrbtvc	r0, [r3], #-0
      a0:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
      a4:	00030068 	andeq	r0, r3, r8, rrx
      a8:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
      ac:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
      b0:	003e6e69 	eorseq	r6, lr, r9, ror #28
      b4:	00000000 	andeq	r0, r0, r0
      b8:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
      bc:	00000002 	andeq	r0, r0, r2
      c0:	05051800 	streq	r1, [r5, #-2048]	; 0xfffff800
      c4:	06010521 	streq	r0, [r1], -r1, lsr #10
      c8:	0004023d 	andeq	r0, r4, sp, lsr r2
      cc:	1c050101 	stfnes	f0, [r5], {1}
      d0:	00020500 	andeq	r0, r2, r0, lsl #10
      d4:	03000000 	movweq	r0, #0
      d8:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
      dc:	06010521 	streq	r0, [r1], -r1, lsr #10
      e0:	0004023d 	andeq	r0, r4, sp, lsr r2
      e4:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
      e8:	00020500 	andeq	r0, r2, r0, lsl #10
      ec:	03000000 	movweq	r0, #0
      f0:	0505010e 	streq	r0, [r5, #-270]	; 0xfffffef2
      f4:	06010521 	streq	r0, [r1], -r1, lsr #10
      f8:	0005024b 	andeq	r0, r5, fp, asr #4
      fc:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     100:	00020500 	andeq	r0, r2, r0, lsl #10
     104:	03000000 	movweq	r0, #0
     108:	05050112 	streq	r0, [r5, #-274]	; 0xfffffeee
     10c:	01054b21 	tsteq	r5, r1, lsr #22
     110:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     114:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     118:	02050012 	andeq	r0, r5, #18
     11c:	00000000 	andeq	r0, r0, r0
     120:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
     124:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     128:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     12c:	01010005 	tsteq	r1, r5
     130:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     134:	00000002 	andeq	r0, r0, r2
     138:	011c0300 	tsteq	ip, r0, lsl #6
     13c:	4b210505 	blmi	841558 <SYSTEM_CLOCK+0x2887d8>
     140:	2f060105 	svccs	0x00060105
     144:	01000502 	tsteq	r0, r2, lsl #10
     148:	00120501 	andseq	r0, r2, r1, lsl #10
     14c:	00000205 	andeq	r0, r0, r5, lsl #4
     150:	21030000 	mrscs	r0, (UNDEF: 3)
     154:	21050501 	tstcs	r5, r1, lsl #10
     158:	0601054b 	streq	r0, [r1], -fp, asr #10
     15c:	0005022f 	andeq	r0, r5, pc, lsr #4
     160:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     164:	00020500 	andeq	r0, r2, r0, lsl #10
     168:	03000000 	movweq	r0, #0
     16c:	05050126 	streq	r0, [r5, #-294]	; 0xfffffeda
     170:	01054b21 	tsteq	r5, r1, lsr #22
     174:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     178:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     17c:	02050010 	andeq	r0, r5, #16
     180:	10000800 	andne	r0, r0, r0, lsl #16
     184:	05013303 	streq	r3, [r1, #-771]	; 0xfffffcfd
     188:	30132105 	andscc	r2, r3, r5, lsl #2
     18c:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
     190:	0005050e 	andeq	r0, r5, lr, lsl #10
     194:	06010402 	streq	r0, [r1], -r2, lsl #8
     198:	00090526 	andeq	r0, r9, r6, lsr #10
     19c:	13010402 	movwne	r0, #5122	; 0x1402
     1a0:	01040200 	mrseq	r0, R12_usr
     1a4:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     1a8:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     1ac:	0402000b 	streq	r0, [r2], #-11
     1b0:	053a0601 	ldreq	r0, [sl, #-1537]!	; 0xfffff9ff
     1b4:	04020009 	streq	r0, [r2], #-9
     1b8:	02140601 	andseq	r0, r4, #1048576	; 0x100000
     1bc:	01010006 	tsteq	r1, r6
     1c0:	000001d1 	ldrdeq	r0, [r0], -r1
     1c4:	01810003 	orreq	r0, r1, r3
     1c8:	01020000 	mrseq	r0, (UNDEF: 2)
     1cc:	000d0efb 	strdeq	r0, [sp], -fp
     1d0:	01010101 	tsteq	r1, r1, lsl #2
     1d4:	01000000 	mrseq	r0, (UNDEF: 0)
     1d8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     1dc:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     1e0:	6163696c 	cmnvs	r3, ip, ror #18
     1e4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1e8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     1ec:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     1f0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     1f4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     1f8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     1fc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     200:	5f6d7261 	svcpl	0x006d7261
     204:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     208:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     20c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     210:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     214:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     218:	30312d69 	eorscc	r2, r1, r9, ror #26
     21c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     220:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     224:	615c3031 	cmpvs	ip, r1, lsr r0
     228:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     22c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     230:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     234:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     238:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     23c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     240:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     244:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     248:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     24c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     250:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     254:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     258:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     25c:	5f6d7261 	svcpl	0x006d7261
     260:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     264:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     268:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     26c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     270:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     274:	30312d69 	eorscc	r2, r1, r9, ror #26
     278:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     27c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     280:	615c3031 	cmpvs	ip, r1, lsr r0
     284:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     288:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     28c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     290:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     294:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     298:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     29c:	2f2e2e00 	svccs	0x002e2e00
     2a0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     2a4:	2f737265 	svccs	0x00737265
     2a8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     2ac:	2f355f53 	svccs	0x00355f53
     2b0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     2b4:	6f432f53 	svcvs	0x00432f53
     2b8:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     2bc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     2c0:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     2c4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     2c8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     2cc:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     2d0:	5f534953 	svcpl	0x00534953
     2d4:	65442f35 	strbvs	r2, [r4, #-3893]	; 0xfffff0cb
     2d8:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     2dc:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     2e0:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     2e4:	33334d43 	teqcc	r3, #4288	; 0x10c0
     2e8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     2ec:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     2f0:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     2f4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     2f8:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     2fc:	33334d43 	teqcc	r3, #4288	; 0x10c0
     300:	0100632e 	tsteq	r0, lr, lsr #6
     304:	645f0000 	ldrbvs	r0, [pc], #-0	; 30c <__STACKSEAL_SIZE+0x30c>
     308:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     30c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 314 <__STACKSEAL_SIZE+0x314>
     310:	73657079 	cmnvc	r5, #121	; 0x79
     314:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     318:	735f0000 	cmpvc	pc, #0
     31c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     320:	00682e74 	rsbeq	r2, r8, r4, ror lr
     324:	63000003 	movwvs	r0, #3
     328:	5f65726f 	svcpl	0x0065726f
     32c:	33336d63 	teqcc	r3, #6336	; 0x18c0
     330:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     334:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     338:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     33c:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     340:	33334d43 	teqcc	r3, #4288	; 0x10c0
     344:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     348:	05000000 	streq	r0, [r0, #-0]
     34c:	02050001 	andeq	r0, r5, #1
     350:	00000000 	andeq	r0, r0, r0
     354:	0100c403 	tsteq	r0, r3, lsl #8
     358:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     35c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     360:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
     364:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     368:	02050001 	andeq	r0, r5, #1
     36c:	10000824 	andne	r0, r0, r4, lsr #16
     370:	0100cc03 	tsteq	r0, r3, lsl #24
     374:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
     378:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     37c:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
     380:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     384:	0c030603 	stceq	6, cr0, [r3], {3}
     388:	06130566 	ldreq	r0, [r3], -r6, ror #10
     38c:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
     390:	01000a02 	tsteq	r0, r2, lsl #20
     394:	00120d01 	andseq	r0, r2, r1, lsl #26
     398:	a1000300 	mrsge	r0, LR_irq
     39c:	02000001 	andeq	r0, r0, #1
     3a0:	0d0efb01 	vstreq	d15, [lr, #-4]
     3a4:	01010100 	mrseq	r0, (UNDEF: 17)
     3a8:	00000001 	andeq	r0, r0, r1
     3ac:	01000001 	tsteq	r0, r1
     3b0:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     3b4:	2f65726f 	svccs	0x0065726f
     3b8:	00637253 	rsbeq	r7, r3, r3, asr r2
     3bc:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     3c0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     3c4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     3c8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     3cc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     3d0:	615c6d61 	cmpvs	ip, r1, ror #26
     3d4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     3d8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     3dc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     3e0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     3e4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     3e8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     3ec:	2e30312d 	rsfcssp	f3, f0, #5.0
     3f0:	30322d33 	eorscc	r2, r2, r3, lsr sp
     3f4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     3f8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     3fc:	6f6e2d6d 	svcvs	0x006e2d6d
     400:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     404:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     408:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     40c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     410:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     414:	00656e69 	rsbeq	r6, r5, r9, ror #28
     418:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     41c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     420:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     424:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     428:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     42c:	615c6d61 	cmpvs	ip, r1, ror #26
     430:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     434:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     438:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     43c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     440:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     444:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     448:	2e30312d 	rsfcssp	f3, f0, #5.0
     44c:	30322d33 	eorscc	r2, r2, r3, lsr sp
     450:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     454:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     458:	6f6e2d6d 	svcvs	0x006e2d6d
     45c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     460:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     464:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     468:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     46c:	00737973 	rsbseq	r7, r3, r3, ror r9
     470:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     474:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     478:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     47c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     480:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     484:	615c6d61 	cmpvs	ip, r1, ror #26
     488:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     48c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     490:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     494:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     498:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     49c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4a0:	2e30312d 	rsfcssp	f3, f0, #5.0
     4a4:	30322d33 	eorscc	r2, r2, r3, lsr sp
     4a8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     4ac:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
     4b0:	63675c62 	cmnvs	r7, #25088	; 0x6200
     4b4:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
     4b8:	6f6e2d6d 	svcvs	0x006e2d6d
     4bc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     4c0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     4c4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     4c8:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
     4cc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     4d0:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     4d4:	6f432f2e 	svcvs	0x00432f2e
     4d8:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     4dc:	0000636e 	andeq	r6, r0, lr, ror #6
     4e0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     4e4:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     4e8:	00000100 	andeq	r0, r0, r0, lsl #2
     4ec:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     4f0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     4f4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     4f8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     4fc:	00000200 	andeq	r0, r0, r0, lsl #4
     500:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     504:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     508:	00030068 	andeq	r0, r3, r8, rrx
     50c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     510:	2e677261 	cdpcs	2, 6, cr7, cr7, cr1, {3}
     514:	00040068 	andeq	r0, r4, r8, rrx
     518:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     51c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     520:	00040068 	andeq	r0, r4, r8, rrx
     524:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
     528:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     52c:	003e6e69 	eorseq	r6, lr, r9, ror #28
     530:	70000000 	andvc	r0, r0, r0
     534:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     538:	00682e66 	rsbeq	r2, r8, r6, ror #28
     53c:	00000005 	andeq	r0, r0, r5
     540:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     544:	00000002 	andeq	r0, r0, r2
     548:	01850300 	orreq	r0, r5, r0, lsl #6
     54c:	13030501 	movwne	r0, #13569	; 0x3501
     550:	01060605 	tsteq	r6, r5, lsl #12
     554:	2f060505 	svccs	0x00060505
     558:	01061a05 	tsteq	r6, r5, lsl #20
     55c:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
     560:	01010001 	tsteq	r1, r1
     564:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     568:	00085002 	andeq	r5, r8, r2
     56c:	018e0310 	orreq	r0, lr, r0, lsl r3
     570:	13030501 	movwne	r0, #13569	; 0x3501
     574:	05011405 	streq	r1, [r1, #-1029]	; 0xfffffbfb
     578:	2d050122 	stfcss	f0, [r5, #-136]	; 0xffffff78
     57c:	06010501 	streq	r0, [r1], -r1, lsl #10
     580:	00010213 	andeq	r0, r1, r3, lsl r2
     584:	01050101 	tsteq	r5, r1, lsl #2
     588:	00020500 	andeq	r0, r2, r0, lsl #10
     58c:	03000000 	movweq	r0, #0
     590:	0501019f 	streq	r0, [r1, #-415]	; 0xfffffe61
     594:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
     598:	13030501 	movwne	r0, #13569	; 0x3501
     59c:	01060605 	tsteq	r6, r5, lsl #12
     5a0:	051e0105 	ldreq	r0, [lr, #-261]	; 0xfffffefb
     5a4:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
     5a8:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     5ac:	05202006 	streq	r2, [r0, #-6]!
     5b0:	02202201 	eoreq	r2, r0, #268435456	; 0x10000000
     5b4:	01010001 	tsteq	r1, r1
     5b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     5bc:	00085202 	andeq	r5, r8, r2, lsl #4
     5c0:	01bc0310 			; <UNDEFINED> instruction: 0x01bc0310
     5c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     5c8:	13210603 			; <UNDEFINED> instruction: 0x13210603
     5cc:	11061005 	tstne	r6, r5
     5d0:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
     5d4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     5d8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     5dc:	22052e2a 	andcs	r2, r5, #672	; 0x2a0
     5e0:	2011052e 	andscs	r0, r1, lr, lsr #10
     5e4:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
     5e8:	051f0609 	ldreq	r0, [pc, #-1545]	; ffffffe7 <__RAM_segment_used_end__+0xc7efffe7>
     5ec:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
     5f0:	1405200a 	strne	r2, [r5], #-10
     5f4:	20760306 	rsbscs	r0, r6, r6, lsl #6
     5f8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     5fc:	20010616 	andcs	r0, r1, r6, lsl r6
     600:	1a090520 	bne	241a88 <__RAM_SIZE+0x141a88>
     604:	31060305 	tstcc	r6, r5, lsl #6
     608:	13060105 	movwne	r0, #24837	; 0x6105
     60c:	01000102 	tsteq	r0, r2, lsl #2
     610:	00010501 	andeq	r0, r1, r1, lsl #10
     614:	08760205 	ldmdaeq	r6!, {r0, r2, r9}^
     618:	c7031000 	strgt	r1, [r3, -r0]
     61c:	01060101 	tsteq	r6, r1, lsl #2
     620:	bb060305 	bllt	18123c <__RAM_SIZE+0x8123c>
     624:	06060515 			; <UNDEFINED> instruction: 0x06060515
     628:	11052001 	tstne	r5, r1
     62c:	001a053d 	andseq	r0, sl, sp, lsr r5
     630:	06010402 	streq	r0, [r1], -r2, lsl #8
     634:	0005052e 	andeq	r0, r5, lr, lsr #10
     638:	06010402 	streq	r0, [r1], -r2, lsl #8
     63c:	00070501 	andeq	r0, r7, r1, lsl #10
     640:	06030402 	streq	r0, [r3], -r2, lsl #8
     644:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     648:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
     64c:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     650:	05490603 	strbeq	r0, [r9, #-1539]	; 0xfffff9fd
     654:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     658:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     65c:	04020007 	streq	r0, [r2], #-7
     660:	02002f03 	andeq	r2, r0, #3, 30
     664:	002e0304 	eoreq	r0, lr, r4, lsl #6
     668:	3c030402 	cfstrscc	mvf0, [r3], {2}
     66c:	18060505 	stmdane	r6, {r0, r2, r8, sl}
     670:	052e2006 	streq	r2, [lr, #-6]!
     674:	05650609 	strbeq	r0, [r5, #-1545]!	; 0xfffff9f7
     678:	06053303 	streq	r3, [r5], -r3, lsl #6
     67c:	01050106 	tsteq	r5, r6, lsl #2
     680:	060b0551 			; <UNDEFINED> instruction: 0x060b0551
     684:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
     688:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     68c:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
     690:	20062f06 	andcs	r2, r6, r6, lsl #30
     694:	01000602 	tsteq	r0, r2, lsl #12
     698:	00010501 	andeq	r0, r1, r1, lsl #10
     69c:	08f40205 	ldmeq	r4!, {r0, r2, r9}^
     6a0:	e3031000 	movw	r1, #12288	; 0x3000
     6a4:	01060101 	tsteq	r6, r1, lsl #2
     6a8:	ca060305 	bgt	1812c4 <__RAM_SIZE+0x812c4>
     6ac:	01060605 	tsteq	r6, r5, lsl #12
     6b0:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     6b4:	01060805 	tsteq	r6, r5, lsl #16
     6b8:	02000f05 	andeq	r0, r0, #5, 30
     6bc:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     6c0:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     6c4:	37053c02 	strcc	r3, [r5, -r2, lsl #24]
     6c8:	03040200 	movweq	r0, #16896	; 0x4200
     6cc:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     6d0:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
     6d4:	07052001 	streq	r2, [r5, -r1]
     6d8:	12052306 	andne	r2, r5, #402653184	; 0x18000000
     6dc:	0e050106 	adfeqs	f0, f5, f6
     6e0:	060b054a 	streq	r0, [fp], -sl, asr #10
     6e4:	0019051f 	andseq	r0, r9, pc, lsl r5
     6e8:	06010402 	streq	r0, [r1], -r2, lsl #8
     6ec:	060b052e 	streq	r0, [fp], -lr, lsr #10
     6f0:	00240531 	eoreq	r0, r4, r1, lsr r5
     6f4:	06010402 	streq	r0, [r1], -r2, lsl #8
     6f8:	0035053c 	eorseq	r0, r5, ip, lsr r5
     6fc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     700:	2f060705 	svccs	0x00060705
     704:	01061205 	tsteq	r6, r5, lsl #4
     708:	204a0e05 	subcs	r0, sl, r5, lsl #28
     70c:	25060305 	strcs	r0, [r6, #-773]	; 0xfffffcfb
     710:	01060605 	tsteq	r6, r5, lsl #12
     714:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     718:	01060805 	tsteq	r6, r5, lsl #16
     71c:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     720:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     724:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
     728:	3d052002 	stccc	0, cr2, [r5, #-8]
     72c:	03040200 	movweq	r0, #16896	; 0x4200
     730:	0605052e 	streq	r0, [r5], -lr, lsr #10
     734:	06080534 			; <UNDEFINED> instruction: 0x06080534
     738:	060a0501 	streq	r0, [sl], -r1, lsl #10
     73c:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     740:	060a0501 	streq	r0, [sl], -r1, lsl #10
     744:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     748:	06050501 	streq	r0, [r5], -r1, lsl #10
     74c:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
     750:	06070501 	streq	r0, [r7], -r1, lsl #10
     754:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     758:	4a0e0501 	bmi	381b64 <__RAM_SIZE+0x281b64>
     75c:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
     760:	01060605 	tsteq	r6, r5, lsl #12
     764:	2f060505 	svccs	0x00060505
     768:	01060805 	tsteq	r6, r5, lsl #16
     76c:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     770:	01061205 	tsteq	r6, r5, lsl #4
     774:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     778:	0a030603 	beq	c1f8c <SYSTICK_CYCLES+0xb352d>
     77c:	060a0520 	streq	r0, [sl], -r0, lsr #10
     780:	67010501 	strvs	r0, [r1, -r1, lsl #10]
     784:	03060705 	movweq	r0, #26373	; 0x6705
     788:	05133c60 	ldreq	r3, [r3, #-3168]	; 0xfffff3a0
     78c:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
     790:	02000f05 	andeq	r0, r0, #5, 30
     794:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     798:	09053b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp}
     79c:	0c053006 	stceq	0, cr3, [r5], {6}
     7a0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     7a4:	17051e0a 	strne	r1, [r5, -sl, lsl #28]
     7a8:	01040200 	mrseq	r0, R12_usr
     7ac:	00350533 	eorseq	r0, r5, r3, lsr r5
     7b0:	3c020402 	cfstrscc	mvf0, [r2], {2}
     7b4:	2f060705 	svccs	0x00060705
     7b8:	01061205 	tsteq	r6, r5, lsl #4
     7bc:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     7c0:	1c052012 	stcne	0, cr2, [r5], {18}
     7c4:	01040200 	mrseq	r0, R12_usr
     7c8:	00390522 	eorseq	r0, r9, r2, lsr #10
     7cc:	3c020402 	cfstrscc	mvf0, [r2], {2}
     7d0:	2f060705 	svccs	0x00060705
     7d4:	01061205 	tsteq	r6, r5, lsl #4
     7d8:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     7dc:	1b052012 	blne	14882c <__RAM_SIZE+0x4882c>
     7e0:	01040200 	mrseq	r0, R12_usr
     7e4:	06070522 	streq	r0, [r7], -r2, lsr #10
     7e8:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     7ec:	4a0e0501 	bmi	381bf8 <__RAM_SIZE+0x281bf8>
     7f0:	060a0520 	streq	r0, [sl], -r0, lsr #10
     7f4:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
     7f8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     7fc:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     800:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     804:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     808:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
     80c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     810:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     814:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     818:	02204a0e 	eoreq	r4, r0, #57344	; 0xe000
     81c:	01010001 	tsteq	r1, r1
     820:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     824:	000a2c02 	andeq	r2, sl, r2, lsl #24
     828:	02990310 	addseq	r0, r9, #16, 6	; 0x40000000
     82c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     830:	13590603 	cmpne	r9, #3145728	; 0x300000
     834:	06060515 			; <UNDEFINED> instruction: 0x06060515
     838:	06050501 	streq	r0, [r5], -r1, lsl #10
     83c:	060b0521 	streq	r0, [fp], -r1, lsr #10
     840:	06030501 	streq	r0, [r3], -r1, lsl #10
     844:	06060532 			; <UNDEFINED> instruction: 0x06060532
     848:	00220501 	eoreq	r0, r2, r1, lsl #10
     84c:	3c010402 	cfstrscc	mvf0, [r1], {2}
     850:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     854:	004d0104 	subeq	r0, sp, r4, lsl #2
     858:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     85c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     860:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     864:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     868:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     86c:	08040200 	stmdaeq	r4, {r9}
     870:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     874:	08040200 	stmdaeq	r4, {r9}
     878:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     87c:	002e0804 	eoreq	r0, lr, r4, lsl #16
     880:	06080402 	streq	r0, [r8], -r2, lsl #8
     884:	00050513 	andeq	r0, r5, r3, lsl r5
     888:	06080402 	streq	r0, [r8], -r2, lsl #8
     88c:	00140501 	andseq	r0, r4, r1, lsl #10
     890:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     894:	052c0e05 	streq	r0, [ip, #-3589]!	; 0xfffff1fb
     898:	0520210d 	streq	r2, [r0, #-269]!	; 0xfffffef3
     89c:	050f0605 	streq	r0, [pc, #-1541]	; 29f <__STACKSEAL_SIZE+0x29f>
     8a0:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     8a4:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     8a8:	0607054a 	streq	r0, [r7], -sl, asr #10
     8ac:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     8b0:	00550501 	subseq	r0, r5, r1, lsl #10
     8b4:	3c020402 	cfstrscc	mvf0, [r2], {2}
     8b8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     8bc:	02002007 	andeq	r2, r0, #7
     8c0:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     8c4:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     8c8:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     8cc:	0a052e58 	beq	14c234 <__RAM_SIZE+0x4c234>
     8d0:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     8d4:	10030603 	andne	r0, r3, r3, lsl #12
     8d8:	060a0520 	streq	r0, [sl], -r0, lsr #10
     8dc:	d7010501 	strle	r0, [r1, -r1, lsl #10]
     8e0:	0101002e 	tsteq	r1, lr, lsr #32
     8e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8e8:	000ac002 	andeq	ip, sl, r2
     8ec:	02b20310 	adcseq	r0, r2, #16, 6	; 0x40000000
     8f0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     8f4:	13d70603 	bicsne	r0, r7, #3145728	; 0x300000
     8f8:	06060515 			; <UNDEFINED> instruction: 0x06060515
     8fc:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     900:	0b052106 	bleq	148d20 <__RAM_SIZE+0x48d20>
     904:	03050106 	movweq	r0, #20742	; 0x5106
     908:	06053206 	streq	r3, [r5], -r6, lsl #4
     90c:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     910:	01040200 	mrseq	r0, R12_usr
     914:	0012053c 	andseq	r0, r2, ip, lsr r5
     918:	5b010402 	blpl	41928 <SYSTICK_CYCLES+0x32ec9>
     91c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     920:	053c0804 	ldreq	r0, [ip, #-2052]!	; 0xfffff7fc
     924:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     928:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     92c:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     930:	04020007 	streq	r0, [r2], #-7
     934:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
     938:	0402000d 	streq	r0, [r2], #-13
     93c:	00010608 	andeq	r0, r1, r8, lsl #12
     940:	66080402 	strvs	r0, [r8], -r2, lsl #8
     944:	08040200 	stmdaeq	r4, {r9}
     948:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     94c:	08040200 	stmdaeq	r4, {r9}
     950:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     954:	01040200 	mrseq	r0, R12_usr
     958:	3a0e054a 	bcc	381e88 <__RAM_SIZE+0x281e88>
     95c:	2e210d05 	cdpcs	13, 2, cr0, cr1, cr5, {0}
     960:	0f060505 	svceq	0x00060505
     964:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
     968:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     96c:	07056612 	smladeq	r5, r2, r6, r6
     970:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     974:	55050106 	strpl	r0, [r5, #-262]	; 0xfffffefa
     978:	02040200 	andeq	r0, r4, #0, 4
     97c:	02003c2e 	andeq	r3, r0, #11776	; 0x2e00
     980:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     984:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     988:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     98c:	0a052e3c 	beq	14c284 <__RAM_SIZE+0x4c284>
     990:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     994:	10030603 	andne	r0, r3, r3, lsl #12
     998:	060a052e 	streq	r0, [sl], -lr, lsr #10
     99c:	08010501 	stmdaeq	r1, {r0, r8, sl}
     9a0:	01003c3d 	tsteq	r0, sp, lsr ip
     9a4:	00010501 	andeq	r0, r1, r1, lsl #10
     9a8:	0b880205 	bleq	fe2011c4 <__RAM_segment_used_end__+0xc61011c4>
     9ac:	d3031000 	movwle	r1, #12288	; 0x3000
     9b0:	01060103 	tsteq	r6, r3, lsl #2
     9b4:	92060305 	andls	r0, r6, #335544320	; 0x14000000
     9b8:	01060605 	tsteq	r6, r5, lsl #12
     9bc:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
     9c0:	02001805 	andeq	r1, r0, #327680	; 0x50000
     9c4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     9c8:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
     9cc:	03059e02 	movweq	r9, #24066	; 0x5e02
     9d0:	0513b106 	ldreq	fp, [r3, #-262]	; 0xfffffefa
     9d4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     9d8:	05cd0603 	strbeq	r0, [sp, #1539]	; 0x603
     9dc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     9e0:	0305590a 	movweq	r5, #22794	; 0x590a
     9e4:	13173306 	tstne	r7, #402653184	; 0x18000000
     9e8:	3c060e05 	stccc	14, cr0, [r6], {5}
     9ec:	2f060305 	svccs	0x00060305
     9f0:	01061405 	tsteq	r6, r5, lsl #8
     9f4:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
     9f8:	055a0603 	ldrbeq	r0, [sl, #-1539]	; 0xfffff9fd
     9fc:	2e01062d 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx13
     a00:	5826052e 	stmdapl	r6!, {r1, r2, r3, r5, r8, sl}
     a04:	05744b05 	ldrbeq	r4, [r4, #-2821]!	; 0xfffff4fb
     a08:	41056652 	tstmi	r5, r2, asr r6
     a0c:	4a070574 	bmi	1c1fe4 <__RAM_SIZE+0xc1fe4>
     a10:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
     a14:	01061705 	tsteq	r6, r5, lsl #14
     a18:	742b052e 	strtvc	r0, [fp], #-1326	; 0xfffffad2
     a1c:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
     a20:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     a24:	4a01061c 	bmi	4229c <SYSTICK_CYCLES+0x3383d>
     a28:	05583705 	ldrbeq	r3, [r8, #-1797]	; 0xfffff8fb
     a2c:	03059e10 	movweq	r9, #24080	; 0x5e10
     a30:	10056706 	andne	r6, r5, r6, lsl #14
     a34:	03050106 	movweq	r0, #20742	; 0x5106
     a38:	1c056706 	stcne	7, cr6, [r5], {6}
     a3c:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     a40:	0603052e 	streq	r0, [r3], -lr, lsr #10
     a44:	06130584 	ldreq	r0, [r3], -r4, lsl #11
     a48:	1c053c01 	stcne	12, cr3, [r5], {1}
     a4c:	3c058258 	sfmcc	f0, 1, [r5], {88}	; 0x58
     a50:	66370520 	ldrtvs	r0, [r7], -r0, lsr #10
     a54:	05663105 	strbeq	r3, [r6, #-261]!	; 0xfffffefb
     a58:	26054a2b 	strcs	r4, [r5], -fp, lsr #20
     a5c:	66200566 	strtvs	r0, [r0], -r6, ror #10
     a60:	05661705 	strbeq	r1, [r6, #-1797]!	; 0xfffff8fb
     a64:	0a054a0f 	beq	1532a8 <__RAM_SIZE+0x532a8>
     a68:	0603054a 	streq	r0, [r3], -sl, asr #10
     a6c:	06060584 	streq	r0, [r6], -r4, lsl #11
     a70:	06050501 	streq	r0, [r5], -r1, lsl #10
     a74:	060b0559 			; <UNDEFINED> instruction: 0x060b0559
     a78:	06050501 	streq	r0, [r5], -r1, lsl #10
     a7c:	060c0521 	streq	r0, [ip], -r1, lsr #10
     a80:	06030501 	streq	r0, [r3], -r1, lsl #10
     a84:	062b0586 	strteq	r0, [fp], -r6, lsl #11
     a88:	2e440501 	cdpcs	5, 4, cr0, cr4, cr1, {0}
     a8c:	0003052e 	andeq	r0, r3, lr, lsr #10
     a90:	06040402 	streq	r0, [r4], -r2, lsl #8
     a94:	00060523 	andeq	r0, r6, r3, lsr #10
     a98:	06040402 	streq	r0, [r4], -r2, lsl #8
     a9c:	06050501 	streq	r0, [r5], -r1, lsl #10
     aa0:	0608054c 	streq	r0, [r8], -ip, asr #10
     aa4:	00190501 	andseq	r0, r9, r1, lsl #10
     aa8:	ac010402 	cfstrsge	mvf0, [r1], {2}
     aac:	91060705 	tstls	r6, r5, lsl #14
     ab0:	01060a05 	tsteq	r6, r5, lsl #20
     ab4:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     ab8:	01062505 	tsteq	r6, r5, lsl #10
     abc:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
     ac0:	03060505 	movweq	r0, #25861	; 0x6505
     ac4:	0c052051 	stceq	0, cr2, [r5], {81}	; 0x51
     ac8:	01050106 	tsteq	r5, r6, lsl #2
     acc:	f200e403 	vshl.s8	d14, d3, d0
     ad0:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     ad4:	2e7fa203 	cdpcs	2, 7, cr10, cr15, cr3, {0}
     ad8:	01060b05 	tsteq	r6, r5, lsl #22
     adc:	0344059e 	movteq	r0, #17822	; 0x459e
     ae0:	05202022 	streq	r2, [r0, #-34]!	; 0xffffffde
     ae4:	200a030e 	andcs	r0, sl, lr, lsl #6
     ae8:	30060705 	andcc	r0, r6, r5, lsl #14
     aec:	01060d05 	tsteq	r6, r5, lsl #26
     af0:	4c060705 	stcmi	7, cr0, [r6], {5}
     af4:	06100513 			; <UNDEFINED> instruction: 0x06100513
     af8:	03052111 	movweq	r2, #20753	; 0x5111
     afc:	200b0306 	andcs	r0, fp, r6, lsl #6
     b00:	06060513 			; <UNDEFINED> instruction: 0x06060513
     b04:	06050501 	streq	r0, [r5], -r1, lsl #10
     b08:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
     b0c:	07052e01 	streq	r2, [r5, -r1, lsl #28]
     b10:	20760306 	rsbscs	r0, r6, r6, lsl #6
     b14:	01060a05 	tsteq	r6, r5, lsl #20
     b18:	02001605 	andeq	r1, r0, #5242880	; 0x500000
     b1c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     b20:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
     b24:	030c053c 	movweq	r0, #50492	; 0xc53c
     b28:	0134020c 	teqeq	r4, ip, lsl #4
     b2c:	30060305 	andcc	r0, r6, r5, lsl #6
     b30:	01060605 	tsteq	r6, r5, lsl #12
     b34:	02001c05 	andeq	r1, r0, #1280	; 0x500
     b38:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     b3c:	0305220c 	movweq	r2, #21004	; 0x520c
     b40:	06053206 	streq	r3, [r5], -r6, lsl #4
     b44:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     b48:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     b4c:	0b050106 	bleq	140f6c <__RAM_SIZE+0x40f6c>
     b50:	0603052e 	streq	r0, [r3], -lr, lsr #10
     b54:	0905136a 	stmdbeq	r5, {r1, r3, r5, r6, r8, r9, ip}
     b58:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     b5c:	05820404 	streq	r0, [r2, #1028]	; 0x404
     b60:	04020003 	streq	r0, [r2], #-3
     b64:	23080604 	movwcs	r0, #34308	; 0x8604
     b68:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     b6c:	01060404 	tsteq	r6, r4, lsl #8
     b70:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     b74:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     b78:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     b7c:	002e0404 	eoreq	r0, lr, r4, lsl #8
     b80:	06040402 	streq	r0, [r4], -r2, lsl #8
     b84:	0047055a 	subeq	r0, r7, sl, asr r5
     b88:	06040402 	streq	r0, [r4], -r2, lsl #8
     b8c:	000b0501 	andeq	r0, fp, r1, lsl #10
     b90:	4a040402 	bmi	101ba0 <__RAM_SIZE+0x1ba0>
     b94:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     b98:	0005053c 	andeq	r0, r5, ip, lsr r5
     b9c:	06040402 	streq	r0, [r4], -r2, lsl #8
     ba0:	000805d8 	ldrdeq	r0, [r8], -r8
     ba4:	06040402 	streq	r0, [r4], -r2, lsl #8
     ba8:	04020001 	streq	r0, [r2], #-1
     bac:	09056604 	stmdbeq	r5, {r2, r9, sl, sp, lr}
     bb0:	01040200 	mrseq	r0, R12_usr
     bb4:	00207703 	eoreq	r7, r0, r3, lsl #14
     bb8:	74010402 	strvc	r0, [r1], #-1026	; 0xfffffbfe
     bbc:	05250505 	streq	r0, [r5, #-1285]!	; 0xfffffafb
     bc0:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
     bc4:	00410602 	subeq	r0, r1, r2, lsl #12
     bc8:	06020402 	streq	r0, [r2], -r2, lsl #8
     bcc:	000d0520 	andeq	r0, sp, r0, lsr #10
     bd0:	06010402 	streq	r0, [r1], -r2, lsl #8
     bd4:	00120558 	andseq	r0, r2, r8, asr r5
     bd8:	06010402 	streq	r0, [r1], -r2, lsl #8
     bdc:	000d0501 	andeq	r0, sp, r1, lsl #10
     be0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     be4:	01040200 	mrseq	r0, R12_usr
     be8:	0002022e 	andeq	r0, r2, lr, lsr #4
     bec:	01050101 	tsteq	r5, r1, lsl #2
     bf0:	78020500 	stmdavc	r2, {r8, sl}
     bf4:	0310000f 	tsteq	r0, #15
     bf8:	060102d3 			; <UNDEFINED> instruction: 0x060102d3
     bfc:	06030501 	streq	r0, [r3], -r1, lsl #10
     c00:	151313bb 	ldrne	r1, [r3, #-955]	; 0xfffffc45
     c04:	06060515 			; <UNDEFINED> instruction: 0x06060515
     c08:	20202001 	eorcs	r2, r0, r1
     c0c:	06030520 	streq	r0, [r3], -r0, lsr #10
     c10:	0606054c 	streq	r0, [r6], -ip, asr #10
     c14:	06030501 	streq	r0, [r3], -r1, lsl #10
     c18:	060605a0 	streq	r0, [r6], -r0, lsr #11
     c1c:	06030501 	streq	r0, [r3], -r1, lsl #10
     c20:	06060595 			; <UNDEFINED> instruction: 0x06060595
     c24:	00220501 	eoreq	r0, r2, r1, lsl #10
     c28:	90010402 	andls	r0, r1, r2, lsl #8
     c2c:	03060305 	movweq	r0, #25349	; 0x6305
     c30:	05139009 	ldreq	r9, [r3, #-9]
     c34:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     c38:	03058108 	movweq	r8, #20744	; 0x5108
     c3c:	06053506 	streq	r3, [r5], -r6, lsl #10
     c40:	0a050106 	beq	141060 <__RAM_SIZE+0x41060>
     c44:	0609054b 	streq	r0, [r9], -fp, asr #10
     c48:	002a0523 	eoreq	r0, sl, r3, lsr #10
     c4c:	06010402 	streq	r0, [r1], -r2, lsl #8
     c50:	0605052e 	streq	r0, [r5], -lr, lsr #10
     c54:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
     c58:	06050501 	streq	r0, [r5], -r1, lsl #10
     c5c:	06090567 	streq	r0, [r9], -r7, ror #10
     c60:	1f0c0501 	svcne	0x000c0501
     c64:	06050520 	streq	r0, [r5], -r0, lsr #10
     c68:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
     c6c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     c70:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     c74:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     c78:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     c7c:	0001060c 	andeq	r0, r1, ip, lsl #12
     c80:	58040402 	stmdapl	r4, {r1, sl}
     c84:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     c88:	05c82008 	strbeq	r2, [r8, #8]
     c8c:	05500605 	ldrbeq	r0, [r0, #-1541]	; 0xfffff9fb
     c90:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     c94:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     c98:	0b0513d6 	bleq	145bf8 <__RAM_SIZE+0x45bf8>
     c9c:	0e050106 	adfeqs	f0, f5, f6
     ca0:	420a0581 	andmi	r0, sl, #541065216	; 0x20400000
     ca4:	36060305 	strcc	r0, [r6], -r5, lsl #6
     ca8:	01060705 	tsteq	r6, r5, lsl #14
     cac:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     cb0:	01061705 	tsteq	r6, r5, lsl #14
     cb4:	6627052e 	strtvs	r0, [r7], -lr, lsr #10
     cb8:	05580a05 	ldrbeq	r0, [r8, #-2565]	; 0xfffff5fb
     cbc:	05830603 	streq	r0, [r3, #1539]	; 0x603
     cc0:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
     cc4:	21060305 	tstcs	r6, r5, lsl #6
     cc8:	01060e05 	tsteq	r6, r5, lsl #28
     ccc:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
     cd0:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     cd4:	01060605 	tsteq	r6, r5, lsl #12
     cd8:	06050520 	streq	r0, [r5], -r0, lsr #10
     cdc:	0e05224b 	cdpeq	2, 0, cr2, cr5, cr11, {2}
     ce0:	08050106 	stmdaeq	r5, {r1, r2, r8}
     ce4:	06070558 			; <UNDEFINED> instruction: 0x06070558
     ce8:	0c051359 	stceq	3, cr1, [r5], {89}	; 0x59
     cec:	03051f06 	movweq	r1, #24326	; 0x5f06
     cf0:	200b0306 	andcs	r0, fp, r6, lsl #6
     cf4:	01060605 	tsteq	r6, r5, lsl #12
     cf8:	21060505 	tstcs	r6, r5, lsl #10
     cfc:	01061405 	tsteq	r6, r5, lsl #8
     d00:	58580a05 	ldmdapl	r8, {r0, r2, r9, fp}^
     d04:	21060505 	tstcs	r6, r5, lsl #10
     d08:	01060805 	tsteq	r6, r5, lsl #16
     d0c:	02001805 	andeq	r1, r0, #327680	; 0x50000
     d10:	05580204 	ldrbeq	r0, [r8, #-516]	; 0xfffffdfc
     d14:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     d18:	07058203 	streq	r8, [r5, -r3, lsl #4]
     d1c:	20063f06 	andcs	r3, r6, r6, lsl #30
     d20:	03060805 	movweq	r0, #26629	; 0x6805
     d24:	0b052074 	bleq	148efc <__RAM_SIZE+0x48efc>
     d28:	08050106 	stmdaeq	r5, {r1, r2, r8}
     d2c:	0b058406 	bleq	161d4c <__RAM_SIZE+0x61d4c>
     d30:	19050106 	stmdbne	r5, {r1, r2, r8}
     d34:	01040200 	mrseq	r0, R12_usr
     d38:	06050520 	streq	r0, [r5], -r0, lsr #10
     d3c:	0520063e 	streq	r0, [r0, #-1598]!	; 0xfffff9c2
     d40:	0e03060b 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx11
     d44:	2f070520 	svccs	0x00070520
     d48:	06270521 	strteq	r0, [r7], -r1, lsr #10
     d4c:	900e0501 	andls	r0, lr, r1, lsl #10
     d50:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     d54:	07052012 	smladeq	r5, r2, r0, r2
     d58:	0a056706 	beq	15a978 <__RAM_SIZE+0x5a978>
     d5c:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     d60:	1f0e052e 	svcne	0x000e052e
     d64:	060b052e 	streq	r0, [fp], -lr, lsr #10
     d68:	00350526 	eorseq	r0, r5, r6, lsr #10
     d6c:	06010402 	streq	r0, [r1], -r2, lsl #8
     d70:	002c052e 	eoreq	r0, ip, lr, lsr #10
     d74:	20010402 	andcs	r0, r1, r2, lsl #8
     d78:	21060705 	tstcs	r6, r5, lsl #14
     d7c:	01061205 	tsteq	r6, r5, lsl #4
     d80:	05653505 	strbeq	r3, [r5, #-1285]!	; 0xfffffafb
     d84:	0520210e 	streq	r2, [r0, #-270]!	; 0xfffffef2
     d88:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
     d8c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     d90:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
     d94:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     d98:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
     d9c:	05170609 	ldreq	r0, [r7, #-1545]	; 0xfffff9f7
     da0:	25052f05 	strcs	r2, [r5, #-3845]	; 0xfffff0fb
     da4:	0c050106 	stfeqs	f0, [r5], {6}
     da8:	201205ac 	andscs	r0, r2, ip, lsr #11
     dac:	05201005 	streq	r1, [r0, #-5]!
     db0:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     db4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     db8:	0c052008 	stceq	0, cr2, [r5], {8}
     dbc:	05c8081f 	strbeq	r0, [r8, #2079]	; 0x81f
     dc0:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
     dc4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
     dc8:	03053c06 	movweq	r3, #23558	; 0x5c06
     dcc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
     dd0:	01060605 	tsteq	r6, r5, lsl #12
     dd4:	2f060505 	svccs	0x00060505
     dd8:	01060805 	tsteq	r6, r5, lsl #16
     ddc:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     de0:	01061205 	tsteq	r6, r5, lsl #4
     de4:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
     de8:	0a030603 	beq	c25fc <SYSTICK_CYCLES+0xb3b9d>
     dec:	060a0520 	streq	r0, [sl], -r0, lsr #10
     df0:	c9010501 	stmdbgt	r1, {r0, r8, sl}
     df4:	03060505 	movweq	r0, #25861	; 0x6505
     df8:	0805586b 	stmdaeq	r5, {r0, r1, r3, r5, r6, fp, ip, lr}
     dfc:	0f050106 	svceq	0x00050106
     e00:	01040200 	mrseq	r0, R12_usr
     e04:	001c052e 	andseq	r0, ip, lr, lsr #10
     e08:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     e0c:	4b060705 	blmi	182a28 <__RAM_SIZE+0x82a28>
     e10:	01060c05 	tsteq	r6, r5, lsl #24
     e14:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     e18:	06120531 			; <UNDEFINED> instruction: 0x06120531
     e1c:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     e20:	1f060b05 	svcne	0x00060b05
     e24:	02001a05 	andeq	r1, r0, #20480	; 0x5000
     e28:	2e060104 	adfcss	f0, f6, f4
     e2c:	01040200 	mrseq	r0, R12_usr
     e30:	060a053c 			; <UNDEFINED> instruction: 0x060a053c
     e34:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
     e38:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     e3c:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
     e40:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     e44:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
     e48:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
     e4c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     e50:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
     e54:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     e58:	0220660e 	eoreq	r6, r0, #14680064	; 0xe00000
     e5c:	01010001 	tsteq	r1, r1
     e60:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     e64:	00131002 	andseq	r1, r3, r2
     e68:	04c10310 	strbeq	r0, [r1], #784	; 0x310
     e6c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     e70:	13670603 	cmnne	r7, #3145728	; 0x300000
     e74:	06060514 			; <UNDEFINED> instruction: 0x06060514
     e78:	03090501 	movweq	r0, #38145	; 0x9501
     e7c:	204a01d3 	ldrdcs	r0, [sl], #-19	; 0xffffffed
     e80:	7eb20306 	cdpvc	3, 11, cr0, cr2, cr6, {0}
     e84:	060a0501 	streq	r0, [sl], -r1, lsl #10
     e88:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
     e8c:	3f060505 	svccc	0x00060505
     e90:	01060805 	tsteq	r6, r5, lsl #16
     e94:	30060705 	andcc	r0, r6, r5, lsl #14
     e98:	4b062006 	blmi	188eb8 <__RAM_SIZE+0x88eb8>
     e9c:	01060d05 	tsteq	r6, r5, lsl #26
     ea0:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     ea4:	06221006 	strteq	r1, [r2], -r6
     ea8:	060d0524 	streq	r0, [sp], -r4, lsr #10
     eac:	06050501 	streq	r0, [r5], -r1, lsl #10
     eb0:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
     eb4:	06050501 	streq	r0, [r5], -r1, lsl #10
     eb8:	13070521 	movwne	r0, #29985	; 0x7521
     ebc:	01060f05 	tsteq	r6, r5, lsl #30
     ec0:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
     ec4:	05ec060d 	strbeq	r0, [ip, #1549]!	; 0x60d
     ec8:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
     ecc:	7ccd0314 	stclvc	3, cr0, [sp], {20}
     ed0:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     ed4:	01061605 	tsteq	r6, r5, lsl #12
     ed8:	0308053c 	movweq	r0, #34108	; 0x853c
     edc:	050103b1 	streq	r0, [r1, #-945]	; 0xfffffc4f
     ee0:	0531060a 	ldreq	r0, [r1, #-1546]!	; 0xfffff9f6
     ee4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     ee8:	05052a0b 	streq	r2, [r5, #-2571]	; 0xfffff5f5
     eec:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
     ef0:	06090513 			; <UNDEFINED> instruction: 0x06090513
     ef4:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
     ef8:	052d0f05 	streq	r0, [sp, #-3845]!	; 0xfffff0fb
     efc:	0f030605 	svceq	0x00030605
     f00:	060d052e 	streq	r0, [sp], -lr, lsr #10
     f04:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
     f08:	03061305 	movweq	r1, #25349	; 0x6305
     f0c:	1905e456 	stmdbne	r5, {r1, r2, r4, r6, sl, sp, lr, pc}
     f10:	2b050106 	blcs	141330 <__RAM_SIZE+0x41330>
     f14:	31052e06 	tstcc	r5, r6, lsl #28
     f18:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
     f1c:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
     f20:	190d0501 	stmdbne	sp, {r0, r8, sl}
     f24:	7a031305 	bvc	c5b40 <SYSTICK_CYCLES+0xb70e1>
     f28:	06190520 	ldreq	r0, [r9], -r0, lsr #10
     f2c:	062b0501 	strteq	r0, [fp], -r1, lsl #10
     f30:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
     f34:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
     f38:	013d052e 	teqeq	sp, lr, lsr #10
     f3c:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
     f40:	19051b13 	stmdbne	r5, {r0, r1, r4, r8, r9, fp, ip}
     f44:	2b050106 	blcs	141364 <__RAM_SIZE+0x41364>
     f48:	31052e06 	tstcc	r5, r6, lsl #28
     f4c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
     f50:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
     f54:	170d0501 	strne	r0, [sp, -r1, lsl #10]
     f58:	051c1305 	ldreq	r1, [ip, #-773]	; 0xfffffcfb
     f5c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
     f60:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
     f64:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
     f68:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
     f6c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
     f70:	1d130516 	cfldr32ne	mvfx0, [r3, #-88]	; 0xffffffa8
     f74:	01061905 	tsteq	r6, r5, lsl #18
     f78:	2e062b05 	vmlacs.f64	d2, d6, d5
     f7c:	01063105 	tsteq	r6, r5, lsl #2
     f80:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
     f84:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
     f88:	0705150d 	streq	r1, [r5, -sp, lsl #10]
     f8c:	060f0525 	streq	r0, [pc], -r5, lsr #10
     f90:	07054a01 	streq	r4, [r5, -r1, lsl #20]
     f94:	11052306 	tstne	r5, r6, lsl #6
     f98:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f9c:	0a054b06 	beq	153bbc <__RAM_SIZE+0x53bbc>
     fa0:	09050106 	stmdbeq	r5, {r1, r2, r8}
     fa4:	0f053306 	svceq	0x00053306
     fa8:	07050106 	streq	r0, [r5, -r6, lsl #2]
     fac:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
     fb0:	09050106 	stmdbeq	r5, {r1, r2, r8}
     fb4:	4a7a0306 	bmi	1e81bd4 <SYSTEM_CLOCK+0x18c8e54>
     fb8:	01060f05 	tsteq	r6, r5, lsl #30
     fbc:	2f060905 	svccs	0x00060905
     fc0:	01061f05 	tsteq	r6, r5, lsl #30
     fc4:	0705202e 	streq	r2, [r5, -lr, lsr #32]
     fc8:	010b0306 	tsteq	fp, r6, lsl #6
     fcc:	01060d05 	tsteq	r6, r5, lsl #26
     fd0:	2f060705 	svccs	0x00060705
     fd4:	01060d05 	tsteq	r6, r5, lsl #26
     fd8:	2f060705 	svccs	0x00060705
     fdc:	01060b05 	tsteq	r6, r5, lsl #22
     fe0:	03061405 	movweq	r1, #25605	; 0x6405
     fe4:	05207cb9 	streq	r7, [r0, #-3257]!	; 0xfffff347
     fe8:	16051403 	strne	r1, [r5], -r3, lsl #8
     fec:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     ff0:	03c5030a 	biceq	r0, r5, #671088640	; 0x28000000
     ff4:	060c0501 	streq	r0, [ip], -r1, lsl #10
     ff8:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
     ffc:	2e790301 	cdpcs	3, 7, cr0, cr9, cr1, {0}
    1000:	41060905 	tstmi	r6, r5, lsl #18
    1004:	01061505 	tsteq	r6, r5, lsl #10
    1008:	0609054a 	streq	r0, [r9], -sl, asr #10
    100c:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    1010:	06090501 	streq	r0, [r9], -r1, lsl #10
    1014:	0633054b 	ldrteq	r0, [r3], -fp, asr #10
    1018:	06090501 	streq	r0, [r9], -r1, lsl #10
    101c:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1020:	09054a01 	stmdbeq	r5, {r0, r9, fp, lr}
    1024:	0f051906 	svceq	0x00051906
    1028:	09050106 	stmdbeq	r5, {r1, r2, r8}
    102c:	0f052f06 	svceq	0x00052f06
    1030:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1034:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    1038:	0c050106 	stfeqs	f0, [r5], {6}
    103c:	2c0f0520 	cfstr32cs	mvfx0, [pc], {32}
    1040:	31060b05 	tstcc	r6, r5, lsl #22
    1044:	01061105 	tsteq	r6, r5, lsl #2
    1048:	2f060b05 	svccs	0x00060b05
    104c:	01061105 	tsteq	r6, r5, lsl #2
    1050:	40060905 	andmi	r0, r6, r5, lsl #18
    1054:	01060f05 	tsteq	r6, r5, lsl #30
    1058:	2f060905 	svccs	0x00060905
    105c:	01060f05 	tsteq	r6, r5, lsl #30
    1060:	2f060905 	svccs	0x00060905
    1064:	01060d05 	tsteq	r6, r5, lsl #26
    1068:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    106c:	0b052c0f 	bleq	14c0b0 <__RAM_SIZE+0x4c0b0>
    1070:	11053106 	tstne	r5, r6, lsl #2
    1074:	0b050106 	bleq	141494 <__RAM_SIZE+0x41494>
    1078:	11052f06 	tstne	r5, r6, lsl #30
    107c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1080:	0f054106 	svceq	0x00054106
    1084:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1088:	0f052f06 	svceq	0x00052f06
    108c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1090:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    1094:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    1098:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    109c:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    10a0:	02740306 	rsbseq	r0, r4, #402653184	; 0x18000000
    10a4:	0f05015b 	svceq	0x0005015b
    10a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10ac:	0f052f06 	svceq	0x00052f06
    10b0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10b4:	05222f06 	streq	r2, [r2, #-3846]!	; 0xfffff0fa
    10b8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    10bc:	052f0609 	streq	r0, [pc, #-1545]!	; abb <__Vectors_Size+0x2fb>
    10c0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    10c4:	032f0609 			; <UNDEFINED> instruction: 0x032f0609
    10c8:	0513200f 	ldreq	r2, [r3, #-15]
    10cc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    10d0:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    10d4:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
    10d8:	11053106 	tstne	r5, r6, lsl #2
    10dc:	0e050106 	adfeqs	f0, f5, f6
    10e0:	11053106 	tstne	r5, r6, lsl #2
    10e4:	0b050106 	bleq	141504 <__RAM_SIZE+0x41504>
    10e8:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    10ec:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    10f0:	77032d10 	smladvc	r3, r0, sp, r2
    10f4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    10f8:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    10fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1100:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1104:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1108:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    110c:	0b052e01 	bleq	14c918 <__RAM_SIZE+0x4c918>
    1110:	11052f06 	tstne	r5, r6, lsl #30
    1114:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1118:	0c053206 	sfmeq	f3, 4, [r5], {6}
    111c:	0b050106 	bleq	14153c <__RAM_SIZE+0x4153c>
    1120:	11053d06 	tstne	r5, r6, lsl #26
    1124:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1128:	0c053206 	sfmeq	f3, 4, [r5], {6}
    112c:	1e050106 	adfnes	f0, f5, f6
    1130:	01040200 	mrseq	r0, R12_usr
    1134:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1138:	052e1303 	streq	r1, [lr, #-771]!	; 0xfffffcfd
    113c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1140:	054f0610 	strbeq	r0, [pc, #-1552]	; b38 <__Vectors_Size+0x378>
    1144:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1148:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    114c:	05010667 	streq	r0, [r1, #-1639]	; 0xfffff999
    1150:	0d054a4e 	vstreq	s8, [r5, #-312]	; 0xfffffec8
    1154:	08040200 	stmdaeq	r4, {r9}
    1158:	13054b06 	movwne	r4, #23302	; 0x5b06
    115c:	08040200 	stmdaeq	r4, {r9}
    1160:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1164:	00740804 	rsbseq	r0, r4, r4, lsl #16
    1168:	4a080402 	bmi	202178 <__RAM_SIZE+0x102178>
    116c:	08040200 	stmdaeq	r4, {r9}
    1170:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1174:	02002008 	andeq	r2, r0, #8
    1178:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    117c:	01470310 	cmpeq	r7, r0, lsl r3
    1180:	0b053131 	bleq	14d64c <__RAM_SIZE+0x4d64c>
    1184:	11053606 	tstne	r5, r6, lsl #12
    1188:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    118c:	1003060b 	andne	r0, r3, fp, lsl #12
    1190:	060e0520 	streq	r0, [lr], -r0, lsr #10
    1194:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1198:	06130542 	ldreq	r0, [r3], -r2, asr #10
    119c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    11a0:	064c0541 	strbeq	r0, [ip], -r1, asr #10
    11a4:	3c3c0501 	cfldr32cc	mvfx0, [ip], #-4
    11a8:	02000d05 	andeq	r0, r0, #320	; 0x140
    11ac:	4b060804 	blmi	1831c4 <__RAM_SIZE+0x831c4>
    11b0:	02003805 	andeq	r3, r0, #327680	; 0x50000
    11b4:	01060804 	tsteq	r6, r4, lsl #16
    11b8:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    11bc:	004a0804 	subeq	r0, sl, r4, lsl #16
    11c0:	74080402 	strvc	r0, [r8], #-1026	; 0xfffffbfe
    11c4:	08040200 	stmdaeq	r4, {r9}
    11c8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    11cc:	02005808 	andeq	r5, r0, #8, 16	; 0x80000
    11d0:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    11d4:	12030609 	andne	r0, r3, #9437184	; 0x900000
    11d8:	060f0501 	streq	r0, [pc], -r1, lsl #10
    11dc:	06090501 	streq	r0, [r9], -r1, lsl #10
    11e0:	030d053d 	movweq	r0, #54589	; 0xd53d
    11e4:	1d052063 	stcne	0, cr2, [r5, #-396]	; 0xfffffe74
    11e8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    11ec:	3d058306 	stccc	3, cr8, [r5, #-24]	; 0xffffffe8
    11f0:	13050106 	movwne	r0, #20742	; 0x5106
    11f4:	ac582e4a 	mrrcge	14, 4, r2, r8, cr10
    11f8:	203d0520 	eorscs	r0, sp, r0, lsr #10
    11fc:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    1200:	01061805 	tsteq	r6, r5, lsl #16
    1204:	4b060d05 	blmi	184620 <__RAM_SIZE+0x84620>
    1208:	01063805 	tsteq	r6, r5, lsl #16
    120c:	9e4a1305 	cdpls	3, 4, cr1, cr10, cr5, {0}
    1210:	81052058 	qaddhi	r2, r8, r5
    1214:	04020001 	streq	r0, [r2], #-1
    1218:	71052302 	tstvc	r5, r2, lsl #6
    121c:	3c66053c 	cfstr64cc	mvdx0, [r6], #-240	; 0xffffff10
    1220:	3c018105 	stfccd	f0, [r1], {5}
    1224:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    1228:	0613051a 			; <UNDEFINED> instruction: 0x0613051a
    122c:	584a0801 	stmdapl	sl, {r0, fp}^
    1230:	060d0520 	streq	r0, [sp], -r0, lsr #10
    1234:	06130524 	ldreq	r0, [r3], -r4, lsr #10
    1238:	20909e01 	addscs	r9, r0, r1, lsl #28
    123c:	0001ae05 	andeq	sl, r1, r5, lsl #28
    1240:	23020402 	movwcs	r0, #9218	; 0x2402
    1244:	3c019505 	cfstr32cc	mvfx9, [r1], {5}
    1248:	5801ae05 	stmdapl	r1, {r0, r2, r9, sl, fp, sp, pc}
    124c:	06090558 			; <UNDEFINED> instruction: 0x06090558
    1250:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    1254:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1258:	052f0609 	streq	r0, [pc, #-1545]!	; c57 <__Vectors_Size+0x497>
    125c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1260:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    1264:	01060f05 	tsteq	r6, r5, lsl #30
    1268:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    126c:	02001d05 	andeq	r1, r0, #320	; 0x140
    1270:	051d0104 	ldreq	r0, [sp, #-260]	; 0xfffffefc
    1274:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    1278:	00010601 	andeq	r0, r1, r1, lsl #12
    127c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1280:	03060905 	movweq	r0, #26885	; 0x6905
    1284:	0c052009 	stceq	0, cr2, [r5], {9}
    1288:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    128c:	02040200 	andeq	r0, r4, #0, 4
    1290:	0031052e 	eorseq	r0, r1, lr, lsr #10
    1294:	06030402 	streq	r0, [r3], -r2, lsl #8
    1298:	0037052e 	eorseq	r0, r7, lr, lsr #10
    129c:	06030402 	streq	r0, [r3], -r2, lsl #8
    12a0:	06090501 	streq	r0, [r9], -r1, lsl #10
    12a4:	060c052f 	streq	r0, [ip], -pc, lsr #10
    12a8:	001d0501 	andseq	r0, sp, r1, lsl #10
    12ac:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    12b0:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    12b4:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    12b8:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    12bc:	01060304 	tsteq	r6, r4, lsl #6
    12c0:	2f060905 	svccs	0x00060905
    12c4:	01060f05 	tsteq	r6, r5, lsl #30
    12c8:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    12cc:	060f0567 	streq	r0, [pc], -r7, ror #10
    12d0:	06090501 	streq	r0, [r9], -r1, lsl #10
    12d4:	0514243d 	ldreq	r2, [r4, #-1085]	; 0xfffffbc3
    12d8:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    12dc:	051e1605 	ldreq	r1, [lr, #-1541]	; 0xfffff9fb
    12e0:	05360609 	ldreq	r0, [r6, #-1545]!	; 0xfffff9f7
    12e4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    12e8:	062e3c09 	strteq	r3, [lr], -r9, lsl #24
    12ec:	060c055a 			; <UNDEFINED> instruction: 0x060c055a
    12f0:	06090501 	streq	r0, [r9], -r1, lsl #10
    12f4:	060f0525 	streq	r0, [pc], -r5, lsr #10
    12f8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12fc:	030d053d 	movweq	r0, #54589	; 0xd53d
    1300:	2e062e74 	mcrcs	14, 0, r2, cr6, cr4, {3}
    1304:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1308:	1105210d 	tstne	r5, sp, lsl #2
    130c:	13051f06 	movwne	r1, #24326	; 0x5f06
    1310:	11050106 	tstne	r5, r6, lsl #2
    1314:	16052e2e 	strne	r2, [r5], -lr, lsr #28
    1318:	3c2e3c2b 	stccc	12, cr3, [lr], #-172	; 0xffffff54
    131c:	03060d05 	movweq	r0, #27909	; 0x6d05
    1320:	2006200c 	andcs	r2, r6, ip
    1324:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1328:	1105210d 	tstne	r5, sp, lsl #2
    132c:	13051f06 	movwne	r1, #24326	; 0x5f06
    1330:	11050106 	tstne	r5, r6, lsl #2
    1334:	052e2e2e 	streq	r2, [lr, #-3630]!	; 0xfffff1d2
    1338:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    133c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1340:	06090501 	streq	r0, [r9], -r1, lsl #10
    1344:	061a0559 			; <UNDEFINED> instruction: 0x061a0559
    1348:	06260501 	strteq	r0, [r6], -r1, lsl #10
    134c:	747b9003 	ldrbtvc	r9, [fp], #-3
    1350:	05012205 	streq	r2, [r1, #-517]	; 0xfffffdfb
    1354:	052e061e 	streq	r0, [lr, #-1566]!	; 0xfffff9e2
    1358:	05200611 	streq	r0, [r0, #-1553]!	; 0xfffff9ef
    135c:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    1360:	1405201e 	strne	r2, [r5], #-30	; 0xffffffe2
    1364:	06030520 	streq	r0, [r3], -r0, lsr #10
    1368:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    136c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    1370:	04f10306 	ldrbteq	r0, [r1], #774	; 0x306
    1374:	060c0501 	streq	r0, [ip], -r1, lsl #10
    1378:	060b0501 	streq	r0, [fp], -r1, lsl #10
    137c:	060d054b 	streq	r0, [sp], -fp, asr #10
    1380:	06090501 	streq	r0, [r9], -r1, lsl #10
    1384:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1388:	202e4a01 	eorcs	r4, lr, r1, lsl #20
    138c:	1b1a0520 	blne	682814 <SYSTEM_CLOCK+0xc9a94>
    1390:	0d052e2e 	stceq	14, cr2, [r5, #-184]	; 0xffffff48
    1394:	2e063506 	cfsh32cs	mvfx3, mvfx6, #6
    1398:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    139c:	1105210d 	tstne	r5, sp, lsl #2
    13a0:	13051f06 	movwne	r1, #24326	; 0x5f06
    13a4:	11050106 	tstne	r5, r6, lsl #2
    13a8:	2e130520 	cfmul64cs	mvdx0, mvdx3, mvdx0
    13ac:	4505203c 	strmi	r2, [r5, #-60]	; 0xffffffc4
    13b0:	060b0525 	streq	r0, [fp], -r5, lsr #10
    13b4:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    13b8:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    13bc:	060f0520 	streq	r0, [pc], -r0, lsr #10
    13c0:	06110549 	ldreq	r0, [r1], -r9, asr #10
    13c4:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    13c8:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    13cc:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    13d0:	04020045 	streq	r0, [r2], #-69	; 0xffffffbb
    13d4:	39052e02 	stmdbcc	r5, {r1, r9, sl, fp, sp}
    13d8:	02040200 	andeq	r0, r4, #0, 4
    13dc:	320c0520 	andcc	r0, ip, #32, 10	; 0x8000000
    13e0:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
    13e4:	01060c05 	tsteq	r6, r5, lsl #24
    13e8:	33060905 	movwcc	r0, #26885	; 0x6905
    13ec:	01060f05 	tsteq	r6, r5, lsl #30
    13f0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    13f4:	052e2006 	streq	r2, [lr, #-6]!
    13f8:	061c060d 	ldreq	r0, [ip], -sp, lsl #12
    13fc:	49130520 	ldmdbmi	r3, {r5, r8, sl}
    1400:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1404:	051f0611 	ldreq	r0, [pc, #-1553]	; dfb <__Vectors_Size+0x63b>
    1408:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    140c:	202e2e11 	eorcs	r2, lr, r1, lsl lr
    1410:	06090520 	streq	r0, [r9], -r0, lsr #10
    1414:	13010903 	movwne	r0, #6403	; 0x1903
    1418:	01060f05 	tsteq	r6, r5, lsl #30
    141c:	30060905 	andcc	r0, r6, r5, lsl #18
    1420:	170b0513 	smladne	fp, r3, r5, r0
    1424:	01065105 	tsteq	r6, r5, lsl #2
    1428:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    142c:	16080609 	strne	r0, [r8], -r9, lsl #12
    1430:	01060f05 	tsteq	r6, r5, lsl #30
    1434:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1438:	16062006 	strne	r2, [r6], -r6
    143c:	59062006 	stmdbpl	r6, {r1, r2, sp}
    1440:	01060f05 	tsteq	r6, r5, lsl #30
    1444:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1448:	06221006 	strteq	r1, [r2], -r6
    144c:	06200623 	strteq	r0, [r0], -r3, lsr #12
    1450:	060f054b 	streq	r0, [pc], -fp, asr #10
    1454:	06090501 	streq	r0, [r9], -r1, lsl #10
    1458:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    145c:	207df803 	rsbscs	pc, sp, r3, lsl #16
    1460:	03060305 	movweq	r0, #25349	; 0x6305
    1464:	002e028d 	eoreq	r0, lr, sp, lsl #5
    1468:	06010402 	streq	r0, [r1], -r2, lsl #8
    146c:	02002e2e 	andeq	r2, r0, #736	; 0x2e0
    1470:	00200404 	eoreq	r0, r0, r4, lsl #8
    1474:	06040402 	streq	r0, [r4], -r2, lsl #8
    1478:	0001054d 	andeq	r0, r1, sp, asr #10
    147c:	06040402 	streq	r0, [r4], -r2, lsl #8
    1480:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1484:	03024a04 	movweq	r4, #10756	; 0x2a04
    1488:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    148c:	02050001 	andeq	r0, r5, #1
    1490:	10001990 	mulne	r0, r0, r9
    1494:	01019503 	tsteq	r1, r3, lsl #10
    1498:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    149c:	1c050111 	stfnes	f0, [r5], {17}
    14a0:	13030501 	movwne	r0, #13569	; 0x3501
    14a4:	01060605 	tsteq	r6, r5, lsl #12
    14a8:	052c0105 	streq	r0, [ip, #-261]!	; 0xfffffefb
    14ac:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    14b0:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    14b4:	01010001 	tsteq	r1, r1
    14b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    14bc:	00199c02 	andseq	r9, r9, r2, lsl #24
    14c0:	06de0310 			; <UNDEFINED> instruction: 0x06de0310
    14c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    14c8:	13670603 	cmnne	r7, #3145728	; 0x300000
    14cc:	13051321 	movwne	r1, #21281	; 0x5321
    14d0:	03050106 	movweq	r0, #20742	; 0x5106
    14d4:	05137506 	ldreq	r7, [r3, #-1286]	; 0xfffffafa
    14d8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    14dc:	01010008 	tsteq	r1, r8
    14e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    14e4:	00000002 	andeq	r0, r0, r2
    14e8:	06e90300 	strbteq	r0, [r9], r0, lsl #6
    14ec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    14f0:	13750603 	cmnne	r5, #3145728	; 0x300000
    14f4:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    14f8:	03054a01 	movweq	r4, #23041	; 0x5a01
    14fc:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1500:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1504:	01010008 	tsteq	r1, r8
    1508:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    150c:	00000002 	andeq	r0, r0, r2
    1510:	06f30300 	ldrbteq	r0, [r3], r0, lsl #6
    1514:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1518:	13750603 	cmnne	r5, #3145728	; 0x300000
    151c:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    1520:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    1524:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    1528:	13060105 	movwne	r0, #24837	; 0x6105
    152c:	01000702 	tsteq	r0, r2, lsl #14
    1530:	00010501 	andeq	r0, r1, r1, lsl #10
    1534:	00000205 	andeq	r0, r0, r5, lsl #4
    1538:	fd030000 	stc2	0, cr0, [r3, #-0]
    153c:	01060106 	tsteq	r6, r6, lsl #2
    1540:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1544:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1548:	05204a01 	streq	r4, [r0, #-2561]!	; 0xfffff5ff
    154c:	06022f01 	streq	r2, [r2], -r1, lsl #30
    1550:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1554:	02050001 	andeq	r0, r5, #1
    1558:	00000000 	andeq	r0, r0, r0
    155c:	01078403 	tsteq	r7, r3, lsl #8
    1560:	03050106 	movweq	r0, #20742	; 0x5106
    1564:	0a052f06 	beq	14d184 <__RAM_SIZE+0x4d184>
    1568:	202e0106 	eorcs	r0, lr, r6, lsl #2
    156c:	01052020 	tsteq	r5, r0, lsr #32
    1570:	0005022f 	andeq	r0, r5, pc, lsr #4
    1574:	01050101 	tsteq	r5, r1, lsl #2
    1578:	00020500 	andeq	r0, r2, r0, lsl #10
    157c:	03000000 	movweq	r0, #0
    1580:	0601078a 	streq	r0, [r1], -sl, lsl #15
    1584:	06030501 	streq	r0, [r3], -r1, lsl #10
    1588:	05211367 	streq	r1, [r1, #-871]!	; 0xfffffc99
    158c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1590:	052f0603 	streq	r0, [pc, #-1539]!	; f95 <__Vectors_Size+0x7d5>
    1594:	58010613 	stmdapl	r1, {r0, r1, r4, r9, sl}
    1598:	2f060305 	svccs	0x00060305
    159c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    15a0:	00080213 	andeq	r0, r8, r3, lsl r2
    15a4:	03380101 	teqeq	r8, #1073741824	; 0x40000000
    15a8:	00030000 	andeq	r0, r3, r0
    15ac:	000001cc 	andeq	r0, r0, ip, asr #3
    15b0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    15b4:	0101000d 	tsteq	r1, sp
    15b8:	00000101 	andeq	r0, r0, r1, lsl #2
    15bc:	00000100 	andeq	r0, r0, r0, lsl #2
    15c0:	2f2e2e01 	svccs	0x002e2e01
    15c4:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    15c8:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    15cc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    15d0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    15d4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    15d8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    15dc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    15e0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    15e4:	5f6d7261 	svcpl	0x006d7261
    15e8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    15ec:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    15f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    15f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    15f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    15fc:	30312d69 	eorscc	r2, r1, r9, ror #26
    1600:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1604:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1608:	615c3031 	cmpvs	ip, r1, lsr r0
    160c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1610:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1614:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1618:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    161c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1620:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    1624:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    1628:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    162c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1630:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1634:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1638:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    163c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1640:	5f6d7261 	svcpl	0x006d7261
    1644:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1648:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    164c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1650:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1654:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1658:	30312d69 	eorscc	r2, r1, r9, ror #26
    165c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1660:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1664:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    1668:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    166c:	615c6363 	cmpvs	ip, r3, ror #6
    1670:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1674:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1678:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    167c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    1680:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    1684:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1688:	00656475 	rsbeq	r6, r5, r5, ror r4
    168c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1690:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1694:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1698:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    169c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    16a0:	615c6d61 	cmpvs	ip, r1, ror #26
    16a4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    16a8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    16ac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    16b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    16b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    16b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    16bc:	2e30312d 	rsfcssp	f3, f0, #5.0
    16c0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    16c4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    16c8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    16cc:	6f6e2d6d 	svcvs	0x006e2d6d
    16d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    16d4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    16d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    16dc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    16e0:	00737973 	rsbseq	r7, r3, r3, ror r9
    16e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    16e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    16ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    16f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    16f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    16f8:	615c6d61 	cmpvs	ip, r1, ror #26
    16fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1700:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1704:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1708:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    170c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1710:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1714:	2e30312d 	rsfcssp	f3, f0, #5.0
    1718:	30322d33 	eorscc	r2, r2, r3, lsr sp
    171c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1720:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1724:	6f6e2d6d 	svcvs	0x006e2d6d
    1728:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    172c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1730:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1734:	00656475 	rsbeq	r6, r5, r5, ror r4
    1738:	72617500 	rsbvc	r7, r1, #0, 10
    173c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1740:	5f000001 	svcpl	0x00000001
    1744:	61666564 	cmnvs	r6, r4, ror #10
    1748:	5f746c75 	svcpl	0x00746c75
    174c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1750:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1754:	73000002 	movwvc	r0, #2
    1758:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    175c:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1760:	5f000003 	svcpl	0x00000003
    1764:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1768:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    176c:	00000400 	andeq	r0, r0, r0, lsl #8
    1770:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1774:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1778:	00000005 	andeq	r0, r0, r5
    177c:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    1780:	0019c802 	andseq	ip, r9, r2, lsl #16
    1784:	011c0310 	tsteq	ip, r0, lsl r3
    1788:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    178c:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1790:	0402000b 	streq	r0, [r2], #-11
    1794:	0c050101 	stfeqs	f0, [r5], {1}
    1798:	01040200 	mrseq	r0, R12_usr
    179c:	0b050106 	bleq	141bbc <__RAM_SIZE+0x41bbc>
    17a0:	01040200 	mrseq	r0, R12_usr
    17a4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    17a8:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    17ac:	06050501 	streq	r0, [r5], -r1, lsl #10
    17b0:	0601052f 	streq	r0, [r1], -pc, lsr #10
    17b4:	00030213 	andeq	r0, r3, r3, lsl r2
    17b8:	14050101 	strne	r0, [r5], #-257	; 0xfffffeff
    17bc:	00020500 	andeq	r0, r2, r0, lsl #10
    17c0:	03000000 	movweq	r0, #0
    17c4:	2b050122 	blcs	141c54 <__RAM_SIZE+0x41c54>
    17c8:	01040200 	mrseq	r0, R12_usr
    17cc:	000b0513 	andeq	r0, fp, r3, lsl r5
    17d0:	01010402 	tsteq	r1, r2, lsl #8
    17d4:	02000d05 	andeq	r0, r0, #320	; 0x140
    17d8:	01060104 	tsteq	r6, r4, lsl #2
    17dc:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    17e0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    17e4:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    17e8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    17ec:	03022f01 	movweq	r2, #12033	; 0x2f01
    17f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17f4:	0205001e 	andeq	r0, r5, #30
    17f8:	100019dc 	ldrdne	r1, [r0], -ip
    17fc:	06012703 	streq	r2, [r1], -r3, lsl #14
    1800:	06050501 	streq	r0, [r5], -r1, lsl #10
    1804:	0905132f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    1808:	0b051106 	bleq	145c28 <__RAM_SIZE+0x45c28>
    180c:	06090521 	streq	r0, [r9], -r1, lsr #10
    1810:	0e052f21 	cdpeq	15, 0, cr2, cr5, cr1, {1}
    1814:	0b050106 	bleq	141c34 <__RAM_SIZE+0x41c34>
    1818:	12051e06 	andne	r1, r5, #6, 28	; 0x60
    181c:	0b050106 	bleq	141c3c <__RAM_SIZE+0x41c3c>
    1820:	06050520 	streq	r0, [r5], -r0, lsr #10
    1824:	01053d32 	tsteq	r5, r2, lsr sp
    1828:	002e1306 	eoreq	r1, lr, r6, lsl #6
    182c:	16050101 	strne	r0, [r5], -r1, lsl #2
    1830:	fc020500 	stc2	5, cr0, [r2], {-0}
    1834:	03100019 	tsteq	r0, #25
    1838:	05050131 	streq	r0, [r5, #-305]	; 0xfffffecf
    183c:	06160513 			; <UNDEFINED> instruction: 0x06160513
    1840:	06050501 	streq	r0, [r5], -r1, lsl #10
    1844:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1848:	06050501 	streq	r0, [r5], -r1, lsl #10
    184c:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1850:	06050501 	streq	r0, [r5], -r1, lsl #10
    1854:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1858:	06050501 	streq	r0, [r5], -r1, lsl #10
    185c:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1860:	06050501 	streq	r0, [r5], -r1, lsl #10
    1864:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1868:	2f010501 	svccs	0x00010501
    186c:	01000402 	tsteq	r0, r2, lsl #8
    1870:	00240501 	eoreq	r0, r4, r1, lsl #10
    1874:	00000205 	andeq	r0, r0, r5, lsl #4
    1878:	3a030000 	bcc	c1880 <SYSTICK_CYCLES+0xb2e21>
    187c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1880:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1884:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    1888:	01010001 	tsteq	r1, r1
    188c:	05003005 	streq	r3, [r0, #-5]
    1890:	00000002 	andeq	r0, r0, r2
    1894:	013e0300 	teqeq	lr, r0, lsl #6
    1898:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    189c:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    18a0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    18a4:	05340609 	ldreq	r0, [r4, #-1545]!	; 0xfffff9f7
    18a8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    18ac:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    18b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    18b4:	7a03060b 	bvc	c30e8 <SYSTICK_CYCLES+0xb4689>
    18b8:	01050520 	tsteq	r5, r0, lsr #10
    18bc:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    18c0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    18c4:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    18c8:	0b052106 	bleq	149ce8 <__RAM_SIZE+0x49ce8>
    18cc:	17050106 	strne	r0, [r5, -r6, lsl #2]
    18d0:	01040200 	mrseq	r0, R12_usr
    18d4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    18d8:	06010534 			; <UNDEFINED> instruction: 0x06010534
    18dc:	00202013 	eoreq	r2, r0, r3, lsl r0
    18e0:	017f0101 	cmneq	pc, r1, lsl #2
    18e4:	00030000 	andeq	r0, r3, r0
    18e8:	0000015b 	andeq	r0, r0, fp, asr r1
    18ec:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    18f0:	0101000d 	tsteq	r1, sp
    18f4:	00000101 	andeq	r0, r0, r1, lsl #2
    18f8:	00000100 	andeq	r0, r0, r0, lsl #2
    18fc:	2f2e2e01 	svccs	0x002e2e01
    1900:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1904:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1908:	6f747262 	svcvs	0x00747262
    190c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1910:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1914:	6f632f78 	svcvs	0x00632f78
    1918:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    191c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1920:	2f2e2e00 	svccs	0x002e2e00
    1924:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1928:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    192c:	6f747262 	svcvs	0x00747262
    1930:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1934:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1938:	6f702f78 	svcvs	0x00702f78
    193c:	2f737472 	svccs	0x00737472
    1940:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1944:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 17b8 <__HEAP_SIZE+0x7b8>
    1948:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    194c:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    1950:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    1954:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1958:	2f2e2e2f 	svccs	0x002e2e2f
    195c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1960:	2f736f74 	svccs	0x00736f74
    1964:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1968:	2f786461 	svccs	0x00786461
    196c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1970:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1974:	0000636e 	andeq	r6, r0, lr, ror #6
    1978:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    197c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1980:	7a696c61 	bvc	1a5cb0c <SYSTEM_CLOCK+0x14a3d8c>
    1984:	69685f65 	stmdbvs	r8!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1988:	6c5f6867 	mrrcvs	8, 6, r6, pc, cr7	; <UNPREDICTABLE>
    198c:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
    1990:	0100632e 	tsteq	r0, lr, lsr #6
    1994:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1998:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    199c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    19a0:	74000002 	strvc	r0, [r0], #-2
    19a4:	70615f78 	rsbvc	r5, r1, r8, ror pc
    19a8:	00682e69 	rsbeq	r2, r8, r9, ror #28
    19ac:	74000003 	strvc	r0, [r0], #-3
    19b0:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
    19b4:	61697469 	cmnvs	r9, r9, ror #8
    19b8:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    19bc:	0300682e 	movweq	r6, #2094	; 0x82e
    19c0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    19c4:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    19c8:	6f687061 	svcvs	0x00687061
    19cc:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
    19d0:	00000300 	andeq	r0, r0, r0, lsl #6
    19d4:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    19d8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    19dc:	0300682e 	movweq	r6, #2094	; 0x82e
    19e0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    19e4:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    19e8:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    19ec:	7367616c 	cmnvc	r7, #108, 2
    19f0:	0300682e 	movweq	r6, #2094	; 0x82e
    19f4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    19f8:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    19fc:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    1a00:	00000300 	andeq	r0, r0, r0, lsl #6
    1a04:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1a08:	6b636f6c 	blvs	18dd7c0 <SYSTEM_CLOCK+0x1324a40>
    1a0c:	6f6f705f 	svcvs	0x006f705f
    1a10:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    1a14:	74000003 	strvc	r0, [r0], #-3
    1a18:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1a1c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    1a20:	2e6c6f6f 	cdpcs	15, 6, cr6, cr12, cr15, {3}
    1a24:	00030068 	andeq	r0, r3, r8, rrx
    1a28:	5f787400 	svcpl	0x00787400
    1a2c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a30:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    1a34:	00000300 	andeq	r0, r0, r0, lsl #6
    1a38:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1a40 <__HEAP_SIZE+0xa40>
    1a3c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1a40:	0300682e 	movweq	r6, #2094	; 0x82e
    1a44:	05000000 	streq	r0, [r0, #-0]
    1a48:	02050001 	andeq	r0, r5, #1
    1a4c:	00000000 	andeq	r0, r0, r0
    1a50:	0100f003 	tsteq	r0, r3	; <UNPREDICTABLE>
    1a54:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    1a58:	01053320 	tsteq	r5, r0, lsr #6
    1a5c:	2e170306 	cdpcs	3, 1, cr0, cr7, cr6, {0}
    1a60:	01000102 	tsteq	r0, r2, lsl #2
    1a64:	00010601 	andeq	r0, r1, r1, lsl #12
    1a68:	cf000300 	svcgt	0x00000300
    1a6c:	02000000 	andeq	r0, r0, #0
    1a70:	0d0efb01 	vstreq	d15, [lr, #-4]
    1a74:	01010100 	mrseq	r0, (UNDEF: 17)
    1a78:	00000001 	andeq	r0, r0, r1
    1a7c:	01000001 	tsteq	r0, r1
    1a80:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1a84:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1a88:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1a8c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1a90:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1a94:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1a98:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 19e4 <__HEAP_SIZE+0x9e4>
    1a9c:	2f6e6f6d 	svccs	0x006e6f6d
    1aa0:	00637273 	rsbeq	r7, r3, r3, ror r2
    1aa4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1aa8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1aac:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1ab0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1ab4:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1ab8:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1abc:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    1ac0:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    1ac4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1ac8:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    1acc:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    1ad0:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    1ad4:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1ad8:	2f2e2e2f 	svccs	0x002e2e2f
    1adc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1a2c <__HEAP_SIZE+0xa2c>
    1ae0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1ae4:	742f736f 	strtvc	r7, [pc], #-879	; 1aec <__HEAP_SIZE+0xaec>
    1ae8:	61657268 	cmnvs	r5, r8, ror #4
    1aec:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1af0:	6f6d6d6f 	svcvs	0x006d6d6f
    1af4:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    1af8:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    1afc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b00:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1b04:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1b08:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1b0c:	2e657a69 	vnmulcs.f32	s15, s10, s19
    1b10:	00010063 	andeq	r0, r1, r3, rrx
    1b14:	5f787400 	svcpl	0x00787400
    1b18:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1b1c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1b20:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1b24:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    1b28:	0300682e 	movweq	r6, #2094	; 0x82e
    1b2c:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1b30:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1b34:	2e646165 	powcssz	f6, f4, f5
    1b38:	00030068 	andeq	r0, r3, r8, rrx
    1b3c:	01050000 	mrseq	r0, (UNDEF: 5)
    1b40:	00020500 	andeq	r0, r2, r0, lsl #10
    1b44:	03000000 	movweq	r0, #0
    1b48:	050102c0 	streq	r0, [r1, #-704]	; 0xfffffd40
    1b4c:	01180305 	tsteq	r8, r5, lsl #6
    1b50:	01062105 	tsteq	r6, r5, lsl #2
    1b54:	03060505 	movweq	r0, #25861	; 0x6505
    1b58:	1d053c2e 	stcne	12, cr3, [r5, #-184]	; 0xffffff48
    1b5c:	01330306 	teqeq	r3, r6, lsl #6
    1b60:	4d031705 	stcmi	7, cr1, [r3, #-20]	; 0xffffffec
    1b64:	0301054a 	movweq	r0, #5450	; 0x154a
    1b68:	0802203f 	stmdaeq	r2, {r0, r1, r2, r3, r4, r5, sp}
    1b6c:	42010100 	andmi	r0, r1, #0, 2
    1b70:	03000002 	movweq	r0, #2
    1b74:	0000c300 	andeq	ip, r0, r0, lsl #6
    1b78:	fb010200 	blx	42382 <SYSTICK_CYCLES+0x33923>
    1b7c:	01000d0e 	tsteq	r0, lr, lsl #26
    1b80:	00010101 	andeq	r0, r1, r1, lsl #2
    1b84:	00010000 	andeq	r0, r1, r0
    1b88:	2e2e0100 	sufcse	f0, f6, f0
    1b8c:	2f2e2e2f 	svccs	0x002e2e2f
    1b90:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1ae0 <__HEAP_SIZE+0xae0>
    1b94:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1b98:	742f736f 	strtvc	r7, [pc], #-879	; 1ba0 <__HEAP_SIZE+0xba0>
    1b9c:	61657268 	cmnvs	r5, r8, ror #4
    1ba0:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1ba4:	6f6d6d6f 	svcvs	0x006d6d6f
    1ba8:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    1bac:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1bb0:	2f2e2e2f 	svccs	0x002e2e2f
    1bb4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1b04 <__HEAP_SIZE+0xb04>
    1bb8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1bbc:	742f736f 	strtvc	r7, [pc], #-879	; 1bc4 <__HEAP_SIZE+0xbc4>
    1bc0:	61657268 	cmnvs	r5, r8, ror #4
    1bc4:	702f7864 	eorvc	r7, pc, r4, ror #16
    1bc8:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    1bcc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    1bd0:	5f786574 	svcpl	0x00786574
    1bd4:	2f33336d 	svccs	0x0033336d
    1bd8:	2f756e67 	svccs	0x00756e67
    1bdc:	00636e69 	rsbeq	r6, r3, r9, ror #28
    1be0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1be4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1be8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1bec:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1bf0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1bf4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1bf8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1b44 <__HEAP_SIZE+0xb44>
    1bfc:	2f6e6f6d 	svccs	0x006e6f6d
    1c00:	00636e69 	rsbeq	r6, r3, r9, ror #28
    1c04:	5f787400 	svcpl	0x00787400
    1c08:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1c0c:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1c10:	6b636174 	blvs	18da1e8 <SYSTEM_CLOCK+0x1321468>
    1c14:	616e615f 	cmnvs	lr, pc, asr r1
    1c18:	657a796c 	ldrbvs	r7, [sl, #-2412]!	; 0xfffff694
    1c1c:	0100632e 	tsteq	r0, lr, lsr #6
    1c20:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1c24:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    1c28:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1c2c:	74000002 	strvc	r0, [r0], #-2
    1c30:	70615f78 	rsbvc	r5, r1, r8, ror pc
    1c34:	00682e69 	rsbeq	r2, r8, r9, ror #28
    1c38:	00000003 	andeq	r0, r0, r3
    1c3c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1c40:	001a2002 	andseq	r2, sl, r2
    1c44:	00c80310 	sbceq	r0, r8, r0, lsl r3
    1c48:	13141401 	tstne	r4, #16777216	; 0x1000000
    1c4c:	05051313 	streq	r1, [r5, #-787]	; 0xfffffced
    1c50:	05020416 	streq	r0, [r2, #-1046]	; 0xfffffbea
    1c54:	03fe0337 	mvnseq	r0, #-603979776	; 0xdc000000
    1c58:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    1c5c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    1c60:	015c0337 	cmpeq	ip, r7, lsr r3
    1c64:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    1c68:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    1c6c:	21030601 	tstcs	r3, r1, lsl #12
    1c70:	01062201 	tsteq	r6, r1, lsl #4
    1c74:	03060104 	movweq	r0, #24836	; 0x6104
    1c78:	05017bfa 	streq	r7, [r1, #-3066]	; 0xfffff406
    1c7c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1c80:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    1c84:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1c88:	0505200c 	streq	r2, [r5, #-12]
    1c8c:	00d90306 	sbcseq	r0, r9, r6, lsl #6
    1c90:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    1c94:	03950337 	orrseq	r0, r5, #-603979776	; 0xdc000000
    1c98:	17050501 	strne	r0, [r5, -r1, lsl #10]
    1c9c:	04202e06 	strteq	r2, [r0], #-3590	; 0xfffff1fa
    1ca0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1ca4:	017c9103 	cmneq	ip, r3, lsl #2
    1ca8:	01061a05 	tsteq	r6, r5, lsl #20
    1cac:	23060d05 	movwcs	r0, #27909	; 0x6d05
    1cb0:	01061005 	tsteq	r6, r5
    1cb4:	67030105 	strvs	r0, [r3, -r5, lsl #2]
    1cb8:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1cbc:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    1cc0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    1cc4:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    1cc8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1ccc:	04240615 	strteq	r0, [r4], #-1557	; 0xfffff9eb
    1cd0:	03370502 	teqeq	r7, #8388608	; 0x800000
    1cd4:	050103dc 	streq	r0, [r1, #-988]	; 0xfffffc24
    1cd8:	01051705 	tsteq	r5, r5, lsl #14
    1cdc:	04203006 	strteq	r3, [r0], #-6
    1ce0:	032a0501 			; <UNDEFINED> instruction: 0x032a0501
    1ce4:	05017cb3 	streq	r7, [r1, #-3251]	; 0xfffff34d
    1ce8:	0523061c 	streq	r0, [r3, #-1564]!	; 0xfffff9e4
    1cec:	06010615 			; <UNDEFINED> instruction: 0x06010615
    1cf0:	052e6b03 	streq	r6, [lr, #-2819]!	; 0xfffff4fd
    1cf4:	2a051619 	bcs	147560 <__RAM_SIZE+0x47560>
    1cf8:	1e050106 	adfnes	f0, f5, f6
    1cfc:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    1d00:	06230521 	strteq	r0, [r3], -r1, lsr #10
    1d04:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    1d08:	061d0531 			; <UNDEFINED> instruction: 0x061d0531
    1d0c:	2e2b0501 	cfsh64cs	mvdx0, mvdx11, #1
    1d10:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
    1d14:	0520322b 	streq	r3, [r0, #-555]!	; 0xfffffdd5
    1d18:	10030619 	andne	r0, r3, r9, lsl r6
    1d1c:	06230520 	strteq	r0, [r3], -r0, lsr #10
    1d20:	061b0501 	ldreq	r0, [fp], -r1, lsl #10
    1d24:	061c051c 			; <UNDEFINED> instruction: 0x061c051c
    1d28:	201b0501 	andscs	r0, fp, r1, lsl #10
    1d2c:	03061505 	movweq	r1, #25861	; 0x6505
    1d30:	02042e0b 	andeq	r2, r4, #11, 28	; 0xb0
    1d34:	be033705 	cdplt	7, 0, cr3, cr3, cr5, {0}
    1d38:	01050103 	tsteq	r5, r3, lsl #2
    1d3c:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    1d40:	5c033705 	stcpl	7, cr3, [r3], {5}
    1d44:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    1d48:	30160505 	andscc	r0, r6, r5, lsl #10
    1d4c:	03060106 	movweq	r0, #24838	; 0x6106
    1d50:	06220121 	strteq	r0, [r2], -r1, lsr #2
    1d54:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1d58:	ba030615 	blt	c35b4 <SYSTICK_CYCLES+0xb4b55>
    1d5c:	2405017c 	strcs	r0, [r5], #-380	; 0xfffffe84
    1d60:	18050106 	stmdane	r5, {r1, r2, r8}
    1d64:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    1d68:	2e1d0306 	cdpcs	3, 1, cr0, cr13, cr6, {0}
    1d6c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    1d70:	01039503 	tsteq	r3, r3, lsl #10
    1d74:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    1d78:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    1d7c:	7ce70301 	stclvc	3, cr0, [r7], #4
    1d80:	19052001 	stmdbne	r5, {r0, sp}
    1d84:	20680306 	rsbcs	r0, r8, r6, lsl #6
    1d88:	01062a05 	tsteq	r6, r5, lsl #20
    1d8c:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    1d90:	0532061d 	ldreq	r0, [r2, #-1565]!	; 0xfffff9e3
    1d94:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    1d98:	21052e20 	tstcs	r5, r0, lsr #28
    1d9c:	25053206 	strcs	r3, [r5, #-518]	; 0xfffffdfa
    1da0:	33050106 	movwcc	r0, #20742	; 0x5106
    1da4:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
    1da8:	32062505 	andcc	r2, r6, #20971520	; 0x1400000
    1dac:	01064f05 	tsteq	r6, r5, lsl #30
    1db0:	01000602 	tsteq	r0, r2, lsl #12
    1db4:	00014501 	andeq	r4, r1, r1, lsl #10
    1db8:	d8000300 	stmdale	r0, {r8, r9}
    1dbc:	02000000 	andeq	r0, r0, #0
    1dc0:	0d0efb01 	vstreq	d15, [lr, #-4]
    1dc4:	01010100 	mrseq	r0, (UNDEF: 17)
    1dc8:	00000001 	andeq	r0, r0, r1
    1dcc:	01000001 	tsteq	r0, r1
    1dd0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1dd4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1dd8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1ddc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1de0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1de4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1de8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1d34 <__HEAP_SIZE+0xd34>
    1dec:	2f6e6f6d 	svccs	0x006e6f6d
    1df0:	00637273 	rsbeq	r7, r3, r3, ror r2
    1df4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1df8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1dfc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1e00:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1e04:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1e08:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1e0c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    1e10:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    1e14:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1e18:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    1e1c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    1e20:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    1e24:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1e28:	2f2e2e2f 	svccs	0x002e2e2f
    1e2c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1d7c <__HEAP_SIZE+0xd7c>
    1e30:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1e34:	742f736f 	strtvc	r7, [pc], #-879	; 1e3c <__HEAP_SIZE+0xe3c>
    1e38:	61657268 	cmnvs	r5, r8, ror #4
    1e3c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1e40:	6f6d6d6f 	svcvs	0x006d6d6f
    1e44:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    1e48:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    1e4c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e50:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1e54:	6174735f 	cmnvs	r4, pc, asr r3
    1e58:	655f6b63 	ldrbvs	r6, [pc, #-2915]	; 12fd <__HEAP_SIZE+0x2fd>
    1e5c:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1e60:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    1e64:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1e68:	0100632e 	tsteq	r0, lr, lsr #6
    1e6c:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1e70:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    1e74:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1e78:	74000002 	strvc	r0, [r0], #-2
    1e7c:	70615f78 	rsbvc	r5, r1, r8, ror pc
    1e80:	00682e69 	rsbeq	r2, r8, r9, ror #28
    1e84:	74000003 	strvc	r0, [r0], #-3
    1e88:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e8c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1e90:	0300682e 	movweq	r6, #2094	; 0x82e
    1e94:	05000000 	streq	r0, [r0, #-0]
    1e98:	02050001 	andeq	r0, r5, #1
    1e9c:	10001aac 	andne	r1, r0, ip, lsr #21
    1ea0:	0100d403 	tsteq	r0, r3, lsl #8
    1ea4:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    1ea8:	04170505 	ldreq	r0, [r7], #-1285	; 0xfffffafb
    1eac:	03370502 	teqeq	r7, #8388608	; 0x800000
    1eb0:	050103f6 	streq	r0, [r1, #-1014]	; 0xfffffc0a
    1eb4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    1eb8:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    1ebc:	0105015c 	tsteq	r5, ip, asr r1
    1ec0:	16050514 			; <UNDEFINED> instruction: 0x16050514
    1ec4:	06010630 			; <UNDEFINED> instruction: 0x06010630
    1ec8:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    1ecc:	01040106 	tsteq	r4, r6, lsl #2
    1ed0:	7c820306 	stcvc	3, cr0, [r2], {6}
    1ed4:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    1ed8:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    1edc:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    1ee0:	04240505 	strteq	r0, [r4], #-1285	; 0xfffffafb
    1ee4:	03370502 	teqeq	r7, #8388608	; 0x800000
    1ee8:	050103e2 	streq	r0, [r1, #-994]	; 0xfffffc1e
    1eec:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1ef0:	01050104 	tsteq	r5, r4, lsl #2
    1ef4:	017ca803 	cmneq	ip, r3, lsl #16
    1ef8:	00030220 	andeq	r0, r3, r0, lsr #4
    1efc:	07d80101 	ldrbeq	r0, [r8, r1, lsl #2]
    1f00:	00030000 	andeq	r0, r3, r0
    1f04:	000000e0 	andeq	r0, r0, r0, ror #1
    1f08:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1f0c:	0101000d 	tsteq	r1, sp
    1f10:	00000101 	andeq	r0, r0, r1, lsl #2
    1f14:	00000100 	andeq	r0, r0, r0, lsl #2
    1f18:	2f2e2e01 	svccs	0x002e2e01
    1f1c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1f20:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1f24:	6f747262 	svcvs	0x00747262
    1f28:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f2c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f30:	6f632f78 	svcvs	0x00632f78
    1f34:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1f38:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1f3c:	2f2e2e00 	svccs	0x002e2e00
    1f40:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1f44:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1f48:	6f747262 	svcvs	0x00747262
    1f4c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f50:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f54:	6f702f78 	svcvs	0x00702f78
    1f58:	2f737472 	svccs	0x00737472
    1f5c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1f60:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 1dd4 <__HEAP_SIZE+0xdd4>
    1f64:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    1f68:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    1f6c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    1f70:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1f74:	2f2e2e2f 	svccs	0x002e2e2f
    1f78:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1f7c:	2f736f74 	svccs	0x00736f74
    1f80:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1f84:	2f786461 	svccs	0x00786461
    1f88:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1f8c:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1f90:	0000636e 	andeq	r6, r0, lr, ror #6
    1f94:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1f9c <__HEAP_SIZE+0xf9c>
    1f98:	61657268 	cmnvs	r5, r8, ror #4
    1f9c:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1fa0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1fa4:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    1fa8:	2e656d75 	mcrcs	13, 3, r6, cr5, cr5, {3}
    1fac:	00010063 	andeq	r0, r1, r3, rrx
    1fb0:	5f787400 	svcpl	0x00787400
    1fb4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1fb8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1fbc:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1fc0:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    1fc4:	0300682e 	movweq	r6, #2094	; 0x82e
    1fc8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1fcc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1fd0:	2e646165 	powcssz	f6, f4, f5
    1fd4:	00030068 	andeq	r0, r3, r8, rrx
    1fd8:	5f787400 	svcpl	0x00787400
    1fdc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1fe0:	00682e72 	rsbeq	r2, r8, r2, ror lr
    1fe4:	00000003 	andeq	r0, r0, r3
    1fe8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1fec:	001ac802 	andseq	ip, sl, r2, lsl #16
    1ff0:	04ee0310 	strbteq	r0, [lr], #784	; 0x310
    1ff4:	06010601 	streq	r0, [r1], -r1, lsl #12
    1ff8:	13131330 	tstne	r3, #48, 6	; 0xc0000000
    1ffc:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    2000:	01260305 			; <UNDEFINED> instruction: 0x01260305
    2004:	01062605 	tsteq	r6, r5, lsl #12
    2008:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    200c:	06240609 	strteq	r0, [r4], -r9, lsl #12
    2010:	06050520 	streq	r0, [r5], -r0, lsr #10
    2014:	02040135 	andeq	r0, r4, #1073741837	; 0x4000000d
    2018:	aa033705 	bge	cfc34 <SYSTICK_CYCLES+0xc11d5>
    201c:	0105017f 	tsteq	r5, pc, ror r1
    2020:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    2024:	5c033705 	stcpl	7, cr3, [r3], {5}
    2028:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    202c:	30160505 	andscc	r0, r6, r5, lsl #10
    2030:	03060106 	movweq	r0, #24838	; 0x6106
    2034:	06220121 	strteq	r0, [r2], -r1, lsr #2
    2038:	06010401 	streq	r0, [r1], -r1, lsl #8
    203c:	0100cb03 	tsteq	r0, r3, lsl #22
    2040:	01040200 	mrseq	r0, R12_usr
    2044:	02002006 	andeq	r2, r0, #6
    2048:	4a061104 	bmi	186460 <__RAM_SIZE+0x86460>
    204c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2050:	11040200 	mrsne	r0, R12_usr
    2054:	017fa103 	cmneq	pc, r3, lsl #2
    2058:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    205c:	00171104 	andseq	r1, r7, r4, lsl #2
    2060:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    2064:	0001042e 	andeq	r0, r1, lr, lsr #8
    2068:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    206c:	0100df03 	tsteq	r0, r3, lsl #30
    2070:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    2074:	01061104 	tsteq	r6, r4, lsl #2
    2078:	02000805 	andeq	r0, r0, #327680	; 0x50000
    207c:	05201104 	streq	r1, [r0, #-260]!	; 0xfffffefc
    2080:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    2084:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2088:	0d05200c 	stceq	0, cr2, [r5, #-48]	; 0xffffffd0
    208c:	2b054406 	blcs	1530ac <__RAM_SIZE+0x530ac>
    2090:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2094:	20090306 	andcs	r0, r9, r6, lsl #6
    2098:	01061605 	tsteq	r6, r5, lsl #12
    209c:	25060d05 	strcs	r0, [r6, #-3333]	; 0xfffff2fb
    20a0:	01063005 	tsteq	r6, r5
    20a4:	4d060d05 	stcmi	13, cr0, [r6, #-20]	; 0xffffffec
    20a8:	01061805 	tsteq	r6, r5, lsl #16
    20ac:	052e3d05 	streq	r3, [lr, #-3333]!	; 0xfffff2fb
    20b0:	0541060d 	strbeq	r0, [r1, #-1549]	; 0xfffff9f3
    20b4:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    20b8:	053d060d 	ldreq	r0, [sp, #-1549]!	; 0xfffff9f3
    20bc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    20c0:	bb030611 	bllt	c390c <SYSTICK_CYCLES+0xb4ead>
    20c4:	1a052e01 	bne	14d8d0 <__RAM_SIZE+0x4d8d0>
    20c8:	11050106 	tstne	r5, r6, lsl #2
    20cc:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    20d0:	11050106 	tstne	r5, r6, lsl #2
    20d4:	36052106 	strcc	r2, [r5], -r6, lsl #2
    20d8:	11050106 	tstne	r5, r6, lsl #2
    20dc:	38052106 	stmdacc	r5, {r1, r2, r8, sp}
    20e0:	11050106 	tstne	r5, r6, lsl #2
    20e4:	34052106 	strcc	r2, [r5], #-262	; 0xfffffefa
    20e8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    20ec:	03040200 	movweq	r0, #16896	; 0x4200
    20f0:	7e990306 	cdpvc	3, 9, cr0, cr9, cr6, {0}
    20f4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    20f8:	02005805 	andeq	r5, r0, #327680	; 0x50000
    20fc:	002e0704 	eoreq	r0, lr, r4, lsl #14
    2100:	06090402 	streq	r0, [r9], -r2, lsl #8
    2104:	04580666 	ldrbeq	r0, [r8], #-1638	; 0xfffff99a
    2108:	03370502 	teqeq	r7, #8388608	; 0x800000
    210c:	05017fa1 	streq	r7, [r1, #-4001]	; 0xfffff05f
    2110:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2114:	03060104 	movweq	r0, #24836	; 0x6104
    2118:	3c0100da 	stccc	0, cr0, [r1], {218}	; 0xda
    211c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2120:	017faa03 	cmneq	pc, r3, lsl #20
    2124:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2128:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    212c:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    2130:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2134:	01063016 	tsteq	r6, r6, lsl r0
    2138:	01210306 			; <UNDEFINED> instruction: 0x01210306
    213c:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    2140:	04020001 	streq	r0, [r2], #-1
    2144:	cb03060e 	blgt	c3984 <SYSTICK_CYCLES+0xb4f25>
    2148:	04820100 	streq	r0, [r2], #256	; 0x100
    214c:	03370502 	teqeq	r7, #8388608	; 0x800000
    2150:	05017fa1 	streq	r7, [r1, #-4001]	; 0xfffff05f
    2154:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2158:	03060104 	movweq	r0, #24836	; 0x6104
    215c:	3c0100da 	stccc	0, cr0, [r1], {218}	; 0xda
    2160:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2164:	017faa03 	cmneq	pc, r3, lsl #20
    2168:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    216c:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    2170:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    2174:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2178:	01063016 	tsteq	r6, r6, lsl r0
    217c:	01210306 			; <UNDEFINED> instruction: 0x01210306
    2180:	20010622 	andcs	r0, r1, r2, lsr #12
    2184:	02000104 	andeq	r0, r0, #4, 2
    2188:	cb030b04 	blgt	c4da0 <SYSTICK_CYCLES+0xb6341>
    218c:	02000100 	andeq	r0, r0, #0, 2
    2190:	05580b04 	ldrbeq	r0, [r8, #-2820]	; 0xfffff4fc
    2194:	2c030611 	stccs	6, cr0, [r3], {17}
    2198:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    219c:	11052001 	tstne	r5, r1
    21a0:	34052f06 	strcc	r2, [r5], #-3846	; 0xfffff0fa
    21a4:	11050106 	tstne	r5, r6, lsl #2
    21a8:	38052106 	stmdacc	r5, {r1, r2, r8, sp}
    21ac:	11050106 	tstne	r5, r6, lsl #2
    21b0:	200d0306 	andcs	r0, sp, r6, lsl #6
    21b4:	0650053d 			; <UNDEFINED> instruction: 0x0650053d
    21b8:	2e5c0501 	cdpcs	5, 5, cr0, cr12, cr1, {0}
    21bc:	05203505 	streq	r3, [r0, #-1285]!	; 0xfffffafb
    21c0:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    21c4:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    21c8:	15052e14 	strne	r2, [r5, #-3604]	; 0xfffff1ec
    21cc:	31054206 	tstcc	r5, r6, lsl #4
    21d0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    21d4:	21053206 	tstcs	r5, r6, lsl #4
    21d8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    21dc:	18053106 	stmdane	r5, {r1, r2, r8, ip, sp}
    21e0:	19050106 	stmdbne	r5, {r1, r2, r8}
    21e4:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    21e8:	01063405 	tsteq	r6, r5, lsl #8
    21ec:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    21f0:	1c03061d 	stcne	6, cr0, [r3], {29}
    21f4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    21f8:	7de00337 	stclvc	3, cr0, [r0, #220]!	; 0xdc
    21fc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2200:	2f130505 	svccs	0x00130505
    2204:	01040106 	tsteq	r4, r6, lsl #2
    2208:	9c032105 	stflss	f2, [r3], {5}
    220c:	20050102 	andcs	r0, r5, r2, lsl #2
    2210:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    2214:	06520532 			; <UNDEFINED> instruction: 0x06520532
    2218:	06210501 	strteq	r0, [r1], -r1, lsl #10
    221c:	062d054d 	strteq	r0, [sp], -sp, asr #10
    2220:	2e600501 	cdpcs	5, 6, cr0, cr0, cr1, {0}
    2224:	03061d05 	movweq	r1, #27909	; 0x6d05
    2228:	59053c11 	stmdbpl	r5, {r0, r4, sl, fp, ip, sp}
    222c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    2230:	34053206 	strcc	r3, [r5], #-518	; 0xfffffdfa
    2234:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2238:	0903061d 	stmdbeq	r3, {r0, r2, r3, r4, r9, sl}
    223c:	06430520 	strbeq	r0, [r3], -r0, lsr #10
    2240:	58200501 	stmdapl	r0!, {r0, r8, sl}
    2244:	32062105 	andcc	r2, r6, #1073741825	; 0x40000001
    2248:	01064a05 	tsteq	r6, r5, lsl #20
    224c:	3f062105 	svccc	0x00062105
    2250:	01062405 	tsteq	r6, r5, lsl #8
    2254:	32062505 	andcc	r2, r6, #20971520	; 0x1400000
    2258:	01064f05 	tsteq	r6, r5, lsl #30
    225c:	40062105 	andmi	r2, r6, r5, lsl #2
    2260:	01064305 	tsteq	r6, r5, lsl #6
    2264:	052e6f05 	streq	r6, [lr, #-3845]!	; 0xfffff0fb
    2268:	1a03061d 	bne	c3ae4 <SYSTICK_CYCLES+0xb5085>
    226c:	0401153c 	streq	r1, [r1], #-1340	; 0xfffffac4
    2270:	03370502 	teqeq	r7, #8388608	; 0x800000
    2274:	05017de7 	streq	r7, [r1, #-3559]	; 0xfffff219
    2278:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    227c:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    2280:	0105015c 	tsteq	r5, ip, asr r1
    2284:	16050514 			; <UNDEFINED> instruction: 0x16050514
    2288:	06010630 			; <UNDEFINED> instruction: 0x06010630
    228c:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    2290:	01040106 	tsteq	r4, r6, lsl #2
    2294:	03061d05 	movweq	r1, #27909	; 0x6d05
    2298:	0001028e 	andeq	r0, r1, lr, lsl #5
    229c:	06010402 	streq	r0, [r1], -r2, lsl #8
    22a0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    22a4:	044a0611 	strbeq	r0, [sl], #-1553	; 0xfffff9ef
    22a8:	00370502 	eorseq	r0, r7, r2, lsl #10
    22ac:	03110402 	tsteq	r1, #33554432	; 0x2000000
    22b0:	05017dde 	streq	r7, [r1, #-3550]	; 0xfffff222
    22b4:	04020005 	streq	r0, [r2], #-5
    22b8:	02001711 	andeq	r1, r0, #4456448	; 0x440000
    22bc:	2e061104 	adfcss	f1, f6, f4
    22c0:	1d050104 	stfnes	f0, [r5, #-16]
    22c4:	11040200 	mrsne	r0, R12_usr
    22c8:	02a20306 	adceq	r0, r2, #402653184	; 0x18000000
    22cc:	04020001 	streq	r0, [r2], #-1
    22d0:	00200611 	eoreq	r0, r0, r1, lsl r6
    22d4:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    22d8:	00200521 	eoreq	r0, r0, r1, lsr #10
    22dc:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    22e0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    22e4:	064d0542 	strbeq	r0, [sp], -r2, asr #10
    22e8:	21052e01 	tstcs	r5, r1, lsl #28
    22ec:	02043206 	andeq	r3, r4, #1610612736	; 0x60000000
    22f0:	e5033705 	str	r3, [r3, #-1797]	; 0xfffff8fb
    22f4:	0105017d 	tsteq	r5, sp, ror r1
    22f8:	15050514 	strne	r0, [r5, #-1300]	; 0xfffffaec
    22fc:	01062605 	tsteq	r6, r5, lsl #12
    2300:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    2304:	94033705 	strls	r3, [r3], #-1797	; 0xfffff8fb
    2308:	0105017f 	tsteq	r5, pc, ror r1
    230c:	13050514 	movwne	r0, #21780	; 0x5514
    2310:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    2314:	00e80308 	rsceq	r0, r8, r8, lsl #6
    2318:	06090501 	streq	r0, [r9], -r1, lsl #10
    231c:	0337053e 	teqeq	r7, #260046848	; 0xf800000
    2320:	0105014a 	tsteq	r5, sl, asr #2
    2324:	16050514 			; <UNDEFINED> instruction: 0x16050514
    2328:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    232c:	32030609 	andcc	r0, r3, #9437184	; 0x900000
    2330:	03370501 	teqeq	r7, #4194304	; 0x400000
    2334:	05050157 	streq	r0, [r5, #-343]	; 0xfffffea9
    2338:	03090514 	movweq	r0, #38164	; 0x9514
    233c:	37052029 	strcc	r2, [r5, -r9, lsr #32]
    2340:	05015b03 	streq	r5, [r1, #-2819]	; 0xfffff4fd
    2344:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2348:	1d050104 	stfnes	f0, [r5, #-16]
    234c:	02b10306 	adcseq	r0, r1, #402653184	; 0x18000000
    2350:	03190501 	tsteq	r9, #4194304	; 0x400000
    2354:	05207ef9 	streq	r7, [r0, #-3833]!	; 0xfffff107
    2358:	20010630 	andcs	r0, r1, r0, lsr r6
    235c:	06210520 	strteq	r0, [r1], -r0, lsr #10
    2360:	04202e03 	strteq	r2, [r0], #-3587	; 0xfffff1fd
    2364:	03370502 	teqeq	r7, #8388608	; 0x800000
    2368:	05017dd4 	streq	r7, [r1, #-3540]	; 0xfffff22c
    236c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2370:	01062f13 	tsteq	r6, r3, lsl pc
    2374:	25050104 	strcs	r0, [r5, #-260]	; 0xfffffefc
    2378:	0102a803 	tsteq	r2, r3, lsl #16
    237c:	053c2405 	ldreq	r2, [ip, #-1029]!	; 0xfffffbfb
    2380:	05400625 	strbeq	r0, [r0, #-1573]	; 0xfffff9db
    2384:	05010656 	streq	r0, [r1, #-1622]	; 0xfffff9aa
    2388:	054d0625 	strbeq	r0, [sp, #-1573]	; 0xfffff9db
    238c:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    2390:	1d052e64 	stcne	14, cr2, [r5, #-400]	; 0xfffffe70
    2394:	03040200 	movweq	r0, #16896	; 0x4200
    2398:	4a3e0306 	bmi	f82fb8 <SYSTEM_CLOCK+0x9ca238>
    239c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    23a0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    23a4:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    23a8:	66060904 	strvs	r0, [r6], -r4, lsl #18
    23ac:	02045806 	andeq	r5, r4, #393216	; 0x60000
    23b0:	de033705 	cdple	7, 0, cr3, cr3, cr5, {0}
    23b4:	0505017d 	streq	r0, [r5, #-381]	; 0xfffffe83
    23b8:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    23bc:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    23c0:	01029d03 	tsteq	r2, r3, lsl #26
    23c4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    23c8:	7de70337 	stclvc	3, cr0, [r7, #220]!	; 0xdc
    23cc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    23d0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    23d4:	015c0337 	cmpeq	ip, r7, lsr r3
    23d8:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    23dc:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    23e0:	21030601 	tstcs	r3, r1, lsl #12
    23e4:	01062201 	tsteq	r6, r1, lsl #4
    23e8:	1d050104 	stfnes	f0, [r5, #-16]
    23ec:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    23f0:	028e0306 	addeq	r0, lr, #402653184	; 0x18000000
    23f4:	02048201 	andeq	r8, r4, #268435456	; 0x10000000
    23f8:	de033705 	cdple	7, 0, cr3, cr3, cr5, {0}
    23fc:	0505017d 	streq	r0, [r5, #-381]	; 0xfffffe83
    2400:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2404:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    2408:	01029d03 	tsteq	r2, r3, lsl #26
    240c:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    2410:	7de70337 	stclvc	3, cr0, [r7, #220]!	; 0xdc
    2414:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2418:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    241c:	015c0337 	cmpeq	ip, r7, lsr r3
    2420:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2424:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    2428:	21030601 	tstcs	r3, r1, lsl #12
    242c:	01062201 	tsteq	r6, r1, lsl #4
    2430:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    2434:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2438:	028e030b 	addeq	r0, lr, #738197504	; 0x2c000000
    243c:	04020001 	streq	r0, [r2], #-1
    2440:	0d05580b 	stceq	8, cr5, [r5, #-44]	; 0xffffffd4
    2444:	012d0306 			; <UNDEFINED> instruction: 0x012d0306
    2448:	01063505 	tsteq	r6, r5, lsl #10
    244c:	2f060d05 	svccs	0x00060d05
    2450:	01062b05 	tsteq	r6, r5, lsl #22
    2454:	35060505 	strcc	r0, [r6, #-1285]	; 0xfffffafb
    2458:	01062b05 	tsteq	r6, r5, lsl #22
    245c:	05585705 	ldrbeq	r5, [r8, #-1797]	; 0xfffff8fb
    2460:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
    2464:	32053206 	andcc	r3, r5, #1610612736	; 0x60000000
    2468:	09050106 	stmdbeq	r5, {r1, r2, r8}
    246c:	0c053f06 	stceq	15, cr3, [r5], {6}
    2470:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2474:	37053206 	strcc	r3, [r5, -r6, lsl #4]
    2478:	09050106 	stmdbeq	r5, {r1, r2, r8}
    247c:	2b054006 	blcs	15249c <__RAM_SIZE+0x5249c>
    2480:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    2484:	0605052e 	streq	r0, [r5], -lr, lsr #10
    2488:	313c1c03 	teqcc	ip, r3, lsl #24
    248c:	01060805 	tsteq	r6, r5, lsl #16
    2490:	34060905 	strcc	r0, [r6], #-2309	; 0xfffff6fb
    2494:	02040115 	andeq	r0, r4, #1073741829	; 0x40000005
    2498:	fb033705 	blx	d00b6 <SYSTICK_CYCLES+0xc1657>
    249c:	0105017c 	tsteq	r5, ip, ror r1
    24a0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    24a4:	5c033705 	stcpl	7, cr3, [r3], {5}
    24a8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    24ac:	30160505 	andscc	r0, r6, r5, lsl #10
    24b0:	03060106 	movweq	r0, #24838	; 0x6106
    24b4:	06220121 	strteq	r0, [r2], -r1, lsr #2
    24b8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    24bc:	fa030609 	blx	c3ce8 <SYSTICK_CYCLES+0xb5289>
    24c0:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    24c4:	20060104 	andcs	r0, r6, r4, lsl #2
    24c8:	11040200 	mrsne	r0, R12_usr
    24cc:	02044a06 	andeq	r4, r4, #24576	; 0x6000
    24d0:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    24d4:	f2031104 	vrhadd.s8	d1, d3, d4
    24d8:	0505017c 	streq	r0, [r5, #-380]	; 0xfffffe84
    24dc:	11040200 	mrsne	r0, R12_usr
    24e0:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    24e4:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    24e8:	00090501 	andeq	r0, r9, r1, lsl #10
    24ec:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    24f0:	01038e03 	tsteq	r3, r3, lsl #28
    24f4:	11040200 	mrsne	r0, R12_usr
    24f8:	02002006 	andeq	r2, r0, #6
    24fc:	21061104 	tstcs	r6, r4, lsl #2
    2500:	02000c05 	andeq	r0, r0, #1280	; 0x500
    2504:	01061104 	tsteq	r6, r4, lsl #2
    2508:	26060d05 	strcs	r0, [r6], -r5, lsl #26
    250c:	01063905 	tsteq	r6, r5, lsl #18
    2510:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2514:	05020432 	streq	r0, [r2, #-1074]	; 0xfffffbce
    2518:	7cf90337 	ldclvc	3, cr0, [r9], #220	; 0xdc
    251c:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2520:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    2524:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    2528:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    252c:	7f940337 	svcvc	0x00940337
    2530:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2534:	2f130505 	svccs	0x00130505
    2538:	08050106 	stmdaeq	r5, {r1, r2, r8}
    253c:	0100e803 	tsteq	r0, r3, lsl #16
    2540:	22060905 	andcs	r0, r6, #81920	; 0x14000
    2544:	4a033705 	bmi	d0160 <SYSTICK_CYCLES+0xc1701>
    2548:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    254c:	30160505 	andscc	r0, r6, r5, lsl #10
    2550:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2554:	01320306 	teqeq	r2, r6, lsl #6
    2558:	57033705 	strpl	r3, [r3, -r5, lsl #14]
    255c:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    2560:	29030905 	stmdbcs	r3, {r0, r2, r8, fp}
    2564:	03370520 	teqeq	r7, #32, 10	; 0x8000000
    2568:	0505015b 	streq	r0, [r5, #-347]	; 0xfffffea5
    256c:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2570:	03010501 	movweq	r0, #5377	; 0x1501
    2574:	0501039c 	streq	r0, [r1, #-924]	; 0xfffffc64
    2578:	04020009 	streq	r0, [r2], #-9
    257c:	6d030603 	stcvs	6, cr0, [r3, #-12]
    2580:	0200ba08 	andeq	fp, r0, #8, 20	; 0x8000
    2584:	00580504 	subseq	r0, r8, r4, lsl #10
    2588:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    258c:	09040200 	stmdbeq	r4, {r9}
    2590:	58066606 	stmdapl	r6, {r1, r2, r9, sl, sp, lr}
    2594:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2598:	017cf203 	cmneq	ip, r3, lsl #4	; <UNPREDICTABLE>
    259c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    25a0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    25a4:	89030609 	stmdbhi	r3, {r0, r3, r9, sl}
    25a8:	043c0103 	ldrteq	r0, [ip], #-259	; 0xfffffefd
    25ac:	03370502 	teqeq	r7, #8388608	; 0x800000
    25b0:	05017cfb 	streq	r7, [r1, #-3323]	; 0xfffff305
    25b4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    25b8:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    25bc:	0105015c 	tsteq	r5, ip, asr r1
    25c0:	16050514 			; <UNDEFINED> instruction: 0x16050514
    25c4:	06010630 			; <UNDEFINED> instruction: 0x06010630
    25c8:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    25cc:	01040106 	tsteq	r4, r6, lsl #2
    25d0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    25d4:	03060e04 	movweq	r0, #28164	; 0x6e04
    25d8:	820102fa 	andhi	r0, r1, #-1610612721	; 0xa000000f
    25dc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    25e0:	017cf203 	cmneq	ip, r3, lsl #4	; <UNPREDICTABLE>
    25e4:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    25e8:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    25ec:	89030609 	stmdbhi	r3, {r0, r3, r9, sl}
    25f0:	043c0103 	ldrteq	r0, [ip], #-259	; 0xfffffefd
    25f4:	03370502 	teqeq	r7, #8388608	; 0x800000
    25f8:	05017cfb 	streq	r7, [r1, #-3323]	; 0xfffff305
    25fc:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2600:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    2604:	0105015c 	tsteq	r5, ip, asr r1
    2608:	16050514 			; <UNDEFINED> instruction: 0x16050514
    260c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    2610:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    2614:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    2618:	00090501 	andeq	r0, r9, r1, lsl #10
    261c:	030b0402 	movweq	r0, #46082	; 0xb402
    2620:	020102fa 	andeq	r0, r1, #-1610612721	; 0xa000000f
    2624:	01010005 	tsteq	r1, r5
    2628:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    262c:	00000002 	andeq	r0, r0, r2
    2630:	049c0300 	ldreq	r0, [ip], #768	; 0x300
    2634:	06010601 	streq	r0, [r1], -r1, lsl #12
    2638:	05051622 	streq	r1, [r5, #-1570]	; 0xfffff9de
    263c:	05020416 	streq	r0, [r2, #-1046]	; 0xfffffbea
    2640:	012b0337 			; <UNDEFINED> instruction: 0x012b0337
    2644:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2648:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    264c:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    2650:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2654:	01063016 	tsteq	r6, r6, lsl r0
    2658:	01210306 			; <UNDEFINED> instruction: 0x01210306
    265c:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    2660:	4d030601 	stcmi	6, cr0, [r3, #-4]
    2664:	061f0501 	ldreq	r0, [pc], -r1, lsl #10
    2668:	06050501 	streq	r0, [r5], -r1, lsl #10
    266c:	0614054e 	ldreq	r0, [r4], -lr, asr #10
    2670:	20080501 	andcs	r0, r8, r1, lsl #10
    2674:	03060905 	movweq	r0, #26885	; 0x6905
    2678:	0f05200c 	svceq	0x0005200c
    267c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2680:	200e0306 	andcs	r0, lr, r6, lsl #6
    2684:	01060c05 	tsteq	r6, r5, lsl #24
    2688:	32060d05 	andcc	r0, r6, #320	; 0x140
    268c:	01061005 	tsteq	r6, r5
    2690:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    2694:	01063405 	tsteq	r6, r5, lsl #8
    2698:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    269c:	062f0523 	strteq	r0, [pc], -r3, lsr #10
    26a0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    26a4:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    26a8:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    26ac:	054d0611 	strbeq	r0, [sp, #-1553]	; 0xfffff9ef
    26b0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    26b4:	09052e41 	stmdbeq	r5, {r0, r6, r9, sl, fp, sp}
    26b8:	4a510306 	bmi	14432d8 <SYSTEM_CLOCK+0xe8a558>
    26bc:	36030505 	strcc	r0, [r3], -r5, lsl #10
    26c0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    26c4:	01610337 	cmneq	r1, r7, lsr r3
    26c8:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    26cc:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    26d0:	011b0301 	tsteq	fp, r1, lsl #6
    26d4:	00050220 	andeq	r0, r5, r0, lsr #4
    26d8:	04690101 	strbteq	r0, [r9], #-257	; 0xfffffeff
    26dc:	00030000 	andeq	r0, r3, r0
    26e0:	000000dd 	ldrdeq	r0, [r0], -sp
    26e4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    26e8:	0101000d 	tsteq	r1, sp
    26ec:	00000101 	andeq	r0, r0, r1, lsl #2
    26f0:	00000100 	andeq	r0, r0, r0, lsl #2
    26f4:	2f2e2e01 	svccs	0x002e2e01
    26f8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    26fc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2700:	6f747262 	svcvs	0x00747262
    2704:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2708:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    270c:	6f632f78 	svcvs	0x00632f78
    2710:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2714:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2718:	2f2e2e00 	svccs	0x002e2e00
    271c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2720:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2724:	6f747262 	svcvs	0x00747262
    2728:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    272c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2730:	6f702f78 	svcvs	0x00702f78
    2734:	2f737472 	svccs	0x00737472
    2738:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    273c:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 25b0 <__HEAP_SIZE+0x15b0>
    2740:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    2744:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2748:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    274c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2750:	2f2e2e2f 	svccs	0x002e2e2f
    2754:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2758:	2f736f74 	svccs	0x00736f74
    275c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2760:	2f786461 	svccs	0x00786461
    2764:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2768:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    276c:	0000636e 	andeq	r6, r0, lr, ror #6
    2770:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2778 <__HEAP_SIZE+0x1778>
    2774:	61657268 	cmnvs	r5, r8, ror #4
    2778:	69745f64 	ldmdbvs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    277c:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
    2780:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
    2784:	0100632e 	tsteq	r0, lr, lsr #6
    2788:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    278c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    2790:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2794:	74000002 	strvc	r0, [r0], #-2
    2798:	70615f78 	rsbvc	r5, r1, r8, ror pc
    279c:	00682e69 	rsbeq	r2, r8, r9, ror #28
    27a0:	74000003 	strvc	r0, [r0], #-3
    27a4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    27a8:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    27ac:	00030068 	andeq	r0, r3, r8, rrx
    27b0:	5f787400 	svcpl	0x00787400
    27b4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    27b8:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    27bc:	00000300 	andeq	r0, r0, r0, lsl #6
    27c0:	00010500 	andeq	r0, r1, r0, lsl #10
    27c4:	1df00205 	lfmne	f0, 2, [r0, #20]!
    27c8:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
    27cc:	14220100 	strtne	r0, [r2], #-256	; 0xffffff00
    27d0:	1a050514 	bne	143c28 <__RAM_SIZE+0x43c28>
    27d4:	02040133 	andeq	r0, r4, #-1073741812	; 0xc000000c
    27d8:	f0033705 			; <UNDEFINED> instruction: 0xf0033705
    27dc:	01050103 	tsteq	r5, r3, lsl #2
    27e0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    27e4:	5c033705 	stcpl	7, cr3, [r3], {5}
    27e8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    27ec:	30160505 	andscc	r0, r6, r5, lsl #10
    27f0:	03060106 	movweq	r0, #24838	; 0x6106
    27f4:	06220121 	strteq	r0, [r2], -r1, lsr #2
    27f8:	06010401 	streq	r0, [r1], -r1, lsl #8
    27fc:	017c8503 	cmneq	ip, r3, lsl #10
    2800:	01040200 	mrseq	r0, R12_usr
    2804:	02002006 	andeq	r2, r0, #6
    2808:	4a061104 	bmi	186c20 <__RAM_SIZE+0x86c20>
    280c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2810:	11040200 	mrsne	r0, R12_usr
    2814:	0103e703 	tsteq	r3, r3, lsl #14
    2818:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    281c:	00171104 	andseq	r1, r7, r4, lsl #2
    2820:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    2824:	0001042e 	andeq	r0, r1, lr, lsr #8
    2828:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    282c:	017c9703 	cmneq	ip, r3, lsl #14
    2830:	11040200 	mrsne	r0, R12_usr
    2834:	05020416 	streq	r0, [r2, #-1046]	; 0xfffffbea
    2838:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    283c:	03e90311 	mvneq	r0, #1140850688	; 0x44000000
    2840:	00010501 	andeq	r0, r1, r1, lsl #10
    2844:	14110402 	ldrne	r0, [r1], #-1026	; 0xfffffbfe
    2848:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    284c:	05141104 	ldreq	r1, [r4, #-260]	; 0xfffffefc
    2850:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    2854:	015c0311 	cmpeq	ip, r1, lsl r3
    2858:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    285c:	05141104 	ldreq	r1, [r4, #-260]	; 0xfffffefc
    2860:	04020005 	streq	r0, [r2], #-5
    2864:	02001611 	andeq	r1, r0, #17825792	; 0x1100000
    2868:	00301104 	eorseq	r1, r0, r4, lsl #2
    286c:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    2870:	04020001 	streq	r0, [r2], #-1
    2874:	21030611 	tstcs	r3, r1, lsl r6
    2878:	04020001 	streq	r0, [r2], #-1
    287c:	02002211 	andeq	r2, r0, #268435457	; 0x10000001
    2880:	01061104 	tsteq	r6, r4, lsl #2
    2884:	02000104 	andeq	r0, r0, #4, 2
    2888:	03061104 	movweq	r1, #24836	; 0x6104
    288c:	05017c8f 	streq	r7, [r1, #-3215]	; 0xfffff371
    2890:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    2894:	00010611 	andeq	r0, r1, r1, lsl r6
    2898:	20110402 	andscs	r0, r1, r2, lsl #8
    289c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    28a0:	31061104 	tstcc	r6, r4, lsl #2
    28a4:	02000805 	andeq	r0, r0, #327680	; 0x50000
    28a8:	01061104 	tsteq	r6, r4, lsl #2
    28ac:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    28b0:	01061805 	tsteq	r6, r5, lsl #16
    28b4:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    28b8:	3c030605 	stccc	6, cr0, [r3], {5}
    28bc:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
    28c0:	039a0337 	orrseq	r0, sl, #-603979776	; 0xdc000000
    28c4:	17050501 	strne	r0, [r5, -r1, lsl #10]
    28c8:	01042e06 	tsteq	r4, r6, lsl #28
    28cc:	7ce60306 	stclvc	3, cr0, [r6], #24
    28d0:	06010501 	streq	r0, [r1], -r1, lsl #10
    28d4:	00050519 	andeq	r0, r5, r9, lsl r5
    28d8:	06030402 	streq	r0, [r3], -r2, lsl #8
    28dc:	207fa703 	rsbscs	sl, pc, r3, lsl #14
    28e0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    28e4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    28e8:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    28ec:	66060904 	strvs	r0, [r6], -r4, lsl #18
    28f0:	02045806 	andeq	r5, r4, #393216	; 0x60000
    28f4:	e7033705 	str	r3, [r3, -r5, lsl #14]
    28f8:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    28fc:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2900:	94030601 	strls	r0, [r3], #-1537	; 0xfffff9ff
    2904:	043c017c 	ldrteq	r0, [ip], #-380	; 0xfffffe84
    2908:	03370502 	teqeq	r7, #8388608	; 0x800000
    290c:	050103f0 	streq	r0, [r1, #-1008]	; 0xfffffc10
    2910:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2914:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    2918:	0105015c 	tsteq	r5, ip, asr r1
    291c:	16050514 			; <UNDEFINED> instruction: 0x16050514
    2920:	06010630 			; <UNDEFINED> instruction: 0x06010630
    2924:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    2928:	01040106 	tsteq	r4, r6, lsl #2
    292c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    2930:	7c850306 	stcvc	3, cr0, [r5], {6}
    2934:	02048201 	andeq	r8, r4, #268435456	; 0x10000000
    2938:	e7033705 	str	r3, [r3, -r5, lsl #14]
    293c:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    2940:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2944:	94030601 	strls	r0, [r3], #-1537	; 0xfffff9ff
    2948:	043c017c 	ldrteq	r0, [ip], #-380	; 0xfffffe84
    294c:	03370502 	teqeq	r7, #8388608	; 0x800000
    2950:	050103f0 	streq	r0, [r1, #-1008]	; 0xfffffc10
    2954:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2958:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    295c:	0105015c 	tsteq	r5, ip, asr r1
    2960:	16050514 			; <UNDEFINED> instruction: 0x16050514
    2964:	06010630 			; <UNDEFINED> instruction: 0x06010630
    2968:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    296c:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    2970:	04020001 	streq	r0, [r2], #-1
    2974:	7c85030b 	stcvc	3, cr0, [r5], {11}
    2978:	04020001 	streq	r0, [r2], #-1
    297c:	0306580b 	movweq	r5, #26635	; 0x680b
    2980:	040100cd 	streq	r0, [r1], #-205	; 0xffffff33
    2984:	03370502 	teqeq	r7, #8388608	; 0x800000
    2988:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    298c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2990:	03060104 	movweq	r0, #24836	; 0x6104
    2994:	05017ce6 	streq	r7, [r1, #-3302]	; 0xfffff31a
    2998:	2043030d 	subcs	r0, r3, sp, lsl #6
    299c:	01063e05 	tsteq	r6, r5, lsl #28
    29a0:	05203005 	streq	r3, [r0, #-5]!
    29a4:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    29a8:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    29ac:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    29b0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    29b4:	11052010 	tstne	r5, r0, lsl r0
    29b8:	20053206 	andcs	r3, r5, r6, lsl #4
    29bc:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    29c0:	20140520 	andscs	r0, r4, r0, lsr #10
    29c4:	03060505 	movweq	r0, #25861	; 0x6505
    29c8:	02042e2d 	andeq	r2, r4, #720	; 0x2d0
    29cc:	9a033705 	bls	d05e8 <SYSTICK_CYCLES+0xc1b89>
    29d0:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    29d4:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    29d8:	e6030601 	str	r0, [r3], -r1, lsl #12
    29dc:	041b017c 	ldreq	r0, [fp], #-380	; 0xfffffe84
    29e0:	03370502 	teqeq	r7, #8388608	; 0x800000
    29e4:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    29e8:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    29ec:	03060104 	movweq	r0, #24836	; 0x6104
    29f0:	05017ce6 	streq	r7, [r1, #-3302]	; 0xfffff31a
    29f4:	20550315 	subscs	r0, r5, r5, lsl r3
    29f8:	01065005 	tsteq	r6, r5
    29fc:	41061505 	tstmi	r6, r5, lsl #10
    2a00:	01064705 	tsteq	r6, r5, lsl #14
    2a04:	054a2c05 	strbeq	r2, [sl, #-3077]	; 0xfffff3fb
    2a08:	05330615 	ldreq	r0, [r3, #-1557]!	; 0xfffff9eb
    2a0c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2a10:	15052e49 	strne	r2, [r5, #-3657]	; 0xfffff1b7
    2a14:	3c053f06 	stccc	15, cr3, [r5], {6}
    2a18:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2a1c:	05055106 	streq	r5, [r5, #-262]	; 0xfffffefa
    2a20:	04011203 	streq	r1, [r1], #-515	; 0xfffffdfd
    2a24:	03370502 	teqeq	r7, #8388608	; 0x800000
    2a28:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    2a2c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2a30:	03060104 	movweq	r0, #24836	; 0x6104
    2a34:	05017ce6 	streq	r7, [r1, #-3302]	; 0xfffff31a
    2a38:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2a3c:	01320609 	teqeq	r2, r9, lsl #12
    2a40:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2a44:	01039a03 	tsteq	r3, r3, lsl #20
    2a48:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2a4c:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    2a50:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    2a54:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2a58:	01063016 	tsteq	r6, r6, lsl r0
    2a5c:	01210306 			; <UNDEFINED> instruction: 0x01210306
    2a60:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    2a64:	06090501 	streq	r0, [r9], -r1, lsl #10
    2a68:	017cdb03 	cmneq	ip, r3, lsl #22
    2a6c:	02002006 	andeq	r2, r0, #6
    2a70:	3c061104 	stfccs	f1, [r6], {4}
    2a74:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2a78:	11040200 	mrsne	r0, R12_usr
    2a7c:	01039103 	tsteq	r3, r3, lsl #2
    2a80:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2a84:	00171104 	andseq	r1, r7, r4, lsl #2
    2a88:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    2a8c:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    2a90:	04020001 	streq	r0, [r2], #-1
    2a94:	7ced0311 	stclvc	3, cr0, [sp], #68	; 0x44
    2a98:	00090501 	andeq	r0, r9, r1, lsl #10
    2a9c:	06030402 	streq	r0, [r3], -r2, lsl #8
    2aa0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2aa4:	02005805 	andeq	r5, r0, #327680	; 0x50000
    2aa8:	002e0704 	eoreq	r0, lr, r4, lsl #14
    2aac:	06090402 	streq	r0, [r9], -r2, lsl #8
    2ab0:	04580666 	ldrbeq	r0, [r8], #-1638	; 0xfffff99a
    2ab4:	03370502 	teqeq	r7, #8388608	; 0x800000
    2ab8:	05010391 	streq	r0, [r1, #-913]	; 0xfffffc6f
    2abc:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2ac0:	09050104 	stmdbeq	r5, {r2, r8}
    2ac4:	7cea0306 	stclvc	3, cr0, [sl], #24
    2ac8:	02043c01 	andeq	r3, r4, #256	; 0x100
    2acc:	9a033705 	bls	d06e8 <SYSTICK_CYCLES+0xc1c89>
    2ad0:	01050103 	tsteq	r5, r3, lsl #2
    2ad4:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    2ad8:	5c033705 	stcpl	7, cr3, [r3], {5}
    2adc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2ae0:	30160505 	andscc	r0, r6, r5, lsl #10
    2ae4:	03060106 	movweq	r0, #24838	; 0x6106
    2ae8:	06220121 	strteq	r0, [r2], -r1, lsr #2
    2aec:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2af0:	04020009 	streq	r0, [r2], #-9
    2af4:	db03060e 	blle	c4334 <SYSTICK_CYCLES+0xb58d5>
    2af8:	0482017c 	streq	r0, [r2], #380	; 0x17c
    2afc:	03370502 	teqeq	r7, #8388608	; 0x800000
    2b00:	05010391 	streq	r0, [r1, #-913]	; 0xfffffc6f
    2b04:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2b08:	09050104 	stmdbeq	r5, {r2, r8}
    2b0c:	7cea0306 	stclvc	3, cr0, [sl], #24
    2b10:	02043c01 	andeq	r3, r4, #256	; 0x100
    2b14:	9a033705 	bls	d0730 <SYSTICK_CYCLES+0xc1cd1>
    2b18:	01050103 	tsteq	r5, r3, lsl #2
    2b1c:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    2b20:	5c033705 	stcpl	7, cr3, [r3], {5}
    2b24:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2b28:	30160505 	andscc	r0, r6, r5, lsl #10
    2b2c:	03060106 	movweq	r0, #24838	; 0x6106
    2b30:	06220121 	strteq	r0, [r2], -r1, lsr #2
    2b34:	01042001 	tsteq	r4, r1
    2b38:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2b3c:	db030b04 	blle	c5754 <SYSTICK_CYCLES+0xb6cf5>
    2b40:	1602017c 			; <UNDEFINED> instruction: 0x1602017c
    2b44:	43010100 	movwmi	r0, #4352	; 0x1100
    2b48:	03000001 	movweq	r0, #1
    2b4c:	0000e400 	andeq	lr, r0, r0, lsl #8
    2b50:	fb010200 	blx	4335a <SYSTICK_CYCLES+0x348fb>
    2b54:	01000d0e 	tsteq	r0, lr, lsl #26
    2b58:	00010101 	andeq	r0, r1, r1, lsl #2
    2b5c:	00010000 	andeq	r0, r1, r0
    2b60:	2e2e0100 	sufcse	f0, f6, f0
    2b64:	2f2e2e2f 	svccs	0x002e2e2f
    2b68:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2ab8 <__HEAP_SIZE+0x1ab8>
    2b6c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2b70:	742f736f 	strtvc	r7, [pc], #-879	; 2b78 <__HEAP_SIZE+0x1b78>
    2b74:	61657268 	cmnvs	r5, r8, ror #4
    2b78:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2b7c:	6f6d6d6f 	svcvs	0x006d6d6f
    2b80:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    2b84:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    2b88:	2f2e2e2f 	svccs	0x002e2e2f
    2b8c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2adc <__HEAP_SIZE+0x1adc>
    2b90:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2b94:	742f736f 	strtvc	r7, [pc], #-879	; 2b9c <__HEAP_SIZE+0x1b9c>
    2b98:	61657268 	cmnvs	r5, r8, ror #4
    2b9c:	702f7864 	eorvc	r7, pc, r4, ror #16
    2ba0:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    2ba4:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2ba8:	5f786574 	svcpl	0x00786574
    2bac:	2f33336d 	svccs	0x0033336d
    2bb0:	2f756e67 	svccs	0x00756e67
    2bb4:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2bb8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2bbc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2bc0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2bc4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2bc8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2bcc:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2bd0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2b1c <__HEAP_SIZE+0x1b1c>
    2bd4:	2f6e6f6d 	svccs	0x006e6f6d
    2bd8:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2bdc:	5f787400 	svcpl	0x00787400
    2be0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2be4:	78655f72 	stmdavc	r5!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2be8:	61726970 	cmnvs	r2, r0, ror r9
    2bec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2bf0:	6f72705f 	svcvs	0x0072705f
    2bf4:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2bf8:	0100632e 	tsteq	r0, lr, lsr #6
    2bfc:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2c00:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    2c04:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2c08:	74000002 	strvc	r0, [r0], #-2
    2c0c:	70615f78 	rsbvc	r5, r1, r8, ror pc
    2c10:	00682e69 	rsbeq	r2, r8, r9, ror #28
    2c14:	74000003 	strvc	r0, [r0], #-3
    2c18:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2c1c:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    2c20:	00030068 	andeq	r0, r3, r8, rrx
    2c24:	5f787400 	svcpl	0x00787400
    2c28:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2c2c:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    2c30:	00000300 	andeq	r0, r0, r0, lsl #6
    2c34:	00010500 	andeq	r0, r1, r0, lsl #10
    2c38:	1f6c0205 	svcne	0x006c0205
    2c3c:	d1031000 	mrsle	r1, (UNDEF: 3)
    2c40:	05220100 	streq	r0, [r2, #-256]!	; 0xffffff00
    2c44:	011b0305 	tsteq	fp, r5, lsl #6
    2c48:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2c4c:	0103e303 	tsteq	r3, r3, lsl #6
    2c50:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2c54:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    2c58:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    2c5c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2c60:	01063016 	tsteq	r6, r6, lsl r0
    2c64:	01210306 			; <UNDEFINED> instruction: 0x01210306
    2c68:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    2c6c:	97030601 	strls	r0, [r3, -r1, lsl #12]
    2c70:	043f017c 	ldrteq	r0, [pc], #-380	; 2c78 <__HEAP_SIZE+0x1c78>
    2c74:	03370502 	teqeq	r7, #8388608	; 0x800000
    2c78:	050103d2 	streq	r0, [r1, #-978]	; 0xfffffc2e
    2c7c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2c80:	01050104 	tsteq	r5, r4, lsl #2
    2c84:	017f9203 	cmneq	pc, r3, lsl #4
    2c88:	00020220 	andeq	r0, r2, r0, lsr #4
    2c8c:	014e0101 	cmpeq	lr, r1, lsl #2
    2c90:	00030000 	andeq	r0, r3, r0
    2c94:	000000cd 	andeq	r0, r0, sp, asr #1
    2c98:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2c9c:	0101000d 	tsteq	r1, sp
    2ca0:	00000101 	andeq	r0, r0, r1, lsl #2
    2ca4:	00000100 	andeq	r0, r0, r0, lsl #2
    2ca8:	2f2e2e01 	svccs	0x002e2e01
    2cac:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2cb0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2cb4:	6f747262 	svcvs	0x00747262
    2cb8:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2cbc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2cc0:	6f632f78 	svcvs	0x00632f78
    2cc4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2cc8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2ccc:	2f2e2e00 	svccs	0x002e2e00
    2cd0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2cd4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2cd8:	6f747262 	svcvs	0x00747262
    2cdc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2ce0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2ce4:	6f702f78 	svcvs	0x00702f78
    2ce8:	2f737472 	svccs	0x00737472
    2cec:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2cf0:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 2b64 <__HEAP_SIZE+0x1b64>
    2cf4:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    2cf8:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2cfc:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    2d00:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2d04:	2f2e2e2f 	svccs	0x002e2e2f
    2d08:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2d0c:	2f736f74 	svccs	0x00736f74
    2d10:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2d14:	2f786461 	svccs	0x00786461
    2d18:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2d1c:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2d20:	0000636e 	andeq	r6, r0, lr, ror #6
    2d24:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2d2c <__HEAP_SIZE+0x1d2c>
    2d28:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2d2c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2d30:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2d34:	2e657a69 	vnmulcs.f32	s15, s10, s19
    2d38:	00010063 	andeq	r0, r1, r3, rrx
    2d3c:	5f787400 	svcpl	0x00787400
    2d40:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2d44:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2d48:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2d4c:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2d50:	0300682e 	movweq	r6, #2094	; 0x82e
    2d54:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2d58:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2d5c:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    2d60:	00000300 	andeq	r0, r0, r0, lsl #6
    2d64:	00010500 	andeq	r0, r1, r0, lsl #10
    2d68:	00000205 	andeq	r0, r0, r5, lsl #4
    2d6c:	cc030000 	stcgt	0, cr0, [r3], {-0}
    2d70:	05310101 	ldreq	r0, [r1, #-257]!	; 0xfffffeff
    2d74:	01190305 	tsteq	r9, r5, lsl #6
    2d78:	01061a05 	tsteq	r6, r5, lsl #20
    2d7c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    2d80:	01061b05 	tsteq	r6, r5, lsl #22
    2d84:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    2d88:	01061805 	tsteq	r6, r5, lsl #16
    2d8c:	4b060505 	blmi	1841a8 <__RAM_SIZE+0x841a8>
    2d90:	01061805 	tsteq	r6, r5, lsl #16
    2d94:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    2d98:	01061b05 	tsteq	r6, r5, lsl #22
    2d9c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    2da0:	01061a05 	tsteq	r6, r5, lsl #20
    2da4:	4b060505 	blmi	1841c0 <__RAM_SIZE+0x841c0>
    2da8:	01061805 	tsteq	r6, r5, lsl #16
    2dac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2db0:	41060104 	tstmi	r6, r4, lsl #2
    2db4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2db8:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
    2dbc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2dc0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2dc4:	0402000d 	streq	r0, [r2], #-13
    2dc8:	15030601 	strne	r0, [r3, #-1537]	; 0xfffff9ff
    2dcc:	05052e08 	streq	r2, [r5, #-3592]	; 0xfffff1f8
    2dd0:	01040200 	mrseq	r0, R12_usr
    2dd4:	01050106 	tsteq	r5, r6, lsl #2
    2dd8:	022e1b03 	eoreq	r1, lr, #3072	; 0xc00
    2ddc:	0101001c 	tsteq	r1, ip, lsl r0
    2de0:	0000015b 	andeq	r0, r0, fp, asr r1
    2de4:	00c60003 	sbceq	r0, r6, r3
    2de8:	01020000 	mrseq	r0, (UNDEF: 2)
    2dec:	000d0efb 	strdeq	r0, [sp], -fp
    2df0:	01010101 	tsteq	r1, r1, lsl #2
    2df4:	01000000 	mrseq	r0, (UNDEF: 0)
    2df8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    2dfc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2e00:	2f2e2e2f 	svccs	0x002e2e2f
    2e04:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2e08:	2f736f74 	svccs	0x00736f74
    2e0c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2e10:	2f786461 	svccs	0x00786461
    2e14:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2e18:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2e1c:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    2e20:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2e24:	2f2e2e2f 	svccs	0x002e2e2f
    2e28:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2e2c:	2f736f74 	svccs	0x00736f74
    2e30:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2e34:	2f786461 	svccs	0x00786461
    2e38:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2e3c:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2e40:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    2e44:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2e48:	2f2e2e2f 	svccs	0x002e2e2f
    2e4c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2e50:	2f736f74 	svccs	0x00736f74
    2e54:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2e58:	2f786461 	svccs	0x00786461
    2e5c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2e60:	6f632f73 	svcvs	0x00632f73
    2e64:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2e68:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    2e6c:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    2e70:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2e74:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2e78:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2e7c:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    2e80:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2e84:	65645f6d 	strbvs	r5, [r4, #-3949]!	; 0xfffff093
    2e88:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    2e8c:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    2e90:	0100632e 	tsteq	r0, lr, lsr #6
    2e94:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2e98:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2e9c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2ea0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2ea4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    2ea8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2eac:	00000003 	andeq	r0, r0, r3
    2eb0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2eb4:	001f8402 	andseq	r8, pc, r2, lsl #8
    2eb8:	00c90310 	sbceq	r0, r9, r0, lsl r3
    2ebc:	13131401 	tstne	r3, #16777216	; 0x1000000
    2ec0:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    2ec4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2ec8:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2ecc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2ed0:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    2ed4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2ed8:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    2edc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2ee0:	1303060d 	movwne	r0, #13837	; 0x360d
    2ee4:	061c052e 	ldreq	r0, [ip], -lr, lsr #10
    2ee8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2eec:	063d0521 	ldrteq	r0, [sp], -r1, lsr #10
    2ef0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2ef4:	063d0521 	ldrteq	r0, [sp], -r1, lsr #10
    2ef8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2efc:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    2f00:	20100501 	andscs	r0, r0, r1, lsl #10
    2f04:	03060905 	movweq	r0, #26885	; 0x6905
    2f08:	32052e0c 	andcc	r2, r5, #12, 28	; 0xc0
    2f0c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2f10:	0d052201 	sfmeq	f2, 4, [r5, #-4]
    2f14:	20600306 	rsbcs	r0, r0, r6, lsl #6
    2f18:	01061105 	tsteq	r6, r5, lsl #2
    2f1c:	05201005 	streq	r1, [r0, #-5]!
    2f20:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    2f24:	2e01061e 	mcrcs	6, 0, r0, cr1, cr14, {0}
    2f28:	03061105 	movweq	r1, #24837	; 0x6105
    2f2c:	3b052012 	blcc	14af7c <__RAM_SIZE+0x4af7c>
    2f30:	11050106 	tstne	r5, r6, lsl #2
    2f34:	1e052306 	cdpne	3, 0, cr2, cr5, cr6, {0}
    2f38:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2f3c:	82010100 	andhi	r0, r1, #0, 2
    2f40:	03000000 	movweq	r0, #0
    2f44:	00003600 	andeq	r3, r0, r0, lsl #12
    2f48:	fb010200 	blx	43752 <SYSTICK_CYCLES+0x34cf3>
    2f4c:	01000d0e 	tsteq	r0, lr, lsl #26
    2f50:	00010101 	andeq	r0, r1, r1, lsl #2
    2f54:	00010000 	andeq	r0, r1, r0
    2f58:	2f2e0100 	svccs	0x002e0100
    2f5c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    2f60:	2f707574 	svccs	0x00707574
    2f64:	00636367 	rsbeq	r6, r3, r7, ror #6
    2f68:	61747300 	cmnvs	r4, r0, lsl #6
    2f6c:	70757472 	rsbsvc	r7, r5, r2, ror r4
    2f70:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    2f74:	33334d43 	teqcc	r3, #4288	; 0x10c0
    2f78:	0100732e 	tsteq	r0, lr, lsr #6
    2f7c:	00000000 	andeq	r0, r0, r0
    2f80:	1fd40205 	svcne	0x00d40205
    2f84:	d3031000 	movwle	r1, #12288	; 0x3000
    2f88:	30210100 	eorcc	r0, r1, r0, lsl #2
    2f8c:	30362f21 	eorscc	r2, r6, r1, lsr #30
    2f90:	21212321 			; <UNDEFINED> instruction: 0x21212321
    2f94:	23212121 			; <UNDEFINED> instruction: 0x23212121
    2f98:	21212121 			; <UNDEFINED> instruction: 0x21212121
    2f9c:	21232122 			; <UNDEFINED> instruction: 0x21232122
    2fa0:	21212123 			; <UNDEFINED> instruction: 0x21212123
    2fa4:	21232121 			; <UNDEFINED> instruction: 0x21232121
    2fa8:	21222121 			; <UNDEFINED> instruction: 0x21222121
    2fac:	2e0e0323 	cdpcs	3, 0, cr0, cr14, cr3, {1}
    2fb0:	03200903 			; <UNDEFINED> instruction: 0x03200903
    2fb4:	312e7faf 			; <UNDEFINED> instruction: 0x312e7faf
    2fb8:	2f2e0c03 	svccs	0x002e0c03
    2fbc:	2f2e1503 	svccs	0x002e1503
    2fc0:	01000202 	tsteq	r0, r2, lsl #4
    2fc4:	0000ba01 	andeq	fp, r0, r1, lsl #20
    2fc8:	3e000300 	cdpcc	3, 0, cr0, cr0, cr0, {0}
    2fcc:	02000000 	andeq	r0, r0, #0
    2fd0:	0d0efb01 	vstreq	d15, [lr, #-4]
    2fd4:	01010100 	mrseq	r0, (UNDEF: 17)
    2fd8:	00000001 	andeq	r0, r0, r1
    2fdc:	01000001 	tsteq	r0, r1
    2fe0:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    2fe4:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    2fe8:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    2fec:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    2ff0:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
    2ff4:	61697469 	cmnvs	r9, r9, ror #8
    2ff8:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    2ffc:	776f6c5f 			; <UNDEFINED> instruction: 0x776f6c5f
    3000:	76656c5f 			; <UNDEFINED> instruction: 0x76656c5f
    3004:	732e6c65 			; <UNDEFINED> instruction: 0x732e6c65
    3008:	00000100 	andeq	r0, r0, r0, lsl #2
    300c:	02050000 	andeq	r0, r5, #0
    3010:	10002044 	andne	r2, r0, r4, asr #32
    3014:	0100da03 	tsteq	r0, r3, lsl #20
    3018:	2f212123 	svccs	0x00212123
    301c:	31212f23 			; <UNDEFINED> instruction: 0x31212f23
    3020:	232f2121 			; <UNDEFINED> instruction: 0x232f2121
    3024:	23212121 			; <UNDEFINED> instruction: 0x23212121
    3028:	2f212f2f 	svccs	0x00212f2f
    302c:	2f2f2f23 	svccs	0x002f2f23
    3030:	03322130 	teqeq	r2, #48, 2
    3034:	0d03200d 	stceq	0, cr2, [r3, #-52]	; 0xffffffcc
    3038:	2009032e 	andcs	r0, r9, lr, lsr #6
    303c:	200e032f 	andcs	r0, lr, pc, lsr #6
    3040:	032f3224 			; <UNDEFINED> instruction: 0x032f3224
    3044:	0b03200c 	bleq	cb07c <SYSTICK_CYCLES+0xbc61d>
    3048:	2121222e 			; <UNDEFINED> instruction: 0x2121222e
    304c:	21232330 			; <UNDEFINED> instruction: 0x21232330
    3050:	21232f21 			; <UNDEFINED> instruction: 0x21232f21
    3054:	032f2121 			; <UNDEFINED> instruction: 0x032f2121
    3058:	212f2e09 			; <UNDEFINED> instruction: 0x212f2e09
    305c:	212f2123 			; <UNDEFINED> instruction: 0x212f2123
    3060:	0c03212f 	stfeqs	f2, [r3], {47}	; 0x2f
    3064:	2e0b032e 	cdpcs	3, 0, cr0, cr11, cr14, {1}
    3068:	2e7ec603 	cdpcs	6, 7, cr12, cr14, cr3, {0}
    306c:	3432342f 	ldrtcc	r3, [r2], #-1071	; 0xfffffbd1
    3070:	032e1203 			; <UNDEFINED> instruction: 0x032e1203
    3074:	032e00d9 			; <UNDEFINED> instruction: 0x032e00d9
    3078:	03342e0a 	teqeq	r4, #10, 28	; 0xa0
    307c:	02022e12 	andeq	r2, r2, #288	; 0x120
    3080:	cd010100 	stfgts	f0, [r1, #-0]
    3084:	03000000 	movweq	r0, #0
    3088:	00005d00 	andeq	r5, r0, r0, lsl #26
    308c:	fb010200 	blx	43896 <SYSTICK_CYCLES+0x34e37>
    3090:	01000d0e 	tsteq	r0, lr, lsl #26
    3094:	00010101 	andeq	r0, r1, r1, lsl #2
    3098:	00010000 	andeq	r0, r1, r0
    309c:	2e2e0100 	sufcse	f0, f6, f0
    30a0:	2f2e2e2f 	svccs	0x002e2e2f
    30a4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2ff4 <__HEAP_SIZE+0x1ff4>
    30a8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    30ac:	742f736f 	strtvc	r7, [pc], #-879	; 30b4 <__HEAP_SIZE+0x20b4>
    30b0:	61657268 	cmnvs	r5, r8, ror #4
    30b4:	702f7864 	eorvc	r7, pc, r4, ror #16
    30b8:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    30bc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    30c0:	5f786574 	svcpl	0x00786574
    30c4:	2f33336d 	svccs	0x0033336d
    30c8:	2f756e67 	svccs	0x00756e67
    30cc:	00637273 	rsbeq	r7, r3, r3, ror r2
    30d0:	5f787400 	svcpl	0x00787400
    30d4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    30d8:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    30dc:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    30e0:	2e656c75 	mcrcs	12, 3, r6, cr5, cr5, {3}
    30e4:	00010053 	andeq	r0, r1, r3, asr r0
    30e8:	05000000 	streq	r0, [r0, #-0]
    30ec:	00212002 	eoreq	r2, r1, r2
    30f0:	00dc0310 	sbcseq	r0, ip, r0, lsl r3
    30f4:	24212f01 	strtcs	r2, [r1], #-3841	; 0xfffff0ff
    30f8:	23322f2f 	teqcs	r2, #47, 30	; 0xbc
    30fc:	2f2f2f2f 	svccs	0x002f2f2f
    3100:	20230333 	eorcs	r0, r3, r3, lsr r3
    3104:	242f2121 	strtcs	r2, [pc], #-289	; 310c <__HEAP_SIZE+0x210c>
    3108:	302f2124 	eorcc	r2, pc, r4, lsr #2
    310c:	2131212f 	teqcs	r1, pc, lsr #2
    3110:	2e0f032f 	cdpcs	3, 0, cr0, cr15, cr15, {1}
    3114:	03242421 			; <UNDEFINED> instruction: 0x03242421
    3118:	2122200c 			; <UNDEFINED> instruction: 0x2122200c
    311c:	21262524 			; <UNDEFINED> instruction: 0x21262524
    3120:	242f2121 	strtcs	r2, [pc], #-289	; 3128 <__HEAP_SIZE+0x2128>
    3124:	2f201503 	svccs	0x00201503
    3128:	2f302f2f 	svccs	0x00302f2f
    312c:	302f3121 	eorcc	r3, pc, r1, lsr #2
    3130:	22200b03 	eorcs	r0, r0, #3072	; 0xc00
    3134:	18032121 	stmdane	r3, {r0, r5, r8, sp}
    3138:	2f252220 	svccs	0x00252220
    313c:	0322352f 			; <UNDEFINED> instruction: 0x0322352f
    3140:	302e00c1 	eorcc	r0, lr, r1, asr #1
    3144:	2e7dd403 	cdpcs	4, 7, cr13, cr13, cr3, {0}
    3148:	2f2e3a03 	svccs	0x002e3a03
    314c:	022e1303 	eoreq	r1, lr, #201326592	; 0xc000000
    3150:	01010002 	tsteq	r1, r2
    3154:	000000cf 	andeq	r0, r0, pc, asr #1
    3158:	005d0003 	subseq	r0, sp, r3
    315c:	01020000 	mrseq	r0, (UNDEF: 2)
    3160:	000d0efb 	strdeq	r0, [sp], -fp
    3164:	01010101 	tsteq	r1, r1, lsl #2
    3168:	01000000 	mrseq	r0, (UNDEF: 0)
    316c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3170:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3174:	2f2e2e2f 	svccs	0x002e2e2f
    3178:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    317c:	2f736f74 	svccs	0x00736f74
    3180:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3184:	2f786461 	svccs	0x00786461
    3188:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    318c:	6f632f73 	svcvs	0x00632f73
    3190:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    3194:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    3198:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    319c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    31a0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    31a4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    31a8:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    31ac:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    31b0:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    31b4:	0100532e 	tsteq	r0, lr, lsr #6
    31b8:	00000000 	andeq	r0, r0, r0
    31bc:	21f00205 	mvnscs	r0, r5, lsl #4
    31c0:	d5031000 	strle	r1, [r3, #-0]
    31c4:	21210100 			; <UNDEFINED> instruction: 0x21210100
    31c8:	2121262f 			; <UNDEFINED> instruction: 0x2121262f
    31cc:	26252f26 	strtcs	r2, [r5], -r6, lsr #30
    31d0:	0a032f21 	beq	cee5c <SYSTICK_CYCLES+0xc03fd>
    31d4:	21212120 			; <UNDEFINED> instruction: 0x21212120
    31d8:	212f2126 			; <UNDEFINED> instruction: 0x212f2126
    31dc:	33200a03 			; <UNDEFINED> instruction: 0x33200a03
    31e0:	25212121 	strcs	r2, [r1, #-289]!	; 0xfffffedf
    31e4:	09032421 	stmdbeq	r3, {r0, r5, sl, sp}
    31e8:	22212120 	eorcs	r2, r1, #32, 2
    31ec:	27252121 	strcs	r2, [r5, -r1, lsr #2]!
    31f0:	03262121 			; <UNDEFINED> instruction: 0x03262121
    31f4:	21212e09 			; <UNDEFINED> instruction: 0x21212e09
    31f8:	21212f26 			; <UNDEFINED> instruction: 0x21212f26
    31fc:	21212121 			; <UNDEFINED> instruction: 0x21212121
    3200:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    3204:	2f352621 	svccs	0x00352621
    3208:	2e7ee103 	expcse	f6, f3
    320c:	032e0903 			; <UNDEFINED> instruction: 0x032e0903
    3210:	0c032e14 	stceq	14, cr2, [r3], {20}
    3214:	2e09032e 	cdpcs	3, 0, cr0, cr9, cr14, {1}
    3218:	362e1203 	strtcc	r1, [lr], -r3, lsl #4
    321c:	312e3a03 			; <UNDEFINED> instruction: 0x312e3a03
    3220:	02023030 	andeq	r3, r2, #48	; 0x30
    3224:	Address 0x00003224 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
{
       0:	6e69616d 	powvsez	f6, f1, #5.0
    _tx_thread_initialize();
       4:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
    _tx_timer_initialize();
       8:	6e695f6b 	cdpvs	15, 6, cr5, cr9, cr11, {3}
       c:	47007469 	strmi	r7, [r0, -r9, ror #8]
      10:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      14:	31203731 			; <UNDEFINED> instruction: 0x31203731
        if(ch == '\n' || it >= size) {
      18:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
}
      1c:	30322031 	eorscc	r2, r2, r1, lsr r0
      20:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
      24:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
      28:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
      2c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
      34:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
        _tx_thread_system_ni_resume(thread_ptr);
      38:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
      3c:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
}
      40:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
      44:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
      48:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
        status =  _tx_thread_create(&_tx_timer_thread,
      4c:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
      50:	35767066 	ldrbcc	r7, [r6, #-102]!	; 0xffffff9a
    } while (status != TX_SUCCESS);
      54:	2d70732d 	ldclcs	3, cr7, [r0, #-180]!	; 0xffffff4c
}
      58:	20363164 	eorscs	r3, r6, r4, ror #2
      5c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
      60:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
      64:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      68:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
      6c:	616d2d20 	cmnvs	sp, r0, lsr #26
      70:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
      74:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
      78:	2e6d2d38 	mcrcs	13, 3, r2, cr13, cr8, {1}
      7c:	6e69616d 	powvsez	f6, f1, #5.0
      80:	7073642b 	rsbsvc	r6, r3, fp, lsr #8
      84:	2070662b 	rsbscs	r6, r0, fp, lsr #12
      88:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
      8c:	61776467 	cmnvs	r7, r7, ror #8
      90:	322d6672 	eorcc	r6, sp, #119537664	; 0x7200000
      94:	674f2d20 	strbvs	r2, [pc, -r0, lsr #26]
      98:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
      9c:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
      a0:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
      a4:	736e6f69 	cmnvc	lr, #420	; 0x1a4
      a8:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
      ac:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
      b0:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
      b4:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
      b8:	736e6f69 	cmnvc	lr, #420	; 0x1a4
      bc:	665f5f00 	ldrbvs	r5, [pc], -r0, lsl #30
      c0:	5f636e75 	svcpl	0x00636e75
      c4:	2f2e005f 	svccs	0x002e005f
      c8:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
      cc:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
      d0:	2f6e6f69 	svccs	0x006e6f69
      d4:	6e69616d 	powvsez	f6, f1, #5.0
      d8:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
      dc:	5f747261 	svcpl	0x00747261
      e0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
      e4:	625f5f00 	subsvs	r5, pc, #0, 30
      e8:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      ec:	705f6e69 	subsvc	r6, pc, r9, ror #28
      f0:	00737475 	rsbseq	r7, r3, r5, ror r4
      f4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      f8:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      fc:	61686320 	cmnvs	r8, r0, lsr #6
     100:	68730072 	ldmdavs	r3!, {r1, r4, r5, r6}^
     104:	2074726f 	rsbscs	r7, r4, pc, ror #4
     108:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     10c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     110:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     114:	72614800 	rsbvc	r4, r1, #0, 16
     118:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
     11c:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     120:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     124:	4c5f7265 	lfmmi	f7, 2, [pc], {101}	; 0x65
     128:	6e656765 	cdpvs	7, 6, cr6, cr5, cr5, {3}
     12c:	6d007963 	vstrvs.16	s14, [r0, #-198]	; 0xffffff3a	; <UNPREDICTABLE>
     130:	006e6961 	rsbeq	r6, lr, r1, ror #18
     134:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     138:	6f6c0034 	svcvs	0x006c0034
     13c:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
     140:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     144:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     148:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     14c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     150:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     154:	6f642067 	svcvs	0x00642067
     158:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     15c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     160:	6f6c2067 	svcvs	0x006c2067
     164:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     168:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
     16c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     170:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     174:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     178:	73007265 	movwvc	r7, #613	; 0x265
     17c:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     180:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     184:	73657400 	cmnvc	r5, #0, 8
     188:	74003074 	strvc	r3, [r0], #-116	; 0xffffff8c
     18c:	31747365 	cmncc	r4, r5, ror #6
     190:	73657400 	cmnvc	r5, #0, 8
     194:	74003274 	strvc	r3, [r0], #-628	; 0xfffffd8c
     198:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
     19c:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     1a0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     1a4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     1a8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     1ac:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     1b0:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     1b4:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     1b8:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     1bc:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     1c0:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     1c4:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     1c8:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     1cc:	706d5c73 	rsbvc	r5, sp, r3, ror ip
     1d0:	612d3273 			; <UNDEFINED> instruction: 0x612d3273
     1d4:	3530356e 	ldrcc	r3, [r0, #-1390]!	; 0xfffffa92
     1d8:	7268745c 	rsbvc	r7, r8, #92, 8	; 0x5c000000
     1dc:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     1e0:	73657400 	cmnvc	r5, #0, 8
     1e4:	2e003574 	cfrshl64cs	mvdx0, mvdx4, r3
     1e8:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     1ec:	6163696c 	cmnvs	r3, ip, ror #18
     1f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1f4:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     1f8:	5f6d6574 	svcpl	0x006d6574
     1fc:	434d5241 	movtmi	r5, #53825	; 0xd241
     200:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     204:	5f5f0063 	svcpl	0x005f0063
     208:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     20c:	00745f38 	rsbseq	r5, r4, r8, lsr pc
     210:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
     214:	49434400 	stmdbmi	r3, {sl, lr}^
     218:	4341564d 	movtmi	r5, #5709	; 0x164d
     21c:	494c4300 	stmdbmi	ip, {r8, r9, lr}^
     220:	43005244 	movwmi	r5, #580	; 0x244
     224:	44495550 	strbmi	r5, [r9], #-1360	; 0xfffffab0
     228:	49504200 	ldmdbmi	r0, {r9, lr}^
     22c:	004c4c41 	subeq	r4, ip, r1, asr #24
     230:	505f4449 	subspl	r4, pc, r9, asr #8
     234:	44005246 	strmi	r5, [r0], #-582	; 0xfffffdba
     238:	53494343 	movtpl	r4, #37699	; 0x9343
     23c:	79530057 	ldmdbvc	r3, {r0, r1, r2, r4, r6}^
     240:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     244:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     248:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     24c:	6470556b 	ldrbtvs	r5, [r0], #-1387	; 0xfffffa95
     250:	00657461 	rsbeq	r7, r5, r1, ror #8
     254:	4d5f4449 	cfldrdmi	mvd4, [pc, #-292]	; 138 <__STACKSEAL_SIZE+0x138>
     258:	0052464d 	subseq	r4, r2, sp, asr #12
     25c:	41494349 	cmpmi	r9, r9, asr #6
     260:	00554c4c 	subseq	r4, r5, ip, asr #24
     264:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
     268:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff370 <__RAM_segment_used_end__+0xc7eff370>
     26c:	33746e69 	cmncc	r4, #1680	; 0x690
     270:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     274:	5f424353 	svcpl	0x00424353
     278:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     27c:	5f444900 	svcpl	0x00444900
     280:	00524644 	subseq	r4, r2, r4, asr #12
     284:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     288:	00434156 	subeq	r4, r3, r6, asr r1
     28c:	45535343 	ldrbmi	r5, [r3, #-835]	; 0xfffffcbd
     290:	5300524c 	movwpl	r5, #588	; 0x24c
     294:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     298:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     29c:	6f6c4365 	svcvs	0x006c4365
     2a0:	44006b63 	strmi	r6, [r0], #-2915	; 0xfffff49d
     2a4:	564d4343 	strbpl	r4, [sp], -r3, asr #6
     2a8:	5f005541 	svcpl	0x00005541
     2ac:	6365565f 	cmnvs	r5, #99614720	; 0x5f00000
     2b0:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
     2b4:	4f545600 	svcmi	0x00545600
     2b8:	46530052 			; <UNDEFINED> instruction: 0x46530052
     2bc:	49005241 	stmdbmi	r0, {r0, r6, r9, ip, lr}
     2c0:	00525343 	subseq	r5, r2, r3, asr #6
     2c4:	43524941 	cmpmi	r2, #1064960	; 0x104000
     2c8:	46440052 			; <UNDEFINED> instruction: 0x46440052
     2cc:	4d005253 	sfmmi	f5, 4, [r0, #-332]	; 0xfffffeb4
     2d0:	5241464d 	subpl	r4, r1, #80740352	; 0x4d00000
     2d4:	53434300 	movtpl	r4, #13056	; 0x3300
     2d8:	00524449 	subseq	r4, r2, r9, asr #8
     2dc:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     2e0:	41534e00 	cmpmi	r3, r0, lsl #28
     2e4:	4d005243 	sfmmi	f5, 4, [r0, #-268]	; 0xfffffef4
     2e8:	30524656 	subscc	r4, r2, r6, asr r6
     2ec:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     2f0:	4d003152 	stfmis	f3, [r0, #-328]	; 0xfffffeb8
     2f4:	32524656 	subscc	r4, r2, #90177536	; 0x5600000
     2f8:	53455200 	movtpl	r5, #20992	; 0x5200
     2fc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     300:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     304:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     308:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     30c:	53455200 	movtpl	r5, #20992	; 0x5200
     310:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     314:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     318:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     31c:	36444556 			; <UNDEFINED> instruction: 0x36444556
     320:	53455200 	movtpl	r5, #20992	; 0x5200
     324:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     328:	53003744 	movwpl	r3, #1860	; 0x744
     32c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     330:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
     334:	48530074 	ldmdami	r3, {r2, r4, r5, r6}^
     338:	00525343 	subseq	r5, r2, r3, asr #6
     33c:	49434344 	stmdbmi	r3, {r2, r6, r8, r9, lr}^
     340:	4341564d 	movtmi	r5, #5709	; 0x164d
     344:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     348:	5541564d 	strbpl	r5, [r1, #-1613]	; 0xfffff9b3
     34c:	49434400 	stmdbmi	r3, {sl, lr}^
     350:	41005753 	tstmi	r0, r3, asr r7
     354:	00525346 	subseq	r5, r2, r6, asr #6
     358:	52534653 	subspl	r4, r3, #87031808	; 0x5300000
     35c:	43434400 	movtmi	r4, #13312	; 0x3400
     360:	53005753 	movwpl	r5, #1875	; 0x753
     364:	00525048 	subseq	r5, r2, r8, asr #32
     368:	54434556 	strbpl	r4, [r3], #-1366	; 0xfffffaaa
     36c:	545f524f 	ldrbpl	r5, [pc], #-591	; 374 <__STACKSEAL_SIZE+0x374>
     370:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
     374:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     378:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
     37c:	5246415f 	subpl	r4, r6, #-1073741801	; 0xc0000017
     380:	5f444900 	svcpl	0x00444900
     384:	52415349 	subpl	r5, r1, #603979777	; 0x24000001
     388:	41504300 	cmpmi	r0, r0, lsl #6
     38c:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
     390:	00525346 	subseq	r5, r2, r6, asr #6
     394:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     398:	5f696261 	svcpl	0x00696261
     39c:	00643269 	rsbeq	r3, r4, r9, ror #4
     3a0:	31776f70 	cmncc	r7, r0, ror pc
     3a4:	78650030 	stmdavc	r5!, {r4, r5}^
     3a8:	6f003270 	svcvs	0x00003270
     3ac:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     3b0:	775f7463 	ldrbvc	r7, [pc, -r3, ror #8]
     3b4:	00706172 	rsbseq	r6, r0, r2, ror r1
     3b8:	66666964 	strbtvs	r6, [r6], -r4, ror #18
     3bc:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff4c4 <__RAM_segment_used_end__+0xc7eff4c4>
     3c0:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
     3c4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     3c8:	72707600 	rsbsvc	r7, r0, #0, 12
     3cc:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     3d0:	7a697300 	bvc	1a5cfd8 <SYSTEM_CLOCK+0x14a4258>
     3d4:	00745f65 	rsbseq	r5, r4, r5, ror #30
     3d8:	776e696d 	strbvc	r6, [lr, -sp, ror #18]!
     3dc:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     3e0:	615f5f00 	cmpvs	pc, r0, lsl #30
     3e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     3e8:	6964645f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
     3ec:	655f0076 	ldrbvs	r0, [pc, #-118]	; 37e <__STACKSEAL_SIZE+0x37e>
     3f0:	00616f74 	rsbeq	r6, r1, r4, ror pc
     3f4:	5f747570 	svcpl	0x00747570
     3f8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     3fc:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff504 <__RAM_segment_used_end__+0xc7eff504>
     400:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     404:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
     408:	69737861 	ldmdbvs	r3!, {r0, r5, r6, fp, ip, sp, lr}^
     40c:	7700657a 	smlsdxvc	r0, sl, r5, r6
     410:	656c6f68 	strbvs	r6, [ip, #-3944]!	; 0xfffff098
     414:	615f5f00 	cmpvs	pc, r0, lsl #30
     418:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     41c:	6932645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}
     420:	7266007a 	rsbvc	r0, r6, #122	; 0x7a
     424:	5f006361 	svcpl	0x00006361
     428:	5f74756f 	svcpl	0x0074756f
     42c:	00746366 	rsbseq	r6, r4, r6, ror #6
     430:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     434:	5f696261 	svcpl	0x00696261
     438:	69753264 	ldmdbvs	r5!, {r2, r5, r6, r9, ip, sp}^
     43c:	7473007a 	ldrbtvc	r0, [r3], #-122	; 0xffffff86
     440:	5f747261 	svcpl	0x00747261
     444:	00786469 	rsbseq	r6, r8, r9, ror #8
     448:	70746366 	rsbsvc	r6, r4, r6, ror #6
     44c:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     450:	656e0066 	strbvs	r0, [lr, #-102]!	; 0xffffff9a
     454:	69746167 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, sp, lr}^
     458:	5f006576 	svcpl	0x00006576
     45c:	6165615f 	cmnvs	r5, pc, asr r1
     460:	645f6962 	ldrbvs	r6, [pc], #-2402	; 468 <STACK_SIZE+0x68>
     464:	00646461 	rsbeq	r6, r4, r1, ror #8
     468:	61765f5f 	cmnvs	r6, pc, asr pc
     46c:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     470:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     474:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     478:	72532f65 	subsvc	r2, r3, #404	; 0x194
     47c:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
     480:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     484:	5f00632e 	svcpl	0x0000632e
     488:	616f746e 	cmnvs	pc, lr, ror #8
     48c:	726f665f 	rsbvc	r6, pc, #99614720	; 0x5f00000
     490:	0074616d 	rsbseq	r6, r4, sp, ror #2
     494:	6f74665f 	svcvs	0x0074665f
     498:	6f5f0061 	svcvs	0x005f0061
     49c:	6e5f7475 	mrcvs	4, 2, r7, cr15, cr5, {3}
     4a0:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     4a4:	76707865 	ldrbtvc	r7, [r0], -r5, ror #16
     4a8:	6f006c61 	svcvs	0x00006c61
     4ac:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     4b0:	745f7463 	ldrbvc	r7, [pc], #-1123	; 4b8 <STACK_SIZE+0xb8>
     4b4:	00657079 	rsbeq	r7, r5, r9, ror r0
     4b8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     4bc:	5f696261 	svcpl	0x00696261
     4c0:	706d6364 	rsbvc	r6, sp, r4, ror #6
     4c4:	5f006567 	svcpl	0x00006567
     4c8:	616f746e 	cmnvs	pc, lr, ror #8
     4cc:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
     4d0:	70730067 	rsbsvc	r0, r3, r7, rrx
     4d4:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     4d8:	5f5f0066 	svcpl	0x005f0066
     4dc:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     4e0:	69755f69 	ldmdbvs	r5!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     4e4:	5f006432 	svcpl	0x00006432
     4e8:	6165615f 	cmnvs	r5, pc, asr r1
     4ec:	645f6962 	ldrbvs	r6, [pc], #-2402	; 4f4 <STACK_SIZE+0xf4>
     4f0:	67706d63 	ldrbvs	r6, [r0, -r3, ror #26]!
     4f4:	616d0074 	smcvs	53252	; 0xd004
     4f8:	6e656c78 	mcrvs	12, 3, r6, cr5, cr8, {3}
     4fc:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
     500:	5f00696f 	svcpl	0x0000696f
     504:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
     508:	5f6e656c 	svcpl	0x006e656c
     50c:	5f5f0073 	svcpl	0x005f0073
     510:	5f007061 	svcpl	0x00007061
     514:	6165615f 	cmnvs	r5, pc, asr r1
     518:	645f6962 	ldrbvs	r6, [pc], #-2402	; 520 <STACK_SIZE+0x120>
     51c:	006c756d 	rsbeq	r7, ip, sp, ror #10
     520:	6f6f425f 	svcvs	0x006f425f
     524:	5f5f006c 	svcpl	0x005f006c
     528:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     52c:	745f3436 	ldrbvc	r3, [pc], #-1078	; 534 <STACK_SIZE+0x134>
     530:	73695f00 	cmnvc	r9, #0, 30
     534:	6769645f 			; <UNDEFINED> instruction: 0x6769645f
     538:	5f007469 	svcpl	0x00007469
     53c:	706e7376 	rsbvc	r7, lr, r6, ror r3
     540:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     544:	6f630066 	svcvs	0x00630066
     548:	5f00766e 	svcpl	0x0000766e
     54c:	6165615f 	cmnvs	r5, pc, asr r1
     550:	645f6962 	ldrbvs	r6, [pc], #-2402	; 558 <STACK_SIZE+0x158>
     554:	65706d63 	ldrbvs	r6, [r0, #-3427]!	; 0xfffff29d
     558:	5f5f0071 	svcpl	0x005f0071
     55c:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     560:	5f727470 	svcpl	0x00727470
     564:	68630074 	stmdavs	r3!, {r2, r4, r5, r6}^
     568:	63617261 	cmnvs	r1, #268435462	; 0x10000006
     56c:	00726574 	rsbseq	r6, r2, r4, ror r5
     570:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     574:	7665725f 			; <UNDEFINED> instruction: 0x7665725f
     578:	615f5f00 	cmpvs	pc, r0, lsl #30
     57c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     580:	7573645f 	ldrbvc	r6, [r3, #-1119]!	; 0xfffffba1
     584:	5f5f0062 	svcpl	0x005f0062
     588:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     58c:	6c755f69 	ldclvs	15, cr5, [r5], #-420	; 0xfffffe5c
     590:	6d766964 			; <UNDEFINED> instruction: 0x6d766964
     594:	5f00646f 	svcpl	0x0000646f
     598:	6165615f 	cmnvs	r5, pc, asr r1
     59c:	645f6962 	ldrbvs	r6, [pc], #-2402	; 5a4 <STACK_SIZE+0x1a4>
     5a0:	6c706d63 	ldclvs	13, cr6, [r0], #-396	; 0xfffffe74
     5a4:	756f0065 	strbvc	r0, [pc, #-101]!	; 547 <STACK_SIZE+0x147>
     5a8:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     5ac:	72775f74 	rsbsvc	r5, r7, #116, 30	; 0x1d0
     5b0:	745f7061 	ldrbvc	r7, [pc], #-97	; 5b8 <STACK_SIZE+0x1b8>
     5b4:	00657079 	rsbeq	r7, r5, r9, ror r0
     5b8:	63657270 	cmnvs	r5, #112, 4
     5bc:	69776600 	ldmdbvs	r7!, {r9, sl, sp, lr}^
     5c0:	00687464 	rsbeq	r7, r8, r4, ror #8
     5c4:	6e675f5f 	mcrvs	15, 3, r5, cr7, cr15, {2}
     5c8:	765f6375 			; <UNDEFINED> instruction: 0x765f6375
     5cc:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     5d0:	5f007473 	svcpl	0x00007473
     5d4:	6165615f 	cmnvs	r5, pc, asr r1
     5d8:	645f6962 	ldrbvs	r6, [pc], #-2402	; 5e0 <STACK_SIZE+0x1e0>
     5dc:	6c706d63 	ldclvs	13, cr6, [r0], #-396	; 0xfffffe74
     5e0:	6e5f0074 	mrcvs	0, 2, r0, cr15, cr4, {3}
     5e4:	5f616f74 	svcpl	0x00616f74
     5e8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     5ec:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
     5f0:	73690067 	cmnvc	r9, #103	; 0x67
     5f4:	006c6c5f 	rsbeq	r6, ip, pc, asr ip
     5f8:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     5fc:	65727000 	ldrbvs	r7, [r2, #-0]!
     600:	69736963 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, fp, sp, lr}^
     604:	2e006e6f 	cdpcs	14, 0, cr6, cr0, cr15, {3}
     608:	6f432f2e 	svcvs	0x00432f2e
     60c:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     610:	752f6372 	strvc	r6, [pc, #-882]!	; 2a6 <__STACKSEAL_SIZE+0x2a6>
     614:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     618:	61750063 	cmnvs	r5, r3, rrx
     61c:	725f7472 	subsvc	r7, pc, #1912602624	; 0x72000000
     620:	00766365 	rsbseq	r6, r6, r5, ror #6
     624:	63746567 	cmnvs	r4, #432013312	; 0x19c00000
     628:	00726168 	rsbseq	r6, r2, r8, ror #2
     62c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     630:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
     634:	65670064 	strbvs	r0, [r7, #-100]!	; 0xffffff9c
     638:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     63c:	74007261 	strvc	r7, [r0], #-609	; 0xfffffd9f
     640:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     644:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     648:	6e776f5f 	mrcvs	15, 3, r6, cr7, cr15, {2}
     64c:	6d5f6465 	cfldrdvs	mvd6, [pc, #-404]	; 4c0 <STACK_SIZE+0xc0>
     650:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     654:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     658:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     65c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     660:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     664:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     668:	5f6c616e 	svcpl	0x006c616e
     66c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     670:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
     674:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     678:	0073756f 	rsbseq	r7, r3, pc, ror #10
     67c:	655f7874 	ldrbvs	r7, [pc, #-2164]	; fffffe10 <__RAM_segment_used_end__+0xc7effe10>
     680:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
     684:	616c665f 	cmnvs	ip, pc, asr r6
     688:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
     68c:	70756f72 	rsbsvc	r6, r5, r2, ror pc
     690:	0064695f 	rsbeq	r6, r4, pc, asr r9
     694:	5f78745f 	svcpl	0x0078745f
     698:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     69c:	6f6f705f 	svcvs	0x006f705f
     6a0:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     6a4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     6a8:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
     6ac:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     6b0:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
     6b4:	695f6575 	ldmdbvs	pc, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     6b8:	78740064 	ldmdavc	r4!, {r2, r5, r6}^
     6bc:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
     6c0:	6f687061 	svcvs	0x00687061
     6c4:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     6c8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     6cc:	705f6465 	subsvc	r6, pc, r5, ror #8
     6d0:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     6d4:	0073756f 	rsbseq	r7, r3, pc, ror #10
     6d8:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     6dc:	6b636f6c 	blvs	18dc494 <SYSTEM_CLOCK+0x1323714>
     6e0:	6f6f705f 	svcvs	0x006f705f
     6e4:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     6e8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     6ec:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     6f0:	6f697665 	svcvs	0x00697665
     6f4:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     6f8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     6fc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     700:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     704:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
     708:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     70c:	6f687365 	svcvs	0x00687365
     710:	7400646c 	strvc	r6, [r0], #-1132	; 0xfffffb94
     714:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     718:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     71c:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     720:	705f7972 	subsvc	r7, pc, r2, ror r9	; <UNPREDICTABLE>
     724:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
     728:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
     72c:	5f787400 	svcpl	0x00787400
     730:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     734:	6f705f6b 	svcvs	0x00705f6b
     738:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     73c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     740:	5f787400 	svcpl	0x00787400
     744:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     748:	726f5f78 	rsbvc	r5, pc, #120, 30	; 0x1e0
     74c:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
     750:	705f6c61 	subsvc	r6, pc, r1, ror #24
     754:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     758:	00797469 	rsbseq	r7, r9, r9, ror #8
     75c:	5f78745f 	svcpl	0x0078745f
     760:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     764:	72635f65 	rsbvc	r5, r3, #404	; 0x194
     768:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     76c:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
     770:	745f0072 	ldrbvc	r0, [pc], #-114	; 778 <STACK_SIZE+0x378>
     774:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
     778:	61697469 	cmnvs	r9, r9, ror #8
     77c:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
     780:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
     784:	5f646573 	svcpl	0x00646573
     788:	6f6d656d 	svcvs	0x006d656d
     78c:	5f007972 	svcpl	0x00007972
     790:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
     794:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     798:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     79c:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
     7a0:	756f635f 	strbvc	r6, [pc, #-863]!	; 449 <STACK_SIZE+0x49>
     7a4:	5f00746e 	svcpl	0x0000746e
     7a8:	655f7874 	ldrbvs	r7, [pc, #-2164]	; ffffff3c <__RAM_segment_used_end__+0xc7efff3c>
     7ac:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
     7b0:	616c665f 	cmnvs	ip, pc, asr r6
     7b4:	635f7367 	cmpvs	pc, #-1677721599	; 0x9c000001
     7b8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     7bc:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
     7c0:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     7c4:	5f787400 	svcpl	0x00787400
     7c8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     7cc:	655f6461 	ldrbvs	r6, [pc, #-1121]	; 373 <__STACKSEAL_SIZE+0x373>
     7d0:	7972746e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     7d4:	5f787400 	svcpl	0x00787400
     7d8:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     7dc:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
     7e0:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
     7e4:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     7e8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     7ec:	5f646165 	svcpl	0x00646165
     7f0:	616c6564 	cmnvs	ip, r4, ror #10
     7f4:	5f646579 	svcpl	0x00646579
     7f8:	70737573 	rsbsvc	r7, r3, r3, ror r5
     7fc:	00646e65 	rsbeq	r6, r4, r5, ror #28
     800:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 638 <STACK_SIZE+0x238>
     804:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     808:	0064695f 	rsbeq	r6, r4, pc, asr r9
     80c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 814 <__Vectors_Size+0x54>
     810:	61657268 	cmnvs	r5, r8, ror #4
     814:	65725f64 	ldrbvs	r5, [r2, #-3940]!	; 0xfffff09c
     818:	5f796461 	svcpl	0x00796461
     81c:	76657270 			; <UNDEFINED> instruction: 0x76657270
     820:	73756f69 	cmnvc	r5, #420	; 0x1a4
     824:	5f787400 	svcpl	0x00787400
     828:	616d6573 	smcvs	54867	; 0xd653
     82c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     830:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
     834:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     838:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     83c:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     840:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     844:	6f6c625f 	svcvs	0x006c625f
     848:	705f6b63 	subsvc	r6, pc, r3, ror #22
     84c:	5f6c6f6f 	svcpl	0x006c6f6f
     850:	70737573 	rsbsvc	r7, r3, r3, ror r5
     854:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     858:	6c5f6e6f 	mrrcvs	14, 6, r6, pc, cr15	; <UNPREDICTABLE>
     85c:	00747369 	rsbseq	r7, r4, r9, ror #6
     860:	745f7874 	ldrbvc	r7, [pc], #-2164	; 868 <__Vectors_Size+0xa8>
     864:	61657268 	cmnvs	r5, r8, ror #4
     868:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     86c:	5f6b6361 	svcpl	0x006b6361
     870:	00727470 	rsbseq	r7, r2, r0, ror r4
     874:	5f78745f 	svcpl	0x0078745f
     878:	616d6573 	smcvs	54867	; 0xd653
     87c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     880:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
     884:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
     888:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
     88c:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
     890:	6f635f74 	svcvs	0x00635f74
     894:	00746e75 	rsbseq	r6, r4, r5, ror lr
     898:	425f5854 	subsmi	r5, pc, #84, 16	; 0x540000
     89c:	4b434f4c 	blmi	10d45d4 <SYSTEM_CLOCK+0xb1b854>
     8a0:	4f4f505f 	svcmi	0x004f505f
     8a4:	54535f4c 	ldrbpl	r5, [r3], #-3916	; 0xfffff0b4
     8a8:	54435552 	strbpl	r5, [r3], #-1362	; 0xfffffaae
     8ac:	5f787400 	svcpl	0x00787400
     8b0:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
     8b4:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
     8b8:	5f736761 	svcpl	0x00736761
     8bc:	756f7267 	strbvc	r7, [pc, #-615]!	; 65d <STACK_SIZE+0x25d>
     8c0:	75735f70 	ldrbvc	r5, [r3, #-3952]!	; 0xfffff090
     8c4:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     8c8:	5f646564 	svcpl	0x00646564
     8cc:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     8d0:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     8d4:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     8d8:	685f7865 	ldmdavs	pc, {r0, r2, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     8dc:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
     8e0:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     8e4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     8e8:	5f797469 	svcpl	0x00797469
     8ec:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
     8f0:	00676e69 	rsbeq	r6, r7, r9, ror #28
     8f4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 8fc <__Vectors_Size+0x13c>
     8f8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     8fc:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
     900:	616e7265 	cmnvs	lr, r5, ror #4
     904:	69745f6c 	ldmdbvs	r4!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     908:	756f656d 	strbvc	r6, [pc, #-1389]!	; 3a3 <__STACKSEAL_SIZE+0x3a3>
     90c:	61705f74 	cmnvs	r0, r4, ror pc
     910:	006d6172 	rsbeq	r6, sp, r2, ror r1
     914:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
     918:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     91c:	6174735f 	cmnvs	r4, pc, asr r3
     920:	74007472 	strvc	r7, [r0], #-1138	; 0xfffffb8e
     924:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     928:	5f6b636f 	svcpl	0x006b636f
     92c:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 774 <STACK_SIZE+0x374>
     930:	746f745f 	strbtvc	r7, [pc], #-1119	; 938 <__Vectors_Size+0x178>
     934:	74006c61 	strvc	r6, [r0], #-3169	; 0xfffff39f
     938:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     93c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     940:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     944:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     948:	705f6465 	subsvc	r6, pc, r5, ror #8
     94c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     950:	0073756f 	rsbseq	r7, r3, pc, ror #10
     954:	745f7874 	ldrbvc	r7, [pc], #-2164	; 95c <__Vectors_Size+0x19c>
     958:	61657268 	cmnvs	r5, r8, ror #4
     95c:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     960:	00657461 	rsbeq	r7, r5, r1, ror #8
     964:	745f7874 	ldrbvc	r7, [pc], #-2164	; 96c <__Vectors_Size+0x1ac>
     968:	61657268 	cmnvs	r5, r8, ror #4
     96c:	73755f64 	cmnvc	r5, #100, 30	; 0x190
     970:	705f7265 	subsvc	r7, pc, r5, ror #4
     974:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
     978:	745f7470 	ldrbvc	r7, [pc], #-1136	; 980 <__Vectors_Size+0x1c0>
     97c:	73657268 	cmnvc	r5, #104, 4	; 0x80000006
     980:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
     984:	5f787400 	svcpl	0x00787400
     988:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     98c:	6f5f6461 	svcvs	0x005f6461
     990:	64656e77 	strbtvs	r6, [r5], #-3703	; 0xfffff189
     994:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     998:	635f7865 	cmpvs	pc, #6619136	; 0x650000
     99c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     9a0:	5f787400 	svcpl	0x00787400
     9a4:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     9a8:	6f6f705f 	svcvs	0x006f705f
     9ac:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
     9b0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     9b4:	5f787400 	svcpl	0x00787400
     9b8:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     9bc:	6f6f705f 	svcvs	0x006f705f
     9c0:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     9c4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     9c8:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     9cc:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     9d0:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     9d4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     9d8:	6573755f 	ldrbvs	r7, [r3, #-1375]!	; 0xfffffaa1
     9dc:	72705f72 	rsbsvc	r5, r0, #456	; 0x1c8
     9e0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     9e4:	74007974 	strvc	r7, [r0], #-2420	; 0xfffff68c
     9e8:	76655f78 	uqsub16vc	r5, r5, r8
     9ec:	5f746e65 	svcpl	0x00746e65
     9f0:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     9f4:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
     9f8:	5f70756f 	svcpl	0x0070756f
     9fc:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
     a00:	00746e65 	rsbseq	r6, r4, r5, ror #28
     a04:	745f7874 	ldrbvc	r7, [pc], #-2164	; a0c <__Vectors_Size+0x24c>
     a08:	61657268 	cmnvs	r5, r8, ror #4
     a0c:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     a10:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     a14:	74007974 	strvc	r7, [r0], #-2420	; 0xfffff68c
     a18:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     a1c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     a20:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     a24:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     a28:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
     a2c:	70756e61 	rsbsvc	r6, r5, r1, ror #28
     a30:	5f585400 	svcpl	0x00585400
     a34:	4e455645 	cdpmi	6, 4, cr5, cr5, cr5, {2}
     a38:	4c465f54 	mcrrmi	15, 5, r5, r6, cr4
     a3c:	5f534741 	svcpl	0x00534741
     a40:	554f5247 	strbpl	r5, [pc, #-583]	; 801 <__Vectors_Size+0x41>
     a44:	54535f50 	ldrbpl	r5, [r3], #-3920	; 0xfffff0b0
     a48:	54435552 	strbpl	r5, [r3], #-1362	; 0xfffffaae
     a4c:	5f787400 	svcpl	0x00787400
     a50:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     a54:	6f6f705f 	svcvs	0x006f705f
     a58:	69735f6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     a5c:	5400657a 	strpl	r6, [r0], #-1402	; 0xfffffa86
     a60:	56455f58 			; <UNDEFINED> instruction: 0x56455f58
     a64:	5f544e45 	svcpl	0x00544e45
     a68:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
     a6c:	52475f53 	subpl	r5, r7, #332	; 0x14c
     a70:	0050554f 	subseq	r5, r0, pc, asr #10
     a74:	655f7874 	ldrbvs	r7, [pc, #-2164]	; 208 <__STACKSEAL_SIZE+0x208>
     a78:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
     a7c:	616c665f 	cmnvs	ip, pc, asr r6
     a80:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
     a84:	70756f72 	rsbsvc	r6, r5, r2, ror pc
     a88:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     a8c:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     a90:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
     a94:	6f687061 	svcvs	0x00687061
     a98:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     a9c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     aa0:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
     aa4:	00747865 	rsbseq	r7, r4, r5, ror #16
     aa8:	535f5854 	cmppl	pc, #84, 16	; 0x540000
     aac:	50414d45 	subpl	r4, r1, r5, asr #26
     ab0:	45524f48 	ldrbmi	r4, [r2, #-3912]	; 0xfffff0b8
     ab4:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     ab8:	00544355 	subseq	r4, r4, r5, asr r3
     abc:	745f7874 	ldrbvc	r7, [pc], #-2164	; ac4 <__Vectors_Size+0x304>
     ac0:	61657268 	cmnvs	r5, r8, ror #4
     ac4:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
     ac8:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
     acc:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
     ad0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     ad4:	74007974 	strvc	r7, [r0], #-2420	; 0xfffff68c
     ad8:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     adc:	5f6b636f 	svcpl	0x006b636f
     ae0:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 928 <__Vectors_Size+0x168>
     ae4:	7a69735f 	bvc	1a5d868 <SYSTEM_CLOCK+0x14a4ae8>
     ae8:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     aec:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     af0:	5f646165 	svcpl	0x00646165
     af4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     af8:	58540072 	ldmdapl	r4, {r1, r4, r5, r6}^
     afc:	4555515f 	ldrbmi	r5, [r5, #-351]	; 0xfffffea1
     b00:	54004555 	strpl	r4, [r0], #-1365	; 0xfffffaab
     b04:	48545f58 	ldmdami	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     b08:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     b0c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     b10:	00544355 	subseq	r4, r4, r5, asr r3
     b14:	745f7874 	ldrbvc	r7, [pc], #-2164	; b1c <__Vectors_Size+0x35c>
     b18:	61657268 	cmnvs	r5, r8, ror #4
     b1c:	63735f64 	cmnvs	r3, #100, 30	; 0x190
     b20:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
     b24:	685f656c 	ldmdavs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     b28:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
     b2c:	515f5854 	cmppl	pc, r4, asr r8	; <UNPREDICTABLE>
     b30:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
     b34:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     b38:	00544355 	subseq	r4, r4, r5, asr r3
     b3c:	5f78745f 	svcpl	0x0078745f
     b40:	616d6573 	smcvs	54867	; 0xd653
     b44:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     b48:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
     b4c:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
     b50:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
     b54:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     b58:	756f656d 	strbvc	r6, [pc, #-1389]!	; 5f3 <STACK_SIZE+0x1f3>
     b5c:	6f635f74 	svcvs	0x00635f74
     b60:	00746e75 	rsbseq	r6, r4, r5, ror lr
     b64:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     b68:	5f657479 	svcpl	0x00657479
     b6c:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 9b4 <__Vectors_Size+0x1f4>
     b70:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     b74:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     b78:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
     b7c:	635f6575 	cmpvs	pc, #490733568	; 0x1d400000
     b80:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     b84:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
     b88:	00747865 	rsbseq	r7, r4, r5, ror #16
     b8c:	655f7874 	ldrbvs	r7, [pc, #-2164]	; 320 <__STACKSEAL_SIZE+0x320>
     b90:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
     b94:	616c665f 	cmnvs	ip, pc, asr r6
     b98:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
     b9c:	70756f72 	rsbsvc	r6, r5, r2, ror pc
     ba0:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     ba4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
     ba8:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     bac:	756f6976 	strbvc	r6, [pc, #-2422]!	; 23e <__STACKSEAL_SIZE+0x23e>
     bb0:	745f0073 	ldrbvc	r0, [pc], #-115	; bb8 <__Vectors_Size+0x3f8>
     bb4:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     bb8:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     bbc:	5f6c6f6f 	svcpl	0x006c6f6f
     bc0:	61657263 	cmnvs	r5, r3, ror #4
     bc4:	5f646574 	svcpl	0x00646574
     bc8:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     bcc:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     bd0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     bd4:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     bd8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     bdc:	5f6c616e 	svcpl	0x006c616e
     be0:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     be4:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     be8:	7a696c61 	bvc	1a5bd74 <SYSTEM_CLOCK+0x14a2ff4>
     bec:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     bf0:	00736b63 	rsbseq	r6, r3, r3, ror #22
     bf4:	745f7874 	ldrbvc	r7, [pc], #-2164	; bfc <__Vectors_Size+0x43c>
     bf8:	61657268 	cmnvs	r5, r8, ror #4
     bfc:	64615f64 	strbtvs	r5, [r1], #-3940	; 0xfffff09c
     c00:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
     c04:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
     c08:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     c0c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     c10:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
     c14:	7874006f 	ldmdavc	r4!, {r0, r1, r2, r3, r5, r6}^
     c18:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     c1c:	5f646165 	svcpl	0x00646165
     c20:	70737573 	rsbsvc	r7, r3, r3, ror r5
     c24:	5f646e65 	svcpl	0x00646e65
     c28:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     c2c:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     c30:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     c34:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     c38:	5f6c6f6f 	svcpl	0x006c6f6f
     c3c:	74006469 	strvc	r6, [r0], #-1129	; 0xfffffb97
     c40:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     c44:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     c48:	6174735f 	cmnvs	r4, pc, asr r3
     c4c:	655f6b63 	ldrbvs	r6, [pc, #-2915]	; f1 <__STACKSEAL_SIZE+0xf1>
     c50:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
     c54:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     c58:	5f786574 	svcpl	0x00786574
     c5c:	656e776f 	strbvs	r7, [lr, #-1903]!	; 0xfffff891
     c60:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     c64:	6f697665 	svcvs	0x00697665
     c68:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     c6c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     c70:	5f72656d 	svcpl	0x0072656d
     c74:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     c78:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
     c7c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     c80:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
     c84:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
     c88:	6f697463 	svcvs	0x00697463
     c8c:	7874006e 	ldmdavc	r4!, {r1, r2, r3, r5, r6}^
     c90:	6f6c625f 	svcvs	0x006c625f
     c94:	705f6b63 	subsvc	r6, pc, r3, ror #22
     c98:	5f6c6f6f 	svcpl	0x006c6f6f
     c9c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
     ca0:	5f585400 	svcpl	0x00585400
     ca4:	45545942 	ldrbmi	r5, [r4, #-2370]	; 0xfffff6be
     ca8:	4f4f505f 	svcmi	0x004f505f
     cac:	54535f4c 	ldrbpl	r5, [r3], #-3916	; 0xfffff0b4
     cb0:	54435552 	strbpl	r5, [r3], #-1362	; 0xfffffaae
     cb4:	5f585400 	svcpl	0x00585400
     cb8:	45545942 	ldrbmi	r5, [r4, #-2370]	; 0xfffff6be
     cbc:	4f4f505f 	svcmi	0x004f505f
     cc0:	7874004c 	ldmdavc	r4!, {r2, r3, r6}^
     cc4:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
     cc8:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
     ccc:	7367616c 	cmnvc	r7, #108, 2
     cd0:	6f72675f 	svcvs	0x0072675f
     cd4:	725f7075 	subsvc	r7, pc, #117	; 0x75
     cd8:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     cdc:	6165735f 	cmnvs	r5, pc, asr r3
     ce0:	00686372 	rsbeq	r6, r8, r2, ror r3
     ce4:	745f7874 	ldrbvc	r7, [pc], #-2164	; cec <__Vectors_Size+0x52c>
     ce8:	61657268 	cmnvs	r5, r8, ror #4
     cec:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     cf0:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     cf4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     cf8:	7165735f 	cmnvc	r5, pc, asr r3
     cfc:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
     d00:	745f0065 	ldrbvc	r0, [pc], #-101	; d08 <__Vectors_Size+0x548>
     d04:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     d08:	5f6b636f 	svcpl	0x006b636f
     d0c:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; b54 <__Vectors_Size+0x394>
     d10:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     d14:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
     d18:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
     d1c:	5f787400 	svcpl	0x00787400
     d20:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     d24:	6f6f705f 	svcvs	0x006f705f
     d28:	75735f6c 	ldrbvc	r5, [r3, #-3948]!	; 0xfffff094
     d2c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     d30:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     d34:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     d38:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     d3c:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     d40:	6f5f7865 	svcvs	0x005f7865
     d44:	72656e77 	rsbvc	r6, r5, #1904	; 0x770
     d48:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
     d4c:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     d50:	635f7865 	cmpvs	pc, #6619136	; 0x650000
     d54:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     d58:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
     d5c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     d60:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
     d64:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     d68:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     d6c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     d70:	7a696c61 	bvc	1a5befc <SYSTEM_CLOCK+0x14a317c>
     d74:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     d78:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     d7c:	6f705f65 	svcvs	0x00705f65
     d80:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     d84:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     d88:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
     d8c:	756f635f 	strbvc	r6, [pc, #-863]!	; a35 <__Vectors_Size+0x275>
     d90:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
     d94:	76655f78 	uqsub16vc	r5, r5, r8
     d98:	5f746e65 	svcpl	0x00746e65
     d9c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     da0:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
     da4:	5f70756f 	svcpl	0x0070756f
     da8:	70737573 	rsbsvc	r7, r3, r3, ror r5
     dac:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     db0:	6c5f6e6f 	mrrcvs	14, 6, r6, pc, cr15	; <UNPREDICTABLE>
     db4:	00747369 	rsbseq	r7, r4, r9, ror #6
     db8:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     dbc:	5f657479 	svcpl	0x00657479
     dc0:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; c08 <__Vectors_Size+0x448>
     dc4:	6174735f 	cmnvs	r4, pc, asr r3
     dc8:	54007472 	strpl	r7, [r0], #-1138	; 0xfffffb8e
     dcc:	49545f58 	ldmdbmi	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     dd0:	5f52454d 	svcpl	0x0052454d
     dd4:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
     dd8:	4c414e52 	mcrrmi	14, 5, r4, r1, cr2
     ddc:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     de0:	00544355 	subseq	r4, r4, r5, asr r3
     de4:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     de8:	6b636f6c 	blvs	18dcba0 <SYSTEM_CLOCK+0x1323e20>
     dec:	6f6f705f 	svcvs	0x006f705f
     df0:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     df4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     df8:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     dfc:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     e00:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
     e04:	5f657565 	svcpl	0x00657565
     e08:	61706163 	cmnvs	r0, r3, ror #2
     e0c:	79746963 	ldmdbvc	r4!, {r0, r1, r5, r6, r8, fp, sp, lr}^
     e10:	5f787400 	svcpl	0x00787400
     e14:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     e18:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
     e1c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     e20:	5f646564 	svcpl	0x00646564
     e24:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     e28:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     e2c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     e30:	5f646165 	svcpl	0x00646165
     e34:	70737573 	rsbsvc	r7, r3, r3, ror r5
     e38:	5f646e65 	svcpl	0x00646e65
     e3c:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
     e40:	74006e6f 	strvc	r6, [r0], #-3695	; 0xfffff191
     e44:	76655f78 	uqsub16vc	r5, r5, r8
     e48:	5f746e65 	svcpl	0x00746e65
     e4c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     e50:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
     e54:	5f70756f 	svcpl	0x0070756f
     e58:	61657263 	cmnvs	r5, r3, ror #4
     e5c:	5f646574 	svcpl	0x00646574
     e60:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     e64:	5f787400 	svcpl	0x00787400
     e68:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     e6c:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     e70:	6b636174 	blvs	18d9448 <SYSTEM_CLOCK+0x13206c8>
     e74:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
     e78:	61765f6c 	cmnvs	r6, ip, ror #30
     e7c:	0065756c 	rsbeq	r7, r5, ip, ror #10
     e80:	5f78745f 	svcpl	0x0078745f
     e84:	616d6573 	smcvs	54867	; 0xd653
     e88:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     e8c:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
     e90:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
     e94:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
     e98:	75705f65 	ldrbvc	r5, [r0, #-3941]!	; 0xfffff09b
     e9c:	6f635f74 	svcvs	0x00635f74
     ea0:	00746e75 	rsbseq	r6, r4, r5, ror lr
     ea4:	745f7874 	ldrbvc	r7, [pc], #-2164	; eac <__Vectors_Size+0x6ec>
     ea8:	61657268 	cmnvs	r5, r8, ror #4
     eac:	616e5f64 	cmnvs	lr, r4, ror #30
     eb0:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
     eb4:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     eb8:	5f786574 	svcpl	0x00786574
     ebc:	61657263 	cmnvs	r5, r3, ror #4
     ec0:	5f646574 	svcpl	0x00646574
     ec4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     ec8:	5f787400 	svcpl	0x00787400
     ecc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     ed0:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     ed4:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     ed8:	635f646e 	cmpvs	pc, #1845493760	; 0x6e000000
     edc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
     ee0:	625f6c6f 	subsvs	r6, pc, #28416	; 0x6f00
     ee4:	6b636f6c 	blvs	18dcc9c <SYSTEM_CLOCK+0x1323f1c>
     ee8:	5f787400 	svcpl	0x00787400
     eec:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     ef0:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
     ef4:	74006461 	strvc	r6, [r0], #-1121	; 0xfffffb9f
     ef8:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
     efc:	5f657565 	svcpl	0x00657565
     f00:	00646e65 	rsbeq	r6, r4, r5, ror #28
     f04:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
     f08:	70616d65 	rsbvc	r6, r1, r5, ror #26
     f0c:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     f10:	0064695f 	rsbeq	r6, r4, pc, asr r9
     f14:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
     f18:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f1c:	6176615f 	cmnvs	r6, pc, asr r1
     f20:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
     f24:	735f656c 	cmpvc	pc, #108, 10	; 0x1b000000
     f28:	61726f74 	cmnvs	r2, r4, ror pc
     f2c:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
     f30:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f34:	5f72656d 	svcpl	0x0072656d
     f38:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     f3c:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
     f40:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     f44:	65685f74 	strbvs	r5, [r8, #-3956]!	; 0xfffff08c
     f48:	74006461 	strvc	r6, [r0], #-1121	; 0xfffffb9f
     f4c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f50:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     f54:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
     f58:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     f5c:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
     f60:	00656369 	rsbeq	r6, r5, r9, ror #6
     f64:	5f78745f 	svcpl	0x0078745f
     f68:	616d6573 	smcvs	54867	; 0xd653
     f6c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     f70:	72635f65 	rsbvc	r5, r3, #404	; 0x194
     f74:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     f78:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
     f7c:	58540072 	ldmdapl	r4, {r1, r4, r5, r6}^
     f80:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     f84:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     f88:	5245544e 	subpl	r5, r5, #1308622848	; 0x4e000000
     f8c:	004c414e 	subeq	r4, ip, lr, asr #2
     f90:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     f94:	6b636f6c 	blvs	18dcd4c <SYSTEM_CLOCK+0x1323fcc>
     f98:	6f6f705f 	svcvs	0x006f705f
     f9c:	6c625f6c 	stclvs	15, cr5, [r2], #-432	; 0xfffffe50
     fa0:	5f6b636f 	svcpl	0x006b636f
     fa4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     fa8:	5f585400 	svcpl	0x00585400
     fac:	414d4553 	cmpmi	sp, r3, asr r5
     fb0:	524f4850 	subpl	r4, pc, #80, 16	; 0x500000
     fb4:	78740045 	ldmdavc	r4!, {r0, r2, r6}^
     fb8:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     fbc:	635f7865 	cmpvs	pc, #6619136	; 0x650000
     fc0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     fc4:	705f6465 	subsvc	r6, pc, r5, ror #8
     fc8:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     fcc:	0073756f 	rsbseq	r7, r3, pc, ror #10
     fd0:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     fd4:	6b636f6c 	blvs	18dcd8c <SYSTEM_CLOCK+0x132400c>
     fd8:	6f6f705f 	svcvs	0x006f705f
     fdc:	76615f6c 	strbtvc	r5, [r1], -ip, ror #30
     fe0:	616c6961 	cmnvs	ip, r1, ror #18
     fe4:	5f656c62 	svcpl	0x00656c62
     fe8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     fec:	5f787400 	svcpl	0x00787400
     ff0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     ff4:	725f6461 	subsvc	r6, pc, #1627389952	; 0x61000000
     ff8:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     ffc:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    1000:	58540074 	ldmdapl	r4, {r2, r4, r5, r6}^
    1004:	54554d5f 	ldrbpl	r4, [r5], #-3423	; 0xfffff2a1
    1008:	74005845 	strvc	r5, [r0], #-2117	; 0xfffff7bb
    100c:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    1010:	5f6b636f 	svcpl	0x006b636f
    1014:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; e5c <__Vectors_Size+0x69c>
    1018:	0064695f 	rsbeq	r6, r4, pc, asr r9
    101c:	5f78745f 	svcpl	0x0078745f
    1020:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1024:	6f705f6b 	svcvs	0x00705f6b
    1028:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    102c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1030:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    1034:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1038:	5f787400 	svcpl	0x00787400
    103c:	616d6573 	smcvs	54867	; 0xd653
    1040:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1044:	616e5f65 	cmnvs	lr, r5, ror #30
    1048:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    104c:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
    1050:	5f786574 	svcpl	0x00786574
    1054:	70737573 	rsbsvc	r7, r3, r3, ror r5
    1058:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    105c:	6f635f64 	svcvs	0x00635f64
    1060:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1064:	5f78745f 	svcpl	0x0078745f
    1068:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    106c:	695f6461 	ldmdbvs	pc, {r0, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
    1070:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1074:	7a696c61 	bvc	1a5c200 <SYSTEM_CLOCK+0x14a3480>
    1078:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    107c:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    1080:	6f5f7865 	svcvs	0x005f7865
    1084:	72656e77 	rsbvc	r6, r5, #1904	; 0x770
    1088:	70696873 	rsbvc	r6, r9, r3, ror r8
    108c:	756f635f 	strbvc	r6, [pc, #-863]!	; d35 <__Vectors_Size+0x575>
    1090:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
    1094:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1098:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    109c:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    10a0:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    10a4:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
    10a8:	4c55006f 	mrrcmi	0, 6, r0, r5, cr15
    10ac:	00474e4f 	subeq	r4, r7, pc, asr #28
    10b0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 10b8 <__HEAP_SIZE+0xb8>
    10b4:	61657268 	cmnvs	r5, r8, ror #4
    10b8:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
    10bc:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    10c0:	5f646564 	svcpl	0x00646564
    10c4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    10c8:	5f787400 	svcpl	0x00787400
    10cc:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    10d0:	72635f65 	rsbvc	r5, r3, #404	; 0x194
    10d4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    10d8:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    10dc:	6f697665 	svcvs	0x00697665
    10e0:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
    10e4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    10e8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    10ec:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    10f0:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    10f4:	00676e69 	rsbeq	r6, r7, r9, ror #28
    10f8:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    10fc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1100:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1104:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    1108:	5f6e6f69 	svcpl	0x006e6f69
    110c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    1110:	5f787400 	svcpl	0x00787400
    1114:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    1118:	6f6f705f 	svcvs	0x006f705f
    111c:	76615f6c 	strbtvc	r5, [r1], -ip, ror #30
    1120:	616c6961 	cmnvs	ip, r1, ror #18
    1124:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1128:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    112c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1130:	73656d5f 	cmnvc	r5, #6080	; 0x17c0
    1134:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    1138:	7a69735f 	bvc	1a5debc <SYSTEM_CLOCK+0x14a513c>
    113c:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    1140:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    1144:	6e5f6575 	mrcvs	5, 2, r6, cr15, cr5, {3}
    1148:	00656d61 	rsbeq	r6, r5, r1, ror #26
    114c:	544e4955 	strbpl	r4, [lr], #-2389	; 0xfffff6ab
    1150:	2f2e2e00 	svccs	0x002e2e00
    1154:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1158:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    115c:	6f747262 	svcvs	0x00747262
    1160:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1164:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1168:	6f632f78 	svcvs	0x00632f78
    116c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1170:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1174:	5f78742f 	svcpl	0x0078742f
    1178:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    117c:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1180:	685f657a 	ldmdavs	pc, {r1, r3, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1184:	5f686769 	svcpl	0x00686769
    1188:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    118c:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    1190:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    1194:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1198:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    119c:	756f635f 	strbvc	r6, [pc, #-863]!	; e45 <__Vectors_Size+0x685>
    11a0:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
    11a4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    11a8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    11ac:	6e75725f 	mrcvs	2, 3, r7, cr5, cr15, {2}
    11b0:	756f635f 	strbvc	r6, [pc, #-863]!	; e59 <__Vectors_Size+0x699>
    11b4:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
    11b8:	554d5f58 	strbpl	r5, [sp, #-3928]	; 0xfffff0a8
    11bc:	5f584554 	svcpl	0x00584554
    11c0:	55525453 	ldrbpl	r5, [r2, #-1107]	; 0xfffffbad
    11c4:	74005443 	strvc	r5, [r0], #-1091	; 0xfffffbbd
    11c8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    11cc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    11d0:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    11d4:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    11d8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    11dc:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
    11e0:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    11e4:	706d6565 	rsbvc	r6, sp, r5, ror #10
    11e8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    11ec:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    11f0:	00646165 	rsbeq	r6, r4, r5, ror #2
    11f4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 11fc <__HEAP_SIZE+0x1fc>
    11f8:	61657268 	cmnvs	r5, r8, ror #4
    11fc:	72635f64 	rsbvc	r5, r3, #100, 30	; 0x190
    1200:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1204:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    1208:	6f697665 	svcvs	0x00697665
    120c:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
    1210:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1214:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    1218:	5f6c6f6f 	svcpl	0x006c6f6f
    121c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    1220:	5f787400 	svcpl	0x00787400
    1224:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    1228:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    122c:	5f736761 	svcpl	0x00736761
    1230:	756f7267 	strbvc	r7, [pc, #-615]!	; fd1 <__Vectors_Size+0x811>
    1234:	65645f70 	strbvs	r5, [r4, #-3952]!	; 0xfffff090
    1238:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    123c:	6c635f64 	stclvs	15, cr5, [r3], #-400	; 0xfffffe70
    1240:	00726165 	rsbseq	r6, r2, r5, ror #2
    1244:	745f7874 	ldrbvc	r7, [pc], #-2164	; 124c <__HEAP_SIZE+0x24c>
    1248:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    124c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    1250:	616e7265 	cmnvs	lr, r5, ror #4
    1254:	65725f6c 	ldrbvs	r5, [r2, #-3948]!	; 0xfffff094
    1258:	6e69616d 	powvsez	f6, f1, #5.0
    125c:	5f676e69 	svcpl	0x00676e69
    1260:	6b636974 	blvs	18db838 <SYSTEM_CLOCK+0x1322ab8>
    1264:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
    1268:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    126c:	6f705f65 	svcvs	0x00705f65
    1270:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    1274:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1278:	705f6465 	subsvc	r6, pc, r5, ror #8
    127c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1280:	0073756f 	rsbseq	r7, r3, pc, ror #10
    1284:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 10bc <__HEAP_SIZE+0xbc>
    1288:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    128c:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    1290:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    1294:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    1298:	6f705f65 	svcvs	0x00705f65
    129c:	665f6c6f 	ldrbvs	r6, [pc], -pc, ror #24
    12a0:	6d676172 	stfvse	f6, [r7, #-456]!	; 0xfffffe38
    12a4:	73746e65 	cmnvc	r4, #1616	; 0x650
    12a8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    12ac:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    12b0:	6f687061 	svcvs	0x00687061
    12b4:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    12b8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    12bc:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    12c0:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    12c4:	5f787400 	svcpl	0x00787400
    12c8:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
    12cc:	75735f78 	ldrbvc	r5, [r3, #-3960]!	; 0xfffff088
    12d0:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    12d4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    12d8:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    12dc:	58540074 	ldmdapl	r4, {r2, r4, r5, r6}^
    12e0:	5248545f 	subpl	r5, r8, #1593835520	; 0x5f000000
    12e4:	00444145 	subeq	r4, r4, r5, asr #2
    12e8:	41484355 	cmpmi	r8, r5, asr r3
    12ec:	78740052 	ldmdavc	r4!, {r1, r4, r6}^
    12f0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    12f4:	5f646165 	svcpl	0x00646165
    12f8:	61657263 	cmnvs	r5, r3, ror #4
    12fc:	5f646574 	svcpl	0x00646574
    1300:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    1304:	5f787400 	svcpl	0x00787400
    1308:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    130c:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1310:	6b636174 	blvs	18d98e8 <SYSTEM_CLOCK+0x1320b68>
    1314:	6174735f 	cmnvs	r4, pc, asr r3
    1318:	5f007472 	svcpl	0x00007472
    131c:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 1154 <__HEAP_SIZE+0x154>
    1320:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1324:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1328:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    132c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1330:	5f787400 	svcpl	0x00787400
    1334:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1338:	695f6461 	ldmdbvs	pc, {r0, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
    133c:	58540064 	ldmdapl	r4, {r2, r5, r6}^
    1340:	4f4c425f 	svcmi	0x004c425f
    1344:	505f4b43 	subspl	r4, pc, r3, asr #22
    1348:	004c4f4f 	subeq	r4, ip, pc, asr #30
    134c:	5f78745f 	svcpl	0x0078745f
    1350:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1354:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1358:	685f657a 	ldmdavs	pc, {r1, r3, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    135c:	5f686769 	svcpl	0x00686769
    1360:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    1364:	745f006c 	ldrbvc	r0, [pc], #-108	; 136c <__HEAP_SIZE+0x36c>
    1368:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    136c:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1370:	5f65726f 	svcpl	0x0065726f
    1374:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1378:	616d726f 	cmnvs	sp, pc, ror #4
    137c:	5f65636e 	svcpl	0x0065636e
    1380:	70737573 	rsbsvc	r7, r3, r3, ror r5
    1384:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1388:	635f6e6f 	cmpvs	pc, #1776	; 0x6f0
    138c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1390:	5f787400 	svcpl	0x00787400
    1394:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1398:	6f705f6b 	svcvs	0x00705f6b
    139c:	615f6c6f 	cmpvs	pc, pc, ror #24
    13a0:	6c696176 	stfvse	f6, [r9], #-472	; 0xfffffe28
    13a4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    13a8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    13ac:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    13b0:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    13b4:	7367616c 	cmnvc	r7, #108, 2
    13b8:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    13bc:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    13c0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    13c4:	5f787400 	svcpl	0x00787400
    13c8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    13cc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    13d0:	6b636174 	blvs	18d99a8 <SYSTEM_CLOCK+0x1320c28>
    13d4:	7a69735f 	bvc	1a5e158 <SYSTEM_CLOCK+0x14a53d8>
    13d8:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    13dc:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    13e0:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    13e4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    13e8:	5f6c616e 	svcpl	0x006c616e
    13ec:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    13f0:	6e5f6576 	mrcvs	5, 2, r6, cr15, cr6, {3}
    13f4:	00747865 	rsbseq	r7, r4, r5, ror #16
    13f8:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    13fc:	5f657479 	svcpl	0x00657479
    1400:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1248 <__HEAP_SIZE+0x248>
    1404:	6e776f5f 	mrcvs	15, 3, r6, cr7, cr15, {2}
    1408:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
    140c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1410:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1414:	6174735f 	cmnvs	r4, pc, asr r3
    1418:	685f6b63 	ldmdavs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    141c:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1420:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    1424:	74007274 	strvc	r7, [r0], #-628	; 0xfffffd8c
    1428:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    142c:	5f657565 	svcpl	0x00657565
    1430:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1434:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    1438:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    143c:	6f5f7865 	svcvs	0x005f7865
    1440:	64656e77 	strbtvs	r6, [r5], #-3703	; 0xfffff189
    1444:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    1448:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    144c:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    1450:	6f687061 	svcvs	0x00687061
    1454:	735f6572 	cmpvc	pc, #478150656	; 0x1c800000
    1458:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    145c:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    1460:	756f635f 	strbvc	r6, [pc, #-863]!	; 1109 <__HEAP_SIZE+0x109>
    1464:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
    1468:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    146c:	5f6b636f 	svcpl	0x006b636f
    1470:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 12b8 <__HEAP_SIZE+0x2b8>
    1474:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1478:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    147c:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    1480:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1484:	5f787400 	svcpl	0x00787400
    1488:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    148c:	6e655f65 	cdpvs	15, 6, cr5, cr5, cr5, {3}
    1490:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1494:	5f006465 	svcpl	0x00006465
    1498:	745f7874 	ldrbvc	r7, [pc], #-2164	; 14a0 <__HEAP_SIZE+0x4a0>
    149c:	61657268 	cmnvs	r5, r8, ror #4
    14a0:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    14a4:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    14a8:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    14ac:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    14b0:	756f656d 	strbvc	r6, [pc, #-1389]!	; f4b <__Vectors_Size+0x78b>
    14b4:	6f635f74 	svcvs	0x00635f74
    14b8:	00746e75 	rsbseq	r6, r4, r5, ror lr
    14bc:	5f78745f 	svcpl	0x0078745f
    14c0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    14c4:	685f6461 	ldmdavs	pc, {r0, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
    14c8:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    14cc:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    14d0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    14d4:	00797469 	rsbseq	r7, r9, r9, ror #8
    14d8:	5f78745f 	svcpl	0x0078745f
    14dc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    14e0:	705f6461 	subsvc	r6, pc, r1, ror #8
    14e4:	6f667265 	svcvs	0x00667265
    14e8:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    14ec:	695f6563 	ldmdbvs	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    14f0:	5f656c64 	svcpl	0x00656c64
    14f4:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
    14f8:	635f6e72 	cmpvs	pc, #1824	; 0x720
    14fc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1500:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1504:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1508:	5f646165 	svcpl	0x00646165
    150c:	63657865 	cmnvs	r5, #6619136	; 0x650000
    1510:	5f657475 	svcpl	0x00657475
    1514:	00727470 	rsbseq	r7, r2, r0, ror r4
    1518:	5f78745f 	svcpl	0x0078745f
    151c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1520:	6d5f6461 	cfldrdvs	mvd6, [pc, #-388]	; 13a4 <__HEAP_SIZE+0x3a4>
    1524:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1528:	6c65725f 	sfmvs	f7, 2, [r5], #-380	; 0xfffffe84
    152c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    1530:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1534:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1538:	5f646165 	svcpl	0x00646165
    153c:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1540:	616d726f 	cmnvs	sp, pc, ror #4
    1544:	5f65636e 	svcpl	0x0065636e
    1548:	696c6572 	stmdbvs	ip!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    154c:	6975716e 	ldmdbvs	r5!, {r1, r2, r3, r5, r6, r8, ip, sp, lr}^
    1550:	635f6873 	cmpvs	pc, #7536640	; 0x730000
    1554:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1558:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    155c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1560:	5f646165 	svcpl	0x00646165
    1564:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1568:	616d726f 	cmnvs	sp, pc, ror #4
    156c:	5f65636e 	svcpl	0x0065636e
    1570:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1574:	65746963 	ldrbvs	r6, [r4, #-2403]!	; 0xfffff69d
    1578:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    157c:	706d6565 	rsbvc	r6, sp, r5, ror #10
    1580:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1584:	756f635f 	strbvc	r6, [pc, #-863]!	; 122d <__HEAP_SIZE+0x22d>
    1588:	5f00746e 	svcpl	0x0000746e
    158c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1594 <__HEAP_SIZE+0x594>
    1590:	61657268 	cmnvs	r5, r8, ror #4
    1594:	70615f64 	rsbvc	r5, r1, r4, ror #30
    1598:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    159c:	6f697461 	svcvs	0x00697461
    15a0:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
    15a4:	5f6b6361 	svcpl	0x006b6361
    15a8:	6f727265 	svcvs	0x00727265
    15ac:	61685f72 	smcvs	34290	; 0x85f2
    15b0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    15b4:	745f0072 	ldrbvc	r0, [pc], #-114	; 15bc <__HEAP_SIZE+0x5bc>
    15b8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    15bc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    15c0:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    15c4:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    15c8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    15cc:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    15d0:	74756365 	ldrbtvc	r6, [r5], #-869	; 0xfffffc9b
    15d4:	6f6c5f65 	svcvs	0x006c5f65
    15d8:	6e695f67 	cdpvs	15, 6, cr5, cr9, cr7, {3}
    15dc:	00786564 	rsbseq	r6, r8, r4, ror #10
    15e0:	5f78745f 	svcpl	0x0078745f
    15e4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    15e8:	705f6461 	subsvc	r6, pc, r1, ror #8
    15ec:	6f667265 	svcvs	0x00667265
    15f0:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    15f4:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    15f8:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    15fc:	6f635f65 	svcvs	0x00635f65
    1600:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1604:	5f78745f 	svcpl	0x0078745f
    1608:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    160c:	705f6461 	subsvc	r6, pc, r1, ror #8
    1610:	6f667265 	svcvs	0x00667265
    1614:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1618:	775f6563 	ldrbvc	r6, [pc, -r3, ror #10]
    161c:	5f746961 	svcpl	0x00746961
    1620:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1624:	6f635f74 	svcvs	0x00635f74
    1628:	00746e75 	rsbseq	r6, r4, r5, ror lr
    162c:	5f78745f 	svcpl	0x0078745f
    1630:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1634:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1638:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    163c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    1640:	00657461 	rsbeq	r7, r5, r1, ror #8
    1644:	5f78745f 	svcpl	0x0078745f
    1648:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    164c:	705f6461 	subsvc	r6, pc, r1, ror #8
    1650:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1654:	5f797469 	svcpl	0x00797469
    1658:	7370616d 	cmnvc	r0, #1073741851	; 0x4000001b
    165c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1660:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
    1664:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    1668:	0064695f 	rsbeq	r6, r4, pc, asr r9
    166c:	5f78745f 	svcpl	0x0078745f
    1670:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1674:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1678:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    167c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    1680:	5f6b6361 	svcpl	0x006b6361
    1684:	00727470 	rsbseq	r7, r2, r0, ror r4
    1688:	5f78745f 	svcpl	0x0078745f
    168c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1690:	705f6461 	subsvc	r6, pc, r1, ror #8
    1694:	6f667265 	svcvs	0x00667265
    1698:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    169c:	705f6563 	subsvc	r6, pc, r3, ror #10
    16a0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    16a4:	5f797469 	svcpl	0x00797469
    16a8:	65766e69 	ldrbvs	r6, [r6, #-3689]!	; 0xfffff197
    16ac:	6f697372 	svcvs	0x00697372
    16b0:	6f635f6e 	svcvs	0x00635f6e
    16b4:	00746e75 	rsbseq	r6, r4, r5, ror lr
    16b8:	5f78745f 	svcpl	0x0078745f
    16bc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    16c0:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    16c4:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    16c8:	705f6465 	subsvc	r6, pc, r5, ror #8
    16cc:	5f007274 	svcpl	0x00007274
    16d0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 16d8 <__HEAP_SIZE+0x6d8>
    16d4:	61657268 	cmnvs	r5, r8, ror #4
    16d8:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    16dc:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    16e0:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    16e4:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    16e8:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    16ec:	6f635f64 	svcvs	0x00635f64
    16f0:	00746e75 	rsbseq	r6, r4, r5, ror lr
    16f4:	5f78745f 	svcpl	0x0078745f
    16f8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    16fc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1700:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
    1704:	735f6c61 	cmpvc	pc, #24832	; 0x6100
    1708:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    170c:	745f0067 	ldrbvc	r0, [pc], #-103	; 1714 <__HEAP_SIZE+0x714>
    1710:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1714:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1718:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    171c:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1720:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1724:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
    1728:	65747563 	ldrbvs	r7, [r4, #-1379]!	; 0xfffffa9d
    172c:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    1730:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1734:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1738:	5f646165 	svcpl	0x00646165
    173c:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1740:	616d726f 	cmnvs	sp, pc, ror #4
    1744:	5f65636e 	svcpl	0x0065636e
    1748:	5f6e6f6e 	svcpl	0x006e6f6e
    174c:	656c6469 	strbvs	r6, [ip, #-1129]!	; 0xfffffb97
    1750:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    1754:	5f6e7275 	svcpl	0x006e7275
    1758:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    175c:	745f0074 	ldrbvc	r0, [pc], #-116	; 1764 <__HEAP_SIZE+0x764>
    1760:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1764:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1768:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    176c:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1770:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1774:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1778:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
    177c:	5f656369 	svcpl	0x00656369
    1780:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1784:	745f0074 	ldrbvc	r0, [pc], #-116	; 178c <__HEAP_SIZE+0x78c>
    1788:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    178c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1790:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1794:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1798:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    179c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    17a0:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    17a4:	705f7470 	subsvc	r7, pc, r0, ror r4	; <UNPREDICTABLE>
    17a8:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    17ac:	6f697470 	svcvs	0x00697470
    17b0:	6f635f6e 	svcvs	0x00635f6e
    17b4:	00746e75 	rsbseq	r6, r4, r5, ror lr
    17b8:	5f78745f 	svcpl	0x0078745f
    17bc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    17c0:	705f6461 	subsvc	r6, pc, r1, ror #8
    17c4:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    17c8:	645f7470 	ldrbvs	r7, [pc], #-1136	; 17d0 <__HEAP_SIZE+0x7d0>
    17cc:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    17d0:	5f00656c 	svcpl	0x0000656c
    17d4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 17dc <__HEAP_SIZE+0x7dc>
    17d8:	61657268 	cmnvs	r5, r8, ror #4
    17dc:	75635f64 	strbvc	r5, [r3, #-3940]!	; 0xfffff09c
    17e0:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    17e4:	74705f74 	ldrbtvc	r5, [r0], #-3956	; 0xfffff08c
    17e8:	745f0072 	ldrbvc	r0, [pc], #-114	; 17f0 <__HEAP_SIZE+0x7f0>
    17ec:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    17f0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    17f4:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    17f8:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    17fc:	756f635f 	strbvc	r6, [pc, #-863]!	; 14a5 <__HEAP_SIZE+0x4a5>
    1800:	2e00746e 	cdpcs	4, 0, cr7, cr0, cr14, {3}
    1804:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1808:	2f2e2e2f 	svccs	0x002e2e2f
    180c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1810:	2f736f74 	svccs	0x00736f74
    1814:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1818:	2f786461 	svccs	0x00786461
    181c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1820:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1824:	742f6372 	strtvc	r6, [pc], #-882	; 182c <__HEAP_SIZE+0x82c>
    1828:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    182c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1830:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1834:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1838:	2e657a69 	vnmulcs.f32	s15, s10, s19
    183c:	745f0063 	ldrbvc	r0, [pc], #-99	; 1844 <__HEAP_SIZE+0x844>
    1840:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1844:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1848:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    184c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1850:	696c5f79 	stmdbvs	ip!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1854:	5f007473 	svcpl	0x00007473
    1858:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    185c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    1860:	74706f5f 	ldrbtvc	r6, [r0], #-3935	; 0xfffff0a1
    1864:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    1868:	725f5f00 	subsvc	r5, pc, #0, 30
    186c:	6f747365 	svcvs	0x00747365
    1870:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1874:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1878:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    187c:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    1880:	736f705f 	cmnvc	pc, #95	; 0x5f
    1884:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
    1888:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
    188c:	695f7465 	ldmdbvs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1890:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1894:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    1898:	736f705f 	cmnvc	pc, #95	; 0x5f
    189c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
    18a0:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    18a4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    18a8:	735f7470 	cmpvc	pc, #112, 8	; 0x70000000
    18ac:	00657661 	rsbeq	r7, r5, r1, ror #12
    18b0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    18b4:	6f6c5f6b 	svcvs	0x006c5f6b
    18b8:	74736577 	ldrbtvc	r6, [r3], #-1399	; 0xfffffa89
    18bc:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 18c4 <__HEAP_SIZE+0x8c4>
    18c0:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    18c4:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    18c8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    18cc:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    18d0:	745f0073 	ldrbvc	r0, [pc], #-115	; 18d8 <__HEAP_SIZE+0x8d8>
    18d4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    18d8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    18dc:	6174735f 	cmnvs	r4, pc, asr r3
    18e0:	615f6b63 	cmpvs	pc, r3, ror #22
    18e4:	796c616e 	stmdbvc	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
    18e8:	2e00657a 	cfrshl64cs	mvdx0, mvdx10, r6
    18ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    18f0:	2f2e2e2f 	svccs	0x002e2e2f
    18f4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    18f8:	2f736f74 	svccs	0x00736f74
    18fc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1900:	2f786461 	svccs	0x00786461
    1904:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1908:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    190c:	742f6372 	strtvc	r6, [pc], #-882	; 1914 <__HEAP_SIZE+0x914>
    1910:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1914:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1918:	6174735f 	cmnvs	r4, pc, asr r3
    191c:	615f6b63 	cmpvs	pc, r3, ror #22
    1920:	796c616e 	stmdbvc	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
    1924:	632e657a 			; <UNDEFINED> instruction: 0x632e657a
    1928:	61747300 	cmnvs	r4, r0, lsl #6
    192c:	685f6b63 	ldmdavs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    1930:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1934:	2e007473 	mcrcs	4, 0, r7, cr0, cr3, {3}
    1938:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    193c:	2f2e2e2f 	svccs	0x002e2e2f
    1940:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1944:	2f736f74 	svccs	0x00736f74
    1948:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    194c:	2f786461 	svccs	0x00786461
    1950:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1954:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1958:	742f6372 	strtvc	r6, [pc], #-882	; 1960 <__HEAP_SIZE+0x960>
    195c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1960:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1964:	6174735f 	cmnvs	r4, pc, asr r3
    1968:	655f6b63 	ldrbvs	r6, [pc, #-2915]	; e0d <__Vectors_Size+0x64d>
    196c:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1970:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    1974:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1978:	5f00632e 	svcpl	0x0000632e
    197c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1984 <__HEAP_SIZE+0x984>
    1980:	61657268 	cmnvs	r5, r8, ror #4
    1984:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    1988:	5f6b6361 	svcpl	0x006b6361
    198c:	6f727265 	svcvs	0x00727265
    1990:	61685f72 	smcvs	34290	; 0x85f2
    1994:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1998:	745f0072 	ldrbvc	r0, [pc], #-114	; 19a0 <__HEAP_SIZE+0x9a0>
    199c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19a0:	5f72656d 	svcpl	0x0072656d
    19a4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    19a8:	645f6d65 	ldrbvs	r6, [pc], #-3429	; 19b0 <__HEAP_SIZE+0x9b0>
    19ac:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
    19b0:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    19b4:	5f5f0065 	svcpl	0x005f0065
    19b8:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
    19bc:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    19c0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    19c4:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    19c8:	745f0073 	ldrbvc	r0, [pc], #-115	; 19d0 <__HEAP_SIZE+0x9d0>
    19cc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19d0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    19d4:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    19d8:	5f6d6574 	svcpl	0x006d6574
    19dc:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    19e0:	5f00656d 	svcpl	0x0000656d
    19e4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 19ec <__HEAP_SIZE+0x9ec>
    19e8:	61657268 	cmnvs	r5, r8, ror #4
    19ec:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    19f0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    19f4:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    19f8:	5f6e7275 	svcpl	0x006e7275
    19fc:	696c6e69 	stmdbvs	ip!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1a00:	6300656e 	movwvs	r6, #1390	; 0x56e
    1a04:	69626d6f 	stmdbvs	r2!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
    1a08:	5f64656e 	svcpl	0x0064656e
    1a0c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    1a10:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    1a14:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1a18:	625f7974 	subsvs	r7, pc, #116, 18	; 0x1d0000
    1a1c:	68007469 	stmdavs	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1a20:	5f646165 	svcpl	0x00646165
    1a24:	00727470 	rsbseq	r7, r2, r0, ror r4
    1a28:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    1a2c:	5f746e65 	svcpl	0x00746e65
    1a30:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a34:	69006461 	stmdbvs	r0, {r0, r5, r6, sl, sp, lr}
    1a38:	5f727370 	svcpl	0x00727370
    1a3c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
    1a40:	745f0065 	ldrbvc	r0, [pc], #-101	; 1a48 <__HEAP_SIZE+0xa48>
    1a44:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1a48:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1a4c:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    1a50:	5f6d6574 	svcpl	0x006d6574
    1a54:	725f696e 	subsvc	r6, pc, #1802240	; 0x1b8000
    1a58:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    1a5c:	61740065 	cmnvs	r4, r5, rrx
    1a60:	705f6c69 	subsvc	r6, pc, r9, ror #24
    1a64:	2e007274 	mcrcs	2, 0, r7, cr0, cr4, {3}
    1a68:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1a6c:	2f2e2e2f 	svccs	0x002e2e2f
    1a70:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1a74:	2f736f74 	svccs	0x00736f74
    1a78:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a7c:	2f786461 	svccs	0x00786461
    1a80:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1a84:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1a88:	742f6372 	strtvc	r6, [pc], #-882	; 1a90 <__HEAP_SIZE+0xa90>
    1a8c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1a90:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1a94:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    1a98:	5f6d6574 	svcpl	0x006d6574
    1a9c:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    1aa0:	632e656d 			; <UNDEFINED> instruction: 0x632e656d
    1aa4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1aa8:	7370695f 	cmnvc	r0, #1556480	; 0x17c000
    1aac:	65675f72 	strbvs	r5, [r7, #-3954]!	; 0xfffff08e
    1ab0:	745f0074 	ldrbvc	r0, [pc], #-116	; 1ab8 <__HEAP_SIZE+0xab8>
    1ab4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ab8:	5f72656d 	svcpl	0x0072656d
    1abc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1ac0:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    1ac4:	2e006563 	cfsh32cs	mvfx6, mvfx0, #51
    1ac8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1acc:	2f2e2e2f 	svccs	0x002e2e2f
    1ad0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1ad4:	2f736f74 	svccs	0x00736f74
    1ad8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1adc:	2f786461 	svccs	0x00786461
    1ae0:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1ae4:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1ae8:	742f6372 	strtvc	r6, [pc], #-882	; 1af0 <__HEAP_SIZE+0xaf0>
    1aec:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1af0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1af4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1af8:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
    1afc:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
    1b00:	745f0063 	ldrbvc	r0, [pc], #-99	; 1b08 <__HEAP_SIZE+0xb08>
    1b04:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b08:	5f72656d 	svcpl	0x0072656d
    1b0c:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    1b10:	5f646572 	svcpl	0x00646572
    1b14:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1b18:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    1b1c:	6e006563 	cfsh32vs	mvfx6, mvfx0, #51
    1b20:	5f747865 	svcpl	0x00747865
    1b24:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1b28:	705f6461 	subsvc	r6, pc, r1, ror #8
    1b2c:	5f007274 	svcpl	0x00007274
    1b30:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1b38 <__HEAP_SIZE+0xb38>
    1b34:	61657268 	cmnvs	r5, r8, ror #4
    1b38:	69745f64 	ldmdbvs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b3c:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
    1b40:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
    1b44:	2f2e2e00 	svccs	0x002e2e00
    1b48:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1b4c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1b50:	6f747262 	svcvs	0x00747262
    1b54:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1b58:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1b5c:	6f632f78 	svcvs	0x00632f78
    1b60:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1b64:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1b68:	5f78742f 	svcpl	0x0078742f
    1b6c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1b70:	78655f72 	stmdavc	r5!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b74:	61726970 	cmnvs	r2, r0, ror r9
    1b78:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1b7c:	6f72705f 	svcvs	0x0072705f
    1b80:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1b84:	5f00632e 	svcpl	0x0000632e
    1b88:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1b90 <__HEAP_SIZE+0xb90>
    1b8c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1b90:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1b94:	00646165 	rsbeq	r6, r4, r5, ror #2
    1b98:	5f78745f 	svcpl	0x0078745f
    1b9c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1ba0:	78655f72 	stmdavc	r5!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ba4:	61726970 	cmnvs	r2, r0, ror r9
    1ba8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1bac:	6f72705f 	svcvs	0x0072705f
    1bb0:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1bb4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1bb8:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1bbc:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    1bc0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1bc4:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    1bc8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1bcc:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1bd0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1bd4:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
    1bd8:	5f747369 	svcpl	0x00747369
    1bdc:	00646e65 	rsbeq	r6, r4, r5, ror #28
    1be0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1be8 <__HEAP_SIZE+0xbe8>
    1be4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1be8:	0064695f 	rsbeq	r6, r4, pc, asr r9
    1bec:	5f78745f 	svcpl	0x0078745f
    1bf0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1bf4:	696c5f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1bf8:	735f7473 	cmpvc	pc, #1929379840	; 0x73000000
    1bfc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1c00:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1c04:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1c08:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    1c0c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1c10:	6c635f6d 	stclvs	15, cr5, [r3], #-436	; 0xfffffe4c
    1c14:	006b636f 	rsbeq	r6, fp, pc, ror #6
    1c18:	5f78745f 	svcpl	0x0078745f
    1c1c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1c20:	68745f72 	ldmdavs	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c24:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1c28:	6174735f 	cmnvs	r4, pc, asr r3
    1c2c:	615f6b63 	cmpvs	pc, r3, ror #22
    1c30:	00616572 	rsbeq	r6, r1, r2, ror r5
    1c34:	5f78745f 	svcpl	0x0078745f
    1c38:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1c3c:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    1c40:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1c44:	745f0065 	ldrbvc	r0, [pc], #-101	; 1c4c <__HEAP_SIZE+0xc4c>
    1c48:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c4c:	5f72656d 	svcpl	0x0072656d
    1c50:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1c54:	616d726f 	cmnvs	sp, pc, ror #4
    1c58:	5f65636e 	svcpl	0x0065636e
    1c5c:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    1c60:	74617269 	strbtvc	r7, [r1], #-617	; 0xfffffd97
    1c64:	5f6e6f69 	svcpl	0x006e6f69
    1c68:	756a6461 	strbvc	r6, [sl, #-1121]!	; 0xfffffb9f
    1c6c:	635f7473 	cmpvs	pc, #1929379840	; 0x73000000
    1c70:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1c74:	5f585400 	svcpl	0x00585400
    1c78:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    1c7c:	745f0052 	ldrbvc	r0, [pc], #-82	; 1c84 <__HEAP_SIZE+0xc84>
    1c80:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c84:	5f72656d 	svcpl	0x0072656d
    1c88:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1c8c:	616d726f 	cmnvs	sp, pc, ror #4
    1c90:	5f65636e 	svcpl	0x0065636e
    1c94:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
    1c98:	61766974 	cmnvs	r6, r4, ror r9
    1c9c:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    1ca0:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1ca4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1ca8:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1cac:	705f7265 	subsvc	r7, pc, r5, ror #4
    1cb0:	6f667265 	svcvs	0x00667265
    1cb4:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1cb8:	615f6563 	cmpvs	pc, r3, ror #10
    1cbc:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    1cc0:	5f657461 	svcpl	0x00657461
    1cc4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1cc8:	745f0074 	ldrbvc	r0, [pc], #-116	; 1cd0 <__HEAP_SIZE+0xcd0>
    1ccc:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1cd0:	5f72656d 	svcpl	0x0072656d
    1cd4:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    1cd8:	5f746e65 	svcpl	0x00746e65
    1cdc:	00727470 	rsbseq	r7, r2, r0, ror r4
    1ce0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1ce8 <__HEAP_SIZE+0xce8>
    1ce4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1ce8:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1cec:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1cf0:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    1cf4:	756f6976 	strbvc	r6, [pc, #-2422]!	; 1386 <__HEAP_SIZE+0x386>
    1cf8:	745f0073 	ldrbvc	r0, [pc], #-115	; 1d00 <__HEAP_SIZE+0xd00>
    1cfc:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d00:	5f72656d 	svcpl	0x0072656d
    1d04:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1d08:	616d726f 	cmnvs	sp, pc, ror #4
    1d0c:	5f65636e 	svcpl	0x0065636e
    1d10:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    1d14:	61766974 	cmnvs	r6, r4, ror r9
    1d18:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    1d1c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1d20:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1d24:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1d28:	705f7265 	subsvc	r7, pc, r5, ror #4
    1d2c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1d30:	00797469 	rsbseq	r7, r9, r9, ror #8
    1d34:	5f78745f 	svcpl	0x0078745f
    1d38:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1d3c:	65705f72 	ldrbvs	r5, [r0, #-3954]!	; 0xfffff08e
    1d40:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1d44:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1d48:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d4c:	61726970 	cmnvs	r2, r0, ror r9
    1d50:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1d54:	756f635f 	strbvc	r6, [pc, #-863]!	; 19fd <__HEAP_SIZE+0x9fd>
    1d58:	5f00746e 	svcpl	0x0000746e
    1d5c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1d64 <__HEAP_SIZE+0xd64>
    1d60:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1d64:	6174735f 	cmnvs	r4, pc, asr r3
    1d68:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    1d6c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1d70:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1d78 <__HEAP_SIZE+0xd78>
    1d74:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1d78:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    1d7c:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    1d80:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1d84:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    1d88:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1d8c:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
    1d90:	00747865 	rsbseq	r7, r4, r5, ror #16
    1d94:	5f78745f 	svcpl	0x0078745f
    1d98:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1d9c:	696c5f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1da0:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
    1da4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1da8:	5f72656d 	svcpl	0x0072656d
    1dac:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    1db0:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    1db4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1db8:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1dbc:	655f7265 	ldrbvs	r7, [pc, #-613]	; 1b5f <__HEAP_SIZE+0xb5f>
    1dc0:	72697078 	rsbvc	r7, r9, #120	; 0x78
    1dc4:	5f006465 	svcpl	0x00006465
    1dc8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1dd0 <__HEAP_SIZE+0xdd0>
    1dcc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1dd0:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    1dd4:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    1dd8:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1ddc:	705f7265 	subsvc	r7, pc, r5, ror #4
    1de0:	5f007274 	svcpl	0x00007274
    1de4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1dec <__HEAP_SIZE+0xdec>
    1de8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1dec:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1df0:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1df4:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1df8:	5f585400 	svcpl	0x00585400
    1dfc:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    1e00:	54535f52 	ldrbpl	r5, [r3], #-3922	; 0xfffff0ae
    1e04:	54435552 	strbpl	r5, [r3], #-1362	; 0xfffffaae
    1e08:	2f2e2e00 	svccs	0x002e2e00
    1e0c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1e10:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1e14:	6f747262 	svcvs	0x00747262
    1e18:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1e1c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1e20:	6f632f78 	svcvs	0x00632f78
    1e24:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1e28:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1e2c:	5f78742f 	svcpl	0x0078742f
    1e30:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1e34:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
    1e38:	61697469 	cmnvs	r9, r9, ror #8
    1e3c:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    1e40:	5f00632e 	svcpl	0x0000632e
    1e44:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1e4c <__HEAP_SIZE+0xe4c>
    1e48:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1e4c:	6174735f 	cmnvs	r4, pc, asr r3
    1e50:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    1e54:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1e58:	78656e00 	stmdavc	r5!, {r9, sl, fp, sp, lr}^
    1e5c:	69745f74 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e60:	0072656d 	rsbseq	r6, r2, sp, ror #10
    1e64:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1e68:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1e6c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1e70:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1e74:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1e78:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1e7c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1dc8 <__HEAP_SIZE+0xdc8>
    1e80:	2f6e6f6d 	svccs	0x006e6f6d
    1e84:	2f637273 	svccs	0x00637273
    1e88:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1e90 <__HEAP_SIZE+0xe90>
    1e8c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1e90:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    1e94:	5f6d6574 	svcpl	0x006d6574
    1e98:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    1e9c:	61766974 	cmnvs	r6, r4, ror r9
    1ea0:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    1ea4:	65727000 	ldrbvs	r7, [r2, #-0]!
    1ea8:	756f6976 	strbvc	r6, [pc, #-2422]!	; 153a <__HEAP_SIZE+0x53a>
    1eac:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1eb0:	0072656d 	rsbseq	r6, r2, sp, ror #10
    1eb4:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    1eb8:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    1ebc:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    1ec0:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1ec4:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    1ec8:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    1ecc:	334d434d 	movtcc	r4, #54093	; 0xd34d
    1ed0:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    1ed4:	20554e47 	subscs	r4, r5, r7, asr #28
    1ed8:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    1edc:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    1ee0:	2f2e0031 	svccs	0x002e0031
    1ee4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    1ee8:	2f707574 	svccs	0x00707574
    1eec:	2f636367 	svccs	0x00636367
    1ef0:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1ef4:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1ef8:	7a696c61 	bvc	1a5d084 <SYSTEM_CLOCK+0x14a4304>
    1efc:	6f6c5f65 	svcvs	0x006c5f65
    1f00:	656c5f77 	strbvs	r5, [ip, #-3959]!	; 0xfffff089
    1f04:	2e6c6576 	mcrcs	5, 3, r6, cr12, cr6, {3}
    1f08:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    1f0c:	2f2e2e2f 	svccs	0x002e2e2f
    1f10:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1e60 <__HEAP_SIZE+0xe60>
    1f14:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1f18:	742f736f 	strtvc	r7, [pc], #-879	; 1f20 <__HEAP_SIZE+0xf20>
    1f1c:	61657268 	cmnvs	r5, r8, ror #4
    1f20:	702f7864 	eorvc	r7, pc, r4, ror #16
    1f24:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    1f28:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    1f2c:	5f786574 	svcpl	0x00786574
    1f30:	2f33336d 	svccs	0x0033336d
    1f34:	2f756e67 	svccs	0x00756e67
    1f38:	2f637273 	svccs	0x00637273
    1f3c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1f44 <__HEAP_SIZE+0xf44>
    1f40:	61657268 	cmnvs	r5, r8, ror #4
    1f44:	63735f64 	cmnvs	r3, #100, 30	; 0x190
    1f48:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    1f4c:	532e656c 			; <UNDEFINED> instruction: 0x532e656c
    1f50:	2f2e2e00 	svccs	0x002e2e00
    1f54:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1f58:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1f5c:	6f747262 	svcvs	0x00747262
    1f60:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f64:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f68:	6f702f78 	svcvs	0x00702f78
    1f6c:	2f737472 	svccs	0x00737472
    1f70:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1f74:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 1de8 <__HEAP_SIZE+0xde8>
    1f78:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    1f7c:	732f756e 			; <UNDEFINED> instruction: 0x732f756e
    1f80:	742f6372 	strtvc	r6, [pc], #-882	; 1f88 <__HEAP_SIZE+0xf88>
    1f84:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f88:	5f72656d 	svcpl	0x0072656d
    1f8c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    1f90:	70757272 	rsbsvc	r7, r5, r2, ror r2
    1f94:	00532e74 	subseq	r2, r3, r4, ror lr

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
{
   0:	0000000c 	andeq	r0, r0, ip
    _tx_thread_initialize();
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    _tx_timer_initialize();
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	83080e41 	movwhi	r0, #36417	; 0x8e41
  24:	00018e02 	andeq	r8, r1, r2, lsl #28
  28:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                thread_ptr -> tx_thread_performance_resume_count++;
  34:	00000010 	andeq	r0, r0, r0, lsl r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	83080e41 	movwhi	r0, #36417	; 0x8e41
  3c:	00018e02 	andeq	r8, r1, r2, lsl #28
}
  40:	00000014 	andeq	r0, r0, r4, lsl r0
	...
        status =  _tx_thread_create(&_tx_timer_thread,
  4c:	00000014 	andeq	r0, r0, r4, lsl r0
  50:	83080e41 	movwhi	r0, #36417	; 0x8e41
    } while (status != TX_SUCCESS);
  54:	00018e02 	andeq	r8, r1, r2, lsl #28
}
  58:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	83080e41 	movwhi	r0, #36417	; 0x8e41
  6c:	00018e02 	andeq	r8, r1, r2, lsl #28
  70:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
  80:	83080e41 	movwhi	r0, #36417	; 0x8e41
  84:	00018e02 	andeq	r8, r1, r2, lsl #28
  88:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  94:	00000018 	andeq	r0, r0, r8, lsl r0
  98:	83080e41 	movwhi	r0, #36417	; 0x8e41
  9c:	00018e02 	andeq	r8, r1, r2, lsl #28
  a0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  ac:	00000018 	andeq	r0, r0, r8, lsl r0
  b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
  b4:	00018e02 	andeq	r8, r1, r2, lsl #28
  b8:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  c4:	00000018 	andeq	r0, r0, r8, lsl r0
  c8:	83080e41 	movwhi	r0, #36417	; 0x8e41
  cc:	00018e02 	andeq	r8, r1, r2, lsl #28
  d0:	00000014 	andeq	r0, r0, r4, lsl r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	10000800 	andne	r0, r0, r0, lsl #16
  dc:	00000024 	andeq	r0, r0, r4, lsr #32
  e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
  e4:	00018e02 	andeq	r8, r1, r2, lsl #28
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  f0:	7c020001 	stcvc	0, cr0, [r2], {1}
  f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  f8:	0000000c 	andeq	r0, r0, ip
  fc:	000000e8 	andeq	r0, r0, r8, ror #1
 100:	00000000 	andeq	r0, r0, r0
 104:	00000010 	andeq	r0, r0, r0, lsl r0
 108:	0000000c 	andeq	r0, r0, ip
 10c:	000000e8 	andeq	r0, r0, r8, ror #1
 110:	10000824 	andne	r0, r0, r4, lsr #16
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	0000000c 	andeq	r0, r0, ip
 11c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 120:	7c020001 	stcvc	0, cr0, [r2], {1}
 124:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 128:	0000000c 	andeq	r0, r0, ip
 12c:	00000118 	andeq	r0, r0, r8, lsl r1
 130:	00000000 	andeq	r0, r0, r0
 134:	00000008 	andeq	r0, r0, r8
 138:	0000000c 	andeq	r0, r0, ip
 13c:	00000118 	andeq	r0, r0, r8, lsl r1
 140:	10000850 	andne	r0, r0, r0, asr r8
 144:	00000002 	andeq	r0, r0, r2
 148:	00000018 	andeq	r0, r0, r8, lsl r0
 14c:	00000118 	andeq	r0, r0, r8, lsl r1
 150:	00000000 	andeq	r0, r0, r0
 154:	0000000e 	andeq	r0, r0, lr
 158:	83080e42 	movwhi	r0, #36418	; 0x8e42
 15c:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
 160:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
 164:	0000000c 	andeq	r0, r0, ip
 168:	00000118 	andeq	r0, r0, r8, lsl r1
 16c:	10000852 	andne	r0, r0, r2, asr r8
 170:	00000024 	andeq	r0, r0, r4, lsr #32
 174:	0000002c 	andeq	r0, r0, ip, lsr #32
 178:	00000118 	andeq	r0, r0, r8, lsl r1
 17c:	10000876 	andne	r0, r0, r6, ror r8
 180:	0000007e 	andeq	r0, r0, lr, ror r0
 184:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 188:	86088509 	strhi	r8, [r8], -r9, lsl #10
 18c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 190:	8a048905 	bhi	1225ac <__RAM_SIZE+0x225ac>
 194:	8e028b03 	vmlahi.f64	d8, d2, d3
 198:	300e4101 	andcc	r4, lr, r1, lsl #2
 19c:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
 1a0:	00000b42 	andeq	r0, r0, r2, asr #22
 1a4:	00000028 	andeq	r0, r0, r8, lsr #32
 1a8:	00000118 	andeq	r0, r0, r8, lsl r1
 1ac:	100008f4 	strdne	r0, [r0], -r4
 1b0:	00000138 	andeq	r0, r0, r8, lsr r1
 1b4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 1b8:	86068507 	strhi	r8, [r6], -r7, lsl #10
 1bc:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 1c0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 1c4:	300e4101 	andcc	r4, lr, r1, lsl #2
 1c8:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
 1cc:	000b421c 	andeq	r4, fp, ip, lsl r2
 1d0:	00000020 	andeq	r0, r0, r0, lsr #32
 1d4:	00000118 	andeq	r0, r0, r8, lsl r1
 1d8:	10000a2c 	andne	r0, r0, ip, lsr #20
 1dc:	00000094 	muleq	r0, r4, r0
 1e0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 1e4:	86048505 	strhi	r8, [r4], -r5, lsl #10
 1e8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1ec:	580e4101 	stmdapl	lr, {r0, r8, lr}
 1f0:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
 1f4:	00000028 	andeq	r0, r0, r8, lsr #32
 1f8:	00000118 	andeq	r0, r0, r8, lsl r1
 1fc:	10000ac0 	andne	r0, r0, r0, asr #21
 200:	000000c6 	andeq	r0, r0, r6, asr #1
 204:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 208:	86088509 	strhi	r8, [r8], -r9, lsl #10
 20c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 210:	8a048905 	bhi	12262c <__RAM_SIZE+0x2262c>
 214:	8e028b03 	vmlahi.f64	d8, d2, d3
 218:	780e4101 	stmdavc	lr, {r0, r8, lr}
 21c:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
 220:	0000003c 	andeq	r0, r0, ip, lsr r0
 224:	00000118 	andeq	r0, r0, r8, lsl r1
 228:	10000b88 	andne	r0, r0, r8, lsl #23
 22c:	000003ea 	andeq	r0, r0, sl, ror #7
 230:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 234:	86088509 	strhi	r8, [r8], -r9, lsl #10
 238:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 23c:	8a048905 	bhi	122658 <__RAM_SIZE+0x22658>
 240:	8e028b03 	vmlahi.f64	d8, d2, d3
 244:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
 248:	050b5005 	streq	r5, [fp, #-5]
 24c:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
 250:	01250370 			; <UNDEFINED> instruction: 0x01250370
 254:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
 258:	51065006 	tstpl	r6, r6
 25c:	0b42240e 	bleq	108929c <SYSTEM_CLOCK+0xad051c>
 260:	00000040 	andeq	r0, r0, r0, asr #32
 264:	00000118 	andeq	r0, r0, r8, lsl r1
 268:	10000f78 	andne	r0, r0, r8, ror pc
 26c:	00000396 	muleq	r0, r6, r3
 270:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 274:	86088509 	strhi	r8, [r8], -r9, lsl #10
 278:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 27c:	8a048905 	bhi	122698 <__RAM_SIZE+0x22698>
 280:	8e028b03 	vmlahi.f64	d8, d2, d3
 284:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
 288:	050b5005 	streq	r5, [fp, #-5]
 28c:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
 290:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
 294:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
 298:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
 29c:	42240e51 	eormi	r0, r4, #1296	; 0x510
 2a0:	0000000b 	andeq	r0, r0, fp
 2a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2a8:	00000118 	andeq	r0, r0, r8, lsl r1
 2ac:	10001310 	andne	r1, r0, r0, lsl r3
 2b0:	00000680 	andeq	r0, r0, r0, lsl #13
 2b4:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 2b8:	86088509 	strhi	r8, [r8], -r9, lsl #10
 2bc:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 2c0:	8a048905 	bhi	1226dc <__RAM_SIZE+0x226dc>
 2c4:	8e028b03 	vmlahi.f64	d8, d2, d3
 2c8:	600e4101 	andvs	r4, lr, r1, lsl #2
 2cc:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
 2d0:	00000024 	andeq	r0, r0, r4, lsr #32
 2d4:	00000014 	andeq	r0, r0, r4, lsl r0
 2d8:	00000118 	andeq	r0, r0, r8, lsl r1
 2dc:	10001990 	mulne	r0, r0, r9
 2e0:	0000000c 	andeq	r0, r0, ip
 2e4:	83080e43 	movwhi	r0, #36419	; 0x8e43
 2e8:	00018e02 	andeq	r8, r1, r2, lsl #28
 2ec:	00000030 	andeq	r0, r0, r0, lsr r0
 2f0:	00000118 	andeq	r0, r0, r8, lsl r1
 2f4:	1000199c 	mulne	r0, ip, r9
 2f8:	0000002c 	andeq	r0, r0, ip, lsr #32
 2fc:	80100e41 	andshi	r0, r0, r1, asr #28
 300:	82038104 	andhi	r8, r3, #4, 2
 304:	41018302 	tstmi	r1, r2, lsl #6
 308:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
 30c:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
 310:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
 314:	c341100e 	movtgt	r1, #4110	; 0x100e
 318:	0ec0c1c2 	acseqdm	f4, f2
 31c:	00000000 	andeq	r0, r0, r0
 320:	0000002c 	andeq	r0, r0, ip, lsr #32
 324:	00000118 	andeq	r0, r0, r8, lsl r1
 328:	00000000 	andeq	r0, r0, r0
 32c:	0000002c 	andeq	r0, r0, ip, lsr #32
 330:	810c0e41 	tsthi	ip, r1, asr #28
 334:	83028203 	movwhi	r8, #8707	; 0x2203
 338:	100e4101 	andne	r4, lr, r1, lsl #2
 33c:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
 340:	100e4c20 	andne	r4, lr, r0, lsr #24
 344:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
 348:	c1c2c341 	bicgt	ip, r2, r1, asr #6
 34c:	0000000e 	andeq	r0, r0, lr
 350:	0000002c 	andeq	r0, r0, ip, lsr #32
 354:	00000118 	andeq	r0, r0, r8, lsl r1
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000028 	andeq	r0, r0, r8, lsr #32
 360:	82080e41 	andhi	r0, r8, #1040	; 0x410
 364:	41018302 	tstmi	r1, r2, lsl #6
 368:	0484100e 	streq	r1, [r4], #14
 36c:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
 370:	100e4b20 	andne	r4, lr, r0, lsr #22
 374:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
 378:	c2c34108 	sbcgt	r4, r3, #8, 2
 37c:	0000000e 	andeq	r0, r0, lr
 380:	00000018 	andeq	r0, r0, r8, lsl r0
 384:	00000118 	andeq	r0, r0, r8, lsl r1
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000020 	andeq	r0, r0, r0, lsr #32
 390:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
 394:	180e4101 	stmdane	lr, {r0, r8, lr}
 398:	00040e49 	andeq	r0, r4, r9, asr #28
 39c:	00000018 	andeq	r0, r0, r8, lsl r0
 3a0:	00000118 	andeq	r0, r0, r8, lsl r1
 3a4:	00000000 	andeq	r0, r0, r0
 3a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ac:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
 3b0:	100e4101 	andne	r4, lr, r1, lsl #2
 3b4:	00040e48 	andeq	r0, r4, r8, asr #28
 3b8:	00000028 	andeq	r0, r0, r8, lsr #32
 3bc:	00000118 	andeq	r0, r0, r8, lsl r1
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000030 	andeq	r0, r0, r0, lsr r0
 3c8:	82080e41 	andhi	r0, r8, #1040	; 0x410
 3cc:	41018302 	tstmi	r1, r2, lsl #6
 3d0:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
 3d4:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
 3d8:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
 3dc:	c341080e 	movtgt	r0, #6158	; 0x180e
 3e0:	00000ec2 	andeq	r0, r0, r2, asr #29
 3e4:	0000000c 	andeq	r0, r0, ip
 3e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3ec:	7c020001 	stcvc	0, cr0, [r2], {1}
 3f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3f4:	0000000c 	andeq	r0, r0, ip
 3f8:	000003e4 	andeq	r0, r0, r4, ror #7
 3fc:	100019c8 	andne	r1, r0, r8, asr #19
 400:	00000014 	andeq	r0, r0, r4, lsl r0
 404:	0000000c 	andeq	r0, r0, ip
 408:	000003e4 	andeq	r0, r0, r4, ror #7
 40c:	00000000 	andeq	r0, r0, r0
 410:	00000014 	andeq	r0, r0, r4, lsl r0
 414:	00000018 	andeq	r0, r0, r8, lsl r0
 418:	000003e4 	andeq	r0, r0, r4, ror #7
 41c:	100019dc 	ldrdne	r1, [r0], -ip
 420:	0000001e 	andeq	r0, r0, lr, lsl r0
 424:	83100e41 	tsthi	r0, #1040	; 0x410
 428:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 42c:	00018e02 	andeq	r8, r1, r2, lsl #28
 430:	0000000c 	andeq	r0, r0, ip
 434:	000003e4 	andeq	r0, r0, r4, ror #7
 438:	100019fc 	strdne	r1, [r0], -ip
 43c:	00000024 	andeq	r0, r0, r4, lsr #32
 440:	00000014 	andeq	r0, r0, r4, lsl r0
 444:	000003e4 	andeq	r0, r0, r4, ror #7
 448:	00000000 	andeq	r0, r0, r0
 44c:	00000008 	andeq	r0, r0, r8
 450:	83080e41 	movwhi	r0, #36417	; 0x8e41
 454:	00018e02 	andeq	r8, r1, r2, lsl #28
 458:	00000018 	andeq	r0, r0, r8, lsl r0
 45c:	000003e4 	andeq	r0, r0, r4, ror #7
 460:	00000000 	andeq	r0, r0, r0
 464:	00000020 	andeq	r0, r0, r0, lsr #32
 468:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 46c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 470:	00018e02 	andeq	r8, r1, r2, lsl #28
 474:	0000000c 	andeq	r0, r0, ip
 478:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 47c:	7c020001 	stcvc	0, cr0, [r2], {1}
 480:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 484:	00000014 	andeq	r0, r0, r4, lsl r0
 488:	00000474 	andeq	r0, r0, r4, ror r4
 48c:	00000000 	andeq	r0, r0, r0
 490:	0000000c 	andeq	r0, r0, ip
 494:	83080e41 	movwhi	r0, #36417	; 0x8e41
 498:	00018e02 	andeq	r8, r1, r2, lsl #28
 49c:	0000000c 	andeq	r0, r0, ip
 4a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4a4:	7c020001 	stcvc	0, cr0, [r2], {1}
 4a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4ac:	0000000c 	andeq	r0, r0, ip
 4b0:	0000049c 	muleq	r0, ip, r4
 4b4:	00000000 	andeq	r0, r0, r0
 4b8:	00000020 	andeq	r0, r0, r0, lsr #32
 4bc:	0000000c 	andeq	r0, r0, ip
 4c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4c4:	7c020001 	stcvc	0, cr0, [r2], {1}
 4c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4cc:	00000020 	andeq	r0, r0, r0, lsr #32
 4d0:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
 4d4:	10001a20 	andne	r1, r0, r0, lsr #20
 4d8:	0000008c 	andeq	r0, r0, ip, lsl #1
 4dc:	840c0e4f 	strhi	r0, [ip], #-3663	; 0xfffff1b1
 4e0:	86028503 	strhi	r8, [r2], -r3, lsl #10
 4e4:	c60a6401 	strgt	r6, [sl], -r1, lsl #8
 4e8:	000ec4c5 	andeq	ip, lr, r5, asr #9
 4ec:	00000b41 	andeq	r0, r0, r1, asr #22
 4f0:	0000000c 	andeq	r0, r0, ip
 4f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4f8:	7c020001 	stcvc	0, cr0, [r2], {1}
 4fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 500:	00000014 	andeq	r0, r0, r4, lsl r0
 504:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 508:	10001aac 	andne	r1, r0, ip, lsr #21
 50c:	0000001c 	andeq	r0, r0, ip, lsl r0
 510:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 514:	00018e02 	andeq	r8, r1, r2, lsl #28
 518:	0000000c 	andeq	r0, r0, ip
 51c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 520:	7c020001 	stcvc	0, cr0, [r2], {1}
 524:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 528:	00000014 	andeq	r0, r0, r4, lsl r0
 52c:	00000518 	andeq	r0, r0, r8, lsl r5
 530:	10001ac8 	andne	r1, r0, r8, asr #21
 534:	00000328 	andeq	r0, r0, r8, lsr #6
 538:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 53c:	00018e02 	andeq	r8, r1, r2, lsl #28
 540:	00000014 	andeq	r0, r0, r4, lsl r0
 544:	00000518 	andeq	r0, r0, r8, lsl r5
 548:	00000000 	andeq	r0, r0, r0
 54c:	0000004c 	andeq	r0, r0, ip, asr #32
 550:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 554:	00018e02 	andeq	r8, r1, r2, lsl #28
 558:	0000000c 	andeq	r0, r0, ip
 55c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 560:	7c020001 	stcvc	0, cr0, [r2], {1}
 564:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 568:	00000018 	andeq	r0, r0, r8, lsl r0
 56c:	00000558 	andeq	r0, r0, r8, asr r5
 570:	10001df0 	strdne	r1, [r0], -r0
 574:	0000017c 	andeq	r0, r0, ip, ror r1
 578:	83100e41 	tsthi	r0, #1040	; 0x410
 57c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 580:	00018e02 	andeq	r8, r1, r2, lsl #28
 584:	0000000c 	andeq	r0, r0, ip
 588:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 58c:	7c020001 	stcvc	0, cr0, [r2], {1}
 590:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 594:	00000014 	andeq	r0, r0, r4, lsl r0
 598:	00000584 	andeq	r0, r0, r4, lsl #11
 59c:	10001f6c 	andne	r1, r0, ip, ror #30
 5a0:	00000018 	andeq	r0, r0, r8, lsl r0
 5a4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 5a8:	00018e02 	andeq	r8, r1, r2, lsl #28
 5ac:	0000000c 	andeq	r0, r0, ip
 5b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5b4:	7c020001 	stcvc	0, cr0, [r2], {1}
 5b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5bc:	00000018 	andeq	r0, r0, r8, lsl r0
 5c0:	000005ac 	andeq	r0, r0, ip, lsr #11
 5c4:	00000000 	andeq	r0, r0, r0
 5c8:	00000090 	muleq	r0, r0, r0
 5cc:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
 5d0:	200e4101 	andcs	r4, lr, r1, lsl #2
 5d4:	00040e6b 	andeq	r0, r4, fp, ror #28
 5d8:	0000000c 	andeq	r0, r0, ip
 5dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5e0:	7c020001 	stcvc	0, cr0, [r2], {1}
 5e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5e8:	0000000c 	andeq	r0, r0, ip
 5ec:	000005d8 	ldrdeq	r0, [r0], -r8
 5f0:	10001f84 	andne	r1, r0, r4, lsl #31
 5f4:	0000002e 	andeq	r0, r0, lr, lsr #32
 5f8:	0000000c 	andeq	r0, r0, ip
 5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 600:	7c020001 	stcvc	0, cr0, [r2], {1}
 604:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 608:	0000000c 	andeq	r0, r0, ip
 60c:	000005f8 	strdeq	r0, [r0], -r8
 610:	100022a8 	andne	r2, r0, r8, lsr #5
 614:	0000000c 	andeq	r0, r0, ip
 618:	0000000c 	andeq	r0, r0, ip
 61c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 620:	7c020001 	stcvc	0, cr0, [r2], {1}
 624:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 628:	00000014 	andeq	r0, r0, r4, lsl r0
 62c:	00000618 	andeq	r0, r0, r8, lsl r6
 630:	00000000 	andeq	r0, r0, r0
 634:	00000048 	andeq	r0, r0, r8, asr #32
 638:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 63c:	00018e02 	andeq	r8, r1, r2, lsl #28
 640:	0000000c 	andeq	r0, r0, ip
 644:	00000618 	andeq	r0, r0, r8, lsl r6
 648:	00000000 	andeq	r0, r0, r0
 64c:	0000000c 	andeq	r0, r0, ip
 650:	00000014 	andeq	r0, r0, r4, lsl r0
 654:	00000618 	andeq	r0, r0, r8, lsl r6
 658:	00000000 	andeq	r0, r0, r0
 65c:	00000018 	andeq	r0, r0, r8, lsl r0
 660:	83080e41 	movwhi	r0, #36417	; 0x8e41
 664:	00018e02 	andeq	r8, r1, r2, lsl #28
 668:	00000014 	andeq	r0, r0, r4, lsl r0
 66c:	00000618 	andeq	r0, r0, r8, lsl r6
 670:	00000000 	andeq	r0, r0, r0
 674:	00000018 	andeq	r0, r0, r8, lsl r0
 678:	83080e41 	movwhi	r0, #36417	; 0x8e41
 67c:	00018e02 	andeq	r8, r1, r2, lsl #28
 680:	00000018 	andeq	r0, r0, r8, lsl r0
 684:	00000618 	andeq	r0, r0, r8, lsl r6
 688:	00000000 	andeq	r0, r0, r0
 68c:	0000002c 	andeq	r0, r0, ip, lsr #32
 690:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 694:	86038504 	strhi	r8, [r3], -r4, lsl #10
 698:	00018e02 	andeq	r8, r1, r2, lsl #28
 69c:	0000000c 	andeq	r0, r0, ip
 6a0:	00000618 	andeq	r0, r0, r8, lsl r6
 6a4:	00000000 	andeq	r0, r0, r0
 6a8:	0000000c 	andeq	r0, r0, ip
 6ac:	0000000c 	andeq	r0, r0, ip
 6b0:	00000618 	andeq	r0, r0, r8, lsl r6
 6b4:	00000000 	andeq	r0, r0, r0
 6b8:	0000000c 	andeq	r0, r0, ip
 6bc:	0000000c 	andeq	r0, r0, ip
 6c0:	00000618 	andeq	r0, r0, r8, lsl r6
 6c4:	00000000 	andeq	r0, r0, r0
 6c8:	0000000c 	andeq	r0, r0, ip
 6cc:	0000000c 	andeq	r0, r0, ip
 6d0:	00000618 	andeq	r0, r0, r8, lsl r6
 6d4:	00000000 	andeq	r0, r0, r0
 6d8:	0000000c 	andeq	r0, r0, ip
 6dc:	0000000c 	andeq	r0, r0, ip
 6e0:	00000618 	andeq	r0, r0, r8, lsl r6
 6e4:	00000000 	andeq	r0, r0, r0
 6e8:	0000000c 	andeq	r0, r0, ip
 6ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 6f0:	00000618 	andeq	r0, r0, r8, lsl r6
 6f4:	00000000 	andeq	r0, r0, r0
 6f8:	00000070 	andeq	r0, r0, r0, ror r0
 6fc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 700:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
 704:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 708:	000b4200 	andeq	r4, fp, r0, lsl #4
 70c:	0000001c 	andeq	r0, r0, ip, lsl r0
 710:	00000618 	andeq	r0, r0, r8, lsl r6
 714:	00000000 	andeq	r0, r0, r0
 718:	0000008c 	andeq	r0, r0, ip, lsl #1
 71c:	83180e41 	tsthi	r8, #1040	; 0x410
 720:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 724:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 728:	00018e02 	andeq	r8, r1, r2, lsl #28
 72c:	00000018 	andeq	r0, r0, r8, lsl r0
 730:	00000618 	andeq	r0, r0, r8, lsl r6
 734:	00000000 	andeq	r0, r0, r0
 738:	0000001c 	andeq	r0, r0, ip, lsl r0
 73c:	83080e41 	movwhi	r0, #36417	; 0x8e41
 740:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
 744:	000ec3ce 	andeq	ip, lr, lr, asr #7
 748:	00000018 	andeq	r0, r0, r8, lsl r0
 74c:	00000618 	andeq	r0, r0, r8, lsl r6
 750:	00000000 	andeq	r0, r0, r0
 754:	0000001c 	andeq	r0, r0, ip, lsl r0
 758:	83080e41 	movwhi	r0, #36417	; 0x8e41
 75c:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
 760:	000ec3ce 	andeq	ip, lr, lr, asr #7
 764:	0000000c 	andeq	r0, r0, ip
 768:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 76c:	7c020001 	stcvc	0, cr0, [r2], {1}
 770:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 774:	00000014 	andeq	r0, r0, r4, lsl r0
 778:	00000764 	andeq	r0, r0, r4, ror #14
 77c:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
 780:	0000000e 	andeq	r0, r0, lr
 784:	83080e42 	movwhi	r0, #36418	; 0x8e42
 788:	00018e02 	andeq	r8, r1, r2, lsl #28
 78c:	0000000c 	andeq	r0, r0, ip
 790:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 794:	7c020001 	stcvc	0, cr0, [r2], {1}
 798:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 79c:	00000014 	andeq	r0, r0, r4, lsl r0
 7a0:	0000078c 	andeq	r0, r0, ip, lsl #15
 7a4:	100022c2 	andne	r2, r0, r2, asr #5
 7a8:	0000001a 	andeq	r0, r0, sl, lsl r0
 7ac:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
 7b0:	00018e02 	andeq	r8, r1, r2, lsl #28
 7b4:	0000000c 	andeq	r0, r0, ip
 7b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 7c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7c4:	00000020 	andeq	r0, r0, r0, lsr #32
 7c8:	000007b4 			; <UNDEFINED> instruction: 0x000007b4
 7cc:	00000000 	andeq	r0, r0, r0
 7d0:	0000001a 	andeq	r0, r0, sl, lsl r0
 7d4:	83100e41 	tsthi	r0, #1040	; 0x410
 7d8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 7dc:	4a018e02 	bmi	63fec <SYSTICK_CYCLES+0x5558d>
 7e0:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
 7e4:	0000000e 	andeq	r0, r0, lr
 7e8:	00000024 	andeq	r0, r0, r4, lsr #32
 7ec:	000007b4 			; <UNDEFINED> instruction: 0x000007b4
 7f0:	00000000 	andeq	r0, r0, r0
 7f4:	000000b8 	strheq	r0, [r0], -r8
 7f8:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
 7fc:	86038504 	strhi	r8, [r3], -r4, lsl #10
 800:	7f018e02 	svcvc	0x00018e02
 804:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
 808:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
 80c:	0000000b 	andeq	r0, r0, fp
 810:	0000000c 	andeq	r0, r0, ip
 814:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 818:	7c020001 	stcvc	0, cr0, [r2], {1}
 81c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 820:	00000018 	andeq	r0, r0, r8, lsl r0
 824:	00000810 	andeq	r0, r0, r0, lsl r8
 828:	00000000 	andeq	r0, r0, r0
 82c:	00000028 	andeq	r0, r0, r8, lsr #32
 830:	83100e41 	tsthi	r0, #1040	; 0x410
 834:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 838:	00018e02 	andeq	r8, r1, r2, lsl #28
 83c:	00000018 	andeq	r0, r0, r8, lsl r0
 840:	00000810 	andeq	r0, r0, r0, lsl r8
 844:	00000000 	andeq	r0, r0, r0
 848:	00000030 	andeq	r0, r0, r0, lsr r0
 84c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
 850:	86038504 	strhi	r8, [r3], -r4, lsl #10
 854:	00018e02 	andeq	r8, r1, r2, lsl #28
 858:	00000024 	andeq	r0, r0, r4, lsr #32
 85c:	00000810 	andeq	r0, r0, r0, lsl r8
 860:	100022dc 	ldrdne	r2, [r0], -ip
 864:	00000050 	andeq	r0, r0, r0, asr r0
 868:	83100e42 	tsthi	r0, #1056	; 0x420
 86c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 870:	55018e02 	strpl	r8, [r1, #-3586]	; 0xfffff1fe
 874:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
 878:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
 87c:	0000000b 	andeq	r0, r0, fp
 880:	00000018 	andeq	r0, r0, r8, lsl r0
 884:	00000810 	andeq	r0, r0, r0, lsl r8
 888:	00000000 	andeq	r0, r0, r0
 88c:	00000048 	andeq	r0, r0, r8, asr #32
 890:	83100e42 	tsthi	r0, #1056	; 0x420
 894:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 898:	00018e02 	andeq	r8, r1, r2, lsl #28
 89c:	0000000c 	andeq	r0, r0, ip
 8a0:	00000810 	andeq	r0, r0, r0, lsl r8
 8a4:	1000232c 	andne	r2, r0, ip, lsr #6
 8a8:	00000010 	andeq	r0, r0, r0, lsl r0
 8ac:	0000000c 	andeq	r0, r0, ip
 8b0:	00000810 	andeq	r0, r0, r0, lsl r8
 8b4:	00000000 	andeq	r0, r0, r0
 8b8:	00000010 	andeq	r0, r0, r0, lsl r0
 8bc:	0000000c 	andeq	r0, r0, ip
 8c0:	00000810 	andeq	r0, r0, r0, lsl r8
 8c4:	00000000 	andeq	r0, r0, r0
 8c8:	0000000c 	andeq	r0, r0, ip
 8cc:	0000000c 	andeq	r0, r0, ip
 8d0:	00000810 	andeq	r0, r0, r0, lsl r8
 8d4:	00000000 	andeq	r0, r0, r0
 8d8:	00000010 	andeq	r0, r0, r0, lsl r0
 8dc:	0000000c 	andeq	r0, r0, ip
 8e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8e4:	7c020001 	stcvc	0, cr0, [r2], {1}
 8e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 8ec:	00000018 	andeq	r0, r0, r8, lsl r0
 8f0:	000008dc 	ldrdeq	r0, [r0], -ip
 8f4:	1000233c 	andne	r2, r0, ip, lsr r3
 8f8:	00000024 	andeq	r0, r0, r4, lsr #32
 8fc:	83100e41 	tsthi	r0, #1040	; 0x410
 900:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 904:	00018e02 	andeq	r8, r1, r2, lsl #28
 908:	0000000c 	andeq	r0, r0, ip
 90c:	000008dc 	ldrdeq	r0, [r0], -ip
 910:	10002360 	andne	r2, r0, r0, ror #6
 914:	00000004 	andeq	r0, r0, r4
 918:	0000000c 	andeq	r0, r0, ip
 91c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 920:	7c020001 	stcvc	0, cr0, [r2], {1}
 924:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 928:	0000001c 	andeq	r0, r0, ip, lsl r0
 92c:	00000918 	andeq	r0, r0, r8, lsl r9
 930:	10002364 	andne	r2, r0, r4, ror #6
 934:	00000282 	andeq	r0, r0, r2, lsl #5
 938:	0c0e470a 	stceq	7, cr4, [lr], {10}
 93c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 940:	3a03018e 	bcc	c0f80 <SYSTICK_CYCLES+0xb2521>
 944:	00000b01 	andeq	r0, r0, r1, lsl #22
 948:	00000018 	andeq	r0, r0, r8, lsl r0
 94c:	00000918 	andeq	r0, r0, r8, lsl r9
 950:	100025e8 	andne	r2, r0, r8, ror #11
 954:	0000001e 	andeq	r0, r0, lr, lsl r0
 958:	0c0e460a 	stceq	6, cr4, [lr], {10}
 95c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 960:	0b49018e 	bleq	1240fa0 <SYSTEM_CLOCK+0xc88220>
 964:	00000018 	andeq	r0, r0, r8, lsl r0
 968:	00000918 	andeq	r0, r0, r8, lsl r9
 96c:	10002608 	andne	r2, r0, r8, lsl #12
 970:	00000022 	andeq	r0, r0, r2, lsr #32
 974:	0c0e460a 	stceq	6, cr4, [lr], {10}
 978:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 97c:	0b4b018e 	bleq	12c0fbc <SYSTEM_CLOCK+0xd0823c>
 980:	00000018 	andeq	r0, r0, r8, lsl r0
 984:	00000918 	andeq	r0, r0, r8, lsl r9
 988:	1000262c 	andne	r2, r0, ip, lsr #12
 98c:	00000042 	andeq	r0, r0, r2, asr #32
 990:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
 994:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 998:	0b47018e 	bleq	11c0fd8 <SYSTEM_CLOCK+0xc08258>
 99c:	00000024 	andeq	r0, r0, r4, lsr #32
 9a0:	00000918 	andeq	r0, r0, r8, lsl r9
 9a4:	10002670 	andne	r2, r0, r0, ror r6
 9a8:	0000006a 	andeq	r0, r0, sl, rrx
 9ac:	0e450a0a 	vmlaeq.f32	s1, s10, s20
 9b0:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
 9b4:	43018e02 	movwmi	r8, #7682	; 0x1e02
 9b8:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
 9bc:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 9c0:	0b68018e 	bleq	1a01000 <SYSTEM_CLOCK+0x1448280>
 9c4:	0000000c 	andeq	r0, r0, ip
 9c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 9cc:	7c020001 	stcvc	0, cr0, [r2], {1}
 9d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 9d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 9d8:	000009c4 	andeq	r0, r0, r4, asr #19
 9dc:	100026dc 	ldrdne	r2, [r0], -ip
 9e0:	00000254 	andeq	r0, r0, r4, asr r2
 9e4:	100e410a 	andne	r4, lr, sl, lsl #2
 9e8:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
 9ec:	018e0286 	orreq	r0, lr, r6, lsl #5
 9f0:	0b012903 	bleq	4ae04 <SYSTICK_CYCLES+0x3c3a5>
 9f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 9f8:	000009c4 	andeq	r0, r0, r4, asr #19
 9fc:	10002930 	andne	r2, r0, r0, lsr r9
 a00:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 a04:	100e410a 	andne	r4, lr, sl, lsl #2
 a08:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
 a0c:	018e0286 	orreq	r0, lr, r6, lsl #5
 a10:	000be702 	andeq	lr, fp, r2, lsl #14
 a14:	0000000c 	andeq	r0, r0, ip
 a18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a1c:	7c020001 	stcvc	0, cr0, [r2], {1}
 a20:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a24:	0000001c 	andeq	r0, r0, ip, lsl r0
 a28:	00000a14 	andeq	r0, r0, r4, lsl sl
 a2c:	10002b00 	andne	r2, r0, r0, lsl #22
 a30:	0000008a 	andeq	r0, r0, sl, lsl #1
 a34:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
 a38:	0e410a4a 	vmlseq.f32	s1, s2, s20
 a3c:	520b5b00 	andpl	r5, fp, #0, 22
 a40:	0b41000e 	bleq	1040a80 <SYSTEM_CLOCK+0xa87d00>
 a44:	00000018 	andeq	r0, r0, r8, lsl r0
 a48:	00000a14 	andeq	r0, r0, r4, lsl sl
 a4c:	10002b8c 	andne	r2, r0, ip, lsl #23
 a50:	00000020 	andeq	r0, r0, r0, lsr #32
 a54:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
 a58:	018e0280 	orreq	r0, lr, r0, lsl #5
 a5c:	00000b47 	andeq	r0, r0, r7, asr #22
 a60:	00000014 	andeq	r0, r0, r4, lsl r0
 a64:	00000a14 	andeq	r0, r0, r4, lsl sl
 a68:	10002bac 	andne	r2, r0, ip, lsr #23
 a6c:	00000012 	andeq	r0, r0, r2, lsl r0
 a70:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 a74:	0b47028e 	bleq	11c14b4 <SYSTEM_CLOCK+0xc08734>
 a78:	00000014 	andeq	r0, r0, r4, lsl r0
 a7c:	00000a14 	andeq	r0, r0, r4, lsl sl
 a80:	10002bc0 	andne	r2, r0, r0, asr #23
 a84:	00000012 	andeq	r0, r0, r2, lsl r0
 a88:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 a8c:	0b47028e 	bleq	11c14cc <SYSTEM_CLOCK+0xc0874c>
 a90:	00000014 	andeq	r0, r0, r4, lsl r0
 a94:	00000a14 	andeq	r0, r0, r4, lsl sl
 a98:	10002bd4 	ldrdne	r2, [r0], -r4
 a9c:	00000012 	andeq	r0, r0, r2, lsl r0
 aa0:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 aa4:	0b47028e 	bleq	11c14e4 <SYSTEM_CLOCK+0xc08764>
 aa8:	00000014 	andeq	r0, r0, r4, lsl r0
 aac:	00000a14 	andeq	r0, r0, r4, lsl sl
 ab0:	10002be8 	andne	r2, r0, r8, ror #23
 ab4:	00000012 	andeq	r0, r0, r2, lsl r0
 ab8:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 abc:	0b47028e 	bleq	11c14fc <SYSTEM_CLOCK+0xc0877c>
 ac0:	00000014 	andeq	r0, r0, r4, lsl r0
 ac4:	00000a14 	andeq	r0, r0, r4, lsl sl
 ac8:	10002bfc 	strdne	r2, [r0], -ip
 acc:	00000012 	andeq	r0, r0, r2, lsl r0
 ad0:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 ad4:	0b47028e 	bleq	11c1514 <SYSTEM_CLOCK+0xc08794>
 ad8:	0000000c 	andeq	r0, r0, ip
 adc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ae0:	7c020001 	stcvc	0, cr0, [r2], {1}
 ae4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ae8:	00000010 	andeq	r0, r0, r0, lsl r0
 aec:	00000ad8 	ldrdeq	r0, [r0], -r8
 af0:	10002c10 	andne	r2, r0, r0, lsl ip
 af4:	0000004e 	andeq	r0, r0, lr, asr #32
 af8:	000b670a 	andeq	r6, fp, sl, lsl #14
 afc:	0000000c 	andeq	r0, r0, ip
 b00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b04:	7c020001 	stcvc	0, cr0, [r2], {1}
 b08:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b0c:	00000010 	andeq	r0, r0, r0, lsl r0
 b10:	00000afc 	strdeq	r0, [r0], -ip
 b14:	10002c60 	andne	r2, r0, r0, ror #24
 b18:	00000040 	andeq	r0, r0, r0, asr #32
 b1c:	000b600a 	andeq	r6, fp, sl
 b20:	0000000c 	andeq	r0, r0, ip
 b24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b28:	7c020001 	stcvc	0, cr0, [r2], {1}
 b2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b30:	00000018 	andeq	r0, r0, r8, lsl r0
 b34:	00000b20 	andeq	r0, r0, r0, lsr #22
 b38:	10002ca0 	andne	r2, r0, r0, lsr #25
 b3c:	00000030 	andeq	r0, r0, r0, lsr r0
 b40:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
 b44:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
 b48:	00000010 	andeq	r0, r0, r0, lsl r0
 b4c:	0000000c 	andeq	r0, r0, ip
 b50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b54:	7c020001 	stcvc	0, cr0, [r2], {1}
 b58:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b5c:	00000024 	andeq	r0, r0, r4, lsr #32
 b60:	00000b4c 	andeq	r0, r0, ip, asr #22
 b64:	10002cd0 	ldrdne	r2, [r0], -r0
 b68:	000002ec 	andeq	r0, r0, ip, ror #5
 b6c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 b70:	86088509 	strhi	r8, [r8], -r9, lsl #10
 b74:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 b78:	8a048905 	bhi	122f94 <__RAM_SIZE+0x22f94>
 b7c:	8e028b03 	vmlahi.f64	d8, d2, d3
 b80:	00000001 	andeq	r0, r0, r1
 b84:	0000000c 	andeq	r0, r0, ip
 b88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b8c:	7c020001 	stcvc	0, cr0, [r2], {1}
 b90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b94:	0000000c 	andeq	r0, r0, ip
 b98:	00000b84 	andeq	r0, r0, r4, lsl #23
 b9c:	10002fbc 			; <UNDEFINED> instruction: 0x10002fbc
 ba0:	00000012 	andeq	r0, r0, r2, lsl r0
 ba4:	00000020 	andeq	r0, r0, r0, lsr #32
 ba8:	00000b84 	andeq	r0, r0, r4, lsl #23
 bac:	10002fd0 	ldrdne	r2, [r0], -r0
 bb0:	00000060 	andeq	r0, r0, r0, rrx
 bb4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 bb8:	86078508 	strhi	r8, [r7], -r8, lsl #10
 bbc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 bc0:	8a038904 	bhi	e2fd8 <SYSTICK_CYCLES+0xd4579>
 bc4:	00018e02 	andeq	r8, r1, r2, lsl #28
 bc8:	0000000c 	andeq	r0, r0, ip
 bcc:	00000b84 	andeq	r0, r0, r4, lsl #23
 bd0:	10003030 	andne	r3, r0, r0, lsr r0
 bd4:	00000028 	andeq	r0, r0, r8, lsr #32
 bd8:	0000002c 	andeq	r0, r0, ip, lsr #32
 bdc:	00000b84 	andeq	r0, r0, r4, lsl #23
 be0:	10003058 	andne	r3, r0, r8, asr r0
 be4:	0000009c 	muleq	r0, ip, r0
 be8:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
 bec:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 bf0:	180e4201 	stmdane	lr, {r0, r9, lr}
 bf4:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
 bf8:	0a440b41 	beq	1103904 <SYSTEM_CLOCK+0xb4ab84>
 bfc:	0b410c0e 	bleq	1043c3c <SYSTEM_CLOCK+0xa8aebc>
 c00:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
 c04:	00000b41 	andeq	r0, r0, r1, asr #22
 c08:	00000018 	andeq	r0, r0, r8, lsl r0
 c0c:	00000b84 	andeq	r0, r0, r4, lsl #23
 c10:	100030f4 	strdne	r3, [r0], -r4
 c14:	00000058 	andeq	r0, r0, r8, asr r0
 c18:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
 c1c:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
 c20:	000ec4ce 	andeq	ip, lr, lr, asr #9
 c24:	0000000c 	andeq	r0, r0, ip
 c28:	00000b84 	andeq	r0, r0, r4, lsl #23
 c2c:	1000314c 	andne	r3, r0, ip, asr #2
 c30:	00000004 	andeq	r0, r0, r4
 c34:	0000000c 	andeq	r0, r0, ip
 c38:	00000b84 	andeq	r0, r0, r4, lsl #23
 c3c:	10003150 	andne	r3, r0, r0, asr r1
 c40:	0000000a 	andeq	r0, r0, sl
 c44:	0000000c 	andeq	r0, r0, ip
 c48:	00000b84 	andeq	r0, r0, r4, lsl #23
 c4c:	1000315c 	andne	r3, r0, ip, asr r1
 c50:	00000002 	andeq	r0, r0, r2
 c54:	00000018 	andeq	r0, r0, r8, lsl r0
 c58:	00000b84 	andeq	r0, r0, r4, lsl #23
 c5c:	10003160 	andne	r3, r0, r0, ror #2
 c60:	0000003e 	andeq	r0, r0, lr, lsr r0
 c64:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 c68:	86038504 	strhi	r8, [r3], -r4, lsl #10
 c6c:	00018e02 	andeq	r8, r1, r2, lsl #28
 c70:	0000002c 	andeq	r0, r0, ip, lsr #32
 c74:	00000b84 	andeq	r0, r0, r4, lsl #23
 c78:	100031a0 	andne	r3, r0, r0, lsr #3
 c7c:	000000da 	ldrdeq	r0, [r0], -sl
 c80:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 c84:	86078508 	strhi	r8, [r7], -r8, lsl #10
 c88:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 c8c:	8a038904 	bhi	e30a4 <SYSTICK_CYCLES+0xd4645>
 c90:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
 c94:	0207f00e 	andeq	pc, r7, #14
 c98:	200e0a5b 	andcs	r0, lr, fp, asr sl
 c9c:	00000b42 	andeq	r0, r0, r2, asr #22
 ca0:	0000000c 	andeq	r0, r0, ip
 ca4:	00000b84 	andeq	r0, r0, r4, lsl #23
 ca8:	1000327c 	andne	r3, r0, ip, ror r2
 cac:	00000004 	andeq	r0, r0, r4
 cb0:	00000024 	andeq	r0, r0, r4, lsr #32
 cb4:	00000b84 	andeq	r0, r0, r4, lsl #23
 cb8:	10003280 	andne	r3, r0, r0, lsl #5
 cbc:	00000066 	andeq	r0, r0, r6, rrx
 cc0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 cc4:	86048505 	strhi	r8, [r4], -r5, lsl #10
 cc8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 ccc:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
 cd0:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
 cd4:	000b4114 	andeq	r4, fp, r4, lsl r1
 cd8:	00000018 	andeq	r0, r0, r8, lsl r0
 cdc:	00000b84 	andeq	r0, r0, r4, lsl #23
 ce0:	100032e8 	andne	r3, r0, r8, ror #5
 ce4:	00000012 	andeq	r0, r0, r2, lsl r0
 ce8:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
 cec:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
 cf0:	00000000 	andeq	r0, r0, r0
 cf4:	00000018 	andeq	r0, r0, r8, lsl r0
 cf8:	00000b84 	andeq	r0, r0, r4, lsl #23
 cfc:	100032fc 	strdne	r3, [r0], -ip
 d00:	00000044 	andeq	r0, r0, r4, asr #32
 d04:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 d08:	86038504 	strhi	r8, [r3], -r4, lsl #10
 d0c:	00018e02 	andeq	r8, r1, r2, lsl #28
 d10:	0000000c 	andeq	r0, r0, ip
 d14:	00000b84 	andeq	r0, r0, r4, lsl #23
 d18:	10003340 	andne	r3, r0, r0, asr #6
 d1c:	00000012 	andeq	r0, r0, r2, lsl r0
 d20:	0000000c 	andeq	r0, r0, ip
 d24:	00000b84 	andeq	r0, r0, r4, lsl #23
 d28:	10003354 	andne	r3, r0, r4, asr r3
 d2c:	00000002 	andeq	r0, r0, r2
 d30:	0000000c 	andeq	r0, r0, ip
 d34:	00000b84 	andeq	r0, r0, r4, lsl #23
 d38:	10003358 	andne	r3, r0, r8, asr r3
 d3c:	0000000c 	andeq	r0, r0, ip
 d40:	0000000c 	andeq	r0, r0, ip
 d44:	00000b84 	andeq	r0, r0, r4, lsl #23
 d48:	10003364 	andne	r3, r0, r4, ror #6
 d4c:	00000034 	andeq	r0, r0, r4, lsr r0
 d50:	0000001c 	andeq	r0, r0, ip, lsl r0
 d54:	00000b84 	andeq	r0, r0, r4, lsl #23
 d58:	10003398 	mulne	r0, r8, r3
 d5c:	00000018 	andeq	r0, r0, r8, lsl r0
 d60:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 d64:	41018e02 	tstmi	r1, r2, lsl #28
 d68:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
 d6c:	00000008 	andeq	r0, r0, r8
 d70:	0000000c 	andeq	r0, r0, ip
 d74:	00000b84 	andeq	r0, r0, r4, lsl #23
 d78:	100033b0 			; <UNDEFINED> instruction: 0x100033b0
 d7c:	00000034 	andeq	r0, r0, r4, lsr r0
 d80:	0000001c 	andeq	r0, r0, ip, lsl r0
 d84:	00000b84 	andeq	r0, r0, r4, lsl #23
 d88:	100033e4 	andne	r3, r0, r4, ror #7
 d8c:	00000018 	andeq	r0, r0, r8, lsl r0
 d90:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 d94:	41018e02 	tstmi	r1, r2, lsl #28
 d98:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
 d9c:	00000008 	andeq	r0, r0, r8
 da0:	00000020 	andeq	r0, r0, r0, lsr #32
 da4:	00000b84 	andeq	r0, r0, r4, lsl #23
 da8:	100033fc 	strdne	r3, [r0], -ip
 dac:	0000007c 	andeq	r0, r0, ip, ror r0
 db0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 db4:	86048505 	strhi	r8, [r4], -r5, lsl #10
 db8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 dbc:	d00e4301 	andle	r4, lr, r1, lsl #6
 dc0:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
 dc4:	00000030 	andeq	r0, r0, r0, lsr r0
 dc8:	00000b84 	andeq	r0, r0, r4, lsl #23
 dcc:	10003478 	andne	r3, r0, r8, ror r4
 dd0:	000002c8 	andeq	r0, r0, r8, asr #5
 dd4:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 dd8:	86088509 	strhi	r8, [r8], -r9, lsl #10
 ddc:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 de0:	8a048905 	bhi	1231fc <__RAM_SIZE+0x231fc>
 de4:	8e028b03 	vmlahi.f64	d8, d2, d3
 de8:	480e4201 	stmdami	lr, {r0, r9, lr}
 dec:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
 df0:	0a710b42 	beq	1c43b00 <SYSTEM_CLOCK+0x168ad80>
 df4:	0b42240e 	bleq	1089e34 <SYSTEM_CLOCK+0xad10b4>
 df8:	0000000c 	andeq	r0, r0, ip
 dfc:	00000b84 	andeq	r0, r0, r4, lsl #23
 e00:	10003740 	andne	r3, r0, r0, asr #14
 e04:	00000004 	andeq	r0, r0, r4
 e08:	0000000c 	andeq	r0, r0, ip
 e0c:	00000b84 	andeq	r0, r0, r4, lsl #23
 e10:	10003744 	andne	r3, r0, r4, asr #14
 e14:	00000004 	andeq	r0, r0, r4
 e18:	0000000c 	andeq	r0, r0, ip
 e1c:	00000b84 	andeq	r0, r0, r4, lsl #23
 e20:	10003748 	andne	r3, r0, r8, asr #14
 e24:	00000004 	andeq	r0, r0, r4
 e28:	0000003c 	andeq	r0, r0, ip, lsr r0
 e2c:	00000b84 	andeq	r0, r0, r4, lsl #23
 e30:	1000374c 	andne	r3, r0, ip, asr #14
 e34:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
 e38:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 e3c:	86068507 	strhi	r8, [r6], -r7, lsl #10
 e40:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 e44:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 e48:	a80e4201 	stmdage	lr, {r0, r9, lr}
 e4c:	0e0a7102 	adfeqe	f7, f2, f2
 e50:	6b0b421c 	blvs	2d16c8 <__RAM_SIZE+0x1d16c8>
 e54:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
 e58:	0a48020b 	beq	120168c <SYSTEM_CLOCK+0xc4890c>
 e5c:	0b421c0e 	bleq	1087e9c <SYSTEM_CLOCK+0xacf11c>
 e60:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
 e64:	00000b42 	andeq	r0, r0, r2, asr #22
 e68:	0000000c 	andeq	r0, r0, ip
 e6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 e70:	7c020001 	stcvc	0, cr0, [r2], {1}
 e74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 e78:	00000018 	andeq	r0, r0, r8, lsl r0
 e7c:	00000e68 	andeq	r0, r0, r8, ror #28
 e80:	10003bac 	andne	r3, r0, ip, lsr #23
 e84:	0000003c 	andeq	r0, r0, ip, lsr r0
 e88:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
 e8c:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
 e90:	00000000 	andeq	r0, r0, r0
 e94:	0000001c 	andeq	r0, r0, ip, lsl r0
 e98:	00000e68 	andeq	r0, r0, r8, ror #28
 e9c:	10003be8 	andne	r3, r0, r8, ror #23
 ea0:	00000018 	andeq	r0, r0, r8, lsl r0
 ea4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 ea8:	41018e02 	tstmi	r1, r2, lsl #28
 eac:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
 eb0:	00000008 	andeq	r0, r0, r8
 eb4:	0000000c 	andeq	r0, r0, ip
 eb8:	00000e68 	andeq	r0, r0, r8, ror #28
 ebc:	10003c00 	andne	r3, r0, r0, lsl #24
 ec0:	00000002 	andeq	r0, r0, r2
 ec4:	00000028 	andeq	r0, r0, r8, lsr #32
 ec8:	00000e68 	andeq	r0, r0, r8, ror #28
 ecc:	10003c04 	andne	r3, r0, r4, lsl #24
 ed0:	000002ca 	andeq	r0, r0, sl, asr #5
 ed4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 ed8:	86068507 	strhi	r8, [r6], -r7, lsl #10
 edc:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 ee0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 ee4:	300e4301 	andcc	r4, lr, r1, lsl #6
 ee8:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
 eec:	00000b42 	andeq	r0, r0, r2, asr #22
 ef0:	00000018 	andeq	r0, r0, r8, lsl r0
 ef4:	00000e68 	andeq	r0, r0, r8, ror #28
 ef8:	10003ed0 	ldrdne	r3, [r0], -r0
 efc:	00000030 	andeq	r0, r0, r0, lsr r0
 f00:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
 f04:	180e4101 	stmdane	lr, {r0, r8, lr}
 f08:	00040e4c 	andeq	r0, r4, ip, asr #28
 f0c:	00000014 	andeq	r0, r0, r4, lsl r0
 f10:	00000e68 	andeq	r0, r0, r8, ror #28
 f14:	10003f00 	andne	r3, r0, r0, lsl #30
 f18:	0000000a 	andeq	r0, r0, sl
 f1c:	83080e41 	movwhi	r0, #36417	; 0x8e41
 f20:	00018e02 	andeq	r8, r1, r2, lsl #28
 f24:	00000014 	andeq	r0, r0, r4, lsl r0
 f28:	00000e68 	andeq	r0, r0, r8, ror #28
 f2c:	10003f0c 	andne	r3, r0, ip, lsl #30
 f30:	00000012 	andeq	r0, r0, r2, lsl r0
 f34:	83080e41 	movwhi	r0, #36417	; 0x8e41
 f38:	00018e02 	andeq	r8, r1, r2, lsl #28
 f3c:	00000014 	andeq	r0, r0, r4, lsl r0
 f40:	00000e68 	andeq	r0, r0, r8, ror #28
 f44:	00000000 	andeq	r0, r0, r0
 f48:	00000006 	andeq	r0, r0, r6
 f4c:	83080e41 	movwhi	r0, #36417	; 0x8e41
 f50:	00018e02 	andeq	r8, r1, r2, lsl #28
 f54:	00000014 	andeq	r0, r0, r4, lsl r0
 f58:	00000e68 	andeq	r0, r0, r8, ror #28
 f5c:	00000000 	andeq	r0, r0, r0
 f60:	00000006 	andeq	r0, r0, r6
 f64:	83080e41 	movwhi	r0, #36417	; 0x8e41
 f68:	00018e02 	andeq	r8, r1, r2, lsl #28


.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	100036f9 	strdne	r3, [r0], -r9
10000008:	1000374d 	andne	r3, r0, sp, asr #14
1000000c:	10003769 	andne	r3, r0, r9, ror #14
10000010:	1000374d 	andne	r3, r0, sp, asr #14
10000014:	1000374d 	andne	r3, r0, sp, asr #14
10000018:	1000374d 	andne	r3, r0, sp, asr #14
1000001c:	1000374d 	andne	r3, r0, sp, asr #14
	...
1000002c:	100036c1 	andne	r3, r0, r1, asr #13
10000030:	1000374d 	andne	r3, r0, sp, asr #14
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10003679 	andne	r3, r0, r9, ror r6
1000003c:	10003501 	andne	r3, r0, r1, lsl #10
10000040:	1000374d 	andne	r3, r0, sp, asr #14
10000044:	1000374d 	andne	r3, r0, sp, asr #14
10000048:	1000374d 	andne	r3, r0, sp, asr #14
1000004c:	1000374d 	andne	r3, r0, sp, asr #14
10000050:	1000374d 	andne	r3, r0, sp, asr #14
10000054:	1000374d 	andne	r3, r0, sp, asr #14
10000058:	1000374d 	andne	r3, r0, sp, asr #14
1000005c:	1000374d 	andne	r3, r0, sp, asr #14
10000060:	1000374d 	andne	r3, r0, sp, asr #14
10000064:	1000374d 	andne	r3, r0, sp, asr #14
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000448 	stmdacc	r0, {r3, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10005ba4 	andne	r5, r0, r4, lsr #23

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}
100007fc:	10005ba4 	andne	r5, r0, r4, lsr #23

10000800 <main_task_init>:
        vTaskDelay(100);
        printf("hello this is FreeRTOS.\r\n");
    }
}

static void main_task_init(void) {
10000800:	b500      	push	{lr}
10000802:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
10000804:	4b0b      	ldr	r3, [pc, #44]	; (10000834 <main_task_init+0x34>)
10000806:	9301      	str	r3, [sp, #4]
10000808:	2301      	movs	r3, #1
1000080a:	9300      	str	r3, [sp, #0]
1000080c:	2300      	movs	r3, #0
1000080e:	f44f 6200 	mov.w	r2, #2048	; 0x800
10000812:	4909      	ldr	r1, [pc, #36]	; (10000838 <main_task_init+0x38>)
10000814:	4809      	ldr	r0, [pc, #36]	; (1000083c <main_task_init+0x3c>)
10000816:	f001 ff39 	bl	1000268c <xTaskCreate>
    if (xReturn == pdPASS) {
1000081a:	2801      	cmp	r0, #1
1000081c:	d006      	beq.n	1000082c <main_task_init+0x2c>
1000081e:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
10000820:	4807      	ldr	r0, [pc, #28]	; (10000840 <main_task_init+0x40>)
10000822:	f001 f8eb 	bl	100019fc <printf>
    }
}
10000826:	b003      	add	sp, #12
10000828:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
1000082c:	f002 fabc 	bl	10002da8 <vTaskStartScheduler>
10000830:	e7f9      	b.n	10000826 <main_task_init+0x26>
10000832:	bf00      	nop
10000834:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
10000838:	100056a4 	andne	r5, r0, r4, lsr #13
1000083c:	10000845 	andne	r0, r0, r5, asr #16
10000840:	100056b0 			; <UNDEFINED> instruction: 0x100056b0

10000844 <main_task_entry>:
static void main_task_entry(void *parameters) {
10000844:	b508      	push	{r3, lr}
        vTaskDelay(100);
10000846:	2064      	movs	r0, #100	; 0x64
10000848:	f002 f8ac 	bl	100029a4 <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
1000084c:	4801      	ldr	r0, [pc, #4]	; (10000854 <main_task_entry+0x10>)
1000084e:	f001 f8f5 	bl	10001a3c <puts>
    while(1) {
10000852:	e7f8      	b.n	10000846 <main_task_entry+0x2>
10000854:	100056d0 	ldrdne	r5, [r0], -r0

10000858 <main>:

int main(void) {
10000858:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
1000085a:	f001 f8ff 	bl	10001a5c <uart_init>

    printf("Start\r\n");
1000085e:	4807      	ldr	r0, [pc, #28]	; (1000087c <main+0x24>)
10000860:	f001 f8ec 	bl	10001a3c <puts>
    fault_dump_init();
10000864:	f001 f94a 	bl	10001afc <fault_dump_init>
    main_task_init();
10000868:	f7ff ffca 	bl	10000800 <main_task_init>
    int count = 0;
1000086c:	2100      	movs	r1, #0
    // test5();

    while (1) {
        __NOP();
1000086e:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
10000870:	1c4c      	adds	r4, r1, #1
10000872:	4803      	ldr	r0, [pc, #12]	; (10000880 <main+0x28>)
10000874:	f001 f8c2 	bl	100019fc <printf>
10000878:	4621      	mov	r1, r4
1000087a:	e7f8      	b.n	1000086e <main+0x16>
1000087c:	100056ec 	andne	r5, r0, ip, ror #13
10000880:	100056f4 	strdne	r5, [r0], -r4

10000884 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000884:	4b06      	ldr	r3, [pc, #24]	; (100008a0 <SystemInit+0x1c>)
10000886:	4a07      	ldr	r2, [pc, #28]	; (100008a4 <SystemInit+0x20>)
10000888:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
1000088a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
1000088e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
10000892:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
10000896:	4b04      	ldr	r3, [pc, #16]	; (100008a8 <SystemInit+0x24>)
10000898:	4a04      	ldr	r2, [pc, #16]	; (100008ac <SystemInit+0x28>)
1000089a:	601a      	str	r2, [r3, #0]
}
1000089c:	4770      	bx	lr
1000089e:	bf00      	nop
100008a0:	e000ed00 	and	lr, r0, r0, lsl #26
100008a4:	10000000 	andne	r0, r0, r0
100008a8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100008ac:	017d7840 	cmneq	sp, r0, asr #16

100008b0 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100008b0:	4770      	bx	lr

100008b2 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100008b2:	4601      	mov	r1, r0
  unsigned int i = 0U;
100008b4:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100008b6:	e007      	b.n	100008c8 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100008b8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100008bc:	1c53      	adds	r3, r2, #1
100008be:	600b      	str	r3, [r1, #0]
100008c0:	7813      	ldrb	r3, [r2, #0]
100008c2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100008c6:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100008c8:	680a      	ldr	r2, [r1, #0]
100008ca:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
100008cc:	3b30      	subs	r3, #48	; 0x30
100008ce:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
100008d0:	2b09      	cmp	r3, #9
100008d2:	d9f1      	bls.n	100008b8 <_atoi+0x6>
  }
  return i;
}
100008d4:	4770      	bx	lr

100008d6 <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
100008d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100008da:	b083      	sub	sp, #12
100008dc:	4605      	mov	r5, r0
100008de:	460e      	mov	r6, r1
100008e0:	4693      	mov	fp, r2
100008e2:	461f      	mov	r7, r3
100008e4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
100008e8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
100008ea:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
100008ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100008f0:	f013 0f03 	tst.w	r3, #3
100008f4:	d119      	bne.n	1000092a <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
100008f6:	46a0      	mov	r8, r4
100008f8:	9201      	str	r2, [sp, #4]
100008fa:	45c8      	cmp	r8, r9
100008fc:	d209      	bcs.n	10000912 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
100008fe:	f102 0b01 	add.w	fp, r2, #1
10000902:	463b      	mov	r3, r7
10000904:	4631      	mov	r1, r6
10000906:	2020      	movs	r0, #32
10000908:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
1000090a:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
1000090e:	465a      	mov	r2, fp
10000910:	e7f3      	b.n	100008fa <_out_rev+0x24>
10000912:	f8dd b004 	ldr.w	fp, [sp, #4]
10000916:	e008      	b.n	1000092a <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
10000918:	3c01      	subs	r4, #1
1000091a:	f102 0801 	add.w	r8, r2, #1
1000091e:	463b      	mov	r3, r7
10000920:	4631      	mov	r1, r6
10000922:	f81a 0004 	ldrb.w	r0, [sl, r4]
10000926:	47a8      	blx	r5
10000928:	4642      	mov	r2, r8
  while (len) {
1000092a:	2c00      	cmp	r4, #0
1000092c:	d1f4      	bne.n	10000918 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
1000092e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000930:	f013 0f02 	tst.w	r3, #2
10000934:	d103      	bne.n	1000093e <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
10000936:	4610      	mov	r0, r2
10000938:	b003      	add	sp, #12
1000093a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
1000093e:	eba2 030b 	sub.w	r3, r2, fp
10000942:	454b      	cmp	r3, r9
10000944:	d2f7      	bcs.n	10000936 <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
10000946:	1c54      	adds	r4, r2, #1
10000948:	463b      	mov	r3, r7
1000094a:	4631      	mov	r1, r6
1000094c:	2020      	movs	r0, #32
1000094e:	47a8      	blx	r5
10000950:	4622      	mov	r2, r4
10000952:	e7f4      	b.n	1000093e <_out_rev+0x68>

10000954 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000954:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10000958:	b085      	sub	sp, #20
1000095a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
1000095c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000095e:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000962:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000966:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000096a:	9f11      	ldr	r7, [sp, #68]	; 0x44
1000096c:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
1000096e:	f016 0f02 	tst.w	r6, #2
10000972:	d121      	bne.n	100009b8 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000974:	b17f      	cbz	r7, 10000996 <_ntoa_format+0x42>
10000976:	f016 0f01 	tst.w	r6, #1
1000097a:	d00c      	beq.n	10000996 <_ntoa_format+0x42>
1000097c:	f1b9 0f00 	cmp.w	r9, #0
10000980:	d102      	bne.n	10000988 <_ntoa_format+0x34>
10000982:	f016 0f0c 	tst.w	r6, #12
10000986:	d006      	beq.n	10000996 <_ntoa_format+0x42>
      width--;
10000988:	3f01      	subs	r7, #1
1000098a:	e004      	b.n	10000996 <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
1000098c:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000990:	f805 c004 	strb.w	ip, [r5, r4]
10000994:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000996:	4574      	cmp	r4, lr
10000998:	d201      	bcs.n	1000099e <_ntoa_format+0x4a>
1000099a:	2c1f      	cmp	r4, #31
1000099c:	d9f6      	bls.n	1000098c <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
1000099e:	f016 0f01 	tst.w	r6, #1
100009a2:	d009      	beq.n	100009b8 <_ntoa_format+0x64>
100009a4:	42bc      	cmp	r4, r7
100009a6:	d207      	bcs.n	100009b8 <_ntoa_format+0x64>
100009a8:	2c1f      	cmp	r4, #31
100009aa:	d805      	bhi.n	100009b8 <_ntoa_format+0x64>
      buf[len++] = '0';
100009ac:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009b0:	f805 c004 	strb.w	ip, [r5, r4]
100009b4:	3401      	adds	r4, #1
100009b6:	e7f2      	b.n	1000099e <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
100009b8:	f016 0f10 	tst.w	r6, #16
100009bc:	d017      	beq.n	100009ee <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
100009be:	f416 6f80 	tst.w	r6, #1024	; 0x400
100009c2:	d104      	bne.n	100009ce <_ntoa_format+0x7a>
100009c4:	b11c      	cbz	r4, 100009ce <_ntoa_format+0x7a>
100009c6:	4574      	cmp	r4, lr
100009c8:	d024      	beq.n	10000a14 <_ntoa_format+0xc0>
100009ca:	42bc      	cmp	r4, r7
100009cc:	d022      	beq.n	10000a14 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009ce:	f1b8 0f10 	cmp.w	r8, #16
100009d2:	d02b      	beq.n	10000a2c <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009d4:	f1b8 0f10 	cmp.w	r8, #16
100009d8:	d033      	beq.n	10000a42 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009da:	f1b8 0f02 	cmp.w	r8, #2
100009de:	d03b      	beq.n	10000a58 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
100009e0:	2c1f      	cmp	r4, #31
100009e2:	d804      	bhi.n	100009ee <_ntoa_format+0x9a>
      buf[len++] = '0';
100009e4:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009e8:	f805 c004 	strb.w	ip, [r5, r4]
100009ec:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
100009ee:	2c1f      	cmp	r4, #31
100009f0:	d807      	bhi.n	10000a02 <_ntoa_format+0xae>
    if (negative) {
100009f2:	f1b9 0f00 	cmp.w	r9, #0
100009f6:	d037      	beq.n	10000a68 <_ntoa_format+0x114>
      buf[len++] = '-';
100009f8:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
100009fc:	f805 c004 	strb.w	ip, [r5, r4]
10000a00:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000a02:	9603      	str	r6, [sp, #12]
10000a04:	9702      	str	r7, [sp, #8]
10000a06:	9401      	str	r4, [sp, #4]
10000a08:	9500      	str	r5, [sp, #0]
10000a0a:	f7ff ff64 	bl	100008d6 <_out_rev>
}
10000a0e:	b005      	add	sp, #20
10000a10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000a14:	f1b4 0c01 	subs.w	ip, r4, #1
10000a18:	d006      	beq.n	10000a28 <_ntoa_format+0xd4>
10000a1a:	f1b8 0f10 	cmp.w	r8, #16
10000a1e:	d001      	beq.n	10000a24 <_ntoa_format+0xd0>
      len--;
10000a20:	4664      	mov	r4, ip
10000a22:	e7d4      	b.n	100009ce <_ntoa_format+0x7a>
        len--;
10000a24:	3c02      	subs	r4, #2
10000a26:	e7d2      	b.n	100009ce <_ntoa_format+0x7a>
      len--;
10000a28:	4664      	mov	r4, ip
10000a2a:	e7d0      	b.n	100009ce <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a2c:	f016 0f20 	tst.w	r6, #32
10000a30:	d1d0      	bne.n	100009d4 <_ntoa_format+0x80>
10000a32:	2c1f      	cmp	r4, #31
10000a34:	d8ce      	bhi.n	100009d4 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000a36:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000a3a:	f805 c004 	strb.w	ip, [r5, r4]
10000a3e:	3401      	adds	r4, #1
10000a40:	e7ce      	b.n	100009e0 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a42:	f016 0f20 	tst.w	r6, #32
10000a46:	d0c8      	beq.n	100009da <_ntoa_format+0x86>
10000a48:	2c1f      	cmp	r4, #31
10000a4a:	d8c6      	bhi.n	100009da <_ntoa_format+0x86>
      buf[len++] = 'X';
10000a4c:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000a50:	f805 c004 	strb.w	ip, [r5, r4]
10000a54:	3401      	adds	r4, #1
10000a56:	e7c3      	b.n	100009e0 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a58:	2c1f      	cmp	r4, #31
10000a5a:	d8c1      	bhi.n	100009e0 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000a5c:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000a60:	f805 c004 	strb.w	ip, [r5, r4]
10000a64:	3401      	adds	r4, #1
10000a66:	e7bb      	b.n	100009e0 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000a68:	f016 0f04 	tst.w	r6, #4
10000a6c:	d005      	beq.n	10000a7a <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000a6e:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000a72:	f805 c004 	strb.w	ip, [r5, r4]
10000a76:	3401      	adds	r4, #1
10000a78:	e7c3      	b.n	10000a02 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000a7a:	f016 0f08 	tst.w	r6, #8
10000a7e:	d0c0      	beq.n	10000a02 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000a80:	f04f 0c20 	mov.w	ip, #32
10000a84:	f805 c004 	strb.w	ip, [r5, r4]
10000a88:	3401      	adds	r4, #1
10000a8a:	e7ba      	b.n	10000a02 <_ntoa_format+0xae>

10000a8c <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
10000a8e:	b091      	sub	sp, #68	; 0x44
10000a90:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000a92:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000a94:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000a96:	b90c      	cbnz	r4, 10000a9c <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000a98:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000a9c:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000aa0:	d016      	beq.n	10000ad0 <_ntoa_long+0x44>
10000aa2:	b364      	cbz	r4, 10000afe <_ntoa_long+0x72>
10000aa4:	f04f 0e00 	mov.w	lr, #0
10000aa8:	e012      	b.n	10000ad0 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000aaa:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000aae:	fa5f fc8c 	uxtb.w	ip, ip
10000ab2:	f10e 0701 	add.w	r7, lr, #1
10000ab6:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000aba:	44ee      	add	lr, sp
10000abc:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000ac0:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000ac4:	42ac      	cmp	r4, r5
10000ac6:	d31b      	bcc.n	10000b00 <_ntoa_long+0x74>
10000ac8:	2f1f      	cmp	r7, #31
10000aca:	d819      	bhi.n	10000b00 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000acc:	46be      	mov	lr, r7
      value /= base;
10000ace:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000ad0:	fbb4 fcf5 	udiv	ip, r4, r5
10000ad4:	fb05 4c1c 	mls	ip, r5, ip, r4
10000ad8:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000adc:	f1bc 0f09 	cmp.w	ip, #9
10000ae0:	d9e3      	bls.n	10000aaa <_ntoa_long+0x1e>
10000ae2:	f016 0f20 	tst.w	r6, #32
10000ae6:	d008      	beq.n	10000afa <_ntoa_long+0x6e>
10000ae8:	2741      	movs	r7, #65	; 0x41
10000aea:	44bc      	add	ip, r7
10000aec:	fa5f fc8c 	uxtb.w	ip, ip
10000af0:	f1ac 0c0a 	sub.w	ip, ip, #10
10000af4:	fa5f fc8c 	uxtb.w	ip, ip
10000af8:	e7db      	b.n	10000ab2 <_ntoa_long+0x26>
10000afa:	2761      	movs	r7, #97	; 0x61
10000afc:	e7f5      	b.n	10000aea <_ntoa_long+0x5e>
  size_t len = 0U;
10000afe:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000b00:	9606      	str	r6, [sp, #24]
10000b02:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000b04:	9405      	str	r4, [sp, #20]
10000b06:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000b08:	9404      	str	r4, [sp, #16]
10000b0a:	9503      	str	r5, [sp, #12]
10000b0c:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000b10:	9402      	str	r4, [sp, #8]
10000b12:	9701      	str	r7, [sp, #4]
10000b14:	ac08      	add	r4, sp, #32
10000b16:	9400      	str	r4, [sp, #0]
10000b18:	f7ff ff1c 	bl	10000954 <_ntoa_format>
}
10000b1c:	b011      	add	sp, #68	; 0x44
10000b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000b20 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000b24:	b095      	sub	sp, #84	; 0x54
10000b26:	9009      	str	r0, [sp, #36]	; 0x24
10000b28:	910a      	str	r1, [sp, #40]	; 0x28
10000b2a:	920b      	str	r2, [sp, #44]	; 0x2c
10000b2c:	469b      	mov	fp, r3
10000b2e:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000b30:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000b32:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000b34:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000b38:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000b3c:	ea55 0306 	orrs.w	r3, r5, r6
10000b40:	d101      	bne.n	10000b46 <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000b42:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000b46:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000b4a:	d01f      	beq.n	10000b8c <_ntoa_long_long+0x6c>
10000b4c:	ea55 0306 	orrs.w	r3, r5, r6
10000b50:	d030      	beq.n	10000bb4 <_ntoa_long_long+0x94>
10000b52:	2400      	movs	r4, #0
10000b54:	e01a      	b.n	10000b8c <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b56:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000b5a:	b2d2      	uxtb	r2, r2
10000b5c:	f104 0901 	add.w	r9, r4, #1
10000b60:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000b64:	eb0d 0403 	add.w	r4, sp, r3
10000b68:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000b6c:	463a      	mov	r2, r7
10000b6e:	4643      	mov	r3, r8
10000b70:	4628      	mov	r0, r5
10000b72:	4631      	mov	r1, r6
10000b74:	f003 fbfa 	bl	1000436c <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000b78:	42bd      	cmp	r5, r7
10000b7a:	eb76 0308 	sbcs.w	r3, r6, r8
10000b7e:	d31b      	bcc.n	10000bb8 <_ntoa_long_long+0x98>
10000b80:	f1b9 0f1f 	cmp.w	r9, #31
10000b84:	d818      	bhi.n	10000bb8 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b86:	464c      	mov	r4, r9
      value /= base;
10000b88:	4605      	mov	r5, r0
10000b8a:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000b8c:	463a      	mov	r2, r7
10000b8e:	4643      	mov	r3, r8
10000b90:	4628      	mov	r0, r5
10000b92:	4631      	mov	r1, r6
10000b94:	f003 fbea 	bl	1000436c <__aeabi_uldivmod>
10000b98:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b9a:	2b09      	cmp	r3, #9
10000b9c:	d9db      	bls.n	10000b56 <_ntoa_long_long+0x36>
10000b9e:	f01a 0f20 	tst.w	sl, #32
10000ba2:	d005      	beq.n	10000bb0 <_ntoa_long_long+0x90>
10000ba4:	2241      	movs	r2, #65	; 0x41
10000ba6:	441a      	add	r2, r3
10000ba8:	b2d2      	uxtb	r2, r2
10000baa:	3a0a      	subs	r2, #10
10000bac:	b2d2      	uxtb	r2, r2
10000bae:	e7d5      	b.n	10000b5c <_ntoa_long_long+0x3c>
10000bb0:	2261      	movs	r2, #97	; 0x61
10000bb2:	e7f8      	b.n	10000ba6 <_ntoa_long_long+0x86>
  size_t len = 0U;
10000bb4:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000bb8:	f8cd a018 	str.w	sl, [sp, #24]
10000bbc:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000bbe:	9305      	str	r3, [sp, #20]
10000bc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000bc2:	9304      	str	r3, [sp, #16]
10000bc4:	9703      	str	r7, [sp, #12]
10000bc6:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000bca:	9302      	str	r3, [sp, #8]
10000bcc:	f8cd 9004 	str.w	r9, [sp, #4]
10000bd0:	ab0c      	add	r3, sp, #48	; 0x30
10000bd2:	9300      	str	r3, [sp, #0]
10000bd4:	465b      	mov	r3, fp
10000bd6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000bd8:	990a      	ldr	r1, [sp, #40]	; 0x28
10000bda:	9809      	ldr	r0, [sp, #36]	; 0x24
10000bdc:	f7ff feba 	bl	10000954 <_ntoa_format>
}
10000be0:	b015      	add	sp, #84	; 0x54
10000be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

10000be8 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000bec:	ed2d 8b02 	vpush	{d8}
10000bf0:	b091      	sub	sp, #68	; 0x44
10000bf2:	4682      	mov	sl, r0
10000bf4:	460c      	mov	r4, r1
10000bf6:	4693      	mov	fp, r2
10000bf8:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000bfa:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000bfe:	4610      	mov	r0, r2
10000c00:	4619      	mov	r1, r3
10000c02:	f003 fb39 	bl	10004278 <__aeabi_dcmpeq>
10000c06:	2800      	cmp	r0, #0
10000c08:	f000 8107 	beq.w	10000e1a <_etoa+0x232>
10000c0c:	f04f 32ff 	mov.w	r2, #4294967295
10000c10:	4bb1      	ldr	r3, [pc, #708]	; (10000ed8 <_etoa+0x2f0>)
10000c12:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c16:	f003 fb57 	bl	100042c8 <__aeabi_dcmpgt>
10000c1a:	2800      	cmp	r0, #0
10000c1c:	f040 80fd 	bne.w	10000e1a <_etoa+0x232>
10000c20:	f04f 32ff 	mov.w	r2, #4294967295
10000c24:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000c28:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c2c:	f003 fb2e 	bl	1000428c <__aeabi_dcmplt>
10000c30:	2800      	cmp	r0, #0
10000c32:	f040 80f2 	bne.w	10000e1a <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000c36:	2200      	movs	r2, #0
10000c38:	2300      	movs	r3, #0
10000c3a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c3e:	f003 fb25 	bl	1000428c <__aeabi_dcmplt>
10000c42:	2800      	cmp	r0, #0
10000c44:	f040 80fe 	bne.w	10000e44 <_etoa+0x25c>
10000c48:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000c4c:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000c50:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000c52:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000c56:	930f      	str	r3, [sp, #60]	; 0x3c
10000c58:	d101      	bne.n	10000c5e <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000c5a:	2306      	movs	r3, #6
10000c5c:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000c5e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000c62:	4602      	mov	r2, r0
10000c64:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000c68:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000c6c:	4690      	mov	r8, r2
10000c6e:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000c72:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000c76:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000c7a:	f003 f82b 	bl	10003cd4 <__aeabi_i2d>
10000c7e:	a384      	add	r3, pc, #528	; (adr r3, 10000e90 <_etoa+0x2a8>)
10000c80:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c84:	f003 f890 	bl	10003da8 <__aeabi_dmul>
10000c88:	a383      	add	r3, pc, #524	; (adr r3, 10000e98 <_etoa+0x2b0>)
10000c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c8e:	f002 fed5 	bl	10003a3c <__adddf3>
10000c92:	4606      	mov	r6, r0
10000c94:	460f      	mov	r7, r1
10000c96:	2200      	movs	r2, #0
10000c98:	4b90      	ldr	r3, [pc, #576]	; (10000edc <_etoa+0x2f4>)
10000c9a:	4640      	mov	r0, r8
10000c9c:	4649      	mov	r1, r9
10000c9e:	f002 fecb 	bl	10003a38 <__aeabi_dsub>
10000ca2:	a37f      	add	r3, pc, #508	; (adr r3, 10000ea0 <_etoa+0x2b8>)
10000ca4:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ca8:	f003 f87e 	bl	10003da8 <__aeabi_dmul>
10000cac:	4602      	mov	r2, r0
10000cae:	460b      	mov	r3, r1
10000cb0:	4630      	mov	r0, r6
10000cb2:	4639      	mov	r1, r7
10000cb4:	f002 fec2 	bl	10003a3c <__adddf3>
10000cb8:	f003 fb10 	bl	100042dc <__aeabi_d2iz>
10000cbc:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000cbe:	f003 f809 	bl	10003cd4 <__aeabi_i2d>
10000cc2:	4680      	mov	r8, r0
10000cc4:	4689      	mov	r9, r1
10000cc6:	a378      	add	r3, pc, #480	; (adr r3, 10000ea8 <_etoa+0x2c0>)
10000cc8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ccc:	f003 f86c 	bl	10003da8 <__aeabi_dmul>
10000cd0:	2200      	movs	r2, #0
10000cd2:	4b83      	ldr	r3, [pc, #524]	; (10000ee0 <_etoa+0x2f8>)
10000cd4:	f002 feb2 	bl	10003a3c <__adddf3>
10000cd8:	f003 fb00 	bl	100042dc <__aeabi_d2iz>
10000cdc:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000cde:	a374      	add	r3, pc, #464	; (adr r3, 10000eb0 <_etoa+0x2c8>)
10000ce0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ce4:	4640      	mov	r0, r8
10000ce6:	4649      	mov	r1, r9
10000ce8:	f003 f85e 	bl	10003da8 <__aeabi_dmul>
10000cec:	4680      	mov	r8, r0
10000cee:	4689      	mov	r9, r1
10000cf0:	4638      	mov	r0, r7
10000cf2:	f002 ffef 	bl	10003cd4 <__aeabi_i2d>
10000cf6:	a370      	add	r3, pc, #448	; (adr r3, 10000eb8 <_etoa+0x2d0>)
10000cf8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cfc:	f003 f854 	bl	10003da8 <__aeabi_dmul>
10000d00:	4602      	mov	r2, r0
10000d02:	460b      	mov	r3, r1
10000d04:	4640      	mov	r0, r8
10000d06:	4649      	mov	r1, r9
10000d08:	f002 fe96 	bl	10003a38 <__aeabi_dsub>
10000d0c:	4680      	mov	r8, r0
10000d0e:	4689      	mov	r9, r1
  const double z2 = z * z;
10000d10:	4602      	mov	r2, r0
10000d12:	460b      	mov	r3, r1
10000d14:	f003 f848 	bl	10003da8 <__aeabi_dmul>
10000d18:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000d1c:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000d20:	2100      	movs	r1, #0
10000d22:	2200      	movs	r2, #0
10000d24:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000d28:	053b      	lsls	r3, r7, #20
10000d2a:	9309      	str	r3, [sp, #36]	; 0x24
10000d2c:	2300      	movs	r3, #0
10000d2e:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000d30:	4642      	mov	r2, r8
10000d32:	464b      	mov	r3, r9
10000d34:	4640      	mov	r0, r8
10000d36:	4649      	mov	r1, r9
10000d38:	f002 fe80 	bl	10003a3c <__adddf3>
10000d3c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000d40:	4642      	mov	r2, r8
10000d42:	464b      	mov	r3, r9
10000d44:	2000      	movs	r0, #0
10000d46:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000d4a:	f002 fe75 	bl	10003a38 <__aeabi_dsub>
10000d4e:	4680      	mov	r8, r0
10000d50:	4689      	mov	r9, r1
10000d52:	2200      	movs	r2, #0
10000d54:	4b63      	ldr	r3, [pc, #396]	; (10000ee4 <_etoa+0x2fc>)
10000d56:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d5a:	f003 f94f 	bl	10003ffc <__aeabi_ddiv>
10000d5e:	2200      	movs	r2, #0
10000d60:	4b61      	ldr	r3, [pc, #388]	; (10000ee8 <_etoa+0x300>)
10000d62:	f002 fe6b 	bl	10003a3c <__adddf3>
10000d66:	4602      	mov	r2, r0
10000d68:	460b      	mov	r3, r1
10000d6a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d6e:	f003 f945 	bl	10003ffc <__aeabi_ddiv>
10000d72:	2200      	movs	r2, #0
10000d74:	4b5d      	ldr	r3, [pc, #372]	; (10000eec <_etoa+0x304>)
10000d76:	f002 fe61 	bl	10003a3c <__adddf3>
10000d7a:	4602      	mov	r2, r0
10000d7c:	460b      	mov	r3, r1
10000d7e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d82:	f003 f93b 	bl	10003ffc <__aeabi_ddiv>
10000d86:	4602      	mov	r2, r0
10000d88:	460b      	mov	r3, r1
10000d8a:	4640      	mov	r0, r8
10000d8c:	4649      	mov	r1, r9
10000d8e:	f002 fe55 	bl	10003a3c <__adddf3>
10000d92:	4602      	mov	r2, r0
10000d94:	460b      	mov	r3, r1
10000d96:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000d9a:	f003 f92f 	bl	10003ffc <__aeabi_ddiv>
10000d9e:	2200      	movs	r2, #0
10000da0:	4b53      	ldr	r3, [pc, #332]	; (10000ef0 <_etoa+0x308>)
10000da2:	f002 fe4b 	bl	10003a3c <__adddf3>
10000da6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000daa:	f002 fffd 	bl	10003da8 <__aeabi_dmul>
10000dae:	4680      	mov	r8, r0
10000db0:	4689      	mov	r9, r1
10000db2:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000db6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000dba:	f003 fa85 	bl	100042c8 <__aeabi_dcmpgt>
10000dbe:	b140      	cbz	r0, 10000dd2 <_etoa+0x1ea>
    expval--;
10000dc0:	3e01      	subs	r6, #1
    conv.F /= 10;
10000dc2:	2200      	movs	r2, #0
10000dc4:	4b48      	ldr	r3, [pc, #288]	; (10000ee8 <_etoa+0x300>)
10000dc6:	4640      	mov	r0, r8
10000dc8:	4649      	mov	r1, r9
10000dca:	f003 f917 	bl	10003ffc <__aeabi_ddiv>
10000dce:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000dd2:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000dd6:	2bc6      	cmp	r3, #198	; 0xc6
10000dd8:	d83f      	bhi.n	10000e5a <_etoa+0x272>
10000dda:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000ddc:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000dde:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000de2:	d044      	beq.n	10000e6e <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000de4:	a336      	add	r3, pc, #216	; (adr r3, 10000ec0 <_etoa+0x2d8>)
10000de6:	e9d3 2300 	ldrd	r2, r3, [r3]
10000dea:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000dee:	4640      	mov	r0, r8
10000df0:	4649      	mov	r1, r9
10000df2:	f003 fa5f 	bl	100042b4 <__aeabi_dcmpge>
10000df6:	2800      	cmp	r0, #0
10000df8:	d03f      	beq.n	10000e7a <_etoa+0x292>
10000dfa:	a333      	add	r3, pc, #204	; (adr r3, 10000ec8 <_etoa+0x2e0>)
10000dfc:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e00:	4640      	mov	r0, r8
10000e02:	4649      	mov	r1, r9
10000e04:	f003 fa42 	bl	1000428c <__aeabi_dcmplt>
10000e08:	2800      	cmp	r0, #0
10000e0a:	d036      	beq.n	10000e7a <_etoa+0x292>
      if ((int)prec > expval) {
10000e0c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e0e:	42b3      	cmp	r3, r6
10000e10:	dd25      	ble.n	10000e5e <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000e12:	1b9e      	subs	r6, r3, r6
10000e14:	1e73      	subs	r3, r6, #1
10000e16:	931e      	str	r3, [sp, #120]	; 0x78
10000e18:	e023      	b.n	10000e62 <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000e1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e1c:	9304      	str	r3, [sp, #16]
10000e1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e20:	9303      	str	r3, [sp, #12]
10000e22:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e24:	9302      	str	r3, [sp, #8]
10000e26:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000e2a:	ed8d 7b00 	vstr	d7, [sp]
10000e2e:	462b      	mov	r3, r5
10000e30:	465a      	mov	r2, fp
10000e32:	4621      	mov	r1, r4
10000e34:	4650      	mov	r0, sl
10000e36:	f000 f8cf 	bl	10000fd8 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000e3a:	b011      	add	sp, #68	; 0x44
10000e3c:	ecbd 8b02 	vpop	{d8}
10000e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000e44:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000ed0 <_etoa+0x2e8>
10000e48:	ed8d 7b06 	vstr	d7, [sp, #24]
10000e4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000e4e:	9306      	str	r3, [sp, #24]
10000e50:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000e52:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000e56:	9307      	str	r3, [sp, #28]
10000e58:	e6fa      	b.n	10000c50 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e5a:	2705      	movs	r7, #5
10000e5c:	e7be      	b.n	10000ddc <_etoa+0x1f4>
        prec = 0;
10000e5e:	2300      	movs	r3, #0
10000e60:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000e62:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e64:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000e68:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000e6a:	2700      	movs	r7, #0
      expval   = 0;
10000e6c:	463e      	mov	r6, r7
  if (width > minwidth) {
10000e6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e70:	429f      	cmp	r7, r3
10000e72:	d23f      	bcs.n	10000ef4 <_etoa+0x30c>
    fwidth -= minwidth;
10000e74:	eba3 0807 	sub.w	r8, r3, r7
10000e78:	e03e      	b.n	10000ef8 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000e7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e7c:	2b00      	cmp	r3, #0
10000e7e:	d0f6      	beq.n	10000e6e <_etoa+0x286>
10000e80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000e82:	2b00      	cmp	r3, #0
10000e84:	d0f3      	beq.n	10000e6e <_etoa+0x286>
        --prec;
10000e86:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e88:	3b01      	subs	r3, #1
10000e8a:	931e      	str	r3, [sp, #120]	; 0x78
10000e8c:	e7ef      	b.n	10000e6e <_etoa+0x286>
10000e8e:	bf00      	nop
10000e90:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000e94:	3fd34413 	svccc	0x00d34413
10000e98:	8b60c8b3 	blhi	1183316c <__copy_table_end__+0x182d4e0>
10000e9c:	3fc68a28 	svccc	0x00c68a28
10000ea0:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000ea4:	3fd287a7 	svccc	0x00d287a7
10000ea8:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000eac:	400a934f 	andmi	r9, sl, pc, asr #6
10000eb0:	bbb55516 	bllt	ed56310 <__RAM_SIZE+0xec56310>
10000eb4:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000eb8:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000ebc:	3fe62e42 	svccc	0x00e62e42
10000ec0:	eb1c432d 	bl	10711b7c <__copy_table_end__+0x70bef0>
10000ec4:	3f1a36e2 	svccc	0x001a36e2
10000ec8:	00000000 	andeq	r0, r0, r0
10000ecc:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000ed8:	7fefffff 	svcvc	0x00efffff
10000edc:	3ff80000 	svccc	0x00f80000
10000ee0:	3fe00000 	svccc	0x00e00000
10000ee4:	402c0000 	eormi	r0, ip, r0
10000ee8:	40240000 	eormi	r0, r4, r0
10000eec:	40180000 	andsmi	r0, r8, r0
10000ef0:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000ef4:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000ef8:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000efa:	f013 0902 	ands.w	r9, r3, #2
10000efe:	d002      	beq.n	10000f06 <_etoa+0x31e>
10000f00:	b10f      	cbz	r7, 10000f06 <_etoa+0x31e>
    fwidth = 0U;
10000f02:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000f06:	b13e      	cbz	r6, 10000f18 <_etoa+0x330>
    value /= conv.F;
10000f08:	ec53 2b18 	vmov	r2, r3, d8
10000f0c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000f10:	f003 f874 	bl	10003ffc <__aeabi_ddiv>
10000f14:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000f18:	2200      	movs	r2, #0
10000f1a:	2300      	movs	r3, #0
10000f1c:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000f20:	f003 f9b4 	bl	1000428c <__aeabi_dcmplt>
10000f24:	2800      	cmp	r0, #0
10000f26:	d13d      	bne.n	10000fa4 <_etoa+0x3bc>
10000f28:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f2a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10000f2e:	9304      	str	r3, [sp, #16]
10000f30:	f8cd 800c 	str.w	r8, [sp, #12]
10000f34:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f36:	9302      	str	r3, [sp, #8]
10000f38:	ed9d 7b06 	vldr	d7, [sp, #24]
10000f3c:	ed8d 7b00 	vstr	d7, [sp]
10000f40:	462b      	mov	r3, r5
10000f42:	465a      	mov	r2, fp
10000f44:	4621      	mov	r1, r4
10000f46:	4650      	mov	r0, sl
10000f48:	f000 f846 	bl	10000fd8 <_ftoa>
  if (minwidth) {
10000f4c:	2f00      	cmp	r7, #0
10000f4e:	f43f af74 	beq.w	10000e3a <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000f52:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f54:	f013 0f20 	tst.w	r3, #32
10000f58:	d02c      	beq.n	10000fb4 <_etoa+0x3cc>
10000f5a:	f04f 0c45 	mov.w	ip, #69	; 0x45
10000f5e:	f100 0801 	add.w	r8, r0, #1
10000f62:	462b      	mov	r3, r5
10000f64:	4602      	mov	r2, r0
10000f66:	4621      	mov	r1, r4
10000f68:	4660      	mov	r0, ip
10000f6a:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10000f6c:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10000f70:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10000f74:	2205      	movs	r2, #5
10000f76:	9205      	str	r2, [sp, #20]
10000f78:	3f01      	subs	r7, #1
10000f7a:	9704      	str	r7, [sp, #16]
10000f7c:	2200      	movs	r2, #0
10000f7e:	9203      	str	r2, [sp, #12]
10000f80:	220a      	movs	r2, #10
10000f82:	9202      	str	r2, [sp, #8]
10000f84:	0ff0      	lsrs	r0, r6, #31
10000f86:	9001      	str	r0, [sp, #4]
10000f88:	9300      	str	r3, [sp, #0]
10000f8a:	462b      	mov	r3, r5
10000f8c:	4642      	mov	r2, r8
10000f8e:	4621      	mov	r1, r4
10000f90:	4650      	mov	r0, sl
10000f92:	f7ff fd7b 	bl	10000a8c <_ntoa_long>
    if (flags & FLAGS_LEFT) {
10000f96:	f1b9 0f00 	cmp.w	r9, #0
10000f9a:	f43f af4e 	beq.w	10000e3a <_etoa+0x252>
10000f9e:	4602      	mov	r2, r0
10000fa0:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
10000fa2:	e010      	b.n	10000fc6 <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000fa4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000fa8:	4602      	mov	r2, r0
10000faa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10000fae:	e9cd 2306 	strd	r2, r3, [sp, #24]
10000fb2:	e7b9      	b.n	10000f28 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000fb4:	f04f 0c65 	mov.w	ip, #101	; 0x65
10000fb8:	e7d1      	b.n	10000f5e <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10000fba:	1c56      	adds	r6, r2, #1
10000fbc:	462b      	mov	r3, r5
10000fbe:	4621      	mov	r1, r4
10000fc0:	2020      	movs	r0, #32
10000fc2:	47d0      	blx	sl
10000fc4:	4632      	mov	r2, r6
10000fc6:	eba2 030b 	sub.w	r3, r2, fp
10000fca:	42bb      	cmp	r3, r7
10000fcc:	d3f5      	bcc.n	10000fba <_etoa+0x3d2>
10000fce:	4610      	mov	r0, r2
10000fd0:	e733      	b.n	10000e3a <_etoa+0x252>
10000fd2:	bf00      	nop
10000fd4:	0000      	movs	r0, r0
	...

10000fd8 <_ftoa>:
{
10000fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000fdc:	ed2d 8b02 	vpush	{d8}
10000fe0:	b095      	sub	sp, #84	; 0x54
10000fe2:	9007      	str	r0, [sp, #28]
10000fe4:	910a      	str	r1, [sp, #40]	; 0x28
10000fe6:	4692      	mov	sl, r2
10000fe8:	469b      	mov	fp, r3
10000fea:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10000fee:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10000ff0:	4642      	mov	r2, r8
10000ff2:	464b      	mov	r3, r9
10000ff4:	4640      	mov	r0, r8
10000ff6:	4649      	mov	r1, r9
10000ff8:	f003 f93e 	bl	10004278 <__aeabi_dcmpeq>
10000ffc:	2800      	cmp	r0, #0
10000ffe:	d040      	beq.n	10001082 <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001000:	f04f 32ff 	mov.w	r2, #4294967295
10001004:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001008:	4640      	mov	r0, r8
1000100a:	4649      	mov	r1, r9
1000100c:	f003 f93e 	bl	1000428c <__aeabi_dcmplt>
10001010:	2800      	cmp	r0, #0
10001012:	d145      	bne.n	100010a0 <_ftoa+0xc8>
  if (value > DBL_MAX)
10001014:	f04f 32ff 	mov.w	r2, #4294967295
10001018:	4b9f      	ldr	r3, [pc, #636]	; (10001298 <_ftoa+0x2c0>)
1000101a:	4640      	mov	r0, r8
1000101c:	4649      	mov	r1, r9
1000101e:	f003 f953 	bl	100042c8 <__aeabi_dcmpgt>
10001022:	2800      	cmp	r0, #0
10001024:	d14b      	bne.n	100010be <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
10001026:	a398      	add	r3, pc, #608	; (adr r3, 10001288 <_ftoa+0x2b0>)
10001028:	e9d3 2300 	ldrd	r2, r3, [r3]
1000102c:	4640      	mov	r0, r8
1000102e:	4649      	mov	r1, r9
10001030:	f003 f94a 	bl	100042c8 <__aeabi_dcmpgt>
10001034:	2800      	cmp	r0, #0
10001036:	d15a      	bne.n	100010ee <_ftoa+0x116>
10001038:	a395      	add	r3, pc, #596	; (adr r3, 10001290 <_ftoa+0x2b8>)
1000103a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000103e:	4640      	mov	r0, r8
10001040:	4649      	mov	r1, r9
10001042:	f003 f923 	bl	1000428c <__aeabi_dcmplt>
10001046:	2800      	cmp	r0, #0
10001048:	d151      	bne.n	100010ee <_ftoa+0x116>
  if (value < 0) {
1000104a:	2200      	movs	r2, #0
1000104c:	2300      	movs	r3, #0
1000104e:	4640      	mov	r0, r8
10001050:	4649      	mov	r1, r9
10001052:	f003 f91b 	bl	1000428c <__aeabi_dcmplt>
10001056:	2800      	cmp	r0, #0
10001058:	d157      	bne.n	1000110a <_ftoa+0x132>
  bool negative = false;
1000105a:	2300      	movs	r3, #0
1000105c:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
1000105e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001060:	f413 6f80 	tst.w	r3, #1024	; 0x400
10001064:	d05c      	beq.n	10001120 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001066:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001068:	2c1f      	cmp	r4, #31
1000106a:	d85b      	bhi.n	10001124 <_ftoa+0x14c>
1000106c:	2d09      	cmp	r5, #9
1000106e:	d959      	bls.n	10001124 <_ftoa+0x14c>
    buf[len++] = '0';
10001070:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001074:	446b      	add	r3, sp
10001076:	2230      	movs	r2, #48	; 0x30
10001078:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
1000107c:	3d01      	subs	r5, #1
    buf[len++] = '0';
1000107e:	3401      	adds	r4, #1
10001080:	e7f2      	b.n	10001068 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
10001082:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001084:	9303      	str	r3, [sp, #12]
10001086:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001088:	9302      	str	r3, [sp, #8]
1000108a:	2303      	movs	r3, #3
1000108c:	9301      	str	r3, [sp, #4]
1000108e:	4b83      	ldr	r3, [pc, #524]	; (1000129c <_ftoa+0x2c4>)
10001090:	9300      	str	r3, [sp, #0]
10001092:	465b      	mov	r3, fp
10001094:	4652      	mov	r2, sl
10001096:	990a      	ldr	r1, [sp, #40]	; 0x28
10001098:	9807      	ldr	r0, [sp, #28]
1000109a:	f7ff fc1c 	bl	100008d6 <_out_rev>
1000109e:	e12c      	b.n	100012fa <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100010a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010a2:	9303      	str	r3, [sp, #12]
100010a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010a6:	9302      	str	r3, [sp, #8]
100010a8:	2304      	movs	r3, #4
100010aa:	9301      	str	r3, [sp, #4]
100010ac:	4b7c      	ldr	r3, [pc, #496]	; (100012a0 <_ftoa+0x2c8>)
100010ae:	9300      	str	r3, [sp, #0]
100010b0:	465b      	mov	r3, fp
100010b2:	4652      	mov	r2, sl
100010b4:	990a      	ldr	r1, [sp, #40]	; 0x28
100010b6:	9807      	ldr	r0, [sp, #28]
100010b8:	f7ff fc0d 	bl	100008d6 <_out_rev>
100010bc:	e11d      	b.n	100012fa <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100010be:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010c0:	f013 0304 	ands.w	r3, r3, #4
100010c4:	d00f      	beq.n	100010e6 <_ftoa+0x10e>
100010c6:	4a77      	ldr	r2, [pc, #476]	; (100012a4 <_ftoa+0x2cc>)
100010c8:	b17b      	cbz	r3, 100010ea <_ftoa+0x112>
100010ca:	2304      	movs	r3, #4
100010cc:	9924      	ldr	r1, [sp, #144]	; 0x90
100010ce:	9103      	str	r1, [sp, #12]
100010d0:	9923      	ldr	r1, [sp, #140]	; 0x8c
100010d2:	9102      	str	r1, [sp, #8]
100010d4:	9301      	str	r3, [sp, #4]
100010d6:	9200      	str	r2, [sp, #0]
100010d8:	465b      	mov	r3, fp
100010da:	4652      	mov	r2, sl
100010dc:	990a      	ldr	r1, [sp, #40]	; 0x28
100010de:	9807      	ldr	r0, [sp, #28]
100010e0:	f7ff fbf9 	bl	100008d6 <_out_rev>
100010e4:	e109      	b.n	100012fa <_ftoa+0x322>
100010e6:	4a70      	ldr	r2, [pc, #448]	; (100012a8 <_ftoa+0x2d0>)
100010e8:	e7ee      	b.n	100010c8 <_ftoa+0xf0>
100010ea:	2303      	movs	r3, #3
100010ec:	e7ee      	b.n	100010cc <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
100010ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010f0:	9304      	str	r3, [sp, #16]
100010f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010f4:	9303      	str	r3, [sp, #12]
100010f6:	9502      	str	r5, [sp, #8]
100010f8:	e9cd 8900 	strd	r8, r9, [sp]
100010fc:	465b      	mov	r3, fp
100010fe:	4652      	mov	r2, sl
10001100:	990a      	ldr	r1, [sp, #40]	; 0x28
10001102:	9807      	ldr	r0, [sp, #28]
10001104:	f7ff fd70 	bl	10000be8 <_etoa>
10001108:	e0f7      	b.n	100012fa <_ftoa+0x322>
    value = 0 - value;
1000110a:	4642      	mov	r2, r8
1000110c:	464b      	mov	r3, r9
1000110e:	2000      	movs	r0, #0
10001110:	2100      	movs	r1, #0
10001112:	f002 fc91 	bl	10003a38 <__aeabi_dsub>
10001116:	4680      	mov	r8, r0
10001118:	4689      	mov	r9, r1
    negative = true;
1000111a:	2301      	movs	r3, #1
1000111c:	930b      	str	r3, [sp, #44]	; 0x2c
1000111e:	e79e      	b.n	1000105e <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001120:	2506      	movs	r5, #6
10001122:	e7a0      	b.n	10001066 <_ftoa+0x8e>
  int whole = (int)value;
10001124:	4640      	mov	r0, r8
10001126:	4649      	mov	r1, r9
10001128:	f003 f8d8 	bl	100042dc <__aeabi_d2iz>
1000112c:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
1000112e:	f002 fdd1 	bl	10003cd4 <__aeabi_i2d>
10001132:	4602      	mov	r2, r0
10001134:	460b      	mov	r3, r1
10001136:	4640      	mov	r0, r8
10001138:	4649      	mov	r1, r9
1000113a:	f002 fc7d 	bl	10003a38 <__aeabi_dsub>
1000113e:	4b5b      	ldr	r3, [pc, #364]	; (100012ac <_ftoa+0x2d4>)
10001140:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
10001144:	ed93 8b00 	vldr	d8, [r3]
10001148:	ec53 2b18 	vmov	r2, r3, d8
1000114c:	f002 fe2c 	bl	10003da8 <__aeabi_dmul>
10001150:	4602      	mov	r2, r0
10001152:	460b      	mov	r3, r1
10001154:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001158:	f003 f8e8 	bl	1000432c <__aeabi_d2uiz>
1000115c:	4607      	mov	r7, r0
  diff = tmp - frac;
1000115e:	f002 fda9 	bl	10003cb4 <__aeabi_ui2d>
10001162:	4602      	mov	r2, r0
10001164:	460b      	mov	r3, r1
10001166:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1000116a:	f002 fc65 	bl	10003a38 <__aeabi_dsub>
1000116e:	4602      	mov	r2, r0
10001170:	460b      	mov	r3, r1
10001172:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
10001176:	2200      	movs	r2, #0
10001178:	4b4d      	ldr	r3, [pc, #308]	; (100012b0 <_ftoa+0x2d8>)
1000117a:	f003 f8a5 	bl	100042c8 <__aeabi_dcmpgt>
1000117e:	b350      	cbz	r0, 100011d6 <_ftoa+0x1fe>
    ++frac;
10001180:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
10001182:	4638      	mov	r0, r7
10001184:	f002 fd96 	bl	10003cb4 <__aeabi_ui2d>
10001188:	4602      	mov	r2, r0
1000118a:	460b      	mov	r3, r1
1000118c:	ec51 0b18 	vmov	r0, r1, d8
10001190:	f003 f886 	bl	100042a0 <__aeabi_dcmple>
10001194:	b108      	cbz	r0, 1000119a <_ftoa+0x1c2>
      ++whole;
10001196:	3601      	adds	r6, #1
      frac = 0;
10001198:	2700      	movs	r7, #0
  if (prec == 0U) {
1000119a:	bb55      	cbnz	r5, 100011f2 <_ftoa+0x21a>
    diff = value - (double)whole;
1000119c:	4630      	mov	r0, r6
1000119e:	f002 fd99 	bl	10003cd4 <__aeabi_i2d>
100011a2:	4602      	mov	r2, r0
100011a4:	460b      	mov	r3, r1
100011a6:	4640      	mov	r0, r8
100011a8:	4649      	mov	r1, r9
100011aa:	f002 fc45 	bl	10003a38 <__aeabi_dsub>
100011ae:	4607      	mov	r7, r0
100011b0:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100011b2:	2200      	movs	r2, #0
100011b4:	4b3e      	ldr	r3, [pc, #248]	; (100012b0 <_ftoa+0x2d8>)
100011b6:	f003 f869 	bl	1000428c <__aeabi_dcmplt>
100011ba:	b138      	cbz	r0, 100011cc <_ftoa+0x1f4>
100011bc:	2200      	movs	r2, #0
100011be:	4b3c      	ldr	r3, [pc, #240]	; (100012b0 <_ftoa+0x2d8>)
100011c0:	4638      	mov	r0, r7
100011c2:	4641      	mov	r1, r8
100011c4:	f003 f880 	bl	100042c8 <__aeabi_dcmpgt>
100011c8:	2800      	cmp	r0, #0
100011ca:	d042      	beq.n	10001252 <_ftoa+0x27a>
100011cc:	f016 0f01 	tst.w	r6, #1
100011d0:	d03f      	beq.n	10001252 <_ftoa+0x27a>
      ++whole;
100011d2:	3601      	adds	r6, #1
100011d4:	e03d      	b.n	10001252 <_ftoa+0x27a>
  else if (diff < 0.5) {
100011d6:	2200      	movs	r2, #0
100011d8:	4b35      	ldr	r3, [pc, #212]	; (100012b0 <_ftoa+0x2d8>)
100011da:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100011de:	f003 f855 	bl	1000428c <__aeabi_dcmplt>
100011e2:	2800      	cmp	r0, #0
100011e4:	d1d9      	bne.n	1000119a <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
100011e6:	b117      	cbz	r7, 100011ee <_ftoa+0x216>
100011e8:	f017 0f01 	tst.w	r7, #1
100011ec:	d0d5      	beq.n	1000119a <_ftoa+0x1c2>
    ++frac;
100011ee:	3701      	adds	r7, #1
100011f0:	e7d3      	b.n	1000119a <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
100011f2:	2c1f      	cmp	r4, #31
100011f4:	d817      	bhi.n	10001226 <_ftoa+0x24e>
      --count;
100011f6:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
100011f8:	4b2e      	ldr	r3, [pc, #184]	; (100012b4 <_ftoa+0x2dc>)
100011fa:	fba3 2307 	umull	r2, r3, r3, r7
100011fe:	08db      	lsrs	r3, r3, #3
10001200:	4619      	mov	r1, r3
10001202:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001206:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
1000120a:	1c62      	adds	r2, r4, #1
1000120c:	3330      	adds	r3, #48	; 0x30
1000120e:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001212:	eb0d 0400 	add.w	r4, sp, r0
10001216:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
1000121a:	2f09      	cmp	r7, #9
1000121c:	d902      	bls.n	10001224 <_ftoa+0x24c>
1000121e:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001220:	4614      	mov	r4, r2
10001222:	e7e6      	b.n	100011f2 <_ftoa+0x21a>
10001224:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001226:	2c1f      	cmp	r4, #31
10001228:	d80a      	bhi.n	10001240 <_ftoa+0x268>
1000122a:	1e6b      	subs	r3, r5, #1
1000122c:	b145      	cbz	r5, 10001240 <_ftoa+0x268>
      buf[len++] = '0';
1000122e:	f104 0250 	add.w	r2, r4, #80	; 0x50
10001232:	446a      	add	r2, sp
10001234:	2130      	movs	r1, #48	; 0x30
10001236:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000123a:	461d      	mov	r5, r3
      buf[len++] = '0';
1000123c:	3401      	adds	r4, #1
1000123e:	e7f2      	b.n	10001226 <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001240:	2c1f      	cmp	r4, #31
10001242:	d806      	bhi.n	10001252 <_ftoa+0x27a>
      buf[len++] = '.';
10001244:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001248:	446b      	add	r3, sp
1000124a:	222e      	movs	r2, #46	; 0x2e
1000124c:	f803 2c20 	strb.w	r2, [r3, #-32]
10001250:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001252:	2c1f      	cmp	r4, #31
10001254:	d833      	bhi.n	100012be <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
10001256:	4a18      	ldr	r2, [pc, #96]	; (100012b8 <_ftoa+0x2e0>)
10001258:	fb82 3206 	smull	r3, r2, r2, r6
1000125c:	17f3      	asrs	r3, r6, #31
1000125e:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
10001262:	461a      	mov	r2, r3
10001264:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001268:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
1000126c:	1c61      	adds	r1, r4, #1
1000126e:	3330      	adds	r3, #48	; 0x30
10001270:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001274:	eb0d 0400 	add.w	r4, sp, r0
10001278:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
1000127c:	4616      	mov	r6, r2
1000127e:	b1ea      	cbz	r2, 100012bc <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001280:	460c      	mov	r4, r1
10001282:	e7e6      	b.n	10001252 <_ftoa+0x27a>
10001284:	f3af 8000 	nop.w
10001288:	00000000 	andeq	r0, r0, r0
1000128c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10001290:	00000000 	andeq	r0, r0, r0
10001294:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
10001298:	7fefffff 	svcvc	0x00efffff
1000129c:	10005714 	andne	r5, r0, r4, lsl r7
100012a0:	10005718 	andne	r5, r0, r8, lsl r7
100012a4:	1000570c 	andne	r5, r0, ip, lsl #14
100012a8:	10005708 	andne	r5, r0, r8, lsl #14
100012ac:	10005720 	andne	r5, r0, r0, lsr #14
100012b0:	3fe00000 	svccc	0x00e00000
100012b4:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100012b8:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100012bc:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100012be:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012c0:	f003 0303 	and.w	r3, r3, #3
100012c4:	2b01      	cmp	r3, #1
100012c6:	d01d      	beq.n	10001304 <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
100012c8:	2c1f      	cmp	r4, #31
100012ca:	d809      	bhi.n	100012e0 <_ftoa+0x308>
    if (negative) {
100012cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100012ce:	2b00      	cmp	r3, #0
100012d0:	d035      	beq.n	1000133e <_ftoa+0x366>
      buf[len++] = '-';
100012d2:	f104 0350 	add.w	r3, r4, #80	; 0x50
100012d6:	446b      	add	r3, sp
100012d8:	222d      	movs	r2, #45	; 0x2d
100012da:	f803 2c20 	strb.w	r2, [r3, #-32]
100012de:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100012e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012e2:	9303      	str	r3, [sp, #12]
100012e4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100012e6:	9302      	str	r3, [sp, #8]
100012e8:	9401      	str	r4, [sp, #4]
100012ea:	ab0c      	add	r3, sp, #48	; 0x30
100012ec:	9300      	str	r3, [sp, #0]
100012ee:	465b      	mov	r3, fp
100012f0:	4652      	mov	r2, sl
100012f2:	990a      	ldr	r1, [sp, #40]	; 0x28
100012f4:	9807      	ldr	r0, [sp, #28]
100012f6:	f7ff faee 	bl	100008d6 <_out_rev>
}
100012fa:	b015      	add	sp, #84	; 0x54
100012fc:	ecbd 8b02 	vpop	{d8}
10001300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10001304:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001306:	b1b3      	cbz	r3, 10001336 <_ftoa+0x35e>
10001308:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000130a:	b91b      	cbnz	r3, 10001314 <_ftoa+0x33c>
1000130c:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000130e:	f013 0f0c 	tst.w	r3, #12
10001312:	d012      	beq.n	1000133a <_ftoa+0x362>
      width--;
10001314:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001316:	3b01      	subs	r3, #1
10001318:	9323      	str	r3, [sp, #140]	; 0x8c
1000131a:	4619      	mov	r1, r3
1000131c:	e006      	b.n	1000132c <_ftoa+0x354>
      buf[len++] = '0';
1000131e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001322:	446b      	add	r3, sp
10001324:	2230      	movs	r2, #48	; 0x30
10001326:	f803 2c20 	strb.w	r2, [r3, #-32]
1000132a:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
1000132c:	428c      	cmp	r4, r1
1000132e:	d2cb      	bcs.n	100012c8 <_ftoa+0x2f0>
10001330:	2c1f      	cmp	r4, #31
10001332:	d9f4      	bls.n	1000131e <_ftoa+0x346>
10001334:	e7c8      	b.n	100012c8 <_ftoa+0x2f0>
10001336:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001338:	e7f8      	b.n	1000132c <_ftoa+0x354>
1000133a:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000133c:	e7f6      	b.n	1000132c <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
1000133e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001340:	f013 0f04 	tst.w	r3, #4
10001344:	d007      	beq.n	10001356 <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
10001346:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000134a:	446b      	add	r3, sp
1000134c:	222b      	movs	r2, #43	; 0x2b
1000134e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001352:	3401      	adds	r4, #1
10001354:	e7c4      	b.n	100012e0 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
10001356:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001358:	f013 0f08 	tst.w	r3, #8
1000135c:	d0c0      	beq.n	100012e0 <_ftoa+0x308>
      buf[len++] = ' ';
1000135e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001362:	446b      	add	r3, sp
10001364:	2220      	movs	r2, #32
10001366:	f803 2c20 	strb.w	r2, [r3, #-32]
1000136a:	3401      	adds	r4, #1
1000136c:	e7b8      	b.n	100012e0 <_ftoa+0x308>
1000136e:	bf00      	nop

10001370 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001374:	b08f      	sub	sp, #60	; 0x3c
10001376:	4607      	mov	r7, r0
10001378:	4616      	mov	r6, r2
1000137a:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
1000137c:	4688      	mov	r8, r1
1000137e:	2900      	cmp	r1, #0
10001380:	f000 8324 	beq.w	100019cc <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
10001384:	2400      	movs	r4, #0
  while (*format)
10001386:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001388:	7818      	ldrb	r0, [r3, #0]
1000138a:	2800      	cmp	r0, #0
1000138c:	f000 8320 	beq.w	100019d0 <_vsnprintf+0x660>
    if (*format != '%') {
10001390:	2825      	cmp	r0, #37	; 0x25
10001392:	d009      	beq.n	100013a8 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
10001394:	1c65      	adds	r5, r4, #1
10001396:	4633      	mov	r3, r6
10001398:	4622      	mov	r2, r4
1000139a:	4641      	mov	r1, r8
1000139c:	47b8      	blx	r7
      format++;
1000139e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013a0:	3301      	adds	r3, #1
100013a2:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100013a4:	462c      	mov	r4, r5
      continue;
100013a6:	e7ee      	b.n	10001386 <_vsnprintf+0x16>
      format++;
100013a8:	3301      	adds	r3, #1
100013aa:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100013ac:	2500      	movs	r5, #0
      switch (*format) {
100013ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013b0:	7819      	ldrb	r1, [r3, #0]
100013b2:	f1a1 0220 	sub.w	r2, r1, #32
100013b6:	2a10      	cmp	r2, #16
100013b8:	d80a      	bhi.n	100013d0 <_vsnprintf+0x60>
100013ba:	e8df f002 	tbb	[pc, r2]
100013be:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100013c2:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100013c6:	33090909 	movwcc	r0, #39177	; 0x9909
100013ca:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
100013ce:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
100013d2:	0330      	lsls	r0, r6, #12
100013d4:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
100013d6:	2b09      	cmp	r3, #9
100013d8:	d933      	bls.n	10001442 <_vsnprintf+0xd2>
    else if (*format == '*') {
100013da:	292a      	cmp	r1, #42	; 0x2a
100013dc:	d036      	beq.n	1000144c <_vsnprintf+0xdc>
    width = 0U;
100013de:	2300      	movs	r3, #0
100013e0:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
100013e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013e4:	781a      	ldrb	r2, [r3, #0]
100013e6:	2a2e      	cmp	r2, #46	; 0x2e
100013e8:	d040      	beq.n	1000146c <_vsnprintf+0xfc>
    precision = 0U;
100013ea:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
100013ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
100013f0:	7813      	ldrb	r3, [r2, #0]
100013f2:	3b68      	subs	r3, #104	; 0x68
100013f4:	2b12      	cmp	r3, #18
100013f6:	d877      	bhi.n	100014e8 <_vsnprintf+0x178>
100013f8:	e8df f003 	tbb	[pc, r3]
100013fc:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001400:	76767656 			; <UNDEFINED> instruction: 0x76767656
10001404:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001408:	76767672 			; <UNDEFINED> instruction: 0x76767672
1000140c:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001410:	f045 0501 	orr.w	r5, r5, #1
10001414:	3301      	adds	r3, #1
10001416:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001418:	e7c9      	b.n	100013ae <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
1000141a:	f045 0502 	orr.w	r5, r5, #2
1000141e:	3301      	adds	r3, #1
10001420:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001422:	e7c4      	b.n	100013ae <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
10001424:	f045 0504 	orr.w	r5, r5, #4
10001428:	3301      	adds	r3, #1
1000142a:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000142c:	e7bf      	b.n	100013ae <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
1000142e:	f045 0508 	orr.w	r5, r5, #8
10001432:	3301      	adds	r3, #1
10001434:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001436:	e7ba      	b.n	100013ae <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001438:	f045 0510 	orr.w	r5, r5, #16
1000143c:	3301      	adds	r3, #1
1000143e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001440:	e7b5      	b.n	100013ae <_vsnprintf+0x3e>
      width = _atoi(&format);
10001442:	a80d      	add	r0, sp, #52	; 0x34
10001444:	f7ff fa35 	bl	100008b2 <_atoi>
10001448:	900a      	str	r0, [sp, #40]	; 0x28
1000144a:	e7ca      	b.n	100013e2 <_vsnprintf+0x72>
      const int w = va_arg(va, int);
1000144c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000144e:	1d1a      	adds	r2, r3, #4
10001450:	9218      	str	r2, [sp, #96]	; 0x60
10001452:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
10001454:	2800      	cmp	r0, #0
10001456:	db04      	blt.n	10001462 <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001458:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
1000145a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000145c:	3301      	adds	r3, #1
1000145e:	930d      	str	r3, [sp, #52]	; 0x34
10001460:	e7bf      	b.n	100013e2 <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
10001462:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
10001466:	4243      	negs	r3, r0
10001468:	930a      	str	r3, [sp, #40]	; 0x28
1000146a:	e7f6      	b.n	1000145a <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
1000146c:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001470:	1c5a      	adds	r2, r3, #1
10001472:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
10001474:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
10001476:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
1000147a:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
1000147c:	2b09      	cmp	r3, #9
1000147e:	d904      	bls.n	1000148a <_vsnprintf+0x11a>
      else if (*format == '*') {
10001480:	2a2a      	cmp	r2, #42	; 0x2a
10001482:	d007      	beq.n	10001494 <_vsnprintf+0x124>
    precision = 0U;
10001484:	f04f 0b00 	mov.w	fp, #0
10001488:	e7b1      	b.n	100013ee <_vsnprintf+0x7e>
        precision = _atoi(&format);
1000148a:	a80d      	add	r0, sp, #52	; 0x34
1000148c:	f7ff fa11 	bl	100008b2 <_atoi>
10001490:	4683      	mov	fp, r0
10001492:	e7ac      	b.n	100013ee <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
10001494:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001496:	1d1a      	adds	r2, r3, #4
10001498:	9218      	str	r2, [sp, #96]	; 0x60
1000149a:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
1000149c:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100014a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014a2:	3301      	adds	r3, #1
100014a4:	930d      	str	r3, [sp, #52]	; 0x34
100014a6:	e7a2      	b.n	100013ee <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100014a8:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100014ac:	1c53      	adds	r3, r2, #1
100014ae:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100014b0:	7852      	ldrb	r2, [r2, #1]
100014b2:	2a6c      	cmp	r2, #108	; 0x6c
100014b4:	d001      	beq.n	100014ba <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100014b6:	460d      	mov	r5, r1
100014b8:	e016      	b.n	100014e8 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100014ba:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100014be:	3301      	adds	r3, #1
100014c0:	930d      	str	r3, [sp, #52]	; 0x34
100014c2:	e011      	b.n	100014e8 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100014c4:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
100014c8:	1c53      	adds	r3, r2, #1
100014ca:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
100014cc:	7852      	ldrb	r2, [r2, #1]
100014ce:	2a68      	cmp	r2, #104	; 0x68
100014d0:	d001      	beq.n	100014d6 <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
100014d2:	460d      	mov	r5, r1
100014d4:	e008      	b.n	100014e8 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
100014d6:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
100014da:	3301      	adds	r3, #1
100014dc:	930d      	str	r3, [sp, #52]	; 0x34
100014de:	e003      	b.n	100014e8 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100014e0:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100014e4:	3201      	adds	r2, #1
100014e6:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
100014e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014ea:	7818      	ldrb	r0, [r3, #0]
100014ec:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
100014f0:	2b53      	cmp	r3, #83	; 0x53
100014f2:	f200 8261 	bhi.w	100019b8 <_vsnprintf+0x648>
100014f6:	e8df f013 	tbh	[pc, r3, lsl #1]
100014fa:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
100014fe:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001502:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001506:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000150a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000150e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001512:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001516:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000151a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000151e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001522:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001526:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000152a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000152e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001532:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001536:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153a:	01540174 	cmpeq	r4, r4, ror r1
1000153e:	025f0174 	subseq	r0, pc, #116, 2
10001542:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001546:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001552:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001556:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155e:	005e025f 	subseq	r0, lr, pc, asr r2
10001562:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001566:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001572:	005e025f 	subseq	r0, lr, pc, asr r2
10001576:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
1000157a:	01540174 	cmpeq	r4, r4, ror r1
1000157e:	025f0174 	subseq	r0, pc, #116, 2
10001582:	025f005e 	subseq	r0, pc, #94	; 0x5e
10001586:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000158a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000158e:	0239005e 	eorseq	r0, r9, #94	; 0x5e
10001592:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001596:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
1000159a:	025f005e 	subseq	r0, pc, #94	; 0x5e
1000159e:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015a2:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100015a6:	3201      	adds	r2, #1
100015a8:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015aa:	e79d      	b.n	100014e8 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015ac:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015b0:	3201      	adds	r2, #1
100015b2:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015b4:	e798      	b.n	100014e8 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100015b6:	2878      	cmp	r0, #120	; 0x78
100015b8:	d009      	beq.n	100015ce <_vsnprintf+0x25e>
100015ba:	2858      	cmp	r0, #88	; 0x58
100015bc:	d03a      	beq.n	10001634 <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100015be:	286f      	cmp	r0, #111	; 0x6f
100015c0:	d03a      	beq.n	10001638 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100015c2:	2862      	cmp	r0, #98	; 0x62
100015c4:	d03a      	beq.n	1000163c <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100015c6:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
100015ca:	230a      	movs	r3, #10
100015cc:	e000      	b.n	100015d0 <_vsnprintf+0x260>
          base = 16U;
100015ce:	2310      	movs	r3, #16
        if (*format == 'X') {
100015d0:	2858      	cmp	r0, #88	; 0x58
100015d2:	d035      	beq.n	10001640 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
100015d4:	2869      	cmp	r0, #105	; 0x69
100015d6:	d003      	beq.n	100015e0 <_vsnprintf+0x270>
100015d8:	2864      	cmp	r0, #100	; 0x64
100015da:	d001      	beq.n	100015e0 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
100015dc:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
100015e0:	f415 6f80 	tst.w	r5, #1024	; 0x400
100015e4:	d001      	beq.n	100015ea <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
100015e6:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
100015ea:	2869      	cmp	r0, #105	; 0x69
100015ec:	d02b      	beq.n	10001646 <_vsnprintf+0x2d6>
100015ee:	2864      	cmp	r0, #100	; 0x64
100015f0:	d029      	beq.n	10001646 <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
100015f2:	f415 7f00 	tst.w	r5, #512	; 0x200
100015f6:	f040 8096 	bne.w	10001726 <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
100015fa:	f415 7f80 	tst.w	r5, #256	; 0x100
100015fe:	f040 80ae 	bne.w	1000175e <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001602:	f015 0f40 	tst.w	r5, #64	; 0x40
10001606:	f000 80bf 	beq.w	10001788 <_vsnprintf+0x418>
1000160a:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000160c:	1d11      	adds	r1, r2, #4
1000160e:	9118      	str	r1, [sp, #96]	; 0x60
10001610:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
10001612:	9505      	str	r5, [sp, #20]
10001614:	990a      	ldr	r1, [sp, #40]	; 0x28
10001616:	9104      	str	r1, [sp, #16]
10001618:	f8cd b00c 	str.w	fp, [sp, #12]
1000161c:	9302      	str	r3, [sp, #8]
1000161e:	2300      	movs	r3, #0
10001620:	9301      	str	r3, [sp, #4]
10001622:	9200      	str	r2, [sp, #0]
10001624:	4633      	mov	r3, r6
10001626:	4622      	mov	r2, r4
10001628:	4641      	mov	r1, r8
1000162a:	4638      	mov	r0, r7
1000162c:	f7ff fa2e 	bl	10000a8c <_ntoa_long>
10001630:	4604      	mov	r4, r0
10001632:	e029      	b.n	10001688 <_vsnprintf+0x318>
          base = 16U;
10001634:	2310      	movs	r3, #16
10001636:	e7cb      	b.n	100015d0 <_vsnprintf+0x260>
          base =  8U;
10001638:	2308      	movs	r3, #8
1000163a:	e7c9      	b.n	100015d0 <_vsnprintf+0x260>
          base =  2U;
1000163c:	2302      	movs	r3, #2
1000163e:	e7c7      	b.n	100015d0 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001640:	f045 0520 	orr.w	r5, r5, #32
10001644:	e7c6      	b.n	100015d4 <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
10001646:	f415 7f00 	tst.w	r5, #512	; 0x200
1000164a:	d121      	bne.n	10001690 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
1000164c:	f415 7f80 	tst.w	r5, #256	; 0x100
10001650:	d142      	bne.n	100016d8 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001652:	f015 0f40 	tst.w	r5, #64	; 0x40
10001656:	d058      	beq.n	1000170a <_vsnprintf+0x39a>
10001658:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000165a:	1d11      	adds	r1, r2, #4
1000165c:	9118      	str	r1, [sp, #96]	; 0x60
1000165e:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001660:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
10001664:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001668:	9505      	str	r5, [sp, #20]
1000166a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000166c:	9004      	str	r0, [sp, #16]
1000166e:	f8cd b00c 	str.w	fp, [sp, #12]
10001672:	9302      	str	r3, [sp, #8]
10001674:	0fd2      	lsrs	r2, r2, #31
10001676:	9201      	str	r2, [sp, #4]
10001678:	9100      	str	r1, [sp, #0]
1000167a:	4633      	mov	r3, r6
1000167c:	4622      	mov	r2, r4
1000167e:	4641      	mov	r1, r8
10001680:	4638      	mov	r0, r7
10001682:	f7ff fa03 	bl	10000a8c <_ntoa_long>
10001686:	4604      	mov	r4, r0
        format++;
10001688:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000168a:	3301      	adds	r3, #1
1000168c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000168e:	e67a      	b.n	10001386 <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
10001690:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001692:	3207      	adds	r2, #7
10001694:	f022 0207 	bic.w	r2, r2, #7
10001698:	f102 0108 	add.w	r1, r2, #8
1000169c:	9118      	str	r1, [sp, #96]	; 0x60
1000169e:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100016a0:	6812      	ldr	r2, [r2, #0]
100016a2:	4608      	mov	r0, r1
100016a4:	2900      	cmp	r1, #0
100016a6:	db13      	blt.n	100016d0 <_vsnprintf+0x360>
100016a8:	9508      	str	r5, [sp, #32]
100016aa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100016ac:	9507      	str	r5, [sp, #28]
100016ae:	f8cd b018 	str.w	fp, [sp, #24]
100016b2:	9304      	str	r3, [sp, #16]
100016b4:	2300      	movs	r3, #0
100016b6:	9305      	str	r3, [sp, #20]
100016b8:	0fc9      	lsrs	r1, r1, #31
100016ba:	9102      	str	r1, [sp, #8]
100016bc:	9200      	str	r2, [sp, #0]
100016be:	9001      	str	r0, [sp, #4]
100016c0:	4633      	mov	r3, r6
100016c2:	4622      	mov	r2, r4
100016c4:	4641      	mov	r1, r8
100016c6:	4638      	mov	r0, r7
100016c8:	f7ff fa2a 	bl	10000b20 <_ntoa_long_long>
100016cc:	4604      	mov	r4, r0
100016ce:	e7db      	b.n	10001688 <_vsnprintf+0x318>
100016d0:	4252      	negs	r2, r2
100016d2:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
100016d6:	e7e7      	b.n	100016a8 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
100016d8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016da:	1d11      	adds	r1, r2, #4
100016dc:	9118      	str	r1, [sp, #96]	; 0x60
100016de:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100016e0:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100016e4:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100016e8:	9505      	str	r5, [sp, #20]
100016ea:	980a      	ldr	r0, [sp, #40]	; 0x28
100016ec:	9004      	str	r0, [sp, #16]
100016ee:	f8cd b00c 	str.w	fp, [sp, #12]
100016f2:	9302      	str	r3, [sp, #8]
100016f4:	0fd2      	lsrs	r2, r2, #31
100016f6:	9201      	str	r2, [sp, #4]
100016f8:	9100      	str	r1, [sp, #0]
100016fa:	4633      	mov	r3, r6
100016fc:	4622      	mov	r2, r4
100016fe:	4641      	mov	r1, r8
10001700:	4638      	mov	r0, r7
10001702:	f7ff f9c3 	bl	10000a8c <_ntoa_long>
10001706:	4604      	mov	r4, r0
10001708:	e7be      	b.n	10001688 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000170a:	f015 0f80 	tst.w	r5, #128	; 0x80
1000170e:	d005      	beq.n	1000171c <_vsnprintf+0x3ac>
10001710:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001712:	1d11      	adds	r1, r2, #4
10001714:	9118      	str	r1, [sp, #96]	; 0x60
10001716:	f9b2 2000 	ldrsh.w	r2, [r2]
1000171a:	e7a1      	b.n	10001660 <_vsnprintf+0x2f0>
1000171c:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000171e:	1d11      	adds	r1, r2, #4
10001720:	9118      	str	r1, [sp, #96]	; 0x60
10001722:	6812      	ldr	r2, [r2, #0]
10001724:	e79c      	b.n	10001660 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
10001726:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001728:	3207      	adds	r2, #7
1000172a:	f022 0207 	bic.w	r2, r2, #7
1000172e:	f102 0108 	add.w	r1, r2, #8
10001732:	9118      	str	r1, [sp, #96]	; 0x60
10001734:	9508      	str	r5, [sp, #32]
10001736:	990a      	ldr	r1, [sp, #40]	; 0x28
10001738:	9107      	str	r1, [sp, #28]
1000173a:	f8cd b018 	str.w	fp, [sp, #24]
1000173e:	2100      	movs	r1, #0
10001740:	9304      	str	r3, [sp, #16]
10001742:	9105      	str	r1, [sp, #20]
10001744:	9102      	str	r1, [sp, #8]
10001746:	e9d2 2300 	ldrd	r2, r3, [r2]
1000174a:	e9cd 2300 	strd	r2, r3, [sp]
1000174e:	4633      	mov	r3, r6
10001750:	4622      	mov	r2, r4
10001752:	4641      	mov	r1, r8
10001754:	4638      	mov	r0, r7
10001756:	f7ff f9e3 	bl	10000b20 <_ntoa_long_long>
1000175a:	4604      	mov	r4, r0
1000175c:	e794      	b.n	10001688 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
1000175e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001760:	1d11      	adds	r1, r2, #4
10001762:	9118      	str	r1, [sp, #96]	; 0x60
10001764:	9505      	str	r5, [sp, #20]
10001766:	990a      	ldr	r1, [sp, #40]	; 0x28
10001768:	9104      	str	r1, [sp, #16]
1000176a:	f8cd b00c 	str.w	fp, [sp, #12]
1000176e:	9302      	str	r3, [sp, #8]
10001770:	2300      	movs	r3, #0
10001772:	9301      	str	r3, [sp, #4]
10001774:	6813      	ldr	r3, [r2, #0]
10001776:	9300      	str	r3, [sp, #0]
10001778:	4633      	mov	r3, r6
1000177a:	4622      	mov	r2, r4
1000177c:	4641      	mov	r1, r8
1000177e:	4638      	mov	r0, r7
10001780:	f7ff f984 	bl	10000a8c <_ntoa_long>
10001784:	4604      	mov	r4, r0
10001786:	e77f      	b.n	10001688 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001788:	f015 0f80 	tst.w	r5, #128	; 0x80
1000178c:	d004      	beq.n	10001798 <_vsnprintf+0x428>
1000178e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001790:	1d11      	adds	r1, r2, #4
10001792:	9118      	str	r1, [sp, #96]	; 0x60
10001794:	8812      	ldrh	r2, [r2, #0]
10001796:	e73c      	b.n	10001612 <_vsnprintf+0x2a2>
10001798:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000179a:	1d11      	adds	r1, r2, #4
1000179c:	9118      	str	r1, [sp, #96]	; 0x60
1000179e:	6812      	ldr	r2, [r2, #0]
100017a0:	e737      	b.n	10001612 <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100017a2:	2846      	cmp	r0, #70	; 0x46
100017a4:	d01a      	beq.n	100017dc <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100017a6:	9b18      	ldr	r3, [sp, #96]	; 0x60
100017a8:	3307      	adds	r3, #7
100017aa:	f023 0307 	bic.w	r3, r3, #7
100017ae:	f103 0208 	add.w	r2, r3, #8
100017b2:	9218      	str	r2, [sp, #96]	; 0x60
100017b4:	9504      	str	r5, [sp, #16]
100017b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100017b8:	9203      	str	r2, [sp, #12]
100017ba:	f8cd b008 	str.w	fp, [sp, #8]
100017be:	e9d3 2300 	ldrd	r2, r3, [r3]
100017c2:	e9cd 2300 	strd	r2, r3, [sp]
100017c6:	4633      	mov	r3, r6
100017c8:	4622      	mov	r2, r4
100017ca:	4641      	mov	r1, r8
100017cc:	4638      	mov	r0, r7
100017ce:	f7ff fc03 	bl	10000fd8 <_ftoa>
100017d2:	4604      	mov	r4, r0
        format++;
100017d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100017d6:	3301      	adds	r3, #1
100017d8:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100017da:	e5d4      	b.n	10001386 <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100017dc:	f045 0520 	orr.w	r5, r5, #32
100017e0:	e7e1      	b.n	100017a6 <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
100017e2:	2867      	cmp	r0, #103	; 0x67
100017e4:	d001      	beq.n	100017ea <_vsnprintf+0x47a>
100017e6:	2847      	cmp	r0, #71	; 0x47
100017e8:	d101      	bne.n	100017ee <_vsnprintf+0x47e>
100017ea:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
100017ee:	2845      	cmp	r0, #69	; 0x45
100017f0:	d001      	beq.n	100017f6 <_vsnprintf+0x486>
100017f2:	2847      	cmp	r0, #71	; 0x47
100017f4:	d101      	bne.n	100017fa <_vsnprintf+0x48a>
100017f6:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100017fa:	9b18      	ldr	r3, [sp, #96]	; 0x60
100017fc:	3307      	adds	r3, #7
100017fe:	f023 0307 	bic.w	r3, r3, #7
10001802:	f103 0208 	add.w	r2, r3, #8
10001806:	9218      	str	r2, [sp, #96]	; 0x60
10001808:	9504      	str	r5, [sp, #16]
1000180a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000180c:	9203      	str	r2, [sp, #12]
1000180e:	f8cd b008 	str.w	fp, [sp, #8]
10001812:	e9d3 2300 	ldrd	r2, r3, [r3]
10001816:	e9cd 2300 	strd	r2, r3, [sp]
1000181a:	4633      	mov	r3, r6
1000181c:	4622      	mov	r2, r4
1000181e:	4641      	mov	r1, r8
10001820:	4638      	mov	r0, r7
10001822:	f7ff f9e1 	bl	10000be8 <_etoa>
10001826:	4604      	mov	r4, r0
        format++;
10001828:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000182a:	3301      	adds	r3, #1
1000182c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000182e:	e5aa      	b.n	10001386 <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001830:	f015 0502 	ands.w	r5, r5, #2
10001834:	d01f      	beq.n	10001876 <_vsnprintf+0x506>
        unsigned int l = 1U;
10001836:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
1000183a:	9818      	ldr	r0, [sp, #96]	; 0x60
1000183c:	1d03      	adds	r3, r0, #4
1000183e:	9318      	str	r3, [sp, #96]	; 0x60
10001840:	f104 0a01 	add.w	sl, r4, #1
10001844:	4633      	mov	r3, r6
10001846:	4622      	mov	r2, r4
10001848:	4641      	mov	r1, r8
1000184a:	7800      	ldrb	r0, [r0, #0]
1000184c:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
1000184e:	b9bd      	cbnz	r5, 10001880 <_vsnprintf+0x510>
        format++;
10001850:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001852:	3301      	adds	r3, #1
10001854:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001856:	4654      	mov	r4, sl
10001858:	e595      	b.n	10001386 <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
1000185a:	f102 0a01 	add.w	sl, r2, #1
1000185e:	4633      	mov	r3, r6
10001860:	4641      	mov	r1, r8
10001862:	2020      	movs	r0, #32
10001864:	47b8      	blx	r7
          while (l++ < width) {
10001866:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001868:	4652      	mov	r2, sl
          while (l++ < width) {
1000186a:	f103 0901 	add.w	r9, r3, #1
1000186e:	459b      	cmp	fp, r3
10001870:	d8f3      	bhi.n	1000185a <_vsnprintf+0x4ea>
10001872:	4614      	mov	r4, r2
10001874:	e7e1      	b.n	1000183a <_vsnprintf+0x4ca>
        unsigned int l = 1U;
10001876:	2301      	movs	r3, #1
10001878:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
1000187c:	4622      	mov	r2, r4
1000187e:	e7f4      	b.n	1000186a <_vsnprintf+0x4fa>
10001880:	4652      	mov	r2, sl
10001882:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001886:	e006      	b.n	10001896 <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001888:	1c55      	adds	r5, r2, #1
1000188a:	4633      	mov	r3, r6
1000188c:	4641      	mov	r1, r8
1000188e:	2020      	movs	r0, #32
10001890:	47b8      	blx	r7
          while (l++ < width) {
10001892:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001894:	462a      	mov	r2, r5
          while (l++ < width) {
10001896:	f109 0401 	add.w	r4, r9, #1
1000189a:	45ca      	cmp	sl, r9
1000189c:	d8f4      	bhi.n	10001888 <_vsnprintf+0x518>
1000189e:	4692      	mov	sl, r2
100018a0:	e7d6      	b.n	10001850 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100018a2:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018a4:	1d1a      	adds	r2, r3, #4
100018a6:	9218      	str	r2, [sp, #96]	; 0x60
100018a8:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100018ac:	f1bb 0f00 	cmp.w	fp, #0
100018b0:	d11e      	bne.n	100018f0 <_vsnprintf+0x580>
100018b2:	f04f 33ff 	mov.w	r3, #4294967295
100018b6:	46d1      	mov	r9, sl
100018b8:	e002      	b.n	100018c0 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100018ba:	f109 0901 	add.w	r9, r9, #1
100018be:	4613      	mov	r3, r2
100018c0:	f899 2000 	ldrb.w	r2, [r9]
100018c4:	b112      	cbz	r2, 100018cc <_vsnprintf+0x55c>
100018c6:	1e5a      	subs	r2, r3, #1
100018c8:	2b00      	cmp	r3, #0
100018ca:	d1f6      	bne.n	100018ba <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
100018cc:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
100018d0:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
100018d4:	930b      	str	r3, [sp, #44]	; 0x2c
100018d6:	d002      	beq.n	100018de <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
100018d8:	45d9      	cmp	r9, fp
100018da:	bf28      	it	cs
100018dc:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
100018de:	f015 0302 	ands.w	r3, r5, #2
100018e2:	930c      	str	r3, [sp, #48]	; 0x30
100018e4:	d006      	beq.n	100018f4 <_vsnprintf+0x584>
100018e6:	4622      	mov	r2, r4
100018e8:	465c      	mov	r4, fp
100018ea:	46b3      	mov	fp, r6
100018ec:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100018ee:	e01d      	b.n	1000192c <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100018f0:	465b      	mov	r3, fp
100018f2:	e7e0      	b.n	100018b6 <_vsnprintf+0x546>
100018f4:	4622      	mov	r2, r4
100018f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
100018f8:	464b      	mov	r3, r9
100018fa:	e007      	b.n	1000190c <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
100018fc:	f102 0901 	add.w	r9, r2, #1
10001900:	4633      	mov	r3, r6
10001902:	4641      	mov	r1, r8
10001904:	2020      	movs	r0, #32
10001906:	47b8      	blx	r7
          while (l++ < width) {
10001908:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
1000190a:	464a      	mov	r2, r9
          while (l++ < width) {
1000190c:	1c5d      	adds	r5, r3, #1
1000190e:	429c      	cmp	r4, r3
10001910:	d8f4      	bhi.n	100018fc <_vsnprintf+0x58c>
10001912:	46a9      	mov	r9, r5
10001914:	465c      	mov	r4, fp
10001916:	46b3      	mov	fp, r6
10001918:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
1000191a:	e007      	b.n	1000192c <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
1000191c:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
1000191e:	f10a 0a01 	add.w	sl, sl, #1
10001922:	1c55      	adds	r5, r2, #1
10001924:	465b      	mov	r3, fp
10001926:	4641      	mov	r1, r8
10001928:	47b8      	blx	r7
1000192a:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
1000192c:	f89a 0000 	ldrb.w	r0, [sl]
10001930:	b120      	cbz	r0, 1000193c <_vsnprintf+0x5cc>
10001932:	2e00      	cmp	r6, #0
10001934:	d0f3      	beq.n	1000191e <_vsnprintf+0x5ae>
10001936:	1e63      	subs	r3, r4, #1
10001938:	2c00      	cmp	r4, #0
1000193a:	d1ef      	bne.n	1000191c <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
1000193c:	4614      	mov	r4, r2
1000193e:	465e      	mov	r6, fp
10001940:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10001942:	b91b      	cbnz	r3, 1000194c <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
10001944:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001946:	3301      	adds	r3, #1
10001948:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000194a:	e51c      	b.n	10001386 <_vsnprintf+0x16>
1000194c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001950:	e006      	b.n	10001960 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
10001952:	1c55      	adds	r5, r2, #1
10001954:	4633      	mov	r3, r6
10001956:	4641      	mov	r1, r8
10001958:	2020      	movs	r0, #32
1000195a:	47b8      	blx	r7
          while (l++ < width) {
1000195c:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
1000195e:	462a      	mov	r2, r5
          while (l++ < width) {
10001960:	f109 0401 	add.w	r4, r9, #1
10001964:	45ca      	cmp	sl, r9
10001966:	d8f4      	bhi.n	10001952 <_vsnprintf+0x5e2>
10001968:	4614      	mov	r4, r2
1000196a:	e7eb      	b.n	10001944 <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
1000196c:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001970:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001972:	1d1a      	adds	r2, r3, #4
10001974:	9218      	str	r2, [sp, #96]	; 0x60
10001976:	681b      	ldr	r3, [r3, #0]
10001978:	9505      	str	r5, [sp, #20]
1000197a:	2208      	movs	r2, #8
1000197c:	9204      	str	r2, [sp, #16]
1000197e:	f8cd b00c 	str.w	fp, [sp, #12]
10001982:	2210      	movs	r2, #16
10001984:	9202      	str	r2, [sp, #8]
10001986:	2200      	movs	r2, #0
10001988:	9201      	str	r2, [sp, #4]
1000198a:	9300      	str	r3, [sp, #0]
1000198c:	4633      	mov	r3, r6
1000198e:	4622      	mov	r2, r4
10001990:	4641      	mov	r1, r8
10001992:	4638      	mov	r0, r7
10001994:	f7ff f87a 	bl	10000a8c <_ntoa_long>
10001998:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
1000199a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000199c:	3301      	adds	r3, #1
1000199e:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100019a0:	e4f1      	b.n	10001386 <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
100019a2:	1c65      	adds	r5, r4, #1
100019a4:	4633      	mov	r3, r6
100019a6:	4622      	mov	r2, r4
100019a8:	4641      	mov	r1, r8
100019aa:	2025      	movs	r0, #37	; 0x25
100019ac:	47b8      	blx	r7
        format++;
100019ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019b0:	3301      	adds	r3, #1
100019b2:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
100019b4:	462c      	mov	r4, r5
        break;
100019b6:	e4e6      	b.n	10001386 <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
100019b8:	1c65      	adds	r5, r4, #1
100019ba:	4633      	mov	r3, r6
100019bc:	4622      	mov	r2, r4
100019be:	4641      	mov	r1, r8
100019c0:	47b8      	blx	r7
        format++;
100019c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019c4:	3301      	adds	r3, #1
100019c6:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
100019c8:	462c      	mov	r4, r5
        break;
100019ca:	e4dc      	b.n	10001386 <_vsnprintf+0x16>
    out = _out_null;
100019cc:	4f07      	ldr	r7, [pc, #28]	; (100019ec <_vsnprintf+0x67c>)
100019ce:	e4d9      	b.n	10001384 <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
100019d0:	42b4      	cmp	r4, r6
100019d2:	d301      	bcc.n	100019d8 <_vsnprintf+0x668>
100019d4:	1e72      	subs	r2, r6, #1
100019d6:	e000      	b.n	100019da <_vsnprintf+0x66a>
100019d8:	4622      	mov	r2, r4
100019da:	4633      	mov	r3, r6
100019dc:	4641      	mov	r1, r8
100019de:	2000      	movs	r0, #0
100019e0:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
100019e2:	4620      	mov	r0, r4
100019e4:	b00f      	add	sp, #60	; 0x3c
100019e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100019ea:	bf00      	nop
100019ec:	100008b1 			; <UNDEFINED> instruction: 0x100008b1

100019f0 <_out_char>:
  if (character) {
100019f0:	b900      	cbnz	r0, 100019f4 <_out_char+0x4>
100019f2:	4770      	bx	lr
{
100019f4:	b508      	push	{r3, lr}
    put_char(character);
100019f6:	f000 f817 	bl	10001a28 <put_char>
}
100019fa:	bd08      	pop	{r3, pc}

100019fc <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
100019fc:	b40f      	push	{r0, r1, r2, r3}
100019fe:	b500      	push	{lr}
10001a00:	b085      	sub	sp, #20
10001a02:	aa06      	add	r2, sp, #24
10001a04:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001a08:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001a0a:	9200      	str	r2, [sp, #0]
10001a0c:	f04f 32ff 	mov.w	r2, #4294967295
10001a10:	a902      	add	r1, sp, #8
10001a12:	4804      	ldr	r0, [pc, #16]	; (10001a24 <printf+0x28>)
10001a14:	f7ff fcac 	bl	10001370 <_vsnprintf>
  va_end(va);
  return ret;
}
10001a18:	b005      	add	sp, #20
10001a1a:	f85d eb04 	ldr.w	lr, [sp], #4
10001a1e:	b004      	add	sp, #16
10001a20:	4770      	bx	lr
10001a22:	bf00      	nop
10001a24:	100019f1 	strdne	r1, [r0], -r1	; <UNPREDICTABLE>

10001a28 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001a28:	4b03      	ldr	r3, [pc, #12]	; (10001a38 <put_char+0x10>)
10001a2a:	699b      	ldr	r3, [r3, #24]
10001a2c:	f013 0f20 	tst.w	r3, #32
10001a30:	d1fa      	bne.n	10001a28 <put_char>
    UART_DATA(UART0) = ch;
10001a32:	4b01      	ldr	r3, [pc, #4]	; (10001a38 <put_char+0x10>)
10001a34:	6018      	str	r0, [r3, #0]
    return ch;
}
10001a36:	4770      	bx	lr
10001a38:	40200000 	eormi	r0, r0, r0

10001a3c <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001a3c:	b538      	push	{r3, r4, r5, lr}
10001a3e:	4605      	mov	r5, r0
    int index = 0;
10001a40:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001a42:	e002      	b.n	10001a4a <puts+0xe>
        put_char(string[index]);
10001a44:	f7ff fff0 	bl	10001a28 <put_char>
        index++;
10001a48:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001a4a:	5d28      	ldrb	r0, [r5, r4]
10001a4c:	2800      	cmp	r0, #0
10001a4e:	d1f9      	bne.n	10001a44 <puts+0x8>
    }
    put_char('\n');
10001a50:	200a      	movs	r0, #10
10001a52:	f7ff ffe9 	bl	10001a28 <put_char>
    return index;
}
10001a56:	4620      	mov	r0, r4
10001a58:	bd38      	pop	{r3, r4, r5, pc}
	...

10001a5c <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001a5c:	4b07      	ldr	r3, [pc, #28]	; (10001a7c <uart_init+0x20>)
10001a5e:	2228      	movs	r2, #40	; 0x28
10001a60:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001a62:	220b      	movs	r2, #11
10001a64:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001a66:	2260      	movs	r2, #96	; 0x60
10001a68:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001a6a:	f240 3201 	movw	r2, #769	; 0x301
10001a6e:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001a70:	220a      	movs	r2, #10
10001a72:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001a74:	2201      	movs	r2, #1
10001a76:	609a      	str	r2, [r3, #8]
}
10001a78:	4770      	bx	lr
10001a7a:	bf00      	nop
10001a7c:	40200000 	eormi	r0, r0, r0

10001a80 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001a80:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001a82:	2300      	movs	r3, #0
10001a84:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001a86:	e007      	b.n	10001a98 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001a88:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001a8c:	aa02      	add	r2, sp, #8
10001a8e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001a92:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001a96:	3301      	adds	r3, #1
10001a98:	2b01      	cmp	r3, #1
10001a9a:	d9f5      	bls.n	10001a88 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001a9c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001aa0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001aa4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001aa8:	b002      	add	sp, #8
10001aaa:	4770      	bx	lr

10001aac <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001aac:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001ab0:	0c00      	lsrs	r0, r0, #16
10001ab2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001ab6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001aba:	d00a      	beq.n	10001ad2 <opcode_is_bl_or_blx+0x26>
10001abc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001ac0:	d009      	beq.n	10001ad6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001ac2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001ac6:	d008      	beq.n	10001ada <opcode_is_bl_or_blx+0x2e>
10001ac8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001acc:	d007      	beq.n	10001ade <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001ace:	2000      	movs	r0, #0
10001ad0:	4770      	bx	lr
        return true;
10001ad2:	2001      	movs	r0, #1
10001ad4:	4770      	bx	lr
10001ad6:	2001      	movs	r0, #1
10001ad8:	4770      	bx	lr
        return true;
10001ada:	2001      	movs	r0, #1
10001adc:	4770      	bx	lr
10001ade:	2001      	movs	r0, #1
}
10001ae0:	4770      	bx	lr
	...

10001ae4 <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
10001ae4:	b510      	push	{r4, lr}
10001ae6:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001ae8:	4601      	mov	r1, r0
10001aea:	4803      	ldr	r0, [pc, #12]	; (10001af8 <dump_exc_return+0x14>)
10001aec:	f7ff ff86 	bl	100019fc <printf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
10001af0:	4620      	mov	r0, r4
10001af2:	f000 f92b 	bl	10001d4c <fault_dump_exc_return>
#endif
}
10001af6:	bd10      	pop	{r4, pc}
10001af8:	10005770 	andne	r5, r0, r0, ror r7

10001afc <fault_dump_init>:
void fault_dump_init(void) {
10001afc:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001afe:	490a      	ldr	r1, [pc, #40]	; (10001b28 <fault_dump_init+0x2c>)
10001b00:	4b0a      	ldr	r3, [pc, #40]	; (10001b2c <fault_dump_init+0x30>)
10001b02:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001b04:	4a0a      	ldr	r2, [pc, #40]	; (10001b30 <fault_dump_init+0x34>)
10001b06:	4b0b      	ldr	r3, [pc, #44]	; (10001b34 <fault_dump_init+0x38>)
10001b08:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001b0a:	1a53      	subs	r3, r2, r1
10001b0c:	480a      	ldr	r0, [pc, #40]	; (10001b38 <fault_dump_init+0x3c>)
10001b0e:	f7ff ff75 	bl	100019fc <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001b12:	490a      	ldr	r1, [pc, #40]	; (10001b3c <fault_dump_init+0x40>)
10001b14:	4a0a      	ldr	r2, [pc, #40]	; (10001b40 <fault_dump_init+0x44>)
10001b16:	1a53      	subs	r3, r2, r1
10001b18:	480a      	ldr	r0, [pc, #40]	; (10001b44 <fault_dump_init+0x48>)
10001b1a:	f7ff ff6f 	bl	100019fc <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001b1e:	2101      	movs	r1, #1
10001b20:	4809      	ldr	r0, [pc, #36]	; (10001b48 <fault_dump_init+0x4c>)
10001b22:	f7ff ff6b 	bl	100019fc <printf>
}
10001b26:	bd08      	pop	{r3, pc}
10001b28:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001b2c:	38008568 	stmdacc	r0, {r3, r5, r6, r8, sl, pc}
10001b30:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001b34:	3800856c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl, pc}
10001b38:	10005788 	andne	r5, r0, r8, lsl #15
10001b3c:	10000000 	andne	r0, r0, r0
10001b40:	10005ba8 	andne	r5, r0, r8, lsr #23
10001b44:	100057ac 	andne	r5, r0, ip, lsr #15
10001b48:	100057d0 	ldrdne	r5, [r0], -r0

10001b4c <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001b4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001b50:	b348      	cbz	r0, 10001ba6 <fault_dump_callstack+0x5a>
10001b52:	460f      	mov	r7, r1
10001b54:	4614      	mov	r4, r2
10001b56:	461d      	mov	r5, r3
10001b58:	4680      	mov	r8, r0
10001b5a:	b339      	cbz	r1, 10001bac <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001b5c:	b34a      	cbz	r2, 10001bb2 <fault_dump_callstack+0x66>
10001b5e:	429a      	cmp	r2, r3
10001b60:	d82a      	bhi.n	10001bb8 <fault_dump_callstack+0x6c>
    int count = 0;
10001b62:	2600      	movs	r6, #0
10001b64:	e000      	b.n	10001b68 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001b66:	3404      	adds	r4, #4
10001b68:	b1d4      	cbz	r4, 10001ba0 <fault_dump_callstack+0x54>
10001b6a:	42ac      	cmp	r4, r5
10001b6c:	d818      	bhi.n	10001ba0 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001b6e:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001b70:	4813      	ldr	r0, [pc, #76]	; (10001bc0 <fault_dump_callstack+0x74>)
10001b72:	4290      	cmp	r0, r2
10001b74:	d8f7      	bhi.n	10001b66 <fault_dump_callstack+0x1a>
10001b76:	4b13      	ldr	r3, [pc, #76]	; (10001bc4 <fault_dump_callstack+0x78>)
10001b78:	4293      	cmp	r3, r2
10001b7a:	d3f4      	bcc.n	10001b66 <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001b7c:	f012 0f01 	tst.w	r2, #1
10001b80:	d0f1      	beq.n	10001b66 <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001b82:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001b86:	d0ee      	beq.n	10001b66 <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001b88:	4648      	mov	r0, r9
10001b8a:	f7ff ff79 	bl	10001a80 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001b8e:	f7ff ff8d 	bl	10001aac <opcode_is_bl_or_blx>
10001b92:	2800      	cmp	r0, #0
10001b94:	d0e7      	beq.n	10001b66 <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001b96:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001b9a:	3601      	adds	r6, #1
        if (count >= size) {
10001b9c:	42be      	cmp	r6, r7
10001b9e:	d3e2      	bcc.n	10001b66 <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001ba0:	4630      	mov	r0, r6
10001ba2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001ba6:	f06f 0601 	mvn.w	r6, #1
10001baa:	e7f9      	b.n	10001ba0 <fault_dump_callstack+0x54>
10001bac:	f06f 0601 	mvn.w	r6, #1
10001bb0:	e7f6      	b.n	10001ba0 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001bb2:	f06f 0602 	mvn.w	r6, #2
10001bb6:	e7f3      	b.n	10001ba0 <fault_dump_callstack+0x54>
10001bb8:	f06f 0602 	mvn.w	r6, #2
10001bbc:	e7f0      	b.n	10001ba0 <fault_dump_callstack+0x54>
10001bbe:	bf00      	nop
10001bc0:	10000000 	andne	r0, r0, r0
10001bc4:	10005ba8 	andne	r5, r0, r8, lsr #23

10001bc8 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001bca:	4605      	mov	r5, r0
10001bcc:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001bce:	6803      	ldr	r3, [r0, #0]
10001bd0:	4c46      	ldr	r4, [pc, #280]	; (10001cec <fault_dump_handler+0x124>)
10001bd2:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001bd4:	6843      	ldr	r3, [r0, #4]
10001bd6:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001bd8:	6883      	ldr	r3, [r0, #8]
10001bda:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001bdc:	68c3      	ldr	r3, [r0, #12]
10001bde:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001be0:	6903      	ldr	r3, [r0, #16]
10001be2:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001be4:	6943      	ldr	r3, [r0, #20]
10001be6:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001be8:	6983      	ldr	r3, [r0, #24]
10001bea:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001bec:	69c3      	ldr	r3, [r0, #28]
10001bee:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001bf0:	6a03      	ldr	r3, [r0, #32]
10001bf2:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001bf4:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001bf6:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001bf8:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001bfa:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001bfc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001bfe:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001c00:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001c02:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001c04:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001c06:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001c08:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001c0a:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001c0c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001c0e:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001c10:	4f37      	ldr	r7, [pc, #220]	; (10001cf0 <fault_dump_handler+0x128>)
10001c12:	4638      	mov	r0, r7
10001c14:	f7ff ff12 	bl	10001a3c <puts>
    printf(" HardFault Information Dump \r\n");
10001c18:	4836      	ldr	r0, [pc, #216]	; (10001cf4 <fault_dump_handler+0x12c>)
10001c1a:	f7ff ff0f 	bl	10001a3c <puts>
    printf(" Stack Frame   \r\n");
10001c1e:	4836      	ldr	r0, [pc, #216]	; (10001cf8 <fault_dump_handler+0x130>)
10001c20:	f7ff ff0c 	bl	10001a3c <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001c24:	6a21      	ldr	r1, [r4, #32]
10001c26:	4835      	ldr	r0, [pc, #212]	; (10001cfc <fault_dump_handler+0x134>)
10001c28:	f7ff fee8 	bl	100019fc <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001c2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001c2e:	4834      	ldr	r0, [pc, #208]	; (10001d00 <fault_dump_handler+0x138>)
10001c30:	f7ff fee4 	bl	100019fc <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001c34:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001c36:	4833      	ldr	r0, [pc, #204]	; (10001d04 <fault_dump_handler+0x13c>)
10001c38:	f7ff fee0 	bl	100019fc <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001c3c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001c3e:	4832      	ldr	r0, [pc, #200]	; (10001d08 <fault_dump_handler+0x140>)
10001c40:	f7ff fedc 	bl	100019fc <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001c44:	6821      	ldr	r1, [r4, #0]
10001c46:	4831      	ldr	r0, [pc, #196]	; (10001d0c <fault_dump_handler+0x144>)
10001c48:	f7ff fed8 	bl	100019fc <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001c4c:	6861      	ldr	r1, [r4, #4]
10001c4e:	4830      	ldr	r0, [pc, #192]	; (10001d10 <fault_dump_handler+0x148>)
10001c50:	f7ff fed4 	bl	100019fc <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001c54:	68a1      	ldr	r1, [r4, #8]
10001c56:	482f      	ldr	r0, [pc, #188]	; (10001d14 <fault_dump_handler+0x14c>)
10001c58:	f7ff fed0 	bl	100019fc <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001c5c:	68e1      	ldr	r1, [r4, #12]
10001c5e:	482e      	ldr	r0, [pc, #184]	; (10001d18 <fault_dump_handler+0x150>)
10001c60:	f7ff fecc 	bl	100019fc <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001c64:	6921      	ldr	r1, [r4, #16]
10001c66:	482d      	ldr	r0, [pc, #180]	; (10001d1c <fault_dump_handler+0x154>)
10001c68:	f7ff fec8 	bl	100019fc <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001c6c:	6961      	ldr	r1, [r4, #20]
10001c6e:	482c      	ldr	r0, [pc, #176]	; (10001d20 <fault_dump_handler+0x158>)
10001c70:	f7ff fec4 	bl	100019fc <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001c74:	69a1      	ldr	r1, [r4, #24]
10001c76:	482b      	ldr	r0, [pc, #172]	; (10001d24 <fault_dump_handler+0x15c>)
10001c78:	f7ff fec0 	bl	100019fc <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001c7c:	69e1      	ldr	r1, [r4, #28]
10001c7e:	482a      	ldr	r0, [pc, #168]	; (10001d28 <fault_dump_handler+0x160>)
10001c80:	f7ff febc 	bl	100019fc <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001c84:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001c86:	4829      	ldr	r0, [pc, #164]	; (10001d2c <fault_dump_handler+0x164>)
10001c88:	f7ff feb8 	bl	100019fc <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001c8c:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001c8e:	4828      	ldr	r0, [pc, #160]	; (10001d30 <fault_dump_handler+0x168>)
10001c90:	f7ff feb4 	bl	100019fc <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001c94:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001c96:	4827      	ldr	r0, [pc, #156]	; (10001d34 <fault_dump_handler+0x16c>)
10001c98:	f7ff feb0 	bl	100019fc <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001c9c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001c9e:	4826      	ldr	r0, [pc, #152]	; (10001d38 <fault_dump_handler+0x170>)
10001ca0:	f7ff feac 	bl	100019fc <printf>
    printf("\r\n");
10001ca4:	4638      	mov	r0, r7
10001ca6:	f7ff fec9 	bl	10001a3c <puts>
    dump_exc_return(linker);
10001caa:	4630      	mov	r0, r6
10001cac:	f7ff ff1a 	bl	10001ae4 <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001cb0:	4b22      	ldr	r3, [pc, #136]	; (10001d3c <fault_dump_handler+0x174>)
10001cb2:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001cb6:	2140      	movs	r1, #64	; 0x40
10001cb8:	4821      	ldr	r0, [pc, #132]	; (10001d40 <fault_dump_handler+0x178>)
10001cba:	f7ff ff47 	bl	10001b4c <fault_dump_callstack>
10001cbe:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001cc0:	4820      	ldr	r0, [pc, #128]	; (10001d44 <fault_dump_handler+0x17c>)
10001cc2:	f7ff fe9b 	bl	100019fc <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001cc6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001cc8:	481f      	ldr	r0, [pc, #124]	; (10001d48 <fault_dump_handler+0x180>)
10001cca:	f7ff fe97 	bl	100019fc <printf>
    for (index = 0; index < count; index++) {
10001cce:	2400      	movs	r4, #0
10001cd0:	e006      	b.n	10001ce0 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
10001cd2:	4b1b      	ldr	r3, [pc, #108]	; (10001d40 <fault_dump_handler+0x178>)
10001cd4:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001cd8:	481b      	ldr	r0, [pc, #108]	; (10001d48 <fault_dump_handler+0x180>)
10001cda:	f7ff fe8f 	bl	100019fc <printf>
    for (index = 0; index < count; index++) {
10001cde:	3401      	adds	r4, #1
10001ce0:	42ac      	cmp	r4, r5
10001ce2:	dbf6      	blt.n	10001cd2 <fault_dump_handler+0x10a>
    printf("\r\n");
10001ce4:	4802      	ldr	r0, [pc, #8]	; (10001cf0 <fault_dump_handler+0x128>)
10001ce6:	f7ff fea9 	bl	10001a3c <puts>
    while (1);
10001cea:	e7fe      	b.n	10001cea <fault_dump_handler+0x122>
10001cec:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
10001cf0:	1000580c 	andne	r5, r0, ip, lsl #16
10001cf4:	100057f0 	strdne	r5, [r0], -r0
10001cf8:	10005810 	andne	r5, r0, r0, lsl r8
10001cfc:	10005824 	andne	r5, r0, r4, lsr #16
10001d00:	10005838 	andne	r5, r0, r8, lsr r8
10001d04:	1000584c 	andne	r5, r0, ip, asr #16
10001d08:	10005860 	andne	r5, r0, r0, ror #16
10001d0c:	10005874 	andne	r5, r0, r4, ror r8
10001d10:	10005888 	andne	r5, r0, r8, lsl #17
10001d14:	1000589c 	mulne	r0, ip, r8
10001d18:	100058b0 			; <UNDEFINED> instruction: 0x100058b0
10001d1c:	100058c4 	andne	r5, r0, r4, asr #17
10001d20:	100058d8 	ldrdne	r5, [r0], -r8
10001d24:	100058ec 	andne	r5, r0, ip, ror #17
10001d28:	10005900 	andne	r5, r0, r0, lsl #18
10001d2c:	10005914 	andne	r5, r0, r4, lsl r9
10001d30:	10005928 	andne	r5, r0, r8, lsr #18
10001d34:	1000593c 	andne	r5, r0, ip, lsr r9
10001d38:	10005950 	andne	r5, r0, r0, asr r9
10001d3c:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001d40:	38008468 	stmdacc	r0, {r3, r5, r6, sl, pc}
10001d44:	10005964 	andne	r5, r0, r4, ror #18
10001d48:	10005974 	andne	r5, r0, r4, ror r9

10001d4c <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001d4c:	b510      	push	{r4, lr}
10001d4e:	4604      	mov	r4, r0
    printf(" \r\n");
10001d50:	482a      	ldr	r0, [pc, #168]	; (10001dfc <fault_dump_exc_return+0xb0>)
10001d52:	f7ff fe73 	bl	10001a3c <puts>
    printf(" Bit0 Except Security State: ");
10001d56:	482a      	ldr	r0, [pc, #168]	; (10001e00 <fault_dump_exc_return+0xb4>)
10001d58:	f7ff fe50 	bl	100019fc <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001d5c:	f014 0f01 	tst.w	r4, #1
10001d60:	d033      	beq.n	10001dca <fault_dump_exc_return+0x7e>
        printf("[Use Security State    ].\r\n");
10001d62:	4828      	ldr	r0, [pc, #160]	; (10001e04 <fault_dump_exc_return+0xb8>)
10001d64:	f7ff fe6a 	bl	10001a3c <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select:    ");
10001d68:	4827      	ldr	r0, [pc, #156]	; (10001e08 <fault_dump_exc_return+0xbc>)
10001d6a:	f7ff fe47 	bl	100019fc <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001d6e:	f014 0f04 	tst.w	r4, #4
10001d72:	d02e      	beq.n	10001dd2 <fault_dump_exc_return+0x86>
        printf("[Use PSP               ].\r\n");
10001d74:	4825      	ldr	r0, [pc, #148]	; (10001e0c <fault_dump_exc_return+0xc0>)
10001d76:	f7ff fe61 	bl	10001a3c <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ:  ");
10001d7a:	4825      	ldr	r0, [pc, #148]	; (10001e10 <fault_dump_exc_return+0xc4>)
10001d7c:	f7ff fe3e 	bl	100019fc <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001d80:	f014 0f08 	tst.w	r4, #8
10001d84:	d029      	beq.n	10001dda <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode       ].\r\n");
10001d86:	4823      	ldr	r0, [pc, #140]	; (10001e14 <fault_dump_exc_return+0xc8>)
10001d88:	f7ff fe58 	bl	10001a3c <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:      ");
10001d8c:	4822      	ldr	r0, [pc, #136]	; (10001e18 <fault_dump_exc_return+0xcc>)
10001d8e:	f7ff fe35 	bl	100019fc <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001d92:	f014 0f10 	tst.w	r4, #16
10001d96:	d024      	beq.n	10001de2 <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame    ].\r\n");
10001d98:	4820      	ldr	r0, [pc, #128]	; (10001e1c <fault_dump_exc_return+0xd0>)
10001d9a:	f7ff fe4f 	bl	10001a3c <puts>
    } else {
        printf("[Use Extended Frame    ].\r\n");
    }
    printf(" Bit5 Default Call Rule:     ");
10001d9e:	4820      	ldr	r0, [pc, #128]	; (10001e20 <fault_dump_exc_return+0xd4>)
10001da0:	f7ff fe2c 	bl	100019fc <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001da4:	f014 0f20 	tst.w	r4, #32
10001da8:	d01f      	beq.n	10001dea <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule      ].\r\n");
10001daa:	481e      	ldr	r0, [pc, #120]	; (10001e24 <fault_dump_exc_return+0xd8>)
10001dac:	f7ff fe46 	bl	10001a3c <puts>
    } else {
        printf("[Use Not Default Rule  ].\r\n");
    }
    printf(" Bit6 Security Stack:        ");
10001db0:	481d      	ldr	r0, [pc, #116]	; (10001e28 <fault_dump_exc_return+0xdc>)
10001db2:	f7ff fe23 	bl	100019fc <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001db6:	f014 0f40 	tst.w	r4, #64	; 0x40
10001dba:	d01a      	beq.n	10001df2 <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack    ].\r\n");
10001dbc:	481b      	ldr	r0, [pc, #108]	; (10001e2c <fault_dump_exc_return+0xe0>)
10001dbe:	f7ff fe3d 	bl	10001a3c <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001dc2:	480e      	ldr	r0, [pc, #56]	; (10001dfc <fault_dump_exc_return+0xb0>)
10001dc4:	f7ff fe3a 	bl	10001a3c <puts>
}
10001dc8:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001dca:	4819      	ldr	r0, [pc, #100]	; (10001e30 <fault_dump_exc_return+0xe4>)
10001dcc:	f7ff fe36 	bl	10001a3c <puts>
10001dd0:	e7ca      	b.n	10001d68 <fault_dump_exc_return+0x1c>
        printf("[Use MSP               ].\r\n");
10001dd2:	4818      	ldr	r0, [pc, #96]	; (10001e34 <fault_dump_exc_return+0xe8>)
10001dd4:	f7ff fe32 	bl	10001a3c <puts>
10001dd8:	e7cf      	b.n	10001d7a <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode      ].\r\n");
10001dda:	4817      	ldr	r0, [pc, #92]	; (10001e38 <fault_dump_exc_return+0xec>)
10001ddc:	f7ff fe2e 	bl	10001a3c <puts>
10001de0:	e7d4      	b.n	10001d8c <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame    ].\r\n");
10001de2:	4816      	ldr	r0, [pc, #88]	; (10001e3c <fault_dump_exc_return+0xf0>)
10001de4:	f7ff fe2a 	bl	10001a3c <puts>
10001de8:	e7d9      	b.n	10001d9e <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule  ].\r\n");
10001dea:	4815      	ldr	r0, [pc, #84]	; (10001e40 <fault_dump_exc_return+0xf4>)
10001dec:	f7ff fe26 	bl	10001a3c <puts>
10001df0:	e7de      	b.n	10001db0 <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001df2:	4814      	ldr	r0, [pc, #80]	; (10001e44 <fault_dump_exc_return+0xf8>)
10001df4:	f7ff fe22 	bl	10001a3c <puts>
10001df8:	e7e3      	b.n	10001dc2 <fault_dump_exc_return+0x76>
10001dfa:	bf00      	nop
10001dfc:	1000597c 	andne	r5, r0, ip, ror r9
10001e00:	10005980 	andne	r5, r0, r0, lsl #19
10001e04:	100059a0 	andne	r5, r0, r0, lsr #19
10001e08:	100059d8 	ldrdne	r5, [r0], -r8
10001e0c:	100059f8 	strdne	r5, [r0], -r8
10001e10:	10005a30 	andne	r5, r0, r0, lsr sl
10001e14:	10005a50 	andne	r5, r0, r0, asr sl
10001e18:	10005a88 	andne	r5, r0, r8, lsl #21
10001e1c:	10005aa8 	andne	r5, r0, r8, lsr #21
10001e20:	10005ae0 	andne	r5, r0, r0, ror #21
10001e24:	10005b00 	andne	r5, r0, r0, lsl #22
10001e28:	10005b38 	andne	r5, r0, r8, lsr fp
10001e2c:	10005b58 	andne	r5, r0, r8, asr fp
10001e30:	100059bc 			; <UNDEFINED> instruction: 0x100059bc
10001e34:	10005a14 	andne	r5, r0, r4, lsl sl
10001e38:	10005a6c 	andne	r5, r0, ip, ror #20
10001e3c:	10005ac4 	andne	r5, r0, r4, asr #21
10001e40:	10005b1c 	andne	r5, r0, ip, lsl fp
10001e44:	10005b74 	andne	r5, r0, r4, ror fp

10001e48 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
10001e48:	f100 0308 	add.w	r3, r0, #8
10001e4c:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
10001e4e:	f04f 32ff 	mov.w	r2, #4294967295
10001e52:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
10001e54:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
10001e56:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
10001e58:	2300      	movs	r3, #0
10001e5a:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
10001e5c:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
10001e5e:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
10001e60:	4770      	bx	lr

10001e62 <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
10001e62:	2300      	movs	r3, #0
10001e64:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
10001e66:	4770      	bx	lr

10001e68 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
10001e68:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
10001e6a:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
10001e6c:	f1b5 3fff 	cmp.w	r5, #4294967295
10001e70:	d011      	beq.n	10001e96 <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
10001e72:	f100 0308 	add.w	r3, r0, #8
10001e76:	461c      	mov	r4, r3
10001e78:	685b      	ldr	r3, [r3, #4]
10001e7a:	681a      	ldr	r2, [r3, #0]
10001e7c:	42aa      	cmp	r2, r5
10001e7e:	d9fa      	bls.n	10001e76 <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
10001e80:	6863      	ldr	r3, [r4, #4]
10001e82:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
10001e84:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
10001e86:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
10001e88:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
10001e8a:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
10001e8c:	6803      	ldr	r3, [r0, #0]
10001e8e:	3301      	adds	r3, #1
10001e90:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
10001e92:	bc30      	pop	{r4, r5}
10001e94:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
10001e96:	6904      	ldr	r4, [r0, #16]
10001e98:	e7f2      	b.n	10001e80 <vListInsert+0x18>

10001e9a <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
10001e9a:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
10001e9c:	6841      	ldr	r1, [r0, #4]
10001e9e:	6882      	ldr	r2, [r0, #8]
10001ea0:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
10001ea2:	6841      	ldr	r1, [r0, #4]
10001ea4:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
10001ea6:	685a      	ldr	r2, [r3, #4]
10001ea8:	4282      	cmp	r2, r0
10001eaa:	d005      	beq.n	10001eb8 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
10001eac:	2200      	movs	r2, #0
10001eae:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
10001eb0:	6818      	ldr	r0, [r3, #0]
10001eb2:	3801      	subs	r0, #1
10001eb4:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
10001eb6:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
10001eb8:	6882      	ldr	r2, [r0, #8]
10001eba:	605a      	str	r2, [r3, #4]
10001ebc:	e7f6      	b.n	10001eac <uxListRemove+0x12>

10001ebe <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
10001ebe:	b510      	push	{r4, lr}
10001ec0:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
10001ec2:	f001 fb01 	bl	100034c8 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
10001ec6:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10001ec8:	b923      	cbnz	r3, 10001ed4 <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
10001eca:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
10001ecc:	f001 fb0a 	bl	100034e4 <vPortExitCritical>

    return xReturn;
}
10001ed0:	4620      	mov	r0, r4
10001ed2:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
10001ed4:	2400      	movs	r4, #0
10001ed6:	e7f9      	b.n	10001ecc <prvIsQueueEmpty+0xe>

10001ed8 <prvCopyDataToQueue>:
{
10001ed8:	b570      	push	{r4, r5, r6, lr}
10001eda:	4604      	mov	r4, r0
10001edc:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
10001ede:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
10001ee0:	6d02      	ldr	r2, [r0, #80]	; 0x50
10001ee2:	b95a      	cbnz	r2, 10001efc <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
10001ee4:	6803      	ldr	r3, [r0, #0]
10001ee6:	b11b      	cbz	r3, 10001ef0 <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
10001ee8:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
10001eea:	3601      	adds	r6, #1
10001eec:	64a6      	str	r6, [r4, #72]	; 0x48
}
10001eee:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
10001ef0:	6880      	ldr	r0, [r0, #8]
10001ef2:	f000 fed7 	bl	10002ca4 <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
10001ef6:	2300      	movs	r3, #0
10001ef8:	60a3      	str	r3, [r4, #8]
10001efa:	e7f6      	b.n	10001eea <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
10001efc:	b96d      	cbnz	r5, 10001f1a <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10001efe:	6840      	ldr	r0, [r0, #4]
10001f00:	f001 fc5c 	bl	100037bc <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
10001f04:	6d22      	ldr	r2, [r4, #80]	; 0x50
10001f06:	6863      	ldr	r3, [r4, #4]
10001f08:	4413      	add	r3, r2
10001f0a:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
10001f0c:	68a2      	ldr	r2, [r4, #8]
10001f0e:	4293      	cmp	r3, r2
10001f10:	d319      	bcc.n	10001f46 <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
10001f12:	6823      	ldr	r3, [r4, #0]
10001f14:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
10001f16:	4628      	mov	r0, r5
10001f18:	e7e7      	b.n	10001eea <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10001f1a:	68c0      	ldr	r0, [r0, #12]
10001f1c:	f001 fc4e 	bl	100037bc <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
10001f20:	6d22      	ldr	r2, [r4, #80]	; 0x50
10001f22:	4251      	negs	r1, r2
10001f24:	68e3      	ldr	r3, [r4, #12]
10001f26:	1a9b      	subs	r3, r3, r2
10001f28:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
10001f2a:	6822      	ldr	r2, [r4, #0]
10001f2c:	4293      	cmp	r3, r2
10001f2e:	d202      	bcs.n	10001f36 <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
10001f30:	68a3      	ldr	r3, [r4, #8]
10001f32:	440b      	add	r3, r1
10001f34:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
10001f36:	2d02      	cmp	r5, #2
10001f38:	d001      	beq.n	10001f3e <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
10001f3a:	2000      	movs	r0, #0
10001f3c:	e7d5      	b.n	10001eea <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
10001f3e:	b126      	cbz	r6, 10001f4a <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
10001f40:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
10001f42:	2000      	movs	r0, #0
10001f44:	e7d1      	b.n	10001eea <prvCopyDataToQueue+0x12>
10001f46:	4628      	mov	r0, r5
10001f48:	e7cf      	b.n	10001eea <prvCopyDataToQueue+0x12>
10001f4a:	2000      	movs	r0, #0
10001f4c:	e7cd      	b.n	10001eea <prvCopyDataToQueue+0x12>

10001f4e <prvCopyDataFromQueue>:
{
10001f4e:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
10001f50:	6d02      	ldr	r2, [r0, #80]	; 0x50
10001f52:	b16a      	cbz	r2, 10001f70 <prvCopyDataFromQueue+0x22>
{
10001f54:	b510      	push	{r4, lr}
10001f56:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
10001f58:	68d9      	ldr	r1, [r3, #12]
10001f5a:	4411      	add	r1, r2
10001f5c:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
10001f5e:	689c      	ldr	r4, [r3, #8]
10001f60:	42a1      	cmp	r1, r4
10001f62:	d301      	bcc.n	10001f68 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
10001f64:	6819      	ldr	r1, [r3, #0]
10001f66:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
10001f68:	68d9      	ldr	r1, [r3, #12]
10001f6a:	f001 fc27 	bl	100037bc <memcpy>
}
10001f6e:	bd10      	pop	{r4, pc}
10001f70:	4770      	bx	lr

10001f72 <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
10001f72:	b570      	push	{r4, r5, r6, lr}
10001f74:	b082      	sub	sp, #8
10001f76:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
10001f78:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
10001f7a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
10001f7c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
10001f7e:	429a      	cmp	r2, r3
10001f80:	d303      	bcc.n	10001f8a <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
10001f82:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
10001f84:	4628      	mov	r0, r5
10001f86:	b002      	add	sp, #8
10001f88:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
10001f8a:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
10001f8e:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
10001f90:	2200      	movs	r2, #0
10001f92:	a901      	add	r1, sp, #4
10001f94:	4620      	mov	r0, r4
10001f96:	f7ff ff9f 	bl	10001ed8 <prvCopyDataToQueue>
10001f9a:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
10001f9c:	f1b6 3fff 	cmp.w	r6, #4294967295
10001fa0:	d10a      	bne.n	10001fb8 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
10001fa2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10001fa4:	2b00      	cmp	r3, #0
10001fa6:	d0ed      	beq.n	10001f84 <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
10001fa8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10001fac:	f000 fd94 	bl	10002ad8 <xTaskRemoveFromEventList>
10001fb0:	2800      	cmp	r0, #0
10001fb2:	d0e7      	beq.n	10001f84 <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
10001fb4:	2501      	movs	r5, #1
        return xReturn;
10001fb6:	e7e5      	b.n	10001f84 <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
10001fb8:	f000 fb88 	bl	100026cc <uxTaskGetNumberOfTasks>
10001fbc:	4286      	cmp	r6, r0
10001fbe:	d2e1      	bcs.n	10001f84 <prvNotifyQueueSetContainer+0x12>
10001fc0:	3601      	adds	r6, #1
10001fc2:	b276      	sxtb	r6, r6
10001fc4:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
10001fc8:	e7dc      	b.n	10001f84 <prvNotifyQueueSetContainer+0x12>

10001fca <prvUnlockQueue>:
{
10001fca:	b538      	push	{r3, r4, r5, lr}
10001fcc:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
10001fce:	f001 fa7b 	bl	100034c8 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
10001fd2:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
10001fd6:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10001fd8:	e008      	b.n	10001fec <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
10001fda:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10001fdc:	b1b3      	cbz	r3, 1000200c <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
10001fde:	f105 002c 	add.w	r0, r5, #44	; 0x2c
10001fe2:	f000 fd79 	bl	10002ad8 <xTaskRemoveFromEventList>
10001fe6:	b970      	cbnz	r0, 10002006 <prvUnlockQueue+0x3c>
            --cTxLock;
10001fe8:	3c01      	subs	r4, #1
10001fea:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10001fec:	2c00      	cmp	r4, #0
10001fee:	dd0d      	ble.n	1000200c <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
10001ff0:	6dab      	ldr	r3, [r5, #88]	; 0x58
10001ff2:	2b00      	cmp	r3, #0
10001ff4:	d0f1      	beq.n	10001fda <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
10001ff6:	4628      	mov	r0, r5
10001ff8:	f7ff ffbb 	bl	10001f72 <prvNotifyQueueSetContainer>
10001ffc:	2800      	cmp	r0, #0
10001ffe:	d0f3      	beq.n	10001fe8 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
10002000:	f000 fe26 	bl	10002c50 <vTaskMissedYield>
10002004:	e7f0      	b.n	10001fe8 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
10002006:	f000 fe23 	bl	10002c50 <vTaskMissedYield>
1000200a:	e7ed      	b.n	10001fe8 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
1000200c:	23ff      	movs	r3, #255	; 0xff
1000200e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
10002012:	f001 fa67 	bl	100034e4 <vPortExitCritical>
    taskENTER_CRITICAL();
10002016:	f001 fa57 	bl	100034c8 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
1000201a:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
1000201e:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
10002020:	e001      	b.n	10002026 <prvUnlockQueue+0x5c>
                --cRxLock;
10002022:	3c01      	subs	r4, #1
10002024:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
10002026:	2c00      	cmp	r4, #0
10002028:	dd0a      	ble.n	10002040 <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1000202a:	692b      	ldr	r3, [r5, #16]
1000202c:	b143      	cbz	r3, 10002040 <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1000202e:	f105 0010 	add.w	r0, r5, #16
10002032:	f000 fd51 	bl	10002ad8 <xTaskRemoveFromEventList>
10002036:	2800      	cmp	r0, #0
10002038:	d0f3      	beq.n	10002022 <prvUnlockQueue+0x58>
                    vTaskMissedYield();
1000203a:	f000 fe09 	bl	10002c50 <vTaskMissedYield>
1000203e:	e7f0      	b.n	10002022 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
10002040:	23ff      	movs	r3, #255	; 0xff
10002042:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
10002046:	f001 fa4d 	bl	100034e4 <vPortExitCritical>
}
1000204a:	bd38      	pop	{r3, r4, r5, pc}

1000204c <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
1000204c:	2800      	cmp	r0, #0
1000204e:	d03c      	beq.n	100020ca <xQueueGenericReset+0x7e>
{
10002050:	b538      	push	{r3, r4, r5, lr}
10002052:	460d      	mov	r5, r1
10002054:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
10002056:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
10002058:	2b00      	cmp	r3, #0
1000205a:	d038      	beq.n	100020ce <xQueueGenericReset+0x82>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
1000205c:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000205e:	2100      	movs	r1, #0
10002060:	fba3 2302 	umull	r2, r3, r3, r2
10002064:	b913      	cbnz	r3, 1000206c <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
10002066:	b119      	cbz	r1, 10002070 <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
10002068:	2000      	movs	r0, #0
    return xReturn;
1000206a:	e031      	b.n	100020d0 <xQueueGenericReset+0x84>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
1000206c:	2101      	movs	r1, #1
1000206e:	e7fa      	b.n	10002066 <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
10002070:	f001 fa2a 	bl	100034c8 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
10002074:	6823      	ldr	r3, [r4, #0]
10002076:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
10002078:	6d21      	ldr	r1, [r4, #80]	; 0x50
1000207a:	fb01 3002 	mla	r0, r1, r2, r3
1000207e:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
10002080:	2000      	movs	r0, #0
10002082:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
10002084:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
10002086:	3a01      	subs	r2, #1
10002088:	fb02 3301 	mla	r3, r2, r1, r3
1000208c:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
1000208e:	23ff      	movs	r3, #255	; 0xff
10002090:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
10002094:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
10002098:	b975      	cbnz	r5, 100020b8 <xQueueGenericReset+0x6c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1000209a:	6923      	ldr	r3, [r4, #16]
1000209c:	b91b      	cbnz	r3, 100020a6 <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
1000209e:	f001 fa21 	bl	100034e4 <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
100020a2:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
100020a4:	e014      	b.n	100020d0 <xQueueGenericReset+0x84>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
100020a6:	f104 0010 	add.w	r0, r4, #16
100020aa:	f000 fd15 	bl	10002ad8 <xTaskRemoveFromEventList>
100020ae:	2800      	cmp	r0, #0
100020b0:	d0f5      	beq.n	1000209e <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
100020b2:	f001 f9fd 	bl	100034b0 <vPortYield>
100020b6:	e7f2      	b.n	1000209e <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
100020b8:	f104 0010 	add.w	r0, r4, #16
100020bc:	f7ff fec4 	bl	10001e48 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
100020c0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100020c4:	f7ff fec0 	bl	10001e48 <vListInitialise>
100020c8:	e7e9      	b.n	1000209e <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
100020ca:	2000      	movs	r0, #0
}
100020cc:	4770      	bx	lr
        xReturn = pdFAIL;
100020ce:	2000      	movs	r0, #0
}
100020d0:	bd38      	pop	{r3, r4, r5, pc}

100020d2 <prvInitialiseNewQueue>:
{
100020d2:	b510      	push	{r4, lr}
100020d4:	9c02      	ldr	r4, [sp, #8]
    if( uxItemSize == ( UBaseType_t ) 0 )
100020d6:	460b      	mov	r3, r1
100020d8:	b949      	cbnz	r1, 100020ee <prvInitialiseNewQueue+0x1c>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
100020da:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
100020dc:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
100020de:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
100020e0:	2101      	movs	r1, #1
100020e2:	4620      	mov	r0, r4
100020e4:	f7ff ffb2 	bl	1000204c <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
100020e8:	2300      	movs	r3, #0
100020ea:	65a3      	str	r3, [r4, #88]	; 0x58
}
100020ec:	bd10      	pop	{r4, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
100020ee:	6022      	str	r2, [r4, #0]
100020f0:	e7f4      	b.n	100020dc <prvInitialiseNewQueue+0xa>

100020f2 <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
100020f2:	b1b8      	cbz	r0, 10002124 <xQueueGenericCreateStatic+0x32>
    {
100020f4:	b510      	push	{r4, lr}
100020f6:	b082      	sub	sp, #8
100020f8:	461c      	mov	r4, r3
100020fa:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
100020fc:	b1a3      	cbz	r3, 10002128 <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
100020fe:	b102      	cbz	r2, 10002102 <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
10002100:	b1a1      	cbz	r1, 1000212c <xQueueGenericCreateStatic+0x3a>
10002102:	b15a      	cbz	r2, 1000211c <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
10002104:	2301      	movs	r3, #1
10002106:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
1000210a:	9400      	str	r4, [sp, #0]
1000210c:	f89d 3010 	ldrb.w	r3, [sp, #16]
10002110:	4660      	mov	r0, ip
10002112:	f7ff ffde 	bl	100020d2 <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
10002116:	4620      	mov	r0, r4
    }
10002118:	b002      	add	sp, #8
1000211a:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
1000211c:	2900      	cmp	r1, #0
1000211e:	d0f1      	beq.n	10002104 <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
10002120:	4610      	mov	r0, r2
        return pxNewQueue;
10002122:	e7f9      	b.n	10002118 <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
10002124:	2000      	movs	r0, #0
    }
10002126:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
10002128:	4618      	mov	r0, r3
1000212a:	e7f5      	b.n	10002118 <xQueueGenericCreateStatic+0x26>
1000212c:	2000      	movs	r0, #0
1000212e:	e7f3      	b.n	10002118 <xQueueGenericCreateStatic+0x26>

10002130 <xQueueReceive>:
{
10002130:	b5f0      	push	{r4, r5, r6, r7, lr}
10002132:	b085      	sub	sp, #20
10002134:	4604      	mov	r4, r0
10002136:	460f      	mov	r7, r1
10002138:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
1000213a:	2600      	movs	r6, #0
1000213c:	e036      	b.n	100021ac <xQueueReceive+0x7c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
1000213e:	4639      	mov	r1, r7
10002140:	4620      	mov	r0, r4
10002142:	f7ff ff04 	bl	10001f4e <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
10002146:	3d01      	subs	r5, #1
10002148:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1000214a:	6923      	ldr	r3, [r4, #16]
1000214c:	b923      	cbnz	r3, 10002158 <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
1000214e:	f001 f9c9 	bl	100034e4 <vPortExitCritical>
                return pdPASS;
10002152:	2001      	movs	r0, #1
}
10002154:	b005      	add	sp, #20
10002156:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002158:	f104 0010 	add.w	r0, r4, #16
1000215c:	f000 fcbc 	bl	10002ad8 <xTaskRemoveFromEventList>
10002160:	2800      	cmp	r0, #0
10002162:	d0f4      	beq.n	1000214e <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
10002164:	f001 f9a4 	bl	100034b0 <vPortYield>
10002168:	e7f1      	b.n	1000214e <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
1000216a:	f001 f9bb 	bl	100034e4 <vPortExitCritical>
                    return errQUEUE_EMPTY;
1000216e:	2000      	movs	r0, #0
10002170:	e7f0      	b.n	10002154 <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
10002172:	a802      	add	r0, sp, #8
10002174:	f000 fd22 	bl	10002bbc <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
10002178:	2601      	movs	r6, #1
1000217a:	e021      	b.n	100021c0 <xQueueReceive+0x90>
        prvLockQueue( pxQueue );
1000217c:	2300      	movs	r3, #0
1000217e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
10002182:	e029      	b.n	100021d8 <xQueueReceive+0xa8>
10002184:	2300      	movs	r3, #0
10002186:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
1000218a:	e02b      	b.n	100021e4 <xQueueReceive+0xb4>
                prvUnlockQueue( pxQueue );
1000218c:	4620      	mov	r0, r4
1000218e:	f7ff ff1c 	bl	10001fca <prvUnlockQueue>
                ( void ) xTaskResumeAll();
10002192:	f000 fb6f 	bl	10002874 <xTaskResumeAll>
10002196:	e009      	b.n	100021ac <xQueueReceive+0x7c>
            prvUnlockQueue( pxQueue );
10002198:	4620      	mov	r0, r4
1000219a:	f7ff ff16 	bl	10001fca <prvUnlockQueue>
            ( void ) xTaskResumeAll();
1000219e:	f000 fb69 	bl	10002874 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100021a2:	4620      	mov	r0, r4
100021a4:	f7ff fe8b 	bl	10001ebe <prvIsQueueEmpty>
100021a8:	2800      	cmp	r0, #0
100021aa:	d137      	bne.n	1000221c <xQueueReceive+0xec>
        taskENTER_CRITICAL();
100021ac:	f001 f98c 	bl	100034c8 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
100021b0:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
100021b2:	2d00      	cmp	r5, #0
100021b4:	d1c3      	bne.n	1000213e <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
100021b6:	9b01      	ldr	r3, [sp, #4]
100021b8:	2b00      	cmp	r3, #0
100021ba:	d0d6      	beq.n	1000216a <xQueueReceive+0x3a>
                else if( xEntryTimeSet == pdFALSE )
100021bc:	2e00      	cmp	r6, #0
100021be:	d0d8      	beq.n	10002172 <xQueueReceive+0x42>
        taskEXIT_CRITICAL();
100021c0:	f001 f990 	bl	100034e4 <vPortExitCritical>
        vTaskSuspendAll();
100021c4:	f000 fa74 	bl	100026b0 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
100021c8:	f001 f97e 	bl	100034c8 <vPortEnterCritical>
100021cc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
100021d0:	b25b      	sxtb	r3, r3
100021d2:	f1b3 3fff 	cmp.w	r3, #4294967295
100021d6:	d0d1      	beq.n	1000217c <xQueueReceive+0x4c>
100021d8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
100021dc:	b25b      	sxtb	r3, r3
100021de:	f1b3 3fff 	cmp.w	r3, #4294967295
100021e2:	d0cf      	beq.n	10002184 <xQueueReceive+0x54>
100021e4:	f001 f97e 	bl	100034e4 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
100021e8:	a901      	add	r1, sp, #4
100021ea:	a802      	add	r0, sp, #8
100021ec:	f000 fcf2 	bl	10002bd4 <xTaskCheckForTimeOut>
100021f0:	2800      	cmp	r0, #0
100021f2:	d1d1      	bne.n	10002198 <xQueueReceive+0x68>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100021f4:	4620      	mov	r0, r4
100021f6:	f7ff fe62 	bl	10001ebe <prvIsQueueEmpty>
100021fa:	2800      	cmp	r0, #0
100021fc:	d0c6      	beq.n	1000218c <xQueueReceive+0x5c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
100021fe:	9901      	ldr	r1, [sp, #4]
10002200:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002204:	f000 fc3c 	bl	10002a80 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
10002208:	4620      	mov	r0, r4
1000220a:	f7ff fede 	bl	10001fca <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
1000220e:	f000 fb31 	bl	10002874 <xTaskResumeAll>
10002212:	2800      	cmp	r0, #0
10002214:	d1ca      	bne.n	100021ac <xQueueReceive+0x7c>
                    taskYIELD_WITHIN_API();
10002216:	f001 f94b 	bl	100034b0 <vPortYield>
1000221a:	e7c7      	b.n	100021ac <xQueueReceive+0x7c>
                return errQUEUE_EMPTY;
1000221c:	2000      	movs	r0, #0
1000221e:	e799      	b.n	10002154 <xQueueReceive+0x24>

10002220 <vQueueWaitForMessageRestricted>:
    {
10002220:	b570      	push	{r4, r5, r6, lr}
10002222:	4604      	mov	r4, r0
10002224:	460d      	mov	r5, r1
10002226:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
10002228:	f001 f94e 	bl	100034c8 <vPortEnterCritical>
1000222c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
10002230:	b25b      	sxtb	r3, r3
10002232:	f1b3 3fff 	cmp.w	r3, #4294967295
10002236:	d00d      	beq.n	10002254 <vQueueWaitForMessageRestricted+0x34>
10002238:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
1000223c:	b25b      	sxtb	r3, r3
1000223e:	f1b3 3fff 	cmp.w	r3, #4294967295
10002242:	d00b      	beq.n	1000225c <vQueueWaitForMessageRestricted+0x3c>
10002244:	f001 f94e 	bl	100034e4 <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
10002248:	6ca3      	ldr	r3, [r4, #72]	; 0x48
1000224a:	b15b      	cbz	r3, 10002264 <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
1000224c:	4620      	mov	r0, r4
1000224e:	f7ff febc 	bl	10001fca <prvUnlockQueue>
    }
10002252:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
10002254:	2300      	movs	r3, #0
10002256:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
1000225a:	e7ed      	b.n	10002238 <vQueueWaitForMessageRestricted+0x18>
1000225c:	2300      	movs	r3, #0
1000225e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
10002262:	e7ef      	b.n	10002244 <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
10002264:	4632      	mov	r2, r6
10002266:	4629      	mov	r1, r5
10002268:	f104 002c 	add.w	r0, r4, #44	; 0x2c
1000226c:	f000 fc16 	bl	10002a9c <vTaskPlaceOnEventListRestricted>
10002270:	e7ec      	b.n	1000224c <vQueueWaitForMessageRestricted+0x2c>
	...

10002274 <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
10002274:	4b0a      	ldr	r3, [pc, #40]	; (100022a0 <prvGetExpectedIdleTime+0x2c>)
10002276:	681b      	ldr	r3, [r3, #0]
10002278:	b103      	cbz	r3, 1000227c <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
1000227a:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1000227c:	4a09      	ldr	r2, [pc, #36]	; (100022a4 <prvGetExpectedIdleTime+0x30>)
1000227e:	6812      	ldr	r2, [r2, #0]
10002280:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
10002282:	b950      	cbnz	r0, 1000229a <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
10002284:	4a08      	ldr	r2, [pc, #32]	; (100022a8 <prvGetExpectedIdleTime+0x34>)
10002286:	6812      	ldr	r2, [r2, #0]
10002288:	2a01      	cmp	r2, #1
1000228a:	d807      	bhi.n	1000229c <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
1000228c:	b933      	cbnz	r3, 1000229c <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
1000228e:	4b07      	ldr	r3, [pc, #28]	; (100022ac <prvGetExpectedIdleTime+0x38>)
10002290:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
10002292:	4b07      	ldr	r3, [pc, #28]	; (100022b0 <prvGetExpectedIdleTime+0x3c>)
10002294:	681b      	ldr	r3, [r3, #0]
10002296:	1ac0      	subs	r0, r0, r3
10002298:	4770      	bx	lr
            xReturn = 0;
1000229a:	2000      	movs	r0, #0
        }

        return xReturn;
    }
1000229c:	4770      	bx	lr
1000229e:	bf00      	nop
100022a0:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
100022a4:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100022a8:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100022ac:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
100022b0:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

100022b4 <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
100022b4:	4b07      	ldr	r3, [pc, #28]	; (100022d4 <prvResetNextTaskUnblockTime+0x20>)
100022b6:	681b      	ldr	r3, [r3, #0]
100022b8:	681b      	ldr	r3, [r3, #0]
100022ba:	b923      	cbnz	r3, 100022c6 <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
100022bc:	4b06      	ldr	r3, [pc, #24]	; (100022d8 <prvResetNextTaskUnblockTime+0x24>)
100022be:	f04f 32ff 	mov.w	r2, #4294967295
100022c2:	601a      	str	r2, [r3, #0]
100022c4:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
100022c6:	4b03      	ldr	r3, [pc, #12]	; (100022d4 <prvResetNextTaskUnblockTime+0x20>)
100022c8:	681b      	ldr	r3, [r3, #0]
100022ca:	68db      	ldr	r3, [r3, #12]
100022cc:	681a      	ldr	r2, [r3, #0]
100022ce:	4b02      	ldr	r3, [pc, #8]	; (100022d8 <prvResetNextTaskUnblockTime+0x24>)
100022d0:	601a      	str	r2, [r3, #0]
    }
}
100022d2:	4770      	bx	lr
100022d4:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
100022d8:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}

100022dc <prvInitialiseNewTask>:
{
100022dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100022e0:	4680      	mov	r8, r0
100022e2:	460d      	mov	r5, r1
100022e4:	4617      	mov	r7, r2
100022e6:	4699      	mov	r9, r3
100022e8:	9e08      	ldr	r6, [sp, #32]
100022ea:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
100022ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
100022f0:	0092      	lsls	r2, r2, #2
100022f2:	21a5      	movs	r1, #165	; 0xa5
100022f4:	6b20      	ldr	r0, [r4, #48]	; 0x30
100022f6:	f001 fad7 	bl	100038a8 <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
100022fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
100022fc:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
10002300:	3a01      	subs	r2, #1
10002302:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
10002306:	f027 0707 	bic.w	r7, r7, #7
    if( pcName != NULL )
1000230a:	b19d      	cbz	r5, 10002334 <prvInitialiseNewTask+0x58>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
1000230c:	f04f 0c00 	mov.w	ip, #0
10002310:	f1bc 0f03 	cmp.w	ip, #3
10002314:	d80b      	bhi.n	1000232e <prvInitialiseNewTask+0x52>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
10002316:	f815 200c 	ldrb.w	r2, [r5, ip]
1000231a:	eb04 030c 	add.w	r3, r4, ip
1000231e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
10002322:	f815 300c 	ldrb.w	r3, [r5, ip]
10002326:	b113      	cbz	r3, 1000232e <prvInitialiseNewTask+0x52>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
10002328:	f10c 0c01 	add.w	ip, ip, #1
1000232c:	e7f0      	b.n	10002310 <prvInitialiseNewTask+0x34>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
1000232e:	2300      	movs	r3, #0
10002330:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
10002334:	2e04      	cmp	r6, #4
10002336:	d900      	bls.n	1000233a <prvInitialiseNewTask+0x5e>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
10002338:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
1000233a:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
1000233c:	63a6      	str	r6, [r4, #56]	; 0x38
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
1000233e:	1d20      	adds	r0, r4, #4
10002340:	f7ff fd8f 	bl	10001e62 <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
10002344:	f104 0018 	add.w	r0, r4, #24
10002348:	f7ff fd8b 	bl	10001e62 <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
1000234c:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
1000234e:	f1c6 0605 	rsb	r6, r6, #5
10002352:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
10002354:	6264      	str	r4, [r4, #36]	; 0x24
                pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
10002356:	464b      	mov	r3, r9
10002358:	4642      	mov	r2, r8
1000235a:	6b21      	ldr	r1, [r4, #48]	; 0x30
1000235c:	4638      	mov	r0, r7
1000235e:	f001 f8eb 	bl	10003538 <pxPortInitialiseStack>
10002362:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
10002364:	f1ba 0f00 	cmp.w	sl, #0
10002368:	d001      	beq.n	1000236e <prvInitialiseNewTask+0x92>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1000236a:	f8ca 4000 	str.w	r4, [sl]
}
1000236e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10002372 <prvCreateStaticTask>:
    {
10002372:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002376:	b085      	sub	sp, #20
10002378:	9e0d      	ldr	r6, [sp, #52]	; 0x34
1000237a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
1000237c:	b1f4      	cbz	r4, 100023bc <prvCreateStaticTask+0x4a>
1000237e:	4605      	mov	r5, r0
10002380:	4689      	mov	r9, r1
10002382:	4690      	mov	r8, r2
10002384:	461f      	mov	r7, r3
10002386:	b1de      	cbz	r6, 100023c0 <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002388:	224c      	movs	r2, #76	; 0x4c
1000238a:	2100      	movs	r1, #0
1000238c:	4620      	mov	r0, r4
1000238e:	f001 fa8b 	bl	100038a8 <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
10002392:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
10002394:	2302      	movs	r3, #2
10002396:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
1000239a:	2300      	movs	r3, #0
1000239c:	9303      	str	r3, [sp, #12]
1000239e:	9402      	str	r4, [sp, #8]
100023a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100023a2:	9301      	str	r3, [sp, #4]
100023a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100023a6:	9300      	str	r3, [sp, #0]
100023a8:	463b      	mov	r3, r7
100023aa:	4642      	mov	r2, r8
100023ac:	4649      	mov	r1, r9
100023ae:	4628      	mov	r0, r5
100023b0:	f7ff ff94 	bl	100022dc <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
100023b4:	4620      	mov	r0, r4
    }
100023b6:	b005      	add	sp, #20
100023b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
100023bc:	4620      	mov	r0, r4
100023be:	e7fa      	b.n	100023b6 <prvCreateStaticTask+0x44>
100023c0:	4630      	mov	r0, r6
        return pxNewTCB;
100023c2:	e7f8      	b.n	100023b6 <prvCreateStaticTask+0x44>

100023c4 <prvInitialiseTaskLists>:
{
100023c4:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
100023c6:	2400      	movs	r4, #0
100023c8:	e007      	b.n	100023da <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
100023ca:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
100023ce:	0093      	lsls	r3, r2, #2
100023d0:	480e      	ldr	r0, [pc, #56]	; (1000240c <prvInitialiseTaskLists+0x48>)
100023d2:	4418      	add	r0, r3
100023d4:	f7ff fd38 	bl	10001e48 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
100023d8:	3401      	adds	r4, #1
100023da:	2c04      	cmp	r4, #4
100023dc:	d9f5      	bls.n	100023ca <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
100023de:	4d0c      	ldr	r5, [pc, #48]	; (10002410 <prvInitialiseTaskLists+0x4c>)
100023e0:	4628      	mov	r0, r5
100023e2:	f7ff fd31 	bl	10001e48 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
100023e6:	4c0b      	ldr	r4, [pc, #44]	; (10002414 <prvInitialiseTaskLists+0x50>)
100023e8:	4620      	mov	r0, r4
100023ea:	f7ff fd2d 	bl	10001e48 <vListInitialise>
    vListInitialise( &xPendingReadyList );
100023ee:	480a      	ldr	r0, [pc, #40]	; (10002418 <prvInitialiseTaskLists+0x54>)
100023f0:	f7ff fd2a 	bl	10001e48 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
100023f4:	4809      	ldr	r0, [pc, #36]	; (1000241c <prvInitialiseTaskLists+0x58>)
100023f6:	f7ff fd27 	bl	10001e48 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
100023fa:	4809      	ldr	r0, [pc, #36]	; (10002420 <prvInitialiseTaskLists+0x5c>)
100023fc:	f7ff fd24 	bl	10001e48 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
10002400:	4b08      	ldr	r3, [pc, #32]	; (10002424 <prvInitialiseTaskLists+0x60>)
10002402:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
10002404:	4b08      	ldr	r3, [pc, #32]	; (10002428 <prvInitialiseTaskLists+0x64>)
10002406:	601c      	str	r4, [r3, #0]
}
10002408:	bd38      	pop	{r3, r4, r5, pc}
1000240a:	bf00      	nop
1000240c:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002410:	38008a5c 	stmdacc	r0, {r2, r3, r4, r6, r9, fp, pc}
10002414:	38008a78 	stmdacc	r0, {r3, r4, r5, r6, r9, fp, pc}
10002418:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
1000241c:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
10002420:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
10002424:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
10002428:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

1000242c <prvAddNewTaskToReadyList>:
    {
1000242c:	b510      	push	{r4, lr}
1000242e:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
10002430:	f001 f84a 	bl	100034c8 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
10002434:	4a26      	ldr	r2, [pc, #152]	; (100024d0 <prvAddNewTaskToReadyList+0xa4>)
10002436:	6813      	ldr	r3, [r2, #0]
10002438:	3301      	adds	r3, #1
1000243a:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
1000243c:	4b25      	ldr	r3, [pc, #148]	; (100024d4 <prvAddNewTaskToReadyList+0xa8>)
1000243e:	681b      	ldr	r3, [r3, #0]
10002440:	b15b      	cbz	r3, 1000245a <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
10002442:	4b25      	ldr	r3, [pc, #148]	; (100024d8 <prvAddNewTaskToReadyList+0xac>)
10002444:	681b      	ldr	r3, [r3, #0]
10002446:	b96b      	cbnz	r3, 10002464 <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
10002448:	4b22      	ldr	r3, [pc, #136]	; (100024d4 <prvAddNewTaskToReadyList+0xa8>)
1000244a:	681b      	ldr	r3, [r3, #0]
1000244c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1000244e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002450:	429a      	cmp	r2, r3
10002452:	d807      	bhi.n	10002464 <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
10002454:	4b1f      	ldr	r3, [pc, #124]	; (100024d4 <prvAddNewTaskToReadyList+0xa8>)
10002456:	601c      	str	r4, [r3, #0]
10002458:	e004      	b.n	10002464 <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
1000245a:	4b1e      	ldr	r3, [pc, #120]	; (100024d4 <prvAddNewTaskToReadyList+0xa8>)
1000245c:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1000245e:	6813      	ldr	r3, [r2, #0]
10002460:	2b01      	cmp	r3, #1
10002462:	d02f      	beq.n	100024c4 <prvAddNewTaskToReadyList+0x98>
            uxTaskNumber++;
10002464:	4a1d      	ldr	r2, [pc, #116]	; (100024dc <prvAddNewTaskToReadyList+0xb0>)
10002466:	6813      	ldr	r3, [r2, #0]
10002468:	3301      	adds	r3, #1
1000246a:	6013      	str	r3, [r2, #0]
            prvAddTaskToReadyList( pxNewTCB );
1000246c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000246e:	4a1c      	ldr	r2, [pc, #112]	; (100024e0 <prvAddNewTaskToReadyList+0xb4>)
10002470:	6812      	ldr	r2, [r2, #0]
10002472:	4293      	cmp	r3, r2
10002474:	d901      	bls.n	1000247a <prvAddNewTaskToReadyList+0x4e>
10002476:	4a1a      	ldr	r2, [pc, #104]	; (100024e0 <prvAddNewTaskToReadyList+0xb4>)
10002478:	6013      	str	r3, [r2, #0]
1000247a:	4a1a      	ldr	r2, [pc, #104]	; (100024e4 <prvAddNewTaskToReadyList+0xb8>)
1000247c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002480:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002484:	685b      	ldr	r3, [r3, #4]
10002486:	60a3      	str	r3, [r4, #8]
10002488:	6898      	ldr	r0, [r3, #8]
1000248a:	60e0      	str	r0, [r4, #12]
1000248c:	1d21      	adds	r1, r4, #4
1000248e:	6041      	str	r1, [r0, #4]
10002490:	6099      	str	r1, [r3, #8]
10002492:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002494:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002498:	eb02 0081 	add.w	r0, r2, r1, lsl #2
1000249c:	6160      	str	r0, [r4, #20]
1000249e:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
100024a2:	3101      	adds	r1, #1
100024a4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100024a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
100024ac:	f001 f81a 	bl	100034e4 <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
100024b0:	4b09      	ldr	r3, [pc, #36]	; (100024d8 <prvAddNewTaskToReadyList+0xac>)
100024b2:	681b      	ldr	r3, [r3, #0]
100024b4:	b12b      	cbz	r3, 100024c2 <prvAddNewTaskToReadyList+0x96>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
100024b6:	4b07      	ldr	r3, [pc, #28]	; (100024d4 <prvAddNewTaskToReadyList+0xa8>)
100024b8:	681b      	ldr	r3, [r3, #0]
100024ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100024bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100024be:	429a      	cmp	r2, r3
100024c0:	d303      	bcc.n	100024ca <prvAddNewTaskToReadyList+0x9e>
    }
100024c2:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
100024c4:	f7ff ff7e 	bl	100023c4 <prvInitialiseTaskLists>
100024c8:	e7cc      	b.n	10002464 <prvAddNewTaskToReadyList+0x38>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
100024ca:	f000 fff1 	bl	100034b0 <vPortYield>
    }
100024ce:	e7f8      	b.n	100024c2 <prvAddNewTaskToReadyList+0x96>
100024d0:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}
100024d4:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100024d8:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
100024dc:	38008854 	stmdacc	r0, {r2, r4, r6, fp, pc}
100024e0:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
100024e4:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

100024e8 <prvCreateTask>:
    {
100024e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100024ec:	b085      	sub	sp, #20
100024ee:	4606      	mov	r6, r0
100024f0:	460f      	mov	r7, r1
100024f2:	4615      	mov	r5, r2
100024f4:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
100024f6:	0090      	lsls	r0, r2, #2
100024f8:	f000 fe94 	bl	10003224 <pvPortMalloc>
            if( pxStack != NULL )
100024fc:	4681      	mov	r9, r0
100024fe:	b310      	cbz	r0, 10002546 <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
10002500:	204c      	movs	r0, #76	; 0x4c
10002502:	f000 fe8f 	bl	10003224 <pvPortMalloc>
                if( pxNewTCB != NULL )
10002506:	4604      	mov	r4, r0
10002508:	b1c8      	cbz	r0, 1000253e <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
1000250a:	224c      	movs	r2, #76	; 0x4c
1000250c:	2100      	movs	r1, #0
1000250e:	f001 f9cb 	bl	100038a8 <memset>
                    pxNewTCB->pxStack = pxStack;
10002512:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
10002516:	b174      	cbz	r4, 10002536 <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
10002518:	2300      	movs	r3, #0
1000251a:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
1000251e:	9303      	str	r3, [sp, #12]
10002520:	9402      	str	r4, [sp, #8]
10002522:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10002524:	9301      	str	r3, [sp, #4]
10002526:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10002528:	9300      	str	r3, [sp, #0]
1000252a:	4643      	mov	r3, r8
1000252c:	462a      	mov	r2, r5
1000252e:	4639      	mov	r1, r7
10002530:	4630      	mov	r0, r6
10002532:	f7ff fed3 	bl	100022dc <prvInitialiseNewTask>
    }
10002536:	4620      	mov	r0, r4
10002538:	b005      	add	sp, #20
1000253a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
1000253e:	4648      	mov	r0, r9
10002540:	f000 feda 	bl	100032f8 <vPortFree>
10002544:	e7e7      	b.n	10002516 <prvCreateTask+0x2e>
                pxNewTCB = NULL;
10002546:	4604      	mov	r4, r0
        return pxNewTCB;
10002548:	e7f5      	b.n	10002536 <prvCreateTask+0x4e>

1000254a <prvDeleteTCB>:
    {
1000254a:	b510      	push	{r4, lr}
1000254c:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
1000254e:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
10002552:	b113      	cbz	r3, 1000255a <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
10002554:	2b01      	cmp	r3, #1
10002556:	d007      	beq.n	10002568 <prvDeleteTCB+0x1e>
    }
10002558:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
1000255a:	6b00      	ldr	r0, [r0, #48]	; 0x30
1000255c:	f000 fecc 	bl	100032f8 <vPortFree>
                vPortFree( pxTCB );
10002560:	4620      	mov	r0, r4
10002562:	f000 fec9 	bl	100032f8 <vPortFree>
10002566:	e7f7      	b.n	10002558 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
10002568:	f000 fec6 	bl	100032f8 <vPortFree>
    }
1000256c:	e7f4      	b.n	10002558 <prvDeleteTCB+0xe>
	...

10002570 <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
10002570:	4b0f      	ldr	r3, [pc, #60]	; (100025b0 <prvCheckTasksWaitingTermination+0x40>)
10002572:	681b      	ldr	r3, [r3, #0]
10002574:	b1d3      	cbz	r3, 100025ac <prvCheckTasksWaitingTermination+0x3c>
{
10002576:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
10002578:	f000 ffa6 	bl	100034c8 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
1000257c:	4b0d      	ldr	r3, [pc, #52]	; (100025b4 <prvCheckTasksWaitingTermination+0x44>)
1000257e:	68db      	ldr	r3, [r3, #12]
10002580:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
10002582:	1d20      	adds	r0, r4, #4
10002584:	f7ff fc89 	bl	10001e9a <uxListRemove>
                        --uxCurrentNumberOfTasks;
10002588:	4a0b      	ldr	r2, [pc, #44]	; (100025b8 <prvCheckTasksWaitingTermination+0x48>)
1000258a:	6813      	ldr	r3, [r2, #0]
1000258c:	3b01      	subs	r3, #1
1000258e:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
10002590:	4a07      	ldr	r2, [pc, #28]	; (100025b0 <prvCheckTasksWaitingTermination+0x40>)
10002592:	6813      	ldr	r3, [r2, #0]
10002594:	3b01      	subs	r3, #1
10002596:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
10002598:	f000 ffa4 	bl	100034e4 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
1000259c:	4620      	mov	r0, r4
1000259e:	f7ff ffd4 	bl	1000254a <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
100025a2:	4b03      	ldr	r3, [pc, #12]	; (100025b0 <prvCheckTasksWaitingTermination+0x40>)
100025a4:	681b      	ldr	r3, [r3, #0]
100025a6:	2b00      	cmp	r3, #0
100025a8:	d1e6      	bne.n	10002578 <prvCheckTasksWaitingTermination+0x8>
}
100025aa:	bd10      	pop	{r4, pc}
100025ac:	4770      	bx	lr
100025ae:	bf00      	nop
100025b0:	3800864c 	stmdacc	r0, {r2, r3, r6, r9, sl, pc}
100025b4:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
100025b8:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

100025bc <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
100025bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100025c0:	4604      	mov	r4, r0
100025c2:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
100025c4:	4b21      	ldr	r3, [pc, #132]	; (1000264c <prvAddCurrentTaskToDelayedList+0x90>)
100025c6:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
100025c8:	4b21      	ldr	r3, [pc, #132]	; (10002650 <prvAddCurrentTaskToDelayedList+0x94>)
100025ca:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
100025cc:	4b21      	ldr	r3, [pc, #132]	; (10002654 <prvAddCurrentTaskToDelayedList+0x98>)
100025ce:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
100025d2:	4b21      	ldr	r3, [pc, #132]	; (10002658 <prvAddCurrentTaskToDelayedList+0x9c>)
100025d4:	681a      	ldr	r2, [r3, #0]
100025d6:	2100      	movs	r1, #0
100025d8:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
100025dc:	6818      	ldr	r0, [r3, #0]
100025de:	3004      	adds	r0, #4
100025e0:	f7ff fc5b 	bl	10001e9a <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
100025e4:	f1b4 3fff 	cmp.w	r4, #4294967295
100025e8:	d00d      	beq.n	10002606 <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
100025ea:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
100025ec:	4b1a      	ldr	r3, [pc, #104]	; (10002658 <prvAddCurrentTaskToDelayedList+0x9c>)
100025ee:	681b      	ldr	r3, [r3, #0]
100025f0:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
100025f2:	42a6      	cmp	r6, r4
100025f4:	d91d      	bls.n	10002632 <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
100025f6:	4b18      	ldr	r3, [pc, #96]	; (10002658 <prvAddCurrentTaskToDelayedList+0x9c>)
100025f8:	6819      	ldr	r1, [r3, #0]
100025fa:	3104      	adds	r1, #4
100025fc:	4640      	mov	r0, r8
100025fe:	f7ff fc33 	bl	10001e68 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
10002602:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
10002606:	2d00      	cmp	r5, #0
10002608:	d0ef      	beq.n	100025ea <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
1000260a:	4a14      	ldr	r2, [pc, #80]	; (1000265c <prvAddCurrentTaskToDelayedList+0xa0>)
1000260c:	6851      	ldr	r1, [r2, #4]
1000260e:	4b12      	ldr	r3, [pc, #72]	; (10002658 <prvAddCurrentTaskToDelayedList+0x9c>)
10002610:	6818      	ldr	r0, [r3, #0]
10002612:	6081      	str	r1, [r0, #8]
10002614:	6818      	ldr	r0, [r3, #0]
10002616:	688c      	ldr	r4, [r1, #8]
10002618:	60c4      	str	r4, [r0, #12]
1000261a:	6818      	ldr	r0, [r3, #0]
1000261c:	3004      	adds	r0, #4
1000261e:	6060      	str	r0, [r4, #4]
10002620:	6818      	ldr	r0, [r3, #0]
10002622:	3004      	adds	r0, #4
10002624:	6088      	str	r0, [r1, #8]
10002626:	681b      	ldr	r3, [r3, #0]
10002628:	615a      	str	r2, [r3, #20]
1000262a:	6813      	ldr	r3, [r2, #0]
1000262c:	3301      	adds	r3, #1
1000262e:	6013      	str	r3, [r2, #0]
10002630:	e7e7      	b.n	10002602 <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
10002632:	4b09      	ldr	r3, [pc, #36]	; (10002658 <prvAddCurrentTaskToDelayedList+0x9c>)
10002634:	6819      	ldr	r1, [r3, #0]
10002636:	3104      	adds	r1, #4
10002638:	4638      	mov	r0, r7
1000263a:	f7ff fc15 	bl	10001e68 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
1000263e:	4b08      	ldr	r3, [pc, #32]	; (10002660 <prvAddCurrentTaskToDelayedList+0xa4>)
10002640:	681b      	ldr	r3, [r3, #0]
10002642:	42a3      	cmp	r3, r4
10002644:	d9dd      	bls.n	10002602 <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
10002646:	4b06      	ldr	r3, [pc, #24]	; (10002660 <prvAddCurrentTaskToDelayedList+0xa4>)
10002648:	601c      	str	r4, [r3, #0]
}
1000264a:	e7da      	b.n	10002602 <prvAddCurrentTaskToDelayedList+0x46>
1000264c:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002650:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
10002654:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002658:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
1000265c:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
10002660:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}

10002664 <xTaskCreateStatic>:
    {
10002664:	b510      	push	{r4, lr}
10002666:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
10002668:	2400      	movs	r4, #0
1000266a:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
1000266c:	ac05      	add	r4, sp, #20
1000266e:	9403      	str	r4, [sp, #12]
10002670:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10002672:	9402      	str	r4, [sp, #8]
10002674:	9c09      	ldr	r4, [sp, #36]	; 0x24
10002676:	9401      	str	r4, [sp, #4]
10002678:	9c08      	ldr	r4, [sp, #32]
1000267a:	9400      	str	r4, [sp, #0]
1000267c:	f7ff fe79 	bl	10002372 <prvCreateStaticTask>
        if( pxNewTCB != NULL )
10002680:	b108      	cbz	r0, 10002686 <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
10002682:	f7ff fed3 	bl	1000242c <prvAddNewTaskToReadyList>
    }
10002686:	9805      	ldr	r0, [sp, #20]
10002688:	b006      	add	sp, #24
1000268a:	bd10      	pop	{r4, pc}

1000268c <xTaskCreate>:
    {
1000268c:	b510      	push	{r4, lr}
1000268e:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
10002690:	9c05      	ldr	r4, [sp, #20]
10002692:	9401      	str	r4, [sp, #4]
10002694:	9c04      	ldr	r4, [sp, #16]
10002696:	9400      	str	r4, [sp, #0]
10002698:	f7ff ff26 	bl	100024e8 <prvCreateTask>
        if( pxNewTCB != NULL )
1000269c:	b120      	cbz	r0, 100026a8 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
1000269e:	f7ff fec5 	bl	1000242c <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
100026a2:	2001      	movs	r0, #1
    }
100026a4:	b002      	add	sp, #8
100026a6:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
100026a8:	f04f 30ff 	mov.w	r0, #4294967295
        return xReturn;
100026ac:	e7fa      	b.n	100026a4 <xTaskCreate+0x18>
	...

100026b0 <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
100026b0:	4a02      	ldr	r2, [pc, #8]	; (100026bc <vTaskSuspendAll+0xc>)
100026b2:	6813      	ldr	r3, [r2, #0]
100026b4:	3301      	adds	r3, #1
100026b6:	6013      	str	r3, [r2, #0]
}
100026b8:	4770      	bx	lr
100026ba:	bf00      	nop
100026bc:	38008850 	stmdacc	r0, {r4, r6, fp, pc}

100026c0 <xTaskGetTickCount>:
        xTicks = xTickCount;
100026c0:	4b01      	ldr	r3, [pc, #4]	; (100026c8 <xTaskGetTickCount+0x8>)
100026c2:	6818      	ldr	r0, [r3, #0]
}
100026c4:	4770      	bx	lr
100026c6:	bf00      	nop
100026c8:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

100026cc <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
100026cc:	4b01      	ldr	r3, [pc, #4]	; (100026d4 <uxTaskGetNumberOfTasks+0x8>)
100026ce:	6818      	ldr	r0, [r3, #0]
}
100026d0:	4770      	bx	lr
100026d2:	bf00      	nop
100026d4:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

100026d8 <vTaskStepTick>:
    {
100026d8:	b510      	push	{r4, lr}
100026da:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
100026dc:	4b0a      	ldr	r3, [pc, #40]	; (10002708 <vTaskStepTick+0x30>)
100026de:	681b      	ldr	r3, [r3, #0]
100026e0:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
100026e2:	4a0a      	ldr	r2, [pc, #40]	; (1000270c <vTaskStepTick+0x34>)
100026e4:	6812      	ldr	r2, [r2, #0]
100026e6:	429a      	cmp	r2, r3
100026e8:	d004      	beq.n	100026f4 <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
100026ea:	4b07      	ldr	r3, [pc, #28]	; (10002708 <vTaskStepTick+0x30>)
100026ec:	6818      	ldr	r0, [r3, #0]
100026ee:	4404      	add	r4, r0
100026f0:	601c      	str	r4, [r3, #0]
    }
100026f2:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
100026f4:	f000 fee8 	bl	100034c8 <vPortEnterCritical>
                xPendedTicks++;
100026f8:	4a05      	ldr	r2, [pc, #20]	; (10002710 <vTaskStepTick+0x38>)
100026fa:	6813      	ldr	r3, [r2, #0]
100026fc:	3301      	adds	r3, #1
100026fe:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
10002700:	f000 fef0 	bl	100034e4 <vPortExitCritical>
            xTicksToJump--;
10002704:	3c01      	subs	r4, #1
10002706:	e7f0      	b.n	100026ea <vTaskStepTick+0x12>
10002708:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
1000270c:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002710:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002714 <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002714:	4b4c      	ldr	r3, [pc, #304]	; (10002848 <xTaskIncrementTick+0x134>)
10002716:	681b      	ldr	r3, [r3, #0]
10002718:	2b00      	cmp	r3, #0
1000271a:	f040 808d 	bne.w	10002838 <xTaskIncrementTick+0x124>
{
1000271e:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
10002720:	4b4a      	ldr	r3, [pc, #296]	; (1000284c <xTaskIncrementTick+0x138>)
10002722:	681c      	ldr	r4, [r3, #0]
10002724:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
10002726:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
10002728:	b1a4      	cbz	r4, 10002754 <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
1000272a:	4b49      	ldr	r3, [pc, #292]	; (10002850 <xTaskIncrementTick+0x13c>)
1000272c:	681b      	ldr	r3, [r3, #0]
1000272e:	42a3      	cmp	r3, r4
10002730:	d91d      	bls.n	1000276e <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
10002732:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
10002734:	4b47      	ldr	r3, [pc, #284]	; (10002854 <xTaskIncrementTick+0x140>)
10002736:	681b      	ldr	r3, [r3, #0]
10002738:	6adb      	ldr	r3, [r3, #44]	; 0x2c
1000273a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
1000273e:	009a      	lsls	r2, r3, #2
10002740:	4b45      	ldr	r3, [pc, #276]	; (10002858 <xTaskIncrementTick+0x144>)
10002742:	589b      	ldr	r3, [r3, r2]
10002744:	2b01      	cmp	r3, #1
10002746:	d900      	bls.n	1000274a <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
10002748:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
1000274a:	4b44      	ldr	r3, [pc, #272]	; (1000285c <xTaskIncrementTick+0x148>)
1000274c:	681b      	ldr	r3, [r3, #0]
1000274e:	2b00      	cmp	r3, #0
10002750:	d178      	bne.n	10002844 <xTaskIncrementTick+0x130>
}
10002752:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
10002754:	4a42      	ldr	r2, [pc, #264]	; (10002860 <xTaskIncrementTick+0x14c>)
10002756:	6811      	ldr	r1, [r2, #0]
10002758:	4b42      	ldr	r3, [pc, #264]	; (10002864 <xTaskIncrementTick+0x150>)
1000275a:	6818      	ldr	r0, [r3, #0]
1000275c:	6010      	str	r0, [r2, #0]
1000275e:	6019      	str	r1, [r3, #0]
10002760:	4a41      	ldr	r2, [pc, #260]	; (10002868 <xTaskIncrementTick+0x154>)
10002762:	6813      	ldr	r3, [r2, #0]
10002764:	3301      	adds	r3, #1
10002766:	6013      	str	r3, [r2, #0]
10002768:	f7ff fda4 	bl	100022b4 <prvResetNextTaskUnblockTime>
1000276c:	e7dd      	b.n	1000272a <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
1000276e:	2000      	movs	r0, #0
10002770:	e037      	b.n	100027e2 <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
10002772:	4b37      	ldr	r3, [pc, #220]	; (10002850 <xTaskIncrementTick+0x13c>)
10002774:	f04f 32ff 	mov.w	r2, #4294967295
10002778:	601a      	str	r2, [r3, #0]
                    break;
1000277a:	e7db      	b.n	10002734 <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
1000277c:	4b34      	ldr	r3, [pc, #208]	; (10002850 <xTaskIncrementTick+0x13c>)
1000277e:	601a      	str	r2, [r3, #0]
                        break;
10002780:	e7d8      	b.n	10002734 <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002782:	68d9      	ldr	r1, [r3, #12]
10002784:	6051      	str	r1, [r2, #4]
10002786:	e042      	b.n	1000280e <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002788:	2100      	movs	r1, #0
1000278a:	6299      	str	r1, [r3, #40]	; 0x28
1000278c:	6811      	ldr	r1, [r2, #0]
1000278e:	3901      	subs	r1, #1
10002790:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
10002792:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002794:	4935      	ldr	r1, [pc, #212]	; (1000286c <xTaskIncrementTick+0x158>)
10002796:	6809      	ldr	r1, [r1, #0]
10002798:	428a      	cmp	r2, r1
1000279a:	d901      	bls.n	100027a0 <xTaskIncrementTick+0x8c>
1000279c:	4933      	ldr	r1, [pc, #204]	; (1000286c <xTaskIncrementTick+0x158>)
1000279e:	600a      	str	r2, [r1, #0]
100027a0:	492d      	ldr	r1, [pc, #180]	; (10002858 <xTaskIncrementTick+0x144>)
100027a2:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
100027a6:	ea4f 0c82 	mov.w	ip, r2, lsl #2
100027aa:	448c      	add	ip, r1
100027ac:	f8dc 2004 	ldr.w	r2, [ip, #4]
100027b0:	609a      	str	r2, [r3, #8]
100027b2:	6896      	ldr	r6, [r2, #8]
100027b4:	60de      	str	r6, [r3, #12]
100027b6:	6075      	str	r5, [r6, #4]
100027b8:	6095      	str	r5, [r2, #8]
100027ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100027bc:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
100027c0:	ea4f 058c 	mov.w	r5, ip, lsl #2
100027c4:	194e      	adds	r6, r1, r5
100027c6:	615e      	str	r6, [r3, #20]
100027c8:	594d      	ldr	r5, [r1, r5]
100027ca:	3501      	adds	r5, #1
100027cc:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
100027d0:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
100027d4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100027d6:	4b1f      	ldr	r3, [pc, #124]	; (10002854 <xTaskIncrementTick+0x140>)
100027d8:	681b      	ldr	r3, [r3, #0]
100027da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
100027dc:	429a      	cmp	r2, r3
100027de:	d900      	bls.n	100027e2 <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
100027e0:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
100027e2:	4b1f      	ldr	r3, [pc, #124]	; (10002860 <xTaskIncrementTick+0x14c>)
100027e4:	681b      	ldr	r3, [r3, #0]
100027e6:	681b      	ldr	r3, [r3, #0]
100027e8:	2b00      	cmp	r3, #0
100027ea:	d0c2      	beq.n	10002772 <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
100027ec:	4b1c      	ldr	r3, [pc, #112]	; (10002860 <xTaskIncrementTick+0x14c>)
100027ee:	681b      	ldr	r3, [r3, #0]
100027f0:	68db      	ldr	r3, [r3, #12]
100027f2:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
100027f4:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
100027f6:	4294      	cmp	r4, r2
100027f8:	d3c0      	bcc.n	1000277c <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100027fa:	695a      	ldr	r2, [r3, #20]
100027fc:	689d      	ldr	r5, [r3, #8]
100027fe:	68d9      	ldr	r1, [r3, #12]
10002800:	60a9      	str	r1, [r5, #8]
10002802:	689d      	ldr	r5, [r3, #8]
10002804:	604d      	str	r5, [r1, #4]
10002806:	6851      	ldr	r1, [r2, #4]
10002808:	1d1d      	adds	r5, r3, #4
1000280a:	42a9      	cmp	r1, r5
1000280c:	d0b9      	beq.n	10002782 <xTaskIncrementTick+0x6e>
1000280e:	2100      	movs	r1, #0
10002810:	6159      	str	r1, [r3, #20]
10002812:	6811      	ldr	r1, [r2, #0]
10002814:	3901      	subs	r1, #1
10002816:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
10002818:	6a9a      	ldr	r2, [r3, #40]	; 0x28
1000281a:	2a00      	cmp	r2, #0
1000281c:	d0b9      	beq.n	10002792 <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
1000281e:	69de      	ldr	r6, [r3, #28]
10002820:	6a19      	ldr	r1, [r3, #32]
10002822:	60b1      	str	r1, [r6, #8]
10002824:	69de      	ldr	r6, [r3, #28]
10002826:	604e      	str	r6, [r1, #4]
10002828:	6856      	ldr	r6, [r2, #4]
1000282a:	f103 0118 	add.w	r1, r3, #24
1000282e:	428e      	cmp	r6, r1
10002830:	d1aa      	bne.n	10002788 <xTaskIncrementTick+0x74>
10002832:	6a19      	ldr	r1, [r3, #32]
10002834:	6051      	str	r1, [r2, #4]
10002836:	e7a7      	b.n	10002788 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
10002838:	4a0d      	ldr	r2, [pc, #52]	; (10002870 <xTaskIncrementTick+0x15c>)
1000283a:	6813      	ldr	r3, [r2, #0]
1000283c:	3301      	adds	r3, #1
1000283e:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
10002840:	2000      	movs	r0, #0
}
10002842:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
10002844:	2001      	movs	r0, #1
    return xSwitchRequired;
10002846:	e784      	b.n	10002752 <xTaskIncrementTick+0x3e>
10002848:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
1000284c:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002850:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002854:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002858:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
1000285c:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002860:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
10002864:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002868:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
1000286c:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002870:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002874 <xTaskResumeAll>:
{
10002874:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
10002876:	f000 fe27 	bl	100034c8 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
1000287a:	4b42      	ldr	r3, [pc, #264]	; (10002984 <xTaskResumeAll+0x110>)
1000287c:	681a      	ldr	r2, [r3, #0]
1000287e:	3a01      	subs	r2, #1
10002880:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002882:	681b      	ldr	r3, [r3, #0]
10002884:	2b00      	cmp	r3, #0
10002886:	d177      	bne.n	10002978 <xTaskResumeAll+0x104>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
10002888:	4b3f      	ldr	r3, [pc, #252]	; (10002988 <xTaskResumeAll+0x114>)
1000288a:	681b      	ldr	r3, [r3, #0]
1000288c:	b93b      	cbnz	r3, 1000289e <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
1000288e:	2400      	movs	r4, #0
10002890:	e073      	b.n	1000297a <xTaskResumeAll+0x106>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002892:	6a19      	ldr	r1, [r3, #32]
10002894:	6051      	str	r1, [r2, #4]
10002896:	e015      	b.n	100028c4 <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002898:	68d9      	ldr	r1, [r3, #12]
1000289a:	6051      	str	r1, [r2, #4]
1000289c:	e021      	b.n	100028e2 <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
1000289e:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
100028a0:	4a3a      	ldr	r2, [pc, #232]	; (1000298c <xTaskResumeAll+0x118>)
100028a2:	6812      	ldr	r2, [r2, #0]
100028a4:	2a00      	cmp	r2, #0
100028a6:	d04a      	beq.n	1000293e <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
100028a8:	4b38      	ldr	r3, [pc, #224]	; (1000298c <xTaskResumeAll+0x118>)
100028aa:	68db      	ldr	r3, [r3, #12]
100028ac:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
100028ae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
100028b0:	69d8      	ldr	r0, [r3, #28]
100028b2:	6a19      	ldr	r1, [r3, #32]
100028b4:	6081      	str	r1, [r0, #8]
100028b6:	69d8      	ldr	r0, [r3, #28]
100028b8:	6048      	str	r0, [r1, #4]
100028ba:	6850      	ldr	r0, [r2, #4]
100028bc:	f103 0118 	add.w	r1, r3, #24
100028c0:	4288      	cmp	r0, r1
100028c2:	d0e6      	beq.n	10002892 <xTaskResumeAll+0x1e>
100028c4:	2100      	movs	r1, #0
100028c6:	6299      	str	r1, [r3, #40]	; 0x28
100028c8:	6811      	ldr	r1, [r2, #0]
100028ca:	3901      	subs	r1, #1
100028cc:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100028ce:	695a      	ldr	r2, [r3, #20]
100028d0:	6898      	ldr	r0, [r3, #8]
100028d2:	68d9      	ldr	r1, [r3, #12]
100028d4:	6081      	str	r1, [r0, #8]
100028d6:	6898      	ldr	r0, [r3, #8]
100028d8:	6048      	str	r0, [r1, #4]
100028da:	6851      	ldr	r1, [r2, #4]
100028dc:	1d18      	adds	r0, r3, #4
100028de:	4281      	cmp	r1, r0
100028e0:	d0da      	beq.n	10002898 <xTaskResumeAll+0x24>
100028e2:	2100      	movs	r1, #0
100028e4:	6159      	str	r1, [r3, #20]
100028e6:	6811      	ldr	r1, [r2, #0]
100028e8:	3901      	subs	r1, #1
100028ea:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
100028ec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100028ee:	4928      	ldr	r1, [pc, #160]	; (10002990 <xTaskResumeAll+0x11c>)
100028f0:	6809      	ldr	r1, [r1, #0]
100028f2:	428a      	cmp	r2, r1
100028f4:	d901      	bls.n	100028fa <xTaskResumeAll+0x86>
100028f6:	4926      	ldr	r1, [pc, #152]	; (10002990 <xTaskResumeAll+0x11c>)
100028f8:	600a      	str	r2, [r1, #0]
100028fa:	4926      	ldr	r1, [pc, #152]	; (10002994 <xTaskResumeAll+0x120>)
100028fc:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002900:	eb01 0282 	add.w	r2, r1, r2, lsl #2
10002904:	6852      	ldr	r2, [r2, #4]
10002906:	609a      	str	r2, [r3, #8]
10002908:	6894      	ldr	r4, [r2, #8]
1000290a:	60dc      	str	r4, [r3, #12]
1000290c:	6060      	str	r0, [r4, #4]
1000290e:	6090      	str	r0, [r2, #8]
10002910:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002912:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
10002916:	eb01 0480 	add.w	r4, r1, r0, lsl #2
1000291a:	615c      	str	r4, [r3, #20]
1000291c:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
10002920:	3001      	adds	r0, #1
10002922:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002926:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
1000292a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
1000292c:	4a1a      	ldr	r2, [pc, #104]	; (10002998 <xTaskResumeAll+0x124>)
1000292e:	6812      	ldr	r2, [r2, #0]
10002930:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
10002932:	4291      	cmp	r1, r2
10002934:	d9b4      	bls.n	100028a0 <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
10002936:	4a19      	ldr	r2, [pc, #100]	; (1000299c <xTaskResumeAll+0x128>)
10002938:	2101      	movs	r1, #1
1000293a:	6011      	str	r1, [r2, #0]
1000293c:	e7b0      	b.n	100028a0 <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
1000293e:	b10b      	cbz	r3, 10002944 <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
10002940:	f7ff fcb8 	bl	100022b4 <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
10002944:	4b16      	ldr	r3, [pc, #88]	; (100029a0 <xTaskResumeAll+0x12c>)
10002946:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
10002948:	b954      	cbnz	r4, 10002960 <xTaskResumeAll+0xec>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
1000294a:	4b14      	ldr	r3, [pc, #80]	; (1000299c <xTaskResumeAll+0x128>)
1000294c:	681c      	ldr	r4, [r3, #0]
1000294e:	b1a4      	cbz	r4, 1000297a <xTaskResumeAll+0x106>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
10002950:	4b11      	ldr	r3, [pc, #68]	; (10002998 <xTaskResumeAll+0x124>)
10002952:	681b      	ldr	r3, [r3, #0]
10002954:	f000 fdac 	bl	100034b0 <vPortYield>
                            xAlreadyYielded = pdTRUE;
10002958:	2401      	movs	r4, #1
1000295a:	e00e      	b.n	1000297a <xTaskResumeAll+0x106>
                            } while( xPendedCounts > ( TickType_t ) 0U );
1000295c:	3c01      	subs	r4, #1
1000295e:	d007      	beq.n	10002970 <xTaskResumeAll+0xfc>
                                if( xTaskIncrementTick() != pdFALSE )
10002960:	f7ff fed8 	bl	10002714 <xTaskIncrementTick>
10002964:	2800      	cmp	r0, #0
10002966:	d0f9      	beq.n	1000295c <xTaskResumeAll+0xe8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
10002968:	4b0c      	ldr	r3, [pc, #48]	; (1000299c <xTaskResumeAll+0x128>)
1000296a:	2201      	movs	r2, #1
1000296c:	601a      	str	r2, [r3, #0]
1000296e:	e7f5      	b.n	1000295c <xTaskResumeAll+0xe8>
                            xPendedTicks = 0;
10002970:	4b0b      	ldr	r3, [pc, #44]	; (100029a0 <xTaskResumeAll+0x12c>)
10002972:	2200      	movs	r2, #0
10002974:	601a      	str	r2, [r3, #0]
10002976:	e7e8      	b.n	1000294a <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
10002978:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
1000297a:	f000 fdb3 	bl	100034e4 <vPortExitCritical>
}
1000297e:	4620      	mov	r0, r4
10002980:	bd10      	pop	{r4, pc}
10002982:	bf00      	nop
10002984:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002988:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}
1000298c:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002990:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002994:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002998:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
1000299c:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
100029a0:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

100029a4 <vTaskDelay>:
    {
100029a4:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
100029a6:	b148      	cbz	r0, 100029bc <vTaskDelay+0x18>
100029a8:	4604      	mov	r4, r0
            vTaskSuspendAll();
100029aa:	f7ff fe81 	bl	100026b0 <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
100029ae:	2100      	movs	r1, #0
100029b0:	4620      	mov	r0, r4
100029b2:	f7ff fe03 	bl	100025bc <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
100029b6:	f7ff ff5d 	bl	10002874 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
100029ba:	b908      	cbnz	r0, 100029c0 <vTaskDelay+0x1c>
            taskYIELD_WITHIN_API();
100029bc:	f000 fd78 	bl	100034b0 <vPortYield>
    }
100029c0:	bd10      	pop	{r4, pc}
	...

100029c4 <prvIdleTask>:
{
100029c4:	b508      	push	{r3, lr}
100029c6:	e003      	b.n	100029d0 <prvIdleTask+0xc>
            xExpectedIdleTime = prvGetExpectedIdleTime();
100029c8:	f7ff fc54 	bl	10002274 <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
100029cc:	2801      	cmp	r0, #1
100029ce:	d808      	bhi.n	100029e2 <prvIdleTask+0x1e>
        prvCheckTasksWaitingTermination();
100029d0:	f7ff fdce 	bl	10002570 <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
100029d4:	4b08      	ldr	r3, [pc, #32]	; (100029f8 <prvIdleTask+0x34>)
100029d6:	681b      	ldr	r3, [r3, #0]
100029d8:	2b01      	cmp	r3, #1
100029da:	d9f5      	bls.n	100029c8 <prvIdleTask+0x4>
                taskYIELD();
100029dc:	f000 fd68 	bl	100034b0 <vPortYield>
100029e0:	e7f2      	b.n	100029c8 <prvIdleTask+0x4>
                vTaskSuspendAll();
100029e2:	f7ff fe65 	bl	100026b0 <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
100029e6:	f7ff fc45 	bl	10002274 <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
100029ea:	2801      	cmp	r0, #1
100029ec:	d901      	bls.n	100029f2 <prvIdleTask+0x2e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
100029ee:	f000 fcb7 	bl	10003360 <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
100029f2:	f7ff ff3f 	bl	10002874 <xTaskResumeAll>
100029f6:	e7eb      	b.n	100029d0 <prvIdleTask+0xc>
100029f8:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

100029fc <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
100029fc:	4b1b      	ldr	r3, [pc, #108]	; (10002a6c <vTaskSwitchContext+0x70>)
100029fe:	681b      	ldr	r3, [r3, #0]
10002a00:	b11b      	cbz	r3, 10002a0a <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
10002a02:	4b1b      	ldr	r3, [pc, #108]	; (10002a70 <vTaskSwitchContext+0x74>)
10002a04:	2201      	movs	r2, #1
10002a06:	601a      	str	r2, [r3, #0]
10002a08:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
10002a0a:	4b19      	ldr	r3, [pc, #100]	; (10002a70 <vTaskSwitchContext+0x74>)
10002a0c:	2200      	movs	r2, #0
10002a0e:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002a10:	4b18      	ldr	r3, [pc, #96]	; (10002a74 <vTaskSwitchContext+0x78>)
10002a12:	681b      	ldr	r3, [r3, #0]
10002a14:	e000      	b.n	10002a18 <vTaskSwitchContext+0x1c>
10002a16:	3b01      	subs	r3, #1
10002a18:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002a1c:	008a      	lsls	r2, r1, #2
10002a1e:	4916      	ldr	r1, [pc, #88]	; (10002a78 <vTaskSwitchContext+0x7c>)
10002a20:	588a      	ldr	r2, [r1, r2]
10002a22:	2a00      	cmp	r2, #0
10002a24:	d0f7      	beq.n	10002a16 <vTaskSwitchContext+0x1a>
10002a26:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
10002a2a:	0082      	lsls	r2, r0, #2
10002a2c:	440a      	add	r2, r1
10002a2e:	6850      	ldr	r0, [r2, #4]
10002a30:	6840      	ldr	r0, [r0, #4]
10002a32:	6050      	str	r0, [r2, #4]
10002a34:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
10002a38:	ea4f 028c 	mov.w	r2, ip, lsl #2
10002a3c:	3208      	adds	r2, #8
10002a3e:	4411      	add	r1, r2
10002a40:	4288      	cmp	r0, r1
10002a42:	d00c      	beq.n	10002a5e <vTaskSwitchContext+0x62>
10002a44:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
10002a48:	0091      	lsls	r1, r2, #2
10002a4a:	4a0b      	ldr	r2, [pc, #44]	; (10002a78 <vTaskSwitchContext+0x7c>)
10002a4c:	440a      	add	r2, r1
10002a4e:	6852      	ldr	r2, [r2, #4]
10002a50:	68d1      	ldr	r1, [r2, #12]
10002a52:	4a0a      	ldr	r2, [pc, #40]	; (10002a7c <vTaskSwitchContext+0x80>)
10002a54:	6011      	str	r1, [r2, #0]
10002a56:	4907      	ldr	r1, [pc, #28]	; (10002a74 <vTaskSwitchContext+0x78>)
10002a58:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
10002a5a:	6813      	ldr	r3, [r2, #0]
    }
10002a5c:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002a5e:	4662      	mov	r2, ip
10002a60:	0091      	lsls	r1, r2, #2
10002a62:	4a05      	ldr	r2, [pc, #20]	; (10002a78 <vTaskSwitchContext+0x7c>)
10002a64:	440a      	add	r2, r1
10002a66:	68d1      	ldr	r1, [r2, #12]
10002a68:	6051      	str	r1, [r2, #4]
10002a6a:	e7eb      	b.n	10002a44 <vTaskSwitchContext+0x48>
10002a6c:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002a70:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002a74:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002a78:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002a7c:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002a80 <vTaskPlaceOnEventList>:
{
10002a80:	b510      	push	{r4, lr}
10002a82:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002a84:	4b04      	ldr	r3, [pc, #16]	; (10002a98 <vTaskPlaceOnEventList+0x18>)
10002a86:	6819      	ldr	r1, [r3, #0]
10002a88:	3118      	adds	r1, #24
10002a8a:	f7ff f9ed 	bl	10001e68 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
10002a8e:	2101      	movs	r1, #1
10002a90:	4620      	mov	r0, r4
10002a92:	f7ff fd93 	bl	100025bc <prvAddCurrentTaskToDelayedList>
}
10002a96:	bd10      	pop	{r4, pc}
10002a98:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002a9c <vTaskPlaceOnEventListRestricted>:
    {
10002a9c:	b570      	push	{r4, r5, r6, lr}
10002a9e:	4603      	mov	r3, r0
10002aa0:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002aa2:	6859      	ldr	r1, [r3, #4]
10002aa4:	4c0b      	ldr	r4, [pc, #44]	; (10002ad4 <vTaskPlaceOnEventListRestricted+0x38>)
10002aa6:	6825      	ldr	r5, [r4, #0]
10002aa8:	61e9      	str	r1, [r5, #28]
10002aaa:	6825      	ldr	r5, [r4, #0]
10002aac:	688e      	ldr	r6, [r1, #8]
10002aae:	622e      	str	r6, [r5, #32]
10002ab0:	6825      	ldr	r5, [r4, #0]
10002ab2:	3518      	adds	r5, #24
10002ab4:	6075      	str	r5, [r6, #4]
10002ab6:	6825      	ldr	r5, [r4, #0]
10002ab8:	3518      	adds	r5, #24
10002aba:	608d      	str	r5, [r1, #8]
10002abc:	6821      	ldr	r1, [r4, #0]
10002abe:	628b      	str	r3, [r1, #40]	; 0x28
10002ac0:	6819      	ldr	r1, [r3, #0]
10002ac2:	3101      	adds	r1, #1
10002ac4:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
10002ac6:	4611      	mov	r1, r2
10002ac8:	b10a      	cbz	r2, 10002ace <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
10002aca:	f04f 30ff 	mov.w	r0, #4294967295
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
10002ace:	f7ff fd75 	bl	100025bc <prvAddCurrentTaskToDelayedList>
    }
10002ad2:	bd70      	pop	{r4, r5, r6, pc}
10002ad4:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002ad8 <xTaskRemoveFromEventList>:
{
10002ad8:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
10002ada:	68c3      	ldr	r3, [r0, #12]
10002adc:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002ade:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002ae0:	69e1      	ldr	r1, [r4, #28]
10002ae2:	6a22      	ldr	r2, [r4, #32]
10002ae4:	608a      	str	r2, [r1, #8]
10002ae6:	69e1      	ldr	r1, [r4, #28]
10002ae8:	6051      	str	r1, [r2, #4]
10002aea:	685a      	ldr	r2, [r3, #4]
10002aec:	f104 0118 	add.w	r1, r4, #24
10002af0:	428a      	cmp	r2, r1
10002af2:	d042      	beq.n	10002b7a <xTaskRemoveFromEventList+0xa2>
10002af4:	2200      	movs	r2, #0
10002af6:	62a2      	str	r2, [r4, #40]	; 0x28
10002af8:	681a      	ldr	r2, [r3, #0]
10002afa:	3a01      	subs	r2, #1
10002afc:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002afe:	4b29      	ldr	r3, [pc, #164]	; (10002ba4 <xTaskRemoveFromEventList+0xcc>)
10002b00:	681b      	ldr	r3, [r3, #0]
10002b02:	2b00      	cmp	r3, #0
10002b04:	d13f      	bne.n	10002b86 <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002b06:	6963      	ldr	r3, [r4, #20]
10002b08:	68a1      	ldr	r1, [r4, #8]
10002b0a:	68e2      	ldr	r2, [r4, #12]
10002b0c:	608a      	str	r2, [r1, #8]
10002b0e:	68a1      	ldr	r1, [r4, #8]
10002b10:	6051      	str	r1, [r2, #4]
10002b12:	685a      	ldr	r2, [r3, #4]
10002b14:	1d21      	adds	r1, r4, #4
10002b16:	428a      	cmp	r2, r1
10002b18:	d032      	beq.n	10002b80 <xTaskRemoveFromEventList+0xa8>
10002b1a:	2200      	movs	r2, #0
10002b1c:	6162      	str	r2, [r4, #20]
10002b1e:	681a      	ldr	r2, [r3, #0]
10002b20:	3a01      	subs	r2, #1
10002b22:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
10002b24:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002b26:	4a20      	ldr	r2, [pc, #128]	; (10002ba8 <xTaskRemoveFromEventList+0xd0>)
10002b28:	6812      	ldr	r2, [r2, #0]
10002b2a:	4293      	cmp	r3, r2
10002b2c:	d901      	bls.n	10002b32 <xTaskRemoveFromEventList+0x5a>
10002b2e:	4a1e      	ldr	r2, [pc, #120]	; (10002ba8 <xTaskRemoveFromEventList+0xd0>)
10002b30:	6013      	str	r3, [r2, #0]
10002b32:	4a1e      	ldr	r2, [pc, #120]	; (10002bac <xTaskRemoveFromEventList+0xd4>)
10002b34:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002b38:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002b3c:	685b      	ldr	r3, [r3, #4]
10002b3e:	60a3      	str	r3, [r4, #8]
10002b40:	6898      	ldr	r0, [r3, #8]
10002b42:	60e0      	str	r0, [r4, #12]
10002b44:	6041      	str	r1, [r0, #4]
10002b46:	6099      	str	r1, [r3, #8]
10002b48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002b4a:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002b4e:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002b52:	6160      	str	r0, [r4, #20]
10002b54:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002b58:	3101      	adds	r1, #1
10002b5a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002b5e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
10002b62:	f7ff fba7 	bl	100022b4 <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
10002b66:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10002b68:	4b11      	ldr	r3, [pc, #68]	; (10002bb0 <xTaskRemoveFromEventList+0xd8>)
10002b6a:	681b      	ldr	r3, [r3, #0]
10002b6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002b6e:	429a      	cmp	r2, r3
10002b70:	d915      	bls.n	10002b9e <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
10002b72:	2001      	movs	r0, #1
10002b74:	4b0f      	ldr	r3, [pc, #60]	; (10002bb4 <xTaskRemoveFromEventList+0xdc>)
10002b76:	6018      	str	r0, [r3, #0]
}
10002b78:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002b7a:	6a22      	ldr	r2, [r4, #32]
10002b7c:	605a      	str	r2, [r3, #4]
10002b7e:	e7b9      	b.n	10002af4 <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002b80:	68e2      	ldr	r2, [r4, #12]
10002b82:	605a      	str	r2, [r3, #4]
10002b84:	e7c9      	b.n	10002b1a <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
10002b86:	4b0c      	ldr	r3, [pc, #48]	; (10002bb8 <xTaskRemoveFromEventList+0xe0>)
10002b88:	685a      	ldr	r2, [r3, #4]
10002b8a:	61e2      	str	r2, [r4, #28]
10002b8c:	6890      	ldr	r0, [r2, #8]
10002b8e:	6220      	str	r0, [r4, #32]
10002b90:	6041      	str	r1, [r0, #4]
10002b92:	6091      	str	r1, [r2, #8]
10002b94:	62a3      	str	r3, [r4, #40]	; 0x28
10002b96:	681a      	ldr	r2, [r3, #0]
10002b98:	3201      	adds	r2, #1
10002b9a:	601a      	str	r2, [r3, #0]
10002b9c:	e7e3      	b.n	10002b66 <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
10002b9e:	2000      	movs	r0, #0
    return xReturn;
10002ba0:	e7ea      	b.n	10002b78 <xTaskRemoveFromEventList+0xa0>
10002ba2:	bf00      	nop
10002ba4:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002ba8:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002bac:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002bb0:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002bb4:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002bb8:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}

10002bbc <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
10002bbc:	4b03      	ldr	r3, [pc, #12]	; (10002bcc <vTaskInternalSetTimeOutState+0x10>)
10002bbe:	681b      	ldr	r3, [r3, #0]
10002bc0:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
10002bc2:	4b03      	ldr	r3, [pc, #12]	; (10002bd0 <vTaskInternalSetTimeOutState+0x14>)
10002bc4:	681b      	ldr	r3, [r3, #0]
10002bc6:	6043      	str	r3, [r0, #4]
}
10002bc8:	4770      	bx	lr
10002bca:	bf00      	nop
10002bcc:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
10002bd0:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002bd4 <xTaskCheckForTimeOut>:
{
10002bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10002bd6:	4604      	mov	r4, r0
10002bd8:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
10002bda:	f000 fc75 	bl	100034c8 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
10002bde:	4b19      	ldr	r3, [pc, #100]	; (10002c44 <xTaskCheckForTimeOut+0x70>)
10002be0:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
10002be2:	6863      	ldr	r3, [r4, #4]
10002be4:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
10002be6:	4918      	ldr	r1, [pc, #96]	; (10002c48 <xTaskCheckForTimeOut+0x74>)
10002be8:	6809      	ldr	r1, [r1, #0]
10002bea:	f891 104a 	ldrb.w	r1, [r1, #74]	; 0x4a
10002bee:	b149      	cbz	r1, 10002c04 <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
10002bf0:	4b15      	ldr	r3, [pc, #84]	; (10002c48 <xTaskCheckForTimeOut+0x74>)
10002bf2:	681b      	ldr	r3, [r3, #0]
10002bf4:	2200      	movs	r2, #0
10002bf6:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
                xReturn = pdTRUE;
10002bfa:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
10002bfc:	f000 fc72 	bl	100034e4 <vPortExitCritical>
}
10002c00:	4620      	mov	r0, r4
10002c02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
10002c04:	6829      	ldr	r1, [r5, #0]
10002c06:	f1b1 3fff 	cmp.w	r1, #4294967295
10002c0a:	d018      	beq.n	10002c3e <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
10002c0c:	4e0f      	ldr	r6, [pc, #60]	; (10002c4c <xTaskCheckForTimeOut+0x78>)
10002c0e:	6836      	ldr	r6, [r6, #0]
10002c10:	6827      	ldr	r7, [r4, #0]
10002c12:	42b7      	cmp	r7, r6
10002c14:	d005      	beq.n	10002c22 <xTaskCheckForTimeOut+0x4e>
10002c16:	4293      	cmp	r3, r2
10002c18:	d803      	bhi.n	10002c22 <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
10002c1a:	2300      	movs	r3, #0
10002c1c:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002c1e:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
10002c20:	e7ec      	b.n	10002bfc <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
10002c22:	4281      	cmp	r1, r0
10002c24:	d803      	bhi.n	10002c2e <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
10002c26:	2300      	movs	r3, #0
10002c28:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002c2a:	2401      	movs	r4, #1
10002c2c:	e7e6      	b.n	10002bfc <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
10002c2e:	1a9b      	subs	r3, r3, r2
10002c30:	440b      	add	r3, r1
10002c32:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
10002c34:	4620      	mov	r0, r4
10002c36:	f7ff ffc1 	bl	10002bbc <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
10002c3a:	2400      	movs	r4, #0
10002c3c:	e7de      	b.n	10002bfc <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
10002c3e:	2400      	movs	r4, #0
10002c40:	e7dc      	b.n	10002bfc <xTaskCheckForTimeOut+0x28>
10002c42:	bf00      	nop
10002c44:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002c48:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002c4c:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}

10002c50 <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
10002c50:	4b01      	ldr	r3, [pc, #4]	; (10002c58 <vTaskMissedYield+0x8>)
10002c52:	2201      	movs	r2, #1
10002c54:	601a      	str	r2, [r3, #0]
}
10002c56:	4770      	bx	lr
10002c58:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}

10002c5c <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
10002c5c:	4b0c      	ldr	r3, [pc, #48]	; (10002c90 <eTaskConfirmSleepModeStatus+0x34>)
10002c5e:	681b      	ldr	r3, [r3, #0]
10002c60:	b973      	cbnz	r3, 10002c80 <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
10002c62:	4b0c      	ldr	r3, [pc, #48]	; (10002c94 <eTaskConfirmSleepModeStatus+0x38>)
10002c64:	681b      	ldr	r3, [r3, #0]
10002c66:	b96b      	cbnz	r3, 10002c84 <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
10002c68:	4b0b      	ldr	r3, [pc, #44]	; (10002c98 <eTaskConfirmSleepModeStatus+0x3c>)
10002c6a:	681b      	ldr	r3, [r3, #0]
10002c6c:	b963      	cbnz	r3, 10002c88 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
10002c6e:	4b0b      	ldr	r3, [pc, #44]	; (10002c9c <eTaskConfirmSleepModeStatus+0x40>)
10002c70:	681a      	ldr	r2, [r3, #0]
10002c72:	4b0b      	ldr	r3, [pc, #44]	; (10002ca0 <eTaskConfirmSleepModeStatus+0x44>)
10002c74:	681b      	ldr	r3, [r3, #0]
10002c76:	3b01      	subs	r3, #1
10002c78:	429a      	cmp	r2, r3
10002c7a:	d007      	beq.n	10002c8c <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
10002c7c:	2001      	movs	r0, #1
10002c7e:	4770      	bx	lr
            eReturn = eAbortSleep;
10002c80:	2000      	movs	r0, #0
10002c82:	4770      	bx	lr
            eReturn = eAbortSleep;
10002c84:	2000      	movs	r0, #0
10002c86:	4770      	bx	lr
            eReturn = eAbortSleep;
10002c88:	2000      	movs	r0, #0
10002c8a:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
10002c8c:	2002      	movs	r0, #2
    }
10002c8e:	4770      	bx	lr
10002c90:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002c94:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002c98:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002c9c:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
10002ca0:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

10002ca4 <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
10002ca4:	2800      	cmp	r0, #0
10002ca6:	d034      	beq.n	10002d12 <xTaskPriorityDisinherit+0x6e>
    {
10002ca8:	b538      	push	{r3, r4, r5, lr}
10002caa:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
10002cac:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10002cae:	3b01      	subs	r3, #1
10002cb0:	63c3      	str	r3, [r0, #60]	; 0x3c
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
10002cb2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
10002cb4:	6b82      	ldr	r2, [r0, #56]	; 0x38
10002cb6:	4291      	cmp	r1, r2
10002cb8:	d02d      	beq.n	10002d16 <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
10002cba:	b10b      	cbz	r3, 10002cc0 <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
10002cbc:	2000      	movs	r0, #0
    }
10002cbe:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002cc0:	1d05      	adds	r5, r0, #4
10002cc2:	4628      	mov	r0, r5
10002cc4:	f7ff f8e9 	bl	10001e9a <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
10002cc8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10002cca:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
10002ccc:	f1c3 0205 	rsb	r2, r3, #5
10002cd0:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
10002cd2:	4a12      	ldr	r2, [pc, #72]	; (10002d1c <xTaskPriorityDisinherit+0x78>)
10002cd4:	6812      	ldr	r2, [r2, #0]
10002cd6:	4293      	cmp	r3, r2
10002cd8:	d901      	bls.n	10002cde <xTaskPriorityDisinherit+0x3a>
10002cda:	4a10      	ldr	r2, [pc, #64]	; (10002d1c <xTaskPriorityDisinherit+0x78>)
10002cdc:	6013      	str	r3, [r2, #0]
10002cde:	4a10      	ldr	r2, [pc, #64]	; (10002d20 <xTaskPriorityDisinherit+0x7c>)
10002ce0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002ce4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002ce8:	685b      	ldr	r3, [r3, #4]
10002cea:	60a3      	str	r3, [r4, #8]
10002cec:	6899      	ldr	r1, [r3, #8]
10002cee:	60e1      	str	r1, [r4, #12]
10002cf0:	604d      	str	r5, [r1, #4]
10002cf2:	609d      	str	r5, [r3, #8]
10002cf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cf6:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002cfa:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002cfe:	6160      	str	r0, [r4, #20]
10002d00:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002d04:	3101      	adds	r1, #1
10002d06:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002d0a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
10002d0e:	2001      	movs	r0, #1
10002d10:	e7d5      	b.n	10002cbe <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
10002d12:	2000      	movs	r0, #0
    }
10002d14:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
10002d16:	2000      	movs	r0, #0
10002d18:	e7d1      	b.n	10002cbe <xTaskPriorityDisinherit+0x1a>
10002d1a:	bf00      	nop
10002d1c:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002d20:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

10002d24 <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
10002d24:	4b03      	ldr	r3, [pc, #12]	; (10002d34 <vApplicationGetIdleTaskMemory+0x10>)
10002d26:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
10002d28:	4b03      	ldr	r3, [pc, #12]	; (10002d38 <vApplicationGetIdleTaskMemory+0x14>)
10002d2a:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
10002d2c:	2380      	movs	r3, #128	; 0x80
10002d2e:	6013      	str	r3, [r2, #0]
    }
10002d30:	4770      	bx	lr
10002d32:	bf00      	nop
10002d34:	38008a98 	stmdacc	r0, {r3, r4, r7, r9, fp, pc}
10002d38:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002d3c <prvCreateIdleTasks>:
{
10002d3c:	b530      	push	{r4, r5, lr}
10002d3e:	b089      	sub	sp, #36	; 0x24
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002d40:	2300      	movs	r3, #0
10002d42:	2b03      	cmp	r3, #3
10002d44:	dc09      	bgt.n	10002d5a <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
10002d46:	4a15      	ldr	r2, [pc, #84]	; (10002d9c <prvCreateIdleTasks+0x60>)
10002d48:	5cd2      	ldrb	r2, [r2, r3]
10002d4a:	f103 0120 	add.w	r1, r3, #32
10002d4e:	4469      	add	r1, sp
10002d50:	f801 2c04 	strb.w	r2, [r1, #-4]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
10002d54:	b10a      	cbz	r2, 10002d5a <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002d56:	3301      	adds	r3, #1
10002d58:	e7f3      	b.n	10002d42 <prvCreateIdleTasks+0x6>
10002d5a:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002d5c:	2c00      	cmp	r4, #0
10002d5e:	dd02      	ble.n	10002d66 <prvCreateIdleTasks+0x2a>
10002d60:	2001      	movs	r0, #1
}
10002d62:	b009      	add	sp, #36	; 0x24
10002d64:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
10002d66:	2500      	movs	r5, #0
10002d68:	9504      	str	r5, [sp, #16]
            StackType_t * pxIdleTaskStackBuffer = NULL;
10002d6a:	9505      	str	r5, [sp, #20]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
10002d6c:	aa06      	add	r2, sp, #24
10002d6e:	a905      	add	r1, sp, #20
10002d70:	a804      	add	r0, sp, #16
10002d72:	f7ff ffd7 	bl	10002d24 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
10002d76:	9b04      	ldr	r3, [sp, #16]
10002d78:	9302      	str	r3, [sp, #8]
10002d7a:	9b05      	ldr	r3, [sp, #20]
10002d7c:	9301      	str	r3, [sp, #4]
10002d7e:	9500      	str	r5, [sp, #0]
10002d80:	462b      	mov	r3, r5
10002d82:	9a06      	ldr	r2, [sp, #24]
10002d84:	a907      	add	r1, sp, #28
10002d86:	4806      	ldr	r0, [pc, #24]	; (10002da0 <prvCreateIdleTasks+0x64>)
10002d88:	f7ff fc6c 	bl	10002664 <xTaskCreateStatic>
10002d8c:	4b05      	ldr	r3, [pc, #20]	; (10002da4 <prvCreateIdleTasks+0x68>)
10002d8e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
10002d92:	b108      	cbz	r0, 10002d98 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002d94:	3401      	adds	r4, #1
10002d96:	e7e1      	b.n	10002d5c <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
10002d98:	2000      	movs	r0, #0
10002d9a:	e7e2      	b.n	10002d62 <prvCreateIdleTasks+0x26>
10002d9c:	10005b90 	mulne	r0, r0, fp
10002da0:	100029c5 	andne	r2, r0, r5, asr #19
10002da4:	38008a94 	stmdacc	r0, {r2, r4, r7, r9, fp, pc}

10002da8 <vTaskStartScheduler>:
{
10002da8:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
10002daa:	f7ff ffc7 	bl	10002d3c <prvCreateIdleTasks>
        if( xReturn == pdPASS )
10002dae:	2801      	cmp	r0, #1
10002db0:	d004      	beq.n	10002dbc <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
10002db2:	2801      	cmp	r0, #1
10002db4:	d005      	beq.n	10002dc2 <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
10002db6:	4b0a      	ldr	r3, [pc, #40]	; (10002de0 <vTaskStartScheduler+0x38>)
10002db8:	681b      	ldr	r3, [r3, #0]
}
10002dba:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
10002dbc:	f000 f9a6 	bl	1000310c <xTimerCreateTimerTask>
10002dc0:	e7f7      	b.n	10002db2 <vTaskStartScheduler+0xa>
        portDISABLE_INTERRUPTS();
10002dc2:	f000 fc47 	bl	10003654 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
10002dc6:	4b07      	ldr	r3, [pc, #28]	; (10002de4 <vTaskStartScheduler+0x3c>)
10002dc8:	f04f 32ff 	mov.w	r2, #4294967295
10002dcc:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
10002dce:	4b06      	ldr	r3, [pc, #24]	; (10002de8 <vTaskStartScheduler+0x40>)
10002dd0:	2201      	movs	r2, #1
10002dd2:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
10002dd4:	4b05      	ldr	r3, [pc, #20]	; (10002dec <vTaskStartScheduler+0x44>)
10002dd6:	2200      	movs	r2, #0
10002dd8:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
10002dda:	f000 fbf5 	bl	100035c8 <xPortStartScheduler>
10002dde:	e7ea      	b.n	10002db6 <vTaskStartScheduler+0xe>
10002de0:	38000004 	stmdacc	r0, {r2}
10002de4:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002de8:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
10002dec:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002df0 <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
10002df0:	4b03      	ldr	r3, [pc, #12]	; (10002e00 <vApplicationGetTimerTaskMemory+0x10>)
10002df2:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
10002df4:	4b03      	ldr	r3, [pc, #12]	; (10002e04 <vApplicationGetTimerTaskMemory+0x14>)
10002df6:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
10002df8:	2380      	movs	r3, #128	; 0x80
10002dfa:	6013      	str	r3, [r2, #0]
    }
10002dfc:	4770      	bx	lr
10002dfe:	bf00      	nop
10002e00:	38008b4c 	stmdacc	r0, {r2, r3, r6, r8, r9, fp, pc}
10002e04:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}

10002e08 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002e08:	4b06      	ldr	r3, [pc, #24]	; (10002e24 <prvGetNextExpireTime+0x1c>)
10002e0a:	681a      	ldr	r2, [r3, #0]
10002e0c:	6813      	ldr	r3, [r2, #0]
10002e0e:	b92b      	cbnz	r3, 10002e1c <prvGetNextExpireTime+0x14>
10002e10:	2301      	movs	r3, #1
10002e12:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
10002e14:	b923      	cbnz	r3, 10002e20 <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002e16:	68d3      	ldr	r3, [r2, #12]
10002e18:	6818      	ldr	r0, [r3, #0]
10002e1a:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002e1c:	2300      	movs	r3, #0
10002e1e:	e7f8      	b.n	10002e12 <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
10002e20:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
10002e22:	4770      	bx	lr
10002e24:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002e28 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
10002e28:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
10002e2a:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
10002e2c:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
10002e2e:	4291      	cmp	r1, r2
10002e30:	d80c      	bhi.n	10002e4c <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
10002e32:	1ad2      	subs	r2, r2, r3
10002e34:	6983      	ldr	r3, [r0, #24]
10002e36:	429a      	cmp	r2, r3
10002e38:	d301      	bcc.n	10002e3e <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
10002e3a:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
10002e3c:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
10002e3e:	1d01      	adds	r1, r0, #4
10002e40:	4b09      	ldr	r3, [pc, #36]	; (10002e68 <prvInsertTimerInActiveList+0x40>)
10002e42:	6818      	ldr	r0, [r3, #0]
10002e44:	f7ff f810 	bl	10001e68 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002e48:	2000      	movs	r0, #0
10002e4a:	e7f7      	b.n	10002e3c <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
10002e4c:	429a      	cmp	r2, r3
10002e4e:	d201      	bcs.n	10002e54 <prvInsertTimerInActiveList+0x2c>
10002e50:	4299      	cmp	r1, r3
10002e52:	d206      	bcs.n	10002e62 <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
10002e54:	1d01      	adds	r1, r0, #4
10002e56:	4b05      	ldr	r3, [pc, #20]	; (10002e6c <prvInsertTimerInActiveList+0x44>)
10002e58:	6818      	ldr	r0, [r3, #0]
10002e5a:	f7ff f805 	bl	10001e68 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002e5e:	2000      	movs	r0, #0
10002e60:	e7ec      	b.n	10002e3c <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
10002e62:	2001      	movs	r0, #1
        return xProcessTimerNow;
10002e64:	e7ea      	b.n	10002e3c <prvInsertTimerInActiveList+0x14>
10002e66:	bf00      	nop
10002e68:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002e6c:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002e70 <prvReloadTimer>:
    {
10002e70:	b570      	push	{r4, r5, r6, lr}
10002e72:	4604      	mov	r4, r0
10002e74:	460d      	mov	r5, r1
10002e76:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10002e78:	e004      	b.n	10002e84 <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
10002e7a:	69a3      	ldr	r3, [r4, #24]
10002e7c:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10002e7e:	6a23      	ldr	r3, [r4, #32]
10002e80:	4620      	mov	r0, r4
10002e82:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10002e84:	69a1      	ldr	r1, [r4, #24]
10002e86:	462b      	mov	r3, r5
10002e88:	4632      	mov	r2, r6
10002e8a:	4429      	add	r1, r5
10002e8c:	4620      	mov	r0, r4
10002e8e:	f7ff ffcb 	bl	10002e28 <prvInsertTimerInActiveList>
10002e92:	2800      	cmp	r0, #0
10002e94:	d1f1      	bne.n	10002e7a <prvReloadTimer+0xa>
    }
10002e96:	bd70      	pop	{r4, r5, r6, pc}

10002e98 <prvProcessExpiredTimer>:
    {
10002e98:	b570      	push	{r4, r5, r6, lr}
10002e9a:	4605      	mov	r5, r0
10002e9c:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
10002e9e:	4b0d      	ldr	r3, [pc, #52]	; (10002ed4 <prvProcessExpiredTimer+0x3c>)
10002ea0:	681b      	ldr	r3, [r3, #0]
10002ea2:	68db      	ldr	r3, [r3, #12]
10002ea4:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10002ea6:	1d20      	adds	r0, r4, #4
10002ea8:	f7fe fff7 	bl	10001e9a <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10002eac:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10002eb0:	f013 0f04 	tst.w	r3, #4
10002eb4:	d107      	bne.n	10002ec6 <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10002eb6:	f023 0301 	bic.w	r3, r3, #1
10002eba:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10002ebe:	6a23      	ldr	r3, [r4, #32]
10002ec0:	4620      	mov	r0, r4
10002ec2:	4798      	blx	r3
    }
10002ec4:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
10002ec6:	4632      	mov	r2, r6
10002ec8:	4629      	mov	r1, r5
10002eca:	4620      	mov	r0, r4
10002ecc:	f7ff ffd0 	bl	10002e70 <prvReloadTimer>
10002ed0:	e7f5      	b.n	10002ebe <prvProcessExpiredTimer+0x26>
10002ed2:	bf00      	nop
10002ed4:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002ed8 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
10002ed8:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10002eda:	e005      	b.n	10002ee8 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002edc:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
10002ede:	f04f 31ff 	mov.w	r1, #4294967295
10002ee2:	6818      	ldr	r0, [r3, #0]
10002ee4:	f7ff ffd8 	bl	10002e98 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10002ee8:	4b05      	ldr	r3, [pc, #20]	; (10002f00 <prvSwitchTimerLists+0x28>)
10002eea:	681b      	ldr	r3, [r3, #0]
10002eec:	681a      	ldr	r2, [r3, #0]
10002eee:	2a00      	cmp	r2, #0
10002ef0:	d1f4      	bne.n	10002edc <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
10002ef2:	4a04      	ldr	r2, [pc, #16]	; (10002f04 <prvSwitchTimerLists+0x2c>)
10002ef4:	6810      	ldr	r0, [r2, #0]
10002ef6:	4902      	ldr	r1, [pc, #8]	; (10002f00 <prvSwitchTimerLists+0x28>)
10002ef8:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
10002efa:	6013      	str	r3, [r2, #0]
    }
10002efc:	bd08      	pop	{r3, pc}
10002efe:	bf00      	nop
10002f00:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
10002f04:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}

10002f08 <prvSampleTimeNow>:
    {
10002f08:	b538      	push	{r3, r4, r5, lr}
10002f0a:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
10002f0c:	f7ff fbd8 	bl	100026c0 <xTaskGetTickCount>
10002f10:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
10002f12:	4b07      	ldr	r3, [pc, #28]	; (10002f30 <prvSampleTimeNow+0x28>)
10002f14:	681b      	ldr	r3, [r3, #0]
10002f16:	4283      	cmp	r3, r0
10002f18:	d805      	bhi.n	10002f26 <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
10002f1a:	2300      	movs	r3, #0
10002f1c:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
10002f1e:	4b04      	ldr	r3, [pc, #16]	; (10002f30 <prvSampleTimeNow+0x28>)
10002f20:	601c      	str	r4, [r3, #0]
    }
10002f22:	4620      	mov	r0, r4
10002f24:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
10002f26:	f7ff ffd7 	bl	10002ed8 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
10002f2a:	2301      	movs	r3, #1
10002f2c:	602b      	str	r3, [r5, #0]
10002f2e:	e7f6      	b.n	10002f1e <prvSampleTimeNow+0x16>
10002f30:	38008c7c 	stmdacc	r0, {r2, r3, r4, r5, r6, sl, fp, pc}

10002f34 <prvProcessTimerOrBlockTask>:
    {
10002f34:	b570      	push	{r4, r5, r6, lr}
10002f36:	b082      	sub	sp, #8
10002f38:	4606      	mov	r6, r0
10002f3a:	460c      	mov	r4, r1
        vTaskSuspendAll();
10002f3c:	f7ff fbb8 	bl	100026b0 <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
10002f40:	a801      	add	r0, sp, #4
10002f42:	f7ff ffe1 	bl	10002f08 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
10002f46:	9b01      	ldr	r3, [sp, #4]
10002f48:	bb03      	cbnz	r3, 10002f8c <prvProcessTimerOrBlockTask+0x58>
10002f4a:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
10002f4c:	b90c      	cbnz	r4, 10002f52 <prvProcessTimerOrBlockTask+0x1e>
10002f4e:	42b0      	cmp	r0, r6
10002f50:	d210      	bcs.n	10002f74 <prvProcessTimerOrBlockTask+0x40>
                    if( xListWasEmpty != pdFALSE )
10002f52:	b124      	cbz	r4, 10002f5e <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
10002f54:	4a0f      	ldr	r2, [pc, #60]	; (10002f94 <prvProcessTimerOrBlockTask+0x60>)
10002f56:	6812      	ldr	r2, [r2, #0]
10002f58:	6812      	ldr	r2, [r2, #0]
10002f5a:	b992      	cbnz	r2, 10002f82 <prvProcessTimerOrBlockTask+0x4e>
10002f5c:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
10002f5e:	4622      	mov	r2, r4
10002f60:	1b71      	subs	r1, r6, r5
10002f62:	4b0d      	ldr	r3, [pc, #52]	; (10002f98 <prvProcessTimerOrBlockTask+0x64>)
10002f64:	6818      	ldr	r0, [r3, #0]
10002f66:	f7ff f95b 	bl	10002220 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
10002f6a:	f7ff fc83 	bl	10002874 <xTaskResumeAll>
10002f6e:	b150      	cbz	r0, 10002f86 <prvProcessTimerOrBlockTask+0x52>
    }
10002f70:	b002      	add	sp, #8
10002f72:	bd70      	pop	{r4, r5, r6, pc}
                    ( void ) xTaskResumeAll();
10002f74:	f7ff fc7e 	bl	10002874 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
10002f78:	4629      	mov	r1, r5
10002f7a:	4630      	mov	r0, r6
10002f7c:	f7ff ff8c 	bl	10002e98 <prvProcessExpiredTimer>
10002f80:	e7f6      	b.n	10002f70 <prvProcessTimerOrBlockTask+0x3c>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
10002f82:	461c      	mov	r4, r3
10002f84:	e7eb      	b.n	10002f5e <prvProcessTimerOrBlockTask+0x2a>
                        taskYIELD_WITHIN_API();
10002f86:	f000 fa93 	bl	100034b0 <vPortYield>
10002f8a:	e7f1      	b.n	10002f70 <prvProcessTimerOrBlockTask+0x3c>
                ( void ) xTaskResumeAll();
10002f8c:	f7ff fc72 	bl	10002874 <xTaskResumeAll>
    }
10002f90:	e7ee      	b.n	10002f70 <prvProcessTimerOrBlockTask+0x3c>
10002f92:	bf00      	nop
10002f94:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002f98:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}

10002f9c <prvProcessReceivedCommands>:
    {
10002f9c:	b530      	push	{r4, r5, lr}
10002f9e:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
10002fa0:	2300      	movs	r3, #0
10002fa2:	9302      	str	r3, [sp, #8]
10002fa4:	9303      	str	r3, [sp, #12]
10002fa6:	9304      	str	r3, [sp, #16]
10002fa8:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10002faa:	e002      	b.n	10002fb2 <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
10002fac:	9b02      	ldr	r3, [sp, #8]
10002fae:	2b00      	cmp	r3, #0
10002fb0:	da0f      	bge.n	10002fd2 <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10002fb2:	2200      	movs	r2, #0
10002fb4:	a902      	add	r1, sp, #8
10002fb6:	4b36      	ldr	r3, [pc, #216]	; (10003090 <prvProcessReceivedCommands+0xf4>)
10002fb8:	6818      	ldr	r0, [r3, #0]
10002fba:	f7ff f8b9 	bl	10002130 <xQueueReceive>
10002fbe:	2800      	cmp	r0, #0
10002fc0:	d064      	beq.n	1000308c <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
10002fc2:	9b02      	ldr	r3, [sp, #8]
10002fc4:	2b00      	cmp	r3, #0
10002fc6:	daf1      	bge.n	10002fac <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
10002fc8:	9905      	ldr	r1, [sp, #20]
10002fca:	9804      	ldr	r0, [sp, #16]
10002fcc:	9b03      	ldr	r3, [sp, #12]
10002fce:	4798      	blx	r3
10002fd0:	e7ec      	b.n	10002fac <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
10002fd2:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
10002fd4:	6963      	ldr	r3, [r4, #20]
10002fd6:	b113      	cbz	r3, 10002fde <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10002fd8:	1d20      	adds	r0, r4, #4
10002fda:	f7fe ff5e 	bl	10001e9a <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
10002fde:	a801      	add	r0, sp, #4
10002fe0:	f7ff ff92 	bl	10002f08 <prvSampleTimeNow>
10002fe4:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
10002fe6:	9b02      	ldr	r3, [sp, #8]
10002fe8:	3b01      	subs	r3, #1
10002fea:	2b08      	cmp	r3, #8
10002fec:	d8e1      	bhi.n	10002fb2 <prvProcessReceivedCommands+0x16>
10002fee:	e8df f003 	tbb	[pc, r3]
10002ff2:	30290505 	eorcc	r0, r9, r5, lsl #10
10002ff6:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
10002ffa:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
10002ffe:	3024      	adds	r0, #36	; 0x24
10003000:	f043 0301 	orr.w	r3, r3, #1
10003004:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
10003008:	9b03      	ldr	r3, [sp, #12]
1000300a:	69a1      	ldr	r1, [r4, #24]
1000300c:	4602      	mov	r2, r0
1000300e:	4419      	add	r1, r3
10003010:	4620      	mov	r0, r4
10003012:	f7ff ff09 	bl	10002e28 <prvInsertTimerInActiveList>
10003016:	2800      	cmp	r0, #0
10003018:	d0cb      	beq.n	10002fb2 <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
1000301a:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
1000301e:	f013 0f04 	tst.w	r3, #4
10003022:	d107      	bne.n	10003034 <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003024:	f023 0301 	bic.w	r3, r3, #1
10003028:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
1000302c:	6a23      	ldr	r3, [r4, #32]
1000302e:	4620      	mov	r0, r4
10003030:	4798      	blx	r3
10003032:	e7be      	b.n	10002fb2 <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
10003034:	69a3      	ldr	r3, [r4, #24]
10003036:	462a      	mov	r2, r5
10003038:	9903      	ldr	r1, [sp, #12]
1000303a:	4419      	add	r1, r3
1000303c:	4620      	mov	r0, r4
1000303e:	f7ff ff17 	bl	10002e70 <prvReloadTimer>
10003042:	e7f3      	b.n	1000302c <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003044:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003048:	f023 0301 	bic.w	r3, r3, #1
1000304c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        break;
10003050:	e7af      	b.n	10002fb2 <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
10003052:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003056:	f043 0301 	orr.w	r3, r3, #1
1000305a:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
1000305e:	9903      	ldr	r1, [sp, #12]
10003060:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
10003062:	4603      	mov	r3, r0
10003064:	4602      	mov	r2, r0
10003066:	4401      	add	r1, r0
10003068:	4620      	mov	r0, r4
1000306a:	f7ff fedd 	bl	10002e28 <prvInsertTimerInActiveList>
                        break;
1000306e:	e7a0      	b.n	10002fb2 <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
10003070:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003074:	f013 0f02 	tst.w	r3, #2
10003078:	d004      	beq.n	10003084 <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1000307a:	f023 0301 	bic.w	r3, r3, #1
1000307e:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
10003082:	e796      	b.n	10002fb2 <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
10003084:	4620      	mov	r0, r4
10003086:	f000 f937 	bl	100032f8 <vPortFree>
1000308a:	e792      	b.n	10002fb2 <prvProcessReceivedCommands+0x16>
    }
1000308c:	b007      	add	sp, #28
1000308e:	bd30      	pop	{r4, r5, pc}
10003090:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}

10003094 <prvTimerTask>:
    {
10003094:	b500      	push	{lr}
10003096:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
10003098:	a801      	add	r0, sp, #4
1000309a:	f7ff feb5 	bl	10002e08 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
1000309e:	9901      	ldr	r1, [sp, #4]
100030a0:	f7ff ff48 	bl	10002f34 <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
100030a4:	f7ff ff7a 	bl	10002f9c <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
100030a8:	e7f6      	b.n	10003098 <prvTimerTask+0x4>
	...

100030ac <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
100030ac:	b530      	push	{r4, r5, lr}
100030ae:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
100030b0:	f000 fa0a 	bl	100034c8 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
100030b4:	4b0e      	ldr	r3, [pc, #56]	; (100030f0 <prvCheckForValidListAndQueue+0x44>)
100030b6:	681b      	ldr	r3, [r3, #0]
100030b8:	b11b      	cbz	r3, 100030c2 <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
100030ba:	f000 fa13 	bl	100034e4 <vPortExitCritical>
    }
100030be:	b003      	add	sp, #12
100030c0:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
100030c2:	4d0c      	ldr	r5, [pc, #48]	; (100030f4 <prvCheckForValidListAndQueue+0x48>)
100030c4:	4628      	mov	r0, r5
100030c6:	f7fe febf 	bl	10001e48 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
100030ca:	4c0b      	ldr	r4, [pc, #44]	; (100030f8 <prvCheckForValidListAndQueue+0x4c>)
100030cc:	4620      	mov	r0, r4
100030ce:	f7fe febb 	bl	10001e48 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
100030d2:	4b0a      	ldr	r3, [pc, #40]	; (100030fc <prvCheckForValidListAndQueue+0x50>)
100030d4:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
100030d6:	4b0a      	ldr	r3, [pc, #40]	; (10003100 <prvCheckForValidListAndQueue+0x54>)
100030d8:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
100030da:	2300      	movs	r3, #0
100030dc:	9300      	str	r3, [sp, #0]
100030de:	4b09      	ldr	r3, [pc, #36]	; (10003104 <prvCheckForValidListAndQueue+0x58>)
100030e0:	4a09      	ldr	r2, [pc, #36]	; (10003108 <prvCheckForValidListAndQueue+0x5c>)
100030e2:	2110      	movs	r1, #16
100030e4:	200a      	movs	r0, #10
100030e6:	f7ff f804 	bl	100020f2 <xQueueGenericCreateStatic>
100030ea:	4b01      	ldr	r3, [pc, #4]	; (100030f0 <prvCheckForValidListAndQueue+0x44>)
100030ec:	6018      	str	r0, [r3, #0]
100030ee:	e7e4      	b.n	100030ba <prvCheckForValidListAndQueue+0xe>
100030f0:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
100030f4:	38008c44 	stmdacc	r0, {r2, r6, sl, fp, pc}
100030f8:	38008c60 	stmdacc	r0, {r5, r6, sl, fp, pc}
100030fc:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
10003100:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10003104:	38008c80 	stmdacc	r0, {r7, sl, fp, pc}
10003108:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

1000310c <xTimerCreateTimerTask>:
    {
1000310c:	b510      	push	{r4, lr}
1000310e:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
10003110:	f7ff ffcc 	bl	100030ac <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
10003114:	4b10      	ldr	r3, [pc, #64]	; (10003158 <xTimerCreateTimerTask+0x4c>)
10003116:	681b      	ldr	r3, [r3, #0]
10003118:	b1d3      	cbz	r3, 10003150 <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
1000311a:	2400      	movs	r4, #0
1000311c:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
1000311e:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
10003120:	aa07      	add	r2, sp, #28
10003122:	a906      	add	r1, sp, #24
10003124:	a805      	add	r0, sp, #20
10003126:	f7ff fe63 	bl	10002df0 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
1000312a:	9b05      	ldr	r3, [sp, #20]
1000312c:	9302      	str	r3, [sp, #8]
1000312e:	9b06      	ldr	r3, [sp, #24]
10003130:	9301      	str	r3, [sp, #4]
10003132:	2304      	movs	r3, #4
10003134:	9300      	str	r3, [sp, #0]
10003136:	4623      	mov	r3, r4
10003138:	9a07      	ldr	r2, [sp, #28]
1000313a:	4908      	ldr	r1, [pc, #32]	; (1000315c <xTimerCreateTimerTask+0x50>)
1000313c:	4808      	ldr	r0, [pc, #32]	; (10003160 <xTimerCreateTimerTask+0x54>)
1000313e:	f7ff fa91 	bl	10002664 <xTaskCreateStatic>
10003142:	4b08      	ldr	r3, [pc, #32]	; (10003164 <xTimerCreateTimerTask+0x58>)
10003144:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
10003146:	b108      	cbz	r0, 1000314c <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
10003148:	2001      	movs	r0, #1
1000314a:	e002      	b.n	10003152 <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
1000314c:	4620      	mov	r0, r4
1000314e:	e000      	b.n	10003152 <xTimerCreateTimerTask+0x46>
10003150:	2000      	movs	r0, #0
    }
10003152:	b008      	add	sp, #32
10003154:	bd10      	pop	{r4, pc}
10003156:	bf00      	nop
10003158:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
1000315c:	10005b98 	mulne	r0, r8, fp
10003160:	10003095 	mulne	r0, r5, r0
10003164:	38008ce0 	stmdacc	r0, {r5, r6, r7, sl, fp, pc}

10003168 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
10003168:	4a10      	ldr	r2, [pc, #64]	; (100031ac <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
1000316a:	f012 0f07 	tst.w	r2, #7
1000316e:	d01a      	beq.n	100031a6 <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
10003170:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003172:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
10003176:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
1000317a:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
1000317c:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
1000317e:	480c      	ldr	r0, [pc, #48]	; (100031b0 <prvHeapInit+0x48>)
10003180:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
10003182:	2100      	movs	r1, #0
10003184:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
10003186:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
10003188:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
1000318a:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
1000318e:	4809      	ldr	r0, [pc, #36]	; (100031b4 <prvHeapInit+0x4c>)
10003190:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
10003192:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
10003194:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
10003196:	1a99      	subs	r1, r3, r2
10003198:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
1000319a:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
1000319c:	4b06      	ldr	r3, [pc, #24]	; (100031b8 <prvHeapInit+0x50>)
1000319e:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
100031a0:	4b06      	ldr	r3, [pc, #24]	; (100031bc <prvHeapInit+0x54>)
100031a2:	6019      	str	r1, [r3, #0]
}
100031a4:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
100031a6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
100031aa:	e7e8      	b.n	1000317e <prvHeapInit+0x16>
100031ac:	38000468 	stmdacc	r0, {r3, r5, r6, sl}
100031b0:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
100031b4:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
100031b8:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
100031bc:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}

100031c0 <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
100031c0:	4b16      	ldr	r3, [pc, #88]	; (1000321c <prvInsertBlockIntoFreeList+0x5c>)
100031c2:	461a      	mov	r2, r3
100031c4:	681b      	ldr	r3, [r3, #0]
100031c6:	4283      	cmp	r3, r0
100031c8:	d3fb      	bcc.n	100031c2 <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
100031ca:	6851      	ldr	r1, [r2, #4]
100031cc:	eb02 0c01 	add.w	ip, r2, r1
100031d0:	4584      	cmp	ip, r0
100031d2:	d009      	beq.n	100031e8 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
100031d4:	6841      	ldr	r1, [r0, #4]
100031d6:	eb00 0c01 	add.w	ip, r0, r1
100031da:	4563      	cmp	r3, ip
100031dc:	d009      	beq.n	100031f2 <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
100031de:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
100031e0:	4290      	cmp	r0, r2
100031e2:	d019      	beq.n	10003218 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
100031e4:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
100031e6:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
100031e8:	6840      	ldr	r0, [r0, #4]
100031ea:	4401      	add	r1, r0
100031ec:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
100031ee:	4610      	mov	r0, r2
100031f0:	e7f0      	b.n	100031d4 <prvInsertBlockIntoFreeList+0x14>
{
100031f2:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
100031f4:	4c0a      	ldr	r4, [pc, #40]	; (10003220 <prvInsertBlockIntoFreeList+0x60>)
100031f6:	6824      	ldr	r4, [r4, #0]
100031f8:	42a3      	cmp	r3, r4
100031fa:	d00b      	beq.n	10003214 <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
100031fc:	685b      	ldr	r3, [r3, #4]
100031fe:	4419      	add	r1, r3
10003200:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
10003202:	6813      	ldr	r3, [r2, #0]
10003204:	681b      	ldr	r3, [r3, #0]
10003206:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
10003208:	4290      	cmp	r0, r2
1000320a:	d000      	beq.n	1000320e <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
1000320c:	6010      	str	r0, [r2, #0]
    }
}
1000320e:	f85d 4b04 	ldr.w	r4, [sp], #4
10003212:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
10003214:	6004      	str	r4, [r0, #0]
10003216:	e7f7      	b.n	10003208 <prvInsertBlockIntoFreeList+0x48>
10003218:	4770      	bx	lr
1000321a:	bf00      	nop
1000321c:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
10003220:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

10003224 <pvPortMalloc>:
{
10003224:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
10003226:	4604      	mov	r4, r0
10003228:	b170      	cbz	r0, 10003248 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
1000322a:	f110 0f09 	cmn.w	r0, #9
1000322e:	d80a      	bhi.n	10003246 <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
10003230:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
10003232:	f014 0307 	ands.w	r3, r4, #7
10003236:	d007      	beq.n	10003248 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
10003238:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
1000323c:	43da      	mvns	r2, r3
1000323e:	42a2      	cmp	r2, r4
10003240:	d312      	bcc.n	10003268 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
10003242:	441c      	add	r4, r3
10003244:	e000      	b.n	10003248 <pvPortMalloc+0x24>
            xWantedSize = 0;
10003246:	2400      	movs	r4, #0
    vTaskSuspendAll();
10003248:	f7ff fa32 	bl	100026b0 <vTaskSuspendAll>
        if( pxEnd == NULL )
1000324c:	4b25      	ldr	r3, [pc, #148]	; (100032e4 <pvPortMalloc+0xc0>)
1000324e:	681b      	ldr	r3, [r3, #0]
10003250:	b163      	cbz	r3, 1000326c <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
10003252:	2c00      	cmp	r4, #0
10003254:	db3e      	blt.n	100032d4 <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
10003256:	2c00      	cmp	r4, #0
10003258:	d03e      	beq.n	100032d8 <pvPortMalloc+0xb4>
1000325a:	4b23      	ldr	r3, [pc, #140]	; (100032e8 <pvPortMalloc+0xc4>)
1000325c:	681e      	ldr	r6, [r3, #0]
1000325e:	42a6      	cmp	r6, r4
10003260:	d33c      	bcc.n	100032dc <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
10003262:	4922      	ldr	r1, [pc, #136]	; (100032ec <pvPortMalloc+0xc8>)
10003264:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
10003266:	e006      	b.n	10003276 <pvPortMalloc+0x52>
                    xWantedSize = 0;
10003268:	2400      	movs	r4, #0
1000326a:	e7ed      	b.n	10003248 <pvPortMalloc+0x24>
            prvHeapInit();
1000326c:	f7ff ff7c 	bl	10003168 <prvHeapInit>
10003270:	e7ef      	b.n	10003252 <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
10003272:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
10003274:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
10003276:	685a      	ldr	r2, [r3, #4]
10003278:	42a2      	cmp	r2, r4
1000327a:	d202      	bcs.n	10003282 <pvPortMalloc+0x5e>
1000327c:	681a      	ldr	r2, [r3, #0]
1000327e:	2a00      	cmp	r2, #0
10003280:	d1f7      	bne.n	10003272 <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
10003282:	4a18      	ldr	r2, [pc, #96]	; (100032e4 <pvPortMalloc+0xc0>)
10003284:	6812      	ldr	r2, [r2, #0]
10003286:	429a      	cmp	r2, r3
10003288:	d02a      	beq.n	100032e0 <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
1000328a:	680d      	ldr	r5, [r1, #0]
1000328c:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
1000328e:	681a      	ldr	r2, [r3, #0]
10003290:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
10003292:	6858      	ldr	r0, [r3, #4]
10003294:	1b00      	subs	r0, r0, r4
10003296:	2810      	cmp	r0, #16
10003298:	d905      	bls.n	100032a6 <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
1000329a:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
1000329c:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
1000329e:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
100032a0:	6808      	ldr	r0, [r1, #0]
100032a2:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
100032a4:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
100032a6:	6859      	ldr	r1, [r3, #4]
100032a8:	1a76      	subs	r6, r6, r1
100032aa:	480f      	ldr	r0, [pc, #60]	; (100032e8 <pvPortMalloc+0xc4>)
100032ac:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
100032ae:	4810      	ldr	r0, [pc, #64]	; (100032f0 <pvPortMalloc+0xcc>)
100032b0:	6800      	ldr	r0, [r0, #0]
100032b2:	4286      	cmp	r6, r0
100032b4:	d201      	bcs.n	100032ba <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
100032b6:	480e      	ldr	r0, [pc, #56]	; (100032f0 <pvPortMalloc+0xcc>)
100032b8:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
100032ba:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
100032be:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
100032c0:	2200      	movs	r2, #0
100032c2:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
100032c4:	4a0b      	ldr	r2, [pc, #44]	; (100032f4 <pvPortMalloc+0xd0>)
100032c6:	6813      	ldr	r3, [r2, #0]
100032c8:	3301      	adds	r3, #1
100032ca:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
100032cc:	f7ff fad2 	bl	10002874 <xTaskResumeAll>
}
100032d0:	4628      	mov	r0, r5
100032d2:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
100032d4:	2500      	movs	r5, #0
100032d6:	e7f9      	b.n	100032cc <pvPortMalloc+0xa8>
100032d8:	2500      	movs	r5, #0
100032da:	e7f7      	b.n	100032cc <pvPortMalloc+0xa8>
100032dc:	2500      	movs	r5, #0
100032de:	e7f5      	b.n	100032cc <pvPortMalloc+0xa8>
100032e0:	2500      	movs	r5, #0
100032e2:	e7f3      	b.n	100032cc <pvPortMalloc+0xa8>
100032e4:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
100032e8:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
100032ec:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
100032f0:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
100032f4:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}

100032f8 <vPortFree>:
    if( pv != NULL )
100032f8:	b308      	cbz	r0, 1000333e <vPortFree+0x46>
{
100032fa:	b538      	push	{r3, r4, r5, lr}
100032fc:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
100032fe:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
10003302:	f850 3c04 	ldr.w	r3, [r0, #-4]
10003306:	2b00      	cmp	r3, #0
10003308:	da02      	bge.n	10003310 <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
1000330a:	f850 2c08 	ldr.w	r2, [r0, #-8]
1000330e:	b102      	cbz	r2, 10003312 <vPortFree+0x1a>
}
10003310:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
10003312:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
10003316:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
1000331a:	f7ff f9c9 	bl	100026b0 <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
1000331e:	f854 1c04 	ldr.w	r1, [r4, #-4]
10003322:	4a07      	ldr	r2, [pc, #28]	; (10003340 <vPortFree+0x48>)
10003324:	6813      	ldr	r3, [r2, #0]
10003326:	440b      	add	r3, r1
10003328:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
1000332a:	4628      	mov	r0, r5
1000332c:	f7ff ff48 	bl	100031c0 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
10003330:	4a04      	ldr	r2, [pc, #16]	; (10003344 <vPortFree+0x4c>)
10003332:	6813      	ldr	r3, [r2, #0]
10003334:	3301      	adds	r3, #1
10003336:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
10003338:	f7ff fa9c 	bl	10002874 <xTaskResumeAll>
}
1000333c:	e7e8      	b.n	10003310 <vPortFree+0x18>
1000333e:	4770      	bx	lr
10003340:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
10003344:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}

10003348 <prvTaskExitError>:
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
10003348:	b500      	push	{lr}
1000334a:	b083      	sub	sp, #12
    volatile uint32_t ulDummy = 0UL;
1000334c:	2300      	movs	r3, #0
1000334e:	9301      	str	r3, [sp, #4]
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();
10003350:	f000 f980 	bl	10003654 <ulSetInterruptMask>

    while( ulDummy == 0 )
10003354:	9b01      	ldr	r3, [sp, #4]
10003356:	2b00      	cmp	r3, #0
10003358:	d0fc      	beq.n	10003354 <prvTaskExitError+0xc>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
1000335a:	b003      	add	sp, #12
1000335c:	f85d fb04 	ldr.w	pc, [sp], #4

10003360 <vPortSuppressTicksAndSleep>:
    {
10003360:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
10003362:	4b41      	ldr	r3, [pc, #260]	; (10003468 <vPortSuppressTicksAndSleep+0x108>)
10003364:	681c      	ldr	r4, [r3, #0]
10003366:	4284      	cmp	r4, r0
10003368:	d300      	bcc.n	1000336c <vPortSuppressTicksAndSleep+0xc>
1000336a:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
1000336c:	b672      	cpsid	i
        __asm volatile ( "dsb" );
1000336e:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
10003372:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
10003376:	f7ff fc71 	bl	10002c5c <eTaskConfirmSleepModeStatus>
1000337a:	b908      	cbnz	r0, 10003380 <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
1000337c:	b662      	cpsie	i
    }
1000337e:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
10003380:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003384:	2206      	movs	r2, #6
10003386:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
10003388:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
1000338a:	b90b      	cbnz	r3, 10003390 <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
1000338c:	4b37      	ldr	r3, [pc, #220]	; (1000346c <vPortSuppressTicksAndSleep+0x10c>)
1000338e:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
10003390:	1e60      	subs	r0, r4, #1
10003392:	4a36      	ldr	r2, [pc, #216]	; (1000346c <vPortSuppressTicksAndSleep+0x10c>)
10003394:	6812      	ldr	r2, [r2, #0]
10003396:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
1000339a:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
1000339e:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
100033a2:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
100033a6:	d008      	beq.n	100033ba <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
100033a8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100033ac:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
100033b0:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
100033b4:	4a2d      	ldr	r2, [pc, #180]	; (1000346c <vPortSuppressTicksAndSleep+0x10c>)
100033b6:	6812      	ldr	r2, [r2, #0]
100033b8:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
100033ba:	4a2d      	ldr	r2, [pc, #180]	; (10003470 <vPortSuppressTicksAndSleep+0x110>)
100033bc:	6812      	ldr	r2, [r2, #0]
100033be:	429a      	cmp	r2, r3
100033c0:	d200      	bcs.n	100033c4 <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
100033c2:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
100033c4:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100033c8:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
100033ca:	2100      	movs	r1, #0
100033cc:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
100033ce:	6911      	ldr	r1, [r2, #16]
100033d0:	f041 0101 	orr.w	r1, r1, #1
100033d4:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
100033d6:	b124      	cbz	r4, 100033e2 <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
100033d8:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
100033dc:	bf30      	wfi
                __asm volatile ( "isb" );
100033de:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
100033e2:	b662      	cpsie	i
            __asm volatile ( "dsb" );
100033e4:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
100033e8:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
100033ec:	b672      	cpsid	i
            __asm volatile ( "dsb" );
100033ee:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
100033f2:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
100033f6:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100033fa:	2106      	movs	r1, #6
100033fc:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
100033fe:	6912      	ldr	r2, [r2, #16]
10003400:	f412 3f80 	tst.w	r2, #65536	; 0x10000
10003404:	d01f      	beq.n	10003446 <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
10003406:	4a19      	ldr	r2, [pc, #100]	; (1000346c <vPortSuppressTicksAndSleep+0x10c>)
10003408:	6811      	ldr	r1, [r2, #0]
1000340a:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
1000340e:	6992      	ldr	r2, [r2, #24]
10003410:	1ad3      	subs	r3, r2, r3
10003412:	440b      	add	r3, r1
10003414:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
10003416:	4a16      	ldr	r2, [pc, #88]	; (10003470 <vPortSuppressTicksAndSleep+0x110>)
10003418:	6812      	ldr	r2, [r2, #0]
1000341a:	429a      	cmp	r2, r3
1000341c:	d201      	bcs.n	10003422 <vPortSuppressTicksAndSleep+0xc2>
1000341e:	4299      	cmp	r1, r3
10003420:	d200      	bcs.n	10003424 <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
10003422:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
10003424:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003428:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
1000342a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000342e:	2200      	movs	r2, #0
10003430:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
10003432:	2207      	movs	r2, #7
10003434:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
10003436:	4a0d      	ldr	r2, [pc, #52]	; (1000346c <vPortSuppressTicksAndSleep+0x10c>)
10003438:	6812      	ldr	r2, [r2, #0]
1000343a:	3a01      	subs	r2, #1
1000343c:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
1000343e:	f7ff f94b 	bl	100026d8 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
10003442:	b662      	cpsie	i
    }
10003444:	e79b      	b.n	1000337e <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
10003446:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
1000344a:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
1000344c:	4a07      	ldr	r2, [pc, #28]	; (1000346c <vPortSuppressTicksAndSleep+0x10c>)
1000344e:	6812      	ldr	r2, [r2, #0]
10003450:	fb02 f404 	mul.w	r4, r2, r4
10003454:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
10003456:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
1000345a:	fb00 2202 	mla	r2, r0, r2, r2
1000345e:	1b1c      	subs	r4, r3, r4
10003460:	4414      	add	r4, r2
10003462:	614c      	str	r4, [r1, #20]
10003464:	e7e1      	b.n	1000342a <vPortSuppressTicksAndSleep+0xca>
10003466:	bf00      	nop
10003468:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
1000346c:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
10003470:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}

10003474 <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
10003474:	4b09      	ldr	r3, [pc, #36]	; (1000349c <vPortSetupTimerInterrupt+0x28>)
10003476:	4a0a      	ldr	r2, [pc, #40]	; (100034a0 <vPortSetupTimerInterrupt+0x2c>)
10003478:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
1000347a:	4b0a      	ldr	r3, [pc, #40]	; (100034a4 <vPortSetupTimerInterrupt+0x30>)
1000347c:	2253      	movs	r2, #83	; 0x53
1000347e:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
10003480:	4b09      	ldr	r3, [pc, #36]	; (100034a8 <vPortSetupTimerInterrupt+0x34>)
10003482:	225e      	movs	r2, #94	; 0x5e
10003484:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG;
10003486:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000348a:	2204      	movs	r2, #4
1000348c:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
1000348e:	2200      	movs	r2, #0
10003490:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
10003492:	4a06      	ldr	r2, [pc, #24]	; (100034ac <vPortSetupTimerInterrupt+0x38>)
10003494:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
10003496:	2207      	movs	r2, #7
10003498:	611a      	str	r2, [r3, #16]
}
1000349a:	4770      	bx	lr
1000349c:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
100034a0:	00030d40 	andeq	r0, r3, r0, asr #26
100034a4:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
100034a8:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
100034ac:	00030d3f 	andeq	r0, r3, pc, lsr sp

100034b0 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
100034b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100034b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100034b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
100034bc:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
100034c0:	f3bf 8f6f 	isb	sy
}
100034c4:	4770      	bx	lr
	...

100034c8 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
100034c8:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
100034ca:	f000 f8c3 	bl	10003654 <ulSetInterruptMask>
    ulCriticalNesting++;
100034ce:	4a04      	ldr	r2, [pc, #16]	; (100034e0 <vPortEnterCritical+0x18>)
100034d0:	6813      	ldr	r3, [r2, #0]
100034d2:	3301      	adds	r3, #1
100034d4:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
100034d6:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
100034da:	f3bf 8f6f 	isb	sy
}
100034de:	bd08      	pop	{r3, pc}
100034e0:	38000008 	stmdacc	r0, {r3}

100034e4 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
100034e4:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
    ulCriticalNesting--;
100034e6:	4b05      	ldr	r3, [pc, #20]	; (100034fc <vPortExitCritical+0x18>)
100034e8:	681a      	ldr	r2, [r3, #0]
100034ea:	3a01      	subs	r2, #1
100034ec:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
100034ee:	681b      	ldr	r3, [r3, #0]
100034f0:	b103      	cbz	r3, 100034f4 <vPortExitCritical+0x10>
    {
        portENABLE_INTERRUPTS();
    }
}
100034f2:	bd08      	pop	{r3, pc}
        portENABLE_INTERRUPTS();
100034f4:	2000      	movs	r0, #0
100034f6:	f000 f8b8 	bl	1000366a <vClearInterruptMask>
}
100034fa:	e7fa      	b.n	100034f2 <vPortExitCritical+0xe>
100034fc:	38000008 	stmdacc	r0, {r3}

10003500 <SysTick_Handler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
10003500:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
10003502:	f000 f8a7 	bl	10003654 <ulSetInterruptMask>
10003506:	4604      	mov	r4, r0
    traceISR_ENTER();
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
10003508:	f7ff f904 	bl	10002714 <xTaskIncrementTick>
1000350c:	b128      	cbz	r0, 1000351a <SysTick_Handler+0x1a>
        {
            traceISR_EXIT_TO_SCHEDULER();
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
1000350e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003512:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10003516:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
        else
        {
            traceISR_EXIT();
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
1000351a:	4620      	mov	r0, r4
1000351c:	f000 f8a5 	bl	1000366a <vClearInterruptMask>
}
10003520:	bd10      	pop	{r4, pc}

10003522 <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
10003522:	b508      	push	{r3, lr}
    #endif /* configENABLE_TRUSTZONE */
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ portOFFSET_TO_PC ];
10003524:	6983      	ldr	r3, [r0, #24]
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
10003526:	f813 3c02 	ldrb.w	r3, [r3, #-2]

    switch( ucSVCNumber )
1000352a:	2b66      	cmp	r3, #102	; 0x66
1000352c:	d000      	beq.n	10003530 <vPortSVCHandler_C+0xe>

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
1000352e:	bd08      	pop	{r3, pc}
            vRestoreContextOfFirstTask();
10003530:	f000 f86a 	bl	10003608 <vRestoreContextOfFirstTask>
}
10003534:	e7fb      	b.n	1000352e <vPortSVCHandler_C+0xc>
	...

10003538 <pxPortInitialiseStack>:

    StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
    {
10003538:	b410      	push	{r4}
            #endif /* configENABLE_TRUSTZONE */
        }
        #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR. */
1000353a:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
1000353e:	f840 4c04 	str.w	r4, [r0, #-4]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC. */
10003542:	f840 2c08 	str.w	r2, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR. */
10003546:	4a1f      	ldr	r2, [pc, #124]	; (100035c4 <pxPortInitialiseStack+0x8c>)
10003548:	f840 2c0c 	str.w	r2, [r0, #-12]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12. */
1000354c:	f04f 3212 	mov.w	r2, #303174162	; 0x12121212
10003550:	f840 2c10 	str.w	r2, [r0, #-16]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3. */
10003554:	f04f 3203 	mov.w	r2, #50529027	; 0x3030303
10003558:	f840 2c14 	str.w	r2, [r0, #-20]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2. */
1000355c:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
10003560:	f840 2c18 	str.w	r2, [r0, #-24]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1. */
10003564:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
10003568:	f840 2c1c 	str.w	r2, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0. */
1000356c:	f840 3c20 	str.w	r3, [r0, #-32]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11. */
10003570:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
10003574:	f840 3c24 	str.w	r3, [r0, #-36]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10. */
10003578:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
1000357c:	f840 3c28 	str.w	r3, [r0, #-40]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09. */
10003580:	f04f 3309 	mov.w	r3, #151587081	; 0x9090909
10003584:	f840 3c2c 	str.w	r3, [r0, #-44]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08. */
10003588:	f04f 3308 	mov.w	r3, #134744072	; 0x8080808
1000358c:	f840 3c30 	str.w	r3, [r0, #-48]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07. */
10003590:	f04f 3307 	mov.w	r3, #117901063	; 0x7070707
10003594:	f840 3c34 	str.w	r3, [r0, #-52]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06. */
10003598:	f04f 3306 	mov.w	r3, #101058054	; 0x6060606
1000359c:	f840 3c38 	str.w	r3, [r0, #-56]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05. */
100035a0:	f04f 3305 	mov.w	r3, #84215045	; 0x5050505
100035a4:	f840 3c3c 	str.w	r3, [r0, #-60]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04. */
100035a8:	f04f 3304 	mov.w	r3, #67372036	; 0x4040404
100035ac:	f840 3c40 	str.w	r3, [r0, #-64]
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN. */
100035b0:	f06f 0302 	mvn.w	r3, #2
100035b4:	f840 3c44 	str.w	r3, [r0, #-68]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack;            /* Slot used to hold this task's PSPLIM value. */
100035b8:	f840 1c48 	str.w	r1, [r0, #-72]
            #endif /* configENABLE_TRUSTZONE */
        }
        #endif /* portPRELOAD_REGISTERS */

        return pxTopOfStack;
    }
100035bc:	3848      	subs	r0, #72	; 0x48
100035be:	f85d 4b04 	ldr.w	r4, [sp], #4
100035c2:	4770      	bx	lr
100035c4:	10003349 	andne	r3, r0, r9, asr #6

100035c8 <xPortStartScheduler>:

#endif /* configENABLE_MPU */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
100035c8:	b510      	push	{r4, lr}
    }
    #endif /* #if ( ( configASSERT_DEFINED == 1 ) && ( portHAS_ARMV8M_MAIN_EXTENSION == 1 ) ) */

    /* Make PendSV and SysTick the lowest priority interrupts, and make SVCall
     * the highest priority. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
100035ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100035ce:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
100035d2:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
100035d6:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
100035da:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
100035de:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
100035e2:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
100035e6:	2400      	movs	r4, #0
100035e8:	f8c3 4d1c 	str.w	r4, [r3, #3356]	; 0xd1c
    }
    #endif /* configENABLE_MPU */

    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();
100035ec:	f7ff ff42 	bl	10003474 <vPortSetupTimerInterrupt>

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
100035f0:	4b04      	ldr	r3, [pc, #16]	; (10003604 <xPortStartScheduler+0x3c>)
100035f2:	601c      	str	r4, [r3, #0]
        xSchedulerRunning = pdTRUE;
    }
    #endif /* ( ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) ) */

    /* Start the first task. */
    vStartFirstTask();
100035f4:	f000 f81e 	bl	10003634 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
100035f8:	f7ff fa00 	bl	100029fc <vTaskSwitchContext>
    prvTaskExitError();
100035fc:	f7ff fea4 	bl	10003348 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
10003600:	4620      	mov	r0, r4
10003602:	bd10      	pop	{r4, pc}
10003604:	38000008 	stmdacc	r0, {r3}

10003608 <vRestoreContextOfFirstTask>:

#else /* configENABLE_MPU */

    void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003608:	4a09      	ldr	r2, [pc, #36]	; (10003630 <vRestoreContextOfFirstTask+0x28>)
1000360a:	6811      	ldr	r1, [r2, #0]
1000360c:	6808      	ldr	r0, [r1, #0]
1000360e:	c806      	ldmia	r0!, {r1, r2}
10003610:	f381 880b 	msr	PSPLIM, r1
10003614:	2102      	movs	r1, #2
10003616:	f381 8814 	msr	CONTROL, r1
1000361a:	3020      	adds	r0, #32
1000361c:	f380 8809 	msr	PSP, r0
10003620:	f3bf 8f6f 	isb	sy
10003624:	f04f 0000 	mov.w	r0, #0
10003628:	f380 8811 	msr	BASEPRI, r0
1000362c:	4710      	bx	r2
            "   isb                                             \n"
            "   mov  r0, #0                                     \n"
            "   msr  basepri, r0                                \n" /* Ensure that interrupts are enabled when the first task starts. */
            "   bx   r2                                         \n" /* Finally, branch to EXC_RETURN. */
        );
    }
1000362e:	85b00000 	ldrhi	r0, [r0, #0]!
10003632:	 	stmdami	r6, {fp, ip, sp}

10003634 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003634:	4806      	ldr	r0, [pc, #24]	; (10003650 <vStartFirstTask+0x1c>)
10003636:	6800      	ldr	r0, [r0, #0]
10003638:	6800      	ldr	r0, [r0, #0]
1000363a:	f380 8808 	msr	MSP, r0
1000363e:	b662      	cpsie	i
10003640:	b661      	cpsie	f
10003642:	f3bf 8f4f 	dsb	sy
10003646:	f3bf 8f6f 	isb	sy
1000364a:	df66      	svc	102	; 0x66
1000364c:	bf00      	nop
        "   isb                                             \n"
        "   svc %0                                          \n" /* System call to start the first task. */
        "   nop                                             \n"
        ::"i" ( portSVC_START_SCHEDULER ) : "memory"
    );
}
1000364e:	ed080000 	stc	0, cr0, [r8, #-0]
10003652:	 	vaddl.u32	q15, d15, d0

10003654 <ulSetInterruptMask>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003654:	f3ef 8011 	mrs	r0, BASEPRI
10003658:	f04f 01bf 	mov.w	r1, #191	; 0xbf
1000365c:	f381 8811 	msr	BASEPRI, r1
10003660:	f3bf 8f4f 	dsb	sy
10003664:	f3bf 8f6f 	isb	sy
10003668:	4770      	bx	lr

1000366a <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
1000366a:	f380 8811 	msr	BASEPRI, r0
1000366e:	f3bf 8f4f 	dsb	sy
10003672:	f3bf 8f6f 	isb	sy
10003676:	4770      	bx	lr

10003678 <PendSV_Handler>:

#else /* configENABLE_MPU */

    void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003678:	f3ef 8009 	mrs	r0, PSP
1000367c:	f3ef 820b 	mrs	r2, PSPLIM
10003680:	4673      	mov	r3, lr
10003682:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10003686:	4a0d      	ldr	r2, [pc, #52]	; (100036bc <PendSV_Handler+0x44>)
10003688:	6811      	ldr	r1, [r2, #0]
1000368a:	6008      	str	r0, [r1, #0]
1000368c:	f04f 00bf 	mov.w	r0, #191	; 0xbf
10003690:	f380 8811 	msr	BASEPRI, r0
10003694:	f3bf 8f4f 	dsb	sy
10003698:	f3bf 8f6f 	isb	sy
1000369c:	f7ff f9ae 	bl	100029fc <vTaskSwitchContext>
100036a0:	f04f 0000 	mov.w	r0, #0
100036a4:	f380 8811 	msr	BASEPRI, r0
100036a8:	4a04      	ldr	r2, [pc, #16]	; (100036bc <PendSV_Handler+0x44>)
100036aa:	6811      	ldr	r1, [r2, #0]
100036ac:	6808      	ldr	r0, [r1, #0]
100036ae:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100036b2:	f382 880b 	msr	PSPLIM, r2
100036b6:	f380 8809 	msr	PSP, r0
100036ba:	4718      	bx	r3
            "   msr psplim, r2                                  \n" /* Restore the PSPLIM register value for the task. */
            "   msr psp, r0                                     \n" /* Remember the new top of stack for the task. */
            "   bx r3                                           \n"
            ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
        );
    }
100036bc:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

100036c0 <SVC_Handler>:

#else /* ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) */

    void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
100036c0:	f01e 0f04 	tst.w	lr, #4
100036c4:	bf0c      	ite	eq
100036c6:	f3ef 8008 	mrseq	r0, MSP
100036ca:	f3ef 8009 	mrsne	r0, PSP
100036ce:	4901      	ldr	r1, [pc, #4]	; (100036d4 <SVC_Handler+0x14>)
100036d0:	4708      	bx	r1
            "   mrseq r0, msp                                   \n"
            "   mrsne r0, psp                                   \n"
            "   ldr r1, =vPortSVCHandler_C                      \n"
            "   bx r1                                           \n"
        );
    }
100036d2:	35230000 	strcc	r0, [r3, #-0]!
100036d6:	 	andcs	r1, r1, r0

100036d8 <_getpid>:
100036d8:	2001      	movs	r0, #1
100036da:	4770      	bx	lr

100036dc <_kill>:
100036dc:	b508      	push	{r3, lr}
100036de:	f000 f867 	bl	100037b0 <__errno>
100036e2:	2316      	movs	r3, #22
100036e4:	6003      	str	r3, [r0, #0]
100036e6:	f04f 30ff 	mov.w	r0, #4294967295
100036ea:	bd08      	pop	{r3, pc}

100036ec <_exit>:
100036ec:	b508      	push	{r3, lr}
100036ee:	f04f 31ff 	mov.w	r1, #4294967295
100036f2:	f7ff fff3 	bl	100036dc <_kill>
100036f6:	e7fe      	b.n	100036f6 <_exit+0xa>

100036f8 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
100036f8:	4815      	ldr	r0, [pc, #84]	; (10003750 <BusFault_Handler+0x4>)
                msr      psp, r0
100036fa:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
100036fe:	4815      	ldr	r0, [pc, #84]	; (10003754 <BusFault_Handler+0x8>)
                msr      msplim, r0
10003700:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10003704:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10003708:	f7fd f8bc 	bl	10000884 <SystemInit>

                ldr      r4, =__copy_table_start__
1000370c:	4c12      	ldr	r4, [pc, #72]	; (10003758 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
1000370e:	4d13      	ldr	r5, [pc, #76]	; (1000375c <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10003710:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10003712:	da0a      	bge.n	1000372a <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10003714:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10003716:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10003718:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
1000371a:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
1000371c:	3b04      	subs	r3, #4
                ittt     ge
1000371e:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10003720:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10003722:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10003724:	e7fa      	bge.n	1000371c <Reset_Handler+0x24>

                adds     r4, #12
10003726:	340c      	adds	r4, #12
                b        .L_loop0
10003728:	e7f2      	b.n	10003710 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
1000372a:	4b0d      	ldr	r3, [pc, #52]	; (10003760 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
1000372c:	4c0d      	ldr	r4, [pc, #52]	; (10003764 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
1000372e:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10003730:	da09      	bge.n	10003746 <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
10003732:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10003734:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10003736:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10003738:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
1000373a:	3a04      	subs	r2, #4
                itt      ge
1000373c:	bfa4      	itt	ge
                strge    r0, [r1, r2]
1000373e:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10003740:	e7fb      	bge.n	1000373a <Reset_Handler+0x42>

                adds     r3, #8
10003742:	3308      	adds	r3, #8
                b        .L_loop2
10003744:	e7f3      	b.n	1000372e <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10003746:	f7fd f887 	bl	10000858 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
1000374a:	e7fe      	b.n	1000374a <Reset_Handler+0x52>

1000374c <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
1000374c:	e7fe      	b.n	1000374c <BusFault_Handler>
1000374e:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
10003752:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10003756:	5c80380f 	stcpl	8, cr3, [r0], {15}
                ldr      r4, =__copy_table_start__
1000375a:	5c8c1000 	stcpl	0, cr1, [ip], {0}
                ldr      r5, =__copy_table_end__
1000375e:	5c8c1000 	stcpl	0, cr1, [ip], {0}
                ldr      r3, =__zero_table_start__
10003762:	5c8c1000 	stcpl	0, cr1, [ip], {0}
                ldr      r4, =__zero_table_end__
10003766:	 	ldrbtlt	r1, [r2], -r0

10003768 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
10003768:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
1000376a:	4b0e      	ldr	r3, [pc, #56]	; (100037a4 <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
1000376c:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
1000376e:	4b0e      	ldr	r3, [pc, #56]	; (100037a8 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
10003770:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
10003772:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
10003776:	d105      	bne.n	10003784 <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
10003778:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
1000377c:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
1000377e:	db0a      	blt.n	10003796 <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
10003780:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
10003782:	dc08      	bgt.n	10003796 <stack_invalid>

10003784 <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
10003784:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
10003788:	f01e 0f04 	tst.w	lr, #4
    ite     eq
1000378c:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
1000378e:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
10003792:	f3ef 8009 	mrsne	r0, PSP

10003796 <stack_invalid>:

stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
10003796:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003798:	4a04      	ldr	r2, [pc, #16]	; (100037ac <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
1000379a:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
1000379e:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
100037a0:	4710      	bx	r2
100037a2:	85680000 	strbhi	r0, [r8, #-0]!
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
100037a6:	856c3800 	strbhi	r3, [ip, #-2048]!	; 0xfffff800
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
100037aa:	1bc93800 	blne	f2517b2 <__RAM_SIZE+0xf1517b2>
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
100037ae:	 	blmi	100477b6 <__copy_table_end__+0x41b2a>

100037b0 <__errno>:
100037b0:	4b01      	ldr	r3, [pc, #4]	; (100037b8 <__errno+0x8>)
100037b2:	6818      	ldr	r0, [r3, #0]
100037b4:	4770      	bx	lr
100037b6:	bf00      	nop
100037b8:	3800000c 	stmdacc	r0, {r2, r3}

100037bc <memcpy>:
100037bc:	4684      	mov	ip, r0
100037be:	ea41 0300 	orr.w	r3, r1, r0
100037c2:	f013 0303 	ands.w	r3, r3, #3
100037c6:	d149      	bne.n	1000385c <memcpy+0xa0>
100037c8:	3a40      	subs	r2, #64	; 0x40
100037ca:	d323      	bcc.n	10003814 <memcpy+0x58>
100037cc:	680b      	ldr	r3, [r1, #0]
100037ce:	6003      	str	r3, [r0, #0]
100037d0:	684b      	ldr	r3, [r1, #4]
100037d2:	6043      	str	r3, [r0, #4]
100037d4:	688b      	ldr	r3, [r1, #8]
100037d6:	6083      	str	r3, [r0, #8]
100037d8:	68cb      	ldr	r3, [r1, #12]
100037da:	60c3      	str	r3, [r0, #12]
100037dc:	690b      	ldr	r3, [r1, #16]
100037de:	6103      	str	r3, [r0, #16]
100037e0:	694b      	ldr	r3, [r1, #20]
100037e2:	6143      	str	r3, [r0, #20]
100037e4:	698b      	ldr	r3, [r1, #24]
100037e6:	6183      	str	r3, [r0, #24]
100037e8:	69cb      	ldr	r3, [r1, #28]
100037ea:	61c3      	str	r3, [r0, #28]
100037ec:	6a0b      	ldr	r3, [r1, #32]
100037ee:	6203      	str	r3, [r0, #32]
100037f0:	6a4b      	ldr	r3, [r1, #36]	; 0x24
100037f2:	6243      	str	r3, [r0, #36]	; 0x24
100037f4:	6a8b      	ldr	r3, [r1, #40]	; 0x28
100037f6:	6283      	str	r3, [r0, #40]	; 0x28
100037f8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
100037fa:	62c3      	str	r3, [r0, #44]	; 0x2c
100037fc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
100037fe:	6303      	str	r3, [r0, #48]	; 0x30
10003800:	6b4b      	ldr	r3, [r1, #52]	; 0x34
10003802:	6343      	str	r3, [r0, #52]	; 0x34
10003804:	6b8b      	ldr	r3, [r1, #56]	; 0x38
10003806:	6383      	str	r3, [r0, #56]	; 0x38
10003808:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
1000380a:	63c3      	str	r3, [r0, #60]	; 0x3c
1000380c:	3040      	adds	r0, #64	; 0x40
1000380e:	3140      	adds	r1, #64	; 0x40
10003810:	3a40      	subs	r2, #64	; 0x40
10003812:	d2db      	bcs.n	100037cc <memcpy+0x10>
10003814:	3230      	adds	r2, #48	; 0x30
10003816:	d30b      	bcc.n	10003830 <memcpy+0x74>
10003818:	680b      	ldr	r3, [r1, #0]
1000381a:	6003      	str	r3, [r0, #0]
1000381c:	684b      	ldr	r3, [r1, #4]
1000381e:	6043      	str	r3, [r0, #4]
10003820:	688b      	ldr	r3, [r1, #8]
10003822:	6083      	str	r3, [r0, #8]
10003824:	68cb      	ldr	r3, [r1, #12]
10003826:	60c3      	str	r3, [r0, #12]
10003828:	3010      	adds	r0, #16
1000382a:	3110      	adds	r1, #16
1000382c:	3a10      	subs	r2, #16
1000382e:	d2f3      	bcs.n	10003818 <memcpy+0x5c>
10003830:	320c      	adds	r2, #12
10003832:	d305      	bcc.n	10003840 <memcpy+0x84>
10003834:	f851 3b04 	ldr.w	r3, [r1], #4
10003838:	f840 3b04 	str.w	r3, [r0], #4
1000383c:	3a04      	subs	r2, #4
1000383e:	d2f9      	bcs.n	10003834 <memcpy+0x78>
10003840:	3204      	adds	r2, #4
10003842:	d008      	beq.n	10003856 <memcpy+0x9a>
10003844:	07d2      	lsls	r2, r2, #31
10003846:	bf1c      	itt	ne
10003848:	f811 3b01 	ldrbne.w	r3, [r1], #1
1000384c:	f800 3b01 	strbne.w	r3, [r0], #1
10003850:	d301      	bcc.n	10003856 <memcpy+0x9a>
10003852:	880b      	ldrh	r3, [r1, #0]
10003854:	8003      	strh	r3, [r0, #0]
10003856:	4660      	mov	r0, ip
10003858:	4770      	bx	lr
1000385a:	bf00      	nop
1000385c:	2a08      	cmp	r2, #8
1000385e:	d313      	bcc.n	10003888 <memcpy+0xcc>
10003860:	078b      	lsls	r3, r1, #30
10003862:	d0b1      	beq.n	100037c8 <memcpy+0xc>
10003864:	f010 0303 	ands.w	r3, r0, #3
10003868:	d0ae      	beq.n	100037c8 <memcpy+0xc>
1000386a:	f1c3 0304 	rsb	r3, r3, #4
1000386e:	1ad2      	subs	r2, r2, r3
10003870:	07db      	lsls	r3, r3, #31
10003872:	bf1c      	itt	ne
10003874:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003878:	f800 3b01 	strbne.w	r3, [r0], #1
1000387c:	d3a4      	bcc.n	100037c8 <memcpy+0xc>
1000387e:	f831 3b02 	ldrh.w	r3, [r1], #2
10003882:	f820 3b02 	strh.w	r3, [r0], #2
10003886:	e79f      	b.n	100037c8 <memcpy+0xc>
10003888:	3a04      	subs	r2, #4
1000388a:	d3d9      	bcc.n	10003840 <memcpy+0x84>
1000388c:	3a01      	subs	r2, #1
1000388e:	f811 3b01 	ldrb.w	r3, [r1], #1
10003892:	f800 3b01 	strb.w	r3, [r0], #1
10003896:	d2f9      	bcs.n	1000388c <memcpy+0xd0>
10003898:	780b      	ldrb	r3, [r1, #0]
1000389a:	7003      	strb	r3, [r0, #0]
1000389c:	784b      	ldrb	r3, [r1, #1]
1000389e:	7043      	strb	r3, [r0, #1]
100038a0:	788b      	ldrb	r3, [r1, #2]
100038a2:	7083      	strb	r3, [r0, #2]
100038a4:	4660      	mov	r0, ip
100038a6:	4770      	bx	lr

100038a8 <memset>:
100038a8:	b570      	push	{r4, r5, r6, lr}
100038aa:	0786      	lsls	r6, r0, #30
100038ac:	d048      	beq.n	10003940 <memset+0x98>
100038ae:	1e54      	subs	r4, r2, #1
100038b0:	2a00      	cmp	r2, #0
100038b2:	d03f      	beq.n	10003934 <memset+0x8c>
100038b4:	b2ca      	uxtb	r2, r1
100038b6:	4603      	mov	r3, r0
100038b8:	e001      	b.n	100038be <memset+0x16>
100038ba:	3c01      	subs	r4, #1
100038bc:	d33a      	bcc.n	10003934 <memset+0x8c>
100038be:	f803 2b01 	strb.w	r2, [r3], #1
100038c2:	079d      	lsls	r5, r3, #30
100038c4:	d1f9      	bne.n	100038ba <memset+0x12>
100038c6:	2c03      	cmp	r4, #3
100038c8:	d92d      	bls.n	10003926 <memset+0x7e>
100038ca:	b2cd      	uxtb	r5, r1
100038cc:	2c0f      	cmp	r4, #15
100038ce:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
100038d2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
100038d6:	d936      	bls.n	10003946 <memset+0x9e>
100038d8:	f1a4 0c10 	sub.w	ip, r4, #16
100038dc:	f103 0e20 	add.w	lr, r3, #32
100038e0:	f103 0210 	add.w	r2, r3, #16
100038e4:	f02c 060f 	bic.w	r6, ip, #15
100038e8:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
100038ec:	44b6      	add	lr, r6
100038ee:	e942 5504 	strd	r5, r5, [r2, #-16]
100038f2:	e942 5502 	strd	r5, r5, [r2, #-8]
100038f6:	3210      	adds	r2, #16
100038f8:	4572      	cmp	r2, lr
100038fa:	d1f8      	bne.n	100038ee <memset+0x46>
100038fc:	f10c 0201 	add.w	r2, ip, #1
10003900:	f014 0f0c 	tst.w	r4, #12
10003904:	f004 0c0f 	and.w	ip, r4, #15
10003908:	eb03 1202 	add.w	r2, r3, r2, lsl #4
1000390c:	d013      	beq.n	10003936 <memset+0x8e>
1000390e:	f1ac 0304 	sub.w	r3, ip, #4
10003912:	f023 0303 	bic.w	r3, r3, #3
10003916:	3304      	adds	r3, #4
10003918:	4413      	add	r3, r2
1000391a:	f842 5b04 	str.w	r5, [r2], #4
1000391e:	4293      	cmp	r3, r2
10003920:	d1fb      	bne.n	1000391a <memset+0x72>
10003922:	f00c 0403 	and.w	r4, ip, #3
10003926:	b12c      	cbz	r4, 10003934 <memset+0x8c>
10003928:	b2ca      	uxtb	r2, r1
1000392a:	441c      	add	r4, r3
1000392c:	f803 2b01 	strb.w	r2, [r3], #1
10003930:	429c      	cmp	r4, r3
10003932:	d1fb      	bne.n	1000392c <memset+0x84>
10003934:	bd70      	pop	{r4, r5, r6, pc}
10003936:	4664      	mov	r4, ip
10003938:	4613      	mov	r3, r2
1000393a:	2c00      	cmp	r4, #0
1000393c:	d1f4      	bne.n	10003928 <memset+0x80>
1000393e:	e7f9      	b.n	10003934 <memset+0x8c>
10003940:	4603      	mov	r3, r0
10003942:	4614      	mov	r4, r2
10003944:	e7bf      	b.n	100038c6 <memset+0x1e>
10003946:	461a      	mov	r2, r3
10003948:	46a4      	mov	ip, r4
1000394a:	e7e0      	b.n	1000390e <memset+0x66>

1000394c <register_fini>:
1000394c:	4b02      	ldr	r3, [pc, #8]	; (10003958 <register_fini+0xc>)
1000394e:	b113      	cbz	r3, 10003956 <register_fini+0xa>
10003950:	4802      	ldr	r0, [pc, #8]	; (1000395c <register_fini+0x10>)
10003952:	f000 b805 	b.w	10003960 <atexit>
10003956:	4770      	bx	lr
10003958:	00000000 	andeq	r0, r0, r0
1000395c:	1000396d 	andne	r3, r0, sp, ror #18

10003960 <atexit>:
10003960:	2300      	movs	r3, #0
10003962:	4601      	mov	r1, r0
10003964:	461a      	mov	r2, r3
10003966:	4618      	mov	r0, r3
10003968:	f000 b81a 	b.w	100039a0 <__register_exitproc>

1000396c <__libc_fini_array>:
1000396c:	b538      	push	{r3, r4, r5, lr}
1000396e:	4b08      	ldr	r3, [pc, #32]	; (10003990 <__libc_fini_array+0x24>)
10003970:	4d08      	ldr	r5, [pc, #32]	; (10003994 <__libc_fini_array+0x28>)
10003972:	1b5b      	subs	r3, r3, r5
10003974:	109c      	asrs	r4, r3, #2
10003976:	d007      	beq.n	10003988 <__libc_fini_array+0x1c>
10003978:	3b04      	subs	r3, #4
1000397a:	441d      	add	r5, r3
1000397c:	3c01      	subs	r4, #1
1000397e:	f855 3904 	ldr.w	r3, [r5], #-4
10003982:	4798      	blx	r3
10003984:	2c00      	cmp	r4, #0
10003986:	d1f9      	bne.n	1000397c <__libc_fini_array+0x10>
10003988:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1000398c:	f001 be84 	b.w	10005698 <_fini>
10003990:	38000448 	stmdacc	r0, {r3, r6, sl}
10003994:	38000444 	stmdacc	r0, {r2, r6, sl}

10003998 <__retarget_lock_acquire_recursive>:
10003998:	4770      	bx	lr
1000399a:	bf00      	nop

1000399c <__retarget_lock_release_recursive>:
1000399c:	4770      	bx	lr
1000399e:	bf00      	nop

100039a0 <__register_exitproc>:
100039a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100039a4:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003a2c <__register_exitproc+0x8c>
100039a8:	4606      	mov	r6, r0
100039aa:	4698      	mov	r8, r3
100039ac:	460f      	mov	r7, r1
100039ae:	f8da 0000 	ldr.w	r0, [sl]
100039b2:	4691      	mov	r9, r2
100039b4:	f7ff fff0 	bl	10003998 <__retarget_lock_acquire_recursive>
100039b8:	4b1b      	ldr	r3, [pc, #108]	; (10003a28 <__register_exitproc+0x88>)
100039ba:	681b      	ldr	r3, [r3, #0]
100039bc:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
100039c0:	b334      	cbz	r4, 10003a10 <__register_exitproc+0x70>
100039c2:	6865      	ldr	r5, [r4, #4]
100039c4:	2d1f      	cmp	r5, #31
100039c6:	dc28      	bgt.n	10003a1a <__register_exitproc+0x7a>
100039c8:	b95e      	cbnz	r6, 100039e2 <__register_exitproc+0x42>
100039ca:	1c6b      	adds	r3, r5, #1
100039cc:	3502      	adds	r5, #2
100039ce:	f8da 0000 	ldr.w	r0, [sl]
100039d2:	6063      	str	r3, [r4, #4]
100039d4:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
100039d8:	f7ff ffe0 	bl	1000399c <__retarget_lock_release_recursive>
100039dc:	2000      	movs	r0, #0
100039de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100039e2:	eb04 0185 	add.w	r1, r4, r5, lsl #2
100039e6:	2301      	movs	r3, #1
100039e8:	2e02      	cmp	r6, #2
100039ea:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
100039ee:	fa03 f305 	lsl.w	r3, r3, r5
100039f2:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
100039f6:	ea42 0203 	orr.w	r2, r2, r3
100039fa:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
100039fe:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003a02:	d1e2      	bne.n	100039ca <__register_exitproc+0x2a>
10003a04:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003a08:	4313      	orrs	r3, r2
10003a0a:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003a0e:	e7dc      	b.n	100039ca <__register_exitproc+0x2a>
10003a10:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003a14:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003a18:	e7d3      	b.n	100039c2 <__register_exitproc+0x22>
10003a1a:	f8da 0000 	ldr.w	r0, [sl]
10003a1e:	f7ff ffbd 	bl	1000399c <__retarget_lock_release_recursive>
10003a22:	f04f 30ff 	mov.w	r0, #4294967295
10003a26:	e7da      	b.n	100039de <__register_exitproc+0x3e>
10003a28:	10005ba0 	andne	r5, r0, r0, lsr #23
10003a2c:	38000438 	stmdacc	r0, {r3, r4, r5, sl}

10003a30 <__aeabi_drsub>:
10003a30:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10003a34:	e002      	b.n	10003a3c <__adddf3>
10003a36:	bf00      	nop

10003a38 <__aeabi_dsub>:
10003a38:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10003a3c <__adddf3>:
10003a3c:	b530      	push	{r4, r5, lr}
10003a3e:	ea4f 0441 	mov.w	r4, r1, lsl #1
10003a42:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003a46:	ea94 0f05 	teq	r4, r5
10003a4a:	bf08      	it	eq
10003a4c:	ea90 0f02 	teqeq	r0, r2
10003a50:	bf1f      	itttt	ne
10003a52:	ea54 0c00 	orrsne.w	ip, r4, r0
10003a56:	ea55 0c02 	orrsne.w	ip, r5, r2
10003a5a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10003a5e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003a62:	f000 80e2 	beq.w	10003c2a <__adddf3+0x1ee>
10003a66:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003a6a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10003a6e:	bfb8      	it	lt
10003a70:	426d      	neglt	r5, r5
10003a72:	dd0c      	ble.n	10003a8e <__adddf3+0x52>
10003a74:	442c      	add	r4, r5
10003a76:	ea80 0202 	eor.w	r2, r0, r2
10003a7a:	ea81 0303 	eor.w	r3, r1, r3
10003a7e:	ea82 0000 	eor.w	r0, r2, r0
10003a82:	ea83 0101 	eor.w	r1, r3, r1
10003a86:	ea80 0202 	eor.w	r2, r0, r2
10003a8a:	ea81 0303 	eor.w	r3, r1, r3
10003a8e:	2d36      	cmp	r5, #54	; 0x36
10003a90:	bf88      	it	hi
10003a92:	bd30      	pophi	{r4, r5, pc}
10003a94:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003a98:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003a9c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10003aa0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003aa4:	d002      	beq.n	10003aac <__adddf3+0x70>
10003aa6:	4240      	negs	r0, r0
10003aa8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003aac:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10003ab0:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003ab4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003ab8:	d002      	beq.n	10003ac0 <__adddf3+0x84>
10003aba:	4252      	negs	r2, r2
10003abc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10003ac0:	ea94 0f05 	teq	r4, r5
10003ac4:	f000 80a7 	beq.w	10003c16 <__adddf3+0x1da>
10003ac8:	f1a4 0401 	sub.w	r4, r4, #1
10003acc:	f1d5 0e20 	rsbs	lr, r5, #32
10003ad0:	db0d      	blt.n	10003aee <__adddf3+0xb2>
10003ad2:	fa02 fc0e 	lsl.w	ip, r2, lr
10003ad6:	fa22 f205 	lsr.w	r2, r2, r5
10003ada:	1880      	adds	r0, r0, r2
10003adc:	f141 0100 	adc.w	r1, r1, #0
10003ae0:	fa03 f20e 	lsl.w	r2, r3, lr
10003ae4:	1880      	adds	r0, r0, r2
10003ae6:	fa43 f305 	asr.w	r3, r3, r5
10003aea:	4159      	adcs	r1, r3
10003aec:	e00e      	b.n	10003b0c <__adddf3+0xd0>
10003aee:	f1a5 0520 	sub.w	r5, r5, #32
10003af2:	f10e 0e20 	add.w	lr, lr, #32
10003af6:	2a01      	cmp	r2, #1
10003af8:	fa03 fc0e 	lsl.w	ip, r3, lr
10003afc:	bf28      	it	cs
10003afe:	f04c 0c02 	orrcs.w	ip, ip, #2
10003b02:	fa43 f305 	asr.w	r3, r3, r5
10003b06:	18c0      	adds	r0, r0, r3
10003b08:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10003b0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003b10:	d507      	bpl.n	10003b22 <__adddf3+0xe6>
10003b12:	f04f 0e00 	mov.w	lr, #0
10003b16:	f1dc 0c00 	rsbs	ip, ip, #0
10003b1a:	eb7e 0000 	sbcs.w	r0, lr, r0
10003b1e:	eb6e 0101 	sbc.w	r1, lr, r1
10003b22:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10003b26:	d31b      	bcc.n	10003b60 <__adddf3+0x124>
10003b28:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10003b2c:	d30c      	bcc.n	10003b48 <__adddf3+0x10c>
10003b2e:	0849      	lsrs	r1, r1, #1
10003b30:	ea5f 0030 	movs.w	r0, r0, rrx
10003b34:	ea4f 0c3c 	mov.w	ip, ip, rrx
10003b38:	f104 0401 	add.w	r4, r4, #1
10003b3c:	ea4f 5244 	mov.w	r2, r4, lsl #21
10003b40:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003b44:	f080 809a 	bcs.w	10003c7c <__adddf3+0x240>
10003b48:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003b4c:	bf08      	it	eq
10003b4e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10003b52:	f150 0000 	adcs.w	r0, r0, #0
10003b56:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003b5a:	ea41 0105 	orr.w	r1, r1, r5
10003b5e:	bd30      	pop	{r4, r5, pc}
10003b60:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003b64:	4140      	adcs	r0, r0
10003b66:	eb41 0101 	adc.w	r1, r1, r1
10003b6a:	3c01      	subs	r4, #1
10003b6c:	bf28      	it	cs
10003b6e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10003b72:	d2e9      	bcs.n	10003b48 <__adddf3+0x10c>
10003b74:	f091 0f00 	teq	r1, #0
10003b78:	bf04      	itt	eq
10003b7a:	4601      	moveq	r1, r0
10003b7c:	2000      	moveq	r0, #0
10003b7e:	fab1 f381 	clz	r3, r1
10003b82:	bf08      	it	eq
10003b84:	3320      	addeq	r3, #32
10003b86:	f1a3 030b 	sub.w	r3, r3, #11
10003b8a:	f1b3 0220 	subs.w	r2, r3, #32
10003b8e:	da0c      	bge.n	10003baa <__adddf3+0x16e>
10003b90:	320c      	adds	r2, #12
10003b92:	dd08      	ble.n	10003ba6 <__adddf3+0x16a>
10003b94:	f102 0c14 	add.w	ip, r2, #20
10003b98:	f1c2 020c 	rsb	r2, r2, #12
10003b9c:	fa01 f00c 	lsl.w	r0, r1, ip
10003ba0:	fa21 f102 	lsr.w	r1, r1, r2
10003ba4:	e00c      	b.n	10003bc0 <__adddf3+0x184>
10003ba6:	f102 0214 	add.w	r2, r2, #20
10003baa:	bfd8      	it	le
10003bac:	f1c2 0c20 	rsble	ip, r2, #32
10003bb0:	fa01 f102 	lsl.w	r1, r1, r2
10003bb4:	fa20 fc0c 	lsr.w	ip, r0, ip
10003bb8:	bfdc      	itt	le
10003bba:	ea41 010c 	orrle.w	r1, r1, ip
10003bbe:	4090      	lslle	r0, r2
10003bc0:	1ae4      	subs	r4, r4, r3
10003bc2:	bfa2      	ittt	ge
10003bc4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003bc8:	4329      	orrge	r1, r5
10003bca:	bd30      	popge	{r4, r5, pc}
10003bcc:	ea6f 0404 	mvn.w	r4, r4
10003bd0:	3c1f      	subs	r4, #31
10003bd2:	da1c      	bge.n	10003c0e <__adddf3+0x1d2>
10003bd4:	340c      	adds	r4, #12
10003bd6:	dc0e      	bgt.n	10003bf6 <__adddf3+0x1ba>
10003bd8:	f104 0414 	add.w	r4, r4, #20
10003bdc:	f1c4 0220 	rsb	r2, r4, #32
10003be0:	fa20 f004 	lsr.w	r0, r0, r4
10003be4:	fa01 f302 	lsl.w	r3, r1, r2
10003be8:	ea40 0003 	orr.w	r0, r0, r3
10003bec:	fa21 f304 	lsr.w	r3, r1, r4
10003bf0:	ea45 0103 	orr.w	r1, r5, r3
10003bf4:	bd30      	pop	{r4, r5, pc}
10003bf6:	f1c4 040c 	rsb	r4, r4, #12
10003bfa:	f1c4 0220 	rsb	r2, r4, #32
10003bfe:	fa20 f002 	lsr.w	r0, r0, r2
10003c02:	fa01 f304 	lsl.w	r3, r1, r4
10003c06:	ea40 0003 	orr.w	r0, r0, r3
10003c0a:	4629      	mov	r1, r5
10003c0c:	bd30      	pop	{r4, r5, pc}
10003c0e:	fa21 f004 	lsr.w	r0, r1, r4
10003c12:	4629      	mov	r1, r5
10003c14:	bd30      	pop	{r4, r5, pc}
10003c16:	f094 0f00 	teq	r4, #0
10003c1a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10003c1e:	bf06      	itte	eq
10003c20:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10003c24:	3401      	addeq	r4, #1
10003c26:	3d01      	subne	r5, #1
10003c28:	e74e      	b.n	10003ac8 <__adddf3+0x8c>
10003c2a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003c2e:	bf18      	it	ne
10003c30:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003c34:	d029      	beq.n	10003c8a <__adddf3+0x24e>
10003c36:	ea94 0f05 	teq	r4, r5
10003c3a:	bf08      	it	eq
10003c3c:	ea90 0f02 	teqeq	r0, r2
10003c40:	d005      	beq.n	10003c4e <__adddf3+0x212>
10003c42:	ea54 0c00 	orrs.w	ip, r4, r0
10003c46:	bf04      	itt	eq
10003c48:	4619      	moveq	r1, r3
10003c4a:	4610      	moveq	r0, r2
10003c4c:	bd30      	pop	{r4, r5, pc}
10003c4e:	ea91 0f03 	teq	r1, r3
10003c52:	bf1e      	ittt	ne
10003c54:	2100      	movne	r1, #0
10003c56:	2000      	movne	r0, #0
10003c58:	bd30      	popne	{r4, r5, pc}
10003c5a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10003c5e:	d105      	bne.n	10003c6c <__adddf3+0x230>
10003c60:	0040      	lsls	r0, r0, #1
10003c62:	4149      	adcs	r1, r1
10003c64:	bf28      	it	cs
10003c66:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10003c6a:	bd30      	pop	{r4, r5, pc}
10003c6c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10003c70:	bf3c      	itt	cc
10003c72:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10003c76:	bd30      	popcc	{r4, r5, pc}
10003c78:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003c7c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10003c80:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003c84:	f04f 0000 	mov.w	r0, #0
10003c88:	bd30      	pop	{r4, r5, pc}
10003c8a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003c8e:	bf1a      	itte	ne
10003c90:	4619      	movne	r1, r3
10003c92:	4610      	movne	r0, r2
10003c94:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10003c98:	bf1c      	itt	ne
10003c9a:	460b      	movne	r3, r1
10003c9c:	4602      	movne	r2, r0
10003c9e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10003ca2:	bf06      	itte	eq
10003ca4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10003ca8:	ea91 0f03 	teqeq	r1, r3
10003cac:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10003cb0:	bd30      	pop	{r4, r5, pc}
10003cb2:	bf00      	nop

10003cb4 <__aeabi_ui2d>:
10003cb4:	f090 0f00 	teq	r0, #0
10003cb8:	bf04      	itt	eq
10003cba:	2100      	moveq	r1, #0
10003cbc:	4770      	bxeq	lr
10003cbe:	b530      	push	{r4, r5, lr}
10003cc0:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003cc4:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003cc8:	f04f 0500 	mov.w	r5, #0
10003ccc:	f04f 0100 	mov.w	r1, #0
10003cd0:	e750      	b.n	10003b74 <__adddf3+0x138>
10003cd2:	bf00      	nop

10003cd4 <__aeabi_i2d>:
10003cd4:	f090 0f00 	teq	r0, #0
10003cd8:	bf04      	itt	eq
10003cda:	2100      	moveq	r1, #0
10003cdc:	4770      	bxeq	lr
10003cde:	b530      	push	{r4, r5, lr}
10003ce0:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003ce4:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003ce8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10003cec:	bf48      	it	mi
10003cee:	4240      	negmi	r0, r0
10003cf0:	f04f 0100 	mov.w	r1, #0
10003cf4:	e73e      	b.n	10003b74 <__adddf3+0x138>
10003cf6:	bf00      	nop

10003cf8 <__aeabi_f2d>:
10003cf8:	0042      	lsls	r2, r0, #1
10003cfa:	ea4f 01e2 	mov.w	r1, r2, asr #3
10003cfe:	ea4f 0131 	mov.w	r1, r1, rrx
10003d02:	ea4f 7002 	mov.w	r0, r2, lsl #28
10003d06:	bf1f      	itttt	ne
10003d08:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10003d0c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10003d10:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
10003d14:	4770      	bxne	lr
10003d16:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
10003d1a:	bf08      	it	eq
10003d1c:	4770      	bxeq	lr
10003d1e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
10003d22:	bf04      	itt	eq
10003d24:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
10003d28:	4770      	bxeq	lr
10003d2a:	b530      	push	{r4, r5, lr}
10003d2c:	f44f 7460 	mov.w	r4, #896	; 0x380
10003d30:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003d34:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003d38:	e71c      	b.n	10003b74 <__adddf3+0x138>
10003d3a:	bf00      	nop

10003d3c <__aeabi_ul2d>:
10003d3c:	ea50 0201 	orrs.w	r2, r0, r1
10003d40:	bf08      	it	eq
10003d42:	4770      	bxeq	lr
10003d44:	b530      	push	{r4, r5, lr}
10003d46:	f04f 0500 	mov.w	r5, #0
10003d4a:	e00a      	b.n	10003d62 <__aeabi_l2d+0x16>

10003d4c <__aeabi_l2d>:
10003d4c:	ea50 0201 	orrs.w	r2, r0, r1
10003d50:	bf08      	it	eq
10003d52:	4770      	bxeq	lr
10003d54:	b530      	push	{r4, r5, lr}
10003d56:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10003d5a:	d502      	bpl.n	10003d62 <__aeabi_l2d+0x16>
10003d5c:	4240      	negs	r0, r0
10003d5e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003d62:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003d66:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003d6a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10003d6e:	f43f aed8 	beq.w	10003b22 <__adddf3+0xe6>
10003d72:	f04f 0203 	mov.w	r2, #3
10003d76:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003d7a:	bf18      	it	ne
10003d7c:	3203      	addne	r2, #3
10003d7e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003d82:	bf18      	it	ne
10003d84:	3203      	addne	r2, #3
10003d86:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10003d8a:	f1c2 0320 	rsb	r3, r2, #32
10003d8e:	fa00 fc03 	lsl.w	ip, r0, r3
10003d92:	fa20 f002 	lsr.w	r0, r0, r2
10003d96:	fa01 fe03 	lsl.w	lr, r1, r3
10003d9a:	ea40 000e 	orr.w	r0, r0, lr
10003d9e:	fa21 f102 	lsr.w	r1, r1, r2
10003da2:	4414      	add	r4, r2
10003da4:	e6bd      	b.n	10003b22 <__adddf3+0xe6>
10003da6:	bf00      	nop

10003da8 <__aeabi_dmul>:
10003da8:	b570      	push	{r4, r5, r6, lr}
10003daa:	f04f 0cff 	mov.w	ip, #255	; 0xff
10003dae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10003db2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10003db6:	bf1d      	ittte	ne
10003db8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10003dbc:	ea94 0f0c 	teqne	r4, ip
10003dc0:	ea95 0f0c 	teqne	r5, ip
10003dc4:	f000 f8de 	bleq	10003f84 <__aeabi_dmul+0x1dc>
10003dc8:	442c      	add	r4, r5
10003dca:	ea81 0603 	eor.w	r6, r1, r3
10003dce:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10003dd2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10003dd6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10003dda:	bf18      	it	ne
10003ddc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10003de0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003de4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
10003de8:	d038      	beq.n	10003e5c <__aeabi_dmul+0xb4>
10003dea:	fba0 ce02 	umull	ip, lr, r0, r2
10003dee:	f04f 0500 	mov.w	r5, #0
10003df2:	fbe1 e502 	umlal	lr, r5, r1, r2
10003df6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
10003dfa:	fbe0 e503 	umlal	lr, r5, r0, r3
10003dfe:	f04f 0600 	mov.w	r6, #0
10003e02:	fbe1 5603 	umlal	r5, r6, r1, r3
10003e06:	f09c 0f00 	teq	ip, #0
10003e0a:	bf18      	it	ne
10003e0c:	f04e 0e01 	orrne.w	lr, lr, #1
10003e10:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
10003e14:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
10003e18:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10003e1c:	d204      	bcs.n	10003e28 <__aeabi_dmul+0x80>
10003e1e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10003e22:	416d      	adcs	r5, r5
10003e24:	eb46 0606 	adc.w	r6, r6, r6
10003e28:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10003e2c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10003e30:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10003e34:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10003e38:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10003e3c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10003e40:	bf88      	it	hi
10003e42:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10003e46:	d81e      	bhi.n	10003e86 <__aeabi_dmul+0xde>
10003e48:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10003e4c:	bf08      	it	eq
10003e4e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10003e52:	f150 0000 	adcs.w	r0, r0, #0
10003e56:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003e5a:	bd70      	pop	{r4, r5, r6, pc}
10003e5c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10003e60:	ea46 0101 	orr.w	r1, r6, r1
10003e64:	ea40 0002 	orr.w	r0, r0, r2
10003e68:	ea81 0103 	eor.w	r1, r1, r3
10003e6c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10003e70:	bfc2      	ittt	gt
10003e72:	ebd4 050c 	rsbsgt	r5, r4, ip
10003e76:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10003e7a:	bd70      	popgt	{r4, r5, r6, pc}
10003e7c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003e80:	f04f 0e00 	mov.w	lr, #0
10003e84:	3c01      	subs	r4, #1
10003e86:	f300 80ab 	bgt.w	10003fe0 <__aeabi_dmul+0x238>
10003e8a:	f114 0f36 	cmn.w	r4, #54	; 0x36
10003e8e:	bfde      	ittt	le
10003e90:	2000      	movle	r0, #0
10003e92:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10003e96:	bd70      	pople	{r4, r5, r6, pc}
10003e98:	f1c4 0400 	rsb	r4, r4, #0
10003e9c:	3c20      	subs	r4, #32
10003e9e:	da35      	bge.n	10003f0c <__aeabi_dmul+0x164>
10003ea0:	340c      	adds	r4, #12
10003ea2:	dc1b      	bgt.n	10003edc <__aeabi_dmul+0x134>
10003ea4:	f104 0414 	add.w	r4, r4, #20
10003ea8:	f1c4 0520 	rsb	r5, r4, #32
10003eac:	fa00 f305 	lsl.w	r3, r0, r5
10003eb0:	fa20 f004 	lsr.w	r0, r0, r4
10003eb4:	fa01 f205 	lsl.w	r2, r1, r5
10003eb8:	ea40 0002 	orr.w	r0, r0, r2
10003ebc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
10003ec0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003ec4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10003ec8:	fa21 f604 	lsr.w	r6, r1, r4
10003ecc:	eb42 0106 	adc.w	r1, r2, r6
10003ed0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003ed4:	bf08      	it	eq
10003ed6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003eda:	bd70      	pop	{r4, r5, r6, pc}
10003edc:	f1c4 040c 	rsb	r4, r4, #12
10003ee0:	f1c4 0520 	rsb	r5, r4, #32
10003ee4:	fa00 f304 	lsl.w	r3, r0, r4
10003ee8:	fa20 f005 	lsr.w	r0, r0, r5
10003eec:	fa01 f204 	lsl.w	r2, r1, r4
10003ef0:	ea40 0002 	orr.w	r0, r0, r2
10003ef4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003ef8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10003efc:	f141 0100 	adc.w	r1, r1, #0
10003f00:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003f04:	bf08      	it	eq
10003f06:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003f0a:	bd70      	pop	{r4, r5, r6, pc}
10003f0c:	f1c4 0520 	rsb	r5, r4, #32
10003f10:	fa00 f205 	lsl.w	r2, r0, r5
10003f14:	ea4e 0e02 	orr.w	lr, lr, r2
10003f18:	fa20 f304 	lsr.w	r3, r0, r4
10003f1c:	fa01 f205 	lsl.w	r2, r1, r5
10003f20:	ea43 0302 	orr.w	r3, r3, r2
10003f24:	fa21 f004 	lsr.w	r0, r1, r4
10003f28:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003f2c:	fa21 f204 	lsr.w	r2, r1, r4
10003f30:	ea20 0002 	bic.w	r0, r0, r2
10003f34:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10003f38:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003f3c:	bf08      	it	eq
10003f3e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003f42:	bd70      	pop	{r4, r5, r6, pc}
10003f44:	f094 0f00 	teq	r4, #0
10003f48:	d10f      	bne.n	10003f6a <__aeabi_dmul+0x1c2>
10003f4a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
10003f4e:	0040      	lsls	r0, r0, #1
10003f50:	eb41 0101 	adc.w	r1, r1, r1
10003f54:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10003f58:	bf08      	it	eq
10003f5a:	3c01      	subeq	r4, #1
10003f5c:	d0f7      	beq.n	10003f4e <__aeabi_dmul+0x1a6>
10003f5e:	ea41 0106 	orr.w	r1, r1, r6
10003f62:	f095 0f00 	teq	r5, #0
10003f66:	bf18      	it	ne
10003f68:	4770      	bxne	lr
10003f6a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
10003f6e:	0052      	lsls	r2, r2, #1
10003f70:	eb43 0303 	adc.w	r3, r3, r3
10003f74:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10003f78:	bf08      	it	eq
10003f7a:	3d01      	subeq	r5, #1
10003f7c:	d0f7      	beq.n	10003f6e <__aeabi_dmul+0x1c6>
10003f7e:	ea43 0306 	orr.w	r3, r3, r6
10003f82:	4770      	bx	lr
10003f84:	ea94 0f0c 	teq	r4, ip
10003f88:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10003f8c:	bf18      	it	ne
10003f8e:	ea95 0f0c 	teqne	r5, ip
10003f92:	d00c      	beq.n	10003fae <__aeabi_dmul+0x206>
10003f94:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10003f98:	bf18      	it	ne
10003f9a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10003f9e:	d1d1      	bne.n	10003f44 <__aeabi_dmul+0x19c>
10003fa0:	ea81 0103 	eor.w	r1, r1, r3
10003fa4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003fa8:	f04f 0000 	mov.w	r0, #0
10003fac:	bd70      	pop	{r4, r5, r6, pc}
10003fae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10003fb2:	bf06      	itte	eq
10003fb4:	4610      	moveq	r0, r2
10003fb6:	4619      	moveq	r1, r3
10003fb8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10003fbc:	d019      	beq.n	10003ff2 <__aeabi_dmul+0x24a>
10003fbe:	ea94 0f0c 	teq	r4, ip
10003fc2:	d102      	bne.n	10003fca <__aeabi_dmul+0x222>
10003fc4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10003fc8:	d113      	bne.n	10003ff2 <__aeabi_dmul+0x24a>
10003fca:	ea95 0f0c 	teq	r5, ip
10003fce:	d105      	bne.n	10003fdc <__aeabi_dmul+0x234>
10003fd0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10003fd4:	bf1c      	itt	ne
10003fd6:	4610      	movne	r0, r2
10003fd8:	4619      	movne	r1, r3
10003fda:	d10a      	bne.n	10003ff2 <__aeabi_dmul+0x24a>
10003fdc:	ea81 0103 	eor.w	r1, r1, r3
10003fe0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003fe4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10003fe8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003fec:	f04f 0000 	mov.w	r0, #0
10003ff0:	bd70      	pop	{r4, r5, r6, pc}
10003ff2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10003ff6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
10003ffa:	bd70      	pop	{r4, r5, r6, pc}

10003ffc <__aeabi_ddiv>:
10003ffc:	b570      	push	{r4, r5, r6, lr}
10003ffe:	f04f 0cff 	mov.w	ip, #255	; 0xff
10004002:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10004006:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1000400a:	bf1d      	ittte	ne
1000400c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10004010:	ea94 0f0c 	teqne	r4, ip
10004014:	ea95 0f0c 	teqne	r5, ip
10004018:	f000 f8a7 	bleq	1000416a <__aeabi_ddiv+0x16e>
1000401c:	eba4 0405 	sub.w	r4, r4, r5
10004020:	ea81 0e03 	eor.w	lr, r1, r3
10004024:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10004028:	ea4f 3101 	mov.w	r1, r1, lsl #12
1000402c:	f000 8088 	beq.w	10004140 <__aeabi_ddiv+0x144>
10004030:	ea4f 3303 	mov.w	r3, r3, lsl #12
10004034:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
10004038:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1000403c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10004040:	ea4f 2202 	mov.w	r2, r2, lsl #8
10004044:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10004048:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1000404c:	ea4f 2600 	mov.w	r6, r0, lsl #8
10004050:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10004054:	429d      	cmp	r5, r3
10004056:	bf08      	it	eq
10004058:	4296      	cmpeq	r6, r2
1000405a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1000405e:	f504 7440 	add.w	r4, r4, #768	; 0x300
10004062:	d202      	bcs.n	1000406a <__aeabi_ddiv+0x6e>
10004064:	085b      	lsrs	r3, r3, #1
10004066:	ea4f 0232 	mov.w	r2, r2, rrx
1000406a:	1ab6      	subs	r6, r6, r2
1000406c:	eb65 0503 	sbc.w	r5, r5, r3
10004070:	085b      	lsrs	r3, r3, #1
10004072:	ea4f 0232 	mov.w	r2, r2, rrx
10004076:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1000407a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1000407e:	ebb6 0e02 	subs.w	lr, r6, r2
10004082:	eb75 0e03 	sbcs.w	lr, r5, r3
10004086:	bf22      	ittt	cs
10004088:	1ab6      	subcs	r6, r6, r2
1000408a:	4675      	movcs	r5, lr
1000408c:	ea40 000c 	orrcs.w	r0, r0, ip
10004090:	085b      	lsrs	r3, r3, #1
10004092:	ea4f 0232 	mov.w	r2, r2, rrx
10004096:	ebb6 0e02 	subs.w	lr, r6, r2
1000409a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000409e:	bf22      	ittt	cs
100040a0:	1ab6      	subcs	r6, r6, r2
100040a2:	4675      	movcs	r5, lr
100040a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
100040a8:	085b      	lsrs	r3, r3, #1
100040aa:	ea4f 0232 	mov.w	r2, r2, rrx
100040ae:	ebb6 0e02 	subs.w	lr, r6, r2
100040b2:	eb75 0e03 	sbcs.w	lr, r5, r3
100040b6:	bf22      	ittt	cs
100040b8:	1ab6      	subcs	r6, r6, r2
100040ba:	4675      	movcs	r5, lr
100040bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
100040c0:	085b      	lsrs	r3, r3, #1
100040c2:	ea4f 0232 	mov.w	r2, r2, rrx
100040c6:	ebb6 0e02 	subs.w	lr, r6, r2
100040ca:	eb75 0e03 	sbcs.w	lr, r5, r3
100040ce:	bf22      	ittt	cs
100040d0:	1ab6      	subcs	r6, r6, r2
100040d2:	4675      	movcs	r5, lr
100040d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
100040d8:	ea55 0e06 	orrs.w	lr, r5, r6
100040dc:	d018      	beq.n	10004110 <__aeabi_ddiv+0x114>
100040de:	ea4f 1505 	mov.w	r5, r5, lsl #4
100040e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
100040e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
100040ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
100040ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
100040f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100040f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100040fa:	d1c0      	bne.n	1000407e <__aeabi_ddiv+0x82>
100040fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004100:	d10b      	bne.n	1000411a <__aeabi_ddiv+0x11e>
10004102:	ea41 0100 	orr.w	r1, r1, r0
10004106:	f04f 0000 	mov.w	r0, #0
1000410a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
1000410e:	e7b6      	b.n	1000407e <__aeabi_ddiv+0x82>
10004110:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004114:	bf04      	itt	eq
10004116:	4301      	orreq	r1, r0
10004118:	2000      	moveq	r0, #0
1000411a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1000411e:	bf88      	it	hi
10004120:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10004124:	f63f aeaf 	bhi.w	10003e86 <__aeabi_dmul+0xde>
10004128:	ebb5 0c03 	subs.w	ip, r5, r3
1000412c:	bf04      	itt	eq
1000412e:	ebb6 0c02 	subseq.w	ip, r6, r2
10004132:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10004136:	f150 0000 	adcs.w	r0, r0, #0
1000413a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1000413e:	bd70      	pop	{r4, r5, r6, pc}
10004140:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
10004144:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10004148:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1000414c:	bfc2      	ittt	gt
1000414e:	ebd4 050c 	rsbsgt	r5, r4, ip
10004152:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10004156:	bd70      	popgt	{r4, r5, r6, pc}
10004158:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1000415c:	f04f 0e00 	mov.w	lr, #0
10004160:	3c01      	subs	r4, #1
10004162:	e690      	b.n	10003e86 <__aeabi_dmul+0xde>
10004164:	ea45 0e06 	orr.w	lr, r5, r6
10004168:	e68d      	b.n	10003e86 <__aeabi_dmul+0xde>
1000416a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1000416e:	ea94 0f0c 	teq	r4, ip
10004172:	bf08      	it	eq
10004174:	ea95 0f0c 	teqeq	r5, ip
10004178:	f43f af3b 	beq.w	10003ff2 <__aeabi_dmul+0x24a>
1000417c:	ea94 0f0c 	teq	r4, ip
10004180:	d10a      	bne.n	10004198 <__aeabi_ddiv+0x19c>
10004182:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10004186:	f47f af34 	bne.w	10003ff2 <__aeabi_dmul+0x24a>
1000418a:	ea95 0f0c 	teq	r5, ip
1000418e:	f47f af25 	bne.w	10003fdc <__aeabi_dmul+0x234>
10004192:	4610      	mov	r0, r2
10004194:	4619      	mov	r1, r3
10004196:	e72c      	b.n	10003ff2 <__aeabi_dmul+0x24a>
10004198:	ea95 0f0c 	teq	r5, ip
1000419c:	d106      	bne.n	100041ac <__aeabi_ddiv+0x1b0>
1000419e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100041a2:	f43f aefd 	beq.w	10003fa0 <__aeabi_dmul+0x1f8>
100041a6:	4610      	mov	r0, r2
100041a8:	4619      	mov	r1, r3
100041aa:	e722      	b.n	10003ff2 <__aeabi_dmul+0x24a>
100041ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100041b0:	bf18      	it	ne
100041b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100041b6:	f47f aec5 	bne.w	10003f44 <__aeabi_dmul+0x19c>
100041ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
100041be:	f47f af0d 	bne.w	10003fdc <__aeabi_dmul+0x234>
100041c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
100041c6:	f47f aeeb 	bne.w	10003fa0 <__aeabi_dmul+0x1f8>
100041ca:	e712      	b.n	10003ff2 <__aeabi_dmul+0x24a>

100041cc <__gedf2>:
100041cc:	f04f 3cff 	mov.w	ip, #4294967295
100041d0:	e006      	b.n	100041e0 <__cmpdf2+0x4>
100041d2:	bf00      	nop

100041d4 <__ledf2>:
100041d4:	f04f 0c01 	mov.w	ip, #1
100041d8:	e002      	b.n	100041e0 <__cmpdf2+0x4>
100041da:	bf00      	nop

100041dc <__cmpdf2>:
100041dc:	f04f 0c01 	mov.w	ip, #1
100041e0:	f84d cd04 	str.w	ip, [sp, #-4]!
100041e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100041e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100041ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100041f0:	bf18      	it	ne
100041f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100041f6:	d01b      	beq.n	10004230 <__cmpdf2+0x54>
100041f8:	b001      	add	sp, #4
100041fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100041fe:	bf0c      	ite	eq
10004200:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10004204:	ea91 0f03 	teqne	r1, r3
10004208:	bf02      	ittt	eq
1000420a:	ea90 0f02 	teqeq	r0, r2
1000420e:	2000      	moveq	r0, #0
10004210:	4770      	bxeq	lr
10004212:	f110 0f00 	cmn.w	r0, #0
10004216:	ea91 0f03 	teq	r1, r3
1000421a:	bf58      	it	pl
1000421c:	4299      	cmppl	r1, r3
1000421e:	bf08      	it	eq
10004220:	4290      	cmpeq	r0, r2
10004222:	bf2c      	ite	cs
10004224:	17d8      	asrcs	r0, r3, #31
10004226:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1000422a:	f040 0001 	orr.w	r0, r0, #1
1000422e:	4770      	bx	lr
10004230:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10004234:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004238:	d102      	bne.n	10004240 <__cmpdf2+0x64>
1000423a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1000423e:	d107      	bne.n	10004250 <__cmpdf2+0x74>
10004240:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10004244:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004248:	d1d6      	bne.n	100041f8 <__cmpdf2+0x1c>
1000424a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1000424e:	d0d3      	beq.n	100041f8 <__cmpdf2+0x1c>
10004250:	f85d 0b04 	ldr.w	r0, [sp], #4
10004254:	4770      	bx	lr
10004256:	bf00      	nop

10004258 <__aeabi_cdrcmple>:
10004258:	4684      	mov	ip, r0
1000425a:	4610      	mov	r0, r2
1000425c:	4662      	mov	r2, ip
1000425e:	468c      	mov	ip, r1
10004260:	4619      	mov	r1, r3
10004262:	4663      	mov	r3, ip
10004264:	e000      	b.n	10004268 <__aeabi_cdcmpeq>
10004266:	bf00      	nop

10004268 <__aeabi_cdcmpeq>:
10004268:	b501      	push	{r0, lr}
1000426a:	f7ff ffb7 	bl	100041dc <__cmpdf2>
1000426e:	2800      	cmp	r0, #0
10004270:	bf48      	it	mi
10004272:	f110 0f00 	cmnmi.w	r0, #0
10004276:	bd01      	pop	{r0, pc}

10004278 <__aeabi_dcmpeq>:
10004278:	f84d ed08 	str.w	lr, [sp, #-8]!
1000427c:	f7ff fff4 	bl	10004268 <__aeabi_cdcmpeq>
10004280:	bf0c      	ite	eq
10004282:	2001      	moveq	r0, #1
10004284:	2000      	movne	r0, #0
10004286:	f85d fb08 	ldr.w	pc, [sp], #8
1000428a:	bf00      	nop

1000428c <__aeabi_dcmplt>:
1000428c:	f84d ed08 	str.w	lr, [sp, #-8]!
10004290:	f7ff ffea 	bl	10004268 <__aeabi_cdcmpeq>
10004294:	bf34      	ite	cc
10004296:	2001      	movcc	r0, #1
10004298:	2000      	movcs	r0, #0
1000429a:	f85d fb08 	ldr.w	pc, [sp], #8
1000429e:	bf00      	nop

100042a0 <__aeabi_dcmple>:
100042a0:	f84d ed08 	str.w	lr, [sp, #-8]!
100042a4:	f7ff ffe0 	bl	10004268 <__aeabi_cdcmpeq>
100042a8:	bf94      	ite	ls
100042aa:	2001      	movls	r0, #1
100042ac:	2000      	movhi	r0, #0
100042ae:	f85d fb08 	ldr.w	pc, [sp], #8
100042b2:	bf00      	nop

100042b4 <__aeabi_dcmpge>:
100042b4:	f84d ed08 	str.w	lr, [sp, #-8]!
100042b8:	f7ff ffce 	bl	10004258 <__aeabi_cdrcmple>
100042bc:	bf94      	ite	ls
100042be:	2001      	movls	r0, #1
100042c0:	2000      	movhi	r0, #0
100042c2:	f85d fb08 	ldr.w	pc, [sp], #8
100042c6:	bf00      	nop

100042c8 <__aeabi_dcmpgt>:
100042c8:	f84d ed08 	str.w	lr, [sp, #-8]!
100042cc:	f7ff ffc4 	bl	10004258 <__aeabi_cdrcmple>
100042d0:	bf34      	ite	cc
100042d2:	2001      	movcc	r0, #1
100042d4:	2000      	movcs	r0, #0
100042d6:	f85d fb08 	ldr.w	pc, [sp], #8
100042da:	bf00      	nop

100042dc <__aeabi_d2iz>:
100042dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
100042e0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100042e4:	d215      	bcs.n	10004312 <__aeabi_d2iz+0x36>
100042e6:	d511      	bpl.n	1000430c <__aeabi_d2iz+0x30>
100042e8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100042ec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100042f0:	d912      	bls.n	10004318 <__aeabi_d2iz+0x3c>
100042f2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100042f6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100042fa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100042fe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10004302:	fa23 f002 	lsr.w	r0, r3, r2
10004306:	bf18      	it	ne
10004308:	4240      	negne	r0, r0
1000430a:	4770      	bx	lr
1000430c:	f04f 0000 	mov.w	r0, #0
10004310:	4770      	bx	lr
10004312:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10004316:	d105      	bne.n	10004324 <__aeabi_d2iz+0x48>
10004318:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
1000431c:	bf08      	it	eq
1000431e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
10004322:	4770      	bx	lr
10004324:	f04f 0000 	mov.w	r0, #0
10004328:	4770      	bx	lr
1000432a:	bf00      	nop

1000432c <__aeabi_d2uiz>:
1000432c:	004a      	lsls	r2, r1, #1
1000432e:	d211      	bcs.n	10004354 <__aeabi_d2uiz+0x28>
10004330:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10004334:	d211      	bcs.n	1000435a <__aeabi_d2uiz+0x2e>
10004336:	d50d      	bpl.n	10004354 <__aeabi_d2uiz+0x28>
10004338:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
1000433c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10004340:	d40e      	bmi.n	10004360 <__aeabi_d2uiz+0x34>
10004342:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10004346:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1000434a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1000434e:	fa23 f002 	lsr.w	r0, r3, r2
10004352:	4770      	bx	lr
10004354:	f04f 0000 	mov.w	r0, #0
10004358:	4770      	bx	lr
1000435a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1000435e:	d102      	bne.n	10004366 <__aeabi_d2uiz+0x3a>
10004360:	f04f 30ff 	mov.w	r0, #4294967295
10004364:	4770      	bx	lr
10004366:	f04f 0000 	mov.w	r0, #0
1000436a:	4770      	bx	lr

1000436c <__aeabi_uldivmod>:
1000436c:	b953      	cbnz	r3, 10004384 <__aeabi_uldivmod+0x18>
1000436e:	b94a      	cbnz	r2, 10004384 <__aeabi_uldivmod+0x18>
10004370:	2900      	cmp	r1, #0
10004372:	bf08      	it	eq
10004374:	2800      	cmpeq	r0, #0
10004376:	bf1c      	itt	ne
10004378:	f04f 31ff 	movne.w	r1, #4294967295
1000437c:	f04f 30ff 	movne.w	r0, #4294967295
10004380:	f001 b934 	b.w	100055ec <__aeabi_idiv0>
10004384:	f1ad 0c08 	sub.w	ip, sp, #8
10004388:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1000438c:	f000 f806 	bl	1000439c <__udivmoddi4>
10004390:	f8dd e004 	ldr.w	lr, [sp, #4]
10004394:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10004398:	b004      	add	sp, #16
1000439a:	4770      	bx	lr

1000439c <__udivmoddi4>:
1000439c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100043a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
100043a2:	4604      	mov	r4, r0
100043a4:	460f      	mov	r7, r1
100043a6:	2b00      	cmp	r3, #0
100043a8:	d148      	bne.n	1000443c <__udivmoddi4+0xa0>
100043aa:	428a      	cmp	r2, r1
100043ac:	4694      	mov	ip, r2
100043ae:	d961      	bls.n	10004474 <__udivmoddi4+0xd8>
100043b0:	fab2 f382 	clz	r3, r2
100043b4:	b143      	cbz	r3, 100043c8 <__udivmoddi4+0x2c>
100043b6:	f1c3 0120 	rsb	r1, r3, #32
100043ba:	409f      	lsls	r7, r3
100043bc:	fa02 fc03 	lsl.w	ip, r2, r3
100043c0:	409c      	lsls	r4, r3
100043c2:	fa20 f101 	lsr.w	r1, r0, r1
100043c6:	430f      	orrs	r7, r1
100043c8:	ea4f 411c 	mov.w	r1, ip, lsr #16
100043cc:	fa1f fe8c 	uxth.w	lr, ip
100043d0:	0c22      	lsrs	r2, r4, #16
100043d2:	fbb7 f6f1 	udiv	r6, r7, r1
100043d6:	fb01 7716 	mls	r7, r1, r6, r7
100043da:	fb06 f00e 	mul.w	r0, r6, lr
100043de:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
100043e2:	4290      	cmp	r0, r2
100043e4:	d908      	bls.n	100043f8 <__udivmoddi4+0x5c>
100043e6:	eb1c 0202 	adds.w	r2, ip, r2
100043ea:	f106 37ff 	add.w	r7, r6, #4294967295
100043ee:	d202      	bcs.n	100043f6 <__udivmoddi4+0x5a>
100043f0:	4290      	cmp	r0, r2
100043f2:	f200 8137 	bhi.w	10004664 <__udivmoddi4+0x2c8>
100043f6:	463e      	mov	r6, r7
100043f8:	1a12      	subs	r2, r2, r0
100043fa:	b2a4      	uxth	r4, r4
100043fc:	fbb2 f0f1 	udiv	r0, r2, r1
10004400:	fb01 2210 	mls	r2, r1, r0, r2
10004404:	fb00 fe0e 	mul.w	lr, r0, lr
10004408:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
1000440c:	45a6      	cmp	lr, r4
1000440e:	d908      	bls.n	10004422 <__udivmoddi4+0x86>
10004410:	eb1c 0404 	adds.w	r4, ip, r4
10004414:	f100 32ff 	add.w	r2, r0, #4294967295
10004418:	d202      	bcs.n	10004420 <__udivmoddi4+0x84>
1000441a:	45a6      	cmp	lr, r4
1000441c:	f200 811c 	bhi.w	10004658 <__udivmoddi4+0x2bc>
10004420:	4610      	mov	r0, r2
10004422:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10004426:	eba4 040e 	sub.w	r4, r4, lr
1000442a:	2600      	movs	r6, #0
1000442c:	b11d      	cbz	r5, 10004436 <__udivmoddi4+0x9a>
1000442e:	40dc      	lsrs	r4, r3
10004430:	2300      	movs	r3, #0
10004432:	e9c5 4300 	strd	r4, r3, [r5]
10004436:	4631      	mov	r1, r6
10004438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000443c:	428b      	cmp	r3, r1
1000443e:	d909      	bls.n	10004454 <__udivmoddi4+0xb8>
10004440:	2d00      	cmp	r5, #0
10004442:	f000 80fd 	beq.w	10004640 <__udivmoddi4+0x2a4>
10004446:	2600      	movs	r6, #0
10004448:	e9c5 0100 	strd	r0, r1, [r5]
1000444c:	4630      	mov	r0, r6
1000444e:	4631      	mov	r1, r6
10004450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004454:	fab3 f683 	clz	r6, r3
10004458:	2e00      	cmp	r6, #0
1000445a:	d14b      	bne.n	100044f4 <__udivmoddi4+0x158>
1000445c:	428b      	cmp	r3, r1
1000445e:	f0c0 80f2 	bcc.w	10004646 <__udivmoddi4+0x2aa>
10004462:	4282      	cmp	r2, r0
10004464:	f240 80ef 	bls.w	10004646 <__udivmoddi4+0x2aa>
10004468:	4630      	mov	r0, r6
1000446a:	2d00      	cmp	r5, #0
1000446c:	d0e3      	beq.n	10004436 <__udivmoddi4+0x9a>
1000446e:	e9c5 4700 	strd	r4, r7, [r5]
10004472:	e7e0      	b.n	10004436 <__udivmoddi4+0x9a>
10004474:	b902      	cbnz	r2, 10004478 <__udivmoddi4+0xdc>
10004476:	deff      	udf	#255	; 0xff
10004478:	fab2 f382 	clz	r3, r2
1000447c:	2b00      	cmp	r3, #0
1000447e:	f040 809d 	bne.w	100045bc <__udivmoddi4+0x220>
10004482:	1a89      	subs	r1, r1, r2
10004484:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10004488:	b297      	uxth	r7, r2
1000448a:	2601      	movs	r6, #1
1000448c:	0c20      	lsrs	r0, r4, #16
1000448e:	fbb1 f2fe 	udiv	r2, r1, lr
10004492:	fb0e 1112 	mls	r1, lr, r2, r1
10004496:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1000449a:	fb07 f002 	mul.w	r0, r7, r2
1000449e:	4288      	cmp	r0, r1
100044a0:	d90f      	bls.n	100044c2 <__udivmoddi4+0x126>
100044a2:	eb1c 0101 	adds.w	r1, ip, r1
100044a6:	f102 38ff 	add.w	r8, r2, #4294967295
100044aa:	bf2c      	ite	cs
100044ac:	f04f 0901 	movcs.w	r9, #1
100044b0:	f04f 0900 	movcc.w	r9, #0
100044b4:	4288      	cmp	r0, r1
100044b6:	d903      	bls.n	100044c0 <__udivmoddi4+0x124>
100044b8:	f1b9 0f00 	cmp.w	r9, #0
100044bc:	f000 80cf 	beq.w	1000465e <__udivmoddi4+0x2c2>
100044c0:	4642      	mov	r2, r8
100044c2:	1a09      	subs	r1, r1, r0
100044c4:	b2a4      	uxth	r4, r4
100044c6:	fbb1 f0fe 	udiv	r0, r1, lr
100044ca:	fb0e 1110 	mls	r1, lr, r0, r1
100044ce:	fb00 f707 	mul.w	r7, r0, r7
100044d2:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
100044d6:	42a7      	cmp	r7, r4
100044d8:	d908      	bls.n	100044ec <__udivmoddi4+0x150>
100044da:	eb1c 0404 	adds.w	r4, ip, r4
100044de:	f100 31ff 	add.w	r1, r0, #4294967295
100044e2:	d202      	bcs.n	100044ea <__udivmoddi4+0x14e>
100044e4:	42a7      	cmp	r7, r4
100044e6:	f200 80b4 	bhi.w	10004652 <__udivmoddi4+0x2b6>
100044ea:	4608      	mov	r0, r1
100044ec:	1be4      	subs	r4, r4, r7
100044ee:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
100044f2:	e79b      	b.n	1000442c <__udivmoddi4+0x90>
100044f4:	f1c6 0720 	rsb	r7, r6, #32
100044f8:	40b3      	lsls	r3, r6
100044fa:	fa01 f406 	lsl.w	r4, r1, r6
100044fe:	fa22 fc07 	lsr.w	ip, r2, r7
10004502:	40f9      	lsrs	r1, r7
10004504:	40b2      	lsls	r2, r6
10004506:	ea4c 0c03 	orr.w	ip, ip, r3
1000450a:	fa20 f307 	lsr.w	r3, r0, r7
1000450e:	ea4f 491c 	mov.w	r9, ip, lsr #16
10004512:	431c      	orrs	r4, r3
10004514:	fa1f fe8c 	uxth.w	lr, ip
10004518:	fa00 f306 	lsl.w	r3, r0, r6
1000451c:	0c20      	lsrs	r0, r4, #16
1000451e:	fbb1 f8f9 	udiv	r8, r1, r9
10004522:	fb09 1118 	mls	r1, r9, r8, r1
10004526:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1000452a:	fb08 f00e 	mul.w	r0, r8, lr
1000452e:	4288      	cmp	r0, r1
10004530:	d90f      	bls.n	10004552 <__udivmoddi4+0x1b6>
10004532:	eb1c 0101 	adds.w	r1, ip, r1
10004536:	f108 3aff 	add.w	sl, r8, #4294967295
1000453a:	bf2c      	ite	cs
1000453c:	f04f 0b01 	movcs.w	fp, #1
10004540:	f04f 0b00 	movcc.w	fp, #0
10004544:	4288      	cmp	r0, r1
10004546:	d903      	bls.n	10004550 <__udivmoddi4+0x1b4>
10004548:	f1bb 0f00 	cmp.w	fp, #0
1000454c:	f000 808d 	beq.w	1000466a <__udivmoddi4+0x2ce>
10004550:	46d0      	mov	r8, sl
10004552:	1a09      	subs	r1, r1, r0
10004554:	b2a4      	uxth	r4, r4
10004556:	fbb1 f0f9 	udiv	r0, r1, r9
1000455a:	fb09 1110 	mls	r1, r9, r0, r1
1000455e:	fb00 fe0e 	mul.w	lr, r0, lr
10004562:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10004566:	458e      	cmp	lr, r1
10004568:	d907      	bls.n	1000457a <__udivmoddi4+0x1de>
1000456a:	eb1c 0101 	adds.w	r1, ip, r1
1000456e:	f100 34ff 	add.w	r4, r0, #4294967295
10004572:	d201      	bcs.n	10004578 <__udivmoddi4+0x1dc>
10004574:	458e      	cmp	lr, r1
10004576:	d87f      	bhi.n	10004678 <__udivmoddi4+0x2dc>
10004578:	4620      	mov	r0, r4
1000457a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
1000457e:	eba1 010e 	sub.w	r1, r1, lr
10004582:	fba0 9802 	umull	r9, r8, r0, r2
10004586:	4541      	cmp	r1, r8
10004588:	464c      	mov	r4, r9
1000458a:	46c6      	mov	lr, r8
1000458c:	d302      	bcc.n	10004594 <__udivmoddi4+0x1f8>
1000458e:	d106      	bne.n	1000459e <__udivmoddi4+0x202>
10004590:	454b      	cmp	r3, r9
10004592:	d204      	bcs.n	1000459e <__udivmoddi4+0x202>
10004594:	3801      	subs	r0, #1
10004596:	ebb9 0402 	subs.w	r4, r9, r2
1000459a:	eb68 0e0c 	sbc.w	lr, r8, ip
1000459e:	2d00      	cmp	r5, #0
100045a0:	d070      	beq.n	10004684 <__udivmoddi4+0x2e8>
100045a2:	1b1a      	subs	r2, r3, r4
100045a4:	eb61 010e 	sbc.w	r1, r1, lr
100045a8:	fa22 f306 	lsr.w	r3, r2, r6
100045ac:	fa01 f707 	lsl.w	r7, r1, r7
100045b0:	40f1      	lsrs	r1, r6
100045b2:	2600      	movs	r6, #0
100045b4:	431f      	orrs	r7, r3
100045b6:	e9c5 7100 	strd	r7, r1, [r5]
100045ba:	e73c      	b.n	10004436 <__udivmoddi4+0x9a>
100045bc:	fa02 fc03 	lsl.w	ip, r2, r3
100045c0:	f1c3 0020 	rsb	r0, r3, #32
100045c4:	fa01 f203 	lsl.w	r2, r1, r3
100045c8:	fa21 f600 	lsr.w	r6, r1, r0
100045cc:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
100045d0:	fa24 f100 	lsr.w	r1, r4, r0
100045d4:	fa1f f78c 	uxth.w	r7, ip
100045d8:	409c      	lsls	r4, r3
100045da:	4311      	orrs	r1, r2
100045dc:	fbb6 f0fe 	udiv	r0, r6, lr
100045e0:	0c0a      	lsrs	r2, r1, #16
100045e2:	fb0e 6610 	mls	r6, lr, r0, r6
100045e6:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
100045ea:	fb00 f607 	mul.w	r6, r0, r7
100045ee:	4296      	cmp	r6, r2
100045f0:	d90e      	bls.n	10004610 <__udivmoddi4+0x274>
100045f2:	eb1c 0202 	adds.w	r2, ip, r2
100045f6:	f100 38ff 	add.w	r8, r0, #4294967295
100045fa:	bf2c      	ite	cs
100045fc:	f04f 0901 	movcs.w	r9, #1
10004600:	f04f 0900 	movcc.w	r9, #0
10004604:	4296      	cmp	r6, r2
10004606:	d902      	bls.n	1000460e <__udivmoddi4+0x272>
10004608:	f1b9 0f00 	cmp.w	r9, #0
1000460c:	d031      	beq.n	10004672 <__udivmoddi4+0x2d6>
1000460e:	4640      	mov	r0, r8
10004610:	1b92      	subs	r2, r2, r6
10004612:	b289      	uxth	r1, r1
10004614:	fbb2 f6fe 	udiv	r6, r2, lr
10004618:	fb0e 2216 	mls	r2, lr, r6, r2
1000461c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10004620:	fb06 f207 	mul.w	r2, r6, r7
10004624:	428a      	cmp	r2, r1
10004626:	d907      	bls.n	10004638 <__udivmoddi4+0x29c>
10004628:	eb1c 0101 	adds.w	r1, ip, r1
1000462c:	f106 38ff 	add.w	r8, r6, #4294967295
10004630:	d201      	bcs.n	10004636 <__udivmoddi4+0x29a>
10004632:	428a      	cmp	r2, r1
10004634:	d823      	bhi.n	1000467e <__udivmoddi4+0x2e2>
10004636:	4646      	mov	r6, r8
10004638:	1a89      	subs	r1, r1, r2
1000463a:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
1000463e:	e725      	b.n	1000448c <__udivmoddi4+0xf0>
10004640:	462e      	mov	r6, r5
10004642:	4628      	mov	r0, r5
10004644:	e6f7      	b.n	10004436 <__udivmoddi4+0x9a>
10004646:	1a84      	subs	r4, r0, r2
10004648:	eb61 0303 	sbc.w	r3, r1, r3
1000464c:	2001      	movs	r0, #1
1000464e:	461f      	mov	r7, r3
10004650:	e70b      	b.n	1000446a <__udivmoddi4+0xce>
10004652:	4464      	add	r4, ip
10004654:	3802      	subs	r0, #2
10004656:	e749      	b.n	100044ec <__udivmoddi4+0x150>
10004658:	4464      	add	r4, ip
1000465a:	3802      	subs	r0, #2
1000465c:	e6e1      	b.n	10004422 <__udivmoddi4+0x86>
1000465e:	3a02      	subs	r2, #2
10004660:	4461      	add	r1, ip
10004662:	e72e      	b.n	100044c2 <__udivmoddi4+0x126>
10004664:	3e02      	subs	r6, #2
10004666:	4462      	add	r2, ip
10004668:	e6c6      	b.n	100043f8 <__udivmoddi4+0x5c>
1000466a:	f1a8 0802 	sub.w	r8, r8, #2
1000466e:	4461      	add	r1, ip
10004670:	e76f      	b.n	10004552 <__udivmoddi4+0x1b6>
10004672:	3802      	subs	r0, #2
10004674:	4462      	add	r2, ip
10004676:	e7cb      	b.n	10004610 <__udivmoddi4+0x274>
10004678:	3802      	subs	r0, #2
1000467a:	4461      	add	r1, ip
1000467c:	e77d      	b.n	1000457a <__udivmoddi4+0x1de>
1000467e:	3e02      	subs	r6, #2
10004680:	4461      	add	r1, ip
10004682:	e7d9      	b.n	10004638 <__udivmoddi4+0x29c>
10004684:	462e      	mov	r6, r5
10004686:	e6d6      	b.n	10004436 <__udivmoddi4+0x9a>

10004688 <selfrel_offset31>:
10004688:	6803      	ldr	r3, [r0, #0]
1000468a:	005a      	lsls	r2, r3, #1
1000468c:	bf4c      	ite	mi
1000468e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10004692:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10004696:	4418      	add	r0, r3
10004698:	4770      	bx	lr
1000469a:	bf00      	nop

1000469c <search_EIT_table>:
1000469c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100046a0:	b339      	cbz	r1, 100046f2 <search_EIT_table+0x56>
100046a2:	f101 38ff 	add.w	r8, r1, #4294967295
100046a6:	4606      	mov	r6, r0
100046a8:	4617      	mov	r7, r2
100046aa:	f04f 0900 	mov.w	r9, #0
100046ae:	4645      	mov	r5, r8
100046b0:	eb19 0105 	adds.w	r1, r9, r5
100046b4:	bf48      	it	mi
100046b6:	3101      	addmi	r1, #1
100046b8:	1049      	asrs	r1, r1, #1
100046ba:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
100046be:	00cc      	lsls	r4, r1, #3
100046c0:	4650      	mov	r0, sl
100046c2:	f7ff ffe1 	bl	10004688 <selfrel_offset31>
100046c6:	3408      	adds	r4, #8
100046c8:	4588      	cmp	r8, r1
100046ca:	4603      	mov	r3, r0
100046cc:	eb06 0004 	add.w	r0, r6, r4
100046d0:	d009      	beq.n	100046e6 <search_EIT_table+0x4a>
100046d2:	42bb      	cmp	r3, r7
100046d4:	d809      	bhi.n	100046ea <search_EIT_table+0x4e>
100046d6:	f7ff ffd7 	bl	10004688 <selfrel_offset31>
100046da:	3801      	subs	r0, #1
100046dc:	f101 0901 	add.w	r9, r1, #1
100046e0:	42b8      	cmp	r0, r7
100046e2:	d3e5      	bcc.n	100046b0 <search_EIT_table+0x14>
100046e4:	e007      	b.n	100046f6 <search_EIT_table+0x5a>
100046e6:	42bb      	cmp	r3, r7
100046e8:	d905      	bls.n	100046f6 <search_EIT_table+0x5a>
100046ea:	4589      	cmp	r9, r1
100046ec:	f101 35ff 	add.w	r5, r1, #4294967295
100046f0:	d1de      	bne.n	100046b0 <search_EIT_table+0x14>
100046f2:	f04f 0a00 	mov.w	sl, #0
100046f6:	4650      	mov	r0, sl
100046f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

100046fc <__gnu_unwind_get_pr_addr>:
100046fc:	2801      	cmp	r0, #1
100046fe:	d007      	beq.n	10004710 <__gnu_unwind_get_pr_addr+0x14>
10004700:	2802      	cmp	r0, #2
10004702:	d007      	beq.n	10004714 <__gnu_unwind_get_pr_addr+0x18>
10004704:	2800      	cmp	r0, #0
10004706:	4b04      	ldr	r3, [pc, #16]	; (10004718 <__gnu_unwind_get_pr_addr+0x1c>)
10004708:	bf14      	ite	ne
1000470a:	2000      	movne	r0, #0
1000470c:	4618      	moveq	r0, r3
1000470e:	4770      	bx	lr
10004710:	4802      	ldr	r0, [pc, #8]	; (1000471c <__gnu_unwind_get_pr_addr+0x20>)
10004712:	4770      	bx	lr
10004714:	4802      	ldr	r0, [pc, #8]	; (10004720 <__gnu_unwind_get_pr_addr+0x24>)
10004716:	4770      	bx	lr
10004718:	10004e0d 	andne	r4, r0, sp, lsl #28
1000471c:	10004e11 	andne	r4, r0, r1, lsl lr
10004720:	10004e15 	andne	r4, r0, r5, lsl lr

10004724 <get_eit_entry>:
10004724:	4b23      	ldr	r3, [pc, #140]	; (100047b4 <get_eit_entry+0x90>)
10004726:	b530      	push	{r4, r5, lr}
10004728:	4604      	mov	r4, r0
1000472a:	b083      	sub	sp, #12
1000472c:	1e8d      	subs	r5, r1, #2
1000472e:	b343      	cbz	r3, 10004782 <get_eit_entry+0x5e>
10004730:	a901      	add	r1, sp, #4
10004732:	4628      	mov	r0, r5
10004734:	e000      	b.n	10004738 <get_eit_entry+0x14>
10004736:	bf00      	nop
10004738:	b1f0      	cbz	r0, 10004778 <get_eit_entry+0x54>
1000473a:	9901      	ldr	r1, [sp, #4]
1000473c:	462a      	mov	r2, r5
1000473e:	f7ff ffad 	bl	1000469c <search_EIT_table>
10004742:	4601      	mov	r1, r0
10004744:	b1c0      	cbz	r0, 10004778 <get_eit_entry+0x54>
10004746:	f7ff ff9f 	bl	10004688 <selfrel_offset31>
1000474a:	684b      	ldr	r3, [r1, #4]
1000474c:	64a0      	str	r0, [r4, #72]	; 0x48
1000474e:	2b01      	cmp	r3, #1
10004750:	d02c      	beq.n	100047ac <get_eit_entry+0x88>
10004752:	2b00      	cmp	r3, #0
10004754:	f101 0004 	add.w	r0, r1, #4
10004758:	db24      	blt.n	100047a4 <get_eit_entry+0x80>
1000475a:	f7ff ff95 	bl	10004688 <selfrel_offset31>
1000475e:	2300      	movs	r3, #0
10004760:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004764:	6803      	ldr	r3, [r0, #0]
10004766:	2b00      	cmp	r3, #0
10004768:	db11      	blt.n	1000478e <get_eit_entry+0x6a>
1000476a:	f7ff ff8d 	bl	10004688 <selfrel_offset31>
1000476e:	4603      	mov	r3, r0
10004770:	2000      	movs	r0, #0
10004772:	6123      	str	r3, [r4, #16]
10004774:	b003      	add	sp, #12
10004776:	bd30      	pop	{r4, r5, pc}
10004778:	2300      	movs	r3, #0
1000477a:	2009      	movs	r0, #9
1000477c:	6123      	str	r3, [r4, #16]
1000477e:	b003      	add	sp, #12
10004780:	bd30      	pop	{r4, r5, pc}
10004782:	480d      	ldr	r0, [pc, #52]	; (100047b8 <get_eit_entry+0x94>)
10004784:	490d      	ldr	r1, [pc, #52]	; (100047bc <get_eit_entry+0x98>)
10004786:	1a09      	subs	r1, r1, r0
10004788:	10c9      	asrs	r1, r1, #3
1000478a:	9101      	str	r1, [sp, #4]
1000478c:	e7d6      	b.n	1000473c <get_eit_entry+0x18>
1000478e:	f3c3 6003 	ubfx	r0, r3, #24, #4
10004792:	f7ff ffb3 	bl	100046fc <__gnu_unwind_get_pr_addr>
10004796:	2800      	cmp	r0, #0
10004798:	6120      	str	r0, [r4, #16]
1000479a:	bf14      	ite	ne
1000479c:	2000      	movne	r0, #0
1000479e:	2009      	moveq	r0, #9
100047a0:	b003      	add	sp, #12
100047a2:	bd30      	pop	{r4, r5, pc}
100047a4:	2301      	movs	r3, #1
100047a6:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
100047aa:	e7db      	b.n	10004764 <get_eit_entry+0x40>
100047ac:	2300      	movs	r3, #0
100047ae:	2005      	movs	r0, #5
100047b0:	6123      	str	r3, [r4, #16]
100047b2:	e7df      	b.n	10004774 <get_eit_entry+0x50>
100047b4:	00000000 	andeq	r0, r0, r0
100047b8:	10005bc0 	andne	r5, r0, r0, asr #23
100047bc:	10005c80 	andne	r5, r0, r0, lsl #25

100047c0 <restore_non_core_regs>:
100047c0:	6803      	ldr	r3, [r0, #0]
100047c2:	07da      	lsls	r2, r3, #31
100047c4:	b510      	push	{r4, lr}
100047c6:	4604      	mov	r4, r0
100047c8:	d406      	bmi.n	100047d8 <restore_non_core_regs+0x18>
100047ca:	079b      	lsls	r3, r3, #30
100047cc:	f100 0048 	add.w	r0, r0, #72	; 0x48
100047d0:	d509      	bpl.n	100047e6 <restore_non_core_regs+0x26>
100047d2:	f000 fc8f 	bl	100050f4 <__gnu_Unwind_Restore_VFP_D>
100047d6:	6823      	ldr	r3, [r4, #0]
100047d8:	0759      	lsls	r1, r3, #29
100047da:	d509      	bpl.n	100047f0 <restore_non_core_regs+0x30>
100047dc:	071a      	lsls	r2, r3, #28
100047de:	d50e      	bpl.n	100047fe <restore_non_core_regs+0x3e>
100047e0:	06db      	lsls	r3, r3, #27
100047e2:	d513      	bpl.n	1000480c <restore_non_core_regs+0x4c>
100047e4:	bd10      	pop	{r4, pc}
100047e6:	f000 fc7d 	bl	100050e4 <__gnu_Unwind_Restore_VFP>
100047ea:	6823      	ldr	r3, [r4, #0]
100047ec:	0759      	lsls	r1, r3, #29
100047ee:	d4f5      	bmi.n	100047dc <restore_non_core_regs+0x1c>
100047f0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
100047f4:	f000 fc86 	bl	10005104 <__gnu_Unwind_Restore_VFP_D_16_to_31>
100047f8:	6823      	ldr	r3, [r4, #0]
100047fa:	071a      	lsls	r2, r3, #28
100047fc:	d4f0      	bmi.n	100047e0 <restore_non_core_regs+0x20>
100047fe:	f504 70a8 	add.w	r0, r4, #336	; 0x150
10004802:	f000 fc87 	bl	10005114 <__gnu_Unwind_Restore_WMMXD>
10004806:	6823      	ldr	r3, [r4, #0]
10004808:	06db      	lsls	r3, r3, #27
1000480a:	d4eb      	bmi.n	100047e4 <restore_non_core_regs+0x24>
1000480c:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10004810:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10004814:	f000 bcc2 	b.w	1000519c <__gnu_Unwind_Restore_WMMXC>

10004818 <__gnu_unwind_24bit.constprop.0>:
10004818:	2009      	movs	r0, #9
1000481a:	4770      	bx	lr

1000481c <_Unwind_decode_typeinfo_ptr.constprop.0>:
1000481c:	4603      	mov	r3, r0
1000481e:	6800      	ldr	r0, [r0, #0]
10004820:	b100      	cbz	r0, 10004824 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
10004822:	4418      	add	r0, r3
10004824:	4770      	bx	lr
10004826:	bf00      	nop

10004828 <_Unwind_DebugHook>:
10004828:	4770      	bx	lr
1000482a:	bf00      	nop

1000482c <unwind_phase2>:
1000482c:	b570      	push	{r4, r5, r6, lr}
1000482e:	4604      	mov	r4, r0
10004830:	460e      	mov	r6, r1
10004832:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004834:	4620      	mov	r0, r4
10004836:	f7ff ff75 	bl	10004724 <get_eit_entry>
1000483a:	4605      	mov	r5, r0
1000483c:	b998      	cbnz	r0, 10004866 <unwind_phase2+0x3a>
1000483e:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
10004842:	4632      	mov	r2, r6
10004844:	6923      	ldr	r3, [r4, #16]
10004846:	4621      	mov	r1, r4
10004848:	2001      	movs	r0, #1
1000484a:	f8c4 c014 	str.w	ip, [r4, #20]
1000484e:	4798      	blx	r3
10004850:	2808      	cmp	r0, #8
10004852:	d0ee      	beq.n	10004832 <unwind_phase2+0x6>
10004854:	2807      	cmp	r0, #7
10004856:	d106      	bne.n	10004866 <unwind_phase2+0x3a>
10004858:	4628      	mov	r0, r5
1000485a:	6c31      	ldr	r1, [r6, #64]	; 0x40
1000485c:	f7ff ffe4 	bl	10004828 <_Unwind_DebugHook>
10004860:	1d30      	adds	r0, r6, #4
10004862:	f000 fc33 	bl	100050cc <__restore_core_regs>
10004866:	f000 fec3 	bl	100055f0 <abort>
1000486a:	bf00      	nop

1000486c <unwind_phase2_forced>:
1000486c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004870:	f101 0c04 	add.w	ip, r1, #4
10004874:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10004878:	68c7      	ldr	r7, [r0, #12]
1000487a:	4606      	mov	r6, r0
1000487c:	f8d0 8018 	ldr.w	r8, [r0, #24]
10004880:	4614      	mov	r4, r2
10004882:	f10d 0e14 	add.w	lr, sp, #20
10004886:	ad04      	add	r5, sp, #16
10004888:	f04f 0900 	mov.w	r9, #0
1000488c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004890:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004894:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004898:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
1000489c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100048a0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100048a4:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
100048a8:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
100048ac:	f8c5 9000 	str.w	r9, [r5]
100048b0:	e023      	b.n	100048fa <unwind_phase2_forced+0x8e>
100048b2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
100048b4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100048b8:	4629      	mov	r1, r5
100048ba:	a87c      	add	r0, sp, #496	; 0x1f0
100048bc:	6173      	str	r3, [r6, #20]
100048be:	f7fe ff7d 	bl	100037bc <memcpy>
100048c2:	aa7c      	add	r2, sp, #496	; 0x1f0
100048c4:	4631      	mov	r1, r6
100048c6:	6933      	ldr	r3, [r6, #16]
100048c8:	4650      	mov	r0, sl
100048ca:	4798      	blx	r3
100048cc:	9b8a      	ldr	r3, [sp, #552]	; 0x228
100048ce:	4621      	mov	r1, r4
100048d0:	4681      	mov	r9, r0
100048d2:	9303      	str	r3, [sp, #12]
100048d4:	4632      	mov	r2, r6
100048d6:	9c03      	ldr	r4, [sp, #12]
100048d8:	4633      	mov	r3, r6
100048da:	2001      	movs	r0, #1
100048dc:	646c      	str	r4, [r5, #68]	; 0x44
100048de:	e9cd 5800 	strd	r5, r8, [sp]
100048e2:	47b8      	blx	r7
100048e4:	4604      	mov	r4, r0
100048e6:	b9e8      	cbnz	r0, 10004924 <unwind_phase2_forced+0xb8>
100048e8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100048ec:	a97c      	add	r1, sp, #496	; 0x1f0
100048ee:	4628      	mov	r0, r5
100048f0:	f7fe ff64 	bl	100037bc <memcpy>
100048f4:	f1b9 0f08 	cmp.w	r9, #8
100048f8:	d11b      	bne.n	10004932 <unwind_phase2_forced+0xc6>
100048fa:	3409      	adds	r4, #9
100048fc:	6c29      	ldr	r1, [r5, #64]	; 0x40
100048fe:	4630      	mov	r0, r6
10004900:	f7ff ff10 	bl	10004724 <get_eit_entry>
10004904:	4681      	mov	r9, r0
10004906:	fa5f fa84 	uxtb.w	sl, r4
1000490a:	2800      	cmp	r0, #0
1000490c:	d0d1      	beq.n	100048b2 <unwind_phase2_forced+0x46>
1000490e:	6bac      	ldr	r4, [r5, #56]	; 0x38
10004910:	4633      	mov	r3, r6
10004912:	4632      	mov	r2, r6
10004914:	f04a 0110 	orr.w	r1, sl, #16
10004918:	646c      	str	r4, [r5, #68]	; 0x44
1000491a:	2001      	movs	r0, #1
1000491c:	e9cd 5800 	strd	r5, r8, [sp]
10004920:	47b8      	blx	r7
10004922:	b108      	cbz	r0, 10004928 <unwind_phase2_forced+0xbc>
10004924:	f04f 0909 	mov.w	r9, #9
10004928:	4648      	mov	r0, r9
1000492a:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
1000492e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10004932:	f1b9 0f07 	cmp.w	r9, #7
10004936:	d1f5      	bne.n	10004924 <unwind_phase2_forced+0xb8>
10004938:	4620      	mov	r0, r4
1000493a:	6c29      	ldr	r1, [r5, #64]	; 0x40
1000493c:	f7ff ff74 	bl	10004828 <_Unwind_DebugHook>
10004940:	a805      	add	r0, sp, #20
10004942:	f000 fbc3 	bl	100050cc <__restore_core_regs>
10004946:	bf00      	nop

10004948 <_Unwind_GetCFA>:
10004948:	6c40      	ldr	r0, [r0, #68]	; 0x44
1000494a:	4770      	bx	lr

1000494c <__gnu_Unwind_RaiseException>:
1000494c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000494e:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10004950:	b0f9      	sub	sp, #484	; 0x1e4
10004952:	f101 0c04 	add.w	ip, r1, #4
10004956:	460e      	mov	r6, r1
10004958:	640b      	str	r3, [r1, #64]	; 0x40
1000495a:	ac01      	add	r4, sp, #4
1000495c:	4605      	mov	r5, r0
1000495e:	f04f 37ff 	mov.w	r7, #4294967295
10004962:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004966:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004968:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000496c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000496e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004972:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004974:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004978:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1000497c:	9700      	str	r7, [sp, #0]
1000497e:	e006      	b.n	1000498e <__gnu_Unwind_RaiseException+0x42>
10004980:	692b      	ldr	r3, [r5, #16]
10004982:	466a      	mov	r2, sp
10004984:	4629      	mov	r1, r5
10004986:	4798      	blx	r3
10004988:	2808      	cmp	r0, #8
1000498a:	4604      	mov	r4, r0
1000498c:	d108      	bne.n	100049a0 <__gnu_Unwind_RaiseException+0x54>
1000498e:	9910      	ldr	r1, [sp, #64]	; 0x40
10004990:	4628      	mov	r0, r5
10004992:	f7ff fec7 	bl	10004724 <get_eit_entry>
10004996:	2800      	cmp	r0, #0
10004998:	d0f2      	beq.n	10004980 <__gnu_Unwind_RaiseException+0x34>
1000499a:	2009      	movs	r0, #9
1000499c:	b079      	add	sp, #484	; 0x1e4
1000499e:	bdf0      	pop	{r4, r5, r6, r7, pc}
100049a0:	4668      	mov	r0, sp
100049a2:	f7ff ff0d 	bl	100047c0 <restore_non_core_regs>
100049a6:	2c06      	cmp	r4, #6
100049a8:	d1f7      	bne.n	1000499a <__gnu_Unwind_RaiseException+0x4e>
100049aa:	4631      	mov	r1, r6
100049ac:	4628      	mov	r0, r5
100049ae:	f7ff ff3d 	bl	1000482c <unwind_phase2>
100049b2:	bf00      	nop

100049b4 <__gnu_Unwind_ForcedUnwind>:
100049b4:	b410      	push	{r4}
100049b6:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
100049b8:	60c1      	str	r1, [r0, #12]
100049ba:	4619      	mov	r1, r3
100049bc:	6182      	str	r2, [r0, #24]
100049be:	2200      	movs	r2, #0
100049c0:	641c      	str	r4, [r3, #64]	; 0x40
100049c2:	bc10      	pop	{r4}
100049c4:	e752      	b.n	1000486c <unwind_phase2_forced>
100049c6:	bf00      	nop

100049c8 <__gnu_Unwind_Resume>:
100049c8:	b570      	push	{r4, r5, r6, lr}
100049ca:	6943      	ldr	r3, [r0, #20]
100049cc:	68c6      	ldr	r6, [r0, #12]
100049ce:	640b      	str	r3, [r1, #64]	; 0x40
100049d0:	b9ae      	cbnz	r6, 100049fe <__gnu_Unwind_Resume+0x36>
100049d2:	6903      	ldr	r3, [r0, #16]
100049d4:	460a      	mov	r2, r1
100049d6:	4604      	mov	r4, r0
100049d8:	460d      	mov	r5, r1
100049da:	4601      	mov	r1, r0
100049dc:	2002      	movs	r0, #2
100049de:	4798      	blx	r3
100049e0:	2807      	cmp	r0, #7
100049e2:	d005      	beq.n	100049f0 <__gnu_Unwind_Resume+0x28>
100049e4:	2808      	cmp	r0, #8
100049e6:	d10f      	bne.n	10004a08 <__gnu_Unwind_Resume+0x40>
100049e8:	4629      	mov	r1, r5
100049ea:	4620      	mov	r0, r4
100049ec:	f7ff ff1e 	bl	1000482c <unwind_phase2>
100049f0:	4630      	mov	r0, r6
100049f2:	6c29      	ldr	r1, [r5, #64]	; 0x40
100049f4:	f7ff ff18 	bl	10004828 <_Unwind_DebugHook>
100049f8:	1d28      	adds	r0, r5, #4
100049fa:	f000 fb67 	bl	100050cc <__restore_core_regs>
100049fe:	2201      	movs	r2, #1
10004a00:	f7ff ff34 	bl	1000486c <unwind_phase2_forced>
10004a04:	f000 fdf4 	bl	100055f0 <abort>
10004a08:	f000 fdf2 	bl	100055f0 <abort>

10004a0c <__gnu_Unwind_Resume_or_Rethrow>:
10004a0c:	68c2      	ldr	r2, [r0, #12]
10004a0e:	b12a      	cbz	r2, 10004a1c <__gnu_Unwind_Resume_or_Rethrow+0x10>
10004a10:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10004a14:	2200      	movs	r2, #0
10004a16:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10004a1a:	e727      	b.n	1000486c <unwind_phase2_forced>
10004a1c:	e796      	b.n	1000494c <__gnu_Unwind_RaiseException>
10004a1e:	bf00      	nop

10004a20 <_Unwind_Complete>:
10004a20:	4770      	bx	lr
10004a22:	bf00      	nop

10004a24 <_Unwind_DeleteException>:
10004a24:	6883      	ldr	r3, [r0, #8]
10004a26:	4601      	mov	r1, r0
10004a28:	b10b      	cbz	r3, 10004a2e <_Unwind_DeleteException+0xa>
10004a2a:	2001      	movs	r0, #1
10004a2c:	4718      	bx	r3
10004a2e:	4770      	bx	lr

10004a30 <_Unwind_VRS_Get>:
10004a30:	2901      	cmp	r1, #1
10004a32:	d015      	beq.n	10004a60 <_Unwind_VRS_Get+0x30>
10004a34:	d80c      	bhi.n	10004a50 <_Unwind_VRS_Get+0x20>
10004a36:	b98b      	cbnz	r3, 10004a5c <_Unwind_VRS_Get+0x2c>
10004a38:	2a0f      	cmp	r2, #15
10004a3a:	bf94      	ite	ls
10004a3c:	2100      	movls	r1, #0
10004a3e:	2101      	movhi	r1, #1
10004a40:	b961      	cbnz	r1, 10004a5c <_Unwind_VRS_Get+0x2c>
10004a42:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004a46:	4608      	mov	r0, r1
10004a48:	6853      	ldr	r3, [r2, #4]
10004a4a:	9a00      	ldr	r2, [sp, #0]
10004a4c:	6013      	str	r3, [r2, #0]
10004a4e:	4770      	bx	lr
10004a50:	3903      	subs	r1, #3
10004a52:	2901      	cmp	r1, #1
10004a54:	bf94      	ite	ls
10004a56:	2001      	movls	r0, #1
10004a58:	2002      	movhi	r0, #2
10004a5a:	4770      	bx	lr
10004a5c:	2002      	movs	r0, #2
10004a5e:	4770      	bx	lr
10004a60:	4608      	mov	r0, r1
10004a62:	4770      	bx	lr

10004a64 <_Unwind_GetGR>:
10004a64:	b510      	push	{r4, lr}
10004a66:	b084      	sub	sp, #16
10004a68:	2300      	movs	r3, #0
10004a6a:	460a      	mov	r2, r1
10004a6c:	ac03      	add	r4, sp, #12
10004a6e:	4619      	mov	r1, r3
10004a70:	9400      	str	r4, [sp, #0]
10004a72:	f7ff ffdd 	bl	10004a30 <_Unwind_VRS_Get>
10004a76:	9803      	ldr	r0, [sp, #12]
10004a78:	b004      	add	sp, #16
10004a7a:	bd10      	pop	{r4, pc}

10004a7c <_Unwind_VRS_Set>:
10004a7c:	2901      	cmp	r1, #1
10004a7e:	d015      	beq.n	10004aac <_Unwind_VRS_Set+0x30>
10004a80:	d80c      	bhi.n	10004a9c <_Unwind_VRS_Set+0x20>
10004a82:	b98b      	cbnz	r3, 10004aa8 <_Unwind_VRS_Set+0x2c>
10004a84:	2a0f      	cmp	r2, #15
10004a86:	bf94      	ite	ls
10004a88:	2100      	movls	r1, #0
10004a8a:	2101      	movhi	r1, #1
10004a8c:	b961      	cbnz	r1, 10004aa8 <_Unwind_VRS_Set+0x2c>
10004a8e:	9b00      	ldr	r3, [sp, #0]
10004a90:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004a94:	4608      	mov	r0, r1
10004a96:	681b      	ldr	r3, [r3, #0]
10004a98:	6053      	str	r3, [r2, #4]
10004a9a:	4770      	bx	lr
10004a9c:	3903      	subs	r1, #3
10004a9e:	2901      	cmp	r1, #1
10004aa0:	bf94      	ite	ls
10004aa2:	2001      	movls	r0, #1
10004aa4:	2002      	movhi	r0, #2
10004aa6:	4770      	bx	lr
10004aa8:	2002      	movs	r0, #2
10004aaa:	4770      	bx	lr
10004aac:	4608      	mov	r0, r1
10004aae:	4770      	bx	lr

10004ab0 <_Unwind_SetGR>:
10004ab0:	b510      	push	{r4, lr}
10004ab2:	b084      	sub	sp, #16
10004ab4:	2300      	movs	r3, #0
10004ab6:	ac03      	add	r4, sp, #12
10004ab8:	9203      	str	r2, [sp, #12]
10004aba:	460a      	mov	r2, r1
10004abc:	4619      	mov	r1, r3
10004abe:	9400      	str	r4, [sp, #0]
10004ac0:	f7ff ffdc 	bl	10004a7c <_Unwind_VRS_Set>
10004ac4:	b004      	add	sp, #16
10004ac6:	bd10      	pop	{r4, pc}

10004ac8 <__gnu_Unwind_Backtrace>:
10004ac8:	b5f0      	push	{r4, r5, r6, r7, lr}
10004aca:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004acc:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10004ad0:	1d14      	adds	r4, r2, #4
10004ad2:	4606      	mov	r6, r0
10004ad4:	6413      	str	r3, [r2, #64]	; 0x40
10004ad6:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004ada:	460d      	mov	r5, r1
10004adc:	f04f 37ff 	mov.w	r7, #4294967295
10004ae0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004ae2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004ae6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004ae8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004aec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004aee:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004af2:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10004af6:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10004afa:	9716      	str	r7, [sp, #88]	; 0x58
10004afc:	e010      	b.n	10004b20 <__gnu_Unwind_Backtrace+0x58>
10004afe:	f7ff ffd7 	bl	10004ab0 <_Unwind_SetGR>
10004b02:	4629      	mov	r1, r5
10004b04:	a816      	add	r0, sp, #88	; 0x58
10004b06:	47b0      	blx	r6
10004b08:	4603      	mov	r3, r0
10004b0a:	aa16      	add	r2, sp, #88	; 0x58
10004b0c:	4669      	mov	r1, sp
10004b0e:	2008      	movs	r0, #8
10004b10:	b983      	cbnz	r3, 10004b34 <__gnu_Unwind_Backtrace+0x6c>
10004b12:	9b04      	ldr	r3, [sp, #16]
10004b14:	4798      	blx	r3
10004b16:	2805      	cmp	r0, #5
10004b18:	4604      	mov	r4, r0
10004b1a:	d00c      	beq.n	10004b36 <__gnu_Unwind_Backtrace+0x6e>
10004b1c:	2809      	cmp	r0, #9
10004b1e:	d00a      	beq.n	10004b36 <__gnu_Unwind_Backtrace+0x6e>
10004b20:	9926      	ldr	r1, [sp, #152]	; 0x98
10004b22:	4668      	mov	r0, sp
10004b24:	f7ff fdfe 	bl	10004724 <get_eit_entry>
10004b28:	4603      	mov	r3, r0
10004b2a:	466a      	mov	r2, sp
10004b2c:	210c      	movs	r1, #12
10004b2e:	a816      	add	r0, sp, #88	; 0x58
10004b30:	2b00      	cmp	r3, #0
10004b32:	d0e4      	beq.n	10004afe <__gnu_Unwind_Backtrace+0x36>
10004b34:	2409      	movs	r4, #9
10004b36:	a816      	add	r0, sp, #88	; 0x58
10004b38:	f7ff fe42 	bl	100047c0 <restore_non_core_regs>
10004b3c:	4620      	mov	r0, r4
10004b3e:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10004b42:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004b44 <__gnu_unwind_pr_common>:
10004b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004b48:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004b4a:	b089      	sub	sp, #36	; 0x24
10004b4c:	461e      	mov	r6, r3
10004b4e:	460d      	mov	r5, r1
10004b50:	f854 3b04 	ldr.w	r3, [r4], #4
10004b54:	4617      	mov	r7, r2
10004b56:	f000 0803 	and.w	r8, r0, #3
10004b5a:	9406      	str	r4, [sp, #24]
10004b5c:	2e00      	cmp	r6, #0
10004b5e:	d07f      	beq.n	10004c60 <__gnu_unwind_pr_common+0x11c>
10004b60:	0c1a      	lsrs	r2, r3, #16
10004b62:	041b      	lsls	r3, r3, #16
10004b64:	f88d 201d 	strb.w	r2, [sp, #29]
10004b68:	b2d2      	uxtb	r2, r2
10004b6a:	9305      	str	r3, [sp, #20]
10004b6c:	2302      	movs	r3, #2
10004b6e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10004b72:	f88d 301c 	strb.w	r3, [sp, #28]
10004b76:	f1b8 0f02 	cmp.w	r8, #2
10004b7a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004b7c:	bf08      	it	eq
10004b7e:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10004b80:	f013 0301 	ands.w	r3, r3, #1
10004b84:	d008      	beq.n	10004b98 <__gnu_unwind_pr_common+0x54>
10004b86:	a905      	add	r1, sp, #20
10004b88:	4638      	mov	r0, r7
10004b8a:	f000 fba1 	bl	100052d0 <__gnu_unwind_execute>
10004b8e:	bb90      	cbnz	r0, 10004bf6 <__gnu_unwind_pr_common+0xb2>
10004b90:	2008      	movs	r0, #8
10004b92:	b009      	add	sp, #36	; 0x24
10004b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004b98:	f8d4 a000 	ldr.w	sl, [r4]
10004b9c:	f1ba 0f00 	cmp.w	sl, #0
10004ba0:	d0f1      	beq.n	10004b86 <__gnu_unwind_pr_common+0x42>
10004ba2:	9301      	str	r3, [sp, #4]
10004ba4:	f000 0308 	and.w	r3, r0, #8
10004ba8:	9302      	str	r3, [sp, #8]
10004baa:	2e02      	cmp	r6, #2
10004bac:	d054      	beq.n	10004c58 <__gnu_unwind_pr_common+0x114>
10004bae:	f8b4 a000 	ldrh.w	sl, [r4]
10004bb2:	3404      	adds	r4, #4
10004bb4:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004bb8:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004bba:	f029 0b01 	bic.w	fp, r9, #1
10004bbe:	210f      	movs	r1, #15
10004bc0:	4638      	mov	r0, r7
10004bc2:	449b      	add	fp, r3
10004bc4:	f7ff ff4e 	bl	10004a64 <_Unwind_GetGR>
10004bc8:	4583      	cmp	fp, r0
10004bca:	d818      	bhi.n	10004bfe <__gnu_unwind_pr_common+0xba>
10004bcc:	f02a 0301 	bic.w	r3, sl, #1
10004bd0:	449b      	add	fp, r3
10004bd2:	4583      	cmp	fp, r0
10004bd4:	d913      	bls.n	10004bfe <__gnu_unwind_pr_common+0xba>
10004bd6:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004bda:	f00a 0a01 	and.w	sl, sl, #1
10004bde:	f003 0302 	and.w	r3, r3, #2
10004be2:	ea43 030a 	orr.w	r3, r3, sl
10004be6:	2b01      	cmp	r3, #1
10004be8:	f000 80bf 	beq.w	10004d6a <__gnu_unwind_pr_common+0x226>
10004bec:	2b02      	cmp	r3, #2
10004bee:	f000 8089 	beq.w	10004d04 <__gnu_unwind_pr_common+0x1c0>
10004bf2:	2b00      	cmp	r3, #0
10004bf4:	d04d      	beq.n	10004c92 <__gnu_unwind_pr_common+0x14e>
10004bf6:	2009      	movs	r0, #9
10004bf8:	b009      	add	sp, #36	; 0x24
10004bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004bfe:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004c02:	f00a 0a01 	and.w	sl, sl, #1
10004c06:	f003 0302 	and.w	r3, r3, #2
10004c0a:	ea43 030a 	orr.w	r3, r3, sl
10004c0e:	2b01      	cmp	r3, #1
10004c10:	d03a      	beq.n	10004c88 <__gnu_unwind_pr_common+0x144>
10004c12:	2b02      	cmp	r3, #2
10004c14:	d02a      	beq.n	10004c6c <__gnu_unwind_pr_common+0x128>
10004c16:	2b00      	cmp	r3, #0
10004c18:	d1ed      	bne.n	10004bf6 <__gnu_unwind_pr_common+0xb2>
10004c1a:	3404      	adds	r4, #4
10004c1c:	f8d4 a000 	ldr.w	sl, [r4]
10004c20:	f1ba 0f00 	cmp.w	sl, #0
10004c24:	d1c1      	bne.n	10004baa <__gnu_unwind_pr_common+0x66>
10004c26:	a905      	add	r1, sp, #20
10004c28:	4638      	mov	r0, r7
10004c2a:	f000 fb51 	bl	100052d0 <__gnu_unwind_execute>
10004c2e:	2800      	cmp	r0, #0
10004c30:	d1e1      	bne.n	10004bf6 <__gnu_unwind_pr_common+0xb2>
10004c32:	9b01      	ldr	r3, [sp, #4]
10004c34:	2b00      	cmp	r3, #0
10004c36:	d0ab      	beq.n	10004b90 <__gnu_unwind_pr_common+0x4c>
10004c38:	210f      	movs	r1, #15
10004c3a:	4638      	mov	r0, r7
10004c3c:	f7ff ff12 	bl	10004a64 <_Unwind_GetGR>
10004c40:	210e      	movs	r1, #14
10004c42:	4602      	mov	r2, r0
10004c44:	4638      	mov	r0, r7
10004c46:	f7ff ff33 	bl	10004ab0 <_Unwind_SetGR>
10004c4a:	4638      	mov	r0, r7
10004c4c:	4a6e      	ldr	r2, [pc, #440]	; (10004e08 <__gnu_unwind_pr_common+0x2c4>)
10004c4e:	210f      	movs	r1, #15
10004c50:	f7ff ff2e 	bl	10004ab0 <_Unwind_SetGR>
10004c54:	2007      	movs	r0, #7
10004c56:	e7cf      	b.n	10004bf8 <__gnu_unwind_pr_common+0xb4>
10004c58:	f8d4 9004 	ldr.w	r9, [r4, #4]
10004c5c:	3408      	adds	r4, #8
10004c5e:	e7ab      	b.n	10004bb8 <__gnu_unwind_pr_common+0x74>
10004c60:	021b      	lsls	r3, r3, #8
10004c62:	9305      	str	r3, [sp, #20]
10004c64:	2303      	movs	r3, #3
10004c66:	f8ad 301c 	strh.w	r3, [sp, #28]
10004c6a:	e784      	b.n	10004b76 <__gnu_unwind_pr_common+0x32>
10004c6c:	6823      	ldr	r3, [r4, #0]
10004c6e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004c72:	f1b8 0f00 	cmp.w	r8, #0
10004c76:	d121      	bne.n	10004cbc <__gnu_unwind_pr_common+0x178>
10004c78:	2b00      	cmp	r3, #0
10004c7a:	da00      	bge.n	10004c7e <__gnu_unwind_pr_common+0x13a>
10004c7c:	3404      	adds	r4, #4
10004c7e:	f10b 0b01 	add.w	fp, fp, #1
10004c82:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10004c86:	e7c9      	b.n	10004c1c <__gnu_unwind_pr_common+0xd8>
10004c88:	f1b8 0f00 	cmp.w	r8, #0
10004c8c:	d120      	bne.n	10004cd0 <__gnu_unwind_pr_common+0x18c>
10004c8e:	3408      	adds	r4, #8
10004c90:	e7c4      	b.n	10004c1c <__gnu_unwind_pr_common+0xd8>
10004c92:	f1b8 0f00 	cmp.w	r8, #0
10004c96:	d0c0      	beq.n	10004c1a <__gnu_unwind_pr_common+0xd6>
10004c98:	4620      	mov	r0, r4
10004c9a:	3404      	adds	r4, #4
10004c9c:	f7ff fcf4 	bl	10004688 <selfrel_offset31>
10004ca0:	4606      	mov	r6, r0
10004ca2:	63ac      	str	r4, [r5, #56]	; 0x38
10004ca4:	4628      	mov	r0, r5
10004ca6:	e000      	b.n	10004caa <__gnu_unwind_pr_common+0x166>
10004ca8:	bf00      	nop
10004caa:	2800      	cmp	r0, #0
10004cac:	d0a3      	beq.n	10004bf6 <__gnu_unwind_pr_common+0xb2>
10004cae:	4638      	mov	r0, r7
10004cb0:	4632      	mov	r2, r6
10004cb2:	210f      	movs	r1, #15
10004cb4:	f7ff fefc 	bl	10004ab0 <_Unwind_SetGR>
10004cb8:	2007      	movs	r0, #7
10004cba:	e79d      	b.n	10004bf8 <__gnu_unwind_pr_common+0xb4>
10004cbc:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004cc0:	210d      	movs	r1, #13
10004cc2:	4638      	mov	r0, r7
10004cc4:	f7ff fece 	bl	10004a64 <_Unwind_GetGR>
10004cc8:	4581      	cmp	r9, r0
10004cca:	d079      	beq.n	10004dc0 <__gnu_unwind_pr_common+0x27c>
10004ccc:	6823      	ldr	r3, [r4, #0]
10004cce:	e7d3      	b.n	10004c78 <__gnu_unwind_pr_common+0x134>
10004cd0:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004cd4:	210d      	movs	r1, #13
10004cd6:	4638      	mov	r0, r7
10004cd8:	f7ff fec4 	bl	10004a64 <_Unwind_GetGR>
10004cdc:	4581      	cmp	r9, r0
10004cde:	d1d6      	bne.n	10004c8e <__gnu_unwind_pr_common+0x14a>
10004ce0:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004ce2:	429c      	cmp	r4, r3
10004ce4:	d1d3      	bne.n	10004c8e <__gnu_unwind_pr_common+0x14a>
10004ce6:	4620      	mov	r0, r4
10004ce8:	210f      	movs	r1, #15
10004cea:	f7ff fccd 	bl	10004688 <selfrel_offset31>
10004cee:	4602      	mov	r2, r0
10004cf0:	4638      	mov	r0, r7
10004cf2:	f7ff fedd 	bl	10004ab0 <_Unwind_SetGR>
10004cf6:	4638      	mov	r0, r7
10004cf8:	462a      	mov	r2, r5
10004cfa:	2100      	movs	r1, #0
10004cfc:	f7ff fed8 	bl	10004ab0 <_Unwind_SetGR>
10004d00:	2007      	movs	r0, #7
10004d02:	e779      	b.n	10004bf8 <__gnu_unwind_pr_common+0xb4>
10004d04:	6823      	ldr	r3, [r4, #0]
10004d06:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004d0a:	f1b8 0f00 	cmp.w	r8, #0
10004d0e:	d1d5      	bne.n	10004cbc <__gnu_unwind_pr_common+0x178>
10004d10:	9a02      	ldr	r2, [sp, #8]
10004d12:	b112      	cbz	r2, 10004d1a <__gnu_unwind_pr_common+0x1d6>
10004d14:	f1bb 0f00 	cmp.w	fp, #0
10004d18:	d1ae      	bne.n	10004c78 <__gnu_unwind_pr_common+0x134>
10004d1a:	f105 0358 	add.w	r3, r5, #88	; 0x58
10004d1e:	f8cd 800c 	str.w	r8, [sp, #12]
10004d22:	f104 0a04 	add.w	sl, r4, #4
10004d26:	46b0      	mov	r8, r6
10004d28:	f04f 0900 	mov.w	r9, #0
10004d2c:	461e      	mov	r6, r3
10004d2e:	e00d      	b.n	10004d4c <__gnu_unwind_pr_common+0x208>
10004d30:	4650      	mov	r0, sl
10004d32:	9604      	str	r6, [sp, #16]
10004d34:	2200      	movs	r2, #0
10004d36:	f7ff fd71 	bl	1000481c <_Unwind_decode_typeinfo_ptr.constprop.0>
10004d3a:	ab04      	add	r3, sp, #16
10004d3c:	4601      	mov	r1, r0
10004d3e:	4628      	mov	r0, r5
10004d40:	f10a 0a04 	add.w	sl, sl, #4
10004d44:	e000      	b.n	10004d48 <__gnu_unwind_pr_common+0x204>
10004d46:	bf00      	nop
10004d48:	2800      	cmp	r0, #0
10004d4a:	d14a      	bne.n	10004de2 <__gnu_unwind_pr_common+0x29e>
10004d4c:	45d9      	cmp	r9, fp
10004d4e:	f109 0901 	add.w	r9, r9, #1
10004d52:	d1ed      	bne.n	10004d30 <__gnu_unwind_pr_common+0x1ec>
10004d54:	210d      	movs	r1, #13
10004d56:	4638      	mov	r0, r7
10004d58:	f7ff fe84 	bl	10004a64 <_Unwind_GetGR>
10004d5c:	9b04      	ldr	r3, [sp, #16]
10004d5e:	4602      	mov	r2, r0
10004d60:	2006      	movs	r0, #6
10004d62:	622a      	str	r2, [r5, #32]
10004d64:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10004d68:	e746      	b.n	10004bf8 <__gnu_unwind_pr_common+0xb4>
10004d6a:	f1b8 0f00 	cmp.w	r8, #0
10004d6e:	d1af      	bne.n	10004cd0 <__gnu_unwind_pr_common+0x18c>
10004d70:	6863      	ldr	r3, [r4, #4]
10004d72:	6822      	ldr	r2, [r4, #0]
10004d74:	1c99      	adds	r1, r3, #2
10004d76:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10004d7a:	f43f af3c 	beq.w	10004bf6 <__gnu_unwind_pr_common+0xb2>
10004d7e:	f105 0158 	add.w	r1, r5, #88	; 0x58
10004d82:	3301      	adds	r3, #1
10004d84:	9104      	str	r1, [sp, #16]
10004d86:	d031      	beq.n	10004dec <__gnu_unwind_pr_common+0x2a8>
10004d88:	1d20      	adds	r0, r4, #4
10004d8a:	f7ff fd47 	bl	1000481c <_Unwind_decode_typeinfo_ptr.constprop.0>
10004d8e:	ab04      	add	r3, sp, #16
10004d90:	4601      	mov	r1, r0
10004d92:	4628      	mov	r0, r5
10004d94:	e000      	b.n	10004d98 <__gnu_unwind_pr_common+0x254>
10004d96:	bf00      	nop
10004d98:	2800      	cmp	r0, #0
10004d9a:	f43f af78 	beq.w	10004c8e <__gnu_unwind_pr_common+0x14a>
10004d9e:	4681      	mov	r9, r0
10004da0:	210d      	movs	r1, #13
10004da2:	4638      	mov	r0, r7
10004da4:	f7ff fe5e 	bl	10004a64 <_Unwind_GetGR>
10004da8:	f1b9 0f02 	cmp.w	r9, #2
10004dac:	6228      	str	r0, [r5, #32]
10004dae:	d122      	bne.n	10004df6 <__gnu_unwind_pr_common+0x2b2>
10004db0:	462b      	mov	r3, r5
10004db2:	9a04      	ldr	r2, [sp, #16]
10004db4:	f843 2f2c 	str.w	r2, [r3, #44]!
10004db8:	626b      	str	r3, [r5, #36]	; 0x24
10004dba:	2006      	movs	r0, #6
10004dbc:	62ac      	str	r4, [r5, #40]	; 0x28
10004dbe:	e71b      	b.n	10004bf8 <__gnu_unwind_pr_common+0xb4>
10004dc0:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004dc2:	429c      	cmp	r4, r3
10004dc4:	d182      	bne.n	10004ccc <__gnu_unwind_pr_common+0x188>
10004dc6:	2304      	movs	r3, #4
10004dc8:	2200      	movs	r2, #0
10004dca:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10004dce:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10004dd2:	18e3      	adds	r3, r4, r3
10004dd4:	636b      	str	r3, [r5, #52]	; 0x34
10004dd6:	6823      	ldr	r3, [r4, #0]
10004dd8:	2b00      	cmp	r3, #0
10004dda:	db0f      	blt.n	10004dfc <__gnu_unwind_pr_common+0x2b8>
10004ddc:	2301      	movs	r3, #1
10004dde:	9301      	str	r3, [sp, #4]
10004de0:	e74d      	b.n	10004c7e <__gnu_unwind_pr_common+0x13a>
10004de2:	4646      	mov	r6, r8
10004de4:	6823      	ldr	r3, [r4, #0]
10004de6:	f8dd 800c 	ldr.w	r8, [sp, #12]
10004dea:	e745      	b.n	10004c78 <__gnu_unwind_pr_common+0x134>
10004dec:	210d      	movs	r1, #13
10004dee:	4638      	mov	r0, r7
10004df0:	f7ff fe38 	bl	10004a64 <_Unwind_GetGR>
10004df4:	6228      	str	r0, [r5, #32]
10004df6:	9b04      	ldr	r3, [sp, #16]
10004df8:	626b      	str	r3, [r5, #36]	; 0x24
10004dfa:	e7de      	b.n	10004dba <__gnu_unwind_pr_common+0x276>
10004dfc:	f10b 0001 	add.w	r0, fp, #1
10004e00:	210f      	movs	r1, #15
10004e02:	eb04 0080 	add.w	r0, r4, r0, lsl #2
10004e06:	e770      	b.n	10004cea <__gnu_unwind_pr_common+0x1a6>
10004e08:	00000000 	andeq	r0, r0, r0

10004e0c <__aeabi_unwind_cpp_pr0>:
10004e0c:	2300      	movs	r3, #0
10004e0e:	e699      	b.n	10004b44 <__gnu_unwind_pr_common>

10004e10 <__aeabi_unwind_cpp_pr1>:
10004e10:	2301      	movs	r3, #1
10004e12:	e697      	b.n	10004b44 <__gnu_unwind_pr_common>

10004e14 <__aeabi_unwind_cpp_pr2>:
10004e14:	2302      	movs	r3, #2
10004e16:	e695      	b.n	10004b44 <__gnu_unwind_pr_common>

10004e18 <_Unwind_VRS_Pop>:
10004e18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10004e1c:	4606      	mov	r6, r0
10004e1e:	b0c3      	sub	sp, #268	; 0x10c
10004e20:	4615      	mov	r5, r2
10004e22:	461c      	mov	r4, r3
10004e24:	2904      	cmp	r1, #4
10004e26:	f200 80c2 	bhi.w	10004fae <_Unwind_VRS_Pop+0x196>
10004e2a:	e8df f001 	tbb	[pc, r1]
10004e2e:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
10004e32:	2c000003 	stccs	0, cr0, [r0], {3}
10004e36:	f040 80ba 	bne.w	10004fae <_Unwind_VRS_Pop+0x196>
10004e3a:	2a10      	cmp	r2, #16
10004e3c:	f200 80b7 	bhi.w	10004fae <_Unwind_VRS_Pop+0x196>
10004e40:	6803      	ldr	r3, [r0, #0]
10004e42:	06df      	lsls	r7, r3, #27
10004e44:	f100 80b7 	bmi.w	10004fb6 <_Unwind_VRS_Pop+0x19e>
10004e48:	af20      	add	r7, sp, #128	; 0x80
10004e4a:	4638      	mov	r0, r7
10004e4c:	f000 f9b0 	bl	100051b0 <__gnu_Unwind_Save_WMMXC>
10004e50:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10004e52:	4639      	mov	r1, r7
10004e54:	2300      	movs	r3, #0
10004e56:	f04f 0c01 	mov.w	ip, #1
10004e5a:	fa0c f203 	lsl.w	r2, ip, r3
10004e5e:	4620      	mov	r0, r4
10004e60:	3301      	adds	r3, #1
10004e62:	422a      	tst	r2, r5
10004e64:	d003      	beq.n	10004e6e <_Unwind_VRS_Pop+0x56>
10004e66:	f850 2b04 	ldr.w	r2, [r0], #4
10004e6a:	4604      	mov	r4, r0
10004e6c:	600a      	str	r2, [r1, #0]
10004e6e:	2b04      	cmp	r3, #4
10004e70:	f101 0104 	add.w	r1, r1, #4
10004e74:	d1f1      	bne.n	10004e5a <_Unwind_VRS_Pop+0x42>
10004e76:	4638      	mov	r0, r7
10004e78:	63b4      	str	r4, [r6, #56]	; 0x38
10004e7a:	f000 f98f 	bl	1000519c <__gnu_Unwind_Restore_WMMXC>
10004e7e:	2000      	movs	r0, #0
10004e80:	b043      	add	sp, #268	; 0x10c
10004e82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004e86:	2c03      	cmp	r4, #3
10004e88:	f040 8091 	bne.w	10004fae <_Unwind_VRS_Pop+0x196>
10004e8c:	fa1f f882 	uxth.w	r8, r2
10004e90:	0c14      	lsrs	r4, r2, #16
10004e92:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10004e96:	2d10      	cmp	r5, #16
10004e98:	f200 8089 	bhi.w	10004fae <_Unwind_VRS_Pop+0x196>
10004e9c:	6803      	ldr	r3, [r0, #0]
10004e9e:	071a      	lsls	r2, r3, #28
10004ea0:	f100 80cd 	bmi.w	1000503e <_Unwind_VRS_Pop+0x226>
10004ea4:	af20      	add	r7, sp, #128	; 0x80
10004ea6:	4638      	mov	r0, r7
10004ea8:	f000 f956 	bl	10005158 <__gnu_Unwind_Save_WMMXD>
10004eac:	6bb5      	ldr	r5, [r6, #56]	; 0x38
10004eae:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
10004eb2:	f1b8 0f00 	cmp.w	r8, #0
10004eb6:	d00b      	beq.n	10004ed0 <_Unwind_VRS_Pop+0xb8>
10004eb8:	460b      	mov	r3, r1
10004eba:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
10004ebe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
10004ec2:	1ae8      	subs	r0, r5, r3
10004ec4:	581a      	ldr	r2, [r3, r0]
10004ec6:	f843 2b04 	str.w	r2, [r3], #4
10004eca:	428b      	cmp	r3, r1
10004ecc:	d1fa      	bne.n	10004ec4 <_Unwind_VRS_Pop+0xac>
10004ece:	4445      	add	r5, r8
10004ed0:	4638      	mov	r0, r7
10004ed2:	63b5      	str	r5, [r6, #56]	; 0x38
10004ed4:	f000 f91e 	bl	10005114 <__gnu_Unwind_Restore_WMMXD>
10004ed8:	2000      	movs	r0, #0
10004eda:	b043      	add	sp, #268	; 0x10c
10004edc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004ee0:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
10004ee4:	ea4f 4812 	mov.w	r8, r2, lsr #16
10004ee8:	b295      	uxth	r5, r2
10004eea:	2b01      	cmp	r3, #1
10004eec:	d15f      	bne.n	10004fae <_Unwind_VRS_Pop+0x196>
10004eee:	2c01      	cmp	r4, #1
10004ef0:	eb08 0905 	add.w	r9, r8, r5
10004ef4:	d058      	beq.n	10004fa8 <_Unwind_VRS_Pop+0x190>
10004ef6:	f1b9 0f20 	cmp.w	r9, #32
10004efa:	d858      	bhi.n	10004fae <_Unwind_VRS_Pop+0x196>
10004efc:	f1b8 0f0f 	cmp.w	r8, #15
10004f00:	d975      	bls.n	10004fee <_Unwind_VRS_Pop+0x1d6>
10004f02:	2c05      	cmp	r4, #5
10004f04:	46a9      	mov	r9, r5
10004f06:	f000 80a4 	beq.w	10005052 <_Unwind_VRS_Pop+0x23a>
10004f0a:	2d00      	cmp	r5, #0
10004f0c:	d14f      	bne.n	10004fae <_Unwind_VRS_Pop+0x196>
10004f0e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10004f10:	b365      	cbz	r5, 10004f6c <_Unwind_VRS_Pop+0x154>
10004f12:	af20      	add	r7, sp, #128	; 0x80
10004f14:	f04f 0900 	mov.w	r9, #0
10004f18:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
10004f1c:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
10004f20:	3f04      	subs	r7, #4
10004f22:	f853 1b04 	ldr.w	r1, [r3], #4
10004f26:	429d      	cmp	r5, r3
10004f28:	f847 1f04 	str.w	r1, [r7, #4]!
10004f2c:	d1f9      	bne.n	10004f22 <_Unwind_VRS_Pop+0x10a>
10004f2e:	f1b9 0f00 	cmp.w	r9, #0
10004f32:	d00f      	beq.n	10004f54 <_Unwind_VRS_Pop+0x13c>
10004f34:	466f      	mov	r7, sp
10004f36:	4641      	mov	r1, r8
10004f38:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
10004f3c:	2910      	cmp	r1, #16
10004f3e:	bf38      	it	cc
10004f40:	2110      	movcc	r1, #16
10004f42:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
10004f46:	3984      	subs	r1, #132	; 0x84
10004f48:	f853 0b04 	ldr.w	r0, [r3], #4
10004f4c:	429d      	cmp	r5, r3
10004f4e:	f841 0f04 	str.w	r0, [r1, #4]!
10004f52:	d1f9      	bne.n	10004f48 <_Unwind_VRS_Pop+0x130>
10004f54:	2c01      	cmp	r4, #1
10004f56:	d07a      	beq.n	1000504e <_Unwind_VRS_Pop+0x236>
10004f58:	f1b8 0f0f 	cmp.w	r8, #15
10004f5c:	63b5      	str	r5, [r6, #56]	; 0x38
10004f5e:	d96a      	bls.n	10005036 <_Unwind_VRS_Pop+0x21e>
10004f60:	f1b9 0f00 	cmp.w	r9, #0
10004f64:	d002      	beq.n	10004f6c <_Unwind_VRS_Pop+0x154>
10004f66:	4668      	mov	r0, sp
10004f68:	f000 f8cc 	bl	10005104 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10004f6c:	2000      	movs	r0, #0
10004f6e:	b043      	add	sp, #268	; 0x10c
10004f70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004f74:	b9dc      	cbnz	r4, 10004fae <_Unwind_VRS_Pop+0x196>
10004f76:	6b87      	ldr	r7, [r0, #56]	; 0x38
10004f78:	4623      	mov	r3, r4
10004f7a:	fa1f fc82 	uxth.w	ip, r2
10004f7e:	2001      	movs	r0, #1
10004f80:	1d34      	adds	r4, r6, #4
10004f82:	fa00 f103 	lsl.w	r1, r0, r3
10004f86:	463a      	mov	r2, r7
10004f88:	ea11 0f0c 	tst.w	r1, ip
10004f8c:	d004      	beq.n	10004f98 <_Unwind_VRS_Pop+0x180>
10004f8e:	f852 1b04 	ldr.w	r1, [r2], #4
10004f92:	4617      	mov	r7, r2
10004f94:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10004f98:	3301      	adds	r3, #1
10004f9a:	2b10      	cmp	r3, #16
10004f9c:	d1f1      	bne.n	10004f82 <_Unwind_VRS_Pop+0x16a>
10004f9e:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
10004fa2:	d1e3      	bne.n	10004f6c <_Unwind_VRS_Pop+0x154>
10004fa4:	63b7      	str	r7, [r6, #56]	; 0x38
10004fa6:	e003      	b.n	10004fb0 <_Unwind_VRS_Pop+0x198>
10004fa8:	f1b9 0f10 	cmp.w	r9, #16
10004fac:	d90b      	bls.n	10004fc6 <_Unwind_VRS_Pop+0x1ae>
10004fae:	2002      	movs	r0, #2
10004fb0:	b043      	add	sp, #268	; 0x10c
10004fb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004fb6:	f023 0310 	bic.w	r3, r3, #16
10004fba:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
10004fbe:	6033      	str	r3, [r6, #0]
10004fc0:	f000 f8f6 	bl	100051b0 <__gnu_Unwind_Save_WMMXC>
10004fc4:	e740      	b.n	10004e48 <_Unwind_VRS_Pop+0x30>
10004fc6:	f1b8 0f0f 	cmp.w	r8, #15
10004fca:	d8f0      	bhi.n	10004fae <_Unwind_VRS_Pop+0x196>
10004fcc:	6803      	ldr	r3, [r0, #0]
10004fce:	07d8      	lsls	r0, r3, #31
10004fd0:	d450      	bmi.n	10005074 <_Unwind_VRS_Pop+0x25c>
10004fd2:	af20      	add	r7, sp, #128	; 0x80
10004fd4:	4638      	mov	r0, r7
10004fd6:	f000 f889 	bl	100050ec <__gnu_Unwind_Save_VFP>
10004fda:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10004fdc:	2d00      	cmp	r5, #0
10004fde:	d199      	bne.n	10004f14 <_Unwind_VRS_Pop+0xfc>
10004fe0:	461d      	mov	r5, r3
10004fe2:	3504      	adds	r5, #4
10004fe4:	4638      	mov	r0, r7
10004fe6:	63b5      	str	r5, [r6, #56]	; 0x38
10004fe8:	f000 f87c 	bl	100050e4 <__gnu_Unwind_Restore_VFP>
10004fec:	e7be      	b.n	10004f6c <_Unwind_VRS_Pop+0x154>
10004fee:	f1b9 0f10 	cmp.w	r9, #16
10004ff2:	d958      	bls.n	100050a6 <_Unwind_VRS_Pop+0x28e>
10004ff4:	2c05      	cmp	r4, #5
10004ff6:	d1da      	bne.n	10004fae <_Unwind_VRS_Pop+0x196>
10004ff8:	6833      	ldr	r3, [r6, #0]
10004ffa:	f1a9 0910 	sub.w	r9, r9, #16
10004ffe:	07dd      	lsls	r5, r3, #31
10005000:	d509      	bpl.n	10005016 <_Unwind_VRS_Pop+0x1fe>
10005002:	f023 0301 	bic.w	r3, r3, #1
10005006:	4630      	mov	r0, r6
10005008:	f043 0302 	orr.w	r3, r3, #2
1000500c:	f840 3b48 	str.w	r3, [r0], #72
10005010:	f000 f874 	bl	100050fc <__gnu_Unwind_Save_VFP_D>
10005014:	6833      	ldr	r3, [r6, #0]
10005016:	0759      	lsls	r1, r3, #29
10005018:	d421      	bmi.n	1000505e <_Unwind_VRS_Pop+0x246>
1000501a:	a820      	add	r0, sp, #128	; 0x80
1000501c:	f000 f86e 	bl	100050fc <__gnu_Unwind_Save_VFP_D>
10005020:	466f      	mov	r7, sp
10005022:	f1c8 0510 	rsb	r5, r8, #16
10005026:	4638      	mov	r0, r7
10005028:	f000 f870 	bl	1000510c <__gnu_Unwind_Save_VFP_D_16_to_31>
1000502c:	2d00      	cmp	r5, #0
1000502e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005030:	dd81      	ble.n	10004f36 <_Unwind_VRS_Pop+0x11e>
10005032:	af20      	add	r7, sp, #128	; 0x80
10005034:	e770      	b.n	10004f18 <_Unwind_VRS_Pop+0x100>
10005036:	a820      	add	r0, sp, #128	; 0x80
10005038:	f000 f85c 	bl	100050f4 <__gnu_Unwind_Restore_VFP_D>
1000503c:	e790      	b.n	10004f60 <_Unwind_VRS_Pop+0x148>
1000503e:	f023 0308 	bic.w	r3, r3, #8
10005042:	f500 70a8 	add.w	r0, r0, #336	; 0x150
10005046:	6033      	str	r3, [r6, #0]
10005048:	f000 f886 	bl	10005158 <__gnu_Unwind_Save_WMMXD>
1000504c:	e72a      	b.n	10004ea4 <_Unwind_VRS_Pop+0x8c>
1000504e:	af20      	add	r7, sp, #128	; 0x80
10005050:	e7c7      	b.n	10004fe2 <_Unwind_VRS_Pop+0x1ca>
10005052:	2d00      	cmp	r5, #0
10005054:	f43f af5b 	beq.w	10004f0e <_Unwind_VRS_Pop+0xf6>
10005058:	6833      	ldr	r3, [r6, #0]
1000505a:	075a      	lsls	r2, r3, #29
1000505c:	d5e0      	bpl.n	10005020 <_Unwind_VRS_Pop+0x208>
1000505e:	f023 0304 	bic.w	r3, r3, #4
10005062:	4630      	mov	r0, r6
10005064:	f840 3bd0 	str.w	r3, [r0], #208
10005068:	f000 f850 	bl	1000510c <__gnu_Unwind_Save_VFP_D_16_to_31>
1000506c:	f1b8 0f0f 	cmp.w	r8, #15
10005070:	d8d6      	bhi.n	10005020 <_Unwind_VRS_Pop+0x208>
10005072:	e7d2      	b.n	1000501a <_Unwind_VRS_Pop+0x202>
10005074:	f023 0303 	bic.w	r3, r3, #3
10005078:	4630      	mov	r0, r6
1000507a:	f840 3b48 	str.w	r3, [r0], #72
1000507e:	f000 f835 	bl	100050ec <__gnu_Unwind_Save_VFP>
10005082:	2c01      	cmp	r4, #1
10005084:	d0a5      	beq.n	10004fd2 <_Unwind_VRS_Pop+0x1ba>
10005086:	f1b8 0f0f 	cmp.w	r8, #15
1000508a:	f63f af40 	bhi.w	10004f0e <_Unwind_VRS_Pop+0xf6>
1000508e:	af20      	add	r7, sp, #128	; 0x80
10005090:	4638      	mov	r0, r7
10005092:	f000 f833 	bl	100050fc <__gnu_Unwind_Save_VFP_D>
10005096:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005098:	2d00      	cmp	r5, #0
1000509a:	f47f af3b 	bne.w	10004f14 <_Unwind_VRS_Pop+0xfc>
1000509e:	4638      	mov	r0, r7
100050a0:	f000 f828 	bl	100050f4 <__gnu_Unwind_Restore_VFP_D>
100050a4:	e762      	b.n	10004f6c <_Unwind_VRS_Pop+0x154>
100050a6:	6833      	ldr	r3, [r6, #0]
100050a8:	07d9      	lsls	r1, r3, #31
100050aa:	d5ea      	bpl.n	10005082 <_Unwind_VRS_Pop+0x26a>
100050ac:	2c05      	cmp	r4, #5
100050ae:	d1e1      	bne.n	10005074 <_Unwind_VRS_Pop+0x25c>
100050b0:	f023 0301 	bic.w	r3, r3, #1
100050b4:	4630      	mov	r0, r6
100050b6:	af20      	add	r7, sp, #128	; 0x80
100050b8:	f043 0302 	orr.w	r3, r3, #2
100050bc:	f840 3b48 	str.w	r3, [r0], #72
100050c0:	f000 f81c 	bl	100050fc <__gnu_Unwind_Save_VFP_D>
100050c4:	4638      	mov	r0, r7
100050c6:	f000 f819 	bl	100050fc <__gnu_Unwind_Save_VFP_D>
100050ca:	e7e4      	b.n	10005096 <_Unwind_VRS_Pop+0x27e>

100050cc <__restore_core_regs>:
100050cc:	f100 0134 	add.w	r1, r0, #52	; 0x34
100050d0:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
100050d4:	469c      	mov	ip, r3
100050d6:	46a6      	mov	lr, r4
100050d8:	f84c 5d04 	str.w	r5, [ip, #-4]!
100050dc:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100050e0:	46e5      	mov	sp, ip
100050e2:	bd00      	pop	{pc}

100050e4 <__gnu_Unwind_Restore_VFP>:
100050e4:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
100050e8:	4770      	bx	lr
100050ea:	bf00      	nop

100050ec <__gnu_Unwind_Save_VFP>:
100050ec:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
100050f0:	4770      	bx	lr
100050f2:	bf00      	nop

100050f4 <__gnu_Unwind_Restore_VFP_D>:
100050f4:	ec90 0b20 	vldmia	r0, {d0-d15}
100050f8:	4770      	bx	lr
100050fa:	bf00      	nop

100050fc <__gnu_Unwind_Save_VFP_D>:
100050fc:	ec80 0b20 	vstmia	r0, {d0-d15}
10005100:	4770      	bx	lr
10005102:	bf00      	nop

10005104 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
10005104:	ecd0 0b20 	vldmia	r0, {d16-d31}
10005108:	4770      	bx	lr
1000510a:	bf00      	nop

1000510c <__gnu_Unwind_Save_VFP_D_16_to_31>:
1000510c:	ecc0 0b20 	vstmia	r0, {d16-d31}
10005110:	4770      	bx	lr
10005112:	bf00      	nop

10005114 <__gnu_Unwind_Restore_WMMXD>:
10005114:	ecf0 0102 	ldfe	f0, [r0], #8
10005118:	ecf0 1102 	ldfe	f1, [r0], #8
1000511c:	ecf0 2102 	ldfe	f2, [r0], #8
10005120:	ecf0 3102 	ldfe	f3, [r0], #8
10005124:	ecf0 4102 	ldfe	f4, [r0], #8
10005128:	ecf0 5102 	ldfe	f5, [r0], #8
1000512c:	ecf0 6102 	ldfe	f6, [r0], #8
10005130:	ecf0 7102 	ldfe	f7, [r0], #8
10005134:	ecf0 8102 	ldfp	f0, [r0], #8
10005138:	ecf0 9102 	ldfp	f1, [r0], #8
1000513c:	ecf0 a102 	ldfp	f2, [r0], #8
10005140:	ecf0 b102 	ldfp	f3, [r0], #8
10005144:	ecf0 c102 	ldfp	f4, [r0], #8
10005148:	ecf0 d102 	ldfp	f5, [r0], #8
1000514c:	ecf0 e102 	ldfp	f6, [r0], #8
10005150:	ecf0 f102 	ldfp	f7, [r0], #8
10005154:	4770      	bx	lr
10005156:	bf00      	nop

10005158 <__gnu_Unwind_Save_WMMXD>:
10005158:	ece0 0102 	stfe	f0, [r0], #8
1000515c:	ece0 1102 	stfe	f1, [r0], #8
10005160:	ece0 2102 	stfe	f2, [r0], #8
10005164:	ece0 3102 	stfe	f3, [r0], #8
10005168:	ece0 4102 	stfe	f4, [r0], #8
1000516c:	ece0 5102 	stfe	f5, [r0], #8
10005170:	ece0 6102 	stfe	f6, [r0], #8
10005174:	ece0 7102 	stfe	f7, [r0], #8
10005178:	ece0 8102 	stfp	f0, [r0], #8
1000517c:	ece0 9102 	stfp	f1, [r0], #8
10005180:	ece0 a102 	stfp	f2, [r0], #8
10005184:	ece0 b102 	stfp	f3, [r0], #8
10005188:	ece0 c102 	stfp	f4, [r0], #8
1000518c:	ece0 d102 	stfp	f5, [r0], #8
10005190:	ece0 e102 	stfp	f6, [r0], #8
10005194:	ece0 f102 	stfp	f7, [r0], #8
10005198:	4770      	bx	lr
1000519a:	bf00      	nop

1000519c <__gnu_Unwind_Restore_WMMXC>:
1000519c:	fcb0 8101 	ldc2	1, cr8, [r0], #4
100051a0:	fcb0 9101 	ldc2	1, cr9, [r0], #4
100051a4:	fcb0 a101 	ldc2	1, cr10, [r0], #4
100051a8:	fcb0 b101 	ldc2	1, cr11, [r0], #4
100051ac:	4770      	bx	lr
100051ae:	bf00      	nop

100051b0 <__gnu_Unwind_Save_WMMXC>:
100051b0:	fca0 8101 	stc2	1, cr8, [r0], #4
100051b4:	fca0 9101 	stc2	1, cr9, [r0], #4
100051b8:	fca0 a101 	stc2	1, cr10, [r0], #4
100051bc:	fca0 b101 	stc2	1, cr11, [r0], #4
100051c0:	4770      	bx	lr
100051c2:	bf00      	nop

100051c4 <_Unwind_RaiseException>:
100051c4:	46ec      	mov	ip, sp
100051c6:	b500      	push	{lr}
100051c8:	e92d 5000 	stmdb	sp!, {ip, lr}
100051cc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100051d0:	f04f 0300 	mov.w	r3, #0
100051d4:	e92d 000c 	stmdb	sp!, {r2, r3}
100051d8:	a901      	add	r1, sp, #4
100051da:	f7ff fbb7 	bl	1000494c <__gnu_Unwind_RaiseException>
100051de:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100051e2:	b012      	add	sp, #72	; 0x48
100051e4:	4770      	bx	lr
100051e6:	bf00      	nop

100051e8 <_Unwind_Resume>:
100051e8:	46ec      	mov	ip, sp
100051ea:	b500      	push	{lr}
100051ec:	e92d 5000 	stmdb	sp!, {ip, lr}
100051f0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100051f4:	f04f 0300 	mov.w	r3, #0
100051f8:	e92d 000c 	stmdb	sp!, {r2, r3}
100051fc:	a901      	add	r1, sp, #4
100051fe:	f7ff fbe3 	bl	100049c8 <__gnu_Unwind_Resume>
10005202:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005206:	b012      	add	sp, #72	; 0x48
10005208:	4770      	bx	lr
1000520a:	bf00      	nop

1000520c <_Unwind_Resume_or_Rethrow>:
1000520c:	46ec      	mov	ip, sp
1000520e:	b500      	push	{lr}
10005210:	e92d 5000 	stmdb	sp!, {ip, lr}
10005214:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005218:	f04f 0300 	mov.w	r3, #0
1000521c:	e92d 000c 	stmdb	sp!, {r2, r3}
10005220:	a901      	add	r1, sp, #4
10005222:	f7ff fbf3 	bl	10004a0c <__gnu_Unwind_Resume_or_Rethrow>
10005226:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000522a:	b012      	add	sp, #72	; 0x48
1000522c:	4770      	bx	lr
1000522e:	bf00      	nop

10005230 <_Unwind_ForcedUnwind>:
10005230:	46ec      	mov	ip, sp
10005232:	b500      	push	{lr}
10005234:	e92d 5000 	stmdb	sp!, {ip, lr}
10005238:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000523c:	f04f 0300 	mov.w	r3, #0
10005240:	e92d 000c 	stmdb	sp!, {r2, r3}
10005244:	ab01      	add	r3, sp, #4
10005246:	f7ff fbb5 	bl	100049b4 <__gnu_Unwind_ForcedUnwind>
1000524a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000524e:	b012      	add	sp, #72	; 0x48
10005250:	4770      	bx	lr
10005252:	bf00      	nop

10005254 <_Unwind_Backtrace>:
10005254:	46ec      	mov	ip, sp
10005256:	b500      	push	{lr}
10005258:	e92d 5000 	stmdb	sp!, {ip, lr}
1000525c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005260:	f04f 0300 	mov.w	r3, #0
10005264:	e92d 000c 	stmdb	sp!, {r2, r3}
10005268:	aa01      	add	r2, sp, #4
1000526a:	f7ff fc2d 	bl	10004ac8 <__gnu_Unwind_Backtrace>
1000526e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005272:	b012      	add	sp, #72	; 0x48
10005274:	4770      	bx	lr
10005276:	bf00      	nop

10005278 <next_unwind_byte>:
10005278:	7a02      	ldrb	r2, [r0, #8]
1000527a:	4603      	mov	r3, r0
1000527c:	b98a      	cbnz	r2, 100052a2 <next_unwind_byte+0x2a>
1000527e:	7a42      	ldrb	r2, [r0, #9]
10005280:	b1b2      	cbz	r2, 100052b0 <next_unwind_byte+0x38>
10005282:	6841      	ldr	r1, [r0, #4]
10005284:	3a01      	subs	r2, #1
10005286:	f04f 0c03 	mov.w	ip, #3
1000528a:	b410      	push	{r4}
1000528c:	7242      	strb	r2, [r0, #9]
1000528e:	1d0c      	adds	r4, r1, #4
10005290:	6808      	ldr	r0, [r1, #0]
10005292:	f883 c008 	strb.w	ip, [r3, #8]
10005296:	0202      	lsls	r2, r0, #8
10005298:	605c      	str	r4, [r3, #4]
1000529a:	0e00      	lsrs	r0, r0, #24
1000529c:	bc10      	pop	{r4}
1000529e:	601a      	str	r2, [r3, #0]
100052a0:	4770      	bx	lr
100052a2:	6800      	ldr	r0, [r0, #0]
100052a4:	3a01      	subs	r2, #1
100052a6:	721a      	strb	r2, [r3, #8]
100052a8:	0202      	lsls	r2, r0, #8
100052aa:	0e00      	lsrs	r0, r0, #24
100052ac:	601a      	str	r2, [r3, #0]
100052ae:	4770      	bx	lr
100052b0:	20b0      	movs	r0, #176	; 0xb0
100052b2:	4770      	bx	lr

100052b4 <_Unwind_GetGR.constprop.0>:
100052b4:	b510      	push	{r4, lr}
100052b6:	b084      	sub	sp, #16
100052b8:	2300      	movs	r3, #0
100052ba:	220c      	movs	r2, #12
100052bc:	ac03      	add	r4, sp, #12
100052be:	4619      	mov	r1, r3
100052c0:	9400      	str	r4, [sp, #0]
100052c2:	f7ff fbb5 	bl	10004a30 <_Unwind_VRS_Get>
100052c6:	9803      	ldr	r0, [sp, #12]
100052c8:	b004      	add	sp, #16
100052ca:	bd10      	pop	{r4, pc}

100052cc <unwind_UCB_from_context>:
100052cc:	e7f2      	b.n	100052b4 <_Unwind_GetGR.constprop.0>
100052ce:	bf00      	nop

100052d0 <__gnu_unwind_execute>:
100052d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100052d4:	f04f 0800 	mov.w	r8, #0
100052d8:	b085      	sub	sp, #20
100052da:	4606      	mov	r6, r0
100052dc:	460d      	mov	r5, r1
100052de:	4628      	mov	r0, r5
100052e0:	f7ff ffca 	bl	10005278 <next_unwind_byte>
100052e4:	28b0      	cmp	r0, #176	; 0xb0
100052e6:	4604      	mov	r4, r0
100052e8:	f000 80bc 	beq.w	10005464 <__gnu_unwind_execute+0x194>
100052ec:	0607      	lsls	r7, r0, #24
100052ee:	d520      	bpl.n	10005332 <__gnu_unwind_execute+0x62>
100052f0:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
100052f4:	2b80      	cmp	r3, #128	; 0x80
100052f6:	d04e      	beq.n	10005396 <__gnu_unwind_execute+0xc6>
100052f8:	2b90      	cmp	r3, #144	; 0x90
100052fa:	d037      	beq.n	1000536c <__gnu_unwind_execute+0x9c>
100052fc:	2ba0      	cmp	r3, #160	; 0xa0
100052fe:	d061      	beq.n	100053c4 <__gnu_unwind_execute+0xf4>
10005300:	2bb0      	cmp	r3, #176	; 0xb0
10005302:	d076      	beq.n	100053f2 <__gnu_unwind_execute+0x122>
10005304:	2bc0      	cmp	r3, #192	; 0xc0
10005306:	f000 808d 	beq.w	10005424 <__gnu_unwind_execute+0x154>
1000530a:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
1000530e:	2bd0      	cmp	r3, #208	; 0xd0
10005310:	d10b      	bne.n	1000532a <__gnu_unwind_execute+0x5a>
10005312:	f000 0207 	and.w	r2, r0, #7
10005316:	2305      	movs	r3, #5
10005318:	2101      	movs	r1, #1
1000531a:	4630      	mov	r0, r6
1000531c:	3201      	adds	r2, #1
1000531e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10005322:	f7ff fd79 	bl	10004e18 <_Unwind_VRS_Pop>
10005326:	2800      	cmp	r0, #0
10005328:	d0d9      	beq.n	100052de <__gnu_unwind_execute+0xe>
1000532a:	2009      	movs	r0, #9
1000532c:	b005      	add	sp, #20
1000532e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005332:	0083      	lsls	r3, r0, #2
10005334:	f10d 090c 	add.w	r9, sp, #12
10005338:	220d      	movs	r2, #13
1000533a:	4630      	mov	r0, r6
1000533c:	b2db      	uxtb	r3, r3
1000533e:	f8cd 9000 	str.w	r9, [sp]
10005342:	1d1f      	adds	r7, r3, #4
10005344:	2300      	movs	r3, #0
10005346:	4619      	mov	r1, r3
10005348:	f7ff fb72 	bl	10004a30 <_Unwind_VRS_Get>
1000534c:	9b03      	ldr	r3, [sp, #12]
1000534e:	0660      	lsls	r0, r4, #25
10005350:	f04f 020d 	mov.w	r2, #13
10005354:	4630      	mov	r0, r6
10005356:	f8cd 9000 	str.w	r9, [sp]
1000535a:	bf4c      	ite	mi
1000535c:	1bdf      	submi	r7, r3, r7
1000535e:	18ff      	addpl	r7, r7, r3
10005360:	2300      	movs	r3, #0
10005362:	9703      	str	r7, [sp, #12]
10005364:	4619      	mov	r1, r3
10005366:	f7ff fb89 	bl	10004a7c <_Unwind_VRS_Set>
1000536a:	e7b8      	b.n	100052de <__gnu_unwind_execute+0xe>
1000536c:	f000 030d 	and.w	r3, r0, #13
10005370:	2b0d      	cmp	r3, #13
10005372:	d0da      	beq.n	1000532a <__gnu_unwind_execute+0x5a>
10005374:	af03      	add	r7, sp, #12
10005376:	2300      	movs	r3, #0
10005378:	f000 020f 	and.w	r2, r0, #15
1000537c:	4630      	mov	r0, r6
1000537e:	4619      	mov	r1, r3
10005380:	9700      	str	r7, [sp, #0]
10005382:	f7ff fb55 	bl	10004a30 <_Unwind_VRS_Get>
10005386:	2300      	movs	r3, #0
10005388:	220d      	movs	r2, #13
1000538a:	4630      	mov	r0, r6
1000538c:	4619      	mov	r1, r3
1000538e:	9700      	str	r7, [sp, #0]
10005390:	f7ff fb74 	bl	10004a7c <_Unwind_VRS_Set>
10005394:	e7a3      	b.n	100052de <__gnu_unwind_execute+0xe>
10005396:	0224      	lsls	r4, r4, #8
10005398:	4628      	mov	r0, r5
1000539a:	f7ff ff6d 	bl	10005278 <next_unwind_byte>
1000539e:	4320      	orrs	r0, r4
100053a0:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
100053a4:	d0c1      	beq.n	1000532a <__gnu_unwind_execute+0x5a>
100053a6:	0104      	lsls	r4, r0, #4
100053a8:	2300      	movs	r3, #0
100053aa:	4630      	mov	r0, r6
100053ac:	b2a2      	uxth	r2, r4
100053ae:	4619      	mov	r1, r3
100053b0:	f7ff fd32 	bl	10004e18 <_Unwind_VRS_Pop>
100053b4:	2800      	cmp	r0, #0
100053b6:	d1b8      	bne.n	1000532a <__gnu_unwind_execute+0x5a>
100053b8:	f414 4f00 	tst.w	r4, #32768	; 0x8000
100053bc:	bf18      	it	ne
100053be:	f04f 0801 	movne.w	r8, #1
100053c2:	e78c      	b.n	100052de <__gnu_unwind_execute+0xe>
100053c4:	43c2      	mvns	r2, r0
100053c6:	0701      	lsls	r1, r0, #28
100053c8:	4630      	mov	r0, r6
100053ca:	f002 0307 	and.w	r3, r2, #7
100053ce:	f44f 627f 	mov.w	r2, #4080	; 0xff0
100053d2:	fa42 f203 	asr.w	r2, r2, r3
100053d6:	f04f 0300 	mov.w	r3, #0
100053da:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
100053de:	4619      	mov	r1, r3
100053e0:	bf48      	it	mi
100053e2:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
100053e6:	f7ff fd17 	bl	10004e18 <_Unwind_VRS_Pop>
100053ea:	2800      	cmp	r0, #0
100053ec:	f43f af77 	beq.w	100052de <__gnu_unwind_execute+0xe>
100053f0:	e79b      	b.n	1000532a <__gnu_unwind_execute+0x5a>
100053f2:	28b1      	cmp	r0, #177	; 0xb1
100053f4:	d03b      	beq.n	1000546e <__gnu_unwind_execute+0x19e>
100053f6:	28b2      	cmp	r0, #178	; 0xb2
100053f8:	f000 80a1 	beq.w	1000553e <__gnu_unwind_execute+0x26e>
100053fc:	28b3      	cmp	r0, #179	; 0xb3
100053fe:	d041      	beq.n	10005484 <__gnu_unwind_execute+0x1b4>
10005400:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
10005404:	2bb4      	cmp	r3, #180	; 0xb4
10005406:	d090      	beq.n	1000532a <__gnu_unwind_execute+0x5a>
10005408:	f000 0207 	and.w	r2, r0, #7
1000540c:	2301      	movs	r3, #1
1000540e:	441a      	add	r2, r3
10005410:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10005414:	4619      	mov	r1, r3
10005416:	4630      	mov	r0, r6
10005418:	f7ff fcfe 	bl	10004e18 <_Unwind_VRS_Pop>
1000541c:	2800      	cmp	r0, #0
1000541e:	f43f af5e 	beq.w	100052de <__gnu_unwind_execute+0xe>
10005422:	e782      	b.n	1000532a <__gnu_unwind_execute+0x5a>
10005424:	28c6      	cmp	r0, #198	; 0xc6
10005426:	d051      	beq.n	100054cc <__gnu_unwind_execute+0x1fc>
10005428:	28c7      	cmp	r0, #199	; 0xc7
1000542a:	d062      	beq.n	100054f2 <__gnu_unwind_execute+0x222>
1000542c:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005430:	2bc0      	cmp	r3, #192	; 0xc0
10005432:	d071      	beq.n	10005518 <__gnu_unwind_execute+0x248>
10005434:	28c8      	cmp	r0, #200	; 0xc8
10005436:	d076      	beq.n	10005526 <__gnu_unwind_execute+0x256>
10005438:	28c9      	cmp	r0, #201	; 0xc9
1000543a:	f47f af76 	bne.w	1000532a <__gnu_unwind_execute+0x5a>
1000543e:	4628      	mov	r0, r5
10005440:	f7ff ff1a 	bl	10005278 <next_unwind_byte>
10005444:	0302      	lsls	r2, r0, #12
10005446:	f000 000f 	and.w	r0, r0, #15
1000544a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
1000544e:	3001      	adds	r0, #1
10005450:	4302      	orrs	r2, r0
10005452:	2101      	movs	r1, #1
10005454:	2305      	movs	r3, #5
10005456:	4630      	mov	r0, r6
10005458:	f7ff fcde 	bl	10004e18 <_Unwind_VRS_Pop>
1000545c:	2800      	cmp	r0, #0
1000545e:	f43f af3e 	beq.w	100052de <__gnu_unwind_execute+0xe>
10005462:	e762      	b.n	1000532a <__gnu_unwind_execute+0x5a>
10005464:	f1b8 0f00 	cmp.w	r8, #0
10005468:	d01f      	beq.n	100054aa <__gnu_unwind_execute+0x1da>
1000546a:	2000      	movs	r0, #0
1000546c:	e75e      	b.n	1000532c <__gnu_unwind_execute+0x5c>
1000546e:	4628      	mov	r0, r5
10005470:	f7ff ff02 	bl	10005278 <next_unwind_byte>
10005474:	4602      	mov	r2, r0
10005476:	2800      	cmp	r0, #0
10005478:	f43f af57 	beq.w	1000532a <__gnu_unwind_execute+0x5a>
1000547c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10005480:	d0c8      	beq.n	10005414 <__gnu_unwind_execute+0x144>
10005482:	e752      	b.n	1000532a <__gnu_unwind_execute+0x5a>
10005484:	4628      	mov	r0, r5
10005486:	f7ff fef7 	bl	10005278 <next_unwind_byte>
1000548a:	f000 030f 	and.w	r3, r0, #15
1000548e:	0302      	lsls	r2, r0, #12
10005490:	4630      	mov	r0, r6
10005492:	3301      	adds	r3, #1
10005494:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005498:	431a      	orrs	r2, r3
1000549a:	2301      	movs	r3, #1
1000549c:	4619      	mov	r1, r3
1000549e:	f7ff fcbb 	bl	10004e18 <_Unwind_VRS_Pop>
100054a2:	2800      	cmp	r0, #0
100054a4:	f43f af1b 	beq.w	100052de <__gnu_unwind_execute+0xe>
100054a8:	e73f      	b.n	1000532a <__gnu_unwind_execute+0x5a>
100054aa:	ac03      	add	r4, sp, #12
100054ac:	4643      	mov	r3, r8
100054ae:	220e      	movs	r2, #14
100054b0:	4641      	mov	r1, r8
100054b2:	4630      	mov	r0, r6
100054b4:	9400      	str	r4, [sp, #0]
100054b6:	f7ff fabb 	bl	10004a30 <_Unwind_VRS_Get>
100054ba:	4643      	mov	r3, r8
100054bc:	220f      	movs	r2, #15
100054be:	4630      	mov	r0, r6
100054c0:	4641      	mov	r1, r8
100054c2:	9400      	str	r4, [sp, #0]
100054c4:	f7ff fada 	bl	10004a7c <_Unwind_VRS_Set>
100054c8:	4640      	mov	r0, r8
100054ca:	e72f      	b.n	1000532c <__gnu_unwind_execute+0x5c>
100054cc:	4628      	mov	r0, r5
100054ce:	f7ff fed3 	bl	10005278 <next_unwind_byte>
100054d2:	f000 030f 	and.w	r3, r0, #15
100054d6:	0302      	lsls	r2, r0, #12
100054d8:	4630      	mov	r0, r6
100054da:	3301      	adds	r3, #1
100054dc:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100054e0:	431a      	orrs	r2, r3
100054e2:	2303      	movs	r3, #3
100054e4:	4619      	mov	r1, r3
100054e6:	f7ff fc97 	bl	10004e18 <_Unwind_VRS_Pop>
100054ea:	2800      	cmp	r0, #0
100054ec:	f43f aef7 	beq.w	100052de <__gnu_unwind_execute+0xe>
100054f0:	e71b      	b.n	1000532a <__gnu_unwind_execute+0x5a>
100054f2:	4628      	mov	r0, r5
100054f4:	f7ff fec0 	bl	10005278 <next_unwind_byte>
100054f8:	4602      	mov	r2, r0
100054fa:	2800      	cmp	r0, #0
100054fc:	f43f af15 	beq.w	1000532a <__gnu_unwind_execute+0x5a>
10005500:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10005504:	f47f af11 	bne.w	1000532a <__gnu_unwind_execute+0x5a>
10005508:	2104      	movs	r1, #4
1000550a:	4630      	mov	r0, r6
1000550c:	f7ff fc84 	bl	10004e18 <_Unwind_VRS_Pop>
10005510:	2800      	cmp	r0, #0
10005512:	f43f aee4 	beq.w	100052de <__gnu_unwind_execute+0xe>
10005516:	e708      	b.n	1000532a <__gnu_unwind_execute+0x5a>
10005518:	f000 020f 	and.w	r2, r0, #15
1000551c:	2303      	movs	r3, #3
1000551e:	3201      	adds	r2, #1
10005520:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
10005524:	e776      	b.n	10005414 <__gnu_unwind_execute+0x144>
10005526:	4628      	mov	r0, r5
10005528:	f7ff fea6 	bl	10005278 <next_unwind_byte>
1000552c:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10005530:	f000 030f 	and.w	r3, r0, #15
10005534:	3210      	adds	r2, #16
10005536:	3301      	adds	r3, #1
10005538:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
1000553c:	e789      	b.n	10005452 <__gnu_unwind_execute+0x182>
1000553e:	2300      	movs	r3, #0
10005540:	f10d 090c 	add.w	r9, sp, #12
10005544:	220d      	movs	r2, #13
10005546:	4630      	mov	r0, r6
10005548:	4619      	mov	r1, r3
1000554a:	f8cd 9000 	str.w	r9, [sp]
1000554e:	f7ff fa6f 	bl	10004a30 <_Unwind_VRS_Get>
10005552:	4628      	mov	r0, r5
10005554:	f7ff fe90 	bl	10005278 <next_unwind_byte>
10005558:	0602      	lsls	r2, r0, #24
1000555a:	f04f 0402 	mov.w	r4, #2
1000555e:	d50b      	bpl.n	10005578 <__gnu_unwind_execute+0x2a8>
10005560:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10005564:	9b03      	ldr	r3, [sp, #12]
10005566:	40a0      	lsls	r0, r4
10005568:	3407      	adds	r4, #7
1000556a:	4418      	add	r0, r3
1000556c:	9003      	str	r0, [sp, #12]
1000556e:	4628      	mov	r0, r5
10005570:	f7ff fe82 	bl	10005278 <next_unwind_byte>
10005574:	0603      	lsls	r3, r0, #24
10005576:	d4f3      	bmi.n	10005560 <__gnu_unwind_execute+0x290>
10005578:	9b03      	ldr	r3, [sp, #12]
1000557a:	f000 027f 	and.w	r2, r0, #127	; 0x7f
1000557e:	f8cd 9000 	str.w	r9, [sp]
10005582:	4630      	mov	r0, r6
10005584:	40a2      	lsls	r2, r4
10005586:	f503 7301 	add.w	r3, r3, #516	; 0x204
1000558a:	441a      	add	r2, r3
1000558c:	2300      	movs	r3, #0
1000558e:	9203      	str	r2, [sp, #12]
10005590:	4619      	mov	r1, r3
10005592:	220d      	movs	r2, #13
10005594:	f7ff fa72 	bl	10004a7c <_Unwind_VRS_Set>
10005598:	e6a1      	b.n	100052de <__gnu_unwind_execute+0xe>
1000559a:	bf00      	nop

1000559c <__gnu_unwind_frame>:
1000559c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
1000559e:	460b      	mov	r3, r1
100055a0:	f04f 0c03 	mov.w	ip, #3
100055a4:	4618      	mov	r0, r3
100055a6:	3208      	adds	r2, #8
100055a8:	f852 3c04 	ldr.w	r3, [r2, #-4]
100055ac:	b500      	push	{lr}
100055ae:	b085      	sub	sp, #20
100055b0:	9202      	str	r2, [sp, #8]
100055b2:	a901      	add	r1, sp, #4
100055b4:	0e1a      	lsrs	r2, r3, #24
100055b6:	f88d c00c 	strb.w	ip, [sp, #12]
100055ba:	021b      	lsls	r3, r3, #8
100055bc:	f88d 200d 	strb.w	r2, [sp, #13]
100055c0:	9301      	str	r3, [sp, #4]
100055c2:	f7ff fe85 	bl	100052d0 <__gnu_unwind_execute>
100055c6:	b005      	add	sp, #20
100055c8:	f85d fb04 	ldr.w	pc, [sp], #4

100055cc <_Unwind_GetRegionStart>:
100055cc:	b508      	push	{r3, lr}
100055ce:	f7ff fe7d 	bl	100052cc <unwind_UCB_from_context>
100055d2:	6c80      	ldr	r0, [r0, #72]	; 0x48
100055d4:	bd08      	pop	{r3, pc}
100055d6:	bf00      	nop

100055d8 <_Unwind_GetLanguageSpecificData>:
100055d8:	b508      	push	{r3, lr}
100055da:	f7ff fe77 	bl	100052cc <unwind_UCB_from_context>
100055de:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
100055e0:	79c3      	ldrb	r3, [r0, #7]
100055e2:	3302      	adds	r3, #2
100055e4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
100055e8:	bd08      	pop	{r3, pc}
100055ea:	bf00      	nop

100055ec <__aeabi_idiv0>:
100055ec:	4770      	bx	lr
100055ee:	bf00      	nop

100055f0 <abort>:
100055f0:	2006      	movs	r0, #6
100055f2:	b508      	push	{r3, lr}
100055f4:	f000 f804 	bl	10005600 <raise>
100055f8:	2001      	movs	r0, #1
100055fa:	f7fe f877 	bl	100036ec <_exit>
100055fe:	bf00      	nop

10005600 <raise>:
10005600:	b538      	push	{r3, r4, r5, lr}
10005602:	281f      	cmp	r0, #31
10005604:	4b14      	ldr	r3, [pc, #80]	; (10005658 <raise+0x58>)
10005606:	681d      	ldr	r5, [r3, #0]
10005608:	d820      	bhi.n	1000564c <raise+0x4c>
1000560a:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
1000560e:	4604      	mov	r4, r0
10005610:	b162      	cbz	r2, 1000562c <raise+0x2c>
10005612:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
10005616:	b14b      	cbz	r3, 1000562c <raise+0x2c>
10005618:	2b01      	cmp	r3, #1
1000561a:	d015      	beq.n	10005648 <raise+0x48>
1000561c:	1c59      	adds	r1, r3, #1
1000561e:	d00f      	beq.n	10005640 <raise+0x40>
10005620:	2500      	movs	r5, #0
10005622:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
10005626:	4798      	blx	r3
10005628:	4628      	mov	r0, r5
1000562a:	bd38      	pop	{r3, r4, r5, pc}
1000562c:	4628      	mov	r0, r5
1000562e:	f000 f82b 	bl	10005688 <_getpid_r>
10005632:	4622      	mov	r2, r4
10005634:	4601      	mov	r1, r0
10005636:	4628      	mov	r0, r5
10005638:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1000563c:	f000 b80e 	b.w	1000565c <_kill_r>
10005640:	2316      	movs	r3, #22
10005642:	2001      	movs	r0, #1
10005644:	602b      	str	r3, [r5, #0]
10005646:	bd38      	pop	{r3, r4, r5, pc}
10005648:	2000      	movs	r0, #0
1000564a:	bd38      	pop	{r3, r4, r5, pc}
1000564c:	2316      	movs	r3, #22
1000564e:	f04f 30ff 	mov.w	r0, #4294967295
10005652:	602b      	str	r3, [r5, #0]
10005654:	bd38      	pop	{r3, r4, r5, pc}
10005656:	bf00      	nop
10005658:	3800000c 	stmdacc	r0, {r2, r3}

1000565c <_kill_r>:
1000565c:	b570      	push	{r4, r5, r6, lr}
1000565e:	460c      	mov	r4, r1
10005660:	4603      	mov	r3, r0
10005662:	4d08      	ldr	r5, [pc, #32]	; (10005684 <_kill_r+0x28>)
10005664:	2600      	movs	r6, #0
10005666:	4620      	mov	r0, r4
10005668:	4611      	mov	r1, r2
1000566a:	461c      	mov	r4, r3
1000566c:	602e      	str	r6, [r5, #0]
1000566e:	f7fe f835 	bl	100036dc <_kill>
10005672:	1c43      	adds	r3, r0, #1
10005674:	d000      	beq.n	10005678 <_kill_r+0x1c>
10005676:	bd70      	pop	{r4, r5, r6, pc}
10005678:	682b      	ldr	r3, [r5, #0]
1000567a:	2b00      	cmp	r3, #0
1000567c:	d0fb      	beq.n	10005676 <_kill_r+0x1a>
1000567e:	6023      	str	r3, [r4, #0]
10005680:	bd70      	pop	{r4, r5, r6, pc}
10005682:	bf00      	nop
10005684:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}

10005688 <_getpid_r>:
10005688:	f7fe b826 	b.w	100036d8 <_getpid>

1000568c <_init>:
1000568c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000568e:	bf00      	nop
10005690:	bcf8      	pop	{r3, r4, r5, r6, r7}
10005692:	bc08      	pop	{r3}
10005694:	469e      	mov	lr, r3
10005696:	4770      	bx	lr

10005698 <_fini>:
10005698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000569a:	bf00      	nop
1000569c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000569e:	bc08      	pop	{r3}
100056a0:	469e      	mov	lr, r3
100056a2:	4770      	bx	lr
100056a4:	6e69616d 	powvsez	f6, f1, #5.0
100056a8:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
100056ac:	0000006b 	andeq	r0, r0, fp, rrx
100056b0:	6e69616d 	powvsez	f6, f1, #5.0
100056b4:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
100056b8:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
100056bc:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
100056c0:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
100056c4:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
100056c8:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
100056cc:	00000a0d 	andeq	r0, r0, sp, lsl #20
100056d0:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100056d4:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
100056d8:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
100056dc:	72462073 	subvc	r2, r6, #115	; 0x73
100056e0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
100056e4:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
100056e8:	00000000 	andeq	r0, r0, r0
100056ec:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
100056f0:	00000d74 	andeq	r0, r0, r4, ror sp
100056f4:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100056f8:	6f77206f 	svcvs	0x0077206f
100056fc:	20646c72 	rsbcs	r6, r4, r2, ror ip
10005700:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10005704:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10005708:	00696e66 	rsbeq	r6, r9, r6, ror #28
1000570c:	2b696e66 	blcs	11a610ac <__copy_table_end__+0x1a5b420>
10005710:	00000000 	andeq	r0, r0, r0
10005714:	006e616e 	rsbeq	r6, lr, lr, ror #2
10005718:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
1000571c:	00000000 	andeq	r0, r0, r0

10005720 <pow10.0>:
10005720:	00000000 	andeq	r0, r0, r0
10005724:	3ff00000 	svccc	0x00f00000	; IMB
10005728:	00000000 	andeq	r0, r0, r0
1000572c:	40240000 	eormi	r0, r4, r0
10005730:	00000000 	andeq	r0, r0, r0
10005734:	40590000 	subsmi	r0, r9, r0
10005738:	00000000 	andeq	r0, r0, r0
1000573c:	408f4000 	addmi	r4, pc, r0
10005740:	00000000 	andeq	r0, r0, r0
10005744:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005748:	00000000 	andeq	r0, r0, r0
1000574c:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005750:	00000000 	andeq	r0, r0, r0
10005754:	412e8480 	smlawbmi	lr, r0, r4, r8
10005758:	00000000 	andeq	r0, r0, r0
1000575c:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005760:	00000000 	andeq	r0, r0, r0
10005764:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005768:	00000000 	andeq	r0, r0, r0
1000576c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005770:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
10005774:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
10005778:	3a4e5255 	bcc	1139a0d4 <__copy_table_end__+0x1394448>
1000577c:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
10005780:	20583830 	subscs	r3, r8, r0, lsr r8
10005784:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005788:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
1000578c:	61745320 	cmnvs	r4, r0, lsr #6
10005790:	5b3a6b63 	blpl	10ea0524 <__copy_table_end__+0xe9a898>
10005794:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005798:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
1000579c:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100057a0:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100057a4:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100057a8:	000a0d64 	andeq	r0, sl, r4, ror #26
100057ac:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100057b0:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
100057b4:	5b3a2074 	blpl	10e8d98c <__copy_table_end__+0xe87d00>
100057b8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100057bc:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100057c0:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100057c4:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100057c8:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100057cc:	000a0d64 	andeq	r0, sl, r4, ror #26
100057d0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100057d4:	61745320 	cmnvs	r4, r0, lsr #6
100057d8:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
100057dc:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
100057e0:	6f442068 	svcvs	0x00442068
100057e4:	61776e77 	cmnvs	r7, r7, ror lr
100057e8:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
100057ec:	000a0d64 	andeq	r0, sl, r4, ror #26
100057f0:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
100057f4:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
100057f8:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
100057fc:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10005800:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
10005804:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10005808:	20706d75 	rsbscs	r6, r0, r5, ror sp
1000580c:	0000000d 	andeq	r0, r0, sp
10005810:	61745320 	cmnvs	r4, r0, lsr #6
10005814:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10005818:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
1000581c:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10005820:	00000000 	andeq	r0, r0, r0
10005824:	20305220 	eorscs	r5, r0, r0, lsr #4
10005828:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000582c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005830:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005834:	0000000a 	andeq	r0, r0, sl
10005838:	20315220 	eorscs	r5, r1, r0, lsr #4
1000583c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005840:	30257830 	eorcc	r7, r5, r0, lsr r8
10005844:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005848:	0000000a 	andeq	r0, r0, sl
1000584c:	20325220 	eorscs	r5, r2, r0, lsr #4
10005850:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005854:	30257830 	eorcc	r7, r5, r0, lsr r8
10005858:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000585c:	0000000a 	andeq	r0, r0, sl
10005860:	20335220 	eorscs	r5, r3, r0, lsr #4
10005864:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005868:	30257830 	eorcc	r7, r5, r0, lsr r8
1000586c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005870:	0000000a 	andeq	r0, r0, sl
10005874:	20345220 	eorscs	r5, r4, r0, lsr #4
10005878:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000587c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005880:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005884:	0000000a 	andeq	r0, r0, sl
10005888:	20355220 	eorscs	r5, r5, r0, lsr #4
1000588c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005890:	30257830 	eorcc	r7, r5, r0, lsr r8
10005894:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005898:	0000000a 	andeq	r0, r0, sl
1000589c:	20365220 	eorscs	r5, r6, r0, lsr #4
100058a0:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058a4:	30257830 	eorcc	r7, r5, r0, lsr r8
100058a8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058ac:	0000000a 	andeq	r0, r0, sl
100058b0:	20375220 	eorscs	r5, r7, r0, lsr #4
100058b4:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058b8:	30257830 	eorcc	r7, r5, r0, lsr r8
100058bc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058c0:	0000000a 	andeq	r0, r0, sl
100058c4:	20385220 	eorscs	r5, r8, r0, lsr #4
100058c8:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058cc:	30257830 	eorcc	r7, r5, r0, lsr r8
100058d0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058d4:	0000000a 	andeq	r0, r0, sl
100058d8:	20395220 	eorscs	r5, r9, r0, lsr #4
100058dc:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058e0:	30257830 	eorcc	r7, r5, r0, lsr r8
100058e4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058e8:	0000000a 	andeq	r0, r0, sl
100058ec:	30315220 	eorscc	r5, r1, r0, lsr #4
100058f0:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058f4:	30257830 	eorcc	r7, r5, r0, lsr r8
100058f8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058fc:	0000000a 	andeq	r0, r0, sl
10005900:	31315220 	teqcc	r1, r0, lsr #4
10005904:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005908:	30257830 	eorcc	r7, r5, r0, lsr r8
1000590c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005910:	0000000a 	andeq	r0, r0, sl
10005914:	32315220 	eorscc	r5, r1, #32, 4
10005918:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000591c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005920:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005924:	0000000a 	andeq	r0, r0, sl
10005928:	20524c20 	subscs	r4, r2, r0, lsr #24
1000592c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005930:	30257830 	eorcc	r7, r5, r0, lsr r8
10005934:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005938:	0000000a 	andeq	r0, r0, sl
1000593c:	20435020 	subcs	r5, r3, r0, lsr #32
10005940:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005944:	30257830 	eorcc	r7, r5, r0, lsr r8
10005948:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000594c:	0000000a 	andeq	r0, r0, sl
10005950:	52535020 	subspl	r5, r3, #32
10005954:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005958:	30257830 	eorcc	r7, r5, r0, lsr r8
1000595c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005960:	0000000a 	andeq	r0, r0, sl
10005964:	61745320 	cmnvs	r4, r0, lsr #6
10005968:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
1000596c:	3a6c6c61 	bcc	11b20af8 <__copy_table_end__+0x1b1ae6c>
10005970:	00000020 	andeq	r0, r0, r0, lsr #32
10005974:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005978:	00000020 	andeq	r0, r0, r0, lsr #32
1000597c:	00000d20 	andeq	r0, r0, r0, lsr #26
10005980:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005984:	78452030 	stmdavc	r5, {r4, r5, sp}^
10005988:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
1000598c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005990:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005994:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005998:	3a657461 	bcc	11962b24 <__copy_table_end__+0x195ce98>
1000599c:	00000020 	andeq	r0, r0, r0, lsr #32
100059a0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100059a4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
100059a8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
100059ac:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
100059b0:	20657461 	rsbcs	r7, r5, r1, ror #8
100059b4:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
100059b8:	00000d2e 	andeq	r0, r0, lr, lsr #26
100059bc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100059c0:	746f4e20 	strbtvc	r4, [pc], #-3616	; 100059c8 <pow10.0+0x2a8>
100059c4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
100059c8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
100059cc:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
100059d0:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
100059d4:	00000d2e 	andeq	r0, r0, lr, lsr #26
100059d8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
100059dc:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
100059e0:	206b6361 	rsbcs	r6, fp, r1, ror #6
100059e4:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
100059e8:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
100059ec:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
100059f0:	2020203a 	eorcs	r2, r0, sl, lsr r0
100059f4:	00000020 	andeq	r0, r0, r0, lsr #32
100059f8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100059fc:	50535020 	subspl	r5, r3, r0, lsr #32
10005a00:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a04:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a08:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a0c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a10:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a14:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a18:	50534d20 	subspl	r4, r3, r0, lsr #26
10005a1c:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a20:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a24:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a28:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a2c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a30:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005a34:	72502033 	subsvc	r2, r0, #51	; 0x33
10005a38:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
10005a3c:	2065646f 	rsbcs	r6, r5, pc, ror #8
10005a40:	6f666542 	svcvs	0x00666542
10005a44:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10005a48:	203a5152 	eorscs	r5, sl, r2, asr r1
10005a4c:	00000020 	andeq	r0, r0, r0, lsr #32
10005a50:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a54:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005a58:	20646165 	rsbcs	r6, r4, r5, ror #2
10005a5c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10005a60:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a64:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a68:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a6c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a70:	6f725020 	svcvs	0x00725020
10005a74:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10005a78:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10005a80 <pow10.0+0x360>
10005a7c:	20202065 	eorcs	r2, r0, r5, rrx
10005a80:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a84:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a88:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005a8c:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10005a90:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005a94:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10005a98:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
10005a9c:	203a6570 	eorscs	r6, sl, r0, ror r5
10005aa0:	20202020 	eorcs	r2, r0, r0, lsr #32
10005aa4:	00000020 	andeq	r0, r0, r0, lsr #32
10005aa8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005aac:	61745320 	cmnvs	r4, r0, lsr #6
10005ab0:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10005ab4:	72462064 	subvc	r2, r6, #100	; 0x64
10005ab8:	20656d61 	rsbcs	r6, r5, r1, ror #26
10005abc:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005ac0:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ac4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ac8:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
10005acc:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
10005ad0:	72462064 	subvc	r2, r6, #100	; 0x64
10005ad4:	20656d61 	rsbcs	r6, r5, r1, ror #26
10005ad8:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005adc:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ae0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005ae4:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
10005ae8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
10005aec:	61432074 	hvcvs	12804	; 0x3204
10005af0:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
10005af4:	3a656c75 	bcc	11960cd0 <__copy_table_end__+0x195b044>
10005af8:	20202020 	eorcs	r2, r0, r0, lsr #32
10005afc:	00000020 	andeq	r0, r0, r0, lsr #32
10005b00:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b04:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005b08:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005b0c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005b10:	20202065 	eorcs	r2, r0, r5, rrx
10005b14:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005b18:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b1c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b20:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005b28 <pow10.0+0x408>
10005b24:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005b28:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005b2c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005b30:	5d202065 	stcpl	0, cr2, [r0, #-404]!	; 0xfffffe6c
10005b34:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b38:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005b3c:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10005b40:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10005b44:	53207974 			; <UNDEFINED> instruction: 0x53207974
10005b48:	6b636174 	blvs	118de120 <__copy_table_end__+0x18d8494>
10005b4c:	2020203a 	eorcs	r2, r0, sl, lsr r0
10005b50:	20202020 	eorcs	r2, r0, r0, lsr #32
10005b54:	00000020 	andeq	r0, r0, r0, lsr #32
10005b58:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b5c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005b60:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005b64:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005b68:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005b6c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005b70:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b74:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b78:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005b80 <pow10.0+0x460>
10005b7c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005b80:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005b84:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005b88:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
10005b8c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b90:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
10005b94:	00000000 	andeq	r0, r0, r0
10005b98:	20726d54 	rsbscs	r6, r2, r4, asr sp
10005b9c:	00637653 	rsbeq	r7, r3, r3, asr r6

10005ba0 <_global_impure_ptr>:
10005ba0:	38000010 	stmdacc	r0, {r4}

10005ba4 <__EH_FRAME_BEGIN__>:
10005ba4:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10005ba8 <__exidx_start-0x18>:
10005ba8:	8101b108 	tsthi	r1, r8, lsl #2
10005bac:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005bb0:	00000000 	andeq	r0, r0, r0
10005bb4:	8101b108 	tsthi	r1, r8, lsl #2
10005bb8:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005bbc:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10005bc0 <__exidx_end-0xc0>:
10005bc0:	7fffdb38 	svcvc	0x00ffdb38
10005bc4:	80b0b0b0 	ldrhthi	fp, [r0], r0
10005bc8:	7fffdba0 	svcvc	0x00ffdba0
10005bcc:	00000001 	andeq	r0, r0, r1
10005bd0:	7fffeb54 	svcvc	0x00ffeb54
10005bd4:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10005bd8:	7fffebe8 	svcvc	0x00ffebe8
10005bdc:	80a8b0b0 	strhthi	fp, [r8], r0
10005be0:	7fffec38 	svcvc	0x00ffec38
10005be4:	00000001 	andeq	r0, r0, r1
10005be8:	7fffec44 	svcvc	0x00ffec44
10005bec:	80aab0b0 	strhthi	fp, [sl], r0
10005bf0:	7fffec7c 	svcvc	0x00ffec7c
10005bf4:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10005bf8:	7fffed50 	svcvc	0x00ffed50
10005bfc:	00000001 	andeq	r0, r0, r1
10005c00:	7fffed4c 	svcvc	0x00ffed4c
10005c04:	80383fab 	eorshi	r3, r8, fp, lsr #31
10005c08:	7fffedac 	svcvc	0x00ffedac
10005c0c:	00000001 	andeq	r0, r0, r1
10005c10:	7fffedb8 	svcvc	0x00ffedb8
10005c14:	80aab0b0 	strhthi	fp, [sl], r0
10005c18:	7fffedf4 	svcvc	0x00ffedf4
10005c1c:	00000001 	andeq	r0, r0, r1
10005c20:	7fffeea8 	svcvc	0x00ffeea8
10005c24:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10005c28:	7fffef1c 	svcvc	0x00ffef1c
10005c2c:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
10005c30:	7ffff1dc 	svcvc	0x00fff1dc
10005c34:	00000001 	andeq	r0, r0, r1
10005c38:	7ffff1e0 	svcvc	0x00fff1e0
10005c3c:	80023fad 	andhi	r3, r2, sp, lsr #31
10005c40:	7ffff48c 	svcvc	0x00fff48c
10005c44:	00000001 	andeq	r0, r0, r1
10005c48:	7ffff66c 	svcvc	0x00fff66c
10005c4c:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10005c50:	7ffff67c 	svcvc	0x00fff67c
10005c54:	00000001 	andeq	r0, r0, r1
10005c58:	7ffff678 	svcvc	0x00fff678
10005c5c:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10005c60:	7ffff93c 	svcvc	0x00fff93c
10005c64:	80048400 	andhi	r8, r4, r0, lsl #8
10005c68:	7ffff964 	svcvc	0x00fff964
10005c6c:	7fffff3c 	svcvc	0x00ffff3c
10005c70:	7ffff968 	svcvc	0x00fff968
10005c74:	7fffff40 	svcvc	0x00ffff40
10005c78:	7ffff974 	svcvc	0x00fff974
10005c7c:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10005c80 <__copy_table_start__>:
10005c80:	10005c8c 	andne	r5, r0, ip, lsl #25
10005c84:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10005c88:	00000112 	andeq	r0, r0, r2, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
38000004:	00000004 	andeq	r0, r0, r4

38000008 <ulCriticalNesting>:
PRIVILEGED_DATA static volatile uint32_t ulCriticalNesting = 0xaaaaaaaaUL;
38000008:	aaaaaaaa 	bge	36aaaab8 <__copy_table_end__+0x26aa4e2c>

3800000c <_impure_ptr>:
3800000c:	38000010 	stmdacc	r0, {r4}

38000010 <impure_data>:
38000010:	00000000 	andeq	r0, r0, r0
38000014:	380002fc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r9}
38000018:	38000364 	stmdacc	r0, {r2, r5, r6, r8, r9}
3800001c:	380003cc 	stmdacc	r0, {r2, r3, r6, r7, r8, r9}
	...
380000b8:	00000001 	andeq	r0, r0, r1
380000bc:	00000000 	andeq	r0, r0, r0
380000c0:	abcd330e 	blge	3734cd00 <__copy_table_end__+0x27347074>
380000c4:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000c8:	0005deec 	andeq	sp, r5, ip, ror #29
380000cc:	0000000b 	andeq	r0, r0, fp
	...

38000438 <__atexit_recursive_mutex>:
38000438:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}

3800043c <__init_array_start>:
3800043c:	1000394d 	andne	r3, r0, sp, asr #18

38000440 <__frame_dummy_init_array_entry>:
38000440:	100007e5 	andne	r0, r0, r5, ror #15

38000444 <__do_global_dtors_aux_fini_array_entry>:
38000444:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000448 <__bss_start__>:
38000448:	00000000 	andeq	r0, r0, r0

3800044c <object.0>:
	...

38000464 <main_task.0>:
38000464:	00000000 	andeq	r0, r0, r0

38000468 <ucHeap>:
	...

38008468 <buffer.0>:
	...

38008568 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38008568:	00000000 	andeq	r0, r0, r0

3800856c <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
3800856c:	00000000 	andeq	r0, r0, r0

38008570 <frame.1>:
	...

380085b0 <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
380085b0:	00000000 	andeq	r0, r0, r0

380085b4 <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
380085b4:	00000000 	andeq	r0, r0, r0

380085b8 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
380085b8:	00000000 	andeq	r0, r0, r0

380085bc <pxReadyTasksLists>:
	...

38008648 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
38008648:	00000000 	andeq	r0, r0, r0

3800864c <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
3800864c:	00000000 	andeq	r0, r0, r0

38008650 <uxIdleTaskStack.2>:
	...

38008850 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
38008850:	00000000 	andeq	r0, r0, r0

38008854 <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
38008854:	00000000 	andeq	r0, r0, r0

38008858 <uxTimerTaskStack.0>:
	...

38008a58 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
38008a58:	00000000 	andeq	r0, r0, r0

38008a5c <xDelayedTaskList1>:
	...

38008a78 <xDelayedTaskList2>:
	...

38008a94 <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
38008a94:	00000000 	andeq	r0, r0, r0

38008a98 <xIdleTaskTCB.3>:
	...

38008ae4 <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
38008ae4:	00000000 	andeq	r0, r0, r0

38008ae8 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
38008ae8:	00000000 	andeq	r0, r0, r0

38008aec <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
38008aec:	00000000 	andeq	r0, r0, r0

38008af0 <xPendingReadyList>:
	...

38008b0c <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
38008b0c:	00000000 	andeq	r0, r0, r0

38008b10 <xSuspendedTaskList>:
	...

38008b2c <xTasksWaitingTermination>:
	...

38008b48 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
38008b48:	00000000 	andeq	r0, r0, r0

38008b4c <xTimerTaskTCB.1>:
	...

38008b98 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
38008b98:	00000000 	andeq	r0, r0, r0

38008b9c <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
38008b9c:	00000000 	andeq	r0, r0, r0

38008ba0 <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
38008ba0:	00000000 	andeq	r0, r0, r0

38008ba4 <ucStaticTimerQueueStorage.1>:
	...

38008c44 <xActiveTimerList1>:
	...

38008c60 <xActiveTimerList2>:
	...

38008c7c <xLastTime.2>:
38008c7c:	00000000 	andeq	r0, r0, r0

38008c80 <xStaticTimerQueue.0>:
	...

38008cdc <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
38008cdc:	00000000 	andeq	r0, r0, r0

38008ce0 <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
38008ce0:	00000000 	andeq	r0, r0, r0

38008ce4 <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
38008ce4:	00000000 	andeq	r0, r0, r0

38008ce8 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
38008ce8:	00000000 	andeq	r0, r0, r0

38008cec <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
38008cec:	00000000 	andeq	r0, r0, r0

38008cf0 <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
38008cf0:	00000000 	andeq	r0, r0, r0

38008cf4 <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
38008cf4:	00000000 	andeq	r0, r0, r0

38008cf8 <xStart>:
	...

38008d00 <ulStoppedTimerCompensation>:
    PRIVILEGED_DATA static uint32_t ulStoppedTimerCompensation = 0;
38008d00:	00000000 	andeq	r0, r0, r0

38008d04 <ulTimerCountsForOneTick>:
    PRIVILEGED_DATA static uint32_t ulTimerCountsForOneTick = 0;
38008d04:	00000000 	andeq	r0, r0, r0

38008d08 <xMaximumPossibleSuppressedTicks>:
    PRIVILEGED_DATA static uint32_t xMaximumPossibleSuppressedTicks = 0;
38008d08:	00000000 	andeq	r0, r0, r0

38008d0c <__lock___atexit_recursive_mutex>:
38008d0c:	00000000 	andeq	r0, r0, r0

38008d10 <errno>:
38008d10:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38008d14 <__end__-0x4>:
38008d14:	00000000 	andeq	r0, r0, r0

38008d18 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   0:	00003541 	andeq	r3, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
     * exception or zero for Thread mode.*/
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );

    if( ulCurrentInterrupt == 0 )
    {
        xReturn = pdFALSE;
   8:	01006962 	tsteq	r0, r2, ror #18
    {
        xReturn = pdTRUE;
    }

    return xReturn;
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
        xReturn = pdFALSE;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
}
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
        BaseType_t xReturn = pdFAIL;
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000bb5 			; <UNDEFINED> instruction: 0x00000bb5
       4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000189 	andeq	r0, r0, r9, lsl #3
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00014e0c 	andeq	r4, r1, ip, lsl #28
}
      14:	00038500 	andeq	r8, r3, r0, lsl #10
        if(ch == '\n' || it >= size) {
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000273 	andeq	r0, r0, r3, ror r2
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00017f03 	andeq	r7, r1, r3, lsl #30
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	71080102 	tstvc	r8, r2, lsl #2
      40:	02000002 	andeq	r0, r0, #2
        BaseType_t xReturn = pdFAIL;
      44:	00320502 	eorseq	r0, r2, r2, lsl #10
    }
      48:	02020000 	andeq	r0, r2, #0
        for (int i = 0; i < count; i++) {
      4c:	00031a07 	andeq	r1, r3, r7, lsl #20
        printf("] \r\n");
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
}
      54:	0000012c 	andeq	r0, r0, ip, lsr #2
      58:	00006f03 	andeq	r6, r0, r3, lsl #30
      5c:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      60:	00000064 	andeq	r0, r0, r4, rrx
      64:	c2070402 	andgt	r0, r7, #33554432	; 0x2000000
                    xMaxSize = pxBlock->xBlockSize;
                }

                if( pxBlock->xBlockSize < xMinSize )
                {
                    xMinSize = pxBlock->xBlockSize;
      68:	02000002 	andeq	r0, r0, #2
      6c:	01270508 			; <UNDEFINED> instruction: 0x01270508
      70:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      74:	0002bd07 	andeq	fp, r2, r7, lsl #26
      78:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
            prvUnlockQueue( pxQueue );
      80:	00007905 	andeq	r7, r0, r5, lsl #18
            ( void ) xTaskResumeAll();
      84:	07040200 	streq	r0, [r4, -r0, lsl #4]
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	000002c7 	andeq	r0, r0, r7, asr #5
      8c:	00018103 	andeq	r8, r1, r3, lsl #2
      90:	13180300 	tstne	r8, #0, 6
        taskENTER_CRITICAL();
      94:	00000030 	andeq	r0, r0, r0, lsr r0
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00008c05 	andeq	r8, r0, r5, lsl #24
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00710300 	rsbseq	r0, r1, r0, lsl #6
      a0:	30030000 	andcc	r0, r3, r0
                else if( xEntryTimeSet == pdFALSE )
      a4:	00005814 	andeq	r5, r0, r4, lsl r8
        taskEXIT_CRITICAL();
      a8:	009d0500 	addseq	r0, sp, r0, lsl #10
        vTaskSuspendAll();
      ac:	a9060000 	stmdbge	r6, {}	; <UNPREDICTABLE>
        prvLockQueue( pxQueue );
      b0:	02000000 	andeq	r0, r0, #0
      b4:	00630408 	rsbeq	r0, r3, r8, lsl #8
      b8:	04070000 	streq	r0, [r7], #-0
      bc:	7a080102 	bvc	2004cc <__RAM_SIZE+0x1004cc>
      c0:	06000002 	streq	r0, [r0], -r2
      c4:	000000bc 	strheq	r0, [r0], -ip
      c8:	04027c08 	streq	r7, [r2], #-3080	; 0xfffff3f8
      cc:	cd0901f8 	stfgts	f0, [r9, #-992]	; 0xfffffc20
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	09000003 	stmdbeq	r0, {r0, r1}
      d4:	00000092 	muleq	r0, r2, r0
      d8:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	000000ae 	andeq	r0, r0, lr, lsr #1
      e0:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00000442 	andeq	r0, r0, r2, asr #8
      e8:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	000000a9 	andeq	r0, r0, r9, lsr #1
      f0:	09042302 	stmdbeq	r4, {r1, r8, r9, sp}
                prvUnlockQueue( pxQueue );
      f4:	0000034c 	andeq	r0, r0, ip, asr #6
      f8:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
                if( xTaskResumeAll() == pdFALSE )
      fc:	000000a9 	andeq	r0, r0, r9, lsr #1
     100:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
                    taskYIELD_WITHIN_API();
     104:	0000044d 	andeq	r0, r0, sp, asr #8
                    if( xInheritanceOccurred != pdFALSE )
     108:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
                return errQUEUE_EMPTY;
     10c:	000000a9 	andeq	r0, r0, r9, lsr #1
                        taskENTER_CRITICAL();
     110:	0a0c2302 	beq	308d20 <__RAM_SIZE+0x208d20>
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00524353 	subseq	r4, r2, r3, asr r3
     118:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	000000a9 	andeq	r0, r0, r9, lsr #1
                        taskEXIT_CRITICAL();
     120:	0a102302 	beq	408d30 <__RAM_SIZE+0x308d30>
     124:	00524343 	subseq	r4, r2, r3, asr #6
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     128:	1201ff04 	andne	pc, r1, #4, 30
     12c:	000000a9 	andeq	r0, r0, r9, lsr #1
     130:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     134:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
     138:	12020004 	andne	r0, r2, #4
     13c:	000003dd 	ldrdeq	r0, [r0], -sp
     140:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     144:	00000304 	andeq	r0, r0, r4, lsl #6
     148:	12020104 	andne	r0, r2, #4, 2
     14c:	000000a9 	andeq	r0, r0, r9, lsr #1
     150:	09242302 	stmdbeq	r4!, {r1, r8, r9, sp}
     154:	0000025c 	andeq	r0, r0, ip, asr r2
     158:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
     15c:	000000a9 	andeq	r0, r0, r9, lsr #1
     160:	09282302 	stmdbeq	r8!, {r1, r8, r9, sp}
     164:	0000036c 	andeq	r0, r0, ip, ror #6
     168:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
     16c:	000000a9 	andeq	r0, r0, r9, lsr #1
     170:	092c2302 	stmdbeq	ip!, {r1, r8, r9, sp}
     174:	00000351 	andeq	r0, r0, r1, asr r3
     178:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
     17c:	000000a9 	andeq	r0, r0, r9, lsr #1
     180:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     184:	0000002c 	andeq	r0, r0, ip, lsr #32
     188:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
     18c:	000000a9 	andeq	r0, r0, r9, lsr #1
     190:	09342302 	ldmdbeq	r4!, {r1, r8, r9, sp}
     194:	00000135 	andeq	r0, r0, r5, lsr r1
     198:	12020604 	andne	r0, r2, #4, 12	; 0x400000
     19c:	000000a9 	andeq	r0, r0, r9, lsr #1
     1a0:	09382302 	ldmdbeq	r8!, {r1, r8, r9, sp}
     1a4:	0000042f 	andeq	r0, r0, pc, lsr #8
     1a8:	12020704 	andne	r0, r2, #4, 14	; 0x100000
     1ac:	000000a9 	andeq	r0, r0, r9, lsr #1
     1b0:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1b4:	0000004c 	andeq	r0, r0, ip, asr #32
     1b8:	12020804 	andne	r0, r2, #4, 16	; 0x40000
     1bc:	000003f7 	strdeq	r0, [r0], -r7
     1c0:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1c4:	0000043b 	andeq	r0, r0, fp, lsr r4
     1c8:	12020904 	andne	r0, r2, #4, 18	; 0x10000
     1cc:	000000ae 	andeq	r0, r0, lr, lsr #1
     1d0:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
     1d4:	000000e0 	andeq	r0, r0, r0, ror #1
     1d8:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
     1dc:	000000ae 	andeq	r0, r0, lr, lsr #1
     1e0:	094c2302 	stmdbeq	ip, {r1, r8, r9, sp}^
     1e4:	00000163 	andeq	r0, r0, r3, ror #2
     1e8:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
     1ec:	00000411 	andeq	r0, r0, r1, lsl r4
     1f0:	09502302 	ldmdbeq	r0, {r1, r8, r9, sp}^
     1f4:	00000297 	muleq	r0, r7, r2
     1f8:	12020c04 	andne	r0, r2, #4, 24	; 0x400
     1fc:	0000042b 	andeq	r0, r0, fp, lsr #8
     200:	09602302 	stmdbeq	r0!, {r1, r8, r9, sp}^
     204:	000003f7 	strdeq	r0, [r0], -r7
     208:	12020d04 	andne	r0, r2, #4, 26	; 0x100
     20c:	000000ae 	andeq	r0, r0, lr, lsr #1
     210:	0a782302 	beq	1e08e20 <__RAM_SIZE+0x1d08e20>
     214:	00525443 	subseq	r5, r2, r3, asr #8
     218:	12020e04 	andne	r0, r2, #4, 28	; 0x40
     21c:	000000ae 	andeq	r0, r0, lr, lsr #1
     220:	097c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}^
     224:	0000032d 	andeq	r0, r0, sp, lsr #6
     228:	12020f04 	andne	r0, r2, #4, 30
     22c:	000000ae 	andeq	r0, r0, lr, lsr #1
     230:	01802303 	orreq	r2, r0, r3, lsl #6
     234:	00031309 	andeq	r1, r3, r9, lsl #6
     238:	02100400 	andseq	r0, r0, #0, 8
     23c:	0000a912 	andeq	sl, r0, r2, lsl r9
     240:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     244:	04470901 	strbeq	r0, [r7], #-2305	; 0xfffff6ff
     248:	11040000 	mrsne	r0, (UNDEF: 4)
     24c:	00a91202 	adceq	r1, r9, r2, lsl #4
     250:	23030000 	movwcs	r0, #12288	; 0x3000
     254:	53090188 	movwpl	r0, #37256	; 0x9188
     258:	04000004 	streq	r0, [r0], #-4
     25c:	a9120212 	ldmdbge	r2, {r1, r4, r9}
     260:	03000000 	movweq	r0, #0
     264:	09018c23 	stmdbeq	r1, {r0, r1, r5, sl, fp, pc}
     268:	000003ed 	andeq	r0, r0, sp, ror #7
     26c:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
     270:	00000430 	andeq	r0, r0, r0, lsr r4
     274:	01902303 	orrseq	r2, r0, r3, lsl #6
     278:	0002f709 	andeq	pc, r2, r9, lsl #14
     27c:	02140400 	andseq	r0, r4, #0, 8
     280:	0000a912 	andeq	sl, r0, r2, lsl r9
     284:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     288:	03ca0901 	biceq	r0, sl, #16384	; 0x4000
     28c:	15040000 	strne	r0, [r4, #-0]
     290:	00a91202 	adceq	r1, r9, r2, lsl #4
     294:	23030000 	movwcs	r0, #12288	; 0x3000
     298:	710901e8 	smlattvc	r9, r8, r1, r0
     29c:	04000003 	streq	r0, [r0], #-3
     2a0:	40120216 	andsmi	r0, r2, r6, lsl r2
     2a4:	03000004 	movweq	r0, #4
     2a8:	0901ec23 	stmdbeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
     2ac:	000000db 	ldrdeq	r0, [r0], -fp
     2b0:	12021704 	andne	r1, r2, #4, 14	; 0x100000
     2b4:	000000a9 	andeq	r0, r0, r9, lsr #1
     2b8:	04802303 	streq	r2, [r0], #771	; 0x303
     2bc:	00037b09 	andeq	r7, r3, r9, lsl #22
     2c0:	02180400 	andseq	r0, r8, #0, 8
     2c4:	00045012 	andeq	r5, r4, r2, lsl r0
     2c8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     2cc:	00980904 	addseq	r0, r8, r4, lsl #18
     2d0:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     2d4:	00ae1202 	adceq	r1, lr, r2, lsl #4
     2d8:	23030000 	movwcs	r0, #12288	; 0x3000
     2dc:	3c0904c0 	cfstrscc	mvf0, [r9], {192}	; 0xc0
     2e0:	04000000 	streq	r0, [r0], #-0
     2e4:	ae12021a 	mrcge	2, 0, r0, cr2, cr10, {0}
     2e8:	03000000 	movweq	r0, #0
     2ec:	0904c423 	stmdbeq	r4, {r0, r1, r5, sl, lr, pc}
     2f0:	00000121 	andeq	r0, r0, r1, lsr #2
     2f4:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
     2f8:	000000ae 	andeq	r0, r0, lr, lsr #1
     2fc:	04c82303 	strbeq	r2, [r8], #771	; 0x303
     300:	0000b509 	andeq	fp, r0, r9, lsl #10
     304:	021c0400 	andseq	r0, ip, #0, 8
     308:	00046012 	andeq	r6, r4, r2, lsl r0
     30c:	cc230300 	stcgt	3, cr0, [r3], #-0
     310:	02610904 	rsbeq	r0, r1, #4, 18	; 0x10000
     314:	1d040000 	stcne	0, cr0, [r4, #-0]
     318:	00a91202 	adceq	r1, r9, r2, lsl #4
     31c:	23030000 	movwcs	r0, #12288	; 0x3000
     320:	bf0904d0 	svclt	0x000904d0
     324:	04000000 	streq	r0, [r0], #-0
     328:	6012021e 	andsvs	r0, r2, lr, lsl r2
     32c:	03000004 	movweq	r0, #4
     330:	0904d423 	stmdbeq	r4, {r0, r1, r5, sl, ip, lr, pc}
     334:	0000027f 	andeq	r0, r0, pc, ror r2
     338:	12021f04 	andne	r1, r2, #4, 30
     33c:	000000a9 	andeq	r0, r0, r9, lsr #1
     340:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
     344:	00026909 	andeq	r6, r2, r9, lsl #18
     348:	02200400 	eoreq	r0, r0, #0, 8
     34c:	0000a912 	andeq	sl, r0, r2, lsl r9
     350:	dc230300 	stcle	3, cr0, [r3], #-0
     354:	01010904 	tsteq	r1, r4, lsl #18
     358:	21040000 	mrscs	r0, (UNDEF: 4)
     35c:	00a91202 	adceq	r1, r9, r2, lsl #4
     360:	23030000 	movwcs	r0, #12288	; 0x3000
     364:	340904e0 	strcc	r0, [r9], #-1248	; 0xfffffb20
     368:	04000003 	streq	r0, [r0], #-3
     36c:	a9120222 	ldmdbge	r2, {r1, r5, r9}
     370:	03000000 	movweq	r0, #0
     374:	0904e423 	stmdbeq	r4, {r0, r1, r5, sl, sp, lr, pc}
     378:	000002fc 	strdeq	r0, [r0], -ip
     37c:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
     380:	000000a9 	andeq	r0, r0, r9, lsr #1
     384:	04e82303 	strbteq	r2, [r8], #771	; 0x303
     388:	00000009 	andeq	r0, r0, r9
     38c:	02240400 	eoreq	r0, r4, #0, 8
     390:	0000a912 	andeq	sl, r0, r2, lsl r9
     394:	ec230300 	stc	3, cr0, [r3], #-0
     398:	007a0904 	rsbseq	r0, sl, r4, lsl #18
     39c:	25040000 	strcs	r0, [r4, #-0]
     3a0:	00a91202 	adceq	r1, r9, r2, lsl #4
     3a4:	23030000 	movwcs	r0, #12288	; 0x3000
     3a8:	e60904f0 			; <UNDEFINED> instruction: 0xe60904f0
     3ac:	04000003 	streq	r0, [r0], #-3
     3b0:	a9120226 	ldmdbge	r2, {r1, r2, r5, r9}
     3b4:	03000000 	movweq	r0, #0
     3b8:	0904f423 	stmdbeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
     3bc:	00000434 	andeq	r0, r0, r4, lsr r4
     3c0:	12022704 	andne	r2, r2, #4, 14	; 0x100000
     3c4:	000000a9 	andeq	r0, r0, r9, lsr #1
     3c8:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
     3cc:	00980b00 	addseq	r0, r8, r0, lsl #22
     3d0:	03dd0000 	bicseq	r0, sp, #0
     3d4:	850c0000 	strhi	r0, [ip, #-0]
     3d8:	0b000000 	bleq	3e0 <__STACKSEAL_SIZE+0x3e0>
     3dc:	03cd0500 	biceq	r0, sp, #0, 10
     3e0:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     3e4:	f2000000 	vhadd.s8	d0, d0, d0
     3e8:	0c000003 	stceq	0, cr0, [r0], {3}
     3ec:	00000085 	andeq	r0, r0, r5, lsl #1
     3f0:	e2060001 	and	r0, r6, #1
     3f4:	05000003 	streq	r0, [r0, #-3]
     3f8:	000003f2 	strdeq	r0, [r0], -r2
     3fc:	0000ae0b 	andeq	sl, r0, fp, lsl #28
     400:	00040c00 	andeq	r0, r4, r0, lsl #24
     404:	00850c00 	addeq	r0, r5, r0, lsl #24
     408:	00030000 	andeq	r0, r3, r0
     40c:	0003fc06 	andeq	pc, r3, r6, lsl #24
     410:	040c0500 	streq	r0, [ip], #-1280	; 0xfffffb00
     414:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     418:	26000000 	strcs	r0, [r0], -r0
     41c:	0c000004 	stceq	0, cr0, [r0], {4}
     420:	00000085 	andeq	r0, r0, r5, lsl #1
     424:	16060005 	strne	r0, [r6], -r5
     428:	05000004 	streq	r0, [r0, #-4]
     42c:	00000426 	andeq	r0, r0, r6, lsr #8
     430:	00009d0b 	andeq	r9, r0, fp, lsl #26
     434:	00044000 	andeq	r4, r4, r0
     438:	00850c00 	addeq	r0, r5, r0, lsl #24
     43c:	00140000 	andseq	r0, r4, r0
     440:	00009d0b 	andeq	r9, r0, fp, lsl #26
     444:	00045000 	andeq	r5, r4, r0
     448:	00850c00 	addeq	r0, r5, r0, lsl #24
     44c:	00440000 	subeq	r0, r4, r0
     450:	00009d0b 	andeq	r9, r0, fp, lsl #26
     454:	00046000 	andeq	r6, r4, r0
     458:	00850c00 	addeq	r0, r5, r0, lsl #24
     45c:	000e0000 	andeq	r0, lr, r0
     460:	00009d0b 	andeq	r9, r0, fp, lsl #26
     464:	00047000 	andeq	r7, r4, r0
     468:	00850c00 	addeq	r0, r5, r0, lsl #24
     46c:	00000000 	andeq	r0, r0, r0
     470:	0002af0d 	andeq	sl, r2, sp, lsl #30
     474:	02280400 	eoreq	r0, r8, #0, 8
     478:	0000c803 	andeq	ip, r0, r3, lsl #16
     47c:	09c50300 	stmibeq	r5, {r8, r9}^
     480:	4a050000 	bmi	140488 <__RAM_SIZE+0x40488>
     484:	0000511a 	andeq	r5, r0, sl, lsl r1
     488:	02ea0300 	rsceq	r0, sl, #0, 6
     48c:	5c060000 	stcpl	0, cr0, [r6], {-0}
     490:	0004952e 	andeq	r9, r4, lr, lsr #10
     494:	9b040e00 	blls	103c9c <__RAM_SIZE+0x3c9c>
     498:	0f000004 	svceq	0x00000004
     49c:	0000016b 	andeq	r0, r0, fp, ror #2
     4a0:	008c0b01 	addeq	r0, ip, r1, lsl #22
     4a4:	04b20000 	ldrteq	r0, [r2], #0
     4a8:	85100000 	ldrhi	r0, [r0, #-0]
     4ac:	ff000000 			; <UNDEFINED> instruction: 0xff000000
     4b0:	2511007f 	ldrcs	r0, [r1, #-127]	; 0xffffff81
     4b4:	01000000 	mrseq	r0, (UNDEF: 0)
     4b8:	04a1090d 	strteq	r0, [r1], #2317	; 0x90d
     4bc:	05010000 	streq	r0, [r1, #-0]
     4c0:	00046803 	andeq	r6, r4, r3, lsl #16
     4c4:	5e011238 	mcrpl	2, 0, r1, cr1, cr8, {1}
     4c8:	01000000 	mrseq	r0, (UNDEF: 0)
     4cc:	79010571 	stmdbvc	r1, {r0, r4, r5, r6, r8, sl}
     4d0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     4d4:	84100008 	ldrhi	r0, [r0], #-8
     4d8:	00100008 	andseq	r0, r0, r8
     4dc:	01000000 	mrseq	r0, (UNDEF: 0)
     4e0:	00000544 	andeq	r0, r0, r4, asr #10
     4e4:	0003fd13 	andeq	pc, r3, r3, lsl sp	; <UNPREDICTABLE>
     4e8:	09720100 	ldmdbeq	r2!, {r8}^
     4ec:	00000079 	andeq	r0, r0, r9, ror r0
     4f0:	00000026 	andeq	r0, r0, r6, lsr #32
     4f4:	00000020 	andeq	r0, r0, r0, lsr #32
     4f8:	00085e14 	andeq	r5, r8, r4, lsl lr
     4fc:	000b1d10 	andeq	r1, fp, r0, lsl sp
     500:	08641500 	stmdaeq	r4!, {r8, sl, ip}^
     504:	0b2b1000 	bleq	ac450c <__RAM_SIZE+0x9c450c>
     508:	05180000 	ldreq	r0, [r8, #-0]
     50c:	01160000 	tsteq	r6, r0
     510:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
     514:	00100056 	andseq	r0, r0, r6, asr r0
     518:	00086814 	andeq	r6, r8, r4, lsl r8
     51c:	000b3810 	andeq	r3, fp, r0, lsl r8
     520:	086c1400 	stmdaeq	ip!, {sl, ip}^
     524:	05441000 	strbeq	r1, [r4, #-0]
     528:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
     52c:	46100008 	ldrmi	r0, [r0], -r8
     530:	1600000b 	strne	r0, [r0], -fp
     534:	03055001 	movweq	r5, #20481	; 0x5001
     538:	100056f4 	strdne	r5, [r0], -r4
     53c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     540:	00007f74 	andeq	r7, r0, r4, ror pc
     544:	00008318 	andeq	r8, r0, r8, lsl r3
     548:	0d660100 	stfeqe	f0, [r6, #-0]
     54c:	00080001 	andeq	r0, r8, r1
     550:	00084410 	andeq	r4, r8, r0, lsl r4
     554:	00005010 	andeq	r5, r0, r0, lsl r0
     558:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
     55c:	42190000 	andsmi	r0, r9, #0
     560:	01000000 	mrseq	r0, (UNDEF: 0)
     564:	04891967 	streq	r1, [r9], #2407	; 0x967
     568:	03050000 	movweq	r0, #20480	; 0x5000
     56c:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
     570:	001a1913 	andseq	r1, sl, r3, lsl r9
     574:	10680100 	rsbne	r0, r8, r0, lsl #2
     578:	0000047d 	andeq	r0, r0, sp, ror r4
     57c:	0000009c 	muleq	r0, ip, r0
     580:	00000094 	muleq	r0, r4, r0
     584:	00081a15 	andeq	r1, r8, r5, lsl sl
     588:	000b5410 	andeq	r5, fp, r0, lsl r4
     58c:	0005c000 	andeq	ip, r5, r0
     590:	50011600 	andpl	r1, r1, r0, lsl #12
     594:	08450305 	stmdaeq	r5, {r0, r2, r8, r9}^
     598:	01161000 	tsteq	r6, r0
     59c:	a4030551 	strge	r0, [r3], #-1361	; 0xfffffaaf
     5a0:	16100056 			; <UNDEFINED> instruction: 0x16100056
     5a4:	0a035201 	beq	d4db0 <__HEAP_SIZE+0xd3db0>
     5a8:	01160800 	tsteq	r6, r0, lsl #16
     5ac:	16300153 			; <UNDEFINED> instruction: 0x16300153
     5b0:	01007d02 	tsteq	r0, r2, lsl #26
     5b4:	7d021631 	stcvc	6, cr1, [r2, #-196]	; 0xffffff3c
     5b8:	64030504 	strvs	r0, [r3], #-1284	; 0xfffffafc
     5bc:	00380004 	eorseq	r0, r8, r4
     5c0:	00082615 	andeq	r2, r8, r5, lsl r6
     5c4:	000b4610 	andeq	r4, fp, r0, lsl r6
     5c8:	0005d700 	andeq	sp, r5, r0, lsl #14
     5cc:	50011600 	andpl	r1, r1, r0, lsl #12
     5d0:	56b00305 	ldrtpl	r0, [r0], r5, lsl #6
     5d4:	14001000 	strne	r1, [r0], #-0
     5d8:	10000830 	andne	r0, r0, r0, lsr r8
     5dc:	00000b63 	andeq	r0, r0, r3, ror #22
     5e0:	02871800 	addeq	r1, r7, #0, 16
     5e4:	5f010000 	svcpl	0x00010000
     5e8:	0844010d 	stmdaeq	r4, {r0, r2, r3, r8}^
     5ec:	08581000 	ldmdaeq	r8, {ip}^
     5f0:	00d11000 	sbcseq	r1, r1, r0
     5f4:	37010000 	strcc	r0, [r1, -r0]
     5f8:	1a000006 	bne	618 <__STACKSEAL_SIZE+0x618>
     5fc:	00000006 	andeq	r0, r0, r6
     600:	ba235f01 	blt	8d820c <__RAM_SIZE+0x7d820c>
     604:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
     608:	f1000000 	cps	#0
     60c:	15000000 	strne	r0, [r0, #-0]
     610:	1000084c 	andne	r0, r0, ip, asr #16
     614:	00000b72 	andeq	r0, r0, r2, ror fp
     618:	00000623 	andeq	r0, r0, r3, lsr #12
     61c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
     620:	17006408 	strne	r6, [r0, -r8, lsl #8]
     624:	10000852 	andne	r0, r0, r2, asr r8
     628:	00000b2b 	andeq	r0, r0, fp, lsr #22
     62c:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     630:	0056d003 	subseq	sp, r6, r3
     634:	1b000010 	blne	67c <__STACKSEAL_SIZE+0x67c>
     638:	00042901 	andeq	r2, r4, r1, lsl #18
     63c:	065a0100 	ldrbeq	r0, [sl], -r0, lsl #2
     640:	00000001 	andeq	r0, r0, r1
     644:	00000000 	andeq	r0, r0, r0
     648:	00011600 	andeq	r1, r1, r0, lsl #12
     64c:	068c0100 	streq	r0, [ip], r0, lsl #2
     650:	0a1c0000 	beq	700658 <__RAM_SIZE+0x600658>
     654:	9c000003 	stcls	0, cr0, [r0], {3}
     658:	01000006 	tsteq	r0, r6
     65c:	00000305 	andeq	r0, r0, r5, lsl #6
     660:	00150000 	andseq	r0, r5, r0
     664:	46000000 	strmi	r0, [r0], -r0
     668:	8200000b 	andhi	r0, r0, #11
     66c:	16000006 	strne	r0, [r0], -r6
     670:	03055001 	movweq	r5, #20481	; 0x5001
     674:	00000000 	andeq	r0, r0, r0
     678:	05510116 	ldrbeq	r0, [r1, #-278]	; 0xfffffeea
     67c:	00000003 	andeq	r0, r0, r3
     680:	00140000 	andseq	r0, r4, r0
     684:	a1000000 	mrsge	r0, (UNDEF: 0)
     688:	00000006 	andeq	r0, r0, r6
     68c:	0000c30b 	andeq	ip, r0, fp, lsl #6
     690:	00069c00 	andeq	r9, r6, r0, lsl #24
     694:	00850c00 	addeq	r0, r5, r0, lsl #24
     698:	00050000 	andeq	r0, r5, r0
     69c:	00068c06 	andeq	r8, r6, r6, lsl #24
     6a0:	23011b00 	movwcs	r1, #6912	; 0x1b00
     6a4:	01000004 	tsteq	r0, r4
     6a8:	00010655 	andeq	r0, r1, r5, asr r6
     6ac:	00000000 	andeq	r0, r0, r0
     6b0:	36000000 	strcc	r0, [r0], -r0
     6b4:	01000001 	tsteq	r0, r1
     6b8:	000006f6 	strdeq	r0, [r0], -r6
     6bc:	00030a1c 	andeq	r0, r3, ip, lsl sl
     6c0:	00069c00 	andeq	r9, r6, r0, lsl #24
     6c4:	03050100 	movweq	r0, #20736	; 0x5100
     6c8:	00000000 	andeq	r0, r0, r0
     6cc:	00000015 	andeq	r0, r0, r5, lsl r0
     6d0:	000b4600 	andeq	r4, fp, r0, lsl #12
     6d4:	0006ec00 	andeq	lr, r6, r0, lsl #24
     6d8:	50011600 	andpl	r1, r1, r0, lsl #12
     6dc:	00000305 	andeq	r0, r0, r5, lsl #6
     6e0:	01160000 	tsteq	r6, r0
     6e4:	00030551 	andeq	r0, r3, r1, asr r5
     6e8:	00000000 	andeq	r0, r0, r0
     6ec:	00000014 	andeq	r0, r0, r4, lsl r0
     6f0:	0006f600 	andeq	pc, r6, r0, lsl #12
     6f4:	011b0000 	tsteq	fp, r0
     6f8:	000000d5 	ldrdeq	r0, [r0], -r5
     6fc:	01065001 	tsteq	r6, r1
	...
     708:	00000156 	andeq	r0, r0, r6, asr r1
     70c:	00074b01 	andeq	r4, r7, r1, lsl #22
     710:	030a1c00 	movweq	r1, #44032	; 0xac00
     714:	069c0000 	ldreq	r0, [ip], r0
     718:	05010000 	streq	r0, [r1, #-0]
     71c:	00000003 	andeq	r0, r0, r3
     720:	00001500 	andeq	r1, r0, r0, lsl #10
     724:	0b460000 	bleq	118072c <__RAM_SIZE+0x108072c>
     728:	07410000 	strbeq	r0, [r1, -r0]
     72c:	01160000 	tsteq	r6, r0
     730:	00030550 	andeq	r0, r3, r0, asr r5
     734:	16000000 	strne	r0, [r0], -r0
     738:	03055101 	movweq	r5, #20737	; 0x5101
     73c:	00000000 	andeq	r0, r0, r0
     740:	00001400 	andeq	r1, r0, r0, lsl #8
     744:	074b0000 	strbeq	r0, [fp, -r0]
     748:	1b000000 	blne	750 <__STACKSEAL_SIZE+0x750>
     74c:	0000cf01 	andeq	ip, r0, r1, lsl #30
     750:	064b0100 	strbeq	r0, [fp], -r0, lsl #2
     754:	00000001 	andeq	r0, r0, r1
     758:	00000000 	andeq	r0, r0, r0
     75c:	00017600 	andeq	r7, r1, r0, lsl #12
     760:	07a00100 	streq	r0, [r0, r0, lsl #2]!
     764:	0a1c0000 	beq	70076c <__RAM_SIZE+0x60076c>
     768:	9c000003 	stcls	0, cr0, [r0], {3}
     76c:	01000006 	tsteq	r0, r6
     770:	00000305 	andeq	r0, r0, r5, lsl #6
     774:	00150000 	andseq	r0, r5, r0
     778:	46000000 	strmi	r0, [r0], -r0
     77c:	9600000b 	strls	r0, [r0], -fp
     780:	16000007 	strne	r0, [r0], -r7
     784:	03055001 	movweq	r5, #20481	; 0x5001
     788:	00000000 	andeq	r0, r0, r0
     78c:	05510116 	ldrbeq	r0, [r1, #-278]	; 0xfffffeea
     790:	00000003 	andeq	r0, r0, r3
     794:	00140000 	andseq	r0, r4, r0
     798:	a0000000 	andge	r0, r0, r0
     79c:	00000007 	andeq	r0, r0, r7
     7a0:	00c9011b 	sbceq	r0, r9, fp, lsl r1
     7a4:	46010000 	strmi	r0, [r1], -r0
     7a8:	00000106 	andeq	r0, r0, r6, lsl #2
     7ac:	00000000 	andeq	r0, r0, r0
     7b0:	01960000 	orrseq	r0, r6, r0
     7b4:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
     7b8:	1c000007 	stcne	0, cr0, [r0], {7}
     7bc:	0000030a 	andeq	r0, r0, sl, lsl #6
     7c0:	0000069c 	muleq	r0, ip, r6
     7c4:	00030501 	andeq	r0, r3, r1, lsl #10
     7c8:	15000000 	strne	r0, [r0, #-0]
     7cc:	00000000 	andeq	r0, r0, r0
     7d0:	00000b46 	andeq	r0, r0, r6, asr #22
     7d4:	000007eb 	andeq	r0, r0, fp, ror #15
     7d8:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     7dc:	00000003 	andeq	r0, r0, r3
     7e0:	51011600 	tstpl	r1, r0, lsl #12
     7e4:	00000305 	andeq	r0, r0, r5, lsl #6
     7e8:	14000000 	strne	r0, [r0], #-0
     7ec:	00000000 	andeq	r0, r0, r0
     7f0:	000007f5 	strdeq	r0, [r0], -r5
     7f4:	03011b00 	movweq	r1, #6912	; 0x1b00
     7f8:	01000004 	tsteq	r0, r4
     7fc:	0001063f 	andeq	r0, r1, pc, lsr r6
     800:	00000000 	andeq	r0, r0, r0
     804:	b6000000 	strlt	r0, [r0], -r0
     808:	01000001 	tsteq	r0, r1
     80c:	00000853 	andeq	r0, r0, r3, asr r8
     810:	00030a1c 	andeq	r0, r3, ip, lsl sl
     814:	00069c00 	andeq	r9, r6, r0, lsl #24
     818:	03050100 	movweq	r0, #20736	; 0x5100
     81c:	00000000 	andeq	r0, r0, r0
     820:	00000015 	andeq	r0, r0, r5, lsl r0
     824:	000b4600 	andeq	r4, fp, r0, lsl #12
     828:	00084000 	andeq	r4, r8, r0
     82c:	50011600 	andpl	r1, r1, r0, lsl #12
     830:	00000305 	andeq	r0, r0, r5, lsl #6
     834:	01160000 	tsteq	r6, r0
     838:	00030551 	andeq	r0, r3, r1, asr r5
     83c:	00000000 	andeq	r0, r0, r0
     840:	00000014 	andeq	r0, r0, r4, lsl r0
     844:	00085300 	andeq	r5, r8, r0, lsl #6
     848:	00001400 	andeq	r1, r0, r0, lsl #8
     84c:	09930000 	ldmibeq	r3, {}	; <UNPREDICTABLE>
     850:	1b000000 	blne	858 <__Vectors_Size+0x98>
     854:	00024d01 	andeq	r4, r2, r1, lsl #26
     858:	062f0100 	strteq	r0, [pc], -r0, lsl #2
     85c:	00000001 	andeq	r0, r0, r1
     860:	00000000 	andeq	r0, r0, r0
     864:	0001d600 	andeq	sp, r1, r0, lsl #12
     868:	09830100 	stmibeq	r3, {r8}
     86c:	f5190000 			; <UNDEFINED> instruction: 0xf5190000
     870:	01000004 	tsteq	r0, r4
     874:	09831230 	stmibeq	r3, {r4, r5, r9, ip}
     878:	91030000 	mrsls	r0, (UNDEF: 3)
     87c:	fb137df0 	blx	4e0046 <__RAM_SIZE+0x3e0046>
     880:	01000000 	mrseq	r0, (UNDEF: 0)
     884:	00851231 	addeq	r1, r5, r1, lsr r2
     888:	02150000 	andseq	r0, r5, #0
     88c:	020f0000 	andeq	r0, pc, #0
     890:	1d130000 	ldcne	0, cr0, [r3, #-0]
     894:	01000004 	tsteq	r0, r4
     898:	00851232 	addeq	r1, r5, r2, lsr r2
     89c:	02420000 	subeq	r0, r2, #0
     8a0:	023e0000 	eorseq	r0, lr, #0
     8a4:	fd130000 	ldc2	0, cr0, [r3, #-0]
     8a8:	01000003 	tsteq	r0, r3
     8ac:	00790933 	rsbseq	r0, r9, r3, lsr r9
     8b0:	02680000 	rsbeq	r0, r8, #0
     8b4:	02600000 	rsbeq	r0, r0, #0
     8b8:	001d0000 	andseq	r0, sp, r0
     8bc:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
     8c0:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
     8c4:	38010069 	stmdacc	r1, {r0, r3, r5, r6}
     8c8:	00007912 	andeq	r7, r0, r2, lsl r9
     8cc:	0002a000 	andeq	sl, r2, r0
     8d0:	00029c00 	andeq	r9, r2, r0, lsl #24
     8d4:	00001700 	andeq	r1, r0, r0, lsl #14
     8d8:	0b460000 	bleq	11808e0 <__RAM_SIZE+0x10808e0>
     8dc:	01160000 	tsteq	r6, r0
     8e0:	00030550 	andeq	r0, r3, r0, asr r5
     8e4:	00000000 	andeq	r0, r0, r0
     8e8:	00001500 	andeq	r1, r0, r0, lsl #10
     8ec:	0b810000 	bleq	fe0408f4 <__StackTop+0xc5f408f4>
     8f0:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
     8f4:	01160000 	tsteq	r6, r0
     8f8:	007d0250 	rsbseq	r0, sp, r0, asr r2
     8fc:	01510116 	cmpeq	r1, r6, lsl r1
     900:	52011630 	andpl	r1, r1, #48, 12	; 0x3000000
     904:	01000a03 	tsteq	r0, r3, lsl #20
     908:	00001400 	andeq	r1, r0, r0, lsl #8
     90c:	0b8e0000 	bleq	fe380914 <__StackTop+0xc6280914>
     910:	00140000 	andseq	r0, r4, r0
     914:	9c000000 	stcls	0, cr0, [r0], {-0}
     918:	1500000b 	strne	r0, [r0, #-11]
     91c:	00000000 	andeq	r0, r0, r0
     920:	00000baa 	andeq	r0, r0, sl, lsr #23
     924:	0000093b 	andeq	r0, r0, fp, lsr r9
     928:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
     92c:	0116007d 	tsteq	r6, sp, ror r0
     930:	40080251 	andmi	r0, r8, r1, asr r2
     934:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
     938:	15000074 	strne	r0, [r0, #-116]	; 0xffffff8c
     93c:	00000000 	andeq	r0, r0, r0
     940:	00000b46 	andeq	r0, r0, r6, asr #22
     944:	00000952 	andeq	r0, r0, r2, asr r9
     948:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     94c:	00000003 	andeq	r0, r0, r3
     950:	00150000 	andseq	r0, r5, r0
     954:	46000000 	strmi	r0, [r0], -r0
     958:	6f00000b 	svcvs	0x0000000b
     95c:	16000009 	strne	r0, [r0], -r9
     960:	03055001 	movweq	r5, #20481	; 0x5001
     964:	00000000 	andeq	r0, r0, r0
     968:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     96c:	17000075 	smlsdxne	r0, r5, r0, r0
     970:	00000000 	andeq	r0, r0, r0
     974:	00000b2b 	andeq	r0, r0, fp, lsr #22
     978:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     97c:	00000003 	andeq	r0, r0, r3
     980:	0b000000 	bleq	988 <__Vectors_Size+0x1c8>
     984:	00000085 	andeq	r0, r0, r5, lsl #1
     988:	00000993 	muleq	r0, r3, r9
     98c:	0000850c 	andeq	r8, r0, ip, lsl #10
     990:	1b003f00 	blne	10598 <__HEAP_SIZE+0xf598>
     994:	0002d401 	andeq	sp, r2, r1, lsl #8
     998:	061f0100 	ldreq	r0, [pc], -r0, lsl #2
     99c:	00000001 	andeq	r0, r0, r1
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	0002bf00 	andeq	fp, r2, r0, lsl #30
     9a8:	0a1a0100 	beq	680db0 <__RAM_SIZE+0x580db0>
     9ac:	20130000 	andscs	r0, r3, r0
     9b0:	01000000 	mrseq	r0, (UNDEF: 0)
     9b4:	0a1a1320 	beq	68563c <__RAM_SIZE+0x58563c>
     9b8:	02fd0000 	rscseq	r0, sp, #0
     9bc:	02f70000 	rscseq	r0, r7, #0
     9c0:	9e190000 	cdpls	0, 1, cr0, cr9, cr0, {0}
     9c4:	01000000 	mrseq	r0, (UNDEF: 0)
     9c8:	00801221 	addeq	r1, r0, r1, lsr #4
     9cc:	91020000 	mrsls	r0, (UNDEF: 2)
     9d0:	0000156c 	andeq	r1, r0, ip, ror #10
     9d4:	0b460000 	bleq	11809dc <__RAM_SIZE+0x10809dc>
     9d8:	09eb0000 	stmibeq	fp!, {}^	; <UNPREDICTABLE>
     9dc:	01160000 	tsteq	r6, r0
     9e0:	00750250 	rsbseq	r0, r5, r0, asr r2
     9e4:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     9e8:	15000074 	strne	r0, [r0, #-116]	; 0xffffff8c
     9ec:	00000000 	andeq	r0, r0, r0
     9f0:	00000b46 	andeq	r0, r0, r6, asr #22
     9f4:	00000a04 	andeq	r0, r0, r4, lsl #20
     9f8:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
     9fc:	01160075 	tsteq	r6, r5, ror r0
     a00:	00340151 	eorseq	r0, r4, r1, asr r1
     a04:	00000017 	andeq	r0, r0, r7, lsl r0
     a08:	000b4600 	andeq	r4, fp, r0, lsl #12
     a0c:	50011600 	andpl	r1, r1, r0, lsl #12
     a10:	16007502 	strne	r7, [r0], -r2, lsl #10
     a14:	33015101 	movwcc	r5, #4353	; 0x1101
     a18:	040e0000 	streq	r0, [lr], #-0
     a1c:	00000080 	andeq	r0, r0, r0, lsl #1
     a20:	03cf011b 	biceq	r0, pc, #-1073741818	; 0xc0000006
     a24:	17010000 	strne	r0, [r1, -r0]
     a28:	00000106 	andeq	r0, r0, r6, lsl #2
     a2c:	00000000 	andeq	r0, r0, r0
     a30:	03290000 			; <UNDEFINED> instruction: 0x03290000
     a34:	75010000 	strvc	r0, [r1, #-0]
     a38:	1f00000a 	svcne	0x0000000a
     a3c:	18010061 	stmdane	r1, {r0, r5, r6}
     a40:	00007909 	andeq	r7, r0, r9, lsl #18
     a44:	621f0000 	andsvs	r0, pc, #0
     a48:	10180100 	andsne	r0, r8, r0, lsl #2
     a4c:	00000079 	andeq	r0, r0, r9, ror r0
     a50:	00631f00 	rsbeq	r1, r3, r0, lsl #30
     a54:	79171801 	ldmdbvc	r7, {r0, fp, ip}
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	00000017 	andeq	r0, r0, r7, lsl r0
     a60:	000b4600 	andeq	r4, fp, r0, lsl #12
     a64:	50011600 	andpl	r1, r1, r0, lsl #12
     a68:	00000305 	andeq	r0, r0, r5, lsl #6
     a6c:	01160000 	tsteq	r6, r0
     a70:	00300151 	eorseq	r0, r0, r1, asr r1
     a74:	3c011b00 			; <UNDEFINED> instruction: 0x3c011b00
     a78:	01000003 	tsteq	r0, r3
     a7c:	00010613 	andeq	r0, r1, r3, lsl r6
     a80:	00000000 	andeq	r0, r0, r0
     a84:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
     a88:	01000003 	tsteq	r0, r3
     a8c:	00000ab4 			; <UNDEFINED> instruction: 0x00000ab4
     a90:	00030a1c 	andeq	r0, r3, ip, lsl sl
     a94:	000ac400 	andeq	ip, sl, r0, lsl #8
     a98:	03050100 	movweq	r0, #20736	; 0x5100
     a9c:	00000000 	andeq	r0, r0, r0
     aa0:	00000017 	andeq	r0, r0, r7, lsl r0
     aa4:	000b2b00 	andeq	r2, fp, r0, lsl #22
     aa8:	50011600 	andpl	r1, r1, r0, lsl #12
     aac:	00000305 	andeq	r0, r0, r5, lsl #6
     ab0:	00000000 	andeq	r0, r0, r0
     ab4:	0000c30b 	andeq	ip, r0, fp, lsl #6
     ab8:	000ac400 	andeq	ip, sl, r0, lsl #8
     abc:	00850c00 	addeq	r0, r5, r0, lsl #24
     ac0:	000f0000 	andeq	r0, pc, r0
     ac4:	000ab406 	andeq	fp, sl, r6, lsl #8
     ac8:	07011b00 	streq	r1, [r1, -r0, lsl #22]
     acc:	01000001 	tsteq	r0, r1
     ad0:	0001060f 	andeq	r0, r1, pc, lsl #12
     ad4:	00000000 	andeq	r0, r0, r0
     ad8:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
     adc:	01000003 	tsteq	r0, r3
     ae0:	00000b08 	andeq	r0, r0, r8, lsl #22
     ae4:	00030a1c 	andeq	r0, r3, ip, lsl sl
     ae8:	000b1800 	andeq	r1, fp, r0, lsl #16
     aec:	03050100 	movweq	r0, #20736	; 0x5100
     af0:	00000000 	andeq	r0, r0, r0
     af4:	00000017 	andeq	r0, r0, r7, lsl r0
     af8:	000b2b00 	andeq	r2, fp, r0, lsl #22
     afc:	50011600 	andpl	r1, r1, r0, lsl #12
     b00:	00000305 	andeq	r0, r0, r5, lsl #6
     b04:	00000000 	andeq	r0, r0, r0
     b08:	0000c30b 	andeq	ip, r0, fp, lsl #6
     b0c:	000b1800 	andeq	r1, fp, r0, lsl #16
     b10:	00850c00 	addeq	r0, r5, r0, lsl #24
     b14:	00190000 	andseq	r0, r9, r0
     b18:	000b0806 	andeq	r0, fp, r6, lsl #16
     b1c:	01012000 	mrseq	r2, (UNDEF: 1)
     b20:	00000356 	andeq	r0, r0, r6, asr r3
     b24:	00000356 	andeq	r0, r0, r6, asr r3
     b28:	21060707 	tstcs	r6, r7, lsl #14
     b2c:	001b0101 	andseq	r0, fp, r1, lsl #2
     b30:	00110000 	andseq	r0, r1, r0
     b34:	000a0000 	andeq	r0, sl, r0
     b38:	9f010120 	svcls	0x00010120
     b3c:	9f000002 	svcls	0x00000002
     b40:	08000002 	stmdaeq	r0, {r1}
     b44:	01200646 			; <UNDEFINED> instruction: 0x01200646
     b48:	0005d101 	andeq	sp, r5, r1, lsl #2
     b4c:	0005d100 	andeq	sp, r5, r0, lsl #2
     b50:	05c80900 	strbeq	r0, [r8, #2304]	; 0x900
     b54:	60010122 	andvs	r0, r1, r2, lsr #2
     b58:	60000003 	andvs	r0, r0, r3
     b5c:	06000003 	streq	r0, [r0], -r3
     b60:	2210017e 	andscs	r0, r0, #-2147483617	; 0x8000001f
     b64:	013a0101 	teqeq	sl, r1, lsl #2
     b68:	013a0000 	teqeq	sl, r0
     b6c:	ec060000 	stc	0, cr0, [r6], {-0}
     b70:	01220605 			; <UNDEFINED> instruction: 0x01220605
     b74:	00005301 	andeq	r5, r0, r1, lsl #6
     b78:	00005300 	andeq	r5, r0, r0, lsl #6
     b7c:	03580600 	cmpeq	r8, #0, 12
     b80:	01012106 	tsteq	r1, r6, lsl #2
     b84:	000000ae 	andeq	r0, r0, lr, lsr #1
     b88:	000000a4 	andeq	r0, r0, r4, lsr #1
     b8c:	0120000a 			; <UNDEFINED> instruction: 0x0120000a
     b90:	0000e701 	andeq	lr, r0, r1, lsl #14
     b94:	0000e700 	andeq	lr, r0, r0, lsl #14
     b98:	0e4a0800 	cdpeq	8, 4, cr0, cr10, cr0, {0}
     b9c:	09010120 	stmdbeq	r1, {r5, r8}
     ba0:	09000004 	stmdbeq	r0, {r2}
     ba4:	08000004 	stmdaeq	r0, {r2}
     ba8:	01200e4b 			; <UNDEFINED> instruction: 0x01200e4b
     bac:	00024701 	andeq	r4, r2, r1, lsl #14
     bb0:	00024700 	andeq	r4, r2, r0, lsl #14
     bb4:	06480800 	strbeq	r0, [r8], -r0, lsl #16
     bb8:	0004e500 	andeq	lr, r4, r0, lsl #10
     bbc:	01000200 	mrseq	r0, R8_usr
     bc0:	04000002 	streq	r0, [r0], #-2
     bc4:	00018901 	andeq	r8, r1, r1, lsl #18
     bc8:	04590c00 	ldrbeq	r0, [r9], #-3072	; 0xfffff400
     bcc:	03850000 	orreq	r0, r5, #0
     bd0:	00900000 	addseq	r0, r0, r0
	...
     bdc:	04d70000 	ldrbeq	r0, [r7], #0
     be0:	01020000 	mrseq	r0, (UNDEF: 2)
     be4:	00027306 	andeq	r7, r2, r6, lsl #6
     be8:	017f0300 	cmneq	pc, r0, lsl #6
     bec:	2b020000 	blcs	80bf4 <__HEAP_SIZE+0x7fbf4>
     bf0:	00003c18 	andeq	r3, r0, r8, lsl ip
     bf4:	08010200 	stmdaeq	r1, {r9}
     bf8:	00000271 	andeq	r0, r0, r1, ror r2
     bfc:	32050202 	andcc	r0, r5, #536870912	; 0x20000000
     c00:	02000000 	andeq	r0, r0, #0
     c04:	031a0702 	tsteq	sl, #524288	; 0x80000
     c08:	04020000 	streq	r0, [r2], #-0
     c0c:	00012c05 	andeq	r2, r1, r5, lsl #24
     c10:	006f0300 	rsbeq	r0, pc, r0, lsl #6
     c14:	4f020000 	svcmi	0x00020000
     c18:	00006419 	andeq	r6, r0, r9, lsl r4
     c1c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     c20:	000002c2 	andeq	r0, r0, r2, asr #5
     c24:	27050802 	strcs	r0, [r5, -r2, lsl #16]
     c28:	02000001 	andeq	r0, r0, #1
     c2c:	02bd0708 	adcseq	r0, sp, #8, 14	; 0x200000
     c30:	04040000 	streq	r0, [r4], #-0
     c34:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     c38:	07040200 	streq	r0, [r4, -r0, lsl #4]
     c3c:	000002c7 	andeq	r0, r0, r7, asr #5
     c40:	00018103 	andeq	r8, r1, r3, lsl #2
     c44:	13180300 	tstne	r8, #0, 6
     c48:	00000030 	andeq	r0, r0, r0, lsr r0
     c4c:	00008705 	andeq	r8, r0, r5, lsl #14
     c50:	00710300 	rsbseq	r0, r1, r0, lsl #6
     c54:	30030000 	andcc	r0, r3, r0
     c58:	00005814 	andeq	r5, r0, r4, lsl r8
     c5c:	00980500 	addseq	r0, r8, r0, lsl #10
     c60:	a4060000 	strge	r0, [r6], #-0
     c64:	07000000 	streq	r0, [r0, -r0]
     c68:	f804027c 			; <UNDEFINED> instruction: 0xf804027c
     c6c:	03b30901 			; <UNDEFINED> instruction: 0x03b30901
     c70:	92080000 	andls	r0, r8, #0
     c74:	04000000 	streq	r0, [r0], #-0
     c78:	a91201fa 	ldmdbge	r2, {r1, r3, r4, r5, r6, r7, r8}
     c7c:	02000000 	andeq	r0, r0, #0
     c80:	42080023 	andmi	r0, r8, #35	; 0x23
     c84:	04000004 	streq	r0, [r0], #-4
     c88:	a41201fb 	ldrge	r0, [r2], #-507	; 0xfffffe05
     c8c:	02000000 	andeq	r0, r0, #0
     c90:	4c080423 	cfstrsmi	mvf0, [r8], {35}	; 0x23
     c94:	04000003 	streq	r0, [r0], #-3
     c98:	a41201fc 	ldrge	r0, [r2], #-508	; 0xfffffe04
     c9c:	02000000 	andeq	r0, r0, #0
     ca0:	4d080823 	stcmi	8, cr0, [r8, #-140]	; 0xffffff74
     ca4:	04000004 	streq	r0, [r0], #-4
     ca8:	a41201fd 	ldrge	r0, [r2], #-509	; 0xfffffe03
     cac:	02000000 	andeq	r0, r0, #0
     cb0:	53090c23 	movwpl	r0, #39971	; 0x9c23
     cb4:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     cb8:	a41201fe 	ldrge	r0, [r2], #-510	; 0xfffffe02
     cbc:	02000000 	andeq	r0, r0, #0
     cc0:	43091023 	movwmi	r1, #36899	; 0x9023
     cc4:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     cc8:	a41201ff 	ldrge	r0, [r2], #-511	; 0xfffffe01
     ccc:	02000000 	andeq	r0, r0, #0
     cd0:	b8081423 	stmdalt	r8, {r0, r1, r5, sl, ip}
     cd4:	04000002 	streq	r0, [r0], #-2
     cd8:	c3120200 	tstgt	r2, #0, 4
     cdc:	02000003 	andeq	r0, r0, #3
     ce0:	04081823 	streq	r1, [r8], #-2083	; 0xfffff7dd
     ce4:	04000003 	streq	r0, [r0], #-3
     ce8:	a4120201 	ldrge	r0, [r2], #-513	; 0xfffffdff
     cec:	02000000 	andeq	r0, r0, #0
     cf0:	5c082423 	cfstrspl	mvf2, [r8], {35}	; 0x23
     cf4:	04000002 	streq	r0, [r0], #-2
     cf8:	a4120202 	ldrge	r0, [r2], #-514	; 0xfffffdfe
     cfc:	02000000 	andeq	r0, r0, #0
     d00:	6c082823 	stcvs	8, cr2, [r8], {35}	; 0x23
     d04:	04000003 	streq	r0, [r0], #-3
     d08:	a4120203 	ldrge	r0, [r2], #-515	; 0xfffffdfd
     d0c:	02000000 	andeq	r0, r0, #0
     d10:	51082c23 	tstpl	r8, r3, lsr #24
     d14:	04000003 	streq	r0, [r0], #-3
     d18:	a4120204 	ldrge	r0, [r2], #-516	; 0xfffffdfc
     d1c:	02000000 	andeq	r0, r0, #0
     d20:	2c083023 	stccs	0, cr3, [r8], {35}	; 0x23
     d24:	04000000 	streq	r0, [r0], #-0
     d28:	a4120205 	ldrge	r0, [r2], #-517	; 0xfffffdfb
     d2c:	02000000 	andeq	r0, r0, #0
     d30:	35083423 	strcc	r3, [r8, #-1059]	; 0xfffffbdd
     d34:	04000001 	streq	r0, [r0], #-1
     d38:	a4120206 	ldrge	r0, [r2], #-518	; 0xfffffdfa
     d3c:	02000000 	andeq	r0, r0, #0
     d40:	2f083823 	svccs	0x00083823
     d44:	04000004 	streq	r0, [r0], #-4
     d48:	a4120207 	ldrge	r0, [r2], #-519	; 0xfffffdf9
     d4c:	02000000 	andeq	r0, r0, #0
     d50:	4c083c23 	stcmi	12, cr3, [r8], {35}	; 0x23
     d54:	04000000 	streq	r0, [r0], #-0
     d58:	dd120208 	lfmle	f0, 4, [r2, #-32]	; 0xffffffe0
     d5c:	02000003 	andeq	r0, r0, #3
     d60:	3b084023 	blcc	210df4 <__RAM_SIZE+0x110df4>
     d64:	04000004 	streq	r0, [r0], #-4
     d68:	a9120209 	ldmdbge	r2, {r0, r3, r9}
     d6c:	02000000 	andeq	r0, r0, #0
     d70:	e0084823 	and	r4, r8, r3, lsr #16
     d74:	04000000 	streq	r0, [r0], #-0
     d78:	a912020a 	ldmdbge	r2, {r1, r3, r9}
     d7c:	02000000 	andeq	r0, r0, #0
     d80:	63084c23 	movwvs	r4, #35875	; 0x8c23
     d84:	04000001 	streq	r0, [r0], #-1
     d88:	f712020b 			; <UNDEFINED> instruction: 0xf712020b
     d8c:	02000003 	andeq	r0, r0, #3
     d90:	97085023 	strls	r5, [r8, -r3, lsr #32]
     d94:	04000002 	streq	r0, [r0], #-2
     d98:	1112020c 	tstne	r2, ip, lsl #4
     d9c:	02000004 	andeq	r0, r0, #4
     da0:	f7086023 			; <UNDEFINED> instruction: 0xf7086023
     da4:	04000003 	streq	r0, [r0], #-3
     da8:	a912020d 	ldmdbge	r2, {r0, r2, r3, r9}
     dac:	02000000 	andeq	r0, r0, #0
     db0:	43097823 	movwmi	r7, #38947	; 0x9823
     db4:	04005254 	streq	r5, [r0], #-596	; 0xfffffdac
     db8:	a912020e 	ldmdbge	r2, {r1, r2, r3, r9}
     dbc:	02000000 	andeq	r0, r0, #0
     dc0:	2d087c23 	stccs	12, cr7, [r8, #-140]	; 0xffffff74
     dc4:	04000003 	streq	r0, [r0], #-3
     dc8:	a912020f 	ldmdbge	r2, {r0, r1, r2, r3, r9}
     dcc:	03000000 	movweq	r0, #0
     dd0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     dd4:	00000313 	andeq	r0, r0, r3, lsl r3
     dd8:	12021004 	andne	r1, r2, #4
     ddc:	000000a4 	andeq	r0, r0, r4, lsr #1
     de0:	01842303 	orreq	r2, r4, r3, lsl #6
     de4:	00044708 	andeq	r4, r4, r8, lsl #14
     de8:	02110400 	andseq	r0, r1, #0, 8
     dec:	0000a412 	andeq	sl, r0, r2, lsl r4
     df0:	88230300 	stmdahi	r3!, {r8, r9}
     df4:	04530801 	ldrbeq	r0, [r3], #-2049	; 0xfffff7ff
     df8:	12040000 	andne	r0, r4, #0
     dfc:	00a41202 	adceq	r1, r4, r2, lsl #4
     e00:	23030000 	movwcs	r0, #12288	; 0x3000
     e04:	ed08018c 	stfs	f0, [r8, #-560]	; 0xfffffdd0
     e08:	04000003 	streq	r0, [r0], #-3
     e0c:	16120213 			; <UNDEFINED> instruction: 0x16120213
     e10:	03000004 	movweq	r0, #4
     e14:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     e18:	000002f7 	strdeq	r0, [r0], -r7
     e1c:	12021404 	andne	r1, r2, #4, 8	; 0x4000000
     e20:	000000a4 	andeq	r0, r0, r4, lsr #1
     e24:	01e42303 	mvneq	r2, r3, lsl #6
     e28:	0003ca08 	andeq	ip, r3, r8, lsl #20
     e2c:	02150400 	andseq	r0, r5, #0, 8
     e30:	0000a412 	andeq	sl, r0, r2, lsl r4
     e34:	e8230300 	stmda	r3!, {r8, r9}
     e38:	03710801 	cmneq	r1, #65536	; 0x10000
     e3c:	16040000 	strne	r0, [r4], -r0
     e40:	04261202 	strteq	r1, [r6], #-514	; 0xfffffdfe
     e44:	23030000 	movwcs	r0, #12288	; 0x3000
     e48:	db0801ec 	blle	201600 <__RAM_SIZE+0x101600>
     e4c:	04000000 	streq	r0, [r0], #-0
     e50:	a4120217 	ldrge	r0, [r2], #-535	; 0xfffffde9
     e54:	03000000 	movweq	r0, #0
     e58:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
     e5c:	0000037b 	andeq	r0, r0, fp, ror r3
     e60:	12021804 	andne	r1, r2, #4, 16	; 0x40000
     e64:	00000436 	andeq	r0, r0, r6, lsr r4
     e68:	04842303 	streq	r2, [r4], #771	; 0x303
     e6c:	00009808 	andeq	r9, r0, r8, lsl #16
     e70:	02190400 	andseq	r0, r9, #0, 8
     e74:	0000a912 	andeq	sl, r0, r2, lsl r9
     e78:	c0230300 	eorgt	r0, r3, r0, lsl #6
     e7c:	003c0804 	eorseq	r0, ip, r4, lsl #16
     e80:	1a040000 	bne	100e88 <__RAM_SIZE+0xe88>
     e84:	00a91202 	adceq	r1, r9, r2, lsl #4
     e88:	23030000 	movwcs	r0, #12288	; 0x3000
     e8c:	210804c4 	smlabtcs	r8, r4, r4, r0
     e90:	04000001 	streq	r0, [r0], #-1
     e94:	a912021b 	ldmdbge	r2, {r0, r1, r3, r4, r9}
     e98:	03000000 	movweq	r0, #0
     e9c:	0804c823 	stmdaeq	r4, {r0, r1, r5, fp, lr, pc}
     ea0:	000000b5 	strheq	r0, [r0], -r5
     ea4:	12021c04 	andne	r1, r2, #4, 24	; 0x400
     ea8:	00000446 	andeq	r0, r0, r6, asr #8
     eac:	04cc2303 	strbeq	r2, [ip], #771	; 0x303
     eb0:	00026108 	andeq	r6, r2, r8, lsl #2
     eb4:	021d0400 	andseq	r0, sp, #0, 8
     eb8:	0000a412 	andeq	sl, r0, r2, lsl r4
     ebc:	d0230300 	eorle	r0, r3, r0, lsl #6
     ec0:	00bf0804 	adcseq	r0, pc, r4, lsl #16
     ec4:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
     ec8:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     ecc:	23030000 	movwcs	r0, #12288	; 0x3000
     ed0:	7f0804d4 	svcvc	0x000804d4
     ed4:	04000002 	streq	r0, [r0], #-2
     ed8:	a412021f 	ldrge	r0, [r2], #-543	; 0xfffffde1
     edc:	03000000 	movweq	r0, #0
     ee0:	0804d823 	stmdaeq	r4, {r0, r1, r5, fp, ip, lr, pc}
     ee4:	00000269 	andeq	r0, r0, r9, ror #4
     ee8:	12022004 	andne	r2, r2, #4
     eec:	000000a4 	andeq	r0, r0, r4, lsr #1
     ef0:	04dc2303 	ldrbeq	r2, [ip], #771	; 0x303
     ef4:	00010108 	andeq	r0, r1, r8, lsl #2
     ef8:	02210400 	eoreq	r0, r1, #0, 8
     efc:	0000a412 	andeq	sl, r0, r2, lsl r4
     f00:	e0230300 	eor	r0, r3, r0, lsl #6
     f04:	03340804 	teqeq	r4, #4, 16	; 0x40000
     f08:	22040000 	andcs	r0, r4, #0
     f0c:	00a41202 	adceq	r1, r4, r2, lsl #4
     f10:	23030000 	movwcs	r0, #12288	; 0x3000
     f14:	fc0804e4 	stc2	4, cr0, [r8], {228}	; 0xe4
     f18:	04000002 	streq	r0, [r0], #-2
     f1c:	a4120223 	ldrge	r0, [r2], #-547	; 0xfffffddd
     f20:	03000000 	movweq	r0, #0
     f24:	0804e823 	stmdaeq	r4, {r0, r1, r5, fp, sp, lr, pc}
     f28:	00000000 	andeq	r0, r0, r0
     f2c:	12022404 	andne	r2, r2, #4, 8	; 0x4000000
     f30:	000000a4 	andeq	r0, r0, r4, lsr #1
     f34:	04ec2303 	strbteq	r2, [ip], #771	; 0x303
     f38:	00007a08 	andeq	r7, r0, r8, lsl #20
     f3c:	02250400 	eoreq	r0, r5, #0, 8
     f40:	0000a412 	andeq	sl, r0, r2, lsl r4
     f44:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     f48:	03e60804 	mvneq	r0, #4, 16	; 0x40000
     f4c:	26040000 	strcs	r0, [r4], -r0
     f50:	00a41202 	adceq	r1, r4, r2, lsl #4
     f54:	23030000 	movwcs	r0, #12288	; 0x3000
     f58:	340804f4 	strcc	r0, [r8], #-1268	; 0xfffffb0c
     f5c:	04000004 	streq	r0, [r0], #-4
     f60:	a4120227 	ldrge	r0, [r2], #-551	; 0xfffffdd9
     f64:	03000000 	movweq	r0, #0
     f68:	0004f823 	andeq	pc, r4, r3, lsr #16
     f6c:	0000930a 	andeq	r9, r0, sl, lsl #6
     f70:	0003c300 	andeq	ip, r3, r0, lsl #6
     f74:	00800b00 	addeq	r0, r0, r0, lsl #22
     f78:	000b0000 	andeq	r0, fp, r0
     f7c:	0003b305 	andeq	fp, r3, r5, lsl #6
     f80:	00a90a00 	adceq	r0, r9, r0, lsl #20
     f84:	03d80000 	bicseq	r0, r8, #0
     f88:	800b0000 	andhi	r0, fp, r0
     f8c:	01000000 	mrseq	r0, (UNDEF: 0)
     f90:	03c80600 	biceq	r0, r8, #0, 12
     f94:	d8050000 	stmdale	r5, {}	; <UNPREDICTABLE>
     f98:	0a000003 	beq	fac <__Vectors_Size+0x7ec>
     f9c:	000000a9 	andeq	r0, r0, r9, lsr #1
     fa0:	000003f2 	strdeq	r0, [r0], -r2
     fa4:	0000800b 	andeq	r8, r0, fp
     fa8:	06000300 	streq	r0, [r0], -r0, lsl #6
     fac:	000003e2 	andeq	r0, r0, r2, ror #7
     fb0:	0003f205 	andeq	pc, r3, r5, lsl #4
     fb4:	00a90a00 	adceq	r0, r9, r0, lsl #20
     fb8:	040c0000 	streq	r0, [ip], #-0
     fbc:	800b0000 	andhi	r0, fp, r0
     fc0:	05000000 	streq	r0, [r0, #-0]
     fc4:	03fc0600 	mvnseq	r0, #0, 12
     fc8:	0c050000 	stceq	0, cr0, [r5], {-0}
     fcc:	0a000004 	beq	fe4 <__Vectors_Size+0x824>
     fd0:	00000098 	muleq	r0, r8, r0
     fd4:	00000426 	andeq	r0, r0, r6, lsr #8
     fd8:	0000800b 	andeq	r8, r0, fp
     fdc:	0a001400 	beq	5fe4 <__HEAP_SIZE+0x4fe4>
     fe0:	00000098 	muleq	r0, r8, r0
     fe4:	00000436 	andeq	r0, r0, r6, lsr r4
     fe8:	0000800b 	andeq	r8, r0, fp
     fec:	0a004400 	beq	11ff4 <__HEAP_SIZE+0x10ff4>
     ff0:	00000098 	muleq	r0, r8, r0
     ff4:	00000446 	andeq	r0, r0, r6, asr #8
     ff8:	0000800b 	andeq	r8, r0, fp
     ffc:	0a000e00 	beq	4804 <__HEAP_SIZE+0x3804>
    1000:	00000098 	muleq	r0, r8, r0
    1004:	00000456 	andeq	r0, r0, r6, asr r4
    1008:	0000800b 	andeq	r8, r0, fp
    100c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1010:	000002af 	andeq	r0, r0, pc, lsr #5
    1014:	03022804 	movweq	r2, #10244	; 0x2804
    1018:	000000ae 	andeq	r0, r0, lr, lsr #1
    101c:	0004b303 	andeq	fp, r4, r3, lsl #6
    1020:	0f240500 	svceq	0x00240500
    1024:	00000474 	andeq	r0, r0, r4, ror r4
    1028:	00046306 	andeq	r6, r4, r6, lsl #6
    102c:	7a040d00 	bvc	104434 <__RAM_SIZE+0x4434>
    1030:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    1034:	048e0f01 	streq	r0, [lr], #3841	; 0xf01
    1038:	29050000 	stmdbcs	r5, {}	; <UNPREDICTABLE>
    103c:	00009811 	andeq	r9, r0, r1, lsl r8
    1040:	0a010100 	beq	41448 <__HEAP_SIZE+0x40448>
    1044:	0000046f 	andeq	r0, r0, pc, ror #8
    1048:	0000049b 	muleq	r0, fp, r4
    104c:	00008010 	andeq	r8, r0, r0, lsl r0
    1050:	0001ef00 	andeq	lr, r1, r0, lsl #30
    1054:	00048a06 	andeq	r8, r4, r6, lsl #20
    1058:	049e0f00 	ldreq	r0, [lr], #3840	; 0xf00
    105c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    1060:	00049b20 	andeq	r9, r4, r0, lsr #22
    1064:	11010100 	mrsne	r0, (UNDEF: 17)
    1068:	0000047c 	andeq	r0, r0, ip, ror r4
    106c:	050a3e01 	streq	r3, [sl, #-3585]	; 0xfffff1ff
    1070:	00000003 	andeq	r0, r0, r3
    1074:	a8011238 	stmdage	r1, {r3, r4, r5, r9, ip}
    1078:	01000004 	tsteq	r0, r4
    107c:	8401064c 	strhi	r0, [r1], #-1612	; 0xfffff9b4
    1080:	b0100008 	andslt	r0, r0, r8
    1084:	02100008 	andseq	r0, r0, #8
    1088:	1201007d 	andne	r0, r1, #125	; 0x7d
    108c:	00047801 	andeq	r7, r4, r1, lsl #16
    1090:	06440100 	strbeq	r0, [r4], -r0, lsl #2
    1094:	00000001 	andeq	r0, r0, r1
    1098:	00000000 	andeq	r0, r0, r0
    109c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    10a0:	1bc10001 	blne	ff0410ac <__StackTop+0xc6f410ac>
    10a4:	00020000 	andeq	r0, r2, r0
    10a8:	000002f1 	strdeq	r0, [r0], -r1
    10ac:	01890104 	orreq	r0, r9, r4, lsl #2
    10b0:	a50c0000 	strge	r0, [ip, #-0]
    10b4:	85000005 	strhi	r0, [r0, #-5]
    10b8:	60000003 	andvs	r0, r0, r3
    10bc:	00000001 	andeq	r0, r0, r1
    10c0:	00000000 	andeq	r0, r0, r0
    10c4:	ac000000 	stcge	0, cr0, [r0], {-0}
    10c8:	02000006 	andeq	r0, r0, #6
    10cc:	00680408 	rsbeq	r0, r8, r8, lsl #8
    10d0:	04020000 	streq	r0, [r2], #-0
    10d4:	0002c707 	andeq	ip, r2, r7, lsl #14
    10d8:	06010200 	streq	r0, [r1], -r0, lsl #4
    10dc:	00000273 	andeq	r0, r0, r3, ror r2
    10e0:	71080102 	tstvc	r8, r2, lsl #2
    10e4:	02000002 	andeq	r0, r0, #2
    10e8:	00320502 	eorseq	r0, r2, r2, lsl #10
    10ec:	02020000 	andeq	r0, r2, #0
    10f0:	00031a07 	andeq	r1, r3, r7, lsl #20
    10f4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    10f8:	0000012c 	andeq	r0, r0, ip, lsr #2
    10fc:	00005303 	andeq	r5, r0, r3, lsl #6
    1100:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1104:	000002c2 	andeq	r0, r0, r2, asr #5
    1108:	27050802 	strcs	r0, [r5, -r2, lsl #16]
    110c:	03000001 	movweq	r0, #1
    1110:	00000066 	andeq	r0, r0, r6, rrx
    1114:	00066304 	andeq	r6, r6, r4, lsl #6
    1118:	19690200 	stmdbne	r9!, {r9}^
    111c:	0000007e 	andeq	r0, r0, lr, ror r0
    1120:	bd070802 	stclt	8, cr0, [r7, #-8]
    1124:	05000002 	streq	r0, [r0, #-2]
    1128:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    112c:	85030074 	strhi	r0, [r3, #-116]	; 0xffffff8c
    1130:	04000000 	streq	r0, [r0], #-0
    1134:	0000068c 	andeq	r0, r0, ip, lsl #13
    1138:	301ae802 	andscc	lr, sl, r2, lsl #16
    113c:	03000000 	movweq	r0, #0
    1140:	00000030 	andeq	r0, r0, r0, lsr r0
    1144:	00066504 	andeq	r6, r6, r4, lsl #10
    1148:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
    114c:	00000072 	andeq	r0, r0, r2, ror r0
    1150:	00068e04 	andeq	r8, r6, r4, lsl #28
    1154:	15520300 	ldrbne	r0, [r2, #-768]	; 0xfffffd00
    1158:	00000091 	muleq	r0, r1, r0
    115c:	0006f604 	andeq	pc, r6, r4, lsl #12
    1160:	1b280400 	blne	a02168 <__RAM_SIZE+0x902168>
    1164:	000000c6 	andeq	r0, r0, r6, asr #1
    1168:	00059b06 	andeq	r9, r5, r6, lsl #22
    116c:	00060400 	andeq	r0, r6, r0, lsl #8
    1170:	000000e0 	andeq	r0, r0, r0, ror #1
    1174:	00064b07 	andeq	r4, r6, r7, lsl #22
    1178:	0000e000 	andeq	lr, r0, r0
    117c:	00230200 	eoreq	r0, r3, r0, lsl #4
    1180:	04080001 	streq	r0, [r8], #-1
    1184:	00059d04 	andeq	r9, r5, r4, lsl #26
    1188:	18630400 	stmdane	r3!, {sl}^
    118c:	000000ba 	strheq	r0, [r0], -sl
    1190:	00050404 	andeq	r0, r5, r4, lsl #8
    1194:	17d10500 	ldrbne	r0, [r1, r0, lsl #10]
    1198:	00000030 	andeq	r0, r0, r0, lsr r0
    119c:	0000ee03 	andeq	lr, r0, r3, lsl #28
    11a0:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    11a4:	00000063 	andeq	r0, r0, r3, rrx
    11a8:	0005e204 	andeq	lr, r5, r4, lsl #4
    11ac:	107a0100 	rsbsne	r0, sl, r0, lsl #2
    11b0:	00000112 	andeq	r0, r0, r2, lsl r1
    11b4:	01180409 	tsteq	r8, r9, lsl #8
    11b8:	010a0000 	mrseq	r0, (UNDEF: 10)
    11bc:	00000133 	andeq	r0, r0, r3, lsr r1
    11c0:	0001330b 	andeq	r3, r1, fp, lsl #6
    11c4:	00e00b00 	rsceq	r0, r0, r0, lsl #22
    11c8:	ee0b0000 	cdp	0, 0, cr0, cr11, cr0, {0}
    11cc:	0b000000 	bleq	11d4 <__HEAP_SIZE+0x1d4>
    11d0:	000000ee 	andeq	r0, r0, lr, ror #1
    11d4:	08010200 	stmdaeq	r1, {r9}
    11d8:	0000027a 	andeq	r0, r0, sl, ror r2
    11dc:	00013303 	andeq	r3, r1, r3, lsl #6
    11e0:	01080c00 	tsteq	r8, r0, lsl #24
    11e4:	0167097e 	smceq	28830	; 0x709e
    11e8:	660d0000 	strvs	r0, [sp], -r0
    11ec:	01007463 	tsteq	r0, r3, ror #8
    11f0:	01780b7f 	cmneq	r8, pc, ror fp
    11f4:	23020000 	movwcs	r0, #8192	; 0x2000
    11f8:	72610d00 	rsbvc	r0, r1, #0, 26
    11fc:	80010067 	andhi	r0, r1, r7, rrx
    1200:	0000e009 	andeq	lr, r0, r9
    1204:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1208:	78010a00 	stmdavc	r1, {r9, fp}
    120c:	0b000001 	bleq	1218 <__HEAP_SIZE+0x218>
    1210:	00000133 	andeq	r0, r0, r3, lsr r1
    1214:	0000e00b 	andeq	lr, r0, fp
    1218:	04090000 	streq	r0, [r9], #-0
    121c:	00000167 	andeq	r0, r0, r7, ror #2
    1220:	0006d804 	andeq	sp, r6, r4, lsl #16
    1224:	03810100 	orreq	r0, r1, #0, 2
    1228:	0000013f 	andeq	r0, r0, pc, lsr r1
    122c:	00017e03 	andeq	r7, r1, r3, lsl #28
    1230:	7b010e00 	blvc	44a38 <__HEAP_SIZE+0x43a38>
    1234:	01000005 	tsteq	r0, r5
    1238:	0105038a 	smlabbeq	r5, sl, r3, r0
    123c:	00000085 	andeq	r0, r0, r5, lsl #1
	...
    1248:	00000389 	andeq	r0, r0, r9, lsl #7
    124c:	00024c01 	andeq	r4, r2, r1, lsl #24
    1250:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 358 <__STACKSEAL_SIZE+0x358>
    1254:	8a010074 	bhi	4142c <__HEAP_SIZE+0x4042c>
    1258:	01781603 	cmneq	r8, r3, lsl #12
    125c:	03eb0000 	mvneq	r0, #0
    1260:	03e50000 	mvneq	r0, #0
    1264:	610f0000 	mrsvs	r0, CPSR
    1268:	01006772 	tsteq	r0, r2, ror r7
    126c:	e03d038a 	eors	r0, sp, sl, lsl #7
    1270:	1c000000 	stcne	0, cr0, [r0], {-0}
    1274:	18000004 	stmdane	r0, {r2}
    1278:	10000004 	andne	r0, r0, r4
    127c:	000005c0 	andeq	r0, r0, r0, asr #11
    1280:	4e038a01 	vmlami.f32	s16, s6, s2
    1284:	0000024c 	andeq	r0, r0, ip, asr #4
    1288:	11789102 	cmnne	r8, r2, lsl #2
    128c:	00617612 	rsbeq	r7, r1, r2, lsl r6
    1290:	0b038c01 	bleq	e429c <__HEAP_SIZE+0xe329c>
    1294:	000000e2 	andeq	r0, r0, r2, ror #1
    1298:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
    129c:	000004dc 	ldrdeq	r0, [r0], -ip
    12a0:	1b038e01 	blne	e4aac <__HEAP_SIZE+0xe3aac>
    12a4:	0000018a 	andeq	r0, r0, sl, lsl #3
    12a8:	14649102 	strbtne	r9, [r4], #-258	; 0xfffffefe
    12ac:	00746572 	rsbseq	r6, r4, r2, ror r5
    12b0:	0d038f01 	stceq	15, cr8, [r3, #-4]
    12b4:	0000008c 	andeq	r0, r0, ip, lsl #1
    12b8:	0000043f 	andeq	r0, r0, pc, lsr r4
    12bc:	0000043d 	andeq	r0, r0, sp, lsr r4
    12c0:	00000015 	andeq	r0, r0, r5, lsl r0
    12c4:	00055f00 	andeq	r5, r5, r0, lsl #30
    12c8:	50011600 	andpl	r1, r1, r0, lsl #12
    12cc:	00000305 	andeq	r0, r0, r5, lsl #6
    12d0:	01160000 	tsteq	r6, r0
    12d4:	54910251 	ldrpl	r0, [r1], #593	; 0x251
    12d8:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    12dc:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    12e0:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
    12e4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    12e8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    12ec:	04090000 	streq	r0, [r9], #-0
    12f0:	0000013a 	andeq	r0, r0, sl, lsr r1
    12f4:	05ce010e 	strbeq	r0, [lr, #270]	; 0x10e
    12f8:	84010000 	strhi	r0, [r1], #-0
    12fc:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    1308:	52000000 	andpl	r0, r0, #0
    130c:	01000004 	tsteq	r0, r4
    1310:	000002ee 	andeq	r0, r0, lr, ror #5
    1314:	0004f517 	andeq	pc, r4, r7, lsl r5	; <UNPREDICTABLE>
    1318:	03840100 	orreq	r0, r4, #0, 2
    131c:	0002ee15 	andeq	lr, r2, r5, lsl lr
    1320:	00049000 	andeq	r9, r4, r0
    1324:	00048a00 	andeq	r8, r4, r0, lsl #20
    1328:	03fd1700 	mvnseq	r1, #0, 14
    132c:	84010000 	strhi	r0, [r1], #-0
    1330:	00ee2403 	rsceq	r2, lr, r3, lsl #8
    1334:	04c20000 	strbeq	r0, [r2], #0
    1338:	04bc0000 	ldrteq	r0, [ip], #0
    133c:	c0170000 	andsgt	r0, r7, r0
    1340:	01000005 	tsteq	r0, r5
    1344:	4c370384 	ldcmi	3, cr0, [r7], #-528	; 0xfffffdf0
    1348:	f4000002 	vst4.8	{d0-d3}, [r0], r2
    134c:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
    1350:	0f000004 	svceq	0x00000004
    1354:	01006176 	tsteq	r0, r6, ror r1
    1358:	e2470384 	sub	r0, r7, #132, 6	; 0x10000002
    135c:	22000000 	andcs	r0, r0, #0
    1360:	20000005 	andcs	r0, r0, r5
    1364:	15000005 	strne	r0, [r0, #-5]
    1368:	00000000 	andeq	r0, r0, r0
    136c:	0000055f 	andeq	r0, r0, pc, asr r5
    1370:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    1374:	00000003 	andeq	r0, r0, r3
    1378:	51011600 	tstpl	r1, r0, lsl #12
    137c:	5001f303 	andpl	pc, r1, r3, lsl #6
    1380:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
    1384:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
    1388:	f3035301 	vcgt.u8	d5, d3, d1
    138c:	00005201 	andeq	r5, r0, r1, lsl #4
    1390:	01330409 	teqeq	r3, r9, lsl #8
    1394:	010e0000 	mrseq	r0, (UNDEF: 14)
    1398:	000004fc 	strdeq	r0, [r0], -ip
    139c:	05037d01 	streq	r7, [r3, #-3329]	; 0xfffff2ff
    13a0:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    13ac:	00053500 	andeq	r3, r5, r0, lsl #10
    13b0:	03740100 	cmneq	r4, #0, 2
    13b4:	c0170000 	andsgt	r0, r7, r0
    13b8:	01000005 	tsteq	r0, r5
    13bc:	4c19037d 	ldcmi	3, cr0, [r9], {125}	; 0x7d
    13c0:	73000002 	movwvc	r0, #2
    13c4:	6d000005 	stcvs	0, cr0, [r0, #-20]	; 0xffffffec
    13c8:	0f000005 	svceq	0x00000005
    13cc:	01006176 	tsteq	r0, r6, ror r1
    13d0:	e229037d 	eor	r0, r9, #-201326591	; 0xf4000001
    13d4:	a1000000 	mrsge	r0, (UNDEF: 0)
    13d8:	9f000005 	svcls	0x00000005
    13dc:	13000005 	movwne	r0, #5
    13e0:	000004f5 	strdeq	r0, [r0], -r5
    13e4:	08037f01 	stmdaeq	r3, {r0, r8, r9, sl, fp, ip, sp, lr}
    13e8:	00000374 	andeq	r0, r0, r4, ror r3
    13ec:	15749102 	ldrbne	r9, [r4, #-258]!	; 0xfffffefe
    13f0:	00000000 	andeq	r0, r0, r0
    13f4:	0000055f 	andeq	r0, r0, pc, asr r5
    13f8:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    13fc:	0019f103 	andseq	pc, r9, r3, lsl #2
    1400:	51011610 	tstpl	r1, r0, lsl r6
    1404:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
    1408:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
    140c:	530116ff 	movwpl	r1, #5887	; 0x16ff
    1410:	5001f303 	andpl	pc, r1, r3, lsl #6
    1414:	33180000 	tstcc	r8, #0
    1418:	84000001 	strhi	r0, [r0], #-1
    141c:	19000003 	stmdbne	r0, {r0, r1}
    1420:	00000030 	andeq	r0, r0, r0, lsr r0
    1424:	010e0000 	mrseq	r0, (UNDEF: 14)
    1428:	000005cf 	andeq	r0, r0, pc, asr #11
    142c:	05037301 	streq	r7, [r3, #-769]	; 0xfffffcff
    1430:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    143c:	0005b400 	andeq	fp, r5, r0, lsl #8
    1440:	04330100 	ldrteq	r0, [r3], #-256	; 0xffffff00
    1444:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    1448:	01000004 	tsteq	r0, r4
    144c:	ee140373 	mrc	3, 0, r0, cr4, cr3, {3}
    1450:	16000002 	strne	r0, [r0], -r2
    1454:	10000006 	andne	r0, r0, r6
    1458:	17000006 	strne	r0, [r0, -r6]
    145c:	000003fd 	strdeq	r0, [r0], -sp
    1460:	23037301 	movwcs	r7, #13057	; 0x3301
    1464:	000000ee 	andeq	r0, r0, lr, ror #1
    1468:	00000648 	andeq	r0, r0, r8, asr #12
    146c:	00000642 	andeq	r0, r0, r2, asr #12
    1470:	0005c010 	andeq	ip, r5, r0, lsl r0
    1474:	03730100 	cmneq	r3, #0, 2
    1478:	00024c36 	andeq	r4, r2, r6, lsr ip
    147c:	78910200 	ldmvc	r1, {r9}
    1480:	61761211 	cmnvs	r6, r1, lsl r2
    1484:	03750100 	cmneq	r5, #0, 2
    1488:	0000e20b 	andeq	lr, r0, fp, lsl #4
    148c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1490:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    1494:	03770100 	cmneq	r7, #0, 2
    1498:	00008c0d 	andeq	r8, r0, sp, lsl #24
    149c:	00067600 	andeq	r7, r6, r0, lsl #12
    14a0:	00067400 	andeq	r7, r6, r0, lsl #8
    14a4:	00001500 	andeq	r1, r0, r0, lsl #10
    14a8:	055f0000 	ldrbeq	r0, [pc, #-0]	; 14b0 <__HEAP_SIZE+0x4b0>
    14ac:	01160000 	tsteq	r6, r0
    14b0:	00030550 	andeq	r0, r3, r0, asr r5
    14b4:	16000000 	strne	r0, [r0], -r0
    14b8:	f3035101 	vrhadd.u8	d5, d3, d1
    14bc:	01165001 	tsteq	r6, r1
    14c0:	01f30352 	mvnseq	r0, r2, asr r3
    14c4:	53011651 	movwpl	r1, #5713	; 0x1651
    14c8:	06689103 	strbteq	r9, [r8], -r3, lsl #2
    14cc:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    14d0:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    14d4:	09010e00 	stmdbeq	r1, {r9, sl, fp}
    14d8:	01000006 	tsteq	r0, r6
    14dc:	01050369 	tsteq	r5, r9, ror #6
    14e0:	00000085 	andeq	r0, r0, r5, lsl #1
	...
    14ec:	00000689 	andeq	r0, r0, r9, lsl #13
    14f0:	0004cc01 	andeq	ip, r4, r1, lsl #24
    14f4:	04f51700 	ldrbteq	r1, [r5], #1792	; 0x700
    14f8:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    14fc:	02ee1303 	rsceq	r1, lr, #201326592	; 0xc000000
    1500:	06eb0000 	strbteq	r0, [fp], r0
    1504:	06e50000 	strbteq	r0, [r5], r0
    1508:	c0100000 	andsgt	r0, r0, r0
    150c:	01000005 	tsteq	r0, r5
    1510:	4c270369 	stcmi	3, cr0, [r7], #-420	; 0xfffffe5c
    1514:	02000002 	andeq	r0, r0, #2
    1518:	12117491 	andsne	r7, r1, #-1862270976	; 0x91000000
    151c:	01006176 	tsteq	r0, r6, ror r1
    1520:	e20b036b 	and	r0, fp, #-1409286143	; 0xac000001
    1524:	02000000 	andeq	r0, r0, #0
    1528:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    152c:	01007465 	tsteq	r0, r5, ror #8
    1530:	8c0d036d 	stchi	3, cr0, [sp], {109}	; 0x6d
    1534:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1538:	17000007 	strne	r0, [r0, -r7]
    153c:	15000007 	strne	r0, [r0, #-7]
    1540:	00000000 	andeq	r0, r0, r0
    1544:	0000055f 	andeq	r0, r0, pc, asr r5
    1548:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    154c:	00000003 	andeq	r0, r0, r3
    1550:	51011600 	tstpl	r1, r0, lsl #12
    1554:	5001f303 	andpl	pc, r1, r3, lsl #6
    1558:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    155c:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    1560:	5c910353 	ldcpl	3, cr0, [r1], {83}	; 0x53
    1564:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1568:	60910200 	addsvs	r0, r1, r0, lsl #4
    156c:	010e0000 	mrseq	r0, (UNDEF: 14)
    1570:	000005d1 	ldrdeq	r0, [r0], -r1
    1574:	05035e01 	streq	r5, [r3, #-3585]	; 0xfffff1ff
    1578:	00008501 	andeq	r8, r0, r1, lsl #10
    157c:	0019fc00 	andseq	pc, r9, r0, lsl #24
    1580:	001a2810 	andseq	r2, sl, r0, lsl r8
    1584:	00072c10 	andeq	r2, r7, r0, lsl ip
    1588:	055f0100 	ldrbeq	r0, [pc, #-256]	; 1490 <__HEAP_SIZE+0x490>
    158c:	c0100000 	andsgt	r0, r0, r0
    1590:	01000005 	tsteq	r0, r5
    1594:	4c18035e 	ldcmi	3, cr0, [r8], {94}	; 0x5e
    1598:	02000002 	andeq	r0, r0, #2
    159c:	12117091 	andsne	r7, r1, #145	; 0x91
    15a0:	01006176 	tsteq	r0, r6, ror r1
    15a4:	e20b0360 	and	r0, fp, #96, 6	; 0x80000001
    15a8:	02000000 	andeq	r0, r0, #0
    15ac:	f5136491 			; <UNDEFINED> instruction: 0xf5136491
    15b0:	01000004 	tsteq	r0, r4
    15b4:	74080362 	strvc	r0, [r8], #-866	; 0xfffffc9e
    15b8:	02000003 	andeq	r0, r0, #3
    15bc:	72146091 	andsvc	r6, r4, #145	; 0x91
    15c0:	01007465 	tsteq	r0, r5, ror #8
    15c4:	8c0d0363 	stchi	3, cr0, [sp], {99}	; 0x63
    15c8:	8a000000 	bhi	15d0 <__HEAP_SIZE+0x5d0>
    15cc:	88000007 	stmdahi	r0, {r0, r1, r2}
    15d0:	15000007 	strne	r0, [r0, #-7]
    15d4:	10001a18 	andne	r1, r0, r8, lsl sl
    15d8:	0000055f 	andeq	r0, r0, pc, asr r5
    15dc:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    15e0:	0019f103 	andseq	pc, r9, r3, lsl #2
    15e4:	51011610 	tstpl	r1, r0, lsl r6
    15e8:	16409102 	strbne	r9, [r0], -r2, lsl #2
    15ec:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
    15f0:	530116ff 	movwpl	r1, #5887	; 0x16ff
    15f4:	06509103 	ldrbeq	r9, [r0], -r3, lsl #2
    15f8:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    15fc:	00549102 	subseq	r9, r4, r2, lsl #2
    1600:	05cd1a00 	strbeq	r1, [sp, #2560]	; 0xa00
    1604:	41010000 	mrsmi	r0, (UNDEF: 1)
    1608:	85010c02 	strhi	r0, [r1, #-3074]	; 0xfffff3fe
    160c:	70000000 	andvc	r0, r0, r0
    1610:	f0100013 			; <UNDEFINED> instruction: 0xf0100013
    1614:	9d100019 	ldcls	0, cr0, [r0, #-100]	; 0xffffff9c
    1618:	01000007 	tsteq	r0, r7
    161c:	00000b7d 	andeq	r0, r0, sp, ror fp
    1620:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1624:	02410100 	subeq	r0, r1, #0, 2
    1628:	00010624 	andeq	r0, r1, r4, lsr #12
    162c:	0007de00 	andeq	sp, r7, r0, lsl #28
    1630:	0007d600 	andeq	sp, r7, r0, lsl #12
    1634:	04f51700 	ldrbteq	r1, [r5], #1792	; 0x700
    1638:	41010000 	mrsmi	r0, (UNDEF: 1)
    163c:	02ee2f02 	rsceq	r2, lr, #2, 30
    1640:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    1644:	08120000 	ldmdaeq	r2, {}	; <UNPREDICTABLE>
    1648:	33170000 	tstcc	r7, #0
    164c:	01000006 	tsteq	r0, r6
    1650:	fa440241 	blx	1101f5c <__RAM_SIZE+0x1001f5c>
    1654:	70000000 	andvc	r0, r0, r0
    1658:	5e000008 	cdppl	0, 0, cr0, cr0, cr8, {0}
    165c:	17000008 	strne	r0, [r0, -r8]
    1660:	000005c0 	andeq	r0, r0, r0, asr #11
    1664:	58024101 	stmdapl	r2, {r0, r8, lr}
    1668:	0000024c 	andeq	r0, r0, ip, asr #4
    166c:	000008e2 	andeq	r0, r0, r2, ror #17
    1670:	000008de 	ldrdeq	r0, [r0], -lr
    1674:	0061761b 	rsbeq	r7, r1, fp, lsl r6
    1678:	68024101 	stmdavs	r2, {r0, r8, lr}
    167c:	000000e2 	andeq	r0, r0, r2, ror #1
    1680:	1c009102 	stfned	f1, [r0], {2}
    1684:	0000061e 	andeq	r0, r0, lr, lsl r6
    1688:	10024301 	andne	r4, r2, r1, lsl #6
    168c:	00000030 	andeq	r0, r0, r0, lsr r0
    1690:	00000918 	andeq	r0, r0, r8, lsl r9
    1694:	00000900 	andeq	r0, r0, r0, lsl #18
    1698:	0006f01c 	andeq	pc, r6, ip, lsl r0	; <UNPREDICTABLE>
    169c:	02430100 	subeq	r0, r3, #0, 2
    16a0:	00003017 	andeq	r3, r0, r7, lsl r0
    16a4:	0009bc00 	andeq	fp, r9, r0, lsl #24
    16a8:	0009a600 	andeq	sl, r9, r0, lsl #12
    16ac:	072a1c00 	streq	r1, [sl, -r0, lsl #24]!
    16b0:	43010000 	movwmi	r0, #4096	; 0x1000
    16b4:	00301e02 	eorseq	r1, r0, r2, lsl #28
    16b8:	0a640000 	beq	19016c0 <__RAM_SIZE+0x18016c0>
    16bc:	0a460000 	beq	11816c4 <__RAM_SIZE+0x10816c4>
    16c0:	6e140000 	cdpvs	0, 1, cr0, cr4, cr0, {0}
    16c4:	02430100 	subeq	r0, r3, #0, 2
    16c8:	00003029 	andeq	r3, r0, r9, lsr #32
    16cc:	000b2200 	andeq	r2, fp, r0, lsl #4
    16d0:	000b1400 	andeq	r1, fp, r0, lsl #8
    16d4:	64691400 	strbtvs	r1, [r9], #-1024	; 0xfffffc00
    16d8:	44010078 	strmi	r0, [r1], #-120	; 0xffffff88
    16dc:	00ee0a02 	rsceq	r0, lr, r2, lsl #20
    16e0:	0bde0000 	bleq	ff7816e8 <__StackTop+0xc76816e8>
    16e4:	0b7e0000 	bleq	1f816ec <__RAM_SIZE+0x1e816ec>
    16e8:	4c1d0000 	ldcmi	0, cr0, [sp], {-0}
    16ec:	6c100014 	ldcvs	0, cr0, [r0], {20}
    16f0:	63100014 	tstvs	r0, #20
    16f4:	12000006 	andne	r0, r0, #6
    16f8:	6c010077 	stcvs	0, cr0, [r1], {119}	; 0x77
    16fc:	008c1102 	addeq	r1, ip, r2, lsl #2
    1700:	50010000 	andpl	r0, r1, r0
    1704:	14941d00 	ldrne	r1, [r4], #3328	; 0xd00
    1708:	14a81000 	strtne	r1, [r8], #0
    170c:	06801000 	streq	r1, [r0], r0
    1710:	ea130000 	b	4c1718 <__RAM_SIZE+0x3c1718>
    1714:	01000006 	tsteq	r0, r6
    1718:	8c130280 	lfmhi	f0, 4, [r3], {128}	; 0x80
    171c:	01000000 	mrseq	r0, (UNDEF: 0)
    1720:	b61d0053 			; <UNDEFINED> instruction: 0xb61d0053
    1724:	a2100015 	andsge	r0, r0, #21
    1728:	73100017 	tstvc	r0, #23
    172c:	1c000008 	stcne	0, cr0, [r0], {8}
    1730:	00000855 	andeq	r0, r0, r5, asr r8
    1734:	1602b401 	strne	fp, [r2], -r1, lsl #8
    1738:	00000030 	andeq	r0, r0, r0, lsr r0
    173c:	00000e14 	andeq	r0, r0, r4, lsl lr
    1740:	00000df8 	strdeq	r0, [r0], -r8
    1744:	0001481e 	andeq	r4, r1, lr, lsl r8
    1748:	0006e900 	andeq	lr, r6, r0, lsl #18
    174c:	009e1f00 	addseq	r1, lr, r0, lsl #30
    1750:	d6010000 	strle	r0, [r1], -r0
    1754:	006d1d02 	rsbeq	r1, sp, r2, lsl #26
    1758:	cc150000 	ldcgt	0, cr0, [r5], {-0}
    175c:	7c100016 	ldcvc	0, cr0, [r0], {22}
    1760:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1764:	77025001 	strvc	r5, [r2, -r1]
    1768:	51011600 	tstpl	r1, r0, lsl #12
    176c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1770:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1774:	53011600 	movwpl	r1, #5632	; 0x1600
    1778:	16007602 	strne	r7, [r0], -r2, lsl #12
    177c:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    1780:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1784:	75021c7d 	strvc	r1, [r2, #-3197]	; 0xfffff383
    1788:	1d000000 	stcne	0, cr0, [r0, #-0]
    178c:	100016d8 	ldrdne	r1, [r0], -r8
    1790:	10001708 	andne	r1, r0, r8, lsl #14
    1794:	0000073e 	andeq	r0, r0, lr, lsr r7
    1798:	00009e13 	andeq	r9, r0, r3, lsl lr
    179c:	02db0100 	sbcseq	r0, fp, #0, 2
    17a0:	00005a18 	andeq	r5, r0, r8, lsl sl
    17a4:	15520100 	ldrbne	r0, [r2, #-256]	; 0xffffff00
    17a8:	10001706 	andne	r1, r0, r6, lsl #14
    17ac:	0000150f 	andeq	r1, r0, pc, lsl #10
    17b0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    17b4:	01160077 	tsteq	r6, r7, ror r0
    17b8:	00780251 	rsbseq	r0, r8, r1, asr r2
    17bc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    17c0:	01160074 	tsteq	r6, r4, ror r0
    17c4:	00760253 	rsbseq	r0, r6, r3, asr r2
    17c8:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    17cc:	16007b02 	strne	r7, [r0], -r2, lsl #22
    17d0:	03107d02 	tsteq	r0, #2, 26	; 0x80
    17d4:	16064891 			; <UNDEFINED> instruction: 0x16064891
    17d8:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    17dc:	00000075 	andeq	r0, r0, r5, ror r0
    17e0:	0001301e 	andeq	r3, r1, lr, lsl r0
    17e4:	00079500 	andeq	r9, r7, r0, lsl #10
    17e8:	009e1c00 	addseq	r1, lr, r0, lsl #24
    17ec:	df010000 	svcle	0x00010000
    17f0:	008c1702 	addeq	r1, ip, r2, lsl #14
    17f4:	0ec50000 	cdpeq	0, 12, cr0, cr5, cr0, {0}
    17f8:	0ec30000 	cdpeq	0, 12, cr0, cr3, cr0, {0}
    17fc:	86150000 	ldrhi	r0, [r5], -r0
    1800:	0f100016 	svceq	0x00100016
    1804:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1808:	77025001 	strvc	r5, [r2, -r1]
    180c:	51011600 	tstpl	r1, r0, lsl #12
    1810:	16007802 	strne	r7, [r0], -r2, lsl #16
    1814:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1818:	53011600 	movwpl	r1, #5632	; 0x1600
    181c:	16007602 	strne	r7, [r0], -r2, lsl #12
    1820:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1824:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1828:	9103107d 	tstls	r3, sp, ror r0
    182c:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1830:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    1834:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    1838:	00000118 	andeq	r0, r0, r8, lsl r1
    183c:	000007f2 	strdeq	r0, [r0], -r2
    1840:	00009e1c 	andeq	r9, r0, ip, lsl lr
    1844:	02ee0100 	rsceq	r0, lr, #0, 2
    1848:	00009d20 	andeq	r9, r0, r0, lsr #26
    184c:	000edc00 	andeq	sp, lr, r0, lsl #24
    1850:	000ed800 	andeq	sp, lr, r0, lsl #16
    1854:	16301500 	ldrtne	r1, [r0], -r0, lsl #10
    1858:	150f1000 	strne	r1, [pc, #-0]	; 1860 <__HEAP_SIZE+0x860>
    185c:	01160000 	tsteq	r6, r0
    1860:	00770250 	rsbseq	r0, r7, r0, asr r2
    1864:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1868:	01160078 	tsteq	r6, r8, ror r0
    186c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1870:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1874:	02160076 	andseq	r0, r6, #118	; 0x76
    1878:	3001047d 	andcc	r0, r1, sp, ror r4
    187c:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1880:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1884:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1888:	16064891 			; <UNDEFINED> instruction: 0x16064891
    188c:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1890:	00000075 	andeq	r0, r0, r5, ror r0
    1894:	00175a20 	andseq	r5, r7, r0, lsr #20
    1898:	00137c10 	andseq	r7, r3, r0, lsl ip
    189c:	00083400 	andeq	r3, r8, r0, lsl #8
    18a0:	50011600 	andpl	r1, r1, r0, lsl #12
    18a4:	16007702 	strne	r7, [r0], -r2, lsl #14
    18a8:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    18ac:	52011600 	andpl	r1, r1, #0, 12
    18b0:	16007402 	strne	r7, [r0], -r2, lsl #8
    18b4:	76025301 	strvc	r5, [r2], -r1, lsl #6
    18b8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    18bc:	16300108 	ldrtne	r0, [r0], -r8, lsl #2
    18c0:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    18c4:	0216007b 	andseq	r0, r6, #123	; 0x7b
    18c8:	91031c7d 	tstls	r3, sp, ror ip
    18cc:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    18d0:	7502207d 	strvc	r2, [r2, #-125]	; 0xffffff83
    18d4:	84150000 	ldrhi	r0, [r5], #-0
    18d8:	0f100017 	svceq	0x00100017
    18dc:	16000015 			; <UNDEFINED> instruction: 0x16000015
    18e0:	77025001 	strvc	r5, [r2, -r1]
    18e4:	51011600 	tstpl	r1, r0, lsl #12
    18e8:	16007802 	strne	r7, [r0], -r2, lsl #16
    18ec:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    18f0:	53011600 	movwpl	r1, #5632	; 0x1600
    18f4:	16007602 	strne	r7, [r0], -r2, lsl #12
    18f8:	01047d02 	tsteq	r4, r2, lsl #26
    18fc:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1900:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1904:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1908:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    190c:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1910:	00007502 	andeq	r7, r0, r2, lsl #10
    1914:	01001e00 	tsteq	r0, r0, lsl #28
    1918:	08ec0000 	stmiaeq	ip!, {}^	; <UNPREDICTABLE>
    191c:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1920:	03090100 	movweq	r0, #37120	; 0x9100
    1924:	00003016 	andeq	r3, r0, r6, lsl r0
    1928:	000f0f00 	andeq	r0, pc, r0, lsl #30
    192c:	000efb00 	andeq	pc, lr, r0, lsl #22
    1930:	184e2100 	stmdane	lr, {r8, sp}^
    1934:	08ab1000 	stmiaeq	fp!, {ip}
    1938:	01160000 	tsteq	r6, r0
    193c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1940:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1944:	01160074 	tsteq	r6, r4, ror r0
    1948:	00760253 	rsbseq	r0, r6, r3, asr r2
    194c:	18662100 	stmdane	r6!, {r8, sp}^
    1950:	08cd1000 	stmiaeq	sp, {ip}^
    1954:	01160000 	tsteq	r6, r0
    1958:	20080250 	andcs	r0, r8, r0, asr r2
    195c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1960:	01160078 	tsteq	r6, r8, ror r0
    1964:	7f7a0252 	svcvc	0x007a0252
    1968:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    196c:	22000076 	andcs	r0, r0, #118	; 0x76
    1970:	10001892 	mulne	r0, r2, r8
    1974:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1978:	01162008 	tsteq	r6, r8
    197c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1980:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1984:	01167f75 	tsteq	r6, r5, ror pc
    1988:	00760253 	rsbseq	r0, r6, r3, asr r2
    198c:	a21d0000 	andsge	r0, sp, #0
    1990:	6c100018 	ldcvs	0, cr0, [r0], {24}
    1994:	b1100019 	tstlt	r0, r9, lsl r0
    1998:	14000009 	strne	r0, [r0], #-9
    199c:	1d010070 	stcne	0, cr0, [r1, #-448]	; 0xfffffe40
    19a0:	024c1503 	subeq	r1, ip, #12582912	; 0xc00000
    19a4:	0f8b0000 	svceq	0x008b0000
    19a8:	0f870000 	svceq	0x00870000
    19ac:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    19b0:	031e0100 	tsteq	lr, #0, 2
    19b4:	00003016 	andeq	r3, r0, r6, lsl r0
    19b8:	000fbf00 	andeq	fp, pc, r0, lsl #30
    19bc:	000fa900 	andeq	sl, pc, r0, lsl #18
    19c0:	19642300 	stmdbne	r4!, {r8, r9, sp}^
    19c4:	18ba0000 	ldmne	sl!, {}	; <UNPREDICTABLE>
    19c8:	18d01000 	ldmne	r0, {ip}^
    19cc:	1e011000 	cdpne	0, 0, cr1, cr1, cr0, {0}
    19d0:	09541a03 	ldmdbeq	r4, {r0, r1, r9, fp, ip}^
    19d4:	82240000 	eorhi	r0, r4, #0
    19d8:	48000019 	stmdami	r0, {r0, r3, r4}
    19dc:	42000010 	andmi	r0, r0, #16
    19e0:	25000010 	strcs	r0, [r0, #-16]
    19e4:	00001976 	andeq	r1, r0, r6, ror r9
    19e8:	00198e26 	andseq	r8, r9, r6, lsr #28
    19ec:	00107300 	andseq	r7, r0, r0, lsl #6
    19f0:	00107100 	andseq	r7, r0, r0, lsl #2
    19f4:	08210000 	stmdaeq	r1!, {}	; <UNPREDICTABLE>
    19f8:	76100019 			; <UNDEFINED> instruction: 0x76100019
    19fc:	16000009 	strne	r0, [r0], -r9
    1a00:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1a04:	51011620 	tstpl	r1, r0, lsr #12
    1a08:	16007802 	strne	r7, [r0], -r2, lsl #16
    1a0c:	79025201 	stmdbvc	r2, {r0, r9, ip, lr}
    1a10:	5301167f 	movwpl	r1, #5759	; 0x167f
    1a14:	00007602 	andeq	r7, r0, r2, lsl #12
    1a18:	00192a21 	andseq	r2, r9, r1, lsr #20
    1a1c:	00099210 	andeq	r9, r9, r0, lsl r2
    1a20:	51011600 	tstpl	r1, r0, lsl #12
    1a24:	16007802 	strne	r7, [r0], -r2, lsl #16
    1a28:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    1a2c:	5301167f 	movwpl	r1, #5759	; 0x167f
    1a30:	00007b02 	andeq	r7, r0, r2, lsl #22
    1a34:	00195c22 	andseq	r5, r9, r2, lsr #24
    1a38:	50011610 	andpl	r1, r1, r0, lsl r6
    1a3c:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1a40:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1a44:	52011600 	andpl	r1, r1, #0, 12
    1a48:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    1a4c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1a50:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a54:	1000196c 	andne	r1, r0, ip, ror #18
    1a58:	100019a2 	andne	r1, r0, r2, lsr #19
    1a5c:	00000a16 	andeq	r0, r0, r6, lsl sl
    1a60:	0007241c 	andeq	r2, r7, ip, lsl r4
    1a64:	033a0100 	teqeq	sl, #0, 2
    1a68:	000b8414 	andeq	r8, fp, r4, lsl r4
    1a6c:	00108800 	andseq	r8, r0, r0, lsl #16
    1a70:	00108600 	andseq	r8, r0, r0, lsl #12
    1a74:	19981500 	ldmibne	r8, {r8, sl, ip}
    1a78:	150f1000 	strne	r1, [pc, #-0]	; 1a80 <__HEAP_SIZE+0xa80>
    1a7c:	01160000 	tsteq	r6, r0
    1a80:	00770250 	rsbseq	r0, r7, r0, asr r2
    1a84:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1a88:	01160078 	tsteq	r6, r8, ror r0
    1a8c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1a90:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1a94:	02160076 	andseq	r0, r6, #118	; 0x76
    1a98:	3001047d 	andcc	r0, r1, sp, ror r4
    1a9c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1aa0:	02164001 	andseq	r4, r6, #1
    1aa4:	7b020c7d 	blvc	84ca0 <__HEAP_SIZE+0x83ca0>
    1aa8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1aac:	16380110 			; <UNDEFINED> instruction: 0x16380110
    1ab0:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1ab4:	00000075 	andeq	r0, r0, r5, ror r0
    1ab8:	00194627 	andseq	r4, r9, r7, lsr #12
    1abc:	0013d000 	andseq	sp, r3, r0
    1ac0:	d0000310 	andle	r0, r0, r0, lsl r3
    1ac4:	d6100013 			; <UNDEFINED> instruction: 0xd6100013
    1ac8:	01100013 	tsteq	r0, r3, lsl r0
    1acc:	3f090268 	svccc	0x00090268
    1ad0:	2400000a 	strcs	r0, [r0], #-10
    1ad4:	00001958 	andeq	r1, r0, r8, asr r9
    1ad8:	0000109e 	muleq	r0, lr, r0
    1adc:	0000109c 	muleq	r0, ip, r0
    1ae0:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    1ae4:	14760000 	ldrbtne	r0, [r6], #-0
    1ae8:	00001000 	andeq	r1, r0, r0
    1aec:	10001476 	andne	r1, r0, r6, ror r4
    1af0:	1000147c 	andne	r1, r0, ip, ror r4
    1af4:	0b027c01 	bleq	a0b00 <__HEAP_SIZE+0x9fb00>
    1af8:	00000a68 	andeq	r0, r0, r8, ror #20
    1afc:	00195824 	andseq	r5, r9, r4, lsr #16
    1b00:	0010b300 	andseq	fp, r0, r0, lsl #6
    1b04:	0010b100 	andseq	fp, r0, r0, lsl #2
    1b08:	9e280000 	cdpls	0, 2, cr0, cr8, cr0, {0}
    1b0c:	02100013 	andseq	r0, r0, #19
    1b10:	0a870077 	beq	fe1c1cf4 <__StackTop+0xc60c1cf4>
    1b14:	01160000 	tsteq	r6, r0
    1b18:	00780251 	rsbseq	r0, r8, r1, asr r2
    1b1c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1b20:	01160074 	tsteq	r6, r4, ror r0
    1b24:	00760253 	rsbseq	r0, r6, r3, asr r2
    1b28:	14482000 	strbne	r2, [r8], #-0
    1b2c:	18d81000 	ldmne	r8, {ip}^
    1b30:	0a9b0000 	beq	fe6c1b38 <__StackTop+0xc65c1b38>
    1b34:	01160000 	tsteq	r6, r0
    1b38:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    1b3c:	14902000 	ldrne	r2, [r0], #0
    1b40:	18d81000 	ldmne	r8, {ip}^
    1b44:	0aaf0000 	beq	febc1b4c <__StackTop+0xc6ac1b4c>
    1b48:	01160000 	tsteq	r6, r0
    1b4c:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    1b50:	17d22000 	ldrbne	r2, [r2, r0]
    1b54:	0fa81000 	svceq	0x00a81000
    1b58:	0aeb0000 	beq	ffac1b60 <__StackTop+0xc79c1b60>
    1b5c:	01160000 	tsteq	r6, r0
    1b60:	00770250 	rsbseq	r0, r7, r0, asr r2
    1b64:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1b68:	01160078 	tsteq	r6, r8, ror r0
    1b6c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1b70:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1b74:	02160076 	andseq	r0, r6, #118	; 0x76
    1b78:	7b02087d 	blvc	83d74 <__HEAP_SIZE+0x82d74>
    1b7c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1b80:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    1b84:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1b88:	00750210 	rsbseq	r0, r5, r0, lsl r2
    1b8c:	18262000 	stmdane	r6!, {sp}
    1b90:	0b891000 	bleq	fe245b98 <__StackTop+0xc6145b98>
    1b94:	0b270000 	bleq	9c1b9c <__RAM_SIZE+0x8c1b9c>
    1b98:	01160000 	tsteq	r6, r0
    1b9c:	00770250 	rsbseq	r0, r7, r0, asr r2
    1ba0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1ba4:	01160078 	tsteq	r6, r8, ror r0
    1ba8:	00740252 	rsbseq	r0, r4, r2, asr r2
    1bac:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1bb0:	02160076 	andseq	r0, r6, #118	; 0x76
    1bb4:	7b02087d 	blvc	83db0 <__HEAP_SIZE+0x82db0>
    1bb8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1bbc:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    1bc0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1bc4:	00750210 	rsbseq	r0, r5, r0, lsl r2
    1bc8:	19ae2100 	stmibne	lr!, {r8, sp}
    1bcc:	0b491000 	bleq	1245bd4 <__RAM_SIZE+0x1145bd4>
    1bd0:	01160000 	tsteq	r6, r0
    1bd4:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    1bd8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1bdc:	01160078 	tsteq	r6, r8, ror r0
    1be0:	00740252 	rsbseq	r0, r4, r2, asr r2
    1be4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1be8:	21000076 	tstcs	r0, r6, ror r0
    1bec:	100019c2 	andne	r1, r0, r2, asr #19
    1bf0:	00000b65 	andeq	r0, r0, r5, ror #22
    1bf4:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1bf8:	01160078 	tsteq	r6, r8, ror r0
    1bfc:	00740252 	rsbseq	r0, r4, r2, asr r2
    1c00:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1c04:	22000076 	andcs	r0, r0, #118	; 0x76
    1c08:	100019e2 	andne	r1, r0, r2, ror #19
    1c0c:	01500116 	cmpeq	r0, r6, lsl r1
    1c10:	51011630 	tstpl	r1, r0, lsr r6
    1c14:	16007802 	strne	r7, [r0], -r2, lsl #16
    1c18:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1c1c:	02000000 	andeq	r0, r0, #0
    1c20:	065d0201 	ldrbeq	r0, [sp], -r1, lsl #4
    1c24:	7d030000 	stcvc	0, cr0, [r3, #-0]
    1c28:	1a00000b 	bne	1c5c <__HEAP_SIZE+0xc5c>
    1c2c:	00000521 	andeq	r0, r0, r1, lsr #10
    1c30:	0f01d301 	svceq	0x0001d301
    1c34:	0000ee01 	andeq	lr, r0, r1, lsl #28
    1c38:	000be800 	andeq	lr, fp, r0, lsl #16
    1c3c:	000fd210 	andeq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    1c40:	0010c610 	andseq	ip, r0, r0, lsl r6
    1c44:	0fa30100 	svceq	0x00a30100
    1c48:	6f0f0000 	svcvs	0x000f0000
    1c4c:	01007475 	tsteq	r0, r5, ror r4
    1c50:	062201d3 			; <UNDEFINED> instruction: 0x062201d3
    1c54:	28000001 	stmdacs	r0, {r0}
    1c58:	24000011 	strcs	r0, [r0], #-17	; 0xffffffef
    1c5c:	17000011 	smladne	r0, r1, r0, r0
    1c60:	000004f5 	strdeq	r0, [r0], -r5
    1c64:	2d01d301 	stccs	3, cr13, [r1, #-4]
    1c68:	000002ee 	andeq	r0, r0, lr, ror #5
    1c6c:	0000114a 	andeq	r1, r0, sl, asr #2
    1c70:	00001146 	andeq	r1, r0, r6, asr #2
    1c74:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    1c78:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c7c:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    1c80:	00117e00 	andseq	r7, r1, r0, lsl #28
    1c84:	00116800 	andseq	r6, r1, r0, lsl #16
    1c88:	06331700 	ldrteq	r1, [r3], -r0, lsl #14
    1c8c:	d3010000 	movwle	r0, #4096	; 0x1000
    1c90:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    1c94:	12030000 	andne	r0, r3, #0
    1c98:	11ff0000 	mvnsne	r0, r0
    1c9c:	9e170000 	cdpls	0, 1, cr0, cr7, cr0, {0}
    1ca0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ca4:	295701d3 	ldmdbcs	r7, {r0, r1, r4, r6, r7, r8}^
    1ca8:	2d000000 	stccs	0, cr0, [r0, #-0]
    1cac:	21000012 	tstcs	r0, r2, lsl r0
    1cb0:	17000012 	smladne	r0, r2, r0, r0
    1cb4:	000006ea 	andeq	r0, r0, sl, ror #13
    1cb8:	6b01d301 	blvs	768c4 <__HEAP_SIZE+0x758c4>
    1cbc:	00000030 	andeq	r0, r0, r0, lsr r0
    1cc0:	0000128c 	andeq	r1, r0, ip, lsl #5
    1cc4:	00001280 	andeq	r1, r0, r0, lsl #5
    1cc8:	0006f017 	andeq	pc, r6, r7, lsl r0	; <UNPREDICTABLE>
    1ccc:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1cd0:	0000307e 	andeq	r3, r0, lr, ror r0
    1cd4:	0012de00 	andseq	sp, r2, r0, lsl #28
    1cd8:	0012da00 	andseq	sp, r2, r0, lsl #20
    1cdc:	061e1700 	ldreq	r1, [lr], -r0, lsl #14
    1ce0:	d3010000 	movwle	r0, #4096	; 0x1000
    1ce4:	00309201 	eorseq	r9, r0, r1, lsl #4
    1ce8:	13060000 	movwne	r0, #24576	; 0x6000
    1cec:	12fe0000 	rscsne	r0, lr, #0
    1cf0:	851c0000 	ldrhi	r0, [ip, #-0]
    1cf4:	01000005 	tsteq	r0, r5
    1cf8:	840e01db 	strhi	r0, [lr], #-475	; 0xfffffe25
    1cfc:	4100000b 	tstmi	r0, fp
    1d00:	3d000013 	stccc	0, cr0, [r0, #-76]	; 0xffffffb4
    1d04:	29000013 	stmdbcs	r0, {r0, r1, r4}
    1d08:	01e70108 	mvneq	r0, r8, lsl #2
    1d0c:	000c8603 	andeq	r8, ip, r3, lsl #12
    1d10:	00552a00 	subseq	r2, r5, r0, lsl #20
    1d14:	0e01e801 	cdpeq	8, 0, cr14, cr1, cr1, {0}
    1d18:	000000a2 	andeq	r0, r0, r2, lsr #1
    1d1c:	0100462a 	tsteq	r0, sl, lsr #12
    1d20:	290e01e9 	stmdbcs	lr, {r0, r3, r5, r6, r7, r8}
    1d24:	00000000 	andeq	r0, r0, r0
    1d28:	0006781c 	andeq	r7, r6, ip, lsl r8
    1d2c:	01ea0100 	mvneq	r0, r0, lsl #2
    1d30:	000c6505 	andeq	r6, ip, r5, lsl #10
    1d34:	00138500 	andseq	r8, r3, r0, lsl #10
    1d38:	00138100 	andseq	r8, r3, r0, lsl #2
    1d3c:	04d71c00 	ldrbeq	r1, [r7], #3072	; 0xc00
    1d40:	ed010000 	stc	0, cr0, [r1, #-0]
    1d44:	00850701 	addeq	r0, r5, r1, lsl #14
    1d48:	13bd0000 			; <UNDEFINED> instruction: 0x13bd0000
    1d4c:	13b10000 			; <UNDEFINED> instruction: 0x13b10000
    1d50:	e91c0000 	ldmdb	ip, {}	; <UNPREDICTABLE>
    1d54:	01000004 	tsteq	r0, r4
    1d58:	850701f0 	strhi	r0, [r7, #-496]	; 0xfffffe10
    1d5c:	1a000000 	bne	1d64 <__HEAP_SIZE+0xd64>
    1d60:	10000014 	andne	r0, r0, r4, lsl r0
    1d64:	14000014 	strne	r0, [r0], #-20	; 0xffffffec
    1d68:	f301007a 	vqadd.u8	q0, <illegal reg q0.5>, q13
    1d6c:	0fa31001 	svceq	0x00a31001
    1d70:	145c0000 	ldrbne	r0, [ip], #-0
    1d74:	145a0000 	ldrbne	r0, [sl], #-0
    1d78:	7a140000 	bvc	501d80 <__RAM_SIZE+0x401d80>
    1d7c:	f4010032 	vst4.8	{d0-d3}, [r1 :256], r2
    1d80:	0fa31001 	svceq	0x00a31001
    1d84:	147a0000 	ldrbtne	r0, [sl], #-0
    1d88:	14740000 	ldrbtne	r0, [r4], #-0
    1d8c:	0b1c0000 	bleq	701d94 <__RAM_SIZE+0x601d94>
    1d90:	01000005 	tsteq	r0, r5
    1d94:	301001ff 			; <UNDEFINED> instruction: 0x301001ff
    1d98:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    1d9c:	ac000014 	stcge	0, cr0, [r0], {20}
    1da0:	1c000014 	stcne	0, cr0, [r0], {20}
    1da4:	000006ef 	andeq	r0, r0, pc, ror #13
    1da8:	10021901 	andne	r1, r2, r1, lsl #18
    1dac:	00000030 	andeq	r0, r0, r0, lsr r0
    1db0:	0000150f 	andeq	r1, r0, pc, lsl #10
    1db4:	00001505 	andeq	r1, r0, r5, lsl #10
    1db8:	0005711c 	andeq	r7, r5, ip, lsl r1
    1dbc:	022c0100 	eoreq	r0, ip, #0, 2
    1dc0:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    1dc4:	00155100 	andseq	r5, r5, r0, lsl #2
    1dc8:	00154f00 	andseq	r4, r5, r0, lsl #30
    1dcc:	0c062b00 			; <UNDEFINED> instruction: 0x0c062b00
    1dd0:	1b1c1000 	blne	705dd8 <__RAM_SIZE+0x605dd8>
    1dd4:	1a2b0000 	bne	ac1ddc <__RAM_SIZE+0x9c1ddc>
    1dd8:	2710000c 	ldrcs	r0, [r0, -ip]
    1ddc:	2b00001b 	blcs	1e50 <__HEAP_SIZE+0xe50>
    1de0:	10000c30 	andne	r0, r0, r0, lsr ip
    1de4:	00001b32 	andeq	r1, r0, r2, lsr fp
    1de8:	000c422b 	andeq	r4, ip, fp, lsr #4
    1dec:	001b3210 	andseq	r3, fp, r0, lsl r2
    1df0:	0c7e2b00 			; <UNDEFINED> instruction: 0x0c7e2b00
    1df4:	1b3d1000 	blne	f45dfc <__RAM_SIZE+0xe45dfc>
    1df8:	882b0000 	stmdahi	fp!, {}	; <UNPREDICTABLE>
    1dfc:	4810000c 	ldmdami	r0, {r2, r3}
    1e00:	2b00001b 	blcs	1e74 <__HEAP_SIZE+0xe74>
    1e04:	10000c92 	mulne	r0, r2, ip
    1e08:	00001b53 	andeq	r1, r0, r3, asr fp
    1e0c:	000ca22b 	andeq	sl, ip, fp, lsr #4
    1e10:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1e14:	0cac2b00 	vstmiaeq	ip!, {d2-d1}
    1e18:	1b481000 	blne	1205e20 <__RAM_SIZE+0x1105e20>
    1e1c:	b82b0000 	stmdalt	fp!, {}	; <UNPREDICTABLE>
    1e20:	5310000c 	tstpl	r0, #12
    1e24:	2b00001b 	blcs	1e98 <__HEAP_SIZE+0xe98>
    1e28:	10000cbc 			; <UNDEFINED> instruction: 0x10000cbc
    1e2c:	00001b69 	andeq	r1, r0, r9, ror #22
    1e30:	000cc22b 	andeq	ip, ip, fp, lsr #4
    1e34:	001b3d10 	andseq	r3, fp, r0, lsl sp
    1e38:	0cd02b00 	vldmiaeq	r0, {d18-d17}
    1e3c:	1b481000 	blne	1205e44 <__RAM_SIZE+0x1105e44>
    1e40:	d82b0000 	stmdale	fp!, {}	; <UNPREDICTABLE>
    1e44:	5310000c 	tstpl	r0, #12
    1e48:	2b00001b 	blcs	1ebc <__HEAP_SIZE+0xebc>
    1e4c:	10000cdc 	ldrdne	r0, [r0], -ip
    1e50:	00001b69 	andeq	r1, r0, r9, ror #22
    1e54:	000cec2b 	andeq	lr, ip, fp, lsr #24
    1e58:	001b4810 	andseq	r4, fp, r0, lsl r8
    1e5c:	0cf62b00 	vldmiaeq	r6!, {d18-d17}
    1e60:	1b3d1000 	blne	f45e68 <__RAM_SIZE+0xe45e68>
    1e64:	002b0000 	eoreq	r0, fp, r0
    1e68:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1e6c:	2b00001b 	blcs	1ee0 <__HEAP_SIZE+0xee0>
    1e70:	10000d0c 	andne	r0, r0, ip, lsl #26
    1e74:	00001b5e 	andeq	r1, r0, lr, asr fp
    1e78:	000d182b 	andeq	r1, sp, fp, lsr #16
    1e7c:	001b4810 	andseq	r4, fp, r0, lsl r8
    1e80:	0d3c2b00 	vldmdbeq	ip!, {d2-d1}
    1e84:	1b531000 	blne	14c5e8c <__RAM_SIZE+0x13c5e8c>
    1e88:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    1e8c:	5e10000d 	cdppl	0, 1, cr0, cr0, cr13, {0}
    1e90:	2b00001b 	blcs	1f04 <__HEAP_SIZE+0xf04>
    1e94:	10000d5e 	andne	r0, r0, lr, asr sp
    1e98:	00001b74 	andeq	r1, r0, r4, ror fp
    1e9c:	000d662b 	andeq	r6, sp, fp, lsr #12
    1ea0:	001b5310 	andseq	r5, fp, r0, lsl r3
    1ea4:	0d722b00 	vldmdbeq	r2!, {d18-d17}
    1ea8:	1b741000 	blne	1d05eb0 <__RAM_SIZE+0x1c05eb0>
    1eac:	7a2b0000 	bvc	ac1eb4 <__RAM_SIZE+0x9c1eb4>
    1eb0:	5310000d 	tstpl	r0, #13
    1eb4:	2b00001b 	blcs	1f28 <__HEAP_SIZE+0xf28>
    1eb8:	10000d86 	andne	r0, r0, r6, lsl #27
    1ebc:	00001b74 	andeq	r1, r0, r4, ror fp
    1ec0:	000d922b 	andeq	r9, sp, fp, lsr #4
    1ec4:	001b5310 	andseq	r5, fp, r0, lsl r3
    1ec8:	0d9e2b00 	vldreq	d2, [lr]
    1ecc:	1b741000 	blne	1d05ed4 <__RAM_SIZE+0x1c05ed4>
    1ed0:	a62b0000 	strtge	r0, [fp], -r0
    1ed4:	5310000d 	tstpl	r0, #13
    1ed8:	2b00001b 	blcs	1f4c <__HEAP_SIZE+0xf4c>
    1edc:	10000dae 	andne	r0, r0, lr, lsr #27
    1ee0:	00001b48 	andeq	r1, r0, r8, asr #22
    1ee4:	000dbe2b 	andeq	fp, sp, fp, lsr #28
    1ee8:	001b2710 	andseq	r2, fp, r0, lsl r7
    1eec:	0dce2b00 	vstreq	d18, [lr]
    1ef0:	1b741000 	blne	1d05ef8 <__RAM_SIZE+0x1c05ef8>
    1ef4:	f62b0000 			; <UNDEFINED> instruction: 0xf62b0000
    1ef8:	7f10000d 	svcvc	0x0010000d
    1efc:	2b00001b 	blcs	1f70 <__HEAP_SIZE+0xf70>
    1f00:	10000e08 	andne	r0, r0, r8, lsl #28
    1f04:	00001b32 	andeq	r1, r0, r2, lsr fp
    1f08:	000e3a20 	andeq	r3, lr, r0, lsr #20
    1f0c:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1f10:	000eae00 	andeq	sl, lr, r0, lsl #28
    1f14:	50011600 	andpl	r1, r1, r0, lsl #12
    1f18:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1f1c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1f20:	52011600 	andpl	r1, r1, #0, 12
    1f24:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1f28:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1f2c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1f30:	00910500 	addseq	r0, r1, r0, lsl #10
    1f34:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    1f38:	03087d02 	movweq	r7, #36098	; 0x8d02
    1f3c:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1f40:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1f44:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1f48:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1f4c:	00061091 	muleq	r6, r1, r0
    1f50:	000f142b 	andeq	r1, pc, fp, lsr #8
    1f54:	001b7410 	andseq	r7, fp, r0, lsl r4
    1f58:	0f242b00 	svceq	0x00242b00
    1f5c:	1b321000 	blne	c85f64 <__RAM_SIZE+0xb85f64>
    1f60:	4c200000 	stcmi	0, cr0, [r0], #-0
    1f64:	a810000f 	ldmdage	r0, {r0, r1, r2, r3}
    1f68:	0c00000f 	stceq	0, cr0, [r0], {15}
    1f6c:	1600000f 	strne	r0, [r0], -pc
    1f70:	7a025001 	bvc	95f7c <__HEAP_SIZE+0x94f7c>
    1f74:	51011600 	tstpl	r1, r0, lsl #12
    1f78:	16007402 	strne	r7, [r0], -r2, lsl #8
    1f7c:	7b025201 	blvc	96788 <__HEAP_SIZE+0x95788>
    1f80:	53011600 	movwpl	r1, #5632	; 0x1600
    1f84:	16007502 	strne	r7, [r0], -r2, lsl #10
    1f88:	06007d02 	streq	r7, [r0], -r2, lsl #26
    1f8c:	f67fa891 			; <UNDEFINED> instruction: 0xf67fa891
    1f90:	02162908 	andseq	r2, r6, #8, 18	; 0x20000
    1f94:	9103087d 	tstls	r3, sp, ror r8
    1f98:	02160608 	andseq	r0, r6, #8, 12	; 0x800000
    1f9c:	78020c7d 	stmdavc	r2, {r0, r2, r3, r4, r5, r6, sl, fp}
    1fa0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1fa4:	10910710 	addsne	r0, r1, r0, lsl r7
    1fa8:	f7ff0b06 			; <UNDEFINED> instruction: 0xf7ff0b06
    1fac:	6c21001a 	stcvs	0, cr0, [r1], #-104	; 0xffffff98
    1fb0:	2810000f 	ldmdacs	r0, {r0, r1, r2, r3}
    1fb4:	1600000f 	strne	r0, [r0], -pc
    1fb8:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1fbc:	52011600 	andpl	r1, r1, #0, 12
    1fc0:	167f7802 	ldrbtne	r7, [pc], -r2, lsl #16
    1fc4:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1fc8:	96200000 	strtls	r0, [r0], -r0
    1fcc:	0f10000f 	svceq	0x0010000f
    1fd0:	84000015 	strhi	r0, [r0], #-21	; 0xffffffeb
    1fd4:	1600000f 	strne	r0, [r0], -pc
    1fd8:	7a025001 	bvc	95fe4 <__HEAP_SIZE+0x94fe4>
    1fdc:	51011600 	tstpl	r1, r0, lsl #12
    1fe0:	16007402 	strne	r7, [r0], -r2, lsl #8
    1fe4:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    1fe8:	53011600 	movwpl	r1, #5632	; 0x1600
    1fec:	16007502 	strne	r7, [r0], -r2, lsl #10
    1ff0:	0c007d02 	stceq	13, cr7, [r0], {2}
    1ff4:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    1ff8:	76270076 			; <UNDEFINED> instruction: 0x76270076
    1ffc:	1c264f00 	stcne	15, cr4, [r6], #-0
    2000:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2004:	4f007604 	svcmi	0x00007604
    2008:	7d021625 	stcvc	6, cr1, [r2, #-148]	; 0xffffff6c
    200c:	163a0108 	ldrtne	r0, [sl], -r8, lsl #2
    2010:	040c7d02 	streq	r7, [ip], #-3330	; 0xfffff2fe
    2014:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    2018:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    201c:	16007702 	strne	r7, [r0], -r2, lsl #14
    2020:	01147d02 	tsteq	r4, r2, lsl #26
    2024:	c4220035 	strtgt	r0, [r2], #-53	; 0xffffffcb
    2028:	1610000f 	ldrne	r0, [r0], -pc
    202c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    2030:	51011620 	tstpl	r1, r0, lsr #12
    2034:	16007402 	strne	r7, [r0], -r2, lsl #8
    2038:	76025201 	strvc	r5, [r2], -r1, lsl #4
    203c:	5301167f 	movwpl	r1, #5759	; 0x167f
    2040:	00007502 	andeq	r7, r0, r2, lsl #10
    2044:	00290300 	eoreq	r0, r9, r0, lsl #6
    2048:	c71a0000 	ldrgt	r0, [sl, -r0]
    204c:	01000005 	tsteq	r0, r5
    2050:	010f0153 	tsteq	pc, r3, asr r1	; <UNPREDICTABLE>
    2054:	000000ee 	andeq	r0, r0, lr, ror #1
    2058:	10000fd8 	ldrdne	r0, [r0], -r8
    205c:	1000136e 	andne	r1, r0, lr, ror #6
    2060:	00001564 	andeq	r1, r0, r4, ror #10
    2064:	00135701 	andseq	r5, r3, r1, lsl #14
    2068:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 1170 <__HEAP_SIZE+0x170>
    206c:	53010074 	movwpl	r0, #4212	; 0x1074
    2070:	01062201 	tsteq	r6, r1, lsl #4
    2074:	15c60000 	strbne	r0, [r6]
    2078:	15c20000 	strbne	r0, [r2]
    207c:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    2080:	01000004 	tsteq	r0, r4
    2084:	ee2d0153 	mcr	1, 1, r0, cr13, cr3, {2}
    2088:	ea000002 	b	2098 <__HEAP_SIZE+0x1098>
    208c:	e6000015 			; <UNDEFINED> instruction: 0xe6000015
    2090:	0f000015 	svceq	0x00000015
    2094:	00786469 	rsbseq	r6, r8, r9, ror #8
    2098:	3c015301 	stccc	3, cr5, [r1], {1}
    209c:	000000ee 	andeq	r0, r0, lr, ror #1
    20a0:	0000160e 	andeq	r1, r0, lr, lsl #12
    20a4:	0000160a 	andeq	r1, r0, sl, lsl #12
    20a8:	00063317 	andeq	r3, r6, r7, lsl r3
    20ac:	01530100 	cmpeq	r3, r0, lsl #2
    20b0:	0000ee48 	andeq	lr, r0, r8, asr #28
    20b4:	00163000 	andseq	r3, r6, r0
    20b8:	00162c00 	andseq	r2, r6, r0, lsl #24
    20bc:	009e1700 	addseq	r1, lr, r0, lsl #14
    20c0:	53010000 	movwpl	r0, #4096	; 0x1000
    20c4:	00295701 	eoreq	r5, r9, r1, lsl #14
    20c8:	16580000 	ldrbne	r0, [r8], -r0
    20cc:	164e0000 	strbne	r0, [lr], -r0
    20d0:	ea170000 	b	5c20d8 <__RAM_SIZE+0x4c20d8>
    20d4:	01000006 	tsteq	r0, r6
    20d8:	306b0153 	rsbcc	r0, fp, r3, asr r1
    20dc:	b0000000 	andlt	r0, r0, r0
    20e0:	a8000016 	stmdage	r0, {r1, r2, r4}
    20e4:	17000016 	smladne	r0, r6, r0, r0
    20e8:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    20ec:	7e015301 	cdpvc	3, 0, cr5, cr1, cr1, {0}
    20f0:	00000030 	andeq	r0, r0, r0, lsr r0
    20f4:	000016f0 	strdeq	r1, [r0], -r0
    20f8:	000016e6 	andeq	r1, r0, r6, ror #13
    20fc:	00061e17 	andeq	r1, r6, r7, lsl lr
    2100:	01530100 	cmpeq	r3, r0, lsl #2
    2104:	00003092 	muleq	r0, r2, r0
    2108:	00173600 	andseq	r3, r7, r0, lsl #12
    210c:	00173200 	andseq	r3, r7, r0, lsl #4
    2110:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    2114:	55010066 	strpl	r0, [r1, #-102]	; 0xffffff9a
    2118:	13570801 	cmpne	r7, #65536	; 0x10000
    211c:	91030000 	mrsls	r0, (UNDEF: 3)
    2120:	6c147fb0 	ldcvs	15, cr7, [r4], {176}	; 0xb0
    2124:	01006e65 	tsteq	r0, r5, ror #28
    2128:	ee0a0156 	mcr	1, 0, r0, cr10, cr6, {2}
    212c:	84000000 	strhi	r0, [r0], #-0
    2130:	56000017 			; <UNDEFINED> instruction: 0x56000017
    2134:	1c000017 	stcne	0, cr0, [r0], {23}
    2138:	00000734 	andeq	r0, r0, r4, lsr r7
    213c:	0a015701 	beq	57d48 <__HEAP_SIZE+0x56d48>
    2140:	00000029 	andeq	r0, r0, r9, lsr #32
    2144:	000018a3 	andeq	r1, r0, r3, lsr #17
    2148:	00001899 	muleq	r0, r9, r8
    214c:	0004d113 	andeq	sp, r4, r3, lsl r1
    2150:	015a0100 	cmpeq	sl, r0, lsl #2
    2154:	00137717 	andseq	r7, r3, r7, lsl r7
    2158:	20030500 	andcs	r0, r3, r0, lsl #10
    215c:	1c100057 	ldcne	0, cr0, [r0], {87}	; 0x57
    2160:	00000585 	andeq	r0, r0, r5, lsl #11
    2164:	08016f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, sp, lr}
    2168:	00000b7d 	andeq	r0, r0, sp, ror fp
    216c:	00001905 	andeq	r1, r0, r5, lsl #18
    2170:	000018f9 	strdeq	r1, [r0], -r9
    2174:	0005421c 	andeq	r4, r5, ip, lsl r2
    2178:	017f0100 	cmneq	pc, r0, lsl #2
    217c:	00008507 	andeq	r8, r0, r7, lsl #10
    2180:	00196200 	andseq	r6, r9, r0, lsl #4
    2184:	00195800 	andseq	r5, r9, r0, lsl #16
    2188:	6d741400 	cfldrdvs	mvd1, [r4, #-0]
    218c:	80010070 	andhi	r0, r1, r0, ror r0
    2190:	00290a01 	eoreq	r0, r9, r1, lsl #20
    2194:	19a50000 	stmibne	r5!, {}	; <UNPREDICTABLE>
    2198:	19a10000 	stmibne	r1!, {}	; <UNPREDICTABLE>
    219c:	551c0000 	ldrpl	r0, [ip, #-0]
    21a0:	01000005 	tsteq	r0, r5
    21a4:	5f110181 	svcpl	0x00110181
    21a8:	d6000000 	strle	r0, [r0], -r0
    21ac:	ca000019 	bgt	2218 <__HEAP_SIZE+0x1218>
    21b0:	1d000019 	stcne	0, cr0, [r0, #-100]	; 0xffffff9c
    21b4:	100011f2 	strdne	r1, [r0], -r2
    21b8:	10001252 	andne	r1, r0, r2, asr r2
    21bc:	00001134 	andeq	r1, r0, r4, lsr r1
    21c0:	0003fd1c 	andeq	pc, r3, ip, lsl sp	; <UNPREDICTABLE>
    21c4:	019c0100 	orrseq	r0, ip, r0, lsl #2
    21c8:	00003012 	andeq	r3, r0, r2, lsl r0
    21cc:	001a2500 	andseq	r2, sl, r0, lsl #10
    21d0:	001a2100 	andseq	r2, sl, r0, lsl #2
    21d4:	fc2b0000 	stc2	0, cr0, [fp], #-0
    21d8:	1c10000f 	ldcne	0, cr0, [r0], {15}
    21dc:	2b00001b 	blcs	2250 <__HEAP_SIZE+0x1250>
    21e0:	10001010 	andne	r1, r0, r0, lsl r0
    21e4:	00001b32 	andeq	r1, r0, r2, lsr fp
    21e8:	0010222b 	andseq	r2, r0, fp, lsr #4
    21ec:	001b2710 	andseq	r2, fp, r0, lsl r7
    21f0:	10342b00 	eorsne	r2, r4, r0, lsl #22
    21f4:	1b271000 	blne	9c61fc <__RAM_SIZE+0x8c61fc>
    21f8:	462b0000 	strtmi	r0, [fp], -r0
    21fc:	32100010 	andscc	r0, r0, #16
    2200:	2b00001b 	blcs	2274 <__HEAP_SIZE+0x1274>
    2204:	10001056 	andne	r1, r0, r6, asr r0
    2208:	00001b32 	andeq	r1, r0, r2, lsr fp
    220c:	00109e20 	andseq	r9, r0, r0, lsr #28
    2210:	00179110 	andseq	r9, r7, r0, lsl r1
    2214:	0011b400 	andseq	fp, r1, r0, lsl #8
    2218:	50011600 	andpl	r1, r1, r0, lsl #12
    221c:	7f9c9104 	svcvc	0x009c9104
    2220:	51011606 	tstpl	r1, r6, lsl #12
    2224:	7fa89104 	svcvc	0x00a89104
    2228:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    222c:	16007a02 	strne	r7, [r0], -r2, lsl #20
    2230:	7b025301 	blvc	96e3c <__HEAP_SIZE+0x95e3c>
    2234:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2238:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    223c:	16100057 			; <UNDEFINED> instruction: 0x16100057
    2240:	01047d02 	tsteq	r4, r2, lsl #26
    2244:	7d021633 	stcvc	6, cr1, [r2, #-204]	; 0xffffff34
    2248:	0c910308 	ldceq	3, cr0, [r1], {8}
    224c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2250:	1091030c 	addsne	r0, r1, ip, lsl #6
    2254:	bc200006 	stclt	0, cr0, [r0], #-24	; 0xffffffe8
    2258:	91100010 	tstls	r0, r0, lsl r0
    225c:	fe000017 	mcr2	0, 0, r0, cr0, cr7, {0}
    2260:	16000011 			; <UNDEFINED> instruction: 0x16000011
    2264:	91045001 	tstls	r4, r1
    2268:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    226c:	91045101 	tstls	r4, r1, lsl #2
    2270:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    2274:	7a025201 	bvc	96a80 <__HEAP_SIZE+0x95a80>
    2278:	53011600 	movwpl	r1, #5632	; 0x1600
    227c:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2280:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    2284:	00571803 	subseq	r1, r7, r3, lsl #16
    2288:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    228c:	16340104 	ldrtne	r0, [r4], -r4, lsl #2
    2290:	03087d02 	movweq	r7, #36098	; 0x8d02
    2294:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2298:	030c7d02 	movweq	r7, #52482	; 0xcd02
    229c:	00061091 	muleq	r6, r1, r0
    22a0:	0010e420 	andseq	lr, r0, r0, lsr #8
    22a4:	00179110 	andseq	r9, r7, r0, lsl r1
    22a8:	00123800 	andseq	r3, r2, r0, lsl #16
    22ac:	50011600 	andpl	r1, r1, r0, lsl #12
    22b0:	7f9c9104 	svcvc	0x009c9104
    22b4:	51011606 	tstpl	r1, r6, lsl #12
    22b8:	7fa89104 	svcvc	0x00a89104
    22bc:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    22c0:	16007a02 	strne	r7, [r0], -r2, lsl #20
    22c4:	7b025301 	blvc	96ed0 <__HEAP_SIZE+0x95ed0>
    22c8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    22cc:	0c910308 	ldceq	3, cr0, [r1], {8}
    22d0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    22d4:	1091030c 	addsne	r0, r1, ip, lsl #6
    22d8:	08200006 	stmdaeq	r0!, {r1, r2}
    22dc:	89100011 	ldmdbhi	r0, {r0, r4}
    22e0:	8100000b 	tsthi	r0, fp
    22e4:	16000012 			; <UNDEFINED> instruction: 0x16000012
    22e8:	91045001 	tstls	r4, r1
    22ec:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    22f0:	91045101 	tstls	r4, r1, lsl #2
    22f4:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    22f8:	7a025201 	bvc	96b04 <__HEAP_SIZE+0x95b04>
    22fc:	53011600 	movwpl	r1, #5632	; 0x1600
    2300:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2304:	03007d02 	movweq	r7, #3330	; 0xd02
    2308:	162908f5 			; <UNDEFINED> instruction: 0x162908f5
    230c:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    2310:	02160075 	andseq	r0, r6, #117	; 0x75
    2314:	91030c7d 	tstls	r3, sp, ror ip
    2318:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    231c:	9103107d 	tstls	r3, sp, ror r0
    2320:	2b000610 	blcs	3b68 <__HEAP_SIZE+0x2b68>
    2324:	10001116 	andne	r1, r0, r6, lsl r1
    2328:	00001b5e 	andeq	r1, r0, lr, asr fp
    232c:	00112c2b 	andseq	r2, r1, fp, lsr #24
    2330:	001b6910 	andseq	r6, fp, r0, lsl r9
    2334:	11322b00 	teqne	r2, r0, lsl #22
    2338:	1b3d1000 	blne	f46340 <__RAM_SIZE+0xe46340>
    233c:	3e2b0000 	cdpcc	0, 2, cr0, cr11, cr0, {0}
    2340:	5e100011 	mrcpl	0, 0, r0, cr0, cr1, {0}
    2344:	2b00001b 	blcs	23b8 <__HEAP_SIZE+0x13b8>
    2348:	10001150 	andne	r1, r0, r0, asr r1
    234c:	00001b48 	andeq	r1, r0, r8, asr #22
    2350:	00115c2b 	andseq	r5, r1, fp, lsr #24
    2354:	001b8a10 	andseq	r8, fp, r0, lsl sl
    2358:	11622b00 	cmnne	r2, r0, lsl #22
    235c:	1b951000 	blne	fe546364 <__StackTop+0xc6446364>
    2360:	6e2b0000 	cdpvs	0, 2, cr0, cr11, cr0, {0}
    2364:	5e100011 	mrcpl	0, 0, r0, cr0, cr1, {0}
    2368:	2b00001b 	blcs	23dc <__HEAP_SIZE+0x13dc>
    236c:	1000117e 	andne	r1, r0, lr, ror r1
    2370:	00001b27 	andeq	r1, r0, r7, lsr #22
    2374:	0011882b 	andseq	r8, r1, fp, lsr #16
    2378:	001b9510 	andseq	r9, fp, r0, lsl r5
    237c:	11942b00 	orrsne	r2, r4, r0, lsl #22
    2380:	1ba01000 	blne	fe806388 <__StackTop+0xc6706388>
    2384:	a22b0000 	eorge	r0, fp, #0
    2388:	3d100011 	ldccc	0, cr0, [r0, #-68]	; 0xffffffbc
    238c:	2b00001b 	blcs	2400 <__HEAP_SIZE+0x1400>
    2390:	100011ae 	andne	r1, r0, lr, lsr #3
    2394:	00001b5e 	andeq	r1, r0, lr, asr fp
    2398:	0011ba2b 	andseq	fp, r1, fp, lsr #20
    239c:	001b3210 	andseq	r3, fp, r0, lsl r2
    23a0:	11c82b00 	bicne	r2, r8, r0, lsl #22
    23a4:	1b271000 	blne	9c63ac <__RAM_SIZE+0x8c63ac>
    23a8:	e22b0000 	eor	r0, fp, #0
    23ac:	32100011 	andscc	r0, r0, #17
    23b0:	1500001b 	strne	r0, [r0, #-27]	; 0xffffffe5
    23b4:	100012fa 	strdne	r1, [r0], -sl
    23b8:	00001791 	muleq	r0, r1, r7
    23bc:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    23c0:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    23c4:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    23c8:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    23cc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    23d0:	0116007a 	tsteq	r6, sl, ror r0
    23d4:	007b0253 	rsbseq	r0, fp, r3, asr r2
    23d8:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    23dc:	7fb09103 	svcvc	0x00b09103
    23e0:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    23e4:	16007402 	strne	r7, [r0], -r2, lsl #8
    23e8:	03087d02 	movweq	r7, #36098	; 0x8d02
    23ec:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    23f0:	030c7d02 	movweq	r7, #52482	; 0xcd02
    23f4:	00061091 	muleq	r6, r1, r0
    23f8:	01331800 	teqeq	r3, r0, lsl #16
    23fc:	13670000 	cmnne	r7, #0
    2400:	30190000 	andscc	r0, r9, r0
    2404:	1f000000 	svcne	0x00000000
    2408:	0fa31800 	svceq	0x00a31800
    240c:	13770000 	cmnne	r7, #0
    2410:	30190000 	andscc	r0, r9, r0
    2414:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2418:	13670300 	cmnne	r7, #0, 6
    241c:	141a0000 	ldrne	r0, [sl], #-0
    2420:	01000007 	tsteq	r0, r7
    2424:	010f0132 	tsteq	pc, r2, lsr r1	; <UNPREDICTABLE>
    2428:	000000ee 	andeq	r0, r0, lr, ror #1
    242c:	10000b20 	andne	r0, r0, r0, lsr #22
    2430:	10000be6 	andne	r0, r0, r6, ror #23
    2434:	00001a43 	andeq	r1, r0, r3, asr #20
    2438:	00150f01 	andseq	r0, r5, r1, lsl #30
    243c:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 1544 <__HEAP_SIZE+0x544>
    2440:	32010074 	andcc	r0, r1, #116	; 0x74
    2444:	01062c01 	tsteq	r6, r1, lsl #24
    2448:	1a840000 	bne	fe102450 <__StackTop+0xc6002450>
    244c:	1a7c0000 	bne	1f02454 <__RAM_SIZE+0x1e02454>
    2450:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    2454:	01000004 	tsteq	r0, r4
    2458:	ee370132 	mrc	1, 1, r0, cr7, cr2, {1}
    245c:	c4000002 	strgt	r0, [r0], #-2
    2460:	bc00001a 	stclt	0, cr0, [r0], {26}
    2464:	0f00001a 	svceq	0x0000001a
    2468:	00786469 	rsbseq	r6, r8, r9, ror #8
    246c:	46013201 	strmi	r3, [r1], -r1, lsl #4
    2470:	000000ee 	andeq	r0, r0, lr, ror #1
    2474:	00001b04 	andeq	r1, r0, r4, lsl #22
    2478:	00001afc 	strdeq	r1, [r0], -ip
    247c:	00063317 	andeq	r3, r6, r7, lsl r3
    2480:	01320100 	teqeq	r2, r0, lsl #2
    2484:	0000ee52 	andeq	lr, r0, r2, asr lr
    2488:	001b4000 	andseq	r4, fp, r0
    248c:	001b3c00 	andseq	r3, fp, r0, lsl #24
    2490:	009e1700 	addseq	r1, lr, r0, lsl #14
    2494:	32010000 	andcc	r0, r1, #0
    2498:	007e6d01 	rsbseq	r6, lr, r1, lsl #26
    249c:	1b680000 	blne	1a024a4 <__RAM_SIZE+0x19024a4>
    24a0:	1b5e0000 	blne	17824a8 <__RAM_SIZE+0x16824a8>
    24a4:	85100000 	ldrhi	r0, [r0, #-0]
    24a8:	01000005 	tsteq	r0, r5
    24ac:	7d790132 	ldfvce	f0, [r9, #-200]!	; 0xffffff38
    24b0:	0200000b 	andeq	r0, r0, #11
    24b4:	55100891 	ldrpl	r0, [r0, #-2193]	; 0xfffff76f
    24b8:	01000008 	tsteq	r0, r8
    24bc:	7e960132 	mrcvc	1, 4, r0, cr6, cr2, {1}
    24c0:	02000000 	andeq	r0, r0, #0
    24c4:	ea101091 	b	406710 <__RAM_SIZE+0x306710>
    24c8:	01000006 	tsteq	r0, r6
    24cc:	30a90132 	adccc	r0, r9, r2, lsr r1
    24d0:	02000000 	andeq	r0, r0, #0
    24d4:	f0101891 			; <UNDEFINED> instruction: 0xf0101891
    24d8:	01000006 	tsteq	r0, r6
    24dc:	30bc0132 	adcscc	r0, ip, r2, lsr r1
    24e0:	02000000 	andeq	r0, r0, #0
    24e4:	1e171c91 	mrcne	12, 0, r1, cr7, cr1, {4}
    24e8:	01000006 	tsteq	r0, r6
    24ec:	30d00132 	sbcscc	r0, r0, r2, lsr r1
    24f0:	bc000000 	stclt	0, cr0, [r0], {-0}
    24f4:	b800001b 	stmdalt	r0, {r0, r1, r3, r4}
    24f8:	1200001b 	andne	r0, r0, #27
    24fc:	00667562 	rsbeq	r7, r6, r2, ror #10
    2500:	08013401 	stmdaeq	r1, {r0, sl, ip, sp}
    2504:	00001357 	andeq	r1, r0, r7, asr r3
    2508:	7fb89103 	svcvc	0x00b89103
    250c:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    2510:	01350100 	teqeq	r5, r0, lsl #2
    2514:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    2518:	001be700 	andseq	lr, fp, r0, lsl #14
    251c:	001bdb00 	andseq	sp, fp, r0, lsl #22
    2520:	00e01e00 	rsceq	r1, r0, r0, lsl #28
    2524:	14b00000 	ldrtne	r0, [r0], #0
    2528:	721c0000 	andsvc	r0, ip, #0
    252c:	01000006 	tsteq	r0, r6
    2530:	3a12013f 	bcc	482a34 <__RAM_SIZE+0x382a34>
    2534:	37000001 	strcc	r0, [r0, -r1]
    2538:	3300001c 	movwcc	r0, #28
    253c:	2b00001c 	blcs	25b4 <__HEAP_SIZE+0x15b4>
    2540:	10000b78 	andne	r0, r0, r8, ror fp
    2544:	00001bab 	andeq	r1, r0, fp, lsr #23
    2548:	000b982b 	andeq	r9, fp, fp, lsr #16
    254c:	001bab10 	andseq	sl, fp, r0, lsl fp
    2550:	e0150000 	ands	r0, r5, r0
    2554:	7010000b 	andsvc	r0, r0, fp
    2558:	16000016 			; <UNDEFINED> instruction: 0x16000016
    255c:	91045001 	tstls	r4, r1
    2560:	16067fac 	strne	r7, [r6], -ip, lsr #31
    2564:	91045101 	tstls	r4, r1, lsl #2
    2568:	16067fb0 			; <UNDEFINED> instruction: 0x16067fb0
    256c:	91045201 	tstls	r4, r1, lsl #4
    2570:	16067fb4 			; <UNDEFINED> instruction: 0x16067fb4
    2574:	7b025301 	blvc	97180 <__HEAP_SIZE+0x96180>
    2578:	7d021600 	stcvc	6, cr1, [r2, #-0]
    257c:	b8910300 	ldmlt	r1, {r8, r9}
    2580:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    2584:	00790204 	rsbseq	r0, r9, r4, lsl #4
    2588:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    258c:	94089104 	strls	r9, [r8], #-260	; 0xfffffefc
    2590:	7d021601 	stcvc	6, cr1, [r2, #-4]
    2594:	0077020c 	rsbseq	r0, r7, ip, lsl #4
    2598:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    259c:	06189103 	ldreq	r9, [r8], -r3, lsl #2
    25a0:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    25a4:	061c9103 	ldreq	r9, [ip], -r3, lsl #2
    25a8:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    25ac:	00007a02 	andeq	r7, r0, r2, lsl #20
    25b0:	05fe1a00 	ldrbeq	r1, [lr, #2560]!	; 0xa00
    25b4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    25b8:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    25bc:	8c000000 	stchi	0, cr0, [r0], {-0}
    25c0:	2010000a 	andscs	r0, r0, sl
    25c4:	5510000b 	ldrpl	r0, [r0, #-11]
    25c8:	0100001c 	tsteq	r0, ip, lsl r0
    25cc:	00001670 	andeq	r1, r0, r0, ror r6
    25d0:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    25d4:	01190100 	tsteq	r9, r0, lsl #2
    25d8:	00010627 	andeq	r0, r1, r7, lsr #12
    25dc:	001c9200 	andseq	r9, ip, r0, lsl #4
    25e0:	001c8e00 	andseq	r8, ip, r0, lsl #28
    25e4:	04f51700 	ldrbteq	r1, [r5], #1792	; 0x700
    25e8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    25ec:	02ee3201 	rsceq	r3, lr, #268435456	; 0x10000000
    25f0:	1cb70000 	ldcne	0, cr0, [r7]
    25f4:	1cb30000 	ldcne	0, cr0, [r3]
    25f8:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    25fc:	01007864 	tsteq	r0, r4, ror #16
    2600:	ee410119 	mcr	1, 2, r0, cr1, cr9, {0}
    2604:	dc000000 	stcle	0, cr0, [r0], {-0}
    2608:	d800001c 	stmdale	r0, {r2, r3, r4}
    260c:	1700001c 	smladne	r0, ip, r0, r0
    2610:	00000633 	andeq	r0, r0, r3, lsr r6
    2614:	4d011901 	vstrmi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    2618:	000000ee 	andeq	r0, r0, lr, ror #1
    261c:	00001d01 	andeq	r1, r0, r1, lsl #26
    2620:	00001cfd 	strdeq	r1, [r0], -sp
    2624:	00009e17 	andeq	r9, r0, r7, lsl lr
    2628:	01190100 	tsteq	r9, r0, lsl #2
    262c:	00005f63 	andeq	r5, r0, r3, ror #30
    2630:	001d2c00 	andseq	r2, sp, r0, lsl #24
    2634:	001d2200 	andseq	r2, sp, r0, lsl #4
    2638:	05851000 	streq	r1, [r5]
    263c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2640:	0b7d6f01 	bleq	1f5e24c <__RAM_SIZE+0x1e5e24c>
    2644:	91020000 	mrsls	r0, (UNDEF: 2)
    2648:	08551004 	ldmdaeq	r5, {r2, ip}^
    264c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2650:	005f8701 	subseq	r8, pc, r1, lsl #14
    2654:	91020000 	mrsls	r0, (UNDEF: 2)
    2658:	06ea1008 	strbteq	r1, [sl], r8
    265c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2660:	00309a01 	eorseq	r9, r0, r1, lsl #20
    2664:	91020000 	mrsls	r0, (UNDEF: 2)
    2668:	06f0100c 	ldrbteq	r1, [r0], ip
    266c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2670:	0030ad01 	eorseq	sl, r0, r1, lsl #26
    2674:	91020000 	mrsls	r0, (UNDEF: 2)
    2678:	061e1710 			; <UNDEFINED> instruction: 0x061e1710
    267c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2680:	0030c101 	eorseq	ip, r0, r1, lsl #2
    2684:	1d710000 	ldclne	0, cr0, [r1, #-0]
    2688:	1d6d0000 	stclne	0, cr0, [sp, #-0]
    268c:	62120000 	andsvs	r0, r2, #0
    2690:	01006675 	tsteq	r0, r5, ror r6
    2694:	5708011b 	smladpl	r8, fp, r1, r0
    2698:	02000013 	andeq	r0, r0, #19
    269c:	6c144891 	ldcvs	8, cr4, [r4], {145}	; 0x91
    26a0:	01006e65 	tsteq	r0, r5, ror #28
    26a4:	ee0a011c 	mcr	1, 0, r0, cr10, cr12, {0}
    26a8:	9c000000 	stcls	0, cr0, [r0], {-0}
    26ac:	9000001d 	andls	r0, r0, sp, lsl r0
    26b0:	1e00001d 	mcrne	0, 0, r0, cr0, cr13, {0}
    26b4:	000000c0 	andeq	r0, r0, r0, asr #1
    26b8:	00001630 	andeq	r1, r0, r0, lsr r6
    26bc:	0006721c 	andeq	r7, r6, ip, lsl r2
    26c0:	01260100 			; <UNDEFINED> instruction: 0x01260100
    26c4:	00013a12 	andeq	r3, r1, r2, lsl sl
    26c8:	001df400 	andseq	pc, sp, r0, lsl #8
    26cc:	001de800 	andseq	lr, sp, r0, lsl #16
    26d0:	1c150000 	ldcne	0, cr0, [r5], {-0}
    26d4:	7010000b 	andsvc	r0, r0, fp
    26d8:	16000016 			; <UNDEFINED> instruction: 0x16000016
    26dc:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    26e0:	02160074 	andseq	r0, r6, #116	; 0x74
    26e4:	7702047d 	smlsdxvc	r2, sp, r4, r0
    26e8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    26ec:	04910408 	ldreq	r0, [r1], #1032	; 0x408
    26f0:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    26f4:	75020c7d 	strvc	r0, [r2, #-3197]	; 0xfffff383
    26f8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    26fc:	0c910310 	ldceq	3, cr0, [r1], {16}
    2700:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2704:	10910314 	addsne	r0, r1, r4, lsl r3
    2708:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    270c:	00760218 	rsbseq	r0, r6, r8, lsl r2
    2710:	ba2c0000 	blt	b02718 <__RAM_SIZE+0xa02718>
    2714:	01000005 	tsteq	r0, r5
    2718:	ee010fe3 	cdp	15, 0, cr0, cr1, cr3, {7}
    271c:	54000000 	strpl	r0, [r0], #-0
    2720:	8c100009 	ldchi	0, cr0, [r0], {9}
    2724:	6210000a 	andsvs	r0, r0, #10
    2728:	0100001e 	tsteq	r0, lr, lsl r0
    272c:	00001791 	muleq	r0, r1, r7
    2730:	74756f2d 	ldrbtvc	r6, [r5], #-3885	; 0xfffff0d3
    2734:	29e30100 	stmibcs	r3!, {r8}^
    2738:	00000106 	andeq	r0, r0, r6, lsl #2
    273c:	00001eac 	andeq	r1, r0, ip, lsr #29
    2740:	00001ea6 	andeq	r1, r0, r6, lsr #29
    2744:	0004f52e 	andeq	pc, r4, lr, lsr #10
    2748:	34e30100 	strbtcc	r0, [r3], #256	; 0x100
    274c:	000002ee 	andeq	r0, r0, lr, ror #5
    2750:	00001ede 	ldrdeq	r1, [r0], -lr
    2754:	00001ed8 	ldrdeq	r1, [r0], -r8
    2758:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    275c:	43e30100 	mvnmi	r0, #0, 2
    2760:	000000ee 	andeq	r0, r0, lr, ror #1
    2764:	00001f10 	andeq	r1, r0, r0, lsl pc
    2768:	00001f0a 	andeq	r1, r0, sl, lsl #30
    276c:	0006332e 	andeq	r3, r6, lr, lsr #6
    2770:	4fe30100 	svcmi	0x00e30100
    2774:	000000ee 	andeq	r0, r0, lr, ror #1
    2778:	00001f42 	andeq	r1, r0, r2, asr #30
    277c:	00001f3c 	andeq	r1, r0, ip, lsr pc
    2780:	6675622d 	ldrbtvs	r6, [r5], -sp, lsr #4
    2784:	5de30100 	stfple	f0, [r3]
    2788:	000002ee 	andeq	r0, r0, lr, ror #5
    278c:	00001f72 	andeq	r1, r0, r2, ror pc
    2790:	00001f6e 	andeq	r1, r0, lr, ror #30
    2794:	6e656c2d 	cdpvs	12, 6, cr6, cr5, cr13, {1}
    2798:	69e30100 	stmibvs	r3!, {r8}^
    279c:	000000ee 	andeq	r0, r0, lr, ror #1
    27a0:	00001fc4 	andeq	r1, r0, r4, asr #31
    27a4:	00001f92 	muleq	r0, r2, pc	; <UNPREDICTABLE>
    27a8:	0005852e 	andeq	r8, r5, lr, lsr #10
    27ac:	73e30100 	mvnvc	r0, #0, 2
    27b0:	00000b7d 	andeq	r0, r0, sp, ror fp
    27b4:	000020f8 	strdeq	r2, [r0], -r8
    27b8:	000020f4 	strdeq	r2, [r0], -r4
    27bc:	0008552e 	andeq	r5, r8, lr, lsr #10
    27c0:	8ae30100 	bhi	ff8c2bc8 <__StackTop+0xc77c2bc8>
    27c4:	00000030 	andeq	r0, r0, r0, lsr r0
    27c8:	0000211c 	andeq	r2, r0, ip, lsl r1
    27cc:	00002118 	andeq	r2, r0, r8, lsl r1
    27d0:	0006ea2e 	andeq	lr, r6, lr, lsr #20
    27d4:	9de30100 	stflse	f0, [r3]
    27d8:	00000030 	andeq	r0, r0, r0, lsr r0
    27dc:	00002140 	andeq	r2, r0, r0, asr #2
    27e0:	0000213c 	andeq	r2, r0, ip, lsr r1
    27e4:	0006f02e 	andeq	pc, r6, lr, lsr #32
    27e8:	b0e30100 	rsclt	r0, r3, r0, lsl #2
    27ec:	00000030 	andeq	r0, r0, r0, lsr r0
    27f0:	00002164 	andeq	r2, r0, r4, ror #2
    27f4:	00002160 	andeq	r2, r0, r0, ror #2
    27f8:	00061e2e 	andeq	r1, r6, lr, lsr #28
    27fc:	c4e30100 	strbtgt	r0, [r3], #256	; 0x100
    2800:	00000030 	andeq	r0, r0, r0, lsr r0
    2804:	00002187 	andeq	r2, r0, r7, lsl #3
    2808:	00002183 	andeq	r2, r0, r3, lsl #3
    280c:	000a0e15 	andeq	r0, sl, r5, lsl lr
    2810:	00179110 	andseq	r9, r7, r0, lsl r1
    2814:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2818:	00750200 	rsbseq	r0, r5, r0, lsl #4
    281c:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2820:	16007402 	strne	r7, [r0], -r2, lsl #8
    2824:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    2828:	02160077 	andseq	r0, r6, #119	; 0x77
    282c:	76020c7d 			; <UNDEFINED> instruction: 0x76020c7d
    2830:	2c000000 	stccs	0, cr0, [r0], {-0}
    2834:	000006a2 	andeq	r0, r0, r2, lsr #13
    2838:	010fc701 	tsteq	pc, r1, lsl #14
    283c:	000000ee 	andeq	r0, r0, lr, ror #1
    2840:	100008d6 	ldrdne	r0, [r0], -r6
    2844:	10000954 	andne	r0, r0, r4, asr r9
    2848:	000021a7 	andeq	r2, r0, r7, lsr #3
    284c:	0018d801 	andseq	sp, r8, r1, lsl #16
    2850:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 1b58 <__HEAP_SIZE+0xb58>
    2854:	c7010074 	smlsdxgt	r1, r4, r0, r0
    2858:	00010625 	andeq	r0, r1, r5, lsr #12
    285c:	0021ef00 	eoreq	lr, r1, r0, lsl #30
    2860:	0021eb00 	eoreq	lr, r1, r0, lsl #22
    2864:	04f52e00 	ldrbteq	r2, [r5], #3584	; 0xe00
    2868:	c7010000 	strgt	r0, [r1, -r0]
    286c:	0002ee30 	andeq	lr, r2, r0, lsr lr
    2870:	00221100 	eoreq	r1, r2, r0, lsl #2
    2874:	00220d00 	eoreq	r0, r2, r0, lsl #26
    2878:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    287c:	c7010078 	smlsdxgt	r1, r8, r0, r0
    2880:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    2884:	00223b00 	eoreq	r3, r2, r0, lsl #22
    2888:	00222f00 	eoreq	r2, r2, r0, lsl #30
    288c:	06332e00 	ldrteq	r2, [r3], -r0, lsl #28
    2890:	c7010000 	strgt	r0, [r1, -r0]
    2894:	0000ee4b 	andeq	lr, r0, fp, asr #28
    2898:	00228900 	eoreq	r8, r2, r0, lsl #18
    289c:	00228500 	eoreq	r8, r2, r0, lsl #10
    28a0:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    28a4:	c7010066 	strgt	r0, [r1, -r6, rrx]
    28a8:	00024c5f 	andeq	r4, r2, pc, asr ip
    28ac:	0022ab00 	eoreq	sl, r2, r0, lsl #22
    28b0:	0022a700 	eoreq	sl, r2, r0, lsl #14
    28b4:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    28b8:	c701006e 	strgt	r0, [r1, -lr, rrx]
    28bc:	0000ee6b 	andeq	lr, r0, fp, ror #28
    28c0:	0022cf00 	eoreq	ip, r2, r0, lsl #30
    28c4:	0022cb00 	eoreq	ip, r2, r0, lsl #22
    28c8:	06f02e00 	ldrbteq	r2, [r0], r0, lsl #28
    28cc:	c7010000 	strgt	r0, [r1, -r0]
    28d0:	0000307d 	andeq	r3, r0, sp, ror r0
    28d4:	0022f200 	eoreq	pc, r2, r0, lsl #4
    28d8:	0022ee00 	eoreq	lr, r2, r0, lsl #28
    28dc:	061e2e00 	ldreq	r2, [lr], -r0, lsl #28
    28e0:	c7010000 	strgt	r0, [r1, -r0]
    28e4:	00003091 	muleq	r0, r1, r0
    28e8:	00231600 	eoreq	r1, r3, r0, lsl #12
    28ec:	00231200 	eoreq	r1, r3, r0, lsl #4
    28f0:	05712f00 	ldrbeq	r2, [r1, #-3840]!	; 0xfffff100
    28f4:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    28f8:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    28fc:	00233c00 	eoreq	r3, r3, r0, lsl #24
    2900:	00233600 	eoreq	r3, r3, r0, lsl #12
    2904:	00a81e00 	adceq	r1, r8, r0, lsl #28
    2908:	189d0000 	ldmne	sp, {}	; <UNPREDICTABLE>
    290c:	69300000 	ldmdbvs	r0!, {}	; <UNPREDICTABLE>
    2910:	11cd0100 	bicne	r0, sp, r0, lsl #2
    2914:	000000ee 	andeq	r0, r0, lr, ror #1
    2918:	0000236b 	andeq	r2, r0, fp, ror #6
    291c:	00002369 	andeq	r2, r0, r9, ror #6
    2920:	00090a22 	andeq	r0, r9, r2, lsr #20
    2924:	50011610 	andpl	r1, r1, r0, lsl r6
    2928:	16200802 	strtne	r0, [r0], -r2, lsl #16
    292c:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2930:	52011600 	andpl	r1, r1, #0, 12
    2934:	167f7b02 	ldrbtne	r7, [pc], -r2, lsl #22
    2938:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    293c:	21000000 	mrscs	r0, (UNDEF: 0)
    2940:	10000928 	andne	r0, r0, r8, lsr #18
    2944:	000018b9 			; <UNDEFINED> instruction: 0x000018b9
    2948:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    294c:	01160076 	tsteq	r6, r6, ror r0
    2950:	7f780252 	svcvc	0x00780252
    2954:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2958:	22000077 	andcs	r0, r0, #119	; 0x77
    295c:	10000950 	andne	r0, r0, r0, asr r9
    2960:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    2964:	01162008 	tsteq	r6, r8
    2968:	00760251 	rsbseq	r0, r6, r1, asr r2
    296c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2970:	01167f74 	tsteq	r6, r4, ror pc
    2974:	00770253 	rsbseq	r0, r7, r3, asr r2
    2978:	3a310000 	bcc	c42980 <__RAM_SIZE+0xb42980>
    297c:	01000006 	tsteq	r0, r6
    2980:	300115bc 			; <UNDEFINED> instruction: 0x300115bc
    2984:	b2000000 	andlt	r0, r0, #0
    2988:	d6100008 	ldrle	r0, [r0], -r8
    298c:	02100008 	andseq	r0, r0, #8
    2990:	4001007d 	andmi	r0, r1, sp, ror r0
    2994:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    2998:	00727473 	rsbseq	r7, r2, r3, ror r4
    299c:	4028bc01 	eormi	fp, r8, r1, lsl #24
    29a0:	82000019 	andhi	r0, r0, #25
    29a4:	7e000023 	cdpvc	0, 0, cr0, cr0, cr3, {1}
    29a8:	30000023 	andcc	r0, r0, r3, lsr #32
    29ac:	be010069 	cdplt	0, 0, cr0, cr1, cr9, {3}
    29b0:	00003010 	andeq	r3, r0, r0, lsl r0
    29b4:	0023a600 	eoreq	sl, r3, r0, lsl #12
    29b8:	0023a000 	eoreq	sl, r3, r0
    29bc:	19463200 	stmdbne	r6, {r9, ip, sp}^
    29c0:	08cc0000 	stmiaeq	ip, {}^	; <UNPREDICTABLE>
    29c4:	00001000 	andeq	r1, r0, r0
    29c8:	100008cc 	andne	r0, r0, ip, asr #17
    29cc:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    29d0:	240abf01 	strcs	fp, [sl], #-3841	; 0xfffff0ff
    29d4:	00001958 	andeq	r1, r0, r8, asr r9
    29d8:	000023d4 	ldrdeq	r2, [r0], -r4
    29dc:	000023d0 	ldrdeq	r2, [r0], -r0
    29e0:	04090000 	streq	r0, [r9], #-0
    29e4:	0000024c 	andeq	r0, r0, ip, asr #4
    29e8:	00066e33 	andeq	r6, r6, r3, lsr lr
    29ec:	14b50100 	ldrtne	r0, [r5], #256	; 0x100
    29f0:	000b7d01 	andeq	r7, fp, r1, lsl #26
    29f4:	19640300 	stmdbne	r4!, {r8, r9}^
    29f8:	63340000 	teqvs	r4, #0
    29fc:	b5010068 	strlt	r0, [r1, #-104]	; 0xffffff98
    2a00:	00013323 	andeq	r3, r1, r3, lsr #6
    2a04:	40330000 	eorsmi	r0, r3, r0
    2a08:	01000006 	tsteq	r0, r6
    2a0c:	30011cab 	andcc	r1, r1, fp, lsr #25
    2a10:	03000000 	movweq	r0, #0
    2a14:	00001999 	muleq	r0, r9, r9
    2a18:	72747334 	rsbsvc	r7, r4, #52, 6	; 0xd0000000
    2a1c:	33ab0100 			; <UNDEFINED> instruction: 0x33ab0100
    2a20:	0000024c 	andeq	r0, r0, ip, asr #4
    2a24:	00053a35 	andeq	r3, r5, r5, lsr sl
    2a28:	3fab0100 	svccc	0x00ab0100
    2a2c:	000000ee 	andeq	r0, r0, lr, ror #1
    2a30:	01007336 	tsteq	r0, r6, lsr r3
    2a34:	024c0fad 	subeq	r0, ip, #692	; 0x2b4
    2a38:	37000000 	strcc	r0, [r0, -r0]
    2a3c:	0000055a 	andeq	r0, r0, sl, asr r5
    2a40:	01149f01 	tsteq	r4, r1, lsl #30
	...
    2a4c:	000023f4 	strdeq	r2, [r0], -r4
    2a50:	001a0401 	andseq	r0, sl, r1, lsl #8
    2a54:	06982e00 	ldreq	r2, [r8], r0, lsl #28
    2a58:	9f010000 	svcls	0x00010000
    2a5c:	00013322 	andeq	r3, r1, r2, lsr #6
    2a60:	00242600 	eoreq	r2, r4, r0, lsl #12
    2a64:	00242000 	eoreq	r2, r4, r0
    2a68:	04f52e00 	ldrbteq	r2, [r5], #3584	; 0xe00
    2a6c:	9f010000 	svcls	0x00010000
    2a70:	0000e033 	andeq	lr, r0, r3, lsr r0
    2a74:	00245800 	eoreq	r5, r4, r0, lsl #16
    2a78:	00245200 	eoreq	r5, r4, r0, lsl #4
    2a7c:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2a80:	9f010078 	svcls	0x00010078
    2a84:	0000ee42 	andeq	lr, r0, r2, asr #28
    2a88:	00248a00 	eoreq	r8, r4, r0, lsl #20
    2a8c:	00248400 	eoreq	r8, r4, r0, lsl #8
    2a90:	06332e00 	ldrteq	r2, [r3], -r0, lsl #28
    2a94:	9f010000 	svcls	0x00010000
    2a98:	0000ee4e 	andeq	lr, r0, lr, asr #28
    2a9c:	0024bc00 	eoreq	fp, r4, r0, lsl #24
    2aa0:	0024b600 	eoreq	fp, r4, r0, lsl #12
    2aa4:	30380000 	eorscc	r0, r8, r0
    2aa8:	01000005 	tsteq	r0, r5
    2aac:	f0011495 			; <UNDEFINED> instruction: 0xf0011495
    2ab0:	fc100019 	ldc2	0, cr0, [r0], {25}
    2ab4:	e8100019 	ldmda	r0, {r0, r3, r4}
    2ab8:	01000024 	tsteq	r0, r4, lsr #32
    2abc:	00001a78 	andeq	r1, r0, r8, ror sl
    2ac0:	0006982e 	andeq	r9, r6, lr, lsr #16
    2ac4:	23950100 	orrscs	r0, r5, #0, 2
    2ac8:	00000133 	andeq	r0, r0, r3, lsr r1
    2acc:	0000250c 	andeq	r2, r0, ip, lsl #10
    2ad0:	00002508 	andeq	r2, r0, r8, lsl #10
    2ad4:	0004f52e 	andeq	pc, r4, lr, lsr #10
    2ad8:	34950100 	ldrcc	r0, [r5], #256	; 0x100
    2adc:	000000e0 	andeq	r0, r0, r0, ror #1
    2ae0:	00002531 	andeq	r2, r0, r1, lsr r5
    2ae4:	0000252d 	andeq	r2, r0, sp, lsr #10
    2ae8:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    2aec:	43950100 	orrsmi	r0, r5, #0, 2
    2af0:	000000ee 	andeq	r0, r0, lr, ror #1
    2af4:	00002556 	andeq	r2, r0, r6, asr r5
    2af8:	00002552 	andeq	r2, r0, r2, asr r5
    2afc:	0006332e 	andeq	r3, r6, lr, lsr #6
    2b00:	4f950100 	svcmi	0x00950100
    2b04:	000000ee 	andeq	r0, r0, lr, ror #1
    2b08:	0000257b 	andeq	r2, r0, fp, ror r5
    2b0c:	00002577 	andeq	r2, r0, r7, ror r5
    2b10:	0019fa2b 	andseq	pc, r9, fp, lsr #20
    2b14:	001bb610 	andseq	fp, fp, r0, lsl r6
    2b18:	d8390000 	ldmdale	r9!, {}	; <UNPREDICTABLE>
    2b1c:	01000005 	tsteq	r0, r5
    2b20:	b001148e 	andlt	r1, r1, lr, lsl #9
    2b24:	b2100008 	andslt	r0, r0, #8
    2b28:	02100008 	andseq	r0, r0, #8
    2b2c:	ca01007d 	bgt	42d28 <__HEAP_SIZE+0x41d28>
    2b30:	3a00001a 	bcc	2ba0 <__HEAP_SIZE+0x1ba0>
    2b34:	00000698 	muleq	r0, r8, r6
    2b38:	33238e01 			; <UNDEFINED> instruction: 0x33238e01
    2b3c:	01000001 	tsteq	r0, r1
    2b40:	04f53a50 	ldrbteq	r3, [r5], #2640	; 0xa50
    2b44:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2b48:	0000e034 	andeq	lr, r0, r4, lsr r0
    2b4c:	3b510100 	blcc	1442f54 <__RAM_SIZE+0x1342f54>
    2b50:	00786469 	rsbseq	r6, r8, r9, ror #8
    2b54:	ee438e01 	cdp	14, 4, cr8, cr3, cr1, {0}
    2b58:	01000000 	mrseq	r0, (UNDEF: 0)
    2b5c:	06333a52 			; <UNDEFINED> instruction: 0x06333a52
    2b60:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2b64:	0000ee4f 	andeq	lr, r0, pc, asr #28
    2b68:	00530100 	subseq	r0, r3, r0, lsl #2
    2b6c:	0004f039 	andeq	pc, r4, r9, lsr r0	; <UNPREDICTABLE>
    2b70:	14850100 	strne	r0, [r5], #256	; 0x100
    2b74:	00000001 	andeq	r0, r0, r1
    2b78:	00000000 	andeq	r0, r0, r0
    2b7c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2b80:	001b1c01 	andseq	r1, fp, r1, lsl #24
    2b84:	06983a00 	ldreq	r3, [r8], r0, lsl #20
    2b88:	85010000 	strhi	r0, [r1, #-0]
    2b8c:	00013325 	andeq	r3, r1, r5, lsr #6
    2b90:	3a500100 	bcc	1402f98 <__RAM_SIZE+0x1302f98>
    2b94:	000004f5 	strdeq	r0, [r0], -r5
    2b98:	e0368501 	eors	r8, r6, r1, lsl #10
    2b9c:	01000000 	mrseq	r0, (UNDEF: 0)
    2ba0:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    2ba4:	85010078 	strhi	r0, [r1, #-120]	; 0xffffff88
    2ba8:	0000ee45 	andeq	lr, r0, r5, asr #28
    2bac:	3a520100 	bcc	1482fb4 <__RAM_SIZE+0x1382fb4>
    2bb0:	00000633 	andeq	r0, r0, r3, lsr r6
    2bb4:	ee518501 	cdp	5, 5, cr8, cr1, cr1, {0}
    2bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    2bbc:	013c0053 	teqeq	ip, r3, asr r0
    2bc0:	00067d01 	andeq	r7, r6, r1, lsl #26
    2bc4:	00067d00 	andeq	r7, r6, r0, lsl #26
    2bc8:	01013c00 	tsteq	r1, r0, lsl #24
    2bcc:	00000624 	andeq	r0, r0, r4, lsr #12
    2bd0:	00000624 	andeq	r0, r0, r4, lsr #12
    2bd4:	0501013c 	streq	r0, [r1, #-316]	; 0xfffffec4
    2bd8:	05000007 	streq	r0, [r0, #-7]
    2bdc:	3c000007 	stccc	0, cr0, [r0], {7}
    2be0:	04c50101 	strbeq	r0, [r5], #257	; 0x101
    2be4:	04c50000 	strbeq	r0, [r5], #0
    2be8:	013c0000 	teqeq	ip, r0
    2bec:	00065001 	andeq	r5, r6, r1
    2bf0:	00065000 	andeq	r5, r6, r0
    2bf4:	01013c00 	tsteq	r1, r0, lsl #24
    2bf8:	0000058e 	andeq	r0, r0, lr, lsl #11
    2bfc:	0000058e 	andeq	r0, r0, lr, lsl #11
    2c00:	ab01013c 	blge	430f8 <__HEAP_SIZE+0x420f8>
    2c04:	ab000006 	blge	2c24 <__HEAP_SIZE+0x1c24>
    2c08:	3c000006 	stccc	0, cr0, [r0], {6}
    2c0c:	05480101 	strbeq	r0, [r8, #-257]	; 0xfffffeff
    2c10:	05480000 	strbeq	r0, [r8, #-0]
    2c14:	013c0000 	teqeq	ip, r0
    2c18:	00051401 	andeq	r1, r5, r1, lsl #8
    2c1c:	00051400 	andeq	r1, r5, r0, lsl #8
    2c20:	01013c00 	tsteq	r1, r0, lsl #24
    2c24:	000005ef 	andeq	r0, r0, pc, ror #11
    2c28:	000005ef 	andeq	r0, r0, pc, ror #11
    2c2c:	6301013c 	movwvs	r0, #4412	; 0x113c
    2c30:	63000005 	movwvs	r0, #5
    2c34:	3c000005 	stccc	0, cr0, [r0], {5}
    2c38:	06110101 	ldreq	r0, [r1], -r1, lsl #2
    2c3c:	06110000 	ldreq	r0, [r1], -r0
    2c40:	013c0000 	teqeq	ip, r0
    2c44:	0006c901 	andeq	ip, r6, r1, lsl #18
    2c48:	0006c900 	andeq	ip, r6, r0, lsl #18
    2c4c:	01013c00 	tsteq	r1, r0, lsl #24
    2c50:	000006b8 			; <UNDEFINED> instruction: 0x000006b8
    2c54:	000006b8 			; <UNDEFINED> instruction: 0x000006b8
    2c58:	2701013d 	smladxcs	r1, sp, r1, r0
    2c5c:	27000005 	strcs	r0, [r0, -r5]
    2c60:	07000005 	streq	r0, [r0, -r5]
    2c64:	4f000531 	svcmi	0x00000531
    2c68:	02000002 	andeq	r0, r0, #2
    2c6c:	0006c200 	andeq	ip, r6, r0, lsl #4
    2c70:	89010400 	stmdbhi	r1, {sl}
    2c74:	0c000001 	stceq	0, cr0, [r0], {1}
    2c78:	00000739 	andeq	r0, r0, r9, lsr r7
    2c7c:	00000385 	andeq	r0, r0, r5, lsl #7
    2c80:	000001f8 	strdeq	r0, [r0], -r8
	...
    2c8c:	000018bd 			; <UNDEFINED> instruction: 0x000018bd
    2c90:	73060102 	movwvc	r0, #24834	; 0x6102
    2c94:	03000002 	movweq	r0, #2
    2c98:	0000017f 	andeq	r0, r0, pc, ror r1
    2c9c:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    2ca0:	02000000 	andeq	r0, r0, #0
    2ca4:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    2ca8:	02020000 	andeq	r0, r2, #0
    2cac:	00003205 	andeq	r3, r0, r5, lsl #4
    2cb0:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2cb4:	0000031a 	andeq	r0, r0, sl, lsl r3
    2cb8:	2c050402 	cfstrscs	mvf0, [r5], {2}
    2cbc:	03000001 	movweq	r0, #1
    2cc0:	0000006f 	andeq	r0, r0, pc, rrx
    2cc4:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    2cc8:	02000000 	andeq	r0, r0, #0
    2ccc:	02c20704 	sbceq	r0, r2, #4, 14	; 0x100000
    2cd0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2cd4:	00012705 	andeq	r2, r1, r5, lsl #14
    2cd8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2cdc:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    2ce0:	69050404 	stmdbvs	r5, {r2, sl}
    2ce4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    2ce8:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    2cec:	04030000 	streq	r0, [r3], #-0
    2cf0:	03000005 	movweq	r0, #5
    2cf4:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2cf8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2cfc:	00006304 	andeq	r6, r0, r4, lsl #6
    2d00:	08010200 	stmdaeq	r1, {r9}
    2d04:	0000027a 	andeq	r0, r0, sl, ror r2
    2d08:	00009a05 	andeq	r9, r0, r5, lsl #20
    2d0c:	a1040600 	tstge	r4, r0, lsl #12
    2d10:	03000000 	movweq	r0, #0
    2d14:	00000181 	andeq	r0, r0, r1, lsl #3
    2d18:	30131804 	andscc	r1, r3, r4, lsl #16
    2d1c:	03000000 	movweq	r0, #0
    2d20:	00000071 	andeq	r0, r0, r1, ror r0
    2d24:	58143004 	ldmdapl	r4, {r2, ip, sp}
    2d28:	07000000 	streq	r0, [r0, -r0]
    2d2c:	00075301 	andeq	r5, r7, r1, lsl #6
    2d30:	083f0100 	ldmdaeq	pc!, {r8}	; <UNPREDICTABLE>
    2d34:	00008701 	andeq	r8, r0, r1, lsl #14
	...
    2d40:	00259c00 	eoreq	r9, r5, r0, lsl #24
    2d44:	013b0100 	teqeq	fp, r0, lsl #2
    2d48:	f5080000 			; <UNDEFINED> instruction: 0xf5080000
    2d4c:	01000004 	tsteq	r0, r4
    2d50:	013b1b3f 	teqeq	fp, pc, lsr fp
    2d54:	25c00000 	strbcs	r0, [r0]
    2d58:	25bc0000 	ldrcs	r0, [ip, #0]!
    2d5c:	3d080000 	stccc	0, cr0, [r8, #-0]
    2d60:	01000005 	tsteq	r0, r5
    2d64:	00872a3f 	addeq	r2, r7, pc, lsr sl
    2d68:	25e20000 	strbcs	r0, [r2, #0]!
    2d6c:	25de0000 	ldrbcs	r0, [lr]
    2d70:	63090000 	movwvs	r0, #36864	; 0x9000
    2d74:	40010068 	andmi	r0, r1, r8, rrx
    2d78:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    2d7c:	00260600 	eoreq	r0, r6, r0, lsl #12
    2d80:	00260000 	eoreq	r0, r6, r0
    2d84:	74690900 	strbtvc	r0, [r9], #-2304	; 0xfffff700
    2d88:	0c410100 	stfeqe	f0, [r1], {-0}
    2d8c:	00000087 	andeq	r0, r0, r7, lsl #1
    2d90:	00002634 	andeq	r2, r0, r4, lsr r6
    2d94:	00002630 	andeq	r2, r0, r0, lsr r6
    2d98:	0000000a 	andeq	r0, r0, sl
    2d9c:	00024400 	andeq	r4, r2, r0, lsl #8
    2da0:	04060000 	streq	r0, [r6], #-0
    2da4:	000000ac 	andeq	r0, r0, ip, lsr #1
    2da8:	076b010b 	strbeq	r0, [fp, -fp, lsl #2]!
    2dac:	3b010000 	blcc	42db4 <__HEAP_SIZE+0x41db4>
    2db0:	00000106 	andeq	r0, r0, r6, lsl #2
    2db4:	00000000 	andeq	r0, r0, r0
    2db8:	26530000 	ldrbcs	r0, [r3], -r0
    2dbc:	82010000 	andhi	r0, r1, #0
    2dc0:	08000001 	stmdaeq	r0, {r0}
    2dc4:	0000074c 	andeq	r0, r0, ip, asr #14
    2dc8:	a61c3b01 	ldrge	r3, [ip], -r1, lsl #22
    2dcc:	77000000 	strvc	r0, [r0, -r0]
    2dd0:	73000026 	movwvc	r0, #38	; 0x26
    2dd4:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    2dd8:	00000000 	andeq	r0, r0, r0
    2ddc:	00000198 	muleq	r0, r8, r1
    2de0:	0350010d 	cmpeq	r0, #1073741827	; 0x40000003
    2de4:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    2de8:	56010e00 	strpl	r0, [r1], -r0, lsl #28
    2dec:	01000003 	tsteq	r0, r3
    2df0:	5c010632 	stcpl	6, cr0, [r1], {50}	; 0x32
    2df4:	8010001a 	andshi	r0, r0, sl, lsl r0
    2df8:	0210001a 	andseq	r0, r0, #26
    2dfc:	0701007d 	smlsdxeq	r1, sp, r0, r0
    2e00:	00001b01 	andeq	r1, r0, r1, lsl #22
    2e04:	05dd0500 	ldrbeq	r0, [sp, #1280]	; 0x500
    2e08:	00007901 	andeq	r7, r0, r1, lsl #18
    2e0c:	001a3c00 	andseq	r3, sl, r0, lsl #24
    2e10:	001a5a10 	andseq	r5, sl, r0, lsl sl
    2e14:	00269810 	eoreq	r9, r6, r0, lsl r8
    2e18:	01f80100 	mvnseq	r0, r0, lsl #2
    2e1c:	4c080000 	stcmi	0, cr0, [r8], {-0}
    2e20:	01000007 	tsteq	r0, r7
    2e24:	00a61628 	adceq	r1, r6, r8, lsr #12
    2e28:	26bc0000 	ldrtcs	r0, [ip], r0
    2e2c:	26b80000 	ldrtcs	r0, [r8], r0
    2e30:	650f0000 	strvs	r0, [pc, #-0]	; 2e38 <__HEAP_SIZE+0x1e38>
    2e34:	01000007 	tsteq	r0, r7
    2e38:	00790929 	rsbseq	r0, r9, r9, lsr #18
    2e3c:	26de0000 	ldrbcs	r0, [lr], r0
    2e40:	26da0000 	ldrbcs	r0, [sl], r0
    2e44:	480a0000 	stmdami	sl, {}	; <UNPREDICTABLE>
    2e48:	1210001a 	andsne	r0, r0, #26
    2e4c:	0c000002 	stceq	0, cr0, [r0], {2}
    2e50:	10001a56 	andne	r1, r0, r6, asr sl
    2e54:	00000212 	andeq	r0, r0, r2, lsl r2
    2e58:	0150010d 	cmpeq	r0, sp, lsl #2
    2e5c:	1000003a 	andne	r0, r0, sl, lsr r0
    2e60:	00077501 	andeq	r7, r7, r1, lsl #10
    2e64:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
    2e68:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    2e74:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2e78:	27011101 	strcs	r1, [r1, -r1, lsl #2]
    2e7c:	01000005 	tsteq	r0, r5
    2e80:	7901051d 	stmdbvc	r1, {r0, r2, r3, r4, r8, sl}
    2e84:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2e88:	3c10001a 	ldccc	0, cr0, [r0], {26}
    2e8c:	0210001a 	andseq	r0, r0, #26
    2e90:	4401007d 	strmi	r0, [r1], #-125	; 0xffffff83
    2e94:	12000002 	andne	r0, r0, #2
    2e98:	01006863 	tsteq	r0, r3, ror #16
    2e9c:	0079121d 	rsbseq	r1, r9, sp, lsl r2
    2ea0:	26ff0000 	ldrbtcs	r0, [pc], r0
    2ea4:	26fd0000 	ldrbtcs	r0, [sp], r0
    2ea8:	13000000 	movwne	r0, #0
    2eac:	075d0101 	ldrbeq	r0, [sp, -r1, lsl #2]
    2eb0:	075d0000 	ldrbeq	r0, [sp, -r0]
    2eb4:	d9050000 	stmdble	r5, {}	; <UNPREDICTABLE>
    2eb8:	08ae0005 	stmiaeq	lr!, {r0, r2}
    2ebc:	00020000 	andeq	r0, r2, r0
    2ec0:	00000821 	andeq	r0, r0, r1, lsr #16
    2ec4:	01890104 	orreq	r0, r9, r4, lsl #2
    2ec8:	5a0c0000 	bpl	302ed0 <__RAM_SIZE+0x202ed0>
    2ecc:	85000008 	strhi	r0, [r0, #-8]
    2ed0:	30000003 	andcc	r0, r0, r3
    2ed4:	00000002 	andeq	r0, r0, r2
    2ed8:	00000000 	andeq	r0, r0, r0
    2edc:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    2ee0:	0200001b 	andeq	r0, r0, #27
    2ee4:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    2ee8:	01020000 	mrseq	r0, (UNDEF: 2)
    2eec:	00027108 	andeq	r7, r2, r8, lsl #2
    2ef0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2ef4:	00000032 	andeq	r0, r0, r2, lsr r0
    2ef8:	0007b303 	andeq	fp, r7, r3, lsl #6
    2efc:	19390300 	ldmdbne	r9!, {r8, r9}
    2f00:	0000004a 	andeq	r0, r0, sl, asr #32
    2f04:	1a070202 	bne	1c3714 <__RAM_SIZE+0xc3714>
    2f08:	02000003 	andeq	r0, r0, #3
    2f0c:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    2f10:	6f030000 	svcvs	0x00030000
    2f14:	03000000 	movweq	r0, #0
    2f18:	0064194f 	rsbeq	r1, r4, pc, asr #18
    2f1c:	04020000 	streq	r0, [r2], #-0
    2f20:	0002c207 	andeq	ip, r2, r7, lsl #4
    2f24:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2f28:	00000127 	andeq	r0, r0, r7, lsr #2
    2f2c:	bd070802 	stclt	8, cr0, [r7, #-8]
    2f30:	04000002 	streq	r0, [r0], #-2
    2f34:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2f38:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2f3c:	0002c707 	andeq	ip, r2, r7, lsl #14
    2f40:	00800500 	addeq	r0, r0, r0, lsl #10
    2f44:	04030000 	streq	r0, [r3], #-0
    2f48:	04000005 	streq	r0, [r0], #-5
    2f4c:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2f50:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2f54:	00006304 	andeq	r6, r0, r4, lsl #6
    2f58:	08010200 	stmdaeq	r1, {r9}
    2f5c:	0000027a 	andeq	r0, r0, sl, ror r2
    2f60:	0007b503 	andeq	fp, r7, r3, lsl #10
    2f64:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    2f68:	0000003e 	andeq	r0, r0, lr, lsr r0
    2f6c:	00007103 	andeq	r7, r0, r3, lsl #2
    2f70:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    2f74:	00000058 	andeq	r0, r0, r8, asr r0
    2f78:	00083203 	andeq	r3, r8, r3, lsl #4
    2f7c:	23280600 			; <UNDEFINED> instruction: 0x23280600
    2f80:	000000ca 	andeq	r0, r0, sl, asr #1
    2f84:	0008c206 	andeq	ip, r8, r6, lsl #4
    2f88:	29062000 	stmdbcs	r6, {sp}
    2f8c:	00014a08 	andeq	r4, r1, r8, lsl #20
    2f90:	30720700 	rsbscc	r0, r2, r0, lsl #14
    2f94:	122a0600 	eorne	r0, sl, #0, 12
    2f98:	00000080 	andeq	r0, r0, r0, lsl #1
    2f9c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2fa0:	06003172 			; <UNDEFINED> instruction: 0x06003172
    2fa4:	0080122b 	addeq	r1, r0, fp, lsr #4
    2fa8:	23020000 	movwcs	r0, #8192	; 0x2000
    2fac:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    2fb0:	122c0600 	eorne	r0, ip, #0, 12
    2fb4:	00000080 	andeq	r0, r0, r0, lsl #1
    2fb8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2fbc:	06003372 			; <UNDEFINED> instruction: 0x06003372
    2fc0:	0080122d 	addeq	r1, r0, sp, lsr #4
    2fc4:	23020000 	movwcs	r0, #8192	; 0x2000
    2fc8:	3172070c 	cmncc	r2, ip, lsl #14
    2fcc:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    2fd0:	00008012 	andeq	r8, r0, r2, lsl r0
    2fd4:	10230200 	eorne	r0, r3, r0, lsl #4
    2fd8:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    2fdc:	80122f06 	andshi	r2, r2, r6, lsl #30
    2fe0:	02000000 	andeq	r0, r0, #0
    2fe4:	70071423 	andvc	r1, r7, r3, lsr #8
    2fe8:	30060063 	andcc	r0, r6, r3, rrx
    2fec:	00008012 	andeq	r8, r0, r2, lsl r0
    2ff0:	18230200 	stmdane	r3!, {r9}
    2ff4:	72737007 	rsbsvc	r7, r3, #7
    2ff8:	12310600 	eorsne	r0, r1, #0, 12
    2ffc:	00000080 	andeq	r0, r0, r0, lsl #1
    3000:	001c2302 	andseq	r2, ip, r2, lsl #6
    3004:	0007ee03 	andeq	lr, r7, r3, lsl #28
    3008:	23340600 	teqcs	r4, #0, 12
    300c:	00000156 	andeq	r0, r0, r6, asr r1
    3010:	00081306 	andeq	r1, r8, r6, lsl #6
    3014:	35062000 	strcc	r2, [r6, #-0]
    3018:	0001d608 	andeq	sp, r1, r8, lsl #12
    301c:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    3020:	12360600 	eorsne	r0, r6, #0, 12
    3024:	00000080 	andeq	r0, r0, r0, lsl #1
    3028:	07002302 	streq	r2, [r0, -r2, lsl #6]
    302c:	06003572 			; <UNDEFINED> instruction: 0x06003572
    3030:	00801237 	addeq	r1, r0, r7, lsr r2
    3034:	23020000 	movwcs	r0, #8192	; 0x2000
    3038:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    303c:	12380600 	eorsne	r0, r8, #0, 12
    3040:	00000080 	andeq	r0, r0, r0, lsl #1
    3044:	07082302 	streq	r2, [r8, -r2, lsl #6]
    3048:	06003772 			; <UNDEFINED> instruction: 0x06003772
    304c:	00801239 	addeq	r1, r0, r9, lsr r2
    3050:	23020000 	movwcs	r0, #8192	; 0x2000
    3054:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    3058:	123a0600 	eorsne	r0, sl, #0, 12
    305c:	00000080 	andeq	r0, r0, r0, lsl #1
    3060:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    3064:	06003972 			; <UNDEFINED> instruction: 0x06003972
    3068:	0080123b 	addeq	r1, r0, fp, lsr r2
    306c:	23020000 	movwcs	r0, #8192	; 0x2000
    3070:	31720714 	cmncc	r2, r4, lsl r7
    3074:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    3078:	00008012 	andeq	r8, r0, r2, lsl r0
    307c:	18230200 	stmdane	r3!, {r9}
    3080:	31317207 	teqcc	r1, r7, lsl #4
    3084:	123d0600 	eorsne	r0, sp, #0, 12
    3088:	00000080 	andeq	r0, r0, r0, lsl #1
    308c:	001c2302 	andseq	r2, ip, r2, lsl #6
    3090:	00079203 	andeq	r9, r7, r3, lsl #4
    3094:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    3098:	000001e2 	andeq	r0, r0, r2, ror #3
    309c:	00082606 	andeq	r2, r8, r6, lsl #12
    30a0:	41064000 	mrsmi	r4, (UNDEF: 6)
    30a4:	00020e08 	andeq	r0, r2, r8, lsl #28
    30a8:	081f0800 	ldmdaeq	pc, {fp}	; <UNPREDICTABLE>
    30ac:	42060000 	andmi	r0, r6, #0
    30b0:	00014a1a 	andeq	r4, r1, sl, lsl sl
    30b4:	00230200 	eoreq	r0, r3, r0, lsl #4
    30b8:	0008ce08 	andeq	ip, r8, r8, lsl #28
    30bc:	1a430600 	bne	10c48c4 <__RAM_SIZE+0xfc48c4>
    30c0:	000000be 	strheq	r0, [r0], -lr
    30c4:	00202302 	eoreq	r2, r0, r2, lsl #6
    30c8:	0008b109 	andeq	fp, r8, r9, lsl #2
    30cc:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    30d0:	00000080 	andeq	r0, r0, r0, lsl #1
    30d4:	d5090101 	strle	r0, [r9, #-257]	; 0xfffffeff
    30d8:	01000008 	tsteq	r0, r8
    30dc:	0080151e 	addeq	r1, r0, lr, lsl r5
    30e0:	01010000 	mrseq	r0, (UNDEF: 1)
    30e4:	0007be09 	andeq	fp, r7, r9, lsl #28
    30e8:	151f0100 	ldrne	r0, [pc, #-256]	; 2ff0 <__HEAP_SIZE+0x1ff0>
    30ec:	00000080 	andeq	r0, r0, r0, lsl #1
    30f0:	d8090101 	stmdale	r9, {r0, r8}
    30f4:	01000007 	tsteq	r0, r7
    30f8:	00801520 	addeq	r1, r0, r0, lsr #10
    30fc:	01010000 	mrseq	r0, (UNDEF: 1)
    3100:	0008470a 	andeq	r4, r8, sl, lsl #14
    3104:	17710100 	ldrbne	r0, [r1, -r0, lsl #2]!
    3108:	00000087 	andeq	r0, r0, r7, lsl #1
    310c:	68030501 	stmdavs	r3, {r0, r8, sl}
    3110:	0a380085 	beq	e0332c <__RAM_SIZE+0xd0332c>
    3114:	000007a0 	andeq	r0, r0, r0, lsr #15
    3118:	87177201 	ldrhi	r7, [r7, -r1, lsl #4]
    311c:	01000000 	mrseq	r0, (UNDEF: 0)
    3120:	856c0305 	strbhi	r0, [ip, #-773]!	; 0xfffffcfb
    3124:	010b3800 	tsteq	fp, r0, lsl #16
    3128:	00000409 	andeq	r0, r0, r9, lsl #8
    312c:	0e010c01 	cdpeq	12, 0, cr0, cr1, cr1, {0}
    3130:	00008001 	andeq	r8, r0, r1
	...
    313c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3140:	e7010c01 	str	r0, [r1, -r1, lsl #24]
    3144:	01000000 	mrseq	r0, (UNDEF: 0)
    3148:	010e0108 	tsteq	lr, r8, lsl #2
    314c:	00000080 	andeq	r0, r0, r0, lsl #1
	...
    3158:	01007d02 	tsteq	r0, r2, lsl #26
    315c:	000002cb 	andeq	r0, r0, fp, asr #5
    3160:	0008670d 	andeq	r6, r8, sp, lsl #14
    3164:	00000000 	andeq	r0, r0, r0
    3168:	00000200 	andeq	r0, r0, r0, lsl #4
    316c:	00000000 	andeq	r0, r0, r0
    3170:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    3174:	7a0e0c01 	bvc	386180 <__RAM_SIZE+0x286180>
    3178:	14000008 	strne	r0, [r0], #-8
    317c:	12000027 	andne	r0, r0, #39	; 0x27
    3180:	00000027 	andeq	r0, r0, r7, lsr #32
    3184:	47010f00 	strmi	r0, [r1, -r0, lsl #30]
    3188:	01000002 	tsteq	r0, r2
    318c:	790105dc 	stmdbvc	r1, {r2, r3, r4, r6, r7, r8, sl}
    3190:	4c000000 	stcmi	0, cr0, [r0], {-0}
    3194:	c810001b 	ldmdagt	r0, {r0, r1, r3, r4}
    3198:	2710001b 			; <UNDEFINED> instruction: 0x2710001b
    319c:	01000027 	tsteq	r0, r7, lsr #32
    31a0:	000003a5 	andeq	r0, r0, r5, lsr #7
    31a4:	0004f510 	andeq	pc, r4, r0, lsl r5	; <UNPREDICTABLE>
    31a8:	28dc0100 	ldmcs	ip, {r8}^
    31ac:	000003a5 	andeq	r0, r0, r5, lsr #7
    31b0:	0000274f 	andeq	r2, r0, pc, asr #14
    31b4:	00002747 	andeq	r2, r0, r7, asr #14
    31b8:	00053d10 	andeq	r3, r5, r0, lsl sp
    31bc:	37dc0100 	ldrbcc	r0, [ip, r0, lsl #2]
    31c0:	0000008c 	andeq	r0, r0, ip, lsl #1
    31c4:	0000278e 	andeq	r2, r0, lr, lsl #15
    31c8:	00002786 	andeq	r2, r0, r6, lsl #15
    31cc:	0000f510 	andeq	pc, r0, r0, lsl r5	; <UNPREDICTABLE>
    31d0:	4bdc0100 	blmi	ff7035d8 <__StackTop+0xc76035d8>
    31d4:	000003a5 	andeq	r0, r0, r5, lsr #7
    31d8:	000027cb 	andeq	r2, r0, fp, asr #15
    31dc:	000027c5 	andeq	r2, r0, r5, asr #15
    31e0:	00041710 	andeq	r1, r4, r0, lsl r7
    31e4:	66dc0100 	ldrbvs	r0, [ip], r0, lsl #2
    31e8:	000003a5 	andeq	r0, r0, r5, lsr #7
    31ec:	000027ff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    31f0:	000027f7 	strdeq	r2, [r0], -r7
    31f4:	0003fd11 	andeq	pc, r3, r1, lsl sp	; <UNPREDICTABLE>
    31f8:	09dd0100 	ldmibeq	sp, {r8}^
    31fc:	00000079 	andeq	r0, r0, r9, ror r0
    3200:	0000283c 	andeq	r2, r0, ip, lsr r8
    3204:	00002836 	andeq	r2, r0, r6, lsr r8
    3208:	00637012 	rsbeq	r7, r3, r2, lsl r0
    320c:	8012de01 	andshi	sp, r2, r1, lsl #28
    3210:	71000000 	mrsvc	r0, (UNDEF: 0)
    3214:	67000028 	strvs	r0, [r0, -r8, lsr #32]
    3218:	12000028 	andne	r0, r0, #40	; 0x28
    321c:	0100706f 	tsteq	r0, pc, rrx
    3220:	00801ade 	ldrdeq	r1, [r0], lr
    3224:	28ba0000 	ldmcs	sl!, {}	; <UNPREDICTABLE>
    3228:	28b40000 	ldmcs	r4!, {}	; <UNPREDICTABLE>
    322c:	73120000 	tstvc	r2, #0
    3230:	de010070 	mcrle	0, 0, r0, cr1, cr0, {3}
    3234:	0003a523 	andeq	sl, r3, r3, lsr #10
    3238:	0028eb00 	eoreq	lr, r8, r0, lsl #22
    323c:	0028e500 	eoreq	lr, r8, r0, lsl #10
    3240:	1b8e1300 	blne	fe387e48 <__StackTop+0xc6287e48>
    3244:	07841000 	streq	r1, [r4, r0]
    3248:	039b0000 	orrseq	r0, fp, #0
    324c:	01140000 	tsteq	r4, r0
    3250:	00790250 	rsbseq	r0, r9, r0, asr r2
    3254:	1b921500 	blne	fe48865c <__StackTop+0xc638865c>
    3258:	07231000 	streq	r1, [r3, -r0]!
    325c:	16000000 	strne	r0, [r0], -r0
    3260:	00008004 	andeq	r8, r0, r4
    3264:	88011700 	stmdahi	r1, {r8, r9, sl, ip}
    3268:	01000008 	tsteq	r0, r8
    326c:	c80106a1 	stmdagt	r1, {r0, r5, r7, r9, sl}
    3270:	4c10001b 	ldcmi	0, cr0, [r0], {27}
    3274:	1610001d 			; <UNDEFINED> instruction: 0x1610001d
    3278:	01000029 	tsteq	r0, r9, lsr #32
    327c:	000006a2 	andeq	r0, r0, r2, lsr #13
    3280:	0007da10 	andeq	sp, r7, r0, lsl sl
    3284:	27a10100 	strcs	r0, [r1, r0, lsl #2]!
    3288:	000003a5 	andeq	r0, r0, r5, lsr #7
    328c:	0000293c 	andeq	r2, r0, ip, lsr r9
    3290:	00002936 	andeq	r2, r0, r6, lsr r9
    3294:	0007e710 	andeq	lr, r7, r0, lsl r7
    3298:	3ba10100 	blcc	fe8436a0 <__StackTop+0xc67436a0>
    329c:	00000080 	andeq	r0, r0, r0, lsl #1
    32a0:	0000296c 	andeq	r2, r0, ip, ror #18
    32a4:	00002968 	andeq	r2, r0, r8, ror #18
    32a8:	0003fd11 	andeq	pc, r3, r1, lsl sp	; <UNPREDICTABLE>
    32ac:	09a20100 	stmibeq	r2!, {r8}
    32b0:	00000079 	andeq	r0, r0, r9, ror r0
    32b4:	00002990 	muleq	r0, r0, r9
    32b8:	0000298a 	andeq	r2, r0, sl, lsl #19
    32bc:	00076511 	andeq	r6, r7, r1, lsl r5
    32c0:	14a20100 	strtne	r0, [r2], #256	; 0x100
    32c4:	00000079 	andeq	r0, r0, r9, ror r0
    32c8:	000029c2 	andeq	r2, r0, r2, asr #19
    32cc:	000029ba 			; <UNDEFINED> instruction: 0x000029ba
    32d0:	0000fb11 	andeq	pc, r0, r1, lsl fp	; <UNPREDICTABLE>
    32d4:	13a30100 			; <UNDEFINED> instruction: 0x13a30100
    32d8:	000003a5 	andeq	r0, r0, r5, lsr #7
    32dc:	00002a1f 	andeq	r2, r0, pc, lsl sl
    32e0:	000029f9 	strdeq	r2, [r0], -r9
    32e4:	00082c18 	andeq	r2, r8, r8, lsl ip
    32e8:	1aa40100 	bne	fe9036f0 <__StackTop+0xc68036f0>
    32ec:	000001d6 	ldrdeq	r0, [r0], -r6
    32f0:	85700305 	ldrbhi	r0, [r0, #-773]!	; 0xfffffcfb
    32f4:	f5183800 			; <UNDEFINED> instruction: 0xf5183800
    32f8:	01000004 	tsteq	r0, r4
    32fc:	06a219a5 	strteq	r1, [r2], r5, lsr #19
    3300:	03050000 	movweq	r0, #20480	; 0x5000
    3304:	38008468 	stmdacc	r0, {r3, r5, r6, sl, pc}
    3308:	001c1813 	andseq	r1, ip, r3, lsl r8
    330c:	00088810 	andeq	r8, r8, r0, lsl r8
    3310:	00046200 	andeq	r6, r4, r0, lsl #4
    3314:	50011400 	andpl	r1, r1, r0, lsl #8
    3318:	00007702 	andeq	r7, r0, r2, lsl #14
    331c:	001c1e13 	andseq	r1, ip, r3, lsl lr
    3320:	00088810 	andeq	r8, r8, r0, lsl r8
    3324:	00047900 	andeq	r7, r4, r0, lsl #18
    3328:	50011400 	andpl	r1, r1, r0, lsl #8
    332c:	57f00305 	ldrbpl	r0, [r0, r5, lsl #6]!
    3330:	13001000 	movwne	r1, #0
    3334:	10001c24 	andne	r1, r0, r4, lsr #24
    3338:	00000888 	andeq	r0, r0, r8, lsl #17
    333c:	00000490 	muleq	r0, r0, r4
    3340:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3344:	00581003 	subseq	r1, r8, r3
    3348:	2c130010 	ldccs	0, cr0, [r3], {16}
    334c:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    3350:	a7000008 	strge	r0, [r0, -r8]
    3354:	14000004 	strne	r0, [r0], #-4
    3358:	03055001 	movweq	r5, #20481	; 0x5001
    335c:	10005824 	andne	r5, r0, r4, lsr #16
    3360:	1c341300 	ldcne	3, cr1, [r4], #-0
    3364:	08951000 	ldmeq	r5, {ip}
    3368:	04be0000 	ldrteq	r0, [lr], #0
    336c:	01140000 	tsteq	r4, r0
    3370:	38030550 	stmdacc	r3, {r4, r6, r8, sl}
    3374:	00100058 	andseq	r0, r0, r8, asr r0
    3378:	001c3c13 	andseq	r3, ip, r3, lsl ip
    337c:	00089510 	andeq	r9, r8, r0, lsl r5
    3380:	0004d500 	andeq	sp, r4, r0, lsl #10
    3384:	50011400 	andpl	r1, r1, r0, lsl #8
    3388:	584c0305 	stmdapl	ip, {r0, r2, r8, r9}^
    338c:	13001000 	movwne	r1, #0
    3390:	10001c44 	andne	r1, r0, r4, asr #24
    3394:	00000895 	muleq	r0, r5, r8
    3398:	000004ec 	andeq	r0, r0, ip, ror #9
    339c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    33a0:	00586003 	subseq	r6, r8, r3
    33a4:	4c130010 	ldcmi	0, cr0, [r3], {16}
    33a8:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    33ac:	03000008 	movweq	r0, #8
    33b0:	14000005 	strne	r0, [r0], #-5
    33b4:	03055001 	movweq	r5, #20481	; 0x5001
    33b8:	10005874 	andne	r5, r0, r4, ror r8
    33bc:	1c541300 	mrrcne	3, 0, r1, r4, cr0
    33c0:	08951000 	ldmeq	r5, {ip}
    33c4:	051a0000 	ldreq	r0, [sl, #-0]
    33c8:	01140000 	tsteq	r4, r0
    33cc:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
    33d0:	00100058 	andseq	r0, r0, r8, asr r0
    33d4:	001c5c13 	andseq	r5, ip, r3, lsl ip
    33d8:	00089510 	andeq	r9, r8, r0, lsl r5
    33dc:	00053100 	andeq	r3, r5, r0, lsl #2
    33e0:	50011400 	andpl	r1, r1, r0, lsl #8
    33e4:	589c0305 	ldmpl	ip, {r0, r2, r8, r9}
    33e8:	13001000 	movwne	r1, #0
    33ec:	10001c64 	andne	r1, r0, r4, ror #24
    33f0:	00000895 	muleq	r0, r5, r8
    33f4:	00000548 	andeq	r0, r0, r8, asr #10
    33f8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    33fc:	0058b003 	subseq	fp, r8, r3
    3400:	6c130010 	ldcvs	0, cr0, [r3], {16}
    3404:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    3408:	5f000008 	svcpl	0x00000008
    340c:	14000005 	strne	r0, [r0], #-5
    3410:	03055001 	movweq	r5, #20481	; 0x5001
    3414:	100058c4 	andne	r5, r0, r4, asr #17
    3418:	1c741300 	ldclne	3, cr1, [r4], #-0
    341c:	08951000 	ldmeq	r5, {ip}
    3420:	05760000 	ldrbeq	r0, [r6, #-0]!
    3424:	01140000 	tsteq	r4, r0
    3428:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    342c:	00100058 	andseq	r0, r0, r8, asr r0
    3430:	001c7c13 	andseq	r7, ip, r3, lsl ip
    3434:	00089510 	andeq	r9, r8, r0, lsl r5
    3438:	00058d00 	andeq	r8, r5, r0, lsl #26
    343c:	50011400 	andpl	r1, r1, r0, lsl #8
    3440:	58ec0305 	stmiapl	ip!, {r0, r2, r8, r9}^
    3444:	13001000 	movwne	r1, #0
    3448:	10001c84 	andne	r1, r0, r4, lsl #25
    344c:	00000895 	muleq	r0, r5, r8
    3450:	000005a4 	andeq	r0, r0, r4, lsr #11
    3454:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3458:	00590003 	subseq	r0, r9, r3
    345c:	8c130010 	ldchi	0, cr0, [r3], {16}
    3460:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    3464:	bb000008 	bllt	348c <__HEAP_SIZE+0x248c>
    3468:	14000005 	strne	r0, [r0], #-5
    346c:	03055001 	movweq	r5, #20481	; 0x5001
    3470:	10005914 	andne	r5, r0, r4, lsl r9
    3474:	1c941300 	ldcne	3, cr1, [r4], {0}
    3478:	08951000 	ldmeq	r5, {ip}
    347c:	05d20000 	ldrbeq	r0, [r2]
    3480:	01140000 	tsteq	r4, r0
    3484:	28030550 	stmdacs	r3, {r4, r6, r8, sl}
    3488:	00100059 	andseq	r0, r0, r9, asr r0
    348c:	001c9c13 	andseq	r9, ip, r3, lsl ip
    3490:	00089510 	andeq	r9, r8, r0, lsl r5
    3494:	0005e900 	andeq	lr, r5, r0, lsl #18
    3498:	50011400 	andpl	r1, r1, r0, lsl #8
    349c:	593c0305 	ldmdbpl	ip!, {r0, r2, r8, r9}
    34a0:	13001000 	movwne	r1, #0
    34a4:	10001ca4 	andne	r1, r0, r4, lsr #25
    34a8:	00000895 	muleq	r0, r5, r8
    34ac:	00000600 	andeq	r0, r0, r0, lsl #12
    34b0:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    34b4:	00595003 	subseq	r5, r9, r3
    34b8:	aa130010 	bge	4c3500 <__RAM_SIZE+0x3c3500>
    34bc:	8810001c 	ldmdahi	r0, {r2, r3, r4}
    34c0:	14000008 	strne	r0, [r0], #-8
    34c4:	14000006 	strne	r0, [r0], #-6
    34c8:	77025001 	strvc	r5, [r2, -r1]
    34cc:	b0130000 	andslt	r0, r3, r0
    34d0:	b210001c 	andslt	r0, r0, #28
    34d4:	28000006 	stmdacs	r0, {r1, r2}
    34d8:	14000006 	strne	r0, [r0], #-6
    34dc:	76025001 	strvc	r5, [r2], -r1
    34e0:	be130000 	cdplt	0, 1, cr0, cr3, cr0, {0}
    34e4:	cb10001c 	blgt	40355c <__RAM_SIZE+0x30355c>
    34e8:	4c000002 	stcmi	0, cr0, [r0], {2}
    34ec:	14000006 	strne	r0, [r0], #-6
    34f0:	03055001 	movweq	r5, #20481	; 0x5001
    34f4:	38008468 	stmdacc	r0, {r3, r5, r6, sl, pc}
    34f8:	02510114 	subseq	r0, r1, #20, 2
    34fc:	01144008 	tsteq	r4, r8
    3500:	c0750352 	rsbsgt	r0, r5, r2, asr r3
    3504:	c6130000 	ldrgt	r0, [r3], -r0
    3508:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    350c:	63000008 	movwvs	r0, #8
    3510:	14000006 	strne	r0, [r0], #-6
    3514:	03055001 	movweq	r5, #20481	; 0x5001
    3518:	10005964 	andne	r5, r0, r4, ror #18
    351c:	1cce1300 	stclne	3, cr1, [lr], {0}
    3520:	08951000 	ldmeq	r5, {ip}
    3524:	067a0000 	ldrbteq	r0, [sl], -r0
    3528:	01140000 	tsteq	r4, r0
    352c:	74030550 	strvc	r0, [r3], #-1360	; 0xfffffab0
    3530:	00100059 	andseq	r0, r0, r9, asr r0
    3534:	001cde13 	andseq	sp, ip, r3, lsl lr
    3538:	00089510 	andeq	r9, r8, r0, lsl r5
    353c:	00069100 	andeq	r9, r6, r0, lsl #2
    3540:	50011400 	andpl	r1, r1, r0, lsl #8
    3544:	59740305 	ldmdbpl	r4!, {r0, r2, r8, r9}^
    3548:	19001000 	stmdbne	r0, {ip}
    354c:	10001cea 	andne	r1, r0, sl, ror #25
    3550:	00000888 	andeq	r0, r0, r8, lsl #17
    3554:	02500114 	subseq	r0, r0, #20, 2
    3558:	00000077 	andeq	r0, r0, r7, ror r0
    355c:	0000801a 	andeq	r8, r0, sl, lsl r0
    3560:	0006b200 	andeq	fp, r6, r0, lsl #4
    3564:	00801b00 	addeq	r1, r0, r0, lsl #22
    3568:	003f0000 	eorseq	r0, pc, r0
    356c:	0008a11c 	andeq	sl, r8, ip, lsl r1
    3570:	0d990100 	ldfeqs	f0, [r9]
    3574:	001ae401 	andseq	lr, sl, r1, lsl #8
    3578:	001afc10 	andseq	pc, sl, r0, lsl ip	; <UNPREDICTABLE>
    357c:	002b2110 	eoreq	r2, fp, r0, lsl r1
    3580:	07230100 	streq	r0, [r3, -r0, lsl #2]!
    3584:	a6100000 	ldrge	r0, [r0], -r0
    3588:	01000008 	tsteq	r0, r8
    358c:	00802a99 	umulleq	r2, r0, r9, sl
    3590:	2b490000 	blcs	1243598 <__RAM_SIZE+0x1143598>
    3594:	2b410000 	blcs	104359c <__RAM_SIZE+0xf4359c>
    3598:	011d0000 	tsteq	sp, r0
    359c:	0000089b 	muleq	r0, fp, r8
    35a0:	01119c01 	tsteq	r1, r1, lsl #24
    35a4:	0006f501 	andeq	pc, r6, r1, lsl #10
    35a8:	00801e00 	addeq	r1, r0, r0, lsl #28
    35ac:	13000000 	movwne	r0, #0
    35b0:	10001af0 	strdne	r1, [r0], -r0
    35b4:	00000895 	muleq	r0, r5, r8
    35b8:	00000712 	andeq	r0, r0, r2, lsl r7
    35bc:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    35c0:	00577003 	subseq	r7, r7, r3
    35c4:	51011410 	tstpl	r1, r0, lsl r4
    35c8:	00007402 	andeq	r7, r0, r2, lsl #8
    35cc:	001af619 	andseq	pc, sl, r9, lsl r6	; <UNPREDICTABLE>
    35d0:	0008a310 	andeq	sl, r8, r0, lsl r3
    35d4:	50011400 	andpl	r1, r1, r0, lsl #8
    35d8:	00007402 	andeq	r7, r0, r2, lsl #8
    35dc:	077e1f00 	ldrbeq	r1, [lr, -r0, lsl #30]!
    35e0:	8a010000 	bhi	435e8 <__HEAP_SIZE+0x425e8>
    35e4:	077d010d 	ldrbeq	r0, [sp, -sp, lsl #2]!
    35e8:	1aac0000 	bne	feb035f0 <__StackTop+0xc6a035f0>
    35ec:	1ae21000 	bne	ff8875f4 <__StackTop+0xc77875f4>
    35f0:	7d021000 	stcvc	0, cr1, [r2, #-0]
    35f4:	077d0100 	ldrbeq	r0, [sp, -r0, lsl #2]!
    35f8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    35fc:	0100736e 	tsteq	r0, lr, ror #6
    3600:	00802e8a 	addeq	r2, r0, sl, lsl #29
    3604:	2b840000 	blcs	fe10360c <__StackTop+0xc600360c>
    3608:	2b800000 	blcs	fe003610 <__StackTop+0xc5f03610>
    360c:	03110000 	tsteq	r1, #0
    3610:	01000008 	tsteq	r0, r8
    3614:	00a60e8e 	adceq	r0, r6, lr, lsl #29
    3618:	2ba70000 	blcs	fe9c3620 <__StackTop+0xc68c3620>
    361c:	2ba50000 	blcs	fe943624 <__StackTop+0xc6843624>
    3620:	0b110000 	bleq	443628 <__RAM_SIZE+0x343628>
    3624:	01000008 	tsteq	r0, r8
    3628:	00a60e8f 	adceq	r0, r6, pc, lsl #29
    362c:	2bce0000 	blcs	ff383634 <__StackTop+0xc7283634>
    3630:	2bba0000 	blcs	fee83638 <__StackTop+0xc6d83638>
    3634:	02000000 	andeq	r0, r0, #0
    3638:	065d0201 	ldrbeq	r0, [sp], -r1, lsl #4
    363c:	c6210000 	strtgt	r0, [r1], -r0
    3640:	01000007 	tsteq	r0, r7
    3644:	8001157f 	andhi	r1, r1, pc, ror r5
    3648:	80000000 	andhi	r0, r0, r0
    364c:	ac10001a 	ldcge	0, cr0, [r0], {26}
    3650:	7110001a 	tstvc	r0, sl, lsl r0
    3654:	0100002c 	tsteq	r0, ip, lsr #32
    3658:	000007f5 	strdeq	r0, [r0], -r5
    365c:	00637020 	rsbeq	r7, r3, r0, lsr #32
    3660:	80347f01 	eorshi	r7, r4, r1, lsl #30
    3664:	a1000000 	mrsge	r0, (UNDEF: 0)
    3668:	9d00002c 	stcls	0, cr0, [r0, #-176]	; 0xffffff50
    366c:	1800002c 	stmdane	r0, {r2, r3, r5}
    3670:	0000009e 	muleq	r0, lr, r0
    3674:	f50e8001 			; <UNDEFINED> instruction: 0xf50e8001
    3678:	02000007 	andeq	r0, r0, #7
    367c:	d1117c91 			; <UNDEFINED> instruction: 0xd1117c91
    3680:	01000007 	tsteq	r0, r7
    3684:	00801281 	addeq	r1, r0, r1, lsl #5
    3688:	2cc80000 	stclcs	0, cr0, [r8], {0}
    368c:	2cc20000 	stclcs	0, cr0, [r2], {0}
    3690:	86220000 	strthi	r0, [r2], -r0
    3694:	9c10001a 	ldcls	0, cr0, [r0], {26}
    3698:	1210001a 	andsne	r0, r0, #26
    369c:	82010069 	andhi	r0, r1, #105	; 0x69
    36a0:	0000790e 	andeq	r7, r0, lr, lsl #18
    36a4:	002cfd00 	eoreq	pc, ip, r0, lsl #26
    36a8:	002cf900 	eoreq	pc, ip, r0, lsl #18
    36ac:	1a000000 	bne	36b4 <__HEAP_SIZE+0x26b4>
    36b0:	000000a6 	andeq	r0, r0, r6, lsr #1
    36b4:	00000805 	andeq	r0, r0, r5, lsl #16
    36b8:	0000801b 	andeq	r8, r0, fp, lsl r0
    36bc:	17000100 	strne	r0, [r0, -r0, lsl #2]
    36c0:	00029f01 	andeq	r9, r2, r1, lsl #30
    36c4:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    36c8:	001afc01 	andseq	pc, sl, r1, lsl #24
    36cc:	001b4c10 	andseq	r4, fp, r0, lsl ip
    36d0:	002d1c10 	eoreq	r1, sp, r0, lsl ip
    36d4:	08670100 	stmdaeq	r7!, {r8}^
    36d8:	12130000 	andsne	r0, r3, #0
    36dc:	9510001b 	ldrls	r0, [r0, #-27]	; 0xffffffe5
    36e0:	37000008 	strcc	r0, [r0, -r8]
    36e4:	14000008 	strne	r0, [r0], #-8
    36e8:	03055001 	movweq	r5, #20481	; 0x5001
    36ec:	10005788 	andne	r5, r0, r8, lsl #15
    36f0:	1b1e1300 	blne	7882f8 <__RAM_SIZE+0x6882f8>
    36f4:	08951000 	ldmeq	r5, {ip}
    36f8:	084e0000 	stmdaeq	lr, {}^	; <UNPREDICTABLE>
    36fc:	01140000 	tsteq	r4, r0
    3700:	ac030550 	cfstr32ge	mvfx0, [r3], {80}	; 0x50
    3704:	00100057 	andseq	r0, r0, r7, asr r0
    3708:	001b2619 	andseq	r2, fp, r9, lsl r6
    370c:	00089510 	andeq	r9, r8, r0, lsl r5
    3710:	50011400 	andpl	r1, r1, r0, lsl #8
    3714:	57d00305 	ldrbpl	r0, [r0, r5, lsl #6]
    3718:	01141000 	tsteq	r4, r0
    371c:	00310151 	eorseq	r0, r1, r1, asr r1
    3720:	08b82300 	ldmeq	r8!, {r8, r9, sp}
    3724:	63020000 	movwvs	r0, #8192	; 0x2000
    3728:	b2011f04 	andlt	r1, r1, #4, 30
    372c:	03000000 	movweq	r0, #0
    3730:	00000888 	andeq	r0, r0, r8, lsl #17
    3734:	0007e024 	andeq	lr, r7, r4, lsr #32
    3738:	04650200 	strbteq	r0, [r5], #-512	; 0xfffffe00
    373c:	0000b20c 	andeq	fp, r0, ip, lsl #4
    3740:	01250000 			; <UNDEFINED> instruction: 0x01250000
    3744:	00001b01 	andeq	r1, r0, r1, lsl #22
    3748:	00001100 	andeq	r1, r0, r0, lsl #2
    374c:	26000800 	strcs	r0, [r0], -r0, lsl #16
    3750:	05d10101 	ldrbeq	r0, [r1, #257]	; 0x101
    3754:	05d10000 	ldrbeq	r0, [r1]
    3758:	c8070000 	stmdagt	r7, {}	; <UNPREDICTABLE>
    375c:	01012605 	tsteq	r1, r5, lsl #12
    3760:	0000089b 	muleq	r0, fp, r8
    3764:	0000089b 	muleq	r0, fp, r8
    3768:	00119c01 	andseq	r9, r1, r1, lsl #24
    376c:	0000028d 	andeq	r0, r0, sp, lsl #5
    3770:	0abe0002 	beq	fef83780 <__StackTop+0xc6e83780>
    3774:	01040000 	mrseq	r0, (UNDEF: 4)
    3778:	00000189 	andeq	r0, r0, r9, lsl #3
    377c:	0008dc0c 	andeq	sp, r8, ip, lsl #24
    3780:	00038500 	andeq	r8, r3, r0, lsl #10
    3784:	00027800 	andeq	r7, r2, r0, lsl #16
	...
    3790:	0021a100 	eoreq	sl, r1, r0, lsl #2
    3794:	06010200 	streq	r0, [r1], -r0, lsl #4
    3798:	00000273 	andeq	r0, r0, r3, ror r2
    379c:	71080102 	tstvc	r8, r2, lsl #2
    37a0:	02000002 	andeq	r0, r0, #2
    37a4:	00320502 	eorseq	r0, r2, r2, lsl #10
    37a8:	02020000 	andeq	r0, r2, #0
    37ac:	00031a07 	andeq	r1, r3, r7, lsl #20
    37b0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    37b4:	0000012c 	andeq	r0, r0, ip, lsr #2
    37b8:	c2070402 	andgt	r0, r7, #33554432	; 0x2000000
    37bc:	02000002 	andeq	r0, r0, #2
    37c0:	01270508 			; <UNDEFINED> instruction: 0x01270508
    37c4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    37c8:	0002bd07 	andeq	fp, r2, r7, lsl #26
    37cc:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    37d0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    37d4:	c7070402 	strgt	r0, [r7, -r2, lsl #8]
    37d8:	02000002 	andeq	r0, r0, #2
    37dc:	00630408 	rsbeq	r0, r3, r8, lsl #8
    37e0:	01020000 	mrseq	r0, (UNDEF: 2)
    37e4:	00027a08 	andeq	r7, r2, r8, lsl #20
    37e8:	9b010400 	blls	447f0 <__HEAP_SIZE+0x437f0>
    37ec:	01000008 	tsteq	r0, r8
    37f0:	4c01060f 	stcmi	6, cr0, [r1], {15}
    37f4:	4810001d 	ldmdami	r0, {r0, r2, r3, r4}
    37f8:	3c10001e 	ldccc	0, cr0, [r0], {30}
    37fc:	0100002d 	tsteq	r0, sp, lsr #32
    3800:	00000275 	andeq	r0, r0, r5, ror r2
    3804:	0008a605 	andeq	sl, r8, r5, lsl #12
    3808:	290f0100 	stmdbcs	pc, {r8}	; <UNPREDICTABLE>
    380c:	00000068 	andeq	r0, r0, r8, rrx
    3810:	00002d60 	andeq	r2, r0, r0, ror #26
    3814:	00002d5c 	andeq	r2, r0, ip, asr sp
    3818:	001d5606 	andseq	r5, sp, r6, lsl #12
    381c:	00027510 	andeq	r7, r2, r0, lsl r5
    3820:	0000c300 	andeq	ip, r0, r0, lsl #6
    3824:	50010700 	andpl	r0, r1, r0, lsl #14
    3828:	597c0305 	ldmdbpl	ip!, {r0, r2, r8, r9}^
    382c:	06001000 	streq	r1, [r0], -r0
    3830:	10001d5c 	andne	r1, r0, ip, asr sp
    3834:	00000282 	andeq	r0, r0, r2, lsl #5
    3838:	000000da 	ldrdeq	r0, [r0], -sl
    383c:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    3840:	00598003 	subseq	r8, r9, r3
    3844:	68060010 	stmdavs	r6, {r4}
    3848:	7510001d 	ldrvc	r0, [r0, #-29]	; 0xffffffe3
    384c:	f1000002 	cps	#2
    3850:	07000000 	streq	r0, [r0, -r0]
    3854:	03055001 	movweq	r5, #20481	; 0x5001
    3858:	100059a0 	andne	r5, r0, r0, lsr #19
    385c:	1d6e0600 	stclne	6, cr0, [lr, #-0]
    3860:	02821000 	addeq	r1, r2, #0
    3864:	01080000 	mrseq	r0, (UNDEF: 8)
    3868:	01070000 	mrseq	r0, (UNDEF: 7)
    386c:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    3870:	00100059 	andseq	r0, r0, r9, asr r0
    3874:	001d7a06 	andseq	r7, sp, r6, lsl #20
    3878:	00027510 	andeq	r7, r2, r0, lsl r5
    387c:	00011f00 	andeq	r1, r1, r0, lsl #30
    3880:	50010700 	andpl	r0, r1, r0, lsl #14
    3884:	59f80305 	ldmibpl	r8!, {r0, r2, r8, r9}^
    3888:	06001000 	streq	r1, [r0], -r0
    388c:	10001d80 	andne	r1, r0, r0, lsl #27
    3890:	00000282 	andeq	r0, r0, r2, lsl #5
    3894:	00000136 	andeq	r0, r0, r6, lsr r1
    3898:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    389c:	005a3003 	subseq	r3, sl, r3
    38a0:	8c060010 	stchi	0, cr0, [r6], {16}
    38a4:	7510001d 	ldrvc	r0, [r0, #-29]	; 0xffffffe3
    38a8:	4d000002 	stcmi	0, cr0, [r0, #-8]
    38ac:	07000001 	streq	r0, [r0, -r1]
    38b0:	03055001 	movweq	r5, #20481	; 0x5001
    38b4:	10005a50 	andne	r5, r0, r0, asr sl
    38b8:	1d920600 	ldcne	6, cr0, [r2]
    38bc:	02821000 	addeq	r1, r2, #0
    38c0:	01640000 	cmneq	r4, r0
    38c4:	01070000 	mrseq	r0, (UNDEF: 7)
    38c8:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
    38cc:	0010005a 	andseq	r0, r0, sl, asr r0
    38d0:	001d9e06 	andseq	r9, sp, r6, lsl #28
    38d4:	00027510 	andeq	r7, r2, r0, lsl r5
    38d8:	00017b00 	andeq	r7, r1, r0, lsl #22
    38dc:	50010700 	andpl	r0, r1, r0, lsl #14
    38e0:	5aa80305 	bpl	fea044fc <__StackTop+0xc69044fc>
    38e4:	06001000 	streq	r1, [r0], -r0
    38e8:	10001da4 	andne	r1, r0, r4, lsr #27
    38ec:	00000282 	andeq	r0, r0, r2, lsl #5
    38f0:	00000192 	muleq	r0, r2, r1
    38f4:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    38f8:	005ae003 	subseq	lr, sl, r3
    38fc:	b0060010 	andlt	r0, r6, r0, lsl r0
    3900:	7510001d 	ldrvc	r0, [r0, #-29]	; 0xffffffe3
    3904:	a9000002 	stmdbge	r0, {r1}
    3908:	07000001 	streq	r0, [r0, -r1]
    390c:	03055001 	movweq	r5, #20481	; 0x5001
    3910:	10005b00 	andne	r5, r0, r0, lsl #22
    3914:	1db60600 	ldcne	6, cr0, [r6]
    3918:	02821000 	addeq	r1, r2, #0
    391c:	01c00000 	biceq	r0, r0, r0
    3920:	01070000 	mrseq	r0, (UNDEF: 7)
    3924:	38030550 	stmdacc	r3, {r4, r6, r8, sl}
    3928:	0010005b 	andseq	r0, r0, fp, asr r0
    392c:	001dc206 	andseq	ip, sp, r6, lsl #4
    3930:	00027510 	andeq	r7, r2, r0, lsl r5
    3934:	0001d700 	andeq	sp, r1, r0, lsl #14
    3938:	50010700 	andpl	r0, r1, r0, lsl #14
    393c:	5b580305 	blpl	1604558 <__RAM_SIZE+0x1504558>
    3940:	06001000 	streq	r1, [r0], -r0
    3944:	10001dc8 	andne	r1, r0, r8, asr #27
    3948:	00000275 	andeq	r0, r0, r5, ror r2
    394c:	000001ee 	andeq	r0, r0, lr, ror #3
    3950:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    3954:	00597c03 	subseq	r7, r9, r3, lsl #24
    3958:	d0060010 	andle	r0, r6, r0, lsl r0
    395c:	7510001d 	ldrvc	r0, [r0, #-29]	; 0xffffffe3
    3960:	05000002 	streq	r0, [r0, #-2]
    3964:	07000002 	streq	r0, [r0, -r2]
    3968:	03055001 	movweq	r5, #20481	; 0x5001
    396c:	100059bc 			; <UNDEFINED> instruction: 0x100059bc
    3970:	1dd80600 	ldclne	6, cr0, [r8]
    3974:	02751000 	rsbseq	r1, r5, #0
    3978:	021c0000 	andseq	r0, ip, #0
    397c:	01070000 	mrseq	r0, (UNDEF: 7)
    3980:	14030550 	strne	r0, [r3], #-1360	; 0xfffffab0
    3984:	0010005a 	andseq	r0, r0, sl, asr r0
    3988:	001de006 	andseq	lr, sp, r6
    398c:	00027510 	andeq	r7, r2, r0, lsl r5
    3990:	00023300 	andeq	r3, r2, r0, lsl #6
    3994:	50010700 	andpl	r0, r1, r0, lsl #14
    3998:	5a6c0305 	bpl	1b045b4 <__RAM_SIZE+0x1a045b4>
    399c:	06001000 	streq	r1, [r0], -r0
    39a0:	10001de8 	andne	r1, r0, r8, ror #27
    39a4:	00000275 	andeq	r0, r0, r5, ror r2
    39a8:	0000024a 	andeq	r0, r0, sl, asr #4
    39ac:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    39b0:	005ac403 	subseq	ip, sl, r3, lsl #8
    39b4:	f0060010 			; <UNDEFINED> instruction: 0xf0060010
    39b8:	7510001d 	ldrvc	r0, [r0, #-29]	; 0xffffffe3
    39bc:	61000002 	tstvs	r0, r2
    39c0:	07000002 	streq	r0, [r0, -r2]
    39c4:	03055001 	movweq	r5, #20481	; 0x5001
    39c8:	10005b1c 	andne	r5, r0, ip, lsl fp
    39cc:	1df80800 	ldclne	8, cr0, [r8]
    39d0:	02751000 	rsbseq	r1, r5, #0
    39d4:	01070000 	mrseq	r0, (UNDEF: 7)
    39d8:	74030550 	strvc	r0, [r3], #-1360	; 0xfffffab0
    39dc:	0010005b 	andseq	r0, r0, fp, asr r0
    39e0:	01010900 	tsteq	r1, r0, lsl #18
    39e4:	0000001b 	andeq	r0, r0, fp, lsl r0
    39e8:	00000011 	andeq	r0, r0, r1, lsl r0
    39ec:	010a0002 	tsteq	sl, r2
    39f0:	0005d101 	andeq	sp, r5, r1, lsl #2
    39f4:	0005d100 	andeq	sp, r5, r0, lsl #2
    39f8:	05c80300 	strbeq	r0, [r8, #768]	; 0x300
    39fc:	0002cb00 	andeq	ip, r2, r0, lsl #22
    3a00:	64000200 	strvs	r0, [r0], #-512	; 0xfffffe00
    3a04:	0400000b 	streq	r0, [r0], #-11
    3a08:	00018901 	andeq	r8, r1, r1, lsl #18
    3a0c:	09ee0c00 	stmibeq	lr!, {sl, fp}^
    3a10:	03850000 	orreq	r0, r5, #0
    3a14:	02880000 	addeq	r0, r8, #0
	...
    3a20:	22d80000 	sbcscs	r0, r8, #0
    3a24:	04020000 	streq	r0, [r2], #-0
    3a28:	0002c707 	andeq	ip, r2, r7, lsl #14
    3a2c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    3a30:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3a34:	27050802 	strcs	r0, [r5, -r2, lsl #16]
    3a38:	02000001 	andeq	r0, r0, #1
    3a3c:	00630408 	rsbeq	r0, r3, r8, lsl #8
    3a40:	01020000 	mrseq	r0, (UNDEF: 2)
    3a44:	00027306 	andeq	r7, r2, r6, lsl #6
    3a48:	08010200 	stmdaeq	r1, {r9}
    3a4c:	00000271 	andeq	r0, r0, r1, ror r2
    3a50:	32050202 	andcc	r0, r5, #536870912	; 0x20000000
    3a54:	02000000 	andeq	r0, r0, #0
    3a58:	031a0702 	tsteq	sl, #524288	; 0x80000
    3a5c:	04020000 	streq	r0, [r2], #-0
    3a60:	00012c05 	andeq	r2, r1, r5, lsl #24
    3a64:	006f0400 	rsbeq	r0, pc, r0, lsl #8
    3a68:	4f020000 	svcmi	0x00020000
    3a6c:	00007419 	andeq	r7, r0, r9, lsl r4
    3a70:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3a74:	000002c2 	andeq	r0, r0, r2, asr #5
    3a78:	bd070802 	stclt	8, cr0, [r7, #-8]
    3a7c:	05000002 	streq	r0, [r0, #-2]
    3a80:	08010204 	stmdaeq	r1, {r2, r9}
    3a84:	0000027a 	andeq	r0, r0, sl, ror r2
    3a88:	00007104 	andeq	r7, r0, r4, lsl #2
    3a8c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    3a90:	00000068 	andeq	r0, r0, r8, rrx
    3a94:	0009c404 	andeq	ip, r9, r4, lsl #8
    3a98:	1a4b0400 	bne	12c4aa0 <__RAM_SIZE+0x11c4aa0>
    3a9c:	00000074 	andeq	r0, r0, r4, ror r0
    3aa0:	00092004 	andeq	r2, r9, r4
    3aa4:	1a510400 	bne	1444aac <__RAM_SIZE+0x1344aac>
    3aa8:	0000008b 	andeq	r0, r0, fp, lsl #1
    3aac:	0000a306 	andeq	sl, r0, r6, lsl #6
    3ab0:	09470700 	stmdbeq	r7, {r8, r9, sl}^
    3ab4:	05140000 	ldreq	r0, [r4, #-0]
    3ab8:	010d0890 			; <UNDEFINED> instruction: 0x010d0890
    3abc:	2b080000 	blcs	203ac4 <__RAM_SIZE+0x103ac4>
    3ac0:	05000009 	streq	r0, [r0, #-9]
    3ac4:	00a32493 	umlaleq	r2, r3, r3, r4
    3ac8:	23020000 	movwcs	r0, #8192	; 0x2000
    3acc:	09940800 	ldmibeq	r4, {fp}
    3ad0:	94050000 	strls	r0, [r5], #-0
    3ad4:	00010d2d 	andeq	r0, r1, sp, lsr #26
    3ad8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3adc:	0009e308 	andeq	lr, r9, r8, lsl #6
    3ae0:	2d950500 	cfldr32cs	mvfx0, [r5]
    3ae4:	0000010d 	andeq	r0, r0, sp, lsl #2
    3ae8:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    3aec:	0000093f 	andeq	r0, r0, pc, lsr r9
    3af0:	820c9605 	andhi	r9, ip, #5242880	; 0x500000
    3af4:	02000000 	andeq	r0, r0, #0
    3af8:	14080c23 	strne	r0, [r8], #-3107	; 0xfffff3dd
    3afc:	05000009 	streq	r0, [r0, #-9]
    3b00:	014e2897 			; <UNDEFINED> instruction: 0x014e2897
    3b04:	23020000 	movwcs	r0, #8192	; 0x2000
    3b08:	04090010 	streq	r0, [r9], #-16
    3b0c:	000000b4 	strheq	r0, [r0], -r4
    3b10:	000a1607 	andeq	r1, sl, r7, lsl #12
    3b14:	ac051c00 	stcge	12, cr1, [r5], {-0}
    3b18:	00014e10 	andeq	r4, r1, r0, lsl lr
    3b1c:	09750800 	ldmdbeq	r5!, {fp}^
    3b20:	af050000 	svcge	0x00050000
    3b24:	00009725 	andeq	r9, r0, r5, lsr #14
    3b28:	00230200 	eoreq	r0, r3, r0, lsl #4
    3b2c:	0009db08 	andeq	sp, r9, r8, lsl #22
    3b30:	26b00500 	ldrtcs	r0, [r0], r0, lsl #10
    3b34:	0000016c 	andeq	r0, r0, ip, ror #2
    3b38:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    3b3c:	00000936 	andeq	r0, r0, r6, lsr r9
    3b40:	6014b105 	andsvs	fp, r4, r5, lsl #2
    3b44:	02000001 	andeq	r0, r0, #1
    3b48:	09000823 	stmdbeq	r0, {r0, r1, r5, fp}
    3b4c:	00011304 	andeq	r1, r1, r4, lsl #6
    3b50:	193d0400 	ldmdbne	sp!, {sl}
    3b54:	9a050000 	bls	143b5c <__RAM_SIZE+0x43b5c>
    3b58:	0000b41b 	andeq	fp, r0, fp, lsl r4
    3b5c:	0b700400 	bleq	1c04b64 <__RAM_SIZE+0x1b04b64>
    3b60:	a6050000 	strge	r0, [r5], -r0
    3b64:	0000b424 	andeq	fp, r0, r4, lsr #8
    3b68:	54040900 	strpl	r0, [r4], #-2304	; 0xfffff700
    3b6c:	06000001 	streq	r0, [r0], -r1
    3b70:	0000016c 	andeq	r0, r0, ip, ror #2
    3b74:	0013e304 	andseq	lr, r3, r4, lsl #6
    3b78:	03b30500 			; <UNDEFINED> instruction: 0x03b30500
    3b7c:	00000113 	andeq	r0, r0, r3, lsl r1
    3b80:	0a1c010a 	beq	703fb0 <__RAM_SIZE+0x603fb0>
    3b84:	d7010000 	strle	r0, [r1, -r0]
    3b88:	0097010d 	addseq	r0, r7, sp, lsl #2
    3b8c:	1e9a0000 	cdpne	0, 9, cr0, cr10, cr0, {0}
    3b90:	1ebe1000 	cdpne	0, 11, cr1, cr14, cr0, {0}
    3b94:	7d021000 	stcvc	0, cr1, [r2, #-0]
    3b98:	01ca0100 	biceq	r0, sl, r0, lsl #2
    3b9c:	520b0000 	andpl	r0, fp, #0
    3ba0:	01000009 	tsteq	r0, r9
    3ba4:	01722ed7 	ldrsbeq	r2, [r2, #-231]!	; 0xffffff19
    3ba8:	2d840000 	stccs	0, cr0, [r4]
    3bac:	2d7e0000 	ldclcs	0, cr0, [lr, #-0]
    3bb0:	0f0c0000 	svceq	0x000c0000
    3bb4:	0100000a 	tsteq	r0, sl
    3bb8:	01d014db 	ldrsbeq	r1, [r0, #75]	; 0x4b
    3bbc:	2db20000 	ldccs	0, cr0, [r2]
    3bc0:	2db00000 	ldccs	0, cr0, [r0]
    3bc4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3bc8:	00017704 	andeq	r7, r1, r4, lsl #14
    3bcc:	01ca0600 	biceq	r0, sl, r0, lsl #12
    3bd0:	010d0000 	mrseq	r0, (UNDEF: 13)
    3bd4:	00000a37 	andeq	r0, r0, r7, lsr sl
    3bd8:	01068b01 	tsteq	r6, r1, lsl #22
    3bdc:	10001e68 	andne	r1, r0, r8, ror #28
    3be0:	10001e9a 	mulne	r0, sl, lr
    3be4:	00002dc5 	andeq	r2, r0, r5, asr #27
    3be8:	00023501 	andeq	r3, r2, r1, lsl #10
    3bec:	0a0f0e00 	beq	3c73f4 <__RAM_SIZE+0x2c73f4>
    3bf0:	8b010000 	blhi	43bf8 <__HEAP_SIZE+0x42bf8>
    3bf4:	0001d022 	andeq	sp, r1, r2, lsr #32
    3bf8:	0e500100 	rdfeqs	f0, f0, f0
    3bfc:	00000a29 	andeq	r0, r0, r9, lsr #20
    3c00:	72268c01 	eorvc	r8, r6, #256	; 0x100
    3c04:	01000001 	tsteq	r0, r1
    3c08:	09d00c51 	ldmibeq	r0, {r0, r4, r6, sl, fp}^
    3c0c:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    3c10:	00016c12 	andeq	r6, r1, r2, lsl ip
    3c14:	002e0300 	eoreq	r0, lr, r0, lsl #6
    3c18:	002dfd00 	eoreq	pc, sp, r0, lsl #26
    3c1c:	09ab0c00 	stmibeq	fp!, {sl, fp}
    3c20:	8f010000 	svchi	0x00010000
    3c24:	0000af16 	andeq	sl, r0, r6, lsl pc
    3c28:	002e3000 	eoreq	r3, lr, r0
    3c2c:	002e2c00 	eoreq	r2, lr, r0, lsl #24
    3c30:	010f0000 	mrseq	r0, CPSR
    3c34:	00000985 	andeq	r0, r0, r5, lsl #19
    3c38:	01066901 	tsteq	r6, r1, lsl #18
	...
    3c44:	01007d02 	tsteq	r0, r2, lsl #26
    3c48:	00000280 	andeq	r0, r0, r0, lsl #5
    3c4c:	000a0f0e 	andeq	r0, sl, lr, lsl #30
    3c50:	25690100 	strbcs	r0, [r9, #-256]!	; 0xffffff00
    3c54:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3c58:	290e5001 	stmdbcs	lr, {r0, ip, lr}
    3c5c:	0100000a 	tsteq	r0, sl
    3c60:	0172296a 	cmneq	r2, sl, ror #18
    3c64:	51010000 	mrspl	r0, (UNDEF: 1)
    3c68:	0009db0c 	andeq	sp, r9, ip, lsl #22
    3c6c:	186c0100 	stmdane	ip!, {r8}^
    3c70:	00000172 	andeq	r0, r0, r2, ror r1
    3c74:	00002e50 	andeq	r2, r0, r0, asr lr
    3c78:	00002e4e 	andeq	r2, r0, lr, asr #28
    3c7c:	61010f00 	tstvs	r1, r0, lsl #30
    3c80:	01000009 	tsteq	r0, r9
    3c84:	62010659 	andvs	r0, r1, #93323264	; 0x5900000
    3c88:	6810001e 	ldmdavs	r0, {r1, r2, r3, r4}
    3c8c:	0210001e 	andseq	r0, r0, #30
    3c90:	a901007d 	stmdbge	r1, {r0, r2, r3, r4, r5, r6}
    3c94:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3c98:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
    3c9c:	722e5901 	eorvc	r5, lr, #16384	; 0x4000
    3ca0:	01000001 	tsteq	r0, r1
    3ca4:	01100050 	tsteq	r0, r0, asr r0
    3ca8:	0000099b 	muleq	r0, fp, r9
    3cac:	01063101 	tsteq	r6, r1, lsl #2
    3cb0:	10001e48 	andne	r1, r0, r8, asr #28
    3cb4:	10001e62 	andne	r1, r0, r2, ror #28
    3cb8:	01007d02 	tsteq	r0, r2, lsl #26
    3cbc:	000a0f0e 	andeq	r0, sl, lr, lsl #30
    3cc0:	26310100 	ldrtcs	r0, [r1], -r0, lsl #2
    3cc4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3cc8:	00005001 	andeq	r5, r0, r1
    3ccc:	000024bd 			; <UNDEFINED> instruction: 0x000024bd
    3cd0:	0c810002 	stceq	0, cr0, [r1], {2}
    3cd4:	01040000 	mrseq	r0, (UNDEF: 4)
    3cd8:	00000189 	andeq	r0, r0, r9, lsl #3
    3cdc:	000e4e0c 	andeq	r4, lr, ip, lsl #28
    3ce0:	00038500 	andeq	r8, r3, r0, lsl #10
    3ce4:	00039000 	andeq	r9, r3, r0
	...
    3cf0:	00267500 	eoreq	r7, r6, r0, lsl #10
    3cf4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3cf8:	d1020000 	mrsle	r0, (UNDEF: 2)
    3cfc:	00003517 	andeq	r3, r0, r7, lsl r5
    3d00:	07040300 	streq	r0, [r4, -r0, lsl #6]
    3d04:	000002c7 	andeq	r0, r0, r7, asr #5
    3d08:	69050404 	stmdbvs	r5, {r2, sl}
    3d0c:	0300746e 	movweq	r7, #1134	; 0x46e
    3d10:	01270508 			; <UNDEFINED> instruction: 0x01270508
    3d14:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3d18:	00006304 	andeq	r6, r0, r4, lsl #6
    3d1c:	10cc0200 	sbcne	r0, ip, r0, lsl #4
    3d20:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    3d24:	00005d17 	andeq	r5, r0, r7, lsl sp
    3d28:	06010300 	streq	r0, [r1], -r0, lsl #6
    3d2c:	00000273 	andeq	r0, r0, r3, ror r2
    3d30:	00017f02 	andeq	r7, r1, r2, lsl #30
    3d34:	182b0300 	stmdane	fp!, {r8, r9}
    3d38:	00000070 	andeq	r0, r0, r0, ror r0
    3d3c:	71080103 	tstvc	r8, r3, lsl #2
    3d40:	03000002 	movweq	r0, #2
    3d44:	00320502 	eorseq	r0, r2, r2, lsl #10
    3d48:	02030000 	andeq	r0, r3, #0
    3d4c:	00031a07 	andeq	r1, r3, r7, lsl #20
    3d50:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    3d54:	0000012c 	andeq	r0, r0, ip, lsr #2
    3d58:	00006f02 	andeq	r6, r0, r2, lsl #30
    3d5c:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    3d60:	00000098 	muleq	r0, r8, r0
    3d64:	c2070403 	andgt	r0, r7, #50331648	; 0x3000000
    3d68:	03000002 	movweq	r0, #2
    3d6c:	02bd0708 	adcseq	r0, sp, #8, 14	; 0x200000
    3d70:	04050000 	streq	r0, [r5], #-0
    3d74:	0000a606 	andeq	sl, r0, r6, lsl #12
    3d78:	08010300 	stmdaeq	r1, {r8, r9}
    3d7c:	0000027a 	andeq	r0, r0, sl, ror r2
    3d80:	00bf0407 	adcseq	r0, pc, r7, lsl #8
    3d84:	b4060000 	strlt	r0, [r6], #-0
    3d88:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3d8c:	0010ce02 	andseq	ip, r0, r2, lsl #28
    3d90:	12140400 	andsne	r0, r4, #0, 8
    3d94:	00000051 	andeq	r0, r0, r1, asr r0
    3d98:	0000c009 	andeq	ip, r0, r9
    3d9c:	00c00600 	sbceq	r0, r0, r0, lsl #12
    3da0:	81020000 	mrshi	r0, (UNDEF: 2)
    3da4:	04000001 	streq	r0, [r0], #-1
    3da8:	00641318 	rsbeq	r1, r4, r8, lsl r3
    3dac:	d6060000 	strle	r0, [r6], -r0
    3db0:	02000000 	andeq	r0, r0, #0
    3db4:	00000071 	andeq	r0, r0, r1, ror r0
    3db8:	8c143004 	ldchi	0, cr3, [r4], {4}
    3dbc:	02000000 	andeq	r0, r0, #0
    3dc0:	000009c5 	andeq	r0, r0, r5, asr #19
    3dc4:	851a4a05 	ldrhi	r4, [sl, #-2565]	; 0xfffff5fb
    3dc8:	06000000 	streq	r0, [r0], -r0
    3dcc:	000000f3 	strdeq	r0, [r0], -r3
    3dd0:	0009c402 	andeq	ip, r9, r2, lsl #8
    3dd4:	1a4b0500 	bne	12c51dc <__RAM_SIZE+0x11c51dc>
    3dd8:	00000098 	muleq	r0, r8, r0
    3ddc:	00010409 	andeq	r0, r1, r9, lsl #8
    3de0:	01040600 	tsteq	r4, r0, lsl #12
    3de4:	20020000 	andcs	r0, r2, r0
    3de8:	05000009 	streq	r0, [r0, #-9]
    3dec:	00e71a51 	rsceq	r1, r7, r1, asr sl
    3df0:	1a060000 	bne	183df8 <__RAM_SIZE+0x83df8>
    3df4:	07000001 	streq	r0, [r0, -r1]
    3df8:	0000d604 	andeq	sp, r0, r4, lsl #12
    3dfc:	12240a00 	eorne	r0, r4, #0, 20
    3e00:	06140000 	ldreq	r0, [r4], -r0
    3e04:	60080c0c 	andvs	r0, r8, ip, lsl #24
    3e08:	0b000001 	bleq	3e14 <__HEAP_SIZE+0x2e14>
    3e0c:	00000dc5 	andeq	r0, r0, r5, asr #27
    3e10:	100c1106 	andne	r1, ip, r6, lsl #2
    3e14:	0000011a 	andeq	r0, r0, sl, lsl r1
    3e18:	0b002302 	bleq	ca28 <__HEAP_SIZE+0xba28>
    3e1c:	00000dbb 			; <UNDEFINED> instruction: 0x00000dbb
    3e20:	0c0c1206 	sfmeq	f1, 4, [ip], {6}
    3e24:	00000160 	andeq	r0, r0, r0, ror #2
    3e28:	00042302 	andeq	r2, r4, r2, lsl #6
    3e2c:	0000a60c 	andeq	sl, r0, ip, lsl #12
    3e30:	00017000 	andeq	r7, r1, r0
    3e34:	00350d00 	eorseq	r0, r5, r0, lsl #26
    3e38:	00030000 	andeq	r0, r3, r0
    3e3c:	000b6a0e 	andeq	r6, fp, lr, lsl #20
    3e40:	0c250600 	stceq	6, cr0, [r5], #-0
    3e44:	0001312b 	andeq	r3, r1, fp, lsr #2
    3e48:	0fb60a00 	svceq	0x00b60a00
    3e4c:	061c0000 	ldreq	r0, [ip], -r0
    3e50:	bc100c29 	ldclt	12, cr0, [r0], {41}	; 0x29
    3e54:	0b000001 	bleq	3e60 <__HEAP_SIZE+0x2e60>
    3e58:	00000dc4 	andeq	r0, r0, r4, asr #27
    3e5c:	110c2e06 	tstne	ip, r6, lsl #28
    3e60:	00000104 	andeq	r0, r0, r4, lsl #2
    3e64:	0b002302 	bleq	ca74 <__HEAP_SIZE+0xba74>
    3e68:	00000dbb 			; <UNDEFINED> instruction: 0x00000dbb
    3e6c:	0c0c2f06 	stceq	15, cr2, [ip], {6}
    3e70:	000000a6 	andeq	r0, r0, r6, lsr #1
    3e74:	0b042302 	bleq	10ca84 <__RAM_SIZE+0xca84>
    3e78:	00000dd7 	ldrdeq	r0, [r0], -r7
    3e7c:	1a0c3006 	bne	30fe9c <__RAM_SIZE+0x20fe9c>
    3e80:	00000170 	andeq	r0, r0, r0, ror r1
    3e84:	00082302 	andeq	r2, r8, r2, lsl #6
    3e88:	0013dd0e 	andseq	sp, r3, lr, lsl #26
    3e8c:	0c340600 	ldceq	6, cr0, [r4], #-0
    3e90:	00017d03 	andeq	r7, r1, r3, lsl #26
    3e94:	06040f00 	streq	r0, [r4], -r0, lsl #30
    3e98:	ee050c91 	mcr	12, 0, r0, cr5, cr1, {4}
    3e9c:	10000001 	andne	r0, r0, r1
    3ea0:	00000db2 			; <UNDEFINED> instruction: 0x00000db2
    3ea4:	100c9306 	andne	r9, ip, r6, lsl #6
    3ea8:	000000a6 	andeq	r0, r0, r6, lsr #1
    3eac:	000dc410 	andeq	ip, sp, r0, lsl r4
    3eb0:	0c940600 	ldceq	6, cr0, [r4], {0}
    3eb4:	00010415 	andeq	r0, r1, r5, lsl r4
    3eb8:	a30a0000 	movwge	r0, #40960	; 0xa000
    3ebc:	5c000013 	stcpl	0, cr0, [r0], {19}
    3ec0:	100c8d06 	andne	r8, ip, r6, lsl #26
    3ec4:	0000026b 	andeq	r0, r0, fp, ror #4
    3ec8:	000da90b 	andeq	sl, sp, fp, lsl #18
    3ecc:	0c8f0600 	stceq	6, cr0, [pc], {0}
    3ed0:	00026b0c 	andeq	r6, r2, ip, lsl #22
    3ed4:	00230200 	eoreq	r0, r3, r0, lsl #4
    3ed8:	06007511 			; <UNDEFINED> instruction: 0x06007511
    3edc:	c9070c95 	stmdbgt	r7, {r0, r2, r4, r7, sl, fp}
    3ee0:	02000001 	andeq	r0, r0, #1
    3ee4:	e90b0c23 	stmdb	fp, {r0, r1, r5, sl, fp}
    3ee8:	06000012 			; <UNDEFINED> instruction: 0x06000012
    3eec:	7b120c97 	blvc	487150 <__RAM_SIZE+0x387150>
    3ef0:	02000002 	andeq	r0, r0, #2
    3ef4:	d60b1023 	strle	r1, [fp], -r3, lsr #32
    3ef8:	0600000d 	streq	r0, [r0], -sp
    3efc:	8b110c98 	blhi	447164 <__RAM_SIZE+0x347164>
    3f00:	02000002 	andeq	r0, r0, #2
    3f04:	f80b4823 			; <UNDEFINED> instruction: 0xf80b4823
    3f08:	06000010 			; <UNDEFINED> instruction: 0x06000010
    3f0c:	9b0d0c99 	blls	347178 <__RAM_SIZE+0x247178>
    3f10:	02000002 	andeq	r0, r0, #2
    3f14:	010b5423 	tsteq	fp, r3, lsr #8
    3f18:	06000011 			; <UNDEFINED> instruction: 0x06000011
    3f1c:	d6110c9c 			; <UNDEFINED> instruction: 0xd6110c9c
    3f20:	02000000 	andeq	r0, r0, #0
    3f24:	cd0b5623 	stcgt	6, cr5, [fp, #-140]	; 0xffffff74
    3f28:	0600000d 	streq	r0, [r0], -sp
    3f2c:	a6100ca0 	ldrge	r0, [r0], -r0, lsr #25
    3f30:	02000000 	andeq	r0, r0, #0
    3f34:	0c005823 	stceq	8, cr5, [r0], {35}	; 0x23
    3f38:	000000a6 	andeq	r0, r0, r6, lsr #1
    3f3c:	0000027b 	andeq	r0, r0, fp, ror r2
    3f40:	0000350d 	andeq	r3, r0, sp, lsl #10
    3f44:	0c000200 	sfmeq	f0, 4, [r0], {-0}
    3f48:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    3f4c:	0000028b 	andeq	r0, r0, fp, lsl #5
    3f50:	0000350d 	andeq	r3, r0, sp, lsl #10
    3f54:	0c000100 	stfeqs	f0, [r0], {-0}
    3f58:	00000104 	andeq	r0, r0, r4, lsl #2
    3f5c:	0000029b 	muleq	r0, fp, r2
    3f60:	0000350d 	andeq	r3, r0, sp, lsl #10
    3f64:	0c000200 	sfmeq	f0, 4, [r0], {-0}
    3f68:	000000d6 	ldrdeq	r0, [r0], -r6
    3f6c:	000002ab 	andeq	r0, r0, fp, lsr #5
    3f70:	0000350d 	andeq	r3, r0, sp, lsl #10
    3f74:	0e000100 	adfeqs	f0, f0, f0
    3f78:	00000fe6 	andeq	r0, r0, r6, ror #31
    3f7c:	030ca706 	movweq	sl, #50950	; 0xc706
    3f80:	000001ee 	andeq	r0, r0, lr, ror #3
    3f84:	00094712 	andeq	r4, r9, r2, lsl r7
    3f88:	90071400 	andls	r1, r7, r0, lsl #8
    3f8c:	00031108 	andeq	r1, r3, r8, lsl #2
    3f90:	092b1300 	stmdbeq	fp!, {r8, r9, ip}
    3f94:	93070000 	movwls	r0, #28672	; 0x7000
    3f98:	00011a24 	andeq	r1, r1, r4, lsr #20
    3f9c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3fa0:	00099413 	andeq	r9, r9, r3, lsl r4
    3fa4:	2d940700 	ldccs	7, cr0, [r4]
    3fa8:	00000311 	andeq	r0, r0, r1, lsl r3
    3fac:	13042302 	movwne	r2, #17154	; 0x4302
    3fb0:	000009e3 	andeq	r0, r0, r3, ror #19
    3fb4:	112d9507 			; <UNDEFINED> instruction: 0x112d9507
    3fb8:	02000003 	andeq	r0, r0, #3
    3fbc:	3f130823 	svccc	0x00130823
    3fc0:	07000009 	streq	r0, [r0, -r9]
    3fc4:	00a60c96 	umlaleq	r0, r6, r6, ip
    3fc8:	23020000 	movwcs	r0, #8192	; 0x2000
    3fcc:	0914130c 	ldmdbeq	r4, {r2, r3, r8, r9, ip}
    3fd0:	97070000 	strls	r0, [r7, -r0]
    3fd4:	00035228 	andeq	r5, r3, r8, lsr #4
    3fd8:	10230200 	eorne	r0, r3, r0, lsl #4
    3fdc:	b8040700 	stmdalt	r4, {r8, r9, sl}
    3fe0:	12000002 	andne	r0, r0, #2
    3fe4:	00000a16 	andeq	r0, r0, r6, lsl sl
    3fe8:	10ac071c 	adcne	r0, ip, ip, lsl r7
    3fec:	00000352 	andeq	r0, r0, r2, asr r3
    3ff0:	00097513 	andeq	r7, r9, r3, lsl r5
    3ff4:	25af0700 	strcs	r0, [pc, #1792]!	; 46fc <__HEAP_SIZE+0x36fc>
    3ff8:	00000104 	andeq	r0, r0, r4, lsl #2
    3ffc:	13002302 	movwne	r2, #770	; 0x302
    4000:	000009db 	ldrdeq	r0, [r0], -fp
    4004:	7026b007 	eorvc	fp, r6, r7
    4008:	02000003 	andeq	r0, r0, #3
    400c:	36130423 	ldrcc	r0, [r3], -r3, lsr #8
    4010:	07000009 	streq	r0, [r0, -r9]
    4014:	036414b1 	cmneq	r4, #-1325400064	; 0xb1000000
    4018:	23020000 	movwcs	r0, #8192	; 0x2000
    401c:	04070008 	streq	r0, [r7], #-8
    4020:	00000317 	andeq	r0, r0, r7, lsl r3
    4024:	00193d02 	andseq	r3, r9, r2, lsl #26
    4028:	1b9a0700 	blne	fe685c30 <__StackTop+0xc6585c30>
    402c:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    4030:	000b7002 	andeq	r7, fp, r2
    4034:	24a60700 	strtcs	r0, [r6], #1792	; 0x700
    4038:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    403c:	03580407 	cmpeq	r8, #117440512	; 0x7000000
    4040:	e3020000 	movw	r0, #8192	; 0x2000
    4044:	07000013 	smladeq	r0, r3, r0, r0
    4048:	031703b3 	tsteq	r7, #-872415230	; 0xcc000002
    404c:	ea020000 	b	84054 <__HEAP_SIZE+0x83054>
    4050:	08000002 	stmdaeq	r0, {r1}
    4054:	038e2e5c 	orreq	r2, lr, #92, 28	; 0x5c0
    4058:	04070000 	streq	r0, [r7], #-0
    405c:	00000394 	muleq	r0, r4, r3
    4060:	00016b14 	andeq	r6, r1, r4, lsl fp
    4064:	13120100 	tstne	r2, #0, 2
    4068:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    406c:	c6107d08 	ldrgt	r7, [r0], -r8, lsl #26
    4070:	13000003 	movwne	r0, #3
    4074:	00000bc4 	andeq	r0, r0, r4, asr #23
    4078:	f3107f08 	vpmax.f16	d7, d0, d8
    407c:	02000000 	andeq	r0, r0, #0
    4080:	d6130023 	ldrle	r0, [r3], -r3, lsr #32
    4084:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    4088:	011a1080 	tsteq	sl, r0, lsl #1
    408c:	23020000 	movwcs	r0, #8192	; 0x2000
    4090:	23020004 	movwcs	r0, #8196	; 0x2004
    4094:	08000010 	stmdaeq	r0, {r4}
    4098:	039a0381 	orrseq	r0, sl, #67108866	; 0x4000002
    409c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    40a0:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    40a4:	03e32433 	mvneq	r2, #855638016	; 0x33000000
    40a8:	d2060000 	andle	r0, r6, #0
    40ac:	07000003 	streq	r0, [r0, -r3]
    40b0:	0003e904 	andeq	lr, r3, r4, lsl #18
    40b4:	0c791200 	lfmeq	f1, 2, [r9], #-0
    40b8:	015c0000 	cmpeq	ip, r0
    40bc:	04a91067 	strteq	r1, [r9], #103	; 0x67
    40c0:	0b130000 	bleq	4c40c8 <__RAM_SIZE+0x3c40c8>
    40c4:	01000013 	tsteq	r0, r3, lsl r0
    40c8:	04ed0e69 	strbteq	r0, [sp], #3689	; 0xe69
    40cc:	23020000 	movwcs	r0, #8192	; 0x2000
    40d0:	10c21300 	sbcne	r1, r2, r0, lsl #6
    40d4:	6a010000 	bvs	440dc <__HEAP_SIZE+0x430dc>
    40d8:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    40dc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    40e0:	01007515 	tsteq	r0, r5, lsl r5
    40e4:	05370770 	ldreq	r0, [r7, #-1904]!	; 0xfffff890
    40e8:	23020000 	movwcs	r0, #8192	; 0x2000
    40ec:	0b911308 	bleq	fe448d14 <__StackTop+0xc6348d14>
    40f0:	72010000 	andvc	r0, r1, #0
    40f4:	0003760c 	andeq	r7, r3, ip, lsl #12
    40f8:	10230200 	eorne	r0, r3, r0, lsl #4
    40fc:	000ada13 	andeq	sp, sl, r3, lsl sl
    4100:	0c730100 	ldfeqe	f0, [r3], #-0
    4104:	00000376 	andeq	r0, r0, r6, ror r3
    4108:	132c2302 			; <UNDEFINED> instruction: 0x132c2302
    410c:	00000cdb 	ldrdeq	r0, [r0], -fp
    4110:	101a7501 	andsne	r7, sl, r1, lsl #10
    4114:	02000001 	andeq	r0, r0, #1
    4118:	2a134823 	bcs	4d61ac <__RAM_SIZE+0x3d61ac>
    411c:	01000011 	tsteq	r0, r1, lsl r0
    4120:	01041176 	tsteq	r4, r6, ror r1
    4124:	23020000 	movwcs	r0, #8192	; 0x2000
    4128:	0e70134c 	cdpeq	3, 7, cr1, cr0, cr12, {2}
    412c:	77010000 	strvc	r0, [r1, -r0]
    4130:	00010411 	andeq	r0, r1, r1, lsl r4
    4134:	50230200 	eorpl	r0, r3, r0, lsl #4
    4138:	00139b13 	andseq	r9, r3, r3, lsl fp
    413c:	15790100 	ldrbne	r0, [r9, #-256]!	; 0xffffff00
    4140:	000000cc 	andeq	r0, r0, ip, asr #1
    4144:	13542302 	cmpne	r4, #134217728	; 0x8000000
    4148:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    414c:	cc157a01 			; <UNDEFINED> instruction: 0xcc157a01
    4150:	02000000 	andeq	r0, r0, #0
    4154:	04135523 	ldreq	r5, [r3], #-1315	; 0xfffffadd
    4158:	0100000e 	tsteq	r0, lr
    415c:	00d6117d 	sbcseq	r1, r6, sp, ror r1
    4160:	23020000 	movwcs	r0, #8192	; 0x2000
    4164:	136e1356 	cmnne	lr, #1476395009	; 0x58000001
    4168:	81010000 	mrshi	r0, (UNDEF: 1)
    416c:	0003e322 	andeq	lr, r3, r2, lsr #6
    4170:	58230200 	stmdapl	r3!, {r9}
    4174:	0d840200 	sfmeq	f0, 4, [r4]
    4178:	3a090000 	bcc	244180 <__RAM_SIZE+0x144180>
    417c:	0003e324 	andeq	lr, r3, r4, lsr #6
    4180:	0d4d0200 	sfmeq	f0, 2, [sp, #-0]
    4184:	41090000 	mrsmi	r0, (UNDEF: 9)
    4188:	0003e324 	andeq	lr, r3, r4, lsr #6
    418c:	0ee81200 	cdpeq	2, 14, cr1, cr8, cr0, {0}
    4190:	01080000 	mrseq	r0, (UNDEF: 8)
    4194:	04ed1044 	strbteq	r1, [sp], #68	; 0x44
    4198:	fb130000 	blx	4c41a2 <__RAM_SIZE+0x3c41a2>
    419c:	01000011 	tsteq	r0, r1, lsl r0
    41a0:	04ed0e46 	strbteq	r0, [sp], #3654	; 0xe46
    41a4:	23020000 	movwcs	r0, #8192	; 0x2000
    41a8:	0c1b1300 	ldceq	3, cr1, [fp], {-0}
    41ac:	47010000 	strmi	r0, [r1, -r0]
    41b0:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    41b4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    41b8:	c0040700 	andgt	r0, r4, r0, lsl #14
    41bc:	02000000 	andeq	r0, r0, #0
    41c0:	0000111a 	andeq	r1, r0, sl, lsl r1
    41c4:	c1034801 	tstgt	r3, r1, lsl #16
    41c8:	12000004 	andne	r0, r0, #4
    41cc:	00000a70 	andeq	r0, r0, r0, ror sl
    41d0:	104a0108 	subne	r0, sl, r8, lsl #2
    41d4:	0000052b 	andeq	r0, r0, fp, lsr #10
    41d8:	001ecb13 	andseq	ip, lr, r3, lsl fp
    41dc:	124c0100 	subne	r0, ip, #0, 2
    41e0:	00000382 	andeq	r0, r0, r2, lsl #7
    41e4:	13002302 	movwne	r2, #770	; 0x302
    41e8:	0000125c 	andeq	r1, r0, ip, asr r2
    41ec:	04114d01 	ldreq	r4, [r1], #-3329	; 0xfffff2ff
    41f0:	02000001 	andeq	r0, r0, #1
    41f4:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    41f8:	00000a89 	andeq	r0, r0, r9, lsl #21
    41fc:	ff034e01 			; <UNDEFINED> instruction: 0xff034e01
    4200:	16000004 	strne	r0, [r0], -r4
    4204:	056c0108 	strbeq	r0, [ip, #-264]!	; 0xfffffef8
    4208:	00000559 	andeq	r0, r0, r9, asr r5
    420c:	00121d17 	andseq	r1, r2, r7, lsl sp
    4210:	196e0100 	stmdbne	lr!, {r8}^
    4214:	000004f3 	strdeq	r0, [r0], -r3
    4218:	000ced17 	andeq	lr, ip, r7, lsl sp
    421c:	196f0100 	stmdbne	pc!, {r8}^	; <UNPREDICTABLE>
    4220:	0000052b 	andeq	r0, r0, fp, lsr #10
    4224:	13670200 	cmnne	r7, #0, 4
    4228:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    422c:	0003e903 	andeq	lr, r3, r3, lsl #18
    4230:	0fec0200 	svceq	0x00ec0200
    4234:	8c010000 	stchi	0, cr0, [r1], {-0}
    4238:	00055910 	andeq	r5, r5, r0, lsl r9
    423c:	05650600 	strbeq	r0, [r5, #-1536]!	; 0xfffffa00
    4240:	55180000 	ldrpl	r0, [r8, #-0]
    4244:	0100000a 	tsteq	r0, sl
    4248:	01170cee 	tsteq	r7, lr, ror #25
    424c:	000000f3 	strdeq	r0, [r0], -r3
    4250:	10001f72 	andne	r1, r0, r2, ror pc
    4254:	10001fca 	andne	r1, r0, sl, asr #31
    4258:	00002e63 	andeq	r2, r0, r3, ror #28
    425c:	00064b01 	andeq	r4, r6, r1, lsl #22
    4260:	121c1900 	andsne	r1, ip, #0, 18
    4264:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    4268:	0651490c 	ldrbeq	r4, [r1], -ip, lsl #18
    426c:	2ead0000 	cdpcs	0, 10, cr0, cr13, cr0, {0}
    4270:	2ea70000 	cdpcs	0, 10, cr0, cr7, cr0, {0}
    4274:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
    4278:	01000013 	tsteq	r0, r3, lsl r0
    427c:	56130cf0 			; <UNDEFINED> instruction: 0x56130cf0
    4280:	d9000006 	stmdble	r0, {r1, r2}
    4284:	d700002e 	strle	r0, [r0, -lr, lsr #32]
    4288:	1a00002e 	bne	4348 <__HEAP_SIZE+0x3348>
    428c:	00001a19 	andeq	r1, r0, r9, lsl sl
    4290:	140cf101 	strne	pc, [ip], #-257	; 0xfffffeff
    4294:	000000f3 	strdeq	r0, [r0], -r3
    4298:	00002efa 	strdeq	r2, [r0], -sl
    429c:	00002eec 	andeq	r2, r0, ip, ror #29
    42a0:	0002b81b 	andeq	fp, r2, fp, lsl r8
    42a4:	0bbc1a00 	bleq	fef0aaac <__StackTop+0xc6e0aaac>
    42a8:	fd010000 	stc2	0, cr0, [r1, #-0]
    42ac:	00d11a0c 	sbcseq	r1, r1, ip, lsl #20
    42b0:	2f560000 	svccs	0x00560000
    42b4:	2f520000 	svccs	0x00520000
    42b8:	b81c0000 	ldmdalt	ip, {}	; <UNPREDICTABLE>
    42bc:	ca10001f 	bgt	404340 <__RAM_SIZE+0x304340>
    42c0:	1a10001f 	bne	404344 <__RAM_SIZE+0x304344>
    42c4:	1a000006 	bne	42e4 <__HEAP_SIZE+0x32e4>
    42c8:	0000110a 	andeq	r1, r0, sl, lsl #2
    42cc:	110d1901 	tstne	sp, r1, lsl #18
    42d0:	00000115 	andeq	r0, r0, r5, lsl r1
    42d4:	00002f78 	andeq	r2, r0, r8, ror pc
    42d8:	00002f76 	andeq	r2, r0, r6, ror pc
    42dc:	001fbc1d 	andseq	fp, pc, sp, lsl ip	; <UNPREDICTABLE>
    42e0:	00237010 	eoreq	r7, r3, r0, lsl r0
    42e4:	9a1e0000 	bls	7842ec <__RAM_SIZE+0x6842ec>
    42e8:	fe10001f 	mrc2	0, 0, r0, cr0, cr15, {0}
    42ec:	3900000b 	stmdbcc	r0, {r0, r1, r3}
    42f0:	1f000006 	svcne	0x00000006
    42f4:	74025001 	strvc	r5, [r2], #-1
    42f8:	51011f00 	tstpl	r1, r0, lsl #30
    42fc:	1f6c9102 	svcne	0x006c9102
    4300:	30015201 	andcc	r5, r1, r1, lsl #4
    4304:	1fb02000 	svcne	0x00b02000
    4308:	237f1000 	cmncs	pc, #0
    430c:	011f0000 	tsteq	pc, r0
    4310:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    4314:	07000000 	streq	r0, [r0, -r0]
    4318:	00057104 	andeq	r7, r5, r4, lsl #2
    431c:	064b0600 	strbeq	r0, [fp], -r0, lsl #12
    4320:	04070000 	streq	r0, [r7], #-0
    4324:	00000565 	andeq	r0, r0, r5, ror #10
    4328:	00065606 	andeq	r5, r6, r6, lsl #12
    432c:	36012100 	strcc	r2, [r1], -r0, lsl #2
    4330:	0100000b 	tsteq	r0, fp
    4334:	011c0cdc 			; <UNDEFINED> instruction: 0x011c0cdc
    4338:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
	...
    4344:	00002f8b 	andeq	r2, r0, fp, lsl #31
    4348:	0006c301 	andeq	ip, r6, r1, lsl #6
    434c:	0f161900 	svceq	0x00161900
    4350:	dc010000 	stcle	0, cr0, [r1], {-0}
    4354:	04a9490c 	strteq	r4, [r9], #2316	; 0x90c
    4358:	2fc70000 	svccs	0x00c70000
    435c:	2fc30000 	svccs	0x00c30000
    4360:	19220000 	stmdbne	r2!, {}	; <UNPREDICTABLE>
    4364:	0100001a 	tsteq	r0, sl, lsl r0
    4368:	b5200cde 	strlt	r0, [r0, #-3294]!	; 0xfffff322
    436c:	02000004 	andeq	r0, r0, #4
    4370:	00207491 	mlaeq	r0, r1, r4, r7
    4374:	a5000000 	strge	r0, [r0, #-0]
    4378:	1f00000f 	svcne	0x0000000f
    437c:	f3035001 	vhadd.u8	d5, d3, d1
    4380:	011f5001 	tsteq	pc, r1
    4384:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    4388:	0152011f 	cmpeq	r2, pc, lsl r1
    438c:	21000030 	tstcs	r0, r0, lsr r0
    4390:	00127101 	andseq	r7, r2, r1, lsl #2
    4394:	0cc90100 	stfeqe	f0, [r9], {0}
    4398:	04b5011c 	ldrteq	r0, [r5], #284	; 0x11c
	...
    43a4:	2fe80000 	svccs	0x00e80000
    43a8:	3c010000 	stccc	0, cr0, [r1], {-0}
    43ac:	19000007 	stmdbne	r0, {r0, r1, r2}
    43b0:	00000f16 	andeq	r0, r0, r6, lsl pc
    43b4:	420cc901 	andmi	ip, ip, #16384	; 0x4000
    43b8:	000004a9 	andeq	r0, r0, r9, lsr #9
    43bc:	00003024 	andeq	r3, r0, r4, lsr #32
    43c0:	00003020 	andeq	r3, r0, r0, lsr #32
    43c4:	0020e119 	eoreq	lr, r0, r9, lsl r1
    43c8:	0cca0100 	stfeqe	f0, [sl], {0}
    43cc:	00012642 	andeq	r2, r1, r2, asr #12
    43d0:	00304b00 	eorseq	r4, r0, r0, lsl #22
    43d4:	00304500 	eorseq	r4, r0, r0, lsl #10
    43d8:	1a192200 	bne	64cbe0 <__RAM_SIZE+0x54cbe0>
    43dc:	cc010000 	stcgt	0, cr0, [r1], {-0}
    43e0:	04b5200c 	ldrteq	r2, [r5], #12
    43e4:	91020000 	mrsls	r0, (UNDEF: 2)
    43e8:	00002074 	andeq	r2, r0, r4, ror r0
    43ec:	15570000 	ldrbne	r0, [r7, #-0]
    43f0:	011f0000 	tsteq	pc, r0
    43f4:	01f30350 	mvnseq	r0, r0, asr r3
    43f8:	51011f50 	tstpl	r1, r0, asr pc
    43fc:	1f749102 	svcne	0x00749102
    4400:	f3035201 	vhsub.u8	d5, d3, d1
    4404:	00005101 	andeq	r5, r0, r1, lsl #2
    4408:	0ff40121 	svceq	0x00f40121
    440c:	a0010000 	andge	r0, r1, r0
    4410:	f301100c 	vhadd.u8	d1, d1, d12
	...
    441c:	77000000 	strvc	r0, [r0, -r0]
    4420:	01000030 	tsteq	r0, r0, lsr r0
    4424:	000007c3 	andeq	r0, r0, r3, asr #15
    4428:	00115319 	andseq	r5, r1, r9, lsl r3
    442c:	0ca00100 	stfeqs	f0, [r0]
    4430:	0004b53c 	andeq	fp, r4, ip, lsr r5
    4434:	0030a300 	eorseq	sl, r0, r0, lsl #6
    4438:	00309700 	eorseq	r9, r0, r0, lsl #14
    443c:	0f161900 	svceq	0x00161900
    4440:	a1010000 	mrsge	r0, (UNDEF: 1)
    4444:	04a9360c 	strteq	r3, [r9], #1548	; 0x60c
    4448:	30f80000 	rscscc	r0, r8, r0
    444c:	30f00000 	rscscc	r0, r0, r0
    4450:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    4454:	0100001a 	tsteq	r0, sl, lsl r0
    4458:	f3140ca3 			; <UNDEFINED> instruction: 0xf3140ca3
    445c:	36000000 	strcc	r0, [r0], -r0
    4460:	32000031 	andcc	r0, r0, #49	; 0x31
    4464:	1a000031 	bne	4530 <__HEAP_SIZE+0x3530>
    4468:	00001152 	andeq	r1, r0, r2, asr r1
    446c:	190ca401 	stmdbne	ip, {r0, sl, sp, pc}
    4470:	0000065c 	andeq	r0, r0, ip, asr r6
    4474:	00003162 	andeq	r3, r0, r2, ror #2
    4478:	00003156 	andeq	r3, r0, r6, asr r1
    447c:	0000001d 	andeq	r0, r0, sp, lsl r0
    4480:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4484:	00001d00 	andeq	r1, r0, r0, lsl #26
    4488:	239c0000 	orrscs	r0, ip, #0
    448c:	21000000 	mrscs	r0, (UNDEF: 0)
    4490:	00138c01 	andseq	r8, r3, r1, lsl #24
    4494:	0c7a0100 	ldfeqe	f0, [sl], #-0
    4498:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    44a4:	31af0000 			; <UNDEFINED> instruction: 0x31af0000
    44a8:	35010000 	strcc	r0, [r1, #-0]
    44ac:	19000008 	stmdbne	r0, {r3}
    44b0:	00001153 	andeq	r1, r0, r3, asr r1
    44b4:	370c7a01 	strcc	r7, [ip, -r1, lsl #20]
    44b8:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    44bc:	000031dd 	ldrdeq	r3, [r0], -sp
    44c0:	000031cf 	andeq	r3, r0, pc, asr #3
    44c4:	000f1619 	andeq	r1, pc, r9, lsl r6	; <UNPREDICTABLE>
    44c8:	0c7b0100 	ldfeqe	f0, [fp], #-0
    44cc:	0004a931 	andeq	sl, r4, r1, lsr r9
    44d0:	00323f00 	eorseq	r3, r2, r0, lsl #30
    44d4:	00323b00 	eorseq	r3, r2, r0, lsl #22
    44d8:	1a191a00 	bne	64ace0 <__RAM_SIZE+0x54ace0>
    44dc:	7d010000 	stcvc	0, cr0, [r1, #-0]
    44e0:	00f3140c 	rscseq	r1, r3, ip, lsl #8
    44e4:	32610000 	rsbcc	r0, r1, #0
    44e8:	325d0000 	subscc	r0, sp, #0
    44ec:	001d0000 	andseq	r0, sp, r0
    44f0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    44f4:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    44f8:	00000000 	andeq	r0, r0, r0
    44fc:	0000239c 	muleq	r0, ip, r3
    4500:	13012100 	movwne	r2, #4352	; 0x1100
    4504:	01000010 	tsteq	r0, r0, lsl r0
    4508:	01160c68 	tsteq	r6, r8, ror #24
    450c:	000004a9 	andeq	r0, r0, r9, lsr #9
	...
    4518:	00003280 	andeq	r3, r0, r0, lsl #5
    451c:	00089b01 	andeq	r9, r8, r1, lsl #22
    4520:	13b11900 			; <UNDEFINED> instruction: 0x13b11900
    4524:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    4528:	0115390c 	tsteq	r5, ip, lsl #18
    452c:	32a40000 	adccc	r0, r4, #0
    4530:	32a00000 	adccc	r0, r0, #0
    4534:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    4538:	01000012 	tsteq	r0, r2, lsl r0
    453c:	a91a0c6a 	ldmdbge	sl, {r1, r3, r5, r6, sl, fp}
    4540:	c7000004 	strgt	r0, [r0, -r4]
    4544:	c5000032 	strgt	r0, [r0, #-50]	; 0xffffffce
    4548:	20000032 	andcs	r0, r0, r2, lsr r0
    454c:	00000000 	andeq	r0, r0, r0
    4550:	0000207e 	andeq	r2, r0, lr, ror r0
    4554:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    4558:	1f5001f3 	svcne	0x005001f3
    455c:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
    4560:	0152011f 	cmpeq	r2, pc, lsl r1
    4564:	23000030 	movwcs	r0, #48	; 0x30
    4568:	00113301 	andseq	r3, r1, r1, lsl #6
    456c:	0c3c0100 	ldfeqs	f0, [ip], #-0
    4570:	2220010a 	eorcs	r0, r0, #-2147483646	; 0x80000002
    4574:	22721000 	rsbscs	r1, r2, #0
    4578:	32da1000 	sbcscc	r1, sl, #0
    457c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    4580:	19000009 	stmdbne	r0, {r0, r3}
    4584:	0000121d 	andeq	r1, r0, sp, lsl r2
    4588:	380c3c01 	stmdacc	ip, {r0, sl, fp, ip, sp}
    458c:	000003d2 	ldrdeq	r0, [r0], -r2
    4590:	000032fe 	strdeq	r3, [r0], -lr
    4594:	000032fa 	strdeq	r3, [r0], -sl
    4598:	0020e119 	eoreq	lr, r0, r9, lsl r1
    459c:	0c3d0100 	ldfeqs	f0, [sp], #-0
    45a0:	00011a35 	andeq	r1, r1, r5, lsr sl
    45a4:	00332000 	eorseq	r2, r3, r0
    45a8:	00331c00 	eorseq	r1, r3, r0, lsl #24
    45ac:	0b7f1900 	bleq	1fca9b4 <__RAM_SIZE+0x1eca9b4>
    45b0:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    45b4:	00ff3b0c 	rscseq	r3, pc, ip, lsl #22
    45b8:	33420000 	movtcc	r0, #8192	; 0x2000
    45bc:	333e0000 	teqcc	lr, #0
    45c0:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    45c4:	01000012 	tsteq	r0, r2, lsl r0
    45c8:	5c190c40 	ldcpl	12, cr0, [r9], {64}	; 0x40
    45cc:	64000006 	strvs	r0, [r0], #-6
    45d0:	60000033 	andvs	r0, r0, r3, lsr r0
    45d4:	1d000033 	stcne	0, cr0, [r0, #-204]	; 0xffffff34
    45d8:	1000222c 	andne	r2, r0, ip, lsr #4
    45dc:	0000238e 	andeq	r2, r0, lr, lsl #7
    45e0:	0022481d 	eoreq	r4, r2, sp, lsl r8
    45e4:	00239c10 	eoreq	r9, r3, r0, lsl ip
    45e8:	22521e00 	subscs	r1, r2, #0, 28
    45ec:	0abd1000 	beq	fef485f4 <__StackTop+0xc6e485f4>
    45f0:	09310000 	ldmdbeq	r1!, {}	; <UNPREDICTABLE>
    45f4:	011f0000 	tsteq	pc, r0
    45f8:	00740250 	rsbseq	r0, r4, r0, asr r2
    45fc:	22702000 	rsbscs	r2, r0, #0
    4600:	23aa1000 			; <UNDEFINED> instruction: 0x23aa1000
    4604:	011f0000 	tsteq	pc, r0
    4608:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    460c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    4610:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    4614:	00760252 	rsbseq	r0, r6, r2, asr r2
    4618:	01240000 			; <UNDEFINED> instruction: 0x01240000
    461c:	000011cb 	andeq	r1, r0, fp, asr #3
    4620:	0c0a7801 	stceq	8, cr7, [sl], {1}
    4624:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4630:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4634:	0009ad01 	andeq	sl, r9, r1, lsl #26
    4638:	121d1900 	andsne	r1, sp, #0, 18
    463c:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    4640:	03de3a0a 	bicseq	r3, lr, #40960	; 0xa000
    4644:	338a0000 	orrcc	r0, sl, #0
    4648:	33820000 	orrcc	r0, r2, #0
    464c:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    4650:	0100001a 	tsteq	r0, sl, lsl r0
    4654:	f3100a7a 	vpmin.u16	q0, q0, q13
    4658:	c6000000 	strgt	r0, [r0], -r0
    465c:	c4000033 	strgt	r0, [r0], #-51	; 0xffffffcd
    4660:	1a000033 	bne	4734 <__HEAP_SIZE+0x3734>
    4664:	0000121c 	andeq	r1, r0, ip, lsl r2
    4668:	150a7b01 	strne	r7, [sl, #-2817]	; 0xfffff4ff
    466c:	0000065c 	andeq	r0, r0, ip, asr r6
    4670:	000033e2 	andeq	r3, r0, r2, ror #7
    4674:	000033da 	ldrdeq	r3, [r0], -sl
    4678:	0ed91800 	cdpeq	8, 13, cr1, cr9, cr0, {0}
    467c:	63010000 	movwvs	r0, #4096	; 0x1000
    4680:	f301130a 	vcgt.u8	d1, d1, d10
	...
    468c:	1c000000 	stcne	0, cr0, [r0], {-0}
    4690:	01000034 	tsteq	r0, r4, lsr r0
    4694:	00000a09 	andeq	r0, r0, r9, lsl #20
    4698:	00121c19 	andseq	r1, r2, r9, lsl ip
    469c:	0a630100 	beq	18c4aa4 <__RAM_SIZE+0x17c4aa4>
    46a0:	00064b33 	andeq	r4, r6, r3, lsr fp
    46a4:	00344600 	eorseq	r4, r4, r0, lsl #12
    46a8:	00343c00 	eorseq	r3, r4, r0, lsl #24
    46ac:	1a191a00 	bne	64aeb4 <__RAM_SIZE+0x54aeb4>
    46b0:	65010000 	strvs	r0, [r1, #-0]
    46b4:	00f3100a 	rscseq	r1, r3, sl
    46b8:	348d0000 	strcc	r0, [sp], #0
    46bc:	348b0000 	strcc	r0, [fp], #0
    46c0:	001d0000 	andseq	r0, sp, r0
    46c4:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    46c8:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    46cc:	00000000 	andeq	r0, r0, r0
    46d0:	0000239c 	muleq	r0, ip, r3
    46d4:	4d012400 	cfstrsmi	mvf2, [r1, #-0]
    46d8:	01000013 	tsteq	r0, r3, lsl r0
    46dc:	010c0a4b 	tsteq	ip, fp, asr #20
    46e0:	000000f3 	strdeq	r0, [r0], -r3
	...
    46ec:	01007d02 	tsteq	r0, r2, lsl #26
    46f0:	00000a61 	andeq	r0, r0, r1, ror #20
    46f4:	00121d19 	andseq	r1, r2, r9, lsl sp
    46f8:	0a4b0100 	beq	12c4b00 <__RAM_SIZE+0x11c4b00>
    46fc:	0003de3b 	andeq	sp, r3, fp, lsr lr
    4700:	0034a800 	eorseq	sl, r4, r0, lsl #16
    4704:	0034a000 	eorseq	sl, r4, r0
    4708:	1a192500 	bne	64db10 <__RAM_SIZE+0x54db10>
    470c:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4710:	00f3100a 	rscseq	r1, r3, sl
    4714:	1a000000 	bne	471c <__HEAP_SIZE+0x371c>
    4718:	0000121c 	andeq	r1, r0, ip, lsl r2
    471c:	150a4e01 	strne	r4, [sl, #-3585]	; 0xfffff1ff
    4720:	0000065c 	andeq	r0, r0, ip, asr r6
    4724:	000034ea 	andeq	r3, r0, sl, ror #9
    4728:	000034e2 	andeq	r3, r0, r2, ror #9
    472c:	0c9d1800 	ldceq	8, cr1, [sp], {0}
    4730:	36010000 	strcc	r0, [r1], -r0
    4734:	f301130a 	vcgt.u8	d1, d1, d10
    4738:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    473c:	d810001e 	ldmdale	r0, {r1, r2, r3, r4}
    4740:	2410001e 	ldrcs	r0, [r0], #-30	; 0xffffffe2
    4744:	01000035 	tsteq	r0, r5, lsr r0
    4748:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    474c:	00121c19 	andseq	r1, r2, r9, lsl ip
    4750:	0a360100 	beq	d84b58 <__RAM_SIZE+0xc84b58>
    4754:	00064b34 	andeq	r4, r6, r4, lsr fp
    4758:	00354e00 	eorseq	r4, r5, r0, lsl #28
    475c:	00354400 	eorseq	r4, r5, r0, lsl #8
    4760:	1a191a00 	bne	64af68 <__RAM_SIZE+0x54af68>
    4764:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    4768:	00f3100a 	rscseq	r1, r3, sl
    476c:	35950000 	ldrcc	r0, [r5]
    4770:	35930000 	ldrcc	r0, [r3]
    4774:	c61d0000 	ldrgt	r0, [sp], -r0
    4778:	8e10001e 	mrchi	0, 0, r0, cr0, cr14, {0}
    477c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4780:	10001ed0 	ldrdne	r1, [r0], -r0
    4784:	0000239c 	muleq	r0, ip, r3
    4788:	132b2600 			; <UNDEFINED> instruction: 0x132b2600
    478c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    4790:	ca010d09 	bgt	47bbc <__HEAP_SIZE+0x46bbc>
    4794:	4c10001f 	ldcmi	0, cr0, [r0], {31}
    4798:	a8100020 	ldmdage	r0, {r5}
    479c:	01000035 	tsteq	r0, r5, lsr r0
    47a0:	00000baf 	andeq	r0, r0, pc, lsr #23
    47a4:	00121c19 	andseq	r1, r2, r9, lsl ip
    47a8:	09be0100 	ldmibeq	lr!, {r8}
    47ac:	00065c2d 	andeq	r5, r6, sp, lsr #24
    47b0:	0035cc00 	eorseq	ip, r5, r0, lsl #24
    47b4:	0035c800 	eorseq	ip, r5, r0, lsl #16
    47b8:	1fd21c00 	svcne	0x00d21c00
    47bc:	20121000 	andscs	r1, r2, r0
    47c0:	0b4a1000 	bleq	12887c8 <__RAM_SIZE+0x11887c8>
    47c4:	bc1a0000 	ldclt	0, cr0, [sl], {-0}
    47c8:	0100000b 	tsteq	r0, fp
    47cc:	c01009c8 	andsgt	r0, r0, r8, asr #19
    47d0:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    47d4:	ea000035 	b	48b0 <__HEAP_SIZE+0x38b0>
    47d8:	1e000035 	mcrne	0, 0, r0, cr0, cr5, {1}
    47dc:	10001fe6 	andne	r1, r0, r6, ror #31
    47e0:	0000237f 	andeq	r2, r0, pc, ror r3
    47e4:	00000b23 	andeq	r0, r0, r3, lsr #22
    47e8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    47ec:	1e002c75 	mcrne	12, 0, r2, cr0, cr5, {3}
    47f0:	10001ffc 	strdne	r1, [r0], -ip
    47f4:	00000576 	andeq	r0, r0, r6, ror r5
    47f8:	00000b37 	andeq	r0, r0, r7, lsr fp
    47fc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4800:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    4804:	10002004 	andne	r2, r0, r4
    4808:	000023b9 			; <UNDEFINED> instruction: 0x000023b9
    480c:	00200a1d 	eoreq	r0, r0, sp, lsl sl
    4810:	0023b910 	eoreq	fp, r3, r0, lsl r9
    4814:	1a1c0000 	bne	70481c <__RAM_SIZE+0x60481c>
    4818:	46100020 	ldrmi	r0, [r0], -r0, lsr #32
    481c:	8a100020 	bhi	4048a4 <__RAM_SIZE+0x3048a4>
    4820:	1a00000b 	bne	4854 <__HEAP_SIZE+0x3854>
    4824:	0000139b 	muleq	r0, fp, r3
    4828:	100a1901 	andne	r1, sl, r1, lsl #18
    482c:	000000c0 	andeq	r0, r0, r0, asr #1
    4830:	00003610 	andeq	r3, r0, r0, lsl r6
    4834:	0000360c 	andeq	r3, r0, ip, lsl #12
    4838:	0020361e 	eoreq	r3, r0, lr, lsl r6
    483c:	00237f10 	eoreq	r7, r3, r0, lsl pc
    4840:	000b8000 	andeq	r8, fp, r0
    4844:	50011f00 	andpl	r1, r1, r0, lsl #30
    4848:	00107502 	andseq	r7, r0, r2, lsl #10
    484c:	00203e1d 	eoreq	r3, r0, sp, lsl lr
    4850:	0023b910 	eoreq	fp, r3, r0, lsl r9
    4854:	d21d0000 	andsle	r0, sp, #0
    4858:	8e10001f 	mrchi	0, 0, r0, cr0, cr15, {0}
    485c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4860:	10002016 	andne	r2, r0, r6, lsl r0
    4864:	0000239c 	muleq	r0, ip, r3
    4868:	00201a1d 	eoreq	r1, r0, sp, lsl sl
    486c:	00238e10 	eoreq	r8, r3, r0, lsl lr
    4870:	204a1d00 	subcs	r1, sl, r0, lsl #26
    4874:	239c1000 	orrscs	r1, ip, #0
    4878:	26000000 	strcs	r0, [r0], -r0
    487c:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    4880:	0d09a901 	vstreq.16	s20, [r9, #-2]	; <UNPREDICTABLE>
    4884:	001f4e01 	andseq	r4, pc, r1, lsl #28
    4888:	001f7210 	andseq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    488c:	00362e10 	eorseq	r2, r6, r0, lsl lr
    4890:	0bfe0100 	bleq	fff84c98 <__StackTop+0xc7e84c98>
    4894:	1c190000 	ldcne	0, cr0, [r9], {-0}
    4898:	01000012 	tsteq	r0, r2, lsl r0
    489c:	5c3309a9 			; <UNDEFINED> instruction: 0x5c3309a9
    48a0:	62000006 	andvs	r0, r0, #6
    48a4:	5a000036 	bpl	4984 <__HEAP_SIZE+0x3984>
    48a8:	19000036 	stmdbne	r0, {r1, r2, r4, r5}
    48ac:	00000cad 	andeq	r0, r0, sp, lsr #25
    48b0:	3009aa01 	andcc	sl, r9, r1, lsl #20
    48b4:	000000a8 	andeq	r0, r0, r8, lsr #1
    48b8:	000036a1 	andeq	r3, r0, r1, lsr #13
    48bc:	00003699 	muleq	r0, r9, r6
    48c0:	001f6e1d 	andseq	r6, pc, sp, lsl lr	; <UNPREDICTABLE>
    48c4:	0023c810 	eoreq	ip, r3, r0, lsl r8
    48c8:	df180000 	svcle	0x00180000
    48cc:	0100000d 	tsteq	r0, sp
    48d0:	01130956 	tsteq	r3, r6, asr r9
    48d4:	000000f3 	strdeq	r0, [r0], -r3
    48d8:	10001ed8 	ldrdne	r1, [r0], -r8
    48dc:	10001f4e 	andne	r1, r0, lr, asr #30
    48e0:	000036d8 	ldrdeq	r3, [r0], -r8
    48e4:	000ca201 	andeq	sl, ip, r1, lsl #4
    48e8:	121c1900 	andsne	r1, ip, #0, 18
    48ec:	56010000 	strpl	r0, [r1], -r0
    48f0:	065c3709 	ldrbeq	r3, [ip], -r9, lsl #14
    48f4:	37080000 	strcc	r0, [r8, -r0]
    48f8:	36f80000 	ldrbtcc	r0, [r8], r0
    48fc:	9e190000 	cdpls	0, 1, cr0, cr9, cr0, {0}
    4900:	01000011 	tsteq	r0, r1, lsl r0
    4904:	b4340957 	ldrtlt	r0, [r4], #-2391	; 0xfffff6a9
    4908:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    490c:	68000037 	stmdavs	r0, {r0, r1, r2, r4, r5}
    4910:	19000037 	stmdbne	r0, {r0, r1, r2, r4, r5}
    4914:	00001382 	andeq	r1, r0, r2, lsl #7
    4918:	38095801 	stmdacc	r9, {r0, fp, ip, lr}
    491c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4920:	000037e8 	andeq	r3, r0, r8, ror #15
    4924:	000037e4 	andeq	r3, r0, r4, ror #15
    4928:	001a191a 	andseq	r1, sl, sl, lsl r9
    492c:	095a0100 	ldmdbeq	sl, {r8}^
    4930:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4934:	00381000 	eorseq	r1, r8, r0
    4938:	00380600 	eorseq	r0, r8, r0, lsl #12
    493c:	0cdb1a00 	vldmiaeq	fp, {s3-s2}
    4940:	5b010000 	blpl	44948 <__HEAP_SIZE+0x43948>
    4944:	01041109 	tsteq	r4, r9, lsl #2
    4948:	38580000 	ldmdacc	r8, {}^	; <UNPREDICTABLE>
    494c:	38520000 	ldmdacc	r2, {}^	; <UNPREDICTABLE>
    4950:	f61d0000 			; <UNDEFINED> instruction: 0xf61d0000
    4954:	d510001e 	ldrle	r0, [r0, #-30]	; 0xffffffe2
    4958:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    495c:	10001f04 	andne	r1, r0, r4, lsl #30
    4960:	000023c8 	andeq	r2, r0, r8, asr #7
    4964:	001f201d 	andseq	r2, pc, sp, lsl r0	; <UNPREDICTABLE>
    4968:	0023c810 	eoreq	ip, r3, r0, lsl r8
    496c:	b6270000 	strtlt	r0, [r7], -r0
    4970:	0100000c 	tsteq	r0, ip
    4974:	0118093d 	tsteq	r8, sp, lsr r9
    4978:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4984:	01007d02 	tsteq	r0, r2, lsl #26
    4988:	00000ceb 	andeq	r0, r0, fp, ror #25
    498c:	00121c19 	andseq	r1, r2, r9, lsl ip
    4990:	093d0100 	ldmdbeq	sp!, {r8}
    4994:	00065154 	andeq	r5, r6, r4, asr r1
    4998:	00388900 	eorseq	r8, r8, r0, lsl #18
    499c:	00388300 	eorseq	r8, r8, r0, lsl #6
    49a0:	10851a00 	addne	r1, r5, r0, lsl #20
    49a4:	3f010000 	svccc	0x00010000
    49a8:	01041509 	tsteq	r4, r9, lsl #10
    49ac:	38b70000 	ldmcc	r7!, {}	; <UNPREDICTABLE>
    49b0:	38b50000 	ldmcc	r5!, {}	; <UNPREDICTABLE>
    49b4:	24000000 	strcs	r0, [r0], #-0
    49b8:	000f4001 	andeq	r4, pc, r1
    49bc:	09310100 	ldmdbeq	r1!, {r8}
    49c0:	0104010d 	tsteq	r4, sp, lsl #2
	...
    49cc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    49d0:	0d200100 	stfeqs	f0, [r0, #-0]
    49d4:	1d190000 	ldcne	0, cr0, [r9, #-0]
    49d8:	01000012 	tsteq	r0, r2, lsl r0
    49dc:	d2320931 	eorsle	r0, r2, #802816	; 0xc4000
    49e0:	ce000003 	cdpgt	0, 0, cr0, cr0, cr3, {0}
    49e4:	ca000038 	bgt	4acc <__HEAP_SIZE+0x3acc>
    49e8:	00000038 	andeq	r0, r0, r8, lsr r0
    49ec:	11860124 	orrne	r0, r6, r4, lsr #2
    49f0:	27010000 	strcs	r0, [r1, -r0]
    49f4:	04010d09 	streq	r0, [r1], #-3337	; 0xfffff2f7
    49f8:	00000001 	andeq	r0, r0, r1
    49fc:	00000000 	andeq	r0, r0, r0
    4a00:	02000000 	andeq	r0, r0, #0
    4a04:	5501007d 	strpl	r0, [r1, #-125]	; 0xffffff83
    4a08:	1900000d 	stmdbne	r0, {r0, r2, r3}
    4a0c:	0000121d 	andeq	r1, r0, sp, lsl r2
    4a10:	34092701 	strcc	r2, [r9], #-1793	; 0xfffff8ff
    4a14:	000003d2 	ldrdeq	r0, [r0], -r2
    4a18:	000038f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    4a1c:	000038ef 	andeq	r3, r0, pc, ror #17
    4a20:	0e012300 	cdpeq	3, 0, cr2, cr1, cr0, {0}
    4a24:	0100000c 	tsteq	r0, ip
    4a28:	010608ce 	smlabteq	r6, lr, r8, r0
	...
    4a34:	00003914 	andeq	r3, r0, r4, lsl r9
    4a38:	000da501 	andeq	sl, sp, r1, lsl #10
    4a3c:	121d1900 	andsne	r1, sp, #0, 18
    4a40:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    4a44:	03d22208 	bicseq	r2, r2, #8, 4	; 0x80000000
    4a48:	393c0000 	ldmdbcc	ip!, {}	; <UNPREDICTABLE>
    4a4c:	39340000 	ldmdbcc	r4!, {}	; <UNPREDICTABLE>
    4a50:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    4a54:	01000012 	tsteq	r0, r2, lsl r0
    4a58:	5c1508d0 	ldcpl	8, cr0, [r5], {208}	; 0xd0
    4a5c:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
    4a60:	76000039 			; <UNDEFINED> instruction: 0x76000039
    4a64:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
    4a68:	00000000 	andeq	r0, r0, r0
    4a6c:	000023e4 	andeq	r2, r0, r4, ror #7
    4a70:	7b012400 	blvc	4da78 <__HEAP_SIZE+0x4ca78>
    4a74:	0100000e 	tsteq	r0, lr
    4a78:	010d08be 			; <UNDEFINED> instruction: 0x010d08be
    4a7c:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4a88:	01007d02 	tsteq	r0, r2, lsl #26
    4a8c:	00000e04 	andeq	r0, r0, r4, lsl #28
    4a90:	00121d19 	andseq	r1, r2, r9, lsl sp
    4a94:	08be0100 	ldmeq	lr!, {r8}
    4a98:	0003de40 	andeq	sp, r3, r0, asr #28
    4a9c:	0039bc00 	eorseq	fp, r9, r0, lsl #24
    4aa0:	0039b800 	eorseq	fp, r9, r0, lsl #16
    4aa4:	0c051a00 			; <UNDEFINED> instruction: 0x0c051a00
    4aa8:	c0010000 	andgt	r0, r1, r0
    4aac:	01041108 	tsteq	r4, r8, lsl #2
    4ab0:	39df0000 	ldmibcc	pc, {}^	; <UNPREDICTABLE>
    4ab4:	39dd0000 	ldmibcc	sp, {}^	; <UNPREDICTABLE>
    4ab8:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    4abc:	01000012 	tsteq	r0, r2, lsl r0
    4ac0:	5c1508c1 	ldcpl	8, cr0, [r5], {193}	; 0xc1
    4ac4:	f6000006 			; <UNDEFINED> instruction: 0xf6000006
    4ac8:	f2000039 	vqadd.s8	d0, d0, d25
    4acc:	00000039 	andeq	r0, r0, r9, lsr r0
    4ad0:	0ba50121 	bleq	fe944f5c <__StackTop+0xc6844f5c>
    4ad4:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    4ad8:	04010d08 	streq	r0, [r1], #-3336	; 0xfffff2f8
    4adc:	00000001 	andeq	r0, r0, r1
    4ae0:	00000000 	andeq	r0, r0, r0
    4ae4:	17000000 	strne	r0, [r0, -r0]
    4ae8:	0100003a 	tsteq	r0, sl, lsr r0
    4aec:	00000e76 	andeq	r0, r0, r6, ror lr
    4af0:	00121d19 	andseq	r1, r2, r9, lsl sp
    4af4:	08a90100 	stmiaeq	r9!, {r8}
    4af8:	0003de39 	andeq	sp, r3, r9, lsr lr
    4afc:	003a3d00 	eorseq	r3, sl, r0, lsl #26
    4b00:	003a3700 	eorseq	r3, sl, r0, lsl #14
    4b04:	0c051a00 			; <UNDEFINED> instruction: 0x0c051a00
    4b08:	ab010000 	blge	44b10 <__HEAP_SIZE+0x43b10>
    4b0c:	01041108 	tsteq	r4, r8, lsl #2
    4b10:	3a6b0000 	bcc	1ac4b18 <__RAM_SIZE+0x19c4b18>
    4b14:	3a690000 	bcc	1a44b1c <__RAM_SIZE+0x1944b1c>
    4b18:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    4b1c:	01000012 	tsteq	r0, r2, lsl r0
    4b20:	5c1508ac 	ldcpl	8, cr0, [r5], {172}	; 0xac
    4b24:	84000006 	strhi	r0, [r0], #-6
    4b28:	7e00003a 	mcrvc	0, 0, r0, cr0, cr10, {1}
    4b2c:	1d00003a 	stcne	0, cr0, [r0, #-232]	; 0xffffff18
    4b30:	00000000 	andeq	r0, r0, r0
    4b34:	0000238e 	andeq	r2, r0, lr, lsl #7
    4b38:	0000001d 	andeq	r0, r0, sp, lsl r0
    4b3c:	00239c00 	eoreq	r9, r3, r0, lsl #24
    4b40:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4b44:	000011e4 	andeq	r1, r0, r4, ror #3
    4b48:	0d089501 	cfstr32eq	mvfx9, [r8, #-4]
    4b4c:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4b58:	003ab000 	eorseq	fp, sl, r0
    4b5c:	0ed30100 	cdpeq	1, 13, cr0, cr3, cr0, {0}
    4b60:	1d190000 	ldcne	0, cr0, [r9, #-0]
    4b64:	01000012 	tsteq	r0, r2, lsl r0
    4b68:	de390895 	mrcle	8, 1, r0, cr9, cr5, {4}
    4b6c:	d6000003 	strle	r0, [r0], -r3
    4b70:	d000003a 	andle	r0, r0, sl, lsr r0
    4b74:	1a00003a 	bne	4c64 <__HEAP_SIZE+0x3c64>
    4b78:	00000c05 	andeq	r0, r0, r5, lsl #24
    4b7c:	11089701 	tstne	r8, r1, lsl #14
    4b80:	00000104 	andeq	r0, r0, r4, lsl #2
    4b84:	00003b04 	andeq	r3, r0, r4, lsl #22
    4b88:	00003b02 	andeq	r3, r0, r2, lsl #22
    4b8c:	0000001d 	andeq	r0, r0, sp, lsl r0
    4b90:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4b94:	00001d00 	andeq	r1, r0, r0, lsl #26
    4b98:	239c0000 	orrscs	r0, ip, #0
    4b9c:	21000000 	mrscs	r0, (UNDEF: 0)
    4ba0:	00128501 	andseq	r8, r2, r1, lsl #10
    4ba4:	08570100 	ldmdaeq	r7, {r8}^
    4ba8:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4bb4:	3b170000 	blcc	5c4bbc <__RAM_SIZE+0x4c4bbc>
    4bb8:	a5010000 	strge	r0, [r1, #-0]
    4bbc:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    4bc0:	0000121d 	andeq	r1, r0, sp, lsl r2
    4bc4:	2d085701 	stccs	7, cr5, [r8, #-4]
    4bc8:	000003d2 	ldrdeq	r0, [r0], -r2
    4bcc:	00003b41 	andeq	r3, r0, r1, asr #22
    4bd0:	00003b37 	andeq	r3, r0, r7, lsr fp
    4bd4:	000cad19 	andeq	sl, ip, r9, lsl sp
    4bd8:	08580100 	ldmdaeq	r8, {r8}^
    4bdc:	0000a82c 	andeq	sl, r0, ip, lsr #16
    4be0:	003b8a00 	eorseq	r8, fp, r0, lsl #20
    4be4:	003b8600 	eorseq	r8, fp, r0, lsl #12
    4be8:	1a191a00 	bne	64b3f0 <__RAM_SIZE+0x54b3f0>
    4bec:	5a010000 	bpl	44bf4 <__HEAP_SIZE+0x43bf4>
    4bf0:	00f31008 	rscseq	r1, r3, r8
    4bf4:	3bac0000 	blcc	feb04bfc <__StackTop+0xc6a04bfc>
    4bf8:	3ba80000 	blcc	fea04c00 <__StackTop+0xc6904c00>
    4bfc:	261a0000 	ldrcs	r0, [sl], -r0
    4c00:	0100000c 	tsteq	r0, ip
    4c04:	0411085b 	ldreq	r0, [r1], #-2139	; 0xfffff7a5
    4c08:	d3000001 	movwle	r0, #1
    4c0c:	cb00003b 	blgt	4d00 <__HEAP_SIZE+0x3d00>
    4c10:	1a00003b 	bne	4d04 <__HEAP_SIZE+0x3d04>
    4c14:	0000104a 	andeq	r1, r0, sl, asr #32
    4c18:	0e085c01 	cdpeq	12, 0, cr5, cr8, cr1, {0}
    4c1c:	000004ed 	andeq	r0, r0, sp, ror #9
    4c20:	00003c09 	andeq	r3, r0, r9, lsl #24
    4c24:	00003c07 	andeq	r3, r0, r7, lsl #24
    4c28:	00121c1a 	andseq	r1, r2, sl, lsl ip
    4c2c:	085d0100 	ldmdaeq	sp, {r8}^
    4c30:	00065c15 	andeq	r5, r6, r5, lsl ip
    4c34:	003c2600 	eorseq	r2, ip, r0, lsl #12
    4c38:	003c1c00 	eorseq	r1, ip, r0, lsl #24
    4c3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4c40:	23f20000 	mvnscs	r0, #0
    4c44:	001e0000 	andseq	r0, lr, r0
    4c48:	00000000 	andeq	r0, r0, r0
    4c4c:	8e000024 	cdphi	0, 0, cr0, cr0, cr4, {1}
    4c50:	1f00000f 	svcne	0x0000000f
    4c54:	75025001 	strvc	r5, [r2, #-1]
    4c58:	00200000 	eoreq	r0, r0, r0
    4c5c:	af000000 	svcge	0x00000000
    4c60:	1f00000b 	svcne	0x0000000b
    4c64:	74025001 	strvc	r5, [r2], #-1
    4c68:	51011f00 	tstpl	r1, r0, lsl #30
    4c6c:	00007602 	andeq	r7, r0, r2, lsl #12
    4c70:	c5012100 	strgt	r2, [r1, #-256]	; 0xffffff00
    4c74:	0100000a 	tsteq	r0, sl
    4c78:	010c07f3 	strdeq	r0, [ip, -r3]
    4c7c:	000000f3 	strdeq	r0, [r0], -r3
	...
    4c88:	00003c6b 	andeq	r3, r0, fp, ror #24
    4c8c:	0010f101 	andseq	pc, r0, r1, lsl #2
    4c90:	121d1900 	andsne	r1, sp, #0, 18
    4c94:	f3010000 	vhadd.u8	d0, d1, d0
    4c98:	03d23007 	bicseq	r3, r2, #7
    4c9c:	3ca90000 	stccc	0, cr0, [r9]
    4ca0:	3c8b0000 	stccc	0, cr0, [fp], {0}
    4ca4:	ad190000 	ldcge	0, cr0, [r9, #-0]
    4ca8:	0100000c 	tsteq	r0, ip
    4cac:	a82f07f4 	stmdage	pc!, {r2, r4, r5, r6, r7, r8, r9, sl}	; <UNPREDICTABLE>
    4cb0:	6f000000 	svcvs	0x00000000
    4cb4:	6b00003d 	blvs	4db0 <__HEAP_SIZE+0x3db0>
    4cb8:	1900003d 	stmdbne	r0, {r0, r2, r3, r4, r5}
    4cbc:	00000af1 	strdeq	r0, [r0], -r1
    4cc0:	3507f501 	strcc	pc, [r7, #-1281]	; 0xfffffaff
    4cc4:	000010f7 	strdeq	r1, [r0], -r7
    4cc8:	00003d91 	muleq	r0, r1, sp
    4ccc:	00003d8d 	andeq	r3, r0, sp, lsl #27
    4cd0:	001a191a 	andseq	r1, sl, sl, lsl r9
    4cd4:	07f70100 	ldrbeq	r0, [r7, r0, lsl #2]!
    4cd8:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4cdc:	003db100 	eorseq	fp, sp, r0, lsl #2
    4ce0:	003daf00 	eorseq	sl, sp, r0, lsl #30
    4ce4:	0c261a00 			; <UNDEFINED> instruction: 0x0c261a00
    4ce8:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    4cec:	01041107 	tsteq	r4, r7, lsl #2
    4cf0:	3dcc0000 	stclcc	0, cr0, [ip]
    4cf4:	3dc40000 	stclcc	0, cr0, [r4]
    4cf8:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    4cfc:	01000012 	tsteq	r0, r2, lsl r0
    4d00:	5c1507f9 	ldcpl	7, cr0, [r5], {249}	; 0xf9
    4d04:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
    4d08:	0000003e 	andeq	r0, r0, lr, lsr r0
    4d0c:	2800003e 	stmdacs	r0, {r1, r2, r3, r4, r5}
    4d10:	00000378 	andeq	r0, r0, r8, ror r3
    4d14:	000010d7 	ldrdeq	r1, [r0], -r7
    4d18:	000cdb1a 	andeq	sp, ip, sl, lsl fp
    4d1c:	08150100 	ldmdaeq	r5, {r8}
    4d20:	0001151b 	andeq	r1, r1, fp, lsl r5
    4d24:	003ee600 	eorseq	lr, lr, r0, lsl #12
    4d28:	003ee000 	eorseq	lr, lr, r0
    4d2c:	00002900 	andeq	r2, r0, r0, lsl #18
    4d30:	00000000 	andeq	r0, r0, r0
    4d34:	9b1a0000 	blls	684d3c <__RAM_SIZE+0x584d3c>
    4d38:	01000013 	tsteq	r0, r3, lsl r0
    4d3c:	d11a081a 	tstle	sl, sl, lsl r8
    4d40:	17000000 	strne	r0, [r0, -r0]
    4d44:	1100003f 	tstne	r0, pc, lsr r0
    4d48:	1c00003f 	stcne	0, cr0, [r0], {63}	; 0x3f
	...
    4d54:	000010ab 	andeq	r1, r0, fp, lsr #1
    4d58:	00110a1a 	andseq	r0, r1, sl, lsl sl
    4d5c:	08440100 	stmdaeq	r4, {r8}^
    4d60:	00011511 	andeq	r1, r1, r1, lsl r5
    4d64:	003f4600 	eorseq	r4, pc, r0, lsl #12
    4d68:	003f4200 	eorseq	r4, pc, r0, lsl #4
    4d6c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4d70:	23700000 	cmncs	r0, #0
    4d74:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    4d78:	00000000 	andeq	r0, r0, r0
    4d7c:	00000baf 	andeq	r0, r0, pc, lsr #23
    4d80:	000010c5 	andeq	r1, r0, r5, asr #1
    4d84:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4d88:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    4d8c:	00770251 	rsbseq	r0, r7, r1, asr r2
    4d90:	00002000 	andeq	r2, r0, r0
    4d94:	237f0000 	cmncs	pc, #0
    4d98:	011f0000 	tsteq	pc, r0
    4d9c:	10740250 	rsbsne	r0, r4, r0, asr r2
    4da0:	1d000000 	stcne	0, cr0, [r0, #-0]
    4da4:	00000000 	andeq	r0, r0, r0
    4da8:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    4dac:	00000020 	andeq	r0, r0, r0, lsr #32
    4db0:	00240000 	eoreq	r0, r4, r0
    4db4:	50011f00 	andpl	r1, r1, r0, lsl #30
    4db8:	00007502 	andeq	r7, r0, r2, lsl #10
    4dbc:	f3040700 	vabd.u8	d0, d4, d0
    4dc0:	06000000 	streq	r0, [r0], -r0
    4dc4:	000010f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    4dc8:	0d2c0121 	stfeqs	f0, [ip, #-132]!	; 0xffffff7c
    4dcc:	55010000 	strpl	r0, [r1, #-0]
    4dd0:	f3010c07 			; <UNDEFINED> instruction: 0xf3010c07
	...
    4ddc:	64000000 	strvs	r0, [r0], #-0
    4de0:	0100003f 	tsteq	r0, pc, lsr r0
    4de4:	00001306 	andeq	r1, r0, r6, lsl #6
    4de8:	00121d19 	andseq	r1, r2, r9, lsl sp
    4dec:	07550100 	ldrbeq	r0, [r5, -r0, lsl #2]
    4df0:	0003d226 	andeq	sp, r3, r6, lsr #4
    4df4:	003fac00 	eorseq	sl, pc, r0, lsl #24
    4df8:	003fa800 	eorseq	sl, pc, r0, lsl #16
    4dfc:	0cad1900 			; <UNDEFINED> instruction: 0x0cad1900
    4e00:	56010000 	strpl	r0, [r1], -r0
    4e04:	00a82507 	adceq	r2, r8, r7, lsl #10
    4e08:	3fce0000 	svccc	0x00ce0000
    4e0c:	3fca0000 	svccc	0x00ca0000
    4e10:	e1190000 	tst	r9, r0
    4e14:	01000020 	tsteq	r0, r0, lsr #32
    4e18:	1a230757 	bne	8c6b7c <__RAM_SIZE+0x7c6b7c>
    4e1c:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
    4e20:	ec00003f 	stc	0, cr0, [r0], {63}	; 0x3f
    4e24:	1a00003f 	bne	4f28 <__HEAP_SIZE+0x3f28>
    4e28:	00000d37 	andeq	r0, r0, r7, lsr sp
    4e2c:	10075901 	andne	r5, r7, r1, lsl #18
    4e30:	000000f3 	strdeq	r0, [r0], -r3
    4e34:	0000400b 	andeq	r4, r0, fp
    4e38:	00004001 	andeq	r4, r0, r1
    4e3c:	001c6522 	andseq	r6, ip, r2, lsr #10
    4e40:	075a0100 	ldrbeq	r0, [sl, -r0, lsl #2]
    4e44:	0003c60f 	andeq	ip, r3, pc, lsl #12
    4e48:	68910200 	ldmvs	r1, {r9}
    4e4c:	00104a1a 	andseq	r4, r0, sl, lsl sl
    4e50:	075b0100 	ldrbeq	r0, [fp, -r0, lsl #2]
    4e54:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    4e58:	00405000 	subeq	r5, r0, r0
    4e5c:	00404c00 	subeq	r4, r0, r0, lsl #24
    4e60:	121c1a00 	andsne	r1, ip, #0, 20
    4e64:	5c010000 	stcpl	0, cr0, [r1], {-0}
    4e68:	065c1507 	ldrbeq	r1, [ip], -r7, lsl #10
    4e6c:	40720000 	rsbsmi	r0, r2, r0
    4e70:	406e0000 	rsbmi	r0, lr, r0
    4e74:	58280000 	stmdapl	r8!, {}	; <UNPREDICTABLE>
    4e78:	22000003 	andcs	r0, r0, #3
    4e7c:	1a000012 	bne	4ecc <__HEAP_SIZE+0x3ecc>
    4e80:	00000cdb 	ldrdeq	r0, [r0], -fp
    4e84:	1f077201 	svcne	0x00077201
    4e88:	00000115 	andeq	r0, r0, r5, lsl r1
    4e8c:	00004094 	muleq	r0, r4, r0
    4e90:	00004090 	muleq	r0, r0, r0
    4e94:	0000001e 	andeq	r0, r0, lr, lsl r0
    4e98:	000baf00 	andeq	sl, fp, r0, lsl #30
    4e9c:	0011e200 	andseq	lr, r1, r0, lsl #4
    4ea0:	50011f00 	andpl	r1, r1, r0, lsl #30
    4ea4:	1f007402 	svcne	0x00007402
    4ea8:	76025101 	strvc	r5, [r2], -r1, lsl #2
    4eac:	001d0000 	andseq	r0, sp, r0
    4eb0:	9c000000 	stcls	0, cr0, [r0], {-0}
    4eb4:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    4eb8:	00000000 	andeq	r0, r0, r0
    4ebc:	0000237f 	andeq	r2, r0, pc, ror r3
    4ec0:	000011ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4ec4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4ec8:	1d002c74 	stcne	12, cr2, [r0, #-464]	; 0xfffffe30
    4ecc:	00000000 	andeq	r0, r0, r0
    4ed0:	0000240e 	andeq	r2, r0, lr, lsl #8
    4ed4:	0000001d 	andeq	r0, r0, sp, lsl r0
    4ed8:	00239c00 	eoreq	r9, r3, r0, lsl #24
    4edc:	00002000 	andeq	r2, r0, r0
    4ee0:	241c0000 	ldrcs	r0, [ip], #-0
    4ee4:	011f0000 	tsteq	pc, r0
    4ee8:	68910250 	ldmvs	r1, {r4, r6, r9}
    4eec:	001e0000 	andseq	r0, lr, r0
    4ef0:	bd000000 	stclt	0, cr0, [r0, #-0]
    4ef4:	3600000a 	strcc	r0, [r0], -sl
    4ef8:	1f000012 	svcne	0x00000012
    4efc:	74025001 	strvc	r5, [r2], #-1
    4f00:	001d0000 	andseq	r0, sp, r0
    4f04:	2b000000 	blcs	4f0c <__HEAP_SIZE+0x3f0c>
    4f08:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    4f0c:	00000000 	andeq	r0, r0, r0
    4f10:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    4f14:	00001253 	andeq	r1, r0, r3, asr r2
    4f18:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f1c:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    4f20:	00000000 	andeq	r0, r0, r0
    4f24:	0000242b 	andeq	r2, r0, fp, lsr #8
    4f28:	0000001e 	andeq	r0, r0, lr, lsl r0
    4f2c:	000a6100 	andeq	r6, sl, r0, lsl #2
    4f30:	00127000 	andseq	r7, r2, r0
    4f34:	50011f00 	andpl	r1, r1, r0, lsl #30
    4f38:	00007402 	andeq	r7, r0, r2, lsl #8
    4f3c:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f40:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4f44:	00001d00 	andeq	r1, r0, r0, lsl #26
    4f48:	239c0000 	orrscs	r0, ip, #0
    4f4c:	001d0000 	andseq	r0, sp, r0
    4f50:	3a000000 	bcc	4f58 <__HEAP_SIZE+0x3f58>
    4f54:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    4f58:	00000000 	andeq	r0, r0, r0
    4f5c:	0000238e 	andeq	r2, r0, lr, lsl #7
    4f60:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f64:	00239c00 	eoreq	r9, r3, r0, lsl #24
    4f68:	00001e00 	andeq	r1, r0, r0, lsl #28
    4f6c:	24490000 	strbcs	r0, [r9], #-0
    4f70:	12b70000 	adcsne	r0, r7, #0
    4f74:	011f0000 	tsteq	pc, r0
    4f78:	68910250 	ldmvs	r1, {r4, r6, r9}
    4f7c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    4f80:	1e006491 	mcrne	4, 0, r6, cr0, cr1, {4}
    4f84:	00000000 	andeq	r0, r0, r0
    4f88:	00000a61 	andeq	r0, r0, r1, ror #20
    4f8c:	000012cb 	andeq	r1, r0, fp, asr #5
    4f90:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f94:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	00002458 	andeq	r2, r0, r8, asr r4
    4fa0:	000012df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4fa4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4fa8:	1e002c74 	mcrne	12, 0, r2, cr0, cr4, {3}
    4fac:	00000000 	andeq	r0, r0, r0
    4fb0:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    4fb4:	000012f3 	strdeq	r1, [r0], -r3
    4fb8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4fbc:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    4fc0:	00000000 	andeq	r0, r0, r0
    4fc4:	0000242b 	andeq	r2, r0, fp, lsr #8
    4fc8:	0000001d 	andeq	r0, r0, sp, lsl r0
    4fcc:	00240e00 	eoreq	r0, r4, r0, lsl #28
    4fd0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4fd4:	00000d95 	muleq	r0, r5, sp
    4fd8:	0c067401 	cfstrseq	mvf7, [r6], {1}
    4fdc:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4fe8:	0040b200 	subeq	fp, r0, r0, lsl #4
    4fec:	15570100 	ldrbne	r0, [r7, #-256]	; 0xffffff00
    4ff0:	1d190000 	ldcne	0, cr0, [r9, #-0]
    4ff4:	01000012 	tsteq	r0, r2, lsl r0
    4ff8:	d22f0674 	eorle	r0, pc, #116, 12	; 0x7400000
    4ffc:	fa000003 	blx	5010 <__HEAP_SIZE+0x4010>
    5000:	f6000040 			; <UNDEFINED> instruction: 0xf6000040
    5004:	19000040 	stmdbne	r0, {r6}
    5008:	000020e1 	andeq	r2, r0, r1, ror #1
    500c:	2c067501 	cfstr32cs	mvfx7, [r6], {1}
    5010:	0000011a 	andeq	r0, r0, sl, lsl r1
    5014:	0000411a 	andeq	r4, r0, sl, lsl r1
    5018:	00004118 	andeq	r4, r0, r8, lsl r1
    501c:	000d371a 	andeq	r3, sp, sl, lsl r7
    5020:	06770100 	ldrbteq	r0, [r7], -r0, lsl #2
    5024:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5028:	00413500 	subeq	r3, r1, r0, lsl #10
    502c:	00412d00 	subeq	r2, r1, r0, lsl #26
    5030:	1c652200 	sfmne	f2, 2, [r5], #-0
    5034:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    5038:	03c60f06 	biceq	r0, r6, #6, 30
    503c:	91020000 	mrsls	r0, (UNDEF: 2)
    5040:	121c1a68 	andsne	r1, ip, #104, 20	; 0x68000
    5044:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    5048:	065c1506 	ldrbeq	r1, [ip], -r6, lsl #10
    504c:	416f0000 	cmnmi	pc, r0
    5050:	416b0000 	cmnmi	fp, r0
    5054:	e31a0000 	tst	sl, #0
    5058:	01000010 	tsteq	r0, r0, lsl r0
    505c:	f314067c 	vmin.u16	q0, q2, q14
    5060:	95000000 	strls	r0, [r0, #-0]
    5064:	8d000041 	stchi	0, cr0, [r0, #-260]	; 0xfffffefc
    5068:	28000041 	stmdacs	r0, {r0, r6}
    506c:	00000338 	andeq	r0, r0, r8, lsr r3
    5070:	00001406 	andeq	r1, r0, r6, lsl #8
    5074:	0010b11a 	andseq	fp, r0, sl, lsl r1
    5078:	06950100 	ldreq	r0, [r5], r0, lsl #2
    507c:	0001151f 	andeq	r1, r1, pc, lsl r5
    5080:	0041d400 	subeq	sp, r1, r0, lsl #8
    5084:	0041ca00 	subeq	ip, r1, r0, lsl #20
    5088:	00001d00 	andeq	r1, r0, r0, lsl #26
    508c:	239c0000 	orrscs	r0, ip, #0
    5090:	001d0000 	andseq	r0, sp, r0
    5094:	67000000 	strvs	r0, [r0, -r0]
    5098:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    509c:	00000000 	andeq	r0, r0, r0
    50a0:	0000237f 	andeq	r2, r0, pc, ror r3
    50a4:	000013e3 	andeq	r1, r0, r3, ror #7
    50a8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    50ac:	1d001074 	stcne	0, cr1, [r0, #-464]	; 0xfffffe30
    50b0:	00000000 	andeq	r0, r0, r0
    50b4:	0000240e 	andeq	r2, r0, lr, lsl #8
    50b8:	0000001d 	andeq	r0, r0, sp, lsl r0
    50bc:	00239c00 	eoreq	r9, r3, r0, lsl #24
    50c0:	00002000 	andeq	r2, r0, r0
    50c4:	241c0000 	ldrcs	r0, [ip], #-0
    50c8:	011f0000 	tsteq	pc, r0
    50cc:	68910250 	ldmvs	r1, {r4, r6, r9}
    50d0:	001c0000 	andseq	r0, ip, r0
    50d4:	00000000 	andeq	r0, r0, r0
    50d8:	46000000 	strmi	r0, [r0], -r0
    50dc:	1a000014 	bne	5134 <__HEAP_SIZE+0x4134>
    50e0:	00001297 	muleq	r0, r7, r2
    50e4:	29073001 	stmdbcs	r7, {r0, ip, sp}
    50e8:	00000104 	andeq	r0, r0, r4, lsl #2
    50ec:	00004225 	andeq	r4, r0, r5, lsr #4
    50f0:	00004221 	andeq	r4, r0, r1, lsr #4
    50f4:	0000001e 	andeq	r0, r0, lr, lsl r0
    50f8:	000ca200 	andeq	sl, ip, r0, lsl #4
    50fc:	00143c00 	andseq	r3, r4, r0, lsl #24
    5100:	50011f00 	andpl	r1, r1, r0, lsl #30
    5104:	00007402 	andeq	r7, r0, r2, lsl #8
    5108:	0000001d 	andeq	r0, r0, sp, lsl r0
    510c:	00247600 	eoreq	r7, r4, r0, lsl #12
    5110:	001d0000 	andseq	r0, sp, r0
    5114:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5118:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    511c:	00000000 	andeq	r0, r0, r0
    5120:	00002485 	andeq	r2, r0, r5, lsl #9
    5124:	0000001d 	andeq	r0, r0, sp, lsl r0
    5128:	00239c00 	eoreq	r9, r3, r0, lsl #24
    512c:	00001e00 	andeq	r1, r0, r0, lsl #28
    5130:	0abd0000 	beq	fef45138 <__StackTop+0xc6e45138>
    5134:	14750000 	ldrbtne	r0, [r5], #-0
    5138:	011f0000 	tsteq	pc, r0
    513c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5140:	00001d00 	andeq	r1, r0, r0, lsl #26
    5144:	242b0000 	strtcs	r0, [fp], #-0
    5148:	001e0000 	andseq	r0, lr, r0
    514c:	bd000000 	stclt	0, cr0, [r0, #-0]
    5150:	9200000a 	andls	r0, r0, #10
    5154:	1f000014 	svcne	0x00000014
    5158:	74025001 	strvc	r5, [r2], #-1
    515c:	001d0000 	andseq	r0, sp, r0
    5160:	2b000000 	blcs	5168 <__HEAP_SIZE+0x4168>
    5164:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5168:	00000000 	andeq	r0, r0, r0
    516c:	00000a61 	andeq	r0, r0, r1, ror #20
    5170:	000014af 	andeq	r1, r0, pc, lsr #9
    5174:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5178:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    517c:	00000000 	andeq	r0, r0, r0
    5180:	0000238e 	andeq	r2, r0, lr, lsl #7
    5184:	0000001d 	andeq	r0, r0, sp, lsl r0
    5188:	00239c00 	eoreq	r9, r3, r0, lsl #24
    518c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5190:	243a0000 	ldrtcs	r0, [sl], #-0
    5194:	001d0000 	andseq	r0, sp, r0
    5198:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    519c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    51a0:	00000000 	andeq	r0, r0, r0
    51a4:	0000239c 	muleq	r0, ip, r3
    51a8:	0000001e 	andeq	r0, r0, lr, lsl r0
    51ac:	00244900 	eoreq	r4, r4, r0, lsl #18
    51b0:	0014f600 	andseq	pc, r4, r0, lsl #12
    51b4:	50011f00 	andpl	r1, r1, r0, lsl #30
    51b8:	1f689102 	svcne	0x00689102
    51bc:	91025101 	tstls	r2, r1, lsl #2
    51c0:	001e0064 	andseq	r0, lr, r4, rrx
    51c4:	61000000 	mrsvs	r0, (UNDEF: 0)
    51c8:	0a00000a 	beq	51f8 <__HEAP_SIZE+0x41f8>
    51cc:	1f000015 	svcne	0x00000015
    51d0:	74025001 	strvc	r5, [r2], #-1
    51d4:	001e0000 	andseq	r0, lr, r0
    51d8:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    51dc:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    51e0:	1f000015 	svcne	0x00000015
    51e4:	74025001 	strvc	r5, [r2], #-1
    51e8:	001e002c 	andseq	r0, lr, ip, lsr #32
    51ec:	bd000000 	stclt	0, cr0, [r0, #-0]
    51f0:	3200000a 	andcc	r0, r0, #10
    51f4:	1f000015 	svcne	0x00000015
    51f8:	74025001 	strvc	r5, [r2], #-1
    51fc:	001d0000 	andseq	r0, sp, r0
    5200:	2b000000 	blcs	5208 <__HEAP_SIZE+0x4208>
    5204:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5208:	00000000 	andeq	r0, r0, r0
    520c:	0000240e 	andeq	r2, r0, lr, lsl #8
    5210:	0000001d 	andeq	r0, r0, sp, lsl r0
    5214:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5218:	00001d00 	andeq	r1, r0, r0, lsl #26
    521c:	239c0000 	orrscs	r0, ip, #0
    5220:	21000000 	mrscs	r0, (UNDEF: 0)
    5224:	000ab701 	andeq	fp, sl, r1, lsl #14
    5228:	05de0100 	ldrbeq	r0, [lr, #256]	; 0x100
    522c:	00f3010c 	rscseq	r0, r3, ip, lsl #2
    5230:	21300000 	teqcs	r0, r0
    5234:	22201000 	eorcs	r1, r0, #0
    5238:	42431000 	submi	r1, r3, #0
    523c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    5240:	19000017 	stmdbne	r0, {r0, r1, r2, r4}
    5244:	0000121d 	andeq	r1, r0, sp, lsl r2
    5248:	2905de01 	stmdbcs	r5, {r0, r9, sl, fp, ip, lr, pc}
    524c:	000003d2 	ldrdeq	r0, [r0], -r2
    5250:	0000428b 	andeq	r4, r0, fp, lsl #5
    5254:	00004287 	andeq	r4, r0, r7, lsl #5
    5258:	000cad19 	andeq	sl, ip, r9, lsl sp
    525c:	05df0100 	ldrbeq	r0, [pc, #256]	; 5364 <__HEAP_SIZE+0x4364>
    5260:	0000a828 	andeq	sl, r0, r8, lsr #16
    5264:	0042ad00 	subeq	sl, r2, r0, lsl #26
    5268:	0042a900 	subeq	sl, r2, r0, lsl #18
    526c:	20e11900 	rsccs	r1, r1, r0, lsl #18
    5270:	e0010000 	and	r0, r1, r0
    5274:	011a2605 	tsteq	sl, r5, lsl #12
    5278:	42cd0000 	sbcmi	r0, sp, #0
    527c:	42cb0000 	sbcmi	r0, fp, #0
    5280:	371a0000 	ldrcc	r0, [sl, -r0]
    5284:	0100000d 	tsteq	r0, sp
    5288:	f31005e2 	vrshl.u16	q0, q9, q8
    528c:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    5290:	e0000042 	and	r0, r0, r2, asr #32
    5294:	22000042 	andcs	r0, r0, #66	; 0x42
    5298:	00001c65 	andeq	r1, r0, r5, ror #24
    529c:	0f05e301 	svceq	0x0005e301
    52a0:	000003c6 	andeq	r0, r0, r6, asr #7
    52a4:	1a609102 	bne	18296b4 <__RAM_SIZE+0x17296b4>
    52a8:	0000121c 	andeq	r1, r0, ip, lsl r2
    52ac:	1505e401 	strne	lr, [r5, #-1025]	; 0xfffffbff
    52b0:	0000065c 	andeq	r0, r0, ip, asr r6
    52b4:	00004322 	andeq	r4, r0, r2, lsr #6
    52b8:	0000431e 	andeq	r4, r0, lr, lsl r3
    52bc:	00031828 	andeq	r1, r3, r8, lsr #16
    52c0:	00166800 	andseq	r6, r6, r0, lsl #16
    52c4:	0cdb1a00 	vldmiaeq	fp, {s3-s2}
    52c8:	fa010000 	blx	452d0 <__HEAP_SIZE+0x442d0>
    52cc:	01151f05 	tsteq	r5, r5, lsl #30
    52d0:	434a0000 	movtmi	r0, #40960	; 0xa000
    52d4:	43400000 	movtmi	r0, #0
    52d8:	461e0000 	ldrmi	r0, [lr], -r0
    52dc:	af100021 	svcge	0x00100021
    52e0:	2800000b 	stmdacs	r0, {r0, r1, r3}
    52e4:	1f000016 	svcne	0x00000016
    52e8:	74025001 	strvc	r5, [r2], #-1
    52ec:	51011f00 	tstpl	r1, r0, lsl #30
    52f0:	00007702 	andeq	r7, r0, r2, lsl #14
    52f4:	0021521d 	eoreq	r5, r1, sp, lsl r2
    52f8:	00239c10 	eoreq	r9, r3, r0, lsl ip
    52fc:	21601e00 	cmncs	r0, r0, lsl #28
    5300:	237f1000 	cmncs	pc, #0
    5304:	16450000 	strbne	r0, [r5], -r0
    5308:	011f0000 	tsteq	pc, r0
    530c:	10740250 	rsbsne	r0, r4, r0, asr r2
    5310:	21681d00 	cmncs	r8, r0, lsl #26
    5314:	240e1000 	strcs	r1, [lr], #-0
    5318:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    531c:	9c100021 	ldcls	0, cr0, [r0], {33}	; 0x21
    5320:	20000023 	andcs	r0, r0, r3, lsr #32
    5324:	10002178 	andne	r2, r0, r8, ror r1
    5328:	0000241c 	andeq	r2, r0, ip, lsl r4
    532c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5330:	00006091 	muleq	r0, r1, r0
    5334:	0021921e 	eoreq	r9, r1, lr, lsl r2
    5338:	000abd10 	andeq	fp, sl, r0, lsl sp
    533c:	00167c00 	andseq	r7, r6, r0, lsl #24
    5340:	50011f00 	andpl	r1, r1, r0, lsl #30
    5344:	00007402 	andeq	r7, r0, r2, lsl #8
    5348:	0021961d 	eoreq	r9, r1, sp, lsl r6
    534c:	00242b10 	eoreq	r2, r4, r0, lsl fp
    5350:	219e1e00 	orrscs	r1, lr, r0, lsl #28
    5354:	0abd1000 	beq	fef4935c <__StackTop+0xc6e4935c>
    5358:	16990000 	ldrne	r0, [r9], r0
    535c:	011f0000 	tsteq	pc, r0
    5360:	00740250 	rsbseq	r0, r4, r0, asr r2
    5364:	21a21d00 			; <UNDEFINED> instruction: 0x21a21d00
    5368:	242b1000 	strtcs	r1, [fp], #-0
    536c:	a81e0000 	ldmdage	lr, {}	; <UNPREDICTABLE>
    5370:	61100021 	tstvs	r0, r1, lsr #32
    5374:	b600000a 	strlt	r0, [r0], -sl
    5378:	1f000016 	svcne	0x00000016
    537c:	74025001 	strvc	r5, [r2], #-1
    5380:	b01d0000 	andslt	r0, sp, r0
    5384:	8e100021 	cdphi	0, 1, cr0, cr0, cr1, {1}
    5388:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    538c:	100021c4 	andne	r2, r0, r4, asr #3
    5390:	0000239c 	muleq	r0, ip, r3
    5394:	0021c81d 	eoreq	ip, r1, sp, lsl r8
    5398:	00243a10 	eoreq	r3, r4, r0, lsl sl
    539c:	21cc1d00 	biccs	r1, ip, r0, lsl #26
    53a0:	238e1000 	orrcs	r1, lr, #0
    53a4:	e81d0000 	ldmda	sp, {}	; <UNPREDICTABLE>
    53a8:	9c100021 	ldcls	0, cr0, [r0], {33}	; 0x21
    53ac:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    53b0:	100021f0 	strdne	r2, [r0], -r0
    53b4:	00002449 	andeq	r2, r0, r9, asr #8
    53b8:	000016fd 	strdeq	r1, [r0], -sp
    53bc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    53c0:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
    53c4:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    53c8:	21fa1e00 	mvnscs	r1, r0, lsl #28
    53cc:	0a611000 	beq	18493d4 <__RAM_SIZE+0x17493d4>
    53d0:	17110000 	ldrne	r0, [r1, -r0]
    53d4:	011f0000 	tsteq	pc, r0
    53d8:	00740250 	rsbseq	r0, r4, r0, asr r2
    53dc:	22081e00 	andcs	r1, r8, #0, 28
    53e0:	24581000 	ldrbcs	r1, [r8], #-0
    53e4:	17250000 	strne	r0, [r5, -r0]!
    53e8:	011f0000 	tsteq	pc, r0
    53ec:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    53f0:	220e1e00 	andcs	r1, lr, #0, 28
    53f4:	0abd1000 	beq	fef493fc <__StackTop+0xc6e493fc>
    53f8:	17390000 	ldrne	r0, [r9, -r0]!
    53fc:	011f0000 	tsteq	pc, r0
    5400:	00740250 	rsbseq	r0, r4, r0, asr r2
    5404:	22121d00 	andscs	r1, r2, #0, 26
    5408:	242b1000 	strtcs	r1, [fp], #-0
    540c:	1a1d0000 	bne	745414 <__RAM_SIZE+0x645414>
    5410:	0e100022 	cdpeq	0, 1, cr0, cr0, cr2, {1}
    5414:	00000024 	andeq	r0, r0, r4, lsr #32
    5418:	0ef60121 	cdpeq	1, 15, cr0, cr6, cr1, {1}
    541c:	31010000 	mrscc	r0, (UNDEF: 1)
    5420:	f3010c05 			; <UNDEFINED> instruction: 0xf3010c05
	...
    542c:	8d000000 	stchi	0, cr0, [r0, #-0]
    5430:	01000043 	tsteq	r0, r3, asr #32
    5434:	00001879 	andeq	r1, r0, r9, ror r8
    5438:	00121d19 	andseq	r1, r2, r9, lsl sp
    543c:	05310100 	ldreq	r0, [r1, #-256]!	; 0xffffff00
    5440:	0003d22d 	andeq	sp, r3, sp, lsr #4
    5444:	0043d700 	subeq	sp, r3, r0, lsl #14
    5448:	0043ad00 	subeq	sl, r3, r0, lsl #26
    544c:	0af11900 	beq	ffc4b854 <__StackTop+0xc7b4b854>
    5450:	32010000 	andcc	r0, r1, #0
    5454:	10f73205 	rscsne	r3, r7, r5, lsl #4
    5458:	44e80000 	strbtmi	r0, [r8], #0
    545c:	44e40000 	strbtmi	r0, [r4], #0
    5460:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    5464:	0100001a 	tsteq	r0, sl, lsl r0
    5468:	f3100534 	vqrshl.u16	d0, d20, d0
    546c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5470:	06000045 	streq	r0, [r0], -r5, asr #32
    5474:	1a000045 	bne	5590 <__HEAP_SIZE+0x4590>
    5478:	00000c26 	andeq	r0, r0, r6, lsr #24
    547c:	11053501 	tstne	r5, r1, lsl #10
    5480:	00000104 	andeq	r0, r0, r4, lsl #2
    5484:	0000452b 	andeq	r4, r0, fp, lsr #10
    5488:	0000451b 	andeq	r4, r0, fp, lsl r5
    548c:	00121c1a 	andseq	r1, r2, sl, lsl ip
    5490:	05360100 	ldreq	r0, [r6, #-256]!	; 0xffffff00
    5494:	00065c15 	andeq	r5, r6, r5, lsl ip
    5498:	0045b500 	subeq	fp, r5, r0, lsl #10
    549c:	00458b00 	subeq	r8, r5, r0, lsl #22
    54a0:	02e82800 	rsceq	r2, r8, #0, 16
    54a4:	185f0000 	ldmdane	pc, {}^	; <UNPREDICTABLE>
    54a8:	db1a0000 	blle	6854b0 <__RAM_SIZE+0x5854b0>
    54ac:	0100000c 	tsteq	r0, ip
    54b0:	151b0560 	ldrne	r0, [fp, #-1376]	; 0xfffffaa0
    54b4:	d2000001 	andle	r0, r0, #1
    54b8:	c2000046 	andgt	r0, r0, #70	; 0x46
    54bc:	1b000046 	blne	55dc <__HEAP_SIZE+0x45dc>
    54c0:	00000300 	andeq	r0, r0, r0, lsl #6
    54c4:	000bbc1a 	andeq	fp, fp, sl, lsl ip
    54c8:	05670100 	strbeq	r0, [r7, #-256]!	; 0xffffff00
    54cc:	0000d11a 	andeq	sp, r0, sl, lsl r1
    54d0:	00475600 	subeq	r5, r7, r0, lsl #12
    54d4:	00475000 	subeq	r5, r7, r0
    54d8:	00001c00 	andeq	r1, r0, r0, lsl #24
    54dc:	00000000 	andeq	r0, r0, r0
    54e0:	18390000 	ldmdane	r9!, {}	; <UNPREDICTABLE>
    54e4:	0a1a0000 	beq	6854ec <__RAM_SIZE+0x5854ec>
    54e8:	01000011 	tsteq	r0, r1, lsl r0
    54ec:	151105cb 	ldrne	r0, [r1, #-1483]	; 0xfffffa35
    54f0:	85000001 	strhi	r0, [r0, #-1]
    54f4:	81000047 	tsthi	r0, r7, asr #32
    54f8:	1d000047 	stcne	0, cr0, [r0, #-284]	; 0xfffffee4
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	00002370 	andeq	r2, r0, r0, ror r3
    5504:	00001e00 	andeq	r1, r0, r0, lsl #28
    5508:	05760000 	ldrbeq	r0, [r6, #-0]!
    550c:	184d0000 	stmdane	sp, {}^	; <UNPREDICTABLE>
    5510:	011f0000 	tsteq	pc, r0
    5514:	00740250 	rsbseq	r0, r4, r0, asr r2
    5518:	00002000 	andeq	r2, r0, r0
    551c:	237f0000 	cmncs	pc, #0
    5520:	011f0000 	tsteq	pc, r0
    5524:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    5528:	1d000000 	stcne	0, cr0, [r0, #-0]
    552c:	00000000 	andeq	r0, r0, r0
    5530:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5534:	00000020 	andeq	r0, r0, r0, lsr #32
    5538:	00240000 	eoreq	r0, r4, r0
    553c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5540:	00007502 	andeq	r7, r0, r2, lsl #10
    5544:	51012100 	mrspl	r2, (UNDEF: 17)
    5548:	0100000b 	tsteq	r0, fp
    554c:	010c0485 	smlabbeq	ip, r5, r4, r0
    5550:	000000f3 	strdeq	r0, [r0], -r3
	...
    555c:	000047a3 	andeq	r4, r0, r3, lsr #15
    5560:	0019ee01 	andseq	lr, r9, r1, lsl #28
    5564:	121d1900 	andsne	r1, sp, #0, 18
    5568:	85010000 	strhi	r0, [r1, #-0]
    556c:	03d23404 	bicseq	r3, r2, #4, 8	; 0x4000000
    5570:	47f10000 	ldrbmi	r0, [r1, r0]!
    5574:	47c30000 	strbmi	r0, [r3, r0]
    5578:	9e190000 	cdpls	0, 1, cr0, cr9, cr0, {0}
    557c:	01000011 	tsteq	r0, r1, lsl r0
    5580:	ba390486 	blt	e467a0 <__RAM_SIZE+0xd467a0>
    5584:	1b000000 	blne	558c <__HEAP_SIZE+0x458c>
    5588:	17000049 	strne	r0, [r0, -r9, asr #32]
    558c:	19000049 	stmdbne	r0, {r0, r3, r6}
    5590:	00000af1 	strdeq	r0, [r0], -r1
    5594:	39048701 	stmdbcc	r4, {r0, r8, r9, sl, pc}
    5598:	000010f7 	strdeq	r1, [r0], -r7
    559c:	0000493d 	andeq	r4, r0, sp, lsr r9
    55a0:	00004939 	andeq	r4, r0, r9, lsr r9
    55a4:	000bf719 	andeq	pc, fp, r9, lsl r7	; <UNPREDICTABLE>
    55a8:	04880100 	streq	r0, [r8], #256	; 0x100
    55ac:	0000ff37 	andeq	pc, r0, r7, lsr pc	; <UNPREDICTABLE>
    55b0:	00495f00 	subeq	r5, r9, r0, lsl #30
    55b4:	00495b00 	subeq	r5, r9, r0, lsl #22
    55b8:	1a191a00 	bne	64bdc0 <__RAM_SIZE+0x54bdc0>
    55bc:	8a010000 	bhi	455c4 <__HEAP_SIZE+0x445c4>
    55c0:	00f31004 	rscseq	r1, r3, r4
    55c4:	497f0000 	ldmdbmi	pc!, {}^	; <UNPREDICTABLE>
    55c8:	497d0000 	ldmdbmi	sp!, {}^	; <UNPREDICTABLE>
    55cc:	261a0000 	ldrcs	r0, [sl], -r0
    55d0:	0100000c 	tsteq	r0, ip
    55d4:	0411048b 	ldreq	r0, [r1], #-1163	; 0xfffffb75
    55d8:	9a000001 	bls	55e4 <__HEAP_SIZE+0x45e4>
    55dc:	92000049 	andls	r0, r0, #73	; 0x49
    55e0:	1a000049 	bne	570c <__HEAP_SIZE+0x470c>
    55e4:	0000121c 	andeq	r1, r0, ip, lsl r2
    55e8:	15048c01 	strne	r8, [r4, #-3073]	; 0xfffff3ff
    55ec:	0000065c 	andeq	r0, r0, ip, asr r6
    55f0:	000049fc 	strdeq	r4, [r0], -ip
    55f4:	000049ce 	andeq	r4, r0, lr, asr #19
    55f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	0019d400 	andseq	sp, r9, r0, lsl #8
    5604:	0bbc1a00 	bleq	fef0be0c <__StackTop+0xc6e0be0c>
    5608:	b0010000 	andlt	r0, r1, r0
    560c:	00d11a04 	sbcseq	r1, r1, r4, lsl #20
    5610:	4b280000 	blmi	a05618 <__RAM_SIZE+0x905618>
    5614:	4b220000 	blmi	88561c <__RAM_SIZE+0x78561c>
    5618:	991a0000 	ldmdbls	sl, {}	; <UNPREDICTABLE>
    561c:	0100000e 	tsteq	r0, lr
    5620:	151f04b1 	ldrne	r0, [pc, #-1201]	; 5177 <__HEAP_SIZE+0x4177>
    5624:	55000001 	strpl	r0, [r0, #-1]
    5628:	5300004b 	movwpl	r0, #75	; 0x4b
    562c:	1c00004b 	stcne	0, cr0, [r0], {75}	; 0x4b
	...
    5638:	0000198f 	andeq	r1, r0, pc, lsl #19
    563c:	00110a1a 	andseq	r0, r1, sl, lsl sl
    5640:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    5644:	00011511 	andeq	r1, r1, r1, lsl r5
    5648:	004b6c00 	subeq	r6, fp, r0, lsl #24
    564c:	004b6800 	subeq	r6, fp, r0, lsl #16
    5650:	00001d00 	andeq	r1, r0, r0, lsl #26
    5654:	23700000 	cmncs	r0, #0
    5658:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    565c:	00000000 	andeq	r0, r0, r0
    5660:	00000bfe 	strdeq	r0, [r0], -lr
    5664:	000019af 	andeq	r1, r0, pc, lsr #19
    5668:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    566c:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    5670:	00770251 	rsbseq	r0, r7, r1, asr r2
    5674:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    5678:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    567c:	00000000 	andeq	r0, r0, r0
    5680:	00000576 	andeq	r0, r0, r6, ror r5
    5684:	000019c3 	andeq	r1, r0, r3, asr #19
    5688:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    568c:	20000074 	andcs	r0, r0, r4, ror r0
    5690:	00000000 	andeq	r0, r0, r0
    5694:	0000237f 	andeq	r2, r0, pc, ror r3
    5698:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    569c:	00002c74 	andeq	r2, r0, r4, ror ip
    56a0:	0000001d 	andeq	r0, r0, sp, lsl r0
    56a4:	0023f200 	eoreq	pc, r3, r0, lsl #4
    56a8:	00002000 	andeq	r2, r0, r0
    56ac:	24000000 	strcs	r0, [r0], #-0
    56b0:	011f0000 	tsteq	pc, r0
    56b4:	00760250 	rsbseq	r0, r6, r0, asr r2
    56b8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    56bc:	00000df2 	strdeq	r0, [r0], -r2
    56c0:	0c03ab01 			; <UNDEFINED> instruction: 0x0c03ab01
    56c4:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    56d0:	004b8a00 	subeq	r8, fp, r0, lsl #20
    56d4:	1c290100 	stfnes	f0, [r9], #-0
    56d8:	1d190000 	ldcne	0, cr0, [r9, #-0]
    56dc:	01000012 	tsteq	r0, r2, lsl r0
    56e0:	d22d03ab 	eorle	r0, sp, #-1409286142	; 0xac000002
    56e4:	d2000003 	andle	r0, r0, #3
    56e8:	ce00004b 	cdpgt	0, 0, cr0, cr0, cr11, {2}
    56ec:	1900004b 	stmdbne	r0, {r0, r1, r3, r6}
    56f0:	0000119e 	muleq	r0, lr, r1
    56f4:	3203ac01 	andcc	sl, r3, #256	; 0x100
    56f8:	000000ba 	strheq	r0, [r0], -sl
    56fc:	00004bf4 	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    5700:	00004bf0 	strdeq	r4, [r0], -r0
    5704:	0020e119 	eoreq	lr, r0, r9, lsl r1
    5708:	03ad0100 			; <UNDEFINED> instruction: 0x03ad0100
    570c:	00011a2a 	andeq	r1, r1, sl, lsr #20
    5710:	004c1400 	subeq	r1, ip, r0, lsl #8
    5714:	004c1200 	subeq	r1, ip, r0, lsl #4
    5718:	0bf71900 	bleq	ffdcbb20 <__StackTop+0xc7ccbb20>
    571c:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    5720:	00ff3003 	rscseq	r3, pc, r3
    5724:	4c2b0000 	stcmi	0, cr0, [fp], #-0
    5728:	4c270000 	stcmi	0, cr0, [r7], #-0
    572c:	371a0000 	ldrcc	r0, [sl, -r0]
    5730:	0100000d 	tsteq	r0, sp
    5734:	f31003b0 	vcge.u16	d0, d16, d16
    5738:	53000000 	movwpl	r0, #0
    573c:	4900004c 	stmdbmi	r0, {r2, r3, r6}
    5740:	1a00004c 	bne	5878 <__HEAP_SIZE+0x4878>
    5744:	00000c5f 	andeq	r0, r0, pc, asr ip
    5748:	2903b001 	stmdbcs	r3, {r0, ip, sp, pc}
    574c:	000000f3 	strdeq	r0, [r0], -r3
    5750:	00004c9a 	muleq	r0, sl, ip
    5754:	00004c94 	muleq	r0, r4, ip
    5758:	001c6522 	andseq	r6, ip, r2, lsr #10
    575c:	03b10100 			; <UNDEFINED> instruction: 0x03b10100
    5760:	0003c60f 	andeq	ip, r3, pc, lsl #12
    5764:	60910200 	addsvs	r0, r1, r0, lsl #4
    5768:	00121c1a 	andseq	r1, r2, sl, lsl ip
    576c:	03b20100 			; <UNDEFINED> instruction: 0x03b20100
    5770:	00065c15 	andeq	r5, r6, r5, lsl ip
    5774:	004cc700 	subeq	ip, ip, r0, lsl #14
    5778:	004cc300 	subeq	ip, ip, r0, lsl #6
    577c:	02d02800 	sbcseq	r2, r0, #0, 16
    5780:	1b330000 	blne	cc5788 <__RAM_SIZE+0xbc5788>
    5784:	991a0000 	ldmdbls	sl, {}	; <UNPREDICTABLE>
    5788:	0100000e 	tsteq	r0, lr
    578c:	152703cd 	strne	r0, [r7, #-973]!	; 0xfffffc33
    5790:	e9000001 	stmdb	r0, {r0}
    5794:	e500004c 	str	r0, [r0, #-76]	; 0xffffffb4
    5798:	1e00004c 	cdpne	0, 0, cr0, cr0, cr12, {2}
    579c:	00000000 	andeq	r0, r0, r0
    57a0:	00000bfe 	strdeq	r0, [r0], -lr
    57a4:	00001aef 	andeq	r1, r0, pc, ror #21
    57a8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    57ac:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    57b0:	00770251 	rsbseq	r0, r7, r1, asr r2
    57b4:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    57b8:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    57bc:	00000000 	andeq	r0, r0, r0
    57c0:	00000576 	andeq	r0, r0, r6, ror r5
    57c4:	00001b03 	andeq	r1, r0, r3, lsl #22
    57c8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    57cc:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    57d0:	00000000 	andeq	r0, r0, r0
    57d4:	0000240e 	andeq	r2, r0, lr, lsl #8
    57d8:	0000001d 	andeq	r0, r0, sp, lsl r0
    57dc:	00240e00 	eoreq	r0, r4, r0, lsl #28
    57e0:	00001e00 	andeq	r1, r0, r0, lsl #28
    57e4:	237f0000 	cmncs	pc, #0
    57e8:	1b290000 	blne	a457f0 <__RAM_SIZE+0x9457f0>
    57ec:	011f0000 	tsteq	pc, r0
    57f0:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    57f4:	00001d00 	andeq	r1, r0, r0, lsl #26
    57f8:	240e0000 	strcs	r0, [lr], #-0
    57fc:	1d000000 	stcne	0, cr0, [r0, #-0]
    5800:	00000000 	andeq	r0, r0, r0
    5804:	0000239c 	muleq	r0, ip, r3
    5808:	0000001d 	andeq	r0, r0, sp, lsl r0
    580c:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5810:	00001e00 	andeq	r1, r0, r0, lsl #28
    5814:	241c0000 	ldrcs	r0, [ip], #-0
    5818:	1b590000 	blne	1645820 <__RAM_SIZE+0x1545820>
    581c:	011f0000 	tsteq	pc, r0
    5820:	60910250 	addsvs	r0, r1, r0, asr r2
    5824:	00001e00 	andeq	r1, r0, r0, lsl #28
    5828:	0abd0000 	beq	fef45830 <__StackTop+0xc6e45830>
    582c:	1b6d0000 	blne	1b45834 <__RAM_SIZE+0x1a45834>
    5830:	011f0000 	tsteq	pc, r0
    5834:	00740250 	rsbseq	r0, r4, r0, asr r2
    5838:	00001d00 	andeq	r1, r0, r0, lsl #26
    583c:	242b0000 	strtcs	r0, [fp], #-0
    5840:	001d0000 	andseq	r0, sp, r0
    5844:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5848:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    584c:	00000000 	andeq	r0, r0, r0
    5850:	0000239c 	muleq	r0, ip, r3
    5854:	0000001d 	andeq	r0, r0, sp, lsl r0
    5858:	00243a00 	eoreq	r3, r4, r0, lsl #20
    585c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5860:	238e0000 	orrcs	r0, lr, #0
    5864:	001d0000 	andseq	r0, sp, r0
    5868:	9c000000 	stcls	0, cr0, [r0], {-0}
    586c:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5870:	00000000 	andeq	r0, r0, r0
    5874:	00002449 	andeq	r2, r0, r9, asr #8
    5878:	00001bbd 			; <UNDEFINED> instruction: 0x00001bbd
    587c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5880:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
    5884:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    5888:	00001e00 	andeq	r1, r0, r0, lsl #28
    588c:	09ad0000 	stmibeq	sp!, {}	; <UNPREDICTABLE>
    5890:	1bd10000 	blne	ff445898 <__StackTop+0xc7345898>
    5894:	011f0000 	tsteq	pc, r0
    5898:	00740250 	rsbseq	r0, r4, r0, asr r2
    589c:	00001e00 	andeq	r1, r0, r0, lsl #28
    58a0:	24580000 	ldrbcs	r0, [r8], #-0
    58a4:	1be50000 	blne	ff9458ac <__StackTop+0xc78458ac>
    58a8:	011f0000 	tsteq	pc, r0
    58ac:	10740250 	rsbsne	r0, r4, r0, asr r2
    58b0:	00001e00 	andeq	r1, r0, r0, lsl #28
    58b4:	0abd0000 	beq	fef458bc <__StackTop+0xc6e458bc>
    58b8:	1bf90000 	blne	ffe458c0 <__StackTop+0xc7d458c0>
    58bc:	011f0000 	tsteq	pc, r0
    58c0:	00740250 	rsbseq	r0, r4, r0, asr r2
    58c4:	00001d00 	andeq	r1, r0, r0, lsl #26
    58c8:	242b0000 	strtcs	r0, [fp], #-0
    58cc:	001d0000 	andseq	r0, sp, r0
    58d0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    58d4:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    58d8:	00000000 	andeq	r0, r0, r0
    58dc:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    58e0:	00001c1f 	andeq	r1, r0, pc, lsl ip
    58e4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    58e8:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    58ec:	00000000 	andeq	r0, r0, r0
    58f0:	0000242b 	andeq	r2, r0, fp, lsr #8
    58f4:	ea012100 	b	4dcfc <__HEAP_SIZE+0x4ccfc>
    58f8:	01000013 	tsteq	r0, r3, lsl r0
    58fc:	01130386 	tsteq	r3, r6, lsl #7
    5900:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    590c:	00004d07 	andeq	r4, r0, r7, lsl #26
    5910:	001ca401 	andseq	sl, ip, r1, lsl #8
    5914:	10081900 	andne	r1, r8, r0, lsl #18
    5918:	86010000 	strhi	r0, [r1], -r0
    591c:	01154403 	tsteq	r5, r3, lsl #8
    5920:	4d4b0000 	stclmi	0, cr0, [fp, #-0]
    5924:	4d3f0000 	ldcmi	0, cr0, [pc, #-0]	; 592c <__HEAP_SIZE+0x492c>
    5928:	64190000 	ldrvs	r0, [r9], #-0
    592c:	0100000d 	tsteq	r0, sp
    5930:	15440387 	strbne	r0, [r4, #-903]	; 0xfffffc79
    5934:	a6000001 	strge	r0, [r0], -r1
    5938:	9e00004d 	cdpls	0, 0, cr0, cr0, cr13, {2}
    593c:	1a00004d 	bne	5a78 <__HEAP_SIZE+0x4a78>
    5940:	00000d45 	andeq	r0, r0, r5, asr #26
    5944:	17038901 	strne	r8, [r3, -r1, lsl #18]
    5948:	000003d2 	ldrdeq	r0, [r0], -r2
    594c:	00004de0 	andeq	r4, r0, r0, ror #27
    5950:	00004dda 	ldrdeq	r4, [r0], -sl
    5954:	00000020 	andeq	r0, r0, r0, lsr #32
    5958:	00207e00 	eoreq	r7, r0, r0, lsl #28
    595c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5960:	5001f303 	andpl	pc, r1, r3, lsl #6
    5964:	0151011f 	cmpeq	r1, pc, lsl r1
    5968:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    596c:	00003201 	andeq	r3, r0, r1, lsl #4
    5970:	10610121 	rsbne	r0, r1, r1, lsr #2
    5974:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    5978:	d2011303 	andle	r1, r1, #201326592	; 0xc000000
    597c:	00000003 	andeq	r0, r0, r3
    5980:	00000000 	andeq	r0, r0, r0
    5984:	0b000000 	bleq	598c <__HEAP_SIZE+0x498c>
    5988:	0100004e 	tsteq	r0, lr, asr #32
    598c:	00001d41 	andeq	r1, r0, r1, asr #26
    5990:	00100819 	andseq	r0, r0, r9, lsl r8
    5994:	035e0100 	cmpeq	lr, #0, 2
    5998:	0001154a 	andeq	r1, r1, sl, asr #10
    599c:	004e6700 	subeq	r6, lr, r0, lsl #14
    59a0:	004e5b00 	subeq	r5, lr, r0, lsl #22
    59a4:	0d641900 			; <UNDEFINED> instruction: 0x0d641900
    59a8:	5f010000 	svcpl	0x00010000
    59ac:	01154a03 	tsteq	r5, r3, lsl #20
    59b0:	4ec20000 	cdpmi	0, 12, cr0, cr2, cr0, {0}
    59b4:	4eba0000 	cdpmi	0, 11, cr0, cr10, cr0, {0}
    59b8:	57190000 	ldrpl	r0, [r9, -r0]
    59bc:	0100000f 	tsteq	r0, pc
    59c0:	41480360 	cmpmi	r8, r0, ror #6
    59c4:	0000001d 	andeq	r0, r0, sp, lsl r0
    59c8:	f600004f 			; <UNDEFINED> instruction: 0xf600004f
    59cc:	1a00004e 	bne	5b0c <__HEAP_SIZE+0x4b0c>
    59d0:	00000d45 	andeq	r0, r0, r5, asr #26
    59d4:	17036201 	strne	r6, [r3, -r1, lsl #4]
    59d8:	000003d2 	ldrdeq	r0, [r0], -r2
    59dc:	00004f4b 	andeq	r4, r0, fp, asr #30
    59e0:	00004f45 	andeq	r4, r0, r5, asr #30
    59e4:	00000020 	andeq	r0, r0, r0, lsr #32
    59e8:	0021e900 	eoreq	lr, r1, r0, lsl #18
    59ec:	50011f00 	andpl	r1, r1, r0, lsl #30
    59f0:	5001f303 	andpl	pc, r1, r3, lsl #6
    59f4:	0151011f 	cmpeq	r1, pc, lsl r1
    59f8:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    59fc:	011f3001 	tsteq	pc, r1
    5a00:	01f30353 	mvnseq	r0, r3, asr r3
    5a04:	7d021f52 	stcvc	15, cr1, [r2, #-328]	; 0xfffffeb8
    5a08:	00320100 	eorseq	r0, r2, r0, lsl #2
    5a0c:	ab040700 	blge	107614 <__RAM_SIZE+0x7614>
    5a10:	21000002 	tstcs	r0, r2
    5a14:	000b1d01 	andeq	r1, fp, r1, lsl #26
    5a18:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    5a1c:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    5a28:	4f760000 	svcmi	0x00760000
    5a2c:	db010000 	blle	45a34 <__HEAP_SIZE+0x44a34>
    5a30:	1900001d 	stmdbne	r0, {r0, r2, r3, r4}
    5a34:	00000b0c 	andeq	r0, r0, ip, lsl #22
    5a38:	38032f01 	stmdacc	r3, {r0, r8, r9, sl, fp, sp}
    5a3c:	000003d2 	ldrdeq	r0, [r0], -r2
    5a40:	00004f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    5a44:	00004f96 	muleq	r0, r6, pc	; <UNPREDICTABLE>
    5a48:	0020e119 	eoreq	lr, r0, r9, lsl r1
    5a4c:	03300100 	teqeq	r0, #0, 2
    5a50:	00011a35 	andeq	r1, r1, r5, lsr sl
    5a54:	004fbc00 	subeq	fp, pc, r0, lsl #24
    5a58:	004fb800 	subeq	fp, pc, r0, lsl #16
    5a5c:	1a191a00 	bne	64c264 <__RAM_SIZE+0x54c264>
    5a60:	32010000 	andcc	r0, r1, #0
    5a64:	00f31403 	rscseq	r1, r3, r3, lsl #8
    5a68:	4fde0000 	svcmi	0x00de0000
    5a6c:	4fda0000 	svcmi	0x00da0000
    5a70:	0b1a0000 	bleq	685a78 <__RAM_SIZE+0x585a78>
    5a74:	0100000b 	tsteq	r0, fp
    5a78:	5c190333 	ldcpl	3, cr0, [r9], {51}	; 0x33
    5a7c:	01000006 	tsteq	r0, r6
    5a80:	fd000050 	stc2	0, cr0, [r0, #-320]	; 0xfffffec0
    5a84:	1d00004f 	stcne	0, cr0, [r0, #-316]	; 0xfffffec4
    5a88:	00000000 	andeq	r0, r0, r0
    5a8c:	00002494 	muleq	r0, r4, r4
    5a90:	00000020 	andeq	r0, r0, r0, lsr #32
    5a94:	00130600 	andseq	r0, r3, r0, lsl #12
    5a98:	50011f00 	andpl	r1, r1, r0, lsl #30
    5a9c:	1f007402 	svcne	0x00007402
    5aa0:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    5aa4:	21000000 	mrscs	r0, (UNDEF: 0)
    5aa8:	00131201 	andseq	r1, r3, r1, lsl #4
    5aac:	02f40100 	rscseq	r0, r4, #0, 2
    5ab0:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    5abc:	501f0000 	andspl	r0, pc, r0
    5ac0:	54010000 	strpl	r0, [r1], #-0
    5ac4:	1900001e 	stmdbne	r0, {r1, r2, r3, r4}
    5ac8:	00000b0c 	andeq	r0, r0, ip, lsl #22
    5acc:	3802f401 	stmdacc	r2, {r0, sl, ip, sp, lr, pc}
    5ad0:	000003d2 	ldrdeq	r0, [r0], -r2
    5ad4:	00005043 	andeq	r5, r0, r3, asr #32
    5ad8:	0000503f 	andeq	r5, r0, pc, lsr r0
    5adc:	001a191a 	andseq	r1, sl, sl, lsl r9
    5ae0:	02f60100 	rscseq	r0, r6, #0, 2
    5ae4:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    5ae8:	00506300 	subseq	r6, r0, r0, lsl #6
    5aec:	00506100 	subseq	r6, r0, r0, lsl #2
    5af0:	0b0b1a00 	bleq	2cc2f8 <__RAM_SIZE+0x1cc2f8>
    5af4:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    5af8:	065c1902 	ldrbeq	r1, [ip], -r2, lsl #18
    5afc:	507b0000 	rsbspl	r0, fp, r0
    5b00:	50770000 	rsbspl	r0, r7, r0
    5b04:	001d0000 	andseq	r0, sp, r0
    5b08:	94000000 	strls	r0, [r0], #-0
    5b0c:	20000024 	andcs	r0, r0, r4, lsr #32
    5b10:	00000000 	andeq	r0, r0, r0
    5b14:	000019ee 	andeq	r1, r0, lr, ror #19
    5b18:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5b1c:	00000074 	andeq	r0, r0, r4, ror r0
    5b20:	0f650121 	svceq	0x00650121
    5b24:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    5b28:	d2011302 	andle	r1, r1, #134217728	; 0x8000000
    5b2c:	00000003 	andeq	r0, r0, r3
    5b30:	00000000 	andeq	r0, r0, r0
    5b34:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    5b38:	01000050 	qaddeq	r0, r0, r0
    5b3c:	00001f04 	andeq	r1, r0, r4, lsl #30
    5b40:	0010a519 	andseq	sl, r0, r9, lsl r5
    5b44:	02980100 	addseq	r0, r8, #0, 2
    5b48:	0000e23a 	andeq	lr, r0, sl, lsr r2
    5b4c:	0050d500 	subseq	sp, r0, r0, lsl #10
    5b50:	0050d100 	subseq	sp, r0, r0, lsl #2
    5b54:	0f571900 	svceq	0x00571900
    5b58:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    5b5c:	1d413c02 	stclne	12, cr3, [r1, #-8]
    5b60:	50fc0000 	rscspl	r0, ip, r0
    5b64:	50f60000 	rscspl	r0, r6, r0
    5b68:	6f1a0000 	svcvs	0x001a0000
    5b6c:	0100000c 	tsteq	r0, ip
    5b70:	d217029b 	andsle	r0, r7, #-1342177271	; 0xb0000009
    5b74:	2c000003 	stccs	0, cr0, [r0], {3}
    5b78:	28000051 	stmdacs	r0, {r0, r4, r6}
    5b7c:	25000051 	strcs	r0, [r0, #-81]	; 0xffffffaf
    5b80:	00000ecb 	andeq	r0, r0, fp, asr #29
    5b84:	1b029c01 	blne	acb90 <__HEAP_SIZE+0xabb90>
    5b88:	00000115 	andeq	r0, r0, r5, lsl r1
    5b8c:	0c532501 	cfldr64eq	mvdx2, [r3], {1}
    5b90:	9c010000 	stcls	0, cr0, [r1], {-0}
    5b94:	01153e02 	tsteq	r5, r2, lsl #28
    5b98:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5b9c:	00000000 	andeq	r0, r0, r0
    5ba0:	000021e9 	andeq	r2, r0, r9, ror #3
    5ba4:	00001ef3 	strdeq	r1, [r0], -r3
    5ba8:	0150011f 	cmpeq	r0, pc, lsl r1
    5bac:	51011f31 	tstpl	r1, r1, lsr pc
    5bb0:	011f3001 	tsteq	pc, r1
    5bb4:	1f300152 	svcne	0x00300152
    5bb8:	f3035301 	vcgt.u8	d5, d3, d1
    5bbc:	20005101 	andcs	r5, r0, r1, lsl #2
    5bc0:	00000000 	andeq	r0, r0, r0
    5bc4:	00001f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    5bc8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5bcc:	00000074 	andeq	r0, r0, r4, ror r0
    5bd0:	0fa40121 	svceq	0x00a40121
    5bd4:	84010000 	strhi	r0, [r1], #-0
    5bd8:	d2011302 	andle	r1, r1, #134217728	; 0x8000000
    5bdc:	00000003 	andeq	r0, r0, r3
    5be0:	00000000 	andeq	r0, r0, r0
    5be4:	4a000000 	bmi	5bec <__HEAP_SIZE+0x4bec>
    5be8:	01000051 	qaddeq	r0, r1, r0
    5bec:	00001f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    5bf0:	0010a519 	andseq	sl, r0, r9, lsl r5
    5bf4:	02840100 	addeq	r0, r4, #0, 2
    5bf8:	0000e234 	andeq	lr, r0, r4, lsr r2
    5bfc:	00516e00 	subseq	r6, r1, r0, lsl #28
    5c00:	00516a00 	subseq	r6, r1, r0, lsl #20
    5c04:	0c6f1a00 			; <UNDEFINED> instruction: 0x0c6f1a00
    5c08:	86010000 	strhi	r0, [r1], -r0
    5c0c:	03d21702 	bicseq	r1, r2, #524288	; 0x80000
    5c10:	51930000 	orrspl	r0, r3, r0
    5c14:	518f0000 	orrpl	r0, pc, r0
    5c18:	cb250000 	blgt	945c20 <__RAM_SIZE+0x845c20>
    5c1c:	0100000e 	tsteq	r0, lr
    5c20:	151b0287 	ldrne	r0, [fp, #-647]	; 0xfffffd79
    5c24:	01000001 	tsteq	r0, r1
    5c28:	000c5325 	andeq	r5, ip, r5, lsr #6
    5c2c:	02870100 	addeq	r0, r7, #0, 2
    5c30:	0001153e 	andeq	r1, r1, lr, lsr r5
    5c34:	001e0000 	andseq	r0, lr, r0
    5c38:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5c3c:	82000020 	andhi	r0, r0, #32
    5c40:	1f00001f 	svcne	0x0000001f
    5c44:	31015001 	tstcc	r1, r1
    5c48:	0151011f 	cmpeq	r1, pc, lsl r1
    5c4c:	00200030 	eoreq	r0, r0, r0, lsr r0
    5c50:	93000000 	movwls	r0, #0
    5c54:	1f00001f 	svcne	0x0000001f
    5c58:	74025001 	strvc	r5, [r2], #-1
    5c5c:	26000000 	strcs	r0, [r0], -r0
    5c60:	00000fc3 	andeq	r0, r0, r3, asr #31
    5c64:	11026601 	tstne	r2, r1, lsl #12
    5c68:	00000001 	andeq	r0, r0, r1
    5c6c:	00000000 	andeq	r0, r0, r0
    5c70:	0051b100 	subseq	fp, r1, r0, lsl #2
    5c74:	1fe40100 	svcne	0x00e40100
    5c78:	6e190000 	cdpvs	0, 1, cr0, cr9, cr0, {0}
    5c7c:	0100000c 	tsteq	r0, ip
    5c80:	562f0266 	strtpl	r0, [pc], -r6, ror #4
    5c84:	e3000006 	movw	r0, #6
    5c88:	dd000051 	stcle	0, cr0, [r0, #-324]	; 0xfffffebc
    5c8c:	20000051 	andcs	r0, r0, r1, asr r0
    5c90:	00000000 	andeq	r0, r0, r0
    5c94:	000019ee 	andeq	r1, r0, lr, ror #19
    5c98:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    5c9c:	1f5001f3 	svcne	0x005001f3
    5ca0:	30015101 	andcc	r5, r1, r1, lsl #2
    5ca4:	0152011f 	cmpeq	r2, pc, lsl r1
    5ca8:	53011f30 	movwpl	r1, #7984	; 0x1f30
    5cac:	00003001 	andeq	r3, r0, r1
    5cb0:	000c3d26 	andeq	r3, ip, r6, lsr #26
    5cb4:	02360100 	eorseq	r0, r6, #0, 2
    5cb8:	20d2010d 	sbcscs	r0, r2, sp, lsl #2
    5cbc:	20f21000 	rscscs	r1, r2, r0
    5cc0:	520f1000 	andpl	r1, pc, #0
    5cc4:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    5cc8:	19000020 	stmdbne	r0, {r5}
    5ccc:	000010d5 	ldrdeq	r1, [r0], -r5
    5cd0:	36023601 	strcc	r3, [r2], -r1, lsl #12
    5cd4:	00000115 	andeq	r0, r0, r5, lsl r1
    5cd8:	00005237 	andeq	r5, r0, r7, lsr r2
    5cdc:	0000522f 	andeq	r5, r0, pc, lsr #4
    5ce0:	000e7019 	andeq	r7, lr, r9, lsl r0
    5ce4:	02370100 	eorseq	r0, r7, #0, 2
    5ce8:	00011536 	andeq	r1, r1, r6, lsr r5
    5cec:	00527800 	subseq	r7, r2, r0, lsl #16
    5cf0:	00527000 	subseq	r7, r2, r0
    5cf4:	0d741900 			; <UNDEFINED> instruction: 0x0d741900
    5cf8:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    5cfc:	012b2e02 			; <UNDEFINED> instruction: 0x012b2e02
    5d00:	52b50000 	adcspl	r0, r5, #0
    5d04:	52af0000 	adcpl	r0, pc, #0
    5d08:	a5190000 	ldrge	r0, [r9, #-0]
    5d0c:	01000010 	tsteq	r0, r0, lsl r0
    5d10:	e2320239 	eors	r0, r2, #-1879048189	; 0x90000003
    5d14:	e5000000 	str	r0, [r0, #-0]
    5d18:	e1000052 	qadd	r0, r2, r0
    5d1c:	19000052 	stmdbne	r0, {r1, r4, r6}
    5d20:	00000c6e 	andeq	r0, r0, lr, ror #24
    5d24:	2e023a01 	vmlacs.f32	s6, s4, s2
    5d28:	00000656 	andeq	r0, r0, r6, asr r6
    5d2c:	0000530a 	andeq	r5, r0, sl, lsl #6
    5d30:	00005306 	andeq	r5, r0, r6, lsl #6
    5d34:	0020e820 	eoreq	lr, r0, r0, lsr #16
    5d38:	0022a810 	eoreq	sl, r2, r0, lsl r8
    5d3c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5d40:	1f007402 	svcne	0x00007402
    5d44:	31015101 	tstcc	r1, r1, lsl #2
    5d48:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5d4c:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    5d50:	1301f601 	movwne	pc, #5633	; 0x1601	; <UNPREDICTABLE>
    5d54:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5d60:	00532a00 	subseq	r2, r3, r0, lsl #20
    5d64:	21600100 	cmncs	r0, r0, lsl #2
    5d68:	d5190000 	ldrle	r0, [r9, #-0]
    5d6c:	01000010 	tsteq	r0, r0, lsl r0
    5d70:	153a01f6 	ldrne	r0, [sl, #-502]!	; 0xfffffe0a
    5d74:	7a000001 	bvc	5d80 <__HEAP_SIZE+0x4d80>
    5d78:	6e000053 	mcrvs	0, 0, r0, cr0, cr3, {2}
    5d7c:	19000053 	stmdbne	r0, {r0, r1, r4, r6}
    5d80:	00000e70 	andeq	r0, r0, r0, ror lr
    5d84:	3a01f701 	bcc	83990 <__HEAP_SIZE+0x82990>
    5d88:	00000115 	andeq	r0, r0, r5, lsl r1
    5d8c:	000053d1 	ldrdeq	r5, [r0], -r1
    5d90:	000053c7 	andeq	r5, r0, r7, asr #7
    5d94:	0010a519 	andseq	sl, r0, r9, lsl r5
    5d98:	01f80100 	mvnseq	r0, r0, lsl #2
    5d9c:	0000e236 	andeq	lr, r0, r6, lsr r2
    5da0:	00541b00 	subseq	r1, r4, r0, lsl #22
    5da4:	00541300 	subseq	r1, r4, r0, lsl #6
    5da8:	0c6e1a00 			; <UNDEFINED> instruction: 0x0c6e1a00
    5dac:	fa010000 	blx	45db4 <__HEAP_SIZE+0x44db4>
    5db0:	06561301 	ldrbeq	r1, [r6], -r1, lsl #6
    5db4:	545f0000 	ldrbpl	r0, [pc], #-0	; 5dbc <__HEAP_SIZE+0x4dbc>
    5db8:	54550000 	ldrbpl	r0, [r5], #-0
    5dbc:	651a0000 	ldrvs	r0, [sl, #-0]
    5dc0:	01000011 	tsteq	r0, r1, lsl r0
    5dc4:	291001fb 	ldmdbcs	r0, {r0, r1, r3, r4, r5, r6, r7, r8}
    5dc8:	a7000000 	strge	r0, [r0, -r0]
    5dcc:	a1000054 	qaddge	r0, r4, r0
    5dd0:	1a000054 	bne	5f28 <__HEAP_SIZE+0x4f28>
    5dd4:	00000d74 	andeq	r0, r0, r4, ror sp
    5dd8:	1301fc01 	movwne	pc, #7169	; 0x1c01	; <UNPREDICTABLE>
    5ddc:	0000012b 	andeq	r0, r0, fp, lsr #2
    5de0:	000054e0 	andeq	r5, r0, r0, ror #9
    5de4:	000054d8 	ldrdeq	r5, [r0], -r8
    5de8:	0000001e 	andeq	r0, r0, lr, lsl r0
    5dec:	0024a300 	eoreq	sl, r4, r0, lsl #6
    5df0:	00213500 	eoreq	r3, r1, r0, lsl #10
    5df4:	50011f00 	andpl	r1, r1, r0, lsl #30
    5df8:	76007407 	strvc	r7, [r0], -r7, lsl #8
    5dfc:	5c231e00 	stcpl	14, cr1, [r3], #-0
    5e00:	00002000 	andeq	r2, r0, r0
    5e04:	1fe40000 	svcne	0x00e40000
    5e08:	011f0000 	tsteq	pc, r0
    5e0c:	00760250 	rsbseq	r0, r6, r0, asr r2
    5e10:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5e14:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    5e18:	dc750352 	ldclle	3, cr0, [r5], #-328	; 0xfffffeb8
    5e1c:	53011f00 	movwpl	r1, #7936	; 0x1f00
    5e20:	1f007702 	svcne	0x00007702
    5e24:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    5e28:	00000075 	andeq	r0, r0, r5, ror r0
    5e2c:	0a990124 	beq	fe6462c4 <__StackTop+0xc65462c4>
    5e30:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    5e34:	f3011001 	vhadd.u8	d1, d1, d1
	...
    5e40:	02000000 	andeq	r0, r0, #0
    5e44:	dd01007d 	stcle	0, cr0, [r1, #-500]	; 0xfffffe0c
    5e48:	19000021 	stmdbne	r0, {r0, r5}
    5e4c:	0000121d 	andeq	r1, r0, sp, lsl r2
    5e50:	3d01be01 	stccc	14, cr11, [r1, #-4]
    5e54:	000003d2 	ldrdeq	r0, [r0], -r2
    5e58:	00005522 	andeq	r5, r0, r2, lsr #10
    5e5c:	0000551a 	andeq	r5, r0, sl, lsl r5
    5e60:	000d732a 	andeq	r7, sp, sl, lsr #6
    5e64:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
    5e68:	0021dd3a 	eoreq	sp, r1, sl, lsr sp
    5e6c:	2a510100 	bcs	1446274 <__RAM_SIZE+0x1346274>
    5e70:	00000f56 	andeq	r0, r0, r6, asr pc
    5e74:	4001c001 	andmi	ip, r1, r1
    5e78:	000021e3 	andeq	r2, r0, r3, ror #3
    5e7c:	191a5201 	ldmdbne	sl, {r0, r9, ip, lr}
    5e80:	0100001a 	tsteq	r0, sl, lsl r0
    5e84:	f31401c2 	vrhadd.u16	q0, q10, q1
    5e88:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    5e8c:	5a000055 	bpl	5fe8 <__HEAP_SIZE+0x4fe8>
    5e90:	1a000055 	bne	5fec <__HEAP_SIZE+0x4fec>
    5e94:	0000121c 	andeq	r1, r0, ip, lsl r2
    5e98:	1901c301 	stmdbne	r1, {r0, r8, r9, lr, pc}
    5e9c:	0000065c 	andeq	r0, r0, ip, asr r6
    5ea0:	00005586 	andeq	r5, r0, r6, lsl #11
    5ea4:	0000557e 	andeq	r5, r0, lr, ror r5
    5ea8:	2b040700 	blcs	107ab0 <__RAM_SIZE+0x7ab0>
    5eac:	07000001 	streq	r0, [r0, -r1]
    5eb0:	001d4104 	andseq	r4, sp, r4, lsl #2
    5eb4:	02012100 	andeq	r2, r1, #0, 2
    5eb8:	01000012 	tsteq	r0, r2, lsl r0
    5ebc:	01130178 	tsteq	r3, r8, ror r1
    5ec0:	000003d2 	ldrdeq	r0, [r0], -r2
    5ec4:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5ec8:	10002130 	andne	r2, r0, r0, lsr r1
    5ecc:	000055be 			; <UNDEFINED> instruction: 0x000055be
    5ed0:	0022a801 	eoreq	sl, r2, r1, lsl #16
    5ed4:	10d51900 	sbcsne	r1, r5, r0, lsl #18
    5ed8:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    5edc:	01154001 	tsteq	r5, r1
    5ee0:	56300000 	ldrtpl	r0, [r0], -r0
    5ee4:	561a0000 	ldrpl	r0, [sl], -r0
    5ee8:	70190000 	andsvc	r0, r9, r0
    5eec:	0100000e 	tsteq	r0, lr
    5ef0:	15400179 	strbne	r0, [r0, #-377]	; 0xfffffe87
    5ef4:	bd000001 	stclt	0, cr0, [r0, #-4]
    5ef8:	b7000056 	smlsdlt	r0, r6, r0, r0
    5efc:	19000056 	stmdbne	r0, {r1, r2, r4, r6}
    5f00:	00000d74 	andeq	r0, r0, r4, ror sp
    5f04:	38017a01 	stmdacc	r1, {r0, r9, fp, ip, sp, lr}
    5f08:	0000012b 	andeq	r0, r0, fp, lsr #2
    5f0c:	000056ef 	andeq	r5, r0, pc, ror #13
    5f10:	000056e9 	andeq	r5, r0, r9, ror #13
    5f14:	000f5719 	andeq	r5, pc, r9, lsl r7	; <UNPREDICTABLE>
    5f18:	017b0100 	cmneq	fp, r0, lsl #2
    5f1c:	001d413e 	andseq	r4, sp, lr, lsr r1
    5f20:	00572100 	subseq	r2, r7, r0, lsl #2
    5f24:	00571b00 	subseq	r1, r7, r0, lsl #22
    5f28:	10a51900 	adcne	r1, r5, r0, lsl #18
    5f2c:	7c010000 	stcvc	0, cr0, [r1], {-0}
    5f30:	00e23c01 	rsceq	r3, r2, r1, lsl #24
    5f34:	574e0000 	strbpl	r0, [lr, -r0]
    5f38:	574a0000 	strbpl	r0, [sl, -r0]
    5f3c:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
    5f40:	0100000c 	tsteq	r0, ip
    5f44:	5613017e 			; <UNDEFINED> instruction: 0x5613017e
    5f48:	7a000006 	bvc	5f68 <__HEAP_SIZE+0x4f68>
    5f4c:	6e000057 	mcrvs	0, 0, r0, cr0, cr7, {2}
    5f50:	20000057 	andcs	r0, r0, r7, asr r0
    5f54:	10002116 	andne	r2, r0, r6, lsl r1
    5f58:	00001fe4 	andeq	r1, r0, r4, ror #31
    5f5c:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    5f60:	1f5001f3 	svcne	0x005001f3
    5f64:	91045301 	tstls	r4, r1, lsl #6
    5f68:	1f019400 	svcne	0x00019400
    5f6c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    5f70:	00000074 	andeq	r0, r0, r4, ror r0
    5f74:	133a0121 	teqne	sl, #1073741832	; 0x40000008
    5f78:	2f010000 	svccs	0x00010000
    5f7c:	f3010c01 			; <UNDEFINED> instruction: 0xf3010c01
    5f80:	4c000000 	stcmi	0, cr0, [r0], {-0}
    5f84:	d2100020 	andsle	r0, r0, #32
    5f88:	c7100020 	ldrgt	r0, [r0, -r0, lsr #32]
    5f8c:	01000057 	qaddeq	r0, r7, r0
    5f90:	00002370 	andeq	r2, r0, r0, ror r3
    5f94:	00121d19 	andseq	r1, r2, r9, lsl sp
    5f98:	012f0100 			; <UNDEFINED> instruction: 0x012f0100
    5f9c:	0003d22e 	andeq	sp, r3, lr, lsr #4
    5fa0:	00580f00 	subseq	r0, r8, r0, lsl #30
    5fa4:	0057ff00 	subseq	pc, r7, r0, lsl #30
    5fa8:	0c6f1900 			; <UNDEFINED> instruction: 0x0c6f1900
    5fac:	30010000 	andcc	r0, r1, r0
    5fb0:	00f32b01 	rscseq	r2, r3, r1, lsl #22
    5fb4:	587a0000 	ldmdapl	sl!, {}^	; <UNPREDICTABLE>
    5fb8:	58720000 	ldmdapl	r2!, {}^	; <UNPREDICTABLE>
    5fbc:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    5fc0:	0100001a 	tsteq	r0, sl, lsl r0
    5fc4:	f3100132 	vbsl	d0, d0, d18
    5fc8:	b4000000 	strlt	r0, [r0], #-0
    5fcc:	ae000058 	mcrge	0, 0, r0, cr0, cr8, {2}
    5fd0:	1a000058 	bne	6138 <__HEAP_SIZE+0x5138>
    5fd4:	0000121c 	andeq	r1, r0, ip, lsl r2
    5fd8:	15013301 	strne	r3, [r1, #-769]	; 0xfffffcff
    5fdc:	0000065c 	andeq	r0, r0, ip, asr r6
    5fe0:	000058f0 	strdeq	r5, [r0], -r0
    5fe4:	000058e0 	andeq	r5, r0, r0, ror #17
    5fe8:	0020741d 	eoreq	r7, r0, sp, lsl r4
    5fec:	00238e10 	eoreq	r8, r3, r0, lsl lr
    5ff0:	20a21d00 	adccs	r1, r2, r0, lsl #26
    5ff4:	239c1000 	orrscs	r1, ip, #0
    5ff8:	ae1e0000 	cdpge	0, 1, cr0, cr14, cr0, {0}
    5ffc:	7f100020 	svcvc	0x00100020
    6000:	42000023 	andmi	r0, r0, #35	; 0x23
    6004:	1f000023 	svcne	0x00000023
    6008:	74025001 	strvc	r5, [r2], #-1
    600c:	b61d0010 			; <UNDEFINED> instruction: 0xb61d0010
    6010:	0e100020 	cdpeq	0, 1, cr0, cr0, cr0, {1}
    6014:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    6018:	100020c0 	andne	r2, r0, r0, asr #1
    601c:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    6020:	0000235f 	andeq	r2, r0, pc, asr r3
    6024:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    6028:	20001074 	andcs	r1, r0, r4, ror r0
    602c:	100020c8 	andne	r2, r0, r8, asr #1
    6030:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    6034:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    6038:	00002c74 	andeq	r2, r0, r4, ror ip
    603c:	0501012b 	streq	r0, [r1, #-299]	; 0xfffffed5
    6040:	0500000d 	streq	r0, [r0, #-13]
    6044:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    6048:	2b0d06c6 	blcs	347b68 <__RAM_SIZE+0x247b68>
    604c:	13c40101 	bicne	r0, r4, #1073741824	; 0x40000000
    6050:	13c40000 	bicne	r0, r4, #0
    6054:	e8080000 	stmda	r8, {}	; <UNPREDICTABLE>
    6058:	012c0c0d 			; <UNDEFINED> instruction: 0x012c0c0d
    605c:	000bd301 	andeq	sp, fp, r1, lsl #6
    6060:	000bd300 	andeq	sp, fp, r0, lsl #6
    6064:	0d710500 	cfldr64eq	mvdx0, [r1, #-0]
    6068:	4301012c 	movwmi	r0, #4396	; 0x112c
    606c:	4300000a 	movwmi	r0, #10
    6070:	0500000a 	streq	r0, [r0, #-10]
    6074:	012b0d72 			; <UNDEFINED> instruction: 0x012b0d72
    6078:	000f2001 	andeq	r2, pc, r1
    607c:	000f2000 	andeq	r2, pc, r0
    6080:	0dcc0800 	stcleq	8, cr0, [ip]
    6084:	01012b06 	tsteq	r1, r6, lsl #22
    6088:	00001236 	andeq	r1, r0, r6, lsr r2
    608c:	00001236 	andeq	r1, r0, r6, lsr r2
    6090:	060e0e08 	streq	r0, [lr], -r8, lsl #28
    6094:	f001012d 			; <UNDEFINED> instruction: 0xf001012d
    6098:	e600000b 	str	r0, [r0], -fp
    609c:	0b00000b 	bleq	60d0 <__HEAP_SIZE+0x50d0>
    60a0:	01012b00 	tsteq	r1, r0, lsl #22
    60a4:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    60a8:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    60ac:	0c0e2008 	stceq	0, cr2, [lr], {8}
    60b0:	c101012c 	tstgt	r1, ip, lsr #2
    60b4:	c1000011 	tstgt	r0, r1, lsl r0
    60b8:	0a000011 	beq	6104 <__HEAP_SIZE+0x5104>
    60bc:	012c06b8 			; <UNDEFINED> instruction: 0x012c06b8
    60c0:	000f7d01 	andeq	r7, pc, r1, lsl #26
    60c4:	000f7d00 	andeq	r7, pc, r0, lsl #26
    60c8:	11740500 	cmnne	r4, r0, lsl #10
    60cc:	8901012c 	stmdbhi	r1, {r2, r3, r5, r8}
    60d0:	8900000c 	stmdbhi	r0, {r2, r3}
    60d4:	0500000c 	streq	r0, [r0, #-12]
    60d8:	012c0d75 			; <UNDEFINED> instruction: 0x012c0d75
    60dc:	000a7e01 	andeq	r7, sl, r1, lsl #28
    60e0:	000a7e00 	andeq	r7, sl, r0, lsl #28
    60e4:	0d6f0500 	cfstr64eq	mvdx0, [pc, #-0]	; 60ec <__HEAP_SIZE+0x50ec>
    60e8:	2d01012b 	stfcss	f0, [r1, #-172]	; 0xffffff54
    60ec:	2d000010 	stccs	0, cr0, [r0, #-64]	; 0xffffffc0
    60f0:	08000010 	stmdaeq	r0, {r4}
    60f4:	2b060e65 	blcs	189a90 <__RAM_SIZE+0x89a90>
    60f8:	11770101 	cmnne	r7, r1, lsl #2
    60fc:	11770000 	cmnne	r7, r0
    6100:	93080000 	movwls	r0, #32768	; 0x8000
    6104:	012b0c06 			; <UNDEFINED> instruction: 0x012b0c06
    6108:	000d1c01 	andeq	r1, sp, r1, lsl #24
    610c:	000d1c00 	andeq	r1, sp, r0, lsl #24
    6110:	065b0800 	ldrbeq	r0, [fp], -r0, lsl #16
    6114:	01012b06 	tsteq	r1, r6, lsl #22
    6118:	000011ac 	andeq	r1, r0, ip, lsr #3
    611c:	000011ac 	andeq	r1, r0, ip, lsr #3
    6120:	0c0d5308 	stceq	3, cr5, [sp], {8}
    6124:	1a01012b 	bne	465d8 <__HEAP_SIZE+0x455d8>
    6128:	1a00000e 	bne	6168 <__HEAP_SIZE+0x5168>
    612c:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    6130:	2b060dbb 	blcs	189824 <__RAM_SIZE+0x89824>
    6134:	0e300101 	rsfeqs	f0, f0, f1
    6138:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
    613c:	5f080000 	svcpl	0x00080000
    6140:	012b0e0e 			; <UNDEFINED> instruction: 0x012b0e0e
    6144:	0012c501 	andseq	ip, r2, r1, lsl #10
    6148:	0012c500 	andseq	ip, r2, r0, lsl #10
    614c:	0e2a0800 	cdpeq	8, 2, cr0, cr10, cr0, {0}
    6150:	01012b06 	tsteq	r1, r6, lsl #22
    6154:	00001247 	andeq	r1, r0, r7, asr #4
    6158:	00001247 	andeq	r1, r0, r7, asr #4
    615c:	0c0e1a08 			; <UNDEFINED> instruction: 0x0c0e1a08
    6160:	f101012b 	setend	le
    6164:	f1000012 	cps	#18
    6168:	08000012 	stmdaeq	r0, {r1, r4}
    616c:	2c0e0e03 	stccs	14, cr0, [lr], {3}
    6170:	0cf80101 	ldfeqe	f0, [r8], #4
    6174:	0cf80000 	ldcleq	0, cr0, [r8]
    6178:	b50a0000 	strlt	r0, [sl, #-0]
    617c:	01012b08 	tsteq	r1, r8, lsl #22
    6180:	0000099b 	muleq	r0, fp, r9
    6184:	0000099b 	muleq	r0, fp, r9
    6188:	0601b907 	streq	fp, [r1], -r7, lsl #18
    618c:	0038f000 	eorseq	pc, r8, r0
    6190:	3d000200 	sfmcc	f0, 4, [r0, #-0]
    6194:	0400000f 	streq	r0, [r0], #-15
    6198:	00018901 	andeq	r8, r1, r1, lsl #18
    619c:	20be0c00 	adcscs	r0, lr, r0, lsl #24
    61a0:	03850000 	orreq	r0, r5, #0
    61a4:	07900000 	ldreq	r0, [r0, r0]
	...
    61b0:	3d9c0000 	ldccc	0, cr0, [ip]
    61b4:	04020000 	streq	r0, [r2], #-0
    61b8:	02000005 	andeq	r0, r0, #5
    61bc:	003a17d1 	ldrsbteq	r1, [sl], -r1
    61c0:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    61c4:	04000000 	streq	r0, [r0], #-0
    61c8:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    61cc:	04050000 	streq	r0, [r5], #-0
    61d0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    61d4:	05080400 	streq	r0, [r8, #-1024]	; 0xfffffc00
    61d8:	00000127 	andeq	r0, r0, r7, lsr #2
    61dc:	63040804 	movwvs	r0, #18436	; 0x4804
    61e0:	04000000 	streq	r0, [r0], #-0
    61e4:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    61e8:	7f020000 	svcvc	0x00020000
    61ec:	03000001 	movweq	r0, #1
    61f0:	0069182b 	rsbeq	r1, r9, fp, lsr #16
    61f4:	01040000 	mrseq	r0, (UNDEF: 4)
    61f8:	00027108 	andeq	r7, r2, r8, lsl #2
    61fc:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    6200:	00000032 	andeq	r0, r0, r2, lsr r0
    6204:	1a070204 	bne	1c6a1c <__RAM_SIZE+0xc6a1c>
    6208:	04000003 	streq	r0, [r0], #-3
    620c:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    6210:	6f020000 	svcvs	0x00020000
    6214:	03000000 	movweq	r0, #0
    6218:	0091194f 	addseq	r1, r1, pc, asr #18
    621c:	04040000 	streq	r0, [r4], #-0
    6220:	0002c207 	andeq	ip, r2, r7, lsl #4
    6224:	07080400 	streq	r0, [r8, -r0, lsl #8]
    6228:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    622c:	9f030406 	svcls	0x00030406
    6230:	07000000 	streq	r0, [r0, -r0]
    6234:	0000ac04 	andeq	sl, r0, r4, lsl #24
    6238:	08010400 	stmdaeq	r1, {sl}
    623c:	0000027a 	andeq	r0, r0, sl, ror r2
    6240:	0000ac03 	andeq	sl, r0, r3, lsl #24
    6244:	b3040700 	movwlt	r0, #18176	; 0x4700
    6248:	03000000 	movweq	r0, #0
    624c:	000000b8 	strheq	r0, [r0], -r8
    6250:	00018102 	andeq	r8, r1, r2, lsl #2
    6254:	13180400 	tstne	r8, #0, 8
    6258:	0000005d 	andeq	r0, r0, sp, asr r0
    625c:	0000c308 	andeq	ip, r0, r8, lsl #6
    6260:	00c30300 	sbceq	r0, r3, r0, lsl #6
    6264:	71020000 	mrsvc	r0, (UNDEF: 2)
    6268:	04000000 	streq	r0, [r0], #-0
    626c:	00851430 	addeq	r1, r5, r0, lsr r4
    6270:	d9080000 	stmdble	r8, {}	; <UNPREDICTABLE>
    6274:	02000000 	andeq	r0, r0, #0
    6278:	00001c38 	andeq	r1, r0, r8, lsr ip
    627c:	f6112405 			; <UNDEFINED> instruction: 0xf6112405
    6280:	07000000 	streq	r0, [r0, -r0]
    6284:	0000fc04 	andeq	pc, r0, r4, lsl #24
    6288:	08010900 	stmdaeq	r1, {r8, fp}
    628c:	0a000001 	beq	6298 <__HEAP_SIZE+0x5298>
    6290:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6294:	155f0200 	ldrbne	r0, [pc, #-512]	; 609c <__HEAP_SIZE+0x509c>
    6298:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
    629c:	0000d91a 	andeq	sp, r0, sl, lsl r9
    62a0:	01080800 	tsteq	r8, r0, lsl #16
    62a4:	c5020000 	strgt	r0, [r2, #-0]
    62a8:	06000009 	streq	r0, [r0], -r9
    62ac:	007e1a4a 	rsbseq	r1, lr, sl, asr #20
    62b0:	19080000 	stmdbne	r8, {}	; <UNPREDICTABLE>
    62b4:	03000001 	movweq	r0, #1
    62b8:	00000119 	andeq	r0, r0, r9, lsl r1
    62bc:	0009c402 	andeq	ip, r9, r2, lsl #8
    62c0:	1a4b0600 	bne	12c7ac8 <__RAM_SIZE+0x11c7ac8>
    62c4:	00000091 	muleq	r0, r1, r0
    62c8:	00012f08 	andeq	r2, r1, r8, lsl #30
    62cc:	013b0300 	teqeq	fp, r0, lsl #6
    62d0:	2f030000 	svccs	0x00030000
    62d4:	02000001 	andeq	r0, r0, #1
    62d8:	00000920 	andeq	r0, r0, r0, lsr #18
    62dc:	d91a5106 	ldmdble	sl, {r1, r2, r8, ip, lr}
    62e0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    62e4:	0000014a 	andeq	r0, r0, sl, asr #2
    62e8:	00014a03 	andeq	r4, r1, r3, lsl #20
    62ec:	c3040700 	movwgt	r0, #18176	; 0x4700
    62f0:	0b000000 	bleq	62f8 <__HEAP_SIZE+0x52f8>
    62f4:	00001224 	andeq	r1, r0, r4, lsr #4
    62f8:	0c0c0714 	stceq	7, cr0, [ip], {20}
    62fc:	00019508 	andeq	r9, r1, r8, lsl #10
    6300:	0dc50c00 	stcleq	12, cr0, [r5]
    6304:	11070000 	mrsne	r0, (UNDEF: 7)
    6308:	014a100c 	cmpeq	sl, ip
    630c:	23020000 	movwcs	r0, #8192	; 0x2000
    6310:	0dbb0c00 	ldceq	12, cr0, [fp]
    6314:	12070000 	andne	r0, r7, #0
    6318:	01950c0c 	orrseq	r0, r5, ip, lsl #24
    631c:	23020000 	movwcs	r0, #8192	; 0x2000
    6320:	9f0d0004 	svcls	0x000d0004
    6324:	a5000000 	strge	r0, [r0, #-0]
    6328:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    632c:	0000003a 	andeq	r0, r0, sl, lsr r0
    6330:	370f0003 	strcc	r0, [pc, -r3]
    6334:	07000019 	smladeq	r0, r9, r0, r0
    6338:	66220c17 			; <UNDEFINED> instruction: 0x66220c17
    633c:	0b000001 	bleq	6348 <__HEAP_SIZE+0x5348>
    6340:	00001f53 	andeq	r1, r0, r3, asr pc
    6344:	0c43074c 	mcrreq	7, 4, r0, r3, cr12
    6348:	00027110 	andeq	r7, r2, r0, lsl r1
    634c:	1ba60c00 	blne	fe989354 <__StackTop+0xc6889354>
    6350:	45070000 	strmi	r0, [r7, #-0]
    6354:	009f0c0c 	addseq	r0, pc, ip, lsl #24
    6358:	23020000 	movwcs	r0, #8192	; 0x2000
    635c:	12e90c00 	rscne	r0, r9, #0, 24
    6360:	4c070000 	stcmi	0, cr0, [r7], {-0}
    6364:	0271160c 	rsbseq	r1, r1, #12, 12	; 0xc00000
    6368:	23020000 	movwcs	r0, #8192	; 0x2000
    636c:	19bb0c04 	ldmibne	fp!, {r2, sl, fp}
    6370:	4d070000 	stcmi	0, cr0, [r7, #-0]
    6374:	012f110c 			; <UNDEFINED> instruction: 0x012f110c
    6378:	23020000 	movwcs	r0, #8192	; 0x2000
    637c:	1bb90c2c 	blne	fee49434 <__StackTop+0xc6d49434>
    6380:	4e070000 	cdpmi	0, 0, cr0, cr7, cr0, {0}
    6384:	009f0c0c 	addseq	r0, pc, ip, lsl #24
    6388:	23020000 	movwcs	r0, #8192	; 0x2000
    638c:	1daa0c30 	stcne	12, cr0, [sl, #192]!	; 0xc0
    6390:	53070000 	movwpl	r0, #28672	; 0x7000
    6394:	02810d0c 	addeq	r0, r1, #12, 26	; 0x300
    6398:	23020000 	movwcs	r0, #8192	; 0x2000
    639c:	14be0c34 	ldrtne	r0, [lr], #3124	; 0xc34
    63a0:	61070000 	mrsvs	r0, (UNDEF: 7)
    63a4:	0291150c 	addseq	r1, r1, #12, 10	; 0x3000000
    63a8:	23020000 	movwcs	r0, #8192	; 0x2000
    63ac:	1d5b0c38 	ldclne	12, cr0, [fp, #-224]	; 0xffffff20
    63b0:	64070000 	strvs	r0, [r7], #-0
    63b4:	009f100c 	addseq	r1, pc, ip
    63b8:	23020000 	movwcs	r0, #8192	; 0x2000
    63bc:	1f820c40 	svcne	0x00820c40
    63c0:	70070000 	andvc	r0, r7, r0
    63c4:	02a1120c 	adceq	r1, r1, #12, 4	; 0xc0000000
    63c8:	23020000 	movwcs	r0, #8192	; 0x2000
    63cc:	1baf0c44 	blne	febc94e4 <__StackTop+0xc6ac94e4>
    63d0:	71070000 	mrsvc	r0, (UNDEF: 7)
    63d4:	02b1110c 	adcseq	r1, r1, #12, 2
    63d8:	23020000 	movwcs	r0, #8192	; 0x2000
    63dc:	15dd0c48 	ldrbne	r0, [sp, #3144]	; 0xc48
    63e0:	74070000 	strvc	r0, [r7], #-0
    63e4:	00c3110c 	sbceq	r1, r3, ip, lsl #2
    63e8:	23020000 	movwcs	r0, #8192	; 0x2000
    63ec:	1c870c49 	stcne	12, cr0, [r7], {73}	; 0x49
    63f0:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
    63f4:	00c3110c 	sbceq	r1, r3, ip, lsl #2
    63f8:	23020000 	movwcs	r0, #8192	; 0x2000
    63fc:	a50d004a 	strge	r0, [sp, #-74]	; 0xffffffb6
    6400:	81000001 	tsthi	r0, r1
    6404:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6408:	0000003a 	andeq	r0, r0, sl, lsr r0
    640c:	c30d0001 	movwgt	r0, #53249	; 0xd001
    6410:	91000000 	mrsls	r0, (UNDEF: 0)
    6414:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6418:	0000003a 	andeq	r0, r0, sl, lsr r0
    641c:	2f0d0003 	svccs	0x000d0003
    6420:	a1000001 	tstge	r0, r1
    6424:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6428:	0000003a 	andeq	r0, r0, sl, lsr r0
    642c:	d90d0001 	stmdble	sp, {r0}
    6430:	b1000000 	mrslt	r0, (UNDEF: 0)
    6434:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6438:	0000003a 	andeq	r0, r0, sl, lsr r0
    643c:	c30d0000 	movwgt	r0, #53248	; 0xd000
    6440:	c1000000 	mrsgt	r0, (UNDEF: 0)
    6444:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6448:	0000003a 	andeq	r0, r0, sl, lsr r0
    644c:	080f0000 	stmdaeq	pc, {}	; <UNPREDICTABLE>
    6450:	07000014 	smladeq	r0, r4, r0, r0
    6454:	b2030c7d 	andlt	r0, r3, #32000	; 0x7d00
    6458:	10000001 	andne	r0, r0, r1
    645c:	00000947 	andeq	r0, r0, r7, asr #18
    6460:	08900814 	ldmeq	r0, {r2, r4, fp}
    6464:	00000327 	andeq	r0, r0, r7, lsr #6
    6468:	00092b11 	andeq	r2, r9, r1, lsl fp
    646c:	24930800 	ldrcs	r0, [r3], #2048	; 0x800
    6470:	0000014a 	andeq	r0, r0, sl, asr #2
    6474:	11002302 	tstne	r0, r2, lsl #6
    6478:	00000994 	muleq	r0, r4, r9
    647c:	272d9408 	strcs	r9, [sp, -r8, lsl #8]!
    6480:	02000003 	andeq	r0, r0, #3
    6484:	e3110423 	tst	r1, #587202560	; 0x23000000
    6488:	08000009 	stmdaeq	r0, {r0, r3}
    648c:	03272d95 			; <UNDEFINED> instruction: 0x03272d95
    6490:	23020000 	movwcs	r0, #8192	; 0x2000
    6494:	093f1108 	ldmdbeq	pc!, {r3, r8, ip}	; <UNPREDICTABLE>
    6498:	96080000 	strls	r0, [r8], -r0
    649c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    64a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    64a4:	00091411 	andeq	r1, r9, r1, lsl r4
    64a8:	28970800 	ldmcs	r7, {fp}
    64ac:	00000368 	andeq	r0, r0, r8, ror #6
    64b0:	00102302 	andseq	r2, r0, r2, lsl #6
    64b4:	02ce0407 	sbceq	r0, lr, #117440512	; 0x7000000
    64b8:	16100000 	ldrne	r0, [r0], -r0
    64bc:	1c00000a 	stcne	0, cr0, [r0], {10}
    64c0:	6810ac08 	ldmdavs	r0, {r3, sl, fp, sp, pc}
    64c4:	11000003 	tstne	r0, r3
    64c8:	00000975 	andeq	r0, r0, r5, ror r9
    64cc:	2f25af08 	svccs	0x0025af08
    64d0:	02000001 	andeq	r0, r0, #1
    64d4:	db110023 	blle	446568 <__RAM_SIZE+0x346568>
    64d8:	08000009 	stmdaeq	r0, {r0, r3}
    64dc:	038b26b0 	orreq	r2, fp, #176, 12	; 0xb000000
    64e0:	23020000 	movwcs	r0, #8192	; 0x2000
    64e4:	09361104 	ldmdbeq	r6!, {r2, r8, ip}
    64e8:	b1080000 	mrslt	r0, (UNDEF: 8)
    64ec:	00037f14 	andeq	r7, r3, r4, lsl pc
    64f0:	08230200 	stmdaeq	r3!, {r9}
    64f4:	2d040700 	stccs	7, cr0, [r4, #-0]
    64f8:	02000003 	andeq	r0, r0, #3
    64fc:	0000193d 	andeq	r1, r0, sp, lsr r9
    6500:	ce1b9a08 	vnmlsgt.f32	s18, s22, s16
    6504:	03000002 	movweq	r0, #2
    6508:	0000036e 	andeq	r0, r0, lr, ror #6
    650c:	000b7002 	andeq	r7, fp, r2
    6510:	24a60800 	strtcs	r0, [r6], #2048	; 0x800
    6514:	000002ce 	andeq	r0, r0, lr, asr #5
    6518:	036e0407 	cmneq	lr, #117440512	; 0x7000000
    651c:	8b030000 	blhi	c6524 <__HEAP_SIZE+0xc5524>
    6520:	02000003 	andeq	r0, r0, #3
    6524:	000013e3 	andeq	r1, r0, r3, ror #7
    6528:	2d03b308 	stccs	3, cr11, [r3, #-32]	; 0xffffffe0
    652c:	03000003 	movweq	r0, #3
    6530:	00000396 	muleq	r0, r6, r3
    6534:	0002ea02 	andeq	lr, r2, r2, lsl #20
    6538:	2e5c0900 	vnmlscs.f16	s1, s24, s0	; <UNPREDICTABLE>
    653c:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
    6540:	0003a703 	andeq	sl, r3, r3, lsl #14
    6544:	be040700 	cdplt	7, 0, cr0, cr4, cr0, {0}
    6548:	0b000003 	bleq	655c <__HEAP_SIZE+0x555c>
    654c:	0000016b 	andeq	r0, r0, fp, ror #2
    6550:	0166014c 	cmneq	r6, ip, asr #2
    6554:	00049d10 	andeq	r9, r4, r0, lsl sp
    6558:	23160c00 	tstcs	r6, #0, 24
    655c:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    6560:	05f31c01 	ldrbeq	r1, [r3, #3073]!	; 0xc01
    6564:	23020000 	movwcs	r0, #8192	; 0x2000
    6568:	22950c00 	addscs	r0, r5, #0, 24
    656c:	72010000 	andvc	r0, r1, #0
    6570:	036e1001 	cmneq	lr, #1
    6574:	23020000 	movwcs	r0, #8192	; 0x2000
    6578:	21640c04 	cmncs	r4, r4, lsl #24
    657c:	73010000 	movwvc	r0, #4096	; 0x1000
    6580:	036e1001 	cmneq	lr, #1
    6584:	23020000 	movwcs	r0, #8192	; 0x2000
    6588:	14720c18 	ldrbtne	r0, [r2], #-3096	; 0xfffff3e8
    658c:	74010000 	strvc	r0, [r1], #-0
    6590:	012f1101 			; <UNDEFINED> instruction: 0x012f1101
    6594:	23020000 	movwcs	r0, #8192	; 0x2000
    6598:	1ed80c2c 	cdpne	12, 13, cr0, cr8, cr12, {1}
    659c:	75010000 	strvc	r0, [r1, #-0]
    65a0:	05bb1301 	ldreq	r1, [fp, #769]!	; 0x301
    65a4:	23020000 	movwcs	r0, #8192	; 0x2000
    65a8:	141d0c30 	ldrne	r0, [sp], #-3120	; 0xfffff3d0
    65ac:	7a010000 	bvc	465b4 <__HEAP_SIZE+0x455b4>
    65b0:	05f90a01 	ldrbeq	r0, [r9, #2561]!	; 0xa01
    65b4:	23020000 	movwcs	r0, #8192	; 0x2000
    65b8:	21050c34 	tstcs	r5, r4, lsr ip
    65bc:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    65c0:	012f1501 			; <UNDEFINED> instruction: 0x012f1501
    65c4:	23020000 	movwcs	r0, #8192	; 0x2000
    65c8:	1a430c38 	bne	10c96b0 <__RAM_SIZE+0xfc96b0>
    65cc:	8f010000 	svchi	0x00010000
    65d0:	012f1501 			; <UNDEFINED> instruction: 0x012f1501
    65d4:	23020000 	movwcs	r0, #8192	; 0x2000
    65d8:	1e650c3c 	mcrne	12, 3, r0, cr5, cr12, {1}
    65dc:	93010000 	movwls	r0, #4096	; 0x1000
    65e0:	049d1c01 	ldreq	r1, [sp], #3073	; 0xc01
    65e4:	23020000 	movwcs	r0, #8192	; 0x2000
    65e8:	1a080c40 	bne	2096f0 <__RAM_SIZE+0x1096f0>
    65ec:	a3010000 	movwge	r0, #4096	; 0x1000
    65f0:	06191b01 	ldreq	r1, [r9], -r1, lsl #22
    65f4:	23020000 	movwcs	r0, #8192	; 0x2000
    65f8:	175e0c44 	ldrbne	r0, [lr, -r4, asr #24]
    65fc:	a4010000 	strge	r0, [r1], #-0
    6600:	062e1a01 	strteq	r1, [lr], -r1, lsl #20
    6604:	23020000 	movwcs	r0, #8192	; 0x2000
    6608:	0e040c48 	cdpeq	12, 0, cr0, cr4, cr8, {2}
    660c:	aa010000 	bge	46614 <__HEAP_SIZE+0x45614>
    6610:	00c31101 	sbceq	r1, r3, r1, lsl #2
    6614:	23020000 	movwcs	r0, #8192	; 0x2000
    6618:	19280c49 	stmdbne	r8!, {r0, r3, r6, sl, fp}
    661c:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    6620:	00c31101 	sbceq	r1, r3, r1, lsl #2
    6624:	23020000 	movwcs	r0, #8192	; 0x2000
    6628:	b102004a 	tstlt	r2, sl, asr #32
    662c:	0900001f 	stmdbeq	r0, {r0, r1, r2, r3, r4}
    6630:	04a91763 	strteq	r1, [r9], #1891	; 0x763
    6634:	04070000 	streq	r0, [r7], #-0
    6638:	000004af 	andeq	r0, r0, pc, lsr #9
    663c:	01190112 	tsteq	r9, r2, lsl r1
    6640:	04bf0000 	ldrteq	r0, [pc], #0	; 6648 <__HEAP_SIZE+0x5648>
    6644:	9f0a0000 	svcls	0x000a0000
    6648:	00000000 	andeq	r0, r0, r0
    664c:	69010713 	stmdbvs	r1, {r0, r1, r4, r8, r9, sl}
    6650:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    6654:	04f20167 	ldrbteq	r0, [r2], #359	; 0x167
    6658:	3c140000 	ldccc	0, cr0, [r4], {-0}
    665c:	00000020 	andeq	r0, r0, r0, lsr #32
    6660:	001afc14 	andseq	pc, sl, r4, lsl ip	; <UNPREDICTABLE>
    6664:	3d140100 	ldfccs	f0, [r4, #-0]
    6668:	02000021 	andeq	r0, r0, #33	; 0x21
    666c:	0014b314 	andseq	fp, r4, r4, lsl r3
    6670:	c2140300 	andsgt	r0, r4, #0, 6
    6674:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    6678:	0020ee14 	eoreq	lr, r0, r4, lsl lr
    667c:	02000500 	andeq	r0, r0, #0, 10
    6680:	00001d0d 	andeq	r1, r0, sp, lsl #26
    6684:	bf036e09 	svclt	0x00036e09
    6688:	13000004 	movwne	r0, #4
    668c:	00690107 	rsbeq	r0, r9, r7, lsl #2
    6690:	72090000 	andvc	r0, r9, #0
    6694:	00052b01 	andeq	r2, r5, r1, lsl #22
    6698:	15161400 	ldrne	r1, [r6, #-1024]	; 0xfffffc00
    669c:	14000000 	strne	r0, [r0], #-0
    66a0:	00001d72 	andeq	r1, r0, r2, ror sp
    66a4:	22671401 	rsbcs	r1, r7, #16777216	; 0x1000000
    66a8:	14020000 	strne	r0, [r2], #-0
    66ac:	000017e6 	andeq	r1, r0, r6, ror #15
    66b0:	1a511403 	bne	144b6c4 <__RAM_SIZE+0x134b6c4>
    66b4:	00040000 	andeq	r0, r4, r0
    66b8:	00190b02 	andseq	r0, r9, r2, lsl #22
    66bc:	03780900 	cmneq	r8, #0, 18
    66c0:	000004fe 	strdeq	r0, [r0], -lr
    66c4:	000b1310 	andeq	r1, fp, r0, lsl r3
    66c8:	7d090800 	stcvc	8, cr0, [r9, #-0]
    66cc:	00056310 	andeq	r6, r5, r0, lsl r3
    66d0:	0bc41100 	bleq	ff10aad8 <__StackTop+0xc700aad8>
    66d4:	7f090000 	svcvc	0x00090000
    66d8:	00011910 	andeq	r1, r1, r0, lsl r9
    66dc:	00230200 	eoreq	r0, r3, r0, lsl #4
    66e0:	000fd611 	andeq	sp, pc, r1, lsl r6	; <UNPREDICTABLE>
    66e4:	10800900 	addne	r0, r0, r0, lsl #18
    66e8:	0000014a 	andeq	r0, r0, sl, asr #2
    66ec:	00042302 	andeq	r2, r4, r2, lsl #6
    66f0:	00102302 	andseq	r2, r0, r2, lsl #6
    66f4:	03810900 	orreq	r0, r1, #0, 18
    66f8:	00000537 	andeq	r0, r0, r7, lsr r5
    66fc:	001d7b10 	andseq	r7, sp, r0, lsl fp
    6700:	86090c00 	strhi	r0, [r9], -r0, lsl #24
    6704:	0005aa10 	andeq	sl, r5, r0, lsl sl
    6708:	20531100 	subscs	r1, r3, r0, lsl #2
    670c:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    6710:	00009f0c 	andeq	r9, r0, ip, lsl #30
    6714:	00230200 	eoreq	r0, r3, r0, lsl #4
    6718:	001be911 	andseq	lr, fp, r1, lsl r9
    671c:	0e890900 	vdiveq.f16	s0, s18, s0	; <UNPREDICTABLE>
    6720:	000000d9 	ldrdeq	r0, [r0], -r9
    6724:	11042302 	tstne	r4, r2, lsl #6
    6728:	000016b6 			; <UNDEFINED> instruction: 0x000016b6
    672c:	d90e8a09 	stmdble	lr, {r0, r3, r9, fp, pc}
    6730:	02000000 	andeq	r0, r0, #0
    6734:	02000823 	andeq	r0, r0, #2293760	; 0x230000
    6738:	00001b6c 	andeq	r1, r0, ip, ror #22
    673c:	6f038b09 	svcvs	0x00038b09
    6740:	03000005 	movweq	r0, #5
    6744:	000005aa 	andeq	r0, r0, sl, lsr #11
    6748:	01080407 	tsteq	r8, r7, lsl #8
    674c:	bb030000 	bllt	c6754 <__HEAP_SIZE+0xc5754>
    6750:	13000005 	movwne	r0, #5
    6754:	00690107 	rsbeq	r0, r9, r7, lsl #2
    6758:	b6090000 	strlt	r0, [r9], -r0
    675c:	0005e701 	andeq	lr, r5, r1, lsl #14
    6760:	17da1400 	ldrbne	r1, [sl, r0, lsl #8]
    6764:	14000000 	strne	r0, [r0], #-0
    6768:	00001fc4 	andeq	r1, r0, r4, asr #31
    676c:	1fdb1401 	svcne	0x00db1401
    6770:	00020000 	andeq	r0, r2, r0
    6774:	00171902 	andseq	r1, r7, r2, lsl #18
    6778:	03bd0900 			; <UNDEFINED> instruction: 0x03bd0900
    677c:	000005c6 	andeq	r0, r0, r6, asr #11
    6780:	01140407 	tsteq	r4, r7, lsl #8
    6784:	ac0d0000 	stcge	0, cr0, [sp], {-0}
    6788:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    678c:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    6790:	0000003a 	andeq	r0, r0, sl, lsr r0
    6794:	e50d0003 	str	r0, [sp, #-3]
    6798:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    679c:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    67a0:	0000003a 	andeq	r0, r0, sl, lsr r0
    67a4:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    67a8:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    67ac:	000000cf 	andeq	r0, r0, pc, asr #1
    67b0:	0000062e 	andeq	r0, r0, lr, lsr #12
    67b4:	00003a0e 	andeq	r3, r0, lr, lsl #20
    67b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    67bc:	0000061e 	andeq	r0, r0, lr, lsl r6
    67c0:	0017570f 	andseq	r5, r7, pc, lsl #14
    67c4:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
    67c8:	0003be03 	andeq	fp, r3, r3, lsl #28
    67cc:	212a0f00 			; <UNDEFINED> instruction: 0x212a0f00
    67d0:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    67d4:	06331001 	ldrteq	r1, [r3], -r1
    67d8:	40030000 	andmi	r0, r3, r0
    67dc:	15000006 	strne	r0, [r0, #-6]
    67e0:	00001e24 	andeq	r1, r0, r4, lsr #28
    67e4:	3701be01 	strcc	fp, [r1, -r1, lsl #28]
    67e8:	0000066c 	andeq	r0, r0, ip, ror #12
    67ec:	b0030501 	andlt	r0, r3, r1, lsl #10
    67f0:	07380085 	ldreq	r0, [r8, -r5, lsl #1]!
    67f4:	00064004 	andeq	r4, r6, r4
    67f8:	06660800 	strbteq	r0, [r6], -r0, lsl #16
    67fc:	66030000 	strvs	r0, [r3], -r0
    6800:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    6804:	00000396 	muleq	r0, r6, r3
    6808:	00000686 	andeq	r0, r0, r6, lsl #13
    680c:	00003a0e 	andeq	r3, r0, lr, lsl #20
    6810:	16000400 	strne	r0, [r0], -r0, lsl #8
    6814:	000015b9 			; <UNDEFINED> instruction: 0x000015b9
    6818:	1f01cb01 	svcne	0x0001cb01
    681c:	00000676 	andeq	r0, r0, r6, ror r6
    6820:	85bc0305 	ldrhi	r0, [ip, #773]!	; 0x305
    6824:	56163800 	ldrpl	r3, [r6], -r0, lsl #16
    6828:	01000016 	tsteq	r0, r6, lsl r0
    682c:	961f01cc 	ldrls	r0, [pc], -ip, asr #3
    6830:	05000003 	streq	r0, [r0, #-3]
    6834:	008a5c03 	addeq	r5, sl, r3, lsl #24
    6838:	16681638 			; <UNDEFINED> instruction: 0x16681638
    683c:	cd010000 	stcgt	0, cr0, [r1, #-0]
    6840:	03961f01 	orrseq	r1, r6, #1, 30
    6844:	03050000 	movweq	r0, #20480	; 0x5000
    6848:	38008a78 	stmdacc	r0, {r3, r4, r5, r6, r9, fp, pc}
    684c:	001e9116 	andseq	r9, lr, r6, lsl r1
    6850:	01ce0100 	biceq	r0, lr, r0, lsl #2
    6854:	0006d82a 	andeq	sp, r6, sl, lsr #16
    6858:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    685c:	07380085 	ldreq	r0, [r8, -r5, lsl #1]!
    6860:	00039604 	andeq	r9, r3, r4, lsl #12
    6864:	06d20800 	ldrbeq	r0, [r2], r0, lsl #16
    6868:	d2030000 	andle	r0, r3, #0
    686c:	16000006 	strne	r0, [r0], -r6
    6870:	000019a1 	andeq	r1, r0, r1, lsr #19
    6874:	2a01cf01 	bcs	7a480 <__HEAP_SIZE+0x79480>
    6878:	000006d8 	ldrdeq	r0, [r0], -r8
    687c:	85b80305 	ldrhi	r0, [r8, #773]!	; 0x305
    6880:	3e163800 	cdpcc	8, 1, cr3, cr6, cr0, {0}
    6884:	01000018 	tsteq	r0, r8, lsl r0
    6888:	961f01d0 			; <UNDEFINED> instruction: 0x961f01d0
    688c:	05000003 	streq	r0, [r0, #-3]
    6890:	008af003 	addeq	pc, sl, r3
    6894:	187f1638 	ldmdane	pc!, {r3, r4, r5, r9, sl, ip}^	; <UNPREDICTABLE>
    6898:	d4010000 	strle	r0, [r1], #-0
    689c:	03962301 	orrseq	r2, r6, #67108864	; 0x4000000
    68a0:	03050000 	movweq	r0, #20480	; 0x5000
    68a4:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
    68a8:	00157916 	andseq	r7, r5, r6, lsl r9
    68ac:	01d50100 	bicseq	r0, r5, r0, lsl #2
    68b0:	00013b31 	andeq	r3, r1, r1, lsr fp
    68b4:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    68b8:	16380086 	ldrtne	r0, [r8], -r6, lsl #1
    68bc:	00001987 	andeq	r1, r0, r7, lsl #19
    68c0:	2301db01 	movwcs	sp, #6913	; 0x1b01
    68c4:	00000396 	muleq	r0, r6, r3
    68c8:	8b100305 	blhi	4074e4 <__RAM_SIZE+0x3074e4>
    68cc:	4c163800 	ldcmi	8, cr3, [r6], {-0}
    68d0:	01000022 	tsteq	r0, r2, lsr #32
    68d4:	3b2d01e6 	blcc	b47074 <__RAM_SIZE+0xa47074>
    68d8:	05000001 	streq	r0, [r0, #-1]
    68dc:	00864803 	addeq	r4, r6, r3, lsl #16
    68e0:	19481638 	stmdbne	r8, {r3, r4, r5, r9, sl, ip}^
    68e4:	e7010000 	str	r0, [r1, -r0]
    68e8:	01562c01 	cmpeq	r6, r1, lsl #24
    68ec:	03050000 	movweq	r0, #20480	; 0x5000
    68f0:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
    68f4:	00152016 	andseq	r2, r5, r6, lsl r0
    68f8:	01e80100 	mvneq	r0, r0, lsl #2
    68fc:	00013b2d 	andeq	r3, r1, sp, lsr #22
    6900:	58030500 	stmdapl	r3, {r8, sl}
    6904:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6908:	0000154d 	andeq	r1, r0, sp, asr #10
    690c:	2c01e901 			; <UNDEFINED> instruction: 0x2c01e901
    6910:	00000125 	andeq	r0, r0, r5, lsr #2
    6914:	8b0c0305 	blhi	307530 <__RAM_SIZE+0x207530>
    6918:	7f163800 	svcvc	0x00163800
    691c:	01000021 	tsteq	r0, r1, lsr #32
    6920:	562c01ea 	strtpl	r0, [ip], -sl, ror #3
    6924:	05000001 	streq	r0, [r0, #-1]
    6928:	008aec03 	addeq	lr, sl, r3, lsl #24
    692c:	01250d38 			; <UNDEFINED> instruction: 0x01250d38
    6930:	07b00000 	ldreq	r0, [r0, r0]!
    6934:	3a0e0000 	bcc	38693c <__RAM_SIZE+0x28693c>
    6938:	00000000 	andeq	r0, r0, r0
    693c:	07a00800 	streq	r0, [r0, r0, lsl #16]!
    6940:	3a160000 	bcc	586948 <__RAM_SIZE+0x486948>
    6944:	01000016 	tsteq	r0, r6, lsl r0
    6948:	b02c01eb 	eorlt	r0, ip, fp, ror #3
    694c:	05000007 	streq	r0, [r0, #-7]
    6950:	008b9803 	addeq	r9, fp, r3, lsl #16
    6954:	1df31638 	ldclne	6, cr1, [r3, #224]!	; 0xe0
    6958:	ec010000 	stc	0, cr0, [r1], {-0}
    695c:	01252c01 			; <UNDEFINED> instruction: 0x01252c01
    6960:	03050000 	movweq	r0, #20480	; 0x5000
    6964:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
    6968:	001cb016 	andseq	fp, ip, r6, lsl r0
    696c:	01ed0100 	mvneq	r0, r0, lsl #2
    6970:	00012f24 	andeq	r2, r1, r4, lsr #30
    6974:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    6978:	16380088 	ldrtne	r0, [r8], -r8, lsl #1
    697c:	00001b7b 	andeq	r1, r0, fp, ror fp
    6980:	2c01ee01 	stccs	14, cr14, [r1], {1}
    6984:	00000156 	andeq	r0, r0, r6, asr r1
    6988:	8ae40305 	bhi	ff9075a4 <__StackTop+0xc78075a4>
    698c:	a70d3800 	strge	r3, [sp, -r0, lsl #16]
    6990:	11000003 	tstne	r0, r3
    6994:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    6998:	0000003a 	andeq	r0, r0, sl, lsr r0
    699c:	db160000 	blle	5869a4 <__RAM_SIZE+0x4869a4>
    69a0:	01000019 	tsteq	r0, r9, lsl r0
    69a4:	012501ef 	smulwteq	r5, pc, r1	; <UNPREDICTABLE>
    69a8:	05000008 	streq	r0, [r0, #-8]
    69ac:	008a9403 	addeq	r9, sl, r3, lsl #8
    69b0:	18af1638 	stmiane	pc!, {r3, r4, r5, r9, sl, ip}	; <UNPREDICTABLE>
    69b4:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    69b8:	01402301 	cmpeq	r0, r1, lsl #6
    69bc:	03050000 	movweq	r0, #20480	; 0x5000
    69c0:	38000004 	stmdacc	r0, {r2}
    69c4:	00230116 	eoreq	r0, r3, r6, lsl r1
    69c8:	02020100 	andeq	r0, r2, #0, 2
    69cc:	00013b2d 	andeq	r3, r1, sp, lsr #22
    69d0:	50030500 	andpl	r0, r3, r0, lsl #10
    69d4:	17380088 	ldrne	r0, [r8, -r8, lsl #1]!
    69d8:	00189801 	andseq	r9, r8, r1, lsl #16
    69dc:	21c50100 	biccs	r0, r5, r0, lsl #2
    69e0:	00000106 	andeq	r0, r0, r6, lsl #2
    69e4:	00000000 	andeq	r0, r0, r0
    69e8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    69ec:	087b0100 	ldmdaeq	fp!, {r8}^
    69f0:	15180000 	ldrne	r0, [r8, #-0]
    69f4:	01000014 	tsteq	r0, r4, lsl r0
    69f8:	191021c7 	ldmdbne	r0, {r0, r1, r2, r6, r7, r8, sp}
    69fc:	57000001 	strpl	r0, [r0, -r1]
    6a00:	53000059 	movwpl	r0, #89	; 0x59
    6a04:	00000059 	andeq	r0, r0, r9, asr r0
    6a08:	176c0117 			; <UNDEFINED> instruction: 0x176c0117
    6a0c:	b1010000 	mrslt	r0, (UNDEF: 1)
    6a10:	f0010a21 			; <UNDEFINED> instruction: 0xf0010a21
    6a14:	0810002d 	ldmdaeq	r0, {r0, r2, r3, r5}
    6a18:	0210002e 	andseq	r0, r0, #46	; 0x2e
    6a1c:	ea01007d 	b	46c18 <__HEAP_SIZE+0x45c18>
    6a20:	19000008 	stmdbne	r0, {r3}
    6a24:	00001ee0 	andeq	r1, r0, r0, ror #29
    6a28:	3a21b101 	bcc	872e34 <__RAM_SIZE+0x772e34>
    6a2c:	000008ea 	andeq	r0, r0, sl, ror #17
    6a30:	45195001 	ldrmi	r5, [r9, #-1]
    6a34:	0100001b 	tsteq	r0, fp, lsl r0
    6a38:	fb3921b2 	blx	e4f10a <__RAM_SIZE+0xd4f10a>
    6a3c:	01000008 	tsteq	r0, r8
    6a40:	20a81951 	adccs	r1, r8, r1, asr r9
    6a44:	b3010000 	movwlt	r0, #4096	; 0x1000
    6a48:	09014321 	stmdbeq	r1, {r0, r5, r8, r9, lr}
    6a4c:	52010000 	andpl	r0, r1, #0
    6a50:	0015e716 	andseq	lr, r5, r6, lsl r7
    6a54:	21b50100 			; <UNDEFINED> instruction: 0x21b50100
    6a58:	0002c11d 	andeq	ip, r2, sp, lsl r1
    6a5c:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    6a60:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    6a64:	000022e5 	andeq	r2, r0, r5, ror #5
    6a68:	1c21b601 	stcne	6, cr11, [r1], #-4
    6a6c:	00000907 	andeq	r0, r0, r7, lsl #18
    6a70:	88580305 	ldmdahi	r8, {r0, r2, r8, r9}^
    6a74:	07003800 	streq	r3, [r0, -r0, lsl #16]
    6a78:	0008f004 	andeq	pc, r8, r4
    6a7c:	c1040700 	tstgt	r4, r0, lsl #14
    6a80:	03000002 	movweq	r0, #2
    6a84:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6a88:	05bb0407 	ldreq	r0, [fp, #1031]!	; 0x407
    6a8c:	04070000 	streq	r0, [r7], #-0
    6a90:	00000029 	andeq	r0, r0, r9, lsr #32
    6a94:	0001080d 	andeq	r0, r1, sp, lsl #16
    6a98:	00091700 	andeq	r1, r9, r0, lsl #14
    6a9c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6aa0:	007f0000 	rsbseq	r0, pc, r0
    6aa4:	22a40117 	adccs	r0, r4, #-1073741819	; 0xc0000005
    6aa8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    6aac:	24010a21 	strcs	r0, [r1], #-2593	; 0xfffff5df
    6ab0:	3c10002d 	ldccc	0, cr0, [r0], {45}	; 0x2d
    6ab4:	0210002d 	andseq	r0, r0, #45	; 0x2d
    6ab8:	8601007d 			; <UNDEFINED> instruction: 0x8601007d
    6abc:	19000009 	stmdbne	r0, {r0, r3}
    6ac0:	00001bf9 	strdeq	r1, [r0], -r9
    6ac4:	39218801 	stmdbcc	r1!, {r0, fp, pc}
    6ac8:	000008ea 	andeq	r0, r0, sl, ror #17
    6acc:	47195001 	ldrmi	r5, [r9, -r1]
    6ad0:	01000014 	tsteq	r0, r4, lsl r0
    6ad4:	fb382189 	blx	e0f102 <__RAM_SIZE+0xd0f102>
    6ad8:	01000008 	tsteq	r0, r8
    6adc:	1d321951 			; <UNDEFINED> instruction: 0x1d321951
    6ae0:	8a010000 	bhi	46ae8 <__HEAP_SIZE+0x45ae8>
    6ae4:	09014221 	stmdbeq	r1, {r0, r5, r9, lr}
    6ae8:	52010000 	andpl	r0, r1, #0
    6aec:	00236516 	eoreq	r6, r3, r6, lsl r5
    6af0:	218c0100 	orrcs	r0, ip, r0, lsl #2
    6af4:	0002c11d 	andeq	ip, r2, sp, lsl r1
    6af8:	98030500 	stmdals	r3, {r8, sl}
    6afc:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6b00:	00001fa1 	andeq	r1, r0, r1, lsr #31
    6b04:	1c218d01 	stcne	13, cr8, [r1], #-4
    6b08:	00000907 	andeq	r0, r0, r7, lsl #18
    6b0c:	86500305 	ldrbhi	r0, [r0], -r5, lsl #6
    6b10:	1a003800 	bne	14b18 <__HEAP_SIZE+0x13b18>
    6b14:	000021d6 	ldrdeq	r2, [r0], -r6
    6b18:	0d20df01 	stceq	15, cr13, [r0, #-4]!
    6b1c:	0025bc01 	eoreq	fp, r5, r1, lsl #24
    6b20:	00266410 	eoreq	r6, r6, r0, lsl r4
    6b24:	00597510 	subseq	r7, r9, r0, lsl r5
    6b28:	0a700100 	beq	1c06f30 <__RAM_SIZE+0x1b06f30>
    6b2c:	e11b0000 	tst	fp, r0
    6b30:	01000020 	tsteq	r0, r0, lsr #32
    6b34:	4a3820df 	bmi	e0eeb8 <__RAM_SIZE+0xd0eeb8>
    6b38:	9f000001 	svcls	0x00000001
    6b3c:	95000059 	strls	r0, [r0, #-89]	; 0xffffffa7
    6b40:	1b000059 	blne	6cac <__HEAP_SIZE+0x5cac>
    6b44:	00002026 	andeq	r2, r0, r6, lsr #32
    6b48:	3e20e001 	cdpcc	0, 2, cr14, cr0, cr1, {0}
    6b4c:	0000012a 	andeq	r0, r0, sl, lsr #2
    6b50:	000059e8 	andeq	r5, r0, r8, ror #19
    6b54:	000059e4 	andeq	r5, r0, r4, ror #19
    6b58:	00228918 	eoreq	r8, r2, r8, lsl r9
    6b5c:	20e20100 	rsccs	r0, r2, r0, lsl #2
    6b60:	00014a10 	andeq	r4, r1, r0, lsl sl
    6b64:	005a0a00 	subseq	r0, sl, r0, lsl #20
    6b68:	005a0600 	subseq	r0, sl, r0, lsl #12
    6b6c:	19771800 	ldmdbne	r7!, {fp, ip}^
    6b70:	e3010000 	movw	r0, #4096	; 0x1000
    6b74:	015b1620 	cmpeq	fp, r0, lsr #12
    6b78:	5a2a0000 	bpl	a86b80 <__RAM_SIZE+0x986b80>
    6b7c:	5a280000 	bpl	a06b84 <__RAM_SIZE+0x906b84>
    6b80:	33180000 	tstcc	r8, #0
    6b84:	01000015 	tsteq	r0, r5, lsl r0
    6b88:	dd1420e4 	ldcle	0, cr2, [r4, #-912]	; 0xfffffc70
    6b8c:	3f000006 	svccc	0x00000006
    6b90:	3d00005a 	stccc	0, cr0, [r0, #-360]	; 0xfffffe98
    6b94:	1800005a 	stmdane	r0, {r1, r3, r4, r6}
    6b98:	000023d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    6b9c:	1420e501 	strtne	lr, [r0], #-1281	; 0xfffffaff
    6ba0:	000006dd 	ldrdeq	r0, [r0], -sp
    6ba4:	00005a54 	andeq	r5, r0, r4, asr sl
    6ba8:	00005a52 	andeq	r5, r0, r2, asr sl
    6bac:	00260a1c 	eoreq	r0, r6, ip, lsl sl
    6bb0:	00263010 	eoreq	r3, r6, r0, lsl r0
    6bb4:	000a4210 	andeq	r4, sl, r0, lsl r2
    6bb8:	09db1800 	ldmibeq	fp, {fp, ip}^
    6bbc:	04010000 	streq	r0, [r1], #-0
    6bc0:	03910d21 	orrseq	r0, r1, #2112	; 0x840
    6bc4:	5a690000 	bpl	1a46bcc <__RAM_SIZE+0x1946bcc>
    6bc8:	5a670000 	bpl	19c6bd0 <__RAM_SIZE+0x18c6bd0>
    6bcc:	1d000000 	stcne	0, cr0, [r0, #-0]
    6bd0:	100025e4 	andne	r2, r0, r4, ror #11
    6bd4:	000037d4 	ldrdeq	r3, [r0], -r4
    6bd8:	0026021e 	eoreq	r0, r6, lr, lsl r2
    6bdc:	0037e310 	eorseq	lr, r7, r0, lsl r3
    6be0:	000a5f00 	andeq	r5, sl, r0, lsl #30
    6be4:	50011f00 	andpl	r1, r1, r0, lsl #30
    6be8:	00007802 	andeq	r7, r0, r2, lsl #16
    6bec:	00263e20 	eoreq	r3, r6, r0, lsr #28
    6bf0:	0037e310 	eorseq	lr, r7, r0, lsl r3
    6bf4:	50011f00 	andpl	r1, r1, r0, lsl #30
    6bf8:	00007702 	andeq	r7, r0, r2, lsl #14
    6bfc:	cb012100 	blgt	4f004 <__HEAP_SIZE+0x4e004>
    6c00:	0100001b 	tsteq	r0, fp, lsl r0
    6c04:	010e2050 	qaddeq	r2, r0, lr
    6c08:	000000d9 	ldrdeq	r0, [r0], -r9
	...
    6c14:	00005a7c 	andeq	r5, r0, ip, ror sl
    6c18:	000b0c01 	andeq	r0, fp, r1, lsl #24
    6c1c:	1d551b00 	vldrne	d17, [r5, #-0]
    6c20:	50010000 	andpl	r0, r1, r0
    6c24:	03a73a20 			; <UNDEFINED> instruction: 0x03a73a20
    6c28:	5aa00000 	bpl	fe806c30 <__StackTop+0xc6706c30>
    6c2c:	5a9c0000 	bpl	fe706c34 <__StackTop+0xc6606c34>
    6c30:	d91b0000 	ldmdble	fp, {}	; <UNPREDICTABLE>
    6c34:	01000016 	tsteq	r0, r6, lsl r0
    6c38:	2f392051 	svccs	0x00392051
    6c3c:	c4000001 	strgt	r0, [r0], #-1
    6c40:	be00005a 	mcrlt	0, 0, r0, cr0, cr10, {2}
    6c44:	1b00005a 	blne	6db4 <__HEAP_SIZE+0x5db4>
    6c48:	0000156b 	andeq	r1, r0, fp, ror #10
    6c4c:	36205201 	strtcc	r5, [r0], -r1, lsl #4
    6c50:	000000d9 	ldrdeq	r0, [r0], -r9
    6c54:	00005af3 	strdeq	r5, [r0], -r3
    6c58:	00005aed 	andeq	r5, r0, sp, ror #21
    6c5c:	0022c218 	eoreq	ip, r2, r8, lsl r2
    6c60:	20540100 	subscs	r0, r4, r0, lsl #2
    6c64:	00066611 	andeq	r6, r6, r1, lsl r6
    6c68:	005b1e00 	subseq	r1, fp, r0, lsl #28
    6c6c:	005b1c00 	subseq	r1, fp, r0, lsl #24
    6c70:	23e81800 	mvncs	r1, #0, 16
    6c74:	55010000 	strpl	r0, [r1, #-0]
    6c78:	00d91220 	sbcseq	r1, r9, r0, lsr #4
    6c7c:	5b330000 	blpl	cc6c84 <__RAM_SIZE+0xbc6c84>
    6c80:	5b310000 	blpl	c46c88 <__RAM_SIZE+0xb46c88>
    6c84:	001d0000 	andseq	r0, sp, r0
    6c88:	f2000000 	vhadd.s8	d0, d0, d0
    6c8c:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    6c90:	00000000 	andeq	r0, r0, r0
    6c94:	00003800 	andeq	r3, r0, r0, lsl #16
    6c98:	c8012100 	stmdagt	r1, {r8, sp}
    6c9c:	01000022 	tsteq	r0, r2, lsr #32
    6ca0:	0110202a 	tsteq	r0, sl, lsr #32
    6ca4:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    6cb0:	00005b46 	andeq	r5, r0, r6, asr #22
    6cb4:	000b9301 	andeq	r9, fp, r1, lsl #6
    6cb8:	1d551b00 	vldrne	d17, [r5, #-0]
    6cbc:	2a010000 	bcs	46cc4 <__HEAP_SIZE+0x45cc4>
    6cc0:	03a73b20 			; <UNDEFINED> instruction: 0x03a73b20
    6cc4:	5b6a0000 	blpl	1a86ccc <__RAM_SIZE+0x1986ccc>
    6cc8:	5b660000 	blpl	1986cd0 <__RAM_SIZE+0x1886cd0>
    6ccc:	d91b0000 	ldmdble	fp, {}	; <UNPREDICTABLE>
    6cd0:	01000016 	tsteq	r0, r6, lsl r0
    6cd4:	2f3a202b 	svccs	0x003a202b
    6cd8:	94000001 	strls	r0, [r0], #-1
    6cdc:	8800005b 	stmdahi	r0, {r0, r1, r3, r4, r6}
    6ce0:	1800005b 	stmdane	r0, {r0, r1, r3, r4, r6}
    6ce4:	000022c2 	andeq	r2, r0, r2, asr #5
    6ce8:	11202d01 			; <UNDEFINED> instruction: 0x11202d01
    6cec:	00000666 	andeq	r0, r0, r6, ror #12
    6cf0:	00005be8 	andeq	r5, r0, r8, ror #23
    6cf4:	00005be4 	andeq	r5, r0, r4, ror #23
    6cf8:	001a1918 	andseq	r1, sl, r8, lsl r9
    6cfc:	202e0100 	eorcs	r0, lr, r0, lsl #2
    6d00:	00011914 	andeq	r1, r1, r4, lsl r9
    6d04:	005c0a00 	subseq	r0, ip, r0, lsl #20
    6d08:	005c0600 	subseq	r0, ip, r0, lsl #12
    6d0c:	00001d00 	andeq	r1, r0, r0, lsl #26
    6d10:	37f20000 	ldrbcc	r0, [r2, r0]!
    6d14:	001d0000 	andseq	r0, sp, r0
    6d18:	00000000 	andeq	r0, r0, r0
    6d1c:	00000038 	andeq	r0, r0, r8, lsr r0
    6d20:	206f0122 	rsbcs	r0, pc, r2, lsr #2
    6d24:	b6010000 	strlt	r0, [r1], -r0
    6d28:	00010a1f 	andeq	r0, r1, pc, lsl sl
    6d2c:	00000000 	andeq	r0, r0, r0
    6d30:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    6d34:	0100005c 	qaddeq	r0, ip, r0
    6d38:	00000ca5 	andeq	r0, r0, r5, lsr #25
    6d3c:	001d471b 	andseq	r4, sp, fp, lsl r7
    6d40:	1fb60100 	svcne	0x00b60100
    6d44:	0003a736 	andeq	sl, r3, r6, lsr r7
    6d48:	005c4d00 	subseq	r4, ip, r0, lsl #26
    6d4c:	005c4900 	subseq	r4, ip, r0, lsl #18
    6d50:	23721b00 	cmncs	r2, #0, 22
    6d54:	b7010000 	strlt	r0, [r1, -r0]
    6d58:	012f351f 			; <UNDEFINED> instruction: 0x012f351f
    6d5c:	5c730000 	ldclpl	0, cr0, [r3], #-0
    6d60:	5c6b0000 	stclpl	0, cr0, [fp], #-0
    6d64:	f11b0000 			; <UNDEFINED> instruction: 0xf11b0000
    6d68:	0100000a 	tsteq	r0, sl
    6d6c:	a5361fb8 	ldrge	r1, [r6, #-4024]!	; 0xfffff048
    6d70:	b000000c 	andlt	r0, r0, ip
    6d74:	ac00005c 	stcge	0, cr0, [r0], {92}	; 0x5c
    6d78:	1800005c 	stmdane	r0, {r2, r3, r4, r6}
    6d7c:	000022c2 	andeq	r2, r0, r2, asr #5
    6d80:	111fba01 	tstne	pc, r1, lsl #20
    6d84:	00000666 	andeq	r0, r0, r6, ror #12
    6d88:	00005cd2 	ldrdeq	r5, [r0], -r2
    6d8c:	00005cce 	andeq	r5, r0, lr, asr #25
    6d90:	0015f518 	andseq	pc, r5, r8, lsl r5	; <UNPREDICTABLE>
    6d94:	1fbb0100 	svcne	0x00bb0100
    6d98:	0000c311 	andeq	ip, r0, r1, lsl r3
    6d9c:	005cf400 	subseq	pc, ip, r0, lsl #8
    6da0:	005cf000 	subseq	pc, ip, r0
    6da4:	0c261800 	stceq	8, cr1, [r6], #-0
    6da8:	bc010000 	stclt	0, cr0, [r1], {-0}
    6dac:	012f151f 			; <UNDEFINED> instruction: 0x012f151f
    6db0:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    6db4:	5d120000 	ldcpl	0, cr0, [r2, #-0]
    6db8:	58230000 	stmdapl	r3!, {}	; <UNPREDICTABLE>
    6dbc:	4c000007 	stcmi	0, cr0, [r0], {7}
    6dc0:	1800000c 	stmdane	r0, {r2, r3}
    6dc4:	00000a0f 	andeq	r0, r0, pc, lsl #20
    6dc8:	151fee01 	ldrne	lr, [pc, #-3585]	; 5fcf <__HEAP_SIZE+0x4fcf>
    6dcc:	000006dd 	ldrdeq	r0, [r0], -sp
    6dd0:	00005d38 	andeq	r5, r0, r8, lsr sp
    6dd4:	00005d34 	andeq	r5, r0, r4, lsr sp
    6dd8:	00001c00 	andeq	r1, r0, r0, lsl #24
    6ddc:	00000000 	andeq	r0, r0, r0
    6de0:	0c6f0000 	stcleq	0, cr0, [pc], #-0	; 6de8 <__HEAP_SIZE+0x5de8>
    6de4:	db180000 	blle	606dec <__RAM_SIZE+0x506dec>
    6de8:	01000009 	tsteq	r0, r9
    6dec:	91151fef 	tstls	r5, pc, ror #31
    6df0:	58000003 	stmdapl	r0, {r0, r1}
    6df4:	5600005d 			; <UNDEFINED> instruction: 0x5600005d
    6df8:	0000005d 	andeq	r0, r0, sp, asr r0
    6dfc:	0000001c 	andeq	r0, r0, ip, lsl r0
    6e00:	00000000 	andeq	r0, r0, r0
    6e04:	000c9200 	andeq	r9, ip, r0, lsl #4
    6e08:	09db1800 	ldmibeq	fp, {fp, ip}^
    6e0c:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    6e10:	0391151f 	orrseq	r1, r1, #130023424	; 0x7c00000
    6e14:	5d6d0000 	stclpl	0, cr0, [sp, #-0]
    6e18:	5d6b0000 	stclpl	0, cr0, [fp, #-0]
    6e1c:	1d000000 	stcne	0, cr0, [r0, #-0]
    6e20:	00000000 	andeq	r0, r0, r0
    6e24:	0000380e 	andeq	r3, r0, lr, lsl #16
    6e28:	0000001d 	andeq	r0, r0, sp, lsl r0
    6e2c:	00381c00 	eorseq	r1, r8, r0, lsl #24
    6e30:	04070000 	streq	r0, [r7], #-0
    6e34:	00000119 	andeq	r0, r0, r9, lsl r1
    6e38:	16200121 	strtne	r0, [r0], -r1, lsr #2
    6e3c:	10010000 	andne	r0, r1, r0
    6e40:	1901101f 	stmdbne	r1, {r0, r1, r2, r3, r4, ip}
    6e44:	00000001 	andeq	r0, r0, r1
    6e48:	00000000 	andeq	r0, r0, r0
    6e4c:	80000000 	andhi	r0, r0, r0
    6e50:	0100005d 	qaddeq	r0, sp, r0
    6e54:	00000e15 	andeq	r0, r0, r5, lsl lr
    6e58:	001d471b 	andseq	r4, sp, fp, lsl r7
    6e5c:	1f100100 	svcne	0x00100100
    6e60:	0003a738 	andeq	sl, r3, r8, lsr r7
    6e64:	005da400 	subseq	sl, sp, r0, lsl #8
    6e68:	005da000 	subseq	sl, sp, r0
    6e6c:	23721b00 	cmncs	r2, #0, 22
    6e70:	11010000 	mrsne	r0, (UNDEF: 1)
    6e74:	012f371f 			; <UNDEFINED> instruction: 0x012f371f
    6e78:	5de40000 	stclpl	0, cr0, [r4]
    6e7c:	5dc20000 	stclpl	0, cr0, [r2]
    6e80:	041b0000 	ldreq	r0, [fp], #-0
    6e84:	0100001f 	tsteq	r0, pc, lsl r0
    6e88:	d9341f12 	ldmdble	r4!, {r1, r4, r8, r9, sl, fp, ip}
    6e8c:	cb000000 	blgt	6e94 <__HEAP_SIZE+0x5e94>
    6e90:	c100005e 	qaddgt	r0, lr, r0
    6e94:	1b00005e 	blne	7014 <__HEAP_SIZE+0x6014>
    6e98:	00001cbd 			; <UNDEFINED> instruction: 0x00001cbd
    6e9c:	391f1301 	ldmdbcc	pc, {r0, r8, r9, ip}	; <UNPREDICTABLE>
    6ea0:	0000052b 	andeq	r0, r0, fp, lsr #10
    6ea4:	00005f14 	andeq	r5, r0, r4, lsl pc
    6ea8:	00005f10 	andeq	r5, r0, r0, lsl pc
    6eac:	001c471b 	andseq	r4, ip, fp, lsl r7
    6eb0:	1f140100 	svcne	0x00140100
    6eb4:	000e1536 	andeq	r1, lr, r6, lsr r5
    6eb8:	005f3900 	subseq	r3, pc, r0, lsl #18
    6ebc:	005f3500 	subseq	r3, pc, r0, lsl #10
    6ec0:	0af11b00 	beq	ffc4dac8 <__StackTop+0xc7b4dac8>
    6ec4:	15010000 	strne	r0, [r1, #-0]
    6ec8:	0ca5381f 	stceq	8, cr3, [r5], #124	; 0x7c
    6ecc:	5f5d0000 	svcpl	0x005d0000
    6ed0:	5f590000 	svcpl	0x00590000
    6ed4:	c2180000 	andsgt	r0, r8, #0
    6ed8:	01000022 	tsteq	r0, r2, lsr #32
    6edc:	66111f17 	sadd16vs	r1, r1, r7
    6ee0:	81000006 	tsthi	r0, r6
    6ee4:	7d00005f 	stcvc	0, cr0, [r0, #-380]	; 0xfffffe84
    6ee8:	1800005f 	stmdane	r0, {r0, r1, r2, r3, r4, r6}
    6eec:	000015f5 	strdeq	r1, [r0], -r5
    6ef0:	111f1801 	tstne	pc, r1, lsl #16
    6ef4:	000000c3 	andeq	r0, r0, r3, asr #1
    6ef8:	00005fa3 	andeq	r5, r0, r3, lsr #31
    6efc:	00005f9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
    6f00:	001a1918 	andseq	r1, sl, r8, lsl r9
    6f04:	1f190100 	svcne	0x00190100
    6f08:	00011914 	andeq	r1, r1, r4, lsl r9
    6f0c:	005fc900 	subseq	ip, pc, r0, lsl #18
    6f10:	005fc100 	subseq	ip, pc, r0, lsl #2
    6f14:	0c261800 	stceq	8, cr1, [r6], #-0
    6f18:	1a010000 	bne	46f20 <__HEAP_SIZE+0x45f20>
    6f1c:	012f151f 			; <UNDEFINED> instruction: 0x012f151f
    6f20:	60030000 	andvs	r0, r3, r0
    6f24:	5fff0000 	svcpl	0x00ff0000
    6f28:	40230000 	eormi	r0, r3, r0
    6f2c:	bc000007 	stclt	0, cr0, [r0], {7}
    6f30:	1800000d 	stmdane	r0, {r0, r2, r3}
    6f34:	00000a0f 	andeq	r0, r0, pc, lsl #20
    6f38:	151f7801 	ldrne	r7, [pc, #-2049]	; 673f <__HEAP_SIZE+0x573f>
    6f3c:	000006dd 	ldrdeq	r0, [r0], -sp
    6f40:	00006025 	andeq	r6, r0, r5, lsr #32
    6f44:	00006021 	andeq	r6, r0, r1, lsr #32
    6f48:	00001c00 	andeq	r1, r0, r0, lsl #24
    6f4c:	00000000 	andeq	r0, r0, r0
    6f50:	0ddf0000 	ldcleq	0, cr0, [pc]	; 6f58 <__HEAP_SIZE+0x5f58>
    6f54:	db180000 	blle	606f5c <__RAM_SIZE+0x506f5c>
    6f58:	01000009 	tsteq	r0, r9
    6f5c:	91151f79 	tstls	r5, r9, ror pc
    6f60:	45000003 	strmi	r0, [r0, #-3]
    6f64:	43000060 	movwmi	r0, #96	; 0x60
    6f68:	00000060 	andeq	r0, r0, r0, rrx
    6f6c:	0000001c 	andeq	r0, r0, ip, lsl r0
    6f70:	00000000 	andeq	r0, r0, r0
    6f74:	000e0200 	andeq	r0, lr, r0, lsl #4
    6f78:	09db1800 	ldmibeq	fp, {fp, ip}^
    6f7c:	7f010000 	svcvc	0x00010000
    6f80:	0391151f 	orrseq	r1, r1, #130023424	; 0x7c00000
    6f84:	605a0000 	subsvs	r0, sl, r0
    6f88:	60580000 	subsvs	r0, r8, r0
    6f8c:	1d000000 	stcne	0, cr0, [r0, #-0]
    6f90:	00000000 	andeq	r0, r0, r0
    6f94:	0000380e 	andeq	r3, r0, lr, lsl #16
    6f98:	0000001d 	andeq	r0, r0, sp, lsl r0
    6f9c:	00381c00 	eorseq	r1, r8, r0, lsl #24
    6fa0:	04070000 	streq	r0, [r7], #-0
    6fa4:	000000d9 	ldrdeq	r0, [r0], -r9
    6fa8:	178b0121 	strne	r0, [fp, r1, lsr #2]
    6fac:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    6fb0:	1901101e 	stmdbne	r1, {r1, r2, r3, r4, ip}
    6fb4:	00000001 	andeq	r0, r0, r1
    6fb8:	00000000 	andeq	r0, r0, r0
    6fbc:	6d000000 	stcvs	0, cr0, [r0, #-0]
    6fc0:	01000060 	tsteq	r0, r0, rrx
    6fc4:	00000f4a 	andeq	r0, r0, sl, asr #30
    6fc8:	001d471b 	andseq	r4, sp, fp, lsl r7
    6fcc:	1e980100 	fmlnee	f0, f0, f0
    6fd0:	0003a731 	andeq	sl, r3, r1, lsr r7
    6fd4:	00609100 	rsbeq	r9, r0, r0, lsl #2
    6fd8:	00608d00 	rsbeq	r8, r0, r0, lsl #26
    6fdc:	23721b00 	cmncs	r2, #0, 22
    6fe0:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    6fe4:	012f301e 			; <UNDEFINED> instruction: 0x012f301e
    6fe8:	60d10000 	sbcsvs	r0, r1, r0
    6fec:	60af0000 	adcvs	r0, pc, r0
    6ff0:	041b0000 	ldreq	r0, [fp], #-0
    6ff4:	0100001f 	tsteq	r0, pc, lsl r0
    6ff8:	d92d1e9a 	pushle	{r1, r3, r4, r7, r9, sl, fp, ip}
    6ffc:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    7000:	ae000061 	cdpge	0, 0, cr0, cr0, cr1, {3}
    7004:	1b000061 	blne	7190 <__HEAP_SIZE+0x6190>
    7008:	00001cbd 			; <UNDEFINED> instruction: 0x00001cbd
    700c:	321e9b01 	andscc	r9, lr, #1024	; 0x400
    7010:	0000052b 	andeq	r0, r0, fp, lsr #10
    7014:	00006201 	andeq	r6, r0, r1, lsl #4
    7018:	000061fd 	strdeq	r6, [r0], -sp
    701c:	001c471b 	andseq	r4, ip, fp, lsl r7
    7020:	1e9c0100 	fmlnee	f0, f4, f0
    7024:	000e152f 	andeq	r1, lr, pc, lsr #10
    7028:	00622600 	rsbeq	r2, r2, r0, lsl #12
    702c:	00622200 	rsbeq	r2, r2, r0, lsl #4
    7030:	22c21800 	sbccs	r1, r2, #0, 16
    7034:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    7038:	0666111e 			; <UNDEFINED> instruction: 0x0666111e
    703c:	624a0000 	subvs	r0, sl, #0
    7040:	62460000 	subvs	r0, r6, #0
    7044:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7048:	0100001a 	tsteq	r0, sl, lsl r0
    704c:	19141e9f 	ldmdbne	r4, {r0, r1, r2, r3, r4, r7, r9, sl, fp, ip}
    7050:	70000001 	andvc	r0, r0, r1
    7054:	68000062 	stmdavs	r0, {r1, r5, r6}
    7058:	18000062 	stmdane	r0, {r1, r5, r6}
    705c:	000015f5 	strdeq	r1, [r0], -r5
    7060:	111ea001 	tstne	lr, r1
    7064:	000000c3 	andeq	r0, r0, r3, asr #1
    7068:	000062ac 	andeq	r6, r0, ip, lsr #5
    706c:	000062a6 	andeq	r6, r0, r6, lsr #5
    7070:	00072823 	andeq	r2, r7, r3, lsr #16
    7074:	000f0200 	andeq	r0, pc, r0, lsl #4
    7078:	0a0f1800 	beq	3cd080 <__RAM_SIZE+0x2cd080>
    707c:	e5010000 	str	r0, [r1, #-0]
    7080:	06dd111e 			; <UNDEFINED> instruction: 0x06dd111e
    7084:	62d90000 	sbcsvs	r0, r9, #0
    7088:	62d50000 	sbcsvs	r0, r5, #0
    708c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    7098:	00000f25 	andeq	r0, r0, r5, lsr #30
    709c:	0009db18 	andeq	sp, r9, r8, lsl fp
    70a0:	1ee60100 	cdpne	1, 14, cr0, cr6, cr0, {0}
    70a4:	00039111 	andeq	r9, r3, r1, lsl r1
    70a8:	0062f900 	rsbeq	pc, r2, r0, lsl #18
    70ac:	0062f700 	rsbeq	pc, r2, r0, lsl #14
    70b0:	001d0000 	andseq	r0, sp, r0
    70b4:	f2000000 	vhadd.s8	d0, d0, d0
    70b8:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    70bc:	00000000 	andeq	r0, r0, r0
    70c0:	00003800 	andeq	r3, r0, r0, lsl #16
    70c4:	0000001d 	andeq	r0, r0, sp, lsl r0
    70c8:	00149100 	andseq	r9, r4, r0, lsl #2
    70cc:	00001d00 	andeq	r1, r0, r0, lsl #26
    70d0:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    70d4:	21000000 	mrscs	r0, (UNDEF: 0)
    70d8:	001a6b01 	andseq	r6, sl, r1, lsl #22
    70dc:	1e250100 	sufnes	f0, f5, f0
    70e0:	01190110 	tsteq	r9, r0, lsl r1
	...
    70ec:	630c0000 	movwvs	r0, #49152	; 0xc000
    70f0:	7d010000 	stcvc	0, cr0, [r1, #-0]
    70f4:	1b000010 	blne	713c <__HEAP_SIZE+0x613c>
    70f8:	0000240a 	andeq	r2, r0, sl, lsl #8
    70fc:	341e2501 	ldrcc	r2, [lr], #-1281	; 0xfffffaff
    7100:	0000012f 	andeq	r0, r0, pc, lsr #2
    7104:	00006334 	andeq	r6, r0, r4, lsr r3
    7108:	0000632c 	andeq	r6, r0, ip, lsr #6
    710c:	0018161b 	andseq	r1, r8, fp, lsl r6
    7110:	1e260100 	sufnes	f0, f6, f0
    7114:	0000d931 	andeq	sp, r0, r1, lsr r9
    7118:	00636f00 	rsbeq	r6, r3, r0, lsl #30
    711c:	00636b00 	rsbeq	r6, r3, r0, lsl #22
    7120:	14eb1b00 	strbtne	r1, [fp], #2816	; 0xb00
    7124:	27010000 	strcs	r0, [r1, -r0]
    7128:	00d9311e 	sbcseq	r3, r9, lr, lsl r1
    712c:	63970000 	orrsvs	r0, r7, #0
    7130:	638d0000 	orrvs	r0, sp, #0
    7134:	8c1b0000 	ldchi	0, cr0, [fp], {-0}
    7138:	0100001f 	tsteq	r0, pc, lsl r0
    713c:	15331e28 	ldrne	r1, [r3, #-3624]!	; 0xfffff1d8
    7140:	e600000e 	str	r0, [r0], -lr
    7144:	dc000063 	stcle	0, cr0, [r0], {99}	; 0x63
    7148:	1b000063 	blne	72dc <__HEAP_SIZE+0x62dc>
    714c:	000020e1 	andeq	r2, r0, r1, ror #1
    7150:	331e2901 	tstcc	lr, #16384	; 0x4000
    7154:	0000014a 	andeq	r0, r0, sl, asr #2
    7158:	0000642f 	andeq	r6, r0, pc, lsr #8
    715c:	0000642b 	andeq	r6, r0, fp, lsr #8
    7160:	001a1918 	andseq	r1, sl, r8, lsl r9
    7164:	1e2b0100 	sufnee	f0, f3, f0
    7168:	00011914 	andeq	r1, r1, r4, lsl r9
    716c:	00645300 	rsbeq	r5, r4, r0, lsl #6
    7170:	00644f00 	rsbeq	r4, r4, r0, lsl #30
    7174:	21531800 	cmpcs	r3, r0, lsl #16
    7178:	2b010000 	blcs	47180 <__HEAP_SIZE+0x46180>
    717c:	01191d1e 	tsteq	r9, lr, lsl sp
    7180:	64760000 	ldrbtvs	r0, [r6], #-0
    7184:	64720000 	ldrbtvs	r0, [r2], #-0
    7188:	4e180000 	cdpmi	0, 1, cr0, cr8, cr0, {0}
    718c:	0100001e 	tsteq	r0, lr, lsl r0
    7190:	192e1e2b 	stmdbne	lr!, {r0, r1, r3, r5, r9, sl, fp, ip}
    7194:	9a000001 	bls	71a0 <__HEAP_SIZE+0x61a0>
    7198:	94000064 	strls	r0, [r0], #-100	; 0xffffff9c
    719c:	1d000064 	stcne	0, cr0, [r0, #-400]	; 0xfffffe70
    71a0:	00000000 	andeq	r0, r0, r0
    71a4:	00002628 	andeq	r2, r0, r8, lsr #12
    71a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    71ac:	0037f200 	eorseq	pc, r7, r0, lsl #4
    71b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    71b4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    71b8:	001d0000 	andseq	r0, sp, r0
    71bc:	cf000000 	svcgt	0x00000000
    71c0:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    71c4:	00000000 	andeq	r0, r0, r0
    71c8:	000037f2 	strdeq	r3, [r0], -r2
    71cc:	0000001d 	andeq	r0, r0, sp, lsl r0
    71d0:	00380000 	eorseq	r0, r8, r0
    71d4:	00001d00 	andeq	r1, r0, r0, lsl #26
    71d8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    71dc:	001d0000 	andseq	r0, sp, r0
    71e0:	00000000 	andeq	r0, r0, r0
    71e4:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    71e8:	00000000 	andeq	r0, r0, r0
    71ec:	00000986 	andeq	r0, r0, r6, lsl #19
    71f0:	00001073 	andeq	r1, r0, r3, ror r0
    71f4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    71f8:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    71fc:	00310151 	eorseq	r0, r1, r1, asr r1
    7200:	0000001d 	andeq	r0, r0, sp, lsl r0
    7204:	00382a00 	eorseq	r2, r8, r0, lsl #20
    7208:	01210000 			; <UNDEFINED> instruction: 0x01210000
    720c:	00001abc 			; <UNDEFINED> instruction: 0x00001abc
    7210:	0e1dbe01 	cdpeq	14, 1, cr11, cr13, cr1, {0}
    7214:	0000d901 	andeq	sp, r0, r1, lsl #18
	...
    7220:	0064c600 	rsbeq	ip, r4, r0, lsl #12
    7224:	11860100 	orrne	r0, r6, r0, lsl #2
    7228:	0a1b0000 	beq	6c7230 <__RAM_SIZE+0x5c7230>
    722c:	01000024 	tsteq	r0, r4, lsr #32
    7230:	2f331dbe 	svccs	0x00331dbe
    7234:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
    7238:	e6000064 	str	r0, [r0], -r4, rrx
    723c:	1b000064 	blne	73d4 <__HEAP_SIZE+0x63d4>
    7240:	000017ad 	andeq	r1, r0, sp, lsr #15
    7244:	321dbf01 	andscc	fp, sp, #1, 30
    7248:	00000119 	andeq	r0, r0, r9, lsl r1
    724c:	00006529 	andeq	r6, r0, r9, lsr #10
    7250:	00006525 	andeq	r6, r0, r5, lsr #10
    7254:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    7258:	1dc00100 	stfnee	f0, [r0]
    725c:	00014a32 	andeq	r4, r1, r2, lsr sl
    7260:	00655500 	rsbeq	r5, r5, r0, lsl #10
    7264:	00654700 	rsbeq	r4, r5, r0, lsl #14
    7268:	23e81800 	mvncs	r1, #0, 16
    726c:	c2010000 	andgt	r0, r1, #0
    7270:	00d9121d 	sbcseq	r1, r9, sp, lsl r2
    7274:	65b70000 	ldrvs	r0, [r7, #0]!
    7278:	65b30000 	ldrvs	r0, [r3, #0]!
    727c:	53180000 	tstpl	r8, #0
    7280:	01000021 	tsteq	r0, r1, lsr #32
    7284:	19141dc3 	ldmdbne	r4, {r0, r1, r6, r7, r8, sl, fp, ip}
    7288:	d9000001 	stmdble	r0, {r0}
    728c:	d5000065 	strle	r0, [r0, #-101]	; 0xffffff9b
    7290:	18000065 	stmdane	r0, {r0, r2, r5, r6}
    7294:	00001e4e 	andeq	r1, r0, lr, asr #28
    7298:	251dc301 	ldrcs	ip, [sp, #-769]	; 0xfffffcff
    729c:	00000119 	andeq	r0, r0, r9, lsl r1
    72a0:	000065fd 	strdeq	r6, [r0], -sp
    72a4:	000065f7 	strdeq	r6, [r0], -r7
    72a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    72ac:	00262800 	eoreq	r2, r6, r0, lsl #16
    72b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    72b4:	37f20000 	ldrbcc	r0, [r2, r0]!
    72b8:	001d0000 	andseq	r0, sp, r0
    72bc:	00000000 	andeq	r0, r0, r0
    72c0:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    72c4:	00000000 	andeq	r0, r0, r0
    72c8:	000024cf 	andeq	r2, r0, pc, asr #9
    72cc:	0000001d 	andeq	r0, r0, sp, lsl r0
    72d0:	0037f200 	eorseq	pc, r7, r0, lsl #4
    72d4:	00001d00 	andeq	r1, r0, r0, lsl #26
    72d8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    72dc:	001d0000 	andseq	r0, sp, r0
    72e0:	00000000 	andeq	r0, r0, r0
    72e4:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    72e8:	00000000 	andeq	r0, r0, r0
    72ec:	00003800 	andeq	r3, r0, r0, lsl #16
    72f0:	0000001e 	andeq	r0, r0, lr, lsl r0
    72f4:	00098600 	andeq	r8, r9, r0, lsl #12
    72f8:	00117c00 	andseq	r7, r1, r0, lsl #24
    72fc:	50011f00 	andpl	r1, r1, r0, lsl #30
    7300:	1f007502 	svcne	0x00007502
    7304:	31015101 	tstcc	r1, r1, lsl #2
    7308:	00001d00 	andeq	r1, r0, r0, lsl #26
    730c:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    7310:	24000000 	strcs	r0, [r0], #-0
    7314:	000e3001 	andeq	r3, lr, r1
    7318:	1da50100 	stfnes	f0, [r5]
    731c:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    7328:	7d020000 	stcvc	0, cr0, [r2, #-0]
    732c:	11bb0100 			; <UNDEFINED> instruction: 0x11bb0100
    7330:	c2180000 	andsgt	r0, r8, #0
    7334:	01000022 	tsteq	r0, r2, lsr #32
    7338:	66111da7 	ldrvs	r1, [r1], -r7, lsr #27
    733c:	2b000006 	blcs	735c <__HEAP_SIZE+0x635c>
    7340:	29000066 	stmdbcs	r0, {r1, r2, r5, r6}
    7344:	00000066 	andeq	r0, r0, r6, rrx
    7348:	1cc50124 	stfnee	f0, [r5], {36}	; 0x24
    734c:	91010000 	mrsls	r0, (UNDEF: 1)
    7350:	4a010c1d 	bmi	4a3cc <__HEAP_SIZE+0x493cc>
    7354:	00000001 	andeq	r0, r0, r1
    7358:	00000000 	andeq	r0, r0, r0
    735c:	02000000 	andeq	r0, r0, #0
    7360:	f001007d 			; <UNDEFINED> instruction: 0xf001007d
    7364:	18000011 	stmdane	r0, {r0, r4}
    7368:	00000c05 	andeq	r0, r0, r5, lsl #24
    736c:	101d9301 	andsne	r9, sp, r1, lsl #6
    7370:	0000014a 	andeq	r0, r0, sl, asr #2
    7374:	00006640 	andeq	r6, r0, r0, asr #12
    7378:	0000663e 	andeq	r6, r0, lr, lsr r6
    737c:	c5012200 	strgt	r2, [r1, #-512]	; 0xfffffe00
    7380:	01000012 	tsteq	r0, r2, lsl r0
    7384:	010a1a79 	tsteq	sl, r9, ror sl
	...
    7390:	00006653 	andeq	r6, r0, r3, asr r6
    7394:	0012b701 	andseq	fp, r2, r1, lsl #14
    7398:	1eca1b00 	vdivne.f64	d17, d10, d0
    739c:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    73a0:	03b3421a 			; <UNDEFINED> instruction: 0x03b3421a
    73a4:	66890000 	strvs	r0, [r9], r0
    73a8:	667f0000 	ldrbtvs	r0, [pc], -r0
    73ac:	311b0000 	tstcc	fp, r0
    73b0:	0100001e 	tsteq	r0, lr, lsl r0
    73b4:	2f3b1a7a 	svccs	0x003b1a7a
    73b8:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
    73bc:	c8000066 	stmdagt	r0, {r1, r2, r5, r6}
    73c0:	18000066 	stmdane	r0, {r1, r2, r5, r6}
    73c4:	000022c2 	andeq	r2, r0, r2, asr #5
    73c8:	171a7c01 	ldrne	r7, [sl, -r1, lsl #24]
    73cc:	00000671 	andeq	r0, r0, r1, ror r6
    73d0:	00006704 	andeq	r6, r0, r4, lsl #14
    73d4:	000066fa 	strdeq	r6, [r0], -sl
    73d8:	00211418 	eoreq	r1, r1, r8, lsl r4
    73dc:	1a7d0100 	bne	1f477e4 <__RAM_SIZE+0x1e477e4>
    73e0:	00012f15 	andeq	r2, r1, r5, lsl pc
    73e4:	00674500 	rsbeq	r4, r7, r0, lsl #10
    73e8:	00674300 	rsbeq	r4, r7, r0, lsl #6
    73ec:	1dd01800 	ldclne	8, cr1, [r0]
    73f0:	7d010000 	stcvc	0, cr0, [r1, #-0]
    73f4:	012f2c1a 			; <UNDEFINED> instruction: 0x012f2c1a
    73f8:	67600000 	strbvs	r0, [r0, -r0]!
    73fc:	67580000 	ldrbvs	r0, [r8, -r0]
    7400:	d8250000 	stmdale	r5!, {}	; <UNPREDICTABLE>
    7404:	01000014 	tsteq	r0, r4, lsl r0
    7408:	451b1a7e 	ldrmi	r1, [fp, #-2686]	; 0xfffff582
    740c:	01000001 	tsteq	r0, r1
    7410:	0000001c 	andeq	r0, r0, ip, lsl r0
    7414:	00000000 	andeq	r0, r0, r0
    7418:	0012a600 	andseq	sl, r2, r0, lsl #12
    741c:	09db1800 	ldmibeq	fp, {fp, ip}^
    7420:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    7424:	0391191a 	orrseq	r1, r1, #425984	; 0x68000
    7428:	67980000 	ldrvs	r0, [r8, r0]
    742c:	67960000 	ldrvs	r0, [r6, r0]
    7430:	20000000 	andcs	r0, r0, r0
    7434:	00000000 	andeq	r0, r0, r0
    7438:	000037d4 	ldrdeq	r3, [r0], -r4
    743c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7440:	00000075 	andeq	r0, r0, r5, ror r0
    7444:	0eb30121 	frdeqsp	f0, f3, f1
    7448:	1b010000 	blne	47450 <__HEAP_SIZE+0x46450>
    744c:	1901101a 	stmdbne	r1, {r1, r3, r4, ip}
    7450:	a4000001 	strge	r0, [r0], #-1
    7454:	2410002c 	ldrcs	r0, [r0], #-44	; 0xffffffd4
    7458:	ab10002d 	blge	407514 <__RAM_SIZE+0x307514>
    745c:	01000067 	tsteq	r0, r7, rrx
    7460:	0000134a 	andeq	r1, r0, sl, asr #6
    7464:	001eca1b 	andseq	ip, lr, fp, lsl sl
    7468:	1a1b0100 	bne	6c7870 <__RAM_SIZE+0x5c7870>
    746c:	0003b33c 	andeq	fp, r3, ip, lsr r3
    7470:	0067f300 	rsbeq	pc, r7, r0, lsl #6
    7474:	0067e300 	rsbeq	lr, r7, r0, lsl #6
    7478:	22c21800 	sbccs	r1, r2, #0, 16
    747c:	1d010000 	stcne	0, cr0, [r1, #-0]
    7480:	0671171a 			; <UNDEFINED> instruction: 0x0671171a
    7484:	68660000 	stmdavs	r6!, {}^	; <UNPREDICTABLE>
    7488:	68560000 	ldmdavs	r6, {}^	; <UNPREDICTABLE>
    748c:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7490:	0100001a 	tsteq	r0, sl, lsl r0
    7494:	19141a1e 	ldmdbne	r4, {r1, r2, r3, r4, r9, fp, ip}
    7498:	d1000001 	tstle	r0, r1
    749c:	c9000068 	stmdbgt	r0, {r3, r5, r6}
    74a0:	1c000068 	stcne	0, cr0, [r0], {104}	; 0x68
    74a4:	10002cde 	ldrdne	r2, [r0], -lr
    74a8:	10002d0e 	andne	r2, r0, lr, lsl #26
    74ac:	00001339 	andeq	r1, r0, r9, lsr r3
    74b0:	0009db18 	andeq	sp, r9, r8, lsl fp
    74b4:	1a4a0100 	bne	12878bc <__RAM_SIZE+0x11878bc>
    74b8:	00039115 	andeq	r9, r3, r5, lsl r1
    74bc:	00690b00 	rsbeq	r0, r9, r0, lsl #22
    74c0:	00690900 	rsbeq	r0, r9, r0, lsl #18
    74c4:	c8200000 	stmdagt	r0!, {}	; <UNPREDICTABLE>
    74c8:	d410002c 	ldrle	r0, [r0], #-44	; 0xffffffd4
    74cc:	1f000037 	svcne	0x00000037
    74d0:	75025001 	strvc	r5, [r2, #-1]
    74d4:	21000000 	mrscs	r0, (UNDEF: 0)
    74d8:	00124701 	andseq	r4, r2, r1, lsl #14
    74dc:	19b40100 	ldmibne	r4!, {r8}
    74e0:	01190110 	tsteq	r9, r0, lsl r1
	...
    74ec:	691e0000 	ldmdbvs	lr, {}	; <UNPREDICTABLE>
    74f0:	dd010000 	stcle	0, cr0, [r1, #-0]
    74f4:	1b000013 	blne	7548 <__HEAP_SIZE+0x6548>
    74f8:	00001eca 	andeq	r1, r0, sl, asr #29
    74fc:	3919b401 	ldmdbcc	r9, {r0, sl, ip, sp, pc}
    7500:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    7504:	0000696a 	andeq	r6, r0, sl, ror #18
    7508:	00006956 	andeq	r6, r0, r6, asr r9
    750c:	00200018 	eoreq	r0, r0, r8, lsl r0
    7510:	19b60100 	ldmibne	r6!, {r8}
    7514:	00067117 	andeq	r7, r6, r7, lsl r1
    7518:	0069f700 	rsbeq	pc, r9, r0, lsl #14
    751c:	0069e300 	rsbeq	lr, r9, r0, lsl #6
    7520:	1a191800 	bne	64d528 <__RAM_SIZE+0x54d528>
    7524:	b7010000 	strlt	r0, [r1, -r0]
    7528:	01191419 	tsteq	r9, r9, lsl r4
    752c:	6a760000 	bvs	1d87534 <__RAM_SIZE+0x1c87534>
    7530:	6a700000 	bvs	1c07538 <__RAM_SIZE+0x1b07538>
    7534:	001c0000 	andseq	r0, ip, r0
    7538:	00000000 	andeq	r0, r0, r0
    753c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    7540:	18000013 	stmdane	r0, {r0, r1, r4}
    7544:	000009db 	ldrdeq	r0, [r0], -fp
    7548:	1519e201 	ldrne	lr, [r9, #-513]	; 0xfffffdff
    754c:	00000391 	muleq	r0, r1, r3
    7550:	00006aa4 	andeq	r6, r0, r4, lsr #21
    7554:	00006aa2 	andeq	r6, r0, r2, lsr #21
    7558:	00002000 	andeq	r2, r0, r0
    755c:	37d40000 	ldrbcc	r0, [r4, r0]
    7560:	011f0000 	tsteq	pc, r0
    7564:	00750250 	rsbseq	r0, r5, r0, asr r2
    7568:	01240000 			; <UNDEFINED> instruction: 0x01240000
    756c:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    7570:	10198c01 	andsne	r8, r9, r1, lsl #24
    7574:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    7580:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7584:	00141201 	andseq	r1, r4, r1, lsl #4
    7588:	1a191800 	bne	64d590 <__RAM_SIZE+0x54d590>
    758c:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    7590:	01191419 	tsteq	r9, r9, lsl r4
    7594:	6ab90000 	bvs	fee4759c <__StackTop+0xc6d4759c>
    7598:	6ab70000 	bvs	fedc75a0 <__StackTop+0xc6cc75a0>
    759c:	24000000 	strcs	r0, [r0], #-0
    75a0:	00221501 	eoreq	r1, r2, r1, lsl #10
    75a4:	19730100 	ldmdbne	r3!, {r8}^
    75a8:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    75b4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    75b8:	145c0100 	ldrbne	r0, [ip], #-256	; 0xffffff00
    75bc:	151b0000 	ldrne	r0, [fp, #-0]
    75c0:	01000014 	tsteq	r0, r4, lsl r0
    75c4:	193f1973 	ldmdbne	pc!, {r0, r1, r4, r5, r6, r8, fp, ip}	; <UNPREDICTABLE>
    75c8:	d5000001 	strle	r0, [r0, #-1]
    75cc:	cd00006a 	stcgt	0, cr0, [r0, #-424]	; 0xfffffe58
    75d0:	1800006a 	stmdane	r0, {r1, r3, r5, r6}
    75d4:	00001a19 	andeq	r1, r0, r9, lsl sl
    75d8:	16197501 	ldrne	r7, [r9], -r1, lsl #10
    75dc:	000003a7 	andeq	r0, r0, r7, lsr #7
    75e0:	00006b15 	andeq	r6, r0, r5, lsl fp
    75e4:	00006b0f 	andeq	r6, r0, pc, lsl #22
    75e8:	f1012400 			; <UNDEFINED> instruction: 0xf1012400
    75ec:	01000012 	tsteq	r0, r2, lsl r0
    75f0:	01161950 	tsteq	r6, r0, asr r9
    75f4:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    7600:	01007d02 	tsteq	r0, r2, lsl #26
    7604:	00001491 	muleq	r0, r1, r4
    7608:	001a1918 	andseq	r1, sl, r8, lsl r9
    760c:	19520100 	ldmdbne	r2, {r8}^
    7610:	0003a71a 	andeq	sl, r3, sl, lsl r7
    7614:	006b4200 	rsbeq	r4, fp, r0, lsl #4
    7618:	006b4000 	rsbeq	r4, fp, r0
    761c:	0e260000 	cdpeq	0, 2, cr0, cr6, cr0, {0}
    7620:	0100001c 	tsteq	r0, ip, lsl r0
    7624:	010d1938 	tsteq	sp, r8, lsr r9
    7628:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
    762c:	100022dc 	ldrdne	r2, [r0], -ip
    7630:	01007d02 	tsteq	r0, r2, lsl #26
    7634:	0021301a 	eoreq	r3, r1, sl, lsl r0
    7638:	19030100 	stmdbne	r3, {r8}
    763c:	254a0111 	strbcs	r0, [sl, #-273]	; 0xfffffeef
    7640:	256e1000 	strbcs	r1, [lr, #-0]!
    7644:	6b551000 	blvs	154b64c <__RAM_SIZE+0x144b64c>
    7648:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    764c:	1b000014 	blne	76a4 <__HEAP_SIZE+0x66a4>
    7650:	000022c2 	andeq	r2, r0, r2, asr #5
    7654:	27190301 	ldrcs	r0, [r9, -r1, lsl #6]
    7658:	00000666 	andeq	r0, r0, r6, ror #12
    765c:	00006b81 	andeq	r6, r0, r1, lsl #23
    7660:	00006b75 	andeq	r6, r0, r5, ror fp
    7664:	0025601d 	eoreq	r6, r5, sp, lsl r0
    7668:	00383810 	eorseq	r3, r8, r0, lsl r8
    766c:	25661e00 	strbcs	r1, [r6, #-3584]!	; 0xfffff200
    7670:	38381000 	ldmdacc	r8!, {ip}
    7674:	14f40000 	ldrbtne	r0, [r4], #0
    7678:	011f0000 	tsteq	pc, r0
    767c:	00740250 	rsbseq	r0, r4, r0, asr r2
    7680:	256c1d00 	strbcs	r1, [ip, #-3328]!	; 0xfffff300
    7684:	38381000 	ldmdacc	r8!, {ip}
    7688:	21000000 	mrscs	r0, (UNDEF: 0)
    768c:	0018c101 	andseq	ip, r8, r1, lsl #2
    7690:	18e30100 	stmiane	r3!, {r8}^
    7694:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    76a0:	6bcb0000 	blvs	ff2c76a8 <__StackTop+0xc71c76a8>
    76a4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    76a8:	1b000015 	blne	7704 <__HEAP_SIZE+0x6704>
    76ac:	00001d55 	andeq	r1, r0, r5, asr sp
    76b0:	3b18e301 	blcc	6402bc <__RAM_SIZE+0x5402bc>
    76b4:	000003a7 	andeq	r0, r0, r7, lsr #7
    76b8:	00006bef 	andeq	r6, r0, pc, ror #23
    76bc:	00006beb 	andeq	r6, r0, fp, ror #23
    76c0:	0022c218 	eoreq	ip, r2, r8, lsl r2
    76c4:	18e50100 	stmiane	r5!, {r8}^
    76c8:	00066611 	andeq	r6, r6, r1, lsl r6
    76cc:	006c0f00 	rsbeq	r0, ip, r0, lsl #30
    76d0:	006c0d00 	rsbeq	r0, ip, r0, lsl #26
    76d4:	1ff21800 	svcne	0x00f21800
    76d8:	e6010000 	str	r0, [r1], -r0
    76dc:	01601318 	cmneq	r0, r8, lsl r3
    76e0:	6c240000 	stcvs	0, cr0, [r4], #-0
    76e4:	6c220000 	stcvs	0, cr0, [r2], #-0
    76e8:	05180000 	ldreq	r0, [r8, #-0]
    76ec:	0100000c 	tsteq	r0, ip
    76f0:	2f1518e7 	svccs	0x001518e7
    76f4:	3a000001 	bcc	7700 <__HEAP_SIZE+0x6700>
    76f8:	3800006c 	stmdacc	r0, {r2, r3, r5, r6}
    76fc:	1d00006c 	stcne	0, cr0, [r0, #-432]	; 0xfffffe50
    7700:	00000000 	andeq	r0, r0, r0
    7704:	0000157c 	andeq	r1, r0, ip, ror r5
    7708:	218c2700 	orrcs	r2, ip, r0, lsl #14
    770c:	a3010000 	movwge	r0, #4096	; 0x1000
    7710:	29012318 	stmdbcs	r1, {r3, r4, r8, r9, sp}
	...
    771c:	02000000 	andeq	r0, r0, #0
    7720:	c501007d 	strgt	r0, [r1, #-125]	; 0xffffff83
    7724:	1b000015 	blne	7780 <__HEAP_SIZE+0x6780>
    7728:	00001649 	andeq	r1, r0, r9, asr #12
    772c:	4f18a301 	svcmi	0x0018a301
    7730:	000015c5 	andeq	r1, r0, r5, asr #11
    7734:	00006c51 	andeq	r6, r0, r1, asr ip
    7738:	00006c4d 	andeq	r6, r0, sp, asr #24
    773c:	001fd318 	andseq	sp, pc, r8, lsl r3	; <UNPREDICTABLE>
    7740:	18a50100 	stmiane	r5!, {r8}
    7744:	00002920 	andeq	r2, r0, r0, lsr #18
    7748:	006c7700 	rsbeq	r7, ip, r0, lsl #14
    774c:	006c6f00 	rsbeq	r6, ip, r0, lsl #30
    7750:	04070000 	streq	r0, [r7], #-0
    7754:	000000d4 	ldrdeq	r0, [r0], -r4
    7758:	0023b21a 	eoreq	fp, r3, sl, lsl r2
    775c:	179b0100 	ldrne	r0, [fp, r0, lsl #2]
    7760:	2570010d 	ldrbcs	r0, [r0, #-269]!	; 0xfffffef3
    7764:	25bc1000 	ldrcs	r1, [ip, #0]!
    7768:	6cb01000 	ldcvs	0, cr1, [r0]
    776c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    7770:	28000016 	stmdacs	r0, {r1, r2, r4}
    7774:	000004f8 	strdeq	r0, [r0], -r8
    7778:	0022c218 	eoreq	ip, r2, r8, lsl r2
    777c:	17a10100 	strne	r0, [r1, r0, lsl #2]!
    7780:	00066611 	andeq	r6, r6, r1, lsl r6
    7784:	006cde00 	rsbeq	sp, ip, r0, lsl #28
    7788:	006cdc00 	rsbeq	sp, ip, r0, lsl #24
    778c:	257c1d00 	ldrbcs	r1, [ip, #-3328]!	; 0xfffff300
    7790:	37f21000 	ldrbcc	r1, [r2, r0]!
    7794:	881e0000 	ldmdahi	lr, {}	; <UNPREDICTABLE>
    7798:	d4100025 	ldrle	r0, [r0], #-37	; 0xffffffdb
    779c:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    77a0:	1f000016 	svcne	0x00000016
    77a4:	74025001 	strvc	r5, [r2], #-1
    77a8:	9c1d0004 	ldcls	0, cr0, [sp], {4}
    77ac:	00100025 	andseq	r0, r0, r5, lsr #32
    77b0:	20000038 	andcs	r0, r0, r8, lsr r0
    77b4:	100025a2 	andne	r2, r0, r2, lsr #11
    77b8:	000014a7 	andeq	r1, r0, r7, lsr #9
    77bc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    77c0:	00000074 	andeq	r0, r0, r4, ror r0
    77c4:	234e1a00 	movtcs	r1, #59904	; 0xea00
    77c8:	7b010000 	blvc	477d0 <__HEAP_SIZE+0x467d0>
    77cc:	c4010d17 	strgt	r0, [r1], #-3351	; 0xfffff2e9
    77d0:	2c100023 	ldccs	0, cr0, [r0], {35}	; 0x23
    77d4:	f1100024 			; <UNDEFINED> instruction: 0xf1100024
    77d8:	0100006c 	tsteq	r0, ip, rrx
    77dc:	000016f3 	strdeq	r1, [r0], -r3
    77e0:	00147218 	andseq	r7, r4, r8, lsl r2
    77e4:	177d0100 	ldrbne	r0, [sp, -r0, lsl #2]!
    77e8:	00012f11 	andeq	r2, r1, r1, lsl pc
    77ec:	006d1500 	rsbeq	r1, sp, r0, lsl #10
    77f0:	006d1100 	rsbeq	r1, sp, r0, lsl #2
    77f4:	23d81e00 	bicscs	r1, r8, #0, 28
    77f8:	38461000 	stmdacc	r6, {ip}^
    77fc:	16890000 	strne	r0, [r9], r0
    7800:	011f0000 	tsteq	pc, r0
    7804:	00740f50 	rsbseq	r0, r4, r0, asr pc
    7808:	00742433 	rsbseq	r2, r4, r3, lsr r4
    780c:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
    7810:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
    7814:	e61e0022 	ldr	r0, [lr], -r2, lsr #32
    7818:	46100023 	ldrmi	r0, [r0], -r3, lsr #32
    781c:	9d000038 	stcls	0, cr0, [r0, #-224]	; 0xffffff20
    7820:	1f000016 	svcne	0x00000016
    7824:	75025001 	strvc	r5, [r2, #-1]
    7828:	ee1e0000 	cdp	0, 1, cr0, cr14, cr0, {0}
    782c:	46100023 	ldrmi	r0, [r0], -r3, lsr #32
    7830:	b1000038 	tstlt	r0, r8, lsr r0
    7834:	1f000016 	svcne	0x00000016
    7838:	74025001 	strvc	r5, [r2], #-1
    783c:	f41e0000 			; <UNDEFINED> instruction: 0xf41e0000
    7840:	46100023 	ldrmi	r0, [r0], -r3, lsr #32
    7844:	c8000038 	stmdagt	r0, {r3, r4, r5}
    7848:	1f000016 	svcne	0x00000016
    784c:	03055001 	movweq	r5, #20481	; 0x5001
    7850:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
    7854:	23fa1e00 	mvnscs	r1, #0, 28
    7858:	38461000 	stmdacc	r6, {ip}^
    785c:	16df0000 	ldrbne	r0, [pc], r0
    7860:	011f0000 	tsteq	pc, r0
    7864:	2c030550 	cfstr32cs	mvfx0, [r3], {80}	; 0x50
    7868:	0038008b 	eorseq	r0, r8, fp, lsl #1
    786c:	00240020 	eoreq	r0, r4, r0, lsr #32
    7870:	00384610 	eorseq	r4, r8, r0, lsl r6
    7874:	50011f00 	andpl	r1, r1, r0, lsl #30
    7878:	8b100305 	blhi	408494 <__RAM_SIZE+0x308494>
    787c:	00003800 	andeq	r3, r0, r0, lsl #16
    7880:	19ec0124 	stmibne	ip!, {r2, r5, r8}^
    7884:	fc010000 	stc2	0, cr0, [r1], {-0}
    7888:	e7011616 	smlad	r1, r6, r6, r1
    788c:	5c000005 	stcpl	0, cr0, [r0], {5}
    7890:	a410002c 	ldrge	r0, [r0], #-44	; 0xffffffd4
    7894:	0210002c 	andseq	r0, r0, #44	; 0x2c
    7898:	3601007d 			; <UNDEFINED> instruction: 0x3601007d
    789c:	25000017 	strcs	r0, [r0, #-23]	; 0xffffffe9
    78a0:	000021f5 	strdeq	r2, [r0], -r5
    78a4:	1f170001 	svcne	0x00170001
    78a8:	00000145 	andeq	r0, r0, r5, asr #2
    78ac:	16c31801 	strbne	r1, [r3], r1, lsl #16
    78b0:	03010000 	movweq	r0, #4096	; 0x1000
    78b4:	05e71a17 	strbeq	r1, [r7, #2583]!	; 0xa17
    78b8:	6d380000 	ldcvs	0, cr0, [r8, #-0]
    78bc:	6d340000 	ldcvs	0, cr0, [r4, #-0]
    78c0:	1a000000 	bne	78c8 <__HEAP_SIZE+0x68c8>
    78c4:	00001a8f 	andeq	r1, r0, pc, lsl #21
    78c8:	08167401 	ldmdaeq	r6, {r0, sl, ip, sp, lr}
    78cc:	0029c401 	eoreq	ip, r9, r1, lsl #8
    78d0:	0029fc10 	eoreq	pc, r9, r0, lsl ip	; <UNPREDICTABLE>
    78d4:	006d5710 	rsbeq	r5, sp, r0, lsl r7
    78d8:	17c50100 	strbne	r0, [r5, r0, lsl #2]
    78dc:	841b0000 	ldrhi	r0, [fp], #-0
    78e0:	0100001e 	tsteq	r0, lr, lsl r0
    78e4:	9f081674 	svcls	0x00081674
    78e8:	7b000000 	blvc	78f0 <__HEAP_SIZE+0x68f0>
    78ec:	7700006d 	strvc	r0, [r0, -sp, rrx]
    78f0:	2300006d 	movwcs	r0, #109	; 0x6d
    78f4:	00000638 	andeq	r0, r0, r8, lsr r6
    78f8:	000017b2 			; <UNDEFINED> instruction: 0x000017b2
    78fc:	0015cb18 	andseq	ip, r5, r8, lsl fp
    7900:	16bd0100 	ldrtne	r0, [sp], r0, lsl #2
    7904:	00014a18 	andeq	r4, r1, r8, lsl sl
    7908:	006da200 	rsbeq	sl, sp, r0, lsl #4
    790c:	006d9c00 	rsbeq	r9, sp, r0, lsl #24
    7910:	29cc1d00 	stmibcs	ip, {r8, sl, fp, ip}^
    7914:	25df1000 	ldrbcs	r1, [pc]	; 791c <__HEAP_SIZE+0x691c>
    7918:	e61d0000 	ldr	r0, [sp], -r0
    791c:	28100029 	ldmdacs	r0, {r0, r3, r5}
    7920:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    7924:	100029ea 	andne	r2, r0, sl, ror #19
    7928:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    792c:	0029f21d 	eoreq	pc, r9, sp, lsl r2	; <UNPREDICTABLE>
    7930:	00385510 	eorseq	r5, r8, r0, lsl r5
    7934:	29f61d00 	ldmibcs	r6!, {r8, sl, fp, ip}^
    7938:	24cf1000 	strbcs	r1, [pc], #0	; 7940 <__HEAP_SIZE+0x6940>
    793c:	1d000000 	stcne	0, cr0, [r0, #-0]
    7940:	100029d4 	ldrdne	r2, [r0], -r4
    7944:	000015cb 	andeq	r1, r0, fp, asr #11
    7948:	0029e01d 	eoreq	lr, r9, sp, lsl r0
    794c:	00382a10 	eorseq	r2, r8, r0, lsl sl
    7950:	01290000 			; <UNDEFINED> instruction: 0x01290000
    7954:	00001236 	andeq	r1, r0, r6, lsr r2
    7958:	0615e301 	ldreq	lr, [r5], -r1, lsl #6
    795c:	002c5001 	eoreq	r5, ip, r1
    7960:	002c5c10 	eoreq	r5, ip, r0, lsl ip
    7964:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7968:	ac012101 	stfges	f2, [r1], {1}
    796c:	01000011 	tsteq	r0, r1, lsl r0
    7970:	010c159e 			; <UNDEFINED> instruction: 0x010c159e
    7974:	00000119 	andeq	r0, r0, r9, lsl r1
    7978:	10002bd4 	ldrdne	r2, [r0], -r4
    797c:	10002c50 	andne	r2, r0, r0, asr ip
    7980:	00006dcb 	andeq	r6, r0, fp, asr #27
    7984:	00189201 	andseq	r9, r8, r1, lsl #4
    7988:	1c641b00 			; <UNDEFINED> instruction: 0x1c641b00
    798c:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    7990:	18983415 	ldmne	r8, {r0, r2, r4, sl, ip, sp}
    7994:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    7998:	6deb0000 	stclvs	0, cr0, [fp]
    799c:	e01b0000 	ands	r0, fp, r0
    79a0:	01000020 	tsteq	r0, r0, lsr #32
    79a4:	a335159f 	teqge	r5, #666894336	; 0x27c00000
    79a8:	95000018 	strls	r0, [r0, #-24]	; 0xffffffe8
    79ac:	9100006e 	tstls	r0, lr, rrx
    79b0:	1800006e 	stmdane	r0, {r1, r2, r3, r5, r6}
    79b4:	00001a19 	andeq	r1, r0, r9, lsl sl
    79b8:	1015a101 	andsne	sl, r5, r1, lsl #2
    79bc:	00000119 	andeq	r0, r0, r9, lsl r1
    79c0:	00006ebd 			; <UNDEFINED> instruction: 0x00006ebd
    79c4:	00006eb3 			; <UNDEFINED> instruction: 0x00006eb3
    79c8:	00071023 	andeq	r1, r7, r3, lsr #32
    79cc:	00187f00 	andseq	r7, r8, r0, lsl #30
    79d0:	19771800 	ldmdbne	r7!, {fp, ip}^
    79d4:	ab010000 	blge	479dc <__HEAP_SIZE+0x469dc>
    79d8:	015b1a15 	cmpeq	fp, r5, lsl sl
    79dc:	6f060000 	svcvs	0x00060000
    79e0:	6f000000 	svcvs	0x00000000
    79e4:	cd180000 	ldcgt	0, cr0, [r8, #-0]
    79e8:	01000017 	tsteq	r0, r7, lsl r0
    79ec:	5b1a15ac 	blpl	68d0a4 <__RAM_SIZE+0x58d0a4>
    79f0:	35000001 	strcc	r0, [r0, #-1]
    79f4:	2f00006f 	svccs	0x0000006f
    79f8:	2000006f 	andcs	r0, r0, pc, rrx
    79fc:	10002c3a 	andne	r2, r0, sl, lsr ip
    7a00:	000018a8 	andeq	r1, r0, r8, lsr #17
    7a04:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7a08:	00000074 	andeq	r0, r0, r4, ror r0
    7a0c:	002bde1d 	eoreq	sp, fp, sp, lsl lr
    7a10:	0037f210 	eorseq	pc, r7, r0, lsl r2	; <UNPREDICTABLE>
    7a14:	2c001d00 	stccs	13, cr1, [r0], {-0}
    7a18:	38001000 	stmdacc	r0, {ip}
    7a1c:	07000000 	streq	r0, [r0, -r0]
    7a20:	00056304 	andeq	r6, r5, r4, lsl #6
    7a24:	18920300 	ldmne	r2, {r8, r9}
    7a28:	04070000 	streq	r0, [r7], #-0
    7a2c:	0000014a 	andeq	r0, r0, sl, asr #2
    7a30:	00189d03 	andseq	r9, r8, r3, lsl #26
    7a34:	2d011700 	stccs	7, cr1, [r1, #-0]
    7a38:	01000010 	tsteq	r0, r0, lsl r0
    7a3c:	01061592 			; <UNDEFINED> instruction: 0x01061592
    7a40:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
    7a44:	10002bd4 	ldrdne	r2, [r0], -r4
    7a48:	01007d02 	tsteq	r0, r2, lsl #26
    7a4c:	000018d3 	ldrdeq	r1, [r0], -r3
    7a50:	001c6419 	andseq	r6, ip, r9, lsl r4
    7a54:	15920100 	ldrne	r0, [r2, #256]	; 0x100
    7a58:	00189836 	andseq	r9, r8, r6, lsr r8
    7a5c:	00500100 	subseq	r0, r0, r0, lsl #2
    7a60:	160b0122 	strne	r0, [fp], -r2, lsr #2
    7a64:	82010000 	andhi	r0, r1, #0
    7a68:	00010615 	andeq	r0, r1, r5, lsl r6
    7a6c:	00000000 	andeq	r0, r0, r0
    7a70:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    7a74:	0100006f 	tsteq	r0, pc, rrx
    7a78:	00001917 	andeq	r1, r0, r7, lsl r9
    7a7c:	001c641b 	andseq	r6, ip, fp, lsl r4
    7a80:	15820100 	strne	r0, [r2, #256]	; 0x100
    7a84:	0018982e 	andseq	r9, r8, lr, lsr #16
    7a88:	006f8400 	rsbeq	r8, pc, r0, lsl #8
    7a8c:	006f7e00 	rsbeq	r7, pc, r0, lsl #28
    7a90:	00001d00 	andeq	r1, r0, r0, lsl #26
    7a94:	37f20000 	ldrbcc	r0, [r2, r0]!
    7a98:	001d0000 	andseq	r0, sp, r0
    7a9c:	00000000 	andeq	r0, r0, r0
    7aa0:	00000038 	andeq	r0, r0, r8, lsr r0
    7aa4:	1a210122 	bne	847f34 <__RAM_SIZE+0x747f34>
    7aa8:	3a010000 	bcc	47ab0 <__HEAP_SIZE+0x46ab0>
    7aac:	00010615 	andeq	r0, r1, r5, lsl r6
    7ab0:	00000000 	andeq	r0, r0, r0
    7ab4:	b0000000 	andlt	r0, r0, r0
    7ab8:	0100006f 	tsteq	r0, pc, rrx
    7abc:	000019dd 	ldrdeq	r1, [r0], -sp
    7ac0:	0021631b 	eoreq	r6, r1, fp, lsl r3
    7ac4:	153a0100 	ldrne	r0, [sl, #-256]!	; 0xffffff00
    7ac8:	00038b36 	andeq	r8, r3, r6, lsr fp
    7acc:	006fd800 	rsbeq	sp, pc, r0, lsl #16
    7ad0:	006fd000 	rsbeq	sp, pc, r0
    7ad4:	092b1b00 	stmdbeq	fp!, {r8, r9, fp, ip}
    7ad8:	3b010000 	blcc	47ae0 <__HEAP_SIZE+0x46ae0>
    7adc:	015b3a15 	cmpeq	fp, r5, lsl sl
    7ae0:	70160000 	andsvc	r0, r6, r0
    7ae4:	70120000 	andsvc	r0, r2, r0
    7ae8:	9e180000 	cdpls	0, 1, cr0, cr8, cr0, {0}
    7aec:	01000017 	tsteq	r0, r7, lsl r0
    7af0:	660d153d 			; <UNDEFINED> instruction: 0x660d153d
    7af4:	39000006 	stmdbcc	r0, {r1, r2}
    7af8:	37000070 	smlsdxcc	r0, r0, r0, r0
    7afc:	23000070 	movwcs	r0, #112	; 0x70
    7b00:	000006e0 	andeq	r0, r0, r0, ror #13
    7b04:	00001991 	muleq	r0, r1, r9
    7b08:	000a0f18 	andeq	r0, sl, r8, lsl pc
    7b0c:	154f0100 	strbne	r0, [pc, #-256]	; 7a14 <__HEAP_SIZE+0x6a14>
    7b10:	0006dd05 	andeq	sp, r6, r5, lsl #26
    7b14:	00705000 	rsbseq	r5, r0, r0
    7b18:	00704c00 	rsbseq	r4, r0, r0, lsl #24
    7b1c:	f8230000 			; <UNDEFINED> instruction: 0xf8230000
    7b20:	b0000006 	andlt	r0, r0, r6
    7b24:	18000019 	stmdane	r0, {r0, r3, r4}
    7b28:	00000a0f 	andeq	r0, r0, pc, lsl #20
    7b2c:	05156201 	ldreq	r6, [r5, #-513]	; 0xfffffdff
    7b30:	000006dd 	ldrdeq	r0, [r0], -sp
    7b34:	00007072 	andeq	r7, r0, r2, ror r0
    7b38:	0000706e 	andeq	r7, r0, lr, rrx
    7b3c:	00001c00 	andeq	r1, r0, r0, lsl #24
    7b40:	00000000 	andeq	r0, r0, r0
    7b44:	19d30000 	ldmibne	r3, {}^	; <UNPREDICTABLE>
    7b48:	db180000 	blle	607b50 <__RAM_SIZE+0x507b50>
    7b4c:	01000009 	tsteq	r0, r9
    7b50:	91051563 	tstls	r5, r3, ror #10
    7b54:	92000003 	andls	r0, r0, #3
    7b58:	90000070 	andls	r0, r0, r0, ror r0
    7b5c:	00000070 	andeq	r0, r0, r0, ror r0
    7b60:	0000001d 	andeq	r0, r0, sp, lsl r0
    7b64:	00149100 	andseq	r9, r4, r0, lsl #2
    7b68:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7b6c:	000013c4 	andeq	r1, r0, r4, asr #7
    7b70:	0c14dd01 	ldceq	13, cr13, [r4], {1}
    7b74:	00011901 	andeq	r1, r1, r1, lsl #18
    7b78:	002ad800 	eoreq	sp, sl, r0, lsl #16
    7b7c:	002bbc10 	eoreq	fp, fp, r0, lsl ip
    7b80:	0070a510 	rsbseq	sl, r0, r0, lsl r5
    7b84:	1aca0100 	bne	ff287f8c <__StackTop+0xc7187f8c>
    7b88:	411b0000 	tstmi	fp, r0
    7b8c:	01000015 	tsteq	r0, r5, lsl r0
    7b90:	d03b14dd 	ldrsbtle	r1, [fp], -sp
    7b94:	cd00001a 	stcgt	0, cr0, [r0, #-104]	; 0xffffff98
    7b98:	c5000070 	strgt	r0, [r0, #-112]	; 0xffffff90
    7b9c:	18000070 	stmdane	r0, {r4, r5, r6}
    7ba0:	0000179e 	muleq	r0, lr, r7
    7ba4:	0d14df01 	ldceq	15, cr13, [r4, #-4]
    7ba8:	00000666 	andeq	r0, r0, r6, ror #12
    7bac:	00007109 	andeq	r7, r0, r9, lsl #2
    7bb0:	00007107 	andeq	r7, r0, r7, lsl #2
    7bb4:	001a1918 	andseq	r1, sl, r8, lsl r9
    7bb8:	14e00100 	strbtne	r0, [r0], #256	; 0x100
    7bbc:	00011910 	andeq	r1, r1, r0, lsl r9
    7bc0:	00712000 	rsbseq	r2, r1, r0
    7bc4:	00711c00 	rsbseq	r1, r1, r0, lsl #24
    7bc8:	06b02300 	ldrteq	r2, [r0], r0, lsl #6
    7bcc:	1a5b0000 	bne	16c7bd4 <__RAM_SIZE+0x15c7bd4>
    7bd0:	0f180000 	svceq	0x00180000
    7bd4:	0100000a 	tsteq	r0, sl
    7bd8:	dd0514f6 	cfstrsle	mvf1, [r5, #-984]	; 0xfffffc28
    7bdc:	44000006 	strmi	r0, [r0], #-6
    7be0:	40000071 	andmi	r0, r0, r1, ror r0
    7be4:	00000071 	andeq	r0, r0, r1, ror r0
    7be8:	0006c823 	andeq	ip, r6, r3, lsr #16
    7bec:	001a7a00 	andseq	r7, sl, r0, lsl #20
    7bf0:	0a0f1800 	beq	3cdbf8 <__RAM_SIZE+0x2cdbf8>
    7bf4:	fa010000 	blx	47bfc <__HEAP_SIZE+0x46bfc>
    7bf8:	06dd0914 			; <UNDEFINED> instruction: 0x06dd0914
    7bfc:	71660000 	cmnvc	r6, r0
    7c00:	71620000 	cmnvc	r2, r0
    7c04:	1c000000 	stcne	0, cr0, [r0], {-0}
    7c08:	10002b32 	andne	r2, r0, r2, lsr fp
    7c0c:	10002b62 	andne	r2, r0, r2, ror #22
    7c10:	00001a9d 	muleq	r0, sp, sl
    7c14:	0009db18 	andeq	sp, r9, r8, lsl fp
    7c18:	14fb0100 	ldrbtne	r0, [fp], #256	; 0x100
    7c1c:	00039109 	andeq	r9, r3, r9, lsl #2
    7c20:	00718600 	rsbseq	r8, r1, r0, lsl #12
    7c24:	00718400 	rsbseq	r8, r1, r0, lsl #8
    7c28:	861c0000 	ldrhi	r0, [ip], -r0
    7c2c:	9e10002b 	cdpls	0, 1, cr0, cr0, cr11, {1}
    7c30:	c010002b 	andsgt	r0, r0, fp, lsr #32
    7c34:	1800001a 	stmdane	r0, {r1, r3, r4}
    7c38:	000009db 	ldrdeq	r0, [r0], -fp
    7c3c:	09150f01 	ldmdbeq	r5, {r0, r8, r9, sl, fp}
    7c40:	00000391 	muleq	r0, r1, r3
    7c44:	0000719b 	muleq	r0, fp, r1
    7c48:	00007199 	muleq	r0, r9, r1
    7c4c:	2b661d00 	blcs	198f054 <__RAM_SIZE+0x188f054>
    7c50:	14911000 	ldrne	r1, [r1], #0
    7c54:	07000000 	streq	r0, [r0, -r0]
    7c58:	0003a204 	andeq	sl, r3, r4, lsl #4
    7c5c:	1aca0300 	bne	ff288864 <__StackTop+0xc7188864>
    7c60:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7c64:	00000f20 	andeq	r0, r0, r0, lsr #30
    7c68:	0a14b801 	beq	535c74 <__RAM_SIZE+0x435c74>
    7c6c:	002a9c01 	eoreq	r9, sl, r1, lsl #24
    7c70:	002ad810 	eoreq	sp, sl, r0, lsl r8
    7c74:	0071ae10 	rsbseq	sl, r1, r0, lsl lr
    7c78:	1b5d0100 	blne	1748080 <__RAM_SIZE+0x1648080>
    7c7c:	411b0000 	tstmi	fp, r0
    7c80:	01000015 	tsteq	r0, r5, lsl r0
    7c84:	dd3a14b8 	cfldrsle	mvf1, [sl, #-736]!	; 0xfffffd20
    7c88:	d4000006 	strle	r0, [r0], #-6
    7c8c:	ce000071 	mcrgt	0, 0, r0, cr0, cr1, {3}
    7c90:	1b000071 	blne	7e5c <__HEAP_SIZE+0x6e5c>
    7c94:	000020e1 	andeq	r2, r0, r1, ror #1
    7c98:	3614b901 	ldrcc	fp, [r4], -r1, lsl #18
    7c9c:	0000014a 	andeq	r0, r0, sl, asr #2
    7ca0:	00007204 	andeq	r7, r0, r4, lsl #4
    7ca4:	00007200 	andeq	r7, r0, r0, lsl #4
    7ca8:	000b7f1b 	andeq	r7, fp, fp, lsl pc
    7cac:	14ba0100 	ldrtne	r0, [sl], #256	; 0x100
    7cb0:	00012a3c 	andeq	r2, r1, ip, lsr sl
    7cb4:	00722600 	rsbseq	r2, r2, r0, lsl #12
    7cb8:	00722200 	rsbseq	r2, r2, r0, lsl #4
    7cbc:	2aa21c00 	bcs	fe88ecc4 <__StackTop+0xc678ecc4>
    7cc0:	2ac61000 	bcs	ff18bcc8 <__StackTop+0xc708bcc8>
    7cc4:	1b531000 	blne	14cbccc <__RAM_SIZE+0x13cbccc>
    7cc8:	db180000 	blle	607cd0 <__RAM_SIZE+0x507cd0>
    7ccc:	01000009 	tsteq	r0, r9
    7cd0:	910914ca 	smlabtls	r9, sl, r4, r1
    7cd4:	49000003 	stmdbmi	r0, {r0, r1}
    7cd8:	47000072 	smlsdxmi	r0, r2, r0, r0
    7cdc:	00000072 	andeq	r0, r0, r2, ror r0
    7ce0:	002ad21d 	eoreq	sp, sl, sp, lsl r2
    7ce4:	00098610 	andeq	r8, r9, r0, lsl r6
    7ce8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7cec:	00001428 	andeq	r1, r0, r8, lsr #8
    7cf0:	06149801 	ldreq	r9, [r4], -r1, lsl #16
    7cf4:	00000001 	andeq	r0, r0, r1
    7cf8:	00000000 	andeq	r0, r0, r0
    7cfc:	00725c00 	rsbseq	r5, r2, r0, lsl #24
    7d00:	1bf20100 	blne	ffc88108 <__StackTop+0xc7b88108>
    7d04:	411b0000 	tstmi	fp, r0
    7d08:	01000015 	tsteq	r0, r5, lsl r0
    7d0c:	d22f1498 	eorle	r1, pc, #152, 8	; 0x98000000
    7d10:	82000006 	andhi	r0, r0, #6
    7d14:	7c000072 	stcvc	0, cr0, [r0], {114}	; 0x72
    7d18:	1b000072 	blne	7ee8 <__HEAP_SIZE+0x6ee8>
    7d1c:	0000092b 	andeq	r0, r0, fp, lsr #18
    7d20:	37149901 	ldrcc	r9, [r4, -r1, lsl #18]
    7d24:	0000015b 	andeq	r0, r0, fp, asr r1
    7d28:	000072b2 			; <UNDEFINED> instruction: 0x000072b2
    7d2c:	000072ae 	andeq	r7, r0, lr, lsr #5
    7d30:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    7d34:	149a0100 	ldrne	r0, [sl], #256	; 0x100
    7d38:	00015b37 	andeq	r5, r1, r7, lsr fp
    7d3c:	0072d700 	rsbseq	sp, r2, r0, lsl #14
    7d40:	0072d300 	rsbseq	sp, r2, r0, lsl #6
    7d44:	00001c00 	andeq	r1, r0, r0, lsl #24
    7d48:	00000000 	andeq	r0, r0, r0
    7d4c:	1bdb0000 	blne	ff6c7d54 <__StackTop+0xc75c7d54>
    7d50:	db180000 	blle	607d58 <__RAM_SIZE+0x507d58>
    7d54:	01000009 	tsteq	r0, r9
    7d58:	910514ae 	smlatbls	r5, lr, r4, r1
    7d5c:	fa000003 	blx	7d70 <__HEAP_SIZE+0x6d70>
    7d60:	f8000072 			; <UNDEFINED> instruction: 0xf8000072
    7d64:	00000072 	andeq	r0, r0, r2, ror r0
    7d68:	00000020 	andeq	r0, r0, r0, lsr #32
    7d6c:	00098600 	andeq	r8, r9, r0, lsl #12
    7d70:	50011f00 	andpl	r1, r1, r0, lsl #30
    7d74:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    7d78:	0151011f 	cmpeq	r1, pc, lsl r1
    7d7c:	22000031 	andcs	r0, r0, #49	; 0x31
    7d80:	000e1a01 	andeq	r1, lr, r1, lsl #20
    7d84:	147b0100 	ldrbtne	r0, [fp], #-256	; 0xffffff00
    7d88:	2a800106 	bcs	fe0081a8 <__StackTop+0xc5f081a8>
    7d8c:	2a9c1000 	bcs	fe70bd94 <__StackTop+0xc660bd94>
    7d90:	730d1000 	movwvc	r1, #53248	; 0xd000
    7d94:	63010000 	movwvs	r0, #4096	; 0x1000
    7d98:	1b00001c 	blne	7e10 <__HEAP_SIZE+0x6e10>
    7d9c:	00001541 	andeq	r1, r0, r1, asr #10
    7da0:	2c147b01 			; <UNDEFINED> instruction: 0x2c147b01
    7da4:	000006dd 	ldrdeq	r0, [r0], -sp
    7da8:	00007331 	andeq	r7, r0, r1, lsr r3
    7dac:	0000732d 	andeq	r7, r0, sp, lsr #6
    7db0:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    7db4:	147c0100 	ldrbtne	r0, [ip], #-256	; 0xffffff00
    7db8:	00015b2e 	andeq	r5, r1, lr, lsr #22
    7dbc:	00735800 	rsbseq	r5, r3, r0, lsl #16
    7dc0:	00735200 	rsbseq	r5, r3, r0, lsl #4
    7dc4:	2a8e1e00 	bcs	fe38f5cc <__StackTop+0xc628f5cc>
    7dc8:	37e31000 	strbcc	r1, [r3, r0]!
    7dcc:	1c4d0000 	marne	acc0, r0, sp
    7dd0:	011f0000 	tsteq	pc, r0
    7dd4:	01f30350 	mvnseq	r0, r0, asr r3
    7dd8:	96200050 			; <UNDEFINED> instruction: 0x96200050
    7ddc:	8610002a 	ldrhi	r0, [r0], -sl, lsr #32
    7de0:	1f000009 	svcne	0x00000009
    7de4:	74025001 	strvc	r5, [r2], #-1
    7de8:	51011f00 	tstpl	r1, r0, lsl #30
    7dec:	00003101 	andeq	r3, r0, r1, lsl #2
    7df0:	1de00117 	stfnee	f0, [r0, #92]!	; 0x5c
    7df4:	c0010000 	andgt	r0, r1, r0
    7df8:	fc010a13 	stc2	10, cr0, [r1], {19}	; <UNPREDICTABLE>
    7dfc:	80100029 	andshi	r0, r0, r9, lsr #32
    7e00:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7e04:	b501007d 	strlt	r0, [r1, #-125]	; 0xffffff83
    7e08:	2800001c 	stmdacs	r0, {r2, r3, r4}
    7e0c:	00000650 	andeq	r0, r0, r0, asr r6
    7e10:	0020f718 	eoreq	pc, r0, r8, lsl r7	; <UNPREDICTABLE>
    7e14:	13fa0100 	mvnsne	r0, #0, 2
    7e18:	00012f0d 	andeq	r2, r1, sp, lsl #30
    7e1c:	00738a00 	rsbseq	r8, r3, r0, lsl #20
    7e20:	00738400 	rsbseq	r8, r3, r0, lsl #8
    7e24:	06682800 	strbteq	r2, [r8], -r0, lsl #16
    7e28:	7d180000 	ldcvc	0, cr0, [r8, #-0]
    7e2c:	01000014 	tsteq	r0, r4, lsl r0
    7e30:	dd0d13fa 	stcle	3, cr1, [sp, #-1000]	; 0xfffffc18
    7e34:	bd000006 	stclt	0, cr0, [r0, #-24]	; 0xffffffe8
    7e38:	b7000073 	smlsdxlt	r0, r3, r0, r0
    7e3c:	00000073 	andeq	r0, r0, r3, ror r0
    7e40:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7e44:	00001db3 			; <UNDEFINED> instruction: 0x00001db3
    7e48:	10139c01 	andsne	r9, r3, r1, lsl #24
    7e4c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    7e58:	00740800 	rsbseq	r0, r4, r0, lsl #16
    7e5c:	1d370100 	ldfnes	f0, [r7, #-0]
    7e60:	551b0000 	ldrpl	r0, [fp, #-0]
    7e64:	0100001d 	tsteq	r0, sp, lsl r0
    7e68:	a73b139c 			; <UNDEFINED> instruction: 0xa73b139c
    7e6c:	2c000003 	stccs	0, cr0, [r0], {3}
    7e70:	28000074 	stmdacs	r0, {r2, r4, r5, r6}
    7e74:	1b000074 	blne	804c <__HEAP_SIZE+0x704c>
    7e78:	00002173 	andeq	r2, r0, r3, ror r1
    7e7c:	35139d01 	ldrcc	r9, [r3, #-3329]	; 0xfffff2ff
    7e80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7e84:	00007450 	andeq	r7, r0, r0, asr r4
    7e88:	0000744a 	andeq	r7, r0, sl, asr #8
    7e8c:	0022c318 	eoreq	ip, r2, r8, lsl r3
    7e90:	139f0100 	orrsne	r0, pc, #0, 2
    7e94:	00066611 	andeq	r6, r6, r1, lsl r6
    7e98:	00748000 	rsbseq	r8, r4, r0
    7e9c:	00747c00 	rsbseq	r7, r4, r0, lsl #24
    7ea0:	1a191800 	bne	64dea8 <__RAM_SIZE+0x54dea8>
    7ea4:	a0010000 	andge	r0, r1, r0
    7ea8:	01191413 	tsteq	r9, r3, lsl r4
    7eac:	74a00000 	strtvc	r0, [r0], #0
    7eb0:	749e0000 	ldrvc	r0, [lr], #0
    7eb4:	002a0000 	eoreq	r0, sl, r0
    7eb8:	1f000000 	svcne	0x00000000
    7ebc:	f3035001 	vhadd.u8	d5, d3, d1
    7ec0:	00005101 	andeq	r5, r0, r1, lsl #2
    7ec4:	23820121 	orrcs	r0, r2, #1073741832	; 0x40000008
    7ec8:	7c010000 	stcvc	0, cr0, [r1], {-0}
    7ecc:	9d011813 	stcls	8, cr1, [r1, #-76]	; 0xffffffb4
    7ed0:	00000004 	andeq	r0, r0, r4
    7ed4:	00000000 	andeq	r0, r0, r0
    7ed8:	b4000000 	strlt	r0, [r0], #-0
    7edc:	01000074 	tsteq	r0, r4, ror r0
    7ee0:	00001dbe 			; <UNDEFINED> instruction: 0x00001dbe
    7ee4:	001d551b 	andseq	r5, sp, fp, lsl r5
    7ee8:	137c0100 	cmnne	ip, #0, 2
    7eec:	0003a748 	andeq	sl, r3, r8, asr #14
    7ef0:	0074d800 	rsbseq	sp, r4, r0, lsl #16
    7ef4:	0074d400 	rsbseq	sp, r4, r0, lsl #8
    7ef8:	22c21800 	sbccs	r1, r2, #0, 16
    7efc:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    7f00:	06661113 			; <UNDEFINED> instruction: 0x06661113
    7f04:	74f80000 	ldrbtvc	r0, [r8], #0
    7f08:	74f60000 	ldrbtvc	r0, [r6], #0
    7f0c:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7f10:	0100001a 	tsteq	r0, sl, lsl r0
    7f14:	9d1c137f 	ldcls	3, cr1, [ip, #-508]	; 0xfffffe04
    7f18:	0d000004 	stceq	0, cr0, [r0, #-16]
    7f1c:	0b000075 	bleq	80f8 <__HEAP_SIZE+0x70f8>
    7f20:	18000075 	stmdane	r0, {r0, r2, r4, r5, r6}
    7f24:	00000c26 	andeq	r0, r0, r6, lsr #24
    7f28:	15138001 	ldrne	r8, [r3, #-1]
    7f2c:	0000012f 	andeq	r0, r0, pc, lsr #2
    7f30:	00007522 	andeq	r7, r0, r2, lsr #10
    7f34:	00007520 	andeq	r7, r0, r0, lsr #10
    7f38:	0000001d 	andeq	r0, r0, sp, lsl r0
    7f3c:	00380e00 	eorseq	r0, r8, r0, lsl #28
    7f40:	00001d00 	andeq	r1, r0, r0, lsl #26
    7f44:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    7f48:	21000000 	mrscs	r0, (UNDEF: 0)
    7f4c:	00186401 	andseq	r6, r8, r1, lsl #8
    7f50:	13600100 	cmnne	r0, #0, 2
    7f54:	049d0118 	ldreq	r0, [sp], #280	; 0x118
	...
    7f60:	75350000 	ldrvc	r0, [r5, #-0]!
    7f64:	30010000 	andcc	r0, r1, r0
    7f68:	1b00001e 	blne	7fe8 <__HEAP_SIZE+0x6fe8>
    7f6c:	00001d55 	andeq	r1, r0, r5, asr sp
    7f70:	41136001 	tstmi	r3, r1
    7f74:	000003a7 	andeq	r0, r0, r7, lsr #7
    7f78:	00007559 	andeq	r7, r0, r9, asr r5
    7f7c:	00007555 	andeq	r7, r0, r5, asr r5
    7f80:	0022c218 	eoreq	ip, r2, r8, lsl r2
    7f84:	13620100 	cmnne	r2, #0, 2
    7f88:	00066611 	andeq	r6, r6, r1, lsl r6
    7f8c:	00757900 	rsbseq	r7, r5, r0, lsl #18
    7f90:	00757700 	rsbseq	r7, r5, r0, lsl #14
    7f94:	1a191800 	bne	64df9c <__RAM_SIZE+0x54df9c>
    7f98:	63010000 	movwvs	r0, #4096	; 0x1000
    7f9c:	049d1c13 	ldreq	r1, [sp], #3091	; 0xc13
    7fa0:	758e0000 	strvc	r0, [lr]
    7fa4:	758c0000 	strvc	r0, [ip]
    7fa8:	001d0000 	andseq	r0, sp, r0
    7fac:	f2000000 	vhadd.s8	d0, d0, d0
    7fb0:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    7fb4:	00000000 	andeq	r0, r0, r0
    7fb8:	00003800 	andeq	r3, r0, r0, lsl #16
    7fbc:	e8012200 	stmda	r1, {r9, sp}
    7fc0:	01000016 	tsteq	r0, r6, lsl r0
    7fc4:	010a133e 	tsteq	sl, lr, lsr r3
	...
    7fd0:	000075a1 	andeq	r7, r0, r1, lsr #11
    7fd4:	001e9e01 	andseq	r9, lr, r1, lsl #28
    7fd8:	1d551b00 	vldrne	d17, [r5, #-0]
    7fdc:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    7fe0:	03a73313 			; <UNDEFINED> instruction: 0x03a73313
    7fe4:	75c50000 	strbvc	r0, [r5]
    7fe8:	75c10000 	strbvc	r0, [r1]
    7fec:	ed1b0000 	ldc	0, cr0, [fp, #-0]
    7ff0:	0100001a 	tsteq	r0, sl, lsl r0
    7ff4:	9d39133f 	ldcls	3, cr1, [r9, #-252]!	; 0xffffff04
    7ff8:	e9000004 	stmdb	r0, {r2}
    7ffc:	e3000075 	movw	r0, #117	; 0x75
    8000:	18000075 	stmdane	r0, {r0, r2, r4, r5, r6}
    8004:	000022c3 	andeq	r2, r0, r3, asr #5
    8008:	11134101 	tstne	r3, r1, lsl #2
    800c:	00000666 	andeq	r0, r0, r6, ror #12
    8010:	00007616 	andeq	r7, r0, r6, lsl r6
    8014:	00007612 	andeq	r7, r0, r2, lsl r6
    8018:	0000001d 	andeq	r0, r0, sp, lsl r0
    801c:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8020:	00001d00 	andeq	r1, r0, r0, lsl #26
    8024:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8028:	21000000 	mrscs	r0, (UNDEF: 0)
    802c:	0018dd01 	andseq	sp, r8, r1, lsl #26
    8030:	123e0100 	eorsne	r0, lr, #0, 2
    8034:	0119010c 	tsteq	r9, ip, lsl #2
    8038:	27140000 	ldrcs	r0, [r4, -r0]
    803c:	28741000 	ldmdacs	r4!, {ip}^
    8040:	76341000 	ldrtvc	r1, [r4], -r0
    8044:	a2010000 	andge	r0, r1, #0
    8048:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    804c:	000022c2 	andeq	r2, r0, r2, asr #5
    8050:	0d124001 	ldceq	0, cr4, [r2, #-4]
    8054:	00000666 	andeq	r0, r0, r6, ror #12
    8058:	00007672 	andeq	r7, r0, r2, ror r6
    805c:	0000766c 	andeq	r7, r0, ip, ror #12
    8060:	00092b18 	andeq	r2, r9, r8, lsl fp
    8064:	12410100 	subne	r0, r1, #0, 2
    8068:	00014a10 	andeq	r4, r1, r0, lsl sl
    806c:	0076a100 	rsbseq	sl, r6, r0, lsl #2
    8070:	00769b00 	rsbseq	r9, r6, r0, lsl #22
    8074:	1eba1800 	cdpne	8, 11, cr1, cr10, cr0, {0}
    8078:	42010000 	andmi	r0, r1, #0
    807c:	01191012 	tsteq	r9, r2, lsl r0
    8080:	76d90000 	ldrbvc	r0, [r9], r0
    8084:	76cb0000 	strbvc	r0, [fp], r0
    8088:	40280000 	eormi	r0, r8, r0
    808c:	18000005 	stmdane	r0, {r0, r2}
    8090:	00001977 	andeq	r1, r0, r7, ror r9
    8094:	1a125701 	bne	49dca0 <__RAM_SIZE+0x39dca0>
    8098:	0000015b 	andeq	r0, r0, fp, asr r1
    809c:	00007736 	andeq	r7, r0, r6, lsr r7
    80a0:	00007732 	andeq	r7, r0, r2, lsr r7
    80a4:	0027541c 	eoreq	r5, r7, ip, lsl r4
    80a8:	00276c10 	eoreq	r6, r7, r0, lsl ip
    80ac:	001f4310 	andseq	r4, pc, r0, lsl r3	; <UNPREDICTABLE>
    80b0:	18a81800 	stmiane	r8!, {fp, ip}
    80b4:	5f010000 	svcpl	0x00010000
    80b8:	06d20d12 			; <UNDEFINED> instruction: 0x06d20d12
    80bc:	77560000 	ldrbvc	r0, [r6, -r0]
    80c0:	77540000 	ldrbvc	r0, [r4, -r0]
    80c4:	6c1d0000 	ldcvs	0, cr0, [sp], {-0}
    80c8:	91100027 	tstls	r0, r7, lsr #32
    80cc:	00000014 	andeq	r0, r0, r4, lsl r0
    80d0:	00057023 	andeq	r7, r5, r3, lsr #32
    80d4:	001f6200 	andseq	r6, pc, r0, lsl #4
    80d8:	0a0f1800 	beq	3ce0e0 <__RAM_SIZE+0x2ce0e0>
    80dc:	94010000 	strls	r0, [r1], #-0
    80e0:	06dd1512 			; <UNDEFINED> instruction: 0x06dd1512
    80e4:	776d0000 	strbvc	r0, [sp, -r0]!
    80e8:	77690000 	strbvc	r0, [r9, -r0]!
    80ec:	23000000 	movwcs	r0, #0
    80f0:	00000588 	andeq	r0, r0, r8, lsl #11
    80f4:	00001f81 	andeq	r1, r0, r1, lsl #31
    80f8:	000a0f18 	andeq	r0, sl, r8, lsl pc
    80fc:	129a0100 	addsne	r0, sl, #0, 2
    8100:	0006dd19 	andeq	sp, r6, r9, lsl sp
    8104:	00778f00 	rsbseq	r8, r7, r0, lsl #30
    8108:	00778b00 	rsbseq	r8, r7, r0, lsl #22
    810c:	a02b0000 	eorge	r0, fp, r0
    8110:	d4100027 	ldrle	r0, [r0], #-39	; 0xffffffd9
    8114:	18100027 	ldmdane	r0, {r0, r1, r2, r5}
    8118:	000009db 	ldrdeq	r0, [r0], -fp
    811c:	1512a301 	ldrne	sl, [r2, #-769]	; 0xfffffcff
    8120:	00000391 	muleq	r0, r1, r3
    8124:	000077af 	andeq	r7, r0, pc, lsr #15
    8128:	000077ad 	andeq	r7, r0, sp, lsr #15
    812c:	21000000 	mrscs	r0, (UNDEF: 0)
    8130:	001f5f01 	andseq	r5, pc, r1, lsl #30
    8134:	11e00100 	mvnne	r0, r0, lsl #2
    8138:	01190110 	tsteq	r9, r0, lsl r1
	...
    8144:	77c20000 	strbvc	r0, [r2, r0]
    8148:	85010000 	strhi	r0, [r1, #-0]
    814c:	1b000020 	blne	81d4 <__HEAP_SIZE+0x71d4>
    8150:	00001d55 	andeq	r1, r0, r5, asr sp
    8154:	2e11e001 	cdpcs	0, 1, cr14, cr1, cr1, {0}
    8158:	000003a7 	andeq	r0, r0, r7, lsr #7
    815c:	000077f0 	strdeq	r7, [r0], -r0
    8160:	000077e2 	andeq	r7, r0, r2, ror #15
    8164:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8168:	11e20100 	mvnne	r0, r0, lsl #2
    816c:	00066611 	andeq	r6, r6, r1, lsl r6
    8170:	00785a00 	rsbseq	r5, r8, r0, lsl #20
    8174:	00784c00 	rsbseq	r4, r8, r0, lsl #24
    8178:	1a191800 	bne	64e180 <__RAM_SIZE+0x54e180>
    817c:	e3010000 	movw	r0, #4096	; 0x1000
    8180:	01191411 	tsteq	r9, r1, lsl r4
    8184:	78ba0000 	ldmvc	sl!, {}	; <UNPREDICTABLE>
    8188:	78b60000 	ldmvc	r6!, {}	; <UNPREDICTABLE>
    818c:	001c0000 	andseq	r0, ip, r0
    8190:	00000000 	andeq	r0, r0, r0
    8194:	24000000 	strcs	r0, [r0], #-0
    8198:	18000020 	stmdane	r0, {r5}
    819c:	000009db 	ldrdeq	r0, [r0], -fp
    81a0:	11120d01 	tstne	r2, r1, lsl #26
    81a4:	00000391 	muleq	r0, r1, r3
    81a8:	000078db 	ldrdeq	r7, [r0], -fp
    81ac:	000078d9 	ldrdeq	r7, [r0], -r9
    81b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    81b4:	26280000 	strtcs	r0, [r8], -r0
    81b8:	001e0000 	andseq	r0, lr, r0
    81bc:	16000000 	strne	r0, [r0], -r0
    81c0:	4100002e 	tstmi	r0, lr, lsr #32
    81c4:	1f000020 	svcne	0x00000020
    81c8:	74025001 	strvc	r5, [r2], #-1
    81cc:	001d0000 	andseq	r0, sp, r0
    81d0:	cf000000 	svcgt	0x00000000
    81d4:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	000037d4 	ldrdeq	r3, [r0], -r4
    81e0:	0000205e 	andeq	r2, r0, lr, asr r0
    81e4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    81e8:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    81ec:	00000000 	andeq	r0, r0, r0
    81f0:	000037f2 	strdeq	r3, [r0], -r2
    81f4:	0000001e 	andeq	r0, r0, lr, lsl r0
    81f8:	0037d400 	eorseq	sp, r7, r0, lsl #8
    81fc:	00207b00 	eoreq	r7, r0, r0, lsl #22
    8200:	50011f00 	andpl	r1, r1, r0, lsl #30
    8204:	00187402 	andseq	r7, r8, r2, lsl #8
    8208:	0000001d 	andeq	r0, r0, sp, lsl r0
    820c:	00380000 	eorseq	r0, r8, r0
    8210:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8214:	000016a4 	andeq	r1, r0, r4, lsr #13
    8218:	0c11c201 	lfmeq	f4, 1, [r1], {1}
    821c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8228:	0078ee00 	rsbseq	lr, r8, r0, lsl #28
    822c:	20f40100 	rscscs	r0, r4, r0, lsl #2
    8230:	bd1b0000 	ldclt	0, cr0, [fp, #-0]
    8234:	01000021 	tsteq	r0, r1, lsr #32
    8238:	4a2a11c2 	bmi	a8c948 <__RAM_SIZE+0x98c948>
    823c:	14000001 	strne	r0, [r0], #-1
    8240:	0e000079 	mcreq	0, 0, r0, cr0, cr9, {3}
    8244:	18000079 	stmdane	r0, {r0, r3, r4, r5, r6}
    8248:	00001b5d 	andeq	r1, r0, sp, asr fp
    824c:	1011c401 	andsne	ip, r1, r1, lsl #8
    8250:	00000119 	andeq	r0, r0, r9, lsl r1
    8254:	00007942 	andeq	r7, r0, r2, asr #18
    8258:	00007940 	andeq	r7, r0, r0, asr #18
    825c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8260:	00262800 	eoreq	r2, r6, r0, lsl #16
    8264:	00001d00 	andeq	r1, r0, r0, lsl #26
    8268:	37f20000 	ldrbcc	r0, [r2, r0]!
    826c:	001d0000 	andseq	r0, sp, r0
    8270:	00000000 	andeq	r0, r0, r0
    8274:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8278:	00000000 	andeq	r0, r0, r0
    827c:	000024cf 	andeq	r2, r0, pc, asr #9
    8280:	f0012200 			; <UNDEFINED> instruction: 0xf0012200
    8284:	01000018 	tsteq	r0, r8, lsl r0
    8288:	010a1198 			; <UNDEFINED> instruction: 0x010a1198
    828c:	100026d8 	ldrdne	r2, [r0], -r8
    8290:	10002714 	andne	r2, r0, r4, lsl r7
    8294:	00007955 	andeq	r7, r0, r5, asr r9
    8298:	00214d01 	eoreq	r4, r1, r1, lsl #26
    829c:	1ca31b00 	vstmiane	r3!, {d1-d0}
    82a0:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    82a4:	014a2411 	cmpeq	sl, r1, lsl r4
    82a8:	797d0000 	ldmdbvc	sp!, {}^	; <UNPREDICTABLE>
    82ac:	79750000 	ldmdbvc	r5!, {}^	; <UNPREDICTABLE>
    82b0:	92180000 	andsls	r0, r8, #0
    82b4:	01000016 	tsteq	r0, r6, lsl r0
    82b8:	4a14119a 	bmi	50c928 <__RAM_SIZE+0x40c928>
    82bc:	b5000001 	strlt	r0, [r0, #-1]
    82c0:	b1000079 	tstlt	r0, r9, ror r0
    82c4:	1d000079 	stcne	0, cr0, [r0, #-484]	; 0xfffffe1c
    82c8:	100026f8 	strdne	r2, [r0], -r8
    82cc:	000037f2 	strdeq	r3, [r0], -r2
    82d0:	0027041d 	eoreq	r0, r7, sp, lsl r4
    82d4:	00380010 	eorseq	r0, r8, r0, lsl r0
    82d8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    82dc:	00001489 	andeq	r1, r0, r9, lsl #9
    82e0:	12117f01 	andsne	r7, r1, #1, 30
    82e4:	0003a701 	andeq	sl, r3, r1, lsl #14
	...
    82f0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    82f4:	00218201 	eoreq	r8, r1, r1, lsl #4
    82f8:	14151b00 	ldrne	r1, [r5], #-2816	; 0xfffff500
    82fc:	7f010000 	svcvc	0x00010000
    8300:	01193c11 	tsteq	r9, r1, lsl ip
    8304:	79d70000 	ldmibvc	r7, {}^	; <UNPREDICTABLE>
    8308:	79d30000 	ldmibvc	r3, {}^	; <UNPREDICTABLE>
    830c:	2c000000 	stccs	0, cr0, [r0], {-0}
    8310:	00227201 	eoreq	r7, r2, r1, lsl #4
    8314:	11710100 	cmnne	r1, r0, lsl #2
    8318:	03a70116 			; <UNDEFINED> instruction: 0x03a70116
	...
    8324:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8328:	01240100 			; <UNDEFINED> instruction: 0x01240100
    832c:	00001e0e 	andeq	r1, r0, lr, lsl #28
    8330:	1010eb01 	andsne	lr, r0, r1, lsl #22
    8334:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8340:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    8344:	00221a01 	eoreq	r1, r2, r1, lsl #20
    8348:	1d551b00 	vldrne	d17, [r5, #-0]
    834c:	eb010000 	bl	48354 <__HEAP_SIZE+0x47354>
    8350:	03a73410 			; <UNDEFINED> instruction: 0x03a73410
    8354:	79fc0000 	ldmibvc	ip!, {}^	; <UNPREDICTABLE>
    8358:	79f80000 	ldmibvc	r8!, {}^	; <UNPREDICTABLE>
    835c:	24190000 	ldrcs	r0, [r9], #-0
    8360:	0100001b 	tsteq	r0, fp, lsl r0
    8364:	fb3610ec 	blx	d8c71e <__RAM_SIZE+0xc8c71e>
    8368:	01000008 	tsteq	r0, r8
    836c:	1d181951 	vldrne.16	s2, [r8, #-162]	; 0xffffff5e	; <UNPREDICTABLE>
    8370:	ed010000 	stc	0, cr0, [r1, #-0]
    8374:	08ea3710 	stmiaeq	sl!, {r4, r8, r9, sl, ip, sp}^
    8378:	52010000 	andpl	r0, r1, #0
    837c:	001a1918 	andseq	r1, sl, r8, lsl r9
    8380:	10ef0100 	rscne	r0, pc, r0, lsl #2
    8384:	00011914 	andeq	r1, r1, r4, lsl r9
    8388:	007a2000 	rsbseq	r2, sl, r0
    838c:	007a1a00 	rsbseq	r1, sl, r0, lsl #20
    8390:	22c21800 	sbccs	r1, r2, #0, 16
    8394:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    8398:	06661110 			; <UNDEFINED> instruction: 0x06661110
    839c:	7a500000 	bvc	14083a4 <__RAM_SIZE+0x13083a4>
    83a0:	7a4c0000 	bvc	13083a8 <__RAM_SIZE+0x12083a8>
    83a4:	21000000 	mrscs	r0, (UNDEF: 0)
    83a8:	00191901 	andseq	r1, r9, r1, lsl #18
    83ac:	10a70100 	adcne	r0, r7, r0, lsl #2
    83b0:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    83bc:	7a6e0000 	bvc	1b883c4 <__RAM_SIZE+0x1a883c4>
    83c0:	11010000 	mrsne	r0, (UNDEF: 1)
    83c4:	1b000023 	blne	8458 <__HEAP_SIZE+0x7458>
    83c8:	00002045 	andeq	r2, r0, r5, asr #32
    83cc:	2f10a701 	svccs	0x0010a701
    83d0:	000000b8 	strheq	r0, [r0], -r8
    83d4:	00007a92 	muleq	r0, r2, sl
    83d8:	00007a8e 	andeq	r7, r0, lr, lsl #21
    83dc:	001b3d18 	andseq	r3, fp, r8, lsl sp
    83e0:	10a90100 	adcne	r0, r9, r0, lsl #2
    83e4:	00012f15 	andeq	r2, r1, r5, lsl pc
    83e8:	007ab400 	rsbseq	fp, sl, r0, lsl #8
    83ec:	007ab000 	rsbseq	fp, sl, r0
    83f0:	22c21800 	sbccs	r1, r2, #0, 16
    83f4:	aa010000 	bge	483fc <__HEAP_SIZE+0x473fc>
    83f8:	06661110 			; <UNDEFINED> instruction: 0x06661110
    83fc:	7ae90000 	bvc	ffa48404 <__StackTop+0xc7948404>
    8400:	7ad30000 	bvc	ff4c8408 <__StackTop+0xc73c8408>
    8404:	001d0000 	andseq	r0, sp, r0
    8408:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    840c:	1e000026 	cdpne	0, 0, cr0, cr0, cr6, {1}
    8410:	00000000 	andeq	r0, r0, r0
    8414:	00002311 	andeq	r2, r0, r1, lsl r3
    8418:	000022a9 	andeq	r2, r0, r9, lsr #5
    841c:	0f50011f 	svceq	0x0050011f
    8420:	24330074 	ldrtcs	r0, [r3], #-116	; 0xffffff8c
    8424:	321c0074 	andscc	r0, ip, #116	; 0x74
    8428:	85bc0324 	ldrhi	r0, [ip, #804]!	; 0x324
    842c:	1f223800 	svcne	0x00223800
    8430:	76025101 	strvc	r5, [r2], -r1, lsl #2
    8434:	001d0000 	andseq	r0, sp, r0
    8438:	cf000000 	svcgt	0x00000000
    843c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    8440:	00000000 	andeq	r0, r0, r0
    8444:	00002311 	andeq	r2, r0, r1, lsl r3
    8448:	000022c6 	andeq	r2, r0, r6, asr #5
    844c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8450:	1e000076 	mcrne	0, 0, r0, cr0, cr6, {3}
    8454:	00000000 	andeq	r0, r0, r0
    8458:	00002311 	andeq	r2, r0, r1, lsl r3
    845c:	000022da 	ldrdeq	r2, [r0], -sl
    8460:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8464:	1e000076 	mcrne	0, 0, r0, cr0, cr6, {3}
    8468:	00000000 	andeq	r0, r0, r0
    846c:	00002311 	andeq	r2, r0, r1, lsl r3
    8470:	000022f7 	strdeq	r2, [r0], -r7
    8474:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    8478:	008b1003 	addeq	r1, fp, r3
    847c:	51011f38 	tstpl	r1, r8, lsr pc
    8480:	00007602 	andeq	r7, r0, r2, lsl #12
    8484:	00000020 	andeq	r0, r0, r0, lsr #32
    8488:	00231100 	eoreq	r1, r3, r0, lsl #2
    848c:	50011f00 	andpl	r1, r1, r0, lsl #30
    8490:	8b2c0305 	blhi	b090ac <__RAM_SIZE+0xa090ac>
    8494:	011f3800 	tsteq	pc, r0, lsl #16
    8498:	00760251 	rsbseq	r0, r6, r1, asr r2
    849c:	9b2d0000 	blls	b484a4 <__RAM_SIZE+0xa484a4>
    84a0:	0100001a 	tsteq	r0, sl, lsl r0
    84a4:	0114105e 	tsteq	r4, lr, asr r0
    84a8:	00000666 	andeq	r0, r0, r6, ror #12
	...
    84b4:	00007b6a 	andeq	r7, r0, sl, ror #22
    84b8:	0023ec01 	eoreq	lr, r3, r1, lsl #24
    84bc:	0a0f1b00 	beq	3cf0c4 <__RAM_SIZE+0x2cf0c4>
    84c0:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    84c4:	06d23f10 			; <UNDEFINED> instruction: 0x06d23f10
    84c8:	7b920000 	blvc	fe4884d0 <__StackTop+0xc63884d0>
    84cc:	7b8a0000 	blvc	fe2884d4 <__StackTop+0xc61884d4>
    84d0:	451b0000 	ldrmi	r0, [fp, #-0]
    84d4:	01000020 	tsteq	r0, r0, lsr #32
    84d8:	b841105f 	stmdalt	r1, {r0, r1, r2, r3, r4, r6, ip}^
    84dc:	d2000000 	andle	r0, r0, #0
    84e0:	ca00007b 	bgt	86d4 <__HEAP_SIZE+0x76d4>
    84e4:	1800007b 	stmdane	r0, {r0, r1, r3, r4, r5, r6}
    84e8:	00001a18 	andeq	r1, r0, r8, lsl sl
    84ec:	11106101 	tstne	r0, r1, lsl #2
    84f0:	00000666 	andeq	r0, r0, r6, ror #12
    84f4:	00007c0f 	andeq	r7, r0, pc, lsl #24
    84f8:	00007c09 	andeq	r7, r0, r9, lsl #24
    84fc:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8500:	10620100 	rsbne	r0, r2, r0, lsl #2
    8504:	00066611 	andeq	r6, r6, r1, lsl r6
    8508:	007c4200 	rsbseq	r4, ip, r0, lsl #4
    850c:	007c3a00 	rsbseq	r3, ip, r0, lsl #20
    8510:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    8514:	15106301 	ldrne	r6, [r0, #-769]	; 0xfffffcff
    8518:	0000012f 	andeq	r0, r0, pc, lsr #2
    851c:	00007c7e 	andeq	r7, r0, lr, ror ip
    8520:	00007c78 	andeq	r7, r0, r8, ror ip
    8524:	001e5b18 	andseq	r5, lr, r8, lsl fp
    8528:	10640100 	rsbne	r0, r4, r0, lsl #2
    852c:	0000ac0e 	andeq	sl, r0, lr, lsl #24
    8530:	007cac00 	rsbseq	sl, ip, r0, lsl #24
    8534:	007ca800 	rsbseq	sl, ip, r0, lsl #16
    8538:	1e031800 	cdpne	8, 0, cr1, cr3, cr0, {0}
    853c:	65010000 	strvs	r0, [r1, #-0]
    8540:	01191410 	tsteq	r9, r0, lsl r4
    8544:	7cce0000 	stclvc	0, cr0, [lr], {0}
    8548:	7cca0000 	stclvc	0, cr0, [sl], {0}
    854c:	26180000 	ldrcs	r0, [r8], -r0
    8550:	0100001d 	tsteq	r0, sp, lsl r0
    8554:	ec1c1066 	ldc	0, cr1, [ip], {102}	; 0x66
    8558:	f2000023 	vhadd.s8	d0, d0, d19
    855c:	ee00007c 	mcr	0, 0, r0, cr0, cr12, {3}
    8560:	1800007c 	stmdane	r0, {r2, r3, r4, r5, r6}
    8564:	000009d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8568:	16106701 	ldrne	r6, [r0], -r1, lsl #14
    856c:	0000038b 	andeq	r0, r0, fp, lsl #7
    8570:	00007d14 	andeq	r7, r0, r4, lsl sp
    8574:	00007d12 	andeq	r7, r0, r2, lsl sp
    8578:	7a040700 	bvc	10a180 <__RAM_SIZE+0xa180>
    857c:	24000003 	strcs	r0, [r0], #-3
    8580:	00201101 	eoreq	r1, r0, r1, lsl #2
    8584:	104c0100 	subne	r0, ip, r0, lsl #2
    8588:	00a60108 	adceq	r0, r6, r8, lsl #2
	...
    8594:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8598:	243c0100 	ldrtcs	r0, [ip], #-256	; 0xffffff00
    859c:	651b0000 	ldrvs	r0, [fp, #-0]
    85a0:	0100001d 	tsteq	r0, sp, lsl r0
    85a4:	a724104c 	strge	r1, [r4, -ip, asr #32]!
    85a8:	2b000003 	blcs	85bc <__HEAP_SIZE+0x75bc>
    85ac:	2700007d 	smlsdxcs	r0, sp, r0, r0
    85b0:	1800007d 	stmdane	r0, {r0, r2, r3, r4, r5, r6}
    85b4:	000022c2 	andeq	r2, r0, r2, asr #5
    85b8:	0d104e01 	ldceq	14, cr4, [r0, #-4]
    85bc:	00000666 	andeq	r0, r0, r6, ror #12
    85c0:	00007d4b 	andeq	r7, r0, fp, asr #26
    85c4:	00007d49 	andeq	r7, r0, r9, asr #26
    85c8:	05012c00 	streq	r2, [r1, #-3072]	; 0xfffff400
    85cc:	0100000d 	tsteq	r0, sp
    85d0:	010d1040 	tsteq	sp, r0, asr #32
    85d4:	0000012f 	andeq	r0, r0, pc, lsr #2
    85d8:	100026cc 	andne	r2, r0, ip, asr #13
    85dc:	100026d8 	ldrdne	r2, [r0], -r8
    85e0:	01007d02 	tsteq	r0, r2, lsl #26
    85e4:	17fd0124 	ldrbne	r0, [sp, r4, lsr #2]!
    85e8:	1d010000 	stcne	0, cr0, [r1, #-0]
    85ec:	4a010c10 	bmi	4b634 <__HEAP_SIZE+0x4a634>
    85f0:	00000001 	andeq	r0, r0, r1
    85f4:	00000000 	andeq	r0, r0, r0
    85f8:	02000000 	andeq	r0, r0, #0
    85fc:	9a01007d 	bls	487f8 <__HEAP_SIZE+0x477f8>
    8600:	18000024 	stmdane	r0, {r2, r5}
    8604:	00001a19 	andeq	r1, r0, r9, lsl sl
    8608:	10101f01 	andsne	r1, r0, r1, lsl #30
    860c:	0000014a 	andeq	r0, r0, sl, asr #2
    8610:	00007d60 	andeq	r7, r0, r0, ror #26
    8614:	00007d5e 	andeq	r7, r0, lr, asr sp
    8618:	000c2625 	andeq	r2, ip, r5, lsr #12
    861c:	10200100 	eorne	r0, r0, r0, lsl #2
    8620:	00012f11 	andeq	r2, r1, r1, lsl pc
    8624:	24000000 	strcs	r0, [r0], #-0
    8628:	001c9101 	andseq	r9, ip, r1, lsl #2
    862c:	100a0100 	andne	r0, sl, r0, lsl #2
    8630:	014a010c 	cmpeq	sl, ip, lsl #2
    8634:	26c00000 	strbcs	r0, [r0], r0
    8638:	26cc1000 	strbcs	r1, [ip], r0
    863c:	7d021000 	stcvc	0, cr1, [r2, #-0]
    8640:	24cf0100 	strbcs	r0, [pc], #256	; 8648 <__HEAP_SIZE+0x7648>
    8644:	1f180000 	svcne	0x00180000
    8648:	01000020 	tsteq	r0, r0, lsr #32
    864c:	4a10100c 	bmi	40c684 <__RAM_SIZE+0x30c684>
    8650:	75000001 	strvc	r0, [r0, #-1]
    8654:	7300007d 	movwvc	r0, #125	; 0x7d
    8658:	0000007d 	andeq	r0, r0, sp, ror r0
    865c:	11770121 	cmnne	r7, r1, lsr #2
    8660:	74010000 	strvc	r0, [r1], #-0
    8664:	19010c0f 	stmdbne	r1, {r0, r1, r2, r3, sl, fp}
    8668:	74000001 	strvc	r0, [r0], #-1
    866c:	a4100028 	ldrge	r0, [r0], #-40	; 0xffffffd8
    8670:	88100029 	ldmdahi	r0, {r0, r3, r5}
    8674:	0100007d 	tsteq	r0, sp, ror r0
    8678:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    867c:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8680:	0f760100 	svceq	0x00760100
    8684:	0006660d 	andeq	r6, r6, sp, lsl #12
    8688:	007db400 	rsbseq	fp, sp, r0, lsl #8
    868c:	007da800 	rsbseq	sl, sp, r0, lsl #16
    8690:	21531800 	cmpcs	r3, r0, lsl #16
    8694:	77010000 	strvc	r0, [r1, -r0]
    8698:	0119100f 	tsteq	r9, pc
    869c:	7e0b0000 	cdpvc	0, 0, cr0, cr11, cr0, {0}
    86a0:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    86a4:	a0230000 	eorge	r0, r3, r0
    86a8:	cc000005 	stcgt	0, cr0, [r0], {5}
    86ac:	25000025 	strcs	r0, [r0, #-37]	; 0xffffffdb
    86b0:	00001415 	andeq	r1, r0, r5, lsl r4
    86b4:	180f8601 	stmdane	pc, {r0, r9, sl, pc}	; <UNPREDICTABLE>
    86b8:	00000119 	andeq	r0, r0, r9, lsl r1
    86bc:	05c82300 	strbeq	r2, [r8, #768]	; 0x300
    86c0:	254f0000 	strbcs	r0, [pc, #-0]	; 86c8 <__HEAP_SIZE+0x76c8>
    86c4:	0f180000 	svceq	0x00180000
    86c8:	0100000a 	tsteq	r0, sl
    86cc:	dd190f9c 	ldcle	15, cr0, [r9, #-624]	; 0xfffffd90
    86d0:	51000006 	tstpl	r0, r6
    86d4:	4d00007e 	stcmi	0, cr0, [r0, #-504]	; 0xfffffe08
    86d8:	0000007e 	andeq	r0, r0, lr, ror r0
    86dc:	0005e023 	andeq	lr, r5, r3, lsr #32
    86e0:	00256e00 	eoreq	r6, r5, r0, lsl #28
    86e4:	0a0f1800 	beq	3ce6ec <__RAM_SIZE+0x2ce6ec>
    86e8:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    86ec:	06dd190f 	ldrbeq	r1, [sp], pc, lsl #18
    86f0:	7e730000 	cdpvc	0, 7, cr0, cr3, cr0, {0}
    86f4:	7e6f0000 	cdpvc	0, 6, cr0, cr15, cr0, {0}
    86f8:	1c000000 	stcne	0, cr0, [r0], {-0}
    86fc:	100028fa 	strdne	r2, [r0], -sl
    8700:	1000292a 	andne	r2, r0, sl, lsr #18
    8704:	00002591 	muleq	r0, r1, r5
    8708:	0009db18 	andeq	sp, r9, r8, lsl fp
    870c:	0f9f0100 	svceq	0x009f0100
    8710:	00039119 	andeq	r9, r3, r9, lsl r1
    8714:	007e9300 	rsbseq	r9, lr, r0, lsl #6
    8718:	007e9100 	rsbseq	r9, lr, r0, lsl #2
    871c:	f8230000 			; <UNDEFINED> instruction: 0xf8230000
    8720:	b9000005 	stmdblt	r0, {r0, r2}
    8724:	18000025 	stmdane	r0, {r0, r2, r5}
    8728:	000015ab 	andeq	r1, r0, fp, lsr #11
    872c:	240fcc01 	strcs	ip, [pc], #-3073	; 8734 <__HEAP_SIZE+0x7734>
    8730:	0000014a 	andeq	r0, r0, sl, asr #2
    8734:	00007eae 	andeq	r7, r0, lr, lsr #29
    8738:	00007ea6 	andeq	r7, r0, r6, lsr #29
    873c:	0029641d 	eoreq	r6, r9, sp, lsl r4
    8740:	001e9e10 	andseq	r9, lr, r0, lsl lr
    8744:	441d0000 	ldrmi	r0, [sp], #-0
    8748:	91100029 	tstls	r0, r9, lsr #32
    874c:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    8750:	10002958 	andne	r2, r0, r8, asr r9
    8754:	0000382a 	andeq	r3, r0, sl, lsr #16
    8758:	287a1d00 	ldmdacs	sl!, {r8, sl, fp, ip}^
    875c:	37f21000 	ldrbcc	r1, [r2, r0]!
    8760:	7e1d0000 	cdpvc	0, 1, cr0, cr13, cr0, {0}
    8764:	00100029 	andseq	r0, r0, r9, lsr #32
    8768:	00000038 	andeq	r0, r0, r8, lsr r0
    876c:	0019c427 	andseq	ip, r9, r7, lsr #8
    8770:	0f360100 	svceq	0x00360100
    8774:	014a0117 	cmpeq	sl, r7, lsl r1
    8778:	22740000 	rsbscs	r0, r4, #0
    877c:	22b41000 	adcscs	r1, r4, #0
    8780:	7d021000 	stcvc	0, cr1, [r2, #-0]
    8784:	26280100 	strtcs	r0, [r8], -r0, lsl #2
    8788:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    878c:	0100001a 	tsteq	r0, sl, lsl r0
    8790:	4a140f38 	bmi	50c478 <__RAM_SIZE+0x40c478>
    8794:	e8000001 	stmda	r0, {r0}
    8798:	e400007e 	str	r0, [r0], #-126	; 0xffffff82
    879c:	1800007e 	stmdane	r0, {r1, r2, r3, r4, r5, r6}
    87a0:	0000172a 	andeq	r1, r0, sl, lsr #14
    87a4:	150f3901 	strne	r3, [pc, #-2305]	; 7eab <__HEAP_SIZE+0x6eab>
    87a8:	0000012f 	andeq	r0, r0, pc, lsr #2
    87ac:	00007f0d 	andeq	r7, r0, sp, lsl #30
    87b0:	00007f07 	andeq	r7, r0, r7, lsl #30
    87b4:	1c012900 			; <UNDEFINED> instruction: 0x1c012900
    87b8:	0100000d 	tsteq	r0, sp
    87bc:	01060ee3 	smlatteq	r6, r3, lr, r0
    87c0:	100026b0 			; <UNDEFINED> instruction: 0x100026b0
    87c4:	100026c0 	andne	r2, r0, r0, asr #13
    87c8:	01007d02 	tsteq	r0, r2, lsl #26
    87cc:	19530122 	ldmdbne	r3, {r1, r5, r8}^
    87d0:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    87d4:	0001060e 	andeq	r0, r1, lr, lsl #12
    87d8:	00000000 	andeq	r0, r0, r0
    87dc:	37000000 	strcc	r0, [r0, -r0]
    87e0:	0100007f 	tsteq	r0, pc, ror r0
    87e4:	000026b1 			; <UNDEFINED> instruction: 0x000026b1
    87e8:	00052823 	andeq	r2, r5, r3, lsr #16
    87ec:	00269e00 	eoreq	r9, r6, r0, lsl #28
    87f0:	14151800 	ldrne	r1, [r5], #-2048	; 0xfffff800
    87f4:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    87f8:	0119140e 	tsteq	r9, lr, lsl #8
    87fc:	7f5b0000 	svcvc	0x005b0000
    8800:	7f570000 	svcvc	0x00570000
    8804:	001d0000 	andseq	r0, sp, r0
    8808:	64000000 	strvs	r0, [r0], #-0
    880c:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8810:	00000000 	andeq	r0, r0, r0
    8814:	00003047 	andeq	r3, r0, r7, asr #32
    8818:	0000001d 	andeq	r0, r0, sp, lsl r0
    881c:	0015cb00 	andseq	ip, r5, r0, lsl #22
    8820:	00001d00 	andeq	r1, r0, r0, lsl #26
    8824:	30470000 	subcc	r0, r7, r0
    8828:	1d000000 	stcne	0, cr0, [r0, #-0]
    882c:	00000000 	andeq	r0, r0, r0
    8830:	0000380e 	andeq	r3, r0, lr, lsl #16
    8834:	0000001d 	andeq	r0, r0, sp, lsl r0
    8838:	00387300 	eorseq	r7, r8, r0, lsl #6
    883c:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8840:	0000013a 	andeq	r0, r0, sl, lsr r1
    8844:	060e5101 	streq	r5, [lr], -r1, lsl #2
    8848:	002da801 	eoreq	sl, sp, r1, lsl #16
    884c:	002df010 	eoreq	pc, sp, r0, lsl r0	; <UNPREDICTABLE>
    8850:	007f7a10 	rsbseq	r7, pc, r0, lsl sl	; <UNPREDICTABLE>
    8854:	27070100 	strcs	r0, [r7, -r0, lsl #2]
    8858:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    885c:	0100001a 	tsteq	r0, sl, lsl r0
    8860:	19100e53 	ldmdbne	r0, {r0, r1, r4, r6, r9, sl, fp}
    8864:	a0000001 	andge	r0, r0, r1
    8868:	9a00007f 	bls	8a6c <__HEAP_SIZE+0x7a6c>
    886c:	1d00007f 	stcne	0, cr0, [r0, #-508]	; 0xfffffe04
    8870:	10002dae 	andne	r2, r0, lr, lsr #27
    8874:	00002707 	andeq	r2, r0, r7, lsl #14
    8878:	002dc01d 	eoreq	ip, sp, sp, lsl r0
    887c:	00388110 	eorseq	r8, r8, r0, lsl r1
    8880:	2dc61d00 	stclcs	13, cr1, [r6]
    8884:	380e1000 	stmdacc	lr, {ip}
    8888:	de1d0000 	cdple	0, 1, cr0, cr13, cr0, {0}
    888c:	9010002d 	andsls	r0, r0, sp, lsr #32
    8890:	00000038 	andeq	r0, r0, r8, lsr r0
    8894:	001b032d 	andseq	r0, fp, sp, lsr #6
    8898:	0db70100 	ldfeqs	f0, [r7]
    889c:	01190113 	tsteq	r9, r3, lsl r1
    88a0:	2d3c0000 	ldccs	0, cr0, [ip, #-0]
    88a4:	2da81000 	stccs	0, cr1, [r8]
    88a8:	7fc91000 	svcvc	0x00c91000
    88ac:	07010000 	streq	r0, [r1, -r0]
    88b0:	18000028 	stmdane	r0, {r3, r5}
    88b4:	00001a19 	andeq	r1, r0, r9, lsl sl
    88b8:	100db901 	andne	fp, sp, r1, lsl #18
    88bc:	00000119 	andeq	r0, r0, r9, lsl r1
    88c0:	00008013 	andeq	r8, r0, r3, lsl r0
    88c4:	0000800d 	andeq	r8, r0, sp
    88c8:	00141518 	andseq	r1, r4, r8, lsl r5
    88cc:	0dba0100 	ldfeqs	f0, [sl]
    88d0:	00011910 	andeq	r1, r1, r0, lsl r9
    88d4:	00804100 	addeq	r4, r0, r0, lsl #2
    88d8:	00803f00 	addeq	r3, r0, r0, lsl #30
    88dc:	220b1600 	andcs	r1, fp, #0, 12
    88e0:	bb010000 	bllt	488e8 <__HEAP_SIZE+0x478e8>
    88e4:	05f90a0d 	ldrbeq	r0, [r9, #2573]!	; 0xa0d
    88e8:	91020000 	mrsls	r0, (UNDEF: 2)
    88ec:	1f2d186c 	svcne	0x002d186c
    88f0:	bc010000 	stclt	0, cr0, [r1], {-0}
    88f4:	00ea140d 	rsceq	r1, sl, sp, lsl #8
    88f8:	80560000 	subshi	r0, r6, r0
    88fc:	80540000 	subshi	r0, r4, r0
    8900:	2b180000 	blcs	608908 <__RAM_SIZE+0x508908>
    8904:	01000018 	tsteq	r0, r8, lsl r0
    8908:	19100dbd 	ldmdbne	r0, {r0, r2, r3, r4, r5, r7, r8, sl, fp}
    890c:	6e000001 	cdpvs	0, 0, cr0, cr0, cr1, {0}
    8910:	6a000080 	bvs	8b18 <__HEAP_SIZE+0x7b18>
    8914:	28000080 	stmdacs	r0, {r7}
    8918:	00000770 	andeq	r0, r0, r0, ror r7
    891c:	001bfa16 	andseq	pc, fp, r6, lsl sl	; <UNPREDICTABLE>
    8920:	0e040100 	adfeqs	f0, f4, f0
    8924:	0008f01c 	andeq	pc, r8, ip, lsl r0	; <UNPREDICTABLE>
    8928:	60910200 	addsvs	r0, r1, r0, lsl #4
    892c:	00144816 	andseq	r4, r4, r6, lsl r8
    8930:	0e050100 	adfeqs	f0, f5, f0
    8934:	0005bb1b 	andeq	fp, r5, fp, lsl fp
    8938:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    893c:	001d3316 	andseq	r3, sp, r6, lsl r3
    8940:	0e060100 	adfeqs	f0, f6, f0
    8944:	00002924 	andeq	r2, r0, r4, lsr #18
    8948:	68910200 	ldmvs	r1, {r9}
    894c:	002d761e 	eoreq	r7, sp, lr, lsl r6
    8950:	00091710 	andeq	r1, r9, r0, lsl r7
    8954:	0027df00 	eoreq	sp, r7, r0, lsl #30
    8958:	50011f00 	andpl	r1, r1, r0, lsl #30
    895c:	1f609102 	svcne	0x00609102
    8960:	91025101 	tstls	r2, r1, lsl #2
    8964:	52011f64 	andpl	r1, r1, #100, 30	; 0x190
    8968:	00689102 	rsbeq	r9, r8, r2, lsl #2
    896c:	002d8c20 	eoreq	r8, sp, r0, lsr #24
    8970:	00357e10 	eorseq	r7, r5, r0, lsl lr
    8974:	50011f00 	andpl	r1, r1, r0, lsl #30
    8978:	29c50305 	stmibcs	r5, {r0, r2, r8, r9}^
    897c:	011f1000 	tsteq	pc, r0
    8980:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    8984:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    8988:	021f0075 	andseq	r0, pc, #117	; 0x75
    898c:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    8990:	00000000 	andeq	r0, r0, r0
    8994:	1f6f0121 	svcne	0x006f0121
    8998:	56010000 	strpl	r0, [r1], -r0
    899c:	1901100d 	stmdbne	r1, {r0, r2, r3, ip}
    89a0:	00000001 	andeq	r0, r0, r1
    89a4:	00000000 	andeq	r0, r0, r0
    89a8:	8d000000 	stchi	0, cr0, [r0, #-0]
    89ac:	01000080 	smlabbeq	r0, r0, r0, r0
    89b0:	000028fd 	strdeq	r2, [r0], -sp
    89b4:	0016cb1b 	andseq	ip, r6, fp, lsl fp
    89b8:	0d560100 	ldfeqe	f0, [r6, #-0]
    89bc:	0003a731 	andeq	sl, r3, r1, lsr r7
    89c0:	0080b100 	addeq	fp, r0, r0, lsl #2
    89c4:	0080ad00 	addeq	sl, r0, r0, lsl #26
    89c8:	0c5f1800 	mrrceq	8, 0, r1, pc, cr0	; <UNPREDICTABLE>
    89cc:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    89d0:	0119140d 	tsteq	r9, sp, lsl #8
    89d4:	80d70000 	sbcshi	r0, r7, r0
    89d8:	80cf0000 	sbchi	r0, pc, r0
    89dc:	c2180000 	andsgt	r0, r8, #0
    89e0:	01000022 	tsteq	r0, r2, lsr #32
    89e4:	71170d59 	tstvc	r7, r9, asr sp
    89e8:	12000006 	andne	r0, r0, #6
    89ec:	0e000081 	cdpeq	0, 0, cr0, cr0, cr1, {4}
    89f0:	18000081 	stmdane	r0, {r0, r7}
    89f4:	00000c26 	andeq	r0, r0, r6, lsr #24
    89f8:	150d5a01 	strne	r5, [sp, #-2561]	; 0xfffff5ff
    89fc:	0000012f 	andeq	r0, r0, pc, lsr #2
    8a00:	00008134 	andeq	r8, r0, r4, lsr r1
    8a04:	00008130 	andeq	r8, r0, r0, lsr r1
    8a08:	0000001c 	andeq	r0, r0, ip, lsl r0
    8a0c:	00000000 	andeq	r0, r0, r0
    8a10:	00289e00 	eoreq	r9, r8, r0, lsl #28
    8a14:	09db1800 	ldmibeq	fp, {fp, ip}^
    8a18:	93010000 	movwls	r0, #4096	; 0x1000
    8a1c:	0391150d 	orrseq	r1, r1, #54525952	; 0x3400000
    8a20:	81540000 	cmphi	r4, r0
    8a24:	81520000 	cmphi	r2, r0
    8a28:	1d000000 	stcne	0, cr0, [r0, #-0]
    8a2c:	00000000 	andeq	r0, r0, r0
    8a30:	0000380e 	andeq	r3, r0, lr, lsl #16
    8a34:	0000001e 	andeq	r0, r0, lr, lsl r0
    8a38:	0029aa00 	eoreq	sl, r9, r0, lsl #20
    8a3c:	0028bb00 	eoreq	fp, r8, r0, lsl #22
    8a40:	50011f00 	andpl	r1, r1, r0, lsl #30
    8a44:	00007402 	andeq	r7, r0, r2, lsl #8
    8a48:	0000001e 	andeq	r0, r0, lr, lsl r0
    8a4c:	0037d400 	eorseq	sp, r7, r0, lsl #8
    8a50:	0028cf00 	eoreq	ip, r8, r0, lsl #30
    8a54:	50011f00 	andpl	r1, r1, r0, lsl #30
    8a58:	00007702 	andeq	r7, r0, r2, lsl #14
    8a5c:	0000001e 	andeq	r0, r0, lr, lsl r0
    8a60:	00381c00 	eorseq	r1, r8, r0, lsl #24
    8a64:	0028e300 	eoreq	lr, r8, r0, lsl #6
    8a68:	50011f00 	andpl	r1, r1, r0, lsl #30
    8a6c:	00007502 	andeq	r7, r0, r2, lsl #10
    8a70:	00000020 	andeq	r0, r0, r0, lsr #32
    8a74:	00389e00 	eorseq	r9, r8, r0, lsl #28
    8a78:	50011f00 	andpl	r1, r1, r0, lsl #30
    8a7c:	8af00305 	bhi	ffc09698 <__StackTop+0xc7b09698>
    8a80:	011f3800 	tsteq	pc, r0, lsl #16
    8a84:	18740251 	ldmdane	r4!, {r0, r4, r6, r9}^
    8a88:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8a8c:	00002323 	andeq	r2, r0, r3, lsr #6
    8a90:	0a0d1901 	beq	34ee9c <__RAM_SIZE+0x24ee9c>
    8a94:	00000001 	andeq	r0, r0, r1
    8a98:	00000000 	andeq	r0, r0, r0
    8a9c:	00816700 	addeq	r6, r1, r0, lsl #14
    8aa0:	29aa0100 	stmibcs	sl!, {r8}
    8aa4:	cb1b0000 	blgt	6c8aac <__RAM_SIZE+0x5c8aac>
    8aa8:	01000016 	tsteq	r0, r6, lsl r0
    8aac:	a7240d19 			; <UNDEFINED> instruction: 0xa7240d19
    8ab0:	8f000003 	svchi	0x00000003
    8ab4:	87000081 	strhi	r0, [r0, -r1, lsl #1]
    8ab8:	18000081 	stmdane	r0, {r0, r7}
    8abc:	000022c2 	andeq	r2, r0, r2, asr #5
    8ac0:	170d1b01 	strne	r1, [sp, -r1, lsl #22]
    8ac4:	00000671 	andeq	r0, r0, r1, ror r6
    8ac8:	000081ce 	andeq	r8, r0, lr, asr #3
    8acc:	000081c6 	andeq	r8, r0, r6, asr #3
    8ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	00296600 	eoreq	r6, r9, r0, lsl #12
    8adc:	09db1800 	ldmibeq	fp, {fp, ip}^
    8ae0:	3a010000 	bcc	48ae8 <__HEAP_SIZE+0x47ae8>
    8ae4:	0391150d 	orrseq	r1, r1, #54525952	; 0x3400000
    8ae8:	82070000 	andhi	r0, r7, #0
    8aec:	82050000 	andhi	r0, r5, #0
    8af0:	1d000000 	stcne	0, cr0, [r0, #-0]
    8af4:	00000000 	andeq	r0, r0, r0
    8af8:	000037f2 	strdeq	r3, [r0], -r2
    8afc:	0000001e 	andeq	r0, r0, lr, lsl r0
    8b00:	0029aa00 	eoreq	sl, r9, r0, lsl #20
    8b04:	00298300 	eoreq	r8, r9, r0, lsl #6
    8b08:	50011f00 	andpl	r1, r1, r0, lsl #30
    8b0c:	00007402 	andeq	r7, r0, r2, lsl #8
    8b10:	0000001d 	andeq	r0, r0, sp, lsl r0
    8b14:	00380000 	eorseq	r0, r8, r0
    8b18:	00001e00 	andeq	r1, r0, r0, lsl #28
    8b1c:	37d40000 	ldrbcc	r0, [r4, r0]
    8b20:	29a00000 	stmibcs	r0!, {}	; <UNPREDICTABLE>
    8b24:	011f0000 	tsteq	pc, r0
    8b28:	00750250 	rsbseq	r0, r5, r0, asr r2
    8b2c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8b30:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    8b34:	27000000 	strcs	r0, [r0, -r0]
    8b38:	00001ea3 	andeq	r1, r0, r3, lsr #29
    8b3c:	170cd301 	strne	sp, [ip, -r1, lsl #6]
    8b40:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8b4c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    8b50:	002a2501 	eoreq	r2, sl, r1, lsl #10
    8b54:	1d551b00 	vldrne	d17, [r5, #-0]
    8b58:	d3010000 	movwle	r0, #4096	; 0x1000
    8b5c:	03b3420c 			; <UNDEFINED> instruction: 0x03b3420c
    8b60:	822e0000 	eorhi	r0, lr, #0
    8b64:	821a0000 	andshi	r0, sl, #0
    8b68:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    8b6c:	0100001a 	tsteq	r0, sl, lsl r0
    8b70:	19140cd5 	ldmdbne	r4, {r0, r2, r4, r6, r7, sl, fp}
    8b74:	b9000001 	stmdblt	r0, {r0}
    8b78:	b3000082 	movwlt	r0, #130	; 0x82
    8b7c:	18000082 	stmdane	r0, {r1, r7}
    8b80:	000022c2 	andeq	r2, r0, r2, asr #5
    8b84:	1d0cd601 	stcne	6, cr13, [ip, #-4]
    8b88:	00002a2b 	andeq	r2, r0, fp, lsr #20
    8b8c:	000082f9 	strdeq	r8, [r0], -r9
    8b90:	000082e5 	andeq	r8, r0, r5, ror #5
    8b94:	0000002b 	andeq	r0, r0, fp, lsr #32
    8b98:	00000000 	andeq	r0, r0, r0
    8b9c:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    8ba0:	240cea01 	strcs	lr, [ip], #-2561	; 0xfffff5ff
    8ba4:	00000119 	andeq	r0, r0, r9, lsl r1
    8ba8:	00008382 	andeq	r8, r0, r2, lsl #7
    8bac:	0000837e 	andeq	r8, r0, lr, ror r3
    8bb0:	04070000 	streq	r0, [r7], #-0
    8bb4:	0000064d 	andeq	r0, r0, sp, asr #12
    8bb8:	002a2503 	eoreq	r2, sl, r3, lsl #10
    8bbc:	46012200 	strmi	r2, [r1], -r0, lsl #4
    8bc0:	01000021 	tsteq	r0, r1, lsr #32
    8bc4:	010a0c31 	tsteq	sl, r1, lsr ip
	...
    8bd0:	000083a0 	andeq	r8, r0, r0, lsr #7
    8bd4:	002b3701 	eoreq	r3, fp, r1, lsl #14
    8bd8:	1f0c1b00 	svcne	0x000c1b00
    8bdc:	31010000 	mrscc	r0, (UNDEF: 1)
    8be0:	03a7250c 			; <UNDEFINED> instruction: 0x03a7250c
    8be4:	83c60000 	bichi	r0, r6, #0
    8be8:	83c00000 	bichi	r0, r0, #0
    8bec:	c2180000 	andsgt	r0, r8, #0
    8bf0:	01000022 	tsteq	r0, r2, lsr #32
    8bf4:	66110c33 			; <UNDEFINED> instruction: 0x66110c33
    8bf8:	f3000006 	vhadd.u8	d0, d0, d6
    8bfc:	ef000083 	svc	0x00000083
    8c00:	23000083 	movwcs	r0, #131	; 0x83
    8c04:	00000680 	andeq	r0, r0, r0, lsl #13
    8c08:	00002a93 	muleq	r0, r3, sl
    8c0c:	0100782e 	tsteq	r0, lr, lsr #16
    8c10:	191c0c58 	ldmdbne	ip, {r3, r4, r6, sl, fp}
    8c14:	17000001 	strne	r0, [r0, -r1]
    8c18:	11000084 	smlabbne	r0, r4, r0, r0
    8c1c:	00000084 	andeq	r0, r0, r4, lsl #1
    8c20:	00069823 	andeq	r9, r6, r3, lsr #16
    8c24:	002adf00 	eoreq	sp, sl, r0, lsl #30
    8c28:	1d8a1800 	stcne	8, cr1, [sl]
    8c2c:	92010000 	andls	r0, r1, #0
    8c30:	012f190c 			; <UNDEFINED> instruction: 0x012f190c
    8c34:	84470000 	strbhi	r0, [r7], #-0
    8c38:	84410000 	strbhi	r0, [r1], #-0
    8c3c:	001d0000 	andseq	r0, sp, r0
    8c40:	f2000000 	vhadd.s8	d0, d0, d0
    8c44:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8c48:	00000000 	andeq	r0, r0, r0
    8c4c:	00001491 	muleq	r0, r1, r4
    8c50:	0000001d 	andeq	r0, r0, sp, lsl r0
    8c54:	00380000 	eorseq	r0, r8, r0
    8c58:	00001d00 	andeq	r1, r0, r0, lsl #26
    8c5c:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    8c60:	001d0000 	andseq	r0, sp, r0
    8c64:	63000000 	movwvs	r0, #0
    8c68:	0000001c 	andeq	r0, r0, ip, lsl r0
    8c6c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8c70:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8c74:	00001e00 	andeq	r1, r0, r0, lsl #28
    8c78:	37d40000 	ldrbcc	r0, [r4, r0]
    8c7c:	2afc0000 	bcs	fff08c84 <__StackTop+0xc7e08c84>
    8c80:	011f0000 	tsteq	pc, r0
    8c84:	00750250 	rsbseq	r0, r5, r0, asr r2
    8c88:	00001e00 	andeq	r1, r0, r0, lsl #28
    8c8c:	37d40000 	ldrbcc	r0, [r4, r0]
    8c90:	2b100000 	blcs	408c98 <__RAM_SIZE+0x308c98>
    8c94:	011f0000 	tsteq	pc, r0
    8c98:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    8c9c:	00001e00 	andeq	r1, r0, r0, lsl #28
    8ca0:	389e0000 	ldmcc	lr, {}	; <UNPREDICTABLE>
    8ca4:	2b2d0000 	blcs	b48cac <__RAM_SIZE+0xa48cac>
    8ca8:	011f0000 	tsteq	pc, r0
    8cac:	10030550 	andne	r0, r3, r0, asr r5
    8cb0:	1f38008b 	svcne	0x0038008b
    8cb4:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    8cb8:	001d0000 	andseq	r0, sp, r0
    8cbc:	00000000 	andeq	r0, r0, r0
    8cc0:	00000038 	andeq	r0, r0, r8, lsr r0
    8cc4:	1cdf0122 	ldfnee	f0, [pc], {34}	; 0x22
    8cc8:	cd010000 	stcgt	0, cr0, [r1, #-0]
    8ccc:	00010a0a 	andeq	r0, r1, sl, lsl #20
    8cd0:	00000000 	andeq	r0, r0, r0
    8cd4:	74000000 	strvc	r0, [r0], #-0
    8cd8:	01000084 	smlabbeq	r0, r4, r0, r0
    8cdc:	00002c24 	andeq	r2, r0, r4, lsr #24
    8ce0:	001d551b 	andseq	r5, sp, fp, lsl r5
    8ce4:	0acd0100 	beq	ff3490ec <__StackTop+0xc72490ec>
    8ce8:	0003a729 	andeq	sl, r3, r9, lsr #14
    8cec:	00849a00 	addeq	r9, r4, r0, lsl #20
    8cf0:	00849400 	addeq	r9, r4, r0, lsl #8
    8cf4:	1c2a1b00 			; <UNDEFINED> instruction: 0x1c2a1b00
    8cf8:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    8cfc:	012f280a 			; <UNDEFINED> instruction: 0x012f280a
    8d00:	84cd0000 	strbhi	r0, [sp], #0
    8d04:	84c30000 	strbhi	r0, [r3], #0
    8d08:	c2180000 	andsgt	r0, r8, #0
    8d0c:	01000022 	tsteq	r0, r2, lsr #32
    8d10:	66110ad0 			; <UNDEFINED> instruction: 0x66110ad0
    8d14:	12000006 	andne	r0, r0, #6
    8d18:	0e000085 	cdpeq	0, 0, cr0, cr0, cr5, {4}
    8d1c:	18000085 	stmdane	r0, {r0, r2, r7}
    8d20:	000021a7 	andeq	r2, r0, r7, lsr #3
    8d24:	150ad101 	strne	sp, [sl, #-257]	; 0xfffffeff
    8d28:	0000012f 	andeq	r0, r0, pc, lsr #2
    8d2c:	00008536 	andeq	r8, r0, r6, lsr r5
    8d30:	00008530 	andeq	r8, r0, r0, lsr r5
    8d34:	00211418 	eoreq	r1, r1, r8, lsl r4
    8d38:	0ad10100 	beq	ff449140 <__StackTop+0xc7349140>
    8d3c:	00012f2c 	andeq	r2, r1, ip, lsr #30
    8d40:	00856100 	addeq	r6, r5, r0, lsl #2
    8d44:	00855f00 	addeq	r5, r5, r0, lsl #30
    8d48:	0c5f1800 	mrrceq	8, 0, r1, pc, cr0	; <UNPREDICTABLE>
    8d4c:	d2010000 	andle	r0, r1, #0
    8d50:	0119140a 	tsteq	r9, sl, lsl #8
    8d54:	857c0000 	ldrbhi	r0, [ip, #-0]!
    8d58:	85740000 	ldrbhi	r0, [r4, #-0]!
    8d5c:	001c0000 	andseq	r0, ip, r0
    8d60:	00000000 	andeq	r0, r0, r0
    8d64:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    8d68:	1800002b 	stmdane	r0, {r0, r1, r3, r5}
    8d6c:	000009db 	ldrdeq	r0, [r0], -fp
    8d70:	150b6c01 	strne	r6, [fp, #-3073]	; 0xfffff3ff
    8d74:	00000391 	muleq	r0, r1, r3
    8d78:	000085b4 			; <UNDEFINED> instruction: 0x000085b4
    8d7c:	000085b2 			; <UNDEFINED> instruction: 0x000085b2
    8d80:	00001d00 	andeq	r1, r0, r0, lsl #26
    8d84:	37f20000 	ldrbcc	r0, [r2, r0]!
    8d88:	001d0000 	andseq	r0, sp, r0
    8d8c:	00000000 	andeq	r0, r0, r0
    8d90:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    8d94:	00000000 	andeq	r0, r0, r0
    8d98:	000037d4 	ldrdeq	r3, [r0], -r4
    8d9c:	00002c1a 	andeq	r2, r0, sl, lsl ip
    8da0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8da4:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	0000382a 	andeq	r3, r0, sl, lsr #16
    8db0:	f0012100 			; <UNDEFINED> instruction: 0xf0012100
    8db4:	0100001c 	tsteq	r0, ip, lsl r0
    8db8:	01110a9d 			; <UNDEFINED> instruction: 0x01110a9d
    8dbc:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    8dc8:	000085c7 	andeq	r8, r0, r7, asr #11
    8dcc:	002cab01 	eoreq	sl, ip, r1, lsl #22
    8dd0:	1d551b00 	vldrne	d17, [r5, #-0]
    8dd4:	9d010000 	stcls	0, cr0, [r1, #-0]
    8dd8:	03b3420a 			; <UNDEFINED> instruction: 0x03b3420a
    8ddc:	85ed0000 	strbhi	r0, [sp, #0]!
    8de0:	85e70000 	strbhi	r0, [r7, #0]!
    8de4:	c2180000 	andsgt	r0, r8, #0
    8de8:	01000022 	tsteq	r0, r2, lsr #32
    8dec:	25170a9f 	ldrcs	r0, [r7, #-2719]	; 0xfffff561
    8df0:	1800002a 	stmdane	r0, {r1, r3, r5}
    8df4:	16000086 	strne	r0, [r0], -r6, lsl #1
    8df8:	18000086 	stmdane	r0, {r1, r2, r7}
    8dfc:	00000c05 	andeq	r0, r0, r5, lsl #24
    8e00:	150aa001 	strne	sl, [sl, #-1]
    8e04:	0000012f 	andeq	r0, r0, pc, lsr #2
    8e08:	0000862d 	andeq	r8, r0, sp, lsr #12
    8e0c:	0000862b 	andeq	r8, r0, fp, lsr #12
    8e10:	000c2618 	andeq	r2, ip, r8, lsl r6
    8e14:	0aa10100 	beq	fe84921c <__StackTop+0xc674921c>
    8e18:	00012f15 	andeq	r2, r1, r5, lsl pc
    8e1c:	00864400 	addeq	r4, r6, r0, lsl #8
    8e20:	00864000 	addeq	r4, r6, r0
    8e24:	00001d00 	andeq	r1, r0, r0, lsl #26
    8e28:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    8e2c:	001d0000 	andseq	r0, sp, r0
    8e30:	1c000000 	stcne	0, cr0, [r0], {-0}
    8e34:	00000038 	andeq	r0, r0, r8, lsr r0
    8e38:	22360121 	eorscs	r0, r6, #1073741832	; 0x40000008
    8e3c:	83010000 	movwhi	r0, #4096	; 0x1000
    8e40:	2f01110a 	svccs	0x0001110a
    8e44:	00000001 	andeq	r0, r0, r1
    8e48:	00000000 	andeq	r0, r0, r0
    8e4c:	62000000 	andvs	r0, r0, #0
    8e50:	01000086 	smlabbeq	r0, r6, r0, r0
    8e54:	00002d1d 	andeq	r2, r0, sp, lsl sp
    8e58:	001d551b 	andseq	r5, sp, fp, lsl r5
    8e5c:	0a830100 	beq	fe0c9264 <__StackTop+0xc5fc9264>
    8e60:	0003b33b 	andeq	fp, r3, fp, lsr r3
    8e64:	00868800 	addeq	r8, r6, r0, lsl #16
    8e68:	00868200 	addeq	r8, r6, r0, lsl #4
    8e6c:	22c21800 	sbccs	r1, r2, #0, 16
    8e70:	85010000 	strhi	r0, [r1, #-0]
    8e74:	2a25170a 	bcs	94eaa4 <__RAM_SIZE+0x84eaa4>
    8e78:	86b30000 	ldrthi	r0, [r3], r0
    8e7c:	86b10000 	ldrthi	r0, [r1], r0
    8e80:	05180000 	ldreq	r0, [r8, #-0]
    8e84:	0100000c 	tsteq	r0, ip
    8e88:	2f150a86 	svccs	0x00150a86
    8e8c:	c8000001 	stmdagt	r0, {r0}
    8e90:	c6000086 	strgt	r0, [r0], -r6, lsl #1
    8e94:	1d000086 	stcne	0, cr0, [r0, #-536]	; 0xfffffde8
    8e98:	00000000 	andeq	r0, r0, r0
    8e9c:	000037f2 	strdeq	r3, [r0], -r2
    8ea0:	0000001d 	andeq	r0, r0, sp, lsl r0
    8ea4:	00380000 	eorseq	r0, r8, r0
    8ea8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8eac:	00001c6e 	andeq	r1, r0, lr, ror #24
    8eb0:	110a5301 	tstne	sl, r1, lsl #6
    8eb4:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    8ec0:	0086db00 	addeq	sp, r6, r0, lsl #22
    8ec4:	2da40100 	stfcss	f0, [r4]
    8ec8:	551b0000 	ldrpl	r0, [fp, #-0]
    8ecc:	0100001d 	tsteq	r0, sp, lsl r0
    8ed0:	b33e0a53 	teqlt	lr, #339968	; 0x53000
    8ed4:	01000003 	tsteq	r0, r3
    8ed8:	fb000087 	blx	90fe <__HEAP_SIZE+0x80fe>
    8edc:	18000086 	stmdane	r0, {r1, r2, r7}
    8ee0:	000022c2 	andeq	r2, r0, r2, asr #5
    8ee4:	170a5501 	strne	r5, [sl, -r1, lsl #10]
    8ee8:	00002a25 	andeq	r2, r0, r5, lsr #20
    8eec:	0000872c 	andeq	r8, r0, ip, lsr #14
    8ef0:	0000872a 	andeq	r8, r0, sl, lsr #14
    8ef4:	000c0518 	andeq	r0, ip, r8, lsl r5
    8ef8:	0a560100 	beq	1589300 <__RAM_SIZE+0x1489300>
    8efc:	00012f15 	andeq	r2, r1, r5, lsl pc
    8f00:	00874100 	addeq	r4, r7, r0, lsl #2
    8f04:	00873f00 	addeq	r3, r7, r0, lsl #30
    8f08:	0c261800 	stceq	8, cr1, [r6], #-0
    8f0c:	57010000 	strpl	r0, [r1, -r0]
    8f10:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8f14:	87580000 	ldrbhi	r0, [r8, -r0]
    8f18:	87540000 	ldrbhi	r0, [r4, -r0]
    8f1c:	001d0000 	andseq	r0, sp, r0
    8f20:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8f24:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8f28:	00000000 	andeq	r0, r0, r0
    8f2c:	0000381c 	andeq	r3, r0, ip, lsl r8
    8f30:	65012100 	strvs	r2, [r1, #-256]	; 0xffffff00
    8f34:	01000019 	tsteq	r0, r9, lsl r0
    8f38:	01110a39 	tsteq	r1, r9, lsr sl
    8f3c:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    8f48:	00008776 	andeq	r8, r0, r6, ror r7
    8f4c:	002e1601 	eoreq	r1, lr, r1, lsl #12
    8f50:	1d551b00 	vldrne	d17, [r5, #-0]
    8f54:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    8f58:	03b3370a 			; <UNDEFINED> instruction: 0x03b3370a
    8f5c:	879c0000 	ldrhi	r0, [ip, r0]
    8f60:	87960000 	ldrhi	r0, [r6, r0]
    8f64:	c2180000 	andsgt	r0, r8, #0
    8f68:	01000022 	tsteq	r0, r2, lsr #32
    8f6c:	25170a3b 	ldrcs	r0, [r7, #-2619]	; 0xfffff5c5
    8f70:	c700002a 	strgt	r0, [r0, -sl, lsr #32]
    8f74:	c5000087 	strgt	r0, [r0, #-135]	; 0xffffff79
    8f78:	18000087 	stmdane	r0, {r0, r1, r2, r7}
    8f7c:	00000c05 	andeq	r0, r0, r5, lsl #24
    8f80:	150a3c01 	strne	r3, [sl, #-3073]	; 0xfffff3ff
    8f84:	0000012f 	andeq	r0, r0, pc, lsr #2
    8f88:	000087dc 	ldrdeq	r8, [r0], -ip
    8f8c:	000087da 	ldrdeq	r8, [r0], -sl
    8f90:	0000001d 	andeq	r0, r0, sp, lsl r0
    8f94:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8f98:	00001d00 	andeq	r1, r0, r0, lsl #26
    8f9c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8fa0:	21000000 	mrscs	r0, (UNDEF: 0)
    8fa4:	001b1601 	andseq	r1, fp, r1, lsl #12
    8fa8:	09b50100 	ldmibeq	r5!, {r8}
    8fac:	04f20110 	ldrbteq	r0, [r2], #272	; 0x110
	...
    8fb8:	87ef0000 	strbhi	r0, [pc, r0]!
    8fbc:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    8fc0:	1b00002e 	blne	9080 <__HEAP_SIZE+0x8080>
    8fc4:	00001d55 	andeq	r1, r0, r5, asr sp
    8fc8:	2c09b501 	cfstr32cs	mvfx11, [r9], {1}
    8fcc:	000003a7 	andeq	r0, r0, r7, lsr #7
    8fd0:	00008831 	andeq	r8, r0, r1, lsr r8
    8fd4:	00008827 	andeq	r8, r0, r7, lsr #16
    8fd8:	0016c318 	andseq	ip, r6, r8, lsl r3
    8fdc:	09b70100 	ldmibeq	r7!, {r8}
    8fe0:	0004f214 	andeq	pc, r4, r4, lsl r2	; <UNPREDICTABLE>
    8fe4:	00887700 	addeq	r7, r8, r0, lsl #14
    8fe8:	00887300 	addeq	r7, r8, r0, lsl #6
    8fec:	14a71800 	strtne	r1, [r7], #2048	; 0x800
    8ff0:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    8ff4:	1aca1809 	bne	ff28f020 <__StackTop+0xc718f020>
    8ff8:	88990000 	ldmhi	r9, {}	; <UNPREDICTABLE>
    8ffc:	88950000 	ldmhi	r5, {}	; <UNPREDICTABLE>
    9000:	41180000 	tstmi	r8, r0
    9004:	01000015 	tsteq	r0, r5, lsl r0
    9008:	ca1809b9 	bgt	60b6f4 <__RAM_SIZE+0x50b6f4>
    900c:	bb00001a 	bllt	907c <__HEAP_SIZE+0x807c>
    9010:	b7000088 	strlt	r0, [r0, -r8, lsl #1]
    9014:	18000088 	stmdane	r0, {r3, r7}
    9018:	00001533 	andeq	r1, r0, r3, lsr r5
    901c:	1809ba01 	stmdane	r9, {r0, r9, fp, ip, sp, pc}
    9020:	00001aca 	andeq	r1, r0, sl, asr #21
    9024:	000088dd 	ldrdeq	r8, [r0], -sp
    9028:	000088d9 	ldrdeq	r8, [r0], -r9
    902c:	00167a18 	andseq	r7, r6, r8, lsl sl
    9030:	09bb0100 	ldmibeq	fp!, {r8}
    9034:	001aca18 	andseq	ip, sl, r8, lsl sl
    9038:	0088ff00 	addeq	pc, r8, r0, lsl #30
    903c:	0088fb00 	addeq	pc, r8, r0, lsl #22
    9040:	22c21800 	sbccs	r1, r2, #0, 16
    9044:	bc010000 	stclt	0, cr0, [r1], {-0}
    9048:	2a2b1d09 	bcs	ad0474 <__RAM_SIZE+0x9d0474>
    904c:	89270000 	stmdbhi	r7!, {}	; <UNPREDICTABLE>
    9050:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
    9054:	10230000 	eorne	r0, r3, r0
    9058:	e6000005 	str	r0, [r0], -r5
    905c:	2e00002e 	cdpcs	0, 0, cr0, cr0, cr14, {1}
    9060:	ec010078 	stc	0, cr0, [r1], {120}	; 0x78
    9064:	01192809 	tsteq	r9, r9, lsl #16
    9068:	896f0000 	stmdbhi	pc!, {}^	; <UNPREDICTABLE>
    906c:	89690000 	stmdbhi	r9!, {}^	; <UNPREDICTABLE>
    9070:	1d000000 	stcne	0, cr0, [r0, #-0]
    9074:	00000000 	andeq	r0, r0, r0
    9078:	000037f2 	strdeq	r3, [r0], -r2
    907c:	0000001d 	andeq	r0, r0, sp, lsl r0
    9080:	00380000 	eorseq	r0, r8, r0
    9084:	01220000 			; <UNDEFINED> instruction: 0x01220000
    9088:	00000053 	andeq	r0, r0, r3, asr r0
    908c:	0a098301 	beq	269c98 <__RAM_SIZE+0x169c98>
    9090:	0029a401 	eoreq	sl, r9, r1, lsl #8
    9094:	0029c210 	eoreq	ip, r9, r0, lsl r2
    9098:	00899810 	addeq	r9, r9, r0, lsl r8
    909c:	2f740100 	svccs	0x00740100
    90a0:	611b0000 	tstvs	fp, r0
    90a4:	01000020 	tsteq	r0, r0, lsr #32
    90a8:	5b270983 	blpl	9cb6bc <__RAM_SIZE+0x8cb6bc>
    90ac:	be000001 	cdplt	0, 0, cr0, cr0, cr1, {0}
    90b0:	b8000089 	stmdalt	r0, {r0, r3, r7}
    90b4:	18000089 	stmdane	r0, {r0, r3, r7}
    90b8:	00002153 	andeq	r2, r0, r3, asr r1
    90bc:	14098501 	strne	r8, [r9], #-1281	; 0xfffffaff
    90c0:	00000119 	andeq	r0, r0, r9, lsl r1
    90c4:	000089ee 	andeq	r8, r0, lr, ror #19
    90c8:	000089ea 	andeq	r8, r0, sl, ror #19
    90cc:	0029ae1d 	eoreq	sl, r9, sp, lsl lr
    90d0:	00262810 	eoreq	r2, r6, r0, lsl r8
    90d4:	29b61e00 	ldmibcs	r6!, {r9, sl, fp, ip}
    90d8:	09861000 	stmibeq	r6, {ip}
    90dc:	2f610000 	svccs	0x00610000
    90e0:	011f0000 	tsteq	pc, r0
    90e4:	00740250 	rsbseq	r0, r4, r0, asr r2
    90e8:	0151011f 	cmpeq	r1, pc, lsl r1
    90ec:	ba1d0030 	blt	7491b4 <__RAM_SIZE+0x6491b4>
    90f0:	cf100029 	svcgt	0x00100029
    90f4:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    90f8:	100029c0 	andne	r2, r0, r0, asr #19
    90fc:	0000382a 	andeq	r3, r0, sl, lsr #16
    9100:	c8012100 	stmdagt	r1, {r8, sp}
    9104:	01000014 	tsteq	r0, r4, lsl r0
    9108:	01100927 	tsteq	r0, r7, lsr #18
    910c:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    9118:	00008a0d 	andeq	r8, r0, sp, lsl #20
    911c:	00304701 	eorseq	r4, r0, r1, lsl #14
    9120:	1f401b00 	svcne	0x00401b00
    9124:	27010000 	strcs	r0, [r1, -r0]
    9128:	18a33409 	stmiane	r3!, {r0, r3, sl, ip, sp}
    912c:	8a310000 	bhi	c49134 <__RAM_SIZE+0xb49134>
    9130:	8a2d0000 	bhi	b49138 <__RAM_SIZE+0xa49138>
    9134:	631b0000 	tstvs	fp, #0
    9138:	01000022 	tsteq	r0, r2, lsr #32
    913c:	5b320928 	blpl	c8b5e4 <__RAM_SIZE+0xb8b5e4>
    9140:	55000001 	strpl	r0, [r0, #-1]
    9144:	4f00008a 	svcmi	0x0000008a
    9148:	1800008a 	stmdane	r0, {r1, r3, r7}
    914c:	00002289 	andeq	r2, r0, r9, lsl #5
    9150:	14092a01 	strne	r2, [r9], #-2561	; 0xfffff5ff
    9154:	0000014a 	andeq	r0, r0, sl, asr #2
    9158:	00008a8f 	andeq	r8, r0, pc, lsl #21
    915c:	00008a81 	andeq	r8, r0, r1, lsl #21
    9160:	00215318 	eoreq	r5, r1, r8, lsl r3
    9164:	092b0100 	stmdbeq	fp!, {r8}
    9168:	00011914 	andeq	r1, r1, r4, lsl r9
    916c:	008aeb00 	addeq	lr, sl, r0, lsl #22
    9170:	008ae700 	addeq	lr, sl, r0, lsl #14
    9174:	1a821800 	bne	fe08f17c <__StackTop+0xc5f8f17c>
    9178:	2b010000 	blcs	49180 <__HEAP_SIZE+0x48180>
    917c:	01192509 	tsteq	r9, r9, lsl #10
    9180:	8b130000 	blhi	4c9188 <__RAM_SIZE+0x3c9188>
    9184:	8b090000 	blhi	24918c <__RAM_SIZE+0x14918c>
    9188:	10230000 	eorne	r0, r3, r0
    918c:	2b000006 	blcs	91ac <__HEAP_SIZE+0x81ac>
    9190:	18000030 	stmdane	r0, {r4, r5}
    9194:	00001977 	andeq	r1, r0, r7, ror r9
    9198:	1e093601 	cfmadd32ne	mvax0, mvfx3, mvfx9, mvfx1
    919c:	0000015b 	andeq	r0, r0, fp, asr r1
    91a0:	00008b5b 	andeq	r8, r0, fp, asr fp
    91a4:	00008b57 	andeq	r8, r0, r7, asr fp
    91a8:	00000020 	andeq	r0, r0, r0, lsr #32
    91ac:	00098600 	andeq	r8, r9, r0, lsl #12
    91b0:	51011f00 	tstpl	r1, r0, lsl #30
    91b4:	00003001 	andeq	r3, r0, r1
    91b8:	0000001d 	andeq	r0, r0, sp, lsl r0
    91bc:	00262800 	eoreq	r2, r6, r0, lsl #16
    91c0:	00001d00 	andeq	r1, r0, r0, lsl #26
    91c4:	24cf0000 	strbcs	r0, [pc], #0	; 91cc <__HEAP_SIZE+0x81cc>
    91c8:	001d0000 	andseq	r0, sp, r0
    91cc:	2a000000 	bcs	91d4 <__HEAP_SIZE+0x81d4>
    91d0:	00000038 	andeq	r0, r0, r8, lsr r0
    91d4:	1d9e0122 	ldfnes	f0, [lr, #136]	; 0x88
    91d8:	8f010000 	svchi	0x00010000
    91dc:	00010a08 	andeq	r0, r1, r8, lsl #20
    91e0:	00000000 	andeq	r0, r0, r0
    91e4:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    91e8:	0100008b 	smlabbeq	r0, fp, r0, r0
    91ec:	0000313e 	andeq	r3, r0, lr, lsr r1
    91f0:	001ef61b 	andseq	pc, lr, fp, lsl r6	; <UNPREDICTABLE>
    91f4:	088f0100 	stmeq	pc, {r8}	; <UNPREDICTABLE>
    91f8:	0003a724 	andeq	sl, r3, r4, lsr #14
    91fc:	008b9f00 	addeq	r9, fp, r0, lsl #30
    9200:	008b9900 	addeq	r9, fp, r0, lsl #18
    9204:	22c21800 	sbccs	r1, r2, #0, 16
    9208:	91010000 	mrsls	r0, (UNDEF: 1)
    920c:	06661108 	strbteq	r1, [r6], -r8, lsl #2
    9210:	8bcc0000 	blhi	ff309218 <__StackTop+0xc7209218>
    9214:	8bc80000 	blhi	ff20921c <__StackTop+0xc710921c>
    9218:	96180000 	ldrls	r0, [r8], -r0
    921c:	01000015 	tsteq	r0, r5, lsl r0
    9220:	19140892 	ldmdbne	r4, {r1, r4, r7, fp}
    9224:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
    9228:	ea00008b 	b	945c <__HEAP_SIZE+0x845c>
    922c:	1800008b 	stmdane	r0, {r0, r1, r3, r7}
    9230:	000023f1 	strdeq	r2, [r0], -r1
    9234:	14089301 	strne	r9, [r8], #-769	; 0xfffffcff
    9238:	00000119 	andeq	r0, r0, r9, lsl r1
    923c:	00008c20 	andeq	r8, r0, r0, lsr #24
    9240:	00008c1c 	andeq	r8, r0, ip, lsl ip
    9244:	0000001d 	andeq	r0, r0, sp, lsl r0
    9248:	0037f200 	eorseq	pc, r7, r0, lsl #4
    924c:	00001e00 	andeq	r1, r0, r0, lsl #28
    9250:	37d40000 	ldrbcc	r0, [r4, r0]
    9254:	30d40000 	sbcscc	r0, r4, r0
    9258:	011f0000 	tsteq	pc, r0
    925c:	00750250 	rsbseq	r0, r5, r0, asr r2
    9260:	00001e00 	andeq	r1, r0, r0, lsl #28
    9264:	37d40000 	ldrbcc	r0, [r4, r0]
    9268:	30e80000 	rsccc	r0, r8, r0
    926c:	011f0000 	tsteq	pc, r0
    9270:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    9274:	00001d00 	andeq	r1, r0, r0, lsl #26
    9278:	14910000 	ldrne	r0, [r1], #0
    927c:	001d0000 	andseq	r0, sp, r0
    9280:	00000000 	andeq	r0, r0, r0
    9284:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    9288:	00000000 	andeq	r0, r0, r0
    928c:	000014a7 	andeq	r1, r0, r7, lsr #9
    9290:	0000310e 	andeq	r3, r0, lr, lsl #2
    9294:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9298:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    929c:	00000000 	andeq	r0, r0, r0
    92a0:	0000389e 	muleq	r0, lr, r8
    92a4:	0000312b 	andeq	r3, r0, fp, lsr #2
    92a8:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    92ac:	008b2c03 	addeq	r2, fp, r3, lsl #24
    92b0:	51011f38 	tstpl	r1, r8, lsr pc
    92b4:	00007502 	andeq	r7, r0, r2, lsl #10
    92b8:	0000001d 	andeq	r0, r0, sp, lsl r0
    92bc:	00380000 	eorseq	r0, r8, r0
    92c0:	00001d00 	andeq	r1, r0, r0, lsl #26
    92c4:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    92c8:	1a000000 	bne	92d0 <__HEAP_SIZE+0x82d0>
    92cc:	00001ad4 	ldrdeq	r1, [r0], -r4
    92d0:	1107e301 	tstne	r7, r1, lsl #6
    92d4:	00242c01 	eoreq	r2, r4, r1, lsl #24
    92d8:	0024e810 	eoreq	lr, r4, r0, lsl r8
    92dc:	008c3e10 	addeq	r3, ip, r0, lsl lr
    92e0:	31b60100 			; <UNDEFINED> instruction: 0x31b60100
    92e4:	341b0000 	ldrcc	r0, [fp], #-0
    92e8:	0100001b 	tsteq	r0, fp, lsl r0
    92ec:	663307e3 	ldrtvs	r0, [r3], -r3, ror #15
    92f0:	62000006 	andvs	r0, r0, #6
    92f4:	5e00008c 	cdppl	0, 0, cr0, cr0, cr12, {4}
    92f8:	1c00008c 	stcne	0, cr0, [r0], {140}	; 0x8c
    92fc:	1000247a 	andne	r2, r0, sl, ror r4
    9300:	100024ac 	andne	r2, r0, ip, lsr #9
    9304:	00003191 	muleq	r0, r1, r1
    9308:	0009db18 	andeq	sp, r9, r8, lsl fp
    930c:	081d0100 	ldmdaeq	sp, {r8}
    9310:	0003910d 	andeq	r9, r3, sp, lsl #2
    9314:	008c8200 	addeq	r8, ip, r0, lsl #4
    9318:	008c8000 	addeq	r8, ip, r0
    931c:	341d0000 	ldrcc	r0, [sp], #-0
    9320:	f2100024 	vhadd.s16	d0, d0, d20
    9324:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    9328:	100024b0 			; <UNDEFINED> instruction: 0x100024b0
    932c:	00003800 	andeq	r3, r0, r0, lsl #16
    9330:	0024c81d 	eoreq	ip, r4, sp, lsl r8
    9334:	00163810 	andseq	r3, r6, r0, lsl r8
    9338:	24ce1d00 	strbcs	r1, [lr], #3328	; 0xd00
    933c:	382a1000 	stmdacc	sl!, {ip}
    9340:	1a000000 	bne	9348 <__HEAP_SIZE+0x8348>
    9344:	00001e6f 	andeq	r1, r0, pc, ror #28
    9348:	0d070101 	stfeqs	f0, [r7, #-4]
    934c:	0022dc01 	eoreq	sp, r2, r1, lsl #24
    9350:	00237210 	eoreq	r7, r3, r0, lsl r2
    9354:	008c9510 	addeq	r9, ip, r0, lsl r5
    9358:	32f30100 	rscscc	r0, r3, #0, 2
    935c:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    9360:	01000022 	tsteq	r0, r2, lsr #32
    9364:	ea320701 	b	c8af70 <__RAM_SIZE+0xb8af70>
    9368:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    936c:	b500008c 	strlt	r0, [r0, #-140]	; 0xffffff74
    9370:	1b00008c 	blne	95a8 <__HEAP_SIZE+0x85a8>
    9374:	0000199a 	muleq	r0, sl, r9
    9378:	36070201 	strcc	r0, [r7], -r1, lsl #4
    937c:	000000be 	strheq	r0, [r0], -lr
    9380:	00008cdb 	ldrdeq	r8, [r0], -fp
    9384:	00008cd7 	ldrdeq	r8, [r0], -r7
    9388:	0018fe1b 	andseq	pc, r8, fp, lsl lr	; <UNPREDICTABLE>
    938c:	07030100 	streq	r0, [r3, -r0, lsl #2]
    9390:	00003540 	andeq	r3, r0, r0, asr #10
    9394:	008d0100 	addeq	r0, sp, r0, lsl #2
    9398:	008cf900 	addeq	pc, ip, r0, lsl #18
    939c:	1e841b00 	vdivne.f64	d1, d4, d0
    93a0:	04010000 	streq	r0, [r1], #-0
    93a4:	00a13007 	adceq	r3, r1, r7
    93a8:	8d420000 	stclhi	0, cr0, [r2, #-0]
    93ac:	8d3e0000 	ldchi	0, cr0, [lr, #-0]
    93b0:	721b0000 	andsvc	r0, fp, #0
    93b4:	01000014 	tsteq	r0, r4, lsl r0
    93b8:	2f2f0705 	svccs	0x002f0705
    93bc:	64000001 	strvs	r0, [r0], #-1
    93c0:	6000008d 	andvs	r0, r0, sp, lsl #1
    93c4:	1900008d 	stmdbne	r0, {r0, r2, r3, r7}
    93c8:	000023a4 	andeq	r2, r0, r4, lsr #7
    93cc:	38070601 	stmdacc	r7, {r0, r9, sl}
    93d0:	000032f9 	strdeq	r3, [r0], -r9
    93d4:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
    93d8:	00001b34 	andeq	r1, r0, r4, lsr fp
    93dc:	2b070701 	blcs	1cafe8 <__RAM_SIZE+0xcafe8>
    93e0:	00000666 	andeq	r0, r0, r6, ror #12
    93e4:	19089102 	stmdbne	r8, {r1, r8, ip, pc}
    93e8:	000021cd 	andeq	r2, r0, sp, asr #3
    93ec:	40070801 	andmi	r0, r7, r1, lsl #16
    93f0:	00003304 	andeq	r3, r0, r4, lsl #6
    93f4:	180c9102 	stmdane	ip, {r1, r8, ip, pc}
    93f8:	00002316 	andeq	r2, r0, r6, lsl r3
    93fc:	13070a01 	movwne	r0, #31233	; 0x7a01
    9400:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    9404:	00008d85 	andeq	r8, r0, r5, lsl #27
    9408:	00008d83 	andeq	r8, r0, r3, lsl #27
    940c:	0100782e 	tsteq	r0, lr, lsr #16
    9410:	2f11070b 	svccs	0x0011070b
    9414:	9a000001 	bls	9420 <__HEAP_SIZE+0x8420>
    9418:	9800008d 	stmdals	r0, {r0, r2, r3, r7}
    941c:	1e00008d 	cdpne	0, 0, cr0, cr0, cr13, {4}
    9420:	100022fa 	strdne	r2, [r0], -sl
    9424:	000038ad 	andeq	r3, r0, sp, lsr #17
    9428:	000032ae 	andeq	r3, r0, lr, lsr #5
    942c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    9430:	011fa508 	tsteq	pc, r8, lsl #10
    9434:	00770452 	rsbseq	r0, r7, r2, asr r4
    9438:	1e002432 	cfmvdhrne	mvd0, r2
    943c:	10002344 	andne	r2, r0, r4, asr #6
    9440:	000038bb 			; <UNDEFINED> instruction: 0x000038bb
    9444:	000032c2 	andeq	r3, r0, r2, asr #5
    9448:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    944c:	1e000474 	mcrne	4, 0, r0, cr0, cr4, {3}
    9450:	1000234c 	andne	r2, r0, ip, asr #6
    9454:	000038bb 			; <UNDEFINED> instruction: 0x000038bb
    9458:	000032d6 	ldrdeq	r3, [r0], -r6
    945c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9460:	20001874 	andcs	r1, r0, r4, ror r8
    9464:	10002362 	andne	r2, r0, r2, ror #6
    9468:	000038ca 	andeq	r3, r0, sl, asr #17
    946c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9470:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    9474:	00780252 	rsbseq	r0, r8, r2, asr r2
    9478:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    947c:	00000079 	andeq	r0, r0, r9, ror r0
    9480:	03a70407 			; <UNDEFINED> instruction: 0x03a70407
    9484:	f3030000 	vhadd.u8	d0, d3, d0
    9488:	07000032 	smladxeq	r0, r2, r0, r0
    948c:	0005b604 	andeq	fp, r5, r4, lsl #12
    9490:	32fe0300 	rscscc	r0, lr, #0, 6
    9494:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9498:	00000360 	andeq	r0, r0, r0, ror #6
    949c:	1006b601 	andne	fp, r6, r1, lsl #12
    94a0:	00011901 	andeq	r1, r1, r1, lsl #18
    94a4:	00268c00 	eoreq	r8, r6, r0, lsl #24
    94a8:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    94ac:	008dad10 	addeq	sl, sp, r0, lsl sp
    94b0:	34140100 	ldrcc	r0, [r4], #-256	; 0xffffff00
    94b4:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    94b8:	01000022 	tsteq	r0, r2, lsr #32
    94bc:	ea2c06b6 	b	b0af9c <__RAM_SIZE+0xa0af9c>
    94c0:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    94c4:	f100008d 	cps	#13
    94c8:	1b00008d 	blne	9704 <__HEAP_SIZE+0x8704>
    94cc:	0000199a 	muleq	r0, sl, r9
    94d0:	3006b701 	andcc	fp, r6, r1, lsl #14
    94d4:	000000be 	strheq	r0, [r0], -lr
    94d8:	00008e1a 	andeq	r8, r0, sl, lsl lr
    94dc:	00008e16 	andeq	r8, r0, r6, lsl lr
    94e0:	0018fe1b 	andseq	pc, r8, fp, lsl lr	; <UNPREDICTABLE>
    94e4:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
    94e8:	0000353a 	andeq	r3, r0, sl, lsr r5
    94ec:	008e3f00 	addeq	r3, lr, r0, lsl #30
    94f0:	008e3b00 	addeq	r3, lr, r0, lsl #22
    94f4:	1e841b00 	vdivne.f64	d1, d4, d0
    94f8:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    94fc:	00a12a06 	adceq	r2, r1, r6, lsl #20
    9500:	8e640000 	cdphi	0, 6, cr0, cr4, cr0, {0}
    9504:	8e600000 	cdphi	0, 6, cr0, cr0, cr0, {0}
    9508:	721b0000 	andsvc	r0, fp, #0
    950c:	01000014 	tsteq	r0, r4, lsl r0
    9510:	2f2906ba 	svccs	0x002906ba
    9514:	89000001 	stmdbhi	r0, {r0}
    9518:	8500008e 	strhi	r0, [r0, #-142]	; 0xffffff72
    951c:	1b00008e 	blne	975c <__HEAP_SIZE+0x875c>
    9520:	000023a4 	andeq	r2, r0, r4, lsr #7
    9524:	3206bb01 	andcc	fp, r6, #1024	; 0x400
    9528:	000032f9 	strdeq	r3, [r0], -r9
    952c:	00008ead 	andeq	r8, r0, sp, lsr #29
    9530:	00008ea9 	andeq	r8, r0, r9, lsr #29
    9534:	001b3418 	andseq	r3, fp, r8, lsl r4
    9538:	06bd0100 	ldrteq	r0, [sp], r0, lsl #2
    953c:	00066611 	andeq	r6, r6, r1, lsl r6
    9540:	008ed100 	addeq	sp, lr, r0, lsl #2
    9544:	008ecd00 	addeq	ip, lr, r0, lsl #26
    9548:	1a191800 	bne	64f550 <__RAM_SIZE+0x54f550>
    954c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    9550:	01191406 	tsteq	r9, r6, lsl #8
    9554:	8ef30000 	cdphi	0, 15, cr0, cr3, cr0, {0}
    9558:	8eef0000 	cdphi	0, 14, cr0, cr15, cr0, {0}
    955c:	9c1e0000 	ldcls	0, cr0, [lr], {-0}
    9560:	14100026 	ldrne	r0, [r0], #-38	; 0xffffffda
    9564:	0a000034 	beq	963c <__HEAP_SIZE+0x863c>
    9568:	1f000034 	svcne	0x00000034
    956c:	f3035001 	vhadd.u8	d5, d3, d1
    9570:	011f5001 	tsteq	pc, r1
    9574:	01f30351 	mvnseq	r0, r1, asr r3
    9578:	52011f51 	andpl	r1, r1, #324	; 0x144
    957c:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    9580:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    9584:	1f5301f3 	svcne	0x005301f3
    9588:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    958c:	021f0074 	andseq	r0, pc, #116	; 0x74
    9590:	9103047d 	tstls	r3, sp, ror r4
    9594:	1d000604 	stcne	6, cr0, [r0, #-16]
    9598:	100026a2 	andne	r2, r0, r2, lsr #13
    959c:	0000313e 	andeq	r3, r0, lr, lsr r1
    95a0:	17bf2d00 	ldrne	r2, [pc, r0, lsl #26]!
    95a4:	54010000 	strpl	r0, [r1], #-0
    95a8:	66011406 	strvs	r1, [r1], -r6, lsl #8
    95ac:	e8000006 	stmda	r0, {r1, r2}
    95b0:	4a100024 	bmi	409648 <__RAM_SIZE+0x309648>
    95b4:	14100025 	ldrne	r0, [r0], #-37	; 0xffffffdb
    95b8:	0100008f 	smlabbeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    95bc:	0000357e 	andeq	r3, r0, lr, ror r5
    95c0:	0022f61b 	eoreq	pc, r2, fp, lsl r6	; <UNPREDICTABLE>
    95c4:	06540100 	ldrbeq	r0, [r4], -r0, lsl #2
    95c8:	0000ea32 	andeq	lr, r0, r2, lsr sl
    95cc:	008f5c00 	addeq	r5, pc, r0, lsl #24
    95d0:	008f5800 	addeq	r5, pc, r0, lsl #16
    95d4:	199a1b00 	ldmibne	sl, {r8, r9, fp, ip}
    95d8:	55010000 	strpl	r0, [r1, #-0]
    95dc:	00be3606 	adcseq	r3, lr, r6, lsl #12
    95e0:	8f7e0000 	svchi	0x007e0000
    95e4:	8f7a0000 	svchi	0x007a0000
    95e8:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    95ec:	01000018 	tsteq	r0, r8, lsl r0
    95f0:	35400656 	strbcc	r0, [r0, #-1622]	; 0xfffff9aa
    95f4:	a0000000 	andge	r0, r0, r0
    95f8:	9c00008f 	stcls	0, cr0, [r0], {143}	; 0x8f
    95fc:	1b00008f 	blne	9840 <__HEAP_SIZE+0x8840>
    9600:	00001e84 	andeq	r1, r0, r4, lsl #29
    9604:	30065701 	andcc	r5, r6, r1, lsl #14
    9608:	000000a1 	andeq	r0, r0, r1, lsr #1
    960c:	00008fc2 	andeq	r8, r0, r2, asr #31
    9610:	00008fbe 			; <UNDEFINED> instruction: 0x00008fbe
    9614:	0014721b 	andseq	r7, r4, fp, lsl r2
    9618:	06580100 	ldrbeq	r0, [r8], -r0, lsl #2
    961c:	00012f2f 	andeq	r2, r1, pc, lsr #30
    9620:	008fe400 	addeq	lr, pc, r0, lsl #8
    9624:	008fe000 	addeq	lr, pc, r0
    9628:	23a41b00 			; <UNDEFINED> instruction: 0x23a41b00
    962c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    9630:	32f93806 	rscscc	r3, r9, #393216	; 0x60000
    9634:	90080000 	andls	r0, r8, r0
    9638:	90040000 	andls	r0, r4, r0
    963c:	34180000 	ldrcc	r0, [r8], #-0
    9640:	0100001b 	tsteq	r0, fp, lsl r0
    9644:	6611065b 			; <UNDEFINED> instruction: 0x6611065b
    9648:	30000006 	andcc	r0, r0, r6
    964c:	28000090 	stmdacs	r0, {r4, r7}
    9650:	23000090 	movwcs	r0, #144	; 0x90
    9654:	000004e0 	andeq	r0, r0, r0, ror #9
    9658:	0000353e 	andeq	r3, r0, lr, lsr r5
    965c:	001ed818 	andseq	sp, lr, r8, lsl r8
    9660:	06800100 	streq	r0, [r0], r0, lsl #2
    9664:	0005bb1b 	andeq	fp, r5, fp, lsl fp
    9668:	00906a00 	addseq	r6, r0, r0, lsl #20
    966c:	00906400 	addseq	r6, r0, r0, lsl #8
    9670:	24fc1e00 	ldrbtcs	r1, [ip], #3584	; 0xe00
    9674:	38d81000 	ldmcc	r8, {ip}^
    9678:	34fa0000 	ldrbtcc	r0, [sl], #0
    967c:	011f0000 	tsteq	pc, r0
    9680:	00750450 	rsbseq	r0, r5, r0, asr r4
    9684:	1e002432 	cfmvdhrne	mvd0, r2
    9688:	10002506 	andne	r2, r0, r6, lsl #10
    968c:	000038d8 	ldrdeq	r3, [r0], -r8
    9690:	0000350e 	andeq	r3, r0, lr, lsl #10
    9694:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9698:	1e004c08 	cdpne	12, 0, cr4, cr0, cr8, {0}
    969c:	10002512 	andne	r2, r0, r2, lsl r5
    96a0:	000038e6 	andeq	r3, r0, r6, ror #17
    96a4:	0000352d 	andeq	r3, r0, sp, lsr #10
    96a8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    96ac:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    96b0:	1f300151 	svcne	0x00300151
    96b4:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    96b8:	4420004c 	strtmi	r0, [r0], #-76	; 0xffffffb4
    96bc:	38100025 	ldmdacc	r0, {r0, r2, r5}
    96c0:	1f000038 	svcne	0x00000038
    96c4:	79025001 	stmdbvc	r2, {r0, ip, lr}
    96c8:	20000000 	andcs	r0, r0, r0
    96cc:	10002536 	andne	r2, r0, r6, lsr r5
    96d0:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    96d4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    96d8:	011f0076 	tsteq	pc, r6, ror r0	; <UNPREDICTABLE>
    96dc:	00770251 	rsbseq	r0, r7, r1, asr r2
    96e0:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    96e4:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    96e8:	00780253 	rsbseq	r0, r8, r3, asr r2
    96ec:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    96f0:	06009103 	streq	r9, [r0], -r3, lsl #2
    96f4:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    96f8:	06049103 	streq	r9, [r4], -r3, lsl #2
    96fc:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    9700:	1f007402 	svcne	0x00007402
    9704:	010c7d02 	tsteq	ip, r2, lsl #26
    9708:	21000030 	tstcs	r0, r0, lsr r0
    970c:	00174501 	andseq	r4, r7, r1, lsl #10
    9710:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    9714:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
    9718:	26640000 	strbtcs	r0, [r4], -r0
    971c:	268c1000 	strcs	r1, [ip], r0
    9720:	90931000 	addsls	r1, r3, r0
    9724:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    9728:	1b000036 	blne	9808 <__HEAP_SIZE+0x8808>
    972c:	000022f6 	strdeq	r2, [r0], -r6
    9730:	34051d01 	strcc	r1, [r5], #-3329	; 0xfffff2ff
    9734:	000000ea 	andeq	r0, r0, sl, ror #1
    9738:	000090cf 	andeq	r9, r0, pc, asr #1
    973c:	000090cb 	andeq	r9, r0, fp, asr #1
    9740:	00199a1b 	andseq	r9, r9, fp, lsl sl
    9744:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    9748:	0000be38 	andeq	fp, r0, r8, lsr lr
    974c:	0090f400 	addseq	pc, r0, r0, lsl #8
    9750:	0090f000 	addseq	pc, r0, r0
    9754:	18fe1b00 	ldmne	lr!, {r8, r9, fp, ip}^
    9758:	1f010000 	svcne	0x00010000
    975c:	00354205 	eorseq	r4, r5, r5, lsl #4
    9760:	91190000 	tstls	r9, r0
    9764:	91150000 	tstls	r5, r0
    9768:	841b0000 	ldrhi	r0, [fp], #-0
    976c:	0100001e 	tsteq	r0, lr, lsl r0
    9770:	a1320520 	teqge	r2, r0, lsr #10
    9774:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    9778:	3a000091 	bcc	99c4 <__HEAP_SIZE+0x89c4>
    977c:	19000091 	stmdbne	r0, {r0, r4, r7}
    9780:	00001472 	andeq	r1, r0, r2, ror r4
    9784:	31052101 	tstcc	r5, r1, lsl #2
    9788:	0000012f 	andeq	r0, r0, pc, lsr #2
    978c:	19009102 	stmdbne	r0, {r1, r8, ip, pc}
    9790:	00001b25 	andeq	r1, r0, r5, lsr #22
    9794:	39052201 	stmdbcc	r5, {r0, r9, sp}
    9798:	000005c1 	andeq	r0, r0, r1, asr #11
    979c:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
    97a0:	00001d19 	andeq	r1, r0, r9, lsl sp
    97a4:	3a052301 	bcc	1523b0 <__RAM_SIZE+0x523b0>
    97a8:	000008f6 	strdeq	r0, [r0], -r6
    97ac:	16089102 	strne	r9, [r8], -r2, lsl #2
    97b0:	00001a19 	andeq	r1, r0, r9, lsl sl
    97b4:	16052501 	strne	r2, [r5], -r1, lsl #10
    97b8:	000003a7 	andeq	r0, r0, r7, lsr #7
    97bc:	18749102 	ldmdane	r4!, {r1, r8, ip, pc}^
    97c0:	00001b34 	andeq	r1, r0, r4, lsr fp
    97c4:	11052601 	tstne	r5, r1, lsl #12
    97c8:	00000666 	andeq	r0, r0, r6, ror #12
    97cc:	00009161 	andeq	r9, r0, r1, ror #2
    97d0:	0000915f 	andeq	r9, r0, pc, asr r1
    97d4:	0026801e 	eoreq	r8, r6, lr, lsl r0
    97d8:	00369910 	eorseq	r9, r6, r0, lsl r9
    97dc:	00368f00 	eorseq	r8, r6, r0, lsl #30
    97e0:	50011f00 	andpl	r1, r1, r0, lsl #30
    97e4:	5001f303 	andpl	pc, r1, r3, lsl #6
    97e8:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    97ec:	1f5101f3 	svcne	0x005101f3
    97f0:	f3035201 	vhsub.u8	d5, d3, d1
    97f4:	011f5201 	tsteq	pc, r1, lsl #4
    97f8:	01f30353 	mvnseq	r0, r3, asr r3
    97fc:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    9800:	00740200 	rsbseq	r0, r4, r0, lsl #4
    9804:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    9808:	06049103 	streq	r9, [r4], -r3, lsl #2
    980c:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    9810:	06089103 	streq	r9, [r8], -r3, lsl #2
    9814:	0c7d021f 	lfmeq	f0, 2, [sp], #-124	; 0xffffff84
    9818:	00749102 	rsbseq	r9, r4, r2, lsl #2
    981c:	0026861d 	eoreq	r8, r6, sp, lsl r6
    9820:	00313e10 	eorseq	r3, r1, r0, lsl lr
    9824:	502d0000 	eorpl	r0, sp, r0
    9828:	01000018 	tsteq	r0, r8, lsl r0
    982c:	011404e6 	tsteq	r4, r6, ror #9
    9830:	00000666 	andeq	r0, r0, r6, ror #12
    9834:	10002372 	andne	r2, r0, r2, ror r3
    9838:	100023c4 	andne	r2, r0, r4, asr #7
    983c:	00009174 	andeq	r9, r0, r4, ror r1
    9840:	0037d401 	eorseq	sp, r7, r1, lsl #8
    9844:	22f61b00 	rscscs	r1, r6, #0, 22
    9848:	e6010000 	str	r0, [r1], -r0
    984c:	00ea3804 	rsceq	r3, sl, r4, lsl #16
    9850:	91c60000 	bicls	r0, r6, r0
    9854:	91b80000 			; <UNDEFINED> instruction: 0x91b80000
    9858:	9a1b0000 	bls	6c9860 <__RAM_SIZE+0x5c9860>
    985c:	01000019 	tsteq	r0, r9, lsl r0
    9860:	be3c04e7 	cfsubdlt	mvd0, mvd12, mvd7
    9864:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    9868:	21000092 	swpcs	r0, r2, [r0]	; <UNPREDICTABLE>
    986c:	1b000092 	blne	9abc <__HEAP_SIZE+0x8abc>
    9870:	000018fe 	strdeq	r1, [r0], -lr
    9874:	4604e801 	strmi	lr, [r4], -r1, lsl #16
    9878:	00000035 	andeq	r0, r0, r5, lsr r0
    987c:	00009268 	andeq	r9, r0, r8, ror #4
    9880:	00009260 	andeq	r9, r0, r0, ror #4
    9884:	001e841b 	andseq	r8, lr, fp, lsl r4
    9888:	04e90100 	strbteq	r0, [r9], #256	; 0x100
    988c:	0000a136 	andeq	sl, r0, r6, lsr r1
    9890:	0092a700 	addseq	sl, r2, r0, lsl #14
    9894:	00929f00 	addseq	r9, r2, r0, lsl #30
    9898:	14721b00 	ldrbtne	r1, [r2], #-2816	; 0xfffff500
    989c:	ea010000 	b	498a4 <__HEAP_SIZE+0x488a4>
    98a0:	012f3504 			; <UNDEFINED> instruction: 0x012f3504
    98a4:	92e20000 	rscls	r0, r2, #0
    98a8:	92de0000 	sbcsls	r0, lr, #0
    98ac:	251b0000 	ldrcs	r0, [fp, #-0]
    98b0:	0100001b 	tsteq	r0, fp, lsl r0
    98b4:	c13d04eb 	teqgt	sp, fp, ror #9
    98b8:	06000005 	streq	r0, [r0], -r5
    98bc:	02000093 	andeq	r0, r0, #147	; 0x93
    98c0:	1b000093 	blne	9b14 <__HEAP_SIZE+0x8b14>
    98c4:	00001d19 	andeq	r1, r0, r9, lsl sp
    98c8:	3e04ec01 	cdpcc	12, 0, cr14, cr4, cr1, {0}
    98cc:	000008f6 	strdeq	r0, [r0], -r6
    98d0:	0000932a 	andeq	r9, r0, sl, lsr #6
    98d4:	00009326 	andeq	r9, r0, r6, lsr #6
    98d8:	0023a41b 	eoreq	sl, r3, fp, lsl r4
    98dc:	04ed0100 	strbteq	r0, [sp], #256	; 0x100
    98e0:	0032f93e 	eorseq	pc, r2, lr, lsr r9	; <UNPREDICTABLE>
    98e4:	00934e00 	addseq	r4, r3, r0, lsl #28
    98e8:	00934a00 	addseq	r4, r3, r0, lsl #20
    98ec:	1b341800 	blne	d0f8f4 <__RAM_SIZE+0xc0f8f4>
    98f0:	ef010000 	svc	0x00010000
    98f4:	06661104 	strbteq	r1, [r6], -r4, lsl #2
    98f8:	93720000 	cmnls	r2, #0
    98fc:	936e0000 	cmnls	lr, #0
    9900:	921e0000 	andsls	r0, lr, #0
    9904:	e6100023 	ldr	r0, [r0], -r3, lsr #32
    9908:	94000038 	strls	r0, [r0], #-56	; 0xffffffc8
    990c:	1f000037 	svcne	0x00000037
    9910:	74025001 	strvc	r5, [r2], #-1
    9914:	51011f00 	tstpl	r1, r0, lsl #30
    9918:	011f3001 	tsteq	pc, r1
    991c:	4c080252 	sfmmi	f0, 4, [r8], {82}	; 0x52
    9920:	23b42000 			; <UNDEFINED> instruction: 0x23b42000
    9924:	31b61000 			; <UNDEFINED> instruction: 0x31b61000
    9928:	011f0000 	tsteq	pc, r0
    992c:	00750250 	rsbseq	r0, r5, r0, asr r2
    9930:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    9934:	011f0079 	tsteq	pc, r9, ror r0	; <UNPREDICTABLE>
    9938:	00780252 	rsbseq	r0, r8, r2, asr r2
    993c:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    9940:	021f0077 	andseq	r0, pc, #119	; 0x77
    9944:	9103007d 	tstls	r3, sp, ror r0
    9948:	021f0600 	andseq	r0, pc, #0, 12
    994c:	9103047d 	tstls	r3, sp, ror r4
    9950:	021f060c 	andseq	r0, pc, #12, 12	; 0xc00000
    9954:	7402087d 	strvc	r0, [r2], #-2173	; 0xfffff783
    9958:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    995c:	0030010c 	eorseq	r0, r0, ip, lsl #2
    9960:	01012f00 	tsteq	r1, r0, lsl #30
    9964:	00000a1c 	andeq	r0, r0, ip, lsl sl
    9968:	00000a1c 	andeq	r0, r0, ip, lsl sl
    996c:	0d01f708 	stceq	7, cr15, [r1, #-32]	; 0xffffffe0
    9970:	3701012f 	strcc	r0, [r1, -pc, lsr #2]
    9974:	3700000a 	strcc	r0, [r0, -sl]
    9978:	0800000a 	stmdaeq	r0, {r1, r3}
    997c:	300601d1 	ldrdcc	r0, [r6], -r1
    9980:	0bd30101 	bleq	ff4c9d8c <__StackTop+0xc73c9d8c>
    9984:	0bd30000 	bleq	ff4c998c <__StackTop+0xc73c998c>
    9988:	71060000 	mrsvc	r0, (UNDEF: 6)
    998c:	0101300d 	tsteq	r1, sp
    9990:	00000a43 	andeq	r0, r0, r3, asr #20
    9994:	00000a43 	andeq	r0, r0, r3, asr #20
    9998:	300d7206 	andcc	r7, sp, r6, lsl #4
    999c:	0f7d0101 	svceq	0x007d0101
    99a0:	0f7d0000 	svceq	0x007d0000
    99a4:	74060000 	strvc	r0, [r6], #-0
    99a8:	01013011 	tsteq	r1, r1, lsl r0
    99ac:	00000c89 	andeq	r0, r0, r9, lsl #25
    99b0:	00000c89 	andeq	r0, r0, r9, lsl #25
    99b4:	300d7506 	andcc	r7, sp, r6, lsl #10
    99b8:	0a7e0101 	beq	1f89dc4 <__RAM_SIZE+0x1e89dc4>
    99bc:	0a7e0000 	beq	1f899c4 <__RAM_SIZE+0x1e899c4>
    99c0:	6f060000 	svcvs	0x00060000
    99c4:	0101300d 	tsteq	r1, sp
    99c8:	000011c1 	andeq	r1, r0, r1, asr #3
    99cc:	000011c1 	andeq	r1, r0, r1, asr #3
    99d0:	2f06b80a 	svccs	0x0006b80a
    99d4:	099b0101 	ldmibeq	fp, {r0, r8}
    99d8:	099b0000 	ldmibeq	fp, {}	; <UNPREDICTABLE>
    99dc:	b9080000 	stmdblt	r8, {}	; <UNPREDICTABLE>
    99e0:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
    99e4:	00208d01 	eoreq	r8, r0, r1, lsl #26
    99e8:	00208d00 	eoreq	r8, r0, r0, lsl #26
    99ec:	01770600 	cmneq	r7, r0, lsl #12
    99f0:	01012f11 	tsteq	r1, r1, lsl pc
    99f4:	0000232f 	andeq	r2, r0, pc, lsr #6
    99f8:	0000232f 	andeq	r2, r0, pc, lsr #6
    99fc:	0e01c70b 	cdpeq	7, 0, cr12, cr1, cr11, {0}
    9a00:	1b010130 	blne	49ec8 <__HEAP_SIZE+0x48ec8>
    9a04:	1b00001f 	blne	9a88 <__HEAP_SIZE+0x8a88>
    9a08:	0a00001f 	beq	9a8c <__HEAP_SIZE+0x8a8c>
    9a0c:	012f06e3 	smulwteq	pc, r3, r6	; <UNPREDICTABLE>
    9a10:	00170301 	andseq	r0, r7, r1, lsl #6
    9a14:	00170300 	andseq	r0, r7, r0, lsl #6
    9a18:	05480b00 	strbeq	r0, [r8, #-2816]	; 0xfffff500
    9a1c:	0101300c 	tsteq	r1, ip
    9a20:	0000145e 	andeq	r1, r0, lr, asr r4
    9a24:	0000145e 	andeq	r1, r0, lr, asr r4
    9a28:	2f0cdc0a 	svccs	0x000cdc0a
    9a2c:	09850101 	stmibeq	r5, {r0, r8}
    9a30:	09850000 	stmibeq	r5, {}	; <UNPREDICTABLE>
    9a34:	e7080000 	str	r0, [r8, -r0]
    9a38:	01300601 	teqeq	r0, r1, lsl #12
    9a3c:	0000ae01 	andeq	sl, r0, r1, lsl #28
    9a40:	0000ae00 	andeq	sl, r0, r0, lsl #28
    9a44:	09210c00 	stmdbeq	r1!, {sl, fp}
    9a48:	6101012f 	tstvs	r1, pc, lsr #2
    9a4c:	61000009 	tstvs	r0, r9
    9a50:	08000009 	stmdaeq	r0, {r0, r3}
    9a54:	300601c4 	andcc	r0, r6, r4, asr #3
    9a58:	1b900101 	blne	fe409e64 <__StackTop+0xc6309e64>
    9a5c:	1b900000 	blne	fe409a64 <__StackTop+0xc6309a64>
    9a60:	800a0000 	andhi	r0, sl, r0
    9a64:	01013017 	tsteq	r1, r7, lsl r0
    9a68:	00000cf8 	strdeq	r0, [r0], -r8
    9a6c:	00000cf8 	strdeq	r0, [r0], -r8
    9a70:	3108b50a 	tstcc	r8, sl, lsl #10
    9a74:	00ae0101 	adceq	r0, lr, r1, lsl #2
    9a78:	00a40000 	adceq	r0, r4, r0
    9a7c:	000d0000 	andeq	r0, sp, r0
    9a80:	00198c00 	andseq	r8, r9, r0, lsl #24
    9a84:	5e000200 	cdppl	2, 0, cr0, cr0, cr0, {0}
    9a88:	04000012 	streq	r0, [r0], #-18	; 0xffffffee
    9a8c:	00018901 	andeq	r8, r1, r1, lsl #18
    9a90:	25680c00 	strbcs	r0, [r8, #-3072]!	; 0xfffff400
    9a94:	03850000 	orreq	r0, r5, #0
    9a98:	0a100000 	beq	409aa0 <__RAM_SIZE+0x309aa0>
	...
    9aa4:	6fc40000 	svcvs	0x00c40000
    9aa8:	04020000 	streq	r0, [r2], #-0
    9aac:	02000005 	andeq	r0, r0, #5
    9ab0:	003517d1 	ldrsbteq	r1, [r5], -r1
    9ab4:	04030000 	streq	r0, [r3], #-0
    9ab8:	0002c707 	andeq	ip, r2, r7, lsl #14
    9abc:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    9ac0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    9ac4:	27050803 	strcs	r0, [r5, -r3, lsl #16]
    9ac8:	03000001 	movweq	r0, #1
    9acc:	00630408 	rsbeq	r0, r3, r8, lsl #8
    9ad0:	01030000 	mrseq	r0, (UNDEF: 3)
    9ad4:	00027306 	andeq	r7, r2, r6, lsl #6
    9ad8:	017f0200 	cmneq	pc, r0, lsl #4
    9adc:	2b030000 	blcs	c9ae4 <__HEAP_SIZE+0xc8ae4>
    9ae0:	00006418 	andeq	r6, r0, r8, lsl r4
    9ae4:	08010300 	stmdaeq	r1, {r8, r9}
    9ae8:	00000271 	andeq	r0, r0, r1, ror r2
    9aec:	32050203 	andcc	r0, r5, #805306368	; 0x30000000
    9af0:	03000000 	movweq	r0, #0
    9af4:	031a0702 	tsteq	sl, #524288	; 0x80000
    9af8:	04030000 	streq	r0, [r3], #-0
    9afc:	00012c05 	andeq	r2, r1, r5, lsl #24
    9b00:	006f0200 	rsbeq	r0, pc, r0, lsl #4
    9b04:	4f030000 	svcmi	0x00030000
    9b08:	00008c19 	andeq	r8, r0, r9, lsl ip
    9b0c:	07040300 	streq	r0, [r4, -r0, lsl #6]
    9b10:	000002c2 	andeq	r0, r0, r2, asr #5
    9b14:	bd070803 	stclt	8, cr0, [r7, #-12]
    9b18:	05000002 	streq	r0, [r0, #-2]
    9b1c:	009a0604 	addseq	r0, sl, r4, lsl #12
    9b20:	01030000 	mrseq	r0, (UNDEF: 3)
    9b24:	00027a08 	andeq	r7, r2, r8, lsl #20
    9b28:	00a10600 	adceq	r0, r1, r0, lsl #12
    9b2c:	04070000 	streq	r0, [r7], #-0
    9b30:	000000a8 	andeq	r0, r0, r8, lsr #1
    9b34:	0000ad06 	andeq	sl, r0, r6, lsl #26
    9b38:	01810200 	orreq	r0, r1, r0, lsl #4
    9b3c:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    9b40:	00005813 	andeq	r5, r0, r3, lsl r8
    9b44:	00710200 	rsbseq	r0, r1, r0, lsl #4
    9b48:	30040000 	andcc	r0, r4, r0
    9b4c:	00008014 	andeq	r8, r0, r4, lsl r0
    9b50:	1c380200 	lfmne	f0, 4, [r8], #-0
    9b54:	24050000 	strcs	r0, [r5], #-0
    9b58:	0000dc11 	andeq	sp, r0, r1, lsl ip
    9b5c:	e2040700 	and	r0, r4, #0, 14
    9b60:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    9b64:	0000ee01 	andeq	lr, r0, r1, lsl #28
    9b68:	009a0900 	addseq	r0, sl, r0, lsl #18
    9b6c:	02000000 	andeq	r0, r0, #0
    9b70:	0000155f 	andeq	r1, r0, pc, asr r5
    9b74:	c41a4906 	ldrgt	r4, [sl], #-2310	; 0xfffff6fa
    9b78:	02000000 	andeq	r0, r0, #0
    9b7c:	000009c5 	andeq	r0, r0, r5, asr #19
    9b80:	791a4a06 	ldmdbvc	sl, {r1, r2, r9, fp, lr}
    9b84:	06000000 	streq	r0, [r0], -r0
    9b88:	000000fa 	strdeq	r0, [r0], -sl
    9b8c:	0009c402 	andeq	ip, r9, r2, lsl #8
    9b90:	1a4b0600 	bne	12cb398 <__RAM_SIZE+0x11cb398>
    9b94:	0000008c 	andeq	r0, r0, ip, lsl #1
    9b98:	00092002 	andeq	r2, r9, r2
    9b9c:	1a510600 	bne	144b3a4 <__RAM_SIZE+0x134b3a4>
    9ba0:	000000c4 	andeq	r0, r0, r4, asr #1
    9ba4:	00011706 	andeq	r1, r1, r6, lsl #14
    9ba8:	12240a00 	eorne	r0, r4, #0, 20
    9bac:	07140000 	ldreq	r0, [r4, -r0]
    9bb0:	57080c0c 	strpl	r0, [r8, -ip, lsl #24]
    9bb4:	0b000001 	bleq	9bc0 <__HEAP_SIZE+0x8bc0>
    9bb8:	00000dc5 	andeq	r0, r0, r5, asr #27
    9bbc:	100c1107 	andne	r1, ip, r7, lsl #2
    9bc0:	00000117 	andeq	r0, r0, r7, lsl r1
    9bc4:	0b002302 	bleq	127d4 <__HEAP_SIZE+0x117d4>
    9bc8:	00000dbb 			; <UNDEFINED> instruction: 0x00000dbb
    9bcc:	0c0c1207 	sfmeq	f1, 4, [ip], {7}
    9bd0:	00000157 	andeq	r0, r0, r7, asr r1
    9bd4:	00042302 	andeq	r2, r4, r2, lsl #6
    9bd8:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9bdc:	00016700 	andeq	r6, r1, r0, lsl #14
    9be0:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9be4:	00030000 	andeq	r0, r3, r0
    9be8:	0019370e 	andseq	r3, r9, lr, lsl #14
    9bec:	0c170700 	ldceq	7, cr0, [r7], {-0}
    9bf0:	00012822 	andeq	r2, r1, r2, lsr #16
    9bf4:	0b6a0e00 	bleq	1a8d3fc <__RAM_SIZE+0x198d3fc>
    9bf8:	25070000 	strcs	r0, [r7, #-0]
    9bfc:	01282b0c 			; <UNDEFINED> instruction: 0x01282b0c
    9c00:	b60a0000 	strlt	r0, [sl], -r0
    9c04:	1c00000f 	stcne	0, cr0, [r0], {15}
    9c08:	100c2907 	andne	r2, ip, r7, lsl #18
    9c0c:	000001c0 	andeq	r0, r0, r0, asr #3
    9c10:	000dc40b 	andeq	ip, sp, fp, lsl #8
    9c14:	0c2e0700 	stceq	7, cr0, [lr], #-0
    9c18:	00010b11 	andeq	r0, r1, r1, lsl fp
    9c1c:	00230200 	eoreq	r0, r3, r0, lsl #4
    9c20:	000dbb0b 	andeq	fp, sp, fp, lsl #22
    9c24:	0c2f0700 	stceq	7, cr0, [pc], #-0	; 9c2c <__HEAP_SIZE+0x8c2c>
    9c28:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9c2c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9c30:	000dd70b 	andeq	sp, sp, fp, lsl #14
    9c34:	0c300700 	ldceq	7, cr0, [r0], #-0
    9c38:	0001741a 	andeq	r7, r1, sl, lsl r4
    9c3c:	08230200 	stmdaeq	r3!, {r9}
    9c40:	13dd0e00 	bicsne	r0, sp, #0, 28
    9c44:	34070000 	strcc	r0, [r7], #-0
    9c48:	0181030c 	orreq	r0, r1, ip, lsl #6
    9c4c:	530a0000 	movwpl	r0, #40960	; 0xa000
    9c50:	4c00001f 	stcmi	0, cr0, [r0], {31}
    9c54:	100c4307 	andne	r4, ip, r7, lsl #6
    9c58:	0000028c 	andeq	r0, r0, ip, lsl #5
    9c5c:	001ba60b 	andseq	sl, fp, fp, lsl #12
    9c60:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    9c64:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9c68:	00230200 	eoreq	r0, r3, r0, lsl #4
    9c6c:	0012e90b 	andseq	lr, r2, fp, lsl #18
    9c70:	0c4c0700 	mcrreq	7, 0, r0, ip, cr0
    9c74:	00028c16 	andeq	r8, r2, r6, lsl ip
    9c78:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9c7c:	0019bb0b 	andseq	fp, r9, fp, lsl #22
    9c80:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    9c84:	00010b11 	andeq	r0, r1, r1, lsl fp
    9c88:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9c8c:	001bb90b 	andseq	fp, fp, fp, lsl #18
    9c90:	0c4e0700 	mcrreq	7, 0, r0, lr, cr0
    9c94:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9c98:	30230200 	eorcc	r0, r3, r0, lsl #4
    9c9c:	001daa0b 	andseq	sl, sp, fp, lsl #20
    9ca0:	0c530700 	mrrceq	7, 0, r0, r3, cr0
    9ca4:	00029c0d 	andeq	r9, r2, sp, lsl #24
    9ca8:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    9cac:	0014be0b 	andseq	fp, r4, fp, lsl #28
    9cb0:	0c610700 	stcleq	7, cr0, [r1], #-0
    9cb4:	0002ac15 	andeq	sl, r2, r5, lsl ip
    9cb8:	38230200 	stmdacc	r3!, {r9}
    9cbc:	001d5b0b 	andseq	r5, sp, fp, lsl #22
    9cc0:	0c640700 	stcleq	7, cr0, [r4], #-0
    9cc4:	00009a10 	andeq	r9, r0, r0, lsl sl
    9cc8:	40230200 	eormi	r0, r3, r0, lsl #4
    9ccc:	001f820b 	andseq	r8, pc, fp, lsl #4
    9cd0:	0c700700 	ldcleq	7, cr0, [r0], #-0
    9cd4:	0002bc12 	andeq	fp, r2, r2, lsl ip
    9cd8:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    9cdc:	001baf0b 	andseq	sl, fp, fp, lsl #30
    9ce0:	0c710700 	ldcleq	7, cr0, [r1], #-0
    9ce4:	0002cc11 	andeq	ip, r2, r1, lsl ip
    9ce8:	48230200 	stmdami	r3!, {r9}
    9cec:	0015dd0b 	andseq	sp, r5, fp, lsl #26
    9cf0:	0c740700 	ldcleq	7, cr0, [r4], #-0
    9cf4:	0000b811 	andeq	fp, r0, r1, lsl r8
    9cf8:	49230200 	stmdbmi	r3!, {r9}
    9cfc:	001c870b 	andseq	r8, ip, fp, lsl #14
    9d00:	0c780700 	ldcleq	7, cr0, [r8], #-0
    9d04:	0000b811 	andeq	fp, r0, r1, lsl r8
    9d08:	4a230200 	bmi	8ca510 <__RAM_SIZE+0x7ca510>
    9d0c:	01670c00 	cmneq	r7, r0, lsl #24
    9d10:	029c0000 	addseq	r0, ip, #0
    9d14:	350d0000 	strcc	r0, [sp, #-0]
    9d18:	01000000 	mrseq	r0, (UNDEF: 0)
    9d1c:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    9d20:	02ac0000 	adceq	r0, ip, #0
    9d24:	350d0000 	strcc	r0, [sp, #-0]
    9d28:	03000000 	movweq	r0, #0
    9d2c:	010b0c00 	tsteq	fp, r0, lsl #24
    9d30:	02bc0000 	adcseq	r0, ip, #0
    9d34:	350d0000 	strcc	r0, [sp, #-0]
    9d38:	01000000 	mrseq	r0, (UNDEF: 0)
    9d3c:	00c40c00 	sbceq	r0, r4, r0, lsl #24
    9d40:	02cc0000 	sbceq	r0, ip, #0
    9d44:	350d0000 	strcc	r0, [sp, #-0]
    9d48:	00000000 	andeq	r0, r0, r0
    9d4c:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    9d50:	02dc0000 	sbcseq	r0, ip, #0
    9d54:	350d0000 	strcc	r0, [sp, #-0]
    9d58:	00000000 	andeq	r0, r0, r0
    9d5c:	14080e00 	strne	r0, [r8], #-3584	; 0xfffff200
    9d60:	7d070000 	stcvc	0, cr0, [r7, #-0]
    9d64:	01cd030c 	biceq	r0, sp, ip, lsl #6
    9d68:	040f0000 	streq	r0, [pc], #-0	; 9d70 <__HEAP_SIZE+0x8d70>
    9d6c:	050c9107 	streq	r9, [ip, #-263]	; 0xfffffef9
    9d70:	0000030e 	andeq	r0, r0, lr, lsl #6
    9d74:	000db210 	andeq	fp, sp, r0, lsl r2
    9d78:	0c930700 	ldceq	7, cr0, [r3], {0}
    9d7c:	00009a10 	andeq	r9, r0, r0, lsl sl
    9d80:	0dc41000 	stcleq	0, cr1, [r4]
    9d84:	94070000 	strls	r0, [r7], #-0
    9d88:	010b150c 	tsteq	fp, ip, lsl #10
    9d8c:	0a000000 	beq	9d94 <__HEAP_SIZE+0x8d94>
    9d90:	000013a3 	andeq	r1, r0, r3, lsr #7
    9d94:	0c8d075c 	stceq	7, cr0, [sp], {92}	; 0x5c
    9d98:	00038b10 	andeq	r8, r3, r0, lsl fp
    9d9c:	0da90b00 			; <UNDEFINED> instruction: 0x0da90b00
    9da0:	8f070000 	svchi	0x00070000
    9da4:	038b0c0c 	orreq	r0, fp, #12, 24	; 0xc00
    9da8:	23020000 	movwcs	r0, #8192	; 0x2000
    9dac:	00751100 	rsbseq	r1, r5, r0, lsl #2
    9db0:	070c9507 	streq	r9, [ip, -r7, lsl #10]
    9db4:	000002e9 	andeq	r0, r0, r9, ror #5
    9db8:	0b0c2302 	bleq	3129c8 <__RAM_SIZE+0x2129c8>
    9dbc:	000012e9 	andeq	r1, r0, r9, ror #5
    9dc0:	120c9707 	andne	r9, ip, #1835008	; 0x1c0000
    9dc4:	0000039b 	muleq	r0, fp, r3
    9dc8:	0b102302 	bleq	4129d8 <__RAM_SIZE+0x3129d8>
    9dcc:	00000dd6 	ldrdeq	r0, [r0], -r6
    9dd0:	110c9807 	tstne	ip, r7, lsl #16
    9dd4:	000003ab 	andeq	r0, r0, fp, lsr #7
    9dd8:	0b482302 	bleq	12129e8 <__RAM_SIZE+0x11129e8>
    9ddc:	000010f8 	strdeq	r1, [r0], -r8
    9de0:	0d0c9907 	vstreq.16	s18, [ip, #-14]	; <UNPREDICTABLE>
    9de4:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    9de8:	0b542302 	bleq	15129f8 <__RAM_SIZE+0x14129f8>
    9dec:	00001101 	andeq	r1, r0, r1, lsl #2
    9df0:	110c9c07 	tstne	ip, r7, lsl #24
    9df4:	000000b8 	strheq	r0, [r0], -r8
    9df8:	0b562302 	bleq	1592a08 <__RAM_SIZE+0x1492a08>
    9dfc:	00000dcd 	andeq	r0, r0, sp, asr #27
    9e00:	100ca007 	andne	sl, ip, r7
    9e04:	0000009a 	muleq	r0, sl, r0
    9e08:	00582302 	subseq	r2, r8, r2, lsl #6
    9e0c:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9e10:	00039b00 	andeq	r9, r3, r0, lsl #22
    9e14:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9e18:	00020000 	andeq	r0, r2, r0
    9e1c:	0001c00c 	andeq	ip, r1, ip
    9e20:	0003ab00 	andeq	sl, r3, r0, lsl #22
    9e24:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9e28:	00010000 	andeq	r0, r1, r0
    9e2c:	00010b0c 	andeq	r0, r1, ip, lsl #22
    9e30:	0003bb00 	andeq	fp, r3, r0, lsl #22
    9e34:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9e38:	00020000 	andeq	r0, r2, r0
    9e3c:	0000b80c 	andeq	fp, r0, ip, lsl #16
    9e40:	0003cb00 	andeq	ip, r3, r0, lsl #22
    9e44:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9e48:	00010000 	andeq	r0, r1, r0
    9e4c:	000fe60e 	andeq	lr, pc, lr, lsl #12
    9e50:	0ca70700 	stceq	7, cr0, [r7]
    9e54:	00030e03 	andeq	r0, r3, r3, lsl #28
    9e58:	24f30a00 	ldrbtcs	r0, [r3], #2560	; 0xa00
    9e5c:	07280000 	streq	r0, [r8, -r0]!
    9e60:	47100cd4 			; <UNDEFINED> instruction: 0x47100cd4
    9e64:	0b000004 	bleq	9e7c <__HEAP_SIZE+0x8e7c>
    9e68:	00000da9 	andeq	r0, r0, r9, lsr #27
    9e6c:	0c0cd607 	stceq	6, cr13, [ip], {7}
    9e70:	0000009a 	muleq	r0, sl, r0
    9e74:	0b002302 	bleq	12a84 <__HEAP_SIZE+0x11a84>
    9e78:	00000dc5 	andeq	r0, r0, r5, asr #27
    9e7c:	160cd707 	strne	sp, [ip], -r7, lsl #14
    9e80:	00000167 	andeq	r0, r0, r7, ror #2
    9e84:	0b042302 	bleq	112a94 <__RAM_SIZE+0x12a94>
    9e88:	000012e9 	andeq	r1, r0, r9, ror #5
    9e8c:	100cd807 	andne	sp, ip, r7, lsl #16
    9e90:	00000117 	andeq	r0, r0, r7, lsl r1
    9e94:	0b182302 	bleq	612aa4 <__RAM_SIZE+0x512aa4>
    9e98:	000026a4 	andeq	r2, r0, r4, lsr #13
    9e9c:	0c0cd907 			; <UNDEFINED> instruction: 0x0c0cd907
    9ea0:	0000009a 	muleq	r0, sl, r0
    9ea4:	0b1c2302 	bleq	712ab4 <__RAM_SIZE+0x612ab4>
    9ea8:	000025ed 	andeq	r2, r0, sp, ror #11
    9eac:	140cda07 	strne	sp, [ip], #-2567	; 0xfffff5f9
    9eb0:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    9eb4:	0b202302 	bleq	812ac4 <__RAM_SIZE+0x712ac4>
    9eb8:	000027c1 	andeq	r2, r0, r1, asr #15
    9ebc:	0d0cde07 	stceq	14, cr13, [ip, #-28]	; 0xffffffe4
    9ec0:	000000b8 	strheq	r0, [r0], -r8
    9ec4:	00242302 	eoreq	r2, r4, r2, lsl #6
    9ec8:	0024e50e 	eoreq	lr, r4, lr, lsl #10
    9ecc:	0cdf0700 	ldcleq	7, cr0, [pc], {0}
    9ed0:	0003d803 	andeq	sp, r3, r3, lsl #16
    9ed4:	09471200 	stmdbeq	r7, {r9, ip}^
    9ed8:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    9edc:	04ad0890 	strteq	r0, [sp], #2192	; 0x890
    9ee0:	2b130000 	blcs	4c9ee8 <__RAM_SIZE+0x3c9ee8>
    9ee4:	08000009 	stmdaeq	r0, {r0, r3}
    9ee8:	01172493 			; <UNDEFINED> instruction: 0x01172493
    9eec:	23020000 	movwcs	r0, #8192	; 0x2000
    9ef0:	09941300 	ldmibeq	r4, {r8, r9, ip}
    9ef4:	94080000 	strls	r0, [r8], #-0
    9ef8:	0004ad2d 	andeq	sl, r4, sp, lsr #26
    9efc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9f00:	0009e313 	andeq	lr, r9, r3, lsl r3
    9f04:	2d950800 	ldccs	8, cr0, [r5]
    9f08:	000004ad 	andeq	r0, r0, sp, lsr #9
    9f0c:	13082302 	movwne	r2, #33538	; 0x8302
    9f10:	0000093f 	andeq	r0, r0, pc, lsr r9
    9f14:	9a0c9608 	bls	32f73c <__RAM_SIZE+0x22f73c>
    9f18:	02000000 	andeq	r0, r0, #0
    9f1c:	14130c23 	ldrne	r0, [r3], #-3107	; 0xfffff3dd
    9f20:	08000009 	stmdaeq	r0, {r0, r3}
    9f24:	04ee2897 	strbteq	r2, [lr], #2199	; 0x897
    9f28:	23020000 	movwcs	r0, #8192	; 0x2000
    9f2c:	04070010 	streq	r0, [r7], #-16
    9f30:	00000454 	andeq	r0, r0, r4, asr r4
    9f34:	000a1612 	andeq	r1, sl, r2, lsl r6
    9f38:	ac081c00 	stcge	12, cr1, [r8], {-0}
    9f3c:	0004ee10 	andeq	lr, r4, r0, lsl lr
    9f40:	09751300 	ldmdbeq	r5!, {r8, r9, ip}^
    9f44:	af080000 	svcge	0x00080000
    9f48:	00010b25 	andeq	r0, r1, r5, lsr #22
    9f4c:	00230200 	eoreq	r0, r3, r0, lsl #4
    9f50:	0009db13 	andeq	sp, r9, r3, lsl fp
    9f54:	26b00800 	ldrtcs	r0, [r0], r0, lsl #16
    9f58:	0000050c 	andeq	r0, r0, ip, lsl #10
    9f5c:	13042302 	movwne	r2, #17154	; 0x4302
    9f60:	00000936 	andeq	r0, r0, r6, lsr r9
    9f64:	0014b108 	andseq	fp, r4, r8, lsl #2
    9f68:	02000005 	andeq	r0, r0, #5
    9f6c:	07000823 	streq	r0, [r0, -r3, lsr #16]
    9f70:	0004b304 	andeq	fp, r4, r4, lsl #6
    9f74:	193d0200 	ldmdbne	sp!, {r9}
    9f78:	9a080000 	bls	209f80 <__RAM_SIZE+0x109f80>
    9f7c:	0004541b 	andeq	r5, r4, fp, lsl r4
    9f80:	0b700200 	bleq	1c0a788 <__RAM_SIZE+0x1b0a788>
    9f84:	a6080000 	strge	r0, [r8], -r0
    9f88:	00045424 	andeq	r5, r4, r4, lsr #8
    9f8c:	f4040700 	vst1.8	{d0}, [r4], r0
    9f90:	02000004 	andeq	r0, r0, #4
    9f94:	000013e3 	andeq	r1, r0, r3, ror #7
    9f98:	b303b308 	movwlt	fp, #13064	; 0x3308
    9f9c:	02000004 	andeq	r0, r0, #4
    9fa0:	000002ea 	andeq	r0, r0, sl, ror #5
    9fa4:	2a2e5c09 	bcs	ba0fd0 <__RAM_SIZE+0xaa0fd0>
    9fa8:	07000005 	streq	r0, [r0, -r5]
    9fac:	00053004 	andeq	r3, r5, r4
    9fb0:	016b1400 	cmneq	fp, r0, lsl #8
    9fb4:	07010000 	streq	r0, [r1, -r0]
    9fb8:	0000ee04 	andeq	lr, r0, r4, lsl #28
    9fbc:	0f080200 	svceq	0x00080200
    9fc0:	330a0000 	movwcc	r0, #40960	; 0xa000
    9fc4:	00054824 	andeq	r4, r5, r4, lsr #16
    9fc8:	4e040700 	cdpmi	7, 0, cr0, cr4, cr0, {0}
    9fcc:	14000005 	strne	r0, [r0], #-5
    9fd0:	00000c79 	andeq	r0, r0, r9, ror ip
    9fd4:	25a00201 	strcs	r0, [r0, #513]!	; 0x201
    9fd8:	4e0b0000 	cdpmi	0, 0, cr0, cr11, cr0, {0}
    9fdc:	00056522 	andeq	r6, r5, r2, lsr #10
    9fe0:	05540600 	ldrbeq	r0, [r4, #-1536]	; 0xfffffa00
    9fe4:	04070000 	streq	r0, [r7], #-0
    9fe8:	0000056b 	andeq	r0, r0, fp, ror #10
    9fec:	0028c312 	eoreq	ip, r8, r2, lsl r3
    9ff0:	53012800 	movwpl	r2, #6144	; 0x1800
    9ff4:	0005d314 	andeq	sp, r5, r4, lsl r3
    9ff8:	24981300 	ldrcs	r1, [r8], #768	; 0x300
    9ffc:	55010000 	strpl	r0, [r1, #-0]
    a000:	0000ad16 	andeq	sl, r0, r6, lsl sp
    a004:	00230200 	eoreq	r0, r3, r0, lsl #4
    a008:	00276013 	eoreq	r6, r7, r3, lsl r0
    a00c:	14560100 	ldrbne	r0, [r6], #-256	; 0xffffff00
    a010:	000004f4 	strdeq	r0, [r0], -r4
    a014:	13042302 	movwne	r2, #17154	; 0x4302
    a018:	00002427 	andeq	r2, r0, r7, lsr #8
    a01c:	17145701 	ldrne	r5, [r4, -r1, lsl #14]
    a020:	02000001 	andeq	r0, r0, #1
    a024:	53131823 	tstpl	r3, #2293760	; 0x230000
    a028:	01000028 	tsteq	r0, r8, lsr #32
    a02c:	009a1058 	addseq	r1, sl, r8, asr r0
    a030:	23020000 	movwcs	r0, #8192	; 0x2000
    a034:	243b131c 	ldrtcs	r1, [fp], #-796	; 0xfffffce4
    a038:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    a03c:	0005d33e 	andeq	sp, r5, lr, lsr r3
    a040:	20230200 	eorcs	r0, r3, r0, lsl #4
    a044:	0027f813 	eoreq	pc, r7, r3, lsl r8	; <UNPREDICTABLE>
    a048:	115d0100 	cmpne	sp, r0, lsl #2
    a04c:	000000b8 	strheq	r0, [r0], -r8
    a050:	00242302 	eoreq	r2, r4, r2, lsl #6
    a054:	00251702 	eoreq	r1, r5, r2, lsl #14
    a058:	11530b00 	cmpne	r3, r0, lsl #22
    a05c:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a060:	05e50407 	strbeq	r0, [r5, #1031]!	; 0x407
    a064:	01080000 	mrseq	r0, (UNDEF: 8)
    a068:	000005f1 	strdeq	r0, [r0], -r1
    a06c:	00055409 	andeq	r5, r5, r9, lsl #8
    a070:	26020000 	strcs	r0, [r2], -r0
    a074:	0b000028 	bleq	a11c <__HEAP_SIZE+0x911c>
    a078:	05fd1159 	ldrbeq	r1, [sp, #345]!	; 0x159
    a07c:	04070000 	streq	r0, [r7], #-0
    a080:	00000603 	andeq	r0, r0, r3, lsl #12
    a084:	06140108 	ldreq	r0, [r4], -r8, lsl #2
    a088:	9a090000 	bls	24a090 <__RAM_SIZE+0x14a090>
    a08c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    a090:	000000c4 	andeq	r0, r0, r4, asr #1
    a094:	26ad0200 	strtcs	r0, [sp], r0, lsl #4
    a098:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    a09c:	00056b07 	andeq	r6, r5, r7, lsl #22
    a0a0:	24eb0200 	strbtcs	r0, [fp], #512	; 0x200
    a0a4:	62010000 	andvs	r0, r1, #0
    a0a8:	00061414 	andeq	r1, r6, r4, lsl r4
    a0ac:	295c1200 	ldmdbcs	ip, {r9, ip}^
    a0b0:	01080000 	mrseq	r0, (UNDEF: 8)
    a0b4:	06581469 	ldrbeq	r1, [r8], -r9, ror #8
    a0b8:	a5130000 	ldrge	r0, [r3, #-0]
    a0bc:	01000028 	tsteq	r0, r8, lsr #32
    a0c0:	0117146b 	tsteq	r7, fp, ror #8
    a0c4:	23020000 	movwcs	r0, #8192	; 0x2000
    a0c8:	289d1300 	ldmcs	sp, {r8, r9, ip}
    a0cc:	6c010000 	stcvs	0, cr0, [r1], {-0}
    a0d0:	00065813 	andeq	r5, r6, r3, lsl r8
    a0d4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a0d8:	20040700 	andcs	r0, r4, r0, lsl #14
    a0dc:	06000006 	streq	r0, [r0], -r6
    a0e0:	00000658 	andeq	r0, r0, r8, asr r6
    a0e4:	0024c802 	eoreq	ip, r4, r2, lsl #16
    a0e8:	076d0100 	strbeq	r0, [sp, -r0, lsl #2]!
    a0ec:	0000062c 	andeq	r0, r0, ip, lsr #12
    a0f0:	00270712 	eoreq	r0, r7, r2, lsl r7
    a0f4:	70010c00 	andvc	r0, r1, r0, lsl #24
    a0f8:	0006aa14 	andeq	sl, r6, r4, lsl sl
    a0fc:	243b1300 	ldrtcs	r1, [fp], #-768	; 0xfffffd00
    a100:	73010000 	movwvc	r0, #4096	; 0x1000
    a104:	0005f11a 	andeq	pc, r5, sl, lsl r1	; <UNPREDICTABLE>
    a108:	00230200 	eoreq	r0, r3, r0, lsl #4
    a10c:	0027b413 	eoreq	fp, r7, r3, lsl r4
    a110:	10740100 	rsbsne	r0, r4, r0, lsl #2
    a114:	0000009a 	muleq	r0, sl, r0
    a118:	13042302 	movwne	r2, #17154	; 0x4302
    a11c:	000024a4 	andeq	r2, r0, r4, lsr #9
    a120:	c4127501 	ldrgt	r7, [r2], #-1281	; 0xfffffaff
    a124:	02000000 	andeq	r0, r0, #0
    a128:	02000823 	andeq	r0, r0, #2293760	; 0x230000
    a12c:	000025d8 	ldrdeq	r2, [r0], -r8
    a130:	6f077601 	svcvs	0x00077601
    a134:	06000006 	streq	r0, [r0], -r6
    a138:	000006aa 	andeq	r0, r0, sl, lsr #13
    a13c:	7d010c15 	stcvc	12, cr0, [r1, #-84]	; 0xffffffac
    a140:	0006dd09 	andeq	sp, r6, r9, lsl #26
    a144:	24781600 	ldrbtcs	r1, [r8], #-1536	; 0xfffffa00
    a148:	7f010000 	svcvc	0x00010000
    a14c:	0006631e 	andeq	r6, r6, lr, lsl r3
    a150:	273b1600 	ldrcs	r1, [fp, -r0, lsl #12]!
    a154:	84010000 	strhi	r0, [r1], #-0
    a158:	0006aa26 	andeq	sl, r6, r6, lsr #20
    a15c:	2b120000 	blcs	48a164 <__RAM_SIZE+0x38a164>
    a160:	10000026 	andne	r0, r0, r6, lsr #32
    a164:	07147a01 	ldreq	r7, [r4, -r1, lsl #20]
    a168:	13000007 	movwne	r0, #7
    a16c:	0000285d 	andeq	r2, r0, sp, asr r8
    a170:	fa147c01 	blx	52917c <__RAM_SIZE+0x42917c>
    a174:	02000000 	andeq	r0, r0, #0
    a178:	75170023 	ldrvc	r0, [r7, #-35]	; 0xffffffdd
    a17c:	0b860100 	bleq	fe18a584 <__StackTop+0xc608a584>
    a180:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    a184:	00042302 	andeq	r2, r4, r2, lsl #6
    a188:	00286802 	eoreq	r6, r8, r2, lsl #16
    a18c:	07870100 	streq	r0, [r7, r0, lsl #2]
    a190:	000006dd 	ldrdeq	r0, [r0], -sp
    a194:	0026b418 	eoreq	fp, r6, r8, lsl r4
    a198:	238f0100 	orrcs	r0, pc, #0, 2
    a19c:	00000512 	andeq	r0, r0, r2, lsl r5
    a1a0:	8c440305 	mcrrhi	3, 0, r0, r4, cr5
    a1a4:	c6183800 	ldrgt	r3, [r8], -r0, lsl #16
    a1a8:	01000026 	tsteq	r0, r6, lsr #32
    a1ac:	05122390 	ldreq	r2, [r2, #-912]	; 0xfffffc70
    a1b0:	03050000 	movweq	r0, #20480	; 0x5000
    a1b4:	38008c60 	stmdacc	r0, {r5, r6, sl, fp, pc}
    a1b8:	00283718 	eoreq	r3, r8, r8, lsl r7
    a1bc:	25910100 	ldrcs	r0, [r1, #256]	; 0x100
    a1c0:	00000749 	andeq	r0, r0, r9, asr #14
    a1c4:	8b9c0305 	blhi	fe70ade0 <__StackTop+0xc660ade0>
    a1c8:	04073800 	streq	r3, [r7], #-2048	; 0xfffff800
    a1cc:	00000512 	andeq	r0, r0, r2, lsl r5
    a1d0:	00267a18 	eoreq	r7, r6, r8, lsl sl
    a1d4:	25920100 	ldrcs	r0, [r2, #256]	; 0x100
    a1d8:	00000749 	andeq	r0, r0, r9, asr #14
    a1dc:	8ba00305 	blhi	fe80adf8 <__StackTop+0xc670adf8>
    a1e0:	d9183800 	ldmdble	r8, {fp, ip, sp}
    a1e4:	01000024 	tsteq	r0, r4, lsr #32
    a1e8:	053c2a95 	ldreq	r2, [ip, #-2709]!	; 0xfffff56b
    a1ec:	03050000 	movweq	r0, #20480	; 0x5000
    a1f0:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
    a1f4:	0027ca18 	eoreq	ip, r7, r8, lsl sl
    a1f8:	29960100 	ldmibcs	r6, {r8}
    a1fc:	0000051e 	andeq	r0, r0, lr, lsl r5
    a200:	8ce00305 	stclhi	3, cr0, [r0], #20
    a204:	01193800 	tsteq	r9, r0, lsl #16
    a208:	0000287c 	andeq	r2, r0, ip, ror r8
    a20c:	0a053201 	beq	156a18 <__RAM_SIZE+0x56a18>
    a210:	00000001 	andeq	r0, r0, r1
    a214:	00000000 	andeq	r0, r0, r0
    a218:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    a21c:	b1011a01 	tstlt	r1, r1, lsl #20
    a220:	01000024 	tsteq	r0, r4, lsr #32
    a224:	011404ef 	tsteq	r4, pc, ror #9
    a228:	000000fa 	strdeq	r0, [r0], -sl
	...
    a234:	00009390 	muleq	r0, r0, r3
    a238:	00085201 	andeq	r5, r8, r1, lsl #4
    a23c:	28b31b00 	ldmcs	r3!, {r8, r9, fp, ip}
    a240:	ef010000 	svc	0x00010000
    a244:	05f13d04 	ldrbeq	r3, [r1, #3332]!	; 0xd04
    a248:	93ce0000 	bicls	r0, lr, #0
    a24c:	93c80000 	bicls	r0, r8, #0
    a250:	b41b0000 	ldrlt	r0, [fp], #-0
    a254:	01000027 	tsteq	r0, r7, lsr #32
    a258:	9a3304f0 	bls	ccb620 <__RAM_SIZE+0xbcb620>
    a25c:	01000000 	mrseq	r0, (UNDEF: 0)
    a260:	fb000094 	blx	a4ba <__HEAP_SIZE+0x94ba>
    a264:	1b000093 	blne	a4b8 <__HEAP_SIZE+0x94b8>
    a268:	000024a4 	andeq	r2, r0, r4, lsr #9
    a26c:	3504f101 	strcc	pc, [r4, #-257]	; 0xfffffeff
    a270:	000000c4 	andeq	r0, r0, r4, asr #1
    a274:	00009434 	andeq	r9, r0, r4, lsr r4
    a278:	0000942e 	andeq	r9, r0, lr, lsr #8
    a27c:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    a280:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
    a284:	00011737 	andeq	r1, r1, r7, lsr r7
    a288:	00946600 	addseq	r6, r4, r0, lsl #12
    a28c:	00946000 	addseq	r6, r4, r0
    a290:	284a1c00 	stmdacs	sl, {sl, fp, ip}^
    a294:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    a298:	07072104 	streq	r2, [r7, -r4, lsl #2]
    a29c:	91020000 	mrsls	r0, (UNDEF: 2)
    a2a0:	1a191d68 	bne	651848 <__RAM_SIZE+0x551848>
    a2a4:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    a2a8:	00fa1804 	rscseq	r1, sl, r4, lsl #16
    a2ac:	94940000 	ldrls	r0, [r4], #0
    a2b0:	94920000 	ldrls	r0, [r2], #0
    a2b4:	001e0000 	andseq	r0, lr, r0
    a2b8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    a2bc:	1f000018 	svcne	0x00000018
    a2c0:	7d025101 	stfvcs	f5, [r2, #-4]
    a2c4:	52011f00 	andpl	r1, r1, #0, 30
    a2c8:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
    a2cc:	0153011f 	cmpeq	r3, pc, lsl r1
    a2d0:	1a000030 	bne	a398 <__HEAP_SIZE+0x9398>
    a2d4:	0028e201 	eoreq	lr, r8, r1, lsl #4
    a2d8:	04d10100 	ldrbeq	r0, [r1], #256	; 0x100
    a2dc:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    a2e8:	94a70000 	strtls	r0, [r7], #0
    a2ec:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    a2f0:	1b000009 	blne	a31c <__HEAP_SIZE+0x931c>
    a2f4:	000028b3 			; <UNDEFINED> instruction: 0x000028b3
    a2f8:	4404d101 	strmi	sp, [r4], #-257	; 0xfffffeff
    a2fc:	000005f1 	strdeq	r0, [r0], -r1
    a300:	000094e5 	andeq	r9, r0, r5, ror #9
    a304:	000094df 	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    a308:	0027b41b 	eoreq	fp, r7, fp, lsl r4
    a30c:	04d20100 	ldrbeq	r0, [r2], #256	; 0x100
    a310:	00009a3a 	andeq	r9, r0, sl, lsr sl
    a314:	00951800 	addseq	r1, r5, r0, lsl #16
    a318:	00951200 	addseq	r1, r5, r0, lsl #4
    a31c:	24a41b00 	strtcs	r1, [r4], #2816	; 0xb00
    a320:	d3010000 	movwle	r0, #4096	; 0x1000
    a324:	00c43c04 	sbceq	r3, r4, r4, lsl #24
    a328:	954b0000 	strbls	r0, [fp, #-0]
    a32c:	95450000 	strbls	r0, [r5, #-0]
    a330:	f11b0000 			; <UNDEFINED> instruction: 0xf11b0000
    a334:	0100000a 	tsteq	r0, sl
    a338:	084004d4 	stmdaeq	r0, {r2, r4, r6, r7, sl}^
    a33c:	7d000009 	stcvc	0, cr0, [r0, #-36]	; 0xffffffdc
    a340:	77000095 			; <UNDEFINED> instruction: 0x77000095
    a344:	1c000095 	stcne	0, cr0, [r0], {149}	; 0x95
    a348:	0000284a 	andeq	r2, r0, sl, asr #16
    a34c:	2104d601 	tstcs	r4, r1, lsl #12
    a350:	00000707 	andeq	r0, r0, r7, lsl #14
    a354:	1d689102 	stfnep	f1, [r8, #-8]!
    a358:	00001a19 	andeq	r1, r0, r9, lsl sl
    a35c:	1804d701 	stmdane	r4, {r0, r8, r9, sl, ip, lr, pc}
    a360:	000000fa 	strdeq	r0, [r0], -sl
    a364:	000095ab 	andeq	r9, r0, fp, lsr #11
    a368:	000095a9 	andeq	r9, r0, r9, lsr #11
    a36c:	0000001e 	andeq	r0, r0, lr, lsl r0
    a370:	00187700 	andseq	r7, r8, r0, lsl #14
    a374:	51011f00 	tstpl	r1, r0, lsl #30
    a378:	1f007d02 	svcne	0x00007d02
    a37c:	f3035201 	vhsub.u8	d5, d3, d1
    a380:	011f5301 	tsteq	pc, r1, lsl #6
    a384:	00300153 	eorseq	r0, r0, r3, asr r1
    a388:	fa040700 	blx	10bf90 <__RAM_SIZE+0xbf90>
    a38c:	06000000 	streq	r0, [r0], -r0
    a390:	00000908 	andeq	r0, r0, r8, lsl #18
    a394:	274f0120 	strbcs	r0, [pc, -r0, lsr #2]
    a398:	bc010000 	stclt	0, cr0, [r1], {-0}
    a39c:	00010a04 	andeq	r0, r1, r4, lsl #20
    a3a0:	00000000 	andeq	r0, r0, r0
    a3a4:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    a3a8:	01000095 	swpeq	r0, r5, [r0]	; <UNPREDICTABLE>
    a3ac:	00000981 	andeq	r0, r0, r1, lsl #19
    a3b0:	00289e1b 	eoreq	r9, r8, fp, lsl lr
    a3b4:	04bc0100 	ldrteq	r0, [ip], #256	; 0x100
    a3b8:	0005542a 	andeq	r5, r5, sl, lsr #8
    a3bc:	0095e200 	addseq	lr, r5, r0, lsl #4
    a3c0:	0095de00 	addseq	sp, r5, r0, lsl #28
    a3c4:	276f1b00 	strbcs	r1, [pc, -r0, lsl #22]!
    a3c8:	bd010000 	stclt	0, cr0, [r1, #-0]
    a3cc:	009a2304 	addseq	r2, sl, r4, lsl #6
    a3d0:	96040000 	strls	r0, [r4], -r0
    a3d4:	96000000 	strls	r0, [r0], -r0
    a3d8:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    a3dc:	01000028 	tsteq	r0, r8, lsr #32
    a3e0:	5e1904bf 	cfcmpdpl	r0, mvd9, mvd15
    a3e4:	26000006 	strcs	r0, [r0], -r6
    a3e8:	22000096 	andcs	r0, r0, #150	; 0x96
    a3ec:	21000096 	swpcs	r0, r6, [r0]	; <UNPREDICTABLE>
    a3f0:	00000000 	andeq	r0, r0, r0
    a3f4:	00001886 	andeq	r1, r0, r6, lsl #17
    a3f8:	00000021 	andeq	r0, r0, r1, lsr #32
    a3fc:	00189400 	andseq	r9, r8, r0, lsl #8
    a400:	011a0000 	tsteq	sl, r0
    a404:	00002640 	andeq	r2, r0, r0, asr #12
    a408:	0c04a701 	stceq	7, cr10, [r4], {1}
    a40c:	00009a01 	andeq	r9, r0, r1, lsl #20
	...
    a418:	00964400 	addseq	r4, r6, r0, lsl #8
    a41c:	09f30100 	ldmibeq	r3!, {r8}^
    a420:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    a424:	01000028 	tsteq	r0, r8, lsr #32
    a428:	603304a7 	eorsvs	r0, r3, r7, lsr #9
    a42c:	6a000005 	bvs	a448 <__HEAP_SIZE+0x9448>
    a430:	64000096 	strvs	r0, [r0], #-150	; 0xffffff6a
    a434:	1d000096 	stcne	0, cr0, [r0, #-600]	; 0xfffffda8
    a438:	0000289d 	muleq	r0, sp, r8
    a43c:	1904a901 	stmdbne	r4, {r0, r8, fp, sp, pc}
    a440:	0000065e 	andeq	r0, r0, lr, asr r6
    a444:	0000969c 	muleq	r0, ip, r6
    a448:	00009696 	muleq	r0, r6, r6
    a44c:	0026011d 	eoreq	r0, r6, sp, lsl r1
    a450:	04aa0100 	strteq	r0, [sl], #256	; 0x100
    a454:	00009a10 	andeq	r9, r0, r0, lsl sl
    a458:	0096ca00 	addseq	ip, r6, r0, lsl #20
    a45c:	0096c800 	addseq	ip, r6, r0, lsl #16
    a460:	00002100 	andeq	r2, r0, r0, lsl #2
    a464:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    a468:	00210000 	eoreq	r0, r1, r0
    a46c:	94000000 	strls	r0, [r0], #-0
    a470:	00000018 	andeq	r0, r0, r8, lsl r0
    a474:	260a011a 			; <UNDEFINED> instruction: 0x260a011a
    a478:	8a010000 	bhi	4a480 <__HEAP_SIZE+0x49480>
    a47c:	fa011004 	blx	4e494 <__HEAP_SIZE+0x4d494>
	...
    a488:	dd000000 	stcle	0, cr0, [r0, #-0]
    a48c:	01000096 	swpeq	r0, r6, [r0]	; <UNPREDICTABLE>
    a490:	00000a65 	andeq	r0, r0, r5, ror #20
    a494:	00289e1b 	eoreq	r9, r8, fp, lsl lr
    a498:	048a0100 	streq	r0, [sl], #256	; 0x100
    a49c:	00055433 	andeq	r5, r5, r3, lsr r4
    a4a0:	00970700 	addseq	r0, r7, r0, lsl #14
    a4a4:	0096fd00 	addseq	pc, r6, r0, lsl #26
    a4a8:	1a191d00 	bne	6518b0 <__RAM_SIZE+0x5518b0>
    a4ac:	8c010000 	stchi	0, cr0, [r1], {-0}
    a4b0:	00fa1404 	rscseq	r1, sl, r4, lsl #8
    a4b4:	974e0000 	strbls	r0, [lr, -r0]
    a4b8:	974c0000 	strbls	r0, [ip, -r0]
    a4bc:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    a4c0:	01000028 	tsteq	r0, r8, lsr #32
    a4c4:	5813048d 	ldmdapl	r3, {r0, r2, r3, r7, sl}
    a4c8:	6b000006 	blvs	a4e8 <__HEAP_SIZE+0x94e8>
    a4cc:	61000097 	swpvs	r0, r7, [r0]	; <UNPREDICTABLE>
    a4d0:	21000097 	swpcs	r0, r7, [r0]	; <UNPREDICTABLE>
    a4d4:	00000000 	andeq	r0, r0, r0
    a4d8:	00001886 	andeq	r1, r0, r6, lsl #17
    a4dc:	00000021 	andeq	r0, r0, r1, lsr #32
    a4e0:	00189400 	andseq	r9, r8, r0, lsl #8
    a4e4:	4b220000 	blmi	88a4ec <__RAM_SIZE+0x78a4ec>
    a4e8:	01000025 	tsteq	r0, r5, lsr #32
    a4ec:	01110457 	tsteq	r1, r7, asr r4
    a4f0:	100030ac 	andne	r3, r0, ip, lsr #1
    a4f4:	1000310c 	andne	r3, r0, ip, lsl #2
    a4f8:	000097b0 			; <UNDEFINED> instruction: 0x000097b0
    a4fc:	000b1701 	andeq	r1, fp, r1, lsl #14
    a500:	30da2300 	sbcscc	r2, sl, r0, lsl #6
    a504:	30ee1000 	rsccc	r1, lr, r0
    a508:	0ae01000 	beq	ff80e510 <__StackTop+0xc770e510>
    a50c:	661c0000 	ldrvs	r0, [ip], -r0
    a510:	01000024 	tsteq	r0, r4, lsr #32
    a514:	cb3a0469 	blgt	e8b6c0 <__RAM_SIZE+0xd8b6c0>
    a518:	05000003 	streq	r0, [r0, #-3]
    a51c:	008c8003 	addeq	r8, ip, r3
    a520:	279a1c38 			; <UNDEFINED> instruction: 0x279a1c38
    a524:	6a010000 	bvs	4a52c <__HEAP_SIZE+0x4952c>
    a528:	0b173404 	bleq	5d7540 <__RAM_SIZE+0x4d7540>
    a52c:	03050000 	movweq	r0, #20480	; 0x5000
    a530:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
    a534:	0030ea1e 	eorseq	lr, r0, lr, lsl sl
    a538:	0018a210 	andseq	sl, r8, r0, lsl r2
    a53c:	50011f00 	andpl	r1, r1, r0, lsl #30
    a540:	011f3a01 	tsteq	pc, r1, lsl #20
    a544:	1f400151 	svcne	0x00400151
    a548:	03055201 	movweq	r5, #20993	; 0x5201
    a54c:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
    a550:	0553011f 	ldrbeq	r0, [r3, #-287]	; 0xfffffee1
    a554:	008c8003 	addeq	r8, ip, r3
    a558:	7d021f38 	stcvc	15, cr1, [r2, #-224]	; 0xffffff20
    a55c:	00300100 	eorseq	r0, r0, r0, lsl #2
    a560:	30b42100 	adcscc	r2, r4, r0, lsl #2
    a564:	18861000 	stmne	r6, {ip}
    a568:	be210000 	cdplt	0, 2, cr0, cr1, cr0, {0}
    a56c:	94100030 	ldrls	r0, [r0], #-48	; 0xffffffd0
    a570:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    a574:	100030ca 	andne	r3, r0, sl, asr #1
    a578:	000018b1 			; <UNDEFINED> instruction: 0x000018b1
    a57c:	00000b06 	andeq	r0, r0, r6, lsl #22
    a580:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a584:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    a588:	100030d2 	ldrdne	r3, [r0], -r2
    a58c:	000018b1 			; <UNDEFINED> instruction: 0x000018b1
    a590:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a594:	00000074 	andeq	r0, r0, r4, ror r0
    a598:	0000b80c 	andeq	fp, r0, ip, lsl #16
    a59c:	000b2700 	andeq	r2, fp, r0, lsl #14
    a5a0:	00350d00 	eorseq	r0, r5, r0, lsl #26
    a5a4:	009f0000 	addseq	r0, pc, r0
    a5a8:	00277722 	eoreq	r7, r7, r2, lsr #14
    a5ac:	043e0100 	ldrteq	r0, [lr], #-256	; 0xffffff00
    a5b0:	2ed80111 	mrccs	1, 6, r0, cr8, cr1, {0}
    a5b4:	2f081000 	svccs	0x00081000
    a5b8:	97f41000 	ldrbls	r1, [r4, r0]!
    a5bc:	7d010000 	stcvc	0, cr0, [r1, #-0]
    a5c0:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    a5c4:	000027e8 	andeq	r2, r0, r8, ror #15
    a5c8:	14044001 	strne	r4, [r4], #-1
    a5cc:	00000117 	andeq	r0, r0, r7, lsl r1
    a5d0:	00009816 	andeq	r9, r0, r6, lsl r8
    a5d4:	00009814 	andeq	r9, r0, r4, lsl r8
    a5d8:	0018a81d 	andseq	sl, r8, sp, lsl r8
    a5dc:	04410100 	strbeq	r0, [r1], #-256	; 0xffffff00
    a5e0:	00074912 	andeq	r4, r7, r2, lsl r9
    a5e4:	00982e00 	addseq	r2, r8, r0, lsl #28
    a5e8:	00982a00 	addseq	r2, r8, r0, lsl #20
    a5ec:	2ee81e00 	cdpcs	14, 14, cr1, cr8, cr0, {0}
    a5f0:	0f901000 	svceq	0x00901000
    a5f4:	011f0000 	tsteq	pc, r0
    a5f8:	ff090251 			; <UNDEFINED> instruction: 0xff090251
    a5fc:	01250000 			; <UNDEFINED> instruction: 0x01250000
    a600:	01000028 	tsteq	r0, r8, lsr #32
    a604:	011103aa 	tsteq	r1, sl, lsr #7
    a608:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    a60c:	10003094 	mulne	r0, r4, r0
    a610:	00009850 	andeq	r9, r0, r0, asr r8
    a614:	000cbb01 	andeq	fp, ip, r1, lsl #22
    a618:	284a1c00 	stmdacs	sl, {sl, fp, ip}^
    a61c:	ac010000 	stcge	0, cr0, [r1], {-0}
    a620:	07071d03 	streq	r1, [r7, -r3, lsl #26]
    a624:	91020000 	mrsls	r0, (UNDEF: 2)
    a628:	289d1d60 	ldmcs	sp, {r5, r6, r8, sl, fp, ip}
    a62c:	ad010000 	stcge	0, cr0, [r1, #-0]
    a630:	06581303 	ldrbeq	r1, [r8], -r3, lsl #6
    a634:	988a0000 	stmls	sl, {}	; <UNPREDICTABLE>
    a638:	98880000 	stmls	r8, {}	; <UNPREDICTABLE>
    a63c:	9f1c0000 	svcls	0x001c0000
    a640:	01000029 	tsteq	r0, r9, lsr #32
    a644:	fa1403ae 	blx	50b504 <__RAM_SIZE+0x40b504>
    a648:	02000000 	andeq	r0, r0, #0
    a64c:	5d1d5c91 	ldcpl	12, cr5, [sp, #-580]	; 0xfffffdbc
    a650:	01000024 	tsteq	r0, r4, lsr #32
    a654:	171403af 	ldrne	r0, [r4, -pc, lsr #7]
    a658:	a9000001 	stmdbge	r0, {r0}
    a65c:	9d000098 	stcls	0, cr0, [r0, #-608]	; 0xfffffda0
    a660:	23000098 	movwcs	r0, #152	; 0x98
    a664:	10002fc8 	andne	r2, r0, r8, asr #31
    a668:	10002fd0 	ldrdne	r2, [r0], -r0
    a66c:	00000c05 	andeq	r0, r0, r5, lsl #24
    a670:	00297e1d 	eoreq	r7, r9, sp, lsl lr
    a674:	03b90100 			; <UNDEFINED> instruction: 0x03b90100
    a678:	000cc138 	andeq	ip, ip, r8, lsr r1
    a67c:	0098f500 	addseq	pc, r8, r0, lsl #10
    a680:	0098f300 	addseq	pc, r8, r0, lsl #6
    a684:	be240000 	cdplt	0, 2, cr0, cr4, cr0, {0}
    a688:	c010002f 	andsgt	r0, r0, pc, lsr #32
    a68c:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    a690:	1f00000c 	svcne	0x0000000c
    a694:	91025101 	tstls	r2, r1, lsl #2
    a698:	52011f60 	andpl	r1, r1, #96, 30	; 0x180
    a69c:	24003001 	strcs	r3, [r0], #-1
    a6a0:	10002fde 	ldrdne	r2, [r0], -lr
    a6a4:	000018cf 	andeq	r1, r0, pc, asr #17
    a6a8:	00000c32 	andeq	r0, r0, r2, lsr ip
    a6ac:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a6b0:	24000474 	strcs	r0, [r0], #-1140	; 0xfffffb8c
    a6b4:	10002fe4 	andne	r2, r0, r4, ror #31
    a6b8:	00000d79 	andeq	r0, r0, r9, ror sp
    a6bc:	00000c46 	andeq	r0, r0, r6, asr #24
    a6c0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a6c4:	24005c91 	strcs	r5, [r0], #-3217	; 0xfffff36f
    a6c8:	10003016 	andne	r3, r0, r6, lsl r0
    a6cc:	00000cc6 	andeq	r0, r0, r6, asr #25
    a6d0:	00000c60 	andeq	r0, r0, r0, ror #24
    a6d4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a6d8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a6dc:	00750252 	rsbseq	r0, r5, r2, asr r2
    a6e0:	30322600 	eorscc	r2, r2, r0, lsl #12
    a6e4:	0c701000 	ldcleq	0, cr1, [r0], #-0
    a6e8:	011f0000 	tsteq	pc, r0
    a6ec:	00740250 	rsbseq	r0, r4, r0, asr r2
    a6f0:	30422400 	subcc	r2, r2, r0, lsl #8
    a6f4:	102b1000 	eorne	r1, fp, r0
    a6f8:	0c8a0000 	stceq	0, cr0, [sl], {0}
    a6fc:	011f0000 	tsteq	pc, r0
    a700:	00740250 	rsbseq	r0, r4, r0, asr r2
    a704:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a708:	24000075 	strcs	r0, [r0], #-117	; 0xffffff8b
    a70c:	1000306e 	andne	r3, r0, lr, rrx
    a710:	00000cc6 	andeq	r0, r0, r6, asr #25
    a714:	00000caa 	andeq	r0, r0, sl, lsr #25
    a718:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a71c:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a720:	00750252 	rsbseq	r0, r5, r2, asr r2
    a724:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    a728:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    a72c:	1000308a 	andne	r3, r0, sl, lsl #1
    a730:	000018de 	ldrdeq	r1, [r0], -lr
    a734:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a738:	00000074 	andeq	r0, r0, r4, ror r0
    a73c:	06b60407 	ldrteq	r0, [r6], r7, lsl #8
    a740:	bb060000 	bllt	18a748 <__RAM_SIZE+0x8a748>
    a744:	2700000c 	strcs	r0, [r0, -ip]
    a748:	000026d8 	ldrdeq	r2, [r0], -r8
    a74c:	17037e01 	strne	r7, [r3, -r1, lsl #28]
    a750:	0000fa01 	andeq	pc, r0, r1, lsl #20
    a754:	002e2800 	eoreq	r2, lr, r0, lsl #16
    a758:	002e7010 	eoreq	r7, lr, r0, lsl r0
    a75c:	00990a10 	addseq	r0, r9, r0, lsl sl
    a760:	0d790100 	ldfeqe	f0, [r9, #-0]
    a764:	9d1b0000 	ldcls	0, cr0, [fp, #-0]
    a768:	01000028 	tsteq	r0, r8, lsr #32
    a76c:	5e43037e 	mcrpl	3, 2, r0, cr3, cr14, {3}
    a770:	3e000006 	cdpcc	0, 0, cr0, cr0, cr6, {0}
    a774:	2a000099 	bcs	a9e0 <__HEAP_SIZE+0x99e0>
    a778:	1b000099 	blne	a9e4 <__HEAP_SIZE+0x99e4>
    a77c:	0000292f 	andeq	r2, r0, pc, lsr #18
    a780:	44037f01 	strmi	r7, [r3], #-3841	; 0xfffff0ff
    a784:	00000123 	andeq	r0, r0, r3, lsr #2
    a788:	000099da 	ldrdeq	r9, [r0], -sl
    a78c:	000099c4 	andeq	r9, r0, r4, asr #19
    a790:	00245d1b 	eoreq	r5, r4, fp, lsl sp
    a794:	03800100 	orreq	r0, r0, #0, 2
    a798:	00012344 	andeq	r2, r1, r4, asr #6
    a79c:	009a7200 	addseq	r7, sl, r0, lsl #4
    a7a0:	009a6800 	addseq	r6, sl, r0, lsl #16
    a7a4:	241a1b00 	ldrcs	r1, [sl], #-2816	; 0xfffff500
    a7a8:	81010000 	mrshi	r0, (UNDEF: 1)
    a7ac:	01234403 			; <UNDEFINED> instruction: 0x01234403
    a7b0:	9ac10000 	bls	ff04a7b8 <__StackTop+0xc6f4a7b8>
    a7b4:	9ab70000 	bls	fedca7bc <__StackTop+0xc6cca7bc>
    a7b8:	3a1d0000 	bcc	74a7c0 <__RAM_SIZE+0x64a7c0>
    a7bc:	01000025 	tsteq	r0, r5, lsr #32
    a7c0:	fa140383 	blx	50b5d4 <__RAM_SIZE+0x40b5d4>
    a7c4:	0c000000 	stceq	0, cr0, [r0], {-0}
    a7c8:	0600009b 			; <UNDEFINED> instruction: 0x0600009b
    a7cc:	2400009b 	strcs	r0, [r0], #-155	; 0xffffff65
    a7d0:	10002e48 	andne	r2, r0, r8, asr #28
    a7d4:	000018ec 	andeq	r1, r0, ip, ror #17
    a7d8:	00000d65 	andeq	r0, r0, r5, ror #26
    a7dc:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    a7e0:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    a7e4:	5e1e0004 	cdppl	0, 1, cr0, cr14, cr4, {0}
    a7e8:	ec10002e 	ldc	0, cr0, [r0], {46}	; 0x2e
    a7ec:	1f000018 	svcne	0x00000018
    a7f0:	f3055101 	vrhadd.u8	d5, d5, d1
    a7f4:	04235001 	strteq	r5, [r3], #-1
    a7f8:	2a270000 	bcs	9ca800 <__RAM_SIZE+0x8ca800>
    a7fc:	01000027 	tsteq	r0, r7, lsr #32
    a800:	01170367 	tsteq	r7, r7, ror #6
    a804:	00000117 	andeq	r0, r0, r7, lsl r1
    a808:	10002f08 	andne	r2, r0, r8, lsl #30
    a80c:	10002f34 	andne	r2, r0, r4, lsr pc
    a810:	00009b38 	andeq	r9, r0, r8, lsr fp
    a814:	000de801 	andeq	lr, sp, r1, lsl #16
    a818:	299e1b00 	ldmibcs	lr, {r8, r9, fp, ip}
    a81c:	67010000 	strvs	r0, [r1, -r0]
    a820:	090e3c03 	stmdbeq	lr, {r0, r1, sl, fp, ip, sp}
    a824:	9b5c0000 	blls	170a82c <__RAM_SIZE+0x160a82c>
    a828:	9b580000 	blls	160a830 <__RAM_SIZE+0x150a830>
    a82c:	5d1d0000 	ldcpl	0, cr0, [sp, #-0]
    a830:	01000024 	tsteq	r0, r4, lsr #32
    a834:	17140369 	ldrne	r0, [r4, -r9, ror #6]
    a838:	82000001 	andhi	r0, r0, #1
    a83c:	7a00009b 	bvc	aab0 <__HEAP_SIZE+0x9ab0>
    a840:	1c00009b 	stcne	0, cr0, [r0], {155}	; 0x9b
    a844:	0000281c 	andeq	r2, r0, ip, lsl r8
    a848:	2b036a01 	blcs	e5054 <__HEAP_SIZE+0xe4054>
    a84c:	00000117 	andeq	r0, r0, r7, lsl r1
    a850:	8c7c0305 	ldclhi	3, cr0, [ip], #-20	; 0xffffffec
    a854:	10213800 	eorne	r3, r1, r0, lsl #16
    a858:	fb10002f 	blx	40a91e <__RAM_SIZE+0x30a91e>
    a85c:	21000018 	tstcs	r0, r8, lsl r0
    a860:	10002f2a 	andne	r2, r0, sl, lsr #30
    a864:	00000b27 	andeq	r0, r0, r7, lsr #22
    a868:	29892800 	stmibcs	r9, {fp, sp}
    a86c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    a870:	17011703 	strne	r1, [r1, -r3, lsl #14]
    a874:	08000001 	stmdaeq	r0, {r0}
    a878:	2810002e 	ldmdacs	r0, {r1, r2, r3, r5}
    a87c:	0210002e 	andseq	r0, r0, #46	; 0x2e
    a880:	3101007d 	tstcc	r1, sp, ror r0
    a884:	1b00000e 	blne	a8c4 <__HEAP_SIZE+0x98c4>
    a888:	0000244e 	andeq	r2, r0, lr, asr #8
    a88c:	40034c01 	andmi	r4, r3, r1, lsl #24
    a890:	0000090e 	andeq	r0, r0, lr, lsl #18
    a894:	00009bbe 			; <UNDEFINED> instruction: 0x00009bbe
    a898:	00009bb6 			; <UNDEFINED> instruction: 0x00009bb6
    a89c:	0027e81d 	eoreq	lr, r7, sp, lsl r8
    a8a0:	034e0100 	movteq	r0, #57600	; 0xe100
    a8a4:	00011714 	andeq	r1, r1, r4, lsl r7
    a8a8:	009bfc00 	addseq	pc, fp, r0, lsl #24
    a8ac:	009bf800 	addseq	pc, fp, r0, lsl #16
    a8b0:	00220000 	eoreq	r0, r2, r0
    a8b4:	01000029 	tsteq	r0, r9, lsr #32
    a8b8:	0111030e 	tsteq	r1, lr, lsl #6
    a8bc:	10002f34 	andne	r2, r0, r4, lsr pc
    a8c0:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    a8c4:	00009c1b 	andeq	r9, r0, fp, lsl ip
    a8c8:	000f1401 	andeq	r1, pc, r1, lsl #8
    a8cc:	27e81b00 	strbcs	r1, [r8, r0, lsl #22]!
    a8d0:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    a8d4:	01233e03 			; <UNDEFINED> instruction: 0x01233e03
    a8d8:	9c630000 	stclls	0, cr0, [r3], #-0
    a8dc:	9c5f0000 	mrals	r0, pc, acc0
    a8e0:	4f1b0000 	svcmi	0x001b0000
    a8e4:	01000024 	tsteq	r0, r4, lsr #32
    a8e8:	fa38030f 	blx	e0b52c <__RAM_SIZE+0xd0b52c>
    a8ec:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    a8f0:	8100009c 	swphi	r0, ip, [r0]	; <UNPREDICTABLE>
    a8f4:	1d00009c 	stcne	0, cr0, [r0, #-624]	; 0xfffffd90
    a8f8:	0000245d 	andeq	r2, r0, sp, asr r4
    a8fc:	14031101 	strne	r1, [r3], #-257	; 0xfffffeff
    a900:	00000117 	andeq	r0, r0, r7, lsl r1
    a904:	00009cce 	andeq	r9, r0, lr, asr #25
    a908:	00009cc0 	andeq	r9, r0, r0, asr #25
    a90c:	00299f1c 	eoreq	r9, r9, ip, lsl pc
    a910:	03120100 	tsteq	r2, #0, 2
    a914:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a918:	6c910200 	lfmvs	f0, 4, [r1], {0}
    a91c:	002f4021 	eoreq	r4, pc, r1, lsr #32
    a920:	00190a10 	andseq	r0, r9, r0, lsl sl
    a924:	2f462400 	svccs	0x00462400
    a928:	0d791000 	ldcleq	0, cr1, [r9, #-0]
    a92c:	0eb80000 	cdpeq	0, 11, cr0, cr8, cr0, {0}
    a930:	011f0000 	tsteq	pc, r0
    a934:	6c910250 	lfmvs	f0, 4, [r1], {80}	; 0x50
    a938:	2f6a2400 	svccs	0x006a2400
    a93c:	19191000 	ldmdbne	r9, {ip}
    a940:	0ed50000 	cdpeq	0, 13, cr0, cr5, cr0, {0}
    a944:	011f0000 	tsteq	pc, r0
    a948:	00760551 	rsbseq	r0, r6, r1, asr r5
    a94c:	1f1c0075 	svcne	0x001c0075
    a950:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    a954:	6e210000 	cdpvs	0, 2, cr0, cr1, cr0, {0}
    a958:	2810002f 	ldmdacs	r0, {r0, r1, r2, r3, r5}
    a95c:	21000019 	tstcs	r0, r9, lsl r0
    a960:	10002f78 	andne	r2, r0, r8, ror pc
    a964:	00001928 	andeq	r1, r0, r8, lsr #18
    a968:	002f8024 	eoreq	r8, pc, r4, lsr #32
    a96c:	000f9010 	andeq	r9, pc, r0, lsl r0	; <UNPREDICTABLE>
    a970:	000f0100 	andeq	r0, pc, r0, lsl #2
    a974:	50011f00 	andpl	r1, r1, r0, lsl #30
    a978:	1f007602 	svcne	0x00007602
    a97c:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    a980:	8a210000 	bhi	84a988 <__RAM_SIZE+0x74a988>
    a984:	3710002f 	ldrcc	r0, [r0, -pc, lsr #32]
    a988:	21000019 	tstcs	r0, r9, lsl r0
    a98c:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    a990:	00001928 	andeq	r1, r0, r8, lsr #18
    a994:	27db2200 	ldrbcs	r2, [fp, r0, lsl #4]
    a998:	ec010000 	stc	0, cr0, [r1], {-0}
    a99c:	94010c02 	strls	r0, [r1], #-3074	; 0xfffff3fe
    a9a0:	aa100030 	bge	40aa68 <__RAM_SIZE+0x30aa68>
    a9a4:	23100030 	tstcs	r0, #48	; 0x30
    a9a8:	0100009d 	swpeq	r0, sp, [r0]	; <UNPREDICTABLE>
    a9ac:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    a9b0:	001e841b 	andseq	r8, lr, fp, lsl r4
    a9b4:	02ec0100 	rsceq	r0, ip, #0, 2
    a9b8:	00009a0c 	andeq	r9, r0, ip, lsl #20
    a9bc:	009d5300 	addseq	r5, sp, r0, lsl #6
    a9c0:	009d4f00 	addseq	r4, sp, r0, lsl #30
    a9c4:	27e81d00 	strbcs	r1, [r8, r0, lsl #26]!
    a9c8:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    a9cc:	01171402 	tsteq	r7, r2, lsl #8
    a9d0:	9d760000 	ldclls	0, cr0, [r6, #-0]
    a9d4:	9d740000 	ldclls	0, cr0, [r4, #-0]
    a9d8:	4f1c0000 	svcmi	0x001c0000
    a9dc:	01000024 	tsteq	r0, r4, lsr #32
    a9e0:	fa1402ef 	blx	50b5a4 <__RAM_SIZE+0x40b5a4>
    a9e4:	02000000 	andeq	r0, r0, #0
    a9e8:	9e247491 	mcrls	4, 1, r7, cr4, cr1, {4}
    a9ec:	e8100030 	ldmda	r0, {r4, r5}
    a9f0:	7d00000d 	stcvc	0, cr0, [r0, #-52]	; 0xffffffcc
    a9f4:	1f00000f 	svcne	0x0000000f
    a9f8:	91025001 	tstls	r2, r1
    a9fc:	a4210074 	strtge	r0, [r1], #-116	; 0xffffff8c
    aa00:	31100030 	tstcc	r0, r0, lsr r0
    aa04:	2100000e 	tstcs	r0, lr
    aa08:	100030a8 	andne	r3, r0, r8, lsr #1
    aa0c:	00000b7d 	andeq	r0, r0, sp, ror fp
    aa10:	25c12200 	strbcs	r2, [r1, #512]	; 0x200
    aa14:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    aa18:	98011102 	stmdals	r1, {r1, r8, ip}
    aa1c:	d810002e 	ldmdale	r0, {r1, r2, r3, r5}
    aa20:	8910002e 	ldmdbhi	r0, {r1, r2, r3, r5}
    aa24:	0100009d 	swpeq	r0, sp, [r0]	; <UNPREDICTABLE>
    aa28:	0000102b 	andeq	r1, r0, fp, lsr #32
    aa2c:	0027e81b 	eoreq	lr, r7, fp, lsl r8
    aa30:	02ce0100 	sbceq	r0, lr, #0, 2
    aa34:	0001233a 	andeq	r2, r1, sl, lsr r3
    aa38:	009dad00 	addseq	sl, sp, r0, lsl #26
    aa3c:	009da900 	addseq	sl, sp, r0, lsl #18
    aa40:	245d1b00 	ldrbcs	r1, [sp], #-2816	; 0xfffff500
    aa44:	cf010000 	svcgt	0x00010000
    aa48:	01233a02 			; <UNDEFINED> instruction: 0x01233a02
    aa4c:	9dcf0000 	stclls	0, cr0, [pc]	; aa54 <__HEAP_SIZE+0x9a54>
    aa50:	9dcb0000 	stclls	0, cr0, [fp]
    aa54:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    aa58:	01000028 	tsteq	r0, r8, lsr #32
    aa5c:	5e1902d4 	mrcpl	2, 0, r0, cr9, cr4, {6}
    aa60:	ef000006 	svc	0x00000006
    aa64:	ed00009d 	stc	0, cr0, [r0, #-628]	; 0xfffffd8c
    aa68:	2400009d 	strcs	r0, [r0], #-157	; 0xffffff63
    aa6c:	10002eac 	andne	r2, r0, ip, lsr #29
    aa70:	000018cf 	andeq	r1, r0, pc, asr #17
    aa74:	00000ffe 	strdeq	r0, [r0], -lr
    aa78:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    aa7c:	26000474 			; <UNDEFINED> instruction: 0x26000474
    aa80:	10002ec4 	andne	r2, r0, r4, asr #29
    aa84:	0000100e 	andeq	r1, r0, lr
    aa88:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    aa8c:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    aa90:	10002ed0 	ldrdne	r2, [r0], -r0
    aa94:	0000102b 	andeq	r1, r0, fp, lsr #32
    aa98:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    aa9c:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    aaa0:	00750251 	rsbseq	r0, r5, r1, asr r2
    aaa4:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    aaa8:	00000076 	andeq	r0, r0, r6, ror r0
    aaac:	00278b22 	eoreq	r8, r7, r2, lsr #22
    aab0:	02bb0100 	adcseq	r0, fp, #0, 2
    aab4:	2e700111 	mrccs	1, 3, r0, cr0, cr1, {0}
    aab8:	2e981000 	cdpcs	0, 9, cr1, cr8, cr0, {0}
    aabc:	9e021000 	cdpls	0, 0, cr1, cr2, cr0, {0}
    aac0:	b2010000 	andlt	r0, r1, #0
    aac4:	1b000010 	blne	ab0c <__HEAP_SIZE+0x9b0c>
    aac8:	0000289d 	muleq	r0, sp, r8
    aacc:	3102bb01 	tstcc	r2, r1, lsl #22
    aad0:	0000065e 	andeq	r0, r0, lr, asr r6
    aad4:	00009e26 	andeq	r9, r0, r6, lsr #28
    aad8:	00009e22 	andeq	r9, r0, r2, lsr #28
    aadc:	00261e1b 	eoreq	r1, r6, fp, lsl lr
    aae0:	02bc0100 	adcseq	r0, ip, #0, 2
    aae4:	0001172c 	andeq	r1, r1, ip, lsr #14
    aae8:	009e4800 	addseq	r4, lr, r0, lsl #16
    aaec:	009e4400 	addseq	r4, lr, r0, lsl #8
    aaf0:	245d1b00 	ldrbcs	r1, [sp], #-2816	; 0xfffff500
    aaf4:	bd010000 	stclt	0, cr0, [r1, #-0]
    aaf8:	01233202 			; <UNDEFINED> instruction: 0x01233202
    aafc:	9e6a0000 	cdpls	0, 6, cr0, cr10, cr0, {0}
    ab00:	9e660000 	cdpls	0, 6, cr0, cr6, cr0, {0}
    ab04:	84260000 	strthi	r0, [r6], #-0
    ab08:	9510002e 	ldrls	r0, [r0, #-46]	; 0xffffffd2
    ab0c:	1f000010 	svcne	0x00000010
    ab10:	74025001 	strvc	r5, [r2], #-1
    ab14:	921e0000 	andsls	r0, lr, #0
    ab18:	c610002e 	ldrgt	r0, [r0], -lr, lsr #32
    ab1c:	1f00000c 	svcne	0x0000000c
    ab20:	74025001 	strvc	r5, [r2], #-1
    ab24:	52011f00 	andpl	r1, r1, #0, 30
    ab28:	1f007602 	svcne	0x00007602
    ab2c:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    ab30:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    ab34:	0028d301 	eoreq	sp, r8, r1, lsl #6
    ab38:	02ad0100 	adceq	r0, sp, #0, 2
    ab3c:	00ad0112 	adceq	r0, sp, r2, lsl r1
	...
    ab48:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ab4c:	10fc0100 	rscsne	r0, ip, r0, lsl #2
    ab50:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    ab54:	01000028 	tsteq	r0, r8, lsr #32
    ab58:	543002ad 	ldrtpl	r0, [r0], #-685	; 0xfffffd53
    ab5c:	8c000005 	stchi	0, cr0, [r0], {5}
    ab60:	8800009e 	stmdahi	r0, {r1, r2, r3, r4, r7}
    ab64:	1d00009e 	stcne	0, cr0, [r0, #-632]	; 0xfffffd88
    ab68:	0000289d 	muleq	r0, sp, r8
    ab6c:	1302af01 	movwne	sl, #12033	; 0x2f01
    ab70:	00000658 	andeq	r0, r0, r8, asr r6
    ab74:	00009eb1 			; <UNDEFINED> instruction: 0x00009eb1
    ab78:	00009ead 	andeq	r9, r0, sp, lsr #29
    ab7c:	01012900 	tsteq	r1, r0, lsl #18
    ab80:	01000025 	tsteq	r0, r5, lsr #32
    ab84:	0114028f 	tsteq	r4, pc, lsl #5
    ab88:	000000fa 	strdeq	r0, [r0], -sl
	...
    ab94:	01007d02 	tsteq	r0, r2, lsl #26
    ab98:	0000116a 	andeq	r1, r0, sl, ror #2
    ab9c:	00289e1b 	eoreq	r9, r8, fp, lsl lr
    aba0:	028f0100 	addeq	r0, pc, #0, 2
    aba4:	00055439 	andeq	r5, r5, r9, lsr r4
    aba8:	009eda00 	addseq	sp, lr, r0, lsl #20
    abac:	009ed200 	addseq	sp, lr, r0, lsl #4
    abb0:	296f2a00 	stmdbcs	pc!, {r9, fp, sp}^	; <UNPREDICTABLE>
    abb4:	90010000 	andls	r0, r1, r0
    abb8:	116a3c02 	cmnne	sl, r2, lsl #24
    abbc:	51010000 	mrspl	r0, (UNDEF: 1)
    abc0:	001a191d 	andseq	r1, sl, sp, lsl r9
    abc4:	02920100 	addseq	r0, r2, #0, 2
    abc8:	0000fa18 	andeq	pc, r0, r8, lsl sl	; <UNPREDICTABLE>
    abcc:	009f1600 	addseq	r1, pc, r0, lsl #12
    abd0:	009f1200 	addseq	r1, pc, r0, lsl #4
    abd4:	289d1d00 	ldmcs	sp, {r8, sl, fp, ip}
    abd8:	93010000 	movwls	r0, #4096	; 0x1000
    abdc:	06581702 	ldrbeq	r1, [r8], -r2, lsl #14
    abe0:	9f3e0000 	svcls	0x003e0000
    abe4:	9f360000 	svcls	0x00360000
    abe8:	07000000 	streq	r0, [r0, -r0]
    abec:	00117004 	andseq	r7, r1, r4
    abf0:	47040700 	strmi	r0, [r4, -r0, lsl #14]
    abf4:	29000004 	stmdbcs	r0, {r2}
    abf8:	0026f301 	eoreq	pc, r6, r1, lsl #6
    abfc:	027e0100 	rsbseq	r0, lr, #0, 2
    ac00:	01170110 	tsteq	r7, r0, lsl r1
	...
    ac0c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ac10:	11d50100 	bicsne	r0, r5, r0, lsl #2
    ac14:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    ac18:	01000028 	tsteq	r0, r8, lsr #32
    ac1c:	5433027e 	ldrtpl	r0, [r3], #-638	; 0xfffffd82
    ac20:	7a000005 	bvc	ac3c <__HEAP_SIZE+0x9c3c>
    ac24:	7600009f 			; <UNDEFINED> instruction: 0x7600009f
    ac28:	1d00009f 	stcne	0, cr0, [r0, #-636]	; 0xfffffd84
    ac2c:	0000289d 	muleq	r0, sp, r8
    ac30:	13028001 	movwne	r8, #8193	; 0x2001
    ac34:	00000658 	andeq	r0, r0, r8, asr r6
    ac38:	00009f9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
    ac3c:	00009f9b 	muleq	r0, fp, pc	; <UNPREDICTABLE>
    ac40:	001a191d 	andseq	r1, sl, sp, lsl r9
    ac44:	02810100 	addeq	r0, r1, #0, 2
    ac48:	00011714 	andeq	r1, r1, r4, lsl r7
    ac4c:	009fc400 	addseq	ip, pc, r0, lsl #8
    ac50:	009fc000 	addseq	ip, pc, r0
    ac54:	011a0000 	tsteq	sl, r0
    ac58:	0000258b 	andeq	r2, r0, fp, lsl #11
    ac5c:	11027001 	tstne	r2, r1
    ac60:	00010b01 	andeq	r0, r1, r1, lsl #22
	...
    ac6c:	009fe300 	addseq	lr, pc, r0, lsl #6
    ac70:	12310100 	eorsne	r0, r1, #0, 2
    ac74:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    ac78:	01000028 	tsteq	r0, r8, lsr #32
    ac7c:	54350270 	ldrtpl	r0, [r5], #-624	; 0xfffffd90
    ac80:	07000005 	streq	r0, [r0, -r5]
    ac84:	030000a0 	movweq	r0, #160	; 0xa0
    ac88:	1d0000a0 	stcne	0, cr0, [r0, #-640]	; 0xfffffd80
    ac8c:	00000c05 	andeq	r0, r0, r5, lsl #24
    ac90:	15027201 	strne	r7, [r2, #-513]	; 0xfffffdff
    ac94:	0000010b 	andeq	r0, r0, fp, lsl #2
    ac98:	0000a02a 	andeq	sl, r0, sl, lsr #32
    ac9c:	0000a028 	andeq	sl, r0, r8, lsr #32
    aca0:	0000001e 	andeq	r0, r0, lr, lsl r0
    aca4:	00123100 	andseq	r3, r2, r0, lsl #2
    aca8:	50011f00 	andpl	r1, r1, r0, lsl #30
    acac:	5001f303 	andpl	pc, r1, r3, lsl #6
    acb0:	011a0000 	tsteq	sl, r0
    acb4:	0000258c 	andeq	r2, r0, ip, lsl #11
    acb8:	10025401 	andne	r5, r2, r1, lsl #8
    acbc:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    acc8:	00a03d00 	adceq	r3, r0, r0, lsl #26
    accc:	12a30100 	adcne	r0, r3, #0, 2
    acd0:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    acd4:	01000028 	tsteq	r0, r8, lsr #32
    acd8:	54330254 	ldrtpl	r0, [r3], #-596	; 0xfffffdac
    acdc:	67000005 	strvs	r0, [r0, -r5]
    ace0:	5d0000a0 	stcpl	0, cr0, [r0, #-640]	; 0xfffffd80
    ace4:	1d0000a0 	stcne	0, cr0, [r0, #-640]	; 0xfffffd80
    ace8:	0000289d 	muleq	r0, sp, r8
    acec:	13025601 	movwne	r5, #9729	; 0x2601
    acf0:	00000658 	andeq	r0, r0, r8, asr r6
    acf4:	0000a0b6 	strheq	sl, [r0], -r6
    acf8:	0000a0ac 	andeq	sl, r0, ip, lsr #1
    acfc:	001a191d 	andseq	r1, sl, sp, lsl r9
    ad00:	02570100 	subseq	r0, r7, #0, 2
    ad04:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    ad08:	00a0fd00 	adceq	pc, r0, r0, lsl #26
    ad0c:	00a0fb00 	adceq	pc, r0, r0, lsl #22
    ad10:	00002100 	andeq	r2, r0, r0, lsl #2
    ad14:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    ad18:	00210000 	eoreq	r0, r1, r0
    ad1c:	94000000 	strls	r0, [r0], #-0
    ad20:	00000018 	andeq	r0, r0, r8, lsl r0
    ad24:	291b0120 	ldmdbcs	fp, {r5, r8}
    ad28:	3b010000 	blcc	4ad30 <__HEAP_SIZE+0x49d30>
    ad2c:	00010a02 	andeq	r0, r1, r2, lsl #20
    ad30:	00000000 	andeq	r0, r0, r0
    ad34:	10000000 	andne	r0, r0, r0
    ad38:	010000a1 	smlatbeq	r0, r1, r0, r0
    ad3c:	00001311 	andeq	r1, r0, r1, lsl r3
    ad40:	00289e1b 	eoreq	r9, r8, fp, lsl lr
    ad44:	023b0100 	eorseq	r0, fp, #0, 2
    ad48:	0005542d 	andeq	r5, r5, sp, lsr #8
    ad4c:	00a13400 	adceq	r3, r1, r0, lsl #8
    ad50:	00a13000 	adceq	r3, r1, r0
    ad54:	26521b00 	ldrbcs	r1, [r2], -r0, lsl #22
    ad58:	3c010000 	stccc	0, cr0, [r1], {-0}
    ad5c:	01063002 	tsteq	r6, r2
    ad60:	a1560000 	cmpge	r6, r0
    ad64:	a1520000 	cmpge	r2, r0
    ad68:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    ad6c:	01000028 	tsteq	r0, r8, lsr #32
    ad70:	5813023e 	ldmdapl	r3, {r1, r2, r3, r4, r5, r9}
    ad74:	78000006 	stmdavc	r0, {r1, r2}
    ad78:	740000a1 	strvc	r0, [r0], #-161	; 0xffffff5f
    ad7c:	210000a1 	smlatbcs	r0, r1, r0, r0
    ad80:	00000000 	andeq	r0, r0, r0
    ad84:	00001886 	andeq	r1, r0, r6, lsl #17
    ad88:	00000021 	andeq	r0, r0, r1, lsr #32
    ad8c:	00189400 	andseq	r9, r8, r0, lsl #8
    ad90:	01290000 			; <UNDEFINED> instruction: 0x01290000
    ad94:	0000288d 	andeq	r2, r0, sp, lsl #17
    ad98:	10022d01 	andne	r2, r2, r1, lsl #26
    ad9c:	00011701 	andeq	r1, r1, r1, lsl #14
	...
    ada8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    adac:	00135b01 	andseq	r5, r3, r1, lsl #22
    adb0:	289e1b00 	ldmcs	lr, {r8, r9, fp, ip}
    adb4:	2d010000 	stccs	0, cr0, [r1, #-0]
    adb8:	05542f02 	ldrbeq	r2, [r4, #-3842]	; 0xfffff0fe
    adbc:	a19a0000 	orrsge	r0, sl, r0
    adc0:	a1960000 	orrsge	r0, r6, r0
    adc4:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    adc8:	01000028 	tsteq	r0, r8, lsr #32
    adcc:	5813022f 	ldmdapl	r3, {r0, r1, r2, r3, r5, r9}
    add0:	bf000006 	svclt	0x00000006
    add4:	bb0000a1 	bllt	b060 <__HEAP_SIZE+0xa060>
    add8:	000000a1 	andeq	r0, r0, r1, lsr #1
    addc:	232f012b 			; <UNDEFINED> instruction: 0x232f012b
    ade0:	1f010000 	svcne	0x00010000
    ade4:	1e011202 	cdpne	2, 0, cr1, cr1, cr2, {0}
    ade8:	00000005 	andeq	r0, r0, r5
    adec:	00000000 	andeq	r0, r0, r0
    adf0:	02000000 	andeq	r0, r0, #0
    adf4:	1a01007d 	bne	4aff0 <__HEAP_SIZE+0x49ff0>
    adf8:	00265e01 	eoreq	r5, r6, r1, lsl #28
    adfc:	01f30100 	mvnseq	r0, r0, lsl #2
    ae00:	00fa0110 	rscseq	r0, sl, r0, lsl r1
	...
    ae0c:	a1e00000 	mvnge	r0, r0
    ae10:	47010000 	strmi	r0, [r1, -r0]
    ae14:	1b000014 	blne	ae6c <__HEAP_SIZE+0x9e6c>
    ae18:	0000289e 	muleq	r0, lr, r8
    ae1c:	3b01f301 	blcc	87a28 <__HEAP_SIZE+0x86a28>
    ae20:	00000554 	andeq	r0, r0, r4, asr r5
    ae24:	0000a234 	andeq	sl, r0, r4, lsr r2
    ae28:	0000a224 	andeq	sl, r0, r4, lsr #4
    ae2c:	00252f1b 	eoreq	r2, r5, fp, lsl pc
    ae30:	01f40100 	mvnseq	r0, r0, lsl #2
    ae34:	0001063e 	andeq	r0, r1, lr, lsr r6
    ae38:	00a2ab00 	adceq	sl, r2, r0, lsl #22
    ae3c:	00a29f00 	adceq	r9, r2, r0, lsl #30
    ae40:	24891b00 	strcs	r1, [r9], #2816	; 0xb00
    ae44:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    ae48:	01233e01 			; <UNDEFINED> instruction: 0x01233e01
    ae4c:	a3080000 	movwge	r0, #32768	; 0x8000
    ae50:	a2fc0000 	rscsge	r0, ip, #0
    ae54:	f11b0000 			; <UNDEFINED> instruction: 0xf11b0000
    ae58:	0100000a 	tsteq	r0, sl
    ae5c:	0e4001f6 	mcreq	1, 2, r0, cr0, cr6, {7}
    ae60:	65000009 	strvs	r0, [r0, #-9]
    ae64:	590000a3 	stmdbpl	r0, {r0, r1, r5, r7}
    ae68:	1b0000a3 	blne	b0fc <__HEAP_SIZE+0xa0fc>
    ae6c:	000020e1 	andeq	r2, r0, r1, ror #1
    ae70:	3e01f701 	cdpcc	7, 0, cr15, cr1, cr1, {0}
    ae74:	00000123 	andeq	r0, r0, r3, lsr #2
    ae78:	0000a3b9 			; <UNDEFINED> instruction: 0x0000a3b9
    ae7c:	0000a3b5 			; <UNDEFINED> instruction: 0x0000a3b5
    ae80:	001a191d 	andseq	r1, sl, sp, lsl r9
    ae84:	01f90100 	mvnseq	r0, r0, lsl #2
    ae88:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    ae8c:	00a3e100 	adceq	lr, r3, r0, lsl #2
    ae90:	00a3d900 	adceq	sp, r3, r0, lsl #18
    ae94:	284a1c00 	stmdacs	sl, {sl, fp, ip}^
    ae98:	fa010000 	blx	4aea0 <__HEAP_SIZE+0x49ea0>
    ae9c:	07071d01 	streq	r1, [r7, -r1, lsl #26]
    aea0:	91020000 	mrsls	r0, (UNDEF: 2)
    aea4:	00001e68 	andeq	r1, r0, r8, ror #28
    aea8:	18770000 	ldmdane	r7!, {}^	; <UNPREDICTABLE>
    aeac:	011f0000 	tsteq	pc, r0
    aeb0:	00740250 	rsbseq	r0, r4, r0, asr r2
    aeb4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    aeb8:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    aebc:	01f30352 	mvnseq	r0, r2, asr r3
    aec0:	53011f53 	movwpl	r1, #8019	; 0x1f53
    aec4:	00003001 	andeq	r3, r0, r1
    aec8:	293f011a 	ldmdbcs	pc!, {r1, r3, r4, r8}	; <UNPREDICTABLE>
    aecc:	c0010000 	andgt	r0, r1, r0
    aed0:	fa011001 	blx	4eedc <__HEAP_SIZE+0x4dedc>
	...
    aedc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    aee0:	010000a4 	smlatbeq	r0, r4, r0, r0
    aee4:	00001539 	andeq	r1, r0, r9, lsr r5
    aee8:	00289e1b 	eoreq	r9, r8, fp, lsl lr
    aeec:	01c00100 	biceq	r0, r0, r0, lsl #2
    aef0:	0005543c 	andeq	r5, r5, ip, lsr r4
    aef4:	00a47600 	adceq	r7, r4, r0, lsl #12
    aef8:	00a46800 	adceq	r6, r4, r0, lsl #16
    aefc:	252f1b00 	strcs	r1, [pc, #-2816]!	; a404 <__HEAP_SIZE+0x9404>
    af00:	c1010000 	mrsgt	r0, (UNDEF: 1)
    af04:	01063f01 	tsteq	r6, r1, lsl #30
    af08:	a4df0000 	ldrbge	r0, [pc], #0	; af10 <__HEAP_SIZE+0x9f10>
    af0c:	a4d50000 	ldrbge	r0, [r5], #0
    af10:	891b0000 	ldmdbhi	fp, {}	; <UNPREDICTABLE>
    af14:	01000024 	tsteq	r0, r4, lsr #32
    af18:	233f01c2 	teqcs	pc, #-2147483600	; 0x80000030
    af1c:	2e000001 	cdpcs	0, 0, cr0, cr0, cr1, {0}
    af20:	240000a5 	strcs	r0, [r0], #-165	; 0xffffff5b
    af24:	1b0000a5 	blne	b1c0 <__HEAP_SIZE+0xa1c0>
    af28:	00000af1 	strdeq	r0, [r0], -r1
    af2c:	4101c301 	tstmi	r1, r1, lsl #6
    af30:	0000090e 	andeq	r0, r0, lr, lsl #18
    af34:	0000a577 	andeq	sl, r0, r7, ror r5
    af38:	0000a573 	andeq	sl, r0, r3, ror r5
    af3c:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    af40:	01c40100 	biceq	r0, r4, r0, lsl #2
    af44:	0001233f 	andeq	r2, r1, pc, lsr r3
    af48:	00a59c00 	adceq	r9, r5, r0, lsl #24
    af4c:	00a59800 	adceq	r9, r5, r0, lsl #16
    af50:	1a191d00 	bne	652358 <__RAM_SIZE+0x552358>
    af54:	c6010000 	strgt	r0, [r1], -r0
    af58:	00fa1401 	rscseq	r1, sl, r1, lsl #8
    af5c:	a5c80000 	strbge	r0, [r8]
    af60:	a5bc0000 	ldrge	r0, [ip, #0]!
    af64:	4a1c0000 	bmi	70af6c <__RAM_SIZE+0x60af6c>
    af68:	01000028 	tsteq	r0, r8, lsr #32
    af6c:	071d01c7 	ldreq	r0, [sp, -r7, asr #3]
    af70:	02000007 	andeq	r0, r0, #7
    af74:	00216891 	mlaeq	r1, r1, r8, r6
    af78:	45000000 	strmi	r0, [r0, #-0]
    af7c:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
    af80:	00000000 	andeq	r0, r0, r0
    af84:	00001868 	andeq	r1, r0, r8, ror #16
    af88:	0000151c 	andeq	r1, r0, ip, lsl r5
    af8c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    af90:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    af94:	1f300152 	svcne	0x00300152
    af98:	30015301 	andcc	r5, r1, r1, lsl #6
    af9c:	00001e00 	andeq	r1, r0, r0, lsl #28
    afa0:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    afa4:	011f0000 	tsteq	pc, r0
    afa8:	007d0251 	rsbseq	r0, sp, r1, asr r2
    afac:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    afb0:	1f060091 	svcne	0x00060091
    afb4:	30015301 	andcc	r5, r1, r1, lsl #6
    afb8:	8e220000 	cdphi	0, 2, cr0, cr2, cr0, {0}
    afbc:	01000026 	tsteq	r0, r6, lsr #32
    afc0:	011101a1 	tsteq	r1, r1, lsr #3
	...
    afcc:	0000a616 	andeq	sl, r0, r6, lsl r6
    afd0:	0015e201 	andseq	lr, r5, r1, lsl #4
    afd4:	24981b00 	ldrcs	r1, [r8], #2816	; 0xb00
    afd8:	a1010000 	mrsge	r0, (UNDEF: 1)
    afdc:	00b33b01 	adcseq	r3, r3, r1, lsl #22
    afe0:	a63a0000 	ldrtge	r0, [sl], -r0
    afe4:	a6360000 	ldrtge	r0, [r6], -r0
    afe8:	271b0000 	ldrcs	r0, [fp, -r0]
    afec:	01000024 	tsteq	r0, r4, lsr #32
    aff0:	233901a2 	teqcs	r9, #-2147483608	; 0x80000028
    aff4:	5c000001 	stcpl	0, cr0, [r0], {1}
    aff8:	580000a6 	stmdapl	r0, {r1, r2, r5, r7}
    affc:	1b0000a6 	blne	b29c <__HEAP_SIZE+0xa29c>
    b000:	00002652 	andeq	r2, r0, r2, asr r6
    b004:	3901a301 	stmdbcc	r1, {r0, r8, r9, sp, pc}
    b008:	00000106 	andeq	r0, r0, r6, lsl #2
    b00c:	0000a67e 	andeq	sl, r0, lr, ror r6
    b010:	0000a67a 	andeq	sl, r0, sl, ror r6
    b014:	0028531b 	eoreq	r5, r8, fp, lsl r3
    b018:	01a40100 			; <UNDEFINED> instruction: 0x01a40100
    b01c:	00009c35 	andeq	r9, r0, r5, lsr ip
    b020:	00a6a000 	adceq	sl, r6, r0
    b024:	00a69c00 	adceq	r9, r6, r0, lsl #24
    b028:	243b2a00 	ldrtcs	r2, [fp], #-2560	; 0xfffff600
    b02c:	a5010000 	strge	r0, [r1, #-0]
    b030:	05d34001 	ldrbeq	r4, [r3, #1]
    b034:	91020000 	mrsls	r0, (UNDEF: 2)
    b038:	25f62a00 	ldrbcs	r2, [r6, #2560]!	; 0xa00
    b03c:	a6010000 	strge	r0, [r1], -r0
    b040:	06583201 	ldrbeq	r3, [r8], -r1, lsl #4
    b044:	91020000 	mrsls	r0, (UNDEF: 2)
    b048:	00002104 	andeq	r2, r0, r4, lsl #2
    b04c:	0a650000 	beq	194b054 <__RAM_SIZE+0x184b054>
    b050:	001e0000 	andseq	r0, lr, r0
    b054:	54000000 	strpl	r0, [r0], #-0
    b058:	1f000019 	svcne	0x00000019
    b05c:	74025001 	strvc	r5, [r2], #-1
    b060:	1a000004 	bne	b078 <__HEAP_SIZE+0xa078>
    b064:	0025ae01 	eoreq	sl, r5, r1, lsl #28
    b068:	01720100 	cmneq	r2, r0, lsl #2
    b06c:	05540117 	ldrbeq	r0, [r4, #-279]	; 0xfffffee9
	...
    b078:	a6be0000 	ldrtge	r0, [lr], r0
    b07c:	c0010000 	andgt	r0, r1, r0
    b080:	1b000016 	blne	b0e0 <__HEAP_SIZE+0xa0e0>
    b084:	00002498 	muleq	r0, r8, r4
    b088:	3e017201 	cdpcc	2, 0, cr7, cr1, cr1, {0}
    b08c:	000000b3 	strheq	r0, [r0], -r3
    b090:	0000a6fa 	strdeq	sl, [r0], -sl	; <UNPREDICTABLE>
    b094:	0000a6f6 	strdeq	sl, [r0], -r6
    b098:	0024271b 	eoreq	r2, r4, fp, lsl r7
    b09c:	01730100 	cmneq	r3, r0, lsl #2
    b0a0:	0001233c 	andeq	r2, r1, ip, lsr r3
    b0a4:	00a71f00 	adceq	r1, r7, r0, lsl #30
    b0a8:	00a71b00 	adceq	r1, r7, r0, lsl #22
    b0ac:	26521b00 	ldrbcs	r1, [r2], -r0, lsl #22
    b0b0:	74010000 	strvc	r0, [r1], #-0
    b0b4:	01063c01 	tsteq	r6, r1, lsl #24
    b0b8:	a7440000 	strbge	r0, [r4, -r0]
    b0bc:	a7400000 	strbge	r0, [r0, -r0]
    b0c0:	531b0000 	tstpl	fp, #0
    b0c4:	01000028 	tsteq	r0, r8, lsr #32
    b0c8:	9c380175 	ldflss	f0, [r8], #-468	; 0xfffffe2c
    b0cc:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    b0d0:	650000a7 	strvs	r0, [r0, #-167]	; 0xffffff59
    b0d4:	2a0000a7 	bcs	b378 <__HEAP_SIZE+0xa378>
    b0d8:	0000243b 	andeq	r2, r0, fp, lsr r4
    b0dc:	43017601 	movwmi	r7, #5633	; 0x1601
    b0e0:	000005d3 	ldrdeq	r0, [r0], -r3
    b0e4:	2a009102 	bcs	2f4f4 <__HEAP_SIZE+0x2e4f4>
    b0e8:	00002970 	andeq	r2, r0, r0, ror r9
    b0ec:	3b017701 	blcc	68cf8 <__HEAP_SIZE+0x67cf8>
    b0f0:	00001170 	andeq	r1, r0, r0, ror r1
    b0f4:	1d049102 	stfned	f1, [r4, #-8]
    b0f8:	000025f6 	strdeq	r2, [r0], -r6
    b0fc:	17017901 	strne	r7, [r1, -r1, lsl #18]
    b100:	00000658 	andeq	r0, r0, r8, asr r6
    b104:	0000a78c 	andeq	sl, r0, ip, lsl #15
    b108:	0000a78a 	andeq	sl, r0, sl, lsl #15
    b10c:	0000001e 	andeq	r0, r0, lr, lsl r0
    b110:	00153900 	andseq	r3, r5, r0, lsl #18
    b114:	50011f00 	andpl	r1, r1, r0, lsl #30
    b118:	5001f303 	andpl	pc, r1, r3, lsl #6
    b11c:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    b120:	1f5101f3 	svcne	0x005101f3
    b124:	f3035201 	vhsub.u8	d5, d3, d1
    b128:	011f5201 	tsteq	pc, r1, lsl #4
    b12c:	01f30353 	mvnseq	r0, r3, asr r3
    b130:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    b134:	00750200 	rsbseq	r0, r5, r0, lsl #4
    b138:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    b13c:	00007402 	andeq	r7, r0, r2, lsl #8
    b140:	1d011a00 	vstrne	s2, [r1, #-0]
    b144:	01000027 	tsteq	r0, r7, lsr #32
    b148:	01170150 	tsteq	r7, r0, asr r1
    b14c:	00000554 	andeq	r0, r0, r4, asr r5
	...
    b158:	0000a79f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    b15c:	00179f01 	andseq	r9, r7, r1, lsl #30
    b160:	24981b00 	ldrcs	r1, [r8], #2816	; 0xb00
    b164:	50010000 	andpl	r0, r1, r0
    b168:	00b33801 	adcseq	r3, r3, r1, lsl #16
    b16c:	a7db0000 	ldrbge	r0, [fp, r0]
    b170:	a7d70000 	ldrbge	r0, [r7, r0]
    b174:	271b0000 	ldrcs	r0, [fp, -r0]
    b178:	01000024 	tsteq	r0, r4, lsr #32
    b17c:	23360151 	teqcs	r6, #1073741844	; 0x40000014
    b180:	fd000001 	stc2	0, cr0, [r0, #-4]
    b184:	f90000a7 			; <UNDEFINED> instruction: 0xf90000a7
    b188:	1b0000a7 	blne	b42c <__HEAP_SIZE+0xa42c>
    b18c:	00002652 	andeq	r2, r0, r2, asr r6
    b190:	36015201 	strcc	r5, [r1], -r1, lsl #4
    b194:	00000106 	andeq	r0, r0, r6, lsl #2
    b198:	0000a81f 	andeq	sl, r0, pc, lsl r8
    b19c:	0000a81b 	andeq	sl, r0, fp, lsl r8
    b1a0:	0028531b 	eoreq	r5, r8, fp, lsl r3
    b1a4:	01530100 	cmpeq	r3, r0, lsl #2
    b1a8:	00009c32 	andeq	r9, r0, r2, lsr ip
    b1ac:	00a84100 	adceq	r4, r8, r0, lsl #2
    b1b0:	00a83d00 	adceq	r3, r8, r0, lsl #26
    b1b4:	243b2a00 	ldrtcs	r2, [fp], #-2560	; 0xfffff600
    b1b8:	54010000 	strpl	r0, [r1], #-0
    b1bc:	05d33d01 	ldrbeq	r3, [r3, #3329]	; 0xd01
    b1c0:	91020000 	mrsls	r0, (UNDEF: 2)
    b1c4:	25f61d00 	ldrbcs	r1, [r6, #3328]!	; 0xd00
    b1c8:	56010000 	strpl	r0, [r1], -r0
    b1cc:	06581701 	ldrbeq	r1, [r8], -r1, lsl #14
    b1d0:	a8630000 	stmdage	r3!, {}^	; <UNPREDICTABLE>
    b1d4:	a85f0000 	ldmdage	pc, {}^	; <UNPREDICTABLE>
    b1d8:	00240000 	eoreq	r0, r4, r0
    b1dc:	63000000 	movwvs	r0, #0
    b1e0:	6d000019 	stcvs	0, cr0, [r0, #-100]	; 0xffffff9c
    b1e4:	1f000017 	svcne	0x00000017
    b1e8:	08025001 	stmdaeq	r2, {r0, ip, lr}
    b1ec:	001e0028 	andseq	r0, lr, r8, lsr #32
    b1f0:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    b1f4:	1f000015 	svcne	0x00000015
    b1f8:	74025001 	strvc	r5, [r2], #-1
    b1fc:	51011f00 	tstpl	r1, r0, lsl #30
    b200:	1f007802 	svcne	0x00007802
    b204:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    b208:	53011f00 	movwpl	r1, #7936	; 0x1f00
    b20c:	1f007502 	svcne	0x00007502
    b210:	03007d02 	movweq	r7, #3330	; 0xd02
    b214:	1f060091 	svcne	0x00060091
    b218:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    b21c:	00000076 	andeq	r0, r0, r6, ror r0
    b220:	1703012c 	strne	r0, [r3, -ip, lsr #2]
    b224:	ed010000 	stc	0, cr0, [r1, #-0]
    b228:	00fa0110 	rscseq	r0, sl, r0, lsl r1
    b22c:	310c0000 	mrscc	r0, (UNDEF: 12)
    b230:	31681000 	cmncc	r8, r0
    b234:	a8811000 	stmge	r1, {ip}
    b238:	62010000 	andvs	r0, r1, #0
    b23c:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    b240:	00001a19 	andeq	r1, r0, r9, lsl sl
    b244:	fa14ef01 	blx	546e50 <__RAM_SIZE+0x446e50>
    b248:	bf000000 	svclt	0x00000000
    b24c:	b90000a8 	stmdblt	r0, {r3, r5, r7}
    b250:	230000a8 	movwcs	r0, #168	; 0xa8
    b254:	1000311a 	andne	r3, r0, sl, lsl r1
    b258:	1000314c 	andne	r3, r0, ip, asr #2
    b25c:	00001858 	andeq	r1, r0, r8, asr r8
    b260:	001ee11c 	andseq	lr, lr, ip, lsl r1
    b264:	01220100 			; <UNDEFINED> instruction: 0x01220100
    b268:	00186224 	andseq	r6, r8, r4, lsr #4
    b26c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b270:	001b461c 	andseq	r4, fp, ip, lsl r6
    b274:	01230100 			; <UNDEFINED> instruction: 0x01230100
    b278:	00053623 	andeq	r3, r5, r3, lsr #12
    b27c:	70910200 	addsvc	r0, r1, r0, lsl #4
    b280:	0020a91c 	eoreq	sl, r0, ip, lsl r9
    b284:	01240100 			; <UNDEFINED> instruction: 0x01240100
    b288:	0000292c 	andeq	r2, r0, ip, lsr #18
    b28c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b290:	00312a24 	eorseq	r2, r1, r4, lsr #20
    b294:	00197110 	andseq	r7, r9, r0, lsl r1
    b298:	00182f00 	andseq	r2, r8, r0, lsl #30
    b29c:	50011f00 	andpl	r1, r1, r0, lsl #30
    b2a0:	1f6c9102 	svcne	0x006c9102
    b2a4:	91025101 	tstls	r2, r1, lsl #2
    b2a8:	52011f70 	andpl	r1, r1, #112, 30	; 0x1c0
    b2ac:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b2b0:	0031421e 	eorseq	r4, r1, lr, lsl r2
    b2b4:	00198010 	andseq	r8, r9, r0, lsl r0
    b2b8:	50011f00 	andpl	r1, r1, r0, lsl #30
    b2bc:	30950305 	addscc	r0, r5, r5, lsl #6
    b2c0:	011f1000 	tsteq	pc, r0
    b2c4:	98030551 	stmdals	r3, {r0, r4, r6, r8, sl}
    b2c8:	1f10005b 	svcne	0x0010005b
    b2cc:	74025301 	strvc	r5, [r2], #-769	; 0xfffffcff
    b2d0:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    b2d4:	00340100 	eorseq	r0, r4, r0, lsl #2
    b2d8:	31142100 	tstcc	r4, r0, lsl #2
    b2dc:	0a651000 	beq	194f2e4 <__RAM_SIZE+0x184f2e4>
    b2e0:	07000000 	streq	r0, [r0, -r0]
    b2e4:	0002dc04 	andeq	sp, r2, r4, lsl #24
    b2e8:	01012e00 	tsteq	r1, r0, lsl #28
    b2ec:	00000df2 	strdeq	r0, [r0], -r2
    b2f0:	00000df2 	strdeq	r0, [r0], -r2
    b2f4:	0c02ae0a 	stceq	14, cr10, [r2], {10}
    b2f8:	5101012e 	tstpl	r1, lr, lsr #2
    b2fc:	5100000b 	tstpl	r0, fp
    b300:	0a00000b 	beq	b334 <__HEAP_SIZE+0xa334>
    b304:	2f0c0551 	svccs	0x000c0551
    b308:	0bd30101 	bleq	ff4cb714 <__StackTop+0xc73cb714>
    b30c:	0bd30000 	bleq	ff4cb314 <__StackTop+0xc73cb314>
    b310:	71060000 	mrsvc	r0, (UNDEF: 6)
    b314:	01012f0d 	tsteq	r1, sp, lsl #30
    b318:	00000a43 	andeq	r0, r0, r3, asr #20
    b31c:	00000a43 	andeq	r0, r0, r3, asr #20
    b320:	2e0d7206 	cdpcs	2, 0, cr7, cr13, cr6, {0}
    b324:	12020101 	andne	r0, r2, #1073741824	; 0x40000000
    b328:	12020000 	andne	r0, r2, #0
    b32c:	4f0a0000 	svcmi	0x000a0000
    b330:	012e1306 			; <UNDEFINED> instruction: 0x012e1306
    b334:	00099b01 	andeq	r9, r9, r1, lsl #22
    b338:	00099b00 	andeq	r9, r9, r0, lsl #22
    b33c:	01b90800 			; <UNDEFINED> instruction: 0x01b90800
    b340:	01012e06 	tsteq	r1, r6, lsl #28
    b344:	00000ab7 			; <UNDEFINED> instruction: 0x00000ab7
    b348:	00000ab7 			; <UNDEFINED> instruction: 0x00000ab7
    b34c:	0c03910a 	stfeqd	f1, [r3], {10}
    b350:	1c01012e 	stfnes	f0, [r1], {46}	; 0x2e
    b354:	1c00000a 	stcne	0, cr0, [r0], {10}
    b358:	0800000a 	stmdaeq	r0, {r1, r3}
    b35c:	2f0d01f7 	svccs	0x000d01f7
    b360:	11c10101 	bicne	r0, r1, r1, lsl #2
    b364:	11c10000 	bicne	r0, r1, r0
    b368:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
    b36c:	01012e06 	tsteq	r1, r6, lsl #28
    b370:	00000a37 	andeq	r0, r0, r7, lsr sl
    b374:	00000a37 	andeq	r0, r0, r7, lsr sl
    b378:	0601d108 	streq	sp, [r1], -r8, lsl #2
    b37c:	9101012e 	tstls	r1, lr, lsr #2
    b380:	9100001c 	tstls	r0, ip, lsl r0
    b384:	0900001c 	stmdbeq	r0, {r2, r3, r4}
    b388:	2e0c06a4 	cfmadd32cs	mvax5, mvfx0, mvfx12, mvfx4
    b38c:	0d1c0101 	ldfeqs	f0, [ip, #-4]
    b390:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    b394:	5b090000 	blpl	24b39c <__RAM_SIZE+0x14b39c>
    b398:	012e0606 			; <UNDEFINED> instruction: 0x012e0606
    b39c:	00113301 	andseq	r3, r1, r1, lsl #6
    b3a0:	00113300 	andseq	r3, r1, r0, lsl #6
    b3a4:	06f60a00 	ldrbteq	r0, [r6], r0, lsl #20
    b3a8:	01012e06 	tsteq	r1, r6, lsl #28
    b3ac:	00001177 	andeq	r1, r0, r7, ror r1
    b3b0:	00001177 	andeq	r1, r0, r7, ror r1
    b3b4:	0c069309 	stceq	3, cr9, [r6], {9}
    b3b8:	7e01012f 	adfvcsp	f0, f1, #10.0
    b3bc:	7e00000a 	cdpvc	0, 0, cr0, cr0, cr10, {0}
    b3c0:	0600000a 	streq	r0, [r0], -sl
    b3c4:	012e0d6f 			; <UNDEFINED> instruction: 0x012e0d6f
    b3c8:	0014ff01 	andseq	pc, r4, r1, lsl #30
    b3cc:	0014ff00 	andseq	pc, r4, r0, lsl #30
    b3d0:	0e140900 	vnmlseq.f16	s0, s8, s0	; <UNPREDICTABLE>
    b3d4:	01012e0c 	tsteq	r1, ip, lsl #28
    b3d8:	00000961 	andeq	r0, r0, r1, ror #18
    b3dc:	00000961 	andeq	r0, r0, r1, ror #18
    b3e0:	0601c408 	streq	ip, [r1], -r8, lsl #8
    b3e4:	f801012f 			; <UNDEFINED> instruction: 0xf801012f
    b3e8:	f800000c 			; <UNDEFINED> instruction: 0xf800000c
    b3ec:	0c00000c 	stceq	0, cr0, [r0], {12}
    b3f0:	012e08b5 			; <UNDEFINED> instruction: 0x012e08b5
    b3f4:	00176c01 	andseq	r6, r7, r1, lsl #24
    b3f8:	00176c00 	andseq	r6, r7, r0, lsl #24
    b3fc:	05750b00 	ldrbeq	r0, [r5, #-2816]!	; 0xfffff500
    b400:	01012e0a 	tsteq	r1, sl, lsl #28
    b404:	00001745 	andeq	r1, r0, r5, asr #14
    b408:	00001745 	andeq	r1, r0, r5, asr #14
    b40c:	1201fd09 	andne	pc, r1, #576	; 0x240
    b410:	00061500 	andeq	r1, r6, r0, lsl #10
    b414:	80000200 	andhi	r0, r0, r0, lsl #4
    b418:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    b41c:	00018901 	andeq	r8, r1, r1, lsl #18
    b420:	2a900c00 	bcs	fe40e428 <__StackTop+0xc630e428>
    b424:	03850000 	orreq	r0, r5, #0
    b428:	0b080000 	bleq	20b430 <__RAM_SIZE+0x10b430>
	...
    b434:	7b9c0000 	blvc	fe70b43c <__StackTop+0xc660b43c>
    b438:	04020000 	streq	r0, [r2], #-0
    b43c:	02000005 	andeq	r0, r0, #5
    b440:	003a17d1 	ldrsbteq	r1, [sl], -r1
    b444:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    b448:	04000000 	streq	r0, [r0], #-0
    b44c:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    b450:	04050000 	streq	r0, [r5], #-0
    b454:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    b458:	05080400 	streq	r0, [r8, #-1024]	; 0xfffffc00
    b45c:	00000127 	andeq	r0, r0, r7, lsr #2
    b460:	63040804 	movwvs	r0, #18436	; 0x4804
    b464:	04000000 	streq	r0, [r0], #-0
    b468:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    b46c:	7f020000 	svcvc	0x00020000
    b470:	03000001 	movweq	r0, #1
    b474:	0069182b 	rsbeq	r1, r9, fp, lsr #16
    b478:	01040000 	mrseq	r0, (UNDEF: 4)
    b47c:	00027108 	andeq	r7, r2, r8, lsl #2
    b480:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    b484:	00000032 	andeq	r0, r0, r2, lsr r0
    b488:	1a070204 	bne	1cbca0 <__RAM_SIZE+0xcbca0>
    b48c:	04000003 	streq	r0, [r0], #-3
    b490:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    b494:	6f020000 	svcvs	0x00020000
    b498:	03000000 	movweq	r0, #0
    b49c:	0091194f 	addseq	r1, r1, pc, asr #18
    b4a0:	04040000 	streq	r0, [r4], #-0
    b4a4:	0002c207 	andeq	ip, r2, r7, lsl #4
    b4a8:	07080400 	streq	r0, [r8, -r0, lsl #8]
    b4ac:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    b4b0:	01040406 	tsteq	r4, r6, lsl #8
    b4b4:	00027a08 	andeq	r7, r2, r8, lsl #20
    b4b8:	01810200 	orreq	r0, r1, r0, lsl #4
    b4bc:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    b4c0:	00005d13 	andeq	r5, r0, r3, lsl sp
    b4c4:	00710200 	rsbseq	r0, r1, r0, lsl #4
    b4c8:	30040000 	andcc	r0, r4, r0
    b4cc:	00008514 	andeq	r8, r0, r4, lsl r5
    b4d0:	09200200 	stmdbeq	r0!, {r9}
    b4d4:	51050000 	mrspl	r0, (UNDEF: 5)
    b4d8:	0000b41a 	andeq	fp, r0, sl, lsl r4
    b4dc:	a8040700 	stmdage	r4, {r8, r9, sl}
    b4e0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b4e4:	000029c8 	andeq	r2, r0, r8, asr #19
    b4e8:	1094061c 	addsne	r0, r4, ip, lsl r6
    b4ec:	00000149 	andeq	r0, r0, r9, asr #2
    b4f0:	002b7509 	eoreq	r7, fp, r9, lsl #10
    b4f4:	0c960600 	ldceq	6, cr0, [r6], {0}
    b4f8:	00000029 	andeq	r0, r0, r9, lsr #32
    b4fc:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
    b500:	00002bc1 	andeq	r2, r0, r1, asr #23
    b504:	290c9706 	stmdbcs	ip, {r1, r2, r8, r9, sl, ip, pc}
    b508:	02000000 	andeq	r0, r0, #0
    b50c:	70090423 	andvc	r0, r9, r3, lsr #8
    b510:	0600002a 	streq	r0, [r0], -sl, lsr #32
    b514:	00290c98 	mlaeq	r9, r8, ip, r0
    b518:	23020000 	movwcs	r0, #8192	; 0x2000
    b51c:	2a1f0908 	bcs	7cd944 <__RAM_SIZE+0x6cd944>
    b520:	99060000 	stmdbls	r6, {}	; <UNPREDICTABLE>
    b524:	0000290c 	andeq	r2, r0, ip, lsl #18
    b528:	0c230200 	sfmeq	f0, 4, [r3], #-0
    b52c:	0029d309 	eoreq	sp, r9, r9, lsl #6
    b530:	0c9a0600 	ldceq	6, cr0, [sl], {0}
    b534:	00000029 	andeq	r0, r0, r9, lsr #32
    b538:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
    b53c:	00002b56 	andeq	r2, r0, r6, asr fp
    b540:	290c9b06 	stmdbcs	ip, {r1, r2, r8, r9, fp, ip, pc}
    b544:	02000000 	andeq	r0, r0, #0
    b548:	0b091423 	bleq	2505dc <__RAM_SIZE+0x1505dc>
    b54c:	0600002c 	streq	r0, [r0], -ip, lsr #32
    b550:	00290c9c 	mlaeq	r9, ip, ip, r0
    b554:	23020000 	movwcs	r0, #8192	; 0x2000
    b558:	f2020018 	vqadd.s8	d0, d2, d8
    b55c:	06000029 	streq	r0, [r0], -r9, lsr #32
    b560:	00d2039d 	smullseq	r0, r2, sp, r3
    b564:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
    b568:	66000000 	strvs	r0, [r0], -r0
    b56c:	0b000001 	bleq	b578 <__HEAP_SIZE+0xa578>
    b570:	0000003a 	andeq	r0, r0, sl, lsr r0
    b574:	0c007fff 	stceq	15, cr7, [r0], {255}	; 0xff
    b578:	00000025 	andeq	r0, r0, r5, lsr #32
    b57c:	55145d01 	ldrpl	r5, [r4, #-3329]	; 0xfffff2ff
    b580:	01000001 	tsteq	r0, r1
    b584:	2a540801 	bcs	150d590 <__RAM_SIZE+0x140d590>
    b588:	01080000 	mrseq	r0, (UNDEF: 8)
    b58c:	01a01064 	rrxeq	r1, r4
    b590:	fe090000 	cdp2	0, 0, cr0, cr9, cr0, {0}
    b594:	01000029 	tsteq	r0, r9, lsr #32
    b598:	01a01b66 	roreq	r1, r6, #22
    b59c:	23020000 	movwcs	r0, #8192	; 0x2000
    b5a0:	2c240900 			; <UNDEFINED> instruction: 0x2c240900
    b5a4:	67010000 	strvs	r0, [r1, -r0]
    b5a8:	0000290c 	andeq	r2, r0, ip, lsl #18
    b5ac:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b5b0:	74040700 	strvc	r0, [r4], #-1792	; 0xfffff900
    b5b4:	02000001 	andeq	r0, r0, #1
    b5b8:	00002b4a 	andeq	r2, r0, sl, asr #22
    b5bc:	74036801 	strvc	r6, [r3], #-2049	; 0xfffff7ff
    b5c0:	0d000001 	stceq	0, cr0, [r0, #-4]
    b5c4:	00002b90 	muleq	r0, r0, fp
    b5c8:	35159e01 	ldrcc	r9, [r5, #-3585]	; 0xfffff1ff
    b5cc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b5d0:	002c2f0e 	eoreq	r2, ip, lr, lsl #30
    b5d4:	24a10100 	strtcs	r0, [r1], #256	; 0x100
    b5d8:	000001a6 	andeq	r0, r0, r6, lsr #3
    b5dc:	8cf80305 	ldclhi	3, cr0, [r8], #20
    b5e0:	330e3800 	movwcc	r3, #59392	; 0xe800
    b5e4:	0100002a 	tsteq	r0, sl, lsr #32
    b5e8:	01e326a2 	mvneq	r2, r2, lsr #13
    b5ec:	03050000 	movweq	r0, #20480	; 0x5000
    b5f0:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
    b5f4:	01a60407 			; <UNDEFINED> instruction: 0x01a60407
    b5f8:	ad0e0000 	stcge	0, cr0, [lr, #-0]
    b5fc:	0100002b 	tsteq	r0, fp, lsr #32
    b600:	00291fa6 	eoreq	r1, r9, r6, lsr #31
    b604:	03050000 	movweq	r0, #20480	; 0x5000
    b608:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
    b60c:	0029d30e 	eoreq	sp, r9, lr, lsl #6
    b610:	1fa70100 	svcne	0x00a70100
    b614:	00000029 	andeq	r0, r0, r9, lsr #32
    b618:	8cec0305 	stclhi	3, cr0, [ip], #20
    b61c:	560e3800 	strpl	r3, [lr], -r0, lsl #16
    b620:	0100002b 	tsteq	r0, fp, lsr #32
    b624:	00291fa8 	eoreq	r1, r9, r8, lsr #31
    b628:	03050000 	movweq	r0, #20480	; 0x5000
    b62c:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}
    b630:	002c0b0e 	eoreq	r0, ip, lr, lsl #22
    b634:	1fa90100 	svcne	0x00a90100
    b638:	00000029 	andeq	r0, r0, r9, lsr #32
    b63c:	8cf40305 	ldclhi	3, cr0, [r4], #20
    b640:	010f3800 	tsteq	pc, r0, lsl #16
    b644:	00002b0d 	andeq	r2, r0, sp, lsl #22
    b648:	06026901 	streq	r6, [r2], -r1, lsl #18
    b64c:	00000001 	andeq	r0, r0, r1
    b650:	00000000 	andeq	r0, r0, r0
    b654:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b658:	76011001 	strvc	r1, [r1], -r1
    b65c:	0100002c 	tsteq	r0, ip, lsr #32
    b660:	01060230 	tsteq	r6, r0, lsr r2
	...
    b66c:	0000a8eb 	andeq	sl, r0, fp, ror #17
    b670:	0002f201 	andeq	pc, r2, r1, lsl #4
    b674:	29c71100 	stmibcs	r7, {r8, ip}^
    b678:	30010000 	andcc	r0, r1, r0
    b67c:	02f22702 	rscseq	r2, r2, #524288	; 0x80000
    b680:	a90f0000 	stmdbge	pc, {}	; <UNPREDICTABLE>
    b684:	a90b0000 	stmdbge	fp, {}	; <UNPREDICTABLE>
    b688:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
    b68c:	0100002a 	tsteq	r0, sl, lsr #32
    b690:	e3130232 	tst	r3, #536870915	; 0x20000003
    b694:	31000001 	tstcc	r0, r1
    b698:	2d0000a9 	stccs	0, cr0, [r0, #-676]	; 0xfffffd5c
    b69c:	120000a9 	andne	r0, r0, #169	; 0xa9
    b6a0:	00002c36 	andeq	r2, r0, r6, lsr ip
    b6a4:	0c023301 	stceq	3, cr3, [r2], {1}
    b6a8:	00000029 	andeq	r0, r0, r9, lsr #32
    b6ac:	0000a953 	andeq	sl, r0, r3, asr r9
    b6b0:	0000a94f 	andeq	sl, r0, pc, asr #18
    b6b4:	002b2112 	eoreq	r2, fp, r2, lsl r1
    b6b8:	02330100 	eorseq	r0, r3, #0, 2
    b6bc:	00002919 	andeq	r2, r0, r9, lsl r9
    b6c0:	00a97600 	adceq	r7, r9, r0, lsl #12
    b6c4:	00a97200 	adceq	r7, r9, r0, lsl #4
    b6c8:	2a161200 	bcs	58fed0 <__RAM_SIZE+0x48fed0>
    b6cc:	33010000 	movwcc	r0, #4096	; 0x1000
    b6d0:	00292702 	eoreq	r2, r9, r2, lsl #14
    b6d4:	a9990000 	ldmibge	r9, {}	; <UNPREDICTABLE>
    b6d8:	a9950000 	ldmibge	r5, {}	; <UNPREDICTABLE>
    b6dc:	00130000 	andseq	r0, r3, r0
    b6e0:	d1000000 	mrsle	r0, (UNDEF: 0)
    b6e4:	13000005 	movwne	r0, #5
    b6e8:	00000000 	andeq	r0, r0, r0
    b6ec:	000005e0 	andeq	r0, r0, r0, ror #11
    b6f0:	00000013 	andeq	r0, r0, r3, lsl r0
    b6f4:	0005ef00 	andeq	lr, r5, r0, lsl #30
    b6f8:	00001300 	andeq	r1, r0, r0, lsl #6
    b6fc:	05fd0000 	ldrbeq	r0, [sp, #0]!
    b700:	07000000 	streq	r0, [r0, -r0]
    b704:	00014904 	andeq	r4, r1, r4, lsl #18
    b708:	2a391400 	bcs	e50710 <__RAM_SIZE+0xd50710>
    b70c:	ec010000 	stc	0, cr0, [r1], {-0}
    b710:	c0010d01 	andgt	r0, r1, r1, lsl #26
    b714:	24100031 	ldrcs	r0, [r0], #-49	; 0xffffffcf
    b718:	b9100032 	ldmdblt	r0, {r1, r4, r5}
    b71c:	010000a9 	smlatbeq	r0, r9, r0, r0
    b720:	00000353 	andeq	r0, r0, r3, asr r3
    b724:	002bec11 	eoreq	lr, fp, r1, lsl ip
    b728:	01ec0100 	mvneq	r0, r0, lsl #2
    b72c:	0001e337 	andeq	lr, r1, r7, lsr r3
    b730:	00aa0500 	adceq	r0, sl, r0, lsl #10
    b734:	00a9fd00 	adceq	pc, r9, r0, lsl #26
    b738:	09d01200 	ldmibeq	r0, {r9, ip}^
    b73c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    b740:	01e31301 	mvneq	r1, r1, lsl #6
    b744:	aa420000 	bge	108b74c <__RAM_SIZE+0xf8b74c>
    b748:	aa3c0000 	bge	f0b750 <__RAM_SIZE+0xe0b750>
    b74c:	70150000 	andsvc	r0, r5, r0
    b750:	01006375 	tsteq	r0, r5, ror r3
    b754:	cc0f01ef 	stfgts	f0, [pc], {239}	; 0xef
    b758:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    b75c:	700000aa 	andvc	r0, r0, sl, lsr #1
    b760:	000000aa 	andeq	r0, r0, sl, lsr #1
    b764:	002be016 	eoreq	lr, fp, r6, lsl r0
    b768:	01bc0100 			; <UNDEFINED> instruction: 0x01bc0100
    b76c:	3168010d 	cmncc	r8, sp, lsl #2
    b770:	31c01000 	biccc	r1, r0, r0
    b774:	7d021000 	stcvc	0, cr1, [r2, #-0]
    b778:	03c20100 	biceq	r0, r2, #0, 2
    b77c:	43120000 	tstmi	r2, #0
    b780:	0100002c 	tsteq	r0, ip, lsr #32
    b784:	e31301be 	tst	r3, #-2147483601	; 0x8000002f
    b788:	ae000001 	cdpge	0, 0, cr0, cr0, cr1, {0}
    b78c:	ac0000aa 	stcge	0, cr0, [r0], {170}	; 0xaa
    b790:	120000aa 	andne	r0, r0, #170	; 0xaa
    b794:	00002a61 	andeq	r2, r0, r1, ror #20
    b798:	1b01bf01 	blne	7b3a4 <__HEAP_SIZE+0x7a3a4>
    b79c:	000000b4 	strheq	r0, [r0], -r4
    b7a0:	0000aac5 	andeq	sl, r0, r5, asr #21
    b7a4:	0000aac1 	andeq	sl, r0, r1, asr #21
    b7a8:	002ac412 	eoreq	ip, sl, r2, lsl r4
    b7ac:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
    b7b0:	0000b42b 	andeq	fp, r0, fp, lsr #8
    b7b4:	00aae700 	adceq	lr, sl, r0, lsl #14
    b7b8:	00aae300 	adceq	lr, sl, r0, lsl #6
    b7bc:	2bfc1200 	blcs	fff0ffc4 <__StackTop+0xc7e0ffc4>
    b7c0:	c0010000 	andgt	r0, r1, r0
    b7c4:	00290c01 	eoreq	r0, r9, r1, lsl #24
    b7c8:	ab0c0000 	blge	30b7d0 <__RAM_SIZE+0x20b7d0>
    b7cc:	ab060000 	blge	18b7d4 <__RAM_SIZE+0x8b7d4>
    b7d0:	17000000 	strne	r0, [r0, -r0]
    b7d4:	002ba001 	eoreq	sl, fp, r1
    b7d8:	01a90100 			; <UNDEFINED> instruction: 0x01a90100
    b7dc:	009f0108 	addseq	r0, pc, r8, lsl #2
	...
    b7e8:	ab3b0000 	blge	ecb7f0 <__RAM_SIZE+0xdcb7f0>
    b7ec:	50010000 	andpl	r0, r1, r0
    b7f0:	11000004 	tstne	r0, r4
    b7f4:	00002c3e 	andeq	r2, r0, lr, lsr ip
    b7f8:	1d01a901 	vstrne.16	s20, [r1, #-2]	; <UNPREDICTABLE>
    b7fc:	00000029 	andeq	r0, r0, r9, lsr #32
    b800:	0000ab63 	andeq	sl, r0, r3, ror #22
    b804:	0000ab5b 	andeq	sl, r0, fp, asr fp
    b808:	002b2411 	eoreq	r2, fp, r1, lsl r4
    b80c:	01aa0100 			; <UNDEFINED> instruction: 0x01aa0100
    b810:	0000291d 	andeq	r2, r0, sp, lsl r9
    b814:	00aba000 	adceq	sl, fp, r0
    b818:	00ab9a00 	adceq	r9, fp, r0, lsl #20
    b81c:	76701500 	ldrbtvc	r1, [r0], -r0, lsl #10
    b820:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    b824:	00009f0c 	andeq	r9, r0, ip, lsl #30
    b828:	00abd400 	adceq	sp, fp, r0, lsl #8
    b82c:	00abcc00 	adceq	ip, fp, r0, lsl #24
    b830:	00001800 	andeq	r1, r0, r0, lsl #16
    b834:	051e0000 	ldreq	r0, [lr, #-0]
    b838:	04340000 	ldrteq	r0, [r4], #-0
    b83c:	01190000 	tsteq	r9, r0
    b840:	00740250 	rsbseq	r0, r4, r0, asr r2
    b844:	00001a00 	andeq	r1, r0, r0, lsl #20
    b848:	060b0000 	streq	r0, [fp], -r0
    b84c:	01190000 	tsteq	r9, r0
    b850:	00750250 	rsbseq	r0, r5, r0, asr r2
    b854:	01510119 	cmpeq	r1, r9, lsl r1
    b858:	52011930 	andpl	r1, r1, #48, 18	; 0xc0000
    b85c:	00007402 	andeq	r7, r0, r2, lsl #8
    b860:	60010f00 	andvs	r0, r1, r0, lsl #30
    b864:	0100002c 	tsteq	r0, ip, lsr #32
    b868:	010601a3 	smlatbeq	r6, r3, r1, r0
	...
    b874:	01007d02 	tsteq	r0, r2, lsl #26
    b878:	2b2a011b 	blcs	a8bcec <__RAM_SIZE+0x98bcec>
    b87c:	9d010000 	stcls	0, cr0, [r1, #-0]
    b880:	29010801 	stmdbcs	r1, {r0, fp}
	...
    b88c:	02000000 	andeq	r0, r0, #0
    b890:	1b01007d 	blne	4ba8c <__HEAP_SIZE+0x4aa8c>
    b894:	002ae001 	eoreq	lr, sl, r1
    b898:	01970100 	orrseq	r0, r7, r0, lsl #2
    b89c:	00290108 	eoreq	r0, r9, r8, lsl #2
	...
    b8a8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b8ac:	01100100 	tsteq	r0, r0, lsl #2
    b8b0:	000011c1 	andeq	r1, r0, r1, asr #3
    b8b4:	06015c01 	streq	r5, [r1], -r1, lsl #24
    b8b8:	0032f801 	eorseq	pc, r2, r1, lsl #16
    b8bc:	00334810 	eorseq	r4, r3, r0, lsl r8
    b8c0:	00ac0a10 	adceq	r0, ip, r0, lsl sl
    b8c4:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    b8c8:	701c0000 	andsvc	r0, ip, r0
    b8cc:	5c010076 	stcpl	0, cr0, [r1], {118}	; 0x76
    b8d0:	009f1801 	addseq	r1, pc, r1, lsl #16
    b8d4:	ac400000 	marge	acc0, r0, r0
    b8d8:	ac360000 	ldcge	0, cr0, [r6], #-0
    b8dc:	70150000 	andsvc	r0, r5, r0
    b8e0:	01006375 	tsteq	r0, r5, ror r3
    b8e4:	cc0f015e 	stfgts	f0, [pc], {94}	; 0x5e
    b8e8:	85000000 	strhi	r0, [r0, #-0]
    b8ec:	7f0000ac 	svcvc	0x000000ac
    b8f0:	120000ac 	andne	r0, r0, #172	; 0xac
    b8f4:	00002c88 	andeq	r2, r0, r8, lsl #25
    b8f8:	13015f01 	movwne	r5, #7937	; 0x1f01
    b8fc:	000001e3 	andeq	r0, r0, r3, ror #3
    b900:	0000acb0 			; <UNDEFINED> instruction: 0x0000acb0
    b904:	0000acae 	andeq	sl, r0, lr, lsr #25
    b908:	00331e13 	eorseq	r1, r3, r3, lsl lr
    b90c:	0005d110 	andeq	sp, r5, r0, lsl r1
    b910:	33301800 	teqcc	r0, #0, 16
    b914:	02f81000 	rscseq	r1, r8, #0
    b918:	05140000 	ldreq	r0, [r4, #-0]
    b91c:	01190000 	tsteq	r9, r0
    b920:	00750250 	rsbseq	r0, r5, r0, asr r2
    b924:	333c1300 	teqcc	ip, #0, 6
    b928:	05e01000 	strbeq	r1, [r0, #0]!
    b92c:	1d000000 	stcne	0, cr0, [r0, #-0]
    b930:	000cf801 	andeq	pc, ip, r1, lsl #16
    b934:	08ad0100 	stmiaeq	sp!, {r8}
    b938:	00009f01 	andeq	r9, r0, r1, lsl #30
    b93c:	00322400 	eorseq	r2, r2, r0, lsl #8
    b940:	0032f810 	eorseq	pc, r2, r0, lsl r8	; <UNPREDICTABLE>
    b944:	00acc310 	adceq	ip, ip, r0, lsl r3
    b948:	05d10100 	ldrbeq	r0, [r1, #256]	; 0x100
    b94c:	541e0000 	ldrpl	r0, [lr], #-0
    b950:	0100002c 	tsteq	r0, ip, lsr #32
    b954:	00291dad 	eoreq	r1, r9, sp, lsr #27
    b958:	acef0000 	stclge	0, cr0, [pc]	; b960 <__HEAP_SIZE+0xa960>
    b95c:	ace30000 	stclge	0, cr0, [r3]
    b960:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
    b964:	0100002a 	tsteq	r0, sl, lsr #32
    b968:	01e313af 	mvneq	r1, pc, lsr #7
    b96c:	ad410000 	stclge	0, cr0, [r1, #-0]
    b970:	ad3b0000 	ldcge	0, cr0, [fp, #-0]
    b974:	b71f0000 	ldrlt	r0, [pc, -r0]
    b978:	01000029 	tsteq	r0, r9, lsr #32
    b97c:	01e313b0 	strheq	r1, [r3, #48]!	; 0x30
    b980:	ad720000 	ldclge	0, cr0, [r2, #-0]
    b984:	ad6a0000 	stclge	0, cr0, [sl, #-0]
    b988:	d11f0000 	tstle	pc, r0
    b98c:	0100002a 	tsteq	r0, sl, lsr #32
    b990:	01e313b1 	strheq	r1, [r3, #49]!	; 0x31
    b994:	adad0000 	stcge	0, cr0, [sp]
    b998:	adab0000 	stcge	0, cr0, [fp]
    b99c:	011f0000 	tsteq	pc, r0
    b9a0:	01000026 	tsteq	r0, r6, lsr #32
    b9a4:	009f0cb2 			; <UNDEFINED> instruction: 0x009f0cb2
    b9a8:	adc60000 	stclge	0, cr0, [r6]
    b9ac:	adc00000 	stclge	0, cr0, [r0]
    b9b0:	f51f0000 			; <UNDEFINED> instruction: 0xf51f0000
    b9b4:	0100002a 	tsteq	r0, sl, lsr #32
    b9b8:	00290cb3 	strhteq	r0, [r9], -r3
    b9bc:	adf50000 	ldclge	0, cr0, [r5]
    b9c0:	adf10000 	ldclge	0, cr0, [r1]
    b9c4:	4c130000 	ldcmi	0, cr0, [r3], {-0}
    b9c8:	d1100032 	tstle	r0, r2, lsr r0
    b9cc:	13000005 	movwne	r0, #5
    b9d0:	10003270 	andne	r3, r0, r0, ror r2
    b9d4:	00000353 	andeq	r0, r0, r3, asr r3
    b9d8:	0032d013 	eorseq	sp, r2, r3, lsl r0
    b9dc:	0005e010 	andeq	lr, r5, r0, lsl r0
    b9e0:	01200000 			; <UNDEFINED> instruction: 0x01200000
    b9e4:	000d1c01 	andeq	r1, sp, r1, lsl #24
    b9e8:	000d1c00 	andeq	r1, sp, r0, lsl #24
    b9ec:	065b0700 	ldrbeq	r0, [fp], -r0, lsl #14
    b9f0:	01012006 	tsteq	r1, r6
    b9f4:	00001177 	andeq	r1, r0, r7, ror r1
    b9f8:	00001177 	andeq	r1, r0, r7, ror r1
    b9fc:	0c069307 	stceq	3, cr9, [r6], {7}
    ba00:	d3010121 	movwle	r0, #4385	; 0x1121
    ba04:	d300000b 	movwle	r0, #11
    ba08:	0500000b 	streq	r0, [r0, #-11]
    ba0c:	01210d71 			; <UNDEFINED> instruction: 0x01210d71
    ba10:	000a4301 	andeq	r4, sl, r1, lsl #6
    ba14:	000a4300 	andeq	r4, sl, r0, lsl #6
    ba18:	0d720500 	cfldr64eq	mvdx0, [r2, #-0]
    ba1c:	ae010122 	adfgesp	f0, f1, f2
    ba20:	a4000000 	strge	r0, [r0], #-0
    ba24:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    ba28:	05630000 	strbeq	r0, [r3, #-0]!
    ba2c:	00020000 	andeq	r0, r2, r0
    ba30:	000017de 	ldrdeq	r1, [r0], -lr
    ba34:	01890104 	orreq	r0, r9, r4, lsl #2
    ba38:	000c0000 	andeq	r0, ip, r0
    ba3c:	8500002d 	strhi	r0, [r0, #-45]	; 0xffffffd3
    ba40:	60000003 	andvs	r0, r0, r3
    ba44:	0000000b 	andeq	r0, r0, fp
    ba48:	00000000 	andeq	r0, r0, r0
    ba4c:	ed000000 	stc	0, cr0, [r0, #-0]
    ba50:	02000082 	andeq	r0, r0, #130	; 0x82
    ba54:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    ba58:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
    ba5c:	0002c707 	andeq	ip, r2, r7, lsl #14
    ba60:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    ba64:	00000127 	andeq	r0, r0, r7, lsr #2
    ba68:	63040803 	movwvs	r0, #18435	; 0x4803
    ba6c:	03000000 	movweq	r0, #0
    ba70:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    ba74:	7f040000 	svcvc	0x00040000
    ba78:	02000001 	andeq	r0, r0, #1
    ba7c:	0058182b 	subseq	r1, r8, fp, lsr #16
    ba80:	01030000 	mrseq	r0, (UNDEF: 3)
    ba84:	00027108 	andeq	r7, r2, r8, lsl #2
    ba88:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
    ba8c:	00000032 	andeq	r0, r0, r2, lsr r0
    ba90:	1a070203 	bne	1cc2a4 <__RAM_SIZE+0xcc2a4>
    ba94:	03000003 	movweq	r0, #3
    ba98:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    ba9c:	6f040000 	svcvs	0x00040000
    baa0:	02000000 	andeq	r0, r0, #0
    baa4:	0080194f 	addeq	r1, r0, pc, asr #18
    baa8:	04030000 	streq	r0, [r3], #-0
    baac:	0002c207 	andeq	ip, r2, r7, lsl #4
    bab0:	07080300 	streq	r0, [r8, -r0, lsl #6]
    bab4:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    bab8:	00018104 	andeq	r8, r1, r4, lsl #2
    babc:	13180300 	tstne	r8, #0, 6
    bac0:	0000004c 	andeq	r0, r0, ip, asr #32
    bac4:	00007104 	andeq	r7, r0, r4, lsl #2
    bac8:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    bacc:	00000074 	andeq	r0, r0, r4, ror r0
    bad0:	00009a05 	andeq	r9, r0, r5, lsl #20
    bad4:	1c380400 	cfldrsne	mvf0, [r8], #-0
    bad8:	24040000 	strcs	r0, [r4], #-0
    badc:	0000b711 	andeq	fp, r0, r1, lsl r7
    bae0:	bd040600 	stclt	6, cr0, [r4, #-0]
    bae4:	07000000 	streq	r0, [r0, -r0]
    bae8:	0000c901 	andeq	ip, r0, r1, lsl #18
    baec:	00c90800 	sbceq	r0, r9, r0, lsl #16
    baf0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    baf4:	155f0404 	ldrbne	r0, [pc, #-1028]	; b6f8 <__HEAP_SIZE+0xa6f8>
    baf8:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    bafc:	00009a1a 	andeq	r9, r0, sl, lsl sl
    bb00:	09c50400 	stmibeq	r5, {sl}^
    bb04:	4a050000 	bmi	14bb0c <__RAM_SIZE+0x4bb0c>
    bb08:	00006d1a 	andeq	r6, r0, sl, lsl sp
    bb0c:	09200400 	stmdbeq	r0!, {sl}
    bb10:	51050000 	mrspl	r0, (UNDEF: 5)
    bb14:	00009a1a 	andeq	r9, r0, sl, lsl sl
    bb18:	08010300 	stmdaeq	r1, {r8, r9}
    bb1c:	0000027a 	andeq	r0, r0, sl, ror r2
    bb20:	00cb0406 	sbceq	r0, fp, r6, lsl #8
    bb24:	070a0000 	streq	r0, [sl, -r0]
    bb28:	00005801 	andeq	r5, r0, r1, lsl #16
    bb2c:	01b60700 			; <UNDEFINED> instruction: 0x01b60700
    bb30:	0000011d 	andeq	r0, r0, sp, lsl r1
    bb34:	0017da0b 	andseq	sp, r7, fp, lsl #20
    bb38:	c40b0000 	strgt	r0, [fp], #-0
    bb3c:	0100001f 	tsteq	r0, pc, lsl r0
    bb40:	001fdb0b 	andseq	sp, pc, fp, lsl #22
    bb44:	04000200 	streq	r0, [r0], #-512	; 0xfffffe00
    bb48:	00002e79 	andeq	r2, r0, r9, ror lr
    bb4c:	2e125601 	cfmsub32cs	mvax0, mvfx5, mvfx2, mvfx1
    bb50:	0c000001 	stceq	0, cr0, [r0], {1}
    bb54:	0000011d 	andeq	r0, r0, sp, lsl r1
    bb58:	01340406 	teqeq	r4, r6, lsl #8
    bb5c:	010d0000 	mrseq	r0, (UNDEF: 13)
    bb60:	002c8f0e 	eoreq	r8, ip, lr, lsl #30
    bb64:	02000100 	andeq	r0, r0, #0, 2
    bb68:	0000a62a 	andeq	sl, r0, sl, lsr #12
    bb6c:	08030500 	stmdaeq	r3, {r8, sl}
    bb70:	0e380000 	cdpeq	0, 3, cr0, cr8, cr0, {0}
    bb74:	00002ea1 	andeq	r2, r0, r1, lsr #29
    bb78:	25021d01 	strcs	r1, [r2, #-3329]	; 0xfffff2ff
    bb7c:	0000009a 	muleq	r0, sl, r0
    bb80:	8d040305 	stchi	3, cr0, [r4, #-20]	; 0xffffffec
    bb84:	e30e3800 	movw	r3, #59392	; 0xe800
    bb88:	0100002d 	tsteq	r0, sp, lsr #32
    bb8c:	9a250223 	bls	94c420 <__RAM_SIZE+0x84c420>
    bb90:	05000000 	streq	r0, [r0, #-0]
    bb94:	008d0803 	addeq	r0, sp, r3, lsl #16
    bb98:	2d790e38 	ldclcs	14, cr0, [r9, #-224]!	; 0xffffff20
    bb9c:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    bba0:	009a2502 	addseq	r2, sl, r2, lsl #10
    bba4:	03050000 	movweq	r0, #20480	; 0x5000
    bba8:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
    bbac:	2e34010f 	rsfcss	f0, f4, #10.0
    bbb0:	af010000 	svcge	0x00010000
    bbb4:	d7010c07 	strle	r0, [r1, -r7, lsl #24]
	...
    bbc0:	02000000 	andeq	r0, r0, #0
    bbc4:	c501007d 	strgt	r0, [r1, #-125]	; 0xffffff83
    bbc8:	10000001 	andne	r0, r0, r1
    bbcc:	00002e4b 	andeq	r2, r0, fp, asr #28
    bbd0:	0e07b101 	mvfeqs	f3, f1
    bbd4:	0000009a 	muleq	r0, sl, r0
    bbd8:	0000ae15 	andeq	sl, r0, r5, lsl lr
    bbdc:	0000ae13 	andeq	sl, r0, r3, lsl lr
    bbe0:	001a1911 	andseq	r1, sl, r1, lsl r9
    bbe4:	07b20100 	ldreq	r0, [r2, r0, lsl #2]!
    bbe8:	0000d710 	andeq	sp, r0, r0, lsl r7
    bbec:	12000100 	andne	r0, r0, #0, 2
    bbf0:	001f1b01 	andseq	r1, pc, r1, lsl #22
    bbf4:	06ee0100 	strbteq	r0, [lr], r0, lsl #2
    bbf8:	00000106 	andeq	r0, r0, r6, lsl #2
    bbfc:	00000000 	andeq	r0, r0, r0
    bc00:	7d020000 	stcvc	0, cr0, [r2, #-0]
    bc04:	01130100 	tsteq	r3, r0, lsl #2
    bc08:	0000145e 	andeq	r1, r0, lr, asr r4
    bc0c:	0c065501 	cfstr32eq	mvfx5, [r6], {1}
    bc10:	0000d701 	andeq	sp, r0, r1, lsl #14
    bc14:	0035c800 	eorseq	ip, r5, r0, lsl #16
    bc18:	00360810 	eorseq	r0, r6, r0, lsl r8
    bc1c:	00ae2810 	adceq	r2, lr, r0, lsl r8
    bc20:	02340100 	eorseq	r0, r4, #0, 2
    bc24:	0f140000 	svceq	0x00140000
    bc28:	15000002 	strne	r0, [r0, #-2]
    bc2c:	00002cca 	andeq	r2, r0, sl, asr #25
    bc30:	21066501 	tstcs	r6, r1, lsl #10
    bc34:	0000023a 	andeq	r0, r0, sl, lsr r2
    bc38:	35f01600 	ldrbcc	r1, [r0, #1536]!	; 0x600
    bc3c:	040b1000 	streq	r1, [fp], #-0
    bc40:	f8160000 			; <UNDEFINED> instruction: 0xf8160000
    bc44:	f2100035 	vqadd.s16	d0, d0, d21
    bc48:	16000004 	strne	r0, [r0], -r4
    bc4c:	100035fc 	strdne	r3, [r0], -ip
    bc50:	00000500 	andeq	r0, r0, r0, lsl #10
    bc54:	00360016 	eorseq	r0, r6, r6, lsl r0
    bc58:	0003d610 	andeq	sp, r3, r0, lsl r6
    bc5c:	04060000 	streq	r0, [r6], #-0
    bc60:	00000129 	andeq	r0, r0, r9, lsr #2
    bc64:	0002340c 	andeq	r3, r2, ip, lsl #8
    bc68:	90011300 	andls	r1, r1, r0, lsl #6
    bc6c:	0100001b 	tsteq	r0, fp, lsl r0
    bc70:	01130602 	tsteq	r3, r2, lsl #12
    bc74:	000000f6 	strdeq	r0, [r0], -r6
    bc78:	10003538 	andne	r3, r0, r8, lsr r5
    bc7c:	100035c8 	andne	r3, r0, r8, asr #11
    bc80:	0000ae48 	andeq	sl, r0, r8, asr #28
    bc84:	0002ae01 	andeq	sl, r2, r1, lsl #28
    bc88:	23161700 	tstcs	r6, #0, 14
    bc8c:	02010000 	andeq	r0, r1, #0
    bc90:	00f63806 	rscseq	r3, r6, r6, lsl #16
    bc94:	ae9c0000 	cdpge	0, 9, cr0, cr12, cr0, {0}
    bc98:	ae740000 	cdpge	0, 7, cr0, cr4, cr0, {0}
    bc9c:	d6180000 	ldrle	r0, [r8], -r0
    bca0:	0100002d 	tsteq	r0, sp, lsr #32
    bca4:	f6380603 			; <UNDEFINED> instruction: 0xf6380603
    bca8:	01000000 	mrseq	r0, (UNDEF: 0)
    bcac:	2e2d1751 	mcrcs	7, 1, r1, cr13, cr1, {2}
    bcb0:	04010000 	streq	r0, [r1], #-0
    bcb4:	00ab3906 	adceq	r3, fp, r6, lsl #18
    bcb8:	afac0000 	svcge	0x00ac0000
    bcbc:	afa60000 	svcge	0x00a60000
    bcc0:	84170000 	ldrhi	r0, [r7], #-0
    bcc4:	0100001e 	tsteq	r0, lr, lsl r0
    bcc8:	c9310605 	ldmdbgt	r1!, {r0, r2, r9, sl}
    bccc:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    bcd0:	d80000af 	stmdale	r0, {r0, r1, r2, r3, r5, r7}
    bcd4:	000000af 	andeq	r0, r0, pc, lsr #1
    bcd8:	2cd80119 	ldfcse	f0, [r8], {25}
    bcdc:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    bce0:	22010604 	andcs	r0, r1, #4, 12	; 0x400000
    bce4:	36100035 			; <UNDEFINED> instruction: 0x36100035
    bce8:	09100035 	ldmdbeq	r0, {r0, r2, r4, r5}
    bcec:	010000b0 	strheq	r0, [r0, -r0]
    bcf0:	00000313 	andeq	r0, r0, r3, lsl r3
    bcf4:	002d6317 	eoreq	r6, sp, r7, lsl r3
    bcf8:	04090100 	streq	r0, [r9], #-256	; 0xffffff00
    bcfc:	00031324 	andeq	r1, r3, r4, lsr #6
    bd00:	00b03100 	adcseq	r3, r0, r0, lsl #2
    bd04:	00b02900 	adcseq	r2, r0, r0, lsl #18
    bd08:	2ca91000 	stccs	0, cr1, [r9]
    bd0c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    bd10:	009a0e04 	addseq	r0, sl, r4, lsl #28
    bd14:	b0710000 	rsbslt	r0, r1, r0
    bd18:	b06b0000 	rsblt	r0, fp, r0
    bd1c:	ae100000 	cdpge	0, 1, cr0, cr0, cr0, {0}
    bd20:	0100002c 	tsteq	r0, ip, lsr #32
    bd24:	8e0d0422 	cdphi	4, 0, cr0, cr13, cr2, {1}
    bd28:	a0000000 	andge	r0, r0, r0
    bd2c:	9c0000b0 	stcls	0, cr0, [r0], {176}	; 0xb0
    bd30:	160000b0 			; <UNDEFINED> instruction: 0x160000b0
    bd34:	10003534 	andne	r3, r0, r4, lsr r5
    bd38:	0000050f 	andeq	r0, r0, pc, lsl #10
    bd3c:	9a040600 	bls	10d544 <__RAM_SIZE+0xd544>
    bd40:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    bd44:	002e8301 	eoreq	r8, lr, r1, lsl #6
    bd48:	03f20100 	mvnseq	r0, #0, 2
    bd4c:	35000106 	strcc	r0, [r0, #-262]	; 0xfffffefa
    bd50:	35221000 	strcc	r1, [r2, #-0]!
    bd54:	b0be1000 	adcslt	r1, lr, r0
    bd58:	6d010000 	stcvs	0, cr0, [r1, #-0]
    bd5c:	10000003 	andne	r0, r0, r3
    bd60:	00002eb9 			; <UNDEFINED> instruction: 0x00002eb9
    bd64:	0e03f401 	cdpeq	4, 0, cr15, cr3, cr1, {0}
    bd68:	0000009a 	muleq	r0, sl, r0
    bd6c:	0000b0e2 	andeq	fp, r0, r2, ror #1
    bd70:	0000b0de 	ldrdeq	fp, [r0], -lr
    bd74:	00350616 	eorseq	r0, r5, r6, lsl r6
    bd78:	00051d10 	andeq	r1, r5, r0, lsl sp
    bd7c:	350c1600 	strcc	r1, [ip, #-1536]	; 0xfffffa00
    bd80:	052b1000 	streq	r1, [fp, #-0]!
    bd84:	201a0000 	andscs	r0, sl, r0
    bd88:	3a100035 	bcc	40be64 <__RAM_SIZE+0x30be64>
    bd8c:	1b000005 	blne	bda8 <__HEAP_SIZE+0xada8>
    bd90:	74025001 	strvc	r5, [r2], #-1
    bd94:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    bd98:	000a4301 	andeq	r4, sl, r1, lsl #6
    bd9c:	03e60100 	mvneq	r0, #0, 2
    bda0:	34e40106 	strbtcc	r0, [r4], #262	; 0x106
    bda4:	35001000 	strcc	r1, [r0, #-0]
    bda8:	b1001000 	mrslt	r1, (UNDEF: 0)
    bdac:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    bdb0:	1a000003 	bne	bdc4 <__HEAP_SIZE+0xadc4>
    bdb4:	100034fa 	strdne	r3, [r0], -sl
    bdb8:	0000053a 	andeq	r0, r0, sl, lsr r5
    bdbc:	0150011b 	cmpeq	r0, fp, lsl r1
    bdc0:	19000030 	stmdbne	r0, {r4, r5}
    bdc4:	000bd301 	andeq	sp, fp, r1, lsl #6
    bdc8:	03da0100 	bicseq	r0, sl, #0, 2
    bdcc:	34c80106 	strbcc	r0, [r8], #262	; 0x106
    bdd0:	34e41000 	strbtcc	r1, [r4], #0
    bdd4:	b1201000 			; <UNDEFINED> instruction: 0xb1201000
    bdd8:	bf010000 	svclt	0x00010000
    bddc:	16000003 	strne	r0, [r0], -r3
    bde0:	100034ce 	andne	r3, r0, lr, asr #9
    bde4:	0000051d 	andeq	r0, r0, sp, lsl r5
    bde8:	7e011200 	cdpvc	2, 0, cr1, cr1, cr0, {0}
    bdec:	0100000a 	tsteq	r0, sl
    bdf0:	010603ce 	smlabteq	r6, lr, r3, r0
    bdf4:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
    bdf8:	100034c6 	andne	r3, r0, r6, asr #9
    bdfc:	01007d02 	tsteq	r0, r2, lsl #26
    be00:	002e031c 	eoreq	r0, lr, ip, lsl r3
    be04:	03260100 			; <UNDEFINED> instruction: 0x03260100
    be08:	3348010d 	movtcc	r0, #33037	; 0x810d
    be0c:	33601000 	cmncc	r0, #0
    be10:	b1401000 	mrslt	r1, (UNDEF: 64)
    be14:	0b010000 	bleq	4be1c <__HEAP_SIZE+0x4ae1c>
    be18:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    be1c:	00002ca1 	andeq	r2, r0, r1, lsr #25
    be20:	17032801 	strne	r2, [r3, -r1, lsl #16]
    be24:	000000a6 	andeq	r0, r0, r6, lsr #1
    be28:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
    be2c:	10003354 	andne	r3, r0, r4, asr r3
    be30:	0000051d 	andeq	r0, r0, sp, lsl r5
    be34:	14011200 	strne	r1, [r1], #-512	; 0xfffffe00
    be38:	0100002e 	tsteq	r0, lr, lsr #32
    be3c:	0120030a 			; <UNDEFINED> instruction: 0x0120030a
    be40:	10003474 	andne	r3, r0, r4, ror r4
    be44:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
    be48:	01007d02 	tsteq	r0, r2, lsl #26
    be4c:	208d0119 	addcs	r0, sp, r9, lsl r1
    be50:	2f010000 	svccs	0x00010000
    be54:	60012402 	andvs	r2, r1, r2, lsl #8
    be58:	74100033 	ldrvc	r0, [r0], #-51	; 0xffffffcd
    be5c:	78100034 	ldmdavc	r0, {r2, r4, r5}
    be60:	010000b1 	strheq	r0, [r0, -r1]
    be64:	000004f2 	strdeq	r0, [r0], -r2
    be68:	0015cb17 	andseq	ip, r5, r7, lsl fp
    be6c:	022f0100 	eoreq	r0, pc, #0, 2
    be70:	0000e34b 	andeq	lr, r0, fp, asr #6
    be74:	00b1a200 	adcseq	sl, r1, r0, lsl #4
    be78:	00b19800 	adcseq	r9, r1, r0, lsl #16
    be7c:	2e931000 	cdpcs	0, 9, cr1, cr3, cr0, {0}
    be80:	31010000 	mrscc	r0, (UNDEF: 1)
    be84:	009a1202 	addseq	r1, sl, r2, lsl #4
    be88:	b1e70000 	mvnlt	r0, r0
    be8c:	b1e30000 	mvnlt	r0, r0
    be90:	ea100000 	b	40be98 <__RAM_SIZE+0x30be98>
    be94:	0100002c 	tsteq	r0, ip, lsr #32
    be98:	9a210231 	bls	84c764 <__RAM_SIZE+0x74c764>
    be9c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    bea0:	050000b2 	streq	r0, [r0, #-178]	; 0xffffff4e
    bea4:	100000b2 	strhne	r0, [r0], -r2
    bea8:	00002d46 	andeq	r2, r0, r6, asr #26
    beac:	38023101 	stmdacc	r2, {r0, r8, ip, sp}
    beb0:	0000009a 	muleq	r0, sl, r0
    beb4:	0000b22b 	andeq	fp, r0, fp, lsr #4
    beb8:	0000b227 	andeq	fp, r0, r7, lsr #4
    bebc:	002d9410 	eoreq	r9, sp, r0, lsl r4
    bec0:	02310100 	eorseq	r0, r1, #0, 2
    bec4:	00009a56 	andeq	r9, r0, r6, asr sl
    bec8:	00b25400 	adcseq	r5, r2, r0, lsl #8
    becc:	00b24e00 	adcseq	r4, r2, r0, lsl #28
    bed0:	2dc21000 	stclcs	0, cr1, [r2]
    bed4:	32010000 	andcc	r0, r1, #0
    bed8:	00e31402 	rsceq	r1, r3, r2, lsl #8
    bedc:	b2830000 	addlt	r0, r3, #0
    bee0:	b27d0000 	rsbslt	r0, sp, #0
    bee4:	061d0000 	ldreq	r0, [sp], -r0
    bee8:	2a100034 	bcs	40bfc0 <__RAM_SIZE+0x30bfc0>
    beec:	df100034 	svcle	0x00100034
    bef0:	10000004 	andne	r0, r0, r4
    bef4:	00002dac 	andeq	r2, r0, ip, lsr #27
    bef8:	1a02a501 	bne	b5304 <__HEAP_SIZE+0xb4304>
    befc:	0000009a 	muleq	r0, sl, r0
    bf00:	0000b2b0 			; <UNDEFINED> instruction: 0x0000b2b0
    bf04:	0000b2ae 	andeq	fp, r0, lr, lsr #5
    bf08:	337a1600 	cmncc	sl, #0, 12
    bf0c:	05481000 	strbeq	r1, [r8, #-0]
    bf10:	42160000 	andsmi	r0, r6, #0
    bf14:	57100034 			; <UNDEFINED> instruction: 0x57100034
    bf18:	00000005 	andeq	r0, r0, r5
    bf1c:	ba01011e 	blt	4c39c <__HEAP_SIZE+0x4b39c>
    bf20:	ba00002c 	blt	bfd8 <__HEAP_SIZE+0xafd8>
    bf24:	0600002c 	streq	r0, [r0], -ip, lsr #32
    bf28:	011f064d 	tsteq	pc, sp, asr #12
    bf2c:	001de001 	andseq	lr, sp, r1
    bf30:	001de000 	andseq	lr, sp, r0
    bf34:	0df50700 	ldcleq	7, cr0, [r5]
    bf38:	01011e1b 	tsteq	r1, fp, lsl lr
    bf3c:	00002e5e 	andeq	r2, r0, lr, asr lr
    bf40:	00002e5e 	andeq	r2, r0, lr, asr lr
    bf44:	1e062a06 	vmlane.f32	s4, s12, s12
    bf48:	0f7d0101 	svceq	0x007d0101
    bf4c:	0f7d0000 	svceq	0x007d0000
    bf50:	52060000 	andpl	r0, r6, #0
    bf54:	01011f0a 	tsteq	r1, sl, lsl #30
    bf58:	000018dd 	ldrdeq	r1, [r0], -sp
    bf5c:	000018dd 	ldrdeq	r1, [r0], -sp
    bf60:	0c0d9a07 			; <UNDEFINED> instruction: 0x0c0d9a07
    bf64:	8901011e 	stmdbhi	r1, {r1, r2, r3, r4, r8}
    bf68:	8900000c 	stmdbhi	r0, {r2, r3}
    bf6c:	0600000c 	streq	r0, [r0], -ip
    bf70:	011f0657 	tsteq	pc, r7, asr r6	; <UNPREDICTABLE>
    bf74:	0019ec01 	andseq	lr, r9, r1, lsl #24
    bf78:	0019ec00 	andseq	lr, r9, r0, lsl #24
    bf7c:	0e580700 	cdpeq	7, 5, cr0, cr8, cr0, {0}
    bf80:	01011f16 	tsteq	r1, r6, lsl pc
    bf84:	000018f0 	strdeq	r1, [r0], -r0
    bf88:	000018f0 	strdeq	r1, [r0], -r0
    bf8c:	0a0e4607 	beq	39d7b0 <__RAM_SIZE+0x29d7b0>
    bf90:	00017a00 	andeq	r7, r1, r0, lsl #20
    bf94:	bc000200 	sfmlt	f0, 4, [r0], {-0}
    bf98:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    bf9c:	00018901 	andeq	r8, r1, r1, lsl #18
    bfa0:	2ed70c00 	cdpcs	12, 13, cr0, cr7, cr0, {0}
    bfa4:	03850000 	orreq	r0, r5, #0
    bfa8:	0bc80000 	bleq	ff20bfb0 <__StackTop+0xc710bfb0>
	...
    bfb4:	88e30000 	stmiahi	r3!, {}^	; <UNPREDICTABLE>
    bfb8:	01020000 	mrseq	r0, (UNDEF: 2)
    bfbc:	00027306 	andeq	r7, r2, r6, lsl #6
    bfc0:	08010200 	stmdaeq	r1, {r9}
    bfc4:	00000271 	andeq	r0, r0, r1, ror r2
    bfc8:	32050202 	andcc	r0, r5, #536870912	; 0x20000000
    bfcc:	02000000 	andeq	r0, r0, #0
    bfd0:	031a0702 	tsteq	sl, #524288	; 0x80000
    bfd4:	04020000 	streq	r0, [r2], #-0
    bfd8:	00012c05 	andeq	r2, r1, r5, lsl #24
    bfdc:	006f0300 	rsbeq	r0, pc, r0, lsl #6
    bfe0:	4f020000 	svcmi	0x00020000
    bfe4:	00005819 	andeq	r5, r0, r9, lsl r8
    bfe8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    bfec:	000002c2 	andeq	r0, r0, r2, asr #5
    bff0:	27050802 	strcs	r0, [r5, -r2, lsl #16]
    bff4:	02000001 	andeq	r0, r0, #1
    bff8:	02bd0708 	adcseq	r0, sp, #8, 14	; 0x200000
    bffc:	04040000 	streq	r0, [r4], #-0
    c000:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    c004:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c008:	000002c7 	andeq	r0, r0, r7, asr #5
    c00c:	00007103 	andeq	r7, r0, r3, lsl #2
    c010:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    c014:	0000004c 	andeq	r0, r0, ip, asr #32
    c018:	63040802 	movwvs	r0, #18434	; 0x4802
    c01c:	03000000 	movweq	r0, #0
    c020:	000009c5 	andeq	r0, r0, r5, asr #19
    c024:	451a4a04 	ldrmi	r4, [sl, #-2564]	; 0xfffff5fc
    c028:	05000000 	streq	r0, [r0, #-0]
    c02c:	002f2e01 	eoreq	r2, pc, r1, lsl #28
    c030:	01c70100 	biceq	r0, r7, r0, lsl #2
    c034:	36c0010a 	strbcc	r0, [r0], sl, lsl #2
    c038:	36d21000 	ldrbcc	r1, [r2], r0
    c03c:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c040:	01050100 	mrseq	r0, (UNDEF: 21)
    c044:	00002ec8 	andeq	r2, r0, r8, asr #29
    c048:	0a016b01 	beq	66c54 <__HEAP_SIZE+0x65c54>
    c04c:	00367801 	eorseq	r7, r6, r1, lsl #16
    c050:	0036bc10 	eorseq	fp, r6, r0, lsl ip
    c054:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    c058:	89010601 	stmdbhi	r1, {r0, r9, sl}
    c05c:	0100000c 	tsteq	r0, ip
    c060:	6a0106e8 	bvs	4dc08 <__HEAP_SIZE+0x4cc08>
    c064:	78100036 	ldmdavc	r0, {r1, r2, r4, r5}
    c068:	02100036 	andseq	r0, r0, #54	; 0x36
    c06c:	f101007d 	setend	le
    c070:	07000000 	streq	r0, [r0, -r0]
    c074:	00002f4a 	andeq	r2, r0, sl, asr #30
    c078:	7b40e801 	blvc	1046084 <__RAM_SIZE+0xf46084>
    c07c:	01000000 	mrseq	r0, (UNDEF: 0)
    c080:	01080050 	qaddeq	r0, r0, r8
    c084:	00000f7d 	andeq	r0, r0, sp, ror pc
    c088:	010ad701 	tsteq	sl, r1, lsl #14
    c08c:	0000007b 	andeq	r0, r0, fp, ror r0
    c090:	10003654 	andne	r3, r0, r4, asr r6
    c094:	1000366a 	andne	r3, r0, sl, ror #12
    c098:	01007d02 	tsteq	r0, r2, lsl #26
    c09c:	2cba0109 	ldfcss	f0, [sl], #36	; 0x24
    c0a0:	c2010000 	andgt	r0, r1, #0
    c0a4:	36340106 	ldrtcc	r0, [r4], -r6, lsl #2
    c0a8:	364e1000 	strbcc	r1, [lr], -r0
    c0ac:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c0b0:	01090100 	mrseq	r0, (UNDEF: 25)
    c0b4:	00002f3a 	andeq	r2, r0, sl, lsr pc
    c0b8:	0106b301 	tsteq	r6, r1, lsl #6
	...
    c0c4:	01007d02 	tsteq	r0, r2, lsl #26
    c0c8:	2f510109 	svccs	0x00510109
    c0cc:	a4010000 	strge	r0, [r1], #-0
    c0d0:	00000106 	andeq	r0, r0, r6, lsl #2
    c0d4:	00000000 	andeq	r0, r0, r0
    c0d8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c0dc:	01080100 	mrseq	r0, (UNDEF: 24)
    c0e0:	00002f20 	andeq	r2, r0, r0, lsr #30
    c0e4:	010c9301 	tsteq	ip, r1, lsl #6
    c0e8:	0000008e 	andeq	r0, r0, lr, lsl #1
	...
    c0f4:	01007d02 	tsteq	r0, r2, lsl #26
    c0f8:	2e5e0109 	rdfcse	f0, f6, #1.0
    c0fc:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    c100:	3608010a 	strcc	r0, [r8], -sl, lsl #2
    c104:	362e1000 	strtcc	r1, [lr], -r0
    c108:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c10c:	22000100 	andcs	r0, r0, #0, 2
    c110:	02000000 	andeq	r0, r0, #0
    c114:	001a7400 	andseq	r7, sl, r0, lsl #8
    c118:	22010400 	andcs	r0, r1, #0, 8
    c11c:	f800008b 			; <UNDEFINED> instruction: 0xf800008b
    c120:	68100036 	ldmdavs	r0, {r1, r2, r4, r5}
    c124:	61100037 	tstvs	r0, r7, lsr r0
    c128:	8500002f 	strhi	r0, [r0, #-47]	; 0xffffffd1
    c12c:	81000003 	tsthi	r0, r3
    c130:	0100002f 	tsteq	r0, pc, lsr #32
    c134:	00002280 	andeq	r2, r0, r0, lsl #5
    c138:	88000200 	stmdahi	r0, {r9}
    c13c:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    c140:	008ba801 	addeq	sl, fp, r1, lsl #16
    c144:	00376800 	eorseq	r6, r7, r0, lsl #16
    c148:	0037b010 	eorseq	fp, r7, r0, lsl r0
    c14c:	002f8f10 	eoreq	r8, pc, r0, lsl pc	; <UNPREDICTABLE>
    c150:	00038500 	andeq	r8, r3, r0, lsl #10
    c154:	002f8100 	eoreq	r8, pc, r0, lsl #2
    c158:	Address 0x0000c158 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
        xReturn = pdFALSE;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00061001 	andeq	r1, r6, r1
}
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
        BaseType_t xReturn = pdFAIL;
      44:	00001349 	andeq	r1, r0, r9, asr #6
    }
      48:	0b000f07 	bleq	3c6c <__HEAP_SIZE+0x2c6c>
        for (int i = 0; i < count; i++) {
      4c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
        printf("] \r\n");
      50:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
}
      54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      58:	13010b39 	movwne	r0, #6969	; 0x1b39
      5c:	0d090000 	stceq	0, cr0, [r9, #-0]
      60:	3a0e0300 	bcc	380c68 <__RAM_SIZE+0x280c68>
      64:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      68:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
      6c:	0a00000a 	beq	9c <__STACKSEAL_SIZE+0x9c>
      70:	0803000d 	stmdaeq	r3, {r0, r2, r3}
      74:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      78:	13490b39 	movtne	r0, #39737	; 0x9b39
      7c:	00000a38 	andeq	r0, r0, r8, lsr sl
            prvUnlockQueue( pxQueue );
      80:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
            ( void ) xTaskResumeAll();
      84:	00130113 	andseq	r0, r3, r3, lsl r1
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	00210c00 	eoreq	r0, r1, r0, lsl #24
      8c:	0b2f1349 	bleq	bc4db8 <__RAM_SIZE+0xac4db8>
      90:	160d0000 	strne	r0, [sp], -r0
        taskENTER_CRITICAL();
      94:	3a0e0300 	bcc	380c9c <__RAM_SIZE+0x280c9c>
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	0013490b 	andseq	r4, r3, fp, lsl #18
      a0:	000f0e00 	andeq	r0, pc, r0, lsl #28
                else if( xEntryTimeSet == pdFALSE )
      a4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
        taskEXIT_CRITICAL();
      a8:	130f0000 	movwne	r0, #61440	; 0xf000
        vTaskSuspendAll();
      ac:	3c0e0300 	stccc	3, cr0, [lr], {-0}
        prvLockQueue( pxQueue );
      b0:	1000000c 	andne	r0, r0, ip
      b4:	13490021 	movtne	r0, #36897	; 0x9021
      b8:	0000052f 	andeq	r0, r0, pc, lsr #10
      bc:	03003411 	movweq	r3, #1041	; 0x411
      c0:	3b0b3a0e 	blcc	2ce900 <__RAM_SIZE+0x1ce900>
      c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      c8:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
      cc:	1200000a 	andne	r0, r0, #10
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 20 <__STACKSEAL_SIZE+0x20>
      d4:	0b3a0e03 	bleq	e838e8 <__RAM_SIZE+0xd838e8>
      d8:	0b390b3b 	bleq	e42dcc <__RAM_SIZE+0xd42dcc>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	13490c27 	movtne	r0, #39975	; 0x9c27
      e0:	01120111 	tsteq	r2, r1, lsl r1
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
      e8:	0013010c 	andseq	r0, r3, ip, lsl #2
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00341300 	eorseq	r1, r4, r0, lsl #6
      f0:	0b3a0e03 	bleq	e83904 <__RAM_SIZE+0xd83904>
                prvUnlockQueue( pxQueue );
      f4:	0b390b3b 	bleq	e42de8 <__RAM_SIZE+0xd42de8>
      f8:	06021349 	streq	r1, [r2], -r9, asr #6
                if( xTaskResumeAll() == pdFALSE )
      fc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     100:	82891400 	addhi	r1, r9, #0, 8
                    taskYIELD_WITHIN_API();
     104:	01110001 	tsteq	r1, r1
                    if( xInheritanceOccurred != pdFALSE )
     108:	00001331 	andeq	r1, r0, r1, lsr r3
                return errQUEUE_EMPTY;
     10c:	01828915 	orreq	r8, r2, r5, lsl r9
                        taskENTER_CRITICAL();
     110:	31011101 	tstcc	r1, r1, lsl #2
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00130113 	andseq	r0, r3, r3, lsl r1
     118:	828a1600 	addhi	r1, sl, #0, 12
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	0a020001 	beq	80128 <__HEAP_SIZE+0x7f128>
                        taskEXIT_CRITICAL();
     120:	000a4291 	muleq	sl, r1, r2
     124:	82891700 	addhi	r1, r9, #0, 14
     128:	01110101 	tsteq	r1, r1, lsl #2
     12c:	00001331 	andeq	r1, r0, r1, lsr r3
     130:	03012e18 	movweq	r2, #7704	; 0x1e18
     134:	3b0b3a0e 	blcc	2ce974 <__RAM_SIZE+0x1ce974>
     138:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     13c:	1201110c 	andne	r1, r1, #12, 2
     140:	97064001 	strls	r4, [r6, -r1]
     144:	13010c42 	movwne	r0, #7234	; 0x1c42
     148:	34190000 	ldrcc	r0, [r9], #-0
     14c:	3a0e0300 	bcc	380d54 <__RAM_SIZE+0x280d54>
     150:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     154:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     158:	1a00000a 	bne	188 <__STACKSEAL_SIZE+0x188>
     15c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     160:	0b3b0b3a 	bleq	ec2e50 <__RAM_SIZE+0xdc2e50>
     164:	13490b39 	movtne	r0, #39737	; 0x9b39
     168:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     16c:	1b000006 	blne	18c <__STACKSEAL_SIZE+0x18c>
     170:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c0 <__STACKSEAL_SIZE+0xc0>
     174:	0b3a0e03 	bleq	e83988 <__RAM_SIZE+0xd83988>
     178:	0b390b3b 	bleq	e42e6c <__RAM_SIZE+0xd42e6c>
     17c:	01110c27 	tsteq	r1, r7, lsr #24
     180:	06400112 			; <UNDEFINED> instruction: 0x06400112
     184:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     188:	1c000013 	stcne	0, cr0, [r0], {19}
     18c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     190:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     194:	00000a02 	andeq	r0, r0, r2, lsl #20
     198:	55010b1d 	strpl	r0, [r1, #-2845]	; 0xfffff4e3
     19c:	00130106 	andseq	r0, r3, r6, lsl #2
     1a0:	00341e00 	eorseq	r1, r4, r0, lsl #28
     1a4:	0b3a0803 	bleq	e821b8 <__RAM_SIZE+0xd821b8>
     1a8:	0b390b3b 	bleq	e42e9c <__RAM_SIZE+0xd42e9c>
     1ac:	06021349 	streq	r1, [r2], -r9, asr #6
     1b0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1b4:	00341f00 	eorseq	r1, r4, r0, lsl #30
     1b8:	0b3a0803 	bleq	e821cc <__RAM_SIZE+0xd821cc>
     1bc:	0b390b3b 	bleq	e42eb0 <__RAM_SIZE+0xd42eb0>
     1c0:	0b1c1349 	bleq	704eec <__RAM_SIZE+0x604eec>
     1c4:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     1c8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1cc:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     1d0:	0b3a0e03 	bleq	e839e4 <__RAM_SIZE+0xd839e4>
     1d4:	0b390b3b 	bleq	e42ec8 <__RAM_SIZE+0xd42ec8>
     1d8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     1dc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1e0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     1e4:	0b3a0e03 	bleq	e839f8 <__RAM_SIZE+0xd839f8>
     1e8:	00000b3b 	andeq	r0, r0, fp, lsr fp
     1ec:	3f002e22 	svccc	0x00002e22
     1f0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     1f4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1fc:	00000b39 	andeq	r0, r0, r9, lsr fp
     200:	01110100 	tsteq	r1, r0, lsl #2
     204:	0b130e25 	bleq	4c3aa0 <__RAM_SIZE+0x3c3aa0>
     208:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     20c:	01110655 	tsteq	r1, r5, asr r6
     210:	06100152 			; <UNDEFINED> instruction: 0x06100152
     214:	24020000 	strcs	r0, [r2], #-0
     218:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     21c:	000e030b 	andeq	r0, lr, fp, lsl #6
     220:	00160300 	andseq	r0, r6, r0, lsl #6
     224:	0b3a0e03 	bleq	e83a38 <__RAM_SIZE+0xd83a38>
     228:	0b390b3b 	bleq	e42f1c <__RAM_SIZE+0xd42f1c>
     22c:	00001349 	andeq	r1, r0, r9, asr #6
     230:	0b002404 	bleq	9248 <__HEAP_SIZE+0x8248>
     234:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     238:	05000008 	streq	r0, [r0, #-8]
     23c:	13490035 	movtne	r0, #36917	; 0x9035
     240:	26060000 	strcs	r0, [r6], -r0
     244:	00134900 	andseq	r4, r3, r0, lsl #18
     248:	01130700 	tsteq	r3, r0, lsl #14
     24c:	0b3a050b 	bleq	e81680 <__RAM_SIZE+0xd81680>
     250:	0b39053b 	bleq	e41744 <__RAM_SIZE+0xd41744>
     254:	00001301 	andeq	r1, r0, r1, lsl #6
     258:	03000d08 	movweq	r0, #3336	; 0xd08
     25c:	3b0b3a0e 	blcc	2cea9c <__RAM_SIZE+0x1cea9c>
     260:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     264:	000a3813 	andeq	r3, sl, r3, lsl r8
     268:	000d0900 	andeq	r0, sp, r0, lsl #18
     26c:	0b3a0803 	bleq	e82280 <__RAM_SIZE+0xd82280>
     270:	0b39053b 	bleq	e41764 <__RAM_SIZE+0xd41764>
     274:	0a381349 	beq	e04fa0 <__RAM_SIZE+0xd04fa0>
     278:	010a0000 	mrseq	r0, (UNDEF: 10)
     27c:	01134901 	tsteq	r3, r1, lsl #18
     280:	0b000013 	bleq	2d4 <__STACKSEAL_SIZE+0x2d4>
     284:	13490021 	movtne	r0, #36897	; 0x9021
     288:	00000b2f 	andeq	r0, r0, pc, lsr #22
     28c:	0300160c 	movweq	r1, #1548	; 0x60c
     290:	3b0b3a0e 	blcc	2cead0 <__RAM_SIZE+0x1cead0>
     294:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     298:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     29c:	0b0b000f 	bleq	2c02e0 <__RAM_SIZE+0x1c02e0>
     2a0:	00001349 	andeq	r1, r0, r9, asr #6
     2a4:	2700150e 	strcs	r1, [r0, -lr, lsl #10]
     2a8:	0f00000c 	svceq	0x0000000c
     2ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2b0:	0b3b0b3a 	bleq	ec2fa0 <__RAM_SIZE+0xdc2fa0>
     2b4:	13490b39 	movtne	r0, #39737	; 0x9b39
     2b8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     2bc:	21100000 	tstcs	r0, r0
     2c0:	2f134900 	svccs	0x00134900
     2c4:	11000005 	tstne	r0, r5
     2c8:	13470034 	movtne	r0, #28724	; 0x7034
     2cc:	0b3b0b3a 	bleq	ec2fbc <__RAM_SIZE+0xdc2fbc>
     2d0:	0a020b39 	beq	82fbc <__HEAP_SIZE+0x81fbc>
     2d4:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     2d8:	030c3f00 	movweq	r3, #52992	; 0xcf00
     2dc:	3b0b3a0e 	blcc	2ceb1c <__RAM_SIZE+0x1ceb1c>
     2e0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     2e4:	1201110c 	andne	r1, r1, #12, 2
     2e8:	970a4001 	strls	r4, [sl, -r1]
     2ec:	00000c42 	andeq	r0, r0, r2, asr #24
     2f0:	01110100 	tsteq	r1, r0, lsl #2
     2f4:	0b130e25 	bleq	4c3b90 <__RAM_SIZE+0x3c3b90>
     2f8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     2fc:	01110655 	tsteq	r1, r5, asr r6
     300:	06100152 			; <UNDEFINED> instruction: 0x06100152
     304:	24020000 	strcs	r0, [r2], #-0
     308:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     30c:	000e030b 	andeq	r0, lr, fp, lsl #6
     310:	00260300 	eoreq	r0, r6, r0, lsl #6
     314:	00001349 	andeq	r1, r0, r9, asr #6
     318:	03001604 	movweq	r1, #1540	; 0x604
     31c:	3b0b3a0e 	blcc	2ceb5c <__RAM_SIZE+0x1ceb5c>
     320:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     324:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     328:	0b0b0024 	bleq	2c03c0 <__RAM_SIZE+0x1c03c0>
     32c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     330:	13060000 	movwne	r0, #24576	; 0x6000
     334:	0b0e0301 	bleq	380f40 <__RAM_SIZE+0x280f40>
     338:	3b0b3a0b 	blcc	2ceb6c <__RAM_SIZE+0x1ceb6c>
     33c:	0013010b 	andseq	r0, r3, fp, lsl #2
     340:	000d0700 	andeq	r0, sp, r0, lsl #14
     344:	13490e03 	movtne	r0, #40451	; 0x9e03
     348:	0c340a38 			; <UNDEFINED> instruction: 0x0c340a38
     34c:	0f080000 	svceq	0x00080000
     350:	000b0b00 	andeq	r0, fp, r0, lsl #22
     354:	000f0900 	andeq	r0, pc, r0, lsl #18
     358:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     35c:	150a0000 	strne	r0, [sl, #-0]
     360:	010c2701 	tsteq	ip, r1, lsl #14
     364:	0b000013 	bleq	3b8 <__STACKSEAL_SIZE+0x3b8>
     368:	13490005 	movtne	r0, #36869	; 0x9005
     36c:	130c0000 	movwne	r0, #49152	; 0xc000
     370:	3a0b0b01 	bcc	2c2f7c <__RAM_SIZE+0x1c2f7c>
     374:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     378:	0013010b 	andseq	r0, r3, fp, lsl #2
     37c:	000d0d00 	andeq	r0, sp, r0, lsl #26
     380:	0b3a0803 	bleq	e82394 <__RAM_SIZE+0xd82394>
     384:	0b390b3b 	bleq	e43078 <__RAM_SIZE+0xd43078>
     388:	0a381349 	beq	e050b4 <__RAM_SIZE+0xd050b4>
     38c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     390:	030c3f01 	movweq	r3, #52993	; 0xcf01
     394:	3b0b3a0e 	blcc	2cebd4 <__RAM_SIZE+0x1cebd4>
     398:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     39c:	1113490c 	tstne	r3, ip, lsl #18
     3a0:	40011201 	andmi	r1, r1, r1, lsl #4
     3a4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     3a8:	00001301 	andeq	r1, r0, r1, lsl #6
     3ac:	0300050f 	movweq	r0, #1295	; 0x50f
     3b0:	3b0b3a08 	blcc	2cebd8 <__RAM_SIZE+0x1cebd8>
     3b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3b8:	b7060213 	smladlt	r6, r3, r2, r0
     3bc:	00000642 	andeq	r0, r0, r2, asr #12
     3c0:	03000510 	movweq	r0, #1296	; 0x510
     3c4:	3b0b3a0e 	blcc	2cec04 <__RAM_SIZE+0x1cec04>
     3c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3cc:	000a0213 	andeq	r0, sl, r3, lsl r2
     3d0:	00181100 	andseq	r1, r8, r0, lsl #2
     3d4:	34120000 	ldrcc	r0, [r2], #-0
     3d8:	3a080300 	bcc	200fe0 <__RAM_SIZE+0x100fe0>
     3dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3e4:	1300000a 	movwne	r0, #10
     3e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3f0:	13490b39 	movtne	r0, #39737	; 0x9b39
     3f4:	00000a02 	andeq	r0, r0, r2, lsl #20
     3f8:	03003414 	movweq	r3, #1044	; 0x414
     3fc:	3b0b3a08 	blcc	2cec24 <__RAM_SIZE+0x1cec24>
     400:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     404:	b7060213 	smladlt	r6, r3, r2, r0
     408:	00000642 	andeq	r0, r0, r2, asr #12
     40c:	01828915 	orreq	r8, r2, r5, lsl r9
     410:	31011101 	tstcc	r1, r1, lsl #2
     414:	16000013 			; <UNDEFINED> instruction: 0x16000013
     418:	0001828a 	andeq	r8, r1, sl, lsl #5
     41c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     420:	1700000a 	strne	r0, [r0, -sl]
     424:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     428:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     42c:	13490b39 	movtne	r0, #39737	; 0x9b39
     430:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     434:	18000006 	stmdane	r0, {r1, r2}
     438:	13490101 	movtne	r0, #37121	; 0x9101
     43c:	00001301 	andeq	r1, r0, r1, lsl #6
     440:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
     444:	000b2f13 	andeq	r2, fp, r3, lsl pc
     448:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     44c:	0b3a0e03 	bleq	e83c60 <__RAM_SIZE+0xd83c60>
     450:	0b39053b 	bleq	e41944 <__RAM_SIZE+0xd41944>
     454:	13490c27 	movtne	r0, #39975	; 0x9c27
     458:	01120111 	tsteq	r2, r1, lsl r1
     45c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     460:	0013010c 	andseq	r0, r3, ip, lsl #2
     464:	00051b00 	andeq	r1, r5, r0, lsl #22
     468:	0b3a0803 	bleq	e8247c <__RAM_SIZE+0xd8247c>
     46c:	0b39053b 	bleq	e41960 <__RAM_SIZE+0xd41960>
     470:	0a021349 	beq	8519c <__HEAP_SIZE+0x8419c>
     474:	341c0000 	ldrcc	r0, [ip], #-0
     478:	3a0e0300 	bcc	381080 <__RAM_SIZE+0x281080>
     47c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     480:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     484:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     488:	0b1d0000 	bleq	740490 <__RAM_SIZE+0x640490>
     48c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     490:	00130101 	andseq	r0, r3, r1, lsl #2
     494:	010b1e00 	tsteq	fp, r0, lsl #28
     498:	13010655 	movwne	r0, #5717	; 0x1655
     49c:	341f0000 	ldrcc	r0, [pc], #-0	; 4a4 <__STACKSEAL_SIZE+0x4a4>
     4a0:	3a0e0300 	bcc	3810a8 <__RAM_SIZE+0x2810a8>
     4a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     4ac:	82892000 	addhi	r2, r9, #0
     4b0:	01110101 	tsteq	r1, r1, lsl #2
     4b4:	13011331 	movwne	r1, #4913	; 0x1331
     4b8:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     4bc:	11010182 	smlabbne	r1, r2, r1, r0
     4c0:	00130101 	andseq	r0, r3, r1, lsl #2
     4c4:	82892200 	addhi	r2, r9, #0, 4
     4c8:	01110101 	tsteq	r1, r1, lsl #2
     4cc:	1d230000 	stcne	0, cr0, [r3, #-0]
     4d0:	11133101 	tstne	r3, r1, lsl #2
     4d4:	58011201 	stmdapl	r1, {r0, r9, ip}
     4d8:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     4dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     4e0:	00052400 	andeq	r2, r5, r0, lsl #8
     4e4:	06021331 			; <UNDEFINED> instruction: 0x06021331
     4e8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     4ec:	00052500 	andeq	r2, r5, r0, lsl #10
     4f0:	00001331 	andeq	r1, r0, r1, lsr r3
     4f4:	31003426 	tstcc	r0, r6, lsr #8
     4f8:	b7060213 	smladlt	r6, r3, r2, r0
     4fc:	00000642 	andeq	r0, r0, r2, asr #12
     500:	31011d27 	tstcc	r1, r7, lsr #26
     504:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     508:	01110542 	tsteq	r1, r2, asr #10
     50c:	0b580112 	bleq	160095c <__RAM_SIZE+0x150095c>
     510:	0b570559 	bleq	15c1a7c <__RAM_SIZE+0x14c1a7c>
     514:	00001301 	andeq	r1, r0, r1, lsl #6
     518:	01828928 	orreq	r8, r2, r8, lsr #18
     51c:	93011101 	movwls	r1, #4353	; 0x1101
     520:	13010a42 	movwne	r0, #6722	; 0x1a42
     524:	17290000 	strne	r0, [r9, -r0]!
     528:	3a0b0b01 	bcc	2c3134 <__RAM_SIZE+0x1c3134>
     52c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     530:	0013010b 	andseq	r0, r3, fp, lsl #2
     534:	000d2a00 	andeq	r2, sp, r0, lsl #20
     538:	0b3a0803 	bleq	e8254c <__RAM_SIZE+0xd8254c>
     53c:	0b39053b 	bleq	e41a30 <__RAM_SIZE+0xd41a30>
     540:	00001349 	andeq	r1, r0, r9, asr #6
     544:	0182892b 	orreq	r8, r2, fp, lsr #18
     548:	31011100 	mrscc	r1, (UNDEF: 17)
     54c:	2c000013 	stccs	0, cr0, [r0], {19}
     550:	0e03012e 	adfeqsp	f0, f3, #0.5
     554:	0b3b0b3a 	bleq	ec3244 <__RAM_SIZE+0xdc3244>
     558:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     55c:	01111349 	tsteq	r1, r9, asr #6
     560:	06400112 			; <UNDEFINED> instruction: 0x06400112
     564:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     568:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     56c:	08030005 	stmdaeq	r3, {r0, r2}
     570:	0b3b0b3a 	bleq	ec3260 <__RAM_SIZE+0xdc3260>
     574:	13490b39 	movtne	r0, #39737	; 0x9b39
     578:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     57c:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
     580:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     584:	0b3b0b3a 	bleq	ec3274 <__RAM_SIZE+0xdc3274>
     588:	13490b39 	movtne	r0, #39737	; 0x9b39
     58c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     590:	2f000006 	svccs	0x00000006
     594:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     598:	0b3b0b3a 	bleq	ec3288 <__RAM_SIZE+0xdc3288>
     59c:	13490b39 	movtne	r0, #39737	; 0x9b39
     5a0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5a4:	30000006 	andcc	r0, r0, r6
     5a8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5ac:	0b3b0b3a 	bleq	ec329c <__RAM_SIZE+0xdc329c>
     5b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     5b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5b8:	31000006 	tstcc	r0, r6
     5bc:	0e03012e 	adfeqsp	f0, f3, #0.5
     5c0:	0b3b0b3a 	bleq	ec32b0 <__RAM_SIZE+0xdc32b0>
     5c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5c8:	01111349 	tsteq	r1, r9, asr #6
     5cc:	0a400112 	beq	1000a1c <__RAM_SIZE+0xf00a1c>
     5d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     5d4:	32000013 	andcc	r0, r0, #19
     5d8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     5dc:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     5e0:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     5e4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     5e8:	000b570b 	andeq	r5, fp, fp, lsl #14
     5ec:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
     5f0:	0b3a0e03 	bleq	e83e04 <__RAM_SIZE+0xd83e04>
     5f4:	0b390b3b 	bleq	e432e8 <__RAM_SIZE+0xd432e8>
     5f8:	13490c27 	movtne	r0, #39975	; 0x9c27
     5fc:	13010b20 	movwne	r0, #6944	; 0x1b20
     600:	05340000 	ldreq	r0, [r4, #-0]!
     604:	3a080300 	bcc	20120c <__RAM_SIZE+0x10120c>
     608:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     60c:	0013490b 	andseq	r4, r3, fp, lsl #18
     610:	00053500 	andeq	r3, r5, r0, lsl #10
     614:	0b3a0e03 	bleq	e83e28 <__RAM_SIZE+0xd83e28>
     618:	0b390b3b 	bleq	e4330c <__RAM_SIZE+0xd4330c>
     61c:	00001349 	andeq	r1, r0, r9, asr #6
     620:	03003436 	movweq	r3, #1078	; 0x436
     624:	3b0b3a08 	blcc	2cee4c <__RAM_SIZE+0x1cee4c>
     628:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     62c:	37000013 	smladcc	r0, r3, r0, r0
     630:	0e03012e 	adfeqsp	f0, f3, #0.5
     634:	0b3b0b3a 	bleq	ec3324 <__RAM_SIZE+0xdc3324>
     638:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     63c:	01120111 	tsteq	r2, r1, lsl r1
     640:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
     644:	0013010c 	andseq	r0, r3, ip, lsl #2
     648:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
     64c:	0b3a0e03 	bleq	e83e60 <__RAM_SIZE+0xd83e60>
     650:	0b390b3b 	bleq	e43344 <__RAM_SIZE+0xd43344>
     654:	01110c27 	tsteq	r1, r7, lsr #24
     658:	06400112 			; <UNDEFINED> instruction: 0x06400112
     65c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     660:	39000013 	stmdbcc	r0, {r0, r1, r4}
     664:	0e03012e 	adfeqsp	f0, f3, #0.5
     668:	0b3b0b3a 	bleq	ec3358 <__RAM_SIZE+0xdc3358>
     66c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     670:	01120111 	tsteq	r2, r1, lsl r1
     674:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     678:	0013010c 	andseq	r0, r3, ip, lsl #2
     67c:	00053a00 	andeq	r3, r5, r0, lsl #20
     680:	0b3a0e03 	bleq	e83e94 <__RAM_SIZE+0xd83e94>
     684:	0b390b3b 	bleq	e43378 <__RAM_SIZE+0xd43378>
     688:	0a021349 	beq	853b4 <__HEAP_SIZE+0x843b4>
     68c:	053b0000 	ldreq	r0, [fp, #-0]!
     690:	3a080300 	bcc	201298 <__RAM_SIZE+0x101298>
     694:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     698:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     69c:	3c00000a 	stccc	0, cr0, [r0], {10}
     6a0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5f0 <__STACKSEAL_SIZE+0x5f0>
     6a4:	40870c3c 	addmi	r0, r7, ip, lsr ip
     6a8:	000e030e 	andeq	r0, lr, lr, lsl #6
     6ac:	002e3d00 	eoreq	r3, lr, r0, lsl #26
     6b0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6b4:	030e4087 	movweq	r4, #57479	; 0xe087
     6b8:	3b0b3a0e 	blcc	2ceef8 <__RAM_SIZE+0x1ceef8>
     6bc:	000b390b 	andeq	r3, fp, fp, lsl #18
     6c0:	11010000 	mrsne	r0, (UNDEF: 1)
     6c4:	130e2501 	movwne	r2, #58625	; 0xe501
     6c8:	1b0e030b 	blne	3812fc <__RAM_SIZE+0x2812fc>
     6cc:	1106550e 	tstne	r6, lr, lsl #10
     6d0:	10015201 	andne	r5, r1, r1, lsl #4
     6d4:	02000006 	andeq	r0, r0, #6
     6d8:	0b0b0024 	bleq	2c0770 <__RAM_SIZE+0x1c0770>
     6dc:	0e030b3e 	vmoveq.16	d3[0], r0
     6e0:	16030000 	strne	r0, [r3], -r0
     6e4:	3a0e0300 	bcc	3812ec <__RAM_SIZE+0x2812ec>
     6e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6ec:	0013490b 	andseq	r4, r3, fp, lsl #18
     6f0:	00240400 	eoreq	r0, r4, r0, lsl #8
     6f4:	0b3e0b0b 	bleq	f83328 <__RAM_SIZE+0xe83328>
     6f8:	00000803 	andeq	r0, r0, r3, lsl #16
     6fc:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     700:	06000013 			; <UNDEFINED> instruction: 0x06000013
     704:	0b0b000f 	bleq	2c0748 <__RAM_SIZE+0x1c0748>
     708:	00001349 	andeq	r1, r0, r9, asr #6
     70c:	3f012e07 	svccc	0x00012e07
     710:	3a0e030c 	bcc	381348 <__RAM_SIZE+0x281348>
     714:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     718:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     71c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     720:	97064001 	strls	r4, [r6, -r1]
     724:	13010c42 	movwne	r0, #7234	; 0x1c42
     728:	05080000 	streq	r0, [r8, #-0]
     72c:	3a0e0300 	bcc	381334 <__RAM_SIZE+0x281334>
     730:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     734:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     738:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     73c:	34090000 	strcc	r0, [r9], #-0
     740:	3a080300 	bcc	201348 <__RAM_SIZE+0x101348>
     744:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     748:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     74c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     750:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
     754:	11000182 	smlabbne	r0, r2, r1, r0
     758:	00133101 	andseq	r3, r3, r1, lsl #2
     75c:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
     760:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     764:	0b3b0b3a 	bleq	ec3454 <__RAM_SIZE+0xdc3454>
     768:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     76c:	01120111 	tsteq	r2, r1, lsl r1
     770:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     774:	0013010c 	andseq	r0, r3, ip, lsl #2
     778:	82890c00 	addhi	r0, r9, #0, 24
     77c:	01110101 	tsteq	r1, r1, lsl #2
     780:	00001331 	andeq	r1, r0, r1, lsr r3
     784:	01828a0d 	orreq	r8, r2, sp, lsl #20
     788:	910a0200 	mrsls	r0, R10_fiq
     78c:	00000a42 	andeq	r0, r0, r2, asr #20
     790:	3f002e0e 	svccc	0x00002e0e
     794:	3a0e030c 	bcc	3813cc <__RAM_SIZE+0x2813cc>
     798:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     79c:	110c270b 	tstne	ip, fp, lsl #14
     7a0:	40011201 	andmi	r1, r1, r1, lsl #4
     7a4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7a8:	340f0000 	strcc	r0, [pc], #-0	; 7b0 <__STACKSEAL_SIZE+0x7b0>
     7ac:	3a0e0300 	bcc	3813b4 <__RAM_SIZE+0x2813b4>
     7b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     7b8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     7bc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     7c0:	030c3f00 	movweq	r3, #52992	; 0xcf00
     7c4:	3b0b3a0e 	blcc	2cf004 <__RAM_SIZE+0x1cf004>
     7c8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     7cc:	1113490c 	tstne	r3, ip, lsl #18
     7d0:	40011201 	andmi	r1, r1, r1, lsl #4
     7d4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7d8:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     7dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
     7e0:	3b0b3a0e 	blcc	2cf020 <__RAM_SIZE+0x1cf020>
     7e4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     7e8:	1113490c 	tstne	r3, ip, lsl #18
     7ec:	40011201 	andmi	r1, r1, r1, lsl #4
     7f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7f4:	00001301 	andeq	r1, r0, r1, lsl #6
     7f8:	03000512 	movweq	r0, #1298	; 0x512
     7fc:	3b0b3a08 	blcc	2cf024 <__RAM_SIZE+0x1cf024>
     800:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     804:	b7060213 	smladlt	r6, r3, r2, r0
     808:	00000642 	andeq	r0, r0, r2, asr #12
     80c:	3f002e13 	svccc	0x00002e13
     810:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     814:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     818:	0b3b0b3a 	bleq	ec3508 <__RAM_SIZE+0xdc3508>
     81c:	00000b39 	andeq	r0, r0, r9, lsr fp
     820:	01110100 	tsteq	r1, r0, lsl #2
     824:	0b130e25 	bleq	4c40c0 <__RAM_SIZE+0x3c40c0>
     828:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     82c:	01110655 	tsteq	r1, r5, asr r6
     830:	06100152 			; <UNDEFINED> instruction: 0x06100152
     834:	24020000 	strcs	r0, [r2], #-0
     838:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     83c:	000e030b 	andeq	r0, lr, fp, lsl #6
     840:	00160300 	andseq	r0, r6, r0, lsl #6
     844:	0b3a0e03 	bleq	e84058 <__RAM_SIZE+0xd84058>
     848:	0b390b3b 	bleq	e4353c <__RAM_SIZE+0xd4353c>
     84c:	00001349 	andeq	r1, r0, r9, asr #6
     850:	0b002404 	bleq	9868 <__HEAP_SIZE+0x8868>
     854:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     858:	05000008 	streq	r0, [r0, #-8]
     85c:	13490035 	movtne	r0, #36917	; 0x9035
     860:	13060000 	movwne	r0, #24576	; 0x6000
     864:	0b0e0301 	bleq	381470 <__RAM_SIZE+0x281470>
     868:	3b0b3a0b 	blcc	2cf09c <__RAM_SIZE+0x1cf09c>
     86c:	010b390b 	tsteq	fp, fp, lsl #18
     870:	07000013 	smladeq	r0, r3, r0, r0
     874:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     878:	0b3b0b3a 	bleq	ec3568 <__RAM_SIZE+0xdc3568>
     87c:	13490b39 	movtne	r0, #39737	; 0x9b39
     880:	00000a38 	andeq	r0, r0, r8, lsr sl
     884:	03000d08 	movweq	r0, #3336	; 0xd08
     888:	3b0b3a0e 	blcc	2cf0c8 <__RAM_SIZE+0x1cf0c8>
     88c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     890:	000a3813 	andeq	r3, sl, r3, lsl r8
     894:	00340900 	eorseq	r0, r4, r0, lsl #18
     898:	0b3a0e03 	bleq	e840ac <__RAM_SIZE+0xd840ac>
     89c:	0b390b3b 	bleq	e43590 <__RAM_SIZE+0xd43590>
     8a0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 784 <__STACKSEAL_SIZE+0x784>
     8a4:	00000c3c 	andeq	r0, r0, ip, lsr ip
     8a8:	0300340a 	movweq	r3, #1034	; 0x40a
     8ac:	3b0b3a0e 	blcc	2cf0ec <__RAM_SIZE+0x1cf0ec>
     8b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8b4:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
     8b8:	0b00000a 	bleq	8e8 <__Vectors_Size+0x128>
     8bc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 80c <__Vectors_Size+0x4c>
     8c0:	0b3a0e03 	bleq	e840d4 <__RAM_SIZE+0xd840d4>
     8c4:	0b39053b 	bleq	e41db8 <__RAM_SIZE+0xd41db8>
     8c8:	13490c27 	movtne	r0, #39975	; 0x9c27
     8cc:	01120111 	tsteq	r2, r1, lsl r1
     8d0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     8d4:	0c00000c 	stceq	0, cr0, [r0], {12}
     8d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 828 <__Vectors_Size+0x68>
     8dc:	0b3a0e03 	bleq	e840f0 <__RAM_SIZE+0xd840f0>
     8e0:	0b39053b 	bleq	e41dd4 <__RAM_SIZE+0xd41dd4>
     8e4:	13490c27 	movtne	r0, #39975	; 0x9c27
     8e8:	01120111 	tsteq	r2, r1, lsl r1
     8ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     8f0:	0013010c 	andseq	r0, r3, ip, lsl #2
     8f4:	011d0d00 	tsteq	sp, r0, lsl #26
     8f8:	01521331 	cmpeq	r2, r1, lsr r3
     8fc:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     900:	58011201 	stmdapl	r1, {r0, r9, ip}
     904:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     908:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     90c:	13310034 	teqne	r1, #52	; 0x34
     910:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     914:	0f000006 	svceq	0x00000006
     918:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 868 <__Vectors_Size+0xa8>
     91c:	0b3a0e03 	bleq	e84130 <__RAM_SIZE+0xd84130>
     920:	0b390b3b 	bleq	e43614 <__RAM_SIZE+0xd43614>
     924:	13490c27 	movtne	r0, #39975	; 0x9c27
     928:	01120111 	tsteq	r2, r1, lsl r1
     92c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     930:	0013010c 	andseq	r0, r3, ip, lsl #2
     934:	00051000 	andeq	r1, r5, r0
     938:	0b3a0e03 	bleq	e8414c <__RAM_SIZE+0xd8414c>
     93c:	0b390b3b 	bleq	e43630 <__RAM_SIZE+0xd43630>
     940:	06021349 	streq	r1, [r2], -r9, asr #6
     944:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     948:	00341100 	eorseq	r1, r4, r0, lsl #2
     94c:	0b3a0e03 	bleq	e84160 <__RAM_SIZE+0xd84160>
     950:	0b390b3b 	bleq	e43644 <__RAM_SIZE+0xd43644>
     954:	06021349 	streq	r1, [r2], -r9, asr #6
     958:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     95c:	00341200 	eorseq	r1, r4, r0, lsl #4
     960:	0b3a0803 	bleq	e82974 <__RAM_SIZE+0xd82974>
     964:	0b390b3b 	bleq	e43658 <__RAM_SIZE+0xd43658>
     968:	06021349 	streq	r1, [r2], -r9, asr #6
     96c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     970:	82891300 	addhi	r1, r9, #0, 6
     974:	01110101 	tsteq	r1, r1, lsl #2
     978:	13011331 	movwne	r1, #4913	; 0x1331
     97c:	8a140000 	bhi	500984 <__RAM_SIZE+0x400984>
     980:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     984:	0a42910a 	beq	10a4db4 <__RAM_SIZE+0xfa4db4>
     988:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
     98c:	11000182 	smlabbne	r0, r2, r1, r0
     990:	00133101 	andseq	r3, r3, r1, lsl #2
     994:	000f1600 	andeq	r1, pc, r0, lsl #12
     998:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     99c:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     9a0:	030c3f01 	movweq	r3, #52993	; 0xcf01
     9a4:	3b0b3a0e 	blcc	2cf1e4 <__RAM_SIZE+0x1cf1e4>
     9a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9ac:	1201110c 	andne	r1, r1, #12, 2
     9b0:	97064001 	strls	r4, [r6, -r1]
     9b4:	13010c42 	movwne	r0, #7234	; 0x1c42
     9b8:	34180000 	ldrcc	r0, [r8], #-0
     9bc:	3a0e0300 	bcc	3815c4 <__RAM_SIZE+0x2815c4>
     9c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     9c8:	1900000a 	stmdbne	r0, {r1, r3}
     9cc:	01018289 	smlabbeq	r1, r9, r2, r8
     9d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9d4:	011a0000 	tsteq	sl, r0
     9d8:	01134901 	tsteq	r3, r1, lsl #18
     9dc:	1b000013 	blne	a30 <__Vectors_Size+0x270>
     9e0:	13490021 	movtne	r0, #36897	; 0x9021
     9e4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     9e8:	03012e1c 	movweq	r2, #7708	; 0x1e1c
     9ec:	3b0b3a0e 	blcc	2cf22c <__RAM_SIZE+0x1cf22c>
     9f0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9f4:	1201110c 	andne	r1, r1, #12, 2
     9f8:	97064001 	strls	r4, [r6, -r1]
     9fc:	13010c42 	movwne	r0, #7234	; 0x1c42
     a00:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     a04:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a08:	3b0b3a0e 	blcc	2cf248 <__RAM_SIZE+0x1cf248>
     a0c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     a10:	010c3c0c 	tsteq	ip, ip, lsl #24
     a14:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     a18:	13490005 	movtne	r0, #36869	; 0x9005
     a1c:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     a20:	3a0e0301 	bcc	38162c <__RAM_SIZE+0x28162c>
     a24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a28:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a2c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a30:	970a4001 	strls	r4, [sl, -r1]
     a34:	13010c42 	movwne	r0, #7234	; 0x1c42
     a38:	05200000 	streq	r0, [r0, #-0]!
     a3c:	3a080300 	bcc	201644 <__RAM_SIZE+0x101644>
     a40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a48:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a4c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     a50:	3a0e0301 	bcc	38165c <__RAM_SIZE+0x28165c>
     a54:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a58:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a5c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a60:	97064001 	strls	r4, [r6, -r1]
     a64:	13010c42 	movwne	r0, #7234	; 0x1c42
     a68:	0b220000 	bleq	880a70 <__RAM_SIZE+0x780a70>
     a6c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     a70:	23000001 	movwcs	r0, #1
     a74:	0e03012e 	adfeqsp	f0, f3, #0.5
     a78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a7c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a80:	0b201349 	bleq	8057ac <__RAM_SIZE+0x7057ac>
     a84:	00001301 	andeq	r1, r0, r1, lsl #6
     a88:	03003424 	movweq	r3, #1060	; 0x424
     a8c:	3b0b3a0e 	blcc	2cf2cc <__RAM_SIZE+0x1cf2cc>
     a90:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a94:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     a98:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 9e8 <__Vectors_Size+0x228>
     a9c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     aa0:	3a0e030e 	bcc	3816e0 <__RAM_SIZE+0x2816e0>
     aa4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     aa8:	002e2600 	eoreq	r2, lr, r0, lsl #12
     aac:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     ab0:	030e4087 	movweq	r4, #57479	; 0xe087
     ab4:	3b0b3a0e 	blcc	2cf2f4 <__RAM_SIZE+0x1cf2f4>
     ab8:	000b390b 	andeq	r3, fp, fp, lsl #18
     abc:	11010000 	mrsne	r0, (UNDEF: 1)
     ac0:	130e2501 	movwne	r2, #58625	; 0xe501
     ac4:	1b0e030b 	blne	3816f8 <__RAM_SIZE+0x2816f8>
     ac8:	1106550e 	tstne	r6, lr, lsl #10
     acc:	10015201 	andne	r5, r1, r1, lsl #4
     ad0:	02000006 	andeq	r0, r0, #6
     ad4:	0b0b0024 	bleq	2c0b6c <__RAM_SIZE+0x1c0b6c>
     ad8:	0e030b3e 	vmoveq.16	d3[0], r0
     adc:	24030000 	strcs	r0, [r3], #-0
     ae0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ae4:	0008030b 	andeq	r0, r8, fp, lsl #6
     ae8:	012e0400 			; <UNDEFINED> instruction: 0x012e0400
     aec:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     af0:	0b3b0b3a 	bleq	ec37e0 <__RAM_SIZE+0xdc37e0>
     af4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     af8:	01120111 	tsteq	r2, r1, lsl r1
     afc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     b00:	0013010c 	andseq	r0, r3, ip, lsl #2
     b04:	00050500 	andeq	r0, r5, r0, lsl #10
     b08:	0b3a0e03 	bleq	e8431c <__RAM_SIZE+0xd8431c>
     b0c:	0b390b3b 	bleq	e43800 <__RAM_SIZE+0xd43800>
     b10:	06021349 	streq	r1, [r2], -r9, asr #6
     b14:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     b18:	82890600 	addhi	r0, r9, #0, 12
     b1c:	01110101 	tsteq	r1, r1, lsl #2
     b20:	13011331 	movwne	r1, #4913	; 0x1331
     b24:	8a070000 	bhi	1c0b2c <__RAM_SIZE+0xc0b2c>
     b28:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     b2c:	0a42910a 	beq	10a4f5c <__RAM_SIZE+0xfa4f5c>
     b30:	89080000 	stmdbhi	r8, {}	; <UNPREDICTABLE>
     b34:	11010182 	smlabbne	r1, r2, r1, r0
     b38:	00133101 	andseq	r3, r3, r1, lsl #2
     b3c:	002e0900 	eoreq	r0, lr, r0, lsl #18
     b40:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     b44:	030e4087 	movweq	r4, #57479	; 0xe087
     b48:	3b0b3a0e 	blcc	2cf388 <__RAM_SIZE+0x1cf388>
     b4c:	0a00000b 	beq	b80 <__Vectors_Size+0x3c0>
     b50:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; aa0 <__Vectors_Size+0x2e0>
     b54:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b58:	3a0e030e 	bcc	381798 <__RAM_SIZE+0x281798>
     b5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b60:	0000000b 	andeq	r0, r0, fp
     b64:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     b68:	030b130e 	movweq	r1, #45838	; 0xb30e
     b6c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     b70:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     b74:	00061001 	andeq	r1, r6, r1
     b78:	00240200 	eoreq	r0, r4, r0, lsl #4
     b7c:	0b3e0b0b 	bleq	f837b0 <__RAM_SIZE+0xe837b0>
     b80:	00000e03 	andeq	r0, r0, r3, lsl #28
     b84:	0b002403 	bleq	9b98 <__HEAP_SIZE+0x8b98>
     b88:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b8c:	04000008 	streq	r0, [r0], #-8
     b90:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b94:	0b3b0b3a 	bleq	ec3884 <__RAM_SIZE+0xdc3884>
     b98:	13490b39 	movtne	r0, #39737	; 0x9b39
     b9c:	0f050000 	svceq	0x00050000
     ba0:	000b0b00 	andeq	r0, fp, r0, lsl #22
     ba4:	00260600 	eoreq	r0, r6, r0, lsl #12
     ba8:	00001349 	andeq	r1, r0, r9, asr #6
     bac:	03011307 	movweq	r1, #4871	; 0x1307
     bb0:	3a0b0b0e 	bcc	2c37f0 <__RAM_SIZE+0x1c37f0>
     bb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bb8:	0013010b 	andseq	r0, r3, fp, lsl #2
     bbc:	000d0800 	andeq	r0, sp, r0, lsl #16
     bc0:	0b3a0e03 	bleq	e843d4 <__RAM_SIZE+0xd843d4>
     bc4:	0b390b3b 	bleq	e438b8 <__RAM_SIZE+0xd438b8>
     bc8:	0a381349 	beq	e058f4 <__RAM_SIZE+0xd058f4>
     bcc:	0f090000 	svceq	0x00090000
     bd0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     bd4:	0a000013 	beq	c28 <__Vectors_Size+0x468>
     bd8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b28 <__Vectors_Size+0x368>
     bdc:	0b3a0e03 	bleq	e843f0 <__RAM_SIZE+0xd843f0>
     be0:	0b390b3b 	bleq	e438d4 <__RAM_SIZE+0xd438d4>
     be4:	13490c27 	movtne	r0, #39975	; 0x9c27
     be8:	01120111 	tsteq	r2, r1, lsl r1
     bec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     bf0:	0013010c 	andseq	r0, r3, ip, lsl #2
     bf4:	00050b00 	andeq	r0, r5, r0, lsl #22
     bf8:	0b3a0e03 	bleq	e8440c <__RAM_SIZE+0xd8440c>
     bfc:	0b390b3b 	bleq	e438f0 <__RAM_SIZE+0xd438f0>
     c00:	06021349 	streq	r1, [r2], -r9, asr #6
     c04:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c08:	00340c00 	eorseq	r0, r4, r0, lsl #24
     c0c:	0b3a0e03 	bleq	e84420 <__RAM_SIZE+0xd84420>
     c10:	0b390b3b 	bleq	e43904 <__RAM_SIZE+0xd43904>
     c14:	06021349 	streq	r1, [r2], -r9, asr #6
     c18:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c1c:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     c20:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c24:	0b3b0b3a 	bleq	ec3914 <__RAM_SIZE+0xdc3914>
     c28:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c2c:	01120111 	tsteq	r2, r1, lsl r1
     c30:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     c34:	0013010c 	andseq	r0, r3, ip, lsl #2
     c38:	00050e00 	andeq	r0, r5, r0, lsl #28
     c3c:	0b3a0e03 	bleq	e84450 <__RAM_SIZE+0xd84450>
     c40:	0b390b3b 	bleq	e43934 <__RAM_SIZE+0xd43934>
     c44:	0a021349 	beq	85970 <__HEAP_SIZE+0x84970>
     c48:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     c4c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c50:	3b0b3a0e 	blcc	2cf490 <__RAM_SIZE+0x1cf490>
     c54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c58:	1201110c 	andne	r1, r1, #12, 2
     c5c:	970a4001 	strls	r4, [sl, -r1]
     c60:	13010c42 	movwne	r0, #7234	; 0x1c42
     c64:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     c68:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c6c:	3b0b3a0e 	blcc	2cf4ac <__RAM_SIZE+0x1cf4ac>
     c70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c74:	1201110c 	andne	r1, r1, #12, 2
     c78:	970a4001 	strls	r4, [sl, -r1]
     c7c:	00000c42 	andeq	r0, r0, r2, asr #24
     c80:	01110100 	tsteq	r1, r0, lsl #2
     c84:	0b130e25 	bleq	4c4520 <__RAM_SIZE+0x3c4520>
     c88:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     c8c:	01110655 	tsteq	r1, r5, asr r6
     c90:	06100152 			; <UNDEFINED> instruction: 0x06100152
     c94:	16020000 	strne	r0, [r2], -r0
     c98:	3a0e0300 	bcc	3818a0 <__RAM_SIZE+0x2818a0>
     c9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ca0:	0013490b 	andseq	r4, r3, fp, lsl #18
     ca4:	00240300 	eoreq	r0, r4, r0, lsl #6
     ca8:	0b3e0b0b 	bleq	f838dc <__RAM_SIZE+0xe838dc>
     cac:	00000e03 	andeq	r0, r0, r3, lsl #28
     cb0:	0b002404 	bleq	9cc8 <__HEAP_SIZE+0x8cc8>
     cb4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     cb8:	05000008 	streq	r0, [r0, #-8]
     cbc:	0b0b000f 	bleq	2c0d00 <__RAM_SIZE+0x1c0d00>
     cc0:	26060000 	strcs	r0, [r6], -r0
     cc4:	00134900 	andseq	r4, r3, r0, lsl #18
     cc8:	000f0700 	andeq	r0, pc, r0, lsl #14
     ccc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     cd0:	26080000 	strcs	r0, [r8], -r0
     cd4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     cd8:	13490035 	movtne	r0, #36917	; 0x9035
     cdc:	130a0000 	movwne	r0, #40960	; 0xa000
     ce0:	0b0e0301 	bleq	3818ec <__RAM_SIZE+0x2818ec>
     ce4:	3b0b3a0b 	blcc	2cf518 <__RAM_SIZE+0x1cf518>
     ce8:	010b3905 	tsteq	fp, r5, lsl #18
     cec:	0b000013 	bleq	d40 <__Vectors_Size+0x580>
     cf0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     cf4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cf8:	13490b39 	movtne	r0, #39737	; 0x9b39
     cfc:	00000a38 	andeq	r0, r0, r8, lsr sl
     d00:	4901010c 	stmdbmi	r1, {r2, r3, r8}
     d04:	00130113 	andseq	r0, r3, r3, lsl r1
     d08:	00210d00 	eoreq	r0, r1, r0, lsl #26
     d0c:	0b2f1349 	bleq	bc5a38 <__RAM_SIZE+0xac5a38>
     d10:	160e0000 	strne	r0, [lr], -r0
     d14:	3a0e0300 	bcc	38191c <__RAM_SIZE+0x28191c>
     d18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d1c:	0013490b 	andseq	r4, r3, fp, lsl #18
     d20:	01170f00 	tsteq	r7, r0, lsl #30
     d24:	0b3a0b0b 	bleq	e83958 <__RAM_SIZE+0xd83958>
     d28:	0b39053b 	bleq	e4221c <__RAM_SIZE+0xd4221c>
     d2c:	00001301 	andeq	r1, r0, r1, lsl #6
     d30:	03000d10 	movweq	r0, #3344	; 0xd10
     d34:	3b0b3a0e 	blcc	2cf574 <__RAM_SIZE+0x1cf574>
     d38:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d3c:	11000013 	tstne	r0, r3, lsl r0
     d40:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d44:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d48:	13490b39 	movtne	r0, #39737	; 0x9b39
     d4c:	00000a38 	andeq	r0, r0, r8, lsr sl
     d50:	03011312 	movweq	r1, #4882	; 0x1312
     d54:	3a0b0b0e 	bcc	2c3994 <__RAM_SIZE+0x1c3994>
     d58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d5c:	0013010b 	andseq	r0, r3, fp, lsl #2
     d60:	000d1300 	andeq	r1, sp, r0, lsl #6
     d64:	0b3a0e03 	bleq	e84578 <__RAM_SIZE+0xd84578>
     d68:	0b390b3b 	bleq	e43a5c <__RAM_SIZE+0xd43a5c>
     d6c:	0a381349 	beq	e05a98 <__RAM_SIZE+0xd05a98>
     d70:	13140000 	tstne	r4, #0
     d74:	3c0e0300 	stccc	3, cr0, [lr], {-0}
     d78:	1500000c 	strne	r0, [r0, #-12]
     d7c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d80:	0b3b0b3a 	bleq	ec3a70 <__RAM_SIZE+0xdc3a70>
     d84:	13490b39 	movtne	r0, #39737	; 0x9b39
     d88:	00000a38 	andeq	r0, r0, r8, lsr sl
     d8c:	0b011716 	bleq	469ec <__HEAP_SIZE+0x459ec>
     d90:	3b0b3a0b 	blcc	2cf5c4 <__RAM_SIZE+0x1cf5c4>
     d94:	010b390b 	tsteq	fp, fp, lsl #18
     d98:	17000013 	smladne	r0, r3, r0, r0
     d9c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     da0:	0b3b0b3a 	bleq	ec3a90 <__RAM_SIZE+0xdc3a90>
     da4:	13490b39 	movtne	r0, #39737	; 0x9b39
     da8:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     dac:	3a0e0301 	bcc	3819b8 <__RAM_SIZE+0x2819b8>
     db0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     db4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     db8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     dbc:	97064001 	strls	r4, [r6, -r1]
     dc0:	13010c42 	movwne	r0, #7234	; 0x1c42
     dc4:	05190000 	ldreq	r0, [r9, #-0]
     dc8:	3a0e0300 	bcc	3819d0 <__RAM_SIZE+0x2819d0>
     dcc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     dd0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     dd4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     dd8:	341a0000 	ldrcc	r0, [sl], #-0
     ddc:	3a0e0300 	bcc	3819e4 <__RAM_SIZE+0x2819e4>
     de0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     de4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     de8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     dec:	0b1b0000 	bleq	6c0df4 <__RAM_SIZE+0x5c0df4>
     df0:	00065501 	andeq	r5, r6, r1, lsl #10
     df4:	010b1c00 	tsteq	fp, r0, lsl #24
     df8:	01120111 	tsteq	r2, r1, lsl r1
     dfc:	00001301 	andeq	r1, r0, r1, lsl #6
     e00:	0182891d 	orreq	r8, r2, sp, lsl r9
     e04:	31011100 	mrscc	r1, (UNDEF: 17)
     e08:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     e0c:	01018289 	smlabbeq	r1, r9, r2, r8
     e10:	13310111 	teqne	r1, #1073741828	; 0x40000004
     e14:	00001301 	andeq	r1, r0, r1, lsl #6
     e18:	01828a1f 	orreq	r8, r2, pc, lsl sl
     e1c:	910a0200 	mrsls	r0, R10_fiq
     e20:	00000a42 	andeq	r0, r0, r2, asr #20
     e24:	01828920 	orreq	r8, r2, r0, lsr #18
     e28:	31011101 	tstcc	r1, r1, lsl #2
     e2c:	21000013 	tstcs	r0, r3, lsl r0
     e30:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d80 <__Vectors_Size+0x5c0>
     e34:	0b3a0e03 	bleq	e84648 <__RAM_SIZE+0xd84648>
     e38:	0b39053b 	bleq	e4232c <__RAM_SIZE+0xd4232c>
     e3c:	13490c27 	movtne	r0, #39975	; 0x9c27
     e40:	01120111 	tsteq	r2, r1, lsl r1
     e44:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     e48:	0013010c 	andseq	r0, r3, ip, lsl #2
     e4c:	00342200 	eorseq	r2, r4, r0, lsl #4
     e50:	0b3a0e03 	bleq	e84664 <__RAM_SIZE+0xd84664>
     e54:	0b39053b 	bleq	e42348 <__RAM_SIZE+0xd42348>
     e58:	0a021349 	beq	85b84 <__HEAP_SIZE+0x84b84>
     e5c:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     e60:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e64:	3b0b3a0e 	blcc	2cf6a4 <__RAM_SIZE+0x1cf6a4>
     e68:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e6c:	1201110c 	andne	r1, r1, #12, 2
     e70:	97064001 	strls	r4, [r6, -r1]
     e74:	13010c42 	movwne	r0, #7234	; 0x1c42
     e78:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     e7c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e80:	3b0b3a0e 	blcc	2cf6c0 <__RAM_SIZE+0x1cf6c0>
     e84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e88:	1113490c 	tstne	r3, ip, lsl #18
     e8c:	40011201 	andmi	r1, r1, r1, lsl #4
     e90:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     e94:	00001301 	andeq	r1, r0, r1, lsl #6
     e98:	03003425 	movweq	r3, #1061	; 0x425
     e9c:	3b0b3a0e 	blcc	2cf6dc <__RAM_SIZE+0x1cf6dc>
     ea0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     ea4:	000b1c13 	andeq	r1, fp, r3, lsl ip
     ea8:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     eac:	0b3a0e03 	bleq	e846c0 <__RAM_SIZE+0xd846c0>
     eb0:	0b39053b 	bleq	e423a4 <__RAM_SIZE+0xd423a4>
     eb4:	01110c27 	tsteq	r1, r7, lsr #24
     eb8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ebc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ec0:	27000013 	smladcs	r0, r3, r0, r0
     ec4:	0e03012e 	adfeqsp	f0, f3, #0.5
     ec8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ecc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ed0:	01111349 	tsteq	r1, r9, asr #6
     ed4:	0a400112 	beq	1001324 <__RAM_SIZE+0xf01324>
     ed8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     edc:	28000013 	stmdacs	r0, {r0, r1, r4}
     ee0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     ee4:	00001301 	andeq	r1, r0, r1, lsl #6
     ee8:	11010b29 	tstne	r1, r9, lsr #22
     eec:	00011201 	andeq	r1, r1, r1, lsl #4
     ef0:	00052a00 	andeq	r2, r5, r0, lsl #20
     ef4:	0b3a0e03 	bleq	e84708 <__RAM_SIZE+0xd84708>
     ef8:	0b39053b 	bleq	e423ec <__RAM_SIZE+0xd423ec>
     efc:	0a021349 	beq	85c28 <__HEAP_SIZE+0x84c28>
     f00:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     f04:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f08:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f0c:	0b3a0e03 	bleq	e84720 <__RAM_SIZE+0xd84720>
     f10:	0b39053b 	bleq	e42404 <__RAM_SIZE+0xd42404>
     f14:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     f18:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f1c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f20:	0b3a0e03 	bleq	e84734 <__RAM_SIZE+0xd84734>
     f24:	0b390b3b 	bleq	e43c18 <__RAM_SIZE+0xd43c18>
     f28:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
     f2c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f30:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f34:	0b3a0e03 	bleq	e84748 <__RAM_SIZE+0xd84748>
     f38:	00000b3b 	andeq	r0, r0, fp, lsr fp
     f3c:	01110100 	tsteq	r1, r0, lsl #2
     f40:	0b130e25 	bleq	4c47dc <__RAM_SIZE+0x3c47dc>
     f44:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     f48:	01110655 	tsteq	r1, r5, asr r6
     f4c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     f50:	16020000 	strne	r0, [r2], -r0
     f54:	3a0e0300 	bcc	381b5c <__RAM_SIZE+0x281b5c>
     f58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f5c:	0013490b 	andseq	r4, r3, fp, lsl #18
     f60:	00260300 	eoreq	r0, r6, r0, lsl #6
     f64:	00001349 	andeq	r1, r0, r9, asr #6
     f68:	0b002404 	bleq	9f80 <__HEAP_SIZE+0x8f80>
     f6c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     f70:	0500000e 	streq	r0, [r0, #-14]
     f74:	0b0b0024 	bleq	2c100c <__RAM_SIZE+0x1c100c>
     f78:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     f7c:	0f060000 	svceq	0x00060000
     f80:	000b0b00 	andeq	r0, fp, r0, lsl #22
     f84:	000f0700 	andeq	r0, pc, r0, lsl #14
     f88:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     f8c:	35080000 	strcc	r0, [r8, #-0]
     f90:	00134900 	andseq	r4, r3, r0, lsl #18
     f94:	01150900 	tsteq	r5, r0, lsl #18
     f98:	13010c27 	movwne	r0, #7207	; 0x1c27
     f9c:	050a0000 	streq	r0, [sl, #-0]
     fa0:	00134900 	andseq	r4, r3, r0, lsl #18
     fa4:	01130b00 	tsteq	r3, r0, lsl #22
     fa8:	0b0b0e03 	bleq	2c47bc <__RAM_SIZE+0x1c47bc>
     fac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fb0:	13010b39 	movwne	r0, #6969	; 0x1b39
     fb4:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     fb8:	3a0e0300 	bcc	381bc0 <__RAM_SIZE+0x281bc0>
     fbc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     fc0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     fc4:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
     fc8:	13490101 	movtne	r0, #37121	; 0x9101
     fcc:	00001301 	andeq	r1, r0, r1, lsl #6
     fd0:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     fd4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     fd8:	00160f00 	andseq	r0, r6, r0, lsl #30
     fdc:	0b3a0e03 	bleq	e847f0 <__RAM_SIZE+0xd847f0>
     fe0:	0b39053b 	bleq	e424d4 <__RAM_SIZE+0xd424d4>
     fe4:	00001349 	andeq	r1, r0, r9, asr #6
     fe8:	03011310 	movweq	r1, #4880	; 0x1310
     fec:	3a0b0b0e 	bcc	2c3c2c <__RAM_SIZE+0x1c3c2c>
     ff0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ff4:	0013010b 	andseq	r0, r3, fp, lsl #2
     ff8:	000d1100 	andeq	r1, sp, r0, lsl #2
     ffc:	0b3a0e03 	bleq	e84810 <__RAM_SIZE+0xd84810>
    1000:	0b390b3b 	bleq	e43cf4 <__RAM_SIZE+0xd43cf4>
    1004:	0a381349 	beq	e05d30 <__RAM_SIZE+0xd05d30>
    1008:	15120000 	ldrne	r0, [r2, #-0]
    100c:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
    1010:	00130113 	andseq	r0, r3, r3, lsl r1
    1014:	01041300 	mrseq	r1, LR_abt
    1018:	0b0b0b3e 	bleq	2c3d18 <__RAM_SIZE+0x1c3d18>
    101c:	0b3a1349 	bleq	e85d48 <__RAM_SIZE+0xd85d48>
    1020:	0b390b3b 	bleq	e43d14 <__RAM_SIZE+0xd43d14>
    1024:	00001301 	andeq	r1, r0, r1, lsl #6
    1028:	03002814 	movweq	r2, #2068	; 0x814
    102c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1030:	00341500 	eorseq	r1, r4, r0, lsl #10
    1034:	0b3a0e03 	bleq	e84848 <__RAM_SIZE+0xd84848>
    1038:	0b39053b 	bleq	e4252c <__RAM_SIZE+0xd4252c>
    103c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; f20 <__Vectors_Size+0x760>
    1040:	00000a02 	andeq	r0, r0, r2, lsl #20
    1044:	03003416 	movweq	r3, #1046	; 0x416
    1048:	3b0b3a0e 	blcc	2cf888 <__RAM_SIZE+0x1cf888>
    104c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1050:	000a0213 	andeq	r0, sl, r3, lsl r2
    1054:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1058:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    105c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1060:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1064:	01120111 	tsteq	r2, r1, lsl r1
    1068:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    106c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1070:	00341800 	eorseq	r1, r4, r0, lsl #16
    1074:	0b3a0e03 	bleq	e84888 <__RAM_SIZE+0xd84888>
    1078:	0b39053b 	bleq	e4256c <__RAM_SIZE+0xd4256c>
    107c:	06021349 	streq	r1, [r2], -r9, asr #6
    1080:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1084:	00051900 	andeq	r1, r5, r0, lsl #18
    1088:	0b3a0e03 	bleq	e8489c <__RAM_SIZE+0xd8489c>
    108c:	0b39053b 	bleq	e42580 <__RAM_SIZE+0xd42580>
    1090:	0a021349 	beq	85dbc <__HEAP_SIZE+0x84dbc>
    1094:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1098:	3a0e0301 	bcc	381ca4 <__RAM_SIZE+0x281ca4>
    109c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a0:	110c270b 	tstne	ip, fp, lsl #14
    10a4:	40011201 	andmi	r1, r1, r1, lsl #4
    10a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    10ac:	00001301 	andeq	r1, r0, r1, lsl #6
    10b0:	0300051b 	movweq	r0, #1307	; 0x51b
    10b4:	3b0b3a0e 	blcc	2cf8f4 <__RAM_SIZE+0x1cf8f4>
    10b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10bc:	b7060213 	smladlt	r6, r3, r2, r0
    10c0:	00000642 	andeq	r0, r0, r2, asr #12
    10c4:	11010b1c 	tstne	r1, ip, lsl fp
    10c8:	01011201 	tsteq	r1, r1, lsl #4
    10cc:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    10d0:	00018289 	andeq	r8, r1, r9, lsl #5
    10d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10d8:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
    10dc:	11010182 	smlabbne	r1, r2, r1, r0
    10e0:	01133101 	tsteq	r3, r1, lsl #2
    10e4:	1f000013 	svcne	0x00000013
    10e8:	0001828a 	andeq	r8, r1, sl, lsl #5
    10ec:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    10f0:	2000000a 	andcs	r0, r0, sl
    10f4:	01018289 	smlabbeq	r1, r9, r2, r8
    10f8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10fc:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1100:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1104:	3b0b3a0e 	blcc	2cf944 <__RAM_SIZE+0x1cf944>
    1108:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    110c:	1113490c 	tstne	r3, ip, lsl #18
    1110:	40011201 	andmi	r1, r1, r1, lsl #4
    1114:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1118:	00001301 	andeq	r1, r0, r1, lsl #6
    111c:	3f012e22 	svccc	0x00012e22
    1120:	3a0e030c 	bcc	381d58 <__RAM_SIZE+0x281d58>
    1124:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1128:	110c270b 	tstne	ip, fp, lsl #14
    112c:	40011201 	andmi	r1, r1, r1, lsl #4
    1130:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1134:	00001301 	andeq	r1, r0, r1, lsl #6
    1138:	55010b23 	strpl	r0, [r1, #-2851]	; 0xfffff4dd
    113c:	00130106 	andseq	r0, r3, r6, lsl #2
    1140:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    1144:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1148:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    114c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1150:	01111349 	tsteq	r1, r9, asr #6
    1154:	0a400112 	beq	10015a4 <__RAM_SIZE+0xf015a4>
    1158:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    115c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1164:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1168:	13490b39 	movtne	r0, #39737	; 0x9b39
    116c:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1170:	03002e26 	movweq	r2, #3622	; 0xe26
    1174:	3b0b3a0e 	blcc	2cf9b4 <__RAM_SIZE+0x1cf9b4>
    1178:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    117c:	1201110c 	andne	r1, r1, #12, 2
    1180:	970a4001 	strls	r4, [sl, -r1]
    1184:	00000c42 	andeq	r0, r0, r2, asr #24
    1188:	03012e27 	movweq	r2, #7719	; 0x1e27
    118c:	3b0b3a0e 	blcc	2cf9cc <__RAM_SIZE+0x1cf9cc>
    1190:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1194:	1113490c 	tstne	r3, ip, lsl #18
    1198:	40011201 	andmi	r1, r1, r1, lsl #4
    119c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    11a0:	00001301 	andeq	r1, r0, r1, lsl #6
    11a4:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
    11a8:	29000006 	stmdbcs	r0, {r1, r2}
    11ac:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 10fc <__HEAP_SIZE+0xfc>
    11b0:	0b3a0e03 	bleq	e849c4 <__RAM_SIZE+0xd849c4>
    11b4:	0b39053b 	bleq	e426a8 <__RAM_SIZE+0xd426a8>
    11b8:	01110c27 	tsteq	r1, r7, lsr #24
    11bc:	0a400112 	beq	100160c <__RAM_SIZE+0xf0160c>
    11c0:	000c4297 	muleq	ip, r7, r2
    11c4:	82892a00 	addhi	r2, r9, #0, 20
    11c8:	01110101 	tsteq	r1, r1, lsl #2
    11cc:	0b2b0000 	bleq	ac11d4 <__RAM_SIZE+0x9c11d4>
    11d0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    11d4:	2c000001 	stccs	0, cr0, [r0], {1}
    11d8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1128 <__HEAP_SIZE+0x128>
    11dc:	0b3a0e03 	bleq	e849f0 <__RAM_SIZE+0xd849f0>
    11e0:	0b39053b 	bleq	e426d4 <__RAM_SIZE+0xd426d4>
    11e4:	13490c27 	movtne	r0, #39975	; 0x9c27
    11e8:	01120111 	tsteq	r2, r1, lsl r1
    11ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    11f0:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    11f4:	0e03012e 	adfeqsp	f0, f3, #0.5
    11f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1200:	01111349 	tsteq	r1, r9, asr #6
    1204:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1208:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    120c:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    1210:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1214:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1218:	13490b39 	movtne	r0, #39737	; 0x9b39
    121c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1220:	2f000006 	svccs	0x00000006
    1224:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1174 <__HEAP_SIZE+0x174>
    1228:	40870c3c 	addmi	r0, r7, ip, lsr ip
    122c:	3a0e030e 	bcc	381e6c <__RAM_SIZE+0x281e6c>
    1230:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1234:	3000000b 	andcc	r0, r0, fp
    1238:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1188 <__HEAP_SIZE+0x188>
    123c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1240:	3a0e030e 	bcc	381e80 <__RAM_SIZE+0x281e80>
    1244:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1248:	3100000b 	tstcc	r0, fp
    124c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 119c <__HEAP_SIZE+0x19c>
    1250:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1254:	3a0e030e 	bcc	381e94 <__RAM_SIZE+0x281e94>
    1258:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    125c:	11010000 	mrsne	r0, (UNDEF: 1)
    1260:	130e2501 	movwne	r2, #58625	; 0xe501
    1264:	1b0e030b 	blne	381e98 <__RAM_SIZE+0x281e98>
    1268:	1106550e 	tstne	r6, lr, lsl #10
    126c:	10015201 	andne	r5, r1, r1, lsl #4
    1270:	02000006 	andeq	r0, r0, #6
    1274:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1278:	0b3b0b3a 	bleq	ec3f68 <__RAM_SIZE+0xdc3f68>
    127c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1280:	24030000 	strcs	r0, [r3], #-0
    1284:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1288:	000e030b 	andeq	r0, lr, fp, lsl #6
    128c:	00240400 	eoreq	r0, r4, r0, lsl #8
    1290:	0b3e0b0b 	bleq	f83ec4 <__RAM_SIZE+0xe83ec4>
    1294:	00000803 	andeq	r0, r0, r3, lsl #16
    1298:	0b000f05 	bleq	4eb4 <__HEAP_SIZE+0x3eb4>
    129c:	0600000b 	streq	r0, [r0], -fp
    12a0:	13490026 	movtne	r0, #36902	; 0x9026
    12a4:	0f070000 	svceq	0x00070000
    12a8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    12ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
    12b0:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    12b4:	00001301 	andeq	r1, r0, r1, lsl #6
    12b8:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    12bc:	0a000013 	beq	1310 <__HEAP_SIZE+0x310>
    12c0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    12c4:	0b3a0b0b 	bleq	e83ef8 <__RAM_SIZE+0xd83ef8>
    12c8:	0b39053b 	bleq	e427bc <__RAM_SIZE+0xd427bc>
    12cc:	00001301 	andeq	r1, r0, r1, lsl #6
    12d0:	03000d0b 	movweq	r0, #3339	; 0xd0b
    12d4:	3b0b3a0e 	blcc	2cfb14 <__RAM_SIZE+0x1cfb14>
    12d8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    12dc:	000a3813 	andeq	r3, sl, r3, lsl r8
    12e0:	01010c00 	tsteq	r1, r0, lsl #24
    12e4:	13011349 	movwne	r1, #4937	; 0x1349
    12e8:	210d0000 	mrscs	r0, (UNDEF: 13)
    12ec:	2f134900 	svccs	0x00134900
    12f0:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    12f4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    12f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12fc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1300:	170f0000 	strne	r0, [pc, -r0]
    1304:	3a0b0b01 	bcc	2c3f10 <__RAM_SIZE+0x1c3f10>
    1308:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    130c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1310:	000d1000 	andeq	r1, sp, r0
    1314:	0b3a0e03 	bleq	e84b28 <__RAM_SIZE+0xd84b28>
    1318:	0b39053b 	bleq	e4280c <__RAM_SIZE+0xd4280c>
    131c:	00001349 	andeq	r1, r0, r9, asr #6
    1320:	03000d11 	movweq	r0, #3345	; 0xd11
    1324:	3b0b3a08 	blcc	2cfb4c <__RAM_SIZE+0x1cfb4c>
    1328:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    132c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1330:	01131200 	tsteq	r3, r0, lsl #4
    1334:	0b0b0e03 	bleq	2c4b48 <__RAM_SIZE+0x1c4b48>
    1338:	0b3b0b3a 	bleq	ec4028 <__RAM_SIZE+0xdc4028>
    133c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1340:	0d130000 	ldceq	0, cr0, [r3, #-0]
    1344:	3a0e0300 	bcc	381f4c <__RAM_SIZE+0x281f4c>
    1348:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    134c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1350:	1400000a 	strne	r0, [r0], #-10
    1354:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    1358:	00000c3c 	andeq	r0, r0, ip, lsr ip
    135c:	0b011715 	bleq	46fb8 <__HEAP_SIZE+0x45fb8>
    1360:	3b0b3a0b 	blcc	2cfb94 <__RAM_SIZE+0x1cfb94>
    1364:	010b390b 	tsteq	fp, fp, lsl #18
    1368:	16000013 			; <UNDEFINED> instruction: 0x16000013
    136c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1370:	0b3b0b3a 	bleq	ec4060 <__RAM_SIZE+0xdc4060>
    1374:	13490b39 	movtne	r0, #39737	; 0x9b39
    1378:	0d170000 	ldceq	0, cr0, [r7, #-0]
    137c:	3a080300 	bcc	201f84 <__RAM_SIZE+0x101f84>
    1380:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1384:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1388:	1800000a 	stmdane	r0, {r1, r3}
    138c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1390:	0b3b0b3a 	bleq	ec4080 <__RAM_SIZE+0xdc4080>
    1394:	13490b39 	movtne	r0, #39737	; 0x9b39
    1398:	00000a02 	andeq	r0, r0, r2, lsl #20
    139c:	3f002e19 	svccc	0x00002e19
    13a0:	3a0e030c 	bcc	381fd8 <__RAM_SIZE+0x281fd8>
    13a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13a8:	110c270b 	tstne	ip, fp, lsl #14
    13ac:	40011201 	andmi	r1, r1, r1, lsl #4
    13b0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    13b4:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    13b8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    13bc:	3b0b3a0e 	blcc	2cfbfc <__RAM_SIZE+0x1cfbfc>
    13c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    13c4:	1113490c 	tstne	r3, ip, lsl #18
    13c8:	40011201 	andmi	r1, r1, r1, lsl #4
    13cc:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    13d0:	00001301 	andeq	r1, r0, r1, lsl #6
    13d4:	0300051b 	movweq	r0, #1307	; 0x51b
    13d8:	3b0b3a0e 	blcc	2cfc18 <__RAM_SIZE+0x1cfc18>
    13dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13e0:	b7060213 	smladlt	r6, r3, r2, r0
    13e4:	00000642 	andeq	r0, r0, r2, asr #12
    13e8:	0300341c 	movweq	r3, #1052	; 0x41c
    13ec:	3b0b3a0e 	blcc	2cfc2c <__RAM_SIZE+0x1cfc2c>
    13f0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13f4:	000a0213 	andeq	r0, sl, r3, lsl r2
    13f8:	00341d00 	eorseq	r1, r4, r0, lsl #26
    13fc:	0b3a0e03 	bleq	e84c10 <__RAM_SIZE+0xd84c10>
    1400:	0b39053b 	bleq	e428f4 <__RAM_SIZE+0xd428f4>
    1404:	06021349 	streq	r1, [r2], -r9, asr #6
    1408:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    140c:	82891e00 	addhi	r1, r9, #0, 28
    1410:	01110101 	tsteq	r1, r1, lsl #2
    1414:	00001331 	andeq	r1, r0, r1, lsr r3
    1418:	01828a1f 	orreq	r8, r2, pc, lsl sl
    141c:	910a0200 	mrsls	r0, R10_fiq
    1420:	00000a42 	andeq	r0, r0, r2, asr #20
    1424:	3f012e20 	svccc	0x00012e20
    1428:	3a0e030c 	bcc	382060 <__RAM_SIZE+0x282060>
    142c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1430:	110c270b 	tstne	ip, fp, lsl #14
    1434:	40011201 	andmi	r1, r1, r1, lsl #4
    1438:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    143c:	00001301 	andeq	r1, r0, r1, lsl #6
    1440:	01828921 	orreq	r8, r2, r1, lsr #18
    1444:	31011100 	mrscc	r1, (UNDEF: 17)
    1448:	22000013 	andcs	r0, r0, #19
    144c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1450:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1454:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1458:	01120111 	tsteq	r2, r1, lsl r1
    145c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1460:	0013010c 	andseq	r0, r3, ip, lsl #2
    1464:	010b2300 	mrseq	r2, (UNDEF: 59)
    1468:	01120111 	tsteq	r2, r1, lsl r1
    146c:	00001301 	andeq	r1, r0, r1, lsl #6
    1470:	01828924 	orreq	r8, r2, r4, lsr #18
    1474:	31011101 	tstcc	r1, r1, lsl #2
    1478:	00130113 	andseq	r0, r3, r3, lsl r1
    147c:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    1480:	0b3a0e03 	bleq	e84c94 <__RAM_SIZE+0xd84c94>
    1484:	0b39053b 	bleq	e42978 <__RAM_SIZE+0xd42978>
    1488:	01110c27 	tsteq	r1, r7, lsr #24
    148c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1490:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    1494:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1498:	01018289 	smlabbeq	r1, r9, r2, r8
    149c:	13010111 	movwne	r0, #4369	; 0x1111
    14a0:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    14a4:	3a0e0301 	bcc	3820b0 <__RAM_SIZE+0x2820b0>
    14a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14b4:	97064001 	strls	r4, [r6, -r1]
    14b8:	13010c42 	movwne	r0, #7234	; 0x1c42
    14bc:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    14c0:	3a0e0301 	bcc	3820cc <__RAM_SIZE+0x2820cc>
    14c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14d0:	970a4001 	strls	r4, [sl, -r1]
    14d4:	13010c42 	movwne	r0, #7234	; 0x1c42
    14d8:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    14dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    14e0:	3b0b3a0e 	blcc	2cfd20 <__RAM_SIZE+0x1cfd20>
    14e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    14e8:	1113490c 	tstne	r3, ip, lsl #18
    14ec:	40011201 	andmi	r1, r1, r1, lsl #4
    14f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    14f4:	00001301 	andeq	r1, r0, r1, lsl #6
    14f8:	0300052a 	movweq	r0, #1322	; 0x52a
    14fc:	3b0b3a0e 	blcc	2cfd3c <__RAM_SIZE+0x1cfd3c>
    1500:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1504:	000a0213 	andeq	r0, sl, r3, lsl r2
    1508:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    150c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1510:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1514:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1518:	01111349 	tsteq	r1, r9, asr #6
    151c:	0a400112 	beq	100196c <__RAM_SIZE+0xf0196c>
    1520:	000c4297 	muleq	ip, r7, r2
    1524:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    1528:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    152c:	0b3b0b3a 	bleq	ec421c <__RAM_SIZE+0xdc421c>
    1530:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1534:	01111349 	tsteq	r1, r9, asr #6
    1538:	06400112 			; <UNDEFINED> instruction: 0x06400112
    153c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1540:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1544:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1548:	0b3b0b3a 	bleq	ec4238 <__RAM_SIZE+0xdc4238>
    154c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1554:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1558:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14a8 <__HEAP_SIZE+0x4a8>
    155c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1560:	3a0e030e 	bcc	3821a0 <__RAM_SIZE+0x2821a0>
    1564:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1568:	2f00000b 	svccs	0x0000000b
    156c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14bc <__HEAP_SIZE+0x4bc>
    1570:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1574:	3a0e030e 	bcc	3821b4 <__RAM_SIZE+0x2821b4>
    1578:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    157c:	0000000b 	andeq	r0, r0, fp
    1580:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1584:	030b130e 	movweq	r1, #45838	; 0xb30e
    1588:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    158c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1590:	00061001 	andeq	r1, r6, r1
    1594:	00160200 	andseq	r0, r6, r0, lsl #4
    1598:	0b3a0e03 	bleq	e84dac <__RAM_SIZE+0xd84dac>
    159c:	0b390b3b 	bleq	e44290 <__RAM_SIZE+0xd44290>
    15a0:	00001349 	andeq	r1, r0, r9, asr #6
    15a4:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    15a8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    15ac:	0b0b0024 	bleq	2c1644 <__RAM_SIZE+0x1c1644>
    15b0:	0e030b3e 	vmoveq.16	d3[0], r0
    15b4:	24050000 	strcs	r0, [r5], #-0
    15b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    15bc:	0008030b 	andeq	r0, r8, fp, lsl #6
    15c0:	000f0600 	andeq	r0, pc, r0, lsl #12
    15c4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    15c8:	0b000f07 	bleq	51ec <__HEAP_SIZE+0x41ec>
    15cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    15d0:	01130800 	tsteq	r3, r0, lsl #16
    15d4:	0b0b0e03 	bleq	2c4de8 <__RAM_SIZE+0x1c4de8>
    15d8:	0b3b0b3a 	bleq	ec42c8 <__RAM_SIZE+0xdc42c8>
    15dc:	13010b39 	movwne	r0, #6969	; 0x1b39
    15e0:	0d090000 	stceq	0, cr0, [r9, #-0]
    15e4:	3a0e0300 	bcc	3821ec <__RAM_SIZE+0x2821ec>
    15e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15ec:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    15f0:	0a00000a 	beq	1620 <__HEAP_SIZE+0x620>
    15f4:	13490101 	movtne	r0, #37121	; 0x9101
    15f8:	00001301 	andeq	r1, r0, r1, lsl #6
    15fc:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    1600:	00052f13 	andeq	r2, r5, r3, lsl pc
    1604:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1608:	0b3a0e03 	bleq	e84e1c <__RAM_SIZE+0xd84e1c>
    160c:	0b390b3b 	bleq	e44300 <__RAM_SIZE+0xd44300>
    1610:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 14f4 <__HEAP_SIZE+0x4f4>
    1614:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1618:	0300340d 	movweq	r3, #1037	; 0x40d
    161c:	3b0b3a0e 	blcc	2cfe5c <__RAM_SIZE+0x1cfe5c>
    1620:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1624:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1628:	00340e00 	eorseq	r0, r4, r0, lsl #28
    162c:	0b3a0e03 	bleq	e84e40 <__RAM_SIZE+0xd84e40>
    1630:	0b390b3b 	bleq	e44324 <__RAM_SIZE+0xd44324>
    1634:	0a021349 	beq	86360 <__HEAP_SIZE+0x85360>
    1638:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    163c:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1640:	3b0b3a0e 	blcc	2cfe80 <__RAM_SIZE+0x1cfe80>
    1644:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1648:	1201110c 	andne	r1, r1, #12, 2
    164c:	970a4001 	strls	r4, [sl, -r1]
    1650:	00000c42 	andeq	r0, r0, r2, asr #24
    1654:	3f012e10 	svccc	0x00012e10
    1658:	3a0e030c 	bcc	382290 <__RAM_SIZE+0x282290>
    165c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1660:	110c270b 	tstne	ip, fp, lsl #14
    1664:	40011201 	andmi	r1, r1, r1, lsl #4
    1668:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    166c:	00001301 	andeq	r1, r0, r1, lsl #6
    1670:	03000511 	movweq	r0, #1297	; 0x511
    1674:	3b0b3a0e 	blcc	2cfeb4 <__RAM_SIZE+0x1cfeb4>
    1678:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    167c:	b7060213 	smladlt	r6, r3, r2, r0
    1680:	00000642 	andeq	r0, r0, r2, asr #12
    1684:	03003412 	movweq	r3, #1042	; 0x412
    1688:	3b0b3a0e 	blcc	2cfec8 <__RAM_SIZE+0x1cfec8>
    168c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1690:	b7060213 	smladlt	r6, r3, r2, r0
    1694:	00000642 	andeq	r0, r0, r2, asr #12
    1698:	01828913 	orreq	r8, r2, r3, lsl r9
    169c:	31011100 	mrscc	r1, (UNDEF: 17)
    16a0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    16a4:	0e03012e 	adfeqsp	f0, f3, #0.5
    16a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16ac:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    16b0:	01120111 	tsteq	r2, r1, lsl r1
    16b4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    16b8:	0013010c 	andseq	r0, r3, ip, lsl #2
    16bc:	00341500 	eorseq	r1, r4, r0, lsl #10
    16c0:	0b3a0803 	bleq	e836d4 <__RAM_SIZE+0xd836d4>
    16c4:	0b39053b 	bleq	e42bb8 <__RAM_SIZE+0xd42bb8>
    16c8:	06021349 	streq	r1, [r2], -r9, asr #6
    16cc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    16d0:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    16d4:	0b3a0e03 	bleq	e84ee8 <__RAM_SIZE+0xd84ee8>
    16d8:	0b39053b 	bleq	e42bcc <__RAM_SIZE+0xd42bcc>
    16dc:	01110c27 	tsteq	r1, r7, lsr #24
    16e0:	0a400112 	beq	1001b30 <__RAM_SIZE+0xf01b30>
    16e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    16e8:	17000013 	smladne	r0, r3, r0, r0
    16ec:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 163c <__HEAP_SIZE+0x63c>
    16f0:	0b3a0e03 	bleq	e84f04 <__RAM_SIZE+0xd84f04>
    16f4:	0b39053b 	bleq	e42be8 <__RAM_SIZE+0xd42be8>
    16f8:	13490c27 	movtne	r0, #39975	; 0x9c27
    16fc:	01120111 	tsteq	r2, r1, lsl r1
    1700:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1704:	0013010c 	andseq	r0, r3, ip, lsl #2
    1708:	82891800 	addhi	r1, r9, #0, 16
    170c:	01110101 	tsteq	r1, r1, lsl #2
    1710:	13011331 	movwne	r1, #4913	; 0x1331
    1714:	8a190000 	bhi	64171c <__RAM_SIZE+0x54171c>
    1718:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    171c:	0a42910a 	beq	10a5b4c <__RAM_SIZE+0xfa5b4c>
    1720:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    1724:	11010182 	smlabbne	r1, r2, r1, r0
    1728:	00133101 	andseq	r3, r3, r1, lsl #2
    172c:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    1730:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1734:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1738:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    173c:	01111349 	tsteq	r1, r9, asr #6
    1740:	0a400112 	beq	1001b90 <__RAM_SIZE+0xf01b90>
    1744:	000c4297 	muleq	ip, r7, r2
    1748:	00051c00 	andeq	r1, r5, r0, lsl #24
    174c:	0b3a0803 	bleq	e83760 <__RAM_SIZE+0xd83760>
    1750:	0b39053b 	bleq	e42c44 <__RAM_SIZE+0xd42c44>
    1754:	06021349 	streq	r1, [r2], -r9, asr #6
    1758:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    175c:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    1760:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1764:	0b3b0b3a 	bleq	ec4454 <__RAM_SIZE+0xdc4454>
    1768:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    176c:	01111349 	tsteq	r1, r9, asr #6
    1770:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1774:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1778:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    177c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1780:	0b3b0b3a 	bleq	ec4470 <__RAM_SIZE+0xdc4470>
    1784:	13490b39 	movtne	r0, #39737	; 0x9b39
    1788:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    178c:	1f000006 	svcne	0x00000006
    1790:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1794:	0b3b0b3a 	bleq	ec4484 <__RAM_SIZE+0xdc4484>
    1798:	13490b39 	movtne	r0, #39737	; 0x9b39
    179c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    17a0:	20000006 	andcs	r0, r0, r6
    17a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 16f4 <__HEAP_SIZE+0x6f4>
    17a8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17ac:	3a0e030e 	bcc	3823ec <__RAM_SIZE+0x2823ec>
    17b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17b4:	2100000b 	tstcs	r0, fp
    17b8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1708 <__HEAP_SIZE+0x708>
    17bc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17c0:	3a0e030e 	bcc	382400 <__RAM_SIZE+0x282400>
    17c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17c8:	2200000b 	andcs	r0, r0, #11
    17cc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 171c <__HEAP_SIZE+0x71c>
    17d0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17d4:	3a0e030e 	bcc	382414 <__RAM_SIZE+0x282414>
    17d8:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    17dc:	11010000 	mrsne	r0, (UNDEF: 1)
    17e0:	130e2501 	movwne	r2, #58625	; 0xe501
    17e4:	1b0e030b 	blne	382418 <__RAM_SIZE+0x282418>
    17e8:	1106550e 	tstne	r6, lr, lsl #10
    17ec:	10015201 	andne	r5, r1, r1, lsl #4
    17f0:	02000006 	andeq	r0, r0, #6
    17f4:	0b0b0024 	bleq	2c188c <__RAM_SIZE+0x1c188c>
    17f8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    17fc:	24030000 	strcs	r0, [r3], #-0
    1800:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1804:	000e030b 	andeq	r0, lr, fp, lsl #6
    1808:	00160400 	andseq	r0, r6, r0, lsl #8
    180c:	0b3a0e03 	bleq	e85020 <__RAM_SIZE+0xd85020>
    1810:	0b390b3b 	bleq	e44504 <__RAM_SIZE+0xd44504>
    1814:	00001349 	andeq	r1, r0, r9, asr #6
    1818:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    181c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1820:	0b0b000f 	bleq	2c1864 <__RAM_SIZE+0x1c1864>
    1824:	00001349 	andeq	r1, r0, r9, asr #6
    1828:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    182c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1830:	00050800 	andeq	r0, r5, r0, lsl #16
    1834:	00001349 	andeq	r1, r0, r9, asr #6
    1838:	0b000f09 	bleq	5464 <__HEAP_SIZE+0x4464>
    183c:	0a00000b 	beq	1870 <__HEAP_SIZE+0x870>
    1840:	0b3e0104 	bleq	f81c58 <__RAM_SIZE+0xe81c58>
    1844:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1848:	0b3b0b3a 	bleq	ec4538 <__RAM_SIZE+0xdc4538>
    184c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1850:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    1854:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1858:	0c00000b 	stceq	0, cr0, [r0], {11}
    185c:	13490026 	movtne	r0, #36902	; 0x9026
    1860:	150d0000 	strne	r0, [sp, #-0]
    1864:	000c2700 	andeq	r2, ip, r0, lsl #14
    1868:	00340e00 	eorseq	r0, r4, r0, lsl #28
    186c:	0b3a0e03 	bleq	e85080 <__RAM_SIZE+0xd85080>
    1870:	0b39053b 	bleq	e42d64 <__RAM_SIZE+0xd42d64>
    1874:	0a021349 	beq	865a0 <__HEAP_SIZE+0x855a0>
    1878:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    187c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1880:	3b0b3a0e 	blcc	2d00c0 <__RAM_SIZE+0x1d00c0>
    1884:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1888:	1113490c 	tstne	r3, ip, lsl #18
    188c:	40011201 	andmi	r1, r1, r1, lsl #4
    1890:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1894:	00001301 	andeq	r1, r0, r1, lsl #6
    1898:	03003410 	movweq	r3, #1040	; 0x410
    189c:	3b0b3a0e 	blcc	2d00dc <__RAM_SIZE+0x1d00dc>
    18a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18a4:	b7060213 	smladlt	r6, r3, r2, r0
    18a8:	00000642 	andeq	r0, r0, r2, asr #12
    18ac:	03003411 	movweq	r3, #1041	; 0x411
    18b0:	3b0b3a0e 	blcc	2d00f0 <__RAM_SIZE+0x1d00f0>
    18b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18b8:	000b1c13 	andeq	r1, fp, r3, lsl ip
    18bc:	002e1200 	eoreq	r1, lr, r0, lsl #4
    18c0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    18c4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    18c8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    18cc:	01120111 	tsteq	r2, r1, lsl r1
    18d0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    18d4:	1300000c 	movwne	r0, #12
    18d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1828 <__HEAP_SIZE+0x828>
    18dc:	0b3a0e03 	bleq	e850f0 <__RAM_SIZE+0xd850f0>
    18e0:	0b39053b 	bleq	e42dd4 <__RAM_SIZE+0xd42dd4>
    18e4:	13490c27 	movtne	r0, #39975	; 0x9c27
    18e8:	01120111 	tsteq	r2, r1, lsl r1
    18ec:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    18f0:	0013010c 	andseq	r0, r3, ip, lsl #2
    18f4:	010b1400 	tsteq	fp, r0, lsl #8
    18f8:	00001301 	andeq	r1, r0, r1, lsl #6
    18fc:	03003415 	movweq	r3, #1045	; 0x415
    1900:	3b0b3a0e 	blcc	2d0140 <__RAM_SIZE+0x1d0140>
    1904:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1908:	16000013 			; <UNDEFINED> instruction: 0x16000013
    190c:	00018289 	andeq	r8, r1, r9, lsl #5
    1910:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1914:	05170000 	ldreq	r0, [r7, #-0]
    1918:	3a0e0300 	bcc	382520 <__RAM_SIZE+0x282520>
    191c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1920:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1924:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1928:	05180000 	ldreq	r0, [r8, #-0]
    192c:	3a0e0300 	bcc	382534 <__RAM_SIZE+0x282534>
    1930:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1934:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1938:	1900000a 	stmdbne	r0, {r1, r3}
    193c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 188c <__HEAP_SIZE+0x88c>
    1940:	0b3a0e03 	bleq	e85154 <__RAM_SIZE+0xd85154>
    1944:	0b39053b 	bleq	e42e38 <__RAM_SIZE+0xd42e38>
    1948:	01110c27 	tsteq	r1, r7, lsr #24
    194c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1950:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1954:	1a000013 	bne	19a8 <__HEAP_SIZE+0x9a8>
    1958:	01018289 	smlabbeq	r1, r9, r2, r8
    195c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1960:	8a1b0000 	bhi	6c1968 <__RAM_SIZE+0x5c1968>
    1964:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1968:	0a42910a 	beq	10a5d98 <__RAM_SIZE+0xfa5d98>
    196c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1970:	3a0e0301 	bcc	38257c <__RAM_SIZE+0x28257c>
    1974:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1978:	110c270b 	tstne	ip, fp, lsl #14
    197c:	40011201 	andmi	r1, r1, r1, lsl #4
    1980:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1984:	00001301 	andeq	r1, r0, r1, lsl #6
    1988:	11010b1d 	tstne	r1, sp, lsl fp
    198c:	01011201 	tsteq	r1, r1, lsl #4
    1990:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1994:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 18e4 <__HEAP_SIZE+0x8e4>
    1998:	40870c3c 	addmi	r0, r7, ip, lsr ip
    199c:	3a0e030e 	bcc	3825dc <__RAM_SIZE+0x2825dc>
    19a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19a4:	1f00000b 	svcne	0x0000000b
    19a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 18f8 <__HEAP_SIZE+0x8f8>
    19ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
    19b0:	3a0e030e 	bcc	3825f0 <__RAM_SIZE+0x2825f0>
    19b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19b8:	0000000b 	andeq	r0, r0, fp
    19bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    19c0:	030b130e 	movweq	r1, #45838	; 0xb30e
    19c4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    19c8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    19cc:	00061001 	andeq	r1, r6, r1
    19d0:	00240200 	eoreq	r0, r4, r0, lsl #4
    19d4:	0b3e0b0b 	bleq	f84608 <__RAM_SIZE+0xe84608>
    19d8:	00000e03 	andeq	r0, r0, r3, lsl #28
    19dc:	03001603 	movweq	r1, #1539	; 0x603
    19e0:	3b0b3a0e 	blcc	2d0220 <__RAM_SIZE+0x1d0220>
    19e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    19e8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    19ec:	0b0b0024 	bleq	2c1a84 <__RAM_SIZE+0x1c1a84>
    19f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    19f4:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    19f8:	030c3f00 	movweq	r3, #52992	; 0xcf00
    19fc:	3b0b3a0e 	blcc	2d023c <__RAM_SIZE+0x1d023c>
    1a00:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1a04:	1201110c 	andne	r1, r1, #12, 2
    1a08:	970a4001 	strls	r4, [sl, -r1]
    1a0c:	00000c42 	andeq	r0, r0, r2, asr #24
    1a10:	3f012e06 	svccc	0x00012e06
    1a14:	3a0e030c 	bcc	38264c <__RAM_SIZE+0x28264c>
    1a18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a1c:	110c270b 	tstne	ip, fp, lsl #14
    1a20:	40011201 	andmi	r1, r1, r1, lsl #4
    1a24:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1a28:	00001301 	andeq	r1, r0, r1, lsl #6
    1a2c:	03000507 	movweq	r0, #1287	; 0x507
    1a30:	3b0b3a0e 	blcc	2d0270 <__RAM_SIZE+0x1d0270>
    1a34:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a38:	000a0213 	andeq	r0, sl, r3, lsl r2
    1a3c:	002e0800 	eoreq	r0, lr, r0, lsl #16
    1a40:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a44:	0b3b0b3a 	bleq	ec4734 <__RAM_SIZE+0xdc4734>
    1a48:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a4c:	01111349 	tsteq	r1, r9, asr #6
    1a50:	0a400112 	beq	1001ea0 <__RAM_SIZE+0xf01ea0>
    1a54:	000c4297 	muleq	ip, r7, r2
    1a58:	002e0900 	eoreq	r0, lr, r0, lsl #18
    1a5c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a60:	0b3b0b3a 	bleq	ec4750 <__RAM_SIZE+0xdc4750>
    1a64:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a68:	01120111 	tsteq	r2, r1, lsl r1
    1a6c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1a70:	0000000c 	andeq	r0, r0, ip
    1a74:	10001101 	andne	r1, r0, r1, lsl #2
    1a78:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1a7c:	1b0e0301 	blne	382688 <__RAM_SIZE+0x282688>
    1a80:	130e250e 	movwne	r2, #58638	; 0xe50e
    1a84:	00000005 	andeq	r0, r0, r5
    1a88:	10001101 	andne	r1, r0, r1, lsl #2
    1a8c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1a90:	1b0e0301 	blne	38269c <__RAM_SIZE+0x28269c>
    1a94:	130e250e 	movwne	r2, #58638	; 0xe50e
    1a98:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	10000858 	andne	r0, r0, r8, asr r8
       4:	1000085a 	andne	r0, r0, sl, asr r8
        xReturn = pdFALSE;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	1000085a 	andne	r0, r0, sl, asr r8
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	10000884 	andne	r0, r0, r4, lsl #17
}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	085a0000 	ldmdaeq	sl, {}^	; <UNPREDICTABLE>
      28:	086e1000 	stmdaeq	lr!, {ip}^
      2c:	00021000 	andeq	r1, r2, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	086e9f30 	stmdaeq	lr!, {r4, r5, r8, r9, sl, fp, ip, pc}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08721000 	ldmdaeq	r2!, {ip}^
      38:	00011000 	andeq	r1, r1, r0
      3c:	00087251 	andeq	r7, r8, r1, asr r2
      40:	00088410 	andeq	r8, r8, r0, lsl r4
        BaseType_t xReturn = pdFAIL;
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
        printf("] \r\n");
      50:	10000800 	andne	r0, r0, r0, lsl #16
}
      54:	10000802 	andne	r0, r0, r2, lsl #16
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	10000802 	andne	r0, r0, r2, lsl #16
      60:	10000804 	andne	r0, r0, r4, lsl #16
      64:	047d0002 	ldrbteq	r0, [sp], #-2
      68:	10000804 	andne	r0, r0, r4, lsl #16
      6c:	10000828 	andne	r0, r0, r8, lsr #16
      70:	107d0002 	rsbsne	r0, sp, r2
      74:	10000828 	andne	r0, r0, r8, lsr #16
      78:	1000082c 	andne	r0, r0, ip, lsr #16
      7c:	047d0002 	ldrbteq	r0, [sp], #-2
            prvUnlockQueue( pxQueue );
      80:	1000082c 	andne	r0, r0, ip, lsr #16
            ( void ) xTaskResumeAll();
      84:	10000844 	andne	r0, r0, r4, asr #16
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	107d0002 	rsbsne	r0, sp, r2
	...
        taskENTER_CRITICAL();
      94:	00000002 	andeq	r0, r0, r2
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000000 	andeq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	10000804 	andne	r0, r0, r4, lsl #16
      a0:	1000081a 	andne	r0, r0, sl, lsl r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	9f310002 	svcls	0x00310002
        taskEXIT_CRITICAL();
      a8:	1000081a 	andne	r0, r0, sl, lsl r8
        vTaskSuspendAll();
      ac:	10000822 	andne	r0, r0, r2, lsr #16
        prvLockQueue( pxQueue );
      b0:	22500001 	subscs	r0, r0, #1
      b4:	25100008 	ldrcs	r0, [r0, #-8]
      b8:	01100008 	tsteq	r0, r8
      bc:	082c5100 	stmdaeq	ip!, {r8, ip, lr}
      c0:	082f1000 	stmdaeq	pc!, {ip}	; <UNPREDICTABLE>
      c4:	00011000 	andeq	r1, r1, r0
      c8:	00000050 	andeq	r0, r0, r0, asr r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00084400 	andeq	r4, r8, r0, lsl #8
      d4:	00084610 	andeq	r4, r8, r0, lsl r6
      d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00084600 	andeq	r4, r8, r0, lsl #12
      e0:	00085810 	andeq	r5, r8, r0, lsl r8
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      e8:	00000008 	andeq	r0, r0, r8
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00000000 	andeq	r0, r0, r0
      f0:	00000100 	andeq	r0, r0, r0, lsl #2
                prvUnlockQueue( pxQueue );
      f4:	00084400 	andeq	r4, r8, r0, lsl #8
      f8:	00084610 	andeq	r4, r8, r0, lsl r6
                if( xTaskResumeAll() == pdFALSE )
      fc:	50000110 	andpl	r0, r0, r0, lsl r1
     100:	10000846 	andne	r0, r0, r6, asr #16
                    taskYIELD_WITHIN_API();
     104:	10000858 	andne	r0, r0, r8, asr r8
                    if( xInheritanceOccurred != pdFALSE )
     108:	01f30004 	mvnseq	r0, r4
                return errQUEUE_EMPTY;
     10c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00020000 	andeq	r0, r2, r0
                        taskEXIT_CRITICAL();
     120:	0000007d 	andeq	r0, r0, sp, ror r0
     124:	00000000 	andeq	r0, r0, r0
     128:	00020000 	andeq	r0, r2, r0
     12c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     13c:	00020000 	andeq	r0, r2, r0
     140:	0000007d 	andeq	r0, r0, sp, ror r0
     144:	00000000 	andeq	r0, r0, r0
     148:	00020000 	andeq	r0, r2, r0
     14c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     15c:	00020000 	andeq	r0, r2, r0
     160:	0000007d 	andeq	r0, r0, sp, ror r0
     164:	00000000 	andeq	r0, r0, r0
     168:	00020000 	andeq	r0, r2, r0
     16c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     17c:	00020000 	andeq	r0, r2, r0
     180:	0000007d 	andeq	r0, r0, sp, ror r0
     184:	00000000 	andeq	r0, r0, r0
     188:	00020000 	andeq	r0, r2, r0
     18c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     19c:	00020000 	andeq	r0, r2, r0
     1a0:	0000007d 	andeq	r0, r0, sp, ror r0
     1a4:	00000000 	andeq	r0, r0, r0
     1a8:	00020000 	andeq	r0, r2, r0
     1ac:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1bc:	00020000 	andeq	r0, r2, r0
     1c0:	0000007d 	andeq	r0, r0, sp, ror r0
     1c4:	00000000 	andeq	r0, r0, r0
     1c8:	00020000 	andeq	r0, r2, r0
     1cc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1dc:	00020000 	andeq	r0, r2, r0
     1e0:	0000007d 	andeq	r0, r0, sp, ror r0
     1e4:	00000000 	andeq	r0, r0, r0
     1e8:	00020000 	andeq	r0, r2, r0
     1ec:	00000c7d 	andeq	r0, r0, sp, ror ip
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	00030000 	andeq	r0, r3, r0
     1f8:	0002907d 	andeq	r9, r2, sp, ror r0
     1fc:	00000000 	andeq	r0, r0, r0
     200:	02000000 	andeq	r0, r0, #0
     204:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     21c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     228:	00540001 	subseq	r0, r4, r1
     22c:	00000000 	andeq	r0, r0, r0
     230:	01000000 	mrseq	r0, (UNDEF: 0)
     234:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     248:	00010000 	andeq	r0, r1, r0
     24c:	00000050 	andeq	r0, r0, r0, asr r0
     250:	00000000 	andeq	r0, r0, r0
     254:	53000100 	movwpl	r0, #256	; 0x100
	...
     270:	00500001 	subseq	r0, r0, r1
     274:	00000000 	andeq	r0, r0, r0
     278:	01000000 	mrseq	r0, (UNDEF: 0)
     27c:	00005500 	andeq	r5, r0, r0, lsl #10
     280:	00000000 	andeq	r0, r0, r0
     284:	00010000 	andeq	r0, r1, r0
     288:	00000050 	andeq	r0, r0, r0, asr r0
     28c:	00000000 	andeq	r0, r0, r0
     290:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
     29c:	00000002 	andeq	r0, r0, r2
	...
     2a8:	9f300002 	svcls	0x00300002
	...
     2b4:	00540001 	subseq	r0, r4, r1
	...
     2c4:	02000000 	andeq	r0, r0, #0
     2c8:	00007d00 	andeq	r7, r0, r0, lsl #26
     2cc:	00000000 	andeq	r0, r0, r0
     2d0:	02000000 	andeq	r0, r0, #0
     2d4:	000c7d00 	andeq	r7, ip, r0, lsl #26
     2d8:	00000000 	andeq	r0, r0, r0
     2dc:	02000000 	andeq	r0, r0, #0
     2e0:	00187d00 	andseq	r7, r8, r0, lsl #26
     2e4:	00000000 	andeq	r0, r0, r0
     2e8:	02000000 	andeq	r0, r0, #0
     2ec:	000c7d00 	andeq	r7, ip, r0, lsl #26
     2f0:	00000000 	andeq	r0, r0, r0
     2f4:	01000000 	mrseq	r0, (UNDEF: 0)
     2f8:	01010101 	tsteq	r1, r1, lsl #2
	...
     304:	30000200 	andcc	r0, r0, r0, lsl #4
     308:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     30c:	00000000 	andeq	r0, r0, r0
     310:	34000200 	strcc	r0, [r0], #-512	; 0xfffffe00
     314:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     318:	00000000 	andeq	r0, r0, r0
     31c:	33000200 	movwcc	r0, #512	; 0x200
     320:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     330:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     33c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     340:	00000008 	andeq	r0, r0, r8
	...
     350:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     35c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     360:	00000008 	andeq	r0, r0, r8
	...
     370:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     37c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     380:	00000008 	andeq	r0, r0, r8
	...
     390:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     39c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3a0:	00000008 	andeq	r0, r0, r8
     3a4:	00000000 	andeq	r0, r0, r0
     3a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3ac:	0000000c 	andeq	r0, r0, ip
     3b0:	00000000 	andeq	r0, r0, r0
     3b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3b8:	00000028 	andeq	r0, r0, r8, lsr #32
     3bc:	00000000 	andeq	r0, r0, r0
     3c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3c4:	0000000c 	andeq	r0, r0, ip
     3c8:	00000000 	andeq	r0, r0, r0
     3cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3d0:	00000008 	andeq	r0, r0, r8
     3d4:	00000000 	andeq	r0, r0, r0
     3d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     3f0:	01000000 	mrseq	r0, (UNDEF: 0)
     3f4:	00005000 	andeq	r5, r0, r0
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	00020000 	andeq	r0, r2, r0
     400:	00005491 	muleq	r0, r1, r4
     404:	00000000 	andeq	r0, r0, r0
     408:	00040000 	andeq	r0, r4, r0
     40c:	9f5001f3 	svcls	0x005001f3
	...
     424:	00510001 	subseq	r0, r1, r1
     428:	00000000 	andeq	r0, r0, r0
     42c:	04000000 	streq	r0, [r0], #-0
     430:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     434:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     444:	01000000 	mrseq	r0, (UNDEF: 0)
     448:	00005000 	andeq	r5, r0, r0
	...
     458:	00020000 	andeq	r0, r2, r0
     45c:	0000007d 	andeq	r0, r0, sp, ror r0
     460:	00000000 	andeq	r0, r0, r0
     464:	00020000 	andeq	r0, r2, r0
     468:	0000047d 	andeq	r0, r0, sp, ror r4
     46c:	00000000 	andeq	r0, r0, r0
     470:	00020000 	andeq	r0, r2, r0
     474:	0000107d 	andeq	r1, r0, sp, ror r0
     478:	00000000 	andeq	r0, r0, r0
     47c:	00020000 	andeq	r0, r2, r0
     480:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     498:	00500001 	subseq	r0, r0, r1
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	01000000 	mrseq	r0, (UNDEF: 0)
     4a4:	00005100 	andeq	r5, r0, r0, lsl #2
     4a8:	00000000 	andeq	r0, r0, r0
     4ac:	00040000 	andeq	r0, r4, r0
     4b0:	9f5001f3 	svcls	0x005001f3
	...
     4c8:	00010000 	andeq	r0, r1, r0
     4cc:	00000051 	andeq	r0, r0, r1, asr r0
     4d0:	00000000 	andeq	r0, r0, r0
     4d4:	52000100 	andpl	r0, r0, #0, 2
	...
     4e0:	01f30004 	mvnseq	r0, r4
     4e4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     4fc:	00520001 	subseq	r0, r2, r1
     500:	00000000 	andeq	r0, r0, r0
     504:	01000000 	mrseq	r0, (UNDEF: 0)
     508:	00005300 	andeq	r5, r0, r0, lsl #6
     50c:	00000000 	andeq	r0, r0, r0
     510:	00040000 	andeq	r0, r4, r0
     514:	9f5201f3 	svcls	0x005201f3
	...
     528:	00010000 	andeq	r0, r1, r0
     52c:	00000053 	andeq	r0, r0, r3, asr r0
	...
     53c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     54c:	00000004 	andeq	r0, r0, r4
     550:	00000000 	andeq	r0, r0, r0
     554:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     558:	00000018 	andeq	r0, r0, r8, lsl r0
     55c:	00000000 	andeq	r0, r0, r0
     560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     564:	00000004 	andeq	r0, r0, r4
	...
     578:	01000000 	mrseq	r0, (UNDEF: 0)
     57c:	00005000 	andeq	r5, r0, r0
     580:	00000000 	andeq	r0, r0, r0
     584:	00010000 	andeq	r0, r1, r0
     588:	00000053 	andeq	r0, r0, r3, asr r0
     58c:	00000000 	andeq	r0, r0, r0
     590:	f3000400 	vshl.u8	d0, d0, d0
     594:	009f5001 	addseq	r5, pc, r1
	...
     5a8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     5bc:	007d0002 	rsbseq	r0, sp, r2
	...
     5c8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     5d4:	107d0002 	rsbsne	r0, sp, r2
	...
     5e0:	207d0002 	rsbscs	r0, sp, r2
	...
     5ec:	107d0002 	rsbsne	r0, sp, r2
	...
     5f8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     604:	007d0002 	rsbseq	r0, sp, r2
	...
     61c:	00010000 	andeq	r0, r1, r0
     620:	00000050 	andeq	r0, r0, r0, asr r0
     624:	00000000 	andeq	r0, r0, r0
     628:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     634:	01f30004 	mvnseq	r0, r4
     638:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     650:	00510001 	subseq	r0, r1, r1
     654:	00000000 	andeq	r0, r0, r0
     658:	01000000 	mrseq	r0, (UNDEF: 0)
     65c:	00005200 	andeq	r5, r0, r0, lsl #4
     660:	00000000 	andeq	r0, r0, r0
     664:	00040000 	andeq	r0, r4, r0
     668:	9f5101f3 	svcls	0x005101f3
	...
     67c:	00010000 	andeq	r0, r1, r0
     680:	00000050 	andeq	r0, r0, r0, asr r0
	...
     690:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     69c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	00000000 	andeq	r0, r0, r0
     6a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6ac:	00000010 	andeq	r0, r0, r0, lsl r0
     6b0:	00000000 	andeq	r0, r0, r0
     6b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6b8:	00000020 	andeq	r0, r0, r0, lsr #32
     6bc:	00000000 	andeq	r0, r0, r0
     6c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6c4:	00000010 	andeq	r0, r0, r0, lsl r0
     6c8:	00000000 	andeq	r0, r0, r0
     6cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6d0:	0000000c 	andeq	r0, r0, ip
     6d4:	00000000 	andeq	r0, r0, r0
     6d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     6f0:	01000000 	mrseq	r0, (UNDEF: 0)
     6f4:	00005000 	andeq	r5, r0, r0
     6f8:	00000000 	andeq	r0, r0, r0
     6fc:	00010000 	andeq	r0, r1, r0
     700:	00000051 	andeq	r0, r0, r1, asr r0
     704:	00000000 	andeq	r0, r0, r0
     708:	f3000400 	vshl.u8	d0, d0, d0
     70c:	009f5001 	addseq	r5, pc, r1
	...
     720:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     72c:	100019fc 	strdne	r1, [r0], -ip
     730:	100019fe 	strdne	r1, [r0], -lr
     734:	007d0002 	rsbseq	r0, sp, r2
     738:	100019fe 	strdne	r1, [r0], -lr
     73c:	10001a00 	andne	r1, r0, r0, lsl #20
     740:	107d0002 	rsbsne	r0, sp, r2
     744:	10001a00 	andne	r1, r0, r0, lsl #20
     748:	10001a02 	andne	r1, r0, r2, lsl #20
     74c:	147d0002 	ldrbtne	r0, [sp], #-2
     750:	10001a02 	andne	r1, r0, r2, lsl #20
     754:	10001a1a 	andne	r1, r0, sl, lsl sl
     758:	287d0002 	ldmdacs	sp!, {r1}^
     75c:	10001a1a 	andne	r1, r0, sl, lsl sl
     760:	10001a1e 	andne	r1, r0, lr, lsl sl
     764:	147d0002 	ldrbtne	r0, [sp], #-2
     768:	10001a1e 	andne	r1, r0, lr, lsl sl
     76c:	10001a20 	andne	r1, r0, r0, lsr #20
     770:	107d0002 	rsbsne	r0, sp, r2
     774:	10001a20 	andne	r1, r0, r0, lsr #20
     778:	10001a28 	andne	r1, r0, r8, lsr #20
     77c:	007d0002 	rsbseq	r0, sp, r2
	...
     788:	1a180000 	bne	600790 <__RAM_SIZE+0x500790>
     78c:	1a281000 	bne	a04794 <__RAM_SIZE+0x904794>
     790:	00011000 	andeq	r1, r1, r0
     794:	00000050 	andeq	r0, r0, r0, asr r0
     798:	00000000 	andeq	r0, r0, r0
     79c:	00137000 	andseq	r7, r3, r0
     7a0:	00137410 	andseq	r7, r3, r0, lsl r4
     7a4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     7a8:	00137400 	andseq	r7, r3, r0, lsl #8
     7ac:	00137610 	andseq	r7, r3, r0, lsl r6
     7b0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     7b4:	00137624 	andseq	r7, r3, r4, lsr #12
     7b8:	0019e610 	andseq	lr, r9, r0, lsl r6
     7bc:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     7c0:	19e600e0 	stmibne	r6!, {r5, r6, r7}^
     7c4:	19f01000 	ldmibne	r0!, {ip}^
     7c8:	00021000 	andeq	r1, r2, r0
     7cc:	0000247d 	andeq	r2, r0, sp, ror r4
	...
     7dc:	13700000 	cmnne	r0, #0
     7e0:	13841000 	orrne	r1, r4, #0
     7e4:	00011000 	andeq	r1, r1, r0
     7e8:	00138650 	andseq	r8, r3, r0, asr r6
     7ec:	0019cc10 	andseq	ip, r9, r0, lsl ip
     7f0:	57000110 	smladpl	r0, r0, r1, r0
     7f4:	100019cc 	andne	r1, r0, ip, asr #19
     7f8:	100019d0 	ldrdne	r1, [r0], -r0
     7fc:	d0500001 	subsle	r0, r0, r1
     800:	ea100019 	b	40086c <__RAM_SIZE+0x30086c>
     804:	01100019 	tsteq	r0, r9, lsl r0
     808:	00005700 	andeq	r5, r0, r0, lsl #14
	...
     81c:	10001370 	andne	r1, r0, r0, ror r3
     820:	10001386 	andne	r1, r0, r6, lsl #7
     824:	86510001 	ldrbhi	r0, [r1], -r1
     828:	cc100013 	ldcgt	0, cr0, [r0], {19}
     82c:	01100019 	tsteq	r0, r9, lsl r0
     830:	19cc5800 	stmibne	ip, {fp, ip, lr}^
     834:	19d01000 	ldmibne	r0, {ip}^
     838:	00011000 	andeq	r1, r1, r0
     83c:	0019d051 	andseq	sp, r9, r1, asr r0
     840:	0019ea10 	andseq	lr, r9, r0, lsl sl
     844:	58000110 	stmdapl	r0, {r4, r8}
     848:	100019ea 	andne	r1, r0, sl, ror #19
     84c:	100019f0 	strdne	r1, [r0], -r0
     850:	01f30004 	mvnseq	r0, r4
     854:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     870:	10001370 	andne	r1, r0, r0, ror r3
     874:	10001386 	andne	r1, r0, r6, lsl #7
     878:	86520001 	ldrbhi	r0, [r2], -r1
     87c:	ee100013 	mrc	0, 0, r0, cr0, cr3, {0}
     880:	01100018 	tsteq	r0, r8, lsl r0
     884:	18ee5600 	stmiane	lr!, {r9, sl, ip, lr}^
     888:	18f01000 	ldmne	r0!, {ip}^
     88c:	00011000 	andeq	r1, r1, r0
     890:	0018f05b 	andseq	pc, r8, fp, asr r0	; <UNPREDICTABLE>
     894:	00191a10 	andseq	r1, r9, r0, lsl sl
     898:	56000110 			; <UNDEFINED> instruction: 0x56000110
     89c:	1000191a 	andne	r1, r0, sl, lsl r9
     8a0:	10001944 	andne	r1, r0, r4, asr #18
     8a4:	445b0001 	ldrbmi	r0, [fp], #-1
     8a8:	cc100019 	ldcgt	0, cr0, [r0], {25}
     8ac:	01100019 	tsteq	r0, r9, lsl r0
     8b0:	19cc5600 	stmibne	ip, {r9, sl, ip, lr}^
     8b4:	19d01000 	ldmibne	r0, {ip}^
     8b8:	00011000 	andeq	r1, r1, r0
     8bc:	0019d052 	andseq	sp, r9, r2, asr r0
     8c0:	0019ea10 	andseq	lr, r9, r0, lsl sl
     8c4:	56000110 			; <UNDEFINED> instruction: 0x56000110
     8c8:	100019ea 	andne	r1, r0, sl, ror #19
     8cc:	100019f0 	strdne	r1, [r0], -r0
     8d0:	01f30004 	mvnseq	r0, r4
     8d4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
     8e0:	13700000 	cmnne	r0, #0
     8e4:	13861000 	orrne	r1, r6, #0
     8e8:	00011000 	andeq	r1, r1, r0
     8ec:	0019cc53 	andseq	ip, r9, r3, asr ip
     8f0:	0019d010 	andseq	sp, r9, r0, lsl r0
     8f4:	53000110 	movwpl	r0, #272	; 0x110
	...
     900:	00000001 	andeq	r0, r0, r1
	...
     918:	100013ac 	andne	r1, r0, ip, lsr #7
     91c:	100013ae 	andne	r1, r0, lr, lsr #7
     920:	9f300002 	svcls	0x00300002
     924:	100013ae 	andne	r1, r0, lr, lsr #7
     928:	100014ac 	andne	r1, r0, ip, lsr #9
     92c:	ac550001 	mrrcge	0, 0, r0, r5, cr1
     930:	be100014 	mrclt	0, 0, r0, cr0, cr4, {0}
     934:	01100014 	tsteq	r0, r4, lsl r0
     938:	14be5100 	ldrtne	r5, [lr], #256	; 0x100
     93c:	14c81000 	strbne	r1, [r8], #0
     940:	00011000 	andeq	r1, r1, r0
     944:	0014c855 	andseq	ip, r4, r5, asr r8
     948:	0014da10 	andseq	sp, r4, r0, lsl sl
     94c:	51000110 	tstpl	r0, r0, lsl r1
     950:	100014da 	ldrdne	r1, [r0], -sl
     954:	10001688 	andne	r1, r0, r8, lsl #13
     958:	90550001 	subsls	r0, r5, r1
     95c:	ac100016 	ldcge	0, cr0, [r0], {22}
     960:	01100016 	tsteq	r0, r6, lsl r0
     964:	16ac5500 	strtne	r5, [ip], r0, lsl #10
     968:	16cb1000 	strbne	r1, [fp], r0
     96c:	00021000 	andeq	r1, r2, r0
     970:	16d04091 			; <UNDEFINED> instruction: 0x16d04091
     974:	18341000 	ldmdane	r4!, {ip}
     978:	00011000 	andeq	r1, r1, r0
     97c:	0018a255 	andseq	sl, r8, r5, asr r2
     980:	0018fc10 	andseq	pc, r8, r0, lsl ip	; <UNPREDICTABLE>
     984:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     988:	1000196c 	andne	r1, r0, ip, ror #18
     98c:	100019a4 	andne	r1, r0, r4, lsr #19
     990:	b8550001 	ldmdalt	r5, {r0}^
     994:	ba100019 	blt	400a00 <__RAM_SIZE+0x300a00>
     998:	01100019 	tsteq	r0, r9, lsl r0
     99c:	00005500 	andeq	r5, r0, r0, lsl #10
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	00020000 	andeq	r0, r2, r0
	...
     9b4:	02000000 	andeq	r0, r0, #0
     9b8:	00000002 	andeq	r0, r0, r2
     9bc:	100013d0 	ldrdne	r1, [r0], -r0
     9c0:	100013e2 	andne	r1, r0, r2, ror #7
     9c4:	9f300002 	svcls	0x00300002
     9c8:	100013e2 	andne	r1, r0, r2, ror #7
     9cc:	1000140f 	andne	r1, r0, pc, lsl #8
     9d0:	48910002 	ldmmi	r1, {r1}
     9d4:	10001442 	andne	r1, r0, r2, asr #8
     9d8:	1000144a 	andne	r1, r0, sl, asr #8
     9dc:	9f300002 	svcls	0x00300002
     9e0:	1000144a 	andne	r1, r0, sl, asr #8
     9e4:	1000144c 	andne	r1, r0, ip, asr #8
     9e8:	4c500001 	mrrcmi	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     9ec:	5a100014 	bpl	400a44 <__RAM_SIZE+0x300a44>
     9f0:	02100014 	andseq	r0, r0, #20
     9f4:	5a9f3000 	bpl	fe7cc9fc <__StackTop+0xc66cc9fc>
     9f8:	62100014 	andsvs	r0, r0, #20
     9fc:	02100014 	andseq	r0, r0, #20
     a00:	62489100 	subvs	r9, r8, #0, 2
     a04:	6a100014 	bvs	400a5c <__RAM_SIZE+0x300a5c>
     a08:	02100014 	andseq	r0, r0, #20
     a0c:	6a9f3000 	bvs	fe7cca14 <__StackTop+0xc66cca14>
     a10:	6c100014 	ldcvs	0, cr0, [r0], {20}
     a14:	01100014 	tsteq	r0, r4, lsl r0
     a18:	146c5300 	strbtne	r5, [ip], #-768	; 0xfffffd00
     a1c:	196c1000 	stmdbne	ip!, {ip}^
     a20:	00021000 	andeq	r1, r2, r0
     a24:	196c4891 	stmdbne	ip!, {r0, r4, r7, fp, lr}^
     a28:	19a21000 	stmibne	r2!, {ip}
     a2c:	00021000 	andeq	r1, r2, r0
     a30:	19a29f38 	stmibne	r2!, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
     a34:	19cc1000 	stmibne	ip, {ip}^
     a38:	00021000 	andeq	r1, r2, r0
     a3c:	00004891 	muleq	r0, r1, r8
     a40:	00000000 	andeq	r0, r0, r0
     a44:	00010000 	andeq	r0, r1, r0
	...
     a64:	100013e2 	andne	r1, r0, r2, ror #7
     a68:	100013ee 	andne	r1, r0, lr, ror #7
     a6c:	9f300002 	svcls	0x00300002
     a70:	100013ee 	andne	r1, r0, lr, ror #7
     a74:	1000140f 	andne	r1, r0, pc, lsl #8
     a78:	6c5b0001 	mrrcvs	0, 0, r0, fp, cr1
     a7c:	92100014 	andsls	r0, r0, #20
     a80:	02100014 	andseq	r0, r0, #20
     a84:	929f3000 	addsls	r3, pc, #0
     a88:	94100014 	ldrls	r0, [r0], #-20	; 0xffffffec
     a8c:	01100014 	tsteq	r0, r4, lsl r0
     a90:	14945000 	ldrne	r5, [r4], #0
     a94:	14a01000 	strtne	r1, [r0], #0
     a98:	00021000 	andeq	r1, r2, r0
     a9c:	14a09f30 	strtne	r9, [r0], #3888	; 0xf30
     aa0:	183a1000 	ldmdane	sl!, {ip}
     aa4:	00011000 	andeq	r1, r1, r0
     aa8:	0018765b 	andseq	r7, r8, fp, asr r6
     aac:	00187c10 	andseq	r7, r8, r0, lsl ip
     ab0:	5b000110 	blpl	ef8 <__Vectors_Size+0x738>
     ab4:	100018a2 	andne	r1, r0, r2, lsr #17
     ab8:	100018ec 	andne	r1, r0, ip, ror #17
     abc:	ec5b0001 	mrrc	0, 0, r0, fp, cr1
     ac0:	f0100018 			; <UNDEFINED> instruction: 0xf0100018
     ac4:	01100018 	tsteq	r0, r8, lsl r0
     ac8:	18f05400 	ldmne	r0!, {sl, ip, lr}^
     acc:	19181000 	ldmdbne	r8, {ip}
     ad0:	00011000 	andeq	r1, r1, r0
     ad4:	0019185b 	andseq	r1, r9, fp, asr r8
     ad8:	00191c10 	andseq	r1, r9, r0, lsl ip
     adc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ae0:	1000191c 	andne	r1, r0, ip, lsl r9
     ae4:	1000191e 	andne	r1, r0, lr, lsl r9
     ae8:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
     aec:	38100019 	ldmdacc	r0, {r0, r3, r4}
     af0:	01100019 	tsteq	r0, r9, lsl r0
     af4:	19385400 	ldmdbne	r8!, {sl, ip, lr}
     af8:	193c1000 	ldmdbne	ip!, {ip}
     afc:	00011000 	andeq	r1, r1, r0
     b00:	00196c53 	andseq	r6, r9, r3, asr ip
     b04:	0019cc10 	andseq	ip, r9, r0, lsl ip
     b08:	5b000110 	blpl	f50 <__Vectors_Size+0x790>
	...
     b14:	00010000 	andeq	r0, r1, r0
     b18:	00010001 	andeq	r0, r1, r1
     b1c:	00010001 	andeq	r0, r1, r1
     b20:	13d00000 	bicsne	r0, r0, #0
     b24:	140f1000 	strne	r1, [pc], #-0	; b2c <__Vectors_Size+0x36c>
     b28:	00021000 	andeq	r1, r2, r0
     b2c:	14189f30 	ldrne	r9, [r8], #-3888	; 0xfffff0d0
     b30:	141a1000 	ldrne	r1, [sl], #-0
     b34:	00021000 	andeq	r1, r2, r0
     b38:	14229f31 	strtne	r9, [r2], #-3889	; 0xfffff0cf
     b3c:	14241000 	strtne	r1, [r4], #-0
     b40:	00021000 	andeq	r1, r2, r0
     b44:	142c9f31 	strtne	r9, [ip], #-3889	; 0xfffff0cf
     b48:	142e1000 	strtne	r1, [lr], #-0
     b4c:	00021000 	andeq	r1, r2, r0
     b50:	14369f31 	ldrtne	r9, [r6], #-3889	; 0xfffff0cf
     b54:	14381000 	ldrtne	r1, [r8], #-0
     b58:	00021000 	andeq	r1, r2, r0
     b5c:	14409f31 	strbne	r9, [r0], #-3889	; 0xfffff0cf
     b60:	14421000 	strbne	r1, [r2], #-0
     b64:	00021000 	andeq	r1, r2, r0
     b68:	14429f31 	strbne	r9, [r2], #-3889	; 0xfffff0cf
     b6c:	19cc1000 	stmibne	ip, {ip}^
     b70:	00021000 	andeq	r1, r2, r0
     b74:	00009f30 	andeq	r9, r0, r0, lsr pc
     b78:	00000000 	andeq	r0, r0, r0
     b7c:	00020000 	andeq	r0, r2, r0
	...
     bdc:	137c0000 	cmnne	ip, #0
     be0:	13861000 	orrne	r1, r6, #0
     be4:	00021000 	andeq	r1, r2, r0
     be8:	13869f30 	orrne	r9, r6, #48, 30	; 0xc0
     bec:	13961000 	orrsne	r1, r6, #0
     bf0:	00011000 	andeq	r1, r1, r0
     bf4:	00139654 	andseq	r9, r3, r4, asr r6
     bf8:	0013a810 	andseq	sl, r3, r0, lsl r8
     bfc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     c00:	100013a8 	andne	r1, r0, r8, lsr #7
     c04:	10001632 	andne	r1, r0, r2, lsr r6
     c08:	32540001 	subscc	r0, r4, #1
     c0c:	34100016 	ldrcc	r0, [r0], #-22	; 0xffffffea
     c10:	01100016 	tsteq	r0, r6, lsl r0
     c14:	16345000 	ldrtne	r5, [r4], -r0
     c18:	16881000 	strne	r1, [r8], r0
     c1c:	00011000 	andeq	r1, r1, r0
     c20:	00168854 	andseq	r8, r6, r4, asr r8
     c24:	00169010 	andseq	r9, r6, r0, lsl r0
     c28:	50000110 	andpl	r0, r0, r0, lsl r1
     c2c:	10001690 	mulne	r0, r0, r6
     c30:	100016ce 	andne	r1, r0, lr, asr #13
     c34:	ce540001 	cdpgt	0, 5, cr0, cr4, cr1, {0}
     c38:	d0100016 	andsle	r0, r0, r6, lsl r0
     c3c:	01100016 	tsteq	r0, r6, lsl r0
     c40:	16d05000 	ldrbne	r5, [r0], r0
     c44:	17081000 	strne	r1, [r8, -r0]
     c48:	00011000 	andeq	r1, r1, r0
     c4c:	00170854 	andseq	r0, r7, r4, asr r8
     c50:	00170a10 	andseq	r0, r7, r0, lsl sl
     c54:	50000110 	andpl	r0, r0, r0, lsl r1
     c58:	1000170a 	andne	r1, r0, sl, lsl #14
     c5c:	1000175c 	andne	r1, r0, ip, asr r7
     c60:	5c540001 	mrrcpl	0, 0, r0, r4, cr1
     c64:	5e100017 	mrcpl	0, 0, r0, cr0, cr7, {0}
     c68:	01100017 	tsteq	r0, r7, lsl r0
     c6c:	175e5000 	ldrbne	r5, [lr, -r0]
     c70:	17861000 	strne	r1, [r6, r0]
     c74:	00011000 	andeq	r1, r1, r0
     c78:	00178654 	andseq	r8, r7, r4, asr r6
     c7c:	00178810 	andseq	r8, r7, r0, lsl r8
     c80:	50000110 	andpl	r0, r0, r0, lsl r1
     c84:	10001788 	andne	r1, r0, r8, lsl #15
     c88:	100017d4 	ldrdne	r1, [r0], -r4
     c8c:	d4540001 	ldrble	r0, [r4], #-1
     c90:	dc100017 	ldcle	0, cr0, [r0], {23}
     c94:	01100017 	tsteq	r0, r7, lsl r0
     c98:	17dc5000 	ldrbne	r5, [ip, r0]
     c9c:	18281000 	stmdane	r8!, {ip}
     ca0:	00011000 	andeq	r1, r1, r0
     ca4:	00182854 	andseq	r2, r8, r4, asr r8
     ca8:	00183010 	andseq	r3, r8, r0, lsl r0
     cac:	50000110 	andpl	r0, r0, r0, lsl r1
     cb0:	10001830 	andne	r1, r0, r0, lsr r8
     cb4:	10001844 	andne	r1, r0, r4, asr #16
     cb8:	44540001 	ldrbmi	r0, [r4], #-1
     cbc:	5a100018 	bpl	400d24 <__RAM_SIZE+0x300d24>
     cc0:	01100018 	tsteq	r0, r8, lsl r0
     cc4:	185a5a00 	ldmdane	sl, {r9, fp, ip, lr}^
     cc8:	185e1000 	ldmdane	lr, {ip}^
     ccc:	00011000 	andeq	r1, r1, r0
     cd0:	00185e52 	andseq	r5, r8, r2, asr lr
     cd4:	00186a10 	andseq	r6, r8, r0, lsl sl
     cd8:	5a000110 	bpl	1120 <__HEAP_SIZE+0x120>
     cdc:	1000186a 	andne	r1, r0, sl, ror #16
     ce0:	10001876 	andne	r1, r0, r6, ror r8
     ce4:	76520001 	ldrbvc	r0, [r2], -r1
     ce8:	80100018 	andshi	r0, r0, r8, lsl r0
     cec:	01100018 	tsteq	r0, r8, lsl r0
     cf0:	18805400 	stmne	r0, {sl, ip, lr}
     cf4:	18861000 	stmne	r6, {ip}
     cf8:	00011000 	andeq	r1, r1, r0
     cfc:	0018865a 	andseq	r8, r8, sl, asr r6
     d00:	00188a10 	andseq	r8, r8, r0, lsl sl
     d04:	52000110 	andpl	r0, r0, #16, 2
     d08:	1000188a 	andne	r1, r0, sl, lsl #17
     d0c:	10001896 	mulne	r0, r6, r8
     d10:	96550001 	ldrbls	r0, [r5], -r1
     d14:	a2100018 	andsge	r0, r0, #24
     d18:	01100018 	tsteq	r0, r8, lsl r0
     d1c:	18a25200 	stmiane	r2!, {r9, ip, lr}
     d20:	18ea1000 	stmiane	sl!, {ip}^
     d24:	00011000 	andeq	r1, r1, r0
     d28:	0018ea54 	andseq	lr, r8, r4, asr sl
     d2c:	0018f010 	andseq	pc, r8, r0, lsl r0	; <UNPREDICTABLE>
     d30:	52000110 	andpl	r0, r0, #16, 2
     d34:	100018f0 	strdne	r1, [r0], -r0
     d38:	100018f8 	strdne	r1, [r0], -r8
     d3c:	f8540001 			; <UNDEFINED> instruction: 0xf8540001
     d40:	00100018 	andseq	r0, r0, r8, lsl r0
     d44:	01100019 	tsteq	r0, r9, lsl r0
     d48:	19005200 	stmdbne	r0, {r9, ip, lr}
     d4c:	190c1000 	stmdbne	ip, {ip}
     d50:	00011000 	andeq	r1, r1, r0
     d54:	00190c59 	andseq	r0, r9, r9, asr ip
     d58:	00192410 	andseq	r2, r9, r0, lsl r4
     d5c:	52000110 	andpl	r0, r0, #16, 2
     d60:	10001924 	andne	r1, r0, r4, lsr #18
     d64:	1000192c 	andne	r1, r0, ip, lsr #18
     d68:	2c550001 	mrrccs	0, 0, r0, r5, cr1
     d6c:	54100019 	ldrpl	r0, [r0], #-25	; 0xffffffe7
     d70:	01100019 	tsteq	r0, r9, lsl r0
     d74:	19545200 	ldmdbne	r4, {r9, ip, lr}^
     d78:	19601000 	stmdbne	r0!, {ip}^
     d7c:	00011000 	andeq	r1, r1, r0
     d80:	00196055 	andseq	r6, r9, r5, asr r0
     d84:	00196c10 	andseq	r6, r9, r0, lsl ip
     d88:	52000110 	andpl	r0, r0, #16, 2
     d8c:	1000196c 	andne	r1, r0, ip, ror #18
     d90:	1000199a 	mulne	r0, sl, r9
     d94:	9a540001 	bls	1500da0 <__RAM_SIZE+0x1400da0>
     d98:	a2100019 	andsge	r0, r0, #25
     d9c:	01100019 	tsteq	r0, r9, lsl r0
     da0:	19a25000 	stmibne	r2!, {ip, lr}
     da4:	19a41000 	stmibne	r4!, {ip}
     da8:	00011000 	andeq	r1, r1, r0
     dac:	0019a454 	andseq	sl, r9, r4, asr r4
     db0:	0019b810 	andseq	fp, r9, r0, lsl r8
     db4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     db8:	100019b8 			; <UNDEFINED> instruction: 0x100019b8
     dbc:	100019ba 			; <UNDEFINED> instruction: 0x100019ba
     dc0:	ba540001 	blt	1500dcc <__RAM_SIZE+0x1400dcc>
     dc4:	cc100019 	ldcgt	0, cr0, [r0], {25}
     dc8:	01100019 	tsteq	r0, r9, lsl r0
     dcc:	19cc5500 	stmibne	ip, {r8, sl, ip, lr}^
     dd0:	19d01000 	ldmibne	r0, {ip}^
     dd4:	00021000 	andeq	r1, r2, r0
     dd8:	19d09f30 	ldmibne	r0, {r4, r5, r8, r9, sl, fp, ip, pc}^
     ddc:	19ea1000 	stmibne	sl!, {ip}^
     de0:	00011000 	andeq	r1, r1, r0
     de4:	0019ea54 	andseq	lr, r9, r4, asr sl
     de8:	0019f010 	andseq	pc, r9, r0, lsl r0	; <UNPREDICTABLE>
     dec:	50000110 	andpl	r0, r0, r0, lsl r1
	...
     df8:	00000001 	andeq	r0, r0, r1
	...
     e14:	100015c6 	andne	r1, r0, r6, asr #11
     e18:	100015ce 	andne	r1, r0, lr, asr #11
     e1c:	9f3a0002 	svcls	0x003a0002
     e20:	100015d0 	ldrdne	r1, [r0], -r0
     e24:	10001620 	andne	r1, r0, r0, lsr #12
     e28:	20530001 	subscs	r0, r3, r1
     e2c:	2f100016 	svccs	0x00100016
     e30:	03100016 	tsteq	r0, #22
     e34:	7fa89100 	svcvc	0x00a89100
     e38:	10001640 	andne	r1, r0, r0, asr #12
     e3c:	1000167c 	andne	r1, r0, ip, ror r6
     e40:	7c530001 	mrrcvc	0, 0, r0, r3, cr1
     e44:	85100016 	ldrhi	r0, [r0, #-22]	; 0xffffffea
     e48:	03100016 	tsteq	r0, #22
     e4c:	7fa89100 	svcvc	0x00a89100
     e50:	10001690 	mulne	r0, r0, r6
     e54:	100016b6 			; <UNDEFINED> instruction: 0x100016b6
     e58:	b6530001 	ldrblt	r0, [r3], -r1
     e5c:	cb100016 	blgt	400ebc <__RAM_SIZE+0x300ebc>
     e60:	03100016 	tsteq	r0, #22
     e64:	7fb09100 	svcvc	0x00b09100
     e68:	100016d0 	ldrdne	r1, [r0], -r0
     e6c:	100016fc 	strdne	r1, [r0], -ip
     e70:	fc530001 	mrrc2	0, 0, r0, r3, cr1
     e74:	05100016 	ldreq	r0, [r0, #-22]	; 0xffffffea
     e78:	03100017 	tsteq	r0, #23
     e7c:	7fa89100 	svcvc	0x00a89100
     e80:	1000170a 	andne	r1, r0, sl, lsl #14
     e84:	10001750 	andne	r1, r0, r0, asr r7
     e88:	50530001 	subspl	r0, r3, r1
     e8c:	59100017 	ldmdbpl	r0, {r0, r1, r2, r4}
     e90:	03100017 	tsteq	r0, #23
     e94:	7fb09100 	svcvc	0x00b09100
     e98:	1000175e 	andne	r1, r0, lr, asr r7
     e9c:	10001772 	andne	r1, r0, r2, ror r7
     ea0:	72530001 	subsvc	r0, r3, #1
     ea4:	83100017 	tsthi	r0, #23
     ea8:	03100017 	tsteq	r0, #23
     eac:	7fa89100 	svcvc	0x00a89100
     eb0:	10001788 	andne	r1, r0, r8, lsl #15
     eb4:	100017a2 	andne	r1, r0, r2, lsr #15
     eb8:	00530001 	subseq	r0, r3, r1
	...
     ec4:	00166000 	andseq	r6, r6, r0
     ec8:	00167610 	andseq	r7, r6, r0, lsl r6
     ecc:	52000110 	andpl	r0, r0, #16, 2
	...
     edc:	10001612 	andne	r1, r0, r2, lsl r6
     ee0:	10001628 	andne	r1, r0, r8, lsr #12
     ee4:	28520001 	ldmdacs	r2, {r0}^
     ee8:	2f100016 	svccs	0x00100016
     eec:	02100016 	andseq	r0, r0, #22
     ef0:	00007d00 	andeq	r7, r0, r0, lsl #26
     ef4:	00000000 	andeq	r0, r0, r0
     ef8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     f0c:	30000000 	andcc	r0, r0, r0
     f10:	3a100018 	bcc	400f78 <__RAM_SIZE+0x300f78>
     f14:	02100018 	andseq	r0, r0, #24
     f18:	3a9f3100 	bcc	fe7cd320 <__StackTop+0xc66cd320>
     f1c:	50100018 	andspl	r0, r0, r8, lsl r0
     f20:	01100018 	tsteq	r0, r8, lsl r0
     f24:	185a5900 	ldmdane	sl, {r8, fp, ip, lr}^
     f28:	186a1000 	stmdane	sl!, {ip}^
     f2c:	00011000 	andeq	r1, r1, r0
     f30:	00186a59 	andseq	r6, r8, r9, asr sl
     f34:	00186e10 	andseq	r6, r8, r0, lsl lr
     f38:	53000110 	movwpl	r0, #272	; 0x110
     f3c:	1000186e 	andne	r1, r0, lr, ror #16
     f40:	10001876 	andne	r1, r0, r6, ror r8
     f44:	76590001 	ldrbvc	r0, [r9], -r1
     f48:	80100018 	andshi	r0, r0, r8, lsl r0
     f4c:	02100018 	andseq	r0, r0, #24
     f50:	809f3100 	addshi	r3, pc, r0, lsl #2
     f54:	88100018 	ldmdahi	r0, {r3, r4}
     f58:	01100018 	tsteq	r0, r8, lsl r0
     f5c:	18885900 	stmne	r8, {r8, fp, ip, lr}
     f60:	18961000 	ldmne	r6, {ip}
     f64:	00011000 	andeq	r1, r1, r0
     f68:	00189654 	andseq	r9, r8, r4, asr r6
     f6c:	00189a10 	andseq	r9, r8, r0, lsl sl
     f70:	59000110 	stmdbpl	r0, {r4, r8}
     f74:	1000189a 	mulne	r0, sl, r8
     f78:	100018a2 	andne	r1, r0, r2, lsr #17
     f7c:	00540001 	subseq	r0, r4, r1
	...
     f88:	1c000000 	stcne	0, cr0, [r0], {-0}
     f8c:	44100019 	ldrmi	r0, [r0], #-25	; 0xffffffe7
     f90:	01100019 	tsteq	r0, r9, lsl r0
     f94:	194c5a00 	stmdbne	ip, {r9, fp, ip, lr}^
     f98:	19501000 	ldmdbne	r0, {ip}^
     f9c:	00011000 	andeq	r1, r1, r0
     fa0:	0000005a 	andeq	r0, r0, sl, asr r0
	...
     fbc:	d0000000 	andle	r0, r0, r0
     fc0:	f0100018 			; <UNDEFINED> instruction: 0xf0100018
     fc4:	01100018 	tsteq	r0, r8, lsl r0
     fc8:	18f45900 	ldmne	r4!, {r8, fp, ip, lr}^
     fcc:	18fc1000 	ldmne	ip!, {ip}^
     fd0:	00011000 	andeq	r1, r1, r0
     fd4:	0018fc59 	andseq	pc, r8, r9, asr ip	; <UNPREDICTABLE>
     fd8:	00190c10 	andseq	r0, r9, r0, lsl ip
     fdc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     fe0:	1000190c 	andne	r1, r0, ip, lsl #18
     fe4:	1000190e 	andne	r1, r0, lr, lsl #18
     fe8:	0e530001 	cdpeq	0, 5, cr0, cr3, cr1, {0}
     fec:	1c100019 	ldcne	0, cr0, [r0], {25}
     ff0:	01100019 	tsteq	r0, r9, lsl r0
     ff4:	191c5500 	ldmdbne	ip, {r8, sl, ip, lr}
     ff8:	19441000 	stmdbne	r4, {ip}^
     ffc:	00011000 	andeq	r1, r1, r0
    1000:	00194c59 	andseq	r4, r9, r9, asr ip
    1004:	00195210 	andseq	r5, r9, r0, lsl r2
    1008:	59000110 	stmdbpl	r0, {r4, r8}
    100c:	10001952 	andne	r1, r0, r2, asr r9
    1010:	10001960 	andne	r1, r0, r0, ror #18
    1014:	60540001 	subsvs	r0, r4, r1
    1018:	64100019 	ldrvs	r0, [r0], #-25	; 0xffffffe7
    101c:	01100019 	tsteq	r0, r9, lsl r0
    1020:	19645900 	stmdbne	r4!, {r8, fp, ip, lr}^
    1024:	196a1000 	stmdbne	sl!, {ip}^
    1028:	00011000 	andeq	r1, r1, r0
    102c:	00196a54 	andseq	r6, r9, r4, asr sl
    1030:	00196c10 	andseq	r6, r9, r0, lsl ip
    1034:	79000310 	stmdbvc	r0, {r4, r8, r9}
    1038:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
    1048:	100018ba 			; <UNDEFINED> instruction: 0x100018ba
    104c:	100018c0 	andne	r1, r0, r0, asr #17
    1050:	c0520001 	subsgt	r0, r2, r1
    1054:	c8100018 	ldmdagt	r0, {r3, r4}
    1058:	01100018 	tsteq	r0, r8, lsl r0
    105c:	18c85300 	stmiane	r8, {r8, r9, ip, lr}^
    1060:	18cc1000 	stmiane	ip, {ip}^
    1064:	00011000 	andeq	r1, r1, r0
    1068:	00000052 	andeq	r0, r0, r2, asr r0
    106c:	00000000 	andeq	r0, r0, r0
    1070:	ba000000 	blt	1078 <__HEAP_SIZE+0x78>
    1074:	d0100018 	andsle	r0, r0, r8, lsl r0
    1078:	01100018 	tsteq	r0, r8, lsl r0
    107c:	00005900 	andeq	r5, r0, r0, lsl #18
    1080:	00000000 	andeq	r0, r0, r0
    1084:	00010000 	andeq	r0, r1, r0
    1088:	10001970 	andne	r1, r0, r0, ror r9
    108c:	100019a2 	andne	r1, r0, r2, lsr #19
    1090:	9f300002 	svcls	0x00300002
	...
    109c:	13d00003 	bicsne	r0, r0, #3
    10a0:	13d61000 	bicsne	r1, r6, #0
    10a4:	00011000 	andeq	r1, r1, r0
    10a8:	00000051 	andeq	r0, r0, r1, asr r0
    10ac:	00000000 	andeq	r0, r0, r0
    10b0:	76000000 	strvc	r0, [r0], -r0
    10b4:	7c100014 	ldcvc	0, cr0, [r0], {20}
    10b8:	01100014 	tsteq	r0, r4, lsl r0
    10bc:	00005200 	andeq	r5, r0, r0, lsl #4
    10c0:	00000000 	andeq	r0, r0, r0
    10c4:	0be80000 	bleq	ffa010cc <__StackTop+0xc79010cc>
    10c8:	0bec1000 	bleq	ffb050d0 <__StackTop+0xc7a050d0>
    10cc:	00021000 	andeq	r1, r2, r0
    10d0:	0bec007d 	bleq	ffb012cc <__StackTop+0xc7a012cc>
    10d4:	0bf01000 	bleq	ffc050dc <__StackTop+0xc7b050dc>
    10d8:	00021000 	andeq	r1, r2, r0
    10dc:	0bf0247d 	bleq	ffc0a2d8 <__StackTop+0xc7b0a2d8>
    10e0:	0bf21000 	bleq	ffc850e8 <__StackTop+0xc7b850e8>
    10e4:	00021000 	andeq	r1, r2, r0
    10e8:	0bf22c7d 	bleq	ffc8c2e4 <__StackTop+0xc7b8c2e4>
    10ec:	0e3c1000 	cdpeq	0, 3, cr1, cr12, cr0, {0}
    10f0:	00031000 	andeq	r1, r3, r0
    10f4:	3c00f07d 	stccc	0, cr15, [r0], {125}	; 0x7d
    10f8:	4010000e 	andsmi	r0, r0, lr
    10fc:	0210000e 	andseq	r0, r0, #14
    1100:	402c7d00 	eormi	r7, ip, r0, lsl #26
    1104:	4410000e 	ldrmi	r0, [r0], #-14
    1108:	0210000e 	andseq	r0, r0, #14
    110c:	44247d00 	strtmi	r7, [r4], #-3328	; 0xfffff300
    1110:	d210000e 	andsle	r0, r0, #14
    1114:	0310000f 	tsteq	r0, #15
    1118:	00f07d00 	rscseq	r7, r0, r0, lsl #26
	...
    1128:	10000be8 	andne	r0, r0, r8, ror #23
    112c:	10000c00 	andne	r0, r0, r0, lsl #24
    1130:	00500001 	subseq	r0, r0, r1
    1134:	d210000c 	andsle	r0, r0, #12
    1138:	0110000f 	tsteq	r0, pc
    113c:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    1148:	0be80000 	bleq	ffa01150 <__StackTop+0xc7901150>
    114c:	0c021000 	stceq	0, cr1, [r2], {-0}
    1150:	00011000 	andeq	r1, r1, r0
    1154:	000c0251 	andeq	r0, ip, r1, asr r2
    1158:	000fd210 	andeq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    115c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    117c:	0be80000 	bleq	ffa01184 <__StackTop+0xc7901184>
    1180:	0bfe1000 	bleq	fff85188 <__StackTop+0xc7e85188>
    1184:	00011000 	andeq	r1, r1, r0
    1188:	000bfe52 	andeq	pc, fp, r2, asr lr	; <UNPREDICTABLE>
    118c:	000e3a10 	andeq	r3, lr, r0, lsl sl
    1190:	5b000110 	blpl	15d8 <__HEAP_SIZE+0x5d8>
    1194:	10000e44 	andne	r0, r0, r4, asr #28
    1198:	10000f4c 	andne	r0, r0, ip, asr #30
    119c:	4c5b0001 	mrrcmi	0, 0, r0, fp, cr1
    11a0:	6210000f 	andsvs	r0, r0, #15
    11a4:	0110000f 	tsteq	r0, pc
    11a8:	0f625000 	svceq	0x00625000
    11ac:	0f961000 	svceq	0x00961000
    11b0:	00011000 	andeq	r1, r1, r0
    11b4:	000f9658 	andeq	r9, pc, r8, asr r6	; <UNPREDICTABLE>
    11b8:	000fa410 	andeq	sl, pc, r0, lsl r4	; <UNPREDICTABLE>
    11bc:	50000110 	andpl	r0, r0, r0, lsl r1
    11c0:	10000fa4 	andne	r0, r0, r4, lsr #31
    11c4:	10000fb4 			; <UNDEFINED> instruction: 0x10000fb4
    11c8:	b45b0001 	ldrblt	r0, [fp], #-1
    11cc:	ba10000f 	blt	401210 <__RAM_SIZE+0x301210>
    11d0:	0110000f 	tsteq	r0, pc
    11d4:	0fba5000 	svceq	0x00ba5000
    11d8:	0fbc1000 	svceq	0x00bc1000
    11dc:	00011000 	andeq	r1, r1, r0
    11e0:	000fbc52 	andeq	fp, pc, r2, asr ip	; <UNPREDICTABLE>
    11e4:	000fc610 	andeq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    11e8:	56000110 			; <UNDEFINED> instruction: 0x56000110
    11ec:	10000fc6 	andne	r0, r0, r6, asr #31
    11f0:	10000fd2 	ldrdne	r0, [r0], -r2
    11f4:	00520001 	subseq	r0, r2, r1
	...
    1200:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1204:	0510000b 	ldreq	r0, [r0, #-11]
    1208:	0110000c 	tsteq	r0, ip
    120c:	0c055300 	stceq	3, cr5, [r5], {-0}
    1210:	0fd21000 	svceq	0x00d21000
    1214:	00011000 	andeq	r1, r1, r0
    1218:	00000055 	andeq	r0, r0, r5, asr r0
	...
    122c:	000be800 	andeq	lr, fp, r0, lsl #16
    1230:	000c5010 	andeq	r5, ip, r0, lsl r0
    1234:	91000210 	tstls	r0, r0, lsl r2
    1238:	000c5000 	andeq	r5, ip, r0
    123c:	000e1a10 	andeq	r1, lr, r0, lsl sl
    1240:	91000310 	tstls	r0, r0, lsl r3
    1244:	0e1a7fa8 	cdpeq	15, 1, cr7, cr10, cr8, {5}
    1248:	0e3a1000 	cdpeq	0, 3, cr1, cr10, cr0, {0}
    124c:	00021000 	andeq	r1, r2, r0
    1250:	0e440091 	mcreq	0, 2, r0, cr4, cr1, {4}
    1254:	0e581000 	cdpeq	0, 5, cr1, cr8, cr0, {0}
    1258:	00021000 	andeq	r1, r2, r0
    125c:	0e580091 	mrceq	0, 2, r0, cr8, cr1, {4}
    1260:	0f281000 	svceq	0x00281000
    1264:	00031000 	andeq	r1, r3, r0
    1268:	a47fa891 	ldrbtge	sl, [pc], #-2193	; 1270 <__HEAP_SIZE+0x270>
    126c:	b210000f 	andslt	r0, r0, #15
    1270:	0310000f 	tsteq	r0, #15
    1274:	7fa89100 	svcvc	0x00a89100
	...
    128c:	10000be8 	andne	r0, r0, r8, ror #23
    1290:	10000c5e 	andne	r0, r0, lr, asr ip
    1294:	08910002 	ldmeq	r1, {r1}
    1298:	10000c5e 	andne	r0, r0, lr, asr ip
    129c:	10000e18 	andne	r0, r0, r8, lsl lr
    12a0:	08910002 	ldmeq	r1, {r1}
    12a4:	10000e18 	andne	r0, r0, r8, lsl lr
    12a8:	10000e1a 	andne	r0, r0, sl, lsl lr
    12ac:	1a530001 	bne	14c12b8 <__RAM_SIZE+0x13c12b8>
    12b0:	8c10000e 	ldchi	0, cr0, [r0], {14}
    12b4:	0210000e 	andseq	r0, r0, #14
    12b8:	8c089100 	stfhid	f1, [r8], {-0}
    12bc:	f410000e 			; <UNDEFINED> instruction: 0xf410000e
    12c0:	0110000e 	tsteq	r0, lr
    12c4:	0ef45300 	cdpeq	3, 15, cr5, cr4, cr0, {0}
    12c8:	0fd21000 	svceq	0x00d21000
    12cc:	00021000 	andeq	r1, r2, r0
    12d0:	00000891 	muleq	r0, r1, r8
	...
    12dc:	0be80000 	bleq	ffa012e4 <__StackTop+0xc79012e4>
    12e0:	0e441000 	cdpeq	0, 4, cr1, cr4, cr0, {0}
    12e4:	00021000 	andeq	r1, r2, r0
    12e8:	0e440c91 	mcreq	12, 2, r0, cr4, cr1, {4}
    12ec:	0fd21000 	svceq	0x00d21000
    12f0:	00021000 	andeq	r1, r2, r0
    12f4:	00000c91 	muleq	r0, r1, ip
	...
    1304:	0be80000 	bleq	ffa0130c <__StackTop+0xc790130c>
    1308:	0e441000 	cdpeq	0, 4, cr1, cr4, cr0, {0}
    130c:	00021000 	andeq	r1, r2, r0
    1310:	0e441091 	mcreq	0, 2, r1, cr4, cr1, {4}
    1314:	0e6a1000 	cdpeq	0, 6, cr1, cr10, cr0, {0}
    1318:	00021000 	andeq	r1, r2, r0
    131c:	0e6a1091 	mcreq	0, 3, r1, cr10, cr1, {4}
    1320:	0e6e1000 	cdpeq	0, 6, cr1, cr14, cr0, {0}
    1324:	00011000 	andeq	r1, r1, r0
    1328:	000e6e53 	andeq	r6, lr, r3, asr lr
    132c:	000fd210 	andeq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    1330:	91000210 	tstls	r0, r0, lsl r2
    1334:	00000010 	andeq	r0, r0, r0, lsl r0
    1338:	00000000 	andeq	r0, r0, r0
    133c:	00000100 	andeq	r0, r0, r0, lsl #2
    1340:	000c3600 	andeq	r3, ip, r0, lsl #12
    1344:	000e1a10 	andeq	r1, lr, r0, lsl sl
    1348:	91001210 	tstls	r0, r0, lsl r2
    134c:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    1350:	000829f4 	strdeq	r2, [r8], -r4
    1354:	00000000 	andeq	r0, r0, r0
    1358:	2d000000 	stccs	0, cr0, [r0, #-0]
    135c:	000e449f 	muleq	lr, pc, r4	; <UNPREDICTABLE>
    1360:	000fd210 	andeq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    1364:	91001210 	tstls	r0, r0, lsl r2
    1368:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    136c:	000829f4 	strdeq	r2, [r8], -r4
    1370:	00000000 	andeq	r0, r0, r0
    1374:	2d000000 	stccs	0, cr0, [r0, #-0]
    1378:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    137c:	00000000 	andeq	r0, r0, r0
    1380:	01000000 	mrseq	r0, (UNDEF: 0)
    1384:	000e3a00 	andeq	r3, lr, r0, lsl #20
    1388:	000e4010 	andeq	r4, lr, r0, lsl r0
    138c:	90000810 	andls	r0, r0, r0, lsl r8
    1390:	90049350 	andls	r9, r4, r0, asr r3
    1394:	08049351 	stmdaeq	r4, {r0, r4, r6, r8, r9, ip, pc}
    1398:	d210000f 	andsle	r0, r0, #15
    139c:	0810000f 	ldmdaeq	r0, {r0, r1, r2, r3}
    13a0:	93509000 	cmpls	r0, #0
    13a4:	93519004 	cmpls	r1, #4
    13a8:	00000004 	andeq	r0, r0, r4
	...
    13bc:	000c6800 	andeq	r6, ip, r0, lsl #16
    13c0:	000c7a10 	andeq	r7, ip, r0, lsl sl
    13c4:	70000410 	andvc	r0, r0, r0, lsl r4
    13c8:	7a9f7881 	bvc	fe7df5d4 <__StackTop+0xc66df5d4>
    13cc:	7d10000c 	ldcvc	0, cr0, [r0, #-48]	; 0xffffffd0
    13d0:	0110000c 	tsteq	r0, ip
    13d4:	0cde5000 	ldcleq	0, cr5, [lr], {0}
    13d8:	0ce61000 	stcleq	0, cr1, [r6]
    13dc:	00011000 	andeq	r1, r1, r0
    13e0:	000ce650 	andeq	lr, ip, r0, asr r6
    13e4:	000d2010 	andeq	r2, sp, r0, lsl r0
    13e8:	57000110 	smladpl	r0, r0, r1, r0
    13ec:	10000d20 	andne	r0, r0, r0, lsr #26
    13f0:	10000ddc 	ldrdne	r0, [r0], -ip
    13f4:	81770004 	cmnhi	r7, r4
    13f8:	0e5a9f78 	mrceq	15, 2, r9, cr10, cr8, {3}
    13fc:	0e5c1000 	cdpeq	0, 5, cr1, cr12, cr0, {0}
    1400:	00041000 	andeq	r1, r4, r0
    1404:	9f788177 	svcls	0x00788177
	...
    1414:	00020000 	andeq	r0, r2, r0
    1418:	0cbe0000 	ldceq	0, cr0, [lr]
    141c:	0cc11000 	stcleq	0, cr1, [r1], {0}
    1420:	00011000 	andeq	r1, r1, r0
    1424:	000cc150 	andeq	ip, ip, r0, asr r1
    1428:	000e1410 	andeq	r1, lr, r0, lsl r4
    142c:	56000110 			; <UNDEFINED> instruction: 0x56000110
    1430:	10000e5a 	andne	r0, r0, sl, asr lr
    1434:	10000e62 	andne	r0, r0, r2, ror #28
    1438:	6a560001 	bvs	1581444 <__RAM_SIZE+0x1481444>
    143c:	6e10000e 	cdpvs	0, 1, cr0, cr0, cr14, {0}
    1440:	0210000e 	andseq	r0, r0, #14
    1444:	6e9f3000 	cdpvs	0, 9, cr3, cr15, cr0, {0}
    1448:	ba10000e 	blt	401488 <__RAM_SIZE+0x301488>
    144c:	0110000f 	tsteq	r0, pc
    1450:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    145c:	10000d10 	andne	r0, r0, r0, lsl sp
    1460:	10000d50 	andne	r0, r0, r0, asr sp
    1464:	93580006 	cmpls	r8, #6
    1468:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    1478:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    147c:	0d361000 	ldceq	0, cr1, [r6, #-0]
    1480:	00061000 	andeq	r1, r6, r0
    1484:	51049350 	tstpl	r4, r0, asr r3
    1488:	0d360493 	cfldrseq	mvf0, [r6, #-588]!	; 0xfffffdb4
    148c:	0e1a1000 	cdpeq	0, 1, cr1, cr10, cr0, {0}
    1490:	00031000 	andeq	r1, r3, r0
    1494:	5a7fb891 	bpl	1fef6e0 <__RAM_SIZE+0x1eef6e0>
    1498:	d210000e 	andsle	r0, r0, #14
    149c:	0310000f 	tsteq	r0, #15
    14a0:	7fb89100 	svcvc	0x00b89100
	...
    14ac:	01000000 	mrseq	r0, (UNDEF: 0)
    14b0:	00000001 	andeq	r0, r0, r1
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	10000ddc 	ldrdne	r0, [r0], -ip
    14bc:	10000e1a 	andne	r0, r0, sl, lsl lr
    14c0:	5e570001 	cdppl	0, 5, cr0, cr7, cr1, {0}
    14c4:	6a10000e 	bvs	401504 <__RAM_SIZE+0x301504>
    14c8:	0110000e 	tsteq	r0, lr
    14cc:	0e6a5700 	cdpeq	7, 6, cr5, cr10, cr0, {0}
    14d0:	0e6e1000 	cdpeq	0, 6, cr1, cr14, cr0, {0}
    14d4:	00021000 	andeq	r1, r2, r0
    14d8:	0e6e9f30 	mcreq	15, 3, r9, cr14, cr0, {1}
    14dc:	0f7a1000 	svceq	0x007a1000
    14e0:	00011000 	andeq	r1, r1, r0
    14e4:	000f7a57 	andeq	r7, pc, r7, asr sl	; <UNPREDICTABLE>
    14e8:	000fa210 	andeq	sl, pc, r0, lsl r2	; <UNPREDICTABLE>
    14ec:	77000310 	smladvc	r0, r0, r3, r0
    14f0:	0fa49f01 	svceq	0x00a49f01
    14f4:	0fba1000 	svceq	0x00ba1000
    14f8:	00011000 	andeq	r1, r1, r0
    14fc:	00000057 	andeq	r0, r0, r7, asr r0
    1500:	00000000 	andeq	r0, r0, r0
    1504:	00000100 	andeq	r0, r0, r0, lsl #2
    1508:	00000000 	andeq	r0, r0, r0
    150c:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    1510:	7810000e 	ldmdavc	r0, {r1, r2, r3}
    1514:	0210000e 	andseq	r0, r0, #14
    1518:	780c9100 	stmdavc	ip, {r8, ip, pc}
    151c:	7a10000e 	bvc	40155c <__RAM_SIZE+0x30155c>
    1520:	0110000e 	tsteq	r0, lr
    1524:	0ef45800 	cdpeq	8, 15, cr5, cr4, cr0, {0}
    1528:	0ef81000 	cdpeq	0, 15, cr1, cr8, cr0, {0}
    152c:	00011000 	andeq	r1, r1, r0
    1530:	000ef853 	andeq	pc, lr, r3, asr r8	; <UNPREDICTABLE>
    1534:	000f6210 	andeq	r6, pc, r0, lsl r2	; <UNPREDICTABLE>
    1538:	58000110 	stmdapl	r0, {r4, r8}
    153c:	10000fa4 	andne	r0, r0, r4, lsr #31
    1540:	10000fba 			; <UNDEFINED> instruction: 0x10000fba
    1544:	00580001 	subseq	r0, r8, r1
    1548:	00000000 	andeq	r0, r0, r0
    154c:	01000000 	mrseq	r0, (UNDEF: 0)
    1550:	000f1800 	andeq	r1, pc, r0, lsl #16
    1554:	000fd210 	andeq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    1558:	5b000110 	blpl	19a0 <__HEAP_SIZE+0x9a0>
	...
    1564:	10000fd8 	ldrdne	r0, [r0], -r8
    1568:	10000fdc 	ldrdne	r0, [r0], -ip
    156c:	007d0002 	rsbseq	r0, sp, r2
    1570:	10000fdc 	ldrdne	r0, [r0], -ip
    1574:	10000fe0 	andne	r0, r0, r0, ror #31
    1578:	247d0002 	ldrbtcs	r0, [sp], #-2
    157c:	10000fe0 	andne	r0, r0, r0, ror #31
    1580:	10000fe2 	andne	r0, r0, r2, ror #31
    1584:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    1588:	10000fe2 	andne	r0, r0, r2, ror #31
    158c:	100012fc 	strdne	r1, [r0], -ip
    1590:	807d0003 	rsbshi	r0, sp, r3
    1594:	0012fc01 	andseq	pc, r2, r1, lsl #24
    1598:	00130010 	andseq	r0, r3, r0, lsl r0
    159c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    15a0:	0013002c 	andseq	r0, r3, ip, lsr #32
    15a4:	00130410 	andseq	r0, r3, r0, lsl r4
    15a8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    15ac:	00130424 	andseq	r0, r3, r4, lsr #8
    15b0:	00136e10 	andseq	r6, r3, r0, lsl lr
    15b4:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    15b8:	00000180 	andeq	r0, r0, r0, lsl #3
	...
    15c4:	0fd80000 	svceq	0x00d80000
    15c8:	0ff61000 	svceq	0x00f61000
    15cc:	00011000 	andeq	r1, r1, r0
    15d0:	000ff650 	andeq	pc, pc, r0, asr r6	; <UNPREDICTABLE>
    15d4:	00136e10 	andseq	r6, r3, r0, lsl lr
    15d8:	91000310 	tstls	r0, r0, lsl r3
    15dc:	00007f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
	...
    15e8:	0fd80000 	svceq	0x00d80000
    15ec:	0ff81000 	svceq	0x00f81000
    15f0:	00011000 	andeq	r1, r1, r0
    15f4:	000ff851 	andeq	pc, pc, r1, asr r8	; <UNPREDICTABLE>
    15f8:	00136e10 	andseq	r6, r3, r0, lsl lr
    15fc:	91000310 	tstls	r0, r0, lsl r3
    1600:	00007fa8 	andeq	r7, r0, r8, lsr #31
	...
    160c:	0fd80000 	svceq	0x00d80000
    1610:	0ff21000 	svceq	0x00f21000
    1614:	00011000 	andeq	r1, r1, r0
    1618:	000ff252 	andeq	pc, pc, r2, asr r2	; <UNPREDICTABLE>
    161c:	00136e10 	andseq	r6, r3, r0, lsl lr
    1620:	5a000110 	bpl	1a68 <__HEAP_SIZE+0xa68>
	...
    1630:	10000fd8 	ldrdne	r0, [r0], -r8
    1634:	10000ff4 	strdne	r0, [r0], -r4
    1638:	f4530001 			; <UNDEFINED> instruction: 0xf4530001
    163c:	6e10000f 	cdpvs	0, 1, cr0, cr0, cr15, {0}
    1640:	01100013 	tsteq	r0, r3, lsl r0
    1644:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
    1658:	10000fd8 	ldrdne	r0, [r0], -r8
    165c:	1000105e 	andne	r1, r0, lr, asr r0
    1660:	00910002 	addseq	r0, r1, r2
    1664:	1000105e 	andne	r1, r0, lr, asr r0
    1668:	10001082 	andne	r1, r0, r2, lsl #1
    166c:	93580006 	cmpls	r8, #6
    1670:	04935904 	ldreq	r5, [r3], #2308	; 0x904
    1674:	10001082 	andne	r1, r0, r2, lsl #1
    1678:	1000111a 	andne	r1, r0, sl, lsl r1
    167c:	00910002 	addseq	r0, r1, r2
    1680:	1000111a 	andne	r1, r0, sl, lsl r1
    1684:	100011b2 			; <UNDEFINED> instruction: 0x100011b2
    1688:	93580006 	cmpls	r8, #6
    168c:	04935904 	ldreq	r5, [r3], #2308	; 0x904
    1690:	100011d6 	ldrdne	r1, [r0], -r6
    1694:	10001252 	andne	r1, r0, r2, asr r2
    1698:	93580006 	cmpls	r8, #6
    169c:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    16b0:	10000fd8 	ldrdne	r0, [r0], -r8
    16b4:	10001066 	andne	r1, r0, r6, rrx
    16b8:	08910002 	ldmeq	r1, {r1}
    16bc:	10001068 	andne	r1, r0, r8, rrx
    16c0:	10001082 	andne	r1, r0, r2, lsl #1
    16c4:	82550001 	subshi	r0, r5, #1
    16c8:	24100010 	ldrcs	r0, [r0], #-16
    16cc:	02100011 	andseq	r0, r0, #17
    16d0:	24089100 	strcs	r9, [r8], #-256	; 0xffffff00
    16d4:	f2100011 	vqadd.s16	d0, d0, d1
    16d8:	01100011 	tsteq	r0, r1, lsl r0
    16dc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    16f0:	10000fd8 	ldrdne	r0, [r0], -r8
    16f4:	100012c8 	andne	r1, r0, r8, asr #5
    16f8:	0c910002 	ldceq	0, cr0, [r1], {2}
    16fc:	100012c8 	andne	r1, r0, r8, asr #5
    1700:	1000131a 	andne	r1, r0, sl, lsl r3
    1704:	0c910002 	ldceq	0, cr0, [r1], {2}
    1708:	1000131a 	andne	r1, r0, sl, lsl r3
    170c:	1000131e 	andne	r1, r0, lr, lsl r3
    1710:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
    1714:	36100013 			; <UNDEFINED> instruction: 0x36100013
    1718:	01100013 	tsteq	r0, r3, lsl r0
    171c:	13365100 	teqne	r6, #0, 2
    1720:	136e1000 	cmnne	lr, #0
    1724:	00021000 	andeq	r1, r2, r0
    1728:	00000c91 	muleq	r0, r1, ip
	...
    1734:	0fd80000 	svceq	0x00d80000
    1738:	13041000 	movwne	r1, #16384	; 0x4000
    173c:	00021000 	andeq	r1, r2, r0
    1740:	13041091 	movwne	r1, #16529	; 0x4091
    1744:	136e1000 	cmnne	lr, #0
    1748:	00021000 	andeq	r1, r2, r0
    174c:	00001091 	muleq	r0, r1, r0
    1750:	00000000 	andeq	r0, r0, r0
    1754:	00020000 	andeq	r0, r2, r0
    1758:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    1764:	00010100 	andeq	r0, r1, r0, lsl #2
    1768:	00010100 	andeq	r0, r1, r0, lsl #2
    176c:	00000000 	andeq	r0, r0, r0
    1770:	00010100 	andeq	r0, r1, r0, lsl #2
    1774:	01000000 	mrseq	r0, (UNDEF: 0)
    1778:	01000001 	tsteq	r0, r1
    177c:	01000001 	tsteq	r0, r1
    1780:	00000001 	andeq	r0, r0, r1
    1784:	10000ff0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1788:	10001068 	andne	r1, r0, r8, rrx
    178c:	9f300002 	svcls	0x00300002
    1790:	10001068 	andne	r1, r0, r8, rrx
    1794:	10001070 	andne	r1, r0, r0, ror r0
    1798:	70540001 	subsvc	r0, r4, r1
    179c:	80100010 	andshi	r0, r0, r0, lsl r0
    17a0:	03100010 	tsteq	r0, #16
    17a4:	9f017400 	svcls	0x00017400
    17a8:	10001080 	andne	r1, r0, r0, lsl #1
    17ac:	10001082 	andne	r1, r0, r2, lsl #1
    17b0:	82540001 	subshi	r0, r4, #1
    17b4:	24100010 	ldrcs	r0, [r0], #-16
    17b8:	02100011 	andseq	r0, r0, #17
    17bc:	249f3000 	ldrcs	r3, [pc], #0	; 17c4 <__HEAP_SIZE+0x7c4>
    17c0:	0c100011 	ldceq	0, cr0, [r0], {17}
    17c4:	01100012 	tsteq	r0, r2, lsl r0
    17c8:	120c5400 	andne	r5, ip, #0, 8
    17cc:	12261000 	eorne	r1, r6, #0
    17d0:	00011000 	andeq	r1, r1, r0
    17d4:	00122652 	andseq	r2, r2, r2, asr r6
    17d8:	00122e10 	andseq	r2, r2, r0, lsl lr
    17dc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    17e0:	1000122e 	andne	r1, r0, lr, lsr #4
    17e4:	1000123e 	andne	r1, r0, lr, lsr r2
    17e8:	01740003 	cmneq	r4, r3
    17ec:	00123e9f 	mulseq	r2, pc, lr	; <UNPREDICTABLE>
    17f0:	00124410 	andseq	r4, r2, r0, lsl r4
    17f4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    17f8:	10001244 	andne	r1, r0, r4, asr #4
    17fc:	10001252 	andne	r1, r0, r2, asr r2
    1800:	01740003 	cmneq	r4, r3
    1804:	0012529f 	mulseq	r2, pc, r2	; <UNPREDICTABLE>
    1808:	00126e10 	andseq	r6, r2, r0, lsl lr
    180c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1810:	1000126e 	andne	r1, r0, lr, ror #4
    1814:	100012be 			; <UNDEFINED> instruction: 0x100012be
    1818:	be510001 	cdplt	0, 5, cr0, cr1, cr1, {0}
    181c:	d2100012 	andsle	r0, r0, #18
    1820:	01100012 	tsteq	r0, r2, lsl r0
    1824:	12d25400 	sbcsne	r5, r2, #0, 8
    1828:	12e01000 	rscne	r1, r0, #0
    182c:	00031000 	andeq	r1, r3, r0
    1830:	e09f0174 	adds	r0, pc, r4, ror r1	; <UNPREDICTABLE>
    1834:	fa100012 	blx	401884 <__RAM_SIZE+0x301884>
    1838:	01100012 	tsteq	r0, r2, lsl r0
    183c:	13045400 	movwne	r5, #17408	; 0x4400
    1840:	131e1000 	tstne	lr, #0
    1844:	00011000 	andeq	r1, r1, r0
    1848:	00131e54 	andseq	r1, r3, r4, asr lr
    184c:	00132c10 	andseq	r2, r3, r0, lsl ip
    1850:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1854:	132c9f01 			; <UNDEFINED> instruction: 0x132c9f01
    1858:	13461000 	movtne	r1, #24576	; 0x6000
    185c:	00011000 	andeq	r1, r1, r0
    1860:	00134654 	andseq	r4, r3, r4, asr r6
    1864:	00135410 	andseq	r5, r3, r0, lsl r4
    1868:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    186c:	13549f01 	cmpne	r4, #1, 30
    1870:	135e1000 	cmpne	lr, #0
    1874:	00011000 	andeq	r1, r1, r0
    1878:	00135e54 	andseq	r5, r3, r4, asr lr
    187c:	00136c10 	andseq	r6, r3, r0, lsl ip
    1880:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1884:	136c9f01 	cmnne	ip, #1, 30
    1888:	136e1000 	cmnne	lr, #0
    188c:	00011000 	andeq	r1, r1, r0
    1890:	00000054 	andeq	r0, r0, r4, asr r0
    1894:	00000000 	andeq	r0, r0, r0
    1898:	00000300 	andeq	r0, r0, r0, lsl #6
    189c:	00000000 	andeq	r0, r0, r0
    18a0:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    18a4:	7610000f 	ldrvc	r0, [r0], -pc
    18a8:	0a100011 	beq	4018f4 <__RAM_SIZE+0x3018f4>
    18ac:	00089e00 	andeq	r9, r8, r0, lsl #28
    18b0:	00000000 	andeq	r0, r0, r0
    18b4:	76000000 	strvc	r0, [r0], -r0
    18b8:	78100011 	ldmdavc	r0, {r0, r4}
    18bc:	06100011 			; <UNDEFINED> instruction: 0x06100011
    18c0:	04935200 	ldreq	r5, [r3], #512	; 0x200
    18c4:	78049353 	stmdavc	r4, {r0, r1, r4, r6, r8, r9, ip, pc}
    18c8:	b2100011 	andslt	r0, r0, #17
    18cc:	03100011 	tsteq	r0, #17
    18d0:	7fa09100 	svcvc	0x00a09100
    18d4:	100011b2 			; <UNDEFINED> instruction: 0x100011b2
    18d8:	100011d6 	ldrdne	r1, [r0], -r6
    18dc:	93570006 	cmpls	r7, #6
    18e0:	04935804 	ldreq	r5, [r3], #2052	; 0x804
    18e4:	100011d6 	ldrdne	r1, [r0], -r6
    18e8:	10001252 	andne	r1, r0, r2, asr r2
    18ec:	a0910003 	addsge	r0, r1, r3
    18f0:	0000007f 	andeq	r0, r0, pc, ror r0
    18f4:	00000000 	andeq	r0, r0, r0
    18f8:	00000100 	andeq	r0, r0, r0, lsl #2
    18fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1900:	00000000 	andeq	r0, r0, r0
    1904:	00104a00 	andseq	r4, r0, r0, lsl #20
    1908:	00105e10 	andseq	r5, r0, r0, lsl lr
    190c:	30000210 	andcc	r0, r0, r0, lsl r2
    1910:	00105e9f 	mulseq	r0, pc, lr	; <UNPREDICTABLE>
    1914:	00108210 	andseq	r8, r0, r0, lsl r2
    1918:	91000310 	tstls	r0, r0, lsl r3
    191c:	110a7fac 	smlatbne	sl, ip, pc, r7	; <UNPREDICTABLE>
    1920:	110a1000 	mrsne	r1, (UNDEF: 10)
    1924:	00021000 	andeq	r1, r2, r0
    1928:	110a9f30 	tstne	sl, r0, lsr pc
    192c:	11201000 			; <UNDEFINED> instruction: 0x11201000
    1930:	00021000 	andeq	r1, r2, r0
    1934:	11209f31 			; <UNDEFINED> instruction: 0x11209f31
    1938:	12fa1000 	rscsne	r1, sl, #0
    193c:	00031000 	andeq	r1, r3, r0
    1940:	047fac91 	ldrbteq	sl, [pc], #-3217	; 1948 <__HEAP_SIZE+0x948>
    1944:	6e100013 	mrcvs	0, 0, r0, cr0, cr3, {0}
    1948:	03100013 	tsteq	r0, #19
    194c:	7fac9100 	svcvc	0x00ac9100
	...
    1960:	112e0000 			; <UNDEFINED> instruction: 0x112e0000
    1964:	11311000 	teqne	r1, r0
    1968:	00011000 	andeq	r1, r1, r0
    196c:	00113150 	andseq	r3, r1, r0, asr r1
    1970:	00127e10 	andseq	r7, r2, r0, lsl lr
    1974:	56000110 			; <UNDEFINED> instruction: 0x56000110
    1978:	1000127e 	andne	r1, r0, lr, ror r2
    197c:	100012be 			; <UNDEFINED> instruction: 0x100012be
    1980:	be520001 	cdplt	0, 5, cr0, cr2, cr1, {0}
    1984:	fa100012 	blx	4019d4 <__RAM_SIZE+0x3019d4>
    1988:	01100012 	tsteq	r0, r2, lsl r0
    198c:	13045600 	movwne	r5, #17920	; 0x4600
    1990:	136e1000 	cmnne	lr, #0
    1994:	00011000 	andeq	r1, r1, r0
    1998:	00000056 	andeq	r0, r0, r6, asr r0
	...
    19a4:	00115800 	andseq	r5, r1, r0, lsl #16
    19a8:	00115b10 	andseq	r5, r1, r0, lsl fp
    19ac:	52000610 	andpl	r0, r0, #16, 12	; 0x1000000
    19b0:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
    19b4:	00115b04 	andseq	r5, r1, r4, lsl #22
    19b8:	00117610 	andseq	r7, r1, r0, lsl r6
    19bc:	91000310 	tstls	r0, r0, lsl r3
    19c0:	00007fa0 	andeq	r7, r0, r0, lsr #31
	...
    19cc:	00010100 	andeq	r0, r1, r0, lsl #2
    19d0:	01000000 	mrseq	r0, (UNDEF: 0)
    19d4:	115e0001 	cmpne	lr, r1
    19d8:	11611000 	cmnne	r1, r0
    19dc:	00011000 	andeq	r1, r1, r0
    19e0:	00116150 	andseq	r6, r1, r0, asr r1
    19e4:	00119610 	andseq	r9, r1, r0, lsl r6
    19e8:	57000110 	smladpl	r0, r0, r1, r0
    19ec:	10001196 	mulne	r0, r6, r1
    19f0:	1000119a 	mulne	r0, sl, r1
    19f4:	9f300002 	svcls	0x00300002
    19f8:	1000119a 	mulne	r0, sl, r1
    19fc:	100011b0 			; <UNDEFINED> instruction: 0x100011b0
    1a00:	d6570001 	ldrble	r0, [r7], -r1
    1a04:	1a100011 	bne	401a50 <__RAM_SIZE+0x301a50>
    1a08:	01100012 	tsteq	r0, r2, lsl r0
    1a0c:	121a5700 	andsne	r5, sl, #0, 14
    1a10:	12261000 	eorne	r1, r6, #0
    1a14:	00011000 	andeq	r1, r1, r0
    1a18:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1a24:	0011f200 	andseq	pc, r1, r0, lsl #4
    1a28:	00122c10 	andseq	r2, r2, r0, lsl ip
    1a2c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1a30:	1000122c 	andne	r1, r0, ip, lsr #4
    1a34:	10001240 	andne	r1, r0, r0, asr #4
    1a38:	00530001 	subseq	r0, r3, r1
    1a3c:	00000000 	andeq	r0, r0, r0
    1a40:	20000000 	andcs	r0, r0, r0
    1a44:	2410000b 	ldrcs	r0, [r0], #-11
    1a48:	0210000b 	andseq	r0, r0, #11
    1a4c:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
    1a50:	2610000b 	ldrcs	r0, [r0], -fp
    1a54:	0210000b 	andseq	r0, r0, #11
    1a58:	26247d00 	strtcs	r7, [r4], -r0, lsl #26
    1a5c:	e210000b 	ands	r0, r0, #11
    1a60:	0310000b 	tsteq	r0, #11
    1a64:	00f87d00 	rscseq	r7, r8, r0, lsl #26
    1a68:	10000be2 	andne	r0, r0, r2, ror #23
    1a6c:	10000be6 	andne	r0, r0, r6, ror #23
    1a70:	247d0002 	ldrbtcs	r0, [sp], #-2
	...
    1a84:	10000b20 	andne	r0, r0, r0, lsr #22
    1a88:	10000b56 	andne	r0, r0, r6, asr fp
    1a8c:	56500001 	ldrbpl	r0, [r0], -r1
    1a90:	b410000b 	ldrlt	r0, [r0], #-11
    1a94:	0310000b 	tsteq	r0, #11
    1a98:	7fac9100 	svcvc	0x00ac9100
    1a9c:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    1aa0:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1aa4:	b8500001 	ldmdalt	r0, {r0}^
    1aa8:	e610000b 	ldr	r0, [r0], -fp
    1aac:	0310000b 	tsteq	r0, #11
    1ab0:	7fac9100 	svcvc	0x00ac9100
	...
    1ac4:	10000b20 	andne	r0, r0, r0, lsr #22
    1ac8:	10000b56 	andne	r0, r0, r6, asr fp
    1acc:	56510001 	ldrbpl	r0, [r1], -r1
    1ad0:	b410000b 	ldrlt	r0, [r0], #-11
    1ad4:	0310000b 	tsteq	r0, #11
    1ad8:	7fb09100 	svcvc	0x00b09100
    1adc:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    1ae0:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1ae4:	b8510001 	ldmdalt	r1, {r0}^
    1ae8:	e610000b 	ldr	r0, [r0], -fp
    1aec:	0310000b 	tsteq	r0, #11
    1af0:	7fb09100 	svcvc	0x00b09100
	...
    1b04:	10000b20 	andne	r0, r0, r0, lsr #22
    1b08:	10000b56 	andne	r0, r0, r6, asr fp
    1b0c:	56520001 	ldrbpl	r0, [r2], -r1
    1b10:	b410000b 	ldrlt	r0, [r0], #-11
    1b14:	0310000b 	tsteq	r0, #11
    1b18:	7fb49100 	svcvc	0x00b49100
    1b1c:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    1b20:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1b24:	b8520001 	ldmdalt	r2, {r0}^
    1b28:	e610000b 	ldr	r0, [r0], -fp
    1b2c:	0310000b 	tsteq	r0, #11
    1b30:	7fb49100 	svcvc	0x00b49100
	...
    1b40:	10000b20 	andne	r0, r0, r0, lsr #22
    1b44:	10000b40 	andne	r0, r0, r0, asr #22
    1b48:	40530001 	subsmi	r0, r3, r1
    1b4c:	e610000b 	ldr	r0, [r0], -fp
    1b50:	0110000b 	tsteq	r0, fp
    1b54:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
    1b68:	10000b20 	andne	r0, r0, r0, lsr #22
    1b6c:	10000b56 	andne	r0, r0, r6, asr fp
    1b70:	00910002 	addseq	r0, r1, r2
    1b74:	10000b56 	andne	r0, r0, r6, asr fp
    1b78:	10000b78 	andne	r0, r0, r8, ror fp
    1b7c:	93550006 	cmpls	r5, #6
    1b80:	04935604 	ldreq	r5, [r3], #1540	; 0x604
    1b84:	10000b78 	andne	r0, r0, r8, ror fp
    1b88:	10000b8c 	andne	r0, r0, ip, lsl #23
    1b8c:	93500006 	cmpls	r0, #6
    1b90:	04935104 	ldreq	r5, [r3], #260	; 0x104
    1b94:	10000b8c 	andne	r0, r0, ip, lsl #23
    1b98:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    1b9c:	93550006 	cmpls	r5, #6
    1ba0:	04935604 	ldreq	r5, [r3], #1540	; 0x604
    1ba4:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    1ba8:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1bac:	00910002 	addseq	r0, r1, r2
	...
    1bbc:	10000b20 	andne	r0, r0, r0, lsr #22
    1bc0:	10000b46 	andne	r0, r0, r6, asr #22
    1bc4:	20910002 	addscs	r0, r1, r2
    1bc8:	10000b46 	andne	r0, r0, r6, asr #22
    1bcc:	10000be6 	andne	r0, r0, r6, ror #23
    1bd0:	005a0001 	subseq	r0, sl, r1
    1bd4:	00000000 	andeq	r0, r0, r0
    1bd8:	02000000 	andeq	r0, r0, #0
	...
    1be4:	3c000000 	stccc	0, cr0, [r0], {-0}
    1be8:	5610000b 	ldrpl	r0, [r0], -fp
    1bec:	0210000b 	andseq	r0, r0, #11
    1bf0:	569f3000 	ldrpl	r3, [pc], r0
    1bf4:	6010000b 	andsvs	r0, r0, fp
    1bf8:	0110000b 	tsteq	r0, fp
    1bfc:	0b605400 	bleq	1816c04 <__RAM_SIZE+0x1716c04>
    1c00:	0b8c1000 	bleq	fe305c08 <__StackTop+0xc6205c08>
    1c04:	00011000 	andeq	r1, r1, r0
    1c08:	000b8c59 	andeq	r8, fp, r9, asr ip
    1c0c:	000bb410 	andeq	fp, fp, r0, lsl r4
    1c10:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1c14:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    1c18:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1c1c:	9f300002 	svcls	0x00300002
    1c20:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1c24:	10000be6 	andne	r0, r0, r6, ror #23
    1c28:	00590001 	subseq	r0, r9, r1
	...
    1c34:	56000000 	strpl	r0, [r0], -r0
    1c38:	6410000b 	ldrvs	r0, [r0], #-11
    1c3c:	0110000b 	tsteq	r0, fp
    1c40:	0b9a5300 	bleq	fe696848 <__StackTop+0xc6596848>
    1c44:	0bb41000 	bleq	fed05c4c <__StackTop+0xc6c05c4c>
    1c48:	00011000 	andeq	r1, r1, r0
    1c4c:	00000053 	andeq	r0, r0, r3, asr r0
    1c50:	00000000 	andeq	r0, r0, r0
    1c54:	000a8c00 	andeq	r8, sl, r0, lsl #24
    1c58:	000a8e10 	andeq	r8, sl, r0, lsl lr
    1c5c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c60:	000a8e00 	andeq	r8, sl, r0, lsl #28
    1c64:	000a9010 	andeq	r9, sl, r0, lsl r0
    1c68:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c6c:	000a9014 	andeq	r9, sl, r4, lsl r0
    1c70:	000b1e10 	andeq	r1, fp, r0, lsl lr
    1c74:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    1c78:	0b1e00d8 	bleq	781fe0 <__RAM_SIZE+0x681fe0>
    1c7c:	0b201000 	bleq	805c84 <__RAM_SIZE+0x705c84>
    1c80:	00021000 	andeq	r1, r2, r0
    1c84:	0000147d 	andeq	r1, r0, sp, ror r4
	...
    1c90:	0a8c0000 	beq	fe301c98 <__StackTop+0xc6201c98>
    1c94:	0b1b1000 	bleq	6c5c9c <__RAM_SIZE+0x5c5c9c>
    1c98:	00011000 	andeq	r1, r1, r0
    1c9c:	000b1b50 	andeq	r1, fp, r0, asr fp
    1ca0:	000b2010 	andeq	r2, fp, r0, lsl r0
    1ca4:	f3000410 	vqshl.u8	d0, d0, d0
    1ca8:	009f5001 	addseq	r5, pc, r1
	...
    1cb4:	8c000000 	stchi	0, cr0, [r0], {-0}
    1cb8:	1b10000a 	blne	401ce8 <__RAM_SIZE+0x301ce8>
    1cbc:	0110000b 	tsteq	r0, fp
    1cc0:	0b1b5100 	bleq	6d60c8 <__RAM_SIZE+0x5d60c8>
    1cc4:	0b201000 	bleq	805ccc <__RAM_SIZE+0x705ccc>
    1cc8:	00041000 	andeq	r1, r4, r0
    1ccc:	9f5101f3 	svcls	0x005101f3
	...
    1cdc:	10000a8c 	andne	r0, r0, ip, lsl #21
    1ce0:	10000b1b 	andne	r0, r0, fp, lsl fp
    1ce4:	1b520001 	blne	1481cf0 <__RAM_SIZE+0x1381cf0>
    1ce8:	2010000b 	andscs	r0, r0, fp
    1cec:	0410000b 	ldreq	r0, [r0], #-11
    1cf0:	5201f300 	andpl	pc, r1, #0, 6
    1cf4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1d00:	000a8c00 	andeq	r8, sl, r0, lsl #24
    1d04:	000b1b10 	andeq	r1, fp, r0, lsl fp
    1d08:	53000110 	movwpl	r0, #272	; 0x110
    1d0c:	10000b1b 	andne	r0, r0, fp, lsl fp
    1d10:	10000b20 	andne	r0, r0, r0, lsr #22
    1d14:	01f30004 	mvnseq	r0, r4
    1d18:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    1d2c:	10000a8c 	andne	r0, r0, ip, lsl #21
    1d30:	10000aaa 	andne	r0, r0, sl, lsr #21
    1d34:	00910002 	addseq	r0, r1, r2
    1d38:	10000aaa 	andne	r0, r0, sl, lsr #21
    1d3c:	10000ac4 	andne	r0, r0, r4, asr #21
    1d40:	c4540001 	ldrbgt	r0, [r4], #-1
    1d44:	d010000a 	andsle	r0, r0, sl
    1d48:	0110000a 	tsteq	r0, sl
    1d4c:	0ad05c00 	beq	ff418d54 <__StackTop+0xc7318d54>
    1d50:	0afe1000 	beq	fff85d58 <__StackTop+0xc7e85d58>
    1d54:	00011000 	andeq	r1, r1, r0
    1d58:	000afe54 	andeq	pc, sl, r4, asr lr	; <UNPREDICTABLE>
    1d5c:	000b0010 	andeq	r0, fp, r0, lsl r0
    1d60:	91000210 	tstls	r0, r0, lsl r2
	...
    1d70:	000a8c00 	andeq	r8, sl, r0, lsl #24
    1d74:	000a9c10 	andeq	r9, sl, r0, lsl ip
    1d78:	91000210 	tstls	r0, r0, lsl r2
    1d7c:	000a9c14 	andeq	r9, sl, r4, lsl ip
    1d80:	000b2010 	andeq	r2, fp, r0, lsl r0
    1d84:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    1d90:	00000002 	andeq	r0, r0, r2
	...
    1d9c:	10000a96 	mulne	r0, r6, sl
    1da0:	10000aaa 	andne	r0, r0, sl, lsr #21
    1da4:	9f300002 	svcls	0x00300002
    1da8:	10000aaa 	andne	r0, r0, sl, lsr #21
    1dac:	10000ab6 			; <UNDEFINED> instruction: 0x10000ab6
    1db0:	b65e0001 	ldrblt	r0, [lr], -r1
    1db4:	d010000a 	andsle	r0, r0, sl
    1db8:	0110000a 	tsteq	r0, sl
    1dbc:	0ad05700 	beq	ff4179c4 <__StackTop+0xc73179c4>
    1dc0:	0afe1000 	beq	fff85dc8 <__StackTop+0xc7e85dc8>
    1dc4:	00011000 	andeq	r1, r1, r0
    1dc8:	000afe5e 	andeq	pc, sl, lr, asr lr	; <UNPREDICTABLE>
    1dcc:	000b0010 	andeq	r0, fp, r0, lsl r0
    1dd0:	30000210 	andcc	r0, r0, r0, lsl r2
    1dd4:	000b009f 	muleq	fp, pc, r0	; <UNPREDICTABLE>
    1dd8:	000b2010 	andeq	r2, fp, r0, lsl r0
    1ddc:	57000110 	smladpl	r0, r0, r1, r0
	...
    1df4:	10000aaa 	andne	r0, r0, sl, lsr #21
    1df8:	10000aae 	andne	r0, r0, lr, lsr #21
    1dfc:	ae5c0001 	cdpge	0, 5, cr0, cr12, cr1, {0}
    1e00:	b210000a 	andslt	r0, r0, #10
    1e04:	0310000a 	tsteq	r0, #10
    1e08:	9f507c00 	svcls	0x00507c00
    1e0c:	10000ab2 			; <UNDEFINED> instruction: 0x10000ab2
    1e10:	10000ad0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1e14:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1e18:	30f70074 	rscscc	r0, r7, r4, ror r0
    1e1c:	30f70075 	rscscc	r0, r7, r5, ror r0
    1e20:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1e24:	9f1c1e00 	svcls	0x001c1e00
    1e28:	10000adc 	ldrdne	r0, [r0], -ip
    1e2c:	10000aec 	andne	r0, r0, ip, ror #21
    1e30:	ec5c0001 	mrrc	0, 0, r0, ip, cr1
    1e34:	fa10000a 	blx	401e64 <__RAM_SIZE+0x301e64>
    1e38:	1210000a 	andsne	r0, r0, #10
    1e3c:	74007400 	strvc	r7, [r0], #-1024	; 0xfffffc00
    1e40:	7530f700 	ldrvc	pc, [r0, #-1792]!	; 0xfffff900
    1e44:	1b30f700 	blne	c3fa4c <__RAM_SIZE+0xb3fa4c>
    1e48:	007500f7 	ldrshteq	r0, [r5], #-7
    1e4c:	fa9f1c1e 	blx	fe7c8ecc <__StackTop+0xc66c8ecc>
    1e50:	fe10000a 	cdp2	0, 1, cr0, cr0, cr10, {0}
    1e54:	0110000a 	tsteq	r0, sl
    1e58:	00005c00 	andeq	r5, r0, r0, lsl #24
    1e5c:	00000000 	andeq	r0, r0, r0
    1e60:	09540000 	ldmdbeq	r4, {}^	; <UNPREDICTABLE>
    1e64:	09581000 	ldmdbeq	r8, {ip}^
    1e68:	00021000 	andeq	r1, r2, r0
    1e6c:	0958007d 	ldmdbeq	r8, {r0, r2, r3, r4, r5, r6}^
    1e70:	095a1000 	ldmdbeq	sl, {ip}^
    1e74:	00021000 	andeq	r1, r2, r0
    1e78:	095a1c7d 	ldmdbeq	sl, {r0, r2, r3, r4, r5, r6, sl, fp, ip}^
    1e7c:	0a101000 	beq	405e84 <__RAM_SIZE+0x305e84>
    1e80:	00021000 	andeq	r1, r2, r0
    1e84:	0a10307d 	beq	40e080 <__RAM_SIZE+0x30e080>
    1e88:	0a141000 	beq	505e90 <__RAM_SIZE+0x405e90>
    1e8c:	00021000 	andeq	r1, r2, r0
    1e90:	0a141c7d 	beq	50908c <__RAM_SIZE+0x40908c>
    1e94:	0a8c1000 	beq	fe305e9c <__StackTop+0xc6205e9c>
    1e98:	00021000 	andeq	r1, r2, r0
    1e9c:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    1eac:	10000954 	andne	r0, r0, r4, asr r9
    1eb0:	10000a0d 	andne	r0, r0, sp, lsl #20
    1eb4:	0d500001 	ldcleq	0, cr0, [r0, #-4]
    1eb8:	1410000a 	ldrne	r0, [r0], #-10
    1ebc:	0410000a 	ldreq	r0, [r0], #-10
    1ec0:	5001f300 	andpl	pc, r1, r0, lsl #6
    1ec4:	000a149f 	muleq	sl, pc, r4	; <UNPREDICTABLE>
    1ec8:	000a8c10 	andeq	r8, sl, r0, lsl ip
    1ecc:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    1edc:	09540000 	ldmdbeq	r4, {}^	; <UNPREDICTABLE>
    1ee0:	0a0d1000 	beq	345ee8 <__RAM_SIZE+0x245ee8>
    1ee4:	00011000 	andeq	r1, r1, r0
    1ee8:	000a0d51 	andeq	r0, sl, r1, asr sp
    1eec:	000a1410 	andeq	r1, sl, r0, lsl r4
    1ef0:	f3000410 	vqshl.u8	d0, d0, d0
    1ef4:	149f5101 	ldrne	r5, [pc], #257	; 1efc <__HEAP_SIZE+0xefc>
    1ef8:	8c10000a 	ldchi	0, cr0, [r0], {10}
    1efc:	0110000a 	tsteq	r0, sl
    1f00:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1f10:	10000954 	andne	r0, r0, r4, asr r9
    1f14:	10000a0d 	andne	r0, r0, sp, lsl #20
    1f18:	0d520001 	ldcleq	0, cr0, [r2, #-4]
    1f1c:	1410000a 	ldrne	r0, [r0], #-10
    1f20:	0410000a 	ldreq	r0, [r0], #-10
    1f24:	5201f300 	andpl	pc, r1, #0, 6
    1f28:	000a149f 	muleq	sl, pc, r4	; <UNPREDICTABLE>
    1f2c:	000a8c10 	andeq	r8, sl, r0, lsl ip
    1f30:	52000110 	andpl	r0, r0, #16, 2
	...
    1f40:	09540000 	ldmdbeq	r4, {}^	; <UNPREDICTABLE>
    1f44:	0a0d1000 	beq	345f4c <__RAM_SIZE+0x245f4c>
    1f48:	00011000 	andeq	r1, r1, r0
    1f4c:	000a0d53 	andeq	r0, sl, r3, asr sp
    1f50:	000a1410 	andeq	r1, sl, r0, lsl r4
    1f54:	f3000410 	vqshl.u8	d0, d0, d0
    1f58:	149f5301 	ldrne	r5, [pc], #769	; 1f60 <__HEAP_SIZE+0xf60>
    1f5c:	8c10000a 	ldchi	0, cr0, [r0], {10}
    1f60:	0110000a 	tsteq	r0, sl
    1f64:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1f70:	09540000 	ldmdbeq	r4, {}^	; <UNPREDICTABLE>
    1f74:	0a141000 	beq	505f7c <__RAM_SIZE+0x405f7c>
    1f78:	00021000 	andeq	r1, r2, r0
    1f7c:	0a140091 	beq	5021c8 <__RAM_SIZE+0x4021c8>
    1f80:	0a8c1000 	beq	fe305f88 <__StackTop+0xc6205f88>
    1f84:	00021000 	andeq	r1, r2, r0
    1f88:	00000091 	muleq	r0, r1, r0
	...
    1f94:	00010100 	andeq	r0, r1, r0, lsl #2
    1f98:	00010100 	andeq	r0, r1, r0, lsl #2
    1f9c:	00010100 	andeq	r0, r1, r0, lsl #2
    1fa0:	00010100 	andeq	r0, r1, r0, lsl #2
    1fa4:	00010100 	andeq	r0, r1, r0, lsl #2
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	01000000 	mrseq	r0, (UNDEF: 0)
    1fb0:	01000001 	tsteq	r0, r1
    1fb4:	01000001 	tsteq	r0, r1
    1fb8:	01000001 	tsteq	r0, r1
    1fbc:	01000001 	tsteq	r0, r1
    1fc0:	00000001 	andeq	r0, r0, r1
    1fc4:	10000954 	andne	r0, r0, r4, asr r9
    1fc8:	1000098c 	andne	r0, r0, ip, lsl #19
    1fcc:	04910002 	ldreq	r0, [r1], #2
    1fd0:	1000098c 	andne	r0, r0, ip, lsl #19
    1fd4:	1000098c 	andne	r0, r0, ip, lsl #19
    1fd8:	8c540001 	mrrchi	0, 0, r0, r4, cr1
    1fdc:	96100009 	ldrls	r0, [r0], -r9
    1fe0:	03100009 	tsteq	r0, #9
    1fe4:	9f017400 	svcls	0x00017400
    1fe8:	10000996 	mulne	r0, r6, r9
    1fec:	100009ac 	andne	r0, r0, ip, lsr #19
    1ff0:	ac540001 	mrrcge	0, 0, r0, r4, cr1
    1ff4:	b6100009 	ldrlt	r0, [r0], -r9
    1ff8:	03100009 	tsteq	r0, #9
    1ffc:	9f017400 	svcls	0x00017400
    2000:	100009b6 			; <UNDEFINED> instruction: 0x100009b6
    2004:	100009e4 	andne	r0, r0, r4, ror #19
    2008:	e4540001 	ldrb	r0, [r4], #-1
    200c:	ee100009 	cdp	0, 1, cr0, cr0, cr9, {0}
    2010:	03100009 	tsteq	r0, #9
    2014:	9f017400 	svcls	0x00017400
    2018:	100009ee 	andne	r0, r0, lr, ror #19
    201c:	100009f8 	strdne	r0, [r0], -r8
    2020:	f8540001 			; <UNDEFINED> instruction: 0xf8540001
    2024:	02100009 	andseq	r0, r0, #9
    2028:	0310000a 	tsteq	r0, #10
    202c:	9f017400 	svcls	0x00017400
    2030:	10000a02 	andne	r0, r0, r2, lsl #20
    2034:	10000a14 	andne	r0, r0, r4, lsl sl
    2038:	14540001 	ldrbne	r0, [r4], #-1
    203c:	1810000a 	ldmdane	r0, {r1, r3}
    2040:	0310000a 	tsteq	r0, #10
    2044:	9f7f7400 	svcls	0x007f7400
    2048:	10000a18 	andne	r0, r0, r8, lsl sl
    204c:	10000a26 	andne	r0, r0, r6, lsr #20
    2050:	265c0001 	ldrbcs	r0, [ip], -r1
    2054:	2810000a 	ldmdacs	r0, {r1, r3}
    2058:	0110000a 	tsteq	r0, sl
    205c:	0a285400 	beq	a17064 <__RAM_SIZE+0x917064>
    2060:	0a2c1000 	beq	b06068 <__RAM_SIZE+0xa06068>
    2064:	00011000 	andeq	r1, r1, r0
    2068:	000a2c5c 	andeq	r2, sl, ip, asr ip
    206c:	000a3610 	andeq	r3, sl, r0, lsl r6
    2070:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2074:	10000a36 	andne	r0, r0, r6, lsr sl
    2078:	10000a40 	andne	r0, r0, r0, asr #20
    207c:	01740003 	cmneq	r4, r3
    2080:	000a409f 	muleq	sl, pc, r0	; <UNPREDICTABLE>
    2084:	000a4c10 	andeq	r4, sl, r0, lsl ip
    2088:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    208c:	10000a4c 	andne	r0, r0, ip, asr #20
    2090:	10000a56 	andne	r0, r0, r6, asr sl
    2094:	01740003 	cmneq	r4, r3
    2098:	000a569f 	muleq	sl, pc, r6	; <UNPREDICTABLE>
    209c:	000a5c10 	andeq	r5, sl, r0, lsl ip
    20a0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    20a4:	10000a5c 	andne	r0, r0, ip, asr sl
    20a8:	10000a66 	andne	r0, r0, r6, ror #20
    20ac:	01740003 	cmneq	r4, r3
    20b0:	000a669f 	muleq	sl, pc, r6	; <UNPREDICTABLE>
    20b4:	000a6e10 	andeq	r6, sl, r0, lsl lr
    20b8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    20bc:	10000a6e 	andne	r0, r0, lr, ror #20
    20c0:	10000a78 	andne	r0, r0, r8, ror sl
    20c4:	01740003 	cmneq	r4, r3
    20c8:	000a789f 	muleq	sl, pc, r8	; <UNPREDICTABLE>
    20cc:	000a8010 	andeq	r8, sl, r0, lsl r0
    20d0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    20d4:	10000a80 	andne	r0, r0, r0, lsl #21
    20d8:	10000a8a 	andne	r0, r0, sl, lsl #21
    20dc:	01740003 	cmneq	r4, r3
    20e0:	000a8a9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
    20e4:	000a8c10 	andeq	r8, sl, r0, lsl ip
    20e8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    20f8:	10000954 	andne	r0, r0, r4, asr r9
    20fc:	10000a14 	andne	r0, r0, r4, lsl sl
    2100:	08910002 	ldmeq	r1, {r1}
    2104:	10000a14 	andne	r0, r0, r4, lsl sl
    2108:	10000a8c 	andne	r0, r0, ip, lsl #21
    210c:	08910002 	ldmeq	r1, {r1}
	...
    211c:	10000954 	andne	r0, r0, r4, asr r9
    2120:	10000a14 	andne	r0, r0, r4, lsl sl
    2124:	0c910002 	ldceq	0, cr0, [r1], {2}
    2128:	10000a14 	andne	r0, r0, r4, lsl sl
    212c:	10000a8c 	andne	r0, r0, ip, lsl #21
    2130:	0c910002 	ldceq	0, cr0, [r1], {2}
	...
    2140:	10000954 	andne	r0, r0, r4, asr r9
    2144:	10000a14 	andne	r0, r0, r4, lsl sl
    2148:	10910002 	addsne	r0, r1, r2
    214c:	10000a14 	andne	r0, r0, r4, lsl sl
    2150:	10000a8c 	andne	r0, r0, ip, lsl #21
    2154:	10910002 	addsne	r0, r1, r2
	...
    2164:	10000954 	andne	r0, r0, r4, asr r9
    2168:	1000098a 	andne	r0, r0, sl, lsl #19
    216c:	14910002 	ldrne	r0, [r1], #2
    2170:	1000098a 	andne	r0, r0, sl, lsl #19
    2174:	10000a8c 	andne	r0, r0, ip, lsl #21
    2178:	00570001 	subseq	r0, r7, r1
	...
    2184:	54000000 	strpl	r0, [r0], #-0
    2188:	14100009 	ldrne	r0, [r0], #-9
    218c:	0210000a 	andseq	r0, r0, #10
    2190:	14189100 	ldrne	r9, [r8], #-256	; 0xffffff00
    2194:	8c10000a 	ldchi	0, cr0, [r0], {10}
    2198:	0210000a 	andseq	r0, r0, #10
    219c:	00189100 	andseq	r9, r8, r0, lsl #2
    21a0:	00000000 	andeq	r0, r0, r0
    21a4:	d6000000 	strle	r0, [r0], -r0
    21a8:	da100008 	ble	4021d0 <__RAM_SIZE+0x3021d0>
    21ac:	02100008 	andseq	r0, r0, #8
    21b0:	da007d00 	ble	215b8 <__HEAP_SIZE+0x205b8>
    21b4:	dc100008 	ldcle	0, cr0, [r0], {8}
    21b8:	02100008 	andseq	r0, r0, #8
    21bc:	dc247d00 	stcle	13, cr7, [r4], #-0
    21c0:	3a100008 	bcc	4021e8 <__RAM_SIZE+0x3021e8>
    21c4:	02100009 	andseq	r0, r0, #9
    21c8:	3a307d00 	bcc	c215d0 <__RAM_SIZE+0xb215d0>
    21cc:	3e100009 	cdpcc	0, 1, cr0, cr0, cr9, {0}
    21d0:	02100009 	andseq	r0, r0, #9
    21d4:	3e247d00 	cdpcc	13, 2, cr7, cr4, cr0, {0}
    21d8:	54100009 	ldrpl	r0, [r0], #-9
    21dc:	02100009 	andseq	r0, r0, #9
    21e0:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    21ec:	d6000000 	strle	r0, [r0], -r0
    21f0:	fa100008 	blx	402218 <__RAM_SIZE+0x302218>
    21f4:	01100008 	tsteq	r0, r8
    21f8:	08fa5000 	ldmeq	sl!, {ip, lr}^
    21fc:	09541000 	ldmdbeq	r4, {ip}^
    2200:	00011000 	andeq	r1, r1, r0
    2204:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2210:	0008d600 	andeq	sp, r8, r0, lsl #12
    2214:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
    2218:	51000110 	tstpl	r0, r0, lsl r1
    221c:	100008fa 	strdne	r0, [r0], -sl
    2220:	10000954 	andne	r0, r0, r4, asr r9
    2224:	00560001 	subseq	r0, r6, r1
	...
    2238:	d6000000 	strle	r0, [r0], -r0
    223c:	02100008 	andseq	r0, r0, #8
    2240:	01100009 	tsteq	r0, r9
    2244:	09025200 	stmdbeq	r2, {r9, ip, lr}
    2248:	09121000 	ldmdbeq	r2, {ip}
    224c:	00011000 	andeq	r1, r1, r0
    2250:	0009125b 	andeq	r1, r9, fp, asr r2
    2254:	00091e10 	andeq	r1, r9, r0, lsl lr
    2258:	52000110 	andpl	r0, r0, #16, 2
    225c:	1000091e 	andne	r0, r0, lr, lsl r9
    2260:	1000092a 	andne	r0, r0, sl, lsr #18
    2264:	2a580001 	bcs	1602270 <__RAM_SIZE+0x1502270>
    2268:	48100009 	ldmdami	r0, {r0, r3}
    226c:	01100009 	tsteq	r0, r9
    2270:	09485200 	stmdbeq	r8, {r9, ip, lr}^
    2274:	09541000 	ldmdbeq	r4, {ip}^
    2278:	00011000 	andeq	r1, r1, r0
    227c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2288:	0008d600 	andeq	sp, r8, r0, lsl #12
    228c:	0008f010 	andeq	pc, r8, r0, lsl r0	; <UNPREDICTABLE>
    2290:	53000110 	movwpl	r0, #272	; 0x110
    2294:	100008f0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    2298:	10000954 	andne	r0, r0, r4, asr r9
    229c:	00570001 	subseq	r0, r7, r1
	...
    22a8:	d6000000 	strle	r0, [r0], -r0
    22ac:	3e100008 	cdpcc	0, 1, cr0, cr0, cr8, {0}
    22b0:	02100009 	andseq	r0, r0, #9
    22b4:	3e009100 	mvfccs	f1, f0
    22b8:	54100009 	ldrpl	r0, [r0], #-9
    22bc:	02100009 	andseq	r0, r0, #9
    22c0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    22cc:	d6000000 	strle	r0, [r0], -r0
    22d0:	18100008 	ldmdane	r0, {r3}
    22d4:	02100009 	andseq	r0, r0, #9
    22d8:	18049100 	stmdane	r4, {r8, ip, pc}
    22dc:	36100009 	ldrcc	r0, [r0], -r9
    22e0:	01100009 	tsteq	r0, r9
    22e4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    22f0:	08d60000 	ldmeq	r6, {}^	; <UNPREDICTABLE>
    22f4:	093e1000 	ldmdbeq	lr!, {ip}
    22f8:	00021000 	andeq	r1, r2, r0
    22fc:	093e0891 	ldmdbeq	lr!, {r0, r4, r7, fp}
    2300:	09541000 	ldmdbeq	r4, {ip}^
    2304:	00021000 	andeq	r1, r2, r0
    2308:	00000891 	muleq	r0, r1, r8
	...
    2314:	08d60000 	ldmeq	r6, {}^	; <UNPREDICTABLE>
    2318:	093e1000 	ldmdbeq	lr!, {ip}
    231c:	00021000 	andeq	r1, r2, r0
    2320:	093e0c91 	ldmdbeq	lr!, {r0, r4, r7, sl, fp}
    2324:	09541000 	ldmdbeq	r4, {ip}^
    2328:	00021000 	andeq	r1, r2, r0
    232c:	00000c91 	muleq	r0, r1, ip
    2330:	00000000 	andeq	r0, r0, r0
    2334:	00010000 	andeq	r0, r1, r0
    2338:	00000000 	andeq	r0, r0, r0
    233c:	100008ee 	andne	r0, r0, lr, ror #17
    2340:	100008fa 	strdne	r0, [r0], -sl
    2344:	fa520001 	blx	1482350 <__RAM_SIZE+0x1382350>
    2348:	18100008 	ldmdane	r0, {r3}
    234c:	02100009 	andseq	r0, r0, #9
    2350:	18549100 	ldmdane	r4, {r8, ip, pc}^
    2354:	54100009 	ldrpl	r0, [r0], #-9
    2358:	04100009 	ldreq	r0, [r0], #-9
    235c:	5201f300 	andpl	pc, r1, #0, 6
    2360:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2364:	00000000 	andeq	r0, r0, r0
    2368:	fa000000 	blx	2370 <__HEAP_SIZE+0x1370>
    236c:	18100008 	ldmdane	r0, {r3}
    2370:	01100009 	tsteq	r0, r9
    2374:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    2380:	08b20000 	ldmeq	r2!, {}	; <UNPREDICTABLE>
    2384:	08b61000 	ldmeq	r6!, {ip}
    2388:	00011000 	andeq	r1, r1, r0
    238c:	0008b650 	andeq	fp, r8, r0, asr r6
    2390:	0008d610 	andeq	sp, r8, r0, lsl r6
    2394:	51000110 	tstpl	r0, r0, lsl r1
	...
    23a0:	00000001 	andeq	r0, r0, r1
    23a4:	08b40000 	ldmeq	r4!, {}	; <UNPREDICTABLE>
    23a8:	08b81000 	ldmeq	r8!, {ip}
    23ac:	00021000 	andeq	r1, r2, r0
    23b0:	08b89f30 	ldmeq	r8!, {r4, r5, r8, r9, sl, fp, ip, pc}
    23b4:	08bc1000 	ldmeq	ip!, {ip}
    23b8:	00011000 	andeq	r1, r1, r0
    23bc:	0008c850 	andeq	ip, r8, r0, asr r8
    23c0:	0008d610 	andeq	sp, r8, r0, lsl r6
    23c4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    23d4:	100008cc 	andne	r0, r0, ip, asr #17
    23d8:	100008ce 	andne	r0, r0, lr, asr #17
    23dc:	ce530001 	cdpgt	0, 5, cr0, cr3, cr1, {0}
    23e0:	d0100008 	andsle	r0, r0, r8
    23e4:	03100008 	tsteq	r0, #8
    23e8:	9f307300 	svcls	0x00307300
	...
    23fc:	007d0002 	rsbseq	r0, sp, r2
	...
    2408:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2414:	007d0002 	rsbseq	r0, sp, r2
	...
    242c:	00010000 	andeq	r0, r1, r0
    2430:	00000050 	andeq	r0, r0, r0, asr r0
    2434:	00000000 	andeq	r0, r0, r0
    2438:	f3000400 	vshl.u8	d0, d0, d0
    243c:	009f5001 	addseq	r5, pc, r1
    2440:	00000000 	andeq	r0, r0, r0
    2444:	01000000 	mrseq	r0, (UNDEF: 0)
    2448:	00005000 	andeq	r5, r0, r0
	...
    2460:	00510001 	subseq	r0, r1, r1
    2464:	00000000 	andeq	r0, r0, r0
    2468:	04000000 	streq	r0, [r0], #-0
    246c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2470:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2474:	00000000 	andeq	r0, r0, r0
    2478:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2490:	00010000 	andeq	r0, r1, r0
    2494:	00000052 	andeq	r0, r0, r2, asr r0
    2498:	00000000 	andeq	r0, r0, r0
    249c:	f3000400 	vshl.u8	d0, d0, d0
    24a0:	009f5201 	addseq	r5, pc, r1, lsl #4
    24a4:	00000000 	andeq	r0, r0, r0
    24a8:	01000000 	mrseq	r0, (UNDEF: 0)
    24ac:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    24c4:	00530001 	subseq	r0, r3, r1
    24c8:	00000000 	andeq	r0, r0, r0
    24cc:	04000000 	streq	r0, [r0], #-0
    24d0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    24d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24d8:	00000000 	andeq	r0, r0, r0
    24dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    24e8:	100019f0 	strdne	r1, [r0], -r0
    24ec:	100019f6 	strdne	r1, [r0], -r6
    24f0:	007d0002 	rsbseq	r0, sp, r2
    24f4:	100019f6 	strdne	r1, [r0], -r6
    24f8:	100019fc 	strdne	r1, [r0], -ip
    24fc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    250c:	100019f0 	strdne	r1, [r0], -r0
    2510:	100019f9 	strdne	r1, [r0], -r9
    2514:	f9500001 			; <UNDEFINED> instruction: 0xf9500001
    2518:	fc100019 	ldc2	0, cr0, [r0], {25}
    251c:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
    2520:	5001f300 	andpl	pc, r1, r0, lsl #6
    2524:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2530:	0019f000 	andseq	pc, r9, r0
    2534:	0019f910 	andseq	pc, r9, r0, lsl r9	; <UNPREDICTABLE>
    2538:	51000110 	tstpl	r0, r0, lsl r1
    253c:	100019f9 	strdne	r1, [r0], -r9
    2540:	100019fc 	strdne	r1, [r0], -ip
    2544:	01f30004 	mvnseq	r0, r4
    2548:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2554:	19f00000 	ldmibne	r0!, {}^	; <UNPREDICTABLE>
    2558:	19f91000 	ldmibne	r9!, {ip}^
    255c:	00011000 	andeq	r1, r1, r0
    2560:	0019f952 	andseq	pc, r9, r2, asr r9	; <UNPREDICTABLE>
    2564:	0019fc10 	andseq	pc, r9, r0, lsl ip	; <UNPREDICTABLE>
    2568:	f3000410 	vqshl.u8	d0, d0, d0
    256c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2578:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    257c:	f9100019 			; <UNDEFINED> instruction: 0xf9100019
    2580:	01100019 	tsteq	r0, r9, lsl r0
    2584:	19f95300 	ldmibne	r9!, {r8, r9, ip, lr}^
    2588:	19fc1000 	ldmibne	ip!, {ip}^
    258c:	00041000 	andeq	r1, r4, r0
    2590:	9f5301f3 	svcls	0x005301f3
	...
    25a4:	007d0002 	rsbseq	r0, sp, r2
	...
    25b0:	107d0002 	rsbsne	r0, sp, r2
	...
    25c8:	00500001 	subseq	r0, r0, r1
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	01000000 	mrseq	r0, (UNDEF: 0)
    25d4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    25e8:	00010000 	andeq	r0, r1, r0
    25ec:	00000051 	andeq	r0, r0, r1, asr r0
    25f0:	00000000 	andeq	r0, r0, r0
    25f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    2600:	01000001 	tsteq	r0, r1
	...
    260c:	00020000 	andeq	r0, r2, r0
    2610:	00009f30 	andeq	r9, r0, r0, lsr pc
    2614:	00000000 	andeq	r0, r0, r0
    2618:	00010000 	andeq	r0, r1, r0
    261c:	00000050 	andeq	r0, r0, r0, asr r0
    2620:	00000000 	andeq	r0, r0, r0
    2624:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2630:	00000002 	andeq	r0, r0, r2
	...
    263c:	9f300002 	svcls	0x00300002
	...
    2648:	00540001 	subseq	r0, r4, r1
	...
    2658:	02000000 	andeq	r0, r0, #0
    265c:	00007d00 	andeq	r7, r0, r0, lsl #26
    2660:	00000000 	andeq	r0, r0, r0
    2664:	02000000 	andeq	r0, r0, #0
    2668:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    267c:	01000000 	mrseq	r0, (UNDEF: 0)
    2680:	00005000 	andeq	r5, r0, r0
    2684:	00000000 	andeq	r0, r0, r0
    2688:	00040000 	andeq	r0, r4, r0
    268c:	9f5001f3 	svcls	0x005001f3
	...
    2698:	10001a3c 	andne	r1, r0, ip, lsr sl
    269c:	10001a3e 	andne	r1, r0, lr, lsr sl
    26a0:	007d0002 	rsbseq	r0, sp, r2
    26a4:	10001a3e 	andne	r1, r0, lr, lsr sl
    26a8:	10001a5a 	andne	r1, r0, sl, asr sl
    26ac:	107d0002 	rsbsne	r0, sp, r2
	...
    26bc:	10001a3c 	andne	r1, r0, ip, lsr sl
    26c0:	10001a44 	andne	r1, r0, r4, asr #20
    26c4:	44500001 	ldrbmi	r0, [r0], #-1
    26c8:	5a10001a 	bpl	402738 <__RAM_SIZE+0x302738>
    26cc:	0110001a 	tsteq	r0, sl, lsl r0
    26d0:	00005500 	andeq	r5, r0, r0, lsl #10
    26d4:	00000000 	andeq	r0, r0, r0
    26d8:	00010000 	andeq	r0, r1, r0
    26dc:	1a400000 	bne	10026e4 <__RAM_SIZE+0xf026e4>
    26e0:	1a441000 	bne	11066e8 <__RAM_SIZE+0x10066e8>
    26e4:	00021000 	andeq	r1, r2, r0
    26e8:	1a449f30 	bne	112a3b0 <__RAM_SIZE+0x102a3b0>
    26ec:	1a5a1000 	bne	16866f4 <__RAM_SIZE+0x15866f4>
    26f0:	00011000 	andeq	r1, r1, r0
    26f4:	00000054 	andeq	r0, r0, r4, asr r0
    26f8:	00000000 	andeq	r0, r0, r0
    26fc:	28000100 	stmdacs	r0, {r8}
    2700:	3c10001a 	ldccc	0, cr0, [r0], {26}
    2704:	0110001a 	tsteq	r0, sl, lsl r0
    2708:	00005000 	andeq	r5, r0, r0
    270c:	00000000 	andeq	r0, r0, r0
    2710:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    271c:	00500001 	subseq	r0, r0, r1
    2720:	00000000 	andeq	r0, r0, r0
    2724:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2728:	5010001b 	andspl	r0, r0, fp, lsl r0
    272c:	0210001b 	andseq	r0, r0, #27
    2730:	50007d00 	andpl	r7, r0, r0, lsl #26
    2734:	c810001b 	ldmdagt	r0, {r0, r1, r3, r4}
    2738:	0210001b 	andseq	r0, r0, #27
    273c:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    274c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2750:	6610001b 			; <UNDEFINED> instruction: 0x6610001b
    2754:	0110001b 	tsteq	r0, fp, lsl r0
    2758:	1b665000 	blne	1996760 <__RAM_SIZE+0x1896760>
    275c:	1ba01000 	blne	fe806764 <__StackTop+0xc6706764>
    2760:	00011000 	andeq	r1, r1, r0
    2764:	001ba058 	andseq	sl, fp, r8, asr r0
    2768:	001ba610 	andseq	sl, fp, r0, lsl r6
    276c:	f3000410 	vqshl.u8	d0, d0, d0
    2770:	a69f5001 	ldrge	r5, [pc], r1
    2774:	c810001b 	ldmdagt	r0, {r0, r1, r3, r4}
    2778:	0110001b 	tsteq	r0, fp, lsl r0
    277c:	00005000 	andeq	r5, r0, r0
	...
    278c:	1b4c0000 	blne	1302794 <__RAM_SIZE+0x1202794>
    2790:	1b661000 	blne	1986798 <__RAM_SIZE+0x1886798>
    2794:	00011000 	andeq	r1, r1, r0
    2798:	001b6651 	andseq	r6, fp, r1, asr r6
    279c:	001ba010 	andseq	sl, fp, r0, lsl r0
    27a0:	57000110 	smladpl	r0, r0, r1, r0
    27a4:	10001ba0 	andne	r1, r0, r0, lsr #23
    27a8:	10001ba6 	andne	r1, r0, r6, lsr #23
    27ac:	01f30004 	mvnseq	r0, r4
    27b0:	1ba69f51 	blne	fe9aa4fc <__StackTop+0xc68aa4fc>
    27b4:	1bc81000 	blne	ff2067bc <__StackTop+0xc71067bc>
    27b8:	00011000 	andeq	r1, r1, r0
    27bc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    27c8:	4c000000 	stcmi	0, cr0, [r0], {-0}
    27cc:	6610001b 			; <UNDEFINED> instruction: 0x6610001b
    27d0:	0110001b 	tsteq	r0, fp, lsl r0
    27d4:	1b665200 	blne	1996fdc <__RAM_SIZE+0x1896fdc>
    27d8:	1ba61000 	blne	fe9867e0 <__StackTop+0xc68867e0>
    27dc:	00041000 	andeq	r1, r4, r0
    27e0:	9f5201f3 	svcls	0x005201f3
    27e4:	10001ba6 	andne	r1, r0, r6, lsr #23
    27e8:	10001bc8 	andne	r1, r0, r8, asr #23
    27ec:	00520001 	subseq	r0, r2, r1
	...
    27fc:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2800:	6610001b 			; <UNDEFINED> instruction: 0x6610001b
    2804:	0110001b 	tsteq	r0, fp, lsl r0
    2808:	1b665300 	blne	1997410 <__RAM_SIZE+0x1897410>
    280c:	1ba01000 	blne	fe806814 <__StackTop+0xc6706814>
    2810:	00011000 	andeq	r1, r1, r0
    2814:	001ba055 	andseq	sl, fp, r5, asr r0
    2818:	001ba610 	andseq	sl, fp, r0, lsl r6
    281c:	f3000410 	vqshl.u8	d0, d0, d0
    2820:	a69f5301 	ldrge	r5, [pc], r1, lsl #6
    2824:	c810001b 	ldmdagt	r0, {r0, r1, r3, r4}
    2828:	0110001b 	tsteq	r0, fp, lsl r0
    282c:	00005300 	andeq	r5, r0, r0, lsl #6
    2830:	00000000 	andeq	r0, r0, r0
    2834:	00010000 	andeq	r0, r1, r0
    2838:	00000000 	andeq	r0, r0, r0
    283c:	10001b50 	andne	r1, r0, r0, asr fp
    2840:	10001b66 	andne	r1, r0, r6, ror #22
    2844:	9f300002 	svcls	0x00300002
    2848:	10001b66 	andne	r1, r0, r6, ror #22
    284c:	10001ba0 	andne	r1, r0, r0, lsr #23
    2850:	a6560001 	ldrbge	r0, [r6], -r1
    2854:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2858:	0210001b 	andseq	r0, r0, #27
    285c:	009f3000 	addseq	r3, pc, r0
    2860:	00000000 	andeq	r0, r0, r0
    2864:	02000000 	andeq	r0, r0, #0
    2868:	01010000 	mrseq	r0, (UNDEF: 1)
    286c:	00000000 	andeq	r0, r0, r0
    2870:	001b5000 	andseq	r5, fp, r0
    2874:	001b6610 	andseq	r6, fp, r0, lsl r6
    2878:	30000210 	andcc	r0, r0, r0, lsl r2
    287c:	001b709f 	mulseq	fp, pc, r0	; <UNPREDICTABLE>
    2880:	001b8210 	andseq	r8, fp, r0, lsl r2
    2884:	52000110 	andpl	r0, r0, #16, 2
    2888:	10001b82 	andne	r1, r0, r2, lsl #23
    288c:	10001b86 	andne	r1, r0, r6, lsl #23
    2890:	7f720003 	svcvc	0x00720003
    2894:	001b869f 	mulseq	fp, pc, r6	; <UNPREDICTABLE>
    2898:	001ba010 	andseq	sl, fp, r0, lsl r0
    289c:	59000110 	stmdbpl	r0, {r4, r8}
    28a0:	10001ba6 	andne	r1, r0, r6, lsr #23
    28a4:	10001bc8 	andne	r1, r0, r8, asr #23
    28a8:	9f300002 	svcls	0x00300002
	...
    28b4:	00000002 	andeq	r0, r0, r2
    28b8:	1b500000 	blne	14028c0 <__RAM_SIZE+0x13028c0>
    28bc:	1b661000 	blne	19868c4 <__RAM_SIZE+0x18868c4>
    28c0:	00021000 	andeq	r1, r2, r0
    28c4:	1b8e9f30 	blne	fe3aa58c <__StackTop+0xc62aa58c>
    28c8:	1b911000 	blne	fe4468d0 <__StackTop+0xc63468d0>
    28cc:	00011000 	andeq	r1, r1, r0
    28d0:	001ba650 	andseq	sl, fp, r0, asr r6
    28d4:	001bc810 	andseq	ip, fp, r0, lsl r8
    28d8:	30000210 	andcc	r0, r0, r0, lsl r2
    28dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    28e0:	00000000 	andeq	r0, r0, r0
    28e4:	00000200 	andeq	r0, r0, r0, lsl #4
    28e8:	50000000 	andpl	r0, r0, r0
    28ec:	6610001b 			; <UNDEFINED> instruction: 0x6610001b
    28f0:	0210001b 	andseq	r0, r0, #27
    28f4:	669f3000 	ldrvs	r3, [pc], r0
    28f8:	a010001b 	andsge	r0, r0, fp, lsl r0
    28fc:	0110001b 	tsteq	r0, fp, lsl r0
    2900:	1ba65400 	blne	fe997908 <__StackTop+0xc6897908>
    2904:	1bc81000 	blne	ff20690c <__StackTop+0xc710690c>
    2908:	00021000 	andeq	r1, r2, r0
    290c:	00009f30 	andeq	r9, r0, r0, lsr pc
    2910:	00000000 	andeq	r0, r0, r0
    2914:	1bc80000 	blne	ff20291c <__StackTop+0xc710291c>
    2918:	1bca1000 	blne	ff286920 <__StackTop+0xc7186920>
    291c:	00021000 	andeq	r1, r2, r0
    2920:	1bca007d 	blne	ff282b1c <__StackTop+0xc7182b1c>
    2924:	1d4c1000 	stclne	0, cr1, [ip, #-0]
    2928:	00021000 	andeq	r1, r2, r0
    292c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    293c:	10001bc8 	andne	r1, r0, r8, asr #23
    2940:	10001c14 	andne	r1, r0, r4, lsl ip
    2944:	14500001 	ldrbne	r0, [r0], #-1
    2948:	c010001c 	andsgt	r0, r0, ip, lsl r0
    294c:	0110001c 	tsteq	r0, ip, lsl r0
    2950:	1cc05500 	cfstr64ne	mvdx5, [r0], {0}
    2954:	1d4c1000 	stclne	0, cr1, [ip, #-0]
    2958:	00041000 	andeq	r1, r4, r0
    295c:	9f5001f3 	svcls	0x005001f3
	...
    296c:	10001bc8 	andne	r1, r0, r8, asr #23
    2970:	10001c17 	andne	r1, r0, r7, lsl ip
    2974:	17510001 	ldrbne	r0, [r1, -r1]
    2978:	4c10001c 	ldcmi	0, cr0, [r0], {28}
    297c:	0110001d 	tsteq	r0, sp, lsl r0
    2980:	00005600 	andeq	r5, r0, r0, lsl #12
    2984:	00000000 	andeq	r0, r0, r0
    2988:	00010000 	andeq	r0, r1, r0
    298c:	00000000 	andeq	r0, r0, r0
    2990:	10001bce 	andne	r1, r0, lr, asr #23
    2994:	10001cc0 	andne	r1, r0, r0, asr #25
    2998:	9f300002 	svcls	0x00300002
    299c:	10001cc0 	andne	r1, r0, r0, asr #25
    29a0:	10001cc2 	andne	r1, r0, r2, asr #25
    29a4:	c2500001 	subsgt	r0, r0, #1
    29a8:	4c10001c 	ldcmi	0, cr0, [r0], {28}
    29ac:	0110001d 	tsteq	r0, sp, lsl r0
    29b0:	00005500 	andeq	r5, r0, r0, lsl #10
    29b4:	00000000 	andeq	r0, r0, r0
    29b8:	01010000 	mrseq	r0, (UNDEF: 1)
    29bc:	00010101 	andeq	r0, r1, r1, lsl #2
    29c0:	1bce0000 	blne	ff3829c8 <__StackTop+0xc72829c8>
    29c4:	1cb01000 	ldcne	0, cr1, [r0]
    29c8:	00021000 	andeq	r1, r2, r0
    29cc:	1cb09f30 	ldcne	15, cr9, [r0], #192	; 0xc0
    29d0:	1cce1000 	stclne	0, cr1, [lr], {0}
    29d4:	00021000 	andeq	r1, r2, r0
    29d8:	1cce9f40 	stclne	15, cr9, [lr], {64}	; 0x40
    29dc:	1cd21000 	ldclne	0, cr1, [r2], {0}
    29e0:	00021000 	andeq	r1, r2, r0
    29e4:	1cd29f30 	ldclne	15, cr9, [r2], {48}	; 0x30
    29e8:	1d4c1000 	stclne	0, cr1, [ip, #-0]
    29ec:	00011000 	andeq	r1, r1, r0
    29f0:	00000054 	andeq	r0, r0, r4, asr r0
    29f4:	00000000 	andeq	r0, r0, r0
    29f8:	05050200 	streq	r0, [r5, #-512]	; 0xfffffe00
    29fc:	01010101 	tsteq	r1, r1, lsl #2
    2a00:	01010101 	tsteq	r1, r1, lsl #2
    2a04:	01010101 	tsteq	r1, r1, lsl #2
    2a08:	01010101 	tsteq	r1, r1, lsl #2
    2a0c:	01010101 	tsteq	r1, r1, lsl #2
    2a10:	01010101 	tsteq	r1, r1, lsl #2
    2a14:	01010101 	tsteq	r1, r1, lsl #2
    2a18:	00000101 	andeq	r0, r0, r1, lsl #2
    2a1c:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    2a20:	ce10001b 	mrcgt	0, 0, r0, cr0, cr11, {0}
    2a24:	0110001b 	tsteq	r0, fp, lsl r0
    2a28:	1bce5000 	blne	ff396a30 <__StackTop+0xc7296a30>
    2a2c:	1bd41000 	blne	ff506a34 <__StackTop+0xc7406a34>
    2a30:	00031000 	andeq	r1, r3, r0
    2a34:	d49f0470 	ldrle	r0, [pc], #1136	; 2a3c <__HEAP_SIZE+0x1a3c>
    2a38:	d810001b 	ldmdale	r0, {r0, r1, r3, r4}
    2a3c:	0310001b 	tsteq	r0, #27
    2a40:	9f087000 	svcls	0x00087000
    2a44:	10001bd8 	ldrdne	r1, [r0], -r8
    2a48:	10001bdc 	ldrdne	r1, [r0], -ip
    2a4c:	0c700003 	ldcleq	0, cr0, [r0], #-12
    2a50:	001bdc9f 	mulseq	fp, pc, ip	; <UNPREDICTABLE>
    2a54:	001be010 	andseq	lr, fp, r0, lsl r0
    2a58:	70000310 	andvc	r0, r0, r0, lsl r3
    2a5c:	1be09f10 	blne	ff82a6a4 <__StackTop+0xc772a6a4>
    2a60:	1be41000 	blne	ff906a68 <__StackTop+0xc7806a68>
    2a64:	00031000 	andeq	r1, r3, r0
    2a68:	e49f1470 	ldr	r1, [pc], #1136	; 2a70 <__HEAP_SIZE+0x1a70>
    2a6c:	e810001b 	ldmda	r0, {r0, r1, r3, r4}
    2a70:	0310001b 	tsteq	r0, #27
    2a74:	9f187000 	svcls	0x00187000
    2a78:	10001be8 	andne	r1, r0, r8, ror #23
    2a7c:	10001bec 	andne	r1, r0, ip, ror #23
    2a80:	1c700003 	ldclne	0, cr0, [r0], #-12
    2a84:	001bec9f 	mulseq	fp, pc, ip	; <UNPREDICTABLE>
    2a88:	001bf010 	andseq	pc, fp, r0, lsl r0	; <UNPREDICTABLE>
    2a8c:	70000310 	andvc	r0, r0, r0, lsl r3
    2a90:	1bf09f20 	blne	ffc2a718 <__StackTop+0xc7b2a718>
    2a94:	1bf41000 	blne	ffd06a9c <__StackTop+0xc7c06a9c>
    2a98:	00031000 	andeq	r1, r3, r0
    2a9c:	f49f2470 			; <UNDEFINED> instruction: 0xf49f2470
    2aa0:	f810001b 			; <UNDEFINED> instruction: 0xf810001b
    2aa4:	0310001b 	tsteq	r0, #27
    2aa8:	9f287000 	svcls	0x00287000
    2aac:	10001bf8 	strdne	r1, [r0], -r8
    2ab0:	10001bfc 	strdne	r1, [r0], -ip
    2ab4:	2c700003 	ldclcs	0, cr0, [r0], #-12
    2ab8:	001bfc9f 	mulseq	fp, pc, ip	; <UNPREDICTABLE>
    2abc:	001c0010 	andseq	r0, ip, r0, lsl r0
    2ac0:	70000310 	andvc	r0, r0, r0, lsl r3
    2ac4:	1c009f30 	stcne	15, cr9, [r0], {48}	; 0x30
    2ac8:	1c041000 	stcne	0, cr1, [r4], {-0}
    2acc:	00031000 	andeq	r1, r3, r0
    2ad0:	049f3470 	ldreq	r3, [pc], #1136	; 2ad8 <__HEAP_SIZE+0x1ad8>
    2ad4:	0810001c 	ldmdaeq	r0, {r2, r3, r4}
    2ad8:	0310001c 	tsteq	r0, #28
    2adc:	9f387000 	svcls	0x00387000
    2ae0:	10001c08 	andne	r1, r0, r8, lsl #24
    2ae4:	10001c0c 	andne	r1, r0, ip, lsl #24
    2ae8:	3c700003 	ldclcc	0, cr0, [r0], #-12
    2aec:	001c0c9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2af0:	001c1410 	andseq	r1, ip, r0, lsl r4
    2af4:	70000410 	andvc	r0, r0, r0, lsl r4
    2af8:	149f00c0 	ldrne	r0, [pc], #192	; 2b00 <__HEAP_SIZE+0x1b00>
    2afc:	c010001c 	andsgt	r0, r0, ip, lsl r0
    2b00:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2b04:	00c07500 	sbceq	r7, r0, r0, lsl #10
    2b08:	001cc09f 	mulseq	ip, pc, r0	; <UNPREDICTABLE>
    2b0c:	001d4c10 	andseq	r4, sp, r0, lsl ip
    2b10:	f3000610 	vmin.u8	d0, d0, d0
    2b14:	40235001 	eormi	r5, r3, r1
    2b18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2b1c:	00000000 	andeq	r0, r0, r0
    2b20:	001ae400 	andseq	lr, sl, r0, lsl #8
    2b24:	001ae610 	andseq	lr, sl, r0, lsl r6
    2b28:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2b2c:	001ae600 	andseq	lr, sl, r0, lsl #12
    2b30:	001afc10 	andseq	pc, sl, r0, lsl ip	; <UNPREDICTABLE>
    2b34:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2b38:	00000008 	andeq	r0, r0, r8
	...
    2b48:	001ae400 	andseq	lr, sl, r0, lsl #8
    2b4c:	001aec10 	andseq	lr, sl, r0, lsl ip
    2b50:	50000110 	andpl	r0, r0, r0, lsl r1
    2b54:	10001aec 	andne	r1, r0, ip, ror #21
    2b58:	10001aef 	andne	r1, r0, pc, ror #21
    2b5c:	ef510001 	svc	0x00510001
    2b60:	f810001a 			; <UNDEFINED> instruction: 0xf810001a
    2b64:	0110001a 	tsteq	r0, sl, lsl r0
    2b68:	1af85400 	bne	ffe17b70 <__StackTop+0xc7d17b70>
    2b6c:	1afc1000 	bne	fff06b74 <__StackTop+0xc7e06b74>
    2b70:	00041000 	andeq	r1, r4, r0
    2b74:	9f5001f3 	svcls	0x005001f3
	...
    2b84:	10001aac 	andne	r1, r0, ip, lsr #21
    2b88:	10001ab2 			; <UNDEFINED> instruction: 0x10001ab2
    2b8c:	b2500001 	subslt	r0, r0, #1
    2b90:	e210001a 	ands	r0, r0, #26
    2b94:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    2b98:	5001f300 	andpl	pc, r1, r0, lsl #6
    2b9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2ba0:	00000000 	andeq	r0, r0, r0
    2ba4:	b0000000 	andlt	r0, r0, r0
    2ba8:	e210001a 	ands	r0, r0, #26
    2bac:	0110001a 	tsteq	r0, sl, lsl r0
    2bb0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2bcc:	1ab60000 	bne	fed82bd4 <__StackTop+0xc6c82bd4>
    2bd0:	1ad01000 	bne	ff406bd8 <__StackTop+0xc7306bd8>
    2bd4:	00011000 	andeq	r1, r1, r0
    2bd8:	001ad050 	andseq	sp, sl, r0, asr r0
    2bdc:	001ad210 	andseq	sp, sl, r0, lsl r2
    2be0:	f3000a10 	vpmin.u8	d0, d0, d0
    2be4:	25405001 	strbcs	r5, [r0, #-1]
    2be8:	1af8000a 	bne	ffe02c18 <__StackTop+0xc7d02c18>
    2bec:	001ad29f 	mulseq	sl, pc, r2	; <UNPREDICTABLE>
    2bf0:	001ad410 	andseq	sp, sl, r0, lsl r4
    2bf4:	50000110 	andpl	r0, r0, r0, lsl r1
    2bf8:	10001ad4 	ldrdne	r1, [r0], -r4
    2bfc:	10001ad6 	ldrdne	r1, [r0], -r6
    2c00:	01f3000a 	mvnseq	r0, sl
    2c04:	0a254050 	beq	952d4c <__RAM_SIZE+0x852d4c>
    2c08:	9f1af800 	svcls	0x001af800
    2c0c:	10001ad6 	ldrdne	r1, [r0], -r6
    2c10:	10001ad8 	ldrdne	r1, [r0], -r8
    2c14:	d8500001 	ldmdale	r0, {r0}^
    2c18:	da10001a 	ble	402c88 <__RAM_SIZE+0x302c88>
    2c1c:	0a10001a 	beq	402c8c <__RAM_SIZE+0x302c8c>
    2c20:	5001f300 	andpl	pc, r1, r0, lsl #6
    2c24:	000a2540 	andeq	r2, sl, r0, asr #10
    2c28:	da9f1af8 	ble	fe7c9810 <__StackTop+0xc66c9810>
    2c2c:	dc10001a 	ldcle	0, cr0, [r0], {26}
    2c30:	0110001a 	tsteq	r0, sl, lsl r0
    2c34:	1adc5000 	bne	ff716c3c <__StackTop+0xc7616c3c>
    2c38:	1ade1000 	bne	ff786c40 <__StackTop+0xc7686c40>
    2c3c:	000a1000 	andeq	r1, sl, r0
    2c40:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2c44:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2c48:	1ade9f1a 	bne	ff7aa8b8 <__StackTop+0xc76aa8b8>
    2c4c:	1ae01000 	bne	ff806c54 <__StackTop+0xc7706c54>
    2c50:	00011000 	andeq	r1, r1, r0
    2c54:	001ae050 	andseq	lr, sl, r0, asr r0
    2c58:	001ae210 	andseq	lr, sl, r0, lsl r2
    2c5c:	f3000a10 	vpmin.u8	d0, d0, d0
    2c60:	25405001 	strbcs	r5, [r0, #-1]
    2c64:	1af8000a 	bne	ffe02c94 <__StackTop+0xc7d02c94>
    2c68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2c6c:	00000000 	andeq	r0, r0, r0
    2c70:	001a8000 	andseq	r8, sl, r0
    2c74:	001a8210 	andseq	r8, sl, r0, lsl r2
    2c78:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2c7c:	001a8200 	andseq	r8, sl, r0, lsl #4
    2c80:	001aaa10 	andseq	sl, sl, r0, lsl sl
    2c84:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2c88:	001aaa08 	andseq	sl, sl, r8, lsl #20
    2c8c:	001aac10 	andseq	sl, sl, r0, lsl ip
    2c90:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    2ca0:	001a8000 	andseq	r8, sl, r0
    2ca4:	001aa010 	andseq	sl, sl, r0, lsl r0
    2ca8:	50000110 	andpl	r0, r0, r0, lsl r1
    2cac:	10001aa0 	andne	r1, r0, r0, lsr #21
    2cb0:	10001aac 	andne	r1, r0, ip, lsr #21
    2cb4:	01f30004 	mvnseq	r0, r4
    2cb8:	00009f50 	andeq	r9, r0, r0, asr pc
    2cbc:	00000000 	andeq	r0, r0, r0
    2cc0:	00010000 	andeq	r0, r1, r0
    2cc4:	00000000 	andeq	r0, r0, r0
    2cc8:	10001a86 	andne	r1, r0, r6, lsl #21
    2ccc:	10001aa4 	andne	r1, r0, r4, lsr #21
    2cd0:	9f300002 	svcls	0x00300002
    2cd4:	10001aa4 	andne	r1, r0, r4, lsr #21
    2cd8:	10001aa8 	andne	r1, r0, r8, lsr #21
    2cdc:	00700008 	rsbseq	r0, r0, r8
    2ce0:	00732440 	rsbseq	r2, r3, r0, asr #8
    2ce4:	1aa89f21 	bne	fea2a970 <__StackTop+0xc692a970>
    2ce8:	1aac1000 	bne	feb06cf0 <__StackTop+0xc6a06cf0>
    2cec:	00011000 	andeq	r1, r1, r0
    2cf0:	00000050 	andeq	r0, r0, r0, asr r0
    2cf4:	00000000 	andeq	r0, r0, r0
    2cf8:	00000300 	andeq	r0, r0, r0, lsl #6
    2cfc:	001a8600 	andseq	r8, sl, r0, lsl #12
    2d00:	001a8810 	andseq	r8, sl, r0, lsl r8
    2d04:	30000210 	andcc	r0, r0, r0, lsl r2
    2d08:	001a889f 	mulseq	sl, pc, r8	; <UNPREDICTABLE>
    2d0c:	001aa410 	andseq	sl, sl, r0, lsl r4
    2d10:	53000110 	movwpl	r0, #272	; 0x110
	...
    2d1c:	10001afc 	strdne	r1, [r0], -ip
    2d20:	10001afe 	strdne	r1, [r0], -lr
    2d24:	007d0002 	rsbseq	r0, sp, r2
    2d28:	10001afe 	strdne	r1, [r0], -lr
    2d2c:	10001b4c 	andne	r1, r0, ip, asr #22
    2d30:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2d3c:	10001d4c 	andne	r1, r0, ip, asr #26
    2d40:	10001d4e 	andne	r1, r0, lr, asr #26
    2d44:	007d0002 	rsbseq	r0, sp, r2
    2d48:	10001d4e 	andne	r1, r0, lr, asr #26
    2d4c:	10001e48 	andne	r1, r0, r8, asr #28
    2d50:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2d60:	10001d4c 	andne	r1, r0, ip, asr #26
    2d64:	10001d52 	andne	r1, r0, r2, asr sp
    2d68:	52500001 	subspl	r0, r0, #1
    2d6c:	4810001d 	ldmdami	r0, {r0, r2, r3, r4}
    2d70:	0110001e 	tsteq	r0, lr, lsl r0
    2d74:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2d84:	10001e9a 	mulne	r0, sl, lr
    2d88:	10001eb2 			; <UNDEFINED> instruction: 0x10001eb2
    2d8c:	b2500001 	subslt	r0, r0, #1
    2d90:	b810001e 	ldmdalt	r0, {r1, r2, r3, r4}
    2d94:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    2d98:	5001f300 	andpl	pc, r1, r0, lsl #6
    2d9c:	001eb89f 	mulseq	lr, pc, r8	; <UNPREDICTABLE>
    2da0:	001ebe10 	andseq	fp, lr, r0, lsl lr
    2da4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2db0:	1e9c0000 	cdpne	0, 9, cr0, cr12, cr0, {0}
    2db4:	1ebe1000 	cdpne	0, 11, cr1, cr14, cr0, {0}
    2db8:	00011000 	andeq	r1, r1, r0
    2dbc:	00000053 	andeq	r0, r0, r3, asr r0
    2dc0:	00000000 	andeq	r0, r0, r0
    2dc4:	001e6800 	andseq	r6, lr, r0, lsl #16
    2dc8:	001e6a10 	andseq	r6, lr, r0, lsl sl
    2dcc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2dd0:	001e6a00 	andseq	r6, lr, r0, lsl #20
    2dd4:	001e9410 	andseq	r9, lr, r0, lsl r4
    2dd8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2ddc:	001e9408 	andseq	r9, lr, r8, lsl #8
    2de0:	001e9610 	andseq	r9, lr, r0, lsl r6
    2de4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2de8:	001e9600 	andseq	r9, lr, r0, lsl #12
    2dec:	001e9a10 	andseq	r9, lr, r0, lsl sl
    2df0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2df4:	00000008 	andeq	r0, r0, r8
	...
    2e00:	76000000 	strvc	r0, [r0], -r0
    2e04:	7a10001e 	bvc	402e84 <__RAM_SIZE+0x302e84>
    2e08:	0110001e 	tsteq	r0, lr, lsl r0
    2e0c:	1e7a5300 	cdpne	3, 7, cr5, cr10, cr0, {0}
    2e10:	1e941000 	cdpne	0, 9, cr1, cr4, cr0, {0}
    2e14:	00011000 	andeq	r1, r1, r0
    2e18:	001e9854 	andseq	r9, lr, r4, asr r8
    2e1c:	001e9a10 	andseq	r9, lr, r0, lsl sl
    2e20:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2e30:	10001e6c 	andne	r1, r0, ip, ror #28
    2e34:	10001e94 	mulne	r0, r4, lr
    2e38:	96550001 	ldrbls	r0, [r5], -r1
    2e3c:	9a10001e 	bls	402ebc <__RAM_SIZE+0x302ebc>
    2e40:	0110001e 	tsteq	r0, lr, lsl r0
    2e44:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    2e58:	00530001 	subseq	r0, r3, r1
    2e5c:	00000000 	andeq	r0, r0, r0
    2e60:	72000000 	andvc	r0, r0, #0
    2e64:	7410001f 	ldrvc	r0, [r0], #-31	; 0xffffffe1
    2e68:	0210001f 	andseq	r0, r0, #31
    2e6c:	74007d00 	strvc	r7, [r0], #-3328	; 0xfffff300
    2e70:	7610001f 			; <UNDEFINED> instruction: 0x7610001f
    2e74:	0210001f 	andseq	r0, r0, #31
    2e78:	76107d00 	ldrvc	r7, [r0], -r0, lsl #26
    2e7c:	8810001f 	ldmdahi	r0, {r0, r1, r2, r3, r4}
    2e80:	0210001f 	andseq	r0, r0, #31
    2e84:	88187d00 	ldmdahi	r8, {r8, sl, fp, ip, sp, lr}
    2e88:	8a10001f 	bhi	402f0c <__RAM_SIZE+0x302f0c>
    2e8c:	0210001f 	andseq	r0, r0, #31
    2e90:	8a107d00 	bhi	422298 <__RAM_SIZE+0x322298>
    2e94:	ca10001f 	bgt	402f18 <__RAM_SIZE+0x302f18>
    2e98:	0210001f 	andseq	r0, r0, #31
    2e9c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    2eac:	001f7200 	andseq	r7, pc, r0, lsl #4
    2eb0:	001f8410 	andseq	r8, pc, r0, lsl r4	; <UNPREDICTABLE>
    2eb4:	50000110 	andpl	r0, r0, r0, lsl r1
    2eb8:	10001f8a 	andne	r1, r0, sl, lsl #31
    2ebc:	10001f96 	mulne	r0, r6, pc	; <UNPREDICTABLE>
    2ec0:	96500001 	ldrbls	r0, [r0], -r1
    2ec4:	9910001f 	ldmdbls	r0, {r0, r1, r2, r3, r4}
    2ec8:	0210001f 	andseq	r0, r0, #31
    2ecc:	00007100 	andeq	r7, r0, r0, lsl #2
	...
    2ed8:	001f7a00 	andseq	r7, pc, r0, lsl #20
    2edc:	001fca10 	andseq	ip, pc, r0, lsl sl	; <UNPREDICTABLE>
    2ee0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2eec:	00000001 	andeq	r0, r0, r1
	...
    2ef8:	1f7a0000 	svcne	0x007a0000
    2efc:	1f841000 	svcne	0x00841000
    2f00:	00021000 	andeq	r1, r2, r0
    2f04:	1f8a9f30 	svcne	0x008a9f30
    2f08:	1f9c1000 	svcne	0x009c1000
    2f0c:	00021000 	andeq	r1, r2, r0
    2f10:	1f9c9f30 	svcne	0x009c9f30
    2f14:	1fac1000 	svcne	0x00ac1000
    2f18:	00011000 	andeq	r1, r1, r0
    2f1c:	001fac50 	andseq	sl, pc, r0, asr ip	; <UNPREDICTABLE>
    2f20:	001fb610 	andseq	fp, pc, r0, lsl r6	; <UNPREDICTABLE>
    2f24:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2f28:	10001fb6 			; <UNDEFINED> instruction: 0x10001fb6
    2f2c:	10001fb8 			; <UNDEFINED> instruction: 0x10001fb8
    2f30:	9f310002 	svcls	0x00310002
    2f34:	10001fb8 			; <UNDEFINED> instruction: 0x10001fb8
    2f38:	10001fbb 			; <UNDEFINED> instruction: 0x10001fbb
    2f3c:	bb500001 	bllt	1402f48 <__RAM_SIZE+0x1302f48>
    2f40:	ca10001f 	bgt	402fc4 <__RAM_SIZE+0x302fc4>
    2f44:	0110001f 	tsteq	r0, pc, lsl r0
    2f48:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    2f54:	1f900000 	svcne	0x00900000
    2f58:	1fc21000 	svcne	0x00c21000
    2f5c:	00011000 	andeq	r1, r1, r0
    2f60:	001fc256 	andseq	ip, pc, r6, asr r2	; <UNPREDICTABLE>
    2f64:	001fc410 	andseq	ip, pc, r0, lsl r4	; <UNPREDICTABLE>
    2f68:	76000310 			; <UNDEFINED> instruction: 0x76000310
    2f6c:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
    2f78:	10001fbc 			; <UNDEFINED> instruction: 0x10001fbc
    2f7c:	10001fca 	andne	r1, r0, sl, asr #31
    2f80:	00500001 	subseq	r0, r0, r1
	...
    2f90:	02000000 	andeq	r0, r0, #0
    2f94:	00007d00 	andeq	r7, r0, r0, lsl #26
    2f98:	00000000 	andeq	r0, r0, r0
    2f9c:	02000000 	andeq	r0, r0, #0
    2fa0:	00047d00 	andeq	r7, r4, r0, lsl #26
    2fa4:	00000000 	andeq	r0, r0, r0
    2fa8:	02000000 	andeq	r0, r0, #0
    2fac:	00107d00 	andseq	r7, r0, r0, lsl #26
    2fb0:	00000000 	andeq	r0, r0, r0
    2fb4:	02000000 	andeq	r0, r0, #0
    2fb8:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    2fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    2fd0:	00005000 	andeq	r5, r0, r0
    2fd4:	00000000 	andeq	r0, r0, r0
    2fd8:	00040000 	andeq	r0, r4, r0
    2fdc:	9f5001f3 	svcls	0x005001f3
	...
    2ff0:	007d0002 	rsbseq	r0, sp, r2
	...
    2ffc:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    3008:	107d0002 	rsbsne	r0, sp, r2
	...
    3014:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    302c:	00500001 	subseq	r0, r0, r1
    3030:	00000000 	andeq	r0, r0, r0
    3034:	04000000 	streq	r0, [r0], #-0
    3038:	5001f300 	andpl	pc, r1, r0, lsl #6
    303c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3050:	01000000 	mrseq	r0, (UNDEF: 0)
    3054:	00005100 	andeq	r5, r0, r0, lsl #2
    3058:	00000000 	andeq	r0, r0, r0
    305c:	00010000 	andeq	r0, r1, r0
    3060:	00000052 	andeq	r0, r0, r2, asr r0
    3064:	00000000 	andeq	r0, r0, r0
    3068:	f3000400 	vshl.u8	d0, d0, d0
    306c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    307c:	02000000 	andeq	r0, r0, #0
    3080:	00007d00 	andeq	r7, r0, r0, lsl #26
    3084:	00000000 	andeq	r0, r0, r0
    3088:	02000000 	andeq	r0, r0, #0
    308c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    30a8:	01000000 	mrseq	r0, (UNDEF: 0)
    30ac:	00005000 	andeq	r5, r0, r0
    30b0:	00000000 	andeq	r0, r0, r0
    30b4:	00040000 	andeq	r0, r4, r0
    30b8:	9f5001f3 	svcls	0x005001f3
	...
    30c4:	00500001 	subseq	r0, r0, r1
    30c8:	00000000 	andeq	r0, r0, r0
    30cc:	01000000 	mrseq	r0, (UNDEF: 0)
    30d0:	00005400 	andeq	r5, r0, r0, lsl #8
    30d4:	00000000 	andeq	r0, r0, r0
    30d8:	00010000 	andeq	r0, r1, r0
    30dc:	00000050 	andeq	r0, r0, r0, asr r0
    30e0:	00000000 	andeq	r0, r0, r0
    30e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    30f0:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    3100:	00510001 	subseq	r0, r1, r1
    3104:	00000000 	andeq	r0, r0, r0
    3108:	04000000 	streq	r0, [r0], #-0
    310c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3110:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3114:	00000000 	andeq	r0, r0, r0
    3118:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3124:	01f30004 	mvnseq	r0, r4
    3128:	00009f51 	andeq	r9, r0, r1, asr pc
    312c:	00000000 	andeq	r0, r0, r0
    3130:	02000000 	andeq	r0, r0, #0
    3134:	00000001 	andeq	r0, r0, r1
    3138:	00000000 	andeq	r0, r0, r0
    313c:	00020000 	andeq	r0, r2, r0
    3140:	00009f30 	andeq	r9, r0, r0, lsr pc
    3144:	00000000 	andeq	r0, r0, r0
    3148:	00020000 	andeq	r0, r2, r0
    314c:	00009f31 	andeq	r9, r0, r1, lsr pc
    3150:	00000000 	andeq	r0, r0, r0
    3154:	00030000 	andeq	r0, r3, r0
	...
    3168:	00010000 	andeq	r0, r1, r0
    316c:	00000050 	andeq	r0, r0, r0, asr r0
    3170:	00000000 	andeq	r0, r0, r0
    3174:	f3000400 	vshl.u8	d0, d0, d0
    3178:	009f5001 	addseq	r5, pc, r1
    317c:	00000000 	andeq	r0, r0, r0
    3180:	01000000 	mrseq	r0, (UNDEF: 0)
    3184:	00005000 	andeq	r5, r0, r0
    3188:	00000000 	andeq	r0, r0, r0
    318c:	00010000 	andeq	r0, r1, r0
    3190:	00000054 	andeq	r0, r0, r4, asr r0
    3194:	00000000 	andeq	r0, r0, r0
    3198:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    31a4:	00540001 	subseq	r0, r4, r1
	...
    31b4:	02000000 	andeq	r0, r0, #0
    31b8:	00007d00 	andeq	r7, r0, r0, lsl #26
    31bc:	00000000 	andeq	r0, r0, r0
    31c0:	02000000 	andeq	r0, r0, #0
    31c4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    31e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    31f0:	00540001 	subseq	r0, r4, r1
    31f4:	00000000 	andeq	r0, r0, r0
    31f8:	04000000 	streq	r0, [r0], #-0
    31fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3200:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3204:	00000000 	andeq	r0, r0, r0
    3208:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3214:	01f30004 	mvnseq	r0, r4
    3218:	00009f50 	andeq	r9, r0, r0, asr pc
    321c:	00000000 	andeq	r0, r0, r0
    3220:	00010000 	andeq	r0, r1, r0
    3224:	00000054 	andeq	r0, r0, r4, asr r0
    3228:	00000000 	andeq	r0, r0, r0
    322c:	f3000400 	vshl.u8	d0, d0, d0
    3230:	009f5001 	addseq	r5, pc, r1
	...
    3244:	01000000 	mrseq	r0, (UNDEF: 0)
    3248:	00005100 	andeq	r5, r0, r0, lsl #2
    324c:	00000000 	andeq	r0, r0, r0
    3250:	00010000 	andeq	r0, r1, r0
    3254:	00000055 	andeq	r0, r0, r5, asr r0
    3258:	00000000 	andeq	r0, r0, r0
    325c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3268:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3274:	9f310002 	svcls	0x00310002
	...
    3288:	007d0002 	rsbseq	r0, sp, r2
	...
    3294:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    32ac:	00500001 	subseq	r0, r0, r1
    32b0:	00000000 	andeq	r0, r0, r0
    32b4:	04000000 	streq	r0, [r0], #-0
    32b8:	5001f300 	andpl	pc, r1, r0, lsl #6
    32bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    32cc:	01000000 	mrseq	r0, (UNDEF: 0)
    32d0:	00005000 	andeq	r5, r0, r0
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	22200000 	eorcs	r0, r0, #0
    32dc:	22221000 	eorcs	r1, r2, #0
    32e0:	00021000 	andeq	r1, r2, r0
    32e4:	2222007d 	eorcs	r0, r2, #125	; 0x7d
    32e8:	22721000 	rsbscs	r1, r2, #0
    32ec:	00021000 	andeq	r1, r2, r0
    32f0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    32fc:	22200000 	eorcs	r0, r0, #0
    3300:	222b1000 	eorcs	r1, fp, #0
    3304:	00011000 	andeq	r1, r1, r0
    3308:	00222b50 	eoreq	r2, r2, r0, asr fp
    330c:	00227210 	eoreq	r7, r2, r0, lsl r2
    3310:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3320:	10002220 	andne	r2, r0, r0, lsr #4
    3324:	1000222b 	andne	r2, r0, fp, lsr #4
    3328:	2b510001 	blcs	1443334 <__RAM_SIZE+0x1343334>
    332c:	72100022 	andsvc	r0, r0, #34	; 0x22
    3330:	01100022 	tsteq	r0, r2, lsr #32
    3334:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3340:	22200000 	eorcs	r0, r0, #0
    3344:	222b1000 	eorcs	r1, fp, #0
    3348:	00011000 	andeq	r1, r1, r0
    334c:	00222b52 	eoreq	r2, r2, r2, asr fp
    3350:	00227210 	eoreq	r7, r2, r0, lsl r2
    3354:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    3360:	00000001 	andeq	r0, r0, r1
    3364:	10002228 	andne	r2, r0, r8, lsr #4
    3368:	1000222b 	andne	r2, r0, fp, lsr #4
    336c:	2b500001 	blcs	1403378 <__RAM_SIZE+0x1303378>
    3370:	72100022 	andsvc	r0, r0, #34	; 0x22
    3374:	01100022 	tsteq	r0, r2, lsr #32
    3378:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3390:	00010000 	andeq	r0, r1, r0
    3394:	00000050 	andeq	r0, r0, r0, asr r0
    3398:	00000000 	andeq	r0, r0, r0
    339c:	f3000400 	vshl.u8	d0, d0, d0
    33a0:	009f5001 	addseq	r5, pc, r1
    33a4:	00000000 	andeq	r0, r0, r0
    33a8:	01000000 	mrseq	r0, (UNDEF: 0)
    33ac:	00005000 	andeq	r5, r0, r0
    33b0:	00000000 	andeq	r0, r0, r0
    33b4:	00040000 	andeq	r0, r4, r0
    33b8:	9f5001f3 	svcls	0x005001f3
	...
    33cc:	00020000 	andeq	r0, r2, r0
    33d0:	00009f30 	andeq	r9, r0, r0, lsr pc
    33d4:	00000000 	andeq	r0, r0, r0
    33d8:	00030000 	andeq	r0, r3, r0
	...
    33e8:	00010000 	andeq	r0, r1, r0
    33ec:	00000050 	andeq	r0, r0, r0, asr r0
    33f0:	00000000 	andeq	r0, r0, r0
    33f4:	f3000400 	vshl.u8	d0, d0, d0
    33f8:	009f5001 	addseq	r5, pc, r1
    33fc:	00000000 	andeq	r0, r0, r0
    3400:	01000000 	mrseq	r0, (UNDEF: 0)
    3404:	00005000 	andeq	r5, r0, r0
    3408:	00000000 	andeq	r0, r0, r0
    340c:	00040000 	andeq	r0, r4, r0
    3410:	9f5001f3 	svcls	0x005001f3
	...
    3424:	007d0002 	rsbseq	r0, sp, r2
	...
    3430:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    344c:	00010000 	andeq	r0, r1, r0
    3450:	00000050 	andeq	r0, r0, r0, asr r0
    3454:	00000000 	andeq	r0, r0, r0
    3458:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3464:	01f30004 	mvnseq	r0, r4
    3468:	00009f50 	andeq	r9, r0, r0, asr pc
    346c:	00000000 	andeq	r0, r0, r0
    3470:	00010000 	andeq	r0, r1, r0
    3474:	00000054 	andeq	r0, r0, r4, asr r0
    3478:	00000000 	andeq	r0, r0, r0
    347c:	f3000400 	vshl.u8	d0, d0, d0
    3480:	009f5001 	addseq	r5, pc, r1
	...
    3494:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    34b0:	00500001 	subseq	r0, r0, r1
    34b4:	00000000 	andeq	r0, r0, r0
    34b8:	04000000 	streq	r0, [r0], #-0
    34bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    34c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    34c4:	00000000 	andeq	r0, r0, r0
    34c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    34d4:	01f30004 	mvnseq	r0, r4
    34d8:	00009f50 	andeq	r9, r0, r0, asr pc
    34dc:	00000000 	andeq	r0, r0, r0
    34e0:	00030000 	andeq	r0, r3, r0
	...
    34f0:	00010000 	andeq	r0, r1, r0
    34f4:	00000050 	andeq	r0, r0, r0, asr r0
    34f8:	00000000 	andeq	r0, r0, r0
    34fc:	f3000400 	vshl.u8	d0, d0, d0
    3500:	009f5001 	addseq	r5, pc, r1
    3504:	00000000 	andeq	r0, r0, r0
    3508:	01000000 	mrseq	r0, (UNDEF: 0)
    350c:	00005000 	andeq	r5, r0, r0
    3510:	00000000 	andeq	r0, r0, r0
    3514:	00040000 	andeq	r0, r4, r0
    3518:	9f5001f3 	svcls	0x005001f3
	...
    3524:	10001ebe 			; <UNDEFINED> instruction: 0x10001ebe
    3528:	10001ec0 	andne	r1, r0, r0, asr #29
    352c:	007d0002 	rsbseq	r0, sp, r2
    3530:	10001ec0 	andne	r1, r0, r0, asr #29
    3534:	10001ed8 	ldrdne	r1, [r0], -r8
    3538:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    354c:	1ebe0000 	cdpne	0, 11, cr0, cr14, cr0, {0}
    3550:	1ec51000 	cdpne	0, 12, cr1, cr5, cr0, {0}
    3554:	00011000 	andeq	r1, r1, r0
    3558:	001ec550 	andseq	ip, lr, r0, asr r5
    355c:	001ecc10 	andseq	ip, lr, r0, lsl ip
    3560:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3564:	10001ecc 	andne	r1, r0, ip, asr #29
    3568:	10001ed4 	ldrdne	r1, [r0], -r4
    356c:	01f30004 	mvnseq	r0, r4
    3570:	1ed49f50 	mrcne	15, 6, r9, cr4, cr0, {2}
    3574:	1ed61000 	cdpne	0, 13, cr1, cr6, cr0, {0}
    3578:	00011000 	andeq	r1, r1, r0
    357c:	001ed654 	andseq	sp, lr, r4, asr r6
    3580:	001ed810 	andseq	sp, lr, r0, lsl r8
    3584:	f3000410 	vqshl.u8	d0, d0, d0
    3588:	009f5001 	addseq	r5, pc, r1
	...
    3594:	001ecc00 	andseq	ip, lr, r0, lsl #24
    3598:	001ed410 	andseq	sp, lr, r0, lsl r4
    359c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    35a8:	10001fca 	andne	r1, r0, sl, asr #31
    35ac:	10001fcc 	andne	r1, r0, ip, asr #31
    35b0:	007d0002 	rsbseq	r0, sp, r2
    35b4:	10001fcc 	andne	r1, r0, ip, asr #31
    35b8:	1000204c 	andne	r2, r0, ip, asr #32
    35bc:	107d0002 	rsbsne	r0, sp, r2
	...
    35cc:	10001fca 	andne	r1, r0, sl, asr #31
    35d0:	10001fd1 	ldrdne	r1, [r0], -r1	; <UNPREDICTABLE>
    35d4:	d1500001 	cmple	r0, r1
    35d8:	4c10001f 	ldcmi	0, cr0, [r0], {31}
    35dc:	01100020 	tsteq	r0, r0, lsr #32
    35e0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    35ec:	1fd80000 	svcne	0x00d80000
    35f0:	1fea1000 	svcne	0x00ea1000
    35f4:	00011000 	andeq	r1, r1, r0
    35f8:	001fec54 	andseq	lr, pc, r4, asr ip	; <UNPREDICTABLE>
    35fc:	00201e10 	eoreq	r1, r0, r0, lsl lr
    3600:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3610:	10002020 	andne	r2, r0, r0, lsr #32
    3614:	10002024 	andne	r2, r0, r4, lsr #32
    3618:	26540001 	ldrbcs	r0, [r4], -r1
    361c:	4c100020 	ldcmi	0, cr0, [r0], {32}
    3620:	01100020 	tsteq	r0, r0, lsr #32
    3624:	00005400 	andeq	r5, r0, r0, lsl #8
    3628:	00000000 	andeq	r0, r0, r0
    362c:	1f4e0000 	svcne	0x004e0000
    3630:	1f561000 	svcne	0x00561000
    3634:	00021000 	andeq	r1, r2, r0
    3638:	1f56007d 	svcne	0x0056007d
    363c:	1f701000 	svcne	0x00701000
    3640:	00021000 	andeq	r1, r2, r0
    3644:	1f70087d 	svcne	0x0070087d
    3648:	1f721000 	svcne	0x00721000
    364c:	00021000 	andeq	r1, r2, r0
    3650:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    3660:	1f4e0000 	svcne	0x004e0000
    3664:	1f581000 	svcne	0x00581000
    3668:	00011000 	andeq	r1, r1, r0
    366c:	001f5850 	andseq	r5, pc, r0, asr r8	; <UNPREDICTABLE>
    3670:	001f6d10 	andseq	r6, pc, r0, lsl sp	; <UNPREDICTABLE>
    3674:	53000110 	movwpl	r0, #272	; 0x110
    3678:	10001f6d 	andne	r1, r0, sp, ror #30
    367c:	10001f70 	andne	r1, r0, r0, ror pc
    3680:	01f30004 	mvnseq	r0, r4
    3684:	1f709f50 	svcne	0x00709f50
    3688:	1f721000 	svcne	0x00721000
    368c:	00011000 	andeq	r1, r1, r0
    3690:	00000050 	andeq	r0, r0, r0, asr r0
	...
    36a0:	001f4e00 	andseq	r4, pc, r0, lsl #28
    36a4:	001f5a10 	andseq	r5, pc, r0, lsl sl	; <UNPREDICTABLE>
    36a8:	51000110 	tstpl	r0, r0, lsl r1
    36ac:	10001f5a 	andne	r1, r0, sl, asr pc
    36b0:	10001f6d 	andne	r1, r0, sp, ror #30
    36b4:	6d500001 	ldclvs	0, cr0, [r0, #-4]
    36b8:	7010001f 	andsvc	r0, r0, pc, lsl r0
    36bc:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    36c0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    36c4:	001f709f 	mulseq	pc, pc, r0	; <UNPREDICTABLE>
    36c8:	001f7210 	andseq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    36cc:	51000110 	tstpl	r0, r0, lsl r1
	...
    36d8:	10001ed8 	ldrdne	r1, [r0], -r8
    36dc:	10001eda 	ldrdne	r1, [r0], -sl
    36e0:	007d0002 	rsbseq	r0, sp, r2
    36e4:	10001eda 	ldrdne	r1, [r0], -sl
    36e8:	10001f4e 	andne	r1, r0, lr, asr #30
    36ec:	107d0002 	rsbsne	r0, sp, r2
	...
    3708:	10001ed8 	ldrdne	r1, [r0], -r8
    370c:	10001eea 	andne	r1, r0, sl, ror #29
    3710:	ea500001 	b	140371c <__RAM_SIZE+0x130371c>
    3714:	f010001e 			; <UNDEFINED> instruction: 0xf010001e
    3718:	0110001e 	tsteq	r0, lr, lsl r0
    371c:	1ef05400 	cdpne	4, 15, cr5, cr0, cr0, {0}
    3720:	1ef21000 	cdpne	0, 15, cr1, cr2, cr0, {0}
    3724:	00011000 	andeq	r1, r1, r0
    3728:	001ef250 	andseq	pc, lr, r0, asr r2	; <UNPREDICTABLE>
    372c:	001efc10 	andseq	pc, lr, r0, lsl ip	; <UNPREDICTABLE>
    3730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3734:	10001efc 	strdne	r1, [r0], -ip
    3738:	10001f00 	andne	r1, r0, r0, lsl #30
    373c:	00500001 	subseq	r0, r0, r1
    3740:	1a10001f 	bne	4037c4 <__RAM_SIZE+0x3037c4>
    3744:	0110001f 	tsteq	r0, pc, lsl r0
    3748:	1f1a5400 	svcne	0x001a5400
    374c:	1f1c1000 	svcne	0x001c1000
    3750:	00011000 	andeq	r1, r1, r0
    3754:	001f1c50 	andseq	r1, pc, r0, asr ip	; <UNPREDICTABLE>
    3758:	001f4e10 	andseq	r4, pc, r0, lsl lr	; <UNPREDICTABLE>
    375c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3778:	10001ed8 	ldrdne	r1, [r0], -r8
    377c:	10001eea 	andne	r1, r0, sl, ror #29
    3780:	ea510001 	b	144378c <__RAM_SIZE+0x134378c>
    3784:	f010001e 			; <UNDEFINED> instruction: 0xf010001e
    3788:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    378c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3790:	001ef09f 	mulseq	lr, pc, r0	; <UNPREDICTABLE>
    3794:	001ef510 	andseq	pc, lr, r0, lsl r5	; <UNPREDICTABLE>
    3798:	51000110 	tstpl	r0, r0, lsl r1
    379c:	10001ef5 	strdne	r1, [r0], -r5
    37a0:	10001efc 	strdne	r1, [r0], -ip
    37a4:	01f30004 	mvnseq	r0, r4
    37a8:	1efc9f51 	mrcne	15, 7, r9, cr12, cr1, {2}
    37ac:	1f031000 	svcne	0x00031000
    37b0:	00011000 	andeq	r1, r1, r0
    37b4:	001f0351 	andseq	r0, pc, r1, asr r3	; <UNPREDICTABLE>
    37b8:	001f1a10 	andseq	r1, pc, r0, lsl sl	; <UNPREDICTABLE>
    37bc:	f3000410 	vqshl.u8	d0, d0, d0
    37c0:	1a9f5101 	bne	fe7d7bcc <__StackTop+0xc66d7bcc>
    37c4:	1f10001f 	svcne	0x0010001f
    37c8:	0110001f 	tsteq	r0, pc, lsl r0
    37cc:	1f1f5100 	svcne	0x001f5100
    37d0:	1f4e1000 	svcne	0x004e1000
    37d4:	00041000 	andeq	r1, r4, r0
    37d8:	9f5101f3 	svcls	0x005101f3
	...
    37e8:	10001ed8 	ldrdne	r1, [r0], -r8
    37ec:	10001ee2 	andne	r1, r0, r2, ror #29
    37f0:	e2520001 	subs	r0, r2, #1
    37f4:	4e10001e 	mrcmi	0, 0, r0, cr0, cr14, {0}
    37f8:	0110001f 	tsteq	r0, pc, lsl r0
    37fc:	00005500 	andeq	r5, r0, r0, lsl #10
    3800:	00000000 	andeq	r0, r0, r0
    3804:	00010000 	andeq	r0, r1, r0
	...
    3810:	10001ede 	ldrdne	r1, [r0], -lr
    3814:	10001eea 	andne	r1, r0, sl, ror #29
    3818:	9f300002 	svcls	0x00300002
    381c:	10001eea 	andne	r1, r0, sl, ror #29
    3820:	10001ef0 	strdne	r1, [r0], -r0
    3824:	f0500001 			; <UNDEFINED> instruction: 0xf0500001
    3828:	f610001e 			; <UNDEFINED> instruction: 0xf610001e
    382c:	0210001e 	andseq	r0, r0, #30
    3830:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
    3834:	fc10001e 	ldc2	0, cr0, [r0], {30}
    3838:	0110001e 	tsteq	r0, lr, lsl r0
    383c:	1efc5000 	cdpne	0, 15, cr5, cr12, cr0, {0}
    3840:	1f4e1000 	svcne	0x004e1000
    3844:	00021000 	andeq	r1, r2, r0
    3848:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    3858:	10001ee0 	andne	r1, r0, r0, ror #29
    385c:	10001eec 	andne	r1, r0, ip, ror #29
    3860:	ec560001 	mrrc	0, 0, r0, r6, cr1
    3864:	f010001e 			; <UNDEFINED> instruction: 0xf010001e
    3868:	0310001e 	tsteq	r0, #30
    386c:	9f7f7600 	svcls	0x007f7600
    3870:	10001ef0 	strdne	r1, [r0], -r0
    3874:	10001f4e 	andne	r1, r0, lr, asr #30
    3878:	00560001 	subseq	r0, r6, r1
	...
    3890:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    389c:	00530001 	subseq	r0, r3, r1
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	04000000 	streq	r0, [r0], #-0
    38a8:	5001f300 	andpl	pc, r1, r0, lsl #6
    38ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    38b0:	00000000 	andeq	r0, r0, r0
    38b4:	00010000 	andeq	r0, r1, r0
    38b8:	00000000 	andeq	r0, r0, r0
    38bc:	01000000 	mrseq	r0, (UNDEF: 0)
    38c0:	00005000 	andeq	r5, r0, r0
	...
    38d4:	00010000 	andeq	r0, r1, r0
    38d8:	00000050 	andeq	r0, r0, r0, asr r0
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	f3000400 	vshl.u8	d0, d0, d0
    38e4:	009f5001 	addseq	r5, pc, r1
	...
    38f8:	01000000 	mrseq	r0, (UNDEF: 0)
    38fc:	00005000 	andeq	r5, r0, r0
    3900:	00000000 	andeq	r0, r0, r0
    3904:	00040000 	andeq	r0, r4, r0
    3908:	9f5001f3 	svcls	0x005001f3
	...
    391c:	007d0002 	rsbseq	r0, sp, r2
	...
    3928:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3944:	00500001 	subseq	r0, r0, r1
    3948:	00000000 	andeq	r0, r0, r0
    394c:	04000000 	streq	r0, [r0], #-0
    3950:	5001f300 	andpl	pc, r1, r0, lsl #6
    3954:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3958:	00000000 	andeq	r0, r0, r0
    395c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3968:	01f30004 	mvnseq	r0, r4
    396c:	00009f50 	andeq	r9, r0, r0, asr pc
    3970:	00000000 	andeq	r0, r0, r0
    3974:	00010000 	andeq	r0, r1, r0
	...
    3984:	00010000 	andeq	r0, r1, r0
    3988:	00000050 	andeq	r0, r0, r0, asr r0
    398c:	00000000 	andeq	r0, r0, r0
    3990:	f3000400 	vshl.u8	d0, d0, d0
    3994:	009f5001 	addseq	r5, pc, r1
    3998:	00000000 	andeq	r0, r0, r0
    399c:	01000000 	mrseq	r0, (UNDEF: 0)
    39a0:	00005000 	andeq	r5, r0, r0
    39a4:	00000000 	andeq	r0, r0, r0
    39a8:	00040000 	andeq	r0, r4, r0
    39ac:	9f5001f3 	svcls	0x005001f3
	...
    39c4:	00500001 	subseq	r0, r0, r1
    39c8:	00000000 	andeq	r0, r0, r0
    39cc:	04000000 	streq	r0, [r0], #-0
    39d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    39d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    39e4:	01000000 	mrseq	r0, (UNDEF: 0)
    39e8:	00005000 	andeq	r5, r0, r0
    39ec:	00000000 	andeq	r0, r0, r0
    39f0:	00030000 	andeq	r0, r3, r0
	...
    39fc:	00010000 	andeq	r0, r1, r0
    3a00:	00000050 	andeq	r0, r0, r0, asr r0
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	f3000400 	vshl.u8	d0, d0, d0
    3a0c:	009f5001 	addseq	r5, pc, r1
	...
    3a1c:	02000000 	andeq	r0, r0, #0
    3a20:	00007d00 	andeq	r7, r0, r0, lsl #26
    3a24:	00000000 	andeq	r0, r0, r0
    3a28:	02000000 	andeq	r0, r0, #0
    3a2c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3a44:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a50:	00540001 	subseq	r0, r4, r1
    3a54:	00000000 	andeq	r0, r0, r0
    3a58:	04000000 	streq	r0, [r0], #-0
    3a5c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3a60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3a70:	01000000 	mrseq	r0, (UNDEF: 0)
    3a74:	00005400 	andeq	r5, r0, r0, lsl #8
    3a78:	00000000 	andeq	r0, r0, r0
    3a7c:	00020000 	andeq	r0, r2, r0
	...
    3a8c:	00500001 	subseq	r0, r0, r1
    3a90:	00000000 	andeq	r0, r0, r0
    3a94:	01000000 	mrseq	r0, (UNDEF: 0)
    3a98:	00005400 	andeq	r5, r0, r0, lsl #8
    3a9c:	00000000 	andeq	r0, r0, r0
    3aa0:	00040000 	andeq	r0, r4, r0
    3aa4:	9f5001f3 	svcls	0x005001f3
	...
    3ab8:	007d0002 	rsbseq	r0, sp, r2
	...
    3ac4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3adc:	00010000 	andeq	r0, r1, r0
    3ae0:	00000050 	andeq	r0, r0, r0, asr r0
    3ae4:	00000000 	andeq	r0, r0, r0
    3ae8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3af4:	01f30004 	mvnseq	r0, r4
    3af8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3b0c:	00540001 	subseq	r0, r4, r1
	...
    3b1c:	02000000 	andeq	r0, r0, #0
    3b20:	00007d00 	andeq	r7, r0, r0, lsl #26
    3b24:	00000000 	andeq	r0, r0, r0
    3b28:	02000000 	andeq	r0, r0, #0
    3b2c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    3b48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b54:	00540001 	subseq	r0, r4, r1
    3b58:	00000000 	andeq	r0, r0, r0
    3b5c:	04000000 	streq	r0, [r0], #-0
    3b60:	5001f300 	andpl	pc, r1, r0, lsl #6
    3b64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3b68:	00000000 	andeq	r0, r0, r0
    3b6c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3b78:	01f30004 	mvnseq	r0, r4
    3b7c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3b90:	00010000 	andeq	r0, r1, r0
    3b94:	00000051 	andeq	r0, r0, r1, asr r0
    3b98:	00000000 	andeq	r0, r0, r0
    3b9c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3ba8:	00010000 	andeq	r0, r1, r0
	...
    3bb4:	00540001 	subseq	r0, r4, r1
    3bb8:	00000000 	andeq	r0, r0, r0
    3bbc:	02000000 	andeq	r0, r0, #0
    3bc0:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    3bd8:	01000000 	mrseq	r0, (UNDEF: 0)
    3bdc:	00005000 	andeq	r5, r0, r0
    3be0:	00000000 	andeq	r0, r0, r0
    3be4:	00010000 	andeq	r0, r1, r0
    3be8:	00000055 	andeq	r0, r0, r5, asr r0
    3bec:	00000000 	andeq	r0, r0, r0
    3bf0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3bfc:	00550001 	subseq	r0, r5, r1
	...
    3c10:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    3c1c:	00000004 	andeq	r0, r0, r4
	...
    3c2c:	00010000 	andeq	r0, r1, r0
    3c30:	00000050 	andeq	r0, r0, r0, asr r0
    3c34:	00000000 	andeq	r0, r0, r0
    3c38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3c44:	01f30004 	mvnseq	r0, r4
    3c48:	00009f50 	andeq	r9, r0, r0, asr pc
    3c4c:	00000000 	andeq	r0, r0, r0
    3c50:	00010000 	andeq	r0, r1, r0
    3c54:	00000054 	andeq	r0, r0, r4, asr r0
    3c58:	00000000 	andeq	r0, r0, r0
    3c5c:	f3000400 	vshl.u8	d0, d0, d0
    3c60:	009f5001 	addseq	r5, pc, r1
	...
    3c70:	02000000 	andeq	r0, r0, #0
    3c74:	00007d00 	andeq	r7, r0, r0, lsl #26
    3c78:	00000000 	andeq	r0, r0, r0
    3c7c:	02000000 	andeq	r0, r0, #0
    3c80:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    3cb0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3cbc:	00540001 	subseq	r0, r4, r1
    3cc0:	00000000 	andeq	r0, r0, r0
    3cc4:	04000000 	streq	r0, [r0], #-0
    3cc8:	5001f300 	andpl	pc, r1, r0, lsl #6
    3ccc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3cd0:	00000000 	andeq	r0, r0, r0
    3cd4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3ce0:	01f30004 	mvnseq	r0, r4
    3ce4:	00009f50 	andeq	r9, r0, r0, asr pc
    3ce8:	00000000 	andeq	r0, r0, r0
    3cec:	00010000 	andeq	r0, r1, r0
    3cf0:	00000054 	andeq	r0, r0, r4, asr r0
    3cf4:	00000000 	andeq	r0, r0, r0
    3cf8:	f3000400 	vshl.u8	d0, d0, d0
    3cfc:	009f5001 	addseq	r5, pc, r1
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	01000000 	mrseq	r0, (UNDEF: 0)
    3d08:	00005400 	andeq	r5, r0, r0, lsl #8
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	00040000 	andeq	r0, r4, r0
    3d14:	9f5001f3 	svcls	0x005001f3
	...
    3d20:	00540001 	subseq	r0, r4, r1
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	04000000 	streq	r0, [r0], #-0
    3d2c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d34:	00000000 	andeq	r0, r0, r0
    3d38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3d44:	01f30004 	mvnseq	r0, r4
    3d48:	00009f50 	andeq	r9, r0, r0, asr pc
    3d4c:	00000000 	andeq	r0, r0, r0
    3d50:	00010000 	andeq	r0, r1, r0
    3d54:	00000054 	andeq	r0, r0, r4, asr r0
    3d58:	00000000 	andeq	r0, r0, r0
    3d5c:	f3000400 	vshl.u8	d0, d0, d0
    3d60:	009f5001 	addseq	r5, pc, r1
	...
    3d74:	01000000 	mrseq	r0, (UNDEF: 0)
    3d78:	00005100 	andeq	r5, r0, r0, lsl #2
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	00010000 	andeq	r0, r1, r0
    3d84:	00000057 	andeq	r0, r0, r7, asr r0
	...
    3d98:	52000100 	andpl	r0, r0, #0, 2
	...
    3da4:	00580001 	subseq	r0, r8, r1
	...
    3db8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3dd4:	00500001 	subseq	r0, r0, r1
    3dd8:	00000000 	andeq	r0, r0, r0
    3ddc:	01000000 	mrseq	r0, (UNDEF: 0)
    3de0:	00005500 	andeq	r5, r0, r0, lsl #10
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	00010000 	andeq	r0, r1, r0
    3dec:	00000050 	andeq	r0, r0, r0, asr r0
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3e00:	00000003 	andeq	r0, r0, r3
	...
    3e24:	00010000 	andeq	r0, r1, r0
    3e28:	00000050 	andeq	r0, r0, r0, asr r0
    3e2c:	00000000 	andeq	r0, r0, r0
    3e30:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3e3c:	01f30004 	mvnseq	r0, r4
    3e40:	00009f50 	andeq	r9, r0, r0, asr pc
    3e44:	00000000 	andeq	r0, r0, r0
    3e48:	00010000 	andeq	r0, r1, r0
    3e4c:	00000054 	andeq	r0, r0, r4, asr r0
    3e50:	00000000 	andeq	r0, r0, r0
    3e54:	f3000400 	vshl.u8	d0, d0, d0
    3e58:	009f5001 	addseq	r5, pc, r1
    3e5c:	00000000 	andeq	r0, r0, r0
    3e60:	01000000 	mrseq	r0, (UNDEF: 0)
    3e64:	00005400 	andeq	r5, r0, r0, lsl #8
    3e68:	00000000 	andeq	r0, r0, r0
    3e6c:	00040000 	andeq	r0, r4, r0
    3e70:	9f5001f3 	svcls	0x005001f3
	...
    3e7c:	00540001 	subseq	r0, r4, r1
    3e80:	00000000 	andeq	r0, r0, r0
    3e84:	04000000 	streq	r0, [r0], #-0
    3e88:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e90:	00000000 	andeq	r0, r0, r0
    3e94:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3ea0:	01f30004 	mvnseq	r0, r4
    3ea4:	00009f50 	andeq	r9, r0, r0, asr pc
    3ea8:	00000000 	andeq	r0, r0, r0
    3eac:	00010000 	andeq	r0, r1, r0
    3eb0:	00000054 	andeq	r0, r0, r4, asr r0
    3eb4:	00000000 	andeq	r0, r0, r0
    3eb8:	f3000400 	vshl.u8	d0, d0, d0
    3ebc:	009f5001 	addseq	r5, pc, r1
    3ec0:	00000000 	andeq	r0, r0, r0
    3ec4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ec8:	00005400 	andeq	r5, r0, r0, lsl #8
    3ecc:	00000000 	andeq	r0, r0, r0
    3ed0:	00040000 	andeq	r0, r4, r0
    3ed4:	9f5001f3 	svcls	0x005001f3
	...
    3eec:	00010000 	andeq	r0, r1, r0
    3ef0:	00000056 	andeq	r0, r0, r6, asr r0
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3f04:	01760003 	cmneq	r6, r3
    3f08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    3f20:	00005900 	andeq	r5, r0, r0, lsl #18
    3f24:	00000000 	andeq	r0, r0, r0
    3f28:	00030000 	andeq	r0, r3, r0
    3f2c:	009f7f79 	addseq	r7, pc, r9, ror pc	; <UNPREDICTABLE>
    3f30:	00000000 	andeq	r0, r0, r0
    3f34:	01000000 	mrseq	r0, (UNDEF: 0)
    3f38:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    3f4c:	00010000 	andeq	r0, r1, r0
    3f50:	00000050 	andeq	r0, r0, r0, asr r0
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3f6c:	007d0002 	rsbseq	r0, sp, r2
	...
    3f78:	107d0002 	rsbsne	r0, sp, r2
	...
    3f84:	207d0002 	rsbscs	r0, sp, r2
	...
    3f90:	107d0002 	rsbsne	r0, sp, r2
	...
    3f9c:	207d0002 	rsbscs	r0, sp, r2
	...
    3fb4:	00500001 	subseq	r0, r0, r1
    3fb8:	00000000 	andeq	r0, r0, r0
    3fbc:	01000000 	mrseq	r0, (UNDEF: 0)
    3fc0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3fd4:	00010000 	andeq	r0, r1, r0
    3fd8:	00000051 	andeq	r0, r0, r1, asr r0
    3fdc:	00000000 	andeq	r0, r0, r0
    3fe0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3ff4:	00010000 	andeq	r0, r1, r0
    3ff8:	00000052 	andeq	r0, r0, r2, asr r0
    3ffc:	00000000 	andeq	r0, r0, r0
    4000:	00000100 	andeq	r0, r0, r0, lsl #2
    4004:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4010:	02000000 	andeq	r0, r0, #0
    4014:	009f3000 	addseq	r3, pc, r0
    4018:	00000000 	andeq	r0, r0, r0
    401c:	01000000 	mrseq	r0, (UNDEF: 0)
    4020:	00005500 	andeq	r5, r0, r0, lsl #10
    4024:	00000000 	andeq	r0, r0, r0
    4028:	00010000 	andeq	r0, r1, r0
    402c:	00000055 	andeq	r0, r0, r5, asr r0
    4030:	00000000 	andeq	r0, r0, r0
    4034:	31000200 	mrscc	r0, R8_usr
    4038:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    403c:	00000000 	andeq	r0, r0, r0
    4040:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4058:	00550001 	subseq	r0, r5, r1
    405c:	00000000 	andeq	r0, r0, r0
    4060:	01000000 	mrseq	r0, (UNDEF: 0)
    4064:	00005500 	andeq	r5, r0, r0, lsl #10
    4068:	00000000 	andeq	r0, r0, r0
    406c:	00040000 	andeq	r0, r4, r0
	...
    4078:	00010000 	andeq	r0, r1, r0
    407c:	00000050 	andeq	r0, r0, r0, asr r0
    4080:	00000000 	andeq	r0, r0, r0
    4084:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    409c:	00530001 	subseq	r0, r3, r1
    40a0:	00000000 	andeq	r0, r0, r0
    40a4:	01000000 	mrseq	r0, (UNDEF: 0)
    40a8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    40b8:	00020000 	andeq	r0, r2, r0
    40bc:	0000007d 	andeq	r0, r0, sp, ror r0
    40c0:	00000000 	andeq	r0, r0, r0
    40c4:	00020000 	andeq	r0, r2, r0
    40c8:	0000107d 	andeq	r1, r0, sp, ror r0
    40cc:	00000000 	andeq	r0, r0, r0
    40d0:	00020000 	andeq	r0, r2, r0
    40d4:	0000207d 	andeq	r2, r0, sp, ror r0
    40d8:	00000000 	andeq	r0, r0, r0
    40dc:	00020000 	andeq	r0, r2, r0
    40e0:	0000107d 	andeq	r1, r0, sp, ror r0
    40e4:	00000000 	andeq	r0, r0, r0
    40e8:	00020000 	andeq	r0, r2, r0
    40ec:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    4100:	00010000 	andeq	r0, r1, r0
    4104:	00000050 	andeq	r0, r0, r0, asr r0
    4108:	00000000 	andeq	r0, r0, r0
    410c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4120:	00010000 	andeq	r0, r1, r0
    4124:	00000051 	andeq	r0, r0, r1, asr r0
    4128:	00000000 	andeq	r0, r0, r0
    412c:	00000100 	andeq	r0, r0, r0, lsl #2
    4130:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    413c:	30000200 	andcc	r0, r0, r0, lsl #4
    4140:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4144:	00000000 	andeq	r0, r0, r0
    4148:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4154:	9f310002 	svcls	0x00310002
	...
    4160:	00550001 	subseq	r0, r5, r1
    4164:	00000000 	andeq	r0, r0, r0
    4168:	03000000 	movweq	r0, #0
	...
    4174:	01000000 	mrseq	r0, (UNDEF: 0)
    4178:	00005000 	andeq	r5, r0, r0
    417c:	00000000 	andeq	r0, r0, r0
    4180:	00010000 	andeq	r0, r1, r0
    4184:	00000054 	andeq	r0, r0, r4, asr r0
    4188:	00000000 	andeq	r0, r0, r0
    418c:	00000400 	andeq	r0, r0, r0, lsl #8
	...
    419c:	30000200 	andcc	r0, r0, r0, lsl #4
    41a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    41a4:	00000000 	andeq	r0, r0, r0
    41a8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    41b4:	00500001 	subseq	r0, r0, r1
    41b8:	00000000 	andeq	r0, r0, r0
    41bc:	01000000 	mrseq	r0, (UNDEF: 0)
    41c0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    41dc:	00530001 	subseq	r0, r3, r1
    41e0:	00000000 	andeq	r0, r0, r0
    41e4:	03000000 	movweq	r0, #0
    41e8:	9f017300 	svcls	0x00017300
	...
    41f4:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    41f8:	01230600 			; <UNDEFINED> instruction: 0x01230600
    41fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4200:	00000000 	andeq	r0, r0, r0
    4204:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    4208:	230600c8 	movwcs	r0, #24776	; 0x60c8
    420c:	00009f01 	andeq	r9, r0, r1, lsl #30
    4210:	00000000 	andeq	r0, r0, r0
    4214:	00010000 	andeq	r0, r1, r0
    4218:	00000053 	andeq	r0, r0, r3, asr r0
	...
    422c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4238:	00510001 	subseq	r0, r1, r1
    423c:	00000000 	andeq	r0, r0, r0
    4240:	30000000 	andcc	r0, r0, r0
    4244:	32100021 	andscc	r0, r0, #33	; 0x21
    4248:	02100021 	andseq	r0, r0, #33	; 0x21
    424c:	32007d00 	andcc	r7, r0, #0, 26
    4250:	34100021 	ldrcc	r0, [r0], #-33	; 0xffffffdf
    4254:	02100021 	andseq	r0, r0, #33	; 0x21
    4258:	34147d00 	ldrcc	r7, [r4], #-3328	; 0xfffff300
    425c:	56100021 	ldrpl	r0, [r0], -r1, lsr #32
    4260:	02100021 	andseq	r0, r0, #33	; 0x21
    4264:	56287d00 	strtpl	r7, [r8], -r0, lsl #26
    4268:	58100021 	ldmdapl	r0, {r0, r5}
    426c:	02100021 	andseq	r0, r0, #33	; 0x21
    4270:	58147d00 	ldmdapl	r4, {r8, sl, fp, ip, sp, lr}
    4274:	20100021 	andscs	r0, r0, r1, lsr #32
    4278:	02100022 	andseq	r0, r0, #34	; 0x22
    427c:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
    4288:	30000000 	andcc	r0, r0, r0
    428c:	3e100021 	cdpcc	0, 1, cr0, cr0, cr1, {1}
    4290:	01100021 	tsteq	r0, r1, lsr #32
    4294:	213e5000 	teqcs	lr, r0
    4298:	22201000 	eorcs	r1, r0, #0
    429c:	00011000 	andeq	r1, r1, r0
    42a0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    42ac:	00213000 	eoreq	r3, r1, r0
    42b0:	00213e10 	eoreq	r3, r1, r0, lsl lr
    42b4:	51000110 	tstpl	r0, r0, lsl r1
    42b8:	1000213e 	andne	r2, r0, lr, lsr r1
    42bc:	10002220 	andne	r2, r0, r0, lsr #4
    42c0:	00570001 	subseq	r0, r7, r1
	...
    42cc:	00213000 	eoreq	r3, r1, r0
    42d0:	00213e10 	eoreq	r3, r1, r0, lsl lr
    42d4:	52000110 	andpl	r0, r0, #16, 2
	...
    42e0:	01000001 	tsteq	r0, r1
    42e4:	00000001 	andeq	r0, r0, r1
    42e8:	1000213a 	andne	r2, r0, sl, lsr r1
    42ec:	1000213e 	andne	r2, r0, lr, lsr r1
    42f0:	9f300002 	svcls	0x00300002
    42f4:	1000213e 	andne	r2, r0, lr, lsr r1
    42f8:	10002178 	andne	r2, r0, r8, ror r1
    42fc:	78560001 	ldmdavc	r6, {r0}^
    4300:	7c100021 	ldcvc	0, cr0, [r0], {33}	; 0x21
    4304:	02100021 	andseq	r0, r0, #33	; 0x21
    4308:	7c9f3100 	ldfvcs	f3, [pc], {0}
    430c:	20100021 	andscs	r0, r0, r1, lsr #32
    4310:	01100022 	tsteq	r0, r2, lsr #32
    4314:	00005600 	andeq	r5, r0, r0, lsl #12
    4318:	00000000 	andeq	r0, r0, r0
    431c:	00030000 	andeq	r0, r3, r0
    4320:	213a0000 	teqcs	sl, r0
    4324:	213e1000 	teqcs	lr, r0
    4328:	00011000 	andeq	r1, r1, r0
    432c:	00213e50 	eoreq	r3, r1, r0, asr lr
    4330:	00222010 	eoreq	r2, r2, r0, lsl r0
    4334:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4348:	213e0000 	teqcs	lr, r0
    434c:	21481000 	mrscs	r1, (UNDEF: 72)
    4350:	00011000 	andeq	r1, r1, r0
    4354:	00214855 	eoreq	r4, r1, r5, asr r8
    4358:	00215410 	eoreq	r5, r1, r0, lsl r4
    435c:	75000310 	strvc	r0, [r0, #-784]	; 0xfffffcf0
    4360:	21589f01 	cmpcs	r8, r1, lsl #30
    4364:	216a1000 	cmncs	sl, r0
    4368:	00031000 	andeq	r1, r3, r0
    436c:	6a9f0175 	bvs	fe7c4948 <__StackTop+0xc66c4948>
    4370:	ac100021 	ldcge	0, cr0, [r0], {33}	; 0x21
    4374:	01100021 	tsteq	r0, r1, lsr #32
    4378:	21b25500 			; <UNDEFINED> instruction: 0x21b25500
    437c:	22201000 	eorcs	r1, r0, #0
    4380:	00011000 	andeq	r1, r1, r0
    4384:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4394:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    43a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    43a4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    43dc:	01000000 	mrseq	r0, (UNDEF: 0)
    43e0:	00005000 	andeq	r5, r0, r0
    43e4:	00000000 	andeq	r0, r0, r0
    43e8:	00010000 	andeq	r0, r1, r0
    43ec:	00000054 	andeq	r0, r0, r4, asr r0
    43f0:	00000000 	andeq	r0, r0, r0
    43f4:	f3000400 	vshl.u8	d0, d0, d0
    43f8:	009f5001 	addseq	r5, pc, r1
    43fc:	00000000 	andeq	r0, r0, r0
    4400:	01000000 	mrseq	r0, (UNDEF: 0)
    4404:	00005400 	andeq	r5, r0, r0, lsl #8
    4408:	00000000 	andeq	r0, r0, r0
    440c:	00040000 	andeq	r0, r4, r0
    4410:	9f5001f3 	svcls	0x005001f3
	...
    441c:	00540001 	subseq	r0, r4, r1
    4420:	00000000 	andeq	r0, r0, r0
    4424:	04000000 	streq	r0, [r0], #-0
    4428:	5001f300 	andpl	pc, r1, r0, lsl #6
    442c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4430:	00000000 	andeq	r0, r0, r0
    4434:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4440:	01f30004 	mvnseq	r0, r4
    4444:	00009f50 	andeq	r9, r0, r0, asr pc
    4448:	00000000 	andeq	r0, r0, r0
    444c:	00010000 	andeq	r0, r1, r0
    4450:	00000054 	andeq	r0, r0, r4, asr r0
    4454:	00000000 	andeq	r0, r0, r0
    4458:	f3000400 	vshl.u8	d0, d0, d0
    445c:	009f5001 	addseq	r5, pc, r1
    4460:	00000000 	andeq	r0, r0, r0
    4464:	01000000 	mrseq	r0, (UNDEF: 0)
    4468:	00005400 	andeq	r5, r0, r0, lsl #8
    446c:	00000000 	andeq	r0, r0, r0
    4470:	00040000 	andeq	r0, r4, r0
    4474:	9f5001f3 	svcls	0x005001f3
	...
    4480:	00540001 	subseq	r0, r4, r1
    4484:	00000000 	andeq	r0, r0, r0
    4488:	04000000 	streq	r0, [r0], #-0
    448c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4490:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4494:	00000000 	andeq	r0, r0, r0
    4498:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    44a4:	01f30004 	mvnseq	r0, r4
    44a8:	00009f50 	andeq	r9, r0, r0, asr pc
    44ac:	00000000 	andeq	r0, r0, r0
    44b0:	00010000 	andeq	r0, r1, r0
    44b4:	00000054 	andeq	r0, r0, r4, asr r0
    44b8:	00000000 	andeq	r0, r0, r0
    44bc:	f3000400 	vshl.u8	d0, d0, d0
    44c0:	009f5001 	addseq	r5, pc, r1
    44c4:	00000000 	andeq	r0, r0, r0
    44c8:	01000000 	mrseq	r0, (UNDEF: 0)
    44cc:	00005400 	andeq	r5, r0, r0, lsl #8
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	00040000 	andeq	r0, r4, r0
    44d8:	9f5001f3 	svcls	0x005001f3
	...
    44f0:	00510001 	subseq	r0, r1, r1
    44f4:	00000000 	andeq	r0, r0, r0
    44f8:	01000000 	mrseq	r0, (UNDEF: 0)
    44fc:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    4510:	00540001 	subseq	r0, r4, r1
	...
    4530:	01000000 	mrseq	r0, (UNDEF: 0)
    4534:	00005000 	andeq	r5, r0, r0
    4538:	00000000 	andeq	r0, r0, r0
    453c:	00010000 	andeq	r0, r1, r0
    4540:	00000055 	andeq	r0, r0, r5, asr r0
    4544:	00000000 	andeq	r0, r0, r0
    4548:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4554:	00550001 	subseq	r0, r5, r1
    4558:	00000000 	andeq	r0, r0, r0
    455c:	01000000 	mrseq	r0, (UNDEF: 0)
    4560:	00005000 	andeq	r5, r0, r0
    4564:	00000000 	andeq	r0, r0, r0
    4568:	00010000 	andeq	r0, r1, r0
    456c:	00000055 	andeq	r0, r0, r5, asr r0
    4570:	00000000 	andeq	r0, r0, r0
    4574:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4580:	00550001 	subseq	r0, r5, r1
    4584:	00000000 	andeq	r0, r0, r0
    4588:	03000000 	movweq	r0, #0
	...
    45bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    45c8:	00540001 	subseq	r0, r4, r1
    45cc:	00000000 	andeq	r0, r0, r0
    45d0:	04000000 	streq	r0, [r0], #-0
    45d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    45d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    45dc:	00000000 	andeq	r0, r0, r0
    45e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    45ec:	01f30004 	mvnseq	r0, r4
    45f0:	00009f50 	andeq	r9, r0, r0, asr pc
    45f4:	00000000 	andeq	r0, r0, r0
    45f8:	00010000 	andeq	r0, r1, r0
    45fc:	00000054 	andeq	r0, r0, r4, asr r0
    4600:	00000000 	andeq	r0, r0, r0
    4604:	f3000400 	vshl.u8	d0, d0, d0
    4608:	009f5001 	addseq	r5, pc, r1
    460c:	00000000 	andeq	r0, r0, r0
    4610:	01000000 	mrseq	r0, (UNDEF: 0)
    4614:	00005400 	andeq	r5, r0, r0, lsl #8
    4618:	00000000 	andeq	r0, r0, r0
    461c:	00040000 	andeq	r0, r4, r0
    4620:	9f5001f3 	svcls	0x005001f3
	...
    462c:	00540001 	subseq	r0, r4, r1
    4630:	00000000 	andeq	r0, r0, r0
    4634:	04000000 	streq	r0, [r0], #-0
    4638:	5001f300 	andpl	pc, r1, r0, lsl #6
    463c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4640:	00000000 	andeq	r0, r0, r0
    4644:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4650:	01f30004 	mvnseq	r0, r4
    4654:	00009f50 	andeq	r9, r0, r0, asr pc
    4658:	00000000 	andeq	r0, r0, r0
    465c:	00010000 	andeq	r0, r1, r0
    4660:	00000054 	andeq	r0, r0, r4, asr r0
    4664:	00000000 	andeq	r0, r0, r0
    4668:	f3000400 	vshl.u8	d0, d0, d0
    466c:	009f5001 	addseq	r5, pc, r1
    4670:	00000000 	andeq	r0, r0, r0
    4674:	01000000 	mrseq	r0, (UNDEF: 0)
    4678:	00005400 	andeq	r5, r0, r0, lsl #8
    467c:	00000000 	andeq	r0, r0, r0
    4680:	00040000 	andeq	r0, r4, r0
    4684:	9f5001f3 	svcls	0x005001f3
	...
    4690:	00540001 	subseq	r0, r4, r1
    4694:	00000000 	andeq	r0, r0, r0
    4698:	04000000 	streq	r0, [r0], #-0
    469c:	5001f300 	andpl	pc, r1, r0, lsl #6
    46a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    46a4:	00000000 	andeq	r0, r0, r0
    46a8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    46b4:	01f30004 	mvnseq	r0, r4
    46b8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    46d8:	00010000 	andeq	r0, r1, r0
    46dc:	00000053 	andeq	r0, r0, r3, asr r0
    46e0:	00000000 	andeq	r0, r0, r0
    46e4:	73000300 	movwvc	r0, #768	; 0x300
    46e8:	00009f7f 	andeq	r9, r0, pc, ror pc
    46ec:	00000000 	andeq	r0, r0, r0
    46f0:	00070000 	andeq	r0, r7, r0
    46f4:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    46f8:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    46fc:	00000000 	andeq	r0, r0, r0
    4700:	07000000 	streq	r0, [r0, -r0]
    4704:	00c87400 	sbceq	r7, r8, r0, lsl #8
    4708:	9f1c3106 	svcls	0x001c3106
	...
    4714:	01f30009 	mvnseq	r0, r9
    4718:	06482350 			; <UNDEFINED> instruction: 0x06482350
    471c:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    4720:	00000000 	andeq	r0, r0, r0
    4724:	07000000 	streq	r0, [r0, -r0]
    4728:	00c87400 	sbceq	r7, r8, r0, lsl #8
    472c:	9f1c3106 	svcls	0x001c3106
	...
    4738:	7f730003 	svcvc	0x00730003
    473c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4740:	00000000 	andeq	r0, r0, r0
    4744:	53000100 	movwpl	r0, #256	; 0x100
	...
    475c:	00010000 	andeq	r0, r1, r0
    4760:	00000057 	andeq	r0, r0, r7, asr r0
    4764:	00000000 	andeq	r0, r0, r0
    4768:	77000300 	strvc	r0, [r0, -r0, lsl #6]
    476c:	00009f7f 	andeq	r9, r0, pc, ror pc
    4770:	00000000 	andeq	r0, r0, r0
    4774:	00010000 	andeq	r0, r1, r0
    4778:	00000057 	andeq	r0, r0, r7, asr r0
	...
    478c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4798:	00500001 	subseq	r0, r0, r1
	...
    47a8:	02000000 	andeq	r0, r0, #0
    47ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    47b0:	00000000 	andeq	r0, r0, r0
    47b4:	02000000 	andeq	r0, r0, #0
    47b8:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    47f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4804:	00540001 	subseq	r0, r4, r1
    4808:	00000000 	andeq	r0, r0, r0
    480c:	04000000 	streq	r0, [r0], #-0
    4810:	5001f300 	andpl	pc, r1, r0, lsl #6
    4814:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4818:	00000000 	andeq	r0, r0, r0
    481c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4828:	01f30004 	mvnseq	r0, r4
    482c:	00009f50 	andeq	r9, r0, r0, asr pc
    4830:	00000000 	andeq	r0, r0, r0
    4834:	00010000 	andeq	r0, r1, r0
    4838:	00000054 	andeq	r0, r0, r4, asr r0
    483c:	00000000 	andeq	r0, r0, r0
    4840:	f3000400 	vshl.u8	d0, d0, d0
    4844:	009f5001 	addseq	r5, pc, r1
    4848:	00000000 	andeq	r0, r0, r0
    484c:	01000000 	mrseq	r0, (UNDEF: 0)
    4850:	00005400 	andeq	r5, r0, r0, lsl #8
    4854:	00000000 	andeq	r0, r0, r0
    4858:	00040000 	andeq	r0, r4, r0
    485c:	9f5001f3 	svcls	0x005001f3
	...
    4868:	00540001 	subseq	r0, r4, r1
    486c:	00000000 	andeq	r0, r0, r0
    4870:	04000000 	streq	r0, [r0], #-0
    4874:	5001f300 	andpl	pc, r1, r0, lsl #6
    4878:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    487c:	00000000 	andeq	r0, r0, r0
    4880:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    488c:	01f30004 	mvnseq	r0, r4
    4890:	00009f50 	andeq	r9, r0, r0, asr pc
    4894:	00000000 	andeq	r0, r0, r0
    4898:	00010000 	andeq	r0, r1, r0
    489c:	00000054 	andeq	r0, r0, r4, asr r0
    48a0:	00000000 	andeq	r0, r0, r0
    48a4:	f3000400 	vshl.u8	d0, d0, d0
    48a8:	009f5001 	addseq	r5, pc, r1
    48ac:	00000000 	andeq	r0, r0, r0
    48b0:	01000000 	mrseq	r0, (UNDEF: 0)
    48b4:	00005400 	andeq	r5, r0, r0, lsl #8
    48b8:	00000000 	andeq	r0, r0, r0
    48bc:	00040000 	andeq	r0, r4, r0
    48c0:	9f5001f3 	svcls	0x005001f3
	...
    48cc:	00540001 	subseq	r0, r4, r1
    48d0:	00000000 	andeq	r0, r0, r0
    48d4:	04000000 	streq	r0, [r0], #-0
    48d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    48dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48e0:	00000000 	andeq	r0, r0, r0
    48e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    48f0:	01f30004 	mvnseq	r0, r4
    48f4:	00009f50 	andeq	r9, r0, r0, asr pc
    48f8:	00000000 	andeq	r0, r0, r0
    48fc:	00010000 	andeq	r0, r1, r0
    4900:	00000054 	andeq	r0, r0, r4, asr r0
    4904:	00000000 	andeq	r0, r0, r0
    4908:	f3000400 	vshl.u8	d0, d0, d0
    490c:	009f5001 	addseq	r5, pc, r1
	...
    4920:	01000000 	mrseq	r0, (UNDEF: 0)
    4924:	00005100 	andeq	r5, r0, r0, lsl #2
    4928:	00000000 	andeq	r0, r0, r0
    492c:	00010000 	andeq	r0, r1, r0
    4930:	00000057 	andeq	r0, r0, r7, asr r0
	...
    4944:	52000100 	andpl	r0, r0, #0, 2
	...
    4950:	00590001 	subseq	r0, r9, r1
	...
    4964:	01000000 	mrseq	r0, (UNDEF: 0)
    4968:	00005300 	andeq	r5, r0, r0, lsl #6
    496c:	00000000 	andeq	r0, r0, r0
    4970:	00010000 	andeq	r0, r1, r0
    4974:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4984:	01000000 	mrseq	r0, (UNDEF: 0)
    4988:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    49a0:	00010000 	andeq	r0, r1, r0
    49a4:	00000050 	andeq	r0, r0, r0, asr r0
    49a8:	00000000 	andeq	r0, r0, r0
    49ac:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    49b8:	00500001 	subseq	r0, r0, r1
    49bc:	00000000 	andeq	r0, r0, r0
    49c0:	01000000 	mrseq	r0, (UNDEF: 0)
    49c4:	00005600 	andeq	r5, r0, r0, lsl #12
    49c8:	00000000 	andeq	r0, r0, r0
    49cc:	00030000 	andeq	r0, r3, r0
	...
    4a04:	00500001 	subseq	r0, r0, r1
    4a08:	00000000 	andeq	r0, r0, r0
    4a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a10:	00005400 	andeq	r5, r0, r0, lsl #8
    4a14:	00000000 	andeq	r0, r0, r0
    4a18:	00040000 	andeq	r0, r4, r0
    4a1c:	9f5001f3 	svcls	0x005001f3
	...
    4a28:	00540001 	subseq	r0, r4, r1
    4a2c:	00000000 	andeq	r0, r0, r0
    4a30:	04000000 	streq	r0, [r0], #-0
    4a34:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a4c:	01f30004 	mvnseq	r0, r4
    4a50:	00009f50 	andeq	r9, r0, r0, asr pc
    4a54:	00000000 	andeq	r0, r0, r0
    4a58:	00010000 	andeq	r0, r1, r0
    4a5c:	00000054 	andeq	r0, r0, r4, asr r0
    4a60:	00000000 	andeq	r0, r0, r0
    4a64:	f3000400 	vshl.u8	d0, d0, d0
    4a68:	009f5001 	addseq	r5, pc, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	01000000 	mrseq	r0, (UNDEF: 0)
    4a74:	00005400 	andeq	r5, r0, r0, lsl #8
    4a78:	00000000 	andeq	r0, r0, r0
    4a7c:	00040000 	andeq	r0, r4, r0
    4a80:	9f5001f3 	svcls	0x005001f3
	...
    4a8c:	00540001 	subseq	r0, r4, r1
    4a90:	00000000 	andeq	r0, r0, r0
    4a94:	04000000 	streq	r0, [r0], #-0
    4a98:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4aa0:	00000000 	andeq	r0, r0, r0
    4aa4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ab0:	01f30004 	mvnseq	r0, r4
    4ab4:	00009f50 	andeq	r9, r0, r0, asr pc
    4ab8:	00000000 	andeq	r0, r0, r0
    4abc:	00010000 	andeq	r0, r1, r0
    4ac0:	00000054 	andeq	r0, r0, r4, asr r0
    4ac4:	00000000 	andeq	r0, r0, r0
    4ac8:	f3000400 	vshl.u8	d0, d0, d0
    4acc:	009f5001 	addseq	r5, pc, r1
    4ad0:	00000000 	andeq	r0, r0, r0
    4ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ad8:	00005400 	andeq	r5, r0, r0, lsl #8
    4adc:	00000000 	andeq	r0, r0, r0
    4ae0:	00040000 	andeq	r0, r4, r0
    4ae4:	9f5001f3 	svcls	0x005001f3
	...
    4af0:	00540001 	subseq	r0, r4, r1
    4af4:	00000000 	andeq	r0, r0, r0
    4af8:	04000000 	streq	r0, [r0], #-0
    4afc:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b04:	00000000 	andeq	r0, r0, r0
    4b08:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4b14:	01f30004 	mvnseq	r0, r4
    4b18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4b30:	00580001 	subseq	r0, r8, r1
    4b34:	00000000 	andeq	r0, r0, r0
    4b38:	03000000 	movweq	r0, #0
    4b3c:	9f7f7800 	svcls	0x007f7800
	...
    4b48:	00580001 	subseq	r0, r8, r1
	...
    4b5c:	5a000100 	bpl	4f64 <__HEAP_SIZE+0x3f64>
	...
    4b74:	00500001 	subseq	r0, r0, r1
    4b78:	00000000 	andeq	r0, r0, r0
    4b7c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b80:	00005000 	andeq	r5, r0, r0
	...
    4b90:	00020000 	andeq	r0, r2, r0
    4b94:	0000007d 	andeq	r0, r0, sp, ror r0
    4b98:	00000000 	andeq	r0, r0, r0
    4b9c:	00020000 	andeq	r0, r2, r0
    4ba0:	0000147d 	andeq	r1, r0, sp, ror r4
    4ba4:	00000000 	andeq	r0, r0, r0
    4ba8:	00020000 	andeq	r0, r2, r0
    4bac:	0000287d 	andeq	r2, r0, sp, ror r8
    4bb0:	00000000 	andeq	r0, r0, r0
    4bb4:	00020000 	andeq	r0, r2, r0
    4bb8:	0000147d 	andeq	r1, r0, sp, ror r4
    4bbc:	00000000 	andeq	r0, r0, r0
    4bc0:	00020000 	andeq	r0, r2, r0
    4bc4:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    4bd8:	00010000 	andeq	r0, r1, r0
    4bdc:	00000050 	andeq	r0, r0, r0, asr r0
    4be0:	00000000 	andeq	r0, r0, r0
    4be4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4bfc:	00510001 	subseq	r0, r1, r1
    4c00:	00000000 	andeq	r0, r0, r0
    4c04:	01000000 	mrseq	r0, (UNDEF: 0)
    4c08:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    4c1c:	00520001 	subseq	r0, r2, r1
	...
    4c30:	01000000 	mrseq	r0, (UNDEF: 0)
    4c34:	00005300 	andeq	r5, r0, r0, lsl #6
    4c38:	00000000 	andeq	r0, r0, r0
    4c3c:	00010000 	andeq	r0, r1, r0
    4c40:	00000055 	andeq	r0, r0, r5, asr r0
    4c44:	00000000 	andeq	r0, r0, r0
    4c48:	00000100 	andeq	r0, r0, r0, lsl #2
    4c4c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4c58:	02000000 	andeq	r0, r0, #0
    4c5c:	009f3000 	addseq	r3, pc, r0
    4c60:	00000000 	andeq	r0, r0, r0
    4c64:	01000000 	mrseq	r0, (UNDEF: 0)
    4c68:	00005600 	andeq	r5, r0, r0, lsl #12
    4c6c:	00000000 	andeq	r0, r0, r0
    4c70:	00010000 	andeq	r0, r1, r0
    4c74:	00000056 	andeq	r0, r0, r6, asr r0
    4c78:	00000000 	andeq	r0, r0, r0
    4c7c:	31000200 	mrscc	r0, R8_usr
    4c80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c84:	00000000 	andeq	r0, r0, r0
    4c88:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4ca0:	00010000 	andeq	r0, r1, r0
    4ca4:	00000050 	andeq	r0, r0, r0, asr r0
    4ca8:	00000000 	andeq	r0, r0, r0
    4cac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4cb8:	00500001 	subseq	r0, r0, r1
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	03000000 	movweq	r0, #0
	...
    4ccc:	01000000 	mrseq	r0, (UNDEF: 0)
    4cd0:	00005000 	andeq	r5, r0, r0
    4cd4:	00000000 	andeq	r0, r0, r0
    4cd8:	00010000 	andeq	r0, r1, r0
    4cdc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4cf0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4cfc:	00560001 	subseq	r0, r6, r1
	...
    4d0c:	02000000 	andeq	r0, r0, #0
    4d10:	00007d00 	andeq	r7, r0, r0, lsl #26
    4d14:	00000000 	andeq	r0, r0, r0
    4d18:	02000000 	andeq	r0, r0, #0
    4d1c:	00087d00 	andeq	r7, r8, r0, lsl #26
    4d20:	00000000 	andeq	r0, r0, r0
    4d24:	02000000 	andeq	r0, r0, #0
    4d28:	00007d00 	andeq	r7, r0, r0, lsl #26
    4d2c:	00000000 	andeq	r0, r0, r0
    4d30:	02000000 	andeq	r0, r0, #0
    4d34:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    4d50:	01000000 	mrseq	r0, (UNDEF: 0)
    4d54:	00005000 	andeq	r5, r0, r0
    4d58:	00000000 	andeq	r0, r0, r0
    4d5c:	00040000 	andeq	r0, r4, r0
    4d60:	9f5001f3 	svcls	0x005001f3
	...
    4d6c:	00500001 	subseq	r0, r0, r1
    4d70:	00000000 	andeq	r0, r0, r0
    4d74:	04000000 	streq	r0, [r0], #-0
    4d78:	5001f300 	andpl	pc, r1, r0, lsl #6
    4d7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4d80:	00000000 	andeq	r0, r0, r0
    4d84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4d90:	01f30004 	mvnseq	r0, r4
    4d94:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4da0:	04000000 	streq	r0, [r0], #-0
    4da4:	00000004 	andeq	r0, r0, r4
    4da8:	00000000 	andeq	r0, r0, r0
    4dac:	00010000 	andeq	r0, r1, r0
    4db0:	00000051 	andeq	r0, r0, r1, asr r0
    4db4:	00000000 	andeq	r0, r0, r0
    4db8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4dc4:	00510001 	subseq	r0, r1, r1
    4dc8:	00000000 	andeq	r0, r0, r0
    4dcc:	01000000 	mrseq	r0, (UNDEF: 0)
    4dd0:	00005400 	andeq	r5, r0, r0, lsl #8
    4dd4:	00000000 	andeq	r0, r0, r0
    4dd8:	00020000 	andeq	r0, r2, r0
    4ddc:	04000000 	streq	r0, [r0], #-0
	...
    4de8:	9f300002 	svcls	0x00300002
	...
    4df4:	00500001 	subseq	r0, r0, r1
    4df8:	00000000 	andeq	r0, r0, r0
    4dfc:	02000000 	andeq	r0, r0, #0
    4e00:	009f3000 	addseq	r3, pc, r0
	...
    4e10:	02000000 	andeq	r0, r0, #0
    4e14:	00007d00 	andeq	r7, r0, r0, lsl #26
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	02000000 	andeq	r0, r0, #0
    4e20:	00087d00 	andeq	r7, r8, r0, lsl #26
    4e24:	00000000 	andeq	r0, r0, r0
    4e28:	02000000 	andeq	r0, r0, #0
    4e2c:	00107d00 	andseq	r7, r0, r0, lsl #26
    4e30:	00000000 	andeq	r0, r0, r0
    4e34:	02000000 	andeq	r0, r0, #0
    4e38:	00007d00 	andeq	r7, r0, r0, lsl #26
    4e3c:	00000000 	andeq	r0, r0, r0
    4e40:	02000000 	andeq	r0, r0, #0
    4e44:	00107d00 	andseq	r7, r0, r0, lsl #26
    4e48:	00000000 	andeq	r0, r0, r0
    4e4c:	02000000 	andeq	r0, r0, #0
    4e50:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    4e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4e70:	00005000 	andeq	r5, r0, r0
    4e74:	00000000 	andeq	r0, r0, r0
    4e78:	00040000 	andeq	r0, r4, r0
    4e7c:	9f5001f3 	svcls	0x005001f3
	...
    4e88:	00500001 	subseq	r0, r0, r1
    4e8c:	00000000 	andeq	r0, r0, r0
    4e90:	04000000 	streq	r0, [r0], #-0
    4e94:	5001f300 	andpl	pc, r1, r0, lsl #6
    4e98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e9c:	00000000 	andeq	r0, r0, r0
    4ea0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4eac:	01f30004 	mvnseq	r0, r4
    4eb0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4ebc:	04000000 	streq	r0, [r0], #-0
    4ec0:	00000004 	andeq	r0, r0, r4
    4ec4:	00000000 	andeq	r0, r0, r0
    4ec8:	00010000 	andeq	r0, r1, r0
    4ecc:	00000051 	andeq	r0, r0, r1, asr r0
    4ed0:	00000000 	andeq	r0, r0, r0
    4ed4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ee0:	00510001 	subseq	r0, r1, r1
    4ee4:	00000000 	andeq	r0, r0, r0
    4ee8:	01000000 	mrseq	r0, (UNDEF: 0)
    4eec:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4efc:	00040400 	andeq	r0, r4, r0, lsl #8
	...
    4f08:	00520001 	subseq	r0, r2, r1
    4f0c:	00000000 	andeq	r0, r0, r0
    4f10:	01000000 	mrseq	r0, (UNDEF: 0)
    4f14:	00005300 	andeq	r5, r0, r0, lsl #6
    4f18:	00000000 	andeq	r0, r0, r0
    4f1c:	00040000 	andeq	r0, r4, r0
    4f20:	9f5201f3 	svcls	0x005201f3
	...
    4f2c:	00520001 	subseq	r0, r2, r1
    4f30:	00000000 	andeq	r0, r0, r0
    4f34:	04000000 	streq	r0, [r0], #-0
    4f38:	5201f300 	andpl	pc, r1, #0, 6
    4f3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4f40:	00000000 	andeq	r0, r0, r0
    4f44:	00000200 	andeq	r0, r0, r0, lsl #4
    4f48:	00040000 	andeq	r0, r4, r0
    4f4c:	00000000 	andeq	r0, r0, r0
    4f50:	02000000 	andeq	r0, r0, #0
    4f54:	009f3000 	addseq	r3, pc, r0
    4f58:	00000000 	andeq	r0, r0, r0
    4f5c:	01000000 	mrseq	r0, (UNDEF: 0)
    4f60:	00005000 	andeq	r5, r0, r0
    4f64:	00000000 	andeq	r0, r0, r0
    4f68:	00020000 	andeq	r0, r2, r0
    4f6c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    4f7c:	00020000 	andeq	r0, r2, r0
    4f80:	0000007d 	andeq	r0, r0, sp, ror r0
    4f84:	00000000 	andeq	r0, r0, r0
    4f88:	00020000 	andeq	r0, r2, r0
    4f8c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    4fa0:	00010000 	andeq	r0, r1, r0
    4fa4:	00000050 	andeq	r0, r0, r0, asr r0
    4fa8:	00000000 	andeq	r0, r0, r0
    4fac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4fc4:	00510001 	subseq	r0, r1, r1
    4fc8:	00000000 	andeq	r0, r0, r0
    4fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    4fd0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    4fdc:	00000001 	andeq	r0, r0, r1
    4fe0:	00000000 	andeq	r0, r0, r0
    4fe4:	00010000 	andeq	r0, r1, r0
    4fe8:	00000050 	andeq	r0, r0, r0, asr r0
    4fec:	00000000 	andeq	r0, r0, r0
    4ff0:	31000200 	mrscc	r0, R8_usr
    4ff4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ff8:	00000000 	andeq	r0, r0, r0
    4ffc:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    5008:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5014:	00540001 	subseq	r0, r4, r1
	...
    5024:	02000000 	andeq	r0, r0, #0
    5028:	00007d00 	andeq	r7, r0, r0, lsl #26
    502c:	00000000 	andeq	r0, r0, r0
    5030:	02000000 	andeq	r0, r0, #0
    5034:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5048:	01000000 	mrseq	r0, (UNDEF: 0)
    504c:	00005000 	andeq	r5, r0, r0
    5050:	00000000 	andeq	r0, r0, r0
    5054:	00010000 	andeq	r0, r1, r0
    5058:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5068:	02000000 	andeq	r0, r0, #0
    506c:	009f3100 	addseq	r3, pc, r0, lsl #2
    5070:	00000000 	andeq	r0, r0, r0
    5074:	02000000 	andeq	r0, r0, #0
	...
    5080:	01000000 	mrseq	r0, (UNDEF: 0)
    5084:	00005000 	andeq	r5, r0, r0
    5088:	00000000 	andeq	r0, r0, r0
    508c:	00010000 	andeq	r0, r1, r0
    5090:	00000054 	andeq	r0, r0, r4, asr r0
	...
    50a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    50ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    50b0:	00000008 	andeq	r0, r0, r8
    50b4:	00000000 	andeq	r0, r0, r0
    50b8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    50bc:	00000010 	andeq	r0, r0, r0, lsl r0
    50c0:	00000000 	andeq	r0, r0, r0
    50c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    50c8:	00000008 	andeq	r0, r0, r8
	...
    50dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    50e8:	01f30004 	mvnseq	r0, r4
    50ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5104:	00510001 	subseq	r0, r1, r1
    5108:	00000000 	andeq	r0, r0, r0
    510c:	01000000 	mrseq	r0, (UNDEF: 0)
    5110:	00005300 	andeq	r5, r0, r0, lsl #6
    5114:	00000000 	andeq	r0, r0, r0
    5118:	00040000 	andeq	r0, r4, r0
    511c:	9f5101f3 	svcls	0x005101f3
	...
    5134:	00500001 	subseq	r0, r0, r1
    5138:	00000000 	andeq	r0, r0, r0
    513c:	01000000 	mrseq	r0, (UNDEF: 0)
    5140:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5150:	00020000 	andeq	r0, r2, r0
    5154:	0000007d 	andeq	r0, r0, sp, ror r0
    5158:	00000000 	andeq	r0, r0, r0
    515c:	00020000 	andeq	r0, r2, r0
    5160:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    5174:	00010000 	andeq	r0, r1, r0
    5178:	00000050 	andeq	r0, r0, r0, asr r0
    517c:	00000000 	andeq	r0, r0, r0
    5180:	f3000400 	vshl.u8	d0, d0, d0
    5184:	009f5001 	addseq	r5, pc, r1
	...
    5198:	01000000 	mrseq	r0, (UNDEF: 0)
    519c:	00005000 	andeq	r5, r0, r0
    51a0:	00000000 	andeq	r0, r0, r0
    51a4:	00010000 	andeq	r0, r1, r0
    51a8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    51b8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    51c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    51c8:	00000008 	andeq	r0, r0, r8
    51cc:	00000000 	andeq	r0, r0, r0
    51d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    51e8:	01000000 	mrseq	r0, (UNDEF: 0)
    51ec:	00005000 	andeq	r5, r0, r0
    51f0:	00000000 	andeq	r0, r0, r0
    51f4:	00040000 	andeq	r0, r4, r0
    51f8:	9f5001f3 	svcls	0x005001f3
	...
    5204:	00500001 	subseq	r0, r0, r1
    5208:	00000000 	andeq	r0, r0, r0
    520c:	d2000000 	andle	r0, r0, #0
    5210:	d4100020 	ldrle	r0, [r0], #-32	; 0xffffffe0
    5214:	02100020 	andseq	r0, r0, #32
    5218:	d4007d00 	strle	r7, [r0], #-3328	; 0xfffff300
    521c:	f2100020 	vhadd.s16	d0, d0, d16
    5220:	02100020 	andseq	r0, r0, #32
    5224:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    5234:	d2000000 	andle	r0, r0, #0
    5238:	e4100020 	ldr	r0, [r0], #-32	; 0xffffffe0
    523c:	01100020 	tsteq	r0, r0, lsr #32
    5240:	20e45000 	rsccs	r5, r4, r0
    5244:	20e71000 	rsccs	r1, r7, r0
    5248:	00031000 	andeq	r1, r3, r0
    524c:	e700cc70 	smlsdx	r0, r0, ip, ip
    5250:	ee100020 	cdp	0, 1, cr0, cr0, cr0, {1}
    5254:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    5258:	5001f300 	andpl	pc, r1, r0, lsl #6
    525c:	0020ee9f 	mlaeq	r0, pc, lr, lr	; <UNPREDICTABLE>
    5260:	0020f210 	eoreq	pc, r0, r0, lsl r2	; <UNPREDICTABLE>
    5264:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    5278:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    527c:	100020e2 	andne	r2, r0, r2, ror #1
    5280:	e2510001 	subs	r0, r1, #1
    5284:	e7100020 	ldr	r0, [r0, -r0, lsr #32]
    5288:	01100020 	tsteq	r0, r0, lsr #32
    528c:	20e75300 	rsccs	r5, r7, r0, lsl #6
    5290:	20ee1000 	rsccs	r1, lr, r0
    5294:	00041000 	andeq	r1, r4, r0
    5298:	9f5101f3 	svcls	0x005101f3
    529c:	100020ee 	andne	r2, r0, lr, ror #1
    52a0:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    52a4:	00510001 	subseq	r0, r1, r1
	...
    52b4:	0020d200 	eoreq	sp, r0, r0, lsl #4
    52b8:	0020e710 	eoreq	lr, r0, r0, lsl r7
    52bc:	52000110 	andpl	r0, r0, #16, 2
    52c0:	100020e7 	andne	r2, r0, r7, ror #1
    52c4:	100020ee 	andne	r2, r0, lr, ror #1
    52c8:	01f30004 	mvnseq	r0, r4
    52cc:	20ee9f52 	rsccs	r9, lr, r2, asr pc
    52d0:	20f21000 	rscscs	r1, r2, r0
    52d4:	00011000 	andeq	r1, r1, r0
    52d8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    52e4:	0020d200 	eoreq	sp, r0, r0, lsl #4
    52e8:	0020d810 	eoreq	sp, r0, r0, lsl r8
    52ec:	53000110 	movwpl	r0, #272	; 0x110
    52f0:	100020d8 	ldrdne	r2, [r0], -r8
    52f4:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    52f8:	01f30004 	mvnseq	r0, r4
    52fc:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    5308:	20d20000 	sbcscs	r0, r2, r0
    530c:	20ee1000 	rsccs	r1, lr, r0
    5310:	00021000 	andeq	r1, r2, r0
    5314:	20ee0091 	smlalcs	r0, lr, r1, r0
    5318:	20f21000 	rscscs	r1, r2, r0
    531c:	00021000 	andeq	r1, r2, r0
    5320:	00000091 	muleq	r0, r1, r0
	...
    5330:	00020000 	andeq	r0, r2, r0
    5334:	0000007d 	andeq	r0, r0, sp, ror r0
    5338:	00000000 	andeq	r0, r0, r0
    533c:	00020000 	andeq	r0, r2, r0
    5340:	0000147d 	andeq	r1, r0, sp, ror r4
    5344:	00000000 	andeq	r0, r0, r0
    5348:	00020000 	andeq	r0, r2, r0
    534c:	0000207d 	andeq	r2, r0, sp, ror r0
    5350:	00000000 	andeq	r0, r0, r0
    5354:	00020000 	andeq	r0, r2, r0
    5358:	0000147d 	andeq	r1, r0, sp, ror r4
    535c:	00000000 	andeq	r0, r0, r0
    5360:	00020000 	andeq	r0, r2, r0
    5364:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    5380:	00010000 	andeq	r0, r1, r0
    5384:	00000050 	andeq	r0, r0, r0, asr r0
    5388:	00000000 	andeq	r0, r0, r0
    538c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5398:	00500001 	subseq	r0, r0, r1
    539c:	00000000 	andeq	r0, r0, r0
    53a0:	04000000 	streq	r0, [r0], #-0
    53a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    53a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    53ac:	00000000 	andeq	r0, r0, r0
    53b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    53bc:	00560001 	subseq	r0, r6, r1
	...
    53d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    53e4:	00540001 	subseq	r0, r4, r1
    53e8:	00000000 	andeq	r0, r0, r0
    53ec:	01000000 	mrseq	r0, (UNDEF: 0)
    53f0:	00005100 	andeq	r5, r0, r0, lsl #2
    53f4:	00000000 	andeq	r0, r0, r0
    53f8:	00040000 	andeq	r0, r4, r0
    53fc:	9f5101f3 	svcls	0x005101f3
	...
    5408:	00540001 	subseq	r0, r4, r1
	...
    5420:	01000000 	mrseq	r0, (UNDEF: 0)
    5424:	00005200 	andeq	r5, r0, r0, lsl #4
    5428:	00000000 	andeq	r0, r0, r0
    542c:	00040000 	andeq	r0, r4, r0
    5430:	9f5201f3 	svcls	0x005201f3
	...
    543c:	00520001 	subseq	r0, r2, r1
    5440:	00000000 	andeq	r0, r0, r0
    5444:	04000000 	streq	r0, [r0], #-0
    5448:	5201f300 	andpl	pc, r1, #0, 6
    544c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5450:	00000000 	andeq	r0, r0, r0
    5454:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    5464:	02000000 	andeq	r0, r0, #0
    5468:	009f3000 	addseq	r3, pc, r0
    546c:	00000000 	andeq	r0, r0, r0
    5470:	01000000 	mrseq	r0, (UNDEF: 0)
    5474:	00005000 	andeq	r5, r0, r0
    5478:	00000000 	andeq	r0, r0, r0
    547c:	00010000 	andeq	r0, r1, r0
    5480:	00000055 	andeq	r0, r0, r5, asr r0
    5484:	00000000 	andeq	r0, r0, r0
    5488:	30000200 	andcc	r0, r0, r0, lsl #4
    548c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5490:	00000000 	andeq	r0, r0, r0
    5494:	30000200 	andcc	r0, r0, r0, lsl #4
    5498:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    549c:	00000000 	andeq	r0, r0, r0
    54a0:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    54ac:	01000000 	mrseq	r0, (UNDEF: 0)
    54b0:	00005000 	andeq	r5, r0, r0
    54b4:	00000000 	andeq	r0, r0, r0
    54b8:	00040000 	andeq	r0, r4, r0
    54bc:	9f7fa470 	svcls	0x007fa470
	...
    54c8:	00740006 	rsbseq	r0, r4, r6
    54cc:	9f1e0076 	svcls	0x001e0076
	...
    54d8:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    54e8:	00500001 	subseq	r0, r0, r1
    54ec:	00000000 	andeq	r0, r0, r0
    54f0:	04000000 	streq	r0, [r0], #-0
    54f4:	00dc7000 	sbcseq	r7, ip, r0
    54f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	52000100 	andpl	r0, r0, #0, 2
	...
    550c:	dc750004 	ldclle	0, cr0, [r5], #-16
    5510:	00009f00 	andeq	r9, r0, r0, lsl #30
	...
    5528:	00010000 	andeq	r0, r1, r0
    552c:	00000050 	andeq	r0, r0, r0, asr r0
    5530:	00000000 	andeq	r0, r0, r0
    5534:	f3000400 	vshl.u8	d0, d0, d0
    5538:	009f5001 	addseq	r5, pc, r1
    553c:	00000000 	andeq	r0, r0, r0
    5540:	01000000 	mrseq	r0, (UNDEF: 0)
    5544:	00005000 	andeq	r5, r0, r0
    5548:	00000000 	andeq	r0, r0, r0
    554c:	00020000 	andeq	r0, r2, r0
    5550:	00000072 	andeq	r0, r0, r2, ror r0
	...
    555c:	00000001 	andeq	r0, r0, r1
    5560:	00000000 	andeq	r0, r0, r0
    5564:	00020000 	andeq	r0, r2, r0
    5568:	00009f30 	andeq	r9, r0, r0, lsr pc
    556c:	00000000 	andeq	r0, r0, r0
    5570:	00020000 	andeq	r0, r2, r0
    5574:	00009f31 	andeq	r9, r0, r1, lsr pc
    5578:	00000000 	andeq	r0, r0, r0
    557c:	00030000 	andeq	r0, r3, r0
	...
    558c:	00010000 	andeq	r0, r1, r0
    5590:	00000050 	andeq	r0, r0, r0, asr r0
    5594:	00000000 	andeq	r0, r0, r0
    5598:	f3000400 	vshl.u8	d0, d0, d0
    559c:	009f5001 	addseq	r5, pc, r1
    55a0:	00000000 	andeq	r0, r0, r0
    55a4:	01000000 	mrseq	r0, (UNDEF: 0)
    55a8:	00005000 	andeq	r5, r0, r0
    55ac:	00000000 	andeq	r0, r0, r0
    55b0:	00020000 	andeq	r0, r2, r0
    55b4:	00000072 	andeq	r0, r0, r2, ror r0
    55b8:	00000000 	andeq	r0, r0, r0
    55bc:	20f20000 	rscscs	r0, r2, r0
    55c0:	20f61000 	rscscs	r1, r6, r0
    55c4:	00021000 	andeq	r1, r2, r0
    55c8:	20f6007d 	rscscs	r0, r6, sp, ror r0
    55cc:	20f81000 	rscscs	r1, r8, r0
    55d0:	00021000 	andeq	r1, r2, r0
    55d4:	20f8087d 	rscscs	r0, r8, sp, ror r8
    55d8:	211a1000 	tstcs	sl, r0
    55dc:	00021000 	andeq	r1, r2, r0
    55e0:	211a107d 	tstcs	sl, sp, ror r0
    55e4:	211c1000 	tstcs	ip, r0
    55e8:	00021000 	andeq	r1, r2, r0
    55ec:	211c087d 	tstcs	ip, sp, ror r8
    55f0:	21241000 			; <UNDEFINED> instruction: 0x21241000
    55f4:	00021000 	andeq	r1, r2, r0
    55f8:	2124107d 			; <UNDEFINED> instruction: 0x2124107d
    55fc:	21281000 			; <UNDEFINED> instruction: 0x21281000
    5600:	00021000 	andeq	r1, r2, r0
    5604:	2128007d 			; <UNDEFINED> instruction: 0x2128007d
    5608:	21301000 	teqcs	r0, r0
    560c:	00021000 	andeq	r1, r2, r0
    5610:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5630:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5634:	10002112 	andne	r2, r0, r2, lsl r1
    5638:	12500001 	subsne	r0, r0, #1
    563c:	15100021 	ldrne	r0, [r0, #-33]	; 0xffffffdf
    5640:	01100021 	tsteq	r0, r1, lsr #32
    5644:	21155c00 	tstcs	r5, r0, lsl #24
    5648:	211c1000 	tstcs	ip, r0
    564c:	00041000 	andeq	r1, r4, r0
    5650:	9f5001f3 	svcls	0x005001f3
    5654:	1000211c 	andne	r2, r0, ip, lsl r1
    5658:	10002122 	andne	r2, r0, r2, lsr #2
    565c:	22500001 	subscs	r0, r0, #1
    5660:	24100021 	ldrcs	r0, [r0], #-33	; 0xffffffdf
    5664:	01100021 	tsteq	r0, r1, lsr #32
    5668:	21245c00 			; <UNDEFINED> instruction: 0x21245c00
    566c:	21261000 			; <UNDEFINED> instruction: 0x21261000
    5670:	00011000 	andeq	r1, r1, r0
    5674:	00212650 	eoreq	r2, r1, r0, asr r6
    5678:	00212810 	eoreq	r2, r1, r0, lsl r8
    567c:	f3000410 	vqshl.u8	d0, d0, d0
    5680:	289f5001 	ldmcs	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    5684:	2a100021 	bcs	405710 <__RAM_SIZE+0x305710>
    5688:	01100021 	tsteq	r0, r1, lsr #32
    568c:	212a5000 			; <UNDEFINED> instruction: 0x212a5000
    5690:	212c1000 			; <UNDEFINED> instruction: 0x212c1000
    5694:	00011000 	andeq	r1, r1, r0
    5698:	00212c5c 	eoreq	r2, r1, ip, asr ip
    569c:	00212e10 	eoreq	r2, r1, r0, lsl lr
    56a0:	50000110 	andpl	r0, r0, r0, lsl r1
    56a4:	1000212e 	andne	r2, r0, lr, lsr #2
    56a8:	10002130 	andne	r2, r0, r0, lsr r1
    56ac:	005c0001 	subseq	r0, ip, r1
	...
    56bc:	0020f200 	eoreq	pc, r0, r0, lsl #4
    56c0:	00211510 	eoreq	r1, r1, r0, lsl r5
    56c4:	51000110 	tstpl	r0, r0, lsl r1
    56c8:	10002115 	andne	r2, r0, r5, lsl r1
    56cc:	1000211c 	andne	r2, r0, ip, lsl r1
    56d0:	01f30004 	mvnseq	r0, r4
    56d4:	211c9f51 	tstcs	ip, r1, asr pc
    56d8:	21301000 	teqcs	r0, r0
    56dc:	00011000 	andeq	r1, r1, r0
    56e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    56ec:	f2000000 	vhadd.s8	d0, d0, d0
    56f0:	15100020 	ldrne	r0, [r0, #-32]	; 0xffffffe0
    56f4:	01100021 	tsteq	r0, r1, lsr #32
    56f8:	21155200 	tstcs	r5, r0, lsl #4
    56fc:	211c1000 	tstcs	ip, r0
    5700:	00041000 	andeq	r1, r4, r0
    5704:	9f5201f3 	svcls	0x005201f3
    5708:	1000211c 	andne	r2, r0, ip, lsl r1
    570c:	10002130 	andne	r2, r0, r0, lsr r1
    5710:	00520001 	subseq	r0, r2, r1
	...
    5720:	0020f200 	eoreq	pc, r0, r0, lsl #4
    5724:	00210610 	eoreq	r0, r1, r0, lsl r6
    5728:	53000110 	movwpl	r0, #272	; 0x110
    572c:	10002106 	andne	r2, r0, r6, lsl #2
    5730:	1000211c 	andne	r2, r0, ip, lsl r1
    5734:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    5738:	30100021 	andscc	r0, r0, r1, lsr #32
    573c:	01100021 	tsteq	r0, r1, lsr #32
    5740:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    574c:	20f20000 	rscscs	r0, r2, r0
    5750:	211c1000 	tstcs	ip, r0
    5754:	00021000 	andeq	r1, r2, r0
    5758:	211c0091 			; <UNDEFINED> instruction: 0x211c0091
    575c:	21301000 	teqcs	r0, r0
    5760:	00021000 	andeq	r1, r2, r0
    5764:	00000091 	muleq	r0, r1, r0
    5768:	00000000 	andeq	r0, r0, r0
    576c:	01020000 	mrseq	r0, (UNDEF: 2)
    5770:	00000001 	andeq	r0, r0, r1
    5774:	00000000 	andeq	r0, r0, r0
    5778:	20f20000 	rscscs	r0, r2, r0
    577c:	21041000 	mrscs	r1, (UNDEF: 4)
    5780:	00021000 	andeq	r1, r2, r0
    5784:	21049f30 	tstcs	r4, r0, lsr pc
    5788:	21061000 	mrscs	r1, (UNDEF: 6)
    578c:	00011000 	andeq	r1, r1, r0
    5790:	00210653 	eoreq	r0, r1, r3, asr r6
    5794:	00211810 	eoreq	r1, r1, r0, lsl r8
    5798:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    579c:	1000211c 	andne	r2, r0, ip, lsl r1
    57a0:	10002122 	andne	r2, r0, r2, lsr #2
    57a4:	9f300002 	svcls	0x00300002
    57a8:	10002122 	andne	r2, r0, r2, lsr #2
    57ac:	10002124 	andne	r2, r0, r4, lsr #2
    57b0:	24500001 	ldrbcs	r0, [r0], #-1
    57b4:	30100021 	andscc	r0, r0, r1, lsr #32
    57b8:	02100021 	andseq	r0, r0, #33	; 0x21
    57bc:	009f3000 	addseq	r3, pc, r0
    57c0:	00000000 	andeq	r0, r0, r0
    57c4:	4c000000 	stcmi	0, cr0, [r0], {-0}
    57c8:	52100020 	andspl	r0, r0, #32
    57cc:	02100020 	andseq	r0, r0, #32
    57d0:	52007d00 	andpl	r7, r0, #0, 26
    57d4:	ca100020 	bgt	40585c <__RAM_SIZE+0x30585c>
    57d8:	02100020 	andseq	r0, r0, #32
    57dc:	ca107d00 	bgt	424be4 <__RAM_SIZE+0x324be4>
    57e0:	ce100020 	cdpgt	0, 1, cr0, cr0, cr0, {1}
    57e4:	02100020 	andseq	r0, r0, #32
    57e8:	ce007d00 	cdpgt	13, 0, cr7, cr0, cr0, {0}
    57ec:	d2100020 	andsle	r0, r0, #32
    57f0:	02100020 	andseq	r0, r0, #32
    57f4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    580c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    5810:	6a100020 	bvs	405898 <__RAM_SIZE+0x305898>
    5814:	01100020 	tsteq	r0, r0, lsr #32
    5818:	206a5000 	rsbcs	r5, sl, r0
    581c:	206c1000 	rsbcs	r1, ip, r0
    5820:	00011000 	andeq	r1, r1, r0
    5824:	00206c54 	eoreq	r6, r0, r4, asr ip
    5828:	00207310 	eoreq	r7, r0, r0, lsl r3
    582c:	50000110 	andpl	r0, r0, r0, lsl r1
    5830:	10002073 	andne	r2, r0, r3, ror r0
    5834:	100020ca 	andne	r2, r0, sl, asr #1
    5838:	ca540001 	bgt	1505844 <__RAM_SIZE+0x1405844>
    583c:	cc100020 	ldcgt	0, cr0, [r0], {32}
    5840:	01100020 	tsteq	r0, r0, lsr #32
    5844:	20cc5000 	sbccs	r5, ip, r0
    5848:	20ce1000 	sbccs	r1, lr, r0
    584c:	00041000 	andeq	r1, r4, r0
    5850:	9f5001f3 	svcls	0x005001f3
    5854:	100020ce 	andne	r2, r0, lr, asr #1
    5858:	100020d0 	ldrdne	r2, [r0], -r0
    585c:	d0500001 	subsle	r0, r0, r1
    5860:	d2100020 	andsle	r0, r0, #32
    5864:	01100020 	tsteq	r0, r0, lsr #32
    5868:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5878:	204c0000 	subcs	r0, ip, r0
    587c:	20601000 	rsbcs	r1, r0, r0
    5880:	00011000 	andeq	r1, r1, r0
    5884:	00206051 	eoreq	r6, r0, r1, asr r0
    5888:	0020ca10 	eoreq	ip, r0, r0, lsl sl
    588c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    5890:	100020ca 	andne	r2, r0, sl, asr #1
    5894:	100020d0 	ldrdne	r2, [r0], -r0
    5898:	d0510001 	subsle	r0, r1, r1
    589c:	d2100020 	andsle	r0, r0, #32
    58a0:	01100020 	tsteq	r0, r0, lsr #32
    58a4:	00005500 	andeq	r5, r0, r0, lsl #10
    58a8:	00000000 	andeq	r0, r0, r0
    58ac:	00020000 	andeq	r0, r2, r0
    58b0:	00000000 	andeq	r0, r0, r0
    58b4:	1000204c 	andne	r2, r0, ip, asr #32
    58b8:	1000206a 	andne	r2, r0, sl, rrx
    58bc:	9f310002 	svcls	0x00310002
    58c0:	1000206a 	andne	r2, r0, sl, rrx
    58c4:	1000206c 	andne	r2, r0, ip, rrx
    58c8:	9f300002 	svcls	0x00300002
    58cc:	1000206c 	andne	r2, r0, ip, rrx
    58d0:	100020d0 	ldrdne	r2, [r0], -r0
    58d4:	9f310002 	svcls	0x00310002
	...
    58e0:	00000003 	andeq	r0, r0, r3
	...
    58f0:	1000204c 	andne	r2, r0, ip, asr #32
    58f4:	1000206a 	andne	r2, r0, sl, rrx
    58f8:	6a500001 	bvs	1405904 <__RAM_SIZE+0x1305904>
    58fc:	6c100020 	ldcvs	0, cr0, [r0], {32}
    5900:	01100020 	tsteq	r0, r0, lsr #32
    5904:	206c5400 	rsbcs	r5, ip, r0, lsl #8
    5908:	20731000 	rsbscs	r1, r3, r0
    590c:	00011000 	andeq	r1, r1, r0
    5910:	00207350 	eoreq	r7, r0, r0, asr r3
    5914:	0020ca10 	eoreq	ip, r0, r0, lsl sl
    5918:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    591c:	100020ca 	andne	r2, r0, sl, asr #1
    5920:	100020cc 	andne	r2, r0, ip, asr #1
    5924:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    5928:	ce100020 	cdpgt	0, 1, cr0, cr0, cr0, {1}
    592c:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    5930:	5001f300 	andpl	pc, r1, r0, lsl #6
    5934:	0020ce9f 	mlaeq	r0, pc, lr, ip	; <UNPREDICTABLE>
    5938:	0020d010 	eoreq	sp, r0, r0, lsl r0
    593c:	50000110 	andpl	r0, r0, r0, lsl r1
    5940:	100020d0 	ldrdne	r2, [r0], -r0
    5944:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5948:	00540001 	subseq	r0, r4, r1
    594c:	00000000 	andeq	r0, r0, r0
    5950:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    595c:	01000000 	mrseq	r0, (UNDEF: 0)
    5960:	00005300 	andeq	r5, r0, r0, lsl #6
    5964:	00000000 	andeq	r0, r0, r0
    5968:	00010000 	andeq	r0, r1, r0
    596c:	00000053 	andeq	r0, r0, r3, asr r0
    5970:	00000000 	andeq	r0, r0, r0
    5974:	0025bc00 	eoreq	fp, r5, r0, lsl #24
    5978:	0025c010 	eoreq	ip, r5, r0, lsl r0
    597c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5980:	0025c000 	eoreq	ip, r5, r0
    5984:	00266410 	eoreq	r6, r6, r0, lsl r4
    5988:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    598c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    599c:	bc000000 	stclt	0, cr0, [r0], {-0}
    59a0:	de100025 	cdple	0, 1, cr0, cr0, cr5, {1}
    59a4:	01100025 	tsteq	r0, r5, lsr #32
    59a8:	25de5000 	ldrbcs	r5, [lr]
    59ac:	25ec1000 	strbcs	r1, [ip, #0]!
    59b0:	00011000 	andeq	r1, r1, r0
    59b4:	0025ec54 	eoreq	lr, r5, r4, asr ip
    59b8:	00260610 	eoreq	r0, r6, r0, lsl r6
    59bc:	f3000410 	vqshl.u8	d0, d0, d0
    59c0:	069f5001 	ldreq	r5, [pc], r1
    59c4:	18100026 	ldmdane	r0, {r1, r2, r5}
    59c8:	01100026 	tsteq	r0, r6, lsr #32
    59cc:	26185400 	ldrcs	r5, [r8], -r0, lsl #8
    59d0:	26641000 	strbtcs	r1, [r4], -r0
    59d4:	00041000 	andeq	r1, r4, r0
    59d8:	9f5001f3 	svcls	0x005001f3
	...
    59e8:	100025bc 			; <UNDEFINED> instruction: 0x100025bc
    59ec:	100025d8 	ldrdne	r2, [r0], -r8
    59f0:	d8510001 	ldmdale	r1, {r0}^
    59f4:	64100025 	ldrvs	r0, [r0], #-37	; 0xffffffdb
    59f8:	01100026 	tsteq	r0, r6, lsr #32
    59fc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5a08:	25ec0000 	strbcs	r0, [ip, #0]!
    5a0c:	26021000 	strcs	r1, [r2], -r0
    5a10:	00011000 	andeq	r1, r1, r0
    5a14:	00263254 	eoreq	r3, r6, r4, asr r2
    5a18:	00266410 	eoreq	r6, r6, r0, lsl r4
    5a1c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    5a28:	25c80000 	strbcs	r0, [r8]
    5a2c:	26641000 	strbtcs	r1, [r4], -r0
    5a30:	00011000 	andeq	r1, r1, r0
    5a34:	00000056 	andeq	r0, r0, r6, asr r0
    5a38:	00000000 	andeq	r0, r0, r0
    5a3c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    5a40:	64100025 	ldrvs	r0, [r0], #-37	; 0xffffffdb
    5a44:	01100026 	tsteq	r0, r6, lsr #32
    5a48:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    5a54:	100025d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5a58:	10002664 	andne	r2, r0, r4, ror #12
    5a5c:	00580001 	subseq	r0, r8, r1
	...
    5a68:	00260e00 	eoreq	r0, r6, r0, lsl #28
    5a6c:	00263210 	eoreq	r3, r6, r0, lsl r2
    5a70:	51000110 	tstpl	r0, r0, lsl r1
	...
    5a84:	007d0002 	rsbseq	r0, sp, r2
	...
    5a90:	107d0002 	rsbsne	r0, sp, r2
	...
    5aa8:	00500001 	subseq	r0, r0, r1
    5aac:	00000000 	andeq	r0, r0, r0
    5ab0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ab4:	00005000 	andeq	r5, r0, r0
	...
    5acc:	00510001 	subseq	r0, r1, r1
    5ad0:	00000000 	andeq	r0, r0, r0
    5ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ad8:	00005500 	andeq	r5, r0, r0, lsl #10
    5adc:	00000000 	andeq	r0, r0, r0
    5ae0:	00010000 	andeq	r0, r1, r0
    5ae4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    5af8:	01000000 	mrseq	r0, (UNDEF: 0)
    5afc:	00005200 	andeq	r5, r0, r0, lsl #4
    5b00:	00000000 	andeq	r0, r0, r0
    5b04:	00010000 	andeq	r0, r1, r0
    5b08:	00000056 	andeq	r0, r0, r6, asr r0
    5b0c:	00000000 	andeq	r0, r0, r0
    5b10:	52000100 	andpl	r0, r0, #0, 2
	...
    5b24:	00010000 	andeq	r0, r1, r0
    5b28:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5b38:	01000000 	mrseq	r0, (UNDEF: 0)
    5b3c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5b4c:	00020000 	andeq	r0, r2, r0
    5b50:	0000007d 	andeq	r0, r0, sp, ror r0
    5b54:	00000000 	andeq	r0, r0, r0
    5b58:	00020000 	andeq	r0, r2, r0
    5b5c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5b70:	00010000 	andeq	r0, r1, r0
    5b74:	00000050 	andeq	r0, r0, r0, asr r0
    5b78:	00000000 	andeq	r0, r0, r0
    5b7c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5b9c:	00510001 	subseq	r0, r1, r1
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ba8:	00005400 	andeq	r5, r0, r0, lsl #8
    5bac:	00000000 	andeq	r0, r0, r0
    5bb0:	00040000 	andeq	r0, r4, r0
    5bb4:	9f5101f3 	svcls	0x005101f3
	...
    5bc0:	00510001 	subseq	r0, r1, r1
    5bc4:	00000000 	andeq	r0, r0, r0
    5bc8:	01000000 	mrseq	r0, (UNDEF: 0)
    5bcc:	00005400 	andeq	r5, r0, r0, lsl #8
    5bd0:	00000000 	andeq	r0, r0, r0
    5bd4:	00040000 	andeq	r0, r4, r0
    5bd8:	9f5101f3 	svcls	0x005101f3
	...
    5bf0:	00550001 	subseq	r0, r5, r1
    5bf4:	00000000 	andeq	r0, r0, r0
    5bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    5bfc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5c08:	00000001 	andeq	r0, r0, r1
    5c0c:	00000000 	andeq	r0, r0, r0
    5c10:	00010000 	andeq	r0, r1, r0
    5c14:	00000054 	andeq	r0, r0, r4, asr r0
    5c18:	00000000 	andeq	r0, r0, r0
    5c1c:	31000200 	mrscc	r0, R8_usr
    5c20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5c30:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5c3c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5c40:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5c54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5c60:	00550001 	subseq	r0, r5, r1
	...
    5c78:	01000000 	mrseq	r0, (UNDEF: 0)
    5c7c:	00005100 	andeq	r5, r0, r0, lsl #2
    5c80:	00000000 	andeq	r0, r0, r0
    5c84:	00010000 	andeq	r0, r1, r0
    5c88:	00000054 	andeq	r0, r0, r4, asr r0
    5c8c:	00000000 	andeq	r0, r0, r0
    5c90:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    5c94:	00009f70 	andeq	r9, r0, r0, ror pc
    5c98:	00000000 	andeq	r0, r0, r0
    5c9c:	00040000 	andeq	r0, r4, r0
    5ca0:	9f5101f3 	svcls	0x005101f3
	...
    5cb8:	00520001 	subseq	r0, r2, r1
    5cbc:	00000000 	andeq	r0, r0, r0
    5cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    5cc4:	00005600 	andeq	r5, r0, r0, lsl #12
    5cc8:	00000000 	andeq	r0, r0, r0
    5ccc:	00080000 	andeq	r0, r8, r0
	...
    5cd8:	00010000 	andeq	r0, r1, r0
    5cdc:	00000050 	andeq	r0, r0, r0, asr r0
    5ce0:	00000000 	andeq	r0, r0, r0
    5ce4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5cfc:	00530001 	subseq	r0, r3, r1
    5d00:	00000000 	andeq	r0, r0, r0
    5d04:	01000000 	mrseq	r0, (UNDEF: 0)
    5d08:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5d1c:	00010000 	andeq	r0, r1, r0
    5d20:	00000050 	andeq	r0, r0, r0, asr r0
    5d24:	00000000 	andeq	r0, r0, r0
    5d28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d40:	00530001 	subseq	r0, r3, r1
    5d44:	00000000 	andeq	r0, r0, r0
    5d48:	01000000 	mrseq	r0, (UNDEF: 0)
    5d4c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5d60:	00530001 	subseq	r0, r3, r1
	...
    5d74:	52000100 	andpl	r0, r0, #0, 2
	...
    5d88:	007d0002 	rsbseq	r0, sp, r2
	...
    5d94:	187d0002 	ldmdane	sp!, {r1}^
	...
    5dac:	00500001 	subseq	r0, r0, r1
    5db0:	00000000 	andeq	r0, r0, r0
    5db4:	01000000 	mrseq	r0, (UNDEF: 0)
    5db8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5dec:	00510001 	subseq	r0, r1, r1
    5df0:	00000000 	andeq	r0, r0, r0
    5df4:	01000000 	mrseq	r0, (UNDEF: 0)
    5df8:	00005400 	andeq	r5, r0, r0, lsl #8
    5dfc:	00000000 	andeq	r0, r0, r0
    5e00:	00030000 	andeq	r0, r3, r0
    5e04:	009f7074 	addseq	r7, pc, r4, ror r0	; <UNPREDICTABLE>
    5e08:	00000000 	andeq	r0, r0, r0
    5e0c:	04000000 	streq	r0, [r0], #-0
    5e10:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5e14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e18:	00000000 	andeq	r0, r0, r0
    5e1c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5e28:	70740003 	rsbsvc	r0, r4, r3
    5e2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e30:	00000000 	andeq	r0, r0, r0
    5e34:	f3000400 	vshl.u8	d0, d0, d0
    5e38:	009f5101 	addseq	r5, pc, r1, lsl #2
    5e3c:	00000000 	andeq	r0, r0, r0
    5e40:	01000000 	mrseq	r0, (UNDEF: 0)
    5e44:	00005400 	andeq	r5, r0, r0, lsl #8
    5e48:	00000000 	andeq	r0, r0, r0
    5e4c:	00030000 	andeq	r0, r3, r0
    5e50:	009f7074 	addseq	r7, pc, r4, ror r0	; <UNPREDICTABLE>
    5e54:	00000000 	andeq	r0, r0, r0
    5e58:	04000000 	streq	r0, [r0], #-0
    5e5c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5e60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5e74:	70740003 	rsbsvc	r0, r4, r3
    5e78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e7c:	00000000 	andeq	r0, r0, r0
    5e80:	f3000400 	vshl.u8	d0, d0, d0
    5e84:	009f5101 	addseq	r5, pc, r1, lsl #2
    5e88:	00000000 	andeq	r0, r0, r0
    5e8c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e90:	00005400 	andeq	r5, r0, r0, lsl #8
    5e94:	00000000 	andeq	r0, r0, r0
    5e98:	00040000 	andeq	r0, r4, r0
    5e9c:	9f5101f3 	svcls	0x005101f3
	...
    5ea8:	00540001 	subseq	r0, r4, r1
    5eac:	00000000 	andeq	r0, r0, r0
    5eb0:	04000000 	streq	r0, [r0], #-0
    5eb4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5eb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5ed0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ed4:	00005200 	andeq	r5, r0, r0, lsl #4
    5ed8:	00000000 	andeq	r0, r0, r0
    5edc:	00010000 	andeq	r0, r1, r0
    5ee0:	00000057 	andeq	r0, r0, r7, asr r0
    5ee4:	00000000 	andeq	r0, r0, r0
    5ee8:	f3000400 	vshl.u8	d0, d0, d0
    5eec:	009f5201 	addseq	r5, pc, r1, lsl #4
    5ef0:	00000000 	andeq	r0, r0, r0
    5ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ef8:	00005700 	andeq	r5, r0, r0, lsl #14
    5efc:	00000000 	andeq	r0, r0, r0
    5f00:	00040000 	andeq	r0, r4, r0
    5f04:	9f5201f3 	svcls	0x005201f3
	...
    5f1c:	00530001 	subseq	r0, r3, r1
    5f20:	00000000 	andeq	r0, r0, r0
    5f24:	04000000 	streq	r0, [r0], #-0
    5f28:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    5f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5f40:	91000200 	mrsls	r0, R8_usr
	...
    5f4c:	91000200 	mrsls	r0, R8_usr
	...
    5f64:	91000200 	mrsls	r0, R8_usr
    5f68:	00000004 	andeq	r0, r0, r4
    5f6c:	00000000 	andeq	r0, r0, r0
    5f70:	91000200 	mrsls	r0, R8_usr
    5f74:	00000004 	andeq	r0, r0, r4
    5f78:	00000000 	andeq	r0, r0, r0
    5f7c:	00000900 	andeq	r0, r0, r0, lsl #18
	...
    5f88:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5f94:	00560001 	subseq	r0, r6, r1
	...
    5fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    5fac:	00005c00 	andeq	r5, r0, r0, lsl #24
    5fb0:	00000000 	andeq	r0, r0, r0
    5fb4:	00010000 	andeq	r0, r1, r0
    5fb8:	0000005c 	andeq	r0, r0, ip, asr r0
    5fbc:	00000000 	andeq	r0, r0, r0
    5fc0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    5fd0:	31000200 	mrscc	r0, R8_usr
    5fd4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5fd8:	00000000 	andeq	r0, r0, r0
    5fdc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5fe8:	9f310002 	svcls	0x00310002
	...
    5ff4:	00540001 	subseq	r0, r4, r1
	...
    6008:	01000000 	mrseq	r0, (UNDEF: 0)
    600c:	00005000 	andeq	r5, r0, r0
    6010:	00000000 	andeq	r0, r0, r0
    6014:	00010000 	andeq	r0, r1, r0
    6018:	00000050 	andeq	r0, r0, r0, asr r0
	...
    602c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6038:	00530001 	subseq	r0, r3, r1
	...
    604c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6060:	00010000 	andeq	r0, r1, r0
    6064:	00000052 	andeq	r0, r0, r2, asr r0
	...
    6074:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6080:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6084:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6098:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60a4:	00540001 	subseq	r0, r4, r1
	...
    60d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    60e4:	00550001 	subseq	r0, r5, r1
    60e8:	00000000 	andeq	r0, r0, r0
    60ec:	03000000 	movweq	r0, #0
    60f0:	9f707500 	svcls	0x00707500
	...
    60fc:	01f30004 	mvnseq	r0, r4
    6100:	00009f51 	andeq	r9, r0, r1, asr pc
    6104:	00000000 	andeq	r0, r0, r0
    6108:	00010000 	andeq	r0, r1, r0
    610c:	00000055 	andeq	r0, r0, r5, asr r0
    6110:	00000000 	andeq	r0, r0, r0
    6114:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    6118:	00009f70 	andeq	r9, r0, r0, ror pc
    611c:	00000000 	andeq	r0, r0, r0
    6120:	00040000 	andeq	r0, r4, r0
    6124:	9f5101f3 	svcls	0x005101f3
	...
    6130:	00550001 	subseq	r0, r5, r1
    6134:	00000000 	andeq	r0, r0, r0
    6138:	03000000 	movweq	r0, #0
    613c:	9f707500 	svcls	0x00707500
	...
    6148:	01f30004 	mvnseq	r0, r4
    614c:	00009f51 	andeq	r9, r0, r1, asr pc
    6150:	00000000 	andeq	r0, r0, r0
    6154:	00010000 	andeq	r0, r1, r0
    6158:	00000055 	andeq	r0, r0, r5, asr r0
    615c:	00000000 	andeq	r0, r0, r0
    6160:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    6164:	00009f70 	andeq	r9, r0, r0, ror pc
    6168:	00000000 	andeq	r0, r0, r0
    616c:	00040000 	andeq	r0, r4, r0
    6170:	9f5101f3 	svcls	0x005101f3
	...
    617c:	00550001 	subseq	r0, r5, r1
    6180:	00000000 	andeq	r0, r0, r0
    6184:	04000000 	streq	r0, [r0], #-0
    6188:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    618c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6190:	00000000 	andeq	r0, r0, r0
    6194:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    61a0:	01f30004 	mvnseq	r0, r4
    61a4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    61c0:	00520001 	subseq	r0, r2, r1
    61c4:	00000000 	andeq	r0, r0, r0
    61c8:	01000000 	mrseq	r0, (UNDEF: 0)
    61cc:	00005700 	andeq	r5, r0, r0, lsl #14
    61d0:	00000000 	andeq	r0, r0, r0
    61d4:	00040000 	andeq	r0, r4, r0
    61d8:	9f5201f3 	svcls	0x005201f3
	...
    61e4:	00570001 	subseq	r0, r7, r1
    61e8:	00000000 	andeq	r0, r0, r0
    61ec:	04000000 	streq	r0, [r0], #-0
    61f0:	5201f300 	andpl	pc, r1, #0, 6
    61f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6208:	53000100 	movwpl	r0, #256	; 0x100
	...
    6214:	01f30004 	mvnseq	r0, r4
    6218:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    622c:	00020000 	andeq	r0, r2, r0
    6230:	00000091 	muleq	r0, r1, r0
    6234:	00000000 	andeq	r0, r0, r0
    6238:	00020000 	andeq	r0, r2, r0
    623c:	00000091 	muleq	r0, r1, r0
    6240:	00000000 	andeq	r0, r0, r0
    6244:	00070000 	andeq	r0, r7, r0
	...
    6250:	00010000 	andeq	r0, r1, r0
    6254:	00000050 	andeq	r0, r0, r0, asr r0
    6258:	00000000 	andeq	r0, r0, r0
    625c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6268:	00000002 	andeq	r0, r0, r2
	...
    6278:	9f310002 	svcls	0x00310002
	...
    6284:	00550001 	subseq	r0, r5, r1
    6288:	00000000 	andeq	r0, r0, r0
    628c:	02000000 	andeq	r0, r0, #0
    6290:	009f3100 	addseq	r3, pc, r0, lsl #2
    6294:	00000000 	andeq	r0, r0, r0
    6298:	01000000 	mrseq	r0, (UNDEF: 0)
    629c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    62b4:	00500001 	subseq	r0, r0, r1
    62b8:	00000000 	andeq	r0, r0, r0
    62bc:	01000000 	mrseq	r0, (UNDEF: 0)
    62c0:	00005000 	andeq	r5, r0, r0
    62c4:	00000000 	andeq	r0, r0, r0
    62c8:	00010000 	andeq	r0, r1, r0
    62cc:	00000050 	andeq	r0, r0, r0, asr r0
	...
    62e0:	53000100 	movwpl	r0, #256	; 0x100
	...
    62ec:	00530001 	subseq	r0, r3, r1
	...
    6300:	53000100 	movwpl	r0, #256	; 0x100
	...
    6314:	007d0002 	rsbseq	r0, sp, r2
	...
    6320:	187d0002 	ldmdane	sp!, {r1}^
	...
    633c:	00500001 	subseq	r0, r0, r1
    6340:	00000000 	andeq	r0, r0, r0
    6344:	01000000 	mrseq	r0, (UNDEF: 0)
    6348:	00005400 	andeq	r5, r0, r0, lsl #8
    634c:	00000000 	andeq	r0, r0, r0
    6350:	00040000 	andeq	r0, r4, r0
    6354:	9f5001f3 	svcls	0x005001f3
	...
    6360:	00540001 	subseq	r0, r4, r1
	...
    6374:	01000000 	mrseq	r0, (UNDEF: 0)
    6378:	00005100 	andeq	r5, r0, r0, lsl #2
    637c:	00000000 	andeq	r0, r0, r0
    6380:	00010000 	andeq	r0, r1, r0
    6384:	00000058 	andeq	r0, r0, r8, asr r0
	...
    639c:	01000000 	mrseq	r0, (UNDEF: 0)
    63a0:	00005200 	andeq	r5, r0, r0, lsl #4
    63a4:	00000000 	andeq	r0, r0, r0
    63a8:	00010000 	andeq	r0, r1, r0
    63ac:	00000056 	andeq	r0, r0, r6, asr r0
    63b0:	00000000 	andeq	r0, r0, r0
    63b4:	f3000400 	vshl.u8	d0, d0, d0
    63b8:	009f5201 	addseq	r5, pc, r1, lsl #4
    63bc:	00000000 	andeq	r0, r0, r0
    63c0:	01000000 	mrseq	r0, (UNDEF: 0)
    63c4:	00005600 	andeq	r5, r0, r0, lsl #12
    63c8:	00000000 	andeq	r0, r0, r0
    63cc:	00040000 	andeq	r0, r4, r0
    63d0:	9f5201f3 	svcls	0x005201f3
	...
    63ec:	00010000 	andeq	r0, r1, r0
    63f0:	00000053 	andeq	r0, r0, r3, asr r0
    63f4:	00000000 	andeq	r0, r0, r0
    63f8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6404:	01f30004 	mvnseq	r0, r4
    6408:	00009f53 	andeq	r9, r0, r3, asr pc
    640c:	00000000 	andeq	r0, r0, r0
    6410:	00010000 	andeq	r0, r1, r0
    6414:	00000055 	andeq	r0, r0, r5, asr r0
    6418:	00000000 	andeq	r0, r0, r0
    641c:	f3000400 	vshl.u8	d0, d0, d0
    6420:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    6434:	02000000 	andeq	r0, r0, #0
    6438:	00009100 	andeq	r9, r0, r0, lsl #2
    643c:	00000000 	andeq	r0, r0, r0
    6440:	02000000 	andeq	r0, r0, #0
    6444:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    6450:	00000100 	andeq	r0, r0, r0, lsl #2
    6454:	00000000 	andeq	r0, r0, r0
    6458:	01000000 	mrseq	r0, (UNDEF: 0)
    645c:	00005500 	andeq	r5, r0, r0, lsl #10
    6460:	00000000 	andeq	r0, r0, r0
    6464:	00020000 	andeq	r0, r2, r0
    6468:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    647c:	00010000 	andeq	r0, r1, r0
    6480:	00000050 	andeq	r0, r0, r0, asr r0
    6484:	00000000 	andeq	r0, r0, r0
    6488:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6494:	01000101 	tsteq	r0, r1, lsl #2
    6498:	00000001 	andeq	r0, r0, r1
    649c:	00000000 	andeq	r0, r0, r0
    64a0:	00020000 	andeq	r0, r2, r0
    64a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    64a8:	00000000 	andeq	r0, r0, r0
    64ac:	00020000 	andeq	r0, r2, r0
    64b0:	00009f30 	andeq	r9, r0, r0, lsr pc
    64b4:	00000000 	andeq	r0, r0, r0
    64b8:	00020000 	andeq	r0, r2, r0
    64bc:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    64cc:	00020000 	andeq	r0, r2, r0
    64d0:	0000007d 	andeq	r0, r0, sp, ror r0
    64d4:	00000000 	andeq	r0, r0, r0
    64d8:	00020000 	andeq	r0, r2, r0
    64dc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    64f4:	00010000 	andeq	r0, r1, r0
    64f8:	00000050 	andeq	r0, r0, r0, asr r0
    64fc:	00000000 	andeq	r0, r0, r0
    6500:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    650c:	01f30004 	mvnseq	r0, r4
    6510:	00009f50 	andeq	r9, r0, r0, asr pc
    6514:	00000000 	andeq	r0, r0, r0
    6518:	00010000 	andeq	r0, r1, r0
    651c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6530:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    653c:	00560001 	subseq	r0, r6, r1
	...
    6548:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    655c:	52000100 	andpl	r0, r0, #0, 2
	...
    6568:	00550001 	subseq	r0, r5, r1
    656c:	00000000 	andeq	r0, r0, r0
    6570:	04000000 	streq	r0, [r0], #-0
    6574:	5201f300 	andpl	pc, r1, #0, 6
    6578:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    657c:	00000000 	andeq	r0, r0, r0
    6580:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    658c:	01f30004 	mvnseq	r0, r4
    6590:	00009f52 	andeq	r9, r0, r2, asr pc
    6594:	00000000 	andeq	r0, r0, r0
    6598:	00010000 	andeq	r0, r1, r0
    659c:	00000055 	andeq	r0, r0, r5, asr r0
    65a0:	00000000 	andeq	r0, r0, r0
    65a4:	f3000400 	vshl.u8	d0, d0, d0
    65a8:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    65bc:	01000000 	mrseq	r0, (UNDEF: 0)
    65c0:	00005500 	andeq	r5, r0, r0, lsl #10
    65c4:	00000000 	andeq	r0, r0, r0
    65c8:	00010000 	andeq	r0, r1, r0
    65cc:	00000055 	andeq	r0, r0, r5, asr r0
	...
    65e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    65ec:	00500001 	subseq	r0, r0, r1
    65f0:	00000000 	andeq	r0, r0, r0
    65f4:	02000000 	andeq	r0, r0, #0
    65f8:	01010001 	tsteq	r1, r1
	...
    6604:	30000200 	andcc	r0, r0, r0, lsl #4
    6608:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    660c:	00000000 	andeq	r0, r0, r0
    6610:	30000200 	andcc	r0, r0, r0, lsl #4
    6614:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6618:	00000000 	andeq	r0, r0, r0
    661c:	31000200 	mrscc	r0, R8_usr
    6620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6630:	01000000 	mrseq	r0, (UNDEF: 0)
    6634:	00005000 	andeq	r5, r0, r0
	...
    6648:	00500001 	subseq	r0, r0, r1
	...
    6658:	02000000 	andeq	r0, r0, #0
    665c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6660:	00000000 	andeq	r0, r0, r0
    6664:	02000000 	andeq	r0, r0, #0
    6668:	00107d00 	andseq	r7, r0, r0, lsl #26
    666c:	00000000 	andeq	r0, r0, r0
    6670:	02000000 	andeq	r0, r0, #0
    6674:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6690:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    669c:	00540001 	subseq	r0, r4, r1
    66a0:	00000000 	andeq	r0, r0, r0
    66a4:	01000000 	mrseq	r0, (UNDEF: 0)
    66a8:	00005000 	andeq	r5, r0, r0
    66ac:	00000000 	andeq	r0, r0, r0
    66b0:	00010000 	andeq	r0, r1, r0
    66b4:	00000054 	andeq	r0, r0, r4, asr r0
    66b8:	00000000 	andeq	r0, r0, r0
    66bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    66d4:	00010000 	andeq	r0, r1, r0
    66d8:	00000051 	andeq	r0, r0, r1, asr r0
    66dc:	00000000 	andeq	r0, r0, r0
    66e0:	f3000400 	vshl.u8	d0, d0, d0
    66e4:	009f5101 	addseq	r5, pc, r1, lsl #2
    66e8:	00000000 	andeq	r0, r0, r0
    66ec:	01000000 	mrseq	r0, (UNDEF: 0)
    66f0:	00005100 	andeq	r5, r0, r0, lsl #2
    66f4:	00000000 	andeq	r0, r0, r0
    66f8:	00020000 	andeq	r0, r2, r0
	...
    670c:	00500001 	subseq	r0, r0, r1
    6710:	00000000 	andeq	r0, r0, r0
    6714:	01000000 	mrseq	r0, (UNDEF: 0)
    6718:	00005400 	andeq	r5, r0, r0, lsl #8
    671c:	00000000 	andeq	r0, r0, r0
    6720:	00010000 	andeq	r0, r1, r0
    6724:	00000050 	andeq	r0, r0, r0, asr r0
    6728:	00000000 	andeq	r0, r0, r0
    672c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6738:	00500001 	subseq	r0, r0, r1
    673c:	00000000 	andeq	r0, r0, r0
    6740:	03000000 	movweq	r0, #0
	...
    674c:	52000100 	andpl	r0, r0, #0, 2
	...
    6768:	00530001 	subseq	r0, r3, r1
    676c:	00000000 	andeq	r0, r0, r0
    6770:	01000000 	mrseq	r0, (UNDEF: 0)
    6774:	00005300 	andeq	r5, r0, r0, lsl #6
    6778:	00000000 	andeq	r0, r0, r0
    677c:	00020000 	andeq	r0, r2, r0
    6780:	00002c70 	andeq	r2, r0, r0, ror ip
    6784:	00000000 	andeq	r0, r0, r0
    6788:	00020000 	andeq	r0, r2, r0
    678c:	00002c74 	andeq	r2, r0, r4, ror ip
	...
    67a0:	00530001 	subseq	r0, r3, r1
    67a4:	00000000 	andeq	r0, r0, r0
    67a8:	a4000000 	strge	r0, [r0], #-0
    67ac:	aa10002c 	bge	406864 <__RAM_SIZE+0x306864>
    67b0:	0210002c 	andseq	r0, r0, #44	; 0x2c
    67b4:	aa007d00 	bge	25bbc <__HEAP_SIZE+0x24bbc>
    67b8:	1210002c 	andsne	r0, r0, #44	; 0x2c
    67bc:	0210002d 	andseq	r0, r0, #45	; 0x2d
    67c0:	12107d00 	andsne	r7, r0, #0, 26
    67c4:	1610002d 	ldrne	r0, [r0], -sp, lsr #32
    67c8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    67cc:	16007d00 	strne	r7, [r0], -r0, lsl #26
    67d0:	2410002d 	ldrcs	r0, [r0], #-45	; 0xffffffd3
    67d4:	0210002d 	andseq	r0, r0, #45	; 0x2d
    67d8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    67f0:	a4000000 	strge	r0, [r0], #-0
    67f4:	be10002c 	cdplt	0, 1, cr0, cr0, cr12, {1}
    67f8:	0110002c 	tsteq	r0, ip, lsr #32
    67fc:	2cbe5000 	ldccs	0, cr5, [lr]
    6800:	2cc01000 	stclcs	0, cr1, [r0], {0}
    6804:	00011000 	andeq	r1, r1, r0
    6808:	002cc054 	eoreq	ip, ip, r4, asr r0
    680c:	002cc410 	eoreq	ip, ip, r0, lsl r4
    6810:	50000110 	andpl	r0, r0, r0, lsl r1
    6814:	10002cc4 	andne	r2, r0, r4, asr #25
    6818:	10002d12 	andne	r2, r0, r2, lsl sp
    681c:	12540001 	subsne	r0, r4, #1
    6820:	1410002d 	ldrne	r0, [r0], #-45	; 0xffffffd3
    6824:	0110002d 	tsteq	r0, sp, lsr #32
    6828:	2d145000 	ldccs	0, cr5, [r4, #-0]
    682c:	2d161000 	ldccs	0, cr1, [r6, #-0]
    6830:	00041000 	andeq	r1, r4, r0
    6834:	9f5001f3 	svcls	0x005001f3
    6838:	10002d16 	andne	r2, r0, r6, lsl sp
    683c:	10002d18 	andne	r2, r0, r8, lsl sp
    6840:	18500001 	ldmdane	r0, {r0}^
    6844:	2410002d 	ldrcs	r0, [r0], #-45	; 0xffffffd3
    6848:	0110002d 	tsteq	r0, sp, lsr #32
    684c:	00005400 	andeq	r5, r0, r0, lsl #8
    6850:	00000000 	andeq	r0, r0, r0
    6854:	00020000 	andeq	r0, r2, r0
	...
    6864:	2ca40000 	stccs	0, cr0, [r4]
    6868:	2cbe1000 	ldccs	0, cr1, [lr]
    686c:	00011000 	andeq	r1, r1, r0
    6870:	002cbe50 	eoreq	fp, ip, r0, asr lr
    6874:	002cc010 	eoreq	ip, ip, r0, lsl r0
    6878:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    687c:	10002cc0 	andne	r2, r0, r0, asr #25
    6880:	10002cc4 	andne	r2, r0, r4, asr #25
    6884:	c4500001 	ldrbgt	r0, [r0], #-1
    6888:	1210002c 	andsne	r0, r0, #44	; 0x2c
    688c:	0110002d 	tsteq	r0, sp, lsr #32
    6890:	2d125400 	cfldrscs	mvf5, [r2, #-0]
    6894:	2d141000 	ldccs	0, cr1, [r4, #-0]
    6898:	00011000 	andeq	r1, r1, r0
    689c:	002d1450 	eoreq	r1, sp, r0, asr r4
    68a0:	002d1610 	eoreq	r1, sp, r0, lsl r6
    68a4:	f3000410 	vqshl.u8	d0, d0, d0
    68a8:	169f5001 	ldrne	r5, [pc], r1
    68ac:	1810002d 	ldmdane	r0, {r0, r2, r3, r5}
    68b0:	0110002d 	tsteq	r0, sp, lsr #32
    68b4:	2d185000 	ldccs	0, cr5, [r8, #-0]
    68b8:	2d241000 	stccs	0, cr1, [r4, #-0]
    68bc:	00011000 	andeq	r1, r1, r0
    68c0:	00000054 	andeq	r0, r0, r4, asr r0
    68c4:	00000000 	andeq	r0, r0, r0
    68c8:	00030300 	andeq	r0, r3, r0, lsl #6
    68cc:	00000404 	andeq	r0, r0, r4, lsl #8
    68d0:	002ca400 	eoreq	sl, ip, r0, lsl #8
    68d4:	002cbe10 	eoreq	fp, ip, r0, lsl lr
    68d8:	30000210 	andcc	r0, r0, r0, lsl r2
    68dc:	002cc09f 	mlaeq	ip, pc, r0, ip	; <UNPREDICTABLE>
    68e0:	002d0e10 	eoreq	r0, sp, r0, lsl lr
    68e4:	30000210 	andcc	r0, r0, r0, lsl r2
    68e8:	002d0e9f 	mlaeq	sp, pc, lr, r0	; <UNPREDICTABLE>
    68ec:	002d1210 	eoreq	r1, sp, r0, lsl r2
    68f0:	31000210 	tstcc	r0, r0, lsl r2
    68f4:	002d129f 	mlaeq	sp, pc, r2, r1	; <UNPREDICTABLE>
    68f8:	002d2410 	eoreq	r2, sp, r0, lsl r4
    68fc:	30000210 	andcc	r0, r0, r0, lsl r2
    6900:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6904:	00000000 	andeq	r0, r0, r0
    6908:	ea000000 	b	6910 <__HEAP_SIZE+0x5910>
    690c:	f610002c 			; <UNDEFINED> instruction: 0xf610002c
    6910:	0110002c 	tsteq	r0, ip, lsr #32
    6914:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6924:	00020000 	andeq	r0, r2, r0
    6928:	0000007d 	andeq	r0, r0, sp, ror r0
    692c:	00000000 	andeq	r0, r0, r0
    6930:	00020000 	andeq	r0, r2, r0
    6934:	0000107d 	andeq	r1, r0, sp, ror r0
    6938:	00000000 	andeq	r0, r0, r0
    693c:	00020000 	andeq	r0, r2, r0
    6940:	0000007d 	andeq	r0, r0, sp, ror r0
    6944:	00000000 	andeq	r0, r0, r0
    6948:	00020000 	andeq	r0, r2, r0
    694c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    6970:	00010000 	andeq	r0, r1, r0
    6974:	00000050 	andeq	r0, r0, r0, asr r0
    6978:	00000000 	andeq	r0, r0, r0
    697c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6988:	00500001 	subseq	r0, r0, r1
    698c:	00000000 	andeq	r0, r0, r0
    6990:	01000000 	mrseq	r0, (UNDEF: 0)
    6994:	00005400 	andeq	r5, r0, r0, lsl #8
    6998:	00000000 	andeq	r0, r0, r0
    699c:	00010000 	andeq	r0, r1, r0
    69a0:	00000050 	andeq	r0, r0, r0, asr r0
    69a4:	00000000 	andeq	r0, r0, r0
    69a8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    69b4:	00500001 	subseq	r0, r0, r1
    69b8:	00000000 	andeq	r0, r0, r0
    69bc:	04000000 	streq	r0, [r0], #-0
    69c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    69c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    69c8:	00000000 	andeq	r0, r0, r0
    69cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    69d8:	00540001 	subseq	r0, r4, r1
    69dc:	00000000 	andeq	r0, r0, r0
    69e0:	02000000 	andeq	r0, r0, #0
	...
    69fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6a00:	00005000 	andeq	r5, r0, r0
    6a04:	00000000 	andeq	r0, r0, r0
    6a08:	00010000 	andeq	r0, r1, r0
    6a0c:	00000054 	andeq	r0, r0, r4, asr r0
    6a10:	00000000 	andeq	r0, r0, r0
    6a14:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a20:	00540001 	subseq	r0, r4, r1
    6a24:	00000000 	andeq	r0, r0, r0
    6a28:	01000000 	mrseq	r0, (UNDEF: 0)
    6a2c:	00005000 	andeq	r5, r0, r0
    6a30:	00000000 	andeq	r0, r0, r0
    6a34:	00010000 	andeq	r0, r1, r0
    6a38:	00000054 	andeq	r0, r0, r4, asr r0
    6a3c:	00000000 	andeq	r0, r0, r0
    6a40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a4c:	01f30004 	mvnseq	r0, r4
    6a50:	00009f50 	andeq	r9, r0, r0, asr pc
    6a54:	00000000 	andeq	r0, r0, r0
    6a58:	00010000 	andeq	r0, r1, r0
    6a5c:	00000050 	andeq	r0, r0, r0, asr r0
    6a60:	00000000 	andeq	r0, r0, r0
    6a64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6a70:	00000003 	andeq	r0, r0, r3
	...
    6a7c:	00020000 	andeq	r0, r2, r0
    6a80:	00009f30 	andeq	r9, r0, r0, lsr pc
    6a84:	00000000 	andeq	r0, r0, r0
    6a88:	00020000 	andeq	r0, r2, r0
    6a8c:	00009f30 	andeq	r9, r0, r0, lsr pc
    6a90:	00000000 	andeq	r0, r0, r0
    6a94:	00020000 	andeq	r0, r2, r0
    6a98:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    6aac:	00530001 	subseq	r0, r3, r1
	...
    6ac0:	30000200 	andcc	r0, r0, r0, lsl #4
    6ac4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6adc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ae8:	01f30004 	mvnseq	r0, r4
    6aec:	00009f50 	andeq	r9, r0, r0, asr pc
    6af0:	00000000 	andeq	r0, r0, r0
    6af4:	00010000 	andeq	r0, r1, r0
    6af8:	00000050 	andeq	r0, r0, r0, asr r0
    6afc:	00000000 	andeq	r0, r0, r0
    6b00:	f3000400 	vshl.u8	d0, d0, d0
    6b04:	009f5001 	addseq	r5, pc, r1
    6b08:	00000000 	andeq	r0, r0, r0
    6b0c:	02000000 	andeq	r0, r0, #0
	...
    6b1c:	30000200 	andcc	r0, r0, r0, lsl #4
    6b20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6b24:	00000000 	andeq	r0, r0, r0
    6b28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b34:	9f300002 	svcls	0x00300002
	...
    6b48:	00010000 	andeq	r0, r1, r0
    6b4c:	00000050 	andeq	r0, r0, r0, asr r0
    6b50:	00000000 	andeq	r0, r0, r0
    6b54:	00254a00 	eoreq	r4, r5, r0, lsl #20
    6b58:	00254c10 	eoreq	r4, r5, r0, lsl ip
    6b5c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6b60:	00254c00 	eoreq	r4, r5, r0, lsl #24
    6b64:	00256e10 	eoreq	r6, r5, r0, lsl lr
    6b68:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6b6c:	00000008 	andeq	r0, r0, r8
	...
    6b80:	00254a00 	eoreq	r4, r5, r0, lsl #20
    6b84:	00255810 	eoreq	r5, r5, r0, lsl r8
    6b88:	50000110 	andpl	r0, r0, r0, lsl r1
    6b8c:	10002558 	andne	r2, r0, r8, asr r5
    6b90:	1000255a 	andne	r2, r0, sl, asr r5
    6b94:	5a540001 	bpl	1506ba0 <__RAM_SIZE+0x1406ba0>
    6b98:	5c100025 	ldcpl	0, cr0, [r0], {37}	; 0x25
    6b9c:	01100025 	tsteq	r0, r5, lsr #32
    6ba0:	255c5000 	ldrbcs	r5, [ip, #-0]
    6ba4:	25681000 	strbcs	r1, [r8, #-0]!
    6ba8:	00011000 	andeq	r1, r1, r0
    6bac:	00256854 	eoreq	r6, r5, r4, asr r8
    6bb0:	00256b10 	eoreq	r6, r5, r0, lsl fp
    6bb4:	50000110 	andpl	r0, r0, r0, lsl r1
    6bb8:	1000256b 	andne	r2, r0, fp, ror #10
    6bbc:	1000256e 	andne	r2, r0, lr, ror #10
    6bc0:	00540001 	subseq	r0, r4, r1
	...
    6bd0:	02000000 	andeq	r0, r0, #0
    6bd4:	00007d00 	andeq	r7, r0, r0, lsl #26
    6bd8:	00000000 	andeq	r0, r0, r0
    6bdc:	02000000 	andeq	r0, r0, #0
    6be0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6bf4:	01000000 	mrseq	r0, (UNDEF: 0)
    6bf8:	00005000 	andeq	r5, r0, r0
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	00010000 	andeq	r0, r1, r0
    6c04:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6c14:	01000000 	mrseq	r0, (UNDEF: 0)
    6c18:	00005300 	andeq	r5, r0, r0, lsl #6
    6c1c:	00000000 	andeq	r0, r0, r0
    6c20:	00010000 	andeq	r0, r1, r0
	...
    6c2c:	30730002 	rsbscc	r0, r3, r2
	...
    6c40:	00010000 	andeq	r0, r1, r0
    6c44:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6c58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c64:	00500001 	subseq	r0, r0, r1
    6c68:	00000000 	andeq	r0, r0, r0
    6c6c:	02000000 	andeq	r0, r0, #0
    6c70:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    6c7c:	02000000 	andeq	r0, r0, #0
    6c80:	009f3000 	addseq	r3, pc, r0
    6c84:	00000000 	andeq	r0, r0, r0
    6c88:	01000000 	mrseq	r0, (UNDEF: 0)
    6c8c:	00005300 	andeq	r5, r0, r0, lsl #6
    6c90:	00000000 	andeq	r0, r0, r0
    6c94:	00050000 	andeq	r0, r5, r0
    6c98:	25320073 	ldrcs	r0, [r2, #-115]!	; 0xffffff8d
    6c9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ca0:	00000000 	andeq	r0, r0, r0
    6ca4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6cb0:	10002570 	andne	r2, r0, r0, ror r5
    6cb4:	10002578 	andne	r2, r0, r8, ror r5
    6cb8:	007d0002 	rsbseq	r0, sp, r2
    6cbc:	10002578 	andne	r2, r0, r8, ror r5
    6cc0:	100025ac 	andne	r2, r0, ip, lsr #11
    6cc4:	087d0002 	ldmdaeq	sp!, {r1}^
    6cc8:	100025ac 	andne	r2, r0, ip, lsr #11
    6ccc:	100025bc 			; <UNDEFINED> instruction: 0x100025bc
    6cd0:	007d0002 	rsbseq	r0, sp, r2
	...
    6cdc:	25820000 	strcs	r0, [r2]
    6ce0:	25ac1000 	strcs	r1, [ip, #0]!
    6ce4:	00011000 	andeq	r1, r1, r0
    6ce8:	00000054 	andeq	r0, r0, r4, asr r0
    6cec:	00000000 	andeq	r0, r0, r0
    6cf0:	0023c400 	eoreq	ip, r3, r0, lsl #8
    6cf4:	0023c610 	eoreq	ip, r3, r0, lsl r6
    6cf8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6cfc:	0023c600 	eoreq	ip, r3, r0, lsl #12
    6d00:	00242c10 	eoreq	r2, r4, r0, lsl ip
    6d04:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6d08:	00000010 	andeq	r0, r0, r0, lsl r0
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	00000200 	andeq	r0, r0, r0, lsl #4
    6d14:	0023c600 	eoreq	ip, r3, r0, lsl #12
    6d18:	0023ca10 	eoreq	ip, r3, r0, lsl sl
    6d1c:	30000210 	andcc	r0, r0, r0, lsl r2
    6d20:	0023ca9f 	mlaeq	r3, pc, sl, ip	; <UNPREDICTABLE>
    6d24:	0023e810 	eoreq	lr, r3, r0, lsl r8
    6d28:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6d34:	00000003 	andeq	r0, r0, r3
    6d38:	10002c5c 	andne	r2, r0, ip, asr ip
    6d3c:	10002c8e 	andne	r2, r0, lr, lsl #25
    6d40:	9f310002 	svcls	0x00310002
    6d44:	10002c8e 	andne	r2, r0, lr, lsl #25
    6d48:	10002ca4 	andne	r2, r0, r4, lsr #25
    6d4c:	00500001 	subseq	r0, r0, r1
    6d50:	00000000 	andeq	r0, r0, r0
    6d54:	c4000000 	strgt	r0, [r0], #-0
    6d58:	c6100029 	ldrgt	r0, [r0], -r9, lsr #32
    6d5c:	02100029 	andseq	r0, r0, #41	; 0x29
    6d60:	c6007d00 	strgt	r7, [r0], -r0, lsl #26
    6d64:	fc100029 	ldc2	0, cr0, [r0], {41}	; 0x29
    6d68:	02100029 	andseq	r0, r0, #41	; 0x29
    6d6c:	00087d00 	andeq	r7, r8, r0, lsl #26
    6d70:	00000000 	andeq	r0, r0, r0
    6d74:	01000000 	mrseq	r0, (UNDEF: 0)
    6d78:	c4000000 	strgt	r0, [r0], #-0
    6d7c:	c8100029 	ldmdagt	r0, {r0, r3, r5}
    6d80:	01100029 	tsteq	r0, r9, lsr #32
    6d84:	29c85000 	stmibcs	r8, {ip, lr}^
    6d88:	29fc1000 	ldmibcs	ip!, {ip}^
    6d8c:	00041000 	andeq	r1, r4, r0
    6d90:	9f5001f3 	svcls	0x005001f3
	...
    6da0:	29cc0000 	stmibcs	ip, {}^	; <UNPREDICTABLE>
    6da4:	29d01000 	ldmibcs	r0, {ip}^
    6da8:	00011000 	andeq	r1, r1, r0
    6dac:	0029e250 	eoreq	lr, r9, r0, asr r2
    6db0:	0029e510 	eoreq	lr, r9, r0, lsl r5
    6db4:	50000110 	andpl	r0, r0, r0, lsl r1
    6db8:	100029ea 	andne	r2, r0, sl, ror #19
    6dbc:	100029f1 	strdne	r2, [r0], -r1
    6dc0:	00500001 	subseq	r0, r0, r1
    6dc4:	00000000 	andeq	r0, r0, r0
    6dc8:	d4000000 	strle	r0, [r0], #-0
    6dcc:	d610002b 	ldrle	r0, [r0], -fp, lsr #32
    6dd0:	0210002b 	andseq	r0, r0, #43	; 0x2b
    6dd4:	d6007d00 	strle	r7, [r0], -r0, lsl #26
    6dd8:	5010002b 	andspl	r0, r0, fp, lsr #32
    6ddc:	0210002c 	andseq	r0, r0, #44	; 0x2c
    6de0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    6e00:	002bd400 	eoreq	sp, fp, r0, lsl #8
    6e04:	002bdd10 	eoreq	sp, fp, r0, lsl sp
    6e08:	50000110 	andpl	r0, r0, r0, lsl r1
    6e0c:	10002bdd 	ldrdne	r2, [r0], -sp
    6e10:	10002bfc 	strdne	r2, [r0], -ip
    6e14:	fc540001 	mrrc2	0, 0, r0, r4, cr1
    6e18:	0410002b 	ldreq	r0, [r0], #-43	; 0xffffffd5
    6e1c:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    6e20:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e24:	002c049f 	mlaeq	ip, pc, r4, r0	; <UNPREDICTABLE>
    6e28:	002c2010 	eoreq	r2, ip, r0, lsl r0
    6e2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6e30:	10002c20 	andne	r2, r0, r0, lsr #24
    6e34:	10002c22 	andne	r2, r0, r2, lsr #24
    6e38:	01f30004 	mvnseq	r0, r4
    6e3c:	2c229f50 	stccs	15, cr9, [r2], #-320	; 0xfffffec0
    6e40:	2c2c1000 	stccs	0, cr1, [ip], #-0
    6e44:	00011000 	andeq	r1, r1, r0
    6e48:	002c2c54 	eoreq	r2, ip, r4, asr ip
    6e4c:	002c2e10 	eoreq	r2, ip, r0, lsl lr
    6e50:	f3000410 	vqshl.u8	d0, d0, d0
    6e54:	2e9f5001 	cdpcs	0, 9, cr5, cr15, cr1, {0}
    6e58:	3c10002c 	ldccc	0, cr0, [r0], {44}	; 0x2c
    6e5c:	0110002c 	tsteq	r0, ip, lsr #32
    6e60:	2c3c5400 	cfldrscs	mvf5, [ip], #-0
    6e64:	2c3e1000 	ldccs	0, cr1, [lr], #-0
    6e68:	00041000 	andeq	r1, r4, r0
    6e6c:	9f5001f3 	svcls	0x005001f3
    6e70:	10002c3e 	andne	r2, r0, lr, lsr ip
    6e74:	10002c40 	andne	r2, r0, r0, asr #24
    6e78:	40540001 	subsmi	r0, r4, r1
    6e7c:	5010002c 	andspl	r0, r0, ip, lsr #32
    6e80:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    6e84:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6e94:	002bd400 	eoreq	sp, fp, r0, lsl #8
    6e98:	002bdd10 	eoreq	sp, fp, r0, lsl sp
    6e9c:	51000110 	tstpl	r0, r0, lsl r1
    6ea0:	10002bdd 	ldrdne	r2, [r0], -sp
    6ea4:	10002c50 	andne	r2, r0, r0, asr ip
    6ea8:	00550001 	subseq	r0, r5, r1
    6eac:	00000000 	andeq	r0, r0, r0
    6eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    6eb4:	01000000 	mrseq	r0, (UNDEF: 0)
    6eb8:	01000100 	mrseq	r0, (UNDEF: 16)
    6ebc:	002bfa00 	eoreq	pc, fp, r0, lsl #20
    6ec0:	002bfc10 	eoreq	pc, fp, r0, lsl ip	; <UNPREDICTABLE>
    6ec4:	31000210 	tstcc	r0, r0, lsl r2
    6ec8:	002bfc9f 	mlaeq	fp, pc, ip, pc	; <UNPREDICTABLE>
    6ecc:	002c0410 	eoreq	r0, ip, r0, lsl r4
    6ed0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6ed4:	10002c1a 	andne	r2, r0, sl, lsl ip
    6ed8:	10002c22 	andne	r2, r0, r2, lsr #24
    6edc:	9f310002 	svcls	0x00310002
    6ee0:	10002c2a 	andne	r2, r0, sl, lsr #24
    6ee4:	10002c2e 	andne	r2, r0, lr, lsr #24
    6ee8:	9f310002 	svcls	0x00310002
    6eec:	10002c3a 	andne	r2, r0, sl, lsr ip
    6ef0:	10002c3e 	andne	r2, r0, lr, lsr ip
    6ef4:	9f300002 	svcls	0x00300002
	...
    6f04:	2be20000 	blcs	ff886f0c <__StackTop+0xc7786f0c>
    6f08:	2bf61000 	blcs	ffd8af10 <__StackTop+0xc7c8af10>
    6f0c:	00011000 	andeq	r1, r1, r0
    6f10:	002c0452 	eoreq	r0, ip, r2, asr r4
    6f14:	002c3910 	eoreq	r3, ip, r0, lsl r9
    6f18:	52000110 	andpl	r0, r0, #16, 2
    6f1c:	10002c3e 	andne	r2, r0, lr, lsr ip
    6f20:	10002c50 	andne	r2, r0, r0, asr ip
    6f24:	00520001 	subseq	r0, r2, r1
	...
    6f34:	002be600 	eoreq	lr, fp, r0, lsl #12
    6f38:	002bfc10 	eoreq	pc, fp, r0, lsl ip	; <UNPREDICTABLE>
    6f3c:	50000110 	andpl	r0, r0, r0, lsl r1
    6f40:	10002c04 	andne	r2, r0, r4, lsl #24
    6f44:	10002c36 	andne	r2, r0, r6, lsr ip
    6f48:	3e500001 	cdpcc	0, 5, cr0, cr0, cr1, {0}
    6f4c:	5010002c 	andspl	r0, r0, ip, lsr #32
    6f50:	0110002c 	tsteq	r0, ip, lsr #32
    6f54:	00005000 	andeq	r5, r0, r0
	...
    6f64:	00020000 	andeq	r0, r2, r0
    6f68:	0000007d 	andeq	r0, r0, sp, ror r0
    6f6c:	00000000 	andeq	r0, r0, r0
    6f70:	00020000 	andeq	r0, r2, r0
    6f74:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6f8c:	00500001 	subseq	r0, r0, r1
    6f90:	00000000 	andeq	r0, r0, r0
    6f94:	01000000 	mrseq	r0, (UNDEF: 0)
    6f98:	00005400 	andeq	r5, r0, r0, lsl #8
    6f9c:	00000000 	andeq	r0, r0, r0
    6fa0:	00040000 	andeq	r0, r4, r0
    6fa4:	9f5001f3 	svcls	0x005001f3
	...
    6fb8:	007d0002 	rsbseq	r0, sp, r2
	...
    6fc4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6fe0:	00500001 	subseq	r0, r0, r1
    6fe4:	00000000 	andeq	r0, r0, r0
    6fe8:	04000000 	streq	r0, [r0], #-0
    6fec:	5001f300 	andpl	pc, r1, r0, lsl #6
    6ff0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ff4:	00000000 	andeq	r0, r0, r0
    6ff8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7004:	01f30004 	mvnseq	r0, r4
    7008:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    701c:	00010000 	andeq	r0, r1, r0
    7020:	00000051 	andeq	r0, r0, r1, asr r0
    7024:	00000000 	andeq	r0, r0, r0
    7028:	f3000400 	vshl.u8	d0, d0, d0
    702c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    7040:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7058:	00530001 	subseq	r0, r3, r1
    705c:	00000000 	andeq	r0, r0, r0
    7060:	01000000 	mrseq	r0, (UNDEF: 0)
    7064:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7078:	00010000 	andeq	r0, r1, r0
    707c:	00000053 	andeq	r0, r0, r3, asr r0
    7080:	00000000 	andeq	r0, r0, r0
    7084:	53000100 	movwpl	r0, #256	; 0x100
	...
    7098:	00010000 	andeq	r0, r1, r0
    709c:	00000053 	andeq	r0, r0, r3, asr r0
    70a0:	00000000 	andeq	r0, r0, r0
    70a4:	002ad800 	eoreq	sp, sl, r0, lsl #16
    70a8:	002ada10 	eoreq	sp, sl, r0, lsl sl
    70ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    70b0:	002ada00 	eoreq	sp, sl, r0, lsl #20
    70b4:	002bbc10 	eoreq	fp, fp, r0, lsl ip
    70b8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    70bc:	00000008 	andeq	r0, r0, r8
	...
    70cc:	002ad800 	eoreq	sp, sl, r0, lsl #16
    70d0:	002b4210 	eoreq	r4, fp, r0, lsl r2
    70d4:	50000110 	andpl	r0, r0, r0, lsl r1
    70d8:	10002b42 	andne	r2, r0, r2, asr #22
    70dc:	10002b7a 	andne	r2, r0, sl, ror fp
    70e0:	01f30004 	mvnseq	r0, r4
    70e4:	2b7a9f50 	blcs	1eaee2c <__RAM_SIZE+0x1daee2c>
    70e8:	2b8e1000 	blcs	fe38b0f0 <__StackTop+0xc628b0f0>
    70ec:	00011000 	andeq	r1, r1, r0
    70f0:	002b8e50 	eoreq	r8, fp, r0, asr lr
    70f4:	002bbc10 	eoreq	fp, fp, r0, lsl ip
    70f8:	f3000410 	vqshl.u8	d0, d0, d0
    70fc:	009f5001 	addseq	r5, pc, r1
	...
    7108:	002ade00 	eoreq	sp, sl, r0, lsl #28
    710c:	002bbc10 	eoreq	fp, fp, r0, lsl ip
    7110:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    711c:	00000001 	andeq	r0, r0, r1
    7120:	10002b72 	andne	r2, r0, r2, ror fp
    7124:	10002b78 	andne	r2, r0, r8, ror fp
    7128:	9f310002 	svcls	0x00310002
    712c:	10002ba0 	andne	r2, r0, r0, lsr #23
    7130:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
    7134:	9f300002 	svcls	0x00300002
	...
    7144:	10002ae0 	andne	r2, r0, r0, ror #21
    7148:	10002b00 	andne	r2, r0, r0, lsl #22
    714c:	7a530001 	bvc	14c7158 <__RAM_SIZE+0x13c7158>
    7150:	8010002b 	andshi	r0, r0, fp, lsr #32
    7154:	0110002b 	tsteq	r0, fp, lsr #32
    7158:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7164:	2b080000 	blcs	20716c <__RAM_SIZE+0x10716c>
    7168:	2b261000 	blcs	98b170 <__RAM_SIZE+0x88b170>
    716c:	00011000 	andeq	r1, r1, r0
    7170:	002b8053 	eoreq	r8, fp, r3, asr r0
    7174:	002b8610 	eoreq	r8, fp, r0, lsl r6
    7178:	53000110 	movwpl	r0, #272	; 0x110
	...
    7184:	2b3e0000 	blcs	f8718c <__RAM_SIZE+0xe8718c>
    7188:	2b4a1000 	blcs	128b190 <__RAM_SIZE+0x118b190>
    718c:	00011000 	andeq	r1, r1, r0
    7190:	00000053 	andeq	r0, r0, r3, asr r0
    7194:	00000000 	andeq	r0, r0, r0
    7198:	8a000000 	bhi	71a0 <__HEAP_SIZE+0x61a0>
    719c:	9810002b 	ldmdals	r0, {r0, r1, r3, r5}
    71a0:	0110002b 	tsteq	r0, fp, lsr #32
    71a4:	00005200 	andeq	r5, r0, r0, lsl #4
    71a8:	00000000 	andeq	r0, r0, r0
    71ac:	2a9c0000 	bcs	fe7071b4 <__StackTop+0xc66071b4>
    71b0:	2a9e1000 	bcs	fe78b1b8 <__StackTop+0xc668b1b8>
    71b4:	00021000 	andeq	r1, r2, r0
    71b8:	2a9e007d 	bcs	fe7873b4 <__StackTop+0xc66873b4>
    71bc:	2ad81000 	bcs	ff60b1c4 <__StackTop+0xc750b1c4>
    71c0:	00021000 	andeq	r1, r2, r0
    71c4:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    71d4:	10002a9c 	mulne	r0, ip, sl
    71d8:	10002aa2 	andne	r2, r0, r2, lsr #21
    71dc:	a2500001 	subsge	r0, r0, #1
    71e0:	d110002a 	tstle	r0, sl, lsr #32
    71e4:	0110002a 	tsteq	r0, sl, lsr #32
    71e8:	2ad15300 	bcs	ff45bdf0 <__StackTop+0xc735bdf0>
    71ec:	2ad81000 	bcs	ff60b1f4 <__StackTop+0xc750b1f4>
    71f0:	00041000 	andeq	r1, r4, r0
    71f4:	9f5001f3 	svcls	0x005001f3
	...
    7204:	10002a9c 	mulne	r0, ip, sl
    7208:	10002aa4 	andne	r2, r0, r4, lsr #21
    720c:	a4510001 	ldrbge	r0, [r1], #-1
    7210:	d110002a 	tstle	r0, sl, lsr #32
    7214:	0110002a 	tsteq	r0, sl, lsr #32
    7218:	00005000 	andeq	r5, r0, r0
	...
    7224:	2a9c0000 	bcs	fe70722c <__StackTop+0xc660722c>
    7228:	2ad11000 	bcs	ff44b230 <__StackTop+0xc734b230>
    722c:	00011000 	andeq	r1, r1, r0
    7230:	002ad152 	eoreq	sp, sl, r2, asr r1
    7234:	002ad810 	eoreq	sp, sl, r0, lsl r8
    7238:	f3000410 	vqshl.u8	d0, d0, d0
    723c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    7248:	002aa400 	eoreq	sl, sl, r0, lsl #8
    724c:	002abe10 	eoreq	fp, sl, r0, lsl lr
    7250:	51000110 	tstpl	r0, r0, lsl r1
	...
    7264:	007d0002 	rsbseq	r0, sp, r2
	...
    7270:	107d0002 	rsbsne	r0, sp, r2
	...
    7288:	00010000 	andeq	r0, r1, r0
    728c:	00000050 	andeq	r0, r0, r0, asr r0
    7290:	00000000 	andeq	r0, r0, r0
    7294:	53000100 	movwpl	r0, #256	; 0x100
	...
    72a0:	01f30004 	mvnseq	r0, r4
    72a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    72b8:	00010000 	andeq	r0, r1, r0
    72bc:	00000051 	andeq	r0, r0, r1, asr r0
    72c0:	00000000 	andeq	r0, r0, r0
    72c4:	f3000400 	vshl.u8	d0, d0, d0
    72c8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    72dc:	01000000 	mrseq	r0, (UNDEF: 0)
    72e0:	00005200 	andeq	r5, r0, r0, lsl #4
    72e4:	00000000 	andeq	r0, r0, r0
    72e8:	00040000 	andeq	r0, r4, r0
    72ec:	9f5201f3 	svcls	0x005201f3
	...
    7300:	00010000 	andeq	r0, r1, r0
    7304:	00000051 	andeq	r0, r0, r1, asr r0
    7308:	00000000 	andeq	r0, r0, r0
    730c:	002a8000 	eoreq	r8, sl, r0
    7310:	002a8210 	eoreq	r8, sl, r0, lsl r2
    7314:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7318:	002a8200 	eoreq	r8, sl, r0, lsl #4
    731c:	002a9c10 	eoreq	r9, sl, r0, lsl ip
    7320:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7324:	00000008 	andeq	r0, r0, r8
	...
    7330:	002a8000 	eoreq	r8, sl, r0
    7334:	002a8d10 	eoreq	r8, sl, r0, lsl sp
    7338:	50000110 	andpl	r0, r0, r0, lsl r1
    733c:	10002a8d 	andne	r2, r0, sp, lsl #21
    7340:	10002a9c 	mulne	r0, ip, sl
    7344:	01f30004 	mvnseq	r0, r4
    7348:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7358:	10002a80 	andne	r2, r0, r0, lsl #21
    735c:	10002a88 	andne	r2, r0, r8, lsl #21
    7360:	88510001 	ldmdahi	r1, {r0}^
    7364:	9810002a 	ldmdals	r0, {r1, r3, r5}
    7368:	0110002a 	tsteq	r0, sl, lsr #32
    736c:	2a985400 	bcs	fe61c374 <__StackTop+0xc651c374>
    7370:	2a9c1000 	bcs	fe70b378 <__StackTop+0xc660b378>
    7374:	00041000 	andeq	r1, r4, r0
    7378:	9f5101f3 	svcls	0x005101f3
	...
    7388:	2a140000 	bcs	507390 <__RAM_SIZE+0x407390>
    738c:	2a5c1000 	bcs	170b394 <__RAM_SIZE+0x160b394>
    7390:	00011000 	andeq	r1, r1, r0
    7394:	002a5c53 	eoreq	r5, sl, r3, asr ip
    7398:	002a5e10 	eoreq	r5, sl, r0, lsl lr
    739c:	03000510 	movweq	r0, #1296	; 0x510
    73a0:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
    73a4:	10002a5e 	andne	r2, r0, lr, asr sl
    73a8:	10002a80 	andne	r2, r0, r0, lsl #21
    73ac:	00530001 	subseq	r0, r3, r1
    73b0:	00000000 	andeq	r0, r0, r0
    73b4:	02000000 	andeq	r0, r0, #0
    73b8:	00000000 	andeq	r0, r0, r0
    73bc:	002a2600 	eoreq	r2, sl, r0, lsl #12
    73c0:	002a5c10 	eoreq	r5, sl, r0, lsl ip
    73c4:	73000b10 	movwvc	r0, #2832	; 0xb10
    73c8:	031e4c00 	tsteq	lr, #0, 24
    73cc:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
    73d0:	2a5c9f22 	bcs	172f060 <__RAM_SIZE+0x162f060>
    73d4:	2a5e1000 	bcs	178b3dc <__RAM_SIZE+0x168b3dc>
    73d8:	000f1000 	andeq	r1, pc, r0
    73dc:	008a5803 	addeq	r5, sl, r3, lsl #16
    73e0:	1e4c0638 	mcrne	6, 2, r0, cr12, cr8, {1}
    73e4:	0085bc03 	addeq	fp, r5, r3, lsl #24
    73e8:	5e9f2238 	mrcpl	2, 4, r2, cr15, cr8, {1}
    73ec:	8010002a 	andshi	r0, r0, sl, lsr #32
    73f0:	0b10002a 	bleq	4074a0 <__RAM_SIZE+0x3074a0>
    73f4:	4c007300 	stcmi	3, cr7, [r0], {-0}
    73f8:	85bc031e 	ldrhi	r0, [ip, #798]!	; 0x31e
    73fc:	9f223800 	svcls	0x00223800
	...
    7410:	007d0002 	rsbseq	r0, sp, r2
	...
    741c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7434:	00500001 	subseq	r0, r0, r1
    7438:	00000000 	andeq	r0, r0, r0
    743c:	01000000 	mrseq	r0, (UNDEF: 0)
    7440:	00005000 	andeq	r5, r0, r0
	...
    7458:	00510001 	subseq	r0, r1, r1
    745c:	00000000 	andeq	r0, r0, r0
    7460:	04000000 	streq	r0, [r0], #-0
    7464:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7468:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    746c:	00000000 	andeq	r0, r0, r0
    7470:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7488:	00530001 	subseq	r0, r3, r1
    748c:	00000000 	andeq	r0, r0, r0
    7490:	01000000 	mrseq	r0, (UNDEF: 0)
    7494:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    74a8:	9f300002 	svcls	0x00300002
	...
    74bc:	007d0002 	rsbseq	r0, sp, r2
	...
    74c8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    74e0:	00500001 	subseq	r0, r0, r1
    74e4:	00000000 	andeq	r0, r0, r0
    74e8:	01000000 	mrseq	r0, (UNDEF: 0)
    74ec:	00005000 	andeq	r5, r0, r0
	...
    7500:	00540001 	subseq	r0, r4, r1
	...
    7514:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7528:	00010000 	andeq	r0, r1, r0
    752c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    753c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    754c:	00000008 	andeq	r0, r0, r8
	...
    7560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    756c:	00500001 	subseq	r0, r0, r1
	...
    7580:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7594:	00010000 	andeq	r0, r1, r0
    7598:	00000054 	andeq	r0, r0, r4, asr r0
	...
    75a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    75b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    75b8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    75cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    75d8:	00500001 	subseq	r0, r0, r1
	...
    75f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    75fc:	00540001 	subseq	r0, r4, r1
    7600:	00000000 	andeq	r0, r0, r0
    7604:	01000000 	mrseq	r0, (UNDEF: 0)
    7608:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    761c:	00010000 	andeq	r0, r1, r0
    7620:	00000055 	andeq	r0, r0, r5, asr r0
    7624:	00000000 	andeq	r0, r0, r0
    7628:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7634:	10002714 	andne	r2, r0, r4, lsl r7
    7638:	10002720 	andne	r2, r0, r0, lsr #14
    763c:	007d0002 	rsbseq	r0, sp, r2
    7640:	10002720 	andne	r2, r0, r0, lsr #14
    7644:	10002838 	andne	r2, r0, r8, lsr r8
    7648:	107d0002 	rsbsne	r0, sp, r2
    764c:	10002838 	andne	r2, r0, r8, lsr r8
    7650:	10002844 	andne	r2, r0, r4, asr #16
    7654:	007d0002 	rsbseq	r0, sp, r2
    7658:	10002844 	andne	r2, r0, r4, asr #16
    765c:	10002874 	andne	r2, r0, r4, ror r8
    7660:	107d0002 	rsbsne	r0, sp, r2
	...
    7670:	277c0000 	ldrbcs	r0, [ip, -r0]!
    7674:	277e1000 	ldrbcs	r1, [lr, -r0]!
    7678:	00011000 	andeq	r1, r1, r0
    767c:	00278253 	eoreq	r8, r7, r3, asr r2
    7680:	0027d810 	eoreq	sp, r7, r0, lsl r8
    7684:	53000110 	movwpl	r0, #272	; 0x110
    7688:	100027f4 	strdne	r2, [r0], -r4
    768c:	10002838 	andne	r2, r0, r8, lsr r8
    7690:	00530001 	subseq	r0, r3, r1
	...
    76a0:	00277c00 	eoreq	r7, r7, r0, lsl #24
    76a4:	00278210 	eoreq	r8, r7, r0, lsl r2
    76a8:	52000110 	andpl	r0, r0, #16, 2
    76ac:	100027f6 	strdne	r2, [r0], -r6
    76b0:	100027fc 	strdne	r2, [r0], -ip
    76b4:	fc520001 	mrrc2	0, 0, r0, r2, cr1
    76b8:	02100027 	andseq	r0, r0, #39	; 0x27
    76bc:	02100028 	andseq	r0, r0, #40	; 0x28
    76c0:	00047300 	andeq	r7, r4, r0, lsl #6
    76c4:	00000000 	andeq	r0, r0, r0
    76c8:	04000000 	streq	r0, [r0], #-0
	...
    76d8:	00271400 	eoreq	r1, r7, r0, lsl #8
    76dc:	00273410 	eoreq	r3, r7, r0, lsl r4
    76e0:	30000210 	andcc	r0, r0, r0, lsl r2
    76e4:	0027349f 	mlaeq	r7, pc, r4, r3	; <UNPREDICTABLE>
    76e8:	00275210 	eoreq	r5, r7, r0, lsl r2
    76ec:	50000110 	andpl	r0, r0, r0, lsl r1
    76f0:	10002754 	andne	r2, r0, r4, asr r7
    76f4:	10002772 	andne	r2, r0, r2, ror r7
    76f8:	9f300002 	svcls	0x00300002
    76fc:	10002772 	andne	r2, r0, r2, ror r7
    7700:	10002838 	andne	r2, r0, r8, lsr r8
    7704:	38500001 	ldmdacc	r0, {r0}^
    7708:	44100028 	ldrmi	r0, [r0], #-40	; 0xffffffd8
    770c:	02100028 	andseq	r0, r0, #40	; 0x28
    7710:	449f3000 	ldrmi	r3, [pc], #0	; 7718 <__HEAP_SIZE+0x6718>
    7714:	46100028 	ldrmi	r0, [r0], -r8, lsr #32
    7718:	01100028 	tsteq	r0, r8, lsr #32
    771c:	28465000 	stmdacs	r6, {ip, lr}^
    7720:	28741000 	ldmdacs	r4!, {ip}^
    7724:	00021000 	andeq	r1, r2, r0
    7728:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    7734:	27260000 	strcs	r0, [r6, -r0]!
    7738:	28381000 	ldmdacs	r8!, {ip}
    773c:	00011000 	andeq	r1, r1, r0
    7740:	00284454 	eoreq	r4, r8, r4, asr r4
    7744:	00287410 	eoreq	r7, r8, r0, lsl r4
    7748:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7754:	27580000 	ldrbcs	r0, [r8, -r0]
    7758:	276b1000 	strbcs	r1, [fp, -r0]!
    775c:	00011000 	andeq	r1, r1, r0
    7760:	00000051 	andeq	r0, r0, r1, asr r0
	...
    776c:	00278200 	eoreq	r8, r7, r0, lsl #4
    7770:	00278810 	eoreq	r8, r7, r0, lsl r8
    7774:	52000110 	andpl	r0, r0, #16, 2
    7778:	100027fc 	strdne	r2, [r0], -ip
    777c:	1000281a 	andne	r2, r0, sl, lsl r8
    7780:	00520001 	subseq	r0, r2, r1
	...
    778c:	88000201 	stmdahi	r0, {r0, r9}
    7790:	92100027 	andsls	r0, r0, #39	; 0x27
    7794:	01100027 	tsteq	r0, r7, lsr #32
    7798:	281e5200 	ldmdacs	lr, {r9, ip, lr}
    779c:	28381000 	ldmdacs	r8!, {ip}
    77a0:	00011000 	andeq	r1, r1, r0
    77a4:	00000052 	andeq	r0, r0, r2, asr r0
    77a8:	00000000 	andeq	r0, r0, r0
    77ac:	b0000000 	andlt	r0, r0, r0
    77b0:	bc100027 	ldclt	0, cr0, [r0], {39}	; 0x27
    77b4:	01100027 	tsteq	r0, r7, lsr #32
    77b8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    77c8:	00020000 	andeq	r0, r2, r0
    77cc:	0000007d 	andeq	r0, r0, sp, ror r0
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	00020000 	andeq	r0, r2, r0
    77d8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    77f8:	00500001 	subseq	r0, r0, r1
    77fc:	00000000 	andeq	r0, r0, r0
    7800:	01000000 	mrseq	r0, (UNDEF: 0)
    7804:	00005400 	andeq	r5, r0, r0, lsl #8
    7808:	00000000 	andeq	r0, r0, r0
    780c:	00040000 	andeq	r0, r4, r0
    7810:	9f5001f3 	svcls	0x005001f3
	...
    781c:	00540001 	subseq	r0, r4, r1
    7820:	00000000 	andeq	r0, r0, r0
    7824:	03000000 	movweq	r0, #0
    7828:	9f7c7500 	svcls	0x007c7500
	...
    7834:	00540001 	subseq	r0, r4, r1
    7838:	00000000 	andeq	r0, r0, r0
    783c:	03000000 	movweq	r0, #0
    7840:	9f7c7500 	svcls	0x007c7500
	...
    784c:	00000001 	andeq	r0, r0, r1
	...
    7860:	00010000 	andeq	r0, r1, r0
    7864:	00000050 	andeq	r0, r0, r0, asr r0
    7868:	00000000 	andeq	r0, r0, r0
    786c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7878:	01f30004 	mvnseq	r0, r4
    787c:	00009f50 	andeq	r9, r0, r0, asr pc
    7880:	00000000 	andeq	r0, r0, r0
    7884:	00010000 	andeq	r0, r1, r0
    7888:	00000054 	andeq	r0, r0, r4, asr r0
    788c:	00000000 	andeq	r0, r0, r0
    7890:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    7894:	00009f7c 	andeq	r9, r0, ip, ror pc
    7898:	00000000 	andeq	r0, r0, r0
    789c:	00010000 	andeq	r0, r1, r0
    78a0:	00000054 	andeq	r0, r0, r4, asr r0
    78a4:	00000000 	andeq	r0, r0, r0
    78a8:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    78ac:	00009f7c 	andeq	r9, r0, ip, ror pc
	...
    78b8:	00000001 	andeq	r0, r0, r1
    78bc:	00000000 	andeq	r0, r0, r0
    78c0:	00010000 	andeq	r0, r1, r0
    78c4:	00000054 	andeq	r0, r0, r4, asr r0
    78c8:	00000000 	andeq	r0, r0, r0
    78cc:	31000200 	mrscc	r0, R8_usr
    78d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    78e0:	01000000 	mrseq	r0, (UNDEF: 0)
    78e4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    78f4:	00020000 	andeq	r0, r2, r0
    78f8:	0000007d 	andeq	r0, r0, sp, ror r0
    78fc:	00000000 	andeq	r0, r0, r0
    7900:	00020000 	andeq	r0, r2, r0
    7904:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    791c:	00500001 	subseq	r0, r0, r1
    7920:	00000000 	andeq	r0, r0, r0
    7924:	01000000 	mrseq	r0, (UNDEF: 0)
    7928:	00005400 	andeq	r5, r0, r0, lsl #8
    792c:	00000000 	andeq	r0, r0, r0
    7930:	00040000 	andeq	r0, r4, r0
    7934:	9f5001f3 	svcls	0x005001f3
	...
    7948:	00010000 	andeq	r0, r1, r0
    794c:	00000050 	andeq	r0, r0, r0, asr r0
    7950:	00000000 	andeq	r0, r0, r0
    7954:	0026d800 	eoreq	sp, r6, r0, lsl #16
    7958:	0026da10 	eoreq	sp, r6, r0, lsl sl
    795c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7960:	0026da00 	eoreq	sp, r6, r0, lsl #20
    7964:	00271410 	eoreq	r1, r7, r0, lsl r4
    7968:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    796c:	00000008 	andeq	r0, r0, r8
	...
    797c:	0026d800 	eoreq	sp, r6, r0, lsl #16
    7980:	0026ea10 	eoreq	lr, r6, r0, lsl sl
    7984:	50000110 	andpl	r0, r0, r0, lsl r1
    7988:	100026ea 	andne	r2, r0, sl, ror #13
    798c:	100026f0 	strdne	r2, [r0], -r0
    7990:	f4540001 			; <UNDEFINED> instruction: 0xf4540001
    7994:	f7100026 			; <UNDEFINED> instruction: 0xf7100026
    7998:	01100026 	tsteq	r0, r6, lsr #32
    799c:	26f75000 	ldrbtcs	r5, [r7], r0
    79a0:	27141000 	ldrcs	r1, [r4, -r0]
    79a4:	00011000 	andeq	r1, r1, r0
    79a8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    79b4:	0026e200 	eoreq	lr, r6, r0, lsl #4
    79b8:	0026ea10 	eoreq	lr, r6, r0, lsl sl
    79bc:	53000110 	movwpl	r0, #272	; 0x110
    79c0:	100026f4 	strdne	r2, [r0], -r4
    79c4:	100026f7 	strdne	r2, [r0], -r7
    79c8:	00530001 	subseq	r0, r3, r1
	...
    79dc:	01000000 	mrseq	r0, (UNDEF: 0)
    79e0:	00005000 	andeq	r5, r0, r0
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	00040000 	andeq	r0, r4, r0
    79ec:	9f5001f3 	svcls	0x005001f3
	...
    7a04:	00500001 	subseq	r0, r0, r1
    7a08:	00000000 	andeq	r0, r0, r0
    7a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    7a10:	00005000 	andeq	r5, r0, r0
	...
    7a1c:	00010001 	andeq	r0, r1, r1
	...
    7a28:	9f300002 	svcls	0x00300002
	...
    7a34:	9f310002 	svcls	0x00310002
	...
    7a40:	9f310002 	svcls	0x00310002
	...
    7a58:	00530001 	subseq	r0, r3, r1
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	01000000 	mrseq	r0, (UNDEF: 0)
    7a64:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7a74:	00020000 	andeq	r0, r2, r0
    7a78:	0000007d 	andeq	r0, r0, sp, ror r0
    7a7c:	00000000 	andeq	r0, r0, r0
    7a80:	00020000 	andeq	r0, r2, r0
    7a84:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    7a98:	00010000 	andeq	r0, r1, r0
    7a9c:	00000050 	andeq	r0, r0, r0, asr r0
    7aa0:	00000000 	andeq	r0, r0, r0
    7aa4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    7ab0:	00000001 	andeq	r0, r0, r1
	...
    7abc:	9f350002 	svcls	0x00350002
	...
    7ac8:	00540001 	subseq	r0, r4, r1
	...
    7af0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7afc:	00550001 	subseq	r0, r5, r1
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	01000000 	mrseq	r0, (UNDEF: 0)
    7b08:	00005000 	andeq	r5, r0, r0
    7b0c:	00000000 	andeq	r0, r0, r0
    7b10:	00010000 	andeq	r0, r1, r0
    7b14:	00000055 	andeq	r0, r0, r5, asr r0
    7b18:	00000000 	andeq	r0, r0, r0
    7b1c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7b28:	00550001 	subseq	r0, r5, r1
    7b2c:	00000000 	andeq	r0, r0, r0
    7b30:	01000000 	mrseq	r0, (UNDEF: 0)
    7b34:	00005000 	andeq	r5, r0, r0
    7b38:	00000000 	andeq	r0, r0, r0
    7b3c:	00010000 	andeq	r0, r1, r0
    7b40:	00000055 	andeq	r0, r0, r5, asr r0
    7b44:	00000000 	andeq	r0, r0, r0
    7b48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7b54:	00550001 	subseq	r0, r5, r1
    7b58:	00000000 	andeq	r0, r0, r0
    7b5c:	01000000 	mrseq	r0, (UNDEF: 0)
    7b60:	00005000 	andeq	r5, r0, r0
	...
    7b70:	00020000 	andeq	r0, r2, r0
    7b74:	0000007d 	andeq	r0, r0, sp, ror r0
    7b78:	00000000 	andeq	r0, r0, r0
    7b7c:	00020000 	andeq	r0, r2, r0
    7b80:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
    7b98:	00010000 	andeq	r0, r1, r0
    7b9c:	00000050 	andeq	r0, r0, r0, asr r0
    7ba0:	00000000 	andeq	r0, r0, r0
    7ba4:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    7ba8:	00009f78 	andeq	r9, r0, r8, ror pc
    7bac:	00000000 	andeq	r0, r0, r0
    7bb0:	00010000 	andeq	r0, r1, r0
    7bb4:	00000050 	andeq	r0, r0, r0, asr r0
    7bb8:	00000000 	andeq	r0, r0, r0
    7bbc:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    7bc0:	00009f78 	andeq	r9, r0, r8, ror pc
	...
    7bcc:	02000000 	andeq	r0, r0, #0
    7bd0:	00000002 	andeq	r0, r0, r2
    7bd4:	00000000 	andeq	r0, r0, r0
    7bd8:	00010000 	andeq	r0, r1, r0
    7bdc:	00000051 	andeq	r0, r0, r1, asr r0
    7be0:	00000000 	andeq	r0, r0, r0
    7be4:	5e000100 	adfpls	f0, f0, f0
	...
    7bf0:	00510001 	subseq	r0, r1, r1
    7bf4:	00000000 	andeq	r0, r0, r0
    7bf8:	04000000 	streq	r0, [r0], #-0
    7bfc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7c00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c04:	00000000 	andeq	r0, r0, r0
    7c08:	00000100 	andeq	r0, r0, r0, lsl #2
    7c0c:	00020000 	andeq	r0, r2, r0
    7c10:	00000000 	andeq	r0, r0, r0
    7c14:	02000000 	andeq	r0, r0, #0
    7c18:	009f3000 	addseq	r3, pc, r0
    7c1c:	00000000 	andeq	r0, r0, r0
    7c20:	01000000 	mrseq	r0, (UNDEF: 0)
    7c24:	00005000 	andeq	r5, r0, r0
    7c28:	00000000 	andeq	r0, r0, r0
    7c2c:	00020000 	andeq	r0, r2, r0
    7c30:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c34:	00000000 	andeq	r0, r0, r0
    7c38:	00020000 	andeq	r0, r2, r0
    7c3c:	00000000 	andeq	r0, r0, r0
    7c40:	00000200 	andeq	r0, r0, r0, lsl #4
    7c44:	00000000 	andeq	r0, r0, r0
    7c48:	00020000 	andeq	r0, r2, r0
    7c4c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c50:	00000000 	andeq	r0, r0, r0
    7c54:	00010000 	andeq	r0, r1, r0
    7c58:	00000051 	andeq	r0, r0, r1, asr r0
    7c5c:	00000000 	andeq	r0, r0, r0
    7c60:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7c6c:	9f300002 	svcls	0x00300002
	...
    7c78:	00020000 	andeq	r0, r2, r0
	...
    7c84:	00010000 	andeq	r0, r1, r0
    7c88:	00000053 	andeq	r0, r0, r3, asr r0
    7c8c:	00000000 	andeq	r0, r0, r0
    7c90:	30000200 	andcc	r0, r0, r0, lsl #4
    7c94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c98:	00000000 	andeq	r0, r0, r0
    7c9c:	53000100 	movwpl	r0, #256	; 0x100
	...
    7cb4:	00520001 	subseq	r0, r2, r1
    7cb8:	00000000 	andeq	r0, r0, r0
    7cbc:	01000000 	mrseq	r0, (UNDEF: 0)
    7cc0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7ccc:	00000001 	andeq	r0, r0, r1
    7cd0:	00000000 	andeq	r0, r0, r0
    7cd4:	00020000 	andeq	r0, r2, r0
    7cd8:	00009f30 	andeq	r9, r0, r0, lsr pc
    7cdc:	00000000 	andeq	r0, r0, r0
    7ce0:	00020000 	andeq	r0, r2, r0
    7ce4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    7cf8:	00030000 	andeq	r0, r3, r0
    7cfc:	009f0870 	addseq	r0, pc, r0, ror r8	; <UNPREDICTABLE>
    7d00:	00000000 	andeq	r0, r0, r0
    7d04:	01000000 	mrseq	r0, (UNDEF: 0)
    7d08:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    7d1c:	00540001 	subseq	r0, r4, r1
	...
    7d30:	01000000 	mrseq	r0, (UNDEF: 0)
    7d34:	00005000 	andeq	r5, r0, r0
    7d38:	00000000 	andeq	r0, r0, r0
    7d3c:	00010000 	andeq	r0, r1, r0
    7d40:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7d50:	01000000 	mrseq	r0, (UNDEF: 0)
    7d54:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7d68:	00500001 	subseq	r0, r0, r1
	...
    7d74:	0026c400 	eoreq	ip, r6, r0, lsl #8
    7d78:	0026cc10 	eoreq	ip, r6, r0, lsl ip
    7d7c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    7d88:	10002874 	andne	r2, r0, r4, ror r8
    7d8c:	10002876 	andne	r2, r0, r6, ror r8
    7d90:	007d0002 	rsbseq	r0, sp, r2
    7d94:	10002876 	andne	r2, r0, r6, ror r8
    7d98:	100029a4 	andne	r2, r0, r4, lsr #19
    7d9c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7da8:	00000001 	andeq	r0, r0, r1
	...
    7db4:	10002876 	andne	r2, r0, r6, ror r8
    7db8:	10002892 	mulne	r0, r2, r8
    7dbc:	9f300002 	svcls	0x00300002
    7dc0:	10002892 	mulne	r0, r2, r8
    7dc4:	1000289e 	mulne	r0, lr, r8
    7dc8:	9e530001 	cdpls	0, 5, cr0, cr3, cr1, {0}
    7dcc:	a0100028 	andsge	r0, r0, r8, lsr #32
    7dd0:	02100028 	andseq	r0, r0, #40	; 0x28
    7dd4:	a09f3000 	addsge	r3, pc, r0
    7dd8:	aa100028 	bge	407e80 <__RAM_SIZE+0x307e80>
    7ddc:	01100028 	tsteq	r0, r8, lsr #32
    7de0:	28ae5300 	stmiacs	lr!, {r8, r9, ip, lr}
    7de4:	29431000 	stmdbcs	r3, {ip}^
    7de8:	00011000 	andeq	r1, r1, r0
    7dec:	00297853 	eoreq	r7, r9, r3, asr r8
    7df0:	00297a10 	eoreq	r7, r9, r0, lsl sl
    7df4:	30000210 	andcc	r0, r0, r0, lsl r2
    7df8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	01010200 	mrseq	r0, R9_usr
    7e04:	00000000 	andeq	r0, r0, r0
    7e08:	76000000 	strvc	r0, [r0], -r0
    7e0c:	50100028 	andspl	r0, r0, r8, lsr #32
    7e10:	02100029 	andseq	r0, r0, #41	; 0x29
    7e14:	509f3000 	addspl	r3, pc, r0
    7e18:	5c100029 	ldcpl	0, cr0, [r0], {41}	; 0x29
    7e1c:	02100029 	andseq	r0, r0, #41	; 0x29
    7e20:	5c9f3100 	ldfpls	f3, [pc], {0}
    7e24:	7a100029 	bvc	407ed0 <__RAM_SIZE+0x307ed0>
    7e28:	02100029 	andseq	r0, r0, #41	; 0x29
    7e2c:	7a9f3000 	bvc	fe7d3e34 <__StackTop+0xc66d3e34>
    7e30:	82100029 	andshi	r0, r0, #41	; 0x29
    7e34:	01100029 	tsteq	r0, r9, lsr #32
    7e38:	29825400 	stmibcs	r2, {sl, ip, lr}
    7e3c:	29a41000 	stmibcs	r4!, {ip}
    7e40:	00011000 	andeq	r1, r1, r0
    7e44:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7e50:	00289200 	eoreq	r9, r8, r0, lsl #4
    7e54:	00289810 	eoreq	r9, r8, r0, lsl r8
    7e58:	52000110 	andpl	r0, r0, #16, 2
    7e5c:	100028b0 			; <UNDEFINED> instruction: 0x100028b0
    7e60:	100028d0 	ldrdne	r2, [r0], -r0
    7e64:	00520001 	subseq	r0, r2, r1
	...
    7e70:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    7e74:	9e100028 	cdpls	0, 1, cr0, cr0, cr8, {1}
    7e78:	01100028 	tsteq	r0, r8, lsr #32
    7e7c:	28d05200 	ldmcs	r0, {r9, ip, lr}^
    7e80:	28ee1000 	stmiacs	lr!, {ip}^
    7e84:	00011000 	andeq	r1, r1, r0
    7e88:	00000052 	andeq	r0, r0, r2, asr r0
    7e8c:	00000000 	andeq	r0, r0, r0
    7e90:	06000000 	streq	r0, [r0], -r0
    7e94:	12100029 	andsne	r0, r0, #41	; 0x29
    7e98:	01100029 	tsteq	r0, r9, lsr #32
    7e9c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7ea8:	00020200 	andeq	r0, r2, r0, lsl #4
    7eac:	29480000 	stmdbcs	r8, {}^	; <UNPREDICTABLE>
    7eb0:	294e1000 	stmdbcs	lr, {ip}^
    7eb4:	00011000 	andeq	r1, r1, r0
    7eb8:	00295c54 	eoreq	r5, r9, r4, asr ip
    7ebc:	00295c10 	eoreq	r5, r9, r0, lsl ip
    7ec0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7ec4:	1000295c 	andne	r2, r0, ip, asr r9
    7ec8:	1000295e 	andne	r2, r0, lr, asr r9
    7ecc:	7f740003 	svcvc	0x00740003
    7ed0:	00295e9f 	mlaeq	r9, pc, lr, r5	; <UNPREDICTABLE>
    7ed4:	00297810 	eoreq	r7, r9, r0, lsl r8
    7ed8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    7ee8:	10002292 	mulne	r0, r2, r2
    7eec:	1000229a 	mulne	r0, sl, r2
    7ef0:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7ef4:	9c100022 	ldcls	0, cr0, [r0], {34}	; 0x22
    7ef8:	02100022 	andseq	r0, r0, #34	; 0x22
    7efc:	009f3000 	addseq	r3, pc, r0
    7f00:	00000000 	andeq	r0, r0, r0
    7f04:	03000000 	movweq	r0, #0
    7f08:	00000000 	andeq	r0, r0, r0
    7f0c:	00227400 	eoreq	r7, r2, r0, lsl #8
    7f10:	00227810 	eoreq	r7, r2, r0, lsl r8
    7f14:	30000210 	andcc	r0, r0, r0, lsl r2
    7f18:	00227c9f 	mlaeq	r2, pc, ip, r7	; <UNPREDICTABLE>
    7f1c:	00229010 	eoreq	r9, r2, r0, lsl r0
    7f20:	53000110 	movwpl	r0, #272	; 0x110
    7f24:	1000229a 	mulne	r0, sl, r2
    7f28:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
    7f2c:	00530001 	subseq	r0, r3, r1
	...
    7f3c:	02000000 	andeq	r0, r0, #0
    7f40:	00007d00 	andeq	r7, r0, r0, lsl #26
    7f44:	00000000 	andeq	r0, r0, r0
    7f48:	02000000 	andeq	r0, r0, #0
    7f4c:	00087d00 	andeq	r7, r8, r0, lsl #26
    7f50:	00000000 	andeq	r0, r0, r0
    7f54:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7f60:	02000000 	andeq	r0, r0, #0
    7f64:	009f3000 	addseq	r3, pc, r0
    7f68:	00000000 	andeq	r0, r0, r0
    7f6c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f70:	00005400 	andeq	r5, r0, r0, lsl #8
    7f74:	00000000 	andeq	r0, r0, r0
    7f78:	2da80000 	stccs	0, cr0, [r8]
    7f7c:	2daa1000 	stccs	0, cr1, [sl]
    7f80:	00021000 	andeq	r1, r2, r0
    7f84:	2daa007d 	stccs	0, cr0, [sl, #500]!	; 0x1f4
    7f88:	2df01000 	ldclcs	0, cr1, [r0]
    7f8c:	00021000 	andeq	r1, r2, r0
    7f90:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7fa0:	10002dae 	andne	r2, r0, lr, lsr #27
    7fa4:	10002db6 			; <UNDEFINED> instruction: 0x10002db6
    7fa8:	bc500001 	mrrclt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7fac:	bf10002d 	svclt	0x0010002d
    7fb0:	0110002d 	tsteq	r0, sp, lsr #32
    7fb4:	2dc05000 	stclcs	0, cr5, [r0]
    7fb8:	2dc51000 	stclcs	0, cr1, [r5]
    7fbc:	00011000 	andeq	r1, r1, r0
    7fc0:	00000050 	andeq	r0, r0, r0, asr r0
    7fc4:	00000000 	andeq	r0, r0, r0
    7fc8:	002d3c00 	eoreq	r3, sp, r0, lsl #24
    7fcc:	002d3e10 	eoreq	r3, sp, r0, lsl lr
    7fd0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fd4:	002d3e00 	eoreq	r3, sp, r0, lsl #28
    7fd8:	002d4010 	eoreq	r4, sp, r0, lsl r0
    7fdc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fe0:	002d400c 	eoreq	r4, sp, ip
    7fe4:	002d6410 	eoreq	r6, sp, r0, lsl r4
    7fe8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fec:	002d6430 	eoreq	r6, sp, r0, lsr r4
    7ff0:	002d6610 	eoreq	r6, sp, r0, lsl r6
    7ff4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7ff8:	002d660c 	eoreq	r6, sp, ip, lsl #12
    7ffc:	002da810 	eoreq	sl, sp, r0, lsl r8
    8000:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8004:	00000030 	andeq	r0, r0, r0, lsr r0
    8008:	00000000 	andeq	r0, r0, r0
    800c:	00010100 	andeq	r0, r1, r0, lsl #2
    8010:	40000101 	andmi	r0, r0, r1, lsl #2
    8014:	6210002d 	andsvs	r0, r0, #45	; 0x2d
    8018:	0210002d 	andseq	r0, r0, #45	; 0x2d
    801c:	669f3100 	ldrvs	r3, [pc], r0, lsl #2
    8020:	9810002d 	ldmdals	r0, {r0, r2, r3, r5}
    8024:	0210002d 	andseq	r0, r0, #45	; 0x2d
    8028:	989f3100 	ldmls	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    802c:	a810002d 	ldmdage	r0, {r0, r2, r3, r5}
    8030:	0210002d 	andseq	r0, r0, #45	; 0x2d
    8034:	009f3000 	addseq	r3, pc, r0
	...
    8040:	002d5c00 	eoreq	r5, sp, r0, lsl #24
    8044:	002da810 	eoreq	sl, sp, r0, lsl r8
    8048:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    8054:	2d400004 	stclcs	0, cr0, [r0, #-16]
    8058:	2d5c1000 	ldclcs	0, cr1, [ip, #-0]
    805c:	00021000 	andeq	r1, r2, r0
    8060:	00009f30 	andeq	r9, r0, r0, lsr pc
    8064:	00000000 	andeq	r0, r0, r0
    8068:	00060000 	andeq	r0, r6, r0
    806c:	2d400000 	stclcs	0, cr0, [r0, #-0]
    8070:	2d421000 	stclcs	0, cr1, [r2, #-0]
    8074:	00021000 	andeq	r1, r2, r0
    8078:	2d429f30 	stclcs	15, cr9, [r2, #-192]	; 0xffffff40
    807c:	2d5c1000 	ldclcs	0, cr1, [ip, #-0]
    8080:	00011000 	andeq	r1, r1, r0
    8084:	00000053 	andeq	r0, r0, r3, asr r0
	...
    8094:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    80a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    80a4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    80b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    80c4:	00540001 	subseq	r0, r4, r1
    80c8:	00000000 	andeq	r0, r0, r0
    80cc:	01000000 	mrseq	r0, (UNDEF: 0)
    80d0:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    80dc:	02000000 	andeq	r0, r0, #0
    80e0:	009f3000 	addseq	r3, pc, r0
    80e4:	00000000 	andeq	r0, r0, r0
    80e8:	02000000 	andeq	r0, r0, #0
    80ec:	009f3100 	addseq	r3, pc, r0, lsl #2
    80f0:	00000000 	andeq	r0, r0, r0
    80f4:	01000000 	mrseq	r0, (UNDEF: 0)
    80f8:	00005600 	andeq	r5, r0, r0, lsl #12
    80fc:	00000000 	andeq	r0, r0, r0
    8100:	00020000 	andeq	r0, r2, r0
    8104:	00009f30 	andeq	r9, r0, r0, lsr pc
    8108:	00000000 	andeq	r0, r0, r0
    810c:	00020000 	andeq	r0, r2, r0
	...
    8118:	00010000 	andeq	r0, r1, r0
    811c:	00000050 	andeq	r0, r0, r0, asr r0
    8120:	00000000 	andeq	r0, r0, r0
    8124:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    813c:	00500001 	subseq	r0, r0, r1
    8140:	00000000 	andeq	r0, r0, r0
    8144:	01000000 	mrseq	r0, (UNDEF: 0)
    8148:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    815c:	00530001 	subseq	r0, r3, r1
	...
    816c:	02000000 	andeq	r0, r0, #0
    8170:	00007d00 	andeq	r7, r0, r0, lsl #26
    8174:	00000000 	andeq	r0, r0, r0
    8178:	02000000 	andeq	r0, r0, #0
    817c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8188:	02020000 	andeq	r0, r2, #0
	...
    8194:	01000000 	mrseq	r0, (UNDEF: 0)
    8198:	00005000 	andeq	r5, r0, r0
    819c:	00000000 	andeq	r0, r0, r0
    81a0:	00010000 	andeq	r0, r1, r0
    81a4:	00000054 	andeq	r0, r0, r4, asr r0
    81a8:	00000000 	andeq	r0, r0, r0
    81ac:	f3000400 	vshl.u8	d0, d0, d0
    81b0:	009f5001 	addseq	r5, pc, r1
    81b4:	00000000 	andeq	r0, r0, r0
    81b8:	01000000 	mrseq	r0, (UNDEF: 0)
    81bc:	00005400 	andeq	r5, r0, r0, lsl #8
    81c0:	00000000 	andeq	r0, r0, r0
    81c4:	00010000 	andeq	r0, r1, r0
    81c8:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    81d4:	00010000 	andeq	r0, r1, r0
    81d8:	00000050 	andeq	r0, r0, r0, asr r0
    81dc:	00000000 	andeq	r0, r0, r0
    81e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    81ec:	01f30004 	mvnseq	r0, r4
    81f0:	00009f50 	andeq	r9, r0, r0, asr pc
    81f4:	00000000 	andeq	r0, r0, r0
    81f8:	00010000 	andeq	r0, r1, r0
    81fc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    820c:	01000000 	mrseq	r0, (UNDEF: 0)
    8210:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8234:	00010000 	andeq	r0, r1, r0
    8238:	00000050 	andeq	r0, r0, r0, asr r0
    823c:	00000000 	andeq	r0, r0, r0
    8240:	f3000400 	vshl.u8	d0, d0, d0
    8244:	009f5001 	addseq	r5, pc, r1
    8248:	00000000 	andeq	r0, r0, r0
    824c:	01000000 	mrseq	r0, (UNDEF: 0)
    8250:	00005000 	andeq	r5, r0, r0
    8254:	00000000 	andeq	r0, r0, r0
    8258:	00040000 	andeq	r0, r4, r0
    825c:	9f5001f3 	svcls	0x005001f3
	...
    8268:	00500001 	subseq	r0, r0, r1
    826c:	00000000 	andeq	r0, r0, r0
    8270:	04000000 	streq	r0, [r0], #-0
    8274:	5001f300 	andpl	pc, r1, r0, lsl #6
    8278:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    827c:	00000000 	andeq	r0, r0, r0
    8280:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    828c:	01f30004 	mvnseq	r0, r4
    8290:	00009f50 	andeq	r9, r0, r0, asr pc
    8294:	00000000 	andeq	r0, r0, r0
    8298:	00010000 	andeq	r0, r1, r0
    829c:	00000050 	andeq	r0, r0, r0, asr r0
    82a0:	00000000 	andeq	r0, r0, r0
    82a4:	f3000400 	vshl.u8	d0, d0, d0
    82a8:	009f5001 	addseq	r5, pc, r1
    82ac:	00000000 	andeq	r0, r0, r0
    82b0:	02000000 	andeq	r0, r0, #0
	...
    82c0:	30000200 	andcc	r0, r0, r0, lsl #4
    82c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82c8:	00000000 	andeq	r0, r0, r0
    82cc:	30000200 	andcc	r0, r0, r0, lsl #4
    82d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82d4:	00000000 	andeq	r0, r0, r0
    82d8:	30000200 	andcc	r0, r0, r0, lsl #4
    82dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82e0:	00000000 	andeq	r0, r0, r0
    82e4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    8300:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    830c:	01f30004 	mvnseq	r0, r4
    8310:	00009f50 	andeq	r9, r0, r0, asr pc
    8314:	00000000 	andeq	r0, r0, r0
    8318:	00010000 	andeq	r0, r1, r0
    831c:	00000050 	andeq	r0, r0, r0, asr r0
    8320:	00000000 	andeq	r0, r0, r0
    8324:	f3000400 	vshl.u8	d0, d0, d0
    8328:	009f5001 	addseq	r5, pc, r1
    832c:	00000000 	andeq	r0, r0, r0
    8330:	01000000 	mrseq	r0, (UNDEF: 0)
    8334:	00005000 	andeq	r5, r0, r0
    8338:	00000000 	andeq	r0, r0, r0
    833c:	00040000 	andeq	r0, r4, r0
    8340:	9f5001f3 	svcls	0x005001f3
	...
    834c:	00500001 	subseq	r0, r0, r1
    8350:	00000000 	andeq	r0, r0, r0
    8354:	04000000 	streq	r0, [r0], #-0
    8358:	5001f300 	andpl	pc, r1, r0, lsl #6
    835c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8360:	00000000 	andeq	r0, r0, r0
    8364:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8370:	01f30004 	mvnseq	r0, r4
    8374:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8388:	00010000 	andeq	r0, r1, r0
    838c:	00000053 	andeq	r0, r0, r3, asr r0
    8390:	00000000 	andeq	r0, r0, r0
    8394:	53000100 	movwpl	r0, #256	; 0x100
	...
    83a8:	007d0002 	rsbseq	r0, sp, r2
	...
    83b4:	107d0002 	rsbsne	r0, sp, r2
	...
    83cc:	00010000 	andeq	r0, r1, r0
    83d0:	00000050 	andeq	r0, r0, r0, asr r0
    83d4:	00000000 	andeq	r0, r0, r0
    83d8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    83e4:	00540001 	subseq	r0, r4, r1
	...
    83f8:	01000000 	mrseq	r0, (UNDEF: 0)
    83fc:	00005400 	andeq	r5, r0, r0, lsl #8
    8400:	00000000 	andeq	r0, r0, r0
    8404:	00010000 	andeq	r0, r1, r0
    8408:	00000054 	andeq	r0, r0, r4, asr r0
    840c:	00000000 	andeq	r0, r0, r0
    8410:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    841c:	02000000 	andeq	r0, r0, #0
    8420:	009f3000 	addseq	r3, pc, r0
    8424:	00000000 	andeq	r0, r0, r0
    8428:	01000000 	mrseq	r0, (UNDEF: 0)
    842c:	00005300 	andeq	r5, r0, r0, lsl #6
    8430:	00000000 	andeq	r0, r0, r0
    8434:	00010000 	andeq	r0, r1, r0
    8438:	00000053 	andeq	r0, r0, r3, asr r0
	...
    844c:	01000000 	mrseq	r0, (UNDEF: 0)
    8450:	00005300 	andeq	r5, r0, r0, lsl #6
    8454:	00000000 	andeq	r0, r0, r0
    8458:	00050000 	andeq	r0, r5, r0
    845c:	008b1003 	addeq	r1, fp, r3
    8460:	00000038 	andeq	r0, r0, r8, lsr r0
    8464:	00000000 	andeq	r0, r0, r0
    8468:	53000100 	movwpl	r0, #256	; 0x100
	...
    847c:	007d0002 	rsbseq	r0, sp, r2
	...
    8488:	107d0002 	rsbsne	r0, sp, r2
	...
    84a0:	00010000 	andeq	r0, r1, r0
    84a4:	00000050 	andeq	r0, r0, r0, asr r0
    84a8:	00000000 	andeq	r0, r0, r0
    84ac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    84b8:	00540001 	subseq	r0, r4, r1
	...
    84d4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    84e0:	00550001 	subseq	r0, r5, r1
    84e4:	00000000 	andeq	r0, r0, r0
    84e8:	02000000 	andeq	r0, r0, #0
    84ec:	00387400 	eorseq	r7, r8, r0, lsl #8
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	01000000 	mrseq	r0, (UNDEF: 0)
    84f8:	00005500 	andeq	r5, r0, r0, lsl #10
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	00020000 	andeq	r0, r2, r0
    8504:	00003874 	andeq	r3, r0, r4, ror r8
	...
    8518:	00010000 	andeq	r0, r1, r0
    851c:	00000054 	andeq	r0, r0, r4, asr r0
    8520:	00000000 	andeq	r0, r0, r0
    8524:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    853c:	00010000 	andeq	r0, r1, r0
    8540:	00000052 	andeq	r0, r0, r2, asr r0
    8544:	00000000 	andeq	r0, r0, r0
    8548:	52000100 	andpl	r0, r0, #0, 2
	...
    8554:	00520001 	subseq	r0, r2, r1
	...
    8568:	53000100 	movwpl	r0, #256	; 0x100
	...
    8574:	00000003 	andeq	r0, r0, r3
	...
    8584:	9f300002 	svcls	0x00300002
	...
    8590:	00560001 	subseq	r0, r6, r1
    8594:	00000000 	andeq	r0, r0, r0
    8598:	02000000 	andeq	r0, r0, #0
    859c:	009f3000 	addseq	r3, pc, r0
    85a0:	00000000 	andeq	r0, r0, r0
    85a4:	01000000 	mrseq	r0, (UNDEF: 0)
    85a8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    85bc:	00530001 	subseq	r0, r3, r1
	...
    85cc:	02000000 	andeq	r0, r0, #0
    85d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    85d4:	00000000 	andeq	r0, r0, r0
    85d8:	02000000 	andeq	r0, r0, #0
    85dc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    85f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8600:	00540001 	subseq	r0, r4, r1
    8604:	00000000 	andeq	r0, r0, r0
    8608:	01000000 	mrseq	r0, (UNDEF: 0)
    860c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8620:	00540001 	subseq	r0, r4, r1
	...
    8634:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    864c:	00500001 	subseq	r0, r0, r1
    8650:	00000000 	andeq	r0, r0, r0
    8654:	01000000 	mrseq	r0, (UNDEF: 0)
    8658:	00005000 	andeq	r5, r0, r0
	...
    8668:	00020000 	andeq	r0, r2, r0
    866c:	0000007d 	andeq	r0, r0, sp, ror r0
    8670:	00000000 	andeq	r0, r0, r0
    8674:	00020000 	andeq	r0, r2, r0
    8678:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8690:	00500001 	subseq	r0, r0, r1
    8694:	00000000 	andeq	r0, r0, r0
    8698:	01000000 	mrseq	r0, (UNDEF: 0)
    869c:	00005400 	andeq	r5, r0, r0, lsl #8
    86a0:	00000000 	andeq	r0, r0, r0
    86a4:	00010000 	andeq	r0, r1, r0
    86a8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    86b8:	01000000 	mrseq	r0, (UNDEF: 0)
    86bc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    86d0:	00540001 	subseq	r0, r4, r1
	...
    86e0:	02000000 	andeq	r0, r0, #0
    86e4:	00007d00 	andeq	r7, r0, r0, lsl #26
    86e8:	00000000 	andeq	r0, r0, r0
    86ec:	02000000 	andeq	r0, r0, #0
    86f0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8708:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8714:	00540001 	subseq	r0, r4, r1
    8718:	00000000 	andeq	r0, r0, r0
    871c:	01000000 	mrseq	r0, (UNDEF: 0)
    8720:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8734:	00540001 	subseq	r0, r4, r1
	...
    8748:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8760:	00500001 	subseq	r0, r0, r1
    8764:	00000000 	andeq	r0, r0, r0
    8768:	01000000 	mrseq	r0, (UNDEF: 0)
    876c:	00005000 	andeq	r5, r0, r0
	...
    877c:	00020000 	andeq	r0, r2, r0
    8780:	0000007d 	andeq	r0, r0, sp, ror r0
    8784:	00000000 	andeq	r0, r0, r0
    8788:	00020000 	andeq	r0, r2, r0
    878c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    87a4:	00500001 	subseq	r0, r0, r1
    87a8:	00000000 	andeq	r0, r0, r0
    87ac:	01000000 	mrseq	r0, (UNDEF: 0)
    87b0:	00005400 	andeq	r5, r0, r0, lsl #8
    87b4:	00000000 	andeq	r0, r0, r0
    87b8:	00010000 	andeq	r0, r1, r0
    87bc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    87cc:	01000000 	mrseq	r0, (UNDEF: 0)
    87d0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    87e4:	00540001 	subseq	r0, r4, r1
	...
    87f4:	02000000 	andeq	r0, r0, #0
    87f8:	00007d00 	andeq	r7, r0, r0, lsl #26
    87fc:	00000000 	andeq	r0, r0, r0
    8800:	02000000 	andeq	r0, r0, #0
    8804:	00187d00 	andseq	r7, r8, r0, lsl #26
    8808:	00000000 	andeq	r0, r0, r0
    880c:	02000000 	andeq	r0, r0, #0
    8810:	00007d00 	andeq	r7, r0, r0, lsl #26
    8814:	00000000 	andeq	r0, r0, r0
    8818:	02000000 	andeq	r0, r0, #0
    881c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    8838:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8844:	00540001 	subseq	r0, r4, r1
    8848:	00000000 	andeq	r0, r0, r0
    884c:	01000000 	mrseq	r0, (UNDEF: 0)
    8850:	00005000 	andeq	r5, r0, r0
    8854:	00000000 	andeq	r0, r0, r0
    8858:	00040000 	andeq	r0, r4, r0
    885c:	9f5001f3 	svcls	0x005001f3
	...
    8868:	00540001 	subseq	r0, r4, r1
	...
    887c:	01000000 	mrseq	r0, (UNDEF: 0)
    8880:	00005000 	andeq	r5, r0, r0
    8884:	00000000 	andeq	r0, r0, r0
    8888:	00010000 	andeq	r0, r1, r0
    888c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    88a0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    88ac:	00550001 	subseq	r0, r5, r1
	...
    88c0:	01000000 	mrseq	r0, (UNDEF: 0)
    88c4:	00005600 	andeq	r5, r0, r0, lsl #12
    88c8:	00000000 	andeq	r0, r0, r0
    88cc:	00010000 	andeq	r0, r1, r0
    88d0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    88e4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    88f0:	00570001 	subseq	r0, r7, r1
	...
    8904:	01000000 	mrseq	r0, (UNDEF: 0)
    8908:	00005800 	andeq	r5, r0, r0, lsl #16
    890c:	00000000 	andeq	r0, r0, r0
    8910:	00010000 	andeq	r0, r1, r0
    8914:	00000058 	andeq	r0, r0, r8, asr r0
    8918:	00000000 	andeq	r0, r0, r0
    891c:	00000700 	andeq	r0, r0, r0, lsl #14
	...
    892c:	01000000 	mrseq	r0, (UNDEF: 0)
    8930:	00005000 	andeq	r5, r0, r0
    8934:	00000000 	andeq	r0, r0, r0
    8938:	00010000 	andeq	r0, r1, r0
    893c:	00000054 	andeq	r0, r0, r4, asr r0
    8940:	00000000 	andeq	r0, r0, r0
    8944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8950:	01f30004 	mvnseq	r0, r4
    8954:	00009f50 	andeq	r9, r0, r0, asr pc
    8958:	00000000 	andeq	r0, r0, r0
    895c:	00010000 	andeq	r0, r1, r0
    8960:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8974:	01000000 	mrseq	r0, (UNDEF: 0)
    8978:	00005300 	andeq	r5, r0, r0, lsl #6
    897c:	00000000 	andeq	r0, r0, r0
    8980:	00010000 	andeq	r0, r1, r0
    8984:	00000053 	andeq	r0, r0, r3, asr r0
    8988:	00000000 	andeq	r0, r0, r0
    898c:	53000100 	movwpl	r0, #256	; 0x100
	...
    8998:	100029a4 	andne	r2, r0, r4, lsr #19
    899c:	100029a6 	andne	r2, r0, r6, lsr #19
    89a0:	007d0002 	rsbseq	r0, sp, r2
    89a4:	100029a6 	andne	r2, r0, r6, lsr #19
    89a8:	100029c2 	andne	r2, r0, r2, asr #19
    89ac:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    89bc:	29a40000 	stmibcs	r4!, {}	; <UNPREDICTABLE>
    89c0:	29ad1000 	stmibcs	sp!, {ip}
    89c4:	00011000 	andeq	r1, r1, r0
    89c8:	0029ad50 	eoreq	sl, r9, r0, asr sp
    89cc:	0029bc10 	eoreq	fp, r9, r0, lsl ip
    89d0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    89d4:	100029bc 			; <UNDEFINED> instruction: 0x100029bc
    89d8:	100029c2 	andne	r2, r0, r2, asr #19
    89dc:	01f30004 	mvnseq	r0, r4
    89e0:	00009f50 	andeq	r9, r0, r0, asr pc
    89e4:	00000000 	andeq	r0, r0, r0
    89e8:	00010000 	andeq	r0, r1, r0
    89ec:	29a60000 	stmibcs	r6!, {}	; <UNPREDICTABLE>
    89f0:	29ba1000 	ldmibcs	sl!, {ip}
    89f4:	00021000 	andeq	r1, r2, r0
    89f8:	29ba9f30 	ldmibcs	sl!, {r4, r5, r8, r9, sl, fp, ip, pc}
    89fc:	29bc1000 	ldmibcs	ip!, {ip}
    8a00:	00011000 	andeq	r1, r1, r0
    8a04:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8a14:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8a20:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8a24:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8a38:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8a44:	00550001 	subseq	r0, r5, r1
	...
    8a5c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    8a68:	00540001 	subseq	r0, r4, r1
    8a6c:	00000000 	andeq	r0, r0, r0
    8a70:	04000000 	streq	r0, [r0], #-0
    8a74:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    8a78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8a94:	01000000 	mrseq	r0, (UNDEF: 0)
    8a98:	00005400 	andeq	r5, r0, r0, lsl #8
    8a9c:	00000000 	andeq	r0, r0, r0
    8aa0:	00020000 	andeq	r0, r2, r0
    8aa4:	00000075 	andeq	r0, r0, r5, ror r0
    8aa8:	00000000 	andeq	r0, r0, r0
    8aac:	00010000 	andeq	r0, r1, r0
    8ab0:	00000054 	andeq	r0, r0, r4, asr r0
    8ab4:	00000000 	andeq	r0, r0, r0
    8ab8:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
    8ac4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8ad0:	00540001 	subseq	r0, r4, r1
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	02000000 	andeq	r0, r0, #0
    8adc:	00007500 	andeq	r7, r0, r0, lsl #10
	...
    8af0:	01000000 	mrseq	r0, (UNDEF: 0)
    8af4:	00005000 	andeq	r5, r0, r0
    8af8:	00000000 	andeq	r0, r0, r0
    8afc:	00010000 	andeq	r0, r1, r0
    8b00:	00000050 	andeq	r0, r0, r0, asr r0
    8b04:	00000000 	andeq	r0, r0, r0
    8b08:	01010200 	mrseq	r0, R9_usr
    8b0c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    8b18:	02000000 	andeq	r0, r0, #0
    8b1c:	009f3000 	addseq	r3, pc, r0
    8b20:	00000000 	andeq	r0, r0, r0
    8b24:	02000000 	andeq	r0, r0, #0
    8b28:	009f3100 	addseq	r3, pc, r0, lsl #2
    8b2c:	00000000 	andeq	r0, r0, r0
    8b30:	02000000 	andeq	r0, r0, #0
    8b34:	009f3000 	addseq	r3, pc, r0
    8b38:	00000000 	andeq	r0, r0, r0
    8b3c:	02000000 	andeq	r0, r0, #0
    8b40:	009f3100 	addseq	r3, pc, r0, lsl #2
    8b44:	00000000 	andeq	r0, r0, r0
    8b48:	02000000 	andeq	r0, r0, #0
    8b4c:	009f3000 	addseq	r3, pc, r0
	...
    8b60:	01000000 	mrseq	r0, (UNDEF: 0)
    8b64:	00005000 	andeq	r5, r0, r0
    8b68:	00000000 	andeq	r0, r0, r0
    8b6c:	00010000 	andeq	r0, r1, r0
    8b70:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8b80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8b8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8b90:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    8ba8:	00005000 	andeq	r5, r0, r0
    8bac:	00000000 	andeq	r0, r0, r0
    8bb0:	00010000 	andeq	r0, r1, r0
    8bb4:	00000054 	andeq	r0, r0, r4, asr r0
    8bb8:	00000000 	andeq	r0, r0, r0
    8bbc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8bd4:	00540001 	subseq	r0, r4, r1
    8bd8:	00000000 	andeq	r0, r0, r0
    8bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    8be0:	00005400 	andeq	r5, r0, r0, lsl #8
    8be4:	00000000 	andeq	r0, r0, r0
    8be8:	00020000 	andeq	r0, r2, r0
    8bec:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    8bf8:	9f300002 	svcls	0x00300002
	...
    8c04:	9f300002 	svcls	0x00300002
	...
    8c10:	9f310002 	svcls	0x00310002
	...
    8c28:	00520001 	subseq	r0, r2, r1
    8c2c:	00000000 	andeq	r0, r0, r0
    8c30:	01000000 	mrseq	r0, (UNDEF: 0)
    8c34:	00005200 	andeq	r5, r0, r0, lsl #4
    8c38:	00000000 	andeq	r0, r0, r0
    8c3c:	242c0000 	strtcs	r0, [ip], #-0
    8c40:	242e1000 	strtcs	r1, [lr], #-0
    8c44:	00021000 	andeq	r1, r2, r0
    8c48:	242e007d 	strtcs	r0, [lr], #-125	; 0xffffff83
    8c4c:	24e81000 	strbtcs	r1, [r8], #0
    8c50:	00021000 	andeq	r1, r2, r0
    8c54:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8c60:	242c0000 	strtcs	r0, [ip], #-0
    8c64:	24331000 	ldrtcs	r1, [r3], #-0
    8c68:	00011000 	andeq	r1, r1, r0
    8c6c:	00243350 	eoreq	r3, r4, r0, asr r3
    8c70:	0024e810 	eoreq	lr, r4, r0, lsl r8
    8c74:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    8c80:	24860000 	strcs	r0, [r6], #0
    8c84:	24941000 	ldrcs	r1, [r4], #0
    8c88:	00011000 	andeq	r1, r1, r0
    8c8c:	00000053 	andeq	r0, r0, r3, asr r0
    8c90:	00000000 	andeq	r0, r0, r0
    8c94:	0022dc00 	eoreq	sp, r2, r0, lsl #24
    8c98:	0022e010 	eoreq	lr, r2, r0, lsl r0
    8c9c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8ca0:	0022e000 	eoreq	lr, r2, r0
    8ca4:	00237210 	eoreq	r7, r3, r0, lsl r2
    8ca8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8cac:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    8cb8:	0022dc00 	eoreq	sp, r2, r0, lsl #24
    8cbc:	0022f610 	eoreq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
    8cc0:	50000110 	andpl	r0, r0, r0, lsl r1
    8cc4:	100022f6 	strdne	r2, [r0], -r6
    8cc8:	10002372 	andne	r2, r0, r2, ror r3
    8ccc:	00580001 	subseq	r0, r8, r1
	...
    8cd8:	dc000000 	stcle	0, cr0, [r0], {-0}
    8cdc:	f4100022 			; <UNDEFINED> instruction: 0xf4100022
    8ce0:	01100022 	tsteq	r0, r2, lsr #32
    8ce4:	22f45100 	rscscs	r5, r4, #0, 2
    8ce8:	23721000 	cmncs	r2, #0
    8cec:	00011000 	andeq	r1, r1, r0
    8cf0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8d00:	0022dc00 	eoreq	sp, r2, r0, lsl #24
    8d04:	0022f210 	eoreq	pc, r2, r0, lsl r2	; <UNPREDICTABLE>
    8d08:	52000110 	andpl	r0, r0, #16, 2
    8d0c:	100022f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    8d10:	10002306 	andne	r2, r0, r6, lsl #6
    8d14:	06570001 	ldrbeq	r0, [r7], -r1
    8d18:	10100023 	andsne	r0, r0, r3, lsr #32
    8d1c:	07100023 	ldreq	r0, [r0, -r3, lsr #32]
    8d20:	80817200 	addhi	r7, r1, r0, lsl #4
    8d24:	9f7c8080 	svcls	0x007c8080
    8d28:	10002310 	andne	r2, r0, r0, lsl r3
    8d2c:	10002372 	andne	r2, r0, r2, ror r3
    8d30:	01f30004 	mvnseq	r0, r4
    8d34:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    8d40:	22dc0000 	sbcscs	r0, ip, #0
    8d44:	22f91000 	rscscs	r1, r9, #0
    8d48:	00011000 	andeq	r1, r1, r0
    8d4c:	0022f953 	eoreq	pc, r2, r3, asr r9	; <UNPREDICTABLE>
    8d50:	00237210 	eoreq	r7, r3, r0, lsl r2
    8d54:	59000110 	stmdbpl	r0, {r4, r8}
	...
    8d64:	100022dc 	ldrdne	r2, [r0], -ip
    8d68:	1000233a 	andne	r2, r0, sl, lsr r3
    8d6c:	00910002 	addseq	r0, r1, r2
    8d70:	1000233a 	andne	r2, r0, sl, lsr r3
    8d74:	10002352 	andne	r2, r0, r2, asr r3
    8d78:	00560001 	subseq	r0, r6, r1
	...
    8d84:	00230600 	eoreq	r0, r3, r0, lsl #12
    8d88:	00237210 	eoreq	r7, r3, r0, lsl r2
    8d8c:	57000110 	smladpl	r0, r0, r1, r0
	...
    8d98:	23100000 	tstcs	r0, #0
    8d9c:	23341000 	teqcs	r4, #0
    8da0:	00011000 	andeq	r1, r1, r0
    8da4:	0000005c 	andeq	r0, r0, ip, asr r0
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	00268c00 	eoreq	r8, r6, r0, lsl #24
    8db0:	00268e10 	eoreq	r8, r6, r0, lsl lr
    8db4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8db8:	00268e00 	eoreq	r8, r6, r0, lsl #28
    8dbc:	00269010 	eoreq	r9, r6, r0, lsl r0
    8dc0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8dc4:	00269008 	eoreq	r9, r6, r8
    8dc8:	0026a610 	eoreq	sl, r6, r0, lsl r6
    8dcc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8dd0:	0026a610 	eoreq	sl, r6, r0, lsl r6
    8dd4:	0026a810 	eoreq	sl, r6, r0, lsl r8
    8dd8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8ddc:	0026a808 	eoreq	sl, r6, r8, lsl #16
    8de0:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    8de4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8de8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8df4:	00268c00 	eoreq	r8, r6, r0, lsl #24
    8df8:	00269b10 	eoreq	r9, r6, r0, lsl fp
    8dfc:	50000110 	andpl	r0, r0, r0, lsl r1
    8e00:	1000269b 	mulne	r0, fp, r6
    8e04:	100026ae 	andne	r2, r0, lr, lsr #13
    8e08:	01f30004 	mvnseq	r0, r4
    8e0c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8e18:	268c0000 	strcs	r0, [ip], r0
    8e1c:	269b1000 	ldrcs	r1, [fp], r0
    8e20:	00011000 	andeq	r1, r1, r0
    8e24:	00269b51 	eoreq	r9, r6, r1, asr fp
    8e28:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    8e2c:	f3000410 	vqshl.u8	d0, d0, d0
    8e30:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    8e3c:	8c000000 	stchi	0, cr0, [r0], {-0}
    8e40:	9b100026 	blls	408ee0 <__RAM_SIZE+0x308ee0>
    8e44:	01100026 	tsteq	r0, r6, lsr #32
    8e48:	269b5200 	ldrcs	r5, [fp], r0, lsl #4
    8e4c:	26ae1000 	strtcs	r1, [lr], r0
    8e50:	00041000 	andeq	r1, r4, r0
    8e54:	9f5201f3 	svcls	0x005201f3
	...
    8e64:	1000268c 	andne	r2, r0, ip, lsl #13
    8e68:	1000269b 	mulne	r0, fp, r6
    8e6c:	9b530001 	blls	14c8e78 <__RAM_SIZE+0x13c8e78>
    8e70:	ae100026 	cdpge	0, 1, cr0, cr0, cr6, {1}
    8e74:	04100026 	ldreq	r0, [r0], #-38	; 0xffffffda
    8e78:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    8e7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8e88:	00268c00 	eoreq	r8, r6, r0, lsl #24
    8e8c:	0026a810 	eoreq	sl, r6, r0, lsl r8
    8e90:	91000210 	tstls	r0, r0, lsl r2
    8e94:	0026a800 	eoreq	sl, r6, r0, lsl #16
    8e98:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    8e9c:	91000210 	tstls	r0, r0, lsl r2
	...
    8eac:	00268c00 	eoreq	r8, r6, r0, lsl #24
    8eb0:	0026a810 	eoreq	sl, r6, r0, lsl r8
    8eb4:	91000210 	tstls	r0, r0, lsl r2
    8eb8:	0026a804 	eoreq	sl, r6, r4, lsl #16
    8ebc:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    8ec0:	91000210 	tstls	r0, r0, lsl r2
    8ec4:	00000004 	andeq	r0, r0, r4
	...
    8ed0:	00269c00 	eoreq	r9, r6, r0, lsl #24
    8ed4:	0026a110 	eoreq	sl, r6, r0, lsl r1
    8ed8:	50000110 	andpl	r0, r0, r0, lsl r1
    8edc:	100026a8 	andne	r2, r0, r8, lsr #13
    8ee0:	100026ac 	andne	r2, r0, ip, lsr #13
    8ee4:	00500001 	subseq	r0, r0, r1
    8ee8:	00000000 	andeq	r0, r0, r0
    8eec:	01000000 	mrseq	r0, (UNDEF: 0)
    8ef0:	a2000000 	andge	r0, r0, #0
    8ef4:	a4100026 	ldrge	r0, [r0], #-38	; 0xffffffda
    8ef8:	02100026 	andseq	r0, r0, #38	; 0x26
    8efc:	ac9f3100 	ldfges	f3, [pc], {0}
    8f00:	ae100026 	cdpge	0, 1, cr0, cr0, cr6, {1}
    8f04:	03100026 	tsteq	r0, #38	; 0x26
    8f08:	9fff0900 	svcls	0x00ff0900
	...
    8f14:	100024e8 	andne	r2, r0, r8, ror #9
    8f18:	100024ec 	andne	r2, r0, ip, ror #9
    8f1c:	007d0002 	rsbseq	r0, sp, r2
    8f20:	100024ec 	andne	r2, r0, ip, ror #9
    8f24:	100024ee 	andne	r2, r0, lr, ror #9
    8f28:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    8f2c:	100024ee 	andne	r2, r0, lr, ror #9
    8f30:	1000253a 	andne	r2, r0, sl, lsr r5
    8f34:	307d0002 	rsbscc	r0, sp, r2
    8f38:	1000253a 	andne	r2, r0, sl, lsr r5
    8f3c:	1000253e 	andne	r2, r0, lr, lsr r5
    8f40:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    8f44:	1000253e 	andne	r2, r0, lr, lsr r5
    8f48:	1000254a 	andne	r2, r0, sl, asr #10
    8f4c:	307d0002 	rsbscc	r0, sp, r2
	...
    8f5c:	100024e8 	andne	r2, r0, r8, ror #9
    8f60:	100024f8 	strdne	r2, [r0], -r8
    8f64:	f8500001 			; <UNDEFINED> instruction: 0xf8500001
    8f68:	4a100024 	bmi	409000 <__RAM_SIZE+0x309000>
    8f6c:	01100025 	tsteq	r0, r5, lsr #32
    8f70:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8f7c:	24e80000 	strbtcs	r0, [r8], #0
    8f80:	24fb1000 	ldrbtcs	r1, [fp], #0
    8f84:	00011000 	andeq	r1, r1, r0
    8f88:	0024fb51 	eoreq	pc, r4, r1, asr fp	; <UNPREDICTABLE>
    8f8c:	00254a10 	eoreq	r4, r5, r0, lsl sl
    8f90:	57000110 	smladpl	r0, r0, r1, r0
	...
    8fa0:	100024e8 	andne	r2, r0, r8, ror #9
    8fa4:	100024fb 	strdne	r2, [r0], -fp
    8fa8:	fb520001 	blx	1488fb6 <__RAM_SIZE+0x1388fb6>
    8fac:	4a100024 	bmi	409044 <__RAM_SIZE+0x309044>
    8fb0:	01100025 	tsteq	r0, r5, lsr #32
    8fb4:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8fc0:	24e80000 	strbtcs	r0, [r8], #0
    8fc4:	24fb1000 	ldrbtcs	r1, [fp], #0
    8fc8:	00011000 	andeq	r1, r1, r0
    8fcc:	0024fb53 	eoreq	pc, r4, r3, asr fp	; <UNPREDICTABLE>
    8fd0:	00254a10 	eoreq	r4, r5, r0, lsl sl
    8fd4:	58000110 	stmdapl	r0, {r4, r8}
	...
    8fe4:	100024e8 	andne	r2, r0, r8, ror #9
    8fe8:	1000253e 	andne	r2, r0, lr, lsr r5
    8fec:	00910002 	addseq	r0, r1, r2
    8ff0:	1000253e 	andne	r2, r0, lr, lsr r5
    8ff4:	1000254a 	andne	r2, r0, sl, asr #10
    8ff8:	00910002 	addseq	r0, r1, r2
	...
    9008:	100024e8 	andne	r2, r0, r8, ror #9
    900c:	1000253e 	andne	r2, r0, lr, lsr r5
    9010:	04910002 	ldreq	r0, [r1], #2
    9014:	1000253e 	andne	r2, r0, lr, lsr r5
    9018:	1000254a 	andne	r2, r0, sl, asr #10
    901c:	04910002 	ldreq	r0, [r1], #2
	...
    9030:	10002506 	andne	r2, r0, r6, lsl #10
    9034:	10002511 	andne	r2, r0, r1, lsl r5
    9038:	11500001 	cmpne	r0, r1
    903c:	36100025 	ldrcc	r0, [r0], -r5, lsr #32
    9040:	01100025 	tsteq	r0, r5, lsr #32
    9044:	253e5400 	ldrcs	r5, [lr, #-1024]!	; 0xfffffc00
    9048:	25401000 	strbcs	r1, [r0, #-0]
    904c:	00011000 	andeq	r1, r1, r0
    9050:	00254050 	eoreq	r4, r5, r0, asr r0
    9054:	00254610 	eoreq	r4, r5, r0, lsl r6
    9058:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9068:	24fc0000 	ldrbtcs	r0, [ip], #0
    906c:	25021000 	strcs	r1, [r2, #-0]
    9070:	00011000 	andeq	r1, r1, r0
    9074:	00250250 	eoreq	r0, r5, r0, asr r2
    9078:	00254610 	eoreq	r4, r5, r0, lsl r6
    907c:	59000110 	stmdbpl	r0, {r4, r8}
    9080:	10002546 	andne	r2, r0, r6, asr #10
    9084:	1000254a 	andne	r2, r0, sl, asr #10
    9088:	00500001 	subseq	r0, r0, r1
    908c:	00000000 	andeq	r0, r0, r0
    9090:	64000000 	strvs	r0, [r0], #-0
    9094:	66100026 	ldrvs	r0, [r0], -r6, lsr #32
    9098:	02100026 	andseq	r0, r0, #38	; 0x26
    909c:	66007d00 	strvs	r7, [r0], -r0, lsl #26
    90a0:	68100026 	ldmdavs	r0, {r1, r2, r5}
    90a4:	02100026 	andseq	r0, r0, #38	; 0x26
    90a8:	68087d00 	stmdavs	r8, {r8, sl, fp, ip, sp, lr}
    90ac:	8a100026 	bhi	40914c <__RAM_SIZE+0x30914c>
    90b0:	02100026 	andseq	r0, r0, #38	; 0x26
    90b4:	8a207d00 	bhi	8284bc <__RAM_SIZE+0x7284bc>
    90b8:	8c100026 	ldchi	0, cr0, [r0], {38}	; 0x26
    90bc:	02100026 	andseq	r0, r0, #38	; 0x26
    90c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    90cc:	64000000 	strvs	r0, [r0], #-0
    90d0:	7f100026 	svcvc	0x00100026
    90d4:	01100026 	tsteq	r0, r6, lsr #32
    90d8:	267f5000 	ldrbtcs	r5, [pc], -r0
    90dc:	268c1000 	strcs	r1, [ip], r0
    90e0:	00041000 	andeq	r1, r4, r0
    90e4:	9f5001f3 	svcls	0x005001f3
	...
    90f4:	10002664 	andne	r2, r0, r4, ror #12
    90f8:	1000267f 	andne	r2, r0, pc, ror r6
    90fc:	7f510001 	svcvc	0x00510001
    9100:	8c100026 	ldchi	0, cr0, [r0], {38}	; 0x26
    9104:	04100026 	ldreq	r0, [r0], #-38	; 0xffffffda
    9108:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    910c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9118:	00266400 	eoreq	r6, r6, r0, lsl #8
    911c:	00267f10 	eoreq	r7, r6, r0, lsl pc
    9120:	52000110 	andpl	r0, r0, #16, 2
    9124:	1000267f 	andne	r2, r0, pc, ror r6
    9128:	1000268c 	andne	r2, r0, ip, lsl #13
    912c:	01f30004 	mvnseq	r0, r4
    9130:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    913c:	26640000 	strbtcs	r0, [r4], -r0
    9140:	267f1000 	ldrbtcs	r1, [pc], -r0
    9144:	00011000 	andeq	r1, r1, r0
    9148:	00267f53 	eoreq	r7, r6, r3, asr pc
    914c:	00268c10 	eoreq	r8, r6, r0, lsl ip
    9150:	f3000410 	vqshl.u8	d0, d0, d0
    9154:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    9160:	00268000 	eoreq	r8, r6, r0
    9164:	00268510 	eoreq	r8, r6, r0, lsl r5
    9168:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9174:	10002372 	andne	r2, r0, r2, ror r3
    9178:	10002376 	andne	r2, r0, r6, ror r3
    917c:	007d0002 	rsbseq	r0, sp, r2
    9180:	10002376 	andne	r2, r0, r6, ror r3
    9184:	10002378 	andne	r2, r0, r8, ror r3
    9188:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    918c:	10002378 	andne	r2, r0, r8, ror r3
    9190:	100023b8 			; <UNDEFINED> instruction: 0x100023b8
    9194:	307d0002 	rsbscc	r0, sp, r2
    9198:	100023b8 			; <UNDEFINED> instruction: 0x100023b8
    919c:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    91a0:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    91a4:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    91a8:	100023c4 	andne	r2, r0, r4, asr #7
    91ac:	307d0002 	rsbscc	r0, sp, r2
	...
    91c4:	23720000 	cmncs	r2, #0
    91c8:	238e1000 	orrcs	r1, lr, #0
    91cc:	00011000 	andeq	r1, r1, r0
    91d0:	00238e50 	eoreq	r8, r3, r0, asr lr
    91d4:	0023b610 	eoreq	fp, r3, r0, lsl r6
    91d8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    91dc:	100023b6 			; <UNDEFINED> instruction: 0x100023b6
    91e0:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    91e4:	01f30004 	mvnseq	r0, r4
    91e8:	23bc9f50 			; <UNDEFINED> instruction: 0x23bc9f50
    91ec:	23be1000 			; <UNDEFINED> instruction: 0x23be1000
    91f0:	00011000 	andeq	r1, r1, r0
    91f4:	0023be50 	eoreq	fp, r3, r0, asr lr
    91f8:	0023c010 	eoreq	ip, r3, r0, lsl r0
    91fc:	f3000410 	vqshl.u8	d0, d0, d0
    9200:	c09f5001 	addsgt	r5, pc, r1
    9204:	c2100023 	andsgt	r0, r0, #35	; 0x23
    9208:	01100023 	tsteq	r0, r3, lsr #32
    920c:	23c25000 	biccs	r5, r2, #0
    9210:	23c41000 	biccs	r1, r4, #0
    9214:	00011000 	andeq	r1, r1, r0
    9218:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9228:	00237200 	eoreq	r7, r3, r0, lsl #4
    922c:	00238c10 	eoreq	r8, r3, r0, lsl ip
    9230:	51000110 	tstpl	r0, r0, lsl r1
    9234:	1000238c 	andne	r2, r0, ip, lsl #7
    9238:	100023b6 			; <UNDEFINED> instruction: 0x100023b6
    923c:	b6590001 	ldrblt	r0, [r9], -r1
    9240:	bc100023 	ldclt	0, cr0, [r0], {35}	; 0x23
    9244:	04100023 	ldreq	r0, [r0], #-35	; 0xffffffdd
    9248:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    924c:	0023bc9f 	mlaeq	r3, pc, ip, fp	; <UNPREDICTABLE>
    9250:	0023c410 	eoreq	ip, r3, r0, lsl r4
    9254:	51000110 	tstpl	r0, r0, lsl r1
	...
    9268:	10002372 	andne	r2, r0, r2, ror r3
    926c:	1000238a 	andne	r2, r0, sl, lsl #7
    9270:	8a520001 	bhi	148927c <__RAM_SIZE+0x138927c>
    9274:	b6100023 	ldrlt	r0, [r0], -r3, lsr #32
    9278:	01100023 	tsteq	r0, r3, lsr #32
    927c:	23b65800 			; <UNDEFINED> instruction: 0x23b65800
    9280:	23bc1000 			; <UNDEFINED> instruction: 0x23bc1000
    9284:	00041000 	andeq	r1, r4, r0
    9288:	9f5201f3 	svcls	0x005201f3
    928c:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    9290:	100023c4 	andne	r2, r0, r4, asr #7
    9294:	00520001 	subseq	r0, r2, r1
	...
    92a4:	72000000 	andvc	r0, r0, #0
    92a8:	91100023 	tstls	r0, r3, lsr #32
    92ac:	01100023 	tsteq	r0, r3, lsr #32
    92b0:	23915300 	orrscs	r5, r1, #0, 6
    92b4:	23b61000 			; <UNDEFINED> instruction: 0x23b61000
    92b8:	00011000 	andeq	r1, r1, r0
    92bc:	0023b657 	eoreq	fp, r3, r7, asr r6
    92c0:	0023bc10 	eoreq	fp, r3, r0, lsl ip
    92c4:	f3000410 	vqshl.u8	d0, d0, d0
    92c8:	bc9f5301 	ldclt	3, cr5, [pc], {1}
    92cc:	c4100023 	ldrgt	r0, [r0], #-35	; 0xffffffdd
    92d0:	01100023 	tsteq	r0, r3, lsr #32
    92d4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    92e0:	23720000 	cmncs	r2, #0
    92e4:	23bc1000 			; <UNDEFINED> instruction: 0x23bc1000
    92e8:	00021000 	andeq	r1, r2, r0
    92ec:	23bc0091 			; <UNDEFINED> instruction: 0x23bc0091
    92f0:	23c41000 	biccs	r1, r4, #0
    92f4:	00021000 	andeq	r1, r2, r0
    92f8:	00000091 	muleq	r0, r1, r0
	...
    9304:	23720000 	cmncs	r2, #0
    9308:	23bc1000 			; <UNDEFINED> instruction: 0x23bc1000
    930c:	00021000 	andeq	r1, r2, r0
    9310:	23bc0491 			; <UNDEFINED> instruction: 0x23bc0491
    9314:	23c41000 	biccs	r1, r4, #0
    9318:	00021000 	andeq	r1, r2, r0
    931c:	00000491 	muleq	r0, r1, r4
	...
    9328:	23720000 	cmncs	r2, #0
    932c:	23bc1000 			; <UNDEFINED> instruction: 0x23bc1000
    9330:	00021000 	andeq	r1, r2, r0
    9334:	23bc0891 			; <UNDEFINED> instruction: 0x23bc0891
    9338:	23c41000 	biccs	r1, r4, #0
    933c:	00021000 	andeq	r1, r2, r0
    9340:	00000891 	muleq	r0, r1, r8
	...
    934c:	23720000 	cmncs	r2, #0
    9350:	23bc1000 			; <UNDEFINED> instruction: 0x23bc1000
    9354:	00021000 	andeq	r1, r2, r0
    9358:	23bc0c91 			; <UNDEFINED> instruction: 0x23bc0c91
    935c:	23c41000 	biccs	r1, r4, #0
    9360:	00021000 	andeq	r1, r2, r0
    9364:	00000c91 	muleq	r0, r1, ip
    9368:	00000000 	andeq	r0, r0, r0
    936c:	00010000 	andeq	r0, r1, r0
    9370:	23880000 	orrcs	r0, r8, #0
    9374:	23b61000 			; <UNDEFINED> instruction: 0x23b61000
    9378:	00011000 	andeq	r1, r1, r0
    937c:	0023c254 	eoreq	ip, r3, r4, asr r2
    9380:	0023c410 	eoreq	ip, r3, r0, lsl r4
    9384:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9398:	007d0002 	rsbseq	r0, sp, r2
	...
    93a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    93b0:	187d0002 	ldmdane	sp!, {r1}^
	...
    93bc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    93d4:	00010000 	andeq	r0, r1, r0
    93d8:	00000050 	andeq	r0, r0, r0, asr r0
    93dc:	00000000 	andeq	r0, r0, r0
    93e0:	91000200 	mrsls	r0, R8_usr
    93e4:	0000006c 	andeq	r0, r0, ip, rrx
    93e8:	00000000 	andeq	r0, r0, r0
    93ec:	f3000400 	vshl.u8	d0, d0, d0
    93f0:	009f5001 	addseq	r5, pc, r1
	...
    9408:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    9414:	70910002 	addsvc	r0, r1, r2
	...
    9420:	01f30004 	mvnseq	r0, r4
    9424:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    943c:	00520001 	subseq	r0, r2, r1
    9440:	00000000 	andeq	r0, r0, r0
    9444:	01000000 	mrseq	r0, (UNDEF: 0)
    9448:	00005400 	andeq	r5, r0, r0, lsl #8
    944c:	00000000 	andeq	r0, r0, r0
    9450:	00040000 	andeq	r0, r4, r0
    9454:	9f5201f3 	svcls	0x005201f3
	...
    946c:	00010000 	andeq	r0, r1, r0
    9470:	00000053 	andeq	r0, r0, r3, asr r0
    9474:	00000000 	andeq	r0, r0, r0
    9478:	52000100 	andpl	r0, r0, #0, 2
	...
    9484:	01f30004 	mvnseq	r0, r4
    9488:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    949c:	00500001 	subseq	r0, r0, r1
	...
    94ac:	02000000 	andeq	r0, r0, #0
    94b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    94b4:	00000000 	andeq	r0, r0, r0
    94b8:	02000000 	andeq	r0, r0, #0
    94bc:	00087d00 	andeq	r7, r8, r0, lsl #26
    94c0:	00000000 	andeq	r0, r0, r0
    94c4:	02000000 	andeq	r0, r0, #0
    94c8:	00187d00 	andseq	r7, r8, r0, lsl #26
    94cc:	00000000 	andeq	r0, r0, r0
    94d0:	02000000 	andeq	r0, r0, #0
    94d4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    94ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    94f8:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    9504:	01f30004 	mvnseq	r0, r4
    9508:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    9520:	00510001 	subseq	r0, r1, r1
    9524:	00000000 	andeq	r0, r0, r0
    9528:	02000000 	andeq	r0, r0, #0
    952c:	00709100 	rsbseq	r9, r0, r0, lsl #2
    9530:	00000000 	andeq	r0, r0, r0
    9534:	04000000 	streq	r0, [r0], #-0
    9538:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    953c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9550:	01000000 	mrseq	r0, (UNDEF: 0)
    9554:	00005200 	andeq	r5, r0, r0, lsl #4
    9558:	00000000 	andeq	r0, r0, r0
    955c:	00010000 	andeq	r0, r1, r0
    9560:	00000054 	andeq	r0, r0, r4, asr r0
    9564:	00000000 	andeq	r0, r0, r0
    9568:	f3000400 	vshl.u8	d0, d0, d0
    956c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9584:	53000100 	movwpl	r0, #256	; 0x100
	...
    9590:	00520001 	subseq	r0, r2, r1
    9594:	00000000 	andeq	r0, r0, r0
    9598:	04000000 	streq	r0, [r0], #-0
    959c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    95a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    95b0:	01000000 	mrseq	r0, (UNDEF: 0)
    95b4:	00005000 	andeq	r5, r0, r0
	...
    95c4:	00020000 	andeq	r0, r2, r0
    95c8:	0000007d 	andeq	r0, r0, sp, ror r0
    95cc:	00000000 	andeq	r0, r0, r0
    95d0:	00020000 	andeq	r0, r2, r0
    95d4:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    95e8:	00010000 	andeq	r0, r1, r0
    95ec:	00000050 	andeq	r0, r0, r0, asr r0
    95f0:	00000000 	andeq	r0, r0, r0
    95f4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    960c:	00510001 	subseq	r0, r1, r1
    9610:	00000000 	andeq	r0, r0, r0
    9614:	01000000 	mrseq	r0, (UNDEF: 0)
    9618:	00005500 	andeq	r5, r0, r0, lsl #10
    961c:	00000000 	andeq	r0, r0, r0
    9620:	00010000 	andeq	r0, r1, r0
	...
    962c:	00010000 	andeq	r0, r1, r0
    9630:	00000050 	andeq	r0, r0, r0, asr r0
    9634:	00000000 	andeq	r0, r0, r0
    9638:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    964c:	007d0002 	rsbseq	r0, sp, r2
	...
    9658:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9670:	00010000 	andeq	r0, r1, r0
    9674:	00000050 	andeq	r0, r0, r0, asr r0
    9678:	00000000 	andeq	r0, r0, r0
    967c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9688:	01f30004 	mvnseq	r0, r4
    968c:	00009f50 	andeq	r9, r0, r0, asr pc
    9690:	00000000 	andeq	r0, r0, r0
    9694:	00010000 	andeq	r0, r1, r0
	...
    96a4:	00500001 	subseq	r0, r0, r1
    96a8:	00000000 	andeq	r0, r0, r0
    96ac:	01000000 	mrseq	r0, (UNDEF: 0)
    96b0:	00005400 	andeq	r5, r0, r0, lsl #8
    96b4:	00000000 	andeq	r0, r0, r0
    96b8:	00040000 	andeq	r0, r4, r0
    96bc:	9f5001f3 	svcls	0x005001f3
	...
    96d0:	00010000 	andeq	r0, r1, r0
    96d4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    96e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    96f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    96f4:	00000008 	andeq	r0, r0, r8
	...
    970c:	01000000 	mrseq	r0, (UNDEF: 0)
    9710:	00005000 	andeq	r5, r0, r0
    9714:	00000000 	andeq	r0, r0, r0
    9718:	00010000 	andeq	r0, r1, r0
    971c:	00000054 	andeq	r0, r0, r4, asr r0
    9720:	00000000 	andeq	r0, r0, r0
    9724:	f3000400 	vshl.u8	d0, d0, d0
    9728:	009f5001 	addseq	r5, pc, r1
    972c:	00000000 	andeq	r0, r0, r0
    9730:	01000000 	mrseq	r0, (UNDEF: 0)
    9734:	00005400 	andeq	r5, r0, r0, lsl #8
    9738:	00000000 	andeq	r0, r0, r0
    973c:	00040000 	andeq	r0, r4, r0
    9740:	9f5001f3 	svcls	0x005001f3
	...
    9754:	00010000 	andeq	r0, r1, r0
    9758:	00000054 	andeq	r0, r0, r4, asr r0
    975c:	00000000 	andeq	r0, r0, r0
    9760:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    9770:	01000000 	mrseq	r0, (UNDEF: 0)
    9774:	00005000 	andeq	r5, r0, r0
    9778:	00000000 	andeq	r0, r0, r0
    977c:	00010000 	andeq	r0, r1, r0
    9780:	00000054 	andeq	r0, r0, r4, asr r0
    9784:	00000000 	andeq	r0, r0, r0
    9788:	f3000400 	vshl.u8	d0, d0, d0
    978c:	009f5001 	addseq	r5, pc, r1
    9790:	00000000 	andeq	r0, r0, r0
    9794:	01000000 	mrseq	r0, (UNDEF: 0)
    9798:	00005400 	andeq	r5, r0, r0, lsl #8
    979c:	00000000 	andeq	r0, r0, r0
    97a0:	00040000 	andeq	r0, r4, r0
    97a4:	9f5001f3 	svcls	0x005001f3
	...
    97b0:	100030ac 	andne	r3, r0, ip, lsr #1
    97b4:	100030ae 	andne	r3, r0, lr, lsr #1
    97b8:	007d0002 	rsbseq	r0, sp, r2
    97bc:	100030ae 	andne	r3, r0, lr, lsr #1
    97c0:	100030b0 	strhne	r3, [r0], -r0
    97c4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    97c8:	100030b0 	strhne	r3, [r0], -r0
    97cc:	100030c0 	andne	r3, r0, r0, asr #1
    97d0:	187d0002 	ldmdane	sp!, {r1}^
    97d4:	100030c0 	andne	r3, r0, r0, asr #1
    97d8:	100030c2 	andne	r3, r0, r2, asr #1
    97dc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    97e0:	100030c2 	andne	r3, r0, r2, asr #1
    97e4:	1000310c 	andne	r3, r0, ip, lsl #2
    97e8:	187d0002 	ldmdane	sp!, {r1}^
	...
    97f4:	10002ed8 	ldrdne	r2, [r0], -r8
    97f8:	10002eda 	ldrdne	r2, [r0], -sl
    97fc:	007d0002 	rsbseq	r0, sp, r2
    9800:	10002eda 	ldrdne	r2, [r0], -sl
    9804:	10002f08 	andne	r2, r0, r8, lsl #30
    9808:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9814:	2ede0000 	cdpcs	0, 13, cr0, cr14, cr0, {0}
    9818:	2ee71000 	cdpcs	0, 14, cr1, cr7, cr0, {0}
    981c:	00021000 	andeq	r1, r2, r0
    9820:	00000073 	andeq	r0, r0, r3, ror r0
    9824:	00000000 	andeq	r0, r0, r0
    9828:	00010000 	andeq	r0, r1, r0
    982c:	2ef20000 	cdpcs	0, 15, cr0, cr2, cr0, {0}
    9830:	2efe1000 	cdpcs	0, 15, cr1, cr14, cr0, {0}
    9834:	00011000 	andeq	r1, r1, r0
    9838:	002efe53 	eoreq	pc, lr, r3, asr lr	; <UNPREDICTABLE>
    983c:	002f0810 	eoreq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    9840:	03000510 	movweq	r0, #1296	; 0x510
    9844:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
	...
    9850:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    9854:	10002f9e 	mulne	r0, lr, pc	; <UNPREDICTABLE>
    9858:	007d0002 	rsbseq	r0, sp, r2
    985c:	10002f9e 	mulne	r0, lr, pc	; <UNPREDICTABLE>
    9860:	10002fa0 	andne	r2, r0, r0, lsr #31
    9864:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    9868:	10002fa0 	andne	r2, r0, r0, lsr #31
    986c:	1000308e 	andne	r3, r0, lr, lsl #1
    9870:	287d0002 	ldmdacs	sp!, {r1}^
    9874:	1000308e 	andne	r3, r0, lr, lsl #1
    9878:	10003094 	mulne	r0, r4, r0
    987c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    9888:	2fd40000 	svccs	0x00d40000
    988c:	308c1000 	addcc	r1, ip, r0
    9890:	00011000 	andeq	r1, r1, r0
    9894:	00000054 	andeq	r0, r0, r4, asr r0
	...
    98a8:	002fe600 	eoreq	lr, pc, r0, lsl #12
    98ac:	00301210 	eorseq	r1, r0, r0, lsl r2
    98b0:	50000110 	andpl	r0, r0, r0, lsl r1
    98b4:	10003012 	andne	r3, r0, r2, lsl r0
    98b8:	10003044 	andne	r3, r0, r4, asr #32
    98bc:	44550001 	ldrbmi	r0, [r5], #-1
    98c0:	6a100030 	bvs	409988 <__RAM_SIZE+0x309988>
    98c4:	01100030 	tsteq	r0, r0, lsr r0
    98c8:	306a5000 	rsbcc	r5, sl, r0
    98cc:	30701000 	rsbscc	r1, r0, r0
    98d0:	00011000 	andeq	r1, r1, r0
    98d4:	00307055 	eorseq	r7, r0, r5, asr r0
    98d8:	00308610 	eorseq	r8, r0, r0, lsl r6
    98dc:	50000110 	andpl	r0, r0, r0, lsl r1
    98e0:	10003086 	andne	r3, r0, r6, lsl #1
    98e4:	1000308c 	andne	r3, r0, ip, lsl #1
    98e8:	00550001 	subseq	r0, r5, r1
    98ec:	00000000 	andeq	r0, r0, r0
    98f0:	01000000 	mrseq	r0, (UNDEF: 0)
    98f4:	002fc800 	eoreq	ip, pc, r0, lsl #16
    98f8:	002fd210 	eoreq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    98fc:	91000310 	tstls	r0, r0, lsl r3
    9900:	00009f64 	andeq	r9, r0, r4, ror #30
    9904:	00000000 	andeq	r0, r0, r0
    9908:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    990c:	2e2a1000 	cdpcs	0, 2, cr1, cr10, cr0, {0}
    9910:	00021000 	andeq	r1, r2, r0
    9914:	2e2a007d 	mcrcs	0, 1, r0, cr10, cr13, {3}
    9918:	2e701000 	cdpcs	0, 7, cr1, cr0, cr0, {0}
    991c:	00021000 	andeq	r1, r2, r0
    9920:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    993c:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    9940:	2e3c1000 	cdpcs	0, 3, cr1, cr12, cr0, {0}
    9944:	00011000 	andeq	r1, r1, r0
    9948:	002e3c50 	eoreq	r3, lr, r0, asr ip
    994c:	002e3e10 	eoreq	r3, lr, r0, lsl lr
    9950:	f3000410 	vqshl.u8	d0, d0, d0
    9954:	3e9f5001 	cdpcc	0, 9, cr5, cr15, cr1, {0}
    9958:	4410002e 	ldrmi	r0, [r0], #-46	; 0xffffffd2
    995c:	0110002e 	tsteq	r0, lr, lsr #32
    9960:	2e445000 	cdpcs	0, 4, cr5, cr4, cr0, {0}
    9964:	2e471000 	cdpcs	0, 4, cr1, cr7, cr0, {0}
    9968:	00031000 	andeq	r1, r3, r0
    996c:	479f7c71 			; <UNDEFINED> instruction: 0x479f7c71
    9970:	4c10002e 	ldcmi	0, cr0, [r0], {46}	; 0x2e
    9974:	0410002e 	ldreq	r0, [r0], #-46	; 0xffffffd2
    9978:	5001f300 	andpl	pc, r1, r0, lsl #6
    997c:	002e4c9f 	mlaeq	lr, pc, ip, r4	; <UNPREDICTABLE>
    9980:	002e5a10 	eoreq	r5, lr, r0, lsl sl
    9984:	50000110 	andpl	r0, r0, r0, lsl r1
    9988:	10002e5a 	andne	r2, r0, sl, asr lr
    998c:	10002e5d 	andne	r2, r0, sp, asr lr
    9990:	7c710003 	ldclvc	0, cr0, [r1], #-12
    9994:	002e5d9f 	mlaeq	lr, pc, sp, r5	; <UNPREDICTABLE>
    9998:	002e6210 	eoreq	r6, lr, r0, lsl r2
    999c:	f3000410 	vqshl.u8	d0, d0, d0
    99a0:	629f5001 	addsvs	r5, pc, #1
    99a4:	6410002e 	ldrvs	r0, [r0], #-46	; 0xffffffd2
    99a8:	0110002e 	tsteq	r0, lr, lsr #32
    99ac:	2e645000 	cdpcs	0, 6, cr5, cr4, cr0, {0}
    99b0:	2e701000 	cdpcs	0, 7, cr1, cr0, cr0, {0}
    99b4:	00041000 	andeq	r1, r4, r0
    99b8:	9f5001f3 	svcls	0x005001f3
	...
    99d8:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    99dc:	2e3c1000 	cdpcs	0, 3, cr1, cr12, cr0, {0}
    99e0:	00011000 	andeq	r1, r1, r0
    99e4:	002e3c51 	eoreq	r3, lr, r1, asr ip
    99e8:	002e3e10 	eoreq	r3, lr, r0, lsl lr
    99ec:	f3000410 	vqshl.u8	d0, d0, d0
    99f0:	3e9f5101 	fmlcce	f5, f7, f1
    99f4:	4010002e 	andsmi	r0, r0, lr, lsr #32
    99f8:	0110002e 	tsteq	r0, lr, lsr #32
    99fc:	2e405100 	dvfcss	f5, f0, f0
    9a00:	2e441000 	cdpcs	0, 4, cr1, cr4, cr0, {0}
    9a04:	00021000 	andeq	r1, r2, r0
    9a08:	2e440470 	mcrcs	4, 2, r0, cr4, cr0, {3}
    9a0c:	2e471000 	cdpcs	0, 4, cr1, cr7, cr0, {0}
    9a10:	00021000 	andeq	r1, r2, r0
    9a14:	2e470071 	mcrcs	0, 2, r0, cr7, cr1, {3}
    9a18:	2e4c1000 	cdpcs	0, 4, cr1, cr12, cr0, {0}
    9a1c:	00041000 	andeq	r1, r4, r0
    9a20:	9f5101f3 	svcls	0x005101f3
    9a24:	10002e4c 	andne	r2, r0, ip, asr #28
    9a28:	10002e56 	andne	r2, r0, r6, asr lr
    9a2c:	56510001 	ldrbpl	r0, [r1], -r1
    9a30:	5a10002e 	bpl	409af0 <__RAM_SIZE+0x309af0>
    9a34:	0210002e 	andseq	r0, r0, #46	; 0x2e
    9a38:	5a047000 	bpl	125a40 <__RAM_SIZE+0x25a40>
    9a3c:	5d10002e 	ldcpl	0, cr0, [r0, #-184]	; 0xffffff48
    9a40:	0210002e 	andseq	r0, r0, #46	; 0x2e
    9a44:	5d007100 	stfpls	f7, [r0, #-0]
    9a48:	6210002e 	andsvs	r0, r0, #46	; 0x2e
    9a4c:	0410002e 	ldreq	r0, [r0], #-46	; 0xffffffd2
    9a50:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9a54:	002e629f 	mlaeq	lr, pc, r2, r6	; <UNPREDICTABLE>
    9a58:	002e7010 	eoreq	r7, lr, r0, lsl r0
    9a5c:	51000110 	tstpl	r0, r0, lsl r1
	...
    9a70:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    9a74:	2e341000 	cdpcs	0, 3, cr1, cr4, cr0, {0}
    9a78:	00011000 	andeq	r1, r1, r0
    9a7c:	002e3452 	eoreq	r3, lr, r2, asr r4
    9a80:	002e4c10 	eoreq	r4, lr, r0, lsl ip
    9a84:	f3000410 	vqshl.u8	d0, d0, d0
    9a88:	4c9f5201 	lfmmi	f5, 4, [pc], {1}
    9a8c:	5d10002e 	ldcpl	0, cr0, [r0, #-184]	; 0xffffff48
    9a90:	0110002e 	tsteq	r0, lr, lsr #32
    9a94:	2e5d5200 	cdpcs	2, 5, cr5, cr13, cr0, {0}
    9a98:	2e621000 	cdpcs	0, 6, cr1, cr2, cr0, {0}
    9a9c:	00041000 	andeq	r1, r4, r0
    9aa0:	9f5201f3 	svcls	0x005201f3
    9aa4:	10002e62 	andne	r2, r0, r2, ror #28
    9aa8:	10002e70 	andne	r2, r0, r0, ror lr
    9aac:	00520001 	subseq	r0, r2, r1
	...
    9ac0:	002e2800 	eoreq	r2, lr, r0, lsl #16
    9ac4:	002e3610 	eoreq	r3, lr, r0, lsl r6
    9ac8:	53000110 	movwpl	r0, #272	; 0x110
    9acc:	10002e36 	andne	r2, r0, r6, lsr lr
    9ad0:	10002e4c 	andne	r2, r0, ip, asr #28
    9ad4:	01f30004 	mvnseq	r0, r4
    9ad8:	2e4c9f53 	mcrcs	15, 2, r9, cr12, cr3, {2}
    9adc:	2e581000 	cdpcs	0, 5, cr1, cr8, cr0, {0}
    9ae0:	00011000 	andeq	r1, r1, r0
    9ae4:	002e5853 	eoreq	r5, lr, r3, asr r8
    9ae8:	002e6210 	eoreq	r6, lr, r0, lsl r2
    9aec:	f3000410 	vqshl.u8	d0, d0, d0
    9af0:	629f5301 	addsvs	r5, pc, #67108864	; 0x4000000
    9af4:	7010002e 	andsvc	r0, r0, lr, lsr #32
    9af8:	0110002e 	tsteq	r0, lr, lsr #32
    9afc:	00005300 	andeq	r5, r0, r0, lsl #6
    9b00:	00000000 	andeq	r0, r0, r0
    9b04:	00010000 	andeq	r0, r1, r0
    9b08:	00000000 	andeq	r0, r0, r0
    9b0c:	10002e2a 	andne	r2, r0, sl, lsr #28
    9b10:	10002e3c 	andne	r2, r0, ip, lsr lr
    9b14:	9f300002 	svcls	0x00300002
    9b18:	10002e3e 	andne	r2, r0, lr, lsr lr
    9b1c:	10002e64 	andne	r2, r0, r4, ror #28
    9b20:	9f300002 	svcls	0x00300002
    9b24:	10002e64 	andne	r2, r0, r4, ror #28
    9b28:	10002e70 	andne	r2, r0, r0, ror lr
    9b2c:	9f310002 	svcls	0x00310002
	...
    9b38:	10002f08 	andne	r2, r0, r8, lsl #30
    9b3c:	10002f0a 	andne	r2, r0, sl, lsl #30
    9b40:	007d0002 	rsbseq	r0, sp, r2
    9b44:	10002f0a 	andne	r2, r0, sl, lsl #30
    9b48:	10002f34 	andne	r2, r0, r4, lsr pc
    9b4c:	107d0002 	rsbsne	r0, sp, r2
	...
    9b5c:	10002f08 	andne	r2, r0, r8, lsl #30
    9b60:	10002f0f 	andne	r2, r0, pc, lsl #30
    9b64:	0f500001 	svceq	0x00500001
    9b68:	3410002f 	ldrcc	r0, [r0], #-47	; 0xffffffd1
    9b6c:	0110002f 	tsteq	r0, pc, lsr #32
    9b70:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9b80:	2f120000 	svccs	0x00120000
    9b84:	2f1e1000 	svccs	0x001e1000
    9b88:	00011000 	andeq	r1, r1, r0
    9b8c:	002f1e50 	eoreq	r1, pc, r0, asr lr	; <UNPREDICTABLE>
    9b90:	002f2610 	eoreq	r2, pc, r0, lsl r6	; <UNPREDICTABLE>
    9b94:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    9b98:	10002f26 	andne	r2, r0, r6, lsr #30
    9b9c:	10002f29 	andne	r2, r0, r9, lsr #30
    9ba0:	29500001 	ldmdbcs	r0, {r0}^
    9ba4:	3410002f 	ldrcc	r0, [r0], #-47	; 0xffffffd1
    9ba8:	0110002f 	tsteq	r0, pc, lsr #32
    9bac:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    9bbc:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
    9bc0:	2e1a1000 	cdpcs	0, 1, cr1, cr10, cr0, {0}
    9bc4:	00011000 	andeq	r1, r1, r0
    9bc8:	002e1a50 	eoreq	r1, lr, r0, asr sl
    9bcc:	002e1c10 	eoreq	r1, lr, r0, lsl ip
    9bd0:	f3000410 	vqshl.u8	d0, d0, d0
    9bd4:	1c9f5001 	ldcne	0, cr5, [pc], {1}
    9bd8:	2210002e 	andscs	r0, r0, #46	; 0x2e
    9bdc:	0110002e 	tsteq	r0, lr, lsr #32
    9be0:	2e225000 	cdpcs	0, 2, cr5, cr2, cr0, {0}
    9be4:	2e281000 	cdpcs	0, 2, cr1, cr8, cr0, {0}
    9be8:	00041000 	andeq	r1, r4, r0
    9bec:	9f5001f3 	svcls	0x005001f3
	...
    9bfc:	10002e1a 	andne	r2, r0, sl, lsl lr
    9c00:	10002e1c 	andne	r2, r0, ip, lsl lr
    9c04:	22500001 	subscs	r0, r0, #1
    9c08:	2810002e 	ldmdacs	r0, {r1, r2, r3, r5}
    9c0c:	0210002e 	andseq	r0, r0, #46	; 0x2e
    9c10:	009f3000 	addseq	r3, pc, r0
    9c14:	00000000 	andeq	r0, r0, r0
    9c18:	34000000 	strcc	r0, [r0], #-0
    9c1c:	3610002f 	ldrcc	r0, [r0], -pc, lsr #32
    9c20:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c24:	36007d00 	strcc	r7, [r0], -r0, lsl #26
    9c28:	3810002f 	ldmdacc	r0, {r0, r1, r2, r3, r5}
    9c2c:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c30:	38107d00 	ldmdacc	r0, {r8, sl, fp, ip, sp, lr}
    9c34:	7210002f 	andsvc	r0, r0, #47	; 0x2f
    9c38:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c3c:	72187d00 	andsvc	r7, r8, #0, 26
    9c40:	7410002f 	ldrvc	r0, [r0], #-47	; 0xffffffd1
    9c44:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c48:	74107d00 	ldrvc	r7, [r0], #-3328	; 0xfffff300
    9c4c:	9c10002f 	ldcls	0, cr0, [r0], {47}	; 0x2f
    9c50:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c54:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    9c60:	34000000 	strcc	r0, [r0], #-0
    9c64:	3f10002f 	svccc	0x0010002f
    9c68:	0110002f 	tsteq	r0, pc, lsr #32
    9c6c:	2f3f5000 	svccs	0x003f5000
    9c70:	2f9c1000 	svccs	0x009c1000
    9c74:	00011000 	andeq	r1, r1, r0
    9c78:	00000056 	andeq	r0, r0, r6, asr r0
	...
    9c88:	002f3400 	eoreq	r3, pc, r0, lsl #8
    9c8c:	002f3f10 	eoreq	r3, pc, r0, lsl pc	; <UNPREDICTABLE>
    9c90:	51000110 	tstpl	r0, r0, lsl r1
    9c94:	10002f3f 	andne	r2, r0, pc, lsr pc
    9c98:	10002f84 	andne	r2, r0, r4, lsl #31
    9c9c:	84540001 	ldrbhi	r0, [r4], #-1
    9ca0:	8610002f 	ldrhi	r0, [r0], -pc, lsr #32
    9ca4:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    9ca8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9cac:	002f869f 	mlaeq	pc, pc, r6, r8	; <UNPREDICTABLE>
    9cb0:	002f9c10 	eoreq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    9cb4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9ccc:	2f460000 	svccs	0x00460000
    9cd0:	2f661000 	svccs	0x00661000
    9cd4:	00011000 	andeq	r1, r1, r0
    9cd8:	002f6650 	eoreq	r6, pc, r0, asr r6	; <UNPREDICTABLE>
    9cdc:	002f7010 	eoreq	r7, pc, r0, lsl r0	; <UNPREDICTABLE>
    9ce0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9ce4:	10002f74 	andne	r2, r0, r4, ror pc
    9ce8:	10002f77 	andne	r2, r0, r7, ror pc
    9cec:	77500001 	ldrbvc	r0, [r0, -r1]
    9cf0:	8210002f 	andshi	r0, r0, #47	; 0x2f
    9cf4:	0110002f 	tsteq	r0, pc, lsr #32
    9cf8:	2f825500 	svccs	0x00825500
    9cfc:	2f861000 	svccs	0x00861000
    9d00:	00011000 	andeq	r1, r1, r0
    9d04:	002f8650 	eoreq	r8, pc, r0, asr r6	; <UNPREDICTABLE>
    9d08:	002f8c10 	eoreq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>
    9d0c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9d10:	10002f8c 	andne	r2, r0, ip, lsl #31
    9d14:	10002f8f 	andne	r2, r0, pc, lsl #31
    9d18:	00500001 	subseq	r0, r0, r1
    9d1c:	00000000 	andeq	r0, r0, r0
    9d20:	94000000 	strls	r0, [r0], #-0
    9d24:	96100030 			; <UNDEFINED> instruction: 0x96100030
    9d28:	02100030 	andseq	r0, r0, #48	; 0x30
    9d2c:	96007d00 	strls	r7, [r0], -r0, lsl #26
    9d30:	98100030 	ldmdals	r0, {r4, r5}
    9d34:	02100030 	andseq	r0, r0, #48	; 0x30
    9d38:	98047d00 	stmdals	r4, {r8, sl, fp, ip, sp, lr}
    9d3c:	aa100030 	bge	409e04 <__RAM_SIZE+0x309e04>
    9d40:	02100030 	andseq	r0, r0, #48	; 0x30
    9d44:	00107d00 	andseq	r7, r0, r0, lsl #26
    9d48:	00000000 	andeq	r0, r0, r0
    9d4c:	01000000 	mrseq	r0, (UNDEF: 0)
    9d50:	94000000 	strls	r0, [r0], #-0
    9d54:	98100030 	ldmdals	r0, {r4, r5}
    9d58:	01100030 	tsteq	r0, r0, lsr r0
    9d5c:	30985000 	addscc	r5, r8, r0
    9d60:	30aa1000 	adccc	r1, sl, r0
    9d64:	00041000 	andeq	r1, r4, r0
    9d68:	9f5001f3 	svcls	0x005001f3
	...
    9d74:	309e0000 	addscc	r0, lr, r0
    9d78:	30a31000 	adccc	r1, r3, r0
    9d7c:	00011000 	andeq	r1, r1, r0
    9d80:	00000050 	andeq	r0, r0, r0, asr r0
    9d84:	00000000 	andeq	r0, r0, r0
    9d88:	002e9800 	eoreq	r9, lr, r0, lsl #16
    9d8c:	002e9a10 	eoreq	r9, lr, r0, lsl sl
    9d90:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9d94:	002e9a00 	eoreq	r9, lr, r0, lsl #20
    9d98:	002ed810 	eoreq	sp, lr, r0, lsl r8
    9d9c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9da0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    9dac:	002e9800 	eoreq	r9, lr, r0, lsl #16
    9db0:	002ea810 	eoreq	sl, lr, r0, lsl r8
    9db4:	50000110 	andpl	r0, r0, r0, lsl r1
    9db8:	10002ea8 	andne	r2, r0, r8, lsr #29
    9dbc:	10002ed8 	ldrdne	r2, [r0], -r8
    9dc0:	00550001 	subseq	r0, r5, r1
	...
    9dcc:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    9dd0:	ab10002e 	blge	409e90 <__RAM_SIZE+0x309e90>
    9dd4:	0110002e 	tsteq	r0, lr, lsr #32
    9dd8:	2eab5100 	fdvcse	f5, f3, f0
    9ddc:	2ed81000 	cdpcs	0, 13, cr1, cr8, cr0, {0}
    9de0:	00011000 	andeq	r1, r1, r0
    9de4:	00000056 	andeq	r0, r0, r6, asr r0
    9de8:	00000000 	andeq	r0, r0, r0
    9dec:	a6000000 	strge	r0, [r0], -r0
    9df0:	d810002e 	ldmdale	r0, {r1, r2, r3, r5}
    9df4:	0110002e 	tsteq	r0, lr, lsr #32
    9df8:	00005400 	andeq	r5, r0, r0, lsl #8
    9dfc:	00000000 	andeq	r0, r0, r0
    9e00:	2e700000 	cdpcs	0, 7, cr0, cr0, cr0, {0}
    9e04:	2e721000 	cdpcs	0, 7, cr1, cr2, cr0, {0}
    9e08:	00021000 	andeq	r1, r2, r0
    9e0c:	2e72007d 	mrccs	0, 3, r0, cr2, cr13, {3}
    9e10:	2e981000 	cdpcs	0, 9, cr1, cr8, cr0, {0}
    9e14:	00021000 	andeq	r1, r2, r0
    9e18:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    9e24:	2e700000 	cdpcs	0, 7, cr0, cr0, cr0, {0}
    9e28:	2e7a1000 	cdpcs	0, 7, cr1, cr10, cr0, {0}
    9e2c:	00011000 	andeq	r1, r1, r0
    9e30:	002e7a50 	eoreq	r7, lr, r0, asr sl
    9e34:	002e9810 	eoreq	r9, lr, r0, lsl r8
    9e38:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9e48:	10002e70 	andne	r2, r0, r0, ror lr
    9e4c:	10002e7a 	andne	r2, r0, sl, ror lr
    9e50:	7a510001 	bvc	1449e5c <__RAM_SIZE+0x1349e5c>
    9e54:	9810002e 	ldmdals	r0, {r1, r2, r3, r5}
    9e58:	0110002e 	tsteq	r0, lr, lsr #32
    9e5c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9e68:	2e700000 	cdpcs	0, 7, cr0, cr0, cr0, {0}
    9e6c:	2e7a1000 	cdpcs	0, 7, cr1, cr10, cr0, {0}
    9e70:	00011000 	andeq	r1, r1, r0
    9e74:	002e7a52 	eoreq	r7, lr, r2, asr sl
    9e78:	002e9810 	eoreq	r9, lr, r0, lsl r8
    9e7c:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9e94:	00500001 	subseq	r0, r0, r1
    9e98:	00000000 	andeq	r0, r0, r0
    9e9c:	04000000 	streq	r0, [r0], #-0
    9ea0:	5001f300 	andpl	pc, r1, r0, lsl #6
    9ea4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9ea8:	00000000 	andeq	r0, r0, r0
    9eac:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    9eb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9ec4:	01f30004 	mvnseq	r0, r4
    9ec8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    9ee0:	00010000 	andeq	r0, r1, r0
    9ee4:	00000050 	andeq	r0, r0, r0, asr r0
    9ee8:	00000000 	andeq	r0, r0, r0
    9eec:	71000200 	mrsvc	r0, R8_usr
	...
    9ef8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9f04:	01f30004 	mvnseq	r0, r4
    9f08:	00009f50 	andeq	r9, r0, r0, asr pc
    9f0c:	00000000 	andeq	r0, r0, r0
    9f10:	00010000 	andeq	r0, r1, r0
	...
    9f1c:	00020000 	andeq	r0, r2, r0
    9f20:	00009f31 	andeq	r9, r0, r1, lsr pc
    9f24:	00000000 	andeq	r0, r0, r0
    9f28:	00020000 	andeq	r0, r2, r0
    9f2c:	00009f30 	andeq	r9, r0, r0, lsr pc
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	00030000 	andeq	r0, r3, r0
	...
    9f44:	00010000 	andeq	r0, r1, r0
    9f48:	00000050 	andeq	r0, r0, r0, asr r0
    9f4c:	00000000 	andeq	r0, r0, r0
    9f50:	71000200 	mrsvc	r0, R8_usr
	...
    9f5c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9f68:	01f30004 	mvnseq	r0, r4
    9f6c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    9f80:	00010000 	andeq	r0, r1, r0
    9f84:	00000050 	andeq	r0, r0, r0, asr r0
    9f88:	00000000 	andeq	r0, r0, r0
    9f8c:	f3000400 	vshl.u8	d0, d0, d0
    9f90:	009f5001 	addseq	r5, pc, r1
    9f94:	00000000 	andeq	r0, r0, r0
    9f98:	02000000 	andeq	r0, r0, #0
	...
    9fa4:	01000000 	mrseq	r0, (UNDEF: 0)
    9fa8:	00005000 	andeq	r5, r0, r0
    9fac:	00000000 	andeq	r0, r0, r0
    9fb0:	00040000 	andeq	r0, r4, r0
    9fb4:	9f5001f3 	svcls	0x005001f3
	...
    9fc0:	00000006 	andeq	r0, r0, r6
	...
    9fcc:	04700002 	ldrbteq	r0, [r0], #-2
	...
    9fd8:	00500001 	subseq	r0, r0, r1
	...
    9fe8:	02000000 	andeq	r0, r0, #0
    9fec:	00007d00 	andeq	r7, r0, r0, lsl #26
    9ff0:	00000000 	andeq	r0, r0, r0
    9ff4:	02000000 	andeq	r0, r0, #0
    9ff8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    a00c:	01000000 	mrseq	r0, (UNDEF: 0)
    a010:	00005000 	andeq	r5, r0, r0
    a014:	00000000 	andeq	r0, r0, r0
    a018:	00040000 	andeq	r0, r4, r0
    a01c:	9f5001f3 	svcls	0x005001f3
	...
    a030:	00010000 	andeq	r0, r1, r0
    a034:	00000050 	andeq	r0, r0, r0, asr r0
	...
    a044:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a050:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a054:	00000008 	andeq	r0, r0, r8
	...
    a06c:	01000000 	mrseq	r0, (UNDEF: 0)
    a070:	00005000 	andeq	r5, r0, r0
    a074:	00000000 	andeq	r0, r0, r0
    a078:	00010000 	andeq	r0, r1, r0
    a07c:	00000054 	andeq	r0, r0, r4, asr r0
    a080:	00000000 	andeq	r0, r0, r0
    a084:	f3000400 	vshl.u8	d0, d0, d0
    a088:	009f5001 	addseq	r5, pc, r1
    a08c:	00000000 	andeq	r0, r0, r0
    a090:	01000000 	mrseq	r0, (UNDEF: 0)
    a094:	00005400 	andeq	r5, r0, r0, lsl #8
    a098:	00000000 	andeq	r0, r0, r0
    a09c:	00040000 	andeq	r0, r4, r0
    a0a0:	9f5001f3 	svcls	0x005001f3
	...
    a0ac:	00000001 	andeq	r0, r0, r1
	...
    a0bc:	00010000 	andeq	r0, r1, r0
    a0c0:	00000050 	andeq	r0, r0, r0, asr r0
    a0c4:	00000000 	andeq	r0, r0, r0
    a0c8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a0d4:	01f30004 	mvnseq	r0, r4
    a0d8:	00009f50 	andeq	r9, r0, r0, asr pc
    a0dc:	00000000 	andeq	r0, r0, r0
    a0e0:	00010000 	andeq	r0, r1, r0
    a0e4:	00000054 	andeq	r0, r0, r4, asr r0
    a0e8:	00000000 	andeq	r0, r0, r0
    a0ec:	f3000400 	vshl.u8	d0, d0, d0
    a0f0:	009f5001 	addseq	r5, pc, r1
	...
    a104:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a118:	007d0002 	rsbseq	r0, sp, r2
	...
    a124:	107d0002 	rsbsne	r0, sp, r2
	...
    a13c:	00500001 	subseq	r0, r0, r1
    a140:	00000000 	andeq	r0, r0, r0
    a144:	01000000 	mrseq	r0, (UNDEF: 0)
    a148:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a15c:	00010000 	andeq	r0, r1, r0
    a160:	00000051 	andeq	r0, r0, r1, asr r0
    a164:	00000000 	andeq	r0, r0, r0
    a168:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    a174:	00000001 	andeq	r0, r0, r1
	...
    a180:	00500001 	subseq	r0, r0, r1
    a184:	00000000 	andeq	r0, r0, r0
    a188:	01000000 	mrseq	r0, (UNDEF: 0)
    a18c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a1a0:	00010000 	andeq	r0, r1, r0
    a1a4:	00000050 	andeq	r0, r0, r0, asr r0
    a1a8:	00000000 	andeq	r0, r0, r0
    a1ac:	f3000400 	vshl.u8	d0, d0, d0
    a1b0:	009f5001 	addseq	r5, pc, r1
    a1b4:	00000000 	andeq	r0, r0, r0
    a1b8:	02000000 	andeq	r0, r0, #0
	...
    a1c4:	01000000 	mrseq	r0, (UNDEF: 0)
    a1c8:	00005000 	andeq	r5, r0, r0
    a1cc:	00000000 	andeq	r0, r0, r0
    a1d0:	00040000 	andeq	r0, r4, r0
    a1d4:	9f5001f3 	svcls	0x005001f3
	...
    a1e8:	007d0002 	rsbseq	r0, sp, r2
	...
    a1f4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a200:	187d0002 	ldmdane	sp!, {r1}^
	...
    a20c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a218:	187d0002 	ldmdane	sp!, {r1}^
	...
    a224:	03000000 	movweq	r0, #0
    a228:	00000003 	andeq	r0, r0, r3
	...
    a23c:	00500001 	subseq	r0, r0, r1
    a240:	00000000 	andeq	r0, r0, r0
    a244:	02000000 	andeq	r0, r0, #0
    a248:	00709100 	rsbseq	r9, r0, r0, lsl #2
    a24c:	00000000 	andeq	r0, r0, r0
    a250:	04000000 	streq	r0, [r0], #-0
    a254:	5001f300 	andpl	pc, r1, r0, lsl #6
    a258:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a25c:	00000000 	andeq	r0, r0, r0
    a260:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a26c:	70910002 	addsvc	r0, r1, r2
	...
    a278:	01f30004 	mvnseq	r0, r4
    a27c:	00009f50 	andeq	r9, r0, r0, asr pc
    a280:	00000000 	andeq	r0, r0, r0
    a284:	00010000 	andeq	r0, r1, r0
    a288:	00000050 	andeq	r0, r0, r0, asr r0
    a28c:	00000000 	andeq	r0, r0, r0
    a290:	f3000400 	vshl.u8	d0, d0, d0
    a294:	009f5001 	addseq	r5, pc, r1
	...
    a2a0:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a2b0:	01000000 	mrseq	r0, (UNDEF: 0)
    a2b4:	00005100 	andeq	r5, r0, r0, lsl #2
    a2b8:	00000000 	andeq	r0, r0, r0
    a2bc:	00040000 	andeq	r0, r4, r0
    a2c0:	9f5101f3 	svcls	0x005101f3
	...
    a2cc:	00510001 	subseq	r0, r1, r1
    a2d0:	00000000 	andeq	r0, r0, r0
    a2d4:	02000000 	andeq	r0, r0, #0
    a2d8:	00007100 	andeq	r7, r0, r0, lsl #2
    a2dc:	00000000 	andeq	r0, r0, r0
    a2e0:	04000000 	streq	r0, [r0], #-0
    a2e4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    a2e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a2ec:	00000000 	andeq	r0, r0, r0
    a2f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a2fc:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a310:	00520001 	subseq	r0, r2, r1
    a314:	00000000 	andeq	r0, r0, r0
    a318:	04000000 	streq	r0, [r0], #-0
    a31c:	5201f300 	andpl	pc, r1, #0, 6
    a320:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a324:	00000000 	andeq	r0, r0, r0
    a328:	52000100 	andpl	r0, r0, #0, 2
	...
    a334:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    a340:	01f30004 	mvnseq	r0, r4
    a344:	00009f52 	andeq	r9, r0, r2, asr pc
    a348:	00000000 	andeq	r0, r0, r0
    a34c:	00010000 	andeq	r0, r1, r0
    a350:	00000052 	andeq	r0, r0, r2, asr r0
	...
    a35c:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a36c:	53000100 	movwpl	r0, #256	; 0x100
	...
    a378:	005c0001 	subseq	r0, ip, r1
    a37c:	00000000 	andeq	r0, r0, r0
    a380:	04000000 	streq	r0, [r0], #-0
    a384:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a388:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a38c:	00000000 	andeq	r0, r0, r0
    a390:	5c000100 	stfpls	f0, [r0], {-0}
	...
    a39c:	01f30004 	mvnseq	r0, r4
    a3a0:	00009f53 	andeq	r9, r0, r3, asr pc
    a3a4:	00000000 	andeq	r0, r0, r0
    a3a8:	00010000 	andeq	r0, r1, r0
    a3ac:	0000005c 	andeq	r0, r0, ip, asr r0
	...
    a3c0:	91000200 	mrsls	r0, R8_usr
	...
    a3cc:	91000200 	mrsls	r0, R8_usr
	...
    a3d8:	00030100 	andeq	r0, r3, r0, lsl #2
	...
    a3e8:	30000200 	andcc	r0, r0, r0, lsl #4
    a3ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a3f0:	00000000 	andeq	r0, r0, r0
    a3f4:	30000200 	andcc	r0, r0, r0, lsl #4
    a3f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a3fc:	00000000 	andeq	r0, r0, r0
    a400:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a40c:	9f300002 	svcls	0x00300002
	...
    a420:	007d0002 	rsbseq	r0, sp, r2
	...
    a42c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    a438:	187d0002 	ldmdane	sp!, {r1}^
	...
    a444:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    a450:	187d0002 	ldmdane	sp!, {r1}^
	...
    a45c:	007d0002 	rsbseq	r0, sp, r2
	...
    a468:	03000000 	movweq	r0, #0
    a46c:	00000003 	andeq	r0, r0, r3
	...
    a47c:	00010000 	andeq	r0, r1, r0
    a480:	00000050 	andeq	r0, r0, r0, asr r0
    a484:	00000000 	andeq	r0, r0, r0
    a488:	91000200 	mrsls	r0, R8_usr
    a48c:	00000070 	andeq	r0, r0, r0, ror r0
    a490:	00000000 	andeq	r0, r0, r0
    a494:	f3000400 	vshl.u8	d0, d0, d0
    a498:	009f5001 	addseq	r5, pc, r1
    a49c:	00000000 	andeq	r0, r0, r0
    a4a0:	01000000 	mrseq	r0, (UNDEF: 0)
    a4a4:	00005000 	andeq	r5, r0, r0
    a4a8:	00000000 	andeq	r0, r0, r0
    a4ac:	00040000 	andeq	r0, r4, r0
    a4b0:	9f5001f3 	svcls	0x005001f3
	...
    a4bc:	00500001 	subseq	r0, r0, r1
    a4c0:	00000000 	andeq	r0, r0, r0
    a4c4:	04000000 	streq	r0, [r0], #-0
    a4c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    a4cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a4d0:	00000000 	andeq	r0, r0, r0
    a4d4:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a4e4:	01000000 	mrseq	r0, (UNDEF: 0)
    a4e8:	00005100 	andeq	r5, r0, r0, lsl #2
    a4ec:	00000000 	andeq	r0, r0, r0
    a4f0:	00040000 	andeq	r0, r4, r0
    a4f4:	9f5101f3 	svcls	0x005101f3
	...
    a500:	00510001 	subseq	r0, r1, r1
    a504:	00000000 	andeq	r0, r0, r0
    a508:	04000000 	streq	r0, [r0], #-0
    a50c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    a510:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a514:	00000000 	andeq	r0, r0, r0
    a518:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a524:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a534:	00010000 	andeq	r0, r1, r0
    a538:	00000052 	andeq	r0, r0, r2, asr r0
    a53c:	00000000 	andeq	r0, r0, r0
    a540:	f3000400 	vshl.u8	d0, d0, d0
    a544:	009f5201 	addseq	r5, pc, r1, lsl #4
    a548:	00000000 	andeq	r0, r0, r0
    a54c:	01000000 	mrseq	r0, (UNDEF: 0)
    a550:	00005200 	andeq	r5, r0, r0, lsl #4
    a554:	00000000 	andeq	r0, r0, r0
    a558:	00040000 	andeq	r0, r4, r0
    a55c:	9f5201f3 	svcls	0x005201f3
	...
    a568:	00520001 	subseq	r0, r2, r1
	...
    a57c:	01000000 	mrseq	r0, (UNDEF: 0)
    a580:	00005300 	andeq	r5, r0, r0, lsl #6
    a584:	00000000 	andeq	r0, r0, r0
    a588:	00040000 	andeq	r0, r4, r0
    a58c:	9f5301f3 	svcls	0x005301f3
	...
    a5a4:	00910002 	addseq	r0, r1, r2
	...
    a5b0:	00910002 	addseq	r0, r1, r2
	...
    a5bc:	00000302 	andeq	r0, r0, r2, lsl #6
	...
    a5d0:	9f300002 	svcls	0x00300002
	...
    a5dc:	9f300002 	svcls	0x00300002
	...
    a5e8:	00500001 	subseq	r0, r0, r1
    a5ec:	00000000 	andeq	r0, r0, r0
    a5f0:	02000000 	andeq	r0, r0, #0
    a5f4:	009f3000 	addseq	r3, pc, r0
    a5f8:	00000000 	andeq	r0, r0, r0
    a5fc:	01000000 	mrseq	r0, (UNDEF: 0)
    a600:	00005000 	andeq	r5, r0, r0
    a604:	00000000 	andeq	r0, r0, r0
    a608:	00020000 	andeq	r0, r2, r0
    a60c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    a61c:	00020000 	andeq	r0, r2, r0
    a620:	0000007d 	andeq	r0, r0, sp, ror r0
    a624:	00000000 	andeq	r0, r0, r0
    a628:	00020000 	andeq	r0, r2, r0
    a62c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    a640:	00010000 	andeq	r0, r1, r0
    a644:	00000050 	andeq	r0, r0, r0, asr r0
    a648:	00000000 	andeq	r0, r0, r0
    a64c:	58000100 	stmdapl	r0, {r8}
	...
    a664:	00510001 	subseq	r0, r1, r1
    a668:	00000000 	andeq	r0, r0, r0
    a66c:	01000000 	mrseq	r0, (UNDEF: 0)
    a670:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    a684:	00010000 	andeq	r0, r1, r0
    a688:	00000052 	andeq	r0, r0, r2, asr r0
    a68c:	00000000 	andeq	r0, r0, r0
    a690:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    a6a8:	00530001 	subseq	r0, r3, r1
    a6ac:	00000000 	andeq	r0, r0, r0
    a6b0:	01000000 	mrseq	r0, (UNDEF: 0)
    a6b4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    a6c4:	00020000 	andeq	r0, r2, r0
    a6c8:	0000007d 	andeq	r0, r0, sp, ror r0
    a6cc:	00000000 	andeq	r0, r0, r0
    a6d0:	00020000 	andeq	r0, r2, r0
    a6d4:	00000c7d 	andeq	r0, r0, sp, ror ip
    a6d8:	00000000 	andeq	r0, r0, r0
    a6dc:	00020000 	andeq	r0, r2, r0
    a6e0:	0000187d 	andeq	r1, r0, sp, ror r8
    a6e4:	00000000 	andeq	r0, r0, r0
    a6e8:	00020000 	andeq	r0, r2, r0
    a6ec:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
    a700:	00010000 	andeq	r0, r1, r0
    a704:	00000050 	andeq	r0, r0, r0, asr r0
    a708:	00000000 	andeq	r0, r0, r0
    a70c:	f3000400 	vshl.u8	d0, d0, d0
    a710:	009f5001 	addseq	r5, pc, r1
	...
    a724:	01000000 	mrseq	r0, (UNDEF: 0)
    a728:	00005100 	andeq	r5, r0, r0, lsl #2
    a72c:	00000000 	andeq	r0, r0, r0
    a730:	00040000 	andeq	r0, r4, r0
    a734:	9f5101f3 	svcls	0x005101f3
	...
    a74c:	00520001 	subseq	r0, r2, r1
    a750:	00000000 	andeq	r0, r0, r0
    a754:	04000000 	streq	r0, [r0], #-0
    a758:	5201f300 	andpl	pc, r1, #0, 6
    a75c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a770:	53000100 	movwpl	r0, #256	; 0x100
	...
    a77c:	01f30004 	mvnseq	r0, r4
    a780:	00009f53 	andeq	r9, r0, r3, asr pc
    a784:	00000000 	andeq	r0, r0, r0
    a788:	00040000 	andeq	r0, r4, r0
	...
    a794:	00540001 	subseq	r0, r4, r1
	...
    a7a4:	02000000 	andeq	r0, r0, #0
    a7a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    a7ac:	00000000 	andeq	r0, r0, r0
    a7b0:	02000000 	andeq	r0, r0, #0
    a7b4:	00187d00 	andseq	r7, r8, r0, lsl #26
    a7b8:	00000000 	andeq	r0, r0, r0
    a7bc:	02000000 	andeq	r0, r0, #0
    a7c0:	00207d00 	eoreq	r7, r0, r0, lsl #26
    a7c4:	00000000 	andeq	r0, r0, r0
    a7c8:	02000000 	andeq	r0, r0, #0
    a7cc:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a7e0:	01000000 	mrseq	r0, (UNDEF: 0)
    a7e4:	00005000 	andeq	r5, r0, r0
    a7e8:	00000000 	andeq	r0, r0, r0
    a7ec:	00010000 	andeq	r0, r1, r0
    a7f0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a804:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a810:	00580001 	subseq	r0, r8, r1
	...
    a824:	01000000 	mrseq	r0, (UNDEF: 0)
    a828:	00005200 	andeq	r5, r0, r0, lsl #4
    a82c:	00000000 	andeq	r0, r0, r0
    a830:	00010000 	andeq	r0, r1, r0
    a834:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a848:	53000100 	movwpl	r0, #256	; 0x100
	...
    a854:	00550001 	subseq	r0, r5, r1
	...
    a868:	01000000 	mrseq	r0, (UNDEF: 0)
    a86c:	00005000 	andeq	r5, r0, r0
    a870:	00000000 	andeq	r0, r0, r0
    a874:	00010000 	andeq	r0, r1, r0
    a878:	00000056 	andeq	r0, r0, r6, asr r0
    a87c:	00000000 	andeq	r0, r0, r0
    a880:	00310c00 	eorseq	r0, r1, r0, lsl #24
    a884:	00310e10 	eorseq	r0, r1, r0, lsl lr
    a888:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a88c:	00310e00 	eorseq	r0, r1, r0, lsl #28
    a890:	00311010 	eorseq	r1, r1, r0, lsl r0
    a894:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a898:	00311008 	eorseq	r1, r1, r8
    a89c:	00315410 	eorseq	r5, r1, r0, lsl r4
    a8a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a8a4:	00315428 	eorseq	r5, r1, r8, lsr #8
    a8a8:	00316810 	eorseq	r6, r1, r0, lsl r8
    a8ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a8b0:	00000008 	andeq	r0, r0, r8
    a8b4:	00000000 	andeq	r0, r0, r0
    a8b8:	00000100 	andeq	r0, r0, r0, lsl #2
    a8bc:	10040000 	andne	r0, r4, r0
    a8c0:	4a100031 	bmi	40a98c <__RAM_SIZE+0x30a98c>
    a8c4:	02100031 	andseq	r0, r0, #49	; 0x31
    a8c8:	4a9f3000 	bmi	fe7d68d0 <__StackTop+0xc66d68d0>
    a8cc:	4c100031 	ldcmi	0, cr0, [r0], {49}	; 0x31
    a8d0:	02100031 	andseq	r0, r0, #49	; 0x31
    a8d4:	4c9f3100 	ldfmis	f3, [pc], {0}
    a8d8:	52100031 	andspl	r0, r0, #49	; 0x31
    a8dc:	02100031 	andseq	r0, r0, #49	; 0x31
    a8e0:	009f3000 	addseq	r3, pc, r0
	...
    a8f0:	02000000 	andeq	r0, r0, #0
    a8f4:	00007d00 	andeq	r7, r0, r0, lsl #26
    a8f8:	00000000 	andeq	r0, r0, r0
    a8fc:	02000000 	andeq	r0, r0, #0
    a900:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a914:	01000000 	mrseq	r0, (UNDEF: 0)
    a918:	00005000 	andeq	r5, r0, r0
    a91c:	00000000 	andeq	r0, r0, r0
    a920:	00010000 	andeq	r0, r1, r0
    a924:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a938:	53000100 	movwpl	r0, #256	; 0x100
	...
    a944:	00530001 	subseq	r0, r3, r1
    a948:	00000000 	andeq	r0, r0, r0
    a94c:	02000000 	andeq	r0, r0, #0
	...
    a958:	02000000 	andeq	r0, r0, #0
    a95c:	009f3000 	addseq	r3, pc, r0
    a960:	00000000 	andeq	r0, r0, r0
    a964:	01000000 	mrseq	r0, (UNDEF: 0)
    a968:	00005400 	andeq	r5, r0, r0, lsl #8
    a96c:	00000000 	andeq	r0, r0, r0
    a970:	00020000 	andeq	r0, r2, r0
	...
    a97c:	00020000 	andeq	r0, r2, r0
    a980:	00009f30 	andeq	r9, r0, r0, lsr pc
    a984:	00000000 	andeq	r0, r0, r0
    a988:	00010000 	andeq	r0, r1, r0
    a98c:	00000055 	andeq	r0, r0, r5, asr r0
    a990:	00000000 	andeq	r0, r0, r0
    a994:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    a9a0:	09000300 	stmdbeq	r0, {r8, r9}
    a9a4:	00009fff 	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    a9a8:	00000000 	andeq	r0, r0, r0
    a9ac:	00010000 	andeq	r0, r1, r0
    a9b0:	00000056 	andeq	r0, r0, r6, asr r0
    a9b4:	00000000 	andeq	r0, r0, r0
    a9b8:	0031c000 	eorseq	ip, r1, r0
    a9bc:	0031f410 	eorseq	pc, r1, r0, lsl r4	; <UNPREDICTABLE>
    a9c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9c4:	0031f400 	eorseq	pc, r1, r0, lsl #8
    a9c8:	00321210 	eorseq	r1, r2, r0, lsl r2
    a9cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9d0:	00321204 	eorseq	r1, r2, r4, lsl #4
    a9d4:	00321410 	eorseq	r1, r2, r0, lsl r4
    a9d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9dc:	00321400 	eorseq	r1, r2, r0, lsl #8
    a9e0:	00321810 	eorseq	r1, r2, r0, lsl r8
    a9e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9e8:	00321804 	eorseq	r1, r2, r4, lsl #16
    a9ec:	00322410 	eorseq	r2, r2, r0, lsl r4
    a9f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    aa00:	00000101 	andeq	r0, r0, r1, lsl #2
    aa04:	0031c000 	eorseq	ip, r1, r0
    aa08:	0031ea10 	eorseq	lr, r1, r0, lsl sl
    aa0c:	50000110 	andpl	r0, r0, r0, lsl r1
    aa10:	100031ea 	andne	r3, r0, sl, ror #3
    aa14:	100031ee 	andne	r3, r0, lr, ror #3
    aa18:	01f30004 	mvnseq	r0, r4
    aa1c:	31ee9f50 	mvncc	r9, r0, asr pc
    aa20:	31f21000 	mvnscc	r1, r0
    aa24:	00011000 	andeq	r1, r1, r0
    aa28:	0031f252 	eorseq	pc, r1, r2, asr r2	; <UNPREDICTABLE>
    aa2c:	00322410 	eorseq	r2, r2, r0, lsl r4
    aa30:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    aa3c:	00000004 	andeq	r0, r0, r4
    aa40:	31c00000 	biccc	r0, r0, r0
    aa44:	31c21000 	biccc	r1, r2, r0
    aa48:	00061000 	andeq	r1, r6, r0
    aa4c:	008cf803 	addeq	pc, ip, r3, lsl #16
    aa50:	31c29f38 	biccc	r9, r2, r8, lsr pc
    aa54:	31c61000 	biccc	r1, r6, r0
    aa58:	00011000 	andeq	r1, r1, r0
    aa5c:	0031c653 	eorseq	ip, r1, r3, asr r6
    aa60:	00322410 	eorseq	r2, r2, r0, lsl r4
    aa64:	52000110 	andpl	r0, r0, #16, 2
	...
    aa70:	00020203 	andeq	r0, r2, r3, lsl #4
    aa74:	00000000 	andeq	r0, r0, r0
    aa78:	100031ca 	andne	r3, r0, sl, asr #3
    aa7c:	100031d4 	ldrdne	r3, [r0], -r4
    aa80:	d4520001 	ldrble	r0, [r2], #-1
    aa84:	e8100031 	ldmda	r0, {r0, r4, r5}
    aa88:	01100031 	tsteq	r0, r1, lsr r0
    aa8c:	31e85000 	mvncc	r5, r0
    aa90:	31f21000 	mvnscc	r1, r0
    aa94:	00011000 	andeq	r1, r1, r0
    aa98:	0031f252 	eorseq	pc, r1, r2, asr r2	; <UNPREDICTABLE>
    aa9c:	00322410 	eorseq	r2, r2, r0, lsl r4
    aaa0:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    aaac:	31960001 	orrscc	r0, r6, r1
    aab0:	31a61000 			; <UNDEFINED> instruction: 0x31a61000
    aab4:	00011000 	andeq	r1, r1, r0
    aab8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    aac4:	00317200 	eorseq	r7, r1, r0, lsl #4
    aac8:	00317e10 	eorseq	r7, r1, r0, lsl lr
    aacc:	51000110 	tstpl	r0, r0, lsl r1
    aad0:	1000317e 	andne	r3, r0, lr, ror r1
    aad4:	100031a6 	andne	r3, r0, r6, lsr #3
    aad8:	00520001 	subseq	r0, r2, r1
	...
    aae4:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    aae8:	9e100031 	mrcls	0, 0, r0, cr0, cr1, {1}
    aaec:	01100031 	tsteq	r0, r1, lsr r0
    aaf0:	319e5300 	orrscc	r5, lr, r0, lsl #6
    aaf4:	31a61000 			; <UNDEFINED> instruction: 0x31a61000
    aaf8:	00021000 	andeq	r1, r2, r0
    aafc:	00000072 	andeq	r0, r0, r2, ror r0
    ab00:	00000000 	andeq	r0, r0, r0
    ab04:	00040000 	andeq	r0, r4, r0
    ab08:	00000000 	andeq	r0, r0, r0
    ab0c:	10003168 	andne	r3, r0, r8, ror #2
    ab10:	1000317c 	andne	r3, r0, ip, ror r1
    ab14:	000a0004 	andeq	r0, sl, r4
    ab18:	317c9f80 	cmncc	ip, r0, lsl #31
    ab1c:	31881000 	orrcc	r1, r8, r0
    ab20:	00011000 	andeq	r1, r1, r0
    ab24:	0031a653 	eorseq	sl, r1, r3, asr r6
    ab28:	0031c010 	eorseq	ip, r1, r0, lsl r0
    ab2c:	0a000410 	beq	bb74 <__HEAP_SIZE+0xab74>
    ab30:	009f8000 	addseq	r8, pc, r0
	...
    ab40:	02000000 	andeq	r0, r0, #0
    ab44:	00007d00 	andeq	r7, r0, r0, lsl #26
    ab48:	00000000 	andeq	r0, r0, r0
    ab4c:	02000000 	andeq	r0, r0, #0
    ab50:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    ab68:	01000000 	mrseq	r0, (UNDEF: 0)
    ab6c:	00005000 	andeq	r5, r0, r0
    ab70:	00000000 	andeq	r0, r0, r0
    ab74:	00010000 	andeq	r0, r1, r0
    ab78:	00000053 	andeq	r0, r0, r3, asr r0
    ab7c:	00000000 	andeq	r0, r0, r0
    ab80:	f3000400 	vshl.u8	d0, d0, d0
    ab84:	009f5001 	addseq	r5, pc, r1
    ab88:	00000000 	andeq	r0, r0, r0
    ab8c:	01000000 	mrseq	r0, (UNDEF: 0)
    ab90:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    aba8:	00510001 	subseq	r0, r1, r1
    abac:	00000000 	andeq	r0, r0, r0
    abb0:	04000000 	streq	r0, [r0], #-0
    abb4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    abb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    abbc:	00000000 	andeq	r0, r0, r0
    abc0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    abcc:	00000001 	andeq	r0, r0, r1
	...
    abdc:	9f300002 	svcls	0x00300002
	...
    abe8:	00500001 	subseq	r0, r0, r1
    abec:	00000000 	andeq	r0, r0, r0
    abf0:	01000000 	mrseq	r0, (UNDEF: 0)
    abf4:	00005500 	andeq	r5, r0, r0, lsl #10
    abf8:	00000000 	andeq	r0, r0, r0
    abfc:	00020000 	andeq	r0, r2, r0
    ac00:	00009f30 	andeq	r9, r0, r0, lsr pc
    ac04:	00000000 	andeq	r0, r0, r0
    ac08:	32f80000 	rscscc	r0, r8, #0
    ac0c:	32fc1000 	rscscc	r1, ip, #0
    ac10:	00021000 	andeq	r1, r2, r0
    ac14:	32fc007d 	rscscc	r0, ip, #125	; 0x7d
    ac18:	333e1000 	teqcc	lr, #0
    ac1c:	00021000 	andeq	r1, r2, r0
    ac20:	333e107d 	teqcc	lr, #125	; 0x7d
    ac24:	33481000 	movtcc	r1, #32768	; 0x8000
    ac28:	00021000 	andeq	r1, r2, r0
    ac2c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    ac40:	100032f8 	strdne	r3, [r0], -r8
    ac44:	10003310 	andne	r3, r0, r0, lsl r3
    ac48:	10500001 	subsne	r0, r0, r1
    ac4c:	12100033 	andsne	r0, r0, #51	; 0x33
    ac50:	01100033 	tsteq	r0, r3, lsr r0
    ac54:	33125400 	tstcc	r2, #0, 8
    ac58:	331d1000 	tstcc	sp, #0
    ac5c:	00011000 	andeq	r1, r1, r0
    ac60:	00331d50 	eorseq	r1, r3, r0, asr sp
    ac64:	00333e10 	eorseq	r3, r3, r0, lsl lr
    ac68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    ac6c:	1000333e 	andne	r3, r0, lr, lsr r3
    ac70:	10003348 	andne	r3, r0, r8, asr #6
    ac74:	00500001 	subseq	r0, r0, r1
    ac78:	00000000 	andeq	r0, r0, r0
    ac7c:	02000000 	andeq	r0, r0, #0
    ac80:	00000000 	andeq	r0, r0, r0
    ac84:	0032f800 	eorseq	pc, r2, r0, lsl #16
    ac88:	00330210 	eorseq	r0, r3, r0, lsl r2
    ac8c:	50000110 	andpl	r0, r0, r0, lsl r1
    ac90:	10003302 	andne	r3, r0, r2, lsl #6
    ac94:	1000333e 	andne	r3, r0, lr, lsr r3
    ac98:	3e550001 	cdpcc	0, 5, cr0, cr5, cr1, {0}
    ac9c:	48100033 	ldmdami	r0, {r0, r1, r4, r5}
    aca0:	01100033 	tsteq	r0, r3, lsr r0
    aca4:	00005000 	andeq	r5, r0, r0
    aca8:	00000000 	andeq	r0, r0, r0
    acac:	00010000 	andeq	r0, r1, r0
    acb0:	10003302 	andne	r3, r0, r2, lsl #6
    acb4:	1000333e 	andne	r3, r0, lr, lsr r3
    acb8:	00550001 	subseq	r0, r5, r1
    acbc:	00000000 	andeq	r0, r0, r0
    acc0:	24000000 	strcs	r0, [r0], #-0
    acc4:	26100032 			; <UNDEFINED> instruction: 0x26100032
    acc8:	02100032 	andseq	r0, r0, #50	; 0x32
    accc:	26007d00 	strcs	r7, [r0], -r0, lsl #26
    acd0:	f8100032 			; <UNDEFINED> instruction: 0xf8100032
    acd4:	02100032 	andseq	r0, r0, #50	; 0x32
    acd8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    acec:	24000000 	strcs	r0, [r0], #-0
    acf0:	32100032 	andscc	r0, r0, #50	; 0x32
    acf4:	01100032 	tsteq	r0, r2, lsr r0
    acf8:	32325000 	eorscc	r5, r2, #0
    acfc:	32461000 	subcc	r1, r6, #0
    ad00:	00011000 	andeq	r1, r1, r0
    ad04:	00324654 	eorseq	r4, r2, r4, asr r6
    ad08:	00324810 	eorseq	r4, r2, r0, lsl r8
    ad0c:	50000110 	andpl	r0, r0, r0, lsl r1
    ad10:	10003248 	andne	r3, r0, r8, asr #4
    ad14:	1000326a 	andne	r3, r0, sl, ror #4
    ad18:	6a540001 	bvs	150ad24 <__RAM_SIZE+0x140ad24>
    ad1c:	6c100032 	ldcvs	0, cr0, [r0], {50}	; 0x32
    ad20:	03100032 	tsteq	r0, #50	; 0x32
    ad24:	9f087000 	svcls	0x00087000
    ad28:	1000326c 	andne	r3, r0, ip, ror #4
    ad2c:	100032f8 	strdne	r3, [r0], -r8
    ad30:	00540001 	subseq	r0, r4, r1
	...
    ad40:	00326600 	eorseq	r6, r2, r0, lsl #12
    ad44:	00326810 	eorseq	r6, r2, r0, lsl r8
    ad48:	53000110 	movwpl	r0, #272	; 0x110
    ad4c:	10003272 	andne	r3, r0, r2, ror r2
    ad50:	100032c8 	andne	r3, r0, r8, asr #5
    ad54:	e0530001 	subs	r0, r3, r1
    ad58:	f8100032 			; <UNDEFINED> instruction: 0xf8100032
    ad5c:	01100032 	tsteq	r0, r2, lsr r0
    ad60:	00005300 	andeq	r5, r0, r0, lsl #6
    ad64:	00000000 	andeq	r0, r0, r0
    ad68:	00010000 	andeq	r0, r1, r0
    ad6c:	00000000 	andeq	r0, r0, r0
    ad70:	32620000 	rsbcc	r0, r2, #0
    ad74:	32681000 	rsbcc	r1, r8, #0
    ad78:	00061000 	andeq	r1, r6, r0
    ad7c:	008cf803 	addeq	pc, ip, r3, lsl #16
    ad80:	32729f38 	rsbscc	r9, r2, #56, 30	; 0xe0
    ad84:	32741000 	rsbscc	r1, r4, #0
    ad88:	00011000 	andeq	r1, r1, r0
    ad8c:	00327651 	eorseq	r7, r2, r1, asr r6
    ad90:	0032a810 	eorseq	sl, r2, r0, lsl r8
    ad94:	51000110 	tstpl	r0, r0, lsl r1
    ad98:	100032e0 	andne	r3, r0, r0, ror #5
    ad9c:	100032f8 	strdne	r3, [r0], -r8
    ada0:	00510001 	subseq	r0, r1, r1
	...
    adac:	00329c00 	eorseq	r9, r2, r0, lsl #24
    adb0:	0032a610 	eorseq	sl, r2, r0, lsl r6
    adb4:	52000110 	andpl	r0, r0, #16, 2
	...
    adc0:	00000004 	andeq	r0, r0, r4
    adc4:	32260000 	eorcc	r0, r6, #0
    adc8:	328e1000 	addcc	r1, lr, #0
    adcc:	00021000 	andeq	r1, r2, r0
    add0:	328e9f30 	addcc	r9, lr, #48, 30	; 0xc0
    add4:	32d41000 	sbcscc	r1, r4, #0
    add8:	00011000 	andeq	r1, r1, r0
    addc:	0032d455 	eorseq	sp, r2, r5, asr r4
    ade0:	0032f810 	eorseq	pc, r2, r0, lsl r8	; <UNPREDICTABLE>
    ade4:	30000210 	andcc	r0, r0, r0, lsl r2
    ade8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    adf4:	00323c00 	eorseq	r3, r2, r0, lsl #24
    adf8:	00324610 	eorseq	r4, r2, r0, lsl r6
    adfc:	53000110 	movwpl	r0, #272	; 0x110
    ae00:	10003268 	andne	r3, r0, r8, ror #4
    ae04:	1000326c 	andne	r3, r0, ip, ror #4
    ae08:	00530001 	subseq	r0, r3, r1
	...
    ae1c:	53000100 	movwpl	r0, #256	; 0x100
	...
    ae28:	100035c8 	andne	r3, r0, r8, asr #11
    ae2c:	100035ca 	andne	r3, r0, sl, asr #11
    ae30:	007d0002 	rsbseq	r0, sp, r2
    ae34:	100035ca 	andne	r3, r0, sl, asr #11
    ae38:	10003608 	andne	r3, r0, r8, lsl #12
    ae3c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    ae48:	10003538 	andne	r3, r0, r8, lsr r5
    ae4c:	1000353a 	andne	r3, r0, sl, lsr r5
    ae50:	007d0002 	rsbseq	r0, sp, r2
    ae54:	1000353a 	andne	r3, r0, sl, lsr r5
    ae58:	100035c2 	andne	r3, r0, r2, asr #11
    ae5c:	047d0002 	ldrbteq	r0, [sp], #-2
    ae60:	100035c2 	andne	r3, r0, r2, asr #11
    ae64:	100035c8 	andne	r3, r0, r8, asr #11
    ae68:	007d0002 	rsbseq	r0, sp, r2
	...
    ae74:	01010100 	mrseq	r0, (UNDEF: 17)
    ae78:	01010101 	tsteq	r1, r1, lsl #2
    ae7c:	01010101 	tsteq	r1, r1, lsl #2
    ae80:	01010101 	tsteq	r1, r1, lsl #2
    ae84:	01010101 	tsteq	r1, r1, lsl #2
    ae88:	01010101 	tsteq	r1, r1, lsl #2
    ae8c:	01010101 	tsteq	r1, r1, lsl #2
    ae90:	01010101 	tsteq	r1, r1, lsl #2
    ae94:	01010101 	tsteq	r1, r1, lsl #2
    ae98:	00000001 	andeq	r0, r0, r1
    ae9c:	10003538 	andne	r3, r0, r8, lsr r5
    aea0:	1000353a 	andne	r3, r0, sl, lsr r5
    aea4:	3a500001 	bcc	140aeb0 <__RAM_SIZE+0x130aeb0>
    aea8:	42100035 	andsmi	r0, r0, #53	; 0x35
    aeac:	03100035 	tsteq	r0, #53	; 0x35
    aeb0:	9f7c7000 	svcls	0x007c7000
    aeb4:	10003542 	andne	r3, r0, r2, asr #10
    aeb8:	10003546 	andne	r3, r0, r6, asr #10
    aebc:	78700003 	ldmdavc	r0!, {r0, r1}^
    aec0:	0035469f 	mlaseq	r5, pc, r6, r4	; <UNPREDICTABLE>
    aec4:	00354c10 	eorseq	r4, r5, r0, lsl ip
    aec8:	70000310 	andvc	r0, r0, r0, lsl r3
    aecc:	354c9f74 	strbcc	r9, [ip, #-3956]	; 0xfffff08c
    aed0:	35541000 	ldrbcc	r1, [r4, #-0]
    aed4:	00031000 	andeq	r1, r3, r0
    aed8:	549f7070 	ldrpl	r7, [pc], #112	; aee0 <__HEAP_SIZE+0x9ee0>
    aedc:	5c100035 	ldcpl	0, cr0, [r0], {53}	; 0x35
    aee0:	03100035 	tsteq	r0, #53	; 0x35
    aee4:	9f6c7000 	svcls	0x006c7000
    aee8:	1000355c 	andne	r3, r0, ip, asr r5
    aeec:	10003564 	andne	r3, r0, r4, ror #10
    aef0:	68700003 	ldmdavs	r0!, {r0, r1}^
    aef4:	0035649f 	mlaseq	r5, pc, r4, r6	; <UNPREDICTABLE>
    aef8:	00356c10 	eorseq	r6, r5, r0, lsl ip
    aefc:	70000310 	andvc	r0, r0, r0, lsl r3
    af00:	356c9f64 	strbcc	r9, [ip, #-3940]!	; 0xfffff09c
    af04:	35701000 	ldrbcc	r1, [r0, #-0]!
    af08:	00031000 	andeq	r1, r3, r0
    af0c:	709f6070 	addsvc	r6, pc, r0, ror r0	; <UNPREDICTABLE>
    af10:	78100035 	ldmdavc	r0, {r0, r2, r4, r5}
    af14:	03100035 	tsteq	r0, #53	; 0x35
    af18:	9f5c7000 	svcls	0x005c7000
    af1c:	10003578 	andne	r3, r0, r8, ror r5
    af20:	10003580 	andne	r3, r0, r0, lsl #11
    af24:	58700003 	ldmdapl	r0!, {r0, r1}^
    af28:	0035809f 	mlaseq	r5, pc, r0, r8	; <UNPREDICTABLE>
    af2c:	00358810 	eorseq	r8, r5, r0, lsl r8
    af30:	70000310 	andvc	r0, r0, r0, lsl r3
    af34:	35889f54 	strcc	r9, [r8, #3924]	; 0xf54
    af38:	35901000 	ldrcc	r1, [r0]
    af3c:	00031000 	andeq	r1, r3, r0
    af40:	909f5070 	addsls	r5, pc, r0, ror r0	; <UNPREDICTABLE>
    af44:	98100035 	ldmdals	r0, {r0, r2, r4, r5}
    af48:	03100035 	tsteq	r0, #53	; 0x35
    af4c:	9f4c7000 	svcls	0x004c7000
    af50:	10003598 	mulne	r0, r8, r5
    af54:	100035a0 	andne	r3, r0, r0, lsr #11
    af58:	48700003 	ldmdami	r0!, {r0, r1}^
    af5c:	0035a09f 	mlaseq	r5, pc, r0, sl	; <UNPREDICTABLE>
    af60:	0035a810 	eorseq	sl, r5, r0, lsl r8
    af64:	70000310 	andvc	r0, r0, r0, lsl r3
    af68:	35a89f44 	strcc	r9, [r8, #3908]!	; 0xf44
    af6c:	35b01000 	ldrcc	r1, [r0, #0]!
    af70:	00031000 	andeq	r1, r3, r0
    af74:	b09f4070 	addslt	r4, pc, r0, ror r0	; <UNPREDICTABLE>
    af78:	b8100035 	ldmdalt	r0, {r0, r2, r4, r5}
    af7c:	04100035 	ldreq	r0, [r0], #-53	; 0xffffffcb
    af80:	7fbc7000 	svcvc	0x00bc7000
    af84:	0035b89f 	mlaseq	r5, pc, r8, fp	; <UNPREDICTABLE>
    af88:	0035be10 	eorseq	fp, r5, r0, lsl lr
    af8c:	70000410 	andvc	r0, r0, r0, lsl r4
    af90:	be9f7fb8 	mrclt	15, 4, r7, cr15, cr8, {5}
    af94:	c8100035 	ldmdagt	r0, {r0, r2, r4, r5}
    af98:	01100035 	tsteq	r0, r5, lsr r0
    af9c:	00005000 	andeq	r5, r0, r0
	...
    afac:	10003538 	andne	r3, r0, r8, lsr r5
    afb0:	10003548 	andne	r3, r0, r8, asr #10
    afb4:	48520001 	ldmdami	r2, {r0}^
    afb8:	be100035 	mrclt	0, 0, r0, cr0, cr5, {1}
    afbc:	02100035 	andseq	r0, r0, #53	; 0x35
    afc0:	be787000 	cdplt	0, 7, cr7, cr8, cr0, {0}
    afc4:	c8100035 	ldmdagt	r0, {r0, r2, r4, r5}
    afc8:	03100035 	tsteq	r0, #53	; 0x35
    afcc:	00c07000 	sbceq	r7, r0, r0
	...
    afdc:	35380000 	ldrcc	r0, [r8, #-0]!
    afe0:	35741000 	ldrbcc	r1, [r4, #-0]!
    afe4:	00011000 	andeq	r1, r1, r0
    afe8:	00357453 	eorseq	r7, r5, r3, asr r4
    afec:	0035be10 	eorseq	fp, r5, r0, lsl lr
    aff0:	70000210 	andvc	r0, r0, r0, lsl r2
    aff4:	0035be60 	eorseq	fp, r5, r0, ror #28
    aff8:	0035c810 	eorseq	ip, r5, r0, lsl r8
    affc:	70000210 	andvc	r0, r0, r0, lsl r2
    b000:	00000028 	andeq	r0, r0, r8, lsr #32
    b004:	00000000 	andeq	r0, r0, r0
    b008:	00352200 	eorseq	r2, r5, r0, lsl #4
    b00c:	00352410 	eorseq	r2, r5, r0, lsl r4
    b010:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b014:	00352400 	eorseq	r2, r5, r0, lsl #8
    b018:	00353610 	eorseq	r3, r5, r0, lsl r6
    b01c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b020:	00000008 	andeq	r0, r0, r8
	...
    b030:	00352200 	eorseq	r2, r5, r0, lsl #4
    b034:	00352e10 	eorseq	r2, r5, r0, lsl lr
    b038:	50000110 	andpl	r0, r0, r0, lsl r1
    b03c:	1000352e 	andne	r3, r0, lr, lsr #10
    b040:	10003530 	andne	r3, r0, r0, lsr r5
    b044:	01f30004 	mvnseq	r0, r4
    b048:	35309f50 	ldrcc	r9, [r0, #-3920]!	; 0xfffff0b0
    b04c:	35331000 	ldrcc	r1, [r3, #-0]!
    b050:	00011000 	andeq	r1, r1, r0
    b054:	00353350 	eorseq	r3, r5, r0, asr r3
    b058:	00353610 	eorseq	r3, r5, r0, lsl r6
    b05c:	f3000410 	vqshl.u8	d0, d0, d0
    b060:	009f5001 	addseq	r5, pc, r1
	...
    b070:	00352600 	eorseq	r2, r5, r0, lsl #12
    b074:	00352a10 	eorseq	r2, r5, r0, lsl sl
    b078:	53000110 	movwpl	r0, #272	; 0x110
    b07c:	1000352a 	andne	r3, r0, sl, lsr #10
    b080:	1000352e 	andne	r3, r0, lr, lsr #10
    b084:	18700002 	ldmdane	r0!, {r1}^
    b088:	10003530 	andne	r3, r0, r0, lsr r5
    b08c:	10003533 	andne	r3, r0, r3, lsr r5
    b090:	18700002 	ldmdane	r0!, {r1}^
	...
    b0a0:	1000352a 	andne	r3, r0, sl, lsr #10
    b0a4:	1000352e 	andne	r3, r0, lr, lsr #10
    b0a8:	30530001 	subscc	r0, r3, r1
    b0ac:	33100035 	tstcc	r0, #53	; 0x35
    b0b0:	01100035 	tsteq	r0, r5, lsr r0
    b0b4:	00005300 	andeq	r5, r0, r0, lsl #6
    b0b8:	00000000 	andeq	r0, r0, r0
    b0bc:	35000000 	strcc	r0, [r0, #-0]
    b0c0:	35021000 	strcc	r1, [r2, #-0]
    b0c4:	00021000 	andeq	r1, r2, r0
    b0c8:	3502007d 	strcc	r0, [r2, #-125]	; 0xffffff83
    b0cc:	35221000 	strcc	r1, [r2, #-0]!
    b0d0:	00021000 	andeq	r1, r2, r0
    b0d4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    b0e0:	35080000 	strcc	r0, [r8, #-0]
    b0e4:	350b1000 	strcc	r1, [fp, #-0]
    b0e8:	00011000 	andeq	r1, r1, r0
    b0ec:	00350b50 	eorseq	r0, r5, r0, asr fp
    b0f0:	00352210 	eorseq	r2, r5, r0, lsl r2
    b0f4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    b100:	100034e4 	andne	r3, r0, r4, ror #9
    b104:	100034e6 	andne	r3, r0, r6, ror #9
    b108:	007d0002 	rsbseq	r0, sp, r2
    b10c:	100034e6 	andne	r3, r0, r6, ror #9
    b110:	10003500 	andne	r3, r0, r0, lsl #10
    b114:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b120:	100034c8 	andne	r3, r0, r8, asr #9
    b124:	100034ca 	andne	r3, r0, sl, asr #9
    b128:	007d0002 	rsbseq	r0, sp, r2
    b12c:	100034ca 	andne	r3, r0, sl, asr #9
    b130:	100034e4 	andne	r3, r0, r4, ror #9
    b134:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b140:	10003348 	andne	r3, r0, r8, asr #6
    b144:	1000334a 	andne	r3, r0, sl, asr #6
    b148:	007d0002 	rsbseq	r0, sp, r2
    b14c:	1000334a 	andne	r3, r0, sl, asr #6
    b150:	1000334c 	andne	r3, r0, ip, asr #6
    b154:	047d0002 	ldrbteq	r0, [sp], #-2
    b158:	1000334c 	andne	r3, r0, ip, asr #6
    b15c:	1000335c 	andne	r3, r0, ip, asr r3
    b160:	107d0002 	rsbsne	r0, sp, r2
    b164:	1000335c 	andne	r3, r0, ip, asr r3
    b168:	10003360 	andne	r3, r0, r0, ror #6
    b16c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    b178:	10003360 	andne	r3, r0, r0, ror #6
    b17c:	10003362 	andne	r3, r0, r2, ror #6
    b180:	007d0002 	rsbseq	r0, sp, r2
    b184:	10003362 	andne	r3, r0, r2, ror #6
    b188:	10003474 	andne	r3, r0, r4, ror r4
    b18c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b19c:	00000100 	andeq	r0, r0, r0, lsl #2
    b1a0:	33600000 	cmncc	r0, #0
    b1a4:	336c1000 	cmncc	ip, #0
    b1a8:	00011000 	andeq	r1, r1, r0
    b1ac:	00336c50 	eorseq	r6, r3, r0, asr ip
    b1b0:	00337e10 	eorseq	r7, r3, r0, lsl lr
    b1b4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    b1b8:	10003380 	andne	r3, r0, r0, lsl #7
    b1bc:	1000342a 	andne	r3, r0, sl, lsr #8
    b1c0:	46540001 	ldrbmi	r0, [r4], -r1
    b1c4:	54100034 	ldrpl	r0, [r0], #-52	; 0xffffffcc
    b1c8:	01100034 	tsteq	r0, r4, lsr r0
    b1cc:	34545400 	ldrbcc	r5, [r4], #-1024	; 0xfffffc00
    b1d0:	34561000 	ldrbcc	r1, [r6], #-0
    b1d4:	00031000 	andeq	r1, r3, r0
    b1d8:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
	...
    b1e4:	9a000000 	bls	b1ec <__HEAP_SIZE+0xa1ec>
    b1e8:	12100033 	andsne	r0, r0, #51	; 0x33
    b1ec:	01100034 	tsteq	r0, r4, lsr r0
    b1f0:	34465300 	strbcc	r5, [r6], #-768	; 0xfffffd00
    b1f4:	344c1000 	strbcc	r1, [ip], #-0
    b1f8:	00011000 	andeq	r1, r1, r0
    b1fc:	00000053 	andeq	r0, r0, r3, asr r0
    b200:	00000000 	andeq	r0, r0, r0
    b204:	00000100 	andeq	r0, r0, r0, lsl #2
    b208:	00342a00 	eorseq	r2, r4, r0, lsl #20
    b20c:	00344110 	eorseq	r4, r4, r0, lsl r1
    b210:	50000110 	andpl	r0, r0, r0, lsl r1
    b214:	1000345a 	andne	r3, r0, sl, asr r4
    b218:	10003474 	andne	r3, r0, r4, ror r4
    b21c:	00500001 	subseq	r0, r0, r1
	...
    b228:	56000000 	strpl	r0, [r0], -r0
    b22c:	5a100034 	bpl	40b304 <__RAM_SIZE+0x30b304>
    b230:	01100034 	tsteq	r0, r4, lsr r0
    b234:	345a5000 	ldrbcc	r5, [sl], #-0
    b238:	34601000 	strbtcc	r1, [r0], #-0
    b23c:	00061000 	andeq	r1, r6, r0
    b240:	00730074 	rsbseq	r0, r3, r4, ror r0
    b244:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
    b254:	1000338a 	andne	r3, r0, sl, lsl #7
    b258:	1000338e 	andne	r3, r0, lr, lsl #7
    b25c:	90530001 	subsls	r0, r3, r1
    b260:	9a100033 	bls	40b334 <__RAM_SIZE+0x30b334>
    b264:	01100033 	tsteq	r0, r3, lsr r0
    b268:	344c5300 	strbcc	r5, [ip], #-768	; 0xfffffd00
    b26c:	34741000 	ldrbtcc	r1, [r4], #-0
    b270:	00011000 	andeq	r1, r1, r0
    b274:	00000053 	andeq	r0, r0, r3, asr r0
    b278:	00000000 	andeq	r0, r0, r0
    b27c:	00010100 	andeq	r0, r1, r0, lsl #2
    b280:	d6000000 	strle	r0, [r0], -r0
    b284:	2a100033 	bcs	40b358 <__RAM_SIZE+0x30b358>
    b288:	01100034 	tsteq	r0, r4, lsr r0
    b28c:	34465400 	strbcc	r5, [r6], #-1024	; 0xfffffc00
    b290:	34541000 	ldrbcc	r1, [r4], #-0
    b294:	00011000 	andeq	r1, r1, r0
    b298:	00345454 	eorseq	r5, r4, r4, asr r4
    b29c:	00345610 	eorseq	r5, r4, r0, lsl r6
    b2a0:	70000310 	andvc	r0, r0, r0, lsl r3
    b2a4:	00009f01 	andeq	r9, r0, r1, lsl #30
    b2a8:	00000000 	andeq	r0, r0, r0
    b2ac:	01000000 	mrseq	r0, (UNDEF: 0)
    b2b0:	10003416 	andne	r3, r0, r6, lsl r4
    b2b4:	1000342a 	andne	r3, r0, sl, lsr #8
    b2b8:	00530001 	subseq	r0, r3, r1
    b2bc:	00000000 	andeq	r0, r0, r0
    b2c0:	Address 0x0000b2c0 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000084 	andeq	r0, r0, r4, lsl #1
   4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	10000800 	andne	r0, r0, r0, lsl #16
}
  14:	00000044 	andeq	r0, r0, r4, asr #32
        if(ch == '\n' || it >= size) {
  18:	10000844 	andne	r0, r0, r4, asr #16
}
  1c:	00000014 	andeq	r0, r0, r4, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000010 	andeq	r0, r0, r0, lsl r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	00000000 	andeq	r0, r0, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	00000020 	andeq	r0, r0, r0, lsr #32
  38:	00000000 	andeq	r0, r0, r0
  3c:	0000004c 	andeq	r0, r0, ip, asr #32
  40:	00000000 	andeq	r0, r0, r0
        BaseType_t xReturn = pdFAIL;
  44:	00000068 	andeq	r0, r0, r8, rrx
    }
  48:	00000000 	andeq	r0, r0, r0
        for (int i = 0; i < count; i++) {
  4c:	0000001c 	andeq	r0, r0, ip, lsl r0
        printf("] \r\n");
  50:	00000000 	andeq	r0, r0, r0
}
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	00000000 	andeq	r0, r0, r0
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	00000000 	andeq	r0, r0, r0
  6c:	00000018 	andeq	r0, r0, r8, lsl r0
  70:	00000000 	andeq	r0, r0, r0
  74:	00000018 	andeq	r0, r0, r8, lsl r0
  78:	10000858 	andne	r0, r0, r8, asr r8
  7c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  88:	00000024 	andeq	r0, r0, r4, lsr #32
  8c:	0bb90002 	bleq	fee4009c <__StackTop+0xc6d4009c>
  90:	00040000 	andeq	r0, r4, r0
	...
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	00000010 	andeq	r0, r0, r0, lsl r0
  a0:	10000884 	andne	r0, r0, r4, lsl #17
                else if( xEntryTimeSet == pdFALSE )
  a4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
        prvLockQueue( pxQueue );
  b0:	000000a4 	andeq	r0, r0, r4, lsr #1
  b4:	10a20002 	adcne	r0, r2, r2
  b8:	00040000 	andeq	r0, r4, r0
	...
  c4:	00000008 	andeq	r0, r0, r8
  c8:	100008b0 			; <UNDEFINED> instruction: 0x100008b0
  cc:	00000002 	andeq	r0, r0, r2
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	00000000 	andeq	r0, r0, r0
  d4:	0000000e 	andeq	r0, r0, lr
  d8:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	00000024 	andeq	r0, r0, r4, lsr #32
  e0:	100008d6 	ldrdne	r0, [r0], -r6
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	0000007e 	andeq	r0, r0, lr, ror r0
  e8:	10000954 	andne	r0, r0, r4, asr r9
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	00000138 	andeq	r0, r0, r8, lsr r1
  f0:	10000a8c 	andne	r0, r0, ip, lsl #21
                prvUnlockQueue( pxQueue );
  f4:	00000094 	muleq	r0, r4, r0
  f8:	10000b20 	andne	r0, r0, r0, lsr #22
                if( xTaskResumeAll() == pdFALSE )
  fc:	000000c6 	andeq	r0, r0, r6, asr #1
 100:	10000be8 	andne	r0, r0, r8, ror #23
                    taskYIELD_WITHIN_API();
 104:	000003ea 	andeq	r0, r0, sl, ror #7
                    if( xInheritanceOccurred != pdFALSE )
 108:	10000fd8 	ldrdne	r0, [r0], -r8
                return errQUEUE_EMPTY;
 10c:	00000396 	muleq	r0, r6, r3
                        taskENTER_CRITICAL();
 110:	10001370 	andne	r1, r0, r0, ror r3
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	00000680 	andeq	r0, r0, r0, lsl #13
 118:	100019f0 	strdne	r1, [r0], -r0
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	0000000c 	andeq	r0, r0, ip
                        taskEXIT_CRITICAL();
 120:	100019fc 	strdne	r1, [r0], -ip
 124:	0000002c 	andeq	r0, r0, ip, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	0000002c 	andeq	r0, r0, ip, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	00000028 	andeq	r0, r0, r8, lsr #32
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000020 	andeq	r0, r0, r0, lsr #32
 140:	00000000 	andeq	r0, r0, r0
 144:	0000001c 	andeq	r0, r0, ip, lsl r0
 148:	00000000 	andeq	r0, r0, r0
 14c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 158:	00000044 	andeq	r0, r0, r4, asr #32
 15c:	2c670002 	stclcs	0, cr0, [r7], #-8
 160:	00040000 	andeq	r0, r4, r0
 164:	00000000 	andeq	r0, r0, r0
 168:	10001a28 	andne	r1, r0, r8, lsr #20
 16c:	00000014 	andeq	r0, r0, r4, lsl r0
 170:	00000000 	andeq	r0, r0, r0
 174:	00000014 	andeq	r0, r0, r4, lsl r0
 178:	10001a3c 	andne	r1, r0, ip, lsr sl
 17c:	0000001e 	andeq	r0, r0, lr, lsl r0
 180:	10001a5c 	andne	r1, r0, ip, asr sl
 184:	00000024 	andeq	r0, r0, r4, lsr #32
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000008 	andeq	r0, r0, r8
 190:	00000000 	andeq	r0, r0, r0
 194:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 1a0:	00000054 	andeq	r0, r0, r4, asr r0
 1a4:	2eba0002 	cdpcs	0, 11, cr0, cr10, cr2, {0}
 1a8:	00040000 	andeq	r0, r4, r0
 1ac:	00000000 	andeq	r0, r0, r0
 1b0:	10001a80 	andne	r1, r0, r0, lsl #21
 1b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b8:	10001aac 	andne	r1, r0, ip, lsr #21
 1bc:	00000036 	andeq	r0, r0, r6, lsr r0
 1c0:	10001ae4 	andne	r1, r0, r4, ror #21
 1c4:	00000018 	andeq	r0, r0, r8, lsl r0
 1c8:	10001afc 	strdne	r1, [r0], -ip
 1cc:	00000050 	andeq	r0, r0, r0, asr r0
 1d0:	10001b4c 	andne	r1, r0, ip, asr #22
 1d4:	0000007c 	andeq	r0, r0, ip, ror r0
 1d8:	10001bc8 	andne	r1, r0, r8, asr #23
 1dc:	00000184 	andeq	r0, r0, r4, lsl #3
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	00000006 	andeq	r0, r0, r6
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000008 	andeq	r0, r0, r8
	...
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	376c0002 	strbcc	r0, [ip, -r2]!
 200:	00040000 	andeq	r0, r4, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	10001d4c 	andne	r1, r0, ip, asr #26
 20c:	000000fc 	strdeq	r0, [r0], -ip
	...
 218:	0000003c 	andeq	r0, r0, ip, lsr r0
 21c:	39fd0002 	ldmibcc	sp!, {r1}^
 220:	00040000 	andeq	r0, r4, r0
 224:	00000000 	andeq	r0, r0, r0
 228:	10001e48 	andne	r1, r0, r8, asr #28
 22c:	0000001a 	andeq	r0, r0, sl, lsl r0
 230:	10001e62 	andne	r1, r0, r2, ror #28
 234:	00000006 	andeq	r0, r0, r6
 238:	00000000 	andeq	r0, r0, r0
 23c:	00000016 	andeq	r0, r0, r6, lsl r0
 240:	10001e68 	andne	r1, r0, r8, ror #28
 244:	00000032 	andeq	r0, r0, r2, lsr r0
 248:	10001e9a 	mulne	r0, sl, lr
 24c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 258:	0000015c 	andeq	r0, r0, ip, asr r1
 25c:	3ccc0002 	stclcc	0, cr0, [ip], {2}
 260:	00040000 	andeq	r0, r4, r0
	...
 26c:	00000010 	andeq	r0, r0, r0, lsl r0
 270:	00000000 	andeq	r0, r0, r0
 274:	0000001e 	andeq	r0, r0, lr, lsl r0
 278:	10001ebe 			; <UNDEFINED> instruction: 0x10001ebe
 27c:	0000001a 	andeq	r0, r0, sl, lsl r0
 280:	10001ed8 	ldrdne	r1, [r0], -r8
 284:	00000076 	andeq	r0, r0, r6, ror r0
 288:	10001f4e 	andne	r1, r0, lr, asr #30
 28c:	00000024 	andeq	r0, r0, r4, lsr #32
 290:	10001f72 	andne	r1, r0, r2, ror pc
 294:	00000058 	andeq	r0, r0, r8, asr r0
 298:	10001fca 	andne	r1, r0, sl, asr #31
 29c:	00000082 	andeq	r0, r0, r2, lsl #1
 2a0:	1000204c 	andne	r2, r0, ip, asr #32
 2a4:	00000086 	andeq	r0, r0, r6, lsl #1
 2a8:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 2ac:	00000020 	andeq	r0, r0, r0, lsr #32
 2b0:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 2b4:	0000003e 	andeq	r0, r0, lr, lsr r0
 2b8:	00000000 	andeq	r0, r0, r0
 2bc:	00000018 	andeq	r0, r0, r8, lsl r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000056 	andeq	r0, r0, r6, asr r0
 2c8:	00000000 	andeq	r0, r0, r0
 2cc:	0000002a 	andeq	r0, r0, sl, lsr #32
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000020 	andeq	r0, r0, r0, lsr #32
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	0000010c 	andeq	r0, r0, ip, lsl #2
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	00000018 	andeq	r0, r0, r8, lsl r0
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000016 	andeq	r0, r0, r6, lsl r0
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	00000000 	andeq	r0, r0, r0
 304:	000000bc 	strheq	r0, [r0], -ip
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000086 	andeq	r0, r0, r6, lsl #1
 310:	10002130 	andne	r2, r0, r0, lsr r1
 314:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 318:	00000000 	andeq	r0, r0, r0
 31c:	00000126 	andeq	r0, r0, r6, lsr #2
 320:	00000000 	andeq	r0, r0, r0
 324:	0000002c 	andeq	r0, r0, ip, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 330:	00000000 	andeq	r0, r0, r0
 334:	00000080 	andeq	r0, r0, r0, lsl #1
 338:	00000000 	andeq	r0, r0, r0
 33c:	0000002c 	andeq	r0, r0, ip, lsr #32
 340:	00000000 	andeq	r0, r0, r0
 344:	00000012 	andeq	r0, r0, r2, lsl r0
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000016 	andeq	r0, r0, r6, lsl r0
 350:	00000000 	andeq	r0, r0, r0
 354:	00000004 	andeq	r0, r0, r4
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000010 	andeq	r0, r0, r0, lsl r0
 360:	00000000 	andeq	r0, r0, r0
 364:	00000004 	andeq	r0, r0, r4
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000004 	andeq	r0, r0, r4
 370:	00000000 	andeq	r0, r0, r0
 374:	0000000c 	andeq	r0, r0, ip
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000010 	andeq	r0, r0, r0, lsl r0
 380:	10002220 	andne	r2, r0, r0, lsr #4
 384:	00000052 	andeq	r0, r0, r2, asr r0
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000000c 	andeq	r0, r0, ip
 390:	00000000 	andeq	r0, r0, r0
 394:	00000026 	andeq	r0, r0, r6, lsr #32
 398:	00000000 	andeq	r0, r0, r0
 39c:	00000026 	andeq	r0, r0, r6, lsr #32
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	00000018 	andeq	r0, r0, r8, lsl r0
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 3b8:	0000028c 	andeq	r0, r0, ip, lsl #5
 3bc:	618d0002 	orrvs	r0, sp, r2
 3c0:	00040000 	andeq	r0, r4, r0
	...
 3cc:	00000044 	andeq	r0, r0, r4, asr #32
 3d0:	10002274 	andne	r2, r0, r4, ror r2
 3d4:	00000040 	andeq	r0, r0, r0, asr #32
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	0000003e 	andeq	r0, r0, lr, lsr r0
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	00000012 	andeq	r0, r0, r2, lsl r0
 3e8:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
 3ec:	00000028 	andeq	r0, r0, r8, lsr #32
 3f0:	100022dc 	ldrdne	r2, [r0], -ip
 3f4:	00000096 	muleq	r0, r6, r0
 3f8:	10002372 	andne	r2, r0, r2, ror r3
 3fc:	00000052 	andeq	r0, r0, r2, asr r0
 400:	100023c4 	andne	r2, r0, r4, asr #7
 404:	00000068 	andeq	r0, r0, r8, rrx
 408:	1000242c 	andne	r2, r0, ip, lsr #8
 40c:	000000bc 	strheq	r0, [r0], -ip
 410:	100024e8 	andne	r2, r0, r8, ror #9
 414:	00000062 	andeq	r0, r0, r2, rrx
 418:	1000254a 	andne	r2, r0, sl, asr #10
 41c:	00000024 	andeq	r0, r0, r4, lsr #32
 420:	10002570 	andne	r2, r0, r0, ror r5
 424:	0000004c 	andeq	r0, r0, ip, asr #32
 428:	100025bc 			; <UNDEFINED> instruction: 0x100025bc
 42c:	000000a8 	andeq	r0, r0, r8, lsr #1
 430:	10002664 	andne	r2, r0, r4, ror #12
 434:	00000028 	andeq	r0, r0, r8, lsr #32
 438:	1000268c 	andne	r2, r0, ip, lsl #13
 43c:	00000022 	andeq	r0, r0, r2, lsr #32
 440:	00000000 	andeq	r0, r0, r0
 444:	0000009c 	muleq	r0, ip, r0
 448:	00000000 	andeq	r0, r0, r0
 44c:	0000009c 	muleq	r0, ip, r0
 450:	00000000 	andeq	r0, r0, r0
 454:	00000020 	andeq	r0, r0, r0, lsr #32
 458:	00000000 	andeq	r0, r0, r0
 45c:	00000020 	andeq	r0, r0, r0, lsr #32
 460:	00000000 	andeq	r0, r0, r0
 464:	00000020 	andeq	r0, r0, r0, lsr #32
 468:	00000000 	andeq	r0, r0, r0
 46c:	00000020 	andeq	r0, r0, r0, lsr #32
 470:	00000000 	andeq	r0, r0, r0
 474:	000000d8 	ldrdeq	r0, [r0], -r8
 478:	00000000 	andeq	r0, r0, r0
 47c:	00000084 	andeq	r0, r0, r4, lsl #1
 480:	00000000 	andeq	r0, r0, r0
 484:	000000ac 	andeq	r0, r0, ip, lsr #1
 488:	00000000 	andeq	r0, r0, r0
 48c:	0000003c 	andeq	r0, r0, ip, lsr r0
 490:	100026b0 			; <UNDEFINED> instruction: 0x100026b0
 494:	00000010 	andeq	r0, r0, r0, lsl r0
 498:	100026c0 	andne	r2, r0, r0, asr #13
 49c:	0000000c 	andeq	r0, r0, ip
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	0000000c 	andeq	r0, r0, ip
 4a8:	100026cc 	andne	r2, r0, ip, asr #13
 4ac:	0000000c 	andeq	r0, r0, ip
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	00000014 	andeq	r0, r0, r4, lsl r0
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000034 	andeq	r0, r0, r4, lsr r0
 4c0:	00000000 	andeq	r0, r0, r0
 4c4:	0000000c 	andeq	r0, r0, ip
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	0000000c 	andeq	r0, r0, ip
 4d0:	100026d8 	ldrdne	r2, [r0], -r8
 4d4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4d8:	10002714 	andne	r2, r0, r4, lsl r7
 4dc:	00000160 	andeq	r0, r0, r0, ror #2
 4e0:	10002874 	andne	r2, r0, r4, ror r8
 4e4:	00000130 	andeq	r0, r0, r0, lsr r1
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	0000005c 	andeq	r0, r0, ip, asr r0
 4f0:	100029a4 	andne	r2, r0, r4, lsr #19
 4f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 4f8:	100029c4 	andne	r2, r0, r4, asr #19
 4fc:	00000038 	andeq	r0, r0, r8, lsr r0
 500:	00000000 	andeq	r0, r0, r0
 504:	0000007c 	andeq	r0, r0, ip, ror r0
 508:	00000000 	andeq	r0, r0, r0
 50c:	00000024 	andeq	r0, r0, r4, lsr #32
 510:	00000000 	andeq	r0, r0, r0
 514:	000000a4 	andeq	r0, r0, r4, lsr #1
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000020 	andeq	r0, r0, r0, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000020 	andeq	r0, r0, r0, lsr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000020 	andeq	r0, r0, r0, lsr #32
 530:	00000000 	andeq	r0, r0, r0
 534:	00000020 	andeq	r0, r0, r0, lsr #32
 538:	100029fc 	strdne	r2, [r0], -ip
 53c:	00000084 	andeq	r0, r0, r4, lsl #1
 540:	00000000 	andeq	r0, r0, r0
 544:	000000a4 	andeq	r0, r0, r4, lsr #1
 548:	10002a80 	andne	r2, r0, r0, lsl #21
 54c:	0000001c 	andeq	r0, r0, ip, lsl r0
 550:	00000000 	andeq	r0, r0, r0
 554:	00000040 	andeq	r0, r0, r0, asr #32
 558:	10002a9c 	mulne	r0, ip, sl
 55c:	0000003c 	andeq	r0, r0, ip, lsr r0
 560:	10002ad8 	ldrdne	r2, [r0], -r8
 564:	000000e4 	andeq	r0, r0, r4, ror #1
 568:	00000000 	andeq	r0, r0, r0
 56c:	000000b8 	strheq	r0, [r0], -r8
 570:	00000000 	andeq	r0, r0, r0
 574:	00000024 	andeq	r0, r0, r4, lsr #32
 578:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
 57c:	00000018 	andeq	r0, r0, r8, lsl r0
 580:	10002bd4 	ldrdne	r2, [r0], -r4
 584:	0000007c 	andeq	r0, r0, ip, ror r0
 588:	10002c50 	andne	r2, r0, r0, asr ip
 58c:	0000000c 	andeq	r0, r0, ip
 590:	10002c5c 	andne	r2, r0, ip, asr ip
 594:	00000048 	andeq	r0, r0, r8, asr #32
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000018 	andeq	r0, r0, r8, lsl r0
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	0000000c 	andeq	r0, r0, ip
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	00000010 	andeq	r0, r0, r0, lsl r0
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000020 	andeq	r0, r0, r0, lsr #32
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	000000b8 	strheq	r0, [r0], -r8
 5c0:	10002ca4 	andne	r2, r0, r4, lsr #25
 5c4:	00000080 	andeq	r0, r0, r0, lsl #1
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000090 	muleq	r0, r0, r0
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000018 	andeq	r0, r0, r8, lsl r0
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	00000014 	andeq	r0, r0, r4, lsl r0
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	000000a8 	andeq	r0, r0, r8, lsr #1
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	000000cc 	andeq	r0, r0, ip, asr #1
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000011c 	andeq	r0, r0, ip, lsl r1
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000158 	andeq	r0, r0, r8, asr r1
 600:	00000000 	andeq	r0, r0, r0
 604:	000000ec 	andeq	r0, r0, ip, ror #1
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000038 	andeq	r0, r0, r8, lsr r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000034 	andeq	r0, r0, r4, lsr r0
 618:	10002d24 	andne	r2, r0, r4, lsr #26
 61c:	00000018 	andeq	r0, r0, r8, lsl r0
 620:	10002d3c 	andne	r2, r0, ip, lsr sp
 624:	0000006c 	andeq	r0, r0, ip, rrx
 628:	10002da8 	andne	r2, r0, r8, lsr #27
 62c:	00000048 	andeq	r0, r0, r8, asr #32
 630:	10002df0 	strdne	r2, [r0], -r0
 634:	00000018 	andeq	r0, r0, r8, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000074 	andeq	r0, r0, r4, ror r0
	...
 648:	00000104 	andeq	r0, r0, r4, lsl #2
 64c:	9a810002 	bls	fe04065c <__StackTop+0xc5f4065c>
 650:	00040000 	andeq	r0, r4, r0
 654:	00000000 	andeq	r0, r0, r0
 658:	10002e08 	andne	r2, r0, r8, lsl #28
 65c:	00000020 	andeq	r0, r0, r0, lsr #32
 660:	10002e28 	andne	r2, r0, r8, lsr #28
 664:	00000048 	andeq	r0, r0, r8, asr #32
 668:	10002e70 	andne	r2, r0, r0, ror lr
 66c:	00000028 	andeq	r0, r0, r8, lsr #32
 670:	10002e98 	mulne	r0, r8, lr
 674:	00000040 	andeq	r0, r0, r0, asr #32
 678:	10002ed8 	ldrdne	r2, [r0], -r8
 67c:	00000030 	andeq	r0, r0, r0, lsr r0
 680:	10002f08 	andne	r2, r0, r8, lsl #30
 684:	0000002c 	andeq	r0, r0, ip, lsr #32
 688:	10002f34 	andne	r2, r0, r4, lsr pc
 68c:	00000068 	andeq	r0, r0, r8, rrx
 690:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 694:	000000f8 	strdeq	r0, [r0], -r8
 698:	10003094 	mulne	r0, r4, r0
 69c:	00000016 	andeq	r0, r0, r6, lsl r0
 6a0:	100030ac 	andne	r3, r0, ip, lsr #1
 6a4:	00000060 	andeq	r0, r0, r0, rrx
 6a8:	00000000 	andeq	r0, r0, r0
 6ac:	00000036 	andeq	r0, r0, r6, lsr r0
 6b0:	1000310c 	andne	r3, r0, ip, lsl #2
 6b4:	0000005c 	andeq	r0, r0, ip, asr r0
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	00000038 	andeq	r0, r0, r8, lsr r0
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000020 	andeq	r0, r0, r0, lsr #32
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	0000004c 	andeq	r0, r0, ip, asr #32
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000034 	andeq	r0, r0, r4, lsr r0
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	0000000c 	andeq	r0, r0, ip
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000004 	andeq	r0, r0, r4
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	0000002c 	andeq	r0, r0, ip, lsr #32
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000020 	andeq	r0, r0, r0, lsr #32
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000008 	andeq	r0, r0, r8
 700:	00000000 	andeq	r0, r0, r0
 704:	00000004 	andeq	r0, r0, r4
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000014 	andeq	r0, r0, r4, lsl r0
 710:	00000000 	andeq	r0, r0, r0
 714:	00000004 	andeq	r0, r0, r4
 718:	00000000 	andeq	r0, r0, r0
 71c:	00000020 	andeq	r0, r0, r0, lsr #32
 720:	00000000 	andeq	r0, r0, r0
 724:	00000012 	andeq	r0, r0, r2, lsl r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000012 	andeq	r0, r0, r2, lsl r0
 730:	00000000 	andeq	r0, r0, r0
 734:	00000028 	andeq	r0, r0, r8, lsr #32
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000028 	andeq	r0, r0, r8, lsr #32
 740:	00000000 	andeq	r0, r0, r0
 744:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 750:	00000064 	andeq	r0, r0, r4, rrx
 754:	b4110002 	ldrlt	r0, [r1], #-2
 758:	00040000 	andeq	r0, r4, r0
 75c:	00000000 	andeq	r0, r0, r0
 760:	10003168 	andne	r3, r0, r8, ror #2
 764:	00000058 	andeq	r0, r0, r8, asr r0
 768:	100031c0 	andne	r3, r0, r0, asr #3
 76c:	00000064 	andeq	r0, r0, r4, rrx
 770:	10003224 	andne	r3, r0, r4, lsr #4
 774:	000000d4 	ldrdeq	r0, [r0], -r4
 778:	100032f8 	strdne	r3, [r0], -r8
 77c:	00000050 	andeq	r0, r0, r0, asr r0
 780:	00000000 	andeq	r0, r0, r0
 784:	0000000c 	andeq	r0, r0, ip
 788:	00000000 	andeq	r0, r0, r0
 78c:	0000000c 	andeq	r0, r0, ip
 790:	00000000 	andeq	r0, r0, r0
 794:	00000002 	andeq	r0, r0, r2
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000032 	andeq	r0, r0, r2, lsr r0
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000080 	andeq	r0, r0, r0, lsl #1
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 7b8:	00000074 	andeq	r0, r0, r4, ror r0
 7bc:	ba2a0002 	blt	a807cc <__RAM_SIZE+0x9807cc>
 7c0:	00040000 	andeq	r0, r4, r0
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	10003348 	andne	r3, r0, r8, asr #6
 7cc:	00000018 	andeq	r0, r0, r8, lsl r0
 7d0:	10003360 	andne	r3, r0, r0, ror #6
 7d4:	00000114 	andeq	r0, r0, r4, lsl r1
 7d8:	10003474 	andne	r3, r0, r4, ror r4
 7dc:	0000003c 	andeq	r0, r0, ip, lsr r0
 7e0:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
 7e4:	00000016 	andeq	r0, r0, r6, lsl r0
 7e8:	100034c8 	andne	r3, r0, r8, asr #9
 7ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 7f0:	100034e4 	andne	r3, r0, r4, ror #9
 7f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 7f8:	10003500 	andne	r3, r0, r0, lsl #10
 7fc:	00000022 	andeq	r0, r0, r2, lsr #32
 800:	10003522 	andne	r3, r0, r2, lsr #10
 804:	00000014 	andeq	r0, r0, r4, lsl r0
 808:	10003538 	andne	r3, r0, r8, lsr r5
 80c:	00000090 	muleq	r0, r0, r0
 810:	100035c8 	andne	r3, r0, r8, asr #11
 814:	00000040 	andeq	r0, r0, r0, asr #32
 818:	00000000 	andeq	r0, r0, r0
 81c:	00000002 	andeq	r0, r0, r2
 820:	00000000 	andeq	r0, r0, r0
 824:	0000000e 	andeq	r0, r0, lr
	...
 830:	0000005c 	andeq	r0, r0, ip, asr r0
 834:	bf910002 	svclt	0x00910002
 838:	00040000 	andeq	r0, r4, r0
 83c:	00000000 	andeq	r0, r0, r0
 840:	10003608 	andne	r3, r0, r8, lsl #12
 844:	00000026 	andeq	r0, r0, r6, lsr #32
 848:	00000000 	andeq	r0, r0, r0
 84c:	00000010 	andeq	r0, r0, r0, lsl r0
 850:	00000000 	andeq	r0, r0, r0
 854:	0000000e 	andeq	r0, r0, lr
 858:	00000000 	andeq	r0, r0, r0
 85c:	0000000e 	andeq	r0, r0, lr
 860:	10003634 	andne	r3, r0, r4, lsr r6
 864:	0000001a 	andeq	r0, r0, sl, lsl r0
 868:	10003654 	andne	r3, r0, r4, asr r6
 86c:	00000016 	andeq	r0, r0, r6, lsl r0
 870:	1000366a 	andne	r3, r0, sl, ror #12
 874:	0000000e 	andeq	r0, r0, lr
 878:	10003678 	andne	r3, r0, r8, ror r6
 87c:	00000044 	andeq	r0, r0, r4, asr #32
 880:	100036c0 	andne	r3, r0, r0, asr #13
 884:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 890:	0000001c 	andeq	r0, r0, ip, lsl r0
 894:	c10f0002 	tstgt	pc, r2
 898:	00040000 	andeq	r0, r4, r0
 89c:	00000000 	andeq	r0, r0, r0
 8a0:	100036f8 	strdne	r3, [r0], -r8
 8a4:	00000070 	andeq	r0, r0, r0, ror r0
	...
 8b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 8b4:	c1350002 	teqgt	r5, r2
 8b8:	00040000 	andeq	r0, r4, r0
 8bc:	00000000 	andeq	r0, r0, r0
 8c0:	10003768 	andne	r3, r0, r8, ror #14
 8c4:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000001 	andeq	r0, r0, r1
        xReturn = pdFALSE;
   8:	00000001 	andeq	r0, r0, r1
}
   c:	00000001 	andeq	r0, r0, r1
	...
        if(ch == '\n' || it >= size) {
  18:	10000800 	andne	r0, r0, r0, lsl #16
}
  1c:	10000844 	andne	r0, r0, r4, asr #16
  20:	10000844 	andne	r0, r0, r4, asr #16
  24:	10000858 	andne	r0, r0, r8, asr r8
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	00000001 	andeq	r0, r0, r1
  38:	00000001 	andeq	r0, r0, r1
  3c:	00000001 	andeq	r0, r0, r1
  40:	00000001 	andeq	r0, r0, r1
        BaseType_t xReturn = pdFAIL;
  44:	00000001 	andeq	r0, r0, r1
    }
  48:	00000001 	andeq	r0, r0, r1
        for (int i = 0; i < count; i++) {
  4c:	00000001 	andeq	r0, r0, r1
        printf("] \r\n");
  50:	00000001 	andeq	r0, r0, r1
}
  54:	00000001 	andeq	r0, r0, r1
  58:	00000001 	andeq	r0, r0, r1
  5c:	00000001 	andeq	r0, r0, r1
  60:	00000001 	andeq	r0, r0, r1
  64:	00000001 	andeq	r0, r0, r1
  68:	00000001 	andeq	r0, r0, r1
  6c:	00000001 	andeq	r0, r0, r1
  70:	00000001 	andeq	r0, r0, r1
  74:	00000001 	andeq	r0, r0, r1
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
            prvUnlockQueue( pxQueue );
  80:	10000858 	andne	r0, r0, r8, asr r8
            ( void ) xTaskResumeAll();
  84:	10000884 	andne	r0, r0, r4, lsl #17
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  90:	00000001 	andeq	r0, r0, r1
        taskENTER_CRITICAL();
  94:	00000001 	andeq	r0, r0, r1
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
  98:	10000884 	andne	r0, r0, r4, lsl #17
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	100008b0 			; <UNDEFINED> instruction: 0x100008b0
	...
        taskEXIT_CRITICAL();
  a8:	100008f6 	strdne	r0, [r0], -r6
        vTaskSuspendAll();
  ac:	100008f8 	strdne	r0, [r0], -r8
        prvLockQueue( pxQueue );
  b0:	100008fa 	strdne	r0, [r0], -sl
  b4:	10000918 	andne	r0, r0, r8, lsl r9
	...
  c0:	10000aaa 	andne	r0, r0, sl, lsr #21
  c4:	10000ac4 	andne	r0, r0, r4, asr #21
  c8:	10000acc 	andne	r0, r0, ip, asr #21
  cc:	10000ad0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	10000ad0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  d4:	10000afe 	strdne	r0, [r0], -lr
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  e0:	10000b56 	andne	r0, r0, r6, asr fp
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	10000b78 	andne	r0, r0, r8, ror fp
  e8:	10000b86 	andne	r0, r0, r6, lsl #23
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	10000b8c 	andne	r0, r0, ip, lsl #23
  f0:	10000b8c 	andne	r0, r0, ip, lsl #23
                prvUnlockQueue( pxQueue );
  f4:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
	...
                if( xTaskResumeAll() == pdFALSE )
 100:	10001384 	andne	r1, r0, r4, lsl #7
                    taskYIELD_WITHIN_API();
 104:	10001386 	andne	r1, r0, r6, lsl #7
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001830 	andne	r1, r0, r0, lsr r8
                return errQUEUE_EMPTY;
 10c:	100018a2 	andne	r1, r0, r2, lsr #17
	...
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 118:	10001602 	andne	r1, r0, r2, lsl #12
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	10001634 	andne	r1, r0, r4, lsr r6
                        taskEXIT_CRITICAL();
 120:	10001788 	andne	r1, r0, r8, lsl #15
 124:	100017a2 	andne	r1, r0, r2, lsr #15
	...
 130:	10001652 	andne	r1, r0, r2, asr r6
 134:	10001688 	andne	r1, r0, r8, lsl #13
 138:	1000170a 	andne	r1, r0, sl, lsl #14
 13c:	10001726 	andne	r1, r0, r6, lsr #14
	...
 148:	10001690 	mulne	r0, r0, r6
 14c:	100016ce 	andne	r1, r0, lr, asr #13
 150:	100016d0 	ldrdne	r1, [r0], -r0
 154:	100016d8 	ldrdne	r1, [r0], -r8
	...
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	100008b0 			; <UNDEFINED> instruction: 0x100008b0
 16c:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
 170:	00000001 	andeq	r0, r0, r1
 174:	00000001 	andeq	r0, r0, r1
 178:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
 17c:	100008d6 	ldrdne	r0, [r0], -r6
 180:	100008d6 	ldrdne	r0, [r0], -r6
 184:	10000954 	andne	r0, r0, r4, asr r9
 188:	10000954 	andne	r0, r0, r4, asr r9
 18c:	10000a8c 	andne	r0, r0, ip, lsl #21
 190:	10000a8c 	andne	r0, r0, ip, lsl #21
 194:	10000b20 	andne	r0, r0, r0, lsr #22
 198:	10000b20 	andne	r0, r0, r0, lsr #22
 19c:	10000be6 	andne	r0, r0, r6, ror #23
 1a0:	10000be8 	andne	r0, r0, r8, ror #23
 1a4:	10000fd2 	ldrdne	r0, [r0], -r2
 1a8:	10000fd8 	ldrdne	r0, [r0], -r8
 1ac:	1000136e 	andne	r1, r0, lr, ror #6
 1b0:	10001370 	andne	r1, r0, r0, ror r3
 1b4:	100019f0 	strdne	r1, [r0], -r0
 1b8:	100019f0 	strdne	r1, [r0], -r0
 1bc:	100019fc 	strdne	r1, [r0], -ip
 1c0:	100019fc 	strdne	r1, [r0], -ip
 1c4:	10001a28 	andne	r1, r0, r8, lsr #20
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
 1e0:	00000001 	andeq	r0, r0, r1
 1e4:	00000001 	andeq	r0, r0, r1
 1e8:	00000001 	andeq	r0, r0, r1
 1ec:	00000001 	andeq	r0, r0, r1
	...
 1f8:	10001a28 	andne	r1, r0, r8, lsr #20
 1fc:	10001a3c 	andne	r1, r0, ip, lsr sl
 200:	00000001 	andeq	r0, r0, r1
 204:	00000001 	andeq	r0, r0, r1
 208:	10001a3c 	andne	r1, r0, ip, lsr sl
 20c:	10001a5a 	andne	r1, r0, sl, asr sl
 210:	10001a5c 	andne	r1, r0, ip, asr sl
 214:	10001a80 	andne	r1, r0, r0, lsl #21
 218:	00000001 	andeq	r0, r0, r1
 21c:	00000001 	andeq	r0, r0, r1
 220:	00000001 	andeq	r0, r0, r1
 224:	00000001 	andeq	r0, r0, r1
	...
 230:	10001a80 	andne	r1, r0, r0, lsl #21
 234:	10001aac 	andne	r1, r0, ip, lsr #21
 238:	10001aac 	andne	r1, r0, ip, lsr #21
 23c:	10001ae2 	andne	r1, r0, r2, ror #21
 240:	10001ae4 	andne	r1, r0, r4, ror #21
 244:	10001afc 	strdne	r1, [r0], -ip
 248:	10001afc 	strdne	r1, [r0], -ip
 24c:	10001b4c 	andne	r1, r0, ip, asr #22
 250:	10001b4c 	andne	r1, r0, ip, asr #22
 254:	10001bc8 	andne	r1, r0, r8, asr #23
 258:	10001bc8 	andne	r1, r0, r8, asr #23
 25c:	10001d4c 	andne	r1, r0, ip, asr #26
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
	...
 278:	10001d4c 	andne	r1, r0, ip, asr #26
 27c:	10001e48 	andne	r1, r0, r8, asr #28
	...
 288:	10001e48 	andne	r1, r0, r8, asr #28
 28c:	10001e62 	andne	r1, r0, r2, ror #28
 290:	10001e62 	andne	r1, r0, r2, ror #28
 294:	10001e68 	andne	r1, r0, r8, ror #28
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
 2a0:	10001e68 	andne	r1, r0, r8, ror #28
 2a4:	10001e9a 	mulne	r0, sl, lr
 2a8:	10001e9a 	mulne	r0, sl, lr
 2ac:	10001ebe 			; <UNDEFINED> instruction: 0x10001ebe
	...
 2b8:	10001f8a 	andne	r1, r0, sl, lsl #31
 2bc:	10001fb6 			; <UNDEFINED> instruction: 0x10001fb6
 2c0:	10001fb8 			; <UNDEFINED> instruction: 0x10001fb8
 2c4:	10001fca 	andne	r1, r0, sl, asr #31
	...
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
 2d8:	00000001 	andeq	r0, r0, r1
 2dc:	00000001 	andeq	r0, r0, r1
	...
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
 2f0:	00000001 	andeq	r0, r0, r1
 2f4:	00000001 	andeq	r0, r0, r1
	...
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
	...
 318:	1000213e 	andne	r2, r0, lr, lsr r1
 31c:	10002154 	andne	r2, r0, r4, asr r1
 320:	10002158 	andne	r2, r0, r8, asr r1
 324:	1000217c 	andne	r2, r0, ip, ror r1
 328:	100021b0 			; <UNDEFINED> instruction: 0x100021b0
 32c:	100021c0 	andne	r2, r0, r0, asr #3
	...
 338:	00000001 	andeq	r0, r0, r1
 33c:	00000001 	andeq	r0, r0, r1
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
	...
 358:	00000001 	andeq	r0, r0, r1
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
	...
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
	...
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
 398:	00000001 	andeq	r0, r0, r1
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	10001ebe 			; <UNDEFINED> instruction: 0x10001ebe
 3a4:	10001ed8 	ldrdne	r1, [r0], -r8
 3a8:	10001ed8 	ldrdne	r1, [r0], -r8
 3ac:	10001f4e 	andne	r1, r0, lr, asr #30
 3b0:	10001f4e 	andne	r1, r0, lr, asr #30
 3b4:	10001f72 	andne	r1, r0, r2, ror pc
 3b8:	10001f72 	andne	r1, r0, r2, ror pc
 3bc:	10001fca 	andne	r1, r0, sl, asr #31
 3c0:	10001fca 	andne	r1, r0, sl, asr #31
 3c4:	1000204c 	andne	r2, r0, ip, asr #32
 3c8:	1000204c 	andne	r2, r0, ip, asr #32
 3cc:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 3d0:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 3d4:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 3d8:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 3dc:	10002130 	andne	r2, r0, r0, lsr r1
 3e0:	00000001 	andeq	r0, r0, r1
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	10002130 	andne	r2, r0, r0, lsr r1
 43c:	10002220 	andne	r2, r0, r0, lsr #4
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	10002220 	andne	r2, r0, r0, lsr #4
 4ac:	10002272 	andne	r2, r0, r2, ror r2
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
	...
 4e0:	100024f6 	strdne	r2, [r0], -r6
 4e4:	10002516 	andne	r2, r0, r6, lsl r5
 4e8:	1000253e 	andne	r2, r0, lr, lsr r5
 4ec:	10002548 	andne	r2, r0, r8, asr #10
	...
 4f8:	10002570 	andne	r2, r0, r0, ror r5
 4fc:	10002576 	andne	r2, r0, r6, ror r5
 500:	10002578 	andne	r2, r0, r8, ror r5
 504:	100025aa 	andne	r2, r0, sl, lsr #11
	...
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
	...
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
	...
 540:	10002720 	andne	r2, r0, r0, lsr #14
 544:	10002732 	andne	r2, r0, r2, lsr r7
 548:	10002734 	andne	r2, r0, r4, lsr r7
 54c:	10002752 	andne	r2, r0, r2, asr r7
 550:	10002754 	andne	r2, r0, r4, asr r7
 554:	1000276e 	andne	r2, r0, lr, ror #14
 558:	10002772 	andne	r2, r0, r2, ror r7
 55c:	10002838 	andne	r2, r0, r8, lsr r8
 560:	10002844 	andne	r2, r0, r4, asr #16
 564:	10002846 	andne	r2, r0, r6, asr #16
	...
 570:	10002782 	andne	r2, r0, r2, lsl #15
 574:	10002788 	andne	r2, r0, r8, lsl #15
 578:	100027fa 	strdne	r2, [r0], -sl
 57c:	10002818 	andne	r2, r0, r8, lsl r8
	...
 588:	10002788 	andne	r2, r0, r8, lsl #15
 58c:	10002792 	mulne	r0, r2, r7
 590:	1000281e 	andne	r2, r0, lr, lsl r8
 594:	10002838 	andne	r2, r0, r8, lsr r8
	...
 5a0:	1000287a 	andne	r2, r0, sl, ror r8
 5a4:	1000288e 	andne	r2, r0, lr, lsl #17
 5a8:	10002892 	mulne	r0, r2, r8
 5ac:	1000289e 	mulne	r0, lr, r8
 5b0:	100028a0 	andne	r2, r0, r0, lsr #17
 5b4:	10002978 	andne	r2, r0, r8, ror r9
 5b8:	1000297a 	andne	r2, r0, sl, ror r9
 5bc:	1000297a 	andne	r2, r0, sl, ror r9
	...
 5c8:	10002892 	mulne	r0, r2, r8
 5cc:	10002898 	mulne	r0, r8, r8
 5d0:	100028ae 	andne	r2, r0, lr, lsr #17
 5d4:	100028ce 	andne	r2, r0, lr, asr #17
	...
 5e0:	10002898 	mulne	r0, r8, r8
 5e4:	1000289e 	mulne	r0, lr, r8
 5e8:	100028ce 	andne	r2, r0, lr, asr #17
 5ec:	100028ec 	andne	r2, r0, ip, ror #17
	...
 5f8:	10002944 	andne	r2, r0, r4, asr #18
 5fc:	1000294a 	andne	r2, r0, sl, asr #18
 600:	1000295c 	andne	r2, r0, ip, asr r9
 604:	10002978 	andne	r2, r0, r8, ror r9
	...
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
	...
 638:	100029c8 	andne	r2, r0, r8, asr #19
 63c:	100029d0 	ldrdne	r2, [r0], -r0
 640:	100029e2 	andne	r2, r0, r2, ror #19
 644:	100029fc 	strdne	r2, [r0], -ip
	...
 650:	10002a10 	andne	r2, r0, r0, lsl sl
 654:	10002a5a 	andne	r2, r0, sl, asr sl
 658:	10002a5e 	andne	r2, r0, lr, asr sl
 65c:	10002a80 	andne	r2, r0, r0, lsl #21
	...
 668:	10002a26 	andne	r2, r0, r6, lsr #20
 66c:	10002a56 	andne	r2, r0, r6, asr sl
 670:	10002a5e 	andne	r2, r0, lr, asr sl
 674:	10002a80 	andne	r2, r0, r0, lsl #21
	...
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
	...
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
	...
 6b0:	10002ade 	ldrdne	r2, [r0], -lr
 6b4:	10002afe 	strdne	r2, [r0], -lr
 6b8:	10002b7a 	andne	r2, r0, sl, ror fp
 6bc:	10002b80 	andne	r2, r0, r0, lsl #23
	...
 6c8:	10002b06 	andne	r2, r0, r6, lsl #22
 6cc:	10002b24 	andne	r2, r0, r4, lsr #22
 6d0:	10002b80 	andne	r2, r0, r0, lsl #23
 6d4:	10002b86 	andne	r2, r0, r6, lsl #23
	...
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
 6e8:	00000001 	andeq	r0, r0, r1
 6ec:	00000001 	andeq	r0, r0, r1
	...
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
	...
 710:	10002bde 	ldrdne	r2, [r0], -lr
 714:	10002bfc 	strdne	r2, [r0], -ip
 718:	10002c04 	andne	r2, r0, r4, lsl #24
 71c:	10002c50 	andne	r2, r0, r0, asr ip
	...
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
	...
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	00000001 	andeq	r0, r0, r1
 74c:	00000001 	andeq	r0, r0, r1
	...
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	00000001 	andeq	r0, r0, r1
 764:	00000001 	andeq	r0, r0, r1
	...
 770:	10002d66 	andne	r2, r0, r6, ror #26
 774:	10002d94 	mulne	r0, r4, sp
 778:	10002d98 	mulne	r0, r8, sp
 77c:	10002d98 	mulne	r0, r8, sp
 780:	10002d98 	mulne	r0, r8, sp
 784:	10002da8 	andne	r2, r0, r8, lsr #27
	...
 790:	00000001 	andeq	r0, r0, r1
 794:	00000001 	andeq	r0, r0, r1
 798:	10002274 	andne	r2, r0, r4, ror r2
 79c:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
 7a0:	00000001 	andeq	r0, r0, r1
 7a4:	00000001 	andeq	r0, r0, r1
 7a8:	00000001 	andeq	r0, r0, r1
 7ac:	00000001 	andeq	r0, r0, r1
 7b0:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
 7b4:	100022dc 	ldrdne	r2, [r0], -ip
 7b8:	100022dc 	ldrdne	r2, [r0], -ip
 7bc:	10002372 	andne	r2, r0, r2, ror r3
 7c0:	10002372 	andne	r2, r0, r2, ror r3
 7c4:	100023c4 	andne	r2, r0, r4, asr #7
 7c8:	100023c4 	andne	r2, r0, r4, asr #7
 7cc:	1000242c 	andne	r2, r0, ip, lsr #8
 7d0:	1000242c 	andne	r2, r0, ip, lsr #8
 7d4:	100024e8 	andne	r2, r0, r8, ror #9
 7d8:	100024e8 	andne	r2, r0, r8, ror #9
 7dc:	1000254a 	andne	r2, r0, sl, asr #10
 7e0:	1000254a 	andne	r2, r0, sl, asr #10
 7e4:	1000256e 	andne	r2, r0, lr, ror #10
 7e8:	10002570 	andne	r2, r0, r0, ror r5
 7ec:	100025bc 			; <UNDEFINED> instruction: 0x100025bc
 7f0:	100025bc 			; <UNDEFINED> instruction: 0x100025bc
 7f4:	10002664 	andne	r2, r0, r4, ror #12
 7f8:	10002664 	andne	r2, r0, r4, ror #12
 7fc:	1000268c 	andne	r2, r0, ip, lsl #13
 800:	1000268c 	andne	r2, r0, ip, lsl #13
 804:	100026ae 	andne	r2, r0, lr, lsr #13
 808:	00000001 	andeq	r0, r0, r1
 80c:	00000001 	andeq	r0, r0, r1
 810:	00000001 	andeq	r0, r0, r1
 814:	00000001 	andeq	r0, r0, r1
 818:	00000001 	andeq	r0, r0, r1
 81c:	00000001 	andeq	r0, r0, r1
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	100026b0 			; <UNDEFINED> instruction: 0x100026b0
 85c:	100026c0 	andne	r2, r0, r0, asr #13
 860:	100026c0 	andne	r2, r0, r0, asr #13
 864:	100026cc 	andne	r2, r0, ip, asr #13
 868:	00000001 	andeq	r0, r0, r1
 86c:	00000001 	andeq	r0, r0, r1
 870:	100026cc 	andne	r2, r0, ip, asr #13
 874:	100026d8 	ldrdne	r2, [r0], -r8
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	00000001 	andeq	r0, r0, r1
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	100026d8 	ldrdne	r2, [r0], -r8
 89c:	10002714 	andne	r2, r0, r4, lsl r7
 8a0:	10002714 	andne	r2, r0, r4, lsl r7
 8a4:	10002874 	andne	r2, r0, r4, ror r8
 8a8:	10002874 	andne	r2, r0, r4, ror r8
 8ac:	100029a4 	andne	r2, r0, r4, lsr #19
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	100029a4 	andne	r2, r0, r4, lsr #19
 8bc:	100029c2 	andne	r2, r0, r2, asr #19
 8c0:	100029c4 	andne	r2, r0, r4, asr #19
 8c4:	100029fc 	strdne	r2, [r0], -ip
 8c8:	00000001 	andeq	r0, r0, r1
 8cc:	00000001 	andeq	r0, r0, r1
 8d0:	00000001 	andeq	r0, r0, r1
 8d4:	00000001 	andeq	r0, r0, r1
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	100029fc 	strdne	r2, [r0], -ip
 904:	10002a80 	andne	r2, r0, r0, lsl #21
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	10002a80 	andne	r2, r0, r0, lsl #21
 914:	10002a9c 	mulne	r0, ip, sl
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	10002a9c 	mulne	r0, ip, sl
 924:	10002ad8 	ldrdne	r2, [r0], -r8
 928:	10002ad8 	ldrdne	r2, [r0], -r8
 92c:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
 944:	10002bd4 	ldrdne	r2, [r0], -r4
 948:	10002bd4 	ldrdne	r2, [r0], -r4
 94c:	10002c50 	andne	r2, r0, r0, asr ip
 950:	10002c50 	andne	r2, r0, r0, asr ip
 954:	10002c5c 	andne	r2, r0, ip, asr ip
 958:	10002c5c 	andne	r2, r0, ip, asr ip
 95c:	10002ca4 	andne	r2, r0, r4, lsr #25
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	00000001 	andeq	r0, r0, r1
 96c:	00000001 	andeq	r0, r0, r1
 970:	00000001 	andeq	r0, r0, r1
 974:	00000001 	andeq	r0, r0, r1
 978:	00000001 	andeq	r0, r0, r1
 97c:	00000001 	andeq	r0, r0, r1
 980:	00000001 	andeq	r0, r0, r1
 984:	00000001 	andeq	r0, r0, r1
 988:	10002ca4 	andne	r2, r0, r4, lsr #25
 98c:	10002d24 	andne	r2, r0, r4, lsr #26
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	00000001 	andeq	r0, r0, r1
 9a4:	00000001 	andeq	r0, r0, r1
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	10002d24 	andne	r2, r0, r4, lsr #26
 9e4:	10002d3c 	andne	r2, r0, ip, lsr sp
 9e8:	10002d3c 	andne	r2, r0, ip, lsr sp
 9ec:	10002da8 	andne	r2, r0, r8, lsr #27
 9f0:	10002da8 	andne	r2, r0, r8, lsr #27
 9f4:	10002df0 	strdne	r2, [r0], -r0
 9f8:	10002df0 	strdne	r2, [r0], -r0
 9fc:	10002e08 	andne	r2, r0, r8, lsl #28
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
	...
 a10:	10002e08 	andne	r2, r0, r8, lsl #28
 a14:	10002e28 	andne	r2, r0, r8, lsr #28
 a18:	10002e28 	andne	r2, r0, r8, lsr #28
 a1c:	10002e70 	andne	r2, r0, r0, ror lr
 a20:	10002e70 	andne	r2, r0, r0, ror lr
 a24:	10002e98 	mulne	r0, r8, lr
 a28:	10002e98 	mulne	r0, r8, lr
 a2c:	10002ed8 	ldrdne	r2, [r0], -r8
 a30:	10002ed8 	ldrdne	r2, [r0], -r8
 a34:	10002f08 	andne	r2, r0, r8, lsl #30
 a38:	10002f08 	andne	r2, r0, r8, lsl #30
 a3c:	10002f34 	andne	r2, r0, r4, lsr pc
 a40:	10002f34 	andne	r2, r0, r4, lsr pc
 a44:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 a48:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 a4c:	10003094 	mulne	r0, r4, r0
 a50:	10003094 	mulne	r0, r4, r0
 a54:	100030aa 	andne	r3, r0, sl, lsr #1
 a58:	100030ac 	andne	r3, r0, ip, lsr #1
 a5c:	1000310c 	andne	r3, r0, ip, lsl #2
 a60:	00000001 	andeq	r0, r0, r1
 a64:	00000001 	andeq	r0, r0, r1
 a68:	1000310c 	andne	r3, r0, ip, lsl #2
 a6c:	10003168 	andne	r3, r0, r8, ror #2
 a70:	00000001 	andeq	r0, r0, r1
 a74:	00000001 	andeq	r0, r0, r1
 a78:	00000001 	andeq	r0, r0, r1
 a7c:	00000001 	andeq	r0, r0, r1
 a80:	00000001 	andeq	r0, r0, r1
 a84:	00000001 	andeq	r0, r0, r1
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
 a90:	00000001 	andeq	r0, r0, r1
 a94:	00000001 	andeq	r0, r0, r1
 a98:	00000001 	andeq	r0, r0, r1
 a9c:	00000001 	andeq	r0, r0, r1
 aa0:	00000001 	andeq	r0, r0, r1
 aa4:	00000001 	andeq	r0, r0, r1
 aa8:	00000001 	andeq	r0, r0, r1
 aac:	00000001 	andeq	r0, r0, r1
 ab0:	00000001 	andeq	r0, r0, r1
 ab4:	00000001 	andeq	r0, r0, r1
 ab8:	00000001 	andeq	r0, r0, r1
 abc:	00000001 	andeq	r0, r0, r1
 ac0:	00000001 	andeq	r0, r0, r1
 ac4:	00000001 	andeq	r0, r0, r1
 ac8:	00000001 	andeq	r0, r0, r1
 acc:	00000001 	andeq	r0, r0, r1
 ad0:	00000001 	andeq	r0, r0, r1
 ad4:	00000001 	andeq	r0, r0, r1
 ad8:	00000001 	andeq	r0, r0, r1
 adc:	00000001 	andeq	r0, r0, r1
 ae0:	00000001 	andeq	r0, r0, r1
 ae4:	00000001 	andeq	r0, r0, r1
 ae8:	00000001 	andeq	r0, r0, r1
 aec:	00000001 	andeq	r0, r0, r1
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
	...
 b08:	10003168 	andne	r3, r0, r8, ror #2
 b0c:	100031c0 	andne	r3, r0, r0, asr #3
 b10:	100031c0 	andne	r3, r0, r0, asr #3
 b14:	10003224 	andne	r3, r0, r4, lsr #4
 b18:	10003224 	andne	r3, r0, r4, lsr #4
 b1c:	100032f8 	strdne	r3, [r0], -r8
 b20:	100032f8 	strdne	r3, [r0], -r8
 b24:	10003348 	andne	r3, r0, r8, asr #6
 b28:	00000001 	andeq	r0, r0, r1
 b2c:	00000001 	andeq	r0, r0, r1
 b30:	00000001 	andeq	r0, r0, r1
 b34:	00000001 	andeq	r0, r0, r1
 b38:	00000001 	andeq	r0, r0, r1
 b3c:	00000001 	andeq	r0, r0, r1
 b40:	00000001 	andeq	r0, r0, r1
 b44:	00000001 	andeq	r0, r0, r1
 b48:	00000001 	andeq	r0, r0, r1
 b4c:	00000001 	andeq	r0, r0, r1
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
	...
 b60:	10003348 	andne	r3, r0, r8, asr #6
 b64:	10003360 	andne	r3, r0, r0, ror #6
 b68:	10003360 	andne	r3, r0, r0, ror #6
 b6c:	10003474 	andne	r3, r0, r4, ror r4
 b70:	10003474 	andne	r3, r0, r4, ror r4
 b74:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
 b78:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
 b7c:	100034c6 	andne	r3, r0, r6, asr #9
 b80:	100034c8 	andne	r3, r0, r8, asr #9
 b84:	100034e4 	andne	r3, r0, r4, ror #9
 b88:	100034e4 	andne	r3, r0, r4, ror #9
 b8c:	10003500 	andne	r3, r0, r0, lsl #10
 b90:	10003500 	andne	r3, r0, r0, lsl #10
 b94:	10003522 	andne	r3, r0, r2, lsr #10
 b98:	10003522 	andne	r3, r0, r2, lsr #10
 b9c:	10003536 	andne	r3, r0, r6, lsr r5
 ba0:	10003538 	andne	r3, r0, r8, lsr r5
 ba4:	100035c8 	andne	r3, r0, r8, asr #11
 ba8:	100035c8 	andne	r3, r0, r8, asr #11
 bac:	10003608 	andne	r3, r0, r8, lsl #12
 bb0:	00000001 	andeq	r0, r0, r1
 bb4:	00000001 	andeq	r0, r0, r1
 bb8:	00000001 	andeq	r0, r0, r1
 bbc:	00000001 	andeq	r0, r0, r1
	...
 bc8:	10003608 	andne	r3, r0, r8, lsl #12
 bcc:	1000362e 	andne	r3, r0, lr, lsr #12
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	00000001 	andeq	r0, r0, r1
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
 be0:	00000001 	andeq	r0, r0, r1
 be4:	00000001 	andeq	r0, r0, r1
 be8:	10003634 	andne	r3, r0, r4, lsr r6
 bec:	1000364e 	andne	r3, r0, lr, asr #12
 bf0:	10003654 	andne	r3, r0, r4, asr r6
 bf4:	1000366a 	andne	r3, r0, sl, ror #12
 bf8:	1000366a 	andne	r3, r0, sl, ror #12
 bfc:	10003678 	andne	r3, r0, r8, ror r6
 c00:	10003678 	andne	r3, r0, r8, ror r6
 c04:	100036bc 			; <UNDEFINED> instruction: 0x100036bc
 c08:	100036c0 	andne	r3, r0, r0, asr #13
 c0c:	100036d2 	ldrdne	r3, [r0], -r2
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000004d3 	ldrdeq	r0, [r0], -r3
       4:	02690003 	rsbeq	r0, r9, #3
        xReturn = pdFALSE;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	01010101 	tsteq	r1, r1, lsl #2
}
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
        BaseType_t xReturn = pdFAIL;
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    }
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        for (int i = 0; i < count; i++) {
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        printf("] \r\n");
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
}
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
            prvUnlockQueue( pxQueue );
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
            ( void ) xTaskResumeAll();
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        taskENTER_CRITICAL();
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                else if( xEntryTimeSet == pdFALSE )
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        taskEXIT_CRITICAL();
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        vTaskSuspendAll();
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	2f737265 	svccs	0x00737265
      e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	2f355f53 	svccs	0x00355f53
      f0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
                prvUnlockQueue( pxQueue );
      f4:	6f432f53 	svcvs	0x00432f53
      f8:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
                if( xTaskResumeAll() == pdFALSE )
      fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     100:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
                    taskYIELD_WITHIN_API();
     104:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
                    if( xInheritanceOccurred != pdFALSE )
     108:	2f2e2e2f 	svccs	0x002e2e2f
                return errQUEUE_EMPTY;
     10c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
                        taskENTER_CRITICAL();
     110:	2f736f74 	svccs	0x00736f74
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     118:	534f5452 	movtpl	r5, #62546	; 0xf452
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
                        taskEXIT_CRITICAL();
     120:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     124:	43472f65 	movtmi	r2, #32613	; 0x7f65
     128:	52412f43 	subpl	r2, r1, #268	; 0x10c
     12c:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
     130:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
     134:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
     138:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
     13c:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
     140:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     144:	2f2e2e2f 	svccs	0x002e2e2f
     148:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 98 <__STACKSEAL_SIZE+0x98>
     14c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     150:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     154:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     158:	2f534f54 	svccs	0x00534f54
     15c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     160:	00656475 	rsbeq	r6, r5, r5, ror r4
     164:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     168:	2f65726f 	svccs	0x0065726f
     16c:	00636e49 	rsbeq	r6, r3, r9, asr #28
     170:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     174:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     178:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     17c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     180:	61662f73 	smcvs	25331	; 0x62f3
     184:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     188:	706d7564 	rsbvc	r7, sp, r4, ror #10
     18c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     190:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     194:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     198:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     19c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     1a0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     1a4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     1a8:	5f6d7261 	svcpl	0x006d7261
     1ac:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     1b0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     1b4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     1b8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     1bc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     1c0:	30312d69 	eorscc	r2, r1, r9, ror #26
     1c4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     1c8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     1cc:	615c3031 	cmpvs	ip, r1, lsr r0
     1d0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     1d4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     1d8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     1dc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     1e0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     1e4:	616d0000 	cmnvs	sp, r0
     1e8:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
     1ec:	00000100 	andeq	r0, r0, r0, lsl #2
     1f0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     1f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1f8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     1fc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     200:	00000200 	andeq	r0, r0, r0, lsl #4
     204:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     208:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     20c:	00030068 	andeq	r0, r3, r8, rrx
     210:	726f6300 	rsbvc	r6, pc, #0, 6
     214:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     218:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     21c:	00000400 	andeq	r0, r0, r0, lsl #8
     220:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     224:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
     228:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 74 <__STACKSEAL_SIZE+0x74>
     22c:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
     230:	00050068 	andeq	r0, r5, r8, rrx
     234:	73617400 	cmnvc	r1, #0, 8
     238:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     23c:	75000006 	strvc	r0, [r0, #-6]
     240:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     244:	00070068 	andeq	r0, r7, r8, rrx
     248:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     24c:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     250:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
     254:	00080068 	andeq	r0, r8, r8, rrx
     258:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     25c:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     260:	00000900 	andeq	r0, r0, r0, lsl #18
     264:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     268:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     26c:	00003e6e 	andeq	r3, r0, lr, ror #28
     270:	05000000 	streq	r0, [r0, #-0]
     274:	02050022 	andeq	r0, r5, #34	; 0x22
     278:	10000800 	andne	r0, r0, r0, lsl #16
     27c:	0100e503 	tsteq	r0, r3, lsl #10
     280:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
     284:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     288:	06050501 	streq	r0, [r5], -r1, lsl #10
     28c:	060805ad 	streq	r0, [r8], -sp, lsr #11
     290:	06090501 	streq	r0, [r9], -r1, lsl #10
     294:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
     298:	09053001 	stmdbeq	r5, {r0, ip, sp}
     29c:	2e063806 	cdpcs	8, 0, cr3, cr6, cr6, {0}
     2a0:	01000a02 	tsteq	r0, r2, lsl #20
     2a4:	002f0501 	eoreq	r0, pc, r1, lsl #10
     2a8:	08440205 	stmdaeq	r4, {r0, r2, r9}^
     2ac:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
     2b0:	01060100 	mrseq	r0, (UNDEF: 22)
     2b4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     2b8:	21060104 	tstcs	r6, r4, lsl #2
     2bc:	02000905 	andeq	r0, r0, #81920	; 0x14000
     2c0:	00130104 	andseq	r0, r3, r4, lsl #2
     2c4:	3d010402 	cfstrscc	mvf0, [r1, #-8]
     2c8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     2cc:	023a0104 	eorseq	r0, sl, #4, 2
     2d0:	01010003 	tsteq	r1, r3
     2d4:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
     2d8:	00000002 	andeq	r0, r0, r2
     2dc:	010e0300 	mrseq	r0, ELR_hyp
     2e0:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     2e4:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     2e8:	01010004 	tsteq	r1, r4
     2ec:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
     2f0:	00000002 	andeq	r0, r0, r2
     2f4:	01120300 	tsteq	r2, r0, lsl #6
     2f8:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     2fc:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     300:	01010004 	tsteq	r1, r4
     304:	05002305 	streq	r2, [r0, #-773]	; 0xfffffcfb
     308:	00000002 	andeq	r0, r0, r2
     30c:	01160300 	tsteq	r6, r0, lsl #6
     310:	14210505 	strtne	r0, [r1], #-1285	; 0xfffffafb
     314:	01060e05 	tsteq	r6, r5, lsl #28
     318:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
     31c:	06010513 			; <UNDEFINED> instruction: 0x06010513
     320:	0006024b 	andeq	r0, r6, fp, asr #4
     324:	22050101 	andcs	r0, r5, #1073741824	; 0x40000000
     328:	00020500 	andeq	r0, r2, r0, lsl #10
     32c:	03000000 	movweq	r0, #0
     330:	0505011e 	streq	r0, [r5, #-286]	; 0xfffffee2
     334:	1205132f 	andne	r1, r5, #-1140850688	; 0xbc000000
     338:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     33c:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
     340:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     344:	05135a06 	ldreq	r5, [r3, #-2566]	; 0xfffff5fa
     348:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     34c:	0505200b 	streq	r2, [r5, #-11]
     350:	13672106 	cmnne	r7, #-2147483647	; 0x80000001
     354:	01060d05 	tsteq	r6, r5, lsl #26
     358:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     35c:	59210605 	stmdbpl	r1!, {r0, r2, r9, sl}
     360:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     364:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     368:	21060505 	tstcs	r6, r5, lsl #10
     36c:	59060105 	stmdbpl	r6, {r0, r2, r8}
     370:	01000602 	tsteq	r0, r2, lsl #12
     374:	001b0501 	andseq	r0, fp, r1, lsl #10
     378:	00000205 	andeq	r0, r0, r5, lsl #4
     37c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     380:	2f050501 	svccs	0x00050501
     384:	01061205 	tsteq	r6, r5, lsl #4
     388:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     38c:	01061a05 	tsteq	r6, r5, lsl #20
     390:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     394:	01061a05 	tsteq	r6, r5, lsl #20
     398:	0605052e 	streq	r0, [r5], -lr, lsr #10
     39c:	06110521 	ldreq	r0, [r1], -r1, lsr #10
     3a0:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
     3a4:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     3a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
     3ac:	20063106 	andcs	r3, r6, r6, lsl #2
     3b0:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
     3b4:	06120501 	ldreq	r0, [r2], -r1, lsl #10
     3b8:	20090501 	andcs	r0, r9, r1, lsl #10
     3bc:	060f0620 	streq	r0, [pc], -r0, lsr #12
     3c0:	000d052e 	andeq	r0, sp, lr, lsr #10
     3c4:	06030402 	streq	r0, [r3], -r2, lsl #8
     3c8:	00240540 	eoreq	r0, r4, r0, asr #10
     3cc:	57030402 	strpl	r0, [r3, -r2, lsl #8]
     3d0:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     3d4:	01060304 	tsteq	r6, r4, lsl #6
     3d8:	02001905 	andeq	r1, r0, #81920	; 0x14000
     3dc:	20060104 	andcs	r0, r6, r4, lsl #2
     3e0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     3e4:	01060104 	tsteq	r6, r4, lsl #2
     3e8:	01053106 	tsteq	r5, r6, lsl #2
     3ec:	022e3e06 	eoreq	r3, lr, #6, 28	; 0x60
     3f0:	01010008 	tsteq	r1, r8
     3f4:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     3f8:	00000002 	andeq	r0, r0, r2
     3fc:	013e0300 	teqeq	lr, r0, lsl #6
     400:	4b210505 	blmi	84181c <__RAM_SIZE+0x74181c>
     404:	06010530 			; <UNDEFINED> instruction: 0x06010530
     408:	0005022f 	andeq	r0, r5, pc, lsr #4
     40c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     410:	00020500 	andeq	r0, r2, r0, lsl #10
     414:	03000000 	movweq	r0, #0
     418:	050100c5 	streq	r0, [r1, #-197]	; 0xffffff3b
     41c:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     420:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     424:	01010005 	tsteq	r1, r5
     428:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     42c:	00000002 	andeq	r0, r0, r2
     430:	00ca0300 	sbceq	r0, sl, r0, lsl #6
     434:	21050501 	tstcs	r5, r1, lsl #10
     438:	0601054b 	streq	r0, [r1], -fp, asr #10
     43c:	0005022f 	andeq	r0, r5, pc, lsr #4
     440:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     444:	00020500 	andeq	r0, r2, r0, lsl #10
     448:	03000000 	movweq	r0, #0
     44c:	050100cf 	streq	r0, [r1, #-207]	; 0xffffff31
     450:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     454:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     458:	01010005 	tsteq	r1, r5
     45c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     460:	00000002 	andeq	r0, r0, r2
     464:	00d40300 	sbcseq	r0, r4, r0, lsl #6
     468:	21050501 	tstcs	r5, r1, lsl #10
     46c:	0601054b 	streq	r0, [r1], -fp, asr #10
     470:	0005022f 	andeq	r0, r5, pc, lsr #4
     474:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     478:	00020500 	andeq	r0, r2, r0, lsl #10
     47c:	03000000 	movweq	r0, #0
     480:	050100d9 	streq	r0, [r1, #-217]	; 0xffffff27
     484:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     488:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     48c:	01010005 	tsteq	r1, r5
     490:	05001005 	streq	r1, [r0, #-5]
     494:	00085802 	andeq	r5, r8, r2, lsl #16
     498:	00f00310 	rscseq	r0, r0, r0, lsl r3
     49c:	21050501 	tstcs	r5, r1, lsl #10
     4a0:	2f3d3013 	svccs	0x003d3013
     4a4:	29060905 	stmdbcs	r6, {r0, r2, r8, fp}
     4a8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     4ac:	28060104 	stmdacs	r6, {r2, r8}
     4b0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     4b4:	00130104 	andseq	r0, r3, r4, lsl #2
     4b8:	21010402 	tstcs	r1, r2, lsl #8
     4bc:	01040200 	mrseq	r0, R12_usr
     4c0:	0b052006 	bleq	1484e0 <__RAM_SIZE+0x484e0>
     4c4:	01040200 	mrseq	r0, R12_usr
     4c8:	09053a06 	stmdbeq	r5, {r1, r2, r9, fp, ip, sp}
     4cc:	01040200 	mrseq	r0, R12_usr
     4d0:	06021406 	streq	r1, [r2], -r6, lsl #8
     4d4:	d1010100 	mrsle	r0, (UNDEF: 17)
     4d8:	03000001 	movweq	r0, #1
     4dc:	00018100 	andeq	r8, r1, r0, lsl #2
     4e0:	fb010200 	blx	40cea <__HEAP_SIZE+0x3fcea>
     4e4:	01000d0e 	tsteq	r0, lr, lsl #26
     4e8:	00010101 	andeq	r0, r1, r1, lsl #2
     4ec:	00010000 	andeq	r0, r1, r0
     4f0:	2f2e0100 	svccs	0x002e0100
     4f4:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     4f8:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     4fc:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     500:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     504:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     508:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     50c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     510:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     514:	615c6d61 	cmpvs	ip, r1, ror #26
     518:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     51c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     520:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     524:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     528:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     52c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     530:	2e30312d 	rsfcssp	f3, f0, #5.0
     534:	30322d33 	eorscc	r2, r2, r3, lsr sp
     538:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     53c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     540:	6f6e2d6d 	svcvs	0x006e2d6d
     544:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     548:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     54c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     550:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     554:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     558:	00656e69 	rsbeq	r6, r5, r9, ror #28
     55c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     560:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     564:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     568:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     56c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     570:	615c6d61 	cmpvs	ip, r1, ror #26
     574:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     578:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     57c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     580:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     584:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     588:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     58c:	2e30312d 	rsfcssp	f3, f0, #5.0
     590:	30322d33 	eorscc	r2, r2, r3, lsr sp
     594:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     598:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     59c:	6f6e2d6d 	svcvs	0x006e2d6d
     5a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     5a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     5a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     5ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     5b0:	00737973 	rsbseq	r7, r3, r3, ror r9
     5b4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 5bc <__STACKSEAL_SIZE+0x5bc>
     5b8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5bc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     5c0:	5349534d 	movtpl	r5, #37709	; 0x934d
     5c4:	432f355f 			; <UNDEFINED> instruction: 0x432f355f
     5c8:	5349534d 	movtpl	r5, #37709	; 0x934d
     5cc:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     5d0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     5d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5d8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     5dc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     5e0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     5e4:	534d432f 	movtpl	r4, #54063	; 0xd32f
     5e8:	355f5349 	ldrbcc	r5, [pc, #-841]	; 2a7 <__STACKSEAL_SIZE+0x2a7>
     5ec:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     5f0:	2f656369 	svccs	0x00656369
     5f4:	2f4d5241 	svccs	0x004d5241
     5f8:	434d5241 	movtmi	r5, #53825	; 0xd241
     5fc:	2f33334d 	svccs	0x0033334d
     600:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     604:	00656475 	rsbeq	r6, r5, r5, ror r4
     608:	73797300 	cmnvc	r9, #0, 6
     60c:	5f6d6574 	svcpl	0x006d6574
     610:	434d5241 	movtmi	r5, #53825	; 0xd241
     614:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     618:	00010063 	andeq	r0, r1, r3, rrx
     61c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     620:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     624:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     628:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     62c:	00020068 	andeq	r0, r2, r8, rrx
     630:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     634:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     638:	0300682e 	movweq	r6, #2094	; 0x82e
     63c:	6f630000 	svcvs	0x00630000
     640:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     644:	2e33336d 	cdpcs	3, 3, cr3, cr3, cr13, {3}
     648:	00040068 	andeq	r0, r4, r8, rrx
     64c:	73797300 	cmnvc	r9, #0, 6
     650:	5f6d6574 	svcpl	0x006d6574
     654:	434d5241 	movtmi	r5, #53825	; 0xd241
     658:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     65c:	00050068 	andeq	r0, r5, r8, rrx
     660:	01050000 	mrseq	r0, (UNDEF: 5)
     664:	00020500 	andeq	r0, r2, r0, lsl #10
     668:	03000000 	movweq	r0, #0
     66c:	050100c4 	streq	r0, [r1, #-196]	; 0xffffff3c
     670:	13051303 	movwne	r1, #21251	; 0x5303
     674:	01050106 	tsteq	r5, r6, lsl #2
     678:	0005023d 	andeq	r0, r5, sp, lsr r2
     67c:	01050101 	tsteq	r5, r1, lsl #2
     680:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
     684:	03100008 	tsteq	r0, #8
     688:	050100cc 	streq	r0, [r1, #-204]	; 0xffffff34
     68c:	0d051503 	cfstr32eq	mvfx1, [r5, #-12]
     690:	03050106 	movweq	r0, #20742	; 0x5106
     694:	0e054006 	cdpeq	0, 0, cr4, cr5, cr6, {0}
     698:	03050106 	movweq	r0, #20742	; 0x5106
     69c:	660c0306 	strvs	r0, [ip], -r6, lsl #6
     6a0:	01061305 	tsteq	r6, r5, lsl #6
     6a4:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     6a8:	0101000a 	tsteq	r1, sl
     6ac:	0000120d 	andeq	r1, r0, sp, lsl #4
     6b0:	01a10003 			; <UNDEFINED> instruction: 0x01a10003
     6b4:	01020000 	mrseq	r0, (UNDEF: 2)
     6b8:	000d0efb 	strdeq	r0, [sp], -fp
     6bc:	01010101 	tsteq	r1, r1, lsl #2
     6c0:	01000000 	mrseq	r0, (UNDEF: 0)
     6c4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     6c8:	6f432f2e 	svcvs	0x00432f2e
     6cc:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     6d0:	63006372 	movwvs	r6, #882	; 0x372
     6d4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     6d8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     6dc:	6f646978 	svcvs	0x00646978
     6e0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     6e4:	6172676f 	cmnvs	r2, pc, ror #14
     6e8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     6ec:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     6f0:	63675c63 	cmnvs	r7, #25344	; 0x6300
     6f4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     6f8:	6f6e2d6d 	svcvs	0x006e2d6d
     6fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     700:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     704:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     708:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     70c:	30312e31 	eorscc	r2, r1, r1, lsr lr
     710:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     714:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     718:	61652d65 	cmnvs	r5, r5, ror #26
     71c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     720:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     724:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     728:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     72c:	6300656e 	movwvs	r6, #1390	; 0x56e
     730:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     734:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     738:	6f646978 	svcvs	0x00646978
     73c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     740:	6172676f 	cmnvs	r2, pc, ror #14
     744:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     748:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     74c:	63675c63 	cmnvs	r7, #25344	; 0x6300
     750:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     754:	6f6e2d6d 	svcvs	0x006e2d6d
     758:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     75c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     760:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     764:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     768:	30312e31 	eorscc	r2, r1, r1, lsr lr
     76c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     770:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     774:	61652d65 	cmnvs	r5, r5, ror #26
     778:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     77c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     780:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     784:	63007379 	movwvs	r7, #889	; 0x379
     788:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     78c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     790:	6f646978 	svcvs	0x00646978
     794:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     798:	6172676f 	cmnvs	r2, pc, ror #14
     79c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     7a0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     7a4:	63675c63 	cmnvs	r7, #25344	; 0x6300
     7a8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     7ac:	6f6e2d6d 	svcvs	0x006e2d6d
     7b0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     7b4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     7b8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     7bc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     7c0:	30312e31 	eorscc	r2, r1, r1, lsr lr
     7c4:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
     7c8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     7cc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     7d0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     7d4:	61652d65 	cmnvs	r5, r5, ror #26
     7d8:	315c6962 	cmpcc	ip, r2, ror #18
     7dc:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
     7e0:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
     7e4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     7e8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     7ec:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     7f0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     7f4:	70000063 	andvc	r0, r0, r3, rrx
     7f8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     7fc:	00632e66 	rsbeq	r2, r3, r6, ror #28
     800:	5f000001 	svcpl	0x00000001
     804:	61666564 	cmnvs	r6, r4, ror #10
     808:	5f746c75 	svcpl	0x00746c75
     80c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     810:	00682e73 	rsbeq	r2, r8, r3, ror lr
     814:	5f000002 	svcpl	0x00000002
     818:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     81c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     820:	00000300 	andeq	r0, r0, r0, lsl #6
     824:	61647473 	smcvs	18243	; 0x4743
     828:	682e6772 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, sp, lr}
     82c:	00000400 	andeq	r0, r0, r0, lsl #8
     830:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
     834:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     838:	00000400 	andeq	r0, r0, r0, lsl #8
     83c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     840:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     844:	00003e6e 	andeq	r3, r0, lr, ror #28
     848:	72700000 	rsbsvc	r0, r0, #0
     84c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     850:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     854:	05000000 	streq	r0, [r0, #-0]
     858:	02050001 	andeq	r0, r5, #1
     85c:	00000000 	andeq	r0, r0, r0
     860:	01018503 	tsteq	r1, r3, lsl #10
     864:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     868:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     86c:	052f0605 	streq	r0, [pc, #-1541]!	; 26f <__STACKSEAL_SIZE+0x26f>
     870:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     874:	01022201 	tsteq	r2, r1, lsl #4
     878:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     87c:	02050001 	andeq	r0, r5, #1
     880:	100008b0 			; <UNDEFINED> instruction: 0x100008b0
     884:	01018e03 	tsteq	r1, r3, lsl #28
     888:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     88c:	22050114 	andcs	r0, r5, #20, 2
     890:	012d0501 			; <UNDEFINED> instruction: 0x012d0501
     894:	13060105 	movwne	r0, #24837	; 0x6105
     898:	01000102 	tsteq	r0, r2, lsl #2
     89c:	00010501 	andeq	r0, r1, r1, lsl #10
     8a0:	00000205 	andeq	r0, r0, r5, lsl #4
     8a4:	9f030000 	svcls	0x00030000
     8a8:	03050101 	movweq	r0, #20737	; 0x5101
     8ac:	010e0513 	tsteq	lr, r3, lsl r5
     8b0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     8b4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     8b8:	05051e01 	streq	r1, [r5, #-3585]	; 0xfffff1ff
     8bc:	21052406 	tstcs	r5, r6, lsl #8
     8c0:	06050106 	streq	r0, [r5], -r6, lsl #2
     8c4:	01052020 	tsteq	r5, r0, lsr #32
     8c8:	01022022 	tsteq	r2, r2, lsr #32
     8cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     8d0:	02050001 	andeq	r0, r5, #1
     8d4:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
     8d8:	0101bc03 	tsteq	r1, r3, lsl #24
     8dc:	03050106 	movweq	r0, #20742	; 0x5106
     8e0:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
     8e4:	05110610 	ldreq	r0, [r1, #-1552]	; 0xfffff9f0
     8e8:	05052109 	streq	r2, [r5, #-265]	; 0xfffffef7
     8ec:	0b052106 	bleq	148d0c <__RAM_SIZE+0x48d0c>
     8f0:	2a050106 	bcs	140d10 <__RAM_SIZE+0x40d10>
     8f4:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
     8f8:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
     8fc:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
     900:	15051f06 	strne	r1, [r5, #-3846]	; 0xfffff0fa
     904:	0a050106 	beq	140d24 <__RAM_SIZE+0x40d24>
     908:	06140520 	ldreq	r0, [r4], -r0, lsr #10
     90c:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
     910:	16051403 	strne	r1, [r5], -r3, lsl #8
     914:	20200106 	eorcs	r0, r0, r6, lsl #2
     918:	051a0905 	ldreq	r0, [sl, #-2309]	; 0xfffff6fb
     91c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
     920:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     924:	01010001 	tsteq	r1, r1
     928:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     92c:	0008d602 	andeq	sp, r8, r2, lsl #12
     930:	01c70310 	biceq	r0, r7, r0, lsl r3
     934:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     938:	15bb0603 	ldrne	r0, [fp, #1539]!	; 0x603
     93c:	01060605 	tsteq	r6, r5, lsl #12
     940:	3d110520 	cfldr32cc	mvfx0, [r1, #-128]	; 0xffffff80
     944:	02001a05 	andeq	r1, r0, #20480	; 0x5000
     948:	2e060104 	adfcss	f0, f6, f4
     94c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     950:	01060104 	tsteq	r6, r4, lsl #2
     954:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     958:	2f060304 	svccs	0x00060304
     95c:	03040200 	movweq	r0, #16896	; 0x4200
     960:	25052e06 	strcs	r2, [r5, #-3590]	; 0xfffff1fa
     964:	03040200 	movweq	r0, #16896	; 0x4200
     968:	26054906 	strcs	r4, [r5], -r6, lsl #18
     96c:	03040200 	movweq	r0, #16896	; 0x4200
     970:	07050106 	streq	r0, [r5, -r6, lsl #2]
     974:	03040200 	movweq	r0, #16896	; 0x4200
     978:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     97c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
     980:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
     984:	06180605 	ldreq	r0, [r8], -r5, lsl #12
     988:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
     98c:	03056506 	movweq	r6, #21766	; 0x5506
     990:	06060533 			; <UNDEFINED> instruction: 0x06060533
     994:	51010501 	tstpl	r1, r1, lsl #10
     998:	03060b05 	movweq	r0, #27397	; 0x6b05
     99c:	10054a7a 	andne	r4, r5, sl, ror sl
     9a0:	0b050106 	bleq	140dc0 <__RAM_SIZE+0x40dc0>
     9a4:	0607052e 	streq	r0, [r7], -lr, lsr #10
     9a8:	0220062f 	eoreq	r0, r0, #49283072	; 0x2f00000
     9ac:	01010006 	tsteq	r1, r6
     9b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     9b4:	00095402 	andeq	r5, r9, r2, lsl #8
     9b8:	01e30310 	mvneq	r0, r0, lsl r3
     9bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     9c0:	05ca0603 	strbeq	r0, [sl, #1539]	; 0x603
     9c4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     9c8:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     9cc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     9d0:	0402000f 	streq	r0, [r2], #-15
     9d4:	2a052001 	bcs	1489e0 <__RAM_SIZE+0x489e0>
     9d8:	02040200 	andeq	r0, r4, #0, 4
     9dc:	0037053c 	eorseq	r0, r7, ip, lsr r5
     9e0:	3c030402 	cfstrscc	mvf0, [r3], {2}
     9e4:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     9e8:	01060c05 	tsteq	r6, r5, lsl #24
     9ec:	06070520 	streq	r0, [r7], -r0, lsr #10
     9f0:	06120523 	ldreq	r0, [r2], -r3, lsr #10
     9f4:	4a0e0501 	bmi	381e00 <__RAM_SIZE+0x281e00>
     9f8:	1f060b05 	svcne	0x00060b05
     9fc:	02001905 	andeq	r1, r0, #81920	; 0x14000
     a00:	2e060104 	adfcss	f0, f6, f4
     a04:	31060b05 	tstcc	r6, r5, lsl #22
     a08:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     a0c:	3c060104 	stfccs	f0, [r6], {4}
     a10:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     a14:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     a18:	052f0607 	streq	r0, [pc, #-1543]!	; 419 <__STACKSEAL_SIZE+0x419>
     a1c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a20:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     a24:	05250603 	streq	r0, [r5, #-1539]!	; 0xfffff9fd
     a28:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     a2c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     a30:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     a34:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     a38:	2b053c01 	blcs	14fa44 <__RAM_SIZE+0x4fa44>
     a3c:	02040200 	andeq	r0, r4, #0, 4
     a40:	003d0520 	eorseq	r0, sp, r0, lsr #10
     a44:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     a48:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
     a4c:	01060805 	tsteq	r6, r5, lsl #16
     a50:	3f060a05 	svccc	0x00060a05
     a54:	01060d05 	tsteq	r6, r5, lsl #26
     a58:	3f060a05 	svccc	0x00060a05
     a5c:	01060d05 	tsteq	r6, r5, lsl #26
     a60:	3f060505 	svccc	0x00060505
     a64:	01060805 	tsteq	r6, r5, lsl #16
     a68:	2f060705 	svccs	0x00060705
     a6c:	01061205 	tsteq	r6, r5, lsl #4
     a70:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     a74:	05240603 	streq	r0, [r4, #-1539]!	; 0xfffff9fd
     a78:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     a7c:	052f0605 	streq	r0, [pc, #-1541]!	; 47f <__STACKSEAL_SIZE+0x47f>
     a80:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     a84:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     a88:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a8c:	03054a0e 	movweq	r4, #23054	; 0x5a0e
     a90:	200a0306 	andcs	r0, sl, r6, lsl #6
     a94:	01060a05 	tsteq	r6, r5, lsl #20
     a98:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
     a9c:	60030607 	andvs	r0, r3, r7, lsl #12
     aa0:	0a05133c 	beq	145798 <__RAM_SIZE+0x45798>
     aa4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     aa8:	0402000f 	streq	r0, [r2], #-15
     aac:	0a052001 	beq	148ab8 <__RAM_SIZE+0x48ab8>
     ab0:	0609053b 			; <UNDEFINED> instruction: 0x0609053b
     ab4:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     ab8:	0a052001 	beq	148ac4 <__RAM_SIZE+0x48ac4>
     abc:	0017051e 	andseq	r0, r7, lr, lsl r5
     ac0:	33010402 	movwcc	r0, #5122	; 0x1402
     ac4:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     ac8:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     acc:	052f0607 	streq	r0, [pc, #-1543]!	; 4cd <__STACKSEAL_SIZE+0x4cd>
     ad0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     ad4:	12054a0e 	andne	r4, r5, #57344	; 0xe000
     ad8:	001c0520 	andseq	r0, ip, r0, lsr #10
     adc:	22010402 	andcs	r0, r1, #33554432	; 0x2000000
     ae0:	02003905 	andeq	r3, r0, #81920	; 0x14000
     ae4:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     ae8:	052f0607 	streq	r0, [pc, #-1543]!	; 4e9 <__STACKSEAL_SIZE+0x4e9>
     aec:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     af0:	12054a0e 	andne	r4, r5, #57344	; 0xe000
     af4:	001b0520 	andseq	r0, fp, r0, lsr #10
     af8:	22010402 	andcs	r0, r1, #33554432	; 0x2000000
     afc:	2f060705 	svccs	0x00060705
     b00:	01061205 	tsteq	r6, r5, lsl #4
     b04:	204a0e05 	subcs	r0, sl, r5, lsl #28
     b08:	03060a05 	movweq	r0, #27141	; 0x6a05
     b0c:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
     b10:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b14:	12053d06 	andne	r3, r5, #384	; 0x180
     b18:	0e050106 	adfeqs	f0, f5, f6
     b1c:	0a05204a 	beq	148c4c <__RAM_SIZE+0x48c4c>
     b20:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
     b24:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b28:	12053d06 	andne	r3, r5, #384	; 0x180
     b2c:	0e050106 	adfeqs	f0, f5, f6
     b30:	0102204a 	tsteq	r2, sl, asr #32
     b34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b38:	02050001 	andeq	r0, r5, #1
     b3c:	10000a8c 	andne	r0, r0, ip, lsl #21
     b40:	01029903 	tsteq	r2, r3, lsl #18
     b44:	03050106 	movweq	r0, #20742	; 0x5106
     b48:	15135906 	ldrne	r5, [r3, #-2310]	; 0xfffff6fa
     b4c:	01060605 	tsteq	r6, r5, lsl #12
     b50:	21060505 	tstcs	r6, r5, lsl #10
     b54:	01060b05 	tsteq	r6, r5, lsl #22
     b58:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     b5c:	01060605 	tsteq	r6, r5, lsl #12
     b60:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     b64:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     b68:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     b6c:	02004d01 	andeq	r4, r0, #1, 26	; 0x40
     b70:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     b74:	0402000e 	streq	r0, [r2], #-14
     b78:	12052e08 	andne	r2, r5, #8, 28	; 0x80
     b7c:	08040200 	stmdaeq	r4, {r9}
     b80:	0007052e 	andeq	r0, r7, lr, lsr #10
     b84:	06080402 	streq	r0, [r8], -r2, lsl #8
     b88:	000d0559 	andeq	r0, sp, r9, asr r5
     b8c:	06080402 	streq	r0, [r8], -r2, lsl #8
     b90:	04020001 	streq	r0, [r2], #-1
     b94:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     b98:	13060804 	movwne	r0, #26628	; 0x6804
     b9c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     ba0:	01060804 	tsteq	r6, r4, lsl #16
     ba4:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     ba8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     bac:	0d052c0e 	stceq	12, cr2, [r5, #-56]	; 0xffffffc8
     bb0:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
     bb4:	07050f06 	streq	r0, [r5, -r6, lsl #30]
     bb8:	06270513 			; <UNDEFINED> instruction: 0x06270513
     bbc:	4a120501 	bmi	481fc8 <__RAM_SIZE+0x381fc8>
     bc0:	2f060705 	svccs	0x00060705
     bc4:	01061205 	tsteq	r6, r5, lsl #4
     bc8:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
     bcc:	3c3c0204 	lfmcc	f0, 4, [ip], #-16
     bd0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     bd4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     bd8:	12052007 	andne	r2, r5, #7
     bdc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     be0:	5855052e 	ldmdapl	r5, {r1, r2, r3, r5, r8, sl}^
     be4:	030a052e 	movweq	r0, #42286	; 0xa52e
     be8:	03050175 	movweq	r0, #20853	; 0x5175
     bec:	20100306 	andscs	r0, r0, r6, lsl #6
     bf0:	01060a05 	tsteq	r6, r5, lsl #20
     bf4:	2ed70105 	cdpcs	1, 13, cr0, cr7, cr5, {0}
     bf8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     bfc:	02050001 	andeq	r0, r5, #1
     c00:	10000b20 	andne	r0, r0, r0, lsr #22
     c04:	0102b203 	tsteq	r2, r3, lsl #4
     c08:	03050106 	movweq	r0, #20742	; 0x5106
     c0c:	1513d706 	ldrne	sp, [r3, #-1798]	; 0xfffff8fa
     c10:	01060605 	tsteq	r6, r5, lsl #12
     c14:	0605052e 	streq	r0, [r5], -lr, lsr #10
     c18:	060b0521 	streq	r0, [fp], -r1, lsr #10
     c1c:	06030501 	streq	r0, [r3], -r1, lsl #10
     c20:	06060532 			; <UNDEFINED> instruction: 0x06060532
     c24:	00220501 	eoreq	r0, r2, r1, lsl #10
     c28:	3c010402 	cfstrscc	mvf0, [r1], {2}
     c2c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     c30:	055b0104 	ldrbeq	r0, [fp, #-260]	; 0xfffffefc
     c34:	0402000e 	streq	r0, [r2], #-14
     c38:	12053c08 	andne	r3, r5, #8, 24	; 0x800
     c3c:	08040200 	stmdaeq	r4, {r9}
     c40:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     c44:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     c48:	08040200 	stmdaeq	r4, {r9}
     c4c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     c50:	08040200 	stmdaeq	r4, {r9}
     c54:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     c58:	00660804 	rsbeq	r0, r6, r4, lsl #16
     c5c:	06080402 	streq	r0, [r8], -r2, lsl #8
     c60:	00050513 	andeq	r0, r5, r3, lsl r5
     c64:	06080402 	streq	r0, [r8], -r2, lsl #8
     c68:	00140501 	andseq	r0, r4, r1, lsl #10
     c6c:	4a010402 	bmi	41c7c <__HEAP_SIZE+0x40c7c>
     c70:	053a0e05 	ldreq	r0, [sl, #-3589]!	; 0xfffff1fb
     c74:	052e210d 	streq	r2, [lr, #-269]!	; 0xfffffef3
     c78:	050f0605 	streq	r0, [pc, #-1541]	; 67b <__STACKSEAL_SIZE+0x67b>
     c7c:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     c80:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     c84:	06070566 	streq	r0, [r7], -r6, ror #10
     c88:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     c8c:	00550501 	subseq	r0, r5, r1, lsl #10
     c90:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     c94:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     c98:	12052007 	andne	r2, r5, #7
     c9c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     ca0:	3c55052e 	cfldr64cc	mvdx0, [r5], {46}	; 0x2e
     ca4:	030a052e 	movweq	r0, #42286	; 0xa52e
     ca8:	03050175 	movweq	r0, #20853	; 0x5175
     cac:	2e100306 	cdpcs	3, 1, cr0, cr0, cr6, {0}
     cb0:	01060a05 	tsteq	r6, r5, lsl #20
     cb4:	3d080105 	stfccs	f0, [r8, #-20]	; 0xffffffec
     cb8:	0101003c 	tsteq	r1, ip, lsr r0
     cbc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     cc0:	000be802 	andeq	lr, fp, r2, lsl #16
     cc4:	03d30310 	bicseq	r0, r3, #16, 6	; 0x40000000
     cc8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     ccc:	05920603 	ldreq	r0, [r2, #1539]	; 0x603
     cd0:	2e010606 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx6
     cd4:	052e2020 	streq	r2, [lr, #-32]!	; 0xffffffe0
     cd8:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
     cdc:	2d053c01 	stccs	12, cr3, [r5, #-4]
     ce0:	02040200 	andeq	r0, r4, #0, 4
     ce4:	0603059e 			; <UNDEFINED> instruction: 0x0603059e
     ce8:	060513b1 			; <UNDEFINED> instruction: 0x060513b1
     cec:	03050106 	movweq	r0, #20742	; 0x5106
     cf0:	0605cd06 	streq	ip, [r5], -r6, lsl #26
     cf4:	0a050106 	beq	141114 <__RAM_SIZE+0x41114>
     cf8:	06030559 			; <UNDEFINED> instruction: 0x06030559
     cfc:	05131733 	ldreq	r1, [r3, #-1843]	; 0xfffff8cd
     d00:	053c060e 	ldreq	r0, [ip, #-1550]!	; 0xfffff9f2
     d04:	052f0603 	streq	r0, [pc, #-1539]!	; 709 <__STACKSEAL_SIZE+0x709>
     d08:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     d0c:	03052e2c 	movweq	r2, #24108	; 0x5e2c
     d10:	2d055a06 	vstrcs	s10, [r5, #-24]	; 0xffffffe8
     d14:	2e2e0106 	sufcse	f0, f6, f6
     d18:	05582605 	ldrbeq	r2, [r8, #-1541]	; 0xfffff9fb
     d1c:	5205744b 	andpl	r7, r5, #1258291200	; 0x4b000000
     d20:	74410566 	strbvc	r0, [r1], #-1382	; 0xfffffa9a
     d24:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
     d28:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
     d2c:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
     d30:	05742b05 	ldrbeq	r2, [r4, #-2821]!	; 0xfffff4fb
     d34:	03054a08 	movweq	r4, #23048	; 0x5a08
     d38:	1c053d06 	stcne	13, cr3, [r5], {6}
     d3c:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
     d40:	10055837 	andne	r5, r5, r7, lsr r8
     d44:	0603059e 			; <UNDEFINED> instruction: 0x0603059e
     d48:	06100567 	ldreq	r0, [r0], -r7, ror #10
     d4c:	06030501 	streq	r0, [r3], -r1, lsl #10
     d50:	061c0567 	ldreq	r0, [ip], -r7, ror #10
     d54:	2e240501 	cfsh64cs	mvdx0, mvdx4, #1
     d58:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     d5c:	01061305 	tsteq	r6, r5, lsl #6
     d60:	581c053c 	ldmdapl	ip, {r2, r3, r4, r5, r8, sl}
     d64:	203c0582 	eorscs	r0, ip, r2, lsl #11
     d68:	05663705 	strbeq	r3, [r6, #-1797]!	; 0xfffff8fb
     d6c:	2b056631 	blcs	15a638 <__RAM_SIZE+0x5a638>
     d70:	6626054a 	strtvs	r0, [r6], -sl, asr #10
     d74:	05662005 	strbeq	r2, [r6, #-5]!
     d78:	0f056617 	svceq	0x00056617
     d7c:	4a0a054a 	bmi	2822ac <__RAM_SIZE+0x1822ac>
     d80:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     d84:	01060605 	tsteq	r6, r5, lsl #12
     d88:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
     d8c:	01060b05 	tsteq	r6, r5, lsl #22
     d90:	21060505 	tstcs	r6, r5, lsl #10
     d94:	01060c05 	tsteq	r6, r5, lsl #24
     d98:	86060305 	strhi	r0, [r6], -r5, lsl #6
     d9c:	01062b05 	tsteq	r6, r5, lsl #22
     da0:	2e2e4405 	cdpcs	4, 2, cr4, cr14, cr5, {0}
     da4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     da8:	23060404 	movwcs	r0, #25604	; 0x6404
     dac:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     db0:	01060404 	tsteq	r6, r4, lsl #8
     db4:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
     db8:	01060805 	tsteq	r6, r5, lsl #16
     dbc:	02001905 	andeq	r1, r0, #81920	; 0x14000
     dc0:	05ac0104 	streq	r0, [ip, #260]!	; 0x104
     dc4:	05910607 	ldreq	r0, [r1, #1543]	; 0x607
     dc8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     dcc:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
     dd0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     dd4:	052e202e 	streq	r2, [lr, #-46]!	; 0xffffffd2
     dd8:	51030605 	tstpl	r3, r5, lsl #12
     ddc:	060c0520 	streq	r0, [ip], -r0, lsr #10
     de0:	03010501 	movweq	r0, #5377	; 0x1501
     de4:	3cf200e4 	ldclcc	0, cr0, [r2], #912	; 0x390
     de8:	03060505 	movweq	r0, #25861	; 0x6505
     dec:	052e7fa2 	streq	r7, [lr, #-4002]!	; 0xfffff05e
     df0:	9e01060b 	cfmadd32ls	mvax0, mvfx0, mvfx1, mvfx11
     df4:	22034405 	andcs	r4, r3, #83886080	; 0x5000000
     df8:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
     dfc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     e00:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
     e04:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     e08:	134c0607 	movtne	r0, #50695	; 0xc607
     e0c:	11061005 	tstne	r6, r5
     e10:	06030521 	streq	r0, [r3], -r1, lsr #10
     e14:	13200b03 			; <UNDEFINED> instruction: 0x13200b03
     e18:	01060605 	tsteq	r6, r5, lsl #12
     e1c:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     e20:	01060c05 	tsteq	r6, r5, lsl #24
     e24:	0607052e 	streq	r0, [r7], -lr, lsr #10
     e28:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
     e2c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     e30:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
     e34:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
     e38:	3c063d06 	stccc	13, cr3, [r6], {6}
     e3c:	0c030c05 	stceq	12, cr0, [r3], {5}
     e40:	05013402 	streq	r3, [r1, #-1026]	; 0xfffffbfe
     e44:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     e48:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     e4c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     e50:	0c054a01 			; <UNDEFINED> instruction: 0x0c054a01
     e54:	06030522 	streq	r0, [r3], -r2, lsr #10
     e58:	06060532 			; <UNDEFINED> instruction: 0x06060532
     e5c:	06050501 	streq	r0, [r5], -r1, lsl #10
     e60:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     e64:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     e68:	6a060305 	bvs	181a84 <__RAM_SIZE+0x81a84>
     e6c:	06090513 			; <UNDEFINED> instruction: 0x06090513
     e70:	04020001 	streq	r0, [r2], #-1
     e74:	03058204 	movweq	r8, #20996	; 0x5204
     e78:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e7c:	05230806 	streq	r0, [r3, #-2054]!	; 0xfffff7fa
     e80:	04020006 	streq	r0, [r2], #-6
     e84:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     e88:	003e0605 	eorseq	r0, lr, r5, lsl #12
     e8c:	06040402 	streq	r0, [r4], -r2, lsl #8
     e90:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     e94:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
     e98:	5a060404 	bpl	181eb0 <__RAM_SIZE+0x81eb0>
     e9c:	02004705 	andeq	r4, r0, #1310720	; 0x140000
     ea0:	01060404 	tsteq	r6, r4, lsl #8
     ea4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     ea8:	004a0404 	subeq	r0, sl, r4, lsl #8
     eac:	3c040402 	cfstrscc	mvf0, [r4], {2}
     eb0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     eb4:	d8060404 	stmdale	r6, {r2, sl}
     eb8:	02000805 	andeq	r0, r0, #327680	; 0x50000
     ebc:	01060404 	tsteq	r6, r4, lsl #8
     ec0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     ec4:	00090566 	andeq	r0, r9, r6, ror #10
     ec8:	03010402 	movweq	r0, #5122	; 0x1402
     ecc:	02002077 	andeq	r2, r0, #119	; 0x77
     ed0:	05740104 	ldrbeq	r0, [r4, #-260]!	; 0xfffffefc
     ed4:	27052505 	strcs	r2, [r5, -r5, lsl #10]
     ed8:	02040200 	andeq	r0, r4, #0, 4
     edc:	02004106 	andeq	r4, r0, #-2147483647	; 0x80000001
     ee0:	20060204 	andcs	r0, r6, r4, lsl #4
     ee4:	02000d05 	andeq	r0, r0, #320	; 0x140
     ee8:	58060104 	stmdapl	r6, {r2, r8}
     eec:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ef0:	01060104 	tsteq	r6, r4, lsl #2
     ef4:	02000d05 	andeq	r0, r0, #320	; 0x140
     ef8:	002e0104 	eoreq	r0, lr, r4, lsl #2
     efc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     f00:	01000202 	tsteq	r0, r2, lsl #4
     f04:	00010501 	andeq	r0, r1, r1, lsl #10
     f08:	0fd80205 	svceq	0x00d80205
     f0c:	d3031000 	movwle	r1, #12288	; 0x3000
     f10:	01060102 	tsteq	r6, r2, lsl #2
     f14:	bb060305 	bllt	181b30 <__RAM_SIZE+0x81b30>
     f18:	15151313 	ldrne	r1, [r5, #-787]	; 0xfffffced
     f1c:	01060605 	tsteq	r6, r5, lsl #12
     f20:	20202020 	eorcs	r2, r0, r0, lsr #32
     f24:	4c060305 	stcmi	3, cr0, [r6], {5}
     f28:	01060605 	tsteq	r6, r5, lsl #12
     f2c:	a0060305 	andge	r0, r6, r5, lsl #6
     f30:	01060605 	tsteq	r6, r5, lsl #12
     f34:	95060305 	strls	r0, [r6, #-773]	; 0xfffffcfb
     f38:	01060605 	tsteq	r6, r5, lsl #12
     f3c:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     f40:	05900104 	ldreq	r0, [r0, #260]	; 0x104
     f44:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
     f48:	06051390 			; <UNDEFINED> instruction: 0x06051390
     f4c:	08050106 	stmdaeq	r5, {r1, r2, r8}
     f50:	06030581 	streq	r0, [r3], -r1, lsl #11
     f54:	06060535 			; <UNDEFINED> instruction: 0x06060535
     f58:	4b0a0501 	blmi	282364 <__RAM_SIZE+0x182364>
     f5c:	23060905 	movwcs	r0, #26885	; 0x6905
     f60:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     f64:	2e060104 	adfcss	f0, f6, f4
     f68:	2f060505 	svccs	0x00060505
     f6c:	01061005 	tsteq	r6, r5
     f70:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     f74:	01060905 	tsteq	r6, r5, lsl #18
     f78:	201f0c05 	andscs	r0, pc, r5, lsl #24
     f7c:	03060505 	movweq	r0, #25861	; 0x6505
     f80:	0c052063 	stceq	0, cr2, [r5], {99}	; 0x63
     f84:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f88:	0c05e606 	stceq	6, cr14, [r5], {6}
     f8c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f90:	0c05e606 	stceq	6, cr14, [r5], {6}
     f94:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     f98:	20580404 	subscs	r0, r8, r4, lsl #8
     f9c:	08040200 	stmdaeq	r4, {r9}
     fa0:	0505c820 	streq	ip, [r5, #-2080]	; 0xfffff7e0
     fa4:	0c055006 	stceq	0, cr5, [r5], {6}
     fa8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     fac:	d6090306 	strle	r0, [r9], -r6, lsl #6
     fb0:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
     fb4:	810e0501 	tsthi	lr, r1, lsl #10
     fb8:	05420a05 	strbeq	r0, [r2, #-2565]	; 0xfffff5fb
     fbc:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
     fc0:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     fc4:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     fc8:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
     fcc:	05662705 	strbeq	r2, [r6, #-1797]!	; 0xfffff8fb
     fd0:	0305580a 	movweq	r5, #22538	; 0x580a
     fd4:	11058306 	tstne	r5, r6, lsl #6
     fd8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     fdc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     fe0:	2e01060e 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx14
     fe4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
     fe8:	05840603 	streq	r0, [r4, #1539]	; 0x603
     fec:	20010606 	andcs	r0, r1, r6, lsl #12
     ff0:	4b060505 	blmi	18240c <__RAM_SIZE+0x8240c>
     ff4:	060e0522 	streq	r0, [lr], -r2, lsr #10
     ff8:	58080501 	stmdapl	r8, {r0, r8, sl}
     ffc:	59060705 	stmdbpl	r6, {r0, r2, r8, r9, sl}
    1000:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    1004:	0603051f 			; <UNDEFINED> instruction: 0x0603051f
    1008:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    100c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1010:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1014:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1018:	0558580a 	ldrbeq	r5, [r8, #-2058]	; 0xfffff7f6
    101c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1020:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1024:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    1028:	29055802 	stmdbcs	r5, {r1, fp, ip, lr}
    102c:	03040200 	movweq	r0, #16896	; 0x4200
    1030:	06070582 	streq	r0, [r7], -r2, lsl #11
    1034:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
    1038:	74030608 	strvc	r0, [r3], #-1544	; 0xfffff9f8
    103c:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1040:	06080501 	streq	r0, [r8], -r1, lsl #10
    1044:	060b0584 	streq	r0, [fp], -r4, lsl #11
    1048:	00190501 	andseq	r0, r9, r1, lsl #10
    104c:	20010402 	andcs	r0, r1, r2, lsl #8
    1050:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1054:	0b052006 	bleq	149074 <__RAM_SIZE+0x49074>
    1058:	200e0306 	andcs	r0, lr, r6, lsl #6
    105c:	212f0705 			; <UNDEFINED> instruction: 0x212f0705
    1060:	01062705 	tsteq	r6, r5, lsl #14
    1064:	05900e05 	ldreq	r0, [r0, #3589]	; 0xe05
    1068:	12052014 	andne	r2, r5, #20
    106c:	06070520 	streq	r0, [r7], -r0, lsr #10
    1070:	060a0567 	streq	r0, [sl], -r7, ror #10
    1074:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
    1078:	2e1f0e05 	cdpcs	14, 1, cr0, cr15, cr5, {0}
    107c:	26060b05 	strcs	r0, [r6], -r5, lsl #22
    1080:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    1084:	2e060104 	adfcss	f0, f6, f4
    1088:	02002c05 	andeq	r2, r0, #1280	; 0x500
    108c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1090:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    1094:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1098:	0e056535 	mcreq	5, 0, r6, cr5, cr5, {1}
    109c:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
    10a0:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
    10a4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    10a8:	12053006 	andne	r3, r5, #6
    10ac:	0e050106 	adfeqs	f0, f5, f6
    10b0:	09052066 	stmdbeq	r5, {r1, r2, r5, r6, sp}
    10b4:	05051706 	streq	r1, [r5, #-1798]	; 0xfffff8fa
    10b8:	0625052f 	strteq	r0, [r5], -pc, lsr #10
    10bc:	ac0c0501 	cfstr32ge	mvfx0, [ip], {1}
    10c0:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    10c4:	05052010 	streq	r2, [r5, #-16]
    10c8:	11056706 	tstne	r5, r6, lsl #14
    10cc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    10d0:	1f0c0520 	svcne	0x000c0520
    10d4:	0305c808 	movweq	ip, #22536	; 0x5808
    10d8:	1d052706 	stcne	7, cr2, [r5, #-24]	; 0xffffffe8
    10dc:	06050106 	streq	r0, [r5], -r6, lsl #2
    10e0:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    10e4:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    10e8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    10ec:	052f0605 	streq	r0, [pc, #-1541]!	; aef <__Vectors_Size+0x32f>
    10f0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    10f4:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
    10f8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10fc:	0305660e 	movweq	r6, #22030	; 0x560e
    1100:	200a0306 	andcs	r0, sl, r6, lsl #6
    1104:	01060a05 	tsteq	r6, r5, lsl #20
    1108:	05c90105 	strbeq	r0, [r9, #261]	; 0x105
    110c:	6b030605 	blvs	c2928 <__HEAP_SIZE+0xc1928>
    1110:	06080558 			; <UNDEFINED> instruction: 0x06080558
    1114:	000f0501 	andeq	r0, pc, r1, lsl #10
    1118:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    111c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    1120:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1124:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    1128:	3c01060c 	stccc	6, cr0, [r1], {12}
    112c:	31060705 	tstcc	r6, r5, lsl #14
    1130:	01061205 	tsteq	r6, r5, lsl #4
    1134:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    1138:	051f060b 	ldreq	r0, [pc, #-1547]	; b35 <__Vectors_Size+0x375>
    113c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1140:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1144:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1148:	03060a05 	movweq	r0, #27141	; 0x6a05
    114c:	0d054a09 	vstreq	s8, [r5, #-36]	; 0xffffffdc
    1150:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1154:	12054b06 	andne	r4, r5, #6144	; 0x1800
    1158:	0e050106 	adfeqs	f0, f5, f6
    115c:	0a052066 	beq	1492fc <__RAM_SIZE+0x492fc>
    1160:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    1164:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1168:	12054b06 	andne	r4, r5, #6144	; 0x1800
    116c:	0e050106 	adfeqs	f0, f5, f6
    1170:	01022066 	tsteq	r2, r6, rrx
    1174:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1178:	02050001 	andeq	r0, r5, #1
    117c:	10001370 	andne	r1, r0, r0, ror r3
    1180:	0104c103 	tsteq	r4, r3, lsl #2
    1184:	03050106 	movweq	r0, #20742	; 0x5106
    1188:	14136706 	ldrne	r6, [r3], #-1798	; 0xfffff8fa
    118c:	01060605 	tsteq	r6, r5, lsl #12
    1190:	d3030905 	movwle	r0, #14597	; 0x3905
    1194:	06204a01 	strteq	r4, [r0], -r1, lsl #20
    1198:	017eb203 	cmneq	lr, r3, lsl #4
    119c:	01060a05 	tsteq	r6, r5, lsl #20
    11a0:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    11a4:	053f0605 	ldreq	r0, [pc, #-1541]!	; ba7 <__Vectors_Size+0x3e7>
    11a8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    11ac:	06300607 	ldrteq	r0, [r0], -r7, lsl #12
    11b0:	054b0620 	strbeq	r0, [fp, #-1568]	; 0xfffff9e0
    11b4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    11b8:	063d0607 	ldrteq	r0, [sp], -r7, lsl #12
    11bc:	24062210 	strcs	r2, [r6], #-528	; 0xfffffdf0
    11c0:	01060d05 	tsteq	r6, r5, lsl #26
    11c4:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    11c8:	01060b05 	tsteq	r6, r5, lsl #22
    11cc:	21060505 	tstcs	r6, r5, lsl #10
    11d0:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
    11d4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    11d8:	0d052e07 	stceq	14, cr2, [r5, #-28]	; 0xffffffe4
    11dc:	0505ec06 	streq	lr, [r5, #-3078]	; 0xfffff3fa
    11e0:	14051315 	strne	r1, [r5], #-789	; 0xfffffceb
    11e4:	017ccd03 	cmneq	ip, r3, lsl #26
    11e8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    11ec:	3c010616 	stccc	6, cr0, [r1], {22}
    11f0:	b1030805 	tstlt	r3, r5, lsl #16
    11f4:	0a050103 	beq	141608 <__RAM_SIZE+0x41608>
    11f8:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    11fc:	0b050106 	bleq	14161c <__RAM_SIZE+0x4161c>
    1200:	0605052a 	streq	r0, [r5], -sl, lsr #10
    1204:	132e1103 			; <UNDEFINED> instruction: 0x132e1103
    1208:	01060905 	tsteq	r6, r5, lsl #18
    120c:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    1210:	05052d0f 	streq	r2, [r5, #-3343]	; 0xfffff2f1
    1214:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    1218:	01060d05 	tsteq	r6, r5, lsl #26
    121c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1220:	56030613 			; <UNDEFINED> instruction: 0x56030613
    1224:	061905e4 	ldreq	r0, [r9], -r4, ror #11
    1228:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    122c:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1230:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    1234:	013d052e 	teqeq	sp, lr, lsr #10
    1238:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    123c:	207a0313 	rsbscs	r0, sl, r3, lsl r3
    1240:	01061905 	tsteq	r6, r5, lsl #18
    1244:	2e062b05 	vmlacs.f64	d2, d6, d5
    1248:	01063105 	tsteq	r6, r5, lsl #2
    124c:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1250:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1254:	1305180d 	movwne	r1, #22541	; 0x580d
    1258:	0619051b 			; <UNDEFINED> instruction: 0x0619051b
    125c:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1260:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1264:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    1268:	013d052e 	teqeq	sp, lr, lsr #10
    126c:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    1270:	19051c13 	stmdbne	r5, {r0, r1, r4, sl, fp, ip}
    1274:	2b050106 	blcs	141694 <__RAM_SIZE+0x41694>
    1278:	31052e06 	tstcc	r5, r6, lsl #28
    127c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1280:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1284:	160d0501 	strne	r0, [sp], -r1, lsl #10
    1288:	051d1305 	ldreq	r1, [sp, #-773]	; 0xfffffcfb
    128c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1290:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1294:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1298:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    129c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    12a0:	25070515 	strcs	r0, [r7, #-1301]	; 0xfffffaeb
    12a4:	01060f05 	tsteq	r6, r5, lsl #30
    12a8:	0607054a 	streq	r0, [r7], -sl, asr #10
    12ac:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    12b0:	06070501 	streq	r0, [r7], -r1, lsl #10
    12b4:	060a054b 	streq	r0, [sl], -fp, asr #10
    12b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12bc:	060f0533 			; <UNDEFINED> instruction: 0x060f0533
    12c0:	06070501 	streq	r0, [r7], -r1, lsl #10
    12c4:	060d0522 	streq	r0, [sp], -r2, lsr #10
    12c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12cc:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
    12d0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    12d4:	052f0609 	streq	r0, [pc, #-1545]!	; cd3 <__Vectors_Size+0x513>
    12d8:	2e01061f 	mcrcs	6, 0, r0, cr1, cr15, {0}
    12dc:	06070520 	streq	r0, [r7], -r0, lsr #10
    12e0:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    12e4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    12e8:	052f0607 	streq	r0, [pc, #-1543]!	; ce9 <__Vectors_Size+0x529>
    12ec:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    12f0:	052f0607 	streq	r0, [pc, #-1543]!	; cf1 <__Vectors_Size+0x531>
    12f4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    12f8:	b9030614 	stmdblt	r3, {r2, r4, r9, sl}
    12fc:	0305207c 	movweq	r2, #20604	; 0x507c
    1300:	06160514 			; <UNDEFINED> instruction: 0x06160514
    1304:	0a053c01 	beq	150310 <__RAM_SIZE+0x50310>
    1308:	0103c503 	tsteq	r3, r3, lsl #10
    130c:	31060c05 	tstcc	r6, r5, lsl #24
    1310:	01060f05 	tsteq	r6, r5, lsl #30
    1314:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    1318:	05410609 	strbeq	r0, [r1, #-1545]	; 0xfffff9f7
    131c:	4a010615 	bmi	42b78 <__HEAP_SIZE+0x41b78>
    1320:	23060905 	movwcs	r0, #26885	; 0x6905
    1324:	01061305 	tsteq	r6, r5, lsl #6
    1328:	4b060905 	blmi	183744 <__RAM_SIZE+0x83744>
    132c:	01063305 	tsteq	r6, r5, lsl #6
    1330:	2f060905 	svccs	0x00060905
    1334:	01060f05 	tsteq	r6, r5, lsl #30
    1338:	0609054a 	streq	r0, [r9], -sl, asr #10
    133c:	060f0519 			; <UNDEFINED> instruction: 0x060f0519
    1340:	06090501 	streq	r0, [r9], -r1, lsl #10
    1344:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1348:	06090501 	streq	r0, [r9], -r1, lsl #10
    134c:	060d052f 	streq	r0, [sp], -pc, lsr #10
    1350:	200c0501 	andcs	r0, ip, r1, lsl #10
    1354:	052c0f05 	streq	r0, [ip, #-3845]!	; 0xfffff0fb
    1358:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    135c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1360:	052f060b 	streq	r0, [pc, #-1547]!	; d5d <__Vectors_Size+0x59d>
    1364:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1368:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    136c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1370:	052f0609 	streq	r0, [pc, #-1545]!	; d6f <__Vectors_Size+0x5af>
    1374:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1378:	052f0609 	streq	r0, [pc, #-1545]!	; d77 <__Vectors_Size+0x5b7>
    137c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1380:	0f05200c 	svceq	0x0005200c
    1384:	060b052c 	streq	r0, [fp], -ip, lsr #10
    1388:	06110531 			; <UNDEFINED> instruction: 0x06110531
    138c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1390:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1394:	06090501 	streq	r0, [r9], -r1, lsl #10
    1398:	060f0541 	streq	r0, [pc], -r1, asr #10
    139c:	06090501 	streq	r0, [r9], -r1, lsl #10
    13a0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    13a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    13a8:	0305052f 	movweq	r0, #21807	; 0x552f
    13ac:	0d05010f 	stfeqs	f0, [r5, #-60]	; 0xffffffc4
    13b0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    13b4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    13b8:	5b027403 	blpl	9e3cc <__HEAP_SIZE+0x9d3cc>
    13bc:	060f0501 	streq	r0, [pc], -r1, lsl #10
    13c0:	06090501 	streq	r0, [r9], -r1, lsl #10
    13c4:	060f052f 	streq	r0, [pc], -pc, lsr #10
    13c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    13cc:	0f05222f 	svceq	0x0005222f
    13d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13d4:	0f052f06 	svceq	0x00052f06
    13d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13dc:	0f032f06 	svceq	0x00032f06
    13e0:	0c051320 	stceq	3, cr1, [r5], {32}
    13e4:	1c050106 	stfnes	f0, [r5], {6}
    13e8:	01040200 	mrseq	r0, R12_usr
    13ec:	060e052e 	streq	r0, [lr], -lr, lsr #10
    13f0:	06110531 			; <UNDEFINED> instruction: 0x06110531
    13f4:	060e0501 	streq	r0, [lr], -r1, lsl #10
    13f8:	06110531 			; <UNDEFINED> instruction: 0x06110531
    13fc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1400:	11051332 	tstne	r5, r2, lsr r3
    1404:	10050106 	andne	r0, r5, r6, lsl #2
    1408:	2e77032d 	cdpcs	3, 7, cr0, cr7, cr13, {1}
    140c:	03060905 	movweq	r0, #26885	; 0x6905
    1410:	0c05200d 	stceq	0, cr2, [r5], {13}
    1414:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1418:	0c053306 	stceq	3, cr3, [r5], {6}
    141c:	1e050106 	adfnes	f0, f5, f6
    1420:	01040200 	mrseq	r0, R12_usr
    1424:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1428:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    142c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1430:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1434:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1438:	0611053d 			; <UNDEFINED> instruction: 0x0611053d
    143c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1440:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1444:	001e0501 	andseq	r0, lr, r1, lsl #10
    1448:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    144c:	03060b05 	movweq	r0, #27397	; 0x6b05
    1450:	0e052e13 	mcreq	14, 0, r2, cr5, cr3, {0}
    1454:	10050106 	andne	r0, r5, r6, lsl #2
    1458:	13054f06 	movwne	r4, #24326	; 0x5f06
    145c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1460:	67054e06 	strvs	r4, [r5, -r6, lsl #28]
    1464:	4e050106 	adfmis	f0, f5, f6
    1468:	000d054a 	andeq	r0, sp, sl, asr #10
    146c:	06080402 	streq	r0, [r8], -r2, lsl #8
    1470:	0013054b 	andseq	r0, r3, fp, asr #10
    1474:	06080402 	streq	r0, [r8], -r2, lsl #8
    1478:	04020001 	streq	r0, [r2], #-1
    147c:	02007408 	andeq	r7, r0, #8, 8	; 0x8000000
    1480:	004a0804 	subeq	r0, sl, r4, lsl #16
    1484:	4a080402 	bmi	202494 <__RAM_SIZE+0x102494>
    1488:	08040200 	stmdaeq	r4, {r9}
    148c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1490:	10052008 	andne	r2, r5, r8
    1494:	31014703 	tstcc	r1, r3, lsl #14
    1498:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    149c:	06110536 			; <UNDEFINED> instruction: 0x06110536
    14a0:	0b052e01 	bleq	14ccac <__RAM_SIZE+0x4ccac>
    14a4:	20100306 	andscs	r0, r0, r6, lsl #6
    14a8:	01060e05 	tsteq	r6, r5, lsl #28
    14ac:	42061005 	andmi	r1, r6, #5
    14b0:	01061305 	tsteq	r6, r5, lsl #6
    14b4:	41060d05 	tstmi	r6, r5, lsl #26
    14b8:	01064c05 	tsteq	r6, r5, lsl #24
    14bc:	053c3c05 	ldreq	r3, [ip, #-3077]!	; 0xfffff3fb
    14c0:	0402000d 	streq	r0, [r2], #-13
    14c4:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
    14c8:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    14cc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    14d0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    14d4:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    14d8:	00740804 	rsbseq	r0, r4, r4, lsl #16
    14dc:	3c080402 	cfstrscc	mvf0, [r8], {2}
    14e0:	08040200 	stmdaeq	r4, {r9}
    14e4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    14e8:	09052008 	stmdbeq	r5, {r3, sp}
    14ec:	01120306 	tsteq	r2, r6, lsl #6
    14f0:	01060f05 	tsteq	r6, r5, lsl #30
    14f4:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14f8:	63030d05 	movwvs	r0, #15621	; 0x3d05
    14fc:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    1500:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1504:	063d0583 	ldrteq	r0, [sp], -r3, lsl #11
    1508:	4a130501 	bmi	4c2914 <__RAM_SIZE+0x3c2914>
    150c:	20ac582e 	adccs	r5, ip, lr, lsr #16
    1510:	05203d05 	streq	r3, [r0, #-3333]!	; 0xfffff2fb
    1514:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    1518:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    151c:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    1520:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    1524:	589e4a13 	ldmpl	lr, {r0, r1, r4, r9, fp, lr}
    1528:	01810520 	orreq	r0, r1, r0, lsr #10
    152c:	02040200 	andeq	r0, r4, #0, 4
    1530:	3c710523 	cfldr64cc	mvdx0, [r1], #-140	; 0xffffff74
    1534:	053c6605 	ldreq	r6, [ip, #-1541]!	; 0xfffff9fb
    1538:	583c0181 	ldmdapl	ip!, {r0, r7, r8}
    153c:	1a060d05 	bne	184958 <__RAM_SIZE+0x84958>
    1540:	01061305 	tsteq	r6, r5, lsl #6
    1544:	20584a08 	subscs	r4, r8, r8, lsl #20
    1548:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    154c:	01061305 	tsteq	r6, r5, lsl #6
    1550:	0520909e 	streq	r9, [r0, #-158]!	; 0xffffff62
    1554:	020001ae 	andeq	r0, r0, #-2147483605	; 0x8000002b
    1558:	05230204 	streq	r0, [r3, #-516]!	; 0xfffffdfc
    155c:	053c0195 	ldreq	r0, [ip, #-405]!	; 0xfffffe6b
    1560:	585801ae 	ldmdapl	r8, {r1, r2, r3, r5, r7, r8}^
    1564:	03060905 	movweq	r0, #26885	; 0x6905
    1568:	0c05010a 	stfeqs	f0, [r5], {10}
    156c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1570:	0f052f06 	svceq	0x00052f06
    1574:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1578:	05670806 	strbeq	r0, [r7, #-2054]!	; 0xfffff7fa
    157c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1580:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    1584:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1588:	23051d01 	movwcs	r1, #23809	; 0x5d01
    158c:	01040200 	mrseq	r0, R12_usr
    1590:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1594:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1598:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    159c:	060c0520 	streq	r0, [ip], -r0, lsr #10
    15a0:	001d0501 	andseq	r0, sp, r1, lsl #10
    15a4:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    15a8:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    15ac:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    15b0:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    15b4:	01060304 	tsteq	r6, r4, lsl #6
    15b8:	2f060905 	svccs	0x00060905
    15bc:	01060c05 	tsteq	r6, r5, lsl #24
    15c0:	02001d05 	andeq	r1, r0, #320	; 0x140
    15c4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    15c8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    15cc:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    15d0:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    15d4:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    15d8:	052f0609 	streq	r0, [pc, #-1545]!	; fd7 <__Vectors_Size+0x817>
    15dc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    15e0:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    15e4:	01060f05 	tsteq	r6, r5, lsl #30
    15e8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    15ec:	0c051424 	cfstrseq	mvf1, [r5], {36}	; 0x24
    15f0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    15f4:	09051e16 	stmdbeq	r5, {r1, r2, r4, r9, sl, fp, ip}
    15f8:	13053606 	movwne	r3, #22022	; 0x5606
    15fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1600:	5a062e3c 	bpl	18cef8 <__RAM_SIZE+0x8cef8>
    1604:	01060c05 	tsteq	r6, r5, lsl #24
    1608:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    160c:	01060f05 	tsteq	r6, r5, lsl #30
    1610:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1614:	74030d05 	strvc	r0, [r3], #-3333	; 0xfffff2fb
    1618:	052e062e 	streq	r0, [lr, #-1582]!	; 0xfffff9d2
    161c:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    1620:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1624:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    1628:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    162c:	2b16052e 	blcs	582aec <__RAM_SIZE+0x482aec>
    1630:	053c2e3c 	ldreq	r2, [ip, #-3644]!	; 0xfffff1c4
    1634:	0c03060d 	stceq	6, cr0, [r3], {13}
    1638:	05200620 	streq	r0, [r0, #-1568]!	; 0xfffff9e0
    163c:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    1640:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1644:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    1648:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    164c:	09052e2e 	stmdbeq	r5, {r1, r2, r3, r5, r9, sl, fp, sp}
    1650:	01090306 	tsteq	r9, r6, lsl #6
    1654:	01061505 	tsteq	r6, r5, lsl #10
    1658:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    165c:	01061a05 	tsteq	r6, r5, lsl #20
    1660:	03062605 	movweq	r2, #26117	; 0x6605
    1664:	05747b90 	ldrbeq	r7, [r4, #-2960]!	; 0xfffff470
    1668:	1e050122 	adfnesp	f0, f5, f2
    166c:	11052e06 	tstne	r5, r6, lsl #28
    1670:	03052006 	movweq	r2, #20486	; 0x5006
    1674:	1e052e06 	cdpne	14, 0, cr2, cr5, cr6, {0}
    1678:	20140520 	andscs	r0, r4, r0, lsr #10
    167c:	2f060305 	svccs	0x00060305
    1680:	01061b05 	tsteq	r6, r5, lsl #22
    1684:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1688:	0104f103 	tsteq	r4, r3, lsl #2	; <UNPREDICTABLE>
    168c:	01060c05 	tsteq	r6, r5, lsl #24
    1690:	4b060b05 	blmi	1842ac <__RAM_SIZE+0x842ac>
    1694:	01060d05 	tsteq	r6, r5, lsl #26
    1698:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    169c:	01060c05 	tsteq	r6, r5, lsl #24
    16a0:	20202e4a 	eorcs	r2, r0, sl, asr #28
    16a4:	2e1b1a05 	vnmlscs.f32	s2, s22, s10
    16a8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    16ac:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    16b0:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    16b4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    16b8:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    16bc:	20110501 	andscs	r0, r1, r1, lsl #10
    16c0:	3c2e1305 	stccc	3, cr1, [lr], #-20	; 0xffffffec
    16c4:	25450520 	strbcs	r0, [r5, #-1312]	; 0xfffffae0
    16c8:	21060b05 	tstcs	r6, r5, lsl #22
    16cc:	01061205 	tsteq	r6, r5, lsl #4
    16d0:	202e0b05 	eorcs	r0, lr, r5, lsl #22
    16d4:	49060f05 	stmdbmi	r6, {r0, r2, r8, r9, sl, fp}
    16d8:	01061105 	tsteq	r6, r5, lsl #2
    16dc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    16e0:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    16e4:	45052001 	strmi	r2, [r5, #-1]
    16e8:	02040200 	andeq	r0, r4, #0, 4
    16ec:	0039052e 	eorseq	r0, r9, lr, lsr #10
    16f0:	20020402 	andcs	r0, r2, r2, lsl #8
    16f4:	05320c05 	ldreq	r0, [r2, #-3077]!	; 0xfffff3fb
    16f8:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    16fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1700:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1704:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1708:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    170c:	0d052e20 	stceq	14, cr2, [r5, #-128]	; 0xffffff80
    1710:	20061c06 	andcs	r1, r6, r6, lsl #24
    1714:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1718:	1105210d 	tstne	r5, sp, lsl #2
    171c:	13051f06 	movwne	r1, #24326	; 0x5f06
    1720:	11050106 	tstne	r5, r6, lsl #2
    1724:	20202e2e 	eorcs	r2, r0, lr, lsr #28
    1728:	03060905 	movweq	r0, #26885	; 0x6905
    172c:	05130109 	ldreq	r0, [r3, #-265]	; 0xfffffef7
    1730:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1734:	13300609 	teqne	r0, #9437184	; 0x900000
    1738:	05170b05 	ldreq	r0, [r7, #-2821]	; 0xfffff4fb
    173c:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    1740:	09054a11 	stmdbeq	r5, {r0, r4, r9, fp, lr}
    1744:	05160806 	ldreq	r0, [r6, #-2054]	; 0xfffff7fa
    1748:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    174c:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    1750:	06160620 	ldreq	r0, [r6], -r0, lsr #12
    1754:	05590620 	ldrbeq	r0, [r9, #-1568]	; 0xfffff9e0
    1758:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    175c:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    1760:	23062210 	movwcs	r2, #25104	; 0x6210
    1764:	4b062006 	blmi	189784 <__RAM_SIZE+0x89784>
    1768:	01060f05 	tsteq	r6, r5, lsl #30
    176c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1770:	03221006 			; <UNDEFINED> instruction: 0x03221006
    1774:	05207df8 	streq	r7, [r0, #-3576]!	; 0xfffff208
    1778:	8d030603 	stchi	6, cr0, [r3, #-12]
    177c:	02002e02 	andeq	r2, r0, #2, 28
    1780:	2e060104 	adfcss	f0, f6, f4
    1784:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1788:	02002004 	andeq	r2, r0, #4
    178c:	4d060404 	cfstrsmi	mvf0, [r6, #-16]
    1790:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    1794:	13060404 	movwne	r0, #25604	; 0x6404
    1798:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    179c:	0003024a 	andeq	r0, r3, sl, asr #4
    17a0:	01050101 	tsteq	r5, r1, lsl #2
    17a4:	f0020500 			; <UNDEFINED> instruction: 0xf0020500
    17a8:	03100019 	tsteq	r0, #25
    17ac:	05010195 	streq	r0, [r1, #-405]	; 0xfffffe6b
    17b0:	11051303 	tstne	r5, r3, lsl #6
    17b4:	011c0501 	tsteq	ip, r1, lsl #10
    17b8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    17bc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    17c0:	05052c01 	streq	r2, [r5, #-3073]	; 0xfffff3ff
    17c4:	01052306 	tsteq	r5, r6, lsl #6
    17c8:	01023006 	tsteq	r2, r6
    17cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17d0:	02050001 	andeq	r0, r5, #1
    17d4:	100019fc 	strdne	r1, [r0], -ip
    17d8:	0106de03 	tsteq	r6, r3, lsl #28
    17dc:	03050106 	movweq	r0, #20742	; 0x5106
    17e0:	21136706 	tstcs	r3, r6, lsl #14
    17e4:	06130513 			; <UNDEFINED> instruction: 0x06130513
    17e8:	06030501 	streq	r0, [r3], -r1, lsl #10
    17ec:	01051375 	tsteq	r5, r5, ror r3
    17f0:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    17f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17f8:	02050001 	andeq	r0, r5, #1
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	0106e903 	tsteq	r6, r3, lsl #18
    1804:	03050106 	movweq	r0, #20742	; 0x5106
    1808:	21137506 	tstcs	r3, r6, lsl #10
    180c:	01061305 	tsteq	r6, r5, lsl #6
    1810:	0603054a 	streq	r0, [r3], -sl, asr #10
    1814:	0105132f 	tsteq	r5, pc, lsr #6
    1818:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    181c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1820:	02050001 	andeq	r0, r5, #1
    1824:	00000000 	andeq	r0, r0, r0
    1828:	0106f303 	tsteq	r6, r3, lsl #6	; <UNPREDICTABLE>
    182c:	03050106 	movweq	r0, #20742	; 0x5106
    1830:	21137506 	tstcs	r3, r6, lsl #10
    1834:	01061305 	tsteq	r6, r5, lsl #6
    1838:	0305202e 	movweq	r2, #20526	; 0x502e
    183c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1840:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1844:	01010007 	tsteq	r1, r7
    1848:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    184c:	00000002 	andeq	r0, r0, r2
    1850:	06fd0300 	ldrbteq	r0, [sp], r0, lsl #6
    1854:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1858:	133d0603 	teqne	sp, #3145728	; 0x300000
    185c:	01060a05 	tsteq	r6, r5, lsl #20
    1860:	0105204a 	tsteq	r5, sl, asr #32
    1864:	0006022f 	andeq	r0, r6, pc, lsr #4
    1868:	01050101 	tsteq	r5, r1, lsl #2
    186c:	00020500 	andeq	r0, r2, r0, lsl #10
    1870:	03000000 	movweq	r0, #0
    1874:	06010784 	streq	r0, [r1], -r4, lsl #15
    1878:	06030501 	streq	r0, [r3], -r1, lsl #10
    187c:	060a052f 	streq	r0, [sl], -pc, lsr #10
    1880:	20202e01 	eorcs	r2, r0, r1, lsl #28
    1884:	2f010520 	svccs	0x00010520
    1888:	01000502 	tsteq	r0, r2, lsl #10
    188c:	00010501 	andeq	r0, r1, r1, lsl #10
    1890:	00000205 	andeq	r0, r0, r5, lsl #4
    1894:	8a030000 	bhi	c189c <__HEAP_SIZE+0xc089c>
    1898:	01060107 	tsteq	r6, r7, lsl #2
    189c:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    18a0:	1b052113 	blne	149cf4 <__RAM_SIZE+0x49cf4>
    18a4:	03050106 	movweq	r0, #20742	; 0x5106
    18a8:	13052f06 	movwne	r2, #24326	; 0x5f06
    18ac:	05580106 	ldrbeq	r0, [r8, #-262]	; 0xfffffefa
    18b0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    18b4:	13060105 	movwne	r0, #24837	; 0x6105
    18b8:	01000802 	tsteq	r0, r2, lsl #16
    18bc:	00033801 	andeq	r3, r3, r1, lsl #16
    18c0:	cc000300 	stcgt	3, cr0, [r0], {-0}
    18c4:	02000001 	andeq	r0, r0, #1
    18c8:	0d0efb01 	vstreq	d15, [lr, #-4]
    18cc:	01010100 	mrseq	r0, (UNDEF: 17)
    18d0:	00000001 	andeq	r0, r0, r1
    18d4:	01000001 	tsteq	r0, r1
    18d8:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    18dc:	2f65726f 	svccs	0x0065726f
    18e0:	00637253 	rsbeq	r7, r3, r3, asr r2
    18e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    18e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    18ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    18f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    18f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    18f8:	615c6d61 	cmpvs	ip, r1, ror #26
    18fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1900:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1904:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1908:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    190c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1910:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1914:	2e30312d 	rsfcssp	f3, f0, #5.0
    1918:	30322d33 	eorscc	r2, r2, r3, lsr sp
    191c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1920:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1924:	6f6e2d6d 	svcvs	0x006e2d6d
    1928:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    192c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1930:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1934:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1938:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    193c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1940:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1944:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1948:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    194c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1950:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1954:	615c6d61 	cmpvs	ip, r1, ror #26
    1958:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    195c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1960:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1964:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1968:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    196c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1970:	2e30312d 	rsfcssp	f3, f0, #5.0
    1974:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1978:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    197c:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    1980:	63675c62 	cmnvs	r7, #25088	; 0x6200
    1984:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    1988:	6f6e2d6d 	svcvs	0x006e2d6d
    198c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1990:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1994:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1998:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    199c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    19a0:	63006564 	movwvs	r6, #1380	; 0x564
    19a4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    19a8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    19ac:	6f646978 	svcvs	0x00646978
    19b0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    19b4:	6172676f 	cmnvs	r2, pc, ror #14
    19b8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    19bc:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    19c0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    19c4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    19c8:	6f6e2d6d 	svcvs	0x006e2d6d
    19cc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    19d0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    19d4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    19d8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    19dc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    19e0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    19e4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    19e8:	61652d65 	cmnvs	r5, r5, ror #26
    19ec:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    19f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    19f4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    19f8:	63007379 	movwvs	r7, #889	; 0x379
    19fc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1a00:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1a04:	6f646978 	svcvs	0x00646978
    1a08:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1a0c:	6172676f 	cmnvs	r2, pc, ror #14
    1a10:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1a14:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1a18:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1a1c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1a20:	6f6e2d6d 	svcvs	0x006e2d6d
    1a24:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1a28:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1a2c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1a30:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1a34:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1a38:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1a3c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1a40:	61652d65 	cmnvs	r5, r5, ror #26
    1a44:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1a48:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1a4c:	00006564 	andeq	r6, r0, r4, ror #10
    1a50:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1a54:	0100632e 	tsteq	r0, lr, lsr #6
    1a58:	645f0000 	ldrbvs	r0, [pc], #-0	; 1a60 <__HEAP_SIZE+0xa60>
    1a5c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1a60:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1a68 <__HEAP_SIZE+0xa68>
    1a64:	73657079 	cmnvc	r5, #121	; 0x79
    1a68:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1a6c:	74730000 	ldrbtvc	r0, [r3], #-0
    1a70:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    1a74:	0300682e 	movweq	r6, #2094	; 0x82e
    1a78:	735f0000 	cmpvc	pc, #0
    1a7c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    1a80:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1a84:	73000004 	movwvc	r0, #4
    1a88:	6f696474 	svcvs	0x00696474
    1a8c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1a90:	05000000 	streq	r0, [r0, #-0]
    1a94:	02050016 	andeq	r0, r5, #22
    1a98:	10001a28 	andne	r1, r0, r8, lsr #20
    1a9c:	05011c03 	streq	r1, [r1, #-3075]	; 0xfffff3fd
    1aa0:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1aa4:	0b051301 	bleq	1466b0 <__RAM_SIZE+0x466b0>
    1aa8:	01040200 	mrseq	r0, R12_usr
    1aac:	000c0501 	andeq	r0, ip, r1, lsl #10
    1ab0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ab4:	000b0501 	andeq	r0, fp, r1, lsl #10
    1ab8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1abc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1ac0:	01061605 	tsteq	r6, r5, lsl #12
    1ac4:	2f060505 	svccs	0x00060505
    1ac8:	13060105 	movwne	r0, #24837	; 0x6105
    1acc:	01000302 	tsteq	r0, r2, lsl #6
    1ad0:	00140501 	andseq	r0, r4, r1, lsl #10
    1ad4:	00000205 	andeq	r0, r0, r5, lsl #4
    1ad8:	22030000 	andcs	r0, r3, #0
    1adc:	002b0501 	eoreq	r0, fp, r1, lsl #10
    1ae0:	13010402 	movwne	r0, #5122	; 0x1402
    1ae4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1ae8:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    1aec:	0402000d 	streq	r0, [r2], #-13
    1af0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1af4:	0402000b 	streq	r0, [r2], #-11
    1af8:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1afc:	0c053d06 	stceq	13, cr3, [r5], {6}
    1b00:	01050106 	tsteq	r5, r6, lsl #2
    1b04:	0003022f 	andeq	r0, r3, pc, lsr #4
    1b08:	1e050101 	adfnes	f0, f5, f1
    1b0c:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
    1b10:	0310001a 	tsteq	r0, #26
    1b14:	01060127 	tsteq	r6, r7, lsr #2
    1b18:	2f060505 	svccs	0x00060505
    1b1c:	06090513 			; <UNDEFINED> instruction: 0x06090513
    1b20:	210b0511 	tstcs	fp, r1, lsl r5
    1b24:	21060905 	tstcs	r6, r5, lsl #18
    1b28:	060e052f 	streq	r0, [lr], -pc, lsr #10
    1b2c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1b30:	0612051e 			; <UNDEFINED> instruction: 0x0612051e
    1b34:	200b0501 	andcs	r0, fp, r1, lsl #10
    1b38:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    1b3c:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
    1b40:	01002e13 	tsteq	r0, r3, lsl lr
    1b44:	00160501 	andseq	r0, r6, r1, lsl #10
    1b48:	1a5c0205 	bne	1702364 <__RAM_SIZE+0x1602364>
    1b4c:	31031000 	mrscc	r1, (UNDEF: 3)
    1b50:	13050501 	movwne	r0, #21761	; 0x5501
    1b54:	01061605 	tsteq	r6, r5, lsl #12
    1b58:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1b5c:	01061605 	tsteq	r6, r5, lsl #12
    1b60:	2f060505 	svccs	0x00060505
    1b64:	01061605 	tsteq	r6, r5, lsl #12
    1b68:	2f060505 	svccs	0x00060505
    1b6c:	01061605 	tsteq	r6, r5, lsl #12
    1b70:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1b74:	01061605 	tsteq	r6, r5, lsl #12
    1b78:	2f060505 	svccs	0x00060505
    1b7c:	01061605 	tsteq	r6, r5, lsl #12
    1b80:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1b84:	01010004 	tsteq	r1, r4
    1b88:	05002405 	streq	r2, [r0, #-1029]	; 0xfffffbfb
    1b8c:	00000002 	andeq	r0, r0, r2
    1b90:	013a0300 	teqeq	sl, r0, lsl #6
    1b94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b98:	01052106 	tsteq	r5, r6, lsl #2
    1b9c:	01022f06 	tsteq	r2, r6, lsl #30
    1ba0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ba4:	02050030 	andeq	r0, r5, #48	; 0x30
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	06013e03 	streq	r3, [r1], -r3, lsl #28
    1bb0:	06050501 	streq	r0, [r5], -r1, lsl #10
    1bb4:	0c05133d 	stceq	3, cr1, [r5], {61}	; 0x3d
    1bb8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bbc:	14053406 	strne	r3, [r5], #-1030	; 0xfffffbfa
    1bc0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bc4:	0c052106 	stfeqs	f2, [r5], {6}
    1bc8:	0b050106 	bleq	141fe8 <__RAM_SIZE+0x41fe8>
    1bcc:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    1bd0:	05010505 	streq	r0, [r1, #-1285]	; 0xfffffafb
    1bd4:	0e051309 	cdpeq	3, 0, cr1, cr5, cr9, {0}
    1bd8:	0c050106 	stfeqs	f0, [r5], {6}
    1bdc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1be0:	060b0521 	streq	r0, [fp], -r1, lsr #10
    1be4:	00170501 	andseq	r0, r7, r1, lsl #10
    1be8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1bec:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    1bf0:	13060105 	movwne	r0, #24837	; 0x6105
    1bf4:	01002020 	tsteq	r0, r0, lsr #32
    1bf8:	0005a401 	andeq	sl, r5, r1, lsl #8
    1bfc:	5b000300 	blpl	2804 <__HEAP_SIZE+0x1804>
    1c00:	02000002 	andeq	r0, r0, #2
    1c04:	0d0efb01 	vstreq	d15, [lr, #-4]
    1c08:	01010100 	mrseq	r0, (UNDEF: 17)
    1c0c:	00000001 	andeq	r0, r0, r1
    1c10:	01000001 	tsteq	r0, r1
    1c14:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1c18:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1c1c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1c20:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    1c24:	61662f73 	smcvs	25331	; 0x62f3
    1c28:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1c2c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1c30:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1c34:	2f2e2e00 	svccs	0x002e2e00
    1c38:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1c3c:	2f737265 	svccs	0x00737265
    1c40:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    1c44:	2f355f53 	svccs	0x00355f53
    1c48:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    1c4c:	6f432f53 	svcvs	0x00432f53
    1c50:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    1c54:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1c58:	63006564 	movwvs	r6, #1380	; 0x564
    1c5c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1c60:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1c64:	6f646978 	svcvs	0x00646978
    1c68:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1c6c:	6172676f 	cmnvs	r2, pc, ror #14
    1c70:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1c74:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1c78:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1c7c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1c80:	6f6e2d6d 	svcvs	0x006e2d6d
    1c84:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c88:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1c8c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1c90:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1c94:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1c98:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1c9c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1ca0:	61652d65 	cmnvs	r5, r5, ror #26
    1ca4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1ca8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1cac:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    1cb0:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    1cb4:	6300656e 	movwvs	r6, #1390	; 0x56e
    1cb8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1cbc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1cc0:	6f646978 	svcvs	0x00646978
    1cc4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1cc8:	6172676f 	cmnvs	r2, pc, ror #14
    1ccc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1cd0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1cd4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1cd8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1cdc:	6f6e2d6d 	svcvs	0x006e2d6d
    1ce0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1ce4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1ce8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1cec:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1cf0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1cf4:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    1cf8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1cfc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1d00:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1d04:	61652d65 	cmnvs	r5, r5, ror #26
    1d08:	315c6962 	cmpcc	ip, r2, ror #18
    1d0c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    1d10:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    1d14:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d18:	3a630065 	bcc	18c1eb4 <__RAM_SIZE+0x17c1eb4>
    1d1c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    1d20:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1d24:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1d28:	6f72705c 	svcvs	0x0072705c
    1d2c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1d30:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1d34:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1d38:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1d3c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1d40:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1d44:	61652d65 	cmnvs	r5, r5, ror #26
    1d48:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1d4c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    1d50:	31323032 	teqcc	r2, r2, lsr r0
    1d54:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1d58:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1d5c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1d60:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1d64:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1d68:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d6c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    1d70:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    1d74:	2f2e2e2f 	svccs	0x002e2e2f
    1d78:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1cc8 <__HEAP_SIZE+0xcc8>
    1d7c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    1d80:	2f736c69 	svccs	0x00736c69
    1d84:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1d88:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1d8c:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
    1d90:	6300636e 	movwvs	r6, #878	; 0x36e
    1d94:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1d98:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1d9c:	6f646978 	svcvs	0x00646978
    1da0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1da4:	6172676f 	cmnvs	r2, pc, ror #14
    1da8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1dac:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1db0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1db4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1db8:	6f6e2d6d 	svcvs	0x006e2d6d
    1dbc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1dc0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1dc4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1dc8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1dcc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1dd0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1dd4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1dd8:	61652d65 	cmnvs	r5, r5, ror #26
    1ddc:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1de0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1de4:	00006564 	andeq	r6, r0, r4, ror #10
    1de8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1dec:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1df0:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
    1df4:	00000100 	andeq	r0, r0, r0, lsl #2
    1df8:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    1dfc:	63675f73 	cmnvs	r7, #460	; 0x1cc
    1e00:	00682e63 	rsbeq	r2, r8, r3, ror #28
    1e04:	5f000002 	svcpl	0x00000002
    1e08:	61666564 	cmnvs	r6, r4, ror #10
    1e0c:	5f746c75 	svcpl	0x00746c75
    1e10:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1e14:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1e18:	73000003 	movwvc	r0, #3
    1e1c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    1e20:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1e24:	5f000004 	svcpl	0x00000004
    1e28:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1e2c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1e30:	00000500 	andeq	r0, r0, r0, lsl #10
    1e34:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1e38:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1e3c:	682e706d 	stmdavs	lr!, {r0, r2, r3, r5, r6, ip, sp, lr}
    1e40:	00000600 	andeq	r0, r0, r0, lsl #12
    1e44:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1e48:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1e4c:	3c000007 	stccc	0, cr0, [r0], {7}
    1e50:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    1e54:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    1e58:	0000003e 	andeq	r0, r0, lr, lsr r0
    1e5c:	38050000 	stmdacc	r5, {}	; <UNPREDICTABLE>
    1e60:	80020500 	andhi	r0, r2, r0, lsl #10
    1e64:	0310001a 	tsteq	r0, #26
    1e68:	060100fe 			; <UNDEFINED> instruction: 0x060100fe
    1e6c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e70:	060e0521 	streq	r0, [lr], -r1, lsr #10
    1e74:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e78:	0a05132f 	beq	146b3c <__RAM_SIZE+0x46b3c>
    1e7c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e80:	00090501 	andeq	r0, r9, r1, lsl #10
    1e84:	06030402 	streq	r0, [r3], -r2, lsl #8
    1e88:	00140521 	andseq	r0, r4, r1, lsr #10
    1e8c:	06030402 	streq	r0, [r3], -r2, lsl #8
    1e90:	00120501 	andseq	r0, r2, r1, lsl #10
    1e94:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    1e98:	02003d05 	andeq	r3, r0, #320	; 0x140
    1e9c:	57060304 	strpl	r0, [r6, -r4, lsl #6]
    1ea0:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    1ea4:	01060304 	tsteq	r6, r4, lsl #6
    1ea8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    1eac:	20060104 	andcs	r0, r6, r4, lsl #2
    1eb0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1eb4:	01060104 	tsteq	r6, r4, lsl #2
    1eb8:	22053106 	andcs	r3, r5, #-2147483647	; 0x80000001
    1ebc:	052f0106 	streq	r0, [pc, #-262]!	; 1dbe <__HEAP_SIZE+0xdbe>
    1ec0:	052f0605 	streq	r0, [pc, #-1541]!	; 18c3 <__HEAP_SIZE+0x8c3>
    1ec4:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    1ec8:	01000202 	tsteq	r0, r2, lsl #4
    1ecc:	00330501 	eorseq	r0, r3, r1, lsl #10
    1ed0:	1aac0205 	bne	feb026ec <__StackTop+0xc6a026ec>
    1ed4:	89031000 	stmdbhi	r3, {ip}
    1ed8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    1edc:	060e0516 			; <UNDEFINED> instruction: 0x060e0516
    1ee0:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ee4:	0632052f 	ldrteq	r0, [r2], -pc, lsr #10
    1ee8:	200e0501 	andcs	r0, lr, r1, lsl #10
    1eec:	2f060505 	svccs	0x00060505
    1ef0:	01060805 	tsteq	r6, r5, lsl #16
    1ef4:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1ef8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1efc:	053f0605 	ldreq	r0, [pc, #-1541]!	; 18ff <__HEAP_SIZE+0x8ff>
    1f00:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1f04:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    1f08:	0c053c01 	stceq	12, cr3, [r5], {1}
    1f0c:	1005203f 	andne	r2, r5, pc, lsr r0
    1f10:	2020201b 	eorcs	r2, r0, fp, lsl r0
    1f14:	05202023 	streq	r2, [r0, #-35]!	; 0xffffffdd
    1f18:	01022301 	tsteq	r2, r1, lsl #6
    1f1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f20:	02050036 	andeq	r0, r5, #54	; 0x36
    1f24:	10001ae4 	andne	r1, r0, r4, ror #21
    1f28:	01019803 	tsteq	r1, r3, lsl #16
    1f2c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1f30:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
    1f34:	05133006 	ldreq	r3, [r3, #-6]
    1f38:	203e0601 	eorscs	r0, lr, r1, lsl #12
    1f3c:	01000202 	tsteq	r0, r2, lsl #4
    1f40:	001c0501 	andseq	r0, ip, r1, lsl #10
    1f44:	1afc0205 	bne	fff02760 <__StackTop+0xc7e02760>
    1f48:	f3031000 	vhadd.u8	d1, d3, d0
    1f4c:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    1f50:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    1f54:	20180501 	andscs	r0, r8, r1, lsl #10
    1f58:	2f060505 	svccs	0x00060505
    1f5c:	01061a05 	tsteq	r6, r5, lsl #20
    1f60:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    1f64:	4c2f0605 	stcmi	6, cr0, [pc], #-20	; 1f58 <__HEAP_SIZE+0xf58>
    1f68:	06010568 	streq	r0, [r1], -r8, ror #10
    1f6c:	0013024c 	andseq	r0, r3, ip, asr #4
    1f70:	73050101 	movwvc	r0, #20737	; 0x5101
    1f74:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
    1f78:	0310001b 	tsteq	r0, #27
    1f7c:	060101db 			; <UNDEFINED> instruction: 0x060101db
    1f80:	06050501 	streq	r0, [r5], -r1, lsl #10
    1f84:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    1f88:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1f8c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1f90:	05055801 	streq	r5, [r5, #-2049]	; 0xfffff7ff
    1f94:	02002306 	andeq	r2, r0, #402653184	; 0x18000000
    1f98:	20060104 	andcs	r0, r6, r4, lsl #2
    1f9c:	05290905 	streq	r0, [r9, #-2309]!	; 0xfffff6fb
    1fa0:	04020005 	streq	r0, [r2], #-5
    1fa4:	00360602 	eorseq	r0, r6, r2, lsl #12
    1fa8:	20010402 	andcs	r0, r1, r2, lsl #8
    1fac:	03040200 	movweq	r0, #16896	; 0x4200
    1fb0:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1fb4:	0c053006 	stceq	0, cr3, [r5], {6}
    1fb8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1fbc:	13052206 	movwne	r2, #20998	; 0x5206
    1fc0:	0c050106 	stfeqs	f0, [r5], {6}
    1fc4:	002f0520 	eoreq	r0, pc, r0, lsr #10
    1fc8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1fcc:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1fd0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1fd4:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1fd8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1fdc:	14400609 	strbne	r0, [r0], #-1545	; 0xfffff9f7
    1fe0:	01060c05 	tsteq	r6, r5, lsl #24
    1fe4:	30060905 	andcc	r0, r6, r5, lsl #18
    1fe8:	01060c05 	tsteq	r6, r5, lsl #24
    1fec:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    1ff0:	01060e05 	tsteq	r6, r5, lsl #28
    1ff4:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    1ff8:	01060e05 	tsteq	r6, r5, lsl #28
    1ffc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    2000:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    2004:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2008:	052f0609 	streq	r0, [pc, #-1545]!	; 1a07 <__HEAP_SIZE+0xa07>
    200c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2010:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    2014:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2018:	10053301 	andne	r3, r5, r1, lsl #6
    201c:	3c3c5a03 			; <UNDEFINED> instruction: 0x3c3c5a03
    2020:	0602583f 			; <UNDEFINED> instruction: 0x0602583f
    2024:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2028:	02050043 	andeq	r0, r5, #67	; 0x43
    202c:	10001bc8 	andne	r1, r0, r8, asr #23
    2030:	0101a003 	tsteq	r1, r3
    2034:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2038:	13133d06 	tstne	r3, #384	; 0x180
    203c:	18051413 	stmdane	r5, {r0, r1, r4, sl, ip}
    2040:	16050106 	strne	r0, [r5], -r6, lsl #2
    2044:	06050520 	streq	r0, [r5], -r0, lsr #10
    2048:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    204c:	20160501 	andscs	r0, r6, r1, lsl #10
    2050:	21060505 	tstcs	r6, r5, lsl #10
    2054:	01061805 	tsteq	r6, r5, lsl #16
    2058:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    205c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2060:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2064:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2068:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    206c:	16050106 	strne	r0, [r5], -r6, lsl #2
    2070:	06050520 	streq	r0, [r5], -r0, lsr #10
    2074:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2078:	20160501 	andscs	r0, r6, r1, lsl #10
    207c:	21060505 	tstcs	r6, r5, lsl #10
    2080:	01061805 	tsteq	r6, r5, lsl #16
    2084:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2088:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    208c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2090:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2094:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2098:	16050106 	strne	r0, [r5], -r6, lsl #2
    209c:	06050520 	streq	r0, [r5], -r0, lsr #10
    20a0:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20a4:	20160501 	andscs	r0, r6, r1, lsl #10
    20a8:	21060505 	tstcs	r6, r5, lsl #10
    20ac:	01061805 	tsteq	r6, r5, lsl #16
    20b0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20b4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20b8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20bc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20c0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    20c4:	16050106 	strne	r0, [r5], -r6, lsl #2
    20c8:	06050520 	streq	r0, [r5], -r0, lsr #10
    20cc:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20d0:	20160501 	andscs	r0, r6, r1, lsl #10
    20d4:	21060505 	tstcs	r6, r5, lsl #10
    20d8:	01061805 	tsteq	r6, r5, lsl #16
    20dc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20e0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20e4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20e8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20ec:	2e062206 	cdpcs	2, 0, cr2, cr6, cr6, {0}
    20f0:	3d3d2f06 	ldccc	15, cr2, [sp, #-24]!	; 0xffffffe8
    20f4:	4b4b4b4b 	blmi	12d4e28 <__RAM_SIZE+0x11d4e28>
    20f8:	4b4b4b4b 	blmi	12d4e2c <__RAM_SIZE+0x11d4e2c>
    20fc:	4b4b4b4b 	blmi	12d4e30 <__RAM_SIZE+0x11d4e30>
    2100:	4b4b4b4b 	blmi	12d4e34 <__RAM_SIZE+0x11d4e34>
    2104:	05133e3d 	ldreq	r3, [r3, #-3645]	; 0xfffff1c3
    2108:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    210c:	06860605 	streq	r0, [r6], r5, lsl #12
    2110:	4b2f0620 	blmi	bc3998 <__RAM_SIZE+0xac3998>
    2114:	01061005 	tsteq	r6, r5
    2118:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    211c:	04020009 	streq	r0, [r2], #-9
    2120:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    2124:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    2128:	29056503 	stmdbcs	r5, {r0, r1, r8, sl, sp, lr}
    212c:	03040200 	movweq	r0, #16896	; 0x4200
    2130:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2134:	01040200 	mrseq	r0, R12_usr
    2138:	05052006 	streq	r2, [r5, #-6]
    213c:	01040200 	mrseq	r0, R12_usr
    2140:	31060106 	tstcc	r6, r6, lsl #2
    2144:	01040200 	mrseq	r0, R12_usr
    2148:	000e053d 	andeq	r0, lr, sp, lsr r5
    214c:	01010402 	tsteq	r1, r2, lsl #8
    2150:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    2154:	02010104 	andeq	r0, r1, #4, 2
    2158:	01010031 	tsteq	r1, r1, lsr r0
    215c:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    2160:	00000002 	andeq	r0, r0, r2
    2164:	02870300 	addeq	r0, r7, #0, 6
    2168:	13050501 	movwne	r0, #21761	; 0x5501
    216c:	1f050204 	svcne	0x00050204
    2170:	0106da03 	tsteq	r6, r3, lsl #20
    2174:	14140305 	ldrne	r0, [r4], #-773	; 0xfffffcfb
    2178:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    217c:	03010501 	movweq	r0, #5377	; 0x1501
    2180:	020179a2 	andeq	r7, r1, #2654208	; 0x288000
    2184:	01010001 	tsteq	r1, r1
    2188:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    218c:	00000002 	andeq	r0, r0, r2
    2190:	028b0300 	addeq	r0, fp, #0, 6
    2194:	13050501 	movwne	r0, #21761	; 0x5501
    2198:	13060105 	movwne	r0, #24837	; 0x6105
    219c:	01000402 	tsteq	r0, r2, lsl #8
    21a0:	00013301 	andeq	r3, r1, r1, lsl #6
    21a4:	bb000300 	bllt	2dac <__HEAP_SIZE+0x1dac>
    21a8:	02000000 	andeq	r0, r0, #0
    21ac:	0d0efb01 	vstreq	d15, [lr, #-4]
    21b0:	01010100 	mrseq	r0, (UNDEF: 17)
    21b4:	00000001 	andeq	r0, r0, r1
    21b8:	01000001 	tsteq	r0, r1
    21bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    21c0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    21c4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    21c8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    21cc:	61662f73 	smcvs	25331	; 0x62f3
    21d0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    21d4:	706d7564 	rsbvc	r7, sp, r4, ror #10
    21d8:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    21dc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    21e0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    21e4:	0033336d 	eorseq	r3, r3, sp, ror #6
    21e8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    21ec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    21f0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    21f4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    21f8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    21fc:	615c6d61 	cmpvs	ip, r1, ror #26
    2200:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    2204:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    2208:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    220c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2210:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2214:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2218:	2e30312d 	rsfcssp	f3, f0, #5.0
    221c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    2220:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    2224:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    2228:	6f6e2d6d 	svcvs	0x006e2d6d
    222c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2230:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2234:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2238:	00656475 	rsbeq	r6, r5, r5, ror r4
    223c:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2240:	682d746c 	stmdavs	sp!, {r2, r3, r5, r6, sl, ip, sp, lr}
    2244:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    2248:	00000100 	andeq	r0, r0, r0, lsl #2
    224c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    2250:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    2254:	00003e6e 	andeq	r3, r0, lr, ror #28
    2258:	74730000 	ldrbtvc	r0, [r3], #-0
    225c:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    2260:	00020068 	andeq	r0, r2, r8, rrx
    2264:	35050000 	strcc	r0, [r5, #-0]
    2268:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
    226c:	0310001d 	tsteq	r0, #29
    2270:	0106010e 	tsteq	r6, lr, lsl #2
    2274:	2f060505 	svccs	0x00060505
    2278:	2f062006 	svccs	0x00062006
    227c:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    2280:	06090501 	streq	r0, [r9], -r1, lsl #10
    2284:	4005053d 	andmi	r0, r5, sp, lsr r5
    2288:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    228c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2290:	4005053d 	andmi	r0, r5, sp, lsr r5
    2294:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    2298:	06090501 	streq	r0, [r9], -r1, lsl #10
    229c:	4005053d 	andmi	r0, r5, sp, lsr r5
    22a0:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    22a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    22a8:	4005053d 	andmi	r0, r5, sp, lsr r5
    22ac:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    22b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    22b4:	4005053d 	andmi	r0, r5, sp, lsr r5
    22b8:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    22bc:	06090501 	streq	r0, [r9], -r1, lsl #10
    22c0:	4005053d 	andmi	r0, r5, sp, lsr r5
    22c4:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
    22c8:	03060905 	movweq	r0, #26885	; 0x6905
    22cc:	5050205f 	subspl	r2, r0, pc, asr r0
    22d0:	02505050 	subseq	r5, r0, #80	; 0x50
    22d4:	0101002b 	tsteq	r1, fp, lsr #32
    22d8:	00000399 	muleq	r0, r9, r3
    22dc:	018c0003 	orreq	r0, ip, r3
    22e0:	01020000 	mrseq	r0, (UNDEF: 2)
    22e4:	000d0efb 	strdeq	r0, [sp], -fp
    22e8:	01010101 	tsteq	r1, r1, lsl #2
    22ec:	01000000 	mrseq	r0, (UNDEF: 0)
    22f0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    22f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    22f8:	2f2e2e2f 	svccs	0x002e2e2f
    22fc:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2300:	2f736f74 	svccs	0x00736f74
    2304:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2308:	534f5452 	movtpl	r5, #62546	; 0xf452
    230c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2310:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2314:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2318:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    231c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2320:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2324:	5f6d7261 	svcpl	0x006d7261
    2328:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    232c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2330:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2334:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2338:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    233c:	30312d69 	eorscc	r2, r1, r9, ror #26
    2340:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2344:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2348:	615c3031 	cmpvs	ip, r1, lsr r0
    234c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2350:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2354:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2358:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    235c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2360:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2364:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2368:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    236c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2370:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2374:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2378:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    237c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2380:	5f6d7261 	svcpl	0x006d7261
    2384:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2388:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    238c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2390:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2394:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2398:	30312d69 	eorscc	r2, r1, r9, ror #26
    239c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    23a0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    23a4:	615c3031 	cmpvs	ip, r1, lsr r0
    23a8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    23ac:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    23b0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    23b4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    23b8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    23bc:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    23c0:	2f2e2e00 	svccs	0x002e2e00
    23c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    23c8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    23cc:	6f747262 	svcvs	0x00747262
    23d0:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    23d4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    23d8:	702f534f 	eorvc	r5, pc, pc, asr #6
    23dc:	6174726f 	cmnvs	r4, pc, ror #4
    23e0:	2f656c62 	svccs	0x00656c62
    23e4:	2f434347 	svccs	0x00434347
    23e8:	5f4d5241 	svcpl	0x004d5241
    23ec:	33334d43 	teqcc	r3, #4288	; 0x10c0
    23f0:	5a544e5f 	bpl	1515d74 <__RAM_SIZE+0x1415d74>
    23f4:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    23f8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    23fc:	00657275 	rsbeq	r7, r5, r5, ror r2
    2400:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2404:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2408:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    240c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2410:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2414:	4f545265 	svcmi	0x00545265
    2418:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    241c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2420:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
    2424:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    2428:	00010063 	andeq	r0, r1, r3, rrx
    242c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    2430:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2434:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2438:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    243c:	00020068 	andeq	r0, r2, r8, rrx
    2440:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    2444:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    2448:	0300682e 	movweq	r6, #2094	; 0x82e
    244c:	6f700000 	svcvs	0x00700000
    2450:	616d7472 	smcvs	55106	; 0xd742
    2454:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    2458:	6f6d6d6f 	svcvs	0x006d6d6f
    245c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    2460:	6c000004 	stcvs	0, cr0, [r0], {4}
    2464:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    2468:	00050068 	andeq	r0, r5, r8, rrx
    246c:	01050000 	mrseq	r0, (UNDEF: 5)
    2470:	48020500 	stmdami	r2, {r8, sl}
    2474:	0310001e 	tsteq	r0, #30
    2478:	29050131 	stmdbcs	r5, {r0, r4, r5, r8}
    247c:	17050513 	smladne	r5, r3, r5, r0
    2480:	01062805 	tsteq	r6, r5, lsl #16
    2484:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    2488:	0522064b 	streq	r0, [r2, #-1611]!	; 0xfffff9b5
    248c:	21051605 	tstcs	r5, r5, lsl #12
    2490:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2494:	1d054006 	stcne	0, cr4, [r5, #-24]	; 0xffffffe8
    2498:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    249c:	21052106 	tstcs	r5, r6, lsl #2
    24a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    24a4:	22052506 	andcs	r2, r5, #25165824	; 0x1800000
    24a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    24ac:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    24b0:	50050106 	andpl	r0, r5, r6, lsl #2
    24b4:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    24b8:	061d0516 			; <UNDEFINED> instruction: 0x061d0516
    24bc:	06330501 	ldrteq	r0, [r3], -r1, lsl #10
    24c0:	22051324 	andcs	r1, r5, #36, 6	; 0x90000000
    24c4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    24c8:	00010213 	andeq	r0, r1, r3, lsl r2
    24cc:	01050101 	tsteq	r5, r1, lsl #2
    24d0:	62020500 	andvs	r0, r2, #0, 10
    24d4:	0310001e 	tsteq	r0, #30
    24d8:	050100d9 	streq	r0, [r1, #-217]	; 0xffffff27
    24dc:	0505132d 	streq	r1, [r5, #-813]	; 0xfffffcd3
    24e0:	06190515 			; <UNDEFINED> instruction: 0x06190515
    24e4:	063c0501 	ldrteq	r0, [ip], -r1, lsl #10
    24e8:	133d0532 	teqne	sp, #209715200	; 0xc800000
    24ec:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    24f0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    24f4:	01010001 	tsteq	r1, r1
    24f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    24fc:	00000002 	andeq	r0, r0, r2
    2500:	00ea0300 	rsceq	r0, sl, r0, lsl #6
    2504:	13050501 	movwne	r0, #21761	; 0x5501
    2508:	01061805 	tsteq	r6, r5, lsl #16
    250c:	22063705 	andcs	r3, r6, #1310720	; 0x140000
    2510:	05172605 	ldreq	r2, [r7, #-1541]	; 0xfffff9fb
    2514:	05051332 	streq	r1, [r5, #-818]	; 0xfffffcce
    2518:	061b0517 			; <UNDEFINED> instruction: 0x061b0517
    251c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2520:	06280521 	strteq	r0, [r8], -r1, lsr #10
    2524:	201f0501 	andscs	r0, pc, r1, lsl #10
    2528:	23061c05 	movwcs	r1, #27653	; 0x6c05
    252c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2530:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2534:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2538:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    253c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2540:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2544:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2548:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    254c:	21052023 	tstcs	r5, r3, lsr #32
    2550:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    2554:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2558:	01010001 	tsteq	r1, r1
    255c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2560:	001e6802 	andseq	r6, lr, r2, lsl #16
    2564:	018c0310 	orreq	r0, ip, r0, lsl r3
    2568:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    256c:	13210605 			; <UNDEFINED> instruction: 0x13210605
    2570:	01061605 	tsteq	r6, r5, lsl #12
    2574:	22063405 	andcs	r3, r6, #83886080	; 0x5000000
    2578:	05172605 	ldreq	r2, [r7, #-1541]	; 0xfffff9fb
    257c:	05051332 	streq	r1, [r5, #-818]	; 0xfffffcce
    2580:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    2584:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    2588:	1f030609 	svcne	0x00030609
    258c:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    2590:	00430501 	subeq	r0, r3, r1, lsl #10
    2594:	06010402 	streq	r0, [r1], -r2, lsl #8
    2598:	004d052e 	subeq	r0, sp, lr, lsr #10
    259c:	06010402 	streq	r0, [r1], -r2, lsl #8
    25a0:	00550520 	subseq	r0, r5, r0, lsr #10
    25a4:	20010402 	andcs	r0, r1, r2, lsl #8
    25a8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    25ac:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    25b0:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    25b4:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    25b8:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    25bc:	27052106 	strcs	r2, [r5, -r6, lsl #2]
    25c0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25c4:	1f052106 	svcne	0x00052106
    25c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25cc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    25d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25d4:	20052406 	andcs	r2, r5, r6, lsl #8
    25d8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25dc:	3b052206 	blcc	14adfc <__RAM_SIZE+0x4adfc>
    25e0:	23050106 	movwcs	r0, #20742	; 0x5106
    25e4:	20210520 	eorcs	r0, r1, r0, lsr #10
    25e8:	22061e05 	andcs	r1, r6, #5, 28	; 0x50
    25ec:	13060105 	movwne	r0, #24837	; 0x6105
    25f0:	06090520 	streq	r0, [r9], -r0, lsr #10
    25f4:	05205003 	streq	r5, [r0, #-3]!
    25f8:	20010614 	andcs	r0, r1, r4, lsl r6
    25fc:	01000102 	tsteq	r0, r2, lsl #2
    2600:	00010501 	andeq	r0, r1, r1, lsl #10
    2604:	1e9a0205 	cdpne	2, 9, cr0, cr10, cr5, {0}
    2608:	d7031000 	strle	r1, [r3, -r0]
    260c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2610:	06140515 			; <UNDEFINED> instruction: 0x06140515
    2614:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    2618:	14050522 	strne	r0, [r5], #-1314	; 0xfffffade
    261c:	01061305 	tsteq	r6, r5, lsl #6
    2620:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    2624:	05052028 	streq	r2, [r5, #-40]	; 0xffffffd8
    2628:	38052106 	stmdacc	r5, {r1, r2, r8, sp}
    262c:	28050106 	stmdacs	r5, {r1, r2, r8}
    2630:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    2634:	15050523 	strne	r0, [r5, #-1315]	; 0xfffffadd
    2638:	01060f05 	tsteq	r6, r5, lsl #30
    263c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2640:	05340621 	ldreq	r0, [r4, #-1569]!	; 0xfffff9df
    2644:	21051505 	tstcs	r5, r5, lsl #10
    2648:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    264c:	3b052f06 	blcc	14e26c <__RAM_SIZE+0x4e26c>
    2650:	23050106 	movwcs	r0, #20742	; 0x5106
    2654:	20210520 	eorcs	r0, r1, r0, lsr #10
    2658:	22063805 	andcs	r3, r6, #327680	; 0x50000
    265c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2660:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2664:	73030609 	movwvc	r0, #13833	; 0x3609
    2668:	06290520 	strteq	r0, [r9], -r0, lsr #10
    266c:	20190501 	andscs	r0, r9, r1, lsl #10
    2670:	01000202 	tsteq	r0, r2, lsl #4
    2674:	00172301 	andseq	r2, r7, r1, lsl #6
    2678:	3b000300 	blcc	3280 <__HEAP_SIZE+0x2280>
    267c:	02000002 	andeq	r0, r0, #2
    2680:	0d0efb01 	vstreq	d15, [lr, #-4]
    2684:	01010100 	mrseq	r0, (UNDEF: 17)
    2688:	00000001 	andeq	r0, r0, r1
    268c:	01000001 	tsteq	r0, r1
    2690:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2694:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2698:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    269c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    26a0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    26a4:	4f545265 	svcmi	0x00545265
    26a8:	3a630053 	bcc	18c27fc <__RAM_SIZE+0x17c27fc>
    26ac:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    26b0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    26b4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    26b8:	6f72705c 	svcvs	0x0072705c
    26bc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    26c0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    26c4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    26c8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    26cc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    26d0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    26d4:	61652d65 	cmnvs	r5, r5, ror #26
    26d8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    26dc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    26e0:	31323032 	teqcc	r2, r2, lsr r0
    26e4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    26e8:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    26ec:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    26f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    26f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    26f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    26fc:	30315c69 	eorscc	r5, r1, r9, ror #24
    2700:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    2704:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2708:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    270c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2710:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2714:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2718:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    271c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2720:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2724:	5f6d7261 	svcpl	0x006d7261
    2728:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    272c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2730:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2734:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2738:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    273c:	30312d69 	eorscc	r2, r1, r9, ror #26
    2740:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2744:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2748:	615c3031 	cmpvs	ip, r1, lsr r0
    274c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2750:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2754:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2758:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    275c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2760:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2764:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2768:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    276c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2770:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2774:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2778:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    277c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2780:	5f6d7261 	svcpl	0x006d7261
    2784:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2788:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    278c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2790:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2794:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2798:	30312d69 	eorscc	r2, r1, r9, ror #26
    279c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    27a0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    27a4:	615c3031 	cmpvs	ip, r1, lsr r0
    27a8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    27ac:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    27b0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    27b4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    27b8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    27bc:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    27c0:	2f2e2e00 	svccs	0x002e2e00
    27c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    27c8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    27cc:	6f747262 	svcvs	0x00747262
    27d0:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    27d4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    27d8:	702f534f 	eorvc	r5, pc, pc, asr #6
    27dc:	6174726f 	cmnvs	r4, pc, ror #4
    27e0:	2f656c62 	svccs	0x00656c62
    27e4:	2f434347 	svccs	0x00434347
    27e8:	5f4d5241 	svcpl	0x004d5241
    27ec:	33334d43 	teqcc	r3, #4288	; 0x10c0
    27f0:	5a544e5f 	bpl	1516174 <__RAM_SIZE+0x1416174>
    27f4:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    27f8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    27fc:	00657275 	rsbeq	r7, r5, r5, ror r2
    2800:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2804:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2808:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    280c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2810:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2814:	4f545265 	svcmi	0x00545265
    2818:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    281c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2820:	71000065 	tstvc	r0, r5, rrx
    2824:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2828:	0100632e 	tsteq	r0, lr, lsr #6
    282c:	74730000 	ldrbtvc	r0, [r3], #-0
    2830:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    2834:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2838:	645f0000 	ldrbvs	r0, [pc], #-0	; 2840 <__HEAP_SIZE+0x1840>
    283c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    2840:	745f746c 	ldrbvc	r7, [pc], #-1132	; 2848 <__HEAP_SIZE+0x1848>
    2844:	73657079 	cmnvc	r5, #121	; 0x79
    2848:	0300682e 	movweq	r6, #2094	; 0x82e
    284c:	735f0000 	cmpvc	pc, #0
    2850:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    2854:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2858:	70000004 	andvc	r0, r0, r4
    285c:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    2860:	6f726361 	svcvs	0x00726361
    2864:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2868:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    286c:	00000500 	andeq	r0, r0, r0, lsl #10
    2870:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2874:	534f5452 	movtpl	r5, #62546	; 0xf452
    2878:	0600682e 	streq	r6, [r0], -lr, lsr #16
    287c:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    2880:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    2884:	00000600 	andeq	r0, r0, r0, lsl #12
    2888:	6b736174 	blvs	1cdae60 <__RAM_SIZE+0x1bdae60>
    288c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2890:	75710000 	ldrbvc	r0, [r1, #-0]!
    2894:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    2898:	00060068 	andeq	r0, r6, r8, rrx
    289c:	726f7000 	rsbvc	r7, pc, #0
    28a0:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    28a4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    28a8:	3c000006 	stccc	0, cr0, [r0], {6}
    28ac:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    28b0:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    28b4:	0000003e 	andeq	r0, r0, lr, lsr r0
    28b8:	05050000 	streq	r0, [r5, #-0]
    28bc:	00020500 	andeq	r0, r2, r0, lsl #10
    28c0:	03000000 	movweq	r0, #0
    28c4:	060112bd 			; <UNDEFINED> instruction: 0x060112bd
    28c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    28cc:	0d051a21 	vstreq	s2, [r5, #-132]	; 0xffffff7c
    28d0:	0b050106 	bleq	142cf0 <__RAM_SIZE+0x42cf0>
    28d4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    28d8:	06780522 	ldrbteq	r0, [r8], -r2, lsr #10
    28dc:	2d052001 	stccs	0, cr2, [r5, #-4]
    28e0:	06090520 	streq	r0, [r9], -r0, lsr #10
    28e4:	06050535 			; <UNDEFINED> instruction: 0x06050535
    28e8:	00010213 	andeq	r0, r1, r3, lsl r2
    28ec:	01050101 	tsteq	r5, r1, lsl #2
    28f0:	00020500 	andeq	r0, r2, r0, lsl #10
    28f4:	03000000 	movweq	r0, #0
    28f8:	060114e3 	streq	r1, [r1], -r3, ror #9
    28fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    2900:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    2904:	06140530 			; <UNDEFINED> instruction: 0x06140530
    2908:	20320501 	eorscs	r0, r2, r1, lsl #10
    290c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2910:	05053415 	streq	r3, [r5, #-1045]	; 0xfffffbeb
    2914:	05302306 	ldreq	r2, [r0, #-774]!	; 0xfffffcfa
    2918:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    291c:	2e760315 	mrccs	3, 3, r0, cr6, cr5, {0}
    2920:	00010220 	andeq	r0, r1, r0, lsr #4
    2924:	01050101 	tsteq	r5, r1, lsl #2
    2928:	be020500 	cfsh32lt	mvfx0, mvfx2, #0
    292c:	0310001e 	tsteq	r0, #30
    2930:	060114b6 			; <UNDEFINED> instruction: 0x060114b6
    2934:	06050501 	streq	r0, [r5], -r1, lsl #10
    2938:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    293c:	06140530 			; <UNDEFINED> instruction: 0x06140530
    2940:	200b0501 	andcs	r0, fp, r1, lsl #10
    2944:	05221505 	streq	r1, [r2, #-1285]!	; 0xfffffafb
    2948:	30270605 	eorcc	r0, r7, r5, lsl #12
    294c:	13060105 	movwne	r0, #24837	; 0x6105
    2950:	7a031505 	bvc	c7d6c <__HEAP_SIZE+0xc6d6c>
    2954:	0102202e 	tsteq	r2, lr, lsr #32
    2958:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    295c:	02050001 	andeq	r0, r5, #1
    2960:	10001ed8 	ldrdne	r1, [r0], -r8
    2964:	0112d803 	tsteq	r2, r3, lsl #16
    2968:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    296c:	16133d06 	ldrne	r3, [r3], -r6, lsl #26
    2970:	01061705 	tsteq	r6, r5, lsl #14
    2974:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2978:	01061005 	tsteq	r6, r5
    297c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2980:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    2984:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2988:	1005200f 	andne	r2, r5, pc
    298c:	05207503 	streq	r7, [r0, #-1283]!	; 0xfffffafd
    2990:	c5030625 	strgt	r0, [r3, #-1573]	; 0xfffff9db
    2994:	05052000 	streq	r2, [r5, #-0]
    2998:	06220516 			; <UNDEFINED> instruction: 0x06220516
    299c:	20200501 	eorcs	r0, r0, r1, lsl #10
    29a0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    29a4:	13060105 	movwne	r0, #24837	; 0x6105
    29a8:	03061105 	movweq	r1, #24837	; 0x6105
    29ac:	1b052042 	blne	14aabc <__RAM_SIZE+0x4aabc>
    29b0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    29b4:	052f0611 	streq	r0, [pc, #-1553]!	; 23ab <__HEAP_SIZE+0x13ab>
    29b8:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    29bc:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
    29c0:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
    29c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    29c8:	06120522 	ldreq	r0, [r2], -r2, lsr #10
    29cc:	09052001 	stmdbeq	r5, {r0, sp}
    29d0:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    29d4:	1c050106 	stfnes	f0, [r5], {6}
    29d8:	06090520 	streq	r0, [r9], -r0, lsr #10
    29dc:	0634053e 			; <UNDEFINED> instruction: 0x0634053e
    29e0:	200b0501 	andcs	r0, fp, r1, lsl #10
    29e4:	30060d05 	andcc	r0, r6, r5, lsl #26
    29e8:	01062905 	tsteq	r6, r5, lsl #18
    29ec:	05202005 	streq	r2, [r0, #-5]!
    29f0:	20610310 	rsbcs	r0, r1, r0, lsl r3
    29f4:	03060905 	movweq	r0, #26885	; 0x6905
    29f8:	12052e28 	andne	r2, r5, #40, 28	; 0x280
    29fc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2a00:	052f0609 	streq	r0, [pc, #-1545]!	; 23ff <__HEAP_SIZE+0x13ff>
    2a04:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    2a08:	09052026 	stmdbeq	r5, {r1, r2, r5, sp}
    2a0c:	33054c06 	movwcc	r4, #23558	; 0x5c06
    2a10:	0b050106 	bleq	142e30 <__RAM_SIZE+0x42e30>
    2a14:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2a18:	063f0530 			; <UNDEFINED> instruction: 0x063f0530
    2a1c:	20470501 	subcs	r0, r7, r1, lsl #10
    2a20:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    2a24:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    2a28:	0b051509 	bleq	147e54 <__RAM_SIZE+0x47e54>
    2a2c:	10050106 	andne	r0, r5, r6, lsl #2
    2a30:	052e4c03 	streq	r4, [lr, #-3075]!	; 0xfffff3fd
    2a34:	3603060d 	strcc	r0, [r3], -sp, lsl #12
    2a38:	060f052e 	streq	r0, [pc], -lr, lsr #10
    2a3c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2a40:	06100526 	ldreq	r0, [r0], -r6, lsr #10
    2a44:	2e204403 	cdpcs	4, 2, cr4, cr0, cr3, {0}
    2a48:	0002022e 	andeq	r0, r2, lr, lsr #4
    2a4c:	01050101 	tsteq	r5, r1, lsl #2
    2a50:	4e020500 	cfsh32mi	mvfx0, mvfx2, #0
    2a54:	0310001f 	tsteq	r0, #31
    2a58:	060113aa 	streq	r1, [r1], -sl, lsr #7
    2a5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a60:	06100521 	ldreq	r0, [r0], -r1, lsr #10
    2a64:	20070501 	andcs	r0, r7, r1, lsl #10
    2a68:	051f0105 	ldreq	r0, [pc, #-261]	; 296b <__HEAP_SIZE+0x196b>
    2a6c:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    2a70:	20010626 	andcs	r0, r1, r6, lsr #12
    2a74:	30060905 	andcc	r0, r6, r5, lsl #18
    2a78:	01060b05 	tsteq	r6, r5, lsl #22
    2a7c:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    2a80:	01063305 	tsteq	r6, r5, lsl #6
    2a84:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    2a88:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    2a8c:	12051509 	andne	r1, r5, #37748736	; 0x2400000
    2a90:	01050106 	tsteq	r5, r6, lsl #2
    2a94:	0102203e 	tsteq	r2, lr, lsr r0
    2a98:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2a9c:	02050005 	andeq	r0, r5, #5
    2aa0:	10001f72 	andne	r1, r0, r2, ror pc
    2aa4:	0119ee03 	tsteq	r9, r3, lsl #28
    2aa8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2aac:	13053d06 	movwne	r3, #23814	; 0x5d06
    2ab0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2ab4:	2c052106 	stfcss	f2, [r5], {6}
    2ab8:	135f0519 	cmpne	pc, #104857600	; 0x6400000
    2abc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2ac0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2ac4:	0b052049 	bleq	14abf0 <__RAM_SIZE+0x4abf0>
    2ac8:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    2acc:	05052e76 	streq	r2, [r5, #-3702]	; 0xfffff18a
    2ad0:	05203103 	streq	r3, [r0, #-259]!	; 0xfffffefd
    2ad4:	5b03060d 	blpl	c4310 <__HEAP_SIZE+0xc3310>
    2ad8:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    2adc:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    2ae0:	150d053e 	strne	r0, [sp, #-1342]	; 0xfffffac2
    2ae4:	01061705 	tsteq	r6, r5, lsl #14
    2ae8:	0d052e3c 	stceq	14, cr2, [r5, #-240]	; 0xffffff10
    2aec:	0f052206 	svceq	0x00052206
    2af0:	11050106 	tstne	r5, r6, lsl #2
    2af4:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    2af8:	13050106 	movwne	r0, #20742	; 0x5106
    2afc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    2b00:	06190530 			; <UNDEFINED> instruction: 0x06190530
    2b04:	17052e01 	strne	r2, [r5, -r1, lsl #28]
    2b08:	3121052e 			; <UNDEFINED> instruction: 0x3121052e
    2b0c:	06250520 	strteq	r0, [r5], -r0, lsr #10
    2b10:	05011303 	streq	r1, [r1, #-771]	; 0xfffffcfd
    2b14:	10051509 	andne	r1, r5, r9, lsl #10
    2b18:	11050106 	tstne	r5, r6, lsl #2
    2b1c:	02040200 	andeq	r0, r4, #0, 4
    2b20:	20780306 	rsbscs	r0, r8, r6, lsl #6
    2b24:	02040200 	andeq	r0, r4, #0, 4
    2b28:	04020001 	streq	r0, [r2], #-1
    2b2c:	02002e02 	andeq	r2, r0, #2, 28
    2b30:	002e0104 	eoreq	r0, lr, r4, lsl #2
    2b34:	01010402 	tsteq	r1, r2, lsl #8
    2b38:	01040200 	mrseq	r0, R12_usr
    2b3c:	02002006 	andeq	r2, r0, #6
    2b40:	02200104 	eoreq	r0, r0, #4, 2
    2b44:	01010003 	tsteq	r1, r3
    2b48:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2b4c:	001fca02 	andseq	ip, pc, r2, lsl #20
    2b50:	13be0310 			; <UNDEFINED> instruction: 0x13be0310
    2b54:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2b58:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    2b5c:	10053009 	andne	r3, r5, r9
    2b60:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b64:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    2b68:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2b6c:	20190306 	andscs	r0, r9, r6, lsl #6
    2b70:	01061905 	tsteq	r6, r5, lsl #18
    2b74:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    2b78:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    2b7c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    2b80:	35054a1b 	strcc	r4, [r5, #-2587]	; 0xfffff5e5
    2b84:	0d052806 	stceq	8, cr2, [r5, #-24]	; 0xffffffe8
    2b88:	06012103 	streq	r2, [r1], -r3, lsl #2
    2b8c:	060e0520 	streq	r0, [lr], -r0, lsr #10
    2b90:	207fbc03 	rsbscs	fp, pc, r3, lsl #24
    2b94:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    2b98:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2b9c:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    2ba0:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    2ba4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    2ba8:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    2bac:	031d0533 	tsteq	sp, #213909504	; 0xcc00000
    2bb0:	09053c12 	stmdbeq	r5, {r1, r4, sl, fp, ip, sp}
    2bb4:	053c2803 	ldreq	r2, [ip, #-2051]!	; 0xfffff7fd
    2bb8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2bbc:	313e0605 	teqcc	lr, r5, lsl #12
    2bc0:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    2bc4:	2e010610 	mcrcs	6, 0, r0, cr1, cr0, {0}
    2bc8:	22060905 	andcs	r0, r6, #81920	; 0x14000
    2bcc:	01060e05 	tsteq	r6, r5, lsl #28
    2bd0:	03062d05 	movweq	r2, #27909	; 0x6d05
    2bd4:	1105200a 	tstne	r5, sl
    2bd8:	05200615 	streq	r0, [r0, #-1557]!	; 0xfffff9eb
    2bdc:	7303060e 	movwvc	r0, #13838	; 0x360e
    2be0:	300d0520 	andcc	r0, sp, r0, lsr #10
    2be4:	01061105 	tsteq	r6, r5, lsl #2
    2be8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    2bec:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    2bf0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2bf4:	15054a13 	strne	r4, [r5, #-2579]	; 0xfffff5ed
    2bf8:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    2bfc:	053c0f03 	ldreq	r0, [ip, #-3843]!	; 0xfffff0fd
    2c00:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2c04:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    2c08:	202f0601 	eorcs	r0, pc, r1, lsl #12
    2c0c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2c10:	02050001 	andeq	r0, r5, #1
    2c14:	1000204c 	andne	r2, r0, ip, asr #32
    2c18:	0102b003 	tsteq	r2, r3
    2c1c:	13130505 	tstne	r3, #20971520	; 0x1400000
    2c20:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    2c24:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    2c28:	06070514 			; <UNDEFINED> instruction: 0x06070514
    2c2c:	00010501 	andeq	r0, r1, r1, lsl #10
    2c30:	03010402 	movweq	r0, #5122	; 0x1402
    2c34:	12052e78 	andne	r2, r5, #120, 28	; 0x780
    2c38:	01040200 	mrseq	r0, R12_usr
    2c3c:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    2c40:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2c44:	36051f01 	strcc	r1, [r5], -r1, lsl #30
    2c48:	202c0531 	eorcs	r0, ip, r1, lsr r5
    2c4c:	3a250520 	bcc	9440d4 <__RAM_SIZE+0x8440d4>
    2c50:	2f031105 	svccs	0x00031105
    2c54:	06260520 	strteq	r0, [r6], -r0, lsr #10
    2c58:	162e0523 	strtne	r0, [lr], -r3, lsr #10
    2c5c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2c60:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2c64:	204a032c 	subcs	r0, sl, ip, lsr #6
    2c68:	30060905 	andcc	r0, r6, r5, lsl #18
    2c6c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    2c70:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    2c74:	57052043 	strpl	r2, [r5, -r3, asr #32]
    2c78:	20380520 	eorscs	r0, r8, r0, lsr #10
    2c7c:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    2c80:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    2c84:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2c88:	052f060d 	streq	r0, [pc, #-1549]!	; 2683 <__HEAP_SIZE+0x1683>
    2c8c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2c90:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    2c94:	05010654 	streq	r0, [r1, #-1620]	; 0xfffff9ac
    2c98:	2a05203c 	bcs	14ad90 <__RAM_SIZE+0x4ad90>
    2c9c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2ca0:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    2ca4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2ca8:	061e053d 			; <UNDEFINED> instruction: 0x061e053d
    2cac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2cb0:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    2cb4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2cb8:	06150527 	ldreq	r0, [r5], -r7, lsr #10
    2cbc:	20130501 	andscs	r0, r3, r1, lsl #10
    2cc0:	03060905 	movweq	r0, #26885	; 0x6905
    2cc4:	10052017 	andne	r2, r5, r7, lsl r0
    2cc8:	2e4d0306 	cdpcs	3, 4, cr0, cr13, cr6, {0}
    2ccc:	33030905 	movwcc	r0, #14597	; 0x3905
    2cd0:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    2cd4:	05206b03 	streq	r6, [r0, #-2819]!	; 0xfffff4fd
    2cd8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2cdc:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    2ce0:	11053006 	tstne	r5, r6
    2ce4:	4b3c0f03 	blmi	f068f8 <__RAM_SIZE+0xe068f8>
    2ce8:	01055f06 	tsteq	r5, r6, lsl #30
    2cec:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    2cf0:	20760311 	rsbscs	r0, r6, r1, lsl r3
    2cf4:	0a030105 	beq	c3110 <__HEAP_SIZE+0xc2110>
    2cf8:	01002020 	tsteq	r0, r0, lsr #32
    2cfc:	00010501 	andeq	r0, r1, r1, lsl #10
    2d00:	20d20205 	sbcscs	r0, r2, r5, lsl #4
    2d04:	ba031000 	blt	c6d0c <__HEAP_SIZE+0xc5d0c>
    2d08:	01060104 	tsteq	r6, r4, lsl #2
    2d0c:	31060505 	tstcc	r6, r5, lsl #10
    2d10:	06070514 			; <UNDEFINED> instruction: 0x06070514
    2d14:	09052001 	stmdbeq	r5, {r0, sp}
    2d18:	1c052606 	stcne	6, cr2, [r5], {6}
    2d1c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d20:	200a0306 	andcs	r0, sl, r6, lsl #6
    2d24:	01061a05 	tsteq	r6, r5, lsl #20
    2d28:	21060505 	tstcs	r6, r5, lsl #10
    2d2c:	01061c05 	tsteq	r6, r5, lsl #24
    2d30:	21060505 	tstcs	r6, r5, lsl #10
    2d34:	01060e05 	tsteq	r6, r5, lsl #28
    2d38:	09052020 	stmdbeq	r5, {r5, sp}
    2d3c:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    2d40:	01062905 	tsteq	r6, r5, lsl #18
    2d44:	32062405 	andcc	r2, r6, #83886080	; 0x5000000
    2d48:	13060105 	movwne	r0, #24837	; 0x6105
    2d4c:	03060905 	movweq	r0, #26885	; 0x6905
    2d50:	1c05206a 	stcne	0, cr2, [r5], {106}	; 0x6a
    2d54:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2d58:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2d5c:	02050005 	andeq	r0, r5, #5
    2d60:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    2d64:	0102fc03 	tsteq	r2, r3, lsl #24	; <UNPREDICTABLE>
    2d68:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    2d6c:	26051477 			; <UNDEFINED> instruction: 0x26051477
    2d70:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    2d74:	01060b05 	tsteq	r6, r5, lsl #22
    2d78:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2d7c:	77030104 	strvc	r0, [r3, -r4, lsl #2]
    2d80:	00330520 	eorseq	r0, r3, r0, lsr #10
    2d84:	03010402 	movweq	r0, #5122	; 0x1402
    2d88:	27054a09 	strcs	r4, [r5, -r9, lsl #20]
    2d8c:	240f0521 	strcs	r0, [pc], #-1313	; 2d94 <__HEAP_SIZE+0x1d94>
    2d90:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    2d94:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    2d98:	1603060d 	strne	r0, [r3], -sp, lsl #12
    2d9c:	19110520 	ldmdbne	r1, {r5, r8, sl}
    2da0:	01063305 	tsteq	r6, r5, lsl #6
    2da4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2da8:	054a0632 	strbeq	r0, [sl, #-1586]	; 0xfffff9ce
    2dac:	2e750318 	mrccs	3, 3, r0, cr5, cr8, {0}
    2db0:	16030505 	strne	r0, [r3], -r5, lsl #10
    2db4:	030f0520 	movweq	r0, #62752	; 0xf520
    2db8:	13052e55 	movwne	r2, #24149	; 0x5e55
    2dbc:	052e7203 	streq	r7, [lr, #-515]!	; 0xfffffdfd
    2dc0:	3603063c 			; <UNDEFINED> instruction: 0x3603063c
    2dc4:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    2dc8:	01061005 	tsteq	r6, r5
    2dcc:	48031305 	stmdami	r3, {r0, r2, r8, r9, ip}
    2dd0:	03050520 	movweq	r0, #21792	; 0x5520
    2dd4:	13052039 	movwne	r2, #20537	; 0x5039
    2dd8:	20204703 	eorcs	r4, r0, r3, lsl #14
    2ddc:	01022020 	tsteq	r2, r0, lsr #32
    2de0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2de4:	02050005 	andeq	r0, r5, #5
    2de8:	00000000 	andeq	r0, r0, r0
    2dec:	0103c003 	tsteq	r3, r3
    2df0:	13130905 	tstne	r3, #81920	; 0x14000
    2df4:	05145d05 	ldreq	r5, [r4, #-3333]	; 0xfffff2fb
    2df8:	27051420 	strcs	r1, [r5, -r0, lsr #8]
    2dfc:	170d0513 	smladne	sp, r3, r5, r0
    2e00:	01061805 	tsteq	r6, r5, lsl #16
    2e04:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    2e08:	2e0f0319 	mcrcs	3, 0, r0, cr15, cr9, {0}
    2e0c:	03063d05 	movweq	r3, #27909	; 0x6d05
    2e10:	09052010 	stmdbeq	r5, {r4, sp}
    2e14:	06050514 			; <UNDEFINED> instruction: 0x06050514
    2e18:	06110513 			; <UNDEFINED> instruction: 0x06110513
    2e1c:	05206003 	streq	r6, [r0, #-3]!
    2e20:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    2e24:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    2e28:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    2e2c:	11052027 	tstne	r5, r7, lsr #32
    2e30:	21052606 	tstcs	r5, r6, lsl #12
    2e34:	11050106 	tstne	r5, r6, lsl #2
    2e38:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    2e3c:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    2e40:	01010001 	tsteq	r1, r1
    2e44:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2e48:	00000002 	andeq	r0, r0, r2
    2e4c:	03f80300 	mvnseq	r0, #0, 6
    2e50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2e54:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    2e58:	14510513 	ldrbne	r0, [r1], #-1299	; 0xfffffaed
    2e5c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2e60:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2e64:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    2e68:	02004c01 	andeq	r4, r0, #256	; 0x100
    2e6c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    2e70:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    2e74:	53051e01 	movwpl	r1, #24065	; 0x5e01
    2e78:	2c3c0524 	cfldr32cs	mvfx0, [ip], #-144	; 0xffffff70
    2e7c:	43060d05 	movwmi	r0, #27909	; 0x6d05
    2e80:	06280517 			; <UNDEFINED> instruction: 0x06280517
    2e84:	0d052001 	stceq	0, cr2, [r5, #-4]
    2e88:	0f053006 	svceq	0x00053006
    2e8c:	11050106 	tstne	r5, r6, lsl #2
    2e90:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    2e94:	37051915 	smladcc	r5, r5, r9, r1
    2e98:	11050106 	tstne	r5, r6, lsl #2
    2e9c:	4a064006 	bmi	192ebc <__RAM_SIZE+0x92ebc>
    2ea0:	2c052e2e 	stccs	14, cr2, [r5], {46}	; 0x2e
    2ea4:	01040200 	mrseq	r0, R12_usr
    2ea8:	05206203 	streq	r6, [r0, #-515]!	; 0xfffffdfd
    2eac:	2e780313 	mrccs	3, 3, r0, cr8, cr3, {0}
    2eb0:	37030505 	strcc	r0, [r3, -r5, lsl #10]
    2eb4:	03130520 	tsteq	r3, #32, 10	; 0x8000000
    2eb8:	052e3c49 	streq	r3, [lr, #-3145]!	; 0xfffff3b7
    2ebc:	30030627 	andcc	r0, r3, r7, lsr #12
    2ec0:	13250520 			; <UNDEFINED> instruction: 0x13250520
    2ec4:	05153605 	ldreq	r3, [r5, #-1541]	; 0xfffff9fb
    2ec8:	10051409 	andne	r1, r5, r9, lsl #8
    2ecc:	01020106 	tsteq	r2, r6, lsl #2
    2ed0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2ed4:	02050005 	andeq	r0, r5, #5
    2ed8:	00000000 	andeq	r0, r0, r0
    2edc:	0106e003 	tsteq	r6, r3
    2ee0:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    2ee4:	09051464 	stmdbeq	r5, {r2, r5, r6, sl, ip}
    2ee8:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    2eec:	00050501 	andeq	r0, r5, r1, lsl #10
    2ef0:	1b010402 	blne	43f00 <__HEAP_SIZE+0x42f00>
    2ef4:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    2ef8:	05410104 	strbeq	r0, [r1, #-260]	; 0xfffffefc
    2efc:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    2f00:	4a010617 	bmi	44764 <__HEAP_SIZE+0x43764>
    2f04:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2f08:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    2f0c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2f10:	063e0522 	ldrteq	r0, [lr], -r2, lsr #10
    2f14:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    2f18:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    2f1c:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    2f20:	201d0305 	andscs	r0, sp, r5, lsl #6
    2f24:	63031705 	movwvs	r1, #14085	; 0x3705
    2f28:	06240520 	strteq	r0, [r4], -r0, lsr #10
    2f2c:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    2f30:	43051325 	movwmi	r1, #21285	; 0x5325
    2f34:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    2f38:	13060505 	movwne	r0, #25861	; 0x6505
    2f3c:	0101002e 	tsteq	r1, lr, lsr #32
    2f40:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2f44:	00000002 	andeq	r0, r0, r2
    2f48:	07870300 	streq	r0, [r7, r0, lsl #6]
    2f4c:	13090501 	movwne	r0, #38145	; 0x9501
    2f50:	05144f05 	ldreq	r4, [r4, #-3845]	; 0xfffff0fb
    2f54:	0b051409 	bleq	147f80 <__RAM_SIZE+0x47f80>
    2f58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2f5c:	01040200 	mrseq	r0, R12_usr
    2f60:	0022051b 	eoreq	r0, r2, fp, lsl r5
    2f64:	33010402 	movwcc	r0, #5122	; 0x1402
    2f68:	31060d05 	tstcc	r6, r5, lsl #26
    2f6c:	01061705 	tsteq	r6, r5, lsl #14
    2f70:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2f74:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    2f78:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2f7c:	063e0522 	ldrteq	r0, [lr], -r2, lsr #10
    2f80:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    2f84:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    2f88:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    2f8c:	201d0305 	andscs	r0, sp, r5, lsl #6
    2f90:	63031705 	movwvs	r1, #14085	; 0x3705
    2f94:	06240520 	strteq	r0, [r4], -r0, lsr #10
    2f98:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    2f9c:	3d051325 	stccc	3, cr1, [r5, #-148]	; 0xffffff6c
    2fa0:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    2fa4:	13060505 	movwne	r0, #25861	; 0x6505
    2fa8:	01010020 	tsteq	r1, r0, lsr #32
    2fac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2fb0:	00000002 	andeq	r0, r0, r2
    2fb4:	07ae0300 	streq	r0, [lr, r0, lsl #6]!
    2fb8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2fbc:	13670605 	cmnne	r7, #5242880	; 0x500000
    2fc0:	06100513 			; <UNDEFINED> instruction: 0x06100513
    2fc4:	062b0510 			; <UNDEFINED> instruction: 0x062b0510
    2fc8:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    2fcc:	27051615 	smladcs	r5, r5, r6, r1
    2fd0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2fd4:	26052206 	strcs	r2, [r5], -r6, lsl #4
    2fd8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2fdc:	20055a06 	andcs	r5, r5, r6, lsl #20
    2fe0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    2fe4:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2fe8:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    2fec:	00410501 	subeq	r0, r1, r1, lsl #10
    2ff0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2ff4:	27061e05 	strcs	r1, [r6, -r5, lsl #28]
    2ff8:	01062205 	tsteq	r6, r5, lsl #4
    2ffc:	2e200520 	cfsh64cs	mvdx0, mvdx0, #16
    3000:	03063505 	movweq	r3, #25861	; 0x6505
    3004:	11052029 	tstne	r5, r9, lsr #32
    3008:	05012803 	streq	r2, [r1, #-2051]	; 0xfffff7fd
    300c:	11053038 	tstne	r5, r8, lsr r0
    3010:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3014:	03010501 	movweq	r0, #5377	; 0x1501
    3018:	052000d3 	streq	r0, [r0, #-211]!	; 0xffffff2d
    301c:	dd03061d 	stcle	6, cr0, [r3, #-116]	; 0xffffff8c
    3020:	19052e7e 	stmdbne	r5, {r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    3024:	053c0b03 	ldreq	r0, [ip, #-2819]!	; 0xfffff4fd
    3028:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    302c:	1e05201b 	mcrne	0, 0, r2, cr5, cr11, {0}
    3030:	200f0306 	andcs	r0, pc, r6, lsl #6
    3034:	01062005 	tsteq	r6, r5
    3038:	34061d05 	strcc	r1, [r6], #-3333	; 0xfffff2fb
    303c:	03062e06 	movweq	r2, #28166	; 0x6e06
    3040:	2105206d 	tstcs	r5, sp, rrx
    3044:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3048:	21052e1f 	tstcs	r5, pc, lsl lr
    304c:	3c063406 	cfstrscc	mvf3, [r6], {6}
    3050:	03061505 	movweq	r1, #25861	; 0x6505
    3054:	050100c5 	streq	r0, [r1, #-197]	; 0xffffff3b
    3058:	43053236 	movwmi	r3, #21046	; 0x5236
    305c:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    3060:	01061c05 	tsteq	r6, r5, lsl #24
    3064:	34061505 	strcc	r1, [r6], #-1285	; 0xfffffafb
    3068:	0623053d 			; <UNDEFINED> instruction: 0x0623053d
    306c:	00090501 	andeq	r0, r9, r1, lsl #10
    3070:	06010402 	streq	r0, [r1], -r2, lsl #8
    3074:	002e0f03 	eoreq	r0, lr, r3, lsl #30
    3078:	4a040402 	bmi	104088 <__RAM_SIZE+0x4088>
    307c:	1e031105 	adfnes	f1, f3, f5
    3080:	1a053d4a 	bne	1525b0 <__RAM_SIZE+0x525b0>
    3084:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    3088:	7ec10306 	cdpvc	3, 12, cr0, cr1, cr6, {0}
    308c:	141c052e 	ldrne	r0, [ip], #-1326	; 0xfffffad2
    3090:	05136405 	ldreq	r6, [r3, #-1029]	; 0xfffffbfb
    3094:	6e05135b 	mcrvs	3, 0, r1, cr5, cr11, {2}
    3098:	16050515 			; <UNDEFINED> instruction: 0x16050515
    309c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    30a0:	1a05340d 	bne	1500dc <__RAM_SIZE+0x500dc>
    30a4:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    30a8:	200f0520 	andcs	r0, pc, r0, lsr #10
    30ac:	02004405 	andeq	r4, r0, #83886080	; 0x5000000
    30b0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    30b4:	ec030611 	stc	6, cr0, [r3], {17}
    30b8:	22052e00 	andcs	r2, r5, #0, 28
    30bc:	13050106 	movwne	r0, #20742	; 0x5106
    30c0:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    30c4:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    30c8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    30cc:	0a03062d 	beq	c4988 <__HEAP_SIZE+0xc3988>
    30d0:	1609052e 	strne	r0, [r9], -lr, lsr #10
    30d4:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    30d8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    30dc:	06040200 	streq	r0, [r4], -r0, lsl #4
    30e0:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    30e4:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    30e8:	06040200 	streq	r0, [r4], -r0, lsl #4
    30ec:	0b050106 	bleq	14350c <__RAM_SIZE+0x4350c>
    30f0:	06040200 	streq	r0, [r4], -r0, lsl #4
    30f4:	060d054a 	streq	r0, [sp], -sl, asr #10
    30f8:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    30fc:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3100:	30063705 	andcc	r3, r6, r5, lsl #14
    3104:	5f131105 	svcpl	0x00131105
    3108:	06150543 	ldreq	r0, [r5], -r3, asr #10
    310c:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    3110:	30061505 	andcc	r1, r6, r5, lsl #10
    3114:	0d030d05 	stceq	13, cr0, [r3, #-20]	; 0xffffffec
    3118:	16053d3c 			; <UNDEFINED> instruction: 0x16053d3c
    311c:	2e050106 	adfcss	f0, f5, f6
    3120:	3b053006 	blcc	14f140 <__RAM_SIZE+0x4f140>
    3124:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    3128:	01061405 	tsteq	r6, r5, lsl #8
    312c:	01000202 	tsteq	r0, r2, lsl #4
    3130:	00050501 	andeq	r0, r5, r1, lsl #10
    3134:	00000205 	andeq	r0, r0, r5, lsl #4
    3138:	e6030000 	str	r0, [r3], -r0
    313c:	09050104 	stmdbeq	r5, {r2, r8}
    3140:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
    3144:	1f050501 	svcne	0x00050501
    3148:	27060d05 	strcs	r0, [r6, -r5, lsl #26]
    314c:	01063305 	tsteq	r6, r5, lsl #6
    3150:	2f060d05 	svccs	0x00060d05
    3154:	01062505 	tsteq	r6, r5, lsl #10
    3158:	23060d05 	movwcs	r0, #27909	; 0x6d05
    315c:	01063b05 	tsteq	r6, r5, lsl #22
    3160:	22062c05 	andcs	r2, r6, #1280	; 0x500
    3164:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    3168:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    316c:	054e0627 	strbeq	r0, [lr, #-1575]	; 0xfffff9d9
    3170:	20140605 	andscs	r0, r4, r5, lsl #12
    3174:	01000102 	tsteq	r0, r2, lsl #2
    3178:	00050501 	andeq	r0, r5, r1, lsl #10
    317c:	00000205 	andeq	r0, r0, r5, lsl #4
    3180:	84030000 	strhi	r0, [r3], #-0
    3184:	01060105 	tsteq	r6, r5, lsl #2
    3188:	2f060905 	svccs	0x00060905
    318c:	14340513 	ldrtne	r0, [r4], #-1299	; 0xfffffaed
    3190:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3194:	2e010615 	mcrcs	6, 0, r0, cr1, cr5, {0}
    3198:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    319c:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    31a0:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    31a4:	002e1306 	eoreq	r1, lr, r6, lsl #6
    31a8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    31ac:	00020500 	andeq	r0, r2, r0, lsl #10
    31b0:	03000000 	movweq	r0, #0
    31b4:	06010599 			; <UNDEFINED> instruction: 0x06010599
    31b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    31bc:	4905133d 	stmdbmi	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    31c0:	16090514 			; <UNDEFINED> instruction: 0x16090514
    31c4:	06150514 			; <UNDEFINED> instruction: 0x06150514
    31c8:	2e203c01 	cdpcs	12, 2, cr3, cr0, cr1, {0}
    31cc:	21060905 	tstcs	r6, r5, lsl #18
    31d0:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    31d4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    31d8:	003c1306 	eorseq	r1, ip, r6, lsl #6
    31dc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    31e0:	00020500 	andeq	r0, r2, r0, lsl #10
    31e4:	03000000 	movweq	r0, #0
    31e8:	060105f4 			; <UNDEFINED> instruction: 0x060105f4
    31ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    31f0:	3605132f 	strcc	r1, [r5], -pc, lsr #6
    31f4:	14200514 	strtne	r0, [r0], #-1300	; 0xfffffaec
    31f8:	051a0905 	ldreq	r0, [sl, #-2309]	; 0xfffff6fb
    31fc:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3200:	0b052033 	bleq	14b2d4 <__RAM_SIZE+0x4b2d4>
    3204:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    3208:	05052e1d 	streq	r2, [r5, #-3613]	; 0xfffff1e3
    320c:	06310528 	ldrteq	r0, [r1], -r8, lsr #10
    3210:	05205d03 	streq	r5, [r0, #-3331]!	; 0xfffff2fd
    3214:	2405190d 	strcs	r1, [r5], #-2317	; 0xfffff6f3
    3218:	3b050106 	blcc	143638 <__RAM_SIZE+0x43638>
    321c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3220:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
    3224:	03150501 	tsteq	r5, #4194304	; 0x400000
    3228:	3805200b 	stmdacc	r5, {r0, r1, r3, sp}
    322c:	05152806 	ldreq	r2, [r5, #-2054]	; 0xfffff7fa
    3230:	10051409 	andne	r1, r5, r9, lsl #8
    3234:	11050106 	tstne	r5, r6, lsl #2
    3238:	206c0306 	rsbcs	r0, ip, r6, lsl #6
    323c:	01061a05 	tsteq	r6, r5, lsl #20
    3240:	025f1505 	subseq	r1, pc, #20971520	; 0x1400000
    3244:	01010002 	tsteq	r1, r2
    3248:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    324c:	00000002 	andeq	r0, r0, r2
    3250:	09880300 	stmibeq	r8, {r8, r9}
    3254:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3258:	13670605 	cmnne	r7, #5242880	; 0x500000
    325c:	146b0513 	strbtne	r0, [fp], #-1299	; 0xfffffaed
    3260:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3264:	5b051364 	blpl	147ffc <__RAM_SIZE+0x47ffc>
    3268:	032f0513 			; <UNDEFINED> instruction: 0x032f0513
    326c:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    3270:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    3274:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    3278:	22060905 	andcs	r0, r6, #81920	; 0x14000
    327c:	01061605 	tsteq	r6, r5, lsl #12
    3280:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    3284:	4005200b 	andmi	r2, r5, fp
    3288:	01040200 	mrseq	r0, R12_usr
    328c:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    3290:	052e00f8 	streq	r0, [lr, #-248]!	; 0xffffff08
    3294:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    3298:	05053e34 	streq	r3, [r5, #-3636]	; 0xfffff1cc
    329c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    32a0:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    32a4:	3c7f8203 	lfmcc	f0, 3, [pc], #-12	; 32a0 <__HEAP_SIZE+0x22a0>
    32a8:	01061a05 	tsteq	r6, r5, lsl #20
    32ac:	4b060d05 	blmi	1866c8 <__RAM_SIZE+0x866c8>
    32b0:	01061f05 	tsteq	r6, r5, lsl #30
    32b4:	30063005 	andcc	r3, r6, r5
    32b8:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    32bc:	3c010616 	stccc	6, cr0, [r1], {22}
    32c0:	32060d05 	andcc	r0, r6, #320	; 0x140
    32c4:	01060f05 	tsteq	r6, r5, lsl #30
    32c8:	40061505 	andmi	r1, r6, r5, lsl #10
    32cc:	01062005 	tsteq	r6, r5
    32d0:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    32d4:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    32d8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    32dc:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    32e0:	1e052e01 	cdpne	14, 0, cr2, cr5, cr1, {0}
    32e4:	22054306 	andcs	r4, r5, #402653184	; 0x18000000
    32e8:	20050106 	andcs	r0, r5, r6, lsl #2
    32ec:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    32f0:	061f0525 	ldreq	r0, [pc], -r5, lsr #10
    32f4:	06210501 	strteq	r0, [r1], -r1, lsl #10
    32f8:	063c053e 			; <UNDEFINED> instruction: 0x063c053e
    32fc:	19052001 	stmdbne	r5, {r0, sp}
    3300:	3c0e0306 	stccc	3, cr0, [lr], {6}
    3304:	01061d05 	tsteq	r6, r5, lsl #26
    3308:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    330c:	00c10315 	sbceq	r0, r1, r5, lsl r3
    3310:	1d052020 	stcne	0, cr2, [r5, #-128]	; 0xffffff80
    3314:	20410306 	subcs	r0, r1, r6, lsl #6
    3318:	01062105 	tsteq	r6, r5, lsl #2
    331c:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    3320:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    3324:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    3328:	053e0625 	ldreq	r0, [lr, #-1573]!	; 0xfffff9db
    332c:	20010640 	andcs	r0, r1, r0, asr #12
    3330:	03061105 	movweq	r1, #24837	; 0x6105
    3334:	2e013c36 	mcrcs	12, 0, r3, cr1, cr6, {1}
    3338:	01040200 	mrseq	r0, R12_usr
    333c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3340:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3344:	2e060104 	adfcss	f0, f6, f4
    3348:	01040200 	mrseq	r0, R12_usr
    334c:	0015052e 	andseq	r0, r5, lr, lsr #10
    3350:	31010402 	tstcc	r1, r2, lsl #8
    3354:	01040200 	mrseq	r0, R12_usr
    3358:	20202020 	eorcs	r2, r0, r0, lsr #32
    335c:	20202020 	eorcs	r2, r0, r0, lsr #32
    3360:	20202020 	eorcs	r2, r0, r0, lsr #32
    3364:	00010220 	andeq	r0, r1, r0, lsr #4
    3368:	01050101 	tsteq	r5, r1, lsl #2
    336c:	00020500 	andeq	r0, r2, r0, lsl #10
    3370:	03000000 	movweq	r0, #0
    3374:	06010ab2 			; <UNDEFINED> instruction: 0x06010ab2
    3378:	06050501 	streq	r0, [r5], -r1, lsl #10
    337c:	0513133d 	ldreq	r1, [r3, #-829]	; 0xfffffcc3
    3380:	1c051446 	cfstrsne	mvf1, [r5], {70}	; 0x46
    3384:	162d051a 			; <UNDEFINED> instruction: 0x162d051a
    3388:	05177b05 	ldreq	r7, [r7, #-2821]	; 0xfffff4fb
    338c:	0110032f 	tsteq	r0, pc, lsr #6
    3390:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    3394:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    3398:	22060905 	andcs	r0, r6, #81920	; 0x14000
    339c:	01061b05 	tsteq	r6, r5, lsl #22
    33a0:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    33a4:	01062805 	tsteq	r6, r5, lsl #16
    33a8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    33ac:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    33b0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    33b4:	053e0630 	ldreq	r0, [lr, #-1584]!	; 0xfffff9d0
    33b8:	2a051a0d 	bcs	149bf4 <__RAM_SIZE+0x49bf4>
    33bc:	28050106 	stmdacs	r5, {r1, r2, r8}
    33c0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    33c4:	060f0524 	streq	r0, [pc], -r4, lsr #10
    33c8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    33cc:	06200540 	strteq	r0, [r0], -r0, asr #10
    33d0:	20170501 	andscs	r0, r7, r1, lsl #10
    33d4:	22061905 	andcs	r1, r6, #81920	; 0x14000
    33d8:	01061d05 	tsteq	r6, r5, lsl #26
    33dc:	2e1b0520 	cfmul64cs	mvdx0, mvdx11, mvdx0
    33e0:	25061d05 	strcs	r1, [r6, #-3333]	; 0xfffff2fb
    33e4:	01061f05 	tsteq	r6, r5, lsl #30
    33e8:	22062105 	andcs	r2, r6, #1073741825	; 0x40000001
    33ec:	01063c05 	tsteq	r6, r5, lsl #24
    33f0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    33f4:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    33f8:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    33fc:	1505201b 	strne	r2, [r5, #-27]	; 0xffffffe5
    3400:	20203e03 	eorcs	r3, r0, r3, lsl #28
    3404:	03061d05 	movweq	r1, #27909	; 0x6d05
    3408:	21052044 	tstcs	r5, r4, asr #32
    340c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3410:	21052e1f 	tstcs	r5, pc, lsl lr
    3414:	23052406 	movwcs	r2, #21510	; 0x5406
    3418:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    341c:	40052206 	andmi	r2, r5, r6, lsl #4
    3420:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3424:	33030611 	movwcc	r0, #13841	; 0x3611
    3428:	002e012e 	eoreq	r0, lr, lr, lsr #2
    342c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3430:	01040200 	mrseq	r0, R12_usr
    3434:	04020001 	streq	r0, [r2], #-1
    3438:	00200601 	eoreq	r0, r0, r1, lsl #12
    343c:	20010402 	andcs	r0, r1, r2, lsl #8
    3440:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    3444:	00310104 	eorseq	r0, r1, r4, lsl #2
    3448:	20010402 	andcs	r0, r1, r2, lsl #8
    344c:	01040200 	mrseq	r0, R12_usr
    3450:	05201720 	streq	r1, [r0, #-1824]!	; 0xfffff8e0
    3454:	05150605 	ldreq	r0, [r5, #-1541]	; 0xfffff9fb
    3458:	05053e2d 	streq	r3, [r5, #-3629]	; 0xfffff1d3
    345c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3460:	03150513 	tsteq	r5, #79691776	; 0x4c00000
    3464:	20202e73 	eorcs	r2, r0, r3, ror lr
    3468:	20202020 	eorcs	r2, r0, r0, lsr #32
    346c:	02202020 	eoreq	r2, r0, #32
    3470:	01010001 	tsteq	r1, r1
    3474:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3478:	00213002 	eoreq	r3, r1, r2
    347c:	0be00310 	bleq	ff8040c4 <__StackTop+0xc77040c4>
    3480:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3484:	13590605 	cmpne	r9, #5242880	; 0x500000
    3488:	06100513 			; <UNDEFINED> instruction: 0x06100513
    348c:	06110510 			; <UNDEFINED> instruction: 0x06110510
    3490:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    3494:	11054b2e 	tstne	r5, lr, lsr #22
    3498:	062e0513 			; <UNDEFINED> instruction: 0x062e0513
    349c:	202c0501 	eorcs	r0, ip, r1, lsl #10
    34a0:	25061105 	strcs	r1, [r6, #-261]	; 0xfffffefb
    34a4:	01061505 	tsteq	r6, r5, lsl #10
    34a8:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    34ac:	0d03062d 	stceq	6, cr0, [r3, #-180]	; 0xffffff4c
    34b0:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    34b4:	05303405 	ldreq	r3, [r0, #-1029]!	; 0xfffffbfb
    34b8:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    34bc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    34c0:	00d50301 	sbcseq	r0, r5, r1, lsl #6
    34c4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    34c8:	2e7f9903 	vaddcs.f16	s19, s30, s6	; <UNPREDICTABLE>
    34cc:	01061905 	tsteq	r6, r5, lsl #18
    34d0:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    34d4:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    34d8:	3c180315 	ldccc	3, cr0, [r8], {21}
    34dc:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    34e0:	15051340 	strne	r1, [r5, #-832]	; 0xfffffcc0
    34e4:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    34e8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    34ec:	23053d34 	movwcs	r3, #23860	; 0x5d34
    34f0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    34f4:	04020009 	streq	r0, [r2], #-9
    34f8:	0f030601 	svceq	0x00030601
    34fc:	04020001 	streq	r0, [r2], #-1
    3500:	11054a04 	tstne	r5, r4, lsl #20
    3504:	3d4a1a03 	vstrcc	s3, [sl, #-12]
    3508:	01061a05 	tsteq	r6, r5, lsl #20
    350c:	43060d05 	movwmi	r0, #27909	; 0x6d05
    3510:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    3514:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3518:	06110530 			; <UNDEFINED> instruction: 0x06110530
    351c:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3520:	03063f05 	movweq	r3, #28421	; 0x6f05
    3524:	052e7f82 	streq	r7, [lr, #-3970]!	; 0xfffff07e
    3528:	67051520 	strvs	r1, [r5, -r0, lsr #10]
    352c:	176e0516 			; <UNDEFINED> instruction: 0x176e0516
    3530:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    3534:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    3538:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    353c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3540:	060f0524 	streq	r0, [pc], -r4, lsr #10
    3544:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3548:	052e2203 	streq	r2, [lr, #-515]!	; 0xfffffdfd
    354c:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3550:	16052013 			; <UNDEFINED> instruction: 0x16052013
    3554:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    3558:	01061805 	tsteq	r6, r5, lsl #16
    355c:	03062d05 	movweq	r2, #27909	; 0x6d05
    3560:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3564:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    3568:	03040200 	movweq	r0, #16896	; 0x4200
    356c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3570:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    3574:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    3578:	0402000d 	streq	r0, [r2], #-13
    357c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3580:	0402000b 	streq	r0, [r2], #-11
    3584:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    3588:	11053206 	tstne	r5, r6, lsl #4
    358c:	0f050106 	svceq	0x00050106
    3590:	063a053c 			; <UNDEFINED> instruction: 0x063a053c
    3594:	13110530 	tstne	r1, #48, 10	; 0xc000000
    3598:	15053e59 	strne	r3, [r5, #-3673]	; 0xfffff1a7
    359c:	13050106 	movwne	r0, #20742	; 0x5106
    35a0:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    35a4:	06180530 			; <UNDEFINED> instruction: 0x06180530
    35a8:	023c1b03 	eorseq	r1, ip, #3072	; 0xc00
    35ac:	01010002 	tsteq	r1, r2
    35b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    35b4:	00000002 	andeq	r0, r0, r2
    35b8:	0cf50300 	ldcleq	3, cr0, [r5]
    35bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    35c0:	134b0605 	movtne	r0, #46597	; 0xb605
    35c4:	15090513 	strne	r0, [r9, #-1299]	; 0xfffffaed
    35c8:	01061405 	tsteq	r6, r5, lsl #8
    35cc:	051b1005 	ldreq	r1, [fp, #-5]
    35d0:	2403062e 	strcs	r0, [r3], #-1582	; 0xfffff9d2
    35d4:	1611052e 	ldrne	r0, [r1], -lr, lsr #10
    35d8:	01062e05 	tsteq	r6, r5, lsl #28
    35dc:	05202c05 	streq	r2, [r0, #-3077]!	; 0xfffff3fb
    35e0:	05240615 	streq	r0, [r4, #-1557]!	; 0xfffff9eb
    35e4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    35e8:	31052017 	tstcc	r5, r7, lsl r0
    35ec:	11052806 	tstne	r5, r6, lsl #16
    35f0:	06150519 			; <UNDEFINED> instruction: 0x06150519
    35f4:	20130501 	andscs	r0, r3, r1, lsl #10
    35f8:	03062d05 	movweq	r2, #27909	; 0x6d05
    35fc:	1105200d 	tstne	r5, sp
    3600:	303a0515 	eorscc	r0, sl, r5, lsl r5
    3604:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    3608:	20010618 	andcs	r0, r1, r8, lsl r6
    360c:	8c030105 	stfhis	f0, [r3], {5}
    3610:	19050101 	stmdbne	r5, {r0, r8}
    3614:	7ed50306 	cdpvc	3, 13, cr0, cr5, cr6, {0}
    3618:	063e052e 	ldrteq	r0, [lr], -lr, lsr #10
    361c:	2e3c0501 	cdpcs	5, 3, cr0, cr12, cr1, {0}
    3620:	03061505 	movweq	r1, #25861	; 0x6505
    3624:	19052e0d 	stmdbne	r5, {r0, r2, r3, r9, sl, fp, sp}
    3628:	17050106 	strne	r0, [r5, -r6, lsl #2]
    362c:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    3630:	03150530 	tsteq	r5, #48, 10	; 0xc000000
    3634:	39053c18 	stmdbcc	r5, {r3, r4, sl, fp, ip, sp}
    3638:	13460530 	movtne	r0, #25904	; 0x6530
    363c:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    3640:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3644:	3d340615 	ldccc	6, cr0, [r4, #-84]!	; 0xffffffac
    3648:	01062305 	tsteq	r6, r5, lsl #6
    364c:	0009052e 	andeq	r0, r9, lr, lsr #10
    3650:	06010402 	streq	r0, [r1], -r2, lsl #8
    3654:	00010f03 	andeq	r0, r1, r3, lsl #30
    3658:	4a040402 	bmi	104668 <__RAM_SIZE+0x4668>
    365c:	11031905 	tstne	r3, r5, lsl #18
    3660:	301d054a 	andscc	r0, sp, sl, asr #10
    3664:	01063405 	tsteq	r6, r5, lsl #8
    3668:	4c061905 			; <UNDEFINED> instruction: 0x4c061905
    366c:	11052e06 	tstne	r5, r6, lsl #28
    3670:	20190306 	andscs	r0, r9, r6, lsl #6
    3674:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    3678:	060d0501 	streq	r0, [sp], -r1, lsl #10
    367c:	16053d42 	strne	r3, [r5], -r2, asr #26
    3680:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3684:	11053406 	tstne	r5, r6, lsl #8
    3688:	0f050106 	svceq	0x00050106
    368c:	063b053c 			; <UNDEFINED> instruction: 0x063b053c
    3690:	2e7eda03 	vaddcs.f32	s27, s28, s6
    3694:	05152005 	ldreq	r2, [r5, #-5]
    3698:	6e05162d 	cfmadd32vs	mvax1, mvfx1, mvfx5, mvfx13
    369c:	16050517 			; <UNDEFINED> instruction: 0x16050517
    36a0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    36a4:	1f05320d 	svcne	0x0005320d
    36a8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    36ac:	0f052406 	svceq	0x00052406
    36b0:	11050106 	tstne	r5, r6, lsl #2
    36b4:	2e310306 	cdpcs	3, 3, cr0, cr1, cr6, {0}
    36b8:	01062205 	tsteq	r6, r5, lsl #4
    36bc:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    36c0:	0b030616 	bleq	c4f20 <__HEAP_SIZE+0xc3f20>
    36c4:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    36c8:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    36cc:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    36d0:	2f331609 	svccs	0x00331609
    36d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    36d8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    36dc:	00660604 	rsbeq	r0, r6, r4, lsl #12
    36e0:	31060402 	tstcc	r6, r2, lsl #8
    36e4:	02000d05 	andeq	r0, r0, #320	; 0x140
    36e8:	01060604 	tsteq	r6, r4, lsl #12
    36ec:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    36f0:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    36f4:	0534060d 	ldreq	r0, [r4, #-1549]!	; 0xfffff9f3
    36f8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    36fc:	3a053c0f 	bcc	152740 <__RAM_SIZE+0x52740>
    3700:	15053006 	strne	r3, [r5, #-6]
    3704:	06200516 			; <UNDEFINED> instruction: 0x06200516
    3708:	20170501 	andscs	r0, r7, r1, lsl #10
    370c:	03063105 	movweq	r3, #24837	; 0x6105
    3710:	11052e0a 	tstne	r5, sl, lsl #28
    3714:	053e5917 	ldreq	r5, [lr, #-2327]!	; 0xfffff6e9
    3718:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    371c:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    3720:	20033006 	andcs	r3, r3, r6
    3724:	0617053c 			; <UNDEFINED> instruction: 0x0617053c
    3728:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    372c:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
    3730:	11051342 	tstne	r5, r2, asr #6
    3734:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3738:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    373c:	052e6403 	streq	r6, [lr, #-1027]!	; 0xfffffbfd
    3740:	0519301d 	ldreq	r3, [r9, #-29]	; 0xffffffe3
    3744:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    3748:	0903061d 	stmdbeq	r3, {r0, r2, r3, r4, r9, sl}
    374c:	2e20064a 	cfmadda32cs	mvax2, mvax0, mvfx0, mvfx10
    3750:	14061905 	strne	r1, [r6], #-2309	; 0xfffff6fb
    3754:	01000302 	tsteq	r0, r2, lsl #6
    3758:	00050501 	andeq	r0, r5, r1, lsl #10
    375c:	00000205 	andeq	r0, r0, r5, lsl #4
    3760:	b0030000 	andlt	r0, r3, r0
    3764:	01060106 	tsteq	r6, r6, lsl #2
    3768:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    376c:	14440513 	strbne	r0, [r4], #-1299	; 0xfffffaed
    3770:	05142005 	ldreq	r2, [r4, #-5]
    3774:	0905172d 	stmdbeq	r5, {r0, r2, r3, r5, r8, r9, sl, ip}
    3778:	06220514 			; <UNDEFINED> instruction: 0x06220514
    377c:	20330501 	eorscs	r0, r3, r1, lsl #10
    3780:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    3784:	0535060d 	ldreq	r0, [r5, #-1549]!	; 0xfffff9f3
    3788:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    378c:	054f060d 	strbeq	r0, [pc, #-1549]	; 3187 <__HEAP_SIZE+0x2187>
    3790:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3794:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    3798:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    379c:	3c05203f 	stccc	0, cr2, [r5], {63}	; 0x3f
    37a0:	38053206 	stmdacc	r5, {r1, r2, r9, ip, sp}
    37a4:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    37a8:	01061005 	tsteq	r6, r5
    37ac:	03060d05 	movweq	r0, #27909	; 0x6d05
    37b0:	2405206a 	strcs	r2, [r5], #-106	; 0xffffff96
    37b4:	3b050106 	blcc	143bd4 <__RAM_SIZE+0x43bd4>
    37b8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    37bc:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    37c0:	03050501 	movweq	r0, #21761	; 0x5501
    37c4:	00202016 	eoreq	r2, r0, r6, lsl r0
    37c8:	01050101 	tsteq	r5, r1, lsl #2
    37cc:	00020500 	andeq	r0, r2, r0, lsl #10
    37d0:	03000000 	movweq	r0, #0
    37d4:	06010ed7 			; <UNDEFINED> instruction: 0x06010ed7
    37d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    37dc:	13131359 	tstne	r3, #1677721601	; 0x64000001
    37e0:	0f061005 	svceq	0x00061005
    37e4:	03061105 	movweq	r1, #24837	; 0x6105
    37e8:	28052e22 	stmdacs	r5, {r1, r5, r9, sl, fp, sp}
    37ec:	11050106 	tstne	r5, r6, lsl #2
    37f0:	2b052206 	blcs	14c010 <__RAM_SIZE+0x4c010>
    37f4:	1511054b 	ldrne	r0, [r1, #-1355]	; 0xfffffab5
    37f8:	01062e05 	tsteq	r6, r5, lsl #28
    37fc:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    3800:	01061505 	tsteq	r6, r5, lsl #10
    3804:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    3808:	0e03062d 	cfmadd32eq	mvax1, mvfx0, mvfx3, mvfx13
    380c:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    3810:	05303105 	ldreq	r3, [r0, #-261]!	; 0xfffffefb
    3814:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    3818:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    381c:	00d60301 	sbcseq	r0, r6, r1, lsl #6
    3820:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3824:	2e7f9703 	cdpcs	7, 7, cr9, cr15, cr3, {0}
    3828:	01061905 	tsteq	r6, r5, lsl #18
    382c:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    3830:	05310619 	ldreq	r0, [r1, #-1561]!	; 0xfffff9e7
    3834:	3c180315 	ldccc	3, cr0, [r8], {21}
    3838:	05303605 	ldreq	r3, [r0, #-1541]!	; 0xfffff9fb
    383c:	1505133d 	strne	r1, [r5, #-829]	; 0xfffffcc3
    3840:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    3844:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3848:	23053d35 	movwcs	r3, #23861	; 0x5d35
    384c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3850:	04020009 	streq	r0, [r2], #-9
    3854:	0f030601 	svceq	0x00030601
    3858:	04020001 	streq	r0, [r2], #-1
    385c:	11054a04 	tstne	r5, r4, lsl #20
    3860:	3d4a1a03 	vstrcc	s3, [sl, #-12]
    3864:	01061a05 	tsteq	r6, r5, lsl #20
    3868:	43060d05 	movwmi	r0, #27909	; 0x6d05
    386c:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    3870:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3874:	06110530 			; <UNDEFINED> instruction: 0x06110530
    3878:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    387c:	03063c05 	movweq	r3, #27653	; 0x6c05
    3880:	052e7efb 	streq	r7, [lr, #-3835]!	; 0xfffff105
    3884:	67051520 	strvs	r1, [r5, -r0, lsr #10]
    3888:	176e0516 			; <UNDEFINED> instruction: 0x176e0516
    388c:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    3890:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    3894:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    3898:	060d0501 	streq	r0, [sp], -r1, lsl #10
    389c:	060f0524 	streq	r0, [pc], -r4, lsr #10
    38a0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    38a4:	052e2803 	streq	r2, [lr, #-2051]!	; 0xfffff7fd
    38a8:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    38ac:	16052013 			; <UNDEFINED> instruction: 0x16052013
    38b0:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    38b4:	01061805 	tsteq	r6, r5, lsl #16
    38b8:	03062d05 	movweq	r2, #27909	; 0x6d05
    38bc:	09052e0b 	stmdbeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    38c0:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    38c4:	03040200 	movweq	r0, #16896	; 0x4200
    38c8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    38cc:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    38d0:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    38d4:	0402000d 	streq	r0, [r2], #-13
    38d8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    38dc:	0402000b 	streq	r0, [r2], #-11
    38e0:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    38e4:	11053206 	tstne	r5, r6, lsl #4
    38e8:	0f050106 	svceq	0x00050106
    38ec:	0637053c 			; <UNDEFINED> instruction: 0x0637053c
    38f0:	13110530 	tstne	r1, #48, 10	; 0xc000000
    38f4:	15053e59 	strne	r3, [r5, #-3673]	; 0xfffff1a7
    38f8:	13050106 	movwne	r0, #20742	; 0x5106
    38fc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    3900:	06180530 			; <UNDEFINED> instruction: 0x06180530
    3904:	023c1b03 	eorseq	r1, ip, #3072	; 0xc00
    3908:	01010002 	tsteq	r1, r2
    390c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3910:	00000002 	andeq	r0, r0, r2
    3914:	0ff50300 	svceq	0x00f50300
    3918:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    391c:	13590605 	cmpne	r9, #5242880	; 0x500000
    3920:	14530513 	ldrbne	r0, [r3], #-1299	; 0xfffffaed
    3924:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3928:	2f05135f 	svccs	0x0005135f
    392c:	05011003 	streq	r1, [r1, #-3]
    3930:	2e051705 	cdpcs	7, 0, cr1, cr5, cr5, {0}
    3934:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3938:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    393c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    3940:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    3944:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    3948:	20330315 	eorscs	r0, r3, r5, lsl r3
    394c:	21063a05 	tstcs	r6, r5, lsl #20
    3950:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3954:	05053e30 	streq	r3, [r5, #-3632]	; 0xfffff1d0
    3958:	06010514 			; <UNDEFINED> instruction: 0x06010514
    395c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    3960:	053c4603 	ldreq	r4, [ip, #-1539]!	; 0xfffff9fd
    3964:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3968:	054c0633 	strbeq	r0, [ip, #-1587]	; 0xfffff9cd
    396c:	2e06140d 	cdpcs	4, 0, cr1, cr6, cr13, {0}
    3970:	2a052f06 	bcs	14f590 <__RAM_SIZE+0x4f590>
    3974:	28050106 	stmdacs	r5, {r1, r2, r8}
    3978:	060d0520 	streq	r0, [sp], -r0, lsr #10
    397c:	060f0526 	streq	r0, [pc], -r6, lsr #10
    3980:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3984:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    3988:	20130501 	andscs	r0, r3, r1, lsl #10
    398c:	20031505 	andcs	r1, r3, r5, lsl #10
    3990:	03062020 	movweq	r2, #24608	; 0x6020
    3994:	19052062 	stmdbne	r5, {r1, r5, r6, sp}
    3998:	17050106 	strne	r0, [r5, -r6, lsl #2]
    399c:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    39a0:	061b0524 	ldreq	r0, [fp], -r4, lsr #10
    39a4:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    39a8:	0638053e 			; <UNDEFINED> instruction: 0x0638053e
    39ac:	11052001 	tstne	r5, r1
    39b0:	3c150306 	ldccc	3, cr0, [r5], {6}
    39b4:	02002e01 	andeq	r2, r0, #1, 28
    39b8:	002e0104 	eoreq	r0, lr, r4, lsl #2
    39bc:	01010402 	tsteq	r1, r2, lsl #8
    39c0:	01040200 	mrseq	r0, R12_usr
    39c4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    39c8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    39cc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    39d0:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    39d4:	20200104 	eorcs	r0, r0, r4, lsl #2
    39d8:	20202020 	eorcs	r2, r0, r0, lsr #32
    39dc:	00010220 	andeq	r0, r1, r0, lsr #4
    39e0:	01050101 	tsteq	r5, r1, lsl #2
    39e4:	00020500 	andeq	r0, r2, r0, lsl #10
    39e8:	03000000 	movweq	r0, #0
    39ec:	060110d8 			; <UNDEFINED> instruction: 0x060110d8
    39f0:	06050501 	streq	r0, [r5], -r1, lsl #10
    39f4:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    39f8:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    39fc:	5f05141c 	svcpl	0x0005141c
    3a00:	132d0513 			; <UNDEFINED> instruction: 0x132d0513
    3a04:	10032f05 	andne	r2, r3, r5, lsl #30
    3a08:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3a0c:	01062e05 	tsteq	r6, r5, lsl #28
    3a10:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3a14:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    3a18:	200b0501 	andcs	r0, fp, r1, lsl #10
    3a1c:	0e031505 	cfsh32eq	mvfx1, mvfx3, #5
    3a20:	06370520 	ldrteq	r0, [r7], -r0, lsr #10
    3a24:	15050521 	strne	r0, [r5, #-1313]	; 0xfffffadf
    3a28:	053e2d05 	ldreq	r2, [lr, #-3333]!	; 0xfffff2fb
    3a2c:	01051405 	tsteq	r5, r5, lsl #8
    3a30:	30051306 	andcc	r1, r5, r6, lsl #6
    3a34:	2e6b0306 	cdpcs	3, 6, cr0, cr11, cr6, {0}
    3a38:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    3a3c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    3a40:	0621060d 	strteq	r0, [r1], -sp, lsl #12
    3a44:	052f062e 	streq	r0, [pc, #-1582]!	; 341e <__HEAP_SIZE+0x241e>
    3a48:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    3a4c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    3a50:	20010615 	andcs	r0, r1, r5, lsl r6
    3a54:	01000102 	tsteq	r0, r2, lsl #2
    3a58:	00010501 	andeq	r0, r1, r1, lsl #10
    3a5c:	00000205 	andeq	r0, r0, r5, lsl #4
    3a60:	95030000 	strls	r0, [r3, #-0]
    3a64:	01060111 	tsteq	r6, r1, lsl r1
    3a68:	2f060505 	svccs	0x00060505
    3a6c:	05143005 	ldreq	r3, [r4, #-5]
    3a70:	0505141b 	streq	r1, [r5, #-1051]	; 0xfffffbe5
    3a74:	30090514 	andcc	r0, r9, r4, lsl r5
    3a78:	01061205 	tsteq	r6, r5, lsl #4
    3a7c:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    3a80:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    3a84:	01051405 	tsteq	r5, r5, lsl #8
    3a88:	002e1306 	eoreq	r1, lr, r6, lsl #6
    3a8c:	01050101 	tsteq	r5, r1, lsl #2
    3a90:	00020500 	andeq	r0, r2, r0, lsl #10
    3a94:	03000000 	movweq	r0, #0
    3a98:	060111a9 	streq	r1, [r1], -r9, lsr #3
    3a9c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3aa0:	3005132f 	andcc	r1, r5, pc, lsr #6
    3aa4:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3aa8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3aac:	2d053009 	stccs	0, cr3, [r5, #-36]	; 0xffffffdc
    3ab0:	41050106 	tstmi	r5, r6, lsl #2
    3ab4:	20120520 	andscs	r0, r2, r0, lsr #10
    3ab8:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    3abc:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    3ac0:	01051405 	tsteq	r5, r5, lsl #8
    3ac4:	002e1306 	eoreq	r1, lr, r6, lsl #6
    3ac8:	01050101 	tsteq	r5, r1, lsl #2
    3acc:	00020500 	andeq	r0, r2, r0, lsl #10
    3ad0:	03000000 	movweq	r0, #0
    3ad4:	050111be 	streq	r1, [r1, #-446]	; 0xfffffe42
    3ad8:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    3adc:	1c051437 	cfstrsne	mvf1, [r5], {55}	; 0x37
    3ae0:	13050514 	movwne	r0, #21780	; 0x5514
    3ae4:	01060e05 	tsteq	r6, r5, lsl #28
    3ae8:	22063a05 	andcs	r3, r6, #20480	; 0x5000
    3aec:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3af0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3af4:	01010001 	tsteq	r1, r1
    3af8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3afc:	00000002 	andeq	r0, r0, r2
    3b00:	11ce0300 	bicne	r0, lr, r0, lsl #6
    3b04:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3b08:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    3b0c:	1c051426 	cfstrsne	mvf1, [r5], {38}	; 0x26
    3b10:	13210514 			; <UNDEFINED> instruction: 0x13210514
    3b14:	12030905 	andne	r0, r3, #81920	; 0x14000
    3b18:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    3b1c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    3b20:	12030105 	andne	r0, r3, #1073741825	; 0x40000001
    3b24:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3b28:	05207003 	streq	r7, [r0, #-3]!
    3b2c:	1f053225 	svcne	0x00053225
    3b30:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    3b34:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3b38:	01010001 	tsteq	r1, r1
    3b3c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3b40:	00000002 	andeq	r0, r0, r2
    3b44:	12a70300 	adcne	r0, r7, #0, 6
    3b48:	13310501 	teqne	r1, #4194304	; 0x400000
    3b4c:	05145005 	ldreq	r5, [r4, #-5]
    3b50:	01051405 	tsteq	r5, r5, lsl #8
    3b54:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    3b58:	01010001 	tsteq	r1, r1
    3b5c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3b60:	00000002 	andeq	r0, r0, r2
    3b64:	12b10300 	adcsne	r0, r1, #0, 6
    3b68:	132f0501 			; <UNDEFINED> instruction: 0x132f0501
    3b6c:	05144c05 	ldreq	r4, [r4, #-3077]	; 0xfffff3fb
    3b70:	01051405 	tsteq	r5, r5, lsl #8
    3b74:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    3b78:	01010001 	tsteq	r1, r1
    3b7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3b80:	00000002 	andeq	r0, r0, r2
    3b84:	14cb0300 	strbne	r0, [fp], #768	; 0x300
    3b88:	13050501 	movwne	r0, #21761	; 0x5501
    3b8c:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    3b90:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3b94:	10051405 	andne	r1, r5, r5, lsl #8
    3b98:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3b9c:	22110520 	andscs	r0, r1, #32, 10	; 0x8000000
    3ba0:	35052420 	strcc	r2, [r5, #-1056]	; 0xfffffbe0
    3ba4:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    3ba8:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3bac:	00010213 	andeq	r0, r1, r3, lsl r2
    3bb0:	01050101 	tsteq	r5, r1, lsl #2
    3bb4:	00020500 	andeq	r0, r2, r0, lsl #10
    3bb8:	03000000 	movweq	r0, #0
    3bbc:	050114f8 	streq	r1, [r1, #-1272]	; 0xfffffb08
    3bc0:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    3bc4:	1c051432 	cfstrsne	mvf1, [r5], {50}	; 0x32
    3bc8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3bcc:	01061005 	tsteq	r6, r5
    3bd0:	05202e05 	streq	r2, [r0, #-3589]!	; 0xfffff1fb
    3bd4:	11052007 	tstne	r5, r7
    3bd8:	06340534 			; <UNDEFINED> instruction: 0x06340534
    3bdc:	14050523 	strne	r0, [r5], #-1315	; 0xfffffadd
    3be0:	13060105 	movwne	r0, #24837	; 0x6105
    3be4:	76031105 	strvc	r1, [r3], -r5, lsl #2
    3be8:	01022020 	tsteq	r2, r0, lsr #32
    3bec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3bf0:	02050005 	andeq	r0, r5, #5
    3bf4:	10002220 	andne	r2, r0, r0, lsr #4
    3bf8:	0118be03 	tsteq	r8, r3, lsl #28
    3bfc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3c00:	5d054b06 	vstrpl	d4, [r5, #-24]	; 0xffffffe8
    3c04:	03090514 	movweq	r0, #38164	; 0x9514
    3c08:	002e0110 	eoreq	r0, lr, r0, lsl r1
    3c0c:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3c10:	06040200 	streq	r0, [r4], -r0, lsl #4
    3c14:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3c18:	14053006 	strne	r3, [r5], #-6
    3c1c:	06040200 	streq	r0, [r4], -r0, lsl #4
    3c20:	0b050106 	bleq	144040 <__RAM_SIZE+0x44040>
    3c24:	06040200 	streq	r0, [r4], -r0, lsl #4
    3c28:	06250520 	strteq	r0, [r5], -r0, lsr #10
    3c2c:	15090527 	strne	r0, [r9, #-1319]	; 0xfffffad9
    3c30:	053e3505 	ldreq	r3, [lr, #-1285]!	; 0xfffffafb
    3c34:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    3c38:	04020009 	streq	r0, [r2], #-9
    3c3c:	71030601 	tstvc	r3, r1, lsl #12
    3c40:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3c44:	0d054a04 	vstreq	s8, [r5, #-16]
    3c48:	0007024f 	andeq	r0, r7, pc, asr #4
    3c4c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3c50:	00020500 	andeq	r0, r2, r0, lsl #10
    3c54:	03000000 	movweq	r0, #0
    3c58:	060118e8 	streq	r1, [r1], -r8, ror #17
    3c5c:	06090501 	streq	r0, [r9], -r1, lsl #10
    3c60:	14390521 	ldrtne	r0, [r9], #-1313	; 0xfffffadf
    3c64:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3c68:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    3c6c:	054c062f 	strbeq	r0, [ip, #-1583]	; 0xfffff9d1
    3c70:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3c74:	01021306 	tsteq	r2, r6, lsl #6
    3c78:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3c7c:	02050005 	andeq	r0, r5, #5
    3c80:	00000000 	andeq	r0, r0, r0
    3c84:	0118fb03 	tsteq	r8, r3, lsl #22	; <UNPREDICTABLE>
    3c88:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3c8c:	42053d06 	andmi	r3, r5, #384	; 0x180
    3c90:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    3c94:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3c98:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    3c9c:	1905200f 	stmdbne	r5, {r0, r1, r2, r3, sp}
    3ca0:	06090523 	streq	r0, [r9], -r3, lsr #10
    3ca4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3ca8:	0905302e 	stmdbeq	r5, {r1, r2, r3, r5, ip, sp}
    3cac:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3cb0:	06120513 			; <UNDEFINED> instruction: 0x06120513
    3cb4:	052e6f03 	streq	r6, [lr, #-3843]!	; 0xfffff0fd
    3cb8:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    3cbc:	11052014 	tstne	r5, r4, lsl r0
    3cc0:	4a052806 	bmi	14dce0 <__RAM_SIZE+0x4dce0>
    3cc4:	11050106 	tstne	r5, r6, lsl #2
    3cc8:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    3ccc:	1b200106 	blne	8040ec <__RAM_SIZE+0x7040ec>
    3cd0:	00010220 	andeq	r0, r1, r0, lsr #4
    3cd4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3cd8:	00020500 	andeq	r0, r2, r0, lsl #10
    3cdc:	03000000 	movweq	r0, #0
    3ce0:	050119a1 	streq	r1, [r1, #-2465]	; 0xfffff65f
    3ce4:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    3ce8:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    3cec:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    3cf0:	200b0501 	andcs	r0, fp, r1, lsl #10
    3cf4:	05311505 	ldreq	r1, [r1, #-1285]!	; 0xfffffafb
    3cf8:	20170305 	andscs	r0, r7, r5, lsl #6
    3cfc:	05206003 	streq	r6, [r0, #-3]!
    3d00:	0b03060e 	bleq	c5540 <__HEAP_SIZE+0xc4540>
    3d04:	0624052e 	strteq	r0, [r4], -lr, lsr #10
    3d08:	20100501 	andscs	r0, r0, r1, lsl #10
    3d0c:	05251505 	streq	r1, [r5, #-1285]!	; 0xfffffafb
    3d10:	0d030633 	stceq	6, cr0, [r3, #-204]	; 0xffffff34
    3d14:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    3d18:	13060505 	movwne	r0, #25861	; 0x6505
    3d1c:	03060d05 	movweq	r0, #27909	; 0x6d05
    3d20:	11052074 	tstne	r5, r4, ror r0
    3d24:	06390531 			; <UNDEFINED> instruction: 0x06390531
    3d28:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3d2c:	15052f30 	strne	r2, [r5, #-3888]	; 0xfffff0d0
    3d30:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3d34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d38:	02050005 	andeq	r0, r5, #5
    3d3c:	00000000 	andeq	r0, r0, r0
    3d40:	0119ca03 	tsteq	r9, r3, lsl #20
    3d44:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3d48:	20053d06 	andcs	r3, r5, r6, lsl #26
    3d4c:	42050106 	andmi	r0, r5, #-2147483647	; 0x80000001
    3d50:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    3d54:	06120514 			; <UNDEFINED> instruction: 0x06120514
    3d58:	33052001 	movwcc	r2, #20481	; 0x5001
    3d5c:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    3d60:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3d64:	00040213 	andeq	r0, r4, r3, lsl r2
    3d68:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3d6c:	00020500 	andeq	r0, r2, r0, lsl #10
    3d70:	03000000 	movweq	r0, #0
    3d74:	060119dc 			; <UNDEFINED> instruction: 0x060119dc
    3d78:	06090501 	streq	r0, [r9], -r1, lsl #10
    3d7c:	0620052f 	strteq	r0, [r0], -pc, lsr #10
    3d80:	063b0501 	ldrteq	r0, [fp], -r1, lsl #10
    3d84:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    3d88:	01061205 	tsteq	r6, r5, lsl #4
    3d8c:	3e063a05 	vmlacc.f32	s6, s12, s10
    3d90:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3d94:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    3d98:	01010004 	tsteq	r1, r4
    3d9c:	00003224 	andeq	r3, r0, r4, lsr #4
    3da0:	02aa0003 	adceq	r0, sl, #3
    3da4:	01020000 	mrseq	r0, (UNDEF: 2)
    3da8:	000d0efb 	strdeq	r0, [sp], -fp
    3dac:	01010101 	tsteq	r1, r1, lsl #2
    3db0:	01000000 	mrseq	r0, (UNDEF: 0)
    3db4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3db8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3dbc:	2f2e2e2f 	svccs	0x002e2e2f
    3dc0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3dc4:	2f736f74 	svccs	0x00736f74
    3dc8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    3dcc:	534f5452 	movtpl	r5, #62546	; 0xf452
    3dd0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    3dd4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    3dd8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    3ddc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    3de0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    3de4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    3de8:	5f6d7261 	svcpl	0x006d7261
    3dec:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    3df0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    3df4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3df8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3dfc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3e00:	30312d69 	eorscc	r2, r1, r9, ror #26
    3e04:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    3e08:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    3e0c:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    3e10:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    3e14:	615c6363 	cmpvs	ip, r3, ror #6
    3e18:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3e1c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3e20:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3e24:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    3e28:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    3e2c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3e30:	00656475 	rsbeq	r6, r5, r5, ror r4
    3e34:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    3e38:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3e3c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    3e40:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    3e44:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    3e48:	615c6d61 	cmpvs	ip, r1, ror #26
    3e4c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    3e50:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    3e54:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    3e58:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3e5c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3e60:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3e64:	2e30312d 	rsfcssp	f3, f0, #5.0
    3e68:	30322d33 	eorscc	r2, r2, r3, lsr sp
    3e6c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    3e70:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    3e74:	6f6e2d6d 	svcvs	0x006e2d6d
    3e78:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3e7c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    3e80:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3e84:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    3e88:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3e8c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    3e90:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    3e94:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3e98:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    3e9c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    3ea0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    3ea4:	615c6d61 	cmpvs	ip, r1, ror #26
    3ea8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    3eac:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    3eb0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    3eb4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3eb8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3ebc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3ec0:	2e30312d 	rsfcssp	f3, f0, #5.0
    3ec4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    3ec8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    3ecc:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    3ed0:	6f6e2d6d 	svcvs	0x006e2d6d
    3ed4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3ed8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    3edc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3ee0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    3ee4:	00737973 	rsbseq	r7, r3, r3, ror r9
    3ee8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3eec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3ef0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3ef4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3ef8:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    3efc:	4f545265 	svcmi	0x00545265
    3f00:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    3f04:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3f08:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    3f0c:	2f2e2e2f 	svccs	0x002e2e2f
    3f10:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3e60 <__HEAP_SIZE+0x2e60>
    3f14:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3f18:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    3f1c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    3f20:	2f534f54 	svccs	0x00534f54
    3f24:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3f28:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    3f2c:	4343472f 	movtmi	r4, #14127	; 0x372f
    3f30:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    3f34:	334d435f 	movtcc	r4, #54111	; 0xd35f
    3f38:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    3f3c:	6f6e2f5a 	svcvs	0x006e2f5a
    3f40:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    3f44:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    3f48:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    3f4c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    3f50:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    3f54:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    3f58:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    3f5c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    3f60:	5f6d7261 	svcpl	0x006d7261
    3f64:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    3f68:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    3f6c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3f70:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3f74:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3f78:	30312d69 	eorscc	r2, r1, r9, ror #26
    3f7c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    3f80:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    3f84:	615c3031 	cmpvs	ip, r1, lsr r0
    3f88:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3f8c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3f90:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3f94:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    3f98:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3f9c:	61740000 	cmnvs	r4, r0
    3fa0:	2e736b73 	vmovcs.s8	r6, d3[7]
    3fa4:	00010063 	andeq	r0, r1, r3, rrx
    3fa8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    3fac:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    3fb0:	00020068 	andeq	r0, r2, r8, rrx
    3fb4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    3fb8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    3fbc:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3fc0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    3fc4:	00030068 	andeq	r0, r3, r8, rrx
    3fc8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    3fcc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    3fd0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    3fd4:	72700000 	rsbsvc	r0, r0, #0
    3fd8:	65646a6f 	strbvs	r6, [r4, #-2671]!	; 0xfffff591
    3fdc:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    3fe0:	00000500 	andeq	r0, r0, r0, lsl #10
    3fe4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3fe8:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    3fec:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 3e38 <__HEAP_SIZE+0x2e38>
    3ff0:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    3ff4:	00060068 	andeq	r0, r6, r8, rrx
    3ff8:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
    3ffc:	4f545265 	svcmi	0x00545265
    4000:	00682e53 	rsbeq	r2, r8, r3, asr lr
    4004:	6c000005 	stcvs	0, cr0, [r0], {5}
    4008:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    400c:	00050068 	andeq	r0, r5, r8, rrx
    4010:	73617400 	cmnvc	r1, #0, 8
    4014:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    4018:	70000005 	andvc	r0, r0, r5
    401c:	6174726f 	cmnvs	r4, pc, ror #4
    4020:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
    4024:	00050068 	andeq	r0, r5, r8, rrx
    4028:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    402c:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    4030:	00050068 	andeq	r0, r5, r8, rrx
    4034:	72747300 	rsbsvc	r7, r4, #0, 6
    4038:	2e676e69 	cdpcs	14, 6, cr6, cr7, cr9, {3}
    403c:	00070068 	andeq	r0, r7, r8, rrx
    4040:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    4044:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    4048:	003e6e69 	eorseq	r6, lr, r9, ror #28
    404c:	00000000 	andeq	r0, r0, r0
    4050:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4054:	00000002 	andeq	r0, r0, r2
    4058:	19d30300 	ldmibne	r3, {r8, r9}^
    405c:	13090501 	movwne	r0, #38145	; 0x9501
    4060:	181e0513 	ldmdane	lr, {r0, r1, r4, r8, sl}
    4064:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4068:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    406c:	1405200b 	strne	r2, [r5], #-11
    4070:	203c7603 	eorscs	r7, ip, r3, lsl #12
    4074:	03060d05 	movweq	r0, #27909	; 0x6d05
    4078:	1105200d 	tstne	r5, sp
    407c:	0f050106 	svceq	0x00050106
    4080:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    4084:	05203c73 	streq	r3, [r0, #-3187]!	; 0xfffff38d
    4088:	11030611 	tstne	r3, r1, lsl r6
    408c:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    4090:	03140501 	tsteq	r4, #4194304	; 0x400000
    4094:	0520206f 	streq	r2, [r0, #-111]!	; 0xffffff91
    4098:	2003061d 	andcs	r0, r3, sp, lsl r6
    409c:	06350520 	ldrteq	r0, [r5], -r0, lsr #10
    40a0:	4a1f0501 	bmi	7c54ac <__RAM_SIZE+0x6c54ac>
    40a4:	02006e05 	andeq	r6, r0, #5, 28	; 0x50
    40a8:	2c060204 	sfmcs	f0, 4, [r6], {4}
    40ac:	02006f05 	andeq	r6, r0, #5, 30
    40b0:	01060204 	tsteq	r6, r4, lsl #4
    40b4:	02040200 	andeq	r0, r4, #0, 4
    40b8:	20200520 	eorcs	r0, r0, r0, lsr #10
    40bc:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    40c0:	20060104 	andcs	r0, r6, r4, lsl #2
    40c4:	02001905 	andeq	r1, r0, #81920	; 0x14000
    40c8:	01060104 	tsteq	r6, r4, lsl #2
    40cc:	202c2105 	eorcs	r2, ip, r5, lsl #2
    40d0:	20262905 	eorcs	r2, r6, r5, lsl #18
    40d4:	03062505 	movweq	r2, #25861	; 0x6505
    40d8:	09050117 	stmdbeq	r5, {r0, r1, r2, r4, r8}
    40dc:	06050515 			; <UNDEFINED> instruction: 0x06050515
    40e0:	00050213 	andeq	r0, r5, r3, lsl r2
    40e4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    40e8:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
    40ec:	03100022 	tsteq	r0, #34	; 0x22
    40f0:	05011eb6 	streq	r1, [r1, #-3766]	; 0xfffff14a
    40f4:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    40f8:	24051a0d 	strcs	r1, [r5], #-2573	; 0xfffff5f3
    40fc:	0f050106 	svceq	0x00050106
    4100:	222c052e 	eorcs	r0, ip, #192937984	; 0xb800000
    4104:	03060905 	movweq	r0, #26885	; 0x6905
    4108:	19052013 	stmdbne	r5, {r0, r1, r4, sp}
    410c:	0b050106 	bleq	14452c <__RAM_SIZE+0x4452c>
    4110:	060e053c 			; <UNDEFINED> instruction: 0x060e053c
    4114:	06120524 	ldreq	r0, [r2], -r4, lsr #10
    4118:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    411c:	35060e05 	strcc	r0, [r6, #-3589]	; 0xfffff1fb
    4120:	01061005 	tsteq	r6, r5
    4124:	03060d05 	movweq	r0, #27909	; 0x6d05
    4128:	15052009 	strne	r2, [r5, #-9]
    412c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4130:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    4134:	202e0615 	eorcs	r0, lr, r5, lsl r6
    4138:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    413c:	16030609 	strne	r0, [r3], -r9, lsl #12
    4140:	06050520 	streq	r0, [r5], -r0, lsr #10
    4144:	000c0213 	andeq	r0, ip, r3, lsl r2
    4148:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    414c:	00020500 	andeq	r0, r2, r0, lsl #10
    4150:	03000000 	movweq	r0, #0
    4154:	060120df 			; <UNDEFINED> instruction: 0x060120df
    4158:	06090501 	streq	r0, [r9], -r1, lsl #10
    415c:	13131321 	tstne	r3, #-2080374784	; 0x84000000
    4160:	1c051313 	stcne	3, cr1, [r5], {19}
    4164:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4168:	05162106 	ldreq	r2, [r6, #-262]	; 0xfffffefa
    416c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    4170:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    4174:	1d053006 	stcne	0, cr3, [r5, #-24]	; 0xffffffe8
    4178:	11050106 	tstne	r5, r6, lsl #2
    417c:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    4180:	200c030d 	andcs	r0, ip, sp, lsl #6
    4184:	18032205 	stmdane	r3, {r0, r2, r9, sp}
    4188:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    418c:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    4190:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4194:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4198:	5a030602 	bpl	c59a8 <__HEAP_SIZE+0xc49a8>
    419c:	00630520 	rsbeq	r0, r3, r0, lsr #10
    41a0:	06020402 	streq	r0, [r2], -r2, lsl #8
    41a4:	003d0501 	eorseq	r0, sp, r1, lsl #10
    41a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    41ac:	000d0520 	andeq	r0, sp, r0, lsr #10
    41b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    41b4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    41b8:	06170533 			; <UNDEFINED> instruction: 0x06170533
    41bc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    41c0:	18051424 	stmdane	r5, {r2, r5, sl, ip}
    41c4:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    41c8:	01040200 	mrseq	r0, R12_usr
    41cc:	11052006 	tstne	r5, r6
    41d0:	01040200 	mrseq	r0, R12_usr
    41d4:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    41d8:	1f053006 	svcne	0x00053006
    41dc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    41e0:	33053e06 	movwcc	r3, #24070	; 0x5e06
    41e4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    41e8:	061a052e 	ldreq	r0, [sl], -lr, lsr #10
    41ec:	061c0533 			; <UNDEFINED> instruction: 0x061c0533
    41f0:	00310501 	eorseq	r0, r1, r1, lsl #10
    41f4:	06020402 	streq	r0, [r2], -r2, lsl #8
    41f8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    41fc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4200:	5a051502 	bpl	149610 <__RAM_SIZE+0x49610>
    4204:	02040200 	andeq	r0, r4, #0, 4
    4208:	05016b03 	streq	r6, [r1, #-2819]	; 0xfffff4fd
    420c:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
    4210:	00010602 	andeq	r0, r1, r2, lsl #12
    4214:	20020402 	andcs	r0, r2, r2, lsl #8
    4218:	69031105 	stmdbvs	r3, {r0, r2, r8, ip}
    421c:	06250520 	strteq	r0, [r5], -r0, lsr #10
    4220:	05203b03 	streq	r3, [r0, #-2819]!	; 0xfffff4fd
    4224:	05051509 	streq	r1, [r5, #-1289]	; 0xfffffaf7
    4228:	00201306 	eoreq	r1, r0, r6, lsl #6
    422c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4230:	00020500 	andeq	r0, r2, r0, lsl #10
    4234:	03000000 	movweq	r0, #0
    4238:	050131a3 	streq	r3, [r1, #-419]	; 0xfffffe5d
    423c:	05141309 	ldreq	r1, [r4, #-777]	; 0xfffffcf7
    4240:	05100620 	ldreq	r0, [r0, #-1568]	; 0xfffff9e0
    4244:	0d05220e 	sfmeq	f2, 4, [r5, #-56]	; 0xffffffc8
    4248:	1a052206 	bne	14ca68 <__RAM_SIZE+0x4ca68>
    424c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4250:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    4254:	0e050106 	adfeqs	f0, f5, f6
    4258:	10051d06 	andne	r1, r5, r6, lsl #26
    425c:	0e050106 	adfeqs	f0, f5, f6
    4260:	06090520 	streq	r0, [r9], -r0, lsr #10
    4264:	05051434 	streq	r1, [r5, #-1076]	; 0xfffffbcc
    4268:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    426c:	01010001 	tsteq	r1, r1
    4270:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4274:	0022b402 	eoreq	fp, r2, r2, lsl #8
    4278:	32b80310 	adcscc	r0, r8, #16, 6	; 0x40000000
    427c:	13050501 	movwne	r0, #21761	; 0x5501
    4280:	01060905 	tsteq	r6, r5, lsl #18
    4284:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
    4288:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    428c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4290:	05600609 	strbeq	r0, [r0, #-1545]!	; 0xfffff9f7
    4294:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    4298:	01054a1e 	tsteq	r5, lr, lsl sl
    429c:	00050230 	andeq	r0, r5, r0, lsr r2
    42a0:	01050101 	tsteq	r5, r1, lsl #2
    42a4:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
    42a8:	03100022 	tsteq	r0, #34	; 0x22
    42ac:	06010e88 	streq	r0, [r1], -r8, lsl #29
    42b0:	06050501 	streq	r0, [r5], -r1, lsl #10
    42b4:	0905139f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r7, r8, r9, ip}
    42b8:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    42bc:	20010612 	andcs	r0, r1, r2, lsl r6
    42c0:	09052020 	stmdbeq	r5, {r5, sp}
    42c4:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    42c8:	01062305 	tsteq	r6, r5, lsl #6
    42cc:	05202c05 	streq	r2, [r0, #-3077]!	; 0xfffff3fb
    42d0:	09053c16 	stmdbeq	r5, {r1, r2, r4, sl, fp, ip, sp}
    42d4:	57052f06 	strpl	r2, [r5, -r6, lsl #30]
    42d8:	81050106 	tsthi	r5, r6, lsl #2
    42dc:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    42e0:	01190305 	tsteq	r9, r5, lsl #6
    42e4:	01060705 	tsteq	r6, r5, lsl #14
    42e8:	05221005 	streq	r1, [r2, #-5]!
    42ec:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    42f0:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    42f4:	04020009 	streq	r0, [r2], #-9
    42f8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    42fc:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    4300:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    4304:	0d052e27 	stceq	14, cr2, [r5, #-156]	; 0xffffff64
    4308:	17054f06 	strne	r4, [r5, -r6, lsl #30]
    430c:	0f050106 	svceq	0x00050106
    4310:	0029052e 	eoreq	r0, r9, lr, lsr #10
    4314:	06020402 	streq	r0, [r2], -r2, lsl #8
    4318:	00520526 	subseq	r0, r2, r6, lsr #10
    431c:	03020402 	movweq	r0, #9218	; 0x2402
    4320:	53050173 	movwpl	r0, #20851	; 0x5173
    4324:	02040200 	andeq	r0, r4, #0, 4
    4328:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    432c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4330:	13030609 	movwne	r0, #13833	; 0x3609
    4334:	063e0520 	ldrteq	r0, [lr], -r0, lsr #10
    4338:	06210501 	strteq	r0, [r1], -r1, lsl #10
    433c:	16360540 	ldrtne	r0, [r6], -r0, asr #10
    4340:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4344:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    4348:	21053014 	tstcs	r5, r4, lsl r0
    434c:	05052406 	streq	r2, [r5, #-1030]	; 0xfffffbfa
    4350:	061a0515 			; <UNDEFINED> instruction: 0x061a0515
    4354:	06090501 	streq	r0, [r9], -r1, lsl #10
    4358:	06220523 	strteq	r0, [r2], -r3, lsr #10
    435c:	06050501 	streq	r0, [r5], -r1, lsl #10
    4360:	234e3d24 	movtcs	r3, #60708	; 0xed24
    4364:	21062e06 	tstcs	r6, r6, lsl #28
    4368:	09030905 	stmdbeq	r3, {r0, r2, r8, fp}
    436c:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    4370:	2a05012f 	bcs	144834 <__RAM_SIZE+0x44834>
    4374:	28050106 	stmdacs	r5, {r1, r2, r8}
    4378:	06050566 	streq	r0, [r5], -r6, ror #10
    437c:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    4380:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    4384:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    4388:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    438c:	05320621 	ldreq	r0, [r2, #-1569]!	; 0xfffff9df
    4390:	2e140601 	cfmsub32cs	mvax0, mvfx0, mvfx4, mvfx1
    4394:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4398:	02050005 	andeq	r0, r5, #5
    439c:	10002372 	andne	r2, r0, r2, ror r3
    43a0:	0109ed03 	tsteq	r9, r3, lsl #26
    43a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    43a8:	2f055906 	svccs	0x00055906
    43ac:	132d0514 			; <UNDEFINED> instruction: 0x132d0514
    43b0:	0d030905 	vstreq.16	s0, [r3, #-10]	; <UNPREDICTABLE>
    43b4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    43b8:	00260501 	eoreq	r0, r6, r1, lsl #10
    43bc:	58010402 	stmdapl	r1, {r1, sl}
    43c0:	27060d05 	strcs	r0, [r6, -r5, lsl #26]
    43c4:	06160513 			; <UNDEFINED> instruction: 0x06160513
    43c8:	20202001 	eorcs	r2, r0, r1
    43cc:	2f060d05 	svccs	0x00060d05
    43d0:	01061f05 	tsteq	r6, r5, lsl #30
    43d4:	26061105 	strcs	r1, [r6], -r5, lsl #2
    43d8:	01063105 	tsteq	r6, r5, lsl #2
    43dc:	40060d05 	andmi	r0, r6, r5, lsl #26
    43e0:	03061605 	movweq	r1, #26117	; 0x6605
    43e4:	0505c874 	streq	ip, [r5, #-2164]	; 0xfffff78c
    43e8:	05201403 	streq	r1, [r0, #-1027]!	; 0xfffffbfd
    43ec:	20203816 	eorcs	r3, r0, r6, lsl r8
    43f0:	23060905 	movwcs	r0, #26885	; 0x6905
    43f4:	01061005 	tsteq	r6, r5
    43f8:	01000102 	tsteq	r0, r2, lsl #2
    43fc:	00010501 	andeq	r0, r1, r1, lsl #10
    4400:	23c40205 	biccs	r0, r4, #1342177280	; 0x50000000
    4404:	fb031000 	blx	c840e <__HEAP_SIZE+0xc740e>
    4408:	0505012e 	streq	r0, [r5, #-302]	; 0xfffffed2
    440c:	15051421 	strne	r1, [r5, #-1057]	; 0xfffffbdf
    4410:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4414:	00090520 	andeq	r0, r9, r0, lsr #10
    4418:	06030402 	streq	r0, [r3], -r2, lsl #8
    441c:	005e0522 	subseq	r0, lr, r2, lsr #10
    4420:	72030402 	andvc	r0, r3, #33554432	; 0x2000000
    4424:	02006805 	andeq	r6, r0, #327680	; 0x50000
    4428:	01060304 	tsteq	r6, r4, lsl #6
    442c:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    4430:	20060104 	andcs	r0, r6, r4, lsl #2
    4434:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4438:	01060104 	tsteq	r6, r4, lsl #2
    443c:	064b3306 	strbeq	r3, [fp], -r6, lsl #6
    4440:	053d0620 	ldreq	r0, [sp, #-1568]!	; 0xfffff9e0
    4444:	05424009 	strbeq	r4, [r2, #-9]
    4448:	17054205 	strne	r4, [r5, -r5, lsl #4]
    444c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4450:	1f052f06 	svcne	0x00052f06
    4454:	01050106 	tsteq	r5, r6, lsl #2
    4458:	0012022f 	andseq	r0, r2, pc, lsr #4
    445c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4460:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    4464:	03100024 	tsteq	r0, #36	; 0x24
    4468:	06010fe3 	streq	r0, [r1], -r3, ror #31
    446c:	06090501 	streq	r0, [r9], -r1, lsl #10
    4470:	300d0531 	andcc	r0, sp, r1, lsr r5
    4474:	01062605 	tsteq	r6, r5, lsl #12
    4478:	053c2405 	ldreq	r2, [ip, #-1029]!	; 0xfffffbfb
    447c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    4480:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4484:	11052e0f 	tstne	r5, pc, lsl #28
    4488:	20170306 	andscs	r0, r7, r6, lsl #6
    448c:	01062705 	tsteq	r6, r5, lsl #14
    4490:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    4494:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    4498:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    449c:	17053c3d 	smladxne	r5, sp, ip, r3
    44a0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    44a4:	06260530 			; <UNDEFINED> instruction: 0x06260530
    44a8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    44ac:	053c6903 	ldreq	r6, [ip, #-2307]!	; 0xfffff6fd
    44b0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    44b4:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    44b8:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    44bc:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    44c0:	2e1e0306 	cdpcs	3, 1, cr0, cr14, cr6, {0}
    44c4:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    44c8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    44cc:	05520629 	ldrbeq	r0, [r2, #-1577]	; 0xfffff9d7
    44d0:	0101140d 	tsteq	r1, sp, lsl #8
    44d4:	04020001 	streq	r0, [r2], #-1
    44d8:	02005801 	andeq	r5, r0, #65536	; 0x10000
    44dc:	002e0304 	eoreq	r0, lr, r4, lsl #6
    44e0:	01030402 	tsteq	r3, r2, lsl #8
    44e4:	03040200 	movweq	r0, #16896	; 0x4200
    44e8:	04020001 	streq	r0, [r2], #-1
    44ec:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    44f0:	00010304 	andeq	r0, r1, r4, lsl #6
    44f4:	01030402 	tsteq	r3, r2, lsl #8
    44f8:	03040200 	movweq	r0, #16896	; 0x4200
    44fc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4500:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4504:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4508:	20030402 	andcs	r0, r3, r2, lsl #8
    450c:	03040200 	movweq	r0, #16896	; 0x4200
    4510:	02002006 	andeq	r2, r0, #6
    4514:	58060304 	stmdapl	r6, {r2, r8, r9}
    4518:	03040200 	movweq	r0, #16896	; 0x4200
    451c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    4520:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4524:	00010304 	andeq	r0, r1, r4, lsl #6
    4528:	14030402 	strne	r0, [r3], #-1026	; 0xfffffbfe
    452c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4530:	00140304 	andseq	r0, r4, r4, lsl #6
    4534:	30030402 	andcc	r0, r3, r2, lsl #8
    4538:	02001f05 	andeq	r1, r0, #5, 30
    453c:	01060304 	tsteq	r6, r4, lsl #6
    4540:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4544:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    4548:	0124060d 			; <UNDEFINED> instruction: 0x0124060d
    454c:	6c060505 	cfstr32vs	mvfx0, [r6], {5}
    4550:	03061505 	movweq	r1, #25861	; 0x6505
    4554:	0d052049 	stceq	0, cr2, [r5, #-292]	; 0xfffffedc
    4558:	01040200 	mrseq	r0, R12_usr
    455c:	053c3103 	ldreq	r3, [ip, #-259]!	; 0xfffffefd
    4560:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    4564:	05053201 	streq	r3, [r5, #-513]	; 0xfffffdff
    4568:	01040200 	mrseq	r0, R12_usr
    456c:	0d021406 	cfstrseq	mvf1, [r2, #-24]	; 0xffffffe8
    4570:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4574:	02050005 	andeq	r0, r5, #5
    4578:	100024e8 	andne	r2, r0, r8, ror #9
    457c:	010cd903 	tsteq	ip, r3, lsl #18
    4580:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4584:	0d057506 	cfstr32eq	mvfx7, [r5, #-24]	; 0xffffffe8
    4588:	18012503 	stmdane	r1, {r0, r1, r8, sl, sp}
    458c:	01061705 	tsteq	r6, r5, lsl #14
    4590:	060d0520 	streq	r0, [sp], -r0, lsr #10
    4594:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    4598:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    459c:	06280534 			; <UNDEFINED> instruction: 0x06280534
    45a0:	11052001 	tstne	r5, r1
    45a4:	13053006 	movwne	r3, #20486	; 0x5006
    45a8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    45ac:	1e053006 	cdpne	0, 0, cr3, cr5, cr6, {0}
    45b0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    45b4:	27054d06 	strcs	r4, [r5, -r6, lsl #26]
    45b8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    45bc:	10030609 	andne	r0, r3, r9, lsl #12
    45c0:	060b0501 	streq	r0, [fp], -r1, lsl #10
    45c4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    45c8:	06310526 	ldrteq	r0, [r1], -r6, lsr #10
    45cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    45d0:	06050540 	streq	r0, [r5], -r0, asr #10
    45d4:	061505be 			; <UNDEFINED> instruction: 0x061505be
    45d8:	064a6803 	strbeq	r6, [sl], -r3, lsl #16
    45dc:	411a0520 	tstmi	sl, r0, lsr #10
    45e0:	03060905 	movweq	r0, #26885	; 0x6905
    45e4:	10052012 	andne	r2, r5, r2, lsl r0
    45e8:	01020106 	tsteq	r2, r6, lsl #2
    45ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    45f0:	02050005 	andeq	r0, r5, #5
    45f4:	1000254a 	andne	r2, r0, sl, asr #10
    45f8:	01328303 	teqeq	r2, r3, lsl #6
    45fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4600:	0d053206 	sfmeq	f3, 4, [r5, #-24]	; 0xffffffe8
    4604:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    4608:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    460c:	12052e0f 	andne	r2, r5, #15, 28	; 0xf0
    4610:	14052706 	strne	r2, [r5], #-1798	; 0xfffff8fa
    4614:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4618:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    461c:	6e030611 	mcrvs	6, 0, r0, cr3, cr1, {0}
    4620:	06200620 	strteq	r0, [r0], -r0, lsr #12
    4624:	6605502f 	strvs	r5, [r5], -pc, lsr #32
    4628:	13290534 			; <UNDEFINED> instruction: 0x13290534
    462c:	16060505 	strne	r0, [r6], -r5, lsl #10
    4630:	01000102 	tsteq	r0, r2, lsl #2
    4634:	00010501 	andeq	r0, r1, r1, lsl #10
    4638:	25700205 	ldrbcs	r0, [r0, #-517]!	; 0xfffffdfb
    463c:	9b031000 	blls	c8644 <__HEAP_SIZE+0xc7644>
    4640:	0905012f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8}
    4644:	0e051617 	mcreq	6, 0, r1, cr5, cr7, {0}
    4648:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    464c:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    4650:	77030105 	strvc	r0, [r3, -r5, lsl #2]
    4654:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4658:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    465c:	21053419 	tstcs	r5, r9, lsl r4
    4660:	1f050106 	svcne	0x00050106
    4664:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4668:	06220521 	strteq	r0, [r2], -r1, lsr #10
    466c:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    4670:	11054b3d 	tstne	r5, sp, lsr fp
    4674:	0e05304d 	cdpeq	0, 0, cr3, cr5, cr13, {2}
    4678:	053c6e03 	ldreq	r6, [ip, #-3587]!	; 0xfffff1fd
    467c:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    4680:	01052e0e 	tsteq	r5, lr, lsl #28
    4684:	202e3f03 	eorcs	r3, lr, r3, lsl #30
    4688:	01000802 	tsteq	r0, r2, lsl #16
    468c:	00010501 	andeq	r0, r1, r1, lsl #10
    4690:	25bc0205 	ldrcs	r0, [ip, #517]!	; 0x205
    4694:	e0031000 	and	r1, r3, r0
    4698:	060100c1 	streq	r0, [r1], -r1, asr #1
    469c:	06050501 	streq	r0, [r5], -r1, lsl #10
    46a0:	1605134b 	strne	r1, [r5], -fp, asr #6
    46a4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    46a8:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    46ac:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    46b0:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    46b4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    46b8:	15054306 	strne	r4, [r5, #-774]	; 0xfffffcfa
    46bc:	26050106 	strcs	r0, [r5], -r6, lsl #2
    46c0:	0505202e 	streq	r2, [r5, #-46]	; 0xffffffd2
    46c4:	26053406 	strcs	r3, [r5], -r6, lsl #8
    46c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    46cc:	06210520 	strteq	r0, [r1], -r0, lsr #10
    46d0:	17090544 	strne	r0, [r9, -r4, asr #10]
    46d4:	01060b05 	tsteq	r6, r5, lsl #22
    46d8:	03060d05 	movweq	r0, #27909	; 0x6d05
    46dc:	19053c0c 	stmdbne	r5, {r2, r3, sl, fp, ip, sp}
    46e0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    46e4:	053e2306 	ldreq	r2, [lr, #-774]!	; 0xfffffcfa
    46e8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    46ec:	0532063b 	ldreq	r0, [r2, #-1595]!	; 0xfffff9c5
    46f0:	44051311 	strmi	r1, [r5], #-785	; 0xfffffcef
    46f4:	11050106 	tstne	r5, r6, lsl #2
    46f8:	0301052e 	movweq	r0, #5422	; 0x152e
    46fc:	2f054a3e 	svccs	0x00054a3e
    4700:	01040200 	mrseq	r0, R12_usr
    4704:	2e7fac03 	cdpcs	12, 7, cr10, cr15, cr3, {0}
    4708:	33060d05 	movwcc	r0, #27909	; 0x6d05
    470c:	01012e01 	tsteq	r1, r1, lsl #28
    4710:	062e063c 			; <UNDEFINED> instruction: 0x062e063c
    4714:	2e3c3c20 	cdpcs	12, 3, cr3, cr12, cr0, {1}
    4718:	0332053c 	teqeq	r2, #60, 10	; 0xf000000
    471c:	11052017 	tstne	r5, r7, lsl r0
    4720:	063c0513 			; <UNDEFINED> instruction: 0x063c0513
    4724:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    4728:	21054f06 	tstcs	r5, r6, lsl #30
    472c:	13050106 	movwne	r0, #20742	; 0x5106
    4730:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    4734:	062a0530 			; <UNDEFINED> instruction: 0x062a0530
    4738:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    473c:	06010532 			; <UNDEFINED> instruction: 0x06010532
    4740:	02012c03 	andeq	r2, r1, #768	; 0x300
    4744:	0101000d 	tsteq	r1, sp
    4748:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    474c:	00266402 	eoreq	r6, r6, r2, lsl #8
    4750:	0aa30310 	beq	fe8c5398 <__StackTop+0xc67c5398>
    4754:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4758:	052f0609 	streq	r0, [pc, #-1545]!	; 4157 <__HEAP_SIZE+0x3157>
    475c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4760:	052f0609 	streq	r0, [pc, #-1545]!	; 415f <__HEAP_SIZE+0x315f>
    4764:	05140181 	ldreq	r0, [r4, #-385]	; 0xfffffe7f
    4768:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    476c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4770:	0b05a006 	bleq	16c790 <__RAM_SIZE+0x6c790>
    4774:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4778:	20090306 	andcs	r0, r9, r6, lsl #6
    477c:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    4780:	09051531 	stmdbeq	r5, {r0, r4, r5, r8, sl, ip}
    4784:	06050514 			; <UNDEFINED> instruction: 0x06050514
    4788:	01003c13 	tsteq	r0, r3, lsl ip
    478c:	00050501 	andeq	r0, r5, r1, lsl #10
    4790:	268c0205 	strcs	r0, [ip], r5, lsl #4
    4794:	bb031000 	bllt	c879c <__HEAP_SIZE+0xc779c>
    4798:	0106010d 	tsteq	r6, sp, lsl #2
    479c:	2f060905 	svccs	0x00060905
    47a0:	146c0513 	strbtne	r0, [ip], #-1299	; 0xfffffaed
    47a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    47a8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    47ac:	05680609 	strbeq	r0, [r8, #-1545]!	; 0xfffff9f7
    47b0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    47b4:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    47b8:	15052f20 	strne	r2, [r5, #-3872]	; 0xfffff0e0
    47bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    47c0:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    47c4:	2e7a0315 	mrccs	3, 3, r0, cr10, cr5, {0}
    47c8:	31062b05 	tstcc	r6, r5, lsl #22
    47cc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    47d0:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    47d4:	01010001 	tsteq	r1, r1
    47d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    47dc:	00000002 	andeq	r0, r0, r2
    47e0:	118f0300 	orrne	r0, pc, r0, lsl #6
    47e4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    47e8:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    47ec:	14300513 	ldrtne	r0, [r0], #-1299	; 0xfffffaed
    47f0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    47f4:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    47f8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    47fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4800:	11052306 	tstne	r5, r6, lsl #6
    4804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4808:	29050106 	stmdbcs	r5, {r1, r2, r8}
    480c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4810:	0d055006 	stceq	0, cr5, [r5, #-24]	; 0xffffffe8
    4814:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4818:	00110516 	andseq	r0, r1, r6, lsl r5
    481c:	06040402 	streq	r0, [r4], -r2, lsl #8
    4820:	000f0501 	andeq	r0, pc, r1, lsl #10
    4824:	20040402 	andcs	r0, r4, r2, lsl #8
    4828:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    482c:	01061a05 	tsteq	r6, r5, lsl #20
    4830:	4e062905 	vmlami.f16	s4, s12, s10	; <UNPREDICTABLE>
    4834:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    4838:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    483c:	054f060d 	strbeq	r0, [pc, #-1549]	; 4237 <__HEAP_SIZE+0x3237>
    4840:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    4844:	0402000d 	streq	r0, [r2], #-13
    4848:	055d0604 	ldrbeq	r0, [sp, #-1540]	; 0xfffff9fc
    484c:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    4850:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4854:	0402000f 	streq	r0, [r2], #-15
    4858:	32052e04 	andcc	r2, r5, #4, 28	; 0x40
    485c:	01040200 	mrseq	r0, R12_usr
    4860:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4864:	06203b03 	strteq	r3, [r0], -r3, lsl #22
    4868:	062a0520 	strteq	r0, [sl], -r0, lsr #10
    486c:	1611053d 			; <UNDEFINED> instruction: 0x1611053d
    4870:	33310905 	teqcc	r1, #81920	; 0x14000
    4874:	43140d05 	tstmi	r4, #320	; 0x140
    4878:	01062305 	tsteq	r6, r5, lsl #6
    487c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4880:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    4884:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    4888:	05052e13 	streq	r2, [r5, #-3603]	; 0xfffff1ed
    488c:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    4890:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4894:	7efb0301 	cdpvc	3, 15, cr0, cr11, cr1, {0}
    4898:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    489c:	28052e01 	stmdacs	r5, {r0, r9, sl, fp, sp}
    48a0:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    48a4:	0d030611 	stceq	6, cr0, [r3, #-68]	; 0xffffffbc
    48a8:	2a054f2e 	bcs	158568 <__RAM_SIZE+0x58568>
    48ac:	1511054e 	ldrne	r0, [r1, #-1358]	; 0xfffffab2
    48b0:	051a5005 	ldreq	r5, [sl, #-5]
    48b4:	01270309 			; <UNDEFINED> instruction: 0x01270309
    48b8:	033e0533 	teqeq	lr, #213909504	; 0xcc00000
    48bc:	1505200d 	strne	r2, [r5, #-13]
    48c0:	322d0513 	eorcc	r0, sp, #79691776	; 0x4c00000
    48c4:	05182205 	ldreq	r2, [r8, #-517]	; 0xfffffdfb
    48c8:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    48cc:	0101000d 	tsteq	r1, sp
    48d0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    48d4:	00000002 	andeq	r0, r0, r2
    48d8:	13b50300 			; <UNDEFINED> instruction: 0x13b50300
    48dc:	13090501 	movwne	r0, #38145	; 0x9501
    48e0:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    48e4:	142a0513 	strtne	r0, [sl], #-1299	; 0xfffffaed
    48e8:	05141e05 	ldreq	r1, [r4, #-3589]	; 0xfffff1fb
    48ec:	1705150d 	strne	r1, [r5, -sp, lsl #10]
    48f0:	0f050106 	svceq	0x00050106
    48f4:	0305052e 	movweq	r0, #21806	; 0x552e
    48f8:	0d052e73 	stceq	14, cr2, [r5, #-460]	; 0xfffffe34
    48fc:	3c150306 	ldccc	3, cr0, [r5], {6}
    4900:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
    4904:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    4908:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    490c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    4910:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    4914:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    4918:	052f0611 	streq	r0, [pc, #-1553]!	; 430f <__HEAP_SIZE+0x330f>
    491c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    4920:	303e060d 	eorscc	r0, lr, sp, lsl #12
    4924:	01060f05 	tsteq	r6, r5, lsl #30
    4928:	43061205 	movwmi	r1, #25093	; 0x6205
    492c:	01061405 	tsteq	r6, r5, lsl #8
    4930:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    4934:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4938:	05360616 	ldreq	r0, [r6, #-1558]!	; 0xfffff9ea
    493c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4940:	29030616 	stmdbcs	r3, {r1, r2, r4, r9, sl}
    4944:	0618053c 			; <UNDEFINED> instruction: 0x0618053c
    4948:	00470501 	subeq	r0, r7, r1, lsl #10
    494c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4950:	0f031d05 	svceq	0x00031d05
    4954:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    4958:	052e4d03 	streq	r4, [lr, #-3331]!	; 0xfffff2fd
    495c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4960:	21052017 	tstcs	r5, r7, lsl r0
    4964:	06201e03 	strteq	r1, [r0], -r3, lsl #28
    4968:	052e7103 	streq	r7, [lr, #-259]!	; 0xfffffefd
    496c:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    4970:	72054a23 	andvc	r4, r5, #143360	; 0x23000
    4974:	02040200 	andeq	r0, r4, #0, 4
    4978:	73052c06 	movwvc	r2, #23558	; 0x5c06
    497c:	02040200 	andeq	r0, r4, #0, 4
    4980:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4984:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4988:	38052024 	stmdacc	r5, {r2, r5, sp}
    498c:	01040200 	mrseq	r0, R12_usr
    4990:	1d052006 	stcne	0, cr2, [r5, #-24]	; 0xffffffe8
    4994:	01040200 	mrseq	r0, R12_usr
    4998:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    499c:	1d052e2c 	stcne	14, cr2, [r5, #-176]	; 0xffffff50
    49a0:	05011e03 	streq	r1, [r1, #-3587]	; 0xfffff1fd
    49a4:	7fb50319 	svcvc	0x00b50319
    49a8:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    49ac:	2000e903 	andcs	lr, r0, r3, lsl #18
    49b0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    49b4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    49b8:	7fa70319 	svcvc	0x00a70319
    49bc:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    49c0:	2000d603 	andcs	sp, r0, r3, lsl #12
    49c4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    49c8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    49cc:	7fad0319 	svcvc	0x00ad0319
    49d0:	032d052e 			; <UNDEFINED> instruction: 0x032d052e
    49d4:	052e4a1a 	streq	r4, [lr, #-2586]!	; 0xfffff5e6
    49d8:	0118031d 	tsteq	r8, sp, lsl r3
    49dc:	01000e02 	tsteq	r0, r2, lsl #28
    49e0:	00050501 	andeq	r0, r5, r1, lsl #10
    49e4:	00000205 	andeq	r0, r0, r5, lsl #4
    49e8:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    49ec:	01060114 	tsteq	r6, r4, lsl r1
    49f0:	2f060905 	svccs	0x00060905
    49f4:	142e0513 	strtne	r0, [lr], #-1299	; 0xfffffaed
    49f8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    49fc:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    4a00:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4a04:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a08:	16052106 	strne	r2, [r5], -r6, lsl #2
    4a0c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a10:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4a14:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a18:	32052206 	andcc	r2, r5, #1610612736	; 0x60000000
    4a1c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a20:	00090530 	andeq	r0, r9, r0, lsr r5
    4a24:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    4a28:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4a2c:	13060404 	movwne	r0, #25604	; 0x6404
    4a30:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4a34:	78030104 	stmdavc	r3, {r2, r8}
    4a38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4a3c:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    4a40:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4a44:	02050005 	andeq	r0, r5, #5
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	0114d303 	tsteq	r4, r3, lsl #6
    4a50:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4a54:	13132f06 	tstne	r3, #6, 30
    4a58:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    4a5c:	01120333 	tsteq	r2, r3, lsr r3
    4a60:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    4a64:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    4a68:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    4a6c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4a70:	0402000d 	streq	r0, [r2], #-13
    4a74:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    4a78:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4a7c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4a80:	04020009 	streq	r0, [r2], #-9
    4a84:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    4a88:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    4a8c:	09053004 	stmdbeq	r5, {r2, ip, sp}
    4a90:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a94:	00050514 	andeq	r0, r5, r4, lsl r5
    4a98:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a9c:	00150513 	andseq	r0, r5, r3, lsl r5
    4aa0:	03010402 	movweq	r0, #5122	; 0x1402
    4aa4:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    4aa8:	022e0104 	eoreq	r0, lr, #4, 2
    4aac:	01010004 	tsteq	r1, r4
    4ab0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4ab4:	00000002 	andeq	r0, r0, r2
    4ab8:	15830300 	strne	r0, [r3, #768]	; 0x300
    4abc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4ac0:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    4ac4:	05143205 	ldreq	r3, [r4, #-517]	; 0xfffffdfb
    4ac8:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    4acc:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4ad0:	000d0501 	andeq	r0, sp, r1, lsl #10
    4ad4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ad8:	00160521 	andseq	r0, r6, r1, lsr #10
    4adc:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ae0:	00090501 	andeq	r0, r9, r1, lsl #10
    4ae4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ae8:	00360522 	eorseq	r0, r6, r2, lsr #10
    4aec:	30040402 	andcc	r0, r4, r2, lsl #8
    4af0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4af4:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    4af8:	04020005 	streq	r0, [r2], #-5
    4afc:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    4b00:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4b04:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    4b08:	01040200 	mrseq	r0, R12_usr
    4b0c:	0004022e 	andeq	r0, r4, lr, lsr #4
    4b10:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4b14:	00020500 	andeq	r0, r2, r0, lsl #10
    4b18:	03000000 	movweq	r0, #0
    4b1c:	0601159d 			; <UNDEFINED> instruction: 0x0601159d
    4b20:	06090501 	streq	r0, [r9], -r1, lsl #10
    4b24:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    4b28:	33051439 	movwcc	r1, #21561	; 0x5439
    4b2c:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    4b30:	32051709 	andcc	r1, r5, #2359296	; 0x240000
    4b34:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4b38:	15053206 	strne	r3, [r5, #-518]	; 0xfffffdfa
    4b3c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4b40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b44:	16052106 	strne	r2, [r5], -r6, lsl #2
    4b48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b4c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4b50:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b54:	3d052206 	sfmcc	f2, 4, [r5, #-24]	; 0xffffffe8
    4b58:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b5c:	00090530 	andeq	r0, r9, r0, lsr r5
    4b60:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    4b64:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4b68:	13060404 	movwne	r0, #25604	; 0x6404
    4b6c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4b70:	78030104 	stmdavc	r3, {r2, r8}
    4b74:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b78:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    4b7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4b80:	02050005 	andeq	r0, r5, #5
    4b84:	00000000 	andeq	r0, r0, r0
    4b88:	0115ce03 	tsteq	r5, r3, lsl #28
    4b8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4b90:	13133d06 	tstne	r3, #384	; 0x180
    4b94:	05183c05 	ldreq	r3, [r8, #-3077]	; 0xfffff3fb
    4b98:	0905143d 	stmdbeq	r5, {r0, r2, r3, r4, r5, sl, ip}
    4b9c:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    4ba0:	301b0501 	andscc	r0, fp, r1, lsl #10
    4ba4:	24062505 	strcs	r2, [r6], #-1285	; 0xfffffafb
    4ba8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4bac:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    4bb0:	3b050106 	blcc	144fd0 <__RAM_SIZE+0x44fd0>
    4bb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4bb8:	11052206 	tstne	r5, r6, lsl #4
    4bbc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4bc0:	00270516 	eoreq	r0, r7, r6, lsl r5
    4bc4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bc8:	000d0501 	andeq	r0, sp, r1, lsl #10
    4bcc:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bd0:	000f0528 	andeq	r0, pc, r8, lsr #10
    4bd4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bd8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4bdc:	06130532 			; <UNDEFINED> instruction: 0x06130532
    4be0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    4be4:	06230524 	strteq	r0, [r3], -r4, lsr #10
    4be8:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    4bec:	33061d05 	movwcc	r1, #27909	; 0x6d05
    4bf0:	01063d05 	tsteq	r6, r5, lsl #26
    4bf4:	053c1f05 	ldreq	r1, [ip, #-3845]!	; 0xfffff0fb
    4bf8:	2e4d0314 	mcrcs	3, 2, r0, cr13, cr4, {0}
    4bfc:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4c00:	18030104 	stmdane	r3, {r2, r8}
    4c04:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4c08:	16052e01 	strne	r2, [r5], -r1, lsl #28
    4c0c:	20330306 	eorscs	r0, r3, r6, lsl #6
    4c10:	01063705 	tsteq	r6, r5, lsl #14
    4c14:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    4c18:	7fb50314 	svcvc	0x00b50314
    4c1c:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4c20:	2000dc03 	andcs	sp, r0, r3, lsl #24
    4c24:	06270517 			; <UNDEFINED> instruction: 0x06270517
    4c28:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4c2c:	06170527 	ldreq	r0, [r7], -r7, lsr #10
    4c30:	00480501 	subeq	r0, r8, r1, lsl #10
    4c34:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4c38:	30061905 	andcc	r1, r6, r5, lsl #18
    4c3c:	01062b05 	tsteq	r6, r5, lsl #22
    4c40:	28061505 	stmdacs	r6, {r0, r2, r8, sl, ip}
    4c44:	01062b05 	tsteq	r6, r5, lsl #22
    4c48:	03061105 	movweq	r1, #24837	; 0x6105
    4c4c:	1705200a 	strne	r2, [r5, -sl]
    4c50:	13050106 	movwne	r0, #20742	; 0x5106
    4c54:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    4c58:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    4c5c:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
    4c60:	15051911 	strne	r1, [r5, #-2321]	; 0xfffff6ef
    4c64:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    4c68:	31053c13 	tstcc	r5, r3, lsl ip
    4c6c:	2e170306 	cdpcs	3, 1, cr0, cr7, cr6, {0}
    4c70:	0c031105 	stfeqs	f1, [r3], {5}
    4c74:	06130501 	ldreq	r0, [r3], -r1, lsl #10
    4c78:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    4c7c:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    4c80:	09051811 	stmdbeq	r5, {r0, r4, fp, ip}
    4c84:	30270515 	eorcc	r0, r7, r5, lsl r5
    4c88:	13060505 	movwne	r0, #25861	; 0x6505
    4c8c:	b6031405 	strlt	r1, [r3], -r5, lsl #8
    4c90:	3005207e 	andcc	r2, r5, lr, ror r0
    4c94:	052e3503 	streq	r3, [lr, #-1283]!	; 0xfffffafd
    4c98:	2e1f0328 	cdpcs	3, 1, cr0, cr15, cr8, {1}
    4c9c:	03061505 	movweq	r1, #25861	; 0x6505
    4ca0:	19052e3a 	stmdbne	r5, {r1, r3, r4, r5, r9, sl, fp, sp}
    4ca4:	31050106 	tstcc	r5, r6, lsl #2
    4ca8:	4a090306 	bmi	2458c8 <__RAM_SIZE+0x1458c8>
    4cac:	01151505 	tsteq	r5, r5, lsl #10
    4cb0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4cb4:	00580104 	subseq	r0, r8, r4, lsl #2
    4cb8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4cbc:	03040200 	movweq	r0, #16896	; 0x4200
    4cc0:	04020001 	streq	r0, [r2], #-1
    4cc4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4cc8:	00660304 	rsbeq	r0, r6, r4, lsl #6
    4ccc:	01030402 	tsteq	r3, r2, lsl #8
    4cd0:	03040200 	movweq	r0, #16896	; 0x4200
    4cd4:	04020001 	streq	r0, [r2], #-1
    4cd8:	02002003 	andeq	r2, r0, #3
    4cdc:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4ce0:	20030402 	andcs	r0, r3, r2, lsl #8
    4ce4:	03040200 	movweq	r0, #16896	; 0x4200
    4ce8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4cec:	00200603 	eoreq	r0, r0, r3, lsl #12
    4cf0:	06030402 	streq	r0, [r3], -r2, lsl #8
    4cf4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4cf8:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    4cfc:	00010304 	andeq	r0, r1, r4, lsl #6
    4d00:	01030402 	tsteq	r3, r2, lsl #8
    4d04:	01201503 			; <UNDEFINED> instruction: 0x01201503
    4d08:	07022e01 	streq	r2, [r2, -r1, lsl #28]
    4d0c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4d10:	02050005 	andeq	r0, r5, #5
    4d14:	00000000 	andeq	r0, r0, r0
    4d18:	011a9903 	tsteq	sl, r3, lsl #18
    4d1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4d20:	30052106 	andcc	r2, r5, r6, lsl #2
    4d24:	15260514 	strne	r0, [r6, #-1300]!	; 0xfffffaec
    4d28:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    4d2c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4d30:	2b052e0f 	blcs	150574 <__RAM_SIZE+0x50574>
    4d34:	01040200 	mrseq	r0, R12_usr
    4d38:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    4d3c:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    4d40:	15053011 	strne	r3, [r5, #-17]	; 0xffffffef
    4d44:	13050106 	movwne	r0, #20742	; 0x5106
    4d48:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    4d4c:	05201003 	streq	r1, [r0, #-3]!
    4d50:	2505150d 	strcs	r1, [r5, #-1293]	; 0xfffffaf3
    4d54:	15220532 	strne	r0, [r2, #-1330]!	; 0xffffface
    4d58:	13060505 	movwne	r0, #25861	; 0x6505
    4d5c:	03062e05 	movweq	r2, #28165	; 0x6e05
    4d60:	15052067 	strne	r2, [r5, #-103]	; 0xffffff99
    4d64:	061e0516 			; <UNDEFINED> instruction: 0x061e0516
    4d68:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4d6c:	0101014b 	tsteq	r1, fp, asr #2
    4d70:	01040200 	mrseq	r0, R12_usr
    4d74:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4d78:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4d7c:	00010304 	andeq	r0, r1, r4, lsl #6
    4d80:	01030402 	tsteq	r3, r2, lsl #8
    4d84:	03040200 	movweq	r0, #16896	; 0x4200
    4d88:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    4d8c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4d90:	00010304 	andeq	r0, r1, r4, lsl #6
    4d94:	20030402 	andcs	r0, r3, r2, lsl #8
    4d98:	03040200 	movweq	r0, #16896	; 0x4200
    4d9c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4da0:	02002003 	andeq	r2, r0, #3
    4da4:	00200304 	eoreq	r0, r0, r4, lsl #6
    4da8:	06030402 	streq	r0, [r3], -r2, lsl #8
    4dac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4db0:	00580603 	subseq	r0, r8, r3, lsl #12
    4db4:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    4db8:	03040200 	movweq	r0, #16896	; 0x4200
    4dbc:	04020001 	streq	r0, [r2], #-1
    4dc0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4dc4:	00170304 	andseq	r0, r7, r4, lsl #6
    4dc8:	01030402 	tsteq	r3, r2, lsl #8
    4dcc:	01040200 	mrseq	r0, R12_usr
    4dd0:	00090266 	andeq	r0, r9, r6, ror #4
    4dd4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4dd8:	00020500 	andeq	r0, r2, r0, lsl #10
    4ddc:	03000000 	movweq	r0, #0
    4de0:	06011ad6 			; <UNDEFINED> instruction: 0x06011ad6
    4de4:	06090501 	streq	r0, [r9], -r1, lsl #10
    4de8:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    4dec:	26051437 			; <UNDEFINED> instruction: 0x26051437
    4df0:	03330514 	teqeq	r3, #20, 10	; 0x5000000
    4df4:	09050112 	stmdbeq	r5, {r1, r4, r8}
    4df8:	06220517 			; <UNDEFINED> instruction: 0x06220517
    4dfc:	0d052e01 	stceq	14, cr2, [r5, #-4]
    4e00:	11052206 	tstne	r5, r6, lsl #4
    4e04:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4e08:	33052e0f 	movwcc	r2, #24079	; 0x5e0f
    4e0c:	11053e06 	tstne	r5, r6, lsl #28
    4e10:	062a0515 			; <UNDEFINED> instruction: 0x062a0515
    4e14:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    4e18:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    4e1c:	01062205 	tsteq	r6, r5, lsl #4
    4e20:	05203d05 	streq	r3, [r0, #-3333]!	; 0xfffff2fb
    4e24:	1d053c1b 	stcne	12, cr3, [r5, #-108]	; 0xffffff94
    4e28:	05173006 	ldreq	r3, [r7, #-6]
    4e2c:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    4e30:	05400635 	strbeq	r0, [r0, #-1589]	; 0xfffff9cb
    4e34:	1e051715 	mcrne	7, 0, r1, cr5, cr5, {0}
    4e38:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4e3c:	01014b06 	tsteq	r1, r6, lsl #22
    4e40:	04020001 	streq	r0, [r2], #-1
    4e44:	02005801 	andeq	r5, r0, #65536	; 0x10000
    4e48:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4e4c:	01030402 	tsteq	r3, r2, lsl #8
    4e50:	03040200 	movweq	r0, #16896	; 0x4200
    4e54:	04020001 	streq	r0, [r2], #-1
    4e58:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    4e5c:	00010304 	andeq	r0, r1, r4, lsl #6
    4e60:	01030402 	tsteq	r3, r2, lsl #8
    4e64:	03040200 	movweq	r0, #16896	; 0x4200
    4e68:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4e6c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4e70:	00200304 	eoreq	r0, r0, r4, lsl #6
    4e74:	20030402 	andcs	r0, r3, r2, lsl #8
    4e78:	03040200 	movweq	r0, #16896	; 0x4200
    4e7c:	02002006 	andeq	r2, r0, #6
    4e80:	58060304 	stmdapl	r6, {r2, r8, r9}
    4e84:	03040200 	movweq	r0, #16896	; 0x4200
    4e88:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    4e8c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e90:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    4e94:	01170329 	tsteq	r7, r9, lsr #6
    4e98:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4e9c:	09053e39 	stmdbeq	r5, {r0, r3, r4, r5, r9, sl, fp, ip, sp}
    4ea0:	06050514 			; <UNDEFINED> instruction: 0x06050514
    4ea4:	03140513 	tsteq	r4, #79691776	; 0x4c00000
    4ea8:	052e7fa6 	streq	r7, [lr, #-4006]!	; 0xfffff05a
    4eac:	c2030615 	andgt	r0, r3, #22020096	; 0x1500000
    4eb0:	14052e00 	strne	r2, [r5], #-3584	; 0xfffff200
    4eb4:	7fbe0306 	svcvc	0x00be0306
    4eb8:	000f0258 	andeq	r0, pc, r8, asr r2	; <UNPREDICTABLE>
    4ebc:	01050101 	tsteq	r5, r1, lsl #2
    4ec0:	00020500 	andeq	r0, r2, r0, lsl #10
    4ec4:	03000000 	movweq	r0, #0
    4ec8:	05011db8 	streq	r1, [r1, #-3512]	; 0xfffff248
    4ecc:	09052123 	stmdbeq	r5, {r0, r1, r5, r8, sp}
    4ed0:	170d0516 	smladne	sp, r6, r5, r0
    4ed4:	054f0905 	strbeq	r0, [pc, #-2309]	; 45d7 <__HEAP_SIZE+0x35d7>
    4ed8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4edc:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    4ee0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    4ee4:	04020009 	streq	r0, [r2], #-9
    4ee8:	06010601 	streq	r0, [r1], -r1, lsl #12
    4eec:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    4ef0:	052f3505 	streq	r3, [pc, #-1285]!	; 49f3 <__HEAP_SIZE+0x39f3>
    4ef4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4ef8:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    4efc:	01053024 	tsteq	r5, r4, lsr #32
    4f00:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    4f04:	03040200 	movweq	r0, #16896	; 0x4200
    4f08:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    4f0c:	02004b05 	andeq	r4, r0, #5120	; 0x1400
    4f10:	05560304 	ldrbeq	r0, [r6, #-772]	; 0xfffffcfc
    4f14:	04020052 	streq	r0, [r2], #-82	; 0xffffffae
    4f18:	00010603 	andeq	r0, r1, r3, lsl #12
    4f1c:	20030402 	andcs	r0, r3, r2, lsl #8
    4f20:	01000602 	tsteq	r0, r2, lsl #12
    4f24:	00010501 	andeq	r0, r1, r1, lsl #10
    4f28:	26b00205 	ldrtcs	r0, [r0], r5, lsl #4
    4f2c:	e3031000 	movw	r1, #12288	; 0x3000
    4f30:	2105011d 	tstcs	r5, sp, lsl r1
    4f34:	031f0513 	tsteq	pc, #79691776	; 0x4c00000
    4f38:	0905010b 	stmdbeq	r5, {r0, r1, r3, r8}
    4f3c:	06200516 			; <UNDEFINED> instruction: 0x06200516
    4f40:	3c1e0501 	cfldr32cc	mvfx0, [lr], {1}
    4f44:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    4f48:	37032205 	strcc	r2, [r3, -r5, lsl #4]
    4f4c:	06010501 	streq	r0, [r1], -r1, lsl #10
    4f50:	00040213 	andeq	r0, r4, r3, lsl r2
    4f54:	01050101 	tsteq	r5, r1, lsl #2
    4f58:	c0020500 	andgt	r0, r2, r0, lsl #10
    4f5c:	03100026 	tsteq	r0, #38	; 0x26
    4f60:	0501208a 	streq	r2, [r1, #-138]	; 0xffffff76
    4f64:	23051305 	movwcs	r1, #21253	; 0x5305
    4f68:	09051514 	stmdbeq	r5, {r2, r4, r8, sl, ip}
    4f6c:	06100514 			; <UNDEFINED> instruction: 0x06100514
    4f70:	06220501 	strteq	r0, [r2], -r1, lsl #10
    4f74:	142c0530 	strtne	r0, [ip], #-1328	; 0xfffffad0
    4f78:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4f7c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    4f80:	01010004 	tsteq	r1, r4
    4f84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4f88:	00000002 	andeq	r0, r0, r2
    4f8c:	209d0300 	addscs	r0, sp, r0, lsl #6
    4f90:	13050501 	movwne	r0, #21761	; 0x5501
    4f94:	142a0513 	strtne	r0, [sl], #-1299	; 0xfffffaed
    4f98:	10032f05 	andne	r2, r3, r5, lsl #30
    4f9c:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    4fa0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4fa4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    4fa8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    4fac:	05051434 	streq	r1, [r5, #-1076]	; 0xfffffbcc
    4fb0:	06010514 			; <UNDEFINED> instruction: 0x06010514
    4fb4:	00040213 	andeq	r0, r4, r3, lsl r2
    4fb8:	01050101 	tsteq	r5, r1, lsl #2
    4fbc:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    4fc0:	03100026 	tsteq	r0, #38	; 0x26
    4fc4:	050120c0 	streq	r2, [r1, #-192]	; 0xffffff40
    4fc8:	41051328 	tstmi	r5, r8, lsr #6
    4fcc:	14050516 	strne	r0, [r5], #-1302	; 0xfffffaea
    4fd0:	01060c05 	tsteq	r6, r5, lsl #24
    4fd4:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    4fd8:	01010004 	tsteq	r1, r4
    4fdc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4fe0:	00000002 	andeq	r0, r0, r2
    4fe4:	20cc0300 	sbccs	r0, ip, r0, lsl #6
    4fe8:	13050501 	movwne	r0, #21761	; 0x5501
    4fec:	05142d05 	ldreq	r2, [r4, #-3333]	; 0xfffff2fb
    4ff0:	0d051605 	stceq	6, cr1, [r5, #-20]	; 0xffffffec
    4ff4:	1a050106 	bne	145414 <__RAM_SIZE+0x45414>
    4ff8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4ffc:	3d052f06 	stccc	15, cr2, [r5, #-24]	; 0xffffffe8
    5000:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5004:	00050514 	andeq	r0, r5, r4, lsl r5
    5008:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    500c:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    5010:	13060404 	movwne	r0, #25604	; 0x6404
    5014:	02000d05 	andeq	r0, r0, #320	; 0x140
    5018:	7a030104 	bvc	c5430 <__HEAP_SIZE+0xc4430>
    501c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5020:	03022e01 	movweq	r2, #11777	; 0x2e01
    5024:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5028:	02050005 	andeq	r0, r5, #5
    502c:	00000000 	andeq	r0, r0, r0
    5030:	0121ed03 			; <UNDEFINED> instruction: 0x0121ed03
    5034:	13130905 	tstne	r3, #81920	; 0x14000
    5038:	05145205 	ldreq	r5, [r4, #-517]	; 0xfffffdfb
    503c:	2e051430 	cfmvdhrcs	mvd5, r1
    5040:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    5044:	01061105 	tsteq	r6, r5, lsl #2
    5048:	02000d05 	andeq	r0, r0, #320	; 0x140
    504c:	32060404 	andcc	r0, r6, #4, 8	; 0x4000000
    5050:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    5054:	01060404 	tsteq	r6, r4, lsl #8
    5058:	02000f05 	andeq	r0, r0, #5, 30
    505c:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    5060:	09030612 	stmdbeq	r3, {r1, r4, r9, sl}
    5064:	0614052e 	ldreq	r0, [r4], -lr, lsr #10
    5068:	36190501 	ldrcc	r0, [r9], -r1, lsl #10
    506c:	03063505 	movweq	r3, #25861	; 0x6505
    5070:	0905200b 	stmdbeq	r5, {r0, r1, r3, sp}
    5074:	06050514 			; <UNDEFINED> instruction: 0x06050514
    5078:	00110513 	andseq	r0, r1, r3, lsl r5
    507c:	03010402 	movweq	r0, #5122	; 0x1402
    5080:	0200205d 	andeq	r2, r0, #93	; 0x5d
    5084:	062e0104 	strteq	r0, [lr], -r4, lsl #2
    5088:	06290526 	strteq	r0, [r9], -r6, lsr #10
    508c:	20220501 	eorcs	r0, r2, r1, lsl #10
    5090:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    5094:	01062005 	tsteq	r6, r5
    5098:	21061105 	tstcs	r6, r5, lsl #2
    509c:	01061905 	tsteq	r6, r5, lsl #18
    50a0:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    50a4:	01062905 	tsteq	r6, r5, lsl #18
    50a8:	05202205 	streq	r2, [r0, #-517]!	; 0xfffffdfb
    50ac:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    50b0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    50b4:	062f0611 			; <UNDEFINED> instruction: 0x062f0611
    50b8:	00040201 	andeq	r0, r4, r1, lsl #4
    50bc:	09050101 	stmdbeq	r5, {r0, r8}
    50c0:	00020500 	andeq	r0, r2, r0, lsl #10
    50c4:	03000000 	movweq	r0, #0
    50c8:	050122f1 	streq	r2, [r1, #-753]	; 0xfffffd0f
    50cc:	3e051330 	mcrcc	3, 0, r1, cr5, cr0, {1}
    50d0:	14480516 	strbne	r0, [r8], #-1302	; 0xfffffaea
    50d4:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    50d8:	02130609 	andseq	r0, r3, #9437184	; 0x900000
    50dc:	01010006 	tsteq	r1, r6
    50e0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    50e4:	00000002 	andeq	r0, r0, r2
    50e8:	22ff0300 	rscscs	r0, pc, #0, 6
    50ec:	133c0501 	teqne	ip, #4194304	; 0x400000
    50f0:	05153f05 	ldreq	r3, [r5, #-3845]	; 0xfffff0fb
    50f4:	51051640 	tstpl	r5, r0, asr #12
    50f8:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    50fc:	13060505 	movwne	r0, #25861	; 0x6505
    5100:	0003023c 	andeq	r0, r3, ip, lsr r2
    5104:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5108:	d8020500 	stmdale	r2, {r8, sl}
    510c:	03100026 	tsteq	r0, #38	; 0x26
    5110:	06012398 			; <UNDEFINED> instruction: 0x06012398
    5114:	06090501 	streq	r0, [r9], -r1, lsl #10
    5118:	1431052f 	ldrtne	r0, [r1], #-1327	; 0xfffffad1
    511c:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    5120:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    5124:	42052e1b 	andmi	r2, r5, #432	; 0x1b0
    5128:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    512c:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    5130:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    5134:	03062505 	movweq	r2, #25861	; 0x6505
    5138:	09052e12 	stmdbeq	r5, {r1, r4, r9, sl, fp, sp}
    513c:	06140515 			; <UNDEFINED> instruction: 0x06140515
    5140:	31053c01 	tstcc	r5, r1, lsl #24
    5144:	24052206 	strcs	r2, [r5], #-518	; 0xfffffdfa
    5148:	06050513 			; <UNDEFINED> instruction: 0x06050513
    514c:	06470513 			; <UNDEFINED> instruction: 0x06470513
    5150:	05206c03 	streq	r6, [r0, #-3075]!	; 0xfffff3fd
    5154:	0d05133d 	stceq	3, cr1, [r5, #-244]	; 0xffffff0c
    5158:	30110515 	andscc	r0, r1, r5, lsl r5
    515c:	01061d05 	tsteq	r6, r5, lsl #26
    5160:	4c060d05 	stcmi	13, cr0, [r6], {5}
    5164:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    5168:	07022001 	streq	r2, [r2, -r1]
    516c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5170:	02050001 	andeq	r0, r5, #1
    5174:	10002714 	andne	r2, r0, r4, lsl r7
    5178:	0124be03 			; <UNDEFINED> instruction: 0x0124be03
    517c:	13130505 	tstne	r3, #20971520	; 0x1400000
    5180:	18240513 	stmdane	r4!, {r0, r1, r4, r8, sl}
    5184:	05172b05 	ldreq	r2, [r7, #-2821]	; 0xfffff4fb
    5188:	1e051805 	cdpne	8, 0, cr1, cr5, cr5, {0}
    518c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5190:	0301052e 	movweq	r0, #5422	; 0x152e
    5194:	09053c6c 	stmdbeq	r5, {r2, r3, r5, r6, sl, fp, ip, sp}
    5198:	20180306 	andscs	r0, r8, r6, lsl #6
    519c:	01063705 	tsteq	r6, r5, lsl #14
    51a0:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    51a4:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    51a8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    51ac:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    51b0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    51b4:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    51b8:	1d051909 	vstrne.16	s2, [r5, #-18]	; 0xffffffee	; <UNPREDICTABLE>
    51bc:	0b050106 	bleq	1455dc <__RAM_SIZE+0x455dc>
    51c0:	0310052e 	tsteq	r0, #192937984	; 0xb800000
    51c4:	11052e58 	tstne	r5, r8, asr lr
    51c8:	018c0306 	orreq	r0, ip, r6, lsl #6
    51cc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    51d0:	82130501 	andshi	r0, r3, #4194304	; 0x400000
    51d4:	05302505 	ldreq	r2, [r0, #-1285]!	; 0xfffffafb
    51d8:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
    51dc:	012b0311 			; <UNDEFINED> instruction: 0x012b0311
    51e0:	01062305 	tsteq	r6, r5, lsl #6
    51e4:	2e2e1305 	cdpcs	3, 2, cr1, cr14, cr5, {0}
    51e8:	3a030105 	bcc	c5604 <__HEAP_SIZE+0xc4604>
    51ec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    51f0:	207ea603 	rsbscs	sl, lr, r3, lsl #12
    51f4:	2e010101 	adfcss	f0, f1, f1
    51f8:	064a203c 			; <UNDEFINED> instruction: 0x064a203c
    51fc:	0601062e 	streq	r0, [r1], -lr, lsr #12
    5200:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    5204:	15050163 	strne	r0, [r5, #-355]	; 0xfffffe9d
    5208:	2e330306 	cdpcs	3, 3, cr0, cr3, cr6, {0}
    520c:	01062a05 	tsteq	r6, r5, lsl #20
    5210:	4b061505 	blmi	18a62c <__RAM_SIZE+0x8a62c>
    5214:	15031905 	strne	r1, [r3, #-2309]	; 0xfffff6fb
    5218:	062e0520 	strteq	r0, [lr], -r0, lsr #10
    521c:	19052001 	stmdbne	r5, {r0, sp}
    5220:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    5224:	01040200 	mrseq	r0, R12_usr
    5228:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    522c:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    5230:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    5234:	00180603 	andseq	r0, r8, r3, lsl #12
    5238:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    523c:	03040200 	movweq	r0, #16896	; 0x4200
    5240:	1631053c 			; <UNDEFINED> instruction: 0x1631053c
    5244:	01171505 	tsteq	r7, r5, lsl #10
    5248:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    524c:	00580104 	subseq	r0, r8, r4, lsl #2
    5250:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5254:	03040200 	movweq	r0, #16896	; 0x4200
    5258:	04020001 	streq	r0, [r2], #-1
    525c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5260:	00820304 	addeq	r0, r2, r4, lsl #6
    5264:	01030402 	tsteq	r3, r2, lsl #8
    5268:	03040200 	movweq	r0, #16896	; 0x4200
    526c:	04020001 	streq	r0, [r2], #-1
    5270:	02002003 	andeq	r2, r0, #3
    5274:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5278:	20030402 	andcs	r0, r3, r2, lsl #8
    527c:	03040200 	movweq	r0, #16896	; 0x4200
    5280:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5284:	00200603 	eoreq	r0, r0, r3, lsl #12
    5288:	06030402 	streq	r0, [r3], -r2, lsl #8
    528c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5290:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    5294:	00010304 	andeq	r0, r1, r4, lsl #6
    5298:	01030402 	tsteq	r3, r2, lsl #8
    529c:	02001d05 	andeq	r1, r0, #320	; 0x140
    52a0:	10030304 	andne	r0, r3, r4, lsl #6
    52a4:	00260501 	eoreq	r0, r6, r1, lsl #10
    52a8:	06030402 	streq	r0, [r3], -r2, lsl #8
    52ac:	00410501 	subeq	r0, r1, r1, lsl #10
    52b0:	20030402 	andcs	r0, r3, r2, lsl #8
    52b4:	03040200 	movweq	r0, #16896	; 0x4200
    52b8:	001f0520 	andseq	r0, pc, r0, lsr #10
    52bc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    52c0:	05303105 	ldreq	r3, [r0, #-261]!	; 0xfffffefb
    52c4:	b703060d 	strlt	r0, [r3, -sp, lsl #12]
    52c8:	1105207f 	tstne	r5, pc, ror r0
    52cc:	06150514 			; <UNDEFINED> instruction: 0x06150514
    52d0:	3c130501 	cfldr32cc	mvfx0, [r3], {1}
    52d4:	03061505 	movweq	r1, #25861	; 0x6505
    52d8:	1d052e13 	stcne	14, cr2, [r5, #-76]	; 0xffffffb4
    52dc:	1b050106 	blne	1456fc <__RAM_SIZE+0x456fc>
    52e0:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    52e4:	06200521 	strteq	r0, [r0], -r1, lsr #10
    52e8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    52ec:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    52f0:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    52f4:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    52f8:	20011615 	andcs	r1, r1, r5, lsl r6
    52fc:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    5300:	004a0304 	subeq	r0, sl, r4, lsl #6
    5304:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5308:	03040200 	movweq	r0, #16896	; 0x4200
    530c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5310:	19051603 	stmdbne	r5, {r0, r1, r9, sl, ip}
    5314:	03040200 	movweq	r0, #16896	; 0x4200
    5318:	17050106 	strne	r0, [r5, -r6, lsl #2]
    531c:	03040200 	movweq	r0, #16896	; 0x4200
    5320:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5324:	3c010130 	stfccs	f0, [r1], {48}	; 0x30
    5328:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    532c:	02005801 	andeq	r5, r0, #65536	; 0x10000
    5330:	3c060104 	stfccs	f0, [r6], {4}
    5334:	03060905 	movweq	r0, #26885	; 0x6905
    5338:	05010191 	streq	r0, [r1, #-401]	; 0xfffffe6f
    533c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    5340:	7e970310 	mrcvc	3, 4, r0, cr7, cr0, {0}
    5344:	0301054a 	movweq	r0, #5450	; 0x154a
    5348:	052001f7 	streq	r0, [r0, #-503]!	; 0xfffffe09
    534c:	20480325 	subcs	r0, r8, r5, lsr #6
    5350:	06360520 	ldrteq	r0, [r6], -r0, lsr #10
    5354:	05013503 	streq	r3, [r1, #-1283]	; 0xfffffafd
    5358:	0c051405 	cfstrseq	mvf1, [r5], {5}
    535c:	17020106 	strne	r0, [r2, -r6, lsl #2]
    5360:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5364:	02050001 	andeq	r0, r5, #1
    5368:	10002874 	andne	r2, r0, r4, ror r8
    536c:	011ef403 	tsteq	lr, r3, lsl #8	; <UNPREDICTABLE>
    5370:	13210505 			; <UNDEFINED> instruction: 0x13210505
    5374:	05142005 	ldreq	r2, [r4, #-5]
    5378:	010b0309 	tsteq	fp, r9, lsl #6
    537c:	13300d05 	teqne	r0, #320	; 0x140
    5380:	05163705 	ldreq	r3, [r6, #-1797]	; 0xfffff8fb
    5384:	2405140d 	strcs	r1, [r5], #-1037	; 0xfffffbf3
    5388:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    538c:	0624053c 			; <UNDEFINED> instruction: 0x0624053c
    5390:	140d0521 	strne	r0, [sp], #-1313	; 0xfffffadf
    5394:	01062605 	tsteq	r6, r5, lsl #12
    5398:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    539c:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    53a0:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    53a4:	10052e13 	andne	r2, r5, r3, lsl lr
    53a8:	05206503 	streq	r6, [r0, #-1283]!	; 0xfffffafd
    53ac:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    53b0:	25030601 	strcs	r0, [r3, #-1537]	; 0xfffff9ff
    53b4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    53b8:	003c0601 	eorseq	r0, ip, r1, lsl #12
    53bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    53c0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    53c4:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    53c8:	0158030d 	cmpeq	r8, sp, lsl #6
    53cc:	03063905 	movweq	r3, #26885	; 0x6905
    53d0:	1a052035 	bne	14d4ac <__RAM_SIZE+0x4d4ac>
    53d4:	05016b03 	streq	r6, [r1, #-2819]	; 0xfffff4fd
    53d8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    53dc:	19052e1a 	stmdbne	r5, {r1, r3, r4, r9, sl, fp, sp}
    53e0:	21053306 	tstcs	r5, r6, lsl #6
    53e4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    53e8:	1905201f 	stmdbne	r5, {r0, r1, r2, r3, r4, sp}
    53ec:	20012106 	andcs	r2, r1, r6, lsl #2
    53f0:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    53f4:	00580304 	subseq	r0, r8, r4, lsl #6
    53f8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    53fc:	03040200 	movweq	r0, #16896	; 0x4200
    5400:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5404:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    5408:	00130304 	andseq	r0, r3, r4, lsl #6
    540c:	01030402 	tsteq	r3, r2, lsl #8
    5410:	03040200 	movweq	r0, #16896	; 0x4200
    5414:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5418:	02003c03 	andeq	r3, r0, #768	; 0x300
    541c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5420:	4a030402 	bmi	c6430 <__HEAP_SIZE+0xc5430>
    5424:	03040200 	movweq	r0, #16896	; 0x4200
    5428:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    542c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5430:	00130304 	andseq	r0, r3, r4, lsl #6
    5434:	01030402 	tsteq	r3, r2, lsl #8
    5438:	03040200 	movweq	r0, #16896	; 0x4200
    543c:	04020001 	streq	r0, [r2], #-1
    5440:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5444:	20060304 	andcs	r0, r6, r4, lsl #6
    5448:	01040200 	mrseq	r0, R12_usr
    544c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    5450:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5454:	01030402 	tsteq	r3, r2, lsl #8
    5458:	03040200 	movweq	r0, #16896	; 0x4200
    545c:	04020001 	streq	r0, [r2], #-1
    5460:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    5464:	00010304 	andeq	r0, r1, r4, lsl #6
    5468:	01030402 	tsteq	r3, r2, lsl #8
    546c:	03040200 	movweq	r0, #16896	; 0x4200
    5470:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5474:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5478:	00200304 	eoreq	r0, r0, r4, lsl #6
    547c:	20030402 	andcs	r0, r3, r2, lsl #8
    5480:	03040200 	movweq	r0, #16896	; 0x4200
    5484:	02002006 	andeq	r2, r0, #6
    5488:	58060304 	stmdapl	r6, {r2, r8, r9}
    548c:	03040200 	movweq	r0, #16896	; 0x4200
    5490:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    5494:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5498:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    549c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    54a0:	26051803 	strcs	r1, [r5], -r3, lsl #16
    54a4:	03040200 	movweq	r0, #16896	; 0x4200
    54a8:	41050106 	tstmi	r5, r6, lsl #2
    54ac:	03040200 	movweq	r0, #16896	; 0x4200
    54b0:	001f0520 	andseq	r0, pc, r0, lsr #10
    54b4:	3c030402 	cfstrscc	mvf0, [r3], {2}
    54b8:	30062105 	andcc	r2, r6, r5, lsl #2
    54bc:	01063b05 	tsteq	r6, r5, lsl #22
    54c0:	03061505 	movweq	r1, #25861	; 0x6505
    54c4:	17054a10 	smladne	r5, r0, sl, r4
    54c8:	19050106 	stmdbne	r5, {r1, r2, r8}
    54cc:	0d032806 	stceq	8, cr2, [r3, #-24]	; 0xffffffe8
    54d0:	0624052e 	strteq	r0, [r4], -lr, lsr #10
    54d4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    54d8:	061b0530 			; <UNDEFINED> instruction: 0x061b0530
    54dc:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    54e0:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    54e4:	27051615 	smladcs	r5, r5, r6, r1
    54e8:	17050106 	strne	r0, [r5, -r6, lsl #2]
    54ec:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    54f0:	2e011824 	cdpcs	8, 0, cr1, cr1, cr4, {1}
    54f4:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    54f8:	05017a03 	streq	r7, [r1, #-2563]	; 0xfffff5fd
    54fc:	6e03063d 	mcrvs	6, 0, r0, cr3, cr13, {1}
    5500:	1521052e 	strne	r0, [r1, #-1326]!	; 0xfffffad2
    5504:	05132405 	ldreq	r2, [r3, #-1029]	; 0xfffffbfb
    5508:	2001061d 	andcs	r0, r1, sp, lsl r6
    550c:	20720306 	rsbscs	r0, r2, r6, lsl #6
    5510:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
    5514:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    5518:	25052e23 	strcs	r2, [r5, #-3619]	; 0xfffff1dd
    551c:	3f053206 	svccc	0x00053206
    5520:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    5524:	4a0a0306 	bmi	286144 <__RAM_SIZE+0x186144>
    5528:	01062a05 	tsteq	r6, r5, lsl #20
    552c:	0310054a 	tsteq	r0, #310378496	; 0x12800000
    5530:	05017f97 	streq	r7, [r1, #-3991]	; 0xfffff069
    5534:	87030629 	strhi	r0, [r3, -r9, lsr #12]
    5538:	09052001 	stmdbeq	r5, {r0, sp}
    553c:	31320515 	teqcc	r2, r5, lsl r5
    5540:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    5544:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    5548:	01010008 	tsteq	r1, r8
    554c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5550:	00000002 	andeq	r0, r0, r2
    5554:	12a80300 	adcne	r0, r8, #0, 6
    5558:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    555c:	133d0609 	teqne	sp, #9437184	; 0x900000
    5560:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    5564:	3005142b 	andcc	r1, r5, fp, lsr #8
    5568:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    556c:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    5570:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    5574:	05300637 	ldreq	r0, [r0, #-1591]!	; 0xfffff9c9
    5578:	1b05150d 	blne	14a9b4 <__RAM_SIZE+0x4a9b4>
    557c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5580:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5584:	060f0522 	streq	r0, [pc], -r2, lsr #10
    5588:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    558c:	06130535 			; <UNDEFINED> instruction: 0x06130535
    5590:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5594:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    5598:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    559c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    55a0:	4c030625 	stcmi	6, cr0, [r3], {37}	; 0x25
    55a4:	3b052001 	blcc	14d5b0 <__RAM_SIZE+0x4d5b0>
    55a8:	01040200 	mrseq	r0, R12_usr
    55ac:	05201903 	streq	r1, [r0, #-2307]!	; 0xfffff6fd
    55b0:	1903060d 	stmdbne	r3, {r0, r2, r3, r9, sl}
    55b4:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    55b8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    55bc:	06250522 	strteq	r0, [r5], -r2, lsr #10
    55c0:	20014c03 	andcs	r4, r1, r3, lsl #24
    55c4:	03061505 	movweq	r1, #25861	; 0x6505
    55c8:	0d05201b 	stceq	0, cr2, [r5, #-108]	; 0xffffff94
    55cc:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    55d0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    55d4:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    55d8:	20730311 	rsbscs	r0, r3, r1, lsl r3
    55dc:	01061305 	tsteq	r6, r5, lsl #6
    55e0:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    55e4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    55e8:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    55ec:	0109030d 	tsteq	r9, sp, lsl #6
    55f0:	01062105 	tsteq	r6, r5, lsl #2
    55f4:	22060d05 	andcs	r0, r6, #320	; 0x140
    55f8:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    55fc:	2e061611 	mcrcs	6, 0, r1, cr6, cr1, {0}
    5600:	40062905 	andmi	r2, r6, r5, lsl #18
    5604:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5608:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    560c:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    5610:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5614:	200c0305 	andcs	r0, ip, r5, lsl #6
    5618:	03060d05 	movweq	r0, #27909	; 0x6d05
    561c:	21052e61 	tstcs	r5, r1, ror #28
    5620:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5624:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    5628:	014c0306 	cmpeq	ip, r6, lsl #6
    562c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5630:	2000c703 	andcs	ip, r0, r3, lsl #14
    5634:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    5638:	09051534 	stmdbeq	r5, {r2, r4, r5, r8, sl, ip}
    563c:	06100514 			; <UNDEFINED> instruction: 0x06100514
    5640:	00030201 	andeq	r0, r3, r1, lsl #4
    5644:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5648:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
    564c:	03100029 	tsteq	r0, #41	; 0x29
    5650:	06011383 	streq	r1, [r1], -r3, lsl #7
    5654:	06090501 	streq	r0, [r9], -r1, lsl #10
    5658:	142f0521 	strtne	r0, [pc], #-1313	; 5660 <__HEAP_SIZE+0x4660>
    565c:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5660:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5664:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    5668:	2205303b 	andcs	r3, r5, #59	; 0x3b
    566c:	03110514 	tsteq	r1, #20, 10	; 0x5000000
    5670:	0d050109 	stfeqs	f0, [r5, #-36]	; 0xffffffdc
    5674:	061f054c 	ldreq	r0, [pc], -ip, asr #10
    5678:	06250501 	strteq	r0, [r5], -r1, lsl #10
    567c:	17090532 	smladxne	r9, r2, r5, r0
    5680:	01060b05 	tsteq	r6, r5, lsl #22
    5684:	22060d05 	andcs	r0, r6, #320	; 0x140
    5688:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    568c:	05051521 	streq	r1, [r5, #-1313]	; 0xfffffadf
    5690:	01021306 	tsteq	r2, r6, lsl #6
    5694:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5698:	02050001 	andeq	r0, r5, #1
    569c:	100029c4 	andne	r2, r0, r4, asr #19
    56a0:	012cf403 	msreq	CPSR_fs, r3, lsl #8
    56a4:	29050106 	stmdbcs	r5, {r1, r2, r8}
    56a8:	2e360306 	cdpcs	3, 3, cr0, cr6, cr6, {0}
    56ac:	12030d05 	andne	r0, r3, #320	; 0x140
    56b0:	21051901 	tstcs	r5, r1, lsl #18
    56b4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    56b8:	0f053006 	svceq	0x00053006
    56bc:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    56c0:	b1030605 	tstlt	r3, r5, lsl #12
    56c4:	4305017f 	movwmi	r0, #20863	; 0x517f
    56c8:	0305051a 	movweq	r0, #21786	; 0x551a
    56cc:	0905010a 	stmdbeq	r5, {r1, r3, r8}
    56d0:	030d0516 	movweq	r0, #54550	; 0xd516
    56d4:	11052e18 	tstne	r5, r8, lsl lr
    56d8:	0f050106 	svceq	0x00050106
    56dc:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    56e0:	3c210330 	stccc	3, cr0, [r1], #-192	; 0xffffff40
    56e4:	05334705 	ldreq	r4, [r3, #-1797]!	; 0xfffff8fb
    56e8:	29051315 	stmdbcs	r5, {r0, r2, r4, r8, r9, ip}
    56ec:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    56f0:	15053306 	strne	r3, [r5, #-774]	; 0xfffffcfa
    56f4:	06170514 			; <UNDEFINED> instruction: 0x06170514
    56f8:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    56fc:	13190530 	tstne	r9, #48, 10	; 0xc000000
    5700:	052f3205 	streq	r3, [pc, #-517]!	; 5503 <__HEAP_SIZE+0x4503>
    5704:	11051631 	tstne	r5, r1, lsr r6
    5708:	061a0515 			; <UNDEFINED> instruction: 0x061a0515
    570c:	00050201 	andeq	r0, r5, r1, lsl #4
    5710:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5714:	00020500 	andeq	r0, r2, r0, lsl #10
    5718:	03000000 	movweq	r0, #0
    571c:	060121a7 	streq	r2, [r1], -r7, lsr #3
    5720:	06090501 	streq	r0, [r9], -r1, lsl #10
    5724:	3305132f 	movwcc	r1, #21295	; 0x532f
    5728:	154a0514 	strbne	r0, [sl, #-1300]	; 0xfffffaec
    572c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5730:	78030615 	stmdavc	r3, {r0, r2, r4, r9, sl}
    5734:	060d052e 	streq	r0, [sp], -lr, lsr #10
    5738:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    573c:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    5740:	11050106 	tstne	r5, r6, lsl #2
    5744:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    5748:	11050106 	tstne	r5, r6, lsl #2
    574c:	13058406 	movwne	r8, #21510	; 0x5406
    5750:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5754:	0d053306 	stceq	3, cr3, [r5, #-24]	; 0xffffffe8
    5758:	31060106 	tstcc	r6, r6, lsl #2
    575c:	01060f05 	tsteq	r6, r5, lsl #30
    5760:	25060d05 	strcs	r0, [r6, #-3333]	; 0xfffff2fb
    5764:	01060f05 	tsteq	r6, r5, lsl #30
    5768:	27061105 	strcs	r1, [r6, -r5, lsl #2]
    576c:	01061305 	tsteq	r6, r5, lsl #6
    5770:	03061105 	movweq	r1, #24837	; 0x6105
    5774:	1305200a 	movwne	r2, #20490	; 0x500a
    5778:	09050106 	stmdbeq	r5, {r1, r2, r8}
    577c:	12052806 	andne	r2, r5, #393216	; 0x60000
    5780:	2c050106 	stfcss	f0, [r5], {6}
    5784:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    5788:	06050514 			; <UNDEFINED> instruction: 0x06050514
    578c:	06110513 			; <UNDEFINED> instruction: 0x06110513
    5790:	052e5f03 	streq	r5, [lr, #-3843]!	; 0xfffff0fd
    5794:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    5798:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    579c:	06190525 	ldreq	r0, [r9], -r5, lsr #10
    57a0:	054a2e01 	strbeq	r2, [sl, #-3585]	; 0xfffff1ff
    57a4:	05280615 	streq	r0, [r8, #-1557]!	; 0xfffff9eb
    57a8:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
    57ac:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    57b0:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    57b4:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
    57b8:	000b023c 	andeq	r0, fp, ip, lsr r2
    57bc:	01050101 	tsteq	r5, r1, lsl #2
    57c0:	00020500 	andeq	r0, r2, r0, lsl #10
    57c4:	03000000 	movweq	r0, #0
    57c8:	060123c2 	streq	r2, [r1], -r2, asr #7
    57cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    57d0:	1434052f 	ldrtne	r0, [r4], #-1327	; 0xfffffad1
    57d4:	05163f05 	ldreq	r3, [r6, #-3845]	; 0xfffff0fb
    57d8:	05311605 	ldreq	r1, [r1, #-1541]!	; 0xfffff9fb
    57dc:	16053009 	strne	r3, [r5], -r9
    57e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    57e4:	052f4c06 	streq	r4, [pc, #-3078]!	; 4be6 <__HEAP_SIZE+0x3be6>
    57e8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    57ec:	05300634 	ldreq	r0, [r0, #-1588]!	; 0xfffff9cc
    57f0:	01051405 	tsteq	r5, r5, lsl #8
    57f4:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    57f8:	01010003 	tsteq	r1, r3
    57fc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5800:	00000002 	andeq	r0, r0, r2
    5804:	23e00300 	mvncs	r0, #0, 6
    5808:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    580c:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    5810:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    5814:	0905141e 	stmdbeq	r5, {r1, r2, r3, r4, sl, ip}
    5818:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    581c:	01061105 	tsteq	r6, r5, lsl #2
    5820:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    5824:	00c40319 	sbceq	r0, r4, r9, lsl r3
    5828:	0609052e 	streq	r0, [r9], -lr, lsr #10
    582c:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    5830:	062f0501 	strteq	r0, [pc], -r1, lsl #10
    5834:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    5838:	13060505 	movwne	r0, #25861	; 0x6505
    583c:	03061105 	movweq	r1, #24837	; 0x6105
    5840:	172e7fb6 			; <UNDEFINED> instruction: 0x172e7fb6
    5844:	01061a05 	tsteq	r6, r5, lsl #20
    5848:	50061105 	andpl	r1, r6, r5, lsl #2
    584c:	05301505 	ldreq	r1, [r0, #-1285]!	; 0xfffffafb
    5850:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5854:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    5858:	22052206 	andcs	r2, r5, #1610612736	; 0x60000000
    585c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5860:	2f054f06 	svccs	0x00054f06
    5864:	31050106 	tstcc	r5, r6, lsl #2
    5868:	11054006 	tstne	r5, r6
    586c:	01013115 	tsteq	r1, r5, lsl r1
    5870:	04020001 	streq	r0, [r2], #-1
    5874:	02005801 	andeq	r5, r0, #65536	; 0x10000
    5878:	002e0304 	eoreq	r0, lr, r4, lsl #6
    587c:	01030402 	tsteq	r3, r2, lsl #8
    5880:	03040200 	movweq	r0, #16896	; 0x4200
    5884:	04020001 	streq	r0, [r2], #-1
    5888:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    588c:	00010304 	andeq	r0, r1, r4, lsl #6
    5890:	01030402 	tsteq	r3, r2, lsl #8
    5894:	03040200 	movweq	r0, #16896	; 0x4200
    5898:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    589c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    58a0:	00200304 	eoreq	r0, r0, r4, lsl #6
    58a4:	20030402 	andcs	r0, r3, r2, lsl #8
    58a8:	03040200 	movweq	r0, #16896	; 0x4200
    58ac:	02002006 	andeq	r2, r0, #6
    58b0:	58060304 	stmdapl	r6, {r2, r8, r9}
    58b4:	03040200 	movweq	r0, #16896	; 0x4200
    58b8:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    58bc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    58c0:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    58c4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    58c8:	010b0303 	tsteq	fp, r3, lsl #6
    58cc:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    58d0:	01060304 	tsteq	r6, r4, lsl #6
    58d4:	02003d05 	andeq	r3, r0, #320	; 0x140
    58d8:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    58dc:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    58e0:	1d053c03 	stcne	12, cr3, [r5, #-12]
    58e4:	31053206 	tstcc	r5, r6, lsl #4
    58e8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    58ec:	3c530319 	mrrccc	3, 1, r0, r3, cr9
    58f0:	00090220 	andeq	r0, r9, r0, lsr #4
    58f4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    58f8:	00020500 	andeq	r0, r2, r0, lsl #10
    58fc:	03000000 	movweq	r0, #0
    5900:	060126bf 			; <UNDEFINED> instruction: 0x060126bf
    5904:	06090501 	streq	r0, [r9], -r1, lsl #10
    5908:	1447052f 	strbne	r0, [r7], #-1327	; 0xfffffad1
    590c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    5910:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5914:	0b030609 	bleq	c7140 <__HEAP_SIZE+0xc6140>
    5918:	300d052e 	andcc	r0, sp, lr, lsr #10
    591c:	01061d05 	tsteq	r6, r5, lsl #26
    5920:	22060905 	andcs	r0, r6, #81920	; 0x14000
    5924:	05303105 	ldreq	r3, [r0, #-261]!	; 0xfffffefb
    5928:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    592c:	7003060d 	andvc	r0, r3, sp, lsl #12
    5930:	06120520 	ldreq	r0, [r2], -r0, lsr #10
    5934:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    5938:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    593c:	02050005 	andeq	r0, r5, #5
    5940:	00000000 	andeq	r0, r0, r0
    5944:	0126e003 			; <UNDEFINED> instruction: 0x0126e003
    5948:	09050106 	stmdbeq	r5, {r1, r2, r8}
    594c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    5950:	09051437 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, ip}
    5954:	06110515 			; <UNDEFINED> instruction: 0x06110515
    5958:	00090501 	andeq	r0, r9, r1, lsl #10
    595c:	06040402 	streq	r0, [r4], -r2, lsl #8
    5960:	000d0532 	andeq	r0, sp, r2, lsr r5
    5964:	30040402 	andcc	r0, r4, r2, lsl #8
    5968:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    596c:	01060404 	tsteq	r6, r4, lsl #8
    5970:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5974:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    5978:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    597c:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    5980:	04020009 	streq	r0, [r2], #-9
    5984:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    5988:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    598c:	11051306 	tstne	r5, r6, lsl #6
    5990:	01040200 	mrseq	r0, R12_usr
    5994:	002e7303 	eoreq	r7, lr, r3, lsl #6
    5998:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    599c:	01000402 	tsteq	r0, r2, lsl #8
    59a0:	00050501 	andeq	r0, r5, r1, lsl #10
    59a4:	00000205 	andeq	r0, r0, r5, lsl #4
    59a8:	fc030000 	stc2	0, cr0, [r3], {-0}
    59ac:	01060126 	tsteq	r6, r6, lsr #2
    59b0:	21060905 	tstcs	r6, r5, lsl #18
    59b4:	3e051313 	mcrcc	3, 0, r1, cr5, cr3, {0}
    59b8:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    59bc:	01061105 	tsteq	r6, r5, lsl #2
    59c0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59c4:	35060404 	strcc	r0, [r6, #-1028]	; 0xfffffbfc
    59c8:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    59cc:	01060404 	tsteq	r6, r4, lsl #8
    59d0:	02000d05 	andeq	r0, r0, #320	; 0x140
    59d4:	30060404 	andcc	r0, r6, r4, lsl #8
    59d8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    59dc:	01060404 	tsteq	r6, r4, lsl #8
    59e0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59e4:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    59e8:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    59ec:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    59f0:	04020009 	streq	r0, [r2], #-9
    59f4:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    59f8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59fc:	11051306 	tstne	r5, r6, lsl #6
    5a00:	01040200 	mrseq	r0, R12_usr
    5a04:	002e7003 	eoreq	r7, lr, r3
    5a08:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5a0c:	01000402 	tsteq	r0, r2, lsl #8
    5a10:	00050501 	andeq	r0, r5, r1, lsl #10
    5a14:	00000205 	andeq	r0, r0, r5, lsl #4
    5a18:	9d030000 	stcls	0, cr0, [r3, #-0]
    5a1c:	01060127 	tsteq	r6, r7, lsr #2
    5a20:	21060905 	tstcs	r6, r5, lsl #18
    5a24:	14460513 	strbne	r0, [r6], #-1299	; 0xfffffaed
    5a28:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5a2c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5a30:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    5a34:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    5a38:	200b0501 	andcs	r0, fp, r1, lsl #10
    5a3c:	22060d05 	andcs	r0, r6, #320	; 0x140
    5a40:	01061705 	tsteq	r6, r5, lsl #14
    5a44:	0a030505 	beq	c6e60 <__HEAP_SIZE+0xc5e60>
    5a48:	060d052e 	streq	r0, [sp], -lr, lsr #10
    5a4c:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    5a50:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
    5a54:	0d031505 	cfstr32eq	mvfx1, [r3, #-20]	; 0xffffffec
    5a58:	063c0520 	ldrteq	r0, [ip], -r0, lsr #10
    5a5c:	14090523 	strne	r0, [r9], #-1315	; 0xfffffadd
    5a60:	01061005 	tsteq	r6, r5
    5a64:	01000402 	tsteq	r0, r2, lsl #8
    5a68:	00050501 	andeq	r0, r5, r1, lsl #10
    5a6c:	29fc0205 	ldmibcs	ip!, {r0, r2, r9}^
    5a70:	c0031000 	andgt	r1, r3, r0
    5a74:	28050127 	stmdacs	r5, {r0, r1, r2, r5, r8}
    5a78:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    5a7c:	01062205 	tsteq	r6, r5, lsl #4
    5a80:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    5a84:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    5a88:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5a8c:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    5a90:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5a94:	053d0625 	ldreq	r0, [sp, #-1573]!	; 0xfffff9db
    5a98:	011f032b 	tsteq	pc, fp, lsr #6
    5a9c:	0e030d05 	cdpeq	13, 0, cr0, cr3, cr5, {0}
    5aa0:	002e0101 	eoreq	r0, lr, r1, lsl #2
    5aa4:	20030402 	andcs	r0, r3, r2, lsl #8
    5aa8:	03040200 	movweq	r0, #16896	; 0x4200
    5aac:	04020001 	streq	r0, [r2], #-1
    5ab0:	02002001 	andeq	r2, r0, #1
    5ab4:	00740404 	rsbseq	r0, r4, r4, lsl #8
    5ab8:	01040402 	tsteq	r4, r2, lsl #8
    5abc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5ac0:	04020001 	streq	r0, [r2], #-1
    5ac4:	02007404 	andeq	r7, r0, #4, 8	; 0x4000000
    5ac8:	00820704 	addeq	r0, r2, r4, lsl #14
    5acc:	90070402 	andls	r0, r7, r2, lsl #8
    5ad0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ad4:	04020001 	streq	r0, [r2], #-1
    5ad8:	24052e07 	strcs	r2, [r5], #-3591	; 0xfffff1f9
    5adc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ae0:	000d0513 	andeq	r0, sp, r3, lsl r5
    5ae4:	17070402 	strne	r0, [r7, -r2, lsl #8]
    5ae8:	02002905 	andeq	r2, r0, #81920	; 0x14000
    5aec:	12030704 	andne	r0, r3, #4, 14	; 0x100000
    5af0:	00050520 	andeq	r0, r5, r0, lsr #10
    5af4:	06070402 	streq	r0, [r7], -r2, lsl #8
    5af8:	000d0513 	andeq	r0, sp, r3, lsl r5
    5afc:	06050402 	streq	r0, [r5], -r2, lsl #8
    5b00:	08206703 	stmdaeq	r0!, {r0, r1, r8, r9, sl, sp, lr}
    5b04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5b08:	02050005 	andeq	r0, r5, #5
    5b0c:	00000000 	andeq	r0, r0, r0
    5b10:	0118b103 	tsteq	r8, r3, lsl #2
    5b14:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5b18:	32052f06 	andcc	r2, r5, #6, 30
    5b1c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    5b20:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    5b24:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5b28:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    5b2c:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    5b30:	0402000d 	streq	r0, [r2], #-13
    5b34:	11051604 	tstne	r5, r4, lsl #12
    5b38:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b3c:	29050106 	stmdbcs	r5, {r1, r2, r8}
    5b40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b44:	0d055006 	stceq	0, cr5, [r5, #-24]	; 0xffffffe8
    5b48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b4c:	00110516 	andseq	r0, r1, r6, lsl r5
    5b50:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b54:	000f0501 	andeq	r0, pc, r1, lsl #10
    5b58:	20040402 	andcs	r0, r4, r2, lsl #8
    5b5c:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    5b60:	01061a05 	tsteq	r6, r5, lsl #20
    5b64:	4e062905 	vmlami.f16	s4, s12, s10	; <UNPREDICTABLE>
    5b68:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    5b6c:	05144e11 	ldreq	r4, [r4, #-3601]	; 0xfffff1ef
    5b70:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    5b74:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    5b78:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    5b7c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5b80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5b84:	34030609 	strcc	r0, [r3], #-1545	; 0xfffff9f7
    5b88:	320d052e 	andcc	r0, sp, #192937984	; 0xb800000
    5b8c:	06230514 			; <UNDEFINED> instruction: 0x06230514
    5b90:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    5b94:	03062905 	movweq	r2, #26885	; 0x6905
    5b98:	0d05200c 	stceq	0, cr2, [r5, #-48]	; 0xffffffd0
    5b9c:	06170515 			; <UNDEFINED> instruction: 0x06170515
    5ba0:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    5ba4:	29030505 	stmdbcs	r3, {r0, r2, r8, sl}
    5ba8:	0015052e 	andseq	r0, r5, lr, lsr #10
    5bac:	03010402 	movweq	r0, #5122	; 0x1402
    5bb0:	00207eef 	eoreq	r7, r0, pc, ror #29
    5bb4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5bb8:	20210306 	eorcs	r0, r1, r6, lsl #6
    5bbc:	01062d05 	tsteq	r6, r5, lsl #26
    5bc0:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    5bc4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5bc8:	052c0602 	streq	r0, [ip, #-1538]!	; 0xfffff9fe
    5bcc:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5bd0:	00010602 	andeq	r0, r1, r2, lsl #12
    5bd4:	20020402 	andcs	r0, r2, r2, lsl #8
    5bd8:	26061905 	strcs	r1, [r6], -r5, lsl #18
    5bdc:	01063305 	tsteq	r6, r5, lsl #6
    5be0:	06110558 			; <UNDEFINED> instruction: 0x06110558
    5be4:	05013803 	streq	r3, [r1, #-2051]	; 0xfffff7fd
    5be8:	11053015 	tstne	r5, r5, lsl r0
    5bec:	3c090330 	stccc	3, cr0, [r9], {48}	; 0x30
    5bf0:	01062705 	tsteq	r6, r5, lsl #14
    5bf4:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    5bf8:	0f030615 	svceq	0x00030615
    5bfc:	06290520 	strteq	r0, [r9], -r0, lsr #10
    5c00:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    5c04:	062d0530 			; <UNDEFINED> instruction: 0x062d0530
    5c08:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    5c0c:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    5c10:	01062605 	tsteq	r6, r5, lsl #12
    5c14:	063e0520 	ldrteq	r0, [lr], -r0, lsr #10
    5c18:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    5c1c:	19051315 	stmdbne	r5, {r0, r2, r4, r8, r9, ip}
    5c20:	053c1703 	ldreq	r1, [ip, #-1795]!	; 0xfffff8fd
    5c24:	23053429 	movwcs	r3, #21545	; 0x5429
    5c28:	06050517 			; <UNDEFINED> instruction: 0x06050517
    5c2c:	00090213 	andeq	r0, r9, r3, lsl r2
    5c30:	01050101 	tsteq	r5, r1, lsl #2
    5c34:	80020500 	andhi	r0, r2, r0, lsl #10
    5c38:	0310002a 	tsteq	r0, #42	; 0x2a
    5c3c:	060128fc 			; <UNDEFINED> instruction: 0x060128fc
    5c40:	06420501 	strbeq	r0, [r2], -r1, lsl #10
    5c44:	1420052f 	strtne	r0, [r0], #-1327	; 0xfffffad1
    5c48:	10030505 	andne	r0, r3, r5, lsl #10
    5c4c:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    5c50:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5c54:	28053e06 	stmdacs	r5, {r1, r2, r9, sl, fp, ip, sp}
    5c58:	0601054c 	streq	r0, [r1], -ip, asr #10
    5c5c:	02022013 	andeq	r2, r2, #19
    5c60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5c64:	02050001 	andeq	r0, r5, #1
    5c68:	00000000 	andeq	r0, r0, r0
    5c6c:	01299a03 			; <UNDEFINED> instruction: 0x01299a03
    5c70:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    5c74:	20052f06 	andcs	r2, r5, r6, lsl #30
    5c78:	163f0514 			; <UNDEFINED> instruction: 0x163f0514
    5c7c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    5c80:	27062e2e 	strcs	r2, [r6, -lr, lsr #28]
    5c84:	01012001 	tsteq	r1, r1
    5c88:	3c3c3c2e 	ldccc	12, cr3, [ip], #-184	; 0xffffff48
    5c8c:	20062006 	andcs	r2, r6, r6
    5c90:	3105143c 	tstcc	r5, ip, lsr r4
    5c94:	0601054c 	streq	r0, [r1], -ip, asr #10
    5c98:	00040213 	andeq	r0, r4, r3, lsl r2
    5c9c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5ca0:	9c020500 	cfstr32ls	mvfx0, [r2], {-0}
    5ca4:	0310002a 	tsteq	r0, #42	; 0x2a
    5ca8:	060129ba 			; <UNDEFINED> instruction: 0x060129ba
    5cac:	06630501 	strbteq	r0, [r3], -r1, lsl #10
    5cb0:	1424053d 	strtne	r0, [r4], #-1341	; 0xfffffac3
    5cb4:	0c030905 			; <UNDEFINED> instruction: 0x0c030905
    5cb8:	01200101 			; <UNDEFINED> instruction: 0x01200101
    5cbc:	3c3c3c01 	ldccc	12, cr3, [ip], #-4
    5cc0:	0620063c 			; <UNDEFINED> instruction: 0x0620063c
    5cc4:	05173c20 	ldreq	r3, [r7, #-3104]	; 0xfffff3e0
    5cc8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5ccc:	3f05301a 	svccc	0x0005301a
    5cd0:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    5cd4:	30360513 	eorscc	r0, r6, r3, lsl r5
    5cd8:	13060505 	movwne	r0, #25861	; 0x6505
    5cdc:	01000302 	tsteq	r0, r2, lsl #6
    5ce0:	00010501 	andeq	r0, r1, r1, lsl #10
    5ce4:	2ad80205 	bcs	ff606500 <__StackTop+0xc7506500>
    5ce8:	dd031000 	stcle	0, cr1, [r3, #-0]
    5cec:	01060129 	tsteq	r6, r9, lsr #2
    5cf0:	21060505 	tstcs	r6, r5, lsl #10
    5cf4:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    5cf8:	12030505 	andne	r0, r3, #20971520	; 0x1400000
    5cfc:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    5d00:	20140501 	andscs	r0, r4, r1, lsl #10
    5d04:	21062305 	tstcs	r6, r5, lsl #6
    5d08:	01130505 	tsteq	r3, r5, lsl #10
    5d0c:	002e3c20 	eoreq	r3, lr, r0, lsr #24
    5d10:	58030402 	stmdapl	r3, {r1, sl}
    5d14:	03040200 	movweq	r0, #16896	; 0x4200
    5d18:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d1c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5d20:	05140304 	ldreq	r0, [r4, #-772]	; 0xfffffcfc
    5d24:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    5d28:	00010603 	andeq	r0, r1, r3, lsl #12
    5d2c:	20030402 	andcs	r0, r3, r2, lsl #8
    5d30:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    5d34:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    5d38:	01300609 	teqeq	r0, r9, lsl #12
    5d3c:	002e3c20 	eoreq	r3, lr, r0, lsr #24
    5d40:	4a030402 	bmi	c6d50 <__HEAP_SIZE+0xc5d50>
    5d44:	03040200 	movweq	r0, #16896	; 0x4200
    5d48:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d4c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5d50:	00130304 	andseq	r0, r3, r4, lsl #6
    5d54:	01030402 	tsteq	r3, r2, lsl #8
    5d58:	03040200 	movweq	r0, #16896	; 0x4200
    5d5c:	04020001 	streq	r0, [r2], #-1
    5d60:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5d64:	20060304 	andcs	r0, r6, r4, lsl #6
    5d68:	01040200 	mrseq	r0, R12_usr
    5d6c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    5d70:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5d74:	01030402 	tsteq	r3, r2, lsl #8
    5d78:	03040200 	movweq	r0, #16896	; 0x4200
    5d7c:	04020001 	streq	r0, [r2], #-1
    5d80:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    5d84:	00010304 	andeq	r0, r1, r4, lsl #6
    5d88:	01030402 	tsteq	r3, r2, lsl #8
    5d8c:	03040200 	movweq	r0, #16896	; 0x4200
    5d90:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5d94:	00200603 	eoreq	r0, r0, r3, lsl #12
    5d98:	06030402 	streq	r0, [r3], -r2, lsl #8
    5d9c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5da0:	02002003 	andeq	r2, r0, #3
    5da4:	00200304 	eoreq	r0, r0, r4, lsl #6
    5da8:	06030402 	streq	r0, [r3], -r2, lsl #8
    5dac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5db0:	00580603 	subseq	r0, r8, r3, lsl #12
    5db4:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5db8:	03040200 	movweq	r0, #16896	; 0x4200
    5dbc:	04020001 	streq	r0, [r2], #-1
    5dc0:	0d050103 	stfeqs	f0, [r5, #-12]
    5dc4:	03040200 	movweq	r0, #16896	; 0x4200
    5dc8:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    5dcc:	04020009 	streq	r0, [r2], #-9
    5dd0:	02003601 	andeq	r3, r0, #1048576	; 0x100000
    5dd4:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    5dd8:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    5ddc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5de0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    5de4:	0b052001 	bleq	14ddf0 <__RAM_SIZE+0x4ddf0>
    5de8:	01040200 	mrseq	r0, R12_usr
    5dec:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    5df0:	21051633 	tstcs	r5, r3, lsr r6
    5df4:	01050106 	tsteq	r5, r6, lsl #2
    5df8:	053c1a03 	ldreq	r1, [ip, #-2563]!	; 0xfffff5fd
    5dfc:	04020005 	streq	r0, [r2], #-5
    5e00:	bf030601 	svclt	0x00030601
    5e04:	0200207f 	andeq	r2, r0, #127	; 0x7f
    5e08:	3c060104 	stfccs	f0, [r6], {4}
    5e0c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5e10:	16060104 	strne	r0, [r6], -r4, lsl #2
    5e14:	01040200 	mrseq	r0, R12_usr
    5e18:	03063c06 	movweq	r3, #27654	; 0x6c06
    5e1c:	2e010115 	mcrcs	1, 0, r0, cr1, cr5, {0}
    5e20:	06200101 	strteq	r0, [r0], -r1, lsl #2
    5e24:	20200620 	eorcs	r0, r0, r0, lsr #12
    5e28:	20062020 	andcs	r2, r6, r0, lsr #32
    5e2c:	0315053c 	tsteq	r5, #60, 10	; 0xf000000
    5e30:	34050112 	strcc	r0, [r5], #-274	; 0xfffffeee
    5e34:	20140306 	andscs	r0, r4, r6, lsl #6
    5e38:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    5e3c:	0201060c 	andeq	r0, r1, #12, 12	; 0xc00000
    5e40:	0101000e 	tsteq	r1, lr
    5e44:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e48:	00000002 	andeq	r0, r0, r2
    5e4c:	2abb0300 	bcs	feec6a54 <__StackTop+0xc6dc6a54>
    5e50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5e54:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    5e58:	3f051450 	svccc	0x00051450
    5e5c:	15050516 	strne	r0, [r5, #-1302]	; 0xfffffaea
    5e60:	27062e06 	strcs	r2, [r6, -r6, lsl #28]
    5e64:	01061405 	tsteq	r6, r5, lsl #8
    5e68:	21062305 	tstcs	r6, r5, lsl #6
    5e6c:	01130505 	tsteq	r3, r5, lsl #10
    5e70:	003c3c20 	eorseq	r3, ip, r0, lsr #24
    5e74:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5e78:	03040200 	movweq	r0, #16896	; 0x4200
    5e7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5e80:	09053c03 	stmdbeq	r5, {r0, r1, sl, fp, ip, sp}
    5e84:	03040200 	movweq	r0, #16896	; 0x4200
    5e88:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    5e8c:	04020005 	streq	r0, [r2], #-5
    5e90:	02003503 	andeq	r3, r0, #12582912	; 0xc00000
    5e94:	00010304 	andeq	r0, r1, r4, lsl #6
    5e98:	20030402 	andcs	r0, r3, r2, lsl #8
    5e9c:	03040200 	movweq	r0, #16896	; 0x4200
    5ea0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5ea4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5ea8:	004a0304 	subeq	r0, sl, r4, lsl #6
    5eac:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5eb0:	03040200 	movweq	r0, #16896	; 0x4200
    5eb4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5eb8:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    5ebc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ec0:	01030402 	tsteq	r3, r2, lsl #8
    5ec4:	03040200 	movweq	r0, #16896	; 0x4200
    5ec8:	04020001 	streq	r0, [r2], #-1
    5ecc:	00200603 	eoreq	r0, r0, r3, lsl #12
    5ed0:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ed4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5ed8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5edc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ee0:	01030402 	tsteq	r3, r2, lsl #8
    5ee4:	03040200 	movweq	r0, #16896	; 0x4200
    5ee8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5eec:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5ef0:	00010304 	andeq	r0, r1, r4, lsl #6
    5ef4:	20030402 	andcs	r0, r3, r2, lsl #8
    5ef8:	03040200 	movweq	r0, #16896	; 0x4200
    5efc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5f00:	02002003 	andeq	r2, r0, #3
    5f04:	00200304 	eoreq	r0, r0, r4, lsl #6
    5f08:	06030402 	streq	r0, [r3], -r2, lsl #8
    5f0c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5f10:	00580603 	subseq	r0, r8, r3, lsl #12
    5f14:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5f18:	03040200 	movweq	r0, #16896	; 0x4200
    5f1c:	04020001 	streq	r0, [r2], #-1
    5f20:	09050103 	stmdbeq	r5, {r0, r1, r8}
    5f24:	03040200 	movweq	r0, #16896	; 0x4200
    5f28:	001b0516 	andseq	r0, fp, r6, lsl r5
    5f2c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5f30:	00360501 	eorseq	r0, r6, r1, lsl #10
    5f34:	20030402 	andcs	r0, r3, r2, lsl #8
    5f38:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    5f3c:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    5f40:	0534060d 	ldreq	r0, [r4, #-1549]!	; 0xfffff9f3
    5f44:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f48:	11030634 	tstne	r3, r4, lsr r6
    5f4c:	0601053c 			; <UNDEFINED> instruction: 0x0601053c
    5f50:	00050513 	andeq	r0, r5, r3, lsl r5
    5f54:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f58:	00205003 	eoreq	r5, r0, r3
    5f5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f60:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5f64:	13030601 	movwne	r0, #13825	; 0x3601
    5f68:	000b0201 	andeq	r0, fp, r1, lsl #4
    5f6c:	01050101 	tsteq	r5, r1, lsl #2
    5f70:	00020500 	andeq	r0, r2, r0, lsl #10
    5f74:	03000000 	movweq	r0, #0
    5f78:	06012b82 	streq	r2, [r1], -r2, lsl #23
    5f7c:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    5f80:	141e052f 	ldrne	r0, [lr], #-1327	; 0xfffffad1
    5f84:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    5f88:	23053009 	movwcs	r3, #20489	; 0x5009
    5f8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5f90:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
    5f94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f98:	27053e06 	strcs	r3, [r5, -r6, lsl #28]
    5f9c:	06010530 			; <UNDEFINED> instruction: 0x06010530
    5fa0:	05022013 	streq	r2, [r2, #-19]	; 0xffffffed
    5fa4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fa8:	02050001 	andeq	r0, r5, #1
    5fac:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
    5fb0:	012b9203 			; <UNDEFINED> instruction: 0x012b9203
    5fb4:	05133905 	ldreq	r3, [r3, #-2309]	; 0xfffff6fb
    5fb8:	1f051505 	svcne	0x00051505
    5fbc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5fc0:	20053d06 	andcs	r3, r5, r6, lsl #26
    5fc4:	2f050106 	svccs	0x00050106
    5fc8:	01053e06 	tsteq	r5, r6, lsl #28
    5fcc:	06021306 	streq	r1, [r2], -r6, lsl #6
    5fd0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fd4:	02050001 	andeq	r0, r5, #1
    5fd8:	10002bd4 	ldrdne	r2, [r0], -r4
    5fdc:	012b9f03 			; <UNDEFINED> instruction: 0x012b9f03
    5fe0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5fe4:	40053d06 	andmi	r3, r5, r6, lsl #26
    5fe8:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    5fec:	05132205 	ldreq	r2, [r3, #-517]	; 0xfffffdfb
    5ff0:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    5ff4:	061a0531 			; <UNDEFINED> instruction: 0x061a0531
    5ff8:	06090501 	streq	r0, [r9], -r1, lsl #10
    5ffc:	0644052f 	strbeq	r0, [r4], -pc, lsr #10
    6000:	201a0501 	andscs	r0, sl, r1, lsl #10
    6004:	23060d05 	movwcs	r0, #27909	; 0x6d05
    6008:	01061d05 	tsteq	r6, r5, lsl #26
    600c:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    6010:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    6014:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    6018:	05202e2e 	streq	r2, [r0, #-3630]!	; 0xfffff1d2
    601c:	052f0611 	streq	r0, [pc, #-1553]!	; 5a13 <__HEAP_SIZE+0x4a13>
    6020:	20010619 	andcs	r0, r1, r9, lsl r6
    6024:	03060505 	movweq	r0, #25861	; 0x6505
    6028:	30050127 	andcc	r0, r5, r7, lsr #2
    602c:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    6030:	13060105 	movwne	r0, #24837	; 0x6105
    6034:	03060d05 	movweq	r0, #27909	; 0x6d05
    6038:	11052e5a 	tstne	r5, sl, asr lr
    603c:	0f050106 	svceq	0x00050106
    6040:	06090520 	streq	r0, [r9], -r0, lsr #10
    6044:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    6048:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    604c:	3e052e0b 	cdpcc	14, 0, cr2, cr5, cr11, {0}
    6050:	01040200 	mrseq	r0, R12_usr
    6054:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    6058:	1c051335 	stcne	3, cr1, [r5], {53}	; 0x35
    605c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6060:	211c052d 	tstcs	ip, sp, lsr #10
    6064:	22060e05 	andcs	r0, r6, #5, 28	; 0x50
    6068:	01061005 	tsteq	r6, r5
    606c:	03060d05 	movweq	r0, #27909	; 0x6d05
    6070:	1c052e09 	stcne	14, cr2, [r5], {9}
    6074:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6078:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    607c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6080:	7903060d 	stmdbvc	r3, {r0, r2, r3, r9, sl}
    6084:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    6088:	060d0501 	streq	r0, [sp], -r1, lsl #10
    608c:	0620063d 			; <UNDEFINED> instruction: 0x0620063d
    6090:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    6094:	19052001 	stmdbne	r5, {r0, sp}
    6098:	20206c03 	eorcs	r6, r0, r3, lsl #24
    609c:	01000802 	tsteq	r0, r2, lsl #16
    60a0:	00010501 	andeq	r0, r1, r1, lsl #10
    60a4:	2c500205 	lfmcs	f0, 2, [r0], {5}
    60a8:	e3031000 	movw	r1, #12288	; 0x3000
    60ac:	2205012b 	andcs	r0, r5, #-1073741814	; 0xc000000a
    60b0:	15050513 	strne	r0, [r5, #-1299]	; 0xfffffaed
    60b4:	01062905 	tsteq	r6, r5, lsl #18
    60b8:	3e062305 	cdpcc	3, 0, cr2, cr6, cr5, {0}
    60bc:	13060105 	movwne	r0, #24837	; 0x6105
    60c0:	01000302 	tsteq	r0, r2, lsl #6
    60c4:	00050501 	andeq	r0, r5, r1, lsl #10
    60c8:	2c5c0205 	lfmcs	f0, 2, [ip], {5}
    60cc:	fc031000 	stc2	0, cr1, [r3], {-0}
    60d0:	0d05012d 	stfeqs	f0, [r5, #-180]	; 0xffffff4c
    60d4:	15090515 	strne	r0, [r9, #-1301]	; 0xfffffaeb
    60d8:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    60dc:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    60e0:	0b050106 	bleq	146500 <__RAM_SIZE+0x46500>
    60e4:	060e052e 	streq	r0, [lr], -lr, lsr #10
    60e8:	06200525 	strteq	r0, [r0], -r5, lsr #10
    60ec:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    60f0:	25060e05 	strcs	r0, [r6, #-3589]	; 0xfffff1fb
    60f4:	01061f05 	tsteq	r6, r5, lsl #30
    60f8:	052e1005 	streq	r1, [lr, #-5]!
    60fc:	05280612 	streq	r0, [r8, #-1554]!	; 0xfffff9ee
    6100:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6104:	14052e61 	strne	r2, [r5], #-3681	; 0xfffff19f
    6108:	031a053c 	tsteq	sl, #60, 10	; 0xf000000
    610c:	15052e68 	strne	r2, [r5, #-3688]	; 0xfffff198
    6110:	332e0903 			; <UNDEFINED> instruction: 0x332e0903
    6114:	03190534 	tsteq	r9, #52, 10	; 0xd000000
    6118:	25052e0a 	strcs	r2, [r5, #-3594]	; 0xfffff1f6
    611c:	3b052506 	blcc	14f53c <__RAM_SIZE+0x4f53c>
    6120:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    6124:	13060505 	movwne	r0, #25861	; 0x6505
    6128:	01000b02 	tsteq	r0, r2, lsl #22
    612c:	00050501 	andeq	r0, r5, r1, lsl #10
    6130:	00000205 	andeq	r0, r0, r5, lsl #4
    6134:	e3030000 	movw	r0, #12288	; 0x3000
    6138:	01060131 	tsteq	r6, r1, lsr r1
    613c:	21060905 	tstcs	r6, r5, lsl #18
    6140:	38051313 	stmdacc	r5, {r0, r1, r4, r8, r9, ip}
    6144:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6148:	01061105 	tsteq	r6, r5, lsl #2
    614c:	02000d05 	andeq	r0, r0, #320	; 0x140
    6150:	32060404 	andcc	r0, r6, #4, 8	; 0x4000000
    6154:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6158:	051a0404 	ldreq	r0, [sl, #-1028]	; 0xfffffbfc
    615c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    6160:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6164:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6168:	053e0604 	ldreq	r0, [lr, #-1540]!	; 0xfffff9fc
    616c:	04020009 	streq	r0, [r2], #-9
    6170:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    6174:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6178:	11051306 	tstne	r5, r6, lsl #6
    617c:	01040200 	mrseq	r0, R12_usr
    6180:	00206f03 	eoreq	r6, r0, r3, lsl #30
    6184:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6188:	01000302 	tsteq	r0, r2, lsl #6
    618c:	00090501 	andeq	r0, r9, r1, lsl #10
    6190:	00000205 	andeq	r0, r0, r5, lsl #4
    6194:	d0030000 	andle	r0, r3, r0
    6198:	0d050132 	stfeqs	f0, [r5, #-200]	; 0xffffff38
    619c:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    61a0:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    61a4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    61a8:	0530063d 	ldreq	r0, [r0, #-1597]!	; 0xfffff9c3
    61ac:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    61b0:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    61b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    61b8:	02050005 	andeq	r0, r5, #5
    61bc:	00000000 	andeq	r0, r0, r0
    61c0:	0132f303 	teqeq	r2, r3, lsl #6	; <UNPREDICTABLE>
    61c4:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    61c8:	0905143f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, sl, ip}
    61cc:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    61d0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    61d4:	06190523 	ldreq	r0, [r9], -r3, lsr #10
    61d8:	16052e01 	strne	r2, [r5], -r1, lsl #28
    61dc:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    61e0:	0d030640 	stceq	6, cr0, [r3, #-256]	; 0xffffff00
    61e4:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    61e8:	13060505 	movwne	r0, #25861	; 0x6505
    61ec:	01000302 	tsteq	r0, r2, lsl #6
    61f0:	00050501 	andeq	r0, r5, r1, lsl #10
    61f4:	00000205 	andeq	r0, r0, r5, lsl #4
    61f8:	8c030000 	stchi	0, cr0, [r3], {-0}
    61fc:	09050133 	stmdbeq	r5, {r0, r1, r4, r5, r8}
    6200:	142c0513 	strtne	r0, [ip], #-1299	; 0xfffffaed
    6204:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6208:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    620c:	11052e0b 	tstne	r5, fp, lsl #28
    6210:	200a0306 	andcs	r0, sl, r6, lsl #6
    6214:	01062a05 	tsteq	r6, r5, lsl #20
    6218:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    621c:	3605261d 			; <UNDEFINED> instruction: 0x3605261d
    6220:	09052806 	stmdbeq	r5, {r1, r2, fp, sp}
    6224:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6228:	031d0513 	tsteq	sp, #79691776	; 0x4c00000
    622c:	15052071 	strne	r2, [r5, #-113]	; 0xffffff8f
    6230:	022e7603 	eoreq	r7, lr, #3145728	; 0x300000
    6234:	01010006 	tsteq	r1, r6
    6238:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    623c:	00000002 	andeq	r0, r0, r2
    6240:	33b40300 			; <UNDEFINED> instruction: 0x33b40300
    6244:	13090501 	movwne	r0, #38145	; 0x9501
    6248:	14390513 	ldrtne	r0, [r9], #-1299	; 0xfffffaed
    624c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    6250:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6254:	2e780305 	cdpcs	3, 7, cr0, cr8, cr5, {0}
    6258:	03060d05 	movweq	r0, #27909	; 0x6d05
    625c:	21052e0d 	tstcs	r5, sp, lsl #28
    6260:	3c050106 	stfccs	f0, [r5], {6}
    6264:	3c0f0520 	cfstr32cc	mvfx0, [pc], {32}
    6268:	33061105 	movwcc	r1, #24837	; 0x6105
    626c:	01061705 	tsteq	r6, r5, lsl #14
    6270:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    6274:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    6278:	11056a2d 	tstne	r5, sp, lsr #20
    627c:	06150517 			; <UNDEFINED> instruction: 0x06150517
    6280:	66130501 	ldrvs	r0, [r3], -r1, lsl #10
    6284:	03061505 	movweq	r1, #25861	; 0x6505
    6288:	40052e1f 	andmi	r2, r5, pc, lsl lr
    628c:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    6290:	2619053c 			; <UNDEFINED> instruction: 0x2619053c
    6294:	1d030505 	cfstr32ne	mvfx0, [r3, #-20]	; 0xffffffec
    6298:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    629c:	05204003 	streq	r4, [r0, #-3]!
    62a0:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    62a4:	03063105 	movweq	r3, #24837	; 0x6105
    62a8:	15052e09 	strne	r2, [r5, #-3593]	; 0xfffff1f7
    62ac:	06400516 			; <UNDEFINED> instruction: 0x06400516
    62b0:	3c320501 	cfldr32cc	mvfx0, [r2], #-4
    62b4:	21061505 	tstcs	r6, r5, lsl #10
    62b8:	00010101 	andeq	r0, r1, r1, lsl #2
    62bc:	4a010402 	bmi	472cc <__HEAP_SIZE+0x462cc>
    62c0:	03040200 	movweq	r0, #16896	; 0x4200
    62c4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    62c8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    62cc:	00010304 	andeq	r0, r1, r4, lsl #6
    62d0:	66030402 	strvs	r0, [r3], -r2, lsl #8
    62d4:	03040200 	movweq	r0, #16896	; 0x4200
    62d8:	04020001 	streq	r0, [r2], #-1
    62dc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    62e0:	00200304 	eoreq	r0, r0, r4, lsl #6
    62e4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    62e8:	03040200 	movweq	r0, #16896	; 0x4200
    62ec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    62f0:	02002003 	andeq	r2, r0, #3
    62f4:	20060304 	andcs	r0, r6, r4, lsl #6
    62f8:	03040200 	movweq	r0, #16896	; 0x4200
    62fc:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6300:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6304:	01030402 	tsteq	r3, r2, lsl #8
    6308:	03040200 	movweq	r0, #16896	; 0x4200
    630c:	00190501 	andseq	r0, r9, r1, lsl #10
    6310:	06030402 	streq	r0, [r3], -r2, lsl #8
    6314:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    6318:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    631c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    6320:	13052044 	movwne	r2, #20548	; 0x5044
    6324:	0314053c 	tsteq	r4, #60, 10	; 0xf000000
    6328:	202e7fbc 	strhtcs	r7, [lr], -ip
    632c:	03050520 	movweq	r0, #21792	; 0x5520
    6330:	052000dd 	streq	r0, [r0, #-221]!	; 0xffffff23
    6334:	2070031d 	rsbscs	r0, r0, sp, lsl r3
    6338:	03062505 	movweq	r2, #25861	; 0x6505
    633c:	3405200a 	strcc	r2, [r5], #-10
    6340:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    6344:	01061005 	tsteq	r6, r5
    6348:	01000802 	tsteq	r0, r2, lsl #16
    634c:	00050501 	andeq	r0, r5, r1, lsl #10
    6350:	2ca40205 	sfmcs	f0, 4, [r4], #20
    6354:	9b031000 	blls	ca35c <__HEAP_SIZE+0xc935c>
    6358:	09050134 	stmdbeq	r5, {r2, r4, r5, r8}
    635c:	3c051313 	stccc	3, cr1, [r5], {19}
    6360:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6364:	01060b05 	tsteq	r6, r5, lsl #22
    6368:	7a030505 	bvc	c7784 <__HEAP_SIZE+0xc6784>
    636c:	0632052e 	ldrteq	r0, [r2], -lr, lsr #10
    6370:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    6374:	0d051331 	stceq	3, cr1, [r5, #-196]	; 0xffffff3c
    6378:	06140513 			; <UNDEFINED> instruction: 0x06140513
    637c:	20250501 	eorcs	r0, r5, r1, lsl #10
    6380:	32060d05 	andcc	r0, r6, #320	; 0x140
    6384:	01061605 	tsteq	r6, r5, lsl #12
    6388:	05202b05 	streq	r2, [r0, #-2821]!	; 0xfffff4fb
    638c:	1105200f 	tstne	r5, pc
    6390:	13053106 	movwne	r3, #20742	; 0x5106
    6394:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    6398:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    639c:	ce030625 	cfmadd32gt	mvax1, mvfx0, mvfx3, mvfx5
    63a0:	37052000 	strcc	r2, [r5, -r0]
    63a4:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    63a8:	13060505 	movwne	r0, #25861	; 0x6505
    63ac:	03061505 	movweq	r1, #25861	; 0x6505
    63b0:	19052046 	stmdbne	r5, {r1, r2, r6, sp}
    63b4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    63b8:	05340631 	ldreq	r0, [r4, #-1585]!	; 0xfffff9cf
    63bc:	15051752 	strne	r1, [r5, #-1874]	; 0xfffff8ae
    63c0:	062e0513 			; <UNDEFINED> instruction: 0x062e0513
    63c4:	20270501 	eorcs	r0, r7, r1, lsl #10
    63c8:	25061505 	strcs	r1, [r6, #-1285]	; 0xfffffafb
    63cc:	0101013d 	tsteq	r1, sp, lsr r1
    63d0:	01040200 	mrseq	r0, R12_usr
    63d4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    63d8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    63dc:	00010304 	andeq	r0, r1, r4, lsl #6
    63e0:	01030402 	tsteq	r3, r2, lsl #8
    63e4:	03040200 	movweq	r0, #16896	; 0x4200
    63e8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    63ec:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    63f0:	00010304 	andeq	r0, r1, r4, lsl #6
    63f4:	20030402 	andcs	r0, r3, r2, lsl #8
    63f8:	03040200 	movweq	r0, #16896	; 0x4200
    63fc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6400:	02002003 	andeq	r2, r0, #3
    6404:	00200304 	eoreq	r0, r0, r4, lsl #6
    6408:	06030402 	streq	r0, [r3], -r2, lsl #8
    640c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6410:	00580603 	subseq	r0, r8, r3, lsl #12
    6414:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6418:	03040200 	movweq	r0, #16896	; 0x4200
    641c:	04020001 	streq	r0, [r2], #-1
    6420:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6424:	14030304 	strne	r0, [r3], #-772	; 0xfffffcfc
    6428:	001d0501 	andseq	r0, sp, r1, lsl #10
    642c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6430:	03140501 	tsteq	r4, #4194304	; 0x400000
    6434:	05052e40 	streq	r2, [r5, #-3648]	; 0xfffff1c0
    6438:	2000d403 	andcs	sp, r0, r3, lsl #8
    643c:	ac031405 	cfstrsge	mvf1, [r3], {5}
    6440:	0220207f 	eoreq	r2, r0, #127	; 0x7f
    6444:	01010006 	tsteq	r1, r6
    6448:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    644c:	00000002 	andeq	r0, r0, r2
    6450:	34fa0300 	ldrbtcc	r0, [sl], #768	; 0x300
    6454:	13090501 	movwne	r0, #38145	; 0x9501
    6458:	66051313 			; <UNDEFINED> instruction: 0x66051313
    645c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6460:	01060b05 	tsteq	r6, r5, lsl #22
    6464:	79030505 	stmdbvc	r3, {r0, r2, r8, sl}
    6468:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    646c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    6470:	1605180d 	strne	r1, [r5], -sp, lsl #16
    6474:	0f050106 	svceq	0x00050106
    6478:	30210520 	eorcc	r0, r1, r0, lsr #10
    647c:	28060d05 	stmdacs	r6, {r0, r2, r8, sl, fp}
    6480:	01061605 	tsteq	r6, r5, lsl #12
    6484:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    6488:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    648c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6490:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
    6494:	2e00ce03 	cdpcs	14, 0, cr12, cr0, cr3, {0}
    6498:	03063a05 	movweq	r3, #27141	; 0x6a05
    649c:	05207fb7 	streq	r7, [r0, #-4023]!	; 0xfffff049
    64a0:	1505174c 	strne	r1, [r5, #-1868]	; 0xfffff8b4
    64a4:	27051313 	smladcs	r5, r3, r3, r1
    64a8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    64ac:	1b052406 	blne	14f4cc <__RAM_SIZE+0x4f4cc>
    64b0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    64b4:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    64b8:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    64bc:	05240631 	streq	r0, [r4, #-1585]!	; 0xfffff9cf
    64c0:	01090315 	tsteq	r9, r5, lsl r3
    64c4:	01061905 	tsteq	r6, r5, lsl #18
    64c8:	3c17053c 	cfldr32cc	mvfx0, [r7], {60}	; 0x3c
    64cc:	30061905 	andcc	r1, r6, r5, lsl #18
    64d0:	01061d05 	tsteq	r6, r5, lsl #26
    64d4:	0635052e 	ldrteq	r0, [r5], -lr, lsr #10
    64d8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    64dc:	01011519 	tsteq	r1, r9, lsl r5
    64e0:	04020001 	streq	r0, [r2], #-1
    64e4:	02005801 	andeq	r5, r0, #65536	; 0x10000
    64e8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    64ec:	01030402 	tsteq	r3, r2, lsl #8
    64f0:	03040200 	movweq	r0, #16896	; 0x4200
    64f4:	04020001 	streq	r0, [r2], #-1
    64f8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    64fc:	00010304 	andeq	r0, r1, r4, lsl #6
    6500:	01030402 	tsteq	r3, r2, lsl #8
    6504:	03040200 	movweq	r0, #16896	; 0x4200
    6508:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    650c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6510:	00200304 	eoreq	r0, r0, r4, lsl #6
    6514:	20030402 	andcs	r0, r3, r2, lsl #8
    6518:	03040200 	movweq	r0, #16896	; 0x4200
    651c:	02002006 	andeq	r2, r0, #6
    6520:	58060304 	stmdapl	r6, {r2, r8, r9}
    6524:	03040200 	movweq	r0, #16896	; 0x4200
    6528:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    652c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6530:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    6534:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    6538:	011d0303 	tsteq	sp, r3, lsl #6
    653c:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    6540:	05150304 	ldreq	r0, [r5, #-772]	; 0xfffffcfc
    6544:	04020005 	streq	r0, [r2], #-5
    6548:	00130603 	andseq	r0, r3, r3, lsl #12
    654c:	20030402 	andcs	r0, r3, r2, lsl #8
    6550:	01000602 	tsteq	r0, r2, lsl #12
    6554:	00010501 	andeq	r0, r1, r1, lsl #10
    6558:	00000205 	andeq	r0, r0, r5, lsl #4
    655c:	91030000 	mrsls	r0, (UNDEF: 3)
    6560:	0505013b 	streq	r0, [r5, #-315]	; 0xfffffec5
    6564:	142b0513 	strtne	r0, [fp], #-1299	; 0xfffffaed
    6568:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    656c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6570:	05052e0e 	streq	r2, [r5, #-3598]	; 0xfffff1f2
    6574:	36052406 	strcc	r2, [r5], -r6, lsl #8
    6578:	14050568 	strne	r0, [r5], #-1384	; 0xfffffa98
    657c:	13060105 	movwne	r0, #24837	; 0x6105
    6580:	01000302 	tsteq	r0, r2, lsl #6
    6584:	00050501 	andeq	r0, r5, r1, lsl #10
    6588:	00000205 	andeq	r0, r0, r5, lsl #4
    658c:	a5030000 	strge	r0, [r3, #-0]
    6590:	0905013b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r8}
    6594:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    6598:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    659c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    65a0:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    65a4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    65a8:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    65ac:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    65b0:	3b052025 	blcc	14e64c <__RAM_SIZE+0x4e64c>
    65b4:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    65b8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    65bc:	00040213 	andeq	r0, r4, r3, lsl r2
    65c0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    65c4:	00020500 	andeq	r0, r2, r0, lsl #10
    65c8:	03000000 	movweq	r0, #0
    65cc:	06013bc0 	streq	r3, [r1], -r0, asr #23
    65d0:	06090501 	streq	r0, [r9], -r1, lsl #10
    65d4:	5f05134b 	svcpl	0x0005134b
    65d8:	14500514 	ldrbne	r0, [r0], #-1300	; 0xfffffaec
    65dc:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    65e0:	1105340d 	tstne	r5, sp, lsl #8
    65e4:	06210531 			; <UNDEFINED> instruction: 0x06210531
    65e8:	2e320501 	cdpcs	5, 3, cr0, cr2, cr1, {0}
    65ec:	05581305 	ldrbeq	r1, [r8, #-773]	; 0xfffffcfb
    65f0:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    65f4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    65f8:	15052e44 	strne	r2, [r5, #-3652]	; 0xfffff1bc
    65fc:	17054c06 	strne	r4, [r5, -r6, lsl #24]
    6600:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    6604:	200b0306 	andcs	r0, fp, r6, lsl #6
    6608:	33150d05 	tstcc	r5, #320	; 0x140
    660c:	05192905 	ldreq	r2, [r9, #-2309]	; 0xfffff6fb
    6610:	1b051509 	blne	14ba3c <__RAM_SIZE+0x4ba3c>
    6614:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6618:	0b053106 	bleq	152a38 <__RAM_SIZE+0x52a38>
    661c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6620:	09052606 	stmdbeq	r5, {r1, r2, r9, sl, sp}
    6624:	30350515 	eorscc	r0, r5, r5, lsl r5
    6628:	05130d05 	ldreq	r0, [r3, #-3333]	; 0xfffff2fb
    662c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    6630:	0d052e16 	stceq	14, cr2, [r5, #-88]	; 0xffffffa8
    6634:	0f055a06 	svceq	0x00055a06
    6638:	11050106 	tstne	r5, r6, lsl #2
    663c:	13052206 	movwne	r2, #20998	; 0x5206
    6640:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6644:	21052206 	tstcs	r5, r6, lsl #4
    6648:	46050106 	strmi	r0, [r5], -r6, lsl #2
    664c:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    6650:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    6654:	1905150d 	stmdbne	r5, {r0, r2, r3, r8, sl, ip}
    6658:	3c050106 	stfccs	f0, [r5], {6}
    665c:	0905202e 	stmdbeq	r5, {r1, r2, r3, r5, sp}
    6660:	38053e06 	stmdacc	r5, {r1, r2, r9, sl, fp, ip, sp}
    6664:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    6668:	13060505 	movwne	r0, #25861	; 0x6505
    666c:	03062d05 	movweq	r2, #27909	; 0x6d05
    6670:	0d052e46 	stceq	14, cr2, [r5, #-280]	; 0xfffffee8
    6674:	25053315 	strcs	r3, [r5, #-789]	; 0xfffffceb
    6678:	01570306 	cmpeq	r7, r6, lsl #6
    667c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    6680:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    6684:	0109032d 	tsteq	r9, sp, lsr #6
    6688:	33150d05 	tstcc	r5, #320	; 0x140
    668c:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    6690:	26051311 			; <UNDEFINED> instruction: 0x26051311
    6694:	4a6c0306 	bmi	1b072b4 <__RAM_SIZE+0x1a072b4>
    6698:	00280520 	eoreq	r0, r8, r0, lsr #10
    669c:	03010402 	movweq	r0, #5122	; 0x1402
    66a0:	0d05201e 	stceq	0, cr2, [r5, #-120]	; 0xffffff88
    66a4:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    66a8:	03061505 	movweq	r1, #25861	; 0x6505
    66ac:	21052014 	tstcs	r5, r4, lsl r0
    66b0:	51050106 	tstpl	r5, r6, lsl #2
    66b4:	2046052e 	subcs	r0, r6, lr, lsr #10
    66b8:	01000902 	tsteq	r0, r2, lsl #18
    66bc:	00050501 	andeq	r0, r5, r1, lsl #10
    66c0:	00000205 	andeq	r0, r0, r5, lsl #4
    66c4:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    66c8:	0106013c 	tsteq	r6, ip, lsr r1
    66cc:	75060905 	strvc	r0, [r6, #-2309]	; 0xfffff6fb
    66d0:	14018c05 	strne	r8, [r1], #-3077	; 0xfffff3fb
    66d4:	05145005 	ldreq	r5, [r4, #-5]
    66d8:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    66dc:	31110533 	tstcc	r1, r3, lsr r5
    66e0:	01062105 	tsteq	r6, r5, lsl #2
    66e4:	052e3005 	streq	r3, [lr, #-5]!
    66e8:	15054a13 	strne	r4, [r5, #-2579]	; 0xfffff5ed
    66ec:	46053306 	strmi	r3, [r5], -r6, lsl #6
    66f0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    66f4:	2105a106 	tstcs	r5, r6, lsl #2
    66f8:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    66fc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6700:	0617054c 	ldreq	r0, [r7], -ip, asr #10
    6704:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    6708:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    670c:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    6710:	09051929 	stmdbeq	r5, {r0, r3, r5, r8, fp, ip}
    6714:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    6718:	06090501 	streq	r0, [r9], -r1, lsl #10
    671c:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    6720:	06250501 	strteq	r0, [r5], -r1, lsl #10
    6724:	15090526 	strne	r0, [r9, #-1318]	; 0xfffffada
    6728:	05303505 	ldreq	r3, [r0, #-1285]!	; 0xfffffafb
    672c:	0f05140d 	svceq	0x0005140d
    6730:	11050106 	tstne	r5, r6, lsl #2
    6734:	35052406 	strcc	r2, [r5, #-1030]	; 0xfffffbfa
    6738:	46050106 	strmi	r0, [r5], -r6, lsl #2
    673c:	5827052e 	stmdapl	r7!, {r1, r2, r3, r5, r8, sl}
    6740:	27060d05 	strcs	r0, [r6, -r5, lsl #26]
    6744:	01061d05 	tsteq	r6, r5, lsl #26
    6748:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    674c:	19054a0f 	stmdbne	r5, {r0, r1, r2, r3, r9, fp, lr}
    6750:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
    6754:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    6758:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    675c:	05202e3c 	streq	r2, [r0, #-3644]!	; 0xfffff1c4
    6760:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    6764:	09053036 	stmdbeq	r5, {r1, r2, r4, r5, ip, sp}
    6768:	06050514 			; <UNDEFINED> instruction: 0x06050514
    676c:	062d0513 			; <UNDEFINED> instruction: 0x062d0513
    6770:	3c7fbf03 	ldclcc	15, cr11, [pc], #-12	; 676c <__HEAP_SIZE+0x576c>
    6774:	33150d05 	tstcc	r5, #320	; 0x140
    6778:	03062e05 	movweq	r2, #28165	; 0x6e05
    677c:	19050153 	stmdbne	r5, {r0, r1, r4, r6, r8}
    6780:	2e1c0306 	cdpcs	3, 1, cr0, cr12, cr6, {0}
    6784:	09032d05 	stmdbeq	r3, {r0, r2, r8, sl, fp, sp}
    6788:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    678c:	143f0533 	ldrtne	r0, [pc], #-1331	; 6794 <__HEAP_SIZE+0x5794>
    6790:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    6794:	6c030626 	stcvs	6, cr0, [r3], {38}	; 0x26
    6798:	0028054a 	eoreq	r0, r8, sl, asr #10
    679c:	03010402 	movweq	r0, #5122	; 0x1402
    67a0:	0d052e1e 	stceq	14, cr2, [r5, #-120]	; 0xffffff88
    67a4:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    67a8:	03061105 	movweq	r1, #24837	; 0x6105
    67ac:	4205201f 	andmi	r2, r5, #31
    67b0:	05900106 	ldreq	r0, [r0, #262]	; 0x106
    67b4:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    67b8:	20010619 	andcs	r0, r1, r9, lsl r6
    67bc:	01000302 	tsteq	r0, r2, lsl #6
    67c0:	00050501 	andeq	r0, r5, r1, lsl #10
    67c4:	00000205 	andeq	r0, r0, r5, lsl #4
    67c8:	9c030000 	stcls	0, cr0, [r3], {-0}
    67cc:	0106013d 	tsteq	r6, sp, lsr r1
    67d0:	83060905 	movwhi	r0, #26885	; 0x6905
    67d4:	78051313 	stmdavc	r5, {r0, r1, r4, r8, r9, ip}
    67d8:	14500514 	ldrbne	r0, [r0], #-1300	; 0xfffffaec
    67dc:	05132605 	ldreq	r2, [r3, #-1541]	; 0xfffff9fb
    67e0:	05141309 	ldreq	r1, [r4, #-777]	; 0xfffffcf7
    67e4:	0f05300d 	svceq	0x0005300d
    67e8:	11050106 	tstne	r5, r6, lsl #2
    67ec:	47053e06 	strmi	r3, [r5, -r6, lsl #28]
    67f0:	2f050106 	svccs	0x00050106
    67f4:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    67f8:	06230531 			; <UNDEFINED> instruction: 0x06230531
    67fc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6800:	0635054c 	ldrteq	r0, [r5], -ip, asr #10
    6804:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6808:	7715053e 			; <UNDEFINED> instruction: 0x7715053e
    680c:	01063f05 	tsteq	r6, r5, lsl #30
    6810:	052e2e20 	streq	r2, [lr, #-3616]!	; 0xfffff1e0
    6814:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    6818:	68030614 	stmdavs	r3, {r2, r4, r9, sl}
    681c:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    6820:	2000c003 	andcs	ip, r0, r3
    6824:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    6828:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    682c:	1e030629 	cfmadd32ne	mvax1, mvfx0, mvfx3, mvfx9
    6830:	1509052e 	strne	r0, [r9, #-1326]	; 0xfffffad2
    6834:	05303205 	ldreq	r3, [r0, #-517]!	; 0xfffffdfb
    6838:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    683c:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    6840:	7fb10306 	svcvc	0x00b10306
    6844:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    6848:	052e2001 	streq	r2, [lr, #-1]!
    684c:	15052042 	strne	r2, [r5, #-66]	; 0xffffffbe
    6850:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    6854:	01640306 	cmneq	r4, r6, lsl #6
    6858:	1c031505 	cfstr32ne	mvfx1, [r3], {5}
    685c:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    6860:	2001063f 	andcs	r0, r1, pc, lsr r6
    6864:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6868:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    686c:	05016003 	streq	r6, [r1, #-3]
    6870:	20200315 	eorcs	r0, r0, r5, lsl r3
    6874:	17052406 	strne	r2, [r5, -r6, lsl #8]
    6878:	19050106 	stmdbne	r5, {r1, r2, r8}
    687c:	43053006 	movwmi	r3, #20486	; 0x5006
    6880:	2e200106 	sufcss	f0, f0, f6
    6884:	5a031405 	bpl	cb8a0 <__HEAP_SIZE+0xca8a0>
    6888:	030d0520 	movweq	r0, #54560	; 0xd520
    688c:	05202e14 	streq	r2, [r0, #-3604]!	; 0xfffff1ec
    6890:	20170321 	andscs	r0, r7, r1, lsr #6
    6894:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6898:	01201b03 			; <UNDEFINED> instruction: 0x01201b03
    689c:	003c3c20 	eorseq	r3, ip, r0, lsr #24
    68a0:	4a030402 	bmi	c78b0 <__HEAP_SIZE+0xc68b0>
    68a4:	03040200 	movweq	r0, #16896	; 0x4200
    68a8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    68ac:	02003c03 	andeq	r3, r0, #768	; 0x300
    68b0:	00130304 	andseq	r0, r3, r4, lsl #6
    68b4:	01030402 	tsteq	r3, r2, lsl #8
    68b8:	03040200 	movweq	r0, #16896	; 0x4200
    68bc:	04020001 	streq	r0, [r2], #-1
    68c0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    68c4:	20060304 	andcs	r0, r6, r4, lsl #6
    68c8:	01040200 	mrseq	r0, R12_usr
    68cc:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    68d0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    68d4:	01030402 	tsteq	r3, r2, lsl #8
    68d8:	03040200 	movweq	r0, #16896	; 0x4200
    68dc:	04020001 	streq	r0, [r2], #-1
    68e0:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    68e4:	00010304 	andeq	r0, r1, r4, lsl #6
    68e8:	01030402 	tsteq	r3, r2, lsl #8
    68ec:	03040200 	movweq	r0, #16896	; 0x4200
    68f0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    68f4:	00200603 	eoreq	r0, r0, r3, lsl #12
    68f8:	06030402 	streq	r0, [r3], -r2, lsl #8
    68fc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6900:	02002003 	andeq	r2, r0, #3
    6904:	00200304 	eoreq	r0, r0, r4, lsl #6
    6908:	06030402 	streq	r0, [r3], -r2, lsl #8
    690c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6910:	00580603 	subseq	r0, r8, r3, lsl #12
    6914:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6918:	03040200 	movweq	r0, #16896	; 0x4200
    691c:	04020001 	streq	r0, [r2], #-1
    6920:	5e050103 	adfpls	f0, f5, f3
    6924:	03040200 	movweq	r0, #16896	; 0x4200
    6928:	00150515 	andseq	r0, r5, r5, lsl r5
    692c:	03030402 	movweq	r0, #13314	; 0x3402
    6930:	1105010e 	tstne	r5, lr, lsl #2
    6934:	03040200 	movweq	r0, #16896	; 0x4200
    6938:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    693c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6940:	00660104 	rsbeq	r0, r6, r4, lsl #2
    6944:	03010402 	movweq	r0, #5122	; 0x1402
    6948:	0a023c68 	beq	95af0 <__HEAP_SIZE+0x94af0>
    694c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6950:	02050005 	andeq	r0, r5, #5
    6954:	00000000 	andeq	r0, r0, r0
    6958:	013e9503 	teqeq	lr, r3, lsl #10
    695c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6960:	13138306 	tstne	r3, #402653184	; 0x18000000
    6964:	019a0513 	orrseq	r0, sl, r3, lsl r5
    6968:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    696c:	05135005 	ldreq	r5, [r3, #-5]
    6970:	01120333 	tsteq	r2, r3, lsr r3
    6974:	17140905 	ldrne	r0, [r4, -r5, lsl #18]
    6978:	01063205 	tsteq	r6, r5, lsl #4
    697c:	30060d05 	andcc	r0, r6, r5, lsl #26
    6980:	01060f05 	tsteq	r6, r5, lsl #30
    6984:	3e061105 	adfccs	f1, f6, f5
    6988:	01064705 	tsteq	r6, r5, lsl #14
    698c:	05582f05 	ldrbeq	r2, [r8, #-3845]	; 0xfffff0fb
    6990:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    6994:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    6998:	0559060d 	ldrbeq	r0, [r9, #-1549]	; 0xfffff9f3
    699c:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    69a0:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    69a4:	3f057715 	svccc	0x00057715
    69a8:	2e200106 	sufcss	f0, f0, f6
    69ac:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    69b0:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    69b4:	05015303 	streq	r5, [r1, #-771]	; 0xfffffcfd
    69b8:	d4030639 	strle	r0, [r3], #-1593	; 0xfffff9c7
    69bc:	0d052000 	stceq	0, cr2, [r5, #-0]
    69c0:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    69c4:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    69c8:	053c2303 	ldreq	r2, [ip, #-771]!	; 0xfffffcfd
    69cc:	01160309 	tsteq	r6, r9, lsl #6
    69d0:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    69d4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    69d8:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    69dc:	7f9a0306 	svcvc	0x009a0306
    69e0:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    69e4:	052e2001 	streq	r2, [lr, #-1]!
    69e8:	15052042 	strne	r2, [r5, #-66]	; 0xffffffbe
    69ec:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    69f0:	014f0306 	cmpeq	pc, r6, lsl #6
    69f4:	31031505 	tstcc	r3, r5, lsl #10
    69f8:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    69fc:	2001063f 	andcs	r0, r1, pc, lsr r6
    6a00:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6a04:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    6a08:	05014b03 	streq	r4, [r1, #-2819]	; 0xfffff4fd
    6a0c:	20350315 	eorscs	r0, r5, r5, lsl r3
    6a10:	17052406 	strne	r2, [r5, -r6, lsl #8]
    6a14:	19050106 	stmdbne	r5, {r1, r2, r8}
    6a18:	43053e06 	movwmi	r3, #24070	; 0x5e06
    6a1c:	2e200106 	sufcss	f0, f0, f6
    6a20:	45031405 	strmi	r1, [r3, #-1029]	; 0xfffffbfb
    6a24:	030d0520 	movweq	r0, #54560	; 0xd520
    6a28:	05202e29 	streq	r2, [r0, #-3625]!	; 0xfffff1d7
    6a2c:	20170321 	andscs	r0, r7, r1, lsr #6
    6a30:	065e0520 	ldrbeq	r0, [lr], -r0, lsr #10
    6a34:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
    6a38:	2a051411 	bcs	14ba84 <__RAM_SIZE+0x4ba84>
    6a3c:	13050106 	movwne	r0, #20742	; 0x5106
    6a40:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6a44:	3c200130 	stfccs	f0, [r0], #-192	; 0xffffff40
    6a48:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6a4c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6a50:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6a54:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6a58:	03040200 	movweq	r0, #16896	; 0x4200
    6a5c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6a60:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a64:	00010304 	andeq	r0, r1, r4, lsl #6
    6a68:	01030402 	tsteq	r3, r2, lsl #8
    6a6c:	03040200 	movweq	r0, #16896	; 0x4200
    6a70:	02002006 	andeq	r2, r0, #6
    6a74:	4a060104 	bmi	186e8c <__RAM_SIZE+0x86e8c>
    6a78:	03040200 	movweq	r0, #16896	; 0x4200
    6a7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6a80:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a84:	00010304 	andeq	r0, r1, r4, lsl #6
    6a88:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6a8c:	03040200 	movweq	r0, #16896	; 0x4200
    6a90:	04020001 	streq	r0, [r2], #-1
    6a94:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a98:	00200304 	eoreq	r0, r0, r4, lsl #6
    6a9c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6aa0:	03040200 	movweq	r0, #16896	; 0x4200
    6aa4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6aa8:	02002003 	andeq	r2, r0, #3
    6aac:	20060304 	andcs	r0, r6, r4, lsl #6
    6ab0:	03040200 	movweq	r0, #16896	; 0x4200
    6ab4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6ab8:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6abc:	01030402 	tsteq	r3, r2, lsl #8
    6ac0:	03040200 	movweq	r0, #16896	; 0x4200
    6ac4:	04020001 	streq	r0, [r2], #-1
    6ac8:	02001801 	andeq	r1, r0, #65536	; 0x10000
    6acc:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    6ad0:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    6ad4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6ad8:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    6adc:	17052001 	strne	r2, [r5, -r1]
    6ae0:	01040200 	mrseq	r0, R12_usr
    6ae4:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    6ae8:	061b0532 			; <UNDEFINED> instruction: 0x061b0532
    6aec:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    6af0:	06380530 			; <UNDEFINED> instruction: 0x06380530
    6af4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6af8:	062d0542 	strteq	r0, [sp], -r2, asr #10
    6afc:	00150501 	andseq	r0, r5, r1, lsl #10
    6b00:	06010402 	streq	r0, [r1], -r2, lsl #8
    6b04:	004a6803 	subeq	r6, sl, r3, lsl #16
    6b08:	06010402 	streq	r0, [r1], -r2, lsl #8
    6b0c:	0119063c 	tsteq	r9, ip, lsr r6
    6b10:	2001012e 	andcs	r0, r1, lr, lsr #2
    6b14:	20203c2e 	eorcs	r3, r0, lr, lsr #24
    6b18:	0f022006 	svceq	0x00022006
    6b1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6b20:	02050005 	andeq	r0, r5, #5
    6b24:	00000000 	andeq	r0, r0, r0
    6b28:	013fb803 	teqeq	pc, r3, lsl #16
    6b2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6b30:	13134b06 	tstne	r3, #6144	; 0x1800
    6b34:	05146e05 	ldreq	r6, [r4, #-3589]	; 0xfffff1fb
    6b38:	50051426 	andpl	r1, r5, r6, lsr #8
    6b3c:	03330513 	teqeq	r3, #79691776	; 0x4c00000
    6b40:	09050112 	stmdbeq	r5, {r1, r4, r8}
    6b44:	32051714 	andcc	r1, r5, #20, 14	; 0x500000
    6b48:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b4c:	23053006 	movwcs	r3, #20486	; 0x5006
    6b50:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b54:	35054b06 	strcc	r4, [r5, #-2822]	; 0xfffff4fa
    6b58:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b5c:	25054006 	strcs	r4, [r5, #-6]
    6b60:	2e200106 	sufcss	f0, f0, f6
    6b64:	05203a05 	streq	r3, [r0, #-2565]!	; 0xfffff5fb
    6b68:	0530063e 	ldreq	r0, [r0, #-1598]!	; 0xfffff9c2
    6b6c:	0f05160d 	svceq	0x0005160d
    6b70:	31050106 	tstcc	r5, r6, lsl #2
    6b74:	2e230306 	cdpcs	3, 2, cr0, cr3, cr6, {0}
    6b78:	16030905 	strne	r0, [r3], -r5, lsl #18
    6b7c:	30340501 	eorscc	r0, r4, r1, lsl #10
    6b80:	13060505 	movwne	r0, #25861	; 0x6505
    6b84:	03065e05 	movweq	r5, #28165	; 0x6e05
    6b88:	11052047 	tstne	r5, r7, asr #32
    6b8c:	062a0514 			; <UNDEFINED> instruction: 0x062a0514
    6b90:	13052001 	movwne	r2, #20481	; 0x5001
    6b94:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6b98:	3c200130 	stfccs	f0, [r0], #-192	; 0xffffff40
    6b9c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6ba0:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6ba4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6ba8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6bac:	03040200 	movweq	r0, #16896	; 0x4200
    6bb0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6bb4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bb8:	00010304 	andeq	r0, r1, r4, lsl #6
    6bbc:	01030402 	tsteq	r3, r2, lsl #8
    6bc0:	03040200 	movweq	r0, #16896	; 0x4200
    6bc4:	02002006 	andeq	r2, r0, #6
    6bc8:	4a060104 	bmi	186fe0 <__RAM_SIZE+0x86fe0>
    6bcc:	03040200 	movweq	r0, #16896	; 0x4200
    6bd0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6bd4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bd8:	00010304 	andeq	r0, r1, r4, lsl #6
    6bdc:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6be0:	03040200 	movweq	r0, #16896	; 0x4200
    6be4:	04020001 	streq	r0, [r2], #-1
    6be8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bec:	00200304 	eoreq	r0, r0, r4, lsl #6
    6bf0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6bf4:	03040200 	movweq	r0, #16896	; 0x4200
    6bf8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6bfc:	02002003 	andeq	r2, r0, #3
    6c00:	20060304 	andcs	r0, r6, r4, lsl #6
    6c04:	03040200 	movweq	r0, #16896	; 0x4200
    6c08:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6c0c:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6c10:	01030402 	tsteq	r3, r2, lsl #8
    6c14:	03040200 	movweq	r0, #16896	; 0x4200
    6c18:	04020001 	streq	r0, [r2], #-1
    6c1c:	02001801 	andeq	r1, r0, #65536	; 0x10000
    6c20:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    6c24:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    6c28:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6c2c:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    6c30:	17052001 	strne	r2, [r5, -r1]
    6c34:	01040200 	mrseq	r0, R12_usr
    6c38:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    6c3c:	061b0532 			; <UNDEFINED> instruction: 0x061b0532
    6c40:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    6c44:	06380522 	ldrteq	r0, [r8], -r2, lsr #10
    6c48:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6c4c:	062d0534 			; <UNDEFINED> instruction: 0x062d0534
    6c50:	00150501 	andseq	r0, r5, r1, lsl #10
    6c54:	06010402 	streq	r0, [r1], -r2, lsl #8
    6c58:	004a6803 	subeq	r6, sl, r3, lsl #16
    6c5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    6c60:	0119063c 	tsteq	r9, ip, lsr r6
    6c64:	2001012e 	andcs	r0, r1, lr, lsr #2
    6c68:	20203c2e 	eorcs	r3, r0, lr, lsr #24
    6c6c:	10022006 	andne	r2, r2, r6
    6c70:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6c74:	02050005 	andeq	r0, r5, #5
    6c78:	00000000 	andeq	r0, r0, r0
    6c7c:	00c0ab03 	sbceq	sl, r0, r3, lsl #22
    6c80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6c84:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    6c88:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    6c8c:	0905144f 	stmdbeq	r5, {r0, r1, r2, r3, r6, sl, ip}
    6c90:	06110516 			; <UNDEFINED> instruction: 0x06110516
    6c94:	00090501 	andeq	r0, r9, r1, lsl #10
    6c98:	06040402 	streq	r0, [r4], -r2, lsl #8
    6c9c:	000d0530 	andeq	r0, sp, r0, lsr r5
    6ca0:	30040402 	andcc	r0, r4, r2, lsl #8
    6ca4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    6ca8:	01060404 	tsteq	r6, r4, lsl #8
    6cac:	02000f05 	andeq	r0, r0, #5, 30
    6cb0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    6cb4:	09053519 	stmdbeq	r5, {r0, r3, r4, r8, sl, ip, sp}
    6cb8:	3c052306 	stccc	3, cr2, [r5], {6}
    6cbc:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    6cc0:	13060505 	movwne	r0, #25861	; 0x6505
    6cc4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    6cc8:	6d030104 	stfvss	f0, [r3, #-16]
    6ccc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6cd0:	26062e01 	strcs	r2, [r6], -r1, lsl #28
    6cd4:	01063805 	tsteq	r6, r5, lsl #16
    6cd8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6cdc:	0619053d 			; <UNDEFINED> instruction: 0x0619053d
    6ce0:	00040201 	andeq	r0, r4, r1, lsl #4
    6ce4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6ce8:	00020500 	andeq	r0, r2, r0, lsl #10
    6cec:	03000000 	movweq	r0, #0
    6cf0:	0100c0d2 	ldrdeq	ip, [r0, -r2]
    6cf4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6cf8:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    6cfc:	4f051459 	svcmi	0x00051459
    6d00:	16090514 			; <UNDEFINED> instruction: 0x16090514
    6d04:	01061105 	tsteq	r6, r5, lsl #2
    6d08:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6d0c:	30060404 	andcc	r0, r6, r4, lsl #8
    6d10:	02000d05 	andeq	r0, r0, #320	; 0x140
    6d14:	05320404 	ldreq	r0, [r2, #-1028]!	; 0xfffffbfc
    6d18:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    6d1c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6d20:	0402000d 	streq	r0, [r2], #-13
    6d24:	05590604 	ldrbeq	r0, [r9, #-1540]	; 0xfffff9fc
    6d28:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    6d2c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6d30:	04020009 	streq	r0, [r2], #-9
    6d34:	054c0604 	strbeq	r0, [ip, #-1540]	; 0xfffff9fc
    6d38:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    6d3c:	09053004 	stmdbeq	r5, {r2, ip, sp}
    6d40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6d44:	00050514 	andeq	r0, r5, r4, lsl r5
    6d48:	06040402 	streq	r0, [r4], -r2, lsl #8
    6d4c:	00110513 	andseq	r0, r1, r3, lsl r5
    6d50:	03010402 	movweq	r0, #5122	; 0x1402
    6d54:	02002e72 	andeq	r2, r0, #1824	; 0x720
    6d58:	022e0104 	eoreq	r0, lr, #4, 2
    6d5c:	01010004 	tsteq	r1, r4
    6d60:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6d64:	002d2402 	eoreq	r2, sp, r2, lsl #8
    6d68:	c38a0310 	orrgt	r0, sl, #16, 6	; 0x40000000
    6d6c:	09050100 	stmdbeq	r5, {r8}
    6d70:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    6d74:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    6d78:	052f0609 	streq	r0, [pc, #-1545]!	; 6777 <__HEAP_SIZE+0x5777>
    6d7c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6d80:	052f0609 	streq	r0, [pc, #-1545]!	; 677f <__HEAP_SIZE+0x577f>
    6d84:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    6d88:	06022f05 	streq	r2, [r2], -r5, lsl #30
    6d8c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6d90:	02050001 	andeq	r0, r5, #1
    6d94:	10002d3c 	andne	r2, r0, ip, lsr sp
    6d98:	011bb703 	tsteq	fp, r3, lsl #14
    6d9c:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
    6da0:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    6da4:	01061d05 	tsteq	r6, r5, lsl #26
    6da8:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    6dac:	20060104 	andcs	r0, r6, r4, lsl #2
    6db0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6db4:	01060104 	tsteq	r6, r4, lsl #2
    6db8:	30060905 	andcc	r0, r6, r5, lsl #18
    6dbc:	01063f05 	tsteq	r6, r5, lsl #30
    6dc0:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    6dc4:	055d0609 	ldrbeq	r0, [sp, #-1545]	; 0xfffff9f7
    6dc8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6dcc:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    6dd0:	05260602 	streq	r0, [r6, #-1538]!	; 0xfffff9fe
    6dd4:	0402006e 	streq	r0, [r2], #-110	; 0xffffff92
    6dd8:	01730302 	cmneq	r3, r2, lsl #6
    6ddc:	00018005 	andeq	r8, r1, r5
    6de0:	06020402 	streq	r0, [r2], -r2, lsl #8
    6de4:	04020001 	streq	r0, [r2], #-1
    6de8:	1d052002 	stcne	0, cr2, [r5, #-8]
    6dec:	01040200 	mrseq	r0, R12_usr
    6df0:	00260520 	eoreq	r0, r6, r0, lsr #10
    6df4:	06010402 	streq	r0, [r1], -r2, lsl #8
    6df8:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    6dfc:	04020005 	streq	r0, [r2], #-5
    6e00:	06010601 	streq	r0, [r1], -r1, lsl #12
    6e04:	3c00fb03 			; <UNDEFINED> instruction: 0x3c00fb03
    6e08:	13060105 	movwne	r0, #24837	; 0x6105
    6e0c:	03060d05 	movweq	r0, #27909	; 0x6d05
    6e10:	032e7f88 			; <UNDEFINED> instruction: 0x032e7f88
    6e14:	1c05012f 	stfnes	f0, [r5], {47}	; 0x2f
    6e18:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6e1c:	1b052f06 	blne	152a3c <__RAM_SIZE+0x52a3c>
    6e20:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6e24:	11052106 	tstne	r5, r6, lsl #2
    6e28:	030d0518 	movweq	r0, #54552	; 0xd518
    6e2c:	2b05580e 	blcs	15ce6c <__RAM_SIZE+0x5ce6c>
    6e30:	29050106 	stmdbcs	r5, {r1, r2, r8}
    6e34:	060d05ac 	streq	r0, [sp], -ip, lsr #11
    6e38:	060f0544 	streq	r0, [pc], -r4, asr #10
    6e3c:	09052001 	stmdbeq	r5, {r0, sp}
    6e40:	01160306 	tsteq	r6, r6, lsl #6
    6e44:	051a2905 	ldreq	r2, [sl, #-2309]	; 0xfffff6fb
    6e48:	7f910356 	svcvc	0x00910356
    6e4c:	065d0501 	ldrbeq	r0, [sp], -r1, lsl #10
    6e50:	11052001 	tstne	r5, r1
    6e54:	00d70306 	sbcseq	r0, r7, r6, lsl #6
    6e58:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6e5c:	10030609 	andne	r0, r3, r9, lsl #12
    6e60:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6e64:	02017003 	andeq	r7, r1, #3
    6e68:	01010008 	tsteq	r1, r8
    6e6c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6e70:	002da802 	eoreq	sl, sp, r2, lsl #16
    6e74:	1cd10310 	ldclne	3, cr0, [r1], {16}
    6e78:	21050501 	tstcs	r5, r1, lsl #10
    6e7c:	05142505 	ldreq	r2, [r4, #-1285]	; 0xfffffafb
    6e80:	010a0305 	tsteq	sl, r5, lsl #6
    6e84:	01060f05 	tsteq	r6, r5, lsl #30
    6e88:	32060905 	andcc	r0, r6, #81920	; 0x14000
    6e8c:	01060b05 	tsteq	r6, r5, lsl #22
    6e90:	34062505 	strcc	r2, [r6], #-1285	; 0xfffffafb
    6e94:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    6e98:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6e9c:	3b030649 	blcc	c87c8 <__HEAP_SIZE+0xc77c8>
    6ea0:	1705052e 	strne	r0, [r5, -lr, lsr #10]
    6ea4:	30260516 	eorcc	r0, r6, r6, lsl r5
    6ea8:	13060105 	movwne	r0, #24837	; 0x6105
    6eac:	03060d05 	movweq	r0, #27909	; 0x6d05
    6eb0:	05207fb0 	streq	r7, [r0, #-4016]!	; 0xfffff050
    6eb4:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
    6eb8:	03060905 	movweq	r0, #26885	; 0x6905
    6ebc:	0a032019 	beq	cef28 <__HEAP_SIZE+0xcdf28>
    6ec0:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    6ec4:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ec8:	061b054b 	ldreq	r0, [fp], -fp, asr #10
    6ecc:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ed0:	0614053d 			; <UNDEFINED> instruction: 0x0614053d
    6ed4:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    6ed8:	14200544 	strtne	r0, [r0], #-1348	; 0xfffffabc
    6edc:	05190905 	ldreq	r0, [r9, #-2309]	; 0xfffff6fb
    6ee0:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    6ee4:	0101000b 	tsteq	r1, fp
    6ee8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6eec:	002df002 	eoreq	pc, sp, r2
    6ef0:	c3b30310 			; <UNDEFINED> instruction: 0xc3b30310
    6ef4:	09050100 	stmdbeq	r5, {r8}
    6ef8:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    6efc:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6f00:	052f0609 	streq	r0, [pc, #-1545]!	; 68ff <__HEAP_SIZE+0x58ff>
    6f04:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    6f08:	052f0609 	streq	r0, [pc, #-1545]!	; 6907 <__HEAP_SIZE+0x5907>
    6f0c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6f10:	06022f05 	streq	r2, [r2], -r5, lsl #30
    6f14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6f18:	02050001 	andeq	r0, r5, #1
    6f1c:	00000000 	andeq	r0, r0, r0
    6f20:	00c3c503 	sbceq	ip, r3, r3, lsl #10
    6f24:	13050501 	movwne	r0, #21761	; 0x5501
    6f28:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    6f2c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6f30:	05420609 	strbeq	r0, [r2, #-1545]	; 0xfffff9f7
    6f34:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    6f38:	0b030605 	bleq	c8754 <__HEAP_SIZE+0xc7754>
    6f3c:	061c052e 	ldreq	r0, [ip], -lr, lsr #10
    6f40:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f44:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    6f48:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f4c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    6f50:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f54:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    6f58:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f5c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    6f60:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f64:	00170530 	andseq	r0, r7, r0, lsr r5
    6f68:	01010402 	tsteq	r1, r2, lsl #8
    6f6c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6f70:	01060104 	tsteq	r6, r4, lsl #2
    6f74:	15053306 	strne	r3, [r5, #-774]	; 0xfffffcfa
    6f78:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6f7c:	052f0605 	streq	r0, [pc, #-1541]!	; 697f <__HEAP_SIZE+0x597f>
    6f80:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6f84:	052f0605 	streq	r0, [pc, #-1541]!	; 6987 <__HEAP_SIZE+0x5987>
    6f88:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6f8c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6f90:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6f94:	2e0b0301 	cdpcs	3, 0, cr0, cr11, cr1, {0}
    6f98:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6f9c:	03060304 	movweq	r0, #25348	; 0x6304
    6fa0:	2305206e 	movwcs	r2, #20590	; 0x506e
    6fa4:	03040200 	movweq	r0, #16896	; 0x4200
    6fa8:	38050106 	stmdacc	r5, {r1, r2, r8}
    6fac:	03040200 	movweq	r0, #16896	; 0x4200
    6fb0:	3f054806 	svccc	0x00054806
    6fb4:	03040200 	movweq	r0, #16896	; 0x4200
    6fb8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    6fbc:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    6fc0:	0101001a 	tsteq	r1, sl, lsl r0
    6fc4:	00000bd4 	ldrdeq	r0, [r0], -r4
    6fc8:	02480003 	subeq	r0, r8, #3
    6fcc:	01020000 	mrseq	r0, (UNDEF: 2)
    6fd0:	000d0efb 	strdeq	r0, [sp], -fp
    6fd4:	01010101 	tsteq	r1, r1, lsl #2
    6fd8:	01000000 	mrseq	r0, (UNDEF: 0)
    6fdc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6fe0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6fe4:	2f2e2e2f 	svccs	0x002e2e2f
    6fe8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    6fec:	2f736f74 	svccs	0x00736f74
    6ff0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    6ff4:	534f5452 	movtpl	r5, #62546	; 0xf452
    6ff8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    6ffc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7000:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7004:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7008:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    700c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7010:	5f6d7261 	svcpl	0x006d7261
    7014:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7018:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    701c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7020:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7024:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7028:	30312d69 	eorscc	r2, r1, r9, ror #26
    702c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7030:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7034:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    7038:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    703c:	615c6363 	cmpvs	ip, r3, ror #6
    7040:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7044:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7048:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    704c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    7050:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    7054:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7058:	00656475 	rsbeq	r6, r5, r5, ror r4
    705c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7060:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    7064:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    7068:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    706c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    7070:	615c6d61 	cmpvs	ip, r1, ror #26
    7074:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    7078:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    707c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7080:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7084:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7088:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    708c:	2e30312d 	rsfcssp	f3, f0, #5.0
    7090:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7094:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7098:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    709c:	6f6e2d6d 	svcvs	0x006e2d6d
    70a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    70a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    70a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    70ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    70b0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    70b4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    70b8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    70bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    70c0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    70c4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    70c8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    70cc:	615c6d61 	cmpvs	ip, r1, ror #26
    70d0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    70d4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    70d8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    70dc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    70e0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    70e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    70e8:	2e30312d 	rsfcssp	f3, f0, #5.0
    70ec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    70f0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    70f4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    70f8:	6f6e2d6d 	svcvs	0x006e2d6d
    70fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7100:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7104:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7108:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    710c:	00737973 	rsbseq	r7, r3, r3, ror r9
    7110:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7114:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7118:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    711c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7120:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7124:	4f545265 	svcmi	0x00545265
    7128:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    712c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7130:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    7134:	2f2e2e2f 	svccs	0x002e2e2f
    7138:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7088 <__HEAP_SIZE+0x6088>
    713c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7140:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    7144:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7148:	2f534f54 	svccs	0x00534f54
    714c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7150:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    7154:	4343472f 	movtmi	r4, #14127	; 0x372f
    7158:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    715c:	334d435f 	movtcc	r4, #54111	; 0xd35f
    7160:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    7164:	6f6e2f5a 	svcvs	0x006e2f5a
    7168:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    716c:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    7170:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    7174:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    7178:	0100632e 	tsteq	r0, lr, lsr #6
    717c:	74730000 	ldrbtvc	r0, [r3], #-0
    7180:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    7184:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    7188:	645f0000 	ldrbvs	r0, [pc], #-0	; 7190 <__HEAP_SIZE+0x6190>
    718c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    7190:	745f746c 	ldrbvc	r7, [pc], #-1132	; 7198 <__HEAP_SIZE+0x6198>
    7194:	73657079 	cmnvc	r5, #121	; 0x79
    7198:	0300682e 	movweq	r6, #2094	; 0x82e
    719c:	735f0000 	cmpvc	pc, #0
    71a0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    71a4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    71a8:	70000004 	andvc	r0, r0, r4
    71ac:	646a6f72 	strbtvs	r6, [sl], #-3954	; 0xfffff08e
    71b0:	2e736665 	cdpcs	6, 7, cr6, cr3, cr5, {3}
    71b4:	00050068 	andeq	r0, r5, r8, rrx
    71b8:	726f7000 	rsbvc	r7, pc, #0
    71bc:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    71c0:	6f636f72 	svcvs	0x00636f72
    71c4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    71c8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    71cc:	72460000 	subvc	r0, r6, #0
    71d0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    71d4:	682e534f 	stmdavs	lr!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}
    71d8:	00000500 	andeq	r0, r0, r0, lsl #10
    71dc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    71e0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    71e4:	61740000 	cmnvs	r4, r0
    71e8:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    71ec:	00000500 	andeq	r0, r0, r0, lsl #10
    71f0:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    71f4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    71f8:	74000005 	strvc	r0, [r0], #-5
    71fc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    7200:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7204:	70000005 	andvc	r0, r0, r5
    7208:	6174726f 	cmnvs	r4, pc, ror #4
    720c:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
    7210:	00050068 	andeq	r0, r5, r8, rrx
    7214:	05050000 	streq	r0, [r5, #-0]
    7218:	08020500 	stmdaeq	r2, {r8, sl}
    721c:	0310002e 	tsteq	r0, #46	; 0x2e
    7220:	050106cc 	streq	r0, [r1, #-1740]	; 0xfffff934
    7224:	09031309 	stmdbeq	r3, {r0, r3, r8, r9, ip}
    7228:	061b0501 	ldreq	r0, [fp], -r1, lsl #10
    722c:	00190501 	andseq	r0, r9, r1, lsl #10
    7230:	58040402 	stmdapl	r4, {r1, sl}
    7234:	02000905 	andeq	r0, r0, #81920	; 0x14000
    7238:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    723c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    7240:	01060404 	tsteq	r6, r4, lsl #8
    7244:	22060d05 	andcs	r0, r6, #320	; 0x140
    7248:	01061f05 	tsteq	r6, r5, lsl #30
    724c:	20201d05 	eorcs	r1, r0, r5, lsl #26
    7250:	051c1b05 	ldreq	r1, [ip, #-2821]	; 0xfffff4fb
    7254:	2e09031d 	mcrcs	3, 0, r0, cr9, cr13, {0}
    7258:	23060905 	movwcs	r0, #26885	; 0x6905
    725c:	13060505 	movwne	r0, #25861	; 0x6505
    7260:	01000302 	tsteq	r0, r2, lsl #6
    7264:	00050501 	andeq	r0, r5, r1, lsl #10
    7268:	2e280205 	cdpcs	2, 2, cr0, cr8, cr5, {0}
    726c:	81031000 	mrshi	r1, (UNDEF: 3)
    7270:	01060107 	tsteq	r6, r7, lsl #2
    7274:	21060905 	tstcs	r6, r5, lsl #18
    7278:	05222114 	streq	r2, [r2, #-276]!	; 0xfffffeec
    727c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7280:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    7284:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    7288:	0f05204a 	svceq	0x0005204a
    728c:	32220520 	eorcc	r0, r2, #32, 10	; 0x8000000
    7290:	17030505 	strne	r0, [r3, -r5, lsl #10]
    7294:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    7298:	06206d03 	strteq	r6, [r0], -r3, lsl #26
    729c:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    72a0:	052e6f03 	streq	r6, [lr, #-3843]!	; 0xfffff0fd
    72a4:	1603060d 	strne	r0, [r3], -sp, lsl #12
    72a8:	060f052e 	streq	r0, [pc], -lr, lsr #10
    72ac:	002d0501 	eoreq	r0, sp, r1, lsl #10
    72b0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    72b4:	03061105 	movweq	r1, #24837	; 0x6105
    72b8:	20062e09 	andcs	r2, r6, r9, lsl #28
    72bc:	14052020 	strne	r2, [r5], #-32	; 0xffffffe0
    72c0:	052e6103 	streq	r6, [lr, #-259]!	; 0xfffffefd
    72c4:	2e1b0322 	cdpcs	3, 1, cr0, cr11, cr2, {1}
    72c8:	28060905 	stmdacs	r6, {r0, r2, r8, fp}
    72cc:	01061005 	tsteq	r6, r5
    72d0:	01000602 	tsteq	r0, r2, lsl #12
    72d4:	00050501 	andeq	r0, r5, r1, lsl #10
    72d8:	2e700205 	cdpcs	2, 7, cr0, cr0, cr5, {0}
    72dc:	bd031000 	stclt	0, cr1, [r3, #-0]
    72e0:	01060105 	tsteq	r6, r5, lsl #2
    72e4:	4e060905 	vmlami.f16	s0, s12, s10	; <UNPREDICTABLE>
    72e8:	01060e05 	tsteq	r6, r5, lsl #28
    72ec:	23060d05 	movwcs	r0, #27909	; 0x6d05
    72f0:	01062405 	tsteq	r6, r5, lsl #8
    72f4:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    72f8:	0523062a 	streq	r0, [r3, #-1578]!	; 0xfffff9d6
    72fc:	1405130d 	strne	r1, [r5], #-781	; 0xfffffcf3
    7300:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7304:	060e0520 	streq	r0, [lr], -r0, lsr #10
    7308:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    730c:	0501064d 	streq	r0, [r1, #-1613]	; 0xfffff9b3
    7310:	0e052010 	mcreq	0, 0, r2, cr5, cr0, {0}
    7314:	03050566 	movweq	r0, #21862	; 0x5566
    7318:	00202e09 	eoreq	r2, r0, r9, lsl #28
    731c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7320:	98020500 	stmdals	r2, {r8, sl}
    7324:	0310002e 	tsteq	r0, #46	; 0x2e
    7328:	060105cf 	streq	r0, [r1], -pc, asr #11
    732c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7330:	06310540 	ldrteq	r0, [r1], -r0, asr #10
    7334:	3c190501 	cfldr32cc	mvfx0, [r9], {1}
    7338:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    733c:	01061205 	tsteq	r6, r5, lsl #4
    7340:	06090520 	streq	r0, [r9], -r0, lsr #10
    7344:	06160532 			; <UNDEFINED> instruction: 0x06160532
    7348:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    734c:	42060d05 	andmi	r0, r6, #320	; 0x140
    7350:	01061f05 	tsteq	r6, r5, lsl #30
    7354:	4e062605 	cfmadd32mi	mvax0, mvfx2, mvfx6, mvfx5
    7358:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    735c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7360:	05052009 	streq	r2, [r5, #-9]
    7364:	060d052f 	streq	r0, [sp], -pc, lsr #10
    7368:	02207603 	eoreq	r7, r0, #3145728	; 0x300000
    736c:	01010009 	tsteq	r1, r9
    7370:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7374:	002ed802 	eoreq	sp, lr, r2, lsl #16
    7378:	08be0310 	ldmeq	lr!, {r4, r8, r9}
    737c:	21090501 	tstcs	r9, r1, lsl #10
    7380:	0e051813 	mcreq	8, 0, r1, cr5, cr3, {0}
    7384:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7388:	1f052206 	svcne	0x00052206
    738c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7390:	0e052506 	cfsh32eq	mvfx2, mvfx5, #6
    7394:	05587903 	ldrbeq	r7, [r8, #-2307]	; 0xfffff6fd
    7398:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    739c:	09053c0e 	stmdbeq	r5, {r1, r2, r3, sl, fp, ip, sp}
    73a0:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    73a4:	061c0513 			; <UNDEFINED> instruction: 0x061c0513
    73a8:	06090501 	streq	r0, [r9], -r1, lsl #10
    73ac:	061d054b 	ldreq	r0, [sp], -fp, asr #10
    73b0:	21050501 	tstcs	r5, r1, lsl #10
    73b4:	00050220 	andeq	r0, r5, r0, lsr #4
    73b8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    73bc:	08020500 	stmdaeq	r2, {r8, sl}
    73c0:	0310002f 	tsteq	r0, #47	; 0x2f
    73c4:	060106e7 	streq	r0, [r1], -r7, ror #13
    73c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    73cc:	1319052f 	tstne	r9, #197132288	; 0xbc00000
    73d0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    73d4:	2e010614 	mcrcs	6, 0, r0, cr1, cr4, {0}
    73d8:	22060905 	andcs	r0, r6, #81920	; 0x14000
    73dc:	01061605 	tsteq	r6, r5, lsl #12
    73e0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    73e4:	0535060d 	ldreq	r0, [r5, #-1549]!	; 0xfffff9f3
    73e8:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    73ec:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    73f0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    73f4:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    73f8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    73fc:	7503060d 	strvc	r0, [r3, #-1549]	; 0xfffff9f3
    7400:	27052f2e 	strcs	r2, [r5, -lr, lsr #30]
    7404:	05020106 	streq	r0, [r2, #-262]	; 0xfffffefa
    7408:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    740c:	02050005 	andeq	r0, r5, #5
    7410:	10002f34 	andne	r2, r0, r4, lsr pc
    7414:	01068f03 	tsteq	r6, r3, lsl #30
    7418:	09050106 	stmdbeq	r5, {r1, r2, r8}
    741c:	14134b06 	ldrne	r4, [r3], #-2822	; 0xfffff4fa
    7420:	05350d05 	ldreq	r0, [r5, #-3333]!	; 0xfffff2fb
    7424:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7428:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    742c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    7430:	1105200f 	tstne	r5, pc
    7434:	13053106 	movwne	r3, #20742	; 0x5106
    7438:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    743c:	01040200 	mrseq	r0, R12_usr
    7440:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7444:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    7448:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    744c:	05240619 	streq	r0, [r4, #-1561]!	; 0xfffff9e7
    7450:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    7454:	065b0615 			; <UNDEFINED> instruction: 0x065b0615
    7458:	0530064a 	ldreq	r0, [r0, #-1610]!	; 0xfffff9b6
    745c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7460:	05052e17 	streq	r2, [r5, #-3607]	; 0xfffff1e9
    7464:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    7468:	59030615 	stmdbpl	r3, {r0, r2, r4, r9, sl}
    746c:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    7470:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    7474:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    7478:	20580e03 	subscs	r0, r8, r3, lsl #28
    747c:	03061905 	movweq	r1, #26885	; 0x6905
    7480:	1105200b 	tstne	r5, fp
    7484:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    7488:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    748c:	06023105 	streq	r3, [r2], -r5, lsl #2
    7490:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7494:	02050005 	andeq	r0, r5, #5
    7498:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    749c:	0107aa03 	tsteq	r7, r3, lsl #20
    74a0:	052f0905 	streq	r0, [pc, #-2309]!	; 6ba3 <__HEAP_SIZE+0x5ba3>
    74a4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    74a8:	13590609 	cmpne	r9, #9437184	; 0x900000
    74ac:	0e051413 	cfmvdlreq	mvd5, r1
    74b0:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    74b4:	20130306 	andscs	r0, r3, r6, lsl #6
    74b8:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    74bc:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    74c0:	0e05200f 	cdpeq	0, 0, cr2, cr5, cr15, {0}
    74c4:	2e660306 	cdpcs	3, 6, cr0, cr6, cr6, {0}
    74c8:	01061005 	tsteq	r6, r5
    74cc:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    74d0:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    74d4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    74d8:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    74dc:	2f053006 	svccs	0x00053006
    74e0:	15150516 	ldrne	r0, [r5, #-1302]	; 0xfffffaea
    74e4:	0f031105 	svceq	0x00031105
    74e8:	06190558 			; <UNDEFINED> instruction: 0x06190558
    74ec:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    74f0:	06150522 	ldreq	r0, [r5], -r2, lsr #10
    74f4:	20130501 	andscs	r0, r3, r1, lsl #10
    74f8:	23061505 	movwcs	r1, #25861	; 0x6505
    74fc:	01061e05 	tsteq	r6, r5, lsl #28
    7500:	40062d05 	andmi	r2, r6, r5, lsl #26
    7504:	05157705 	ldreq	r7, [r5, #-1797]	; 0xfffff8fb
    7508:	1c051a11 			; <UNDEFINED> instruction: 0x1c051a11
    750c:	11050106 	tstne	r5, r6, lsl #2
    7510:	21054c06 	tstcs	r5, r6, lsl #24
    7514:	11050106 	tstne	r5, r6, lsl #2
    7518:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    751c:	062b05a5 	strteq	r0, [fp], -r5, lsr #11
    7520:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    7524:	065d0568 	ldrbeq	r0, [sp], -r8, ror #10
    7528:	20750501 	rsbscs	r0, r5, r1, lsl #10
    752c:	3c201d05 	stccc	13, cr1, [r0], #-20	; 0xffffffec
    7530:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    7534:	0532061d 	ldreq	r0, [r2, #-1565]!	; 0xfffff9e3
    7538:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    753c:	21052e1f 	tstcs	r5, pc, lsl lr
    7540:	33054206 	movwcc	r4, #20998	; 0x5206
    7544:	3a050106 	bcc	147964 <__RAM_SIZE+0x47964>
    7548:	1d054e06 	stcne	14, cr4, [r5, #-24]	; 0xffffffe8
    754c:	06240513 			; <UNDEFINED> instruction: 0x06240513
    7550:	201d0501 	andscs	r0, sp, r1, lsl #10
    7554:	03062105 	movweq	r2, #24837	; 0x6105
    7558:	6d053c77 	stcvs	12, cr3, [r5, #-476]	; 0xfffffe24
    755c:	21050106 	tstcs	r5, r6, lsl #2
    7560:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    7564:	05741503 	ldrbeq	r1, [r4, #-1283]!	; 0xfffffafd
    7568:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    756c:	24670619 	strbtcs	r0, [r7], #-1561	; 0xfffff9e7
    7570:	01062b05 	tsteq	r6, r5, lsl #22
    7574:	67061905 	strvs	r1, [r6, -r5, lsl #18]
    7578:	01065305 	tsteq	r6, r5, lsl #6
    757c:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    7580:	0521064d 	streq	r0, [r1, #-1613]!	; 0xfffff9b3
    7584:	22051a19 	andcs	r1, r5, #102400	; 0x19000
    7588:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    758c:	052f0619 	streq	r0, [pc, #-1561]!	; 6f7b <__HEAP_SIZE+0x5f7b>
    7590:	2a05281d 	bcs	15160c <__RAM_SIZE+0x5160c>
    7594:	1f050106 	svcne	0x00050106
    7598:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    759c:	06330542 	ldrteq	r0, [r3], -r2, asr #10
    75a0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    75a4:	05200654 	streq	r0, [r0, #-1620]!	; 0xfffff9ac
    75a8:	3c180305 	ldccc	3, cr0, [r8], {5}
    75ac:	01000402 	tsteq	r0, r2, lsl #8
    75b0:	00050501 	andeq	r0, r5, r1, lsl #10
    75b4:	30940205 	addscc	r0, r4, r5, lsl #4
    75b8:	ec031000 	stc	0, cr1, [r3], {-0}
    75bc:	01060105 	tsteq	r6, r5, lsl #2
    75c0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    75c4:	2f060104 	svccs	0x00060104
    75c8:	01040200 	mrseq	r0, R12_usr
    75cc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    75d0:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    75d4:	0c030104 	stfeqs	f0, [r3], {4}
    75d8:	000d0501 	andeq	r0, sp, r1, lsl #10
    75dc:	16010402 	strne	r0, [r1], -r2, lsl #8
    75e0:	02001f05 	andeq	r1, r0, #5, 30
    75e4:	01060104 	tsteq	r6, r4, lsl #2
    75e8:	02000d05 	andeq	r0, r0, #320	; 0x140
    75ec:	40060104 	andmi	r0, r6, r4, lsl #2
    75f0:	01040200 	mrseq	r0, R12_usr
    75f4:	002d053f 	eoreq	r0, sp, pc, lsr r5
    75f8:	03010402 	movweq	r0, #5122	; 0x1402
    75fc:	01022e75 	tsteq	r2, r5, ror lr
    7600:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7604:	02050005 	andeq	r0, r5, #5
    7608:	100030ac 	andne	r3, r0, ip, lsr #1
    760c:	0108d703 	tsteq	r8, r3, lsl #14
    7610:	05320905 	ldreq	r0, [r2, #-2309]!	; 0xfffff6fb
    7614:	1d05300d 	stcne	0, cr3, [r5, #-52]	; 0xffffffcc
    7618:	0f050106 	svceq	0x00050106
    761c:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    7620:	05202503 	streq	r2, [r0, #-1283]!	; 0xfffffafd
    7624:	05051509 	streq	r1, [r5, #-1289]	; 0xfffffaf7
    7628:	11052f06 	tstne	r5, r6, lsl #30
    762c:	2e590306 	cdpcs	3, 5, cr0, cr9, cr6, {0}
    7630:	24054b4b 	strcs	r4, [r5], #-2891	; 0xfffff4b5
    7634:	11050106 	tstne	r5, r6, lsl #2
    7638:	25052f06 	strcs	r2, [r5, #-3846]	; 0xfffff0fa
    763c:	34060106 	strcc	r0, [r6], #-262	; 0xfffffefa
    7640:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    7644:	01062305 	tsteq	r6, r5, lsl #6
    7648:	08822105 	stmeq	r2, {r0, r2, r8, sp}
    764c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7650:	02050005 	andeq	r0, r5, #5
    7654:	00000000 	andeq	r0, r0, r0
    7658:	0103a603 	tsteq	r3, r3, lsl #12
    765c:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    7660:	09057606 	stmdbeq	r5, {r1, r2, r9, sl, ip, sp, lr}
    7664:	21053216 	tstcs	r5, r6, lsl r2
    7668:	09050106 	stmdbeq	r5, {r1, r2, r8}
    766c:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    7670:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7674:	1f052106 	svcne	0x00052106
    7678:	09050106 	stmdbeq	r5, {r1, r2, r8}
    767c:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    7680:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7684:	053e2f06 	ldreq	r2, [lr, #-3846]!	; 0xfffff0fa
    7688:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    768c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    7690:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    7694:	05690628 	strbeq	r0, [r9, #-1576]!	; 0xfffff9d8
    7698:	2e130605 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx5
    769c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    76a0:	02050005 	andeq	r0, r5, #5
    76a4:	1000310c 	andne	r3, r0, ip, lsl #2
    76a8:	0101ed03 	tsteq	r1, r3, lsl #26
    76ac:	052f0905 	streq	r0, [pc, #-2309]!	; 6daf <__HEAP_SIZE+0x5daf>
    76b0:	0905142b 	stmdbeq	r5, {r0, r1, r3, r5, sl, ip}
    76b4:	19053018 	stmdbne	r5, {r3, r4, ip, sp}
    76b8:	0b050106 	bleq	147ad8 <__RAM_SIZE+0x47ad8>
    76bc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    76c0:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    76c4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    76c8:	052f0615 	streq	r0, [pc, #-1557]!	; 70bb <__HEAP_SIZE+0x60bb>
    76cc:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    76d0:	14210615 	strtne	r0, [r1], #-1557	; 0xfffff9eb
    76d4:	06280559 			; <UNDEFINED> instruction: 0x06280559
    76d8:	ba260501 	blt	988ae4 <__RAM_SIZE+0x888ae4>
    76dc:	36061505 	strcc	r1, [r6], -r5, lsl #10
    76e0:	01061705 	tsteq	r6, r5, lsl #14
    76e4:	20222105 	eorcs	r2, r2, r5, lsl #2
    76e8:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    76ec:	05017fbe 	streq	r7, [r1, #-4030]	; 0xfffff042
    76f0:	d4030625 	strle	r0, [r3], #-1573	; 0xfffff9db
    76f4:	20053c00 	andcs	r3, r5, r0, lsl #24
    76f8:	14350515 	ldrtne	r0, [r5], #-1301	; 0xfffffaeb
    76fc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7700:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    7704:	0101000b 	tsteq	r1, fp
    7708:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    770c:	00000002 	andeq	r0, r0, r2
    7710:	02d40300 	sbcseq	r0, r4, #0, 6
    7714:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7718:	0575060d 	ldrbeq	r0, [r5, #-1549]!	; 0xfffff9f3
    771c:	0d051474 	cfstrseq	mvf1, [r5, #-464]	; 0xfffffe30
    7720:	06280517 			; <UNDEFINED> instruction: 0x06280517
    7724:	0d052001 	stceq	0, cr2, [r5, #-4]
    7728:	0f053006 	svceq	0x00053006
    772c:	11050106 	tstne	r5, r6, lsl #2
    7730:	26053306 	strcs	r3, [r5], -r6, lsl #6
    7734:	11050106 	tstne	r5, r6, lsl #2
    7738:	74063d06 	strvc	r3, [r6], #-3334	; 0xfffff2fa
    773c:	31063305 	tstcc	r6, r5, lsl #6
    7740:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    7744:	4a130609 	bmi	4c8f70 <__RAM_SIZE+0x3c8f70>
    7748:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    774c:	02050009 	andeq	r0, r5, #9
    7750:	00000000 	andeq	r0, r0, r0
    7754:	0102f703 	tsteq	r2, r3, lsl #14	; <UNPREDICTABLE>
    7758:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    775c:	89053d06 	stmdbhi	r5, {r1, r2, r8, sl, fp, ip, sp}
    7760:	2a051401 	bcs	14c76c <__RAM_SIZE+0x4c76c>
    7764:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
    7768:	0514160d 	ldreq	r1, [r4, #-1549]	; 0xfffff9f3
    776c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7770:	05250611 	streq	r0, [r5, #-1553]!	; 0xfffff9ef
    7774:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    7778:	054c0611 	strbeq	r0, [ip, #-1553]	; 0xfffff9ef
    777c:	0d055b39 	vstreq	d5, [r5, #-228]	; 0xffffff1c
    7780:	06090514 			; <UNDEFINED> instruction: 0x06090514
    7784:	01003c13 	tsteq	r0, r3, lsl ip
    7788:	00050501 	andeq	r0, r5, r1, lsl #10
    778c:	00000205 	andeq	r0, r0, r5, lsl #4
    7790:	c4030000 	strgt	r0, [r3], #-0
    7794:	09050103 	stmdbeq	r5, {r0, r1, r8}
    7798:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    779c:	1f05147f 	svcne	0x0005147f
    77a0:	16090514 			; <UNDEFINED> instruction: 0x16090514
    77a4:	01061905 	tsteq	r6, r5, lsl #18
    77a8:	200b0520 	andcs	r0, fp, r0, lsr #10
    77ac:	74030505 	strvc	r0, [r3], #-1285	; 0xfffffafb
    77b0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    77b4:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    77b8:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    77bc:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    77c0:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    77c4:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    77c8:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    77cc:	05220643 	streq	r0, [r2, #-1603]!	; 0xfffff9bd
    77d0:	0f05140d 	svceq	0x0005140d
    77d4:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    77d8:	052e6c03 	streq	r6, [lr, #-3075]!	; 0xfffff3fd
    77dc:	24030625 	strcs	r0, [r3], #-1573	; 0xfffff9db
    77e0:	153c0520 	ldrne	r0, [ip, #-1312]!	; 0xfffffae0
    77e4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    77e8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    77ec:	6c030611 	stcvs	6, cr0, [r3], {17}
    77f0:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    77f4:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    77f8:	34061505 	strcc	r1, [r6], #-1285	; 0xfffffafb
    77fc:	01061f05 	tsteq	r6, r5, lsl #30
    7800:	06150574 			; <UNDEFINED> instruction: 0x06150574
    7804:	061f051c 			; <UNDEFINED> instruction: 0x061f051c
    7808:	14057401 	strne	r7, [r5], #-1025	; 0xfffffbff
    780c:	05206803 	streq	r6, [r0, #-2051]!	; 0xfffff7fd
    7810:	202a0305 	eorcs	r0, sl, r5, lsl #6
    7814:	01000302 	tsteq	r0, r2, lsl #6
    7818:	00050501 	andeq	r0, r5, r1, lsl #10
    781c:	00000205 	andeq	r0, r0, r5, lsl #4
    7820:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    7824:	01060103 	tsteq	r6, r3, lsl #2
    7828:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    782c:	7e051413 	cfmvdlrvc	mvd5, r1
    7830:	141f0514 	ldrne	r0, [pc], #-1300	; 7838 <__HEAP_SIZE+0x6838>
    7834:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    7838:	20010619 	andcs	r0, r1, r9, lsl r6
    783c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    7840:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    7844:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    7848:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    784c:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    7850:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7854:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    7858:	05220644 	streq	r0, [r2, #-1604]!	; 0xfffff9bc
    785c:	0f05140d 	svceq	0x0005140d
    7860:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    7864:	052e6c03 	streq	r6, [lr, #-3075]!	; 0xfffff3fd
    7868:	1d030625 	stcne	6, cr0, [r3, #-148]	; 0xffffff6c
    786c:	153b0520 	ldrne	r0, [fp, #-1312]!	; 0xfffffae0
    7870:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7874:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7878:	73030611 	movwvc	r0, #13841	; 0x3611
    787c:	061b052e 	ldreq	r0, [fp], -lr, lsr #10
    7880:	20202e01 	eorcs	r2, r0, r1, lsl #28
    7884:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    7888:	0220206a 	eoreq	r2, r0, #106	; 0x6a
    788c:	01010004 	tsteq	r1, r4
    7890:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7894:	00000002 	andeq	r0, r0, r2
    7898:	049f0300 	ldreq	r0, [pc], #768	; 78a0 <__HEAP_SIZE+0x68a0>
    789c:	13340501 	teqne	r4, #4194304	; 0x400000
    78a0:	05163505 	ldreq	r3, [r6, #-1285]	; 0xfffffafb
    78a4:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    78a8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    78ac:	00060213 	andeq	r0, r6, r3, lsl r2
    78b0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    78b4:	00020500 	andeq	r0, r2, r0, lsl #10
    78b8:	03000000 	movweq	r0, #0
    78bc:	050104ad 	streq	r0, [r1, #-1197]	; 0xfffffb53
    78c0:	2d051309 	stccs	3, cr1, [r5, #-36]	; 0xffffffdc
    78c4:	141f0514 	ldrne	r0, [pc], #-1300	; 78cc <__HEAP_SIZE+0x68cc>
    78c8:	05144405 	ldreq	r4, [r4, #-1029]	; 0xfffffbfb
    78cc:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    78d0:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    78d4:	01010001 	tsteq	r1, r1
    78d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    78dc:	00000002 	andeq	r0, r0, r2
    78e0:	04bc0300 	ldrteq	r0, [ip], #768	; 0x300
    78e4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    78e8:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    78ec:	1f05143e 	svcne	0x0005143e
    78f0:	13090514 	movwne	r0, #38164	; 0x9514
    78f4:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    78f8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    78fc:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    7900:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    7904:	056d0609 	strbeq	r0, [sp, #-1545]!	; 0xfffff9f7
    7908:	0505302a 	streq	r3, [r5, #-42]	; 0xffffffd6
    790c:	11051306 	tstne	r5, r6, lsl #6
    7910:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    7914:	01062305 	tsteq	r6, r5, lsl #6
    7918:	01000702 	tsteq	r0, r2, lsl #14
    791c:	00050501 	andeq	r0, r5, r1, lsl #10
    7920:	00000205 	andeq	r0, r0, r5, lsl #4
    7924:	d4030000 	strle	r0, [r3], #-0
    7928:	01060104 	tsteq	r6, r4, lsl #2
    792c:	2f060905 	svccs	0x00060905
    7930:	14310513 	ldrtne	r0, [r1], #-1299	; 0xfffffaed
    7934:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7938:	0d051309 	stceq	3, cr1, [r5, #-36]	; 0xffffffdc
    793c:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    7940:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    7944:	053f1905 	ldreq	r1, [pc, #-2309]!	; 7047 <__HEAP_SIZE+0x6047>
    7948:	05280609 	streq	r0, [r8, #-1545]!	; 0xfffff9f7
    794c:	09053033 	stmdbeq	r5, {r0, r1, r4, r5, ip, sp}
    7950:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7954:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    7958:	02202e78 	eoreq	r2, r0, #120, 28	; 0x780
    795c:	01010001 	tsteq	r1, r1
    7960:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7964:	00000002 	andeq	r0, r0, r2
    7968:	04f00300 	ldrbteq	r0, [r0], #768	; 0x300
    796c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7970:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    7974:	09051432 	stmdbeq	r5, {r1, r4, r5, sl, ip}
    7978:	06240514 			; <UNDEFINED> instruction: 0x06240514
    797c:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    7980:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    7984:	13060505 	movwne	r0, #25861	; 0x6505
    7988:	01000102 	tsteq	r0, r2, lsl #2
    798c:	00050501 	andeq	r0, r5, r1, lsl #10
    7990:	00000205 	andeq	r0, r0, r5, lsl #4
    7994:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    7998:	09050104 	stmdbeq	r5, {r2, r8}
    799c:	31051313 	tstcc	r5, r3, lsl r3
    79a0:	141f0514 	ldrne	r0, [pc], #-1300	; 79a8 <__HEAP_SIZE+0x69a8>
    79a4:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    79a8:	09051433 	stmdbeq	r5, {r0, r1, r4, r5, sl, ip}
    79ac:	06050514 			; <UNDEFINED> instruction: 0x06050514
    79b0:	01022013 	tsteq	r2, r3, lsl r0
    79b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    79b8:	02050009 	andeq	r0, r5, #9
    79bc:	00000000 	andeq	r0, r0, r0
    79c0:	01059003 	tsteq	r5, r3
    79c4:	13130d05 	tstne	r3, #320	; 0x140
    79c8:	05144705 	ldreq	r4, [r4, #-1797]	; 0xfffff8fb
    79cc:	0d051433 	cfstrseq	mvf1, [r5, #-204]	; 0xffffff34
    79d0:	061a0514 			; <UNDEFINED> instruction: 0x061a0514
    79d4:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    79d8:	41061105 	tstmi	r6, r5, lsl #2
    79dc:	01062105 	tsteq	r6, r5, lsl #2
    79e0:	21061105 	tstcs	r6, r5, lsl #2
    79e4:	01061905 	tsteq	r6, r5, lsl #18
    79e8:	39052420 	stmdbcc	r5, {r5, sl, sp}
    79ec:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    79f0:	06090514 			; <UNDEFINED> instruction: 0x06090514
    79f4:	00010213 	andeq	r0, r1, r3, lsl r2
    79f8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    79fc:	00020500 	andeq	r0, r2, r0, lsl #10
    7a00:	03000000 	movweq	r0, #0
    7a04:	050105ad 	streq	r0, [r1, #-1453]	; 0xfffffa53
    7a08:	2c051309 	stccs	3, cr1, [r5], {9}
    7a0c:	141f0514 	ldrne	r0, [pc], #-1300	; 7a14 <__HEAP_SIZE+0x6a14>
    7a10:	05143b05 	ldreq	r3, [r4, #-2821]	; 0xfffff4fb
    7a14:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7a18:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    7a1c:	01010001 	tsteq	r1, r1
    7a20:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7a24:	00000002 	andeq	r0, r0, r2
    7a28:	098a0300 	stmibeq	sl, {r8, r9}
    7a2c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7a30:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    7a34:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    7a38:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7a3c:	300d0515 	andcc	r0, sp, r5, lsl r5
    7a40:	01061a05 	tsteq	r6, r5, lsl #20
    7a44:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    7a48:	09053e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, ip, sp}
    7a4c:	33052706 	movwcc	r2, #22278	; 0x5706
    7a50:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    7a54:	13060505 	movwne	r0, #25861	; 0x6505
    7a58:	78031905 	stmdavc	r3, {r0, r2, r8, fp, ip}
    7a5c:	0102202e 	tsteq	r2, lr, lsr #32
    7a60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7a64:	02050005 	andeq	r0, r5, #5
    7a68:	00000000 	andeq	r0, r0, r0
    7a6c:	0109a703 	tsteq	r9, r3, lsl #14
    7a70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7a74:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    7a78:	1f05142f 	svcne	0x0005142f
    7a7c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7a80:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    7a84:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7a88:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    7a8c:	09053032 	stmdbeq	r5, {r1, r4, r5, ip, sp}
    7a90:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7a94:	01002e13 	tsteq	r0, r3, lsl lr
    7a98:	00050501 	andeq	r0, r5, r1, lsl #10
    7a9c:	00000205 	andeq	r0, r0, r5, lsl #4
    7aa0:	bd030000 	stclt	0, cr0, [r3, #-0]
    7aa4:	01060109 	tsteq	r6, r9, lsl #2
    7aa8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    7aac:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    7ab0:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7ab4:	300d0514 	andcc	r0, sp, r4, lsl r5
    7ab8:	01062005 	tsteq	r6, r5
    7abc:	22060905 	andcs	r0, r6, #81920	; 0x14000
    7ac0:	05302705 	ldreq	r2, [r0, #-1797]!	; 0xfffff8fb
    7ac4:	20130605 	andscs	r0, r3, r5, lsl #12
    7ac8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7acc:	02050009 	andeq	r0, r5, #9
    7ad0:	00000000 	andeq	r0, r0, r0
    7ad4:	0109d403 	tsteq	r9, r3, lsl #8
    7ad8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7adc:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    7ae0:	0d05147f 	cfstrseq	mvf1, [r5, #-508]	; 0xfffffe04
    7ae4:	06210516 			; <UNDEFINED> instruction: 0x06210516
    7ae8:	0d052e01 	stceq	14, cr2, [r5, #-4]
    7aec:	3f052106 	svccc	0x00052106
    7af0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7af4:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7af8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7afc:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7b00:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b04:	17052206 	strne	r2, [r5, -r6, lsl #4]
    7b08:	202e0106 	eorcs	r0, lr, r6, lsl #2
    7b0c:	3e066105 	adfccs	f6, f6, f5
    7b10:	05134105 	ldreq	r4, [r3, #-261]	; 0xfffffefb
    7b14:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    7b18:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    7b1c:	01010002 	tsteq	r1, r2
    7b20:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    7b24:	00000002 	andeq	r0, r0, r2
    7b28:	09f20300 	ldmibeq	r2!, {r8, r9}^
    7b2c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7b30:	134b060d 	movtne	r0, #46605	; 0xb60d
    7b34:	05146b05 	ldreq	r6, [r4, #-2821]	; 0xfffff4fb
    7b38:	0d051728 	stceq	7, cr1, [r5, #-160]	; 0xffffff60
    7b3c:	06210516 			; <UNDEFINED> instruction: 0x06210516
    7b40:	0d052e01 	stceq	14, cr2, [r5, #-4]
    7b44:	3f052106 	svccc	0x00052106
    7b48:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b4c:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7b50:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b54:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7b58:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b5c:	17052206 	strne	r2, [r5, -r6, lsl #4]
    7b60:	202e0106 	eorcs	r0, lr, r6, lsl #2
    7b64:	3e065805 	cdpcc	8, 0, cr5, cr6, cr5, {0}
    7b68:	05133a05 	ldreq	r3, [r3, #-2565]	; 0xfffff5fb
    7b6c:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    7b70:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    7b74:	01010002 	tsteq	r1, r2
    7b78:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7b7c:	00000002 	andeq	r0, r0, r2
    7b80:	0ab20300 	beq	fec88788 <__StackTop+0xc6b88788>
    7b84:	13090501 	movwne	r0, #38145	; 0x9501
    7b88:	01061505 	tsteq	r6, r5, lsl #10
    7b8c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    7b90:	01061a05 	tsteq	r6, r5, lsl #20
    7b94:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    7b98:	01010005 	tsteq	r1, r5
    7b9c:	0000074d 	andeq	r0, r0, sp, asr #14
    7ba0:	022a0003 	eoreq	r0, sl, #3
    7ba4:	01020000 	mrseq	r0, (UNDEF: 2)
    7ba8:	000d0efb 	strdeq	r0, [sp], -fp
    7bac:	01010101 	tsteq	r1, r1, lsl #2
    7bb0:	01000000 	mrseq	r0, (UNDEF: 0)
    7bb4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    7bb8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7bbc:	2f2e2e2f 	svccs	0x002e2e2f
    7bc0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    7bc4:	2f736f74 	svccs	0x00736f74
    7bc8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    7bcc:	534f5452 	movtpl	r5, #62546	; 0xf452
    7bd0:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    7bd4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    7bd8:	654d2f65 	strbvs	r2, [sp, #-3941]	; 0xfffff09b
    7bdc:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
    7be0:	3a630067 	bcc	18c7d84 <__RAM_SIZE+0x17c7d84>
    7be4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    7be8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    7bec:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7bf0:	6f72705c 	svcvs	0x0072705c
    7bf4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    7bf8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7bfc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7c00:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7c04:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7c08:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7c0c:	61652d65 	cmnvs	r5, r5, ror #26
    7c10:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7c14:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7c18:	31323032 	teqcc	r2, r2, lsr r0
    7c1c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    7c20:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    7c24:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7c28:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7c2c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7c30:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7c34:	30315c69 	eorscc	r5, r1, r9, ror #24
    7c38:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    7c3c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7c40:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7c44:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7c48:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7c4c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7c50:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7c54:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7c58:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7c5c:	5f6d7261 	svcpl	0x006d7261
    7c60:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7c64:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7c68:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7c6c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7c70:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7c74:	30312d69 	eorscc	r2, r1, r9, ror #26
    7c78:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7c7c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7c80:	615c3031 	cmpvs	ip, r1, lsr r0
    7c84:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7c88:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7c8c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7c90:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7c94:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7c98:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    7c9c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    7ca0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7ca4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7ca8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7cac:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7cb0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7cb4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7cb8:	5f6d7261 	svcpl	0x006d7261
    7cbc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7cc0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7cc4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7cc8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7ccc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7cd0:	30312d69 	eorscc	r2, r1, r9, ror #26
    7cd4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7cd8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7cdc:	615c3031 	cmpvs	ip, r1, lsr r0
    7ce0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7ce4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7ce8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7cec:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7cf0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7cf4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    7cf8:	2f2e2e00 	svccs	0x002e2e00
    7cfc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7d00:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    7d04:	6f747262 	svcvs	0x00747262
    7d08:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    7d0c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    7d10:	702f534f 	eorvc	r5, pc, pc, asr #6
    7d14:	6174726f 	cmnvs	r4, pc, ror #4
    7d18:	2f656c62 	svccs	0x00656c62
    7d1c:	2f434347 	svccs	0x00434347
    7d20:	5f4d5241 	svcpl	0x004d5241
    7d24:	33334d43 	teqcc	r3, #4288	; 0x10c0
    7d28:	5a544e5f 	bpl	151b6ac <__RAM_SIZE+0x141b6ac>
    7d2c:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    7d30:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    7d34:	00657275 	rsbeq	r7, r5, r5, ror r2
    7d38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7d3c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7d40:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7d44:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7d48:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7d4c:	4f545265 	svcmi	0x00545265
    7d50:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    7d54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7d58:	68000065 	stmdavs	r0, {r0, r2, r5, r6}
    7d5c:	5f706165 	svcpl	0x00706165
    7d60:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    7d64:	73000001 	movwvc	r0, #1
    7d68:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    7d6c:	00682e66 	rsbeq	r2, r8, r6, ror #28
    7d70:	5f000002 	svcpl	0x00000002
    7d74:	61666564 	cmnvs	r6, r4, ror #10
    7d78:	5f746c75 	svcpl	0x00746c75
    7d7c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7d80:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7d84:	5f000003 	svcpl	0x00000003
    7d88:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    7d8c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    7d90:	00000400 	andeq	r0, r0, r0, lsl #8
    7d94:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7d98:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    7d9c:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 7be8 <__HEAP_SIZE+0x6be8>
    7da0:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    7da4:	00050068 	andeq	r0, r5, r8, rrx
    7da8:	726f7000 	rsbvc	r7, pc, #0
    7dac:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    7db0:	00682e65 	rsbeq	r2, r8, r5, ror #28
    7db4:	74000006 	strvc	r0, [r0], #-6
    7db8:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    7dbc:	00060068 	andeq	r0, r6, r8, rrx
    7dc0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    7dc4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    7dc8:	003e6e69 	eorseq	r6, lr, r9, ror #28
    7dcc:	00000000 	andeq	r0, r0, r0
    7dd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7dd4:	00316802 	eorseq	r6, r1, r2, lsl #16
    7dd8:	03bc0310 			; <UNDEFINED> instruction: 0x03bc0310
    7ddc:	13050501 	movwne	r0, #21761	; 0x5501
    7de0:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    7de4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    7de8:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    7dec:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7df0:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    7df4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7df8:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    7dfc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7e00:	052f0609 	streq	r0, [pc, #-1545]!	; 77ff <__HEAP_SIZE+0x67ff>
    7e04:	3b010618 	blcc	4966c <__HEAP_SIZE+0x4866c>
    7e08:	03060505 	movweq	r0, #25861	; 0x6505
    7e0c:	1c05200c 	stcne	0, cr2, [r5], {12}
    7e10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e14:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    7e18:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e1c:	12053206 	andne	r3, r5, #1610612736	; 0x60000000
    7e20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e24:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    7e28:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e2c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    7e30:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e34:	0b052f06 	bleq	153a54 <__RAM_SIZE+0x53a54>
    7e38:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e3c:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    7e40:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e44:	1c052106 	stfnes	f2, [r5], {6}
    7e48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e4c:	05132406 	ldreq	r2, [r3, #-1030]	; 0xfffffbfa
    7e50:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    7e54:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    7e58:	27052106 	strcs	r2, [r5, -r6, lsl #2]
    7e5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e60:	24052306 	strcs	r2, [r5], #-774	; 0xfffffcfa
    7e64:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7e68:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    7e6c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7e70:	0c052f01 	stceq	15, cr2, [r5], {1}
    7e74:	02205703 	eoreq	r5, r0, #786432	; 0xc0000
    7e78:	0101000d 	tsteq	r1, sp
    7e7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7e80:	0031c002 	eorseq	ip, r1, r2
    7e84:	03ec0310 	mvneq	r0, #16, 6	; 0x40000000
    7e88:	13050501 	movwne	r0, #21761	; 0x5501
    7e8c:	15051613 	strne	r1, [r5, #-1555]	; 0xfffff9ed
    7e90:	20050106 	andcs	r0, r5, r6, lsl #2
    7e94:	01040200 	mrseq	r0, R12_usr
    7e98:	05052006 	streq	r2, [r5, #-6]
    7e9c:	01040200 	mrseq	r0, R12_usr
    7ea0:	33062e06 	movwcc	r2, #28166	; 0x6e06
    7ea4:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    7ea8:	05141705 	ldreq	r1, [r4, #-1797]	; 0xfffff8fb
    7eac:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7eb0:	0705200f 	streq	r2, [r5, -pc]
    7eb4:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    7eb8:	17050535 	smladxne	r5, r5, r5, r0
    7ebc:	06200514 			; <UNDEFINED> instruction: 0x06200514
    7ec0:	200f0501 	andcs	r0, pc, r1, lsl #10
    7ec4:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    7ec8:	0f030609 	svceq	0x00030609
    7ecc:	062a052e 	strteq	r0, [sl], -lr, lsr #10
    7ed0:	06050501 	streq	r0, [r5], -r1, lsl #10
    7ed4:	06070527 	streq	r0, [r7], -r7, lsr #10
    7ed8:	06090501 	streq	r0, [r9], -r1, lsl #10
    7edc:	06250530 			; <UNDEFINED> instruction: 0x06250530
    7ee0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    7ee4:	03090524 	movweq	r0, #38180	; 0x9524
    7ee8:	32052058 	andcc	r2, r5, #88	; 0x58
    7eec:	20050106 	andcs	r0, r5, r6, lsl #2
    7ef0:	06090520 	streq	r0, [r9], -r0, lsr #10
    7ef4:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    7ef8:	03010501 	movweq	r0, #5377	; 0x1501
    7efc:	09052e69 	stmdbeq	r5, {r0, r3, r5, r6, r9, sl, fp, sp}
    7f00:	20240306 	eorcs	r0, r4, r6, lsl #6
    7f04:	01064605 	tsteq	r6, r5, lsl #12
    7f08:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    7f0c:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    7f10:	05010664 	streq	r0, [r1, #-1636]	; 0xfffff99c
    7f14:	0d052029 	stceq	0, cr2, [r5, #-164]	; 0xffffff5c
    7f18:	30052f06 	andcc	r2, r5, r6, lsl #30
    7f1c:	68050106 	stmdavs	r5, {r1, r2, r8}
    7f20:	202e0520 	eorcs	r0, lr, r0, lsr #10
    7f24:	03060505 	movweq	r0, #25861	; 0x6505
    7f28:	07052010 	smladeq	r5, r0, r0, r2
    7f2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f30:	25053006 	strcs	r3, [r5, #-6]
    7f34:	21050106 	tstcs	r5, r6, lsl #2
    7f38:	01052406 	tsteq	r5, r6, lsl #8
    7f3c:	0d051406 	cfstrseq	mvf1, [r5, #-24]	; 0xffffffe8
    7f40:	3c6c0306 	stclcc	3, cr0, [ip], #-24	; 0xffffffe8
    7f44:	01062e05 	tsteq	r6, r5, lsl #28
    7f48:	0006022e 	andeq	r0, r6, lr, lsr #4
    7f4c:	01050101 	tsteq	r5, r1, lsl #2
    7f50:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    7f54:	03100032 	tsteq	r0, #50	; 0x32
    7f58:	060101ad 	streq	r0, [r1], -sp, lsr #3
    7f5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    7f60:	13131321 	tstne	r3, #-2080374784	; 0x84000000
    7f64:	07051413 	smladeq	r5, r3, r4, r1
    7f68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f6c:	0b053206 	bleq	15478c <__RAM_SIZE+0x5478c>
    7f70:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7f74:	19053e06 	stmdbne	r5, {r1, r2, r9, sl, fp, ip, sp}
    7f78:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7f7c:	0f052406 	svceq	0x00052406
    7f80:	11050106 	tstne	r5, r6, lsl #2
    7f84:	29053f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    7f88:	11050106 	tstne	r5, r6, lsl #2
    7f8c:	15053006 	strne	r3, [r5, #-6]
    7f90:	13050106 	movwne	r0, #20742	; 0x5106
    7f94:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7f98:	06210530 			; <UNDEFINED> instruction: 0x06210530
    7f9c:	19052001 	stmdbne	r5, {r0, sp}
    7fa0:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    7fa4:	05250621 	streq	r0, [r5, #-1569]!	; 0xfffff9df
    7fa8:	09051505 	stmdbeq	r5, {r0, r2, r8, sl, ip}
    7fac:	06130532 			; <UNDEFINED> instruction: 0x06130532
    7fb0:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    7fb4:	26062505 	strcs	r2, [r6], -r5, lsl #10
    7fb8:	05190905 	ldreq	r0, [r9, #-2309]	; 0xfffff6fb
    7fbc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7fc0:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    7fc4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7fc8:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    7fcc:	25052e01 	strcs	r2, [r5, #-3585]	; 0xfffff1ff
    7fd0:	01040200 	mrseq	r0, R12_usr
    7fd4:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    7fd8:	19051332 	stmdbne	r5, {r1, r4, r5, r8, r9, ip}
    7fdc:	36050106 	strcc	r0, [r5], -r6, lsl #2
    7fe0:	11052f06 	tstne	r5, r6, lsl #30
    7fe4:	06160514 			; <UNDEFINED> instruction: 0x06160514
    7fe8:	03210501 			; <UNDEFINED> instruction: 0x03210501
    7fec:	05202053 	streq	r2, [r0, #-83]!	; 0xffffffad
    7ff0:	1803060d 	stmdane	r3, {r0, r2, r3, r9, sl}
    7ff4:	06250520 	strteq	r0, [r5], -r0, lsr #10
    7ff8:	053c1703 	ldreq	r1, [ip, #-1795]!	; 0xfffff8fd
    7ffc:	3a05211d 	bcc	150478 <__RAM_SIZE+0x50478>
    8000:	16052106 	strne	r2, [r5], -r6, lsl #2
    8004:	0621050e 	strteq	r0, [r1], -lr, lsl #10
    8008:	20160501 	andscs	r0, r6, r1, lsl #10
    800c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    8010:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    8014:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    8018:	11052001 	tstne	r5, r1
    801c:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    8020:	01061d05 	tsteq	r6, r5, lsl #26
    8024:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    8028:	05320615 	ldreq	r0, [r2, #-1557]!	; 0xfffff9eb
    802c:	0501063d 	streq	r0, [r1, #-1597]	; 0xfffff9c3
    8030:	3b05201e 	blcc	1500b0 <__RAM_SIZE+0x500b0>
    8034:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    8038:	063f0516 			; <UNDEFINED> instruction: 0x063f0516
    803c:	20360501 	eorscs	r0, r6, r1, lsl #10
    8040:	24066905 	strcs	r6, [r6], #-2309	; 0xfffff6fb
    8044:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    8048:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    804c:	1705202f 	strne	r2, [r5, -pc, lsr #32]
    8050:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    8054:	06280534 			; <UNDEFINED> instruction: 0x06280534
    8058:	06690501 	strbteq	r0, [r9], -r1, lsl #10
    805c:	16190521 	ldrne	r0, [r9], -r1, lsr #10
    8060:	01063405 	tsteq	r6, r5, lsl #8
    8064:	21061905 	tstcs	r6, r5, lsl #18
    8068:	01062d05 	tsteq	r6, r5, lsl #26
    806c:	23061905 	movwcs	r1, #26885	; 0x6905
    8070:	01064a05 	tsteq	r6, r5, lsl #20
    8074:	05203905 	streq	r3, [r0, #-2309]!	; 0xfffff6fb
    8078:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    807c:	0501063a 	streq	r0, [r1, #-1594]	; 0xfffff9c6
    8080:	05240631 	streq	r0, [r4, #-1585]!	; 0xfffff9cf
    8084:	33051515 	movwcc	r1, #21781	; 0x5515
    8088:	29050106 	stmdbcs	r5, {r1, r2, r8}
    808c:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    8090:	062d053e 			; <UNDEFINED> instruction: 0x062d053e
    8094:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    8098:	30061905 	andcc	r1, r6, r5, lsl #18
    809c:	01063805 	tsteq	r6, r5, lsl #16
    80a0:	32063105 	andcc	r3, r6, #1073741825	; 0x40000001
    80a4:	3d171505 	cfldr32cc	mvfx1, [r7, #-20]	; 0xffffffec
    80a8:	01062e05 	tsteq	r6, r5, lsl #28
    80ac:	2f061505 	svccs	0x00061505
    80b0:	01063305 	tsteq	r6, r5, lsl #6
    80b4:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    80b8:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    80bc:	0505152d 	streq	r1, [r5, #-1325]	; 0xfffffad3
    80c0:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    80c4:	065a0501 	ldrbeq	r0, [sl], -r1, lsl #10
    80c8:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    80cc:	01051305 	tsteq	r5, r5, lsl #6
    80d0:	0c051306 	stceq	3, cr1, [r5], {6}
    80d4:	2e7ed903 	vaddcs.f16	s27, s28, s6	; <UNPREDICTABLE>
    80d8:	000c0266 	andeq	r0, ip, r6, ror #4
    80dc:	01050101 	tsteq	r5, r1, lsl #2
    80e0:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    80e4:	03100032 	tsteq	r0, #50	; 0x32
    80e8:	050102dc 	streq	r0, [r1, #-732]	; 0xfffffd24
    80ec:	14131305 	ldrne	r1, [r3], #-773	; 0xfffffcfb
    80f0:	01060705 	tsteq	r6, r5, lsl #14
    80f4:	051c0105 	ldreq	r0, [ip, #-261]	; 0xfffffefb
    80f8:	05360609 	ldreq	r0, [r6, #-1545]!	; 0xfffff9f7
    80fc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    8100:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    8104:	3e05142d 	cdpcc	4, 0, cr1, cr5, cr13, {1}
    8108:	13380513 	teqne	r8, #79691776	; 0x4c00000
    810c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    8110:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    8114:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    8118:	17053006 	strne	r3, [r5, -r6]
    811c:	0f050106 	svceq	0x00050106
    8120:	0301052e 	movweq	r0, #5422	; 0x152e
    8124:	11052024 	tstne	r5, r4, lsr #32
    8128:	20600306 	rsbcs	r0, r0, r6, lsl #6
    812c:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    8130:	32053115 	andcc	r3, r5, #1073741829	; 0x40000005
    8134:	29050106 	stmdbcs	r5, {r1, r2, r8}
    8138:	0638052e 	ldrteq	r0, [r8], -lr, lsr #10
    813c:	1315054b 	tstne	r5, #314572800	; 0x12c00000
    8140:	062d053d 			; <UNDEFINED> instruction: 0x062d053d
    8144:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8148:	061a054c 	ldreq	r0, [sl], -ip, asr #10
    814c:	06250501 	strteq	r0, [r5], -r1, lsl #10
    8150:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    8154:	20150601 	andscs	r0, r5, r1, lsl #12
    8158:	01000502 	tsteq	r0, r2, lsl #10
    815c:	00010501 	andeq	r0, r1, r1, lsl #10
    8160:	00000205 	andeq	r0, r0, r5, lsl #4
    8164:	97030000 	strls	r0, [r3, -r0]
    8168:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    816c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8170:	00060213 	andeq	r0, r6, r3, lsl r2
    8174:	01050101 	tsteq	r5, r1, lsl #2
    8178:	00020500 	andeq	r0, r2, r0, lsl #10
    817c:	03000000 	movweq	r0, #0
    8180:	0501039d 	streq	r0, [r1, #-925]	; 0xfffffc63
    8184:	01051305 	tsteq	r5, r5, lsl #6
    8188:	06021306 	streq	r1, [r2], -r6, lsl #6
    818c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8190:	02050001 	andeq	r0, r5, #1
    8194:	00000000 	andeq	r0, r0, r0
    8198:	0103a303 	tsteq	r3, r3, lsl #6
    819c:	00010214 	andeq	r0, r1, r4, lsl r2
    81a0:	01050101 	tsteq	r5, r1, lsl #2
    81a4:	00020500 	andeq	r0, r2, r0, lsl #10
    81a8:	03000000 	movweq	r0, #0
    81ac:	060103aa 	streq	r0, [r1], -sl, lsr #7
    81b0:	06050501 	streq	r0, [r5], -r1, lsl #10
    81b4:	09051421 	stmdbeq	r5, {r0, r5, sl, ip}
    81b8:	00580106 	subseq	r0, r8, r6, lsl #2
    81bc:	20010402 	andcs	r0, r1, r2, lsl #8
    81c0:	0e052206 	cdpeq	2, 0, cr2, cr5, cr6, {0}
    81c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    81c8:	0b055a06 	bleq	15e9e8 <__RAM_SIZE+0x5e9e8>
    81cc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    81d0:	16053006 	strne	r3, [r5], -r6
    81d4:	01050106 	tsteq	r5, r6, lsl #2
    81d8:	0c052e4f 	stceq	14, cr2, [r5], {79}	; 0x4f
    81dc:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    81e0:	0c030605 	stceq	6, cr0, [r3], {5}
    81e4:	060c0520 	streq	r0, [ip], -r0, lsr #10
    81e8:	00010201 	andeq	r0, r1, r1, lsl #4
    81ec:	01050101 	tsteq	r5, r1, lsl #2
    81f0:	00020500 	andeq	r0, r2, r0, lsl #10
    81f4:	03000000 	movweq	r0, #0
    81f8:	060104b0 			; <UNDEFINED> instruction: 0x060104b0
    81fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    8200:	0514132f 	ldreq	r1, [r4, #-815]	; 0xfffffcd1
    8204:	11053009 	tstne	r5, r9
    8208:	09050106 	stmdbeq	r5, {r1, r2, r8}
    820c:	0b053206 	bleq	154a2c <__RAM_SIZE+0x54a2c>
    8210:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    8214:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    8218:	0c052e19 	stceq	14, cr2, [r5], {25}
    821c:	2e270520 	cfsh64cs	mvdx0, mvdx7, #16
    8220:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    8224:	0505200c 	streq	r2, [r5, #-12]
    8228:	20200306 	eorcs	r0, r0, r6, lsl #6
    822c:	01060e05 	tsteq	r6, r5, lsl #28
    8230:	30060505 	andcc	r0, r6, r5, lsl #10
    8234:	01063105 	tsteq	r6, r5, lsl #2
    8238:	21060505 	tstcs	r6, r5, lsl #10
    823c:	01063205 	tsteq	r6, r5, lsl #4
    8240:	21060505 	tstcs	r6, r5, lsl #10
    8244:	01062605 	tsteq	r6, r5, lsl #12
    8248:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    824c:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    8250:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    8254:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8258:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    825c:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8260:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    8264:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8268:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    826c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    8270:	052f0601 	streq	r0, [pc, #-1537]!	; 7c77 <__HEAP_SIZE+0x6c77>
    8274:	6e030611 	mcrvs	6, 0, r0, cr3, cr1, {0}
    8278:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    827c:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    8280:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    8284:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    8288:	11052e12 	tstne	r5, r2, lsl lr
    828c:	18053206 	stmdane	r5, {r1, r2, r9, ip, sp}
    8290:	11050106 	tstne	r5, r6, lsl #2
    8294:	1c052206 	sfmne	f2, 4, [r5], {6}
    8298:	13050106 	movwne	r0, #20742	; 0x5106
    829c:	301e0520 	andscc	r0, lr, r0, lsr #10
    82a0:	23061105 	movwcs	r1, #24837	; 0x6105
    82a4:	01061305 	tsteq	r6, r5, lsl #6
    82a8:	20301e05 	eorscs	r1, r0, r5, lsl #28
    82ac:	01000d02 	tsteq	r0, r2, lsl #26
    82b0:	00010501 	andeq	r0, r1, r1, lsl #10
    82b4:	00000205 	andeq	r0, r0, r5, lsl #4
    82b8:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    82bc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    82c0:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
    82c4:	06050501 	streq	r0, [r5], -r1, lsl #10
    82c8:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    82cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    82d0:	0624052f 	strteq	r0, [r4], -pc, lsr #10
    82d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    82d8:	0624052f 	strteq	r0, [r4], -pc, lsr #10
    82dc:	06050501 	streq	r0, [r5], -r1, lsl #10
    82e0:	061e052f 	ldreq	r0, [lr], -pc, lsr #10
    82e4:	2f010501 	svccs	0x00010501
    82e8:	01000b02 	tsteq	r0, r2, lsl #22
    82ec:	0005f201 	andeq	pc, r5, r1, lsl #4
    82f0:	8d000300 	stchi	3, cr0, [r0, #-0]
    82f4:	02000001 	andeq	r0, r0, #1
    82f8:	0d0efb01 	vstreq	d15, [lr, #-4]
    82fc:	01010100 	mrseq	r0, (UNDEF: 17)
    8300:	00000001 	andeq	r0, r0, r1
    8304:	01000001 	tsteq	r0, r1
    8308:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    830c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8310:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8314:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    8318:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    831c:	4f545265 	svcmi	0x00545265
    8320:	6f702f53 	svcvs	0x00702f53
    8324:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    8328:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    832c:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    8330:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    8334:	5f33334d 	svcpl	0x0033334d
    8338:	2f5a544e 	svccs	0x005a544e
    833c:	5f6e6f6e 	svcpl	0x006e6f6e
    8340:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    8344:	63006572 	movwvs	r6, #1394	; 0x572
    8348:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    834c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8350:	6f646978 	svcvs	0x00646978
    8354:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8358:	6172676f 	cmnvs	r2, pc, ror #14
    835c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8360:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8364:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8368:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    836c:	6f6e2d6d 	svcvs	0x006e2d6d
    8370:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8374:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8378:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    837c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8380:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8384:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8388:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    838c:	61652d65 	cmnvs	r5, r5, ror #26
    8390:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8394:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8398:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    839c:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    83a0:	6300656e 	movwvs	r6, #1390	; 0x56e
    83a4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    83a8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    83ac:	6f646978 	svcvs	0x00646978
    83b0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    83b4:	6172676f 	cmnvs	r2, pc, ror #14
    83b8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    83bc:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    83c0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    83c4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    83c8:	6f6e2d6d 	svcvs	0x006e2d6d
    83cc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    83d0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    83d4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    83d8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    83dc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    83e0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    83e4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    83e8:	61652d65 	cmnvs	r5, r5, ror #26
    83ec:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    83f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    83f4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    83f8:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    83fc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8400:	2f2e2e2f 	svccs	0x002e2e2f
    8404:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    8408:	2f736f74 	svccs	0x00736f74
    840c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    8410:	534f5452 	movtpl	r5, #62546	; 0xf452
    8414:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    8418:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    841c:	6f700000 	svcvs	0x00700000
    8420:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    8424:	00000100 	andeq	r0, r0, r0, lsl #2
    8428:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    842c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8430:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    8434:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    8438:	00000200 	andeq	r0, r0, r0, lsl #4
    843c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    8440:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    8444:	00030068 	andeq	r0, r3, r8, rrx
    8448:	6f727000 	svcvs	0x00727000
    844c:	6665646a 	strbtvs	r6, [r5], -sl, ror #8
    8450:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8454:	70000004 	andvc	r0, r0, r4
    8458:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    845c:	6f726361 	svcvs	0x00726361
    8460:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    8464:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    8468:	00000100 	andeq	r0, r0, r0, lsl #2
    846c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    8470:	2e6d7361 	cdpcs	3, 6, cr7, cr13, cr1, {3}
    8474:	00010068 	andeq	r0, r1, r8, rrx
    8478:	73617400 	cmnvc	r1, #0, 8
    847c:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    8480:	00000004 	andeq	r0, r0, r4
    8484:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8488:	00334802 	eorseq	r4, r3, r2, lsl #16
    848c:	06a60310 	ssateq	r0, #7, r0, lsl #6
    8490:	2f050501 	svccs	0x00050501
    8494:	01061705 	tsteq	r6, r5, lsl #14
    8498:	35062e05 	strcc	r2, [r6, #-3589]	; 0xfffff1fb
    849c:	30130505 	andscc	r0, r3, r5, lsl #10
    84a0:	01040200 	mrseq	r0, R12_usr
    84a4:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    84a8:	0402000a 	streq	r0, [r2], #-10
    84ac:	01770301 	cmneq	r7, r1, lsl #6
    84b0:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    84b4:	01060104 	tsteq	r6, r4, lsl #2
    84b8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    84bc:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    84c0:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
    84c4:	01000302 	tsteq	r0, r2, lsl #6
    84c8:	00050501 	andeq	r0, r5, r1, lsl #10
    84cc:	33600205 	cmncc	r0, #1342177280	; 0x50000000
    84d0:	af031000 	svcge	0x00031000
    84d4:	01060104 	tsteq	r6, r4, lsl #2
    84d8:	21060905 	tstcs	r6, r5, lsl #18
    84dc:	1f051513 	svcne	0x00051513
    84e0:	0b050106 	bleq	148900 <__RAM_SIZE+0x48900>
    84e4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    84e8:	322f2143 	eorcc	r2, pc, #-1073741808	; 0xc0000010
    84ec:	01060d05 	tsteq	r6, r5, lsl #26
    84f0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    84f4:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    84f8:	bf030605 	svclt	0x00030605
    84fc:	0d052001 	stceq	0, cr2, [r5, #-4]
    8500:	7ec90306 	cdpvc	3, 12, cr0, cr9, cr6, {0}
    8504:	06270520 	strteq	r0, [r7], -r0, lsr #10
    8508:	060d0501 	streq	r0, [sp], -r1, lsl #10
    850c:	06250551 			; <UNDEFINED> instruction: 0x06250551
    8510:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8514:	060f0522 	streq	r0, [pc], -r2, lsr #10
    8518:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    851c:	06290522 	strteq	r0, [r9], -r2, lsr #10
    8520:	0d052001 	stceq	0, cr2, [r5, #-4]
    8524:	20090306 	andcs	r0, r9, r6, lsl #6
    8528:	01066705 	tsteq	r6, r5, lsl #14
    852c:	05205105 	streq	r5, [r0, #-261]!	; 0xfffffefb
    8530:	0d052e1b 	stceq	14, cr2, [r5, #-108]	; 0xffffff94
    8534:	13053006 	movwne	r3, #20486	; 0x5006
    8538:	0f050106 	svceq	0x00050106
    853c:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    8540:	0627053e 			; <UNDEFINED> instruction: 0x0627053e
    8544:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8548:	061f0567 	ldreq	r0, [pc], -r7, ror #10
    854c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8550:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    8554:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    8558:	30061105 	andcc	r1, r6, r5, lsl #2
    855c:	01061f05 	tsteq	r6, r5, lsl #30
    8560:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    8564:	01062705 	tsteq	r6, r5, lsl #14
    8568:	40060d05 	andmi	r0, r6, r5, lsl #26
    856c:	01063005 	tsteq	r6, r5
    8570:	31060d05 	tstcc	r6, r5, lsl #26
    8574:	01062705 	tsteq	r6, r5, lsl #14
    8578:	51060d05 	tstpl	r6, r5, lsl #26
    857c:	05133e05 	ldreq	r3, [r3, #-3589]	; 0xfffff1fb
    8580:	0f05140d 	svceq	0x0005140d
    8584:	11050106 	tstne	r5, r6, lsl #2
    8588:	212f2206 			; <UNDEFINED> instruction: 0x212f2206
    858c:	05313d05 	ldreq	r3, [r1, #-3333]!	; 0xfffff2fb
    8590:	2f21170d 	svccs	0x0021170d
    8594:	032f2134 			; <UNDEFINED> instruction: 0x032f2134
    8598:	27052e09 	strcs	r2, [r5, -r9, lsl #28]
    859c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    85a0:	13054d06 	movwne	r4, #23814	; 0x5d06
    85a4:	0f050106 	svceq	0x00050106
    85a8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    85ac:	4b05173e 	blmi	14e2ac <__RAM_SIZE+0x4e2ac>
    85b0:	5f050106 	svcpl	0x00050106
    85b4:	3c5d052e 	cfldr64cc	mvdx0, [sp], {46}	; 0x2e
    85b8:	05204b05 	streq	r4, [r0, #-2821]!	; 0xfffff4fb
    85bc:	11052027 	tstne	r5, r7, lsr #32
    85c0:	2d052606 	stccs	6, cr2, [r5, #-24]	; 0xffffffe8
    85c4:	13050106 	movwne	r0, #20742	; 0x5106
    85c8:	004d052e 	subeq	r0, sp, lr, lsr #10
    85cc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    85d0:	30061505 	andcc	r1, r6, r5, lsl #10
    85d4:	01062b05 	tsteq	r6, r5, lsl #22
    85d8:	23061105 	movwcs	r1, #24837	; 0x6105
    85dc:	01062b05 	tsteq	r6, r5, lsl #22
    85e0:	41061105 	tstmi	r6, r5, lsl #2
    85e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    85e8:	012d0306 			; <UNDEFINED> instruction: 0x012d0306
    85ec:	01063005 	tsteq	r6, r5
    85f0:	4b060d05 	blmi	18ba0c <__RAM_SIZE+0x8ba0c>
    85f4:	01062705 	tsteq	r6, r5, lsl #14
    85f8:	31061105 	tstcc	r6, r5, lsl #2
    85fc:	01064505 	tsteq	r6, r5, lsl #10
    8600:	053c2b05 	ldreq	r2, [ip, #-2821]!	; 0xfffff4fb
    8604:	1503060d 	strne	r0, [r3, #-1549]	; 0xfffff9f3
    8608:	05053120 	streq	r3, [r5, #-288]	; 0xfffffee0
    860c:	11052206 	tstne	r5, r6, lsl #4
    8610:	7fbe0306 	svcvc	0x00be0306
    8614:	06290520 	strteq	r0, [r9], -r0, lsr #10
    8618:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    861c:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    8620:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    8624:	11054a2e 	tstne	r5, lr, lsr #20
    8628:	27052406 	strcs	r2, [r5, -r6, lsl #8]
    862c:	11050106 	tstne	r5, r6, lsl #2
    8630:	4f053206 	svcmi	0x00053206
    8634:	6b050106 	blvs	148a54 <__RAM_SIZE+0x48a54>
    8638:	2b05202e 	blcs	1506f8 <__RAM_SIZE+0x506f8>
    863c:	08022020 	stmdaeq	r2, {r5, sp}
    8640:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8644:	02050001 	andeq	r0, r5, #1
    8648:	10003474 	andne	r3, r0, r4, ror r4
    864c:	01068a03 	tsteq	r6, r3, lsl #20
    8650:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    8654:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    8658:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    865c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    8660:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8664:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    8668:	0c030605 	stceq	6, cr0, [r3], {5}
    866c:	061f053c 			; <UNDEFINED> instruction: 0x061f053c
    8670:	06050501 	streq	r0, [r5], -r1, lsl #10
    8674:	0628054b 	strteq	r0, [r8], -fp, asr #10
    8678:	06050501 	streq	r0, [r5], -r1, lsl #10
    867c:	061f0531 			; <UNDEFINED> instruction: 0x061f0531
    8680:	06050501 	streq	r0, [r5], -r1, lsl #10
    8684:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    8688:	2f010501 	svccs	0x00010501
    868c:	01000b02 	tsteq	r0, r2, lsl #22
    8690:	00010501 	andeq	r0, r1, r1, lsl #10
    8694:	34b00205 	ldrtcc	r0, [r0], #517	; 0x205
    8698:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
    869c:	05050107 	streq	r0, [r5, #-263]	; 0xfffffef9
    86a0:	061b0514 			; <UNDEFINED> instruction: 0x061b0514
    86a4:	06050501 	streq	r0, [r5], -r1, lsl #10
    86a8:	01052f6a 	tsteq	r5, sl, ror #30
    86ac:	01022f06 	tsteq	r2, r6, lsl #30
    86b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    86b4:	02050001 	andeq	r0, r5, #1
    86b8:	100034c8 	andne	r3, r0, r8, asr #9
    86bc:	0107da03 	tsteq	r7, r3, lsl #20
    86c0:	2f210505 	svccs	0x00210505
    86c4:	01061605 	tsteq	r6, r5, lsl #12
    86c8:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    86cc:	0601052f 	streq	r0, [r1], -pc, lsr #10
    86d0:	0003022f 	andeq	r0, r3, pc, lsr #4
    86d4:	01050101 	tsteq	r5, r1, lsl #2
    86d8:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    86dc:	03100034 	tsteq	r0, #52	; 0x34
    86e0:	050107e6 	streq	r0, [r1, #-2022]	; 0xfffff81a
    86e4:	05052126 	streq	r2, [r5, #-294]	; 0xfffffeda
    86e8:	06160513 			; <UNDEFINED> instruction: 0x06160513
    86ec:	06050501 	streq	r0, [r5], -r1, lsl #10
    86f0:	061b054c 	ldreq	r0, [fp], -ip, asr #10
    86f4:	20070501 	andcs	r0, r7, r1, lsl #10
    86f8:	05240105 	streq	r0, [r4, #-261]!	; 0xfffffefb
    86fc:	051e0609 	ldreq	r0, [lr, #-1545]	; 0xfffff9f7
    8700:	023e0601 	eorseq	r0, lr, #1048576	; 0x100000
    8704:	01010003 	tsteq	r1, r3
    8708:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    870c:	00350002 	eorseq	r0, r5, r2
    8710:	07f20310 			; <UNDEFINED> instruction: 0x07f20310
    8714:	21050501 	tstcs	r5, r1, lsl #10
    8718:	06160514 			; <UNDEFINED> instruction: 0x06160514
    871c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    8720:	1509053d 	strne	r0, [r9, #-1341]	; 0xfffffac3
    8724:	01060d05 	tsteq	r6, r5, lsl #26
    8728:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    872c:	05220629 	streq	r0, [r2, #-1577]!	; 0xfffff9d7
    8730:	2305140d 	movwcs	r1, #21517	; 0x540d
    8734:	1c050106 	stfnes	f0, [r5], {6}
    8738:	05056a06 	streq	r6, [r5, #-2566]	; 0xfffff5fa
    873c:	06010515 			; <UNDEFINED> instruction: 0x06010515
    8740:	0100203d 	tsteq	r0, sp, lsr r0
    8744:	00010501 	andeq	r0, r1, r1, lsl #10
    8748:	35220205 	strcc	r0, [r2, #-517]!	; 0xfffffdfb
    874c:	89031000 	stmdbhi	r3, {ip}
    8750:	01060108 	tsteq	r6, r8, lsl #2
    8754:	03060505 	movweq	r0, #25861	; 0x6505
    8758:	0903200f 	stmdbeq	r3, {r0, r1, r2, r3, sp}
    875c:	0a051601 	beq	14df68 <__RAM_SIZE+0x4df68>
    8760:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8764:	11052106 	tstne	r5, r6, lsl #2
    8768:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    876c:	01053006 	tsteq	r5, r6
    8770:	00db0306 	sbcseq	r0, fp, r6, lsl #6
    8774:	060d052e 	streq	r0, [sp], -lr, lsr #10
    8778:	2f206603 	svccs	0x00206603
    877c:	17032405 	strne	r2, [r3, -r5, lsl #8]
    8780:	06010501 	streq	r0, [r1], -r1, lsl #10
    8784:	00010214 	andeq	r0, r1, r4, lsl r2
    8788:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    878c:	38020500 	stmdacc	r2, {r8, sl}
    8790:	03100035 	tsteq	r0, #53	; 0x35
    8794:	06010c85 	streq	r0, [r1], -r5, lsl #25
    8798:	060d0501 	streq	r0, [sp], -r1, lsl #10
    879c:	13201b03 			; <UNDEFINED> instruction: 0x13201b03
    87a0:	01061b05 	tsteq	r6, r5, lsl #22
    87a4:	4b060d05 	blmi	18bbc0 <__RAM_SIZE+0x8bbc0>
    87a8:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87ac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87b0:	1d05132f 	stcne	3, cr1, [r5, #-188]	; 0xffffff44
    87b4:	1b050106 	blne	148bd4 <__RAM_SIZE+0x48bd4>
    87b8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    87bc:	1b05132f 	blne	14d480 <__RAM_SIZE+0x4d480>
    87c0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    87c4:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    87c8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    87cc:	134b060d 	movtne	r0, #46605	; 0xb60d
    87d0:	01061b05 	tsteq	r6, r5, lsl #22
    87d4:	4b060d05 	blmi	18bbf0 <__RAM_SIZE+0x8bbf0>
    87d8:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87dc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87e0:	1b05134b 	blne	14d514 <__RAM_SIZE+0x4d514>
    87e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    87e8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    87ec:	2e01061b 	mcrcs	6, 0, r0, cr1, cr11, {0}
    87f0:	2f060d05 	svccs	0x00060d05
    87f4:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87f8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87fc:	1b05134b 	blne	14d530 <__RAM_SIZE+0x4d530>
    8800:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8804:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8808:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    880c:	134b060d 	movtne	r0, #46605	; 0xb60d
    8810:	01061b05 	tsteq	r6, r5, lsl #22
    8814:	4b060d05 	blmi	18bc30 <__RAM_SIZE+0x8bc30>
    8818:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    881c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8820:	1b05134b 	blne	14d554 <__RAM_SIZE+0x4d554>
    8824:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8828:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    882c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8830:	134b060d 	movtne	r0, #46605	; 0xb60d
    8834:	01061b05 	tsteq	r6, r5, lsl #22
    8838:	4b060d05 	blmi	18bc54 <__RAM_SIZE+0x8bc54>
    883c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8840:	06090501 	streq	r0, [r9], -r1, lsl #10
    8844:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    8848:	20130605 	andscs	r0, r3, r5, lsl #12
    884c:	01000502 	tsteq	r0, r2, lsl #10
    8850:	00010501 	andeq	r0, r1, r1, lsl #10
    8854:	35c80205 	strbcc	r0, [r8, #517]	; 0x205
    8858:	d5031000 	strle	r1, [r3, #-0]
    885c:	0905010c 	stmdbeq	r5, {r2, r3, r8}
    8860:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    8864:	010f034d 	tsteq	pc, sp, asr #6
    8868:	05135305 	ldreq	r5, [r3, #-773]	; 0xfffffcfb
    886c:	00d00305 	sbcseq	r0, r0, r5, lsl #6
    8870:	06180501 	ldreq	r0, [r8], -r1, lsl #10
    8874:	06050501 	streq	r0, [r5], -r1, lsl #10
    8878:	06180583 	ldreq	r0, [r8], -r3, lsl #11
    887c:	06050501 	streq	r0, [r5], -r1, lsl #10
    8880:	06180567 	ldreq	r0, [r8], -r7, ror #10
    8884:	06050501 	streq	r0, [r5], -r1, lsl #10
    8888:	313c0b03 	teqcc	ip, r3, lsl #22
    888c:	01061705 	tsteq	r6, r5, lsl #14
    8890:	03060505 	movweq	r0, #25861	; 0x6505
    8894:	2f362e09 	svccs	0x00362e09
    8898:	06010531 			; <UNDEFINED> instruction: 0x06010531
    889c:	00040213 	andeq	r0, r4, r3, lsl r2
    88a0:	01050101 	tsteq	r5, r1, lsl #2
    88a4:	00020500 	andeq	r0, r2, r0, lsl #10
    88a8:	03000000 	movweq	r0, #0
    88ac:	05010dee 	streq	r0, [r1, #-3566]	; 0xfffff212
    88b0:	01051530 	tsteq	r5, r0, lsr r5
    88b4:	01021306 	tsteq	r2, r6, lsl #6
    88b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    88bc:	02050001 	andeq	r0, r5, #1
    88c0:	00000000 	andeq	r0, r0, r0
    88c4:	010faf03 	tsteq	pc, r3, lsl #30
    88c8:	13130505 	tstne	r3, #20971520	; 0x1400000
    88cc:	07053017 	smladeq	r5, r7, r0, r3
    88d0:	11050106 	tstne	r5, r6, lsl #2
    88d4:	05053222 	streq	r3, [r5, #-546]	; 0xfffffdde
    88d8:	01052306 	tsteq	r5, r6, lsl #6
    88dc:	01021306 	tsteq	r2, r6, lsl #6
    88e0:	3b010100 	blcc	48ce8 <__HEAP_SIZE+0x47ce8>
    88e4:	03000002 	movweq	r0, #2
    88e8:	00014900 	andeq	r4, r1, r0, lsl #18
    88ec:	fb010200 	blx	490f6 <__HEAP_SIZE+0x480f6>
    88f0:	01000d0e 	tsteq	r0, lr, lsl #26
    88f4:	00010101 	andeq	r0, r1, r1, lsl #2
    88f8:	00010000 	andeq	r0, r1, r0
    88fc:	2e2e0100 	sufcse	f0, f6, f0
    8900:	2f2e2e2f 	svccs	0x002e2e2f
    8904:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8854 <__HEAP_SIZE+0x7854>
    8908:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    890c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    8910:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    8914:	2f534f54 	svccs	0x00534f54
    8918:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    891c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    8920:	4343472f 	movtmi	r4, #14127	; 0x372f
    8924:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    8928:	334d435f 	movtcc	r4, #54111	; 0xd35f
    892c:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    8930:	6f6e2f5a 	svcvs	0x006e2f5a
    8934:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    8938:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    893c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8940:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8944:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8948:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    894c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8950:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8954:	5f6d7261 	svcpl	0x006d7261
    8958:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    895c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8960:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8964:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8968:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    896c:	30312d69 	eorscc	r2, r1, r9, ror #26
    8970:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8974:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8978:	615c3031 	cmpvs	ip, r1, lsr r0
    897c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8980:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8984:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8988:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    898c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8990:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    8994:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    8998:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    899c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    89a0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    89a4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    89a8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    89ac:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    89b0:	5f6d7261 	svcpl	0x006d7261
    89b4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    89b8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    89bc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    89c0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    89c4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    89c8:	30312d69 	eorscc	r2, r1, r9, ror #26
    89cc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    89d0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    89d4:	615c3031 	cmpvs	ip, r1, lsr r0
    89d8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    89dc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    89e0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    89e4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    89e8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    89ec:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    89f0:	6f700000 	svcvs	0x00700000
    89f4:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    89f8:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    89fc:	5f000001 	svcpl	0x00000001
    8a00:	61666564 	cmnvs	r6, r4, ror #10
    8a04:	5f746c75 	svcpl	0x00746c75
    8a08:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    8a0c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8a10:	5f000002 	svcpl	0x00000002
    8a14:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    8a18:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    8a1c:	00000300 	andeq	r0, r0, r0, lsl #6
    8a20:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    8a24:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    8a28:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 8874 <__HEAP_SIZE+0x7874>
    8a2c:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    8a30:	00010068 	andeq	r0, r1, r8, rrx
    8a34:	05050000 	streq	r0, [r5, #-0]
    8a38:	08020500 	stmdaeq	r2, {r8, sl}
    8a3c:	03100036 	tsteq	r0, #54	; 0x36
    8a40:	050100f9 	streq	r0, [r1, #-249]	; 0xffffff07
    8a44:	05051309 	streq	r1, [r5, #-777]	; 0xfffffcf7
    8a48:	08130306 	ldmdaeq	r3, {r1, r2, r8, r9}
    8a4c:	0003022e 	andeq	r0, r3, lr, lsr #4
    8a50:	01050101 	tsteq	r5, r1, lsl #2
    8a54:	00020500 	andeq	r0, r2, r0, lsl #10
    8a58:	03000000 	movweq	r0, #0
    8a5c:	05010193 	streq	r0, [r1, #-403]	; 0xfffffe6d
    8a60:	01051305 	tsteq	r5, r5, lsl #6
    8a64:	820c0306 	andhi	r0, ip, #402653184	; 0x18000000
    8a68:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8a6c:	02050001 	andeq	r0, r5, #1
    8a70:	00000000 	andeq	r0, r0, r0
    8a74:	0101a403 	tsteq	r1, r3, lsl #8
    8a78:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8a7c:	0a030601 	beq	ca288 <__HEAP_SIZE+0xc9288>
    8a80:	01010074 	tsteq	r1, r4, ror r0
    8a84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8a88:	00000002 	andeq	r0, r0, r2
    8a8c:	01b30300 			; <UNDEFINED> instruction: 0x01b30300
    8a90:	13050501 	movwne	r0, #21761	; 0x5501
    8a94:	03060105 	movweq	r0, #24837	; 0x6105
    8a98:	0100740a 	tsteq	r0, sl, lsl #8
    8a9c:	00010501 	andeq	r0, r1, r1, lsl #10
    8aa0:	36340205 	ldrtcc	r0, [r4], -r5, lsl #4
    8aa4:	c2031000 	andgt	r1, r3, #0
    8aa8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8aac:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ab0:	02c81003 	sbceq	r1, r8, #3
    8ab4:	01010003 	tsteq	r1, r3
    8ab8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8abc:	00365402 	eorseq	r5, r6, r2, lsl #8
    8ac0:	01d70310 	bicseq	r0, r7, r0, lsl r3
    8ac4:	13050501 	movwne	r0, #21761	; 0x5501
    8ac8:	03060105 	movweq	r0, #24837	; 0x6105
    8acc:	0100ac0c 	tsteq	r0, ip, lsl #24
    8ad0:	00010501 	andeq	r0, r1, r1, lsl #10
    8ad4:	366a0205 	strbtcc	r0, [sl], -r5, lsl #4
    8ad8:	e8031000 	stmda	r3, {ip}
    8adc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8ae0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ae4:	00740a03 	rsbseq	r0, r4, r3, lsl #20
    8ae8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8aec:	78020500 	stmdavc	r2, {r8, sl}
    8af0:	03100036 	tsteq	r0, #54	; 0x36
    8af4:	050102eb 	streq	r0, [r1, #-747]	; 0xfffffd15
    8af8:	05051309 	streq	r1, [r5, #-777]	; 0xfffffcf7
    8afc:	022d0306 	eoreq	r0, sp, #402653184	; 0x18000000
    8b00:	02020122 	andeq	r0, r2, #-2147483640	; 0x80000008
    8b04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8b08:	02050005 	andeq	r0, r5, #5
    8b0c:	100036c0 	andne	r3, r0, r0, asr #13
    8b10:	0103c703 	tsteq	r3, r3, lsl #14
    8b14:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    8b18:	0b030605 	bleq	ca334 <__HEAP_SIZE+0xc9334>
    8b1c:	00030290 	muleq	r3, r0, r2
    8b20:	00820101 	addeq	r0, r2, r1, lsl #2
    8b24:	00030000 	andeq	r0, r3, r0
    8b28:	00000036 	andeq	r0, r0, r6, lsr r0
    8b2c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8b30:	0101000d 	tsteq	r1, sp
    8b34:	00000101 	andeq	r0, r0, r1, lsl #2
    8b38:	00000100 	andeq	r0, r0, r0, lsl #2
    8b3c:	732f2e01 			; <UNDEFINED> instruction: 0x732f2e01
    8b40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    8b44:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    8b48:	00006363 	andeq	r6, r0, r3, ror #6
    8b4c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    8b50:	5f707574 	svcpl	0x00707574
    8b54:	434d5241 	movtmi	r5, #53825	; 0xd241
    8b58:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
    8b5c:	00010073 	andeq	r0, r1, r3, ror r0
    8b60:	05000000 	streq	r0, [r0, #-0]
    8b64:	0036f802 	eorseq	pc, r6, r2, lsl #16
    8b68:	00d30310 	sbcseq	r0, r3, r0, lsl r3
    8b6c:	21302101 	teqcs	r0, r1, lsl #2
    8b70:	2130362f 	teqcs	r0, pc, lsr #12
    8b74:	21212123 			; <UNDEFINED> instruction: 0x21212123
    8b78:	21232121 			; <UNDEFINED> instruction: 0x21232121
    8b7c:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    8b80:	23212321 			; <UNDEFINED> instruction: 0x23212321
    8b84:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8b88:	21212321 			; <UNDEFINED> instruction: 0x21212321
    8b8c:	23212221 			; <UNDEFINED> instruction: 0x23212221
    8b90:	032e0e03 			; <UNDEFINED> instruction: 0x032e0e03
    8b94:	af032009 	svcge	0x00032009
    8b98:	03312e7f 	teqeq	r1, #2032	; 0x7f0
    8b9c:	032f2e0c 			; <UNDEFINED> instruction: 0x032f2e0c
    8ba0:	022f2e15 	eoreq	r2, pc, #336	; 0x150
    8ba4:	01010002 	tsteq	r1, r2
    8ba8:	0000007f 	andeq	r0, r0, pc, ror r0
    8bac:	004e0003 	subeq	r0, lr, r3
    8bb0:	01020000 	mrseq	r0, (UNDEF: 2)
    8bb4:	000d0efb 	strdeq	r0, [sp], -fp
    8bb8:	01010101 	tsteq	r1, r1, lsl #2
    8bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    8bc0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8bc4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8bc8:	2f2e2e2f 	svccs	0x002e2e2f
    8bcc:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    8bd0:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    8bd4:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    8bd8:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    8bdc:	2f706d75 	svccs	0x00706d75
    8be0:	2f757063 	svccs	0x00757063
    8be4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    8be8:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    8bec:	00003333 	andeq	r3, r0, r3, lsr r3
    8bf0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8bf4:	63672d74 	cmnvs	r7, #116, 26	; 0x1d00
    8bf8:	00732e63 	rsbseq	r2, r3, r3, ror #28
    8bfc:	00000001 	andeq	r0, r0, r1
    8c00:	68020500 	stmdavs	r2, {r8, sl}
    8c04:	03100037 	tsteq	r0, #55	; 0x37
    8c08:	21210119 			; <UNDEFINED> instruction: 0x21210119
    8c0c:	2f222121 	svccs	0x00222121
    8c10:	21212f22 			; <UNDEFINED> instruction: 0x21212f22
    8c14:	2f302321 	svccs	0x00302321
    8c18:	21312f21 	teqcs	r1, r1, lsr #30
    8c1c:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    8c20:	03302e65 	teqeq	r0, #1616	; 0x650
    8c24:	02022e16 	andeq	r2, r2, #352	; 0x160
    8c28:	Address 0x00008c28 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	53434344 	movtpl	r4, #13124	; 0x3344
       4:	61700057 	cmnvs	r0, r7, asr r0
        xReturn = pdFALSE;
       8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
}
       c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	625f5f00 	subsvs	r5, pc, #0, 30
}
      14:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
        if(ch == '\n' || it >= size) {
      18:	705f6e69 	subsvc	r6, pc, r9, ror #28
}
      1c:	00737475 	rsbseq	r7, r3, r5, ror r4
      20:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
      24:	48637500 	stmdami	r3!, {r8, sl, ip, sp, lr}^
      28:	00706165 	rsbseq	r6, r0, r5, ror #2
      2c:	41464d4d 	cmpmi	r6, sp, asr #26
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	2074726f 	rsbscs	r7, r4, pc, ror #4
      38:	00746e69 	rsbseq	r6, r4, r9, ror #28
      3c:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
      40:	616d0031 	cmnvs	sp, r1, lsr r0
        BaseType_t xReturn = pdFAIL;
      44:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 4c <__STACKSEAL_SIZE+0x4c>
    }
      48:	006b7361 	rsbeq	r7, fp, r1, ror #6
        for (int i = 0; i < count; i++) {
      4c:	505f4449 	subspl	r4, pc, r9, asr #8
        printf("] \r\n");
      50:	76005246 	strvc	r5, [r0], -r6, asr #4
}
      54:	6b736154 	blvs	1cd85ac <__RAM_SIZE+0x1bd85ac>
      58:	616c6544 	cmnvs	ip, r4, asr #10
      5c:	616d0079 	smcvs	53257	; 0xd009
      60:	6c006e69 	stcvs	14, cr6, [r0], {105}	; 0x69
      64:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      68:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
      6c:	5f00656c 	svcpl	0x0000656c
      70:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
      74:	5f323374 	svcpl	0x00323374
      78:	43440074 	movtmi	r0, #16500	; 0x4074
      7c:	564d4943 	strbpl	r4, [sp], -r3, asr #18
            prvUnlockQueue( pxQueue );
      80:	6d004341 	stcvs	3, cr4, [r0, #-260]	; 0xfffffefc
            ( void ) xTaskResumeAll();
      84:	5f6e6961 	svcpl	0x006e6961
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	6b736174 	blvs	1cd8660 <__RAM_SIZE+0x1bd8660>
      8c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
      90:	50430074 	subpl	r0, r3, r4, ror r0
        taskENTER_CRITICAL();
      94:	00444955 	subeq	r4, r4, r5, asr r9
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	61760030 	cmnvs	r6, r0, lsr r0
      a0:	0065756c 	rsbeq	r7, r5, ip, ror #10
                else if( xEntryTimeSet == pdFALSE )
      a4:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
        taskEXIT_CRITICAL();
      a8:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
        vTaskSuspendAll();
      ac:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
      b4:	53455200 	movtpl	r5, #20992	; 0x5200
      b8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
      bc:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
      c0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
      c4:	36444556 			; <UNDEFINED> instruction: 0x36444556
      c8:	73657400 	cmnvc	r5, #0, 8
      cc:	74003174 	strvc	r3, [r0], #-372	; 0xfffffe8c
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
      d4:	73657400 	cmnvc	r5, #0, 8
      d8:	53003374 	movwpl	r3, #884	; 0x374
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00524954 	subseq	r4, r2, r4, asr r9
      e0:	415f4449 	cmpmi	pc, r9, asr #8
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	66005246 	strvs	r5, [r0], -r6, asr #4
      e8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
      f0:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
                prvUnlockQueue( pxQueue );
      f4:	6174735f 	cmnvs	r4, pc, asr r3
      f8:	705f6b63 	subsvc	r6, pc, r3, ror #22
                if( xTaskResumeAll() == pdFALSE )
      fc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     100:	49434400 	stmdbmi	r3, {sl, lr}^
                    taskYIELD_WITHIN_API();
     104:	48005753 	stmdami	r0, {r0, r1, r4, r6, r8, r9, sl, ip, lr}
                    if( xInheritanceOccurred != pdFALSE )
     108:	46647261 	strbtmi	r7, [r4], -r1, ror #4
                return errQUEUE_EMPTY;
     10c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
                        taskENTER_CRITICAL();
     110:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     118:	67654c5f 			; <UNDEFINED> instruction: 0x67654c5f
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
                        taskEXIT_CRITICAL();
     120:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     124:	6c003252 	sfmvs	f3, 4, [r0], {82}	; 0x52
     128:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     12c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     130:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     134:	41464200 	mrsmi	r4, (UNDEF: 102)
     138:	54760052 	ldrbtpl	r0, [r6], #-82	; 0xffffffae
     13c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
     140:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     144:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     148:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     14c:	2f2e0072 	svccs	0x002e0072
     150:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     154:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     158:	2f6e6f69 	svccs	0x006e6f69
     15c:	6e69616d 	powvsez	f6, f1, #5.0
     160:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
     164:	4d4d5f44 	stclmi	15, cr5, [sp, #-272]	; 0xfffffef0
     168:	74005246 	strvc	r5, [r0], #-582	; 0xfffffdba
     16c:	61546b73 	cmpvs	r4, r3, ror fp
     170:	6f436b73 	svcvs	0x00436b73
     174:	6f72746e 	svcvs	0x0072746e
     178:	6f6c426c 	svcvs	0x006c426c
     17c:	5f006b63 	svcpl	0x00006b63
     180:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     184:	745f3874 	ldrbvc	r3, [pc], #-2164	; 18c <__STACKSEAL_SIZE+0x18c>
     188:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     18c:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     190:	2e303120 	rsfcssp	f3, f0, f0
     194:	20312e33 	eorscs	r2, r1, r3, lsr lr
     198:	31323032 	teqcc	r2, r2, lsr r0
     19c:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
     1a0:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     1a4:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     1a8:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
     1ac:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
     1b0:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
     1b4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     1b8:	2033336d 	eorscs	r3, r3, sp, ror #6
     1bc:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
     1c0:	70663d75 	rsbvc	r3, r6, r5, ror sp
     1c4:	732d3576 			; <UNDEFINED> instruction: 0x732d3576
     1c8:	31642d70 	smccc	17104	; 0x42d0
     1cc:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
     1d0:	616f6c66 	cmnvs	pc, r6, ror #24
     1d4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
     1d8:	61683d69 	cmnvs	r8, r9, ror #26
     1dc:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
     1e0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
     1e4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
     1e8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     1ec:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
     1f0:	2d38766d 	ldccs	6, cr7, [r8, #-436]!	; 0xfffffe4c
     1f4:	616d2e6d 	cmnvs	sp, sp, ror #28
     1f8:	642b6e69 	strtvs	r6, [fp], #-3689	; 0xfffff197
     1fc:	662b7073 			; <UNDEFINED> instruction: 0x662b7073
     200:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
     204:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
     208:	66726177 			; <UNDEFINED> instruction: 0x66726177
     20c:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     210:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
     214:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
     218:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
     21c:	6f697463 	svcvs	0x00697463
     220:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     224:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
     228:	6f697463 	svcvs	0x00697463
     22c:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
     230:	6f697463 	svcvs	0x00697463
     234:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     238:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; a8 <__STACKSEAL_SIZE+0xa8>
     23c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
     240:	6f697470 	svcvs	0x00697470
     244:	6600736e 	strvs	r7, [r0], -lr, ror #6
     248:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     24c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     250:	61635f70 	smcvs	13808	; 0x35f0
     254:	74736c6c 	ldrbtvc	r6, [r3], #-3180	; 0xfffff394
     258:	006b6361 	rsbeq	r6, fp, r1, ror #6
     25c:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     260:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     264:	554c4c41 	strbpl	r4, [ip, #-3137]	; 0xfffff3bf
     268:	49434400 	stmdbmi	r3, {sl, lr}^
     26c:	4341564d 	movtmi	r5, #5709	; 0x164d
     270:	736e7500 	cmnvc	lr, #0, 10
     274:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     278:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     27c:	49007261 	stmdbmi	r0, {r0, r5, r6, r9, ip, sp, lr}
     280:	564d4943 	strbpl	r4, [sp], -r3, asr #18
     284:	6d005541 	cfstr32vs	mvfx5, [r0, #-260]	; 0xfffffefc
     288:	5f6e6961 	svcpl	0x006e6961
     28c:	6b736174 	blvs	1cd8864 <__RAM_SIZE+0x1bd8864>
     290:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     294:	49007972 	stmdbmi	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
     298:	53495f44 	movtpl	r5, #40772	; 0x9f44
     29c:	66005241 	strvs	r5, [r0], -r1, asr #4
     2a0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     2a4:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     2a8:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     2ac:	53007469 	movwpl	r7, #1129	; 0x469
     2b0:	545f4243 	ldrbpl	r4, [pc], #-579	; 2b8 <__STACKSEAL_SIZE+0x2b8>
     2b4:	00657079 	rsbeq	r7, r5, r9, ror r0
     2b8:	52504853 	subspl	r4, r0, #5439488	; 0x530000
     2bc:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     2c0:	6f6c2067 	svcvs	0x006c2067
     2c4:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
     2c8:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     2cc:	2064656e 	rsbcs	r6, r4, lr, ror #10
     2d0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     2d4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     2d8:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
     2dc:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
     2e0:	72745f6e 	rsbsvc	r5, r4, #440	; 0x1b8
     2e4:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
     2e8:	61540072 	cmpvs	r4, r2, ror r0
     2ec:	61486b73 	hvcvs	34483	; 0x86b3
     2f0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     2f4:	5300745f 	movwpl	r7, #1119	; 0x45f
     2f8:	00525346 	subseq	r5, r2, r6, asr #6
     2fc:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     300:	00434156 	subeq	r4, r3, r6, asr r1
     304:	53434853 	movtpl	r4, #14419	; 0x3853
     308:	5f5f0052 	svcpl	0x005f0052
     30c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     310:	43005f5f 	movwmi	r5, #3935	; 0xf5f
     314:	4c455353 	mcrrmi	3, 5, r5, r5, cr3
     318:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     31c:	2074726f 	rsbscs	r7, r4, pc, ror #4
     320:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     324:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     328:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     32c:	53434300 	movtpl	r4, #13056	; 0x3300
     330:	00524449 	subseq	r4, r2, r9, asr #8
     334:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     338:	00554156 	subseq	r4, r5, r6, asr r1
     33c:	61666544 	cmnvs	r6, r4, asr #10
     340:	5f746c75 	svcpl	0x00746c75
     344:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     348:	0072656c 	rsbseq	r6, r2, ip, ror #10
     34c:	524f5456 	subpl	r5, pc, #1442840576	; 0x56000000
     350:	53464400 	movtpl	r4, #25600	; 0x6400
     354:	61750052 	cmnvs	r5, r2, asr r0
     358:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     35c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     360:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     364:	6572436b 	ldrbvs	r4, [r2, #-875]!	; 0xfffffc95
     368:	00657461 	rsbeq	r7, r5, r1, ror #8
     36c:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     370:	53455200 	movtpl	r5, #20992	; 0x5200
     374:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     378:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     37c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     380:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     384:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     388:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     38c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     390:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     394:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     398:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     39c:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     3a0:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     3a4:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     3a8:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     3ac:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     3b0:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     3b4:	706d5c73 	rsbvc	r5, sp, r3, ror ip
     3b8:	612d3273 			; <UNDEFINED> instruction: 0x612d3273
     3bc:	3530356e 	ldrcc	r3, [r0, #-1390]!	; 0xfffffa92
     3c0:	6572465c 	ldrbvs	r4, [r2, #-1628]!	; 0xfffff9a4
     3c4:	4f545265 	svcmi	0x00545265
     3c8:	46530053 			; <UNDEFINED> instruction: 0x46530053
     3cc:	66005241 	strvs	r5, [r0], -r1, asr #4
     3d0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     3d4:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
     3d8:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
     3dc:	72745f6f 	rsbsvc	r5, r4, #444	; 0x1bc
     3e0:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
     3e4:	43440072 	movtmi	r0, #16498	; 0x4072
     3e8:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
     3ec:	53455200 	movtpl	r5, #20992	; 0x5200
     3f0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3f4:	43003744 	movwmi	r3, #1860	; 0x744
     3f8:	5244494c 	subpl	r4, r4, #76, 18	; 0x130000
     3fc:	756f6300 	strbvc	r6, [pc, #-768]!	; 104 <__STACKSEAL_SIZE+0x104>
     400:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
     404:	30747365 	rsbscc	r7, r4, r5, ror #6
     408:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     40c:	645f746c 	ldrbvs	r7, [pc], #-1132	; 414 <__STACKSEAL_SIZE+0x414>
     410:	5f706d75 	svcpl	0x00706d75
     414:	735f6d62 	cmpvc	pc, #6272	; 0x1880
     418:	6b636174 	blvs	18d89f0 <__RAM_SIZE+0x17d89f0>
     41c:	6174735f 	cmnvs	r4, pc, asr r3
     420:	74007472 	strvc	r7, [r0], #-1138	; 0xfffffb8e
     424:	34747365 	ldrbtcc	r7, [r4], #-869	; 0xfffffc9b
     428:	73657400 	cmnvc	r5, #0, 8
     42c:	41003574 	tstmi	r0, r4, ror r5
     430:	00525346 	subseq	r5, r2, r6, asr #6
     434:	41495042 	cmpmi	r9, r2, asr #32
     438:	49004c4c 	stmdbmi	r0, {r2, r3, r6, sl, fp, lr}
     43c:	46445f44 	strbmi	r5, [r4], -r4, asr #30
     440:	43490052 	movtmi	r0, #36946	; 0x9052
     444:	43005253 	movwmi	r5, #595	; 0x253
     448:	52434150 	subpl	r4, r3, #80, 2
     44c:	52494100 	subpl	r4, r9, #0, 2
     450:	4e005243 	cdpmi	2, 0, cr5, cr0, cr3, {2}
     454:	52434153 	subpl	r4, r3, #-1073741804	; 0xc0000014
     458:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     45c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     460:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     464:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     468:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     46c:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     470:	334d434d 	movtcc	r4, #54093	; 0xd34d
     474:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     478:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     47c:	6f436d65 	svcvs	0x00436d65
     480:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
     484:	556b636f 	strbpl	r6, [fp, #-879]!	; 0xfffffc91
     488:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     48c:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
     490:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     494:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     498:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     49c:	5f5f006b 	svcpl	0x005f006b
     4a0:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
     4a4:	0073726f 	rsbseq	r7, r3, pc, ror #4
     4a8:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     4ac:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     4b0:	56007469 	strpl	r7, [r0], -r9, ror #8
     4b4:	4f544345 	svcmi	0x00544345
     4b8:	41545f52 	cmpmi	r4, r2, asr pc
     4bc:	5f454c42 	svcpl	0x00454c42
     4c0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     4c4:	615f5f00 	cmpvs	pc, r0, lsl #30
     4c8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4cc:	6432695f 	ldrtvs	r6, [r2], #-2399	; 0xfffff6a1
     4d0:	776f7000 	strbvc	r7, [pc, -r0]!
     4d4:	65003031 	strvs	r3, [r0, #-49]	; 0xffffffcf
     4d8:	00327078 	eorseq	r7, r2, r8, ror r0
     4dc:	5f74756f 	svcpl	0x0074756f
     4e0:	5f746366 	svcpl	0x00746366
     4e4:	70617277 	rsbvc	r7, r1, r7, ror r2
     4e8:	70786500 	rsbsvc	r6, r8, r0, lsl #10
     4ec:	006c6176 	rsbeq	r6, ip, r6, ror r1
     4f0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     4f4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     4f8:	00726566 	rsbseq	r6, r2, r6, ror #10
     4fc:	69727076 	ldmdbvs	r2!, {r1, r2, r4, r5, r6, ip, sp, lr}^
     500:	0066746e 	rsbeq	r7, r6, lr, ror #8
     504:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     508:	6d00745f 	cfstrsvs	mvf7, [r0, #-380]	; 0xfffffe84
     50c:	69776e69 	ldmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     510:	00687464 	rsbeq	r7, r8, r4, ror #8
     514:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     518:	5f696261 	svcpl	0x00696261
     51c:	76696464 	strbtvc	r6, [r9], -r4, ror #8
     520:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
     524:	7000616f 	andvc	r6, r0, pc, ror #2
     528:	635f7475 	cmpvs	pc, #1962934272	; 0x75000000
     52c:	00726168 	rsbseq	r6, r2, r8, ror #2
     530:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     534:	6168635f 	cmnvs	r8, pc, asr r3
     538:	616d0072 	smcvs	53250	; 0xd002
     53c:	7a697378 	bvc	1a5d324 <__RAM_SIZE+0x195d324>
     540:	68770065 	ldmdavs	r7!, {r0, r2, r5, r6}^
     544:	00656c6f 	rsbeq	r6, r5, pc, ror #24
     548:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     54c:	5f696261 	svcpl	0x00696261
     550:	7a693264 	bvc	1a4cee8 <__RAM_SIZE+0x194cee8>
     554:	61726600 	cmnvs	r2, r0, lsl #12
     558:	6f5f0063 	svcvs	0x005f0063
     55c:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     560:	5f007463 	svcpl	0x00007463
     564:	6165615f 	cmnvs	r5, pc, asr r1
     568:	645f6962 	ldrbvs	r6, [pc], #-2402	; 570 <__STACKSEAL_SIZE+0x570>
     56c:	7a697532 	bvc	1a5da3c <__RAM_SIZE+0x195da3c>
     570:	61747300 	cmnvs	r4, r0, lsl #6
     574:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     578:	66007864 	strvs	r7, [r0], -r4, ror #16
     57c:	72707463 	rsbsvc	r7, r0, #1660944384	; 0x63000000
     580:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     584:	67656e00 	strbvs	r6, [r5, -r0, lsl #28]!
     588:	76697461 	strbtvc	r7, [r9], -r1, ror #8
     58c:	5f5f0065 	svcpl	0x005f0065
     590:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     594:	61645f69 	cmnvs	r4, r9, ror #30
     598:	5f006464 	svcpl	0x00006464
     59c:	5f61765f 	svcpl	0x0061765f
     5a0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     5a4:	2f2e2e00 	svccs	0x002e2e00
     5a8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     5ac:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     5b0:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
     5b4:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     5b8:	6e5f0063 	cdpvs	0, 5, cr0, cr15, cr3, {3}
     5bc:	5f616f74 	svcpl	0x00616f74
     5c0:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
     5c4:	5f007461 	svcpl	0x00007461
     5c8:	616f7466 	cmnvs	pc, r6, ror #8
     5cc:	73765f00 	cmnvc	r6, #0, 30
     5d0:	6972706e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, sp, lr}^
     5d4:	0066746e 	rsbeq	r7, r6, lr, ror #8
     5d8:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     5dc:	6c756e5f 	ldclvs	14, cr6, [r5], #-380	; 0xfffffe84
     5e0:	756f006c 	strbvc	r0, [pc, #-108]!	; 57c <__STACKSEAL_SIZE+0x57c>
     5e4:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     5e8:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     5ec:	5f006570 	svcpl	0x00006570
     5f0:	6165615f 	cmnvs	r5, pc, asr r1
     5f4:	645f6962 	ldrbvs	r6, [pc], #-2402	; 5fc <__STACKSEAL_SIZE+0x5fc>
     5f8:	67706d63 	ldrbvs	r6, [r0, -r3, ror #26]!
     5fc:	6e5f0065 	cdpvs	0, 5, cr0, cr15, cr5, {3}
     600:	5f616f74 	svcpl	0x00616f74
     604:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     608:	72707300 	rsbsvc	r7, r0, #0, 6
     60c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     610:	615f5f00 	cmpvs	pc, r0, lsl #30
     614:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     618:	3269755f 	rsbcc	r7, r9, #398458880	; 0x17c00000
     61c:	6c660064 	stclvs	0, cr0, [r6], #-400	; 0xfffffe70
     620:	00736761 	rsbseq	r6, r3, r1, ror #14
     624:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     628:	5f696261 	svcpl	0x00696261
     62c:	706d6364 	rsbvc	r6, sp, r4, ror #6
     630:	6d007467 	cfstrsvs	mvf7, [r0, #-412]	; 0xfffffe64
     634:	656c7861 	strbvs	r7, [ip, #-2145]!	; 0xfffff79f
     638:	615f006e 	cmpvs	pc, lr, rrx
     63c:	00696f74 	rsbeq	r6, r9, r4, ror pc
     640:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
     644:	6e656c6e 	cdpvs	12, 6, cr6, cr5, cr14, {3}
     648:	5f00735f 	svcpl	0x0000735f
     64c:	0070615f 	rsbseq	r6, r0, pc, asr r1
     650:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     654:	5f696261 	svcpl	0x00696261
     658:	6c756d64 	ldclvs	13, cr6, [r5], #-400	; 0xfffffe70
     65c:	6f425f00 	svcvs	0x00425f00
     660:	5f006c6f 	svcpl	0x00006c6f
     664:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     668:	5f343674 	svcpl	0x00343674
     66c:	695f0074 	ldmdbvs	pc, {r2, r4, r5, r6}^	; <UNPREDICTABLE>
     670:	69645f73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     674:	00746967 	rsbseq	r6, r4, r7, ror #18
     678:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
     67c:	615f5f00 	cmpvs	pc, r0, lsl #30
     680:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     684:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     688:	00716570 	rsbseq	r6, r1, r0, ror r5
     68c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     690:	7470746e 	ldrbtvc	r7, [r0], #-1134	; 0xfffffb92
     694:	00745f72 	rsbseq	r5, r4, r2, ror pc
     698:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     69c:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
     6a0:	6f5f0072 	svcvs	0x005f0072
     6a4:	725f7475 	subsvc	r7, pc, #1962934272	; 0x75000000
     6a8:	5f007665 	svcpl	0x00007665
     6ac:	6165615f 	cmnvs	r5, pc, asr r1
     6b0:	645f6962 	ldrbvs	r6, [pc], #-2402	; 6b8 <__STACKSEAL_SIZE+0x6b8>
     6b4:	00627573 	rsbeq	r7, r2, r3, ror r5
     6b8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     6bc:	5f696261 	svcpl	0x00696261
     6c0:	69646c75 	stmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
     6c4:	646f6d76 	strbtvs	r6, [pc], #-3446	; 6cc <__STACKSEAL_SIZE+0x6cc>
     6c8:	615f5f00 	cmpvs	pc, r0, lsl #30
     6cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6d0:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     6d4:	00656c70 	rsbeq	r6, r5, r0, ror ip
     6d8:	5f74756f 	svcpl	0x0074756f
     6dc:	5f746366 	svcpl	0x00746366
     6e0:	70617277 	rsbvc	r7, r1, r7, ror r2
     6e4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     6e8:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     6ec:	66006365 	strvs	r6, [r0], -r5, ror #6
     6f0:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     6f4:	5f5f0068 	svcpl	0x005f0068
     6f8:	63756e67 	cmnvs	r5, #1648	; 0x670
     6fc:	5f61765f 	svcpl	0x0061765f
     700:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     704:	615f5f00 	cmpvs	pc, r0, lsl #30
     708:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     70c:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     710:	00746c70 	rsbseq	r6, r4, r0, ror ip
     714:	6f746e5f 	svcvs	0x00746e5f
     718:	6f6c5f61 	svcvs	0x006c5f61
     71c:	6c5f676e 	mrrcvs	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
     720:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     724:	6c5f7369 	mrrcvs	3, 6, r7, pc, cr9	; <UNPREDICTABLE>
     728:	7270006c 	rsbsvc	r0, r0, #108	; 0x6c
     72c:	73696365 	cmnvc	r9, #-1811939327	; 0x94000001
     730:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     734:	66666964 	strbtvs	r6, [r6], -r4, ror #18
     738:	2f2e2e00 	svccs	0x002e2e00
     73c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     740:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     744:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
     748:	00632e74 	rsbeq	r2, r3, r4, ror lr
     74c:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     750:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
     754:	5f747261 	svcpl	0x00747261
     758:	76636572 			; <UNDEFINED> instruction: 0x76636572
     75c:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
     760:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     764:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
     768:	75007865 	strvc	r7, [r0, #-2149]	; 0xfffff79b
     76c:	5f747261 	svcpl	0x00747261
     770:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
     774:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
     778:	6168635f 	cmnvs	r8, pc, asr r3
     77c:	706f0072 	rsbvc	r0, pc, r2, ror r0	; <UNPREDICTABLE>
     780:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     784:	5f73695f 	svcpl	0x0073695f
     788:	6f5f6c62 	svcvs	0x005f6c62
     78c:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     790:	74730078 	ldrbtvc	r0, [r3], #-120	; 0xffffff88
     794:	5f6b6361 	svcpl	0x006b6361
     798:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     79c:	00745f65 	rsbseq	r5, r4, r5, ror #30
     7a0:	6d5f6466 	cfldrdvs	mvd6, [pc, #-408]	; 610 <__STACKSEAL_SIZE+0x610>
     7a4:	5f6e6961 	svcpl	0x006e6961
     7a8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     7ac:	75665f6b 	strbvc	r5, [r6, #-3947]!	; 0xfffff095
     7b0:	5f006c6c 	svcpl	0x00006c6c
     7b4:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     7b8:	5f363174 	svcpl	0x00363174
     7bc:	735f0074 	cmpvc	pc, #116	; 0x74
     7c0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     7c4:	6166006b 	cmnvs	r6, fp, rrx
     7c8:	5f746c75 	svcpl	0x00746c75
     7cc:	706d7564 	rsbvc	r7, sp, r4, ror #10
     7d0:	63706f5f 	cmnvs	r0, #380	; 0x17c
     7d4:	0065646f 	rsbeq	r6, r5, pc, ror #8
     7d8:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
     7dc:	006b6361 	rsbeq	r6, fp, r1, ror #6
     7e0:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     7e4:	6c00746c 	cfstrsvs	mvf7, [r0], {108}	; 0x6c
     7e8:	656b6e69 	strbvs	r6, [fp, #-3689]!	; 0xfffff197
     7ec:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     7f0:	5f6b6361 	svcpl	0x006b6361
     7f4:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     7f8:	616d5f65 	cmnvs	sp, r5, ror #30
     7fc:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
     800:	6f00745f 	svcvs	0x0000745f
     804:	646f6370 	strbtvs	r6, [pc], #-880	; 80c <__Vectors_Size+0x4c>
     808:	6f003165 	svcvs	0x00003165
     80c:	646f6370 	strbtvs	r6, [pc], #-880	; 814 <__Vectors_Size+0x54>
     810:	73003265 	movwvc	r3, #613	; 0x265
     814:	6b636174 	blvs	18d8dec <__RAM_SIZE+0x17d8dec>
     818:	6172665f 	cmnvs	r2, pc, asr r6
     81c:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 670 <__STACKSEAL_SIZE+0x670>
     820:	61756e61 	cmnvs	r5, r1, ror #28
     824:	7473006c 	ldrbtvc	r0, [r3], #-108	; 0xffffff94
     828:	5f6b6361 	svcpl	0x006b6361
     82c:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     830:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     834:	5f6b6361 	svcpl	0x006b6361
     838:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     83c:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     840:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     844:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     848:	616d5f64 	cmnvs	sp, r4, ror #30
     84c:	735f6e69 	cmpvc	pc, #1680	; 0x690
     850:	6b636174 	blvs	18d8e28 <__RAM_SIZE+0x17d8e28>
     854:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     858:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     85c:	2f2e2e2f 	svccs	0x002e2e2f
     860:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7b0 <__STACKSEAL_SIZE+0x7b0>
     864:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     868:	2f736c69 	svccs	0x00736c69
     86c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     870:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     874:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
     878:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
     87c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     880:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     884:	00632e70 	rsbeq	r2, r3, r0, ror lr
     888:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     88c:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     890:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     894:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     898:	66007265 	strvs	r7, [r0], -r5, ror #4
     89c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8a0:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     8a4:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     8a8:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
     8ac:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     8b0:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     8b4:	00747865 	rsbseq	r7, r4, r5, ror #16
     8b8:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
     8bc:	534d5f74 	movtpl	r5, #57204	; 0xdf74
     8c0:	74730050 	ldrbtvc	r0, [r3], #-80	; 0xffffffb0
     8c4:	5f6b6361 	svcpl	0x006b6361
     8c8:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     8cc:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     8d0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     8d4:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
     8d8:	00747865 	rsbseq	r7, r4, r5, ror #16
     8dc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     8e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     8e4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     8e8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     8ec:	61662f73 	smcvs	25331	; 0x62f3
     8f0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     8f4:	706d7564 	rsbvc	r7, sp, r4, ror #10
     8f8:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
     8fc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
     900:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     904:	2f33336d 	svccs	0x0033336d
     908:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     90c:	61682d74 	smcvs	33492	; 0x82d4
     910:	00632e6c 	rsbeq	r2, r3, ip, ror #28
     914:	6f437670 	svcvs	0x00437670
     918:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     91c:	0072656e 	rsbseq	r6, r2, lr, ror #10
     920:	6b636954 	blvs	18dae78 <__RAM_SIZE+0x17dae78>
     924:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     928:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     92c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     930:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     934:	4c780065 	ldclmi	0, cr0, [r8], #-404	; 0xfffffe6c
     938:	45747369 	ldrbmi	r7, [r4, #-873]!	; 0xfffffc97
     93c:	7000646e 	andvc	r6, r0, lr, ror #8
     940:	6e774f76 	mrcvs	15, 3, r4, cr7, cr6, {3}
     944:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     948:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
     94c:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
     950:	7870004d 	ldmdavc	r0!, {r0, r2, r3, r6}^
     954:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     958:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
     95c:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     960:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     964:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     968:	61697469 	cmnvs	r9, r9, ror #8
     96c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     970:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     974:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
     978:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     97c:	49664f72 	stmdbmi	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, lr}^
     980:	736d6574 	cmnvc	sp, #116, 10	; 0x1d000000
     984:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     988:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     98c:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     990:	00646e45 	rsbeq	r6, r4, r5, asr #28
     994:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
     998:	76007478 			; <UNDEFINED> instruction: 0x76007478
     99c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     9a0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     9a4:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     9a8:	78006573 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
     9ac:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     9b0:	49664f65 	stmdbmi	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, lr}^
     9b4:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
     9b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     9bc:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     9c0:	006d6574 	rsbeq	r6, sp, r4, ror r5
     9c4:	73614255 	cmnvc	r1, #1342177285	; 0x50000005
     9c8:	70795465 	rsbsvc	r5, r9, r5, ror #8
     9cc:	00745f65 	rsbseq	r5, r4, r5, ror #30
     9d0:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     9d4:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     9d8:	7000726f 	andvc	r7, r0, pc, ror #4
     9dc:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
     9e0:	70007865 	andvc	r7, r0, r5, ror #16
     9e4:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
     9e8:	756f6976 	strbvc	r6, [pc, #-2422]!	; 7a <__STACKSEAL_SIZE+0x7a>
     9ec:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     9f0:	2f2e2e2f 	svccs	0x002e2e2f
     9f4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 944 <__Vectors_Size+0x184>
     9f8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     9fc:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     a00:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     a04:	2f534f54 	svccs	0x00534f54
     a08:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     a0c:	7000632e 	andvc	r6, r0, lr, lsr #6
     a10:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     a14:	4c780074 	ldclmi	0, cr0, [r8], #-464	; 0xfffffe30
     a18:	00545349 	subseq	r5, r4, r9, asr #6
     a1c:	694c7875 	stmdbvs	ip, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
     a20:	65527473 	ldrbvs	r7, [r2, #-1139]	; 0xfffffb8d
     a24:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     a28:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     a2c:	694c7765 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     a30:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     a34:	76006d65 	strvc	r6, [r0], -r5, ror #26
     a38:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     a3c:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     a40:	76007472 			; <UNDEFINED> instruction: 0x76007472
     a44:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     a48:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
     a4c:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
     a50:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     a54:	76727000 	ldrbtvc	r7, [r2], -r0
     a58:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     a5c:	75517966 	ldrbvc	r7, [r1, #-2406]	; 0xfffff69a
     a60:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     a64:	6f437465 	svcvs	0x00437465
     a68:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     a6c:	0072656e 	rsbseq	r6, r2, lr, ror #10
     a70:	616d6553 	cmnvs	sp, r3, asr r5
     a74:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     a78:	74614465 	strbtvc	r4, [r1], #-1125	; 0xfffffb9b
     a7c:	50760061 	rsbspl	r0, r6, r1, rrx
     a80:	5974726f 	ldmdbpl	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     a84:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
     a88:	6d655300 	stclvs	3, cr5, [r5, #-0]
     a8c:	6f687061 	svcvs	0x00687061
     a90:	61446572 	hvcvs	18002	; 0x4652
     a94:	745f6174 	ldrbvc	r6, [pc], #-372	; a9c <__Vectors_Size+0x2dc>
     a98:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     a9c:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     aa0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     aa4:	65476369 	strbvs	r6, [r7, #-873]	; 0xfffffc97
     aa8:	61745374 	cmnvs	r4, r4, ror r3
     aac:	42636974 	rsbmi	r6, r3, #116, 18	; 0x1d0000
     ab0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     ab4:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
     ab8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     abc:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
     ac0:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     ac4:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     ac8:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
     acc:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     ad0:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
     ad4:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     ad8:	54780052 	ldrbtpl	r0, [r8], #-82	; 0xffffffae
     adc:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
     ae0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     ae4:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
     ae8:	6365526f 	cmnvs	r5, #-268435450	; 0xf0000006
     aec:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     af0:	48787000 	ldmdami	r8!, {ip, sp, lr}^
     af4:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
     af8:	69725072 	ldmdbvs	r2!, {r1, r4, r5, r6, ip, lr}^
     afc:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     b00:	73615479 	cmnvc	r1, #2030043136	; 0x79000000
     b04:	6b6f576b 	blvs	1bd68b8 <__RAM_SIZE+0x1ad68b8>
     b08:	70006e65 	andvc	r6, r0, r5, ror #28
     b0c:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     b10:	78007865 	stmdavc	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
     b14:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     b18:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
     b1c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b20:	54657565 	strbtpl	r7, [r5], #-1381	; 0xfffffa9b
     b24:	4d656b61 	fstmdbxmi	r5!, {d22-d69}	;@ Deprecated
     b28:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     b2c:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
     b30:	76697372 			; <UNDEFINED> instruction: 0x76697372
     b34:	51780065 	cmnpl	r8, r5, rrx
     b38:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     b3c:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     b40:	72467463 	subvc	r7, r6, #1660944384	; 0x63000000
     b44:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
     b48:	6f724674 	svcvs	0x00724674
     b4c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     b50:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b54:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     b58:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     b5c:	65536369 	ldrbvs	r6, [r3, #-873]	; 0xfffffc97
     b60:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
     b64:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     b68:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
     b6c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     b70:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
     b74:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     b78:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     b7c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     b80:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     b84:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     b88:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     b8c:	796c6574 	stmdbvc	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     b90:	61547800 	cmpvs	r4, r0, lsl #16
     b94:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
     b98:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     b9c:	6f54676e 	svcvs	0x0054676e
     ba0:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     ba4:	51787500 	cmnpl	r8, r0, lsl #10
     ba8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     bac:	63617053 	cmnvs	r1, #83	; 0x53
     bb0:	76417365 	strbvc	r7, [r1], -r5, ror #6
     bb4:	616c6961 	cmnvs	ip, r1, ror #18
     bb8:	00656c62 	rsbeq	r6, r5, r2, ror #24
     bbc:	4c785463 	cfldrdmi	mvd5, [r8], #-396	; 0xfffffe74
     bc0:	006b636f 	rsbeq	r6, fp, pc, ror #6
     bc4:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
     bc8:	6f6c6672 	svcvs	0x006c6672
     bcc:	756f4377 	strbvc	r4, [pc, #-887]!	; 85d <__Vectors_Size+0x9d>
     bd0:	7600746e 	strvc	r7, [r0], -lr, ror #8
     bd4:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     bd8:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
     bdc:	69724372 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, lr}^
     be0:	61636974 	smcvs	13972	; 0x3694
     be4:	5f5f006c 	svcpl	0x005f006c
     be8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     bec:	5f6e6974 	svcpl	0x006e6974
     bf0:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
     bf4:	78007970 	stmdavc	r0, {r4, r5, r6, r8, fp, ip, sp, lr}
     bf8:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     bfc:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
     c00:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c04:	52787500 	rsbspl	r7, r8, #0, 10
     c08:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
     c0c:	5176006e 	cmnpl	r6, lr, rrx
     c10:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c14:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
     c18:	70006574 	andvc	r6, r0, r4, ror r5
     c1c:	61655263 	cmnvs	r5, r3, ror #4
     c20:	6f724664 	svcvs	0x00724664
     c24:	7875006d 	ldmdavc	r5!, {r0, r2, r3, r5, r6}^
     c28:	65766153 	ldrbvs	r6, [r6, #-339]!	; 0xfffffead
     c2c:	746e4964 	strbtvc	r4, [lr], #-2404	; 0xfffff69c
     c30:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
     c34:	74537470 	ldrbvc	r7, [r3], #-1136	; 0xfffffb90
     c38:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     c3c:	76727000 	ldrbtvc	r7, [r2], -r0
     c40:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     c44:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     c48:	654e6573 	strbvs	r6, [lr, #-1395]	; 0xfffffa8d
     c4c:	65755177 	ldrbvs	r5, [r5, #-375]!	; 0xfffffe89
     c50:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
     c54:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     c58:	69537865 	ldmdbvs	r3, {r0, r2, r5, r6, fp, ip, sp, lr}^
     c5c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
     c60:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
     c64:	71655264 	cmnvc	r5, r4, ror #4
     c68:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
     c6c:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     c70:	5177654e 	cmnpl	r7, lr, asr #10
     c74:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c78:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     c7c:	65446575 	strbvs	r6, [r4, #-1397]	; 0xfffffa8b
     c80:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     c84:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c88:	6c437600 	mcrrvs	6, 0, r7, r3, cr0
     c8c:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     c90:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     c94:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     c98:	6b73614d 	blvs	1cd91d4 <__RAM_SIZE+0x1bd91d4>
     c9c:	76727000 	ldrbtvc	r7, [r2], -r0
     ca0:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     ca4:	45657565 	strbmi	r7, [r5, #-1381]!	; 0xfffffa9b
     ca8:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     cac:	42767000 	rsbsmi	r7, r6, #0
     cb0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     cb4:	72700072 	rsbsvc	r0, r0, #114	; 0x72
     cb8:	74654776 	strbtvc	r4, [r5], #-1910	; 0xfffff88a
     cbc:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     cc0:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     cc4:	72507469 	subsvc	r7, r0, #1761607680	; 0x69000000
     cc8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     ccc:	66417974 			; <UNDEFINED> instruction: 0x66417974
     cd0:	54726574 	ldrbtpl	r6, [r2], #-1396	; 0xfffffa8c
     cd4:	6f656d69 	svcvs	0x00656d69
     cd8:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
     cdc:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
     ce0:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     ce4:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     ce8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     cec:	65537800 	ldrbvs	r7, [r3, #-2048]	; 0xfffff800
     cf0:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     cf4:	0065726f 	rsbeq	r7, r5, pc, ror #4
     cf8:	6f507670 	svcvs	0x00507670
     cfc:	614d7472 	hvcvs	55106	; 0xd742
     d00:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     d04:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
     d08:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
     d0c:	754e7465 	strbvc	r7, [lr, #-1125]	; 0xfffffb9b
     d10:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     d14:	6154664f 	cmpvs	r4, pc, asr #12
     d18:	00736b73 	rsbseq	r6, r3, r3, ror fp
     d1c:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     d20:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
     d24:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     d28:	006c6c41 	rsbeq	r6, ip, r1, asr #24
     d2c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     d30:	65506575 	ldrbvs	r6, [r0, #-1397]	; 0xfffffa8b
     d34:	78006b65 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, fp, sp, lr}
     d38:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
     d3c:	6d695479 	cfstrdvs	mvd5, [r9, #-484]!	; 0xfffffe1c
     d40:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     d44:	61487800 	cmpvs	r8, r0, lsl #16
     d48:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d4c:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     d50:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     d54:	6d654d74 	stclvs	13, cr4, [r5, #-464]!	; 0xfffffe30
     d58:	48726562 	ldmdami	r2!, {r1, r5, r6, r8, sl, sp, lr}^
     d5c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d60:	00745f65 	rsbseq	r5, r4, r5, ror #30
     d64:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
     d68:	61697469 	cmnvs	r9, r9, ror #8
     d6c:	756f436c 	strbvc	r4, [pc, #-876]!	; a08 <__Vectors_Size+0x248>
     d70:	7000746e 	andvc	r7, r0, lr, ror #8
     d74:	51637570 	smcpl	14160	; 0x3750
     d78:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     d7c:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
     d80:	00656761 	rsbeq	r6, r5, r1, ror #14
     d84:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d88:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     d8c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d90:	745f656c 	ldrbvc	r6, [pc], #-1388	; d98 <__Vectors_Size+0x5d8>
     d94:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     d98:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     d9c:	70616d65 	rsbvc	r6, r1, r5, ror #26
     da0:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     da4:	656b6154 	strbvs	r6, [fp, #-340]!	; 0xfffffeac
     da8:	44767000 	ldrbtmi	r7, [r6], #-0
     dac:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     db0:	76700031 			; <UNDEFINED> instruction: 0x76700031
     db4:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     db8:	70003279 	andvc	r3, r0, r9, ror r2
     dbc:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
     dc0:	0033796d 	eorseq	r7, r3, sp, ror #18
     dc4:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
     dc8:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
     dcc:	44767000 	ldrbtmi	r7, [r6], #-0
     dd0:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     dd4:	78750037 	ldmdavc	r5!, {r0, r1, r2, r4, r5}^
     dd8:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     ddc:	70003479 	andvc	r3, r0, r9, ror r4
     de0:	6f437672 	svcvs	0x00437672
     de4:	61447970 	hvcvs	18320	; 0x4790
     de8:	6f546174 	svcvs	0x00546174
     dec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     df0:	51780065 	cmnpl	r8, r5, rrx
     df4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     df8:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
     dfc:	53636972 	cmnpl	r3, #1867776	; 0x1c8000
     e00:	00646e65 	rsbeq	r6, r4, r5, ror #28
     e04:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
     e08:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     e0c:	796c6c61 	stmdbvc	ip!, {r0, r5, r6, sl, fp, sp, lr}^
     e10:	6f6c6c41 	svcvs	0x006c6c41
     e14:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
     e18:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
     e1c:	506b7361 	rsbpl	r7, fp, r1, ror #6
     e20:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
     e24:	76456e4f 	strbvc	r6, [r5], -pc, asr #28
     e28:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
     e2c:	00747369 	rsbseq	r7, r4, r9, ror #6
     e30:	61547670 	cmpvs	r4, r0, ror r6
     e34:	6e496b73 	vmovvs.8	d9[3], r6
     e38:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
     e3c:	4d746e65 	ldclmi	14, cr6, [r4, #-404]!	; 0xfffffe6c
     e40:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     e44:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
     e48:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     e4c:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     e50:	2f2e2e2f 	svccs	0x002e2e2f
     e54:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; da4 <__Vectors_Size+0x5e4>
     e58:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     e5c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     e60:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     e64:	2f534f54 	svccs	0x00534f54
     e68:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     e6c:	00632e65 	rsbeq	r2, r3, r5, ror #28
     e70:	74497875 	strbvc	r7, [r9], #-2165	; 0xfffff78b
     e74:	69536d65 	ldmdbvs	r3, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
     e78:	7500657a 	strvc	r6, [r0, #-1402]	; 0xfffffa86
     e7c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     e80:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
     e84:	67617373 			; <UNDEFINED> instruction: 0x67617373
     e88:	61577365 	cmpvs	r7, r5, ror #6
     e8c:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     e90:	6f724667 	svcvs	0x00724667
     e94:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     e98:	50787500 	rsbspl	r7, r8, r0, lsl #10
     e9c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     ea0:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
     ea4:	61737365 	cmnvs	r3, r5, ror #6
     ea8:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
     eac:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     eb0:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     eb4:	6b736154 	blvs	1cd940c <__RAM_SIZE+0x1bd940c>
     eb8:	6f697250 	svcvs	0x00697250
     ebc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     ec0:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     ec4:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     ec8:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
     ecc:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     ed0:	654c7865 	strbvs	r7, [ip, #-2149]	; 0xfffff79b
     ed4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     ed8:	76727000 	ldrbtvc	r7, [r2], -r0
     edc:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     ee0:	46657565 	strbtmi	r7, [r5], -r5, ror #10
     ee4:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     ee8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     eec:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     ef0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     ef4:	51780073 	cmnpl	r8, r3, ror r0
     ef8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     efc:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
     f00:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; df0 <__Vectors_Size+0x630>
     f04:	00525349 	subseq	r5, r2, r9, asr #6
     f08:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f0c:	6e614865 	cdpvs	8, 6, cr4, cr1, cr5, {3}
     f10:	5f656c64 	svcpl	0x00656c64
     f14:	51780074 	cmnpl	r8, r4, ror r0
     f18:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f1c:	00746553 	rsbseq	r6, r4, r3, asr r5
     f20:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     f24:	616c506b 	cmnvs	ip, fp, rrx
     f28:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
     f2c:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     f30:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     f34:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
     f38:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
     f3c:	00646574 	rsbeq	r6, r4, r4, ror r5
     f40:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     f44:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     f48:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
     f4c:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
     f50:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     f54:	70700068 	rsbsvc	r0, r0, r8, rrx
     f58:	61745378 	cmnvs	r4, r8, ror r3
     f5c:	51636974 	smcpl	13972	; 0x3694
     f60:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f64:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     f68:	43657565 	cmnmi	r5, #423624704	; 0x19400000
     f6c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     f70:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
     f74:	74537865 	ldrbvc	r7, [r3], #-2149	; 0xfffff79b
     f78:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     f7c:	536c7500 	cmnpl	ip, #0, 10
     f80:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
     f84:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     f88:	4d747075 	ldclmi	0, cr7, [r4, #-468]!	; 0xfffffe2c
     f8c:	006b7361 	rsbeq	r7, fp, r1, ror #6
     f90:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     f94:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
     f98:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
     f9c:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
     fa0:	00657461 	rsbeq	r7, r5, r1, ror #8
     fa4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     fa8:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
     fac:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     fb0:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     fb4:	53780078 	cmnpl	r8, #120	; 0x78
     fb8:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
     fbc:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     fc0:	70005453 	andvc	r5, r0, r3, asr r4
     fc4:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
     fc8:	61697469 	cmnvs	r9, r9, ror #8
     fcc:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     fd0:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     fd4:	54780078 	ldrbtpl	r0, [r8], #-120	; 0xffffff88
     fd8:	4f656d69 	svcmi	0x00656d69
     fdc:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
     fe0:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
     fe4:	74530067 	ldrbvc	r0, [r3], #-103	; 0xffffff99
     fe8:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     fec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ff0:	00745f65 	rsbseq	r5, r4, r5, ror #30
     ff4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     ff8:	65526575 	ldrbvs	r6, [r2, #-1397]	; 0xfffffa8b
     ffc:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1000:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; ef0 <__Vectors_Size+0x730>
    1004:	00746553 	rsbseq	r6, r4, r3, asr r5
    1008:	614d7875 	hvcvs	55173	; 0xd785
    100c:	756f4378 	strbvc	r4, [pc, #-888]!	; c9c <__Vectors_Size+0x4dc>
    1010:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1014:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1018:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
    101c:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    1020:	54007465 	strpl	r7, [r0], #-1125	; 0xfffffb9b
    1024:	4f656d69 	svcmi	0x00656d69
    1028:	745f7475 	ldrbvc	r7, [pc], #-1141	; 1030 <__HEAP_SIZE+0x30>
    102c:	61547600 	cmpvs	r4, r0, lsl #12
    1030:	6e496b73 	vmovvs.8	d9[3], r6
    1034:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    1038:	65536c61 	ldrbvs	r6, [r3, #-3169]	; 0xfffff39f
    103c:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    1040:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    1044:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1048:	63700065 	cmnvs	r0, #101	; 0x65
    104c:	6769724f 	strbvs	r7, [r9, -pc, asr #4]!
    1050:	6c616e69 	stclvs	14, cr6, [r1], #-420	; 0xfffffe5c
    1054:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1058:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
    105c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1060:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1064:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    1068:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    106c:	756f4365 	strbvc	r4, [pc, #-869]!	; d0f <__Vectors_Size+0x54f>
    1070:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    1074:	6d655367 	stclvs	3, cr5, [r5, #-412]!	; 0xfffffe64
    1078:	6f687061 	svcvs	0x00687061
    107c:	74536572 	ldrbvc	r6, [r3], #-1394	; 0xfffffa8e
    1080:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1084:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1088:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    108c:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1090:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1094:	664f7974 			; <UNDEFINED> instruction: 0x664f7974
    1098:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    109c:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    10a0:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    10a4:	51637500 	cmnpl	r3, r0, lsl #10
    10a8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    10ac:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    10b0:	53787500 	cmnpl	r8, #0, 10
    10b4:	70616d65 	rsbvc	r6, r1, r5, ror #26
    10b8:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    10bc:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    10c0:	63700074 	cmnvs	r0, #116	; 0x74
    10c4:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    10c8:	006f5465 	rsbeq	r5, pc, r5, ror #8
    10cc:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    10d0:	745f3874 	ldrbvc	r3, [pc], #-2164	; 10d8 <__HEAP_SIZE+0xd8>
    10d4:	51787500 	cmnpl	r8, r0, lsl #10
    10d8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    10dc:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    10e0:	78006874 	stmdavc	r0, {r2, r4, r5, r6, fp, sp, lr}
    10e4:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    10e8:	61746972 	cmnvs	r4, r2, ror r9
    10ec:	4f65636e 	svcmi	0x0065636e
    10f0:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    10f4:	00646572 	rsbeq	r6, r4, r2, ror r5
    10f8:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    10fc:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    1100:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    1104:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1108:	78750036 	ldmdavc	r5!, {r1, r2, r4, r5}^
    110c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1110:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    1114:	6b736154 	blvs	1cd966c <__RAM_SIZE+0x1bd966c>
    1118:	75510073 	ldrbvc	r0, [r1, #-115]	; 0xffffff8d
    111c:	50657565 	rsbpl	r7, r5, r5, ror #10
    1120:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1124:	5f737265 	svcpl	0x00737265
    1128:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    112c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1130:	76006874 			; <UNDEFINED> instruction: 0x76006874
    1134:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1138:	69615765 	stmdbvs	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, lr}^
    113c:	726f4674 	rsbvc	r4, pc, #116, 12	; 0x7400000
    1140:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    1144:	52656761 	rsbpl	r6, r5, #25427968	; 0x1840000
    1148:	72747365 	rsbsvc	r7, r4, #-1811939327	; 0x94000001
    114c:	65746369 	ldrbvs	r6, [r4, #-873]!	; 0xfffffc97
    1150:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    1154:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1158:	53724f65 	cmnpl	r2, #404	; 0x194
    115c:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1160:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1164:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1168:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    116c:	49657a69 	stmdbmi	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
    1170:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    1174:	78007365 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1178:	6b736154 	blvs	1cd96d0 <__RAM_SIZE+0x1bd96d0>
    117c:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1180:	6c41656d 	cfstr64vs	mvdx6, [r1], {109}	; 0x6d
    1184:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
    1188:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    118c:	74654765 	strbtvc	r4, [r5], #-1893	; 0xfffff89b
    1190:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1194:	65744965 	ldrbvs	r4, [r4, #-2405]!	; 0xfffff69b
    1198:	7a69536d 	bvc	1a55f54 <__RAM_SIZE+0x1955f54>
    119c:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    11a0:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    11a4:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    11a8:	00657565 	rsbeq	r7, r5, r5, ror #10
    11ac:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    11b0:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    11b4:	6f466b63 	svcvs	0x00466b63
    11b8:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    11bc:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    11c0:	6f507600 	svcvs	0x00507600
    11c4:	72467472 	subvc	r7, r6, #1912602624	; 0x72000000
    11c8:	78006565 	stmdavc	r0, {r0, r2, r5, r6, r8, sl, sp, lr}
    11cc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    11d0:	51734965 	cmnpl	r3, r5, ror #18
    11d4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    11d8:	6c6c7546 	cfstr64vs	mvdx7, [ip], #-280	; 0xfffffee8
    11dc:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 10cc <__HEAP_SIZE+0xcc>
    11e0:	00525349 	subseq	r5, r2, r9, asr #6
    11e4:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    11e8:	4d657565 	cfstr64mi	mvdx7, [r5, #-404]!	; 0xfffffe6c
    11ec:	61737365 	cmnvs	r3, r5, ror #6
    11f0:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
    11f4:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    11f8:	7000676e 	andvc	r6, r0, lr, ror #14
    11fc:	69615463 	stmdbvs	r1!, {r0, r1, r5, r6, sl, ip, lr}^
    1200:	5178006c 	cmnpl	r8, ip, rrx
    1204:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1208:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    120c:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    1210:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1214:	61745365 	cmnvs	r4, r5, ror #6
    1218:	00636974 	rsbeq	r6, r3, r4, ror r9
    121c:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    1220:	00657565 	rsbeq	r7, r5, r5, ror #10
    1224:	41545378 	cmpmi	r4, r8, ror r3
    1228:	5f434954 	svcpl	0x00434954
    122c:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    1230:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
    1234:	5476004d 	ldrbtpl	r0, [r6], #-77	; 0xffffffb3
    1238:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    123c:	65737369 	ldrbvs	r7, [r3, #-873]!	; 0xfffffc97
    1240:	65695964 	strbvs	r5, [r9, #-2404]!	; 0xfffff69c
    1244:	7800646c 	stmdavc	r0, {r2, r3, r5, r6, sl, sp, lr}
    1248:	6b736154 	blvs	1cd97a0 <__RAM_SIZE+0x1bd97a0>
    124c:	6f697250 	svcvs	0x00697250
    1250:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1254:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    1258:	00746972 	rsbseq	r6, r4, r2, ror r9
    125c:	65527875 	ldrbvs	r7, [r2, #-2165]	; 0xfffff78b
    1260:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
    1264:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    1268:	436c6c61 	cmnmi	ip, #24832	; 0x6100
    126c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1270:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1274:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    1278:	63656c65 	cmnvs	r5, #25856	; 0x6500
    127c:	6f724674 	svcvs	0x00724674
    1280:	7465536d 	strbtvc	r5, [r5], #-877	; 0xfffffc93
    1284:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1288:	50657565 	rsbpl	r7, r5, r5, ror #10
    128c:	466b6565 	strbtmi	r6, [fp], -r5, ror #10
    1290:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1294:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1298:	67694878 			; <UNDEFINED> instruction: 0x67694878
    129c:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    12a0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    12a4:	50676e69 	rsbpl	r6, r7, r9, ror #28
    12a8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    12ac:	00797469 	rsbseq	r7, r9, r9, ror #8
    12b0:	43767270 	cmnmi	r6, #112, 4
    12b4:	4479706f 	ldrbtmi	r7, [r9], #-111	; 0xffffff91
    12b8:	46617461 	strbtmi	r7, [r1], -r1, ror #8
    12bc:	516d6f72 	smcpl	55026	; 0xd6f2
    12c0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    12c4:	61547600 	cmpvs	r4, r0, lsl #12
    12c8:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    12cc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    12d0:	69447974 	stmdbvs	r4, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    12d4:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    12d8:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
    12dc:	65746641 	ldrbvs	r6, [r4, #-1601]!	; 0xfffff9bf
    12e0:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    12e4:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    12e8:	75447800 	strbvc	r7, [r4, #-2048]	; 0xfffff800
    12ec:	33796d6d 	cmncc	r9, #6976	; 0x1b40
    12f0:	61547800 	cmpvs	r4, r0, lsl #16
    12f4:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    12f8:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    12fc:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1300:	6b736154 	blvs	1cd9858 <__RAM_SIZE+0x1bd9858>
    1304:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1308:	7000656c 	andvc	r6, r0, ip, ror #10
    130c:	61654863 	cmnvs	r5, r3, ror #16
    1310:	51780064 	cmnpl	r8, r4, rrx
    1314:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1318:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
    131c:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1320:	63655278 	cmnvs	r5, #120, 4	; 0x80000007
    1324:	69737275 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, ip, sp, lr}^
    1328:	70006576 	andvc	r6, r0, r6, ror r5
    132c:	6e557672 	mrcvs	6, 2, r7, cr5, cr2, {3}
    1330:	6b636f6c 	blvs	18dd0e8 <__RAM_SIZE+0x17dd0e8>
    1334:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1338:	51780065 	cmnpl	r8, r5, rrx
    133c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1340:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1344:	52636972 	rsbpl	r6, r3, #1867776	; 0x1c8000
    1348:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    134c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1350:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    1354:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
    1358:	6d456575 	cfstr64vs	mvdx6, [r5, #-468]	; 0xfffffe2c
    135c:	46797470 			; <UNDEFINED> instruction: 0x46797470
    1360:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1364:	78005253 	stmdavc	r0, {r0, r1, r4, r6, r9, ip, lr}
    1368:	55455551 	strbpl	r5, [r5, #-1361]	; 0xfffffaaf
    136c:	78700045 	ldmdavc	r0!, {r0, r2, r6}^
    1370:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1374:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    1378:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    137c:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
    1380:	50780072 	rsbspl	r0, r8, r2, ror r0
    1384:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    1388:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    138c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1390:	64416575 	strbvs	r6, [r1], #-1397	; 0xfffffa8b
    1394:	536f5464 	cmnpl	pc, #100, 8	; 0x64000000
    1398:	63007465 	movwvs	r7, #1125	; 0x465
    139c:	6f4c7852 	svcvs	0x004c7852
    13a0:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    13a4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    13a8:	515f4349 	cmppl	pc, r9, asr #6
    13ac:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    13b0:	45787500 	ldrbmi	r7, [r8, #-1280]!	; 0xfffffb00
    13b4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    13b8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    13bc:	6e654c65 	cdpvs	12, 6, cr4, cr5, cr5, {3}
    13c0:	00687467 	rsbeq	r7, r8, r7, ror #8
    13c4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    13c8:	6d65526b 	sfmvs	f5, 2, [r5, #-428]!	; 0xfffffe54
    13cc:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
    13d0:	456d6f72 	strbmi	r6, [sp, #-3954]!	; 0xfffff08e
    13d4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    13d8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    13dc:	61745300 	cmnvs	r4, r0, lsl #6
    13e0:	4c636974 			; <UNDEFINED> instruction: 0x4c636974
    13e4:	5f747369 	svcpl	0x00747369
    13e8:	51780074 	cmnpl	r8, r4, ror r0
    13ec:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13f0:	61657243 	cmnvs	r5, r3, asr #4
    13f4:	6f436574 	svcvs	0x00436574
    13f8:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    13fc:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
    1400:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1404:	0065726f 	rsbeq	r7, r5, pc, ror #4
    1408:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    140c:	61546369 	cmpvs	r4, r9, ror #6
    1410:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 1418 <__HEAP_SIZE+0x418>
    1414:	6f437800 	svcvs	0x00437800
    1418:	44496572 	strbmi	r6, [r9], #-1394	; 0xfffffa8e
    141c:	54637000 	strbtpl	r7, [r3], #-0
    1420:	4e6b7361 	cdpmi	3, 6, cr7, cr11, cr1, {3}
    1424:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1428:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    142c:	616c506b 	cmnvs	ip, fp, rrx
    1430:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    1434:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1438:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    143c:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1440:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1444:	70007473 	andvc	r7, r0, r3, ror r4
    1448:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    144c:	6154656c 	cmpvs	r4, ip, ror #10
    1450:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1454:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1458:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    145c:	50780072 	rsbspl	r0, r8, r2, ror r0
    1460:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    1464:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1468:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    146c:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    1470:	78750072 	ldmdavc	r5!, {r1, r4, r5, r6}^
    1474:	6f697250 	svcvs	0x00697250
    1478:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    147c:	43787000 	cmnmi	r8, #0
    1480:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    1484:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1488:	61547800 	cmpvs	r4, r0, lsl #16
    148c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1490:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    1494:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1498:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    149c:	46656c64 	strbtmi	r6, [r5], -r4, ror #24
    14a0:	6f43726f 	svcvs	0x0043726f
    14a4:	70006572 	andvc	r6, r0, r2, ror r5
    14a8:	61745378 	cmnvs	r4, r8, ror r3
    14ac:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    14b0:	65007473 	strvs	r7, [r0, #-1139]	; 0xfffffb8d
    14b4:	70737553 	rsbsvc	r7, r3, r3, asr r5
    14b8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    14bc:	78750064 	ldmdavc	r5!, {r2, r5, r6}^
    14c0:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    14c4:	00323179 	eorseq	r3, r2, r9, ror r1
    14c8:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    14cc:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    14d0:	6e557961 	vnmlavs.f16	s15, s10, s3	; <UNPREDICTABLE>
    14d4:	006c6974 	rsbeq	r6, ip, r4, ror r9
    14d8:	6e4f7875 	mcrvs	8, 2, r7, cr15, cr5, {3}
    14dc:	6e4f796c 	vmlsvs.f16	s15, s30, s25	; <UNPREDICTABLE>
    14e0:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    14e4:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
    14e8:	7500646c 	strvc	r6, [r0, #-1132]	; 0xfffffb94
    14ec:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    14f0:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    14f4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    14f8:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    14fc:	78007469 	stmdavc	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1500:	6b736154 	blvs	1cd9a58 <__RAM_SIZE+0x1bd9a58>
    1504:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1508:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    150c:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1510:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1514:	4e650065 	cdpmi	0, 6, cr0, cr5, cr5, {3}
    1518:	7463416f 	strbtvc	r4, [r3], #-367	; 0xfffffe91
    151c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1520:	6f547875 	svcvs	0x00547875
    1524:	61655270 	smcvs	21792	; 0x5520
    1528:	72507964 	subsvc	r7, r0, #100, 18	; 0x190000
    152c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1530:	70007974 	andvc	r7, r0, r4, ror r9
    1534:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1538:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    153c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1540:	45787000 	ldrbmi	r7, [r8, #-0]!
    1544:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1548:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    154c:	63537800 	cmpvs	r3, #0, 16
    1550:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    1554:	5272656c 	rsbspl	r6, r2, #108, 10	; 0x1b000000
    1558:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    155c:	5300676e 	movwpl	r6, #1902	; 0x76e
    1560:	6b636174 	blvs	18d9b38 <__RAM_SIZE+0x17d9b38>
    1564:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1568:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    156c:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    1570:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    1574:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1578:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    157c:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1580:	61546465 	cmpvs	r4, r5, ror #8
    1584:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1588:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    158c:	6c43676e 	mcrrvs	7, 6, r6, r3, cr14
    1590:	556e6165 	strbpl	r6, [lr, #-357]!	; 0xfffffe9b
    1594:	44780070 	ldrbtmi	r0, [r8], #-112	; 0xffffff90
    1598:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    159c:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    15a0:	64496e49 	strbvs	r6, [r9], #-3657	; 0xfffff1b7
    15a4:	6154656c 	cmpvs	r4, ip, ror #10
    15a8:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    15ac:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    15b0:	6f436465 	svcvs	0x00436465
    15b4:	73746e75 	cmnvc	r4, #1872	; 0x750
    15b8:	52787000 	rsbspl	r7, r8, #0
    15bc:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    15c0:	6b736154 	blvs	1cd9b18 <__RAM_SIZE+0x1bd9b18>
    15c4:	73694c73 	cmnvc	r9, #29440	; 0x7300
    15c8:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    15cc:	65707845 	ldrbvs	r7, [r0, #-2117]!	; 0xfffff7bb
    15d0:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    15d4:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    15d8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    15dc:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    15e0:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    15e4:	78003032 	stmdavc	r0, {r1, r4, r5, ip, sp}
    15e8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    15ec:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    15f0:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    15f4:	4f637500 	svcmi	0x00637500
    15f8:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    15fc:	4e6c616e 	powmiez	f6, f4, #0.5
    1600:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1604:	61745379 	cmnvs	r4, r9, ror r3
    1608:	76006574 			; <UNDEFINED> instruction: 0x76006574
    160c:	6b736154 	blvs	1cd9b64 <__RAM_SIZE+0x1bd9b64>
    1610:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    1614:	4f656d69 	svcmi	0x00656d69
    1618:	74537475 	ldrbvc	r7, [r3], #-1141	; 0xfffffb8b
    161c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1620:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1624:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1628:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    162c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1630:	72467966 	subvc	r7, r6, #1671168	; 0x198000
    1634:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1638:	59780052 	ldmdbpl	r8!, {r1, r4, r6}^
    163c:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    1640:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1644:	73676e69 	cmnvc	r7, #1680	; 0x690
    1648:	63757000 	cmnvs	r5, #0
    164c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1650:	7479426b 	ldrbtvc	r4, [r9], #-619	; 0xfffffd95
    1654:	44780065 	ldrbtmi	r0, [r8], #-101	; 0xffffff9b
    1658:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    165c:	61546465 	cmpvs	r4, r5, ror #8
    1660:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1664:	00317473 	eorseq	r7, r1, r3, ror r4
    1668:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    166c:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1670:	6b736154 	blvs	1cd9bc8 <__RAM_SIZE+0x1bd9bc8>
    1674:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1678:	78700032 	ldmdavc	r0!, {r1, r4, r5}^
    167c:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    1680:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    1684:	65446465 	strbvs	r6, [r4, #-1125]	; 0xfffffb9b
    1688:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    168c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    1690:	55780074 	ldrbpl	r0, [r8, #-116]!	; 0xffffff8c
    1694:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    1698:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    169c:	6f436b63 	svcvs	0x00436b63
    16a0:	00746e75 	rsbseq	r6, r4, r5, ror lr
    16a4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    16a8:	7461436b 	strbtvc	r4, [r1], #-875	; 0xfffffc95
    16ac:	70556863 	subsvc	r6, r5, r3, ror #16
    16b0:	6b636954 	blvs	18dbc08 <__RAM_SIZE+0x17dbc08>
    16b4:	6c750073 	ldclvs	0, cr0, [r5], #-460	; 0xfffffe34
    16b8:	61726150 	cmnvs	r2, r0, asr r1
    16bc:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    16c0:	65007372 	strvs	r7, [r0, #-882]	; 0xfffffc8e
    16c4:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    16c8:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    16cc:	6b736154 	blvs	1cd9c24 <__RAM_SIZE+0x1bd9c24>
    16d0:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
    16d4:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    16d8:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    16dc:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    16e0:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    16e4:	00726165 	rsbseq	r6, r2, r5, ror #2
    16e8:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    16ec:	7465536b 	strbtvc	r5, [r5], #-875	; 0xfffffc95
    16f0:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    16f4:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    16f8:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    16fc:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1700:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    1704:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1708:	65724372 	ldrbvs	r4, [r2, #-882]!	; 0xfffffc8e
    170c:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    1710:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1714:	6b736154 	blvs	1cd9c6c <__RAM_SIZE+0x1bd9c6c>
    1718:	6c536500 	cfldr64vs	mvdx6, [r3], {-0}
    171c:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    1720:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
    1724:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1728:	78750073 	ldmdavc	r5!, {r0, r1, r4, r5, r6}^
    172c:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1730:	72507265 	subsvc	r7, r0, #1342177286	; 0x50000006
    1734:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1738:	65527974 	ldrbvs	r7, [r2, #-2420]	; 0xfffff68c
    173c:	54796461 	ldrbtpl	r6, [r9], #-1121	; 0xfffffb9f
    1740:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    1744:	61547800 	cmpvs	r4, r0, lsl #16
    1748:	72436b73 	subvc	r6, r3, #117760	; 0x1cc00
    174c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1750:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1754:	74006369 	strvc	r6, [r0], #-873	; 0xfffffc97
    1758:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    175c:	63750042 	cmnvs	r5, #66	; 0x42
    1760:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1764:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    1768:	00657461 	rsbeq	r7, r5, r1, ror #8
    176c:	70704176 	rsbsvc	r4, r0, r6, ror r1
    1770:	6163696c 	cmnvs	r3, ip, ror #18
    1774:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1778:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    177c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1780:	6b736154 	blvs	1cd9cd8 <__RAM_SIZE+0x1bd9cd8>
    1784:	6f6d654d 	svcvs	0x006d654d
    1788:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    178c:	6b736154 	blvs	1cd9ce4 <__RAM_SIZE+0x1bd9ce4>
    1790:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1794:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1798:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    179c:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    17a0:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    17a4:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    17a8:	42435464 	submi	r5, r3, #100, 8	; 0x64000000
    17ac:	6c437800 	mcrrvs	8, 0, r7, r3, cr0
    17b0:	43726165 	cmnmi	r2, #1073741849	; 0x40000019
    17b4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    17b8:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    17bc:	70007469 	andvc	r7, r0, r9, ror #8
    17c0:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    17c4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    17c8:	6b736154 	blvs	1cd9d20 <__RAM_SIZE+0x1bd9d20>
    17cc:	6c457800 	mcrrvs	8, 0, r7, r5, cr0
    17d0:	65737061 	ldrbvs	r7, [r3, #-97]!	; 0xffffff9f
    17d4:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    17d8:	41650065 	cmnmi	r5, r5, rrx
    17dc:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    17e0:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    17e4:	53650070 	cmnpl	r5, #112	; 0x70
    17e8:	61567465 	cmpvs	r6, r5, ror #8
    17ec:	5765756c 	strbpl	r7, [r5, -ip, ror #10]!
    17f0:	4f687469 	svcmi	0x00687469
    17f4:	77726576 			; <UNDEFINED> instruction: 0x77726576
    17f8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    17fc:	61547800 	cmpvs	r4, r0, lsl #16
    1800:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1804:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1808:	756f436b 	strbvc	r4, [pc, #-875]!	; 14a5 <__HEAP_SIZE+0x4a5>
    180c:	7246746e 	subvc	r7, r6, #1845493760	; 0x6e000000
    1810:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1814:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    1818:	73746942 	cmnvc	r4, #1081344	; 0x108000
    181c:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    1820:	4f726165 	svcmi	0x00726165
    1824:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    1828:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    182c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1830:	6b736154 	blvs	1cd9d88 <__RAM_SIZE+0x1bd9d88>
    1834:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1838:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    183c:	50780078 	rsbspl	r0, r8, r8, ror r0
    1840:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1844:	6552676e 	ldrbvs	r6, [r2, #-1902]	; 0xfffff892
    1848:	4c796461 	cfldrdmi	mvd6, [r9], #-388	; 0xfffffe7c
    184c:	00747369 	rsbseq	r7, r4, r9, ror #6
    1850:	43767270 	cmnmi	r6, #112, 4
    1854:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1858:	61745365 	cmnvs	r4, r5, ror #6
    185c:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    1860:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1864:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1868:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    186c:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1870:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1874:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1878:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    187c:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    1880:	6b736154 	blvs	1cd9dd8 <__RAM_SIZE+0x1bd9dd8>
    1884:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    1888:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    188c:	6d726554 	cfldr64vs	mvdx6, [r2, #-336]!	; 0xfffffeb0
    1890:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
    1894:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1898:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    189c:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    18a0:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    18a4:	00657461 	rsbeq	r7, r5, r1, ror #8
    18a8:	65547870 	ldrbvs	r7, [r4, #-2160]	; 0xfffff790
    18ac:	7500706d 	strvc	r7, [r0, #-109]	; 0xffffff93
    18b0:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    18b4:	64657355 	strbtvs	r7, [r5], #-853	; 0xfffffcab
    18b8:	6f697250 	svcvs	0x00697250
    18bc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    18c0:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    18c4:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    18c8:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    18cc:	486b6361 	stmdami	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    18d0:	57686769 	strbpl	r6, [r8, -r9, ror #14]!
    18d4:	72657461 	rsbvc	r7, r5, #1627389952	; 0x61000000
    18d8:	6b72614d 	blvs	1c99e14 <__RAM_SIZE+0x1b99e14>
    18dc:	61547800 	cmpvs	r4, r0, lsl #16
    18e0:	6e496b73 	vmovvs.8	d9[3], r6
    18e4:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    18e8:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    18ec:	006b6369 	rsbeq	r6, fp, r9, ror #6
    18f0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    18f4:	6574536b 	ldrbvs	r5, [r4, #-875]!	; 0xfffffc95
    18f8:	63695470 	cmnvs	r9, #112, 8	; 0x70000000
    18fc:	7875006b 	ldmdavc	r5!, {r0, r1, r3, r5, r6}^
    1900:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1904:	7065446b 	rsbvc	r4, r5, fp, ror #8
    1908:	65006874 	strvs	r6, [r0, #-2164]	; 0xfffff78c
    190c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1910:	63417966 	movtvs	r7, #6502	; 0x1966
    1914:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1918:	61547800 	cmpvs	r4, r0, lsl #16
    191c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1920:	6e614874 	mcrvs	8, 3, r4, cr1, cr4, {3}
    1924:	00656c64 	rsbeq	r6, r5, r4, ror #24
    1928:	65446375 	strbvs	r6, [r4, #-885]	; 0xfffffc8b
    192c:	4179616c 	cmnmi	r9, ip, ror #2
    1930:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1934:	53006465 	movwpl	r6, #1125	; 0x465
    1938:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    193c:	73694c63 	cmnvc	r9, #25344	; 0x6300
    1940:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1944:	00745f6d 	rsbseq	r5, r4, sp, ror #30
    1948:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    194c:	756f436b 	strbvc	r4, [pc, #-875]!	; 15e9 <__HEAP_SIZE+0x5e9>
    1950:	7600746e 	strvc	r7, [r0], -lr, ror #8
    1954:	6b736154 	blvs	1cd9eac <__RAM_SIZE+0x1bd9eac>
    1958:	53646e45 	cmnpl	r4, #1104	; 0x450
    195c:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1960:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1964:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1968:	506b7361 	rsbpl	r7, fp, r1, ror #6
    196c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1970:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1974:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    1978:	736e6f43 	cmnvc	lr, #268	; 0x10c
    197c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1980:	756f436b 	strbvc	r4, [pc, #-875]!	; 161d <__HEAP_SIZE+0x61d>
    1984:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1988:	70737553 	rsbsvc	r7, r3, r3, asr r5
    198c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1990:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    1994:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    1998:	63700074 	cmnvs	r0, #116	; 0x74
    199c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    19a0:	4f787000 	svcmi	0x00787000
    19a4:	66726576 			; <UNDEFINED> instruction: 0x66726576
    19a8:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
    19ac:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    19b0:	61546465 	cmpvs	r4, r5, ror #8
    19b4:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    19b8:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    19bc:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    19c0:	0035796d 	eorseq	r7, r5, sp, ror #18
    19c4:	47767270 			; <UNDEFINED> instruction: 0x47767270
    19c8:	78457465 	stmdavc	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    19cc:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    19d0:	64496465 	strbvs	r6, [r9], #-1125	; 0xfffffb9b
    19d4:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    19d8:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    19dc:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    19e0:	6b736154 	blvs	1cd9f38 <__RAM_SIZE+0x1bd9f38>
    19e4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    19e8:	0073656c 	rsbseq	r6, r3, ip, ror #10
    19ec:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    19f0:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    19f4:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
    19f8:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    19fc:	646f4d70 	strbtvs	r4, [pc], #-3440	; 1a04 <__HEAP_SIZE+0xa04>
    1a00:	61745365 	cmnvs	r4, r5, ror #6
    1a04:	00737574 	rsbseq	r7, r3, r4, ror r5
    1a08:	6f4e6c75 	svcvs	0x004e6c75
    1a0c:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1a10:	61566465 	cmpvs	r6, r5, ror #8
    1a14:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1a18:	65527870 	ldrbvs	r7, [r2, #-2160]	; 0xfffff790
    1a1c:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1a20:	61547600 	cmpvs	r4, r0, lsl #12
    1a24:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1a28:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1a2c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 191c <__HEAP_SIZE+0x91c>
    1a30:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1a34:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    1a38:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1a3c:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1a40:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1a44:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    1a48:	73657865 	cmnvc	r5, #6619136	; 0x650000
    1a4c:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    1a50:	65536500 	ldrbvs	r6, [r3, #-1280]	; 0xfffffb00
    1a54:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
    1a58:	69576575 	ldmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    1a5c:	756f6874 	strbvc	r6, [pc, #-2164]!	; 11f0 <__HEAP_SIZE+0x1f0>
    1a60:	65764f74 	ldrbvs	r4, [r6, #-3956]!	; 0xfffff08c
    1a64:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    1a68:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    1a6c:	6b736154 	blvs	1cd9fc4 <__RAM_SIZE+0x1bd9fc4>
    1a70:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1a74:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1a78:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1a7c:	69615779 	stmdbvs	r1!, {r0, r3, r4, r5, r6, r8, r9, sl, ip, lr}^
    1a80:	53780074 	cmnpl	r8, #116	; 0x74
    1a84:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1a88:	6c654464 	cfstrdvs	mvd4, [r5], #-400	; 0xfffffe70
    1a8c:	70007961 	andvc	r7, r0, r1, ror #18
    1a90:	64497672 	strbvs	r7, [r9], #-1650	; 0xfffff98e
    1a94:	6154656c 	cmpvs	r4, ip, ror #10
    1a98:	70006b73 	andvc	r6, r0, r3, ror fp
    1a9c:	65537672 	ldrbvs	r7, [r3, #-1650]	; 0xfffff98e
    1aa0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1aa4:	4e726f46 	cdpmi	15, 7, cr6, cr2, cr6, {2}
    1aa8:	57656d61 	strbpl	r6, [r5, -r1, ror #26]!
    1aac:	69687469 	stmdbvs	r8!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ab0:	6e69536e 	cdpvs	3, 6, cr5, cr9, cr14, {3}
    1ab4:	4c656c67 	stclmi	12, cr6, [r5], #-412	; 0xfffffe64
    1ab8:	00747369 	rsbseq	r7, r4, r9, ror #6
    1abc:	61546c75 	cmpvs	r4, r5, ror ip
    1ac0:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1ac4:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1ac8:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1ad0 <__HEAP_SIZE+0xad0>
    1acc:	54796669 	ldrbtpl	r6, [r9], #-1641	; 0xfffff997
    1ad0:	00656b61 	rsbeq	r6, r5, r1, ror #22
    1ad4:	41767270 	cmnmi	r6, r0, ror r2
    1ad8:	654e6464 	strbvs	r6, [lr, #-1124]	; 0xfffffb9c
    1adc:	73615477 	cmnvc	r1, #1996488704	; 0x77000000
    1ae0:	526f546b 	rsbpl	r5, pc, #1795162112	; 0x6b000000
    1ae4:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1ae8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1aec:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    1af0:	466b6f6f 	strbtmi	r6, [fp], -pc, ror #30
    1af4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1af8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1afc:	61655265 	cmnvs	r5, r5, ror #4
    1b00:	70007964 	andvc	r7, r0, r4, ror #18
    1b04:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    1b08:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1b0c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1b10:	6b736154 	blvs	1cda068 <__RAM_SIZE+0x1bda068>
    1b14:	54650073 	strbtpl	r0, [r5], #-115	; 0xffffff8d
    1b18:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1b1c:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1b20:	00657461 	rsbeq	r7, r5, r1, ror #8
    1b24:	78757070 	ldmdavc	r5!, {r4, r5, r6, ip, sp, lr}^
    1b28:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1b2c:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    1b30:	00726566 	rsbseq	r6, r2, r6, ror #10
    1b34:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    1b38:	42435477 	submi	r5, r3, #1996488704	; 0x77000000
    1b3c:	51787500 	cmnpl	r8, r0, lsl #10
    1b40:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1b44:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1b48:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1b4c:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1b50:	6174536b 	cmnvs	r4, fp, ror #6
    1b54:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
    1b58:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1b5c:	69597800 	ldmdbvs	r9, {fp, ip, sp, lr}^
    1b60:	4f646c65 	svcmi	0x00646c65
    1b64:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    1b68:	00646572 	rsbeq	r6, r4, r2, ror r5
    1b6c:	6f6d654d 	svcvs	0x006d654d
    1b70:	65527972 	ldrbvs	r7, [r2, #-2418]	; 0xfffff68e
    1b74:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    1b78:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    1b7c:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1b80:	6b736154 	blvs	1cda0d8 <__RAM_SIZE+0x1bda0d8>
    1b84:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1b88:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1b8c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1b90:	6f507870 	svcvs	0x00507870
    1b94:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
    1b98:	61697469 	cmnvs	r9, r9, ror #8
    1b9c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1ba0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1ba4:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    1ba8:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1bac:	75003179 	strvc	r3, [r0, #-377]	; 0xfffffe87
    1bb0:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1bb4:	3931796d 	ldmdbcc	r1!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
    1bb8:	44787000 	ldrbtmi	r7, [r8], #-0
    1bbc:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1bc0:	44650036 	strbtmi	r0, [r5], #-54	; 0xffffffca
    1bc4:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1bc8:	75006465 	strvc	r6, [r0, #-1125]	; 0xfffffb9b
    1bcc:	7361546c 	cmnvc	r1, #108, 8	; 0x6c000000
    1bd0:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1bd4:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1bd8:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1bdc:	61567966 	cmpvs	r6, r6, ror #18
    1be0:	4365756c 	cmnmi	r5, #108, 10	; 0x1b000000
    1be4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1be8:	4c6c7500 	cfstr64mi	mvdx7, [ip], #-0
    1bec:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1bf0:	426e4968 	rsbmi	r4, lr, #104, 18	; 0x1a0000
    1bf4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1bf8:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1bfc:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1c00:	6b736154 	blvs	1cda158 <__RAM_SIZE+0x1bda158>
    1c04:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1c08:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1c0c:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1c10:	73655276 	cmnvc	r5, #1610612743	; 0x60000007
    1c14:	654e7465 	strbvs	r7, [lr, #-1125]	; 0xfffffb9b
    1c18:	61547478 	cmpvs	r4, r8, ror r4
    1c1c:	6e556b73 	vmovvs.s8	r6, d5[3]
    1c20:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1c24:	6d69546b 	cfstrdvs	mvd5, [r9, #-428]!	; 0xfffffe54
    1c28:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    1c2c:	5077654e 	rsbspl	r6, r7, lr, asr #10
    1c30:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1c34:	00797469 	rsbseq	r7, r9, r9, ror #8
    1c38:	6b736154 	blvs	1cda190 <__RAM_SIZE+0x1bda190>
    1c3c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    1c40:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1c44:	7000745f 	andvc	r7, r0, pc, asr r4
    1c48:	72506c75 	subsvc	r6, r0, #29952	; 0x7500
    1c4c:	6f697665 	svcvs	0x00697665
    1c50:	6f4e7375 	svcvs	0x004e7375
    1c54:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1c58:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    1c5c:	61566e6f 	cmpvs	r6, pc, ror #28
    1c60:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1c64:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1c68:	754f656d 	strbvc	r6, [pc, #-1389]	; 1703 <__HEAP_SIZE+0x703>
    1c6c:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1c70:	6b736154 	blvs	1cda1c8 <__RAM_SIZE+0x1bda1c8>
    1c74:	6f697250 	svcvs	0x00697250
    1c78:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1c7c:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1c80:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c84:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1c88:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1c8c:	3132796d 	teqcc	r2, sp, ror #18
    1c90:	61547800 	cmpvs	r4, r0, lsl #16
    1c94:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1c98:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1c9c:	756f436b 	strbvc	r4, [pc, #-875]!	; 1939 <__HEAP_SIZE+0x939>
    1ca0:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1ca4:	6b636954 	blvs	18dc1fc <__RAM_SIZE+0x17dc1fc>
    1ca8:	4a6f5473 	bmi	1bd6e7c <__RAM_SIZE+0x1ad6e7c>
    1cac:	00706d75 	rsbseq	r6, r0, r5, ror sp
    1cb0:	61547875 	cmpvs	r4, r5, ror r8
    1cb4:	754e6b73 	strbvc	r6, [lr, #-2931]	; 0xfffff48d
    1cb8:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1cbc:	63416500 	movtvs	r6, #5376	; 0x1500
    1cc0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1cc4:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1cc8:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1ccc:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1cd0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1cd4:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1cd8:	6c61566d 	stclvs	6, cr5, [r1], #-436	; 0xfffffe4c
    1cdc:	76006575 			; <UNDEFINED> instruction: 0x76006575
    1ce0:	6b736154 	blvs	1cda238 <__RAM_SIZE+0x1bda238>
    1ce4:	6f697250 	svcvs	0x00697250
    1ce8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1cec:	00746553 	rsbseq	r6, r4, r3, asr r5
    1cf0:	61547875 	cmpvs	r4, r5, ror r8
    1cf4:	61426b73 	hvcvs	9907	; 0x26b3
    1cf8:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    1cfc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d00:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    1d04:	6f724674 	svcvs	0x00724674
    1d08:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1d0c:	61546500 	cmpvs	r4, r0, lsl #10
    1d10:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1d14:	00657461 	rsbeq	r7, r5, r1, ror #8
    1d18:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1d1c:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    1d20:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1d24:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1d28:	4d646e45 	stclmi	14, cr6, [r4, #-276]!	; 0xfffffeec
    1d2c:	656b7261 	strbvs	r7, [fp, #-609]!	; 0xfffffd9f
    1d30:	75700072 	ldrbvc	r0, [r0, #-114]!	; 0xffffff8e
    1d34:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    1d38:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1d3c:	6174536b 	cmnvs	r4, fp, ror #6
    1d40:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1d44:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    1d48:	6b736154 	blvs	1cda2a0 <__RAM_SIZE+0x1bda2a0>
    1d4c:	6f4e6f54 	svcvs	0x004e6f54
    1d50:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1d54:	61547800 	cmpvs	r4, r0, lsl #16
    1d58:	70006b73 	andvc	r6, r0, r3, ror fp
    1d5c:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1d60:	3431796d 	ldrtcc	r7, [r1], #-2413	; 0xfffff693
    1d64:	61547800 	cmpvs	r4, r0, lsl #16
    1d68:	6f546b73 	svcvs	0x00546b73
    1d6c:	72657551 	rsbvc	r7, r5, #339738624	; 0x14400000
    1d70:	53650079 	cmnpl	r5, #121	; 0x79
    1d74:	69427465 	stmdbvs	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1d78:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1d7c:	4f4d454d 	svcmi	0x004d454d
    1d80:	525f5952 	subspl	r5, pc, #1343488	; 0x148000
    1d84:	4f494745 	svcmi	0x00494745
    1d88:	7875004e 	ldmdavc	r5!, {r1, r2, r3, r6}^
    1d8c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1d90:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    1d94:	4c747369 	ldclmi	3, cr7, [r4], #-420	; 0xfffffe5c
    1d98:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1d9c:	54760068 	ldrbtpl	r0, [r6], #-104	; 0xffffff98
    1da0:	446b7361 	strbtmi	r7, [fp], #-865	; 0xfffffc9f
    1da4:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1da8:	63750065 	cmnvs	r5, #101	; 0x65
    1dac:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1db0:	78003779 	stmdavc	r0, {r0, r3, r4, r5, r6, r8, r9, sl, ip, sp}
    1db4:	6b736154 	blvs	1cda30c <__RAM_SIZE+0x1bda30c>
    1db8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1dbc:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1dc0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1dc4:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1dc8:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1dcc:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
    1dd0:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    1dd4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1dd8:	6f547974 	svcvs	0x00547974
    1ddc:	00657355 	rsbeq	r7, r5, r5, asr r3
    1de0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1de4:	6977536b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r8, r9, ip, lr}^
    1de8:	43686374 	cmnmi	r8, #116, 6	; 0xd0000001
    1dec:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
    1df0:	78007478 	stmdavc	r0, {r3, r4, r5, r6, sl, ip, sp, lr}
    1df4:	4f6d754e 	svcmi	0x006d754e
    1df8:	65764f66 	ldrbvs	r4, [r6, #-3942]!	; 0xfffff09a
    1dfc:	6f6c6672 	svcvs	0x006c6672
    1e00:	78007377 	stmdavc	r0, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1e04:	61657242 	cmnvs	r5, r2, asr #4
    1e08:	6f6f4c6b 	svcvs	0x006f4c6b
    1e0c:	54780070 	ldrbtpl	r0, [r8], #-112	; 0xffffff90
    1e10:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1e14:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1e18:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1e1c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1e20:	00737265 	rsbseq	r7, r3, r5, ror #4
    1e24:	75437870 	strbvc	r7, [r3, #-2160]	; 0xfffff790
    1e28:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1e2c:	42435474 	submi	r5, r3, #116, 8	; 0x74000000
    1e30:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1e34:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1e38:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1e3c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1e40:	61577974 	cmpvs	r7, r4, ror r9
    1e44:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1e48:	73615467 	cmnvc	r1, #1728053248	; 0x67000000
    1e4c:	5378006b 	cmnpl	r8, #107	; 0x6b
    1e50:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1e54:	6f6c4264 	svcvs	0x006c4264
    1e58:	63006b63 	movwvs	r6, #2915	; 0xb63
    1e5c:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1e60:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    1e64:	54787000 	ldrbtpl	r7, [r8], #-0
    1e68:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1e6c:	70006761 	andvc	r6, r0, r1, ror #14
    1e70:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    1e74:	61697469 	cmnvs	r9, r9, ror #8
    1e78:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1e7c:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1e80:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1e84:	61507670 	cmpvs	r0, r0, ror r6
    1e88:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    1e8c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    1e90:	44787000 	ldrbtmi	r7, [r8], #-0
    1e94:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1e98:	61546465 	cmpvs	r4, r5, ror #8
    1e9c:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1ea0:	70007473 	andvc	r7, r0, r3, ror r4
    1ea4:	61547672 	cmpvs	r4, r2, ror r6
    1ea8:	73496b73 	movtvc	r6, #39795	; 0x9b73
    1eac:	6b736154 	blvs	1cda404 <__RAM_SIZE+0x1bda404>
    1eb0:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1eb4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1eb8:	53780064 	cmnpl	r8, #100	; 0x64
    1ebc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1ec0:	71655268 	cmnvc	r5, r8, ror #4
    1ec4:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
    1ec8:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    1ecc:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1ed0:	6c6f4878 	stclvs	8, cr4, [pc], #-480	; 1cf8 <__HEAP_SIZE+0xcf8>
    1ed4:	00726564 	rsbseq	r6, r2, r4, ror #10
    1ed8:	74537870 	ldrbvc	r7, [r3], #-2160	; 0xfffff790
    1edc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1ee0:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1ee4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1ee8:	6b736154 	blvs	1cda440 <__RAM_SIZE+0x1bda440>
    1eec:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1ef0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1ef4:	54780072 	ldrbtpl	r0, [r8], #-114	; 0xffffff8e
    1ef8:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1efc:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    1f00:	00657465 	rsbeq	r7, r5, r5, ror #8
    1f04:	61566c75 	cmpvs	r6, r5, ror ip
    1f08:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1f0c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1f10:	536f546b 	cmnpl	pc, #1795162112	; 0x6b000000
    1f14:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    1f18:	7600646e 	strvc	r6, [r0], -lr, ror #8
    1f1c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1f20:	53646e45 	cmnpl	r4, #1104	; 0x450
    1f24:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1f28:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1f2c:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
    1f30:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1f34:	466b7361 	strbtmi	r7, [fp], -r1, ror #6
    1f38:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1f3c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1f40:	72507870 	subsvc	r7, r0, #112, 16	; 0x700000
    1f44:	6f697665 	svcvs	0x00697665
    1f48:	61577375 	cmpvs	r7, r5, ror r3
    1f4c:	6954656b 	ldmdbvs	r4, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
    1f50:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1f54:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    1f58:	545f4349 	ldrbpl	r4, [pc], #-841	; 1f60 <__HEAP_SIZE+0xf60>
    1f5c:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    1f60:	6b736154 	blvs	1cda4b8 <__RAM_SIZE+0x1bda4b8>
    1f64:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1f68:	6c654474 	cfstrdvs	mvd4, [r5], #-464	; 0xfffffe30
    1f6c:	78007961 	stmdavc	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    1f70:	6b736154 	blvs	1cda4c8 <__RAM_SIZE+0x1bda4c8>
    1f74:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1f78:	7246656d 	subvc	r6, r6, #457179136	; 0x1b400000
    1f7c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1f80:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    1f84:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1f88:	00383179 	eorseq	r3, r8, r9, ror r1
    1f8c:	4e6c7570 	mcrmi	5, 3, r7, cr12, cr0, {3}
    1f90:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1f94:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1f98:	566e6f69 	strbtpl	r6, [lr], -r9, ror #30
    1f9c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1fa0:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    1fa4:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1fa8:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1fac:	6b636174 	blvs	18da584 <__RAM_SIZE+0x17da584>
    1fb0:	73615400 	cmnvc	r1, #0, 8
    1fb4:	6f6f486b 	svcvs	0x006f486b
    1fb8:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    1fbc:	6f697463 	svcvs	0x00697463
    1fc0:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    1fc4:	61745365 	cmnvs	r4, r5, ror #6
    1fc8:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    1fcc:	656c5364 	strbvs	r5, [ip, #-868]!	; 0xfffffc9c
    1fd0:	75007065 	strvc	r7, [r0, #-101]	; 0xffffff9b
    1fd4:	756f4378 	strbvc	r4, [pc, #-888]!	; 1c64 <__HEAP_SIZE+0xc64>
    1fd8:	6500746e 	strvs	r7, [r0, #-1134]	; 0xfffffb92
    1fdc:	61546f4e 	cmpvs	r4, lr, asr #30
    1fe0:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1fe4:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1fe8:	6954676e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1fec:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1a87 <__HEAP_SIZE+0xa87>
    1ff0:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0xffffff8c
    1ff4:	646e4563 	strbtvs	r4, [lr], #-1379	; 0xfffffa9d
    1ff8:	7453664f 	ldrbvc	r6, [r3], #-1615	; 0xfffff9b1
    1ffc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2000:	754d7870 	strbvc	r7, [sp, #-2160]	; 0xfffff790
    2004:	48786574 	ldmdami	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2008:	65646c6f 	strbvs	r6, [r4, #-3183]!	; 0xfffff391
    200c:	42435472 	submi	r5, r3, #1912602624	; 0x72000000
    2010:	54637000 	strbtpl	r7, [r3], #-0
    2014:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2018:	614e7465 	cmpvs	lr, r5, ror #8
    201c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2020:	6b636954 	blvs	18dc578 <__RAM_SIZE+0x17dc578>
    2024:	43780073 	cmnmi	r8, #115	; 0x73
    2028:	6c426e61 	mcrrvs	14, 6, r6, r2, cr1
    202c:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2030:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
    2034:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2038:	00796c65 	rsbseq	r6, r9, r5, ror #24
    203c:	6e755265 	cdpvs	2, 7, cr5, cr5, cr5, {3}
    2040:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2044:	4e637000 	cdpmi	0, 6, cr7, cr3, cr0, {0}
    2048:	54656d61 	strbtpl	r6, [r5], #-3425	; 0xfffff29f
    204c:	6575516f 	ldrbvs	r5, [r5, #-367]!	; 0xfffffe91
    2050:	70007972 	andvc	r7, r0, r2, ror r9
    2054:	73614276 	cmnvc	r1, #1610612743	; 0x60000007
    2058:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
    205c:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2060:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2064:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    2068:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    206c:	76007961 	strvc	r7, [r0], -r1, ror #18
    2070:	6b736154 	blvs	1cda5c8 <__RAM_SIZE+0x1bda5c8>
    2074:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    2078:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    207c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2080:	76694779 			; <UNDEFINED> instruction: 0x76694779
    2084:	6f724665 	svcvs	0x00724665
    2088:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    208c:	6f507600 	svcvs	0x00507600
    2090:	75537472 	ldrbvc	r7, [r3, #-1138]	; 0xfffffb8e
    2094:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
    2098:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    209c:	41736b63 	cmnmi	r3, r3, ror #22
    20a0:	6c53646e 	cfldrdvs	mvd6, [r3], {110}	; 0x6e
    20a4:	00706565 	rsbseq	r6, r0, r5, ror #10
    20a8:	54787570 	ldrbtpl	r7, [r8], #-1392	; 0xfffffa90
    20ac:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    20b0:	6b736154 	blvs	1cda608 <__RAM_SIZE+0x1bda608>
    20b4:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    20b8:	7a69536b 	bvc	1a56e6c <__RAM_SIZE+0x1956e6c>
    20bc:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    20c0:	2f2e2e2f 	svccs	0x002e2e2f
    20c4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2014 <__HEAP_SIZE+0x1014>
    20c8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    20cc:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    20d0:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    20d4:	2f534f54 	svccs	0x00534f54
    20d8:	6b736174 	blvs	1cda6b0 <__RAM_SIZE+0x1bda6b0>
    20dc:	00632e73 	rsbeq	r2, r3, r3, ror lr
    20e0:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    20e4:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    20e8:	6961576f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    20ec:	49650074 	stmdbmi	r5!, {r2, r4, r5, r6}^
    20f0:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
    20f4:	75006469 	strvc	r6, [r0, #-1129]	; 0xfffffb97
    20f8:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    20fc:	6f697250 	svcvs	0x00697250
    2100:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2104:	42787500 	rsbsmi	r7, r8, #0, 10
    2108:	50657361 	rsbpl	r7, r5, r1, ror #6
    210c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2110:	00797469 	rsbseq	r7, r9, r9, ror #8
    2114:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    2118:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    211c:	73557974 	cmpvc	r5, #116, 18	; 0x1d0000
    2120:	6e4f6465 	cdpvs	4, 4, cr6, cr15, cr5, {3}
    2124:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
    2128:	43540079 	cmpmi	r4, #121	; 0x79
    212c:	00745f42 	rsbseq	r5, r4, r2, asr #30
    2130:	44767270 	ldrbtmi	r7, [r6], #-624	; 0xfffffd90
    2134:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    2138:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    213c:	6c426500 	cfstr64vs	mvdx6, [r2], {-0}
    2140:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    2144:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
    2148:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    214c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    2150:	7800646e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
    2154:	65726c41 	ldrbvs	r6, [r2, #-3137]!	; 0xfffff3bf
    2158:	59796461 	ldmdbpl	r9!, {r0, r5, r6, sl, sp, lr}^
    215c:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    2160:	70006465 	andvc	r6, r0, r5, ror #8
    2164:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    2168:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    216c:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    2170:	70006d65 	andvc	r6, r0, r5, ror #26
    2174:	72615076 	rsbvc	r5, r1, #118	; 0x76
    2178:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    217c:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2180:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2184:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2188:	00736b63 	rsbseq	r6, r3, r3, ror #22
    218c:	54767270 	ldrbtpl	r7, [r6], #-624	; 0xfffffd90
    2190:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    2194:	6b636568 	blvs	18db73c <__RAM_SIZE+0x17db73c>
    2198:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    219c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    21a0:	6170536b 	cmnvs	r0, fp, ror #6
    21a4:	75006563 	strvc	r6, [r0, #-1379]	; 0xfffffa9d
    21a8:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    21ac:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    21b0:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    21b4:	6f697250 	svcvs	0x00697250
    21b8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    21bc:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    21c0:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    21c4:	7461436f 	strbtvc	r4, [r1], #-879	; 0xfffffc91
    21c8:	70556863 	subsvc	r6, r5, r3, ror #16
    21cc:	65527800 	ldrbvs	r7, [r2, #-2048]	; 0xfffff800
    21d0:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    21d4:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    21d8:	64644176 	strbtvs	r4, [r4], #-374	; 0xfffffe8a
    21dc:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    21e0:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    21e4:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    21e8:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    21ec:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    21f0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    21f4:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
    21f8:	70416e6f 	subvc	r6, r1, pc, ror #28
    21fc:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2200:	6f697461 	svcvs	0x00697461
    2204:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2208:	6300736b 	movwvs	r7, #875	; 0x36b
    220c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    2210:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    2214:	61547800 	cmpvs	r4, r0, lsl #16
    2218:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    221c:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    2220:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2224:	6b736154 	blvs	1cda77c <__RAM_SIZE+0x1bda77c>
    2228:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    222c:	6f46656c 	svcvs	0x0046656c
    2230:	726f4372 	rsbvc	r4, pc, #-939524095	; 0xc8000001
    2234:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    2238:	6b736154 	blvs	1cda790 <__RAM_SIZE+0x1bda790>
    223c:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    2240:	6f697250 	svcvs	0x00697250
    2244:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2248:	00746547 	rsbseq	r6, r4, r7, asr #10
    224c:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
    2250:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    2254:	6d754e74 	ldclvs	14, cr4, [r5, #-464]!	; 0xfffffe30
    2258:	4f726562 	svcmi	0x00726562
    225c:	73615466 	cmnvc	r1, #1711276032	; 0x66000000
    2260:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    2264:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2268:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
    226c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2270:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    2274:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2278:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    227c:	6154656c 	cmpvs	r4, ip, ror #10
    2280:	61486b73 	hvcvs	34483	; 0x86b3
    2284:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2288:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    228c:	6f54656d 	svcvs	0x0054656d
    2290:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    2294:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
    2298:	4c657461 	cfstrdmi	mvd7, [r5], #-388	; 0xfffffe7c
    229c:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    22a0:	006d6574 	rsbeq	r6, sp, r4, ror r5
    22a4:	70704176 	rsbsvc	r4, r0, r6, ror r1
    22a8:	6163696c 	cmnvs	r3, ip, ror #18
    22ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    22b0:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    22b4:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    22b8:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    22bc:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    22c0:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    22c4:	00424354 	subeq	r4, r2, r4, asr r3
    22c8:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    22cc:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    22d0:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    22d4:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    22d8:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    22dc:	43657461 	cmnmi	r5, #1627389952	; 0x61000000
    22e0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    22e4:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    22e8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    22ec:	6b736154 	blvs	1cda844 <__RAM_SIZE+0x1bda844>
    22f0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    22f4:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    22f8:	6b736154 	blvs	1cda850 <__RAM_SIZE+0x1bda850>
    22fc:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
    2300:	53787500 	cmnpl	r8, #0, 10
    2304:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2308:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    230c:	70737553 	rsbsvc	r7, r3, r3, asr r5
    2310:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    2314:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    2318:	4f706f54 	svcmi	0x00706f54
    231c:	61745366 	cmnvs	r4, r6, ror #6
    2320:	76006b63 	strvc	r6, [r0], -r3, ror #22
    2324:	6b736154 	blvs	1cda87c <__RAM_SIZE+0x1bda87c>
    2328:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    232c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2330:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2334:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    2338:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    233c:	65614472 	strbvs	r4, [r1, #-1138]!	; 0xfffffb8e
    2340:	546e6f6d 	strbtpl	r6, [lr], #-3949	; 0xfffff093
    2344:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2348:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    234c:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    2350:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    2354:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2358:	54657369 	strbtpl	r7, [r5], #-873	; 0xfffffc97
    235c:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    2360:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    2364:	64497800 	strbvs	r7, [r9], #-2048	; 0xfffff800
    2368:	6154656c 	cmpvs	r4, ip, ror #10
    236c:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    2370:	78750042 	ldmdavc	r5!, {r1, r6}^
    2374:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2378:	4e6f5478 	mcrmi	4, 3, r5, cr15, cr8, {3}
    237c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2380:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    2384:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2388:	70417465 	subvc	r7, r1, r5, ror #8
    238c:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2390:	6f697461 	svcvs	0x00697461
    2394:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2398:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    239c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 228c <__HEAP_SIZE+0x128c>
    23a0:	00525349 	subseq	r5, r2, r9, asr #6
    23a4:	72437870 	subvc	r7, r3, #112, 16	; 0x700000
    23a8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    23ac:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    23b0:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
    23b4:	65684376 	strbvs	r4, [r8, #-886]!	; 0xfffffc8a
    23b8:	61546b63 	cmpvs	r4, r3, ror #22
    23bc:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    23c0:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    23c4:	6554676e 	ldrbvs	r6, [r4, #-1902]	; 0xfffff892
    23c8:	6e696d72 	mcrvs	13, 3, r6, cr9, cr2, {3}
    23cc:	6f697461 	svcvs	0x00697461
    23d0:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    23d4:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    23d8:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    23dc:	616c6544 	cmnvs	ip, r4, asr #10
    23e0:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    23e4:	00747369 	rsbseq	r7, r4, r9, ror #6
    23e8:	65526c75 	ldrbvs	r6, [r2, #-3189]	; 0xfffff38b
    23ec:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    23f0:	61547800 	cmpvs	r4, r0, lsl #16
    23f4:	73496b73 	movtvc	r6, #39795	; 0x9b73
    23f8:	6e6e7552 	mcrvs	5, 3, r7, cr14, cr2, {2}
    23fc:	4f676e69 	svcmi	0x00676e69
    2400:	65695972 	strbvs	r5, [r9, #-2418]!	; 0xfffff68e
    2404:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    2408:	78750067 	ldmdavc	r5!, {r0, r1, r2, r5, r6}^
    240c:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2410:	576f5478 			; <UNDEFINED> instruction: 0x576f5478
    2414:	4f746961 	svcmi	0x00746961
    2418:	4378006e 	cmnmi	r8, #110	; 0x6e
    241c:	616d6d6f 	cmnvs	sp, pc, ror #26
    2420:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    2424:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2428:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    242c:	72655072 	rsbvc	r5, r5, #114	; 0x72
    2430:	49646f69 	stmdbmi	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2434:	6369546e 	cmnvs	r9, #1845493760	; 0x6e000000
    2438:	7000736b 	andvc	r7, r0, fp, ror #6
    243c:	6c614378 	stclvs	3, cr4, [r1], #-480	; 0xfffffe20
    2440:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2444:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    2448:	6f697463 	svcvs	0x00697463
    244c:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    2450:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2454:	45736157 	ldrbmi	r6, [r3, #-343]!	; 0xfffffea9
    2458:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    245c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2460:	6f4e656d 	svcvs	0x004e656d
    2464:	53780077 	cmnpl	r8, #119	; 0x77
    2468:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    246c:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2470:	75517265 	ldrbvc	r7, [r1, #-613]	; 0xfffffd9b
    2474:	00657565 	rsbeq	r7, r5, r5, ror #10
    2478:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    247c:	61507265 	cmpvs	r0, r5, ror #4
    2480:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2484:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    2488:	704f7800 	subvc	r7, pc, r0, lsl #16
    248c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2490:	61566c61 	cmpvs	r6, r1, ror #24
    2494:	0065756c 	rsbeq	r7, r5, ip, ror #10
    2498:	69546370 	ldmdbvs	r4, {r4, r5, r6, r8, r9, sp, lr}^
    249c:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    24a0:	00656d61 	rsbeq	r6, r5, r1, ror #26
    24a4:	61506c75 	cmpvs	r0, r5, ror ip
    24a8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    24ac:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
    24b0:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24b4:	5072656d 	rsbspl	r6, r2, sp, ror #10
    24b8:	46646e65 	strbtmi	r6, [r4], -r5, ror #28
    24bc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    24c0:	436e6f69 	cmnmi	lr, #420	; 0x1a4
    24c4:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    24c8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    24cc:	72615072 	rsbvc	r5, r1, #114	; 0x72
    24d0:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    24d4:	745f7265 	ldrbvc	r7, [pc], #-613	; 24dc <__HEAP_SIZE+0x14dc>
    24d8:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24dc:	5172656d 	cmnpl	r2, sp, ror #10
    24e0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    24e4:	61745300 	cmnvs	r4, r0, lsl #6
    24e8:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    24ec:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24f0:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    24f4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    24f8:	545f4349 	ldrbpl	r4, [pc], #-841	; 2500 <__HEAP_SIZE+0x1500>
    24fc:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    2500:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2504:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2508:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    250c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    2510:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    2514:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    2518:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    251c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2520:	6b636162 	blvs	18daab0 <__RAM_SIZE+0x17daab0>
    2524:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2528:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    252c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2530:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2534:	49646e61 	stmdbmi	r4!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    2538:	50780044 	rsbspl	r0, r8, r4, asr #32
    253c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2540:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2544:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    2548:	7000776f 	andvc	r7, r0, pc, ror #14
    254c:	68437672 	stmdavs	r3, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    2550:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    2554:	6156726f 	cmpvs	r6, pc, ror #4
    2558:	4c64696c 			; <UNDEFINED> instruction: 0x4c64696c
    255c:	41747369 	cmnmi	r4, r9, ror #6
    2560:	7551646e 	ldrbvc	r6, [r1, #-1134]	; 0xfffffb92
    2564:	00657565 	rsbeq	r7, r5, r5, ror #10
    2568:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    256c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2570:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2574:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2578:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    257c:	4f545265 	svcmi	0x00545265
    2580:	69742f53 	ldmdbvs	r4!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
    2584:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    2588:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    258c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2590:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2594:	6c655274 	sfmvs	f5, 2, [r5], #-464	; 0xfffffe30
    2598:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    259c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25a0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    25a4:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
    25a8:	5f656c64 	svcpl	0x00656c64
    25ac:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    25b0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    25b4:	61657243 	cmnvs	r5, r3, asr #4
    25b8:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    25bc:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    25c0:	76727000 	ldrbtvc	r7, [r2], -r0
    25c4:	636f7250 	cmnvs	pc, #80, 4
    25c8:	45737365 	ldrbmi	r7, [r3, #-869]!	; 0xfffffc9b
    25cc:	72697078 	rsbvc	r7, r9, #120	; 0x78
    25d0:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    25d4:	0072656d 	rsbseq	r6, r2, sp, ror #10
    25d8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    25dc:	6b636162 	blvs	18dab6c <__RAM_SIZE+0x17dab6c>
    25e0:	61726150 	cmnvs	r2, r0, asr r1
    25e4:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    25e8:	745f7372 	ldrbvc	r7, [pc], #-882	; 25f0 <__HEAP_SIZE+0x15f0>
    25ec:	44767000 	ldrbtmi	r7, [r6], #-0
    25f0:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    25f4:	78700036 	ldmdavc	r0!, {r1, r2, r4, r5}^
    25f8:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    25fc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2600:	52767000 	rsbspl	r7, r6, #0
    2604:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    2608:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
    260c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2610:	69547349 	ldmdbvs	r4, {r0, r3, r6, r8, r9, ip, sp, lr}^
    2614:	4172656d 	cmnmi	r2, sp, ror #10
    2618:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    261c:	45780065 	ldrbmi	r0, [r8, #-101]!	; 0xffffff9b
    2620:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2624:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2628:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    262c:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    2630:	5172656d 	cmnpl	r2, sp, ror #10
    2634:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2638:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    263c:	00656761 	rsbeq	r6, r5, r1, ror #14
    2640:	69547670 	ldmdbvs	r4, {r4, r5, r6, r9, sl, ip, sp, lr}^
    2644:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2648:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    264c:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2650:	41780044 	cmnmi	r8, r4, asr #32
    2654:	526f7475 	rsbpl	r7, pc, #1962934272	; 0x75000000
    2658:	616f6c65 	cmnvs	pc, r5, ror #24
    265c:	54780064 	ldrbtpl	r0, [r8], #-100	; 0xffffff9c
    2660:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2664:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    2668:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    266c:	616d6d6f 	cmnvs	sp, pc, ror #26
    2670:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
    2674:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2678:	78700052 	ldmdavc	r0!, {r1, r4, r6}^
    267c:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    2680:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    2684:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2688:	73694c72 	cmnvc	r9, #29184	; 0x7200
    268c:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    2690:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    2694:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2698:	4e657369 	cdpmi	3, 6, cr7, cr5, cr9, {3}
    269c:	69547765 	ldmdbvs	r4, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    26a0:	0072656d 	rsbseq	r6, r2, sp, ror #10
    26a4:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
    26a8:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    26ac:	49547800 	ldmdbmi	r4, {fp, ip, sp, lr}^
    26b0:	0052454d 	subseq	r4, r2, sp, asr #10
    26b4:	74634178 	strbtvc	r4, [r3], #-376	; 0xfffffe88
    26b8:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    26bc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    26c0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    26c4:	41780031 	cmnmi	r8, r1, lsr r0
    26c8:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    26cc:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    26d0:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    26d4:	00327473 	eorseq	r7, r2, r3, ror r4
    26d8:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    26dc:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    26e0:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    26e4:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    26e8:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    26ec:	694c6576 	stmdbvs	ip, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    26f0:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    26f4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    26f8:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    26fc:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2700:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    2704:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    2708:	6143726d 	cmpvs	r3, sp, ror #4
    270c:	61626c6c 	cmnvs	r2, ip, ror #24
    2710:	61506b63 	cmpvs	r0, r3, ror #22
    2714:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2718:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    271c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2720:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2724:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    2728:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    272c:	6d615376 	stclvs	3, cr5, [r1, #-472]!	; 0xfffffe28
    2730:	54656c70 	strbtpl	r6, [r5], #-3184	; 0xfffff390
    2734:	4e656d69 	cdpmi	13, 6, cr6, cr5, cr9, {3}
    2738:	7800776f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
    273c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2740:	6b636162 	blvs	18dacd0 <__RAM_SIZE+0x17dacd0>
    2744:	61726150 	cmnvs	r2, r0, asr r1
    2748:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    274c:	76007372 			; <UNDEFINED> instruction: 0x76007372
    2750:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2754:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    2758:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    275c:	00444972 	subeq	r4, r4, r2, ror r9
    2760:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2764:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2768:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    276c:	70006d65 	andvc	r6, r0, r5, ror #26
    2770:	77654e76 			; <UNDEFINED> instruction: 0x77654e76
    2774:	70004449 	andvc	r4, r0, r9, asr #8
    2778:	77537672 			; <UNDEFINED> instruction: 0x77537672
    277c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2780:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2784:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2788:	70007374 	andvc	r7, r0, r4, ror r3
    278c:	65527672 	ldrbvs	r7, [r2, #-1650]	; 0xfffff98e
    2790:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    2794:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2798:	63750072 	cmnvs	r5, #114	; 0x72
    279c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    27a0:	69546369 	ldmdbvs	r4, {r0, r3, r5, r6, r8, r9, sp, lr}^
    27a4:	5172656d 	cmnpl	r2, sp, ror #10
    27a8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    27ac:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
    27b0:	00656761 	rsbeq	r6, r5, r1, ror #14
    27b4:	61507670 	cmpvs	r0, r0, ror r6
    27b8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27bc:	31726574 	cmncc	r2, r4, ror r5
    27c0:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    27c4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    27c8:	54780038 	ldrbtpl	r0, [r8], #-56	; 0xffffffc8
    27cc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    27d0:	6b736154 	blvs	1cdad28 <__RAM_SIZE+0x1bdad28>
    27d4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    27d8:	7000656c 	andvc	r6, r0, ip, ror #10
    27dc:	69547672 	ldmdbvs	r4, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    27e0:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    27e4:	006b7361 	rsbeq	r7, fp, r1, ror #6
    27e8:	78654e78 	stmdavc	r5!, {r3, r4, r5, r6, r9, sl, fp, lr}^
    27ec:	70784574 	rsbsvc	r4, r8, r4, ror r5
    27f0:	54657269 	strbtpl	r7, [r5], #-617	; 0xfffffd97
    27f4:	00656d69 	rsbeq	r6, r5, r9, ror #26
    27f8:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    27fc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2800:	76727000 	ldrbtvc	r7, [r2], -r0
    2804:	636f7250 	cmnvs	pc, #80, 4
    2808:	52737365 	rsbspl	r7, r3, #-1811939327	; 0x94000001
    280c:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    2810:	43646576 	cmnmi	r4, #494927872	; 0x1d800000
    2814:	616d6d6f 	cmnvs	sp, pc, ror #26
    2818:	0073646e 	rsbseq	r6, r3, lr, ror #8
    281c:	73614c78 	cmnvc	r1, #120, 24	; 0x7800
    2820:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    2824:	65500065 	ldrbvs	r0, [r0, #-101]	; 0xffffff9b
    2828:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    282c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2830:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2834:	7000745f 	andvc	r7, r0, pc, asr r4
    2838:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    283c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2840:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2844:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2848:	4d780074 	ldclmi	0, cr0, [r8, #-464]!	; 0xfffffe30
    284c:	61737365 	cmnvs	r3, r5, ror #6
    2850:	70006567 	andvc	r6, r0, r7, ror #10
    2854:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2858:	44497265 	strbmi	r7, [r9], #-613	; 0xfffffd9b
    285c:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    2860:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2864:	00444965 	subeq	r4, r4, r5, ror #18
    2868:	6d656144 	stfvse	f6, [r5, #-272]!	; 0xfffffef0
    286c:	61546e6f 	cmpvs	r4, pc, ror #28
    2870:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    2874:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2878:	00745f65 	rsbseq	r5, r4, r5, ror #30
    287c:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2880:	65527265 	ldrbvs	r7, [r2, #-613]	; 0xfffffd9b
    2884:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2888:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    288c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2890:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2894:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2898:	646f6972 	strbtvs	r6, [pc], #-2418	; 28a0 <__HEAP_SIZE+0x18a0>
    289c:	54787000 	ldrbtpl	r7, [r8], #-0
    28a0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28a4:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    28a8:	67617373 			; <UNDEFINED> instruction: 0x67617373
    28ac:	6c615665 	stclvs	6, cr5, [r1], #-404	; 0xfffffe6c
    28b0:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    28b4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28bc:	65506f54 	ldrbvs	r6, [r0, #-3924]	; 0xfffff0ac
    28c0:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    28c4:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    28c8:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    28cc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    28d0:	70006c6f 	andvc	r6, r0, pc, ror #24
    28d4:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    28d8:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    28dc:	6d614e74 	stclvs	14, cr4, [r1, #-464]!	; 0xfffffe30
    28e0:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    28e4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28e8:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    28ec:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28f4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    28f8:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 27e8 <__HEAP_SIZE+0x17e8>
    28fc:	00525349 	subseq	r5, r2, r9, asr #6
    2900:	50767270 	rsbspl	r7, r6, r0, ror r2
    2904:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2908:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    290c:	4f72656d 	svcmi	0x0072656d
    2910:	6f6c4272 	svcvs	0x006c4272
    2914:	61546b63 	cmpvs	r4, r3, ror #22
    2918:	76006b73 			; <UNDEFINED> instruction: 0x76006b73
    291c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2920:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    2924:	6f6c6552 	svcvs	0x006c6552
    2928:	6f4d6461 	svcvs	0x004d6461
    292c:	78006564 	stmdavc	r0, {r2, r5, r6, r8, sl, sp, lr}
    2930:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2934:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2938:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    293c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2940:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2944:	6e654772 	mcrvs	7, 3, r4, cr5, cr2, {3}
    2948:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    294c:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2950:	46646e61 	strbtmi	r6, [r4], -r1, ror #28
    2954:	546d6f72 	strbtpl	r6, [sp], #-3954	; 0xfffff08e
    2958:	006b7361 	rsbeq	r7, fp, r1, ror #6
    295c:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    2960:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2964:	61726150 	cmnvs	r2, r0, asr r1
    2968:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    296c:	70007372 	andvc	r7, r0, r2, ror r3
    2970:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    2974:	4272656d 	rsbsmi	r6, r2, #457179136	; 0x1b400000
    2978:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    297c:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    2980:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2984:	6b636162 	blvs	18daf14 <__RAM_SIZE+0x17daf14>
    2988:	76727000 	ldrbtvc	r7, [r2], -r0
    298c:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2990:	45747865 	ldrbmi	r7, [r4, #-2149]!	; 0xfffff79b
    2994:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2998:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    299c:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    29a0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29a4:	73694c72 	cmnvc	r9, #29184	; 0x7200
    29a8:	65577374 	ldrbvs	r7, [r7, #-884]	; 0xfffffc8c
    29ac:	77536572 			; <UNDEFINED> instruction: 0x77536572
    29b0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    29b4:	70006465 	andvc	r6, r0, r5, ror #8
    29b8:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    29bc:	756f6976 	strbvc	r6, [pc, #-2422]!	; 204e <__HEAP_SIZE+0x104e>
    29c0:	6f6c4273 	svcvs	0x006c4273
    29c4:	70006b63 	andvc	r6, r0, r3, ror #22
    29c8:	61654878 	smcvs	21640	; 0x5488
    29cc:	61745370 	cmnvs	r4, r0, ror r3
    29d0:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    29d4:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    29d8:	456d756d 	strbmi	r7, [sp, #-1389]!	; 0xfffffa93
    29dc:	46726576 			; <UNDEFINED> instruction: 0x46726576
    29e0:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    29e4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    29e8:	616d6552 	cmnvs	sp, r2, asr r5
    29ec:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    29f0:	65480067 	strbvs	r0, [r8, #-103]	; 0xffffff99
    29f4:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    29f8:	5f737461 	svcpl	0x00737461
    29fc:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2a00:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2a04:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2a08:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a0c:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2a10:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a14:	4d78006b 	ldclmi	0, cr0, [r8, #-428]!	; 0xfffffe54
    2a18:	69536e69 	ldmdbvs	r3, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2a1c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2a20:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2a24:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2a28:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2a2c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a30:	7000736b 	andvc	r7, r0, fp, ror #6
    2a34:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
    2a38:	76727000 	ldrbtvc	r7, [r2], -r0
    2a3c:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    2a40:	6c427472 	cfstrdvs	mvd7, [r2], {114}	; 0x72
    2a44:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2a48:	466f746e 	strbtmi	r7, [pc], -lr, ror #8
    2a4c:	4c656572 	cfstr64mi	mvdx6, [r5], #-456	; 0xfffffe38
    2a50:	00747369 	rsbseq	r7, r4, r9, ror #6
    2a54:	4c425f41 	mcrrmi	15, 4, r5, r2, cr1
    2a58:	5f4b434f 	svcpl	0x004b434f
    2a5c:	4b4e494c 	blmi	1394f94 <__RAM_SIZE+0x1294f94>
    2a60:	53787500 	cmnpl	r8, #0, 10
    2a64:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2a68:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    2a6c:	00737365 	rsbseq	r7, r3, r5, ror #6
    2a70:	7a695378 	bvc	1a57858 <__RAM_SIZE+0x1957858>
    2a74:	53664f65 	cmnpl	r6, #404	; 0x194
    2a78:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    2a7c:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2a80:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2a84:	6b636f6c 	blvs	18de83c <__RAM_SIZE+0x17de83c>
    2a88:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2a8c:	00736574 	rsbseq	r6, r3, r4, ror r5
    2a90:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2a94:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2a98:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2a9c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2aa0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2aa4:	4f545265 	svcmi	0x00545265
    2aa8:	6f702f53 	svcvs	0x00702f53
    2aac:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2ab0:	4d2f656c 	cfstr32mi	mvfx6, [pc, #-432]!	; 2908 <__HEAP_SIZE+0x1908>
    2ab4:	614d6d65 	cmpvs	sp, r5, ror #26
    2ab8:	682f676e 	stmdavs	pc!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}	; <UNPREDICTABLE>
    2abc:	5f706165 	svcpl	0x00706165
    2ac0:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    2ac4:	6e457875 	mcrvs	8, 2, r7, cr5, cr5, {3}
    2ac8:	64644164 	strbtvs	r4, [r4], #-356	; 0xfffffe9c
    2acc:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2ad0:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
    2ad4:	6c427765 	mcrrvs	7, 6, r7, r2, cr5
    2ad8:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2adc:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2ae0:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2ae4:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2ae8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2aec:	70616548 	rsbvc	r6, r1, r8, asr #10
    2af0:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2af4:	64417800 	strbvs	r7, [r1], #-2048	; 0xfffff800
    2af8:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
    2afc:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
    2b00:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    2b04:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2b08:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2b0c:	6f507600 	svcvs	0x00507600
    2b10:	65487472 	strbvs	r7, [r8, #-1138]	; 0xfffffb8e
    2b14:	65527061 	ldrbvs	r7, [r2, #-97]	; 0xffffff9f
    2b18:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2b1c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2b20:	614d7800 	cmpvs	sp, r0, lsl #16
    2b24:	7a695378 	bvc	1a5790c <__RAM_SIZE+0x195790c>
    2b28:	50780065 	rsbspl	r0, r8, r5, rrx
    2b2c:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2b30:	694d7465 	stmdbvs	sp, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2b34:	756d696e 	strbvc	r6, [sp, #-2414]!	; 0xfffff692
    2b38:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    2b3c:	65724672 	ldrbvs	r4, [r2, #-1650]!	; 0xfffff98e
    2b40:	61654865 	cmnvs	r5, r5, ror #16
    2b44:	7a695370 	bvc	1a5790c <__RAM_SIZE+0x195790c>
    2b48:	6c420065 	mcrrvs	0, 6, r0, r2, cr5
    2b4c:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2b50:	5f6b6e69 	svcpl	0x006b6e69
    2b54:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    2b58:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2b5c:	53664f72 	cmnpl	r6, #456	; 0x1c8
    2b60:	65636375 	strbvs	r6, [r3, #-885]!	; 0xfffffc8b
    2b64:	75667373 	strbvc	r7, [r6, #-883]!	; 0xfffffc8d
    2b68:	6c6c416c 	stfvse	f4, [ip], #-432	; 0xfffffe50
    2b6c:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2b70:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    2b74:	76417800 	strbvc	r7, [r1], -r0, lsl #16
    2b78:	616c6961 	cmnvs	ip, r1, ror #18
    2b7c:	48656c62 	stmdami	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2b80:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2b84:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2b88:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2b8c:	00736574 	rsbseq	r6, r3, r4, ror r5
    2b90:	61654878 	smcvs	21640	; 0x5488
    2b94:	72745370 	rsbsvc	r5, r4, #112, 6	; 0xc0000001
    2b98:	53746375 	cmnpl	r4, #-738197503	; 0xd4000001
    2b9c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2ba0:	6f507670 	svcvs	0x00507670
    2ba4:	61437472 	hvcvs	14146	; 0x3742
    2ba8:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    2bac:	72467800 	subvc	r7, r6, #0, 16
    2bb0:	79426565 	stmdbvc	r2, {r0, r2, r5, r6, r8, sl, sp, lr}^
    2bb4:	52736574 	rsbspl	r6, r3, #116, 10	; 0x1d000000
    2bb8:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    2bbc:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2bc0:	69537800 	ldmdbvs	r3, {fp, ip, sp, lr}^
    2bc4:	664f657a 			; <UNDEFINED> instruction: 0x664f657a
    2bc8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
    2bcc:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2bd0:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2bd4:	6b636f6c 	blvs	18de98c <__RAM_SIZE+0x17de98c>
    2bd8:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2bdc:	00736574 	rsbseq	r6, r3, r4, ror r5
    2be0:	48767270 	ldmdami	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2be4:	49706165 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sp, lr}^
    2be8:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2bec:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    2bf0:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    2bf4:	736e496f 	cmnvc	lr, #1818624	; 0x1bc000
    2bf8:	00747265 	rsbseq	r7, r4, r5, ror #4
    2bfc:	746f5478 	strbtvc	r5, [pc], #-1144	; 2c04 <__HEAP_SIZE+0x1c04>
    2c00:	65486c61 	strbvs	r6, [r8, #-3169]	; 0xfffff39f
    2c04:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    2c08:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2c0c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2c10:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2c14:	63637553 	cmnvs	r3, #348127232	; 0x14c00000
    2c18:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
    2c1c:	72466c75 	subvc	r6, r6, #29952	; 0x7500
    2c20:	00736565 	rsbseq	r6, r3, r5, ror #10
    2c24:	6f6c4278 	svcvs	0x006c4278
    2c28:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    2c2c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2c30:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    2c34:	42780074 	rsbsmi	r0, r8, #116	; 0x74
    2c38:	6b636f6c 	blvs	18de9f0 <__RAM_SIZE+0x17de9f0>
    2c3c:	4e780073 	mrcmi	0, 3, r0, cr8, cr3, {3}
    2c40:	70006d75 	andvc	r6, r0, r5, ror sp
    2c44:	72694678 	rsbvc	r4, r9, #120, 12	; 0x7800000
    2c48:	72467473 	subvc	r7, r6, #1929379840	; 0x73000000
    2c4c:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2c50:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2c54:	6e615778 	mcrvs	7, 3, r5, cr1, cr8, {3}
    2c58:	53646574 	cmnpl	r4, #116, 10	; 0x1d000000
    2c5c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2c60:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2c64:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    2c68:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2c6c:	42657369 	rsbmi	r7, r5, #-1543503871	; 0xa4000001
    2c70:	6b636f6c 	blvs	18dea28 <__RAM_SIZE+0x17dea28>
    2c74:	50760073 	rsbspl	r0, r6, r3, ror r0
    2c78:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2c7c:	65487465 	strbvs	r7, [r8, #-1125]	; 0xfffffb9b
    2c80:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2c84:	00737461 	rsbseq	r7, r3, r1, ror #8
    2c88:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    2c8c:	75006b6e 	strvc	r6, [r0, #-2926]	; 0xfffff492
    2c90:	6972436c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, r9, lr}^
    2c94:	61636974 	smcvs	13972	; 0x3694
    2c98:	73654e6c 	cmnvc	r5, #108, 28	; 0x6c0
    2c9c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2ca0:	446c7500 	strbtmi	r7, [ip], #-1280	; 0xfffffb00
    2ca4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2ca8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2cac:	63750043 	cmnvs	r5, #67	; 0x43
    2cb0:	4e435653 	mcrmi	6, 2, r5, cr3, cr3, {2}
    2cb4:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2cb8:	53760072 	cmnpl	r6, #114	; 0x72
    2cbc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2cc0:	73726946 	cmnvc	r2, #1146880	; 0x118000
    2cc4:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    2cc8:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2ccc:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    2cd0:	6154726f 	cmpvs	r4, pc, ror #4
    2cd4:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2cd8:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2cdc:	43565374 	cmpmi	r6, #116, 6	; 0xd0000001
    2ce0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2ce4:	5f72656c 	svcpl	0x0072656c
    2ce8:	6c750043 	ldclvs	0, cr0, [r5], #-268	; 0xfffffef4
    2cec:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2cf0:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2cf4:	6b636954 	blvs	18dd24c <__RAM_SIZE+0x17dd24c>
    2cf8:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    2cfc:	0073646f 	rsbseq	r6, r3, pc, ror #8
    2d00:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2d04:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2d08:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2d0c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2d10:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2d14:	4f545265 	svcmi	0x00545265
    2d18:	6f702f53 	svcvs	0x00702f53
    2d1c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2d20:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2d24:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    2d28:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2d2c:	5f33334d 	svcpl	0x0033334d
    2d30:	2f5a544e 	svccs	0x005a544e
    2d34:	5f6e6f6e 	svcpl	0x006e6f6e
    2d38:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2d3c:	702f6572 	eorvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    2d40:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2d44:	6c750063 	ldclvs	0, cr0, [r5], #-396	; 0xfffffe74
    2d48:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2d4c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2d50:	73795364 	cmnvc	r9, #100, 6	; 0x90000001
    2d54:	6b636954 	blvs	18dd2ac <__RAM_SIZE+0x17dd2ac>
    2d58:	72636544 	rsbvc	r6, r3, #68, 10	; 0x11000000
    2d5c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2d60:	70007374 	andvc	r7, r0, r4, ror r3
    2d64:	61436c75 	hvcvs	14021	; 0x36c5
    2d68:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2d6c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2d70:	6464416b 	strbtvs	r4, [r4], #-363	; 0xfffffe95
    2d74:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2d78:	536c7500 	cmnpl	ip, #0, 10
    2d7c:	70706f74 	rsbsvc	r6, r0, r4, ror pc
    2d80:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2d84:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2d88:	65706d6f 	ldrbvs	r6, [r0, #-3439]!	; 0xfffff291
    2d8c:	7461736e 	strbtvc	r7, [r1], #-878	; 0xfffffc92
    2d90:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    2d94:	79536c75 	ldmdbvc	r3, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2d98:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    2d9c:	6365446b 	cmnvs	r5, #1795162112	; 0x6b000000
    2da0:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    2da4:	4c73746e 	cfldrdmi	mvd7, [r3], #-440	; 0xfffffe48
    2da8:	00746665 	rsbseq	r6, r4, r5, ror #12
    2dac:	61436c75 	hvcvs	14021	; 0x36c5
    2db0:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
    2db4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    2db8:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    2dbc:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    2dc0:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    2dc4:	6669646f 	strbtvs	r6, [r9], -pc, ror #8
    2dc8:	6c626169 	stfvse	f6, [r2], #-420	; 0xfffffe5c
    2dcc:	6c644965 			; <UNDEFINED> instruction: 0x6c644965
    2dd0:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2dd4:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    2dd8:	4f646e45 	svcmi	0x00646e45
    2ddc:	61745366 	cmnvs	r4, r6, ror #6
    2de0:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2de4:	6978614d 	ldmdbvs	r8!, {r0, r2, r3, r6, r8, sp, lr}^
    2de8:	506d756d 	rsbpl	r7, sp, sp, ror #10
    2dec:	6973736f 	ldmdbvs	r3!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    2df0:	53656c62 	cmnpl	r5, #25088	; 0x6200
    2df4:	72707075 	rsbsvc	r7, r0, #117	; 0x75
    2df8:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
    2dfc:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    2e00:	7000736b 	andvc	r7, r0, fp, ror #6
    2e04:	61547672 	cmpvs	r4, r2, ror r6
    2e08:	78456b73 	stmdavc	r5, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    2e0c:	72457469 	subvc	r7, r5, #1761607680	; 0x69000000
    2e10:	00726f72 	rsbseq	r6, r2, r2, ror pc
    2e14:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2e18:	74655374 	strbtvc	r5, [r5], #-884	; 0xfffffc8c
    2e1c:	69547075 	ldmdbvs	r4, {r0, r2, r4, r5, r6, ip, sp, lr}^
    2e20:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2e24:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2e28:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2e2c:	43787000 	cmnmi	r8, #0
    2e30:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2e34:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2e38:	49734974 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, fp, lr}^
    2e3c:	6469736e 	strbtvs	r7, [r9], #-878	; 0xfffffc92
    2e40:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
    2e44:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2e48:	75007470 	strvc	r7, [r0, #-1136]	; 0xfffffb90
    2e4c:	7275436c 	rsbsvc	r4, r5, #108, 6	; 0xb0000001
    2e50:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2e54:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2e58:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2e5c:	52760074 	rsbspl	r0, r6, #116	; 0x74
    2e60:	6f747365 	svcvs	0x00747365
    2e64:	6f436572 	svcvs	0x00436572
    2e68:	7865746e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2e6c:	46664f74 	uqsub16mi	r4, r6, r4
    2e70:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    2e74:	6b736154 	blvs	1cdb3cc <__RAM_SIZE+0x1bdb3cc>
    2e78:	726f7000 	rsbvc	r7, pc, #0
    2e7c:	52534974 	subspl	r4, r3, #116, 18	; 0x1d0000
    2e80:	5300745f 	movwpl	r7, #1119	; 0x45f
    2e84:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2e88:	485f6b63 	ldmdami	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    2e8c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2e90:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    2e94:	6c65526c 	sfmvs	f5, 2, [r5], #-432	; 0xfffffe50
    2e98:	5664616f 	strbtpl	r6, [r4], -pc, ror #2
    2e9c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2ea0:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    2ea4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2ea8:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2eac:	6f467374 	svcvs	0x00467374
    2eb0:	656e4f72 	strbvs	r4, [lr, #-3954]!	; 0xfffff08e
    2eb4:	6b636954 	blvs	18dd40c <__RAM_SIZE+0x17dd40c>
    2eb8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2ebc:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2ec0:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
    2ec4:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2ec8:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2ecc:	485f5653 	ldmdami	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    2ed0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2ed4:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    2ed8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2edc:	2f2e2e2f 	svccs	0x002e2e2f
    2ee0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2ee4:	2f736f74 	svccs	0x00736f74
    2ee8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2eec:	534f5452 	movtpl	r5, #62546	; 0xf452
    2ef0:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    2ef4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    2ef8:	43472f65 	movtmi	r2, #32613	; 0x7f65
    2efc:	52412f43 	subpl	r2, r1, #268	; 0x10c
    2f00:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    2f04:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    2f08:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    2f0c:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    2f10:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    2f14:	6f702f65 	svcvs	0x00702f65
    2f18:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    2f1c:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    2f20:	50734978 	rsbspl	r4, r3, r8, ror r9
    2f24:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2f28:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2f2c:	56530064 	ldrbpl	r0, [r3], -r4, rrx
    2f30:	61485f43 	cmpvs	r8, r3, asr #30
    2f34:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2f38:	52760072 	rsbspl	r0, r6, #114	; 0x72
    2f3c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    2f40:	76697250 			; <UNDEFINED> instruction: 0x76697250
    2f44:	67656c69 	strbvs	r6, [r5, -r9, ror #24]!
    2f48:	6c750065 	ldclvs	0, cr0, [r5], #-404	; 0xfffffe6c
    2f4c:	6b73614d 	blvs	1cdb488 <__RAM_SIZE+0x1bdb488>
    2f50:	61527600 	cmpvs	r2, r0, lsl #12
    2f54:	50657369 	rsbpl	r7, r5, r9, ror #6
    2f58:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2f5c:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2f60:	732f2e00 			; <UNDEFINED> instruction: 0x732f2e00
    2f64:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2f68:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    2f6c:	732f6363 			; <UNDEFINED> instruction: 0x732f6363
    2f70:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2f74:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
    2f78:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
    2f7c:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
    2f80:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    2f84:	20534120 	subscs	r4, r3, r0, lsr #2
    2f88:	36332e32 			; <UNDEFINED> instruction: 0x36332e32
    2f8c:	2e00312e 	adfcssp	f3, f0, #0.5
    2f90:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f94:	2f2e2e2f 	svccs	0x002e2e2f
    2f98:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2f9c:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2fa0:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2fa4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2fa8:	2f706d75 	svccs	0x00706d75
    2fac:	2f757063 	svccs	0x00757063
    2fb0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2fb4:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    2fb8:	662f3333 			; <UNDEFINED> instruction: 0x662f3333
    2fbc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2fc0:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    2fc4:	Address 0x00002fc4 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
        xReturn = pdFALSE;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
}
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	00000044 	andeq	r0, r0, r4, asr #32
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000014 	andeq	r0, r0, r4, lsl r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	00000000 	andeq	r0, r0, r0
      38:	10000844 	andne	r0, r0, r4, asr #16
      3c:	00000014 	andeq	r0, r0, r4, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
        BaseType_t xReturn = pdFAIL;
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
    }
      48:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      54:	00000010 	andeq	r0, r0, r0, lsl r0
      58:	83080e41 	movwhi	r0, #36417	; 0x8e41
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
      60:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      6c:	00000010 	andeq	r0, r0, r0, lsl r0
      70:	83080e41 	movwhi	r0, #36417	; 0x8e41
      74:	00018e02 	andeq	r8, r1, r2, lsl #28
      78:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            ( void ) xTaskResumeAll();
      84:	00000020 	andeq	r0, r0, r0, lsr #32
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	83080e41 	movwhi	r0, #36417	; 0x8e41
      8c:	00018e02 	andeq	r8, r1, r2, lsl #28
      90:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	0000004c 	andeq	r0, r0, ip, asr #32
      a0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
                else if( xEntryTimeSet == pdFALSE )
      a4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
        taskEXIT_CRITICAL();
      a8:	180e4101 	stmdane	lr, {r0, r8, lr}
        vTaskSuspendAll();
      ac:	000c0e5f 	andeq	r0, ip, pc, asr lr
        prvLockQueue( pxQueue );
      b0:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
      bc:	00000068 	andeq	r0, r0, r8, rrx
      c0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      c4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      c8:	900e4101 	andls	r4, lr, r1, lsl #2
      cc:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	0000001c 	andeq	r0, r0, ip, lsl r0
      e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00018e02 	andeq	r8, r1, r2, lsl #28
      e8:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                prvUnlockQueue( pxQueue );
      f4:	00000018 	andeq	r0, r0, r8, lsl r0
      f8:	83080e41 	movwhi	r0, #36417	; 0x8e41
                if( xTaskResumeAll() == pdFALSE )
      fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     100:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                return errQUEUE_EMPTY;
     10c:	00000018 	andeq	r0, r0, r8, lsl r0
                        taskENTER_CRITICAL();
     110:	83080e41 	movwhi	r0, #36417	; 0x8e41
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00018e02 	andeq	r8, r1, r2, lsl #28
     118:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                        taskEXIT_CRITICAL();
     124:	00000018 	andeq	r0, r0, r8, lsl r0
     128:	83080e41 	movwhi	r0, #36417	; 0x8e41
     12c:	00018e02 	andeq	r8, r1, r2, lsl #28
     130:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     13c:	00000018 	andeq	r0, r0, r8, lsl r0
     140:	83080e41 	movwhi	r0, #36417	; 0x8e41
     144:	00018e02 	andeq	r8, r1, r2, lsl #28
     148:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     154:	00000018 	andeq	r0, r0, r8, lsl r0
     158:	83080e41 	movwhi	r0, #36417	; 0x8e41
     15c:	00018e02 	andeq	r8, r1, r2, lsl #28
     160:	00000014 	andeq	r0, r0, r4, lsl r0
     164:	00000000 	andeq	r0, r0, r0
     168:	10000858 	andne	r0, r0, r8, asr r8
     16c:	0000002c 	andeq	r0, r0, ip, lsr #32
     170:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     174:	00018e02 	andeq	r8, r1, r2, lsl #28
     178:	0000000c 	andeq	r0, r0, ip
     17c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     180:	7c020001 	stcvc	0, cr0, [r2], {1}
     184:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     188:	0000000c 	andeq	r0, r0, ip
     18c:	00000178 	andeq	r0, r0, r8, ror r1
     190:	00000000 	andeq	r0, r0, r0
     194:	00000010 	andeq	r0, r0, r0, lsl r0
     198:	0000000c 	andeq	r0, r0, ip
     19c:	00000178 	andeq	r0, r0, r8, ror r1
     1a0:	10000884 	andne	r0, r0, r4, lsl #17
     1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
     1a8:	0000000c 	andeq	r0, r0, ip
     1ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     1b0:	7c020001 	stcvc	0, cr0, [r2], {1}
     1b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1b8:	0000000c 	andeq	r0, r0, ip
     1bc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1c0:	00000000 	andeq	r0, r0, r0
     1c4:	00000008 	andeq	r0, r0, r8
     1c8:	0000000c 	andeq	r0, r0, ip
     1cc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1d0:	100008b0 			; <UNDEFINED> instruction: 0x100008b0
     1d4:	00000002 	andeq	r0, r0, r2
     1d8:	00000018 	andeq	r0, r0, r8, lsl r0
     1dc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1e0:	00000000 	andeq	r0, r0, r0
     1e4:	0000000e 	andeq	r0, r0, lr
     1e8:	83080e42 	movwhi	r0, #36418	; 0x8e42
     1ec:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     1f0:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     1f4:	0000000c 	andeq	r0, r0, ip
     1f8:	000001a8 	andeq	r0, r0, r8, lsr #3
     1fc:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
     200:	00000024 	andeq	r0, r0, r4, lsr #32
     204:	0000002c 	andeq	r0, r0, ip, lsr #32
     208:	000001a8 	andeq	r0, r0, r8, lsr #3
     20c:	100008d6 	ldrdne	r0, [r0], -r6
     210:	0000007e 	andeq	r0, r0, lr, ror r0
     214:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     218:	86088509 	strhi	r8, [r8], -r9, lsl #10
     21c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     220:	8a048905 	bhi	12263c <__RAM_SIZE+0x2263c>
     224:	8e028b03 	vmlahi.f64	d8, d2, d3
     228:	300e4101 	andcc	r4, lr, r1, lsl #2
     22c:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     230:	00000b42 	andeq	r0, r0, r2, asr #22
     234:	00000028 	andeq	r0, r0, r8, lsr #32
     238:	000001a8 	andeq	r0, r0, r8, lsr #3
     23c:	10000954 	andne	r0, r0, r4, asr r9
     240:	00000138 	andeq	r0, r0, r8, lsr r1
     244:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     248:	86068507 	strhi	r8, [r6], -r7, lsl #10
     24c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     250:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     254:	300e4101 	andcc	r4, lr, r1, lsl #2
     258:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     25c:	000b421c 	andeq	r4, fp, ip, lsl r2
     260:	00000020 	andeq	r0, r0, r0, lsr #32
     264:	000001a8 	andeq	r0, r0, r8, lsr #3
     268:	10000a8c 	andne	r0, r0, ip, lsl #21
     26c:	00000094 	muleq	r0, r4, r0
     270:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     274:	86048505 	strhi	r8, [r4], -r5, lsl #10
     278:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     27c:	580e4101 	stmdapl	lr, {r0, r8, lr}
     280:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     284:	00000028 	andeq	r0, r0, r8, lsr #32
     288:	000001a8 	andeq	r0, r0, r8, lsr #3
     28c:	10000b20 	andne	r0, r0, r0, lsr #22
     290:	000000c6 	andeq	r0, r0, r6, asr #1
     294:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     298:	86088509 	strhi	r8, [r8], -r9, lsl #10
     29c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2a0:	8a048905 	bhi	1226bc <__RAM_SIZE+0x226bc>
     2a4:	8e028b03 	vmlahi.f64	d8, d2, d3
     2a8:	780e4101 	stmdavc	lr, {r0, r8, lr}
     2ac:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     2b0:	0000003c 	andeq	r0, r0, ip, lsr r0
     2b4:	000001a8 	andeq	r0, r0, r8, lsr #3
     2b8:	10000be8 	andne	r0, r0, r8, ror #23
     2bc:	000003ea 	andeq	r0, r0, sl, ror #7
     2c0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2c4:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2c8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2cc:	8a048905 	bhi	1226e8 <__RAM_SIZE+0x226e8>
     2d0:	8e028b03 	vmlahi.f64	d8, d2, d3
     2d4:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2d8:	050b5005 	streq	r5, [fp, #-5]
     2dc:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2e0:	01250370 			; <UNDEFINED> instruction: 0x01250370
     2e4:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     2e8:	51065006 	tstpl	r6, r6
     2ec:	0b42240e 	bleq	108932c <__RAM_SIZE+0xf8932c>
     2f0:	00000040 	andeq	r0, r0, r0, asr #32
     2f4:	000001a8 	andeq	r0, r0, r8, lsr #3
     2f8:	10000fd8 	ldrdne	r0, [r0], -r8
     2fc:	00000396 	muleq	r0, r6, r3
     300:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     304:	86088509 	strhi	r8, [r8], -r9, lsl #10
     308:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     30c:	8a048905 	bhi	122728 <__RAM_SIZE+0x22728>
     310:	8e028b03 	vmlahi.f64	d8, d2, d3
     314:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     318:	050b5005 	streq	r5, [fp, #-5]
     31c:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     320:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     324:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     328:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     32c:	42240e51 	eormi	r0, r4, #1296	; 0x510
     330:	0000000b 	andeq	r0, r0, fp
     334:	0000002c 	andeq	r0, r0, ip, lsr #32
     338:	000001a8 	andeq	r0, r0, r8, lsr #3
     33c:	10001370 	andne	r1, r0, r0, ror r3
     340:	00000680 	andeq	r0, r0, r0, lsl #13
     344:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     348:	86088509 	strhi	r8, [r8], -r9, lsl #10
     34c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     350:	8a048905 	bhi	12276c <__RAM_SIZE+0x2276c>
     354:	8e028b03 	vmlahi.f64	d8, d2, d3
     358:	600e4101 	andvs	r4, lr, r1, lsl #2
     35c:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     360:	00000024 	andeq	r0, r0, r4, lsr #32
     364:	00000014 	andeq	r0, r0, r4, lsl r0
     368:	000001a8 	andeq	r0, r0, r8, lsr #3
     36c:	100019f0 	strdne	r1, [r0], -r0
     370:	0000000c 	andeq	r0, r0, ip
     374:	83080e43 	movwhi	r0, #36419	; 0x8e43
     378:	00018e02 	andeq	r8, r1, r2, lsl #28
     37c:	00000030 	andeq	r0, r0, r0, lsr r0
     380:	000001a8 	andeq	r0, r0, r8, lsr #3
     384:	100019fc 	strdne	r1, [r0], -ip
     388:	0000002c 	andeq	r0, r0, ip, lsr #32
     38c:	80100e41 	andshi	r0, r0, r1, asr #28
     390:	82038104 	andhi	r8, r3, #4, 2
     394:	41018302 	tstmi	r1, r2, lsl #6
     398:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     39c:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     3a0:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     3a4:	c341100e 	movtgt	r1, #4110	; 0x100e
     3a8:	0ec0c1c2 	acseqdm	f4, f2
     3ac:	00000000 	andeq	r0, r0, r0
     3b0:	0000002c 	andeq	r0, r0, ip, lsr #32
     3b4:	000001a8 	andeq	r0, r0, r8, lsr #3
     3b8:	00000000 	andeq	r0, r0, r0
     3bc:	0000002c 	andeq	r0, r0, ip, lsr #32
     3c0:	810c0e41 	tsthi	ip, r1, asr #28
     3c4:	83028203 	movwhi	r8, #8707	; 0x2203
     3c8:	100e4101 	andne	r4, lr, r1, lsl #2
     3cc:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     3d0:	100e4c20 	andne	r4, lr, r0, lsr #24
     3d4:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     3d8:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     3dc:	0000000e 	andeq	r0, r0, lr
     3e0:	0000002c 	andeq	r0, r0, ip, lsr #32
     3e4:	000001a8 	andeq	r0, r0, r8, lsr #3
     3e8:	00000000 	andeq	r0, r0, r0
     3ec:	00000028 	andeq	r0, r0, r8, lsr #32
     3f0:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3f4:	41018302 	tstmi	r1, r2, lsl #6
     3f8:	0484100e 	streq	r1, [r4], #14
     3fc:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     400:	100e4b20 	andne	r4, lr, r0, lsr #22
     404:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     408:	c2c34108 	sbcgt	r4, r3, #8, 2
     40c:	0000000e 	andeq	r0, r0, lr
     410:	00000018 	andeq	r0, r0, r8, lsl r0
     414:	000001a8 	andeq	r0, r0, r8, lsr #3
     418:	00000000 	andeq	r0, r0, r0
     41c:	00000020 	andeq	r0, r0, r0, lsr #32
     420:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     424:	180e4101 	stmdane	lr, {r0, r8, lr}
     428:	00040e49 	andeq	r0, r4, r9, asr #28
     42c:	00000018 	andeq	r0, r0, r8, lsl r0
     430:	000001a8 	andeq	r0, r0, r8, lsr #3
     434:	00000000 	andeq	r0, r0, r0
     438:	0000001c 	andeq	r0, r0, ip, lsl r0
     43c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     440:	100e4101 	andne	r4, lr, r1, lsl #2
     444:	00040e48 	andeq	r0, r4, r8, asr #28
     448:	00000028 	andeq	r0, r0, r8, lsr #32
     44c:	000001a8 	andeq	r0, r0, r8, lsr #3
     450:	00000000 	andeq	r0, r0, r0
     454:	00000030 	andeq	r0, r0, r0, lsr r0
     458:	82080e41 	andhi	r0, r8, #1040	; 0x410
     45c:	41018302 	tstmi	r1, r2, lsl #6
     460:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     464:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     468:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     46c:	c341080e 	movtgt	r0, #6158	; 0x180e
     470:	00000ec2 	andeq	r0, r0, r2, asr #29
     474:	0000000c 	andeq	r0, r0, ip
     478:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     47c:	7c020001 	stcvc	0, cr0, [r2], {1}
     480:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     484:	0000000c 	andeq	r0, r0, ip
     488:	00000474 	andeq	r0, r0, r4, ror r4
     48c:	10001a28 	andne	r1, r0, r8, lsr #20
     490:	00000014 	andeq	r0, r0, r4, lsl r0
     494:	0000000c 	andeq	r0, r0, ip
     498:	00000474 	andeq	r0, r0, r4, ror r4
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	00000014 	andeq	r0, r0, r4, lsl r0
     4a4:	00000018 	andeq	r0, r0, r8, lsl r0
     4a8:	00000474 	andeq	r0, r0, r4, ror r4
     4ac:	10001a3c 	andne	r1, r0, ip, lsr sl
     4b0:	0000001e 	andeq	r0, r0, lr, lsl r0
     4b4:	83100e41 	tsthi	r0, #1040	; 0x410
     4b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     4bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     4c0:	0000000c 	andeq	r0, r0, ip
     4c4:	00000474 	andeq	r0, r0, r4, ror r4
     4c8:	10001a5c 	andne	r1, r0, ip, asr sl
     4cc:	00000024 	andeq	r0, r0, r4, lsr #32
     4d0:	00000014 	andeq	r0, r0, r4, lsl r0
     4d4:	00000474 	andeq	r0, r0, r4, ror r4
     4d8:	00000000 	andeq	r0, r0, r0
     4dc:	00000008 	andeq	r0, r0, r8
     4e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     4e8:	00000018 	andeq	r0, r0, r8, lsl r0
     4ec:	00000474 	andeq	r0, r0, r4, ror r4
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00000020 	andeq	r0, r0, r0, lsr #32
     4f8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4fc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     500:	00018e02 	andeq	r8, r1, r2, lsl #28
     504:	0000000c 	andeq	r0, r0, ip
     508:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     50c:	7c020001 	stcvc	0, cr0, [r2], {1}
     510:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     514:	00000014 	andeq	r0, r0, r4, lsl r0
     518:	00000504 	andeq	r0, r0, r4, lsl #10
     51c:	10001a80 	andne	r1, r0, r0, lsl #21
     520:	0000002c 	andeq	r0, r0, ip, lsr #32
     524:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     528:	0000000e 	andeq	r0, r0, lr
     52c:	0000000c 	andeq	r0, r0, ip
     530:	00000504 	andeq	r0, r0, r4, lsl #10
     534:	10001aac 	andne	r1, r0, ip, lsr #21
     538:	00000036 	andeq	r0, r0, r6, lsr r0
     53c:	00000014 	andeq	r0, r0, r4, lsl r0
     540:	00000504 	andeq	r0, r0, r4, lsl #10
     544:	10001ae4 	andne	r1, r0, r4, ror #21
     548:	00000018 	andeq	r0, r0, r8, lsl r0
     54c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     550:	00018e02 	andeq	r8, r1, r2, lsl #28
     554:	00000014 	andeq	r0, r0, r4, lsl r0
     558:	00000504 	andeq	r0, r0, r4, lsl #10
     55c:	10001afc 	strdne	r1, [r0], -ip
     560:	00000050 	andeq	r0, r0, r0, asr r0
     564:	83080e41 	movwhi	r0, #36417	; 0x8e41
     568:	00018e02 	andeq	r8, r1, r2, lsl #28
     56c:	00000020 	andeq	r0, r0, r0, lsr #32
     570:	00000504 	andeq	r0, r0, r4, lsl #10
     574:	10001b4c 	andne	r1, r0, ip, asr #22
     578:	0000007c 	andeq	r0, r0, ip, ror r0
     57c:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     580:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     584:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     588:	89038804 	stmdbhi	r3, {r2, fp, pc}
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000001c 	andeq	r0, r0, ip, lsl r0
     594:	00000504 	andeq	r0, r0, r4, lsl #10
     598:	10001bc8 	andne	r1, r0, r8, asr #23
     59c:	00000184 	andeq	r0, r0, r4, lsl #3
     5a0:	83180e41 	tsthi	r8, #1040	; 0x410
     5a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     5a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     5ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	00000504 	andeq	r0, r0, r4, lsl #10
     5b8:	00000000 	andeq	r0, r0, r0
     5bc:	00000006 	andeq	r0, r0, r6
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	00000504 	andeq	r0, r0, r4, lsl #10
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	00000008 	andeq	r0, r0, r8
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5d8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5e0:	00000014 	andeq	r0, r0, r4, lsl r0
     5e4:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     5e8:	10001d4c 	andne	r1, r0, ip, asr #26
     5ec:	000000fc 	strdeq	r0, [r0], -ip
     5f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f8:	0000000c 	andeq	r0, r0, ip
     5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     600:	7c020001 	stcvc	0, cr0, [r2], {1}
     604:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     608:	0000000c 	andeq	r0, r0, ip
     60c:	000005f8 	strdeq	r0, [r0], -r8
     610:	10001e48 	andne	r1, r0, r8, asr #28
     614:	0000001a 	andeq	r0, r0, sl, lsl r0
     618:	0000000c 	andeq	r0, r0, ip
     61c:	000005f8 	strdeq	r0, [r0], -r8
     620:	10001e62 	andne	r1, r0, r2, ror #28
     624:	00000006 	andeq	r0, r0, r6
     628:	0000000c 	andeq	r0, r0, ip
     62c:	000005f8 	strdeq	r0, [r0], -r8
     630:	00000000 	andeq	r0, r0, r0
     634:	00000016 	andeq	r0, r0, r6, lsl r0
     638:	0000001c 	andeq	r0, r0, ip, lsl r0
     63c:	000005f8 	strdeq	r0, [r0], -r8
     640:	10001e68 	andne	r1, r0, r8, ror #28
     644:	00000032 	andeq	r0, r0, r2, lsr r0
     648:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     64c:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
     650:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     654:	000b4100 	andeq	r4, fp, r0, lsl #2
     658:	0000000c 	andeq	r0, r0, ip
     65c:	000005f8 	strdeq	r0, [r0], -r8
     660:	10001e9a 	mulne	r0, sl, lr
     664:	00000024 	andeq	r0, r0, r4, lsr #32
     668:	0000000c 	andeq	r0, r0, ip
     66c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     670:	7c020001 	stcvc	0, cr0, [r2], {1}
     674:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     678:	0000000c 	andeq	r0, r0, ip
     67c:	00000668 	andeq	r0, r0, r8, ror #12
     680:	00000000 	andeq	r0, r0, r0
     684:	00000010 	andeq	r0, r0, r0, lsl r0
     688:	00000014 	andeq	r0, r0, r4, lsl r0
     68c:	00000668 	andeq	r0, r0, r8, ror #12
     690:	00000000 	andeq	r0, r0, r0
     694:	0000001e 	andeq	r0, r0, lr, lsl r0
     698:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     69c:	00018e02 	andeq	r8, r1, r2, lsl #28
     6a0:	00000014 	andeq	r0, r0, r4, lsl r0
     6a4:	00000668 	andeq	r0, r0, r8, ror #12
     6a8:	10001ebe 			; <UNDEFINED> instruction: 0x10001ebe
     6ac:	0000001a 	andeq	r0, r0, sl, lsl r0
     6b0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6b8:	00000018 	andeq	r0, r0, r8, lsl r0
     6bc:	00000668 	andeq	r0, r0, r8, ror #12
     6c0:	10001ed8 	ldrdne	r1, [r0], -r8
     6c4:	00000076 	andeq	r0, r0, r6, ror r0
     6c8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     6cc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     6d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6d4:	00000018 	andeq	r0, r0, r8, lsl r0
     6d8:	00000668 	andeq	r0, r0, r8, ror #12
     6dc:	10001f4e 	andne	r1, r0, lr, asr #30
     6e0:	00000024 	andeq	r0, r0, r4, lsr #32
     6e4:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     6e8:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     6ec:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     6f0:	00000020 	andeq	r0, r0, r0, lsr #32
     6f4:	00000668 	andeq	r0, r0, r8, ror #12
     6f8:	10001f72 	andne	r1, r0, r2, ror pc
     6fc:	00000058 	andeq	r0, r0, r8, asr r0
     700:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     704:	86038504 	strhi	r8, [r3], -r4, lsl #10
     708:	41018e02 	tstmi	r1, r2, lsl #28
     70c:	0a49180e 	beq	124674c <__RAM_SIZE+0x114674c>
     710:	0b41100e 	bleq	1044750 <__RAM_SIZE+0xf44750>
     714:	00000018 	andeq	r0, r0, r8, lsl r0
     718:	00000668 	andeq	r0, r0, r8, ror #12
     71c:	10001fca 	andne	r1, r0, sl, asr #31
     720:	00000082 	andeq	r0, r0, r2, lsl #1
     724:	83100e41 	tsthi	r0, #1040	; 0x410
     728:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     72c:	00018e02 	andeq	r8, r1, r2, lsl #28
     730:	0000002c 	andeq	r0, r0, ip, lsr #32
     734:	00000668 	andeq	r0, r0, r8, ror #12
     738:	1000204c 	andne	r2, r0, ip, asr #32
     73c:	00000086 	andeq	r0, r0, r6, lsl #1
     740:	83100e43 	tsthi	r0, #1072	; 0x430
     744:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     748:	7c018e02 	stcvc	14, cr8, [r1], {2}
     74c:	c4c3000e 	strbgt	r0, [r3], #14
     750:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
     754:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
     758:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     75c:	00000001 	andeq	r0, r0, r1
     760:	00000014 	andeq	r0, r0, r4, lsl r0
     764:	00000668 	andeq	r0, r0, r8, ror #12
     768:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
     76c:	00000020 	andeq	r0, r0, r0, lsr #32
     770:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     774:	00018e02 	andeq	r8, r1, r2, lsl #28
     778:	00000028 	andeq	r0, r0, r8, lsr #32
     77c:	00000668 	andeq	r0, r0, r8, ror #12
     780:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
     784:	0000003e 	andeq	r0, r0, lr, lsr r0
     788:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     78c:	41018e02 	tstmi	r1, r2, lsl #28
     790:	0a51100e 	beq	14447d0 <__RAM_SIZE+0x13447d0>
     794:	0b41080e 	bleq	10427d4 <__RAM_SIZE+0xf427d4>
     798:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
     79c:	100e42ce 	andne	r4, lr, lr, asr #5
     7a0:	018e0284 	orreq	r0, lr, r4, lsl #5
     7a4:	0000000c 	andeq	r0, r0, ip
     7a8:	00000668 	andeq	r0, r0, r8, ror #12
     7ac:	00000000 	andeq	r0, r0, r0
     7b0:	00000018 	andeq	r0, r0, r8, lsl r0
     7b4:	00000024 	andeq	r0, r0, r4, lsr #32
     7b8:	00000668 	andeq	r0, r0, r8, ror #12
     7bc:	00000000 	andeq	r0, r0, r0
     7c0:	00000056 	andeq	r0, r0, r6, asr r0
     7c4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     7c8:	86048505 	strhi	r8, [r4], -r5, lsl #10
     7cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     7d0:	200e4101 	andcs	r4, lr, r1, lsl #2
     7d4:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
     7d8:	00000b41 	andeq	r0, r0, r1, asr #22
     7dc:	00000028 	andeq	r0, r0, r8, lsr #32
     7e0:	00000668 	andeq	r0, r0, r8, ror #12
     7e4:	00000000 	andeq	r0, r0, r0
     7e8:	0000002a 	andeq	r0, r0, sl, lsr #32
     7ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     7f0:	41018e02 	tstmi	r1, r2, lsl #28
     7f4:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
     7f8:	42cec400 	sbcmi	ip, lr, #0, 8
     7fc:	0284100e 	addeq	r1, r4, #14
     800:	0e42018e 	dvfeqd	f0, f2, #0.5
     804:	00000008 	andeq	r0, r0, r8
     808:	00000020 	andeq	r0, r0, r0, lsr #32
     80c:	00000668 	andeq	r0, r0, r8, ror #12
     810:	00000000 	andeq	r0, r0, r0
     814:	00000020 	andeq	r0, r0, r0, lsr #32
     818:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     81c:	4a018e02 	bmi	6402c <__HEAP_SIZE+0x6302c>
     820:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     824:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     828:	00018e02 	andeq	r8, r1, r2, lsl #28
     82c:	00000024 	andeq	r0, r0, r4, lsr #32
     830:	00000668 	andeq	r0, r0, r8, ror #12
     834:	00000000 	andeq	r0, r0, r0
     838:	0000010c 	andeq	r0, r0, ip, lsl #2
     83c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     840:	86048505 	strhi	r8, [r4], -r5, lsl #10
     844:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     848:	280e4101 	stmdacs	lr, {r0, r8, lr}
     84c:	140e0a59 	strne	r0, [lr], #-2649	; 0xfffff5a7
     850:	00000b41 	andeq	r0, r0, r1, asr #22
     854:	00000018 	andeq	r0, r0, r8, lsl r0
     858:	00000668 	andeq	r0, r0, r8, ror #12
     85c:	00000000 	andeq	r0, r0, r0
     860:	00000018 	andeq	r0, r0, r8, lsl r0
     864:	83080e42 	movwhi	r0, #36418	; 0x8e42
     868:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
     86c:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     870:	00000014 	andeq	r0, r0, r4, lsl r0
     874:	00000668 	andeq	r0, r0, r8, ror #12
     878:	00000000 	andeq	r0, r0, r0
     87c:	00000016 	andeq	r0, r0, r6, lsl r0
     880:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     884:	00018e02 	andeq	r8, r1, r2, lsl #28
     888:	0000001c 	andeq	r0, r0, ip, lsl r0
     88c:	00000668 	andeq	r0, r0, r8, ror #12
     890:	00000000 	andeq	r0, r0, r0
     894:	0000001e 	andeq	r0, r0, lr, lsl r0
     898:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     89c:	41018e02 	tstmi	r1, r2, lsl #28
     8a0:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
     8a4:	00000008 	andeq	r0, r0, r8
     8a8:	00000018 	andeq	r0, r0, r8, lsl r0
     8ac:	00000668 	andeq	r0, r0, r8, ror #12
     8b0:	00000000 	andeq	r0, r0, r0
     8b4:	0000002c 	andeq	r0, r0, ip, lsr #32
     8b8:	83100e41 	tsthi	r0, #1040	; 0x410
     8bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     8c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c4:	00000020 	andeq	r0, r0, r0, lsr #32
     8c8:	00000668 	andeq	r0, r0, r8, ror #12
     8cc:	00000000 	andeq	r0, r0, r0
     8d0:	000000bc 	strheq	r0, [r0], -ip
     8d4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     8d8:	86078508 	strhi	r8, [r7], -r8, lsl #10
     8dc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     8e0:	8a038904 	bhi	e2cf8 <__HEAP_SIZE+0xe1cf8>
     8e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     8ec:	00000668 	andeq	r0, r0, r8, ror #12
     8f0:	00000000 	andeq	r0, r0, r0
     8f4:	00000086 	andeq	r0, r0, r6, lsl #1
     8f8:	83180e41 	tsthi	r8, #1040	; 0x410
     8fc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     900:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     904:	00018e02 	andeq	r8, r1, r2, lsl #28
     908:	00000024 	andeq	r0, r0, r4, lsr #32
     90c:	00000668 	andeq	r0, r0, r8, ror #12
     910:	10002130 	andne	r2, r0, r0, lsr r1
     914:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     918:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     91c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     920:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     924:	280e4101 	stmdacs	lr, {r0, r8, lr}
     928:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
     92c:	00000b41 	andeq	r0, r0, r1, asr #22
     930:	00000020 	andeq	r0, r0, r0, lsr #32
     934:	00000668 	andeq	r0, r0, r8, ror #12
     938:	00000000 	andeq	r0, r0, r0
     93c:	00000126 	andeq	r0, r0, r6, lsr #2
     940:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     944:	86038504 	strhi	r8, [r3], -r4, lsl #10
     948:	41018e02 	tstmi	r1, r2, lsl #28
     94c:	0a4f200e 	beq	13c898c <__RAM_SIZE+0x12c898c>
     950:	0b41100e 	bleq	1044990 <__RAM_SIZE+0xf44990>
     954:	00000018 	andeq	r0, r0, r8, lsl r0
     958:	00000668 	andeq	r0, r0, r8, ror #12
     95c:	00000000 	andeq	r0, r0, r0
     960:	0000002c 	andeq	r0, r0, ip, lsr #32
     964:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     968:	86038504 	strhi	r8, [r3], -r4, lsl #10
     96c:	00018e02 	andeq	r8, r1, r2, lsl #28
     970:	00000020 	andeq	r0, r0, r0, lsr #32
     974:	00000668 	andeq	r0, r0, r8, ror #12
     978:	00000000 	andeq	r0, r0, r0
     97c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     980:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     984:	86038504 	strhi	r8, [r3], -r4, lsl #10
     988:	41018e02 	tstmi	r1, r2, lsl #28
     98c:	0a51200e 	beq	14489cc <__RAM_SIZE+0x13489cc>
     990:	0b41100e 	bleq	10449d0 <__RAM_SIZE+0xf449d0>
     994:	00000020 	andeq	r0, r0, r0, lsr #32
     998:	00000668 	andeq	r0, r0, r8, ror #12
     99c:	00000000 	andeq	r0, r0, r0
     9a0:	00000080 	andeq	r0, r0, r0, lsl #1
     9a4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     9a8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     9ac:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     9b0:	89038804 	stmdbhi	r3, {r2, fp, pc}
     9b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	00000668 	andeq	r0, r0, r8, ror #12
     9c0:	00000000 	andeq	r0, r0, r0
     9c4:	0000002c 	andeq	r0, r0, ip, lsr #32
     9c8:	83180e41 	tsthi	r8, #1040	; 0x410
     9cc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     9d0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     9d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9d8:	00000014 	andeq	r0, r0, r4, lsl r0
     9dc:	00000668 	andeq	r0, r0, r8, ror #12
     9e0:	00000000 	andeq	r0, r0, r0
     9e4:	00000012 	andeq	r0, r0, r2, lsl r0
     9e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f0:	00000014 	andeq	r0, r0, r4, lsl r0
     9f4:	00000668 	andeq	r0, r0, r8, ror #12
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	00000016 	andeq	r0, r0, r6, lsl r0
     a00:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a04:	00018e02 	andeq	r8, r1, r2, lsl #28
     a08:	0000000c 	andeq	r0, r0, ip
     a0c:	00000668 	andeq	r0, r0, r8, ror #12
     a10:	00000000 	andeq	r0, r0, r0
     a14:	00000004 	andeq	r0, r0, r4
     a18:	00000014 	andeq	r0, r0, r4, lsl r0
     a1c:	00000668 	andeq	r0, r0, r8, ror #12
     a20:	00000000 	andeq	r0, r0, r0
     a24:	00000010 	andeq	r0, r0, r0, lsl r0
     a28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	00000668 	andeq	r0, r0, r8, ror #12
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	00000004 	andeq	r0, r0, r4
     a40:	0000000c 	andeq	r0, r0, ip
     a44:	00000668 	andeq	r0, r0, r8, ror #12
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00000004 	andeq	r0, r0, r4
     a50:	0000000c 	andeq	r0, r0, ip
     a54:	00000668 	andeq	r0, r0, r8, ror #12
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	0000000c 	andeq	r0, r0, ip
     a60:	0000000c 	andeq	r0, r0, ip
     a64:	00000668 	andeq	r0, r0, r8, ror #12
     a68:	00000000 	andeq	r0, r0, r0
     a6c:	00000010 	andeq	r0, r0, r0, lsl r0
     a70:	00000018 	andeq	r0, r0, r8, lsl r0
     a74:	00000668 	andeq	r0, r0, r8, ror #12
     a78:	10002220 	andne	r2, r0, r0, lsr #4
     a7c:	00000052 	andeq	r0, r0, r2, asr r0
     a80:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a84:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a88:	00018e02 	andeq	r8, r1, r2, lsl #28
     a8c:	00000014 	andeq	r0, r0, r4, lsl r0
     a90:	00000668 	andeq	r0, r0, r8, ror #12
     a94:	00000000 	andeq	r0, r0, r0
     a98:	0000000c 	andeq	r0, r0, ip
     a9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     aa0:	00018e02 	andeq	r8, r1, r2, lsl #28
     aa4:	00000018 	andeq	r0, r0, r8, lsl r0
     aa8:	00000668 	andeq	r0, r0, r8, ror #12
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	00000026 	andeq	r0, r0, r6, lsr #32
     ab4:	83100e41 	tsthi	r0, #1040	; 0x410
     ab8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     abc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ac0:	00000014 	andeq	r0, r0, r4, lsl r0
     ac4:	00000668 	andeq	r0, r0, r8, ror #12
     ac8:	00000000 	andeq	r0, r0, r0
     acc:	00000026 	andeq	r0, r0, r6, lsr #32
     ad0:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     ad4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad8:	00000018 	andeq	r0, r0, r8, lsl r0
     adc:	00000668 	andeq	r0, r0, r8, ror #12
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00000018 	andeq	r0, r0, r8, lsl r0
     ae8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     aec:	100e4101 	andne	r4, lr, r1, lsl #2
     af0:	00040e48 	andeq	r0, r4, r8, asr #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	00000668 	andeq	r0, r0, r8, ror #12
     afc:	00000000 	andeq	r0, r0, r0
     b00:	00000016 	andeq	r0, r0, r6, lsl r0
     b04:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b08:	100e4101 	andne	r4, lr, r1, lsl #2
     b0c:	00040e47 	andeq	r0, r4, r7, asr #28
     b10:	0000000c 	andeq	r0, r0, ip
     b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b18:	7c020001 	stcvc	0, cr0, [r2], {1}
     b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b20:	0000000c 	andeq	r0, r0, ip
     b24:	00000b10 	andeq	r0, r0, r0, lsl fp
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	00000044 	andeq	r0, r0, r4, asr #32
     b30:	0000000c 	andeq	r0, r0, ip
     b34:	00000b10 	andeq	r0, r0, r0, lsl fp
     b38:	10002274 	andne	r2, r0, r4, ror r2
     b3c:	00000040 	andeq	r0, r0, r0, asr #32
     b40:	00000018 	andeq	r0, r0, r8, lsl r0
     b44:	00000b10 	andeq	r0, r0, r0, lsl fp
     b48:	00000000 	andeq	r0, r0, r0
     b4c:	0000003e 	andeq	r0, r0, lr, lsr r0
     b50:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b54:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b58:	00000001 	andeq	r0, r0, r1
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	00000b10 	andeq	r0, r0, r0, lsl fp
     b64:	00000000 	andeq	r0, r0, r0
     b68:	00000012 	andeq	r0, r0, r2, lsl r0
     b6c:	0000000c 	andeq	r0, r0, ip
     b70:	00000b10 	andeq	r0, r0, r0, lsl fp
     b74:	100022b4 			; <UNDEFINED> instruction: 0x100022b4
     b78:	00000028 	andeq	r0, r0, r8, lsr #32
     b7c:	00000020 	andeq	r0, r0, r0, lsr #32
     b80:	00000b10 	andeq	r0, r0, r0, lsl fp
     b84:	100022dc 	ldrdne	r2, [r0], -ip
     b88:	00000096 	muleq	r0, r6, r0
     b8c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     b90:	86078508 	strhi	r8, [r7], -r8, lsl #10
     b94:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     b98:	8a038904 	bhi	e2fb0 <__HEAP_SIZE+0xe1fb0>
     b9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     ba0:	00000028 	andeq	r0, r0, r8, lsr #32
     ba4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ba8:	10002372 	andne	r2, r0, r2, ror r3
     bac:	00000052 	andeq	r0, r0, r2, asr r0
     bb0:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     bb4:	86068507 	strhi	r8, [r6], -r7, lsl #10
     bb8:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     bbc:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     bc0:	300e4101 	andcc	r4, lr, r1, lsl #2
     bc4:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
     bc8:	00000b42 	andeq	r0, r0, r2, asr #22
     bcc:	00000018 	andeq	r0, r0, r8, lsl r0
     bd0:	00000b10 	andeq	r0, r0, r0, lsl fp
     bd4:	100023c4 	andne	r2, r0, r4, asr #7
     bd8:	00000068 	andeq	r0, r0, r8, rrx
     bdc:	83100e41 	tsthi	r0, #1040	; 0x410
     be0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     be4:	00018e02 	andeq	r8, r1, r2, lsl #28
     be8:	00000014 	andeq	r0, r0, r4, lsl r0
     bec:	00000b10 	andeq	r0, r0, r0, lsl fp
     bf0:	1000242c 	andne	r2, r0, ip, lsr #8
     bf4:	000000bc 	strheq	r0, [r0], -ip
     bf8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     c00:	00000028 	andeq	r0, r0, r8, lsr #32
     c04:	00000b10 	andeq	r0, r0, r0, lsl fp
     c08:	100024e8 	andne	r2, r0, r8, ror #9
     c0c:	00000062 	andeq	r0, r0, r2, rrx
     c10:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c14:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c18:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c1c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c20:	300e4101 	andcc	r4, lr, r1, lsl #2
     c24:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
     c28:	00000b42 	andeq	r0, r0, r2, asr #22
     c2c:	00000014 	andeq	r0, r0, r4, lsl r0
     c30:	00000b10 	andeq	r0, r0, r0, lsl fp
     c34:	1000254a 	andne	r2, r0, sl, asr #10
     c38:	00000024 	andeq	r0, r0, r4, lsr #32
     c3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c40:	00018e02 	andeq	r8, r1, r2, lsl #28
     c44:	00000018 	andeq	r0, r0, r8, lsl r0
     c48:	00000b10 	andeq	r0, r0, r0, lsl fp
     c4c:	10002570 	andne	r2, r0, r0, ror r5
     c50:	0000004c 	andeq	r0, r0, ip, asr #32
     c54:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     c58:	5a018e02 	bpl	64468 <__HEAP_SIZE+0x63468>
     c5c:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000b10 	andeq	r0, r0, r0, lsl fp
     c68:	100025bc 			; <UNDEFINED> instruction: 0x100025bc
     c6c:	000000a8 	andeq	r0, r0, r8, lsr #1
     c70:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c74:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c78:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c80:	0000001c 	andeq	r0, r0, ip, lsl r0
     c84:	00000b10 	andeq	r0, r0, r0, lsl fp
     c88:	10002664 	andne	r2, r0, r4, ror #12
     c8c:	00000028 	andeq	r0, r0, r8, lsr #32
     c90:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c94:	41018e02 	tstmi	r1, r2, lsl #28
     c98:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
     c9c:	00000008 	andeq	r0, r0, r8
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ca8:	1000268c 	andne	r2, r0, ip, lsl #13
     cac:	00000022 	andeq	r0, r0, r2, lsr #32
     cb0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cb4:	41018e02 	tstmi	r1, r2, lsl #28
     cb8:	0a4b100e 	beq	12c4cf8 <__RAM_SIZE+0x11c4cf8>
     cbc:	0b41080e 	bleq	1042cfc <__RAM_SIZE+0xf42cfc>
     cc0:	00000018 	andeq	r0, r0, r8, lsl r0
     cc4:	00000b10 	andeq	r0, r0, r0, lsl fp
     cc8:	00000000 	andeq	r0, r0, r0
     ccc:	0000009c 	muleq	r0, ip, r0
     cd0:	83100e41 	tsthi	r0, #1040	; 0x410
     cd4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     cd8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cdc:	00000034 	andeq	r0, r0, r4, lsr r0
     ce0:	00000b10 	andeq	r0, r0, r0, lsl fp
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	0000009c 	muleq	r0, ip, r0
     cec:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
     cf0:	86058506 	strhi	r8, [r5], -r6, lsl #10
     cf4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     cf8:	6f018e02 	svcvs	0x00018e02
     cfc:	c5c4000e 	strbgt	r0, [r4, #14]
     d00:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
     d04:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     d08:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d0c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	00000014 	andeq	r0, r0, r4, lsl r0
     d18:	00000b10 	andeq	r0, r0, r0, lsl fp
     d1c:	00000000 	andeq	r0, r0, r0
     d20:	00000020 	andeq	r0, r0, r0, lsr #32
     d24:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d28:	00018e02 	andeq	r8, r1, r2, lsl #28
     d2c:	00000014 	andeq	r0, r0, r4, lsl r0
     d30:	00000b10 	andeq	r0, r0, r0, lsl fp
     d34:	00000000 	andeq	r0, r0, r0
     d38:	00000020 	andeq	r0, r0, r0, lsr #32
     d3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d40:	00018e02 	andeq	r8, r1, r2, lsl #28
     d44:	00000014 	andeq	r0, r0, r4, lsl r0
     d48:	00000b10 	andeq	r0, r0, r0, lsl fp
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00000020 	andeq	r0, r0, r0, lsr #32
     d54:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d58:	00018e02 	andeq	r8, r1, r2, lsl #28
     d5c:	00000014 	andeq	r0, r0, r4, lsl r0
     d60:	00000b10 	andeq	r0, r0, r0, lsl fp
     d64:	00000000 	andeq	r0, r0, r0
     d68:	00000020 	andeq	r0, r0, r0, lsr #32
     d6c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d70:	00018e02 	andeq	r8, r1, r2, lsl #28
     d74:	00000018 	andeq	r0, r0, r8, lsl r0
     d78:	00000b10 	andeq	r0, r0, r0, lsl fp
     d7c:	00000000 	andeq	r0, r0, r0
     d80:	000000d8 	ldrdeq	r0, [r0], -r8
     d84:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d88:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d90:	00000018 	andeq	r0, r0, r8, lsl r0
     d94:	00000b10 	andeq	r0, r0, r0, lsl fp
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000084 	andeq	r0, r0, r4, lsl #1
     da0:	83100e41 	tsthi	r0, #1040	; 0x410
     da4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     da8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dac:	0000001c 	andeq	r0, r0, ip, lsl r0
     db0:	00000b10 	andeq	r0, r0, r0, lsl fp
     db4:	00000000 	andeq	r0, r0, r0
     db8:	000000ac 	andeq	r0, r0, ip, lsr #1
     dbc:	83180e41 	tsthi	r8, #1040	; 0x410
     dc0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     dc4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     dc8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dcc:	00000014 	andeq	r0, r0, r4, lsl r0
     dd0:	00000b10 	andeq	r0, r0, r0, lsl fp
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	0000003c 	andeq	r0, r0, ip, lsr r0
     ddc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     de0:	00018e02 	andeq	r8, r1, r2, lsl #28
     de4:	0000000c 	andeq	r0, r0, ip
     de8:	00000b10 	andeq	r0, r0, r0, lsl fp
     dec:	100026b0 			; <UNDEFINED> instruction: 0x100026b0
     df0:	00000010 	andeq	r0, r0, r0, lsl r0
     df4:	0000000c 	andeq	r0, r0, ip
     df8:	00000b10 	andeq	r0, r0, r0, lsl fp
     dfc:	100026c0 	andne	r2, r0, r0, asr #13
     e00:	0000000c 	andeq	r0, r0, ip
     e04:	0000000c 	andeq	r0, r0, ip
     e08:	00000b10 	andeq	r0, r0, r0, lsl fp
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	0000000c 	andeq	r0, r0, ip
     e14:	0000000c 	andeq	r0, r0, ip
     e18:	00000b10 	andeq	r0, r0, r0, lsl fp
     e1c:	100026cc 	andne	r2, r0, ip, asr #13
     e20:	0000000c 	andeq	r0, r0, ip
     e24:	0000000c 	andeq	r0, r0, ip
     e28:	00000b10 	andeq	r0, r0, r0, lsl fp
     e2c:	00000000 	andeq	r0, r0, r0
     e30:	00000014 	andeq	r0, r0, r4, lsl r0
     e34:	0000000c 	andeq	r0, r0, ip
     e38:	00000b10 	andeq	r0, r0, r0, lsl fp
     e3c:	00000000 	andeq	r0, r0, r0
     e40:	00000034 	andeq	r0, r0, r4, lsr r0
     e44:	0000000c 	andeq	r0, r0, ip
     e48:	00000b10 	andeq	r0, r0, r0, lsl fp
     e4c:	00000000 	andeq	r0, r0, r0
     e50:	0000000c 	andeq	r0, r0, ip
     e54:	0000000c 	andeq	r0, r0, ip
     e58:	00000b10 	andeq	r0, r0, r0, lsl fp
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	0000000c 	andeq	r0, r0, ip
     e64:	00000014 	andeq	r0, r0, r4, lsl r0
     e68:	00000b10 	andeq	r0, r0, r0, lsl fp
     e6c:	100026d8 	ldrdne	r2, [r0], -r8
     e70:	0000003c 	andeq	r0, r0, ip, lsr r0
     e74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e78:	00018e02 	andeq	r8, r1, r2, lsl #28
     e7c:	0000002c 	andeq	r0, r0, ip, lsr #32
     e80:	00000b10 	andeq	r0, r0, r0, lsl fp
     e84:	10002714 	andne	r2, r0, r4, lsl r7
     e88:	00000160 	andeq	r0, r0, r0, ror #2
     e8c:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     e90:	86038504 	strhi	r8, [r3], -r4, lsl #10
     e94:	02018e02 	andeq	r8, r1, #2, 28
     e98:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
     e9c:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
     ea0:	0484100e 	streq	r1, [r4], #14
     ea4:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     ea8:	0000018e 	andeq	r0, r0, lr, lsl #3
     eac:	00000014 	andeq	r0, r0, r4, lsl r0
     eb0:	00000b10 	andeq	r0, r0, r0, lsl fp
     eb4:	10002874 	andne	r2, r0, r4, ror r8
     eb8:	00000130 	andeq	r0, r0, r0, lsr r1
     ebc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ec0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ec4:	00000018 	andeq	r0, r0, r8, lsl r0
     ec8:	00000b10 	andeq	r0, r0, r0, lsl fp
     ecc:	00000000 	andeq	r0, r0, r0
     ed0:	0000005c 	andeq	r0, r0, ip, asr r0
     ed4:	83100e41 	tsthi	r0, #1040	; 0x410
     ed8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	00000014 	andeq	r0, r0, r4, lsl r0
     ee4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ee8:	100029a4 	andne	r2, r0, r4, lsr #19
     eec:	0000001e 	andeq	r0, r0, lr, lsl r0
     ef0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ef4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ef8:	00000014 	andeq	r0, r0, r4, lsl r0
     efc:	00000b10 	andeq	r0, r0, r0, lsl fp
     f00:	100029c4 	andne	r2, r0, r4, asr #19
     f04:	00000038 	andeq	r0, r0, r8, lsr r0
     f08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f10:	00000018 	andeq	r0, r0, r8, lsl r0
     f14:	00000b10 	andeq	r0, r0, r0, lsl fp
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	0000007c 	andeq	r0, r0, ip, ror r0
     f20:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f24:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f28:	00018e02 	andeq	r8, r1, r2, lsl #28
     f2c:	00000014 	andeq	r0, r0, r4, lsl r0
     f30:	00000b10 	andeq	r0, r0, r0, lsl fp
     f34:	00000000 	andeq	r0, r0, r0
     f38:	00000024 	andeq	r0, r0, r4, lsr #32
     f3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f40:	00018e02 	andeq	r8, r1, r2, lsl #28
     f44:	00000018 	andeq	r0, r0, r8, lsl r0
     f48:	00000b10 	andeq	r0, r0, r0, lsl fp
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	000000a4 	andeq	r0, r0, r4, lsr #1
     f54:	83100e41 	tsthi	r0, #1040	; 0x410
     f58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f60:	00000018 	andeq	r0, r0, r8, lsl r0
     f64:	00000b10 	andeq	r0, r0, r0, lsl fp
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	00000020 	andeq	r0, r0, r0, lsr #32
     f70:	83100e41 	tsthi	r0, #1040	; 0x410
     f74:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f78:	00018e02 	andeq	r8, r1, r2, lsl #28
     f7c:	00000014 	andeq	r0, r0, r4, lsl r0
     f80:	00000b10 	andeq	r0, r0, r0, lsl fp
     f84:	00000000 	andeq	r0, r0, r0
     f88:	00000020 	andeq	r0, r0, r0, lsr #32
     f8c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f90:	00018e02 	andeq	r8, r1, r2, lsl #28
     f94:	00000014 	andeq	r0, r0, r4, lsl r0
     f98:	00000b10 	andeq	r0, r0, r0, lsl fp
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	00000020 	andeq	r0, r0, r0, lsr #32
     fa4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fa8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fac:	00000014 	andeq	r0, r0, r4, lsl r0
     fb0:	00000b10 	andeq	r0, r0, r0, lsl fp
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	00000020 	andeq	r0, r0, r0, lsr #32
     fbc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     fc0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fc4:	0000000c 	andeq	r0, r0, ip
     fc8:	00000b10 	andeq	r0, r0, r0, lsl fp
     fcc:	100029fc 	strdne	r2, [r0], -ip
     fd0:	00000084 	andeq	r0, r0, r4, lsl #1
     fd4:	00000018 	andeq	r0, r0, r8, lsl r0
     fd8:	00000b10 	andeq	r0, r0, r0, lsl fp
     fdc:	00000000 	andeq	r0, r0, r0
     fe0:	000000a4 	andeq	r0, r0, r4, lsr #1
     fe4:	83100e41 	tsthi	r0, #1040	; 0x410
     fe8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fec:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff0:	00000014 	andeq	r0, r0, r4, lsl r0
     ff4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ff8:	10002a80 	andne	r2, r0, r0, lsl #21
     ffc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1000:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1004:	00018e02 	andeq	r8, r1, r2, lsl #28
    1008:	00000018 	andeq	r0, r0, r8, lsl r0
    100c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000040 	andeq	r0, r0, r0, asr #32
    1018:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    101c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1020:	00018e02 	andeq	r8, r1, r2, lsl #28
    1024:	00000018 	andeq	r0, r0, r8, lsl r0
    1028:	00000b10 	andeq	r0, r0, r0, lsl fp
    102c:	10002a9c 	mulne	r0, ip, sl
    1030:	0000003c 	andeq	r0, r0, ip, lsr r0
    1034:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1038:	86038504 	strhi	r8, [r3], -r4, lsl #10
    103c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1040:	00000014 	andeq	r0, r0, r4, lsl r0
    1044:	00000b10 	andeq	r0, r0, r0, lsl fp
    1048:	10002ad8 	ldrdne	r2, [r0], -r8
    104c:	000000e4 	andeq	r0, r0, r4, ror #1
    1050:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1054:	00018e02 	andeq	r8, r1, r2, lsl #28
    1058:	00000014 	andeq	r0, r0, r4, lsl r0
    105c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1060:	00000000 	andeq	r0, r0, r0
    1064:	000000b8 	strheq	r0, [r0], -r8
    1068:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    106c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1070:	00000014 	andeq	r0, r0, r4, lsl r0
    1074:	00000b10 	andeq	r0, r0, r0, lsl fp
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000024 	andeq	r0, r0, r4, lsr #32
    1080:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1084:	00018e02 	andeq	r8, r1, r2, lsl #28
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1090:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
    1094:	00000018 	andeq	r0, r0, r8, lsl r0
    1098:	0000001c 	andeq	r0, r0, ip, lsl r0
    109c:	00000b10 	andeq	r0, r0, r0, lsl fp
    10a0:	10002bd4 	ldrdne	r2, [r0], -r4
    10a4:	0000007c 	andeq	r0, r0, ip, ror r0
    10a8:	83180e41 	tsthi	r8, #1040	; 0x410
    10ac:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    10b0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    10b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10b8:	0000000c 	andeq	r0, r0, ip
    10bc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10c0:	10002c50 	andne	r2, r0, r0, asr ip
    10c4:	0000000c 	andeq	r0, r0, ip
    10c8:	0000000c 	andeq	r0, r0, ip
    10cc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10d0:	10002c5c 	andne	r2, r0, ip, asr ip
    10d4:	00000048 	andeq	r0, r0, r8, asr #32
    10d8:	00000014 	andeq	r0, r0, r4, lsl r0
    10dc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10e0:	00000000 	andeq	r0, r0, r0
    10e4:	00000018 	andeq	r0, r0, r8, lsl r0
    10e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    10ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    10f0:	0000000c 	andeq	r0, r0, ip
    10f4:	00000b10 	andeq	r0, r0, r0, lsl fp
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	0000000c 	andeq	r0, r0, ip
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	00000b10 	andeq	r0, r0, r0, lsl fp
    1108:	00000000 	andeq	r0, r0, r0
    110c:	00000010 	andeq	r0, r0, r0, lsl r0
    1110:	0000000c 	andeq	r0, r0, ip
    1114:	00000b10 	andeq	r0, r0, r0, lsl fp
    1118:	00000000 	andeq	r0, r0, r0
    111c:	00000020 	andeq	r0, r0, r0, lsr #32
    1120:	0000002c 	andeq	r0, r0, ip, lsr #32
    1124:	00000b10 	andeq	r0, r0, r0, lsl fp
    1128:	00000000 	andeq	r0, r0, r0
    112c:	000000b8 	strheq	r0, [r0], -r8
    1130:	83100e43 	tsthi	r0, #1072	; 0x430
    1134:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1138:	02018e02 	andeq	r8, r1, #2, 28
    113c:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1140:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    1144:	0483100e 	streq	r1, [r3], #14
    1148:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    114c:	0000018e 	andeq	r0, r0, lr, lsl #3
    1150:	0000002c 	andeq	r0, r0, ip, lsr #32
    1154:	00000b10 	andeq	r0, r0, r0, lsl fp
    1158:	10002ca4 	andne	r2, r0, r4, lsr #25
    115c:	00000080 	andeq	r0, r0, r0, lsl #1
    1160:	83100e43 	tsthi	r0, #1072	; 0x430
    1164:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1168:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    116c:	c4c3000e 	strbgt	r0, [r3], #14
    1170:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    1174:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    1178:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    117c:	00000001 	andeq	r0, r0, r1
    1180:	00000020 	andeq	r0, r0, r0, lsr #32
    1184:	00000b10 	andeq	r0, r0, r0, lsl fp
    1188:	00000000 	andeq	r0, r0, r0
    118c:	00000090 	muleq	r0, r0, r0
    1190:	83100e43 	tsthi	r0, #1072	; 0x430
    1194:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1198:	7f018e02 	svcvc	0x00018e02
    119c:	c4c3000e 	strbgt	r0, [r3], #14
    11a0:	0000cec5 	andeq	ip, r0, r5, asr #29
    11a4:	0000000c 	andeq	r0, r0, ip
    11a8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11ac:	00000000 	andeq	r0, r0, r0
    11b0:	00000018 	andeq	r0, r0, r8, lsl r0
    11b4:	0000000c 	andeq	r0, r0, ip
    11b8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00000014 	andeq	r0, r0, r4, lsl r0
    11c4:	00000018 	andeq	r0, r0, r8, lsl r0
    11c8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11cc:	00000000 	andeq	r0, r0, r0
    11d0:	000000a8 	andeq	r0, r0, r8, lsr #1
    11d4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    11d8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    11dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    11e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    11e4:	00000b10 	andeq	r0, r0, r0, lsl fp
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	000000cc 	andeq	r0, r0, ip, asr #1
    11f0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    11f4:	86058506 	strhi	r8, [r5], -r6, lsl #10
    11f8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    11fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1200:	0000001c 	andeq	r0, r0, ip, lsl r0
    1204:	00000b10 	andeq	r0, r0, r0, lsl fp
    1208:	00000000 	andeq	r0, r0, r0
    120c:	0000011c 	andeq	r0, r0, ip, lsl r1
    1210:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1214:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1218:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    121c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1220:	0000001c 	andeq	r0, r0, ip, lsl r0
    1224:	00000b10 	andeq	r0, r0, r0, lsl fp
    1228:	00000000 	andeq	r0, r0, r0
    122c:	00000158 	andeq	r0, r0, r8, asr r1
    1230:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1234:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1238:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    123c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1240:	00000018 	andeq	r0, r0, r8, lsl r0
    1244:	00000b10 	andeq	r0, r0, r0, lsl fp
    1248:	00000000 	andeq	r0, r0, r0
    124c:	000000ec 	andeq	r0, r0, ip, ror #1
    1250:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1254:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1258:	00018e02 	andeq	r8, r1, r2, lsl #28
    125c:	00000018 	andeq	r0, r0, r8, lsl r0
    1260:	00000b10 	andeq	r0, r0, r0, lsl fp
    1264:	00000000 	andeq	r0, r0, r0
    1268:	00000038 	andeq	r0, r0, r8, lsr r0
    126c:	83100e41 	tsthi	r0, #1040	; 0x410
    1270:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1274:	00018e02 	andeq	r8, r1, r2, lsl #28
    1278:	00000018 	andeq	r0, r0, r8, lsl r0
    127c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1280:	00000000 	andeq	r0, r0, r0
    1284:	00000034 	andeq	r0, r0, r4, lsr r0
    1288:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    128c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1290:	00018e02 	andeq	r8, r1, r2, lsl #28
    1294:	0000000c 	andeq	r0, r0, ip
    1298:	00000b10 	andeq	r0, r0, r0, lsl fp
    129c:	10002d24 	andne	r2, r0, r4, lsr #26
    12a0:	00000018 	andeq	r0, r0, r8, lsl r0
    12a4:	00000020 	andeq	r0, r0, r0, lsr #32
    12a8:	00000b10 	andeq	r0, r0, r0, lsl fp
    12ac:	10002d3c 	andne	r2, r0, ip, lsr sp
    12b0:	0000006c 	andeq	r0, r0, ip, rrx
    12b4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    12b8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    12bc:	300e4101 	andcc	r4, lr, r1, lsl #2
    12c0:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    12c4:	00000b41 	andeq	r0, r0, r1, asr #22
    12c8:	00000014 	andeq	r0, r0, r4, lsl r0
    12cc:	00000b10 	andeq	r0, r0, r0, lsl fp
    12d0:	10002da8 	andne	r2, r0, r8, lsr #27
    12d4:	00000048 	andeq	r0, r0, r8, asr #32
    12d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12e0:	0000000c 	andeq	r0, r0, ip
    12e4:	00000b10 	andeq	r0, r0, r0, lsl fp
    12e8:	10002df0 	strdne	r2, [r0], -r0
    12ec:	00000018 	andeq	r0, r0, r8, lsl r0
    12f0:	0000000c 	andeq	r0, r0, ip
    12f4:	00000b10 	andeq	r0, r0, r0, lsl fp
    12f8:	00000000 	andeq	r0, r0, r0
    12fc:	00000074 	andeq	r0, r0, r4, ror r0
    1300:	0000000c 	andeq	r0, r0, ip
    1304:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1308:	7c020001 	stcvc	0, cr0, [r2], {1}
    130c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1310:	0000000c 	andeq	r0, r0, ip
    1314:	00001300 	andeq	r1, r0, r0, lsl #6
    1318:	10002e08 	andne	r2, r0, r8, lsl #28
    131c:	00000020 	andeq	r0, r0, r0, lsr #32
    1320:	00000014 	andeq	r0, r0, r4, lsl r0
    1324:	00001300 	andeq	r1, r0, r0, lsl #6
    1328:	10002e28 	andne	r2, r0, r8, lsr #28
    132c:	00000048 	andeq	r0, r0, r8, asr #32
    1330:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1334:	00018e02 	andeq	r8, r1, r2, lsl #28
    1338:	00000018 	andeq	r0, r0, r8, lsl r0
    133c:	00001300 	andeq	r1, r0, r0, lsl #6
    1340:	10002e70 	andne	r2, r0, r0, ror lr
    1344:	00000028 	andeq	r0, r0, r8, lsr #32
    1348:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    134c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1350:	00018e02 	andeq	r8, r1, r2, lsl #28
    1354:	00000018 	andeq	r0, r0, r8, lsl r0
    1358:	00001300 	andeq	r1, r0, r0, lsl #6
    135c:	10002e98 	mulne	r0, r8, lr
    1360:	00000040 	andeq	r0, r0, r0, asr #32
    1364:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1368:	86038504 	strhi	r8, [r3], -r4, lsl #10
    136c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1370:	00000014 	andeq	r0, r0, r4, lsl r0
    1374:	00001300 	andeq	r1, r0, r0, lsl #6
    1378:	10002ed8 	ldrdne	r2, [r0], -r8
    137c:	00000030 	andeq	r0, r0, r0, lsr r0
    1380:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1384:	00018e02 	andeq	r8, r1, r2, lsl #28
    1388:	00000018 	andeq	r0, r0, r8, lsl r0
    138c:	00001300 	andeq	r1, r0, r0, lsl #6
    1390:	10002f08 	andne	r2, r0, r8, lsl #30
    1394:	0000002c 	andeq	r0, r0, ip, lsr #32
    1398:	83100e41 	tsthi	r0, #1040	; 0x410
    139c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    13a4:	00000020 	andeq	r0, r0, r0, lsr #32
    13a8:	00001300 	andeq	r1, r0, r0, lsl #6
    13ac:	10002f34 	andne	r2, r0, r4, lsr pc
    13b0:	00000068 	andeq	r0, r0, r8, rrx
    13b4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13b8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13bc:	41018e02 	tstmi	r1, r2, lsl #28
    13c0:	0a5d180e 	beq	1747400 <__RAM_SIZE+0x1647400>
    13c4:	0b41100e 	bleq	1045404 <__RAM_SIZE+0xf45404>
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00001300 	andeq	r1, r0, r0, lsl #6
    13d0:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    13d4:	000000f8 	strdeq	r0, [r0], -r8
    13d8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    13dc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    13e0:	280e4101 	stmdacs	lr, {r0, r8, lr}
    13e4:	0c0e7702 	stceq	7, cr7, [lr], {2}
    13e8:	00000014 	andeq	r0, r0, r4, lsl r0
    13ec:	00001300 	andeq	r1, r0, r0, lsl #6
    13f0:	10003094 	mulne	r0, r4, r0
    13f4:	00000016 	andeq	r0, r0, r6, lsl r0
    13f8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    13fc:	100e4101 	andne	r4, lr, r1, lsl #2
    1400:	00000020 	andeq	r0, r0, r0, lsr #32
    1404:	00001300 	andeq	r1, r0, r0, lsl #6
    1408:	100030ac 	andne	r3, r0, ip, lsr #1
    140c:	00000060 	andeq	r0, r0, r0, rrx
    1410:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1414:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1418:	180e4101 	stmdane	lr, {r0, r8, lr}
    141c:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1420:	00000b41 	andeq	r0, r0, r1, asr #22
    1424:	0000001c 	andeq	r0, r0, ip, lsl r0
    1428:	00001300 	andeq	r1, r0, r0, lsl #6
    142c:	00000000 	andeq	r0, r0, r0
    1430:	00000036 	andeq	r0, r0, r6, lsr r0
    1434:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1438:	86058506 	strhi	r8, [r5], -r6, lsl #10
    143c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1440:	00018e02 	andeq	r8, r1, r2, lsl #28
    1444:	0000001c 	andeq	r0, r0, ip, lsl r0
    1448:	00001300 	andeq	r1, r0, r0, lsl #6
    144c:	1000310c 	andne	r3, r0, ip, lsl #2
    1450:	0000005c 	andeq	r0, r0, ip, asr r0
    1454:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1458:	41018e02 	tstmi	r1, r2, lsl #28
    145c:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    1460:	00000008 	andeq	r0, r0, r8
    1464:	00000024 	andeq	r0, r0, r4, lsr #32
    1468:	00001300 	andeq	r1, r0, r0, lsl #6
    146c:	00000000 	andeq	r0, r0, r0
    1470:	00000038 	andeq	r0, r0, r8, lsr r0
    1474:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1478:	86058506 	strhi	r8, [r5], -r6, lsl #10
    147c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1480:	41018e02 	tstmi	r1, r2, lsl #28
    1484:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    1488:	00000018 	andeq	r0, r0, r8, lsl r0
    148c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1490:	00001300 	andeq	r1, r0, r0, lsl #6
    1494:	00000000 	andeq	r0, r0, r0
    1498:	00000020 	andeq	r0, r0, r0, lsr #32
    149c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    14a0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    14a4:	180e4101 	stmdane	lr, {r0, r8, lr}
    14a8:	000c0e4d 	andeq	r0, ip, sp, asr #28
    14ac:	00000020 	andeq	r0, r0, r0, lsr #32
    14b0:	00001300 	andeq	r1, r0, r0, lsl #6
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	0000004c 	andeq	r0, r0, ip, asr #32
    14bc:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    14c0:	180e4101 	stmdane	lr, {r0, r8, lr}
    14c4:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    14c8:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    14cc:	0000ce00 	andeq	ip, r0, r0, lsl #28
    14d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d4:	00001300 	andeq	r1, r0, r0, lsl #6
    14d8:	00000000 	andeq	r0, r0, r0
    14dc:	00000034 	andeq	r0, r0, r4, lsr r0
    14e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    14e4:	41018e02 	tstmi	r1, r2, lsl #28
    14e8:	0a4b180e 	beq	12c7528 <__RAM_SIZE+0x11c7528>
    14ec:	0b41080e 	bleq	104352c <__RAM_SIZE+0xf4352c>
    14f0:	0000000c 	andeq	r0, r0, ip
    14f4:	00001300 	andeq	r1, r0, r0, lsl #6
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	0000000c 	andeq	r0, r0, ip
    1500:	0000000c 	andeq	r0, r0, ip
    1504:	00001300 	andeq	r1, r0, r0, lsl #6
    1508:	00000000 	andeq	r0, r0, r0
    150c:	00000004 	andeq	r0, r0, r4
    1510:	00000018 	andeq	r0, r0, r8, lsl r0
    1514:	00001300 	andeq	r1, r0, r0, lsl #6
    1518:	00000000 	andeq	r0, r0, r0
    151c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1520:	83100e41 	tsthi	r0, #1040	; 0x410
    1524:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1528:	00018e02 	andeq	r8, r1, r2, lsl #28
    152c:	00000014 	andeq	r0, r0, r4, lsl r0
    1530:	00001300 	andeq	r1, r0, r0, lsl #6
    1534:	00000000 	andeq	r0, r0, r0
    1538:	00000020 	andeq	r0, r0, r0, lsr #32
    153c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1540:	00018e02 	andeq	r8, r1, r2, lsl #28
    1544:	00000014 	andeq	r0, r0, r4, lsl r0
    1548:	00001300 	andeq	r1, r0, r0, lsl #6
    154c:	00000000 	andeq	r0, r0, r0
    1550:	00000008 	andeq	r0, r0, r8
    1554:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1558:	00018e02 	andeq	r8, r1, r2, lsl #28
    155c:	0000000c 	andeq	r0, r0, ip
    1560:	00001300 	andeq	r1, r0, r0, lsl #6
    1564:	00000000 	andeq	r0, r0, r0
    1568:	00000004 	andeq	r0, r0, r4
    156c:	0000000c 	andeq	r0, r0, ip
    1570:	00001300 	andeq	r1, r0, r0, lsl #6
    1574:	00000000 	andeq	r0, r0, r0
    1578:	00000014 	andeq	r0, r0, r4, lsl r0
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	00001300 	andeq	r1, r0, r0, lsl #6
    1584:	00000000 	andeq	r0, r0, r0
    1588:	00000004 	andeq	r0, r0, r4
    158c:	00000014 	andeq	r0, r0, r4, lsl r0
    1590:	00001300 	andeq	r1, r0, r0, lsl #6
    1594:	00000000 	andeq	r0, r0, r0
    1598:	00000020 	andeq	r0, r0, r0, lsr #32
    159c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15a4:	00000014 	andeq	r0, r0, r4, lsl r0
    15a8:	00001300 	andeq	r1, r0, r0, lsl #6
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00000012 	andeq	r0, r0, r2, lsl r0
    15b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15bc:	00000018 	andeq	r0, r0, r8, lsl r0
    15c0:	00001300 	andeq	r1, r0, r0, lsl #6
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00000012 	andeq	r0, r0, r2, lsl r0
    15cc:	83100e41 	tsthi	r0, #1040	; 0x410
    15d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    15d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    15d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15dc:	00001300 	andeq	r1, r0, r0, lsl #6
    15e0:	00000000 	andeq	r0, r0, r0
    15e4:	00000028 	andeq	r0, r0, r8, lsr #32
    15e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15ec:	41018e02 	tstmi	r1, r2, lsl #28
    15f0:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    15f4:	00000008 	andeq	r0, r0, r8
    15f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15fc:	00001300 	andeq	r1, r0, r0, lsl #6
    1600:	00000000 	andeq	r0, r0, r0
    1604:	00000028 	andeq	r0, r0, r8, lsr #32
    1608:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    160c:	41018e02 	tstmi	r1, r2, lsl #28
    1610:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    1614:	00000008 	andeq	r0, r0, r8
    1618:	0000000c 	andeq	r0, r0, ip
    161c:	00001300 	andeq	r1, r0, r0, lsl #6
    1620:	00000000 	andeq	r0, r0, r0
    1624:	00000014 	andeq	r0, r0, r4, lsl r0
    1628:	0000000c 	andeq	r0, r0, ip
    162c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1630:	7c020001 	stcvc	0, cr0, [r2], {1}
    1634:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1638:	0000000c 	andeq	r0, r0, ip
    163c:	00001628 	andeq	r1, r0, r8, lsr #12
    1640:	10003168 	andne	r3, r0, r8, ror #2
    1644:	00000058 	andeq	r0, r0, r8, asr r0
    1648:	0000001c 	andeq	r0, r0, ip, lsl r0
    164c:	00001628 	andeq	r1, r0, r8, lsr #12
    1650:	100031c0 	andne	r3, r0, r0, asr #3
    1654:	00000064 	andeq	r0, r0, r4, rrx
    1658:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    165c:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    1660:	0b41000e 	bleq	10416a0 <__RAM_SIZE+0xf416a0>
    1664:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    1668:	00000018 	andeq	r0, r0, r8, lsl r0
    166c:	00001628 	andeq	r1, r0, r8, lsr #12
    1670:	10003224 	andne	r3, r0, r4, lsr #4
    1674:	000000d4 	ldrdeq	r0, [r0], -r4
    1678:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    167c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1680:	00018e02 	andeq	r8, r1, r2, lsl #28
    1684:	00000020 	andeq	r0, r0, r0, lsr #32
    1688:	00001628 	andeq	r1, r0, r8, lsr #12
    168c:	100032f8 	strdne	r3, [r0], -r8
    1690:	00000050 	andeq	r0, r0, r0, asr r0
    1694:	83100e42 	tsthi	r0, #1056	; 0x420
    1698:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    169c:	61018e02 	tstvs	r1, r2, lsl #28
    16a0:	c4c3000e 	strbgt	r0, [r3], #14
    16a4:	0000cec5 	andeq	ip, r0, r5, asr #29
    16a8:	0000000c 	andeq	r0, r0, ip
    16ac:	00001628 	andeq	r1, r0, r8, lsr #12
    16b0:	00000000 	andeq	r0, r0, r0
    16b4:	0000000c 	andeq	r0, r0, ip
    16b8:	0000000c 	andeq	r0, r0, ip
    16bc:	00001628 	andeq	r1, r0, r8, lsr #12
    16c0:	00000000 	andeq	r0, r0, r0
    16c4:	0000000c 	andeq	r0, r0, ip
    16c8:	0000000c 	andeq	r0, r0, ip
    16cc:	00001628 	andeq	r1, r0, r8, lsr #12
    16d0:	00000000 	andeq	r0, r0, r0
    16d4:	00000002 	andeq	r0, r0, r2
    16d8:	00000018 	andeq	r0, r0, r8, lsl r0
    16dc:	00001628 	andeq	r1, r0, r8, lsr #12
    16e0:	00000000 	andeq	r0, r0, r0
    16e4:	00000032 	andeq	r0, r0, r2, lsr r0
    16e8:	83100e41 	tsthi	r0, #1040	; 0x410
    16ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    16f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16f8:	00001628 	andeq	r1, r0, r8, lsr #12
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	00000080 	andeq	r0, r0, r0, lsl #1
    1704:	83180e41 	tsthi	r8, #1040	; 0x410
    1708:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    170c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1710:	00018e02 	andeq	r8, r1, r2, lsl #28
    1714:	0000000c 	andeq	r0, r0, ip
    1718:	00001628 	andeq	r1, r0, r8, lsr #12
    171c:	00000000 	andeq	r0, r0, r0
    1720:	0000002c 	andeq	r0, r0, ip, lsr #32
    1724:	0000000c 	andeq	r0, r0, ip
    1728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    172c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1730:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1734:	00000018 	andeq	r0, r0, r8, lsl r0
    1738:	00001724 	andeq	r1, r0, r4, lsr #14
    173c:	10003348 	andne	r3, r0, r8, asr #6
    1740:	00000018 	andeq	r0, r0, r8, lsl r0
    1744:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1748:	100e4101 	andne	r4, lr, r1, lsl #2
    174c:	00040e48 	andeq	r0, r4, r8, asr #28
    1750:	00000014 	andeq	r0, r0, r4, lsl r0
    1754:	00001724 	andeq	r1, r0, r4, lsr #14
    1758:	10003360 	andne	r3, r0, r0, ror #6
    175c:	00000114 	andeq	r0, r0, r4, lsl r1
    1760:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1764:	00018e02 	andeq	r8, r1, r2, lsl #28
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	00001724 	andeq	r1, r0, r4, lsr #14
    1770:	10003474 	andne	r3, r0, r4, ror r4
    1774:	0000003c 	andeq	r0, r0, ip, lsr r0
    1778:	0000000c 	andeq	r0, r0, ip
    177c:	00001724 	andeq	r1, r0, r4, lsr #14
    1780:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
    1784:	00000016 	andeq	r0, r0, r6, lsl r0
    1788:	00000014 	andeq	r0, r0, r4, lsl r0
    178c:	00001724 	andeq	r1, r0, r4, lsr #14
    1790:	100034c8 	andne	r3, r0, r8, asr #9
    1794:	0000001c 	andeq	r0, r0, ip, lsl r0
    1798:	83080e41 	movwhi	r0, #36417	; 0x8e41
    179c:	00018e02 	andeq	r8, r1, r2, lsl #28
    17a0:	00000014 	andeq	r0, r0, r4, lsl r0
    17a4:	00001724 	andeq	r1, r0, r4, lsr #14
    17a8:	100034e4 	andne	r3, r0, r4, ror #9
    17ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    17b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17b8:	00000014 	andeq	r0, r0, r4, lsl r0
    17bc:	00001724 	andeq	r1, r0, r4, lsr #14
    17c0:	10003500 	andne	r3, r0, r0, lsl #10
    17c4:	00000022 	andeq	r0, r0, r2, lsr #32
    17c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    17cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    17d0:	00000014 	andeq	r0, r0, r4, lsl r0
    17d4:	00001724 	andeq	r1, r0, r4, lsr #14
    17d8:	10003522 	andne	r3, r0, r2, lsr #10
    17dc:	00000014 	andeq	r0, r0, r4, lsl r0
    17e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17e8:	00000018 	andeq	r0, r0, r8, lsl r0
    17ec:	00001724 	andeq	r1, r0, r4, lsr #14
    17f0:	10003538 	andne	r3, r0, r8, lsr r5
    17f4:	00000090 	muleq	r0, r0, r0
    17f8:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    17fc:	c4440201 	strbgt	r0, [r4], #-513	; 0xfffffdff
    1800:	0000000e 	andeq	r0, r0, lr
    1804:	00000014 	andeq	r0, r0, r4, lsl r0
    1808:	00001724 	andeq	r1, r0, r4, lsr #14
    180c:	100035c8 	andne	r3, r0, r8, asr #11
    1810:	00000040 	andeq	r0, r0, r0, asr #32
    1814:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1818:	00018e02 	andeq	r8, r1, r2, lsl #28
    181c:	0000000c 	andeq	r0, r0, ip
    1820:	00001724 	andeq	r1, r0, r4, lsr #14
    1824:	00000000 	andeq	r0, r0, r0
    1828:	00000002 	andeq	r0, r0, r2
    182c:	0000000c 	andeq	r0, r0, ip
    1830:	00001724 	andeq	r1, r0, r4, lsr #14
    1834:	00000000 	andeq	r0, r0, r0
    1838:	0000000e 	andeq	r0, r0, lr
    183c:	0000000c 	andeq	r0, r0, ip
    1840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1844:	7c020001 	stcvc	0, cr0, [r2], {1}
    1848:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    184c:	0000000c 	andeq	r0, r0, ip
    1850:	0000183c 	andeq	r1, r0, ip, lsr r8
    1854:	10003608 	andne	r3, r0, r8, lsl #12
    1858:	00000026 	andeq	r0, r0, r6, lsr #32
    185c:	0000000c 	andeq	r0, r0, ip
    1860:	0000183c 	andeq	r1, r0, ip, lsr r8
    1864:	00000000 	andeq	r0, r0, r0
    1868:	00000010 	andeq	r0, r0, r0, lsl r0
    186c:	0000000c 	andeq	r0, r0, ip
    1870:	0000183c 	andeq	r1, r0, ip, lsr r8
    1874:	00000000 	andeq	r0, r0, r0
    1878:	0000000e 	andeq	r0, r0, lr
    187c:	0000000c 	andeq	r0, r0, ip
    1880:	0000183c 	andeq	r1, r0, ip, lsr r8
    1884:	00000000 	andeq	r0, r0, r0
    1888:	0000000e 	andeq	r0, r0, lr
    188c:	0000000c 	andeq	r0, r0, ip
    1890:	0000183c 	andeq	r1, r0, ip, lsr r8
    1894:	10003634 	andne	r3, r0, r4, lsr r6
    1898:	0000001a 	andeq	r0, r0, sl, lsl r0
    189c:	0000000c 	andeq	r0, r0, ip
    18a0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18a4:	10003654 	andne	r3, r0, r4, asr r6
    18a8:	00000016 	andeq	r0, r0, r6, lsl r0
    18ac:	0000000c 	andeq	r0, r0, ip
    18b0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18b4:	1000366a 	andne	r3, r0, sl, ror #12
    18b8:	0000000e 	andeq	r0, r0, lr
    18bc:	0000000c 	andeq	r0, r0, ip
    18c0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18c4:	10003678 	andne	r3, r0, r8, ror r6
    18c8:	00000044 	andeq	r0, r0, r4, asr #32
    18cc:	0000000c 	andeq	r0, r0, ip
    18d0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18d4:	100036c0 	andne	r3, r0, r0, asr #13
    18d8:	00000012 	andeq	r0, r0, r2, lsl r0
    18dc:	0000000c 	andeq	r0, r0, ip
    18e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18e4:	7c020001 	stcvc	0, cr0, [r2], {1}
    18e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18ec:	0000000c 	andeq	r0, r0, ip
    18f0:	000018dc 	ldrdeq	r1, [r0], -ip
    18f4:	100037b0 			; <UNDEFINED> instruction: 0x100037b0
    18f8:	0000000c 	andeq	r0, r0, ip
    18fc:	0000000c 	andeq	r0, r0, ip
    1900:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1904:	7c020001 	stcvc	0, cr0, [r2], {1}
    1908:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    190c:	00000018 	andeq	r0, r0, r8, lsl r0
    1910:	000018fc 	strdeq	r1, [r0], -ip
    1914:	100038a8 	andne	r3, r0, r8, lsr #17
    1918:	000000a4 	andeq	r0, r0, r4, lsr #1
    191c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1920:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1924:	00018e02 	andeq	r8, r1, r2, lsl #28
    1928:	0000000c 	andeq	r0, r0, ip
    192c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1930:	7c020001 	stcvc	0, cr0, [r2], {1}
    1934:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1938:	0000000c 	andeq	r0, r0, ip
    193c:	00001928 	andeq	r1, r0, r8, lsr #18
    1940:	1000394c 	andne	r3, r0, ip, asr #18
    1944:	00000014 	andeq	r0, r0, r4, lsl r0
    1948:	00000044 	andeq	r0, r0, r4, asr #32
    194c:	00001928 	andeq	r1, r0, r8, lsr #18
    1950:	00000000 	andeq	r0, r0, r0
    1954:	000000c8 	andeq	r0, r0, r8, asr #1
    1958:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
    195c:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
    1960:	87078608 	strhi	r8, [r7, -r8, lsl #12]
    1964:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
    1968:	8b038a04 	blhi	e4180 <__HEAP_SIZE+0xe3180>
    196c:	46018e02 	strmi	r8, [r1], -r2, lsl #28
    1970:	5005300e 	andpl	r3, r5, lr
    1974:	0b51050c 	bleq	1442dac <__RAM_SIZE+0x1342dac>
    1978:	50060a60 	andpl	r0, r6, r0, ror #20
    197c:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
    1980:	cacbce43 	bgt	ff2f5294 <__StackTop+0xc71f5294>
    1984:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
    1988:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    198c:	000b4200 	andeq	r4, fp, r0, lsl #4
    1990:	0000000c 	andeq	r0, r0, ip
    1994:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1998:	7c020001 	stcvc	0, cr0, [r2], {1}
    199c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19a0:	0000000c 	andeq	r0, r0, ip
    19a4:	00001990 	muleq	r0, r0, r9
    19a8:	10003960 	andne	r3, r0, r0, ror #18
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	0000000c 	andeq	r0, r0, ip
    19b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    19bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19c0:	00000020 	andeq	r0, r0, r0, lsr #32
    19c4:	000019b0 			; <UNDEFINED> instruction: 0x000019b0
    19c8:	1000396c 	andne	r3, r0, ip, ror #18
    19cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    19d0:	83100e41 	tsthi	r0, #1040	; 0x410
    19d4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    19d8:	4f018e02 	svcmi	0x00018e02
    19dc:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    19e0:	0000000e 	andeq	r0, r0, lr
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19ec:	7c020001 	stcvc	0, cr0, [r2], {1}
    19f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	000019e4 	andeq	r1, r0, r4, ror #19
    19fc:	00000000 	andeq	r0, r0, r0
    1a00:	00000002 	andeq	r0, r0, r2
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	000019e4 	andeq	r1, r0, r4, ror #19
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	00000002 	andeq	r0, r0, r2
    1a14:	0000000c 	andeq	r0, r0, ip
    1a18:	000019e4 	andeq	r1, r0, r4, ror #19
    1a1c:	00000000 	andeq	r0, r0, r0
    1a20:	00000002 	andeq	r0, r0, r2
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019e4 	andeq	r1, r0, r4, ror #19
    1a2c:	00000000 	andeq	r0, r0, r0
    1a30:	00000002 	andeq	r0, r0, r2
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	000019e4 	andeq	r1, r0, r4, ror #19
    1a3c:	00000000 	andeq	r0, r0, r0
    1a40:	00000002 	andeq	r0, r0, r2
    1a44:	0000000c 	andeq	r0, r0, ip
    1a48:	000019e4 	andeq	r1, r0, r4, ror #19
    1a4c:	10003998 	mulne	r0, r8, r9
    1a50:	00000002 	andeq	r0, r0, r2
    1a54:	0000000c 	andeq	r0, r0, ip
    1a58:	000019e4 	andeq	r1, r0, r4, ror #19
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	00000004 	andeq	r0, r0, r4
    1a64:	0000000c 	andeq	r0, r0, ip
    1a68:	000019e4 	andeq	r1, r0, r4, ror #19
    1a6c:	00000000 	andeq	r0, r0, r0
    1a70:	00000004 	andeq	r0, r0, r4
    1a74:	0000000c 	andeq	r0, r0, ip
    1a78:	000019e4 	andeq	r1, r0, r4, ror #19
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	00000002 	andeq	r0, r0, r2
    1a84:	0000000c 	andeq	r0, r0, ip
    1a88:	000019e4 	andeq	r1, r0, r4, ror #19
    1a8c:	1000399c 	mulne	r0, ip, r9
    1a90:	00000002 	andeq	r0, r0, r2
    1a94:	0000000c 	andeq	r0, r0, ip
    1a98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a9c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1aa0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1aa4:	00000020 	andeq	r0, r0, r0, lsr #32
    1aa8:	00001a94 	muleq	r0, r4, sl
    1aac:	100039a0 	andne	r3, r0, r0, lsr #19
    1ab0:	00000090 	muleq	r0, r0, r0
    1ab4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1ab8:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1abc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ac0:	8a038904 	bhi	e3ed8 <__HEAP_SIZE+0xe2ed8>
    1ac4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ac8:	0000000c 	andeq	r0, r0, ip
    1acc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ad0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ad4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ad8:	00000024 	andeq	r0, r0, r4, lsr #32
    1adc:	00001ac8 	andeq	r1, r0, r8, asr #21
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	00000048 	andeq	r0, r0, r8, asr #32
    1ae8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1aec:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1af0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1af4:	60018e02 	andvs	r8, r1, r2, lsl #28
    1af8:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1afc:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1b00:	00000028 	andeq	r0, r0, r8, lsr #32
    1b04:	00001ac8 	andeq	r1, r0, r8, asr #21
    1b08:	00000000 	andeq	r0, r0, r0
    1b0c:	00000090 	muleq	r0, r0, r0
    1b10:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1b14:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b18:	7c018e02 	stcvc	14, cr8, [r1], {2}
    1b1c:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1b20:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1b24:	000e410b 	andeq	r4, lr, fp, lsl #2
    1b28:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b34:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b3c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b40:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b44:	10003a30 	andne	r3, r0, r0, lsr sl
    1b48:	00000282 	andeq	r0, r0, r2, lsl #5
    1b4c:	0c0e470a 	stceq	7, cr4, [lr], {10}
    1b50:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b54:	3a03018e 	bcc	c2194 <__HEAP_SIZE+0xc1194>
    1b58:	00000b01 	andeq	r0, r0, r1, lsl #22
    1b5c:	00000018 	andeq	r0, r0, r8, lsl r0
    1b60:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b64:	10003cb4 			; <UNDEFINED> instruction: 0x10003cb4
    1b68:	0000001e 	andeq	r0, r0, lr, lsl r0
    1b6c:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1b70:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b74:	0b49018e 	bleq	12421b4 <__RAM_SIZE+0x11421b4>
    1b78:	00000018 	andeq	r0, r0, r8, lsl r0
    1b7c:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b80:	10003cd4 	ldrdne	r3, [r0], -r4
    1b84:	00000022 	andeq	r0, r0, r2, lsr #32
    1b88:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1b8c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b90:	0b4b018e 	bleq	12c21d0 <__RAM_SIZE+0x11c21d0>
    1b94:	00000018 	andeq	r0, r0, r8, lsl r0
    1b98:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b9c:	10003cf8 	strdne	r3, [r0], -r8
    1ba0:	00000042 	andeq	r0, r0, r2, asr #32
    1ba4:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    1ba8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bac:	0b47018e 	bleq	11c21ec <__RAM_SIZE+0x10c21ec>
    1bb0:	00000024 	andeq	r0, r0, r4, lsr #32
    1bb4:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1bb8:	10003d3c 	andne	r3, r0, ip, lsr sp
    1bbc:	0000006a 	andeq	r0, r0, sl, rrx
    1bc0:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1bc4:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1bc8:	43018e02 	movwmi	r8, #7682	; 0x1e02
    1bcc:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1bd0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bd4:	0b68018e 	bleq	1a02214 <__RAM_SIZE+0x1902214>
    1bd8:	0000000c 	andeq	r0, r0, ip
    1bdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1be0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1be4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1be8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bec:	00001bd8 	ldrdeq	r1, [r0], -r8
    1bf0:	10003da8 	andne	r3, r0, r8, lsr #27
    1bf4:	00000254 	andeq	r0, r0, r4, asr r2
    1bf8:	100e410a 	andne	r4, lr, sl, lsl #2
    1bfc:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c00:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c04:	0b012903 	bleq	4c018 <__HEAP_SIZE+0x4b018>
    1c08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c0c:	00001bd8 	ldrdeq	r1, [r0], -r8
    1c10:	10003ffc 	strdne	r3, [r0], -ip
    1c14:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c18:	100e410a 	andne	r4, lr, sl, lsl #2
    1c1c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c20:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c24:	000be702 	andeq	lr, fp, r2, lsl #14
    1c28:	0000000c 	andeq	r0, r0, ip
    1c2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c30:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c38:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c3c:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c40:	100041cc 	andne	r4, r0, ip, asr #3
    1c44:	0000008a 	andeq	r0, r0, sl, lsl #1
    1c48:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    1c4c:	0e410a4a 	vmlseq.f32	s1, s2, s20
    1c50:	520b5b00 	andpl	r5, fp, #0, 22
    1c54:	0b41000e 	bleq	1041c94 <__RAM_SIZE+0xf41c94>
    1c58:	00000018 	andeq	r0, r0, r8, lsl r0
    1c5c:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c60:	10004258 	andne	r4, r0, r8, asr r2
    1c64:	00000020 	andeq	r0, r0, r0, lsr #32
    1c68:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    1c6c:	018e0280 	orreq	r0, lr, r0, lsl #5
    1c70:	00000b47 	andeq	r0, r0, r7, asr #22
    1c74:	00000014 	andeq	r0, r0, r4, lsl r0
    1c78:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c7c:	10004278 	andne	r4, r0, r8, ror r2
    1c80:	00000012 	andeq	r0, r0, r2, lsl r0
    1c84:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1c88:	0b47028e 	bleq	11c26c8 <__RAM_SIZE+0x10c26c8>
    1c8c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c90:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c94:	1000428c 	andne	r4, r0, ip, lsl #5
    1c98:	00000012 	andeq	r0, r0, r2, lsl r0
    1c9c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ca0:	0b47028e 	bleq	11c26e0 <__RAM_SIZE+0x10c26e0>
    1ca4:	00000014 	andeq	r0, r0, r4, lsl r0
    1ca8:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cac:	100042a0 	andne	r4, r0, r0, lsr #5
    1cb0:	00000012 	andeq	r0, r0, r2, lsl r0
    1cb4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cb8:	0b47028e 	bleq	11c26f8 <__RAM_SIZE+0x10c26f8>
    1cbc:	00000014 	andeq	r0, r0, r4, lsl r0
    1cc0:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cc4:	100042b4 			; <UNDEFINED> instruction: 0x100042b4
    1cc8:	00000012 	andeq	r0, r0, r2, lsl r0
    1ccc:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cd0:	0b47028e 	bleq	11c2710 <__RAM_SIZE+0x10c2710>
    1cd4:	00000014 	andeq	r0, r0, r4, lsl r0
    1cd8:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cdc:	100042c8 	andne	r4, r0, r8, asr #5
    1ce0:	00000012 	andeq	r0, r0, r2, lsl r0
    1ce4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ce8:	0b47028e 	bleq	11c2728 <__RAM_SIZE+0x10c2728>
    1cec:	0000000c 	andeq	r0, r0, ip
    1cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1cf4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1cf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1cfc:	00000010 	andeq	r0, r0, r0, lsl r0
    1d00:	00001cec 	andeq	r1, r0, ip, ror #25
    1d04:	100042dc 	ldrdne	r4, [r0], -ip
    1d08:	0000004e 	andeq	r0, r0, lr, asr #32
    1d0c:	000b670a 	andeq	r6, fp, sl, lsl #14
    1d10:	0000000c 	andeq	r0, r0, ip
    1d14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d20:	00000010 	andeq	r0, r0, r0, lsl r0
    1d24:	00001d10 	andeq	r1, r0, r0, lsl sp
    1d28:	1000432c 	andne	r4, r0, ip, lsr #6
    1d2c:	00000040 	andeq	r0, r0, r0, asr #32
    1d30:	000b600a 	andeq	r6, fp, sl
    1d34:	0000000c 	andeq	r0, r0, ip
    1d38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d44:	00000018 	andeq	r0, r0, r8, lsl r0
    1d48:	00001d34 	andeq	r1, r0, r4, lsr sp
    1d4c:	1000436c 	andne	r4, r0, ip, ror #6
    1d50:	00000030 	andeq	r0, r0, r0, lsr r0
    1d54:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1d58:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1d5c:	00000010 	andeq	r0, r0, r0, lsl r0
    1d60:	0000000c 	andeq	r0, r0, ip
    1d64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d70:	00000024 	andeq	r0, r0, r4, lsr #32
    1d74:	00001d60 	andeq	r1, r0, r0, ror #26
    1d78:	1000439c 	mulne	r0, ip, r3
    1d7c:	000002ec 	andeq	r0, r0, ip, ror #5
    1d80:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1d84:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1d88:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1d8c:	8a048905 	bhi	1241a8 <__RAM_SIZE+0x241a8>
    1d90:	8e028b03 	vmlahi.f64	d8, d2, d3
    1d94:	00000001 	andeq	r0, r0, r1
    1d98:	0000000c 	andeq	r0, r0, ip
    1d9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1da0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1da4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1da8:	0000000c 	andeq	r0, r0, ip
    1dac:	00001d98 	muleq	r0, r8, sp
    1db0:	10004688 	andne	r4, r0, r8, lsl #13
    1db4:	00000012 	andeq	r0, r0, r2, lsl r0
    1db8:	00000020 	andeq	r0, r0, r0, lsr #32
    1dbc:	00001d98 	muleq	r0, r8, sp
    1dc0:	1000469c 	mulne	r0, ip, r6
    1dc4:	00000060 	andeq	r0, r0, r0, rrx
    1dc8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1dcc:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1dd0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1dd4:	8a038904 	bhi	e41ec <__HEAP_SIZE+0xe31ec>
    1dd8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ddc:	0000000c 	andeq	r0, r0, ip
    1de0:	00001d98 	muleq	r0, r8, sp
    1de4:	100046fc 	strdne	r4, [r0], -ip
    1de8:	00000028 	andeq	r0, r0, r8, lsr #32
    1dec:	0000002c 	andeq	r0, r0, ip, lsr #32
    1df0:	00001d98 	muleq	r0, r8, sp
    1df4:	10004724 	andne	r4, r0, r4, lsr #14
    1df8:	0000009c 	muleq	r0, ip, r0
    1dfc:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e00:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e04:	180e4201 	stmdane	lr, {r0, r9, lr}
    1e08:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    1e0c:	0a440b41 	beq	1104b18 <__RAM_SIZE+0x1004b18>
    1e10:	0b410c0e 	bleq	1044e50 <__RAM_SIZE+0xf44e50>
    1e14:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1e18:	00000b41 	andeq	r0, r0, r1, asr #22
    1e1c:	00000018 	andeq	r0, r0, r8, lsl r0
    1e20:	00001d98 	muleq	r0, r8, sp
    1e24:	100047c0 	andne	r4, r0, r0, asr #15
    1e28:	00000058 	andeq	r0, r0, r8, asr r0
    1e2c:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1e30:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1e34:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1e38:	0000000c 	andeq	r0, r0, ip
    1e3c:	00001d98 	muleq	r0, r8, sp
    1e40:	10004818 	andne	r4, r0, r8, lsl r8
    1e44:	00000004 	andeq	r0, r0, r4
    1e48:	0000000c 	andeq	r0, r0, ip
    1e4c:	00001d98 	muleq	r0, r8, sp
    1e50:	1000481c 	andne	r4, r0, ip, lsl r8
    1e54:	0000000a 	andeq	r0, r0, sl
    1e58:	0000000c 	andeq	r0, r0, ip
    1e5c:	00001d98 	muleq	r0, r8, sp
    1e60:	10004828 	andne	r4, r0, r8, lsr #16
    1e64:	00000002 	andeq	r0, r0, r2
    1e68:	00000018 	andeq	r0, r0, r8, lsl r0
    1e6c:	00001d98 	muleq	r0, r8, sp
    1e70:	1000482c 	andne	r4, r0, ip, lsr #16
    1e74:	0000003e 	andeq	r0, r0, lr, lsr r0
    1e78:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1e7c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1e80:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e84:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e88:	00001d98 	muleq	r0, r8, sp
    1e8c:	1000486c 	andne	r4, r0, ip, ror #16
    1e90:	000000da 	ldrdeq	r0, [r0], -sl
    1e94:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1e98:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1e9c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ea0:	8a038904 	bhi	e42b8 <__HEAP_SIZE+0xe32b8>
    1ea4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    1ea8:	0207f00e 	andeq	pc, r7, #14
    1eac:	200e0a5b 	andcs	r0, lr, fp, asr sl
    1eb0:	00000b42 	andeq	r0, r0, r2, asr #22
    1eb4:	0000000c 	andeq	r0, r0, ip
    1eb8:	00001d98 	muleq	r0, r8, sp
    1ebc:	10004948 	andne	r4, r0, r8, asr #18
    1ec0:	00000004 	andeq	r0, r0, r4
    1ec4:	00000024 	andeq	r0, r0, r4, lsr #32
    1ec8:	00001d98 	muleq	r0, r8, sp
    1ecc:	1000494c 	andne	r4, r0, ip, asr #18
    1ed0:	00000066 	andeq	r0, r0, r6, rrx
    1ed4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1ed8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1edc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1ee0:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    1ee4:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    1ee8:	000b4114 	andeq	r4, fp, r4, lsl r1
    1eec:	00000018 	andeq	r0, r0, r8, lsl r0
    1ef0:	00001d98 	muleq	r0, r8, sp
    1ef4:	100049b4 			; <UNDEFINED> instruction: 0x100049b4
    1ef8:	00000012 	andeq	r0, r0, r2, lsl r0
    1efc:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1f00:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    1f04:	00000000 	andeq	r0, r0, r0
    1f08:	00000018 	andeq	r0, r0, r8, lsl r0
    1f0c:	00001d98 	muleq	r0, r8, sp
    1f10:	100049c8 	andne	r4, r0, r8, asr #19
    1f14:	00000044 	andeq	r0, r0, r4, asr #32
    1f18:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f1c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f20:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f24:	0000000c 	andeq	r0, r0, ip
    1f28:	00001d98 	muleq	r0, r8, sp
    1f2c:	10004a0c 	andne	r4, r0, ip, lsl #20
    1f30:	00000012 	andeq	r0, r0, r2, lsl r0
    1f34:	0000000c 	andeq	r0, r0, ip
    1f38:	00001d98 	muleq	r0, r8, sp
    1f3c:	10004a20 	andne	r4, r0, r0, lsr #20
    1f40:	00000002 	andeq	r0, r0, r2
    1f44:	0000000c 	andeq	r0, r0, ip
    1f48:	00001d98 	muleq	r0, r8, sp
    1f4c:	10004a24 	andne	r4, r0, r4, lsr #20
    1f50:	0000000c 	andeq	r0, r0, ip
    1f54:	0000000c 	andeq	r0, r0, ip
    1f58:	00001d98 	muleq	r0, r8, sp
    1f5c:	10004a30 	andne	r4, r0, r0, lsr sl
    1f60:	00000034 	andeq	r0, r0, r4, lsr r0
    1f64:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f68:	00001d98 	muleq	r0, r8, sp
    1f6c:	10004a64 	andne	r4, r0, r4, ror #20
    1f70:	00000018 	andeq	r0, r0, r8, lsl r0
    1f74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1f78:	41018e02 	tstmi	r1, r2, lsl #28
    1f7c:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1f80:	00000008 	andeq	r0, r0, r8
    1f84:	0000000c 	andeq	r0, r0, ip
    1f88:	00001d98 	muleq	r0, r8, sp
    1f8c:	10004a7c 	andne	r4, r0, ip, ror sl
    1f90:	00000034 	andeq	r0, r0, r4, lsr r0
    1f94:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f98:	00001d98 	muleq	r0, r8, sp
    1f9c:	10004ab0 			; <UNDEFINED> instruction: 0x10004ab0
    1fa0:	00000018 	andeq	r0, r0, r8, lsl r0
    1fa4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1fa8:	41018e02 	tstmi	r1, r2, lsl #28
    1fac:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1fb0:	00000008 	andeq	r0, r0, r8
    1fb4:	00000020 	andeq	r0, r0, r0, lsr #32
    1fb8:	00001d98 	muleq	r0, r8, sp
    1fbc:	10004ac8 	andne	r4, r0, r8, asr #21
    1fc0:	0000007c 	andeq	r0, r0, ip, ror r0
    1fc4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1fc8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1fcc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1fd0:	d00e4301 	andle	r4, lr, r1, lsl #6
    1fd4:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    1fd8:	00000030 	andeq	r0, r0, r0, lsr r0
    1fdc:	00001d98 	muleq	r0, r8, sp
    1fe0:	10004b44 	andne	r4, r0, r4, asr #22
    1fe4:	000002c8 	andeq	r0, r0, r8, asr #5
    1fe8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1fec:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1ff0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1ff4:	8a048905 	bhi	124410 <__RAM_SIZE+0x24410>
    1ff8:	8e028b03 	vmlahi.f64	d8, d2, d3
    1ffc:	480e4201 	stmdami	lr, {r0, r9, lr}
    2000:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    2004:	0a710b42 	beq	1c44d14 <__RAM_SIZE+0x1b44d14>
    2008:	0b42240e 	bleq	108b048 <__RAM_SIZE+0xf8b048>
    200c:	0000000c 	andeq	r0, r0, ip
    2010:	00001d98 	muleq	r0, r8, sp
    2014:	10004e0c 	andne	r4, r0, ip, lsl #28
    2018:	00000004 	andeq	r0, r0, r4
    201c:	0000000c 	andeq	r0, r0, ip
    2020:	00001d98 	muleq	r0, r8, sp
    2024:	10004e10 	andne	r4, r0, r0, lsl lr
    2028:	00000004 	andeq	r0, r0, r4
    202c:	0000000c 	andeq	r0, r0, ip
    2030:	00001d98 	muleq	r0, r8, sp
    2034:	10004e14 	andne	r4, r0, r4, lsl lr
    2038:	00000004 	andeq	r0, r0, r4
    203c:	0000003c 	andeq	r0, r0, ip, lsr r0
    2040:	00001d98 	muleq	r0, r8, sp
    2044:	10004e18 	andne	r4, r0, r8, lsl lr
    2048:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    204c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2050:	86068507 	strhi	r8, [r6], -r7, lsl #10
    2054:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    2058:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    205c:	a80e4201 	stmdage	lr, {r0, r9, lr}
    2060:	0e0a7102 	adfeqe	f7, f2, f2
    2064:	6b0b421c 	blvs	2d28dc <__RAM_SIZE+0x1d28dc>
    2068:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    206c:	0a48020b 	beq	12028a0 <__RAM_SIZE+0x11028a0>
    2070:	0b421c0e 	bleq	10890b0 <__RAM_SIZE+0xf890b0>
    2074:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    2078:	00000b42 	andeq	r0, r0, r2, asr #22
    207c:	0000000c 	andeq	r0, r0, ip
    2080:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2084:	7c020001 	stcvc	0, cr0, [r2], {1}
    2088:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    208c:	00000018 	andeq	r0, r0, r8, lsl r0
    2090:	0000207c 	andeq	r2, r0, ip, ror r0
    2094:	10005278 	andne	r5, r0, r8, ror r2
    2098:	0000003c 	andeq	r0, r0, ip, lsr r0
    209c:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    20a0:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    20a4:	00000000 	andeq	r0, r0, r0
    20a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    20ac:	0000207c 	andeq	r2, r0, ip, ror r0
    20b0:	100052b4 			; <UNDEFINED> instruction: 0x100052b4
    20b4:	00000018 	andeq	r0, r0, r8, lsl r0
    20b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    20bc:	41018e02 	tstmi	r1, r2, lsl #28
    20c0:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    20c4:	00000008 	andeq	r0, r0, r8
    20c8:	0000000c 	andeq	r0, r0, ip
    20cc:	0000207c 	andeq	r2, r0, ip, ror r0
    20d0:	100052cc 	andne	r5, r0, ip, asr #5
    20d4:	00000002 	andeq	r0, r0, r2
    20d8:	00000028 	andeq	r0, r0, r8, lsr #32
    20dc:	0000207c 	andeq	r2, r0, ip, ror r0
    20e0:	100052d0 	ldrdne	r5, [r0], -r0
    20e4:	000002ca 	andeq	r0, r0, sl, asr #5
    20e8:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    20ec:	86068507 	strhi	r8, [r6], -r7, lsl #10
    20f0:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    20f4:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    20f8:	300e4301 	andcc	r4, lr, r1, lsl #6
    20fc:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    2100:	00000b42 	andeq	r0, r0, r2, asr #22
    2104:	00000018 	andeq	r0, r0, r8, lsl r0
    2108:	0000207c 	andeq	r2, r0, ip, ror r0
    210c:	1000559c 	mulne	r0, ip, r5
    2110:	00000030 	andeq	r0, r0, r0, lsr r0
    2114:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    2118:	180e4101 	stmdane	lr, {r0, r8, lr}
    211c:	00040e4c 	andeq	r0, r4, ip, asr #28
    2120:	00000014 	andeq	r0, r0, r4, lsl r0
    2124:	0000207c 	andeq	r2, r0, ip, ror r0
    2128:	100055cc 	andne	r5, r0, ip, asr #11
    212c:	0000000a 	andeq	r0, r0, sl
    2130:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2134:	00018e02 	andeq	r8, r1, r2, lsl #28
    2138:	00000014 	andeq	r0, r0, r4, lsl r0
    213c:	0000207c 	andeq	r2, r0, ip, ror r0
    2140:	100055d8 	ldrdne	r5, [r0], -r8
    2144:	00000012 	andeq	r0, r0, r2, lsl r0
    2148:	83080e41 	movwhi	r0, #36417	; 0x8e41
    214c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2150:	00000014 	andeq	r0, r0, r4, lsl r0
    2154:	0000207c 	andeq	r2, r0, ip, ror r0
    2158:	00000000 	andeq	r0, r0, r0
    215c:	00000006 	andeq	r0, r0, r6
    2160:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2164:	00018e02 	andeq	r8, r1, r2, lsl #28
    2168:	00000014 	andeq	r0, r0, r4, lsl r0
    216c:	0000207c 	andeq	r2, r0, ip, ror r0
    2170:	00000000 	andeq	r0, r0, r0
    2174:	00000006 	andeq	r0, r0, r6
    2178:	83080e41 	movwhi	r0, #36417	; 0x8e41
    217c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2180:	0000000c 	andeq	r0, r0, ip
    2184:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2188:	7c020001 	stcvc	0, cr0, [r2], {1}
    218c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2190:	00000014 	andeq	r0, r0, r4, lsl r0
    2194:	00002180 	andeq	r2, r0, r0, lsl #3
    2198:	100055f0 	strdne	r5, [r0], -r0
    219c:	0000000e 	andeq	r0, r0, lr
    21a0:	83080e42 	movwhi	r0, #36418	; 0x8e42
    21a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    21a8:	0000000c 	andeq	r0, r0, ip
    21ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21b0:	7c020001 	stcvc	0, cr0, [r2], {1}
    21b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    21b8:	00000018 	andeq	r0, r0, r8, lsl r0
    21bc:	000021a8 	andeq	r2, r0, r8, lsr #3
    21c0:	00000000 	andeq	r0, r0, r0
    21c4:	00000030 	andeq	r0, r0, r0, lsr r0
    21c8:	83100e41 	tsthi	r0, #1040	; 0x410
    21cc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    21d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    21d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    21d8:	000021a8 	andeq	r2, r0, r8, lsr #3
    21dc:	00000000 	andeq	r0, r0, r0
    21e0:	0000004c 	andeq	r0, r0, ip, asr #32
    21e4:	83180e42 	tsthi	r8, #1056	; 0x420
    21e8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    21ec:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    21f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    21f4:	00000024 	andeq	r0, r0, r4, lsr #32
    21f8:	000021a8 	andeq	r2, r0, r8, lsr #3
    21fc:	00000000 	andeq	r0, r0, r0
    2200:	00000056 	andeq	r0, r0, r6, asr r0
    2204:	83100e42 	tsthi	r0, #1056	; 0x420
    2208:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    220c:	5c018e02 	stcpl	14, cr8, [r1], {2}
    2210:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2214:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2218:	0000000b 	andeq	r0, r0, fp
    221c:	00000020 	andeq	r0, r0, r0, lsr #32
    2220:	000021a8 	andeq	r2, r0, r8, lsr #3
    2224:	00000000 	andeq	r0, r0, r0
    2228:	00000064 	andeq	r0, r0, r4, rrx
    222c:	83100e45 	tsthi	r0, #1104	; 0x450
    2230:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2234:	6a018e02 	bvs	65a44 <__HEAP_SIZE+0x64a44>
    2238:	c4c3000e 	strbgt	r0, [r3], #14
    223c:	0000cec5 	andeq	ip, r0, r5, asr #29
    2240:	00000024 	andeq	r0, r0, r4, lsr #32
    2244:	000021a8 	andeq	r2, r0, r8, lsr #3
    2248:	10005600 	andne	r5, r0, r0, lsl #12
    224c:	0000005c 	andeq	r0, r0, ip, asr r0
    2250:	83100e41 	tsthi	r0, #1040	; 0x410
    2254:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2258:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    225c:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2260:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2264:	0000000b 	andeq	r0, r0, fp
    2268:	00000018 	andeq	r0, r0, r8, lsl r0
    226c:	000021a8 	andeq	r2, r0, r8, lsr #3
    2270:	00000000 	andeq	r0, r0, r0
    2274:	00000054 	andeq	r0, r0, r4, asr r0
    2278:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    227c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2280:	00018e02 	andeq	r8, r1, r2, lsl #28
    2284:	00000018 	andeq	r0, r0, r8, lsl r0
    2288:	000021a8 	andeq	r2, r0, r8, lsr #3
    228c:	00000000 	andeq	r0, r0, r0
    2290:	00000038 	andeq	r0, r0, r8, lsr r0
    2294:	83100e41 	tsthi	r0, #1040	; 0x410
    2298:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    229c:	00018e02 	andeq	r8, r1, r2, lsl #28
    22a0:	00000018 	andeq	r0, r0, r8, lsl r0
    22a4:	000021a8 	andeq	r2, r0, r8, lsr #3
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	00000068 	andeq	r0, r0, r8, rrx
    22b0:	83100e41 	tsthi	r0, #1040	; 0x410
    22b4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22bc:	0000000c 	andeq	r0, r0, ip
    22c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    22c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    22c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    22cc:	00000018 	andeq	r0, r0, r8, lsl r0
    22d0:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    22d4:	1000565c 	andne	r5, r0, ip, asr r6
    22d8:	0000002c 	andeq	r0, r0, ip, lsr #32
    22dc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    22e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    22e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22e8:	0000000c 	andeq	r0, r0, ip
    22ec:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    22f0:	10005688 	andne	r5, r0, r8, lsl #13
    22f4:	00000004 	andeq	r0, r0, r4
